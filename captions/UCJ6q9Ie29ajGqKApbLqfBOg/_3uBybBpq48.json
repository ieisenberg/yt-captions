[
  {
    "text": "in this talk I introduce a tool name op Ro which let you f the Rope gadget for R",
    "start": "199",
    "end": "6759"
  },
  {
    "text": "programming like you can never never do before so subcribe in Innovative uh",
    "start": "6759",
    "end": "13120"
  },
  {
    "text": "tunes for you uh to program your R uh Ro",
    "start": "13120",
    "end": "18279"
  },
  {
    "text": "sh Cod okay so my the motivation behind my",
    "start": "18279",
    "end": "25160"
  },
  {
    "text": "talk is that um group programming is very hard but",
    "start": "25160",
    "end": "30560"
  },
  {
    "text": "uh on the current rope tun are not very helpful you you must still find the Rope",
    "start": "30560",
    "end": "36800"
  },
  {
    "text": "CET yourself and you you must still uh change the r CET yourself manually so uh",
    "start": "36800",
    "end": "44920"
  },
  {
    "text": "nothing can help much and to fix the problem I come up with a tune named",
    "start": "44920",
    "end": "51320"
  },
  {
    "text": "op and the the cor idea op the Rope is um to BU around the semantic query so",
    "start": "51320",
    "end": "57440"
  },
  {
    "text": "you can you can you can look for the Rope C using semantic queries rather than um syntactic query and so in the",
    "start": "57440",
    "end": "67119"
  },
  {
    "text": "talk this talk I will first uh take a short discussion on the backround of",
    "start": "67119",
    "end": "74560"
  },
  {
    "text": "rope gget and rope sh go and I introduce the problem on the current rope Tes and",
    "start": "74560",
    "end": "80840"
  },
  {
    "text": "next I um I introduce the op the ideas behind this tone the design and the",
    "start": "80840",
    "end": "88600"
  },
  {
    "text": "implementation and um there a lot of light",
    "start": "88600",
    "end": "94320"
  },
  {
    "text": "demos okay so first um show attack we will know that",
    "start": "94320",
    "end": "99840"
  },
  {
    "text": "um uh attacker abuse software uh flaw to exploit the application and they trigger",
    "start": "99840",
    "end": "107960"
  },
  {
    "text": "the vulnerability with malicious input to excute the arer scope and to defense",
    "start": "107960",
    "end": "114640"
  },
  {
    "text": "against sare attack uh people introduce many exploitation mitigation so the idea",
    "start": "114640",
    "end": "120719"
  },
  {
    "text": "is that we accept that the sofware can be buggy but we make it very hard to exploit the bux if that U happen and um",
    "start": "120719",
    "end": "129560"
  },
  {
    "text": "people introduce many um M mitigation mechanism but on this talk I focus on",
    "start": "129560",
    "end": "135480"
  },
  {
    "text": "data executable prevention or DP DP is very widely deployed nowadays",
    "start": "135480",
    "end": "142160"
  },
  {
    "text": "it makes sure that input data from the article is unexecuted so the input",
    "start": "142160",
    "end": "147720"
  },
  {
    "text": "cannot imped the Mal just pilot inside anymore and",
    "start": "147720",
    "end": "153080"
  },
  {
    "text": "DP was introduced into the hardware level and present in all the modern",
    "start": "153080",
    "end": "158480"
  },
  {
    "text": "system nowadays so DP is everywhere however DP is not perfect um",
    "start": "158480",
    "end": "165360"
  },
  {
    "text": "to bypass DP uh people introduce the return oriented programming techniqu uh",
    "start": "165360",
    "end": "172000"
  },
  {
    "text": "LP in shot and LP can be used to defeat the DP so the idea is that uh the idea",
    "start": "172000",
    "end": "178280"
  },
  {
    "text": "of RP is that it makes sure the attacker is not needed to be inside into put data",
    "start": "178280",
    "end": "183920"
  },
  {
    "text": "anymore so you can defeat the DP by defense and the lp becomes the main",
    "start": "183920",
    "end": "190440"
  },
  {
    "text": "technique to rise shell go nowadays so the concept LP is that",
    "start": "190440",
    "end": "197080"
  },
  {
    "text": "um we don't use Co injection anymore but we use available go in exploited um",
    "start": "197080",
    "end": "204239"
  },
  {
    "text": "memory space V the vable application and we abuse the co spp it or we can call",
    "start": "204239",
    "end": "210879"
  },
  {
    "text": "that RP git and we change them change on the RP gget together to execute some",
    "start": "210879",
    "end": "219080"
  },
  {
    "text": "actions that we want and RP gret mostly come from unintended instruction and",
    "start": "219080",
    "end": "226599"
  },
  {
    "text": "people already prove that RP is toing completed which mean you can change the",
    "start": "226599",
    "end": "231680"
  },
  {
    "text": "RP git if you have enough git to do whatever you want so here's one LP example",
    "start": "231680",
    "end": "240879"
  },
  {
    "text": "uh in this example I we have some RP uh go inside the stack memory stack go from",
    "start": "240879",
    "end": "248120"
  },
  {
    "text": "top to bottom and U you can see here we have uh thises this C it and this C it",
    "start": "248120",
    "end": "256600"
  },
  {
    "text": "and something inside the stack so if you if you can jump to here this instruction",
    "start": "256600",
    "end": "263000"
  },
  {
    "text": "will be executed so pop edx in pop our FF",
    "start": "263000",
    "end": "268160"
  },
  {
    "text": "edcc right so after this edx become FF",
    "start": "268160",
    "end": "273520"
  },
  {
    "text": "edcc which actually is minus 1 2 34",
    "start": "273520",
    "end": "278880"
  },
  {
    "text": "right and after that we return to here which actually execute some some",
    "start": "278880",
    "end": "285759"
  },
  {
    "text": "instruction in the memory which is the S ex ex and return so after this ex become",
    "start": "285759",
    "end": "292960"
  },
  {
    "text": "zero right and we return to here which exq another instruction sub ex e ex edx",
    "start": "292960",
    "end": "302160"
  },
  {
    "text": "and red which which subtract ex subtract edx from ex ex because now",
    "start": "302160",
    "end": "308680"
  },
  {
    "text": "we have ex um we have ex is zero and edx",
    "start": "308680",
    "end": "313880"
  },
  {
    "text": "is minus 1 2 3 4 so after this it we set ex to one 2T one 2 T4 right 0 minus uh z",
    "start": "313880",
    "end": "323560"
  },
  {
    "text": "uh subtra minus 1 2 3 4 from zero we have um 1 2 3 4",
    "start": "323560",
    "end": "331639"
  },
  {
    "text": "okay so um we have many uh R we can change them together to achieve the",
    "start": "332520",
    "end": "337680"
  },
  {
    "text": "traditional go injection shell go so you can ride the traditional shell go using the Rope CET by chaining them together",
    "start": "337680",
    "end": "344880"
  },
  {
    "text": "and usually the Rope U sh go usually they it is implemented as a stage zero",
    "start": "344880",
    "end": "352080"
  },
  {
    "text": "which then remap the stage one memory to be executable and after that um we",
    "start": "352080",
    "end": "357440"
  },
  {
    "text": "change the control to to the stage one so we can see that actually R shle is",
    "start": "357440",
    "end": "364039"
  },
  {
    "text": "just to to execute the first T however you can see that rope",
    "start": "364039",
    "end": "371240"
  },
  {
    "text": "shle you can see that it dominate the future because um",
    "start": "371240",
    "end": "376319"
  },
  {
    "text": "nowadays the model system put more and more restriction on what drop C can do",
    "start": "376319",
    "end": "381599"
  },
  {
    "text": "to launch the the the next St first of uh in Windows 8 um they introduce some",
    "start": "381599",
    "end": "388759"
  },
  {
    "text": "mitigation so enfor enforce the policy who and where can code virtual unlock",
    "start": "388759",
    "end": "394840"
  },
  {
    "text": "and virtual protect to enable memor executable so it's very hard to con this",
    "start": "394840",
    "end": "400759"
  },
  {
    "text": "two function on Windows 8 so which mean",
    "start": "400759",
    "end": "405880"
  },
  {
    "text": "Windows set pushed the exploitation writer to do more work in stage",
    "start": "405880",
    "end": "411639"
  },
  {
    "text": "zero and I can imagine that in the future the modern future system can",
    "start": "411639",
    "end": "419160"
  },
  {
    "text": "totally forbid Co injection so no more stay one but we have to do everything in",
    "start": "419160",
    "end": "424599"
  },
  {
    "text": "state zero which mean we need to have full drop sh go no more no more stage",
    "start": "424599",
    "end": "430400"
  },
  {
    "text": "one and actually iOS already imp implemented this mitigation because U",
    "start": "430400",
    "end": "436919"
  },
  {
    "text": "they set the right place to be nonexecutable and only Side PA are",
    "start": "436919",
    "end": "443280"
  },
  {
    "text": "executable which mean rope is the only choice for C go so the the the sh go in",
    "start": "443280",
    "end": "450280"
  },
  {
    "text": "iOS must be fully r no more Trad traditional sh",
    "start": "450280",
    "end": "456919"
  },
  {
    "text": "go so we see that Ro pramming is very hard because you need to find the right",
    "start": "456919",
    "end": "462560"
  },
  {
    "text": "to change them to do what you want and you can see the full rope shle can",
    "start": "462560",
    "end": "468120"
  },
  {
    "text": "be night very hard take a lot of time to do to implement the the good sh go and",
    "start": "468120",
    "end": "476400"
  },
  {
    "text": "however um we can use a rope Tunes to have the to have your sh to rise the to",
    "start": "476400",
    "end": "483319"
  },
  {
    "text": "fire the r a and change them however the current R Tes are not very helpful",
    "start": "483319",
    "end": "490319"
  },
  {
    "text": "because what can they do is that given the binary contain contain in the C around time the r Tes that collect all",
    "start": "490319",
    "end": "497919"
  },
  {
    "text": "available in the in the miner and after that it can help us to find the r it",
    "start": "497919",
    "end": "504120"
  },
  {
    "text": "from The Collection however mostly on the Tes stop stop here and uh nothing",
    "start": "504120",
    "end": "510400"
  },
  {
    "text": "can automatically F the right and nothing can help us to change them",
    "start": "510400",
    "end": "515680"
  },
  {
    "text": "automatically we need to F the G our sh and we need to change the M shell",
    "start": "515680",
    "end": "521039"
  },
  {
    "text": "nothing can help so everything must be done manually so it's very dous very",
    "start": "521039",
    "end": "527279"
  },
  {
    "text": "boring at this stage to rise the RO sh go okay so here's a um some high level",
    "start": "527279",
    "end": "536360"
  },
  {
    "text": "Gadget we have few type Gadget like load store adjust cone and CIS first of all",
    "start": "536360",
    "end": "543240"
  },
  {
    "text": "load can load value to Reg first this um this C can copy EBP to e ax this one",
    "start": "543240",
    "end": "552000"
  },
  {
    "text": "copy D7 tox this one copy um value the memory into star",
    "start": "552000",
    "end": "559480"
  },
  {
    "text": "similar we can use this to copy Ed to memory this one some concrete value to",
    "start": "559480",
    "end": "568320"
  },
  {
    "text": "memory adjust change the CH adjust the",
    "start": "568320",
    "end": "574079"
  },
  {
    "text": "resistor by a constant or by a resistor and we can we can use a cone C to Cone",
    "start": "574079",
    "end": "582760"
  },
  {
    "text": "cone one function and finally the system con it can be used to excute the system",
    "start": "582760",
    "end": "589920"
  },
  {
    "text": "cone okay so here's what on the tradition r t do",
    "start": "589920",
    "end": "595000"
  },
  {
    "text": "inside they do two things first the get own the C to do that they locate on the",
    "start": "595000",
    "end": "600920"
  },
  {
    "text": "return instruction and after they work back few bu and look for look for",
    "start": "600920",
    "end": "605959"
  },
  {
    "text": "legitimate sequence instruction and say them so first one here we find the red",
    "start": "605959",
    "end": "612360"
  },
  {
    "text": "instruction and if you come back three bu we have a c that is three instruction",
    "start": "612360",
    "end": "619320"
  },
  {
    "text": "but if you come back for by we have one instruction and so on so that's how how",
    "start": "619320",
    "end": "626519"
  },
  {
    "text": "the own the r t uh locate and get the own the GES and the second thing um R",
    "start": "626519",
    "end": "634360"
  },
  {
    "text": "help us to do is that um we can give the r some questions and it can help us to",
    "start": "634360",
    "end": "640959"
  },
  {
    "text": "search and to look for the suitable gget so basically uh the r Tes go through the",
    "start": "640959",
    "end": "646680"
  },
  {
    "text": "list of all the collected gget and match them with the request from",
    "start": "646680",
    "end": "652600"
  },
  {
    "text": "users but mostly this one is important mostly they only use the regular",
    "start": "652600",
    "end": "658279"
  },
  {
    "text": "expression such on the C text that's what they they",
    "start": "658279",
    "end": "663639"
  },
  {
    "text": "do here's one example from a very nice St Nam Ro me so you can see here to F",
    "start": "663639",
    "end": "672279"
  },
  {
    "text": "own the um Gadget that copy something to e they give uh we the we give R the",
    "start": "672279",
    "end": "679880"
  },
  {
    "text": "query like this Mo uh resist um 30 30 bit resor and something behind so we",
    "start": "679880",
    "end": "689040"
  },
  {
    "text": "have return like this everything is about copy something to ask so we can",
    "start": "689040",
    "end": "694120"
  },
  {
    "text": "see that this cap searching is very typical in on the RO to they use some very simple syntactic searching some",
    "start": "694120",
    "end": "701160"
  },
  {
    "text": "regular expression searching right so the problem of own the TOs is",
    "start": "701160",
    "end": "707120"
  },
  {
    "text": "that syntactic searching is very um easy to implement and is a Innovation",
    "start": "707120",
    "end": "713839"
  },
  {
    "text": "solution and proven so all the r Tes implement this syntactic searching",
    "start": "713839",
    "end": "720760"
  },
  {
    "text": "mostly based on regular expression searching but the problem is that um the",
    "start": "720760",
    "end": "726360"
  },
  {
    "text": "the the result from the shirt is not complete which mean run don't F own the",
    "start": "726360",
    "end": "733000"
  },
  {
    "text": "C For You Second it don't f everything but it can miss",
    "start": "733000",
    "end": "739959"
  },
  {
    "text": "something um next U it might return many",
    "start": "739959",
    "end": "745639"
  },
  {
    "text": "irrelevant irrelevant gges which mean uh uh Z just not not helpful that one",
    "start": "745639",
    "end": "751600"
  },
  {
    "text": "cannot be used and very time consuming isuse uh Ro Tes nowadays because you",
    "start": "751600",
    "end": "756639"
  },
  {
    "text": "need to repeat TR and error repeat with different searching query to find the",
    "start": "756639",
    "end": "763279"
  },
  {
    "text": "razi for you and sometime because we have we don't have many CES",
    "start": "763279",
    "end": "769519"
  },
  {
    "text": "so we must use them properly but on the r TS currently cannot help you to do",
    "start": "769519",
    "end": "775320"
  },
  {
    "text": "that",
    "start": "775320",
    "end": "778320"
  },
  {
    "text": "so I show you some problem on the TOs now first of all you want to find the C that copy ebx tox which mean you want to",
    "start": "781199",
    "end": "788880"
  },
  {
    "text": "have something like this ex equal to ebx after the right so",
    "start": "788880",
    "end": "794800"
  },
  {
    "text": "the factor answer is that we do many syntactic uh syntactic searching mostly",
    "start": "794800",
    "end": "800880"
  },
  {
    "text": "based on regular expression for example we search for something like this copy something to wex and hopefully we have",
    "start": "800880",
    "end": "808839"
  },
  {
    "text": "this G right if we don't find anything we try",
    "start": "808839",
    "end": "814320"
  },
  {
    "text": "another question exchange with something and hopefully you have exchange ex ex",
    "start": "814320",
    "end": "819440"
  },
  {
    "text": "with BX as a return but if you don't have this you need to go to the next",
    "start": "819440",
    "end": "824839"
  },
  {
    "text": "question load effective you ask with something and hopefully you have this in",
    "start": "824839",
    "end": "830360"
  },
  {
    "text": "the return CET so to find one G we need to try many",
    "start": "830360",
    "end": "837720"
  },
  {
    "text": "questions so first question that do you miss something do you miss any promising",
    "start": "837720",
    "end": "843040"
  },
  {
    "text": "searching question here first one we miss this one exchange",
    "start": "843040",
    "end": "849680"
  },
  {
    "text": "ex ex with something we miss this one this one set ex to b x",
    "start": "849680",
    "end": "855560"
  },
  {
    "text": "right so we miss this one we miss this one as well multiple ebx with one and",
    "start": "855560",
    "end": "864120"
  },
  {
    "text": "aide that tox we miss this right so CH",
    "start": "864120",
    "end": "869600"
  },
  {
    "text": "equation but we still miss something and anything El still missing I don't know maybe people with more",
    "start": "869600",
    "end": "876600"
  },
  {
    "text": "experience can tell me so the question true is that how many queries and effort do we need to find this simple probably",
    "start": "876600",
    "end": "882920"
  },
  {
    "text": "many a lot of effort a lot of time okay the next uh",
    "start": "882920",
    "end": "890800"
  },
  {
    "text": "questions um we still need to F the G that copy ebx tox now can you tell me",
    "start": "890800",
    "end": "897519"
  },
  {
    "text": "which syntactic can f is below this one so XX which mean ZX right",
    "start": "897519",
    "end": "906839"
  },
  {
    "text": "and after that PO I and finally add ex with with e BX to ex and copy to X this",
    "start": "906839",
    "end": "915519"
  },
  {
    "text": "one actually assign ebx to ex because here we have ex is zero now can you tell",
    "start": "915519",
    "end": "922079"
  },
  {
    "text": "me which syntactic query can find this nothing right because all you do is",
    "start": "922079",
    "end": "928639"
  },
  {
    "text": "a semantic we have a semantic um G here which mean you need to understand how it",
    "start": "928639",
    "end": "936079"
  },
  {
    "text": "how it work inside not not how it looks and this one so ex with itself and not",
    "start": "936079",
    "end": "942560"
  },
  {
    "text": "ex which mean we have ex is minus one here right",
    "start": "942560",
    "end": "949240"
  },
  {
    "text": "F and finally n ex with ebx which",
    "start": "949240",
    "end": "954399"
  },
  {
    "text": "mean uh copy evx to X so this one also copy X DX but can you tell me which",
    "start": "954399",
    "end": "962040"
  },
  {
    "text": "syntactic query find this maybe nothing this one exchange ebx tox which mean um",
    "start": "962040",
    "end": "969560"
  },
  {
    "text": "copy uh ebx to E X and next exchange e e",
    "start": "969560",
    "end": "975680"
  },
  {
    "text": "ax which mean copy e CX to X because we have e CX equal to ebx here so finally",
    "start": "975680",
    "end": "983160"
  },
  {
    "text": "you have e x equal to e BX after this C and no syntactic U query can can help me",
    "start": "983160",
    "end": "991680"
  },
  {
    "text": "def this and finally put ebx and after that later put ex out also copy ebx tox",
    "start": "991680",
    "end": "1000199"
  },
  {
    "text": "but syntactic query cannot help",
    "start": "1000199",
    "end": "1005279"
  },
  {
    "text": "so another qu another question we need to find that P which",
    "start": "1005279",
    "end": "1010880"
  },
  {
    "text": "mean migrate St to somewhere that is under our control so suest all the",
    "start": "1010880",
    "end": "1016639"
  },
  {
    "text": "following questions searching for for exchange U ESP something exchange some",
    "start": "1016639",
    "end": "1025038"
  },
  {
    "text": "with ESP and something with ESP you can whatever instruction and after that we",
    "start": "1025039",
    "end": "1031038"
  },
  {
    "text": "need to look through all the return to decide which one is good which one is the right one so any",
    "start": "1031039",
    "end": "1038360"
  },
  {
    "text": "missing any missing thing here any missing qu",
    "start": "1038360",
    "end": "1044360"
  },
  {
    "text": "here we miss this one right copy EBP to",
    "start": "1044520",
    "end": "1051320"
  },
  {
    "text": "ESB so we try many but we still miss something so other problem is",
    "start": "1051320",
    "end": "1059000"
  },
  {
    "text": "that on the current R you can see that nothing can report the semantics of the",
    "start": "1059000",
    "end": "1064880"
  },
  {
    "text": "shet table G which mean it returns a lot of G but nothing can tell me the",
    "start": "1064880",
    "end": "1070000"
  },
  {
    "text": "semantic of each G first all nothing can tell me which regor is modified in this",
    "start": "1070000",
    "end": "1075280"
  },
  {
    "text": "CET which eax is modifi in this C G and how many buy the St poter is Advance",
    "start": "1075280",
    "end": "1082640"
  },
  {
    "text": "after this CET nothing can tell me it only return me the the r text of the of",
    "start": "1082640",
    "end": "1088080"
  },
  {
    "text": "the gget assembly and more importantly no T can",
    "start": "1088080",
    "end": "1093799"
  },
  {
    "text": "change available it fathers requested semantic for nothing can uh uh can",
    "start": "1093799",
    "end": "1102559"
  },
  {
    "text": "return this you can see here we can combine two c and ch ch two c together",
    "start": "1102559",
    "end": "1108280"
  },
  {
    "text": "change ex ex ex red and exchange edx e ex because this",
    "start": "1108280",
    "end": "1114000"
  },
  {
    "text": "one uh make ex zero so this one copy zero to ex which is zero tox so finally",
    "start": "1114000",
    "end": "1121520"
  },
  {
    "text": "havex is zero so you can see that notun can help me to change available G to do",
    "start": "1121520",
    "end": "1127720"
  },
  {
    "text": "something I want for I want to asside Z to here no can help me to find these two",
    "start": "1127720",
    "end": "1134080"
  },
  {
    "text": "G and combine them together and this one also this one actually copy minus 88 to",
    "start": "1134080",
    "end": "1141320"
  },
  {
    "text": "ESI right and change that with this one ESI is minus 8 so is I + 8 is zero so",
    "start": "1141320",
    "end": "1150559"
  },
  {
    "text": "effectively you have ex X is edx equal to edx here and no tone available can",
    "start": "1150559",
    "end": "1158400"
  },
  {
    "text": "fight these two and change them for me nothing absolutely",
    "start": "1158400",
    "end": "1164360"
  },
  {
    "text": "nothing so",
    "start": "1164360",
    "end": "1168360"
  },
  {
    "text": "because everything sucks so we need to have some some some solution and I can",
    "start": "1170159",
    "end": "1175840"
  },
  {
    "text": "up the to name of the Rope which can help you to F the CIT like you can never",
    "start": "1175840",
    "end": "1182520"
  },
  {
    "text": "do before so here's what I want for the op rope first I want to do SE semantic",
    "start": "1182520",
    "end": "1189799"
  },
  {
    "text": "searching rather than syntactic searching so the idea is that the",
    "start": "1189799",
    "end": "1195240"
  },
  {
    "text": "semantic query I use semantic query rather than syntactic query which mean I",
    "start": "1195240",
    "end": "1201039"
  },
  {
    "text": "rely on the meaning of Z but not how Z look like not syntactic but semantic",
    "start": "1201039",
    "end": "1209000"
  },
  {
    "text": "first here's a my semantic query ex",
    "start": "1209000",
    "end": "1214400"
  },
  {
    "text": "equal to I copy the value the memory pointed by ebx tox",
    "start": "1214400",
    "end": "1222400"
  },
  {
    "text": "and this query can return this two G",
    "start": "1222400",
    "end": "1228000"
  },
  {
    "text": "uh sorry this one should be inside the the Mark here and this",
    "start": "1229280",
    "end": "1235880"
  },
  {
    "text": "this query ESI equal to EDI which mean I want to copy EDI toi this one should",
    "start": "1235880",
    "end": "1242159"
  },
  {
    "text": "return this to right so the idea is that I want to",
    "start": "1242159",
    "end": "1248880"
  },
  {
    "text": "do semantic query which specifies the semantic meaning of the and of the",
    "start": "1248880",
    "end": "1256159"
  },
  {
    "text": "should return me everything that match the request second uh second um Des side one",
    "start": "1256159",
    "end": "1264679"
  },
  {
    "text": "is that um op should um allow me to",
    "start": "1264679",
    "end": "1270720"
  },
  {
    "text": "specify the some option so I can fter out the git uh return for exle I want to",
    "start": "1270720",
    "end": "1277720"
  },
  {
    "text": "specify only I only want the git that modify this this register and don't",
    "start": "1277720",
    "end": "1283240"
  },
  {
    "text": "modify this register and I want to limit the amount of Stack",
    "start": "1283240",
    "end": "1289880"
  },
  {
    "text": "Advance after this CIT I don't want to the St pter to to advance too much for",
    "start": "1289880",
    "end": "1295559"
  },
  {
    "text": "example and the third uh uh request is that I want op to provide all the detail",
    "start": "1295559",
    "end": "1302600"
  },
  {
    "text": "meanings of the F for if op return this CET it should tell me that this CET",
    "start": "1302600",
    "end": "1309200"
  },
  {
    "text": "modify this resistor ex and those um flex and it should tell me that ESP is",
    "start": "1309200",
    "end": "1316640"
  },
  {
    "text": "Advanced by 0 bu after this so I want to have detail uh",
    "start": "1316640",
    "end": "1324279"
  },
  {
    "text": "semantics third one uh I want I want o to help me to change on",
    "start": "1324279",
    "end": "1331360"
  },
  {
    "text": "the selected CET if the natur natural git is not available which mean if want",
    "start": "1331360",
    "end": "1337480"
  },
  {
    "text": "to do something but the in the set of git we don't have anything like that we",
    "start": "1337480",
    "end": "1344640"
  },
  {
    "text": "I want to I want to F the git and chain them to do that for me so the last uh",
    "start": "1344640",
    "end": "1353640"
  },
  {
    "text": "the the chain available is very important",
    "start": "1353640",
    "end": "1358679"
  },
  {
    "text": "and that can help a lot and finally I want to support a lot",
    "start": "1358840",
    "end": "1364360"
  },
  {
    "text": "of platform 32 wi and 64 and own the um",
    "start": "1364360",
    "end": "1369559"
  },
  {
    "text": "modern system uh you can support U you should support Windows ma OS and Linux and even",
    "start": "1369559",
    "end": "1375960"
  },
  {
    "text": "draw B okay so we can see that all the other",
    "start": "1375960",
    "end": "1381400"
  },
  {
    "text": "Tunes available now it's here it they can only get the gget and they can do",
    "start": "1381400",
    "end": "1388600"
  },
  {
    "text": "some syntactic searching and some tune can do very simple semantic searching but op should go further we",
    "start": "1388600",
    "end": "1396679"
  },
  {
    "text": "should do the same thing like Gathering gget we can do syntactic searching we",
    "start": "1396679",
    "end": "1402679"
  },
  {
    "text": "should do very good sematic searching and finally we should be able to change",
    "start": "1402679",
    "end": "1407919"
  },
  {
    "text": "G automatically for you so we can compare Op with some very popular Tes",
    "start": "1407919",
    "end": "1414840"
  },
  {
    "text": "here so like here um nothing can do semantic query except um immunity",
    "start": "1414840",
    "end": "1422039"
  },
  {
    "text": "debuger but immunity debuger can do very basic function to change the to do",
    "start": "1422039",
    "end": "1427520"
  },
  {
    "text": "semantic uh semantic questions and nothing can change the C",
    "start": "1427520",
    "end": "1433960"
  },
  {
    "text": "and uh op should support everything on the platforms IM is very nice but they only support a",
    "start": "1433960",
    "end": "1441559"
  },
  {
    "text": "32bit of Windows now nothing else and that's my target my dream I want to",
    "start": "1441559",
    "end": "1448240"
  },
  {
    "text": "build something like this okay so next we come to the setic",
    "start": "1448240",
    "end": "1454710"
  },
  {
    "text": "[Music] query here I defy the stic query for",
    "start": "1454710",
    "end": "1459880"
  },
  {
    "text": "aope first of all for Lo type I I should be able to specify syy query likeis e to",
    "start": "1459880",
    "end": "1468760"
  },
  {
    "text": "EBP and op should F should file own the G that copy EBP to for",
    "start": "1468760",
    "end": "1476919"
  },
  {
    "text": "me right you can see on these three C it copy EBP to",
    "start": "1476919",
    "end": "1482640"
  },
  {
    "text": "ex start copy EDI to the memory at the",
    "start": "1482640",
    "end": "1489840"
  },
  {
    "text": "ebx and this sematic qu should return this to uh",
    "start": "1489840",
    "end": "1496240"
  },
  {
    "text": "K as we advance e by 5i and this query should",
    "start": "1496240",
    "end": "1504480"
  },
  {
    "text": "return this to K this one actually",
    "start": "1504480",
    "end": "1510640"
  },
  {
    "text": "uh what's this",
    "start": "1510640",
    "end": "1515520"
  },
  {
    "text": "okay this one is minus uh minus uh minus 9 so which is sh check minus 9 from HX",
    "start": "1516799",
    "end": "1523480"
  },
  {
    "text": "equal to uh 8 9 to HX right and and so",
    "start": "1523480",
    "end": "1529360"
  },
  {
    "text": "on so op should be able to process the semantic quy and keep all the on the G",
    "start": "1529360",
    "end": "1537200"
  },
  {
    "text": "that it can match the semantic query so the idea behind optic rope is that we build everything U around the",
    "start": "1537200",
    "end": "1545559"
  },
  {
    "text": "semantic query and we use semantic logical formula and internally generat the",
    "start": "1545559",
    "end": "1554159"
  },
  {
    "text": "semantic uh logic and formula on the own the go and and after this op allows",
    "start": "1554159",
    "end": "1560480"
  },
  {
    "text": "semantic query so we can spe we can describe the high level dection for the",
    "start": "1560480",
    "end": "1566520"
  },
  {
    "text": "C by by by give it the semantic query and O should be able to perform",
    "start": "1566520",
    "end": "1574799"
  },
  {
    "text": "searching semantic query based on The Logical formula using S&T solver and of the RO",
    "start": "1574799",
    "end": "1583159"
  },
  {
    "text": "can combine logical formula to change the C to produce the D",
    "start": "1583159",
    "end": "1588559"
  },
  {
    "text": "semantic actions so there some Ching a machine go uh first in Intel",
    "start": "1588559",
    "end": "1597159"
  },
  {
    "text": "platform machine instuction really overlap you can you can have many instuction but do the same thing for",
    "start": "1597159",
    "end": "1602919"
  },
  {
    "text": "exle the two instruction here actually they do actually the same thing and the",
    "start": "1602919",
    "end": "1608000"
  },
  {
    "text": "instruction can have multiple implicit side effect firstable boost instruction",
    "start": "1608000",
    "end": "1614039"
  },
  {
    "text": "actually does many inside it copy uh register into to the memory after that",
    "start": "1614039",
    "end": "1619200"
  },
  {
    "text": "decrease the spe St St pointer by four so we need to understand the",
    "start": "1619200",
    "end": "1626679"
  },
  {
    "text": "semantics of the instruction right so what we need to do is that we need to normalize all the machine code to some",
    "start": "1626679",
    "end": "1633640"
  },
  {
    "text": "intermate representation language and the intermediate",
    "start": "1633640",
    "end": "1639240"
  },
  {
    "text": "representation or IR must be very simple no overlap and I should Express the",
    "start": "1639240",
    "end": "1644880"
  },
  {
    "text": "semantics explicitly without side effect and I ask support static single",
    "start": "1644880",
    "end": "1651080"
  },
  {
    "text": "assignment this this one is important for the step of generating logical formula so the idea is that we need to",
    "start": "1651080",
    "end": "1658080"
  },
  {
    "text": "normalize the machine code and after that we we optimize it we translate the",
    "start": "1658080",
    "end": "1664320"
  },
  {
    "text": "machine go to some inter language after that we optimize it to make it more",
    "start": "1664320",
    "end": "1669399"
  },
  {
    "text": "Compact and finally the output of this step will be sent to the next step and the next step",
    "start": "1669399",
    "end": "1676880"
  },
  {
    "text": "here will generate logical formula from the optimized",
    "start": "1676880",
    "end": "1682720"
  },
  {
    "text": "IR so the question which I uh I should use and here in this project I use rvm",
    "start": "1682720",
    "end": "1688840"
  },
  {
    "text": "lvm is one open source project U originally introduced to BU compiler for you and it consist of a set of framework",
    "start": "1688840",
    "end": "1696200"
  },
  {
    "text": "to build compiler and lvm is build around one intermed Intermediate",
    "start": "1696200",
    "end": "1701519"
  },
  {
    "text": "Language Nam lvm and on top of lvm there a lot of",
    "start": "1701519",
    "end": "1707039"
  },
  {
    "text": "optimization modu ready to use so here is the the model ofm so if",
    "start": "1707039",
    "end": "1713519"
  },
  {
    "text": "you want to compile some high level language you use the lvm front end here",
    "start": "1713519",
    "end": "1720039"
  },
  {
    "text": "and lvm frontend will translate the language uh the S SC to",
    "start": "1720039",
    "end": "1725600"
  },
  {
    "text": "lvm and lvm be sent to the lvm optimizer which optimize it and this step can make",
    "start": "1725600",
    "end": "1732919"
  },
  {
    "text": "the go much smaller for example and after that after this step we have the lvm are already optimized and finally",
    "start": "1732919",
    "end": "1740519"
  },
  {
    "text": "the back end will compare the lvm to the native core just that's a model of the",
    "start": "1740519",
    "end": "1747159"
  },
  {
    "text": "lvm frame lvm framework so the idea is that U the lvm",
    "start": "1747159",
    "end": "1753559"
  },
  {
    "text": "I is very something very simple independent of architecture and it's SK",
    "start": "1753559",
    "end": "1761000"
  },
  {
    "text": "uh res Bas machine with uh unlimited number of virtual resistor resistor can",
    "start": "1761000",
    "end": "1767120"
  },
  {
    "text": "have high level type like Flo integer you can have uh",
    "start": "1767120",
    "end": "1773039"
  },
  {
    "text": "poters it support single static assignment by Nature by default and when",
    "start": "1773039",
    "end": "1778799"
  },
  {
    "text": "you compare from s to lvm we have lvm [Music] bitco and there are some at least here",
    "start": "1778799",
    "end": "1787799"
  },
  {
    "text": "some instruction for you lvm instruction so lvm has um face small number of",
    "start": "1787799",
    "end": "1794240"
  },
  {
    "text": "instruction only 31 instruction and they have to a to do arithmetic operation to do be wise",
    "start": "1794240",
    "end": "1802440"
  },
  {
    "text": "to branch and to access to memory thing like that so it's quite similar to the",
    "start": "1802440",
    "end": "1807919"
  },
  {
    "text": "low level assembly and here's the example uh if you compile the Cod on the",
    "start": "1807919",
    "end": "1813640"
  },
  {
    "text": "left side from c c to the lvm we have the go on the right side and the go on the right side is in lvm I which does",
    "start": "1813640",
    "end": "1822039"
  },
  {
    "text": "the go on the left side that's in C",
    "start": "1822039",
    "end": "1827840"
  },
  {
    "text": "okay after after the front front end we send the lvm to the to the optimization",
    "start": "1828640",
    "end": "1835320"
  },
  {
    "text": "and optimization can help you to optimize the Cod to be uh much smaller",
    "start": "1835320",
    "end": "1840399"
  },
  {
    "text": "much uh faster for example and there are a lot of U Optimizer already available",
    "start": "1840399",
    "end": "1846200"
  },
  {
    "text": "in lvm and you can you just need to use it you don't need to do anything so why I choose lvm",
    "start": "1846200",
    "end": "1853600"
  },
  {
    "text": "because this lvm is very good for normalization pH and they already provide the handy",
    "start": "1853600",
    "end": "1860840"
  },
  {
    "text": "framework so you can process the output I very easily and finally we can just use available",
    "start": "1860840",
    "end": "1868760"
  },
  {
    "text": "Optimizer in rvm to optimize the output after you translate the machine",
    "start": "1868760",
    "end": "1874519"
  },
  {
    "text": "go to lvm so there many adven and that's why I chose",
    "start": "1874519",
    "end": "1879799"
  },
  {
    "text": "lvm so see how how we look in the in the normalization phase I translate the",
    "start": "1879799",
    "end": "1887039"
  },
  {
    "text": "machine Cod to lvm after that I send the output which is the lvm bit at this St",
    "start": "1887039",
    "end": "1893440"
  },
  {
    "text": "to lvm optimizers and you can help me to optimize the go to to be something still",
    "start": "1893440",
    "end": "1899679"
  },
  {
    "text": "in lvm form but smaller and more",
    "start": "1899679",
    "end": "1905360"
  },
  {
    "text": "Compact and here's one example on the left side you can see one um Intel",
    "start": "1905360",
    "end": "1911639"
  },
  {
    "text": "instruction and on the right side I translated that instruction to the lvm",
    "start": "1911639",
    "end": "1918080"
  },
  {
    "text": "and you can see the go right side is actually quite quite longer because we",
    "start": "1918080",
    "end": "1923799"
  },
  {
    "text": "need to express on the implicit semantics of the Intel",
    "start": "1923799",
    "end": "1929720"
  },
  {
    "text": "instruction first you can see here we have a lot of instruction to update the flag",
    "start": "1929720",
    "end": "1935279"
  },
  {
    "text": "resistor uh the E Flex [Music] resistors okay skip some slide not very",
    "start": "1935279",
    "end": "1943240"
  },
  {
    "text": "important so here is one example on the left side on the on the in low block you",
    "start": "1943240",
    "end": "1949960"
  },
  {
    "text": "have the machine Cod and we compile this machine code to very long go in the in the pink block",
    "start": "1949960",
    "end": "1959399"
  },
  {
    "text": "and after this I optimize the go in the pink block and have something very",
    "start": "1959399",
    "end": "1965320"
  },
  {
    "text": "simple here why because here you can see the machine Cod here saw ex with sell after",
    "start": "1965320",
    "end": "1973279"
  },
  {
    "text": "that exchange evx with is sell Exchange evx that's nothing right this one is",
    "start": "1973279",
    "end": "1980080"
  },
  {
    "text": "that instruction and it high to ex because after this ex is zero so",
    "start": "1980080",
    "end": "1986200"
  },
  {
    "text": "finally what this code does is simply copy true to X right and that's that's",
    "start": "1986200",
    "end": "1993279"
  },
  {
    "text": "why the optimize go is very short so you can see the optimizer in lvm is very very nice you can do the",
    "start": "1993279",
    "end": "2001799"
  },
  {
    "text": "automization very [Music] well okay next uh because we um use smt",
    "start": "2001799",
    "end": "2009320"
  },
  {
    "text": "server in this project so I uh introduce briefly about smt server so smt server",
    "start": "2009320",
    "end": "2015320"
  },
  {
    "text": "is theorem approver based on the decision procedure and SNT server can",
    "start": "2015320",
    "end": "2022440"
  },
  {
    "text": "work with logical formula on different theories and most importantly SM server",
    "start": "2022440",
    "end": "2027919"
  },
  {
    "text": "can prove the satisfiability or validity of The Logical formula you can tell me",
    "start": "2027919",
    "end": "2033039"
  },
  {
    "text": "that the form loal formula is right or wrong true or false and in the case the",
    "start": "2033039",
    "end": "2039639"
  },
  {
    "text": "formula is true you can tell me the context in which context the formul is",
    "start": "2039639",
    "end": "2044960"
  },
  {
    "text": "true and so on and mly uh smt software is very smt",
    "start": "2044960",
    "end": "2052158"
  },
  {
    "text": "language is very suitable to express the behavior of the computer",
    "start": "2052159",
    "end": "2057320"
  },
  {
    "text": "program so uh in this project I use Z3 S&P server which come from microshop very nice project open short support",
    "start": "2057320",
    "end": "2064679"
  },
  {
    "text": "Linux and windows have Bing for C++ and python support beat Vector Theory so can",
    "start": "2064679",
    "end": "2071800"
  },
  {
    "text": "mod on the arithmetic and logic uh operation support array Theory so can model memory",
    "start": "2071800",
    "end": "2078960"
  },
  {
    "text": "access so here's how we generate the logic and formul from the machine code",
    "start": "2078960",
    "end": "2085320"
  },
  {
    "text": "for example here some this copy 48 to ESI copy 207 tox and you has logical",
    "start": "2085320",
    "end": "2092638"
  },
  {
    "text": "formula like ESI equal to 48 and edx equal to",
    "start": "2092639",
    "end": "2098359"
  },
  {
    "text": "207 it's easy right this logical formula Express what",
    "start": "2098359",
    "end": "2104119"
  },
  {
    "text": "this Cod does and here in case we have control uh we have the uh control flow",
    "start": "2104119",
    "end": "2111800"
  },
  {
    "text": "inside inside the machine code we need to consider that for for branches like",
    "start": "2111800",
    "end": "2117160"
  },
  {
    "text": "here have two Branch equal to somewhere so we need to",
    "start": "2117160",
    "end": "2122359"
  },
  {
    "text": "express the semantic of the branches here the two branch",
    "start": "2122359",
    "end": "2128800"
  },
  {
    "text": "[Music] okay so uh next step is that we need to",
    "start": "2129680",
    "end": "2135720"
  },
  {
    "text": "generate the loog and formula from the lvm so the idea is that we translate the",
    "start": "2135720",
    "end": "2141920"
  },
  {
    "text": "machine code to LV lvm here after that we generate the logic and formula from",
    "start": "2141920",
    "end": "2147480"
  },
  {
    "text": "the rvm how does it work I need to roll one",
    "start": "2147480",
    "end": "2154079"
  },
  {
    "text": "lvm pass to translate the bit code to smt logic formula and we I need to go to each",
    "start": "2154079",
    "end": "2161280"
  },
  {
    "text": "instruction in each lvm block basic block to to translate each instruction",
    "start": "2161280",
    "end": "2166440"
  },
  {
    "text": "to LM uh each lvm instruction to smt smt",
    "start": "2166440",
    "end": "2172480"
  },
  {
    "text": "formula okay so now we already you can",
    "start": "2172480",
    "end": "2178200"
  },
  {
    "text": "already uh generate the logic and formula from the K C the next St is that",
    "start": "2178200",
    "end": "2184280"
  },
  {
    "text": "we look at the op the RO model",
    "start": "2184280",
    "end": "2188839"
  },
  {
    "text": "so op rope has two phase first phase is lies on the traditional rtes we need to",
    "start": "2190040",
    "end": "2197599"
  },
  {
    "text": "prepare to get the own this St and the next St we come to",
    "start": "2197599",
    "end": "2206200"
  },
  {
    "text": "do the main things that we want to do to you can search for the git in the on the",
    "start": "2206200",
    "end": "2211480"
  },
  {
    "text": "collect the gadget in the first",
    "start": "2211480",
    "end": "2214880"
  },
  {
    "text": "phase the first place is um is done in traditional way like all the other R TS",
    "start": "2216520",
    "end": "2222960"
  },
  {
    "text": "we locate the red instruction and after that we walk back to collect on the legitimate sequence of instruction and",
    "start": "2222960",
    "end": "2230119"
  },
  {
    "text": "we say on the G we found so there's nothing special",
    "start": "2230119",
    "end": "2235800"
  },
  {
    "text": "here second stage for each g go which is assembly form we generate One S formula",
    "start": "2235800",
    "end": "2243599"
  },
  {
    "text": "for that so with each CIT we have some we have assembly C for the G right so I",
    "start": "2243599",
    "end": "2249880"
  },
  {
    "text": "normalize the Cod after that I optimize it and finally I generate the SMD",
    "start": "2249880",
    "end": "2256359"
  },
  {
    "text": "formula from the optimized lvm as I explained in the in the the last few",
    "start": "2256359",
    "end": "2262480"
  },
  {
    "text": "slide and you can see here that I bu oope on top of the framework Which con",
    "start": "2262480",
    "end": "2269240"
  },
  {
    "text": "true layer the bottom layer normalize the go for me and after",
    "start": "2269240",
    "end": "2274599"
  },
  {
    "text": "that optimize it the middle layer generat the logican the snd formula for",
    "start": "2274599",
    "end": "2279800"
  },
  {
    "text": "me so op is buil on top of these two",
    "start": "2279800",
    "end": "2284640"
  },
  {
    "text": "layers okay so this one thing uh I need to do in this ST which each CIT I need",
    "start": "2286200",
    "end": "2292319"
  },
  {
    "text": "to save you need to uh say on the modify reg of the CIT and on the stor how much",
    "start": "2292319",
    "end": "2299560"
  },
  {
    "text": "stor is Advanced which each CIT and here is how I calculate the how",
    "start": "2299560",
    "end": "2307040"
  },
  {
    "text": "much the stor is Advanced for each C so the",
    "start": "2307040",
    "end": "2312319"
  },
  {
    "text": "idea is that I this this time I ask the S solver to tell me how much is the",
    "start": "2312319",
    "end": "2320200"
  },
  {
    "text": "difference between the final value of the stor and the the first value of SP",
    "start": "2320200",
    "end": "2325560"
  },
  {
    "text": "tyor so this consist of two step is it easy to see from",
    "start": "2325560",
    "end": "2332760"
  },
  {
    "text": "behind okay I have G like this uh copy move ebx tox and return but",
    "start": "2332760",
    "end": "2340440"
  },
  {
    "text": "uh with TR and I generate the Lo and formula",
    "start": "2340440",
    "end": "2345480"
  },
  {
    "text": "from this CIT right we has a S&T formula like this and I",
    "start": "2345480",
    "end": "2353560"
  },
  {
    "text": "at one variable named diff diff is the",
    "start": "2353560",
    "end": "2358680"
  },
  {
    "text": "difference between es P1 which is the final value ESP of this CET subract U",
    "start": "2358680",
    "end": "2366560"
  },
  {
    "text": "minus to the Val esp1 and I asked the server for the model of this um this",
    "start": "2366560",
    "end": "2375200"
  },
  {
    "text": "smmt formula this one is always satisfy smt server can always find the D value",
    "start": "2375200",
    "end": "2382119"
  },
  {
    "text": "right first ofle here it return the diff is uh 16 which is 22 in U thisal mode",
    "start": "2382119",
    "end": "2391599"
  },
  {
    "text": "and generate I generate another formula which is I asked this time I",
    "start": "2391599",
    "end": "2396920"
  },
  {
    "text": "asked if ES1 minus ESP can be different from 22",
    "start": "2396920",
    "end": "2403480"
  },
  {
    "text": "or not and again I try to show this",
    "start": "2403480",
    "end": "2408800"
  },
  {
    "text": "formula if this one is set H sorry",
    "start": "2408800",
    "end": "2415240"
  },
  {
    "text": "unset this one should be unset which mean ESP is Advanced the value es ESP f",
    "start": "2415240",
    "end": "2422560"
  },
  {
    "text": "is exactly uh 22 but if just one is",
    "start": "2422560",
    "end": "2428520"
  },
  {
    "text": "set we can know that um ESP Advance is unknown we don't know how much ESP poter",
    "start": "2428520",
    "end": "2435040"
  },
  {
    "text": "is Advance after the after after the the because sometimes the ESP change and",
    "start": "2435040",
    "end": "2440920"
  },
  {
    "text": "that depend on the context so we don't always",
    "start": "2440920",
    "end": "2446200"
  },
  {
    "text": "know okay uh now we look at the looking into the CIT because the CET mostly even",
    "start": "2446839",
    "end": "2454400"
  },
  {
    "text": "around the register and require so we classify the try to F own the git based on",
    "start": "2454400",
    "end": "2463359"
  },
  {
    "text": "primitive git and the pr primitive CET is classified to two typ the P1 P2 P1 is",
    "start": "2463359",
    "end": "2470880"
  },
  {
    "text": "a CET that set register to another resistor first of this one is a Prive",
    "start": "2470880",
    "end": "2476560"
  },
  {
    "text": "resistor of Taiwan this one copy X tox P2 Z set res to immediate uh to some",
    "start": "2476560",
    "end": "2486240"
  },
  {
    "text": "constant first this one this it copy zero to EDI and after",
    "start": "2486240",
    "end": "2492520"
  },
  {
    "text": "that this one copy EDI to ex which mean make ex Z right so this it make ex0 so",
    "start": "2492520",
    "end": "2502160"
  },
  {
    "text": "this one is P2 set zero to a [Music] x this one set one resor to another",
    "start": "2502160",
    "end": "2509520"
  },
  {
    "text": "resor this one set one constant to one resor so we need to F on the pr",
    "start": "2509520",
    "end": "2515400"
  },
  {
    "text": "primitive C from the set of ConEd got it okay",
    "start": "2515400",
    "end": "2521440"
  },
  {
    "text": "so again I classify thetive g into two type first one is",
    "start": "2521440",
    "end": "2529200"
  },
  {
    "text": "natural GID second one is the chain GID is a natural G it we just pick the CID s",
    "start": "2529200",
    "end": "2536400"
  },
  {
    "text": "e we don't do anything C it is there we take we take it and is a na that's it we classify it",
    "start": "2536400",
    "end": "2544040"
  },
  {
    "text": "into two typ P one and P and two BN one set um resor to another resister this",
    "start": "2544040",
    "end": "2552079"
  },
  {
    "text": "one for example bn2 set some constant to register like",
    "start": "2552079",
    "end": "2559160"
  },
  {
    "text": "this and the third one is free resister git which mean we can set any value to",
    "start": "2559520",
    "end": "2566680"
  },
  {
    "text": "one regor and on this regor I I use a pop C which set res to the value popping",
    "start": "2566680",
    "end": "2572559"
  },
  {
    "text": "out from the bottom of the stack so we can freely get any constant to the",
    "start": "2572559",
    "end": "2577920"
  },
  {
    "text": "resist for here this one both ex from the from the",
    "start": "2577920",
    "end": "2583880"
  },
  {
    "text": "stack memory so you should you can push something can be anything into the into",
    "start": "2583880",
    "end": "2589599"
  },
  {
    "text": "the S and after that it po it out and this one can set do anything you want and this Ty is is very is very important",
    "start": "2589599",
    "end": "2598800"
  },
  {
    "text": "second one is chain pre this one this G should help me to",
    "start": "2598800",
    "end": "2605559"
  },
  {
    "text": "change different G it together combine them together so I don't need to do that manually so again I I classify the chain",
    "start": "2605559",
    "end": "2614800"
  },
  {
    "text": "uh PR primitive to three type pc1 PC2 and PC3",
    "start": "2614800",
    "end": "2620760"
  },
  {
    "text": "pc1 copy one to another register like this this one copy DX tox and after that",
    "start": "2620760",
    "end": "2629319"
  },
  {
    "text": "copy edx to E A sorry there one mistake",
    "start": "2629319",
    "end": "2634559"
  },
  {
    "text": "superx and this one finally DX tox PC2 copy",
    "start": "2634559",
    "end": "2641440"
  },
  {
    "text": "constant to one res like this orx with so which make ebx FF right after",
    "start": "2641440",
    "end": "2650000"
  },
  {
    "text": "that exchange ebx with ex and finally we have ex equal to",
    "start": "2650000",
    "end": "2655640"
  },
  {
    "text": "F the third one which is very interesting we have CIT that derive from",
    "start": "2655640",
    "end": "2662760"
  },
  {
    "text": "computed equation and this one we require the con to to achieve the target",
    "start": "2662760",
    "end": "2668720"
  },
  {
    "text": "um CET first of all here this one what it does multiple zero",
    "start": "2668720",
    "end": "2676160"
  },
  {
    "text": "with something and copy to ECX which mean copy zero to ECX right and here add",
    "start": "2676160",
    "end": "2685240"
  },
  {
    "text": "e ax to ECX because ECX is zero so after this you have e CX equal to e x right",
    "start": "2685240",
    "end": "2695319"
  },
  {
    "text": "this one we have some computation so you need to have some contion and how",
    "start": "2695319",
    "end": "2700400"
  },
  {
    "text": "to do that is a question okay so the first one P1 P1 is",
    "start": "2700400",
    "end": "2706240"
  },
  {
    "text": "to fation that's it that copy one register to another register so what I",
    "start": "2706240",
    "end": "2712119"
  },
  {
    "text": "do is that iate the uh S&T formula from the the CET and after that I try to",
    "start": "2712119",
    "end": "2719079"
  },
  {
    "text": "prove if this CES is equivalent to another CIT and this case I want to",
    "start": "2719079",
    "end": "2725920"
  },
  {
    "text": "prove that um es s i equal to e x right so i z the",
    "start": "2725920",
    "end": "2732720"
  },
  {
    "text": "um s& formula for this one and I add another formula here ESI = to",
    "start": "2732720",
    "end": "2740200"
  },
  {
    "text": "X and I try to prove G and F are",
    "start": "2740200",
    "end": "2745640"
  },
  {
    "text": "equal and if this work I can tell I can tell that ESI equal to after this if",
    "start": "2745640",
    "end": "2754839"
  },
  {
    "text": "this one is unset ESI is not equal to that's a",
    "start": "2754839",
    "end": "2760880"
  },
  {
    "text": "pn1 okay here's a [Music]",
    "start": "2760880",
    "end": "2765760"
  },
  {
    "text": "demo okay so here's the demo of the a i i this i i i c it from one um one binary",
    "start": "2770599",
    "end": "2780680"
  },
  {
    "text": "in the Linux and I collect I collected everything Own It owns SMP formula of",
    "start": "2780680",
    "end": "2786440"
  },
  {
    "text": "for each got it and now I can show [Music]",
    "start": "2786440",
    "end": "2797080"
  },
  {
    "text": "you here's a question can you see that this one is a",
    "start": "2797480",
    "end": "2803280"
  },
  {
    "text": "file that contain on the gget I collected and what I want is that I want to file own the gadget that copy edx to",
    "start": "2803280",
    "end": "2811160"
  },
  {
    "text": "a x right",
    "start": "2811160",
    "end": "2815880"
  },
  {
    "text": "okay so a lot some are very but some are very",
    "start": "2821359",
    "end": "2828359"
  },
  {
    "text": "interesting for example this one this one copy edx to right and this",
    "start": "2828359",
    "end": "2836040"
  },
  {
    "text": "one modify ex register of course and this one Advance the ESP by 4 bu after",
    "start": "2836040",
    "end": "2842480"
  },
  {
    "text": "this another one this one",
    "start": "2842480",
    "end": "2847559"
  },
  {
    "text": "exchange edxx so copy edx tox and return",
    "start": "2848559",
    "end": "2855440"
  },
  {
    "text": "something what is interesting here okay you can see a lot of but they",
    "start": "2855680",
    "end": "2864800"
  },
  {
    "text": "they all do the same thing copy DX tox okay the second type PN true copy",
    "start": "2864800",
    "end": "2873720"
  },
  {
    "text": "constant value to register so this one a bit different like this this got it copy zero to EDI",
    "start": "2873720",
    "end": "2882440"
  },
  {
    "text": "and after that copy EDI tox which mean copy 0 to ex right so this gu is set 0",
    "start": "2882440",
    "end": "2889559"
  },
  {
    "text": "to ex right so I generate The Logical formula the S&T formula and after",
    "start": "2889559",
    "end": "2895880"
  },
  {
    "text": "that I add something I try to find the the con if",
    "start": "2895880",
    "end": "2904200"
  },
  {
    "text": "this one has constant value so I try the model of this one and this one return",
    "start": "2904200",
    "end": "2910119"
  },
  {
    "text": "the result tell me that ex is always equal to zero after after the lit and I",
    "start": "2910119",
    "end": "2917079"
  },
  {
    "text": "can check that again I can have I can insert another another formula here I ask smt",
    "start": "2917079",
    "end": "2925680"
  },
  {
    "text": "sver if e ex can be different from zero or not and again I fit it to the s& server",
    "start": "2925680",
    "end": "2933920"
  },
  {
    "text": "if this one unset which mean es is always zero if as we said yes can be different to",
    "start": "2933920",
    "end": "2942000"
  },
  {
    "text": "zero it depend on the context but in this case ex is always",
    "start": "2942000",
    "end": "2948119"
  },
  {
    "text": "zero so here's another",
    "start": "2948119",
    "end": "2953680"
  },
  {
    "text": "demo again I R op the road and I want to F",
    "start": "2958720",
    "end": "2964720"
  },
  {
    "text": "own the C that copy zero to re",
    "start": "2964720",
    "end": "2968920"
  },
  {
    "text": "ask see lot of different things and here are something very interesting this one",
    "start": "2975440",
    "end": "2984520"
  },
  {
    "text": "you can never find this one with syntactic [Music] searching copy Z to",
    "start": "2984520",
    "end": "2991400"
  },
  {
    "text": "EDI after that copy to e which mean copy",
    "start": "2991400",
    "end": "2996920"
  },
  {
    "text": "Z to X so this one really copy Z to X and modify ex and EDI res and Advance",
    "start": "2996920",
    "end": "3005960"
  },
  {
    "text": "the ESP by 8 by because we pop something out here right and everything else you can see",
    "start": "3005960",
    "end": "3013680"
  },
  {
    "text": "everything else set e z to ex they look differently but they do the",
    "start": "3013680",
    "end": "3020079"
  },
  {
    "text": "same thing right",
    "start": "3020079",
    "end": "3025920"
  },
  {
    "text": "okay next one okay change C it I can change it",
    "start": "3026920",
    "end": "3035400"
  },
  {
    "text": "together because with available it you can change them and you can have pc1 PC2",
    "start": "3035400",
    "end": "3042440"
  },
  {
    "text": "and PC2 here so the idea is that pc1 PC2 copy the",
    "start": "3042440",
    "end": "3049520"
  },
  {
    "text": "register to another register which to copy constant value to another resister and the idea is that if we have have R2",
    "start": "3049520",
    "end": "3058400"
  },
  {
    "text": "equal to R1 and R3 equal to R2 you can combine this this two together and you",
    "start": "3058400",
    "end": "3063839"
  },
  {
    "text": "have R2 r equal to R1 right so the idea is that we find",
    "start": "3063839",
    "end": "3069520"
  },
  {
    "text": "two just set res to and can combis them so how we can do",
    "start": "3069520",
    "end": "3078119"
  },
  {
    "text": "that the idea is that I use some um very simple graph Theory algorithm and I bu a",
    "start": "3078280",
    "end": "3088079"
  },
  {
    "text": "Tre uh in the Tre one note is connected to another note with",
    "start": "3088079",
    "end": "3095000"
  },
  {
    "text": "uh the first note can be equal to the second note first of one here if ex can",
    "start": "3095000",
    "end": "3101760"
  },
  {
    "text": "be set to e ex can be set to ebx edx es I EBP I connect",
    "start": "3101760",
    "end": "3109279"
  },
  {
    "text": "them and because edx can be set to EDI e x and some constant I I con edx with EDI",
    "start": "3109440",
    "end": "3116280"
  },
  {
    "text": "and e and constant and you can see because there a path from ECX to edx to",
    "start": "3116280",
    "end": "3121760"
  },
  {
    "text": "e ax so e ex can be set to e x right",
    "start": "3121760",
    "end": "3127240"
  },
  {
    "text": "this a part so can you can bre them and because Z aart from constant to e x so",
    "start": "3127240",
    "end": "3133640"
  },
  {
    "text": "you can set constant to ex thanks to this gget and this gget you can you can",
    "start": "3133640",
    "end": "3142319"
  },
  {
    "text": "bre them you can go from you can jump from one to another and and each Z is",
    "start": "3142319",
    "end": "3149440"
  },
  {
    "text": "one so here's one",
    "start": "3149440",
    "end": "3153160"
  },
  {
    "text": "demo okay here's one more can see how effective this",
    "start": "3159799",
    "end": "3166240"
  },
  {
    "text": "is I try to find on the C that copy edx",
    "start": "3166240",
    "end": "3172240"
  },
  {
    "text": "tox nothing this no that copy DX to CX now I try to",
    "start": "3174160",
    "end": "3181079"
  },
  {
    "text": "change [Music] them steam the same question but I",
    "start": "3181079",
    "end": "3187319"
  },
  {
    "text": "change them with the one parameter C which mean change I want to F the G",
    "start": "3187319",
    "end": "3194319"
  },
  {
    "text": "automatically and change them to copy DX tox because the na G it cannot cannot do",
    "start": "3194319",
    "end": "3200960"
  },
  {
    "text": "that there no Nation G can do that for me okay a lot see",
    "start": "3200960",
    "end": "3208440"
  },
  {
    "text": "this is possible because we can connect can change together first point I had",
    "start": "3209960",
    "end": "3216400"
  },
  {
    "text": "two it this one copy X to X and second the second C it Xchange e x and this one",
    "start": "3216400",
    "end": "3224720"
  },
  {
    "text": "because copy edx tox and after X is exchange to e x so",
    "start": "3224720",
    "end": "3232599"
  },
  {
    "text": "you have e x equal tox right so you can f g that don't lose it but by combining",
    "start": "3232599",
    "end": "3240200"
  },
  {
    "text": "them you can do that my time is already running out so",
    "start": "3240200",
    "end": "3248359"
  },
  {
    "text": "probably I can just I should just focus on Theo okay you can this a slide",
    "start": "3248359",
    "end": "3256318"
  },
  {
    "text": "later this one this one",
    "start": "3258400",
    "end": "3263838"
  },
  {
    "text": "again I try to find own that copy edx tox and",
    "start": "3267119",
    "end": "3272400"
  },
  {
    "text": "here we have some complicated computation first one we insert",
    "start": "3272400",
    "end": "3279480"
  },
  {
    "text": "something to uh zero to stack memory and this got it both is C out so after",
    "start": "3279480",
    "end": "3288760"
  },
  {
    "text": "this we havex is zero right and the next discuss",
    "start": "3288760",
    "end": "3297680"
  },
  {
    "text": "it because ECX is zero so add edx to ECX",
    "start": "3297680",
    "end": "3303960"
  },
  {
    "text": "makes ECX edx because ECX already zero",
    "start": "3303960",
    "end": "3309599"
  },
  {
    "text": "right can you work out that so you can see we have you can do",
    "start": "3309599",
    "end": "3315520"
  },
  {
    "text": "some very complic complicated computation here and you change few G together and you can you can even uh",
    "start": "3315520",
    "end": "3323079"
  },
  {
    "text": "insert something into the St memory po it out doing something very uh complicated but finally we",
    "start": "3323079",
    "end": "3330280"
  },
  {
    "text": "achieve what you want anything interesting here okay this",
    "start": "3330280",
    "end": "3336799"
  },
  {
    "text": "one interesting this one is interesting the",
    "start": "3336799",
    "end": "3342559"
  },
  {
    "text": "last maybe last demo oh sorry too fast I want to find",
    "start": "3342559",
    "end": "3352880"
  },
  {
    "text": "that Advance ECX by 14 14",
    "start": "3352880",
    "end": "3358558"
  },
  {
    "text": "by see because there's nothing that Advance INX by 14 by",
    "start": "3358599",
    "end": "3365160"
  },
  {
    "text": "of five for me and change them first one Advance e by 4 by the second one Advance",
    "start": "3365160",
    "end": "3371720"
  },
  {
    "text": "e x by another 10 by so totally we advance is by totally 14 by",
    "start": "3371720",
    "end": "3379839"
  },
  {
    "text": "right so you can see auto rope is very very smart",
    "start": "3379839",
    "end": "3386480"
  },
  {
    "text": "finally because I'm running of time I show you another",
    "start": "3386480",
    "end": "3395599"
  },
  {
    "text": "thing so what what I what I saw so far is that um Auto come in the comment line",
    "start": "3396240",
    "end": "3401640"
  },
  {
    "text": "form but I already view uh web Bas for [Music]",
    "start": "3401640",
    "end": "3407440"
  },
  {
    "text": "the so here we go we want to F own the gret that set",
    "start": "3407440",
    "end": "3415799"
  },
  {
    "text": "zero to X",
    "start": "3415799",
    "end": "3420119"
  },
  {
    "text": "search so it take some time so please wait like few second okay so 22 it and",
    "start": "3421280",
    "end": "3429520"
  },
  {
    "text": "everything copy Z",
    "start": "3429520",
    "end": "3433440"
  },
  {
    "text": "to I put everything together into one web web web form okay so here is that",
    "start": "3437760",
    "end": "3445359"
  },
  {
    "text": "this one this one modify ESI",
    "start": "3445359",
    "end": "3450960"
  },
  {
    "text": "right so modify ESI pop ESI but I don't",
    "start": "3454480",
    "end": "3460000"
  },
  {
    "text": "want any G that modify ASI so I want to preserve",
    "start": "3460000",
    "end": "3465119"
  },
  {
    "text": "that okay I want to find owner that set Z to ex and preserve the value of ESI so",
    "start": "3465119",
    "end": "3471799"
  },
  {
    "text": "I input that here I can also specify how much stack memory is",
    "start": "3471799",
    "end": "3476880"
  },
  {
    "text": "after the C but I leave blank here search",
    "start": "3476880",
    "end": "3482039"
  },
  {
    "text": "again okay this time it filter out seven gget and it return me 12 uh 15 G only 15",
    "start": "3485839",
    "end": "3495119"
  },
  {
    "text": "G and everything preserve [Music] ESI okay come back to",
    "start": "3495119",
    "end": "3503960"
  },
  {
    "text": "slide actually I I don't I don't skip much uh so still not too",
    "start": "3503960",
    "end": "3512160"
  },
  {
    "text": "bad I had some chick to I actually I did a lot of chick to improve the",
    "start": "3512160",
    "end": "3517599"
  },
  {
    "text": "performance of opop here you can look look at the slide a lot of chick",
    "start": "3517599",
    "end": "3523720"
  },
  {
    "text": "interesting So currently in the op I implemented the web and common L",
    "start": "3524480",
    "end": "3529760"
  },
  {
    "text": "interface I have few framework framework to translate machine code to lvm zat SNT formula from the lvm bit go",
    "start": "3529760",
    "end": "3538599"
  },
  {
    "text": "go slicing which can uh you can you can see the slide and uh op not uh as a",
    "start": "3538599",
    "end": "3544960"
  },
  {
    "text": "moment support own the 32b and 64b platform of Intel with own the own gu",
    "start": "3544960",
    "end": "3550599"
  },
  {
    "text": "binary can be windows mest or Linux or even draw",
    "start": "3550599",
    "end": "3556000"
  },
  {
    "text": "binary conclusion o is an Innovative Tunes to fire R it for you it can",
    "start": "3556160",
    "end": "3564400"
  },
  {
    "text": "support the natural and easy the semantic questions we don't rely on the syntactic question",
    "start": "3564400",
    "end": "3569760"
  },
  {
    "text": "anymore internally we use compiler techniques lvm and SNT server to so many",
    "start": "3569760",
    "end": "3575680"
  },
  {
    "text": "many questions and op importantly it can change the St C together if there no",
    "start": "3575680",
    "end": "3583160"
  },
  {
    "text": "Nation it can do what you want and this to will be introduced to the public very",
    "start": "3583160",
    "end": "3589280"
  },
  {
    "text": "soon because currently the steel Bo fix this is a steel box I want to fix so",
    "start": "3589280",
    "end": "3594839"
  },
  {
    "text": "please it and uh you can watch out for this arrest when I uh release this t with be",
    "start": "3594839",
    "end": "3602119"
  },
  {
    "text": "at this arrest so finally here's one I summarize",
    "start": "3602119",
    "end": "3609039"
  },
  {
    "text": "the features of D compared to other other op the other Ro",
    "start": "3609039",
    "end": "3616599"
  },
  {
    "text": "TOS yes so any questions",
    "start": "3618760",
    "end": "3624039"
  },
  {
    "text": "repeat any questions sorry repeat any",
    "start": "3629880",
    "end": "3635759"
  },
  {
    "text": "okay which is",
    "start": "3642160",
    "end": "3645480"
  },
  {
    "text": "Li this one y yeah want to develop more methods to",
    "start": "3648960",
    "end": "3655599"
  },
  {
    "text": "change together I want to introduce higher level rather than only few typ",
    "start": "3655599",
    "end": "3661480"
  },
  {
    "text": "like what you saw I want to do full compiler based implementation it should",
    "start": "3661480",
    "end": "3666960"
  },
  {
    "text": "be do more than that I want to support",
    "start": "3666960",
    "end": "3671720"
  },
  {
    "text": "arm because now uh op only support Intel",
    "start": "3675200",
    "end": "3681359"
  },
  {
    "text": "platform uh sorry can",
    "start": "3684799",
    "end": "3688720"
  },
  {
    "text": "you okay I have one slide",
    "start": "3690599",
    "end": "3694640"
  },
  {
    "text": "here the question is how to translate machine code to lvm are you I I beting myself from",
    "start": "3699480",
    "end": "3708359"
  },
  {
    "text": "scratch so here this SL so basically I what I did is I bu",
    "start": "3708359",
    "end": "3716319"
  },
  {
    "text": "something like compiler front endend but for machine code language to translate machine code to lvm so I need to I need",
    "start": "3716319",
    "end": "3724480"
  },
  {
    "text": "to work out I need to analyze the machine Cod and work out on the the",
    "start": "3724480",
    "end": "3730839"
  },
  {
    "text": "control control flow graph consist of basic block and I translate each basic",
    "start": "3730839",
    "end": "3736079"
  },
  {
    "text": "block to lvm and inside each basic block I translate each machine instruction to",
    "start": "3736079",
    "end": "3741880"
  },
  {
    "text": "lvm and that's how how it work and for this step I need to reference the the",
    "start": "3741880",
    "end": "3748680"
  },
  {
    "text": "ISA menual on the the platform like this guy Intel in",
    "start": "3748680",
    "end": "3754520"
  },
  {
    "text": "Min to understand all the semantics of each instruction so I can translate",
    "start": "3754520",
    "end": "3762319"
  },
  {
    "text": "properly okay this assem because yeah actually I I use to say some work I",
    "start": "3773400",
    "end": "3781160"
  },
  {
    "text": "don't I don't translate D directly from the from machine Cod to to lvm but I",
    "start": "3781160",
    "end": "3787839"
  },
  {
    "text": "translate the machine code back to assembly so I use some assembly some",
    "start": "3787839",
    "end": "3793000"
  },
  {
    "text": "this assembly here so I translate what I did is that I translate machine code native machine code to assembly and",
    "start": "3793000",
    "end": "3800480"
  },
  {
    "text": "after that I translate assembly to lvm and that's how you work so I don't need",
    "start": "3800480",
    "end": "3805960"
  },
  {
    "text": "to understand how the this assembly work inside and for this uh because of it I",
    "start": "3805960",
    "end": "3812440"
  },
  {
    "text": "can I can very easily translate uh 32bit and 64 bit to",
    "start": "3812440",
    "end": "3818880"
  },
  {
    "text": "every I don't I don't work as a low level but I I use some assembly this yeah",
    "start": "3818880",
    "end": "3826720"
  },
  {
    "text": "how use to make okay this project is pretty this",
    "start": "3827599",
    "end": "3836119"
  },
  {
    "text": "one actually not chion and okay this one",
    "start": "3836119",
    "end": "3842038"
  },
  {
    "text": "slide uh I use mainly use Python and C++ to to do own the programming and um this",
    "start": "3842960",
    "end": "3850279"
  },
  {
    "text": "one this project uh take about I think like about 10,000 life 10,000 lies AG",
    "start": "3850279",
    "end": "3857319"
  },
  {
    "text": "go so it's not Che at all take a lot of time to",
    "start": "3857319",
    "end": "3862319"
  },
  {
    "text": "work you",
    "start": "3863559",
    "end": "3867559"
  },
  {
    "text": "okay that's a good question I have one slide for that here where is",
    "start": "3871960",
    "end": "3878760"
  },
  {
    "text": "it okay this one actually lvm has 30 31 instruction but I don't I",
    "start": "3892480",
    "end": "3899720"
  },
  {
    "text": "don't use everything I only use subset of the those instruction because inside",
    "start": "3899720",
    "end": "3905079"
  },
  {
    "text": "ofm have some instruction that work for high level information so you can",
    "start": "3905079",
    "end": "3910240"
  },
  {
    "text": "translate the high level s go to lvm and those instruction that contain the high",
    "start": "3910240",
    "end": "3918480"
  },
  {
    "text": "level information in the S I don't need",
    "start": "3918480",
    "end": "3923160"
  },
  {
    "text": "um every instruction that contain high level information like poters or yeah I can show you later but",
    "start": "3927799",
    "end": "3937400"
  },
  {
    "text": "basically I think I use only Li maybe 20 and we have",
    "start": "3937400",
    "end": "3944160"
  },
  {
    "text": "instruction any more questions",
    "start": "3947240",
    "end": "3951720"
  },
  {
    "text": "uh sorry uh this take some time because um",
    "start": "3959160",
    "end": "3966160"
  },
  {
    "text": "there still many things I want to do so maybe one or two month I'm not so sure",
    "start": "3966160",
    "end": "3972039"
  },
  {
    "text": "now yeah but I I want to push it out as soon as",
    "start": "3972039",
    "end": "3977798"
  },
  {
    "text": "possible so no more questions",
    "start": "3982440",
    "end": "3986960"
  },
  {
    "text": "thank you very much",
    "start": "3987920",
    "end": "3991400"
  }
]