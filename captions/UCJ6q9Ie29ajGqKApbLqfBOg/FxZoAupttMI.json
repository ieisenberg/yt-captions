[
  {
    "text": "this is uh data only poning Microsoft",
    "start": "240",
    "end": "2480"
  },
  {
    "text": "Windows kernel exploitation of konel",
    "start": "2480",
    "end": "4560"
  },
  {
    "text": "pool overflows on Microsoft Windows 8.1",
    "start": "4560",
    "end": "8000"
  },
  {
    "text": "with Nikita taranov tarakanov tarakanov",
    "start": "8000",
    "end": "12280"
  },
  {
    "text": "thank you very much so uh hello everyone",
    "start": "12280",
    "end": "17000"
  },
  {
    "text": "thank you for joining this talk so I'm",
    "start": "17000",
    "end": "19880"
  },
  {
    "text": "going to talk about exploiting pool",
    "start": "19880",
    "end": "21920"
  },
  {
    "text": "overflows on Microsoft Windows kernel",
    "start": "21920",
    "end": "24560"
  },
  {
    "text": "and uh with like long title right data",
    "start": "24560",
    "end": "28279"
  },
  {
    "text": "only Pony but in the end of the talk you",
    "start": "28279",
    "end": "30160"
  },
  {
    "text": "will understand why the title is",
    "start": "30160",
    "end": "33440"
  },
  {
    "text": "contains data only onlyon",
    "start": "33440",
    "end": "36640"
  },
  {
    "text": "so we're going to like briefly introduce",
    "start": "36640",
    "end": "40640"
  },
  {
    "text": "why pool overflows next time I'm going",
    "start": "40640",
    "end": "43320"
  },
  {
    "text": "to talk about some very very basics of",
    "start": "43320",
    "end": "47039"
  },
  {
    "text": "pool uh also cover previous research in",
    "start": "47039",
    "end": "50719"
  },
  {
    "text": "that area uh new idea mitigations and uh",
    "start": "50719",
    "end": "54160"
  },
  {
    "text": "question and answer section so talking",
    "start": "54160",
    "end": "56719"
  },
  {
    "text": "about uh kernel especially pool",
    "start": "56719",
    "end": "59320"
  },
  {
    "text": "overflows",
    "start": "59320",
    "end": "60559"
  },
  {
    "text": "like if we take a look how like uh",
    "start": "60559",
    "end": "63440"
  },
  {
    "text": "system get compromised the first step is",
    "start": "63440",
    "end": "67720"
  },
  {
    "text": "uh like soall Drive band download for",
    "start": "67720",
    "end": "70640"
  },
  {
    "text": "example uh uh",
    "start": "70640",
    "end": "72840"
  },
  {
    "text": "you surf in some website that is uh that",
    "start": "72840",
    "end": "76200"
  },
  {
    "text": "contains like exploit pack uh and the",
    "start": "76200",
    "end": "80479"
  },
  {
    "text": "attacker get execution but in ring three",
    "start": "80479",
    "end": "84920"
  },
  {
    "text": "and nowadays in",
    "start": "84920",
    "end": "87040"
  },
  {
    "text": "sandbox so attacking from sandbox uh",
    "start": "87040",
    "end": "91479"
  },
  {
    "text": "kernel is nice idea so you get uh you",
    "start": "91479",
    "end": "96560"
  },
  {
    "text": "like Escape sandbox and get code code",
    "start": "96560",
    "end": "100280"
  },
  {
    "text": "execution in kernel and it's pretty",
    "start": "100280",
    "end": "102280"
  },
  {
    "text": "pretty nice and nice examples uh",
    "start": "102280",
    "end": "105880"
  },
  {
    "text": "compromise of Internet Explorer uh this",
    "start": "105880",
    "end": "109640"
  },
  {
    "text": "year p toone and last",
    "start": "109640",
    "end": "112479"
  },
  {
    "text": "year so yeah following like five slides",
    "start": "112479",
    "end": "116680"
  },
  {
    "text": "it's very very Basics uh and if you want",
    "start": "116680",
    "end": "120079"
  },
  {
    "text": "to know like",
    "start": "120079",
    "end": "121880"
  },
  {
    "text": "deep deep details about how Pool Works",
    "start": "121880",
    "end": "125960"
  },
  {
    "text": "uh check work by",
    "start": "125960",
    "end": "127840"
  },
  {
    "text": "tarand he he did a lot a lot of research",
    "start": "127840",
    "end": "131800"
  },
  {
    "text": "on that subject so",
    "start": "131800",
    "end": "134000"
  },
  {
    "text": "basically uh pool header defines like",
    "start": "134000",
    "end": "136920"
  },
  {
    "text": "chunk of memory it contains several uh",
    "start": "136920",
    "end": "139640"
  },
  {
    "text": "Fields like previous size pool index",
    "start": "139640",
    "end": "141720"
  },
  {
    "text": "block size pull tab uh full tag and on",
    "start": "141720",
    "end": "145920"
  },
  {
    "text": "the 64 bits it differs a little bit cuz",
    "start": "145920",
    "end": "149200"
  },
  {
    "text": "it contains pointer to eess structure",
    "start": "149200",
    "end": "154239"
  },
  {
    "text": "so if the chunk is",
    "start": "154239",
    "end": "157280"
  },
  {
    "text": "free after pull header there's a",
    "start": "157280",
    "end": "160319"
  },
  {
    "text": "list there are two pointers basically",
    "start": "160319",
    "end": "162840"
  },
  {
    "text": "slink uh entry",
    "start": "162840",
    "end": "164480"
  },
  {
    "text": "structure uh like pointer to forward",
    "start": "164480",
    "end": "168800"
  },
  {
    "text": "chunk and to previous free",
    "start": "168800",
    "end": "170840"
  },
  {
    "text": "chunk also it's",
    "start": "170840",
    "end": "173239"
  },
  {
    "text": "nice to know how allocation uh takes",
    "start": "173239",
    "end": "177200"
  },
  {
    "text": "place first allocation uh comes uh in",
    "start": "177200",
    "end": "181360"
  },
  {
    "text": "the top and second and following from",
    "start": "181360",
    "end": "183200"
  },
  {
    "text": "the",
    "start": "183200",
    "end": "184599"
  },
  {
    "text": "bottom and uh also to avoid uh",
    "start": "184599",
    "end": "188400"
  },
  {
    "text": "fragmenting there is a algorithm to",
    "start": "188400",
    "end": "191480"
  },
  {
    "text": "merge uh adjacent free chunk for example",
    "start": "191480",
    "end": "194440"
  },
  {
    "text": "if you if you have like situation like",
    "start": "194440",
    "end": "196599"
  },
  {
    "text": "on that uh picture for example you have",
    "start": "196599",
    "end": "200920"
  },
  {
    "text": "two chunks and uh one is busy but is",
    "start": "200920",
    "end": "203840"
  },
  {
    "text": "going to be freed uh in the end kernel",
    "start": "203840",
    "end": "206840"
  },
  {
    "text": "uh makes one big uh free chunk",
    "start": "206840",
    "end": "211760"
  },
  {
    "text": "so uh as I already said talking about",
    "start": "211920",
    "end": "216280"
  },
  {
    "text": "attacks and the exploiting pool",
    "start": "216280",
    "end": "218560"
  },
  {
    "text": "overflows there are two ways it's",
    "start": "218560",
    "end": "221760"
  },
  {
    "text": "corrupting pool metadata and corrupting",
    "start": "221760",
    "end": "225799"
  },
  {
    "text": "not pool metadata for example object",
    "start": "225799",
    "end": "227680"
  },
  {
    "text": "metadata and uh talking about pool",
    "start": "227680",
    "end": "230760"
  },
  {
    "text": "metadata corruption uh there were a lot",
    "start": "230760",
    "end": "233319"
  },
  {
    "text": "of techniques mostly discovered by tari",
    "start": "233319",
    "end": "236319"
  },
  {
    "text": "uh so but the thing is if we take a look",
    "start": "236319",
    "end": "239439"
  },
  {
    "text": "that on Windows 7 he discovered a lot of",
    "start": "239439",
    "end": "241959"
  },
  {
    "text": "techniques on Windows 8 uh Microsoft",
    "start": "241959",
    "end": "245120"
  },
  {
    "text": "eliminated almost every technique and on",
    "start": "245120",
    "end": "247280"
  },
  {
    "text": "Windows 8.1 it's uh even more hard to",
    "start": "247280",
    "end": "252040"
  },
  {
    "text": "exploit uh pool overflows using metadata",
    "start": "252040",
    "end": "255239"
  },
  {
    "text": "pool metadata corruption techniques so",
    "start": "255239",
    "end": "258320"
  },
  {
    "text": "let's take a look briefly on object",
    "start": "258320",
    "end": "260600"
  },
  {
    "text": "metadata",
    "start": "260600",
    "end": "261799"
  },
  {
    "text": "corruption so uh when you allocate some",
    "start": "261800",
    "end": "265880"
  },
  {
    "text": "when you create some object like for",
    "start": "265880",
    "end": "267600"
  },
  {
    "text": "example file using Create file event and",
    "start": "267600",
    "end": "270199"
  },
  {
    "text": "semap for",
    "start": "270199",
    "end": "272479"
  },
  {
    "text": "uh object manager creates object uh of",
    "start": "272479",
    "end": "275840"
  },
  {
    "text": "course it uses some pool memory so there",
    "start": "275840",
    "end": "278240"
  },
  {
    "text": "is a PO header but po header is just",
    "start": "278240",
    "end": "281479"
  },
  {
    "text": "container and uh following is optional",
    "start": "281479",
    "end": "284560"
  },
  {
    "text": "headers depending on type of object",
    "start": "284560",
    "end": "287080"
  },
  {
    "text": "there could be several and after",
    "start": "287080",
    "end": "289840"
  },
  {
    "text": "optional headers there's object header",
    "start": "289840",
    "end": "291400"
  },
  {
    "text": "and after object's body so talking about",
    "start": "291400",
    "end": "295639"
  },
  {
    "text": "object header uh in object header there",
    "start": "295639",
    "end": "297759"
  },
  {
    "text": "is a",
    "start": "297759",
    "end": "299840"
  },
  {
    "text": "very interesting field which is type",
    "start": "299840",
    "end": "301520"
  },
  {
    "text": "index which is basically unsign Char by",
    "start": "301520",
    "end": "304280"
  },
  {
    "text": "and it's index in the array of uh",
    "start": "304280",
    "end": "308400"
  },
  {
    "text": "pointers and uh these pointers are",
    "start": "308400",
    "end": "311639"
  },
  {
    "text": "basically object types and they define",
    "start": "311639",
    "end": "314560"
  },
  {
    "text": "object",
    "start": "314560",
    "end": "316039"
  },
  {
    "text": "type uh this uh debac print is for",
    "start": "316039",
    "end": "320880"
  },
  {
    "text": "Windows 7 for Windows 8 because on",
    "start": "320880",
    "end": "323160"
  },
  {
    "text": "Windows 8.1 it looks a little bit",
    "start": "323160",
    "end": "326039"
  },
  {
    "text": "different so that structure object type",
    "start": "326039",
    "end": "329840"
  },
  {
    "text": "contains uh another structure and this",
    "start": "329840",
    "end": "332240"
  },
  {
    "text": "structure contains uh array of uh",
    "start": "332240",
    "end": "335280"
  },
  {
    "text": "function pointers so the thing is that",
    "start": "335280",
    "end": "338639"
  },
  {
    "text": "uh if you like for example closing",
    "start": "338639",
    "end": "343479"
  },
  {
    "text": "object uh depending on the type of uh",
    "start": "343479",
    "end": "347199"
  },
  {
    "text": "object uh object manager will call a",
    "start": "347199",
    "end": "350400"
  },
  {
    "text": "specific routine to close the object to",
    "start": "350400",
    "end": "353039"
  },
  {
    "text": "delete uh like uh Dynamic Point dynamic",
    "start": "353039",
    "end": "357520"
  },
  {
    "text": "memory that was allocated on a uh when",
    "start": "357520",
    "end": "360479"
  },
  {
    "text": "the object was created so basically it",
    "start": "360479",
    "end": "363600"
  },
  {
    "text": "looks like that there is a type index uh",
    "start": "363600",
    "end": "366319"
  },
  {
    "text": "there are array of uh pointers to real",
    "start": "366319",
    "end": "369240"
  },
  {
    "text": "object type and object type contains a",
    "start": "369240",
    "end": "372639"
  },
  {
    "text": "function pointer that will be",
    "start": "372639",
    "end": "374880"
  },
  {
    "text": "called so before Windows",
    "start": "374880",
    "end": "377759"
  },
  {
    "text": "8.1 uh if you take a look that first",
    "start": "377759",
    "end": "382479"
  },
  {
    "text": "elements uh first is zero and the second",
    "start": "382479",
    "end": "385880"
  },
  {
    "text": "one is some magic constant B so",
    "start": "385880",
    "end": "390199"
  },
  {
    "text": "and on 64 bits B always extended by",
    "start": "390199",
    "end": "393039"
  },
  {
    "text": "zeros so basically that kind of magical",
    "start": "393039",
    "end": "397120"
  },
  {
    "text": "value is allocate it's memory that",
    "start": "397120",
    "end": "400639"
  },
  {
    "text": "resides in user",
    "start": "400639",
    "end": "402199"
  },
  {
    "text": "mode address space so the thing is that",
    "start": "402199",
    "end": "405880"
  },
  {
    "text": "attacker can simply before Windows 8.1",
    "start": "405880",
    "end": "408800"
  },
  {
    "text": "can simply smash type index with a zero",
    "start": "408800",
    "end": "412720"
  },
  {
    "text": "or one value uh allocate a fake uh",
    "start": "412720",
    "end": "417240"
  },
  {
    "text": "object type at zero address or",
    "start": "417240",
    "end": "420360"
  },
  {
    "text": "and redirect uh and hijack execution",
    "start": "420360",
    "end": "423280"
  },
  {
    "text": "flow so on Windows",
    "start": "423280",
    "end": "425840"
  },
  {
    "text": "8.1 uh Microsoft uh didn't change uh",
    "start": "425840",
    "end": "429720"
  },
  {
    "text": "first element CU on 8 on 8.1 you can't",
    "start": "429720",
    "end": "433840"
  },
  {
    "text": "allocate at zero address but second uh",
    "start": "433840",
    "end": "436960"
  },
  {
    "text": "element they change it to address and",
    "start": "436960",
    "end": "439800"
  },
  {
    "text": "actually this address",
    "start": "439800",
    "end": "441560"
  },
  {
    "text": "they on the in the very early boot",
    "start": "441560",
    "end": "445240"
  },
  {
    "text": "booting process of Windows when object",
    "start": "445240",
    "end": "446960"
  },
  {
    "text": "manager creates object types uh it",
    "start": "446960",
    "end": "449560"
  },
  {
    "text": "allocates memory so for user mode",
    "start": "449560",
    "end": "452599"
  },
  {
    "text": "attacker uh there is no possibility to",
    "start": "452599",
    "end": "458280"
  },
  {
    "text": "somehow alter that memory so it there is",
    "start": "458280",
    "end": "462280"
  },
  {
    "text": "no way to uh inject memory there so this",
    "start": "462280",
    "end": "466800"
  },
  {
    "text": "attack using like bad and type index one",
    "start": "466800",
    "end": "470479"
  },
  {
    "text": "uh was eliminate was simply",
    "start": "470479",
    "end": "473599"
  },
  {
    "text": "eliminated so the thing is I thought",
    "start": "473599",
    "end": "476879"
  },
  {
    "text": "okay if that uh array op type index",
    "start": "476879",
    "end": "480479"
  },
  {
    "text": "table doesn't contain any special values",
    "start": "480479",
    "end": "483319"
  },
  {
    "text": "so what about uh like changing like",
    "start": "483319",
    "end": "487879"
  },
  {
    "text": "smashing object body or looking to how",
    "start": "487879",
    "end": "492440"
  },
  {
    "text": "we can change type index to different",
    "start": "492440",
    "end": "494840"
  },
  {
    "text": "one and uh what like look for benefits",
    "start": "494840",
    "end": "499240"
  },
  {
    "text": "for example the first one was type",
    "start": "499240",
    "end": "501879"
  },
  {
    "text": "confusion so what happens if we change",
    "start": "501879",
    "end": "505680"
  },
  {
    "text": "type index from one legitimate to",
    "start": "505680",
    "end": "508240"
  },
  {
    "text": "another",
    "start": "508240",
    "end": "511039"
  },
  {
    "text": "so basically we leverage uh full",
    "start": "511039",
    "end": "513880"
  },
  {
    "text": "overflow to type confusion and after",
    "start": "513880",
    "end": "516518"
  },
  {
    "text": "smashing type index after making uh type",
    "start": "516519",
    "end": "519680"
  },
  {
    "text": "confusion after smashing objects data we",
    "start": "519680",
    "end": "523880"
  },
  {
    "text": "access this um like malicious over",
    "start": "523880",
    "end": "526800"
  },
  {
    "text": "written object and uh that gives to",
    "start": "526800",
    "end": "530600"
  },
  {
    "text": "attacker a lot of a lot of",
    "start": "530600",
    "end": "533320"
  },
  {
    "text": "Primitives so basically after overflow",
    "start": "533320",
    "end": "537800"
  },
  {
    "text": "object header uh using type index for",
    "start": "537800",
    "end": "541880"
  },
  {
    "text": "object manager after P overflow it looks",
    "start": "541880",
    "end": "544600"
  },
  {
    "text": "that it's different object so we can uh",
    "start": "544600",
    "end": "548760"
  },
  {
    "text": "use like different system services to",
    "start": "548760",
    "end": "551160"
  },
  {
    "text": "access that",
    "start": "551160",
    "end": "552720"
  },
  {
    "text": "object",
    "start": "552720",
    "end": "555279"
  },
  {
    "text": "so there are a lot of uh scenarios cuz",
    "start": "555279",
    "end": "561519"
  },
  {
    "text": "as you saw there are several function",
    "start": "561519",
    "end": "563839"
  },
  {
    "text": "pointers and object type initializer",
    "start": "563839",
    "end": "566079"
  },
  {
    "text": "structure but in fact uh you can uh like",
    "start": "566079",
    "end": "569560"
  },
  {
    "text": "access object using various system",
    "start": "569560",
    "end": "572720"
  },
  {
    "text": "Services",
    "start": "572720",
    "end": "574640"
  },
  {
    "text": "various so talking about type confusion",
    "start": "574640",
    "end": "579160"
  },
  {
    "text": "and uh",
    "start": "579160",
    "end": "580680"
  },
  {
    "text": "changing execution flow from one",
    "start": "580680",
    "end": "582959"
  },
  {
    "text": "legitimate to another for example there",
    "start": "582959",
    "end": "585640"
  },
  {
    "text": "is a print of function pointers of",
    "start": "585640",
    "end": "589160"
  },
  {
    "text": "directory object as you can see uh like",
    "start": "589160",
    "end": "593120"
  },
  {
    "text": "for example security processor is a SE",
    "start": "593120",
    "end": "595959"
  },
  {
    "text": "default object method",
    "start": "595959",
    "end": "598040"
  },
  {
    "text": "function and uh if we take a look at",
    "start": "598040",
    "end": "601399"
  },
  {
    "text": "file or device object type uh security",
    "start": "601399",
    "end": "604120"
  },
  {
    "text": "proced is different",
    "start": "604120",
    "end": "606079"
  },
  {
    "text": "one uh so for example if we spray uh",
    "start": "606079",
    "end": "610839"
  },
  {
    "text": "pool with event objects uh object type",
    "start": "610839",
    "end": "615800"
  },
  {
    "text": "of event contains uh security proceder",
    "start": "615800",
    "end": "619240"
  },
  {
    "text": "initialized s e default object method",
    "start": "619240",
    "end": "621959"
  },
  {
    "text": "after corruption we change type index to",
    "start": "621959",
    "end": "624680"
  },
  {
    "text": "file object so we redirect execution",
    "start": "624680",
    "end": "628519"
  },
  {
    "text": "flow from s default object method to IOP",
    "start": "628519",
    "end": "631800"
  },
  {
    "text": "get set security object so object",
    "start": "631800",
    "end": "633760"
  },
  {
    "text": "manager works with a file object but in",
    "start": "633760",
    "end": "636680"
  },
  {
    "text": "fact it was event and it leads to uh",
    "start": "636680",
    "end": "642160"
  },
  {
    "text": "basically in that scenario uh in",
    "start": "642160",
    "end": "644800"
  },
  {
    "text": "changing to file object that leads to",
    "start": "644800",
    "end": "646880"
  },
  {
    "text": "hijack of execution flow but in fact",
    "start": "646880",
    "end": "649360"
  },
  {
    "text": "there are different ones unfortunately",
    "start": "649360",
    "end": "651880"
  },
  {
    "text": "this security procedure uh almost every",
    "start": "651880",
    "end": "654639"
  },
  {
    "text": "object type contains uh like function",
    "start": "654639",
    "end": "657079"
  },
  {
    "text": "just s e default object method and it's",
    "start": "657079",
    "end": "659360"
  },
  {
    "text": "not uh very useful in exploitation terms",
    "start": "659360",
    "end": "663399"
  },
  {
    "text": "but I get set security object is very",
    "start": "663399",
    "end": "666240"
  },
  {
    "text": "nice cuz there is a triple D reference",
    "start": "666240",
    "end": "668839"
  },
  {
    "text": "of file object and uh basically that",
    "start": "668839",
    "end": "671959"
  },
  {
    "text": "leads that you control EIP or",
    "start": "671959",
    "end": "675160"
  },
  {
    "text": "rip so it looks uh like basic uh",
    "start": "675160",
    "end": "680279"
  },
  {
    "text": "basically here are 3D",
    "start": "680279",
    "end": "682839"
  },
  {
    "text": "references uh we get uh one pointer from",
    "start": "682839",
    "end": "686959"
  },
  {
    "text": "our smashed object so we control pointer",
    "start": "686959",
    "end": "689120"
  },
  {
    "text": "we can uh craft our fake uh device and",
    "start": "689120",
    "end": "693600"
  },
  {
    "text": "Driver object in user mode memory and in",
    "start": "693600",
    "end": "696519"
  },
  {
    "text": "the end uh it will jump to our R chain",
    "start": "696519",
    "end": "701240"
  },
  {
    "text": "or Shell",
    "start": "701240",
    "end": "703480"
  },
  {
    "text": "Code so I cut uh these structures cuz",
    "start": "703480",
    "end": "707399"
  },
  {
    "text": "device and file object they are bigger",
    "start": "707399",
    "end": "710680"
  },
  {
    "text": "but uh the most important is just uh",
    "start": "710680",
    "end": "713800"
  },
  {
    "text": "pointers like chain and Driver object in",
    "start": "713800",
    "end": "717160"
  },
  {
    "text": "the end uh contains May function array",
    "start": "717160",
    "end": "720480"
  },
  {
    "text": "which basically function",
    "start": "720480",
    "end": "724040"
  },
  {
    "text": "pointers talking about other procedur uh",
    "start": "724320",
    "end": "727920"
  },
  {
    "text": "like for example uh when you call close",
    "start": "727920",
    "end": "731320"
  },
  {
    "text": "handle and um object manager calls close",
    "start": "731320",
    "end": "734600"
  },
  {
    "text": "and delete procedures uh these are a lot",
    "start": "734600",
    "end": "739120"
  },
  {
    "text": "of uh a lot of ways cuz uh almost every",
    "start": "739120",
    "end": "743440"
  },
  {
    "text": "object type uh has a specific close uh",
    "start": "743440",
    "end": "747519"
  },
  {
    "text": "and delete procedure so so there are 56",
    "start": "747519",
    "end": "750760"
  },
  {
    "text": "functions so 56 execution flows mostly",
    "start": "750760",
    "end": "754480"
  },
  {
    "text": "lead to arbitrary memory override some",
    "start": "754480",
    "end": "758000"
  },
  {
    "text": "to adjacent read R and some to hijack of",
    "start": "758000",
    "end": "761079"
  },
  {
    "text": "execution flow for example talking about",
    "start": "761079",
    "end": "764959"
  },
  {
    "text": "uh key object type it's one of the most",
    "start": "764959",
    "end": "769639"
  },
  {
    "text": "powerful object type for exploitation uh",
    "start": "769639",
    "end": "772760"
  },
  {
    "text": "for example CMP security method it also",
    "start": "772760",
    "end": "775160"
  },
  {
    "text": "leads to hijack hijack of execution flow",
    "start": "775160",
    "end": "777760"
  },
  {
    "text": "and also to different Primitives like",
    "start": "777760",
    "end": "780800"
  },
  {
    "text": "write and",
    "start": "780800",
    "end": "782199"
  },
  {
    "text": "read",
    "start": "782199",
    "end": "784600"
  },
  {
    "text": "so also there are seven of them plus uh",
    "start": "784600",
    "end": "787839"
  },
  {
    "text": "like close secure delete and uh this",
    "start": "787839",
    "end": "792079"
  },
  {
    "text": "like five so yeah eight in the end but",
    "start": "792079",
    "end": "796160"
  },
  {
    "text": "unfortunately not a lot of object types",
    "start": "796160",
    "end": "799040"
  },
  {
    "text": "uh contain initialized like these",
    "start": "799040",
    "end": "801600"
  },
  {
    "text": "function pointers so there is not not a",
    "start": "801600",
    "end": "804600"
  },
  {
    "text": "lot of interest in",
    "start": "804600",
    "end": "806880"
  },
  {
    "text": "here also objects it's uh like they have",
    "start": "806880",
    "end": "811920"
  },
  {
    "text": "typical op interfaces for example",
    "start": "811920",
    "end": "814639"
  },
  {
    "text": "Constructor like uh create file create",
    "start": "814639",
    "end": "817320"
  },
  {
    "text": "event uh create",
    "start": "817320",
    "end": "819680"
  },
  {
    "text": "semaphor Destructor is one it's just",
    "start": "819680",
    "end": "822079"
  },
  {
    "text": "close handle or in close uh there is",
    "start": "822079",
    "end": "824760"
  },
  {
    "text": "also get and Setter and uh a lot of uh",
    "start": "824760",
    "end": "829000"
  },
  {
    "text": "type specific system",
    "start": "829000",
    "end": "831759"
  },
  {
    "text": "services but unfortunately you know my",
    "start": "831759",
    "end": "835360"
  },
  {
    "text": "idea was okay this is very nice so you",
    "start": "835360",
    "end": "837839"
  },
  {
    "text": "can uh just change",
    "start": "837839",
    "end": "839560"
  },
  {
    "text": "uh object type to different and like",
    "start": "839560",
    "end": "844120"
  },
  {
    "text": "find system service that read or write",
    "start": "844120",
    "end": "846759"
  },
  {
    "text": "memory but unfortunately object type Has",
    "start": "846759",
    "end": "850560"
  },
  {
    "text": "a Field valid access mask so you cannot",
    "start": "850560",
    "end": "853160"
  },
  {
    "text": "freely use uh this uh way uh of",
    "start": "853160",
    "end": "857160"
  },
  {
    "text": "accessing smashed object because uh you",
    "start": "857160",
    "end": "859560"
  },
  {
    "text": "have to find uh object types that uh",
    "start": "859560",
    "end": "863519"
  },
  {
    "text": "have a same valid access mask or just uh",
    "start": "863519",
    "end": "867880"
  },
  {
    "text": "don't change types so don't uh use type",
    "start": "867880",
    "end": "871279"
  },
  {
    "text": "confusion just uh object uh data",
    "start": "871279",
    "end": "874120"
  },
  {
    "text": "corruption",
    "start": "874120",
    "end": "875680"
  },
  {
    "text": "but the good thing that some object",
    "start": "875680",
    "end": "878199"
  },
  {
    "text": "types uh they do have same valid access",
    "start": "878199",
    "end": "881440"
  },
  {
    "text": "mask so you can play with",
    "start": "881440",
    "end": "884120"
  },
  {
    "text": "that for example talking about like",
    "start": "884120",
    "end": "886519"
  },
  {
    "text": "getter and S getter mostly good for",
    "start": "886519",
    "end": "890600"
  },
  {
    "text": "arbitrary read Primitives for example",
    "start": "890600",
    "end": "892480"
  },
  {
    "text": "symbolic Li object this uh object",
    "start": "892480",
    "end": "895240"
  },
  {
    "text": "contains Unicode string and unicode",
    "start": "895240",
    "end": "897120"
  },
  {
    "text": "string contains buffer and Max and uh",
    "start": "897120",
    "end": "899720"
  },
  {
    "text": "like size is maximum to maximum W so FFF",
    "start": "899720",
    "end": "905000"
  },
  {
    "text": "bytes so this primitive gives you",
    "start": "905000",
    "end": "907480"
  },
  {
    "text": "reading of arbitrary",
    "start": "907480",
    "end": "909959"
  },
  {
    "text": "memory also for example query directory",
    "start": "909959",
    "end": "913199"
  },
  {
    "text": "object uh there's a this uh object",
    "start": "913199",
    "end": "917880"
  },
  {
    "text": "contains like a array of object headers",
    "start": "917880",
    "end": "921800"
  },
  {
    "text": "uh so you can craft up to 25 uh like",
    "start": "921800",
    "end": "925639"
  },
  {
    "text": "malicious object headers and uh",
    "start": "925639",
    "end": "928639"
  },
  {
    "text": "basically it leads to 25 uh in HEX of 37",
    "start": "928639",
    "end": "933800"
  },
  {
    "text": "times of reading arbitrary memory using",
    "start": "933800",
    "end": "937160"
  },
  {
    "text": "just one system service also for example",
    "start": "937160",
    "end": "940279"
  },
  {
    "text": "quer information worker Factory uh it",
    "start": "940279",
    "end": "943800"
  },
  {
    "text": "leads to arbitary memory read but just",
    "start": "943800",
    "end": "947279"
  },
  {
    "text": "uh four like eight bytes",
    "start": "947279",
    "end": "950360"
  },
  {
    "text": "right or for example s uh it leads to",
    "start": "950360",
    "end": "955319"
  },
  {
    "text": "arbitrary right Primitives for example",
    "start": "955319",
    "end": "957440"
  },
  {
    "text": "talking about uh this system service uh",
    "start": "957440",
    "end": "961079"
  },
  {
    "text": "it leads that just by Smashing one",
    "start": "961079",
    "end": "964920"
  },
  {
    "text": "object it leads to infinite amount of uh",
    "start": "964920",
    "end": "967800"
  },
  {
    "text": "overwriting arbitrary memory with",
    "start": "967800",
    "end": "971120"
  },
  {
    "text": "your with controlled values uh it's",
    "start": "971120",
    "end": "974519"
  },
  {
    "text": "pretty nice so just one smashed uh",
    "start": "974519",
    "end": "978399"
  },
  {
    "text": "worker Factor object and uh you can",
    "start": "978399",
    "end": "980880"
  },
  {
    "text": "write to memory with like infinite",
    "start": "980880",
    "end": "984839"
  },
  {
    "text": "amount of times so I thought like you",
    "start": "984839",
    "end": "988319"
  },
  {
    "text": "know uh uh in fact uh on this stage when",
    "start": "988319",
    "end": "993480"
  },
  {
    "text": "you hijack execution flow most of that",
    "start": "993480",
    "end": "997680"
  },
  {
    "text": "most of you like say okay but it's it's",
    "start": "997680",
    "end": "999839"
  },
  {
    "text": "already done uh but I thought like uh on",
    "start": "999839",
    "end": "1003680"
  },
  {
    "text": "Windows 8 like with you have to like uh",
    "start": "1003680",
    "end": "1007680"
  },
  {
    "text": "redirect to ro chain to disable or uh",
    "start": "1007680",
    "end": "1011880"
  },
  {
    "text": "call exelate pool with stack with",
    "start": "1011880",
    "end": "1014759"
  },
  {
    "text": "executable memory uh then copy your",
    "start": "1014759",
    "end": "1018199"
  },
  {
    "text": "shell code",
    "start": "1018199",
    "end": "1019399"
  },
  {
    "text": "executed uh so you know like I thought",
    "start": "1019399",
    "end": "1023399"
  },
  {
    "text": "maybe if you have so amount of",
    "start": "1023399",
    "end": "1025760"
  },
  {
    "text": "Primitives like arbitrary right",
    "start": "1025760",
    "end": "1027360"
  },
  {
    "text": "arbitrary read there is no point to",
    "start": "1027360",
    "end": "1029798"
  },
  {
    "text": "hijack execution flow if uh typical",
    "start": "1029799",
    "end": "1033400"
  },
  {
    "text": "payload of uh elevation of privilege",
    "start": "1033400",
    "end": "1035760"
  },
  {
    "text": "exploits and windows is just a copy",
    "start": "1035760",
    "end": "1038000"
  },
  {
    "text": "token of system process to attackers one",
    "start": "1038000",
    "end": "1040079"
  },
  {
    "text": "or to current one so basically it's just",
    "start": "1040079",
    "end": "1042640"
  },
  {
    "text": "a copying data from memory a to memory B",
    "start": "1042640",
    "end": "1046959"
  },
  {
    "text": "so it's just B in fact it just",
    "start": "1046959",
    "end": "1049600"
  },
  {
    "text": "one instruction right move memory from A",
    "start": "1049600",
    "end": "1052679"
  },
  {
    "text": "to B so I thought when you have this",
    "start": "1052679",
    "end": "1056360"
  },
  {
    "text": "like this Primitives Reading Writing you",
    "start": "1056360",
    "end": "1060000"
  },
  {
    "text": "can emulate typical Shell Code for",
    "start": "1060000",
    "end": "1062520"
  },
  {
    "text": "example uh when you looking eess of by",
    "start": "1062520",
    "end": "1065720"
  },
  {
    "text": "process ID is just parsing of uh one",
    "start": "1065720",
    "end": "1068440"
  },
  {
    "text": "structure that recites in memory and",
    "start": "1068440",
    "end": "1070720"
  },
  {
    "text": "using read primitive you can par the",
    "start": "1070720",
    "end": "1073160"
  },
  {
    "text": "structure and using right primitive you",
    "start": "1073160",
    "end": "1075200"
  },
  {
    "text": "can copy uh talking uh system toen so in",
    "start": "1075200",
    "end": "1081000"
  },
  {
    "text": "fact there is no point in execution",
    "start": "1081000",
    "end": "1084200"
  },
  {
    "text": "Shell Code using rob you just can use an",
    "start": "1084200",
    "end": "1087640"
  },
  {
    "text": "absolute legitimate code like here or",
    "start": "1087640",
    "end": "1090240"
  },
  {
    "text": "here but with corrupted context of",
    "start": "1090240",
    "end": "1093080"
  },
  {
    "text": "object uh you simply make your payload",
    "start": "1093080",
    "end": "1096919"
  },
  {
    "text": "with legitimate code and it's not Rob",
    "start": "1096919",
    "end": "1099080"
  },
  {
    "text": "it's not uh your shell code so in fact",
    "start": "1099080",
    "end": "1104559"
  },
  {
    "text": "uh why it's good cuz if you redirect uh",
    "start": "1104559",
    "end": "1108280"
  },
  {
    "text": "your execution flow to R and if On",
    "start": "1108280",
    "end": "1111559"
  },
  {
    "text": "Target there is some hypervisor like uh",
    "start": "1111559",
    "end": "1114039"
  },
  {
    "text": "like I don't know like bromium ventry or",
    "start": "1114039",
    "end": "1116559"
  },
  {
    "text": "deep safe or maaf deep save it can uh",
    "start": "1116559",
    "end": "1120240"
  },
  {
    "text": "like detect it for example if you if",
    "start": "1120240",
    "end": "1123960"
  },
  {
    "text": "your R pale Rock chain disa map it",
    "start": "1123960",
    "end": "1129440"
  },
  {
    "text": "disabling like changing bits in cr4",
    "start": "1129440",
    "end": "1133320"
  },
  {
    "text": "triggers VM exit so some uh hips that",
    "start": "1133320",
    "end": "1137679"
  },
  {
    "text": "works in hypervisor simply detects it so",
    "start": "1137679",
    "end": "1141640"
  },
  {
    "text": "but this method like for hypervisor and",
    "start": "1141640",
    "end": "1144280"
  },
  {
    "text": "for kernel is just like",
    "start": "1144280",
    "end": "1147120"
  },
  {
    "text": "just triggering system services and",
    "start": "1147120",
    "end": "1150919"
  },
  {
    "text": "that's it so it's kind of legitimate way",
    "start": "1150919",
    "end": "1154320"
  },
  {
    "text": "but uh cuz objects are corrupted it's",
    "start": "1154320",
    "end": "1158640"
  },
  {
    "text": "like you do whatever you want to do with",
    "start": "1158640",
    "end": "1160600"
  },
  {
    "text": "kernel",
    "start": "1160600",
    "end": "1162360"
  },
  {
    "text": "memory",
    "start": "1162360",
    "end": "1165280"
  },
  {
    "text": "so talking about mitigations",
    "start": "1165280",
    "end": "1169559"
  },
  {
    "text": "in fact uh like I can talk about",
    "start": "1169559",
    "end": "1173600"
  },
  {
    "text": "Hardware perspective because with it",
    "start": "1173600",
    "end": "1177880"
  },
  {
    "text": "like I bypass CU I don't play with it I",
    "start": "1177880",
    "end": "1181200"
  },
  {
    "text": "don't try to disable or bypass it",
    "start": "1181200",
    "end": "1183840"
  },
  {
    "text": "talking with about smap it's nice Cu",
    "start": "1183840",
    "end": "1189520"
  },
  {
    "text": "uh",
    "start": "1189520",
    "end": "1191480"
  },
  {
    "text": "let's like take a look so if you can",
    "start": "1191480",
    "end": "1195840"
  },
  {
    "text": "read uh why you and kernel and you can",
    "start": "1195840",
    "end": "1199480"
  },
  {
    "text": "read uh memory at like in user space",
    "start": "1199480",
    "end": "1204240"
  },
  {
    "text": "here is okay you just uh smash uh file",
    "start": "1204240",
    "end": "1207159"
  },
  {
    "text": "object with pointer to user mode memory",
    "start": "1207159",
    "end": "1210080"
  },
  {
    "text": "but with smap you have to craft it uh in",
    "start": "1210080",
    "end": "1213360"
  },
  {
    "text": "kernel memory so you have to have some",
    "start": "1213360",
    "end": "1216919"
  },
  {
    "text": "ways to construct uh like complicated",
    "start": "1216919",
    "end": "1221320"
  },
  {
    "text": "structure in kernel memory and in fact",
    "start": "1221320",
    "end": "1224320"
  },
  {
    "text": "uh sometimes for to do that you have to",
    "start": "1224320",
    "end": "1226760"
  },
  {
    "text": "have another vulnerability",
    "start": "1226760",
    "end": "1230280"
  },
  {
    "text": "but talking about Microsoft I think",
    "start": "1230480",
    "end": "1234000"
  },
  {
    "text": "maybe like inject cookie and object",
    "start": "1234000",
    "end": "1237919"
  },
  {
    "text": "header uh and check uh every access to",
    "start": "1237919",
    "end": "1241919"
  },
  {
    "text": "smashed object and check cookie like",
    "start": "1241919",
    "end": "1244799"
  },
  {
    "text": "like same with stack kry but in fact in",
    "start": "1244799",
    "end": "1249240"
  },
  {
    "text": "my opinion the best way it's uh what",
    "start": "1249240",
    "end": "1253360"
  },
  {
    "text": "actually Microsoft did recently for user",
    "start": "1253360",
    "end": "1256039"
  },
  {
    "text": "mode it's uh isolated uh",
    "start": "1256039",
    "end": "1259240"
  },
  {
    "text": "like for I isolated Hep but what if to",
    "start": "1259240",
    "end": "1262400"
  },
  {
    "text": "make same but for kernel isolated pools",
    "start": "1262400",
    "end": "1265960"
  },
  {
    "text": "so basically it will lead that attacker",
    "start": "1265960",
    "end": "1269080"
  },
  {
    "text": "will not have possibility to fragment",
    "start": "1269080",
    "end": "1273320"
  },
  {
    "text": "pool into State good for exploitation so",
    "start": "1273320",
    "end": "1277360"
  },
  {
    "text": "there is there will be no adjacent uh",
    "start": "1277360",
    "end": "1279640"
  },
  {
    "text": "pull header with object",
    "start": "1279640",
    "end": "1281679"
  },
  {
    "text": "inside so I think that is a lated pools",
    "start": "1281679",
    "end": "1284880"
  },
  {
    "text": "and basically uh Microsoft already has",
    "start": "1284880",
    "end": "1289000"
  },
  {
    "text": "it because there are different kind of",
    "start": "1289000",
    "end": "1290760"
  },
  {
    "text": "pools non-paged uh page session pool uh",
    "start": "1290760",
    "end": "1295039"
  },
  {
    "text": "but for example if they isolated more",
    "start": "1295039",
    "end": "1297960"
  },
  {
    "text": "like uh objects like for example events",
    "start": "1297960",
    "end": "1300480"
  },
  {
    "text": "will be uh allocated only in specific",
    "start": "1300480",
    "end": "1303840"
  },
  {
    "text": "range files only in specific different",
    "start": "1303840",
    "end": "1306000"
  },
  {
    "text": "range and um",
    "start": "1306000",
    "end": "1309440"
  },
  {
    "text": "Centra so in conclusion uh like there",
    "start": "1309440",
    "end": "1314279"
  },
  {
    "text": "are some nice quotes and uh they uh like",
    "start": "1314279",
    "end": "1318880"
  },
  {
    "text": "represent how exploitation techniques uh",
    "start": "1318880",
    "end": "1322080"
  },
  {
    "text": "evolve so first it was a nice quote by",
    "start": "1322080",
    "end": "1325799"
  },
  {
    "text": "Peter like keep sprays of",
    "start": "1325799",
    "end": "1329000"
  },
  {
    "text": "99% follow up was uh by tomb keeper it's",
    "start": "1329000",
    "end": "1332919"
  },
  {
    "text": "uh return reading programming like is",
    "start": "1332919",
    "end": "1336080"
  },
  {
    "text": "for 99% but I thought like talking about",
    "start": "1336080",
    "end": "1340520"
  },
  {
    "text": "uh elevation of privilege what if that",
    "start": "1340520",
    "end": "1344039"
  },
  {
    "text": "we don't need like our like our payload",
    "start": "1344039",
    "end": "1348039"
  },
  {
    "text": "cu everything legitimate inside you just",
    "start": "1348039",
    "end": "1352400"
  },
  {
    "text": "need to smash objects in a proper way",
    "start": "1352400",
    "end": "1357360"
  },
  {
    "text": "so that's",
    "start": "1357360",
    "end": "1360480"
  },
  {
    "text": "it yeah by the",
    "start": "1360480",
    "end": "1363159"
  },
  {
    "text": "way uh talking about pool like deep",
    "start": "1363159",
    "end": "1367480"
  },
  {
    "text": "details uh check out tarj work and uh",
    "start": "1367480",
    "end": "1371320"
  },
  {
    "text": "about previous work on object metadata",
    "start": "1371320",
    "end": "1375000"
  },
  {
    "text": "corruption check my previous work from",
    "start": "1375000",
    "end": "1377200"
  },
  {
    "text": "heck in the Box",
    "start": "1377200",
    "end": "1379799"
  },
  {
    "text": "so any",
    "start": "1379799",
    "end": "1381679"
  },
  {
    "text": "questions",
    "start": "1381679",
    "end": "1384679"
  },
  {
    "text": "yes yeah basically when",
    "start": "1385960",
    "end": "1390278"
  },
  {
    "text": "uh when you use G Setter and specific uh",
    "start": "1390360",
    "end": "1394360"
  },
  {
    "text": "there is a codon kernel that um passes",
    "start": "1394360",
    "end": "1398559"
  },
  {
    "text": "pointer to object type and uh if you",
    "start": "1398559",
    "end": "1403679"
  },
  {
    "text": "smash uh the object they there will be",
    "start": "1403679",
    "end": "1407480"
  },
  {
    "text": "like um kernel will check if it's like",
    "start": "1407480",
    "end": "1411200"
  },
  {
    "text": "valid access mask from that object but",
    "start": "1411200",
    "end": "1413640"
  },
  {
    "text": "it was smashed with so there will be not",
    "start": "1413640",
    "end": "1416559"
  },
  {
    "text": "equal but the thing is when",
    "start": "1416559",
    "end": "1419039"
  },
  {
    "text": "you use uh procedur there is no such",
    "start": "1419039",
    "end": "1423360"
  },
  {
    "text": "check so with processors like with this",
    "start": "1423360",
    "end": "1426039"
  },
  {
    "text": "Vector with close delete secure uh you",
    "start": "1426039",
    "end": "1429159"
  },
  {
    "text": "can uh change uh object type from A to B",
    "start": "1429159",
    "end": "1432039"
  },
  {
    "text": "without any",
    "start": "1432039",
    "end": "1433960"
  },
  {
    "text": "restrictions but unfortunately this",
    "start": "1433960",
    "end": "1436279"
  },
  {
    "text": "method like using uh get Setter uh there",
    "start": "1436279",
    "end": "1439799"
  },
  {
    "text": "is",
    "start": "1439799",
    "end": "1442039"
  },
  {
    "text": "limitation any",
    "start": "1446799",
    "end": "1450120"
  },
  {
    "text": "questions yeah I speak fast well",
    "start": "1459760",
    "end": "1463159"
  },
  {
    "text": "basically if it's not clear I can uh",
    "start": "1463159",
    "end": "1466159"
  },
  {
    "text": "explain something in detail",
    "start": "1466159",
    "end": "1469520"
  },
  {
    "text": "because the talk is like",
    "start": "1469520",
    "end": "1473559"
  },
  {
    "text": "specific no",
    "start": "1482720",
    "end": "1486039"
  },
  {
    "text": "questions everybody",
    "start": "1486799",
    "end": "1490799"
  },
  {
    "text": "[Applause]",
    "start": "1499260",
    "end": "1501819"
  }
]