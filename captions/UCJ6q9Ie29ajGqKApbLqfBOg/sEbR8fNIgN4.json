[
  {
    "start": "0",
    "end": "29000"
  },
  {
    "text": "hi good morning black I'm J little I'm a principal security engineer at relevance",
    "start": "30",
    "end": "6180"
  },
  {
    "text": "and I've been working in the computer security field for about 10 years I originally got into it by playing CTFs",
    "start": "6180",
    "end": "12840"
  },
  {
    "text": "on teams like white Hatter's 40 thieves hate irony Marauders and I used to run a",
    "start": "12840",
    "end": "19320"
  },
  {
    "text": "CTF called ghost in the shell code and in the past year or so I've been working on the theorem smart contracts it's been",
    "start": "19320",
    "end": "25320"
  },
  {
    "text": "pretty exciting because it's like a whole new technology stack at trilha bits we're a security research and",
    "start": "25320",
    "end": "31679"
  },
  {
    "start": "29000",
    "end": "29000"
  },
  {
    "text": "development firm we're headed quarters in New York but half of our employees are remote we work in a few different",
    "start": "31679",
    "end": "37860"
  },
  {
    "text": "areas for research we make foundational tools like binary lifters that are",
    "start": "37860",
    "end": "42960"
  },
  {
    "text": "usually based on white papers and we release as much as possible we release as much as possible on github an open",
    "start": "42960",
    "end": "50430"
  },
  {
    "text": "source for engineering then we custom security software like OS query extensions and we also perform security",
    "start": "50430",
    "end": "57960"
  },
  {
    "text": "assessments from everything from user space libraries to kernel drivers to block train chain contracts so for what",
    "start": "57960",
    "end": "66060"
  },
  {
    "text": "I'll be going over today I'll give a quick overview of aetherium it's virtual machine called EVM in the front of the",
    "start": "66060",
    "end": "73590"
  },
  {
    "text": "most popular front-end language solidity then I'll go over a few classes of",
    "start": "73590",
    "end": "79229"
  },
  {
    "text": "vulnerabilities that can exist and I'll show some tools that can help you find them then I'll talk about the",
    "start": "79229",
    "end": "85350"
  },
  {
    "text": "unfortunate pains of running your own aetherium software and then we'll finally talk about how to analyze",
    "start": "85350",
    "end": "91229"
  },
  {
    "text": "transactions traces and look at contracts that have been destroyed so",
    "start": "91229",
    "end": "96810"
  },
  {
    "start": "96000",
    "end": "96000"
  },
  {
    "text": "for what prompted this earlier this year I was working on a project with my friend Ryan storts and we were talking",
    "start": "96810",
    "end": "102840"
  },
  {
    "text": "about how to analyze an secure value from aetherium contracts one of my parts",
    "start": "102840",
    "end": "108090"
  },
  {
    "text": "for this was to get a copy of all the contracts it's the blockchain everything should be there but I noticed that when I tried to",
    "start": "108090",
    "end": "114119"
  },
  {
    "text": "get some of them it just returned an empty value represented by this zero X and this led me to a whole lot of",
    "start": "114119",
    "end": "119969"
  },
  {
    "text": "questions and that's this presentation so let's get into some of the details",
    "start": "119969",
    "end": "126320"
  },
  {
    "text": "but first who here has bought aetherium",
    "start": "126320",
    "end": "131910"
  },
  {
    "text": "before oh wow it's a lot and who has sent a",
    "start": "131910",
    "end": "138120"
  },
  {
    "text": "transaction to a contract no stola and who has made your own contract and has",
    "start": "138120",
    "end": "145890"
  },
  {
    "text": "anybody had their contract hacked no hands okay well one guys with fifty",
    "start": "145890",
    "end": "151350"
  },
  {
    "text": "fifty so maybe he doesn't know so let's get into the basics of aetherium",
    "start": "151350",
    "end": "156620"
  },
  {
    "text": "aetherium is a distributed blockchain system it's like killer feature is called smart",
    "start": "156620",
    "end": "161640"
  },
  {
    "text": "ranch smart contracts these are little programs that execute on every node in the network this leads to it being",
    "start": "161640",
    "end": "167970"
  },
  {
    "text": "called the world computer it's currently the second most valuable cryptocurrency according to a snapshot on Quay mark cap",
    "start": "167970",
    "end": "174750"
  },
  {
    "text": "and over the past few years a lot of banks and have shown interest in it the",
    "start": "174750",
    "end": "181980"
  },
  {
    "text": "main that launched just over three years ago so everything's relatively new a little",
    "start": "181980",
    "end": "187740"
  },
  {
    "start": "187000",
    "end": "187000"
  },
  {
    "text": "bit about the implementation its formally described in this yellow paper written by Gavin wood it's literally",
    "start": "187740",
    "end": "193560"
  },
  {
    "text": "yellow but there's a much more approachable version called the beige paper that has a lot less Sigma's and",
    "start": "193560",
    "end": "198959"
  },
  {
    "text": "other math symbols don't worry I'll be reading this to you verbatim or anything as some better examples so let's talk",
    "start": "198959",
    "end": "205350"
  },
  {
    "start": "203000",
    "end": "203000"
  },
  {
    "text": "about transactions that can happen between accounts so accounts are think of them like a bank account they're",
    "start": "205350",
    "end": "212550"
  },
  {
    "text": "uniquely identifiable 160 bit numbers I'm just gonna use emojis instead",
    "start": "212550",
    "end": "218780"
  },
  {
    "text": "because the numbers not show up very well on PowerPoint and the rest is also like a postal code or a routing number",
    "start": "218780",
    "end": "224790"
  },
  {
    "text": "you can send a transaction to any account you'd like an account could send",
    "start": "224790",
    "end": "231120"
  },
  {
    "text": "money called ether to another account and there are special accounts called contracts that have code that runs",
    "start": "231120",
    "end": "237360"
  },
  {
    "text": "whenever a transaction has sent to that these transactions are grouped together into a grouping called a block and",
    "start": "237360",
    "end": "245640"
  },
  {
    "text": "that's what's actually saved on the network so for a little bit about the",
    "start": "245640",
    "end": "253920"
  },
  {
    "start": "251000",
    "end": "251000"
  },
  {
    "text": "etherium virtual machine that the contracts run it's a big-endian stack machine it's got about 185 op codes",
    "start": "253920",
    "end": "261030"
  },
  {
    "text": "currently there's more added incrementally over over the course of time the native bit width is",
    "start": "261030",
    "end": "266770"
  },
  {
    "text": "256 bits and most of the address spaces are also that same with one interesting",
    "start": "266770",
    "end": "273650"
  },
  {
    "text": "part is that about a quarter of the possible opcode address space that's one byte is used up by very similar",
    "start": "273650",
    "end": "279170"
  },
  {
    "text": "instruction so there's a unique outcome for push one byte on to the stack and push five bytes on the stack and so on",
    "start": "279170",
    "end": "284180"
  },
  {
    "text": "each of these instructions have a gas cost to prevent infinite loops on the",
    "start": "284180",
    "end": "290780"
  },
  {
    "text": "world computer and things like added subtracts how much lower gas costs in",
    "start": "290780",
    "end": "296420"
  },
  {
    "text": "storing into the permanent ledger a good reference for more about EVM is ether V",
    "start": "296420",
    "end": "302990"
  },
  {
    "text": "Mao or this EVM opcodes repository I made on github so for a little bit about",
    "start": "302990",
    "end": "310640"
  },
  {
    "start": "308000",
    "end": "308000"
  },
  {
    "text": "what these address spaces look like there's about five of them maybe six depending on how you view a few things",
    "start": "310640",
    "end": "316460"
  },
  {
    "text": "but the important part is that most of them start at address zero so your code",
    "start": "316460",
    "end": "323120"
  },
  {
    "text": "is mapped in at zero that is what where execution starts on every transaction",
    "start": "323120",
    "end": "328360"
  },
  {
    "text": "storage is for your contract is start said zero as well but most people don't",
    "start": "328810",
    "end": "340220"
  },
  {
    "text": "make their contracts in solidity or sorry any VM that you write them in",
    "start": "340220",
    "end": "345290"
  },
  {
    "text": "solidity instead because it's a lot easier to use solidity is kind of like",
    "start": "345290",
    "end": "350300"
  },
  {
    "text": "JavaScript with maybe a little dash of Python thrown in it's meant to be expressive and pretty easy to read",
    "start": "350300",
    "end": "358240"
  },
  {
    "text": "solidity compiles down to EVM very directly it's a very new compiler it's",
    "start": "358240",
    "end": "363890"
  },
  {
    "text": "only a couple years old the optimizations can literally only get better and this language has evolved more than it has been designed and",
    "start": "363890",
    "end": "370610"
  },
  {
    "text": "making incremental changes that break backwards compatibility every few months",
    "start": "370610",
    "end": "376390"
  },
  {
    "text": "so here's an example contract this code can essentially be deployed directly into the etherium network - go for it -",
    "start": "376390",
    "end": "387550"
  },
  {
    "text": "go over it kind of quickly there's two state fields of state variables owner",
    "start": "389080",
    "end": "396050"
  },
  {
    "text": "and jar jar's a mapping mapping is basically an associative dictionary these state variables persist across",
    "start": "396050",
    "end": "402470"
  },
  {
    "text": "transactions when the contract is created the constructor is executed in",
    "start": "402470",
    "end": "407630"
  },
  {
    "text": "this case it saves the Creator into the owner field and then there are a couple",
    "start": "407630",
    "end": "418160"
  },
  {
    "text": "functions bake and eat these are callable by anyone on the network anyone who has an accountant aetherium can call",
    "start": "418160",
    "end": "424370"
  },
  {
    "text": "in to these functions and finally there's a closed function that does a",
    "start": "424370",
    "end": "429530"
  },
  {
    "text": "validity check and what's the owner or tree value from the contract so in this",
    "start": "429530",
    "end": "435890"
  },
  {
    "text": "example like the owner has been the cookie shop that's been baking cookies and getting money every time it bakes a",
    "start": "435890",
    "end": "442040"
  },
  {
    "text": "cookie because a person has to send in 0.1 ether to make some cookies and when",
    "start": "442040",
    "end": "448670"
  },
  {
    "text": "they're done they want to get that money back and a common way to do this is with the self-destruct function and opcode so",
    "start": "448670",
    "end": "456590"
  },
  {
    "start": "456000",
    "end": "456000"
  },
  {
    "text": "let's look at what happens when a contracts created manual creation of",
    "start": "456590",
    "end": "461870"
  },
  {
    "text": "contracts happens when an account sends a little bit of money to cover the gas",
    "start": "461870",
    "end": "467300"
  },
  {
    "text": "costs for creating the contract and the contract creation code to address zero",
    "start": "467300",
    "end": "472600"
  },
  {
    "text": "so what happens is just what you'd expect it creates a new contract",
    "start": "472600",
    "end": "479030"
  },
  {
    "text": "represented by this robot the owner is set to who created it and a jar is",
    "start": "479030",
    "end": "485120"
  },
  {
    "text": "basically empty everything is initialized to zero so for the corollary",
    "start": "485120",
    "end": "490250"
  },
  {
    "start": "488000",
    "end": "488000"
  },
  {
    "text": "operation closed what happens like I say",
    "start": "490250",
    "end": "496340"
  },
  {
    "text": "before the close function gets its prototype gets hashed the first four",
    "start": "496340",
    "end": "503390"
  },
  {
    "text": "bytes are used as a mixer and that transaction gets sent from the owner to",
    "start": "503390",
    "end": "509390"
  },
  {
    "text": "the contract it runs self-destruct and so the robot",
    "start": "509390",
    "end": "514849"
  },
  {
    "text": "sends money back to the owner and then the contract goes away after this transaction there can be no further",
    "start": "514850",
    "end": "520430"
  },
  {
    "text": "trade transactions to this contract but let's not focus on that too much let's",
    "start": "520430",
    "end": "526280"
  },
  {
    "text": "talk up more about cookies here's a few examples of what some transactions look",
    "start": "526280",
    "end": "531500"
  },
  {
    "text": "like anyone can call bake so here we have two calls of an astronaut calling bake and one weight",
    "start": "531500",
    "end": "538280"
  },
  {
    "text": "lifter collide bake and at the bottom there's a representation of what that looks like so the astronaut has a few cookies and",
    "start": "538280",
    "end": "545770"
  },
  {
    "text": "and so does the weight lifter but let's talk a little bit about eat he takes an",
    "start": "545770",
    "end": "552260"
  },
  {
    "start": "549000",
    "end": "549000"
  },
  {
    "text": "argument this argument is the type of youant that is short for um 256 and",
    "start": "552260",
    "end": "560020"
  },
  {
    "text": "these arguments are big endian so this is what the transaction would look like and as we see if the weightlifter calls",
    "start": "560020",
    "end": "565460"
  },
  {
    "text": "like eat 5 to the contract it will the contract will just subtract the count",
    "start": "565460",
    "end": "570530"
  },
  {
    "text": "and the state will be agreed on by everyone does this look suspect to",
    "start": "570530",
    "end": "577010"
  },
  {
    "text": "anybody there's a little bug in this simple contract as it turns out there's an integer overflow I'm the only",
    "start": "577010",
    "end": "582860"
  },
  {
    "text": "subtraction and the whole thing so what happens if the detective sleuth emoji",
    "start": "582860",
    "end": "589310"
  },
  {
    "text": "contract calls eat one on the contract well contest or just initialize to 0 so",
    "start": "589310",
    "end": "595820"
  },
  {
    "text": "0 minus 1 is ffffff a lot of us and then here's an example where somebody would",
    "start": "595820",
    "end": "603170"
  },
  {
    "text": "have a whole lot of cookies or they wouldn't expect so that's just one",
    "start": "603170",
    "end": "610460"
  },
  {
    "text": "example of something that can go wrong in solidity integer under flows but I'd",
    "start": "610460",
    "end": "615860"
  },
  {
    "text": "like to describe a few more for a language designed in this decade there",
    "start": "615860",
    "end": "621890"
  },
  {
    "start": "618000",
    "end": "618000"
  },
  {
    "text": "are a lot of issues that lead to confusion by developers can me john expects the states and some of those can",
    "start": "621890",
    "end": "628340"
  },
  {
    "text": "lead both to developer confusion in to vulnerabilities so letís working on",
    "start": "628340",
    "end": "634670"
  },
  {
    "text": "correcting their tooling and the language specification but it still has a lot of work to do i can just go on for",
    "start": "634670",
    "end": "639830"
  },
  {
    "text": "hours about all this but just to highlight a few type inference and re links are things that are going away in",
    "start": "639830",
    "end": "646130"
  },
  {
    "text": "the next version of solidity because they're just removing that feature and like to talk about one more",
    "start": "646130",
    "end": "654160"
  },
  {
    "start": "654000",
    "end": "654000"
  },
  {
    "text": "uninitialized variables this is a contract i found on the reddit eath subreddit and this was used as a",
    "start": "654160",
    "end": "661670"
  },
  {
    "text": "backdoor the basically there's a few state variables and this",
    "start": "661670",
    "end": "668300"
  },
  {
    "text": "contract the important one here is secret seed and it turns out that when",
    "start": "668300",
    "end": "673460"
  },
  {
    "text": "you declare a variable but don't initialize it it just gets initialized to zero piece of course it would and so",
    "start": "673460",
    "end": "681020"
  },
  {
    "text": "what happens on this line if this is seed components s it actually creates a",
    "start": "681020",
    "end": "686300"
  },
  {
    "text": "noose a pointer to zero and when these assignments happen it overwrites the ste",
    "start": "686300",
    "end": "692780"
  },
  {
    "text": "variables so this bottom line overwrites the secret seed and this was used to backdoor a lottery system for more",
    "start": "692780",
    "end": "702740"
  },
  {
    "start": "701000",
    "end": "701000"
  },
  {
    "text": "examples we have a repository on github called not-so-smart contracts they have",
    "start": "702740",
    "end": "708530"
  },
  {
    "text": "concise examples and triggers for many kinds of vulnerabilities so now giving",
    "start": "708530",
    "end": "717050"
  },
  {
    "text": "you a little taste of what can go wrong in the contract but I'd like to show some tools that can help discover issues and understand them better I think the",
    "start": "717050",
    "end": "726320"
  },
  {
    "start": "724000",
    "end": "724000"
  },
  {
    "text": "best tool out there for analyzing binary contracts is ether splay so our binary",
    "start": "726320",
    "end": "733280"
  },
  {
    "text": "ninja I'll get it displayed is really really good control flow recovery and a",
    "start": "733280",
    "end": "738650"
  },
  {
    "text": "lot of works been put into it and it displays it in a nice graph view like this it also has a dictionary of over",
    "start": "738650",
    "end": "744610"
  },
  {
    "text": "30,000 function signatures like I've showed before so I can show you useful information like the name of functions",
    "start": "744610",
    "end": "750230"
  },
  {
    "text": "and the parameter types if you'd rather",
    "start": "750230",
    "end": "756140"
  },
  {
    "start": "755000",
    "end": "755000"
  },
  {
    "text": "use Ida Pro than binary ninja I've ported some of the you display features to an Ida Pro processor module it's",
    "start": "756140",
    "end": "761780"
  },
  {
    "text": "still very much a work in progress but if you if you want to look more like if",
    "start": "761780",
    "end": "767360"
  },
  {
    "text": "you used to Ida you can definitely use that instead a useful website is ether",
    "start": "767360",
    "end": "774950"
  },
  {
    "text": "p.m. tada oh I mention this before for a top code reference but one day they",
    "start": "774950",
    "end": "780140"
  },
  {
    "text": "released a decompiler on their website so if you don't mind sending your code to the website it'll give you a",
    "start": "780140",
    "end": "786010"
  },
  {
    "text": "decompiler output it's not perfect but it's definitely way better than keeping track of a state machine in your head or",
    "start": "786010",
    "end": "792170"
  },
  {
    "text": "on a sheet of paper for another tool",
    "start": "792170",
    "end": "797270"
  },
  {
    "start": "795000",
    "end": "795000"
  },
  {
    "text": "there's a myth roll made by consensus it's basically a Swiss Army knife can analyze solidity can analyze",
    "start": "797270",
    "end": "804139"
  },
  {
    "text": "binaries you can query the live blockchain for some information it can perform searches for certain byte",
    "start": "804139",
    "end": "810319"
  },
  {
    "text": "sequences on the boxing or code sequences and it also has a graph view representation for some like hot off the",
    "start": "810319",
    "end": "821029"
  },
  {
    "text": "press kind of news rattle is a tool made by my friend Ryan it lifts EVM to an IR",
    "start": "821029",
    "end": "827779"
  },
  {
    "text": "that IR has a single static assignment form and it can do a lot of",
    "start": "827779",
    "end": "833000"
  },
  {
    "text": "optimizations to simplifications it can actually go between basic blocks and summarize code this is something that",
    "start": "833000",
    "end": "840680"
  },
  {
    "text": "Susilo T compiler itself doesn't really even do yet it can also analyze all the",
    "start": "840680",
    "end": "846829"
  },
  {
    "text": "references to a certain memory address source it's a storage address and recover some variable information this",
    "start": "846829",
    "end": "853880"
  },
  {
    "text": "is the example output it's like a dot file and for one more tool it's",
    "start": "853880",
    "end": "859190"
  },
  {
    "start": "857000",
    "end": "857000"
  },
  {
    "text": "Manticore our Python symbolic execution framework it supports x86 and arm but about a year",
    "start": "859190",
    "end": "866569"
  },
  {
    "text": "ago we added IBM support so it symbolically executes contract blockchain states it's got a bunch of",
    "start": "866569",
    "end": "873350"
  },
  {
    "text": "cool features can emulate multiple transactions multiple contracts it'll",
    "start": "873350",
    "end": "880189"
  },
  {
    "text": "automatically explore all the paths in your contract and it will also emit an output directory full of concrete test",
    "start": "880189",
    "end": "887540"
  },
  {
    "text": "cases for it so that's just a preview of all the many of the tools that are",
    "start": "887540",
    "end": "893269"
  },
  {
    "text": "available there's more every month so",
    "start": "893269",
    "end": "899199"
  },
  {
    "text": "now for a bit of the ugly part running your own aetherium software this is very",
    "start": "899199",
    "end": "906259"
  },
  {
    "start": "905000",
    "end": "905000"
  },
  {
    "text": "much hindsight advice before you run your own node you definitely want to",
    "start": "906259",
    "end": "911480"
  },
  {
    "text": "check your storage requirements this is on the FAQ for parity and Kev but the",
    "start": "911480",
    "end": "917060"
  },
  {
    "text": "best resource I found is on Stack Exchange basically if you want to run a",
    "start": "917060",
    "end": "922850"
  },
  {
    "text": "full node you will need over 1.1 terabytes so I'll say personally I",
    "start": "922850",
    "end": "929750"
  },
  {
    "text": "filled up a 500 gig SSD first and then a terabyte one huh and then I bought a 2",
    "start": "929750",
    "end": "934760"
  },
  {
    "text": "terabyte another thing that's not really talked about all that much is disk throughput",
    "start": "934760",
    "end": "940650"
  },
  {
    "text": "matters you're basically maxing out your AI ops for days and days of day so for",
    "start": "940650",
    "end": "947640"
  },
  {
    "text": "example with singing parody I actually double the total disk rights to my SSD just syncing the blockchain so there's",
    "start": "947640",
    "end": "958260"
  },
  {
    "start": "956000",
    "end": "956000"
  },
  {
    "text": "two options for running aetherium software they call a client I'll just",
    "start": "958260",
    "end": "964860"
  },
  {
    "text": "call it a note because our client would be me so the official implementation is",
    "start": "964860",
    "end": "970620"
  },
  {
    "text": "called gif I guess the GSP as it's written go and it uses leveldb as its",
    "start": "970620",
    "end": "976470"
  },
  {
    "text": "back-end for key value store parody the alternative implementation is written in rust and uses rocks DB the public note",
    "start": "976470",
    "end": "984779"
  },
  {
    "text": "percentages here just from the show down scan from a few weeks ago so there's a",
    "start": "984779",
    "end": "990089"
  },
  {
    "text": "few different types of clients not everybody needs one terabyte of space or more to do to use the etherium network",
    "start": "990089",
    "end": "997110"
  },
  {
    "text": "so both death and parody have implemented some of the public client it can't really verify all the previous",
    "start": "997110",
    "end": "1003440"
  },
  {
    "text": "transactions - just trust they're true and you can actually use this one on the",
    "start": "1003440",
    "end": "1008480"
  },
  {
    "text": "hard drive accordance with the docs I haven't tested that most people who are curious about transactions that want to",
    "start": "1008480",
    "end": "1014570"
  },
  {
    "text": "run a fast client after about five or six days it'll be fully synced and you can query it if you want to film a full",
    "start": "1014570",
    "end": "1022250"
  },
  {
    "text": "client type that can query any transaction arbitrarily you'll need at least about 200 gigs of space and you'll",
    "start": "1022250",
    "end": "1030290"
  },
  {
    "text": "need over 1.5 terabytes if you want to get traces for every transaction so four options for running",
    "start": "1030290",
    "end": "1041839"
  },
  {
    "start": "1037000",
    "end": "1037000"
  },
  {
    "text": "these running a full note is not the default so I've highlighted some of the options basically use sync mode equals",
    "start": "1041839",
    "end": "1049520"
  },
  {
    "text": "full GC Modi's are equals archive that says dome from purge your old state the bottom two options are for performance",
    "start": "1049520",
    "end": "1056630"
  },
  {
    "text": "tuning and it let's just adjust much less often with the bottom one and the",
    "start": "1056630",
    "end": "1061640"
  },
  {
    "text": "traces are exposed in the debug RPC API kind of equivalent options for parody",
    "start": "1061640",
    "end": "1067550"
  },
  {
    "text": "pruning equals arc tracing equals on there's many more performance tuning options and parody",
    "start": "1067550",
    "end": "1074059"
  },
  {
    "text": "I found a github issue for this txq sighs somebody was setting it to max int but then it would just panic the rest",
    "start": "1074059",
    "end": "1081110"
  },
  {
    "text": "clients so I wouldn't really recommend anybody turn that on and they also have some JSON server query query",
    "start": "1081110",
    "end": "1088789"
  },
  {
    "text": "optimizations so if you want to be able to core your core you're faster so I",
    "start": "1088789",
    "end": "1094880"
  },
  {
    "start": "1093000",
    "end": "1093000"
  },
  {
    "text": "have some suggestions just when you're running the software be very patient if something messes up just our MRF it",
    "start": "1094880",
    "end": "1102440"
  },
  {
    "text": "don't get sentimental II attached to your 600 gigabyte chain data folder or you can redownload it and know that it's",
    "start": "1102440",
    "end": "1108740"
  },
  {
    "text": "right definitely recommend using Linux and the fastest SSD you can find it will",
    "start": "1108740",
    "end": "1115820"
  },
  {
    "text": "seriously max out also just for anybody who's running their own client don't",
    "start": "1115820",
    "end": "1120860"
  },
  {
    "text": "also browse the web from the machine running your JSON RPC because of DNS rebinding it can be a bad time",
    "start": "1120860",
    "end": "1128380"
  },
  {
    "text": "so we run software and we just wait a few days and we can analyze contracts",
    "start": "1128380",
    "end": "1133580"
  },
  {
    "text": "right and we can finally start to answer",
    "start": "1133580",
    "end": "1139480"
  },
  {
    "start": "1137000",
    "end": "1137000"
  },
  {
    "text": "some of these questions so who created this contract how do we how do we tell",
    "start": "1139480",
    "end": "1145010"
  },
  {
    "text": "this well the answer is tracing and here is how to call the tracing API parity",
    "start": "1145010",
    "end": "1154519"
  },
  {
    "start": "1148000",
    "end": "1148000"
  },
  {
    "text": "has a slightly different implementation than guess they have different options",
    "start": "1154519",
    "end": "1159580"
  },
  {
    "text": "but here's what an output trace looks like and we can actually answer a whole",
    "start": "1159580",
    "end": "1164809"
  },
  {
    "text": "bunch of these questions we can know what the this is a the example of the trace for the last transaction sent to",
    "start": "1164809",
    "end": "1171679"
  },
  {
    "text": "the contract we can see who it's from that it this is the actual self-destruct",
    "start": "1171679",
    "end": "1178490"
  },
  {
    "text": "part because it's saying it's from the contract to a different destination and it has a value that's how much ether was",
    "start": "1178490",
    "end": "1184669"
  },
  {
    "text": "sent so if we printed by this a little",
    "start": "1184669",
    "end": "1190159"
  },
  {
    "start": "1189000",
    "end": "1189000"
  },
  {
    "text": "bit there's more information to actually answering the wind' question we know the",
    "start": "1190159",
    "end": "1195889"
  },
  {
    "text": "block number we know who created the contract and this is a quick summary of",
    "start": "1195889",
    "end": "1201080"
  },
  {
    "text": "all the transactions the creator of the contract added a little bit of either to it this new",
    "start": "1201080",
    "end": "1207460"
  },
  {
    "text": "account sent some unknown Tran command",
    "start": "1207460",
    "end": "1214220"
  },
  {
    "text": "and then it's into command that we know called kill and then the self-destruct record and it's sense the point to about",
    "start": "1214220",
    "end": "1220580"
  },
  {
    "text": "point to ether to this new new account so what is this attack was this an attack maybe it definitely motivated me",
    "start": "1220580",
    "end": "1229610"
  },
  {
    "text": "to get through scanning the whole blockchain and seeing what else is out",
    "start": "1229610",
    "end": "1235160"
  },
  {
    "text": "there but it's a little more tricky than just getting a trace it turns out that",
    "start": "1235160",
    "end": "1241730"
  },
  {
    "start": "1236000",
    "end": "1236000"
  },
  {
    "text": "on the blockchain it's a distributed ledger not a database you can't just query like say select star from",
    "start": "1241730",
    "end": "1249790"
  },
  {
    "text": "transactions to an address you have to iterate over every block and we're doing",
    "start": "1249790",
    "end": "1255890"
  },
  {
    "text": "something that atheneum isn't really meant to do because we're going back and looking at transactions from two years ago most people wouldn't care but",
    "start": "1255890",
    "end": "1262460"
  },
  {
    "text": "definitely kind of curious so we have to go through a lot of blocks so what's in",
    "start": "1262460",
    "end": "1271280"
  },
  {
    "start": "1269000",
    "end": "1269000"
  },
  {
    "text": "a block as I said before blocks out transactions transactions have all sorts",
    "start": "1271280",
    "end": "1276770"
  },
  {
    "text": "of metadata who it's from who it's to if there's input if there's gas if code was",
    "start": "1276770",
    "end": "1282860"
  },
  {
    "text": "created and there's also a seat field that can can tell you most of this and",
    "start": "1282860",
    "end": "1292299"
  },
  {
    "text": "for how we get blocks programmatically there's a client API there's two popular",
    "start": "1292299",
    "end": "1297770"
  },
  {
    "start": "1293000",
    "end": "1293000"
  },
  {
    "text": "ones that are in the etherium github web 3j s and web 3dep I both have gone",
    "start": "1297770",
    "end": "1306200"
  },
  {
    "text": "through breaking API changes within the last few months I believe web three",
    "start": "1306200",
    "end": "1312620"
  },
  {
    "text": "touches has switched over to promises it can hopefully do some more synchronous",
    "start": "1312620",
    "end": "1317660"
  },
  {
    "text": "calls in web 3 pi in version 4.0 they switched iPhone 3 and totally deprecated",
    "start": "1317660",
    "end": "1324110"
  },
  {
    "text": "their Python 2 library so I was forced to upgrade everything to Python 3 and for a little bit about how you talk",
    "start": "1324110",
    "end": "1330650"
  },
  {
    "text": "connect these clients to the etherium node you can use IPC if you're on the same machine",
    "start": "1330650",
    "end": "1336290"
  },
  {
    "text": "you can use WebSockets if you're curious about streaming events like filters and you can use RPC for everything else",
    "start": "1336290",
    "end": "1345700"
  },
  {
    "start": "1347000",
    "end": "1347000"
  },
  {
    "text": "so here's finally some actual code this is how you just iterate over every block",
    "start": "1348760",
    "end": "1355120"
  },
  {
    "text": "we pass a flag to say full transactions equals true this just prefetches all the",
    "start": "1355120",
    "end": "1361100"
  },
  {
    "text": "transaction data that we're gonna eat it anyway for each transaction we get the receipt if there is a contract address",
    "start": "1361100",
    "end": "1368090"
  },
  {
    "text": "field in the receipt we know that a new contract was created then we go and",
    "start": "1368090",
    "end": "1374420"
  },
  {
    "text": "check the code if the code is empty then it's likely that it might have been self",
    "start": "1374420",
    "end": "1380780"
  },
  {
    "text": "destructed there's a few other conditions that I'll talk about later the other thing we can check for is this",
    "start": "1380780",
    "end": "1387110"
  },
  {
    "text": "status field being equal to one this is only in available after block or million",
    "start": "1387110",
    "end": "1393830"
  },
  {
    "text": "three hundred and seventy thousand for the post byzantine fork i believe and",
    "start": "1393830",
    "end": "1399500"
  },
  {
    "text": "this is a much better filter versus an error in creation but running this",
    "start": "1399500",
    "end": "1408470"
  },
  {
    "start": "1405000",
    "end": "1405000"
  },
  {
    "text": "client software isn't always so easy a",
    "start": "1408470",
    "end": "1413710"
  },
  {
    "text": "lot of times you might not get synced fully for example if you see Jeff saying",
    "start": "1413830",
    "end": "1420280"
  },
  {
    "text": "imported new State entries or updated chain data don't try to query it you won't get valid results back and a lot of some",
    "start": "1420280",
    "end": "1427370"
  },
  {
    "text": "times you won't actually get caught up to the current block sometimes parity is",
    "start": "1427370",
    "end": "1436220"
  },
  {
    "start": "1434000",
    "end": "1434000"
  },
  {
    "text": "not any better if you are running parity and you're looking in the in your console and you see this yellow number",
    "start": "1436220",
    "end": "1443240"
  },
  {
    "text": "to the left that means you can't query past that block number and get any valid results back also I found out in the",
    "start": "1443240",
    "end": "1450320"
  },
  {
    "text": "current version if you turn on a lot of archiving options it'll crash eventually but don't worry I reported that and",
    "start": "1450320",
    "end": "1456080"
  },
  {
    "text": "they're working on a fix so with these clients not able to always get us what",
    "start": "1456080",
    "end": "1463250"
  },
  {
    "text": "we need we need a solution and there's only one hope and it's either scammed IO",
    "start": "1463250",
    "end": "1468710"
  },
  {
    "text": "it's really a great resource at website you can just they've done the database query for you basically so for any",
    "start": "1468710",
    "end": "1476660"
  },
  {
    "text": "contract you want you can get a list of transactions in a few seconds just by using their website they also have some",
    "start": "1476660",
    "end": "1483170"
  },
  {
    "text": "features our contract authors can upload their source code and verify that it's",
    "start": "1483170",
    "end": "1488390"
  },
  {
    "text": "what they say it is so we'll take a hybrid approach we'll run our local",
    "start": "1488390",
    "end": "1498710"
  },
  {
    "start": "1492000",
    "end": "1492000"
  },
  {
    "text": "software to do that code that I showed earlier just to get a list of all the contracts and then forgetting the traces",
    "start": "1498710",
    "end": "1505040"
  },
  {
    "text": "I'll use ether scan they have an API actually it'll list both internal and external transactions the way it does",
    "start": "1505040",
    "end": "1511940"
  },
  {
    "text": "say to limit to five queries per second so if you have tens of thousands of contracts you're curious about like I do",
    "start": "1511940",
    "end": "1518210"
  },
  {
    "text": "it'll take a few hours but it will finish eventually so finally some",
    "start": "1518210",
    "end": "1524450"
  },
  {
    "start": "1523000",
    "end": "1523000"
  },
  {
    "text": "results type out so I queried from block 0 to 6 million that was from a few weeks",
    "start": "1524450",
    "end": "1530000"
  },
  {
    "text": "ago and found out that there have been about total of 2 million contracts created in the etherium network on main",
    "start": "1530000",
    "end": "1536930"
  },
  {
    "text": "that and of those about 55,000 are empty is your X so I was like wow I had no",
    "start": "1536930",
    "end": "1545120"
  },
  {
    "text": "idea what to expect I just looked at my I just didn't LS and WC - no so how many",
    "start": "1545120",
    "end": "1550370"
  },
  {
    "text": "there were and I got curious like what if I md5 them how many of these are actually unique and it turns out about half of them are duplicates in some way",
    "start": "1550370",
    "end": "1556250"
  },
  {
    "text": "and the other thing to note is that",
    "start": "1556250",
    "end": "1561940"
  },
  {
    "text": "about 32,000 of them or empty and had a balance of zero this so there were some",
    "start": "1561940",
    "end": "1567500"
  },
  {
    "text": "that are empty that had a balance and I was kind of weird because if they were destroyed by a self-destruct they wouldn't have any balance because it",
    "start": "1567500",
    "end": "1573830"
  },
  {
    "text": "transfers all the balance to the argument so I started looking at what",
    "start": "1573830",
    "end": "1580250"
  },
  {
    "start": "1578000",
    "end": "1578000"
  },
  {
    "text": "are these 0x contracts and it turns out the first one is kind of an interesting",
    "start": "1580250",
    "end": "1585380"
  },
  {
    "text": "case we're almost at the three year anniversary of this this was the first attempt at creating a contract and I say",
    "start": "1585380",
    "end": "1592640"
  },
  {
    "text": "attempts because they didn't pass in enough gas to create it I believe when it hit this s store RS or",
    "start": "1592640",
    "end": "1598850"
  },
  {
    "text": "uses 20,000 gas and they just didn't send enough but if you use the clients to query this it just",
    "start": "1598850",
    "end": "1604400"
  },
  {
    "text": "returns empty later that day there was a",
    "start": "1604400",
    "end": "1610610"
  },
  {
    "start": "1609000",
    "end": "1609000"
  },
  {
    "text": "contract that contract was co-created there was empty but it doesn't have any",
    "start": "1610610",
    "end": "1618650"
  },
  {
    "text": "code in it they just sent an empty transaction about a input value the kind",
    "start": "1618650",
    "end": "1623690"
  },
  {
    "text": "of disappointing part of this is you'll see in value the the person who did this",
    "start": "1623690",
    "end": "1628970"
  },
  {
    "text": "sent fourteen ether to this so now this contract that has no code permanently",
    "start": "1628970",
    "end": "1635210"
  },
  {
    "text": "forever has about seven thousand dollars a V theory imminent but later later that",
    "start": "1635210",
    "end": "1641990"
  },
  {
    "start": "1641000",
    "end": "1641000"
  },
  {
    "text": "day there was a contract that was created successfully but just to kind of show that there's noise and transactions",
    "start": "1641990",
    "end": "1648350"
  },
  {
    "text": "and that everything is immutable a couple months ago somebody decided to",
    "start": "1648350",
    "end": "1654230"
  },
  {
    "text": "send 420 in way as value to this contract that doesn't do anything with",
    "start": "1654230",
    "end": "1659419"
  },
  {
    "text": "it and then later that day somebody also sent at 69 way so I was curious about",
    "start": "1659419",
    "end": "1668419"
  },
  {
    "text": "more of these duplicates so I just did like unique def see saw what was the",
    "start": "1668419",
    "end": "1674419"
  },
  {
    "text": "most common one and this was kind of interesting in the contracts here",
    "start": "1674419",
    "end": "1681440"
  },
  {
    "text": "basically just infinite loops it kind of jumps back into itself in a few spots and it calls code copy which takes the",
    "start": "1681440",
    "end": "1688970"
  },
  {
    "text": "code you see here and copies it into memory it turns out that some people on",
    "start": "1688970",
    "end": "1694549"
  },
  {
    "text": "Stack Exchange say that this is a network dos because it just to keep reading code and several accounts since",
    "start": "1694549",
    "end": "1700460"
  },
  {
    "text": "this about ten thousand times to go",
    "start": "1700460",
    "end": "1705950"
  },
  {
    "start": "1705000",
    "end": "1705000"
  },
  {
    "text": "along with that second example from before there have been about another",
    "start": "1705950",
    "end": "1712610"
  },
  {
    "text": "10,000 accounts created that have a total of about 2.5 million dollars but",
    "start": "1712610",
    "end": "1717950"
  },
  {
    "text": "they have a new code behind them so there's no way to get it back for one",
    "start": "1717950",
    "end": "1726440"
  },
  {
    "text": "more example of duplicates this one was kind of funny it was just really big there are 6,000 adults and",
    "start": "1726440",
    "end": "1733639"
  },
  {
    "text": "these contract this contract code so it doesn't actually make it the contract doesn't actually do anything it because",
    "start": "1733639",
    "end": "1740149"
  },
  {
    "text": "in all this the stop opcode but that 6000 number is kind of interesting I noticed that in this VIP basically the",
    "start": "1740149",
    "end": "1747769"
  },
  {
    "text": "RFC s4 aetherium and 170 the maximum size is hex 6000 so",
    "start": "1747769",
    "end": "1753859"
  },
  {
    "text": "maybe whoever was trying to fill up the blockchain and I had a heck forces decimal conversion problem and there's",
    "start": "1753859",
    "end": "1762079"
  },
  {
    "text": "one more interesting example of and here we've actually have a real self destructs there's a few thousand of",
    "start": "1762079",
    "end": "1768679"
  },
  {
    "text": "these where they just push address and call self-destruct that's the total purpose of this contract and in the",
    "start": "1768679",
    "end": "1775219"
  },
  {
    "text": "transaction trace they all send zero one or two way basically nothing like even like an ADD opcode cost three-way so I",
    "start": "1775219",
    "end": "1783789"
  },
  {
    "text": "went on ether scan and looked at what this look like and we just see this huge",
    "start": "1783789",
    "end": "1790609"
  },
  {
    "text": "list of self-destructs there I think about 500 in this transaction and it's",
    "start": "1790609",
    "end": "1796759"
  },
  {
    "text": "actually it's like what's going on this is really weird I haven't seen anybody really talk about it and it turns out that this is the net",
    "start": "1796759",
    "end": "1804829"
  },
  {
    "text": "effect of that transaction well it actually happened was there were a whole bunch of contracts created each one was",
    "start": "1804829",
    "end": "1812179"
  },
  {
    "start": "1806000",
    "end": "1806000"
  },
  {
    "text": "set to send a message to another one it would then self-destruct and just kind of spam out on the network this",
    "start": "1812179",
    "end": "1819829"
  },
  {
    "text": "only happened a few times but it definitely filtered out a whole lot of",
    "start": "1819829",
    "end": "1825469"
  },
  {
    "text": "transactions just because it was just a whole lot of noise or about three or four thousand of these in total so after",
    "start": "1825469",
    "end": "1834469"
  },
  {
    "text": "all that filtering down to about two thousand contracts I think this was a previous slide was like 1988 we round up",
    "start": "1834469",
    "end": "1842469"
  },
  {
    "text": "so we filtered it out a lot of spam some dust attempts a lot of noise and let's get into some specific criteria for",
    "start": "1842469",
    "end": "1849379"
  },
  {
    "text": "finding these cases of self-destructs",
    "start": "1849379",
    "end": "1853659"
  },
  {
    "start": "1853000",
    "end": "1853000"
  },
  {
    "text": "so I'll just kind of give a high-level overview with more emojis to explain what we're looking for so if",
    "start": "1856250",
    "end": "1862669"
  },
  {
    "text": "somebody creates a contract that's totally normal so some things we may be interested in is when the self-destruct",
    "start": "1862669",
    "end": "1870200"
  },
  {
    "text": "when somebody when the owner sends a self-destruct to the robot at the robot contracts and then that ends up sending",
    "start": "1870200",
    "end": "1878330"
  },
  {
    "text": "money to a different address it wasn't the original creator that can be a red flag another red flag would be as if",
    "start": "1878330",
    "end": "1884240"
  },
  {
    "text": "somebody who wasn't the original creator causes the self-destruct transaction so",
    "start": "1884240",
    "end": "1890450"
  },
  {
    "text": "let's do some more filtering in and see what meets these conditions so again",
    "start": "1890450",
    "end": "1899659"
  },
  {
    "start": "1896000",
    "end": "1896000"
  },
  {
    "text": "from the trace we know the destination of these self-destruct transfer and when",
    "start": "1899659",
    "end": "1907190"
  },
  {
    "text": "we filter who was not the original creator there's only 630 contracts and a",
    "start": "1907190",
    "end": "1914720"
  },
  {
    "text": "kind of depressing fact about 10 of those is they self-destructed and since their money to address 0 so it kind of",
    "start": "1914720",
    "end": "1921799"
  },
  {
    "text": "burned it forever the most unfortunate of these is somebody sent 50 ether that's several thousand dollars in this",
    "start": "1921799",
    "end": "1929510"
  },
  {
    "text": "transaction and in the ether scan trace the owner called a kill command that",
    "start": "1929510",
    "end": "1936200"
  },
  {
    "text": "took an argument called - and just was all zeros so I don't know if they did this intentionally but it is kind of",
    "start": "1936200",
    "end": "1942350"
  },
  {
    "text": "unfortunate to see somebody lose what's like $20,000 in today's value another",
    "start": "1942350",
    "end": "1950000"
  },
  {
    "start": "1949000",
    "end": "1949000"
  },
  {
    "text": "one of these transactions that I got kind of excited about was the largest self-destruct in history where it sent",
    "start": "1950000",
    "end": "1957110"
  },
  {
    "text": "10,000 'if but I think this is after",
    "start": "1957110",
    "end": "1962210"
  },
  {
    "text": "looking at the transaction traces I think it's ok I can't be completely sure because I don't know who all the",
    "start": "1962210",
    "end": "1967460"
  },
  {
    "text": "accounts are but in this contract it implemented a parody multi-sig Walla it",
    "start": "1967460",
    "end": "1974450"
  },
  {
    "text": "was likely vulnerable to this and it wallet attack basically there were some",
    "start": "1974450",
    "end": "1979789"
  },
  {
    "text": "initialize variables in the in the constructor so done by a function later",
    "start": "1979789",
    "end": "1986330"
  },
  {
    "text": "but anybody can call that function and initially influence the state of it so the first transaction to this contract",
    "start": "1986330",
    "end": "1994310"
  },
  {
    "text": "was calling an it wallet and but I followed it later and nobody transferred",
    "start": "1994310",
    "end": "2001000"
  },
  {
    "text": "in 10,000 aetherium to it that 10,000 ethereal transfer happened as the self-destruct happened in the",
    "start": "2001000",
    "end": "2007510"
  },
  {
    "text": "same transaction so I think this was actually a system set up as part of a token presale and they just happen to",
    "start": "2007510",
    "end": "2015370"
  },
  {
    "text": "get lucky and nobody redirected their transfer for one example of the this",
    "start": "2015370",
    "end": "2023560"
  },
  {
    "text": "parody anit wallet attack at the bottom of this slide these are the actual",
    "start": "2023560",
    "end": "2029230"
  },
  {
    "text": "attacks that are probably the largest ever on the etherion network this one person got over a hundred and twenty",
    "start": "2029230",
    "end": "2037570"
  },
  {
    "text": "thousand ether in a couple of minutes doing the attack but it wasn't this one",
    "start": "2037570",
    "end": "2042880"
  },
  {
    "text": "so it's kind of bummed about that so let's do some more filtering and we have",
    "start": "2042880",
    "end": "2053740"
  },
  {
    "start": "2045000",
    "end": "2045000"
  },
  {
    "text": "these hundred and then we'll have from 630 down to about 160 transactions where",
    "start": "2053740",
    "end": "2059139"
  },
  {
    "text": "the originator of the self-destructs wasn't the original creator and then just looking at these there's only 25",
    "start": "2059140",
    "end": "2065800"
  },
  {
    "text": "that have sent more than point 1 e and 16 that sent ye so there actually hasn't",
    "start": "2065800",
    "end": "2071648"
  },
  {
    "text": "been a lot of these like mass hacks using self-destructs but because there's so few I kind of like look through every",
    "start": "2071649",
    "end": "2077320"
  },
  {
    "text": "one and I'll show you some of the results",
    "start": "2077320",
    "end": "2082470"
  },
  {
    "start": "2082000",
    "end": "2082000"
  },
  {
    "text": "so this was one of the largest transfers on the self-destructs where 308th was",
    "start": "2087360",
    "end": "2093250"
  },
  {
    "text": "sent to a different address from from a transaction that was not the original creator but going through the trace we",
    "start": "2093250",
    "end": "2099790"
  },
  {
    "text": "find out that this was actually intentional this first argument from was the original creator and they just",
    "start": "2099790",
    "end": "2107800"
  },
  {
    "text": "the contract was coded to allow somebody else to be the owner so this is actually a totally okay thing to do and they were",
    "start": "2107800",
    "end": "2114040"
  },
  {
    "text": "just using the etherion features this will be a little bit of a trend as well see so this one kind of stood out to me",
    "start": "2114040",
    "end": "2124660"
  },
  {
    "text": "in my list because it has a really interesting address address it's like dice EE and it turns out that if you",
    "start": "2124660",
    "end": "2134110"
  },
  {
    "text": "look at the Creator they've created several contracts including some that have source code available and it's just a gambling game and this is yet another",
    "start": "2134110",
    "end": "2141520"
  },
  {
    "text": "example of where the transaction came from somebody else but it's was actually",
    "start": "2141520",
    "end": "2147520"
  },
  {
    "text": "totally intentional and this one sent 65 ether that's a lot",
    "start": "2147520",
    "end": "2154600"
  },
  {
    "start": "2154000",
    "end": "2154000"
  },
  {
    "text": "so there's turns out there's even more gambling on the blockchain here's another one that turns out to be",
    "start": "2154600",
    "end": "2160300"
  },
  {
    "text": "intentional it's called ether Wow the Google",
    "start": "2160300",
    "end": "2166120"
  },
  {
    "text": "Translate says it's the most popular blockchain guessing digital game in China I'm not so sure because there's",
    "start": "2166120",
    "end": "2172900"
  },
  {
    "text": "only been a few ether ever transferred into any of these things and in a",
    "start": "2172900",
    "end": "2181120"
  },
  {
    "text": "different version of this the creator's created several contracts and if you",
    "start": "2181120",
    "end": "2186490"
  },
  {
    "text": "trace through them one of them has source code available and there's this really dramatic comment above their",
    "start": "2186490",
    "end": "2192850"
  },
  {
    "text": "owner kill function to be very careful emergency only for contract upgrading so",
    "start": "2192850",
    "end": "2198460"
  },
  {
    "text": "again this is yet another example with these large transfers but it doesn't look like it's an attack it's just the",
    "start": "2198460",
    "end": "2207070"
  },
  {
    "text": "design of the contract",
    "start": "2207070",
    "end": "2210390"
  },
  {
    "start": "2211000",
    "end": "2211000"
  },
  {
    "text": "so I finally have one that's a real example of a likely attack basically",
    "start": "2212960",
    "end": "2220380"
  },
  {
    "text": "there's this contract that ended up calling this mortal function and it was",
    "start": "2220380",
    "end": "2227880"
  },
  {
    "text": "the exact conditions we want it was somebody who is not the original creator",
    "start": "2227880",
    "end": "2233130"
  },
  {
    "text": "of the contract the destination wasn't the original creator either and I can't",
    "start": "2233130",
    "end": "2239010"
  },
  {
    "text": "be sure exactly what happened because we don't know the intent behind everything but it what it looks like is somebody",
    "start": "2239010",
    "end": "2244890"
  },
  {
    "text": "copied some code from this immortal contract which its intended functionality is to initialize the owner",
    "start": "2244890",
    "end": "2251790"
  },
  {
    "text": "and if you're the owner you can kill the contract but I think somebody probably",
    "start": "2251790",
    "end": "2257580"
  },
  {
    "text": "renamed the contracts if they're for exposing this mortal function to anybody because somebody totally called this",
    "start": "2257580",
    "end": "2265320"
  },
  {
    "text": "function and became the owner and got a couple ether",
    "start": "2265320",
    "end": "2270710"
  },
  {
    "start": "2275000",
    "end": "2275000"
  },
  {
    "text": "so we learned from all of this there's not a lot of like epic attacks on the",
    "start": "2275619",
    "end": "2282880"
  },
  {
    "text": "blockchain a few of them do happen but it's really difficult to go in and tell",
    "start": "2282880",
    "end": "2287920"
  },
  {
    "text": "what happened a few years ago to actually analyze this I couldn't even do it on my own computer I needed to use ether scan to help fill in a lot of the",
    "start": "2287920",
    "end": "2295719"
  },
  {
    "text": "blanks so if you're in theory developer",
    "start": "2295719",
    "end": "2302710"
  },
  {
    "text": "here I'd strongly recommend you understand and fix all of your warnings maybe use the or echidna testing",
    "start": "2302710",
    "end": "2309819"
  },
  {
    "text": "framework to help make better tests just few early rigorous if you'd like some help",
    "start": "2309819",
    "end": "2314910"
  },
  {
    "text": "performing the assessment under your contracts definitely get in touch with us we're very thorough if you're a",
    "start": "2314910",
    "end": "2322719"
  },
  {
    "text": "security researcher become a blockchain Explorer it's kind of fun you fill up your whole hard drive and you can like",
    "start": "2322719",
    "end": "2327729"
  },
  {
    "text": "do some sequel queries later but grubart have patience and if you're into",
    "start": "2327729",
    "end": "2332769"
  },
  {
    "text": "symbolic execution check out Manticore and thank you for your attention",
    "start": "2332769",
    "end": "2341099"
  },
  {
    "text": "[Applause]",
    "start": "2341980",
    "end": "2345159"
  }
]