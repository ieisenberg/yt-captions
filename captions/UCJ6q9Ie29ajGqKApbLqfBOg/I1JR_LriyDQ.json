[
  {
    "start": "0",
    "end": "55000"
  },
  {
    "text": "okay good afternoon everyone uh today I'll will be talking about uh the paration one is the fing",
    "start": "240",
    "end": "10000"
  },
  {
    "text": "and exploiting strategies in Android to achieve privilege",
    "start": "10000",
    "end": "15320"
  },
  {
    "text": "escalation and uh firstly I would do I want to do a brief introduction uh my",
    "start": "15320",
    "end": "21320"
  },
  {
    "text": "name is shidan and also known as flanker and I'm a senior security researcher at",
    "start": "21320",
    "end": "28240"
  },
  {
    "text": "tenson King lab a former known as king team and uh uh my main focus is",
    "start": "28240",
    "end": "34520"
  },
  {
    "text": "vulnerability adulting uh auditing and the fing and including iOS OSX and",
    "start": "34520",
    "end": "40960"
  },
  {
    "text": "Android and Linux security uh you you can see there are no windows I'm not familiar with Windows and uh I'm also a",
    "start": "40960",
    "end": "48879"
  },
  {
    "text": "ponon 2016 OSX category winner and uh about my team and uh we we",
    "start": "48879",
    "end": "56520"
  },
  {
    "start": "55000",
    "end": "55000"
  },
  {
    "text": "are previously known as king team and uh uh due to some business requirements our",
    "start": "56520",
    "end": "63359"
  },
  {
    "text": "researchers now move to tensent King lab and uh our unit team with tenson PC",
    "start": "63359",
    "end": "69320"
  },
  {
    "text": "manager has just won the master opwn at Pon 2016 about two weeks",
    "start": "69320",
    "end": "77119"
  },
  {
    "text": "ago okay uh now let's go to the technology part and uh this is the",
    "start": "77119",
    "end": "84439"
  },
  {
    "text": "agenda for today's talk and uh I will first do an introduction on the B under",
    "start": "84439",
    "end": "90240"
  },
  {
    "text": "architecture and its over overview of these Tech surfaces and also I'll",
    "start": "90240",
    "end": "96079"
  },
  {
    "text": "introduce how we do some fing and uh our fing strategies our fing implementation",
    "start": "96079",
    "end": "102159"
  },
  {
    "text": "and the fing architecture and thirdly we will do a I will do a briefing on a case",
    "start": "102159",
    "end": "108399"
  },
  {
    "text": "study of the cve uh 205 6 6620 and how we can achieve both infol",
    "start": "108399",
    "end": "116640"
  },
  {
    "text": "leak and cod discution in a single vulnerability and finally it's a",
    "start": "116640",
    "end": "122240"
  },
  {
    "text": "summary so what is binder binder is a CO is a c mechanism for interprocess",
    "start": "122240",
    "end": "129119"
  },
  {
    "text": "communication in Android and uh uh about uh four or five years ago it is called",
    "start": "129119",
    "end": "134560"
  },
  {
    "text": "open binder and uh it's acquired by Google and uh it's uh built uh it is",
    "start": "134560",
    "end": "140440"
  },
  {
    "text": "built for the core uh interpress Communication in Android and uh uh the",
    "start": "140440",
    "end": "145920"
  },
  {
    "text": "Android is is a bit different Android kernel is a bit different from from the Linux kernel there's no system V ipcs in",
    "start": "145920",
    "end": "153640"
  },
  {
    "text": "Android there's there's no shared there's no message cues uh and uh but",
    "start": "153640",
    "end": "159280"
  },
  {
    "text": "Android still has shared memories and uh so Android removes the system VI ipcs uh",
    "start": "159280",
    "end": "166280"
  },
  {
    "text": "to prevent resource leakage and uh to prevent deniable service vulnerabilities",
    "start": "166280",
    "end": "172080"
  },
  {
    "text": "that we can create many message cues and many uh C phones to to cuse cause this",
    "start": "172080",
    "end": "179480"
  },
  {
    "text": "device unusable and it is not in the poix implementation until uh 2015 where",
    "start": "179480",
    "end": "187519"
  },
  {
    "text": "the binder architecture is finally merged into the Linux mainstream",
    "start": "187519",
    "end": "192720"
  },
  {
    "text": "kernel and the binder has has many advantages for uh it's it's is also why",
    "start": "192720",
    "end": "200440"
  },
  {
    "start": "193000",
    "end": "193000"
  },
  {
    "text": "it's chosen for the core architecture for Android because it has many advantages and the first of which is the",
    "start": "200440",
    "end": "207400"
  },
  {
    "text": "building reference count of object and it is it is done at this at the C++",
    "start": "207400",
    "end": "213080"
  },
  {
    "text": "level by all objects extending rough base and it also implements a des",
    "start": "213080",
    "end": "219040"
  },
  {
    "text": "notification mechanism uh so that uh uh for example uh one application registers",
    "start": "219040",
    "end": "226040"
  },
  {
    "text": "a callback for a GPS location moves and uh uh the binder architecture will be",
    "start": "226040",
    "end": "232640"
  },
  {
    "text": "used uh to notify the end the end the end applications about the movements of",
    "start": "232640",
    "end": "238079"
  },
  {
    "text": "the user's GPS location and the binder also provides the ability to share fire descriptors and the",
    "start": "238079",
    "end": "244840"
  },
  {
    "text": "shareed memory across across process boundaries so that U we can achieve uh",
    "start": "244840",
    "end": "251159"
  },
  {
    "text": "efficient uh fire sharing and memory sharing uh for example the Android share",
    "start": "251159",
    "end": "257239"
  },
  {
    "text": "memory is actually passed where uh right fire descriptor it is it is encapsulated",
    "start": "257239",
    "end": "263320"
  },
  {
    "text": "as a fire descriptor and also the median server Place median fire actually uh",
    "start": "263320",
    "end": "268919"
  },
  {
    "text": "where a past fire descriptor and the binder also support a synchronize and a",
    "start": "268919",
    "end": "274039"
  },
  {
    "text": "synchronized cause uh the most obvious example for a synchronized cause uh",
    "start": "274039",
    "end": "279120"
  },
  {
    "text": "activity starting a s responding a listen listener registering we can see",
    "start": "279120",
    "end": "284280"
  },
  {
    "text": "it frequently in everyday's Java world and for synchronized cause it you can",
    "start": "284280",
    "end": "289840"
  },
  {
    "text": "just directly call a binder service and after it returns you can get a",
    "start": "289840",
    "end": "295720"
  },
  {
    "text": "results so the the ibinder class is the key of the of the binder heart and the",
    "start": "295720",
    "end": "303000"
  },
  {
    "text": "the procedure of calling um remote service is as follows uh the remote",
    "start": "303000",
    "end": "308400"
  },
  {
    "text": "service is mapped to handle and uh uh first you you should get a remote",
    "start": "308400",
    "end": "313759"
  },
  {
    "text": "service and a remote service is mapped to a integer handle and the handle is will be constructed as a BP binder and",
    "start": "313759",
    "end": "321520"
  },
  {
    "text": "the BP binder will then be passed to the BP interface where the S interface call",
    "start": "321520",
    "end": "328319"
  },
  {
    "text": "and uh for example for the crypto Service uh the the class name the",
    "start": "328319",
    "end": "333639"
  },
  {
    "text": "inherency the inherence uh is actually looks like a new BP crypto and extends",
    "start": "333639",
    "end": "341199"
  },
  {
    "text": "from BP interface with a template name I crypto and the I crypto is the abstract",
    "start": "341199",
    "end": "347160"
  },
  {
    "text": "business logic interface and uh you can there are many virtual functions in the",
    "start": "347160",
    "end": "353199"
  },
  {
    "text": "I crypto and uh and end developers should implement",
    "start": "353199",
    "end": "358440"
  },
  {
    "text": "this and the BP interface uh is extends from I crypto and BP ref base to uh",
    "start": "358440",
    "end": "365319"
  },
  {
    "text": "provide the basic ref count so when uh an end application made",
    "start": "365319",
    "end": "372880"
  },
  {
    "start": "368000",
    "end": "368000"
  },
  {
    "text": "a transaction the biner token is written together with the transaction command and the transaction data using IO",
    "start": "372880",
    "end": "380160"
  },
  {
    "text": "control to DV binder and the binder driver will cury uh query in this",
    "start": "380160",
    "end": "385800"
  },
  {
    "text": "internal mapping about uh from binder token to uh Act remote binder service",
    "start": "385800",
    "end": "391360"
  },
  {
    "text": "and it will relay command to appropriate service and the BB binder is the service",
    "start": "391360",
    "end": "397120"
  },
  {
    "text": "service part implementation of of the of the remote service and uh uh it is",
    "start": "397120",
    "end": "405240"
  },
  {
    "text": "usually some subass of the BN interface and uh it will handles incoming data in",
    "start": "405240",
    "end": "412240"
  },
  {
    "text": "the untrans function and we can usually found many memory corruption box",
    "start": "412240",
    "end": "417520"
  },
  {
    "text": "information leage box here and uh we will use some diagram to illustrate",
    "start": "417520",
    "end": "425560"
  },
  {
    "text": "it uh so this is a a bit complex looking",
    "start": "425560",
    "end": "430639"
  },
  {
    "text": "uh inherence diagram and we can see on the top of the tree is a ref based class",
    "start": "430639",
    "end": "436240"
  },
  {
    "text": "the ref based class is a ref counting Counting based class in Google's C++",
    "start": "436240",
    "end": "442039"
  },
  {
    "text": "language and uh it is the father class of all the",
    "start": "442039",
    "end": "447960"
  },
  {
    "text": "uh all the class listed in the diagram and the I interface is actually an",
    "start": "447960",
    "end": "455160"
  },
  {
    "text": "abstract is an abstract class implementing a function called on as binder and we can see that the B the B",
    "start": "455160",
    "end": "463599"
  },
  {
    "text": "BN interface the BN interface which is the implementation at the server side it will sub class from I interface and the",
    "start": "463599",
    "end": "470800"
  },
  {
    "text": "B binder and on the other hand the in the client proy class it is called the",
    "start": "470800",
    "end": "476800"
  },
  {
    "text": "BP interface the BP interface will implement ments the I interface and the BP ref base and uh there is a a line",
    "start": "476800",
    "end": "485759"
  },
  {
    "text": "connecting BP R base and BP bunder it is because the BP ref base will hold a",
    "start": "485759",
    "end": "491680"
  },
  {
    "text": "reference to the BP bunder and the BP bunder will hold the the handle that",
    "start": "491680",
    "end": "497039"
  },
  {
    "text": "will the handle that will maps to the remote",
    "start": "497039",
    "end": "501960"
  },
  {
    "text": "service and there are also many some some other classes here like the process State uh like the IPC State and this is",
    "start": "502479",
    "end": "511680"
  },
  {
    "text": "actually the worker functions the worker function that will pass through that will receive and pass through b data ban",
    "start": "511680",
    "end": "519039"
  },
  {
    "text": "data and we can see on the left on the left uh upper corner there is a function",
    "start": "519039",
    "end": "524800"
  },
  {
    "text": "called transact and you can see the first function is the IIT with driver uh",
    "start": "524800",
    "end": "530200"
  },
  {
    "text": "the second function is the right transaction right transaction data and the the third function is wait for",
    "start": "530200",
    "end": "536279"
  },
  {
    "text": "response that this is the uh like like the internal function that will actually",
    "start": "536279",
    "end": "543519"
  },
  {
    "text": "release release the uh binder the parle",
    "start": "543519",
    "end": "549200"
  },
  {
    "text": "data and we can see here that there is also a class called I crypto the I crypto class extends from I interface",
    "start": "554399",
    "end": "561959"
  },
  {
    "text": "and it will holds the actual business logic uh in the class like for example",
    "start": "561959",
    "end": "567720"
  },
  {
    "text": "Android crypto service pre uh provide some functions like uh a cury for uh uh",
    "start": "567720",
    "end": "575279"
  },
  {
    "text": "cury for crypto scheme uh like a query for C crypto plug-in and uh uh the I",
    "start": "575279",
    "end": "581920"
  },
  {
    "text": "crypto will will contain the pro the peral function names for this functionality and the BN the BN",
    "start": "581920",
    "end": "589720"
  },
  {
    "text": "interface and thus the BN crypto will actually implement this function at the server",
    "start": "589720",
    "end": "596399"
  },
  {
    "text": "side so we can reach a conclusion here that uh uh BP the BP uh or whatever",
    "start": "597760",
    "end": "604399"
  },
  {
    "start": "598000",
    "end": "598000"
  },
  {
    "text": "service like a BP crypto service like a BP hdcp service that all kinds of the",
    "start": "604399",
    "end": "609440"
  },
  {
    "text": "service in Android they holds like they holds a client calling convention that",
    "start": "609440",
    "end": "615200"
  },
  {
    "text": "they will uh describe which kind of parameters uh which uh how many",
    "start": "615200",
    "end": "620920"
  },
  {
    "text": "parameters will be passed uh by parle do right in uh 32 parle do uh right uh",
    "start": "620920",
    "end": "628519"
  },
  {
    "text": "string write long or write also some primitive types and the BN service the",
    "start": "628519",
    "end": "634399"
  },
  {
    "text": "BN service like BN crypto service or BD HP service or other BN XA service will",
    "start": "634399",
    "end": "640839"
  },
  {
    "text": "hold the transaction logic in the server",
    "start": "640839",
    "end": "645279"
  },
  {
    "text": "side also uh we will have question here that uh uh besides passing primitive dat",
    "start": "646760",
    "end": "653040"
  },
  {
    "text": "primitive data types like integer like string or like long like float uh how do",
    "start": "653040",
    "end": "659639"
  },
  {
    "text": "they pass complex data types and here uh we we we introduce a concept called Data",
    "start": "659639",
    "end": "666160"
  },
  {
    "text": "boxing and unboxing and uh we can see that PCO the the the PCO uh class",
    "start": "666160",
    "end": "672800"
  },
  {
    "text": "defines basic data types like pules like in like string like strong B binder but",
    "start": "672800",
    "end": "678800"
  },
  {
    "text": "for complex data types uh we need to build them on PS that we need to speed",
    "start": "678800",
    "end": "684279"
  },
  {
    "text": "them into the best into the basic transaction types and uh there is no",
    "start": "684279",
    "end": "690160"
  },
  {
    "text": "type information in the in the transaction stream and the receiver side will just implement we just in interpret",
    "start": "690160",
    "end": "698519"
  },
  {
    "text": "the passing data types passing the passing data stream and uh and think uh",
    "start": "698519",
    "end": "704360"
  },
  {
    "text": "it it won't per perform a type check so we can see some profit here",
    "start": "704360",
    "end": "710279"
  },
  {
    "start": "710000",
    "end": "710000"
  },
  {
    "text": "after and uh the data boxing and boxing Java in the Java World in Android is a",
    "start": "710279",
    "end": "715959"
  },
  {
    "text": "bit different the par. Java also defines basic data types but it has more one",
    "start": "715959",
    "end": "722200"
  },
  {
    "text": "more the seriz BS the seriz B has 12 info stream in their data stream and so",
    "start": "722200",
    "end": "728839"
  },
  {
    "text": "there are also some historical vulnerabilities here that if this class is actually sterilizable if it actually",
    "start": "728839",
    "end": "735720"
  },
  {
    "text": "extends from seriz B and this is CV uh 2014 7911 and also in last year there's",
    "start": "735720",
    "end": "743959"
  },
  {
    "text": "also a vulnerability relating relating to data boxing and unboxing in Android Java world that is all the fields in",
    "start": "743959",
    "end": "751519"
  },
  {
    "text": "this class instance secure to accept seriz the out uh from seriz the input",
    "start": "751519",
    "end": "757160"
  },
  {
    "text": "from outside world and this is CV uh 2015 3825 and I will not elaborate here and",
    "start": "757160",
    "end": "766079"
  },
  {
    "text": "if you are interested you can consult their related materials so after introducing the",
    "start": "766079",
    "end": "772760"
  },
  {
    "text": "binder architecture uh we now have some we now have some ideas to do some fing",
    "start": "772760",
    "end": "778240"
  },
  {
    "text": "that uh uh fortunately uh the Google developers the Google PR the programmer",
    "start": "778240",
    "end": "783519"
  },
  {
    "text": "programmers at Mountain VI they follows the good coding patterns so we can do an automatic static code puing to determine",
    "start": "783519",
    "end": "792079"
  },
  {
    "text": "that for each binder interface for each binder service interface which kind of parameters they will accept we will",
    "start": "792079",
    "end": "799639"
  },
  {
    "text": "search and collect all BP class and BN class definitions and we will uh pass",
    "start": "799639",
    "end": "805680"
  },
  {
    "text": "out the interface arguments uh we you can see that in the in the in the",
    "start": "805680",
    "end": "812360"
  },
  {
    "text": "screenshot we can see that there is some functions named the data do right iner",
    "start": "812360",
    "end": "818680"
  },
  {
    "text": "to or right interface token right right right interface token is actually a a",
    "start": "818680",
    "end": "824320"
  },
  {
    "text": "string and also the in the lower part we can see a data WR key 16 that means it",
    "start": "824320",
    "end": "832720"
  },
  {
    "text": "writes uh a bite stream with lens 16 to the parle so with this know",
    "start": "832720",
    "end": "839639"
  },
  {
    "text": "in hand we can uh we can we can know that uh uh what parameters this sper",
    "start": "839639",
    "end": "846600"
  },
  {
    "text": "service will accept and uh they and how they will",
    "start": "846600",
    "end": "851639"
  },
  {
    "text": "appear so uh we do a preing on this argument information and we will store",
    "start": "851639",
    "end": "857079"
  },
  {
    "text": "it in like a uh database or Json or whatever you like and uh we will do a",
    "start": "857079",
    "end": "863279"
  },
  {
    "text": "agent server design to uh to do a fing because uh we will run we will run agent on Android phone and the agent will",
    "start": "863279",
    "end": "870839"
  },
  {
    "text": "accept this input from server where socket or or direct com command line",
    "start": "870839",
    "end": "876839"
  },
  {
    "text": "arguments and the parameter we have the parameter info but how to fill the",
    "start": "876839",
    "end": "882040"
  },
  {
    "text": "parameter for example in in this picture we see that uh the argument needs a int",
    "start": "882040",
    "end": "889040"
  },
  {
    "text": "first it need a string then it need a int and then it need in again and it",
    "start": "889040",
    "end": "894440"
  },
  {
    "text": "needs a bite array of 16 lens and B array of 16 lens so uh we need some",
    "start": "894440",
    "end": "899839"
  },
  {
    "text": "logic to feel that which in integer we will use and which content of b r we will use so uh in this part I use some",
    "start": "899839",
    "end": "908079"
  },
  {
    "text": "prefield contents like some integers that will frequently triggers integer",
    "start": "908079",
    "end": "913399"
  },
  {
    "text": "flow like uh FF FF FF or or like this and we also record some we record some",
    "start": "913399",
    "end": "921360"
  },
  {
    "text": "binder transactions in the normal applications and we'll do a bit flip and also we'll do a pure random randomized",
    "start": "921360",
    "end": "928160"
  },
  {
    "text": "fing and uh take median server as an example that if we trigger the crash in",
    "start": "928160",
    "end": "933680"
  },
  {
    "text": "median server the the media server will reboot itself and we we will see that the P it PID has changed so we can",
    "start": "933680",
    "end": "940800"
  },
  {
    "text": "retrieve the crash lock in tom cat um sorry in loat and the Tom",
    "start": "940800",
    "end": "947199"
  },
  {
    "start": "947000",
    "end": "947000"
  },
  {
    "text": "Stones so uh also I have introduced the fing strategies in the native land but",
    "start": "947800",
    "end": "954199"
  },
  {
    "text": "for for the Java land the story is a bit different because in the most objects in",
    "start": "954199",
    "end": "959399"
  },
  {
    "text": "land the transaction is passed is passed in the form of sterilized stream like uh",
    "start": "959399",
    "end": "965160"
  },
  {
    "text": "uh uh like a sterilizable or or or like like this for example the Java Java do",
    "start": "965160",
    "end": "971800"
  },
  {
    "text": "language. string and the java. language. float or like this they are passed in a",
    "start": "971800",
    "end": "977040"
  },
  {
    "text": "in a format of serite stream so uh for this part of fing I use some intercept and mutate strategy so I do uh for I",
    "start": "977040",
    "end": "986160"
  },
  {
    "text": "hook into a normal application and I mutate the B stream uh for the B stream",
    "start": "986160",
    "end": "991560"
  },
  {
    "text": "for each class and uh mutated the type info string header in the in the Java uh",
    "start": "991560",
    "end": "996920"
  },
  {
    "text": "data data stream and uh this uh fing strategy is uh triggers a lot of crashes",
    "start": "996920",
    "end": "1003360"
  },
  {
    "text": "but unfortunately uh because the language the N the safety nature of java",
    "start": "1003360",
    "end": "1008560"
  },
  {
    "text": "language we do not get explorable memory corruption box we only get some om or in",
    "start": "1008560",
    "end": "1015319"
  },
  {
    "text": "in infinity loop like a denial service box but for for the native land we have",
    "start": "1015319",
    "end": "1021399"
  },
  {
    "text": "triggered some efficient crashes and we will anal one of the boxs later so uh also a natural a a natural",
    "start": "1021399",
    "end": "1030839"
  },
  {
    "start": "1026000",
    "end": "1026000"
  },
  {
    "text": "idea comes with us that we can integrate the fing with asan the asan and I think",
    "start": "1030839",
    "end": "1037640"
  },
  {
    "text": "as we know all know the asan is a dry santizer and is very efficient in catching a memory corruption box and the",
    "start": "1037640",
    "end": "1044400"
  },
  {
    "text": "AOSP provides way to enable us on on on libraries and also the whole platform uh",
    "start": "1044400",
    "end": "1050679"
  },
  {
    "text": "we successfully compiled the asan on the asan on the whole ASP on NASA 6 but we",
    "start": "1050679",
    "end": "1056480"
  },
  {
    "text": "didn't success on other um physical physical machine models and uh we also",
    "start": "1056480",
    "end": "1062320"
  },
  {
    "text": "have successful build successfully building build asan in arm but we didn't",
    "start": "1062320",
    "end": "1068240"
  },
  {
    "text": "success in building on x86 machines and uh uh I have uh I have write write a",
    "start": "1068240",
    "end": "1075320"
  },
  {
    "text": "ticket I written a ticket for about the X8 support to Google but there's no",
    "start": "1075320",
    "end": "1081039"
  },
  {
    "text": "response currently so uh using the following command lines we can uh enable",
    "start": "1081039",
    "end": "1086960"
  },
  {
    "text": "asense board on the whole Android device but uh uh I have only sucess success on N 6 and not on other",
    "start": "1086960",
    "end": "1094880"
  },
  {
    "text": "devices and also uh we also have an idea of integration with efl and because uh",
    "start": "1094880",
    "end": "1101799"
  },
  {
    "text": "why we why we have the idea because the binder trans transaction actually some B stream data passing around and uh it",
    "start": "1101799",
    "end": "1109280"
  },
  {
    "text": "will be great that we can use some some incremental fing strategies fing tools",
    "start": "1109280",
    "end": "1114799"
  },
  {
    "text": "like AFL that uh uh for example we can uh first collect some normal normal data",
    "start": "1114799",
    "end": "1121480"
  },
  {
    "text": "and use AFL to to M to mute it and monitor it but unfortunately we encount",
    "start": "1121480",
    "end": "1127200"
  },
  {
    "text": "we encountered a big difficulty in compiling Android code libraries on AFL so it is still a work to be",
    "start": "1127200",
    "end": "1134640"
  },
  {
    "text": "done okay now uh I have introduced some basic arure and the fing strategies and",
    "start": "1134640",
    "end": "1142039"
  },
  {
    "text": "in in the binder services and now we will come to the case study part so this",
    "start": "1142039",
    "end": "1147520"
  },
  {
    "text": "Android 2 41 2 3723 is on the box we",
    "start": "1147520",
    "end": "1152720"
  },
  {
    "text": "reported to Google in last November and it is an classical B of uh of the data",
    "start": "1152720",
    "end": "1161120"
  },
  {
    "text": "of vulnerabilities in data type ping and we can see there is a type called a message the a message is a complex data",
    "start": "1161120",
    "end": "1168520"
  },
  {
    "text": "type that implements its own Ming or pation function and we can see that a",
    "start": "1168520",
    "end": "1175480"
  },
  {
    "text": "PCO is provided to the a message and then it will pass it will pass the parle",
    "start": "1175480",
    "end": "1180679"
  },
  {
    "text": "and retrieve the content from it and construct itself however there is a uh",
    "start": "1180679",
    "end": "1186960"
  },
  {
    "text": "autobound access and auto bound right here because we can see that the the M",
    "start": "1186960",
    "end": "1193480"
  },
  {
    "text": "number items the M number items is determined by the incoming in inserted",
    "start": "1193480",
    "end": "1199760"
  },
  {
    "text": "to data in we can see in the 1 four three 1 two 3 4 in the first line that",
    "start": "1199760",
    "end": "1205600"
  },
  {
    "text": "it reads the number of items from the Parco input and then it will look",
    "start": "1205600",
    "end": "1211799"
  },
  {
    "text": "through this counter and do some like writing or reading unfortunately this",
    "start": "1211799",
    "end": "1217520"
  },
  {
    "text": "integer can be totally uh determined by us we can set it to a very big big integer and thus we can easily cause an",
    "start": "1217520",
    "end": "1225039"
  },
  {
    "text": "autobound access or autobound read the bucket itself is not complex but to",
    "start": "1225039",
    "end": "1230200"
  },
  {
    "text": "trigger it it there is some uh some interesting stuff to be not to be",
    "start": "1230200",
    "end": "1236240"
  },
  {
    "start": "1231000",
    "end": "1231000"
  },
  {
    "text": "notified that in order to trigger this V vulnerable code pass we need to pass a",
    "start": "1236240",
    "end": "1241880"
  },
  {
    "text": "call back we need to pass a call back to the privilege process and uh first we",
    "start": "1241880",
    "end": "1247840"
  },
  {
    "text": "need to construct a beon stream source and pass it to the median server the media server set set data source",
    "start": "1247840",
    "end": "1255080"
  },
  {
    "text": "function and uh when certain type media files played as we configure it the BN",
    "start": "1255080",
    "end": "1260400"
  },
  {
    "text": "stream SCE set listener will be called and the CL that is our attacking attacking process we get a",
    "start": "1260400",
    "end": "1267720"
  },
  {
    "text": "reference to I stream source and with this callback in hand we can pass uh the",
    "start": "1267720",
    "end": "1274200"
  },
  {
    "text": "malicious uh P PCO data back to the I stream Source issue command and the",
    "start": "1274200",
    "end": "1280480"
  },
  {
    "text": "server side of this function will interpretate the malicious PCO data and finally triggers the OB bu",
    "start": "1280480",
    "end": "1288720"
  },
  {
    "text": "also uh in last November we also reported an information disclosure bug in system server and it's actually an",
    "start": "1288720",
    "end": "1295600"
  },
  {
    "text": "integer overflow in the motion events on parle uh we can see that uh uh at the",
    "start": "1295600",
    "end": "1301400"
  },
  {
    "text": "same the same as a message that this motion event it will receive the PCO uh",
    "start": "1301400",
    "end": "1306600"
  },
  {
    "text": "from it will uh blindly trust the incoming p p data and we can see in the",
    "start": "1306600",
    "end": "1312559"
  },
  {
    "text": "lower line that uh is there is a vector and this Vector capacity determined by the integer multiplication",
    "start": "1312559",
    "end": "1319039"
  },
  {
    "text": "and so we can easily see that here there is an integer overflow here and if we provide two big integers and the the",
    "start": "1319039",
    "end": "1327279"
  },
  {
    "text": "vector side will be very small and in the following access there will be memory coruption back",
    "start": "1327279",
    "end": "1333679"
  },
  {
    "text": "here so uh after two bus we will finally demonstrate an exploitable ones that the",
    "start": "1333679",
    "end": "1339880"
  },
  {
    "text": "auto bound de reference in the IM median codec list and how we turn this back into a to achieve both infol and code",
    "start": "1339880",
    "end": "1347440"
  },
  {
    "text": "execution and the first what is a median codc list the median codc list is an uh",
    "start": "1347440",
    "end": "1354159"
  },
  {
    "text": "class in Android that provides that how that how many median collect this phone",
    "start": "1354159",
    "end": "1359440"
  },
  {
    "text": "will support and uh so that you can use it to play media and uh uh if your phone",
    "start": "1359440",
    "end": "1367679"
  },
  {
    "text": "uh to if your phone doesn't uh support uh spe specific codec then you cannot",
    "start": "1367679",
    "end": "1373880"
  },
  {
    "text": "play a specific media and so the Android system provides a service called median",
    "start": "1373880",
    "end": "1379679"
  },
  {
    "text": "codic list to uh to tell the end user that uh which kind of codic it",
    "start": "1379679",
    "end": "1386880"
  },
  {
    "text": "supports so there is a function name called get codic info and we can see",
    "start": "1386880",
    "end": "1392039"
  },
  {
    "text": "that this is the server server side Implement implementation and we can see that an index is passed in the data read",
    "start": "1392039",
    "end": "1400159"
  },
  {
    "text": "in 32 and the the the index is passed through get codic info and if uh and if",
    "start": "1400159",
    "end": "1407640"
  },
  {
    "text": "the info is retrieved uh it it will write back to the parle in the info",
    "start": "1407640",
    "end": "1413159"
  },
  {
    "text": "right to parle function if it is failed then the uh an an invalid value will be",
    "start": "1413159",
    "end": "1418679"
  },
  {
    "text": "written in the parle and the user will be notified of it so let's go back to",
    "start": "1418679",
    "end": "1424760"
  },
  {
    "text": "check the go the get coding info function and unfortunately there's",
    "start": "1424760",
    "end": "1429840"
  },
  {
    "text": "there's no bond check here and we can see that index is directly passed to a vectors item add function",
    "start": "1429840",
    "end": "1438919"
  },
  {
    "text": "and uh to trigger this uh we we write we craft a quick PC to trigger this and we",
    "start": "1439240",
    "end": "1445400"
  },
  {
    "text": "get a crash here with this and uh on the first glance we can see that the F",
    "start": "1445400",
    "end": "1451200"
  },
  {
    "text": "address is at Z 0 x84 like uh in in the right hand we can",
    "start": "1451200",
    "end": "1457679"
  },
  {
    "text": "see there's the four address and the rling is a value that is very small and",
    "start": "1457679",
    "end": "1463640"
  },
  {
    "text": "we may think that it is a n pointer D reference but uh deeper analysis is pro",
    "start": "1463640",
    "end": "1468919"
  },
  {
    "text": "us wrong that it is an actually exposable one so uh first we need some domain",
    "start": "1468919",
    "end": "1475279"
  },
  {
    "start": "1472000",
    "end": "1472000"
  },
  {
    "text": "knowledge of this Vector in Android that the M CTIC info is actually a vector of",
    "start": "1475279",
    "end": "1480840"
  },
  {
    "text": "the strong pointer of the median CTIC info and the vector is a linear Vector",
    "start": "1480840",
    "end": "1487520"
  },
  {
    "text": "storage and it has a size in the header and a capacity in the header and it has",
    "start": "1487520",
    "end": "1492960"
  },
  {
    "text": "a pointer to a linear back storage so uh we can see that what is uh",
    "start": "1492960",
    "end": "1500480"
  },
  {
    "text": "the the what is stored in the linear in linear P storage is a pointer of the median codc info and the GDB will",
    "start": "1500480",
    "end": "1508520"
  },
  {
    "text": "clearly review that we can see that uh on the first part as the five at 53 at",
    "start": "1508520",
    "end": "1515760"
  },
  {
    "text": "the 5c of set it is actually the storage pointer of the of the mctic infos and at",
    "start": "1515760",
    "end": "1521720"
  },
  {
    "text": "this part we can see there there are many median coding info uh pointers and at uh at uh nasus 5 there are three",
    "start": "1521720",
    "end": "1530240"
  },
  {
    "text": "there are 33 codic which make it false at the G 160 region and this is very",
    "start": "1530240",
    "end": "1536399"
  },
  {
    "text": "useful for our following exploitation so we can we we still we",
    "start": "1536399",
    "end": "1541960"
  },
  {
    "start": "1539000",
    "end": "1539000"
  },
  {
    "text": "now proceed to The Operators uh index function and we can see that uh there is an check there seems to exist a check",
    "start": "1541960",
    "end": "1549360"
  },
  {
    "text": "here that an index should be smaller than size or it will do a log fatal if",
    "start": "1549360",
    "end": "1555840"
  },
  {
    "text": "but unfortunately it is stripped in release build that this this marro is not effective on release",
    "start": "1555840",
    "end": "1563399"
  },
  {
    "text": "builds so we can see that the index is is directly passed to the dressing to to",
    "start": "1563399",
    "end": "1569039"
  },
  {
    "text": "the addressing function and we can now we now get an O but it is it is whether",
    "start": "1569039",
    "end": "1575000"
  },
  {
    "text": "an OB read or OB right or whatever we will see later so also we need some",
    "start": "1575000",
    "end": "1581120"
  },
  {
    "text": "knowledge of the strong pointer the strong pointer is a is used in The Ref count ref count me mechanism in",
    "start": "1581120",
    "end": "1588919"
  },
  {
    "text": "and the ref counter the the strong pointer is there it is not a virtual class it",
    "start": "1588919",
    "end": "1595600"
  },
  {
    "text": "only has one field that is the it holding pointer uh but uh there is an",
    "start": "1595600",
    "end": "1601960"
  },
  {
    "start": "1600000",
    "end": "1600000"
  },
  {
    "text": "interesting function here called Inc strong the IC strong is used when a",
    "start": "1601960",
    "end": "1608080"
  },
  {
    "text": "strong pointer is constructed a strong pointer is passed from one to the",
    "start": "1608080",
    "end": "1613320"
  },
  {
    "text": "other so we can see that uh as we see the get codic info",
    "start": "1613320",
    "end": "1619080"
  },
  {
    "text": "Returns the SP media codic info and so it is it is incap incap realized in the",
    "start": "1619080",
    "end": "1625919"
  },
  {
    "text": "strong pointer so when it is passed from one fun one function to another the Imp",
    "start": "1625919",
    "end": "1631440"
  },
  {
    "text": "implicit Inc strong is called so an autobound median codic pointer so we can",
    "start": "1631440",
    "end": "1637520"
  },
  {
    "text": "see there is a possibility of PC control here and we can see in line 338 there",
    "start": "1637520",
    "end": "1644760"
  },
  {
    "text": "the there is the code called refs M base and the on first ref and the arm first ref is a virtual function and",
    "start": "1644760",
    "end": "1654240"
  },
  {
    "text": "uh so it shows us the possibility of the of the uh PC control so the the",
    "start": "1654240",
    "end": "1661880"
  },
  {
    "text": "following assembly will clearly reveiews that uh we can see First Media codic M",
    "start": "1661880",
    "end": "1667600"
  },
  {
    "text": "codic infos will be retrieved and finally is passed to an Inc strong we",
    "start": "1667600",
    "end": "1673440"
  },
  {
    "text": "can see that you you cannot see the an strong in the source code but in ass it",
    "start": "1673440",
    "end": "1678600"
  },
  {
    "text": "will clearly reveiew that there there is an Inc strong is the Inc is called and",
    "start": "1678600",
    "end": "1684279"
  },
  {
    "text": "finally after some uh address D referencing we can finally reach a BX R1",
    "start": "1684279",
    "end": "1690600"
  },
  {
    "text": "here so uh the offset is quite complex first we the r in Retreat from offset we",
    "start": "1690600",
    "end": "1697440"
  },
  {
    "text": "can control in the item add function and then it is passed to Inc strong and uh",
    "start": "1697440",
    "end": "1703240"
  },
  {
    "text": "we need to bypass this check that M strong is uh should should be equal to",
    "start": "1703240",
    "end": "1708399"
  },
  {
    "text": "in strong value to finally trigger the pxr1 control PC at the last",
    "start": "1708399",
    "end": "1716519"
  },
  {
    "start": "1716000",
    "end": "1716000"
  },
  {
    "text": "location so we need we still need some Hep function here and the interface we",
    "start": "1716519",
    "end": "1721600"
  },
  {
    "text": "chosen is the IDM provide key response and the respon it is very useful",
    "start": "1721600",
    "end": "1726640"
  },
  {
    "text": "function because the passing data can be passed in base base 64 format and it",
    "start": "1726640",
    "end": "1733039"
  },
  {
    "text": "allows for non ASCO data and both zero Terminators and this is stored in the uh",
    "start": "1733039",
    "end": "1739960"
  },
  {
    "text": "map in the map structure of idrm that there is no free no GC and it will resid",
    "start": "1739960",
    "end": "1746159"
  },
  {
    "text": "in the hip of the median server so uh also there are also some Primitives that",
    "start": "1746159",
    "end": "1752200"
  },
  {
    "text": "can free this but I not elaborate here and also than to the gml that he",
    "start": "1752200",
    "end": "1757840"
  },
  {
    "text": "introduced in the new version of Android the region the 160 region is a located",
    "start": "1757840",
    "end": "1763519"
  },
  {
    "text": "adjacent so we can actually uh and also the the median codic ptrs is allocated",
    "start": "1763519",
    "end": "1770679"
  },
  {
    "text": "on uh is allocated n to a free region because the 160 region is not a",
    "start": "1770679",
    "end": "1777519"
  },
  {
    "text": "frequently used region in Android so we can do a hipstory here and uh to to",
    "start": "1777519",
    "end": "1783600"
  },
  {
    "text": "point the Auto Bond index to a region we can control so we can see that in this",
    "start": "1783600",
    "end": "1789279"
  },
  {
    "text": "screenshot we have successfully redirected the program counter to 61 61 61",
    "start": "1789279",
    "end": "1794880"
  },
  {
    "text": "61 and also so we have now a resolve the problem of PC control there's also a",
    "start": "1794880",
    "end": "1801919"
  },
  {
    "text": "another big problem that uh uh uh we oh I'm sorry we can see that for Arling it",
    "start": "1801919",
    "end": "1808720"
  },
  {
    "text": "is point to b333 that is this is a hep address that we use spray to we push we push uh push",
    "start": "1808720",
    "end": "1816880"
  },
  {
    "text": "the Hep and push it to address of the B300 330 and we will uh put some malous",
    "start": "1816880",
    "end": "1825000"
  },
  {
    "text": "content we controled there and for n 5 this is a very stable address and for other phone models we when we may need a",
    "start": "1825000",
    "end": "1832240"
  },
  {
    "text": "bit change also so we have finally resolved the problem of PC control here",
    "start": "1832240",
    "end": "1837519"
  },
  {
    "text": "and we still need the info due to the modern uh ASR mitigations so let's turn",
    "start": "1837519",
    "end": "1843559"
  },
  {
    "text": "back to the right to Parco function we can see that the median Cod info as we",
    "start": "1843559",
    "end": "1848679"
  },
  {
    "text": "recall that median after the median codic info is sucessfully retrieved it it is passed",
    "start": "1848679",
    "end": "1855120"
  },
  {
    "text": "to uh it is pass back to the parle so if",
    "start": "1855120",
    "end": "1860519"
  },
  {
    "text": "we can craft the valid median codic here we may be able to retrieve back some information and the answer is yes so we",
    "start": "1860519",
    "end": "1868799"
  },
  {
    "text": "we look at the right to Paro function the first the M name is a a string it's a a string the foundation class of",
    "start": "1868799",
    "end": "1875559"
  },
  {
    "text": "median server and uh after the a string written in in and int and uh a vector",
    "start": "1875559",
    "end": "1883279"
  },
  {
    "text": "named the m cks and the all all the items of the M cks will return and then",
    "start": "1883279",
    "end": "1889120"
  },
  {
    "text": "an mcap size and then the all content of mcaps will be return so the a string the",
    "start": "1889120",
    "end": "1896240"
  },
  {
    "text": "a string is a string representation in median server and we can see that it contains two Fields one in the set field",
    "start": "1896240",
    "end": "1902720"
  },
  {
    "text": "and one is the one the string one is the chart pointer so if we can control the",
    "start": "1902720",
    "end": "1908240"
  },
  {
    "text": "chart pointer and the size we can achieve an arbitary memory content rate and uh for",
    "start": "1908240",
    "end": "1915559"
  },
  {
    "text": "the memory layout of the median codic info we can see that first it's it's V table uh at uh for 32 B device at the as",
    "start": "1915559",
    "end": "1924039"
  },
  {
    "text": "the head is a v table and at a four offset it is M refs and the eight offset",
    "start": "1924039",
    "end": "1929279"
  },
  {
    "text": "is is M data of the a string and the at next offset is M size of the a string",
    "start": "1929279",
    "end": "1935600"
  },
  {
    "text": "and also there are some critical field we need to taken care of uh to to avoid",
    "start": "1935600",
    "end": "1941080"
  },
  {
    "text": "crushing media server so we we want to achieve an arbitrary read here and we can make the M name points to a addess",
    "start": "1941080",
    "end": "1948200"
  },
  {
    "text": "we want to we want to read and to make the M cor side to zero and M cap side to",
    "start": "1948200",
    "end": "1953720"
  },
  {
    "text": "zero to a to aoid aoid crashes and uh so uh we can finally",
    "start": "1953720",
    "end": "1961480"
  },
  {
    "text": "achieve an arbitrary read ability here and we should have some conditions to with crash as offside 32 and offside 52",
    "start": "1961480",
    "end": "1969760"
  },
  {
    "text": "and also we need the MRA uh plus 4 it will the reference to a valid location",
    "start": "1969760",
    "end": "1976000"
  },
  {
    "text": "to avoid crashes as Android automic Inc and also we need the C it should not be",
    "start": "1976000",
    "end": "1981840"
  },
  {
    "text": "equal to the in strong value and if we can meet these conditions we can achieve a successful infol so our infol solution",
    "start": "1981840",
    "end": "1989840"
  },
  {
    "text": "as follows we spray content of size for page size to push he to reach a fix",
    "start": "1989840",
    "end": "1995440"
  },
  {
    "text": "Point address as a b33 301 and the the first 16 bytes is a",
    "start": "1995440",
    "end": "2002760"
  },
  {
    "text": "meta metadata of gmock uh so uh we will secondly do a spray on the",
    "start": "2002760",
    "end": "2009080"
  },
  {
    "text": "content one of size 160 uh to fill with the address the Hep address and it will",
    "start": "2009080",
    "end": "2015360"
  },
  {
    "text": "f it will fall right behind the vector's array storage and then we trigger an auto bound to relocate the median code",
    "start": "2015360",
    "end": "2022279"
  },
  {
    "text": "info to this he to to the sprad Hep address and we can retrieve a li memory content and we uh for our solution we",
    "start": "2022279",
    "end": "2029960"
  },
  {
    "text": "retrieved out the text section the test section of the median server and we will do a comparison of the text section on",
    "start": "2029960",
    "end": "2038159"
  },
  {
    "text": "our pre-stored domain knowledge uh Tex section to determine the offsets of the of the dynamic",
    "start": "2038159",
    "end": "2044799"
  },
  {
    "text": "Library so here are some functions to set up the r buffer and we can see here",
    "start": "2044799",
    "end": "2050760"
  },
  {
    "text": "we have successfully LED out the text section and compared with GDB we can prove that we are we are right on",
    "start": "2050760",
    "end": "2057398"
  },
  {
    "text": "this so for R and the sh code section I will not elaborate here because there",
    "start": "2057399",
    "end": "2062599"
  },
  {
    "text": "are some previous research from Kang because there because I Linux you you",
    "start": "2062599",
    "end": "2067800"
  },
  {
    "text": "cannot directly run bsh you need to inject the BJ box and it is very timec",
    "start": "2067800",
    "end": "2072878"
  },
  {
    "text": "consuming task I will not elaborate here and finally we will I will release the PC afterwards uh maybe after some",
    "start": "2072879",
    "end": "2080079"
  },
  {
    "text": "days so uh this is all and this is some credits and uh okay do you have some",
    "start": "2080079",
    "end": "2088480"
  },
  {
    "text": "questions okay thank you [Applause]",
    "start": "2092639",
    "end": "2100829"
  }
]