[
  {
    "start": "0",
    "end": "53000"
  },
  {
    "text": "[Music]",
    "start": "1180",
    "end": "16320"
  },
  {
    "text": "hi everyone my name is timur yunusoff and today i have my co-speaker alexis tennikov and our presentation",
    "start": "16320",
    "end": "23359"
  },
  {
    "text": "today is post world should you be afraid of hands-on payment devices",
    "start": "23359",
    "end": "28640"
  },
  {
    "text": "and today we are going to talk about two major point of sale vendors and vulnerabilities that we found in",
    "start": "28640",
    "end": "35120"
  },
  {
    "text": "their devices and for us that was quite a journey absolutely new world",
    "start": "35120",
    "end": "40480"
  },
  {
    "text": "new creatures new habitants with its own rules and that's why today we are trying to do this maybe a little",
    "start": "40480",
    "end": "46800"
  },
  {
    "text": "bit childish metaphor of pokemons and we call this world the boss world so what the post world",
    "start": "46800",
    "end": "55120"
  },
  {
    "text": "consists of what the rules are what creatures do they have and how secure these creatures",
    "start": "55120",
    "end": "60640"
  },
  {
    "text": "are that's what we are going to answer today on top of everything we have pci scc or payment card industry",
    "start": "60640",
    "end": "68320"
  },
  {
    "text": "security standard council and whose main job is to maintain pci dss",
    "start": "68320",
    "end": "75040"
  },
  {
    "text": "or data security standard so you see this is kind of the book of the book of main rules of this",
    "start": "75040",
    "end": "81759"
  },
  {
    "text": "world in terms of security then we have mastercard and visa two major current",
    "start": "81759",
    "end": "87520"
  },
  {
    "text": "brands we have verifone and ingenica major point of sale vendors today we are",
    "start": "87520",
    "end": "92880"
  },
  {
    "text": "going to talk about only two of them and we have issues and acquiring banks who are doing payments",
    "start": "92880",
    "end": "98799"
  },
  {
    "text": "responsible for cars issuing and for receiving payments then we have merchants essentially shops",
    "start": "98799",
    "end": "106159"
  },
  {
    "text": "and we have customers and we also have hackers so hackers can",
    "start": "106159",
    "end": "112240"
  },
  {
    "text": "act as rock merchants or customers and this is basically how we jumped",
    "start": "112240",
    "end": "117600"
  },
  {
    "text": "into this research ourselves you see over the last four years we had a few banks and service providers",
    "start": "117600",
    "end": "124719"
  },
  {
    "text": "who were particularly interested in how much security is in their devices",
    "start": "124719",
    "end": "130479"
  },
  {
    "text": "devices that they use and their customers use if you look at the payment process",
    "start": "130479",
    "end": "136480"
  },
  {
    "text": "hackers can act as external entities against point-of-sale terminals if they are customers but if they are",
    "start": "136480",
    "end": "144000"
  },
  {
    "text": "rock merchants they try to compromise the devices and they try can try to insert data",
    "start": "144000",
    "end": "151599"
  },
  {
    "text": "in card stream fraud and commit fraud on much higher scale you see",
    "start": "151599",
    "end": "158580"
  },
  {
    "text": "[Music] so if you talk about security requirements of pci we have a few documents and each",
    "start": "158580",
    "end": "166080"
  },
  {
    "text": "of these documents have uh dozens of pages with spreadsheets",
    "start": "166080",
    "end": "171840"
  },
  {
    "text": "with requirements questionaries we have ptas pin transaction security document and we",
    "start": "171840",
    "end": "178080"
  },
  {
    "text": "have pin entry device security requirements but i will try to save you time and explain your rules",
    "start": "178080",
    "end": "184800"
  },
  {
    "text": "in a few lines so the main role of pci do not store send or process sensitive",
    "start": "184800",
    "end": "191280"
  },
  {
    "text": "data customer card holder or card data without encryption so these data include pin codes track to",
    "start": "191280",
    "end": "198720"
  },
  {
    "text": "data or cv codes from the back side of your cart then if device uh if someone is trying",
    "start": "198720",
    "end": "206720"
  },
  {
    "text": "to open the device these should be detected so device should be tamper-proof",
    "start": "206720",
    "end": "212080"
  },
  {
    "text": "and once this is detected you should act so terminal should turn on even if it's off",
    "start": "212080",
    "end": "218720"
  },
  {
    "text": "and delete sensitive data which includes encryption keys and payment apps and we'll talk about this a",
    "start": "218720",
    "end": "225680"
  },
  {
    "text": "little bit later and also terminal needs to indicate that the device has been compromised",
    "start": "225680",
    "end": "232799"
  },
  {
    "text": "so it basically should be turned into a brick now let's talk about hackers so we had",
    "start": "232799",
    "end": "240480"
  },
  {
    "text": "a few researches about point of social security in the past so within the last 10 years guys from",
    "start": "240480",
    "end": "246400"
  },
  {
    "text": "the university of cambridge made the research about hacking point of sale devices",
    "start": "246400",
    "end": "251920"
  },
  {
    "text": "then within the last five years we have sr labs and carstenol who have presented vulnerabilities about",
    "start": "251920",
    "end": "258320"
  },
  {
    "text": "major european uh point of sale vendor and we ourselves within the last three years",
    "start": "258320",
    "end": "265280"
  },
  {
    "text": "made a research about mobile point of sale and security in these devices",
    "start": "265280",
    "end": "272560"
  },
  {
    "text": "so now we are going to talk about the terminals what is inside what vulnerabilities they have",
    "start": "272560",
    "end": "278320"
  },
  {
    "text": "how to attack and how to weaponize them and finally we sort of know the requirements of this",
    "start": "278320",
    "end": "284720"
  },
  {
    "text": "world already but we still don't understand the rules of how this world operates and i would like to pass the microphone",
    "start": "284720",
    "end": "291680"
  },
  {
    "text": "to alexi hi there thanks timur the first step in",
    "start": "291680",
    "end": "296880"
  },
  {
    "text": "order to make your own evil and weaponized creature is understanding in its weaknesses and internals",
    "start": "296880",
    "end": "304240"
  },
  {
    "start": "304000",
    "end": "407000"
  },
  {
    "text": "basically every terminal hides from your bunch of legacy code technologies and strange approaches and",
    "start": "304240",
    "end": "310960"
  },
  {
    "text": "it's great to understand world technologies takes starting from hardware in this talk we don't have enough time",
    "start": "310960",
    "end": "317759"
  },
  {
    "text": "to describe point-of-sale hardware in details but we have already published this information on defcon payload village",
    "start": "317759",
    "end": "326000"
  },
  {
    "text": "more details you will find on the village youtube channel i'd recommend to you to pay attention to",
    "start": "326000",
    "end": "332320"
  },
  {
    "text": "this channel because it also contain other useful information and now we are",
    "start": "332320",
    "end": "337360"
  },
  {
    "text": "going to shed light on software components it's time to weaponize your post",
    "start": "337360",
    "end": "344160"
  },
  {
    "text": "terminal we should keep in mind that we are going to break into secured well protected and",
    "start": "344160",
    "end": "349680"
  },
  {
    "text": "certified devices when the vendor goes to pci certification he should satisfy pci",
    "start": "349680",
    "end": "355680"
  },
  {
    "text": "rules and fill a form like previously discussed one suddenly this successful certification",
    "start": "355680",
    "end": "362800"
  },
  {
    "text": "itself don't guarantee that devices completely unhackable the first creature to weaponize is",
    "start": "362800",
    "end": "369759"
  },
  {
    "text": "ingenico pin pad let it be slowpoke our findings affect the wall product line of such",
    "start": "369759",
    "end": "375759"
  },
  {
    "text": "terminals there is basically no difference is it portable or counter top they all",
    "start": "375759",
    "end": "382160"
  },
  {
    "text": "built using the same hardware and uses the same telem 2 operating system",
    "start": "382160",
    "end": "387440"
  },
  {
    "text": "this is just an example of this series but i sure this kind of terminals is well known for all of you it is",
    "start": "387440",
    "end": "394960"
  },
  {
    "text": "expectable that all the communications to the bank servers are encrypted but there is an alternative way to get",
    "start": "394960",
    "end": "402560"
  },
  {
    "text": "into it the maintenance tools and special modes",
    "start": "402560",
    "end": "408000"
  },
  {
    "start": "407000",
    "end": "702000"
  },
  {
    "text": "the main software for server section is called llt it is usually used for application and",
    "start": "408000",
    "end": "413680"
  },
  {
    "text": "operation system locks collection firmware upload and operating system and application updates",
    "start": "413680",
    "end": "421039"
  },
  {
    "text": "to connect a pin pad to lte software you should boot the device with special key combination what does",
    "start": "421039",
    "end": "428560"
  },
  {
    "text": "this mod hide first of all it uses very strange way to",
    "start": "428560",
    "end": "435120"
  },
  {
    "text": "establish connection to the device the terminal itself is recognized as a virtual com port when",
    "start": "435120",
    "end": "440639"
  },
  {
    "text": "usb cable is connected llt software brings up pvp connection over this",
    "start": "440639",
    "end": "446160"
  },
  {
    "text": "virtual com port when this connection is established the pin pad initiates connection to pc6000 tcp port",
    "start": "446160",
    "end": "454080"
  },
  {
    "text": "and weighs a response from lt software usually the llt software sends the",
    "start": "454080",
    "end": "459360"
  },
  {
    "text": "command to pinpad to open ftp server in order to get access to some part of device file system",
    "start": "459360",
    "end": "466720"
  },
  {
    "text": "the interesting thing here is the code credentials for every step also no one has an ability to change",
    "start": "466720",
    "end": "473360"
  },
  {
    "text": "these passwords because they are part of operating system binaries",
    "start": "473360",
    "end": "479360"
  },
  {
    "text": "the protocol on 6000 tcp port used to open ftp server is called ntpt3",
    "start": "479360",
    "end": "487199"
  },
  {
    "text": "it is completely insecure with absolutely no authentication and other integrity control mechanisms",
    "start": "487199",
    "end": "495599"
  },
  {
    "text": "by exploiting this vulnerability and having direct connection to terminals usb and attacker gain access to internal",
    "start": "495599",
    "end": "502160"
  },
  {
    "text": "ftp servers it also has some undocumented comments lt is allowed to read only file system",
    "start": "502160",
    "end": "510879"
  },
  {
    "text": "the directories host and swap one vulnerability allows reading any files whose absolute path is",
    "start": "510879",
    "end": "518240"
  },
  {
    "text": "less than 17 characters long it allows an attacker to obtain",
    "start": "518240",
    "end": "524080"
  },
  {
    "text": "cryptographic keys and manipulate traffic between point of sale and acquire also some extra functions",
    "start": "524080",
    "end": "531839"
  },
  {
    "text": "of this protocol are buggy too the third intestines finding in this",
    "start": "531839",
    "end": "538240"
  },
  {
    "text": "chain is trace protocol with no authentication and encryption trace mode is intended to monitor",
    "start": "538240",
    "end": "545440"
  },
  {
    "text": "performance of banking application during development for post debugging and",
    "start": "545440",
    "end": "551440"
  },
  {
    "text": "assist developer feedback capabilities by using this protocol and having direct",
    "start": "551440",
    "end": "556720"
  },
  {
    "text": "connection to the terminals interfaces for example usb an attacker gain access to terminal operating system",
    "start": "556720",
    "end": "563839"
  },
  {
    "text": "and application internals via trace command line interface anyone has access to this command line",
    "start": "563839",
    "end": "572160"
  },
  {
    "text": "interface just using the config file magic and the trace 2 from software",
    "start": "572160",
    "end": "577360"
  },
  {
    "text": "development kit example of trace tool output is the following",
    "start": "577360",
    "end": "584079"
  },
  {
    "text": "this command line interface has help commands in order to get description for every available comment",
    "start": "585120",
    "end": "591680"
  },
  {
    "text": "but a research wouldn't be complete without bunch of non-declared comments as you may see it exposes to attack or",
    "start": "591680",
    "end": "598880"
  },
  {
    "text": "additional function to get hardware and software status and some additional debug capabilities",
    "start": "598880",
    "end": "607680"
  },
  {
    "text": "as a result this sim debug mode allows full control of the pin pad",
    "start": "607760",
    "end": "613040"
  },
  {
    "text": "the exposed commands allow to allocate and de-allocate memory display the contents of all files",
    "start": "613040",
    "end": "620399"
  },
  {
    "text": "of the terminal internal file system including encryption keys and to suspend resume and terminate",
    "start": "620399",
    "end": "627120"
  },
  {
    "text": "processes and threads the example attraction error is",
    "start": "627120",
    "end": "632959"
  },
  {
    "text": "classical allocate a memory for malicious code then write malicious code to allocated memory",
    "start": "632959",
    "end": "640320"
  },
  {
    "text": "suspend and modify a non-important task in order to point to our",
    "start": "640320",
    "end": "646560"
  },
  {
    "text": "code and then just resume suspended task finally we have code execution on",
    "start": "646560",
    "end": "653680"
  },
  {
    "text": "any italian-based angelica terminals is it a good result for such research",
    "start": "653680",
    "end": "660000"
  },
  {
    "text": "definitely yes is it a good news for their customers probably no but anyway",
    "start": "660000",
    "end": "668000"
  },
  {
    "text": "we have another creatures in our research",
    "start": "668000",
    "end": "672639"
  },
  {
    "text": "the next question is well known very foreign terminals this is an example of their vx series terminal vx-520",
    "start": "673360",
    "end": "681200"
  },
  {
    "text": "let's figure out what can we do with this creature the entire vx product line uses works",
    "start": "681200",
    "end": "686720"
  },
  {
    "text": "vx5 operating system it is proprietary one as in previous example",
    "start": "686720",
    "end": "692399"
  },
  {
    "text": "executables for varex operating system has dot out extension with their own binary format",
    "start": "692399",
    "end": "698160"
  },
  {
    "text": "and should be signed in order to be executed on the pin pad the default password for this type of",
    "start": "698160",
    "end": "704880"
  },
  {
    "start": "702000",
    "end": "747000"
  },
  {
    "text": "pin pair discussed many many times but no one changes it you can find the same password even in",
    "start": "704880",
    "end": "711360"
  },
  {
    "text": "ancient zone xl pin pads from 18th of previous century",
    "start": "711360",
    "end": "716959"
  },
  {
    "text": "to enter the service mode you have to press f2 and f4 keys during the boot of pinpat",
    "start": "716959",
    "end": "723519"
  },
  {
    "text": "and enter the password this mod allows to modify internal variables and obtain technical",
    "start": "723519",
    "end": "730160"
  },
  {
    "text": "information about the exact pinpad model and extra install updates",
    "start": "730160",
    "end": "736240"
  },
  {
    "text": "example of such variable is go variable it should contain an executable file",
    "start": "736240",
    "end": "741440"
  },
  {
    "text": "name for autorun when terminal it turn is turned on",
    "start": "741440",
    "end": "747279"
  },
  {
    "start": "747000",
    "end": "842000"
  },
  {
    "text": "the vx5 base terminal has a file system divided to multiple drives",
    "start": "748320",
    "end": "753440"
  },
  {
    "text": "some of them mentioned in documentation but some of them are used internally by the vendor and",
    "start": "753440",
    "end": "759040"
  },
  {
    "text": "are contained run drive some partition on non-flash drive",
    "start": "759040",
    "end": "764320"
  },
  {
    "text": "drives related to boot block and additional file systems the drives mentioned below the list are",
    "start": "764320",
    "end": "771440"
  },
  {
    "text": "marked as reserved and written by varex operating system during production",
    "start": "771440",
    "end": "776880"
  },
  {
    "text": "this is very interesting thing because we haven't found any useful information related to these drives",
    "start": "776880",
    "end": "782560"
  },
  {
    "text": "in any sources in the recent reason we paid attention to them and found some",
    "start": "782560",
    "end": "788720"
  },
  {
    "text": "gifts from developers we all know that all executable files",
    "start": "788720",
    "end": "794480"
  },
  {
    "text": "should have their digital signatures but the drive t is another case its",
    "start": "794480",
    "end": "800160"
  },
  {
    "text": "contents can be modified and all the binaries",
    "start": "800160",
    "end": "805519"
  },
  {
    "text": "you can find there are trusted by operating system by default you can modify the configuration file on",
    "start": "805519",
    "end": "812399"
  },
  {
    "text": "file system menu in order to execute any of dot out files from drivet",
    "start": "812399",
    "end": "819440"
  },
  {
    "text": "the most interesting of findings on the internal and undocumented file system is the shell",
    "start": "819440",
    "end": "825120"
  },
  {
    "text": "binary probably once upon time this was used for recovery and debugging",
    "start": "825120",
    "end": "831519"
  },
  {
    "text": "but now it's just legacy piece of executable code to execute it we should modify go and r",
    "start": "831519",
    "end": "838639"
  },
  {
    "text": "variable as you can see on the slide",
    "start": "838639",
    "end": "843680"
  },
  {
    "text": "the results of this modification is the following instead of merchant application the pin parts cited the kind",
    "start": "843680",
    "end": "849279"
  },
  {
    "text": "of shell it is accessible via serial port and maintenance cable",
    "start": "849279",
    "end": "854320"
  },
  {
    "text": "it has an ability to run signed binaries list and dump contents of the file system upload new files",
    "start": "854320",
    "end": "862399"
  },
  {
    "text": "to the pin pad and some other comments it is very useful but we still don't",
    "start": "862399",
    "end": "868480"
  },
  {
    "text": "have an ability to run our unsigned code as a result we can upload",
    "start": "868480",
    "end": "874240"
  },
  {
    "text": "any files execute signed binaries modifier configuration of the device",
    "start": "874240",
    "end": "879440"
  },
  {
    "text": "but we are still limited by digital signature checks in this case we already have extended",
    "start": "879440",
    "end": "886079"
  },
  {
    "text": "user input from the merchant application to some internal commands",
    "start": "886079",
    "end": "891360"
  },
  {
    "text": "once the merged application is limited to the encrypted tms server interaction and whereas from bank to bank let's",
    "start": "891360",
    "end": "899279"
  },
  {
    "text": "focus to vendor specific issues we need to look what can we do with some",
    "start": "899279",
    "end": "905360"
  },
  {
    "text": "shell commands when we try to file the user input for",
    "start": "905360",
    "end": "910880"
  },
  {
    "text": "some comments we've got a crash we passed too many symbols to shell command and we got classic",
    "start": "910880",
    "end": "917920"
  },
  {
    "text": "buffer overflow also useful scene is in this crash",
    "start": "917920",
    "end": "924320"
  },
  {
    "text": "is output on the display we can see crash addresses and some register contents as you may be",
    "start": "924320",
    "end": "931839"
  },
  {
    "text": "noticed 13 in hex in the least significant bit",
    "start": "931839",
    "end": "937120"
  },
  {
    "text": "of cpsr register means that we got a crash in supervisor",
    "start": "937120",
    "end": "942880"
  },
  {
    "text": "mode it equals to the crash in vx5 operating system kernel",
    "start": "942880",
    "end": "949680"
  },
  {
    "text": "the investigation of this crash points as to buffer overflow inverse operating",
    "start": "949680",
    "end": "955120"
  },
  {
    "text": "system system call as you can you can see on the cd code",
    "start": "955120",
    "end": "960639"
  },
  {
    "text": "there is a classical memory copy mistake on the stack additionally it is needed to be said",
    "start": "960639",
    "end": "967279"
  },
  {
    "text": "that there is no measures turned on in order to prevent code execution",
    "start": "967279",
    "end": "972480"
  },
  {
    "text": "finally we have got a code execution on any verifix device because they all have the same",
    "start": "972480",
    "end": "979440"
  },
  {
    "text": "code base but another interesting thing is the case in the boot chain",
    "start": "979440",
    "end": "986320"
  },
  {
    "text": "every vendor reinvented their own boot order in the case of pin pad devices sometimes",
    "start": "986480",
    "end": "992399"
  },
  {
    "text": "the boot order chain is very long it also has a lot of legacy",
    "start": "992399",
    "end": "997680"
  },
  {
    "text": "because almost all of these operating systems developed before traditional secure boot approach became",
    "start": "997680",
    "end": "1004000"
  },
  {
    "text": "a mainstream after reset a zero stage bootloader should be started",
    "start": "1004000",
    "end": "1009440"
  },
  {
    "text": "usually it is located inside mcu in form of mask rom it loads the next step",
    "start": "1009440",
    "end": "1015680"
  },
  {
    "text": "bootloader from flash memory and checks its cryptographic signature using the key stored",
    "start": "1015680",
    "end": "1022320"
  },
  {
    "text": "in otp rom and any other secure memory",
    "start": "1022320",
    "end": "1027438"
  },
  {
    "text": "every next bootloader also should check the cryptographic signature of every loaded piece of code etc etc",
    "start": "1027439",
    "end": "1035600"
  },
  {
    "text": "finally when operating system loads an application it also should check its signature",
    "start": "1035600",
    "end": "1042798"
  },
  {
    "text": "now you see the works operating system terminal boot log output internally it is called",
    "start": "1043120",
    "end": "1049840"
  },
  {
    "text": "sbi as you may see it can work with usb sticks and in this case it loads works",
    "start": "1049840",
    "end": "1056559"
  },
  {
    "text": "operating system kernel please look at the operating system kernel output",
    "start": "1056559",
    "end": "1062160"
  },
  {
    "text": "here you can see the broadcom cpu model that was previously operated to internal",
    "start": "1062160",
    "end": "1067440"
  },
  {
    "text": "verify name this bootloader is located at the start of non-flash memory",
    "start": "1067440",
    "end": "1073840"
  },
  {
    "text": "the purpose of interaction with usb flash is factor restore if usb stick is recognized it",
    "start": "1073840",
    "end": "1080720"
  },
  {
    "text": "goes to look for science script file that executes a sequence of actions to",
    "start": "1080720",
    "end": "1085760"
  },
  {
    "text": "burn you operating system kernel for example another interesting ability of this",
    "start": "1085760",
    "end": "1091440"
  },
  {
    "text": "script is to put the bootloader to low level command line interface however we don't have any examples of",
    "start": "1091440",
    "end": "1099760"
  },
  {
    "text": "science scripts when we had a look into bootloader we",
    "start": "1099760",
    "end": "1105280"
  },
  {
    "text": "found some protocol handler if you dive deeper we faced with the",
    "start": "1105280",
    "end": "1111039"
  },
  {
    "text": "same protocol as used in usual maintenance for terminal loading the utility for this protocol is called",
    "start": "1111039",
    "end": "1118400"
  },
  {
    "text": "ddl and can be found in the internet and finally there is another classic",
    "start": "1118400",
    "end": "1125600"
  },
  {
    "text": "memory copy related black was found the weak logic is contained in the",
    "start": "1125600",
    "end": "1130640"
  },
  {
    "text": "update format parser and allowed us to write any memory regions without any restrictions",
    "start": "1130640",
    "end": "1137039"
  },
  {
    "text": "the most fast way to exploit this vulnerability is to call restricted part of bootloader",
    "start": "1137039",
    "end": "1142799"
  },
  {
    "text": "as we have mentioned before there is very useful command line interface parser",
    "start": "1142799",
    "end": "1148000"
  },
  {
    "text": "and now we are able to call it as you can see this command line",
    "start": "1148000",
    "end": "1154320"
  },
  {
    "text": "interface prompt called without valid signal script file this mod allows",
    "start": "1154320",
    "end": "1160400"
  },
  {
    "text": "us to access the wall file system to dump and burn in regions of flash",
    "start": "1160400",
    "end": "1165600"
  },
  {
    "text": "memory to load any code into memory and pass execution to it",
    "start": "1165600",
    "end": "1171919"
  },
  {
    "text": "as a result this pin pad can be exploited using the physical connection before",
    "start": "1171919",
    "end": "1177280"
  },
  {
    "text": "operating system is loaded the last case is linux based mx series",
    "start": "1177280",
    "end": "1184240"
  },
  {
    "start": "1180000",
    "end": "1290000"
  },
  {
    "text": "verifone this is one of most recent pin pad model and it is also pci certified it has",
    "start": "1184240",
    "end": "1192080"
  },
  {
    "text": "advanced permission settings like supervisor user and maintenance mods",
    "start": "1192080",
    "end": "1197440"
  },
  {
    "text": "also the road user isn't allowed to get access to different files on the pin pad",
    "start": "1197440",
    "end": "1203280"
  },
  {
    "text": "file system during to role based access control settings",
    "start": "1203280",
    "end": "1208480"
  },
  {
    "text": "we have already seen the research related to these models at different 25",
    "start": "1208480",
    "end": "1214080"
  },
  {
    "text": "three years ago the mx series of verifone pin pads already were hacked but in some reasons",
    "start": "1214080",
    "end": "1222000"
  },
  {
    "text": "we have seen exactly the same problems on our projects with the latest firmwares",
    "start": "1222000",
    "end": "1227360"
  },
  {
    "text": "the exploitation chain is default password for system mode command injection in maintenance mode",
    "start": "1227360",
    "end": "1234559"
  },
  {
    "text": "privilege escalation based on vendor service and finally write condition in role",
    "start": "1234559",
    "end": "1240000"
  },
  {
    "text": "based access control configuration this presentation describes all the",
    "start": "1240000",
    "end": "1245039"
  },
  {
    "text": "steps how to get into this model but this is not the end of a story",
    "start": "1245039",
    "end": "1250080"
  },
  {
    "text": "about mx series in the bootlock we see the same chip",
    "start": "1250080",
    "end": "1257520"
  },
  {
    "text": "what already known as 9 bcm5892 surprisingly faced with the",
    "start": "1257520",
    "end": "1263919"
  },
  {
    "text": "same bootloader as in where x5 pin pads but in this case it loads not the proprietary kernel",
    "start": "1263919",
    "end": "1270880"
  },
  {
    "text": "model it loads you boot finally it has literally the same",
    "start": "1270880",
    "end": "1276320"
  },
  {
    "text": "code and can be exploited in the same way before operating system is loaded",
    "start": "1276320",
    "end": "1281600"
  },
  {
    "text": "that's almost all about technical parts of terminal weaponizing and i am going to pass our virtual floor",
    "start": "1281600",
    "end": "1288480"
  },
  {
    "text": "to tmur now when we are finally familiar with vulnerabilities of possible species",
    "start": "1288480",
    "end": "1295840"
  },
  {
    "start": "1290000",
    "end": "1740000"
  },
  {
    "text": "we can try to establish the rules of this world so rule number one i guess is that if",
    "start": "1295840",
    "end": "1302000"
  },
  {
    "text": "pci console does not require any specific security measures they will never be applied in the real",
    "start": "1302000",
    "end": "1307360"
  },
  {
    "text": "world for example pci does not say that you need to delete firmware and",
    "start": "1307360",
    "end": "1312640"
  },
  {
    "text": "vendors delete only applications on the main operating system it's also probably quite time",
    "start": "1312640",
    "end": "1319600"
  },
  {
    "text": "consuming to delete quite a large chunk of firmware with a tiny small",
    "start": "1319600",
    "end": "1325039"
  },
  {
    "text": "battery next is keys should be deleted yeah but pci does not specify how exactly",
    "start": "1325039",
    "end": "1332960"
  },
  {
    "text": "uh vendors should delete their keys so in most of the cases vendors just put a special mark on the",
    "start": "1332960",
    "end": "1339919"
  },
  {
    "text": "files in file system saying that files add files are deleted and not delete them",
    "start": "1339919",
    "end": "1345520"
  },
  {
    "text": "in a very secure way so rule number two is probably that",
    "start": "1345520",
    "end": "1352080"
  },
  {
    "text": "over the years all vendors are doing uh sort of security through obscurity",
    "start": "1352080",
    "end": "1359200"
  },
  {
    "text": "approach of their devices of security of their devices",
    "start": "1359200",
    "end": "1364400"
  },
  {
    "text": "so they were using proprietary operating systems for long long time they were using special proprietary protocols",
    "start": "1364400",
    "end": "1370880"
  },
  {
    "text": "and outputs formats of files formats of physical outputs you can see that there",
    "start": "1370880",
    "end": "1378559"
  },
  {
    "text": "are a lot of special modes skill switch combinations which allow to get access to special secret comments",
    "start": "1378559",
    "end": "1386080"
  },
  {
    "text": "and probably security through obscurity is not the best approach security wise",
    "start": "1386080",
    "end": "1393200"
  },
  {
    "text": "next let's see at the difference what you can and what you can't do in different",
    "start": "1393200",
    "end": "1398480"
  },
  {
    "text": "models of point of sales so because ingenica has a dedicated",
    "start": "1398480",
    "end": "1403840"
  },
  {
    "text": "chip for the cryptography which we could not get access to it actually should seem very secure",
    "start": "1403840",
    "end": "1411039"
  },
  {
    "text": "even though you can compromise the main uh part of the reader however it's not so",
    "start": "1411039",
    "end": "1417520"
  },
  {
    "text": "you still are able to send arbitrary packets that make sense we'll come to this just in a",
    "start": "1417520",
    "end": "1422640"
  },
  {
    "text": "minute finally and we still can clone cards including pin codes and track 2 data",
    "start": "1422640",
    "end": "1428640"
  },
  {
    "text": "and cv which is quite strange and i will explain this just in a minute the only one difference",
    "start": "1428640",
    "end": "1434559"
  },
  {
    "text": "is that you can clone terminals themselves because keys for terminals will be",
    "start": "1434559",
    "end": "1441840"
  },
  {
    "text": "stored on the dedicated chip and the problem is in jennica is that",
    "start": "1441840",
    "end": "1447600"
  },
  {
    "text": "your malicious code will be rewritten after each reboot so you won't you will have to",
    "start": "1447600",
    "end": "1453520"
  },
  {
    "text": "in fact device after each reboot",
    "start": "1453520",
    "end": "1458720"
  },
  {
    "text": "let's talk about cloning cards cloning pins how you we all would have presumed that",
    "start": "1458720",
    "end": "1465919"
  },
  {
    "text": "pin entry process works for example so the customer enters pin on the pin path and information goes",
    "start": "1465919",
    "end": "1474000"
  },
  {
    "text": "there from there to a dedicated chip for the encryption and already encrypted goes to the main",
    "start": "1474000",
    "end": "1479760"
  },
  {
    "text": "operating system and the main part main chip where it goes in the transaction stream",
    "start": "1479760",
    "end": "1485919"
  },
  {
    "text": "over the network however in fact it's not the case the",
    "start": "1485919",
    "end": "1491360"
  },
  {
    "text": "algorithm how most of the vendors do this procedure is that pinpat customer enters pin",
    "start": "1491360",
    "end": "1498480"
  },
  {
    "text": "on on the pin pad and it goes straight to the main operating system to the main app",
    "start": "1498480",
    "end": "1504080"
  },
  {
    "text": "where to get access to you need to have maximum privileges root access or work with the",
    "start": "1504080",
    "end": "1511960"
  },
  {
    "text": "[Music] kernel kernel rights and only after that from the main app it",
    "start": "1511960",
    "end": "1518799"
  },
  {
    "text": "goes to the specific chip by api for encryption gets back already",
    "start": "1518799",
    "end": "1525679"
  },
  {
    "text": "encrypted and then goes in the transaction stream so you can see flow here right if you'll be",
    "start": "1525679",
    "end": "1532799"
  },
  {
    "text": "able to run special malware special software which will allow",
    "start": "1532799",
    "end": "1538640"
  },
  {
    "text": "to scrape the memory of the main app and still the spin codes still track to",
    "start": "1538640",
    "end": "1546799"
  },
  {
    "text": "date before it will go to be encrypted that's it hackers can get access to",
    "start": "1546799",
    "end": "1554480"
  },
  {
    "text": "pin codes to track 2 data and it's quite bad shall we say so now let's talk",
    "start": "1554480",
    "end": "1562080"
  },
  {
    "text": "how to clone the terminals yeah only one vendor allows to clone the",
    "start": "1562080",
    "end": "1568159"
  },
  {
    "text": "terminals and to do that you need to steal quite a fistful amount of different keys",
    "start": "1568159",
    "end": "1574159"
  },
  {
    "text": "you need to steal the keys for encrypting network communication you need to steal the key for pin encryption you need to steal a",
    "start": "1574159",
    "end": "1581279"
  },
  {
    "text": "key for signing message authentication codes and you need to steal",
    "start": "1581279",
    "end": "1587360"
  },
  {
    "text": "a few additional keys like the key for storage encryption and the key for integrity control for the operating",
    "start": "1587360",
    "end": "1593760"
  },
  {
    "text": "system but once you've done it you get a fully functional clone of the original point of sale and that",
    "start": "1593760",
    "end": "1600640"
  },
  {
    "text": "allows you for example to make transactions pretending to be a part of the big",
    "start": "1600640",
    "end": "1606240"
  },
  {
    "text": "merchant and carry out transaction stream fraud or carry out for example money movements",
    "start": "1606240",
    "end": "1612799"
  },
  {
    "text": "and refunds which is quite nasty at the end so and finally let's talk about",
    "start": "1612799",
    "end": "1620799"
  },
  {
    "text": "weaponizing terminals and making payments attack so when we begin this project that was",
    "start": "1620799",
    "end": "1626240"
  },
  {
    "text": "the one of the original goals where customers said is it possible these infected terminals",
    "start": "1626240",
    "end": "1633520"
  },
  {
    "text": "to carry out some actual fraud for the banks and we have done this uh and shown these",
    "start": "1633520",
    "end": "1640480"
  },
  {
    "text": "to our customers and we actually even done a a bit of site research so once you get",
    "start": "1640480",
    "end": "1648559"
  },
  {
    "text": "access to the transaction forward to the transaction stream it's really",
    "start": "1648559",
    "end": "1653840"
  },
  {
    "text": "easy to send arbitrary packets and try to confirm fraudulent transactions and",
    "start": "1653840",
    "end": "1660720"
  },
  {
    "text": "it's much easier as if that would be just a regular customer with stolen cards and",
    "start": "1660720",
    "end": "1666399"
  },
  {
    "text": "these fraudulent transactions will be accepted in the end so as you may know uh european banks now",
    "start": "1666399",
    "end": "1674399"
  },
  {
    "text": "adopt adopting new payment rules called uh psd2 or payment",
    "start": "1674399",
    "end": "1681039"
  },
  {
    "text": "service directive across the board and we've shown how it's possible to",
    "start": "1681039",
    "end": "1687039"
  },
  {
    "text": "bypass pin requirements pin checking process and reset",
    "start": "1687039",
    "end": "1692080"
  },
  {
    "text": "cumulative limits for contactless transactions so in normal circumstances this attack",
    "start": "1692080",
    "end": "1697919"
  },
  {
    "text": "would have required specialist equipment for a few thousand grand and",
    "start": "1697919",
    "end": "1703500"
  },
  {
    "text": "[Music] what we have done instead we just tweaked a couple of bits of information",
    "start": "1703500",
    "end": "1711200"
  },
  {
    "text": "in the transaction stream with modified terminals and we were able to",
    "start": "1711200",
    "end": "1717440"
  },
  {
    "text": "save us a lot of time and a lot of resources and we have done these attacks and fraudulent",
    "start": "1717440",
    "end": "1724240"
  },
  {
    "text": "transactions were accepted using these attacks so i'm not gonna spoil you can read",
    "start": "1724240",
    "end": "1730799"
  },
  {
    "text": "about this uh in a white paper this research uh now is about something completely",
    "start": "1730799",
    "end": "1736840"
  },
  {
    "text": "different so for engenica we arranged 10 different",
    "start": "1736840",
    "end": "1743760"
  },
  {
    "text": "cves and as you can see they were informed in 2018",
    "start": "1743760",
    "end": "1749200"
  },
  {
    "text": "that's why we call this pokemon a slowpok yeah as you can see it took two years",
    "start": "1749200",
    "end": "1755760"
  },
  {
    "text": "for vendor to get back to us and to confirm that vulnerabilities were fixed the",
    "start": "1755760",
    "end": "1761919"
  },
  {
    "text": "problem is that we still don't even know how badly or how really good they were fixed because we",
    "start": "1761919",
    "end": "1768480"
  },
  {
    "text": "never received any update we never received any software or firmware or the hardware with the",
    "start": "1768480",
    "end": "1776000"
  },
  {
    "text": "updates very fun on the other side is quite good",
    "start": "1776000",
    "end": "1781039"
  },
  {
    "text": "and acting quite proactively so we inform them in 2018 they get back to us reasonably quickly",
    "start": "1781039",
    "end": "1788159"
  },
  {
    "text": "and once all vulnerabilities were fixed uh they even send us",
    "start": "1788159",
    "end": "1793360"
  },
  {
    "text": "updated devices to confirm from our site that all vulnerabilities were effectively uh",
    "start": "1793360",
    "end": "1800960"
  },
  {
    "text": "mitigated [Music] so we still have a few open questions",
    "start": "1800960",
    "end": "1808559"
  },
  {
    "text": "yeah one of that is that we still don't know how good very ingenica fixed their",
    "start": "1808559",
    "end": "1814960"
  },
  {
    "text": "vulnerabilities we never received any updates from them and these",
    "start": "1814960",
    "end": "1820320"
  },
  {
    "text": "vulnerabilities still can present in the modern versions of their point of sales",
    "start": "1820320",
    "end": "1825520"
  },
  {
    "text": "uh we also don't know the difference between end-of-life devices and new devices",
    "start": "1825520",
    "end": "1831679"
  },
  {
    "text": "newer devices that both vendors supply because at the end of the day bad security is a",
    "start": "1831679",
    "end": "1838399"
  },
  {
    "text": "bad security and if you do mistakes and if your developers do mistakes that means that they probably will be",
    "start": "1838399",
    "end": "1844960"
  },
  {
    "text": "found in the whole range of your products",
    "start": "1844960",
    "end": "1850320"
  },
  {
    "text": "and then i would like to say thanks to all researchers and reverse engineers who were participating in this project",
    "start": "1850320",
    "end": "1857919"
  },
  {
    "text": "and thanks to all of you guys this project would not be done without here it's really nice job and if you have any",
    "start": "1857919",
    "end": "1865360"
  },
  {
    "text": "questions uh you can let us know and we're already publishing our research our white paper today so",
    "start": "1865360",
    "end": "1873360"
  },
  {
    "text": "links are available on our twitter pages so go ahead and read and thanks so much for listening",
    "start": "1873360",
    "end": "1880919"
  },
  {
    "text": "us",
    "start": "1880919",
    "end": "1883919"
  }
]