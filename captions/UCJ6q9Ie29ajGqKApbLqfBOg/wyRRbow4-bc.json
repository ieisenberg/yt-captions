[
  {
    "text": "welcome to horse ville a new type of Linux rootkit in South Seas ZDF with",
    "start": "0",
    "end": "5549"
  },
  {
    "text": "michael Leibovitz before we begin a few brief notes stop by the business Hall",
    "start": "5549",
    "end": "11250"
  },
  {
    "text": "located on Bayside a be the blackhat Arsenal is on the palm foyer on level",
    "start": "11250",
    "end": "16890"
  },
  {
    "text": "three and of course the Arsenal reception at 1700 hours if you haven't",
    "start": "16890",
    "end": "22230"
  },
  {
    "text": "picked up your merchandise today is your last chance to visit the black cat swag and book store visit the Kali Linux lab",
    "start": "22230",
    "end": "29580"
  },
  {
    "text": "in Mandalay Bay a and thank you for putting your phone on vibrate it makes",
    "start": "29580",
    "end": "34950"
  },
  {
    "text": "it easier for the rest of us to ignore the ringing while you wait for your voicemail to pick it up and with that we",
    "start": "34950",
    "end": "40469"
  },
  {
    "text": "welcome our speaker hello i'm i'm",
    "start": "40469",
    "end": "53399"
  },
  {
    "text": "pleased to be presenting my first time at blackhat and this is a horse pill a new kind of linux rocket as she said and",
    "start": "53399",
    "end": "61820"
  },
  {
    "text": "I'm very excited to be speaking at blackhat because as the name might suggest this is a reference to Joanna",
    "start": "61820",
    "end": "69810"
  },
  {
    "text": "orichalcos blue pill that she presented here and this is this is a little more",
    "start": "69810",
    "end": "77640"
  },
  {
    "text": "coarse than than blue pill which was somewhat elegant so it's it's kind of course it's like a horse pill and also",
    "start": "77640",
    "end": "86330"
  },
  {
    "text": "this is an idea that we have a group in Portland called DC 503 and it's like",
    "start": "86330",
    "end": "92759"
  },
  {
    "text": "hacker Fight Club and you show up and you get to you know it's like if it's",
    "start": "92759",
    "end": "98759"
  },
  {
    "text": "your first time you have to talk and every time you have to talk and I showed up in one time I didn't plan ahead and I",
    "start": "98759",
    "end": "104670"
  },
  {
    "text": "had to talk and this guy went and that guy went and that guy went and I and I thought crap I really need to come up",
    "start": "104670",
    "end": "109950"
  },
  {
    "text": "with an idea and this is the idea I came up with while I was waiting for for them",
    "start": "109950",
    "end": "115170"
  },
  {
    "text": "to give their talk and like you know trying POC really fast and so if you if",
    "start": "115170",
    "end": "120659"
  },
  {
    "text": "you don't have a local local hacker group you go to you should you should go to one or if you don't go to a local",
    "start": "120659",
    "end": "128340"
  },
  {
    "text": "hacker group you should you should go to one sorry Michel Leibowitz ah also known as",
    "start": "128340",
    "end": "136200"
  },
  {
    "text": "root Killa I work for Intel I am part of the Intel red team I'm also a NSA",
    "start": "136200",
    "end": "143069"
  },
  {
    "text": "playset contributor where we have fun with re-implementing the leaked ant",
    "start": "143069",
    "end": "150840"
  },
  {
    "text": "catalog and I've done a bunch of different things I've done application",
    "start": "150840",
    "end": "157560"
  },
  {
    "text": "development and embedded stuff and security stuff and back to security stuff and back to development and back to security stuff and back to security",
    "start": "157560",
    "end": "164310"
  },
  {
    "text": "stuff so basically what we're going to cover what a rootkit is how root kits",
    "start": "164310",
    "end": "171720"
  },
  {
    "text": "have worked in the past go into how your computer really boots what a container",
    "start": "171720",
    "end": "178500"
  },
  {
    "text": "is and then you know stringing it all together into making a rootkit a demo a",
    "start": "178500",
    "end": "183660"
  },
  {
    "text": "little bit of a discussion about what this rootkit gives you what what sort of properties it has and then finally",
    "start": "183660",
    "end": "190910"
  },
  {
    "text": "detection and mitigation so you know",
    "start": "190910",
    "end": "199680"
  },
  {
    "text": "what is a rootkit really because this term kind of means different things to different people and so to me a rootkit",
    "start": "199680",
    "end": "209639"
  },
  {
    "text": "is a post exploitation tool or so this is not something that's going to get you",
    "start": "209639",
    "end": "216600"
  },
  {
    "text": "that privilege right this is something that after you've exploited the box that",
    "start": "216600",
    "end": "222329"
  },
  {
    "text": "get lets you maintain that access that you have so these central characteristics here of course that it's",
    "start": "222329",
    "end": "228569"
  },
  {
    "text": "persistent know it's difficult to remove and it's covert that it's difficult to detect and so one way you think about",
    "start": "228569",
    "end": "237569"
  },
  {
    "text": "this post exploitation from a software exploitation perspective and then one way you can think about this is another",
    "start": "237569",
    "end": "243900"
  },
  {
    "text": "sort of physical exploitation so if you think about the evil made type attack where you know you leave your laptop",
    "start": "243900",
    "end": "252690"
  },
  {
    "text": "unattended and classical arias in a hotel room and then the evil maid comes in and then evil maid rewrites your",
    "start": "252690",
    "end": "260909"
  },
  {
    "text": "bootloader and then you you've been exploited right so this is a similar post exploitation",
    "start": "260909",
    "end": "267580"
  },
  {
    "text": "so this is something that the evil made can apply so let's go through some sort",
    "start": "267580",
    "end": "276790"
  },
  {
    "text": "of historical rootkits and so the oldest kind of rootkit that I could you know",
    "start": "276790",
    "end": "283330"
  },
  {
    "text": "oldest kind of Linux Bukit that I Lin extry UNIX freak it that I could come up",
    "start": "283330",
    "end": "288730"
  },
  {
    "text": "with was hard call rootkit exactly but basically it's a series of backdoored",
    "start": "288730",
    "end": "294820"
  },
  {
    "text": "commands so the attacker will break in and then they would back to our i net d",
    "start": "294820",
    "end": "300850"
  },
  {
    "text": "and for those who don't quite remember what i net the a long time ago in a galaxy far far away",
    "start": "300850",
    "end": "306600"
  },
  {
    "text": "you didn't have a whole lot of memory so you would write internet daemons that just talked on standard in and standard",
    "start": "306600",
    "end": "312280"
  },
  {
    "text": "out and then i nathie would accept the sake connection for you and then would",
    "start": "312280",
    "end": "317470"
  },
  {
    "text": "run this program and so they would just back to our net d so instead of running just your programs it would also run a",
    "start": "317470",
    "end": "323350"
  },
  {
    "text": "backdoor shell and then you would be able to see that backdoor shell so that's bad so then they were backdoor",
    "start": "323350",
    "end": "329200"
  },
  {
    "text": "all of the different little tools that the system might use to see that back to a shell so you would you know back to",
    "start": "329200",
    "end": "335770"
  },
  {
    "text": "our PS so that it doesn't they can't see the defect or shell and you you would",
    "start": "335770",
    "end": "341830"
  },
  {
    "text": "backdoor some so that all the backdoor binaries look right and top so you can see the process and fine so you can't",
    "start": "341830",
    "end": "348220"
  },
  {
    "text": "find the hidden storage and and and also fine can look at attributes and LSF so",
    "start": "348220",
    "end": "355960"
  },
  {
    "text": "you can see the the processes when you when you look for who has sockets and netstat so you can't see the port open",
    "start": "355960",
    "end": "362020"
  },
  {
    "text": "and then you have a shell you can you can access over the internet then everything is good but you know this",
    "start": "362020",
    "end": "369280"
  },
  {
    "text": "isn't really used much anymore because firstly most people don't run i net d",
    "start": "369280",
    "end": "376390"
  },
  {
    "text": "and secondly it leaves a lot of forensic garbage on your on your drip disk and",
    "start": "376390",
    "end": "382350"
  },
  {
    "text": "thirdly like you know you can't exactly catch them all right there's there's",
    "start": "382350",
    "end": "387700"
  },
  {
    "text": "going to be some administrative tool that's going to expose this hidden process and hidden connection and hidden",
    "start": "387700",
    "end": "393820"
  },
  {
    "text": "storage so",
    "start": "393820",
    "end": "397200"
  },
  {
    "text": "you know the world moved on to LD preload Bay Street kids and there are a",
    "start": "399130",
    "end": "404840"
  },
  {
    "text": "number of these they've been talked about recently like jinx and jinx two",
    "start": "404840",
    "end": "410030"
  },
  {
    "text": "and then there's a few others and there's a actually a related one that I",
    "start": "410030",
    "end": "415400"
  },
  {
    "text": "have forgotten the name of where they back to our ramdisk two with an LD preload rootkit but",
    "start": "415400",
    "end": "422330"
  },
  {
    "text": "basically so if you're not exactly familiar with how dynamic linking works",
    "start": "422330",
    "end": "428419"
  },
  {
    "text": "there's your program and then there's dynamic libraries and the dynamic libraries are loaded and there is an",
    "start": "428419",
    "end": "436789"
  },
  {
    "text": "order of precedence and typically dynamic library symbols are weak so that a symbol before that library clobbers",
    "start": "436789",
    "end": "444740"
  },
  {
    "text": "the ones later and also fortunately in Lib C basically all sis calls are",
    "start": "444740",
    "end": "450949"
  },
  {
    "text": "wrapped in a library function so they LD free loading you can basically change",
    "start": "450949",
    "end": "457190"
  },
  {
    "text": "what the syscalls do by hijacking the sis calls and this is typically cleared",
    "start": "457190",
    "end": "463820"
  },
  {
    "text": "on this is typically cleared on set UID because like if you could LD preload a",
    "start": "463820",
    "end": "469220"
  },
  {
    "text": "say you ID binary and then run it like that that would be bad but there's",
    "start": "469220",
    "end": "474289"
  },
  {
    "text": "actually a special file called LDS o LD is aa preload and everything that has a",
    "start": "474289",
    "end": "482270"
  },
  {
    "text": "list of LD preload of libraries in every dynamic binary on the system regardless",
    "start": "482270",
    "end": "488210"
  },
  {
    "text": "of whether it's a UID not or not will have this library pre-loaded so you just make a say you make a dynamic library",
    "start": "488210",
    "end": "496159"
  },
  {
    "text": "that clobbers stat and open and open der and read link and reader and with the",
    "start": "496159",
    "end": "503560"
  },
  {
    "text": "way in which these are used you basically blind the system administrator",
    "start": "503560",
    "end": "509030"
  },
  {
    "text": "from being able to see any of the malicious content process these",
    "start": "509030",
    "end": "515690"
  },
  {
    "text": "connections etc so if you you know it",
    "start": "515690",
    "end": "521240"
  },
  {
    "text": "keeps you from being able to the reason that it's open Durham Reader and these things is and I'll go into that a little",
    "start": "521240",
    "end": "528140"
  },
  {
    "text": "bit later is that when your look when you were MPs it's actually going through the proc directory and looking",
    "start": "528140",
    "end": "533450"
  },
  {
    "text": "at all of the processes and then when you go through and do when you're",
    "start": "533450",
    "end": "539270"
  },
  {
    "text": "looking at stat it's actually kind of doing the same thing so by cleverly",
    "start": "539270",
    "end": "544460"
  },
  {
    "text": "detecting what is being Stata door what is being opened 'red you just have it",
    "start": "544460",
    "end": "549950"
  },
  {
    "text": "like skip your process when it iterates through Prague and you just have it skip",
    "start": "549950",
    "end": "555110"
  },
  {
    "text": "that line in the TCP listing where your shell is and when you try to stat one of",
    "start": "555110",
    "end": "561710"
  },
  {
    "text": "the files that one of the backdoor files it just doesn't exist but the world kind",
    "start": "561710",
    "end": "568580"
  },
  {
    "text": "of has moved on from that too because firstly there's a considerable amount of",
    "start": "568580",
    "end": "575480"
  },
  {
    "text": "leakage with this like yes you can you can wrap the syscalls and you can be",
    "start": "575480",
    "end": "582230"
  },
  {
    "text": "pretty clever but there's a noticeable footprint that is kind of observable of",
    "start": "582230",
    "end": "588530"
  },
  {
    "text": "the backdrop processes and also although your system is almost entirely",
    "start": "588530",
    "end": "596590"
  },
  {
    "text": "dynamically linked programs that actually probably has a few statically linked programs and statically linked",
    "start": "596590",
    "end": "604190"
  },
  {
    "text": "programs don't see these you know they're not blinded by by this LD preload type rootkit and so once you do",
    "start": "604190",
    "end": "613010"
  },
  {
    "text": "that then it's trivially detectable so",
    "start": "613010",
    "end": "619100"
  },
  {
    "text": "you know then there's a you know how about just a malicious kernel module ring zero is all-powerful right and so",
    "start": "619100",
    "end": "630620"
  },
  {
    "text": "you know step and this is like basically rootkit Linux rootkit like how to write",
    "start": "630620",
    "end": "637430"
  },
  {
    "text": "there's actually books you can buy on how to write a Rick how to write a Linux",
    "start": "637430",
    "end": "643070"
  },
  {
    "text": "rootkit and it walks you through making malicious kernel modules because it's",
    "start": "643070",
    "end": "648410"
  },
  {
    "text": "it's it's actually a pretty pretty good vector you can make invisible network",
    "start": "648410",
    "end": "654470"
  },
  {
    "text": "connections files processes the module itself I'm basically it it's kind of",
    "start": "654470",
    "end": "663439"
  },
  {
    "text": "it's kind of tricky but you can manipulate the list so they basically just as you iterate the list from user",
    "start": "663439",
    "end": "669049"
  },
  {
    "text": "space they just step around your module and there's all sorts of other evil you",
    "start": "669049",
    "end": "674569"
  },
  {
    "text": "could do as ring zero you want to you know you want to write into places that",
    "start": "674569",
    "end": "682009"
  },
  {
    "text": "that ring three can't write in you can do that you want to steal things out of",
    "start": "682009",
    "end": "687649"
  },
  {
    "text": "the kernel crypto key ring you can do that and it it works but you know this",
    "start": "687649",
    "end": "696739"
  },
  {
    "text": "is also something that we have a way to mitigate because basically kernel module",
    "start": "696739",
    "end": "704149"
  },
  {
    "text": "signing is a thing and it's fairly widely deployed now if you have a red",
    "start": "704149",
    "end": "711349"
  },
  {
    "text": "app based system basically all the modules are signed and whenever you load a unsigned module it will still let you",
    "start": "711349",
    "end": "717769"
  },
  {
    "text": "load one but it taints the kernel and so detecting that you have a malicious kernel module when your kernel is",
    "start": "717769",
    "end": "724129"
  },
  {
    "text": "tainted and you don't think it should be like them becomes fairly straightforward and you know it's pop quite quite likely",
    "start": "724129",
    "end": "732109"
  },
  {
    "text": "on the horizon that like that will be an enforced signing where you simply cannot run any kind of kernel kernel module",
    "start": "732109",
    "end": "740479"
  },
  {
    "text": "that is inside but you know kernel",
    "start": "740479",
    "end": "745489"
  },
  {
    "text": "modules touch disk and everyone wants to have super leet covert diskless malware",
    "start": "745489",
    "end": "750799"
  },
  {
    "text": "right so you can actually just splat your rootkit directly into dev montt dev",
    "start": "750799",
    "end": "756379"
  },
  {
    "text": "ma'am it's it's kind of a corollary of the module rootkit except in this sense",
    "start": "756379",
    "end": "764539"
  },
  {
    "text": "where you have the hooks when you load a module to kick off your invocation and and you have linkage to actually find",
    "start": "764539",
    "end": "771199"
  },
  {
    "text": "the symbols now you're on your own to find those symbols and trigger those executions so it's it's a game of",
    "start": "771199",
    "end": "778519"
  },
  {
    "text": "exploitation but you certainly have an advantage and that you can read them right all memory and it's basically the",
    "start": "778519",
    "end": "785809"
  },
  {
    "text": "same right you have malicious network connections and anything any you can hide anything from user space in in",
    "start": "785809",
    "end": "792619"
  },
  {
    "text": "behind the veil of kernel space but you know you don't really see this very in a while because why because you know",
    "start": "792619",
    "end": "800240"
  },
  {
    "text": "we no longer have deaf ma'am is like really permissive to where root can just scroll all over kernel memory that would",
    "start": "800240",
    "end": "806360"
  },
  {
    "text": "be that would be silly so you know let's talk about containers",
    "start": "806360",
    "end": "814940"
  },
  {
    "text": "because this is a container based rootkit so you know what what is a",
    "start": "814940",
    "end": "820190"
  },
  {
    "text": "container really I think container like wise to Rick it means a lot of things to",
    "start": "820190",
    "end": "825470"
  },
  {
    "text": "a lot of people and so in this in this instance what I mean by container is",
    "start": "825470",
    "end": "832010"
  },
  {
    "text": "basically a namespace and see group-based container so this is what",
    "start": "832010",
    "end": "837050"
  },
  {
    "text": "when you run like docker and LXE and openvz and a few other things like this",
    "start": "837050",
    "end": "842450"
  },
  {
    "text": "is the sort of container that they container isin system that they are doing and basically what namespaces do",
    "start": "842450",
    "end": "848900"
  },
  {
    "text": "is it says okay well what we're going to do is we're going to divide up the kernel subsystems into the six distinct",
    "start": "848900",
    "end": "854990"
  },
  {
    "text": "areas and then we'll make namespaces of them and so you can create a namespace and if you create all six namespaces",
    "start": "854990",
    "end": "862010"
  },
  {
    "text": "together then you have what looks like a Linux system in microcosm you have like",
    "start": "862010",
    "end": "869120"
  },
  {
    "text": "you know there's a IPC namespace for system five IPC objects there's a mount",
    "start": "869120",
    "end": "875900"
  },
  {
    "text": "namespace so you so like your little container can mount the number things and it doesn't affect the the host",
    "start": "875900",
    "end": "883400"
  },
  {
    "text": "system and there's a net namespace you can make network adapters and add routes",
    "start": "883400",
    "end": "888770"
  },
  {
    "text": "and it doesn't screw up the host system and a pip namespace so you can make processes obviously affect the host",
    "start": "888770",
    "end": "894920"
  },
  {
    "text": "system and a user name space so you can have different users and then a UTS",
    "start": "894920",
    "end": "900860"
  },
  {
    "text": "namespace and the UTS is like for setting the system time and host name and you know some I said namespaces and",
    "start": "900860",
    "end": "908690"
  },
  {
    "text": "I think that we sometimes thinks about name chases is all like on the same",
    "start": "908690",
    "end": "913880"
  },
  {
    "text": "level right it's just a separate set of buckets but but some of these are hierarchical and some of them are not and so like things like things like pin",
    "start": "913880",
    "end": "921860"
  },
  {
    "text": "namespaces well that's that's kind of hierarchy of his pads are hierarchical and but things like hostname are not",
    "start": "921860",
    "end": "929480"
  },
  {
    "text": "really hierarchical because you couldn't really construct a logical hierarchy of hostnames now could you so",
    "start": "929480",
    "end": "936110"
  },
  {
    "text": "and then there's secrets so secret what secrets let you do is see groups let you",
    "start": "936110",
    "end": "941620"
  },
  {
    "text": "place processes and groups and so lets",
    "start": "941620",
    "end": "947450"
  },
  {
    "text": "you make for example a set of resource limits that all these processes in this group are subject to or a set of devices",
    "start": "947450",
    "end": "955430"
  },
  {
    "text": "that this group can't touch or things like that and this is basically basically how container systems work",
    "start": "955430",
    "end": "961640"
  },
  {
    "text": "right they make all the hierarchies and then it looks like you have a little Linux microcosm and they keep you from",
    "start": "961640",
    "end": "966769"
  },
  {
    "text": "eating the system by placing you in Lisi group resource limits so how do we how",
    "start": "966769",
    "end": "972800"
  },
  {
    "text": "do we manipulate a programmatic level these namespaces so basically there are",
    "start": "972800",
    "end": "978350"
  },
  {
    "text": "two sis calls there's unshare which effectively creates a new name space for the prefer",
    "start": "978350",
    "end": "984410"
  },
  {
    "text": "this current process and then there's clone and most unix parameters are",
    "start": "984410",
    "end": "990440"
  },
  {
    "text": "familiar with for arc and clone is the sort of linux underpinning a fork although fork is also its own sis call",
    "start": "990440",
    "end": "996260"
  },
  {
    "text": "so clone is the magical mystery Swiss Army knife of process creation right",
    "start": "996260",
    "end": "1002190"
  },
  {
    "text": "clone can make you threads clone can make uni processes and in this case you",
    "start": "1002190",
    "end": "1008380"
  },
  {
    "text": "just pass flags in there to make clone make a new namespace for this new process you are making and then on the",
    "start": "1008380",
    "end": "1017649"
  },
  {
    "text": "bottom here you see a list of native so from user space you can actually see",
    "start": "1017649",
    "end": "1023110"
  },
  {
    "text": "these namespaces they're exposed in the proc pit entry as the NS directory and",
    "start": "1023110",
    "end": "1028630"
  },
  {
    "text": "it's a series of siblings to - I know",
    "start": "1028630",
    "end": "1033640"
  },
  {
    "text": "it's essentially special kind of AI nodes and you can actually traverse",
    "start": "1033640",
    "end": "1038650"
  },
  {
    "text": "these namespaces so if you had a process and you wanted to this is how LXE enter works like if you wanted to go into that",
    "start": "1038650",
    "end": "1045100"
  },
  {
    "text": "container you can call set an s and then use that I note of that of that",
    "start": "1045100",
    "end": "1050890"
  },
  {
    "text": "namespace and you can enter that namespace and fortunately for reasons",
    "start": "1050890",
    "end": "1057100"
  },
  {
    "text": "you'll see later the namespaces are not",
    "start": "1057100",
    "end": "1063640"
  },
  {
    "text": "random like these I know numbers are deterministic so they're defined in the",
    "start": "1063640",
    "end": "1071170"
  },
  {
    "text": "Linux proc NS file and and you can see like basically it kind of looks like",
    "start": "1071170",
    "end": "1077850"
  },
  {
    "text": "some random jibber jabber number but actually they're deterministic okay so",
    "start": "1077850",
    "end": "1084640"
  },
  {
    "text": "let's talk about PID namespaces so this",
    "start": "1084640",
    "end": "1091000"
  },
  {
    "text": "is basically a it's somewhat contrived but this is a process graph so processes",
    "start": "1091000",
    "end": "1096880"
  },
  {
    "text": "are our hierarchy right there's a fork and there there's a there's a top",
    "start": "1096880",
    "end": "1102490"
  },
  {
    "text": "process called an it or if your system D person pins and if and it calls fork and",
    "start": "1102490",
    "end": "1111010"
  },
  {
    "text": "then it has children and they can call forth and so on and so forth and so everything looks all normal except for",
    "start": "1111010",
    "end": "1116380"
  },
  {
    "text": "to the left of pit tent right everything on the left side of pit 10 is normal",
    "start": "1116380",
    "end": "1123070"
  },
  {
    "text": "then would hit 8 forked pit 9 and then on the next call to clone it passed in",
    "start": "1123070",
    "end": "1129250"
  },
  {
    "text": "the clone new pit flag and it made a new pit namespace and so from pit 8 and our",
    "start": "1129250",
    "end": "1138160"
  },
  {
    "text": "from everyone to the left of pit 10 pit 10 looks like pit 10 you do a process",
    "start": "1138160",
    "end": "1143500"
  },
  {
    "text": "listing you see a tenant and all of its children pit 11 to 12 to 13 but then if",
    "start": "1143500",
    "end": "1149620"
  },
  {
    "text": "you are pit n use you know it sees itself as pit 1 as an it and all of its",
    "start": "1149620",
    "end": "1157450"
  },
  {
    "text": "children similarly because it is in the new namespace so it is the anit of the container we've made but we've made it",
    "start": "1157450",
    "end": "1163990"
  },
  {
    "text": "only for pit namespaces and an it has like some special properties so",
    "start": "1163990",
    "end": "1170490"
  },
  {
    "text": "basically a daemon is a process that Forks and Forks and kills their parent",
    "start": "1170490",
    "end": "1177520"
  },
  {
    "text": "and then they become repented to in it and then it has some special properties as well so of course it is the parent it",
    "start": "1177520",
    "end": "1184630"
  },
  {
    "text": "can reparent all the processes that kill their parents processes or mean and and",
    "start": "1184630",
    "end": "1192310"
  },
  {
    "text": "also it can if it dies the the system panic so",
    "start": "1192310",
    "end": "1197710"
  },
  {
    "text": "if you've ever had you know your system say like I and they tried to our you",
    "start": "1197710",
    "end": "1203050"
  },
  {
    "text": "know and it killed itself or something then the kernel panics and you're done and it handles like some convenient",
    "start": "1203050",
    "end": "1210220"
  },
  {
    "text": "things like when you hit control-alt-delete rebooting the machine and stuff like that so you know how your",
    "start": "1210220",
    "end": "1219160"
  },
  {
    "text": "computer how does your computer boot well basically you know you know that",
    "start": "1219160",
    "end": "1225700"
  },
  {
    "text": "your stuff starts after system D and then there's like some other stuff before that and let's go through like how that really works from UEFI through",
    "start": "1225700",
    "end": "1234190"
  },
  {
    "text": "system D and all the way to your stuff so if if you used a if you booted a",
    "start": "1234190",
    "end": "1241690"
  },
  {
    "text": "computer post or I should say with a Windows 8 sticker on it that means basically that it's a UEFI secure boot",
    "start": "1241690",
    "end": "1249070"
  },
  {
    "text": "platform and so we'll do this in sort of",
    "start": "1249070",
    "end": "1255010"
  },
  {
    "text": "picture form and I think that this is kind of the the classic UEFI secure boot",
    "start": "1255010",
    "end": "1260260"
  },
  {
    "text": "kind of picture although maybe a little bit a little only slightly different but",
    "start": "1260260",
    "end": "1267910"
  },
  {
    "text": "basically the UEFI runtime verifies the shim which the shim is like your",
    "start": "1267910",
    "end": "1273580"
  },
  {
    "text": "distrust provides and it has a stored signature database in it the DB the DB",
    "start": "1273580",
    "end": "1279880"
  },
  {
    "text": "list and the DB list has the Microsoft third-party signing cert in it which verifies the shim that has been signed",
    "start": "1279880",
    "end": "1285430"
  },
  {
    "text": "by Microsoft and it will boot the shim and then the shim has the distro",
    "start": "1285430",
    "end": "1291490"
  },
  {
    "text": "certificate signing certificate in it you know red hat or a boon tubes or",
    "start": "1291490",
    "end": "1297040"
  },
  {
    "text": "whatever flavor of Linux you have and then it will in turn boot gummy boot or",
    "start": "1297040",
    "end": "1304270"
  },
  {
    "text": "grub and verify it against the against the vendor cert that's inside the gym",
    "start": "1304270",
    "end": "1309730"
  },
  {
    "text": "and then gummy booted grub will in turn boot Linux and verify it against the",
    "start": "1309730",
    "end": "1316540"
  },
  {
    "text": "same cert at least in modern times apparently in a Bluetooth 1404 secure",
    "start": "1316540",
    "end": "1324640"
  },
  {
    "text": "boot was a compatibility feature only and gummy boot did our grub did not",
    "start": "1324640",
    "end": "1330550"
  },
  {
    "text": "actually force the signature of the colonel but don't worry that's that's not a security",
    "start": "1330550",
    "end": "1336369"
  },
  {
    "text": "bug because it's not a security feature but you know Linux isn't really what",
    "start": "1336369",
    "end": "1344619"
  },
  {
    "text": "you're interested on your computer you're interested in your stuff so how does your stuff get booted well so Linux",
    "start": "1344619",
    "end": "1350710"
  },
  {
    "text": "actually on almost all Lewis distributions boots a ram you know loads",
    "start": "1350710",
    "end": "1356080"
  },
  {
    "text": "a ram disk and that Ram disk then in turn exact systemd",
    "start": "1356080",
    "end": "1361149"
  },
  {
    "text": "you're an it system and then eventually it gets your stuff and these are sort of maybe color-coded in terms of in terms",
    "start": "1361149",
    "end": "1370269"
  },
  {
    "text": "of like what's protected and what's not protected so ok your bootloader that",
    "start": "1370269",
    "end": "1375849"
  },
  {
    "text": "that's protected that's like protected by UEFI and your kernel like okay that's transitivity protected by UEFI and the",
    "start": "1375849",
    "end": "1382509"
  },
  {
    "text": "modules we know how to protect modules we can sign those with a femoral module",
    "start": "1382509",
    "end": "1387729"
  },
  {
    "text": "signing key and the root of s I put a check there because you know they're",
    "start": "1387729",
    "end": "1393519"
  },
  {
    "text": "well established way is to protect the reader fest from from tampering right we have Verity and i'ma and there's even",
    "start": "1393519",
    "end": "1402039"
  },
  {
    "text": "older things like that but like you know basically as an example if you have an Android phone the Android root is",
    "start": "1402039",
    "end": "1409419"
  },
  {
    "text": "verified you know the Android system partition is verified by Verity and that's what protects it but the Annunaki",
    "start": "1409419",
    "end": "1416200"
  },
  {
    "text": "there really isn't a very practical widely displayed way for normal linux",
    "start": "1416200",
    "end": "1422409"
  },
  {
    "text": "systems to protect that sort of like bundling it into the inch of the boot",
    "start": "1422409",
    "end": "1430059"
  },
  {
    "text": "blob which is kind of what Android phones typically do or nice not having",
    "start": "1430059",
    "end": "1436450"
  },
  {
    "text": "one there isn't really a good way to protect it from modification and in fact",
    "start": "1436450",
    "end": "1441969"
  },
  {
    "text": "that's kind of like by design because this system modifies its own RAM disk so",
    "start": "1441969",
    "end": "1449320"
  },
  {
    "text": "what's in a ram disk so basically you know we have like around us is about you",
    "start": "1449320",
    "end": "1456789"
  },
  {
    "text": "know 30 40 Meg's on you know compressed and it's got like all the kernel modules",
    "start": "1456789",
    "end": "1462399"
  },
  {
    "text": "in it it's got like set of like minimal userspace kind of utilities and it's got",
    "start": "1462399",
    "end": "1469459"
  },
  {
    "text": "some of NIT scripts that do you know the stuff you want and you know you can see",
    "start": "1469459",
    "end": "1475669"
  },
  {
    "text": "that the kernel modules are in there and so what happens is every time you update your kernel or any of those minimal",
    "start": "1475669",
    "end": "1481879"
  },
  {
    "text": "utilities are updated on your system and you think about your kernel kind of updates at a fairly reasonable frequency",
    "start": "1481879",
    "end": "1487429"
  },
  {
    "text": "at least I hope it does then the RAM disk is reassembled so that those modules are put into the RAM disk and",
    "start": "1487429",
    "end": "1496249"
  },
  {
    "text": "we'll talk about that a little bit later too so you know why is your Ram disk",
    "start": "1496249",
    "end": "1501320"
  },
  {
    "text": "supposed to do while your Ram disk like loads all the modules you need to run your Hardware basically at least at boot",
    "start": "1501320",
    "end": "1508070"
  },
  {
    "text": "time response to the high plug events as your Hardware enumerates and loads the appropriate module if you use locks or",
    "start": "1508070",
    "end": "1516549"
  },
  {
    "text": "you know or DM crypt right it run script setup gets your get your password",
    "start": "1516549",
    "end": "1522440"
  },
  {
    "text": "and then likes you know puts that into the device mapper and then and then it",
    "start": "1522440",
    "end": "1527570"
  },
  {
    "text": "finds a mount to route FS and actually now the RAM disk that's been uncompressed memories like 60 megabytes",
    "start": "1527570",
    "end": "1534289"
  },
  {
    "text": "in size and you know this is this memory doesn't exactly go away so then what it actually does is it deletes everything",
    "start": "1534289",
    "end": "1541009"
  },
  {
    "text": "inside the RAM disk and then it uh it",
    "start": "1541009",
    "end": "1546739"
  },
  {
    "text": "doesn't exactly pivot root over it moves the root mount over the RAM disk and then tada you know execs in it and your",
    "start": "1546739",
    "end": "1553909"
  },
  {
    "text": "system is up okay well you know what we just modified your Ram disk a little bit",
    "start": "1553909",
    "end": "1560529"
  },
  {
    "text": "and we kind of inserted a backdoor okay",
    "start": "1560529",
    "end": "1568249"
  },
  {
    "text": "so you know what does your RAM just do now well it's kind of similar at least",
    "start": "1568249",
    "end": "1576139"
  },
  {
    "text": "at first it loads the modules and hot-plug events that's good still does",
    "start": "1576139",
    "end": "1581419"
  },
  {
    "text": "that and it does setup that's good and does that numerate some kernel threads which I'll talk about in a",
    "start": "1581419",
    "end": "1587269"
  },
  {
    "text": "moment but okay that's that's a little new um and then it calls clone and it",
    "start": "1587269",
    "end": "1595549"
  },
  {
    "text": "calls it with the clone new pit and new and un-ass new which is a new mount namespace and then it makes child",
    "start": "1595549",
    "end": "1602090"
  },
  {
    "text": "process and that just remounts proc because proc shows the namespace of the",
    "start": "1602090",
    "end": "1609890"
  },
  {
    "text": "air shows the perspective of the namespace for which it was mounted in and so we want proc to have the child",
    "start": "1609890",
    "end": "1616640"
  },
  {
    "text": "namespace view so that pip one thinks it really is pick one then we'll make some fake kernel threads to make it look",
    "start": "1616640",
    "end": "1624200"
  },
  {
    "text": "legit clean up in it rd and exec you met okay this doesn't seem so so awful then",
    "start": "1624200",
    "end": "1632030"
  },
  {
    "text": "we'll remount root because a and root is usually read-only at this stage and",
    "start": "1632030",
    "end": "1638480"
  },
  {
    "text": "we'll just wait we'll just rebound a tree bright for our purposes because you",
    "start": "1638480",
    "end": "1643880"
  },
  {
    "text": "know we probably want to write to the root partition will make a little scratch space that we can use that doesn't touch disk so that we can store",
    "start": "1643880",
    "end": "1650600"
  },
  {
    "text": "whatever cool goodies we have and then",
    "start": "1650600",
    "end": "1656120"
  },
  {
    "text": "we'll just make some extra little helper processes like a backdoor shell and something to keep our persistence and",
    "start": "1656120",
    "end": "1665090"
  },
  {
    "text": "then we just wait to see if anything dies because remember and it has to harvest all of the children who have",
    "start": "1665090",
    "end": "1671420"
  },
  {
    "text": "demonized otherwise you get zombie process of ever seen zombie processes and you have a bajillion zombie",
    "start": "1671420",
    "end": "1677270"
  },
  {
    "text": "processes that's because the parent is not waiting for the child processes exit status and then if the and if the child",
    "start": "1677270",
    "end": "1688490"
  },
  {
    "text": "in it wants to reboot then we'll reboot because you know that's what we do so",
    "start": "1688490",
    "end": "1694880"
  },
  {
    "text": "when the child when when the in the in the child name States when you call shutdown or when you call reboot is",
    "start": "1694880",
    "end": "1700760"
  },
  {
    "text": "actually this is call it actually sends a signal to the parent of the child names of the child that's outside of the",
    "start": "1700760",
    "end": "1708200"
  },
  {
    "text": "namespace and says like hey they want to turn off the computer what do you want to do and since we don't want to look",
    "start": "1708200",
    "end": "1714290"
  },
  {
    "text": "like you know the system is completely owned but we'll just turn off the computer like they asked so what about",
    "start": "1714290",
    "end": "1722900"
  },
  {
    "text": "these kernel threats you know what is that about so if you've ever run PS and you see",
    "start": "1722900",
    "end": "1728750"
  },
  {
    "text": "like all this garbage that you basically ignore these are the kernel threads and there's really only one scheduler and it would",
    "start": "1728750",
    "end": "1737900"
  },
  {
    "text": "be a real pain in the butt to have like two schedulers one for kernel tasks and one for user space tasks so basically",
    "start": "1737900",
    "end": "1744080"
  },
  {
    "text": "they're all scheduled together the kernel tasks are obviously more important than your tasks and they get scheduled first if they want to and this",
    "start": "1744080",
    "end": "1751730"
  },
  {
    "text": "has all the different kernel threads that you that you have which you have a lot and this also lets you they also",
    "start": "1751730",
    "end": "1759890"
  },
  {
    "text": "have the same scheduler accounting so this means that you can see in user",
    "start": "1759890",
    "end": "1766940"
  },
  {
    "text": "space like if RCU locks are taking up a lot of your time you can actually see",
    "start": "1766940",
    "end": "1774080"
  },
  {
    "text": "that in the user space view of you know the process list but when you make a pit",
    "start": "1774080",
    "end": "1781100"
  },
  {
    "text": "namespace there's no kernel threads there so if you logged in to a system and there were no kernel threads like",
    "start": "1781100",
    "end": "1786170"
  },
  {
    "text": "that would and any thought there should be that would be suspicious but the good",
    "start": "1786170",
    "end": "1791270"
  },
  {
    "text": "news is well you can make fake processes look just like them so one you know the",
    "start": "1791270",
    "end": "1798580"
  },
  {
    "text": "the container the effort to bring containers through Linux also brought the the desire to have migrated you know",
    "start": "1798580",
    "end": "1805280"
  },
  {
    "text": "migration of containers and migration of containers works through something",
    "start": "1805280",
    "end": "1812030"
  },
  {
    "text": "called pre checkpoint restore in user space originally just try it as a kernel space mechanism and the kernel community",
    "start": "1812030",
    "end": "1820280"
  },
  {
    "text": "said no now let's let's do this in user space and provide the necessary house to do this so basically you can pickle any",
    "start": "1820280",
    "end": "1826790"
  },
  {
    "text": "Linux process put it into a file and then take it somewhere else and reanimate it's pretty awesome and this",
    "start": "1826790",
    "end": "1835790"
  },
  {
    "text": "includes like its memory map and so Linux introduced a helpful PR CTL that",
    "start": "1835790",
    "end": "1844070"
  },
  {
    "text": "lets you set the MM map and get the MM map and this is interesting to us because the the arguments what you see",
    "start": "1844070",
    "end": "1853010"
  },
  {
    "text": "in PS and which is actually what's in proc pit status and what's M propagate",
    "start": "1853010",
    "end": "1860060"
  },
  {
    "text": "command line you can effectively change by saying like okay",
    "start": "1860060",
    "end": "1865500"
  },
  {
    "text": "here's a new RV that I want to be my RV now and you just call PR CTL matte MF",
    "start": "1865500",
    "end": "1874259"
  },
  {
    "text": "and there you go and then there's another sis call or another PR CTL to",
    "start": "1874259",
    "end": "1879750"
  },
  {
    "text": "set the process name and between those two if you do those two things then it",
    "start": "1879750",
    "end": "1885870"
  },
  {
    "text": "will look right in PS and then top actually looks at processes slightly differently and it will look right in",
    "start": "1885870",
    "end": "1891210"
  },
  {
    "text": "top and so it's it's reasonably convincing so okay let's let's go",
    "start": "1891210",
    "end": "1899639"
  },
  {
    "text": "through you know we've talked about process and visibility and we've talked about storage invisibility I kind of",
    "start": "1899639",
    "end": "1905820"
  },
  {
    "text": "alluded to storage invisibly but you know because we unshared the mountain namespace you can mount a ram disk there",
    "start": "1905820",
    "end": "1914460"
  },
  {
    "text": "and the child namespace can't see it because you're in a different mount",
    "start": "1914460",
    "end": "1919710"
  },
  {
    "text": "namespace and now you have a convenient place to stash the stash things in volatile memory and when the computers",
    "start": "1919710",
    "end": "1926610"
  },
  {
    "text": "rebooted there's no forensic trace of it but what about network and visibility that that's pretty important that we",
    "start": "1926610",
    "end": "1932850"
  },
  {
    "text": "have like a backdoor shell that that that you can't detect so you know you",
    "start": "1932850",
    "end": "1938009"
  },
  {
    "text": "want the system in when they were a net stat not to see like some port there",
    "start": "1938009",
    "end": "1943230"
  },
  {
    "text": "listening and some shell sitting there and so how does net stat work so the way",
    "start": "1943230",
    "end": "1948899"
  },
  {
    "text": "Nets networks is actually it goes through a file two files actually but",
    "start": "1948899",
    "end": "1954870"
  },
  {
    "text": "I'm using TCP here pregnant TCP and it has a line it has a bunch on line for",
    "start": "1954870",
    "end": "1961980"
  },
  {
    "text": "every socket connection and it has a bunch of different columns but the",
    "start": "1961980",
    "end": "1967169"
  },
  {
    "text": "columns were interested in there's a local address a remote address and inode and so the addresses are in hex so",
    "start": "1967169",
    "end": "1975360"
  },
  {
    "text": "obviously the remote address is zero systems everywhere 35 is 53 in hex so",
    "start": "1975360",
    "end": "1981179"
  },
  {
    "text": "this is TCP DNS and the address internet addresses are backwards because it's network rules not host rules if you're",
    "start": "1981179",
    "end": "1988529"
  },
  {
    "text": "on a little immune system so that's seven F is one to seven so that's one two seven zero 1.1 that is",
    "start": "1988529",
    "end": "1997039"
  },
  {
    "text": "that's a local that's DNS mask that's DNS mask essentially a local caching dns",
    "start": "1997780",
    "end": "2003660"
  },
  {
    "text": "server and then when you want to see like okay what process has that up and",
    "start": "2003660",
    "end": "2009630"
  },
  {
    "text": "you iterate through proc and you look in proc pit FD and then you look for that inode number in the in each process and",
    "start": "2009630",
    "end": "2018990"
  },
  {
    "text": "so the point of this is like even if you can't see the process you can still see",
    "start": "2018990",
    "end": "2025920"
  },
  {
    "text": "that the port is open because proc net TCP will show you the port is open and",
    "start": "2025920",
    "end": "2031200"
  },
  {
    "text": "the Nets not when you ask like what process has this open it will just kind of say like I don't know it'll put a",
    "start": "2031200",
    "end": "2036840"
  },
  {
    "text": "little put a dash there like I don't know what what process has it's open so",
    "start": "2036840",
    "end": "2042300"
  },
  {
    "text": "that's that's no good we can't like just have a TCP connection open that the system in can see that would be bad no I",
    "start": "2042300",
    "end": "2052919"
  },
  {
    "text": "was supposed to talk about something else there too okay so so right we can't",
    "start": "2052919",
    "end": "2059220"
  },
  {
    "text": "have like a TCP port listening because that would be bad and to be trivially detectable so there is a way though that",
    "start": "2059220",
    "end": "2066898"
  },
  {
    "text": "we can make sort of an ephemeral connection that provides the sort of connectivity that's also appropriately",
    "start": "2066899",
    "end": "2072060"
  },
  {
    "text": "sneaky so we can make a DNS tunnel and so DNS is a DNS tunnels are gray because",
    "start": "2072060",
    "end": "2081620"
  },
  {
    "text": "usually DNS will resolve right if even if you're in some horrible DMZ deep in a",
    "start": "2081620",
    "end": "2088710"
  },
  {
    "text": "bunker generally DNS resolves right and so in DNS is a hierarchical system so",
    "start": "2088710",
    "end": "2095398"
  },
  {
    "text": "you you do your DNS query and if that server if the upstream server doesn't",
    "start": "2095399",
    "end": "2101790"
  },
  {
    "text": "know doesn't know it doesn't know when it goes up to the root and then eventually it goes down to the DNS to",
    "start": "2101790",
    "end": "2107670"
  },
  {
    "text": "the the actual owner of the domain that that has the name server and then it",
    "start": "2107670",
    "end": "2112710"
  },
  {
    "text": "replies and so hey you've got communication here and so Dinah's tunnel-like just makes queries that",
    "start": "2112710",
    "end": "2120150"
  },
  {
    "text": "actually relay data and so we're using a rom beause a DNS cat to to set up this",
    "start": "2120150",
    "end": "2128820"
  },
  {
    "text": "DNS tunnel for us and it works so okay how do we make it",
    "start": "2128820",
    "end": "2138210"
  },
  {
    "text": "persist like we know we can backdoor the RAM disk and we can and we can have our",
    "start": "2138210",
    "end": "2144300"
  },
  {
    "text": "processes there our storage there and our connection there but like what happens when they want to update like",
    "start": "2144300",
    "end": "2150120"
  },
  {
    "text": "then we're screwed right well remember how I said like the RAM disk who are",
    "start": "2150120",
    "end": "2155160"
  },
  {
    "text": "assembled on the system so what happens is the renders are actually like gzipped",
    "start": "2155160",
    "end": "2162600"
  },
  {
    "text": "cpio archives so what happens is you install your kernel and modules and",
    "start": "2162600",
    "end": "2169230"
  },
  {
    "text": "whatever and then it calls a hook that updates and it in in the Ubuntu and Debian world it's called update in it",
    "start": "2169230",
    "end": "2174630"
  },
  {
    "text": "Ram FS and in the Red Hat world it's called racket or anyway",
    "start": "2174630",
    "end": "2180210"
  },
  {
    "text": "so what it does is it assembles it into it makes attempter and it sprays all these files in there of what the RAM",
    "start": "2180210",
    "end": "2186660"
  },
  {
    "text": "disk is supposed to contain and then it calls cpio and archives them up and",
    "start": "2186660",
    "end": "2192780"
  },
  {
    "text": "where you we just have a process that just hangs out and wait for those to be created and as soon as the binary that",
    "start": "2192780",
    "end": "2200580"
  },
  {
    "text": "we backdoor is called run in it as soon as the copying finishes writing run in",
    "start": "2200580",
    "end": "2206850"
  },
  {
    "text": "it we just write our own and then the",
    "start": "2206850",
    "end": "2211910"
  },
  {
    "text": "when it when the when cpio is called to archive it all up it our character our",
    "start": "2211910",
    "end": "2217650"
  },
  {
    "text": "copy this is great and you know there's",
    "start": "2217650",
    "end": "2222840"
  },
  {
    "text": "this sort of our erase here but the good news is we're we're in a position ahead",
    "start": "2222840",
    "end": "2231900"
  },
  {
    "text": "of you in the race so we'll just set our scheduling class to real-time and your scheduling class not to real-time and",
    "start": "2231900",
    "end": "2238470"
  },
  {
    "text": "we'll win the race every time and then it leaves like very little like sort of",
    "start": "2238470",
    "end": "2245300"
  },
  {
    "text": "forensic trace right like you know the only extra step here is a rename right",
    "start": "2245300",
    "end": "2251610"
  },
  {
    "text": "in a rename in the Assembly of the tempo of the REM disk which is you know",
    "start": "2251610",
    "end": "2260130"
  },
  {
    "text": "hundreds of files or splatted in there and it happens with some degree of frequency so basically if you're monitoring the system",
    "start": "2260130",
    "end": "2268380"
  },
  {
    "text": "basically this is noise you never look you know and it rain my fast was called and it's flat at all these files and you",
    "start": "2268380",
    "end": "2277980"
  },
  {
    "text": "know that's normal okay it's the demo time",
    "start": "2277980",
    "end": "2283790"
  },
  {
    "text": "excitement okay so then we get to then",
    "start": "2283790",
    "end": "2290040"
  },
  {
    "text": "let's see how good I am with the X render cam mount command line Oh No",
    "start": "2290040",
    "end": "2304100"
  },
  {
    "text": "ah tackle difficulties",
    "start": "2308970",
    "end": "2314510"
  },
  {
    "text": "he wears it where the display thing go -",
    "start": "2316630",
    "end": "2328330"
  },
  {
    "text": "oh yeah this is good you guys can see this right okay cool I got to get my",
    "start": "2328330",
    "end": "2340300"
  },
  {
    "text": "notes because it's kind of a long demo script and oh I can't read my notes anyway okay",
    "start": "2340300",
    "end": "2345340"
  },
  {
    "text": "Yello okay so can you guys see and/or read this not that this I'm going to",
    "start": "2345340",
    "end": "2358330"
  },
  {
    "text": "assume that's a yes okay so what do we",
    "start": "2358330",
    "end": "2364240"
  },
  {
    "text": "have over here on the right over here I don't know if you can see my masculine",
    "start": "2364240",
    "end": "2369520"
  },
  {
    "text": "or not we have our command and control system and over here on the Left we have",
    "start": "2369520",
    "end": "2375370"
  },
  {
    "text": "our victim and this is the victim VM so let's just land on the victim that was",
    "start": "2375370",
    "end": "2381100"
  },
  {
    "text": "easy and so let's see we have our run in",
    "start": "2381100",
    "end": "2387130"
  },
  {
    "text": "it binary and what I want to show you about the runnin it binary is that we have a special section since like you",
    "start": "2387130",
    "end": "2396910"
  },
  {
    "text": "know not everyone has the oops I'm typo everyone has the same CNC system so you",
    "start": "2396910",
    "end": "2409180"
  },
  {
    "text": "need to be able to set that",
    "start": "2409180",
    "end": "2412410"
  },
  {
    "text": "and so we have this like DNS command line this DNS command line section in",
    "start": "2414600",
    "end": "2421080"
  },
  {
    "text": "the binary and you can see that it's like fail fail fail so we need to make a secret that should do and then we need",
    "start": "2421080",
    "end": "2434490"
  },
  {
    "text": "to set that into our binary and then we",
    "start": "2434490",
    "end": "2442470"
  },
  {
    "text": "just are basically setting the DNS cat",
    "start": "2442470",
    "end": "2448190"
  },
  {
    "text": "command line options that it will run and we got to put in our host name our",
    "start": "2448970",
    "end": "2458670"
  },
  {
    "text": "domain name and that's like kind of a hard one to always type correctly each time not type it correctly it doesn't work and then we have like a cool little",
    "start": "2458670",
    "end": "2466950"
  },
  {
    "text": "logo and that looks right and then if we run object up again you should see that",
    "start": "2466950",
    "end": "2476270"
  },
  {
    "text": "yay our secret is in there so great let's X fill it into the victim or is",
    "start": "2476270",
    "end": "2489090"
  },
  {
    "text": "that that's probably not exfil if you take it from your system and like put it into the victims anyway okay and then",
    "start": "2489090",
    "end": "2497340"
  },
  {
    "text": "we'll just we're being tricky so we'll just base64 encrypt it and then let's send it to",
    "start": "2497340",
    "end": "2505620"
  },
  {
    "text": "paste bin this is fine check check check",
    "start": "2505620",
    "end": "2512160"
  },
  {
    "text": "check check check",
    "start": "2512160",
    "end": "2514760"
  },
  {
    "text": "cool and we get a URL that's neat so now let's we need to exploit the system so",
    "start": "2521640",
    "end": "2529019"
  },
  {
    "text": "that we're route fortunately the system came with one awesome so now let's do some little",
    "start": "2529019",
    "end": "2536039"
  },
  {
    "text": "trickery let's unshare the mountain namespace so that we can scribble all over into a space that no other process",
    "start": "2536039",
    "end": "2542819"
  },
  {
    "text": "can see and we'll just like pop a ram disk over lost-and-found to do our evil",
    "start": "2542819",
    "end": "2548910"
  },
  {
    "text": "work this is good and then we'll just",
    "start": "2548910",
    "end": "2555480"
  },
  {
    "text": "get it back from turn bin RBC number two",
    "start": "2555480",
    "end": "2564980"
  },
  {
    "text": "base64 decrypt it and if this works correctly yeah we have binaries so now",
    "start": "2564980",
    "end": "2574519"
  },
  {
    "text": "we'll just horse pill install running it and it will do that and then we all go",
    "start": "2574519",
    "end": "2583049"
  },
  {
    "text": "to our server and it's hard to talk and",
    "start": "2583049",
    "end": "2596400"
  },
  {
    "text": "type at the same time",
    "start": "2596400",
    "end": "2599660"
  },
  {
    "text": "we'll just use that key we made before and then we'll spell it hopefully the",
    "start": "2608790",
    "end": "2619680"
  },
  {
    "text": "same way and then we're running that so now put just we've been we've infected",
    "start": "2619680",
    "end": "2626310"
  },
  {
    "text": "it well let's reboot and then this is our system here so we're rebooting doop doop",
    "start": "2626310",
    "end": "2633750"
  },
  {
    "text": "do there's good old Tiana core and then let's make this slightly more verbose so",
    "start": "2633750",
    "end": "2643530"
  },
  {
    "text": "that you can so it doesn't just show black screen because that's boring and I",
    "start": "2643530",
    "end": "2654440"
  },
  {
    "text": "have to wait for it to boot before we can get back in oh I'm running out of time this is the race can I pull off the",
    "start": "2654440",
    "end": "2661230"
  },
  {
    "text": "demo before before they throw me off stage 2 2 2 2 2 ok Linux is booting doo",
    "start": "2661230",
    "end": "2669750"
  },
  {
    "text": "doo - - oh no we've been poned by horse pillow and then we you know it's pretty",
    "start": "2669750",
    "end": "2675690"
  },
  {
    "text": "good logo so we leave it on screen for a while so that you can see that you've been known about horse tail also it's a",
    "start": "2675690",
    "end": "2683010"
  },
  {
    "text": "locks or silly you can just sleep out the race so our system is backup and you",
    "start": "2683010",
    "end": "2690360"
  },
  {
    "text": "know everything kind of looks normal you can see like there's no like weird stuff",
    "start": "2690360",
    "end": "2697680"
  },
  {
    "text": "running the kernel threads are all there and like it just looks normal and you",
    "start": "2697680",
    "end": "2704370"
  },
  {
    "text": "don't see anything like really weird and then all right and then we have our back",
    "start": "2704370",
    "end": "2714030"
  },
  {
    "text": "to our shell and DNS can't works a lot like meterpreter except for a slightly",
    "start": "2714030",
    "end": "2721050"
  },
  {
    "text": "more flaky wait I have to tell it to",
    "start": "2721050",
    "end": "2727530"
  },
  {
    "text": "spawn the shell then I have a new window and ok and now here I am I'm route",
    "start": "2727530",
    "end": "2739280"
  },
  {
    "text": "we can exfil the Shanno file and do",
    "start": "2741260",
    "end": "2748020"
  },
  {
    "text": "others just to nastiness and et cetera but let's see if I can like blow through",
    "start": "2748020",
    "end": "2753300"
  },
  {
    "text": "the slot the rest of the slides like really fast not that one",
    "start": "2753300",
    "end": "2758690"
  },
  {
    "text": "now pre-rendering crap hurry up",
    "start": "2758690",
    "end": "2764780"
  },
  {
    "text": "this is what I get for not bringing a fast computer",
    "start": "2767900",
    "end": "2772579"
  },
  {
    "text": "oh you're seeing like my weird presenter of you aren't you",
    "start": "2777400",
    "end": "2782010"
  },
  {
    "text": "you know",
    "start": "2796530",
    "end": "2799220"
  },
  {
    "text": "okay so we've shown that it's will blow through that we showed that it was persistent and all that so let's talk",
    "start": "2804330",
    "end": "2810750"
  },
  {
    "text": "about detection so as I said before you have like these deterministic",
    "start": "2810750",
    "end": "2815910"
  },
  {
    "text": "enumerators of the namespaces so actually you can look and prop it and ask and just see that you're not the",
    "start": "2815910",
    "end": "2822690"
  },
  {
    "text": "namespace you think you should be that means you're out and these kernel",
    "start": "2822690",
    "end": "2827910"
  },
  {
    "text": "threads are they kind of look like kernel threads but they're not real kernel threads so real kernel threads",
    "start": "2827910",
    "end": "2834030"
  },
  {
    "text": "they're PPID is zero and these kernel threats are PPID is one so that's kind",
    "start": "2834030",
    "end": "2840330"
  },
  {
    "text": "of a little fishy and there's only one audit subsystem on the whole machine so even though you're playing all these",
    "start": "2840330",
    "end": "2846030"
  },
  {
    "text": "silly and nici you know really silly namespace games actually you know awed",
    "start": "2846030",
    "end": "2852180"
  },
  {
    "text": "it actually sees everything you're doing and obviously you can take apart the RAM disk and you can see that a fork a",
    "start": "2852180",
    "end": "2858450"
  },
  {
    "text": "binary became a hundred and eighty K binary and take it apart and see there's nasty crap inside so but what can we do",
    "start": "2858450",
    "end": "2866670"
  },
  {
    "text": "to make this like not happen so basically after going back and forth a",
    "start": "2866670",
    "end": "2873450"
  },
  {
    "text": "lot on this you know we just need to stop assembling Ram disks on kernels we",
    "start": "2873450",
    "end": "2880260"
  },
  {
    "text": "need to rely on the same semantics of secure boot and if you think about the way secure boot works basically you can",
    "start": "2880260",
    "end": "2886530"
  },
  {
    "text": "think of it as there's a secret that you don't know and the problem with the",
    "start": "2886530",
    "end": "2893360"
  },
  {
    "text": "assembling on the system is you can't keep a secret from yourself and we don't ship like a million kernels for systems",
    "start": "2893360",
    "end": "2900900"
  },
  {
    "text": "we make like a generic kernel that works for just about everybody and then likewise we can make a generic Ram disk",
    "start": "2900900",
    "end": "2907440"
  },
  {
    "text": "that works for just about everybody and we could actually cryptographically",
    "start": "2907440",
    "end": "2912660"
  },
  {
    "text": "verify that Ram disk and like that would actually completely eliminate that this",
    "start": "2912660",
    "end": "2917940"
  },
  {
    "text": "threat and it would completely eliminate like all the ancillary threats related to it like you know backdooring you know",
    "start": "2917940",
    "end": "2925890"
  },
  {
    "text": "like backdooring the setup so that a textual Treacher Lux key as you boot and all those other sort of funny games",
    "start": "2925890",
    "end": "2932760"
  },
  {
    "text": "that that have been presented before I only have like one minute left so",
    "start": "2932760",
    "end": "2937980"
  },
  {
    "text": "you can draw your own conclusion and so and there's no Q&A time but we're going",
    "start": "2937980",
    "end": "2945390"
  },
  {
    "text": "to do a visit Def Con we have the DC 503 lounge from I think on Saturday from",
    "start": "2945390",
    "end": "2955440"
  },
  {
    "text": "1:00 to 3:00 and all the DC 503 presenters will be in there and you can talk to us and ask us questions and tell",
    "start": "2955440",
    "end": "2960990"
  },
  {
    "text": "us that we're terrible people etc thank you very much",
    "start": "2960990",
    "end": "2966349"
  },
  {
    "text": "[Applause]",
    "start": "2966740",
    "end": "2969720"
  }
]