[
  {
    "start": "0",
    "end": "17000"
  },
  {
    "text": "hi and thank you for attending uh the last session so I'm sure uh you're very courageous to stay till the end of the",
    "start": "120",
    "end": "7160"
  },
  {
    "text": "conference um doesn't show very well but it's supposed to be the zero wi picture that initiated this famous M but it's",
    "start": "7160",
    "end": "14759"
  },
  {
    "text": "okay you can guess what it is um so this is what we're going to cover today it's",
    "start": "14759",
    "end": "20519"
  },
  {
    "start": "17000",
    "end": "48000"
  },
  {
    "text": "a 25 it's a 30 minute talk I'll try to leave some uh room for question questions and um this is what we're",
    "start": "20519",
    "end": "26679"
  },
  {
    "text": "going to address so basically I'm going to introduce myself very quickly I'll Rec what root means on you know on an",
    "start": "26679",
    "end": "32119"
  },
  {
    "text": "Android devices and we did a you know very lightweight reverse engineering and we'll go through the toolbox we Ed to do",
    "start": "32119",
    "end": "38480"
  },
  {
    "text": "um to do that research and we'll present our fundings and a little tool that we",
    "start": "38480",
    "end": "43960"
  },
  {
    "text": "build for um to help us analyze these these applications so this is a joint paper",
    "start": "43960",
    "end": "50360"
  },
  {
    "text": "between me and my two other colleagues at sanch research Labs we've been involved um mostly in Academy conference",
    "start": "50360",
    "end": "56680"
  },
  {
    "text": "so it's a it's our first publication at black hat and um yeah we're involved in you know",
    "start": "56680",
    "end": "64000"
  },
  {
    "text": "Cloud security binary Dynamic analysis static analysis and all the good things that's what we do on our daily",
    "start": "64000",
    "end": "71240"
  },
  {
    "start": "71000",
    "end": "237000"
  },
  {
    "text": "work so the context of this presentation is um how many of you have are using uh",
    "start": "71240",
    "end": "76840"
  },
  {
    "text": "personal devices for corporate usage wow less than I expected but it's",
    "start": "76840",
    "end": "83479"
  },
  {
    "text": "uh it seems to be a new a very big Trend especially on um you know iOS and I mean",
    "start": "83479",
    "end": "89600"
  },
  {
    "text": "especially on Android iOS is still not the first citizen corporate environment but that's it's going there and if you",
    "start": "89600",
    "end": "95799"
  },
  {
    "text": "look at the market research that's not my number they say that about 70% of the devices are running Android so that's um",
    "start": "95799",
    "end": "102960"
  },
  {
    "text": "that's kind of a big Market to address and somehow root has a bad reputation",
    "start": "102960",
    "end": "108320"
  },
  {
    "text": "and um if you've read the news the last I think it was two weeks ago or last week lout published something about new",
    "start": "108320",
    "end": "114799"
  },
  {
    "text": "malware that were leveraging um root exploits to you know insert themselves so deep in the system that one of the",
    "start": "114799",
    "end": "121079"
  },
  {
    "text": "recommendation was buy a new device which I thought was pretty funny uh so",
    "start": "121079",
    "end": "127240"
  },
  {
    "text": "rud has a bad reputation for you know valid reasons and when we started to look at it we asked ourselves this",
    "start": "127240",
    "end": "134480"
  },
  {
    "text": "question so what does it you know how many applications actually check for root of course you have you know Candy",
    "start": "134480",
    "end": "140959"
  },
  {
    "text": "Crush maybe or you know other types of games that are worried that you're going to hack their inhab purchases and",
    "start": "140959",
    "end": "146879"
  },
  {
    "text": "probably not the good guy probably not the most interesting use case for us because we wanted to see you know we we",
    "start": "146879",
    "end": "153319"
  },
  {
    "text": "thought that the guy's better POS best position to address and and look for root um traces on a phone would be",
    "start": "153319",
    "end": "159920"
  },
  {
    "text": "security vendors and in case you're not aware we are a security vendor as well",
    "start": "159920",
    "end": "165519"
  },
  {
    "text": "small one um and we wanted to see how good these checks were so and after that we wanted to see",
    "start": "165519",
    "end": "173640"
  },
  {
    "text": "okay now that we know how these checks work how easy is it to subvert these checks and to make um an application",
    "start": "173640",
    "end": "180680"
  },
  {
    "text": "believe that your device is not rooted while it in fact is and the way we looked at it we wanted to compare",
    "start": "180680",
    "end": "186760"
  },
  {
    "text": "security vendors so think about AV Solutions and most of these vendors they",
    "start": "186760",
    "end": "192200"
  },
  {
    "text": "also provide a bring your own device solution that is the corporate version or the Enterprise and wanted to compare",
    "start": "192200",
    "end": "198400"
  },
  {
    "text": "these two products ideally from the same company and see if they do the same thing they have the same concerns or if",
    "start": "198400",
    "end": "205360"
  },
  {
    "text": "they do something more complicated on on one end and of course we wanted to see we're",
    "start": "205360",
    "end": "210560"
  },
  {
    "text": "very curious to see um how people were doing it so the way we started this work is we looked at our own product the",
    "start": "210560",
    "end": "217319"
  },
  {
    "text": "consumer product and we saw the checks they were're doing we were a bit um surprised and we",
    "start": "217319",
    "end": "225519"
  },
  {
    "text": "decided to to check the state of the industry we were wondering if we were only the you know bad student or if",
    "start": "225519",
    "end": "232400"
  },
  {
    "text": "everybody was doing the same luckily for us you'll see that um we're not doing so",
    "start": "232400",
    "end": "237760"
  },
  {
    "start": "237000",
    "end": "335000"
  },
  {
    "text": "bad so a rooted device if you guys are windows User it's the administrator it's",
    "start": "237760",
    "end": "243360"
  },
  {
    "text": "a super it's a it stands for super user and the way it works on Android so if you have your Linux system you just",
    "start": "243360",
    "end": "249000"
  },
  {
    "text": "invoke the you know super user binary you get your prompt with a sharp and then you can can go crazy from there on",
    "start": "249000",
    "end": "255680"
  },
  {
    "text": "Android slightly different so first of all you need to root your device that process basically means you're going to",
    "start": "255680",
    "end": "262360"
  },
  {
    "text": "have an exploit this exploit is going to basically drop a super user binary compile for your architecture put it at",
    "start": "262360",
    "end": "268400"
  },
  {
    "text": "the right place or export it in your your path environment variable so that you can access it from anywhere and the",
    "start": "268400",
    "end": "273880"
  },
  {
    "text": "way you invoke it is it's tied to a root management application it's a it's a six-step process that's a pretty complex",
    "start": "273880",
    "end": "280400"
  },
  {
    "text": "process to execute a command as a root user on on Android so basically you have an application that invokes the super",
    "start": "280400",
    "end": "286600"
  },
  {
    "text": "user binary and U the super user binary basically will send a a root request",
    "start": "286600",
    "end": "292840"
  },
  {
    "text": "intent because on Android everything is intent that's basically a glorified IPC communication and the root management",
    "start": "292840",
    "end": "299280"
  },
  {
    "text": "application is going to register a broadcast receiver for this root intent and then is going to verify a policy",
    "start": "299280",
    "end": "306039"
  },
  {
    "text": "whether you allow this application to execute a command as a root user and then it's going to you know tell you yes",
    "start": "306039",
    "end": "312479"
  },
  {
    "text": "or no and in the end the command is going to be forwarded to a suon and this demon executes the command for you and",
    "start": "312479",
    "end": "318600"
  },
  {
    "text": "returns back the results the last part the Su demon is something new that has been introduced for um rooted devices",
    "start": "318600",
    "end": "324919"
  },
  {
    "text": "after I think KitKat or 4.1 or 4.4 but anyway so that's that's basically how",
    "start": "324919",
    "end": "331800"
  },
  {
    "text": "rooted devices and if you want to execute a root command that's how it works so before we go a little bit you",
    "start": "331800",
    "end": "338360"
  },
  {
    "text": "know to the results we have to go quickly over what's an an",
    "start": "338360",
    "end": "343680"
  },
  {
    "text": "application of course we didn't have access to the source code of all the security vendors besides ours and um we",
    "start": "343680",
    "end": "350560"
  },
  {
    "text": "decided to basically pull application from the under Marketplace and look at it so doing some reverse engineering and",
    "start": "350560",
    "end": "357120"
  },
  {
    "text": "luckily for us Java I mean Android is is very easy to reverse so you have several",
    "start": "357120",
    "end": "362280"
  },
  {
    "text": "layers but basically it's a it's it's Java based it's compiled into a set of",
    "start": "362280",
    "end": "367520"
  },
  {
    "text": "classes and you have resources and all the classes get packaged into a DEX format that gets interpreted by a delic",
    "start": "367520",
    "end": "374479"
  },
  {
    "text": "VM and it's it's basically stored into into this APK container that is again a",
    "start": "374479",
    "end": "380759"
  },
  {
    "text": "glorified zip format you can just unzip it and you can see the content of the file and the analogy if you're running",
    "start": "380759",
    "end": "387039"
  },
  {
    "text": "iOS that would be an IPA file",
    "start": "387039",
    "end": "391560"
  },
  {
    "start": "391000",
    "end": "458000"
  },
  {
    "text": "so the good thing is that if you guys have you know Java has been there for a long time and there's a lot of tools",
    "start": "392479",
    "end": "397800"
  },
  {
    "text": "that that can be reused on Java bite code and the way Android builds it it's they basically change a little bit the",
    "start": "397800",
    "end": "404400"
  },
  {
    "text": "semantic of the bite code and it allows us to reuse most of the the existing tools for Java so that's when you unzip an",
    "start": "404400",
    "end": "411680"
  },
  {
    "text": "application for you know an Android that's what you get and if you um so you have the Manifest file you have the the",
    "start": "411680",
    "end": "418479"
  },
  {
    "text": "classes that contains it's a package contains all the set of classes that are going to be used by the application you",
    "start": "418479",
    "end": "424199"
  },
  {
    "text": "have the resources think about like you know the application needs to run on multiple screen multiple resolution so",
    "start": "424199",
    "end": "429720"
  },
  {
    "text": "everything will be stored in there and then you have a bunch of you know signatures and hashes to make sure that",
    "start": "429720",
    "end": "435319"
  },
  {
    "text": "the Integrity of the the application is still maintained when you install and execute it and sometimes you will see",
    "start": "435319",
    "end": "441160"
  },
  {
    "text": "this Leep folder so this Leep folder is instead of using Java you'll use some um",
    "start": "441160",
    "end": "447160"
  },
  {
    "text": "compile code that would be native code cc++ and that will be in there and you can have several folders for different",
    "start": "447160",
    "end": "453840"
  },
  {
    "text": "architectures that that the application is supposed to support so this is I just want to stress",
    "start": "453840",
    "end": "461160"
  },
  {
    "start": "458000",
    "end": "525000"
  },
  {
    "text": "that it's not rocket science so these are the tools that we use for our investigation and so the first one",
    "start": "461160",
    "end": "467479"
  },
  {
    "text": "converts the Android B code to another format that is the Java archive format",
    "start": "467479",
    "end": "472879"
  },
  {
    "text": "the reason we do that is to be able to leverage uh the second tool that is JD core that basically recovers the you",
    "start": "472879",
    "end": "480039"
  },
  {
    "text": "know this Java archive format basically bite code into source code and that's",
    "start": "480039",
    "end": "485440"
  },
  {
    "text": "the good Fe that's the good thing Java is um decomil to some extent unless you",
    "start": "485440",
    "end": "490479"
  },
  {
    "text": "do some uh strange manipulation but in cases where we couldn't recover the full um source code we basically use APK tool",
    "start": "490479",
    "end": "498759"
  },
  {
    "text": "and APK tool gives you this intermediate format that is SM which is assembly for",
    "start": "498759",
    "end": "505360"
  },
  {
    "text": "Java very high level assembly but you can play with register load values and all the good stuff you do with",
    "start": "505360",
    "end": "512479"
  },
  {
    "text": "assembly and of course we we are very lazy we want the computer to work for us",
    "start": "512479",
    "end": "517839"
  },
  {
    "text": "so we build a lot of glue code so these are the custom scripts that um that do all the the processing for",
    "start": "517839",
    "end": "525640"
  },
  {
    "start": "525000",
    "end": "780000"
  },
  {
    "text": "us so now we're going to go into the into the the results of our analysis so",
    "start": "526440",
    "end": "533720"
  },
  {
    "text": "we pulled a bunch of APK we're going to go through all the the applications that we that we uh downloaded and the vendors",
    "start": "533720",
    "end": "540480"
  },
  {
    "text": "we we looked at so the first one is presents a file if you remember um what",
    "start": "540480",
    "end": "546240"
  },
  {
    "text": "I told you is that basically when you when you're a super user when you",
    "start": "546240",
    "end": "552240"
  },
  {
    "text": "your device is rooted you will have the super user binary somewhere and some people realize that yeah must exploits",
    "start": "552240",
    "end": "559000"
  },
  {
    "text": "like to rout and all the the big exploits they basically just dump the",
    "start": "559000",
    "end": "564320"
  },
  {
    "text": "the super user binary into system bin or um X bin and that's where it is is and",
    "start": "564320",
    "end": "570200"
  },
  {
    "text": "some people actually just look whether the binary is in there and they issue an open or a stat command and they they",
    "start": "570200",
    "end": "577839"
  },
  {
    "text": "assume that your device is rooted obviously you just move the binary somewhere else and um that's it your",
    "start": "577839",
    "end": "584839"
  },
  {
    "text": "device is not rooted some people realize that there are some smart people out there that",
    "start": "584839",
    "end": "591959"
  },
  {
    "text": "would use Dynamic path so if you're under um normal operating system you'll",
    "start": "591959",
    "end": "597320"
  },
  {
    "text": "have a environment you know you will have an a set of environment variable that you can call from anywhere you know",
    "start": "597320",
    "end": "603040"
  },
  {
    "text": "during your current path and this is what these guys are doing they basically check all the the environment variable",
    "start": "603040",
    "end": "609360"
  },
  {
    "text": "in your system and they iterate over each of these path and they open the forward slash super user and for each of",
    "start": "609360",
    "end": "617200"
  },
  {
    "text": "these path they check whether you have the super user binary again that's",
    "start": "617200",
    "end": "623160"
  },
  {
    "text": "a it's a very naive way to to use it because you could just not export the super user binary because you don't feel",
    "start": "623160",
    "end": "628920"
  },
  {
    "text": "like you need need it every time everywhere from you know everywhere in your system and you could just invoke it",
    "start": "628920",
    "end": "634519"
  },
  {
    "text": "with the full path yourself and that's what these guys are actually um checking for some people when the lazy rout they",
    "start": "634519",
    "end": "642240"
  },
  {
    "text": "assume that it's a Linux system so you have this wonderful witch command that basically tells you which which binary",
    "start": "642240",
    "end": "649200"
  },
  {
    "text": "you're actually running by giving you returning you the full path if you guys have used Python and you didn't use uh",
    "start": "649200",
    "end": "655000"
  },
  {
    "text": "you know the way to python a to manage your environment you've used witch a lot of time to differentiate between Python",
    "start": "655000",
    "end": "661399"
  },
  {
    "text": "2.7 and 3.x and some people were even you know",
    "start": "661399",
    "end": "666720"
  },
  {
    "text": "they weren't even simpler they basically just run the super user binary and they",
    "start": "666720",
    "end": "671920"
  },
  {
    "text": "check the return code of the sub process so if it was able to run then they assume that your device is",
    "start": "671920",
    "end": "678600"
  },
  {
    "text": "rooted and again this is the same as checking if it's in the environment variable and some people realize that if",
    "start": "678600",
    "end": "685519"
  },
  {
    "text": "you go back again to the first picture that to have a device rooted you have in general you need a you know a root uh",
    "start": "685519",
    "end": "693040"
  },
  {
    "text": "applic your Root Management application and they're actually checking for one",
    "start": "693040",
    "end": "698160"
  },
  {
    "text": "some of them are checking for super user APK and they're checking if you have that you're definitely rooted which is",
    "start": "698160",
    "end": "704360"
  },
  {
    "text": "again a very invalid check because any of you without having your device rooted can absolutely install this application",
    "start": "704360",
    "end": "711480"
  },
  {
    "text": "you could download it you're not going to do anything with it but you're going to have it and they will detect that your device is",
    "start": "711480",
    "end": "717360"
  },
  {
    "text": "rooted so some people they're checking for binaries with the set um the set bit",
    "start": "717360",
    "end": "724000"
  },
  {
    "text": "uid which again you can have you can have binaries that have this bit set but that doesn't mean your device is rooted",
    "start": "724000",
    "end": "730600"
  },
  {
    "text": "you could have it for very other reasons but again doesn't mean your device is rooted and some people they check um so",
    "start": "730600",
    "end": "738600"
  },
  {
    "text": "the the first one to check for The Root Management applications they're doing it by um looking at the path and some",
    "start": "738600",
    "end": "744560"
  },
  {
    "text": "people are using the the API so Android the SDK provides you an API that you in call and this API can return you the set",
    "start": "744560",
    "end": "752399"
  },
  {
    "text": "of um you know the packages that you have installed on your system and they check if you have one of them you",
    "start": "752399",
    "end": "758720"
  },
  {
    "text": "definitely rooted which again is not true and some people they're even you know on Android you can exact you can",
    "start": "758720",
    "end": "765320"
  },
  {
    "text": "execute command shell commands and you have these PM list packages that will you know if you run a terminal us SSH to",
    "start": "765320",
    "end": "771800"
  },
  {
    "text": "your phone you can run that and it tells you the list of applications that you have installed and that's that's how",
    "start": "771800",
    "end": "777639"
  },
  {
    "text": "some people are doing it [Applause] that's what we call General device",
    "start": "777639",
    "end": "783079"
  },
  {
    "start": "780000",
    "end": "842000"
  },
  {
    "text": "settings some people are verifying what test keys or what keys are you have in",
    "start": "783079",
    "end": "788160"
  },
  {
    "text": "your environment so in in Android you have a bunch of strings like the kernel version the kernel name and all of that",
    "start": "788160",
    "end": "793920"
  },
  {
    "text": "and people are checking whether you have these uh test keys and if you have these test Keys you're potentially rooted but",
    "start": "793920",
    "end": "802440"
  },
  {
    "text": "again that doesn't if you have release key you could have release key yourself if you build your own version of Android you could sign you could could have",
    "start": "802440",
    "end": "808519"
  },
  {
    "text": "release keys and you could have the super user binary in there doesn't mean you're you know doesn't mean you're not",
    "start": "808519",
    "end": "813639"
  },
  {
    "text": "rot it so again these are very flaky checks that that these people are doing and you have another bunch of strings",
    "start": "813639",
    "end": "819839"
  },
  {
    "text": "that you can get from Android specifically the like the the version of the OS that you have and um if you have",
    "start": "819839",
    "end": "827240"
  },
  {
    "text": "custom roms if you've installed a Cogen people are checking",
    "start": "827240",
    "end": "833199"
  },
  {
    "text": "basically the checks that we've encountered in the wild they were checking only for the presence of this",
    "start": "833199",
    "end": "838759"
  },
  {
    "text": "spefic specific um Fork of Android so that's that's slightly more",
    "start": "838759",
    "end": "845920"
  },
  {
    "start": "842000",
    "end": "998000"
  },
  {
    "text": "interesting because now we've encountered all of these for pretty easy checks and nothing really um rocket",
    "start": "845920",
    "end": "854240"
  },
  {
    "text": "signs some people are doing something slightly smarter and if you remember uh",
    "start": "854240",
    "end": "860680"
  },
  {
    "text": "when you have when you root your device you need to drop the binary somewhere and the the preferred you know the",
    "start": "860680",
    "end": "867480"
  },
  {
    "text": "preferred uh path to put it would be in a in system or system bin so for that to",
    "start": "867480",
    "end": "873519"
  },
  {
    "text": "happen your exploit need to be able to mount the partition as R write drop the biner in there and usually they will",
    "start": "873519",
    "end": "881000"
  },
  {
    "text": "return back the permission to read only but some people figured that um sometimes you may have the partition",
    "start": "881000",
    "end": "888279"
  },
  {
    "text": "as uh mounted as as read right again for my experience it's not",
    "start": "888279",
    "end": "894079"
  },
  {
    "text": "it's not really a very good check and some people they don't even check the results of the mount some",
    "start": "894079",
    "end": "900639"
  },
  {
    "text": "people check the result of the mount command some people just try to create a file in there just to see if it you know",
    "start": "900639",
    "end": "906639"
  },
  {
    "text": "if it works and if it works obviously you have access to the the system partition and obviously that's that's an",
    "start": "906639",
    "end": "912040"
  },
  {
    "text": "indication of um of a rooted device um another checks that that we've",
    "start": "912040",
    "end": "919000"
  },
  {
    "text": "encountered was the the check for the user ID so under Linux everything is um",
    "start": "919000",
    "end": "924680"
  },
  {
    "text": "so you have a user ID the user ID the lower the more privileged and obviously people were checking if you had the user",
    "start": "924680",
    "end": "930480"
  },
  {
    "text": "ID zero Android has a very complicated execution uh process if you want to run",
    "start": "930480",
    "end": "937800"
  },
  {
    "text": "application on the command line by yourself you have like zillions of arguments to be able to",
    "start": "937800",
    "end": "943839"
  },
  {
    "text": "launch the zygote the zot is going to instantiate the process you have the app process so and basically every time",
    "start": "943839",
    "end": "949880"
  },
  {
    "text": "you're R an application gets uh a new user ID randomized user ID that is never close to zero even if you're rooted so",
    "start": "949880",
    "end": "960000"
  },
  {
    "text": "again it's very curious check I and I must admit that I've only played with uh with Android four and above so maybe in",
    "start": "960000",
    "end": "968319"
  },
  {
    "text": "gingerbread that was a thing I doubt but maybe so",
    "start": "968319",
    "end": "973560"
  },
  {
    "text": "anyway this is this is pretty much the checks that we've encountered and all of",
    "start": "973560",
    "end": "978639"
  },
  {
    "text": "that without doing um any you know dynamic analysis so all of that was doing static analysis pulling the apks",
    "start": "978639",
    "end": "987079"
  },
  {
    "text": "decompiling doing some smart search for a bunch of strings that would be in there um fun fact most of them are not",
    "start": "987079",
    "end": "994480"
  },
  {
    "text": "obfuscated or very lightly um so now um these are the",
    "start": "994480",
    "end": "1001880"
  },
  {
    "start": "998000",
    "end": "1073000"
  },
  {
    "text": "results of uh this is where the industry stand these days I'm not I'm not going to speak for",
    "start": "1001880",
    "end": "1008040"
  },
  {
    "text": "I'm not going to bash much the other companies but speaking for ourselves we were very surprised that um we were just",
    "start": "1008040",
    "end": "1014759"
  },
  {
    "text": "checking for the super user binary in a very specific path uh so at least we got one one check so",
    "start": "1014759",
    "end": "1022639"
  },
  {
    "text": "the the number on the column in there uh doesn't represent the number of um",
    "start": "1022639",
    "end": "1028120"
  },
  {
    "text": "checks exactly it's the number of type of checks so we're doing only one type of check checking if the binary is in a",
    "start": "1028120",
    "end": "1034880"
  },
  {
    "text": "specific folder and this is for the the consumer versions of of these products so I don't",
    "start": "1034880",
    "end": "1043678"
  },
  {
    "text": "know you can see that some people some companies uh they better to check they",
    "start": "1043679",
    "end": "1049799"
  },
  {
    "text": "assume that who cares if you rooted you probably wanted it so it's not very important and I have to say that some",
    "start": "1049799",
    "end": "1056760"
  },
  {
    "text": "people are doing a better job than others uh kasperski for example were checking for um they were checking very",
    "start": "1056760",
    "end": "1063960"
  },
  {
    "text": "um thoroughly what what people uh were doing and anyway so but but there was",
    "start": "1063960",
    "end": "1071080"
  },
  {
    "text": "the interesting bit I think is is here is that there was a you know there's a",
    "start": "1071080",
    "end": "1076679"
  },
  {
    "start": "1073000",
    "end": "1255000"
  },
  {
    "text": "company that decided that um you know what what you rooted we may as well give you new features and Avast actually",
    "start": "1076679",
    "end": "1082640"
  },
  {
    "text": "leverages the root feature to provide you a personal firewall so if you install it on your phone you can have",
    "start": "1082640",
    "end": "1088120"
  },
  {
    "text": "the firewall and the way it works if you guys have tried to build a VPN or sorry",
    "start": "1088120",
    "end": "1093280"
  },
  {
    "text": "um you know a firewall on Android it's it's pretty nasty so you have to to bind",
    "start": "1093280",
    "end": "1098600"
  },
  {
    "text": "you know your own VPN um interface redirect all the traffic to this local VPN interface and you have to have the",
    "start": "1098600",
    "end": "1105080"
  },
  {
    "text": "mapping with the process you know process ID and socket file descriptors and then you need to recraft the IP",
    "start": "1105080",
    "end": "1111480"
  },
  {
    "text": "headers and if you rooted you just have a IP table so now I understand why they",
    "start": "1111480",
    "end": "1117919"
  },
  {
    "text": "do it it's pretty pretty easy it saves your life um we were very disappointed",
    "start": "1117919",
    "end": "1123520"
  },
  {
    "text": "because nobody was using a native code for R detection nobody in the consumer",
    "start": "1123520",
    "end": "1129520"
  },
  {
    "text": "versions of of their product and there there are Frameworks out there called root clock and uh I",
    "start": "1129520",
    "end": "1136159"
  },
  {
    "text": "think under the hood it's using um exposed and um basically this this application",
    "start": "1136159",
    "end": "1141720"
  },
  {
    "text": "allows you to clock the state of your device to pretend that your device is not rooted and um all the application out",
    "start": "1141720",
    "end": "1148919"
  },
  {
    "text": "there you could run root clock and pretend that your device was not rooted so the interesting thing with",
    "start": "1148919",
    "end": "1155679"
  },
  {
    "text": "Casper ski checks were that um they were actually doing uh we had to to review the results manually because they were",
    "start": "1155679",
    "end": "1162600"
  },
  {
    "text": "uh they were using reflection so we had to dig a little bit deeper to identify what kind of checks they were doing",
    "start": "1162600",
    "end": "1170600"
  },
  {
    "text": "so and then when we saw that we're pretty disappointed and we figured nah no that must be the consumer version",
    "start": "1170600",
    "end": "1176240"
  },
  {
    "text": "there's no money to make there so people are actually you know focusing on the very hard problem of protecting",
    "start": "1176240",
    "end": "1181360"
  },
  {
    "text": "corporate data not really so if you look at the results you still have uh providers of",
    "start": "1181360",
    "end": "1187919"
  },
  {
    "text": "bring your own device solutions that do not check whether your device is rooted at all so that's pretty scary if you",
    "start": "1187919",
    "end": "1194840"
  },
  {
    "text": "think about you having your Corporate email your device is rooted but whether you chose to root your device or not but",
    "start": "1194840",
    "end": "1200760"
  },
  {
    "text": "you cannot ensure Integrity of something that is on a on a device when and you",
    "start": "1200760",
    "end": "1206039"
  },
  {
    "text": "don't even check for that so some solution would basically check if your device is rooted and then boot you out of the network or won't allow you to",
    "start": "1206039",
    "end": "1212320"
  },
  {
    "text": "connect to a VPN and um so",
    "start": "1212320",
    "end": "1217799"
  },
  {
    "text": "again pretty disappointing results for the whole industry and us don't worry",
    "start": "1217799",
    "end": "1224559"
  },
  {
    "text": "I'll have some self- introspection and we're doing also the same check we're doing exact same check on the consumer",
    "start": "1224559",
    "end": "1230039"
  },
  {
    "text": "version and the Enterprise version the only I mean no nothing",
    "start": "1230039",
    "end": "1235240"
  },
  {
    "text": "really stand out in there except IBM IBM were doing very very good checks they're checking for every possible cases",
    "start": "1235240",
    "end": "1242760"
  },
  {
    "text": "however they were doing in um almost clear text they were doing it in Java so",
    "start": "1242760",
    "end": "1248960"
  },
  {
    "text": "you can have great you know detection mechanism but if anybody can reverse it then it's not that",
    "start": "1248960",
    "end": "1255400"
  },
  {
    "start": "1255000",
    "end": "1351000"
  },
  {
    "text": "good so the only we we found two companies that were actually using native",
    "start": "1255400",
    "end": "1260799"
  },
  {
    "text": "code so um AirWatch was using they had their MDM agent and if you open you know",
    "start": "1260799",
    "end": "1267400"
  },
  {
    "text": "if you decompile the application and if you unpack it you could see that there was a shared object um an arm shared",
    "start": "1267400",
    "end": "1273360"
  },
  {
    "text": "object uh in in the the one we looked at however there's no string confiscation",
    "start": "1273360",
    "end": "1278640"
  },
  {
    "text": "there's no packing there's no you could I mean there's not even like Integrity checking on the binary itself so you",
    "start": "1278640",
    "end": "1284440"
  },
  {
    "text": "could just knob some sections and the binary would would run fine and the bulk of the checks were in the get device",
    "start": "1284440",
    "end": "1290840"
  },
  {
    "text": "State method that gets reported back to to the Mother Ship I assume and um again",
    "start": "1290840",
    "end": "1297720"
  },
  {
    "text": "very easy to reverse the other the other one was Exciter uh they had a library as well very easy you you you know you open",
    "start": "1297720",
    "end": "1304960"
  },
  {
    "text": "the binary in Ida or oper and then in like five minutes you can identify the",
    "start": "1304960",
    "end": "1310400"
  },
  {
    "text": "check four vendors had no checks okay there's only one where it's",
    "start": "1310400",
    "end": "1317240"
  },
  {
    "text": "controversial because I've been their website and they claim they they do have a way to check for jailbroken devices",
    "start": "1317240",
    "end": "1323600"
  },
  {
    "text": "which I assume they would do also for Android for roted devices um is that",
    "start": "1323600",
    "end": "1329240"
  },
  {
    "text": "these the way these Solutions work is that they have a back end that the administrator uh provision with a set of",
    "start": "1329240",
    "end": "1334400"
  },
  {
    "text": "policies and maybe there's a way to provision a policy where you could Blacklist binaries or indicator of",
    "start": "1334400",
    "end": "1340679"
  },
  {
    "text": "compromise again IBM did a very good job but no obfuscation at all even on the",
    "start": "1340679",
    "end": "1346000"
  },
  {
    "text": "Java no native code so fairly trivial to to recover the",
    "start": "1346000",
    "end": "1351640"
  },
  {
    "text": "content so as I told you we we did most of that statically but except for uh Casper key",
    "start": "1351640",
    "end": "1358799"
  },
  {
    "text": "where we had to actually look why uh some files were you know we didn't see",
    "start": "1358799",
    "end": "1364240"
  },
  {
    "text": "what we expected so we we basically needed a tool to uh to do some Dynamic analysis and we use this tool in other",
    "start": "1364240",
    "end": "1371600"
  },
  {
    "text": "uh you know in another context so we build a tool that's basically um you you",
    "start": "1371600",
    "end": "1377520"
  },
  {
    "text": "build a library you inject it and if you think about um Linux that's that's how it works you can",
    "start": "1377520",
    "end": "1384200"
  },
  {
    "text": "um you can inject a library and the symbol that is in this Library will be called first before going to lip C so if",
    "start": "1384200",
    "end": "1390559"
  },
  {
    "text": "you think about print F print F gets fetched into lipy and then in our case we LD preload it that",
    "start": "1390559",
    "end": "1398360"
  },
  {
    "text": "allows our symbol to be first and then we could hook print F and other bunch of functions so the way it works on Android",
    "start": "1398360",
    "end": "1406440"
  },
  {
    "text": "you don't do LD preload as I told you to Launch application it's a bit of a nightmare to do it manually so you have",
    "start": "1406440",
    "end": "1412559"
  },
  {
    "text": "this uh this set of you know set properties set prop and you can set properties for different packages and",
    "start": "1412559",
    "end": "1418880"
  },
  {
    "text": "here we basically set the property to have LD preload on our application that",
    "start": "1418880",
    "end": "1424279"
  },
  {
    "text": "runs our uh shared object built for the the platform and again uh Library hooking is is fairly easy so basically",
    "start": "1424279",
    "end": "1432039"
  },
  {
    "text": "you have a pointer to the real function that is stored in lipy and then you create your own",
    "start": "1432039",
    "end": "1437600"
  },
  {
    "text": "implementation you do what you want and then you either return the results of your implementation or you can return",
    "start": "1437600",
    "end": "1443760"
  },
  {
    "text": "the the result and call actually the real uh implementation in leapy and here we did something very simple um we check",
    "start": "1443760",
    "end": "1451960"
  },
  {
    "text": "if uh if open concerns the the super user binary and if it if it you know if",
    "start": "1451960",
    "end": "1457360"
  },
  {
    "text": "it tries to open it we say no it doesn't exist believe it or not that's very simple but that that can defeat a lot of",
    "start": "1457360",
    "end": "1463640"
  },
  {
    "text": "a lot of checks again we are using this tool for",
    "start": "1463640",
    "end": "1469240"
  },
  {
    "start": "1465000",
    "end": "1539000"
  },
  {
    "text": "a different purpose and just to show you that you know in case you're interested Library hooking is still uh still alive",
    "start": "1469240",
    "end": "1474720"
  },
  {
    "text": "it's an all technique but it's still working on Android and and you can have fun we we came across not in this",
    "start": "1474720",
    "end": "1480200"
  },
  {
    "text": "project uh across binary that are doing uh self- protection verifying if they're not being traced or being um debugged or",
    "start": "1480200",
    "end": "1487159"
  },
  {
    "text": "or modified so the way you do it at least the ones we've encountered in the",
    "start": "1487159",
    "end": "1492640"
  },
  {
    "text": "wild again they're basically try to um to check if the process is being traced",
    "start": "1492640",
    "end": "1497880"
  },
  {
    "text": "and the way is on Linux you can basically each process U expose some",
    "start": "1497880",
    "end": "1503679"
  },
  {
    "text": "information like memory Pages memory allocation stack values and then um you",
    "start": "1503679",
    "end": "1510200"
  },
  {
    "text": "have this Tracer ped value that tells you uh the P ID of the process that is tracing you obviously you want to see",
    "start": "1510200",
    "end": "1516320"
  },
  {
    "text": "Zero so that means nobody's tracing you so what we need to do because it's a you know we need to identify the file",
    "start": "1516320",
    "end": "1522960"
  },
  {
    "text": "descriptor of the status file for your process and then every time we encounter a call or an open call for this um for",
    "start": "1522960",
    "end": "1530960"
  },
  {
    "text": "this file descriptor we basically override the value of the Tracer P to zero to say that you know no that",
    "start": "1530960",
    "end": "1536840"
  },
  {
    "text": "process is fine it's not being traced",
    "start": "1536840",
    "end": "1542799"
  },
  {
    "start": "1539000",
    "end": "1635000"
  },
  {
    "text": "so this is the this is the conclusion I'll leave room for some question but",
    "start": "1542799",
    "end": "1549799"
  },
  {
    "text": "that was pretty um was pretty sad for us and that's that's why the you know hence the title of the presentation but really",
    "start": "1549799",
    "end": "1556880"
  },
  {
    "text": "um it seems like the the whole industry is doing a poor job at verifying whether a device",
    "start": "1556880",
    "end": "1563279"
  },
  {
    "text": "is rooted and and it's a it's a very big concern so some people had no checks on",
    "start": "1563279",
    "end": "1568520"
  },
  {
    "text": "their consumer version but they had a check on their uh Enterprise version uh",
    "start": "1568520",
    "end": "1574399"
  },
  {
    "text": "sanch and kasperski we had the exact same checks but I think um kasperski had a different build system because on the",
    "start": "1574399",
    "end": "1581360"
  },
  {
    "text": "which is oddly enough in the consumer version they used uh reflection they you know they unpacked this Dex file on the",
    "start": "1581360",
    "end": "1588840"
  },
  {
    "text": "on the fly at runtime and it was already unpacked on the on the Enterprise",
    "start": "1588840",
    "end": "1594080"
  },
  {
    "text": "version so probably a different build system or some something or somebody screwed up at some point um some other",
    "start": "1594080",
    "end": "1600000"
  },
  {
    "text": "company they had absolutely no root checks and most of the solutions that we've seen out there they're um they're",
    "start": "1600000",
    "end": "1606360"
  },
  {
    "text": "vulnerable to root clock and the exposed framework um and of course we you know",
    "start": "1606360",
    "end": "1611799"
  },
  {
    "text": "we Benchmark our you know our solution our small tool and because our tool is native and and root clog BAS basically",
    "start": "1611799",
    "end": "1618760"
  },
  {
    "text": "is at the middleware level so it injects jar classes and and hook this functions",
    "start": "1618760",
    "end": "1624000"
  },
  {
    "text": "but as as soon as you do a gni a native interface call basically you can you cannot interpose on that so our tool",
    "start": "1624000",
    "end": "1630360"
  },
  {
    "text": "does it at a lower level hence the hence the results okay now you have to believe me",
    "start": "1630360",
    "end": "1637320"
  },
  {
    "start": "1635000",
    "end": "1760000"
  },
  {
    "text": "that we learned a lot from that uh from that investigation and obviously we you",
    "start": "1637320",
    "end": "1642440"
  },
  {
    "text": "know we stepped up our game and we we made a lot of improvement in our root detection if you don't believe me in few",
    "start": "1642440",
    "end": "1648320"
  },
  {
    "text": "you can download the the new consumer version of you know one of our product and obviously the the checks are going",
    "start": "1648320",
    "end": "1654200"
  },
  {
    "text": "to be much better but on top of that instead of just doing the checks natively that is you know making the the",
    "start": "1654200",
    "end": "1660720"
  },
  {
    "text": "reverser life a little bit harder you still need to do some binary hardening",
    "start": "1660720",
    "end": "1666120"
  },
  {
    "text": "so if you do packing unless you're using a very custo you know a very known Packer like upx and everybody can just",
    "start": "1666120",
    "end": "1672279"
  },
  {
    "text": "click a button and unpack it that's that's making it a little bit harder if you do a string encrypt",
    "start": "1672279",
    "end": "1679519"
  },
  {
    "text": "again you know the number of people that can do it it's it's much harder and if you do software self check suing uh yeah",
    "start": "1679519",
    "end": "1687159"
  },
  {
    "text": "it's it's still I think there's some research that proved that it's defeatable but it's uh it's it's pretty hard and it's um it's CPU",
    "start": "1687159",
    "end": "1694679"
  },
  {
    "text": "specific because it needs to uh it's playing with a tlb cache and you know Shadow Pages anyway so we did a we did a",
    "start": "1694679",
    "end": "1702880"
  },
  {
    "text": "good job we improved our Solutions and hopefully um we hope that the whole",
    "start": "1702880",
    "end": "1709880"
  },
  {
    "text": "industry is going to do a better job at protecting their customers because that's um that's scary and I run rooted",
    "start": "1709880",
    "end": "1715240"
  },
  {
    "text": "device as well so I'm I feel concerned and uh we we actually did the same kind",
    "start": "1715240",
    "end": "1720559"
  },
  {
    "text": "of Investigation using uh machine learning so because our solution that sits on your phone collects data and",
    "start": "1720559",
    "end": "1728480"
  },
  {
    "text": "send it back we actually explore a new way basically just analyzing the data to",
    "start": "1728480",
    "end": "1734000"
  },
  {
    "text": "identify um with a set of features we have about 70 features and we use Ensemble machine learning and we're able",
    "start": "1734000",
    "end": "1740279"
  },
  {
    "text": "to detect that the device is r or not we're publishing that work and maybe truston is another way to go forward",
    "start": "1740279",
    "end": "1747000"
  },
  {
    "text": "because even though you have uh software self checked coming you're still running on an untrusted platform and arm uh",
    "start": "1747000",
    "end": "1753200"
  },
  {
    "text": "provides you a way to basically run things into a secure environment think about TPM for mobile so with that I'm",
    "start": "1753200",
    "end": "1762360"
  },
  {
    "start": "1760000",
    "end": "1872000"
  },
  {
    "text": "done and if you guys have any questions go ahead yes",
    "start": "1762360",
    "end": "1769679"
  },
  {
    "text": "at for custom R using only user mode even it's code",
    "start": "1769679",
    "end": "1776279"
  },
  {
    "text": "using only user mode code for protction is inde a pretty l b because if I make a",
    "start": "1776279",
    "end": "1783440"
  },
  {
    "text": "c I can make a custom exist and you can even your own",
    "start": "1783440",
    "end": "1790960"
  },
  {
    "text": "infrastructure managing not just typical superer you can do pretty much",
    "start": "1790960",
    "end": "1797279"
  },
  {
    "text": "everything oh I I agree with you but if it's again it's the problem of running an untrusted platform right if if I own",
    "start": "1797279",
    "end": "1804919"
  },
  {
    "text": "the kernel that's um you know I agree with",
    "start": "1804919",
    "end": "1809960"
  },
  {
    "text": "you it's a very uh it's a very tough game that's why I think there might be Solutions with truston and we looked into it but the API um and the",
    "start": "1809960",
    "end": "1817480"
  },
  {
    "text": "limitation of truston makes it um harder I think you know truston needs to",
    "start": "1817480",
    "end": "1822600"
  },
  {
    "text": "provide a a wider API and maybe we can do something but I really believe that having a secure component is the way to",
    "start": "1822600",
    "end": "1829559"
  },
  {
    "text": "ensure maximum Integrity because currently I I agree with you it's it's going to be workaround it's going to make it harder but there no solution",
    "start": "1829559",
    "end": "1837880"
  },
  {
    "text": "yeah one more question yeah yeah what would be your recommendations for",
    "start": "1837880",
    "end": "1844720"
  },
  {
    "text": "implementing this correctly we have it we did a lot of it",
    "start": "1844720",
    "end": "1849880"
  },
  {
    "text": "but I don't I don't think we can disclose it right now because it's",
    "start": "1849880",
    "end": "1855320"
  },
  {
    "text": "ipse you can try than thanks any other",
    "start": "1855840",
    "end": "1864440"
  },
  {
    "text": "questions thanks",
    "start": "1865320",
    "end": "1869320"
  },
  {
    "text": "[Applause]",
    "start": "1870920",
    "end": "1874329"
  }
]