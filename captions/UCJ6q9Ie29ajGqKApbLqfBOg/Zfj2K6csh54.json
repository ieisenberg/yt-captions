[
  {
    "text": "hi everyone thank you for coming and Netanya our talk we're going to talk about container security and how we can",
    "start": "30",
    "end": "6750"
  },
  {
    "text": "reduce the attack surface of containers and go beyond the standard namespace isolation so this is a joint work",
    "start": "6750",
    "end": "12690"
  },
  {
    "text": "between Accenture lab and Stony Brook University and these are the people that",
    "start": "12690",
    "end": "18330"
  },
  {
    "text": "contributed to this work there's myself there's Jay who's present here they we're all part of Accenture Accenture is",
    "start": "18330",
    "end": "25199"
  },
  {
    "text": "a consulting company but they also do research so we're part of the tech lab of Accenture in a past life I used to",
    "start": "25199",
    "end": "31830"
  },
  {
    "text": "work on mobile security I worked on car security assessment and also cloud and binary security under DARPA and I our",
    "start": "31830",
    "end": "38370"
  },
  {
    "text": "patented projects and lay used to work on document classification machine learning and Nicolas is a is an",
    "start": "38370",
    "end": "46020"
  },
  {
    "text": "assistant professor at Stony Brook University in the computer science department working on system security and in the past life we used to work",
    "start": "46020",
    "end": "53100"
  },
  {
    "text": "together in this you know research funded programs and I'll let Jay introduce himself hi everyone my name is",
    "start": "53100",
    "end": "59280"
  },
  {
    "text": "Jay currently I'm working in the container service reduction project with",
    "start": "59280",
    "end": "65070"
  },
  {
    "text": "Saladin and previously I've worked on the blockchain security and industrial",
    "start": "65070",
    "end": "71520"
  },
  {
    "text": "control system security so I assume if",
    "start": "71520",
    "end": "77040"
  },
  {
    "text": "you're in the audience you probably want to know about container and you know already about it if you don't I have a",
    "start": "77040",
    "end": "82350"
  },
  {
    "text": "container 101 which we'll go over quickly if you already know I apologize and if you don't know anything about",
    "start": "82350",
    "end": "87479"
  },
  {
    "text": "vm's I don't have a one-on-one for VMs but basically the main difference here between virtual machines and containers",
    "start": "87479",
    "end": "93390"
  },
  {
    "text": "is virtual machines can be thought of as a completely different system where the",
    "start": "93390",
    "end": "98460"
  },
  {
    "text": "instruction gets translated by a hypervisor and they have their own kernel the downside is that they're very",
    "start": "98460",
    "end": "104460"
  },
  {
    "text": "heavyweight they require a lot of resources on the other end of the spectrum you have containers they're",
    "start": "104460",
    "end": "110460"
  },
  {
    "text": "more lightweight and docker is the most famous one but under the hood there's LXE there's a bunch of other",
    "start": "110460",
    "end": "116810"
  },
  {
    "text": "containerization technology that could be used the biggest difference here is that you can have a host that shares the",
    "start": "116810",
    "end": "122159"
  },
  {
    "text": "kernel with multiple containers of course there's some insulation properties that are handled by the",
    "start": "122159",
    "end": "127560"
  },
  {
    "text": "kernel and it's done through namespaces relation memory space resolution and all these things",
    "start": "127560",
    "end": "134120"
  },
  {
    "text": "why containers right what does it actually mean and what are the advantages of using containers so this",
    "start": "134249",
    "end": "140049"
  },
  {
    "text": "is a this is a great picture that I have not done I took it from the Microsoft website that's where you can see the",
    "start": "140049",
    "end": "145810"
  },
  {
    "text": "Visual Studio development lifecycle but I thought it it was very abstract enough that it got the point across on how",
    "start": "145810",
    "end": "152049"
  },
  {
    "text": "people use containers in CIC the environment without giving too much details about it so the way people build",
    "start": "152049",
    "end": "158650"
  },
  {
    "text": "containers and it can vary right they can be different instantiation of this workflow but people build their",
    "start": "158650",
    "end": "164169"
  },
  {
    "text": "application they you know whether it's Java Python however you want to build your application and then they add",
    "start": "164169",
    "end": "169989"
  },
  {
    "text": "docker to it once they have added docker support for their application and will go back on that one after they're on",
    "start": "169989",
    "end": "175930"
  },
  {
    "text": "their application they run their test Suites and that's where the CI CD you know loop happens if the application",
    "start": "175930",
    "end": "182169"
  },
  {
    "text": "behave as expected and passes all the tests in your Jenkins pipeline then it gets pushed into production or it goes",
    "start": "182169",
    "end": "187959"
  },
  {
    "text": "back to the developer and the developer has to make changes to this to the code or the container support but really the",
    "start": "187959",
    "end": "194590"
  },
  {
    "text": "key problem when people are building containers is in the second step so the",
    "start": "194590",
    "end": "199720"
  },
  {
    "text": "way you add containers you know container support your application is by using a base image the base image think",
    "start": "199720",
    "end": "206409"
  },
  {
    "text": "about it as your operating system for your container once you have this operating system you can actually build",
    "start": "206409",
    "end": "213609"
  },
  {
    "text": "and deploy your application in it it's a copy-on-write file system so every changes that are committed on the",
    "start": "213609",
    "end": "219370"
  },
  {
    "text": "file system will make a layer and then that becomes your image and then your",
    "start": "219370",
    "end": "224680"
  },
  {
    "text": "image could get pushed to your enterprise repository and that becomes your image the problem in this loop is",
    "start": "224680",
    "end": "229840"
  },
  {
    "text": "that sometimes people they build a container and it has all the dependencies for specific application",
    "start": "229840",
    "end": "236049"
  },
  {
    "text": "but they overload the container image they build a lot of other dependencies so they can just use these images of",
    "start": "236049",
    "end": "242019"
  },
  {
    "text": "drop-in replacement for other applications and sometimes they rely straight on public images which we'll",
    "start": "242019",
    "end": "250030"
  },
  {
    "text": "see after have a lot of vulnerabilities as well so this is really where the key of the you know the source of the",
    "start": "250030",
    "end": "256389"
  },
  {
    "text": "problem is so now if you think about a couple right let's let's be even more",
    "start": "256389",
    "end": "261699"
  },
  {
    "text": "abstract you're a couple you live in a Great Neck mention I don't but if you do that that's great but let's say you have all these windows",
    "start": "261699",
    "end": "268210"
  },
  {
    "text": "and you have all these doors that that's a lot of entry point for a burglar right somebody can you need an alarm",
    "start": "268210",
    "end": "273220"
  },
  {
    "text": "system you need sensors you need all these things unfortunately that's the state of containers and application",
    "start": "273220",
    "end": "278830"
  },
  {
    "text": "today there is a lot of unnecessary pieces and we want to D block this house",
    "start": "278830",
    "end": "285310"
  },
  {
    "text": "I guess and in that case the containers and we want to put you in a tiny house that will suit your need and if you're",
    "start": "285310",
    "end": "291070"
  },
  {
    "text": "probably I need something bigger than that but let's assume you're happy with this size house and you have only the",
    "start": "291070",
    "end": "296380"
  },
  {
    "text": "things you need hopefully by reducing the size of these containers or this house you'll have less entry point which",
    "start": "296380",
    "end": "303610"
  },
  {
    "text": "means less vulnerabilities and if there's less code it's just a numbers game right less code less bugs less vulnerability ideally that's the",
    "start": "303610",
    "end": "310330"
  },
  {
    "text": "expected outcome so we had a hunch when we started this research right so we",
    "start": "310330",
    "end": "316240"
  },
  {
    "text": "were using containers for other purposes right not necessarily doing container security research and we pulled images",
    "start": "316240",
    "end": "323440"
  },
  {
    "text": "that were six hundred Meg's one gig and there's no way you need like one gig from my sequel or any other type of",
    "start": "323440",
    "end": "329680"
  },
  {
    "text": "application right so we decided to look into how people are actually building containers and if you remember before",
    "start": "329680",
    "end": "335320"
  },
  {
    "text": "this is the step to when people are docker to it so when you build a",
    "start": "335320",
    "end": "340690"
  },
  {
    "text": "container image you start from a docker file on the left-hand side of this picture you can see the first line from",
    "start": "340690",
    "end": "347620"
  },
  {
    "text": "with which is basically you declare your base image what is going to be the foundation on what this container image",
    "start": "347620",
    "end": "353350"
  },
  {
    "text": "is going to rely on and hear you say that basically you want to bun to 16 to be your base foundation okay there's no",
    "start": "353350",
    "end": "362650"
  },
  {
    "text": "way you need all bun 2 to run a specific application right you should be able to tailor it and trim it down to actually",
    "start": "362650",
    "end": "368290"
  },
  {
    "text": "the pieces that are required for this application to run and then you declare a bunch of environment variables",
    "start": "368290",
    "end": "373930"
  },
  {
    "text": "commands that you run into containers you can see the run up get so all of this operation until we reach a command",
    "start": "373930",
    "end": "380740"
  },
  {
    "text": "will basically be written on the committed to the file system and that will be part of the layer and on the the",
    "start": "380740",
    "end": "387130"
  },
  {
    "text": "upper right corner of this picture these are basically all the layers that composes this container image and this",
    "start": "387130",
    "end": "395590"
  },
  {
    "text": "is this is really the problem that's where the problem starts so we had a hunch and we decided to to look",
    "start": "395590",
    "end": "403930"
  },
  {
    "text": "into actually you know like everything when you do research you need to ask yourself is it a valid question is there",
    "start": "403930",
    "end": "409719"
  },
  {
    "text": "work already done in that space and is there something we can do right can we improve on the situation so we have a we",
    "start": "409719",
    "end": "416800"
  },
  {
    "text": "have actually looked and analyzed some darker epazote so that's not the focus of this work but we we literally pulled",
    "start": "416800",
    "end": "422020"
  },
  {
    "text": "all the container image across version since the inception of docker hub and we decided to pull some statistics out of",
    "start": "422020",
    "end": "428409"
  },
  {
    "text": "it so on the right hands on the left hand side you can see all of these packages so these are the top ten vulnerable",
    "start": "428409",
    "end": "434770"
  },
  {
    "text": "packages some of them have literally thousands of vulnerability for what it means is if you have a lazy developer or",
    "start": "434770",
    "end": "444669"
  },
  {
    "text": "not so careful developer that would just pull some images and run them into production",
    "start": "444669",
    "end": "449680"
  },
  {
    "text": "you're gonna inherit the cost of managing fixing or patching or containing these vulnerabilities on the",
    "start": "449680",
    "end": "457270"
  },
  {
    "text": "right hand side these are the most vulnerable package that are used currently it's not as bad a left-hand",
    "start": "457270",
    "end": "463120"
  },
  {
    "text": "side right left hand side or probably older versions but if you look on the right-hand side so these are more recent",
    "start": "463120",
    "end": "468490"
  },
  {
    "text": "versions and you can see that they still have double digits vulnerabilities so we",
    "start": "468490",
    "end": "474669"
  },
  {
    "text": "looked into that you know after that we this is addressed some some other number and I'm gonna just display this picture",
    "start": "474669",
    "end": "480729"
  },
  {
    "text": "for for a little bit and let it sink in for you so these are the top at the time",
    "start": "480729",
    "end": "486639"
  },
  {
    "text": "where we conducted our experiment these are the top 20 docker images in use by the on docker hub so this means that",
    "start": "486639",
    "end": "492339"
  },
  {
    "text": "these are actually probably running somewhere in production and we did really something very simple right we",
    "start": "492339",
    "end": "498729"
  },
  {
    "text": "automated the pool of these containers we deploy them into an environment and then we assess the vulnerabilities using",
    "start": "498729",
    "end": "504699"
  },
  {
    "text": "clear which is an open source scanner and you can see that some of them have literally triple digit vulnerabilities",
    "start": "504699",
    "end": "511569"
  },
  {
    "text": "and you know and we'll see after that the size is pretty big for what it is but this really means that for us that",
    "start": "511569",
    "end": "519610"
  },
  {
    "text": "there was a need and something we knew that we could do something in that space and and really there's a need nobody",
    "start": "519610",
    "end": "525339"
  },
  {
    "text": "should be managing maintaining and paying for you know these vulnerabilities when you can just get",
    "start": "525339",
    "end": "530770"
  },
  {
    "text": "rid of them or at least the hope is we can get rid of Master them and focus on actually the pieces",
    "start": "530770",
    "end": "536440"
  },
  {
    "text": "that we care about and now I'll hand over to Jay and he's gonna tell you a",
    "start": "536440",
    "end": "542320"
  },
  {
    "text": "little bit more in details about how we can address this issue thanks Ali with",
    "start": "542320",
    "end": "550269"
  },
  {
    "text": "all the issue that with all the voting issue that oscidyne has mentioned as a",
    "start": "550269",
    "end": "555550"
  },
  {
    "text": "security researcher we went to diverse solution to mitigate the problem so we",
    "start": "555550",
    "end": "561610"
  },
  {
    "text": "tried so we want to deploy this protein image the concept of container is that",
    "start": "561610",
    "end": "570670"
  },
  {
    "text": "each container should be designed with single purpose and similar to the for",
    "start": "570670",
    "end": "577360"
  },
  {
    "text": "that philosophy in Unix each container should only be designed to execute one",
    "start": "577360",
    "end": "583329"
  },
  {
    "text": "task and only do one test that we do that for example a container with",
    "start": "583329",
    "end": "589899"
  },
  {
    "text": "webserver shouldn't be a database in the container which they shouldn't be a file",
    "start": "589899",
    "end": "595089"
  },
  {
    "text": "file server however most of the or a lot",
    "start": "595089",
    "end": "602110"
  },
  {
    "text": "of the containers we see today are built more like a virtual machine maybe because of the legacy issue how they",
    "start": "602110",
    "end": "608860"
  },
  {
    "text": "convert a virtual machine to a container now a lot of containers actually contain",
    "start": "608860",
    "end": "615310"
  },
  {
    "text": "a lot of unnecessary package or or components and when you add these",
    "start": "615310",
    "end": "622500"
  },
  {
    "text": "unnecessary components and packaged into your container image while they are not",
    "start": "622500",
    "end": "627910"
  },
  {
    "text": "doing doing anything for application they introduce a lot of vulnerabilities and thus the texts of the enlarged",
    "start": "627910",
    "end": "635350"
  },
  {
    "text": "attack surface of the container image with all this problem we we are",
    "start": "635350",
    "end": "642370"
  },
  {
    "text": "proposing a methodology a two-stage methodology to create a more secure and",
    "start": "642370",
    "end": "648970"
  },
  {
    "text": "lightweight container image in the first stage we want to profile the normal",
    "start": "648970",
    "end": "657850"
  },
  {
    "text": "workload of a container once we understand the normal behavior of a",
    "start": "657850",
    "end": "663010"
  },
  {
    "text": "container then we can use the profile to build another smaller container image that contains",
    "start": "663010",
    "end": "669940"
  },
  {
    "text": "only to function that this application really need so I so at the end we will",
    "start": "669940",
    "end": "680290"
  },
  {
    "text": "have a smaller container image with and hopefully with less molar",
    "start": "680290",
    "end": "685410"
  },
  {
    "text": "vulnerabilities to profile a container",
    "start": "685410",
    "end": "692140"
  },
  {
    "text": "is not too different than profiling UNIX or Linux application we can do it from",
    "start": "692140",
    "end": "698830"
  },
  {
    "text": "either users base or kernel space however we prefer to do it in user space",
    "start": "698830",
    "end": "705010"
  },
  {
    "text": "because it is not always possible to make change to the kernel space one way",
    "start": "705010",
    "end": "712990"
  },
  {
    "text": "we can do it in user space is using the system code code fan notify to get a",
    "start": "712990",
    "end": "720940"
  },
  {
    "text": "callback for any file system activity including the file open file close or",
    "start": "720940",
    "end": "726460"
  },
  {
    "text": "file read or file write very simple in user space and another way we can",
    "start": "726460",
    "end": "735720"
  },
  {
    "text": "profile a container is using the library",
    "start": "735720",
    "end": "741100"
  },
  {
    "text": "interposition so light library interposition is a very cool technique that allows us to instrument any",
    "start": "741100",
    "end": "751270"
  },
  {
    "text": "function in any library however before you can instrument any function you need",
    "start": "751270",
    "end": "756700"
  },
  {
    "text": "the the prerequisites that you need to know the simple name of the function and another concern is if you tap in if you",
    "start": "756700",
    "end": "765430"
  },
  {
    "text": "instrument a function a very busy function or if you instrument too many functions at the same time it can cause",
    "start": "765430",
    "end": "772780"
  },
  {
    "text": "a lot of overhead and impact the normal performance the normal behavior of the",
    "start": "772780",
    "end": "778810"
  },
  {
    "text": "original application and in terms of the networking activities they are also made",
    "start": "778810",
    "end": "786070"
  },
  {
    "text": "multiple options that we can tap into we can monitor the the the networking",
    "start": "786070",
    "end": "791320"
  },
  {
    "text": "activity of a specific container on the left on the top left side top left hand",
    "start": "791320",
    "end": "796660"
  },
  {
    "text": "side we can again use library interposition we can",
    "start": "796660",
    "end": "801940"
  },
  {
    "text": "tap into the function that you like chili beef library in the container itself and for networking activity we",
    "start": "801940",
    "end": "809800"
  },
  {
    "text": "can tap into the connect asset or pine network networking related functions to",
    "start": "809800",
    "end": "816399"
  },
  {
    "text": "see the networking activities we can also tap into the networking interface",
    "start": "816399",
    "end": "822880"
  },
  {
    "text": "eth0 or eth1 directly inside the container or inside the container and networking network",
    "start": "822880",
    "end": "829510"
  },
  {
    "text": "name space and we can use act we can actually round like TC to attack TCP",
    "start": "829510",
    "end": "835360"
  },
  {
    "text": "dump directly in the specific narrow space and another option is to actually",
    "start": "835360",
    "end": "841029"
  },
  {
    "text": "tap from the host itself in terms of",
    "start": "841029",
    "end": "846130"
  },
  {
    "text": "attacker they usually create a bridge between the container network namespace and the host network namespace and we",
    "start": "846130",
    "end": "853660"
  },
  {
    "text": "can tap into that bridge on the host directory and see all the traffic between the container and and the hosts",
    "start": "853660",
    "end": "862630"
  },
  {
    "text": "to recap our methodology we want to find",
    "start": "862630",
    "end": "871149"
  },
  {
    "text": "a way to profile a container in user space we can use either library",
    "start": "871149",
    "end": "876820"
  },
  {
    "text": "interposition or leverage the existing system called API to get event",
    "start": "876820",
    "end": "882940"
  },
  {
    "text": "notification and there is a limitation",
    "start": "882940",
    "end": "890560"
  },
  {
    "text": "so in our first face that we have completed today is that we can profile",
    "start": "890560",
    "end": "896500"
  },
  {
    "text": "an application using these techniques and based on the profile we can build",
    "start": "896500",
    "end": "901839"
  },
  {
    "text": "another people that reduce the image that can support only the functions",
    "start": "901839",
    "end": "907779"
  },
  {
    "text": "observed during the profiling process however there is a limitation or a container is as good as the profiling if",
    "start": "907779",
    "end": "915519"
  },
  {
    "text": "there is anything that we did not observe during the profiling process the",
    "start": "915519",
    "end": "921790"
  },
  {
    "text": "deposit that reduced container will not be able to support those function that's why we we are aiming for them in the",
    "start": "921790",
    "end": "928779"
  },
  {
    "text": "second phase we want to do a genius monitoring in production and",
    "start": "928779",
    "end": "936280"
  },
  {
    "text": "provide a continuous refinement for the deposit image as well now I'm going to",
    "start": "936280",
    "end": "946640"
  },
  {
    "text": "do a quick demo to show how our",
    "start": "946640",
    "end": "951400"
  },
  {
    "text": "container D protein technique can help reduce attack surface of container and",
    "start": "952420",
    "end": "959960"
  },
  {
    "text": "this is a live demo I hope you can work",
    "start": "959960",
    "end": "964690"
  },
  {
    "text": "this looks better so the specific",
    "start": "976610",
    "end": "984720"
  },
  {
    "text": "epicness a specific container application I'm using today is worpress",
    "start": "984720",
    "end": "990470"
  },
  {
    "text": "so i'm start i'm starting the war press up a patient normally in trying to load",
    "start": "999830",
    "end": "1006050"
  },
  {
    "text": "this load the web web page then there",
    "start": "1006050",
    "end": "1011120"
  },
  {
    "text": "were is there will be slow here and okay this is a homepage and i'm going to look",
    "start": "1011120",
    "end": "1018560"
  },
  {
    "text": "at adam insight and one thing i want to point out here is the plugin in the",
    "start": "1018560",
    "end": "1026930"
  },
  {
    "text": "wordpress container now there are currently three proteins and none of this protein are actually activated",
    "start": "1026930",
    "end": "1033220"
  },
  {
    "text": "however we know there are no funner abilities in this protein and i'm going",
    "start": "1033220",
    "end": "1039620"
  },
  {
    "text": "to show you that even without this plug-in activated we can still exploit",
    "start": "1039620",
    "end": "1044990"
  },
  {
    "text": "this vulnerability so in this terminal",
    "start": "1044990",
    "end": "1050090"
  },
  {
    "text": "I'm going to run a simple command to",
    "start": "1050090",
    "end": "1057670"
  },
  {
    "text": "leverage a vulnerability and upload a script file that allow us to explore the",
    "start": "1057670",
    "end": "1064520"
  },
  {
    "text": "container file system so now I have successfully upload a file",
    "start": "1064520",
    "end": "1072159"
  },
  {
    "text": "next I will try to access this file from",
    "start": "1073450",
    "end": "1081050"
  },
  {
    "text": "here so this is a script that I just",
    "start": "1081050",
    "end": "1086420"
  },
  {
    "text": "uploaded and with this script running basically the attacker can do anything",
    "start": "1086420",
    "end": "1091940"
  },
  {
    "text": "in the container download edit or delete any file and any command can also be",
    "start": "1091940",
    "end": "1099650"
  },
  {
    "text": "wrong here so we see the",
    "start": "1099650",
    "end": "1106640"
  },
  {
    "text": "the issue here and next I'm going to show you how our deporting methodology",
    "start": "1106640",
    "end": "1114530"
  },
  {
    "text": "can help mitigate the issue so I'm going",
    "start": "1114530",
    "end": "1123530"
  },
  {
    "text": "to run I'm going to start a container again but with our profiler running in",
    "start": "1123530",
    "end": "1128690"
  },
  {
    "text": "the background so I start the container again refresh let me go back to the home",
    "start": "1128690",
    "end": "1137450"
  },
  {
    "text": "page and why I'm doing now is to simulate a system that mean and suppose",
    "start": "1137450",
    "end": "1144440"
  },
  {
    "text": "there are only few few features few functions that is sittin at the mean",
    "start": "1144440",
    "end": "1150860"
  },
  {
    "text": "actually need in the admin site so",
    "start": "1150860",
    "end": "1158870"
  },
  {
    "text": "trying to log in it's a very simple",
    "start": "1158870",
    "end": "1164720"
  },
  {
    "text": "password and let's assume that all that mean care is to see if there is any",
    "start": "1164720",
    "end": "1171350"
  },
  {
    "text": "update in this website and if there is any post from the guest and let's assume",
    "start": "1171350",
    "end": "1179270"
  },
  {
    "text": "that all the admin care about this website and now let's look at what",
    "start": "1179270",
    "end": "1188240"
  },
  {
    "text": "output not terminate the profiler and look at exactly what profiler has",
    "start": "1188240",
    "end": "1194360"
  },
  {
    "text": "created so this is one of the output",
    "start": "1194360",
    "end": "1199520"
  },
  {
    "text": "file of the profiler in this file it shows all the files that the container",
    "start": "1199520",
    "end": "1204890"
  },
  {
    "text": "has touched so it started from the Packer entry point where the container",
    "start": "1204890",
    "end": "1210710"
  },
  {
    "text": "start to the point where the WordPress application actually wrong without the",
    "start": "1210710",
    "end": "1216679"
  },
  {
    "text": "PHP for PHP file being assessed and",
    "start": "1216679",
    "end": "1221110"
  },
  {
    "text": "with this profile we can now build another reduce or deported image that",
    "start": "1223130",
    "end": "1233070"
  },
  {
    "text": "hopefully contains less vulnerabilities and with less component in it so I'm",
    "start": "1233070",
    "end": "1241320"
  },
  {
    "text": "building the image now here we go the the image build less than a second ago I",
    "start": "1241320",
    "end": "1248570"
  },
  {
    "text": "actually want to show the size okay here we go the size is eighty nine point one",
    "start": "1248570",
    "end": "1255990"
  },
  {
    "text": "megabyte it's called WordPress our edu reduced version comparing to the",
    "start": "1255990",
    "end": "1261030"
  },
  {
    "text": "original WordPress container which is four hundred and seven megabyte we have approximately 80% of a size reduction",
    "start": "1261030",
    "end": "1269610"
  },
  {
    "text": "and now let me try to run this reduced version to see if the intended function",
    "start": "1269610",
    "end": "1277980"
  },
  {
    "text": "still work go back to the home page",
    "start": "1277980",
    "end": "1284870"
  },
  {
    "text": "it'll be slow but loaded successfully login so the admin page is still there",
    "start": "1286880",
    "end": "1299130"
  },
  {
    "text": "and let me see if I can still check the update yes and let me check if I can",
    "start": "1299130",
    "end": "1306180"
  },
  {
    "text": "still read the post yes but now let me try to do some abnormal behavior if I",
    "start": "1306180",
    "end": "1312060"
  },
  {
    "text": "want to activate one of the protein it is not working because we have remove",
    "start": "1312060",
    "end": "1319050"
  },
  {
    "text": "the function needed by this by this link",
    "start": "1319050",
    "end": "1324630"
  },
  {
    "text": "or if we check the users no longer available and I'm going to show let's",
    "start": "1324630",
    "end": "1331800"
  },
  {
    "text": "write the same exploit again the result",
    "start": "1331800",
    "end": "1336900"
  },
  {
    "text": "is 4/4 not found this is because during our D protein process the vulnerable PHP",
    "start": "1336900",
    "end": "1342540"
  },
  {
    "text": "file has been removed finally I'm going",
    "start": "1342540",
    "end": "1348570"
  },
  {
    "text": "to show a cup of a comparison the vulnerability before and after our",
    "start": "1348570",
    "end": "1356340"
  },
  {
    "text": "deporting process so there are 180 a non",
    "start": "1356340",
    "end": "1363120"
  },
  {
    "text": "vulnerabilities in the WordPress container and after the deporting",
    "start": "1363120",
    "end": "1369090"
  },
  {
    "text": "process we have zero number of vulnerability don't be too excited this",
    "start": "1369090",
    "end": "1376170"
  },
  {
    "text": "is too good to be true and there's no way we can remove hundred percent of the",
    "start": "1376170",
    "end": "1382440"
  },
  {
    "text": "vulnerability the reason is that during our deporting process we also remove",
    "start": "1382440",
    "end": "1387570"
  },
  {
    "text": "some of the components required by the vulnerability scanner to identify the",
    "start": "1387570",
    "end": "1393150"
  },
  {
    "text": "installed package and the vulnerabilities so that's what happened not I mean we are not saying that we can",
    "start": "1393150",
    "end": "1399510"
  },
  {
    "text": "remove 100% of the owner abilities and with that having impact as a teen to",
    "start": "1399510",
    "end": "1406470"
  },
  {
    "text": "talk more about the detail okay so a cat must have died somewhere because our demo worked so somebody made a sacrifice",
    "start": "1406470",
    "end": "1413190"
  },
  {
    "text": "that's good thank you now if you if you guys remember what we said before about our top 20 docker",
    "start": "1413190",
    "end": "1419580"
  },
  {
    "text": "images we actually we actually applied the same method the graph is not as ugly",
    "start": "1419580",
    "end": "1426600"
  },
  {
    "text": "as it is here as it is on my screen but you'll have to trust me on that so basically here we we took the top 20",
    "start": "1426600",
    "end": "1432780"
  },
  {
    "text": "docker images that we've had before and we've run them through our the blotting process and and here are the results so",
    "start": "1432780",
    "end": "1439920"
  },
  {
    "text": "I'm just going to give you a couple of highlights so the light blue bar I notated at the top it's the original",
    "start": "1439920",
    "end": "1445980"
  },
  {
    "text": "size of the container if you look at the green bars this is the reduced size this",
    "start": "1445980",
    "end": "1451470"
  },
  {
    "text": "is after we've processed them and you can see there's a significant size difference and then the dark blue bars",
    "start": "1451470",
    "end": "1458220"
  },
  {
    "text": "are the original vulnerabilities and then the the red bar which you cannot see because there's zero or the reduced",
    "start": "1458220",
    "end": "1465450"
  },
  {
    "text": "vulnerabilities right so I'm I'm not selling you snake holes right it is it",
    "start": "1465450",
    "end": "1471060"
  },
  {
    "text": "is not possible to achieve zero vulnerabilities and now we're going to expand on to why this is happening but",
    "start": "1471060",
    "end": "1476910"
  },
  {
    "text": "across the board we've observed an average size reduction anywhere between 60 and 90 percent depending on the",
    "start": "1476910",
    "end": "1483600"
  },
  {
    "text": "application and we've observed by our own tests right about same thing",
    "start": "1483600",
    "end": "1489030"
  },
  {
    "text": "60 to 80% of vulnerability reduction not 100% but it's still a decent amount now",
    "start": "1489030",
    "end": "1495900"
  },
  {
    "text": "let me let me explain you why we have zero vulnerabilities and why if you run that at home you probably are going to",
    "start": "1495900",
    "end": "1501960"
  },
  {
    "text": "end up having zero vulnerabilities as well so you guys are not familiar with",
    "start": "1501960",
    "end": "1507990"
  },
  {
    "text": "overall definition so it's just a way some UNIX or Linux distributions are",
    "start": "1507990",
    "end": "1513090"
  },
  {
    "text": "sharing information about the CVE the severity the package name and which version of package or packages are",
    "start": "1513090",
    "end": "1519330"
  },
  {
    "text": "affected by a certain CD and this is what you know and this is how vulnerable",
    "start": "1519330",
    "end": "1525360"
  },
  {
    "text": "T scanners are working most of them they rely on some information about the Linux",
    "start": "1525360",
    "end": "1531150"
  },
  {
    "text": "distribution or the package manager that handles it so if you use Ubuntu or Debian it's apt if you send to s its yum",
    "start": "1531150",
    "end": "1536970"
  },
  {
    "text": "and then it tries to cross check and and you see by cross check it's very it's",
    "start": "1536970",
    "end": "1543090"
  },
  {
    "text": "very shallow what they're doing they try to identify what you have installed on your system with what is actually",
    "start": "1543090",
    "end": "1548850"
  },
  {
    "text": "presenting this over all definitions and sometimes it is as shaky as a regular",
    "start": "1548850",
    "end": "1555120"
  },
  {
    "text": "expression right so they they tokenize the the entry into the the package manager list of files that are installed",
    "start": "1555120",
    "end": "1561660"
  },
  {
    "text": "they extract the package version the name and then based on that they match it with a novel definition okay doesn't",
    "start": "1561660",
    "end": "1568920"
  },
  {
    "text": "take a genius to understand that these kind of tests are not very accurate",
    "start": "1568920",
    "end": "1574670"
  },
  {
    "text": "because if you've installed something outside of your package manager it's not going to be listed there if you change",
    "start": "1574670",
    "end": "1581130"
  },
  {
    "text": "the file or if you don't have the same file that is described in the overall definition again it's gonna fail so",
    "start": "1581130",
    "end": "1589530"
  },
  {
    "text": "again this is a I think this is a research so we can its own but we did our best effort and we actually tried a",
    "start": "1589530",
    "end": "1596040"
  },
  {
    "text": "lot of leading security container of vulnerability solutions not gonna mention any names but I'm sure you've",
    "start": "1596040",
    "end": "1603120"
  },
  {
    "text": "used them if you use containers but really what these tools are creating today is a false sense of security right",
    "start": "1603120",
    "end": "1609360"
  },
  {
    "text": "you try you test you assume that your image is clean or clean enough to be run in production but the reality is you",
    "start": "1609360",
    "end": "1617730"
  },
  {
    "text": "cannot really trust these tools and these are just some of the examples right if you you know for some reason",
    "start": "1617730",
    "end": "1623320"
  },
  {
    "text": "they don't work with fedora or Sue's package manager they just can't detect",
    "start": "1623320",
    "end": "1628840"
  },
  {
    "text": "some vulnerabilities and I say when I say must it's really must not all of them but close enough and if you have",
    "start": "1628840",
    "end": "1636100"
  },
  {
    "text": "malware into your image right you'd think they would pull some hash from virustotal or something to assess them",
    "start": "1636100",
    "end": "1641649"
  },
  {
    "text": "no they don't they really just rely on package manager and oval definitions and",
    "start": "1641649",
    "end": "1646809"
  },
  {
    "text": "now let me tell you how you can be a talented hacker in the world of containers just change the file name all",
    "start": "1646809",
    "end": "1653889"
  },
  {
    "text": "of them do not detect it seriously I'm not kidding it is that sad but basically",
    "start": "1653889",
    "end": "1660460"
  },
  {
    "text": "this is the problem right the the way these container testing tools are working is very simple and naive and",
    "start": "1660460",
    "end": "1666490"
  },
  {
    "text": "there's a lot of ways to bypass them I'm sure the bad guys figure that out too so",
    "start": "1666490",
    "end": "1673409"
  },
  {
    "text": "we presented you a solution right where we actually look at the application running within a container identify the",
    "start": "1673409",
    "end": "1681159"
  },
  {
    "text": "components that are required for this application to perform and strip down the rest right and if you're in a you",
    "start": "1681159",
    "end": "1688720"
  },
  {
    "text": "know higher functions I guess and you're close to the corporate overlord you can see how it is a problem right so our",
    "start": "1688720",
    "end": "1695289"
  },
  {
    "text": "corporate Overlord we're like there's no way we cannot change the containers you cannot change the structure and everything that is hash based is going",
    "start": "1695289",
    "end": "1701590"
  },
  {
    "text": "to be an issue so you need to find something that actually works for us so",
    "start": "1701590",
    "end": "1707080"
  },
  {
    "text": "what we did is okay instead of removing everything if you know that all the things that are required you can just",
    "start": "1707080",
    "end": "1713230"
  },
  {
    "text": "generate a whitelisting policy and that's a way it's a cheap way to contain the vulnerabilities because they cannot",
    "start": "1713230",
    "end": "1720279"
  },
  {
    "text": "be exploited because you have a policy that denies access to these functions and I'm sure you're aware of mandatory",
    "start": "1720279",
    "end": "1727509"
  },
  {
    "text": "access controls right so the only problem right is when you do if you guys",
    "start": "1727509",
    "end": "1732850"
  },
  {
    "text": "have tried to write SELinux policy or up-armored you can you can see that there's a lot of issues with the special",
    "start": "1732850",
    "end": "1738700"
  },
  {
    "text": "files right proc if you want to read some kernel exposed information in user space that is an issue how to write",
    "start": "1738700",
    "end": "1745330"
  },
  {
    "text": "policies you need to be it's a little bit tricky there's a runtime overhead the more rules you have and if you write",
    "start": "1745330",
    "end": "1750730"
  },
  {
    "text": "them naively I mean if you have a rule that applies to each files instead of having a rule",
    "start": "1750730",
    "end": "1755950"
  },
  {
    "text": "that applied to the directory and the sub components that also generates a lot of overhead so there's a there's some",
    "start": "1755950",
    "end": "1761920"
  },
  {
    "text": "tweaks and optimization that you can do but the bright side is you really have fine-grained control on the operations",
    "start": "1761920",
    "end": "1767350"
  },
  {
    "text": "that run within your container you can you know whitelist file and and we'll show an example you can grant",
    "start": "1767350",
    "end": "1773020"
  },
  {
    "text": "capabilities and also your corporate overlords are happy because the containers hasn't been touched the",
    "start": "1773020",
    "end": "1779020"
  },
  {
    "text": "hashes are the same and you've maintained the integrity of whatever container image you were working on and",
    "start": "1779020",
    "end": "1784290"
  },
  {
    "text": "this is just a recap of the the type of permissions that you could enforce with",
    "start": "1784290",
    "end": "1790390"
  },
  {
    "text": "Mac and and the interesting one is the capabilities right you can limit also the capabilities that you offer to an",
    "start": "1790390",
    "end": "1795850"
  },
  {
    "text": "application and today we feel really lucky because we're gonna try again another live demo and hopefully it",
    "start": "1795850",
    "end": "1802720"
  },
  {
    "text": "doesn't fail",
    "start": "1802720",
    "end": "1805679"
  },
  {
    "text": "so I'm going to drown around the very similar demo again but with the only",
    "start": "1813430",
    "end": "1820000"
  },
  {
    "text": "difference is that this time we were used mandatory access control policy to",
    "start": "1820000",
    "end": "1826080"
  },
  {
    "text": "secure a container instead of actually remove the component inside the container we will be around the same",
    "start": "1826080",
    "end": "1832360"
  },
  {
    "text": "container but instead using the same power file we will generate a set of policy to limit the file access",
    "start": "1832360",
    "end": "1840520"
  },
  {
    "text": "permission inside the container",
    "start": "1840520",
    "end": "1843930"
  },
  {
    "text": "so I'm against starting the container with the profiler running in the",
    "start": "1861340",
    "end": "1866720"
  },
  {
    "text": "background and I'm going to simulate the normal the normal user activities again",
    "start": "1866720",
    "end": "1876309"
  },
  {
    "text": "we first look and log in again and I'm",
    "start": "1878080",
    "end": "1895730"
  },
  {
    "text": "going to perform the same to two functions that the system that means suppose only need check the update check",
    "start": "1895730",
    "end": "1905179"
  },
  {
    "text": "if there's any security update and check the latest post from the guest and local",
    "start": "1905179",
    "end": "1912049"
  },
  {
    "text": "that's it suppose these are the only two function that the system that emitted mean neat I'm going to terminate the",
    "start": "1912049",
    "end": "1920029"
  },
  {
    "text": "application and the profiler and show you exactly how the profile look this",
    "start": "1920029",
    "end": "1926840"
  },
  {
    "text": "time so again this is one of the profile that generated based on the file system",
    "start": "1926840",
    "end": "1934429"
  },
  {
    "text": "activity this time we collect a little bit more information we also collect the file permission and also the the type of",
    "start": "1934429",
    "end": "1942200"
  },
  {
    "text": "access previously we can when we do protein and a container a file is either",
    "start": "1942200",
    "end": "1948799"
  },
  {
    "text": "available or not but this time when of all the files are available but we can actually provide more granular control",
    "start": "1948799",
    "end": "1955460"
  },
  {
    "text": "to each specific file we can specify specify if this file has read access",
    "start": "1955460",
    "end": "1961159"
  },
  {
    "text": "right as as executable access memory location or linkable access so which",
    "start": "1961159",
    "end": "1966769"
  },
  {
    "text": "policy we can create more granular control to each file and with this",
    "start": "1966769",
    "end": "1973249"
  },
  {
    "text": "profile we can generate a set of policy that I will show you next so this is",
    "start": "1973249",
    "end": "1981649"
  },
  {
    "text": "basically the policy that why list the files in the WordPress container and",
    "start": "1981649",
    "end": "1987109"
  },
  {
    "text": "this policy basically will only allow the",
    "start": "1987109",
    "end": "1992260"
  },
  {
    "text": "the function that we observed during the profiling process now let's run the same",
    "start": "1992260",
    "end": "2005520"
  },
  {
    "text": "container application again with this policy deployed in the kernel know the",
    "start": "2005520",
    "end": "2020020"
  },
  {
    "text": "home page and login and let's see if the",
    "start": "2020020",
    "end": "2029550"
  },
  {
    "text": "intended functions to your work check the update check the post and let's see",
    "start": "2029550",
    "end": "2038950"
  },
  {
    "text": "if we can do any user check any user know the page is not available and this",
    "start": "2038950",
    "end": "2045010"
  },
  {
    "text": "time we get a slightly different error message instead of saying for for not available this time we get a permission",
    "start": "2045010",
    "end": "2052060"
  },
  {
    "text": "denied because the file is still there but we simply enforce the policy to deny",
    "start": "2052060",
    "end": "2058090"
  },
  {
    "text": "the access to this specific file and similarly if I try to pour the same",
    "start": "2058090",
    "end": "2063639"
  },
  {
    "text": "attack the same exploit again I'm successful and we get a different error",
    "start": "2063640",
    "end": "2069669"
  },
  {
    "text": "message failed to open stream permission denied again the files are there but our",
    "start": "2069669",
    "end": "2074889"
  },
  {
    "text": "policies this file simply is not in our pie list",
    "start": "2074890",
    "end": "2081210"
  },
  {
    "text": "okay let me get back to you as a team okay so we've just shown you a demo",
    "start": "2084590",
    "end": "2091320"
  },
  {
    "text": "right two demos the first one is think about it you're running an application and you have dependencies in that case",
    "start": "2091320",
    "end": "2097050"
  },
  {
    "text": "that was plugins but that could be you know libraries sitting on your system shared objects that are completely",
    "start": "2097050",
    "end": "2102210"
  },
  {
    "text": "unnecessary for your business purpose or your application purpose yet you're",
    "start": "2102210",
    "end": "2107220"
  },
  {
    "text": "still exposed to a lot of vulnerabilities and potential compromise for something you actually didn't need",
    "start": "2107220",
    "end": "2112640"
  },
  {
    "text": "and we showed that removing all the things that are not you know whether its components whether it's files we removed",
    "start": "2112640",
    "end": "2119580"
  },
  {
    "text": "all the things that were not used for by the application you actually reduce the",
    "start": "2119580",
    "end": "2124710"
  },
  {
    "text": "attack surface we reduce the number of vulnerabilities and as a you know right side down side you reduce the size of",
    "start": "2124710",
    "end": "2130980"
  },
  {
    "text": "your containers but this is really coarse grain operations right we're removing binaries by binaries I mean elf",
    "start": "2130980",
    "end": "2138120"
  },
  {
    "text": "files or Exe if you're using Windows but what happens when we actually you know",
    "start": "2138120",
    "end": "2145080"
  },
  {
    "text": "when you actually need to run this application but the vulnerabilities are still within the application itself and",
    "start": "2145080",
    "end": "2150510"
  },
  {
    "text": "let's assume you you know you also don't get to the source code now so this is",
    "start": "2150510",
    "end": "2156600"
  },
  {
    "text": "the application layer and you know I put this little surgeon picture because this",
    "start": "2156600",
    "end": "2161640"
  },
  {
    "text": "is really like surgery and it's more fine-grained than working with the containers themselves and you know if",
    "start": "2161640",
    "end": "2168840"
  },
  {
    "text": "you think about container I mean if you think about containers and application today there's a lot of bloats and I like",
    "start": "2168840",
    "end": "2175020"
  },
  {
    "text": "to think as them as being a very fat you know containers applications there's",
    "start": "2175020",
    "end": "2180900"
  },
  {
    "text": "really a lot of things you don't need right this application today like I don't know I think Facebook is 400 mega",
    "start": "2180900",
    "end": "2186090"
  },
  {
    "text": "on iOS or something that's ridiculous right you don't need that much for web-based application that's another",
    "start": "2186090",
    "end": "2192180"
  },
  {
    "text": "story anyway there's a there's always gonna be bugs right in application and",
    "start": "2192180",
    "end": "2198180"
  },
  {
    "text": "and if you look today the leading you know the leading cause of system compromises bugs bugs gets exploited",
    "start": "2198180",
    "end": "2204150"
  },
  {
    "text": "through buffer overflows and Rob gadgets and all of these good things and of",
    "start": "2204150",
    "end": "2209610"
  },
  {
    "text": "course there's a lot of initiative in that space you know patch Tuesdays and you know updating your system and",
    "start": "2209610",
    "end": "2215450"
  },
  {
    "text": "and package manager to make sure that you have the latest and greatest versions but really it's not enough",
    "start": "2215450",
    "end": "2222020"
  },
  {
    "text": "because you know the attackers might find before you patch the application and of course if you look through",
    "start": "2222020",
    "end": "2228349"
  },
  {
    "text": "history right through smashing the stacks return to leave see and Rob gadgets you know the technology evolved",
    "start": "2228349",
    "end": "2233960"
  },
  {
    "text": "and there's a lot of mitigation strategies that are applied and that are working very well and put you know the",
    "start": "2233960",
    "end": "2239930"
  },
  {
    "text": "script kiddies at base but there's still talented people that can exploit the application and in terms of attacks",
    "start": "2239930",
    "end": "2247069"
  },
  {
    "text": "right there's a there's application that simply overwrite a return address and you can return to leap C and execute you",
    "start": "2247069",
    "end": "2253099"
  },
  {
    "text": "know we prep the stack and you return to certain functions that you care about there slightly and of course in that",
    "start": "2253099",
    "end": "2258950"
  },
  {
    "text": "case you can you can target functions that are not used by the application or even better if you guys are not familiar",
    "start": "2258950",
    "end": "2265190"
  },
  {
    "text": "with return oriented programming it's basically a way to leverage the code that resides within the application",
    "start": "2265190",
    "end": "2271609"
  },
  {
    "text": "binary so you disassemble your application you have a bunch of basic blocks basic blocks are basically",
    "start": "2271609",
    "end": "2277970"
  },
  {
    "text": "something that finished with a return instruction that allows you to set the stack and call up you know call",
    "start": "2277970",
    "end": "2283490"
  },
  {
    "text": "arbitrary functions and set the stack in a proper way so that you can pass the arguments you care about and of course",
    "start": "2283490",
    "end": "2289490"
  },
  {
    "text": "same thing as before there's a there's techniques right address space randomization there's a control flow",
    "start": "2289490",
    "end": "2295430"
  },
  {
    "text": "integrity the shadow stacks there there's a lot of techniques right in the defensive sides there's also a lot of",
    "start": "2295430",
    "end": "2301670"
  },
  {
    "text": "talented people that can bypass these techniques so what we think about what",
    "start": "2301670",
    "end": "2306829"
  },
  {
    "text": "we did before why don't we apply the same concepts to an application you know it's sounds intuitive right you",
    "start": "2306829",
    "end": "2313849"
  },
  {
    "text": "take the application you look at the functions that are used and you simply strip them out I said simply because binary is a little",
    "start": "2313849",
    "end": "2320390"
  },
  {
    "text": "bit tricky right there's a lot of offsets and things that you need to care about if you do it statically but if you do it at run time think about it you",
    "start": "2320390",
    "end": "2326390"
  },
  {
    "text": "load a lot of library in the address space of the process you can null some you know memory pages that contains the",
    "start": "2326390",
    "end": "2331790"
  },
  {
    "text": "function you don't care about and you know if the exploits are actually",
    "start": "2331790",
    "end": "2337460"
  },
  {
    "text": "leveraging functions that the application doesn't use then the application you know the exploit will",
    "start": "2337460",
    "end": "2342530"
  },
  {
    "text": "break but this is this is all you know all type of attacks",
    "start": "2342530",
    "end": "2347820"
  },
  {
    "text": "these days it's more you know all the hype is wrong return-oriented programming and gadgets right so this",
    "start": "2347820",
    "end": "2354630"
  },
  {
    "text": "type of attacks will still succeed even if you remove the functions that that are not used by the application and",
    "start": "2354630",
    "end": "2360050"
  },
  {
    "text": "there was some work that was done previously to remove these functions so that's the if you think about their",
    "start": "2360050",
    "end": "2366390"
  },
  {
    "text": "level of granularity that's you know lower than what we presented before but that was cut stripping and cut stripping",
    "start": "2366390",
    "end": "2372870"
  },
  {
    "text": "says the same thing it basically removed this function these symbols from the other space of the process here what",
    "start": "2372870",
    "end": "2378600"
  },
  {
    "text": "we're doing is we're looking at gadgets and the way they're built they only leverage a couple of critical functions",
    "start": "2378600",
    "end": "2384090"
  },
  {
    "text": "so these functions are still required by the application to perform so cut stripping is not going to work so what",
    "start": "2384090",
    "end": "2390750"
  },
  {
    "text": "we're doing is we enforce something at the API level API I mean you know windows 32 API and so this is the case",
    "start": "2390750",
    "end": "2399690"
  },
  {
    "text": "that this is something that we call API specialization and the threat model is we assume that they have full function",
    "start": "2399690",
    "end": "2405780"
  },
  {
    "text": "reuse they can do everything and our main goal here it's to really restrict how the API will interact with the",
    "start": "2405780",
    "end": "2412140"
  },
  {
    "text": "operating system and you know if you think about virtual lock or and protect",
    "start": "2412140",
    "end": "2417330"
  },
  {
    "text": "or malloc if you're using Linux we really want to enforce how these api's are used and make sure that an attacker",
    "start": "2417330",
    "end": "2423960"
  },
  {
    "text": "because the attacker side is using the same functions but with different argument right you may you may allocate",
    "start": "2423960",
    "end": "2429570"
  },
  {
    "text": "a memory page and mark it as readable but the attacker will use the same memory page but market has writable and",
    "start": "2429570",
    "end": "2434820"
  },
  {
    "text": "executable so these are the same functions so cut stripping doesn't work you will need to enforce how these functions are called and the type of",
    "start": "2434820",
    "end": "2441000"
  },
  {
    "text": "arguments that are passed to these functions and this is you know very high",
    "start": "2441000",
    "end": "2446790"
  },
  {
    "text": "level functions if you have a Windows binary so this work was based on Windows oh and by the way I'm channeling my",
    "start": "2446790",
    "end": "2452040"
  },
  {
    "text": "inner mikelis because that was a most of his contribution in that space so you",
    "start": "2452040",
    "end": "2457260"
  },
  {
    "text": "have an application Windows application most of them will map kernel32.dll into the address space of the process and if",
    "start": "2457260",
    "end": "2464460"
  },
  {
    "text": "you look at the button on the right side of this picture we're using only four",
    "start": "2464460",
    "end": "2470160"
  },
  {
    "text": "functions right but because you're mapping kernel32 in the address space of the process you get access of you know",
    "start": "2470160",
    "end": "2477330"
  },
  {
    "text": "you and an attacker get potentially access to thousands of functions but you really need all of that so this is",
    "start": "2477330",
    "end": "2483119"
  },
  {
    "text": "really the case for API specialization that we're making here and this is a",
    "start": "2483119",
    "end": "2489690"
  },
  {
    "text": "simple study right we look at these windows for it to api's or DLS however",
    "start": "2489690",
    "end": "2495450"
  },
  {
    "text": "you want to call it and we looked at the number of functions they have kernel32 of course being the biggest offender",
    "start": "2495450",
    "end": "2501690"
  },
  {
    "text": "Etta's provides a lot of features and support for the you know windows application has 1900 functions and then",
    "start": "2501690",
    "end": "2508500"
  },
  {
    "text": "we looked at the application and how many functions were they actually using",
    "start": "2508500",
    "end": "2514079"
  },
  {
    "text": "within these libraries and you can see that VLC only needed 38 functions out of",
    "start": "2514079",
    "end": "2519200"
  },
  {
    "text": "1900 and if you look at a TV API for VLC",
    "start": "2519200",
    "end": "2524240"
  },
  {
    "text": "they needed only two functions yet there's 900 functions loaded into the",
    "start": "2524240",
    "end": "2529440"
  },
  {
    "text": "address space of the process again it makes no sense right if intuitively you don't need to",
    "start": "2529440",
    "end": "2535079"
  },
  {
    "text": "overload yourself with all these functions when you can strip them down so what we did is we want to create a",
    "start": "2535079",
    "end": "2543750"
  },
  {
    "text": "you know specialized version of this API and then for some policy on it and what",
    "start": "2543750",
    "end": "2549569"
  },
  {
    "text": "we did is we looked into all these api's and how they're used across you know rap chains and exploits and we've identified",
    "start": "2549569",
    "end": "2556940"
  },
  {
    "text": "52 what we call you know security critical API functions right such as virtual so that's the equivalent of an",
    "start": "2556940",
    "end": "2563819"
  },
  {
    "text": "protect malloc and connectors connect everywhere and the goal here is we",
    "start": "2563819",
    "end": "2569030"
  },
  {
    "text": "analyze how the application is going to do in third you know the arguments for",
    "start": "2569030",
    "end": "2574470"
  },
  {
    "text": "these functions and ideally and most of the time actually the malicious",
    "start": "2574470",
    "end": "2581210"
  },
  {
    "text": "application right the exploits are using the same functions but in a different way with different types of argument and",
    "start": "2581210",
    "end": "2586500"
  },
  {
    "text": "of course you know that's that's the main intuition behind this work and you",
    "start": "2586500",
    "end": "2591569"
  },
  {
    "text": "know hopefully that works but spoiler alert it does that's why I'm here but",
    "start": "2591569",
    "end": "2597329"
  },
  {
    "text": "the idea is that this approach should be we want to work on binary we don't want to do live profiling as we did before we",
    "start": "2597329",
    "end": "2603869"
  },
  {
    "text": "want to do something completely statically because if you if you're able to observe the argument then that's it's not cheating but it's easier so to speak",
    "start": "2603869",
    "end": "2611609"
  },
  {
    "text": "it's a best-effort approach so if we cannot infer the arguments that for a function we're not going to try to",
    "start": "2611609",
    "end": "2617490"
  },
  {
    "text": "enforce a policy on it we only enforce the policies of the arguments were able to identify statically and then of",
    "start": "2617490",
    "end": "2623580"
  },
  {
    "text": "course you know like any technique right now it looks great but maybe tomorrow someone will find a way to bypass it but that's you know that's the game and",
    "start": "2623580",
    "end": "2629730"
  },
  {
    "text": "that's why there's a conference every year in security and the idea is that it's it's lightweight enough but it also",
    "start": "2629730",
    "end": "2636119"
  },
  {
    "text": "can be alongside other applications so it's a two-phase approach basically we",
    "start": "2636119",
    "end": "2643710"
  },
  {
    "text": "take the application binary we disassemble it we extract a control flow graph which you know enables us to see",
    "start": "2643710",
    "end": "2650310"
  },
  {
    "text": "all the basic blocks and we identify the call sites for the 60 to critical functions that we've identified once we",
    "start": "2650310",
    "end": "2656850"
  },
  {
    "text": "have that we do backward slicing and we're able to infer the argument on the stack that are pushed to this",
    "start": "2656850",
    "end": "2663270"
  },
  {
    "text": "application and then we generate a process wide per function policy which means that we enforce a certain behavior",
    "start": "2663270",
    "end": "2668580"
  },
  {
    "text": "for specific API calls and then at runtime it's your you know your classical library interposition and we",
    "start": "2668580",
    "end": "2674850"
  },
  {
    "text": "leverage something from microsoft research so what does it look like in practice so this is basically the same",
    "start": "2674850",
    "end": "2680490"
  },
  {
    "text": "as before but in picture in case you don't know how to read or you didn't like my explanations but basically we look at the intersection of the critical",
    "start": "2680490",
    "end": "2687480"
  },
  {
    "text": "functions and imported functions by the application we identify the call sides and this is the argument right this is",
    "start": "2687480",
    "end": "2693359"
  },
  {
    "text": "ideal scenario you have all the values that are pushed on the stack prior to invoking D you know the API calls of",
    "start": "2693359",
    "end": "2698730"
  },
  {
    "text": "course many times it is not possible and we can't infer a policy for specific functions but every time we can infer",
    "start": "2698730",
    "end": "2706230"
  },
  {
    "text": "this arguments we're gonna enforce it and some of them will be determined at runtime and that's fine as long as we enforce part of these arguments that are",
    "start": "2706230",
    "end": "2713070"
  },
  {
    "text": "called for this API call so the prototype we have is Windows based no",
    "start": "2713070",
    "end": "2720000"
  },
  {
    "text": "secrets we're using Ida and and the enforcement is done with detour so if",
    "start": "2720000",
    "end": "2725070"
  },
  {
    "text": "you guys never used it or never heard of it it's a I'm not sure it's I don't think it's open source but it's free to",
    "start": "2725070",
    "end": "2730830"
  },
  {
    "text": "use for academic licenses and basically what it does is that every time you enter one of the functions you care",
    "start": "2730830",
    "end": "2737040"
  },
  {
    "text": "about it inserts a trampoline instruction and then it drops to your own implementation so that's a very nice way of doing library interposition on",
    "start": "2737040",
    "end": "2743220"
  },
  {
    "text": "binaries for Windows because there's no LD preload on Windows and for",
    "start": "2743220",
    "end": "2749260"
  },
  {
    "text": "so these are the results so we we took 251 shellcodes and 30 rock payloads that",
    "start": "2749260",
    "end": "2757690"
  },
  {
    "text": "applied to you know common application the we took 10 what we call popular",
    "start": "2757690",
    "end": "2763370"
  },
  {
    "text": "end-user programs and that you're going to see the names right it's zip VLC crawl man and things like that so that",
    "start": "2763370",
    "end": "2769910"
  },
  {
    "text": "is it's real work right we can it can actually work and the main results as I told you so it improves slightly for",
    "start": "2769910",
    "end": "2775490"
  },
  {
    "text": "shellcodes but shellcodes will use functions that are not used by the application right so the improvement is is minimal here",
    "start": "2775490",
    "end": "2782390"
  },
  {
    "text": "however if you look at ropes ropes chain will use only one or two critical functions but it will use it very",
    "start": "2782390",
    "end": "2788330"
  },
  {
    "text": "differently and it has a very negligible overhead and this is just a graph of",
    "start": "2788330",
    "end": "2794900"
  },
  {
    "text": "these results so we used chrome edge Firefox and a bunch of other application",
    "start": "2794900",
    "end": "2800720"
  },
  {
    "text": "so this this is actually working on a on a real application that you may download today so we call this API specialization",
    "start": "2800720",
    "end": "2808790"
  },
  {
    "text": "shredder so that's a that's a best effort software reduction attack surface reduction tool it goes beyond the simple",
    "start": "2808790",
    "end": "2815690"
  },
  {
    "text": "code deep loading to API specialization we really believe that it's fine you",
    "start": "2815690",
    "end": "2820790"
  },
  {
    "text": "could load you could have multiple instances of kernel32.dll memories cheap you know we can we can store many",
    "start": "2820790",
    "end": "2826760"
  },
  {
    "text": "version of that DLL and load them into the address space of the process it relies on static analysis and then the",
    "start": "2826760",
    "end": "2833270"
  },
  {
    "text": "policies run force at runtime so whatever we can infer at you know statically we do it and we enforce it",
    "start": "2833270",
    "end": "2838460"
  },
  {
    "text": "and of course the major improvement is unwrap chains as opposed to you know shellcodes so now it's time for me to",
    "start": "2838460",
    "end": "2847250"
  },
  {
    "text": "conclude so we show we showed multiple approaches to reduce the attack surface",
    "start": "2847250",
    "end": "2852950"
  },
  {
    "text": "right we looked first into the coarse grain approach for containers and container image and really removing all",
    "start": "2852950",
    "end": "2858950"
  },
  {
    "text": "the binaries and then we targeted something a little bit more fine-grained where we look at the application and",
    "start": "2858950",
    "end": "2864380"
  },
  {
    "text": "what's left of it and the main takeaway here is that you",
    "start": "2864380",
    "end": "2869840"
  },
  {
    "text": "know whatever vendors tell you whatever solution that you read you know software solution or security is really a defense",
    "start": "2869840",
    "end": "2876500"
  },
  {
    "text": "in that solution there's nothing that fixes everything you know I know some people believe appliances will fix at the network layer some people that",
    "start": "2876500",
    "end": "2883589"
  },
  {
    "text": "sells API solution will tell you just protect your ideas and you're all good but really security is a defense in that",
    "start": "2883589",
    "end": "2889140"
  },
  {
    "text": "solution and really all of you guys whatever you're running today your attack surface is too big and your",
    "start": "2889140",
    "end": "2895440"
  },
  {
    "text": "security team is too small right so and if you look at all the techniques right incident response and all that the",
    "start": "2895440",
    "end": "2901740"
  },
  {
    "text": "biggest problem is reducing the noise with this you can literally reduce the noise because all the alerts or",
    "start": "2901740",
    "end": "2907440"
  },
  {
    "text": "everything you you get is going to be targeted to your particular need and the functions you're actually using so",
    "start": "2907440",
    "end": "2914790"
  },
  {
    "text": "containers are still good right not saying containers are bad and that talk containers are great for DevOps they're",
    "start": "2914790",
    "end": "2920940"
  },
  {
    "text": "great for agility and deployment but again the problem is the really the sad state of the testing tools today that",
    "start": "2920940",
    "end": "2927750"
  },
  {
    "text": "really gives you that false sense of security and there's a lot of things you could do right and and I know and I'm",
    "start": "2927750",
    "end": "2934050"
  },
  {
    "text": "sure in the room people say oh you can just use Alpine you know from dockerfile yeah great Alpine still has a lot of",
    "start": "2934050",
    "end": "2940380"
  },
  {
    "text": "dependencies that you don't need for your container and for those of you who don't know Alpine is just a lighter",
    "start": "2940380",
    "end": "2945710"
  },
  {
    "text": "operating system that contains less blood than others that really container should be built as a single purpose tool",
    "start": "2945710",
    "end": "2952650"
  },
  {
    "text": "and they should only have the things you need for your application that's it you",
    "start": "2952650",
    "end": "2958710"
  },
  {
    "text": "guys have any questions I think we have time no no sorry no we don't have time",
    "start": "2958710",
    "end": "2965240"
  },
  {
    "text": "[Applause]",
    "start": "2967680",
    "end": "2975839"
  }
]