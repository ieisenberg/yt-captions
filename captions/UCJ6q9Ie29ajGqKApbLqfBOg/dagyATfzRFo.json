[
  {
    "text": "all right hello everyone welcome uh to my talk on blast radius uh as you can",
    "start": "2800",
    "end": "8400"
  },
  {
    "text": "see i renamed it uh to breaking enterprise network authentication because i couldn't fit the entire title",
    "start": "8400",
    "end": "13920"
  },
  {
    "text": "on a slide uh but jokes aside uh this is joint work with sharon goldberg nadia",
    "start": "13920",
    "end": "19199"
  },
  {
    "text": "hener mike milano dan schumov mark stevens and adam sul and um as you can tell from the",
    "start": "19199",
    "end": "26400"
  },
  {
    "text": "latex slides i'm a cryptographer so i will uh bring you equations instead of source code screenshots but before you",
    "start": "26400",
    "end": "32880"
  },
  {
    "text": "all run out of the door uh i can promise you i'll keep things understandable and that you will learn something new in",
    "start": "32880",
    "end": "38079"
  },
  {
    "text": "this talk so let's start with what is radius and why should you care about it even",
    "start": "38079",
    "end": "44239"
  },
  {
    "text": "though you might not have heard of radius yourself your infrastructure most likely does depend on it uh radius is",
    "start": "44239",
    "end": "50640"
  },
  {
    "text": "often hidden from the end user but it is the def facto standard authentication protocol in enterprise networks",
    "start": "50640",
    "end": "58320"
  },
  {
    "text": "and so with that basically every network equipment that was pre produced in the",
    "start": "58320",
    "end": "63600"
  },
  {
    "text": "last 25 years is supporting radius and so that means radius is used for example",
    "start": "63600",
    "end": "69840"
  },
  {
    "text": "to authenticate administrator access to internet backbone routers essentially",
    "start": "69840",
    "end": "75600"
  },
  {
    "text": "every known cable isp is using radius for authentication and accounting",
    "start": "75600",
    "end": "82159"
  },
  {
    "text": "radius is also used to authenticate access to power grid equipment as well as industrial control systems um radius",
    "start": "82159",
    "end": "89600"
  },
  {
    "text": "is also used as a backend in identity providers such as octa and duo and it's also used in 802.1x and therefore to um",
    "start": "89600",
    "end": "97520"
  },
  {
    "text": "connect users to enterprise wi-fi and",
    "start": "97520",
    "end": "101758"
  },
  {
    "text": "edome in this slide i tried to compress our entire attack onto one slide so in",
    "start": "103079",
    "end": "108479"
  },
  {
    "text": "case you want to check your emails later this is the slide you need to pay attention to let's start with what is",
    "start": "108479",
    "end": "114520"
  },
  {
    "text": "radius let's consider a user that wants to authenticate to a router for doing",
    "start": "114520",
    "end": "119840"
  },
  {
    "text": "that the user sends their username and password to the router but in most enterprise networks the router itself",
    "start": "119840",
    "end": "125920"
  },
  {
    "text": "doesn't actually store the user credentials to check whether that user is allowed to have access or not instead",
    "start": "125920",
    "end": "131200"
  },
  {
    "text": "you have one centralized authentication database and all the other devices connect uh and contact that database and",
    "start": "131200",
    "end": "138080"
  },
  {
    "text": "then ask whether the user should be granted access or not and that's exactly what radius is used for so the router",
    "start": "138080",
    "end": "143760"
  },
  {
    "text": "acting as the radius client will contact the radius server and send an access",
    "start": "143760",
    "end": "150480"
  },
  {
    "text": "request radius message to the server asking whether it should give this user access or not and this request has",
    "start": "150480",
    "end": "157280"
  },
  {
    "text": "attributes attached to it uh that include the username and password and then the radius server will look up",
    "start": "157280",
    "end": "163120"
  },
  {
    "text": "these user credentials in its database and communicate its access decision uh",
    "start": "163120",
    "end": "168959"
  },
  {
    "text": "in form of an access accept or access reject radius message that is sent back to the radius client and based on this",
    "start": "168959",
    "end": "176000"
  },
  {
    "text": "message the radius client will then decide to give the user access or not most of this radius traffic between the",
    "start": "176000",
    "end": "182400"
  },
  {
    "text": "radius client and the radius server is actually sent over udp and i know this is hard to believe but actually radius",
    "start": "182400",
    "end": "189360"
  },
  {
    "text": "over tls is not even standardized yet so really in practice a lot of this traffic is still sent over",
    "start": "189360",
    "end": "196840"
  },
  {
    "text": "udp blast radius is a protocol vulnerability that allows a machine in the middle to change an access reject to",
    "start": "196840",
    "end": "204400"
  },
  {
    "text": "an access accept and that means that um the adversary can authenticate as any",
    "start": "204400",
    "end": "211000"
  },
  {
    "text": "users so for example if you are using radius to authenticate administrator",
    "start": "211000",
    "end": "216159"
  },
  {
    "text": "access to an internet backbone router then that means the adversary can authenticate as the administrator on",
    "start": "216159",
    "end": "221519"
  },
  {
    "text": "that device our attack also helped accelerating the ongoing efforts to",
    "start": "221519",
    "end": "227519"
  },
  {
    "text": "deprecate radius over udp uh which was still ongoing in itf",
    "start": "227519",
    "end": "232640"
  },
  {
    "text": "we disclosed our attack to over 90 vendors which included uh all big",
    "start": "232640",
    "end": "238159"
  },
  {
    "text": "producers of network equipment such as cisco and microsoft so i hope with this i piqu",
    "start": "238159",
    "end": "244560"
  },
  {
    "text": "your interest in blast radius and maybe you're wondering am i vulnerable uh how",
    "start": "244560",
    "end": "250400"
  },
  {
    "text": "does this attack work or shoot i'm running radius how can i mitigate this well if that's the case then maybe don't",
    "start": "250400",
    "end": "256880"
  },
  {
    "text": "open your mailbox because i will answer all of those questions in this talk",
    "start": "256880",
    "end": "262919"
  },
  {
    "text": "let's start with the radius protocol the following three packet",
    "start": "262960",
    "end": "268000"
  },
  {
    "text": "formats are important for our attack in radius every packet starts with a four byte header that specifies the packet",
    "start": "268000",
    "end": "274160"
  },
  {
    "text": "type and length in the access request we then have a 16 byt request nons that ensures",
    "start": "274160",
    "end": "281600"
  },
  {
    "text": "the freshness of answers in addition there can be a a",
    "start": "281600",
    "end": "286960"
  },
  {
    "text": "number of attributes attached to an access request the most important ones of those are the one that holds the",
    "start": "286960",
    "end": "292720"
  },
  {
    "text": "username and a scrambled password the access accept which is one",
    "start": "292720",
    "end": "298400"
  },
  {
    "text": "of the answers that the radius server can send back has a similar structure it also has a header but it now has a",
    "start": "298400",
    "end": "304000"
  },
  {
    "text": "response authenticator instead of the request nons and this should um prevent",
    "start": "304000",
    "end": "309759"
  },
  {
    "text": "an adversary from forging responses of the of the server it can also have attributes these",
    "start": "309759",
    "end": "315840"
  },
  {
    "text": "attributes can include for example what kind of privileges the user that is authenticated should be",
    "start": "315840",
    "end": "321400"
  },
  {
    "text": "granted access reject has a very similar format than access accept it also has an authenticator but it usually has less",
    "start": "321400",
    "end": "328360"
  },
  {
    "text": "attributes and as you can probably guess this attack is focusing on the response",
    "start": "328360",
    "end": "335639"
  },
  {
    "text": "authenticator so let's see how this is constructed as the name suggests the response",
    "start": "335639",
    "end": "342160"
  },
  {
    "text": "authenticator um should prevent an adversary from forging answers of the radius",
    "start": "342160",
    "end": "350720"
  },
  {
    "text": "server and this is done as follows to compute the response authenticator of a response packet such as the following",
    "start": "351639",
    "end": "358800"
  },
  {
    "text": "the server computes the md5 hash over the response header and attributes which",
    "start": "358800",
    "end": "363840"
  },
  {
    "text": "are copied from the response as well as the request nons which is copied from the request um which is the access",
    "start": "363840",
    "end": "371120"
  },
  {
    "text": "request that this is a response to and finally also a fixed preconfigured",
    "start": "371120",
    "end": "376720"
  },
  {
    "text": "shared secret so this shared secret is set up when when you set up this authentication system it is hardcoded in",
    "start": "376720",
    "end": "383680"
  },
  {
    "text": "both the radius client and the radius server and this is also what should make it hard for an adversary to forge this",
    "start": "383680",
    "end": "390319"
  },
  {
    "text": "response authenticator because the network adversary doesn't know this shared",
    "start": "390319",
    "end": "396680"
  },
  {
    "text": "secret all right so i'm sure a lot of you are already um shaking your heads that radius is still using md5 in 2024",
    "start": "396680",
    "end": "404960"
  },
  {
    "text": "after all we know that md5 has weaknesses since before i was born and",
    "start": "404960",
    "end": "410400"
  },
  {
    "text": "that's exactly how our research started john goldberg one of um one of my",
    "start": "410400",
    "end": "416759"
  },
  {
    "text": "co-authors noticed how to implement radius for a customer of her startup and",
    "start": "416759",
    "end": "422560"
  },
  {
    "text": "she noticed that it's still using md5 and so she called my adviser nadia hinger and told her that she should",
    "start": "422560",
    "end": "428960"
  },
  {
    "text": "break radius and nadia was very much a bored of the of this and so i as our student and the other collaborators",
    "start": "428960",
    "end": "435199"
  },
  {
    "text": "entered the project that way but at this point i would like to emphasize that it's by far not trivial",
    "start": "435199",
    "end": "442000"
  },
  {
    "text": "to break radius just with md5 collisions in fact the itf working group that was",
    "start": "442000",
    "end": "448800"
  },
  {
    "text": "designing radius was aware that md5 is broken however they thought that it is a testament to the design of radius that",
    "start": "448800",
    "end": "455840"
  },
  {
    "text": "there have been as yet no attacks on the radius authentication signature so in other words they thought that because no",
    "start": "455840",
    "end": "462000"
  },
  {
    "text": "one could figure out how to use md5 collisions to break radius that radius is",
    "start": "462000",
    "end": "467800"
  },
  {
    "text": "secure in the next section of this talk i will explain how to use md5 collisions to break",
    "start": "467800",
    "end": "475120"
  },
  {
    "text": "radius recall that the goal of our attack is to forge an access accept without actually knowing the shared",
    "start": "476599",
    "end": "483120"
  },
  {
    "text": "secret and so that means we need to get around this response authenticator",
    "start": "483120",
    "end": "488720"
  },
  {
    "text": "this is where the md5 collisions come in we will carefully craft a collision such",
    "start": "488720",
    "end": "494479"
  },
  {
    "text": "that an access accept and an access reject response both have exactly the same response",
    "start": "494479",
    "end": "500039"
  },
  {
    "text": "authenticator so here is the first equation of my talk not that bad right",
    "start": "500039",
    "end": "505199"
  },
  {
    "text": "all right so the attack works as follows the attacker logs in with uh a username",
    "start": "505199",
    "end": "511680"
  },
  {
    "text": "and some random password that is definitely wrong um this will trigger uh",
    "start": "511680",
    "end": "516800"
  },
  {
    "text": "an authentication and access request that is intercepted by the machine in the middle so this is the second part of",
    "start": "516800",
    "end": "523120"
  },
  {
    "text": "the adver adversary and this uh the adversary then uses information in the request to",
    "start": "523120",
    "end": "529360"
  },
  {
    "text": "predict what reject the server is going to send and then it will run an md5 collision to find the matching accept",
    "start": "529360",
    "end": "536640"
  },
  {
    "text": "that has the exact same response authenticator however at this point in the attack we don't yet know what this",
    "start": "536640",
    "end": "542959"
  },
  {
    "text": "response authenticator is and so the attacker is modifying the request to",
    "start": "542959",
    "end": "549519"
  },
  {
    "text": "make sure that the radius server will respond with exactly the reject that it predicted and at that point it can read",
    "start": "549519",
    "end": "556959"
  },
  {
    "text": "off the response authenticator from that reject and by construction it's the same as the one for the accept so the",
    "start": "556959",
    "end": "562720"
  },
  {
    "text": "adversary can just copy over this response authenticator to the access accept and this will trick the radius",
    "start": "562720",
    "end": "568880"
  },
  {
    "text": "client into granting the attacker access to um the router although the attacker",
    "start": "568880",
    "end": "575120"
  },
  {
    "text": "didn't know the correct password for that user so in order to understand how this",
    "start": "575120",
    "end": "580480"
  },
  {
    "text": "works on a technical level we need to first revisit md5",
    "start": "580480",
    "end": "585959"
  },
  {
    "text": "collisions um the first collision or the first weaknesses in md5 were found in 1993 but it took until 2004 to find full",
    "start": "585959",
    "end": "594320"
  },
  {
    "text": "md5 collisions and so that means um a full collision is an onstruct that we",
    "start": "594320",
    "end": "600000"
  },
  {
    "text": "find two unstructured strings of bytes which we call chibberish uh g1 and g2",
    "start": "600000",
    "end": "605600"
  },
  {
    "text": "such that the md5 hash of g1 equals the md5 hash of g2 now these collisions can",
    "start": "605600",
    "end": "611680"
  },
  {
    "text": "be computed in seconds on a laptop but they're not very useful for an attacker the reason for this is that an adversary",
    "start": "611680",
    "end": "618480"
  },
  {
    "text": "needs more control over the collision and so an improvement over these collision attacks uh are so-called",
    "start": "618480",
    "end": "625120"
  },
  {
    "text": "chosen prefix collisions where the adversary can um choose two prefixes p1",
    "start": "625120",
    "end": "631120"
  },
  {
    "text": "and p2 and can then run the collision algorithm to produce chibberish g1 and",
    "start": "631120",
    "end": "636240"
  },
  {
    "text": "g2 such that the md5 hash of the prefix p1 concatenated with the chibberish g1",
    "start": "636240",
    "end": "641839"
  },
  {
    "text": "is the same as the md5 hash of p2 g2 and this was used in 2009 to create a",
    "start": "641839",
    "end": "649040"
  },
  {
    "text": "rogue dlsca certificate we're actually using an extension of this attack where once you",
    "start": "649040",
    "end": "655440"
  },
  {
    "text": "have a collision the structure of md5 guarantees that you will still have a collision even if you append the same",
    "start": "655440",
    "end": "663200"
  },
  {
    "text": "suffix to both inputs of the md5 and this will be very useful for our attack",
    "start": "663200",
    "end": "670399"
  },
  {
    "text": "in the last 14 years there wasn't really a lot of cryp analysis with md5 um and also protocols avoided using it until",
    "start": "670399",
    "end": "677920"
  },
  {
    "text": "our um attack on blast radius so let's see how we can use this",
    "start": "677920",
    "end": "683120"
  },
  {
    "text": "md5 chosen prefix collision attacks to break radius here we call that our goal is to",
    "start": "683120",
    "end": "690399"
  },
  {
    "text": "create an md5 collision to such that a forged access accept has exactly the",
    "start": "690399",
    "end": "695839"
  },
  {
    "text": "same response authenticator as the predicted access reject that the server sends this is done as follows the",
    "start": "695839",
    "end": "703440"
  },
  {
    "text": "adversary sets the header request nons and attributes of both the accept and",
    "start": "703440",
    "end": "709279"
  },
  {
    "text": "rejected as the prefixes for the chosen prefix collision attack and then it will run the chosen prefix collision attack",
    "start": "709279",
    "end": "715519"
  },
  {
    "text": "to get some chibberish one for the accept and one for the rejected and so at this point the prefixes plus",
    "start": "715519",
    "end": "721760"
  },
  {
    "text": "chibberish produce the same md5 hash and as we've seen before once you have a",
    "start": "721760",
    "end": "728000"
  },
  {
    "text": "collision you still have a collision if you append a random uh the same string to both inputs and that's very useful",
    "start": "728000",
    "end": "733680"
  },
  {
    "text": "for our attacker because the attacker doesn't know which secret is appended but he knows that the same secret is",
    "start": "733680",
    "end": "739200"
  },
  {
    "text": "appended to both of those packets and so therefore we still have a collision even though that rashi doesn't know the",
    "start": "739200",
    "end": "745320"
  },
  {
    "text": "secret now at this level this looks a bit more simple than it actually is and so next i will discuss three subtle",
    "start": "745320",
    "end": "752240"
  },
  {
    "text": "challenges when you run this attack the first challenge is that we the adversary",
    "start": "752240",
    "end": "757839"
  },
  {
    "text": "must convince the server to actually include this reject gibberish in its",
    "start": "757839",
    "end": "763600"
  },
  {
    "text": "response authenticator computation for the access reject and so this seems a little bit impossible at first because",
    "start": "763600",
    "end": "769920"
  },
  {
    "text": "why should the server include some random bytes that adversary would like it to include in its answer but it turns",
    "start": "769920",
    "end": "775839"
  },
  {
    "text": "out that there is an attribute that is perfect for running this attack uh it's called the proxy state attribute and the",
    "start": "775839",
    "end": "783279"
  },
  {
    "text": "standard mandates that the server must include this attribute without any",
    "start": "783279",
    "end": "788320"
  },
  {
    "text": "modifications in the response so that means if we have an access request with a proxy state attribute then the server",
    "start": "788320",
    "end": "795680"
  },
  {
    "text": "if it follows the uh standard must copy this attribute onto the access request",
    "start": "795680",
    "end": "800880"
  },
  {
    "text": "uh access reject and so the goal here is that we can hide the reject gibberish in",
    "start": "800880",
    "end": "806800"
  },
  {
    "text": "such a proxy state attribute but there we run into a second problem which is that hiding the reject",
    "start": "806800",
    "end": "813440"
  },
  {
    "text": "chibberish in a single proxy state attribute is actually too slow because it would require us to create a very",
    "start": "813440",
    "end": "819519"
  },
  {
    "text": "short reject chibberish string which is expensive to do with chosen prefix collision",
    "start": "819519",
    "end": "825000"
  },
  {
    "text": "attacks and so the idea to get around this is that we spread the chibberish across multiple proxy states uh and so",
    "start": "825000",
    "end": "834160"
  },
  {
    "text": "for this we had to modify existing chosen prefix collision attacks such that they allow us to put a four byte",
    "start": "834160",
    "end": "841440"
  },
  {
    "text": "proxy state header into the middle of the chibberish so you can see here that",
    "start": "841440",
    "end": "846880"
  },
  {
    "text": "um our chibberish string is actually parsed as two different proxy state um attributes note that the first proxy",
    "start": "846880",
    "end": "853839"
  },
  {
    "text": "state header we actually don't need to put into the chibberish we can hide this one in the prefix and that makes computations faster",
    "start": "853839",
    "end": "861760"
  },
  {
    "text": "the last challenge that i will talk about is that you can note that in the prefix uh we need to know the request",
    "start": "861760",
    "end": "869880"
  },
  {
    "text": "not and so that means that this the adversary cannot premputee an md5 collision it needs to wait until it sees",
    "start": "869880",
    "end": "876880"
  },
  {
    "text": "the access request before it can compute the collision online and that's an issue",
    "start": "876880",
    "end": "883920"
  },
  {
    "text": "because the radius client can time out while it waits for an answer uh from the",
    "start": "883920",
    "end": "889839"
  },
  {
    "text": "radius server and so uh that's particularly bad because those chosen prefix collision attacks are pretty slow",
    "start": "889839",
    "end": "896000"
  },
  {
    "text": "for example to compute the rogue tlsca certificate they um ran the attack for",
    "start": "896000",
    "end": "902079"
  },
  {
    "text": "28 hours on a cluster of 215 ps3 machines and uh indeed our attack first",
    "start": "902079",
    "end": "909360"
  },
  {
    "text": "took multiple days but we were able to optimize the time down to below 5 minutes using uh both algorithmic",
    "start": "909360",
    "end": "916079"
  },
  {
    "text": "improvements as well as parallelization so let me say a few more words about what we did here is a screenshot from",
    "start": "916079",
    "end": "923120"
  },
  {
    "text": "our monitoring this was somewhere in the middle of our optimization process um so you can see here that collisions still",
    "start": "923120",
    "end": "929600"
  },
  {
    "text": "took about 30 minutes at this point but uh the the monitoring shows nicely the",
    "start": "929600",
    "end": "935120"
  },
  {
    "text": "different phases of the algorithm um but first one thing that's not shown in this picture is that we moved a lot of the",
    "start": "935120",
    "end": "941760"
  },
  {
    "text": "computation into premputation that's independent of the prefixes and so that way we can also save some time um what",
    "start": "941760",
    "end": "948480"
  },
  {
    "text": "you see in the screenshot is that in the first third we run um uh this part of",
    "start": "948480",
    "end": "953920"
  },
  {
    "text": "the attack on the only machine that we had access to that has uh gpus because that part of the attack it's called the",
    "start": "953920",
    "end": "960240"
  },
  {
    "text": "birthday search is much uh faster on gpus later on we found a way to use both gpus and cpu machines uh and that way we",
    "start": "960240",
    "end": "967680"
  },
  {
    "text": "were able to get down this part below 1 minute and then you see in the remainder of the the image that um we sort of have",
    "start": "967680",
    "end": "975440"
  },
  {
    "text": "alternating phases of sequential computation and parallel computation and so the way we were able",
    "start": "975440",
    "end": "982160"
  },
  {
    "text": "to parallelize that part of the md5 collisions is that we noted that um",
    "start": "982160",
    "end": "987199"
  },
  {
    "text": "those are probabilistic code paths and so we run um many of those at the same",
    "start": "987199",
    "end": "993440"
  },
  {
    "text": "computation with different random seeds on all of the machines and then we take the one that finishes first and so to",
    "start": "993440",
    "end": "999839"
  },
  {
    "text": "actually gain runtime um um improvements from this we also tuned the parameters",
    "start": "999839",
    "end": "1006240"
  },
  {
    "text": "to favor runtime over success rate so many of those um executions that run in",
    "start": "1006240",
    "end": "1012160"
  },
  {
    "text": "parallel will fail but the ones that finish faster than before and this way we get an overall runtime",
    "start": "1012160",
    "end": "1019639"
  },
  {
    "text": "reduction here is an example with bits and byes of",
    "start": "1019639",
    "end": "1025678"
  },
  {
    "text": "two correctly formatted access accept and access reject packets that have the",
    "start": "1025679",
    "end": "1030880"
  },
  {
    "text": "same md5 hash uh i had to concatenate them to fit them on the slide but uh",
    "start": "1030880",
    "end": "1036319"
  },
  {
    "text": "this example is also available on our website uh together with some code to compute a response authenticator so if",
    "start": "1036319",
    "end": "1042640"
  },
  {
    "text": "you want to play around with md5 collisions you are very welcome to check out this um this python code",
    "start": "1042640",
    "end": "1051600"
  },
  {
    "text": "but let's move on to impact uh our attack affects both pop",
    "start": "1051679",
    "end": "1058160"
  },
  {
    "text": "chop and ms chop modes for radius it doesn't uh necessarily affect",
    "start": "1058160",
    "end": "1064240"
  },
  {
    "text": "the eat modes uh of of radius and this case is a bit complicated and so i have",
    "start": "1064240",
    "end": "1069520"
  },
  {
    "text": "a a separate site for this later our attack also requires a machine",
    "start": "1069520",
    "end": "1075840"
  },
  {
    "text": "in the middle network access and so that means if you send your radius over udp traffic over the open internet you are",
    "start": "1075840",
    "end": "1082720"
  },
  {
    "text": "definitely vulnerable you might wonder why would anyone send this traffic over the open internet uh and this is anyone",
    "start": "1082720",
    "end": "1089679"
  },
  {
    "text": "doing that well the answer is actually a surprising number of people are doing this this includes cloud providers and",
    "start": "1089679",
    "end": "1095440"
  },
  {
    "text": "telecommunication networks the uh other way to run radius",
    "start": "1095440",
    "end": "1100799"
  },
  {
    "text": "is to run um this traffic inside a vlan or inside an ipsec tunnel and so in that",
    "start": "1100799",
    "end": "1106640"
  },
  {
    "text": "case our attack can be useful for lateral movement meaning that once adversary compromised that network it",
    "start": "1106640",
    "end": "1113600"
  },
  {
    "text": "could use splash radius to gain access to all of the devices that are on this network that are using radius for",
    "start": "1113600",
    "end": "1121280"
  },
  {
    "text": "authentication in terms of timings mo most radius clients that are used in practice have uh timings configured of",
    "start": "1121400",
    "end": "1128880"
  },
  {
    "text": "up to 60 seconds if there is multiffactor authentication uh involved our proof of concepts take about 5",
    "start": "1128880",
    "end": "1135520"
  },
  {
    "text": "minutes so that's a bit longer than the timeouts that are used in practice um but really this should be taken as a",
    "start": "1135520",
    "end": "1141360"
  },
  {
    "text": "very generous upper bound because uh we're an academic team and we don't have that many resources uh in fact you could",
    "start": "1141360",
    "end": "1148080"
  },
  {
    "text": "have more computational resources than we have by spending $50 on aws and um moreover there's also many uh",
    "start": "1148080",
    "end": "1156559"
  },
  {
    "text": "more optimizations that would be feasible our attack parallelizes well and the md5 collisions could even be",
    "start": "1156559",
    "end": "1161600"
  },
  {
    "text": "implemented on hardware in terms of proof of concepts uh attacks",
    "start": "1161600",
    "end": "1167120"
  },
  {
    "text": "that we run um we run rad uh blast rad the blast radius attack against the following software uh and in all of",
    "start": "1167120",
    "end": "1173760"
  },
  {
    "text": "these cases it would allow an attacker to authenticate as an arbitrary user so first we tested free radius which is the",
    "start": "1173760",
    "end": "1180880"
  },
  {
    "text": "most uh widely used radius server we also looked uh at octa which is an",
    "start": "1180880",
    "end": "1187039"
  },
  {
    "text": "identity provider and found that they are vulnerable if they are configured to use radius in pop mode uh for",
    "start": "1187039",
    "end": "1193280"
  },
  {
    "text": "multiffactor authentication we also tested our attack against the cisco firewall that can be",
    "start": "1193280",
    "end": "1200320"
  },
  {
    "text": "configured to use radius to give users access um to the serial console or to",
    "start": "1200320",
    "end": "1207360"
  },
  {
    "text": "put them on a vpn or for many other network services uh on the image um you",
    "start": "1207360",
    "end": "1212559"
  },
  {
    "text": "see on the right side there is uh our firewall that is connected to the laptop",
    "start": "1212559",
    "end": "1217840"
  },
  {
    "text": "in the middle which uses a very hacky udp over dcp uh tcp tunnel into our",
    "start": "1217840",
    "end": "1224000"
  },
  {
    "text": "cluster where we run our machine in the middle software that will then forward the packets to the actual radius server",
    "start": "1224000",
    "end": "1229919"
  },
  {
    "text": "and run the md5 collisions and you can also configure plug pluggable",
    "start": "1229919",
    "end": "1235280"
  },
  {
    "text": "authentication modules on linux to use radius for example for users to log into a machine via ssh or to run sudo and in",
    "start": "1235280",
    "end": "1243440"
  },
  {
    "text": "all of these cases we confirmed that none of these deployments are using uh message authenticator which is something",
    "start": "1243440",
    "end": "1249679"
  },
  {
    "text": "that would prevent our attack and also uh we made sure that the clients accept",
    "start": "1249679",
    "end": "1255200"
  },
  {
    "text": "access accept packets that have um proxy state attributes which is something that",
    "start": "1255200",
    "end": "1261360"
  },
  {
    "text": "is sort of uh unexpected in a normal use of the protocol but we need those proxy",
    "start": "1261360",
    "end": "1266559"
  },
  {
    "text": "states to hide our uh gibberish and none of these uh complained about",
    "start": "1266559",
    "end": "1271880"
  },
  {
    "text": "this so i promise you an an extra slide on e uh e is a bit complicated because",
    "start": "1271880",
    "end": "1278559"
  },
  {
    "text": "um the etls mode for radius doesn't actually do what you would expect it to do it doesn't protect the radius packets",
    "start": "1278559",
    "end": "1285360"
  },
  {
    "text": "instead it's etls nested inside a radius uh communication and so this is not to",
    "start": "1285360",
    "end": "1291840"
  },
  {
    "text": "be confused with radius over tls which actually wraps the entire radius",
    "start": "1291840",
    "end": "1297120"
  },
  {
    "text": "communication inside the tls channel so going back to e um tls the way this",
    "start": "1297120",
    "end": "1302880"
  },
  {
    "text": "works is that the radius messages have uh an e message attribute which then has",
    "start": "1302880",
    "end": "1309600"
  },
  {
    "text": "the encapsulated e um uh messages and so",
    "start": "1309600",
    "end": "1316720"
  },
  {
    "text": "um the standard requires that if you have an e message attribute then you also need to have a message",
    "start": "1316720",
    "end": "1322000"
  },
  {
    "text": "authenticator attribute and i said before that this attribute prevents our attack so this is looking good for e at",
    "start": "1322000",
    "end": "1328400"
  },
  {
    "text": "this point unfortunately the standard is very unclear as to what should happen if",
    "start": "1328400",
    "end": "1333520"
  },
  {
    "text": "an access except doesn't have an e message attribute and so one possible attack that could work against some",
    "start": "1333520",
    "end": "1339919"
  },
  {
    "text": "clients is that an attacker strips away both the e message and the message",
    "start": "1339919",
    "end": "1345240"
  },
  {
    "text": "authenticator um but at that point you run into another issue which is that the",
    "start": "1345240",
    "end": "1350480"
  },
  {
    "text": "higher level protocol um such as adorome or 80.21x 21x might negotiate a key",
    "start": "1350480",
    "end": "1357440"
  },
  {
    "text": "inside the e session that is nested inside the radius um traffic and so even",
    "start": "1357440",
    "end": "1364159"
  },
  {
    "text": "if you can forge an access accept that the client um validate that validates on",
    "start": "1364159",
    "end": "1369840"
  },
  {
    "text": "the client the adversary doesn't actually get this e key the key that is",
    "start": "1369840",
    "end": "1375520"
  },
  {
    "text": "uh negotiated inside the e um session and so that means exploitation in practice is really tricky",
    "start": "1375520",
    "end": "1384440"
  },
  {
    "text": "but uh let's move on to mitigation in general we disclosed this attack to over 90 vendors in a big disclosure that was",
    "start": "1384559",
    "end": "1391520"
  },
  {
    "text": "coordinated by cert and the challenging thing about mitigating this attack is",
    "start": "1391520",
    "end": "1397280"
  },
  {
    "text": "that there are many different use cases for radius for example it's even used to authenticate access to windmills in",
    "start": "1397280",
    "end": "1404159"
  },
  {
    "text": "power plants and the problem with that is that some of these applications are",
    "start": "1404159",
    "end": "1409200"
  },
  {
    "text": "really hard to upgrade and that makes backwards compatibility a major requirement for",
    "start": "1409200",
    "end": "1415159"
  },
  {
    "text": "mitigations but in a collaboration with the vendors we developed the following mitigations in the short term we",
    "start": "1415159",
    "end": "1421880"
  },
  {
    "text": "recommend that implementations use the message authenticator attribute which uses hmac md5 and despite that there is",
    "start": "1421880",
    "end": "1429039"
  },
  {
    "text": "also an md5 there that is actually not vulnerable to the md5 collisions that we found in our uh paper",
    "start": "1429039",
    "end": "1436240"
  },
  {
    "text": "this uh mitigation only works though if all of the requests and responses",
    "start": "1436240",
    "end": "1441280"
  },
  {
    "text": "actually include a message authenticator and also verify it on the long term we recommend that um",
    "start": "1441280",
    "end": "1450159"
  },
  {
    "text": "all of the radius traffic is encapsulated inside tls which is the more robust solution and there is",
    "start": "1450159",
    "end": "1456400"
  },
  {
    "text": "actually um a current draft that the itf is working on standardizing for radius",
    "start": "1456400",
    "end": "1462240"
  },
  {
    "text": "over tls so uh keep an eye out for that",
    "start": "1462240",
    "end": "1466960"
  },
  {
    "text": "so now that it's about six months after we went public with this vulnerability we can make sort of a review and see how",
    "start": "1468960",
    "end": "1475679"
  },
  {
    "text": "is mitigation going of course all of the radius server software providers had",
    "start": "1475679",
    "end": "1481039"
  },
  {
    "text": "patches available at the time we went public because of the responsible disclosure um but it looks like until",
    "start": "1481039",
    "end": "1486960"
  },
  {
    "text": "now also all the equipment or many of their equipment vendors have upgraded their systems however there seems to be",
    "start": "1486960",
    "end": "1493520"
  },
  {
    "text": "some misunderstandings about the placement of message authenticator um of the message authenticator",
    "start": "1493520",
    "end": "1499799"
  },
  {
    "text": "attribute uh so for example truniper devices fail if the message authenticator is not the first attribute",
    "start": "1499799",
    "end": "1506240"
  },
  {
    "text": "and cisco devices put the message authenticator at an arbitrary location and so you can clearly see that those",
    "start": "1506240",
    "end": "1511919"
  },
  {
    "text": "two are incompatible and so if you have a juniper and a cisco device in the same network you have a problem",
    "start": "1511919",
    "end": "1517679"
  },
  {
    "text": "we think that the source of confusion for this is the message authenticator hiding attack that we outline in our",
    "start": "1517679",
    "end": "1523679"
  },
  {
    "text": "paper and so this is basically uh works as follows if the message authenticator",
    "start": "1523679",
    "end": "1529440"
  },
  {
    "text": "is not the first attribute the attacker can effectively remove the message",
    "start": "1529440",
    "end": "1534520"
  },
  {
    "text": "authenticator and it does this by making sure that the accept gibberish ends in a",
    "start": "1534520",
    "end": "1540080"
  },
  {
    "text": "proxy state header and so if you do that then the client will parse the message",
    "start": "1540080",
    "end": "1546080"
  },
  {
    "text": "authenticator as a proxy state instead of a message authenticator attribute and so it will not actually um authenticate",
    "start": "1546080",
    "end": "1553360"
  },
  {
    "text": "the packet with that uh value so going back to the question of where should you put the message",
    "start": "1553360",
    "end": "1560200"
  },
  {
    "text": "authenticator if you are sending a radius packet you should definitely put it as the first attribute because that",
    "start": "1560200",
    "end": "1566880"
  },
  {
    "text": "avoids the previous hiding attack however if you are receiving a radius",
    "start": "1566880",
    "end": "1572240"
  },
  {
    "text": "packet then you should not mandate that it is the first attribute and the reason",
    "start": "1572240",
    "end": "1577679"
  },
  {
    "text": "uh for this is that it first of all violates the standard uh and it also",
    "start": "1577679",
    "end": "1583200"
  },
  {
    "text": "breaks backwards compatibility if you do this then deployments that always require the",
    "start": "1583200",
    "end": "1589279"
  },
  {
    "text": "message authenticator are actually still not vulnerable even though you don't mandate the order uh and the reason for",
    "start": "1589279",
    "end": "1595039"
  },
  {
    "text": "this is that the adversary cannot create new message authenticators it can only remove one that is there so if you",
    "start": "1595039",
    "end": "1600880"
  },
  {
    "text": "always require the message authenticator to be present then you are still secure um however uh of course if you don't",
    "start": "1600880",
    "end": "1608320"
  },
  {
    "text": "require the message authenticator to be there then depending on where it is placed you might still have some vulnerable",
    "start": "1608320",
    "end": "1615400"
  },
  {
    "text": "devices this was it from me if you want to learn more um there is our paper that",
    "start": "1615400",
    "end": "1620880"
  },
  {
    "text": "was published at usix this year we also have a website that you can visit and i'm very happy to answer questions right",
    "start": "1620880",
    "end": "1626480"
  },
  {
    "text": "now or on the hallway later thank you very much for your attention",
    "start": "1626480",
    "end": "1631880"
  },
  {
    "text": "yes please",
    "start": "1642240",
    "end": "1645480"
  },
  {
    "text": "given that anyone could spin up an aws cluster what sort of",
    "start": "1657760",
    "end": "1665440"
  },
  {
    "text": "span how much scale up okay that's a great question uh let me",
    "start": "1667960",
    "end": "1674240"
  },
  {
    "text": "repeat it for for everyone uh the question was um how much would you need to scale up the computation um to uh run",
    "start": "1674240",
    "end": "1681440"
  },
  {
    "text": "attacks against uh real world deployments of radius um so the the",
    "start": "1681440",
    "end": "1687120"
  },
  {
    "text": "timeouts that you have in practice are between 15 seconds and 60 seconds um you",
    "start": "1687120",
    "end": "1692480"
  },
  {
    "text": "have longer timeouts if you need multiffactor authentication because people need to have time to you know click the the second factor um",
    "start": "1692480",
    "end": "1698880"
  },
  {
    "text": "authentication message um so you would need to uh have a speed up between 5x",
    "start": "1698880",
    "end": "1704559"
  },
  {
    "text": "and 20x um compared to what we had um i think a lot of it uh you could do by",
    "start": "1704559",
    "end": "1711760"
  },
  {
    "text": "spending more time engineering and rewriting um hash cache uh to be more",
    "start": "1711760",
    "end": "1716880"
  },
  {
    "text": "optimized for um for example caches and so on so you could do a lot of it with engineering efforts i think if you would",
    "start": "1716880",
    "end": "1722880"
  },
  {
    "text": "do the brute force um approach of just scaling up your computational resources",
    "start": "1722880",
    "end": "1728480"
  },
  {
    "text": "um i would expect that you would need more than than the five or 20x time",
    "start": "1728480",
    "end": "1733840"
  },
  {
    "text": "because not everything parallelizes as well there are the sequential parts uh in the computation that don't",
    "start": "1733840",
    "end": "1738880"
  },
  {
    "text": "parallelize as well um however if you have stronger gpus which we definitely",
    "start": "1738880",
    "end": "1744080"
  },
  {
    "text": "had very cheap gpus then you could get at least the first phase probably down quite a lot um so yeah it depends is",
    "start": "1744080",
    "end": "1752399"
  },
  {
    "text": "probably the the overall answer yes please",
    "start": "1752399",
    "end": "1760360"
  },
  {
    "text": "yes",
    "start": "1771360",
    "end": "1774360"
  },
  {
    "text": "yeah okay so the question was um i mentioned multiple times that the radius is run over udp and um it's unclear how",
    "start": "1776720",
    "end": "1784240"
  },
  {
    "text": "uh uh running it over tcp would fix it uh that is correct uh i if i mentioned",
    "start": "1784240",
    "end": "1789919"
  },
  {
    "text": "running over tcp would fix it then i misspoke it's definitely the case that you run it over tls to fix it um meaning",
    "start": "1789919",
    "end": "1797600"
  },
  {
    "text": "that you actually encapsulate the radius traffic inside tls and it will still",
    "start": "1797600",
    "end": "1802640"
  },
  {
    "text": "have its weird md5 uh construction um but it will no longer be insecure",
    "start": "1802640",
    "end": "1807919"
  },
  {
    "text": "because you rely on tls to provide integrity and confidentiality that radius doesn't provide um so yeah over",
    "start": "1807919",
    "end": "1814640"
  },
  {
    "text": "tcp does not fix it um but that is uh yeah the standard is over udp",
    "start": "1814640",
    "end": "1820960"
  },
  {
    "text": "um and the other standard is over tls",
    "start": "1820960",
    "end": "1824640"
  },
  {
    "text": "yes please",
    "start": "1827039",
    "end": "1830278"
  },
  {
    "text": "great great question uh the question is whether uh we've seen any evidence uh that this has been exploited in the wild",
    "start": "1833520",
    "end": "1841000"
  },
  {
    "text": "um this is a great question and uh we don't have the insight uh into figuring this out",
    "start": "1841000",
    "end": "1847320"
  },
  {
    "text": "um i think if companies have logs of the access um reject messages or accept",
    "start": "1847320",
    "end": "1855279"
  },
  {
    "text": "messages that were sent um they could in hindsight find out whether this attack was run or not on their infrastructure",
    "start": "1855279",
    "end": "1862240"
  },
  {
    "text": "we have not heard back um of everyone of anyone that this has been exploited in",
    "start": "1862240",
    "end": "1867679"
  },
  {
    "text": "the wild um but it would be detectable but i suspect that they might not keep this lock uh because it's sort of you",
    "start": "1867679",
    "end": "1875039"
  },
  {
    "text": "need to lock the entire raw packet to figure this out and not only um sort of some metadata um so no we don't know uh",
    "start": "1875039",
    "end": "1883440"
  },
  {
    "text": "if anyone has exploited this but if anyone of you knows i would",
    "start": "1883440",
    "end": "1890159"
  },
  {
    "text": "love to hear about [Laughter]",
    "start": "1890159",
    "end": "1894110"
  },
  {
    "text": "this it looks like we're out of question uh thank you very much for your attention and enjoy the rest of the",
    "start": "1901559",
    "end": "1907600"
  },
  {
    "text": "conference",
    "start": "1907600",
    "end": "1910600"
  }
]