[
  {
    "text": "so my name is Dino desi I'm the CTO and co-founder at capsule 8 wanted to make",
    "start": "89",
    "end": "5700"
  },
  {
    "text": "sure to start off by saying that this is a this is a group effort led by cap",
    "start": "5700",
    "end": "11370"
  },
  {
    "text": "Brandon Edwards the lead of our research team including great work by Russia cats called Bergy and Kent mAh",
    "start": "11370",
    "end": "17130"
  },
  {
    "text": "so this is a team effort even though I'm the only one up on stage I wanted to kind of tell you you know a little bit",
    "start": "17130",
    "end": "23010"
  },
  {
    "text": "about Who I am and how I approach this my background is in security assessment",
    "start": "23010",
    "end": "28109"
  },
  {
    "text": "and I've over my career I focused on different things I started focusing on client-side exploitation kind of in the",
    "start": "28109",
    "end": "35100"
  },
  {
    "text": "early 2000s a little early went spend a lot of time on Apple technologies including OS X and iOS and over the last",
    "start": "35100",
    "end": "42750"
  },
  {
    "text": "year and as you're in some change I returned to my roots in Linux and they",
    "start": "42750",
    "end": "48750"
  },
  {
    "text": "can look at all the cool stuff that's going on with containers and orchestrated environments and spent a lot of the last several months looking",
    "start": "48750",
    "end": "56340"
  },
  {
    "text": "at the security of these environments where they are today because we've talked to a lot of people and they are the adoption of these platforms is",
    "start": "56340",
    "end": "63030"
  },
  {
    "text": "growing very very rapidly and we've a lot of us have been in security long",
    "start": "63030",
    "end": "68340"
  },
  {
    "text": "enough to kind of know what happens when there is that sort of explosive growth so let's talk about a little bit about",
    "start": "68340",
    "end": "73380"
  },
  {
    "text": "what this is so common misconception I hear from some people is well all this",
    "start": "73380",
    "end": "78930"
  },
  {
    "text": "stuff is just about docker containers right it's like just that's all it is I don't see what the big deal is well not",
    "start": "78930",
    "end": "85500"
  },
  {
    "text": "quite there's a there's a lot more to the story and the metaphor that I normally use is of the the modern",
    "start": "85500",
    "end": "92759"
  },
  {
    "text": "assembly line and the era of mass production so when people focus overly on like just the container which is just",
    "start": "92759",
    "end": "99210"
  },
  {
    "text": "the artifact that you send to production it's sort of like trying to understand the the moving assembly line by the like",
    "start": "99210",
    "end": "106860"
  },
  {
    "text": "the conveyor system yes it's one it's an important part it's necessary but it's not sufficient to get all the benefits",
    "start": "106860",
    "end": "112799"
  },
  {
    "text": "of that efficiency you need fixed stations you need repeatable operations you need the workload to move to the",
    "start": "112799",
    "end": "119009"
  },
  {
    "text": "worker and so on and so when you're thinking about what the security of",
    "start": "119009",
    "end": "124170"
  },
  {
    "text": "these modern environments need to look broader than just the container and kind",
    "start": "124170",
    "end": "130020"
  },
  {
    "text": "of explain a little bit more about what that means first way to understand this is to",
    "start": "130020",
    "end": "135280"
  },
  {
    "text": "understand what people are trying to achieve out of it and what they're trying to achieve is a element of scale",
    "start": "135280",
    "end": "143170"
  },
  {
    "text": "and agility and velocity and way to measure that velocity is by the number",
    "start": "143170",
    "end": "148659"
  },
  {
    "text": "of deploys to production as a single variable that you can use to measure your efficiency and that's like a call",
    "start": "148659",
    "end": "154930"
  },
  {
    "text": "to fitness function and good anecdote about this I found on a medium post was a CTR a CEO of a well-known tech company",
    "start": "154930",
    "end": "162370"
  },
  {
    "text": "asked the CTO I've been asked to spend 15 minutes in President Obama to provide recommendations on how he should fix",
    "start": "162370",
    "end": "168280"
  },
  {
    "text": "healthcare.gov what would you say so how do you drill that down into one quick thing and the",
    "start": "168280",
    "end": "173500"
  },
  {
    "text": "CTO told them suggest the President Obama that the team should deploy to production every day and kind of the",
    "start": "173500",
    "end": "180040"
  },
  {
    "text": "genius of this statement is that it's a forcing function to do everything else that you need to do for high quality",
    "start": "180040",
    "end": "186669"
  },
  {
    "text": "engineering at high velocity you cannot sustainably deploy a production every",
    "start": "186669",
    "end": "192340"
  },
  {
    "text": "day without everything exploding unless you have all these other moving pieces and practices and those kind of force",
    "start": "192340",
    "end": "198190"
  },
  {
    "text": "you to do things like have small agile teams independent containers you know",
    "start": "198190",
    "end": "203549"
  },
  {
    "text": "various patterns of composition in order to get that continuous delivery of software and my thesis of what when",
    "start": "203549",
    "end": "210790"
  },
  {
    "text": "people are talking about DevOps they're talking about containers they're talking about a lot of the some of the tools or",
    "start": "210790",
    "end": "217090"
  },
  {
    "text": "techniques that are pieces of the picture what they really want is continuous delivery like that is the",
    "start": "217090",
    "end": "222189"
  },
  {
    "text": "real technology that is the real enabler that any company adopting any of these technologies really wants and everything",
    "start": "222189",
    "end": "228430"
  },
  {
    "text": "else should be in support of that and so what does it mean to have this continuous software delivery process you",
    "start": "228430",
    "end": "235180"
  },
  {
    "text": "need to adopt several key practices building a repeatable automated reliable",
    "start": "235180",
    "end": "240939"
  },
  {
    "text": "software for releasing or releasing software automate absolutely everything everything must be version controlled",
    "start": "240939",
    "end": "246489"
  },
  {
    "text": "and you should adopt practices where if something is painful like previously deploying to production was a painful",
    "start": "246489",
    "end": "253030"
  },
  {
    "text": "painstaking operation so what you do is you move it forward bring the pain forward to make it more efficient and so",
    "start": "253030",
    "end": "259150"
  },
  {
    "text": "by deploying production every day you make it more seamless and build quality throughout the process and the only time",
    "start": "259150",
    "end": "265120"
  },
  {
    "text": "you mean done is when it's actually released to a hundred percent of your users its rolled out and make sure that instead of having",
    "start": "265120",
    "end": "272900"
  },
  {
    "text": "the silos of developments operations and security everyone is involved in a",
    "start": "272900",
    "end": "278720"
  },
  {
    "text": "delivery process and I think as an industry we're trying to figure out what it means for security to fit into this",
    "start": "278720",
    "end": "284690"
  },
  {
    "text": "new way of doing engineering so there's words we haven't decided whether it's called SEC ops dev SEC ops",
    "start": "284690",
    "end": "289960"
  },
  {
    "text": "SEC def SEC OPSEC DevOps op SEC dev you know we're kind of trying every",
    "start": "289960",
    "end": "295370"
  },
  {
    "text": "permutation to explain what it means for security to not be an independent function that is a gate keeper rather a",
    "start": "295370",
    "end": "301580"
  },
  {
    "text": "piece of the process of a continuous delivery pipeline and focus on this continuous improvement these are the",
    "start": "301580",
    "end": "307849"
  },
  {
    "text": "things that when you adopt these practices you can actually have continuous delivery and orchestration and containers are very key components",
    "start": "307849",
    "end": "314599"
  },
  {
    "text": "of this so the container is just the software artifacts sent to production it's focusing too much on it is like you",
    "start": "314599",
    "end": "322280"
  },
  {
    "text": "know looking at the desktop the PC revolution and personal computing and thinking it's all about like the comm",
    "start": "322280",
    "end": "328009"
  },
  {
    "text": "file it's like yeah the basic executable is a piece of the puzzle but it's really a whole bunch of other things but you",
    "start": "328009",
    "end": "335360"
  },
  {
    "text": "know all a container really is is it's a reusable composable and suitably",
    "start": "335360",
    "end": "340580"
  },
  {
    "text": "abstracted from the environment piece of software and it allows you to just have a reproducible artifact that you can",
    "start": "340580",
    "end": "346909"
  },
  {
    "text": "develop test and ship to production and keep it all in version control when",
    "start": "346909",
    "end": "352190"
  },
  {
    "text": "you're using these at scale you need an orchestration it's just system to schedule their operation and schedule",
    "start": "352190",
    "end": "360020"
  },
  {
    "text": "the dynamically scheduled into nodes and also automatically handle rollover",
    "start": "360020",
    "end": "366560"
  },
  {
    "text": "you know rollouts failover scaling and this is actually one of the the key",
    "start": "366560",
    "end": "372500"
  },
  {
    "text": "points about orchestration systems is that they are a ideal place to implement",
    "start": "372500",
    "end": "377509"
  },
  {
    "text": "a lot of the security functionality that you need in your production environment because they are the software fabric",
    "start": "377509",
    "end": "383330"
  },
  {
    "text": "around everything and so what we'll see in let his environments is pushing more and more security into that so that you",
    "start": "383330",
    "end": "389690"
  },
  {
    "text": "don't have to influence security in every single application which is is",
    "start": "389690",
    "end": "394699"
  },
  {
    "text": "tedious and also very painstaking so my security thesis when I started this research was what I how I",
    "start": "394699",
    "end": "402590"
  },
  {
    "text": "approached a lot of things I think attackers are always looking for the new frontier to exploit while defenders are",
    "start": "402590",
    "end": "408349"
  },
  {
    "text": "still fighting the last war and so how I saw this pattern manifest itself in this",
    "start": "408349",
    "end": "414080"
  },
  {
    "text": "ecosystem or things like a an excessive amount of focus from security",
    "start": "414080",
    "end": "420680"
  },
  {
    "text": "practitioners on OS level container escapes focusing on kernel vulnerabilities focusing on these things",
    "start": "420680",
    "end": "427090"
  },
  {
    "text": "that kind of impedes looking a little broader and seeing just how exposed the",
    "start": "427090",
    "end": "434810"
  },
  {
    "text": "rest of the cluster level api's are from inside those containers because just looking at those escapes is like just",
    "start": "434810",
    "end": "441319"
  },
  {
    "text": "running a docker container on a single workstation and that's pretty much only in development not really where it matters in product as in production",
    "start": "441319",
    "end": "447770"
  },
  {
    "text": "another you know corollary I had going into this was that when you only focus",
    "start": "447770",
    "end": "453020"
  },
  {
    "text": "on the scope of an individual node like you're thinking about okay so how do I assess callate privileges how do i you",
    "start": "453020",
    "end": "459319"
  },
  {
    "text": "know install a rootkit on particular node in the cluster you also miss what",
    "start": "459319",
    "end": "464539"
  },
  {
    "text": "you can do at the entire cluster level because one of the patterns of these orchestrated environments is that nodes",
    "start": "464539",
    "end": "471020"
  },
  {
    "text": "can come and go they're torn up torn down and a lot of companies that are",
    "start": "471020",
    "end": "476719"
  },
  {
    "text": "using this type of new set of environments already they don't measure up time in terms of how long the systems",
    "start": "476719",
    "end": "483080"
  },
  {
    "text": "go I've been up they don't see that as a good thing they want to measure reverse uptime and basically take that number",
    "start": "483080",
    "end": "488690"
  },
  {
    "text": "down they want to have systems be short-lived ephemeral and have that pattern kind of a throughout every stack",
    "start": "488690",
    "end": "494750"
  },
  {
    "text": "or through every layer of their stack and the third thing I saw was that overly focusing on immutability of the",
    "start": "494750",
    "end": "503449"
  },
  {
    "text": "containers themselves and even the operating systems on the nodes misses a lot of weaknesses in where the",
    "start": "503449",
    "end": "512089"
  },
  {
    "text": "mutability of the contain of the cluster level state allows all the types of persistence that an attacker would want",
    "start": "512089",
    "end": "517820"
  },
  {
    "text": "so how a normal ego about things as I start with a an attack graph to kind of",
    "start": "517820",
    "end": "522828"
  },
  {
    "text": "figure out what the choice is an attacker would make and why in different environments so we start with the",
    "start": "522829",
    "end": "528529"
  },
  {
    "text": "assumption of we attacker obtains remote code execution in a container in a cluster in",
    "start": "528529",
    "end": "534860"
  },
  {
    "text": "one of these environments so that I'll just use shell shock as high-profile example but one of the things I've",
    "start": "534860",
    "end": "541070"
  },
  {
    "text": "noticed over the last few years is that the prevalence of remote command",
    "start": "541070",
    "end": "546380"
  },
  {
    "text": "injection vulnerabilities in a lot of you know popular Linux software is",
    "start": "546380",
    "end": "551570"
  },
  {
    "text": "pretty surprising and whereas unlike the Windows desktop world we're talking about you know",
    "start": "551570",
    "end": "557840"
  },
  {
    "text": "vulnerabilities that involve insane levels of heat manipulation and arcane",
    "start": "557840",
    "end": "563210"
  },
  {
    "text": "low-level techniques a lot of the attacks that are succeeding at a pretty impactful scale against production",
    "start": "563210",
    "end": "569600"
  },
  {
    "text": "environments are just shell metacharacter injection in the right place so shell shock you just put it in",
    "start": "569600",
    "end": "575570"
  },
  {
    "text": "a you know environment variable it gets passed to bash image tragic you have an image conversion routine that shells out",
    "start": "575570",
    "end": "582740"
  },
  {
    "text": "other of only bit similar vulnerabilities and go script it's I think as people start looking more at",
    "start": "582740",
    "end": "589250"
  },
  {
    "text": "this I'm gonna see a lot of more as a problem and so especially as we are rapidly taking less mature software",
    "start": "589250",
    "end": "596260"
  },
  {
    "text": "putting it in you know containers exposing it to the Internet and moving it through that cycle so this is my",
    "start": "596260",
    "end": "601790"
  },
  {
    "text": "starting point another traditional route of the official strategy is starting at",
    "start": "601790",
    "end": "608860"
  },
  {
    "text": "you know I have no you're looking for approaches its privilege escalation on the node get out of the container get",
    "start": "608860",
    "end": "614960"
  },
  {
    "text": "route and then see if I can persist on the cluster however that's not as useful as looking at other things where we can",
    "start": "614960",
    "end": "623510"
  },
  {
    "text": "say alright well look we instead of that look for lateral movement opportunities within the cluster directly and from",
    "start": "623510",
    "end": "630740"
  },
  {
    "text": "there we can look for privilege escalation within the you know at the cluster level and then cluster level",
    "start": "630740",
    "end": "636920"
  },
  {
    "text": "persistence and this is possible from you know just direct container remote",
    "start": "636920",
    "end": "642680"
  },
  {
    "text": "code execution privileged access to the node or somewhere that you've moved laterally to and it sort of shows that",
    "start": "642680",
    "end": "650390"
  },
  {
    "text": "that's the area that I think is the most important to focus on is from different",
    "start": "650390",
    "end": "656390"
  },
  {
    "text": "levels of access how can you escalate cluster level privileges so let's talk",
    "start": "656390",
    "end": "662920"
  },
  {
    "text": "a few of the various alternatives for registration systems I'll start with",
    "start": "662920",
    "end": "668139"
  },
  {
    "text": "docker swarm the so the service model",
    "start": "668139",
    "end": "674320"
  },
  {
    "text": "for docker swarm is oh I would call it the the least complex of the available",
    "start": "674320",
    "end": "682089"
  },
  {
    "text": "leading orchestration systems it is largely docker composed as a platform",
    "start": "682089",
    "end": "687970"
  },
  {
    "text": "and how it works is you have a service that is defined of of a container one or",
    "start": "687970",
    "end": "693579"
  },
  {
    "text": "more containers and swarm will schedule and scale it across available nodes as",
    "start": "693579",
    "end": "698620"
  },
  {
    "text": "tasks they will farm it out and manage a configured number of replicas so that if",
    "start": "698620",
    "end": "706120"
  },
  {
    "text": "one goes down another one is automatically restarted or you can also auto scale the number of replicas as well how this is implemented is through",
    "start": "706120",
    "end": "713829"
  },
  {
    "text": "a docker swarm or swarm mode of docker and there's two two types of nodes in",
    "start": "713829",
    "end": "720490"
  },
  {
    "text": "this configuration there are managers and there are workers much like our daily lives and the managers are all in",
    "start": "720490",
    "end": "727690"
  },
  {
    "text": "a a raft consensus group so there's a distributed key-value store essentially",
    "start": "727690",
    "end": "733810"
  },
  {
    "text": "this is a pattern you'll see on all these systems a distributed key-value store and kind of the masters and the",
    "start": "733810",
    "end": "740980"
  },
  {
    "text": "managers of the the orchestration use that to maintain a quorum and the actual cluster state among themselves and so",
    "start": "740980",
    "end": "747970"
  },
  {
    "text": "you'll always want a odd number of a manager nodes regardless of whether",
    "start": "747970",
    "end": "753760"
  },
  {
    "text": "using graft or whether you're using Paxos but this makes sure that the the cluster itself is consistent even if",
    "start": "753760",
    "end": "760360"
  },
  {
    "text": "there's network issues the all the the workers communicate over a gossip",
    "start": "760360",
    "end": "765370"
  },
  {
    "text": "network so you can primarily to manage the overlay virtual network across them and the one thing that you'll also",
    "start": "765370",
    "end": "775209"
  },
  {
    "text": "notice in kind of it's slightly different than traditional virtual machine based network architectures",
    "start": "775209",
    "end": "781779"
  },
  {
    "text": "where there's a very strict separation between control plane and data plane a lot of the orchestrators today combine",
    "start": "781779",
    "end": "789279"
  },
  {
    "text": "them on the same network fabric and they'll have overlay networks for the data plane but they'll go over the same",
    "start": "789279",
    "end": "795220"
  },
  {
    "text": "links and the to use TLS and various other encrypted protocols to protect the control plane",
    "start": "795220",
    "end": "801590"
  },
  {
    "text": "traffic so swarm actually does a really good job at this they spent a lot of",
    "start": "801590",
    "end": "807440"
  },
  {
    "text": "time on the security model and the security features and there's sort of the gold standard of orchestration",
    "start": "807440",
    "end": "814580"
  },
  {
    "text": "security today and how they how they work is the manager is a x.509 CA the",
    "start": "814580",
    "end": "820550"
  },
  {
    "text": "managers form x.509 CA for the entire swarm and they use this to implement",
    "start": "820550",
    "end": "826480"
  },
  {
    "text": "mutual authentication between all the control components between nodes between managers as well",
    "start": "826480",
    "end": "832670"
  },
  {
    "text": "and the data plane traffic by default is unencrypted however you can optionally",
    "start": "832670",
    "end": "838670"
  },
  {
    "text": "encrypt it and IPSec tunnels will be created between all the service",
    "start": "838670",
    "end": "844070"
  },
  {
    "text": "dependencies of your workload so container will only have access to the",
    "start": "844070",
    "end": "849260"
  },
  {
    "text": "links that you have declared so an app container will only have access to a database that you've declared not access",
    "start": "849260",
    "end": "854900"
  },
  {
    "text": "to over the network to talk to the manager is there anything else and another key artifact aspect of how",
    "start": "854900",
    "end": "862910"
  },
  {
    "text": "swarm model is implemented is that it is at least privileged design the the",
    "start": "862910",
    "end": "869120"
  },
  {
    "text": "containers themselves are always considered by default untrusted the nodes themselves that they run upon are",
    "start": "869120",
    "end": "875060"
  },
  {
    "text": "by default considered untrusted and they are only given a middle amount of",
    "start": "875060",
    "end": "881060"
  },
  {
    "text": "information to do their job so it's a kind of a it's a pretty good model in",
    "start": "881060",
    "end": "887150"
  },
  {
    "text": "addition to this this interacts most concretely with secrets where secrets",
    "start": "887150",
    "end": "892310"
  },
  {
    "text": "are taught you know what they sound like objects that are defined to likely passwords to whatever an apple need but",
    "start": "892310",
    "end": "898730"
  },
  {
    "text": "they're they're encrypted at rest throughout all of all docker swarm and they're only sent to nodes that have a",
    "start": "898730",
    "end": "906140"
  },
  {
    "text": "job that needs them rather than making them accessible to the entire cluster so",
    "start": "906140",
    "end": "911270"
  },
  {
    "text": "let you know if you look at what does what would something like shellshock being exploited look like on docker",
    "start": "911270",
    "end": "917060"
  },
  {
    "text": "swarm it's pretty uninteresting because you get a shell in the container the",
    "start": "917060",
    "end": "922550"
  },
  {
    "text": "attack surface is essentially all you get from a highly constrained container",
    "start": "922550",
    "end": "928280"
  },
  {
    "text": "on a single system and there's not light can do there's no API you can talk to there's no there's",
    "start": "928280",
    "end": "937700"
  },
  {
    "text": "just not a lot of avenues for lateral movement or anything like that so the",
    "start": "937700",
    "end": "943130"
  },
  {
    "text": "attacks that you lot want to do are largely scanning for scanning the data plane for other accessible services or",
    "start": "943130",
    "end": "950990"
  },
  {
    "text": "but that you have access to and try to SK privileges through there or traditional operating system level",
    "start": "950990",
    "end": "956570"
  },
  {
    "text": "container escapes and there's sort of a lot of other research being done there so that was something that while it's",
    "start": "956570",
    "end": "962870"
  },
  {
    "text": "important and necessary not the focus of this talk but one aspect that I did want",
    "start": "962870",
    "end": "971150"
  },
  {
    "text": "to highlight about how swarm works is in order to make it easy to use and allow",
    "start": "971150",
    "end": "977300"
  },
  {
    "text": "nodes especially in an environment like a cloud environment where you want to scale up and scale down seamlessly they",
    "start": "977300",
    "end": "983210"
  },
  {
    "text": "support joining the swarm with a single cryptographic token so this join token",
    "start": "983210",
    "end": "989110"
  },
  {
    "text": "automatically authorizes the node to join the swarm and doesn't require an",
    "start": "989110",
    "end": "994790"
  },
  {
    "text": "explicit approval or confirmation for each new node and the tokens themselves",
    "start": "994790",
    "end": "1003010"
  },
  {
    "text": "are not consumed they're easily easy to rotate they're easy to change and disabled and they're only needed when",
    "start": "1003010",
    "end": "1009730"
  },
  {
    "text": "this in the node joins the swarm never after the fact but there have a very",
    "start": "1009730",
    "end": "1017020"
  },
  {
    "text": "regular format so they're easy to find in source code which is a plus and a minus and easy to find in memory as well",
    "start": "1017020",
    "end": "1023980"
  },
  {
    "text": "so if an attacker is able to escalate privileges outside of the container and",
    "start": "1023980",
    "end": "1029709"
  },
  {
    "text": "gain you know gain route on the underlying host there's actually stuff they can do against swarm and so the",
    "start": "1029709",
    "end": "1037089"
  },
  {
    "text": "kind of a lot of the attacks go back to kind of 1990s style hacking with ARP",
    "start": "1037089",
    "end": "1042339"
  },
  {
    "text": "spoofing and denial of service at the network level and what you can do is",
    "start": "1042339",
    "end": "1047400"
  },
  {
    "text": "disable the network connectivity to legitimate worker nodes and a height",
    "start": "1047400",
    "end": "1053620"
  },
  {
    "text": "boosts essentially hijack their IP address however should note that you don't actually get their cryptographic",
    "start": "1053620",
    "end": "1058810"
  },
  {
    "text": "ident it just looks like a new node to swarm it looks like a new node at the same IP address because the cryptographic",
    "start": "1058810",
    "end": "1065059"
  },
  {
    "text": "identities assigned you know through a certificate that is granted through a CSR when you present the joint token so",
    "start": "1065059",
    "end": "1071090"
  },
  {
    "text": "by reusing the joint token you're just getting a new CSR while blocking the inter before using the same IP address",
    "start": "1071090",
    "end": "1076910"
  },
  {
    "text": "you're blocking the legitimate node and what this lets you do is you can proceed",
    "start": "1076910",
    "end": "1083780"
  },
  {
    "text": "to by blocking on legitimate nodes and taking up all the kind of the subnet you will be assigned all available services",
    "start": "1083780",
    "end": "1091760"
  },
  {
    "text": "all the apps running on the on the cluster because the the orchid are swarm will notice that they're no longer",
    "start": "1091760",
    "end": "1097309"
  },
  {
    "text": "reachable that need to be rescheduled and so they'll schedule you them all on your on your rogue node so let's see",
    "start": "1097309",
    "end": "1105470"
  },
  {
    "text": "what that looks like make sure this works so we have you know we're showing",
    "start": "1105470",
    "end": "1115520"
  },
  {
    "text": "both systems right now we're on the manager showing another layout of the of the environment we have two workers and",
    "start": "1115520",
    "end": "1120919"
  },
  {
    "text": "one manager a few database services running on the on this form and we can",
    "start": "1120919",
    "end": "1126559"
  },
  {
    "text": "see that they're they're all scheduled to run and they're running right now so now we're switching over to work or to",
    "start": "1126559",
    "end": "1132080"
  },
  {
    "text": "assuming that we have it you know escalated privileges broken out of the container and what we're gonna do is try",
    "start": "1132080",
    "end": "1137809"
  },
  {
    "text": "and find this join token and the easiest way to do it is if you have root access already is scrape it out of memory from",
    "start": "1137809",
    "end": "1144140"
  },
  {
    "text": "the docker process it's regular string it's easy to find and it is not scrubbed from memory currently so if the system",
    "start": "1144140",
    "end": "1152150"
  },
  {
    "text": "is still up after having joined the swarm you can recover it pretty easily and our attack uses that join token and",
    "start": "1152150",
    "end": "1160280"
  },
  {
    "text": "talks to the manager and implements this where we are proof the exhibit nodes to",
    "start": "1160280",
    "end": "1166490"
  },
  {
    "text": "the manager and so that they can't be assigned new jobs we can take all the",
    "start": "1166490",
    "end": "1171950"
  },
  {
    "text": "available identities and get all the services reassigned into our rogue nodes",
    "start": "1171950",
    "end": "1177320"
  },
  {
    "text": "and once that's done we will get the service secrets for those services sent",
    "start": "1177320",
    "end": "1183440"
  },
  {
    "text": "to us and so we can get all the database credentials we can get all the you know",
    "start": "1183440",
    "end": "1188990"
  },
  {
    "text": "whatever other secrets are are included in the you know for those jobs so I don't just",
    "start": "1188990",
    "end": "1197009"
  },
  {
    "text": "see that again there are several ways to mitigate this first is the I mentioned",
    "start": "1197009",
    "end": "1204659"
  },
  {
    "text": "earlier the join tokens are incredibly easy to rotate so they should be rotated frequently doctor recommends every six",
    "start": "1204659",
    "end": "1210629"
  },
  {
    "text": "months or on events such as disclosing it through checking into version control",
    "start": "1210629",
    "end": "1216269"
  },
  {
    "text": "pretty easy to run like git hooks that can actually detect this or you can use the github API to find that through your",
    "start": "1216269",
    "end": "1222090"
  },
  {
    "text": "repos so you can write a job that will search for this and anytime that happens boom just just expire the token or if",
    "start": "1222090",
    "end": "1231600"
  },
  {
    "text": "you have other reason to believe that a swarm node may have been compromised if you wish or you can also rotate it if",
    "start": "1231600",
    "end": "1237330"
  },
  {
    "text": "you want to guarantee that no new nodes can join the system however when you do this you're preventing this swarm from",
    "start": "1237330",
    "end": "1243869"
  },
  {
    "text": "auto-scaling up new nodes and if you're using like an auto scaling group in something like AWS this might not be",
    "start": "1243869",
    "end": "1249720"
  },
  {
    "text": "desirable or minimum at every six months one of the kind of most important things to do however to mitigate this are to",
    "start": "1249720",
    "end": "1256320"
  },
  {
    "text": "use node and service labels to segregates sensitive services so swarm",
    "start": "1256320",
    "end": "1261509"
  },
  {
    "text": "lets you designate certain services is sensitive or just using labels and nose",
    "start": "1261509",
    "end": "1266759"
  },
  {
    "text": "is sensitive as well and this is all kept in the manager State and even a rogue node cannot give itself a label so",
    "start": "1266759",
    "end": "1273450"
  },
  {
    "text": "when we perform an attack like this we will be essentially an unlabeled node and so we'll only get access to",
    "start": "1273450",
    "end": "1278809"
  },
  {
    "text": "unlabeled services so this requires that you go through and actually you know do",
    "start": "1278809",
    "end": "1285960"
  },
  {
    "text": "all that so that's that's swarm let's talk about kubernetes so kubernetes is",
    "start": "1285960",
    "end": "1293809"
  },
  {
    "text": "one of the largest most active open source projects right now it's pretty",
    "start": "1293809",
    "end": "1299369"
  },
  {
    "text": "startling how active it isn't how fast it's growing this chart I took from a",
    "start": "1299369",
    "end": "1305639"
  },
  {
    "text": "blog post from the cloud native computing foundation shows on the on the",
    "start": "1305639",
    "end": "1310799"
  },
  {
    "text": "Left logarithmic PRS and issues and going to the right logarithmic because our going up is PRS going to the right",
    "start": "1310799",
    "end": "1317999"
  },
  {
    "text": "is a number of commits so you can see that even though kubernetes is a relatively young project has a massive",
    "start": "1317999",
    "end": "1323700"
  },
  {
    "text": "amount of activity in you know PRS and issues and it's moving quickly started moving up moving",
    "start": "1323700",
    "end": "1329649"
  },
  {
    "text": "quickly to the right towards Linux and chromium so it's there's a lot of",
    "start": "1329649",
    "end": "1334869"
  },
  {
    "text": "activity and it's actually pretty remarkable how many large companies have full-time engineers contributing to this",
    "start": "1334869",
    "end": "1340929"
  },
  {
    "text": "this project and you can kind of see where all this is going so while swarm",
    "start": "1340929",
    "end": "1347110"
  },
  {
    "text": "was easy to understand kubernetes is a bit more complicated and the complexity",
    "start": "1347110",
    "end": "1355720"
  },
  {
    "text": "of it is actually a lot of the benefits because for a lot of modern services the",
    "start": "1355720",
    "end": "1362350"
  },
  {
    "text": "model of the service model that is implemented in docker swarm may not be sufficient so the architecture let's go",
    "start": "1362350",
    "end": "1370509"
  },
  {
    "text": "quickly over the architecture of kubernetes it starts with you know you have a again like a central key",
    "start": "1370509",
    "end": "1378159"
  },
  {
    "text": "distributed key-value store in kubernetes this is called Etsy D and this is simply the backing store for all",
    "start": "1378159",
    "end": "1385809"
  },
  {
    "text": "state for the cluster in front of that you have API servers that implement this",
    "start": "1385809",
    "end": "1391990"
  },
  {
    "text": "you know an interface to the scheduling and and operations of the cluster and",
    "start": "1391990",
    "end": "1397659"
  },
  {
    "text": "each node runs an entity called the couplet couplet is you know it presents",
    "start": "1397659",
    "end": "1403269"
  },
  {
    "text": "its own API locally but it also or that the kubernetes master will speak to and",
    "start": "1403269",
    "end": "1408759"
  },
  {
    "text": "is it responsible for scheduling and running actual containers on the node and in kubernetes these are called pods",
    "start": "1408759",
    "end": "1414639"
  },
  {
    "text": "you don't run a single container you run a pod that has you know the kind of",
    "start": "1414639",
    "end": "1420940"
  },
  {
    "text": "forms the Nate the Linux namespace and multiple containers run concurrently in it and kubernetes is a very abstract",
    "start": "1420940",
    "end": "1428279"
  },
  {
    "text": "architecture there's multiple plugins to implement various features so you have a declarative API saying I have in this",
    "start": "1428279",
    "end": "1435009"
  },
  {
    "text": "network policy that I want to happen and there's multiple plugins that you can use to implement that so you'll have",
    "start": "1435009",
    "end": "1442029"
  },
  {
    "text": "things like we've calico and so on to implement these policies that you've declared I'll go briefly over some of",
    "start": "1442029",
    "end": "1449259"
  },
  {
    "text": "the objects that's going to show the scope of what kubernetes actually lets permits you to do so we have nodes and",
    "start": "1449259",
    "end": "1456340"
  },
  {
    "text": "containers pretty obvious I mentioned pods but we also have entities like a namespace we",
    "start": "1456340",
    "end": "1461580"
  },
  {
    "text": "have multiple namespaces so that you can partition out your cluster to different groups and different teams using the",
    "start": "1461580",
    "end": "1468960"
  },
  {
    "text": "same hardware and they're not able to and if you configure things correctly not able to see or interact with",
    "start": "1468960",
    "end": "1475440"
  },
  {
    "text": "entities outside of their namespace so what some people or some environments would use something like this for is to",
    "start": "1475440",
    "end": "1481830"
  },
  {
    "text": "have their production their development you know test staging and production",
    "start": "1481830",
    "end": "1486960"
  },
  {
    "text": "environments on the same hardware however in separate namespaces so you can ratite it can achieve a lower cost",
    "start": "1486960",
    "end": "1492870"
  },
  {
    "text": "and greater scale doing that and just using namespaces to isolate rather than separate hardware and you can also apply",
    "start": "1492870",
    "end": "1499710"
  },
  {
    "text": "the resource constraints to a namespace so you can make sure that jobs that the",
    "start": "1499710",
    "end": "1505200"
  },
  {
    "text": "data science team is doing that might be CPU heavy are not interfering with the latency-sensitive production jobs",
    "start": "1505200",
    "end": "1511260"
  },
  {
    "text": "serving you know for internet services pods all communicate internally through",
    "start": "1511260",
    "end": "1517080"
  },
  {
    "text": "what is called a service service is a virtual IP that allows communication",
    "start": "1517080",
    "end": "1523280"
  },
  {
    "text": "between pods so that's how you'll you'll find each other and and communicate",
    "start": "1523280",
    "end": "1528530"
  },
  {
    "text": "replication controllers are just one of the many other Metapod abstractions that let you scale services up and down and",
    "start": "1528530",
    "end": "1537140"
  },
  {
    "text": "ingress is kind of my favorite which lets you route HTTP requests based on",
    "start": "1537140",
    "end": "1543500"
  },
  {
    "text": "based on path and and host to arbitrary services and pods so you can have you",
    "start": "1543500",
    "end": "1549480"
  },
  {
    "text": "know one hostname that gets basically farmed out to various things inside your cluster this is relatively new in",
    "start": "1549480",
    "end": "1556050"
  },
  {
    "text": "kubernetes but it gives you a lot of functionality that is really useful so the the security mechanisms of",
    "start": "1556050",
    "end": "1562290"
  },
  {
    "text": "kubernetes are being very rapidly developed and it's just about every most",
    "start": "1562290",
    "end": "1569160"
  },
  {
    "text": "of things i'm going to talk about are you know less than are either alpha or beta or less than a month old so the",
    "start": "1569160",
    "end": "1577500"
  },
  {
    "text": "first most important one that if you don't have your entire cluster is",
    "start": "1577500",
    "end": "1583410"
  },
  {
    "text": "essentially one security domain regardless of the user permissions inside a container if you follow like the docker",
    "start": "1583410",
    "end": "1589360"
  },
  {
    "text": "hardening guidelines they don't really matter when you have no are back enabled",
    "start": "1589360",
    "end": "1594789"
  },
  {
    "text": "on a kubernetes cluster only incriminate is one point six in greater is it enabled by default however a lot of",
    "start": "1594789",
    "end": "1602230"
  },
  {
    "text": "installations and guides don't work with it enabled so you if you're trying to",
    "start": "1602230",
    "end": "1607239"
  },
  {
    "text": "install packages from things like helm they may not work with our back so a lot of people are still turning it off",
    "start": "1607239",
    "end": "1613409"
  },
  {
    "text": "another key component that you want to make sure you have enabled is the pod security policy admission controller so",
    "start": "1613409",
    "end": "1620799"
  },
  {
    "text": "this is the entity that runs in the on the masternodes that will enforce security requirements",
    "start": "1620799",
    "end": "1627429"
  },
  {
    "text": "like not letting anyone execute a privileged note you know in one of these",
    "start": "1627429",
    "end": "1633669"
  },
  {
    "text": "you can declare in Cleburne eighties is i want to run a privileged pod i want to run this pod but i want to give it you know full host privileges what i wanted",
    "start": "1633669",
    "end": "1640210"
  },
  {
    "text": "to give it access to the host network all these things are disabled by the pod security policy and this is something",
    "start": "1640210",
    "end": "1646929"
  },
  {
    "text": "that was contributed to kubernetes effort developed first in red hat's OpenShift and then contribute upstream",
    "start": "1646929",
    "end": "1653350"
  },
  {
    "text": "to open source kubernetes and one thing i wanted to clarify is that most of",
    "start": "1653350",
    "end": "1659019"
  },
  {
    "text": "something talking about is all open source kubernetes and there are commercial distributions it's like you",
    "start": "1659019",
    "end": "1665259"
  },
  {
    "text": "know like red hats openshift core OS tectonic google container engine but there's a lot of activity happening",
    "start": "1665259",
    "end": "1671859"
  },
  {
    "text": "and open so any open source distributions and installers that are describing them as production grade production ready that aren't as explicit",
    "start": "1671859",
    "end": "1679989"
  },
  {
    "text": "about how many of the security features aren't enabled or in existence that you",
    "start": "1679989",
    "end": "1685929"
  },
  {
    "text": "would want if you don't want your entire closure to be one security domain so the other one is the node restriction and mission controller this is a very very",
    "start": "1685929",
    "end": "1693639"
  },
  {
    "text": "new this I think it's alpha right now prevents couplets from obtaining",
    "start": "1693639",
    "end": "1700090"
  },
  {
    "text": "resources for pods that are not scheduled onto them similar to Dockers",
    "start": "1700090",
    "end": "1705220"
  },
  {
    "text": "least privilege architecture and there's also Network policy resources which allows you to apply isolation",
    "start": "1705220",
    "end": "1711609"
  },
  {
    "text": "segmentation so that your workloads can be segregated however one thing that I would point out is that this doesn't",
    "start": "1711609",
    "end": "1716859"
  },
  {
    "text": "actually fully let you control segregation from the control plane",
    "start": "1716859",
    "end": "1722800"
  },
  {
    "text": "so a lot of the couplet the master API are not actually restricted by these so",
    "start": "1722800",
    "end": "1730270"
  },
  {
    "text": "the let's go into the attack surface if you get code execution and equipment and a pod in a kubernetes environment the",
    "start": "1730270",
    "end": "1741450"
  },
  {
    "text": "most surprising thing that I noticed and I was so pretty surprised by every pod",
    "start": "1741450",
    "end": "1748600"
  },
  {
    "text": "by default has access to a service account token mounted into the pod so even if you you know don't build this",
    "start": "1748600",
    "end": "1754720"
  },
  {
    "text": "into your container its injected by the orchestrator and this token gives you your and you know even unprivileged",
    "start": "1754720",
    "end": "1760450"
  },
  {
    "text": "users inside the inside the container of cluster level privileges and without our",
    "start": "1760450",
    "end": "1766450"
  },
  {
    "text": "back that's cluster level root token is word readable and the the service",
    "start": "1766450",
    "end": "1773230"
  },
  {
    "text": "account lets you do just about anything like launch new pods launching privileged pods and you can do all this",
    "start": "1773230",
    "end": "1778690"
  },
  {
    "text": "the other model that is kind of unique to kubernetes is that the service model is implemented like the service virtual",
    "start": "1778690",
    "end": "1786100"
  },
  {
    "text": "IP ease and load balancing are implemented on the node not in some central infrastructure so it makes it",
    "start": "1786100",
    "end": "1793510"
  },
  {
    "text": "really fast to scan service VIPs because they're just going through like local IP",
    "start": "1793510",
    "end": "1799270"
  },
  {
    "text": "tables configurations so if you want to do that you know it's pretty easy to",
    "start": "1799270",
    "end": "1807070"
  },
  {
    "text": "find what the service subnet is you'll have an environment variable kubernetes service host that is a service IP that",
    "start": "1807070",
    "end": "1813460"
  },
  {
    "text": "gives you the the host the IP address of the kubernetes master api and so you can",
    "start": "1813460",
    "end": "1819910"
  },
  {
    "text": "just port scan this the subnet for well-known ports look for services to actually interact with another way you",
    "start": "1819910",
    "end": "1827080"
  },
  {
    "text": "can do this is just looking through service names in Kubb dns Kubb dns is",
    "start": "1827080",
    "end": "1832120"
  },
  {
    "text": "the clustered dns service that allows service discovery so you can query for common service name namespace SVC",
    "start": "1832120",
    "end": "1839410"
  },
  {
    "text": "cluster dot local so for instance if you didn't have the IP address for the that environment variable you could just do a",
    "start": "1839410",
    "end": "1845440"
  },
  {
    "text": "DNS lookup through kubernetes not default default is the default namespace SVC cluster a local to get the",
    "start": "1845440",
    "end": "1851620"
  },
  {
    "text": "kubernetes api servers so let's you know see what",
    "start": "1851620",
    "end": "1857090"
  },
  {
    "text": "shellshock looks like if you exploited on kubernetes so exploits shellshock in",
    "start": "1857090",
    "end": "1862310"
  },
  {
    "text": "a vulnerable container next thing an attacker will do is download some tools so one thing they also might be going",
    "start": "1862310",
    "end": "1869120"
  },
  {
    "text": "through your mind is how much this sounds like the common pattern of attacking a Windows desktop you know a",
    "start": "1869120",
    "end": "1874490"
  },
  {
    "text": "lot of you get initial access and then download something like me me cats and then lateral pros escalation these same",
    "start": "1874490",
    "end": "1881630"
  },
  {
    "text": "patterns are actually available at the cluster level so we're gonna kind of go through that same same flow so download",
    "start": "1881630",
    "end": "1887120"
  },
  {
    "text": "a common tool not-not-not a piece of malware just coop CTL the standard tool to interface with the API and use the",
    "start": "1887120",
    "end": "1894980"
  },
  {
    "text": "service account token to authenticate to the API servers and you can adjust escalate privileges through calls the",
    "start": "1894980",
    "end": "1900260"
  },
  {
    "text": "kubernetes api or scan for something useful so i'm picking on one particular service here the tiller deployment",
    "start": "1900260",
    "end": "1908150"
  },
  {
    "text": "service i'll talk a little bit more about what tiller is in a minute so let's look at the environment that you get from a shell inside the container",
    "start": "1908150",
    "end": "1914300"
  },
  {
    "text": "that's specific to kubernetes you have all these environment variables giving you the API server which I mentioned",
    "start": "1914300",
    "end": "1920420"
  },
  {
    "text": "before if you look at the mount points you can see that the secrets are",
    "start": "1920420",
    "end": "1926270"
  },
  {
    "text": "typically mounted as in to the filesystem and by default that service account token is is mounted into the",
    "start": "1926270",
    "end": "1932630"
  },
  {
    "text": "container and using that token with a you know with a downloaded coop CTL or",
    "start": "1932630",
    "end": "1938360"
  },
  {
    "text": "some other client we can start interfacing with the API we can talk to you know list the nodes and Val verify",
    "start": "1938360",
    "end": "1946160"
  },
  {
    "text": "that we have some level of access and then we can see if we have more access by launching a privileged pot so the",
    "start": "1946160",
    "end": "1953750"
  },
  {
    "text": "example I give is just a command-line invocation that will create a new pod and of running the busybox container why",
    "start": "1953750",
    "end": "1961370"
  },
  {
    "text": "busybox because it's it's small it's quick to download and has you know a lot of useful shell tools and I'm giving it",
    "start": "1961370",
    "end": "1968900"
  },
  {
    "text": "a security context of privileged equals true so just means we have root on the",
    "start": "1968900",
    "end": "1974330"
  },
  {
    "text": "node from this one call to the API and if you don't have our back enabled on your cluster or you're running",
    "start": "1974330",
    "end": "1980540"
  },
  {
    "text": "essentially running kubernetes below 1.6 this is what is possible from just about any container so assuming that that is",
    "start": "1980540",
    "end": "1989720"
  },
  {
    "text": "fixed you know that you're running either a commercial distribution of kubernetes that has addressed this you've adjusted yourself for something else there's",
    "start": "1989720",
    "end": "1997440"
  },
  {
    "text": "other a lot of other lack of authentication inside the cluster so one popular way to install software in",
    "start": "1997440",
    "end": "2003590"
  },
  {
    "text": "kubernetes environments today is called helm it is the official package manager for kubernetes and it's actually really",
    "start": "2003590",
    "end": "2010970"
  },
  {
    "text": "cool because what it lets you do is have essentially an app store for your cluster so you can install complicated",
    "start": "2010970",
    "end": "2018380"
  },
  {
    "text": "infrastructure such as you know spark you can install you know Kafka you can",
    "start": "2018380",
    "end": "2024320"
  },
  {
    "text": "install Cassandra application you know datacenter applications that traditionally require entire teams to",
    "start": "2024320",
    "end": "2029990"
  },
  {
    "text": "operate can now be installed with like a click of a button and there's software operators inside communities that will",
    "start": "2029990",
    "end": "2035750"
  },
  {
    "text": "even scale them automatically for you so it's it's pretty awesome but they just",
    "start": "2035750",
    "end": "2042140"
  },
  {
    "text": "haven't implemented anything any access control yet or it's just not enable it's I think it's yeah there's an open github",
    "start": "2042140",
    "end": "2048950"
  },
  {
    "text": "ticket to actually enable it so if you want if you're have a shell on a cluster",
    "start": "2048950",
    "end": "2054470"
  },
  {
    "text": "you can just look for the what's called the tiller deploy service it's the way that helm is built is you have the helm",
    "start": "2054470",
    "end": "2059990"
  },
  {
    "text": "command line and in order to start using it you need to deploy a privilege service inside the inside your cluster",
    "start": "2059990",
    "end": "2066440"
  },
  {
    "text": "to actually perform the package installations that's called tiller so if you do a coop",
    "start": "2066440",
    "end": "2072770"
  },
  {
    "text": "DNS lookup for tiller deploy coop that Kubb - system so coop - system is the",
    "start": "2072770",
    "end": "2078770"
  },
  {
    "text": "system namespace the default port for it is four four one three four and you can connect to it and so there's not a good",
    "start": "2078770",
    "end": "2086480"
  },
  {
    "text": "command-line client for it so I just wrote a quick one it's a G RPC interface all the code is",
    "start": "2086480",
    "end": "2092659"
  },
  {
    "text": "on github so it's just very easy to to write stuff to interact with if you know",
    "start": "2092660",
    "end": "2097820"
  },
  {
    "text": "how to write G RPC clients and then you can do everything the helm command line can do from inside the cluster you can",
    "start": "2097820",
    "end": "2103640"
  },
  {
    "text": "install packages query them uninstall them so because it runs a privilege and all the packages that you're installing",
    "start": "2103640",
    "end": "2109520"
  },
  {
    "text": "have to have privileges even if you have something like a pod admission controller or pod security policy you're",
    "start": "2109520",
    "end": "2115520"
  },
  {
    "text": "like they're likely going to have have to enable tiller to be able to bypass",
    "start": "2115520",
    "end": "2120950"
  },
  {
    "text": "that so you can just talk to tiller instead the kind of drilling down some of my key",
    "start": "2120950",
    "end": "2127730"
  },
  {
    "text": "recommendations for securing kubernetes environments first and foremost make sure that our back is enabled and configured",
    "start": "2127730",
    "end": "2133250"
  },
  {
    "text": "appropriately that's sort of one of those loaded statements of like just turn on security there's actually a lot",
    "start": "2133250",
    "end": "2138860"
  },
  {
    "text": "that goes into this because there's still a bunch of sharp edges in the",
    "start": "2138860",
    "end": "2144500"
  },
  {
    "text": "security policies of kubernetes objects so for instance if you have a writable if you have access to write into a",
    "start": "2144500",
    "end": "2150740"
  },
  {
    "text": "namespace and even if you have a pod security controller that doesn't allow",
    "start": "2150740",
    "end": "2155990"
  },
  {
    "text": "you to create privileged pods but a privileged pod is already running you can create services too early have a pod",
    "start": "2155990",
    "end": "2162590"
  },
  {
    "text": "that's running on the host network you can create services to route onto the host network and once you have you know",
    "start": "2162590",
    "end": "2167750"
  },
  {
    "text": "a host network access privileges escalation is pretty easy through a variety of ways so right now am I kind",
    "start": "2167750",
    "end": "2175040"
  },
  {
    "text": "of if you know even with our back enabled having right access to a namespace with any privileged pods is",
    "start": "2175040",
    "end": "2181550"
  },
  {
    "text": "pretty quiet game over but it's it's you know one step away you absolutely need",
    "start": "2181550",
    "end": "2187100"
  },
  {
    "text": "to have a pod security policy configured if you are if you do if you are letting",
    "start": "2187100",
    "end": "2193610"
  },
  {
    "text": "any jobs like automatic or continuous deployment jobs at the plate of the cluster or think of developers access to",
    "start": "2193610",
    "end": "2199370"
  },
  {
    "text": "deploy to the cluster applauded security policy is crucial also something that I was surprised to see disabled more than",
    "start": "2199370",
    "end": "2207380"
  },
  {
    "text": "I'd expect was the couplet and who knows masters API is not having TLS",
    "start": "2207380",
    "end": "2213650"
  },
  {
    "text": "certificate authentication enabled and that just basically gives you route to",
    "start": "2213650",
    "end": "2218900"
  },
  {
    "text": "the cluster and even some open source kind of installers for kubernetes they",
    "start": "2218900",
    "end": "2225200"
  },
  {
    "text": "would not enable this on at CD so if they enabled certificate authentication on the API servers however you can",
    "start": "2225200",
    "end": "2231770"
  },
  {
    "text": "connect to the sed key value store which if you can connect and there's no space Toft enabled you just have full access",
    "start": "2231770",
    "end": "2238040"
  },
  {
    "text": "to read and write the state directly and that's good privileges that way so that's pretty simple stuff they need to",
    "start": "2238040",
    "end": "2244040"
  },
  {
    "text": "make sure it's all there also the node Oh threatened the node authorizer which is beta right now just released to",
    "start": "2244040",
    "end": "2252230"
  },
  {
    "text": "google container engine I think this month can restrict couplets access to",
    "start": "2252230",
    "end": "2257890"
  },
  {
    "text": "resources that are not scheduled or not belonging to a pod schedule to them and also there are multiple network provider",
    "start": "2257890",
    "end": "2265090"
  },
  {
    "text": "policy Network policy providers such as you know see Liam calico that you can",
    "start": "2265090",
    "end": "2271960"
  },
  {
    "text": "use to implement the network policy API so that you can apply access control list to services so that not every",
    "start": "2271960",
    "end": "2277270"
  },
  {
    "text": "service is globally accessible through the cluster this is you know if you're noticing that there's a this slide is a",
    "start": "2277270",
    "end": "2284620"
  },
  {
    "text": "lot of work to implement in your environment that's sort of where open-source criminais T's is today",
    "start": "2284620",
    "end": "2290170"
  },
  {
    "text": "it's it's sort of it feels a little like the early days of Linux but if it didn't",
    "start": "2290170",
    "end": "2296830"
  },
  {
    "text": "if everyone was root you know on your system for the first several years and they're like gabble will implement that",
    "start": "2296830",
    "end": "2303040"
  },
  {
    "text": "security model a little later so but there's it exists it just takes a lot of bootstrapping or using a commercial",
    "start": "2303040",
    "end": "2310240"
  },
  {
    "text": "version of kubernetes that actually has it all done for you so let's talk about the a call it the quiet giant this is d",
    "start": "2310240",
    "end": "2318250"
  },
  {
    "text": "cos and mezzos it's the environment that you don't really hear much about but",
    "start": "2318250",
    "end": "2323590"
  },
  {
    "text": "it's the one that can the only one that can scale to hundreds of thousands of nodes so it's in some very large very",
    "start": "2323590",
    "end": "2330670"
  },
  {
    "text": "large environments it's a similar pattern to the other systems we have a",
    "start": "2330670",
    "end": "2336490"
  },
  {
    "text": "distributed key-value store this one is called this one is a zookeeper which is used for Kafka and a variety of other",
    "start": "2336490",
    "end": "2341800"
  },
  {
    "text": "internet scale services and kind of it's a bit more complicated than kubernetes",
    "start": "2341800",
    "end": "2348010"
  },
  {
    "text": "in that you have two levels of scheduling implemented by well first you",
    "start": "2348010",
    "end": "2353920"
  },
  {
    "text": "have mais dos which is a two-level scheduler and then you have what are called frameworks on top of it that can schedule cluster resources to some other",
    "start": "2353920",
    "end": "2360490"
  },
  {
    "text": "some other way if you're running like a large Cassandra cluster you might be using directs Bezos but a lot of people",
    "start": "2360490",
    "end": "2368590"
  },
  {
    "text": "use marathon to schedule containers and there's a massive suite of stuff they",
    "start": "2368590",
    "end": "2374110"
  },
  {
    "text": "also have an app store like thing called universe but one thing that is pretty",
    "start": "2374110",
    "end": "2379630"
  },
  {
    "text": "explicit on the mesosphere website is that batteries are not included the security features exist only in the",
    "start": "2379630",
    "end": "2385690"
  },
  {
    "text": "commercial DC OS and there's by default containers run on the",
    "start": "2385690",
    "end": "2391660"
  },
  {
    "text": "host plane those are the host Network so any containers schedule has full access to the host you can connect to a lot of",
    "start": "2391660",
    "end": "2397089"
  },
  {
    "text": "services right there and I've seen a lot of configurations where zookeeper has no",
    "start": "2397089",
    "end": "2403119"
  },
  {
    "text": "authentication enabled so it's send a look at what shellshock looks like there the container environment you can get",
    "start": "2403119",
    "end": "2409180"
  },
  {
    "text": "your host the host IP is pretty easily of the you know the control plane and",
    "start": "2409180",
    "end": "2415170"
  },
  {
    "text": "you can actually talk to it you know it directly and dump the state and get you",
    "start": "2415170",
    "end": "2422589"
  },
  {
    "text": "know the authentication settings and in this example you can see that there's no authentication actually enabled or required so that means we can launch",
    "start": "2422589",
    "end": "2428789"
  },
  {
    "text": "jobs on the node without authentication we can also connect to the master and and do the same but sort of the more",
    "start": "2428789",
    "end": "2438039"
  },
  {
    "text": "most fun one is just talking directly to zookeeper so you can inside the cluster",
    "start": "2438039",
    "end": "2445029"
  },
  {
    "text": "all the zookeeper instances or you can look up through mezzos DNS at Z k1",
    "start": "2445029",
    "end": "2450069"
  },
  {
    "text": "through z k5 and usually the zookeeper client is a large Java package but I",
    "start": "2450069",
    "end": "2455349"
  },
  {
    "text": "just wrote one and go and you can just talk directly to it and crawl through it and get things like the the auth token",
    "start": "2455349",
    "end": "2462039"
  },
  {
    "text": "secret which is used for all the JWT tokens and then from there you can just",
    "start": "2462039",
    "end": "2467079"
  },
  {
    "text": "mint your own authorization tokens and do whatever you want forever so it's",
    "start": "2467079",
    "end": "2472180"
  },
  {
    "text": "cool so tools that I made to do this I didn't really currently think of a good",
    "start": "2472180",
    "end": "2477309"
  },
  {
    "text": "name so going with crispy tribble for now it is a container image for",
    "start": "2477309",
    "end": "2483880"
  },
  {
    "text": "assessing orchestrated environments you just launched it it has a built in go",
    "start": "2483880",
    "end": "2489220"
  },
  {
    "text": "ssh server so you can just ssh in see that kind of directing that kind of raw environment and has a variety of tools",
    "start": "2489220",
    "end": "2496630"
  },
  {
    "text": "for inspecting what is going on inside the cluster so you have coop CTL at CD CTL to command small command-line tools",
    "start": "2496630",
    "end": "2505239"
  },
  {
    "text": "they wrote called just one called tiller and one called zk to talk to these services and do with it are basically",
    "start": "2505239",
    "end": "2511960"
  },
  {
    "text": "just perform operations on them and when there's no authentication required and background on the name if you just",
    "start": "2511960",
    "end": "2519309"
  },
  {
    "text": "create a project on github it says don't have any not feeling inspired try this one and it said crispy Tribble I was like alright",
    "start": "2519309",
    "end": "2524769"
  },
  {
    "text": "yeah that'll work so kind of high-level takeaways I want people to kind of take",
    "start": "2524769",
    "end": "2531089"
  },
  {
    "text": "you know remember from this is that sadly the open-source distributions of",
    "start": "2531089",
    "end": "2538109"
  },
  {
    "text": "commodities and and mezzos and D cos don't have all the security features",
    "start": "2538109",
    "end": "2543460"
  },
  {
    "text": "enabled they don't have them implemented in some cases and so if you're not",
    "start": "2543460",
    "end": "2549460"
  },
  {
    "text": "prepared to go through a lot of work and a lot of learning curve like I spent probably two to three months learning",
    "start": "2549460",
    "end": "2555640"
  },
  {
    "text": "kubernetes this year because I actually ran our kubernetes cluster for the first part of the year there's a lot you're",
    "start": "2555640",
    "end": "2562359"
  },
  {
    "text": "gonna have to get working to have reasonable level of security and that just means not having you know root root",
    "start": "2562359",
    "end": "2569740"
  },
  {
    "text": "for it within every container on the entire cluster and but they're moving",
    "start": "2569740",
    "end": "2575109"
  },
  {
    "text": "pretty quickly to you have all these features you know imagine API authentication control plane and data",
    "start": "2575109",
    "end": "2581769"
  },
  {
    "text": "plane separation is actually a little farther out actual workload isolation s2s authentication and authorization and",
    "start": "2581769",
    "end": "2589359"
  },
  {
    "text": "a zero trust networking model so that even if the you know control plant or data plane physical networks are",
    "start": "2589359",
    "end": "2594940"
  },
  {
    "text": "compromised it's not an issue and also a least privileged orchestration model and",
    "start": "2594940",
    "end": "2600849"
  },
  {
    "text": "they're moving pretty quickly to this but it's Walt may be like while a lot of the open source systems will say the",
    "start": "2600849",
    "end": "2606970"
  },
  {
    "text": "production ready production grade make sure all these are are enabled in it otherwise you're better off with the",
    "start": "2606970",
    "end": "2613239"
  },
  {
    "text": "commercial version so far but one of the things they'll be interesting for us as a security industry to watch is that you",
    "start": "2613239",
    "end": "2619059"
  },
  {
    "text": "know while we're what what I'm seeing in kind of the desktop ecosystem is a lot more solidification of an restriction of",
    "start": "2619059",
    "end": "2626140"
  },
  {
    "text": "what's possible on devices as everything becomes like a mobile device its firmware you can install apps that's all you can do in order for people to even",
    "start": "2626140",
    "end": "2633849"
  },
  {
    "text": "just move and implement functionality has to go somewhere and so I think what's going to happen is we're gonna",
    "start": "2633849",
    "end": "2639400"
  },
  {
    "text": "see all that flexibility go on to the cost into people's data center is because environments like kubernetes and",
    "start": "2639400",
    "end": "2645309"
  },
  {
    "text": "like App Store like installation of complicated infrastructure will remove the barriers to entry and we're gonna",
    "start": "2645309",
    "end": "2652059"
  },
  {
    "text": "see a Android ecosystem like scenario in data",
    "start": "2652059",
    "end": "2657130"
  },
  {
    "text": "centers because of this and it'll be it'll be interesting and one of the",
    "start": "2657130",
    "end": "2665049"
  },
  {
    "text": "things that I'm actually seeing kind of fascinated by is that the growth of the cloud is actually massively propelling",
    "start": "2665049",
    "end": "2672279"
  },
  {
    "text": "the use of Linux because it is the native operating system kernel of the cloud and it's pretty pretty cool to see",
    "start": "2672279",
    "end": "2679420"
  },
  {
    "text": "that so that's that's all I have thank you everyone for your attention I have",
    "start": "2679420",
    "end": "2685619"
  },
  {
    "text": "two minutes three minutes for questions",
    "start": "2685619",
    "end": "2690028"
  }
]