[
  {
    "start": "0",
    "end": "221000"
  },
  {
    "text": "[Music]",
    "start": "1130",
    "end": "14700"
  },
  {
    "text": "welcome everybody to our session on the cost of complexity different vulnerabilities while implementing the same rfc the session will be presented",
    "start": "16480",
    "end": "23519"
  },
  {
    "text": "by myself daniel dos santos from forskout research labs and shlomi obermann from jsof",
    "start": "23519",
    "end": "28880"
  },
  {
    "text": "so before we start who we are so this is a collaborative research effort between four scout and jsof and although it's",
    "start": "28880",
    "end": "35520"
  },
  {
    "text": "presented today by myself and by shlami there were several other people involved in this research and we would just like",
    "start": "35520",
    "end": "41280"
  },
  {
    "text": "to acknowledge them here from both sides so a quick outline of this presentation",
    "start": "41280",
    "end": "47120"
  },
  {
    "text": "right um i will go give an introduction of what this research was all about uh what",
    "start": "47120",
    "end": "52719"
  },
  {
    "text": "we're calling name wreck a set of new vulnerabilities that basically break some dns client-side implementations",
    "start": "52719",
    "end": "59840"
  },
  {
    "text": "what are the impacts of these vulnerabilities what kind of mitigation actions can we",
    "start": "59840",
    "end": "65518"
  },
  {
    "text": "take to actually fix dns implementations in the future now and in the future and",
    "start": "65519",
    "end": "70960"
  },
  {
    "text": "a little bit of a conclusion and main takeaways from this research so let's go to the introduction so",
    "start": "70960",
    "end": "76960"
  },
  {
    "text": "this research is part of what we've been calling project memoria uh project memorial is a large study of embedded",
    "start": "76960",
    "end": "82560"
  },
  {
    "text": "tcp stack security uh we really want to understand why are they vulnerable how are they vulnerable and actually what",
    "start": "82560",
    "end": "88720"
  },
  {
    "text": "the cyber security community can do about it this is an initiative that is led by four scout research labs with several",
    "start": "88720",
    "end": "94720"
  },
  {
    "text": "collaborations including jsofthen and others in previous research that was done in",
    "start": "94720",
    "end": "100880"
  },
  {
    "text": "tcp stacks we had examples such as ripple 20 a set of 19 vulnerabilities on the track to cpip stack that revealed",
    "start": "100880",
    "end": "108159"
  },
  {
    "text": "massive supply chain effects in terms of vendors and affected devices then we had amnesia 33 that was done at four scout",
    "start": "108159",
    "end": "115200"
  },
  {
    "text": "research labs that um revealed a set of 33 vulnerabilities on four open source",
    "start": "115200",
    "end": "120320"
  },
  {
    "text": "stacks and kind of continued the momentum and the trend of tcpap stack vulnerabilities showing that the similar",
    "start": "120320",
    "end": "127520"
  },
  {
    "text": "supply chain effects found in closed source code are also found in open source stacks",
    "start": "127520",
    "end": "134160"
  },
  {
    "text": "and more recently uh in february of this year we released number jack a set of nine",
    "start": "134160",
    "end": "140720"
  },
  {
    "text": "vulnerabilities that are actually related to predictable uh tcp initial sequence numbers in nine different tcp",
    "start": "140720",
    "end": "147440"
  },
  {
    "text": "stacks so this previous body of work really shows the fact that by now we",
    "start": "147440",
    "end": "152640"
  },
  {
    "text": "know that tcp stacks have several vulnerabilities and it's not a surprise when new vulnerabilities come",
    "start": "152640",
    "end": "160000"
  },
  {
    "text": "out but they have very interesting nuances and it's it's",
    "start": "160000",
    "end": "165120"
  },
  {
    "text": "uh you can always learn new things when you look more closely at gcpap stacks",
    "start": "165120",
    "end": "170640"
  },
  {
    "text": "you can find vulnerabilities from that were known in the past such as number jack predicted by a sense is an",
    "start": "170640",
    "end": "177120"
  },
  {
    "text": "issue that has been going on for for 20 years you can also find new types of vulnerabilities and you basically find a",
    "start": "177120",
    "end": "183200"
  },
  {
    "text": "mix of all of that right and this is very important because of the current",
    "start": "183200",
    "end": "188400"
  },
  {
    "text": "iot scenario that we have nowadays where there are billions and billions of devices being deployed out there uh from",
    "start": "188400",
    "end": "195599"
  },
  {
    "text": "seven different vendors uh and and all of those use code that we all know that",
    "start": "195599",
    "end": "202080"
  },
  {
    "text": "in the end you know the code that runs in about the devices uh might not be the most secure ever and",
    "start": "202080",
    "end": "208640"
  },
  {
    "text": "it's it tends to be very very old code right this is what uh previous research has",
    "start": "208640",
    "end": "215599"
  },
  {
    "text": "has shown and uh it's kind of a motivation for for this work that we're talking about today",
    "start": "215599",
    "end": "221599"
  },
  {
    "start": "221000",
    "end": "221000"
  },
  {
    "text": "so why did we decide to look more closely at dns so dns is the most affected tcp",
    "start": "221599",
    "end": "227680"
  },
  {
    "text": "component in previous research so in ripple 20 the the most critical um",
    "start": "227680",
    "end": "233360"
  },
  {
    "text": "vulnerability that led to an rce was cv 2020 11901",
    "start": "233360",
    "end": "238879"
  },
  {
    "text": "on the track gcpap stack which was related to dns and a specific feature of dns that we will be discussing",
    "start": "238879",
    "end": "244720"
  },
  {
    "text": "throughout this presentation and then in amnesia 33 15 out of the 33",
    "start": "244720",
    "end": "250959"
  },
  {
    "text": "cves that we found were actually on dns clients and three of those um",
    "start": "250959",
    "end": "256160"
  },
  {
    "text": "were potential rc's so if if you look at the the image this on the on the left hand side of this uh",
    "start": "256160",
    "end": "263040"
  },
  {
    "text": "presentation you can see that dns is by far the most affected component uh in in",
    "start": "263040",
    "end": "268720"
  },
  {
    "text": "previous research in tcpap stack and another interesting point is that protocol complexity is a good",
    "start": "268720",
    "end": "275040"
  },
  {
    "text": "predictable vulnerabilities there are other major findings on dns we all know that dns is a complex protocol",
    "start": "275040",
    "end": "280800"
  },
  {
    "text": "and we'll go into some of the specific complexities in this presentation but it it tends to be a good um",
    "start": "280800",
    "end": "288639"
  },
  {
    "text": "predictor of uh new vulnerabilities right so for instance very recently there was a work of jsof that reviewed a",
    "start": "288639",
    "end": "295199"
  },
  {
    "text": "set of seven cvs on the dns mask uh dns forwarder uh that was called dns",
    "start": "295199",
    "end": "301120"
  },
  {
    "text": "spook but also at the end of last year uh we had vulnerabilities such as sigrad we had said dns we all know about uh",
    "start": "301120",
    "end": "308320"
  },
  {
    "text": "francis the kaminsky attack and and there are several major vulnerabilities on dns that",
    "start": "308320",
    "end": "314320"
  },
  {
    "text": "actually uh really increase the attack surface of devices because dns is",
    "start": "314320",
    "end": "319600"
  },
  {
    "text": "typically uh externally accessible uh so usually the uh devices request",
    "start": "319600",
    "end": "326080"
  },
  {
    "text": "um domain names from from external uh servers and that means that there is a",
    "start": "326080",
    "end": "331840"
  },
  {
    "text": "potential for remote exploitation of those of those devices so let's talk quickly about what dns",
    "start": "331840",
    "end": "338960"
  },
  {
    "start": "336000",
    "end": "336000"
  },
  {
    "text": "actually is right so dns is a protocol in a system that allows um system devices on the internet to map",
    "start": "338960",
    "end": "346240"
  },
  {
    "text": "between domain names and actual ip addresses so basically a client resolves a name such as example.com by querying a",
    "start": "346240",
    "end": "354320"
  },
  {
    "text": "specific dns server and the dns server then looks up the name and returns a response we all know",
    "start": "354320",
    "end": "360800"
  },
  {
    "text": "that dns is hierarchical and then there are recursive queries and all of that we're not going into these details",
    "start": "360800",
    "end": "365919"
  },
  {
    "text": "because it's not really uh relevant in this presentation right let's let's stick to the basics here",
    "start": "365919",
    "end": "371840"
  },
  {
    "start": "371000",
    "end": "371000"
  },
  {
    "text": "um so how it how are just dns uh requests and replies",
    "start": "371840",
    "end": "377039"
  },
  {
    "text": "encoded uh in actual network packets right so domain names such as",
    "start": "377039",
    "end": "382880"
  },
  {
    "text": "example.com are sequences of labels and each label is preset preceded by a",
    "start": "382880",
    "end": "388319"
  },
  {
    "text": "length byte right so you can see in the example there that there's a length byte uh that has the value of three and then",
    "start": "388319",
    "end": "394240"
  },
  {
    "text": "three uh actual characters www then the length seven",
    "start": "394240",
    "end": "399280"
  },
  {
    "text": "then the characters for example then the length three and then the the the characters for com",
    "start": "399280",
    "end": "404800"
  },
  {
    "text": "um and there is a clever mechanism of compression in dns but we will explore",
    "start": "404800",
    "end": "412160"
  },
  {
    "text": "it more in details uh later on but this mechanism allows um",
    "start": "412160",
    "end": "417599"
  },
  {
    "text": "implementations to replace sequences of labels with pointers to prior occurrence of the same sequence so for instance if",
    "start": "417599",
    "end": "424319"
  },
  {
    "text": "you have uh www.gmail.comsmtp.gmail.com",
    "start": "424319",
    "end": "428520"
  },
  {
    "text": "uh you can you don't have to to do gmail.com um",
    "start": "430000",
    "end": "435280"
  },
  {
    "text": "twice right you don't need to repeat that in in a network packet in response you can basically point back to the pack",
    "start": "435280",
    "end": "441520"
  },
  {
    "text": "to the place uh the offset in the packet where the uh the previous occurrence of",
    "start": "441520",
    "end": "446800"
  },
  {
    "text": "gmail.com was um this pointer is encoded actually in two bytes so there's a",
    "start": "446800",
    "end": "452960"
  },
  {
    "text": "first two bits uh set to to one so one one and then the actual encoding of the",
    "start": "452960",
    "end": "458319"
  },
  {
    "text": "offset in the in the packet where you want this to to point to this message compression is used not just in dns but",
    "start": "458319",
    "end": "465120"
  },
  {
    "text": "also in dhcp in multicast dns ipv6 router advertisement and basically",
    "start": "465120",
    "end": "471039"
  },
  {
    "text": "several other protocols in in internet specifications interestingly enough this compression",
    "start": "471039",
    "end": "478639"
  },
  {
    "start": "474000",
    "end": "474000"
  },
  {
    "text": "mechanism has led to 20 years of known vulnerabilities and actually even before this",
    "start": "478639",
    "end": "484240"
  },
  {
    "text": "vulnerability started popping up or more or less at the same time as they started popping up there were some comments",
    "start": "484240",
    "end": "490240"
  },
  {
    "text": "already about the issues with dns compression right so one one comment from dj bernstein around",
    "start": "490240",
    "end": "497039"
  },
  {
    "text": "2001 is that the problem with dns compression is the amount of code required to parse",
    "start": "497039",
    "end": "502479"
  },
  {
    "text": "it as you saw in the previous slide it's not really an easy mechanism to implement so to reliably locate all",
    "start": "502479",
    "end": "508720"
  },
  {
    "text": "these names take some some work some actual quote that would be unnecessary",
    "start": "508720",
    "end": "514000"
  },
  {
    "text": "uh for for dns implementations otherwise right and and there could have been other types of implementations of",
    "start": "514000",
    "end": "520479"
  },
  {
    "text": "compression but in any case this this is what we have uh for more than 20 years",
    "start": "520479",
    "end": "525600"
  },
  {
    "text": "in the dns system and if you look at examples of vulnerabilities that were",
    "start": "525600",
    "end": "531360"
  },
  {
    "text": "found in this previous 20 years you can really see that it affects from specific",
    "start": "531360",
    "end": "536560"
  },
  {
    "text": "devices such as a cisco iphone there um to",
    "start": "536560",
    "end": "541920"
  },
  {
    "text": "known networking tools such as tcp dump and ethereal to actually media players",
    "start": "541920",
    "end": "547519"
  },
  {
    "text": "like vlc two more recently tcp stacks that we",
    "start": "547519",
    "end": "553200"
  },
  {
    "text": "uh examined in previous research such as ripple 20 and amnesia 33 right and you can see that there's an increasing trend",
    "start": "553200",
    "end": "560000"
  },
  {
    "text": "of these vulnerabilities we saw a few um at the early 2000s but then only in the",
    "start": "560000",
    "end": "565680"
  },
  {
    "text": "previous year there are more than than actually five examples there um and of",
    "start": "565680",
    "end": "570880"
  },
  {
    "text": "course there are also other vulnerabilities that we're not mentioning here uh because they don't have cpes because they affect other diff",
    "start": "570880",
    "end": "576880"
  },
  {
    "text": "kinds of products and so on so we just really want to say that this is a widespread uh problem",
    "start": "576880",
    "end": "584000"
  },
  {
    "text": "um and that leads us to actually name rack which is this new set of vulnerabilities that we found and to",
    "start": "584000",
    "end": "589519"
  },
  {
    "text": "discuss this set of vulnerabilities and the technicalities behind them i will now hand it over to shlomi and um i will",
    "start": "589519",
    "end": "596240"
  },
  {
    "text": "pick it back i'll pick the presentation back after uh shlomi gives us these details and to talk about the impact of",
    "start": "596240",
    "end": "601920"
  },
  {
    "text": "the vulnerability so thank you thank you danielle i'll now discuss um a",
    "start": "601920",
    "end": "607680"
  },
  {
    "text": "little bit about what vulnerabilities we were trying to find uh in the name wreck research and what vulnerabilities we",
    "start": "607680",
    "end": "614320"
  },
  {
    "text": "ended up finding so the goal of the research was to find issues with dns compression",
    "start": "614320",
    "end": "620959"
  },
  {
    "text": "a specific rfc made to save space in dns response packets",
    "start": "620959",
    "end": "626240"
  },
  {
    "text": "the motivation for this was issues that we saw in ripple 20 and amnesia 33",
    "start": "626240",
    "end": "632640"
  },
  {
    "text": "research and the fact that we saw that the code was quite complex the logic was quite complex",
    "start": "632640",
    "end": "638880"
  },
  {
    "text": "and the different implementations found different ways to interpret the rfc um",
    "start": "638880",
    "end": "646560"
  },
  {
    "text": "so we quickly knew we had good potentials uh for um remote contribution vulnerabilities",
    "start": "646560",
    "end": "652160"
  },
  {
    "text": "and for vulnerabilities in general we also saw that some stacks don't implement compression which is a way to",
    "start": "652160",
    "end": "658320"
  },
  {
    "text": "avoid these vulnerabilities but of course only allows partial functionality",
    "start": "658320",
    "end": "665200"
  },
  {
    "text": "we wanted to have a varied selection of different stacks we didn't want to have",
    "start": "665200",
    "end": "670240"
  },
  {
    "text": "different stacks of the same type or originating from the same sources and so it shows um both",
    "start": "670240",
    "end": "677120"
  },
  {
    "text": "stacks meant for embedded devices general purpose computing stacks open source closed stock source",
    "start": "677120",
    "end": "683440"
  },
  {
    "text": "new stacks older stacks so that we have a very wide view of",
    "start": "683440",
    "end": "688880"
  },
  {
    "text": "implementations of the same code [Music]",
    "start": "688880",
    "end": "694320"
  },
  {
    "text": "our first results were a little bit underwhelming we found",
    "start": "694320",
    "end": "699839"
  },
  {
    "text": "some stacks that were not vulnerable we found some vulnerabilities in the nordic sdk",
    "start": "699839",
    "end": "705519"
  },
  {
    "text": "which is quite popular in embedded devices when we approached them they replied very quickly said that this is",
    "start": "705519",
    "end": "711200"
  },
  {
    "text": "experimental code and that the vulnerabilities had already been fixed in production code uh this is code",
    "start": "711200",
    "end": "718000"
  },
  {
    "text": "that we found online so it was published we'll discuss uh we'll discuss this uh later on in in",
    "start": "718000",
    "end": "723760"
  },
  {
    "text": "in the talk um as we continued our research um we did find",
    "start": "723760",
    "end": "729680"
  },
  {
    "start": "725000",
    "end": "725000"
  },
  {
    "text": "vulnerabilities in uh pretty prominent uh pretty prominent",
    "start": "729680",
    "end": "735360"
  },
  {
    "text": "stacks we also found a lot of issues that were of different types but in the",
    "start": "735360",
    "end": "741120"
  },
  {
    "text": "same area specifically in nucleus net we found quite a few issues uh quite a few anti-patterns and um we'll discuss the",
    "start": "741120",
    "end": "748320"
  },
  {
    "text": "different anti-patterns that we found um we decided to document them and discuss them for",
    "start": "748320",
    "end": "753519"
  },
  {
    "text": "better implementation of this rfc uh in freebsd we found uh a vulnerability in",
    "start": "753519",
    "end": "759040"
  },
  {
    "text": "the dhcp client uh we didn't look at the dns client though i think uh someone may have looked at it at a later date",
    "start": "759040",
    "end": "765279"
  },
  {
    "text": "um we found uh in an old version of vxworks an end-of-life version of vxwork we",
    "start": "765279",
    "end": "771279"
  },
  {
    "text": "found stack overflow we later discovered that this stack",
    "start": "771279",
    "end": "777360"
  },
  {
    "text": "overflow was already found and documented by researchers from exodus intelligent",
    "start": "777360",
    "end": "784480"
  },
  {
    "text": "at the time the vulnerability the vxwork stack that the vulnerabilities were in",
    "start": "784480",
    "end": "789519"
  },
  {
    "text": "was already end of life um so we do know that this vulnerability had been fixed in the latest versions of",
    "start": "789519",
    "end": "795839"
  },
  {
    "text": "vxworks but we're not quite sure of the uh the status in different versions we'll discuss this uh in the impact at",
    "start": "795839",
    "end": "803040"
  },
  {
    "text": "the time there was no cv assigned um we we recently uh signed a cve uh for this",
    "start": "803040",
    "end": "809360"
  },
  {
    "text": "vulnerability um and we found a vulnerability in the net x",
    "start": "809360",
    "end": "814800"
  },
  {
    "text": "stack uh the the stack of thread x operating system uh currently maintained by microsoft um this is a vulnerability",
    "start": "814800",
    "end": "822079"
  },
  {
    "text": "that could lead to a denial of servers maybe a remote code execution it would be quite hard",
    "start": "822079",
    "end": "827519"
  },
  {
    "text": "to exploit unfortunately microsoft did attempt to fix this vulnerability but decided not",
    "start": "827519",
    "end": "834639"
  },
  {
    "text": "to assign a cve and not to document the vulnerability in any way they cited",
    "start": "834639",
    "end": "841440"
  },
  {
    "text": "very low impact to the vulnerability though we're not sure exactly what the uh",
    "start": "841440",
    "end": "846560"
  },
  {
    "text": "the meaning or the reason uh for that is um let's talk a little bit about the different types of vulnerabilities that",
    "start": "846560",
    "end": "852800"
  },
  {
    "text": "we found specifically in uh nucleus net so the first type of vulnerability we found",
    "start": "852800",
    "end": "858880"
  },
  {
    "start": "855000",
    "end": "855000"
  },
  {
    "text": "is lack of transaction id and port id validation and randomization so the",
    "start": "858880",
    "end": "864399"
  },
  {
    "text": "integrity of dns the matching between requests sent and responses received",
    "start": "864399",
    "end": "869680"
  },
  {
    "text": "the way that we know that we received response from the right server is through",
    "start": "869680",
    "end": "875680"
  },
  {
    "text": "these two random numbers a random port id and a random transaction id these should both be randomized and they",
    "start": "875680",
    "end": "881680"
  },
  {
    "text": "should be verified when we receive the response it's not a very robust mechanism but it gives us",
    "start": "881680",
    "end": "887519"
  },
  {
    "text": "some level of integrity unfortunately we found that this was",
    "start": "887519",
    "end": "893040"
  },
  {
    "text": "misimplemented in the case of nucleus net we saw that they were both very very easy to guess um",
    "start": "893040",
    "end": "900240"
  },
  {
    "text": "we saw very very low entropy and we saw this vulnerability in a few other",
    "start": "900240",
    "end": "906240"
  },
  {
    "text": "stacks as well this type of vulnerability is not a memory corruption vulnerability",
    "start": "906240",
    "end": "912320"
  },
  {
    "text": "but it could be combined with other vulnerabilities to make the other vulnerabilities easier uh to exploit so",
    "start": "912320",
    "end": "918959"
  },
  {
    "text": "it will allow us uh to exploit dns client-side vulnerabilities without being the",
    "start": "918959",
    "end": "924480"
  },
  {
    "text": "legitimate server making them a power multiplier making other vulnerabilities",
    "start": "924480",
    "end": "930880"
  },
  {
    "text": "combined with this vulnerability more potent another issue that we found is a lack of",
    "start": "930880",
    "end": "938160"
  },
  {
    "text": "label length and name length validation so different type of issues both with misimplantation of the rfc as",
    "start": "938160",
    "end": "945680"
  },
  {
    "text": "well as misallocation of buffer sizes so different memory corruptions that arose",
    "start": "945680",
    "end": "952240"
  },
  {
    "text": "from the very basic functionality of label lengths and",
    "start": "952240",
    "end": "957600"
  },
  {
    "text": "domain lengths leading to different memory corruptions",
    "start": "957600",
    "end": "963120"
  },
  {
    "text": "another issue that we found a sort of more gentle issue is no validation of the termination",
    "start": "963120",
    "end": "969920"
  },
  {
    "text": "of the domain length which should end with a null byte representing a zero length",
    "start": "969920",
    "end": "975519"
  },
  {
    "text": "domain label in the case of nucleus net this led to an off by",
    "start": "975519",
    "end": "980839"
  },
  {
    "text": "one readout of bounce another type of issue we found is in the",
    "start": "980839",
    "end": "987920"
  },
  {
    "text": "parsing of the header of the dns response",
    "start": "987920",
    "end": "993199"
  },
  {
    "text": "the header contains counts for different types of resource records",
    "start": "993199",
    "end": "999040"
  },
  {
    "text": "and we found that there is not sufficient validation of the that the count specified in the header",
    "start": "999040",
    "end": "1005680"
  },
  {
    "text": "actually exists in the packet leading to different types of mostly read out of bound",
    "start": "1005680",
    "end": "1011759"
  },
  {
    "text": "vulnerabilities from this inconsistency and the lack of validation",
    "start": "1011759",
    "end": "1018560"
  },
  {
    "text": "and of course the vulnerabilities that we were looking for dns compression vulnerabilities so dns compression is a",
    "start": "1018560",
    "end": "1025918"
  },
  {
    "text": "way to reduce the size of dns packet responses the way this is done is it reuses parts",
    "start": "1025919",
    "end": "1034000"
  },
  {
    "text": "or complete domain names as parts of other domain names so",
    "start": "1034000",
    "end": "1040079"
  },
  {
    "text": "if for example i want to specify www.domain.com but i've already",
    "start": "1040079",
    "end": "1045120"
  },
  {
    "text": "specified dot com in a different place so i've already specified domain.com in a different place i can reference that",
    "start": "1045120",
    "end": "1051679"
  },
  {
    "text": "previous domain length domain name and use that um without",
    "start": "1051679",
    "end": "1058559"
  },
  {
    "text": "repeating the same same string again and again",
    "start": "1058559",
    "end": "1064000"
  },
  {
    "text": "this is used to save space uh and it turns out it's quite uh tricky to implement",
    "start": "1064000",
    "end": "1069440"
  },
  {
    "text": "um the way it's implemented is we have a special marker um a byte that starts",
    "start": "1069440",
    "end": "1074960"
  },
  {
    "text": "with uh two uh two uh bits that are 1-1 turned on and a",
    "start": "1074960",
    "end": "1081919"
  },
  {
    "text": "reference to a previous location a previous domain name in the packet in the response packet",
    "start": "1081919",
    "end": "1088720"
  },
  {
    "text": "in order for this to to work the location must be a previous location it must be a valid location and",
    "start": "1088720",
    "end": "1095600"
  },
  {
    "text": "we must make sure that we're not following the same reference the same compression pointer",
    "start": "1095600",
    "end": "1101360"
  },
  {
    "text": "this is the name of the reference we mustn't follow the same compression pointer twice we also must make sure",
    "start": "1101360",
    "end": "1107120"
  },
  {
    "text": "that we're calculating the name of the decompressed or uncompressed domain length correctly",
    "start": "1107120",
    "end": "1113600"
  },
  {
    "text": "if we're going to allocate space for this and we found issues with all of these",
    "start": "1113600",
    "end": "1118960"
  },
  {
    "text": "things that must happen in order for the implementation to be correct so",
    "start": "1118960",
    "end": "1124080"
  },
  {
    "text": "in some cases we found that the compression pointer can bond forward leading to different types of issues",
    "start": "1124080",
    "end": "1130240"
  },
  {
    "text": "readout of bounds miscalculation of the sizes denial of service",
    "start": "1130240",
    "end": "1135679"
  },
  {
    "text": "in some cases we saw that the compression pointer doesn't have to point to a valid previous domain length",
    "start": "1135679",
    "end": "1142799"
  },
  {
    "text": "which could lead to the fact that the domain length would when followed would actually reach a point in the packet that is",
    "start": "1142799",
    "end": "1149520"
  },
  {
    "text": "after the compression pointer we found that we could nest uh compression pointers leading to",
    "start": "1149520",
    "end": "1156160"
  },
  {
    "text": "large sizes which could in some cases lead to miscalculation of the uncompressed size",
    "start": "1156160",
    "end": "1163520"
  },
  {
    "text": "in some cases just regular miscalculation of the uncompressed size so we saw that this um",
    "start": "1163520",
    "end": "1172000"
  },
  {
    "text": "this part of the of the protocol was difficult to implement and",
    "start": "1172000",
    "end": "1177360"
  },
  {
    "text": "resulted in quite a lot of vulnerabilities in the stacks that we looked at we later found out that there are also a lot of vulnerabilities uh",
    "start": "1177360",
    "end": "1184559"
  },
  {
    "text": "found in in previous years in stacks that we did not uh did not look at",
    "start": "1184559",
    "end": "1189919"
  },
  {
    "text": "some examples freebsd vxworks ipnet threadxnetics nucleus",
    "start": "1189919",
    "end": "1197440"
  },
  {
    "text": "as well as other stacks in the ripple 20 amnesia 33 vulnerabilities that are",
    "start": "1197440",
    "end": "1202559"
  },
  {
    "text": "of this class it's important to mention that oftentimes when a uh an ip stack has",
    "start": "1202559",
    "end": "1209760"
  },
  {
    "text": "several different vulnerabilities these can be combined to create a stronger exploit or make the exploitation easier",
    "start": "1209760",
    "end": "1216159"
  },
  {
    "text": "in the example nucleus net the fact that you can both craft a very large dns response uh which is not a",
    "start": "1216159",
    "end": "1223600"
  },
  {
    "text": "vulnerability per se but is um in contra it is not correct according to the rfc",
    "start": "1223600",
    "end": "1229280"
  },
  {
    "text": "uh the fact that you can create a memory corruption and write out of bounds and the fact that it is easy to guess",
    "start": "1229280",
    "end": "1235120"
  },
  {
    "text": "transaction id and poor id uh mean that it is quite uh it is easier to exploit vulnerable",
    "start": "1235120",
    "end": "1241840"
  },
  {
    "text": "these three vulnerabilities together then exploit each of them separately to receive to to achieve a remote code",
    "start": "1241840",
    "end": "1248159"
  },
  {
    "text": "execution um and there'll be more details about this published",
    "start": "1248159",
    "end": "1253760"
  },
  {
    "text": "in the new report i'll now hand the mic over back to",
    "start": "1253760",
    "end": "1259039"
  },
  {
    "text": "daniel to discuss the impact of these vulnerabilities in the real world",
    "start": "1259039",
    "end": "1264559"
  },
  {
    "text": "thanks swami for giving us all the details on the vulnerabilities that we found and now let's talk a little bit",
    "start": "1264559",
    "end": "1269919"
  },
  {
    "text": "about their impact so first let's discuss effect devices right what what is",
    "start": "1269919",
    "end": "1276240"
  },
  {
    "start": "1272000",
    "end": "1272000"
  },
  {
    "text": "actually vulnerable so we all know that understanding in fact vendors and devices um when we are talking about tcp",
    "start": "1276240",
    "end": "1282559"
  },
  {
    "text": "stack vulnerabilities is very difficult because this stacks uh so basically these code bases are reused multiple",
    "start": "1282559",
    "end": "1288080"
  },
  {
    "text": "times in many ways right we discussed that at length during ripple 20 and amnesia 33 for instance",
    "start": "1288080",
    "end": "1294480"
  },
  {
    "text": "and we know that um it's not easy to to know which actual devices on a network",
    "start": "1294480",
    "end": "1299840"
  },
  {
    "text": "or out there in the real world have the vulnerable versions of these stacks uh so here we are not discussing",
    "start": "1299840",
    "end": "1306480"
  },
  {
    "text": "specific affected vendors or specific affected device models we just want to give us an idea of the scale and the",
    "start": "1306480",
    "end": "1313039"
  },
  {
    "text": "reach of this type of vulnerability so for instance we know that freebsd whose dhcp client was found vulnerable",
    "start": "1313039",
    "end": "1319440"
  },
  {
    "text": "is very popular in of course web and storage servers but it's also the basis of several popular appliances and other",
    "start": "1319440",
    "end": "1325360"
  },
  {
    "text": "software right like open source projects for uh firewalls or for network attached",
    "start": "1325360",
    "end": "1330720"
  },
  {
    "text": "storage devices and there are certainly millions of",
    "start": "1330720",
    "end": "1335760"
  },
  {
    "text": "those out there we know that the nucleus rtos that runs nucleus net by default the threat acts",
    "start": "1335760",
    "end": "1341520"
  },
  {
    "text": "operating system which runs the net x stack by default and the vx works operating system that runs ipnet have",
    "start": "1341520",
    "end": "1347600"
  },
  {
    "text": "been used for decades in critical systems right and and and below there i have a few images a few examples of where those",
    "start": "1347600",
    "end": "1354960"
  },
  {
    "text": "devices typically are uh deployed so all together we know that there are more than 10 billion deployments of those um",
    "start": "1354960",
    "end": "1362060"
  },
  {
    "text": "[Music] operating systems or those stacks out there uh and we do know that not all os",
    "start": "1362060",
    "end": "1368320"
  },
  {
    "text": "deployments use the default stack not all of them have a dns or dhcp client enable and even not every version of",
    "start": "1368320",
    "end": "1374720"
  },
  {
    "text": "these clients are vulnerable but if you think about this 10 billion deployments that i mentioned and if you think about 1",
    "start": "1374720",
    "end": "1381600"
  },
  {
    "text": "of those is already 100 million devices out there you can have an idea of the scale of this this type of vulnerability",
    "start": "1381600",
    "end": "1388880"
  },
  {
    "start": "1388000",
    "end": "1388000"
  },
  {
    "text": "so again this highlights supply chain issues that we already discussed in previous research right this is another",
    "start": "1388880",
    "end": "1395280"
  },
  {
    "text": "example of an abilities that trickle down the supply chain and that's why you have so many affected devices because of",
    "start": "1395280",
    "end": "1400720"
  },
  {
    "text": "popular components that are embedded in these devices right popular software and hardware components",
    "start": "1400720",
    "end": "1408240"
  },
  {
    "text": "so if we think of two illustrative issues in this research specifically we you can think back to the ip nat uh",
    "start": "1408240",
    "end": "1414320"
  },
  {
    "text": "slash vxworks 6.6 issue that was mentioned by salami during the vulnerabilities so that was a",
    "start": "1414320",
    "end": "1420240"
  },
  {
    "text": "vulnerability that was originally found in 2016 but we found it again this year",
    "start": "1420240",
    "end": "1426080"
  },
  {
    "text": "and we know that it was silently patched now it's been issued the cv 2016",
    "start": "1426080",
    "end": "1432080"
  },
  {
    "text": "uh 2009 uh id but before there was no idea for it right so we we we couldn't track this",
    "start": "1432080",
    "end": "1439600"
  },
  {
    "text": "this vulnerability properly and we know that it has been fixing at least some devices that that mentioned this",
    "start": "1439600",
    "end": "1445279"
  },
  {
    "text": "vulnerability specific so they were notified by by the vendor but we don't know actually which devices have have",
    "start": "1445279",
    "end": "1450960"
  },
  {
    "text": "not been uh be patched and this actually affects a version of vxworks that is",
    "start": "1450960",
    "end": "1456320"
  },
  {
    "text": "currently unsupported but we know that there are several examples of currently supported uh devices of firmware and",
    "start": "1456320",
    "end": "1462480"
  },
  {
    "text": "currently supported devices that runs at vxworks even five which is uh 20 years",
    "start": "1462480",
    "end": "1467600"
  },
  {
    "text": "old right and we haven't checked where this vulnerability is still active or not",
    "start": "1467600",
    "end": "1473600"
  },
  {
    "text": "there could be patches via extended support for these older versions of vxworks but you you can have an idea of",
    "start": "1473600",
    "end": "1480080"
  },
  {
    "text": "um the the reach and the difficulty in understanding affected devices uh with",
    "start": "1480080",
    "end": "1486000"
  },
  {
    "text": "these 30-part third-party components the second issue that we have is",
    "start": "1486000",
    "end": "1491600"
  },
  {
    "text": "the nordic sdk that shlami mentioned that we found the vulnerability and the vendor mentioned that that was not",
    "start": "1491600",
    "end": "1497760"
  },
  {
    "text": "production software it was demonstration code experimental code sorry uh in the sdk and so on but we know that",
    "start": "1497760",
    "end": "1504240"
  },
  {
    "text": "developers tend to use this type of demonstrations or or or experimental code or so on uh from sdks uh in",
    "start": "1504240",
    "end": "1511039"
  },
  {
    "text": "production devices right we we have a couple of examples there of scientific papers mentioning",
    "start": "1511039",
    "end": "1516240"
  },
  {
    "text": "how uh example vulnerable example code turns out in in web applications or in c",
    "start": "1516240",
    "end": "1521440"
  },
  {
    "text": "plus plus applications and we know that for embedded devices the similar issue happens so again think of the fact that",
    "start": "1521440",
    "end": "1528159"
  },
  {
    "text": "once verbal code is out there it tends to spread and this leads to different types of",
    "start": "1528159",
    "end": "1534240"
  },
  {
    "text": "impact uh depending on the devices that actually employ this um",
    "start": "1534240",
    "end": "1539840"
  },
  {
    "text": "this code right so if you think of the both sides of the coin there the exploitation and the patching part we",
    "start": "1539840",
    "end": "1546480"
  },
  {
    "text": "know that free of this freebsd for instance is a modern operating system that has uh sandboxing has uh",
    "start": "1546480",
    "end": "1552320"
  },
  {
    "text": "exploit mitigation and it's typically uh much more difficult to to to exploit than a",
    "start": "1552320",
    "end": "1559279"
  },
  {
    "text": "typical uh embedded device uh that runs on constrained hardware that",
    "start": "1559279",
    "end": "1565520"
  },
  {
    "text": "has barely any memory protection which is basically the case of the other stacks right so we can see the these",
    "start": "1565520",
    "end": "1571120"
  },
  {
    "text": "issues spreading from the it to the iot and ot environment and the exploitation",
    "start": "1571120",
    "end": "1576480"
  },
  {
    "text": "advances are definitely different there but if you think of patching as well we know that for freebst that often runs in",
    "start": "1576480",
    "end": "1583360"
  },
  {
    "text": "ig servers that are much easier to identify on the network to patch centrally if you have ssh manage the",
    "start": "1583360",
    "end": "1589679"
  },
  {
    "text": "servers or devices you have high availability for instance where one can be taken offline and the other instance",
    "start": "1589679",
    "end": "1595200"
  },
  {
    "text": "will take over which is just not the case in in iot and ot devices right so",
    "start": "1595200",
    "end": "1601679"
  },
  {
    "text": "there's other stacks they tend to run on very specific firmware mission critical devices that cannot be taken offline you",
    "start": "1601679",
    "end": "1607440"
  },
  {
    "text": "have to wait for patches to trickle down the supply chain from from the stack maintainer to possibly an operating",
    "start": "1607440",
    "end": "1613120"
  },
  {
    "text": "system vendor to in the end uh the actual device vendor um and that takes",
    "start": "1613120",
    "end": "1619039"
  },
  {
    "text": "time and takes a lot of effort uh so if we discuss the mitigation uh",
    "start": "1619039",
    "end": "1624799"
  },
  {
    "text": "differences that we that we started looking at and how we can move forward in terms of mitigating these issues uh",
    "start": "1624799",
    "end": "1630880"
  },
  {
    "text": "from both the developer point of view and the network operating operator point of view",
    "start": "1630880",
    "end": "1636559"
  },
  {
    "text": "we want to highlight for um for instance is there of how we can mitigate these issues in the future",
    "start": "1636559",
    "end": "1643600"
  },
  {
    "text": "so we we want to discuss better documentation and static analysis for developers and device fingerprinting and",
    "start": "1643600",
    "end": "1649039"
  },
  {
    "text": "intrusion detection for network operators so on the side of the developers um we",
    "start": "1649039",
    "end": "1655200"
  },
  {
    "start": "1652000",
    "end": "1652000"
  },
  {
    "text": "really wanted to highlight the issue of better documentation because we know that specification and security information is scratched scattered",
    "start": "1655200",
    "end": "1662000"
  },
  {
    "text": "across rfcs and that's not j not just for dns but for several uh internet",
    "start": "1662000",
    "end": "1667200"
  },
  {
    "text": "protocols right and unfortunately we have seen again in previous research and we have confirmed in this research that",
    "start": "1667200",
    "end": "1673679"
  },
  {
    "text": "these rfcs are often complex ambiguous or sometimes outdated um",
    "start": "1673679",
    "end": "1679440"
  },
  {
    "text": "there is this leads to drastic security effects right so if we look at two",
    "start": "1679440",
    "end": "1684559"
  },
  {
    "text": "instances of rfcs that are related to dns phrases you see that there's this dns prox implementation guidelines that",
    "start": "1684559",
    "end": "1691120"
  },
  {
    "text": "mentions um some issues with dns compression and compression pointers",
    "start": "1691120",
    "end": "1697520"
  },
  {
    "text": "and valid compression pointers that may be dropped um but they don't don't mention all of the issues that that we",
    "start": "1697520",
    "end": "1703279"
  },
  {
    "text": "found uh they also mentioned the other empty pattern about incorrect counts and",
    "start": "1703279",
    "end": "1708320"
  },
  {
    "text": "they these issues are mentioned in rfc that is not the dns specification rfc itself",
    "start": "1708320",
    "end": "1714320"
  },
  {
    "text": "right so it may be that uh uh um a developer implementing the the the dns",
    "start": "1714320",
    "end": "1720240"
  },
  {
    "text": "client will just not find this this exact specification and also",
    "start": "1720240",
    "end": "1725440"
  },
  {
    "text": "uh this uh specification mentions that these packets may be dropped but doesn't alert you the security issues that these",
    "start": "1725440",
    "end": "1732480"
  },
  {
    "text": "uh packets bring and that they probably must be dropped right not not just that",
    "start": "1732480",
    "end": "1737679"
  },
  {
    "text": "they may be dropped in some cases but they really should be dropped to avoid security issues",
    "start": "1737679",
    "end": "1744240"
  },
  {
    "text": "on the other hand uh the second example there is is a is an rfc that actually never uh made it past the draft stage it",
    "start": "1744240",
    "end": "1751840"
  },
  {
    "text": "was about a new compression scheme for for dns but uh yeah didn't get approved",
    "start": "1751840",
    "end": "1757440"
  },
  {
    "text": "and there is a section on security considerations that talks about blindly following compression pointers and how",
    "start": "1757440",
    "end": "1763760"
  },
  {
    "text": "dangerous that is and so on but again this is something that didn't really become a standard right and this uh",
    "start": "1763760",
    "end": "1771520"
  },
  {
    "text": "is a problem because again it it the information is scattered and it's not",
    "start": "1771520",
    "end": "1777440"
  },
  {
    "text": "really um not really centralized to where to find it so we actually took it to ourselves",
    "start": "1777440",
    "end": "1783919"
  },
  {
    "text": "to write an information rfc draft about these identified identity patterns and and how to avoid them for uh for for",
    "start": "1783919",
    "end": "1791200"
  },
  {
    "text": "future developments we submitted that to the ietf and we are making it available",
    "start": "1791200",
    "end": "1796480"
  },
  {
    "text": "on our github as well in terms of static analysis we know the developers need tools to readily spot",
    "start": "1796480",
    "end": "1802640"
  },
  {
    "start": "1799000",
    "end": "1799000"
  },
  {
    "text": "potential bugs so we created some code to identify these entry patterns and specifically the dns compression entry",
    "start": "1802640",
    "end": "1808480"
  },
  {
    "text": "pattern using yarn which is an open source framework",
    "start": "1808480",
    "end": "1813840"
  },
  {
    "text": "for code querying for uh cnc plus plus implementations so we developed a plugin",
    "start": "1813840",
    "end": "1819440"
  },
  {
    "text": "on top of this on this framework and it can be downloaded on our uh github",
    "start": "1819440",
    "end": "1825600"
  },
  {
    "text": "webpage that is displayed there on the on the slides and uh those screenshots show a little bit of how the query works",
    "start": "1825600",
    "end": "1831840"
  },
  {
    "text": "uh and and what is the output of a potentially vulnerable piece of code in a tcpap",
    "start": "1831840",
    "end": "1838240"
  },
  {
    "text": "stack in terms of device fingerprinting as well we know that embedded stacks",
    "start": "1838240",
    "end": "1843679"
  },
  {
    "start": "1840000",
    "end": "1840000"
  },
  {
    "text": "typically have implementation quirks that are often useful for stack fingerprinting right more specifically",
    "start": "1843679",
    "end": "1849440"
  },
  {
    "text": "icmp replies for instance and tcp options as well they are prime examples of how things are implemented sometimes",
    "start": "1849440",
    "end": "1856000"
  },
  {
    "text": "not um according to to two rfcs or in slightly different ways in the case of",
    "start": "1856000",
    "end": "1862000"
  },
  {
    "text": "tcp options and that can be used for precise and accurate fingerprinting of stacks and most importantly this",
    "start": "1862000",
    "end": "1868720"
  },
  {
    "text": "accurate fingerprinting is really what enables other mitigation such as a patching rate you can only patch",
    "start": "1868720",
    "end": "1873919"
  },
  {
    "text": "something that you know is vulnerable and segmentation uh in terms of isolating devices in your network so we",
    "start": "1873919",
    "end": "1880480"
  },
  {
    "text": "have updated our project memorial detector which is an open source tool to detect uh tcpap stacks running on a",
    "start": "1880480",
    "end": "1886640"
  },
  {
    "text": "device with information that is specific to to the stacks that are on a part of this",
    "start": "1886640",
    "end": "1893039"
  },
  {
    "text": "research and we will continue to to to maintain these two with stacks not just that are vulnerable within product",
    "start": "1893039",
    "end": "1899279"
  },
  {
    "text": "project memorial but also other stacks that we we have knowledge about um",
    "start": "1899279",
    "end": "1904720"
  },
  {
    "text": "if we talk about intrusion detection and exploit detection rules we know that we can basically turn the entry patterns we",
    "start": "1904720",
    "end": "1911679"
  },
  {
    "text": "found on the vulnerability examples into rules for um dropping packets right or",
    "start": "1911679",
    "end": "1917120"
  },
  {
    "text": "at least alerting to their presence if you're running on a highly critical environment such as",
    "start": "1917120",
    "end": "1923120"
  },
  {
    "text": "operational technology and industrial control systems or medical devices where dropping packets might be uh problematic",
    "start": "1923120",
    "end": "1929600"
  },
  {
    "text": "so if we look at the the main entry patterns that we identified so invalid domain name labels uh invalid domain",
    "start": "1929600",
    "end": "1936080"
  },
  {
    "text": "names um and resource date lands invalid compression pointers and record counts",
    "start": "1936080",
    "end": "1941919"
  },
  {
    "text": "basically all of those can become rules for intrusion detection systems right and i'm not going to read all of the",
    "start": "1941919",
    "end": "1947600"
  },
  {
    "text": "specific rules there but this is a pretty comprehensive list of rules that if implemented on intrusion detection",
    "start": "1947600",
    "end": "1953279"
  },
  {
    "text": "system allows you to not just detect exploitation of the vulnerabilities that we did find but also others and many",
    "start": "1953279",
    "end": "1959519"
  },
  {
    "text": "others that might appear in the future because they follow the same empty patterns",
    "start": "1959519",
    "end": "1965600"
  },
  {
    "start": "1965000",
    "end": "1965000"
  },
  {
    "text": "and also for intrusion detection we are making available uh a set of escape piece scripts and and",
    "start": "1965679",
    "end": "1971679"
  },
  {
    "text": "pcaps with malicious packets that allow you to test that uh intrusion",
    "start": "1971679",
    "end": "1977919"
  },
  {
    "text": "detection rules are actually capturing the the proper packets this is available under requests it's not uh publicly",
    "start": "1977919",
    "end": "1983840"
  },
  {
    "text": "available on github but we can share it with whoever is interested so moving on to the conclusion right um",
    "start": "1983840",
    "end": "1991440"
  },
  {
    "text": "we know that rfc miss implementation is a common cause of vulnerabilities in tcp stacks because they are often complex ambiguous",
    "start": "1991440",
    "end": "1998080"
  },
  {
    "text": "outdated and this leads to the fact that dns clients have several vulnerabilities",
    "start": "1998080",
    "end": "2003120"
  },
  {
    "text": "so message compression stands out it's a very common uh anti-pattern and it often",
    "start": "2003120",
    "end": "2008159"
  },
  {
    "text": "leads to rc and and we we really uh showed with this research that it's it's out there in tcpap stacks but",
    "start": "2008159",
    "end": "2014960"
  },
  {
    "text": "we do expect it to be out there in many other products as well not implementing support for compression",
    "start": "2014960",
    "end": "2020399"
  },
  {
    "text": "on the other hand seems to be an effective mitigation against this type of an ability of course you're limiting",
    "start": "2020399",
    "end": "2025519"
  },
  {
    "text": "functionality but there is an interesting discussion there that if the bandwidth saving that",
    "start": "2025519",
    "end": "2030720"
  },
  {
    "text": "associated to compression is is basically almost meaningless nowadays for several devices that have fast",
    "start": "2030720",
    "end": "2036399"
  },
  {
    "text": "connectivity um this type of feature might just introduce more problems than it solves",
    "start": "2036399",
    "end": "2042799"
  },
  {
    "text": "right so you as a developer might think of just not enabling it um and dns clients they seem to be",
    "start": "2042799",
    "end": "2050079"
  },
  {
    "text": "tested less rigorously than service for security we mentioned several uh variabilities on servers that we found",
    "start": "2050079",
    "end": "2056000"
  },
  {
    "text": "at the beginning of the or that that were found by other people but we listed at the beginning of this of this research but it seems that",
    "start": "2056000",
    "end": "2062720"
  },
  {
    "text": "client um clients uh are are less rigorously tested because they communicated with a limited set of",
    "start": "2062720",
    "end": "2069200"
  },
  {
    "text": "servers they may be prone to vulnerabilities being detected later in their development stage uh",
    "start": "2069200",
    "end": "2074960"
  },
  {
    "text": "just because they they they follow a different model than the service right they talk to usually trusted servers",
    "start": "2074960",
    "end": "2081280"
  },
  {
    "text": "rather than untrusted clients um not only for the tcpap stacks these",
    "start": "2081280",
    "end": "2086480"
  },
  {
    "text": "issues uh turned up into vulnerabilities but every dns implementation out there should be tested right so we're talking",
    "start": "2086480",
    "end": "2092638"
  },
  {
    "text": "firewalls ideas packet detectors forwarders and basically any sort of software that",
    "start": "2092639",
    "end": "2098560"
  },
  {
    "text": "that parses dns packets if we talk about key takeaways of this",
    "start": "2098560",
    "end": "2104880"
  },
  {
    "text": "research dns complexity leads to critical vulnerabilities not just the complexity of our rfcs but the end the",
    "start": "2104880",
    "end": "2110480"
  },
  {
    "text": "protocol itself right 50 of what we analyzed is vulnerable to this specific compression and pattern that means that",
    "start": "2110480",
    "end": "2116720"
  },
  {
    "text": "other implementations are probably vulnerable as i just mentioned the fact that we looked at tcpap stacks",
    "start": "2116720",
    "end": "2122480"
  },
  {
    "text": "amplifies really the problem because this vulnerable code was millions of devices but other types of products",
    "start": "2122480",
    "end": "2128560"
  },
  {
    "text": "might as well uh be vulnerable and and be vulnerable at a large scale but there are several steps uh to mitigate this",
    "start": "2128560",
    "end": "2135200"
  },
  {
    "text": "problem right we are releasing with this research this report about vulnerabilities and anti-patterns the draft information rfc the open source",
    "start": "2135200",
    "end": "2141920"
  },
  {
    "text": "static analysis queries the open source fingerprinting of stacks and the malicious speak apps they can all be",
    "start": "2141920",
    "end": "2147359"
  },
  {
    "text": "obtained either on github or website or directly by contacting us and we hope that this",
    "start": "2147359",
    "end": "2154240"
  },
  {
    "text": "means that we can mitigate dns based vulnerabilities and eradicate in the future",
    "start": "2154240",
    "end": "2160000"
  },
  {
    "text": "so thank you very much that's what i had to present today uh we're open for questions but please if you would like",
    "start": "2160000",
    "end": "2166560"
  },
  {
    "text": "to know more about this other research that we're doing as well contact us or follow us on social media and we'll be",
    "start": "2166560",
    "end": "2172880"
  },
  {
    "text": "glad to connect thank you very much",
    "start": "2172880",
    "end": "2177559"
  }
]