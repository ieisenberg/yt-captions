[
  {
    "text": "[Music]",
    "start": "1880",
    "end": "16519"
  },
  {
    "text": "[Music]",
    "start": "32430",
    "end": "39280"
  },
  {
    "text": "in Montreal I'm going to be talking about uh the wired equivalent privacy or weap",
    "start": "42840",
    "end": "49480"
  },
  {
    "text": "protocol that's part of the 80211 Wireless ethernet standard that",
    "start": "49480",
    "end": "55520"
  },
  {
    "text": "most of you are probably using right now well you're using the standard you're not using web because they didn't even",
    "start": "55520",
    "end": "61600"
  },
  {
    "text": "bother turning it on here um this's joint work with a couple",
    "start": "61600",
    "end": "66840"
  },
  {
    "text": "of my old colleagues at UC Berkeley where I recently graduated uh Nik divor of and David",
    "start": "66840",
    "end": "73840"
  },
  {
    "text": "Wagner so just a brief outline what I'm going",
    "start": "73840",
    "end": "79119"
  },
  {
    "text": "to talk about um that's really far away uh I'm going",
    "start": "79119",
    "end": "85799"
  },
  {
    "text": "to talk about what the weet protocol is um what it's designed to do and uh a",
    "start": "85799",
    "end": "94079"
  },
  {
    "text": "brief but pretty technical description this talk it's in the more technical session it's going to be more technical",
    "start": "94079",
    "end": "101200"
  },
  {
    "text": "um I can make it as technical as you like um or less technical if you think I'm being too technical so um please",
    "start": "101200",
    "end": "109439"
  },
  {
    "text": "give feedback and do this and stuff or shine shiny lights in my eyes or",
    "start": "109439",
    "end": "114680"
  },
  {
    "text": "something like this and uh I'll pick on you and you'll get to have a say",
    "start": "114680",
    "end": "121560"
  },
  {
    "text": "um after I talk about what the weet protocol is I'll talk about some attacks",
    "start": "121560",
    "end": "126799"
  },
  {
    "text": "against the weet protocol um I'll talk about the attacks in in a couple of broad categories one",
    "start": "126799",
    "end": "133720"
  },
  {
    "text": "is attacks involving keystream reuse and the second is attacks involving message",
    "start": "133720",
    "end": "141120"
  },
  {
    "text": "authentication uh then I'll talk about counter measures how can we protect weap",
    "start": "141239",
    "end": "146360"
  },
  {
    "text": "against these attacks I'll talk about lessons for designing secure protocols that we've",
    "start": "146360",
    "end": "153239"
  },
  {
    "text": "learned from the problems with weap and then conclude so introduction this is pretty",
    "start": "153239",
    "end": "160040"
  },
  {
    "text": "straightforward mobile Computing is basically getting really really popular",
    "start": "160040",
    "end": "165680"
  },
  {
    "text": "right a lot of you in the audience right now have laptops hooked up to wireless ethernet cards and it's a really useful",
    "start": "165680",
    "end": "172800"
  },
  {
    "text": "thing to do um recently there's been a standard",
    "start": "172800",
    "end": "178760"
  },
  {
    "text": "basically adopted for wireless ethernet so that the cards produced by different",
    "start": "178760",
    "end": "184159"
  },
  {
    "text": "manufacturers all can talk to each other and that's great the great thing about standards is there's so many to choose",
    "start": "184159",
    "end": "190720"
  },
  {
    "text": "from in this case it's even better because there isn't right we've got one",
    "start": "190720",
    "end": "196959"
  },
  {
    "text": "standard everyone talks it and so we can talk to each other this is called the I",
    "start": "196959",
    "end": "202799"
  },
  {
    "text": "802.11 standard for wireless ethernet it's gone through a couple of revisions",
    "start": "202799",
    "end": "208200"
  },
  {
    "text": "um currently most cards implement the 802.11b version the B basically stands",
    "start": "208200",
    "end": "213959"
  },
  {
    "text": "for bigger no not really but um it it upped the uh bit rate of 80211",
    "start": "213959",
    "end": "223120"
  },
  {
    "text": "from 2 megabits to 11 megabits per second but the weap part the security",
    "start": "223120",
    "end": "229319"
  },
  {
    "text": "part has been the same right from the beginning of 80211 to now so I don't need to differentiate between uh 80211",
    "start": "229319",
    "end": "237519"
  },
  {
    "text": "and B and whatever so when we use wireless networking out there there are",
    "start": "237519",
    "end": "242760"
  },
  {
    "text": "some pretty big security issues uh the packets are going over the",
    "start": "242760",
    "end": "248879"
  },
  {
    "text": "ether the airwaves the radio waves and unlike physical cables um it's",
    "start": "248879",
    "end": "256840"
  },
  {
    "text": "really hard to to control how far those radio waves get a lot of companies",
    "start": "256840",
    "end": "262280"
  },
  {
    "text": "install 80211 systems in their buildings assuming maybe somewhat",
    "start": "262280",
    "end": "268440"
  },
  {
    "text": "naively maybe they just don't understand what's going on that the radio waves stop at the building",
    "start": "268440",
    "end": "273800"
  },
  {
    "text": "walls right it's pretty clear they don't I mean how many of you have done War driving or have seen like a bunch of w",
    "start": "273800",
    "end": "281479"
  },
  {
    "text": "right this is getting a more popular activity people go around drive around in cars with 80211 gear and just pick up",
    "start": "281479",
    "end": "289960"
  },
  {
    "text": "on whatever companies have open networks turns out if you drive down like uh",
    "start": "289960",
    "end": "295199"
  },
  {
    "text": "Market Street in San Francisco you can go basically the entire way and never 80211",
    "start": "295199",
    "end": "302560"
  },
  {
    "text": "coverage that's pretty awesome so these radio waves can go",
    "start": "303479",
    "end": "310840"
  },
  {
    "text": "everywhere right so as good it administrators what we want to do is",
    "start": "310840",
    "end": "315880"
  },
  {
    "text": "keep the bad guys out as good bad guys we want to keep the bad guys in but so we have this conflict but that's why",
    "start": "315880",
    "end": "322560"
  },
  {
    "text": "we're here um so let's say we want to keep people out how do we keep people",
    "start": "322560",
    "end": "327800"
  },
  {
    "text": "from Reading traffic from modifying traffic from accessing our Network when they shouldn't be there and the answer",
    "start": "327800",
    "end": "333840"
  },
  {
    "text": "is the weet protocol wired equivalent privacy and the claim is that the weet protocol offers the same level of",
    "start": "333840",
    "end": "340639"
  },
  {
    "text": "security as a physical wire right so if you had a physical wire in your office",
    "start": "340639",
    "end": "345960"
  },
  {
    "text": "the web protocol is supposed to Pro provide the same level of security between two wireless nodes in your",
    "start": "345960",
    "end": "351240"
  },
  {
    "text": "office that a physical wire between them does okay so what are the security goals in",
    "start": "351240",
    "end": "358639"
  },
  {
    "text": "particular the weet protocol uh is intended to enforce three main security goals and these security",
    "start": "358639",
    "end": "365600"
  },
  {
    "text": "goals are documented in the 80211 standard um not very well mind you",
    "start": "365600",
    "end": "370840"
  },
  {
    "text": "there's no one place where it says the following or the security goals of the weet protocol which is unfortunate",
    "start": "370840",
    "end": "376880"
  },
  {
    "text": "because protocol design should have that explicitly written and that's possibly",
    "start": "376880",
    "end": "382120"
  },
  {
    "text": "one of the lessons but if you look at different sections of it it says and here what we're doing is protecting",
    "start": "382120",
    "end": "388240"
  },
  {
    "text": "against this and here what we're doing is protecting against this and you put them all together and you find these",
    "start": "388240",
    "end": "393280"
  },
  {
    "text": "three security goals come out uh the first is confidentiality you want to prevent the adversary from being able to",
    "start": "393280",
    "end": "399919"
  },
  {
    "text": "learn the contents of packets that uh are traveling over the air right this basically just",
    "start": "399919",
    "end": "407680"
  },
  {
    "text": "encryption the second is Access Control you want to prevent an adversary from using your wireless infrastructure okay",
    "start": "407680",
    "end": "414319"
  },
  {
    "text": "so you've deployed this wireless network for your building you don't want to that",
    "start": "414319",
    "end": "419879"
  },
  {
    "text": "just some random spammer drive up to your parking lot and dump all this SMTP traffic over your",
    "start": "419879",
    "end": "427080"
  },
  {
    "text": "network and the third is data Integrity this is to prevent an adversary from",
    "start": "427080",
    "end": "432680"
  },
  {
    "text": "modifying your data in transit so you're say a bank with a wireless network and",
    "start": "432680",
    "end": "438120"
  },
  {
    "text": "things are going over the wireless net and even if the adversary can't read it",
    "start": "438120",
    "end": "443680"
  },
  {
    "text": "as in the first point here if he can modify that data which you will subsequently accept as authentic we",
    "start": "443680",
    "end": "449960"
  },
  {
    "text": "still have a big problem right he can perform all sorts of funny things either just by scribbling it and causing very",
    "start": "449960",
    "end": "457039"
  },
  {
    "text": "strange money transfers to happen or maybe intentionally just changing a packet so that the dollar value changes",
    "start": "457039",
    "end": "464919"
  },
  {
    "text": "or that uh his name is substituted in the pay to Field of all traffic right",
    "start": "464919",
    "end": "471280"
  },
  {
    "text": "though he would be caught pretty quickly for that so these are the three main security goals weap unfortunately",
    "start": "471280",
    "end": "477520"
  },
  {
    "text": "satisfies none of them so that's",
    "start": "477520",
    "end": "482479"
  },
  {
    "text": "unfortunate so we're going to talk about how it is that web satisfies none of them and what",
    "start": "482599",
    "end": "489919"
  },
  {
    "text": "we can do to fix it and but in order to do that we have to talk about what web",
    "start": "489919",
    "end": "495000"
  },
  {
    "text": "is so here's where the tech knob starts twisting up to",
    "start": "495000",
    "end": "500560"
  },
  {
    "text": "seven we'll go higher later so a brief description of the wet",
    "start": "500560",
    "end": "506479"
  },
  {
    "text": "protocol the sender and receiver share a secret key which we'll call K right this",
    "start": "506479",
    "end": "512279"
  },
  {
    "text": "secret key in weap is um there are two versions of weap there's the 40 bit",
    "start": "512279",
    "end": "518000"
  },
  {
    "text": "version in which K is 40 bits long and there's the 128bit version in which K is",
    "start": "518000",
    "end": "523080"
  },
  {
    "text": "104 bits long okay I'm not sure where the marketing people came up with that but",
    "start": "523080",
    "end": "529399"
  },
  {
    "text": "they call it 128bit weap but the key is only 104 bits",
    "start": "529399",
    "end": "534880"
  },
  {
    "text": "long okay it's just as hard to break 104 as it is to break 128 so really there's",
    "start": "534880",
    "end": "539920"
  },
  {
    "text": "no difference um okay now let's say the sender wants",
    "start": "539920",
    "end": "545880"
  },
  {
    "text": "to transmit a message m to the receiver here's what he does four steps first",
    "start": "545880",
    "end": "551399"
  },
  {
    "text": "step is compute a check sum uh which I'll denote by C ofm which does not",
    "start": "551399",
    "end": "557560"
  },
  {
    "text": "depend on the key K it only depends on the checkm on the message so it's basically a hash of the",
    "start": "557560",
    "end": "564440"
  },
  {
    "text": "message now we pick an IV which is initialization Vector it basically means just pick a random number",
    "start": "564440",
    "end": "570839"
  },
  {
    "text": "V and generate a keyst stream using the stream Cipher rc4 so I'll talk a bit",
    "start": "570839",
    "end": "577839"
  },
  {
    "text": "more about this later but basically what this means is you have rc4 does anyone not know what rc4 is not heard of it",
    "start": "577839",
    "end": "584760"
  },
  {
    "text": "awesome okay so you have rc4 which is a stream Cipher it takes as input a key",
    "start": "584760",
    "end": "591079"
  },
  {
    "text": "and outputs a keyst stream it never takes the message in or anything like that a stream Cipher generates a key",
    "start": "591079",
    "end": "597000"
  },
  {
    "text": "stream which is then exord against the message to encrypt it and the same keyst stream is xord against the cipher text",
    "start": "597000",
    "end": "602920"
  },
  {
    "text": "to decrypt it and xord cancel so you get the original message back so this",
    "start": "602920",
    "end": "608680"
  },
  {
    "text": "denotation rc4 bracket V comma K means you take the random number V and the",
    "start": "608680",
    "end": "614680"
  },
  {
    "text": "secret key K you stick them together to make a bigger string part of which is",
    "start": "614680",
    "end": "620040"
  },
  {
    "text": "random part of which is the shared secret use that bigger string as the key for",
    "start": "620040",
    "end": "625720"
  },
  {
    "text": "rc4 and then take the resulting rc4 out okay this is actually a perfect a",
    "start": "625720",
    "end": "631560"
  },
  {
    "text": "perfectly standard construction with stream ciphers and we'll see why that this V is necessary why don't you just",
    "start": "631560",
    "end": "637519"
  },
  {
    "text": "use rc4 of K I mean that's a random sequence of bits you both the sender and",
    "start": "637519",
    "end": "642720"
  },
  {
    "text": "receiver know it we'll see why you don't use that in a couple of slides why the V is important okay and then you just do what",
    "start": "642720",
    "end": "649560"
  },
  {
    "text": "you normally do with rc4 which is you take the message which is now M and you've stuck the check sum C of M at the",
    "start": "649560",
    "end": "657120"
  },
  {
    "text": "end of it so you have this message which is slightly longer than the original one and you exor it against",
    "start": "657120",
    "end": "663959"
  },
  {
    "text": "the keystream to get the cipher text and then what you transmit over the air is V",
    "start": "663959",
    "end": "671040"
  },
  {
    "text": "the random value and the cipher text okay now the receiver what does he do he",
    "start": "671040",
    "end": "678120"
  },
  {
    "text": "takes the V that was transmitted over the air because he doesn't know how to generate v v was picked randomly or",
    "start": "678120",
    "end": "684480"
  },
  {
    "text": "however it was picked sequentially or something could be the same value every time the spec actually",
    "start": "684480",
    "end": "689800"
  },
  {
    "text": "allows you to do that which is not very clever um and the shared K to generate the same",
    "start": "689800",
    "end": "697839"
  },
  {
    "text": "keyst stream rc4 V comma K you exor it with the cipher text and you get the",
    "start": "697839",
    "end": "703000"
  },
  {
    "text": "original message and a check sum back and then you check that the check sum is in fact the correct check sum on the",
    "start": "703000",
    "end": "709600"
  },
  {
    "text": "message and if it is you assume that the uh packet was correctly transmitted",
    "start": "709600",
    "end": "715720"
  },
  {
    "text": "there were no errors there was no adversary and that the original sender actually knew the key and you accept the",
    "start": "715720",
    "end": "723040"
  },
  {
    "text": "result as the message transmitted so we'll draw a little picture here just so you get it the CRC is the check sum so",
    "start": "723040",
    "end": "730279"
  },
  {
    "text": "you take the message you stick the check sum at the end you take the keyst stream out of rc4 with v and K as inputs you",
    "start": "730279",
    "end": "737680"
  },
  {
    "text": "exor the two together to get the cipher text and then you s v at the front and you send it okay pretty little",
    "start": "737680",
    "end": "744360"
  },
  {
    "text": "picture which is in your notes okay okay",
    "start": "744360",
    "end": "751320"
  },
  {
    "text": "[Music]",
    "start": "751320",
    "end": "754399"
  },
  {
    "text": "so okay I've turned mine off",
    "start": "760519",
    "end": "764519"
  },
  {
    "text": "too uh so web uses rc4 as I mentioned and",
    "start": "767000",
    "end": "774800"
  },
  {
    "text": "yeah not at all so web assumes that you have a shared secret between two endpoints and doesn't at all talk about",
    "start": "777560",
    "end": "784880"
  },
  {
    "text": "how it gets there um in many Implement in many uh places where web is used it's",
    "start": "784880",
    "end": "790880"
  },
  {
    "text": "simply manual keying I just type the secret into this computer and into this computer and into this computer and",
    "start": "790880",
    "end": "798079"
  },
  {
    "text": "often times everyone like at Berkeley for example everyone has the same shared",
    "start": "798079",
    "end": "803959"
  },
  {
    "text": "secret right two people can keep a secret if one of them is dead right now how about few th000",
    "start": "803959",
    "end": "811519"
  },
  {
    "text": "people um there are more advanced ways of Distributing keys and people sell",
    "start": "812120",
    "end": "819839"
  },
  {
    "text": "products which do better key management but as we'll see those products help almost not at all right because Key",
    "start": "819839",
    "end": "826079"
  },
  {
    "text": "Management isn't the problem well it's one problem but it's",
    "start": "826079",
    "end": "831160"
  },
  {
    "text": "not even the problem I'm talking about you have to solve that one as well",
    "start": "831160",
    "end": "837320"
  },
  {
    "text": "okay so they used our 4 which is a well-known stream Cipher which is good at least they didn't try to make their",
    "start": "837320",
    "end": "844399"
  },
  {
    "text": "own Cipher right I'm sure all of you know of products that o we've generated our own secret Andor patented although",
    "start": "844399",
    "end": "852639"
  },
  {
    "text": "some people you can't really do Secret and patented technology um to make our Ultra Cool hyp",
    "start": "852639",
    "end": "861880"
  },
  {
    "text": "secure system and like say GSM and",
    "start": "861880",
    "end": "869360"
  },
  {
    "text": "and then somebody finds a flaw in it in two hours over an Indian lunch",
    "start": "869959",
    "end": "875759"
  },
  {
    "text": "so um yeah so don't do that so they were clever they used",
    "start": "878279",
    "end": "885600"
  },
  {
    "text": "rc4 um and okay so I've said how rc4 works you have a key stream uh K capital K out that you exor",
    "start": "885839",
    "end": "895279"
  },
  {
    "text": "against the plane text to get the cipher text and the receiver just does the exor again and gets the plain text back and",
    "start": "895279",
    "end": "901800"
  },
  {
    "text": "xor is cancel and math is in green and you see that this okay you can read it",
    "start": "901800",
    "end": "907959"
  },
  {
    "text": "in your books okay so now we're going to come to",
    "start": "907959",
    "end": "916160"
  },
  {
    "text": "why we need that V this is what we call the two-time pad problem I'm sure most",
    "start": "916160",
    "end": "921600"
  },
  {
    "text": "of you are familiar with the onetime pad the onetime pad is an information theoretically secure Cipher that is it",
    "start": "921600",
    "end": "929360"
  },
  {
    "text": "is impossible to break with any amount of computing power under certain",
    "start": "929360",
    "end": "936079"
  },
  {
    "text": "assumptions and the idea the some of the assumptions include that the key is",
    "start": "936079",
    "end": "941600"
  },
  {
    "text": "generated or the key is called the pad is generated completely randomly using a",
    "start": "941600",
    "end": "947120"
  },
  {
    "text": "physical source of Randomness and that the keystream is never reused right so two independent",
    "start": "947120",
    "end": "954800"
  },
  {
    "text": "bits of pad two different bits of pad are completely uncorrelated there are no two bits that have any relationship at",
    "start": "954800",
    "end": "962480"
  },
  {
    "text": "all and you can prove pretty easily that this is completely secure an adversary",
    "start": "962480",
    "end": "967839"
  },
  {
    "text": "seeing a message encrypted with a one time pad knows basically the length of the message and no other",
    "start": "967839",
    "end": "974560"
  },
  {
    "text": "information right now why is it that we need to",
    "start": "974560",
    "end": "980399"
  },
  {
    "text": "never reuse the data reuse the keystream well if we reuse the key stream we get what's called a two time pad suppose",
    "start": "980399",
    "end": "987600"
  },
  {
    "text": "that plain Texs one and two are encrypted with the same keystream k then",
    "start": "987600",
    "end": "992759"
  },
  {
    "text": "the first Cipher Tex is P1 xor K the second cipher Tex is P2 xor K now what",
    "start": "992759",
    "end": "998199"
  },
  {
    "text": "happens the adversary let's say he knows or guesses that these two Cipher texts were encrypted using the same pad he",
    "start": "998199",
    "end": "1005759"
  },
  {
    "text": "exors the cipher text together and the ks cancel out in the exor so you just",
    "start": "1005759",
    "end": "1012319"
  },
  {
    "text": "get the the xor of the cyppher text is the same as the xor of the plain text now the adversary just has a message",
    "start": "1012319",
    "end": "1018440"
  },
  {
    "text": "which is just the exor of two plain Texs if he knows one of the pl Texs or pieces",
    "start": "1018440",
    "end": "1023959"
  },
  {
    "text": "of one of the pl Texs he trivially gets the corresponding piece of the other",
    "start": "1023959",
    "end": "1029520"
  },
  {
    "text": "right it turns out using techniques developed long ago back in the",
    "start": "1029520",
    "end": "1035798"
  },
  {
    "text": "pre-commercial use of cryptography days um people knew how to given only",
    "start": "1035799",
    "end": "1043839"
  },
  {
    "text": "p1x or P2 basically extract both P1 and P2 right now mathematically this is",
    "start": "1043839",
    "end": "1049799"
  },
  {
    "text": "impossible because there are infinitely many solutions but only a couple of them will have this piece of funny exor be",
    "start": "1049799",
    "end": "1057600"
  },
  {
    "text": "the exor of two valid looking messages right English is highly redundant if",
    "start": "1057600",
    "end": "1063039"
  },
  {
    "text": "these two messages are English what you do is you basically guess that the word the' appears say here in the cipher text",
    "start": "1063039",
    "end": "1070919"
  },
  {
    "text": "and you just totally guess and then you work out what the plain text would be for the other one and if that looks like a plausible sequence of three letters in",
    "start": "1070919",
    "end": "1077600"
  },
  {
    "text": "English then you try to figure out what the previous letter probably is and then work out the previous letter of the",
    "start": "1077600",
    "end": "1084039"
  },
  {
    "text": "other one and so on and this is called the this um sliding",
    "start": "1084039",
    "end": "1089880"
  },
  {
    "text": "pad and sliding crib rather and you uh",
    "start": "1089880",
    "end": "1095240"
  },
  {
    "text": "can basically work out what P1 and P2 are from p1x or P2 but of course if you know one of them you get the other one",
    "start": "1095240",
    "end": "1101679"
  },
  {
    "text": "for free with no work at all so what does web do so we don't want",
    "start": "1101679",
    "end": "1108000"
  },
  {
    "text": "to use the same key stream twice right so the key stream for web is rc4",
    "start": "1108000",
    "end": "1115640"
  },
  {
    "text": "of V comma K and this depends only on V and K right if I use the same value of v",
    "start": "1115640",
    "end": "1121600"
  },
  {
    "text": "and K again I'm going to get the same keyst stream and that would be bad right as we just saw so but K is fixed right",
    "start": "1121600",
    "end": "1130000"
  },
  {
    "text": "everyone's using the same K or at least you're using the same k for the duration of your session right even the products",
    "start": "1130000",
    "end": "1138120"
  },
  {
    "text": "which have which allow key distribution with a different key for every person tend to use the same k for a while some of them",
    "start": "1138120",
    "end": "1148240"
  },
  {
    "text": "do change them pretty often and that helps somewhat but let's say for now K is",
    "start": "1148240",
    "end": "1154919"
  },
  {
    "text": "fixed for some amount of time and possibly for some amount of",
    "start": "1154919",
    "end": "1161520"
  },
  {
    "text": "users now the keyst stream depends only on V so if you ever use the same value of V twice you generate the same key",
    "start": "1161960",
    "end": "1171039"
  },
  {
    "text": "stream if two packets get transmitted with the same value of V you reuse the",
    "start": "1171240",
    "end": "1176840"
  },
  {
    "text": "keyst stream which as we said is bad in Big Red Letters also as we saw in the diagram V",
    "start": "1176840",
    "end": "1184440"
  },
  {
    "text": "gets RR V gets transmitted in the clear at the beginning of every packet so the",
    "start": "1184440",
    "end": "1190320"
  },
  {
    "text": "adversary knows when two packets have the same value of V right they're tagged",
    "start": "1190320",
    "end": "1196400"
  },
  {
    "text": "at the beginning with the value of V they use so all he has to do is keep this like",
    "start": "1196400",
    "end": "1202440"
  },
  {
    "text": "table and just remember which values of v he's seen and when he sees a value of",
    "start": "1202440",
    "end": "1207720"
  },
  {
    "text": "V for the second time then he can decrypt both of those",
    "start": "1207720",
    "end": "1213960"
  },
  {
    "text": "packets so how many possible values of V are there How likely is it that you're",
    "start": "1214400",
    "end": "1219600"
  },
  {
    "text": "going to see a repeat well it turns out in the spec they allocated 24 bits in",
    "start": "1219600",
    "end": "1225320"
  },
  {
    "text": "the header for the value of V Okay so there are only 2 to the^ of 24 or about",
    "start": "1225320",
    "end": "1231840"
  },
  {
    "text": "16 million possible values of V now 16 million is a big number for me to count",
    "start": "1231840",
    "end": "1238280"
  },
  {
    "text": "up to but my nice P3 here can do it pretty quick",
    "start": "1238280",
    "end": "1244200"
  },
  {
    "text": "right um so after 16 million packets you have to repeat one due to a great",
    "start": "1244200",
    "end": "1250240"
  },
  {
    "text": "mathematical result called the pigeon hole principle really it's called the fle",
    "start": "1250240",
    "end": "1257159"
  },
  {
    "text": "principle um so you're going to have to repeat one pretty quick um",
    "start": "1257159",
    "end": "1264080"
  },
  {
    "text": "oops but wait it gets worse okay you only have to wait for 16",
    "start": "1264080",
    "end": "1271559"
  },
  {
    "text": "million if you uh the adversary finds the worst",
    "start": "1271559",
    "end": "1277640"
  },
  {
    "text": "possible thing happens which is that he waits for 60 million packets and every one of them is different turns out all",
    "start": "1277640",
    "end": "1283799"
  },
  {
    "text": "the 80211 cards we checked every time you put the card in it resets its to",
    "start": "1283799",
    "end": "1289000"
  },
  {
    "text": "zero and just increments by one for each packet it sends so if I watch you send some",
    "start": "1289000",
    "end": "1298200"
  },
  {
    "text": "traffic and then tomorrow I come back and you boot up your computer again and",
    "start": "1298200",
    "end": "1304240"
  },
  {
    "text": "send some more traffic your IV space will overlap they'll both be basically low numbers and if you're using the same",
    "start": "1304240",
    "end": "1311240"
  },
  {
    "text": "value of K you've just repeated a whole lot of keystream and now I can decrypt all your",
    "start": "1311240",
    "end": "1316960"
  },
  {
    "text": "traffic also in uh many installations both directions from laptop to base",
    "start": "1316960",
    "end": "1323559"
  },
  {
    "text": "station and base station to laptop use the same value of K so that's another place we can get",
    "start": "1323559",
    "end": "1330159"
  },
  {
    "text": "collisions we can try to find when the laptop sends a value X and the Bas station sends the value X back that's a",
    "start": "1330159",
    "end": "1337000"
  },
  {
    "text": "collision that we can use and also if many different people are using the same K I can try to find",
    "start": "1337000",
    "end": "1343840"
  },
  {
    "text": "collisions between them so if two people stick their cards in around the same time they'll be colliding almost every",
    "start": "1343840",
    "end": "1351440"
  },
  {
    "text": "packet they send this makes collisions much more problem common so what does the attacker",
    "start": "1351440",
    "end": "1358000"
  },
  {
    "text": "do so now we're going to play attacker which is much more fun thing to play um we have the decryption dictionary which",
    "start": "1358000",
    "end": "1365840"
  },
  {
    "text": "is uh the adversary say knows uh both the cipher",
    "start": "1365840",
    "end": "1371320"
  },
  {
    "text": "text and the plane text for uh some packets encrypted with an ivv",
    "start": "1371320",
    "end": "1379278"
  },
  {
    "text": "and how can he arrange that how can he arrange to know the plain text of certain",
    "start": "1380039",
    "end": "1386559"
  },
  {
    "text": "packets well it's actually pretty easy he can for example send it to you right",
    "start": "1386559",
    "end": "1392360"
  },
  {
    "text": "and how can he send it to you he can ping you right if the wireless network",
    "start": "1392360",
    "end": "1397799"
  },
  {
    "text": "is addressable from the outside for example he can just send a ping to your laptop with a large body",
    "start": "1397799",
    "end": "1406200"
  },
  {
    "text": "you know that pings can have arbitrary well not but some large amount of of data in them and he just fills that with",
    "start": "1406200",
    "end": "1414480"
  },
  {
    "text": "a known pattern say all zeros and then sends it to you and looks at the",
    "start": "1414480",
    "end": "1419679"
  },
  {
    "text": "encrypted result and the encrypted result will just be the exor of what he sent you with the the pad rc4 V uh K",
    "start": "1419679",
    "end": "1429039"
  },
  {
    "text": "comma V and uh he just stores that so for every",
    "start": "1429039",
    "end": "1435919"
  },
  {
    "text": "value of V he sees he just stores what the pad is he still doesn't know K right",
    "start": "1435919",
    "end": "1442120"
  },
  {
    "text": "nowhere in here are we actually going to break rc4 and determine what the key K is but we don't need to to decrypt the",
    "start": "1442120",
    "end": "1449640"
  },
  {
    "text": "data we only need to know what the keystream generated by K and any IV",
    "start": "1449640",
    "end": "1455120"
  },
  {
    "text": "we're likely to see is going to be so we just generate this big table where each table is the size of a",
    "start": "1455120",
    "end": "1462559"
  },
  {
    "text": "packet which is 1 and2 k each entry and how many entries are",
    "start": "1462559",
    "end": "1467600"
  },
  {
    "text": "there well at most two to the 24 of them so this is a 24 GB table and if you go",
    "start": "1467600",
    "end": "1473880"
  },
  {
    "text": "out to a store now and buy a 24 GB minuscule hard drive I mean this cost",
    "start": "1473880",
    "end": "1479320"
  },
  {
    "text": "you what a 100 bucks today 150 not very expensive to buy 24 gigabyte hard",
    "start": "1479320",
    "end": "1486000"
  },
  {
    "text": "drive um so the attacker now has this big",
    "start": "1486000",
    "end": "1491279"
  },
  {
    "text": "table that has it's indexed by IV and",
    "start": "1491279",
    "end": "1496720"
  },
  {
    "text": "its value is this 1 5K pad which is the result of the",
    "start": "1496720",
    "end": "1502240"
  },
  {
    "text": "rc4 uh Cipher and then when he gets a packet that has a v that's in the table he just looks up the pad exors the pad",
    "start": "1502240",
    "end": "1508760"
  },
  {
    "text": "against the packet and gets the clear text right no key",
    "start": "1508760",
    "end": "1514320"
  },
  {
    "text": "needed the size of the table another Point only depends on the number of IVs you're likely to see it's independent of",
    "start": "1514520",
    "end": "1521279"
  },
  {
    "text": "the size of K right whether you're using the 40 bit version or the 104 bit version doesn't matter at all to this",
    "start": "1521279",
    "end": "1527919"
  },
  {
    "text": "attack this attack doesn't know how big K is it doesn't care it only depends on",
    "start": "1527919",
    "end": "1533520"
  },
  {
    "text": "how big the IV space is and that's why having only a 24-bit IV really hurts you",
    "start": "1533520",
    "end": "1539880"
  },
  {
    "text": "if you had a much longer IV this attack would not be possible you wouldn't be able to store two to 128 different table",
    "start": "1539880",
    "end": "1549120"
  },
  {
    "text": "entries also if you're using cards with the IV reset to zero problem then most IVs will be small and the dictionary",
    "start": "1549120",
    "end": "1556600"
  },
  {
    "text": "will be even smaller you might only have to store several thousand IVs starting with",
    "start": "1556600",
    "end": "1562039"
  },
  {
    "text": "zero and working your way up rather than all 16",
    "start": "1562039",
    "end": "1567640"
  },
  {
    "text": "million so are there any questions up to this point in the",
    "start": "1569360",
    "end": "1576919"
  },
  {
    "text": "back uh yeah we did yeah the question was has anyone actually prototype this scenario and we did in fact Do It um",
    "start": "1578600",
    "end": "1585360"
  },
  {
    "text": "we've done this in the lab where we built I mean we didn't build the entire 24 GB dictionary but we built enough",
    "start": "1585360",
    "end": "1592480"
  },
  {
    "text": "entries that it was clear that this would just work if we wanted to just keep",
    "start": "1592480",
    "end": "1598799"
  },
  {
    "text": "listening okay I'll go on so now I'll talk about message",
    "start": "1599279",
    "end": "1604600"
  },
  {
    "text": "authentication so so far we've seen how an attacker can read packets going over",
    "start": "1604600",
    "end": "1609840"
  },
  {
    "text": "the air uh message authentication once again if we think",
    "start": "1609840",
    "end": "1617000"
  },
  {
    "text": "about how the weap receiver works the receiver will accept a packet if after",
    "start": "1617000",
    "end": "1622919"
  },
  {
    "text": "the decryption the last four bytes of the plain text the check sum is only a 4 byte",
    "start": "1622919",
    "end": "1628679"
  },
  {
    "text": "number um is a correct check sum of the rest of it so it decrypts the encrypted",
    "start": "1628679",
    "end": "1635559"
  },
  {
    "text": "message uh treats that as a message with four bytes of check sum and calculates",
    "start": "1635559",
    "end": "1641159"
  },
  {
    "text": "the check sum on the message part and sees if it matches the transmitted checkm and if it does that's how the",
    "start": "1641159",
    "end": "1647919"
  },
  {
    "text": "receiver quote knows that the message was",
    "start": "1647919",
    "end": "1653440"
  },
  {
    "text": "valid so the checkum algorithm we need to know what it is it turns out it's",
    "start": "1653440",
    "end": "1659399"
  },
  {
    "text": "crc32 it's a very common Che sum algorithm used in in both wired and",
    "start": "1659399",
    "end": "1666240"
  },
  {
    "text": "radio applications to prevent against random bit errors caused by noise right",
    "start": "1666240",
    "end": "1673279"
  },
  {
    "text": "it very efficiently can detect random errors in the transmitted string",
    "start": "1673279",
    "end": "1679279"
  },
  {
    "text": "turns out it's quite a poor choice for this protocol because while they're very",
    "start": "1679279",
    "end": "1685120"
  },
  {
    "text": "good at detecting random errors they're exceedingly poor at detecting malicious errors it's very easy to create a new",
    "start": "1685120",
    "end": "1692840"
  },
  {
    "text": "message whose CRC checks them is either the same as an existing one or has any",
    "start": "1692840",
    "end": "1698960"
  },
  {
    "text": "given value you want crc's are not what in the literature we call oneway or",
    "start": "1698960",
    "end": "1704399"
  },
  {
    "text": "Collision resistant right they're not secure hashes",
    "start": "1704399",
    "end": "1709960"
  },
  {
    "text": "they're useful against random mistakes but not against a hacker with a pocket",
    "start": "1710039",
    "end": "1716200"
  },
  {
    "text": "calculator so and it's weird that they put it here because there's already a CRC in the protocol right at a lower",
    "start": "1716480",
    "end": "1723360"
  },
  {
    "text": "layer than weap at the hardware transmission layer there's already a CRC",
    "start": "1723360",
    "end": "1728519"
  },
  {
    "text": "there so they're already protecting against random errors right so this CRC really is there to protect against",
    "start": "1728519",
    "end": "1734840"
  },
  {
    "text": "malicious errors but it doesn't um and we'll see why in just a second so",
    "start": "1734840",
    "end": "1741600"
  },
  {
    "text": "crc32 has two main properties of importance the first is that it is",
    "start": "1741600",
    "end": "1747519"
  },
  {
    "text": "independent of the shared secret and the IV if I take the same message I'll get",
    "start": "1747519",
    "end": "1752559"
  },
  {
    "text": "the same CRC out even if I change the IV even if I change the key right this",
    "start": "1752559",
    "end": "1759399"
  },
  {
    "text": "means that the attacker even if he doesn't know the key or IV can calculate",
    "start": "1759399",
    "end": "1764600"
  },
  {
    "text": "correct crc's for any message he wants",
    "start": "1764600",
    "end": "1769880"
  },
  {
    "text": "okay so that's property one property two is a property called linearity CRC is",
    "start": "1769880",
    "end": "1776120"
  },
  {
    "text": "linear this is where the technical knob pumps up another notch or two so this is kind of important to",
    "start": "1776120",
    "end": "1784000"
  },
  {
    "text": "understand here for the next couple slides so if I have a message M and I",
    "start": "1784000",
    "end": "1789559"
  },
  {
    "text": "have a difference D then if I create the new message which is M exord with d so",
    "start": "1789559",
    "end": "1795799"
  },
  {
    "text": "say d is just you flip one bit some somewhere so D is 0000 1",
    "start": "1795799",
    "end": "1801440"
  },
  {
    "text": "0 right then MX or D is the same message as M except one of the bits is flipped",
    "start": "1801440",
    "end": "1809000"
  },
  {
    "text": "then the check sum on that message is just the check sum on the original message exord with the check sum on the",
    "start": "1809000",
    "end": "1816240"
  },
  {
    "text": "difference so if I want to figure out what the check sum on the modified",
    "start": "1816240",
    "end": "1822159"
  },
  {
    "text": "message is even if I don't know the original message but I know the check sum of the original message well I just",
    "start": "1822159",
    "end": "1828679"
  },
  {
    "text": "calculate the check sum of the difference which is 00 0 1 0 Z which of course I can do because it",
    "start": "1828679",
    "end": "1835600"
  },
  {
    "text": "doesn't depend on the shared secret and then exor that check sum with the original check sum and I get the the",
    "start": "1835600",
    "end": "1844039"
  },
  {
    "text": "check sum of the modified message okay so this check sum is very malleable if we were to use something",
    "start": "1844039",
    "end": "1851039"
  },
  {
    "text": "like shaan or something then you wouldn't be able to do this if you only",
    "start": "1851039",
    "end": "1856080"
  },
  {
    "text": "know what the difference between two messages is you shouldn't be able to know anything about the difference",
    "start": "1856080",
    "end": "1861279"
  },
  {
    "text": "between their Shaw hashes or any secure hash but uh CRC does not have this",
    "start": "1861279",
    "end": "1868639"
  },
  {
    "text": "property so this leads to an easy message modification attack suppose",
    "start": "1868639",
    "end": "1873840"
  },
  {
    "text": "there's a message going over the air and I want to change it I don't know even maybe what it is but I know I want to",
    "start": "1873840",
    "end": "1881399"
  },
  {
    "text": "change a few particular bits in a in particular way okay so I have uh some D",
    "start": "1881399",
    "end": "1889240"
  },
  {
    "text": "of of my choosing I'm the attacker and I want to trick the receiver to accept the",
    "start": "1889240",
    "end": "1896360"
  },
  {
    "text": "message F which is our fake message instead of the original message M and F",
    "start": "1896360",
    "end": "1901600"
  },
  {
    "text": "is MX or D so suppose the original me uh",
    "start": "1901600",
    "end": "1909200"
  },
  {
    "text": "original transmitter sent the message M which produced the cipher text C after",
    "start": "1909200",
    "end": "1916279"
  },
  {
    "text": "you exort it with the right key which I don't know and the IV V which I do know because it's in the",
    "start": "1916279",
    "end": "1923440"
  },
  {
    "text": "packet so what do I do well crc32 is linear as",
    "start": "1924120",
    "end": "1930200"
  },
  {
    "text": "I said and rc4 like all stream ciphers is linear and what do I mean by that",
    "start": "1930200",
    "end": "1935919"
  },
  {
    "text": "well very similar thing if I know the rc4 encryption of a certain message and",
    "start": "1935919",
    "end": "1942360"
  },
  {
    "text": "I know the difference I want the change I want to make to that message D then",
    "start": "1942360",
    "end": "1948360"
  },
  {
    "text": "all I do is take the original message xor in D I don't even have to take the rc4 of D which is good because I don't",
    "start": "1948360",
    "end": "1955519"
  },
  {
    "text": "know the key I can't do that I just exor in D to the cipher text and when the",
    "start": "1955519",
    "end": "1961240"
  },
  {
    "text": "receiver decrypts it he'll get the modified plane text just like I want because of all this nice associativity",
    "start": "1961240",
    "end": "1967720"
  },
  {
    "text": "and commuity of xor the D's can just move around",
    "start": "1967720",
    "end": "1973039"
  },
  {
    "text": "so that's nice so what do I do the adversary takes the cyppher Tex C that",
    "start": "1973039",
    "end": "1978880"
  },
  {
    "text": "was transmitted by the original sender exors in what this thing which is D the",
    "start": "1978880",
    "end": "1984639"
  },
  {
    "text": "change I want to make to the message followed by the check sum of D the check",
    "start": "1984639",
    "end": "1990120"
  },
  {
    "text": "sum of the change so I just take that string and exort it in with the original",
    "start": "1990120",
    "end": "1996880"
  },
  {
    "text": "Cipher text to get a new Cipher text C Prime and just send the same V and C Prime to the receiver okay what does the",
    "start": "1996880",
    "end": "2005120"
  },
  {
    "text": "receiver do here's another notch up cuz we have lots of green in this slide so okay what",
    "start": "2005120",
    "end": "2013039"
  },
  {
    "text": "does the receiver do he has uh C Prime now when he wants to",
    "start": "2013039",
    "end": "2019960"
  },
  {
    "text": "accept a packet the algorithm is you find the uh rc4 keystream of V comma K",
    "start": "2019960",
    "end": "2027279"
  },
  {
    "text": "you exort it in with C so what was c",
    "start": "2027279",
    "end": "2032840"
  },
  {
    "text": "um or sorry C Prime C Prime was just c xor d comma C of",
    "start": "2032840",
    "end": "2039080"
  },
  {
    "text": "D xor rc4 of this but C xor rc4 of V comma K is just",
    "start": "2039080",
    "end": "2046679"
  },
  {
    "text": "the original message M comma C of M so now we have M comma C of M exor",
    "start": "2046679",
    "end": "2052679"
  },
  {
    "text": "with d comma C of D so all that means is you exort the first bits and you exort the second bits and you have that the",
    "start": "2052679",
    "end": "2059440"
  },
  {
    "text": "first part of this message is the original message exord with the difference we want to make to it the second part of the message is the checkm",
    "start": "2059440",
    "end": "2066000"
  },
  {
    "text": "on the original message exord with the check sum of the change we want to make to",
    "start": "2066000",
    "end": "2071158"
  },
  {
    "text": "it but this by the property of linearity of CRC is just the check sum on the",
    "start": "2071159",
    "end": "2077200"
  },
  {
    "text": "modified message and since F by definition is MX or D this is just F comma C of f okay so this is a correctly",
    "start": "2077200",
    "end": "2085440"
  },
  {
    "text": "formed decrypted message so this seems a little weird you shouldn't be able to do",
    "start": "2085440",
    "end": "2091280"
  },
  {
    "text": "this what I had was a message with a check sum on it wrapped up in an encryption I took this sealed envelope",
    "start": "2091280",
    "end": "2098599"
  },
  {
    "text": "of encryption I made some modifications to it without being able to open it yet",
    "start": "2098599",
    "end": "2104480"
  },
  {
    "text": "when it was opened I got a different message with a valid check",
    "start": "2104480",
    "end": "2110440"
  },
  {
    "text": "sum okay it's not me it's the",
    "start": "2110440",
    "end": "2118800"
  },
  {
    "text": "math okay so that shouldn't happen right you should never be able you should not",
    "start": "2118800",
    "end": "2125839"
  },
  {
    "text": "be able to you should not design you should be able to but you shouldn't design a protocol where where this is uh",
    "start": "2125839",
    "end": "2133440"
  },
  {
    "text": "able to be the case so what does the adversary do now he checks that the the",
    "start": "2133440",
    "end": "2139480"
  },
  {
    "text": "check sum in the packet is in fact the correct check sum of the rest of the message which it is they're both C of",
    "start": "2139480",
    "end": "2145760"
  },
  {
    "text": "f except the message f is the one transmitted the adversary has",
    "start": "2145760",
    "end": "2152359"
  },
  {
    "text": "succeeded yeah okay",
    "start": "2152400",
    "end": "2159640"
  },
  {
    "text": "right right yeah well it will be whatever",
    "start": "2161000",
    "end": "2168480"
  },
  {
    "text": "message the the sender it's not like in a for example in a block Cipher if you",
    "start": "2168480",
    "end": "2174960"
  },
  {
    "text": "change one bit of the cipher text it basically scrambles the whole block in some unpredictable way with a stream",
    "start": "2174960",
    "end": "2181400"
  },
  {
    "text": "Cipher if you change one bit of the cipher text it changes exactly that same bit in the plain text so let's say the",
    "start": "2181400",
    "end": "2187640"
  },
  {
    "text": "attacker knows that this message is a funds transfer right and he knows that",
    "start": "2187640",
    "end": "2193040"
  },
  {
    "text": "it's going to have a certain kind of header style and this and he just wants to change the dollar amount by xoring in",
    "start": "2193040",
    "end": "2200440"
  },
  {
    "text": "a certain value into that field so all he does is takes that exord value call",
    "start": "2200440",
    "end": "2206440"
  },
  {
    "text": "it D calculates the check sum on D C of D and exord this into the packet that",
    "start": "2206440",
    "end": "2212520"
  },
  {
    "text": "was transmitted and then sends it on its merry way the receiver will open it up and he'll find a message which is just",
    "start": "2212520",
    "end": "2219240"
  },
  {
    "text": "the original message exord with the change that is the modified message the",
    "start": "2219240",
    "end": "2224960"
  },
  {
    "text": "attacker wanted to send which is a perfectly valid message along with a valid check sum on it there's no random",
    "start": "2224960",
    "end": "2231560"
  },
  {
    "text": "scrambling that goes on",
    "start": "2231560",
    "end": "2234680"
  },
  {
    "text": "here yeah absolutely it'll look like anything the attacker wants it to look like the attacker has great control here",
    "start": "2240960",
    "end": "2248079"
  },
  {
    "text": "he can make bit level changes to the message for arbitrary bits of his",
    "start": "2248079",
    "end": "2254079"
  },
  {
    "text": "choice yeah it's a very powerful",
    "start": "2254079",
    "end": "2258800"
  },
  {
    "text": "[Music] testing [Music]",
    "start": "2304800",
    "end": "2311070"
  },
  {
    "text": "test test test test testing one two one",
    "start": "2325680",
    "end": "2332880"
  },
  {
    "text": "two T Test",
    "start": "2332880",
    "end": "2337160"
  },
  {
    "text": "[Music] okay um the attacker uh jams the signal during the",
    "start": "2354420",
    "end": "2361839"
  },
  {
    "text": "second half of the packet but remembers what the first half was and then the receiver fails because he only got half",
    "start": "2361839",
    "end": "2368200"
  },
  {
    "text": "a packet the attacker retransmits the attacker now jams during the first half of the packet so he sees the second half",
    "start": "2368200",
    "end": "2374119"
  },
  {
    "text": "of the packet and the receiver fails again and now the attacker knows the whole packet makes a modification and",
    "start": "2374119",
    "end": "2381040"
  },
  {
    "text": "transmits okay so you can do things like that in order to uh prevent a packet",
    "start": "2381040",
    "end": "2387920"
  },
  {
    "text": "from getting through but as I said in not all instances is it necessary even to prevent packets from getting through",
    "start": "2387920",
    "end": "2395040"
  },
  {
    "text": "sometimes it's okay if they if the original goes through as well because remember that D can be an AR can be an",
    "start": "2395040",
    "end": "2402440"
  },
  {
    "text": "arbitrary change right it can change one packet to a completely different",
    "start": "2402440",
    "end": "2407760"
  },
  {
    "text": "packet right as long as um I have some idea of what the original packet looked",
    "start": "2407760",
    "end": "2413960"
  },
  {
    "text": "like and I have some change I want to make to it in the in the best case for the attacker he knows the original",
    "start": "2413960",
    "end": "2420920"
  },
  {
    "text": "packet the contents of the original packet say again because he sent it in a ping or something like this if he knows",
    "start": "2420920",
    "end": "2427160"
  },
  {
    "text": "the the original packet well he can just modify it to be any packet he likes right it can be an arbitrary IP packet",
    "start": "2427160",
    "end": "2434319"
  },
  {
    "text": "and then he just sends that so it's no problem that both the original and the modified packet went through in that",
    "start": "2434319",
    "end": "2441359"
  },
  {
    "text": "event yep",
    "start": "2441359",
    "end": "2445359"
  },
  {
    "text": "are well the attacker could change the one coming back",
    "start": "2475440",
    "end": "2480560"
  },
  {
    "text": "too right so but that's an application Level issue right the application Level",
    "start": "2481599",
    "end": "2488480"
  },
  {
    "text": "had the the uh confirmation thing in there so I mean one way to hack it is as",
    "start": "2488480",
    "end": "2495040"
  },
  {
    "text": "I said just change the query and change the confirmation um but certainly some",
    "start": "2495040",
    "end": "2500960"
  },
  {
    "text": "protocols don't do that sort of thing and they're just one shot off",
    "start": "2500960",
    "end": "2506640"
  },
  {
    "text": "y so as I said we generated part of a table but we didn't generate the entire table",
    "start": "2512040",
    "end": "2519240"
  },
  {
    "text": "so oh it turns out if you just want to insert packets which I'll get to in a moment you don't need to know the entire",
    "start": "2530640",
    "end": "2537480"
  },
  {
    "text": "table you only need to know one entry in the table so yes so I'll get to that in",
    "start": "2537480",
    "end": "2544640"
  },
  {
    "text": "just this slide here so message injection",
    "start": "2544640",
    "end": "2551359"
  },
  {
    "text": "what so what happens if you want to uh just insert traffic into the network and",
    "start": "2551359",
    "end": "2558720"
  },
  {
    "text": "just make it look like it came from the person you want to spoof but it can have",
    "start": "2558720",
    "end": "2564200"
  },
  {
    "text": "any contents you want so let's say the attacker wants to generate a fake message M completely of his choice into",
    "start": "2564200",
    "end": "2572160"
  },
  {
    "text": "the wireless net so that it'll be received as genuine and let's say the attacker knows a single plain text and",
    "start": "2572160",
    "end": "2578400"
  },
  {
    "text": "its corresponding encrypted packet okay so he knows just a single line in that",
    "start": "2578400",
    "end": "2583559"
  },
  {
    "text": "table and again how did he do this he could have sent a ping through the network he could have sent spam turns",
    "start": "2583559",
    "end": "2589200"
  },
  {
    "text": "out there are other easier ways even which I'll show you shortly the encrypted packet then is just V comma C",
    "start": "2589200",
    "end": "2596240"
  },
  {
    "text": "he gets the entry for the table which is the plain text exor with the cipher text",
    "start": "2596240",
    "end": "2601640"
  },
  {
    "text": "which is just the keystream and now he just wants to transmit any fake packet of his choosing he takes takes f",
    "start": "2601640",
    "end": "2607960"
  },
  {
    "text": "computes c of f which he knows how to do because C again doesn't depend on the",
    "start": "2607960",
    "end": "2613280"
  },
  {
    "text": "key um and then just takes F comma C of f exors in the keyst stream from the",
    "start": "2613280",
    "end": "2619240"
  },
  {
    "text": "table using the same value of v and transmits V comma C Prime",
    "start": "2619240",
    "end": "2625240"
  },
  {
    "text": "and what does the receiver do the receiver decrypts the packet using the",
    "start": "2625240",
    "end": "2630760"
  },
  {
    "text": "same keyst stream the attacker used but it's a correct encryption so the receiver has no reason to reject it",
    "start": "2630760",
    "end": "2638920"
  },
  {
    "text": "so the adversary has succeeded once again so the only thing we used here was",
    "start": "2638920",
    "end": "2645480"
  },
  {
    "text": "the fact that the CRC does not depend on the key we didn't use the fact that it was linear right this attack would work",
    "start": "2645480",
    "end": "2652559"
  },
  {
    "text": "equally well if the check sum was something cryptographically strong like Shaw",
    "start": "2652559",
    "end": "2658640"
  },
  {
    "text": "one right which is a little counterintuitive but even if we used a",
    "start": "2658640",
    "end": "2663800"
  },
  {
    "text": "perfectly good cryptographically strong hash function this would not protect this attack",
    "start": "2663800",
    "end": "2669800"
  },
  {
    "text": "that's because what we need in this attack is a message authentication code not a hash function and if you use",
    "start": "2669800",
    "end": "2677079"
  },
  {
    "text": "cryptographic uh cryptographic Primitives where they don't belong as my office mate Dave used to say your V your",
    "start": "2677079",
    "end": "2684720"
  },
  {
    "text": "warranty is void right you don't get the cryptographic properties you want if you",
    "start": "2684720",
    "end": "2690359"
  },
  {
    "text": "use things you aren't supposed to use so we needed to know a single plain text",
    "start": "2690359",
    "end": "2697920"
  },
  {
    "text": "Cipher text pair so as I said we could send pings if it's connected to the",
    "start": "2697920",
    "end": "2703160"
  },
  {
    "text": "outside world we could send spam if it's connected to the outside world what if it's not connected to the outside world it's just a local network not connected",
    "start": "2703160",
    "end": "2709720"
  },
  {
    "text": "to the internet at all right I'm sure there are lots of wireless networks like that how can we get a plain text Cipher",
    "start": "2709720",
    "end": "2717319"
  },
  {
    "text": "text pair turns out the Authentication Protocol of 80211 gives it to the adversary for",
    "start": "2717319",
    "end": "2723960"
  },
  {
    "text": "free all right this is a major disaster in the design okay the Authentication",
    "start": "2723960",
    "end": "2729480"
  },
  {
    "text": "Protocol which I'll describe in a moment um it's supposed to prove that a certain client knows the shared secret",
    "start": "2729480",
    "end": "2737559"
  },
  {
    "text": "K but the way it's set up is if I watch you prove to the server that you know",
    "start": "2737559",
    "end": "2744079"
  },
  {
    "text": "k then I can just repeat the proof to the server even without knowing K so it's",
    "start": "2744079",
    "end": "2751680"
  },
  {
    "text": "kind of like the what's the password protocol right if I watch you prove that",
    "start": "2751680",
    "end": "2757079"
  },
  {
    "text": "you know a certain password by saying the password then I learn the password too okay this is a little bit trickier",
    "start": "2757079",
    "end": "2764319"
  },
  {
    "text": "because I never do learn K so the math is one line extra in that I never do",
    "start": "2764319",
    "end": "2769920"
  },
  {
    "text": "learn what K is because the protocol isn't oh what's K and you tell him what K is I'll show you the protocol in a",
    "start": "2769920",
    "end": "2776640"
  },
  {
    "text": "minute but it's of the same form that if I ever watch you do it then I can then do it forever on as long as the key",
    "start": "2776640",
    "end": "2782839"
  },
  {
    "text": "doesn't change so that's pretty bad",
    "start": "2782839",
    "end": "2788160"
  },
  {
    "text": "yeah uh so it gives you correct that's a good observation which I didn't address in these slides for interest of time it",
    "start": "2792960",
    "end": "2798880"
  },
  {
    "text": "does give you only a small piece of the pad turns out there's something called the pad extension attack which uses the",
    "start": "2798880",
    "end": "2805359"
  },
  {
    "text": "fact that um in the in the protocol M comma C of M the length of M is never",
    "start": "2805359",
    "end": "2812640"
  },
  {
    "text": "encoded so if you just truncate a packet anywhere the receiver will just treat the last",
    "start": "2812640",
    "end": "2819800"
  },
  {
    "text": "four bytes of the check sum and the rest of it as the message so the truncation",
    "start": "2819800",
    "end": "2824920"
  },
  {
    "text": "of a long pad is a correct short pad if you have a correct short pad turns out",
    "start": "2824920",
    "end": "2830040"
  },
  {
    "text": "it's easy it's relatively easy to extend it what you do is basically just guess what the next bite",
    "start": "2830040",
    "end": "2836520"
  },
  {
    "text": "is and send 256 packets each with one guest to the server and he'll accept one",
    "start": "2836520",
    "end": "2842920"
  },
  {
    "text": "of them",
    "start": "2842920",
    "end": "2846078"
  },
  {
    "text": "okay this is pretty easy and then you just keep doing this so from a from a single short pad you",
    "start": "2848400",
    "end": "2856400"
  },
  {
    "text": "can build up a long pad by sending 256 times the number of bytes you're missing",
    "start": "2856400",
    "end": "2861640"
  },
  {
    "text": "packets and but you only have to do it once right so it takes some time to",
    "start": "2861640",
    "end": "2866680"
  },
  {
    "text": "extend a short pad to a long Pad but it's easy good question",
    "start": "2866680",
    "end": "2874440"
  },
  {
    "text": "though anything else okay I'll go on um so here's how the Authentication",
    "start": "2874440",
    "end": "2881440"
  },
  {
    "text": "Protocol works the base station the client says I'm a client and the base station says hm prove to me you know the",
    "start": "2881440",
    "end": "2889200"
  },
  {
    "text": "web secret here is a challenge send it back to me encrypted and the client says okay and",
    "start": "2889200",
    "end": "2895480"
  },
  {
    "text": "he encrypts The Challenge and sends it back so now you've just seen a plain",
    "start": "2895480",
    "end": "2900800"
  },
  {
    "text": "text so the base station will check that the challenge is correctly encrypted and if so accepts the client",
    "start": "2900800",
    "end": "2907160"
  },
  {
    "text": "but the adversary is just seeing both the plain text and the cipher text of this challenge right so this is enough",
    "start": "2907160",
    "end": "2915000"
  },
  {
    "text": "to inject packets in the previous attack he only needed to know one plain text Cipher text pair but he can also execute",
    "start": "2915000",
    "end": "2921319"
  },
  {
    "text": "the Authentication Protocol right auth so authentication spoofing",
    "start": "2921319",
    "end": "2927960"
  },
  {
    "text": "once the adversary has seen a single execution of the protocol he can extract V and the pad",
    "start": "2927960",
    "end": "2935000"
  },
  {
    "text": "and now he tries to connect to the network himself the base station sends a challenge string the adversary just",
    "start": "2935000",
    "end": "2941440"
  },
  {
    "text": "takes M comma C of or M Prime comma C of M Prime where M Prime is the challenge string exor it with the pad that he",
    "start": "2941440",
    "end": "2948799"
  },
  {
    "text": "extracted from the authentication success that he saw and transmits it and",
    "start": "2948799",
    "end": "2956119"
  },
  {
    "text": "this is the correct response so the base station has no way of distinguishing it him from someone who's validly on the",
    "start": "2956119",
    "end": "2963799"
  },
  {
    "text": "network so the adversary again has succeeded even though he never did learn the value",
    "start": "2963799",
    "end": "2969640"
  },
  {
    "text": "of K so now we're going to come to some other surprising bits it turns out the",
    "start": "2969640",
    "end": "2976880"
  },
  {
    "text": "ability to modify and inject packets also leads to ways the adversary can",
    "start": "2976880",
    "end": "2982119"
  },
  {
    "text": "decrypt packets so 8 the 80211 designers",
    "start": "2982119",
    "end": "2988240"
  },
  {
    "text": "um sometimes come out and say yeah well we didn't really mean it as goals of the",
    "start": "2988240",
    "end": "2993880"
  },
  {
    "text": "protocol to prevent modific a and injection we only meant it to prevent",
    "start": "2993880",
    "end": "3000200"
  },
  {
    "text": "eavesdropping right so they admit that they bumbled up a bit for the first kind",
    "start": "3000200",
    "end": "3005280"
  },
  {
    "text": "of attack where the IV was too short and you could build the dictionary or watch for collisions or things like this but",
    "start": "3005280",
    "end": "3011599"
  },
  {
    "text": "they say well but this other stuff about injecting that's not really a problem because we were never supposed to defend",
    "start": "3011599",
    "end": "3017000"
  },
  {
    "text": "against it you did say it was wired equivalent right you can't an remote adversary can't inject packets on your",
    "start": "3017000",
    "end": "3023640"
  },
  {
    "text": "physical wire I don't think he should be able to inject it on the air but they claim well we didn't really mean it",
    "start": "3023640",
    "end": "3029200"
  },
  {
    "text": "turns out even if you fix the first part that is you make a long IV but you still",
    "start": "3029200",
    "end": "3034280"
  },
  {
    "text": "allow these modifications and injections we still have ways for the adversary to read your",
    "start": "3034280",
    "end": "3040160"
  },
  {
    "text": "data and here's how we do that so the adversary can't decrypt the",
    "start": "3040160",
    "end": "3046280"
  },
  {
    "text": "packets himself because he doesn't know K this the shared secret an rc4 is a",
    "start": "3046280",
    "end": "3051839"
  },
  {
    "text": "strong Cipher so he's not going to be able to break the crypto",
    "start": "3051839",
    "end": "3057119"
  },
  {
    "text": "so he has to basically if he wants to decrypt it he has to get someone who knows the plane text to tell it to him",
    "start": "3057119",
    "end": "3064000"
  },
  {
    "text": "right or someone who knows the key to perform the decryption for him so who knows that the client knows",
    "start": "3064000",
    "end": "3072920"
  },
  {
    "text": "that and the base station knows that two people know K or maybe lots of people know K in the case where we have a",
    "start": "3072920",
    "end": "3079359"
  },
  {
    "text": "thousand people but what we're going to do is have the adversary trick the base",
    "start": "3079359",
    "end": "3084880"
  },
  {
    "text": "station into decrypting the p for him and telling him the result okay so this is going to be fun",
    "start": "3084880",
    "end": "3093440"
  },
  {
    "text": "so it turns out there at least three ways I'm going to talk about three different ways to do",
    "start": "3093440",
    "end": "3098960"
  },
  {
    "text": "this um they're called double encryption IP redirection and reaction",
    "start": "3098960",
    "end": "3104440"
  },
  {
    "text": "attacks so the first one double encryption so everyone flips over a page I must",
    "start": "3104440",
    "end": "3111599"
  },
  {
    "text": "have just",
    "start": "3111599",
    "end": "3115160"
  },
  {
    "text": "[Music] so double encryption um as with all stream",
    "start": "3118760",
    "end": "3128040"
  },
  {
    "text": "ciphers when you decrypt it's the same as when you encrypt right you just exort the pad against the",
    "start": "3128040",
    "end": "3134640"
  },
  {
    "text": "message so if you do it twice if you encrypt the same message or if you yeah",
    "start": "3134640",
    "end": "3139799"
  },
  {
    "text": "encrypt a message with a key and encrypt that result again with the same key you'll get the original message back",
    "start": "3139799",
    "end": "3146160"
  },
  {
    "text": "it's like double rot 13 right it's very much like double rot",
    "start": "3146160",
    "end": "3151839"
  },
  {
    "text": "13 so if the adversary wants a certain",
    "start": "3151839",
    "end": "3157520"
  },
  {
    "text": "packet decrypted so he's intercepted this packet and he'd really like to know what it says say it's he can tell just",
    "start": "3157520",
    "end": "3164160"
  },
  {
    "text": "from the traffic analysis that this is an HTTP request which contains a post",
    "start": "3164160",
    "end": "3169799"
  },
  {
    "text": "which contains a password say so he has one particular packet which he would really like decrypted",
    "start": "3169799",
    "end": "3177760"
  },
  {
    "text": "so he joins the network using authentication spoofing which we saw how to do he uses a second internet",
    "start": "3177760",
    "end": "3185160"
  },
  {
    "text": "connection to send the packet to his laptop over the wireless network okay so",
    "start": "3185160",
    "end": "3191480"
  },
  {
    "text": "he's sitting there with his laptop here at the thing and starts a TCP session with some",
    "start": "3191480",
    "end": "3198240"
  },
  {
    "text": "other machine he owns somewhere on the network and then takes this encrypted",
    "start": "3198240",
    "end": "3203400"
  },
  {
    "text": "packet and sends the encrypted packet as text to his laptop's Wireless address",
    "start": "3203400",
    "end": "3211559"
  },
  {
    "text": "over the internet from the other machine he owns okay so now this packet is going",
    "start": "3211559",
    "end": "3217079"
  },
  {
    "text": "to arrive at his laptop",
    "start": "3217079",
    "end": "3222160"
  },
  {
    "text": "and while it's over the air it will be encrypted",
    "start": "3222160",
    "end": "3227520"
  },
  {
    "text": "again but it's already encrypted so if he can arrange that it's encrypted again",
    "start": "3227520",
    "end": "3233280"
  },
  {
    "text": "with the same keystream then if he uses a radi to watch over the",
    "start": "3233280",
    "end": "3238599"
  },
  {
    "text": "air he'll see the original decrypted message right pretty slick",
    "start": "3238599",
    "end": "3247920"
  },
  {
    "text": "so the trick is you have to use the same IV to get the same keyst stream to",
    "start": "3247920",
    "end": "3253799"
  },
  {
    "text": "encrypt the message the second time so this is where you use the fact that most",
    "start": "3253799",
    "end": "3259079"
  },
  {
    "text": "um most cards just incrementally sequentially increment the IVs so you",
    "start": "3259079",
    "end": "3264400"
  },
  {
    "text": "just watch for the base station IV that it's transmitting and when it gets close you just send 100 copies to",
    "start": "3264400",
    "end": "3272200"
  },
  {
    "text": "yourself and just grab the one that has the right IV in it which is indicated in the header so it's not very hard at all",
    "start": "3272200",
    "end": "3280160"
  },
  {
    "text": "and you just read the decrypted packet off the air note that the adversaries card can't actually decrypt the packet",
    "start": "3280160",
    "end": "3287240"
  },
  {
    "text": "because it doesn't actually know K right so you have to listen with with",
    "start": "3287240",
    "end": "3293960"
  },
  {
    "text": "Hardware on the air okay so that's one way to do it here's",
    "start": "3293960",
    "end": "3299240"
  },
  {
    "text": "another way which avoids that funny timing issue and also works if the base",
    "start": "3299240",
    "end": "3305559"
  },
  {
    "text": "station isn't just sequentially incrementing IVs so that's not a requirement for these attacks so again",
    "start": "3305559",
    "end": "3312079"
  },
  {
    "text": "join the network with authentication spoofing you take the packet to decrypt",
    "start": "3312079",
    "end": "3317319"
  },
  {
    "text": "and modify it using the message modification techniques we used before so that the IP address of the packet",
    "start": "3317319",
    "end": "3325640"
  },
  {
    "text": "instead of being to whatever web server it was originally is your machine",
    "start": "3325640",
    "end": "3330799"
  },
  {
    "text": "somewhere on the internet right so I have this packet that I don't know what it says in the",
    "start": "3330799",
    "end": "3337079"
  },
  {
    "text": "body but I know what the IP header looks like right because I know what machine this guy was trying to connect to and so",
    "start": "3337079",
    "end": "3344720"
  },
  {
    "text": "I can take the IP destination field whose original value I know and modify",
    "start": "3344720",
    "end": "3352680"
  },
  {
    "text": "it so it's now pointing to a machine I control",
    "start": "3352680",
    "end": "3358240"
  },
  {
    "text": "and transmit that instead right or just retransmit that and here's a case where",
    "start": "3358760",
    "end": "3364280"
  },
  {
    "text": "I don't need to block the original packet I just need to send the new modified one and now the internet will",
    "start": "3364280",
    "end": "3371799"
  },
  {
    "text": "happily wrote that packet to my machine after the base station has",
    "start": "3371799",
    "end": "3377640"
  },
  {
    "text": "decrypted it so woohoo um there's an issue with getting",
    "start": "3377640",
    "end": "3385799"
  },
  {
    "text": "the IP header check sum right because when you modify the the IP destination",
    "start": "3385799",
    "end": "3392000"
  },
  {
    "text": "field you'll have to also modify the IP checkm but it turns out that's pretty",
    "start": "3392000",
    "end": "3397039"
  },
  {
    "text": "easy to do and in the paper where we talk about this um which you can find on",
    "start": "3397039",
    "end": "3403119"
  },
  {
    "text": "the website which I'll point you to at the end there's a pretty detailed section about how to correct the IP uh",
    "start": "3403119",
    "end": "3411319"
  },
  {
    "text": "how to correct for the IP uh destinations change in the in the check sum",
    "start": "3411319",
    "end": "3417240"
  },
  {
    "text": "um even if there's a firewall you can play other IP header games right you can",
    "start": "3417240",
    "end": "3422559"
  },
  {
    "text": "change the port number you can change the TCP Flags you can change whatever you want to make it look like a packet",
    "start": "3422559",
    "end": "3429400"
  },
  {
    "text": "that ought to go through the firewall in that direction right so you can turn off the sins and turn on the axe and make",
    "start": "3429400",
    "end": "3437039"
  },
  {
    "text": "sure that this looks just like the middle part of some age-old connection or a current connection right you're",
    "start": "3437039",
    "end": "3443079"
  },
  {
    "text": "connected to the net you can pretend to have a connection out there the firewall stateful firewall starts one up I mean",
    "start": "3443079",
    "end": "3449760"
  },
  {
    "text": "all sort you can use your imagination here and the Third Kind of attack we can use is called a reaction",
    "start": "3449760",
    "end": "3456880"
  },
  {
    "text": "attack and this is a particularly Insidious kind of attack because here",
    "start": "3456880",
    "end": "3463640"
  },
  {
    "text": "this works even if the wireless network isn't connected to the internet at all so there's no in the previous two",
    "start": "3463640",
    "end": "3470039"
  },
  {
    "text": "attacks we needed this second channel right that doesn't go over the wireless",
    "start": "3470039",
    "end": "3475559"
  },
  {
    "text": "network that can connect to the wireless network or that packets from the wireless network can get to in this",
    "start": "3475559",
    "end": "3482559"
  },
  {
    "text": "attack we don't need any such thing we just need that there's for",
    "start": "3482559",
    "end": "3487640"
  },
  {
    "text": "example the original person sent an HTTP request to some maybe internal machine",
    "start": "3487640",
    "end": "3494599"
  },
  {
    "text": "right and had a password and you wanted to know what that password is and it's",
    "start": "3494599",
    "end": "3500799"
  },
  {
    "text": "some internal machine sitting on the [Music] network so so here's what we're going to",
    "start": "3500799",
    "end": "3507400"
  },
  {
    "text": "do we'll use the fact that TCP has a check sum right which incorporates",
    "start": "3507400",
    "end": "3512960"
  },
  {
    "text": "unlike so the IP check sum just checks the header the TCP check sum also checks the data okay so TCP has a check",
    "start": "3512960",
    "end": "3523760"
  },
  {
    "text": "sum what we're going to do is modify the packet in such a way that we're going to",
    "start": "3523760",
    "end": "3531079"
  },
  {
    "text": "basically guess each bit of the packet whether it's one or zero",
    "start": "3531079",
    "end": "3537520"
  },
  {
    "text": "and we're going to do it in such a way that if we guess right then the TCP",
    "start": "3537520",
    "end": "3542839"
  },
  {
    "text": "check sum of the modified packet will be correct and when we send retransmit that",
    "start": "3542839",
    "end": "3549119"
  },
  {
    "text": "modified packet the TCP check sum is correct even though the data is wrong and we'll get a reset or an act back or",
    "start": "3549119",
    "end": "3556640"
  },
  {
    "text": "something right because it's a valid TCP packet and the destination machine's going to going to respond somehow",
    "start": "3556640",
    "end": "3564039"
  },
  {
    "text": "usually with a reset if it's a Clos connection or with an act if it's still part of the old open connection so if I",
    "start": "3564039",
    "end": "3570599"
  },
  {
    "text": "see you send the packet and while that TCP connection still open I retransmit",
    "start": "3570599",
    "end": "3575920"
  },
  {
    "text": "it with one bit different or guessing it one bit with a slightly different TCP check sum if the check sum's correct",
    "start": "3575920",
    "end": "3582280"
  },
  {
    "text": "you'll get an act back and I won't be able to read the act because it's encrypted but I'll see the",
    "start": "3582280",
    "end": "3588400"
  },
  {
    "text": "packet if I said it if I guess wrong and",
    "start": "3588400",
    "end": "3593559"
  },
  {
    "text": "the uh TCP check sum is now incorrect the packet will be silently dropped",
    "start": "3593559",
    "end": "3599680"
  },
  {
    "text": "that's how TCP Stacks generally work so even though we never ever see",
    "start": "3599680",
    "end": "3605559"
  },
  {
    "text": "the result of decrypting this packet we use the fact that the destination machine does see it and we'll have",
    "start": "3605559",
    "end": "3612920"
  },
  {
    "text": "different Behavior different reactions depending on whether we guessed correctly or incorrectly on the value of any",
    "start": "3612920",
    "end": "3620240"
  },
  {
    "text": "particular bit in the message so we just do this send one packet for every bit in",
    "start": "3620240",
    "end": "3626680"
  },
  {
    "text": "the message that we want to decrypt so let's say I know the password is here or likely to be around here somewhere then",
    "start": "3626680",
    "end": "3633359"
  },
  {
    "text": "I just take those passwords are like eight characters so and I know the top bits are probably zero so I just have to",
    "start": "3633359",
    "end": "3638760"
  },
  {
    "text": "send 56 packets to the server and watch which ones get TCP acknowledged and which ones",
    "start": "3638760",
    "end": "3645760"
  },
  {
    "text": "don't and that tells me which ones I guessed right and which ones I guessed wrong and that tells me what the bits",
    "start": "3645760",
    "end": "3652440"
  },
  {
    "text": "were and the details of this are pretty interesting it uses the that there are now two check sums in the",
    "start": "3652440",
    "end": "3659760"
  },
  {
    "text": "message there's the uh CRC check sum which is linear with relation to xor so",
    "start": "3659760",
    "end": "3667079"
  },
  {
    "text": "the check sum of ax or B is the check sum of ax or the check sum of B and there's the TCP checkm which is linear",
    "start": "3667079",
    "end": "3673760"
  },
  {
    "text": "with respect to addition mod 65535 right here's another notch up on",
    "start": "3673760",
    "end": "3680599"
  },
  {
    "text": "the technical so um we have two check sums which are",
    "start": "3680599",
    "end": "3686640"
  },
  {
    "text": "slightly different if I make a change to the data then I have to make two slightly different changes to the check",
    "start": "3686640",
    "end": "3694119"
  },
  {
    "text": "sums sometimes it turns out addition and exor agree a lot some of the time and",
    "start": "3694119",
    "end": "3700559"
  },
  {
    "text": "differ other times and that's exact using that difference we know that if we if the TCP",
    "start": "3700559",
    "end": "3709720"
  },
  {
    "text": "checkm agreed then we know say the bit was zero and if it disagreed we know the bit was one and that's the trick we",
    "start": "3709720",
    "end": "3717440"
  },
  {
    "text": "use okay so this is sounding pretty bad we've pretty Yeah",
    "start": "3717440",
    "end": "3724838"
  },
  {
    "text": "question no K is the key not the key stream K so I did use capital K somewhat",
    "start": "3734640",
    "end": "3742480"
  },
  {
    "text": "poorly in a couple of slides to represent the key stream but lowercase k",
    "start": "3742480",
    "end": "3747880"
  },
  {
    "text": "is the input to rc4 which since rc4 is presumed to be a",
    "start": "3747880",
    "end": "3753680"
  },
  {
    "text": "strong Cipher um even if we know the key stream you don't get the key the shared",
    "start": "3753680",
    "end": "3759960"
  },
  {
    "text": "secret out and also in in at least this attack the reaction attack we never do",
    "start": "3759960",
    "end": "3766720"
  },
  {
    "text": "see the decrypted message right we only see the reaction",
    "start": "3766720",
    "end": "3772079"
  },
  {
    "text": "to the decrypted message but in the previous two attacks we do in fact see see uh both the encrypted and the",
    "start": "3772079",
    "end": "3779440"
  },
  {
    "text": "decrypted form any other questions on the",
    "start": "3779440",
    "end": "3785680"
  },
  {
    "text": "attacks so the question is we know rc4 is a publicly known algorithm we know the length of the key if we know the key",
    "start": "3795640",
    "end": "3802440"
  },
  {
    "text": "stream could we not Brute Force what the key is and the answer is well you could",
    "start": "3802440",
    "end": "3808720"
  },
  {
    "text": "try and if you're only using the 40 bit version then yes you can if you're using",
    "start": "3808720",
    "end": "3814760"
  },
  {
    "text": "the 40- bit version then all you need is one packet that you know both the plain text and Cipher text of and then just",
    "start": "3814760",
    "end": "3821760"
  },
  {
    "text": "Brute Force what K is and now you're totally done because you know the secret",
    "start": "3821760",
    "end": "3827079"
  },
  {
    "text": "right that's why you should never use 40 bit crypto right I thought we learned this years and years ago but oh well so",
    "start": "3827079",
    "end": "3835960"
  },
  {
    "text": "they're using 104 bit cryptos so you could try to brute force it it will take you two to the 104 guesses which is a",
    "start": "3835960",
    "end": "3843359"
  },
  {
    "text": "long long long time um we consider that well into the",
    "start": "3843359",
    "end": "3848760"
  },
  {
    "text": "UN unable range",
    "start": "3848760",
    "end": "3853000"
  },
  {
    "text": "yeah um you're sending it you don't care right because you want to send it to",
    "start": "3857039",
    "end": "3864039"
  },
  {
    "text": "yourself you don't want want this modified TCP packet to be actually",
    "start": "3864039",
    "end": "3869079"
  },
  {
    "text": "treated as part of the same session so in fact you do want the Isn to stay the",
    "start": "3869079",
    "end": "3874760"
  },
  {
    "text": "same so that the remote stack will ignore it it'll think oh this is just old retransmitted data that has been",
    "start": "3874760",
    "end": "3882039"
  },
  {
    "text": "sitting around in the internet for an hour somehow yeah TTL decrement your TTL when",
    "start": "3882039",
    "end": "3890720"
  },
  {
    "text": "seconds elapse um right you want your the receiving",
    "start": "3890720",
    "end": "3897319"
  },
  {
    "text": "stock to ignore the message so you want to keep the ism the same but of course if you wanted to change it we know how",
    "start": "3897319",
    "end": "3902720"
  },
  {
    "text": "to modify data right we could just modify it at will that's in the attack that's in the message reaction attack",
    "start": "3902720",
    "end": "3908680"
  },
  {
    "text": "and the other attacks like the uh IP redirection where we change it to point to us we don't care what the Isn is",
    "start": "3908680",
    "end": "3914720"
  },
  {
    "text": "because we're not going to actually start a TCP session with this packet we're just going to read it off the net",
    "start": "3914720",
    "end": "3920119"
  },
  {
    "text": "and never feed it to our TCP stack right we're just treating the whole packet as arbitrary data that get sent over the",
    "start": "3920119",
    "end": "3928279"
  },
  {
    "text": "Internet okay it's actually hard to see Hands in the sea of people so I hope I'm not",
    "start": "3931480",
    "end": "3938318"
  },
  {
    "text": "yeah do I have to license it well depends who you ask right if you",
    "start": "3939400",
    "end": "3946359"
  },
  {
    "text": "ask say they'll say of course you do",
    "start": "3946359",
    "end": "3951599"
  },
  {
    "text": "but um they might be it turns out as far as I'm aware there is no legal reason to",
    "start": "3953920",
    "end": "3960279"
  },
  {
    "text": "pay RSA to provide rc4 it's not a patented algorithm the name is",
    "start": "3960279",
    "end": "3965400"
  },
  {
    "text": "trademarked so if you want to call it rc4 you have to do something special but",
    "start": "3965400",
    "end": "3970960"
  },
  {
    "text": "that's easy to avoid right just use a different language or something",
    "start": "3970960",
    "end": "3977640"
  },
  {
    "text": "yeah well that's actually um an independent orthogonal point to the",
    "start": "3981240",
    "end": "3987160"
  },
  {
    "text": "design the where you would use the entropy is in um picking K and picking V",
    "start": "3987160",
    "end": "3994079"
  },
  {
    "text": "well K we assume it's picked once and fixed so for all we know is picked with a big jug of billiard balls and you pick",
    "start": "3994079",
    "end": "4000400"
  },
  {
    "text": "them out like in a lottery right because it's done once and then someone just types it into everyone's computer V of",
    "start": "4000400",
    "end": "4007200"
  },
  {
    "text": "course is picked for every packet um they could be generated randomly um it",
    "start": "4007200",
    "end": "4012400"
  },
  {
    "text": "turns out that's worse and the reason it's worse has to do with What's called the birthday Paradox which I'm sure you're all",
    "start": "4012400",
    "end": "4018880"
  },
  {
    "text": "familiar with if we take like these 23 people here odds are 50/50 that two of",
    "start": "4018880",
    "end": "4024799"
  },
  {
    "text": "them will have the same birthday um so if you picked random V's every time then",
    "start": "4024799",
    "end": "4030880"
  },
  {
    "text": "after only about 4,000 packets will you expect two of them to collide whereas",
    "start": "4030880",
    "end": "4036680"
  },
  {
    "text": "the correct the correct thing is pick a random starting point and then for every",
    "start": "4036680",
    "end": "4042640"
  },
  {
    "text": "packet increment right that is technically the most correct thing to do and you want to",
    "start": "4042640",
    "end": "4051000"
  },
  {
    "text": "make the space really big so you don't",
    "start": "4051000",
    "end": "4056279"
  },
  {
    "text": "wrap okay so I'll go on to counter measures so what can we do so now let's",
    "start": "4056799",
    "end": "4062279"
  },
  {
    "text": "take off our black hats and go to another conference and now we put on the hats of so we're the admins we have this",
    "start": "4062279",
    "end": "4069359"
  },
  {
    "text": "web Network um we've just seen these slides and we know all these",
    "start": "4069359",
    "end": "4076200"
  },
  {
    "text": "black hat people have seen these slides and are now about to go W driving with",
    "start": "4076200",
    "end": "4081839"
  },
  {
    "text": "web equipped Breakers right so so what can we",
    "start": "4081839",
    "end": "4087279"
  },
  {
    "text": "do um the easiest thing I think is just don't assume it's",
    "start": "4087279",
    "end": "4092520"
  },
  {
    "text": "secure right you have this wireless network it has this wired equivalent protocol for security I say just ignore",
    "start": "4092520",
    "end": "4100278"
  },
  {
    "text": "it right I mean turn it on if you want like belt and suspenders is always good",
    "start": "4100279",
    "end": "4105600"
  },
  {
    "text": "good but don't rely on it for security treat the wireless network like",
    "start": "4105600",
    "end": "4112480"
  },
  {
    "text": "a public network right pretend anyone has complete access to this network just",
    "start": "4112480",
    "end": "4118199"
  },
  {
    "text": "like the rest of the internet so where do you put the rest of the internet in relation to your company there's a big",
    "start": "4118199",
    "end": "4124560"
  },
  {
    "text": "wall between you and them put your wireless network on the other side of",
    "start": "4124560",
    "end": "4129798"
  },
  {
    "text": "that wall right the wireless network should be outside your firewall in order for your employees who",
    "start": "4129799",
    "end": "4137640"
  },
  {
    "text": "are using this wireless network to connect to internal machines they should",
    "start": "4137640",
    "end": "4143520"
  },
  {
    "text": "have to use whatever mechanism they use today to connect from home SSH IPC VPN",
    "start": "4143520",
    "end": "4150960"
  },
  {
    "text": "whatever right you can even hook it up so that I mean probably the right thing",
    "start": "4150960",
    "end": "4156199"
  },
  {
    "text": "to do is make the wireless network not routable to anything except your",
    "start": "4156199",
    "end": "4161838"
  },
  {
    "text": "firewall right so you can't just join the wireless network and then connect to the internet",
    "start": "4161839",
    "end": "4167080"
  },
  {
    "text": "directly right the only machine you should be able to connect to is the firewall and you have to authenticate",
    "start": "4167080",
    "end": "4173000"
  },
  {
    "text": "yourself to the firewall using whatever VPN tools you use today and that way an attacker who can get on the network will",
    "start": "4173000",
    "end": "4182199"
  },
  {
    "text": "is in exactly the same position as if he were on a wired Network trying to get through your firewall which hopefully",
    "start": "4182199",
    "end": "4188159"
  },
  {
    "text": "you've paid good money to you people to make sure that can't",
    "start": "4188159",
    "end": "4193400"
  },
  {
    "text": "happen um right so another point which I made",
    "start": "4193400",
    "end": "4200040"
  },
  {
    "text": "earlier it's not enough we so after we published this paper we got a lot of",
    "start": "4200040",
    "end": "4205239"
  },
  {
    "text": "queries of the form oh such and such a company has a better Key Management product for 80211 X have you looked at",
    "start": "4205239",
    "end": "4213120"
  },
  {
    "text": "it and is it more secure and the answer is it doesn't matter that's not where the problem",
    "start": "4213120",
    "end": "4219159"
  },
  {
    "text": "is right I don't care if every user of your company automatically gets a different shared secret every time he",
    "start": "4219159",
    "end": "4225600"
  },
  {
    "text": "logs in right I can use as long as he keeps the",
    "start": "4225600",
    "end": "4231640"
  },
  {
    "text": "same secret for a little while I can use the attacks I described earlier to",
    "start": "4231640",
    "end": "4238640"
  },
  {
    "text": "insert packet on the insert packets on the net modify packets decrypt packets",
    "start": "4238640",
    "end": "4245199"
  },
  {
    "text": "so yes it's useful to do this and it solves other problems like a thousand",
    "start": "4245199",
    "end": "4251239"
  },
  {
    "text": "people knowing the same secret but it's not sufficient",
    "start": "4251239",
    "end": "4257239"
  },
  {
    "text": "so that's this previous slide describes what to do in an existing system",
    "start": "4258920",
    "end": "4265560"
  },
  {
    "text": "to uh facilitate the use of web uh even",
    "start": "4265560",
    "end": "4271120"
  },
  {
    "text": "where without having to go change the protocol or Hardware or stuff is just",
    "start": "4271120",
    "end": "4276440"
  },
  {
    "text": "reconfiguring what gets plugged into what so now let's say you're on the weap",
    "start": "4276440",
    "end": "4283199"
  },
  {
    "text": "standardization committee okay what should you do to fix",
    "start": "4283199",
    "end": "4288840"
  },
  {
    "text": "this so let's say we want to change web and they are and unfortunately the",
    "start": "4288840",
    "end": "4293880"
  },
  {
    "text": "current standard so we need both let me just talk about this first and then I'll talk about the current state um we need",
    "start": "4293880",
    "end": "4299920"
  },
  {
    "text": "two things to fix the two-time pad and similar message decryption attacks you",
    "start": "4299920",
    "end": "4305840"
  },
  {
    "text": "need longer IVs than 24 bits right um these long IVs have to be",
    "start": "4305840",
    "end": "4313679"
  },
  {
    "text": "guaranteed to never repeat for for the lifetime of a shared secret and never be duplicated if more than one machine",
    "start": "4313679",
    "end": "4319560"
  },
  {
    "text": "shares the same secret okay this is a bit tricky to get right how do you know",
    "start": "4319560",
    "end": "4324960"
  },
  {
    "text": "let's say the five of us use the same value of K how can we guarantee that I",
    "start": "4324960",
    "end": "4330320"
  },
  {
    "text": "never use the same value of V that you use and it's a bit tricky to get that right but you can do it even more",
    "start": "4330320",
    "end": "4336760"
  },
  {
    "text": "Insidious that say I'm talking to a base station and we're using the same k for both directions how do we guarantee that",
    "start": "4336760",
    "end": "4343639"
  },
  {
    "text": "neither of us ever uses a v that the other guy used",
    "start": "4343639",
    "end": "4350360"
  },
  {
    "text": "so um there are those issues to be solved turns out it's relatively",
    "start": "4350360",
    "end": "4356040"
  },
  {
    "text": "straightforward for someone with cryptographic training to do that um the",
    "start": "4356040",
    "end": "4361400"
  },
  {
    "text": "second thing you need is a strong message authentication code instead of the CRC so this me message",
    "start": "4361400",
    "end": "4368199"
  },
  {
    "text": "authentication code has to have the properties of collision resistance one way it might not need exactly those",
    "start": "4368199",
    "end": "4374960"
  },
  {
    "text": "strong properties but you may as well use them and has to depend on the key in the IV right not depending on the key in",
    "start": "4374960",
    "end": "4381679"
  },
  {
    "text": "the IV was a mistake we saw earlier for message injection for example where even if you used a strong cryptographic hash",
    "start": "4381679",
    "end": "4389840"
  },
  {
    "text": "which is basically a keyless Mac then uh you still have problems so",
    "start": "4389840",
    "end": "4396840"
  },
  {
    "text": "we need a strong message authentication code such as Shaw 1 H Mac right or",
    "start": "4396840",
    "end": "4402000"
  },
  {
    "text": "something like that or CBC Mac or there are lots of them",
    "start": "4402000",
    "end": "4407120"
  },
  {
    "text": "and this as a side effect will fix the problem in the Authentication Protocol",
    "start": "4408480",
    "end": "4413960"
  },
  {
    "text": "right the Authentication Protocol had that problem with here's a message show me the encrypted version of it if",
    "start": "4413960",
    "end": "4420560"
  },
  {
    "text": "there's a strong Mac then if I see the encrypted version of one message then it",
    "start": "4420560",
    "end": "4426239"
  },
  {
    "text": "doesn't help me figure out what the encrypted version of a second message is just doing one of these doesn't fix",
    "start": "4426239",
    "end": "4432760"
  },
  {
    "text": "the problems right even if so and this brings us to the",
    "start": "4432760",
    "end": "4438280"
  },
  {
    "text": "current state of weap so weap is currently doing a couple things it's deploying a interim short-term fix which",
    "start": "4438280",
    "end": "4444880"
  },
  {
    "text": "is basically just fixing the first one okay it's it's making the ability to",
    "start": "4444880",
    "end": "4450719"
  },
  {
    "text": "have longer IVs but as we said that helps almost not",
    "start": "4450719",
    "end": "4456400"
  },
  {
    "text": "at all right um but it's something",
    "start": "4456400",
    "end": "4463239"
  },
  {
    "text": "right in addition to that they're working on a longer term fix to actually get it right and turns out there are",
    "start": "4463239",
    "end": "4469760"
  },
  {
    "text": "some political issues involved with things like I said earlier where some people are saying oh well we're not",
    "start": "4469760",
    "end": "4475560"
  },
  {
    "text": "really guaranteeing things about uh authenticity or Integrity or",
    "start": "4475560",
    "end": "4481719"
  },
  {
    "text": "modification things like that or injection we just want to protect about decryption and so we shouldn't have to",
    "start": "4481719",
    "end": "4487800"
  },
  {
    "text": "bother with a strong hmac thing but now that this is is is coming",
    "start": "4487800",
    "end": "4495480"
  },
  {
    "text": "out people are pointing and saying no no no even to get protection against decryption you still have to do strong",
    "start": "4495480",
    "end": "4502199"
  },
  {
    "text": "authentication so you may as well do it anyway so what are the lessons we've",
    "start": "4502199",
    "end": "4507480"
  },
  {
    "text": "learned about weap um the first one designing security protocols is",
    "start": "4507480",
    "end": "4513719"
  },
  {
    "text": "hard um you thought designing crypto algorithms was hard so is this I would say this is",
    "start": "4513719",
    "end": "4521480"
  },
  {
    "text": "sometimes harder um even when you use the write Primitives right we used rc4 it's not",
    "start": "4521480",
    "end": "4527840"
  },
  {
    "text": "like we made up a cipher made up a stream Cipher that was like grad student level to break we're not going to break",
    "start": "4527840",
    "end": "4533679"
  },
  {
    "text": "rc4 with in order to break this we're going to go around it right in almost",
    "start": "4533679",
    "end": "4540239"
  },
  {
    "text": "every system today with good crypto you don't break the crypto you go around the crypto and the way we go around the",
    "start": "4540239",
    "end": "4545840"
  },
  {
    "text": "crypto was we got other devices to do the crypto for us we use the fact that",
    "start": "4545840",
    "end": "4552120"
  },
  {
    "text": "if we encrypt two different messages with the same key then we'll get related Cipher texts and things like this so the",
    "start": "4552120",
    "end": "4559800"
  },
  {
    "text": "simple advice in designing protocols is just don't do it right just like the advice in",
    "start": "4559800",
    "end": "4565800"
  },
  {
    "text": "designing a crypto algorithm is don't do it use an existing good one same thing",
    "start": "4565800",
    "end": "4572800"
  },
  {
    "text": "here so the first lesson is to reuse old designs where",
    "start": "4574120",
    "end": "4580040"
  },
  {
    "text": "possible at least look at them right if you're not going to just pick up an old protocol that someone has designed and",
    "start": "4580040",
    "end": "4586560"
  },
  {
    "text": "is using today at least look at it look at its design decisions and learn from it",
    "start": "4586560",
    "end": "4593480"
  },
  {
    "text": "um a lot of you might remember the paper breaking pptp that was a I don't know a few years",
    "start": "4593480",
    "end": "4601719"
  },
  {
    "text": "back um mudj and Bruce put together uh that had a lot of these very",
    "start": "4601719",
    "end": "4609239"
  },
  {
    "text": "same problems right identical problems were in pptp as are in we",
    "start": "4609239",
    "end": "4616199"
  },
  {
    "text": "You' think these people would have looked at it and noticed that and not made the same mistake again right we can",
    "start": "4616199",
    "end": "4621880"
  },
  {
    "text": "forgive you for making a mistake it's hard to forgive you for making a mistake",
    "start": "4621880",
    "end": "4627000"
  },
  {
    "text": "again um IP SEC also had a lot of the same issues when during its design",
    "start": "4627000",
    "end": "4635000"
  },
  {
    "text": "phase the second thing is make the design process public and inviting you",
    "start": "4635000",
    "end": "4640080"
  },
  {
    "text": "explicitly need to find experts crypto security protocol experts come look at",
    "start": "4640080",
    "end": "4645600"
  },
  {
    "text": "it the CRC is linear problem for example that allowed easy modification would",
    "start": "4645600",
    "end": "4651360"
  },
  {
    "text": "have been spotted right away by someone who has had any kind of",
    "start": "4651360",
    "end": "4657440"
  },
  {
    "text": "stream Cipher protocol background um the problem with the itle",
    "start": "4657440",
    "end": "4663440"
  },
  {
    "text": "E process is that it is technically open right anyone can join an itle e working",
    "start": "4663440",
    "end": "4668600"
  },
  {
    "text": "group so they just kind of assume that cryptographer will do this right",
    "start": "4668600",
    "end": "4677679"
  },
  {
    "text": "and they don't make special effort and just assume that someone on this working group must have taken a look at the",
    "start": "4677679",
    "end": "4683600"
  },
  {
    "text": "security thing and given its blessing but apparently no one",
    "start": "4683600",
    "end": "4689000"
  },
  {
    "text": "did um so that's not so good the other thing was until recently um i e specs",
    "start": "4689000",
    "end": "4696040"
  },
  {
    "text": "are really hard to get you had to pay a lot of money for them um which is again",
    "start": "4696040",
    "end": "4703120"
  },
  {
    "text": "not encouraging for people who want to look at them it turned out that the way",
    "start": "4703120",
    "end": "4709080"
  },
  {
    "text": "we got involved in this is that some other group at Berkeley needed to buy the i e 80211 spec for some totally",
    "start": "4709080",
    "end": "4715719"
  },
  {
    "text": "other reason um just involving Wireless networking and nothing to do with security but while it was in the office",
    "start": "4715719",
    "end": "4722760"
  },
  {
    "text": "we went hey let's take a look at the security of this thing and so we did and so this is the",
    "start": "4722760",
    "end": "4730320"
  },
  {
    "text": "result um now however the 802 working group has decided in all wisdom and it's",
    "start": "4730320",
    "end": "4738280"
  },
  {
    "text": "very clever to just put them up on the Internet this internet thing's going to rock I",
    "start": "4738280",
    "end": "4745040"
  },
  {
    "text": "mean it's gonna be huge so now luckily you can just get get",
    "start": "4745679",
    "end": "4753600"
  },
  {
    "text": "the uh protocols so just to wrap up conclusions",
    "start": "4753600",
    "end": "4758840"
  },
  {
    "text": "we've demonstrated attacks on the wired equivalent privacy protocol that defeat each of the security grow goals of",
    "start": "4758840",
    "end": "4765239"
  },
  {
    "text": "confidentiality we can read the traffic Access Control we can inject traffic data Integrity we can modify",
    "start": "4765239",
    "end": "4772360"
  },
  {
    "text": "traffic this doesn't kill Wireless ethernet right you can still use your wireless ethernet just as you were doing",
    "start": "4772360",
    "end": "4778239"
  },
  {
    "text": "before you just have to assume it's not secure and use other security mechanisms",
    "start": "4778239",
    "end": "4783320"
  },
  {
    "text": "like SSH or a VPN or IPC or something on top of your wireless net I'm sure a lot",
    "start": "4783320",
    "end": "4788840"
  },
  {
    "text": "of you are using the wireless net here with SSH on top of it yes yeah",
    "start": "4788840",
    "end": "4796400"
  },
  {
    "text": "so that's uh that's certainly something you can do",
    "start": "4796400",
    "end": "4801520"
  },
  {
    "text": "today we don't have to throw out this great Wireless Hardware open standards are more likely to be secure they're not",
    "start": "4801520",
    "end": "4808120"
  },
  {
    "text": "I didn't say Open Standards are more secure right because just because it's open doesn't mean anyone actually looked",
    "start": "4808120",
    "end": "4814239"
  },
  {
    "text": "at it but it helps and Mumble GSM Mumble for an",
    "start": "4814239",
    "end": "4820440"
  },
  {
    "text": "example of the Contra positive um",
    "start": "4820440",
    "end": "4825760"
  },
  {
    "text": "for more information describing these attacks we have a URL here dubdub Isaac",
    "start": "4825760",
    "end": "4831320"
  },
  {
    "text": "csb the edu is-f fact. HTML and that has uh links to a bunch of",
    "start": "4831320",
    "end": "4838880"
  },
  {
    "text": "things including a pre-print of the paper with a lot of details and wired equivalent privacy",
    "start": "4838880",
    "end": "4846719"
  },
  {
    "text": "isn't so that's all I",
    "start": "4847280",
    "end": "4851119"
  },
  {
    "text": "have",
    "start": "4853639",
    "end": "4856639"
  },
  {
    "text": "e",
    "start": "4883560",
    "end": "4886560"
  },
  {
    "text": "e",
    "start": "4913520",
    "end": "4916520"
  },
  {
    "text": "e",
    "start": "4943520",
    "end": "4946520"
  },
  {
    "text": "e",
    "start": "4973440",
    "end": "4976440"
  },
  {
    "text": "e",
    "start": "5003440",
    "end": "5006440"
  },
  {
    "text": "e",
    "start": "5033440",
    "end": "5036440"
  },
  {
    "text": "e",
    "start": "5063320",
    "end": "5066320"
  },
  {
    "text": "e",
    "start": "5093320",
    "end": "5096320"
  },
  {
    "text": "e",
    "start": "5123320",
    "end": "5126320"
  },
  {
    "text": "e",
    "start": "5153239",
    "end": "5156239"
  },
  {
    "text": "e",
    "start": "5183239",
    "end": "5186239"
  },
  {
    "text": "e",
    "start": "5213239",
    "end": "5216239"
  },
  {
    "text": "e",
    "start": "5243119",
    "end": "5246119"
  },
  {
    "text": "e",
    "start": "5273119",
    "end": "5276119"
  },
  {
    "text": "e",
    "start": "5303119",
    "end": "5306119"
  },
  {
    "text": "e",
    "start": "5333040",
    "end": "5336040"
  },
  {
    "text": "e",
    "start": "5363040",
    "end": "5366040"
  },
  {
    "text": "e",
    "start": "5393040",
    "end": "5396040"
  },
  {
    "text": "e",
    "start": "5422960",
    "end": "5425960"
  },
  {
    "text": "e",
    "start": "5452920",
    "end": "5455920"
  },
  {
    "text": "e",
    "start": "5482920",
    "end": "5485920"
  },
  {
    "text": "e",
    "start": "5512840",
    "end": "5515840"
  },
  {
    "text": "e e",
    "start": "5542840",
    "end": "5546880"
  }
]