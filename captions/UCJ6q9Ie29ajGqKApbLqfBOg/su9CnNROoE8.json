[
  {
    "start": "0",
    "end": "25000"
  },
  {
    "text": "the track for today is the power of theta oriented attacks the main idea for",
    "start": "0",
    "end": "5609"
  },
  {
    "text": "us is we try to get over the CFG control flow guard and the technique were using",
    "start": "5609",
    "end": "13019"
  },
  {
    "text": "is data only attacks there will be two portions for this talk this is the first",
    "start": "13019",
    "end": "20460"
  },
  {
    "text": "portion we'll have another talk later in another conference here's something",
    "start": "20460",
    "end": "26849"
  },
  {
    "start": "25000",
    "end": "155000"
  },
  {
    "text": "about us this idea is actually introduced by our co-worker Vincent he's",
    "start": "26849",
    "end": "34320"
  },
  {
    "text": "a seasoned security researcher unfortunately because of other commitments he is unable to make it",
    "start": "34320",
    "end": "41219"
  },
  {
    "text": "today so me myself and the co-worker",
    "start": "41219",
    "end": "46579"
  },
  {
    "text": "Stanley will be presenting this ping is the manager for the McAfee eye she has",
    "start": "46579",
    "end": "54030"
  },
  {
    "text": "secured research team and he has been working in the security field for many years has extensive experience for",
    "start": "54030",
    "end": "61410"
  },
  {
    "text": "operating system kernels and information security especially in advanced",
    "start": "61410",
    "end": "68580"
  },
  {
    "text": "vulnerability exploitation techniques for detection and offense as well",
    "start": "68580",
    "end": "73939"
  },
  {
    "text": "he has been also an active speaker for many conferences my name is Chun soo",
    "start": "73939",
    "end": "81720"
  },
  {
    "text": "currently I'm a senior director for the McAfee IPS team our team has a lot of",
    "start": "81720",
    "end": "88439"
  },
  {
    "text": "focuses especially the attack technique that as you can see here and also we do",
    "start": "88439",
    "end": "96299"
  },
  {
    "text": "a lot of research for vulnerability research maori research apt detection",
    "start": "96299",
    "end": "101640"
  },
  {
    "text": "and also bone a detection we also create a content that feeds into a lot of the",
    "start": "101640",
    "end": "108750"
  },
  {
    "text": "McAfee products as a result also we have a lot of things that we do for global",
    "start": "108750",
    "end": "116969"
  },
  {
    "text": "threat intelligence that McAfee has this is our co-worker Stanley - hello",
    "start": "116969",
    "end": "123689"
  },
  {
    "text": "everyone my name is Danny - I'm working maxie against a research team and you",
    "start": "123689",
    "end": "131069"
  },
  {
    "text": "keep increasing in advance the venerability",
    "start": "131069",
    "end": "137250"
  },
  {
    "text": "exploitation and comprise virus analyzing the antivirus on TCM next to",
    "start": "137250",
    "end": "144930"
  },
  {
    "text": "meet you well let us show our our results for you okay",
    "start": "144930",
    "end": "155180"
  },
  {
    "start": "155000",
    "end": "205000"
  },
  {
    "text": "here's the agenda for today we'll give a brief introduction about the th CFG and",
    "start": "155180",
    "end": "162870"
  },
  {
    "text": "the known methods in the previous talk it was already given a lot more detail",
    "start": "162870",
    "end": "168420"
  },
  {
    "text": "we'll go through it very briefly and then we'll come to the main part of our",
    "start": "168420",
    "end": "174510"
  },
  {
    "text": "talk which is about the data only attack we'll give a couple of examples and then",
    "start": "174510",
    "end": "180420"
  },
  {
    "text": "summarize what it is based on that will give our suggestions to the prevention",
    "start": "180420",
    "end": "187980"
  },
  {
    "text": "for data only attacks and also based on those the attacks and techniques which",
    "start": "187980",
    "end": "194099"
  },
  {
    "text": "show we'll give two demos that Stanley will show us we conclude the talk by",
    "start": "194099",
    "end": "200010"
  },
  {
    "text": "takeaways and acknowledgments the",
    "start": "200010",
    "end": "205889"
  },
  {
    "start": "205000",
    "end": "270000"
  },
  {
    "text": "control flow guard is one of the main mechanisms that Microsoft introduced for",
    "start": "205889",
    "end": "211980"
  },
  {
    "text": "the purpose of mitigating control flow hijacking the implementation is first of",
    "start": "211980",
    "end": "219480"
  },
  {
    "text": "all at the compiler time compiling compilation time compiler will insert the CFG check functions into the code",
    "start": "219480",
    "end": "227190"
  },
  {
    "text": "that will be right before each of those indirect control transfer namely call",
    "start": "227190",
    "end": "233970"
  },
  {
    "text": "instructions or jump instructions and then the relative virtual address of all",
    "start": "233970",
    "end": "240720"
  },
  {
    "text": "those valid call targets will be summarized and put into a bitmap at",
    "start": "240720",
    "end": "248099"
  },
  {
    "text": "runtime this bitmap is loaded into the memory and then all the code targets",
    "start": "248099",
    "end": "254750"
  },
  {
    "text": "will be checked against this big map when we have this control for flow guard",
    "start": "254750",
    "end": "260070"
  },
  {
    "text": "in place when the target is determined as invalid then that",
    "start": "260070",
    "end": "265820"
  },
  {
    "text": "process will be terminated that's the main idea of control flower flow guard",
    "start": "265820",
    "end": "271510"
  },
  {
    "start": "270000",
    "end": "572000"
  },
  {
    "text": "here are some of the no.1 techniques that can be used to bypass control flow",
    "start": "271510",
    "end": "277850"
  },
  {
    "text": "guard the first one is to corrupt the functions return address on the stack we",
    "start": "277850",
    "end": "283280"
  },
  {
    "text": "have the reference here this is one of the works other folks did for for that",
    "start": "283280",
    "end": "290890"
  },
  {
    "text": "the mitigation for this is to use the return flow guard or intel's CET the",
    "start": "290890",
    "end": "299240"
  },
  {
    "text": "basic idea for that is you have a shadow stack so when any return happens the",
    "start": "299240",
    "end": "304940"
  },
  {
    "text": "return address will be able to compare against that shadow address attack",
    "start": "304940",
    "end": "310130"
  },
  {
    "text": "shadow stack so that we can make sure that the address on the stack for return",
    "start": "310130",
    "end": "316610"
  },
  {
    "text": "cannot be compromised the next one is to do some kind of a transition wire",
    "start": "316610",
    "end": "324490"
  },
  {
    "text": "unguarded trampling coat so this is mostly done by the dynamic hold",
    "start": "324490",
    "end": "330860"
  },
  {
    "text": "especially for JIT you can use it2 bypass that there are two words that we",
    "start": "330860",
    "end": "337430"
  },
  {
    "text": "listed here so the mitigation is obviously for GE part is the IT security improvement for",
    "start": "337430",
    "end": "344900"
  },
  {
    "text": "example you can do the jetty code checksum so one of the attacks here is",
    "start": "344900",
    "end": "352000"
  },
  {
    "text": "you first used in coder to do the JV generation and then after that that part",
    "start": "352000",
    "end": "358580"
  },
  {
    "text": "of the code being generated for the native code will be copied to another memory for execution but during this",
    "start": "358580",
    "end": "364370"
  },
  {
    "text": "time there's a gap right then it's possible to change the code being generated and if you add the statical",
    "start": "364370",
    "end": "371870"
  },
  {
    "text": "checksum and we can make sure that the code generated is actually the code that",
    "start": "371870",
    "end": "377090"
  },
  {
    "text": "will be used for execution remote jetty is another idea where the JIT code can",
    "start": "377090",
    "end": "385310"
  },
  {
    "text": "be generated from another process therefore in the current process now we cannot no longer change the code next",
    "start": "385310",
    "end": "394460"
  },
  {
    "text": "one is the cofunction out of contact this is a relatively new",
    "start": "394460",
    "end": "399970"
  },
  {
    "text": "idea and here we listed two two of the",
    "start": "399970",
    "end": "406220"
  },
  {
    "text": "work that has been done previously will give examples and also give another",
    "start": "406220",
    "end": "413150"
  },
  {
    "text": "attack that we found for this but the basic idea for mitigation is Microsoft",
    "start": "413150",
    "end": "420080"
  },
  {
    "text": "couldn't really find a generic protection mechanism for this so mostly",
    "start": "420080",
    "end": "426410"
  },
  {
    "text": "those are fixed case-by-case and in sometimes those can be done through the",
    "start": "426410",
    "end": "432740"
  },
  {
    "text": "fine grained control for the control flow integrity check that we'll show so",
    "start": "432740",
    "end": "438530"
  },
  {
    "text": "later a lot of the improvements were made for the Microsoft build 14 986",
    "start": "438530",
    "end": "446330"
  },
  {
    "text": "we'll also show that what we have done and how the battle between attacking",
    "start": "446330",
    "end": "453169"
  },
  {
    "text": "technique and the mitigation technique works as I said this whole function out",
    "start": "453169",
    "end": "466159"
  },
  {
    "text": "of contacts can be one of the techniques being used now I'll show one of the",
    "start": "466159",
    "end": "471169"
  },
  {
    "text": "examples that we found this what being found and reported to Microsoft here",
    "start": "471169",
    "end": "478400"
  },
  {
    "text": "what we're trying to do is to use this particular call it's a within ntdll",
    "start": "478400",
    "end": "485090"
  },
  {
    "text": "it's the RTL protect keep what this can achieve is that we can use it to change",
    "start": "485090",
    "end": "496759"
  },
  {
    "text": "the memory property so that we can change some memory that property from",
    "start": "496759",
    "end": "503930"
  },
  {
    "text": "read-only to read and write by doing that then as long as we can we know",
    "start": "503930",
    "end": "510740"
  },
  {
    "text": "where this control car function pointer will be then if we change that portion",
    "start": "510740",
    "end": "518060"
  },
  {
    "text": "of the memory and we can overwrite the function to that so that instead of",
    "start": "518060",
    "end": "523370"
  },
  {
    "text": "pointing it to the function that Microsoft wants to execute we point into",
    "start": "523370",
    "end": "528529"
  },
  {
    "text": "something that we want in this case as you can see here we're pointing to is a piece of the code",
    "start": "528529",
    "end": "535860"
  },
  {
    "text": "that does nothing pretty much you jump to it and then you'll return immediately so if it looks like pretty much a",
    "start": "535860",
    "end": "544160"
  },
  {
    "text": "malfunction and then because we can change the pointer for this control flow",
    "start": "544160",
    "end": "551639"
  },
  {
    "text": "guard pointer to that function then every time this function is called then",
    "start": "551639",
    "end": "557100"
  },
  {
    "text": "control flower log our chart just returns and it doesn't do anything that",
    "start": "557100",
    "end": "562350"
  },
  {
    "text": "way we pretty much every time for every function that has the control flow flow",
    "start": "562350",
    "end": "568019"
  },
  {
    "text": "guard it can be bypassed here is the",
    "start": "568019",
    "end": "575540"
  },
  {
    "start": "572000",
    "end": "878000"
  },
  {
    "text": "detail for the code that what we use first of all this whole sequence of",
    "start": "575540",
    "end": "584480"
  },
  {
    "text": "exploitation is triggered through the JavaScript but within the JavaScript",
    "start": "584480",
    "end": "589949"
  },
  {
    "text": "obviously there are only things that you can do you cannot for arbitrary functions that you want but in this case",
    "start": "589949",
    "end": "599699"
  },
  {
    "text": "when we do the call out of context call one of the assumption is we have the",
    "start": "599699",
    "end": "606480"
  },
  {
    "text": "arbitrary memory read and arbitrary memory right therefore one of the things we can do is we find this function as I",
    "start": "606480",
    "end": "615449"
  },
  {
    "text": "said the protect heap for this function for this call then we can through the",
    "start": "615449",
    "end": "624750"
  },
  {
    "text": "arbitrary memory write ask it to be pointed from the delete element of this",
    "start": "624750",
    "end": "633410"
  },
  {
    "text": "raid object so when that's done we will",
    "start": "633410",
    "end": "639000"
  },
  {
    "text": "be able to call the operation to do delete array objects and then when",
    "start": "639000",
    "end": "647579"
  },
  {
    "text": "that's caught it will point to this RTL protective function and this will",
    "start": "647579",
    "end": "654120"
  },
  {
    "text": "execute so this is the first step and then obviously this step for this",
    "start": "654120",
    "end": "661800"
  },
  {
    "text": "rtl protective itself has to be able to parse to pass the CFG chart right",
    "start": "661800",
    "end": "668760"
  },
  {
    "text": "otherwise then we won't be able to use it the next step what we do is we have",
    "start": "668760",
    "end": "677940"
  },
  {
    "text": "to have the ability or as I said we need to change the memory property for the",
    "start": "677940",
    "end": "687300"
  },
  {
    "text": "memory that points to this function pointer so that we can replace it right",
    "start": "687300",
    "end": "692990"
  },
  {
    "text": "what we did is that within this RTL protect heap it has two parameters the",
    "start": "692990",
    "end": "701370"
  },
  {
    "text": "first parameter is pointing to the base of a heap and the second parameter is to",
    "start": "701370",
    "end": "710940"
  },
  {
    "text": "tell this function whether or not we want to protect this portion of the tip or the memory that's in the heap or",
    "start": "710940",
    "end": "718940"
  },
  {
    "text": "unprotected protect means we market read-only unprotect means we make it",
    "start": "718940",
    "end": "724410"
  },
  {
    "text": "read and write so that for the address has been in put in crafted in this key",
    "start": "724410",
    "end": "730079"
  },
  {
    "text": "then we are able to make a piece of the memory writable so that's the basic idea",
    "start": "730079",
    "end": "738050"
  },
  {
    "text": "therefore we ourselves crafted a heap and then we put this particular address",
    "start": "738050",
    "end": "744000"
  },
  {
    "text": "for that car check I call a pointer into",
    "start": "744000",
    "end": "750209"
  },
  {
    "text": "that in a particular place now let's",
    "start": "750209",
    "end": "755459"
  },
  {
    "text": "continue to see how all those things work we already know that this",
    "start": "755459",
    "end": "762959"
  },
  {
    "text": "particular API the RTL protect key takes two parameters the first one is the base",
    "start": "762959",
    "end": "769079"
  },
  {
    "text": "for the heap the second one is what we passed in to tell it whether or not we",
    "start": "769079",
    "end": "774870"
  },
  {
    "text": "want to protect or unproductive particular key that we point to the the",
    "start": "774870",
    "end": "783170"
  },
  {
    "text": "internal for this is solos you can see",
    "start": "787180",
    "end": "792260"
  },
  {
    "text": "it has two parameters and also it cost this our TLP protective to do the actual",
    "start": "792260",
    "end": "799520"
  },
  {
    "text": "work now let's continue to get into this function for this our TLP protective",
    "start": "799520",
    "end": "806180"
  },
  {
    "text": "ultimately it cost this the W protect virtual memory to change the memory",
    "start": "806180",
    "end": "813020"
  },
  {
    "text": "property so now we can see here is that",
    "start": "813020",
    "end": "820940"
  },
  {
    "text": "first of all from the JavaScript we call our delete element but that that is",
    "start": "820940",
    "end": "828590"
  },
  {
    "text": "pointy to this particular product heat code that we want to make and then after",
    "start": "828590",
    "end": "835580"
  },
  {
    "text": "all those crafted setting for the heap and also parsing the parameters of the T",
    "start": "835580",
    "end": "842810"
  },
  {
    "text": "key base and also as the value to make sure that we want to unprotect the",
    "start": "842810",
    "end": "849320"
  },
  {
    "text": "memory address as in that keep then we are able to trigger the whole chain of",
    "start": "849320",
    "end": "855920"
  },
  {
    "text": "action so that we can make that piece of the memory which has the control flow",
    "start": "855920",
    "end": "862610"
  },
  {
    "text": "card check function pointer to be writable now you can see at the lower",
    "start": "862610",
    "end": "868190"
  },
  {
    "text": "part that that piece of the memory after this it's already set to to be writable",
    "start": "868190",
    "end": "876730"
  },
  {
    "start": "878000",
    "end": "1339000"
  },
  {
    "text": "now standing it will give us a demo for",
    "start": "878560",
    "end": "884240"
  },
  {
    "text": "us to see the whole attack process that we use for this particular technique",
    "start": "884240",
    "end": "890530"
  },
  {
    "text": "okay let's me show them a fool you",
    "start": "890530",
    "end": "895870"
  },
  {
    "text": "we course that bypass support CSG protection so people we have a wo to",
    "start": "899740",
    "end": "910380"
  },
  {
    "text": "address right primitive primitive so it",
    "start": "910380",
    "end": "918010"
  },
  {
    "text": "changes to a aw all right every but the guys who drive are happy",
    "start": "918010",
    "end": "924370"
  },
  {
    "text": "three the rights reader okay let me run",
    "start": "924370",
    "end": "933910"
  },
  {
    "text": "the POC we can we can simulate a aw aw",
    "start": "933910",
    "end": "947620"
  },
  {
    "text": "of a right with linda barcz script",
    "start": "947620",
    "end": "954930"
  },
  {
    "text": "attack sir hatch process",
    "start": "962950",
    "end": "967800"
  },
  {
    "text": "first lets me take a say F G C F you",
    "start": "1041020",
    "end": "1048010"
  },
  {
    "text": "gotta check icon function",
    "start": "1048010",
    "end": "1051450"
  },
  {
    "text": "ah perversely the sanity guard check egg for function Punk ma panda - hello",
    "start": "1082690",
    "end": "1091419"
  },
  {
    "text": "ldrp validating user core target let me",
    "start": "1091419",
    "end": "1099340"
  },
  {
    "text": "run the wind of our script the script",
    "start": "1099340",
    "end": "1107789"
  },
  {
    "text": "simulator with availability 8 8 w",
    "start": "1107789",
    "end": "1114988"
  },
  {
    "text": "okay we go oh sorry let me show you the video",
    "start": "1139550",
    "end": "1151030"
  },
  {
    "text": "we can leak or dress as on today obeys",
    "start": "1248180",
    "end": "1255370"
  },
  {
    "text": "and the vacant because a garbage acre I call function ah dress",
    "start": "1255880",
    "end": "1262930"
  },
  {
    "text": "operationally they can hear we can see the safety garbage shake I call of",
    "start": "1271750",
    "end": "1279050"
  },
  {
    "text": "function palm to a written instruction code so the safety safety safety",
    "start": "1279050",
    "end": "1288100"
  },
  {
    "text": "protection hide a load of hide a load of the function yeah thanks Eva so what we",
    "start": "1288100",
    "end": "1305960"
  },
  {
    "text": "showed is that through this vulnerability that we find for that",
    "start": "1305960",
    "end": "1312320"
  },
  {
    "text": "particular code and we are able to craft a heap and then we are able to change the memory property so they are able to",
    "start": "1312320",
    "end": "1320030"
  },
  {
    "text": "change the pointer that does the work for the control flow guard therefore",
    "start": "1320030",
    "end": "1325610"
  },
  {
    "text": "when the actual call happens then we'll point to something else instead of the original control so carajo so that's how",
    "start": "1325610",
    "end": "1335630"
  },
  {
    "text": "the claw out of contacts actually works a Microsoft did the fix what it is is",
    "start": "1335630",
    "end": "1343310"
  },
  {
    "start": "1339000",
    "end": "1384000"
  },
  {
    "text": "that for that particular RTL protective it may get the call target and make it",
    "start": "1343310",
    "end": "1353030"
  },
  {
    "text": "in unable to parse the CFG check so that's why in this case we know Logan no",
    "start": "1353030",
    "end": "1359900"
  },
  {
    "text": "longer can use it because as we said one of the assumption is that we have to",
    "start": "1359900",
    "end": "1365450"
  },
  {
    "text": "find a call that can bypass the CFG track to start with so that we can no",
    "start": "1365450",
    "end": "1371990"
  },
  {
    "text": "longer in this case since it's no longer a valid target and we cannot use it",
    "start": "1371990",
    "end": "1377630"
  },
  {
    "text": "anymore that was fixed in the build 50",
    "start": "1377630",
    "end": "1382730"
  },
  {
    "text": "Oh 48 so to summarize for the basic idea",
    "start": "1382730",
    "end": "1389240"
  },
  {
    "start": "1384000",
    "end": "1677000"
  },
  {
    "text": "for core function out of context is we",
    "start": "1389240",
    "end": "1397850"
  },
  {
    "text": "have to issue a function call to the unexpected target in this case the execution logic for the",
    "start": "1397850",
    "end": "1412570"
  },
  {
    "text": "original code is changed so from that perspective it's a one type of the",
    "start": "1412570",
    "end": "1419109"
  },
  {
    "text": "hijacking of the original control flow in order to make this out of context",
    "start": "1419109",
    "end": "1428139"
  },
  {
    "text": "call to be successful so the idea is you",
    "start": "1428139",
    "end": "1433509"
  },
  {
    "text": "hope first of all you have to overwrite existing function pointer we already showed that the function pointer we",
    "start": "1433509",
    "end": "1440949"
  },
  {
    "text": "overwrite is the control flow card the check function and then the target",
    "start": "1440949",
    "end": "1447969"
  },
  {
    "text": "function has to be able to bypass CFG check that we already also set the",
    "start": "1447969",
    "end": "1455049"
  },
  {
    "text": "original protective function that we use it's able to parse to pass the CFG check",
    "start": "1455049",
    "end": "1464278"
  },
  {
    "text": "one of some other important factors is that because we are exploiting this at",
    "start": "1465569",
    "end": "1473289"
  },
  {
    "text": "the JavaScript level at the scripting level so that means that for whatever",
    "start": "1473289",
    "end": "1479019"
  },
  {
    "text": "the native calls you get you have to be able to invoke invoke that call",
    "start": "1479019",
    "end": "1484769"
  },
  {
    "text": "repetitively and also successfully especially for some of those because",
    "start": "1484769",
    "end": "1490959"
  },
  {
    "text": "ultimately the code that we want to use my have different parameters but we have",
    "start": "1490959",
    "end": "1496299"
  },
  {
    "text": "to be able to pass the parameters that we need into it and we have to control the use of those parameters before the",
    "start": "1496299",
    "end": "1504759"
  },
  {
    "text": "real work was done for that particular function that we caught that's very important as we see in our example we we",
    "start": "1504759",
    "end": "1513519"
  },
  {
    "text": "crafted the heap and we put the necessary information into that heap so",
    "start": "1513519",
    "end": "1519069"
  },
  {
    "text": "that we pass the base to the heap and also the flag that we want to protect",
    "start": "1519069",
    "end": "1526839"
  },
  {
    "text": "our unproductive memory that we want to change so those are the two parameters that we have to be able to control",
    "start": "1526839",
    "end": "1534219"
  },
  {
    "text": "otherwise there's not really much we we can force",
    "start": "1534219",
    "end": "1539290"
  },
  {
    "text": "that function called to do the work for us sometimes that for the such target",
    "start": "1539290",
    "end": "1546730"
  },
  {
    "text": "function the return values are also important if in some cases we need for",
    "start": "1546730",
    "end": "1553000"
  },
  {
    "text": "example if the return value we are expecting an address then we have to be",
    "start": "1553000",
    "end": "1558340"
  },
  {
    "text": "able to control to get the ultimate return parameter as well but if the",
    "start": "1558340",
    "end": "1566080"
  },
  {
    "text": "function we call in this case is say for that keep then it returns some parameter",
    "start": "1566080",
    "end": "1573940"
  },
  {
    "text": "that we want to use later say if it's an address then we have to be able to get",
    "start": "1573940",
    "end": "1579580"
  },
  {
    "text": "it at the script level otherwise then although you can force things to happen but you don't get the information you",
    "start": "1579580",
    "end": "1585970"
  },
  {
    "text": "need to continue so that's also very important one of the good examples for",
    "start": "1585970",
    "end": "1593470"
  },
  {
    "text": "the previous work is listed here from read and write everywhere anywhere to",
    "start": "1593470",
    "end": "1599500"
  },
  {
    "text": "control to controllable cause if you guys interested you can check out also",
    "start": "1599500",
    "end": "1604630"
  },
  {
    "text": "it has a very good example of this a",
    "start": "1604630",
    "end": "1610860"
  },
  {
    "text": "function call out of contacts technique",
    "start": "1610860",
    "end": "1615630"
  },
  {
    "text": "ok this has a web shown a lot of the work done through this call out of",
    "start": "1616740",
    "end": "1623590"
  },
  {
    "text": "context so Microsoft has did a lot of improvement also in order to counter",
    "start": "1623590",
    "end": "1629650"
  },
  {
    "text": "that in this case for the control flow",
    "start": "1629650",
    "end": "1635560"
  },
  {
    "text": "guard as you can see some of those especially they'll call out of context",
    "start": "1635560",
    "end": "1640960"
  },
  {
    "text": "is no longer within the scope of this Microsoft bypass bounty program then",
    "start": "1640960",
    "end": "1651180"
  },
  {
    "text": "what do we do this technique is being patched and also it's out of the scope",
    "start": "1651180",
    "end": "1658660"
  },
  {
    "text": "then we have to find a new way to continue our attack then this is where",
    "start": "1658660",
    "end": "1665890"
  },
  {
    "text": "we think they'd only attack we'll be coming in to play and going",
    "start": "1665890",
    "end": "1671050"
  },
  {
    "text": "forward it probably will play a very big role in the attacking technique what is",
    "start": "1671050",
    "end": "1678820"
  },
  {
    "start": "1677000",
    "end": "2021000"
  },
  {
    "text": "data only attack the basic idea for data",
    "start": "1678820",
    "end": "1684250"
  },
  {
    "text": "only attack is that for any program there must be some meaningful data that",
    "start": "1684250",
    "end": "1690610"
  },
  {
    "text": "will be used such data can determine",
    "start": "1690610",
    "end": "1695860"
  },
  {
    "text": "what the behavior the program might be but we're not trying to change the",
    "start": "1695860",
    "end": "1700900"
  },
  {
    "text": "control flow as we see in the out of context call because we're not changing the pointers to point to something",
    "start": "1700900",
    "end": "1707200"
  },
  {
    "text": "different the problem will still execute but then because we changed some of the data that controls the flow of this",
    "start": "1707200",
    "end": "1715090"
  },
  {
    "text": "execution we're be able to change the behavior of the program itself because",
    "start": "1715090",
    "end": "1724420"
  },
  {
    "text": "we're not changing the control flow by forcing it to go some other routes right",
    "start": "1724420",
    "end": "1731160"
  },
  {
    "text": "therefore the problem logic still remains the same therefore in this case",
    "start": "1731160",
    "end": "1737500"
  },
  {
    "text": "the control flow integrity check is no longer in the picture of the attacking",
    "start": "1737500",
    "end": "1744520"
  },
  {
    "text": "technique we use there are two very good examples for this attacking technique",
    "start": "1744520",
    "end": "1752350"
  },
  {
    "text": "one example is the vital point strikes it's called the JavaScript code mode",
    "start": "1752350",
    "end": "1759670"
  },
  {
    "text": "basically you can change piece of the flag within the memory so that your",
    "start": "1759670",
    "end": "1764740"
  },
  {
    "text": "JavaScript instead of running with some limitation then will run as arbitrary",
    "start": "1764740",
    "end": "1771910"
  },
  {
    "text": "code that you can let it to run so that's controlled by a piece of flag in",
    "start": "1771910",
    "end": "1777760"
  },
  {
    "text": "the memory another example is to bypass",
    "start": "1777760",
    "end": "1783700"
  },
  {
    "text": "email in that the biggest idea here also is there are some data that controls",
    "start": "1783700",
    "end": "1791679"
  },
  {
    "text": "whether or not Amaris enabled or disabled and how it's been used but that",
    "start": "1791679",
    "end": "1797830"
  },
  {
    "text": "data is protected and it's encrypted and also the address start somewhere else but unless you can",
    "start": "1797830",
    "end": "1805500"
  },
  {
    "text": "have the ability to decrypt that then you will go won't be able to touch that",
    "start": "1805500",
    "end": "1810820"
  },
  {
    "text": "piece of memory so this technique actually used some brute force to be able to get the encryption key out of it",
    "start": "1810820",
    "end": "1818560"
  },
  {
    "text": "and then everything else is a very obvious so those are the two very good",
    "start": "1818560",
    "end": "1826840"
  },
  {
    "text": "examples then for the data only attack",
    "start": "1826840",
    "end": "1833110"
  },
  {
    "text": "then what are the data portion of the target that we want to use there are",
    "start": "1833110",
    "end": "1840610"
  },
  {
    "text": "several of those first of all the example I give is some of the global",
    "start": "1840610",
    "end": "1850300"
  },
  {
    "text": "flag or maybe some object that of the data that will determine how the control",
    "start": "1850300",
    "end": "1858940"
  },
  {
    "text": "flow will go to this way or to that way so those are the things that we need the",
    "start": "1858940",
    "end": "1866860"
  },
  {
    "text": "right of point strike is a very good example of one flag in the memory will",
    "start": "1866860",
    "end": "1872560"
  },
  {
    "text": "determine what your program is able to do and then for the second bypass for",
    "start": "1872560",
    "end": "1880120"
  },
  {
    "text": "the email bypass actually is a piece of memory you want to change but there are",
    "start": "1880120",
    "end": "1885580"
  },
  {
    "text": "other ways to get access to it so those are the things that we want to look for",
    "start": "1885580",
    "end": "1892000"
  },
  {
    "text": "to start with and also other unprotected",
    "start": "1892000",
    "end": "1898120"
  },
  {
    "text": "the data section or unprotected key but private data including stacks those are",
    "start": "1898120",
    "end": "1904450"
  },
  {
    "text": "also the things that we are very interested in so we know that with the",
    "start": "1904450",
    "end": "1912880"
  },
  {
    "text": "data only attack is and some examples and what are the things were we're looking for now how do we launch such an",
    "start": "1912880",
    "end": "1921730"
  },
  {
    "text": "attack first of all as I said a lot of the criminal attacks all require the",
    "start": "1921730",
    "end": "1928410"
  },
  {
    "text": "arbitrary memory address read and write so that's one of the assumptions we have",
    "start": "1928410",
    "end": "1934990"
  },
  {
    "text": "and then for us because we want to locate the data and change the data",
    "start": "1934990",
    "end": "1940750"
  },
  {
    "text": "obviously the location of your target data being changed or manipulated by us",
    "start": "1940750",
    "end": "1947530"
  },
  {
    "text": "is very important so that's the key to our success that being said some of the",
    "start": "1947530",
    "end": "1954550"
  },
  {
    "text": "data might be transient and some of the data may have to be very time-sensitive",
    "start": "1954550",
    "end": "1960910"
  },
  {
    "text": "for example if you're trying to change some data if it's a let's say some local",
    "start": "1960910",
    "end": "1968470"
  },
  {
    "text": "variable then it only is valid within that particular function call that we",
    "start": "1968470",
    "end": "1973690"
  },
  {
    "text": "want to see right or another example can",
    "start": "1973690",
    "end": "1979600"
  },
  {
    "text": "be the example that we show previously when the JIT code is generated to the",
    "start": "1979600",
    "end": "1988420"
  },
  {
    "text": "point that JIT code is put into memory to run then there's a gap between the",
    "start": "1988420",
    "end": "1995860"
  },
  {
    "text": "time so that's the only window that you can have to change that a lot of the",
    "start": "1995860",
    "end": "2001350"
  },
  {
    "text": "times such data are protected by locks when that data is being changed that",
    "start": "2001350",
    "end": "2007559"
  },
  {
    "text": "lock is unlocked but then after the change of the data then the lock will be",
    "start": "2007559",
    "end": "2012570"
  },
  {
    "text": "applied then you only have that very small window that you can use and to",
    "start": "2012570",
    "end": "2018990"
  },
  {
    "text": "change that data this is one example we",
    "start": "2018990",
    "end": "2026580"
  },
  {
    "start": "2021000",
    "end": "2711000"
  },
  {
    "text": "had last year for the data only attack",
    "start": "2026580",
    "end": "2032059"
  },
  {
    "text": "the basic idea is for the graphic generation nowadays there are hardware",
    "start": "2032059",
    "end": "2039660"
  },
  {
    "text": "to do that but in the old system or some other system or even in the system that",
    "start": "2039660",
    "end": "2046110"
  },
  {
    "text": "has the power support you'll still have this software counterparts just in case",
    "start": "2046110",
    "end": "2051419"
  },
  {
    "text": "the hower is not there or it's not supported for some of those that's called warp and",
    "start": "2051419",
    "end": "2057950"
  },
  {
    "text": "then we take advantage of the warp shader which is used to render the 3d",
    "start": "2057950",
    "end": "2067138"
  },
  {
    "text": "data into the to the dimension that we use that to do",
    "start": "2067139",
    "end": "2073270"
  },
  {
    "text": "our JIT spree obviously not all the work is enabled by default rate we have to",
    "start": "2073270",
    "end": "2080079"
  },
  {
    "text": "force the enabling of this work in order for the web shader to work that means",
    "start": "2080079",
    "end": "2086919"
  },
  {
    "text": "although the hover may support graphics but then we want to disable the Hauer",
    "start": "2086919",
    "end": "2093730"
  },
  {
    "text": "and force the system to run the software version of it so that we can use this",
    "start": "2093730",
    "end": "2099160"
  },
  {
    "text": "warp shader to do the hits right for us",
    "start": "2099160",
    "end": "2105510"
  },
  {
    "text": "now we reported that to Microsoft as I said because we're trying to enforce the",
    "start": "2105510",
    "end": "2115390"
  },
  {
    "text": "loading of something that's not being used by default now we have to change some critical data in order to achieve",
    "start": "2115390",
    "end": "2122170"
  },
  {
    "text": "that we reported that to Microsoft Microsoft had the first week in fix in",
    "start": "2122170",
    "end": "2128230"
  },
  {
    "text": "July last year those two references you",
    "start": "2128230",
    "end": "2135880"
  },
  {
    "text": "can take a look especially the second one it has more detail of how we did it",
    "start": "2135880",
    "end": "2142420"
  },
  {
    "text": "this to start with and then later on being found out that although Microsoft",
    "start": "2142420",
    "end": "2149829"
  },
  {
    "text": "had to fix but actually we still can bypass it the reason being that they're",
    "start": "2149829",
    "end": "2155529"
  },
  {
    "text": "fixed is to rely on a global variable but then as we know global variable is",
    "start": "2155529",
    "end": "2161410"
  },
  {
    "text": "piece of data if we can locate that and if we can change the content of that",
    "start": "2161410",
    "end": "2166839"
  },
  {
    "text": "global variable then we'll still be able to bypass this and he reported to",
    "start": "2166839",
    "end": "2172660"
  },
  {
    "text": "Microsoft again and ultimately in a December than that versa ultimately",
    "start": "2172660",
    "end": "2177880"
  },
  {
    "text": "fixed so this is as you see attempting",
    "start": "2177880",
    "end": "2183880"
  },
  {
    "text": "technique and the mitigation techniques is in a battle for this and in this case it's sea salt multiple times for us",
    "start": "2183880",
    "end": "2192099"
  },
  {
    "text": "ultimately unable to use the technique that we have",
    "start": "2192099",
    "end": "2198539"
  },
  {
    "text": "before the fix the first version for this particular build for the DLL for",
    "start": "2198620",
    "end": "2206130"
  },
  {
    "text": "WebGL Microsoft actually won the JD code",
    "start": "2206130",
    "end": "2212700"
  },
  {
    "text": "is generated there's no control flow guard check for that there's no integrity check so which means",
    "start": "2212700",
    "end": "2219410"
  },
  {
    "text": "everything we generate it's a valid it should be a valid address and all the",
    "start": "2219410",
    "end": "2226380"
  },
  {
    "text": "things that we have offered that the JIT code generation we can jump into that",
    "start": "2226380",
    "end": "2233550"
  },
  {
    "text": "because all those are valid addresses that's why the the first attack that we",
    "start": "2233550",
    "end": "2242100"
  },
  {
    "text": "have is very successful and then Microsoft had the fix in June of last year as you see what here what Microsoft",
    "start": "2242100",
    "end": "2250020"
  },
  {
    "text": "rely on is a global variable is called a CFG enabled if the CHCO G is enabled",
    "start": "2250020",
    "end": "2258570"
  },
  {
    "text": "this flag is set then going down what we will do is that for all the JT code that",
    "start": "2258570",
    "end": "2266310"
  },
  {
    "text": "is being generated then it will set a target for as valid for those so when",
    "start": "2266310",
    "end": "2274500"
  },
  {
    "text": "that is done then that means only those are entry point for those functions being generated are the valid targets",
    "start": "2274500",
    "end": "2281820"
  },
  {
    "text": "we cannot jump arbitrarily into the middle of those code so that limits the",
    "start": "2281820",
    "end": "2287490"
  },
  {
    "text": "ability to launch attacks but since this is still of global variable as I said",
    "start": "2287490",
    "end": "2293070"
  },
  {
    "text": "it's a piece of data as long as we can identify where it is then we'll be able to change it so that we can make this",
    "start": "2293070",
    "end": "2300260"
  },
  {
    "text": "set process valid code target not being invoked then we're backing to the",
    "start": "2300260",
    "end": "2308820"
  },
  {
    "text": "original version if that's the case and then ultimately Microsoft had another",
    "start": "2308820",
    "end": "2315780"
  },
  {
    "text": "fix instead of relying on a variable now everything is done through a function",
    "start": "2315780",
    "end": "2322140"
  },
  {
    "text": "call in this case because it's no longer depending on any particular data",
    "start": "2322140",
    "end": "2328690"
  },
  {
    "text": "since it's a function call then we can no longer use this they don't only",
    "start": "2328690",
    "end": "2334150"
  },
  {
    "text": "attack - to continue so this is a very good example that said the death battle",
    "start": "2334150",
    "end": "2341410"
  },
  {
    "text": "between attackers and mitigation mechanism continues especially in this",
    "start": "2341410",
    "end": "2347559"
  },
  {
    "text": "case is data only attack now since that is not feasible for us anymore than what",
    "start": "2347559",
    "end": "2355750"
  },
  {
    "text": "we do we find another way to execute our",
    "start": "2355750",
    "end": "2362140"
  },
  {
    "text": "code arbitrary code that we want the way here is first of all we want to use that",
    "start": "2362140",
    "end": "2370059"
  },
  {
    "text": "feedbacks as we know say edge and all of",
    "start": "2370059",
    "end": "2375549"
  },
  {
    "text": "those exit backs are disabled by default so then what we need to do is to force",
    "start": "2375549",
    "end": "2383140"
  },
  {
    "text": "the launch of this and then as we can see later is still whether or not a",
    "start": "2383140",
    "end": "2389890"
  },
  {
    "text": "feature is enabled is stored in some code l featured cache and then as long",
    "start": "2389890",
    "end": "2396940"
  },
  {
    "text": "as we can find that feature cache and change it then we can change the behaviors whether or not it's a ActiveX",
    "start": "2396940",
    "end": "2404670"
  },
  {
    "text": "extension can be loaded the thing we use is our Silverlight one of the good thing",
    "start": "2404670",
    "end": "2413109"
  },
  {
    "text": "is a Silverlight one is loaded then we'll create a piece of memory which has",
    "start": "2413109",
    "end": "2420160"
  },
  {
    "text": "the read and write and execution property so as long as we can force the",
    "start": "2420160",
    "end": "2425410"
  },
  {
    "text": "load of silverlight now we will be able to get a piece of memory that we can read we can write we can put our code to",
    "start": "2425410",
    "end": "2433119"
  },
  {
    "text": "execute all those the address will be valid for any of the execution we want",
    "start": "2433119",
    "end": "2441240"
  },
  {
    "text": "as I said by default as disabled the ActiveX and not only as some other",
    "start": "2442760",
    "end": "2451430"
  },
  {
    "text": "things say BHO vml or vbscript and also",
    "start": "2451430",
    "end": "2456830"
  },
  {
    "text": "by default they're not cannot be used so that ad itself has a significant less",
    "start": "2456830",
    "end": "2465590"
  },
  {
    "text": "attack service in order to force the",
    "start": "2465590",
    "end": "2471140"
  },
  {
    "text": "silverlight to be loaded in edge there are two things that we need to do especially those are either the checks",
    "start": "2471140",
    "end": "2480080"
  },
  {
    "text": "that we need to bypass or those are the flags we need to reset the first place",
    "start": "2480080",
    "end": "2486470"
  },
  {
    "text": "is has something to do with the feature",
    "start": "2486470",
    "end": "2493580"
  },
  {
    "text": "cash point hit by this URL ma GP flag",
    "start": "2493580",
    "end": "2499820"
  },
  {
    "text": "cash pointer within this the one the",
    "start": "2499820",
    "end": "2505990"
  },
  {
    "text": "ActiveX is been initialized and instantly faded then there are two calls",
    "start": "2505990",
    "end": "2517220"
  },
  {
    "text": "to check whether or not this is a valid the first place is the edge HTML CLA",
    "start": "2517220",
    "end": "2526190"
  },
  {
    "text": "site the create object security check and the second one is a URL among its",
    "start": "2526190",
    "end": "2533540"
  },
  {
    "text": "ActiveX extension allowed but both of those checks actually call the same",
    "start": "2533540",
    "end": "2539990"
  },
  {
    "text": "function to do the work that function is a seal in internet extension allowed for",
    "start": "2539990",
    "end": "2546950"
  },
  {
    "text": "URL we'll see later in the code than how this is then the second this this piece",
    "start": "2546950",
    "end": "2558230"
  },
  {
    "text": "of the check actually what it does is that it checks the 14th entry in the",
    "start": "2558230",
    "end": "2564080"
  },
  {
    "text": "feature cache to determine whether or not that internet extension is allowed",
    "start": "2564080",
    "end": "2569180"
  },
  {
    "text": "to be loaded so we know that feature",
    "start": "2569180",
    "end": "2574940"
  },
  {
    "text": "cache is managed your mom does the oil therefore the only",
    "start": "2574940",
    "end": "2580160"
  },
  {
    "text": "thing we want is to see how to manipulate those the next check is the",
    "start": "2580160",
    "end": "2588859"
  },
  {
    "text": "comm base get load library altered and search as flat so that slack also",
    "start": "2588859",
    "end": "2595910"
  },
  {
    "text": "determines whether or not the ARL loading can be successful for for the",
    "start": "2595910",
    "end": "2605980"
  },
  {
    "text": "success of our attacks we have to be able to set this particular felt slat is",
    "start": "2605980",
    "end": "2612020"
  },
  {
    "text": "something we want in this case is load with altered search path so now let's",
    "start": "2612020",
    "end": "2619460"
  },
  {
    "text": "look at the code how this works",
    "start": "2619460",
    "end": "2624400"
  },
  {
    "text": "who so the sorry the color seems to be a",
    "start": "2625060",
    "end": "2631450"
  },
  {
    "text": "little off basically this light shows",
    "start": "2631450",
    "end": "2637880"
  },
  {
    "text": "that this is the first first call that we have to bypass in order to successful",
    "start": "2637880",
    "end": "2644480"
  },
  {
    "text": "launch the server light it's marked in red and this is the second one we have",
    "start": "2644480",
    "end": "2651290"
  },
  {
    "text": "to be able to bypass and both of those as we said it points to a cause the URL",
    "start": "2651290",
    "end": "2659930"
  },
  {
    "text": "ma the co internet extension allow for URL and what it does as we can see here",
    "start": "2659930",
    "end": "2670310"
  },
  {
    "text": "is it will search for the log for his 14th century and to do the check for",
    "start": "2670310",
    "end": "2679400"
  },
  {
    "text": "this a feature this is the detail first",
    "start": "2679400",
    "end": "2689780"
  },
  {
    "text": "of all the the first portion points to that feature cache and then we compute",
    "start": "2689780",
    "end": "2696859"
  },
  {
    "text": "the entry which entry we want to test in this case is the 14th century there D in",
    "start": "2696859",
    "end": "2703190"
  },
  {
    "text": "binary and now we see what the value is for that particular cache",
    "start": "2703190",
    "end": "2711400"
  },
  {
    "start": "2711000",
    "end": "2741000"
  },
  {
    "text": "so what fear is well we know that where that feature",
    "start": "2711400",
    "end": "2718850"
  },
  {
    "text": "Cassius here's the address of it and we know is the 14th century so that piece",
    "start": "2718850",
    "end": "2725930"
  },
  {
    "text": "of memory that's marked then that's where we want to change it and then as",
    "start": "2725930",
    "end": "2732860"
  },
  {
    "text": "we can see it's a already writable so so",
    "start": "2732860",
    "end": "2743360"
  },
  {
    "start": "2741000",
    "end": "2770000"
  },
  {
    "text": "it yeah that's why that that piece of the feature that we can because of the",
    "start": "2743360",
    "end": "2751430"
  },
  {
    "text": "writable then we can change it and then",
    "start": "2751430",
    "end": "2756490"
  },
  {
    "text": "one that as I said when the DLL is loaded then we need to set the other",
    "start": "2756490",
    "end": "2762350"
  },
  {
    "text": "flag so that we can allow the successful loading of this this is the whole cost",
    "start": "2762350",
    "end": "2769700"
  },
  {
    "text": "and in this case now it comes to here we",
    "start": "2769700",
    "end": "2775130"
  },
  {
    "text": "see that DW flex is actually where the",
    "start": "2775130",
    "end": "2780170"
  },
  {
    "text": "flag is so what we need to do is one the kernel",
    "start": "2780170",
    "end": "2786760"
  },
  {
    "text": "base load library exw it's been executed",
    "start": "2786760",
    "end": "2792230"
  },
  {
    "text": "we want to impart it to the other value that we want so that this load DLL can",
    "start": "2792230",
    "end": "2800330"
  },
  {
    "text": "be successful here we know in this code",
    "start": "2800330",
    "end": "2806660"
  },
  {
    "text": "tells us where that particular flag is stored so it's a flag that's stored in",
    "start": "2806660",
    "end": "2814280"
  },
  {
    "text": "the global library within the comm based on TRL then the only thing we need to do",
    "start": "2814280",
    "end": "2821870"
  },
  {
    "text": "is to change it the default value is",
    "start": "2821870",
    "end": "2827900"
  },
  {
    "text": "zero zero means that it cannot be loaded for that particular library but then if",
    "start": "2827900",
    "end": "2834320"
  },
  {
    "text": "we changed it to eight which is a load with altered search path then we will be",
    "start": "2834320",
    "end": "2840230"
  },
  {
    "text": "able to load the Silverlight plug-in which is the MP controlled the oil so here you'll",
    "start": "2840230",
    "end": "2847670"
  },
  {
    "text": "see that we is able to change that particular flag now after we change the",
    "start": "2847670",
    "end": "2858859"
  },
  {
    "text": "flag so we bypassed all those two places we just mentioned therefore as you can see",
    "start": "2858859",
    "end": "2865010"
  },
  {
    "text": "that we can continue to load this library when this library is loaded then",
    "start": "2865010",
    "end": "2873950"
  },
  {
    "start": "2869000",
    "end": "2903000"
  },
  {
    "text": "one of the things it does is it creates the read write executable memory this is",
    "start": "2873950",
    "end": "2881780"
  },
  {
    "text": "where you can see from the bottom part that this piece of the memory is read",
    "start": "2881780",
    "end": "2889310"
  },
  {
    "text": "write our executable so in this case as long as we can figure out where this",
    "start": "2889310",
    "end": "2894500"
  },
  {
    "text": "memory is then we'll be able to write code to it and jump into it for the execution of our all our instructions",
    "start": "2894500",
    "end": "2904270"
  },
  {
    "start": "2903000",
    "end": "3020000"
  },
  {
    "text": "Microsoft kind of fixed this but it's a",
    "start": "2907760",
    "end": "2912910"
  },
  {
    "text": "generic fixed by the arbitrary code guard is not particularly fixed for the",
    "start": "2912910",
    "end": "2919400"
  },
  {
    "text": "approach we use the arbiter code guard can prevent the load or execution of",
    "start": "2919400",
    "end": "2929630"
  },
  {
    "text": "some of the libraries that's why it's a in some ways a generic fix in this case",
    "start": "2929630",
    "end": "2936730"
  },
  {
    "text": "one the arbitrary Coast Guard is our and then NP controlled out dll cannot be",
    "start": "2936730",
    "end": "2943880"
  },
  {
    "text": "loaded because is P files import table dot data section is marked marked as re",
    "start": "2943880",
    "end": "2952609"
  },
  {
    "text": "an executable only and also even if say",
    "start": "2952609",
    "end": "2959690"
  },
  {
    "text": "we can find a way to load this but we still cannot make it to generate the",
    "start": "2959690",
    "end": "2966950"
  },
  {
    "text": "read write executable memory",
    "start": "2966950",
    "end": "2970990"
  },
  {
    "text": "but since this is a rely on the arbitrary code card",
    "start": "2972079",
    "end": "2978589"
  },
  {
    "text": "ACG then what if we can disable it then the ACD will be gone and the old",
    "start": "2978589",
    "end": "2984380"
  },
  {
    "text": "technique we use will still be successful for in the build before this",
    "start": "2984380",
    "end": "2990529"
  },
  {
    "text": "build 49 86 we can do the opt-out so",
    "start": "2990529",
    "end": "2998929"
  },
  {
    "text": "that we call this kernel32 set thread information with this parameter thread",
    "start": "2998929",
    "end": "3005650"
  },
  {
    "text": "dynamic code allow equal to 1 and that will opt out this above this process",
    "start": "3005650",
    "end": "3014049"
  },
  {
    "text": "from this arbitrary code card and then everything else will remains the same so",
    "start": "3014049",
    "end": "3021420"
  },
  {
    "start": "3020000",
    "end": "3369000"
  },
  {
    "text": "let's now see it the demo of how this works in reality okay you know to save",
    "start": "3021420",
    "end": "3029619"
  },
  {
    "text": "time I show them actual video",
    "start": "3029619",
    "end": "3035189"
  },
  {
    "text": "we tackle ago how how to false the seller later the aisle to be loading",
    "start": "3137360",
    "end": "3145020"
  },
  {
    "text": "loaded in as we know the edge of local",
    "start": "3145020",
    "end": "3150930"
  },
  {
    "text": "dining anything actio eggs into hide frame",
    "start": "3150930",
    "end": "3157220"
  },
  {
    "text": "we can see there there are no so light",
    "start": "3167160",
    "end": "3173340"
  },
  {
    "text": "the arrows in this list",
    "start": "3173340",
    "end": "3176900"
  },
  {
    "text": "with this vacancy there are no",
    "start": "3195120",
    "end": "3200660"
  },
  {
    "text": "reader/writer actual memory in this list",
    "start": "3200660",
    "end": "3206450"
  },
  {
    "text": "there are no rwx memory once the",
    "start": "3212990",
    "end": "3219030"
  },
  {
    "text": "separate module loaded regard rwx memory",
    "start": "3219030",
    "end": "3224850"
  },
  {
    "text": "in right process",
    "start": "3224850",
    "end": "3228710"
  },
  {
    "text": "not attach the mindy about",
    "start": "3266060",
    "end": "3269830"
  },
  {
    "text": "okay we can see the simulated general to be allow data entry process so later the",
    "start": "3299099",
    "end": "3315719"
  },
  {
    "text": "iOS and we've got our double write",
    "start": "3315719",
    "end": "3321839"
  },
  {
    "text": "memory",
    "start": "3321839",
    "end": "3324109"
  },
  {
    "text": "clear vacancy exclusion ready to write memory in agile process after then we",
    "start": "3342060",
    "end": "3351910"
  },
  {
    "text": "can call the shell coder to hear and the control can control everything of our",
    "start": "3351910",
    "end": "3358600"
  },
  {
    "text": "target machine okay thanks eternally so",
    "start": "3358600",
    "end": "3372190"
  },
  {
    "text": "now we see that in action we were able to use that they'd only attack to change some of the memory locations for the",
    "start": "3372190",
    "end": "3380410"
  },
  {
    "text": "data portion and then that allows us to do the things that we want in the normal",
    "start": "3380410",
    "end": "3386470"
  },
  {
    "text": "way we didn't really change the control flow by forcing it to go different",
    "start": "3386470",
    "end": "3391930"
  },
  {
    "text": "routes we only change the data so that the execution is still in the normal",
    "start": "3391930",
    "end": "3399760"
  },
  {
    "text": "executed in the normal fashion we know",
    "start": "3399760",
    "end": "3405640"
  },
  {
    "text": "that this is a technique that can be very powerful and then but then what are",
    "start": "3405640",
    "end": "3413560"
  },
  {
    "text": "the suggestions for prevention the most important thing is never let the",
    "start": "3413560",
    "end": "3420760"
  },
  {
    "text": "critical data and protect it as you guys can see some of those data are in the",
    "start": "3420760",
    "end": "3427000"
  },
  {
    "text": "readwrite memory right and some of those are in the writable only but we were",
    "start": "3427000",
    "end": "3432460"
  },
  {
    "text": "able to change the memory property so that we can change the data that we want",
    "start": "3432460",
    "end": "3439240"
  },
  {
    "text": "to many manipulate for any critical data",
    "start": "3439240",
    "end": "3445180"
  },
  {
    "text": "or the page that we want we want to have it the right protection to it so that's",
    "start": "3445180",
    "end": "3453490"
  },
  {
    "text": "one of the most important things only when that data needs to be changed then you unlock it and then after the change",
    "start": "3453490",
    "end": "3461100"
  },
  {
    "text": "immediately lock it again so that will greatly reduce the possibility for",
    "start": "3461100",
    "end": "3467890"
  },
  {
    "text": "attacks but still because there's a gap between the last right to",
    "start": "3467890",
    "end": "3474060"
  },
  {
    "text": "with the lock of the data that's why it",
    "start": "3474060",
    "end": "3480720"
  },
  {
    "text": "still we still need to be very careful in some of the cases where the lock is",
    "start": "3480720",
    "end": "3490830"
  },
  {
    "text": "not feasible because for example if the page is constantly being used then what we have to do is we want to encrypt that",
    "start": "3490830",
    "end": "3500550"
  },
  {
    "text": "piece of the data and then keep the address in a much safer place for example you put it in the kernel in some",
    "start": "3500550",
    "end": "3510510"
  },
  {
    "text": "way and also for the critical critical data that we use for where it is that we",
    "start": "3510510",
    "end": "3518010"
  },
  {
    "text": "want it to be dynamic so that is LR can be used for that purpose if we want to",
    "start": "3518010",
    "end": "3528480"
  },
  {
    "text": "encrypt that data obviously the key for the encryption is a very critical and also the encryption algorithm can be",
    "start": "3528480",
    "end": "3535620"
  },
  {
    "text": "very critical to another thing that is very important is in the program that",
    "start": "3535620",
    "end": "3543030"
  },
  {
    "text": "this is more of the operating system then always check the integrity of the",
    "start": "3543030",
    "end": "3548340"
  },
  {
    "text": "critical data if either by opposite system or by the program so that you",
    "start": "3548340",
    "end": "3555090"
  },
  {
    "text": "make sure that the critical data is not tampered with by doing that then we are",
    "start": "3555090",
    "end": "3561870"
  },
  {
    "text": "able to prevent a lot of the attacks from being successful in early stage so",
    "start": "3561870",
    "end": "3570090"
  },
  {
    "text": "the main takeaways for our talk is that with a lot of the enforcement for CFI",
    "start": "3570090",
    "end": "3577620"
  },
  {
    "text": "solution then the out of context approach will become less effective and",
    "start": "3577620",
    "end": "3584550"
  },
  {
    "text": "then therefore there are still a lot of",
    "start": "3584550",
    "end": "3589740"
  },
  {
    "text": "the data in the operating system than are unprotected that can be used to",
    "start": "3589740",
    "end": "3596220"
  },
  {
    "text": "launch attacks in this case is the use of launch the data only attacks we data",
    "start": "3596220",
    "end": "3603000"
  },
  {
    "text": "only attacks didn't really change a force the change of the execution flow but it uses different",
    "start": "3603000",
    "end": "3611270"
  },
  {
    "text": "data to allow the execution goes the way that we want it to go even if the attack",
    "start": "3611270",
    "end": "3621830"
  },
  {
    "text": "is well known and probably aware by a lot of people but it's still difficult to prevent that especially in some cases",
    "start": "3621830",
    "end": "3629990"
  },
  {
    "text": "say some of the data and data structure being used it can be very normal",
    "start": "3629990",
    "end": "3637700"
  },
  {
    "text": "there's no way for us to distinguish which is the normal data which is not that normal ADA example if you attack",
    "start": "3637700",
    "end": "3645980"
  },
  {
    "text": "rely on certain number of array entries now whatever the re-entry been put there",
    "start": "3645980",
    "end": "3652850"
  },
  {
    "text": "can be manipulated by the attacker or can be money are put in there by the",
    "start": "3652850",
    "end": "3658580"
  },
  {
    "text": "average system so there's no way for it to distinguish and then for the data we",
    "start": "3658580",
    "end": "3672320"
  },
  {
    "text": "want it to be I save as we can sometimes we will want it to be in the kernel but",
    "start": "3672320",
    "end": "3677750"
  },
  {
    "text": "even if cannot be then as we said we want different coatings different",
    "start": "3677750",
    "end": "3683690"
  },
  {
    "text": "protection mechanism say encryption to protect those data only attack the one",
    "start": "3683690",
    "end": "3692720"
  },
  {
    "text": "we show here and also the examples are being given it's mostly you write",
    "start": "3692720",
    "end": "3698060"
  },
  {
    "text": "certain memory to change the property of the data but then there are some other",
    "start": "3698060",
    "end": "3703490"
  },
  {
    "text": "variations we will in our next talk will",
    "start": "3703490",
    "end": "3708850"
  },
  {
    "text": "see how this can be done through the risk condition so that we're able to",
    "start": "3708850",
    "end": "3714500"
  },
  {
    "text": "change the behavior of the locks",
    "start": "3714500",
    "end": "3718330"
  },
  {
    "text": "so that pretty much concludes our work the talk those are the contact",
    "start": "3721380",
    "end": "3727559"
  },
  {
    "text": "informations we would like to send the nsrc for those web sites and",
    "start": "3727559",
    "end": "3733950"
  },
  {
    "text": "collaboration with us and also we would like to send our team members from the",
    "start": "3733950",
    "end": "3739829"
  },
  {
    "text": "McAfee IPS vulnerability research team especially - now those are the",
    "start": "3739829",
    "end": "3746910"
  },
  {
    "text": "references for the things that you guys can take a look so that's pretty much",
    "start": "3746910",
    "end": "3753450"
  },
  {
    "text": "for the talk and we're open to questions",
    "start": "3753450",
    "end": "3758568"
  },
  {
    "text": "ok no ok then thank you everyone [Applause]",
    "start": "3764809",
    "end": "3772500"
  }
]