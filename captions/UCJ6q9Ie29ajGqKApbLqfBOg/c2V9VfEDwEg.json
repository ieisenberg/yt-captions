[
  {
    "start": "0",
    "end": "48000"
  },
  {
    "text": "hello and welcome everyone to today's talk about Collide and power the evolution of software based",
    "start": "2560",
    "end": "7880"
  },
  {
    "text": "power so who am I I'm Andreas kler I'm a PhD candidate at the Gratz University of",
    "start": "7880",
    "end": "13719"
  },
  {
    "text": "Technology so I'm more one of academic heads we would say in the past I was",
    "start": "13719",
    "end": "19400"
  },
  {
    "text": "involved in a lot of research related around these topics so my main focus is software based power channels as you",
    "start": "19400",
    "end": "26199"
  },
  {
    "text": "might have figured out since you're here in the talk and also focus a lot about software based fault attacks to see how",
    "start": "26199",
    "end": "32360"
  },
  {
    "text": "the hardware can do wrong computations when we do weird things to it and I'm",
    "start": "32360",
    "end": "38200"
  },
  {
    "text": "also a lot of involved in the research and trusted execution environments so you might seen some of these works I was",
    "start": "38200",
    "end": "45120"
  },
  {
    "text": "part of in the past so why are we here today A short bit of",
    "start": "45120",
    "end": "52320"
  },
  {
    "start": "48000",
    "end": "172000"
  },
  {
    "text": "motivation so in the recent years we have seen a lot of software based power side channels on the horizon for",
    "start": "57559",
    "end": "64119"
  },
  {
    "text": "instance we have seen the platipus attack but also recently we have seen the heart split attack these are",
    "start": "64119",
    "end": "71119"
  },
  {
    "text": "so-called software based power set channels and they have some things in common first of all they usually Target",
    "start": "71119",
    "end": "78240"
  },
  {
    "text": "specific algorithms with terch more precisely usually they focus a lot on",
    "start": "78240",
    "end": "84520"
  },
  {
    "text": "edge cases of these algorithms and they are usually",
    "start": "84520",
    "end": "91400"
  },
  {
    "text": "instances of what we call a side channel so they are not generic teexs they are just instances of such side channels on",
    "start": "91400",
    "end": "99680"
  },
  {
    "text": "the other hand we have also seen a lot of transient execution attacks for instance meltdown or microarchitectural",
    "start": "99680",
    "end": "106479"
  },
  {
    "text": "data sampling contrary to the software based power set channels these attacks",
    "start": "106479",
    "end": "111520"
  },
  {
    "text": "are more generic they target specific CPU components and they don't care that",
    "start": "111520",
    "end": "117759"
  },
  {
    "text": "much about the algorithm that uses the component so for instance these attacks",
    "start": "117759",
    "end": "126320"
  },
  {
    "text": "can leak arbitrary data from these components as long as the data travels",
    "start": "126320",
    "end": "132360"
  },
  {
    "text": "over such a component in the process and more precisely these attacks are",
    "start": "132360",
    "end": "137720"
  },
  {
    "text": "agnostic to a side Channel this means the attack does not care what side Channel you use in order to leak the",
    "start": "137720",
    "end": "144280"
  },
  {
    "text": "secret you can use any side Channel and if you find something more efficient in the future you can just replace it and",
    "start": "144280",
    "end": "152120"
  },
  {
    "text": "in today's talk we want to find the transition from the left hand side to the right hand side of this attack",
    "start": "152120",
    "end": "158440"
  },
  {
    "text": "landscape and we do this with colliding power and I hope I can convince you at",
    "start": "158440",
    "end": "163640"
  },
  {
    "text": "the end of the talk that we and my colleagues think that Collide and power is a bit of a game changer in the",
    "start": "163640",
    "end": "169440"
  },
  {
    "text": "software based power domain so I brought a resear question with me and this is",
    "start": "169440",
    "end": "175480"
  },
  {
    "start": "172000",
    "end": "239000"
  },
  {
    "text": "the goal to answer in today's talk so can we build a generic power set",
    "start": "175480",
    "end": "180519"
  },
  {
    "text": "channnel measurement technique that is independent of the targeted application and in order to do so I've",
    "start": "180519",
    "end": "187200"
  },
  {
    "text": "prepared a road map for you so we will first start off on the top left corner with some traditional power Channel",
    "start": "187200",
    "end": "194400"
  },
  {
    "text": "measurements then we will transition to the so-called software based power Channel domain with the platus attack",
    "start": "194400",
    "end": "201200"
  },
  {
    "text": "then we will discuss how platus was fixed but unfortunately hards spit found a new way to exploit power-based s",
    "start": "201200",
    "end": "209000"
  },
  {
    "text": "leakage then we will show you a bit what the current state-of-the-art of such leakage exploitation looks like and",
    "start": "209000",
    "end": "216040"
  },
  {
    "text": "we'll focus a lot on gpus today however in the end we will then slowly transition to collide and power",
    "start": "216040",
    "end": "223080"
  },
  {
    "text": "and precisely at the end talk also about how we could mitigate such effects in",
    "start": "223080",
    "end": "228519"
  },
  {
    "text": "the hardware to make our CPUs secure for the future so let's get first on the",
    "start": "228519",
    "end": "233560"
  },
  {
    "text": "same page what is actually power leakage and where does it come from so to start",
    "start": "233560",
    "end": "239040"
  },
  {
    "start": "239000",
    "end": "372000"
  },
  {
    "text": "off we we have to look at our technology most of the things we own which are electronic are built using seos",
    "start": "239040",
    "end": "246519"
  },
  {
    "text": "transistors these are nearly everywhere since they have one big Advantage they actually have a super low or quite low",
    "start": "246519",
    "end": "253720"
  },
  {
    "text": "power consumption and this is achieved due to the fact that they only draw Power when they exploit switching",
    "start": "253720",
    "end": "261600"
  },
  {
    "text": "behavior however this is also the root case cause of our",
    "start": "261600",
    "end": "267360"
  },
  {
    "text": "problem since this power consumption during",
    "start": "268720",
    "end": "275320"
  },
  {
    "text": "switching now depends on two things the first thing is the actual instruction",
    "start": "275320",
    "end": "280759"
  },
  {
    "text": "executed different instructions use different transistors in a CPU that",
    "start": "280759",
    "end": "286039"
  },
  {
    "text": "means that if you execute these different instructions the switching behavior of these transistors is different and therefore also the power",
    "start": "286039",
    "end": "293800"
  },
  {
    "text": "consumption furthermore it also depends on the data operant on which is on which",
    "start": "293800",
    "end": "299320"
  },
  {
    "text": "the ruction does computations on also here the switching Behavior changes if",
    "start": "299320",
    "end": "304880"
  },
  {
    "text": "the data oper change let's now move to the traditional power set channels here we can see why",
    "start": "304880",
    "end": "312360"
  },
  {
    "text": "this logo is quite important since a traditional power interface measure traditional power side Channel",
    "start": "312360",
    "end": "317639"
  },
  {
    "text": "measurements look something like this we see on the top left bottom left corner our device on a tech which is usually",
    "start": "317639",
    "end": "324639"
  },
  {
    "text": "microcontroller and this microcontroller is powered by some battery in our case",
    "start": "324639",
    "end": "330080"
  },
  {
    "text": "the other components in the picture are all under attacker's control so the techer can basically buy an expensive",
    "start": "330080",
    "end": "337080"
  },
  {
    "text": "osilloscope and hook it up to the power supply of the microcontroller also quite",
    "start": "337080",
    "end": "342280"
  },
  {
    "text": "important here is that this oscilloscope is also connected to let's call it the",
    "start": "342280",
    "end": "347360"
  },
  {
    "text": "control Hub laptop which controls the measurements but also interacts with the",
    "start": "347360",
    "end": "353039"
  },
  {
    "text": "device on the tech usually these devices have some defined protocols which you",
    "start": "353039",
    "end": "358880"
  },
  {
    "text": "can trigger and therefore the device does some computations for instance with",
    "start": "358880",
    "end": "363960"
  },
  {
    "text": "a secret so we see already this is quite a bulky setup we used back then so how can",
    "start": "363960",
    "end": "372280"
  },
  {
    "start": "372000",
    "end": "389000"
  },
  {
    "text": "we measure actually the power consumption of a modern CPU where should we block the oscope and how would we",
    "start": "372280",
    "end": "378360"
  },
  {
    "text": "ever do this remotely we can't just expect someone to could you please attach this to the server",
    "start": "378360",
    "end": "384960"
  },
  {
    "text": "somewhere and unfortunately it's quite simple we do this",
    "start": "384960",
    "end": "390280"
  },
  {
    "start": "389000",
    "end": "754000"
  },
  {
    "text": "we just read a file on our Linux file system and we get back basically the",
    "start": "390280",
    "end": "395560"
  },
  {
    "text": "energy consumption of the device and this brings us to the",
    "start": "395560",
    "end": "400800"
  },
  {
    "text": "Platypus attack this was discovered by lipidol I'm also part of this paper and",
    "start": "400800",
    "end": "407039"
  },
  {
    "text": "there we exploit this transition from this py measurement equipment to this",
    "start": "407039",
    "end": "412560"
  },
  {
    "text": "quite simple just read a file and get the Energy Measurement thread mod yeah",
    "start": "412560",
    "end": "418960"
  },
  {
    "text": "and this interface we showed you is actually called Running average power limit and it's the big the biggest",
    "start": "418960",
    "end": "426160"
  },
  {
    "text": "problem here is this was was back then a completely unprivileged interface this means that you don't need",
    "start": "426160",
    "end": "433759"
  },
  {
    "text": "any access rights in order to reach from it furthermore the whole story is about",
    "start": "433759",
    "end": "438840"
  },
  {
    "text": "you no longer need to actually be in the same place as the computer you can just as a ag into a server hundreds of miles",
    "start": "438840",
    "end": "445840"
  },
  {
    "text": "away and suddenly read the energy consumption of This Server PL platform however one big drawback is the low",
    "start": "445840",
    "end": "453039"
  },
  {
    "text": "refresh rate so let's compare compare the external measurement equipment with",
    "start": "453039",
    "end": "458440"
  },
  {
    "text": "this new measurement with this new interface which we used in platipus so",
    "start": "458440",
    "end": "463720"
  },
  {
    "text": "on the left hand side we have full control of the measurement equipment we can build oscilloscopes which are far",
    "start": "463720",
    "end": "469800"
  },
  {
    "text": "more expensive than the actual CPU also this results in a super high timing",
    "start": "469800",
    "end": "475960"
  },
  {
    "text": "resolution since we have basically a CPU or equipment that has a lot of",
    "start": "475960",
    "end": "481599"
  },
  {
    "text": "performance behind it and this results indirectly in one big factor is that we",
    "start": "481599",
    "end": "487159"
  },
  {
    "text": "can Now sample with a super good resolution this means that we get multiple samples per single instruction",
    "start": "487159",
    "end": "495400"
  },
  {
    "text": "executed on the right hand side we have no control over the measurement interface it's just a register of the",
    "start": "495400",
    "end": "502879"
  },
  {
    "text": "CPU we cannot say that to CPU that this should be more accurate and it's also infeasible to do so this interface is",
    "start": "502879",
    "end": "510039"
  },
  {
    "text": "present in all the modern CPUs you can just put thousands of dollars into measurement equipment for a single",
    "start": "510039",
    "end": "517240"
  },
  {
    "text": "CPU this results in a low timing resolution and indirectly also in the inverse of the right left side is that",
    "start": "517240",
    "end": "524120"
  },
  {
    "text": "we now get a single sample for multiple instructions so we can no longer like",
    "start": "524120",
    "end": "529200"
  },
  {
    "text": "accurately measure a single instruction we usually measure a lot of instructions at",
    "start": "529200",
    "end": "535279"
  },
  {
    "text": "once if you now remember back in the beginning I showed you the transistors",
    "start": "535279",
    "end": "541120"
  },
  {
    "text": "and these switching behavior of the transistors was exposed due to two things the instructions that are",
    "start": "541120",
    "end": "546720"
  },
  {
    "text": "executed and the data operant which is computed on so with this new interface",
    "start": "546720",
    "end": "552480"
  },
  {
    "text": "can we do this basic attacks of based on the seos technology yes we can if we",
    "start": "552480",
    "end": "558839"
  },
  {
    "text": "repeat an instruction long enough to overcome the limitations of the sample rate we can suddenly distinguish the",
    "start": "558839",
    "end": "565040"
  },
  {
    "text": "executed instructions based on the energy signatures this is already quite huge",
    "start": "565040",
    "end": "570760"
  },
  {
    "text": "since you can distinguish what some oper some programs are doing under certain",
    "start": "570760",
    "end": "575800"
  },
  {
    "text": "threat models and therefore infer for instance control flow on the other side we can also now",
    "start": "575800",
    "end": "583680"
  },
  {
    "text": "differentiate operant um differentiate operant which are used in certain instructions",
    "start": "583680",
    "end": "590760"
  },
  {
    "text": "remember data also triggers different behavior in the transistors and therefore we can also see different",
    "start": "590760",
    "end": "597720"
  },
  {
    "text": "amounts of energy consumption depending on the operant with which is computed on",
    "start": "597720",
    "end": "603519"
  },
  {
    "text": "but these are more high level experiments can we do something more secur security relevant with the",
    "start": "603519",
    "end": "610079"
  },
  {
    "text": "interface and yes we can back then we built a Kel address space layout randomization break and what does this",
    "start": "610079",
    "end": "617480"
  },
  {
    "text": "actually do so first of all kslr is responsible for moving your operating",
    "start": "617480",
    "end": "623120"
  },
  {
    "text": "system at a random position in your address space you can imagine it like in",
    "start": "623120",
    "end": "628160"
  },
  {
    "text": "a drawing that you have have um different am different slots in your operating system and then you have to",
    "start": "628160",
    "end": "635600"
  },
  {
    "text": "place the operating system during boot in one of them the reason this is there is to make some sort um some traditional",
    "start": "635600",
    "end": "644279"
  },
  {
    "text": "memory corruption bugs harder to exploit because you now have different addresses and you can no longer directly predict",
    "start": "644279",
    "end": "650600"
  },
  {
    "text": "this however with the Platypus interface we can do nothing a bit more tricky we",
    "start": "650600",
    "end": "656480"
  },
  {
    "text": "can first just try to access one of these slots repeatedly what the CPU does in",
    "start": "656480",
    "end": "663320"
  },
  {
    "text": "the background is it tries to see if behind the slot in memory is something",
    "start": "663320",
    "end": "668519"
  },
  {
    "text": "mapped and in order to do so the CPU has to translate this virtual address space",
    "start": "668519",
    "end": "673760"
  },
  {
    "text": "to an actually physical address in memory however on Intel CPUs at least",
    "start": "673760",
    "end": "679320"
  },
  {
    "text": "you cannot cach invalid translations this means if I do now repeated accesses to the same slot the",
    "start": "679320",
    "end": "687600"
  },
  {
    "text": "CPU always has to do the same thing however if we at one point hit the slot",
    "start": "687600",
    "end": "693839"
  },
  {
    "text": "where the operating system is located the first interaction with this slot will be valid and the translation is",
    "start": "693839",
    "end": "701519"
  },
  {
    "text": "cached so successive accesses to the same translation will be just served from the cache and this saves a lot of",
    "start": "701519",
    "end": "708120"
  },
  {
    "text": "energy which we can see in this blot and if we take a look at the at the",
    "start": "708120",
    "end": "715200"
  },
  {
    "text": "demo this looks something like this on the left hand side we see the sweep of over the dress space and we see on the",
    "start": "715200",
    "end": "721279"
  },
  {
    "text": "first quarter that there's usually the dip where the kernel is resided on the right hand side we also see the",
    "start": "721279",
    "end": "727920"
  },
  {
    "text": "addresses um which the cas La break identified and it actually matching the",
    "start": "727920",
    "end": "733240"
  },
  {
    "text": "kernel where it's located so this is already a quite",
    "start": "733240",
    "end": "739680"
  },
  {
    "text": "simple okay so this is already a quite simple and fast way to Dand your colel",
    "start": "743959",
    "end": "749959"
  },
  {
    "text": "address just by using energy so as I showed you in the",
    "start": "749959",
    "end": "755560"
  },
  {
    "text": "beginning this is the way we have access to the interface so what was the obvious",
    "start": "755560",
    "end": "761040"
  },
  {
    "text": "fix that was deployed by all the vendors and Linux it's basically yeah make it",
    "start": "761040",
    "end": "766240"
  },
  {
    "text": "privileged so now this interface is no longer accessible from unprivileged user",
    "start": "766240",
    "end": "772120"
  },
  {
    "text": "space programs so think of it if you have pseudo rights on the system you",
    "start": "772120",
    "end": "777240"
  },
  {
    "text": "could directly Target basically a program by its own and this is now on the same level as as super user",
    "start": "777240",
    "end": "784000"
  },
  {
    "text": "interface for the power so we are now by the end right unfortunately not this is",
    "start": "784000",
    "end": "792440"
  },
  {
    "start": "786000",
    "end": "1190000"
  },
  {
    "text": "the reason because of the heart spit effect and heart spit was discovered by Wang all and Leo as Leo all also showed",
    "start": "792440",
    "end": "799959"
  },
  {
    "text": "a similar effect with a different name Al yeah and let's try to understand what",
    "start": "799959",
    "end": "806959"
  },
  {
    "text": "the heart spit effect or attack is is about cus today are quite complex they",
    "start": "806959",
    "end": "814160"
  },
  {
    "text": "perform a lot of different variants of power management in order to fill a certain power limit since a CPU cannot",
    "start": "814160",
    "end": "821839"
  },
  {
    "text": "just consume infinite amount of power it's getting hotter and hotter so there are limits in place that limit the power",
    "start": "821839",
    "end": "829920"
  },
  {
    "text": "consumption in order to reach or like to match the power limit the CPU has a lot",
    "start": "829920",
    "end": "835880"
  },
  {
    "text": "of ways to reduce the power consumption for instance the CPU could shut down",
    "start": "835880",
    "end": "841720"
  },
  {
    "text": "specific resources furthermore a CPU could also reduce the operating voltage and finally",
    "start": "841720",
    "end": "848440"
  },
  {
    "text": "in order to meet the power requirements the CPUs also dynamically adjusts the",
    "start": "848440",
    "end": "853519"
  },
  {
    "text": "operating frequency and the last part is the problematic one Imaging two",
    "start": "853519",
    "end": "859360"
  },
  {
    "text": "different workloads we have on the left hand side one with a high energy consumption on the right hand side we",
    "start": "859360",
    "end": "865279"
  },
  {
    "text": "have one with a low energy consumption and what happens now is that",
    "start": "865279",
    "end": "870519"
  },
  {
    "text": "the left workload will reach the power limit at some point since it uses a lot",
    "start": "870519",
    "end": "876600"
  },
  {
    "text": "of energy during the computations it will reach the power limit however the",
    "start": "876600",
    "end": "881920"
  },
  {
    "text": "workload on the right hand side might never reach the power limit since it uses way less energy than the other",
    "start": "881920",
    "end": "888680"
  },
  {
    "text": "workload on the left hand side we then see that in order to meet the power limit the CPU has to do something",
    "start": "888680",
    "end": "895279"
  },
  {
    "text": "proactively and what it does is it reduces the operating frequency on the right hand side nothing happens",
    "start": "895279",
    "end": "902920"
  },
  {
    "text": "and this results then in a basic head speed effect for instance on the left hand side the high energy workload will",
    "start": "902920",
    "end": "910000"
  },
  {
    "text": "be slowed down due to the frequency throttling due to the bow limit on the right hand side there is no slowdown of",
    "start": "910000",
    "end": "917120"
  },
  {
    "text": "the workload we can visualize this a bit more without any limits we would see usually an energy difference for",
    "start": "917120",
    "end": "923959"
  },
  {
    "text": "instance based on operant however since they are executing the same instructions and the instructions takes the same",
    "start": "923959",
    "end": "930240"
  },
  {
    "text": "amount of time there is no timing difference between those two cases however if we now enforce the power",
    "start": "930240",
    "end": "936680"
  },
  {
    "text": "limit we force the energy to be the same but this results in a timing",
    "start": "936680",
    "end": "942319"
  },
  {
    "text": "difference and time is usually much easier to measure and way more unrestricted or accessible from",
    "start": "942319",
    "end": "949079"
  },
  {
    "text": "unprivileged contexts as power is as power energy so in the end power and",
    "start": "949079",
    "end": "954920"
  },
  {
    "text": "time are just actually quite similar on Modern CPUs since there is so many",
    "start": "954920",
    "end": "960319"
  },
  {
    "text": "complex mechanisms involved let's talk a bit what we can do",
    "start": "960319",
    "end": "965600"
  },
  {
    "text": "with this or what is basically the state of the art to exploit heart speed style attacks and we talk about two um",
    "start": "965600",
    "end": "973959"
  },
  {
    "text": "distinct attacks one again is from wadal and the other one is from tan doll and",
    "start": "973959",
    "end": "980079"
  },
  {
    "text": "they both focus on GPU throttling they two are distinct because they focus on different types of gpus",
    "start": "980079",
    "end": "988120"
  },
  {
    "text": "the first one for focuses on integrated gpus and there is an interesting fact",
    "start": "988120",
    "end": "993959"
  },
  {
    "text": "that integrated gpus have to share the same power constraints as the CPU on the",
    "start": "993959",
    "end": "1001040"
  },
  {
    "text": "same sock this means in the end that if my workload on the CPU is throttling this",
    "start": "1001040",
    "end": "1007920"
  },
  {
    "text": "means that the GPU has to consume a lot of energy currently and therefore I can",
    "start": "1007920",
    "end": "1013199"
  },
  {
    "text": "mount the hard spit effect from the CPU core towards the integrated GPU",
    "start": "1013199",
    "end": "1020000"
  },
  {
    "text": "on the other side we have dedicated gpus these super large devices they of course",
    "start": "1020000",
    "end": "1025038"
  },
  {
    "text": "have also some power constraints they are the same technology they cannot draw unlimited amount of current so they have",
    "start": "1025039",
    "end": "1031160"
  },
  {
    "text": "to limit their power consumption this means that if I can",
    "start": "1031160",
    "end": "1036360"
  },
  {
    "text": "schedule a GPU workload also on the same GPU and my workload is slowed down this",
    "start": "1036360",
    "end": "1042319"
  },
  {
    "text": "means that other workloads on the same GPU currently consume more power than",
    "start": "1042319",
    "end": "1047959"
  },
  {
    "text": "than usual so what can we build with this first of all we have to think about",
    "start": "1047959",
    "end": "1053320"
  },
  {
    "text": "what secrets are usually on a GPU usually you don't have as keys on a",
    "start": "1053320",
    "end": "1058799"
  },
  {
    "text": "GPU so what we can do now is we can build a so-called pixel stealing attack",
    "start": "1058799",
    "end": "1064720"
  },
  {
    "text": "and this is the background since the GPU is responsible for processing and",
    "start": "1064720",
    "end": "1069880"
  },
  {
    "text": "rendering our screen or for instance in a browser different windows and if you",
    "start": "1069880",
    "end": "1075520"
  },
  {
    "text": "think about your screen context it's usually some images or text so this is",
    "start": "1075520",
    "end": "1080720"
  },
  {
    "text": "highly privacy related data and the data is encoded basically",
    "start": "1080720",
    "end": "1086799"
  },
  {
    "text": "in the pixels of the screen and what pixel stealing is now",
    "start": "1086799",
    "end": "1092200"
  },
  {
    "text": "doing is basically it proposes the following thread model we assume we can",
    "start": "1092200",
    "end": "1097960"
  },
  {
    "text": "define a postprocessing algorithm for our image however we will never see the",
    "start": "1097960",
    "end": "1104400"
  },
  {
    "text": "actual values of the pixel but for instance we can say I want to blur a big the the image or I want to scale it up",
    "start": "1104400",
    "end": "1111480"
  },
  {
    "text": "these are just operations which should not leak the values of the pixel but if you think back we have now A Defined um",
    "start": "1111480",
    "end": "1119559"
  },
  {
    "text": "algorithm like a blur filter and now we have the pixelist input this is the",
    "start": "1119559",
    "end": "1124919"
  },
  {
    "text": "except frame threat model as we had in the beginning where we said that we have a data operant which we want to",
    "start": "1124919",
    "end": "1131600"
  },
  {
    "text": "leak and what now happens is that due to the thermal and the power management of",
    "start": "1131600",
    "end": "1137720"
  },
  {
    "text": "a GPU we see a distinguisher difference based on the pixel's value for instance",
    "start": "1137720",
    "end": "1144480"
  },
  {
    "text": "if we have a bright pixel the CPU or the algorithm used will consume less energy",
    "start": "1144480",
    "end": "1150400"
  },
  {
    "text": "in comparison when we have a darker pixel and what an attacker cannot do is just Define this postprocessing",
    "start": "1150400",
    "end": "1156840"
  },
  {
    "text": "framework or this post processing algorithm for the image and then measure the time how long it takes to execute",
    "start": "1156840",
    "end": "1163799"
  },
  {
    "text": "and therefore infer the value of the pixel so this is currently the best or",
    "start": "1163799",
    "end": "1171440"
  },
  {
    "text": "fastest attack for um stealing um data from from a scream for",
    "start": "1171440",
    "end": "1177280"
  },
  {
    "text": "instance but we are still in the domain of Highly specific attacks these are",
    "start": "1177280",
    "end": "1182559"
  },
  {
    "text": "still more on the side of s attacks which Target specific applications like Image postprocessing Screen rendering",
    "start": "1182559",
    "end": "1190320"
  },
  {
    "start": "1190000",
    "end": "1541000"
  },
  {
    "text": "can we transform them to move towards the more broader generic field of for",
    "start": "1190320",
    "end": "1196080"
  },
  {
    "text": "instance Transit execution attacks and this brings us to collide and power this",
    "start": "1196080",
    "end": "1201400"
  },
  {
    "text": "paper was written by me and my colleagues and Collide and power we try to build this generic algorithm or",
    "start": "1201400",
    "end": "1208320"
  },
  {
    "text": "measurement technique which can be used with any side Channel out there which is related to",
    "start": "1208320",
    "end": "1213840"
  },
  {
    "text": "power so what do we do in Collide and power we target the memory subsystem and",
    "start": "1213840",
    "end": "1219640"
  },
  {
    "text": "here on the slide you see the most crucial component I would say in the memory subsystem the caches and caches",
    "start": "1219640",
    "end": "1227120"
  },
  {
    "text": "are usually organized in number of sets and each set has a specific number of ways so you can draw them as a two two",
    "start": "1227120",
    "end": "1234120"
  },
  {
    "text": "dimensional thing and what we now did in the paper was basically we defined an",
    "start": "1234120",
    "end": "1239480"
  },
  {
    "text": "attacker controlled value so real value like a number and we want to Target the",
    "start": "1239480",
    "end": "1245080"
  },
  {
    "text": "value of a victim so what can we do now the techer could for instance fill one complete",
    "start": "1245080",
    "end": "1252159"
  },
  {
    "text": "cach set with its data this is nothing special it's just like accessing your",
    "start": "1252159",
    "end": "1257679"
  },
  {
    "text": "data and bringing unit to cach something normal programs do every day and now the",
    "start": "1257679",
    "end": "1263039"
  },
  {
    "text": "attacker can either force or just by pure chance wait for the victim to override its own value with the victim",
    "start": "1263039",
    "end": "1271960"
  },
  {
    "text": "value but what happens next in order to understand this we have to go back a bit",
    "start": "1271960",
    "end": "1278080"
  },
  {
    "text": "to power leakage models remember in the beginning I talked a lot about switching",
    "start": "1278080",
    "end": "1283320"
  },
  {
    "text": "behaviors of transistors this is quite abstract we have no idea how to model this Reliant I can't say this transistor",
    "start": "1283320",
    "end": "1291000"
  },
  {
    "text": "switching weew something more abstract in order to model this on a highly complex system like a model Intel CP and",
    "start": "1291000",
    "end": "1297679"
  },
  {
    "text": "therefore these power models were used in the past for instance we have the hemming weight model this is a single",
    "start": "1297679",
    "end": "1304080"
  },
  {
    "text": "parameter function that takes one input word and basically Returns the number of",
    "start": "1304080",
    "end": "1309480"
  },
  {
    "text": "bits set in this word for instance if we have the hemming weight of three it's",
    "start": "1309480",
    "end": "1314720"
  },
  {
    "text": "here represent in binary we see that there are actually two bits set so the hemming weight of three is actually two",
    "start": "1314720",
    "end": "1321799"
  },
  {
    "text": "on the other hand side we have the hemming distance model this is now a two parameter function and takes two words",
    "start": "1321799",
    "end": "1328400"
  },
  {
    "text": "as input and it gives back the number of bits which needs to change in order for",
    "start": "1328400",
    "end": "1334080"
  },
  {
    "text": "a transition from the one value to the other this means that if I want to know",
    "start": "1334080",
    "end": "1339520"
  },
  {
    "text": "the hemming distance between three and one I actually have to flip just one bit to transition to the other",
    "start": "1339520",
    "end": "1347520"
  },
  {
    "text": "value",
    "start": "1347520",
    "end": "1350520"
  },
  {
    "text": "okay so going back to our example with the cache what happens now if the victim overrides the data of the attacker",
    "start": "1353039",
    "end": "1360679"
  },
  {
    "text": "exactly what we have seen before the hemming distance model comes into play this means that if you have to change",
    "start": "1360679",
    "end": "1368159"
  },
  {
    "text": "more bits in the transition from one value to the another you will consume more energy since more bits have to be",
    "start": "1368159",
    "end": "1376000"
  },
  {
    "text": "changed in a physical component and if you have to flip less bits in order to",
    "start": "1376000",
    "end": "1381200"
  },
  {
    "text": "transition from one word to the another you consume less energy in that",
    "start": "1381200",
    "end": "1386279"
  },
  {
    "text": "component and you might now be wondering how do we exploit this this is now a",
    "start": "1386279",
    "end": "1391760"
  },
  {
    "text": "function that is highly compressing and just gives insed distance it does not leak directly the value it's just",
    "start": "1391760",
    "end": "1398240"
  },
  {
    "text": "relating to the distance between two things and here we can now basically build a model of the cpu's energy",
    "start": "1398240",
    "end": "1404600"
  },
  {
    "text": "consumption and remember we are now in the CPU cache this is a shared component",
    "start": "1404600",
    "end": "1409919"
  },
  {
    "text": "and the attacker can arbitrarily change their own data so what an attacker canot",
    "start": "1409919",
    "end": "1416360"
  },
  {
    "text": "do is basically we now use this simplified model of the cache we can now change our own data to get some more",
    "start": "1416360",
    "end": "1424559"
  },
  {
    "text": "information about the victim value and again we have here the model and we have our signal and let's take a concrete",
    "start": "1424559",
    "end": "1430279"
  },
  {
    "text": "example for this for instance we fixed the victim value which we want to leak or for instance some secret data in the",
    "start": "1430279",
    "end": "1436640"
  },
  {
    "text": "cache to five and what the teeka now does it simply tries out all the binary",
    "start": "1436640",
    "end": "1442880"
  },
  {
    "text": "gases in order to see the power consumption for instance we can start with a binary gas which has a higher",
    "start": "1442880",
    "end": "1450000"
  },
  {
    "text": "hemming distance since the binary gas did not hit a bit in the victim value so",
    "start": "1450000",
    "end": "1455600"
  },
  {
    "text": "more bits have to change during the transition if we hit a bit we will use",
    "start": "1455600",
    "end": "1461200"
  },
  {
    "text": "less energy and if we try out all the values we see in the end that the power consumption of all the gases is actually",
    "start": "1461200",
    "end": "1468480"
  },
  {
    "text": "the inverse bit pattern of the victim so this is just an intuition to show you",
    "start": "1468480",
    "end": "1474279"
  },
  {
    "text": "that since we can change our data in this model we can basically find out the real value of the",
    "start": "1474279",
    "end": "1480799"
  },
  {
    "text": "victim the real power model of the cache looks a bit more complicated so we have",
    "start": "1480799",
    "end": "1485919"
  },
  {
    "text": "seen here this Hing distance component this basically means that all data all bits leak to the same offset of the",
    "start": "1485919",
    "end": "1492720"
  },
  {
    "text": "other bits so we have a lined leakage however due to the way we the CPUs are built we also see some additional",
    "start": "1492720",
    "end": "1499039"
  },
  {
    "text": "leakage components for instance cross leakage we named a cross leakage since it leaks the upper part of a cach line",
    "start": "1499039",
    "end": "1505240"
  },
  {
    "text": "to the lower part of another cach line and finally we also see some interesting Behavior we also see self leakage this",
    "start": "1505240",
    "end": "1512720"
  },
  {
    "text": "means that I also leak my own data if I just access my cach line we did a lot of",
    "start": "1512720",
    "end": "1518159"
  },
  {
    "text": "analysis in the paper around how accurate these models are based on start reading this this is way too much for",
    "start": "1518159",
    "end": "1523960"
  },
  {
    "text": "this talk but I just want to highlight one number and it's actually that we achieved as has",
    "start": "1523960",
    "end": "1529080"
  },
  {
    "text": "0.9 correlation with the energy measurements this means that these three",
    "start": "1529080",
    "end": "1534120"
  },
  {
    "text": "types of leakage are actually quite well representing the power consumption of a",
    "start": "1534120",
    "end": "1539520"
  },
  {
    "text": "modern CPUs cach so what can we now do with this let's move a bit more to the generic",
    "start": "1539520",
    "end": "1546640"
  },
  {
    "start": "1541000",
    "end": "1686000"
  },
  {
    "text": "side of these attacks so we can now build an MDS style",
    "start": "1546640",
    "end": "1552559"
  },
  {
    "text": "tech for those who don't know these MDS sty techs usually assume the following",
    "start": "1552559",
    "end": "1558399"
  },
  {
    "text": "have one physical core in a CPU which has hyperring or smt enabled and what we",
    "start": "1558399",
    "end": "1565440"
  },
  {
    "text": "now do is basically we allocate the techer to one of those hyper hyper Frets",
    "start": "1565440",
    "end": "1571640"
  },
  {
    "text": "and the teeker does not exact same thing as in the animation we just fill our cach set with our own data and in the",
    "start": "1571640",
    "end": "1580120"
  },
  {
    "text": "MDS threed model what you usually assume is that the victim is collocated on the other core and the victim just accesses",
    "start": "1580120",
    "end": "1588480"
  },
  {
    "text": "its own secret data there's no connection between the attacker and the victim they're just collocated on the",
    "start": "1588480",
    "end": "1594640"
  },
  {
    "text": "same CPU core and they share the caches there's no transient leakage in place",
    "start": "1594640",
    "end": "1599960"
  },
  {
    "text": "they just use same hardware and what happens now is due to the connections",
    "start": "1599960",
    "end": "1605039"
  },
  {
    "text": "the caches and all the interconnections between the different levels of cache we see collisions in the buses and the",
    "start": "1605039",
    "end": "1612080"
  },
  {
    "text": "caches and this was the reason why we named it collide and power since there are data collisions which we measure",
    "start": "1612080",
    "end": "1618559"
  },
  {
    "text": "power off this is the first style of attack where we assume that victim is always accessing this data this is not",
    "start": "1618559",
    "end": "1625799"
  },
  {
    "text": "quite realistic at some point but it's a good Benchmark we can also build now a mtown style attack assuming that the",
    "start": "1625799",
    "end": "1632919"
  },
  {
    "text": "victim would never access their secret data we could not leak it since it's never in the cache but we can now do the",
    "start": "1632919",
    "end": "1639880"
  },
  {
    "text": "following we could say we are using one physical core and the techer does now the same it just fills the caches with",
    "start": "1639880",
    "end": "1647279"
  },
  {
    "text": "its own data but now the victim triggers A microarchitectural Primitive in order to",
    "start": "1647279",
    "end": "1654679"
  },
  {
    "text": "prefetch the victim data into the cache so we basically can combine",
    "start": "1654679",
    "end": "1660399"
  },
  {
    "text": "misprediction with Spectre with our power measurements to force that the victim data is loaded in the cache and",
    "start": "1660399",
    "end": "1667919"
  },
  {
    "text": "again we see collisions on the buses in the cache which we can exploit with",
    "start": "1667919",
    "end": "1673960"
  },
  {
    "text": "colliding power so you might be wondering we're talking now about power measurements which are inherently",
    "start": "1673960",
    "end": "1680320"
  },
  {
    "text": "sometimes slow and now we're doing refet style attacks in the kernel this must be",
    "start": "1680320",
    "end": "1685679"
  },
  {
    "text": "slow actually no it's extremely slow and",
    "start": "1685679",
    "end": "1691360"
  },
  {
    "text": "this is the state as like we analyzed two different side channels so remember",
    "start": "1691360",
    "end": "1696919"
  },
  {
    "text": "we wanted to have something side Channel agnostic we can now use the platus side Channel or we can drop in heart spit in",
    "start": "1696919",
    "end": "1704159"
  },
  {
    "text": "the future if somebody might find a faster side Channel we will can just replace these side Channels with the",
    "start": "1704159",
    "end": "1709399"
  },
  {
    "text": "faster one but for these two side channels we evaluated the performance for instance with the MDS Style with the",
    "start": "1709399",
    "end": "1716279"
  },
  {
    "text": "direct readings we can leak about 5 bit per hour for the Melton sty attack we can leak about 1 bit per hour so this is",
    "start": "1716279",
    "end": "1723159"
  },
  {
    "text": "already not that fast compared to meltdown and all the cool TR and execution attacks it gets worse with",
    "start": "1723159",
    "end": "1730000"
  },
  {
    "text": "hard split depending on how you do the frequency throttling the leakage rates gets demolished and we can only estimate",
    "start": "1730000",
    "end": "1736880"
  },
  {
    "text": "how long it takes to leak a single bit with the heart spit side channel so we're not quite there yet so since it's",
    "start": "1736880",
    "end": "1744000"
  },
  {
    "text": "too slow let's try",
    "start": "1744000",
    "end": "1747360"
  },
  {
    "text": "it okay I need a",
    "start": "1752919",
    "end": "1761360"
  },
  {
    "text": "mouse oh okay perfect okay so I brought some from home",
    "start": "1764480",
    "end": "1772360"
  },
  {
    "text": "uh so we can see here on the top R um top Corner We have basically um my",
    "start": "1774559",
    "end": "1780000"
  },
  {
    "text": "connection to a remote machine in our lab and I have brought a victim program",
    "start": "1780000",
    "end": "1785240"
  },
  {
    "text": "uh it's way smaller than I expected so I'm quite sorry for that but we as I described in the MDS attack we have now",
    "start": "1785240",
    "end": "1790960"
  },
  {
    "text": "a victim program that has its secret data it's blackhead e23 and down here it uses its function",
    "start": "1790960",
    "end": "1798039"
  },
  {
    "text": "to basically just access their own data in the process what we can now do is basically",
    "start": "1798039",
    "end": "1805799"
  },
  {
    "text": "just run the victim pin it to a specific core and let it live there and it's just",
    "start": "1805799",
    "end": "1813080"
  },
  {
    "text": "doing its task no one would expect something malicious happening if we now go to the other window we have can now",
    "start": "1813080",
    "end": "1819480"
  },
  {
    "text": "start our power measurement and remember since we fixed platypus we now need sudu",
    "start": "1819480",
    "end": "1825159"
  },
  {
    "text": "in order to read the energy and then we just specify um the name of the trace file to",
    "start": "1825159",
    "end": "1831679"
  },
  {
    "text": "record what happens now is basically the techer or in this case the left right side window tries to record some power",
    "start": "1831679",
    "end": "1839519"
  },
  {
    "text": "traces while the victim is constantly exiting the data and we B now the victim",
    "start": "1839519",
    "end": "1845279"
  },
  {
    "text": "to the hyperr of the attacker down here I have basically this",
    "start": "1845279",
    "end": "1851120"
  },
  {
    "text": "local laptop and we can just now get the traces from the server",
    "start": "1851120",
    "end": "1859720"
  },
  {
    "text": "and start analyzing the traces with a bit more complex post processing than what I've",
    "start": "1859720",
    "end": "1865480"
  },
  {
    "text": "showed you with this trying out the binary guesses we use more sophisticated",
    "start": "1865480",
    "end": "1870679"
  },
  {
    "text": "statistical models there more precisely correlation power analysis for some of you who might be familiar with this so",
    "start": "1870679",
    "end": "1877039"
  },
  {
    "text": "if you now start this process file don't be surprised right",
    "start": "1877039",
    "end": "1882360"
  },
  {
    "text": "now oh yeah okay never fix stuff before",
    "start": "1882360",
    "end": "1888440"
  },
  {
    "text": "yeah so if you start the boss processing don't be surprised this might not be",
    "start": "1888440",
    "end": "1894200"
  },
  {
    "text": "enough right now so we just recorded a few minutes of samples what we can already see",
    "start": "1894200",
    "end": "1899880"
  },
  {
    "text": "here that basically this is the desired result we want to leak the black U23 string and here we see the distance to",
    "start": "1899880",
    "end": "1907039"
  },
  {
    "text": "the correct characters we already see that the character free is already correctly leaked and also the age",
    "start": "1907039",
    "end": "1913360"
  },
  {
    "text": "character is the second best candidate and some of these are quite um near to",
    "start": "1913360",
    "end": "1919320"
  },
  {
    "text": "the actual value what we can now do is just get the new traces which recorded while I was talking and then check again",
    "start": "1919320",
    "end": "1926600"
  },
  {
    "text": "how it looks after recorded more traces for this experiment so we can already see that",
    "start": "1926600",
    "end": "1933159"
  },
  {
    "text": "the B is now also correct e23 the U is here at the second place",
    "start": "1933159",
    "end": "1938440"
  },
  {
    "text": "the H is fall falling a bit back but it's slowly coming so if we wait a few",
    "start": "1938440",
    "end": "1943960"
  },
  {
    "text": "more samples we should have recovered enough data the software based power",
    "start": "1943960",
    "end": "1949080"
  },
  {
    "text": "measurements to hopefully have leaked all the",
    "start": "1949080",
    "end": "1953480"
  },
  {
    "text": "bites yeah so you can see now it's a second guess and if you use the fallback",
    "start": "1958679",
    "end": "1965000"
  },
  {
    "text": "which recorded and this was the reason why it was late so sorry for that um we",
    "start": "1965000",
    "end": "1970639"
  },
  {
    "text": "should see that you can correctly recover the whole string with this MDS style",
    "start": "1970639",
    "end": "1976840"
  },
  {
    "text": "attack oh no you should not see",
    "start": "1976840",
    "end": "1981679"
  },
  {
    "text": "this so okay so after we showed you the demo and",
    "start": "1994519",
    "end": "2000440"
  },
  {
    "start": "1996000",
    "end": "2157000"
  },
  {
    "text": "that we can actually leak data from a process with process isolation in place and everything we have to talk a bit",
    "start": "2000440",
    "end": "2006720"
  },
  {
    "text": "about mitigation this is a active threat on a system that is except for the power interface",
    "start": "2006720",
    "end": "2013320"
  },
  {
    "text": "completely fixed and up to date so what could we do in order to prevent such colliding power style of attacks we",
    "start": "2013320",
    "end": "2020399"
  },
  {
    "text": "could prevent data collisions and yeah you might be wondering where do these data colle",
    "start": "2020399",
    "end": "2027279"
  },
  {
    "text": "collisions actually happen and they are basically everywhere in order to prevent them we would have to completely",
    "start": "2027279",
    "end": "2033480"
  },
  {
    "text": "redesign the shared path of a CPU so all the components that different domains",
    "start": "2033480",
    "end": "2039760"
  },
  {
    "text": "could reach should be protected and you already see this is way too costly to",
    "start": "2039760",
    "end": "2044919"
  },
  {
    "text": "deploy on all the general purpose CPUs we have today and a single component",
    "start": "2044919",
    "end": "2050720"
  },
  {
    "text": "that we would miss with such a pro um protection would reenable the Collide and Power Attack later on so what the",
    "start": "2050720",
    "end": "2059440"
  },
  {
    "text": "industry did was basically the other way around they tried to prevent observing",
    "start": "2059440",
    "end": "2064878"
  },
  {
    "text": "energy signals and this was the the reasonable fix for platus this was an unprivileged interface this should not",
    "start": "2064879",
    "end": "2071398"
  },
  {
    "text": "have been unprivileged in the first place so they just removed the excess from it however as we've seen today with",
    "start": "2071399",
    "end": "2077398"
  },
  {
    "text": "heart spit there are different ways to get a signal that is related to energy",
    "start": "2077399",
    "end": "2083240"
  },
  {
    "text": "it's the performance is way slower than with the direct measurements but still the signal is there and thermal and",
    "start": "2083240",
    "end": "2090560"
  },
  {
    "text": "power management are more important for CPU to basically function than to not",
    "start": "2090560",
    "end": "2096358"
  },
  {
    "text": "have them in the first place so this leaves us unfortunately with the current standpoint that colliding power",
    "start": "2096359",
    "end": "2102760"
  },
  {
    "text": "with the heart speed um side channel is super slow but it's unmitigated and it",
    "start": "2102760",
    "end": "2108000"
  },
  {
    "text": "could reach arbitrary data within the cache and with that I'm coming to my",
    "start": "2108000",
    "end": "2113119"
  },
  {
    "text": "final slide so we have seen today that unrestricted power interfaces are a terrible idea you should not have",
    "start": "2113119",
    "end": "2119520"
  },
  {
    "text": "unrestricted power interface in any systems however there are still indirect power measurement mechanisms that can",
    "start": "2119520",
    "end": "2126680"
  },
  {
    "text": "still give us information about the data or the power used during operations and",
    "start": "2126680",
    "end": "2132880"
  },
  {
    "text": "finally software based power search channels are not as F like targeting",
    "start": "2132880",
    "end": "2138079"
  },
  {
    "text": "specific applications they can also Target like TR and execution Tech specific CPU components and therefore",
    "start": "2138079",
    "end": "2144359"
  },
  {
    "text": "leak arbitrary data and there are much more details in all the papers please check them out and thank you for your",
    "start": "2144359",
    "end": "2152320"
  },
  {
    "text": "[Applause] attention",
    "start": "2152320",
    "end": "2159640"
  }
]