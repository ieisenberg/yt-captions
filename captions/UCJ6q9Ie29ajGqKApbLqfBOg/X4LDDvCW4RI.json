[
  {
    "text": "[Music]",
    "start": "4960",
    "end": "29800"
  },
  {
    "text": "so should be fine now so hi everyone to our talk on NOS break and defeating honey Nets sorry for the small delay we",
    "start": "29800",
    "end": "36920"
  },
  {
    "text": "had some problems with the internal Network and with the two Beamers so um",
    "start": "36920",
    "end": "42320"
  },
  {
    "text": "who of you knows what a honey net is just as a question so many people know so I can",
    "start": "42320",
    "end": "49320"
  },
  {
    "text": "leave the um I just give a short overview of Honey Nets a honey net is",
    "start": "49320",
    "end": "54879"
  },
  {
    "text": "according to the definition by the honey net project a concept in order to learn the tool active tool tactics and motives",
    "start": "54879",
    "end": "62480"
  },
  {
    "text": "of the blackhead Community a typical honey net is depicted over um on the slides as you",
    "start": "62480",
    "end": "68840"
  },
  {
    "text": "see a honey pot um typically consists of two applications the one is the honey wall the honey wall is a transparent",
    "start": "68840",
    "end": "76119"
  },
  {
    "text": "Bridge uh and has two things to do on the one hand data capture on the other",
    "start": "76119",
    "end": "81560"
  },
  {
    "text": "hand data Control Data control means that you've um installed snot inline",
    "start": "81560",
    "end": "86600"
  },
  {
    "text": "there snot inline is an intrusion prevention system it's it's based on snort it basically just turns um the",
    "start": "86600",
    "end": "93520"
  },
  {
    "text": "rules so that someone who owns one of your honey pots can't um use an exploit",
    "start": "93520",
    "end": "99320"
  },
  {
    "text": "to the outside world so the exploit is blocked at the honey wall on the other hand um we do some kind of traffic",
    "start": "99320",
    "end": "106320"
  },
  {
    "text": "shaping for example that only a limited rate can be um the outgoing Network flow",
    "start": "106320",
    "end": "112600"
  },
  {
    "text": "or only perhaps 20 TCP connections per day are allowed the other main function of the",
    "start": "112600",
    "end": "118920"
  },
  {
    "text": "honey wall is data capture that means that you've got an A TCB TCP dump or",
    "start": "118920",
    "end": "124719"
  },
  {
    "text": "snot running so that you capture all Network traffic that's flowing inside and outside of your honey po you also",
    "start": "124719",
    "end": "131480"
  },
  {
    "text": "can do data logging of the honey pods on the honey wall the main part of the honey net is",
    "start": "131480",
    "end": "138800"
  },
  {
    "text": "or are the honey pods a honey PO is a resource whose value lies in being probed attacked or compromised that",
    "start": "138800",
    "end": "145840"
  },
  {
    "text": "means um yeah you interested in who scans your box who attacks your box and",
    "start": "145840",
    "end": "151920"
  },
  {
    "text": "what do they do if they own your box so um typically you use um a a Linux",
    "start": "151920",
    "end": "158400"
  },
  {
    "text": "Solaris a Windows or some kind of BSD as an operating system you just modify it",
    "start": "158400",
    "end": "164360"
  },
  {
    "text": "in um some small ways and then you just deploy it so you've got um a couple of",
    "start": "164360",
    "end": "171319"
  },
  {
    "text": "servers who have no production value they they just run and you watch them if",
    "start": "171319",
    "end": "176800"
  },
  {
    "text": "they get scanned if they get attacked or perhaps someone even even hex them so you you want to learn the tool",
    "start": "176800",
    "end": "184319"
  },
  {
    "text": "taces and motives of the blackhead Community how do you do that of course you have to observe them but how do you",
    "start": "184319",
    "end": "191280"
  },
  {
    "text": "observe someone who's um doing things on your net on the one hand you've got the TCP dump so you control all Network",
    "start": "191280",
    "end": "198519"
  },
  {
    "text": "flows but the network flow is not interesting if it's encrypted so if the attacker uses SSH or some other kind of",
    "start": "198519",
    "end": "205640"
  },
  {
    "text": "encryption you can't basically see nothing because you can't encrypt the traffic so you have to find other ways",
    "start": "205640",
    "end": "211599"
  },
  {
    "text": "in order to uh to see what an attack is doing if you use some kind of um Trojan",
    "start": "211599",
    "end": "217560"
  },
  {
    "text": "binary for for example a tro and sshr who yeah for which you've got the keys",
    "start": "217560",
    "end": "223400"
  },
  {
    "text": "it's useless if the attacker deploys it all its own um tools for for example his",
    "start": "223400",
    "end": "229599"
  },
  {
    "text": "own tool that decrypts the session so you have got to do another approach the",
    "start": "229599",
    "end": "234920"
  },
  {
    "text": "approach that's currently taken by the honey project is z a tool that's um that",
    "start": "234920",
    "end": "241159"
  },
  {
    "text": "has a cap capability to monitor all activities on the honey pod for example",
    "start": "241159",
    "end": "246439"
  },
  {
    "text": "you can lock all SSH connections if someone copies a file via secure copy to",
    "start": "246439",
    "end": "251959"
  },
  {
    "text": "your Honeypot you see what's going on if someone um for example a burn ey",
    "start": "251959",
    "end": "257400"
  },
  {
    "text": "protected binary has to be decrypted before you run it so you also get the password for the burn ey protected",
    "start": "257400",
    "end": "263520"
  },
  {
    "text": "binary so it basically allows you to see many of the things that can be done on a",
    "start": "263520",
    "end": "269199"
  },
  {
    "text": "honey part um C also provides the ability to monitor all internal workings of the",
    "start": "269199",
    "end": "276160"
  },
  {
    "text": "honey pod so if no one is connected to your honey pod you also see what's happening so if someone owns your box",
    "start": "276160",
    "end": "283000"
  },
  {
    "text": "installs some toolkits and then locks out you also see what's happening on that box and how does zc arive this",
    "start": "283000",
    "end": "291000"
  },
  {
    "text": "basically zc is a rootkit um and the first version is was based on adore Ador",
    "start": "291000",
    "end": "297000"
  },
  {
    "text": "is probably known for you it's um one of the best root kits uh currently on the",
    "start": "297000",
    "end": "303120"
  },
  {
    "text": "earth perhaps um in the current version version 2.1.7 it's based on um or it's",
    "start": "303120",
    "end": "311280"
  },
  {
    "text": "completely Rewritten and the main part of CC is the hijacking of this read so",
    "start": "311280",
    "end": "317120"
  },
  {
    "text": "you hijack a CIS call um you override it with your own one and if someone calls now read you",
    "start": "317120",
    "end": "324639"
  },
  {
    "text": "pass um this value to the original CIS call and the result you add an a header and",
    "start": "324639",
    "end": "333400"
  },
  {
    "text": "send it in a covered way via your via UDP to another host where all things can",
    "start": "333400",
    "end": "338560"
  },
  {
    "text": "be loged how do we send this in a covered way um it basically creates an",
    "start": "338560",
    "end": "344280"
  },
  {
    "text": "SK buffer structure fills everything in adds its own header for for the C and",
    "start": "344280",
    "end": "351120"
  },
  {
    "text": "then passes this SK buffer structure to the driver and the driver just sends it",
    "start": "351120",
    "end": "356720"
  },
  {
    "text": "on the net you have to fiddle a bit with the network counter so that no one can see",
    "start": "356720",
    "end": "362080"
  },
  {
    "text": "that you're doing some kind of um observing and you've got also some in",
    "start": "362080",
    "end": "367280"
  },
  {
    "text": "the header some kind of magic value so that you can identify if some um protocol or if some packet is um is a",
    "start": "367280",
    "end": "374880"
  },
  {
    "text": "Zac packet so if Zac is installed on every computer on your hyet you basically",
    "start": "374880",
    "end": "381240"
  },
  {
    "text": "can't see on any of these that Zac is working because Z also hides on the um",
    "start": "381240",
    "end": "386800"
  },
  {
    "text": "up in the um upflowing network uh layer that you can see this so all your um",
    "start": "386800",
    "end": "393599"
  },
  {
    "text": "liap based sniffers and all firewall rules are useless against",
    "start": "393599",
    "end": "398800"
  },
  {
    "text": "zc we don't want to see that an attacker shouldn't see that zc is running on the host so we have to hide it so basically",
    "start": "398800",
    "end": "407199"
  },
  {
    "text": "as a rootkit does this uh how do we hide CC um it's in the to installation zc is",
    "start": "407199",
    "end": "414759"
  },
  {
    "text": "just a kernel module with a random numeric name but you can also customize it for example and we use snd minus pcmc",
    "start": "414759",
    "end": "423120"
  },
  {
    "text": "A.O as a name for our CC presentation later um afterwards there um a second",
    "start": "423120",
    "end": "430560"
  },
  {
    "text": "module cleaner. o from the Ador rootkit is loaded cleaner. o is um is a very",
    "start": "430560",
    "end": "436720"
  },
  {
    "text": "simple Kern module it basically just unlinks your module from the module list",
    "start": "436720",
    "end": "441800"
  },
  {
    "text": "and then unloads itself with no pointer in the module list it's hidden in some kind of form so you can't see zc very",
    "start": "441800",
    "end": "451319"
  },
  {
    "text": "easy um to give you an impression about zc we just demonstrated how it works",
    "start": "451319",
    "end": "457840"
  },
  {
    "text": "we've got here um a Mac with the IP address 10 112 2 uh 1 and a lineup box",
    "start": "457840",
    "end": "464599"
  },
  {
    "text": "10 1121 um currently here's no CIVC running but we'll install CIVC now on this host",
    "start": "464599",
    "end": "471879"
  },
  {
    "text": "and then we'll extract all this package that are sent in a covered channel to to the Mac to the mac and then you'll see",
    "start": "471879",
    "end": "479639"
  },
  {
    "text": "that I can't see anything here but he can see anything what's going on on my",
    "start": "479639",
    "end": "486000"
  },
  {
    "text": "box so um Bas basically zc is a colel module so you have to root so you have",
    "start": "486000",
    "end": "491639"
  },
  {
    "text": "to have root rids to install it Max is currently installing it now CC should be",
    "start": "491639",
    "end": "498199"
  },
  {
    "text": "running if I type something on this box perhaps LS on ID it's not running it's",
    "start": "498199",
    "end": "504759"
  },
  {
    "text": "not running okay so I have to wait a bit um as we can see see on the oh the size",
    "start": "504759",
    "end": "512159"
  },
  {
    "text": "is not as big as we expected so we will have probably some little problems to",
    "start": "512159",
    "end": "518240"
  },
  {
    "text": "show you everything but I hope we can manage it so that um you see on the",
    "start": "518240",
    "end": "523719"
  },
  {
    "text": "first window this is just my computer now zc is installed as you see on the",
    "start": "523719",
    "end": "529839"
  },
  {
    "text": "first part uh snd minus pcmc is loaded this is just zc in another name after",
    "start": "529839",
    "end": "536160"
  },
  {
    "text": "this cleaner. off from a door is loaded and it unlinks ZB from the module list and now we can see basically everything",
    "start": "536160",
    "end": "544240"
  },
  {
    "text": "ZB is running um on the other window that now",
    "start": "544240",
    "end": "549519"
  },
  {
    "text": "should pop up there's Al there's some kind of logging running so we've got by",
    "start": "549519",
    "end": "555120"
  },
  {
    "text": "type something in here perhaps an LS an ID a un name minus minus a so you",
    "start": "555120",
    "end": "563880"
  },
  {
    "text": "should see on the other side what commands that I type in",
    "start": "563880",
    "end": "569519"
  },
  {
    "text": "something like this and so basically zc is able to see everything what's going",
    "start": "569519",
    "end": "575040"
  },
  {
    "text": "on on your box so back",
    "start": "575040",
    "end": "580959"
  },
  {
    "text": "to so who are we are and why we are looking into zc we are in research group",
    "start": "583600",
    "end": "589839"
  },
  {
    "text": "at the University of Aram and we are running a honey net ourself and following good scientific practice we",
    "start": "589839",
    "end": "597160"
  },
  {
    "text": "see the honey net as a research tool or as an probe to into the internet and we",
    "start": "597160",
    "end": "604160"
  },
  {
    "text": "have to attack our measurement devices and probes to assess the quality of data",
    "start": "604160",
    "end": "610360"
  },
  {
    "text": "gathered by this Tool uh sorry",
    "start": "610360",
    "end": "616440"
  },
  {
    "text": "um our main concern is um what quality",
    "start": "616440",
    "end": "621680"
  },
  {
    "text": "of data does he as provide under the view of attackers circumventing zc um",
    "start": "621680",
    "end": "628640"
  },
  {
    "text": "can we really rely on that we see all the attacks on our machines um at least",
    "start": "628640",
    "end": "634560"
  },
  {
    "text": "hinted at in the lock files provided by zc um the authors of zc were hoping that",
    "start": "634560",
    "end": "641519"
  },
  {
    "text": "even if people are able to disable zc they would see how zbec could be",
    "start": "641519",
    "end": "647839"
  },
  {
    "text": "disabled um we were not sure about that and tried to attack the Assumption and we were successful with that um so first",
    "start": "647839",
    "end": "657200"
  },
  {
    "text": "as a teaser we show you our sucess on that and give only very short",
    "start": "657200",
    "end": "662959"
  },
  {
    "text": "explanations on what you are seeing and what's happening there um this is the",
    "start": "662959",
    "end": "668360"
  },
  {
    "text": "Honeypot this sh runs on the Honeypot and I'll now start the https server",
    "start": "668360",
    "end": "674240"
  },
  {
    "text": "which has a ging security hole so it's easy for me to exploit it",
    "start": "674240",
    "end": "681560"
  },
  {
    "text": "now there's this https server running on Port a443 and you see there was a lot of",
    "start": "695720",
    "end": "702560"
  },
  {
    "text": "logging going on this is running on my notebook which um emulates the honey",
    "start": "702560",
    "end": "708560"
  },
  {
    "text": "wall but today also the machine of the attacker",
    "start": "708560",
    "end": "714839"
  },
  {
    "text": "um now I will present um an explor exp loit code um exploiting the vulnerable",
    "start": "715000",
    "end": "722519"
  },
  {
    "text": "server and then we will upload our own attack tool keas and you will see in the",
    "start": "722519",
    "end": "728440"
  },
  {
    "text": "lower window that there will be next to no logging",
    "start": "728440",
    "end": "733480"
  },
  {
    "text": "information basically now there's um our attch payload is created on the FL",
    "start": "743560",
    "end": "750560"
  },
  {
    "text": "um then we use uh use Curl to do an",
    "start": "750560",
    "end": "755680"
  },
  {
    "text": "connect to the insecure server and transfer the script payload",
    "start": "755680",
    "end": "761560"
  },
  {
    "text": "s which is executed by the vulnerable server uh and now we were too fast or",
    "start": "761560",
    "end": "768120"
  },
  {
    "text": "the network too slow our attack tool doesn't work connection refuse that basically means that the attack tool on",
    "start": "768120",
    "end": "775199"
  },
  {
    "text": "the server side isn't started",
    "start": "775199",
    "end": "779560"
  },
  {
    "text": "but now it is so now we are able to execute abary commands on the server",
    "start": "786720",
    "end": "792560"
  },
  {
    "text": "without much logging taking place um in the lower corner you see the lock window",
    "start": "792560",
    "end": "798920"
  },
  {
    "text": "peering up under the other window and I'll now show the root directory of the",
    "start": "798920",
    "end": "804760"
  },
  {
    "text": "Honeypot without information being locked by zc",
    "start": "804760",
    "end": "809880"
  },
  {
    "text": "I can get system information from the honey pod like um environment variables",
    "start": "809880",
    "end": "815000"
  },
  {
    "text": "or the user ID without information being locked by zc I can read files this is",
    "start": "815000",
    "end": "822240"
  },
  {
    "text": "ETC passwd without being locked by zc I can upload",
    "start": "822240",
    "end": "829560"
  },
  {
    "text": "files and I can execute other files in this case I will execute a vulnerable suid program we placed on the honey pod",
    "start": "830920",
    "end": "839759"
  },
  {
    "text": "and use it to start another server of this cus tool running now as",
    "start": "839759",
    "end": "848160"
  },
  {
    "text": "rude you know see there was a little logging because our server is um",
    "start": "848680",
    "end": "854480"
  },
  {
    "text": "completely coded in Python to do rapid exploit prototyping um and the python binary",
    "start": "854480",
    "end": "861560"
  },
  {
    "text": "when loaded um does some things which could be locked by zbec um if anybody h",
    "start": "861560",
    "end": "868639"
  },
  {
    "text": "means he needs that he can convert the tool to C and avoid this logging",
    "start": "868639",
    "end": "876279"
  },
  {
    "text": "easily now I connect to the other key server running as root I again can get system information",
    "start": "877399",
    "end": "885519"
  },
  {
    "text": "for example you now see that the effective user ID in the middle of the screen is zero instead of 65534 which",
    "start": "885519",
    "end": "893639"
  },
  {
    "text": "means nobody so now we have boot I can again show f without being",
    "start": "893639",
    "end": "899759"
  },
  {
    "text": "logging in this case Etc Shadow and now I'm executing special",
    "start": "899759",
    "end": "906000"
  },
  {
    "text": "module on our server which tries to find the um zc binary in memory you see again",
    "start": "906000",
    "end": "914920"
  },
  {
    "text": "um that took some logging place but because we accessed the memory very",
    "start": "914920",
    "end": "922199"
  },
  {
    "text": "aggressive um most of the packets were dropped so zbec isn't logging anything",
    "start": "922199",
    "end": "927240"
  },
  {
    "text": "really but just sping out error message this is because we are doing big reads in Def k um we could have accessed def K",
    "start": "927240",
    "end": "936000"
  },
  {
    "text": "by m mapping it that wouldn't have lead to logging we should do that some point",
    "start": "936000",
    "end": "941920"
  },
  {
    "text": "um now tool detected in kernel address where we can remove the zc",
    "start": "941920",
    "end": "948120"
  },
  {
    "text": "module and now we can jump to this kernel address then get a funny G people",
    "start": "948120",
    "end": "956160"
  },
  {
    "text": "warning that we will taint the kernel which our Tech Tool which is exactly what we're planning to do and now zc is",
    "start": "956160",
    "end": "963480"
  },
  {
    "text": "disabled so I so basically I can type now something on this box and as you can",
    "start": "963480",
    "end": "968600"
  },
  {
    "text": "see no logging is running by type un nameus a so you don't see any output so",
    "start": "968600",
    "end": "974600"
  },
  {
    "text": "we basically unloaded Z so let's have a look in how we did",
    "start": "974600",
    "end": "981120"
  },
  {
    "text": "that and what we did so as you saw we are we were able to um detect z b we",
    "start": "981120",
    "end": "988600"
  },
  {
    "text": "were able able to avoid logging we we're even able to unload ZX so basically we compromised the",
    "start": "988600",
    "end": "996120"
  },
  {
    "text": "Honeypot oh um for example you can use it in as a stepping stone in the network",
    "start": "1004319",
    "end": "1011480"
  },
  {
    "text": "you can use it to attack the honey wall which would be probably a nice",
    "start": "1011480",
    "end": "1017560"
  },
  {
    "text": "stepping stone um and in fact often I ask what's the",
    "start": "1017560",
    "end": "1023759"
  },
  {
    "text": "point in this things people are doing what's the point of trading 50 terab of",
    "start": "1023759",
    "end": "1030120"
  },
  {
    "text": "French movies people just do and and basically we are interested in could we",
    "start": "1030120",
    "end": "1037000"
  },
  {
    "text": "do because if we could others could basically it's our assessment on",
    "start": "1037000",
    "end": "1043959"
  },
  {
    "text": "the data quality of the honey pot so now we want stepwise to explain",
    "start": "1043959",
    "end": "1050880"
  },
  {
    "text": "what we've done and how we've done it on the first part I want to explain how we are we are able to detect Z if you think",
    "start": "1050880",
    "end": "1057840"
  },
  {
    "text": "of it um zc is basically a root kit so there come several ways in mind how to",
    "start": "1057840",
    "end": "1063640"
  },
  {
    "text": "detect it the first one is based on the honey wall as I said before and the data",
    "start": "1063640",
    "end": "1069600"
  },
  {
    "text": "um capture and data control is done on the honey wall so I use so the operator",
    "start": "1069600",
    "end": "1076000"
  },
  {
    "text": "of hyet uses snot inline and some kind of um connection restricting there so",
    "start": "1076000",
    "end": "1081799"
  },
  {
    "text": "you can probably just if you open many connections or if you send an Explorer from uh honey pot to the outside world",
    "start": "1081799",
    "end": "1090240"
  },
  {
    "text": "you if you watch it you can probably see that there's something malicious going on in the middle um we don't go into",
    "start": "1090240",
    "end": "1097039"
  },
  {
    "text": "details that's left as an exercise and also there was an a frag article I think",
    "start": "1097039",
    "end": "1102440"
  },
  {
    "text": "in one of the fake frags um the other thing that comes to",
    "start": "1102440",
    "end": "1107600"
  },
  {
    "text": "mind is the latency um zc packs everything into an UDP",
    "start": "1107600",
    "end": "1113640"
  },
  {
    "text": "packet and send this over the network and then um locks it there so if we are",
    "start": "1113640",
    "end": "1118840"
  },
  {
    "text": "able to uh get generate lots of um logging data perhaps we able to see some",
    "start": "1118840",
    "end": "1124400"
  },
  {
    "text": "latency effects so that we can make um the logging um unreliable and also",
    "start": "1124400",
    "end": "1129840"
  },
  {
    "text": "detect that zic is running as I said zc also fiddles with the network traffic",
    "start": "1129840",
    "end": "1135559"
  },
  {
    "text": "counters perhaps we can fiddle with them too and detect that there they are changed um C also uses um a simple form",
    "start": "1135559",
    "end": "1143799"
  },
  {
    "text": "of CIS call table modification and also we can yeah check the CIS call if if",
    "start": "1143799",
    "end": "1149159"
  },
  {
    "text": "everything is correct and then detect if C is running um with the help of cleaner. O",
    "start": "1149159",
    "end": "1156360"
  },
  {
    "text": "zc loads itself and hides itself so perhaps we a even able to discover it",
    "start": "1156360",
    "end": "1162960"
  },
  {
    "text": "that there's a hidden module and perhaps we also can do some other crafed memory in order to detect it",
    "start": "1162960",
    "end": "1169400"
  },
  {
    "text": "so in the first part we want to um go into into detail for the",
    "start": "1169400",
    "end": "1174880"
  },
  {
    "text": "latency we found something that's called DD attack so with the help of DD a very",
    "start": "1174880",
    "end": "1181440"
  },
  {
    "text": "simple tool I can generate lots of traffic and with the help of DD I can",
    "start": "1181440",
    "end": "1186640"
  },
  {
    "text": "generate so much traffic that the latency effects come to um the that you",
    "start": "1186640",
    "end": "1193120"
  },
  {
    "text": "can see the latency effects and therefore detect that Z is running we've also got a small demo on",
    "start": "1193120",
    "end": "1201440"
  },
  {
    "text": "this so at first we uh already we are already logged in into the box we we",
    "start": "1201440",
    "end": "1208679"
  },
  {
    "text": "then ping from there to the mech let's see what the round trip time from this",
    "start": "1208679",
    "end": "1214080"
  },
  {
    "text": "crossover cable is",
    "start": "1214080",
    "end": "1219200"
  },
  {
    "text": "so after that we're going to um to load another module that fiddles with the",
    "start": "1219200",
    "end": "1224360"
  },
  {
    "text": "network counters so at first we ping we send some package some CMP package we've got",
    "start": "1224360",
    "end": "1231360"
  },
  {
    "text": "a latency time of about 0.3 SEC milliseconds or",
    "start": "1231360",
    "end": "1236679"
  },
  {
    "text": "so then we La um a kernel me um a kernel",
    "start": "1236679",
    "end": "1242400"
  },
  {
    "text": "module that fiddles with proc net death so we change the counters as they were",
    "start": "1242400",
    "end": "1248600"
  },
  {
    "text": "originally and see what happens I think we'll make that",
    "start": "1248600",
    "end": "1254960"
  },
  {
    "text": "later oh sorry oh sorry sorry sorry for me um we now start didd in the",
    "start": "1254960",
    "end": "1260520"
  },
  {
    "text": "background so that we generate lots of traffic let's see and now we do the Ping",
    "start": "1260520",
    "end": "1266440"
  },
  {
    "text": "again as you can see um there's some very long delay now we've got about yeah",
    "start": "1266440",
    "end": "1273520"
  },
  {
    "text": "10 times the delay from before so you can see that the delay is going up and",
    "start": "1273520",
    "end": "1280159"
  },
  {
    "text": "perhaps this is based on the presence of Z as you can see it doesn't react",
    "start": "1280159",
    "end": "1287240"
  },
  {
    "text": "correctly because there's some much traffic going on it's a kind of denal of service attack against the honey",
    "start": "1287240",
    "end": "1293880"
  },
  {
    "text": "wall so back to the",
    "start": "1293880",
    "end": "1299080"
  },
  {
    "text": "demonstration um sorry for Network traffic counters so um as we see as I",
    "start": "1299080",
    "end": "1305520"
  },
  {
    "text": "said before zc fiddles with the network counters it basically chains proc net Death and subtracts All um s SP car",
    "start": "1305520",
    "end": "1314279"
  },
  {
    "text": "buffers that it's sent um in a covered manner so if fiddle everything back and",
    "start": "1314279",
    "end": "1320360"
  },
  {
    "text": "then compare the output of if config with the output of proget Dev um then we",
    "start": "1320360",
    "end": "1325760"
  },
  {
    "text": "see that there's something malicious going on because sometimes the network counters are running backwards or you",
    "start": "1325760",
    "end": "1332840"
  },
  {
    "text": "also have jumps inside the network counters we've got also a demonstration on",
    "start": "1332840",
    "end": "1339360"
  },
  {
    "text": "this so at First We Take a look at you see that we've got about 22 uh kiloby of",
    "start": "1342559",
    "end": "1349200"
  },
  {
    "text": "data um we are locked in into the host via SSH so we generate about uh 2 kiloby",
    "start": "1349200",
    "end": "1356240"
  },
  {
    "text": "or so per second so now we load a module the",
    "start": "1356240",
    "end": "1361679"
  },
  {
    "text": "module just turns the counters in proget Dev back as or it fiddles with the",
    "start": "1361679",
    "end": "1366799"
  },
  {
    "text": "counters and proget Dev and then everything should be um then we should",
    "start": "1366799",
    "end": "1372480"
  },
  {
    "text": "see that the network counters are much higher than we expect them to be",
    "start": "1372480",
    "end": "1380080"
  },
  {
    "text": "so if you now run if config we see that the network counter is more than 30",
    "start": "1380200",
    "end": "1388400"
  },
  {
    "text": "megabytes and if we uh unload the um the module again so if we do an AR",
    "start": "1388400",
    "end": "1395400"
  },
  {
    "text": "mod on this we see that the back that the network counter is switching back",
    "start": "1395400",
    "end": "1402520"
  },
  {
    "text": "again as we see we've got some delay because DD is running in the background",
    "start": "1402520",
    "end": "1410440"
  },
  {
    "text": "so now we've got more than 50 megabytes of data so this is the real Network counter including all data sent via SE",
    "start": "1412480",
    "end": "1420600"
  },
  {
    "text": "over the line and now it's back again to about 48",
    "start": "1420600",
    "end": "1427480"
  },
  {
    "text": "kiloby so if you just change proget dep again to its original state we see that",
    "start": "1427480",
    "end": "1432640"
  },
  {
    "text": "there yeah that Z does something with this",
    "start": "1432640",
    "end": "1438000"
  },
  {
    "text": "okay now to the CIS call modification there you can see uh on the left side a normal um CIS call table",
    "start": "1439600",
    "end": "1447320"
  },
  {
    "text": "this exit this s this right this open so um and um these are Al all",
    "start": "1447320",
    "end": "1454520"
  },
  {
    "text": "pointers into the Kern memory and um yes they are all function pointers now if I",
    "start": "1454520",
    "end": "1460559"
  },
  {
    "text": "load another module for example Z or another root kit it basically changes up the pointer so that it points to another",
    "start": "1460559",
    "end": "1467360"
  },
  {
    "text": "location after that um yeah every time the CIS call is called then it handles",
    "start": "1467360",
    "end": "1473480"
  },
  {
    "text": "this um perhaps transfers or change the output and gives everything back so if",
    "start": "1473480",
    "end": "1480919"
  },
  {
    "text": "we load it on a um box an anomaly with so this is the output of a colel module",
    "start": "1480919",
    "end": "1487120"
  },
  {
    "text": "that just outputs the memory location of the suite and the ride as you see they are not far part but if we now Lo a",
    "start": "1487120",
    "end": "1494120"
  },
  {
    "text": "kernel module then we see the site is far apart from this right so this is an",
    "start": "1494120",
    "end": "1500520"
  },
  {
    "text": "also an um a sign that Z is",
    "start": "1500520",
    "end": "1505799"
  },
  {
    "text": "loaded so zbec is an hidden kernel module and if we could find it we could",
    "start": "1506039",
    "end": "1512480"
  },
  {
    "text": "start poking into its inner data structures to extract the",
    "start": "1512480",
    "end": "1518799"
  },
  {
    "text": "variables used by zbec and we probably could disabl",
    "start": "1518799",
    "end": "1523840"
  },
  {
    "text": "z um modules uh in Linux start with a",
    "start": "1523840",
    "end": "1529000"
  },
  {
    "text": "module header which is defined in include Lino module age and which looks",
    "start": "1529000",
    "end": "1534480"
  },
  {
    "text": "like this um and it gives us a lot of data to fingerprint on and use ristics",
    "start": "1534480",
    "end": "1541919"
  },
  {
    "text": "first there is the size of the module structure with is 96 on Linux",
    "start": "1541919",
    "end": "1547840"
  },
  {
    "text": "24 then we have pointers into the kernal memory pointing to the next module in",
    "start": "1547840",
    "end": "1554760"
  },
  {
    "text": "the list of modules um which should be another valid module structure and to",
    "start": "1554760",
    "end": "1560360"
  },
  {
    "text": "the name of the module which should be an S string then there are Pointers into the",
    "start": "1560360",
    "end": "1566159"
  },
  {
    "text": "module itself uh for the init function of the module",
    "start": "1566159",
    "end": "1572960"
  },
  {
    "text": "and for the cleanup function then there are variables which have only a small range of values usually between zero and",
    "start": "1572960",
    "end": "1582159"
  },
  {
    "text": "two um and we can use all those to see if",
    "start": "1582159",
    "end": "1588679"
  },
  {
    "text": "this could be a valued module structure we have found in memory um it's",
    "start": "1588679",
    "end": "1594200"
  },
  {
    "text": "further faciliated this that all module header data and in fact all module data",
    "start": "1594200",
    "end": "1600520"
  },
  {
    "text": "in the kernel is um reserved by the VMO function and the me V function aligns",
    "start": "1600520",
    "end": "1608039"
  },
  {
    "text": "memory to page boundaries so we have only check to check every 4K if this could be a module structure and the vog",
    "start": "1608039",
    "end": "1616720"
  },
  {
    "text": "function starts ating memory at vmic start and goes only for vmic Reserve",
    "start": "1616720",
    "end": "1623360"
  },
  {
    "text": "bites that is usually um8 Max so we have to check every fourth kilobyte of memory",
    "start": "1623360",
    "end": "1632840"
  },
  {
    "text": "in 120 max if this could be a valid module structure which is not that much",
    "start": "1632840",
    "end": "1640080"
  },
  {
    "text": "um now a presentation of that we'll use the tool rootkit Hunter which was published in frag",
    "start": "1640080",
    "end": "1648639"
  },
  {
    "text": "so you see with ls mod that we see nothing about the zc",
    "start": "1649440",
    "end": "1656600"
  },
  {
    "text": "module",
    "start": "1660919",
    "end": "1663919"
  },
  {
    "text": "no oh I lost the tool no",
    "start": "1673360",
    "end": "1679519"
  },
  {
    "text": "I lost the object file so you just have to believe the screenshot",
    "start": "1679519",
    "end": "1687440"
  },
  {
    "text": "um this module Hunter module when installed it adds an proc entry show",
    "start": "1687960",
    "end": "1695200"
  },
  {
    "text": "modules if you C that proc ENT entry you get no output but then if you look into",
    "start": "1695200",
    "end": "1700919"
  },
  {
    "text": "D message you have an output very similar to the output by LS mod and you",
    "start": "1700919",
    "end": "1706159"
  },
  {
    "text": "see that there's an additional module sound pcmcia um which is the hidden zeg module",
    "start": "1706159",
    "end": "1714039"
  },
  {
    "text": "and if you find out that between LS mod and the output of module H Hunter",
    "start": "1714039",
    "end": "1720399"
  },
  {
    "text": "there's a difference at an additional module you can be sure that there's something very fishy um so it's an honey",
    "start": "1720399",
    "end": "1727000"
  },
  {
    "text": "poot or it's a machine owned by somebody else already which is a kind of Honey poot too um if we found the module",
    "start": "1727000",
    "end": "1735000"
  },
  {
    "text": "structure we can start to extract um the variables used by zbec from the",
    "start": "1735000",
    "end": "1741440"
  },
  {
    "text": "memory after the module structure um this is quite difficult because um the",
    "start": "1741440",
    "end": "1747080"
  },
  {
    "text": "authors of Z started to hide the variables very good basically this is a",
    "start": "1747080",
    "end": "1752159"
  },
  {
    "text": "pearl program which is executed on every compilation of zc permutating um the",
    "start": "1752159",
    "end": "1758519"
  },
  {
    "text": "position of the different variables which are placed in a big block of empty memory so they have this block of memory",
    "start": "1758519",
    "end": "1766039"
  },
  {
    "text": "reserved in the Z Cur module and then drop at random locations the real",
    "start": "1766039",
    "end": "1773799"
  },
  {
    "text": "variables like this and if if you have a memory dump then it looks like something",
    "start": "1773799",
    "end": "1779480"
  },
  {
    "text": "like this so there are variables scattered around the place um and the",
    "start": "1779480",
    "end": "1785159"
  },
  {
    "text": "places change with every compilation but we can start doing educated guesses if we have this block",
    "start": "1785159",
    "end": "1791640"
  },
  {
    "text": "of memory which the stuff might be we are seeing there for example if we have this",
    "start": "1791640",
    "end": "1796880"
  },
  {
    "text": "value the this might be an IP address but if we check um this is an IP address",
    "start": "1796880",
    "end": "1802880"
  },
  {
    "text": "in the multicast range which would be highly unlikely we are looking in this case for the IP address of the honey",
    "start": "1802880",
    "end": "1809279"
  },
  {
    "text": "wall which CC has to know to send out the data there so if it's not an IP",
    "start": "1809279",
    "end": "1815480"
  },
  {
    "text": "address it might be the magic value used by zc if you we look at this value that's",
    "start": "1815480",
    "end": "1822159"
  },
  {
    "text": "inv valid IP address so it might be the address of the honey wall collecting the",
    "start": "1822159",
    "end": "1827519"
  },
  {
    "text": "data from Z if you look at this value it's a nice port number this might be",
    "start": "1827519",
    "end": "1833600"
  },
  {
    "text": "used as a port for getting out the data to the honey wall and if you look at this very short",
    "start": "1833600",
    "end": "1841080"
  },
  {
    "text": "bite values they terribly look like fragments of a Mech",
    "start": "1841080",
    "end": "1846518"
  },
  {
    "text": "address so we can use this as a tics to",
    "start": "1847279",
    "end": "1852559"
  },
  {
    "text": "find to guess at the values um zc saf in memory this is an output of nose breaker",
    "start": "1852559",
    "end": "1859960"
  },
  {
    "text": "P which was on the blackhead CD also um it's a Python program which traverses",
    "start": "1859960",
    "end": "1865480"
  },
  {
    "text": "the memory Str structures of the Linux kernel um which is a little bit tricky",
    "start": "1865480",
    "end": "1870919"
  },
  {
    "text": "nowadays because um the Linux people recently decided to remove the kernel symbol for the system call table because",
    "start": "1870919",
    "end": "1878120"
  },
  {
    "text": "nobody wants it and nobody needs it um perhaps it's even a security measure so",
    "start": "1878120",
    "end": "1883440"
  },
  {
    "text": "we first have to resolve other symbols in the system call table",
    "start": "1883440",
    "end": "1888519"
  },
  {
    "text": "and start scanning from there not other kernel symbols and start scanning from",
    "start": "1888519",
    "end": "1893960"
  },
  {
    "text": "there which could be the system call table um this usually works out so in",
    "start": "1893960",
    "end": "1900240"
  },
  {
    "text": "line six or seven we have found something which looks like the system call Table and there we already see that",
    "start": "1900240",
    "end": "1910240"
  },
  {
    "text": "this read is at a completely different location than this wi and this open so",
    "start": "1910240",
    "end": "1917600"
  },
  {
    "text": "um probably this read is hijacked or the output of the program is wrong it says",
    "start": "1917600",
    "end": "1922720"
  },
  {
    "text": "probably this right is hijacked which is um makes no sense so we have um then we",
    "start": "1922720",
    "end": "1929880"
  },
  {
    "text": "find out by via the way of um the tics",
    "start": "1929880",
    "end": "1936039"
  },
  {
    "text": "if there's an hidden module and if there's an hidden module we try to analyze the data structure in this",
    "start": "1936039",
    "end": "1942960"
  },
  {
    "text": "module so we have this sound pcmcia module which is hidden and then we have",
    "start": "1942960",
    "end": "1948039"
  },
  {
    "text": "a list of possible Mac fragments um and really in fact this f f",
    "start": "1948039",
    "end": "1955639"
  },
  {
    "text": "f FF is the mech address we use for sending out zma data the broadcast address and um if you would search um",
    "start": "1955639",
    "end": "1965240"
  },
  {
    "text": "harder if we have EF config output to compare and some of the other bytes are",
    "start": "1965240",
    "end": "1970440"
  },
  {
    "text": "the make address of the honey pod so the send address of the Z Z packages we also",
    "start": "1970440",
    "end": "1976720"
  },
  {
    "text": "have candidates for for Port values and again 1 one one and",
    "start": "1976720",
    "end": "1982679"
  },
  {
    "text": "2222 um are the ports we used in our example for sending out the data and we",
    "start": "1982679",
    "end": "1988080"
  },
  {
    "text": "have a list of possible um values in this data block which could be IP addresses and 10",
    "start": "1988080",
    "end": "1996120"
  },
  {
    "text": "11121 is the address of our honeyball 10 11122 is the other address of our",
    "start": "1996120",
    "end": "2001600"
  },
  {
    "text": "honeyball we have so we could narrow down the possible addresses of the honey",
    "start": "2001600",
    "end": "2007960"
  },
  {
    "text": "from a um 2 to the power of 32 about to a dozen and the magic values to which",
    "start": "2007960",
    "end": "2016639"
  },
  {
    "text": "are 32-bit values to identify the Zac packages and to hide them we have um a",
    "start": "2016639",
    "end": "2024000"
  },
  {
    "text": "good dozen of candidates which could be magic values and in this case the magic value we had used was dead beef it's",
    "start": "2024000",
    "end": "2031159"
  },
  {
    "text": "also found and the nice thing is um this nose",
    "start": "2031159",
    "end": "2036600"
  },
  {
    "text": "Bak also gives as the addresses of um",
    "start": "2036600",
    "end": "2041639"
  },
  {
    "text": "key function in this HEC module the init function and the cleanup",
    "start": "2041639",
    "end": "2047159"
  },
  {
    "text": "function so how could we disable Z there's a very nice way Z has built in",
    "start": "2047159",
    "end": "2055280"
  },
  {
    "text": "disablement by the cleanup function we just have to call it and friendly like",
    "start": "2055280",
    "end": "2061079"
  },
  {
    "text": "it is it removes the hijack CIS call table pointer fixes up everything um and",
    "start": "2061079",
    "end": "2068560"
  },
  {
    "text": "we are happy ever each after the memory of the module is not fre but we don't",
    "start": "2068560",
    "end": "2073760"
  },
  {
    "text": "really care a little problem is that the cleanup function in zc is um implemented",
    "start": "2073760",
    "end": "2080520"
  },
  {
    "text": "buggy and that after the cleanup there are still fragments in the Networks tech",
    "start": "2080520",
    "end": "2086000"
  },
  {
    "text": "from the zc module so you probably shouldn't run a production server with a disabled zc module for",
    "start": "2086000",
    "end": "2093320"
  },
  {
    "text": "days and but but the machines keep up they usually start crashing when you",
    "start": "2093320",
    "end": "2098880"
  },
  {
    "text": "shut them down um the more obvious way would be to just override the this read",
    "start": "2098880",
    "end": "2104760"
  },
  {
    "text": "pointer again in the system call table with the original value um the problem",
    "start": "2104760",
    "end": "2109880"
  },
  {
    "text": "is how to get the original value um and the crazy way is to just leave the this",
    "start": "2109880",
    "end": "2116839"
  },
  {
    "text": "um read pointer how it is and patch over the zc module to get rid of the logging",
    "start": "2116839",
    "end": "2123119"
  },
  {
    "text": "functions um that is might be feasible if zc is not as a module but compiled in",
    "start": "2123119",
    "end": "2129400"
  },
  {
    "text": "into the kernel then probably it's your only resort to patch the kernel at this",
    "start": "2129400",
    "end": "2136880"
  },
  {
    "text": "place so in the first part we saw how to detect Z in the second part we saw how",
    "start": "2136880",
    "end": "2142960"
  },
  {
    "text": "to disable it and now in the third part we want to take a look at how to avoid logging why do we do why do we have to",
    "start": "2142960",
    "end": "2150119"
  },
  {
    "text": "do that uh because there's something some that we can't um yeah stop to being",
    "start": "2150119",
    "end": "2158400"
  },
  {
    "text": "locked for example all Network traffic has to be locked because we are connected to a honey pod and we have to",
    "start": "2158400",
    "end": "2164640"
  },
  {
    "text": "use that line so everything that's flowing in and flowing out can be monitored also",
    "start": "2164640",
    "end": "2172000"
  },
  {
    "text": "zivic yeah also zc allows us to um to see everything what's read by the system",
    "start": "2172000",
    "end": "2178680"
  },
  {
    "text": "so all calls to read are also or can be locked so we have to find a way to",
    "start": "2178680",
    "end": "2183960"
  },
  {
    "text": "disable it so um and if you compromised a Honeypot and then sometime after that",
    "start": "2183960",
    "end": "2191440"
  },
  {
    "text": "the operator will notice it and perhaps we will do some analysis perhaps we'll shut it down and do some forensic and",
    "start": "2191440",
    "end": "2198440"
  },
  {
    "text": "with the help of the forensic analysis he'll also obtain some data that you left on the machine also perhaps your um",
    "start": "2198440",
    "end": "2206640"
  },
  {
    "text": "your servers will do some kind of logging to the cslog that can help the um the operator of the honey pod to see",
    "start": "2206640",
    "end": "2214560"
  },
  {
    "text": "what's going on so there are some ways we can can't stop to uh something that we can't stop to be logged but perhaps",
    "start": "2214560",
    "end": "2221880"
  },
  {
    "text": "we can do something against that perhaps logging of network traffic as I said before if I encrypt my network traffic",
    "start": "2221880",
    "end": "2229680"
  },
  {
    "text": "um the operator can log it but he it's it's useless for him because he can't decrypt it so whenever possible I should",
    "start": "2229680",
    "end": "2236319"
  },
  {
    "text": "use encryption and not leave the keys on the machine the problem is how do we deliver",
    "start": "2236319",
    "end": "2243160"
  },
  {
    "text": "our first exploit the first exploit um is problematic because CIVC is running",
    "start": "2243160",
    "end": "2248640"
  },
  {
    "text": "on the box so everything what's read by this exploit can also be monitored and",
    "start": "2248640",
    "end": "2254160"
  },
  {
    "text": "can be used for analysis later so we have to find a way to deliver our initial um exploit in a secure manner",
    "start": "2254160",
    "end": "2261400"
  },
  {
    "text": "perhaps on https exploit as we saw as we saw in the first demonstration we use a",
    "start": "2261400",
    "end": "2267079"
  },
  {
    "text": "vulnerable https server um another point to avoid a",
    "start": "2267079",
    "end": "2272200"
  },
  {
    "text": "logging of network traffic that's probably very hard is to disable the logging host it's not always feasible",
    "start": "2272200",
    "end": "2278960"
  },
  {
    "text": "because you can't be sure where something is locked and perhaps Ling server is far away or very secure so",
    "start": "2278960",
    "end": "2285480"
  },
  {
    "text": "perhaps this is left as an exercise for you so use encryption whenever possible",
    "start": "2285480",
    "end": "2290520"
  },
  {
    "text": "and then nothing can go wrong basically um zc hijacks SED so",
    "start": "2290520",
    "end": "2297880"
  },
  {
    "text": "everything that's R is um monitored and who uh who does use read nearly every",
    "start": "2297880",
    "end": "2305079"
  },
  {
    "text": "program because everything what's read um perhaps in a configuration file or any other file has to pass this read so",
    "start": "2305079",
    "end": "2312880"
  },
  {
    "text": "everything is monitored can we perhaps avoid it yes there are ways for example on network",
    "start": "2312880",
    "end": "2319119"
  },
  {
    "text": "programs use receive receive has the nice property that it doesn't use read",
    "start": "2319119",
    "end": "2324200"
  },
  {
    "text": "so if you read from a socket via receive nothing is locked via",
    "start": "2324200",
    "end": "2329240"
  },
  {
    "text": "say but can we um yeah okay um but one",
    "start": "2329240",
    "end": "2334760"
  },
  {
    "text": "problem is which was hard to grasp for us at first if we have this encrypted communication with",
    "start": "2334760",
    "end": "2341440"
  },
  {
    "text": "sshd where is the read happening that CeX still is able to intercept we have",
    "start": "2341440",
    "end": "2347040"
  },
  {
    "text": "the socket which usually users receive but even if it's would use read um",
    "start": "2347040",
    "end": "2355240"
  },
  {
    "text": "there's an encryption around the communication so nobody should be able to lock anything meaningful except of",
    "start": "2355240",
    "end": "2362920"
  },
  {
    "text": "perhaps timing information or something like that but the thing is that the sshd isn't able to do anything interesting if",
    "start": "2362920",
    "end": "2370119"
  },
  {
    "text": "somebody is logged in there s HD connects to a shell or something else and this connection is where zc attacks",
    "start": "2370119",
    "end": "2378119"
  },
  {
    "text": "because there's a file descriptor on every end at the Shell and at the sshd",
    "start": "2378119",
    "end": "2383200"
  },
  {
    "text": "connected by a Unix pipe and there the bash is reading the key strokes you send",
    "start": "2383200",
    "end": "2389480"
  },
  {
    "text": "via the sshd and this HD is reading back the answers and that is where the",
    "start": "2389480",
    "end": "2395079"
  },
  {
    "text": "logging takes place and where inry doesn't help us so",
    "start": "2395079",
    "end": "2400680"
  },
  {
    "text": "far so now we take a look at what is z log logging as you see on the right side",
    "start": "2400680",
    "end": "2407440"
  },
  {
    "text": "there's the the Zac header you see that there's a magic number that's used to um",
    "start": "2407440",
    "end": "2413680"
  },
  {
    "text": "yeah to identify a valid C packet the version number is currently two and there are some other things like um the",
    "start": "2413680",
    "end": "2420480"
  },
  {
    "text": "time stamp the P the uid um the file descriptor the first 12 bite of the um",
    "start": "2420480",
    "end": "2426960"
  },
  {
    "text": "program name and the length of the total packet so if you you take a look at this",
    "start": "2426960",
    "end": "2433200"
  },
  {
    "text": "um P ID and uid calling read are locked so basically this is an information the",
    "start": "2433200",
    "end": "2439520"
  },
  {
    "text": "um the operator of a honey pod has the file descriptor is um the FD perhaps we",
    "start": "2439520",
    "end": "2446599"
  },
  {
    "text": "can fiddle with it perhaps we can change Z one and two so that they have another meaning and so we can um make the work",
    "start": "2446599",
    "end": "2454680"
  },
  {
    "text": "of an um post uh owning for the um",
    "start": "2454680",
    "end": "2460960"
  },
  {
    "text": "forensic much harder on the other side you can see that the name of the program",
    "start": "2460960",
    "end": "2466240"
  },
  {
    "text": "or the first 12 by are also locked perhaps we can even fiddle with this if",
    "start": "2466240",
    "end": "2472400"
  },
  {
    "text": "we copy the binary to another location or if we do other things we can um",
    "start": "2472400",
    "end": "2478119"
  },
  {
    "text": "fiddle with it and make the work of the forensic much",
    "start": "2478119",
    "end": "2484240"
  },
  {
    "text": "harder so um as we saw the tool DD helps us to squeeze many data through the line",
    "start": "2484240",
    "end": "2491079"
  },
  {
    "text": "we do effectly um a kind of D dos denal of service attack against the honey wall",
    "start": "2491079",
    "end": "2497119"
  },
  {
    "text": "so this helps us because um now all logging is not reliable",
    "start": "2497119",
    "end": "2504040"
  },
  {
    "text": "anymore if we just send enough data through our network interface it's",
    "start": "2504040",
    "end": "2509280"
  },
  {
    "text": "probably that some packets are lost as we saw in one of the demos before there were um message from zbec that it lost",
    "start": "2509280",
    "end": "2516480"
  },
  {
    "text": "some packages and so the um the logging of cic is unreliable if many data are",
    "start": "2516480",
    "end": "2522319"
  },
  {
    "text": "sent via the network but that's not very reliable for us because we can't um we",
    "start": "2522319",
    "end": "2529040"
  },
  {
    "text": "can't say what is exactly not loged so it's not reliable for us so we have to look for another way another way would",
    "start": "2529040",
    "end": "2536920"
  },
  {
    "text": "be map perhaps we can use map to emulate read and can we do it yes we can exactly",
    "start": "2536920",
    "end": "2544319"
  },
  {
    "text": "not everything but we can most things that we can do with read also with map",
    "start": "2544319",
    "end": "2550040"
  },
  {
    "text": "map has the nice property that it's very hard to intercept because for example if I just map um 2 GB of",
    "start": "2550040",
    "end": "2557480"
  },
  {
    "text": "memory um into another location then I can't lock everything I can't lock two",
    "start": "2557480",
    "end": "2563520"
  },
  {
    "text": "gig of memory and send them via um a network interface um MF has the nice property",
    "start": "2563520",
    "end": "2571640"
  },
  {
    "text": "that it works on all regular files so everything what's a regular file can be mapped directly to memory and then I can",
    "start": "2571640",
    "end": "2578559"
  },
  {
    "text": "work with it there are some nasty things if I want to do uh if I want to use for example death random I can't it I can't",
    "start": "2578559",
    "end": "2585040"
  },
  {
    "text": "use any device I can't use any pipe because pipe isn't file so I can't map",
    "start": "2585040",
    "end": "2590119"
  },
  {
    "text": "it so I'm I've got some things I can do not everything but map is enough I can",
    "start": "2590119",
    "end": "2597559"
  },
  {
    "text": "do most things that I have to do so we are looking for an way to",
    "start": "2597559",
    "end": "2605319"
  },
  {
    "text": "completely avoid weed the first first thing is we have to say goodbye to our shell because the shell uses weeds to",
    "start": "2605319",
    "end": "2612160"
  },
  {
    "text": "get your keystrokes as shown above um we need something which directly talks to",
    "start": "2612160",
    "end": "2617599"
  },
  {
    "text": "the network um and directly executes the commands if you um think back of the",
    "start": "2617599",
    "end": "2623400"
  },
  {
    "text": "picture I've shown you if the sshd would execute the commands instead of the shell there would be nothing to lock for",
    "start": "2623400",
    "end": "2630359"
  },
  {
    "text": "cc um um a very nice thing which helps us",
    "start": "2630359",
    "end": "2635520"
  },
  {
    "text": "at this is that the exxis system call doesn't use read internally sometimes um libraries are",
    "start": "2635520",
    "end": "2643599"
  },
  {
    "text": "read after a program is ex um re are read sometimes they are M mapped I'm not",
    "start": "2643599",
    "end": "2649440"
  },
  {
    "text": "really sure which happens when and script languages like python read their thing in but the original exit system",
    "start": "2649440",
    "end": "2657160"
  },
  {
    "text": "call um results in no read system call so Ze can't lock which programs are",
    "start": "2657160",
    "end": "2663119"
  },
  {
    "text": "executed as long as they don't read any data um another thing is that the process",
    "start": "2663119",
    "end": "2670200"
  },
  {
    "text": "name um we can we can mess with that very easily um we can start to renaming",
    "start": "2670200",
    "end": "2675559"
  },
  {
    "text": "things for example VI to date or something like that and that will start",
    "start": "2675559",
    "end": "2680760"
  },
  {
    "text": "giving the forensic examinat a really hard time to make sense out of the zc loog",
    "start": "2680760",
    "end": "2686520"
  },
  {
    "text": "files um so we can read files unnoticed by m mapping then we can possibly",
    "start": "2686520",
    "end": "2693800"
  },
  {
    "text": "execute programs unnoticed unless they don't be too my libraries um since file names are not",
    "start": "2693800",
    "end": "2701319"
  },
  {
    "text": "locked the the names of the files we're reading from we can give the impression of reading certain files for example I",
    "start": "2701319",
    "end": "2708079"
  },
  {
    "text": "create a file temp XXX which looks the contents looks like a etc password VD",
    "start": "2708079",
    "end": "2714559"
  },
  {
    "text": "file and read that um we are cat or what else and the forensic examinator again",
    "start": "2714559",
    "end": "2721280"
  },
  {
    "text": "has a hard time finding out what's being wet there and what's being happening um",
    "start": "2721280",
    "end": "2727720"
  },
  {
    "text": "we and we can give the impression that we're executing programs which we don't for example we can copy a a harmless",
    "start": "2727720",
    "end": "2735359"
  },
  {
    "text": "binary like cat to a name like a binary we aren't supposed to run like Oracle",
    "start": "2735359",
    "end": "2740880"
  },
  {
    "text": "server or whatever and start this uh and again the forensic examiner will have a hard time with that so how did we get",
    "start": "2740880",
    "end": "2748960"
  },
  {
    "text": "all this things together um we wrote this tool kees which does the direct",
    "start": "2748960",
    "end": "2755760"
  },
  {
    "text": "execution um with the encrypted network communication it's m St so avoiding using a shell or",
    "start": "2755760",
    "end": "2763200"
  },
  {
    "text": "any external tools where we can um go without them KS is certainly proof of",
    "start": "2763200",
    "end": "2771520"
  },
  {
    "text": "concept code and what we consider some what Innovative is that it's written in",
    "start": "2771520",
    "end": "2776920"
  },
  {
    "text": "Python it's a network attack tool um which is written in a very high level language and gives us some really nice",
    "start": "2776920",
    "end": "2785040"
  },
  {
    "text": "things um and and possibilities to play with it um and the nice thing is",
    "start": "2785040",
    "end": "2793079"
  },
  {
    "text": "it's very independent on the target platform as long as there's a python",
    "start": "2793079",
    "end": "2798240"
  },
  {
    "text": "interpreter which is usually there because all the redhead tools use Python uh our program can execute there without",
    "start": "2798240",
    "end": "2806000"
  },
  {
    "text": "regard of the used libraries and the used binary format and so on um the keas",
    "start": "2806000",
    "end": "2814400"
  },
  {
    "text": "can do everything you can expect from a basic shell in fact we",
    "start": "2814400",
    "end": "2820319"
  },
  {
    "text": "could give the um ke best client a front end like a shell but because we are",
    "start": "2820319",
    "end": "2825640"
  },
  {
    "text": "programmers and not system administrators we more liked to do function calls instead of typing",
    "start": "2825640",
    "end": "2832520"
  },
  {
    "text": "commands um and it's highly Dynamic it's interesting to note that in the last",
    "start": "2832520",
    "end": "2839000"
  },
  {
    "text": "week in the newest frag the gr published The Tool which is has very similar aim",
    "start": "2839000",
    "end": "2845960"
  },
  {
    "text": "um executing without using the Shell and pushing your code over the network",
    "start": "2845960",
    "end": "2851000"
  },
  {
    "text": "executing it in memory without ever writing it to disk but it has a very different architecture because it's",
    "start": "2851000",
    "end": "2857079"
  },
  {
    "text": "written in C and you have to jump to so many Loops to make something highly dynamic in C um ke uses TCP sockets for",
    "start": "2857079",
    "end": "2865640"
  },
  {
    "text": "networking but also could use standard in or standard out or something else um for example if you have an exploit with",
    "start": "2865640",
    "end": "2872800"
  },
  {
    "text": "still has an open socket or an open whatever you could use that for communication kibas and on top of that",
    "start": "2872800",
    "end": "2879559"
  },
  {
    "text": "socket it implements a crypto layer based on Dy Helman um basically we",
    "start": "2879559",
    "end": "2886079"
  },
  {
    "text": "couldn't use any other form of uh encryption because we have to assume",
    "start": "2886079",
    "end": "2891520"
  },
  {
    "text": "that the initial exploit code so the key server is captured by INF forensic",
    "start": "2891520",
    "end": "2896720"
  },
  {
    "text": "examiner so there's no sense in putting keys into the binary oh it's not really",
    "start": "2896720",
    "end": "2901760"
  },
  {
    "text": "a binary because it's a Python program but that's not that bad because Dy Helman protects against passive attacks",
    "start": "2901760",
    "end": "2908920"
  },
  {
    "text": "and the Honey wall is just a passive device so if you used ify Helman that",
    "start": "2908920",
    "end": "2914400"
  },
  {
    "text": "wouldn't isn't any way that the communication can be decrypted postmortem only a man in the middle",
    "start": "2914400",
    "end": "2921000"
  },
  {
    "text": "attack could break our defy Herman um together with this Diffy Herman we use",
    "start": "2921000",
    "end": "2926079"
  },
  {
    "text": "AES and the crypto layer also provides compression and random length padding so",
    "start": "2926079",
    "end": "2931799"
  },
  {
    "text": "that we um that from the network traffic nobody can guess at the sizes of our",
    "start": "2931799",
    "end": "2940200"
  },
  {
    "text": "commands and guess which commands we might have executed the main problem for",
    "start": "2940200",
    "end": "2946359"
  },
  {
    "text": "implementing the crypto layer was getting entropy since we couldn't use CIS read um which out without being",
    "start": "2946359",
    "end": "2954079"
  },
  {
    "text": "locked by zbec and we couldn't use def random with nmap we had to read from def random and",
    "start": "2954079",
    "end": "2961359"
  },
  {
    "text": "we had to assume that the um data from Death random is locked by zbec and so",
    "start": "2961359",
    "end": "2968920"
  },
  {
    "text": "you know if you have no random data or if the techer knows your random data all your cryptography is already",
    "start": "2968920",
    "end": "2976319"
  },
  {
    "text": "compromised um we countered that by doing something like the DD attack um",
    "start": "2976319",
    "end": "2982920"
  },
  {
    "text": "and hoping that some of our input from def random would be dropped by zc and we did some other things to get some",
    "start": "2982920",
    "end": "2988640"
  },
  {
    "text": "entropy for example we used threat races and we hashed the whole content of VAR",
    "start": "2988640",
    "end": "2995160"
  },
  {
    "text": "and TMP which is slow but should give us some kind of entropy and we use the um",
    "start": "2995160",
    "end": "3001319"
  },
  {
    "text": "the network counters and the um program table and so on so basically we stuffed",
    "start": "3001319",
    "end": "3007000"
  },
  {
    "text": "everything in and hoped something would be at least enough to get random data with we get and forensic examiner bad",
    "start": "3007000",
    "end": "3014480"
  },
  {
    "text": "time and on top of the crypto layer is a python specific key layer which use",
    "start": "3014480",
    "end": "3019799"
  },
  {
    "text": "civilized objects to transfer commands and so on and that is a nice thing with",
    "start": "3019799",
    "end": "3025079"
  },
  {
    "text": "using python I could transfer very complex data between the client and the",
    "start": "3025079",
    "end": "3030839"
  },
  {
    "text": "server um the keyas layer is designed to be as in Cross um but at the moment it",
    "start": "3030839",
    "end": "3037760"
  },
  {
    "text": "isn't implemented um and commands can work on several objects on the server at once so",
    "start": "3037760",
    "end": "3044200"
  },
  {
    "text": "I can several commands in one data package and can basically give the command several parameters like files to",
    "start": "3044200",
    "end": "3050400"
  },
  {
    "text": "work on then Twist on keyas is that the key",
    "start": "3050400",
    "end": "3056880"
  },
  {
    "text": "server just knows one command add command so I have to transfer the key",
    "start": "3056880",
    "end": "3062839"
  },
  {
    "text": "server to the Target host um to get my whole thing running but the the somebody",
    "start": "3062839",
    "end": "3069400"
  },
  {
    "text": "examinate can learn very little about it because just knows this one command at",
    "start": "3069400",
    "end": "3075599"
  },
  {
    "text": "command and then I connect via a cryptographic connection and put push",
    "start": "3075599",
    "end": "3080839"
  },
  {
    "text": "all the intelligence in the server basically um the code I really use in",
    "start": "3080839",
    "end": "3086960"
  },
  {
    "text": "Keyes is um taken from the client serialized at in memory object not at",
    "start": "3086960",
    "end": "3092799"
  },
  {
    "text": "source code and sent to the server where it's added to the name space and memory space of the server and now can us and",
    "start": "3092799",
    "end": "3099880"
  },
  {
    "text": "be executed from the client um I found out that this is also a very nice thing",
    "start": "3099880",
    "end": "3106599"
  },
  {
    "text": "to develop code because you never have to restart your server while development you just edit the client and start the",
    "start": "3106599",
    "end": "3115000"
  },
  {
    "text": "client and it pushes again the new code into the server and execute it it there",
    "start": "3115000",
    "end": "3120280"
  },
  {
    "text": "this means that most of the intelligence and code in K just exists in the Ram at",
    "start": "3120280",
    "end": "3126200"
  },
  {
    "text": "least as long as there's no swapping um commands implemented in our U proof",
    "start": "3126200",
    "end": "3134720"
  },
  {
    "text": "of concept code is reading and writing from files using map so no logging by",
    "start": "3134720",
    "end": "3140280"
  },
  {
    "text": "Zack secure deletion so overwriting the file then truncating it then renaming it",
    "start": "3140280",
    "end": "3146359"
  },
  {
    "text": "and and then deleting it um direct execution via EXC it would be nice to um",
    "start": "3146359",
    "end": "3152480"
  },
  {
    "text": "add something which executes other programs without using the kernel like the userland exit thing but implementing",
    "start": "3152480",
    "end": "3158720"
  },
  {
    "text": "that in Python will be really hard and listing directories and so",
    "start": "3158720",
    "end": "3164920"
  },
  {
    "text": "on so more information and indeep academic discussion of the",
    "start": "3164920",
    "end": "3171680"
  },
  {
    "text": "subject can be found on our paper nose break attacking honey Nets um which was",
    "start": "3171680",
    "end": "3177480"
  },
  {
    "text": "published at the information assurance Workshop in West Point and W the best paper award um and on our my homepage um",
    "start": "3177480",
    "end": "3187200"
  },
  {
    "text": "the URL is down there there also are the slides available and movies of all the",
    "start": "3187200",
    "end": "3193400"
  },
  {
    "text": "demonstrations so if you think the demonstration here was too small the font or something like that you can",
    "start": "3193400",
    "end": "3199520"
  },
  {
    "text": "replay them there so",
    "start": "3199520",
    "end": "3203839"
  },
  {
    "text": "questions no questions",
    "start": "3204960",
    "end": "3208440"
  },
  {
    "text": "address yeah yeah the question was if was a statement that the honeyball",
    "start": "3226920",
    "end": "3232400"
  },
  {
    "text": "doesn't have to have an IP address that's right but at least we can see what IP address the honey net operator",
    "start": "3232400",
    "end": "3239400"
  },
  {
    "text": "put into zag and you also have to provide an IP address for the logging host so you yeah",
    "start": "3239400",
    "end": "3247359"
  },
  {
    "text": "that doesn't have to be the real one but you get some",
    "start": "3247359",
    "end": "3252319"
  },
  {
    "text": "information that's it okay thank you very [Applause]",
    "start": "3253000",
    "end": "3263500"
  },
  {
    "text": "much e",
    "start": "3265359",
    "end": "3269359"
  }
]