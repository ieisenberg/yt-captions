[
  {
    "text": "and produced by the sound of knowledge incorporated",
    "start": "240",
    "end": "5080"
  },
  {
    "text": "you",
    "start": "29840",
    "end": "31920"
  },
  {
    "text": "okay okay well narrows it down a bit",
    "start": "45040",
    "end": "50000"
  },
  {
    "text": "okay let's wake up my machine",
    "start": "51440",
    "end": "57879"
  },
  {
    "text": "what i want to tell you about today is the dangers of",
    "start": "58320",
    "end": "64320"
  },
  {
    "text": "violation of your kernel's integrity",
    "start": "65040",
    "end": "69840"
  },
  {
    "text": "i want to do that with the following points first i want to talk a little bit about uh what's the",
    "start": "70479",
    "end": "76000"
  },
  {
    "text": "um issue that's behind it so why is it a problem how does it",
    "start": "76000",
    "end": "82799"
  },
  {
    "text": "come about i want to talk a little bit about detection",
    "start": "82799",
    "end": "88159"
  },
  {
    "text": "this is not really i'm going to switch",
    "start": "88159",
    "end": "93280"
  },
  {
    "text": "okay does this work better",
    "start": "94240",
    "end": "98880"
  },
  {
    "text": "okay about the detection because um i want to use it in a",
    "start": "99840",
    "end": "106000"
  },
  {
    "text": "in a blackhead way i want to abuse the violation of the integrity in a blackhead way and what i want to do is",
    "start": "106000",
    "end": "112720"
  },
  {
    "text": "avoid detection so how can we avoid detection that's that's what it is about",
    "start": "112720",
    "end": "118240"
  },
  {
    "text": "then i want to introduce some some software i wrote which does precisely did that",
    "start": "118240",
    "end": "125360"
  },
  {
    "text": "by modifying the kernel",
    "start": "126240",
    "end": "129840"
  },
  {
    "text": "at the end i will go it depends a little bit on what your interest is i can go deep into the functioning of",
    "start": "131360",
    "end": "138080"
  },
  {
    "text": "the module or i can go deep into what you could do about it so it depends a",
    "start": "138080",
    "end": "143599"
  },
  {
    "text": "bit of what your interest is where i go the deepest",
    "start": "143599",
    "end": "148400"
  },
  {
    "text": "but first the issue big issue is that that root is almighty",
    "start": "148640",
    "end": "155120"
  },
  {
    "text": "and i'm talking root here because we're talking unix but you can easily swap administrator",
    "start": "155120",
    "end": "160400"
  },
  {
    "text": "for windows much of the same issues supply so",
    "start": "160400",
    "end": "166480"
  },
  {
    "text": "there are lots of opportunities to hack root that's the second problem",
    "start": "166480",
    "end": "172719"
  },
  {
    "text": "finally root can change the kernel so your kernel integrity depends on the fact if root is",
    "start": "173680",
    "end": "180879"
  },
  {
    "text": "being used and if it's easy then you can easily change your kernel",
    "start": "180879",
    "end": "188480"
  },
  {
    "text": "and finally if you use your kernel to detect if there",
    "start": "188560",
    "end": "193599"
  },
  {
    "text": "is any abuse then changing your kernel is a problem",
    "start": "193599",
    "end": "198640"
  },
  {
    "text": "and all together these problems taken together means that a kernel attack can be very effective",
    "start": "198640",
    "end": "205440"
  },
  {
    "text": "to avoid detection",
    "start": "205440",
    "end": "208879"
  },
  {
    "text": "now um the fact that you can hack a kernel and that you can change it and that you can",
    "start": "210840",
    "end": "217120"
  },
  {
    "text": "afford detection that way is not uh something new it's been known for years",
    "start": "217120",
    "end": "222239"
  },
  {
    "text": "and i'm talking like five years maybe 10 years in in theory but even in practical sense it",
    "start": "222239",
    "end": "230159"
  },
  {
    "text": "has been known for years and years there have been articles in fact like three four years ago so it is not a new",
    "start": "230159",
    "end": "236560"
  },
  {
    "text": "problem that raises the question okay why i'm",
    "start": "236560",
    "end": "241599"
  },
  {
    "text": "talking about it here and i've been thinking about is it valid to talk about it here",
    "start": "241599",
    "end": "247200"
  },
  {
    "text": "i came to the conclusion that it is why because there are still issues today",
    "start": "247200",
    "end": "253200"
  },
  {
    "text": "that show that this this problem is not taken that seriously and i um",
    "start": "253200",
    "end": "259040"
  },
  {
    "text": "wanna pass along some arguments that are being used",
    "start": "259040",
    "end": "265440"
  },
  {
    "text": "the first one is that okay if your box is rooted you've lost anyway so",
    "start": "265440",
    "end": "271040"
  },
  {
    "text": "there's no point in trying to protect your kernel because okay you lost",
    "start": "271040",
    "end": "276880"
  },
  {
    "text": "my big question is okay but why is it so easy why every release of solaris because that's",
    "start": "277520",
    "end": "283520"
  },
  {
    "text": "a demonstration i'm giving every release of solaris there are more statues programs",
    "start": "283520",
    "end": "289440"
  },
  {
    "text": "there are more daemons with obscure functions that make it possible for you to hack",
    "start": "289440",
    "end": "295199"
  },
  {
    "text": "root um the second argument it's it's so",
    "start": "295199",
    "end": "301199"
  },
  {
    "text": "sophisticated that uh okay this this risk is not so high it's uh it's uh",
    "start": "301199",
    "end": "306800"
  },
  {
    "text": "beyond the normal script kitty unfortunately it's it's a scriptable",
    "start": "306800",
    "end": "312800"
  },
  {
    "text": "thing once it's programmed it's a scriptable thing",
    "start": "312800",
    "end": "318560"
  },
  {
    "text": "my operating system is closed source so uh this is not a problem for me only linux and the open bsd the freebsd they",
    "start": "320880",
    "end": "327919"
  },
  {
    "text": "have the problem because anyone can look at the kernel source and modify it and that way easily modify the behavior",
    "start": "327919",
    "end": "335759"
  },
  {
    "text": "but that's also not true why every operating system vendor needs people to",
    "start": "335759",
    "end": "343520"
  },
  {
    "text": "use their kernel why to to write device drivers for instance so there's a whole lot of information to",
    "start": "343520",
    "end": "350080"
  },
  {
    "text": "make it very easy to interact with the kernel and there's a whole lot of publication about how the kernel works",
    "start": "350080",
    "end": "355919"
  },
  {
    "text": "so it isn't that difficult and i hope to show that today",
    "start": "355919",
    "end": "361520"
  },
  {
    "text": "and then there's the argument that all the solutions that are there",
    "start": "362320",
    "end": "367840"
  },
  {
    "text": "mostly practical solutions or i mean theoretics theoretical solutions like",
    "start": "367840",
    "end": "374800"
  },
  {
    "text": "all kinds of trusted us kind of solutions are very uh difficult",
    "start": "374800",
    "end": "380080"
  },
  {
    "text": "to work with are or maybe impressible impractical to work with",
    "start": "380080",
    "end": "386400"
  },
  {
    "text": "so that leaves the questions okay why aren't there any um better solutions why isn't there much work in that area",
    "start": "386400",
    "end": "395479"
  },
  {
    "text": "but first over to detection so uh what is detection and and how do we detect an intrusion",
    "start": "397039",
    "end": "403919"
  },
  {
    "text": "well that's general knowledge i mean intrusion detection is now uh more or less a set subject and",
    "start": "403919",
    "end": "412960"
  },
  {
    "text": "most people know the issues involved i've taken here some some",
    "start": "412960",
    "end": "418319"
  },
  {
    "text": "naming from the ids fact generally you can the string is",
    "start": "418479",
    "end": "423919"
  },
  {
    "text": "distinguished between host based and network based so you look at what the host is doing you look at",
    "start": "423919",
    "end": "429919"
  },
  {
    "text": "the files at the processes at all the trills on the host or you look at the network traffic you look at",
    "start": "429919",
    "end": "436639"
  },
  {
    "text": "the connection being made the probes be made and decide based on what you see if it's",
    "start": "436639",
    "end": "442319"
  },
  {
    "text": "legitimate or not or if there's an attack going on or not",
    "start": "442319",
    "end": "448080"
  },
  {
    "text": "from both these uh intrusion detection types you can distinguish",
    "start": "448960",
    "end": "455280"
  },
  {
    "text": "several ways they work there's misuse detection so that's using",
    "start": "455280",
    "end": "461039"
  },
  {
    "text": "something in a way you weren't allowed to anomaly detection that's detecting",
    "start": "461039",
    "end": "468160"
  },
  {
    "text": "behavior that's outside the normal expected behavior and there's general",
    "start": "468160",
    "end": "474080"
  },
  {
    "text": "system health monitoring like is it operating like it should do all the friction work",
    "start": "474080",
    "end": "482000"
  },
  {
    "text": "things like that if you look at all these forms of detections",
    "start": "482000",
    "end": "487280"
  },
  {
    "text": "they all use information that comes from the kernel",
    "start": "487280",
    "end": "492440"
  },
  {
    "text": "so what do they use you have all the drills they are written from the kernel to the file system",
    "start": "495360",
    "end": "502720"
  },
  {
    "text": "you have system monitoring like the process behavior",
    "start": "502720",
    "end": "508720"
  },
  {
    "text": "of integrity checking checking if",
    "start": "508720",
    "end": "514399"
  },
  {
    "text": "a baseline still exists if the current system",
    "start": "514399",
    "end": "519518"
  },
  {
    "text": "compares to the baseline that was some time in in the past",
    "start": "519519",
    "end": "524959"
  },
  {
    "text": "named secure and um you have network protocol sniffing and",
    "start": "524959",
    "end": "530720"
  },
  {
    "text": "you try to reconstruct the state that the systems had",
    "start": "530720",
    "end": "535839"
  },
  {
    "text": "so what are reasons to hide we have the blackhead the blackhead wants to hide his tools",
    "start": "537680",
    "end": "543440"
  },
  {
    "text": "his backdoors his whatever his sniffer locks",
    "start": "543440",
    "end": "548800"
  },
  {
    "text": "the white hat can also have a reason to protect or hide stuff maybe i want to hide my host intrusion",
    "start": "548800",
    "end": "555600"
  },
  {
    "text": "detection software or maybe i want to protect",
    "start": "555600",
    "end": "561760"
  },
  {
    "text": "my kernel through some form of hiding",
    "start": "561760",
    "end": "567120"
  },
  {
    "text": "okay we have all kinds of tools to interact with the kernel to figure out",
    "start": "568800",
    "end": "574080"
  },
  {
    "text": "what is going on and to do our detection base our detection on",
    "start": "574080",
    "end": "579120"
  },
  {
    "text": "it so first the most well-known tool is tripwire it's an integrity checking tool",
    "start": "579120",
    "end": "585120"
  },
  {
    "text": "that that tells us what the state of the system is you have process accounting how many",
    "start": "585120",
    "end": "590160"
  },
  {
    "text": "resources are people using um you have auditing trill software that",
    "start": "590160",
    "end": "595279"
  },
  {
    "text": "analyzes the other thrills and then you have the general tools on",
    "start": "595279",
    "end": "600720"
  },
  {
    "text": "your system like netstat or ps that show you information about the system",
    "start": "600720",
    "end": "606880"
  },
  {
    "text": "and what do we want to hide if you think about a system and you think okay i'm",
    "start": "608560",
    "end": "614560"
  },
  {
    "text": "i want to be on this system but i don't want to be seen by anyone at all so what",
    "start": "614560",
    "end": "619920"
  },
  {
    "text": "do i not want to be seen of my activities of course my process if i'm running a",
    "start": "619920",
    "end": "626079"
  },
  {
    "text": "backdoor process i don't want to see the process i don't want the administrator to see the process",
    "start": "626079",
    "end": "633360"
  },
  {
    "text": "i want to install back doors so that when they are run their behavior is different from the original i don't want",
    "start": "633360",
    "end": "639760"
  },
  {
    "text": "people to see that you can go on there are system logging there are",
    "start": "639760",
    "end": "646399"
  },
  {
    "text": "all kinds of derivative behaviors that are not directly but",
    "start": "646399",
    "end": "652000"
  },
  {
    "text": "file time timestamp modifications on files that you touched",
    "start": "652000",
    "end": "658680"
  },
  {
    "text": "to take a specific example because it's um i don't know it speaks to the",
    "start": "662240",
    "end": "667440"
  },
  {
    "text": "imagination a little bit because this is the tool to use to see if your system is still",
    "start": "667440",
    "end": "673440"
  },
  {
    "text": "healthy and that's tripwire and as i said tripwire is an integrity checking tool",
    "start": "673440",
    "end": "680320"
  },
  {
    "text": "it does this by the following process it looks at a file the properties the",
    "start": "680320",
    "end": "687600"
  },
  {
    "text": "content takes all these features as one big set of data",
    "start": "687600",
    "end": "694800"
  },
  {
    "text": "and creates or calculates a hash show for this and it stores this hash",
    "start": "694800",
    "end": "700399"
  },
  {
    "text": "again cryptographically protected",
    "start": "700399",
    "end": "704560"
  },
  {
    "text": "so if we want to create a system where tripwire is still",
    "start": "709519",
    "end": "716320"
  },
  {
    "text": "calculating the correct hashes but the system behavior is modified",
    "start": "716320",
    "end": "722000"
  },
  {
    "text": "we can do that by for example modifying a kernel call called exec fee",
    "start": "722000",
    "end": "729360"
  },
  {
    "text": "this call is used to execute programs what tripwire is doing when it's trying",
    "start": "729360",
    "end": "734800"
  },
  {
    "text": "to calculate a hash is not using the exact vehicle but it uses the open call",
    "start": "734800",
    "end": "740160"
  },
  {
    "text": "to get the contents of the file if i redirect the exact fee for a",
    "start": "740160",
    "end": "745839"
  },
  {
    "text": "specific file to another place um but i don't read directly open then",
    "start": "745839",
    "end": "751440"
  },
  {
    "text": "tripwire will always get the original but when you execute something it will get a modified one",
    "start": "751440",
    "end": "759839"
  },
  {
    "text": "before we go into how do we modify a kernel we have to realize what a kernel is now what is it doing",
    "start": "763200",
    "end": "771360"
  },
  {
    "text": "basically the kernel is is running your system",
    "start": "771360",
    "end": "776399"
  },
  {
    "text": "and it offers its services to the user land to the processes that you can run",
    "start": "776399",
    "end": "781680"
  },
  {
    "text": "on the system what does it mean you can ask it to create a new process or you",
    "start": "781680",
    "end": "788320"
  },
  {
    "text": "can ask it to give you access to a certain device for",
    "start": "788320",
    "end": "795279"
  },
  {
    "text": "instance the hard disk raw driver device it takes care for you",
    "start": "795279",
    "end": "802240"
  },
  {
    "text": "of the separation of privileges and make sure that if you're in a certain privileged process that you can't access",
    "start": "802240",
    "end": "808240"
  },
  {
    "text": "another privilege process you know on another privileged level",
    "start": "808240",
    "end": "814000"
  },
  {
    "text": "generally the kernel is extensible you can add new protocols you can add new file systems",
    "start": "814000",
    "end": "820639"
  },
  {
    "text": "and often or mostly in the case of unix it doesn't have internal privileges so",
    "start": "820639",
    "end": "827120"
  },
  {
    "text": "internally it's only on one privilege level which is the highest and it can do",
    "start": "827120",
    "end": "832399"
  },
  {
    "text": "all and what you can do in new zealand is",
    "start": "832399",
    "end": "837680"
  },
  {
    "text": "ask at the colonel what the status of the system you can ask about processes or you can ask about the",
    "start": "837680",
    "end": "844720"
  },
  {
    "text": "network state you can see what connections there are or you can see where processors are listening",
    "start": "844720",
    "end": "851040"
  },
  {
    "text": "and you can do this through three major means one is through system calls",
    "start": "851040",
    "end": "856399"
  },
  {
    "text": "one is through devices and the third is through the proc file",
    "start": "856399",
    "end": "861440"
  },
  {
    "text": "system this is a special means of interacting with",
    "start": "861440",
    "end": "867120"
  },
  {
    "text": "most of the kernel state",
    "start": "867120",
    "end": "870920"
  },
  {
    "text": "so how can we modify the behavior of the kernel based on what it offers us",
    "start": "872480",
    "end": "880399"
  },
  {
    "text": "one of the interfaces is directly to the memory you can write directly into kernel memory if you're root",
    "start": "881519",
    "end": "887839"
  },
  {
    "text": "so you can modify any structures any code space maybe even",
    "start": "887839",
    "end": "894880"
  },
  {
    "text": "of a kernel by directly writing into that space",
    "start": "894880",
    "end": "900160"
  },
  {
    "text": "or you can create no kernel you can just build a new kernel and replace it and ex reboot",
    "start": "900800",
    "end": "906639"
  },
  {
    "text": "the system and it will run your new kernel and it will do the new things but one of the most well-known",
    "start": "906639",
    "end": "913199"
  },
  {
    "text": "ways to do it is a loadable kernel module",
    "start": "913199",
    "end": "917120"
  },
  {
    "text": "loadable modules are a design that have been added to unix",
    "start": "918240",
    "end": "924320"
  },
  {
    "text": "to make it more extensible so it's uh in effect it's a good design principle",
    "start": "924320",
    "end": "930880"
  },
  {
    "text": "to make things modular uh it helps it you don't waste resources if they're not",
    "start": "930880",
    "end": "936320"
  },
  {
    "text": "needed it makes the design clear",
    "start": "936320",
    "end": "941839"
  },
  {
    "text": "it's it's general a good principle the way it works is you compile your",
    "start": "942160",
    "end": "947199"
  },
  {
    "text": "code you ask the kernel to allocate memory for it it will resolve all the symbols",
    "start": "947199",
    "end": "953120"
  },
  {
    "text": "in the kernel against your module and vice versa and when that's done the init function is",
    "start": "953120",
    "end": "958800"
  },
  {
    "text": "called of your code and you can start initializing and",
    "start": "958800",
    "end": "963839"
  },
  {
    "text": "bring it into the journal so um",
    "start": "963839",
    "end": "970959"
  },
  {
    "text": "to show what the effect is of uh of such a module",
    "start": "970959",
    "end": "976000"
  },
  {
    "text": "i wrote a kernel module for solaris that basically does all the hiding that you want",
    "start": "976000",
    "end": "982720"
  },
  {
    "text": "is capable of fooling tripwire and it's meant to demonstrate the serious",
    "start": "982800",
    "end": "989600"
  },
  {
    "text": "effects that such a module can have i used solaris because it's a free uh",
    "start": "989600",
    "end": "999040"
  },
  {
    "text": "or no it's not free it's it's almost free but fairly",
    "start": "999040",
    "end": "1004240"
  },
  {
    "text": "widely used commercial operating system",
    "start": "1004240",
    "end": "1008639"
  },
  {
    "text": "it's closed source it will be open source fairly soon but still closed source",
    "start": "1009360",
    "end": "1015120"
  },
  {
    "text": "um i meant it to be easy to use because there are so as i said before there are",
    "start": "1015120",
    "end": "1021600"
  },
  {
    "text": "lots of places on the internet that you can find documentation about kernel modules but are not so many modules that",
    "start": "1021600",
    "end": "1027839"
  },
  {
    "text": "are really ready to use you have to do a lot of work to get them into a fashion that you",
    "start": "1027839",
    "end": "1035438"
  },
  {
    "text": "can use it reliability i try to demonstrate several ways to",
    "start": "1035439",
    "end": "1042240"
  },
  {
    "text": "change the kernel so the the most well-known way is to change system calls",
    "start": "1042240",
    "end": "1048000"
  },
  {
    "text": "i try to use some other ways and i made it open source so you can look at it play with it and see the",
    "start": "1048000",
    "end": "1055039"
  },
  {
    "text": "effect so how do we start um the first thing is",
    "start": "1055039",
    "end": "1061280"
  },
  {
    "text": "that you have to think about okay what what do you want to fool where do you want to hide we talked about it a bit",
    "start": "1061280",
    "end": "1067360"
  },
  {
    "text": "earlier and then you have to use look at a kernel and see how it functions and how",
    "start": "1067360",
    "end": "1073200"
  },
  {
    "text": "it keeps track of what its state is and and what it's doing and",
    "start": "1073200",
    "end": "1079039"
  },
  {
    "text": "there are three main items that it's using for this uh the first one is this is a switch",
    "start": "1079039",
    "end": "1084240"
  },
  {
    "text": "table a switch table is basically a big array uh of pointers to functions",
    "start": "1084240",
    "end": "1091280"
  },
  {
    "text": "so you give them all all the functions you give a number",
    "start": "1091280",
    "end": "1096320"
  },
  {
    "text": "and you say okay i want to call a certain function and i call number three and you index in the array",
    "start": "1096320",
    "end": "1103520"
  },
  {
    "text": "and call the specific for instance system call but there are other switch tables in the kernel",
    "start": "1103520",
    "end": "1110000"
  },
  {
    "text": "another one is linked lists which is really good for extensibility because you just link in",
    "start": "1110000",
    "end": "1115840"
  },
  {
    "text": "more objects for whatever type of object you have",
    "start": "1115840",
    "end": "1121120"
  },
  {
    "text": "and global variables are also very useful",
    "start": "1121120",
    "end": "1126000"
  },
  {
    "text": "so this is what i just described you can you can change function pointers in the switch table",
    "start": "1127440",
    "end": "1132480"
  },
  {
    "text": "you just override an entry in the array with a new function that you wrote and",
    "start": "1132480",
    "end": "1138160"
  },
  {
    "text": "you take care of saving the old function pointer and you can reuse it in your own",
    "start": "1138160",
    "end": "1143200"
  },
  {
    "text": "code hiding in linked lists is also fairly easy um",
    "start": "1143200",
    "end": "1151360"
  },
  {
    "text": "it's only not so easy if the colonel wants to walk that list regularly for",
    "start": "1151360",
    "end": "1157120"
  },
  {
    "text": "tasks that are essential um if they are tasks that you don't want then it's good",
    "start": "1157120",
    "end": "1162720"
  },
  {
    "text": "for instance the load of kernel module modules themselves are",
    "start": "1162720",
    "end": "1168720"
  },
  {
    "text": "their state is kept in a linked list so if i want to hide the module that i'm",
    "start": "1168720",
    "end": "1174559"
  },
  {
    "text": "loading all i have to do is make sure that the linked list no longer refers to my module i just",
    "start": "1174559",
    "end": "1182240"
  },
  {
    "text": "readjust the pointers of the linked list to cross over my own module and it is no",
    "start": "1182240",
    "end": "1187360"
  },
  {
    "text": "longer visual visible in the system",
    "start": "1187360",
    "end": "1191720"
  },
  {
    "text": "so some other stuff you want to hide you want to hide processes so how do you",
    "start": "1196160",
    "end": "1202160"
  },
  {
    "text": "find processes in your system as i said you have the proc file system which is uh very much geared to to interact the",
    "start": "1202160",
    "end": "1209200"
  },
  {
    "text": "interaction with processors and you have to direct kernel memory both are used uh by different programs",
    "start": "1209200",
    "end": "1216320"
  },
  {
    "text": "in your system for instance elsov which is a program to inspect a lot of uh kernel",
    "start": "1216320",
    "end": "1223360"
  },
  {
    "text": "state is using km on solaris but most of us tools themselves use proc",
    "start": "1223360",
    "end": "1229919"
  },
  {
    "text": "um you want to hide the backdoors the thing i talked about earlier",
    "start": "1229919",
    "end": "1235520"
  },
  {
    "text": "and you want to hide files you want to store stuff on the system you want to have your host-based intrusion detection",
    "start": "1235520",
    "end": "1242480"
  },
  {
    "text": "system maybe and you want to hide those files",
    "start": "1242480",
    "end": "1247640"
  },
  {
    "text": "um this is a a little bit of a code demo of how the exact",
    "start": "1248640",
    "end": "1255600"
  },
  {
    "text": "function is done i don't know if it's really clear because more of more or less cut and",
    "start": "1255600",
    "end": "1261520"
  },
  {
    "text": "paste so it might be a bit hard to read",
    "start": "1261520",
    "end": "1266559"
  },
  {
    "text": "but what you see here is",
    "start": "1266559",
    "end": "1270880"
  },
  {
    "text": "the way the prototype is defined on the solar system so you can just read",
    "start": "1271679",
    "end": "1277039"
  },
  {
    "text": "the kernel headers and you see okay there's an exact function and these are its parameters so you write a function",
    "start": "1277039",
    "end": "1283679"
  },
  {
    "text": "with the same interface",
    "start": "1283679",
    "end": "1286799"
  },
  {
    "text": "what i want to do is i want to have a new uh exact fee",
    "start": "1289360",
    "end": "1296080"
  },
  {
    "text": "i save the pointer to the original in that switch table i write my own i put",
    "start": "1296080",
    "end": "1301200"
  },
  {
    "text": "my function pointer my new function pointer in the switch table and in my own code i just called your the original",
    "start": "1301200",
    "end": "1307520"
  },
  {
    "text": "so i don't have to code the whole exact fee function from scratch i just do some",
    "start": "1307520",
    "end": "1313919"
  },
  {
    "text": "preprocessing call the original and maybe do some post processing and um",
    "start": "1313919",
    "end": "1319200"
  },
  {
    "text": "that's a really nice way to do it because if there's a system upgrade and the behavior modifier is modified there's a",
    "start": "1319200",
    "end": "1325600"
  },
  {
    "text": "patch a kernel patch then it still keeps working because the patch is in the original code and",
    "start": "1325600",
    "end": "1332080"
  },
  {
    "text": "the module doesn't need to know it",
    "start": "1332080",
    "end": "1335360"
  },
  {
    "text": "so what do we want to do in this exit fee function um in the in the new one we we put in our",
    "start": "1337840",
    "end": "1344080"
  },
  {
    "text": "module we want to test if the binary we are",
    "start": "1344080",
    "end": "1350159"
  },
  {
    "text": "calling is the one we want a backdoor for so if is this the one that we want to",
    "start": "1350159",
    "end": "1356320"
  },
  {
    "text": "redirect if it's not then okay we just pass on to the original",
    "start": "1356320",
    "end": "1362480"
  },
  {
    "text": "if it is we want to change the argument that's passed to the exact vehicle",
    "start": "1362480",
    "end": "1368080"
  },
  {
    "text": "to the new program uh the one that we backdoored",
    "start": "1368080",
    "end": "1373120"
  },
  {
    "text": "also there needs to be some checks and some changes in your module to make sure that you can for instance call",
    "start": "1373280",
    "end": "1380159"
  },
  {
    "text": "a backdoor that's in the hidden section of your file system",
    "start": "1380159",
    "end": "1384720"
  },
  {
    "text": "now this is a whole lot of code it's not very clear maybe in the in the handout i'm not sure but basically what it says",
    "start": "1385440",
    "end": "1392400"
  },
  {
    "text": "is okay if you're in the kernel look up the argument test it against our",
    "start": "1392400",
    "end": "1399360"
  },
  {
    "text": "own internal linked list so the back doors there can be multiple backdoors and they are put on a linked list and",
    "start": "1399360",
    "end": "1406080"
  },
  {
    "text": "you just compare until you find a match and if you find a match",
    "start": "1406080",
    "end": "1411919"
  },
  {
    "text": "you replace the argument and call the original",
    "start": "1411919",
    "end": "1418000"
  },
  {
    "text": "so it's it's really fairly straightforward and what happens is this if on my linked list there's an entry",
    "start": "1418000",
    "end": "1424480"
  },
  {
    "text": "that says uh the backdoor is oh this is ha",
    "start": "1424480",
    "end": "1430559"
  },
  {
    "text": "okay this is a bug in my sheet the top line that says my login is wrong",
    "start": "1430559",
    "end": "1438000"
  },
  {
    "text": "it should say bin login because we're not looking for my login",
    "start": "1438000",
    "end": "1443039"
  },
  {
    "text": "we're not looking for someone trying to execute my backdoor but we are looking for someone to execute the original",
    "start": "1443039",
    "end": "1450799"
  },
  {
    "text": "if it finds the original or if it matches it will replace and will execute actually been my login",
    "start": "1450799",
    "end": "1458480"
  },
  {
    "text": "but the open will still open bin login so tripwire will still do the right work",
    "start": "1458480",
    "end": "1465759"
  },
  {
    "text": "now i will fairly quickly go over some calls that i",
    "start": "1466559",
    "end": "1471760"
  },
  {
    "text": "changed as i said system calls is the most popular way to do it if you look at all",
    "start": "1471760",
    "end": "1477760"
  },
  {
    "text": "the things you can find on the net about kernel modifications they all use system",
    "start": "1477760",
    "end": "1482960"
  },
  {
    "text": "call modifications i only used these six um they are",
    "start": "1482960",
    "end": "1488080"
  },
  {
    "text": "only to do with uh the exact uh redirection and with process hiding",
    "start": "1488080",
    "end": "1493520"
  },
  {
    "text": "so um a feature that i build in is that if a process is hidden and it forks off",
    "start": "1493520",
    "end": "1498960"
  },
  {
    "text": "a new child the child will automatically also be hidden so that's fairly easy if you have a back",
    "start": "1498960",
    "end": "1504559"
  },
  {
    "text": "door that's hidden and you come in and and the shell is spawned then she'll also be hidden automatically",
    "start": "1504559",
    "end": "1512000"
  },
  {
    "text": "the kill in the sick cube are signals that are sent to the back door uh sorry to the um process and it's um",
    "start": "1512000",
    "end": "1521440"
  },
  {
    "text": "it's to to um catch a trick that was suggested by thomas pacheck",
    "start": "1521440",
    "end": "1526720"
  },
  {
    "text": "is to send a signal to all pids that you can imagine so you go from",
    "start": "1526720",
    "end": "1532080"
  },
  {
    "text": "zero to uh 65 000 and if the process",
    "start": "1532080",
    "end": "1538480"
  },
  {
    "text": "responds differently than what you'd expect because there is no pit in the profile system for instance then you",
    "start": "1538480",
    "end": "1544320"
  },
  {
    "text": "have found a hidden process by catching kill and secure you can just say okay there's no process and you",
    "start": "1544320",
    "end": "1550880"
  },
  {
    "text": "won't find it what i did replace a lot is the file system calls",
    "start": "1550880",
    "end": "1557840"
  },
  {
    "text": "there are switch tables for different file systems so you can extend it and you can add new file systems",
    "start": "1557840",
    "end": "1563919"
  },
  {
    "text": "for instance you have the proc file system you have ufs which is the default normal file system you can all kind of have all",
    "start": "1563919",
    "end": "1571120"
  },
  {
    "text": "kinds of journaling file systems nfs file system",
    "start": "1571120",
    "end": "1576640"
  },
  {
    "text": "i had to do quite a lot of these because of two issues one is the general file",
    "start": "1577840",
    "end": "1583120"
  },
  {
    "text": "system hiding but there's also a feature to survive a reboot and that needed a",
    "start": "1583120",
    "end": "1588400"
  },
  {
    "text": "few more and then there are a few others um",
    "start": "1588400",
    "end": "1593600"
  },
  {
    "text": "def kmm to to hide from elsov you need to catch the mm read",
    "start": "1593600",
    "end": "1599039"
  },
  {
    "text": "and for netstat it will also hide a connection on a certain port",
    "start": "1599039",
    "end": "1604880"
  },
  {
    "text": "here it has still two functions but i changed the code and it's now only one it's only the last",
    "start": "1605279",
    "end": "1612159"
  },
  {
    "text": "so what is doing with all these functions um as i said first process hiding from proc",
    "start": "1612159",
    "end": "1619440"
  },
  {
    "text": "and from kfkm for all the processes that haven't hit a flag",
    "start": "1619440",
    "end": "1624480"
  },
  {
    "text": "if you look at the kernel headers you get a description of what the process structures internally",
    "start": "1624480",
    "end": "1632480"
  },
  {
    "text": "look like and most structures have a flag field and if you look at the definitions of",
    "start": "1632480",
    "end": "1639360"
  },
  {
    "text": "the flags then you often find that not all flags are in use so you can use these flags that are not",
    "start": "1639360",
    "end": "1644960"
  },
  {
    "text": "used or at least you hope they are not in use because you don't know for sure they are just not ending in the kernel",
    "start": "1644960",
    "end": "1650799"
  },
  {
    "text": "header but it's a good signal that it won't be you can use these flags for your own",
    "start": "1650799",
    "end": "1656720"
  },
  {
    "text": "purposes so you can put a flag that it's a hidden process and it makes",
    "start": "1656720",
    "end": "1662640"
  },
  {
    "text": "it easy to check on other places if this is a hidden process or not okay fork as i said will hide children",
    "start": "1662640",
    "end": "1670480"
  },
  {
    "text": "signals to hidden processes will fill if you use netstat",
    "start": "1670480",
    "end": "1677200"
  },
  {
    "text": "it collects information about the state of the network interfaces uh it does this by sending a",
    "start": "1677200",
    "end": "1683279"
  },
  {
    "text": "message on what's called streams streams is uh a way that's um i think cisv unix",
    "start": "1683279",
    "end": "1692320"
  },
  {
    "text": "where you send messages on a queue and everyone on the queue can look at a message if it's for him or",
    "start": "1692320",
    "end": "1698480"
  },
  {
    "text": "her and maybe reply to it so what the module does is it goes sit on",
    "start": "1698480",
    "end": "1705039"
  },
  {
    "text": "the end of the queue and watches all the messages go through and if it sees a reply to a net stock",
    "start": "1705039",
    "end": "1710720"
  },
  {
    "text": "inquiry it will parse the code and remove some entries with a certain port",
    "start": "1710720",
    "end": "1718480"
  },
  {
    "text": "file and directory hiding is done by prefix it's also done with uh with a flag to",
    "start": "1719440",
    "end": "1726880"
  },
  {
    "text": "make uh to create um a system where not every directory listing and every file",
    "start": "1726880",
    "end": "1732799"
  },
  {
    "text": "access needs to be checked with only those where the directory has also has a flag so that",
    "start": "1732799",
    "end": "1739840"
  },
  {
    "text": "what you can do in that way is is make sure that the timing differences between a system with the module and the system",
    "start": "1739840",
    "end": "1745919"
  },
  {
    "text": "without a module is not that different if you have big directories where you have to go through all the",
    "start": "1745919",
    "end": "1751679"
  },
  {
    "text": "files in the system to see if your prefix is there it can show up as a clear time difference",
    "start": "1751679",
    "end": "1758320"
  },
  {
    "text": "um okay stat is changed to",
    "start": "1758320",
    "end": "1763039"
  },
  {
    "text": "to to um the main reason is is for a property that's on a directory that says how many",
    "start": "1763520",
    "end": "1770960"
  },
  {
    "text": "directories and files are in there and that's used by tripwire to uh so you",
    "start": "1770960",
    "end": "1776640"
  },
  {
    "text": "want to change that and finally it's made reboot proof um and that's",
    "start": "1776640",
    "end": "1782880"
  },
  {
    "text": "one distinction between a system where you use loadable kernel modules and it's not reboot proof is that you",
    "start": "1782880",
    "end": "1789440"
  },
  {
    "text": "don't need to touch any system file at all you don't need to change any files at all to to do what you want to do what",
    "start": "1789440",
    "end": "1796799"
  },
  {
    "text": "i described if you want to make it reboot proof you at least need to change one file",
    "start": "1796799",
    "end": "1801919"
  },
  {
    "text": "somewhere in the system because when it's booting up either you want to have the kernel itself changed",
    "start": "1801919",
    "end": "1808399"
  },
  {
    "text": "or you want to have some system file changed so the kernel will at some point load",
    "start": "1808399",
    "end": "1813919"
  },
  {
    "text": "your rogue module so how that",
    "start": "1813919",
    "end": "1818960"
  },
  {
    "text": "did i implement this reboot proof feature i decided to replace one of the system",
    "start": "1818960",
    "end": "1825360"
  },
  {
    "text": "modules solaris is a completely modular kernel almost all the stuff that the kernel",
    "start": "1825360",
    "end": "1831440"
  },
  {
    "text": "does is in a module so it needs to load like at least 100 modules for it to function",
    "start": "1831440",
    "end": "1837360"
  },
  {
    "text": "normally so it's easy to find some module that you can replace with your own",
    "start": "1837360",
    "end": "1844960"
  },
  {
    "text": "so what you do is you move the original module to the hidden prefix name so that one will",
    "start": "1845840",
    "end": "1852080"
  },
  {
    "text": "be hidden if the module is loaded then you put your module in its place",
    "start": "1852080",
    "end": "1857760"
  },
  {
    "text": "then you have to do a whole lot of magic to make for instance tripwire still believe that your module is the original which is a",
    "start": "1857760",
    "end": "1864960"
  },
  {
    "text": "lot more work than it is when you just want to hide",
    "start": "1864960",
    "end": "1870720"
  },
  {
    "text": "and then when the kernel boots it will load your module instead of the original and your module can do a load of the",
    "start": "1870960",
    "end": "1877679"
  },
  {
    "text": "original so that way it will survive for reboot",
    "start": "1877679",
    "end": "1883840"
  },
  {
    "text": "so now i prepared a little demonstration what i will do is i have two systems",
    "start": "1883840",
    "end": "1891279"
  },
  {
    "text": "what you see here is the solera system um i hope it's a bit readable it's a bit uh",
    "start": "1891279",
    "end": "1899919"
  },
  {
    "text": "strange characters and on this system i will um shortly show uh the attacking",
    "start": "1899919",
    "end": "1907840"
  },
  {
    "text": "system which is the laptop on top um what i use is a standard remote",
    "start": "1907840",
    "end": "1913039"
  },
  {
    "text": "exploit for solar 7 it's a cmsd exploit and i will use that to copy in the kit",
    "start": "1913039",
    "end": "1919360"
  },
  {
    "text": "the the kernel module kit to the solar system",
    "start": "1919360",
    "end": "1924480"
  },
  {
    "text": "install it and show you from both systems what you can see and you will see that on the solar system there is",
    "start": "1924480",
    "end": "1930320"
  },
  {
    "text": "not much you see and on the attacking system you can see your module",
    "start": "1930320",
    "end": "1935440"
  },
  {
    "text": "then we'll do the reboot check also",
    "start": "1935440",
    "end": "1939039"
  },
  {
    "text": "okay so this is the attacking system um to show you the exploit it's",
    "start": "1947039",
    "end": "1954158"
  },
  {
    "text": "quite simple it's just uh you see msdx with some arguments and what it will do is it will r copy the attacking code",
    "start": "1954240",
    "end": "1961600"
  },
  {
    "text": "from the attacking system to the temp directory and start a backdoor",
    "start": "1961600",
    "end": "1967440"
  },
  {
    "text": "so all you have to do is start this and hope it works",
    "start": "1971600",
    "end": "1978880"
  },
  {
    "text": "okay so that this was a simple exploit right this is just uh standard stuff um",
    "start": "1989679",
    "end": "1996399"
  },
  {
    "text": "i'm now logged in on the back door port so the exploit and the back door i just",
    "start": "1996399",
    "end": "2001440"
  },
  {
    "text": "took from internet yesterday so the next step is okay i'll",
    "start": "2001440",
    "end": "2006960"
  },
  {
    "text": "switch to uh the temp directory you also see all the time they're not found but that's because it's a lame",
    "start": "2006960",
    "end": "2012799"
  },
  {
    "text": "backdoor normally you just have a shell um",
    "start": "2012799",
    "end": "2018240"
  },
  {
    "text": "so next step i will copy the kit from from the attacking computer",
    "start": "2018240",
    "end": "2026039"
  },
  {
    "text": "nope",
    "start": "2034480",
    "end": "2037480"
  },
  {
    "text": "okay what you see here is uh okay the kit i just uh took it over it's just a binary kit",
    "start": "2058000",
    "end": "2063679"
  },
  {
    "text": "compiled um you see um",
    "start": "2063679",
    "end": "2068720"
  },
  {
    "text": "let me see if i can point there are a few scripts um basically the only one that's interesting is to",
    "start": "2068720",
    "end": "2074960"
  },
  {
    "text": "install perm there's a permanent and a single time single shot module",
    "start": "2074960",
    "end": "2082638"
  },
  {
    "text": "basically what this will this will do is uh the whole process that i described of replacing the uh the original",
    "start": "2087520",
    "end": "2095519"
  },
  {
    "text": "kernel module from solaris it will uh install also the single shot one for the",
    "start": "2095760",
    "end": "2100800"
  },
  {
    "text": "current time because you don't necessarily want to reboot",
    "start": "2100800",
    "end": "2106000"
  },
  {
    "text": "it will also hide install a backdoor of login all this will do is show a banner above",
    "start": "2106000",
    "end": "2112320"
  },
  {
    "text": "the login prompt so that you can see that's not running the original before i do this",
    "start": "2112320",
    "end": "2118320"
  },
  {
    "text": "i first want to show on this system it's still a bit harder",
    "start": "2118320",
    "end": "2123920"
  },
  {
    "text": "that we have tripwire on this system installed",
    "start": "2123920",
    "end": "2130680"
  },
  {
    "text": "now the whole screen will scroll but somewhere there will be a line saying no violations",
    "start": "2134000",
    "end": "2140559"
  },
  {
    "text": "so and i just set it for the specific directories and stuff that i'm using um and we'll",
    "start": "2140880",
    "end": "2146800"
  },
  {
    "text": "show in the end that if you unhide it that it will find it",
    "start": "2146800",
    "end": "2153440"
  },
  {
    "text": "okay so install perms just one enter um what i want to do now first is",
    "start": "2154079",
    "end": "2161119"
  },
  {
    "text": "still hide the back door that i'm running now so i have to find it",
    "start": "2161119",
    "end": "2167440"
  },
  {
    "text": "oops",
    "start": "2168560",
    "end": "2171560"
  },
  {
    "text": "this is not handy with mine",
    "start": "2174560",
    "end": "2179320"
  },
  {
    "text": "so the process of the backdoors is pid 315.",
    "start": "2188320",
    "end": "2194880"
  },
  {
    "text": "i can also see that here",
    "start": "2194880",
    "end": "2199160"
  },
  {
    "text": "oops",
    "start": "2205520",
    "end": "2207839"
  },
  {
    "text": "okay so now i give this command",
    "start": "2210560",
    "end": "2215680"
  },
  {
    "text": "oh yeah",
    "start": "2215680",
    "end": "2219160"
  },
  {
    "text": "okay it's gone so what i did here was with the mod control i said hide this this pid",
    "start": "2228720",
    "end": "2235520"
  },
  {
    "text": "and for the solar system now it's hidden so the only window that you have is during the attack if you have normal",
    "start": "2235520",
    "end": "2242079"
  },
  {
    "text": "house-based intrusion detection that would detect the standard exploits then okay",
    "start": "2242079",
    "end": "2247680"
  },
  {
    "text": "this would have been a time that it could already detect the attack but from this moment on i will be unable to",
    "start": "2247680",
    "end": "2254880"
  },
  {
    "text": "um this module installs itself in etc",
    "start": "2254880",
    "end": "2260800"
  },
  {
    "text": "skl whoops",
    "start": "2260800",
    "end": "2266560"
  },
  {
    "text": "i forgot to hide myself",
    "start": "2266560",
    "end": "2270520"
  },
  {
    "text": "so what we see now is the difference is here there are three programs now",
    "start": "2280480",
    "end": "2285599"
  },
  {
    "text": "suddenly here there's some hide me this is the directory with the hidden stuff",
    "start": "2285599",
    "end": "2290880"
  },
  {
    "text": "um well let's use expect here wait a minute i'll start another show",
    "start": "2290880",
    "end": "2298680"
  },
  {
    "text": "stop okay still not there",
    "start": "2305359",
    "end": "2313800"
  },
  {
    "text": "right tripwire still doesn't see anything",
    "start": "2322640",
    "end": "2326480"
  },
  {
    "text": "what happens if i",
    "start": "2327680",
    "end": "2330640"
  },
  {
    "text": "oops",
    "start": "2334960",
    "end": "2337960"
  },
  {
    "text": "okay the login is backdoor but tripwide still doesn't see it",
    "start": "2342480",
    "end": "2348960"
  },
  {
    "text": "another thing is network connections",
    "start": "2348960",
    "end": "2353960"
  },
  {
    "text": "um there's only evidence of the telnet i just did but not of",
    "start": "2358079",
    "end": "2364079"
  },
  {
    "text": "this one the connection on port 8080",
    "start": "2364079",
    "end": "2371839"
  },
  {
    "text": "so are there any things that you want to might see to see if it's detectable or not",
    "start": "2373680",
    "end": "2379680"
  },
  {
    "text": "anyone got an idea of what might be possible to still see on the solaris",
    "start": "2379680",
    "end": "2385440"
  },
  {
    "text": "that there are something installed",
    "start": "2385440",
    "end": "2388640"
  },
  {
    "text": "sorry",
    "start": "2392960",
    "end": "2395960"
  },
  {
    "text": "okay",
    "start": "2398960",
    "end": "2401280"
  },
  {
    "text": "the question is to compare the du and df for uh the director with the hidden",
    "start": "2407200",
    "end": "2412800"
  },
  {
    "text": "files um the df is a little bit hard because it's not that much so i don't know if it will show up much",
    "start": "2412800",
    "end": "2420559"
  },
  {
    "text": "okay so stand here i have to say i have no idea because i've never done it before",
    "start": "2422560",
    "end": "2429599"
  },
  {
    "text": "oops",
    "start": "2430960",
    "end": "2433960"
  },
  {
    "text": "so clearly uh it doesn't see it",
    "start": "2440560",
    "end": "2445280"
  },
  {
    "text": "now there are some tricks um because there are lots of ways for instance simple thing is already raw devices the",
    "start": "2446400",
    "end": "2453119"
  },
  {
    "text": "module doesn't hide anything on raw devices but there's another way you can look at",
    "start": "2453119",
    "end": "2458160"
  },
  {
    "text": "a file or more specifically a directory and that's with",
    "start": "2458160",
    "end": "2463200"
  },
  {
    "text": "cad you can do just use",
    "start": "2463200",
    "end": "2467838"
  },
  {
    "text": "and there still is so the difficult part of really hiding",
    "start": "2474880",
    "end": "2480720"
  },
  {
    "text": "anything or everything i should say is that there are lots of way to find to to",
    "start": "2480720",
    "end": "2485760"
  },
  {
    "text": "look at a system um and this is one because what you do here is open on a directory instead of",
    "start": "2485760",
    "end": "2494000"
  },
  {
    "text": "list the directory contents and that one is not intercepted so you still see it",
    "start": "2494000",
    "end": "2501680"
  },
  {
    "text": "but generally if you can think of something that is detectable you can think of a",
    "start": "2501680",
    "end": "2507839"
  },
  {
    "text": "way to circumvent it in that sense it's just a chicken egg problem",
    "start": "2507839",
    "end": "2514240"
  },
  {
    "text": "okay yeah there's elsof of course so i can say elsof",
    "start": "2515520",
    "end": "2520880"
  },
  {
    "text": "of the pid i think it was 315.",
    "start": "2520880",
    "end": "2525359"
  },
  {
    "text": "ah that's a good one um because it's still it's still working um",
    "start": "2529839",
    "end": "2538240"
  },
  {
    "text": "this is a bug and software uh i have two different",
    "start": "2538240",
    "end": "2544240"
  },
  {
    "text": "kinds of modules one for initial loading and one for rebooting and one for rebooting",
    "start": "2544880",
    "end": "2552400"
  },
  {
    "text": "if all as well will hide it so there's a little slip up",
    "start": "2552400",
    "end": "2558960"
  },
  {
    "text": "i now will reboot or better do it from here uh reboot the system and then i'll go",
    "start": "2558960",
    "end": "2565359"
  },
  {
    "text": "over some uh some other aspects and look some more at what what you can do about it and then i will come back and see if",
    "start": "2565359",
    "end": "2572560"
  },
  {
    "text": "the backdoor's still there",
    "start": "2572560",
    "end": "2576359"
  },
  {
    "text": "um first maybe some some other issues that you can do that are a little bit more advanced",
    "start": "2582000",
    "end": "2588240"
  },
  {
    "text": "the first one is especially on the unix systems it's fairly",
    "start": "2588240",
    "end": "2594800"
  },
  {
    "text": "easy to say okay we just disable loadable coordinator modules linux it's not so much anymore",
    "start": "2594800",
    "end": "2600640"
  },
  {
    "text": "on the bsd it was still not so much in use so you could say okay we just disable the loadable",
    "start": "2600640",
    "end": "2606079"
  },
  {
    "text": "kernel module feature and then no one can load a kernel module but as i said you can still copy",
    "start": "2606079",
    "end": "2612480"
  },
  {
    "text": "directly into kernel memory if you don't prevent that",
    "start": "2612480",
    "end": "2617520"
  },
  {
    "text": "and it has been shown that this is a workable solution that you can insert code in the kernel in",
    "start": "2617520",
    "end": "2623200"
  },
  {
    "text": "this way you can have in kernel daemons and",
    "start": "2623200",
    "end": "2628240"
  },
  {
    "text": "network daemons so you can copy all your code into the kernel code",
    "start": "2628240",
    "end": "2633359"
  },
  {
    "text": "and so not have a real uh process but just something that that lives in inter context or something",
    "start": "2633359",
    "end": "2641119"
  },
  {
    "text": "you can try to modify the executable code of the kernel itself normally executable code is not writable",
    "start": "2642560",
    "end": "2650160"
  },
  {
    "text": "so it's only it's read-only memory but it has been shown in linux that you can write also in the kernel code space",
    "start": "2650160",
    "end": "2658560"
  },
  {
    "text": "what you can do is that you don't need to override the syscall table now you just will",
    "start": "2658560",
    "end": "2665680"
  },
  {
    "text": "override the first few instruction set instructions of",
    "start": "2665680",
    "end": "2671599"
  },
  {
    "text": "a system called routine and in that in that place you will intercept the",
    "start": "2671599",
    "end": "2676720"
  },
  {
    "text": "code redirect it to your own uh and maybe return later to the same piece of",
    "start": "2676720",
    "end": "2681839"
  },
  {
    "text": "code but you don't need to change the kernel structure uh the kernel system table or whatever table so",
    "start": "2681839",
    "end": "2689280"
  },
  {
    "text": "hashing those and checking those won't work either of course checking and hashing the code segment will",
    "start": "2689280",
    "end": "2697200"
  },
  {
    "text": "another interesting feature is changing the network protocol itself",
    "start": "2698800",
    "end": "2705040"
  },
  {
    "text": "of course if you have a system like this it is easy to add for instance ipfilter",
    "start": "2705040",
    "end": "2711280"
  },
  {
    "text": "is is anyone familiar with ipfilter okay ipfilter is a kit",
    "start": "2711280",
    "end": "2718160"
  },
  {
    "text": "by darren reed and it is basically also a kernel module",
    "start": "2718160",
    "end": "2723280"
  },
  {
    "text": "it is a firewalling kit it allows you to specify all kinds of filtering rules",
    "start": "2723280",
    "end": "2729599"
  },
  {
    "text": "but you can just use it in in combination with this and use it to redirect traffic only it's not visible",
    "start": "2730319",
    "end": "2736880"
  },
  {
    "text": "to the normal administrator that it's going to a different port for instance so you could um for instance have a back",
    "start": "2736880",
    "end": "2744319"
  },
  {
    "text": "door which is just listening locally on a local port on the local interface",
    "start": "2744319",
    "end": "2749440"
  },
  {
    "text": "and redirect port 80 traffic from a certain address or with a certain",
    "start": "2749440",
    "end": "2754880"
  },
  {
    "text": "ipid or whatever and redirect that to your backdoor so what you will see is",
    "start": "2754880",
    "end": "2760240"
  },
  {
    "text": "normal http traffic and only because it's from a certain address it will go to a backdoor port on the on the local",
    "start": "2760240",
    "end": "2767359"
  },
  {
    "text": "host and it will be very hard to distinguish that from legal traffic to the same port",
    "start": "2767359",
    "end": "2775838"
  },
  {
    "text": "you can snoop ttys that's also fairly well known you have loadable corner modules to tap",
    "start": "2777280",
    "end": "2784640"
  },
  {
    "text": "okay oh this is my ip filter story so",
    "start": "2785040",
    "end": "2790400"
  },
  {
    "text": "the interesting part of course is also what can you do about it as i said i was",
    "start": "2790400",
    "end": "2796560"
  },
  {
    "text": "i'm giving this talk because i think there are solutions possible or at least there should be",
    "start": "2796560",
    "end": "2802480"
  },
  {
    "text": "work on them because it's a serious issue so what are solutions",
    "start": "2802480",
    "end": "2809520"
  },
  {
    "text": "a well-known one is secure levels it has been",
    "start": "2809520",
    "end": "2814839"
  },
  {
    "text": "in the bsd's for some time now open bsd is uh",
    "start": "2814839",
    "end": "2820319"
  },
  {
    "text": "specifically going very far in in auditing and making sure that this works right",
    "start": "2820319",
    "end": "2828078"
  },
  {
    "text": "you can reduce the use of root by a fine grain access control mechanism",
    "start": "2828240",
    "end": "2835839"
  },
  {
    "text": "you can have user land programs that try to figure out what's happening to your system",
    "start": "2835839",
    "end": "2842079"
  },
  {
    "text": "as i've shown with tripwire it's really hard to do that because okay what what should you believe um you can try to",
    "start": "2842079",
    "end": "2849520"
  },
  {
    "text": "read kernel memory but are you reading uh the real kernel memory or some other kernel memory um",
    "start": "2849520",
    "end": "2855920"
  },
  {
    "text": "and you can go in the kernel with your checks and try to",
    "start": "2855920",
    "end": "2861040"
  },
  {
    "text": "make hashes for instance of the structures that you're trying to protect and uh periodically",
    "start": "2861040",
    "end": "2867119"
  },
  {
    "text": "try and see if the structures are still consistent",
    "start": "2867119",
    "end": "2872960"
  },
  {
    "text": "um the problem you have there is that it's a chicken and app egg problem i mean who gets there first and how is",
    "start": "2872960",
    "end": "2879520"
  },
  {
    "text": "the other going to do to determine if um if nothing changed or if if there's",
    "start": "2879520",
    "end": "2885359"
  },
  {
    "text": "something wrong going on one system that's doing it at the moment",
    "start": "2885359",
    "end": "2890880"
  },
  {
    "text": "that has been released like a month ago i think is called ipd i think integrity protection",
    "start": "2890880",
    "end": "2898720"
  },
  {
    "text": "driver it's for windows it's from pedestal software with freeware and it works as a device driver",
    "start": "2898720",
    "end": "2906079"
  },
  {
    "text": "and tries to do it this way to go a little more deep into the secure",
    "start": "2906079",
    "end": "2911680"
  },
  {
    "text": "level thing what it really does is okay it's it's like it's black and white it says just",
    "start": "2911680",
    "end": "2918960"
  },
  {
    "text": "okay i think there are now three or four levels but it's like you have root root can change anything or you have a",
    "start": "2918960",
    "end": "2926000"
  },
  {
    "text": "root and it can't do anything and that's your more secure level so",
    "start": "2926000",
    "end": "2931440"
  },
  {
    "text": "root can't write to kernel memory anymore can't write to raw device drivers anymore can't load",
    "start": "2931440",
    "end": "2937440"
  },
  {
    "text": "kernel modules anymore and basically you just shut root off a whole lot of features",
    "start": "2937440",
    "end": "2945760"
  },
  {
    "text": "it's a system that i think it works well but to work with it it's not so easy",
    "start": "2948240",
    "end": "2957359"
  },
  {
    "text": "but then again that goes for a lot of the solutions",
    "start": "2957359",
    "end": "2962559"
  },
  {
    "text": "another one is fine grain control so you say okay we have a root and we know it but we don't want to use it for so much",
    "start": "2963839",
    "end": "2970400"
  },
  {
    "text": "anymore so all the programs that now need root before stupid little tasks",
    "start": "2970400",
    "end": "2975520"
  },
  {
    "text": "that you don't think are so much important you can have special privileges for each and every",
    "start": "2975520",
    "end": "2981839"
  },
  {
    "text": "one of those tasks that you need and just give any program the specific privilege",
    "start": "2981839",
    "end": "2989200"
  },
  {
    "text": "to do that single task and so you can do other things if you can buy in the low port you can't",
    "start": "2989200",
    "end": "2996000"
  },
  {
    "text": "write to kernel memory examples of these are",
    "start": "2996000",
    "end": "3001599"
  },
  {
    "text": "systems with capabilities so that's linux",
    "start": "3001599",
    "end": "3007599"
  },
  {
    "text": "the the the road that linux has chosen to go another addition to such systems is",
    "start": "3007599",
    "end": "3013200"
  },
  {
    "text": "mandatory access control where you say okay we're going to label all kinds of data and objects in my system and we're",
    "start": "3013200",
    "end": "3019680"
  },
  {
    "text": "going to make sure that within all kinds of levels they can't talk to each other and you",
    "start": "3019680",
    "end": "3026400"
  },
  {
    "text": "can't transition from one to the other if it's uh going to a higher privilege",
    "start": "3026400",
    "end": "3031920"
  },
  {
    "text": "examples of those are also in in freeware available",
    "start": "3031920",
    "end": "3038640"
  },
  {
    "text": "specifically trusted bsd is now uh working on implementing uh",
    "start": "3038640",
    "end": "3044240"
  },
  {
    "text": "these i think according to posix standards um",
    "start": "3044240",
    "end": "3049280"
  },
  {
    "text": "there's a trusted solaris version uh i've never worked with it",
    "start": "3049280",
    "end": "3055040"
  },
  {
    "text": "so i can't comment on how easy it is to use but what i find it surprising is that it's so little in use",
    "start": "3055040",
    "end": "3061839"
  },
  {
    "text": "um then there's pitbull from arca system there was a talk previously in the other",
    "start": "3061839",
    "end": "3069359"
  },
  {
    "text": "whole biogas systems they have something like a slap on to a normal solaris to make it",
    "start": "3069359",
    "end": "3075920"
  },
  {
    "text": "a trusted operating system and there's uh recently also a new",
    "start": "3075920",
    "end": "3082559"
  },
  {
    "text": "concept that i like uh it's called the freebies jail um",
    "start": "3082559",
    "end": "3088240"
  },
  {
    "text": "it's developed by a paul ennin comp from the freebsd team and what he really did",
    "start": "3088240",
    "end": "3093280"
  },
  {
    "text": "was take a che route um i'm not sure if everyone is familiar with it but it's uh",
    "start": "3093280",
    "end": "3101280"
  },
  {
    "text": "like a basically a file system jill it just",
    "start": "3101280",
    "end": "3106559"
  },
  {
    "text": "says okay you can't go out of this file system area and it's taken a step further by",
    "start": "3106559",
    "end": "3112800"
  },
  {
    "text": "limiting also the process to what it can do on the network network and what i can do with processes",
    "start": "3112800",
    "end": "3120558"
  },
  {
    "text": "i heard a comment that from someone working on on mac system that it's a bit like a mech system with",
    "start": "3120960",
    "end": "3126319"
  },
  {
    "text": "one label you just say you're now running with the label jill or you're not and for jill these kind of",
    "start": "3126319",
    "end": "3133599"
  },
  {
    "text": "configuration parameters apply so what it really does is make the",
    "start": "3133599",
    "end": "3139599"
  },
  {
    "text": "configuration problem that you have when you have a full-fledged trusted operating system which has lots of",
    "start": "3139599",
    "end": "3145440"
  },
  {
    "text": "levels lots of complicated interacting issues simpler to maintain by just",
    "start": "3145440",
    "end": "3154240"
  },
  {
    "text": "using it for a specific purpose probably but",
    "start": "3154240",
    "end": "3159359"
  },
  {
    "text": "also for a whole lot of useful purposes",
    "start": "3159440",
    "end": "3164520"
  },
  {
    "text": "so what about windows well pretty much the same problem",
    "start": "3166720",
    "end": "3171839"
  },
  {
    "text": "it's also got a high privilege level that can do almost anything it's also used for all kinds of tasks",
    "start": "3171839",
    "end": "3179119"
  },
  {
    "text": "there's an open source project going on called rootkit.com by greg hoagland",
    "start": "3179119",
    "end": "3185760"
  },
  {
    "text": "so as i said there's also now that that integrity protection demon so",
    "start": "3185760",
    "end": "3192799"
  },
  {
    "text": "i think there is pretty much the same trajectory as i have here for for unix",
    "start": "3192880",
    "end": "3200640"
  },
  {
    "text": "okay and finally i want to thank gene kim for supplying the trekwire copy because",
    "start": "3200720",
    "end": "3206559"
  },
  {
    "text": "what i've demonstrated here is that tripwire is foolable but that doesn't mean that",
    "start": "3206559",
    "end": "3212000"
  },
  {
    "text": "tripwire is useless it's important it's an important tool",
    "start": "3212000",
    "end": "3219040"
  },
  {
    "text": "and it's just that you need to do other things as well to make it",
    "start": "3219040",
    "end": "3224319"
  },
  {
    "text": "worthwhile and that you also need to acknowledge that there are other problems that you need to address aside",
    "start": "3224319",
    "end": "3230640"
  },
  {
    "text": "from running tripwire on your systems and there are some references of uh of",
    "start": "3230640",
    "end": "3236240"
  },
  {
    "text": "sites and things i used uh for for the development of the module",
    "start": "3236240",
    "end": "3241599"
  },
  {
    "text": "and um the url of where you can get a copy of it to play with",
    "start": "3241599",
    "end": "3247119"
  },
  {
    "text": "so um now i want to go back to uh to the system for a",
    "start": "3247119",
    "end": "3252319"
  },
  {
    "text": "short moment and basically what i'm going to try and",
    "start": "3252319",
    "end": "3258160"
  },
  {
    "text": "see is if i can still go back into the system now",
    "start": "3258160",
    "end": "3263559"
  },
  {
    "text": "okay so it still works",
    "start": "3275839",
    "end": "3279040"
  },
  {
    "text": "let's see if tripwire has found something yet",
    "start": "3291760",
    "end": "3295839"
  },
  {
    "text": "still nothing um i am curious now if my back door still",
    "start": "3298559",
    "end": "3303839"
  },
  {
    "text": "is hidden from elsov",
    "start": "3303839",
    "end": "3307839"
  },
  {
    "text": "ah",
    "start": "3312319",
    "end": "3315319"
  },
  {
    "text": "okay the pid is 273 let's see it here",
    "start": "3336240",
    "end": "3341680"
  },
  {
    "text": "so we",
    "start": "3341680",
    "end": "3344920"
  },
  {
    "text": "okay so else of also finally submitted",
    "start": "3349200",
    "end": "3355760"
  },
  {
    "text": "so now the final check is to see if tripwire does see the",
    "start": "3355760",
    "end": "3362960"
  },
  {
    "text": "additions and changes if it's a hidden process",
    "start": "3362960",
    "end": "3367680"
  },
  {
    "text": "i need to figure out what the shell is so it's two five five",
    "start": "3368240",
    "end": "3376200"
  },
  {
    "text": "oops",
    "start": "3403520",
    "end": "3405839"
  },
  {
    "text": "okay we found them so luckily tripwire does work and that pretty much ends my",
    "start": "3434319",
    "end": "3440960"
  },
  {
    "text": "presentation thank you",
    "start": "3440960",
    "end": "3445720"
  },
  {
    "text": "are there are any questions",
    "start": "3448720",
    "end": "3452680"
  },
  {
    "text": "you",
    "start": "7328800",
    "end": "7330880"
  }
]