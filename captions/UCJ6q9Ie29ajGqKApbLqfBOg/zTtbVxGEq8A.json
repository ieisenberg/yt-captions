[
  {
    "start": "0",
    "end": "70000"
  },
  {
    "text": "[Music] foreign",
    "start": "1730",
    "end": "6720"
  },
  {
    "text": "that Katie did in her last talk and I'm going to invite everybody in the why far back to come forward this is the first",
    "start": "9019",
    "end": "16080"
  },
  {
    "text": "talk that we've given in a long time and uh especially since covid so we invite",
    "start": "16080",
    "end": "21660"
  },
  {
    "text": "you to come forward we don't bite we promise um okay",
    "start": "21660",
    "end": "28699"
  },
  {
    "text": "so um uh this is welcome to scaling security researcher to eliminate open",
    "start": "29340",
    "end": "34380"
  },
  {
    "text": "source security vulnerabilities once and for all my name is Jonathan lichu I am a",
    "start": "34380",
    "end": "39960"
  },
  {
    "text": "software security engineer a software security researcher I am the first ever Dan Kaminsky fellow at human security uh",
    "start": "39960",
    "end": "47820"
  },
  {
    "text": "I am a get up star and get up security Ambassador um and you can reach me on Twitter at Jay lichu and you can find me on GitHub",
    "start": "47820",
    "end": "54840"
  },
  {
    "text": "at J light shoe as well and I'm going to hand it over to my co-speaker Patrick",
    "start": "54840",
    "end": "59879"
  },
  {
    "text": "yeah my name is Patrick way I'm uh work for modern I'm on the open rewrite team I've been doing software for over 20",
    "start": "59879",
    "end": "66479"
  },
  {
    "text": "years and yeah excited to be working with you guys today um so brief disclaimer",
    "start": "66479",
    "end": "72659"
  },
  {
    "start": "70000",
    "end": "527000"
  },
  {
    "text": "um I'm sponsored by GitHub and also we are discussing a SAS offering that is available for sale um but all the tools",
    "start": "72659",
    "end": "78119"
  },
  {
    "text": "and and Technologies and and the process we discussed are available for free for open source",
    "start": "78119",
    "end": "84479"
  },
  {
    "text": "um to to use as security researchers um and this work is supported by the new",
    "start": "84479",
    "end": "90420"
  },
  {
    "text": "Dan Kaminsky Fellowship um for those who um uh for those who did not know Dan Dan",
    "start": "90420",
    "end": "97740"
  },
  {
    "text": "was best known um for a vulnerability and DNS that he discovered in 2008 and then silently",
    "start": "97740",
    "end": "103079"
  },
  {
    "text": "worked across the industry to fix um I sadly never got the opportunity to meet Dan he passed away uh tragically",
    "start": "103079",
    "end": "109320"
  },
  {
    "text": "last year um and the Dan Kaminsky Fellowship was created to celebrate Dan's memory and Legacy by funding open source work that",
    "start": "109320",
    "end": "116460"
  },
  {
    "text": "helps make the world a better and more secure place and if you are interested in a project that satisfies those",
    "start": "116460",
    "end": "122640"
  },
  {
    "text": "constraints or is you know is is trying to do something in that area um human is currently accepting applications for the",
    "start": "122640",
    "end": "128520"
  },
  {
    "text": "2022 uh Dan Kaminsky fellow or 2023",
    "start": "128520",
    "end": "134160"
  },
  {
    "text": "um so this story started with a simple vulnerability is this it's the use of HTTP in a Gradle",
    "start": "134160",
    "end": "141720"
  },
  {
    "text": "build file um and uh this is uh this vulnerability",
    "start": "141720",
    "end": "146879"
  },
  {
    "text": "is important because if you're using HTTP to resolve your dependencies in",
    "start": "146879",
    "end": "152099"
  },
  {
    "text": "your Gradle or Maven build files you leave your build open to a man in the middle attack and getting your artifacts",
    "start": "152099",
    "end": "158180"
  },
  {
    "text": "Modified by a malicious attacker um and there's you in the Java ecosystem at",
    "start": "158180",
    "end": "164519"
  },
  {
    "text": "least there's no additional authentication or verification of artifacts getting downloaded and this vulnerability didn't just exist",
    "start": "164519",
    "end": "170220"
  },
  {
    "text": "in Maven or sorry in Gradle it also existed in Maven build files this is an example of downloading dependencies uh",
    "start": "170220",
    "end": "176640"
  },
  {
    "text": "to be used in your compiler and test dependencies which means that the code's going to get executed in your CI CD pipeline",
    "start": "176640",
    "end": "182099"
  },
  {
    "text": "and this is an example of it being used to upload artifacts from your build um and that usually concludes",
    "start": "182099",
    "end": "187920"
  },
  {
    "text": "credentials which are getting exposed over the network as well and this vulnerability was everywhere I",
    "start": "187920",
    "end": "194220"
  },
  {
    "text": "started looking across open source projects it was in the projects of spring Apache Red Hat kotlin jetbrains",
    "start": "194220",
    "end": "201180"
  },
  {
    "text": "Jenkins Gradle groovy elastic eclipse and more",
    "start": "201180",
    "end": "206340"
  },
  {
    "text": "um Oracle the NSA LinkedIn stripe all of these open source projects all the open",
    "start": "206340",
    "end": "211500"
  },
  {
    "text": "source projects maintained by these Pro these um organizations we're vulnerable to this",
    "start": "211500",
    "end": "217620"
  },
  {
    "text": "and I reached out to Maven sonotype Maven sonotype is the uh artifact server",
    "start": "217620",
    "end": "223860"
  },
  {
    "text": "for the job system they are the uh pip to the python ecosystem the npm to the",
    "start": "223860",
    "end": "229019"
  },
  {
    "text": "Java ecosystem and they told me that in January or June of 2019 uh 25 of their",
    "start": "229019",
    "end": "235500"
  },
  {
    "text": "traffic was still using HTTP instead of https to resolve dependencies so how do we fix this how do we how do",
    "start": "235500",
    "end": "241319"
  },
  {
    "text": "you deal with this widespread common security vulnerability impacting an entire ecosystem I push forward an initiative that on",
    "start": "241319",
    "end": "247680"
  },
  {
    "text": "January 15 2020 all the major artifact servers in the Java ecosystem would decommissioned support for HTTP in favor",
    "start": "247680",
    "end": "253680"
  },
  {
    "text": "of supporting https only and I reached out to Maven Central again and they said that after us our",
    "start": "253680",
    "end": "261780"
  },
  {
    "text": "disclosure a lot of blog posts 20 were still using HTTP even after all the",
    "start": "261780",
    "end": "267120"
  },
  {
    "text": "communication we put out and so you can imagine",
    "start": "267120",
    "end": "272880"
  },
  {
    "text": "what might have happened on January on January 15 2020",
    "start": "272880",
    "end": "279680"
  },
  {
    "text": "broken software broken software everywhere um but we stopped the bleeding uh but",
    "start": "280259",
    "end": "287580"
  },
  {
    "text": "what about the other repositories these are only the most commonly used repositories in the Java ecosystem other",
    "start": "287580",
    "end": "294240"
  },
  {
    "text": "companies host jar artifacts on their own servers and those are not in this",
    "start": "294240",
    "end": "299699"
  },
  {
    "text": "list um so how do we fix the rest of the open source projects that are vulnerable to",
    "start": "299699",
    "end": "305400"
  },
  {
    "text": "this I said let's just try to fix it let's do both polar Quest generation",
    "start": "305400",
    "end": "312479"
  },
  {
    "text": "and so how well first off you need to identify what projects are vulnerable and so the way I",
    "start": "312479",
    "end": "319139"
  },
  {
    "text": "did this was by writing a code to our query to give me a list of vulnerable projects and this is the query here it's",
    "start": "319139",
    "end": "324180"
  },
  {
    "text": "very simple um codeql is github's code query language and as your bill it every",
    "start": "324180",
    "end": "331380"
  },
  {
    "text": "single time there's a commit to an open source project codeql attempts to build that project and build a database and as",
    "start": "331380",
    "end": "337500"
  },
  {
    "text": "open as security researchers we can run queries against code 2L at scale and",
    "start": "337500",
    "end": "343020"
  },
  {
    "text": "there are 100 000 open source projects that coach UL builds databases for currently and for this query the GitHub",
    "start": "343020",
    "end": "350699"
  },
  {
    "text": "security lab bountied me a 2 300 Bounty for this and then on top of this I took the list",
    "start": "350699",
    "end": "356520"
  },
  {
    "text": "of queries or the list of results that GitHub provided me and I said let's go generate pull request so I wrote a bot",
    "start": "356520",
    "end": "362880"
  },
  {
    "text": "using python it was a wrapper over the GitHub Hub CLI it had one nasty regular expression and a lot of logic for",
    "start": "362880",
    "end": "369120"
  },
  {
    "text": "bouncing off of github's rate limiter and this is the logic um It's actually an engine under this",
    "start": "369120",
    "end": "375419"
  },
  {
    "text": "but this is at a high level the logic that we use to generate pull requests and this is the nasty regular expression",
    "start": "375419",
    "end": "381660"
  },
  {
    "text": "and the reason that we had to use a regular expression is because if you use",
    "start": "381660",
    "end": "387479"
  },
  {
    "text": "um if you use an XML parser to fix XML files when you parse the XML in",
    "start": "387479",
    "end": "393300"
  },
  {
    "text": "and then you dump it back out after making a modification it comes out in the format that the XML parser dumps out",
    "start": "393300",
    "end": "399720"
  },
  {
    "text": "not in the format that came in and so you end up generating these massive diffs that you that most maintainers are",
    "start": "399720",
    "end": "406139"
  },
  {
    "text": "not willing to accept because sure it fixes a security vulnerability but it doesn't look like the code that",
    "start": "406139",
    "end": "411479"
  },
  {
    "text": "they had originally and so they're not willing to accept it but the problem with regular expression is that if you",
    "start": "411479",
    "end": "417960"
  },
  {
    "text": "use regular oppressions to solve a problem now you have two problems um",
    "start": "417960",
    "end": "423479"
  },
  {
    "text": "but it worked um this is my pull request feed for this vulnerability and this is an example of",
    "start": "423479",
    "end": "429539"
  },
  {
    "text": "the diff you can see the replacement of HTTP with https across you know tons of different places in a file",
    "start": "429539",
    "end": "436020"
  },
  {
    "text": "and for this project I generated 1596 pull requests and as of 2022 it's",
    "start": "436020",
    "end": "442979"
  },
  {
    "text": "been about a 40 merge rate which is you know pretty pretty solid",
    "start": "442979",
    "end": "448080"
  },
  {
    "text": "and for this the GitHub security lab bountied me an additional four thousand dollars for trying for fixing this",
    "start": "448080",
    "end": "453479"
  },
  {
    "text": "vulnerability at scale and I got hooked on this idea of bulk pull request generation",
    "start": "453479",
    "end": "459960"
  },
  {
    "text": "um this is my GitHub contribution graph for uh 2020. uh these are the two peaks of my massive numbers of polar press",
    "start": "459960",
    "end": "466199"
  },
  {
    "text": "that I generated um it was you know it's just it's you know very cool to see the impact you can",
    "start": "466199",
    "end": "471900"
  },
  {
    "text": "have so I have a problem and ivr HD",
    "start": "471900",
    "end": "478500"
  },
  {
    "text": "that's not the problem the problem is that I chase squirrels I love looking",
    "start": "478500",
    "end": "484199"
  },
  {
    "text": "and reading vulnerability disclosures and when I read a vulnerability disclosure I can take the knowledge that",
    "start": "484199",
    "end": "489660"
  },
  {
    "text": "I find in that vulnerability closure and I can go say I wonder where else that it this is and I can find those",
    "start": "489660",
    "end": "495180"
  },
  {
    "text": "vulnerabilities I can find lots of them and it's there's too many vulnerabilities I'm I'm finding when I",
    "start": "495180",
    "end": "501900"
  },
  {
    "text": "do this too many open source security vulnerabilities this is not to say open source is more insecure than in closed",
    "start": "501900",
    "end": "507060"
  },
  {
    "text": "Source it's just that it's easier for me to find this is an example of a vulnerability called zip slip and I can pay I this is",
    "start": "507060",
    "end": "513959"
  },
  {
    "text": "the results of a co2l query and I can page through results I can scroll through pages and pages and pages of",
    "start": "513959",
    "end": "519300"
  },
  {
    "text": "results like this that identify and point to the exact locations in source code where there are zip slip",
    "start": "519300",
    "end": "524760"
  },
  {
    "text": "vulnerabilities and open source software and so I need a solution to this problem",
    "start": "524760",
    "end": "531959"
  },
  {
    "start": "527000",
    "end": "871000"
  },
  {
    "text": "I need automation and so at this point I want to pass it off to Jonathan or sorry to Patrick to",
    "start": "531959",
    "end": "539220"
  },
  {
    "text": "discuss automated accurate Transformations at massive scale thanks Jonathan",
    "start": "539220",
    "end": "545339"
  },
  {
    "text": "yeah Jonathan has a challenge he definitely finds a lot of vulnerabilities and he",
    "start": "545339",
    "end": "551040"
  },
  {
    "text": "wants to fix the world but his 2020 he he tried to use an XML",
    "start": "551040",
    "end": "556380"
  },
  {
    "text": "parser and he got a ginormous diff or a simple change and uh you know it kind of makes me",
    "start": "556380",
    "end": "563640"
  },
  {
    "text": "think of software Engineers we're professional automators I mean that's what we do we automate tasks some of us",
    "start": "563640",
    "end": "569459"
  },
  {
    "text": "been doing it for a long long time but it's 20 20 and we're still not able",
    "start": "569459",
    "end": "575220"
  },
  {
    "text": "to automate our own tasks that dependency upgrade with a breaking change or a framework up trade we're",
    "start": "575220",
    "end": "582839"
  },
  {
    "text": "still slogging through the painful process of of doing that update",
    "start": "582839",
    "end": "588540"
  },
  {
    "text": "but luckily it is 2022 and we do have a solution",
    "start": "588540",
    "end": "594180"
  },
  {
    "text": "I'm lucky I get to work with the open rewrite project and uh essentially in a nutshell open",
    "start": "594180",
    "end": "600120"
  },
  {
    "text": "rewrite is a framework and an API for interrogating and transforming a",
    "start": "600120",
    "end": "606480"
  },
  {
    "text": "compiler's syntactical representation of source code",
    "start": "606480",
    "end": "611360"
  },
  {
    "text": "so what is that syntactical representation so compilers make this thing called an abstract syntax tree",
    "start": "612120",
    "end": "618959"
  },
  {
    "text": "and if you look at it you can kind of see like hey I could do something with that tree right I'm a software engineer I bet I",
    "start": "618959",
    "end": "626519"
  },
  {
    "text": "can automate the fix that I need to make there's a problem though and Jonathan's experienced this with his XML parser and",
    "start": "626519",
    "end": "633959"
  },
  {
    "text": "that is a compiler's abstract index 3 is bare minimum there's there's no uh tabs",
    "start": "633959",
    "end": "640200"
  },
  {
    "text": "or spaces there's no comments it's only got a single level of type information it it's going to take some work in order",
    "start": "640200",
    "end": "647399"
  },
  {
    "text": "to be able to use this for a transformation that's going to pass code review this is one of the first",
    "start": "647399",
    "end": "655260"
  },
  {
    "text": "the first challenges that open rewrite solved and that was to create a format preserving ASD so while the open rewrite",
    "start": "655260",
    "end": "661740"
  },
  {
    "text": "parser is is interrogating and build using the compiler to build an abstract syntax tree it's synchronizing that",
    "start": "661740",
    "end": "668399"
  },
  {
    "text": "process with the source file so every node of that tree has its prefix it",
    "start": "668399",
    "end": "674579"
  },
  {
    "text": "sucks fix it's white space it's comments and the cool thing about that is that it",
    "start": "674579",
    "end": "680279"
  },
  {
    "text": "is it's able to like detect the style for an entire Source set and it allows somebody like Jonathan to write a recipe",
    "start": "680279",
    "end": "687779"
  },
  {
    "text": "and do a transformation and have that be correct for the source file it'll have",
    "start": "687779",
    "end": "693300"
  },
  {
    "text": "tabs or spaces it'll have the braces on a new line Jonathan doesn't have to go",
    "start": "693300",
    "end": "698339"
  },
  {
    "text": "in and update every single div with the correct formatting the open rewrite",
    "start": "698339",
    "end": "703920"
  },
  {
    "text": "framework is able to take care of that forum there's another problem though",
    "start": "703920",
    "end": "709079"
  },
  {
    "text": "you need full type information as I mentioned the compiler Source tree it's bare minimum it's got single level type",
    "start": "709079",
    "end": "715800"
  },
  {
    "text": "information but you really need to know the full depth of the types for every node right so you have a log.info",
    "start": "715800",
    "end": "723060"
  },
  {
    "text": "statement is that log for J is it slf or J is it log back in order to really use this framework",
    "start": "723060",
    "end": "730140"
  },
  {
    "text": "and to do accurate Transformations which is critical because you you just cannot do harm you need to have full type",
    "start": "730140",
    "end": "737220"
  },
  {
    "text": "attribution so the next challenge of the",
    "start": "737220",
    "end": "743720"
  },
  {
    "text": "so open rewrite solve that problem too the open rewrite abstract syntax tree is",
    "start": "743880",
    "end": "749700"
  },
  {
    "text": "both syntactically and semantically aware here's a is a fantastic picture that shows on on one side you have the",
    "start": "749700",
    "end": "756120"
  },
  {
    "text": "compiler's syntactical tree and on the other side you have the open rewrite AST",
    "start": "756120",
    "end": "761459"
  },
  {
    "text": "and that is without another 6 000 nodes that we had to take off just to make it to where it looked like something",
    "start": "761459",
    "end": "767100"
  },
  {
    "text": "besides a ball of string so if you look at that all right Jonathan has got he's got his formatting",
    "start": "767100",
    "end": "774180"
  },
  {
    "text": "he's got his type but now he needs to modify that well yeah even even a simple even a",
    "start": "774180",
    "end": "783480"
  },
  {
    "text": "simple piece of code is surprisingly complex ASD if we're going to make Jonathan be successful and be efficient",
    "start": "783480",
    "end": "791040"
  },
  {
    "text": "we needed a templating engine he's a coder he's not an aster right so in in a",
    "start": "791040",
    "end": "798779"
  },
  {
    "text": "demonstration he's going to talk here in just a second about a vulnerability he's fixing zip slip and he needs to end uh",
    "start": "798779",
    "end": "805019"
  },
  {
    "text": "insert this simple conditional statement into code all over the place",
    "start": "805019",
    "end": "810660"
  },
  {
    "text": "so the open rewrite team we we put our heads down and we solved that we have",
    "start": "810660",
    "end": "816360"
  },
  {
    "text": "this templating engine that allows coders to build trees in their native language it's got type substitutions so",
    "start": "816360",
    "end": "823500"
  },
  {
    "text": "you can substitute parameters and if you notice in there there's there's very little formatting the open rewrite",
    "start": "823500",
    "end": "830100"
  },
  {
    "text": "framework will handle all the formatting for you so if you stick it into a file with tabs it'll be tab spaced",
    "start": "830100",
    "end": "837660"
  },
  {
    "text": "the next thing is a coordinate system",
    "start": "837660",
    "end": "841339"
  },
  {
    "text": "so you need to be able to enter it at the correct place so here you can Define your template and",
    "start": "842880",
    "end": "850260"
  },
  {
    "text": "you can say hey insert it after this statement and here's the parameters I want to substitute into it so with two simple",
    "start": "850260",
    "end": "857279"
  },
  {
    "text": "statements Jonathan is able to detect a vulnerability Define the fix and",
    "start": "857279",
    "end": "863459"
  },
  {
    "text": "perfectly insert into the space where it belongs and here's just a quick example of what",
    "start": "863459",
    "end": "869579"
  },
  {
    "text": "he's able to do at scale and with that I'll pass it back to Jonathan",
    "start": "869579",
    "end": "874680"
  },
  {
    "start": "871000",
    "end": "1048000"
  },
  {
    "text": "thank you Patrick so",
    "start": "874680",
    "end": "879500"
  },
  {
    "text": "what with the unlock that openrete provides what other vulnerabilities can",
    "start": "882120",
    "end": "887940"
  },
  {
    "text": "we fix with this I'm going to talk to you about three different security vulnerabilities temp directory hijacking partial path",
    "start": "887940",
    "end": "894540"
  },
  {
    "text": "reversal and zip slip and how open rearrate allowed us to fix these vulnerabilities at scale",
    "start": "894540",
    "end": "900839"
  },
  {
    "text": "so vulnerability number one is a vulnerability called temperature temporary directory hijacking and it",
    "start": "900839",
    "end": "907980"
  },
  {
    "text": "exists because the system temp directory on unix-like systems is shared between all users",
    "start": "907980",
    "end": "914579"
  },
  {
    "text": "and this is the vulnerability the vulnerability exists because it is the",
    "start": "914579",
    "end": "920639"
  },
  {
    "text": "creation of a temporary directory in Java um by creating a temporary file calling",
    "start": "920639",
    "end": "927120"
  },
  {
    "text": "delete and then calling maker and the reason that people do this is because prior to Java 1.7",
    "start": "927120",
    "end": "933480"
  },
  {
    "text": "there did not exist an API to create temporary directories in Java so a lot of old code uses this pattern and also",
    "start": "933480",
    "end": "941339"
  },
  {
    "text": "if you looked up on job on stack Overflow how to create a temperature a temporary directory you'd unintentionally get this",
    "start": "941339",
    "end": "947579"
  },
  {
    "text": "vulnerability um so this vulnerability the reason this",
    "start": "947579",
    "end": "953339"
  },
  {
    "text": "code is vulnerable is because there's a race condition the race condition exists between the delete and the maker because when you",
    "start": "953339",
    "end": "959579"
  },
  {
    "text": "create the temp file you call delete another user on the local file system can see that deletion and then race the",
    "start": "959579",
    "end": "966180"
  },
  {
    "text": "Java process to create the dev directory and if they beat the Java process maker does not fail it returns false",
    "start": "966180",
    "end": "973920"
  },
  {
    "text": "so the fix is to throw it well in imperfect fix that you'll see is to throw the maker into the in if and if",
    "start": "973920",
    "end": "980639"
  },
  {
    "text": "check however this is not it's not fully uh it's not the best solution because",
    "start": "980639",
    "end": "986519"
  },
  {
    "text": "when you use maketer it uses the default you name and the U name will create a",
    "start": "986519",
    "end": "992519"
  },
  {
    "text": "directory that is exposed and visible to all other local users so you're still vulnerable to Temporary directory",
    "start": "992519",
    "end": "998399"
  },
  {
    "text": "information disclosure so the correct fix for this is to replace it with create temp directory",
    "start": "998399",
    "end": "1003860"
  },
  {
    "text": "which is an API that was introduced in Java 1.7 Java 1.7 is very old it's been around for a long time it's a safe API",
    "start": "1003860",
    "end": "1010339"
  },
  {
    "text": "to use and for this vulnerability I have quite a few CVS um I did report it a bunch of places but",
    "start": "1010339",
    "end": "1016399"
  },
  {
    "text": "I said okay there's more than I can report let's try to do pull request generation so for this vulnerability I generated 64",
    "start": "1016399",
    "end": "1024438"
  },
  {
    "text": "pull requests across open source to fix this vulnerability and this is an example of the diff you",
    "start": "1024439",
    "end": "1030438"
  },
  {
    "text": "can see the removal of the delete the removal of the makers and we replace it with this one line that is no longer",
    "start": "1030439",
    "end": "1035720"
  },
  {
    "text": "vulnerable and the Transformations can be more complicated you see we delete these if blocks that are no longer needed as well",
    "start": "1035720",
    "end": "1042020"
  },
  {
    "text": "and leave behind just this one line and this is all using open rewrite and uh in automated",
    "start": "1042020",
    "end": "1048319"
  },
  {
    "start": "1048000",
    "end": "1263000"
  },
  {
    "text": "vulnerability number two I want to talk to you about is a vulnerability called partial path traversal",
    "start": "1048319",
    "end": "1053419"
  },
  {
    "text": "um let's assume that you have two users on a local file system and you want to you want to write logic that prevents a",
    "start": "1053419",
    "end": "1059600"
  },
  {
    "text": "user from accessing something outside of user Sam but you also have",
    "start": "1059600",
    "end": "1065440"
  },
  {
    "text": "you also have a user on the system called user Samantha so partial past reversal allows an",
    "start": "1066020",
    "end": "1071480"
  },
  {
    "text": "attacker to access a sibling directory with the same prefix so in this used example user Sam and user Samantha they",
    "start": "1071480",
    "end": "1077419"
  },
  {
    "text": "share the same prefix and this is a vulnerable code and it's vulnerable because when you",
    "start": "1077419",
    "end": "1085220"
  },
  {
    "text": "have new file in Java and you call get canonical path on it you'll notice that the string that's",
    "start": "1085220",
    "end": "1091820"
  },
  {
    "text": "returned is missing the trailing slash that you originally had in the file and so when you look at this Logic the",
    "start": "1091820",
    "end": "1099140"
  },
  {
    "text": "vulnerability let's assume that you have a user Sam and you have a user supplied malicious",
    "start": "1099140",
    "end": "1105559"
  },
  {
    "text": "value come in user.s Samantha when you call get canonical path on it it normalizes the",
    "start": "1105559",
    "end": "1112340"
  },
  {
    "text": "path and it becomes user Samantha slash baz which does start with user Sam and so",
    "start": "1112340",
    "end": "1120260"
  },
  {
    "text": "our guard is bypassed and so the fix for this vulnerability is",
    "start": "1120260",
    "end": "1125720"
  },
  {
    "text": "taking this example of original example you one option is to re-add the path separator back in but you're still",
    "start": "1125720",
    "end": "1132320"
  },
  {
    "text": "comparing the strings this is a better solution and the better solution is to use Java's two-pack or path object and",
    "start": "1132320",
    "end": "1140480"
  },
  {
    "text": "what this starts with is not comparing strings but comparing these path objects so how do we find this vulnerability",
    "start": "1140480",
    "end": "1147260"
  },
  {
    "text": "well first off we look for it we look for Java string starts with calls and",
    "start": "1147260",
    "end": "1152360"
  },
  {
    "text": "then we look before and afterwards for this get canonical path call but we also want to find when we're",
    "start": "1152360",
    "end": "1158179"
  },
  {
    "text": "finding this vulnerability locations where file path separator is not present because we don't want to fix places in",
    "start": "1158179",
    "end": "1164600"
  },
  {
    "text": "the code that are not vulnerable can't be that easy right well developers are going to write code",
    "start": "1164600",
    "end": "1171980"
  },
  {
    "text": "in a lot of different ways and what if a developer writes code like this where",
    "start": "1171980",
    "end": "1177500"
  },
  {
    "text": "they extract that to a variable or they extract the argument to a variable or",
    "start": "1177500",
    "end": "1182780"
  },
  {
    "text": "you they fix the vulnerability but in an extracted variable how do you detect this with automation right with with",
    "start": "1182780",
    "end": "1189620"
  },
  {
    "text": "with you looking at the AST how do you know that this is vulnerable or not",
    "start": "1189620",
    "end": "1194900"
  },
  {
    "text": "we need data flow analysis data flow analysis allows us to",
    "start": "1194900",
    "end": "1201260"
  },
  {
    "text": "determine what a variable might be at runtime so for example we can look back",
    "start": "1201260",
    "end": "1206900"
  },
  {
    "text": "and see that this get canonical path gets assigned to this variable and flows to that use and also for the other",
    "start": "1206900",
    "end": "1214760"
  },
  {
    "text": "argument it also happens and data flow is not just you know single step it can operate through multiple steps and more",
    "start": "1214760",
    "end": "1220400"
  },
  {
    "text": "complicated chains of calls dataflow allows us to uncover hard to",
    "start": "1220400",
    "end": "1225679"
  },
  {
    "text": "find vulnerabilities and prevents false positives",
    "start": "1225679",
    "end": "1231100"
  },
  {
    "text": "and this is the dataflow API if you've written any code ql which I know that most of you probably have not but if",
    "start": "1231380",
    "end": "1237260"
  },
  {
    "text": "you've written any code ql the dataflow API that we that I created for this um is very similar to coqls so if you",
    "start": "1237260",
    "end": "1244160"
  },
  {
    "text": "learn codeql or you learn open rewrite you can translate your knowledge back and forth between these two very easily",
    "start": "1244160",
    "end": "1250700"
  },
  {
    "text": "and this is an example of the fix you can see that the file get parent file we",
    "start": "1250700",
    "end": "1256640"
  },
  {
    "text": "pulled that back out into the new line that we're fixing and fix this vulnerability",
    "start": "1256640",
    "end": "1262340"
  },
  {
    "text": "and the third vulnerability that I want to talk to you guys about you all about",
    "start": "1262340",
    "end": "1268220"
  },
  {
    "start": "1263000",
    "end": "1337000"
  },
  {
    "text": "um is zip slip zip slip is an old vulnerability it was um originally discussed I think years",
    "start": "1268220",
    "end": "1274880"
  },
  {
    "text": "and years ago in Frac magazine um but sniff did some research about this vulnerability uh more recently they",
    "start": "1274880",
    "end": "1282380"
  },
  {
    "text": "did some research in 2018 and found a bunch of projects that were vulnerable to zip slip still and reported this vulnerability unfortunately some of the",
    "start": "1282380",
    "end": "1289220"
  },
  {
    "text": "fixes that they found and they reported the fixes were somewhat incomplete",
    "start": "1289220",
    "end": "1294740"
  },
  {
    "text": "um as I discovered in some of the work that I did um zip slip fundamentally is a path traversal vulnerability while unpacking",
    "start": "1294740",
    "end": "1301220"
  },
  {
    "text": "zip files because zip files are entry names to zip contents and this is zip slip in Java the",
    "start": "1301220",
    "end": "1309140"
  },
  {
    "text": "vulnerability exists because of um this little bit of logic where you're getting the name from a zip entry and",
    "start": "1309140",
    "end": "1317179"
  },
  {
    "text": "that value which could be a path reversal payload is Flowing to the creation of a new directory",
    "start": "1317179",
    "end": "1323000"
  },
  {
    "text": "and so this can lead to remote code execution because you can unpack the contents of a zip file entry over an",
    "start": "1323000",
    "end": "1331820"
  },
  {
    "text": "executable file and that like bin bash right and that can lead to remote code execution",
    "start": "1331820",
    "end": "1337640"
  },
  {
    "start": "1337000",
    "end": "1471000"
  },
  {
    "text": "and zip slip is complicated and it's complicated to fix and the reason that it's complicated is",
    "start": "1337640",
    "end": "1343340"
  },
  {
    "text": "because you need to add this guard to prevent this vulnerability",
    "start": "1343340",
    "end": "1348620"
  },
  {
    "text": "so the problem with this is that not only is this a valid fix",
    "start": "1348620",
    "end": "1354140"
  },
  {
    "text": "but this is also this is also a valid fix how do you determine and again we don't",
    "start": "1354140",
    "end": "1360200"
  },
  {
    "text": "want to fix vulnerabilities that are not present so you need to detect the vulnerabilities presence or if it's not present and not fix vulnerabilities that",
    "start": "1360200",
    "end": "1367460"
  },
  {
    "text": "are not present so how do we determine whether or not this is protected against adequately",
    "start": "1367460",
    "end": "1374780"
  },
  {
    "text": "and the answer is we need control flow analysis and this also didn't exist in open rewrite",
    "start": "1374780",
    "end": "1380780"
  },
  {
    "text": "um so we added it um and it lets us determine",
    "start": "1380780",
    "end": "1386059"
  },
  {
    "text": "if this logic this guard is present or not and helps us determine whether or not to fix the vulnerability",
    "start": "1386059",
    "end": "1392960"
  },
  {
    "text": "and this is control flow analysis um this graphic was created by my uh wonderful intern sham",
    "start": "1392960",
    "end": "1399260"
  },
  {
    "text": "um to display and it lets it creates a graph that displays um uh the the control flow through an",
    "start": "1399260",
    "end": "1407659"
  },
  {
    "text": "app through a chunk of code where their basic blocks which are made up of the sequence of operations that are going to",
    "start": "1407659",
    "end": "1413360"
  },
  {
    "text": "occur occur concurrently and then there are condition nodes where there are",
    "start": "1413360",
    "end": "1419620"
  },
  {
    "text": "points where the logic will jump and for zip slip in this case if we",
    "start": "1419620",
    "end": "1426740"
  },
  {
    "text": "build the Zips if we build the control flow analysis graph we can see that this is properly guarded",
    "start": "1426740",
    "end": "1432020"
  },
  {
    "text": "against by traversing the control flow graph and seeing that there's a guard in place for this starts with call that",
    "start": "1432020",
    "end": "1438799"
  },
  {
    "text": "when it's false or when it yeah when it's false that logic will not that vulnerable logic will not be reached and",
    "start": "1438799",
    "end": "1445940"
  },
  {
    "text": "this lets us know that the vulnerability is not present and we don't need to fix it",
    "start": "1445940",
    "end": "1451000"
  },
  {
    "text": "and so when we put this all together all these bits of Technology data flow analysis control flow analysis we're",
    "start": "1451000",
    "end": "1456260"
  },
  {
    "text": "able to fix zip slip across open source and this is an example of the fix that",
    "start": "1456260",
    "end": "1461299"
  },
  {
    "text": "we generated for one of the one of the projects here's another one where we also clean up the file Constructor while",
    "start": "1461299",
    "end": "1466880"
  },
  {
    "text": "we're working on it just to you know be good developers um and then yeah so at this point I want",
    "start": "1466880",
    "end": "1474020"
  },
  {
    "text": "to talk to you about the complicated nature of polar price generation um but if you've got security vulnerabilities",
    "start": "1474020",
    "end": "1479480"
  },
  {
    "text": "we'll give you a pull request this is a problem with Polar Express generation",
    "start": "1479480",
    "end": "1485539"
  },
  {
    "text": "um one of the problems we have is how fast can we generate pull requests",
    "start": "1485539",
    "end": "1490640"
  },
  {
    "text": "if you want to generate a pull request you have to do three different things there's file i o git operations and GitHub API calls file IO is free",
    "start": "1490640",
    "end": "1498080"
  },
  {
    "text": "basically it's on your machine git operations are free on GitHub and GitHub API calls are rate limited so you have",
    "start": "1498080",
    "end": "1504679"
  },
  {
    "text": "to consider how many of those you're making so the first thing you do check out this source code",
    "start": "1504679",
    "end": "1510020"
  },
  {
    "text": "branch and apply the diff Fork the repository which is the first API called a GitHub",
    "start": "1510020",
    "end": "1516500"
  },
  {
    "text": "we're bringing the repository on GitHub and this is important because if you're forking tens hundreds thousands of",
    "start": "1516500",
    "end": "1521860"
  },
  {
    "text": "projects you're gonna end up with name conflicts you need to rename it to a non-conflicting name",
    "start": "1521860",
    "end": "1528580"
  },
  {
    "text": "clickers being a little fidgety uh you push the change and then you create a pull request on GitHub",
    "start": "1529039",
    "end": "1535100"
  },
  {
    "text": "so for this we have three API calls to GitHub and uh for each one of them they",
    "start": "1535100",
    "end": "1540620"
  },
  {
    "text": "expect you to wait at least one second per per API call per user",
    "start": "1540620",
    "end": "1546320"
  },
  {
    "text": "um and on top of that uh there's additional rate limits that exist on top of these that they somewhat document and",
    "start": "1546320",
    "end": "1554600"
  },
  {
    "text": "uh you have to deal with um so if there's anybody in the audience from GitHub",
    "start": "1554600",
    "end": "1560360"
  },
  {
    "text": "um make my life a lot easier as a security researcher",
    "start": "1560360",
    "end": "1565700"
  },
  {
    "text": "um but we made it this far we've detected the vulnerability we've detected the style we've fixed the code",
    "start": "1565700",
    "end": "1572720"
  },
  {
    "text": "um and fixed it in the code fix the code in the way that the matches the style of the Developers",
    "start": "1572720",
    "end": "1577760"
  },
  {
    "text": "and we've bypassed the rate limit how do we do this for all the repositories",
    "start": "1577760",
    "end": "1583520"
  },
  {
    "text": "and for this I'm going to pass it back to Patrick thanks well",
    "start": "1583520",
    "end": "1590059"
  },
  {
    "text": "you'd never know from the duck he's a very humble guy um but what do you fail to mention is that",
    "start": "1590059",
    "end": "1596419"
  },
  {
    "text": "control flow and data flow did not exist in open rewrite prior to uh Jonathan and",
    "start": "1596419",
    "end": "1601580"
  },
  {
    "text": "Sean uh these guys they put their heads down they they had a need for for data flow",
    "start": "1601580",
    "end": "1607880"
  },
  {
    "text": "and control flow and it's not easy but they they pulled it off they put their heads down they",
    "start": "1607880",
    "end": "1613520"
  },
  {
    "text": "worked hard and on behalf of the community we definitely want to thank them for their efforts so",
    "start": "1613520",
    "end": "1619100"
  },
  {
    "text": "so the next step right he's got his he's got his pull request he's able to like find these vulnerabilities across",
    "start": "1619100",
    "end": "1625039"
  },
  {
    "text": "thousands of thousands and thousands of projects well",
    "start": "1625039",
    "end": "1631360"
  },
  {
    "text": "modern provides a free service for open source projects so far it's got like 7 000 projects",
    "start": "1631940",
    "end": "1638480"
  },
  {
    "text": "ingested into it um you can run any of its 800 plus recipes to transform or interrogate",
    "start": "1638480",
    "end": "1645500"
  },
  {
    "text": "software at scale and generate and update your pull requests so",
    "start": "1645500",
    "end": "1651980"
  },
  {
    "text": "you know for I'm going to mention framework migrations in the contents of security",
    "start": "1651980",
    "end": "1657559"
  },
  {
    "text": "context here um one of the great things about being able to automate uh code Transformations",
    "start": "1657559",
    "end": "1664640"
  },
  {
    "text": "let's take for example uh junit the four to five migration and spring boot one to",
    "start": "1664640",
    "end": "1670940"
  },
  {
    "text": "two in order to be secure you need to get your app from Spring boot one to Spring boot two in order to get from",
    "start": "1670940",
    "end": "1676940"
  },
  {
    "text": "swimming boot one to Spring boot two you've got to go from Jane at four to five I don't know if you've been through",
    "start": "1676940",
    "end": "1682340"
  },
  {
    "text": "that process but it's tedious there's an enormous number of break-in changes so leveraging the open rewrite framework",
    "start": "1682340",
    "end": "1688820"
  },
  {
    "text": "we're able to build complete framework migrations so that you can have your project be security",
    "start": "1688820",
    "end": "1697039"
  },
  {
    "text": "aware and current so anyways back to Modern",
    "start": "1697039",
    "end": "1702260"
  },
  {
    "text": "will provide the service for open source projects and Jonathan has been able to leverage it to build pull requests at",
    "start": "1702260",
    "end": "1709760"
  },
  {
    "text": "scale so he's able to use his zip slip recipe his create Tim file directory",
    "start": "1709760",
    "end": "1715580"
  },
  {
    "text": "recipe and it'll go through it'll detect changes and actually build these well-formatted pull requests that are",
    "start": "1715580",
    "end": "1722299"
  },
  {
    "text": "signed so to give you kind of an example of how this goes here Jonathan's run his recipe and he's going to say okay I've",
    "start": "1722299",
    "end": "1728900"
  },
  {
    "text": "got all these changes I'm going to build my pull request he's going to go through and he's going to build a wall formatted messages he's going to sign his pull",
    "start": "1728900",
    "end": "1736400"
  },
  {
    "text": "request give it a gpg key and say hey go off to the races and build pull requests",
    "start": "1736400",
    "end": "1742039"
  },
  {
    "text": "and send these to all the maintainers and so this is what Jonathan was able to leverage it was the last step in the",
    "start": "1742039",
    "end": "1748700"
  },
  {
    "text": "work that they've put together with their security recipes and control flow and dataflow and with that I'll hand it",
    "start": "1748700",
    "end": "1754820"
  },
  {
    "text": "back to Jonathan but there's more than seven thousand",
    "start": "1754820",
    "end": "1761480"
  },
  {
    "text": "repositories in the world right um it's great that opener indexes those",
    "start": "1761480",
    "end": "1766580"
  },
  {
    "text": "projects but there are more vulnerabilities than just that so how do we identify the other vulnerable projects so bring it back to uh what we",
    "start": "1766580",
    "end": "1774260"
  },
  {
    "text": "talked about before I want to talk about code ql again um you can write a code query that gives",
    "start": "1774260",
    "end": "1779899"
  },
  {
    "text": "you a list of projects that are vulnerable code ql um indexes over 10 100 000 open source",
    "start": "1779899",
    "end": "1787159"
  },
  {
    "text": "projects and 35 000 Java projects and so you can write a query and run it against all these",
    "start": "1787159",
    "end": "1793580"
  },
  {
    "text": "projects and find the vulnerable projects and that'll give you a list of projects that you might want that are good candidates to fix",
    "start": "1793580",
    "end": "1799940"
  },
  {
    "text": "and then contribute that list to this repository and this will make open",
    "start": "1799940",
    "end": "1804980"
  },
  {
    "text": "rewrite and modern aware of this these those projects so you can use you can write recipes to fix against those to",
    "start": "1804980",
    "end": "1811580"
  },
  {
    "text": "fix those vulnerabilities in those projects so finally",
    "start": "1811580",
    "end": "1817279"
  },
  {
    "start": "1815000",
    "end": "1959000"
  },
  {
    "text": "with all of these parts let's go generate some polar price and this is what I did",
    "start": "1817279",
    "end": "1823760"
  },
  {
    "text": "um across all of these different projects um I have generated quite a few pull requests the last three are what we've",
    "start": "1823760",
    "end": "1830240"
  },
  {
    "text": "discussed this in and were made possible by the work this year um and uh",
    "start": "1830240",
    "end": "1837260"
  },
  {
    "text": "as of for the new pull request that I've generated in 2022 um there have been over five 590. one of",
    "start": "1837260",
    "end": "1844159"
  },
  {
    "text": "these projects on this list uh the cve uh 2020 uh array host name uh vulner or",
    "start": "1844159",
    "end": "1850700"
  },
  {
    "text": "sorry our host name array or flow that one was actually done by the GitHub security lab team using the python bot that I wrote",
    "start": "1850700",
    "end": "1856820"
  },
  {
    "text": "um but the rest of them were generated by me and for all of these other projects uh in total I've generated over",
    "start": "1856820",
    "end": "1862700"
  },
  {
    "text": "5200 requests it's my name and one project was the unhappy",
    "start": "1862700",
    "end": "1869179"
  },
  {
    "text": "recipient of three of the pull requests that I did this year um this was a perforce project actually",
    "start": "1869179",
    "end": "1875779"
  },
  {
    "text": "um so uh we're probably seeing some CVS out of cves out of this",
    "start": "1875779",
    "end": "1881120"
  },
  {
    "text": "and this is my contribution graph my GitHub contribution graph um for 2022.",
    "start": "1881120",
    "end": "1887299"
  },
  {
    "text": "um and you can see the contribution you know the number of contributions compared to the rest of the year just you know",
    "start": "1887299",
    "end": "1893299"
  },
  {
    "text": "so I want to talk about some of the best practices for about chlorofresh generation",
    "start": "1893299",
    "end": "1898399"
  },
  {
    "text": "messaging you're interacting with maintainers you're dealing in the process of doing",
    "start": "1898399",
    "end": "1904399"
  },
  {
    "text": "this you're interacting with real people and uh developers are pretty normalized having bugs reported to them but not",
    "start": "1904399",
    "end": "1912140"
  },
  {
    "text": "necessarily security vulnerabilities um the uh security vulnerability like",
    "start": "1912140",
    "end": "1917600"
  },
  {
    "text": "security vulnerabilities are like you're telling the maintainer not only have you written the wrong code but you've also potentially exposed your end users to",
    "start": "1917600",
    "end": "1923059"
  },
  {
    "text": "risk and that's a little bit more sensitive to these people see to to the maintainers you need to be conscious of",
    "start": "1923059",
    "end": "1928640"
  },
  {
    "text": "that this is a great saying all software problems are people problems in Disguise and this is very",
    "start": "1928640",
    "end": "1935120"
  },
  {
    "text": "true in this case you need to think about the people you're interacting with what you're reporting the vulnerability",
    "start": "1935120",
    "end": "1940580"
  },
  {
    "text": "you're disclosing and so I'm going to jump through a couple lessons as well on top of that uh",
    "start": "1940580",
    "end": "1945620"
  },
  {
    "text": "lesson one sign off on all your commits um this is an example of signed off commit",
    "start": "1945620",
    "end": "1951320"
  },
  {
    "text": "uh the reason you want to do this is uh uh there was a bunch of lawsuits against",
    "start": "1951320",
    "end": "1957320"
  },
  {
    "text": "open source maintainers yada yada yada tldr lawyers",
    "start": "1957320",
    "end": "1963220"
  },
  {
    "text": "um if you don't you'll get your pull request rejected by evil dragon bureaucrats",
    "start": "1963440",
    "end": "1968779"
  },
  {
    "text": "lesson number two be a good committee um gpg sign your commits",
    "start": "1968779",
    "end": "1974000"
  },
  {
    "text": "this is what it looks like uh and if you don't you might get impersonated like liners torvald has been on GitHub a",
    "start": "1974000",
    "end": "1980480"
  },
  {
    "text": "couple of times um ccom is a standardized format for",
    "start": "1980480",
    "end": "1985520"
  },
  {
    "text": "commit messages that are security related this is what it looks like kind of I reckon there's not enough time to",
    "start": "1985520",
    "end": "1992059"
  },
  {
    "text": "discuss it here I recommend looking it up it's a good structured way of saying what the vulnerability was in the commit",
    "start": "1992059",
    "end": "1997880"
  },
  {
    "text": "in the commit history lesson number four there are risks to using your personal GitHub account to do",
    "start": "1997880",
    "end": "2004299"
  },
  {
    "start": "2000000",
    "end": "2281000"
  },
  {
    "text": "this um is anybody here familiar uh with github's angry unicorn",
    "start": "2004299",
    "end": "2011039"
  },
  {
    "text": "this was my profile for most of 2020. I broke my GitHub profile doing this",
    "start": "2012460",
    "end": "2018880"
  },
  {
    "text": "um apparently something generating this many polar requests can break your account",
    "start": "2018880",
    "end": "2023919"
  },
  {
    "text": "um and then uh lesson number five coordinate with GitHub uh reach out before uh generating pull",
    "start": "2023919",
    "end": "2031720"
  },
  {
    "text": "requests and um uh let them know that you're gonna do this so you don't get banned basically",
    "start": "2031720",
    "end": "2039220"
  },
  {
    "text": "um and then uh I'm a lesson uh consider the implications",
    "start": "2039220",
    "end": "2045640"
  },
  {
    "text": "I received this issue shortly after I reported I started generating pull",
    "start": "2045640",
    "end": "2051220"
  },
  {
    "text": "requests and I use the term coordinated disclosure because uh you know we move",
    "start": "2051220",
    "end": "2058358"
  },
  {
    "text": "forward it's not about responsible school it's about according to disclosure but regardless of what term you use the answer is no this is full",
    "start": "2058359",
    "end": "2065138"
  },
  {
    "text": "disclosure of a security vulnerability so you need to be conscious of that is it important you need you need to be",
    "start": "2065139",
    "end": "2071020"
  },
  {
    "text": "clear about the messaging so the maintainer can do make something actionable but you need to be aware that",
    "start": "2071020",
    "end": "2076179"
  },
  {
    "text": "you're potentially dropping an O Day on an organization a team a group of people but I argue",
    "start": "2076179",
    "end": "2083740"
  },
  {
    "text": "that at the scale at which you're able to fix security vulnerabilities with this technique if the alternative is not",
    "start": "2083740",
    "end": "2089679"
  },
  {
    "text": "fixing them at all because there's too many of them the trade-offs are worth the downsides",
    "start": "2089679",
    "end": "2095020"
  },
  {
    "text": "of dropping o days potentially across a spread of Open Source projects to try to get those vulnerabilities actually fixed",
    "start": "2095020",
    "end": "2103560"
  },
  {
    "text": "and so I want to leave you with this final conclusion as security researchers",
    "start": "2103900",
    "end": "2110079"
  },
  {
    "text": "we know that these vulnerable we have sorry we have an obligation to society we know these vulnerabilities are out",
    "start": "2110079",
    "end": "2116680"
  },
  {
    "text": "there we've seen them in pen test reports we've written them ourselves we've found them in open source projects",
    "start": "2116680",
    "end": "2122200"
  },
  {
    "text": "we see them again and again and again these vulnerabilities are old and they",
    "start": "2122200",
    "end": "2127900"
  },
  {
    "text": "shouldn't we shouldn't be dealing with the same old vulnerabilities again and again and again every single year we should be looking for new things we're",
    "start": "2127900",
    "end": "2134380"
  },
  {
    "text": "wasting our time and our energy and our employers money doing this",
    "start": "2134380",
    "end": "2140700"
  },
  {
    "text": "there's a state there's a quote from GitHub for every 500 developers you have one security researcher",
    "start": "2140980",
    "end": "2147099"
  },
  {
    "text": "the the statistics the odds are stacked against us the the number of vulner the number of vulnerabilities being",
    "start": "2147099",
    "end": "2153040"
  },
  {
    "text": "developed and written by Developers there's not enough of us to get these things fixed to identify them to report",
    "start": "2153040",
    "end": "2159339"
  },
  {
    "text": "them it just doesn't scale well and so I argue",
    "start": "2159339",
    "end": "2165160"
  },
  {
    "text": "that this technique of multiple request generation is the best way to describe to scale our knowledge of math science",
    "start": "2165160",
    "end": "2171280"
  },
  {
    "text": "technology and security vulnerabilities to have the highest positive impact that we can in the open source world and the",
    "start": "2171280",
    "end": "2178599"
  },
  {
    "text": "security of our organizations and so for this I want to leave you with one final Dan",
    "start": "2178599",
    "end": "2185380"
  },
  {
    "text": "Kaminsky quote it's from his Twitter profile it's there to this day",
    "start": "2185380",
    "end": "2190740"
  },
  {
    "text": "we can fix it we have the technology okay we need to",
    "start": "2190960",
    "end": "2196420"
  },
  {
    "text": "create this technology all right the policy guys are marking with the technology relax We're on it",
    "start": "2196420",
    "end": "2204838"
  },
  {
    "text": "and so I want to leave you with some sound bites learn code 2L um it's an incredibly powerful language",
    "start": "2208300",
    "end": "2214800"
  },
  {
    "text": "and you can do some really cool things with it uh contribute to open rewrite and the deploy your fixes at scale",
    "start": "2214800",
    "end": "2221740"
  },
  {
    "text": "and uh join the GitHub security lab and open red slack channels you can discuss the",
    "start": "2221740",
    "end": "2228099"
  },
  {
    "text": "vulnerabilities you want to fix and have a really positive impact in the world and on top of that I'm not listed on",
    "start": "2228099",
    "end": "2234220"
  },
  {
    "text": "there but if you want to get engaged in open source security in general and discuss these problems um consider joining the GitHub security",
    "start": "2234220",
    "end": "2241900"
  },
  {
    "text": "sorry consider joining um the Linux Foundation open source security Foundation where there are active conversations going on about open source",
    "start": "2241900",
    "end": "2248440"
  },
  {
    "text": "security on a date weekly basis um and with that I want to thank human",
    "start": "2248440",
    "end": "2254800"
  },
  {
    "text": "my employer uh modern for making this possible this technology all of this and Lydia Giuliano the speaker black hat",
    "start": "2254800",
    "end": "2261339"
  },
  {
    "text": "speaker coach who helped turn this presentation into what it was and Sean my intern uh for the spectacular",
    "start": "2261339",
    "end": "2267160"
  },
  {
    "text": "graphics and the work that we put in putting together to make control of what happen so",
    "start": "2267160",
    "end": "2272760"
  },
  {
    "text": "[Music]",
    "start": "2272760",
    "end": "2275879"
  },
  {
    "text": "[Music]",
    "start": "2279720",
    "end": "2282820"
  }
]