[
  {
    "start": "0",
    "end": "67000"
  },
  {
    "text": "hello everybody thank you for coming so today we're gonna talk about mainframes and the subjects are really AM",
    "start": "0",
    "end": "6420"
  },
  {
    "text": "passionate and excited about because well you know I get to pop shells on machine that look a little bit like this",
    "start": "6420",
    "end": "11460"
  },
  {
    "text": "and you know frigate like machines true but you know cool blue neon I mean what's not to love right and like I know",
    "start": "11460",
    "end": "18510"
  },
  {
    "text": "what you're thinking is that really what a mainframe looks like I think you're probably more used to pictures that look",
    "start": "18510",
    "end": "24240"
  },
  {
    "text": "a little bit like this or that you know like big old gray boxes giant red tapes",
    "start": "24240",
    "end": "29519"
  },
  {
    "text": "that nobody cares about that you know some people even call legacy well it's",
    "start": "29519",
    "end": "34920"
  },
  {
    "text": "true that's what they used to look like but in the 1960s I mean they have evolved since like every other product",
    "start": "34920",
    "end": "41640"
  },
  {
    "text": "from the 1960s like when I talk about Tesla for instance when I say test them you don't picture a for 1964 machine",
    "start": "41640",
    "end": "47789"
  },
  {
    "text": "wouldn't break great suspension breaks right you picture a freaking car that can park itself well it's the same thing",
    "start": "47789",
    "end": "53070"
  },
  {
    "text": "with the mainframe they have evolved and they like they're very beautiful piece",
    "start": "53070",
    "end": "59399"
  },
  {
    "text": "of hardware that actually performs well and they have amazing stability and amazing performance criteria is that",
    "start": "59399",
    "end": "67439"
  },
  {
    "text": "anyway just to show you basically the latest mainframe that was released in 2017 so you can hardly call it legacy",
    "start": "67439",
    "end": "73140"
  },
  {
    "text": "now I just put the specs that you would look into a computer if you're looking at it on Amazon but you know just to",
    "start": "73140",
    "end": "79049"
  },
  {
    "text": "give you an idea so this is the IBM G Series mainframe and we're only going to talk about IBM Z series in this talk",
    "start": "79049",
    "end": "84540"
  },
  {
    "text": "so these just just like just a few of the specs so you can see like 32 terabytes or 170 processors cocoanut 5.2",
    "start": "84540",
    "end": "92130"
  },
  {
    "text": "gigahertz this is not a machine that you use to run your email server this is a machine that you use or you want to",
    "start": "92130",
    "end": "98549"
  },
  {
    "text": "spend money on to host your most sensitive business applications like like my friend Chad says if it's",
    "start": "98549",
    "end": "105270"
  },
  {
    "text": "critical it's running on a mainframe like no questions asked and these machines have amazing stability of",
    "start": "105270",
    "end": "110579"
  },
  {
    "text": "amazing performance that you cannot find or easily find anywhere else basically oh and by the way I just included a link",
    "start": "110579",
    "end": "118049"
  },
  {
    "text": "for the presentation because there's gonna be some demos etc so if like if it's you can't see it quite well just",
    "start": "118049",
    "end": "123060"
  },
  {
    "text": "downloaded I'm gonna keep the link here so who needs this these machines who",
    "start": "123060",
    "end": "128399"
  },
  {
    "text": "need such performance such a reliability well I want you to think about every basically",
    "start": "128399",
    "end": "134540"
  },
  {
    "text": "critical service that you rely on in your everyday life let's say wire",
    "start": "134540",
    "end": "139800"
  },
  {
    "text": "transfer money getting money out of an ATM booking flights to come see conferences a hotel booking all of these",
    "start": "139800",
    "end": "146450"
  },
  {
    "text": "important transactions occur on a mainframe like 87% of credit card",
    "start": "146450",
    "end": "153030"
  },
  {
    "text": "transactions go through one of these machines so you know it's it's just wrong and sad to call them legacy these",
    "start": "153030",
    "end": "159000"
  },
  {
    "text": "machines power the world economy and yet we do not spend jesters and hackers or whatever we do not give a about",
    "start": "159000",
    "end": "164670"
  },
  {
    "text": "them and that's just too sad and so just to give you an idea of some of the companies that actually rely on a",
    "start": "164670",
    "end": "170850"
  },
  {
    "text": "mainframe so I like I put a slide and I put a lot of logos of the company but I couldn't fit them all in but I hope you",
    "start": "170850",
    "end": "177450"
  },
  {
    "text": "recognize some of the companies that you care about you use in your daily life some of them maybe are your clients maybe it's your bank maybe it's your",
    "start": "177450",
    "end": "183840"
  },
  {
    "text": "airline and if you don't know you do not find the company that you care about on this slide maybe you'll find out on this one",
    "start": "183840",
    "end": "188910"
  },
  {
    "text": "my point is like a lot of companies use this use these machines your three years",
    "start": "188910",
    "end": "193950"
  },
  {
    "text": "pen testers we prefer going after domain admins or after email servers I mean honestly I do not care about the emails",
    "start": "193950",
    "end": "200220"
  },
  {
    "text": "but the CEOs email if I can add a zero to my bank account and guess where the bank account is stored on a database on",
    "start": "200220",
    "end": "206040"
  },
  {
    "text": "a mainframe so like there was this awesome code by Dominic White that said when chester's tend to resemble other",
    "start": "206040",
    "end": "212489"
  },
  {
    "text": "pen testers instead of resembling actual attackers and like it's so true in the world of their mainframe at least",
    "start": "212489",
    "end": "218100"
  },
  {
    "text": "actually so before we move on just a little bit about me pen tester PwC France I'm mainly hacking Windows and",
    "start": "218100",
    "end": "224880"
  },
  {
    "text": "UNIX stuff right I'm as guilty as the rest of you but I first got my hands on a mainframe in 2014 I was working out",
    "start": "224880",
    "end": "230700"
  },
  {
    "text": "waystone at the time and we were doing this you know global audit like basically scanning everything that had",
    "start": "230700",
    "end": "235920"
  },
  {
    "text": "an IP address and we found this this basically like telnet like service and",
    "start": "235920",
    "end": "243359"
  },
  {
    "text": "you know you google it you find the word mainframe etc and like we were so excited like this this is an old machine",
    "start": "243359",
    "end": "249120"
  },
  {
    "text": "that's sitting on the network we're so gonna you know pulling the out of it but we didn't for various reasons",
    "start": "249120",
    "end": "254670"
  },
  {
    "text": "like lack of tools lack of easily accessible documentation lack of you know talks about it there was one talk",
    "start": "254670",
    "end": "260340"
  },
  {
    "text": "at blackhat at the time and so I decided to look into it do the research develop some tools I presented some of my tools",
    "start": "260340",
    "end": "267240"
  },
  {
    "text": "like last year at hugging the box and so this is basically the continuity of that of that",
    "start": "267240",
    "end": "273380"
  },
  {
    "text": "truck and all the tools that I will present are on github my github so you can go fetch them and yeah like here's",
    "start": "273380",
    "end": "281390"
  },
  {
    "text": "my Twitter if you follow follow me promise I don't only talk about me frames so what are we gonna talk about",
    "start": "281390",
    "end": "288500"
  },
  {
    "start": "287000",
    "end": "333000"
  },
  {
    "text": "today the meat of this talk will be about post exploit stuff like what do you do once you have a shell on a",
    "start": "288500",
    "end": "295100"
  },
  {
    "text": "mainframe however I found out that people actually struggle a little bit with the idea of like executing code",
    "start": "295100",
    "end": "302210"
  },
  {
    "text": "remotely on a mainframe like they have trouble believing it like I had to convince some actually pen testers",
    "start": "302210",
    "end": "308480"
  },
  {
    "text": "clients or whatever that hey it's possible to attack this machine like you would any other machine so I'm just",
    "start": "308480",
    "end": "313880"
  },
  {
    "text": "before going to the fun stuff of like assembly playing with memory and all that cool stuff I just want to do a",
    "start": "313880",
    "end": "319310"
  },
  {
    "text": "quick recap of like the current tools and current techniques to execute code that our mainframe like how would you",
    "start": "319310",
    "end": "324530"
  },
  {
    "text": "approach this machine if you find it on a network so just 10 minutes briefly on that and then we'll go and do some",
    "start": "324530",
    "end": "330950"
  },
  {
    "text": "really cool stuff okay brilliant now this machine if you find it on a",
    "start": "330950",
    "end": "336770"
  },
  {
    "start": "333000",
    "end": "381000"
  },
  {
    "text": "network you want to communicate with it it has an IP address you can find like HTTP FTP SSH all the cool normal classic",
    "start": "336770",
    "end": "344510"
  },
  {
    "text": "stuff because it basically has a UNIX on it so yeah again I'm only talking about",
    "start": "344510",
    "end": "349640"
  },
  {
    "text": "IBM's e-series so the main protocol to communicate with this machine is called TN 3217 TN 3270 is nothing but a telnet",
    "start": "349640",
    "end": "360010"
  },
  {
    "text": "rebrand rebranded channel ed that's it except that you will need a virtual emulator or you know the real phone the",
    "start": "360010",
    "end": "366650"
  },
  {
    "text": "real terminal to basically download it and communicate with the Machine and it's just you know telnet with additional data streams etc so there's X",
    "start": "366650",
    "end": "373940"
  },
  {
    "text": "30 to 70 there's WC 30 to 70 there are other tools just download them and then you can communicate with the mainframe",
    "start": "373940",
    "end": "380290"
  },
  {
    "text": "but the thing is like telnet 1032 70 is clear text so right there you have a you",
    "start": "380290",
    "end": "387320"
  },
  {
    "text": "know possibility of sniffing the the network and just get credentials and you",
    "start": "387320",
    "end": "392480"
  },
  {
    "text": "know so many clients like spend like minutes hours arguing that their machine is is you know unhackable so we do you",
    "start": "392480",
    "end": "399140"
  },
  {
    "text": "should not apply this or that security measure and like this one question like okay do you auntie and 3270 yes is it over ssl no",
    "start": "399140",
    "end": "406309"
  },
  {
    "text": "and they're like what the hell are you talking about it's unbreakable anyway so just to show you basically that it's",
    "start": "406309",
    "end": "412819"
  },
  {
    "text": "possible to like there are tools like if you download the latest ettercap on github you can just basically get a TN",
    "start": "412819",
    "end": "418939"
  },
  {
    "text": "30 to 70 dissector that will you know parse the network and I will just show",
    "start": "418939",
    "end": "424459"
  },
  {
    "text": "you like a basic man-in-the-middle attack with our people and it actually works so here we have we launched at",
    "start": "424459",
    "end": "430429"
  },
  {
    "text": "your cap and you can see that our peoples are in mode like classic 1990 stuff right and then on the other side",
    "start": "430429",
    "end": "436189"
  },
  {
    "text": "we launch an emulator mainframe emulator you can see we connect we type in the IP address it connects to port 23 and here",
    "start": "436189",
    "end": "442669"
  },
  {
    "text": "we have the like welcoming screen and a mainframe so this is custom design I designed it it doesn't look as cool as",
    "start": "442669",
    "end": "448430"
  },
  {
    "text": "that normally so you have a choice between two apps TSO and euro so Chea so just the bin bash it just executes you",
    "start": "448430",
    "end": "454279"
  },
  {
    "text": "know lets you execute commands so we type in TSO and then we can type in our username and password so this is what an",
    "start": "454279",
    "end": "459769"
  },
  {
    "text": "actual connection on the mainframe looks like new type in a username password then here we have the you know the",
    "start": "459769",
    "end": "466399"
  },
  {
    "text": "prompt where we can execute commands like netstat like ping like nslookup like normal commands to list files etc",
    "start": "466399",
    "end": "472189"
  },
  {
    "text": "and you can see here that the ettercap basically just got the username and password just to say that hey simple",
    "start": "472189",
    "end": "478999"
  },
  {
    "text": "attacks like not network sniffing still work because nobody cares about implementing SSL on a mainframe like a",
    "start": "478999",
    "end": "485659"
  },
  {
    "text": "soldier of Fortran the same guy that wrote this ettercap dissector scanned all the mainframes on the internet only",
    "start": "485659",
    "end": "491959"
  },
  {
    "text": "half of them use SSL so you can imagine this stage in the like how it is in the",
    "start": "491959",
    "end": "497479"
  },
  {
    "text": "internal network where nobody cares about SSL and even if SSL is present the virtual emulator that we just used is",
    "start": "497479",
    "end": "503930"
  },
  {
    "text": "not as modern as browsers you know like it doesn't maintain a list of certificates that it needs to check",
    "start": "503930",
    "end": "510499"
  },
  {
    "text": "etcetera it doesn't have that so even then with SSL you can actually perform SSL interception and decryption",
    "start": "510499",
    "end": "517939"
  },
  {
    "text": "so just to say that I don't need a zero-day to go inside a mainframe if I can sniff Network and get credentials so",
    "start": "517939",
    "end": "525230"
  },
  {
    "start": "525000",
    "end": "739000"
  },
  {
    "text": "just staying in the like very simple attacks that actually work in the field we're gonna look at brute force",
    "start": "525230",
    "end": "531260"
  },
  {
    "text": "something that you would not think of trying on on a normal environment or like you",
    "start": "531260",
    "end": "537170"
  },
  {
    "text": "would do in the last week risa like you know last thing that you would do in a Windows environment but it got me just",
    "start": "537170",
    "end": "544880"
  },
  {
    "text": "so many mainframes it's insane it works like and I'm gonna show you very quickly how basically I go about it it's just",
    "start": "544880",
    "end": "550970"
  },
  {
    "text": "like the Chia so like the command-line interpreter that lets you connect to the mainframe and you know authenticate and",
    "start": "550970",
    "end": "556700"
  },
  {
    "text": "execute commands it actually it tells you if the username is valid or not now",
    "start": "556700",
    "end": "563090"
  },
  {
    "text": "I chose a poor example but usually there are like there are some restrictions on",
    "start": "563090",
    "end": "569180"
  },
  {
    "text": "the user name that makes them very predictable so the user name cannot exceed seven characters it's always",
    "start": "569180",
    "end": "575270"
  },
  {
    "text": "uppercase it has three special characters you can input only three types of special characters called",
    "start": "575270",
    "end": "580580"
  },
  {
    "text": "national characters you know and you cannot start it with a with a number so all these restrictions makes it makes it",
    "start": "580580",
    "end": "586490"
  },
  {
    "text": "like you know the companies are not cannot get too creative with their username so all the developers would be like def zero zero one they have zero",
    "start": "586490",
    "end": "592490"
  },
  {
    "text": "zero two or a user from users from certain Department will be like for instance G GA zero and then three",
    "start": "592490",
    "end": "598880"
  },
  {
    "text": "letters and something like that so all of this makes it very easy and very practical to actually conduct a",
    "start": "598880",
    "end": "605210"
  },
  {
    "text": "brute-force attack to enumerate users and it has worked so many times and there's an nmap script to do it again",
    "start": "605210",
    "end": "611090"
  },
  {
    "text": "courtesy of soldier of fortran so it's included in the latest and maps so you do not have to do anything just think",
    "start": "611090",
    "end": "617000"
  },
  {
    "text": "about this type of attack when you're facing a mainframe now once you identify the list of user names that are valid",
    "start": "617000",
    "end": "623420"
  },
  {
    "text": "obviously the next step is to guess the password now the password that I usually",
    "start": "623420",
    "end": "629690"
  },
  {
    "text": "trying with which the one I the give me gives me the most results it's just passwords equal username it's so stupid",
    "start": "629690",
    "end": "635960"
  },
  {
    "text": "it's so but it works it's like like a like I said before like you don't need zero days it's these simple attacks",
    "start": "635960",
    "end": "641630"
  },
  {
    "text": "still work on a mainframe I mean come on and so just to show you how effective it is I'm just gonna show you a dump that",
    "start": "641630",
    "end": "648140"
  },
  {
    "text": "like basically I did on like client assignment I just be like a dump between like we dumped the entity s did file",
    "start": "648140",
    "end": "655610"
  },
  {
    "text": "like the Active Directory hash table on Windows and did the same on the mainframe so 1000 users on Windows 998",
    "start": "655610",
    "end": "663310"
  },
  {
    "text": "users on mainframe and so you can see that on the windows world in the windows world only 5%",
    "start": "663310",
    "end": "669560"
  },
  {
    "text": "like you used password the password was username plus a number on a mainframe 27",
    "start": "669560",
    "end": "674870"
  },
  {
    "text": "percent where the password was equal to username plus a number 19 percent password equals username now obviously",
    "start": "674870",
    "end": "682280"
  },
  {
    "text": "this is a totally biased result but what I want to convey is that there's a",
    "start": "682280",
    "end": "688310"
  },
  {
    "text": "really difference or a gap in security maturity between the windows world in the mainframe world like in the windows",
    "start": "688310",
    "end": "693650"
  },
  {
    "text": "world it has been broken so many times that people have no trouble believing that it's you know it's attackers are",
    "start": "693650",
    "end": "699650"
  },
  {
    "text": "out there and they're after the platform they know how to exploit it the mainframe world is the only environment where I actually heard this the",
    "start": "699650",
    "end": "706370"
  },
  {
    "text": "following justifications we don't need to worry about that hackers will not go through the trouble of actually doing",
    "start": "706370",
    "end": "711980"
  },
  {
    "text": "this stuff on a mainframe or learning the mainframe or developing tools to pen test it or something they don't they don't know how to do it it's closed",
    "start": "711980",
    "end": "718100"
  },
  {
    "text": "that's but it's insane to have this kind of justifications in 2017 given the multiple security context that are out",
    "start": "718100",
    "end": "724970"
  },
  {
    "text": "there but it's still true in the mainframe world so people just don't care about it or don't care about",
    "start": "724970",
    "end": "731120"
  },
  {
    "text": "securing it so these attacks work so that's basically my the whole point",
    "start": "731120",
    "end": "736550"
  },
  {
    "text": "behind this small statistics now now these are two attacks that you know work",
    "start": "736550",
    "end": "742360"
  },
  {
    "start": "739000",
    "end": "877000"
  },
  {
    "text": "there's another one that basically showed last year hacking the Box in",
    "start": "742360",
    "end": "747620"
  },
  {
    "text": "hacking Paris like I'm just gonna like you know very briefly describe it but if",
    "start": "747620",
    "end": "753230"
  },
  {
    "text": "you want more information about it just go see the talk because it's it's a bit heavier than that but I'm just gonna",
    "start": "753230",
    "end": "758360"
  },
  {
    "text": "graze over it very quickly now if we come back to the main welcome and interface of a mainframe so we had the",
    "start": "758360",
    "end": "764750"
  },
  {
    "text": "choice between you know TSO the command-line interpreter where we can execute commands and euro now euro is",
    "start": "764750",
    "end": "770750"
  },
  {
    "text": "just a business app that's present on this mainframe so think of it like when you go to your bank and your bank an",
    "start": "770750",
    "end": "776750"
  },
  {
    "text": "operator like for instance wants to get customer customer information about your account or whatever like that",
    "start": "776750",
    "end": "781790"
  },
  {
    "text": "they may use in-house developed app right over 13 and 30 to 70 and it looks",
    "start": "781790",
    "end": "788150"
  },
  {
    "text": "a little bit like this so if you type in euro here you get this authentication form and like the banking operator",
    "start": "788150",
    "end": "795110"
  },
  {
    "text": "authenticate itself and you know then they type in like your customer number to get information or to make a wire",
    "start": "795110",
    "end": "801110"
  },
  {
    "text": "transfer or you know whatever but the thing is this isn't a web obviously like and what I",
    "start": "801110",
    "end": "808019"
  },
  {
    "text": "found out is that almost all interactive applications that run on a mainframe run over t + 30 to 70 that are heavily used",
    "start": "808019",
    "end": "814829"
  },
  {
    "text": "by on the mainframe world they run over them same middleware or most of them run",
    "start": "814829",
    "end": "820829"
  },
  {
    "text": "over the same middleware that's called Kix customer information control system now Kix there are hundreds of books about",
    "start": "820829",
    "end": "827279"
  },
  {
    "text": "Kix even more maybe but I'm just gonna try to you know summarize it in one",
    "start": "827279",
    "end": "832350"
  },
  {
    "text": "sentence and I hope I'm not gonna offend too many mainframe purists but to me Kix is really a combination of an Apache",
    "start": "832350",
    "end": "839100"
  },
  {
    "text": "Tomcat in a CMS like Drupal in the sense that a developer will code his app in",
    "start": "839100",
    "end": "844560"
  },
  {
    "text": "COBOL assembly C or whatever compile it and then put it on kicks and kicks will",
    "start": "844560",
    "end": "849630"
  },
  {
    "text": "make it available to everyone and all the requests that come in will get routed to the proper sub application or",
    "start": "849630",
    "end": "855089"
  },
  {
    "text": "sub task kicks will do like the memory handling task scheduling caching of",
    "start": "855089",
    "end": "863130"
  },
  {
    "text": "files handling locks and resources on disk etc so it's like it's really it",
    "start": "863130",
    "end": "869040"
  },
  {
    "text": "really is a middleware except that it was developed in 1968 long before the web pal long before right before it even",
    "start": "869040",
    "end": "875310"
  },
  {
    "text": "internet so basically and why is it still used it's just it's just because",
    "start": "875310",
    "end": "881069"
  },
  {
    "text": "it can handle 20 billion transactions a day you know simple as that it so it's very powerful but the thing is just like",
    "start": "881069",
    "end": "886980"
  },
  {
    "text": "on Apache Tomcat where one of the checks is to find the slash manager slash HTML",
    "start": "886980",
    "end": "892500"
  },
  {
    "text": "to upload the web shell well the same thing or the same concept applies to",
    "start": "892500",
    "end": "898589"
  },
  {
    "text": "kicks in the in the idea that in the sense that the idea is to find a combination of keys there's no you know",
    "start": "898589",
    "end": "904800"
  },
  {
    "text": "notion of an URL URL so the idea is to find a combination of keys to press to exit the app and when we exit the app",
    "start": "904800",
    "end": "910920"
  },
  {
    "text": "that's you know available kicks asks us well what do you want to go which which other app you wanna launch and there the",
    "start": "910920",
    "end": "917430"
  },
  {
    "text": "idea is to launch an admin app that will allow us to you know execute code now",
    "start": "917430",
    "end": "923310"
  },
  {
    "text": "I'm just briefly summarizing what it is but just to show you what it looks like so it's like it's maybe clearer so here",
    "start": "923310",
    "end": "931230"
  },
  {
    "text": "we have euro we type in euro and here we have the app so instead of a fan ticket",
    "start": "931230",
    "end": "936569"
  },
  {
    "text": "we just click on pf3 on the top right corner and we click on pf3 we have a blank screen now here basically Kix is",
    "start": "936569",
    "end": "943259"
  },
  {
    "text": "asking us where you want to go and we type in the admin utility and if it's not protected we get access to all these",
    "start": "943259",
    "end": "948829"
  },
  {
    "text": "cool functions that may seem obscure but these one of these functions lets us read and write files and I'm not talking",
    "start": "948829",
    "end": "956009"
  },
  {
    "text": "about configuration files I'm talking about business files that contain customer data that contain that balance",
    "start": "956009",
    "end": "961229"
  },
  {
    "text": "that contain all that cool stuff so I wrote a tool that will basically take advantage of all this stuff and it will",
    "start": "961229",
    "end": "967289"
  },
  {
    "text": "it will automate all these steps that I showed you and some more and like it will find the right combination of keys",
    "start": "967289",
    "end": "973709"
  },
  {
    "text": "to exit the app it will upload a reverse shell like coded in JCL and racks like",
    "start": "973709",
    "end": "979949"
  },
  {
    "text": "some special scripting languages on the mainframe and it will give you a reverse shell just like you know classic called reverse shell and so this is the tool",
    "start": "979949",
    "end": "987329"
  },
  {
    "text": "that I presented earlier it's on my github if you want I'm just gonna show you so this is remotely like basically sit in a listener and then remotely",
    "start": "987329",
    "end": "995279"
  },
  {
    "text": "talking with the mainframe with this tool that's called kik spoon and like I said it will take care it will alleviate",
    "start": "995279",
    "end": "1001249"
  },
  {
    "text": "some or bypass some protections if there are any so you know it does all suffer well let you check it out later but this",
    "start": "1001249",
    "end": "1007189"
  },
  {
    "text": "is just to show you an actual case of a diva's show on a mainframe that hey it's possible so you can see here it did all",
    "start": "1007189",
    "end": "1013279"
  },
  {
    "text": "that's all it's magic and then here we have a TSO shell prompt that basically lists user we can type in commands and",
    "start": "1013279",
    "end": "1019699"
  },
  {
    "text": "that's that list files and all that stuff so all this all these like small",
    "start": "1019699",
    "end": "1025928"
  },
  {
    "start": "1022000",
    "end": "1072000"
  },
  {
    "text": "tips are just ways current ways of executing code in a mainframe but there",
    "start": "1025929",
    "end": "1031009"
  },
  {
    "text": "are many more like you can execute go through FTP it's a feature not a phone you have network job entry but yeah",
    "start": "1031009",
    "end": "1038808"
  },
  {
    "text": "there's buffer overflows on a mainframe just that there's there there are buffer overflows on a mainframe and like people",
    "start": "1038809",
    "end": "1045019"
  },
  {
    "text": "still think this machine is unhackable it's just like any other machine that that is one of the key messages of this",
    "start": "1045019",
    "end": "1050090"
  },
  {
    "text": "presentation and we should care about it because if you know Windows goes down",
    "start": "1050090",
    "end": "1055250"
  },
  {
    "text": "nobody cares about it if a mainframe goes down citizens are impacted so it's that critical and like you check out",
    "start": "1055250",
    "end": "1060289"
  },
  {
    "text": "these awesome guys talks they they've developed tools and they represented a lot they've contributed a lot to the",
    "start": "1060289",
    "end": "1066980"
  },
  {
    "text": "security well two skewers your mainframe so check it out anyway so now that we are",
    "start": "1066980",
    "end": "1073810"
  },
  {
    "start": "1072000",
    "end": "1239000"
  },
  {
    "text": "comfortable with the hypothesis of having a shell on a mainframe I hope what can we do once we are on the",
    "start": "1073810",
    "end": "1080440"
  },
  {
    "text": "machine like we are a standard user what's blocking us from going route and doing whatever we want what does it even",
    "start": "1080440",
    "end": "1087130"
  },
  {
    "text": "mean to be route on a mainframe now I'm only gonna talk on z/os about z/os which is the most common operating system on a",
    "start": "1087130",
    "end": "1093640"
  },
  {
    "text": "mainframe and so once you have a shell on IBM Z mainframe hosting z/os the main",
    "start": "1093640",
    "end": "1101530"
  },
  {
    "text": "hurdle like between you and accessing everything like the main obstacle is called most of the time rack F now rack",
    "start": "1101530",
    "end": "1107620"
  },
  {
    "text": "every resource artists control facility is a product one of three that you may find on a mainframe think of it like Pam",
    "start": "1107620",
    "end": "1113980"
  },
  {
    "text": "right it doesn't on occasion but it also does access control and it's mandatory access control so think of it like a big",
    "start": "1113980",
    "end": "1120910"
  },
  {
    "text": "giant firewall table that says this user can access this resource this particular",
    "start": "1120910",
    "end": "1125950"
  },
  {
    "text": "time of the day with this type of access we'd write update whatever from this terminal and so on a firewall you would",
    "start": "1125950",
    "end": "1132670"
  },
  {
    "text": "have 1,000 rules raka 5060 thousand worlds easily so it's",
    "start": "1132670",
    "end": "1138190"
  },
  {
    "text": "it's mandatory access control yeah and just one small digression for people",
    "start": "1138190",
    "end": "1144100"
  },
  {
    "text": "that think that a mainframe is secured by default or by design no such thing and when you get a mainframe when you",
    "start": "1144100",
    "end": "1150730"
  },
  {
    "text": "get it from the shop rack F is not activated so let me just you know let that sink in you do not have access",
    "start": "1150730",
    "end": "1157570"
  },
  {
    "text": "control enforced when you get your mainframe set up in fact one of the checks and any auditing guide is to",
    "start": "1157570",
    "end": "1164050"
  },
  {
    "text": "actually verify that rock F is properly enforced in control you know it in fail",
    "start": "1164050",
    "end": "1169870"
  },
  {
    "text": "mode so in like by default if you access something rocket will tell you it will raise the security notice but it will",
    "start": "1169870",
    "end": "1175780"
  },
  {
    "text": "let you access that resource so just one of the checks is to activate this protection so think about it next time",
    "start": "1175780",
    "end": "1181600"
  },
  {
    "text": "somebody says oh yeah remain frame is locked down like IBM did a good job and they did a good job this is a highly",
    "start": "1181600",
    "end": "1187240"
  },
  {
    "text": "customizable machine you cannot expect it to be secured by default it's not a freaking iPhone it's you know it's a",
    "start": "1187240",
    "end": "1192910"
  },
  {
    "text": "machine that you need to tune and not only tune performance wise but also security wise so that's small digression",
    "start": "1192910",
    "end": "1199240"
  },
  {
    "text": "right there so anyway on rack F you have you know standard users and the",
    "start": "1199240",
    "end": "1204330"
  },
  {
    "text": "equivalent of route I would say on a mainframe would be special now special does not mean that you can access anything it means you can give",
    "start": "1204330",
    "end": "1211230"
  },
  {
    "text": "yourself access to average or anything so again mandatory access control you need to write a rule that says hey I can",
    "start": "1211230",
    "end": "1218370"
  },
  {
    "text": "access that resource even in your spec when you're special there's another attribute that's called operations which means you can access",
    "start": "1218370",
    "end": "1225360"
  },
  {
    "text": "any resource unless there is a rule in racket that says hey you cannot do that so it's still very interesting one and",
    "start": "1225360",
    "end": "1232680"
  },
  {
    "text": "all that remains you can manage some auditing classes and do some fun stuff with log in classes we're not gonna really care about it that much anyway",
    "start": "1232680",
    "end": "1239700"
  },
  {
    "start": "1239000",
    "end": "1341000"
  },
  {
    "text": "so when you type in the list so if you go back to our TSO command prompt if you type in the list user command you will",
    "start": "1239700",
    "end": "1246690"
  },
  {
    "text": "basically see your attributes so list user or Lu like which I before you get",
    "start": "1246690",
    "end": "1252300"
  },
  {
    "text": "to see your attributes so in this case we're special you can see here we're special with operations and even with",
    "start": "1252300",
    "end": "1257760"
  },
  {
    "text": "auditors but what if we have zero privileges how can we become root right",
    "start": "1257760",
    "end": "1263520"
  },
  {
    "text": "and that's where we will place the play with with you know z/os in journals and",
    "start": "1263520",
    "end": "1268800"
  },
  {
    "text": "play with some memory and do some cool stuff now just before we move on because",
    "start": "1268800",
    "end": "1274950"
  },
  {
    "text": "we're gonna talk a little bit about assembling some low-level stuff I just want to stress out that z/architecture",
    "start": "1274950",
    "end": "1280650"
  },
  {
    "text": "is it has nothing to do with intel ok it's properly to resi pu it has its own",
    "start": "1280650",
    "end": "1286440"
  },
  {
    "text": "instructions like over 1100 instructions so it's it's not RM it's not x86 it's",
    "start": "1286440",
    "end": "1291570"
  },
  {
    "text": "you know it's another cpu basically so you have many variants each instruction has many variants memory to memory",
    "start": "1291570",
    "end": "1297390"
  },
  {
    "text": "register to register registry media whatever on x86 we have a",
    "start": "1297390",
    "end": "1302520"
  },
  {
    "text": "general-purpose registers on Xeon Z we have 16 general-purpose registers but",
    "start": "1302520",
    "end": "1308970"
  },
  {
    "text": "the main one plus you know plus dozens others control registers access registers floating registers but the",
    "start": "1308970",
    "end": "1314130"
  },
  {
    "text": "main one that we're going to focus on is called the PSW register now the PSW register is like the EIP register on x86",
    "start": "1314130",
    "end": "1320970"
  },
  {
    "text": "it holds the instruction that the address of the next instruction to be executed but it also holds some other",
    "start": "1320970",
    "end": "1326850"
  },
  {
    "text": "important control flags like like this is the register that will say for in user mode or kernel mode let's say for",
    "start": "1326850",
    "end": "1333360"
  },
  {
    "text": "instance so we're gonna focus on it a little bit we inspect one we know debug our",
    "start": "1333360",
    "end": "1338820"
  },
  {
    "text": "programs etc so z/os like any modern operating system and I stress the word",
    "start": "1338820",
    "end": "1345240"
  },
  {
    "start": "1341000",
    "end": "1419000"
  },
  {
    "text": "modern uses data structures or keeps their structures in memory to describe the current state of the operating",
    "start": "1345240",
    "end": "1351900"
  },
  {
    "text": "systems on Windows you have a process structures that you know describe the process that are running they're kept in",
    "start": "1351900",
    "end": "1357450"
  },
  {
    "text": "a doubly-linked list etc all that stuff same thing on the US except that these",
    "start": "1357450",
    "end": "1362970"
  },
  {
    "text": "data structures they're called control blocks so these think of it just like in a",
    "start": "1362970",
    "end": "1368160"
  },
  {
    "text": "bunch of data with bunch of pointers that describe the current state of the program so tasks user running etc etc",
    "start": "1368160",
    "end": "1373560"
  },
  {
    "text": "etcetera and rocof initializes it initializes one of these control blocks",
    "start": "1373560",
    "end": "1379710"
  },
  {
    "text": "that's called the AC EE access accessor environment accessor control environment",
    "start": "1379710",
    "end": "1385200"
  },
  {
    "text": "element and basically what a accessor element environment oh my god I'm gonna",
    "start": "1385200",
    "end": "1391560"
  },
  {
    "text": "make it no I'll give it give it I give in anyway check it out these acronyms",
    "start": "1391560",
    "end": "1397170"
  },
  {
    "text": "are impossible so racket basically in a initializes the AC control block and it stores the user ID the group and the",
    "start": "1397170",
    "end": "1404730"
  },
  {
    "text": "privileges of the current user like think of it as the choke in the scripture or the security token the scripture on Windows so this control",
    "start": "1404730",
    "end": "1411570"
  },
  {
    "text": "block holds the current privileges of the user and we need when you type in list user or if you want to check in",
    "start": "1411570",
    "end": "1416790"
  },
  {
    "text": "like you go through memory and find this control block you always want to start a virtual address space 0 if you want to",
    "start": "1416790",
    "end": "1423330"
  },
  {
    "text": "find actually any control block in memory you start at virtual address space 0 that's where you find basically",
    "start": "1423330",
    "end": "1429090"
  },
  {
    "text": "the PSA or the the prefix safe area like the the Genesis control block I'm gonna",
    "start": "1429090",
    "end": "1435420"
  },
  {
    "text": "call it but just like you know the main one Rev that references all the other major control blocks and you can see here it's just a matter of walking from",
    "start": "1435420",
    "end": "1441780"
  },
  {
    "text": "one pointer to another so you can do it an assembly and C or whatever and see basically we just go to offset 548 we",
    "start": "1441780",
    "end": "1449790"
  },
  {
    "text": "found a pointer to the control block that describes our current virtual address space after 100 in H we find an",
    "start": "1449790",
    "end": "1456600"
  },
  {
    "text": "extended pointer an extended control block and after 200 we go and we actually find a point which was the AC",
    "start": "1456600",
    "end": "1463380"
  },
  {
    "text": "now all these offsets or most of them I would say are documented in M",
    "start": "1463380",
    "end": "1468860"
  },
  {
    "text": "data areas so PDF files like there are four or five that are released by IBM",
    "start": "1468860",
    "end": "1474710"
  },
  {
    "text": "each for five thousand pages long but you find all this stuff inside so you",
    "start": "1474710",
    "end": "1480049"
  },
  {
    "text": "can have at it I'm just gonna leave it there you know for future reference if you want to do the same thing and you",
    "start": "1480049",
    "end": "1485269"
  },
  {
    "text": "know but basically it's just walking from one pointer to the to another right so upset 38 in this structure in memory",
    "start": "1485269",
    "end": "1493460"
  },
  {
    "text": "we have you know the user flags so you can see here the you know this bit controls it for special operations or",
    "start": "1493460",
    "end": "1499460"
  },
  {
    "text": "auditor so the idea naively I'm gonna say one that is not familiar with the platform in the protections in place",
    "start": "1499460",
    "end": "1505809"
  },
  {
    "text": "what like one of the possible vectors of attack is to well write a code that will find this control block and update",
    "start": "1505809",
    "end": "1513529"
  },
  {
    "text": "despite like and yeah like I said it's naively we are very naive we just want",
    "start": "1513529",
    "end": "1519260"
  },
  {
    "text": "to write on this program and assembly that just finds the structure and patch it in memory and boom see if we can become root or special so that's the",
    "start": "1519260",
    "end": "1525590"
  },
  {
    "text": "first step of the attack right but if you go ahead and do that you will get this beautiful error that says hey you can't obviously so there happened at 0 C",
    "start": "1525590",
    "end": "1533809"
  },
  {
    "text": "for which just means that you know we have a memory exception that occurred now what happened was that on z/os or on",
    "start": "1533809",
    "end": "1540350"
  },
  {
    "text": "Z sorry it's not protection that you do not have on x86 but basically each page",
    "start": "1540350",
    "end": "1545779"
  },
  {
    "text": "frame is allocated a protection key 5 bit that is composed of a storage bit on",
    "start": "1545779",
    "end": "1552679"
  },
  {
    "text": "four bits and a fetch protection bit so each 4k of memory has this protection",
    "start": "1552679",
    "end": "1559039"
  },
  {
    "text": "right and let's just focus on the storage key that's the main key that's the main important piece of information",
    "start": "1559039",
    "end": "1565159"
  },
  {
    "text": "so there are 16 possible values obviously so if a patch of memory has a storage key between 0 and 7 it means",
    "start": "1565159",
    "end": "1572870"
  },
  {
    "text": "that patch of memory is allocated by system services if that patch of memory",
    "start": "1572870",
    "end": "1577940"
  },
  {
    "text": "has an storage key of H it means it has been allocated by users if that's page",
    "start": "1577940",
    "end": "1583279"
  },
  {
    "text": "frame has the storage key between 9 and 15 it means that patch of memory is real",
    "start": "1583279",
    "end": "1588620"
  },
  {
    "text": "memory there is no translation you know virtual address space translation none of that it's real memory you're dealing with so you have",
    "start": "1588620",
    "end": "1594649"
  },
  {
    "text": "other problems like process isolation and all that kind of stuff so anyway when a program accesses a patch of",
    "start": "1594649",
    "end": "1600320"
  },
  {
    "text": "memory the current storage key in the PSW register gets compared with the storage",
    "start": "1600320",
    "end": "1607480"
  },
  {
    "text": "key in memory if they match we have full access if they don't match then we get",
    "start": "1607480",
    "end": "1612820"
  },
  {
    "text": "denied or we only get read access depending on this fetch protection bit so if we go back to the error of our you",
    "start": "1612820",
    "end": "1619659"
  },
  {
    "text": "know simple program that was running you can see that the PSW at the time of the error the storage key was 8 you can see",
    "start": "1619659",
    "end": "1625299"
  },
  {
    "text": "here and that means that with the the AC e the control block is most probably in",
    "start": "1625299",
    "end": "1630940"
  },
  {
    "text": "a space that will have the storage key different than H actually it's a storage",
    "start": "1630940",
    "end": "1636130"
  },
  {
    "text": "key of 0 so here I just mapped all the possible outcomes so if the PSW key you",
    "start": "1636130",
    "end": "1641679"
  },
  {
    "text": "have a 0 you can access anything in memory so full read/write if it's not 0",
    "start": "1641679",
    "end": "1646840"
  },
  {
    "text": "and the storage keys match yeah full access if they don't match but the fetch protection bill is on it's none no",
    "start": "1646840",
    "end": "1653200"
  },
  {
    "text": "access if the fetch protection bit is off you only have read access so the AC e falls in this category so the storage",
    "start": "1653200",
    "end": "1659500"
  },
  {
    "text": "key is 0 but there is no such protection bit so we can read it but we cannot update it right so now the attack plot",
    "start": "1659500",
    "end": "1666640"
  },
  {
    "start": "1665000",
    "end": "1707000"
  },
  {
    "text": "evolves and now the before patch in the ACA memory where the privileges are held",
    "start": "1666640",
    "end": "1672960"
  },
  {
    "text": "we need to switch the storage key in the PSW register now there's an instruction to do it and assembly that's called the",
    "start": "1672960",
    "end": "1679840"
  },
  {
    "text": "mod set macro however this instruction like all other powerful instructions are",
    "start": "1679840",
    "end": "1686230"
  },
  {
    "text": "only available in kernel mode or what is called supervisor state so on z0s",
    "start": "1686230",
    "end": "1692080"
  },
  {
    "text": "basically supervisors h equals the kernel mode on angel problem stage it's",
    "start": "1692080",
    "end": "1697419"
  },
  {
    "text": "user mode right so some instructions are all available in supervisor state so the question now becomes how do we get into",
    "start": "1697419",
    "end": "1705100"
  },
  {
    "text": "supervisor set now on linux let's say if you want to go into supervised into",
    "start": "1705100",
    "end": "1710500"
  },
  {
    "text": "kernel mode you just write your program compiler as a loadable kernel and then use in smaller more probable or whatever",
    "start": "1710500",
    "end": "1716110"
  },
  {
    "text": "on z/os is very different on z/os you have some kernel folders that are called",
    "start": "1716110",
    "end": "1723010"
  },
  {
    "text": "a PF libraries and any program that is dropped in these folders can go into",
    "start": "1723010",
    "end": "1728289"
  },
  {
    "text": "kernel mode no questions asked so let me stress that again you have Carano folders like 60",
    "start": "1728289",
    "end": "1734230"
  },
  {
    "text": "hundred whatever they can be custom defined most of them are you have no way",
    "start": "1734230",
    "end": "1741100"
  },
  {
    "text": "of easily listing them on a mainframe except if you're running the z/os 2.1 which introduced instruction to a",
    "start": "1741100",
    "end": "1748240"
  },
  {
    "text": "command to list a PF libraries but you have no way to easily except from going through memory that's what we're gonna",
    "start": "1748240",
    "end": "1753400"
  },
  {
    "text": "do basically and you know you have these folders and one of them is not protected",
    "start": "1753400",
    "end": "1759880"
  },
  {
    "text": "in fact many of them are not protected like almost all like not almost all these assignments but a lot of the",
    "start": "1759880",
    "end": "1766000"
  },
  {
    "text": "assignments that I had actually we found these APF libraries that were not protected and the client went well who",
    "start": "1766000",
    "end": "1772090"
  },
  {
    "text": "cares like who can can you show me what he can do with it and like well that was the key years ago and I was like well yeah theoretically it is possible to",
    "start": "1772090",
    "end": "1778600"
  },
  {
    "text": "code a program an assembly that will do pop up and he's like yeah shut up go ahead like I don't want to hear about it and that's you know people believe that",
    "start": "1778600",
    "end": "1785530"
  },
  {
    "text": "this knowledge is so out of reach but in fact it's not and you know I'm gonna",
    "start": "1785530",
    "end": "1790570"
  },
  {
    "text": "show you later on the program that will explore all this it will see it's very trivial now the idea is to find these",
    "start": "1790570",
    "end": "1796600"
  },
  {
    "text": "APF libraries there are the one we can alter and then you know then we can move",
    "start": "1796600",
    "end": "1802510"
  },
  {
    "start": "1800000",
    "end": "1853000"
  },
  {
    "text": "on with our scheme find an APF library with alter access write a program drop a program that will switch the PSW key and",
    "start": "1802510",
    "end": "1808450"
  },
  {
    "text": "then having the supervisor state having the PSW storage key set to zero we can patch the",
    "start": "1808450",
    "end": "1813549"
  },
  {
    "text": "ACAB remembering now to find a PF libraries like I said if you run in zero as to that one there's a simple command",
    "start": "1813549",
    "end": "1819700"
  },
  {
    "text": "to do it CSV the APF but if you run in like other versions you have to go",
    "start": "1819700",
    "end": "1825790"
  },
  {
    "text": "through memory and to find them now I'm not gonna detail the scheme but it's just basically just going from one",
    "start": "1825790",
    "end": "1831720"
  },
  {
    "text": "pointer to one another it's as easy as that so I'm just gonna leave it there for reference but I wrote a tool that",
    "start": "1831720",
    "end": "1837640"
  },
  {
    "text": "will do all this automatically so you do not have to worry about it don't just leave it to be exhaustion and you know",
    "start": "1837640",
    "end": "1844000"
  },
  {
    "text": "once we found all the APF libraries we just check which access we have on them and the program that we're gonna drop",
    "start": "1844000",
    "end": "1849929"
  },
  {
    "text": "inside one of these folders is it looks a little bit like this now I do not expect everyone to know like",
    "start": "1849929",
    "end": "1855700"
  },
  {
    "start": "1853000",
    "end": "2038000"
  },
  {
    "text": "z/architecture assembly but I just want to go quickly very quickly through the program to show you that it's not",
    "start": "1855700",
    "end": "1861460"
  },
  {
    "text": "magical that it's not too complicated but it's not really actually complicated so we have the first section that says",
    "start": "1861460",
    "end": "1867070"
  },
  {
    "text": "hey our program runs in 31-bit right we have the program prologue where we save some registers and then we say our stock register will",
    "start": "1867070",
    "end": "1874149"
  },
  {
    "text": "be register number 12 because there is no set or defined stock register so you",
    "start": "1874149",
    "end": "1879549"
  },
  {
    "text": "have to define it every time and then we call the mod set macro we switch the keys to zero we go to supervisor stage",
    "start": "1879549",
    "end": "1884979"
  },
  {
    "text": "and then it's just a matter of loading different offsets into register until we find the AC e",
    "start": "1884979",
    "end": "1890019"
  },
  {
    "text": "right and then we just you know execute an immediate or to flip the proper bytes",
    "start": "1890019",
    "end": "1897099"
  },
  {
    "text": "at offset 26 and 27 so that's it basic this is the program that will make us",
    "start": "1897099",
    "end": "1902589"
  },
  {
    "text": "root on a mainframe we just need to find an API libraries where library where we drop it so it can run into kernel mode",
    "start": "1902589",
    "end": "1908889"
  },
  {
    "text": "that's it basically so just to show you how simple it now however compiling this piece of code took me nearly two days to",
    "start": "1908889",
    "end": "1915519"
  },
  {
    "text": "figure it out honest to god it's not like that it's not a simple instruction it's not one instruction to run on a mainframe to compile code it's a",
    "start": "1915519",
    "end": "1921519"
  },
  {
    "text": "freaking script that you have to write so I decided to wrap this program in a scripting Python like other mainframes",
    "start": "1921519",
    "end": "1929529"
  },
  {
    "text": "called Rex so it will like you know properly compile the code set the link",
    "start": "1929529",
    "end": "1936369"
  },
  {
    "text": "it with the proper options so it can put it into inside an AP of library which will find the AP off library with ultra",
    "start": "1936369",
    "end": "1941889"
  },
  {
    "text": "access and you know will drop it automatically so you have like it's just one command to execute and but like when",
    "start": "1941889",
    "end": "1948849"
  },
  {
    "text": "I first run this program it worked but it would it was tricky actually because",
    "start": "1948849",
    "end": "1954729"
  },
  {
    "text": "when the program runs it runs in its own virtual address space so when it finds",
    "start": "1954729",
    "end": "1959769"
  },
  {
    "text": "the memory to patch it patches its own virtual address space so true the",
    "start": "1959769",
    "end": "1965079"
  },
  {
    "text": "program becomes pet became special and then you know quit but my user was still",
    "start": "1965079",
    "end": "1970419"
  },
  {
    "text": "standard user so you know there's this separation virtual address separation so I had to add this small instruction at",
    "start": "1970419",
    "end": "1977169"
  },
  {
    "text": "the end that says to the program hey when you're special well add the rack",
    "start": "1977169",
    "end": "1982179"
  },
  {
    "text": "after rule that says that user me is also special hence this small instruction at the end alter user user",
    "start": "1982179",
    "end": "1989019"
  },
  {
    "text": "ID that's running the script special operations so that's basically just to explain that piece of code and I'm just",
    "start": "1989019",
    "end": "1994359"
  },
  {
    "text": "gonna show you quick demo of how what it looks like so here list user we have 0 attributes right next",
    "start": "1994359",
    "end": "2001830"
  },
  {
    "text": "we run Eldar APF which is the name of the script we downloaded via FTP each on that or whatever and then we list all",
    "start": "2001830",
    "end": "2007470"
  },
  {
    "text": "the APF libraries so here's this one that link clips is one that SVC like these are our folders that we can write",
    "start": "2007470",
    "end": "2012929"
  },
  {
    "text": "to basically because we know our craft profile is defined this is obviously just a test system right so all these",
    "start": "2012929",
    "end": "2018929"
  },
  {
    "text": "folders are writable and we can drop a program inside of them so you can see here we choose one arbitrarily the the",
    "start": "2018929",
    "end": "2026880"
  },
  {
    "text": "script will compile the program there was no error on the compiler and you can",
    "start": "2026880",
    "end": "2031919"
  },
  {
    "text": "see that now big we became special since as easy as that now what I did was just weaponize something that obviously a lot",
    "start": "2031919",
    "end": "2039299"
  },
  {
    "start": "2038000",
    "end": "2097000"
  },
  {
    "text": "of people were aware of like everybody from IBM to any auditor will tell you hey APF libraries you need to protect",
    "start": "2039299",
    "end": "2045750"
  },
  {
    "text": "them but like I said people are very stubborn and like you know proof of concept will get the out and that's",
    "start": "2045750",
    "end": "2051690"
  },
  {
    "text": "the real attitude of people like that's how they assess risk if you know there is no immediate or known threat they",
    "start": "2051690",
    "end": "2058020"
  },
  {
    "text": "will not address it so what I did was basically just weaponize it and makes it like easy for any pen chester who's",
    "start": "2058020",
    "end": "2064349"
  },
  {
    "text": "facing a mainframe to download the script put another mainframe and boom there their route on the mainframe so",
    "start": "2064349",
    "end": "2070138"
  },
  {
    "text": "you do not have to go through the trouble of you know all like digging into this stuff like i did just to know",
    "start": "2070139",
    "end": "2076770"
  },
  {
    "text": "how to compile the freaking assembly code of twelve lines so like i said a lot of people who are aware of this like",
    "start": "2076770",
    "end": "2082950"
  },
  {
    "text": "a PF library is very dangerous you have to protect them blah blah blah blah and like Mark Wilson from our some partners",
    "start": "2082950",
    "end": "2089490"
  },
  {
    "text": "they discussed something similar but using SVC now SVC our supervisor calls",
    "start": "2089490",
    "end": "2095730"
  },
  {
    "text": "and just like on Linux or Windows you have like you know Linux you have sis calls that go into kernel mode and you",
    "start": "2095730",
    "end": "2102960"
  },
  {
    "start": "2097000",
    "end": "2147000"
  },
  {
    "text": "know they do some fancy dangerous stuff and they bring you the result in user mode same thing on 0s but these are",
    "start": "2102960",
    "end": "2108060"
  },
  {
    "text": "called supervisor calls so this is just API functions that go into kernel mode do something very deep low-level and",
    "start": "2108060",
    "end": "2113970"
  },
  {
    "text": "then come back and now on you have a table basically of 255 SVC is available",
    "start": "2113970",
    "end": "2120150"
  },
  {
    "text": "so from 0 to 200 these functions are IBM reserved and 201 to 205 can be",
    "start": "2120150",
    "end": "2126060"
  },
  {
    "text": "user-defined so like basically Mark Wilson talked about some admins",
    "start": "2126060",
    "end": "2131760"
  },
  {
    "text": "some vendors that they like that that registers as we see on a mainframe some Cisco's on",
    "start": "2131760",
    "end": "2137230"
  },
  {
    "text": "the mainframe that when they go into Cardinal mode they make the whole program calling them go into Coronel",
    "start": "2137230",
    "end": "2143980"
  },
  {
    "text": "mode now this this is very dangerous stuff and I'm just gonna show you what what it might look like so like they are",
    "start": "2143980",
    "end": "2151839"
  },
  {
    "start": "2147000",
    "end": "2194000"
  },
  {
    "text": "dubbed the magic a species again I do not care much about the code I just I'm",
    "start": "2151839",
    "end": "2157990"
  },
  {
    "text": "just gonna show it like there just to give you an example what it looks like what I want you to focus on is that there is not a single piece of",
    "start": "2157990",
    "end": "2164079"
  },
  {
    "text": "authentication or access control in that code nothing so and by definition",
    "start": "2164079",
    "end": "2170079"
  },
  {
    "text": "everybody can call an SVC right that's what they're for and so if you like if",
    "start": "2170079",
    "end": "2176050"
  },
  {
    "text": "you want to apply the same trick that we did earlier you do not need a PF libraries now you just need this",
    "start": "2176050",
    "end": "2182290"
  },
  {
    "text": "SVC that with like say it's SVC number 233 you just call it in your assembly",
    "start": "2182290",
    "end": "2187450"
  },
  {
    "text": "and then boom you can call them outside macro and go into kernel mode so you do not need a PF libraries anymore to",
    "start": "2187450",
    "end": "2192670"
  },
  {
    "text": "achieve your privilege escalation now I bro like I wrote this is a proof of concept to kind of learn about more",
    "start": "2192670",
    "end": "2198760"
  },
  {
    "start": "2194000",
    "end": "2207000"
  },
  {
    "text": "about SPC so I wrote a script that will list all the SVC s in memory again it's just a matter of walking from one",
    "start": "2198760",
    "end": "2204010"
  },
  {
    "text": "control block to another is just one pointer to another and then will basically check for some instructions",
    "start": "2204010",
    "end": "2210400"
  },
  {
    "start": "2207000",
    "end": "2295000"
  },
  {
    "text": "that will how to say there are suspicious that play with that piece of memory that controls whether we are in",
    "start": "2210400",
    "end": "2217530"
  },
  {
    "text": "supervisor state or not and so I focused on these two instructions obviously this is not bulletproof but it's just a proof",
    "start": "2217530",
    "end": "2224619"
  },
  {
    "text": "of concept so I focused on this first instruction that loads offset 540 which",
    "start": "2224619",
    "end": "2229960"
  },
  {
    "text": "corresponds to the control control block described in the current task that is running and this second instruction that",
    "start": "2229960",
    "end": "2236079"
  },
  {
    "text": "flips a certain byte at a offset 236 in memory so I just decided to write a small reg X like in Python Rex not",
    "start": "2236079",
    "end": "2245109"
  },
  {
    "text": "Python to find all the SPC's in memory and check whether or not they perform",
    "start": "2245109",
    "end": "2250300"
  },
  {
    "text": "these fishy operations and I'm just going to show you what the script looks like it looks like so here we execute",
    "start": "2250300",
    "end": "2256810"
  },
  {
    "text": "elf that SVC and you can see that we we type in lists and you can list all the",
    "start": "2256810",
    "end": "2262359"
  },
  {
    "text": "SV seas that are running and you can see that and it's inspects the code looking for an off-grid so SVC 233",
    "start": "2262359",
    "end": "2269050"
  },
  {
    "text": "after it was detected and it dumps the up code of the SVC and you can see here that we are obviously we have no",
    "start": "2269050",
    "end": "2275590"
  },
  {
    "text": "attribute and when we run rerun the program and specify this time the SVC it",
    "start": "2275590",
    "end": "2281020"
  },
  {
    "text": "will again compile the program drop it drop it into any folder we do not need a",
    "start": "2281020",
    "end": "2286870"
  },
  {
    "text": "PF libraries anymore and it will go into kernel mode and patch the AC a bit and make us special so that's what I did",
    "start": "2286870",
    "end": "2293710"
  },
  {
    "text": "here now when I first go to this I just wanted to keep it for myself I was like eh who's gonna you know use it in the wild",
    "start": "2293710",
    "end": "2300670"
  },
  {
    "start": "2295000",
    "end": "2408000"
  },
  {
    "text": "I mean have a magic SVC magic Cisco that lets anybody go into kernel mode like",
    "start": "2300670",
    "end": "2305830"
  },
  {
    "text": "yeah who's gonna do that and then I was talking with the soldier of Fortran and we were talking about this lease",
    "start": "2305830",
    "end": "2311560"
  },
  {
    "text": "privilege escalation possibilities techniques etc and then like at some point we talked about elves that SVC so",
    "start": "2311560",
    "end": "2317620"
  },
  {
    "text": "this script that I showed you and he exactly said dude I just need to show you something and he showed me this",
    "start": "2317620",
    "end": "2324280"
  },
  {
    "text": "script that basically there was a big mainframe breach in Sweden in 2012 and",
    "start": "2324280",
    "end": "2331000"
  },
  {
    "text": "he was involved in investigation so he got access to some scripts involved in a good way not a bad way by the way anyway",
    "start": "2331000",
    "end": "2337090"
  },
  {
    "text": "so he sent me this script that way and it's not his github anyway and you can",
    "start": "2337090",
    "end": "2342190"
  },
  {
    "text": "see here that this is a script for that the attacker used now I think you will",
    "start": "2342190",
    "end": "2347920"
  },
  {
    "text": "now be built familiar with some of these instructions so you can see that the attacker basically called an SVC 242 for",
    "start": "2347920",
    "end": "2354610"
  },
  {
    "text": "it um called the mod set macro exactly like we did and then flip some you know",
    "start": "2354610",
    "end": "2359980"
  },
  {
    "text": "bytes in memory that are related to the AC flag AC special operations etc",
    "start": "2359980",
    "end": "2365280"
  },
  {
    "text": "exactly what I just showed you so this just to say again that this is you know",
    "start": "2365280",
    "end": "2370990"
  },
  {
    "text": "this is real stuff that works in the world and I was very surprised to actually know about description oh wow",
    "start": "2370990",
    "end": "2376600"
  },
  {
    "text": "holy holy crap anyway and this further you know proves my point of the",
    "start": "2376600",
    "end": "2381700"
  },
  {
    "text": "difference between the security maturity in the windows world or Linux world and in the mainframe world people on the",
    "start": "2381700",
    "end": "2387670"
  },
  {
    "text": "mainframe world still think they can get away with security by obscurity a lot of people think they can get away with it",
    "start": "2387670",
    "end": "2393190"
  },
  {
    "text": "well you know we know it's not true obviously every time you like there's",
    "start": "2393190",
    "end": "2398620"
  },
  {
    "text": "this awesome code that says every time you think nobody will go through the trouble of doing something some kid in Finland",
    "start": "2398620",
    "end": "2404140"
  },
  {
    "text": "goes through the trouble well this is basically the same thing now get inside like like when you think about like the",
    "start": "2404140",
    "end": "2411490"
  },
  {
    "start": "2408000",
    "end": "2474000"
  },
  {
    "text": "logic or how these scripts that I wrote operate they go into kernel mode they go",
    "start": "2411490",
    "end": "2416800"
  },
  {
    "text": "into they become special and then they alter the rack F table to make the user who called them special I did not it was",
    "start": "2416800",
    "end": "2423670"
  },
  {
    "text": "not very upset sick you know proof I did not like it that much because a we write",
    "start": "2423670",
    "end": "2428830"
  },
  {
    "text": "something into the rack cap table I do not like alter interactive database and second in the field you can be special",
    "start": "2428830",
    "end": "2436270"
  },
  {
    "text": "all you want doesn't mean you can access anything it means you can give yourself access to anything it to do something and figuring out which resource you need",
    "start": "2436270",
    "end": "2444580"
  },
  {
    "text": "to access to in order to you know get rid of business get business files and all that stuff is hard on that make them",
    "start": "2444580",
    "end": "2450760"
  },
  {
    "text": "like doing stuff on right calf manipulation Rock F is very hardcore stuff like some companies have a",
    "start": "2450760",
    "end": "2456070"
  },
  {
    "text": "dedicated rack F administrator to do this stuff and you come in as a pen tester and try to mess up the rules to",
    "start": "2456070",
    "end": "2462160"
  },
  {
    "text": "access this business app it's helped so it kind of troubled me a lot because I wanted to get some business data I",
    "start": "2462160",
    "end": "2468640"
  },
  {
    "text": "wanted you know to really get something out of the mainframe not just show that it can be you can be rude so I decided",
    "start": "2468640",
    "end": "2475270"
  },
  {
    "start": "2474000",
    "end": "2520000"
  },
  {
    "text": "to write a program that does what basically incognito on Windows does so",
    "start": "2475270",
    "end": "2480550"
  },
  {
    "text": "it internet on Windows steals the token the scripture so you can impersonate other users so same thing on z/os I",
    "start": "2480550",
    "end": "2487450"
  },
  {
    "text": "decided to do the same thing and like I said the choke in the script or the equivalent to the token descriptor is",
    "start": "2487450",
    "end": "2492640"
  },
  {
    "text": "the AC so the idea is try to program that will dive into virtual a foreign",
    "start": "2492640",
    "end": "2499390"
  },
  {
    "text": "virtual address space before an user grab the AC e the token descriptor and then copy it over into our own session",
    "start": "2499390",
    "end": "2506230"
  },
  {
    "text": "so the AC e again is 168 bytes or so of data so you have user ID group names",
    "start": "2506230",
    "end": "2511870"
  },
  {
    "text": "user flag privileges terminal information like pointers etc and the",
    "start": "2511870",
    "end": "2517420"
  },
  {
    "text": "idea is to copy these fields from a foreign virtual address space obviously not so easy because like I said each",
    "start": "2517420",
    "end": "2525190"
  },
  {
    "start": "2520000",
    "end": "2598000"
  },
  {
    "text": "user in each program runs in their own virtual address space so you cannot just dive in into any a foreign virtual",
    "start": "2525190",
    "end": "2533680"
  },
  {
    "text": "address space like that and in Windows it's I'm gonna say it's easy but it's practical you have api's to do it you have you",
    "start": "2533680",
    "end": "2539120"
  },
  {
    "text": "know right process memory we process memory up and process memory on z/os you have zip zero nada you have assembly",
    "start": "2539120",
    "end": "2544880"
  },
  {
    "text": "instructions if you're that brave and so so the same so basically I decided to",
    "start": "2544880",
    "end": "2551600"
  },
  {
    "text": "write you know a script that will do all this stuff so you know you can easily do some proof of concepts and use it in",
    "start": "2551600",
    "end": "2557630"
  },
  {
    "text": "your pen tests in engagement so yeah just like on Windows and Linux you have some address space that are shared some",
    "start": "2557630",
    "end": "2563840"
  },
  {
    "text": "are private etc etc and the AC e is located exactly here so between the HK",
    "start": "2563840",
    "end": "2570650"
  },
  {
    "text": "and 24k so in the user region area and like I said the idea is to run a program",
    "start": "2570650",
    "end": "2576080"
  },
  {
    "text": "that will go into kernel mode issue some you know special instructions that go",
    "start": "2576080",
    "end": "2581210"
  },
  {
    "text": "into cross memory mode copy DAC e is in some special instructions bring them",
    "start": "2581210",
    "end": "2587060"
  },
  {
    "text": "back in this primary virtual address space then go into kernel mode again dive in cross memory operations pass the",
    "start": "2587060",
    "end": "2594050"
  },
  {
    "text": "AC that we just got earlier so this is basically the script does in its essence",
    "start": "2594050",
    "end": "2599480"
  },
  {
    "start": "2598000",
    "end": "2673000"
  },
  {
    "text": "and this is just small demo again it's on github it's called alpha itself and you can see here that list user my user",
    "start": "2599480",
    "end": "2605240"
  },
  {
    "text": "is is special right here but if I want to access the file that's called IBM",
    "start": "2605240",
    "end": "2612260"
  },
  {
    "text": "user that test which is owned by IBM user you can see here the security verification fail I do not have to right",
    "start": "2612260",
    "end": "2618860"
  },
  {
    "text": "now I can add a record through to let me to allow access but I do not want to touch the rack of rules okay",
    "start": "2618860",
    "end": "2624440"
  },
  {
    "text": "so what I do is basically I execute my script with the list of operands and you",
    "start": "2624440",
    "end": "2631490"
  },
  {
    "text": "can see here that these are all the programs that are running and all the users that are currently connected you can see here that IBM user is connected",
    "start": "2631490",
    "end": "2637700"
  },
  {
    "text": "so we can relaunch the tool and this time set IBM user as target and specify",
    "start": "2637700",
    "end": "2644480"
  },
  {
    "text": "an IPF library that we can write U or SVC that is vulnerable and then we",
    "start": "2644480",
    "end": "2650540"
  },
  {
    "text": "become a you know IBM user as you can see here and once we are IBM user now we",
    "start": "2650540",
    "end": "2656480"
  },
  {
    "text": "can access the file and we did not touch the rack F database that's the the beauty of the script and here I'm gonna",
    "start": "2656480",
    "end": "2663260"
  },
  {
    "text": "launch the GUI so we can actually see the contents of the file but it's basically some operation as before so",
    "start": "2663260",
    "end": "2668360"
  },
  {
    "text": "view file and you can to hear that hey we have access to the file so in summary basically if you like",
    "start": "2668360",
    "end": "2676580"
  },
  {
    "start": "2673000",
    "end": "2741000"
  },
  {
    "text": "you have to get some key points out of this talk it's just a mainframes are not legacy it's a lot to say that mainframe",
    "start": "2676580",
    "end": "2682640"
  },
  {
    "text": "our legacy they power the you know the world economy without say 87 percent of",
    "start": "2682640",
    "end": "2688250"
  },
  {
    "text": "credit card transactions run through mainframes so we should care about them as spent jesters as security researchers",
    "start": "2688250",
    "end": "2694580"
  },
  {
    "text": "as clients whatever we should look into this stuff and its really the Wild West because like I said many concepts many",
    "start": "2694580",
    "end": "2700550"
  },
  {
    "text": "security by obscurity stuff so like it's really the Wild West and we can have some really great fun and yeah like now",
    "start": "2700550",
    "end": "2708920"
  },
  {
    "text": "there are tools open test mainframes so check them out if you want to contribute please like we can talk afterwards about",
    "start": "2708920",
    "end": "2714860"
  },
  {
    "text": "how to set up the platform and how to get access to it and how to write tools to do it like thank these are some",
    "start": "2714860",
    "end": "2723110"
  },
  {
    "text": "people that I work with on the like in the mainframe world and yeah if you have",
    "start": "2723110",
    "end": "2729260"
  },
  {
    "text": "questions please do not hesitate to ask afterwards this basically that concludes my presentation thank you very much",
    "start": "2729260",
    "end": "2737150"
  },
  {
    "text": "[Applause]",
    "start": "2737150",
    "end": "2742788"
  }
]