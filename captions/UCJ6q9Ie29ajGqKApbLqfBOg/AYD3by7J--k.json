[
  {
    "start": "0",
    "end": "44000"
  },
  {
    "text": "thank you all for coming this is a practical side channel attacks against WPI tkip and my name is demean skipper's",
    "start": "0",
    "end": "6720"
  },
  {
    "text": "and I will presenting some work I did together with an John and keratin and a motif on off so in this session we will",
    "start": "6720",
    "end": "14009"
  },
  {
    "text": "be talking about WPA TTIP which is a Wi-Fi security protocol and will",
    "start": "14009",
    "end": "19500"
  },
  {
    "text": "demonstrate some new side channel attacks that are very easy to implement and much faster to execute than existing",
    "start": "19500",
    "end": "26970"
  },
  {
    "text": "work all right sorry about that so here",
    "start": "26970",
    "end": "35460"
  },
  {
    "text": "we go again I'll be talking about practical side channel attacks against WPA tkip which has one of the Wi-Fi",
    "start": "35460",
    "end": "42270"
  },
  {
    "text": "security protocols and before we get started we can run over a brief Wi-Fi history so originally we had wired",
    "start": "42270",
    "end": "50399"
  },
  {
    "start": "44000",
    "end": "44000"
  },
  {
    "text": "equivalent privacy which is called web and soon after there were many flaws identified in this and the I Triple E",
    "start": "50399",
    "end": "57870"
  },
  {
    "text": "decided we should have a more secure Wi-Fi encryption protocols and as an",
    "start": "57870",
    "end": "64408"
  },
  {
    "text": "intermediate solution they came up with a TCAP protocol and this was an",
    "start": "64409",
    "end": "69420"
  },
  {
    "text": "intermediate solution because they wanted this enhanced security to be able to run on older hardware of devices that",
    "start": "69420",
    "end": "76380"
  },
  {
    "text": "were designed to run web after this they came up with a ccnp protocol which is",
    "start": "76380",
    "end": "81930"
  },
  {
    "text": "known as wpa2 which is now used most of the time and then we have WPA three",
    "start": "81930",
    "end": "88799"
  },
  {
    "text": "since last year so if you look at this timeline we see that the diecut protocol",
    "start": "88799",
    "end": "94470"
  },
  {
    "text": "was already announced in 2003 yet I am here today still talking about this and",
    "start": "94470",
    "end": "101040"
  },
  {
    "text": "that immediately raises the question why will I be talking about a protocol that is almost 16 years old there's a few",
    "start": "101040",
    "end": "108600"
  },
  {
    "text": "reasons for that it is still not marked as obsolete by the I Triple E today and",
    "start": "108600",
    "end": "113610"
  },
  {
    "text": "that may be part of this this results into commercial products that are sold",
    "start": "113610",
    "end": "119189"
  },
  {
    "text": "today that will still support the tikka protocol and when we saw that this is",
    "start": "119189",
    "end": "124200"
  },
  {
    "text": "still is that this still is the case we decided to do some wardriving experiments to see how much as they",
    "start": "124200",
    "end": "130979"
  },
  {
    "text": "still used and this and following some of these results",
    "start": "130979",
    "end": "136810"
  },
  {
    "text": "we decided it's still very interesting to look in T cap so as ice in May 2008",
    "start": "136810",
    "end": "142720"
  },
  {
    "text": "een just last year D cap was still not marked as obsolete even at the time the",
    "start": "142720",
    "end": "147880"
  },
  {
    "text": "protocol was already 15 years old and WPA 3 was about to be announced so what",
    "start": "147880",
    "end": "155080"
  },
  {
    "start": "154000",
    "end": "154000"
  },
  {
    "text": "some Wi-Fi server we did in a bunch of different countries we came to the realization that it still used an almost",
    "start": "155080",
    "end": "161530"
  },
  {
    "text": "45 percent of all the networks that support encryption and that's a very large number still 16 years after its",
    "start": "161530",
    "end": "170170"
  },
  {
    "text": "release it still used this much and I must say with this there is a very large",
    "start": "170170",
    "end": "175780"
  },
  {
    "text": "variation on depending on the country where we tested this and the two extremes were a Belgium and Germany were",
    "start": "175780",
    "end": "181690"
  },
  {
    "text": "in Belgium it's used almost 60% of the networks whereas in Germany was around health with 30 percent so even at its",
    "start": "181690",
    "end": "190900"
  },
  {
    "text": "best case if you will it still used 30 percent which is still way too much so",
    "start": "190900",
    "end": "197590"
  },
  {
    "text": "this motivated us to look into some of these tkip implementations and see how",
    "start": "197590",
    "end": "203370"
  },
  {
    "text": "we can find some new vulnerabilities with this with the hope of finally deprecating this protocol so I will be",
    "start": "203370",
    "end": "211480"
  },
  {
    "start": "210000",
    "end": "210000"
  },
  {
    "text": "talking but a brief background about TTIP and some of the existing attacks then I will present our side channels",
    "start": "211480",
    "end": "217330"
  },
  {
    "text": "which we tested against a bunch of operating systems such as Linux and open",
    "start": "217330",
    "end": "223030"
  },
  {
    "text": "BSD and we also tested a bunch of devices for which we could find some source codes which were a media Tech and",
    "start": "223030",
    "end": "229450"
  },
  {
    "text": "Broadcom devices and then hopefully we'll be able to show a demonstration of",
    "start": "229450",
    "end": "234640"
  },
  {
    "text": "this and make a conclusion so the ticket protocol provides better integrity",
    "start": "234640",
    "end": "240940"
  },
  {
    "text": "protection than its predecessor which was web so in order to achieve this it",
    "start": "240940",
    "end": "246490"
  },
  {
    "text": "added a Michael Mick which is an integrity check value and this covers",
    "start": "246490",
    "end": "252040"
  },
  {
    "text": "not only the plaintext bytes but also the source and destination MAC addresses and this Michael make is added to the",
    "start": "252040",
    "end": "259780"
  },
  {
    "text": "last fragment and this will be important in our side channel attacks and because it means if you have to",
    "start": "259780",
    "end": "266410"
  },
  {
    "text": "fragment a larger frame the Michael make will only be attached to the last of these fragments which means the receiver",
    "start": "266410",
    "end": "274060"
  },
  {
    "text": "has to receive all frames reassemble them and only then the receiver is able to verify if the Michael make is correct",
    "start": "274060",
    "end": "280900"
  },
  {
    "text": "this is something we will be using in our site analytics to avoid the",
    "start": "280900",
    "end": "286750"
  },
  {
    "text": "recipient from validating the Michael McKee additionally the ticket header also has",
    "start": "286750",
    "end": "292930"
  },
  {
    "text": "an enhanced sequence counter which is used for a replay protection so well",
    "start": "292930",
    "end": "301930"
  },
  {
    "start": "299000",
    "end": "299000"
  },
  {
    "text": "soon after its release there were a lot of issues already identified with this should says the Michael make is",
    "start": "301930",
    "end": "308470"
  },
  {
    "text": "invertible this means that if we know a plaintext message and we have the",
    "start": "308470",
    "end": "314260"
  },
  {
    "text": "michael mickey' code for this message we can avoid a very simple function retrieve the key that was used to",
    "start": "314260",
    "end": "320830"
  },
  {
    "text": "generate this michael mickey' code and because of these issues the",
    "start": "320830",
    "end": "326639"
  },
  {
    "text": "specification also defines a few countermeasures that state what one should do if some of these invalid",
    "start": "326639",
    "end": "333520"
  },
  {
    "text": "Michael Mix are received and this is what they call a Michael make failure report and if a access point receives",
    "start": "333520",
    "end": "342520"
  },
  {
    "text": "two of these frames in one minute it will block all tkip traffic and this is a protection mechanism to avoid that an",
    "start": "342520",
    "end": "350560"
  },
  {
    "text": "adversary is able to perform some attacks against it and after this one minute all clients have to reassociate",
    "start": "350560",
    "end": "357700"
  },
  {
    "text": "and negotiate fresh keys also define that the I Triple E is the II amendment",
    "start": "357700",
    "end": "364630"
  },
  {
    "start": "360000",
    "end": "360000"
  },
  {
    "text": "which defines quality of service channels which means it prioritizes traffic for example when you make a",
    "start": "364630",
    "end": "371260"
  },
  {
    "text": "phone call over Wi-Fi and Michael make also converse this priority number and",
    "start": "371260",
    "end": "377099"
  },
  {
    "text": "in our side channel soon we'll see how there is something interesting about his",
    "start": "377099",
    "end": "382180"
  },
  {
    "text": "quality of service namely that the tea cup sequence counter is unique for each",
    "start": "382180",
    "end": "387849"
  },
  {
    "text": "Channel so it's channel has its own tea cup sequence counter I will see how we can abuse this feature to inject some",
    "start": "387849",
    "end": "397240"
  },
  {
    "text": "Network traffic later on so already in 2004",
    "start": "397240",
    "end": "402350"
  },
  {
    "start": "399000",
    "end": "399000"
  },
  {
    "text": "there was a so-called Chop Shop attack described against web and in 2009",
    "start": "402350",
    "end": "408860"
  },
  {
    "text": "beckoned to presented a modification to this attack that works against WPA TCAP",
    "start": "408860",
    "end": "415280"
  },
  {
    "text": "and what it does is it shops of the last bite makes a correction for the ICV and",
    "start": "415280",
    "end": "421750"
  },
  {
    "text": "there is a way due to the CRC cyclic redundancy check",
    "start": "421750",
    "end": "426790"
  },
  {
    "text": "linearity that allows us to reconstruct a valid ICV of this and to make this",
    "start": "426790",
    "end": "433460"
  },
  {
    "text": "more visual how this works like s and T cap we have this encrypted data so we",
    "start": "433460",
    "end": "438770"
  },
  {
    "text": "have no idea what the plaintext is but we do know that the last four bytes are the ICD so it is possible to chop off",
    "start": "438770",
    "end": "447440"
  },
  {
    "text": "the last byte of this frame and now we can make an ICP correction that will",
    "start": "447440",
    "end": "453410"
  },
  {
    "text": "result in a valid frame but in order to do so we need to know what the plaintext value of this byte was as an adversary",
    "start": "453410",
    "end": "460700"
  },
  {
    "text": "you do not know what this plain text value is so you have to try 265 times",
    "start": "460700",
    "end": "465800"
  },
  {
    "text": "for each of the possible failures and if you make a wrong guess then this I CV is",
    "start": "465800",
    "end": "472040"
  },
  {
    "text": "Nova it's not valid which means this frame is corrupt however if you made a right guess then this is a valid message",
    "start": "472040",
    "end": "479690"
  },
  {
    "text": "which means on average and one or two and 100 to 28 times we can figure out",
    "start": "479690",
    "end": "485840"
  },
  {
    "text": "what is the plaintext value based on this ICD correction so if you know that",
    "start": "485840",
    "end": "492080"
  },
  {
    "text": "you made a successful guest then you have success successfully decrypted the last byte so that brings us to a very",
    "start": "492080",
    "end": "500000"
  },
  {
    "text": "important question how do we know if we made the correct ICV correction that is how do we know we made a correct guess",
    "start": "500000",
    "end": "506150"
  },
  {
    "text": "for that plaintext byte and that is the side channels so from now in the",
    "start": "506150",
    "end": "513020"
  },
  {
    "text": "remainder will run over a bunch of side channels that will help us identify if we made a correct guess on this chopped",
    "start": "513020",
    "end": "519950"
  },
  {
    "text": "off by it or not so what we want to achieve is can we find side channels",
    "start": "519950",
    "end": "526910"
  },
  {
    "start": "522000",
    "end": "522000"
  },
  {
    "text": "that allow us to detect if a ticket frame is accept by the recipient that is if the ICV",
    "start": "526910",
    "end": "533529"
  },
  {
    "text": "check was successful and we want to find a way where we can craft teacup frames",
    "start": "533529",
    "end": "539980"
  },
  {
    "text": "such that the state of the receiver is modified in a way that we can later on",
    "start": "539980",
    "end": "545589"
  },
  {
    "text": "detect that means if we made a correct I CV s then we can see this change and",
    "start": "545589",
    "end": "552879"
  },
  {
    "text": "then we can detect this and that's how we know that we made a correct guess for this plaintext bite and we will perform",
    "start": "552879",
    "end": "559120"
  },
  {
    "text": "a bunch we will analyze a bunch of teacup implementations to see if we can",
    "start": "559120",
    "end": "565720"
  },
  {
    "text": "find such side channels and for this we analyze the full Wi-Fi stack that's",
    "start": "565720",
    "end": "572230"
  },
  {
    "start": "567000",
    "end": "567000"
  },
  {
    "text": "something that wasn't really done before and with analyzing Wi-Fi protocols at",
    "start": "572230",
    "end": "577269"
  },
  {
    "text": "least and that will be one of our main takeaways of the day meaning we should",
    "start": "577269",
    "end": "582819"
  },
  {
    "text": "do more of these full stack analysis because we will see how with the",
    "start": "582819",
    "end": "587949"
  },
  {
    "text": "hardware features there's features like hardware decryption features where you",
    "start": "587949",
    "end": "593199"
  },
  {
    "text": "can offload encryption to the hardware drivers I will see or we can exploit this to find these sty general attacks",
    "start": "593199",
    "end": "601019"
  },
  {
    "text": "so we will be looking for this cross layer side channel vulnerabilities and",
    "start": "601019",
    "end": "606100"
  },
  {
    "text": "we will find some issues and Powerman poor management features fragmentation and this hardware decryption so power",
    "start": "606100",
    "end": "615220"
  },
  {
    "text": "management features were defined in the II amendment and it defines features",
    "start": "615220",
    "end": "621399"
  },
  {
    "text": "search as you a PSD which means clients can do unscheduled go into power mode",
    "start": "621399",
    "end": "628750"
  },
  {
    "text": "and in an unscheduled interval which means the client can indicate it's going",
    "start": "628750",
    "end": "634000"
  },
  {
    "text": "to sleep to save some power and it will then notify the access points hey I'm awake you can now send me all your data",
    "start": "634000",
    "end": "640929"
  },
  {
    "text": "and that request new data using a Power Save Paul fraim so what this could look",
    "start": "640929",
    "end": "646240"
  },
  {
    "text": "like is a client sends a frame to the access point it sets the power management flike in",
    "start": "646240",
    "end": "651429"
  },
  {
    "text": "its header then it means the client will go to sleep the access points will",
    "start": "651429",
    "end": "656740"
  },
  {
    "text": "puffer all data that is intended to be transmitted to this client and when the client indicates to the power safe ball",
    "start": "656740",
    "end": "663670"
  },
  {
    "text": "frame hey I'm awake then the access point will sense either all the buffer data or it",
    "start": "663670",
    "end": "668770"
  },
  {
    "text": "will send an old data frame and we can build a side channel around this because",
    "start": "668770",
    "end": "675640"
  },
  {
    "text": "we can spoof a target client to make it look that it's entering power-save mode",
    "start": "675640",
    "end": "681370"
  },
  {
    "text": "well it's not in reality and then we can request data and if the access point replies with the data or the null data",
    "start": "681370",
    "end": "689170"
  },
  {
    "text": "frame then we can see that we successfully injected a frame and this",
    "start": "689170",
    "end": "695290"
  },
  {
    "text": "works against earlier Linux kernel versions and whilst later on see some side channels that work on more recent",
    "start": "695290",
    "end": "701410"
  },
  {
    "text": "kernel versions as well so the reason why this works is the following code",
    "start": "701410",
    "end": "706990"
  },
  {
    "text": "snippet so this is somewhere in the Linux kernel and what we see here is that the receiver decrypts the frame",
    "start": "706990",
    "end": "713680"
  },
  {
    "text": "then checks the Power Save flags and at the end and we'll check it to Michel make this means that if DX the receiver",
    "start": "713680",
    "end": "722700"
  },
  {
    "text": "verifies the power safe legs it means we must have succeeded in the decryption",
    "start": "722700",
    "end": "727720"
  },
  {
    "text": "otherwise we would not reach that stage and this is something we can exploit so",
    "start": "727720",
    "end": "734520"
  },
  {
    "text": "let's say we have an adversary somewhere in the network which does not need to have a man in the middle of position it",
    "start": "734520",
    "end": "740650"
  },
  {
    "text": "all the frames can be received there's no issue there so we capture as an",
    "start": "740650",
    "end": "747220"
  },
  {
    "text": "adversary we can capture a frame and then we will try to perform the chop-chop attack so what we do is we set",
    "start": "747220",
    "end": "753100"
  },
  {
    "text": "the Power Save flag in the header in the hope to have this frame accepted to the",
    "start": "753100",
    "end": "758350"
  },
  {
    "text": "access point so here we will try 265 times this same frame for each of the",
    "start": "758350",
    "end": "764800"
  },
  {
    "text": "possible values of the plaintext byte and there's a few tricks we need to do",
    "start": "764800",
    "end": "770140"
  },
  {
    "text": "with this the first one is we need to set the fragmentation number because if you recall from the teacup header the Michel",
    "start": "770140",
    "end": "776740"
  },
  {
    "text": "make is only edit to the last frame so if we change this captured frame to be",
    "start": "776740",
    "end": "782560"
  },
  {
    "text": "the first fragment of many then the receiver will not try to check the Michel make and that's important because",
    "start": "782560",
    "end": "789280"
  },
  {
    "text": "we cannot modify the Michel make at this point so if we can delay this check that",
    "start": "789280",
    "end": "794770"
  },
  {
    "text": "we can bypass its verification and additionally we need to model work",
    "start": "794770",
    "end": "801389"
  },
  {
    "text": "with a sequence counter because we need to pass these verifications because we are trying to replay this frame and we",
    "start": "801389",
    "end": "807630"
  },
  {
    "text": "can do this by using a different quality of service channel and their aides search channels so we can reuse these",
    "start": "807630",
    "end": "813839"
  },
  {
    "text": "seven orders to inject this frame on because it will one of them will is very likely to have a longer sequence counter",
    "start": "813839",
    "end": "821389"
  },
  {
    "text": "so if we corrected this frame correctly the access points will enter Power Save",
    "start": "821389",
    "end": "827070"
  },
  {
    "text": "mode and if it and we can find out by sending this power safe Paul frame and if we do not receive",
    "start": "827070",
    "end": "835019"
  },
  {
    "text": "reply from the access point then we know that our frame was rejected and it is",
    "start": "835019",
    "end": "841079"
  },
  {
    "text": "because we made the wrong ICV correction however if the access point replies with",
    "start": "841079",
    "end": "846540"
  },
  {
    "text": "this buffer or no data frame then we know that the or client has entered",
    "start": "846540",
    "end": "851820"
  },
  {
    "text": "Power Save mode and that means we made the correct guess for the plaintext byte",
    "start": "851820",
    "end": "856860"
  },
  {
    "text": "and then at that point we have successfully decrypted one byte and we can keep on doing this for the entire",
    "start": "856860",
    "end": "862980"
  },
  {
    "text": "frame so since the demonstration is",
    "start": "862980",
    "end": "868139"
  },
  {
    "text": "unlikely to work like this I locally added some slides into this presentation of a wire track trace so here we see one",
    "start": "868139",
    "end": "875850"
  },
  {
    "text": "of one execution of what I just explained where as this first frame is",
    "start": "875850",
    "end": "881010"
  },
  {
    "text": "the legitimate frame from the client so it's just sent and received by the access point next we modify this frame",
    "start": "881010",
    "end": "889440"
  },
  {
    "text": "so we have to make three modifications that has changed the header flag to have",
    "start": "889440",
    "end": "895319"
  },
  {
    "text": "it enter Power Save mode then change the fragmentation number and change the",
    "start": "895319",
    "end": "900540"
  },
  {
    "text": "quality of service channel so by making these modifications we can send a Power",
    "start": "900540",
    "end": "906510"
  },
  {
    "text": "Save poll frame to the access point and in this case the access point replies which means we made the correct guess",
    "start": "906510",
    "end": "913440"
  },
  {
    "text": "and by analyzing the traffic like this we can see if we made a correct guess",
    "start": "913440",
    "end": "919350"
  },
  {
    "text": "for our plaintext bytes so that's a very convenient way of decrypting one byte at",
    "start": "919350",
    "end": "927060"
  },
  {
    "text": "a time because this technique bypasses all you keep countermeasures so this does",
    "start": "927060",
    "end": "932450"
  },
  {
    "text": "not rely on any of the tea kept Michael make failure reports because we are",
    "start": "932450",
    "end": "937880"
  },
  {
    "text": "delaying the check for the Michael make which means since it's not checked there can be no errors on it so which means we",
    "start": "937880",
    "end": "945380"
  },
  {
    "text": "are bypassing all of these countermeasures and this allows us to decrypt the frame or at least recover",
    "start": "945380",
    "end": "952910"
  },
  {
    "text": "the Michael make in one to four minutes which is much faster than the previous attacks that existed against tea cap and",
    "start": "952910",
    "end": "960200"
  },
  {
    "text": "so now one of the common countermeasures against the previous attacks was to",
    "start": "960200",
    "end": "966590"
  },
  {
    "text": "reduce the Ricky in interval so it said what if instead of every hour we re key",
    "start": "966590",
    "end": "974450"
  },
  {
    "text": "or keys every 5 minutes then it means that the adversary is not able to perform this attack in 7 to 8 minutes",
    "start": "974450",
    "end": "980420"
  },
  {
    "text": "but since we do this much faster now we're also bypassing these countermeasures so next we looked at",
    "start": "980420",
    "end": "989690"
  },
  {
    "text": "some media attack devices and we found some interesting issues with a fragmentation there and what we found",
    "start": "989690",
    "end": "996170"
  },
  {
    "text": "was that if we sent a frame with a wrong",
    "start": "996170",
    "end": "1002140"
  },
  {
    "text": "ICV the media tech device will clear its fragmentation cache and if the frame is",
    "start": "1002140",
    "end": "1007930"
  },
  {
    "text": "correct and then the cache is cleared so that means the cache is affected so of",
    "start": "1007930",
    "end": "1013300"
  },
  {
    "text": "the ICV is wrong the frame is dropped and this allows us to make a quite",
    "start": "1013300",
    "end": "1018400"
  },
  {
    "start": "1017000",
    "end": "1017000"
  },
  {
    "text": "interesting side channel as well where we send a first fragment and this could for example be an arp request because we",
    "start": "1018400",
    "end": "1024819"
  },
  {
    "text": "want to know if this frame is really assembled in the best way to do so is to construct a frame that will trigger a",
    "start": "1024820",
    "end": "1032410"
  },
  {
    "text": "reply so if we send an ARP request as a as a fragment then we can send the first",
    "start": "1032410",
    "end": "1038470"
  },
  {
    "text": "fragment then we try or short frame so this will influence the state of the",
    "start": "1038470",
    "end": "1044110"
  },
  {
    "text": "cache at the access point and ever ICV was corrected to constrict Lee then the",
    "start": "1044110",
    "end": "1049930"
  },
  {
    "text": "cache will be cleared which means we will not receive a reply so when we send",
    "start": "1049930",
    "end": "1055690"
  },
  {
    "text": "our second fragment we're not really sure what's going to happen either the frame will be dropped or reassembled",
    "start": "1055690",
    "end": "1061690"
  },
  {
    "text": "with the first fragment depending on what happened Nagesh so ever frame was dropped it",
    "start": "1061690",
    "end": "1069940"
  },
  {
    "text": "means that the fragments can be reassembled which means the excess points will reply with its ARP reply and",
    "start": "1069940",
    "end": "1075399"
  },
  {
    "text": "if we detect this then we know we made a wrong guess however if we do not receive",
    "start": "1075399",
    "end": "1081460"
  },
  {
    "text": "reply from the access point it means the cache was cleared and we made a correct guess so this is another means of",
    "start": "1081460",
    "end": "1087520"
  },
  {
    "text": "decrypting one byte at a time next we also looked at hardware",
    "start": "1087520",
    "end": "1093730"
  },
  {
    "text": "decryption features so many modern ships",
    "start": "1093730",
    "end": "1099309"
  },
  {
    "text": "have the possibility to offload some of the encryption to the hardware drivers and there we can find some tight side",
    "start": "1099309",
    "end": "1107320"
  },
  {
    "text": "channels if these frames are passed along to the operating system or not so a reason why a hardware encryption might",
    "start": "1107320",
    "end": "1116350"
  },
  {
    "text": "drop is frame if is because an incorrect ICV which is relating back to making all",
    "start": "1116350",
    "end": "1122230"
  },
  {
    "text": "cases for this ICT correction so we can do a similar aside channel to the power",
    "start": "1122230",
    "end": "1128710"
  },
  {
    "start": "1125000",
    "end": "1125000"
  },
  {
    "text": "management except for now leveraging the hardware decryption features and this works on all more recent linux versions",
    "start": "1128710",
    "end": "1136120"
  },
  {
    "text": "which means we have a side channel that works on each of their criminal versions so the difference here now is we've",
    "start": "1136120",
    "end": "1143980"
  },
  {
    "text": "splitted the access point into its hardware and software features and if",
    "start": "1143980",
    "end": "1149559"
  },
  {
    "text": "the ICV is is incorrect the hardware will drop the frame so very similar to",
    "start": "1149559",
    "end": "1156460"
  },
  {
    "text": "before we can send our shop frames and if it's dropped we will not receive a reply however if it is passed along to",
    "start": "1156460",
    "end": "1164860"
  },
  {
    "text": "the operating system then it means that the client will enter Power Save mode and we can use our power safe pole to",
    "start": "1164860",
    "end": "1172600"
  },
  {
    "text": "retrieve this data so these Hardware",
    "start": "1172600",
    "end": "1178059"
  },
  {
    "start": "1175000",
    "end": "1175000"
  },
  {
    "text": "decryption features are also very useful to constructing these side channels and",
    "start": "1178059",
    "end": "1183100"
  },
  {
    "text": "we find a bunch more in these for which we do not have enough time to talk about today but they are mentioned in the",
    "start": "1183100",
    "end": "1188529"
  },
  {
    "text": "white paper that will be online tonight and there's also features like retransmission detection block",
    "start": "1188529",
    "end": "1195010"
  },
  {
    "text": "acknowledgments and replay detection features that can be leveraged to build more side channels and every implementation that",
    "start": "1195010",
    "end": "1203019"
  },
  {
    "text": "we looked at we found some of these side channels at least one worked against any of these implementations which showed us",
    "start": "1203019",
    "end": "1210309"
  },
  {
    "text": "that there's a lot of difficulty in making a secure implementation of TCAP",
    "start": "1210309",
    "end": "1215559"
  },
  {
    "text": "which is yet another reason to not use it anymore so what we've seen at this",
    "start": "1215559",
    "end": "1221679"
  },
  {
    "text": "point is we have a means of decrypting one byte at a time which allows us to decrypt a frame and we have a bunch of",
    "start": "1221679",
    "end": "1229269"
  },
  {
    "text": "side channels that use against a large variety of implementation of devices and operating systems and that's all pretty",
    "start": "1229269",
    "end": "1236799"
  },
  {
    "text": "cool but if we can now decrypt this frame what more can we do what is the real impact of this and for this we need",
    "start": "1236799",
    "end": "1244360"
  },
  {
    "start": "1243000",
    "end": "1243000"
  },
  {
    "text": "to think back to or teacup header where we see the encrypted part as the data",
    "start": "1244360",
    "end": "1250240"
  },
  {
    "text": "and 12 bytes for the michael mccann ICV and we are only interested in this point",
    "start": "1250240",
    "end": "1256630"
  },
  {
    "text": "at decrypting these last 12 bytes because we want to recover the Michael make and the ICV and if we know what",
    "start": "1256630",
    "end": "1265480"
  },
  {
    "text": "some of the contents are of a frame and an easy example would be an ARP request if you sniff an ARP request on the",
    "start": "1265480",
    "end": "1272289"
  },
  {
    "text": "network which is easily detectable by its length then we can make some very educated guesses on what is the",
    "start": "1272289",
    "end": "1279600"
  },
  {
    "text": "plaintext values of these art requests and that's depending on your network configuration it may only be one or two",
    "start": "1279600",
    "end": "1286029"
  },
  {
    "text": "bytes that you would have to brute-force to recover the plaintext value of this which means it goes very fast so if we",
    "start": "1286029",
    "end": "1294970"
  },
  {
    "text": "managed to decrypt this frame we have obtained some key stream we know the plaintext value of the frame we have to",
    "start": "1294970",
    "end": "1301179"
  },
  {
    "text": "encrypt it's part of this so we know which plaintext bytes match these encrypted parts and this key stream is",
    "start": "1301179",
    "end": "1308320"
  },
  {
    "text": "very interesting because key stream will allow us to inject messages which I will",
    "start": "1308320",
    "end": "1313990"
  },
  {
    "text": "explain on the next slide so we want more key stream the more key stream we can obtain the more messages we can add",
    "start": "1313990",
    "end": "1320679"
  },
  {
    "text": "later on inject into the network and since we already recover the Michael",
    "start": "1320679",
    "end": "1325750"
  },
  {
    "text": "make key in the first frame we decrypt then we are only interested in the last",
    "start": "1325750",
    "end": "1331110"
  },
  {
    "text": "four frames because four bytes because we can decrypt the other contents of",
    "start": "1331110",
    "end": "1338010"
  },
  {
    "text": "this frame because we already know them I can make at that point which means after the first frame or attack will be",
    "start": "1338010",
    "end": "1343500"
  },
  {
    "text": "much faster to generate keystream because we only need to decrypt these last four bytes so if you have this key",
    "start": "1343500",
    "end": "1352290"
  },
  {
    "start": "1350000",
    "end": "1350000"
  },
  {
    "text": "stream and we know the michael mickey' then we know from other researchers that",
    "start": "1352290",
    "end": "1357690"
  },
  {
    "text": "it's very easy to inject network traffic and this was shown already this is now",
    "start": "1357690",
    "end": "1363180"
  },
  {
    "text": "six years ago that we can do this so using some of these existing attacks it",
    "start": "1363180",
    "end": "1368940"
  },
  {
    "text": "allows us to inject more network traffic and this is where we can see the quality",
    "start": "1368940",
    "end": "1374010"
  },
  {
    "text": "of service channels where since we can use our recovered key stream to inject",
    "start": "1374010",
    "end": "1379920"
  },
  {
    "text": "messages on a channel with a lower T cap sequence counter so that allows us to",
    "start": "1379920",
    "end": "1385230"
  },
  {
    "text": "bypass this sequence counter check which means we can basically replay some of",
    "start": "1385230",
    "end": "1390630"
  },
  {
    "text": "the key stream into the network so that's all pretty bad but it's still a",
    "start": "1390630",
    "end": "1397920"
  },
  {
    "text": "major improvement over some of the other works since we bypass all existing countermeasures and as a result we don't",
    "start": "1397920",
    "end": "1405480"
  },
  {
    "start": "1400000",
    "end": "1400000"
  },
  {
    "text": "rely on them because some of the attacks rely on the Michael make failure reports and because we don't or attacks are much",
    "start": "1405480",
    "end": "1414090"
  },
  {
    "text": "faster so as we've seen before in a mere one to four minutes we can already",
    "start": "1414090",
    "end": "1419130"
  },
  {
    "text": "achieve these attacks of decrypting and injecting network traffic and there are",
    "start": "1419130",
    "end": "1425940"
  },
  {
    "start": "1423000",
    "end": "1423000"
  },
  {
    "text": "some countermeasures we can make tomorrow at X and which could be read",
    "start": "1425940",
    "end": "1431160"
  },
  {
    "text": "using the rekeying interval even more or disable these Michael make failure reports at all or basically fix an",
    "start": "1431160",
    "end": "1439110"
  },
  {
    "text": "outdated protocol which we could make some software changes to only process",
    "start": "1439110",
    "end": "1444720"
  },
  {
    "text": "frames if after reassembling them so do not process intermediate frames but only",
    "start": "1444720",
    "end": "1449880"
  },
  {
    "text": "the reassembled parts of them but that's really fixing an outdated protocol",
    "start": "1449880",
    "end": "1455040"
  },
  {
    "text": "that's already 16 years old and there's really no point in doing so we should really just leave it behind and move on",
    "start": "1455040",
    "end": "1461960"
  },
  {
    "text": "the better protocols that we already have today so that brings the up an",
    "start": "1461960",
    "end": "1468590"
  },
  {
    "text": "interesting question if these attacks work against TTIP then what about wpa2",
    "start": "1468590",
    "end": "1475120"
  },
  {
    "start": "1475000",
    "end": "1475000"
  },
  {
    "text": "unfortunately it does not work against these because wpa2",
    "start": "1475120",
    "end": "1480710"
  },
  {
    "text": "uses CCNP with an Aes block cipher and some of the changes they made there as",
    "start": "1480710",
    "end": "1486020"
  },
  {
    "text": "compared to tkip is they calculate a message integrity check for every frame",
    "start": "1486020",
    "end": "1492500"
  },
  {
    "text": "so we cannot postpone the check the authenticity check over frames anymore",
    "start": "1492500",
    "end": "1499159"
  },
  {
    "text": "like we were able to do with T cap because hence there we were able to set",
    "start": "1499159",
    "end": "1504980"
  },
  {
    "text": "the fragmentation number so that Mykel make us only checked in the last frame which is never transmitted so that no",
    "start": "1504980",
    "end": "1511070"
  },
  {
    "text": "longer works and CCNP and so and similarly the CCMP make is",
    "start": "1511070",
    "end": "1516320"
  },
  {
    "text": "not going to be invertible so we cannot exploit this feature so ccmp will",
    "start": "1516320",
    "end": "1523970"
  },
  {
    "text": "immediately for every frame it receives do a validation for its data integrity and its origin authentication which is",
    "start": "1523970",
    "end": "1532549"
  },
  {
    "text": "very important in these kind of networks so to summarize our side channels work",
    "start": "1532549",
    "end": "1538340"
  },
  {
    "text": "against D cap because D cap will perform operations against decrypted but an",
    "start": "1538340",
    "end": "1544070"
  },
  {
    "text": "authenticated data and they are processed before being reassembled so",
    "start": "1544070",
    "end": "1550840"
  },
  {
    "text": "there was a demonstration coming if my laptop worked but luckily I added some",
    "start": "1550840",
    "end": "1557149"
  },
  {
    "text": "screenshots of this as well so we can run over these what I wanted to show and",
    "start": "1557149",
    "end": "1562429"
  },
  {
    "text": "this is all published on github which is this URL all the information is there",
    "start": "1562429",
    "end": "1568850"
  },
  {
    "start": "1564000",
    "end": "1564000"
  },
  {
    "text": "it's very easy to set up the demonstration all the scripts to set it up are there so that should work nicely",
    "start": "1568850",
    "end": "1576580"
  },
  {
    "text": "there's the side channel that is described on the github is the power",
    "start": "1576580",
    "end": "1581929"
  },
  {
    "text": "management side Channel and there's if you execute this this is what it looks",
    "start": "1581929",
    "end": "1587419"
  },
  {
    "text": "like so you can for each of the 12 bytes we are trying to figure out what is the",
    "start": "1587419",
    "end": "1593000"
  },
  {
    "text": "plaintext value so we see we make on average we will make 1 or 28 guesses to get the right message",
    "start": "1593000",
    "end": "1599610"
  },
  {
    "text": "and this allows us to decrypt our message and as a result from doing this",
    "start": "1599610",
    "end": "1606000"
  },
  {
    "text": "we have some key stream and we can inject some messages into the network and so on I added some screenshots",
    "start": "1606000",
    "end": "1612870"
  },
  {
    "text": "fortunately about how this works so this is a Wireshark dump of what you",
    "start": "1612870",
    "end": "1618750"
  },
  {
    "text": "would see in the air if we perform this attack so in this first two messages we",
    "start": "1618750",
    "end": "1624840"
  },
  {
    "text": "see how the adversary is trying to adjust the frame and get the client to",
    "start": "1624840",
    "end": "1632160"
  },
  {
    "text": "enter and power management mode but it sends the power safe pole to the access point to which no reply is received",
    "start": "1632160",
    "end": "1638340"
  },
  {
    "text": "which means the adversary made the wrong guess so after a few more tries we see",
    "start": "1638340",
    "end": "1644580"
  },
  {
    "text": "that we receive a null data frame which means there is no data buffered for the",
    "start": "1644580",
    "end": "1650100"
  },
  {
    "text": "client and this is an indication that we made the correct guess for or chopped",
    "start": "1650100",
    "end": "1655500"
  },
  {
    "text": "off byte and you can repeat this for every byte you want to decrypt so later",
    "start": "1655500",
    "end": "1661800"
  },
  {
    "text": "on we'll see how the length of our frame is decreasing because we've successfully decrypted one byte at a time",
    "start": "1661800",
    "end": "1669950"
  },
  {
    "text": "so to conclude what this really means is there is still a very large support for",
    "start": "1669950",
    "end": "1677580"
  },
  {
    "start": "1677000",
    "end": "1677000"
  },
  {
    "text": "T cap and there's something that really worried us and it's something we should",
    "start": "1677580",
    "end": "1683160"
  },
  {
    "text": "no longer do because we found a lot of issues with these and these novel side",
    "start": "1683160",
    "end": "1688770"
  },
  {
    "text": "channels that we found are a real indication that it's very difficult to implement this particular protocol",
    "start": "1688770",
    "end": "1694980"
  },
  {
    "text": "without having these side channel ferner abilities against it and the reason why",
    "start": "1694980",
    "end": "1701760"
  },
  {
    "text": "we found a bunch of these is because we did some cross layer analysis and I think that's a general takeaway that is",
    "start": "1701760",
    "end": "1708570"
  },
  {
    "text": "not just relevant to Wi-Fi networks but in whichever field you are working on this could be a very interesting thing",
    "start": "1708570",
    "end": "1715350"
  },
  {
    "text": "to do more often than we already do because it's still today revealed so many vulnerabilities in a protocol that",
    "start": "1715350",
    "end": "1721500"
  },
  {
    "text": "has been out there 16 years so it's worth your while to investigate these",
    "start": "1721500",
    "end": "1728340"
  },
  {
    "text": "Slayer features as well well hopefully this enabled us to finally accelerate",
    "start": "1728340",
    "end": "1735840"
  },
  {
    "text": "the process of no longer using T cube so hopefully when you all go home and you",
    "start": "1735840",
    "end": "1741750"
  },
  {
    "text": "go to your work or your home you can check if ste kept is still supported and if it is it's really time to disable",
    "start": "1741750",
    "end": "1747720"
  },
  {
    "text": "this so that's the very simple recommendation of today I'll leave it",
    "start": "1747720",
    "end": "1753330"
  },
  {
    "text": "behind and we have more and better security protocols so it's really time to start using them to leave on a bit of",
    "start": "1753330",
    "end": "1760830"
  },
  {
    "text": "a positive note this was this is a page",
    "start": "1760830",
    "end": "1766080"
  },
  {
    "text": "from Microsoft of features they're no longer developing and they've recently announced that web and TCAP will soon no",
    "start": "1766080",
    "end": "1773399"
  },
  {
    "text": "longer be supported in the Windows so that's about time and very hopefully",
    "start": "1773399",
    "end": "1779159"
  },
  {
    "text": "this will be happening very soon so thank you I also had a video of the",
    "start": "1779159",
    "end": "1786690"
  },
  {
    "text": "demonstration if we're able to show this so we saw the Wireshark dump and this is",
    "start": "1786690",
    "end": "1796649"
  },
  {
    "text": "the demonstration that happens today so on the left we started an access point on the right we started a client so now",
    "start": "1796649",
    "end": "1804230"
  },
  {
    "text": "there is a connection setup between this client and network and as an adversary",
    "start": "1804230",
    "end": "1809279"
  },
  {
    "text": "we can now try to capture a ticket frame which will then be decrypted so to make",
    "start": "1809279",
    "end": "1816809"
  },
  {
    "text": "it a bit easier we can inject some messages that's on the right bottom corner it's just quick comment to inject",
    "start": "1816809",
    "end": "1824399"
  },
  {
    "text": "some ARP traffic so if the adversary sniffs for traffic it will capture a",
    "start": "1824399",
    "end": "1830789"
  },
  {
    "text": "frame and will slowly start to decrypt this so right now it's drying the 265",
    "start": "1830789",
    "end": "1836279"
  },
  {
    "text": "possible values for this plaintext byte so one by one we will see these bytes",
    "start": "1836279",
    "end": "1841799"
  },
  {
    "text": "coming along and here we are decrypting the last 12 bytes which is the ICV and",
    "start": "1841799",
    "end": "1847679"
  },
  {
    "text": "my komak",
    "start": "1847679",
    "end": "1850460"
  },
  {
    "text": "so sometimes it takes a bit longer if when it's say when we're a bit unfortunate with with our number of",
    "start": "1856740",
    "end": "1864400"
  },
  {
    "text": "tries but eventually we will have decrypted these last 12 bytes and at",
    "start": "1864400",
    "end": "1870400"
  },
  {
    "text": "that point we can then recover the ARP message and then do all our further",
    "start": "1870400",
    "end": "1877510"
  },
  {
    "text": "attacks such as injecting more network traffic so I can leave this running in",
    "start": "1877510",
    "end": "1884470"
  },
  {
    "text": "the background and maybe in the meantime take some questions if there are any",
    "start": "1884470",
    "end": "1890580"
  },
  {
    "text": "just to clarify is it a protocol problem or an implementation problem this is",
    "start": "1906990",
    "end": "1912179"
  },
  {
    "text": "mostly an implementation problem but you may also argue it's a protocol issue",
    "start": "1912179",
    "end": "1917730"
  },
  {
    "text": "because in the protocol they say that the definition says that we should add the Michael make to the last frame so",
    "start": "1917730",
    "end": "1925350"
  },
  {
    "text": "that's then more of a protocol issue because it allows for a recipient to",
    "start": "1925350",
    "end": "1931020"
  },
  {
    "text": "process frames that are not authenticated so that's the one of the issues they fixed with wpa2 where they",
    "start": "1931020",
    "end": "1938340"
  },
  {
    "text": "authenticate every individual frame every fragment so it's a bit a",
    "start": "1938340",
    "end": "1943920"
  },
  {
    "text": "combination of both we are at six bytes",
    "start": "1943920",
    "end": "1952830"
  },
  {
    "text": "so almost there yes",
    "start": "1952830",
    "end": "1959750"
  },
  {
    "text": "you said you're gonna publish a paper today yes where where we can find the paper on the black hat website I assume",
    "start": "1961820",
    "end": "1969080"
  },
  {
    "text": "together with their presentation and the white paper which describes a bunch more site analytics as what I presented today",
    "start": "1969080",
    "end": "1976250"
  },
  {
    "text": "excellent thank you you're welcome",
    "start": "1976250",
    "end": "1979960"
  },
  {
    "text": "alright that's 9 bytes",
    "start": "2000200",
    "end": "2003789"
  },
  {
    "text": "any other questions perhaps all right so",
    "start": "2009830",
    "end": "2017630"
  },
  {
    "text": "these last bytes seem to have went pretty quick so after decrypting the last 12 bytes we",
    "start": "2017630",
    "end": "2024350"
  },
  {
    "text": "can recover the the Michael make and the ICV and from this we can brute-force the",
    "start": "2024350",
    "end": "2031070"
  },
  {
    "text": "contents of our ARP reply and since we know what kind of we can make an educated guess for our network so it's",
    "start": "2031070",
    "end": "2038000"
  },
  {
    "text": "only brute forcing one or two bytes there so that goes very quick as you saw",
    "start": "2038000",
    "end": "2043510"
  },
  {
    "text": "thank you [Applause]",
    "start": "2043510",
    "end": "2050138"
  }
]