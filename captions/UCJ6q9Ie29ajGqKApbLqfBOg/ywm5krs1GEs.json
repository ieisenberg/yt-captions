[
  {
    "text": "so thanks for coming to this talk I'm jolio and I'm a post researcher at",
    "start": "2919",
    "end": "8400"
  },
  {
    "text": "educ so this talk is about new attacks against D aables and we have two",
    "start": "8400",
    "end": "14719"
  },
  {
    "text": "speakers uh I will introduce the side Channel part and my colleague Yan chin",
    "start": "14719",
    "end": "20119"
  },
  {
    "text": "will present the BF attack part but due to the Visa issue yzo can person so we",
    "start": "20119",
    "end": "26400"
  },
  {
    "text": "have a radio video recorded by yenzo for the second part and in addition to the",
    "start": "26400",
    "end": "32640"
  },
  {
    "text": "two speakers this work was contributed by the following collaborators is currently a post",
    "start": "32640",
    "end": "39520"
  },
  {
    "text": "at is associate professor at",
    "start": "39520",
    "end": "45039"
  },
  {
    "text": "and security researchers at CCI a team okay so let's get started now so",
    "start": "45039",
    "end": "52440"
  },
  {
    "text": "now in the age of AI more and more cloud service providers like Google and Amazon",
    "start": "52440",
    "end": "57680"
  },
  {
    "text": "have started to deploy their mer learning research outputs in our Cloud so machine learning models are available",
    "start": "57680",
    "end": "64920"
  },
  {
    "text": "to users in the form of online services and in such cases providers",
    "start": "64920",
    "end": "70680"
  },
  {
    "text": "deploy their private models in the cloud so users can access these models the",
    "start": "70680",
    "end": "76360"
  },
  {
    "text": "apis and as models can be viewed as valuable properties for example their",
    "start": "76360",
    "end": "81520"
  },
  {
    "text": "designs and pring parameters really will consume considerable amount of",
    "start": "81520",
    "end": "87400"
  },
  {
    "text": "competitional resources and uh expert knowledge however recently we have also",
    "start": "87400",
    "end": "93600"
  },
  {
    "text": "seen different Works aiming at attacking DN even when DN are deployed on the cloud and attackers are restricted to",
    "start": "93600",
    "end": "101680"
  },
  {
    "text": "access these models so basically these models can be as these attacks can",
    "start": "101680",
    "end": "107240"
  },
  {
    "text": "leverage various side channels to St Ste model architectures including operator",
    "start": "107240",
    "end": "112719"
  },
  {
    "text": "types and uh hyper parameters so they do the mode",
    "start": "112719",
    "end": "118159"
  },
  {
    "text": "architecture from Black model deployed on the cloud and after getting the model",
    "start": "118159",
    "end": "126759"
  },
  {
    "text": "architecture they can use uh mod acors to enable further attacks for example",
    "start": "126759",
    "end": "132200"
  },
  {
    "text": "like Moto sting attacks and beat flip attacks so if we know nothing about",
    "start": "132200",
    "end": "137959"
  },
  {
    "text": "architecture such a taxing can hardly be effective and in this talk by the way we are talk more about bit F attack in the",
    "start": "137959",
    "end": "144800"
  },
  {
    "text": "second part and meanwhile we also observed that",
    "start": "144800",
    "end": "149920"
  },
  {
    "text": "all the service providers they are exploring Deering compilation techniques",
    "start": "149920",
    "end": "155440"
  },
  {
    "text": "for uh in their resource sharing environments for private reasons so this",
    "start": "155440",
    "end": "160599"
  },
  {
    "text": "intrigued our interest because we knew that DN have been proven or to be to be",
    "start": "160599",
    "end": "167640"
  },
  {
    "text": "vulnerable to S channels so in this case we want to ask is there a risk of",
    "start": "167640",
    "end": "173440"
  },
  {
    "text": "valuable properties being leaked via set channels when using D accable or de",
    "start": "173440",
    "end": "180000"
  },
  {
    "text": "compilation techniques so this talk will answer this",
    "start": "180000",
    "end": "185120"
  },
  {
    "text": "question so we will first briefly introduce different compilation and DX B",
    "start": "185120",
    "end": "191120"
  },
  {
    "text": "then we will focus on the uh new set channel leage that can be used to Steel mode architectures and uh new bit fex",
    "start": "191120",
    "end": "199400"
  },
  {
    "text": "servic that can be used to control or manipulate mode outputs so first like let's look at the",
    "start": "199400",
    "end": "207000"
  },
  {
    "text": "T compilation techniques so as we know D can usually consume a large am amount of",
    "start": "207000",
    "end": "213120"
  },
  {
    "text": "computational resources so we may want to deploy DN uh on various Hardware devices for",
    "start": "213120",
    "end": "220680"
  },
  {
    "text": "cost and profit reasons for example given a DM model trained on gpus we can",
    "start": "220680",
    "end": "226439"
  },
  {
    "text": "deploy it on uh cost efficient CPUs and in such cases we want to",
    "start": "226439",
    "end": "232599"
  },
  {
    "text": "leverage the performance potential of the target hardware and as a result",
    "start": "232599",
    "end": "238720"
  },
  {
    "text": "different compilation techniques are proposed to compile DM models into DN",
    "start": "238720",
    "end": "244360"
  },
  {
    "text": "accesses and to fully leverage the performance potential of Target Hardware Hardware",
    "start": "244360",
    "end": "251599"
  },
  {
    "text": "devices and basically the D compiler will automatically optimize the DM model",
    "start": "251920",
    "end": "258120"
  },
  {
    "text": "to generate efficient the banner code so the banner code can runs uh on on CPU as",
    "start": "258120",
    "end": "264120"
  },
  {
    "text": "a native code so basically the DN accable has the same functionality as as",
    "start": "264120",
    "end": "270280"
  },
  {
    "text": "the original DM model and also depending on the target hardware and the input DM",
    "start": "270280",
    "end": "276560"
  },
  {
    "text": "model the DI compiler will adjust or fine-tune the applied optimizations to",
    "start": "276560",
    "end": "283800"
  },
  {
    "text": "unlock the full potential of Target Hardware so uh in this talk we call such",
    "start": "283800",
    "end": "289560"
  },
  {
    "text": "optimizations Hardware aware",
    "start": "289560",
    "end": "293400"
  },
  {
    "text": "optimizations so now let's think from a security point of view so what are the difference",
    "start": "295000",
    "end": "300160"
  },
  {
    "text": "between uh D Ables and typical deep learning Frameworks like a p gen flow so",
    "start": "300160",
    "end": "306840"
  },
  {
    "text": "in general deep learning compilers provide specific optimizations for each operator in order to uh generate",
    "start": "306840",
    "end": "314199"
  },
  {
    "text": "efficient optimal low level ban code so there is no third party linear algebra",
    "start": "314199",
    "end": "320080"
  },
  {
    "text": "libraries used by DX the DN EXO runs in a standard L",
    "start": "320080",
    "end": "326600"
  },
  {
    "text": "execution Paradigm so unlike in uh traditional or typical deing Frameworks like pyo where different prises may",
    "start": "326600",
    "end": "333880"
  },
  {
    "text": "share the same uh pyo framework or the same algebra linear algebra libraries so",
    "start": "333880",
    "end": "340120"
  },
  {
    "text": "the ex do not share operators or mem region with any other",
    "start": "340120",
    "end": "346120"
  },
  {
    "text": "prises okay so what's the influence of such a stand alone execution Paradigm",
    "start": "346639",
    "end": "351759"
  },
  {
    "text": "does it make the aible uh more secure against the side",
    "start": "351759",
    "end": "356840"
  },
  {
    "text": "channels so to answer the question let's first look at the existing attacks so attacking DM models with set channels is",
    "start": "356840",
    "end": "365080"
  },
  {
    "text": "not a new topic recently many papers have been published and many Works have been done to uh exploit different set",
    "start": "365080",
    "end": "373479"
  },
  {
    "text": "channels to uh Ste mod architectures and we surveyed recent",
    "start": "373479",
    "end": "378919"
  },
  {
    "text": "text and by the way you can find a discussion more detailed discussion our paper and website and we have a link in",
    "start": "378919",
    "end": "385400"
  },
  {
    "text": "the end of the talk where you can download the papers so we surveyed the recent tax and",
    "start": "385400",
    "end": "393400"
  },
  {
    "text": "found we categorize into two major types named as a physical exess type including",
    "start": "393400",
    "end": "399639"
  },
  {
    "text": "uh electromagnetic side channels bu snooping and power side channels and the",
    "start": "399639",
    "end": "404960"
  },
  {
    "text": "remote size type including uh Ro Hammer based Modo cych",
    "start": "404960",
    "end": "410319"
  },
  {
    "text": "and remote par side channels and uh cach side channels so s remote side channels",
    "start": "410319",
    "end": "417240"
  },
  {
    "text": "are more powerful and more threatening so in talk we mainly am at remote excise",
    "start": "417240",
    "end": "424840"
  },
  {
    "text": "attacks and here due to the time limit here we only briefly list the major",
    "start": "425759",
    "end": "431160"
  },
  {
    "text": "limitations of recent uh remote side Channel works so the RO Hammer based",
    "start": "431160",
    "end": "436800"
  },
  {
    "text": "model stealing attack is limited by its low efficiency because the r Hammer is quite slow and it currently only targets",
    "start": "436800",
    "end": "444759"
  },
  {
    "text": "quantized model and remote par channels R relies on system level interfaces and",
    "start": "444759",
    "end": "451319"
  },
  {
    "text": "it requires user Privileges and the cash side Channel which is one of one for the",
    "start": "451319",
    "end": "457639"
  },
  {
    "text": "most common side channels it requires share the memory regions in order to",
    "start": "457639",
    "end": "462800"
  },
  {
    "text": "accurately monitor program execution okay so all the text mentioned",
    "start": "462800",
    "end": "470080"
  },
  {
    "text": "here a at typical deep learning Frameworks like pyou so we want to ask can they be",
    "start": "470080",
    "end": "478240"
  },
  {
    "text": "applied to DX and here the short answer is no as I mentioned earlier the DX has a unique",
    "start": "478240",
    "end": "485840"
  },
  {
    "text": "standard alone acation Paradigm so there's no shared memory for accurate uh",
    "start": "485840",
    "end": "492919"
  },
  {
    "text": "cat SE Chanel attacks and there are no third party libraries for attackers to",
    "start": "492919",
    "end": "498319"
  },
  {
    "text": "pre analyze and locate sensitive functions so as a result none of the",
    "start": "498319",
    "end": "504560"
  },
  {
    "text": "existing attacks can be uh applied to the aible so the next question following",
    "start": "504560",
    "end": "510800"
  },
  {
    "text": "that is is using de compilation a more secure way to uh deploy DN in the cloud",
    "start": "510800",
    "end": "519000"
  },
  {
    "text": "and unfortunately we must show that DX it is still vulnerable to cast",
    "start": "519000",
    "end": "525919"
  },
  {
    "text": "channels so we first took a close look at the cash access traces of compil D",
    "start": "526920",
    "end": "534519"
  },
  {
    "text": "Ables so to do so we collect the cast traces simulated with Intel pin which is",
    "start": "534519",
    "end": "540519"
  },
  {
    "text": "a binary instrumentation tool so we do So to avoid the noise and to make the",
    "start": "540519",
    "end": "546200"
  },
  {
    "text": "traces easier to understand and recognize by humaniz so as show in the",
    "start": "546200",
    "end": "551600"
  },
  {
    "text": "figure in which each row contains uh 64 pixels each pixel is a cine so there are",
    "start": "551600",
    "end": "558120"
  },
  {
    "text": "64 cine in one and the dark pixel means the Caston is visited by the victim and",
    "start": "558120",
    "end": "564399"
  },
  {
    "text": "a great pixel means it's noted by the victim so we log a row which is the",
    "start": "564399",
    "end": "570240"
  },
  {
    "text": "state of R1 cach after short interval to we do so to mimic a typical Prime and",
    "start": "570240",
    "end": "575839"
  },
  {
    "text": "probe attack and as we can see there is a pattern that occurs repeatedly in the",
    "start": "575839",
    "end": "583440"
  },
  {
    "text": "CES and more than that different operators will have",
    "start": "583440",
    "end": "588680"
  },
  {
    "text": "different cash acccess patterns that's giving us an opportunity to distinguish",
    "start": "588680",
    "end": "593800"
  },
  {
    "text": "different operators okay so now we know that there might be some kind of P P if we try to",
    "start": "593800",
    "end": "600560"
  },
  {
    "text": "monitor the DX B with typical Cat Side channels but why is that to answer this",
    "start": "600560",
    "end": "608560"
  },
  {
    "text": "question we conducted a detailed analysis and found that compiler optimizations lead to this",
    "start": "608560",
    "end": "616399"
  },
  {
    "text": "phenomenon so before explaining how optimizations can well influence cash",
    "start": "616399",
    "end": "622160"
  },
  {
    "text": "activities the this talk we first briefly introduce two major optimization Strategies employed by deing comp pilers",
    "start": "622160",
    "end": "629839"
  },
  {
    "text": "so one of them is blocking as sh this figure in figure a if we naively compute",
    "start": "629839",
    "end": "635760"
  },
  {
    "text": "the matrix multiplication we will sweep the Matrix many times and encounter many",
    "start": "635760",
    "end": "642000"
  },
  {
    "text": "cash misses because the size of cash is limited and it's much smaller than the",
    "start": "642000",
    "end": "647560"
  },
  {
    "text": "size of in Matrix but if we split the Matrix into blocks as in figure B so the",
    "start": "647560",
    "end": "653320"
  },
  {
    "text": "memes are restricted in a small region leading to better memory locality and",
    "start": "653320",
    "end": "658959"
  },
  {
    "text": "fast computation and another optimization I'd",
    "start": "658959",
    "end": "665399"
  },
  {
    "text": "like to introduce is vectorization so mod CPUs provide the S IMD extension s",
    "start": "665399",
    "end": "671839"
  },
  {
    "text": "IMD instructions can read consecutive memory and compute multiple data in",
    "start": "671839",
    "end": "676880"
  },
  {
    "text": "parallel so to elaborate such instructions different compilers will uh",
    "start": "676880",
    "end": "682079"
  },
  {
    "text": "rearrange or reshape the memory layout of model parameters so as in the figure overall",
    "start": "682079",
    "end": "690360"
  },
  {
    "text": "what we want to say is that optimizing D computation is not an easy task and some",
    "start": "690360",
    "end": "696200"
  },
  {
    "text": "different compar will even use machine learning based approach to automatically F tune the optimization and to decide",
    "start": "696200",
    "end": "703680"
  },
  {
    "text": "how to like a block uh and how to reshape the memory",
    "start": "703680",
    "end": "709600"
  },
  {
    "text": "layout okay so what are the consequences of this optimizations here we provide a",
    "start": "710000",
    "end": "715240"
  },
  {
    "text": "code example and by the way you can see skip details of the code and just a SCH",
    "start": "715240",
    "end": "720600"
  },
  {
    "text": "over it and we have this example in our paper and our website so here the point",
    "start": "720600",
    "end": "725800"
  },
  {
    "text": "is before optimization the convolution operator has a naive Loop structure and basically",
    "start": "725800",
    "end": "733560"
  },
  {
    "text": "it will sweep the input Matrix many times thus such code show memory locality and it's",
    "start": "733560",
    "end": "739399"
  },
  {
    "text": "slow and after optimizations Some Loops will be split and",
    "start": "739399",
    "end": "745519"
  },
  {
    "text": "permutated resulting in unique Loop structures so in example Some Loops are split into outer",
    "start": "745519",
    "end": "752600"
  },
  {
    "text": "and in Loops for better M locality and such optimizations depends on the hyper",
    "start": "752600",
    "end": "757680"
  },
  {
    "text": "parameters of the operator so in this example uh the in Loops will even be",
    "start": "757680",
    "end": "764560"
  },
  {
    "text": "unrolled for performance improvements okay so now we know that",
    "start": "764560",
    "end": "770600"
  },
  {
    "text": "compiler optimizations were largely change the loop",
    "start": "770600",
    "end": "775720"
  },
  {
    "text": "structures so what we want to say here is that uh each operator will be specifically",
    "start": "776360",
    "end": "782680"
  },
  {
    "text": "optimized according to its hyper parameters so that means they are",
    "start": "782680",
    "end": "788240"
  },
  {
    "text": "optimized with different optimization factors like the uh the size of split",
    "start": "788240",
    "end": "793399"
  },
  {
    "text": "box and the shape of optimized memory layout so as a consequence this show",
    "start": "793399",
    "end": "799720"
  },
  {
    "text": "distinct Loop structures in the binary code so if we can determine the binary code in determine the loop structures in",
    "start": "799720",
    "end": "806959"
  },
  {
    "text": "the binary code we can distinguish different operators it's like a fingerprint of",
    "start": "806959",
    "end": "812839"
  },
  {
    "text": "operators and more importantly by recognizing or distinguishing different",
    "start": "812839",
    "end": "818600"
  },
  {
    "text": "operators we are actually recovering mod architectures because models are made up of different",
    "start": "818600",
    "end": "826680"
  },
  {
    "text": "operators however as I mentioned earlier we only have a remote excise to the",
    "start": "827120",
    "end": "833120"
  },
  {
    "text": "model we only can access the model apis and we canot know the loop structure in the low level or binary code so is",
    "start": "833120",
    "end": "839839"
  },
  {
    "text": "impossible thus in this work we depict depict the loop structure in an implicit",
    "start": "839839",
    "end": "845959"
  },
  {
    "text": "way so such D involves massive computations and memor",
    "start": "845959",
    "end": "851759"
  },
  {
    "text": "sizes it will result in a distinguishable cach activities that can be captured with typical cach set",
    "start": "851759",
    "end": "859440"
  },
  {
    "text": "channels like primet probe so in this work we depicted the binary level code",
    "start": "859440",
    "end": "865199"
  },
  {
    "text": "structures with the inner loop factor and outer loop Factor so here the inner loop Factor denotes",
    "start": "865199",
    "end": "872120"
  },
  {
    "text": "the pattern in the cast Tres and the outer loop Factor denotes uh the",
    "start": "872120",
    "end": "878959"
  },
  {
    "text": "frequency of the pattern or more straightforward Cas size patterns",
    "start": "878959",
    "end": "886240"
  },
  {
    "text": "depends on the operator and according to our analysis there should be a one to",
    "start": "886240",
    "end": "891560"
  },
  {
    "text": "one mapping relation that can potentially be exploited by the attacker to infer operators in the victim model",
    "start": "891560",
    "end": "900680"
  },
  {
    "text": "okay so up to now we have uncovered a potential attacking surface in the as in",
    "start": "900680",
    "end": "905920"
  },
  {
    "text": "this in this figure PRI Works usually start with manually locating sensitive",
    "start": "905920",
    "end": "911079"
  },
  {
    "text": "functions in third party libraries and differently we reveal that",
    "start": "911079",
    "end": "916120"
  },
  {
    "text": "Hardware aware optimizations can introduce new set channel leakages so the problem now is how can we exploit",
    "start": "916120",
    "end": "923639"
  },
  {
    "text": "such a a potential s leage and confirm our conclusions",
    "start": "923639",
    "end": "930759"
  },
  {
    "text": "So based on our findings we propose to extract identifiers from two",
    "start": "931279",
    "end": "936639"
  },
  {
    "text": "perspectives with machine learning models so more specifically we extract The observed pattern with uh feature",
    "start": "936639",
    "end": "944440"
  },
  {
    "text": "extraction model as the in factor and we uh extract the numb that the pattern",
    "start": "944440",
    "end": "950800"
  },
  {
    "text": "repeated with Trace segmentation model as aut Factor then we combine the two perspectives or the two factors as the",
    "start": "950800",
    "end": "959399"
  },
  {
    "text": "identifier and match the most similar candidate in identifier database so given the candidate we can",
    "start": "959399",
    "end": "965399"
  },
  {
    "text": "know the operator type and hper parameters because all the information are locked in the",
    "start": "965399",
    "end": "970720"
  },
  {
    "text": "database so in the following slide I will skip technical details because we",
    "start": "970720",
    "end": "976360"
  },
  {
    "text": "uh standard models and standard techniques but no worries you can still find our technical details and releas",
    "start": "976360",
    "end": "983279"
  },
  {
    "text": "the code you our paper and website so for for the first part we use",
    "start": "983279",
    "end": "991480"
  },
  {
    "text": "contrasted learning for the feature extraction so basically we view a trace p as a one channel image so idea is that",
    "start": "991480",
    "end": "1000959"
  },
  {
    "text": "Trac PES from the same operator should have similar feature vectors so in this",
    "start": "1000959",
    "end": "1006319"
  },
  {
    "text": "way we can train the model in an unsupervised way and extract features",
    "start": "1006319",
    "end": "1012319"
  },
  {
    "text": "from cast traes automatically so that's a basic idea and for the second part",
    "start": "1012319",
    "end": "1019519"
  },
  {
    "text": "to get the alter Factor we use uh we segment the trace with a recurrent encoder decoder model so it's quite a",
    "start": "1019519",
    "end": "1026760"
  },
  {
    "text": "typical model used in a community so this model tries to compress and recover",
    "start": "1026760",
    "end": "1032079"
  },
  {
    "text": "the input Matrix so the idea is that frequent normal patterns can quickly be learned",
    "start": "1032079",
    "end": "1038000"
  },
  {
    "text": "by this model so if the model fails to recover the input Matrix it indicates that there might be a noral in the",
    "start": "1038000",
    "end": "1045438"
  },
  {
    "text": "trace and basically this encoder decode network will sweep the trace to find the",
    "start": "1045439",
    "end": "1051400"
  },
  {
    "text": "locations of anomalies and figure out how many times the patent are repeated so basically we",
    "start": "1051400",
    "end": "1057080"
  },
  {
    "text": "view the bound of two patterns as an normally okay so that's the basic idea",
    "start": "1057080",
    "end": "1062799"
  },
  {
    "text": "of our uh attacking framework so how well does our method",
    "start": "1062799",
    "end": "1069080"
  },
  {
    "text": "work in real C side channel settings so in the evaluation which CH R night and",
    "start": "1069080",
    "end": "1074360"
  },
  {
    "text": "VG as the victim model and other 28 models as the",
    "start": "1074360",
    "end": "1079480"
  },
  {
    "text": "database all models are compiled with two state of the art compilers TVM and glob and we also evaluate the proposed",
    "start": "1079480",
    "end": "1087240"
  },
  {
    "text": "attacking for A1 and RC Cat Side channels",
    "start": "1087240",
    "end": "1092320"
  },
  {
    "text": "separately so here we provide an example to illustrate steps so given a victim",
    "start": "1092320",
    "end": "1097799"
  },
  {
    "text": "acable we collect cat traces with typical Prime and probe attack and then",
    "start": "1097799",
    "end": "1104200"
  },
  {
    "text": "feed the traces to R2 R2 will output the mod architectures including operator",
    "start": "1104200",
    "end": "1109679"
  },
  {
    "text": "types and corresponding hyper parameters so such information can be used to",
    "start": "1109679",
    "end": "1115200"
  },
  {
    "text": "reconstruct mode architectures and uh as for the results",
    "start": "1115200",
    "end": "1121559"
  },
  {
    "text": "overall we can achieve about 90% accuracy for TVM banies and over 70%",
    "start": "1121559",
    "end": "1127240"
  },
  {
    "text": "accuracy for glob banies in the one setting the results are not bad however for the arc",
    "start": "1127240",
    "end": "1134280"
  },
  {
    "text": "setting which uh we achieve about above 90% accy which is even bter than the one",
    "start": "1134280",
    "end": "1140799"
  },
  {
    "text": "sighting so this is beyond our expectations because generally we believe that our C attack is more",
    "start": "1140799",
    "end": "1146760"
  },
  {
    "text": "challenging than the one cash attack so why is that we conduct",
    "start": "1146760",
    "end": "1152720"
  },
  {
    "text": "analysis to interpret why is the RC T better results and we find find that",
    "start": "1152720",
    "end": "1158799"
  },
  {
    "text": "some compelled operators are not optimal which uh means the binary code shows low memory locality and low cach rate so the",
    "start": "1158799",
    "end": "1166799"
  },
  {
    "text": "next question is why low cat we prevent attackers again we'll provide example",
    "start": "1166799",
    "end": "1173159"
  },
  {
    "text": "here and you can find example in our paper and website so uh yeah so no need",
    "start": "1173159",
    "end": "1179360"
  },
  {
    "text": "to worry if you didn't get the idea here so in short the point is this Loop which",
    "start": "1179360",
    "end": "1186480"
  },
  {
    "text": "is a core of a convolution operator this Loop valate uh 64 KB of different memory",
    "start": "1186480",
    "end": "1192600"
  },
  {
    "text": "in total however one cash you s is 32 KB which means the code will be self",
    "start": "1192600",
    "end": "1199360"
  },
  {
    "text": "competing it will evict its own data from L1 cash and it never leverages the",
    "start": "1199360",
    "end": "1204760"
  },
  {
    "text": "benefits of R1 uh cash so as a result in figure a from a",
    "start": "1204760",
    "end": "1213640"
  },
  {
    "text": "ters perspective such cash access traces are feess because all cash lines are",
    "start": "1213640",
    "end": "1220039"
  },
  {
    "text": "visited by the victim so such cases such traces are",
    "start": "1220039",
    "end": "1225280"
  },
  {
    "text": "non-distinguishable toct hackers so again here is the D of between performance and security if we optimize",
    "start": "1225280",
    "end": "1232039"
  },
  {
    "text": "the code there be that be actual leakage but if we uh do not optimize the code",
    "start": "1232039",
    "end": "1238240"
  },
  {
    "text": "there will be performance slow down okay so that's all for the cash s",
    "start": "1238240",
    "end": "1245120"
  },
  {
    "text": "part of this talk but it's not over yet my colleague yanen he can come here in",
    "start": "1245120",
    "end": "1251240"
  },
  {
    "text": "person due to the V but he has a recorded video to show a novel bit FIP",
    "start": "1251240",
    "end": "1257000"
  },
  {
    "text": "attack against in acces so let me first briefly introduce yenzo uh yenzo is a",
    "start": "1257000",
    "end": "1263000"
  },
  {
    "text": "fourth year PhD student at K and he's currently visiting s Tech and he does",
    "start": "1263000",
    "end": "1268520"
  },
  {
    "text": "research on system of security and his Works were published at top tier uh",
    "start": "1268520",
    "end": "1274279"
  },
  {
    "text": "security conference like ndss CCS andp uh and although yo can come here",
    "start": "1274279",
    "end": "1280279"
  },
  {
    "text": "answer questions now he would be happy to answer questions via email so please",
    "start": "1280279",
    "end": "1285360"
  },
  {
    "text": "feel free to email him or me okay so I guess it's time for Eno talk",
    "start": "1285360",
    "end": "1291480"
  },
  {
    "text": "and we can play the video now I'm Eno and I'll continue to the",
    "start": "1291480",
    "end": "1298279"
  },
  {
    "text": "second part of our talk now we've talked about stealing stuff out of DN",
    "start": "1298279",
    "end": "1303600"
  },
  {
    "text": "executables a very intuitive question that arises now is how can we use what",
    "start": "1303600",
    "end": "1309880"
  },
  {
    "text": "we know about the models to attack them like um control them and make them do",
    "start": "1309880",
    "end": "1315480"
  },
  {
    "text": "bad stuff for example we'd like to May a classification model see a Ninja when",
    "start": "1315480",
    "end": "1321600"
  },
  {
    "text": "looking at this picture or um in a world where Ninjas don't exist maybe tell you",
    "start": "1321600",
    "end": "1327480"
  },
  {
    "text": "that you've committed some um serious crime when you haven't so we know there are existing",
    "start": "1327480",
    "end": "1334000"
  },
  {
    "text": "attacks to do this like adversary examples data poisoning back doors",
    "start": "1334000",
    "end": "1340520"
  },
  {
    "text": "Etc but there's a problem with them these attacks are all like optimization",
    "start": "1340520",
    "end": "1346480"
  },
  {
    "text": "problems with respect to model weights and model developers can also use",
    "start": "1346480",
    "end": "1352400"
  },
  {
    "text": "optimization methods to augment the models in defense but as systems",
    "start": "1352400",
    "end": "1358320"
  },
  {
    "text": "research people we'd like to know whether we can attack the models in a",
    "start": "1358320",
    "end": "1363440"
  },
  {
    "text": "way that byass these defenses a way to attack them through a dimension that",
    "start": "1363440",
    "end": "1369520"
  },
  {
    "text": "they simply can't defend against so could we do that recall that",
    "start": "1369520",
    "end": "1376000"
  },
  {
    "text": "we've just exploited um CPU architectures to still model architectures and we still want to come",
    "start": "1376000",
    "end": "1383360"
  },
  {
    "text": "back to a low level like this so looking aside the CPU we see what's been staring",
    "start": "1383360",
    "end": "1389760"
  },
  {
    "text": "at us the whole time theam microarchitectures there's been this",
    "start": "1389760",
    "end": "1396279"
  },
  {
    "text": "roow Hammer attack which was discovered in 2014 this is a hot word vulnerability",
    "start": "1396279",
    "end": "1403039"
  },
  {
    "text": "triggered using only software basically when you access the memory in some",
    "start": "1403039",
    "end": "1408559"
  },
  {
    "text": "specific pattern and you do it so fast you trigger current leakage between Dam",
    "start": "1408559",
    "end": "1414960"
  },
  {
    "text": "cells and the datab bits in those celles can get flipped rammer has been and is still a",
    "start": "1414960",
    "end": "1423640"
  },
  {
    "text": "very real threat over the years researchers have successfully broken",
    "start": "1423640",
    "end": "1429200"
  },
  {
    "text": "DDR3 ddr4 ECC memory and recently also got ddr5 squared away so it's really a",
    "start": "1429200",
    "end": "1437720"
  },
  {
    "text": "Die Hard vulnerability you also see all kinds of applications like privilege escalation",
    "start": "1437720",
    "end": "1445159"
  },
  {
    "text": "cross VM attacks and attacking victims through the browser and",
    "start": "1445159",
    "end": "1450840"
  },
  {
    "text": "JavaScript and actually researchers has Al also tried roow hammer on DNN models",
    "start": "1450840",
    "end": "1458559"
  },
  {
    "text": "and they found it pretty effective when bits in model weights are flipped but",
    "start": "1458559",
    "end": "1464000"
  },
  {
    "text": "there's a problem they need white box knowledge of the victim models to calculate the gradients and figure out",
    "start": "1464000",
    "end": "1471640"
  },
  {
    "text": "which bits to flip but what if we don't have that knowledge after all weights are often",
    "start": "1471640",
    "end": "1479360"
  },
  {
    "text": "confidential right okay so what can we do if flipping",
    "start": "1479360",
    "end": "1485520"
  },
  {
    "text": "model weights are off limits the answer is actually in the name DNN",
    "start": "1485520",
    "end": "1491480"
  },
  {
    "text": "executable what's inside these",
    "start": "1491480",
    "end": "1495720"
  },
  {
    "text": "executables code all compiled machine code for the DNN operators used by the",
    "start": "1496559",
    "end": "1503039"
  },
  {
    "text": "model if you can flip bits in there we can probably change the model's",
    "start": "1503039",
    "end": "1510000"
  },
  {
    "text": "Behavior okay so to recap our setup our objective is to destroy model",
    "start": "1510000",
    "end": "1515880"
  },
  {
    "text": "intelligence with bit Flips For example to make them um become random guesses",
    "start": "1515880",
    "end": "1522240"
  },
  {
    "text": "and as attackers we only know the model structure and how to compile the model",
    "start": "1522240",
    "end": "1528559"
  },
  {
    "text": "to get the victim binary because model structures are often published and if",
    "start": "1528559",
    "end": "1534279"
  },
  {
    "text": "not existing tools can also help us recover them importantly we have no",
    "start": "1534279",
    "end": "1540720"
  },
  {
    "text": "access or knowledge or whatsoever to the victim models under this setup the most",
    "start": "1540720",
    "end": "1548360"
  },
  {
    "text": "important problem we want to solve is how do we figure out which bits to",
    "start": "1548360",
    "end": "1554559"
  },
  {
    "text": "flip know that we are not trying to tell you how to flip those bits there's been",
    "start": "1554559",
    "end": "1560679"
  },
  {
    "text": "ample resources on that rather we tell you how to find vulnerable bits to flip",
    "start": "1560679",
    "end": "1567039"
  },
  {
    "text": "with very limited knowledge um here's what the attack flow",
    "start": "1567039",
    "end": "1572679"
  },
  {
    "text": "looks like and basically it's the same for all bit flip attacks on DNN the",
    "start": "1572679",
    "end": "1578840"
  },
  {
    "text": "attacker first uses whatever knowledge they have to construct some local model",
    "start": "1578840",
    "end": "1584760"
  },
  {
    "text": "so they can examine and play with it however they want and once the attacker decided which bits",
    "start": "1584760",
    "end": "1592039"
  },
  {
    "text": "to flip they launched the real Attack on the victim",
    "start": "1592039",
    "end": "1597240"
  },
  {
    "text": "model there's a comparison between existing attacks and ours in existing",
    "start": "1597240",
    "end": "1603720"
  },
  {
    "text": "attacks the attacker knows everything about the victim model so they calculate",
    "start": "1603720",
    "end": "1609840"
  },
  {
    "text": "the model gradients locally to find the most vulnerable bits to flip in the",
    "start": "1609840",
    "end": "1615159"
  },
  {
    "text": "model weights which makes the calculation and prediction results of",
    "start": "1615159",
    "end": "1620480"
  },
  {
    "text": "the model become essentially broken numbers on the other hand we only get to",
    "start": "1620480",
    "end": "1627919"
  },
  {
    "text": "know the model structure and how to compile the model as the victim did no",
    "start": "1627919",
    "end": "1633799"
  },
  {
    "text": "victim model weights no victim training sets or things like that we then look at",
    "start": "1633799",
    "end": "1639919"
  },
  {
    "text": "the machine code in the compiled binary and try to figure out which bits to flip",
    "start": "1639919",
    "end": "1646399"
  },
  {
    "text": "note that we are flipping bits in the code region so we're actually changing",
    "start": "1646399",
    "end": "1651960"
  },
  {
    "text": "the instructions in the executable not the numerical weights great now we have our setup it's",
    "start": "1651960",
    "end": "1659840"
  },
  {
    "text": "time to get to haing um so the first idea that comes to",
    "start": "1659840",
    "end": "1665200"
  },
  {
    "text": "mind is can we just try stuff until it works this is very intuitive and",
    "start": "1665200",
    "end": "1671559"
  },
  {
    "text": "straightforward after all so because we already know the range of the code",
    "start": "1671559",
    "end": "1677440"
  },
  {
    "text": "region in the victim model we can randomly choose a bit inside that region",
    "start": "1677440",
    "end": "1683679"
  },
  {
    "text": "and we flip it and we check how the model's doing after that um here we're",
    "start": "1683679",
    "end": "1690080"
  },
  {
    "text": "only flipping one bit at a time because if just one bit is enough to ruin the",
    "start": "1690080",
    "end": "1695799"
  },
  {
    "text": "model then we don't need more a simple and optimistic",
    "start": "1695799",
    "end": "1701360"
  },
  {
    "text": "plan and surprisingly it turned out Prett bad um the attack successful rate",
    "start": "1701360",
    "end": "1708480"
  },
  {
    "text": "was only around 2% this means that if we are to choose a bit randomly to flip in",
    "start": "1708480",
    "end": "1716080"
  },
  {
    "text": "their victim model we would only successfully downgrade a classification model to a random guesser around 2% of",
    "start": "1716080",
    "end": "1724600"
  },
  {
    "text": "the time what happened in the other 98% of",
    "start": "1724600",
    "end": "1729720"
  },
  {
    "text": "the time we put some statistics and found that most of them led to crashes",
    "start": "1729720",
    "end": "1736519"
  },
  {
    "text": "which we don't like because it just stops the program and other times it's",
    "start": "1736519",
    "end": "1742559"
  },
  {
    "text": "like nothing happens at all this can be the case if um for example a bit on some",
    "start": "1742559",
    "end": "1749000"
  },
  {
    "text": "unreached C- path is flipped or when the disruption is so small that it's too far",
    "start": "1749000",
    "end": "1755760"
  },
  {
    "text": "away from our goal of creating a random guesser",
    "start": "1755760",
    "end": "1761200"
  },
  {
    "text": "but those 2% of bits also tells us something because we now know that",
    "start": "1761200",
    "end": "1768360"
  },
  {
    "text": "random flips have a chance of 2% to succeed um but what if we locally",
    "start": "1768360",
    "end": "1775240"
  },
  {
    "text": "collect all those bits first and try only those bits on the victim",
    "start": "1775240",
    "end": "1781080"
  },
  {
    "text": "executable in an ideal world that should resting an 100% success",
    "start": "1781080",
    "end": "1787919"
  },
  {
    "text": "rate so to do that we compile and train the model on an arbitrary data set we",
    "start": "1787919",
    "end": "1794399"
  },
  {
    "text": "can't use the same training set as the victim because we don't have have that knowledge after that we scan through",
    "start": "1794399",
    "end": "1801840"
  },
  {
    "text": "every bit in the code region and record which bits are one of those 2% useful",
    "start": "1801840",
    "end": "1809640"
  },
  {
    "text": "bits once we have that data we can then try this bits one by one on the victim",
    "start": "1809640",
    "end": "1817519"
  },
  {
    "text": "executable and the result was kind of okay it kind of worked and our attack",
    "start": "1817519",
    "end": "1823760"
  },
  {
    "text": "success rate is now at around 45% this means that after our local",
    "start": "1823760",
    "end": "1829799"
  },
  {
    "text": "scanning step we're now 45% confident that when we attempt a flipped in the",
    "start": "1829799",
    "end": "1836360"
  },
  {
    "text": "victim executable it will cause a complete depletion of model intelligence",
    "start": "1836360",
    "end": "1843039"
  },
  {
    "text": "rather than other unwanted results um you may be wondering if we",
    "start": "1843039",
    "end": "1848799"
  },
  {
    "text": "already trying the useful bits only why isn't the",
    "start": "1848799",
    "end": "1853919"
  },
  {
    "text": "ASR 100% but that's because our model doesn't have the same weights as the",
    "start": "1853919",
    "end": "1861440"
  },
  {
    "text": "victim if we can construct The Identical model with identical weights then we can",
    "start": "1861440",
    "end": "1867639"
  },
  {
    "text": "come up with perfect attack plans just as um existing attacks do but this",
    "start": "1867639",
    "end": "1875399"
  },
  {
    "text": "result is actually telling us something more that the valuable bits may be",
    "start": "1875399",
    "end": "1882639"
  },
  {
    "text": "transferable more specifically our model has different weights from the victim",
    "start": "1882639",
    "end": "1887760"
  },
  {
    "text": "model model but the vulnerable bits in our model still have a 45% chance to",
    "start": "1887760",
    "end": "1895919"
  },
  {
    "text": "also work on their model and this is very interesting result maybe we can use it to um do even",
    "start": "1895919",
    "end": "1904960"
  },
  {
    "text": "better in finding bits to attack in the victim model so how do we make use of that",
    "start": "1904960",
    "end": "1912600"
  },
  {
    "text": "lesson um in the previous attempt we were using a surrogate model train on an",
    "start": "1912600",
    "end": "1918880"
  },
  {
    "text": "arbitrary data set and that is perhaps the best we can do because we have no",
    "start": "1918880",
    "end": "1924960"
  },
  {
    "text": "idea what the victim's training set is but think about this what if we train",
    "start": "1924960",
    "end": "1931679"
  },
  {
    "text": "our model on more data sets do the vulnerable bit scan for each",
    "start": "1931679",
    "end": "1938600"
  },
  {
    "text": "and get the intersection of the results in other words we want to find",
    "start": "1938600",
    "end": "1944600"
  },
  {
    "text": "vulnerable bits that could successfully attack all our locally generated executables train on different data sets",
    "start": "1944600",
    "end": "1952840"
  },
  {
    "text": "and hope that they will also transfer to the victim executable to sound cooler we call this",
    "start": "1952840",
    "end": "1960200"
  },
  {
    "text": "transferable bits super bits okay so that sounds plausible we've",
    "start": "1960200",
    "end": "1966320"
  },
  {
    "text": "just need to answer one more question before we can start trying what data sets do we use to train",
    "start": "1966320",
    "end": "1973399"
  },
  {
    "text": "our local models well our answer may sound somewhat unexpected",
    "start": "1973399",
    "end": "1978559"
  },
  {
    "text": "just use random noise initialized with different seeds as different data sets",
    "start": "1978559",
    "end": "1984200"
  },
  {
    "text": "and spoiler alert they work pretty well um in fact there's been some study and",
    "start": "1984200",
    "end": "1991039"
  },
  {
    "text": "research in the machine learning community on the effect of random data",
    "start": "1991039",
    "end": "1996320"
  },
  {
    "text": "sets and they found that in phases like pre-training um this random data sets",
    "start": "1996320",
    "end": "2003000"
  },
  {
    "text": "actually regulate the model weights to gradually resemble the weights in well trained models so in a sense they",
    "start": "2003000",
    "end": "2010600"
  },
  {
    "text": "contribute to the training process another advantage of using random data",
    "start": "2010600",
    "end": "2016039"
  },
  {
    "text": "sets is that we don't have to consider biases now for example if the victim",
    "start": "2016039",
    "end": "2022600"
  },
  {
    "text": "train their model on cat photos and but we're using x-ray images to train hours",
    "start": "2022600",
    "end": "2030320"
  },
  {
    "text": "the distribution of Weights may be far away from each other and using random",
    "start": "2030320",
    "end": "2036600"
  },
  {
    "text": "data sets is more of an unbiased choice in this",
    "start": "2036600",
    "end": "2041960"
  },
  {
    "text": "sense so we went ahead and generally take many executables on um different",
    "start": "2041960",
    "end": "2048878"
  },
  {
    "text": "random data sets which we conveniently name as fake data sets and here are the",
    "start": "2048879",
    "end": "2055118"
  },
  {
    "text": "results if we use 10 of those data sets to find these super bits we reach an ASR",
    "start": "2055119",
    "end": "2063760"
  },
  {
    "text": "or a tax success rate of around 70% we are now 70% confident that the flips",
    "start": "2063760",
    "end": "2071679"
  },
  {
    "text": "we try on the victim executable will do what we want this is much better than",
    "start": "2071679",
    "end": "2078440"
  },
  {
    "text": "what we began with like 2% or what we did in our pre previous attempt um",
    "start": "2078440",
    "end": "2086200"
  },
  {
    "text": "45% we are pretty satisfied with this result so um it now sounds like",
    "start": "2086200",
    "end": "2093118"
  },
  {
    "text": "something that we can really try in a real world experiment",
    "start": "2093119",
    "end": "2098880"
  },
  {
    "text": "so the next thing we did um was to see how our attack worked with um real world",
    "start": "2098880",
    "end": "2105920"
  },
  {
    "text": "cases to do this we build our attack on blacksmith a state-ofthe-art ro Hammer",
    "start": "2105920",
    "end": "2112040"
  },
  {
    "text": "tool kit on ddr4 memory we tried the super bits we found",
    "start": "2112040",
    "end": "2117800"
  },
  {
    "text": "on a wide range of victim execs and they worked really well in all cases um the",
    "start": "2117800",
    "end": "2125400"
  },
  {
    "text": "accuracy changes here show that all models are now random guesses so they",
    "start": "2125400",
    "end": "2131400"
  },
  {
    "text": "are equipped with the eyes to see the ability of ninjas out of panda photos",
    "start": "2131400",
    "end": "2137880"
  },
  {
    "text": "and there's exactly zero crashes in the process meaning that the um system",
    "start": "2137880",
    "end": "2144240"
  },
  {
    "text": "admins want see a crash report somewhere in their system",
    "start": "2144240",
    "end": "2149319"
  },
  {
    "text": "logs but the most important magic here is the number of flips which is on",
    "start": "2149319",
    "end": "2155440"
  },
  {
    "text": "average 1.4 flips to completely deplete the intelligence in all",
    "start": "2155440",
    "end": "2163440"
  },
  {
    "text": "models in case you are wondering what that means exactly take a look at this",
    "start": "2163480",
    "end": "2169040"
  },
  {
    "text": "table from dip Hammer a state-of-the-art attack targeting mod weights on average",
    "start": "2169040",
    "end": "2176079"
  },
  {
    "text": "they need 12 flips to achieve the same attack performance as ours and we only",
    "start": "2176079",
    "end": "2182880"
  },
  {
    "text": "need fewer than two not to mention that they also need to know the victim Waits but we don't",
    "start": "2182880",
    "end": "2189599"
  },
  {
    "text": "need that at all yeah so we're pretty Amazed by the results and out of curiosity we also did",
    "start": "2189599",
    "end": "2197800"
  },
  {
    "text": "some case studies to find out why this attack works but unfortunately we won't",
    "start": "2197800",
    "end": "2203960"
  },
  {
    "text": "have the time here to really talk about that but we can still look at one simple",
    "start": "2203960",
    "end": "2210560"
  },
  {
    "text": "case um so in this case you can see the operant of the compare instruction has",
    "start": "2210560",
    "end": "2216920"
  },
  {
    "text": "been changed and this is actually a check that determines whether the current threet is",
    "start": "2216920",
    "end": "2224440"
  },
  {
    "text": "needed for computation after the flip it's like every fret in the Fret tool now thinks",
    "start": "2224440",
    "end": "2231599"
  },
  {
    "text": "that it's not needed anymore for the current computation so all all",
    "start": "2231599",
    "end": "2237359"
  },
  {
    "text": "computations are skipped and the result is left uninitialized so through this case you",
    "start": "2237359",
    "end": "2245000"
  },
  {
    "text": "can see it's not really possible to defect B against this kind of attack",
    "start": "2245000",
    "end": "2250040"
  },
  {
    "text": "with um for example optimization methods and that's why new defense paradigms are",
    "start": "2250040",
    "end": "2257119"
  },
  {
    "text": "needed if you want you can learn more about our case studies and actually",
    "start": "2257119",
    "end": "2262680"
  },
  {
    "text": "everything else about the research add that link so before we end we have a few",
    "start": "2262680",
    "end": "2269839"
  },
  {
    "text": "takeaways for you with proposed um deep cache where we found deep learning",
    "start": "2269839",
    "end": "2275400"
  },
  {
    "text": "compiler optimizations is essentially gave away model architectures we also found DNN",
    "start": "2275400",
    "end": "2281960"
  },
  {
    "text": "executables to be six times easier to attack with bit flip",
    "start": "2281960",
    "end": "2287240"
  },
  {
    "text": "attacks therefore we would really like to see more security research on DNN",
    "start": "2287240",
    "end": "2293200"
  },
  {
    "text": "executables either on the offensive side or the defensive side as that would",
    "start": "2293200",
    "end": "2298839"
  },
  {
    "text": "surely make the whole ecosystem more robust thank",
    "start": "2298839",
    "end": "2304640"
  },
  {
    "text": "you okay so now I'm open to questions regarding to the first",
    "start": "2304640",
    "end": "2309920"
  },
  {
    "text": "part and",
    "start": "2309920",
    "end": "2315040"
  },
  {
    "text": "yeah hi Scott Constable Intel Labs I have if it's okay I have one question on",
    "start": "2318640",
    "end": "2323960"
  },
  {
    "text": "the first part and one question on on the second um so at least on on the first did you also consider cash attacks",
    "start": "2323960",
    "end": "2331680"
  },
  {
    "text": "or other kinds of side Channel attacks against dnns that are compiled by jits",
    "start": "2331680",
    "end": "2337760"
  },
  {
    "text": "and then for the second part I'd like to better understand the threat model because it seems like you need to have a",
    "start": "2337760",
    "end": "2343839"
  },
  {
    "text": "local attacker collocated with the model and I'm questioning how realistic that",
    "start": "2343839",
    "end": "2350160"
  },
  {
    "text": "is in practice okay so for the first",
    "start": "2350160",
    "end": "2355200"
  },
  {
    "text": "question uh I sorry kind to the first question I",
    "start": "2355200",
    "end": "2363040"
  },
  {
    "text": "uh did you also look at side Channel attacks against dnns that are deployed and compiled using jits rather than",
    "start": "2363040",
    "end": "2370880"
  },
  {
    "text": "deployed as a monolithic executable so uh we didn't try with jet but I think",
    "start": "2370880",
    "end": "2377480"
  },
  {
    "text": "the idea is General because if you use some optimizations regarding to uh",
    "start": "2377480",
    "end": "2384880"
  },
  {
    "text": "changing the loop structure in the binary code so this Tex should be work and as for",
    "start": "2384880",
    "end": "2390000"
  },
  {
    "text": "other uh Cat Side channels I think it's possible to use other side channels",
    "start": "2390000",
    "end": "2396040"
  },
  {
    "text": "because we so in this work we didn't create or uh design new C attch we use",
    "start": "2396040",
    "end": "2402920"
  },
  {
    "text": "existing s we use primary probe so and we notice that there are many other more",
    "start": "2402920",
    "end": "2409079"
  },
  {
    "text": "advanced such Channel like Prim and scope so such new s channs can also be",
    "start": "2409079",
    "end": "2414680"
  },
  {
    "text": "used to uh collect CES or to just try to",
    "start": "2414680",
    "end": "2420040"
  },
  {
    "text": "digest and extract some information from the C Tres so yeah I think it's possible",
    "start": "2420040",
    "end": "2425359"
  },
  {
    "text": "and uh and for second part so I",
    "start": "2425359",
    "end": "2430520"
  },
  {
    "text": "think answer would be similar because we didn't try to design or propose a new",
    "start": "2430520",
    "end": "2436480"
  },
  {
    "text": "rammer attack so we use the same assumptions of existing Ro Hammer attack",
    "start": "2436480",
    "end": "2441800"
  },
  {
    "text": "so we can use the same techniques used by their Works to light the victim and",
    "start": "2441800",
    "end": "2447000"
  },
  {
    "text": "the attacker to located in same um Hardware environment I think okay thank you thank you thank you",
    "start": "2447000",
    "end": "2456880"
  },
  {
    "text": "okay so we don't have enough time so if you have any other question you can free feel free to email us yes thank you",
    "start": "2457480",
    "end": "2466838"
  }
]