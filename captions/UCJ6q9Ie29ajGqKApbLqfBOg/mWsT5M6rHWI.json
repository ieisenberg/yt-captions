[
  {
    "text": "we have jason geffner here with end-to-end analysis of a domain generating algorithm malware family",
    "start": "160",
    "end": "7440"
  },
  {
    "text": "and let's give it up for jason guys",
    "start": "7440",
    "end": "10639"
  },
  {
    "text": "all right thank you everybody my name is jason geffner i'm a senior security researcher with crowdstrike",
    "start": "13200",
    "end": "19920"
  },
  {
    "text": "where my job is to reverse engineer malware and exploits have been developed by nation state adversaries and",
    "start": "19920",
    "end": "26560"
  },
  {
    "text": "organized crime groups i also do intelligence research to try to attribute this malware these exploits",
    "start": "26560",
    "end": "32960"
  },
  {
    "text": "tools and c2 protocols to unique actors before i joined crowdstrike i was a",
    "start": "32960",
    "end": "40000"
  },
  {
    "text": "principal security consultant with ngs and before that i was a reverse engineer",
    "start": "40000",
    "end": "45120"
  },
  {
    "text": "on microsoft's anti-malware team where i was the owner of the malicious software",
    "start": "45120",
    "end": "50160"
  },
  {
    "text": "removal tool and today i'm here to talk with you about a unique domain generating",
    "start": "50160",
    "end": "55520"
  },
  {
    "text": "algorithm malware family now most modern malware communicates with attackers",
    "start": "55520",
    "end": "62960"
  },
  {
    "text": "servers typical bots remote access tools and downloaders connect to hard coded server",
    "start": "62960",
    "end": "70560"
  },
  {
    "text": "addresses or a list of addresses and the reason is uh they have many reasons to do this they may communicate",
    "start": "70560",
    "end": "77840"
  },
  {
    "text": "with a c2 server to try to get the next instructions from the",
    "start": "77840",
    "end": "83119"
  },
  {
    "text": "attacker's server to execute or they may reach out to a download server to download more malware",
    "start": "83119",
    "end": "89920"
  },
  {
    "text": "to run on the infected computer but because these traditional malware samples use",
    "start": "89920",
    "end": "96640"
  },
  {
    "text": "these hard-coded server addresses they can be easily blacklisted by network engineers",
    "start": "96640",
    "end": "103360"
  },
  {
    "text": "domain generating algorithm malware though is different dj malware doesn't use hard coded server",
    "start": "103360",
    "end": "109920"
  },
  {
    "text": "addresses instead dga malware uses server addresses that are dynamically generated at runtime",
    "start": "109920",
    "end": "117680"
  },
  {
    "text": "allowing for potentially unlimited number of potential server addresses",
    "start": "117680",
    "end": "123200"
  },
  {
    "text": "so what might this look like let's look at an example let's say",
    "start": "123200",
    "end": "128479"
  },
  {
    "text": "that we have an example piece of malware where every minute the malware tries to connect",
    "start": "128479",
    "end": "134319"
  },
  {
    "text": "to a different server address and let's say the algorithm for this dga",
    "start": "134319",
    "end": "140160"
  },
  {
    "text": "is that every minute tries to connect to the server address with the numeric month numeric day year hour",
    "start": "140160",
    "end": "146640"
  },
  {
    "text": "minute dot com so in about 10 minutes this example malware",
    "start": "146640",
    "end": "151840"
  },
  {
    "text": "would try to connect to zero seven three one one three three",
    "start": "151840",
    "end": "157840"
  },
  {
    "text": "now what the attacker would do is they would choose a strike time",
    "start": "157920",
    "end": "164560"
  },
  {
    "text": "and then register that given domain usually 24 to 48 hours",
    "start": "164560",
    "end": "170000"
  },
  {
    "text": "before that strike time hits strike time hits the mall reaches out connects to the attacker's domain",
    "start": "170000",
    "end": "177200"
  },
  {
    "text": "does whatever he needs to do and then maybe an hour to after that strike time",
    "start": "177200",
    "end": "183120"
  },
  {
    "text": "the attacker will then take down their domain or redirect it and take down the server",
    "start": "183120",
    "end": "189120"
  },
  {
    "text": "now this approach makes it impossible for security researchers to predict the",
    "start": "189120",
    "end": "195040"
  },
  {
    "text": "next server communication and it raises the bar for sinkholing efforts",
    "start": "195040",
    "end": "201840"
  },
  {
    "text": "it also makes historical analysis uh extremely difficult and if you think",
    "start": "201840",
    "end": "207120"
  },
  {
    "text": "about traditional malware it might communicate with one or two hard-coded",
    "start": "207120",
    "end": "212400"
  },
  {
    "text": "server addresses and if we're going to do historic who is research on those addresses it's not too hard to say who",
    "start": "212400",
    "end": "219920"
  },
  {
    "text": "are all the registrants for this domain in the who is history over the past year",
    "start": "219920",
    "end": "225519"
  },
  {
    "text": "but there are 525 600 minutes in a year and with this example that would mean",
    "start": "225519",
    "end": "232000"
  },
  {
    "text": "that we'd have to look at half a million who is records historically which is",
    "start": "232000",
    "end": "237680"
  },
  {
    "text": "really not practical so dj malware can definitely be challenging for a security",
    "start": "237680",
    "end": "242799"
  },
  {
    "text": "researcher to handle now dj malware though it's not exactly a new thing",
    "start": "242799",
    "end": "248799"
  },
  {
    "text": "back in early 2008 kraken was one of the first malware families to use at dga and",
    "start": "248799",
    "end": "254560"
  },
  {
    "text": "a few months later conficker was first discovered also using a dga but",
    "start": "254560",
    "end": "260000"
  },
  {
    "text": "djs haven't been restricted just to crack or kraken and configure torpig and ceresb are two other malware",
    "start": "260000",
    "end": "267680"
  },
  {
    "text": "families that have also been known to use dgas now in 2010 academia started to do some",
    "start": "267680",
    "end": "273199"
  },
  {
    "text": "research on this they published a white paper and last year zambala released a white paper on six malware families that",
    "start": "273199",
    "end": "281040"
  },
  {
    "text": "use dgas but today i'm here to talk with you about a new malware family a unique one",
    "start": "281040",
    "end": "287520"
  },
  {
    "text": "the end to end analysis that we did on it so a few months ago in february",
    "start": "287520",
    "end": "294479"
  },
  {
    "text": "we had the ciso of a major american financial services company",
    "start": "294479",
    "end": "299759"
  },
  {
    "text": "email us and say uh hey crowdstrike uh we just received a suspicious looking",
    "start": "299759",
    "end": "307199"
  },
  {
    "text": "exe attachment to an email coming into our networks",
    "start": "307199",
    "end": "312479"
  },
  {
    "text": "and this firm's ciso actually worked with his global cyber",
    "start": "312479",
    "end": "318000"
  },
  {
    "text": "intelligence partner competitor of ours and they actually couldn't figure out what it was doing because it was",
    "start": "318000",
    "end": "323199"
  },
  {
    "text": "obfuscated and actually to quote the ciso he said it is the obfuscation that is throwing",
    "start": "323199",
    "end": "328960"
  },
  {
    "text": "our competitor's name off and because this other company was not",
    "start": "328960",
    "end": "334080"
  },
  {
    "text": "able to remove the application uh this ciso forwarded the malware to us",
    "start": "334080",
    "end": "340639"
  },
  {
    "text": "so uh as any good researcher i love a challenge and i heard that some other",
    "start": "340639",
    "end": "346000"
  },
  {
    "text": "person out there just a set of people couldn't figure out what this malware was doing i jumped on it right away now",
    "start": "346000",
    "end": "352560"
  },
  {
    "text": "it's understandable why this other company had trouble analyzing it it is obfuscated",
    "start": "352560",
    "end": "357759"
  },
  {
    "text": "but unlike most malware that is obfuscated by using a packer this malware is",
    "start": "357759",
    "end": "363759"
  },
  {
    "text": "different so most malware again uses a packer for obfuscation and",
    "start": "363759",
    "end": "370080"
  },
  {
    "text": "a packer compresses and encrypts the original code and data and depends on a packing stub to the",
    "start": "370080",
    "end": "376880"
  },
  {
    "text": "now packed malware and at runtime the unpacking step decrypts and decompresses the packed code and data then executes",
    "start": "376880",
    "end": "383840"
  },
  {
    "text": "the unpacked code that's the typical way it works but it's not the case for this sample",
    "start": "383840",
    "end": "390800"
  },
  {
    "text": "this malware sample instead used inline code obfuscation",
    "start": "390800",
    "end": "396160"
  },
  {
    "text": "that meant that there was no unpacking stub obfuscated code or junk code was mixed",
    "start": "396160",
    "end": "403360"
  },
  {
    "text": "in directly with the legitimate code now let's take a look and see what that looks like",
    "start": "403360",
    "end": "409360"
  },
  {
    "text": "here is a snippet of the disassembly of a single function from the malware",
    "start": "409360",
    "end": "417199"
  },
  {
    "text": "now you can see in this assembly several random looking 32-bit values",
    "start": "417680",
    "end": "423759"
  },
  {
    "text": "getting assigned to various stack variables and you can see",
    "start": "423759",
    "end": "428800"
  },
  {
    "text": "mathematical operations being applied to these values",
    "start": "428800",
    "end": "434080"
  },
  {
    "text": "but the truth is a lot of this code that we're looking at in this snippet is junk code it actually isn't semantically",
    "start": "434080",
    "end": "440960"
  },
  {
    "text": "relevant to the functionality of the malware but there is some code in here that is legitimate",
    "start": "440960",
    "end": "446800"
  },
  {
    "text": "well if we took time to analyze it we would find that um var 10 and var18 are used for junk",
    "start": "446800",
    "end": "454880"
  },
  {
    "text": "code and var4 and varsi the stack variables are used for legitimate code",
    "start": "454880",
    "end": "462160"
  },
  {
    "text": "uh so i know what you're thinking though you're thinking jason come on it's 2013. nobody reads",
    "start": "462240",
    "end": "469680"
  },
  {
    "text": "x86 assembly could anymore that's why we have hex-rays we de-decompile everything",
    "start": "469680",
    "end": "475759"
  },
  {
    "text": "surely the x-rays decompilation will be a lot easier to read",
    "start": "475759",
    "end": "480960"
  },
  {
    "text": "well maybe yes and maybe no so this is the x-rays decompilation of",
    "start": "480960",
    "end": "487199"
  },
  {
    "text": "the entire function that that snippet was from and you can see",
    "start": "487199",
    "end": "492560"
  },
  {
    "text": "just at first glance it's still not immediately obvious what's going on in this function and this is a relatively",
    "start": "492560",
    "end": "498319"
  },
  {
    "text": "short function but we can try to remove this junk code",
    "start": "498319",
    "end": "504840"
  },
  {
    "text": "manually well we can start by making some assumptions we can assume that the input arguments",
    "start": "504840",
    "end": "511520"
  },
  {
    "text": "a1 a2 and a3 are all legitimate variables",
    "start": "511520",
    "end": "516800"
  },
  {
    "text": "and we see that for example the first line of code is saying that static variable",
    "start": "516800",
    "end": "523120"
  },
  {
    "text": "v10 is getting set to the value in function argument a1 well if we're going",
    "start": "523120",
    "end": "528640"
  },
  {
    "text": "to assume that a1 e2 and a3 the input arguments are all legitimate variables then we can also make the assumption",
    "start": "528640",
    "end": "536160"
  },
  {
    "text": "that all local stack variables that are tainted by",
    "start": "536160",
    "end": "541200"
  },
  {
    "text": "legitimate variables or values are also legitimate so that means that",
    "start": "541200",
    "end": "546560"
  },
  {
    "text": "see v10 is getting set to what a1 was v8 is getting set to what a3 is and we can",
    "start": "546560",
    "end": "552080"
  },
  {
    "text": "tag each of these variables as legitimate now if we do this",
    "start": "552080",
    "end": "558480"
  },
  {
    "text": "you can see that a1 a2 and a3 are okay as is v10 as v8 etc",
    "start": "558480",
    "end": "564240"
  },
  {
    "text": "and after we've tagged all of the values that have been tainted by other legitimate variables and keep",
    "start": "564240",
    "end": "570080"
  },
  {
    "text": "reiterating this process until we find no new legitimate variables we do end up with this and if we remove all the lines",
    "start": "570080",
    "end": "577519"
  },
  {
    "text": "of decompilation that don't contain legitimate instructions",
    "start": "577519",
    "end": "584320"
  },
  {
    "text": "we end up with this now this is actually much more readable than what we had originally",
    "start": "584320",
    "end": "592000"
  },
  {
    "text": "but there are over a thousand functions in this malware sample it'll be very",
    "start": "592000",
    "end": "599360"
  },
  {
    "text": "time consuming to do this manually for every function so as with any",
    "start": "599360",
    "end": "605519"
  },
  {
    "text": "good computer science person would do i automated it i wrote a x-rays plug-in",
    "start": "605519",
    "end": "611360"
  },
  {
    "text": "to do this for me well what does this hex raise plug-in do well it pretty much follows the steps",
    "start": "611360",
    "end": "617600"
  },
  {
    "text": "that we followed manually uh it starts off by finding all basic legitimate variables",
    "start": "617600",
    "end": "624240"
  },
  {
    "text": "uh and those legitimate variables are function arguments to the current function uh global variables are concerned to be",
    "start": "624240",
    "end": "630800"
  },
  {
    "text": "legitimate arguments to function calls from the function are considered legitimate as",
    "start": "630800",
    "end": "636880"
  },
  {
    "text": "are return values from any function calls made from inside the function and optionally the plugin allows you to say",
    "start": "636880",
    "end": "644240"
  },
  {
    "text": "that local function variables used in return statements are also legitimate and what the",
    "start": "644240",
    "end": "650560"
  },
  {
    "text": "plugin does after it determines all these legitimate variables",
    "start": "650560",
    "end": "655600"
  },
  {
    "text": "and all the other stack variables are tainted by these legitimate variables it goes through and prunes the",
    "start": "655600",
    "end": "661320"
  },
  {
    "text": "decompolation graph to remove the junk code",
    "start": "661320",
    "end": "667279"
  },
  {
    "text": "so i just mentioned the decompilation graph let's take a look and see what the decompilation graph looks like for the",
    "start": "667279",
    "end": "672959"
  },
  {
    "text": "original decompilation so 117 nodes",
    "start": "672959",
    "end": "678880"
  },
  {
    "text": "uh that's actually a lot of nodes a decompilation graph for a relatively simple function for what's worth the",
    "start": "678880",
    "end": "685600"
  },
  {
    "text": "function that we're analyzing here just initializes a one-time pad",
    "start": "685600",
    "end": "690880"
  },
  {
    "text": "after running the plug-in for x-rays to decompile this uh to rather de-obfuscate",
    "start": "690880",
    "end": "697440"
  },
  {
    "text": "this this decompilation graph we end up with 71 nodes that's a 39 reduction for",
    "start": "697440",
    "end": "704560"
  },
  {
    "text": "this sample function so let's take a look",
    "start": "704560",
    "end": "709760"
  },
  {
    "text": "at this in action",
    "start": "709760",
    "end": "713320"
  },
  {
    "text": "okay so here i have my original function",
    "start": "719440",
    "end": "726720"
  },
  {
    "text": "and in this instance of ida the x-rays plug-in is not installed and",
    "start": "727200",
    "end": "734320"
  },
  {
    "text": "by the way the name of the x-rays plug-in that we're releasing is called crowd detox so in this instance of ida",
    "start": "734320",
    "end": "739920"
  },
  {
    "text": "crowd detox is not installed and if you press f5 to decompile it we see again",
    "start": "739920",
    "end": "745360"
  },
  {
    "text": "that original obfuscated decompilation however if you look at the second instance of",
    "start": "745360",
    "end": "751680"
  },
  {
    "text": "ida the crowd detox plug-in is installed here if",
    "start": "751680",
    "end": "756720"
  },
  {
    "text": "we decompile it here you can see that all the junk is removed automatically we",
    "start": "756720",
    "end": "762399"
  },
  {
    "text": "have to do anything and the good news is that this plug-in that we're releasing not only works for",
    "start": "762399",
    "end": "768560"
  },
  {
    "text": "this function and of course every other function in this binary but it works for any binary out there it's not specific",
    "start": "768560",
    "end": "774959"
  },
  {
    "text": "to this family the approach we use and the assumptions we make for removing junk code can",
    "start": "774959",
    "end": "780160"
  },
  {
    "text": "really be applied to any software out there that uses inlines",
    "start": "780160",
    "end": "785600"
  },
  {
    "text": "junk instructions now the good news",
    "start": "785600",
    "end": "791440"
  },
  {
    "text": "is that",
    "start": "791440",
    "end": "793920"
  },
  {
    "text": "crowd detox this x-rays plug-in is both free and open source and it's available right now you can go",
    "start": "798800",
    "end": "805839"
  },
  {
    "text": "to crowdstrike.com community tools to download it both the binary and the source code and uh have",
    "start": "805839",
    "end": "812000"
  },
  {
    "text": "fun with it i hope it helps okay so that was the code obfuscation",
    "start": "812000",
    "end": "818399"
  },
  {
    "text": "but code obfuscation wasn't the only aspect of this malware it also used data",
    "start": "818399",
    "end": "824560"
  },
  {
    "text": "obfuscation in fact this malware contained no human",
    "start": "824560",
    "end": "831440"
  },
  {
    "text": "readable registry keys file names server addresses or uri paths and the reason",
    "start": "831440",
    "end": "837519"
  },
  {
    "text": "is that all of the strings are used for this functionality are decrypted at runtime",
    "start": "837519",
    "end": "843760"
  },
  {
    "text": "and if we look at the code this is actually the decompiled or rather the diaphysia decompiled code",
    "start": "843760",
    "end": "850560"
  },
  {
    "text": "we can see some snippets here we see an api call to your edge open key a that would normally",
    "start": "850560",
    "end": "856639"
  },
  {
    "text": "take as input the second argument an ascii string and lp sub key we see is assigned on the",
    "start": "856639",
    "end": "864079"
  },
  {
    "text": "line above it's the return value of sub 4 0 7 f 9",
    "start": "864079",
    "end": "869760"
  },
  {
    "text": "and as input that function takes data from four three nine one d eight now if we look at four three one ninety eight",
    "start": "869760",
    "end": "875440"
  },
  {
    "text": "on the right side of the screen we see a list of uh",
    "start": "875440",
    "end": "881360"
  },
  {
    "text": "seemingly random bytes but if we look at 407 f90 we can see that this is a function that",
    "start": "881360",
    "end": "888560"
  },
  {
    "text": "actually performs string decryption it copies the input string",
    "start": "888560",
    "end": "893760"
  },
  {
    "text": "or the input byte array to the heap and then it does an xor on the string",
    "start": "893760",
    "end": "900720"
  },
  {
    "text": "using a previously prepared one-time xor pad",
    "start": "900720",
    "end": "905920"
  },
  {
    "text": "now those of you familiar with incident response know that when dealing with incidents",
    "start": "905920",
    "end": "912480"
  },
  {
    "text": "time is of the essence so within the first hour",
    "start": "912480",
    "end": "919760"
  },
  {
    "text": "we managed to find that decryption function for the strings identify the list of all the encrypted",
    "start": "919760",
    "end": "925360"
  },
  {
    "text": "strings patched the binary such that instead of decrypting the strings on the heap the",
    "start": "925360",
    "end": "932160"
  },
  {
    "text": "strings were encrypted decrypted rather in place and patched the binary with some",
    "start": "932160",
    "end": "938399"
  },
  {
    "text": "handwritten assembly to call this string decryption function on every encrypted string in the sample",
    "start": "938399",
    "end": "944639"
  },
  {
    "text": "and once we did all that we were able to create snort rules and",
    "start": "944639",
    "end": "949759"
  },
  {
    "text": "uh notify the customer of potential indications of compromise as soon as we could",
    "start": "949759",
    "end": "955360"
  },
  {
    "text": "but obviously this is a little time consuming and given that this malware sample is",
    "start": "955360",
    "end": "961519"
  },
  {
    "text": "just one variant of a larger family and we want to analyze other variants we",
    "start": "961519",
    "end": "966720"
  },
  {
    "text": "can't really rely on this type of manual process for every sample ideally",
    "start": "966720",
    "end": "972000"
  },
  {
    "text": "what we want to do is to be able to statically de-obfuscate all of the data",
    "start": "972000",
    "end": "977920"
  },
  {
    "text": "and then automate that for processing so that's what we investigated actually uh",
    "start": "977920",
    "end": "983519"
  },
  {
    "text": "it turns out that the string decryption uh is done via an xor",
    "start": "983519",
    "end": "989600"
  },
  {
    "text": "and the length of the one-time pad is encrypted it's actually decrypted at runtime",
    "start": "989600",
    "end": "996240"
  },
  {
    "text": "via xor with a hard-coded cryptographic seed and then one time one time pad's content is generated via",
    "start": "996240",
    "end": "1003600"
  },
  {
    "text": "bit shifts and rotations additions and multiplications and here it is if you're looking to",
    "start": "1003600",
    "end": "1010160"
  },
  {
    "text": "write your own dga for nefarious purposes first of all please don't but this is how this malware did it",
    "start": "1010160",
    "end": "1016959"
  },
  {
    "text": "uh as for decrypting the strings you can see it is just a an xor a basic x-ray decryption",
    "start": "1016959",
    "end": "1024480"
  },
  {
    "text": "in this uh sample code here this high-level code beginning of strings is the beginning of the first string in the",
    "start": "1024480",
    "end": "1029678"
  },
  {
    "text": "set of encrypted strings and length of one time pad happens to also be the length of all the encrypted strings",
    "start": "1029679",
    "end": "1036000"
  },
  {
    "text": "combined so that's it for the code obfuscation and the data obfuscation",
    "start": "1036000",
    "end": "1043520"
  },
  {
    "text": "now initially we collected over 100 variants from this malware family",
    "start": "1043520",
    "end": "1050080"
  },
  {
    "text": "after doing our initial analysis and we found that most of the variants",
    "start": "1050080",
    "end": "1055840"
  },
  {
    "text": "used randomized strings in its decrypted data for file names directory names and registry names",
    "start": "1055840",
    "end": "1062559"
  },
  {
    "text": "however there were a few variants that we spotted that didn't use randomized strings",
    "start": "1062559",
    "end": "1069120"
  },
  {
    "text": "instead they used what we're calling template placeholders or template data",
    "start": "1069120",
    "end": "1075520"
  },
  {
    "text": "so as it turns out 132 of the 148 variants that we",
    "start": "1075520",
    "end": "1082080"
  },
  {
    "text": "collected used randomized data but 16 used these template variants",
    "start": "1082080",
    "end": "1090960"
  },
  {
    "text": "and my guess is that the malware author had originally written the malware to use",
    "start": "1090960",
    "end": "1096240"
  },
  {
    "text": "the template variants and then wrote uh the next version to use the other randomized variables so randomize the",
    "start": "1096240",
    "end": "1102799"
  },
  {
    "text": "values so these 16 that we found maybe weren't supposed to be led to the wilds",
    "start": "1102799",
    "end": "1109600"
  },
  {
    "text": "so we did research on the the p time stamps they do appear to be legitimate based on when those samples were first",
    "start": "1109600",
    "end": "1116160"
  },
  {
    "text": "found on sites like virustotal and based on the p timestamps for all these samples the malware",
    "start": "1116160",
    "end": "1122960"
  },
  {
    "text": "appears to have first been built and distributed in february of 2013.",
    "start": "1122960",
    "end": "1128960"
  },
  {
    "text": "so here's a bucketed graph of the samples that we initially collected",
    "start": "1128960",
    "end": "1135440"
  },
  {
    "text": "you can see that they appear to first be built on february 2nd and then there's a",
    "start": "1135440",
    "end": "1141360"
  },
  {
    "text": "three-day low and then again there are some more that are built on february 5th but all around",
    "start": "1141360",
    "end": "1147039"
  },
  {
    "text": "the same hour of day so",
    "start": "1147039",
    "end": "1152400"
  },
  {
    "text": "i mentioned earlier that one of the things that we do at crowdstrike is try to do intelligence research to find out",
    "start": "1152400",
    "end": "1158640"
  },
  {
    "text": "who wrote the malware that we look at so let's uh let's investigate that a bit",
    "start": "1158640",
    "end": "1164320"
  },
  {
    "text": "there are some clues in these decrypted strings in these template strings for the",
    "start": "1164320",
    "end": "1169520"
  },
  {
    "text": "non-randomized variants it turns out that all variants using that template",
    "start": "1169520",
    "end": "1176320"
  },
  {
    "text": "have the same exact seed value it's not randomized they always a seed value 445a",
    "start": "1176320",
    "end": "1182679"
  },
  {
    "text": "4950 and if we try to parse that as ascii we get the word teased",
    "start": "1182679",
    "end": "1188960"
  },
  {
    "text": "now peased is a relatively common word in eastern europe and actually in many languages it translates to the word",
    "start": "1188960",
    "end": "1196080"
  },
  {
    "text": " but we're not stuck at that we're not stuck at saying well maybe maybe the",
    "start": "1196080",
    "end": "1201679"
  },
  {
    "text": "author is croatian maybe he he or she spoke polish there's actually there are more clues that we have",
    "start": "1201679",
    "end": "1207840"
  },
  {
    "text": "so it turns out that the template string for the malware's",
    "start": "1207840",
    "end": "1212880"
  },
  {
    "text": "file name copy is pula or eun gutz",
    "start": "1212880",
    "end": "1218559"
  },
  {
    "text": "or scqws that and that loosely translates from romanian",
    "start": "1218559",
    "end": "1224799"
  },
  {
    "text": "not the other languages but romanian only literally translates to english as suck a dick in your throats",
    "start": "1224799",
    "end": "1232720"
  },
  {
    "text": "but it's really not how romanians would say that phrase a romanian is much more",
    "start": "1232799",
    "end": "1238240"
  },
  {
    "text": "likely to say sujei pulau un guts instead pula o sug eun gut is more",
    "start": "1238240",
    "end": "1245600"
  },
  {
    "text": "likely the wording that a romani would use and if you're not familiar with the term",
    "start": "1245600",
    "end": "1251039"
  },
  {
    "text": "romani romani people are also known as gypsies",
    "start": "1251039",
    "end": "1256960"
  },
  {
    "text": "furthermore a romanian is much more likely to say the word pisda than piste whereas a",
    "start": "1256960",
    "end": "1262320"
  },
  {
    "text": "romani would say pieced so all signs so far would suggest that the",
    "start": "1262320",
    "end": "1269760"
  },
  {
    "text": "maori author may very well have spoken romani now again i'm not saying he was definitely a romani sure some nation",
    "start": "1269760",
    "end": "1276640"
  },
  {
    "text": "state adversary could have put this together to try to mislead us to make it look like it was a ramadi author but so",
    "start": "1276640",
    "end": "1282799"
  },
  {
    "text": "far things would suggest that the author is ramani but that's that's not actually all there",
    "start": "1282799",
    "end": "1288960"
  },
  {
    "text": "is there's actually another set of strings that strongly suggest a reminding author so the template strings",
    "start": "1288960",
    "end": "1295120"
  },
  {
    "text": "for the directory name and registry value names are nikolai guzza xz scqws and costi",
    "start": "1295120",
    "end": "1303840"
  },
  {
    "text": "qws and the template string used in entry point obfuscation is adrian kopielul minune",
    "start": "1303840",
    "end": "1311919"
  },
  {
    "text": "c florine salam and all four of these guys are manila",
    "start": "1311919",
    "end": "1317760"
  },
  {
    "text": "singers very prominent romani manila singers again further suggesting that",
    "start": "1317760",
    "end": "1324880"
  },
  {
    "text": "the malware appears to have been written by someone who is ramani and or likes",
    "start": "1324880",
    "end": "1330240"
  },
  {
    "text": "romani culture a lot oh and by the way romania is in time zone utc plus two so",
    "start": "1330240",
    "end": "1337679"
  },
  {
    "text": "we're looking at those p time stamps earlier those times would suggest that the local",
    "start": "1337679",
    "end": "1343360"
  },
  {
    "text": "p build times were from 8 p.m to midnight in romania",
    "start": "1343360",
    "end": "1348559"
  },
  {
    "text": "which isn't an unreasonable time for a malware author to be busy at work",
    "start": "1348559",
    "end": "1355120"
  },
  {
    "text": "all right this talk obviously though is based on or really focused on domain generating algorithms so let's dive into that",
    "start": "1355120",
    "end": "1364080"
  },
  {
    "text": "now all variants of this malware contain the same exact list of 384 words",
    "start": "1364159",
    "end": "1372159"
  },
  {
    "text": "and to create the domain names that the dga uses it uses an algorithm to pseudorandomly",
    "start": "1372159",
    "end": "1379440"
  },
  {
    "text": "select two words from this list concatenate them together and add net to",
    "start": "1379440",
    "end": "1385120"
  },
  {
    "text": "the end and here is the list of 384 words",
    "start": "1385120",
    "end": "1392158"
  },
  {
    "text": "now as i just said it combines two of these words together to make a domain name",
    "start": "1393840",
    "end": "1399760"
  },
  {
    "text": "and 384 squared anyone no no okay no one got it 147 456 possible",
    "start": "1399760",
    "end": "1408240"
  },
  {
    "text": "domain names that would be a lot to monitor the good news is that the pseudorandom",
    "start": "1408240",
    "end": "1414720"
  },
  {
    "text": "algorithm uses only 15 bits of the seed value so there are actually 32 000 possible",
    "start": "1414720",
    "end": "1420559"
  },
  {
    "text": "domain names and the seed value is calculated using the number of seconds that have elapsed",
    "start": "1420559",
    "end": "1425919"
  },
  {
    "text": "since the beginning of 1970 and divides that by 512 leading to a granularity of",
    "start": "1425919",
    "end": "1431520"
  },
  {
    "text": "eight and a half minutes and then our try is 85 different domains per seed value creating a sliding window of dga",
    "start": "1431520",
    "end": "1438559"
  },
  {
    "text": "domains and that means that each domain is in this window for seven and a half hours before the window advances past",
    "start": "1438559",
    "end": "1445679"
  },
  {
    "text": "that domain so here is the high level code for",
    "start": "1445679",
    "end": "1450880"
  },
  {
    "text": "uh the function that actually generates the host name this is a c-sharp based",
    "start": "1450880",
    "end": "1456240"
  },
  {
    "text": "re-interpretation of the dga algorithm a hex hostname a helper table and a host",
    "start": "1456240",
    "end": "1462240"
  },
  {
    "text": "strings are all hard coded data arrays in the malware they're encrypted in the same manner that the strings are",
    "start": "1462240",
    "end": "1467840"
  },
  {
    "text": "encrypted and these arrays are hard are actually the same in every single",
    "start": "1467840",
    "end": "1473039"
  },
  {
    "text": "variant so every variant out there generates the same domains at the same time no matter what computer they're",
    "start": "1473039",
    "end": "1478880"
  },
  {
    "text": "running on or what variant of the malware they're running now once the malware generates the",
    "start": "1478880",
    "end": "1484240"
  },
  {
    "text": "domain name it wants to use it connects to or tries to connect to",
    "start": "1484240",
    "end": "1489679"
  },
  {
    "text": "those domains and tries to send this get request",
    "start": "1489679",
    "end": "1495200"
  },
  {
    "text": "and each malware variant uses contains a hard-coded email address",
    "start": "1495600",
    "end": "1502080"
  },
  {
    "text": "now we're going to talk about those email addresses more soon now",
    "start": "1502080",
    "end": "1507360"
  },
  {
    "text": "the malware takes the response from the server and checks to see if it contains a certain fingerprints and if it does the",
    "start": "1507360",
    "end": "1515039"
  },
  {
    "text": "malware makes a second request to the server same exact request nothing changed and the second response again if",
    "start": "1515039",
    "end": "1522480"
  },
  {
    "text": "contains the correct fingerprint causes the malware to download that response",
    "start": "1522480",
    "end": "1528640"
  },
  {
    "text": "save it as an executable and execute it now we were interested to see what the",
    "start": "1528640",
    "end": "1535360"
  },
  {
    "text": "spread of this malware looked like and where the infections might have been",
    "start": "1535360",
    "end": "1540640"
  },
  {
    "text": "concentrated so we did some sinkholing we set up five domains to which the dj",
    "start": "1540640",
    "end": "1547840"
  },
  {
    "text": "would resolve uh from march 5th through march 9th and we received about 15 000 hits from",
    "start": "1547840",
    "end": "1555039"
  },
  {
    "text": "computers all around the world and when i say hits i don't mean just you know random computers pinging our",
    "start": "1555039",
    "end": "1561760"
  },
  {
    "text": "server just trying to do basic get requests these hits these 15 000 hits were all",
    "start": "1561760",
    "end": "1568640"
  },
  {
    "text": "hits with uh using the get request with the the format i just showed you in the previous slide",
    "start": "1568640",
    "end": "1574240"
  },
  {
    "text": "so these are actually infected systems that were hitting our sinkholes and we logged almost 1200 unique client",
    "start": "1574240",
    "end": "1582080"
  },
  {
    "text": "ip addresses and exactly believe it or not 1 000",
    "start": "1582080",
    "end": "1587840"
  },
  {
    "text": "unique email addresses that were posted to the sinkhole servers meaning that there are at least 1 000 variants",
    "start": "1587840",
    "end": "1593919"
  },
  {
    "text": "of the malware out there since each malware sample each memo variant has its own unique hard-coded email",
    "start": "1593919",
    "end": "1599279"
  },
  {
    "text": "address in it and of these thousand unique email addresses 286",
    "start": "1599279",
    "end": "1605200"
  },
  {
    "text": "there are 286 unique email address domains",
    "start": "1605200",
    "end": "1610480"
  },
  {
    "text": "to show you a graph of the single activity here it is you can see it really focusing on the five days that we were running",
    "start": "1610480",
    "end": "1616400"
  },
  {
    "text": "the sinkhole servers or that we were rather uh prepared for uh the registrations for the strike",
    "start": "1616400",
    "end": "1623120"
  },
  {
    "text": "times and you can see there were probably some infected computers out there with system",
    "start": "1623120",
    "end": "1628880"
  },
  {
    "text": "clocks that were a little off and we got a little trinkle of a few hits after that five-day period",
    "start": "1628880",
    "end": "1635840"
  },
  {
    "text": "now i mentioned the email addresses that uh that we're receiving on uh they were posted to our our sinkhole server",
    "start": "1635840",
    "end": "1644159"
  },
  {
    "text": "uh this is uh this is what some of them look like this is obviously a very small collection of them but we see 100",
    "start": "1644159",
    "end": "1650799"
  },
  {
    "text": "flowers at 100 reminders.com consultant fiscal unsubscribe yahoogroups.com fb",
    "start": "1650799",
    "end": "1656399"
  },
  {
    "text": "message plus something at facebookmail.com well it looks",
    "start": "1656399",
    "end": "1662960"
  },
  {
    "text": "like there's another malware component out there that harvests infected systems inboxes",
    "start": "1662960",
    "end": "1668880"
  },
  {
    "text": "email inboxes to create these malware variants and then send it out",
    "start": "1668880",
    "end": "1674480"
  },
  {
    "text": "some other interesting statistics for the email addresses that we saw that are posted to our sinkhole servers",
    "start": "1674480",
    "end": "1680720"
  },
  {
    "text": "there is a disproportionately high number of yahoo.com email addresses",
    "start": "1680720",
    "end": "1686720"
  },
  {
    "text": "keep that in mind we're going to come back to that soon and there's also a disproportionately low number of",
    "start": "1686720",
    "end": "1692159"
  },
  {
    "text": "gmail.com addresses zero in fact so it's possible that this",
    "start": "1692159",
    "end": "1698000"
  },
  {
    "text": "second malware component that we had not yet seen actually ignores gmail.com addresses",
    "start": "1698000",
    "end": "1703919"
  },
  {
    "text": "maybe because they don't want the gmail team at google spotting and identifying this",
    "start": "1703919",
    "end": "1710480"
  },
  {
    "text": "malware campaign but of course that's just a guess so i mentioned that we're interested in",
    "start": "1710480",
    "end": "1716640"
  },
  {
    "text": "the spread of this malware where it might have been might be concentrated if we plot out all the ip addresses from",
    "start": "1716640",
    "end": "1723679"
  },
  {
    "text": "around the world where we were getting hits this is what the top 10 countries",
    "start": "1723679",
    "end": "1731120"
  },
  {
    "text": "were sending us so the united states was definitely the top of the list but second is romania and",
    "start": "1731840",
    "end": "1739679"
  },
  {
    "text": "romania does definitely not have the second highest population of people or computers",
    "start": "1739679",
    "end": "1745360"
  },
  {
    "text": "in the world so this would further suggest that the maori author might be living in",
    "start": "1745360",
    "end": "1752720"
  },
  {
    "text": "romania or maybe the initial targets were romanian targets but certainly is an interesting piece of",
    "start": "1752720",
    "end": "1759679"
  },
  {
    "text": "data but sinkholding isn't all that we did when it came to investigating the uh the",
    "start": "1759679",
    "end": "1767120"
  },
  {
    "text": "domain generated the domains that were generated we also did monitoring of these domains",
    "start": "1767120",
    "end": "1774799"
  },
  {
    "text": "and developed automation to connect to each dj domain",
    "start": "1774799",
    "end": "1780399"
  },
  {
    "text": "in real time as the malware would connect to it and try to download from it and actually we did this automation",
    "start": "1780399",
    "end": "1787840"
  },
  {
    "text": "connecting to these domains through tor and give myself a little plug if you want to learn more about ways to",
    "start": "1787840",
    "end": "1793600"
  },
  {
    "text": "automate things and route them through tour come to my talk at 3 30 in augustus 5 and 6.",
    "start": "1793600",
    "end": "1799039"
  },
  {
    "text": "okay so we ran this automation for two weeks and we detected 20 domains",
    "start": "1799039",
    "end": "1804880"
  },
  {
    "text": "that were connected to this campaign 19 of these 20 domains",
    "start": "1804880",
    "end": "1811360"
  },
  {
    "text": "were all registered via yahoo inc small business hosting plan and all registered with yahoo.com",
    "start": "1811360",
    "end": "1818799"
  },
  {
    "text": "email accounts remember we saw yahoo.com is very prevalent for email addresses that were",
    "start": "1818799",
    "end": "1824720"
  },
  {
    "text": "infected earlier or they were spread to and we saw one of the 20 domains was",
    "start": "1824720",
    "end": "1830640"
  },
  {
    "text": "registered via and hosted by omnisnetwork and it was registered within aol.com accounts",
    "start": "1830640",
    "end": "1838000"
  },
  {
    "text": "now of these 20 domains all of them were registered within 48 hours",
    "start": "1838000",
    "end": "1844320"
  },
  {
    "text": "of the strike time and we found identical registrant names and addresses used for several of the",
    "start": "1844320",
    "end": "1850880"
  },
  {
    "text": "domains so there was a lot of overlap amongst them and there were semi-randomized phone",
    "start": "1850880",
    "end": "1856399"
  },
  {
    "text": "numbers as well corresponding to city area codes based on the registering addresses so",
    "start": "1856399",
    "end": "1862080"
  },
  {
    "text": "let's take a look at some of them you can see i color coded ones that were identical for addresses",
    "start": "1862080",
    "end": "1868159"
  },
  {
    "text": "now i did some open source research on these",
    "start": "1868159",
    "end": "1874159"
  },
  {
    "text": "names and addresses on these registrant addresses and it turns out that these names and addresses",
    "start": "1874159",
    "end": "1880640"
  },
  {
    "text": "correspond to real people who really live at these residential addresses",
    "start": "1880640",
    "end": "1886799"
  },
  {
    "text": "but the phone numbers are junk and the email addresses are bogus as well but because these names and mailing",
    "start": "1886880",
    "end": "1894960"
  },
  {
    "text": "addresses are legitimate the assumption then is that these",
    "start": "1894960",
    "end": "1900000"
  },
  {
    "text": "domains are registered with stolen credit card numbers that belongs to these individuals",
    "start": "1900000",
    "end": "1907799"
  },
  {
    "text": "now we also did more research in terms of",
    "start": "1908799",
    "end": "1913919"
  },
  {
    "text": "all the domains that could be generated so seven of these 20 domains hosted",
    "start": "1913919",
    "end": "1919279"
  },
  {
    "text": "blank root pages during our whois research and three of them were taken down",
    "start": "1919279",
    "end": "1925360"
  },
  {
    "text": "before we got to them but 10 of them have hosted content for global partners",
    "start": "1925360",
    "end": "1931919"
  },
  {
    "text": "hungaria kft and by the way hungary kft translates to a hungarian llc",
    "start": "1931919",
    "end": "1939279"
  },
  {
    "text": "so let's take a look at the home page for global partners hungaria kft",
    "start": "1939279",
    "end": "1945200"
  },
  {
    "text": "oh uh well well work at home one hour a day earn ten thousand dollars a month",
    "start": "1945200",
    "end": "1950559"
  },
  {
    "text": "no expense that sounds like a pretty good deal now of course those of you familiar with",
    "start": "1950559",
    "end": "1955760"
  },
  {
    "text": "cyber crime will immediately recognize this as a money mule",
    "start": "1955760",
    "end": "1960840"
  },
  {
    "text": "campaign it's pretty obvious well let's look at the about page",
    "start": "1960840",
    "end": "1966880"
  },
  {
    "text": "uh well we uh we see some messages from prominent people at global partners",
    "start": "1967679",
    "end": "1973519"
  },
  {
    "text": "hungaria kft we see uh aristidius p panagiotis",
    "start": "1973519",
    "end": "1981360"
  },
  {
    "text": "the chairman of the board of directors saying something to potential investors",
    "start": "1981360",
    "end": "1987120"
  },
  {
    "text": "or people who apply to the site however aristidius p pangiotis",
    "start": "1987120",
    "end": "1994240"
  },
  {
    "text": "that photo is actually a photo of socrates kokalis chairman ceo of intercom holdings",
    "start": "1994240",
    "end": "2000480"
  },
  {
    "text": "and we're able to find that out by searching for that image and finding who this photo really was of",
    "start": "2000480",
    "end": "2007679"
  },
  {
    "text": "what about the second guy petroceretis managing director of global partners well it turns out the real name",
    "start": "2007679",
    "end": "2015760"
  },
  {
    "text": "of petrocerathis is that's petros so that is his real name",
    "start": "2015760",
    "end": "2022000"
  },
  {
    "text": "but he doesn't really work for global partners kft he works for intricate a subsidiary of intercom",
    "start": "2022000",
    "end": "2028000"
  },
  {
    "text": "holdings what about the uh the logo at the top the logo for global partners kft",
    "start": "2028000",
    "end": "2035440"
  },
  {
    "text": "hard to believe i know but it is the actually the logo from intracat's website",
    "start": "2035440",
    "end": "2041518"
  },
  {
    "text": "so uh oh and by the way i should mention that um even though petrocerates that is",
    "start": "2041760",
    "end": "2047919"
  },
  {
    "text": "the real name of that guy the name for the chairman aristidus p pangiotis did",
    "start": "2047919",
    "end": "2055040"
  },
  {
    "text": "some research closest thing we could find is that there is a an aris",
    "start": "2055040",
    "end": "2060720"
  },
  {
    "text": "papadopoulos pangiotis who's a student in the german language department in the college of international management and",
    "start": "2060720",
    "end": "2066158"
  },
  {
    "text": "business at the budapest business school so interesting",
    "start": "2066159",
    "end": "2073839"
  },
  {
    "text": "okay well uh so we uh we didn't just look at these 20 domains though uh we scanned all of",
    "start": "2073839",
    "end": "2080240"
  },
  {
    "text": "them looking for all the possible domains that could be generated by the dga",
    "start": "2080240",
    "end": "2086320"
  },
  {
    "text": "for the string global partners and that allows us to find 44 more",
    "start": "2086320",
    "end": "2091520"
  },
  {
    "text": "domains for a total of 64 altogether and all of them except for two were registered through yahoo.com's small",
    "start": "2091520",
    "end": "2099280"
  },
  {
    "text": "business hosting plan and all 64 registered for exactly one",
    "start": "2099280",
    "end": "2104400"
  },
  {
    "text": "year before the strike time and the oldest domain was registered on",
    "start": "2104400",
    "end": "2110160"
  },
  {
    "text": "february 3rd the day after the malware's pe bill times first began",
    "start": "2110160",
    "end": "2118640"
  },
  {
    "text": "these were also scanned viator so of these 44 new domains",
    "start": "2118640",
    "end": "2126240"
  },
  {
    "text": "what did these domain registrants look like well the email addresses used to register these domains primarily fell",
    "start": "2126240",
    "end": "2133440"
  },
  {
    "text": "into four categories we found these patterns either the email address related to the name of the domain's",
    "start": "2133440",
    "end": "2138800"
  },
  {
    "text": "registrant so for example if the likely stolen credit card was from marco suriano we actually found a few domains",
    "start": "2138800",
    "end": "2146880"
  },
  {
    "text": "registered to marco ceriano 21 yahoo.com or we found",
    "start": "2146880",
    "end": "2153280"
  },
  {
    "text": "patterns where the email address was related to the name of another domain's registrant which was likely a mistake by",
    "start": "2153280",
    "end": "2158800"
  },
  {
    "text": "the adversary we found email addresses of course related to the",
    "start": "2158800",
    "end": "2164320"
  },
  {
    "text": "domain name so the registration for degreeanimal.net was registered",
    "start": "2164320",
    "end": "2169839"
  },
  {
    "text": "by degreeanimal.yahoo.com we also found",
    "start": "2169839",
    "end": "2176240"
  },
  {
    "text": "cases where the domain name was registered was related to another domain so for example knightwagon.net was",
    "start": "2176240",
    "end": "2182560"
  },
  {
    "text": "registered by degreeanimal yahoo.com and likely that was either a mistake by the",
    "start": "2182560",
    "end": "2188240"
  },
  {
    "text": "attacker or the attacker just being lazy thinking i don't want to register another email address for this campaign",
    "start": "2188240",
    "end": "2195040"
  },
  {
    "text": "so using all this information we did some more open source research and we found many non-dga domains also used in",
    "start": "2195119",
    "end": "2203200"
  },
  {
    "text": "this campaign we found uh 14 actually",
    "start": "2203200",
    "end": "2208320"
  },
  {
    "text": "and if you look at the about page for let's say ontariogroup.org ah it's our old friends socrates and",
    "start": "2208320",
    "end": "2216560"
  },
  {
    "text": "petros do a little more research we find out that um",
    "start": "2216560",
    "end": "2222960"
  },
  {
    "text": "you know it's actually been going on for a while and uh there's an anti-fraud site bobber.cod.uk",
    "start": "2222960",
    "end": "2228560"
  },
  {
    "text": "that has been documenting these sites as part of this campaign for quite some time i'm sure you recognize the layouts",
    "start": "2228560",
    "end": "2235359"
  },
  {
    "text": "and the colors in the logo on these other sites that are actually not even part of domains generated by this dj",
    "start": "2235359",
    "end": "2241040"
  },
  {
    "text": "algorithm so investigating further we find that this campaign goes all the way back to",
    "start": "2241040",
    "end": "2246720"
  },
  {
    "text": "2007 and you know what it even continued after we finished our research so",
    "start": "2246720",
    "end": "2252560"
  },
  {
    "text": "we were doing our research primarily in february global partners was the malware that we saw well we found two more that",
    "start": "2252560",
    "end": "2258560"
  },
  {
    "text": "actually happened just a month later so it's very very active so you're probably thinking well jason",
    "start": "2258560",
    "end": "2264800"
  },
  {
    "text": "given how active this seems to be surely it is uh antivirus companies have",
    "start": "2264800",
    "end": "2271359"
  },
  {
    "text": "been looking at this pretty seriously and uh you know taking it as a legitimate family",
    "start": "2271359",
    "end": "2278400"
  },
  {
    "text": "no maybe not so it seems pretty evident that the malware",
    "start": "2278400",
    "end": "2284240"
  },
  {
    "text": "very likely began circulating in february of 2013 and we were analyzing it in february and",
    "start": "2284240",
    "end": "2291040"
  },
  {
    "text": "march uh four months after the malware started spreading in the wild",
    "start": "2291040",
    "end": "2297839"
  },
  {
    "text": "evvest discovered a variant of it and blogged about it",
    "start": "2297839",
    "end": "2303200"
  },
  {
    "text": "so better late than never for sure we're also interested to see",
    "start": "2304560",
    "end": "2311440"
  },
  {
    "text": "which antivirus engines treated this as a unique family of malware as opposed to",
    "start": "2311440",
    "end": "2318880"
  },
  {
    "text": "just having a generic signature detected so i mentioned earlier i used to work at microsoft and their antivirus team",
    "start": "2318880",
    "end": "2325599"
  },
  {
    "text": "and in the antivirus industry typically malware that really appears to be just",
    "start": "2325599",
    "end": "2332079"
  },
  {
    "text": "one off malware and not part of any larger set of now or larger campaign",
    "start": "2332079",
    "end": "2337359"
  },
  {
    "text": "antivirus researchers will just name it something like agents or generic or trojan",
    "start": "2337359",
    "end": "2346079"
  },
  {
    "text": "only if the malware seems to be part of a larger campaign does that family of now or get its own",
    "start": "2346079",
    "end": "2352640"
  },
  {
    "text": "unique name so i looked on virustotal to see",
    "start": "2352640",
    "end": "2359040"
  },
  {
    "text": "for all these variants from this entire family what antivirus engines detected it when",
    "start": "2359040",
    "end": "2365359"
  },
  {
    "text": "it was submitted to virustotal and how they detect it when it was submitted to virustotal",
    "start": "2365359",
    "end": "2370800"
  },
  {
    "text": "well it turns out that almost all of these av",
    "start": "2370800",
    "end": "2375839"
  },
  {
    "text": "companies used generic names to detect it meaning that they didn't fully recognize that",
    "start": "2375839",
    "end": "2380880"
  },
  {
    "text": "this was part of a larger campaign going on we see agent we see generic we see genetic from panda it's an interesting",
    "start": "2380880",
    "end": "2387520"
  },
  {
    "text": "name um i tried to find information on zuzi",
    "start": "2387520",
    "end": "2392720"
  },
  {
    "text": "but i couldn't find information on it on g data bitdefender or f-secure's website so i'm going to guess that it's generic",
    "start": "2392720",
    "end": "2398320"
  },
  {
    "text": "or at least not important enough for them to write up anything about it artemis is a generic detection name from",
    "start": "2398320",
    "end": "2404240"
  },
  {
    "text": "mcafee as his reputation from symantec it kills me oh it kills the mic too",
    "start": "2404240",
    "end": "2411680"
  },
  {
    "text": "it kills me so that my former company microsoft only detected 15 of the",
    "start": "2411680",
    "end": "2416800"
  },
  {
    "text": "samples when they were submit the virus total but i am happy to see",
    "start": "2416800",
    "end": "2422480"
  },
  {
    "text": "that every single variant that microsoft detected was detected by",
    "start": "2422480",
    "end": "2428319"
  },
  {
    "text": "the unique family name suppo box there are actually no variants that microsoft detected that were detected as",
    "start": "2428319",
    "end": "2434560"
  },
  {
    "text": "anything else so microsoft did spot this and did create a new unique family name",
    "start": "2434560",
    "end": "2441040"
  },
  {
    "text": "for this malware family and this supple box signature was",
    "start": "2441040",
    "end": "2446720"
  },
  {
    "text": "released by microsoft on april 6 2013 two months after the malware began",
    "start": "2446720",
    "end": "2451839"
  },
  {
    "text": "circulating and uh no big surprise for anyone here i'm sure clay maybe didn't detect anything",
    "start": "2451839",
    "end": "2458640"
  },
  {
    "text": "okay so that brings us to uh our conclusion here so what can we say after all this",
    "start": "2458640",
    "end": "2464319"
  },
  {
    "text": "research well it appears that the malware was very likely written by",
    "start": "2464319",
    "end": "2471440"
  },
  {
    "text": "a romani probably male and he appears to be working with this",
    "start": "2471440",
    "end": "2477520"
  },
  {
    "text": "long-running european money mule crime syndicate there's some other component out there",
    "start": "2477520",
    "end": "2482960"
  },
  {
    "text": "that we've uh not come across yet that appears to generate this malware based on email addresses that are found on an",
    "start": "2482960",
    "end": "2488880"
  },
  {
    "text": "affected system and then send out this generated malware and it looks like the domains behind",
    "start": "2488880",
    "end": "2495200"
  },
  {
    "text": "this dga campaign are registered using stolen credit cards",
    "start": "2495200",
    "end": "2501599"
  },
  {
    "text": "and last but not least i showed you crowd detox a new free open source",
    "start": "2501599",
    "end": "2506640"
  },
  {
    "text": "plug-in for x-rays that can be used to more easily analyze decompiled code",
    "start": "2506640",
    "end": "2513359"
  },
  {
    "text": "so i'm happy to take any questions but before i do i want to give special thanks to alex iansky for helping with the romanian",
    "start": "2513359",
    "end": "2519680"
  },
  {
    "text": "translations",
    "start": "2519680",
    "end": "2522680"
  },
  {
    "text": "thank you yeah please uh so raise your hand and uh the proctor here i'll be happy to hand",
    "start": "2529440",
    "end": "2536240"
  },
  {
    "text": "you a microphone",
    "start": "2536240",
    "end": "2538960"
  },
  {
    "text": "hi yeah thank you for the talk um so you mentioned that this is a downloader and there's another variant",
    "start": "2544880",
    "end": "2550560"
  },
  {
    "text": "that harvests email addresses and as you monitored or scanned the domains what did you see at as actual commands and",
    "start": "2550560",
    "end": "2556880"
  },
  {
    "text": "what are the capabilities of that i mean if it's only a downloader what did it typically drop if at all anything and",
    "start": "2556880",
    "end": "2563599"
  },
  {
    "text": "what are the capabilities of the subsequent binaries so",
    "start": "2563599",
    "end": "2568640"
  },
  {
    "text": "if i understand the question is effectively what malware did this downloader download",
    "start": "2568640",
    "end": "2575920"
  },
  {
    "text": "it turns out through all the monitoring we did we didn't get a single executable downloaded by following the",
    "start": "2575920",
    "end": "2582480"
  },
  {
    "text": "exact same pattern of requests that the malware sends out so it's unclear right",
    "start": "2582480",
    "end": "2587680"
  },
  {
    "text": "now why that was the case but in all of our monitoring we didn't see any executables being downloaded by this",
    "start": "2587680",
    "end": "2592800"
  },
  {
    "text": "malware even from domains that did send back the correct fingerprints on the first",
    "start": "2592800",
    "end": "2598079"
  },
  {
    "text": "reply okay so it's a mystery still okay just to",
    "start": "2598079",
    "end": "2603440"
  },
  {
    "text": "follow up um so the earlier campaigns that you saw like the similar websites and you know stuff that is not related",
    "start": "2603440",
    "end": "2608720"
  },
  {
    "text": "to this particular dji variant were there any uh specific things they were after like other than harvesting email",
    "start": "2608720",
    "end": "2614319"
  },
  {
    "text": "addresses maybe collecting some credit card information but like other goals thereafter like what is the you know",
    "start": "2614319",
    "end": "2619440"
  },
  {
    "text": "what is this money meal group typically doing to people so the question is uh the previous",
    "start": "2619440",
    "end": "2626000"
  },
  {
    "text": "campaigns uh before this dj malware that we analyzed here uh what were those campaigns likely after um",
    "start": "2626000",
    "end": "2633359"
  },
  {
    "text": "we did not actually research those previous domains or those previous campaigns in depth uh it appears that",
    "start": "2633359",
    "end": "2639599"
  },
  {
    "text": "they were trying to get people to sign up and mule money for them as for the uh the source and",
    "start": "2639599",
    "end": "2647119"
  },
  {
    "text": "destinations of where the money was coming from or where it's going to it's unclear right now but uh we didn't see any malware",
    "start": "2647119",
    "end": "2653760"
  },
  {
    "text": "connected specifically with those previous campaigns thank you for your questions",
    "start": "2653760",
    "end": "2660400"
  },
  {
    "text": "another question here so it seems like the obvious",
    "start": "2660400",
    "end": "2667520"
  },
  {
    "text": "shouldn't be the speaker um it seems like the obvious response from the malware offers to your releasing the uh",
    "start": "2667520",
    "end": "2673920"
  },
  {
    "text": "de-obfuscation tool will be to add uh illegitimate arguments",
    "start": "2673920",
    "end": "2680160"
  },
  {
    "text": "which will destroy your whole detaining algorithm do you have a plan for what to do when they do that because it seems to",
    "start": "2680160",
    "end": "2686880"
  },
  {
    "text": "me that your algorithm is pretty dependent on that so uh you're right the algorithm makes a lot of assumptions which could be",
    "start": "2686880",
    "end": "2692880"
  },
  {
    "text": "violated by future versions of this malware or other malware",
    "start": "2692880",
    "end": "2698240"
  },
  {
    "text": "and you're absolutely right so when it comes to reverse engineering it's always a cat and mouse game new",
    "start": "2698240",
    "end": "2704400"
  },
  {
    "text": "packers are always coming out new linebackers are always created by your reverse engineers",
    "start": "2704400",
    "end": "2710000"
  },
  {
    "text": "and that's one of the reasons why we're releasing this to the community as open source",
    "start": "2710000",
    "end": "2715040"
  },
  {
    "text": "so that as we see new tricks being employed by the bad guys you can counter them by modifying this open source",
    "start": "2715040",
    "end": "2721359"
  },
  {
    "text": "plugin so if they can create some type of automated tool to do this application",
    "start": "2721359",
    "end": "2726560"
  },
  {
    "text": "then surely this plugin can be updated to automatically de-obfuscate it as well thank you for your question",
    "start": "2726560",
    "end": "2734240"
  },
  {
    "text": "got one in the back one here",
    "start": "2734240",
    "end": "2738480"
  },
  {
    "text": "so i apologize i missed the first 10 minutes or so of your talk i'm wondering so at what point so just in terms of",
    "start": "2741440",
    "end": "2747920"
  },
  {
    "text": "your practice of reversing malware at what point do you know when you're done dude yeah that's the question",
    "start": "2747920",
    "end": "2754640"
  },
  {
    "text": "so the question is when reverse engineering malware at what point do you know that you're done and the answer is",
    "start": "2754640",
    "end": "2760560"
  },
  {
    "text": "it it depends it depends on what your goal is so if you're working at an antivirus company which crowdstrike",
    "start": "2760560",
    "end": "2767520"
  },
  {
    "text": "isn't but if you are working an antivirus company and your goal is just to for the most part churn out as many signatures",
    "start": "2767520",
    "end": "2773440"
  },
  {
    "text": "as you can or as many detections as you can then your goal isn't necessarily to",
    "start": "2773440",
    "end": "2778480"
  },
  {
    "text": "understand what the malware is capable of doing rather it's to actually just create a",
    "start": "2778480",
    "end": "2783520"
  },
  {
    "text": "detection for it the other extreme is if you are",
    "start": "2783520",
    "end": "2790480"
  },
  {
    "text": "doing something like we're doing which is uh doing a complete analysis to not only figure out the indicators of",
    "start": "2790480",
    "end": "2796480"
  },
  {
    "text": "compromise of the malware but also how to clean it up uh how it spreads uh how to prevent it",
    "start": "2796480",
    "end": "2803599"
  },
  {
    "text": "from infecting your system uh and the people behind it uh so the truth is for the most part uh we",
    "start": "2803599",
    "end": "2811200"
  },
  {
    "text": "look at every function that's not a library function so we look at branch everything all the",
    "start": "2811200",
    "end": "2817520"
  },
  {
    "text": "code all the data there's nothing really goes untouched by us when doing our analysis",
    "start": "2817520",
    "end": "2823119"
  },
  {
    "text": "we do certainly prioritize things so typically we try to get out storage signatures and indicators of",
    "start": "2823119",
    "end": "2829440"
  },
  {
    "text": "compromise as quickly as possible to our customers in which case we'll spend maybe the first hour or two doing a very quick",
    "start": "2829440",
    "end": "2836000"
  },
  {
    "text": "analysis trying to focus in on api functions that are going to be related to its spread",
    "start": "2836000",
    "end": "2842800"
  },
  {
    "text": "and its functionality its base functionality but in terms of everything we typically look at everything now",
    "start": "2842800",
    "end": "2850160"
  },
  {
    "text": "does that answer your question so we know we're done when there are no",
    "start": "2850160",
    "end": "2855760"
  },
  {
    "text": "functions left to be analyzed i'll just i guess i'll just follow up i mean there's there's um you'd probably bring theoretical computer science into this",
    "start": "2855760",
    "end": "2862000"
  },
  {
    "text": "right if you wanted to i mean just because you've looked at every line of it assembly doesn't necessarily mean you've you've assessed out all the",
    "start": "2862000",
    "end": "2867359"
  },
  {
    "text": "functionality right i'm just wondering if they're i mean this is a this is a young fields right remember reverse engineering i'm",
    "start": "2867359",
    "end": "2872400"
  },
  {
    "text": "just wondering to what extent um you know you bring theoretical ideas or sort of for formal um",
    "start": "2872400",
    "end": "2879839"
  },
  {
    "text": "accuracy measure i'm just wondering if there's any degree of formality to that you know when you're trying to rigorously analyze the sample to when",
    "start": "2879839",
    "end": "2885839"
  },
  {
    "text": "you decided okay this is enough right i have a good sense of what the sample does so uh although we do typically follow a",
    "start": "2885839",
    "end": "2893599"
  },
  {
    "text": "process for analyzing malware uh i wouldn't say it's there's a formal set",
    "start": "2893599",
    "end": "2898880"
  },
  {
    "text": "of uh well formalities that we follow to say okay there's certainly nothing else this malware could do",
    "start": "2898880",
    "end": "2905040"
  },
  {
    "text": "um you know we do dynamic analysis in addition to static analysis in case we",
    "start": "2905040",
    "end": "2910240"
  },
  {
    "text": "miss something or misanalyze something and uh we can definitely say as much as",
    "start": "2910240",
    "end": "2915440"
  },
  {
    "text": "we uh we feel confident that we've analyzed it fully it's very likely that this malware won't do anything that",
    "start": "2915440",
    "end": "2921040"
  },
  {
    "text": "we've not analyzed that we don't already understand but uh there's always the potential for",
    "start": "2921040",
    "end": "2926240"
  },
  {
    "text": "um like you said some assembly instruction may be being documented by intel incorrectly and doing something that we",
    "start": "2926240",
    "end": "2931680"
  },
  {
    "text": "didn't expect it to do in practice it's very rare that we are so surprised",
    "start": "2931680",
    "end": "2937680"
  },
  {
    "text": "at the actual outcome of functionality after we've analyzed the full thing but i would never say it's not possible",
    "start": "2937680",
    "end": "2943359"
  },
  {
    "text": "because it certainly is but it's not a formal in terms of computer science",
    "start": "2943359",
    "end": "2949040"
  },
  {
    "text": "terminology it's not really a formal approach or a formal guarantee",
    "start": "2949040",
    "end": "2954480"
  },
  {
    "text": "thank you question up front from ryan",
    "start": "2954480",
    "end": "2960400"
  },
  {
    "text": "can you tell if the obfuscation was done in a at the high level language level and we're their compiler identifiers in",
    "start": "2965200",
    "end": "2972000"
  },
  {
    "text": "the exe okay so the question is uh was the obfuscation likely done at the high",
    "start": "2972000",
    "end": "2978800"
  },
  {
    "text": "level or after it's compiled and are there compiler identifiers in the exe",
    "start": "2978800",
    "end": "2984880"
  },
  {
    "text": "so for the first question was was the obfuscation inserted at compile time as",
    "start": "2984880",
    "end": "2990160"
  },
  {
    "text": "opposed to after compile time um well you know i sure hope so for the sake of",
    "start": "2990160",
    "end": "2995760"
  },
  {
    "text": "whoever wrote the obfuscator because this would be a huge pain in the ass to write for it to be applied after compilation",
    "start": "2995760",
    "end": "3002400"
  },
  {
    "text": "so i can't know for sure but i would assume it was done uh at the source code level",
    "start": "3002400",
    "end": "3007839"
  },
  {
    "text": "uh as for indicators of compiler i'm pretty sure is microsoft's visual c",
    "start": "3007839",
    "end": "3013200"
  },
  {
    "text": "plus plus i think there are library functions uh from the microsoft standard libraries but um i can follow",
    "start": "3013200",
    "end": "3019920"
  },
  {
    "text": "up with you after and take a look and let you know for sure",
    "start": "3019920",
    "end": "3024599"
  },
  {
    "text": "question in the back corner there",
    "start": "3026079",
    "end": "3029839"
  },
  {
    "text": "does the malware generate nx domains for the ga sorry did you ask does the malware",
    "start": "3036640",
    "end": "3042160"
  },
  {
    "text": "generate infinite domains no nx domains oh nx domains uh",
    "start": "3042160",
    "end": "3048480"
  },
  {
    "text": "they're all in terms of the the like the domain record type or the the right do the",
    "start": "3048480",
    "end": "3054480"
  },
  {
    "text": "domains actually always resolve or typically oh dj does not right no the",
    "start": "3054480",
    "end": "3059760"
  },
  {
    "text": "domains are not all resolved only a small set of them do you're saying are are there dns servers",
    "start": "3059760",
    "end": "3065520"
  },
  {
    "text": "that resolve each domain that's generated no well generally like uh most malware",
    "start": "3065520",
    "end": "3070720"
  },
  {
    "text": "and it has dga it'll be running and then it'll generate lots of domains some of them actually resolve but most of them do not right so",
    "start": "3070720",
    "end": "3078079"
  },
  {
    "text": "does this malware actually generate domains that do not resolve yes most of the domains that are generated do not resolve okay",
    "start": "3078079",
    "end": "3086079"
  },
  {
    "text": "question down here",
    "start": "3086960",
    "end": "3090318"
  },
  {
    "text": "let's assume that we have a malware that",
    "start": "3094480",
    "end": "3099359"
  },
  {
    "text": "actually uh using a polymorphic or metamorphic encryption and have also an asymmetric encryption",
    "start": "3099760",
    "end": "3106640"
  },
  {
    "text": "for transferring the data to the cnc server so it's every time it's a different hard-coded",
    "start": "3106640",
    "end": "3112480"
  },
  {
    "text": "key in each sample and it is also using a dj domain generation so",
    "start": "3112480",
    "end": "3119440"
  },
  {
    "text": "my question is how we can detect this kind of threat and prevent it",
    "start": "3119440",
    "end": "3126240"
  },
  {
    "text": "so uh that can be rather difficult to do if you are only looking",
    "start": "3126240",
    "end": "3132079"
  },
  {
    "text": "at it from the network side and if you haven't analyzed its dga algorithm",
    "start": "3132079",
    "end": "3137119"
  },
  {
    "text": "if you do analyze this dga algorithm like we did for this malware sample then we can predict all",
    "start": "3137119",
    "end": "3143599"
  },
  {
    "text": "32 000 domains that could generate and if you want to put all 32 000 into your snort",
    "start": "3143599",
    "end": "3150319"
  },
  {
    "text": "rules then problem solved as for the type of traffic it's sending",
    "start": "3150319",
    "end": "3156480"
  },
  {
    "text": "even though you wouldn't necessarily be able to actually you wouldn't be able to determine what",
    "start": "3156480",
    "end": "3162480"
  },
  {
    "text": "what you're seeing from the the network side if you are hooked in on the client side you know at some point the malware",
    "start": "3162480",
    "end": "3169920"
  },
  {
    "text": "has to generate the clear text traffic before it works to send it out in an encrypted form so you could hook in at",
    "start": "3169920",
    "end": "3176480"
  },
  {
    "text": "that time and understand what it would be sending out and that's for dynamic analysis and if you're looking at statically like you did with the dga",
    "start": "3176480",
    "end": "3182800"
  },
  {
    "text": "algorithm to determine how that works then you could statically determine what type of information it would be sending",
    "start": "3182800",
    "end": "3188800"
  },
  {
    "text": "out to these servers anyway as for the metamorphic and polymorphic that would certainly",
    "start": "3188800",
    "end": "3195119"
  },
  {
    "text": "could be more time consuming for the analysis but it doesn't mean that it couldn't be done thank you",
    "start": "3195119",
    "end": "3201440"
  },
  {
    "text": "all right so i think we have time for one more question",
    "start": "3201440",
    "end": "3205599"
  },
  {
    "text": "looks like there are no more questions well thank you everybody for coming and um",
    "start": "3207119",
    "end": "3212720"
  },
  {
    "text": "please scan your bands on the way out and i'm giving another talk in 20 minutes in augusta's five and six on",
    "start": "3212720",
    "end": "3219839"
  },
  {
    "text": "tortilla hope to see you there for that thank you",
    "start": "3219839",
    "end": "3225119"
  }
]