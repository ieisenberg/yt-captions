[
  {
    "start": "0",
    "end": "57000"
  },
  {
    "text": "welcome everybody uh this is Breaking Bad abusing belel and home automation devices before we begin I want to give a",
    "start": "120",
    "end": "6399"
  },
  {
    "text": "little intro to ourselves my name is Scott I'll be the software guy for the D remainder of the presentation uh I'm a",
    "start": "6399",
    "end": "12960"
  },
  {
    "text": "security researcher I've been in the business about 15 years currently I'm a research director at invincia Labs",
    "start": "12960",
    "end": "18199"
  },
  {
    "text": "mostly what I focus on is new and novel offensive and defensive cyber capabilities I'm Joe tanon uh I'm the",
    "start": "18199",
    "end": "24760"
  },
  {
    "text": "hardware guy uh I'm a lead research engineer uh I primarily work in Mobile and embedded systems so customizing and",
    "start": "24760",
    "end": "30759"
  },
  {
    "text": "securing Android and other embedded link platforms so a little background about",
    "start": "30759",
    "end": "36040"
  },
  {
    "text": "us in our company um invin Labs does a lot of work with embeded devices we both create them secure them as Joe is",
    "start": "36040",
    "end": "42000"
  },
  {
    "text": "talking about with mobile devices and we also break them my specialty um so and we do this all for a lot of long-term",
    "start": "42000",
    "end": "47680"
  },
  {
    "text": "R&D programs uh looking at Next Generation kinds of embedded devices so we thought you know obviously we' take",
    "start": "47680",
    "end": "52840"
  },
  {
    "text": "our skill set and apply it to this new iot realm and see what we could find so we're going to talk about today",
    "start": "52840",
    "end": "59359"
  },
  {
    "start": "57000",
    "end": "101000"
  },
  {
    "text": "in particular uh is the security of the weimo platform and specifically we're going to disclose two zero day",
    "start": "59359",
    "end": "65040"
  },
  {
    "text": "vulnerabilities one of which allows us to remote root access to any wio device and the other one uh is effectively what",
    "start": "65040",
    "end": "71799"
  },
  {
    "text": "you call cross-site scripting vulnerability it allows us to inject code into the Android wio app and run it",
    "start": "71799",
    "end": "78320"
  },
  {
    "text": "in the context of the app along the way we're also going to present two new techniques one of them is a Hardware",
    "start": "78320",
    "end": "83799"
  },
  {
    "text": "authenication Bypass technique that Joe's going to talk about which we think is more generalizable than to just wio",
    "start": "83799",
    "end": "89000"
  },
  {
    "text": "devices that's why we're presenting it to you uh and the other one is a SQL is a way to leverage SQL injection vulnerabilities into SQL like databases",
    "start": "89000",
    "end": "95920"
  },
  {
    "text": "that we also think is more generalizable and other pen testers and vulnerability research might be able to use so to",
    "start": "95920",
    "end": "101840"
  },
  {
    "start": "101000",
    "end": "135000"
  },
  {
    "text": "start off let's talk about what wio is weimo is balcon line of home automation devices that came out in 2012 about mid",
    "start": "101840",
    "end": "108759"
  },
  {
    "text": "20102 the idea was to be simple and easy to use hooks up to equipment you already have you don't need to buy special Hub",
    "start": "108759",
    "end": "114640"
  },
  {
    "text": "or any other special gear just the device they started off with what you see in the top left corner there uh which is a weimo switch effectively",
    "start": "114640",
    "end": "121479"
  },
  {
    "text": "allows you to turn any device that plugs into it on and off with your phone they've since obviously expanded their",
    "start": "121479",
    "end": "126520"
  },
  {
    "text": "line to roughly 20 different devices uh to include everything from a Mr Coffee pot uh a crock pot humidifier room",
    "start": "126520",
    "end": "133440"
  },
  {
    "text": "heater Etc they all work roughly the same way uh as I said before you hook the device",
    "start": "133440",
    "end": "139080"
  },
  {
    "start": "135000",
    "end": "159000"
  },
  {
    "text": "up uh to your home Wi-Fi and then uh with the smartphone app either locally on the same uh network if you're on the",
    "start": "139080",
    "end": "145440"
  },
  {
    "text": "same network you use that local Wi-Fi network to communicate with the device or if you're outside of that Network it",
    "start": "145440",
    "end": "150519"
  },
  {
    "text": "uses uh the cloud um to connect to that device of course the device connects to the cloud through your Wi-Fi pretty",
    "start": "150519",
    "end": "156360"
  },
  {
    "text": "standard for any iot setup and the reason we're interested in in weo devices are three-fold one of",
    "start": "156360",
    "end": "162959"
  },
  {
    "start": "159000",
    "end": "201000"
  },
  {
    "text": "them is because of this number from the end of 2015 that says they got a 1.5 million devices deployed it's a pretty",
    "start": "162959",
    "end": "169159"
  },
  {
    "text": "good number another reason is that people seem to like them I mean other than that number um they've won a bunch",
    "start": "169159",
    "end": "174400"
  },
  {
    "text": "of awards pretty usable pretty user friendly people seem to like them but the other reason um is because you might",
    "start": "174400",
    "end": "180840"
  },
  {
    "text": "remember seeing this headline from back in 2013 or this one in",
    "start": "180840",
    "end": "186599"
  },
  {
    "text": "2014 both of which caused Belin in 2015 to kind of put a stake in the sand and",
    "start": "186599",
    "end": "191879"
  },
  {
    "text": "say okay we're going to look at the security of these devices really going to patch things up we're going to get better at this now before we get into",
    "start": "191879",
    "end": "197840"
  },
  {
    "text": "what we found with devices today I want to kind of talk about these these prior headlines so the first one from 2013 is",
    "start": "197840",
    "end": "205519"
  },
  {
    "start": "201000",
    "end": "245000"
  },
  {
    "text": "by this independent researcher named NES tanani effectively what he found out is that uh he looked at a bunch of devices",
    "start": "205519",
    "end": "212319"
  },
  {
    "text": "but with the belon wio baby monitor he found that there's an authentication token that's being sent in the clear",
    "start": "212319",
    "end": "217760"
  },
  {
    "text": "over the Internet anybody sniffing on any from the local network out through the internet could grab that authentication token and reuse it to log",
    "start": "217760",
    "end": "224560"
  },
  {
    "text": "into your your baby monitor remotely not a good thing the second headline you saw",
    "start": "224560",
    "end": "229680"
  },
  {
    "text": "was from 2014 and that was an advisory released by ioactive probably the thing you're most familiar with if you've",
    "start": "229680",
    "end": "234920"
  },
  {
    "text": "heard about security of wio devices and they found a whole bunch of stuff everything from hard-coded crypto keys use to sign your own firmware um all the",
    "start": "234920",
    "end": "242439"
  },
  {
    "text": "way down to just command injection type stuff now around the same time that that last headline came out um there was a",
    "start": "242439",
    "end": "249000"
  },
  {
    "start": "245000",
    "end": "295000"
  },
  {
    "text": "Blog article by this guy named Brian Hart and what he found was a very simple",
    "start": "249000",
    "end": "254079"
  },
  {
    "text": "uh command injection vulnerability if you've ever done anything with iot or dealt with security of iot um this is",
    "start": "254079",
    "end": "260959"
  },
  {
    "text": "sort of the lwh hanging fruit of iot right the effectively in the the element",
    "start": "260959",
    "end": "265960"
  },
  {
    "text": "in this XML field here is being used as a parameter to command that that's being run with the system call right so it's",
    "start": "265960",
    "end": "271880"
  },
  {
    "text": "just running a command and using the value of this XML entity as one of the parameters of course if you just put",
    "start": "271880",
    "end": "278039"
  },
  {
    "text": "back ticks around that as he's done here it'll actually run that command before the command it's supposed to be running",
    "start": "278039",
    "end": "283600"
  },
  {
    "text": "and and effectively all this does is turn on tnet and auto logs any connection into a root shell without",
    "start": "283600",
    "end": "289080"
  },
  {
    "text": "authentication easy peasy standard low hanging fruit frot and that's still at the end of",
    "start": "289080",
    "end": "295880"
  },
  {
    "start": "295000",
    "end": "320000"
  },
  {
    "text": "2015 so much like the prior research we have the same attack scenario we presume",
    "start": "295880",
    "end": "301520"
  },
  {
    "text": "that some malicious actor has gotten access to another machine on the same network as the we device now if this is",
    "start": "301520",
    "end": "308479"
  },
  {
    "text": "your home PC is meant to be a home network of course we assume that's via fishing or drive by download or",
    "start": "308479",
    "end": "313639"
  },
  {
    "text": "something they've compromised maybe your home PC and have gotten access to that and then they can communicate directly with with your WIA device and the way",
    "start": "313639",
    "end": "320080"
  },
  {
    "text": "you communicate with a weimo device is over universal plug and play here's what happens you open up the app the app",
    "start": "320080",
    "end": "326360"
  },
  {
    "text": "sends out a broadcast upm message which is essentially just an HTTP message over UDP to a broadcast address it says hey",
    "start": "326360",
    "end": "334080"
  },
  {
    "text": "where are all the weimo devices weimo devices respond with uh a unicast UDP",
    "start": "334080",
    "end": "339560"
  },
  {
    "text": "message essentially another HTTP message and it says here's the location of my device description file now the device",
    "start": "339560",
    "end": "346280"
  },
  {
    "text": "description file contains all the UPnP endpoints in it essentially URLs that you send messages to to communicate for",
    "start": "346280",
    "end": "353680"
  },
  {
    "text": "example in the weimo switch case if you want to turn the switch on or off you click that on off button you'll send a a",
    "start": "353680",
    "end": "359479"
  },
  {
    "text": "a a UPnP message an HTT message over TCP this time uh to the UPnP controls basic",
    "start": "359479",
    "end": "366120"
  },
  {
    "text": "event one UPnP endpoint and the and the message itself will actually be the set binary State command one or zero on or",
    "start": "366120",
    "end": "372319"
  },
  {
    "text": "off right setting the binary State pretty easy stuff okay so one of the other piece of",
    "start": "372319",
    "end": "378319"
  },
  {
    "start": "376000",
    "end": "436000"
  },
  {
    "text": "functionality that weo has that everybody seems to love is this idea of rules you can create rules to do simple",
    "start": "378319",
    "end": "383479"
  },
  {
    "text": "things like um if you have all your Lights lamps plugged into these wio switches and you go to bed at 10:00",
    "start": "383479",
    "end": "389120"
  },
  {
    "text": "every night you want to forget to turn off the lights you can set a rule that turns off those lights every night at 10 p.m. if you have your crockpot on medium",
    "start": "389120",
    "end": "396840"
  },
  {
    "text": "for 5 hours you want to set to low to keep your dinner warm but not over overcook it while you're at work you can",
    "start": "396840",
    "end": "402199"
  },
  {
    "text": "set a rule to do that too after let's say 5 hours go to low useful stuff what",
    "start": "402199",
    "end": "407240"
  },
  {
    "text": "we found is that uh sorry the way these things work is you on the app you have",
    "start": "407240",
    "end": "412440"
  },
  {
    "text": "this interface that all you create these rules when you hit the save button it adds that rule to a SQL like database if",
    "start": "412440",
    "end": "417800"
  },
  {
    "text": "you don't know SQL like a regular database just shrunk down into one file when you when you're done editing",
    "start": "417800",
    "end": "423840"
  },
  {
    "text": "the rules for device it takes that one file sends it to the device and the device uses a set of SQL queries stored",
    "start": "423840",
    "end": "429599"
  },
  {
    "text": "in the firmware to unpack it right and update the rules in memory what we found is that those rules are vulnerable to",
    "start": "429599",
    "end": "435680"
  },
  {
    "text": "SQL injection and here's how this is the rule updating algorithm we reverse",
    "start": "435680",
    "end": "441280"
  },
  {
    "start": "436000",
    "end": "482000"
  },
  {
    "text": "engineered the firmware and kind of came up with this is more to be seen as um as pseudo code than actual code first thing",
    "start": "441280",
    "end": "447160"
  },
  {
    "text": "it runs is load rules into memory what that does is it is it queries the database um the rules table for the type",
    "start": "447160",
    "end": "454199"
  },
  {
    "text": "and the rule ID of all enabled rules where State equals 1 each one of those",
    "start": "454199",
    "end": "460039"
  },
  {
    "text": "uh result rows they take the rule ID from that and and send it to the fetch",
    "start": "460039",
    "end": "465120"
  },
  {
    "text": "Target device ID function the bottom function on this slide that function uses the rule ID it got from the",
    "start": "465120",
    "end": "470560"
  },
  {
    "text": "database to create yet another query and executed now I know you might be thinking how is this insecure because",
    "start": "470560",
    "end": "476199"
  },
  {
    "text": "you're using SN printf we all know that's a secure version s printf right so there's probably no issue here",
    "start": "476199",
    "end": "481520"
  },
  {
    "text": "whatsoever so let's go through a couple examples in the benign case right a rule",
    "start": "481520",
    "end": "486759"
  },
  {
    "start": "482000",
    "end": "511000"
  },
  {
    "text": "ID is supposed to be a number it's the primary key of the database so it's supposed to be a number and we see in the when the at the top of the slide you",
    "start": "486759",
    "end": "493440"
  },
  {
    "text": "see that the rules table initially we have one rule in there rule ID of one after the first query runs we get one",
    "start": "493440",
    "end": "499759"
  },
  {
    "text": "result back we see the rule ID there as well and I've bolded it so you can kind of trace it through here and then the second query gets built as expected",
    "start": "499759",
    "end": "506280"
  },
  {
    "text": "right we're going to we're going to select um device ID where rule ID equals one easy peasy but the problem here is",
    "start": "506280",
    "end": "512800"
  },
  {
    "start": "511000",
    "end": "558000"
  },
  {
    "text": "that SQL light does not enforce column type constraints okay so it doesn't have to be an energy you can put that as any",
    "start": "512800",
    "end": "518680"
  },
  {
    "text": "to be anything you want so let's say we did something like quote semicolon Das Dash a typical textbook SQL injection",
    "start": "518680",
    "end": "527160"
  },
  {
    "text": "turns out if you trace this all the way down to the bottom what you end up doing is making a query with an empty uh rule",
    "start": "527160",
    "end": "533480"
  },
  {
    "text": "ID value semicolon is going to end that first SQL statement and then Dash Dash is going to comment out everything else",
    "start": "533480",
    "end": "539079"
  },
  {
    "text": "on that line again textbook SQL injection if you didn't know SQL injection before now you",
    "start": "539079",
    "end": "544760"
  },
  {
    "text": "do now but that's great right now we can put stack SQL queries together right we",
    "start": "544760",
    "end": "549920"
  },
  {
    "text": "can put more things after that first semicolon other statements but what do we do with it now and that's the same question we had so we did what you would",
    "start": "549920",
    "end": "556160"
  },
  {
    "text": "all do we googled it turns out the first result that Google throws back at us has an interesting",
    "start": "556160",
    "end": "562800"
  },
  {
    "start": "558000",
    "end": "627000"
  },
  {
    "text": "thought uh some pentesters use uh SQL injection to SQL databases to do the following they use the attached database",
    "start": "562800",
    "end": "570200"
  },
  {
    "text": "syntax what that'll do is is if there's another sealite database on the same file system that you're on you attach to",
    "start": "570200",
    "end": "576560"
  },
  {
    "text": "it and then you can query and pull data from that to use in your current set of queries or to put in your current database the one you already have open",
    "start": "576560",
    "end": "583040"
  },
  {
    "text": "turns out though if the sqlite database doesn't exist where you asked for to you know when you try to open it it gets",
    "start": "583040",
    "end": "588720"
  },
  {
    "text": "created there then you can create a so you can effect store data that you have from the",
    "start": "588720",
    "end": "594760"
  },
  {
    "text": "current database into this new one you've created well let's say we created something with a PHP extension the web server root directory and then we added",
    "start": "594760",
    "end": "602360"
  },
  {
    "text": "some text in there that looks suspiciously like PHP code well the PHP interpret is so simple that all it's",
    "start": "602360",
    "end": "608399"
  },
  {
    "text": "going to do is search through that file looking for anything looks like PHP code and when it finds it execute it right now this is an existing technique as I",
    "start": "608399",
    "end": "614560"
  },
  {
    "text": "said we got from um from Googling around seems like a good idea we'd love to use it problem is we don't have PHP in the",
    "start": "614560",
    "end": "621000"
  },
  {
    "text": "system we're a small little embedded device that doesn't exist however is a really interesting",
    "start": "621000",
    "end": "627320"
  },
  {
    "start": "627000",
    "end": "704000"
  },
  {
    "text": "idea well we don't have the PHP P command interpreter we are working on a system that's based off of Open wrt",
    "start": "627320",
    "end": "633560"
  },
  {
    "text": "right all wi devices are based on open wrt open wrt uses the busy box Suite of embedded Linux tools right to to",
    "start": "633560",
    "end": "640519"
  },
  {
    "text": "implement all the basic Linux commands to include bsh and by default bin bsh is",
    "start": "640519",
    "end": "647399"
  },
  {
    "text": "the ash shell not bash but Ash which is a very very simplified version of of",
    "start": "647399",
    "end": "652920"
  },
  {
    "text": "bash in fact so simple that really all all it cares about when it's uh parsing",
    "start": "652920",
    "end": "658079"
  },
  {
    "text": "input would really cares about is new lines and parentheses because a new line is what happens when you hit return and",
    "start": "658079",
    "end": "664560"
  },
  {
    "text": "parentheses essentially do subshells right those backtick kind of things but in in Ash it's parenthesis so we said",
    "start": "664560",
    "end": "670800"
  },
  {
    "text": "okay this is a command interpreter a little bit more complicated than PHP but is there a way that we can maybe create a SQL light file and then with purely",
    "start": "670800",
    "end": "678519"
  },
  {
    "text": "SQL statements make it executable by an ash uh shell interpreter spoiler alert the answer is",
    "start": "678519",
    "end": "685519"
  },
  {
    "text": "yes here's how we do it we care about that that whole new line thing right so you have to figure out how to",
    "start": "685519",
    "end": "691000"
  },
  {
    "text": "arbitrarily add new lines what we have here is a simple create table statement we're creating a table named Echo it's",
    "start": "691000",
    "end": "696440"
  },
  {
    "text": "got one column column name is Echo you might be asking yourself why did you put those things on separate lines you can",
    "start": "696440",
    "end": "702480"
  },
  {
    "text": "put that all in one line and the reason is because SQL light when you run that cre statement actually preserves that",
    "start": "702480",
    "end": "707839"
  },
  {
    "text": "new line character in other databases they would actually get rid of it and say it's an extraneous character we can",
    "start": "707839",
    "end": "712959"
  },
  {
    "text": "save space not SQL light by default it preserves that new line character what happens then when you run that file",
    "start": "712959",
    "end": "719000"
  },
  {
    "text": "through through busy Box's Ash shell you get this first error here it says SQL light not found that's happening because",
    "start": "719000",
    "end": "726880"
  },
  {
    "text": "it's interpreting the first uh word in that file to be a command name and of course there's no SQL like command on",
    "start": "726880",
    "end": "732360"
  },
  {
    "text": "the system but more importantly it's interpreting everything after the word sqlite up until that new line As the",
    "start": "732360",
    "end": "739360"
  },
  {
    "text": "parameters for that command that it cannot execute effectively that means we've skipped a whole bunch of text we",
    "start": "739360",
    "end": "745600"
  },
  {
    "text": "didn't want to deal with anyway or whole bunch of bites we didn't want to deal with anyway in that file that's good for us now all we got to do is deal with a",
    "start": "745600",
    "end": "752199"
  },
  {
    "text": "second error that says unterminated quoted string we do that by adding another new",
    "start": "752199",
    "end": "757240"
  },
  {
    "text": "line so it turns out after a column uh definition uh in a create table",
    "start": "757240",
    "end": "762560"
  },
  {
    "text": "statement you can put these words without row ID and I have no idea what they do but I know they can be put after",
    "start": "762560",
    "end": "767880"
  },
  {
    "text": "the column definitions and they can be put on a new line which means that we run this file again in busy box after",
    "start": "767880",
    "end": "773839"
  },
  {
    "text": "doing that we get that first SQL light error but then we get the suspicious thing says non primary key what's going",
    "start": "773839",
    "end": "781519"
  },
  {
    "text": "on here is that the echo column name is being treated as the echo command because it's on its own line there's a",
    "start": "781519",
    "end": "788279"
  },
  {
    "text": "new line right before that parentheses the open paren and there's a new line right after the closed paren so so the",
    "start": "788279",
    "end": "794480"
  },
  {
    "text": "ash shell interpreter is actually interpreting that to be its own line it's enclosed in parentheses which means that it executes as a sub command great",
    "start": "794480",
    "end": "801560"
  },
  {
    "text": "we have command execution it's not arbitrary command execution because that column definition I can only put so many",
    "start": "801560",
    "end": "808399"
  },
  {
    "text": "things after the I can put random things so to get arbitrary command execution we take a page back from the",
    "start": "808399",
    "end": "814560"
  },
  {
    "start": "811000",
    "end": "839000"
  },
  {
    "text": "PHP example right we insert some data into that table we just created and all",
    "start": "814560",
    "end": "819959"
  },
  {
    "text": "we have to do is put a new line before and after the data we insert and we can run whatever the heck we want in this case LS slash and you see at the bottom",
    "start": "819959",
    "end": "827320"
  },
  {
    "text": "there after a bunch of errors on other things that couldn't be executed um we get the output of our",
    "start": "827320",
    "end": "834240"
  },
  {
    "text": "Command cool so now we have arbitrary command execution with Ash",
    "start": "834240",
    "end": "839320"
  },
  {
    "start": "839000",
    "end": "886000"
  },
  {
    "text": "so this is what the malicious database actually looks like we instead of uh excuse me the",
    "start": "839320",
    "end": "845519"
  },
  {
    "text": "malicious rules table of the database um so we we put two rows in here the first one is going to create a file in a",
    "start": "845519",
    "end": "851759"
  },
  {
    "text": "particular location I'm going to go over why that location is important in a moment that's the first row the second",
    "start": "851759",
    "end": "856920"
  },
  {
    "text": "row actually inserts the command we want to execute just like we just showed note that they both start with this double",
    "start": "856920",
    "end": "863639"
  },
  {
    "text": "quote semicolon because they are actually injecting these statements and then the command we want to run is the",
    "start": "863639",
    "end": "868680"
  },
  {
    "text": "one we saw the beginning that that other guy used in the the XML case right we just want to start up telling that to Auto log us into a root shell okay so",
    "start": "868680",
    "end": "876440"
  },
  {
    "text": "now we've been able to create a SQL an executable SQL light database right um",
    "start": "876440",
    "end": "881680"
  },
  {
    "text": "but we still need to put it somewhere so it will execute it is executable but we need to get it to execute so that's a",
    "start": "881680",
    "end": "887360"
  },
  {
    "start": "886000",
    "end": "948000"
  },
  {
    "text": "two-step process what we started doing is we started looking through the init scripts right for all the different",
    "start": "887360",
    "end": "892440"
  },
  {
    "text": "services that start on the system and in the networking nit script we found this and this is in this similar syntax is in",
    "start": "892440",
    "end": "897639"
  },
  {
    "text": "some of the other nit scripts so this is the EAS one to work with we saw this include Network we thought that's",
    "start": "897639",
    "end": "903240"
  },
  {
    "text": "interesting I wonder what that does went and found that in Etsy function functions. sh and if you look at here at",
    "start": "903240",
    "end": "909920"
  },
  {
    "text": "this code it's just it's just a simple Loop all it's doing is it's treating the parameter that you pass it as a",
    "start": "909920",
    "end": "915360"
  },
  {
    "text": "directory reading all all of the files with a sh and sourcing them into the",
    "start": "915360",
    "end": "921680"
  },
  {
    "text": "current file thatt space uh dollar sign file that's sourcing sourcing just means",
    "start": "921680",
    "end": "927440"
  },
  {
    "text": "read all the lines and execute them that's really cool for us because it means we don't need execute permissions",
    "start": "927440",
    "end": "932920"
  },
  {
    "text": "on the file we created because when we do attach database it doesn't give it execute permissions but this will read",
    "start": "932920",
    "end": "938519"
  },
  {
    "text": "all of that all the data in that file and try and execute it exactly what we want okay so now we we know where to put",
    "start": "938519",
    "end": "945720"
  },
  {
    "text": "the file to make it to get it to execute but now how do we actually execute it well we essentially need the networking",
    "start": "945720",
    "end": "951880"
  },
  {
    "start": "948000",
    "end": "1009000"
  },
  {
    "text": "and nit scripts to run we could always you know unplug and plug the device back in but that's not terribly helpful if we",
    "start": "951880",
    "end": "957160"
  },
  {
    "text": "want to remote attack right so instead what we found is that there is a particular upm endpoint called Wi-Fi",
    "start": "957160",
    "end": "963120"
  },
  {
    "text": "setup one it's meant for when you initially pair the device with a Wi-Fi network so when these devices come up",
    "start": "963120",
    "end": "969720"
  },
  {
    "text": "they create their own access point you connect to that access point and then tell it what network to be on the Wi-Fi",
    "start": "969720",
    "end": "975959"
  },
  {
    "text": "setup endpoint is is used for that purpose when you are already paired though that endpoint is still active we",
    "start": "975959",
    "end": "981519"
  },
  {
    "text": "can still tell to do things in particular we can say stop pair that means I've given it a new Wi-Fi name I",
    "start": "981519",
    "end": "988560"
  },
  {
    "text": "want you to reboot all the networking stuff now literally restart the networking subsystem so it uses that new",
    "start": "988560",
    "end": "994240"
  },
  {
    "text": "access point if we do that while it's already started it just restarts the networking things and everything comes",
    "start": "994240",
    "end": "999839"
  },
  {
    "text": "back up right as it was supposed to so essentially when we do that restarting of the network stuff U the networking",
    "start": "999839",
    "end": "1005319"
  },
  {
    "text": "subsystem uh we effectively run our script which we're going to demo to you",
    "start": "1005319",
    "end": "1011199"
  },
  {
    "start": "1009000",
    "end": "1084000"
  },
  {
    "text": "right now",
    "start": "1011199",
    "end": "1017120"
  },
  {
    "text": "okay so we have a device place we're going to just prove to you",
    "start": "1017120",
    "end": "1022319"
  },
  {
    "text": "that it's up and running cool and then we're going to prove to you that uh we don't currently have tet",
    "start": "1022319",
    "end": "1029558"
  },
  {
    "text": "running on the device okay it didn't",
    "start": "1029559",
    "end": "1034880"
  },
  {
    "text": "work now we're going to run root.sh root.sh as you can see does a",
    "start": "1034880",
    "end": "1040798"
  },
  {
    "text": "couple of curl calls and then effectively throws a few messages that are generated by some Python scripts",
    "start": "1040799",
    "end": "1046000"
  },
  {
    "text": "okay that's all it does",
    "start": "1046000",
    "end": "1049600"
  },
  {
    "text": "okay so I'm going to go over this in a second um because we need to wait about a minute to minute and a half for the networking subsystem to actually reboot",
    "start": "1054120",
    "end": "1061039"
  },
  {
    "text": "um but what's happened right now is we've thrown the rules file over there and then we kind of put in a sleep for 10 seconds just to give the firmer it's",
    "start": "1061039",
    "end": "1067120"
  },
  {
    "text": "a slow device right it's not a particularly powerful processor the firmer a chance to unpack it okay now we're sending the trigger so what we're",
    "start": "1067120",
    "end": "1073520"
  },
  {
    "text": "going to do is go back up and start pinging the device",
    "start": "1073520",
    "end": "1080159"
  },
  {
    "text": "and then I'm going to come back to the slides and explain you what's going on okay so this is the sort of anatomy",
    "start": "1080159",
    "end": "1087799"
  },
  {
    "start": "1084000",
    "end": "1134000"
  },
  {
    "text": "of the attack um when the first thing we need to do once we have this rule this malicious",
    "start": "1087799",
    "end": "1093200"
  },
  {
    "text": "rules file created is we need to set the device into a state to accept the rules this actually took us a long time to figure out didn't work every time we",
    "start": "1093200",
    "end": "1099480"
  },
  {
    "text": "couldn't figure out why you need to do a certain set of calls that was that those first two curl statements and then the",
    "start": "1099480",
    "end": "1104559"
  },
  {
    "text": "first python script to run that sets the device in a state that when we then send it to malicious database it'll actually",
    "start": "1104559",
    "end": "1111159"
  },
  {
    "text": "properly unpack it and run our SQL injection that SQL injection will write the file to the appropriate location the",
    "start": "1111159",
    "end": "1117640"
  },
  {
    "text": "next thing we need to do which you saw in this says the trigger is send it that stop pair message and that's going to restart the networking subsystem and the",
    "start": "1117640",
    "end": "1124280"
  },
  {
    "text": "reason I'm showing you the slide right now is because again that takes about a minute to do so hopefully by the time I'm done talking about this we can go",
    "start": "1124280",
    "end": "1130440"
  },
  {
    "text": "back into the last step which is Ted into the device and let's see if that's working",
    "start": "1130440",
    "end": "1135919"
  },
  {
    "text": "thus far no not yet waiting",
    "start": "1135919",
    "end": "1143960"
  },
  {
    "text": "waiting apologize about the dead air time also apologize about the voice I",
    "start": "1156520",
    "end": "1161720"
  },
  {
    "text": "got kind of a a cold on the way over here worst thing to happen when you're doing a talk right",
    "start": "1161720",
    "end": "1169440"
  },
  {
    "text": "also dead Air Time worst thing happen during a talk right oh there we",
    "start": "1171679",
    "end": "1178320"
  },
  {
    "text": "go all right",
    "start": "1178320",
    "end": "1183320"
  },
  {
    "text": "so oh look at that so we can type ID now and the",
    "start": "1184159",
    "end": "1191000"
  },
  {
    "text": "network and",
    "start": "1191000",
    "end": "1194159"
  },
  {
    "text": "then show they want a myip device here and then lastly we'll do cat the version",
    "start": "1196080",
    "end": "1201360"
  },
  {
    "text": "of this device",
    "start": "1201360",
    "end": "1205760"
  },
  {
    "text": "and all right and show you that we are actually on Balon firmware right now Balon weo firmware so there we go that's",
    "start": "1209120",
    "end": "1215840"
  },
  {
    "text": "how you would remotely root a wio",
    "start": "1215840",
    "end": "1219640"
  },
  {
    "text": "device okay okay so the takeaway is from this",
    "start": "1221640",
    "end": "1227120"
  },
  {
    "start": "1224000",
    "end": "1323000"
  },
  {
    "text": "um we obviously turn on tell here uh but we could done anything else we could have W some malware and executed it",
    "start": "1227120",
    "end": "1232640"
  },
  {
    "text": "right and that that was a common question we've gotten from other people's what else okay so you turn to tell it what's the big deal obviously we",
    "start": "1232640",
    "end": "1238000"
  },
  {
    "text": "demo that to you guys because that's what the security Community wants to see think marai we could easily run marai on",
    "start": "1238000",
    "end": "1243440"
  },
  {
    "text": "this by default marai um compiles to to myips the other interesting part about this um is that the only real",
    "start": "1243440",
    "end": "1250240"
  },
  {
    "text": "remediation is a firmware update so all these wom devices have um a factory",
    "start": "1250240",
    "end": "1255600"
  },
  {
    "text": "reset button on them hold it down plug it in wait 5 seconds Factor resets it that doesn't uh remediate what we've",
    "start": "1255600",
    "end": "1261799"
  },
  {
    "text": "done here at all the only thing you can do is wait for the vendor to give you a firmware update which of course is not ideal because you don't get to choose",
    "start": "1261799",
    "end": "1267440"
  },
  {
    "text": "that also the reason that's not ideal is that it is Trivial to break their firmware update process it's just a",
    "start": "1267440",
    "end": "1272799"
  },
  {
    "text": "shell script so we can easily break that and prevent um you from ever updating your device effectively meaning it's own",
    "start": "1272799",
    "end": "1280000"
  },
  {
    "text": "Forever This brings up sort of another issue though um what we did here is that",
    "start": "1280000",
    "end": "1285080"
  },
  {
    "text": "while Balon had this SQL injection vulnerability they coded right that's not the reason we got rude that's not",
    "start": "1285080",
    "end": "1290320"
  },
  {
    "text": "the entire reason there's this whole software open source software stack that this stuff is built on right so sqlite",
    "start": "1290320",
    "end": "1296120"
  },
  {
    "text": "provided us a way to do an arbitrary right as root because everything's running as root um Ash provided us a way",
    "start": "1296120",
    "end": "1301640"
  },
  {
    "text": "to execute some commands and then open wrt the design of it itself and it's designed so you can download it and",
    "start": "1301640",
    "end": "1307080"
  },
  {
    "text": "modify it custom for your device right that provides the actual trigger to execute putting it in a certain direction and then restarting and stuff",
    "start": "1307080",
    "end": "1313480"
  },
  {
    "text": "so we need to start thinking about like the entire software stack that iot is based on not just the stuff that we",
    "start": "1313480",
    "end": "1319480"
  },
  {
    "text": "write I think it's important takeaway from this whole",
    "start": "1319480",
    "end": "1323960"
  },
  {
    "text": "exercise so while Scott was developing the remote exploit um he had very kind of coar grained feedback uh getting the",
    "start": "1325840",
    "end": "1334120"
  },
  {
    "text": "LED blinking by doing something or putting a file in a very restricted location we could see that that kind of",
    "start": "1334120",
    "end": "1339799"
  },
  {
    "text": "stuff was happening but we couldn't get deep into the guts of what all the processes were doing what the individual",
    "start": "1339799",
    "end": "1345520"
  },
  {
    "text": "process log files were um if we managed to crash anything um and you know other",
    "start": "1345520",
    "end": "1351559"
  },
  {
    "text": "things like maybe even GDB into a process and these would all be things that we'd want to be able to do so we",
    "start": "1351559",
    "end": "1356600"
  },
  {
    "text": "looked at getting local rout as well on the device so that we could get more fine grained uh kind of introspection",
    "start": "1356600",
    "end": "1362120"
  },
  {
    "text": "into what was going on so what we ended up doing was just popping the thing",
    "start": "1362120",
    "end": "1367159"
  },
  {
    "text": "apart hunting around for ports connecting to them uh and seeing what we could get from there thankfully the open",
    "start": "1367159",
    "end": "1374400"
  },
  {
    "start": "1372000",
    "end": "1435000"
  },
  {
    "text": "wrt Community wanted to get open wrt running on this device like a vanilla version they already done some of the",
    "start": "1374400",
    "end": "1379480"
  },
  {
    "text": "leg work to find out what the ports do uh how the you know where the what the connector pinouts were things like that",
    "start": "1379480",
    "end": "1386720"
  },
  {
    "text": "so thanks to those guys um we cracked it open we removed the application board",
    "start": "1386720",
    "end": "1391840"
  },
  {
    "text": "it's a high voltage relay so this is the switch uh used to turn whatever is plugged into it on and off uh we didn't",
    "start": "1391840",
    "end": "1397120"
  },
  {
    "text": "want to have that high voltage stuff in there when we were poking around on it so it took that out unfortunately the power supply for that uh for the the",
    "start": "1397120",
    "end": "1403960"
  },
  {
    "text": "Wi-Fi board is on that application board so we made a connector that plugs in into a benchtop power supply and that's",
    "start": "1403960",
    "end": "1410000"
  },
  {
    "text": "what you see all the way on the left hand side of the um of the slide next to",
    "start": "1410000",
    "end": "1415240"
  },
  {
    "text": "that is the console Port the debug uart just txrx so we sawed onto that um",
    "start": "1415240",
    "end": "1421080"
  },
  {
    "text": "couldn't make a connector for it CU those were just test pads we ran all that over then to the breadboard you see on the far right and um plugged in the",
    "start": "1421080",
    "end": "1428400"
  },
  {
    "text": "USB the U adapter as well as our benchtop power supply stuff it kind of kept it from being too flimsy and just falling apart all the",
    "start": "1428400",
    "end": "1435200"
  },
  {
    "start": "1435000",
    "end": "1510000"
  },
  {
    "text": "time the serial consoles just 57600 then one we used the Linux screen commands to",
    "start": "1435200",
    "end": "1441200"
  },
  {
    "text": "connect up to it uh just got a a regular familiar looking prompt we when we boot",
    "start": "1441200",
    "end": "1447320"
  },
  {
    "text": "the device we see the boot logs kind of scroll through and then we get to a Linux console for logging in first we",
    "start": "1447320",
    "end": "1453400"
  },
  {
    "text": "tried logging in with no password that didn't work then we tried logging in or no user rather then we tried logging in as root with no password that also",
    "start": "1453400",
    "end": "1459799"
  },
  {
    "text": "didn't work um and so they have guards on there to prevent you from just logging in we thought okay well what can",
    "start": "1459799",
    "end": "1466039"
  },
  {
    "text": "we do now well we have that firmware update that we um picked apart and analyzed as part of our static analysis",
    "start": "1466039",
    "end": "1472039"
  },
  {
    "text": "for the the remote exploit development and we had Etsy password uh which contains the all the users in their",
    "start": "1472039",
    "end": "1478279"
  },
  {
    "text": "their hashes for their their credentials so we pulled that hash out we put it into our GPU farm and nine days later",
    "start": "1478279",
    "end": "1485000"
  },
  {
    "text": "someone else needed the GPU farm so uh it resisted pretty well our attempts to crack into it it's a reasonably strong",
    "start": "1485000",
    "end": "1491480"
  },
  {
    "text": "password uh so now what else can we do we're we're kind of stuck at this login prompt well if you look at all the boot",
    "start": "1491480",
    "end": "1497080"
  },
  {
    "text": "messages you can see that uboot is uh booting up the Linux kernel and it actually provides you with a mechanism",
    "start": "1497080",
    "end": "1503240"
  },
  {
    "text": "for breaking into the uboot console by spamming the 4 key while the device is booting so uh we got onto the UB console",
    "start": "1503240",
    "end": "1510000"
  },
  {
    "start": "1510000",
    "end": "1597000"
  },
  {
    "text": "using that to modify the Linux startup process through uboot you can do a number of",
    "start": "1510000",
    "end": "1515640"
  },
  {
    "text": "things uh a lot of them can be set in different variables that are available",
    "start": "1515640",
    "end": "1520760"
  },
  {
    "text": "uh on the system you can print these variables using print M setm using setm and persist across reboots with save M",
    "start": "1520760",
    "end": "1527120"
  },
  {
    "text": "um and a lot of those kind of feed in into the proc the kernel boot process things like where you load it to uh what",
    "start": "1527120",
    "end": "1532159"
  },
  {
    "text": "are the arguments that you pass to the kernel uh unfortunately when we tried modifying those it actually modified the",
    "start": "1532159",
    "end": "1537440"
  },
  {
    "text": "variables um but when we booted the kernel uh the version of uboot that Belin uh compiled has static boot",
    "start": "1537440",
    "end": "1544679"
  },
  {
    "text": "parameters depending on some other configuration values so what our modifications didn't stick well uboot",
    "start": "1544679",
    "end": "1550760"
  },
  {
    "text": "runs in Ram so is there any way that we could modify those static uh parameters turns out you can uh they left in the",
    "start": "1550760",
    "end": "1557480"
  },
  {
    "text": "functionality for arbitrarily peaking and poking Ram so uh MDB and MMB for",
    "start": "1557480",
    "end": "1563000"
  },
  {
    "text": "Peak and poke uh and since youb boot runs in Ram uh we're able to kind of dump the area in Flash where we think",
    "start": "1563000",
    "end": "1568480"
  },
  {
    "text": "uboot lives it's typically at the end so it can load the kernel at the beginning and execute it nice and simply and we",
    "start": "1568480",
    "end": "1574679"
  },
  {
    "text": "found uh the uh boot parameters for the kernel that it was using so we first",
    "start": "1574679",
    "end": "1581440"
  },
  {
    "text": "tried to do things uh to in nit some easy things like put the system in recovery mode uh single user mode by",
    "start": "1581440",
    "end": "1587799"
  },
  {
    "text": "using uh arguments like one capital S single something like that that would get passed to a knit and say hey don't",
    "start": "1587799",
    "end": "1593440"
  },
  {
    "text": "do your full boot sequence just give us a root shell that didn't work um so then",
    "start": "1593440",
    "end": "1598720"
  },
  {
    "start": "1597000",
    "end": "1645000"
  },
  {
    "text": "we uh said okay well if the normal init process isn't going to do what we want why don't we just set in it to bsh that",
    "start": "1598720",
    "end": "1605799"
  },
  {
    "text": "actually did work kind of it would run bsh but the system looked like it was hung and the reason for this is that",
    "start": "1605799",
    "end": "1611799"
  },
  {
    "text": "there's no Dev console node in the initial uh file system for um when the kernel boots there is no initrd or init",
    "start": "1611799",
    "end": "1619240"
  },
  {
    "text": "ramfs support built into this kernel um so what ends up happening is after boot",
    "start": "1619240",
    "end": "1624919"
  },
  {
    "text": "the normal init script create the dev node for the console um but since we didn't have that at this point in time",
    "start": "1624919",
    "end": "1630720"
  },
  {
    "text": "we tried uh non-interactively uh creating that by using- C uh and passing",
    "start": "1630720",
    "end": "1636720"
  },
  {
    "text": "a command to bsh uh we didn't get that working and we didn't have enough feedback to kind of figure out what was",
    "start": "1636720",
    "end": "1642200"
  },
  {
    "text": "going on so we decided to kind of defer that and move on to a different mechanism modifying the Linux file",
    "start": "1642200",
    "end": "1647600"
  },
  {
    "start": "1645000",
    "end": "1748000"
  },
  {
    "text": "system like we saw you can put a script in the init script that ends up starting up tnet is there anything else we can do",
    "start": "1647600",
    "end": "1653279"
  },
  {
    "text": "we don't necessarily want to run tnet in our case here because we might want to get on the system before the network is up so uh look at doing something like uh",
    "start": "1653279",
    "end": "1660760"
  },
  {
    "text": "removing that hash from that Etsy password file so that we don't need a password to log in uh how do we access",
    "start": "1660760",
    "end": "1666279"
  },
  {
    "text": "the flash uh a lot of the times in uboot there are uh functionalities for manually um Reading Writing Flash and uh",
    "start": "1666279",
    "end": "1673600"
  },
  {
    "text": "sometimes even to mount file systems from flash none of those were in this version of uboot uh so we couldn't",
    "start": "1673600",
    "end": "1679159"
  },
  {
    "text": "arbitrarily access flash in in the stock you boot we could try clipping onto the Flash and the package on here is a small",
    "start": "1679159",
    "end": "1686200"
  },
  {
    "text": "outline package sop pretty easy to clip onto an access with an external Rider but some flashes um notably ones that",
    "start": "1686200",
    "end": "1692760"
  },
  {
    "text": "are like stacked up on kind of small like smaller embedded systems are difficult to get to they're like BGA or",
    "start": "1692760",
    "end": "1698320"
  },
  {
    "text": "sometimes like qfn things like that so we wanted to try to see if we could just purely with software and the console",
    "start": "1698320",
    "end": "1704039"
  },
  {
    "text": "access we already had access the flash instead of physically clipping onto it uh you can actually do this uh you can",
    "start": "1704039",
    "end": "1710720"
  },
  {
    "text": "use load B that's another way to get stuff into the memory uh in uboot from something external in this case we used",
    "start": "1710720",
    "end": "1716200"
  },
  {
    "text": "Kermit to you know ship something up uh with load be from the host and then uh",
    "start": "1716200",
    "end": "1722120"
  },
  {
    "text": "that boot M process that's used to boot the kernel uses those static arguments but uh uh and it actually pulls the",
    "start": "1722120",
    "end": "1728120"
  },
  {
    "text": "kernel from a a fixed place as well but go will just execute whatever you tell it to execute as long as it's properly",
    "start": "1728120",
    "end": "1734360"
  },
  {
    "text": "formatted for you boot to be executed as an application like that so we developed a custom application that can talk to",
    "start": "1734360",
    "end": "1740399"
  },
  {
    "text": "the flash of ver spy and then talk back to the user uh with uart um and just use that to interactively uh modify the",
    "start": "1740399",
    "end": "1747720"
  },
  {
    "text": "flash so now that we can modify the flash what do we add to it um and I mentioned a little bit about what we're",
    "start": "1747720",
    "end": "1753080"
  },
  {
    "start": "1748000",
    "end": "1836000"
  },
  {
    "text": "going to add to it we're going to modify itsy password but how is the file system structured so how do we know where we're going to put this thing uh there's two",
    "start": "1753080",
    "end": "1759880"
  },
  {
    "text": "parts of the file system there's a dynamic part it's a jffs2 uh partition and there's a static part it's a squash",
    "start": "1759880",
    "end": "1765720"
  },
  {
    "text": "FS partition uh the dynamic part can be red right the static part can only be red um and these are kind of Blended",
    "start": "1765720",
    "end": "1772080"
  },
  {
    "text": "together with an overlay file system in this case Mino newer versions of um",
    "start": "1772080",
    "end": "1777200"
  },
  {
    "text": "weimo use overlay FS um but they still use similar semantics where they have a dynamic portion and a static portion uh",
    "start": "1777200",
    "end": "1784480"
  },
  {
    "text": "so what we did then was we read the squash FS off the device we validated",
    "start": "1784480",
    "end": "1791120"
  },
  {
    "text": "it's the same one uh from our firmware update image just so you know we had some some backtracking there it was was",
    "start": "1791120",
    "end": "1798159"
  },
  {
    "text": "exactly the same uh we pulled out the Etsy password killed the hash um and then mounted up that jffs 2 block um on",
    "start": "1798159",
    "end": "1805640"
  },
  {
    "text": "our our uh host development machine you can't just use a regular block device",
    "start": "1805640",
    "end": "1810840"
  },
  {
    "text": "for that because jffs 2 expects a memory technology device and MTD underneath of it uh but there are ways to emulate that",
    "start": "1810840",
    "end": "1817480"
  },
  {
    "text": "with Linux um and so you can look in our source code for how to do that so we mounted that up copied in the new Etsy",
    "start": "1817480",
    "end": "1823200"
  },
  {
    "text": "password file uh unmounted it generated the patch which was just a binary diff between the original jffs2 uh chunk and",
    "start": "1823200",
    "end": "1831120"
  },
  {
    "text": "the modified one and then we shipped that patch up to the device and flashed it using our",
    "start": "1831120",
    "end": "1836360"
  },
  {
    "start": "1836000",
    "end": "1854000"
  },
  {
    "text": "application you can see that process here at the top we we load our program uh we load the patch we use the program",
    "start": "1836360",
    "end": "1842840"
  },
  {
    "text": "to apply the patch uh and just some informative stuff in there we reboot the system snip out all the kind of boot LGS",
    "start": "1842840",
    "end": "1849000"
  },
  {
    "text": "because those are kind of unnecessary type rout and now we're in as root um no password",
    "start": "1849000",
    "end": "1854600"
  },
  {
    "start": "1854000",
    "end": "1926000"
  },
  {
    "text": "required so takeaways from this um in a lot of cases uh people are trying to really lock down embedded systems uh",
    "start": "1854600",
    "end": "1862440"
  },
  {
    "text": "they want to make things like mobile phones and stuff very very secure so you can't poke around on them and and uh muck about with them without having",
    "start": "1862440",
    "end": "1869159"
  },
  {
    "text": "authorized firmware on them or or decryption keys or whatever on these cheaper embedded systems that kind of",
    "start": "1869159",
    "end": "1874639"
  },
  {
    "text": "stuff uh really isn't there uh they don't validate that what they're booting is something that they they're supposed",
    "start": "1874639",
    "end": "1880000"
  },
  {
    "text": "to be booting they don't check to see if you've changed anything in ways that they might not want you to change it so",
    "start": "1880000",
    "end": "1885200"
  },
  {
    "text": "kind of physical access in this case did equal root access and that's probably the case on a lot of these cheaper embedded systems uh Engineers don't like",
    "start": "1885200",
    "end": "1892159"
  },
  {
    "text": "removing their test points and all from from a PCB in production because that means that you have to make a new PCB",
    "start": "1892159",
    "end": "1897880"
  },
  {
    "text": "and test it so they'll kind of just leave those ports on there and just not populate them so things like that are on",
    "start": "1897880",
    "end": "1903120"
  },
  {
    "text": "these devices all the time um and that that open that overlay uh thing that I did to add the Etsy password in like I",
    "start": "1903120",
    "end": "1910039"
  },
  {
    "text": "said uh the overlay kind of mechanism is used in open wrt um and all the other Balon devices so kind of anything that's",
    "start": "1910039",
    "end": "1916639"
  },
  {
    "text": "derived from open wrt is likely to use that sort of dynamic static file system mechanism and you should be able to uh",
    "start": "1916639",
    "end": "1923399"
  },
  {
    "text": "modify it in a similar",
    "start": "1923399",
    "end": "1926679"
  },
  {
    "start": "1926000",
    "end": "1971000"
  },
  {
    "text": "fashion okay so what we've now seen is we've seen two different ways to root uh",
    "start": "1929360",
    "end": "1935279"
  },
  {
    "text": "a weimo device both remotely uh and locally right but we have to remember that the attack surface of any iot",
    "start": "1935279",
    "end": "1940679"
  },
  {
    "text": "device is more than that right it's not just the device often times you see especially online on blogs people are like oh I got into this device that's",
    "start": "1940679",
    "end": "1946919"
  },
  {
    "text": "great and all but there's more than that um there's the cloud that people have to connect to that's that's the whole idea",
    "start": "1946919",
    "end": "1952760"
  },
  {
    "text": "of the iot part of it right excuse me the I part of iot um in this case belcon",
    "start": "1952760",
    "end": "1958760"
  },
  {
    "text": "expressly prohibits independent security researchers from from testing their Cloud infrastructure can kind of",
    "start": "1958760",
    "end": "1964279"
  },
  {
    "text": "understand why right it's a shared resource don't want to take that down um but the other thing we do have in our possession that we can work with is the",
    "start": "1964279",
    "end": "1970480"
  },
  {
    "text": "smartphone app so uh weim Mo's Android app in particular um is built uh with a cross",
    "start": "1970480",
    "end": "1977960"
  },
  {
    "start": "1971000",
    "end": "2026000"
  },
  {
    "text": "platform mobile development framework called Cordova from the Apache Foundation effectiv the idea of this is",
    "start": "1977960",
    "end": "1983519"
  },
  {
    "text": "that you can create your interface in HTML 5 and CSS and obviously that can work on any mobile platform and then",
    "start": "1983519",
    "end": "1990559"
  },
  {
    "text": "they have this JavaScript bridge that allows that interface to talk to or the other code the native code to talk to",
    "start": "1990559",
    "end": "1996679"
  },
  {
    "text": "the interface native code in this case would be obviously Java on uh on Android and then it would be objective c or",
    "start": "1996679",
    "end": "2002799"
  },
  {
    "text": "Swift on iOS devices also interesting with this is that if you just take take the default",
    "start": "2002799",
    "end": "2009360"
  },
  {
    "text": "um project with Cordova and compile it compile it up you get these default permissions you get access to the camera",
    "start": "2009360",
    "end": "2015559"
  },
  {
    "text": "the contacts location the phone and any sort of shared storage on the device like an SD card and in fact the we in",
    "start": "2015559",
    "end": "2023279"
  },
  {
    "text": "the weimo case they have these permissions as well so we started looking at this one of the interesting",
    "start": "2023279",
    "end": "2028679"
  },
  {
    "start": "2026000",
    "end": "2069000"
  },
  {
    "text": "pieces of functionality that's provided by the app is the ability to change the what they call the friendly name the the",
    "start": "2028679",
    "end": "2033760"
  },
  {
    "text": "name that shows up on the device oh excuse me on the app for all your devices this makes a lot of sense say",
    "start": "2033760",
    "end": "2038919"
  },
  {
    "text": "you buy five switches right and you want to plug different lamps into them in different parts of your home living room kitchen bedroom they all come with the",
    "start": "2038919",
    "end": "2045320"
  },
  {
    "text": "name weo switch you obviously want to change that to something more relevant like kitchen lamp or bedroom lamp or",
    "start": "2045320",
    "end": "2051638"
  },
  {
    "text": "whatever so you sent you use the up endpoint control basic event one and you send a message that looks like this with",
    "start": "2051639",
    "end": "2058040"
  },
  {
    "text": "the friendly name change of something like my switch what that'll end up doing is actually rewriting that device description file that's what you see in",
    "start": "2058040",
    "end": "2064358"
  },
  {
    "text": "the bottom and sending that back to the phone with the changed name the modified name now under the hood here's what's",
    "start": "2064359",
    "end": "2071440"
  },
  {
    "start": "2069000",
    "end": "2118000"
  },
  {
    "text": "happening there in one of the um Java classes that um that Balon wrote um you",
    "start": "2071440",
    "end": "2077358"
  },
  {
    "text": "can see here these two lines of code the first one just gets all the information that it knows about from the device",
    "start": "2077359",
    "end": "2082919"
  },
  {
    "text": "right that it got from that device description file it then uses that it runs calls a two- string method on that",
    "start": "2082919",
    "end": "2088878"
  },
  {
    "text": "to create this JavaScript string that's then going to send to the interface right so it's actually as you can see a",
    "start": "2088879",
    "end": "2094200"
  },
  {
    "text": "very simple string concatenation to make that JavaScript string in particular we're interested in what's what happens",
    "start": "2094200",
    "end": "2099480"
  },
  {
    "text": "in that two- string function and it turns out all that two string function does is concatenate together all the information knows about the device in",
    "start": "2099480",
    "end": "2105440"
  },
  {
    "text": "one giant string to include as you see on the right the friendly name and result is they have this JavaScript uh",
    "start": "2105440",
    "end": "2112400"
  },
  {
    "text": "string that is sent to the interface that looks like this and whatever we typed in is our name shows up there the",
    "start": "2112400",
    "end": "2118880"
  },
  {
    "text": "net effect on the device itself is the device actually parses this Json file that's create gets created by all that",
    "start": "2118880",
    "end": "2124079"
  },
  {
    "text": "stuff um and you can see on the left there the friendly name is highlighted to my switch and then you my switch in the app right so we had an interesting",
    "start": "2124079",
    "end": "2130640"
  },
  {
    "text": "thought like what if that name wasn't quite as friendly right was a lot less friendly so we put in what you do",
    "start": "2130640",
    "end": "2137680"
  },
  {
    "text": "normally when you're testing a web app right we put in some some default cross- site scripting type stuff in particular we you know did the",
    "start": "2137680",
    "end": "2144760"
  },
  {
    "text": "alert pwned message uh sent that to device and much to our surprise um it echoed the same thing back to us in the",
    "start": "2144760",
    "end": "2151160"
  },
  {
    "text": "device description file the difference here is it's HTML escaped right that which is fine um the Apple Auto",
    "start": "2151160",
    "end": "2157079"
  },
  {
    "text": "unescaped that stuff but interestingly there was no uh sanitization that took place now if you try to do the same",
    "start": "2157079",
    "end": "2163079"
  },
  {
    "text": "thing on the app if you tried to because obviously there's a there's an interface to change the friendly name of the app it'll give you two errors one it'll tell",
    "start": "2163079",
    "end": "2169480"
  },
  {
    "text": "you that it can only be 30 characters long and two it'll tell you that uh most of the characters that I've typed in",
    "start": "2169480",
    "end": "2174760"
  },
  {
    "text": "here are invalid you do not get that error when you do this by sending a message directly to the device it's",
    "start": "2174760",
    "end": "2180520"
  },
  {
    "text": "probably also important to note here uh at this point I didn't mention it earlier when we're talking about UPnP all the communication with wio devices",
    "start": "2180520",
    "end": "2186760"
  },
  {
    "text": "are unencrypted and unauthenticated when you're on that local network right and that's something actually we've seen some news articles",
    "start": "2186760",
    "end": "2192800"
  },
  {
    "text": "that that kind of get that one wrong um so we can it's very easy for us to send this message now what happens fun enough",
    "start": "2192800",
    "end": "2199880"
  },
  {
    "start": "2198000",
    "end": "2262000"
  },
  {
    "text": "is we get our standard alert box that pops up and says oh okay that ran if you look on the on the left here I've kind",
    "start": "2199880",
    "end": "2205240"
  },
  {
    "text": "of dissected um the string that we put in the malicious string and it's very much similar to the SQL injection case",
    "start": "2205240",
    "end": "2210480"
  },
  {
    "text": "right we close that friendly name um field then we close the Jon the entire",
    "start": "2210480",
    "end": "2216200"
  },
  {
    "text": "Json message then then we close um the current JavaScript statement run our and",
    "start": "2216200",
    "end": "2221920"
  },
  {
    "text": "run a set of Stack statements one of them being our alert box the other one um being the console log message um the",
    "start": "2221920",
    "end": "2228040"
  },
  {
    "text": "reason we use the console.log it's like the dash dash in the SQ like case it effectively comments everything else out it turns out if you put the slash slash",
    "start": "2228040",
    "end": "2234520"
  },
  {
    "text": "in there stuff breaks so we had to come up with another way and that's just what we come came up with oh the other thing to note is we",
    "start": "2234520",
    "end": "2242760"
  },
  {
    "text": "ended the friendly name we didn't put a name in there because we wanted to actually see the effect if if the alert",
    "start": "2242760",
    "end": "2247800"
  },
  {
    "text": "box didn't pop up we still want to know the injection took place if you had put a name in there and not put something",
    "start": "2247800",
    "end": "2253079"
  },
  {
    "text": "that popped up on the screen the user would not know that anything changed right they would just still see the friendly name and the code would run the",
    "start": "2253079",
    "end": "2258839"
  },
  {
    "text": "background they wouldn't there' be no visible cue that we had done anything which brings us to our second",
    "start": "2258839",
    "end": "2266520"
  },
  {
    "text": "demo okay we recorded this one because there's a couple of things going on on the left you see we have the phone up uh",
    "start": "2269760",
    "end": "2275480"
  },
  {
    "text": "the app up on the top screen on the right there you're going to see how our",
    "start": "2275480",
    "end": "2280720"
  },
  {
    "text": "actual attack on this and i' I've enumerated the command here so you can see it's very simple we're just running a script and piping it to neat get on",
    "start": "2280720",
    "end": "2286319"
  },
  {
    "text": "the device okay what you see there is the result that echo's back what we put in you can see we put in a whole bunch",
    "start": "2286319",
    "end": "2291680"
  },
  {
    "text": "of JavaScript this time particularly you can see a URL call back now when we refresh the device you'll see it pull",
    "start": "2291680",
    "end": "2298079"
  },
  {
    "text": "down what our JavaScript did that we inject is actually we just asked it to pull down another file pone right which",
    "start": "2298079",
    "end": "2303280"
  },
  {
    "text": "is a giant Javascript file that contains two pieces of functionality you saw happened there so the initial inject",
    "start": "2303280",
    "end": "2309680"
  },
  {
    "text": "just pulled down that file what that file does is two things the first thing it does is it reads all the pictures",
    "start": "2309680",
    "end": "2316599"
  },
  {
    "text": "from your camera any picture you've taken with your camera and it downloads them to us you just saw that show up in the bottom half of the screen there and",
    "start": "2316599",
    "end": "2323040"
  },
  {
    "text": "then we're going to we're going to show you now that that in fact is a picture the",
    "start": "2323040",
    "end": "2327640"
  },
  {
    "text": "downloaded and it's a wonderful picture of our Hardware guy he didn't know I was going to take",
    "start": "2328560",
    "end": "2333839"
  },
  {
    "text": "that picture by the way um so then as you when that was going on you see the second piece of functionality happened",
    "start": "2333839",
    "end": "2339640"
  },
  {
    "text": "um if you look in the top screen there it's actually beaconing back your location there we go it shows up in the bottom there as well so it's actually taking your GPS location and sending it",
    "start": "2339640",
    "end": "2346359"
  },
  {
    "text": "back to us more interestingly as you see in a moment when we hit the home button on the Android device in the left Pane",
    "start": "2346359",
    "end": "2353280"
  },
  {
    "text": "and we put the app into the background we continue to get your location Beacon to us right so if you had switched to",
    "start": "2353280",
    "end": "2360040"
  },
  {
    "text": "another app it' be the same thing the app still goes in the background so you turn off your lights you hit the home",
    "start": "2360040",
    "end": "2365920"
  },
  {
    "text": "button you put it in your pocket you go to the store because your phone still connects to the internet I still get the",
    "start": "2365920",
    "end": "2371040"
  },
  {
    "text": "location where you are I've just turned your phone into a GPS tracker because your iot's app was kind of",
    "start": "2371040",
    "end": "2379400"
  },
  {
    "start": "2383000",
    "end": "2478000"
  },
  {
    "text": "insecure okay so takeaways from that um first and foremost this has nothing to",
    "start": "2383040",
    "end": "2389160"
  },
  {
    "text": "do with the previous two exploits right we did not need a root to the device for this we used the device's normal",
    "start": "2389160",
    "end": "2394920"
  },
  {
    "text": "functionality set the friendly name to set it to something malicious okay you don't have to have root access to the",
    "start": "2394920",
    "end": "2400440"
  },
  {
    "text": "device I think it's really important to stress the second thing um is we want to talk about the second and third order of",
    "start": "2400440",
    "end": "2405960"
  },
  {
    "text": "effects of iot that's what we're starting to call this stuff so the first order effect is um I break into someone's device whatever you focus on",
    "start": "2405960",
    "end": "2412160"
  },
  {
    "text": "and I put a Boton out there and it DSes Brian krebs's website oh boy that's terrible but these are the second third",
    "start": "2412160",
    "end": "2417640"
  },
  {
    "text": "order effects right why is it the case that if I if I can do something to your to your device I can turn your phone",
    "start": "2417640",
    "end": "2423640"
  },
  {
    "text": "into a GPS tracker right why is it the case that an i device like a Crockpot could make this stuff less secure right",
    "start": "2423640",
    "end": "2431440"
  },
  {
    "text": "we like to think of this particularly interesting case where imagine I was some bad guy and I had done this uh to your device uh and I started downloading",
    "start": "2431440",
    "end": "2437880"
  },
  {
    "text": "all the pictures and I found that there were some uh some pictures of of you maybe cheating on your spouse and I was",
    "start": "2437880",
    "end": "2443200"
  },
  {
    "text": "B oh this is great this is great blackmail stuff and I go back and I blackmail you you got to pay me all this money it's this ridiculous scenario",
    "start": "2443200",
    "end": "2449200"
  },
  {
    "text": "right all because you wanted to have a Crockpot that could connect to the internet right it seems a little",
    "start": "2449200",
    "end": "2455160"
  },
  {
    "text": "ridiculous right that we now have to kind of put on the same scale you know weigh the security of your phone with",
    "start": "2455160",
    "end": "2461760"
  },
  {
    "text": "having an Internet connected crockpot that doesn't seem like it should be on the same scale we also think that as",
    "start": "2461760",
    "end": "2466839"
  },
  {
    "text": "time goes on and and this stuff gets more prolific you're going to see more and more of these second and third order effects this is just one and it's the",
    "start": "2466839",
    "end": "2472520"
  },
  {
    "text": "first instance that we know of that anyone's using an iot device to kind of hack into your phone and run arbitrary",
    "start": "2472520",
    "end": "2479119"
  },
  {
    "start": "2478000",
    "end": "2525000"
  },
  {
    "text": "code okay so uh disclosure timeline like any good security researcher we disclose",
    "start": "2479160",
    "end": "2484800"
  },
  {
    "text": "these things to to Balon initial disclosure happened on August 11th um they verified them same day I think this",
    "start": "2484800",
    "end": "2490800"
  },
  {
    "text": "is important I want to stress that you know one of the reasons we did this is is we also want to make their products better right we want to have a good relationship with vendors as good",
    "start": "2490800",
    "end": "2497119"
  },
  {
    "text": "Security Professionals we should be doing that um so the same day within an hour they actually got back to us and verified that all of our vulnerabilities",
    "start": "2497119",
    "end": "2503960"
  },
  {
    "text": "work on newer versions of software than we had that's great a couple weeks later they actually came out with the fix to",
    "start": "2503960",
    "end": "2509839"
  },
  {
    "text": "the um the app and on the Play Store and gave us a nice little credit there um",
    "start": "2509839",
    "end": "2514880"
  },
  {
    "text": "and then um they finally figured out how to want to fix the sequel injection of vulnerability a few few weeks later and",
    "start": "2514880",
    "end": "2519960"
  },
  {
    "text": "then just this week they finally released the firmware update so go and update your",
    "start": "2519960",
    "end": "2525400"
  },
  {
    "text": "firmware so lastly you want to note that all of the code for how we did all this stuff we're going to release online uh",
    "start": "2525400",
    "end": "2531720"
  },
  {
    "text": "it's not up now but it will be um also on our blog at invinci labs.com we're",
    "start": "2531720",
    "end": "2536839"
  },
  {
    "text": "going to take each of the three things we talked about today and we will have um uh blog articles out there for them",
    "start": "2536839",
    "end": "2542720"
  },
  {
    "text": "um for the SQL uh light is a shell script stuff that's also going to be a separate blog cuz again we we hope",
    "start": "2542720",
    "end": "2547760"
  },
  {
    "text": "that's something that the community can reuse and if you have an iot device or thinking of creating one and you haven't",
    "start": "2547760",
    "end": "2553880"
  },
  {
    "text": "talked to us or somebody like us we think that's probably a good idea that you do that because nobody wants their device on this slide and with that thank",
    "start": "2553880",
    "end": "2561040"
  },
  {
    "text": "you for coming and we'll take any questions you might [Applause]",
    "start": "2561040",
    "end": "2572320"
  },
  {
    "text": "have no nobody",
    "start": "2575079",
    "end": "2579119"
  },
  {
    "text": "well of Cur it how bad is it good is it for belcon",
    "start": "2580680",
    "end": "2588559"
  },
  {
    "text": "so the question was how how bad is it or how good is it for belcon in particular I assume you're asking just the landscape in general oh so I I think",
    "start": "2588559",
    "end": "2596119"
  },
  {
    "text": "yeah belcon is probably better than than a lot of folks I mean as you saw from the headlines at the beginning they've",
    "start": "2596119",
    "end": "2601599"
  },
  {
    "text": "had some issues in the past and they've done a lot to try and fix those um a lot of that low hang fruit stuff like those",
    "start": "2601599",
    "end": "2606880"
  },
  {
    "text": "those command injections with with you know XML elements weren't there um we actually had to work at this one you saw",
    "start": "2606880",
    "end": "2612480"
  },
  {
    "text": "this is a multi-step process even though there was a SQL injection it took a lot more to get it to run uh as Joe told you",
    "start": "2612480",
    "end": "2617720"
  },
  {
    "text": "they actually did a pretty good job on the hardware side of things um you know there there was a password that wasn't easily cracked um they taken a whole",
    "start": "2617720",
    "end": "2623960"
  },
  {
    "text": "bunch of functionality out of the boot loader um yeah they left some test points on and whatnot but but generally",
    "start": "2623960",
    "end": "2629480"
  },
  {
    "text": "I think that's probably better than the average case iot product and and again that's one of the reasons we did this is that we didn't want to just say hey look",
    "start": "2629480",
    "end": "2635760"
  },
  {
    "text": "we we found something you know on a trip and bought it at the airport and turns out that you know we can break into this",
    "start": "2635760",
    "end": "2641319"
  },
  {
    "text": "thing you know it seems kind of obvious right we want to take somebody that really cares about this stuff as a name brand and consumer electronics and we",
    "start": "2641319",
    "end": "2647160"
  },
  {
    "text": "did find like at least another device where on a user accessible gooey thing on like a screen you could type",
    "start": "2647160",
    "end": "2652920"
  },
  {
    "text": "something in and it would do one of those back tick type command executions and and root the device so there there",
    "start": "2652920",
    "end": "2658640"
  },
  {
    "text": "are that kind of low hanging fruits still in other production",
    "start": "2658640",
    "end": "2663760"
  },
  {
    "text": "devices any other questions one question about the first one was",
    "start": "2663800",
    "end": "2671040"
  },
  {
    "text": "based on the standard open source like liace operating system so",
    "start": "2671040",
    "end": "2676960"
  },
  {
    "text": "what system so the question is what about um",
    "start": "2677040",
    "end": "2683359"
  },
  {
    "text": "iot devices that don't use Linux Bas systems most of the ones we've looked at do use Linux Bas systems um in fact most",
    "start": "2683359",
    "end": "2690079"
  },
  {
    "text": "of the ones that I've even seen at other conference presentations do use Linux Bas systems so I can actually talk about",
    "start": "2690079",
    "end": "2695520"
  },
  {
    "text": "experience we've had with a non-linux BAS ones",
    "start": "2695520",
    "end": "2702319"
  },
  {
    "text": "yes so the hardware attack you mean yeah yeah okay so the question was sorry let me repeat it they don't seem to be",
    "start": "2715599",
    "end": "2721520"
  },
  {
    "text": "checking their firmware updates so would the signatures on them so um would our firmware taex will work one thing I'll",
    "start": "2721520",
    "end": "2727280"
  },
  {
    "text": "Noti is there in the firmware update process we looked into it they actually are doing signature checks um when they download stuff uh it's not encrypted but",
    "start": "2727280",
    "end": "2734000"
  },
  {
    "text": "it is signed so they will do that check and not update if you don't have the correct signature but I'll let Joe talk about whether it should still work on",
    "start": "2734000",
    "end": "2739200"
  },
  {
    "text": "the hardware side of things the hardware stuff utilizes the bootloader and their update process doesn't appear to modify",
    "start": "2739200",
    "end": "2745400"
  },
  {
    "text": "the bootloader at all so we should be able to still get our local rout in uh newer versions of firmware unless they",
    "start": "2745400",
    "end": "2751000"
  },
  {
    "text": "modify the boot weather their normal firmware updates kind of an AB process makes it safe you're running in B and",
    "start": "2751000",
    "end": "2757079"
  },
  {
    "text": "they change a and then the boot weather validates that a got done correctly and then it switches to a um but there's no",
    "start": "2757079",
    "end": "2762559"
  },
  {
    "text": "alternate place to put the boot weather so if they were to you know if you were to unplug it in the middle you'd brick your device um so they're probably going",
    "start": "2762559",
    "end": "2769079"
  },
  {
    "text": "to be less likely to modify the bootloader ever in an",
    "start": "2769079",
    "end": "2773880"
  },
  {
    "text": "update the hardware attack but you only manage to hack your own device not gaing",
    "start": "2774240",
    "end": "2779760"
  },
  {
    "text": "any information to attack so the question is uh with the hardware attack we only rooted our own",
    "start": "2779760",
    "end": "2785280"
  },
  {
    "text": "device and not any one uh remotely on the cloud that's correct uh and that was the intent we wanted to get more",
    "start": "2785280",
    "end": "2791160"
  },
  {
    "text": "introspection into our device so that we could make a better uh remote exploit",
    "start": "2791160",
    "end": "2796319"
  },
  {
    "text": "make it more reliable or even you know Scott actually figured it out before I got the the local route but if he hadn't",
    "start": "2796319",
    "end": "2802000"
  },
  {
    "text": "then we could have used that to try to help us see what we were doing wrong yeah I mean so I think in that case the",
    "start": "2802000",
    "end": "2808359"
  },
  {
    "text": "hardware thing just became one of those issues where well wait we have the device physically obviously we can get a",
    "start": "2808359",
    "end": "2813680"
  },
  {
    "text": "root shell on the device cuz we have it and it became a little difficult when trying a bunch of things said okay now we're going to make this happen",
    "start": "2813680",
    "end": "2820079"
  },
  {
    "text": "right any other questions please how long did the first attack with the SQL injection take to figure out and analyze",
    "start": "2820079",
    "end": "2827280"
  },
  {
    "text": "and yeah so it took I'll be honest it took actually I mean of course we weren't doing this fulltime right sort",
    "start": "2827280",
    "end": "2832319"
  },
  {
    "text": "of nights and weekends kind of work but it probably took us a good two months um and the reason is is because as I said",
    "start": "2832319",
    "end": "2837720"
  },
  {
    "text": "the SQL injection itself doesn't give you a whole lot right so um someone",
    "start": "2837720",
    "end": "2843319"
  },
  {
    "text": "asked me before um how long it take me to figure out the whole sequel light as a shell script thing and that was",
    "start": "2843319",
    "end": "2848640"
  },
  {
    "text": "actually 2 hours um it wasn't actually that hard once you figured out what the ash shell is going to do um but getting",
    "start": "2848640",
    "end": "2854520"
  },
  {
    "text": "to the point where you're like what else can I use besides PHP right to try and do the same type of thing I me that was",
    "start": "2854520",
    "end": "2860440"
  },
  {
    "text": "just an idea that we had maybe we could do that took a while so it did take quite a bit of time to figure out how to",
    "start": "2860440",
    "end": "2865960"
  },
  {
    "text": "gain execution just from that that simple that simple vulnerability also we looked at some other things we thought",
    "start": "2865960",
    "end": "2871200"
  },
  {
    "text": "might be vulnerable in that time okay so we're going to ask for just one more question because we're about to",
    "start": "2871200",
    "end": "2877040"
  },
  {
    "text": "run out of the time unless there are no more questions all right well thank you very",
    "start": "2877040",
    "end": "2882960"
  },
  {
    "text": "much [Applause]",
    "start": "2882960",
    "end": "2888619"
  }
]