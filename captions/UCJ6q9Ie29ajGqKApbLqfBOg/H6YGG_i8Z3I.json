[
  {
    "text": "all right welcome the topic today is application intrusion detection this uh is gonna differ a little bit",
    "start": "160",
    "end": "6879"
  },
  {
    "text": "from probably the intrusion detection that you're expecting um the idea of intrusion detection",
    "start": "6879",
    "end": "15040"
  },
  {
    "text": "is that you are writing an application yourself the application and application",
    "start": "15120",
    "end": "20720"
  },
  {
    "text": "level intrusions should be detected inside your application there's no reason to",
    "start": "20720",
    "end": "25920"
  },
  {
    "text": "have an actual network ids sitting there performing state checking validation etc",
    "start": "25920",
    "end": "32480"
  },
  {
    "text": "on the data that's traveling to and from your application because your application is going to have to handle",
    "start": "32480",
    "end": "37600"
  },
  {
    "text": "it anyway so because you designed the um the",
    "start": "37600",
    "end": "42640"
  },
  {
    "text": "application and you know exact operating constraints you know the exact size of a",
    "start": "42640",
    "end": "47920"
  },
  {
    "text": "username exactly when a specific message should arrive throughout the design of the application",
    "start": "47920",
    "end": "53920"
  },
  {
    "text": "you create you should definitely be able to know wait a minute this is a buffer overflow attempt this is going to be an",
    "start": "53920",
    "end": "60480"
  },
  {
    "text": "authorization failure this is an out of state file transfer request whatever it",
    "start": "60480",
    "end": "65600"
  },
  {
    "text": "may be the architecture should",
    "start": "65600",
    "end": "70880"
  },
  {
    "text": "actually be secure built in your application so",
    "start": "70880",
    "end": "76240"
  },
  {
    "text": "designing explicitly most people follow a what we call a",
    "start": "76240",
    "end": "82720"
  },
  {
    "text": "design to work model one that a specific user needs to make a request retrieve",
    "start": "82720",
    "end": "88400"
  },
  {
    "text": "some data perform a sort a search etc retrieve the data back and everything",
    "start": "88400",
    "end": "93439"
  },
  {
    "text": "fine and dandy and of course in a world without hackers that would be enough however a design not to fail scenario",
    "start": "93439",
    "end": "101280"
  },
  {
    "text": "is one that we would propose that you use the difference between these two designed to work and designed",
    "start": "101280",
    "end": "107360"
  },
  {
    "text": "not to fail it isn't just the inverse of the other a design not to fail scenario scenario",
    "start": "107360",
    "end": "114479"
  },
  {
    "text": "will actually propose that an assertion that something is true is not the same as an assertion that",
    "start": "114479",
    "end": "121200"
  },
  {
    "text": "something is false is that the inverse is true the correct way to actually perform a",
    "start": "121200",
    "end": "127119"
  },
  {
    "text": "check in a design not to fail scenario is that you have but one state not two",
    "start": "127119",
    "end": "133599"
  },
  {
    "text": "states so you have most most people will return a true or false from a function and say",
    "start": "133599",
    "end": "139680"
  },
  {
    "text": "if this user is authenticated will return true otherwise we return false",
    "start": "139680",
    "end": "145520"
  },
  {
    "text": "upon executing such function the check to assert the success or",
    "start": "145520",
    "end": "151360"
  },
  {
    "text": "failure of that function one might say a cert that is not equal to true",
    "start": "151360",
    "end": "157519"
  },
  {
    "text": "well there are many other values that could have been returned from the function we could have performed a stack based",
    "start": "157519",
    "end": "163680"
  },
  {
    "text": "buffer overflow or a heap overflow in which case the does not equal true would",
    "start": "163680",
    "end": "168800"
  },
  {
    "text": "be would cover all cases and yet assert that it is false so if we say the authentication fail",
    "start": "168800",
    "end": "176319"
  },
  {
    "text": "return false if it is not equal to true then perform this code return failure get rid of the",
    "start": "176319",
    "end": "183840"
  },
  {
    "text": "user if we were to say if this state is equal to false",
    "start": "183840",
    "end": "189200"
  },
  {
    "text": "then per chance we're not even going to execute the code that we want to get rid of the user because the return value is",
    "start": "189200",
    "end": "196239"
  },
  {
    "text": "something other than true or false it is in fact a third value",
    "start": "196239",
    "end": "202239"
  },
  {
    "text": "so in times when we design an application and write the code to be explicit",
    "start": "202239",
    "end": "208080"
  },
  {
    "text": "all of your failure cases will become security cases i'm sure everyone will agree with me in",
    "start": "208080",
    "end": "214000"
  },
  {
    "text": "a production environment if i can cause some type of exception even if it doesn't lead to executing arbitrary code",
    "start": "214000",
    "end": "220400"
  },
  {
    "text": "on your system if i can cause it to crash then a hacker could misuse that to",
    "start": "220400",
    "end": "225519"
  },
  {
    "text": "cause denial of cervix etc so all failure cases",
    "start": "225519",
    "end": "230560"
  },
  {
    "text": "are going to be attacks in your production environment hence you should always treat them so in your code",
    "start": "230560",
    "end": "236480"
  },
  {
    "text": "we're going to detect deviations that's just going to happen the user authenticates three times it",
    "start": "236480",
    "end": "241920"
  },
  {
    "text": "fails anything beyond that we say hey maybe this person is brute forcing it makes sense that not only would we",
    "start": "241920",
    "end": "248879"
  },
  {
    "text": "assert specific cases and always return failure there's going to be deviations in the common usage of a system by which",
    "start": "248879",
    "end": "256000"
  },
  {
    "text": "a hacker will use a common entry point multiple times and we can't just say",
    "start": "256000",
    "end": "261040"
  },
  {
    "text": "after the first failure failed authentication attempt okay go away you know block this ip address etc so there",
    "start": "261040",
    "end": "267919"
  },
  {
    "text": "has to be some type of deviation where a little bit is okay but a lot is definitely not okay",
    "start": "267919",
    "end": "274880"
  },
  {
    "text": "and within application intrusion detection this is all for naught if we cannot notify people",
    "start": "274880",
    "end": "281040"
  },
  {
    "text": "if your application says someone's brute forcing me right now and yet no person is going to see that for a week it",
    "start": "281040",
    "end": "287759"
  },
  {
    "text": "absolutely makes no sense to do any of this because the hacker whether you're logging or not",
    "start": "287759",
    "end": "293280"
  },
  {
    "text": "is going to still have a successful brute force attack",
    "start": "293280",
    "end": "298720"
  },
  {
    "text": "your user requests are going to be designed designed defined",
    "start": "298720",
    "end": "304720"
  },
  {
    "text": "they're going to be defined by the server not by the client at no time can a client ever say i'm",
    "start": "304720",
    "end": "312160"
  },
  {
    "text": "sending you a string and it's going to be this size obviously this makes sense because i'll",
    "start": "312160",
    "end": "318479"
  },
  {
    "text": "just tell you i'm going to send you 5 000 bytes and if you only expecting 128 then",
    "start": "318479",
    "end": "325520"
  },
  {
    "text": "of course that could result in a buffer overflow at the same time i could tell you that i'm sending five and send you 5",
    "start": "325520",
    "end": "332639"
  },
  {
    "text": "000 in which case that might result in a buffer overflow if the client is always required to send",
    "start": "332639",
    "end": "339600"
  },
  {
    "text": "32 bytes 32 bytes of data for the username the username is only 9 characters in length",
    "start": "339600",
    "end": "346080"
  },
  {
    "text": "i'm still going to send you 32 bytes it's always 32 bytes the rest of the string can be null zeros",
    "start": "346080",
    "end": "353039"
  },
  {
    "text": "zero terminated string and the rest is just some known state but i'm always going to send you the exact same data",
    "start": "353039",
    "end": "360080"
  },
  {
    "text": "with that said now you can actually create a model by which your requests and answers have a very specific size",
    "start": "360080",
    "end": "367440"
  },
  {
    "text": "and that size is always going to be expected a certain value based on the compilation of the",
    "start": "367440",
    "end": "374560"
  },
  {
    "text": "server in a certain state",
    "start": "374560",
    "end": "378520"
  },
  {
    "text": "so here's just a quick example assume for a moment we have a server by which when we compile it there are very",
    "start": "385280",
    "end": "392080"
  },
  {
    "text": "specific constraints that exist within the server the max size of the username is 33 bytes and that includes null zero",
    "start": "392080",
    "end": "398880"
  },
  {
    "text": "at any point in time we can say if the string length of this string is equal to or greater than",
    "start": "398880",
    "end": "406960"
  },
  {
    "text": "this define then it's out of bounds it is a buffer overflow attempt",
    "start": "406960",
    "end": "412160"
  },
  {
    "text": "the reason why we know it's a buffer overflow attempt is because the client should should also be compiled with this",
    "start": "412160",
    "end": "418639"
  },
  {
    "text": "same header file and would thus not even allow the user to specify a username",
    "start": "418639",
    "end": "424160"
  },
  {
    "text": "larger than 32 characters 33 including the null zero in that case the moment",
    "start": "424160",
    "end": "430080"
  },
  {
    "text": "you actually achieve a failure case of comparison for the length of this buffer",
    "start": "430080",
    "end": "435440"
  },
  {
    "text": "you can say i am being hacked someone connected to you i am being hacked by this person they attempted to",
    "start": "435440",
    "end": "441599"
  },
  {
    "text": "authenticate this was their attempted authentication their attempted password all of that infinite information can",
    "start": "441599",
    "end": "447280"
  },
  {
    "text": "then be logged somewhere where you can audit it at a later time in the case of probably attempts to",
    "start": "447280",
    "end": "454240"
  },
  {
    "text": "buffer overflow your server that may not be something that you would instantly want to know about assuming you are",
    "start": "454240",
    "end": "460720"
  },
  {
    "text": "mitigating it properly your security personnel probably don't need their pager going off every single time some",
    "start": "460720",
    "end": "467440"
  },
  {
    "text": "hacker just finds your website and tries to perform a buffer overflow however depending on the",
    "start": "467440",
    "end": "473840"
  },
  {
    "text": "number of times this occurs which you can now add timing into your failure",
    "start": "473840",
    "end": "479120"
  },
  {
    "text": "case assume you say oh if we see this buffer overflow event happen a hundred times in a second",
    "start": "479120",
    "end": "486560"
  },
  {
    "text": "per chance this is going to cause denial of service just due to the fact that you're processing so many requests",
    "start": "486560",
    "end": "492800"
  },
  {
    "text": "then at that point in time you would escalate the error and notify personnel",
    "start": "492800",
    "end": "499199"
  },
  {
    "text": "what's also nice about having very specific constraints in any application that you write",
    "start": "499199",
    "end": "504560"
  },
  {
    "text": "is that you can compile your servers and clients with different",
    "start": "504560",
    "end": "510960"
  },
  {
    "text": "extents to test their security in this case i would compile my server",
    "start": "510960",
    "end": "516880"
  },
  {
    "text": "application with these constraints and then i would change for example the size",
    "start": "516880",
    "end": "522959"
  },
  {
    "text": "of the username 265 which would be 64 valid characters and of course the null zero i recompiled",
    "start": "522959",
    "end": "530160"
  },
  {
    "text": "this and now my client through the normal processing of the client will allow me to enter a username",
    "start": "530160",
    "end": "536160"
  },
  {
    "text": "of 64 bytes or characters at which time i connect to the server",
    "start": "536160",
    "end": "541360"
  },
  {
    "text": "and through the normal processing the server is going to say ah weight 64. that's too large",
    "start": "541360",
    "end": "548399"
  },
  {
    "text": "immediately signal buffer overflow so now you can use the application you're writing",
    "start": "548399",
    "end": "553839"
  },
  {
    "text": "as a tool to test the functionality of your application at least in the situation of the sizes of data",
    "start": "553839",
    "end": "563480"
  },
  {
    "text": "so basic failure case if the length is greater less than whatever it is you're",
    "start": "566640",
    "end": "571839"
  },
  {
    "text": "checking for do the work otherwise we have a buffer overflow obviously this is very simple exploit to avoid",
    "start": "571839",
    "end": "578560"
  },
  {
    "text": "is probably one of the easiest situations however the else you know so a lot of people just don't",
    "start": "578560",
    "end": "584720"
  },
  {
    "text": "do this here you can actually add auditing information you can push off to",
    "start": "584720",
    "end": "590560"
  },
  {
    "text": "security notification objects in many cases with the sockets that i deal with i immediately say you try to",
    "start": "590560",
    "end": "597279"
  },
  {
    "text": "buffer overflow me i'm just going to disconnect the socket you're gone go away",
    "start": "597279",
    "end": "602800"
  },
  {
    "text": "it's good to not let people who are trying to attack you stay connected other failure cases in the case of like",
    "start": "602880",
    "end": "608959"
  },
  {
    "text": "a state machine if the request is to log in hey have you already logged in how is it that you're",
    "start": "608959",
    "end": "615200"
  },
  {
    "text": "violating the state if i wrote the application there's one way to use it there's one way to authenticate i'm",
    "start": "615200",
    "end": "620480"
  },
  {
    "text": "going to validate that situation and move on if you're trying to authenticate twice that's outside the operating",
    "start": "620480",
    "end": "625600"
  },
  {
    "text": "constraints of the program hence you're trying to hack me because my client would not do that",
    "start": "625600",
    "end": "631440"
  },
  {
    "text": "immediately log escalate whatever notification to personnel disconnect the socket walk away",
    "start": "631440",
    "end": "639440"
  },
  {
    "text": "in a real world deployment all of these type of situations are attempts at hacking your application",
    "start": "640160",
    "end": "647600"
  },
  {
    "text": "you can assume in the case of web apps that any person can just pull up a",
    "start": "647600",
    "end": "653040"
  },
  {
    "text": "browser connect to your server and begin testing it in the case of a tcp",
    "start": "653040",
    "end": "659519"
  },
  {
    "text": "scenario or maybe even udp where i have to write both the client and server apps",
    "start": "659519",
    "end": "665279"
  },
  {
    "text": "in the real world they're going to a hacker is most likely going to have to get a hold of that client software of",
    "start": "665279",
    "end": "670720"
  },
  {
    "text": "the server software to perform testing so you know that any out of bounds situations with the case of like",
    "start": "670720",
    "end": "678000"
  },
  {
    "text": "a tcp client and server scenario it's much more accurate to say",
    "start": "678000",
    "end": "683440"
  },
  {
    "text": "we saw anything out of bounds we're going to disconnect you audit log your information in the case of web scenario",
    "start": "683440",
    "end": "689519"
  },
  {
    "text": "per chance there might be a lot of errors that you would just handle and pass along and audit and you wouldn't necessarily escalate them as quickly",
    "start": "689519",
    "end": "696800"
  },
  {
    "text": "merely because of the commonality and the ease of anyone in the world connecting to your web app again it kind",
    "start": "696800",
    "end": "702160"
  },
  {
    "text": "of is an issue of risk management and how much you want to know functional failures and application",
    "start": "702160",
    "end": "708320"
  },
  {
    "text": "during runtime are security flaws i cannot stress that more",
    "start": "708320",
    "end": "714519"
  },
  {
    "text": "okay why would you use this why would you care i think the points are probably",
    "start": "720640",
    "end": "725839"
  },
  {
    "text": "pretty obvious to detect hackers when they are trying to hack your application",
    "start": "725839",
    "end": "730959"
  },
  {
    "text": "to prevent them from doing so and of course offer offer some type of protection",
    "start": "730959",
    "end": "736399"
  },
  {
    "text": "users will always forget passwords so obviously you're always going to have to have some type of deviation detection",
    "start": "736399",
    "end": "743279"
  },
  {
    "text": "authentication system notifying such failures and security events has occurred you're going to want to do this but at the same time the authentication",
    "start": "743279",
    "end": "750079"
  },
  {
    "text": "system is going to be separate from other type of handlers and events so you will have segmented reporting but you will",
    "start": "750079",
    "end": "756720"
  },
  {
    "text": "have detection based on a specific functionality of your application",
    "start": "756720",
    "end": "762480"
  },
  {
    "text": "it in like a web app for example probably failures that exist inside of",
    "start": "762480",
    "end": "768480"
  },
  {
    "text": "request to a sql database a couple tiers behind your presentation layer if you were to see something there almost",
    "start": "768480",
    "end": "774480"
  },
  {
    "text": "anything you would probably immediately want to escalate that the detection of that situation is very important and yet",
    "start": "774480",
    "end": "780399"
  },
  {
    "text": "the detection of many type of potential vulnerabilities that someone's consistently hitting your",
    "start": "780399",
    "end": "786959"
  },
  {
    "text": "website from a specific ip address across the world and doing sql injection attacks when you know you're completely",
    "start": "786959",
    "end": "793040"
  },
  {
    "text": "secure from that because you've tested that of course in that situation obviously you might",
    "start": "793040",
    "end": "798720"
  },
  {
    "text": "just want to run over to the is people and say hey can you block these people from making requests you know things",
    "start": "798720",
    "end": "803920"
  },
  {
    "text": "like that you don't want to allow hackers to have the ability to actually perform denial of service against any of",
    "start": "803920",
    "end": "810320"
  },
  {
    "text": "your application intrusion detection methods which is more prevalent in the scenario of a web app or something that",
    "start": "810320",
    "end": "816560"
  },
  {
    "text": "has a massive anonymous ability to connect to it",
    "start": "816560",
    "end": "822399"
  },
  {
    "text": "prevention if you see a massive amount of brute force attempts one can say maybe you",
    "start": "824880",
    "end": "831680"
  },
  {
    "text": "should do an audit let's focus our money where our problems are people are doing all kinds of brute",
    "start": "831680",
    "end": "837600"
  },
  {
    "text": "force attacks let's put some money into that let's let's validate that there's no way these people are going to get in",
    "start": "837600",
    "end": "843440"
  },
  {
    "text": "let's look at the time to brute force is there any way we can slow down the response time",
    "start": "843440",
    "end": "848560"
  },
  {
    "text": "you can actually look at the statistical analysis of the type of attacks maybe even inject a little hacker",
    "start": "848560",
    "end": "855120"
  },
  {
    "text": "profiling there to see well how tricky is this type of intact to be pulled off can it be done with a tool is this a",
    "start": "855120",
    "end": "861440"
  },
  {
    "text": "manually is this a an attack that is required to be done manually do i need some type of injection tool is it a",
    "start": "861440",
    "end": "867279"
  },
  {
    "text": "pre-written tool you know maybe written by the hacker you can look at all the types of data that are arriving because",
    "start": "867279",
    "end": "872480"
  },
  {
    "text": "you're reviewing it you're auditing it etc in which case you can then focus",
    "start": "872480",
    "end": "877839"
  },
  {
    "text": "other proactive measures into development of maybe the next version of your program patches and updates etc to",
    "start": "877839",
    "end": "884880"
  },
  {
    "text": "try to mitigate the ways that hackers are trying to get into your application at this point",
    "start": "884880",
    "end": "892720"
  },
  {
    "text": "and also you'll you'll know where you're protected all the time",
    "start": "893279",
    "end": "898399"
  },
  {
    "text": "because you have written the code you've done the tests and you will know there is no possible way for someone to",
    "start": "898399",
    "end": "903920"
  },
  {
    "text": "connect to me and cause a buffer overflow in this library because i have explicitly defined the constraints and i",
    "start": "903920",
    "end": "910240"
  },
  {
    "text": "know because i've tested the bottom and the top of all possibilities of data sent here and within that state machine",
    "start": "910240",
    "end": "917920"
  },
  {
    "text": "of that test then you can be sure this small library is secure of course",
    "start": "917920",
    "end": "923120"
  },
  {
    "text": "the moment that we begin to interlock all the pieces into what turns into a very large program",
    "start": "923120",
    "end": "928959"
  },
  {
    "text": "it becomes much more difficult to assert that at any time but this type of information will give you",
    "start": "928959",
    "end": "934959"
  },
  {
    "text": "the feeling that i'm going to sleep well tonight feeling that you are in fact protected",
    "start": "934959",
    "end": "940880"
  },
  {
    "text": "another note about network intrusion detection systems if you actually created a system by",
    "start": "940880",
    "end": "948800"
  },
  {
    "text": "which a network ids could sniff a packet from the network validate the state",
    "start": "948800",
    "end": "955040"
  },
  {
    "text": "should this packet be going this way what level of what point in time is this packet being sent who is it being sent",
    "start": "955040",
    "end": "961440"
  },
  {
    "text": "to from all the issues about routing spoofing etc if you could actually do",
    "start": "961440",
    "end": "967759"
  },
  {
    "text": "that that point that might be nice to do however i would assume when i connect to my bank",
    "start": "967759",
    "end": "974480"
  },
  {
    "text": "that there's not an ids performing application layer or network ids on my data because it's",
    "start": "974480",
    "end": "982160"
  },
  {
    "text": "supposed to be encrypted so another thought for you if you have",
    "start": "982160",
    "end": "987680"
  },
  {
    "text": "to do network ids well your network has to be able to analyze data that's going to be encrypted because it",
    "start": "987680",
    "end": "993839"
  },
  {
    "text": "always should be encrypted because we want to add security right so a network intrusions detection system",
    "start": "993839",
    "end": "1000880"
  },
  {
    "text": "is never going to successfully be able to pack and filter it's never going to be able to monitor",
    "start": "1000880",
    "end": "1006079"
  },
  {
    "text": "state information and it's never going to be able to look at the packet assuming you're actually establishing a cryptographic tunnel",
    "start": "1006079",
    "end": "1012560"
  },
  {
    "text": "between the applications anyway hence ids network ids cannot be used for",
    "start": "1012560",
    "end": "1018480"
  },
  {
    "text": "application layer security whatsoever",
    "start": "1018480",
    "end": "1022240"
  },
  {
    "text": "so what we want to detect are these all the exposures right we want to detect buffer",
    "start": "1023680",
    "end": "1029038"
  },
  {
    "text": "overflows injections hopefully maybe even information leakage which could stem from authorization",
    "start": "1029039",
    "end": "1035038"
  },
  {
    "text": "failures replay attacks and somewhat session hijacking um",
    "start": "1035039",
    "end": "1041918"
  },
  {
    "text": "the fine line of hijacking is that there's in many situations there's really no way to 100",
    "start": "1041919",
    "end": "1047438"
  },
  {
    "text": "mitigate that at all times",
    "start": "1047439",
    "end": "1051559"
  },
  {
    "text": "okay so there's exposures that you're going to mitigate and there's exposures that",
    "start": "1052559",
    "end": "1057679"
  },
  {
    "text": "you're going to monitor a situation like a buffer overflow you mitigate it someone sends too much yeah",
    "start": "1057679",
    "end": "1063039"
  },
  {
    "text": "go away you know you know that you can see that in that situation something like a dns poisoning is going",
    "start": "1063039",
    "end": "1069280"
  },
  {
    "text": "to be a little bit different no one's going to just send you a packet and say by the way i tried to get your application but i was poisoned by dns i",
    "start": "1069280",
    "end": "1076080"
  },
  {
    "text": "ended up going somewhere else those situations you're always going to have to monitor so there's always going",
    "start": "1076080",
    "end": "1081200"
  },
  {
    "text": "to be those two types and here we'll we're going to do mitigating now and then we'll look at monitoring",
    "start": "1081200",
    "end": "1089200"
  },
  {
    "text": "okay so buffer overflow let's look at a buffer overflow real quick",
    "start": "1090320",
    "end": "1095840"
  },
  {
    "text": "so in the core of this application is a function called socket translate message and i'll just",
    "start": "1098000",
    "end": "1104880"
  },
  {
    "text": "cruise down from the top so this function is called",
    "start": "1104880",
    "end": "1110160"
  },
  {
    "text": "to look at the data incoming on the socket so basically i peek and i say how many",
    "start": "1110160",
    "end": "1117039"
  },
  {
    "text": "how many bytes are on the socket the first thing i do is say hey if the bytes isn't even large enough specific",
    "start": "1117039",
    "end": "1123440"
  },
  {
    "text": "to a header then we won't even care right now we'll just come back later",
    "start": "1123440",
    "end": "1128559"
  },
  {
    "text": "if per chance it is there then i'm going to peek at it and see what's going on",
    "start": "1128559",
    "end": "1133679"
  },
  {
    "text": "and what's interesting is this right here i've commented out this assert because",
    "start": "1133679",
    "end": "1140080"
  },
  {
    "text": "this assert is going to fire constantly in any case of a hacker showing up because the information that immediately",
    "start": "1140080",
    "end": "1147200"
  },
  {
    "text": "is read off of the stack right here i know that the size i read from the",
    "start": "1147200",
    "end": "1153520"
  },
  {
    "text": "bytes that i read out the size of the value of those bytes can only be this large it can't be this large",
    "start": "1153520",
    "end": "1159440"
  },
  {
    "text": "and i know that if they give me a zero then we deal with that as well so no error occurs",
    "start": "1159440",
    "end": "1167120"
  },
  {
    "text": "if it's not the size of message header this is an explicit line of code this",
    "start": "1167120",
    "end": "1172640"
  },
  {
    "text": "isn't now if as long as it's as much as the size of a header you know we'll allow for some extended structures",
    "start": "1172640",
    "end": "1178559"
  },
  {
    "text": "we don't do that so immediately we're going to do our internal alert which passes through a common functional",
    "start": "1178559",
    "end": "1185760"
  },
  {
    "text": "or common function a common error handling routine that we can actually employ in any type of object in which",
    "start": "1185760",
    "end": "1192960"
  },
  {
    "text": "case you can have your common error handling we're going to post this that we have failure we're going to turn false any",
    "start": "1192960",
    "end": "1199679"
  },
  {
    "text": "return false from any internal functions constitute a situation that a hacker has hacked us",
    "start": "1199679",
    "end": "1207360"
  },
  {
    "text": "or is attempting to hack us the reason of that is a functional failure is a",
    "start": "1207360",
    "end": "1212799"
  },
  {
    "text": "hacker's attempt to hack you if perchance the message size or the the specified",
    "start": "1212799",
    "end": "1220400"
  },
  {
    "text": "size in this header that is transmitted to us is greater than the maximum size then again",
    "start": "1220400",
    "end": "1226400"
  },
  {
    "text": "in debug we're going to throw up a nice air and then dump the information out to our log",
    "start": "1226400",
    "end": "1232799"
  },
  {
    "text": "for turn failure we'll then again disconnect the socket",
    "start": "1232799",
    "end": "1237760"
  },
  {
    "text": "you can see how much error handling code you have to have in here for performing specific state",
    "start": "1237919",
    "end": "1243919"
  },
  {
    "text": "checks against data another case if you know if the date isn't so big",
    "start": "1243919",
    "end": "1249919"
  },
  {
    "text": "i repeat myself as we go on and on all the possible failure cases",
    "start": "1249919",
    "end": "1255200"
  },
  {
    "text": "eventually we know that we have somewhat of a valid message header valid in the amount of",
    "start": "1255200",
    "end": "1261360"
  },
  {
    "text": "bytes that we have read then we will signal a true case where then later it will be validated even more for content",
    "start": "1261360",
    "end": "1268960"
  },
  {
    "text": "and let's actually we'll execute this and see how it does",
    "start": "1268960",
    "end": "1274960"
  },
  {
    "text": "i'm going to connect to it with telnet just to connect to the pipe and i'm just going to start sending arbitrary bytes",
    "start": "1274960",
    "end": "1280559"
  },
  {
    "text": "this code right here will actually read the bytes up until we have a message that either at some point in time and",
    "start": "1280559",
    "end": "1286880"
  },
  {
    "text": "it's it has determined is too large too small and jumps out or i actually send enough",
    "start": "1286880",
    "end": "1293120"
  },
  {
    "text": "bytes that my message header is full and then it signals this message ready",
    "start": "1293120",
    "end": "1299360"
  },
  {
    "text": "as a success and passes it on for more processing at which at which that point",
    "start": "1299360",
    "end": "1305520"
  },
  {
    "text": "the actual data itself will be validated explicitly is this bit set yes great we",
    "start": "1305520",
    "end": "1312240"
  },
  {
    "text": "can continue validate the next bit in that packet it takes a moment to load",
    "start": "1312240",
    "end": "1318640"
  },
  {
    "text": "all right",
    "start": "1318640",
    "end": "1321799"
  },
  {
    "text": "so i've started the server on port 18088",
    "start": "1333840",
    "end": "1339720"
  },
  {
    "text": "now after we have connected the server has sent a message that says",
    "start": "1355760",
    "end": "1361280"
  },
  {
    "text": "great you've connected it begins a specific transfer which we'll get into in a couple minutes but at this moment",
    "start": "1361280",
    "end": "1366799"
  },
  {
    "text": "it's expecting the client because this is a tcp application to respond very specifically now if we actually wait",
    "start": "1366799",
    "end": "1372320"
  },
  {
    "text": "long enough it will timeout because we don't want the server to wait forever",
    "start": "1372320",
    "end": "1377360"
  },
  {
    "text": "and waste those resources so as it sits there and is waiting for state you'll notice my typing characters",
    "start": "1377360",
    "end": "1384400"
  },
  {
    "text": "down at the bottom causes specific data to be parsed it's waiting for more",
    "start": "1384400",
    "end": "1389679"
  },
  {
    "text": "information at the moment that i get that i've sent data that it's out of bounds it receives",
    "start": "1389679",
    "end": "1394720"
  },
  {
    "text": "that message header passes it up to the next layer and says this is completely out of state out of bounds it's not what",
    "start": "1394720",
    "end": "1400240"
  },
  {
    "text": "we're expecting from the client based on the data we sent because it is very explicit then it instantly assumes it's",
    "start": "1400240",
    "end": "1406159"
  },
  {
    "text": "a hacker's attack dumps that and at this point here not only would you get debug output but you would also then signal",
    "start": "1406159",
    "end": "1412960"
  },
  {
    "text": "that a specific type of failure has happened specific to a packer",
    "start": "1412960",
    "end": "1418320"
  },
  {
    "text": "it sends that we connected over tcp we can also record the ip information etc now of course that could be spoofed but",
    "start": "1418320",
    "end": "1424799"
  },
  {
    "text": "hey for auditing purposes it's very important to do that and here we see the socket abandoned",
    "start": "1424799",
    "end": "1430559"
  },
  {
    "text": "the thread closed and it goes back to operating as such we'll just do it one more time so you can see",
    "start": "1430559",
    "end": "1437440"
  },
  {
    "text": "but you can i can sit here and make a thousand connections to it and just keep doing that forever but the idea is",
    "start": "1438720",
    "end": "1446000"
  },
  {
    "text": "we have explicit case by which we want data it doesn't happen we fail",
    "start": "1446000",
    "end": "1451840"
  },
  {
    "text": "okay brute forcing everyone likes brute forcing",
    "start": "1452240",
    "end": "1458840"
  },
  {
    "text": "we can probably assume that i'm going to handle this much in the same way",
    "start": "1459200",
    "end": "1465559"
  },
  {
    "text": "now the authentication process local authentication in this case however the remote processing would follow the exact",
    "start": "1484640",
    "end": "1491679"
  },
  {
    "text": "same guidelines it's going to allow the standard three numbers of authentication and then the",
    "start": "1491679",
    "end": "1497279"
  },
  {
    "text": "moment that you don't authenticate that's going to move on and block you",
    "start": "1497279",
    "end": "1503120"
  },
  {
    "text": "obviously these simple beginning methods are very easy to mitigate",
    "start": "1510480",
    "end": "1515840"
  },
  {
    "text": "username failed fill to authenticate build to authenticate fill to authenticate",
    "start": "1527360",
    "end": "1533760"
  },
  {
    "text": "so at this point in time at least locally i've triggered some type of brute access protection",
    "start": "1533760",
    "end": "1539440"
  },
  {
    "text": "now the code that that handles this type of what i would call a on purpose denial of service",
    "start": "1539440",
    "end": "1548000"
  },
  {
    "text": "could be used for local and remote connections what happens here is because we have",
    "start": "1548000",
    "end": "1554000"
  },
  {
    "text": "said you can no longer authenticate for this amount of time because we think you're trying to hack",
    "start": "1554000",
    "end": "1559760"
  },
  {
    "text": "in for this amount of time that user has been denied access in many cases",
    "start": "1559760",
    "end": "1566320"
  },
  {
    "text": "and this may be if you've gone to if you have accounts on many web apps around there you log in you forget",
    "start": "1566320",
    "end": "1572559"
  },
  {
    "text": "your password you try it three times it comes back and says i'm sorry you've tried three attempts",
    "start": "1572559",
    "end": "1577840"
  },
  {
    "text": "and failed instead of just slowing down the process of brute forcing and delaying for 30 seconds like i have they",
    "start": "1577840",
    "end": "1584720"
  },
  {
    "text": "will actually say your account has been disabled for 20 minutes can anyone think of a really great thing",
    "start": "1584720",
    "end": "1590480"
  },
  {
    "text": "to do with that if i know all the usernames in the system which are technically predictable",
    "start": "1590480",
    "end": "1596320"
  },
  {
    "text": "await their email addresses great now i can through a simple process",
    "start": "1596320",
    "end": "1601760"
  },
  {
    "text": "i can perform a denial of service on everybody's account merely by continually requesting",
    "start": "1601760",
    "end": "1609120"
  },
  {
    "text": "trying to authenticate for everyone's account so anytime that you have a brute force",
    "start": "1609279",
    "end": "1616559"
  },
  {
    "text": "style of attack you have to make sure that if there's a way to slow down the method by which they are brute forcing",
    "start": "1616559",
    "end": "1623919"
  },
  {
    "text": "that's fine and detecting that they are through some internal mechanism in your application",
    "start": "1623919",
    "end": "1629440"
  },
  {
    "text": "just tell somebody over here hello real person someone's brute forcing right now run over to the server and try to",
    "start": "1629440",
    "end": "1636080"
  },
  {
    "text": "mitigate it manually try to say oh there's these ips let me call the isp and have it blocked et cetera there's",
    "start": "1636080",
    "end": "1641679"
  },
  {
    "text": "really no way you're going to stop all of these people from making all these requests to a public service",
    "start": "1641679",
    "end": "1647679"
  },
  {
    "text": "and in the case that you just say let's just turn off everything now you've denied service to everyone else",
    "start": "1647679",
    "end": "1653279"
  },
  {
    "text": "brute forcing is definitely a monitoring type excuse me the monitoring type of",
    "start": "1653279",
    "end": "1660080"
  },
  {
    "text": "uh solution when it comes to remote connections or remote requests",
    "start": "1660080",
    "end": "1668600"
  },
  {
    "text": "okay out of state user requests",
    "start": "1668640",
    "end": "1672840"
  },
  {
    "text": "in the case of my server and client actually communicating to each other within a specific build and knowing that",
    "start": "1686320",
    "end": "1692159"
  },
  {
    "text": "okay we have specific state between each other it would make sense for a hacker to get my client break it apart and try",
    "start": "1692159",
    "end": "1698720"
  },
  {
    "text": "to send messages out of order doing specific probably black hat style network attacks",
    "start": "1698720",
    "end": "1706559"
  },
  {
    "text": "buffer overflowing a specific field 10 packets into the negotiation all these type of scenarios",
    "start": "1706559",
    "end": "1713840"
  },
  {
    "text": "it's important to add the protection of out-of-state requests remember we're trying to be explicit in",
    "start": "1713840",
    "end": "1720480"
  },
  {
    "text": "which case we will say if i say start and you say ack then i will say",
    "start": "1720480",
    "end": "1725679"
  },
  {
    "text": "here's this next message and you say ack and if i say stop and you don't reply i'm gonna",
    "start": "1725679",
    "end": "1731679"
  },
  {
    "text": "disconnect if i say stop and you say start i'm gonna i'm to disconnect anything except",
    "start": "1731679",
    "end": "1738640"
  },
  {
    "text": "exactly what i'm expecting so in this type of scenario",
    "start": "1738640",
    "end": "1745760"
  },
  {
    "text": "here is a block of code in which every time the server sends a message",
    "start": "1745760",
    "end": "1751360"
  },
  {
    "text": "or i should say the server every time that the initiator of a data transfer sends a",
    "start": "1751360",
    "end": "1758000"
  },
  {
    "text": "message the remote side is required to act based on the success of that message required",
    "start": "1758000",
    "end": "1765279"
  },
  {
    "text": "to act based on the acceptance of the transfer at that point in time",
    "start": "1765279",
    "end": "1770640"
  },
  {
    "text": "so the server is intended or is expecting to receive an act",
    "start": "1770640",
    "end": "1775760"
  },
  {
    "text": "or an abort but in most cases it will act so we have our transfer interface which",
    "start": "1775760",
    "end": "1782159"
  },
  {
    "text": "we retrieve here and the first thing we do is say has it been too long we're going to time out",
    "start": "1782159",
    "end": "1787760"
  },
  {
    "text": "you'll notice we immediately log this information etc abort the transfer on the other side some specific",
    "start": "1787760",
    "end": "1794480"
  },
  {
    "text": "cases just in case there's network problems we should still play nice even if it's a hacker",
    "start": "1794480",
    "end": "1800799"
  },
  {
    "text": "and down here we see okay so i send a start message he sends an ack",
    "start": "1800799",
    "end": "1809360"
  },
  {
    "text": "his act doesn't say anything inside it it's just an ack to anyone's packet sniffing they see an",
    "start": "1809360",
    "end": "1815200"
  },
  {
    "text": "ack the state of the negotiation or of this transfer is on the basis of both",
    "start": "1815200",
    "end": "1821440"
  },
  {
    "text": "messages and the server started it the originator of the request is the",
    "start": "1821440",
    "end": "1827039"
  },
  {
    "text": "person who the hacker would want to gain access to but cannot because of this",
    "start": "1827039",
    "end": "1834159"
  },
  {
    "text": "if the start has not been acknowledged then we will yeah if the start has not been",
    "start": "1834159",
    "end": "1839600"
  },
  {
    "text": "acknowledged then we will immediately assume the act is for the message that we just sent",
    "start": "1839600",
    "end": "1846559"
  },
  {
    "text": "we will immediately we will assume that because it is an explicit assumption it's not a generic assumption",
    "start": "1846559",
    "end": "1853679"
  },
  {
    "text": "in which case you'll see in this code the only way to get down to",
    "start": "1853679",
    "end": "1860080"
  },
  {
    "text": "this point way below is if not only the previous message has been sent but an acknowledge has been",
    "start": "1860080",
    "end": "1867039"
  },
  {
    "text": "received for each individual request",
    "start": "1867039",
    "end": "1871679"
  },
  {
    "text": "and this little bit right here is just it allows a data transfer specific acknowledgement if you were in the",
    "start": "1876559",
    "end": "1882720"
  },
  {
    "text": "middle of a file transfer and you wanted to stop replay attacks from inside of that file transfer",
    "start": "1882720",
    "end": "1888480"
  },
  {
    "text": "instead of actually sending the entire block of data that is that",
    "start": "1888480",
    "end": "1893679"
  },
  {
    "text": "entire file say 100 megabyte file at one time with no state information in",
    "start": "1893679",
    "end": "1900000"
  },
  {
    "text": "between we don't want to do that because we need state information to protect ourselves",
    "start": "1900000",
    "end": "1905200"
  },
  {
    "text": "and assert against out of bounds communication so any type of file transfer voice",
    "start": "1905200",
    "end": "1910559"
  },
  {
    "text": "transfer text transfer it doesn't matter we allow the ability for the transfer",
    "start": "1910559",
    "end": "1916320"
  },
  {
    "text": "interface itself to allow specific acknowledge acknowledgments at which time that specific",
    "start": "1916320",
    "end": "1922799"
  },
  {
    "text": "implementation if he did not equal true upon success of that acknowledgement",
    "start": "1922799",
    "end": "1929760"
  },
  {
    "text": "can also return false this is just an example that you can have a completely abstract",
    "start": "1929760",
    "end": "1936480"
  },
  {
    "text": "interface and state machine and yet support a lot of different",
    "start": "1936480",
    "end": "1942480"
  },
  {
    "text": "types of data transfers and still have a secure foundation",
    "start": "1942480",
    "end": "1947960"
  },
  {
    "text": "okay authorization failure in many cases your authorization will",
    "start": "1949600",
    "end": "1955679"
  },
  {
    "text": "come from if this person's user id is equal to five then great let them let",
    "start": "1955679",
    "end": "1962480"
  },
  {
    "text": "them move on in most cases that will work perfectly fine the authorization failures that i'm",
    "start": "1962480",
    "end": "1969279"
  },
  {
    "text": "worried about are the ones that you can protect with cryptographic methods because",
    "start": "1969279",
    "end": "1975120"
  },
  {
    "text": "let's take a password file on a computer if i can get access to read and write to",
    "start": "1975120",
    "end": "1980480"
  },
  {
    "text": "the file i can change the contents that makes sense then another process at another time loads it up and says oh",
    "start": "1980480",
    "end": "1987039"
  },
  {
    "text": "look there is another user in here although he doesn't necessarily notice it's a new user he's like oh look someone else with",
    "start": "1987039",
    "end": "1993279"
  },
  {
    "text": "root privilege permissions on this machine that's fine this is the user database i'll just load it up not a",
    "start": "1993279",
    "end": "1998399"
  },
  {
    "text": "problem it would be really interesting in any case of authorization",
    "start": "1998399",
    "end": "2004600"
  },
  {
    "text": "if we would just use some nice asymmetric asymmetric measures",
    "start": "2004640",
    "end": "2010559"
  },
  {
    "text": "of asserting that the data cannot change so this little program all it does is",
    "start": "2010559",
    "end": "2016880"
  },
  {
    "text": "create a public and private key and i just make a little",
    "start": "2016880",
    "end": "2022880"
  },
  {
    "text": "i just make a little um certificate of my own that just actually has a name a product company three strings that are",
    "start": "2024399",
    "end": "2030880"
  },
  {
    "text": "serialized to a file and then signed using the public private key",
    "start": "2030880",
    "end": "2036720"
  },
  {
    "text": "you can imagine for a second what would happen if every time the administrator added a user to his database locally or",
    "start": "2036720",
    "end": "2044320"
  },
  {
    "text": "your program you write a program your your web program and you say okay i need to add this specific user let me plug in",
    "start": "2044320",
    "end": "2050960"
  },
  {
    "text": "my smart card which has my private key on it and as after i add this user to it i'm",
    "start": "2050960",
    "end": "2057118"
  },
  {
    "text": "going to digitally sign this database file but the public key is all that is required to actually assert that",
    "start": "2057119",
    "end": "2063520"
  },
  {
    "text": "signature and at any time if the file was gone the signature didn't match etc then we",
    "start": "2063520",
    "end": "2069440"
  },
  {
    "text": "cannot we can know that our user database has been modified by some external method and yet the private key",
    "start": "2069440",
    "end": "2076960"
  },
  {
    "text": "which is going to be on a smart card that the user administrator has in his pocket is not available on the system",
    "start": "2076960",
    "end": "2083040"
  },
  {
    "text": "now obviously the great attack tree there would be how can i make it so that i detect and steal this private key but",
    "start": "2083040",
    "end": "2090079"
  },
  {
    "text": "that's not the point the point is just simply but sandbox some authorization or",
    "start": "2090079",
    "end": "2096000"
  },
  {
    "text": "or a point of data where the authorization is key and most people have none",
    "start": "2096000",
    "end": "2101440"
  },
  {
    "text": "so let's do this real quick",
    "start": "2101440",
    "end": "2104800"
  },
  {
    "text": "so this program will actually store my public private key in key.dat i'll just dump that file just to show you some",
    "start": "2114320",
    "end": "2120800"
  },
  {
    "text": "information it's kind of a small key but and insert.dat i will have this",
    "start": "2120800",
    "end": "2127280"
  },
  {
    "text": "information you can see the specific fields that i wrote and this is just straight",
    "start": "2127280",
    "end": "2133200"
  },
  {
    "text": "serialization so drew class black hat three fields i wrote and then we actually have the public key which is",
    "start": "2133200",
    "end": "2139280"
  },
  {
    "text": "included and then the signature at the bottom now later on a hacker gets on your",
    "start": "2139280",
    "end": "2145200"
  },
  {
    "text": "system looks at your database file and says i'm going to add a user to it or a user specific profile stored on a web",
    "start": "2145200",
    "end": "2152880"
  },
  {
    "text": "server it doesn't matter whatever the data is we can use these methods to assert authorization the data hasn't changed",
    "start": "2152880",
    "end": "2161040"
  },
  {
    "text": "i'm going to now edit",
    "start": "2161119",
    "end": "2164160"
  },
  {
    "text": "the cert and i'll just go over and change my name to brew",
    "start": "2166720",
    "end": "2174800"
  },
  {
    "text": "at which case i can now verify the content oops",
    "start": "2181200",
    "end": "2186599"
  },
  {
    "text": "certificate is invalid are corrupt and all that we do is actually take the private key out and assert that the",
    "start": "2187200",
    "end": "2193040"
  },
  {
    "text": "digital signature is correct the private key only needs to be valid when we are modifying or loading the data inside of",
    "start": "2193040",
    "end": "2200320"
  },
  {
    "text": "the file which means every configuration file for your application every configuration file stores user",
    "start": "2200320",
    "end": "2206960"
  },
  {
    "text": "information private information the data can be in your database it doesn't matter where",
    "start": "2206960",
    "end": "2212079"
  },
  {
    "text": "we should always have authorization methods on all of the data this will perform authorization at the access",
    "start": "2212079",
    "end": "2218880"
  },
  {
    "text": "level i want to read this data who are you what is your public key let me go look in the configuration file",
    "start": "2218880",
    "end": "2225920"
  },
  {
    "text": "that is also signed whether you have access to that now we can start building",
    "start": "2225920",
    "end": "2231520"
  },
  {
    "text": "up a trust layer using keys basically at a data level inside of our application",
    "start": "2231520",
    "end": "2236960"
  },
  {
    "text": "sandboxing it from any outside injection per se and if we do see",
    "start": "2236960",
    "end": "2242960"
  },
  {
    "text": "changes if our database is gone the database has changed they're completely detectable",
    "start": "2242960",
    "end": "2250200"
  },
  {
    "text": "okay monitoring exposures monitoring things",
    "start": "2256560",
    "end": "2263599"
  },
  {
    "text": "that cannot necessarily be mitigated this does include log files much like we",
    "start": "2263599",
    "end": "2270240"
  },
  {
    "text": "just looked at a specific like asymmetrical method by which you could detect that something has changed you",
    "start": "2270240",
    "end": "2276480"
  },
  {
    "text": "are in fact directly mitigating that you always know what's going to happen with that",
    "start": "2276480",
    "end": "2282320"
  },
  {
    "text": "things like log files when a log file exists on your system",
    "start": "2282320",
    "end": "2288160"
  },
  {
    "text": "you should create it during the deployment of your application you put this application there you create the",
    "start": "2288160",
    "end": "2293280"
  },
  {
    "text": "log file if the log file is gone what does this mean where the log file go a",
    "start": "2293280",
    "end": "2298400"
  },
  {
    "text": "hacker must have deleted it remember your your application should employ specific and explicit state all",
    "start": "2298400",
    "end": "2304800"
  },
  {
    "text": "the time so the log file is created during deployment it's always there",
    "start": "2304800",
    "end": "2309839"
  },
  {
    "text": "you recreate the it immediately after backup your backup process of extracting data from your sandbox to your",
    "start": "2309839",
    "end": "2316400"
  },
  {
    "text": "application which has everything sandboxed pauses the entire state pulls all the data off this should be a physical",
    "start": "2316400",
    "end": "2323520"
  },
  {
    "text": "process at physical access to the machine and then you restore the state to the state of continuing uh processing",
    "start": "2323520",
    "end": "2330960"
  },
  {
    "text": "so all of your log files your files they'll always exist you're always going to append data you're always going to maintain you know your access privileges",
    "start": "2330960",
    "end": "2337680"
  },
  {
    "text": "to those files in any case you have some type of injection or modification we are going to be able to detect that as well",
    "start": "2337680",
    "end": "2345680"
  },
  {
    "text": "we do that through a much faster process than asymmetrical encryption",
    "start": "2345680",
    "end": "2352240"
  },
  {
    "text": "asymmetrical encryption is rather slow performing signing and validation constantly can bring headaches to your processor",
    "start": "2352240",
    "end": "2358800"
  },
  {
    "text": "especially if you have large user base lots of users running all the time so what we want to do is actually",
    "start": "2358800",
    "end": "2365520"
  },
  {
    "text": "implement a method by which we can validate individual log entries as they coalesce or as they gather",
    "start": "2365520",
    "end": "2373760"
  },
  {
    "text": "and i'll just show you an example very quick",
    "start": "2373760",
    "end": "2378079"
  },
  {
    "text": "we're going to create this log file and every log file needs to have some type of authentication so in this case we're",
    "start": "2380160",
    "end": "2386000"
  },
  {
    "text": "going to use just a password the password is hashed and then used as an actual symmetric key to encrypt the",
    "start": "2386000",
    "end": "2391440"
  },
  {
    "text": "header and we'll just use the password password for now so we're going to create a file",
    "start": "2391440",
    "end": "2399599"
  },
  {
    "text": "invalid arguments",
    "start": "2400640",
    "end": "2403599"
  },
  {
    "text": "maybe we aren't",
    "start": "2409040",
    "end": "2411839"
  },
  {
    "text": "now that's funny i kept reading but i didn't even read my own error uh the error that actually comes up was cannot overwrite file",
    "start": "2420720",
    "end": "2427839"
  },
  {
    "text": "test.dat that seems like a pretty smart thing that you shouldn't be able to overwrite in a log file that exists already",
    "start": "2427839",
    "end": "2435200"
  },
  {
    "text": "because that would of course destroy the data inside of it funny how that works delete",
    "start": "2435200",
    "end": "2440480"
  },
  {
    "text": "so we create the log file so now we have an audit file let's actually look at this information",
    "start": "2440480",
    "end": "2445760"
  },
  {
    "text": "we can't see anything that's because the header is encrypted now every attempt to",
    "start": "2445760",
    "end": "2451119"
  },
  {
    "text": "add data to this it's going to require the secret the secret password that we have now you",
    "start": "2451119",
    "end": "2458000"
  },
  {
    "text": "probably wouldn't have your application be calling down into the shell and having to execute a program like this",
    "start": "2458000",
    "end": "2463119"
  },
  {
    "text": "all the time you would have probably maintained the symmetric key in memory or some place on the machine obviously",
    "start": "2463119",
    "end": "2468560"
  },
  {
    "text": "you're going to have to because you're doing the hashing and the encryption et cetera on the machine",
    "start": "2468560",
    "end": "2473599"
  },
  {
    "text": "this can give you problems because if a hacker gains access to that machine he will definitely be able to find that key",
    "start": "2473599",
    "end": "2480319"
  },
  {
    "text": "and the issue is how long is that going to take question is never can i hack something",
    "start": "2480319",
    "end": "2485520"
  },
  {
    "text": "it's always going to be an issue of time can you break this cryptography sure give me three years with 16 machines in",
    "start": "2485520",
    "end": "2490720"
  },
  {
    "text": "a beowulf cluster it's always an issue of time so we always know you're going to have these type of keys and passwords on your",
    "start": "2490720",
    "end": "2497440"
  },
  {
    "text": "machine whether they're in memory or not or memory or disk but you just have to do",
    "start": "2497440",
    "end": "2502480"
  },
  {
    "text": "that so the next step is going to be to just write an entry",
    "start": "2502480",
    "end": "2507520"
  },
  {
    "text": "into the log file",
    "start": "2507520",
    "end": "2510560"
  },
  {
    "text": "and of course we need the password the file name and a message we'll just put black cat in there",
    "start": "2513200",
    "end": "2520720"
  },
  {
    "text": "so it tells us it has successfully added the audit entry what's interesting is every time we make modifications to this",
    "start": "2520720",
    "end": "2527359"
  },
  {
    "text": "log file it's going to validate the log file and every entry inside of it because we always have to maintain 100",
    "start": "2527359",
    "end": "2534400"
  },
  {
    "text": "state the state of the application must always be good",
    "start": "2534400",
    "end": "2540000"
  },
  {
    "text": "so we're going to add a couple more entries",
    "start": "2540000",
    "end": "2544760"
  },
  {
    "text": "all right now at this point in time let's go ahead and just read them back make sure this this program works",
    "start": "2552319",
    "end": "2558800"
  },
  {
    "text": "so we have account we always have to pass the password in",
    "start": "2558800",
    "end": "2564319"
  },
  {
    "text": "and it tells us the file contains three audit entries if we pass in the wrong password it will",
    "start": "2564319",
    "end": "2569760"
  },
  {
    "text": "tell us password you entered is incorrect etc which that error right there should probably be logged",
    "start": "2569760",
    "end": "2576480"
  },
  {
    "text": "itself in a logger it's kind of ironic",
    "start": "2576480",
    "end": "2581040"
  },
  {
    "text": "so at this point we know we have this file let's look at it closely",
    "start": "2581520",
    "end": "2587920"
  },
  {
    "text": "so here's our header which is going to be encrypted and this week down to the bottom here's a couple entries now we're not",
    "start": "2587920",
    "end": "2593839"
  },
  {
    "text": "encrypting the entries we could but the point of this is just to show a nice fast way of authenticating your log",
    "start": "2593839",
    "end": "2600640"
  },
  {
    "text": "files lots of times you'll want to have a local log viewer on the system etc to just pull it up depending on what data",
    "start": "2600640",
    "end": "2606480"
  },
  {
    "text": "you're auditing in specific log files you might want to encrypt it or not in this case we see black hat we see at",
    "start": "2606480",
    "end": "2612240"
  },
  {
    "text": "the hash that follows it we see that mixed entry and so on what we're going to do is just",
    "start": "2612240",
    "end": "2617359"
  },
  {
    "text": "edit this real quick and make sure that we can detect modification",
    "start": "2617359",
    "end": "2621838"
  },
  {
    "text": "actually",
    "start": "2622560",
    "end": "2625560"
  },
  {
    "text": "so",
    "start": "2639760",
    "end": "2642760"
  },
  {
    "text": "okay here we go so we can see all three entries and now i'm going to change this",
    "start": "2669359",
    "end": "2676160"
  },
  {
    "text": "see run overwrite",
    "start": "2676160",
    "end": "2679359"
  },
  {
    "text": "or just overwrite that entry at this point in time it should be",
    "start": "2682480",
    "end": "2688079"
  },
  {
    "text": "painfully clear that the hash should not match when we",
    "start": "2688079",
    "end": "2693280"
  },
  {
    "text": "perform our we decrypt the header and walk through our hash chain it shouldn't have it shouldn't actually match",
    "start": "2693280",
    "end": "2699920"
  },
  {
    "text": "so in instead of actually just directly calling to validate this file we're actually just going to try to add",
    "start": "2699920",
    "end": "2705200"
  },
  {
    "text": "another entry now in truth it shouldn't let us because it should always be validating the file at all times",
    "start": "2705200",
    "end": "2713000"
  },
  {
    "text": "and of course it lets us know that entry zero has been tampered with because that is the location by which the hashes",
    "start": "2719119",
    "end": "2724240"
  },
  {
    "text": "don't compare when we perform our audit of the file itself",
    "start": "2724240",
    "end": "2729599"
  },
  {
    "text": "at this point in time if you were to see this on your application you know several things a",
    "start": "2729599",
    "end": "2736240"
  },
  {
    "text": "there's a bug in my app that is a security error let's go fix it",
    "start": "2736240",
    "end": "2742240"
  },
  {
    "text": "b a hacker has modified my logs that still is again a security error we",
    "start": "2742240",
    "end": "2747520"
  },
  {
    "text": "need to go do something about it depending on if you're in a production system or in testing",
    "start": "2747520",
    "end": "2753520"
  },
  {
    "text": "if you were to see this what other data on your system can you now trust",
    "start": "2753520",
    "end": "2760760"
  },
  {
    "text": "does anyone have an answer none of it what if you went to the next log file",
    "start": "2763440",
    "end": "2768800"
  },
  {
    "text": "and uh it verified perfectly fine did you trust it no",
    "start": "2768800",
    "end": "2774720"
  },
  {
    "text": "because you can't know whether i took it send it to my friends over here who have",
    "start": "2774720",
    "end": "2779839"
  },
  {
    "text": "this ultimate brute forcing program and i got your header key",
    "start": "2779839",
    "end": "2785760"
  },
  {
    "text": "and actually went and wrote my own log file you can't know so the moment anything like this happens",
    "start": "2785760",
    "end": "2792079"
  },
  {
    "text": "you need someone to know about it because they need to be there to un disconnect that machine from the network",
    "start": "2792079",
    "end": "2798000"
  },
  {
    "text": "at that moment this is how explicit your application must be hope that's been tampered with",
    "start": "2798000",
    "end": "2804880"
  },
  {
    "text": "and walk away",
    "start": "2804880",
    "end": "2807599"
  },
  {
    "text": "okay if a secret can be found fail to close instead of fail to open",
    "start": "2810240",
    "end": "2816160"
  },
  {
    "text": "this doesn't necessarily just relate to a secret this relates to almost anything on your application that has to do with",
    "start": "2816160",
    "end": "2821920"
  },
  {
    "text": "security you cannot fail to an open state switches do this let's flood the",
    "start": "2821920",
    "end": "2827200"
  },
  {
    "text": "mac tables turn the switch into a hub yay now i can see everybody's traffic",
    "start": "2827200",
    "end": "2833200"
  },
  {
    "text": "your applications must always stop work instead of saying okay we need to continue business",
    "start": "2833200",
    "end": "2839920"
  },
  {
    "text": "let's just keep doing it we'll do it a different way unfortunately this means your applications will always cause a",
    "start": "2839920",
    "end": "2846800"
  },
  {
    "text": "self-denial service no one else can connect because we're not listening anymore",
    "start": "2846800",
    "end": "2852160"
  },
  {
    "text": "this is why you need the fast response to real people you need that logging and",
    "start": "2852160",
    "end": "2857760"
  },
  {
    "text": "all that information to be recorded you can imagine how much easier it would be if you could do forensical",
    "start": "2857760",
    "end": "2864160"
  },
  {
    "text": "um if you stored forensical data all the time in your application to go back and",
    "start": "2864160",
    "end": "2870240"
  },
  {
    "text": "try to figure out what happened even in the case of the scenario where you can't trust any of the data",
    "start": "2870240",
    "end": "2876079"
  },
  {
    "text": "you can still go and see and hopefully maybe determine what had happened in your application but you must always",
    "start": "2876079",
    "end": "2881760"
  },
  {
    "text": "fail to close okay",
    "start": "2881760",
    "end": "2886960"
  },
  {
    "text": "another note on just missing user databases some some apps that i've seen you delete the user database and you go",
    "start": "2886960",
    "end": "2892640"
  },
  {
    "text": "to log in and it's like oh you must be the administrator because the database is gone because we don't have any users",
    "start": "2892640",
    "end": "2898720"
  },
  {
    "text": "no i'm not a good idea so all the files that exist in your",
    "start": "2898720",
    "end": "2904000"
  },
  {
    "text": "application must be present and crc'd at the same all the time it just may",
    "start": "2904000",
    "end": "2909440"
  },
  {
    "text": "must be done you can use asymmetric cryptography to validate the integrity of all of your",
    "start": "2909440",
    "end": "2914559"
  },
  {
    "text": "executables if you use net technology you can let the framework actually perform that check for you",
    "start": "2914559",
    "end": "2922240"
  },
  {
    "text": "at any point in time you should be able to push a button locally push a button in your",
    "start": "2922240",
    "end": "2928480"
  },
  {
    "text": "application and have it go through",
    "start": "2928480",
    "end": "2932400"
  },
  {
    "text": "go through and authenticate the integrity of all the data all of the",
    "start": "2935599",
    "end": "2940880"
  },
  {
    "text": "log files",
    "start": "2940880",
    "end": "2943838"
  },
  {
    "text": "etc okay if you have a database let's say you're",
    "start": "2948000",
    "end": "2954000"
  },
  {
    "text": "storing credit card information and like a web app you have a system administrator and it",
    "start": "2954000",
    "end": "2960079"
  },
  {
    "text": "is his duty to sit there and make sure that these machines continue running does he have access to the database",
    "start": "2960079",
    "end": "2967520"
  },
  {
    "text": "everyone would probably say well sure he's the system administrator is he the only system administrator",
    "start": "2967520",
    "end": "2974160"
  },
  {
    "text": "is it his job to keep the application running the system's running the integrity of",
    "start": "2974160",
    "end": "2980079"
  },
  {
    "text": "the network running what exactly is what are his hats",
    "start": "2980079",
    "end": "2985119"
  },
  {
    "text": "what is it he's supposed to do and is he only one person and it's more important to count of one than any other thing",
    "start": "2985119",
    "end": "2992720"
  },
  {
    "text": "because if he's here by himself in the network operations center with the database of 500 000 credit cards",
    "start": "2992720",
    "end": "2998800"
  },
  {
    "text": "what's to keep him from taking them even if they're encrypted it doesn't",
    "start": "2998800",
    "end": "3004640"
  },
  {
    "text": "matter if they're encrypted we can brute force that later how long are those credit cards useful for three to four",
    "start": "3004640",
    "end": "3010160"
  },
  {
    "text": "years do you think it's going to take me three to four years to brute force",
    "start": "3010160",
    "end": "3015280"
  },
  {
    "text": "absolutely not so it doesn't matter whether encrypted or not if i can gain access to them based on the the",
    "start": "3015280",
    "end": "3021440"
  },
  {
    "text": "the time that the data will be valid if i can brute force it faster than that",
    "start": "3021440",
    "end": "3026800"
  },
  {
    "text": "i'll dedicate some 486's in the closet to do that not a problem what this means is that anytime you",
    "start": "3026800",
    "end": "3032640"
  },
  {
    "text": "access any secure data from your application in your data center you need to have more than one person there it",
    "start": "3032640",
    "end": "3040000"
  },
  {
    "text": "works the same it works like this in the military if it's something really important you're gonna have to have two people with keys two people with",
    "start": "3040000",
    "end": "3046480"
  },
  {
    "text": "thumbprints two people now if those two people get together then well you're kinda",
    "start": "3046480",
    "end": "3052480"
  },
  {
    "text": "you're in trouble but the point is that you can have your system administrator and you also need to have your",
    "start": "3052480",
    "end": "3058319"
  },
  {
    "text": "application administrator and at no point should any one person inside of a company with access to this",
    "start": "3058319",
    "end": "3064480"
  },
  {
    "text": "type of data credit card social security numbers these things should ever be able to access it by themselves even in the",
    "start": "3064480",
    "end": "3071119"
  },
  {
    "text": "encrypted state",
    "start": "3071119",
    "end": "3073920"
  },
  {
    "text": "okay response times given having said that you have encrypted data",
    "start": "3076240",
    "end": "3082480"
  },
  {
    "text": "and yet it is just as trivial to take that brute force it and then get the credit cards from it even if it takes",
    "start": "3082480",
    "end": "3088079"
  },
  {
    "text": "two years we know the credit cards are probably most of them are still going to be valid unless they were stolen from some other database",
    "start": "3088079",
    "end": "3094960"
  },
  {
    "text": "given that we have to have some type of time to hack and time to detect um",
    "start": "3094960",
    "end": "3100720"
  },
  {
    "text": "ratio if you will if you think about a password policy we need you to have this many characters we",
    "start": "3100720",
    "end": "3106800"
  },
  {
    "text": "need you have this many symbols this many numbers and it needs to be this long well when that's hashed and stored to a",
    "start": "3106800",
    "end": "3113359"
  },
  {
    "text": "table the question is well why are you going to change it in 31 days why would you change it if it's so",
    "start": "3113359",
    "end": "3118559"
  },
  {
    "text": "secure and the truth is it should occur from somebody guessing it and that's why you have this infinite mass",
    "start": "3118559",
    "end": "3124880"
  },
  {
    "text": "of characters and symbols and you also have the problem of someone stealing your database of all your",
    "start": "3124880",
    "end": "3131520"
  },
  {
    "text": "password hashes and the idea is my password policy should make it that when you type in your password",
    "start": "3131520",
    "end": "3138319"
  },
  {
    "text": "after it's hashed it's going to take one day longer for somebody to brute force that",
    "start": "3138319",
    "end": "3144960"
  },
  {
    "text": "given that they know what the hash is than when you're going to change your password again",
    "start": "3144960",
    "end": "3150079"
  },
  {
    "text": "so there's already the assumption in password policy measures that your hash",
    "start": "3150079",
    "end": "3155839"
  },
  {
    "text": "of passwords inside your internal corporate network is going to be stolen because you base your time changes on",
    "start": "3155839",
    "end": "3163119"
  },
  {
    "text": "brute force ability which means the level of encryption for asymmetrical encryption symmetric",
    "start": "3163119",
    "end": "3168880"
  },
  {
    "text": "encryption encryption when you're through a tunnel ssl all of these things you should never transfer data through",
    "start": "3168880",
    "end": "3175359"
  },
  {
    "text": "any of them that's going to be still useful if i can crack that in a year two years six",
    "start": "3175359",
    "end": "3182400"
  },
  {
    "text": "months etc okay and you always want to be able to",
    "start": "3182400",
    "end": "3187440"
  },
  {
    "text": "notify people because people can make decisions and computers they're not going to make the decisions you want",
    "start": "3187440",
    "end": "3193280"
  },
  {
    "text": "because you're going to need to look at the data say these people are brute forcing us through some distributed",
    "start": "3193280",
    "end": "3198400"
  },
  {
    "text": "mechanism from this country call the isp and block that you're not going to be your",
    "start": "3198400",
    "end": "3203440"
  },
  {
    "text": "your server is not going to make that logical assumption based on the data and you probably wouldn't want it to do that",
    "start": "3203440",
    "end": "3209520"
  },
  {
    "text": "because the moment i can determine it you know some other hacker over here could spoof all those addresses and perform an",
    "start": "3209520",
    "end": "3215760"
  },
  {
    "text": "on-purpose denial service to someone else so you need people to always be notified for anything from my logs don't",
    "start": "3215760",
    "end": "3222400"
  },
  {
    "text": "uh my hash chains of my logs don't successfully audit anymore we have a failure there",
    "start": "3222400",
    "end": "3228319"
  },
  {
    "text": "the authorities depending on what type of data you're going to be able to notify them so you should always have a literal process at your company for your",
    "start": "3228319",
    "end": "3235680"
  },
  {
    "text": "application of actually responding to these people when needed",
    "start": "3235680",
    "end": "3242160"
  },
  {
    "text": "all right cryptography time to crack we've said that it's important to probably check out the",
    "start": "3242319",
    "end": "3248720"
  },
  {
    "text": "rsa labs sites counterpain.com bruce schneier um",
    "start": "3248720",
    "end": "3254000"
  },
  {
    "text": "all these resources that deal with cryptography and keeping up on constant changes in cryptography know how long is",
    "start": "3254000",
    "end": "3261280"
  },
  {
    "text": "what's the next secure bit size etc etc you need to keep up on that especially",
    "start": "3261280",
    "end": "3266319"
  },
  {
    "text": "if you're rolling out new software etc to make sure that you're using those levels of cryptography or else the fact",
    "start": "3266319",
    "end": "3272160"
  },
  {
    "text": "that you're using cryptography at all is just going to become pointless because anyone can brute force it if they sniff",
    "start": "3272160",
    "end": "3277359"
  },
  {
    "text": "it",
    "start": "3277359",
    "end": "3279838"
  },
  {
    "text": "okay a moment on proactive risk analysis obviously every type of mitigation and",
    "start": "3286559",
    "end": "3293359"
  },
  {
    "text": "monitoring using this type of technology and saying we're going to come we're going to spend a lot of time in our",
    "start": "3293359",
    "end": "3299680"
  },
  {
    "text": "design phase look at the technologies we're going to use determine all the exposures that are",
    "start": "3299680",
    "end": "3305760"
  },
  {
    "text": "that exist all the known exploits that exist create an explicit design that mitigates",
    "start": "3305760",
    "end": "3313760"
  },
  {
    "text": "or monitors all of those risks",
    "start": "3313760",
    "end": "3318880"
  },
  {
    "text": "you're going to you're going to say how much money is this going to cost in which case performing any of these",
    "start": "3318880",
    "end": "3324160"
  },
  {
    "text": "measures will come down to some type of business decision that determines if if it's going to cost us a million dollars",
    "start": "3324160",
    "end": "3330319"
  },
  {
    "text": "to do all this with a with an application that 10 million people are going to use but you know",
    "start": "3330319",
    "end": "3336160"
  },
  {
    "text": "what our risk isn't that high because we don't store this data and wait the speed",
    "start": "3336160",
    "end": "3341200"
  },
  {
    "text": "we can't really do that cryptography thing because we have to have a round trip time to say turkey in five seconds",
    "start": "3341200",
    "end": "3347760"
  },
  {
    "text": "and we can't do it if we're doing asymmetric verification you can imagine all the things that go into determining",
    "start": "3347760",
    "end": "3353440"
  },
  {
    "text": "whether you're going to actually do a specific implementation to mitigate or monitor",
    "start": "3353440",
    "end": "3360160"
  },
  {
    "text": "certain exposures at the same time you might already have an application and you might have",
    "start": "3360160",
    "end": "3366240"
  },
  {
    "text": "maybe some code you saw here triggered something in your brain or maybe you already have an actual vulnerability",
    "start": "3366240",
    "end": "3371680"
  },
  {
    "text": "that you know about an exposure and in those cases it's still going to be a business decision of whether you ship",
    "start": "3371680",
    "end": "3377599"
  },
  {
    "text": "today or you wait a week and ship tomorrow or next week",
    "start": "3377599",
    "end": "3382720"
  },
  {
    "text": "in that case if you're going to ship this week and make 20 million and ship next we can make 10 million how many people in here would say throw",
    "start": "3382720",
    "end": "3389520"
  },
  {
    "text": "away 10 million dollars yeah probably not going to happen you're going to take the 10 extra 10 mil",
    "start": "3389520",
    "end": "3395920"
  },
  {
    "text": "and then you're going to have some type of blood bug floating out there so from that we know that business",
    "start": "3395920",
    "end": "3401839"
  },
  {
    "text": "doesn't always correspond with the way we would want to design and implement security",
    "start": "3401839",
    "end": "3406880"
  },
  {
    "text": "but it's always good to know that that's going to be there the historical data of any type",
    "start": "3406880",
    "end": "3413680"
  },
  {
    "text": "of design for an application that is logging and auditing and mitigating resources in this measure",
    "start": "3413680",
    "end": "3419760"
  },
  {
    "text": "is is very useful not only in predicting what future costs will be for",
    "start": "3419760",
    "end": "3426319"
  },
  {
    "text": "specific business decisions but also to determine the amount of work that you're going to have to do to",
    "start": "3426319",
    "end": "3431680"
  },
  {
    "text": "secure from new or current exposures",
    "start": "3431680",
    "end": "3438160"
  },
  {
    "text": "so one thought of actually developing some type of exposure interface by which you say",
    "start": "3439599",
    "end": "3445280"
  },
  {
    "text": "all right we create this class and then we're going to actually define specific types",
    "start": "3445280",
    "end": "3451839"
  },
  {
    "text": "of vulnerabilities of exposures and inherit from a common class that just allows us to record specific",
    "start": "3451839",
    "end": "3459440"
  },
  {
    "text": "information about a type of exposure we have mitigated meaning you try to buffer overflow me",
    "start": "3459440",
    "end": "3466880"
  },
  {
    "text": "i create a new buffer overflow object and pass it the offending data",
    "start": "3466880",
    "end": "3471920"
  },
  {
    "text": "it makes sense my app my application could do this i store the size the buffer of the data",
    "start": "3471920",
    "end": "3477920"
  },
  {
    "text": "you gave it to me i know how much data is there i just don't want to store it into my internal program because i have constraints",
    "start": "3477920",
    "end": "3483760"
  },
  {
    "text": "but i still have the data now all of a sudden my application has turned into a honeypot",
    "start": "3483760",
    "end": "3490480"
  },
  {
    "text": "now i'm storing all of the information that you're giving me as a hacker about new attacks possible shell code buffer",
    "start": "3490480",
    "end": "3497839"
  },
  {
    "text": "overflow what if you're like i have this really tricky unicode buffer overflow string i",
    "start": "3497839",
    "end": "3503839"
  },
  {
    "text": "wonder if this application has the same vulnerability that one has i'll just try it",
    "start": "3503839",
    "end": "3509200"
  },
  {
    "text": "thank you we're going to signal this create this object go in pass everything in it's going to go through a common",
    "start": "3509200",
    "end": "3515359"
  },
  {
    "text": "interface and log all that information out what's neat is that you would create",
    "start": "3515359",
    "end": "3521200"
  },
  {
    "text": "your interface your exposure interface to handle arbitrary data et cetera so the fact",
    "start": "3521200",
    "end": "3526960"
  },
  {
    "text": "that you have a buffer over exposure that's just a naming issue of telling it exactly what to do you would basically",
    "start": "3526960",
    "end": "3533680"
  },
  {
    "text": "have one interface that would allow you to honeypot or",
    "start": "3533680",
    "end": "3539599"
  },
  {
    "text": "excuse me record any type of data of any type of",
    "start": "3539599",
    "end": "3544799"
  },
  {
    "text": "exposure that existed in your application through one simple process you write it once",
    "start": "3544799",
    "end": "3551359"
  },
  {
    "text": "you write you create your design you add your mitigation if statements if it's bigger than this you call a single",
    "start": "3551359",
    "end": "3557119"
  },
  {
    "text": "interface you're done you're now secure from buffer overflows because you have common code validation",
    "start": "3557119",
    "end": "3563839"
  },
  {
    "text": "you audit you know when you're getting people are attacking you you have all the information that they",
    "start": "3563839",
    "end": "3570799"
  },
  {
    "text": "gave you when they're trying to attack you you have their ip addresses what they try to buffer you overflow",
    "start": "3570799",
    "end": "3576160"
  },
  {
    "text": "a buffer overflow you with etc",
    "start": "3576160",
    "end": "3580798"
  },
  {
    "text": "so basically you have to plan for all exposure mitigation and monitoring",
    "start": "3582400",
    "end": "3587760"
  },
  {
    "text": "you have to plan for it if you're done with if i get done with this application and a new type of vulnerability comes",
    "start": "3587760",
    "end": "3594480"
  },
  {
    "text": "out i'm gonna have to back up i'm gonna have to go to the design and probably change a lot of code to handle that new",
    "start": "3594480",
    "end": "3600880"
  },
  {
    "text": "infrastructure problem build common data error handling",
    "start": "3600880",
    "end": "3607200"
  },
  {
    "text": "and auditing routines this is the fastest way to get your project done unfortunately the people that are",
    "start": "3607200",
    "end": "3612720"
  },
  {
    "text": "working on the code that makes your program do what you're selling it for are going to have to wait till you're",
    "start": "3612720",
    "end": "3618720"
  },
  {
    "text": "done with this and they should wait because until you have all of this type of security",
    "start": "3618720",
    "end": "3624079"
  },
  {
    "text": "handling architecture you shouldn't be writing code to do the real work you shouldn't even be thinking about it",
    "start": "3624079",
    "end": "3630319"
  },
  {
    "text": "because your your application must be built upon this",
    "start": "3630319",
    "end": "3635520"
  },
  {
    "text": "the exposures that are accessed by hackers should immediately notify real people",
    "start": "3638000",
    "end": "3643359"
  },
  {
    "text": "your computer is for naught as far as making decisions that are going to deal with the",
    "start": "3643359",
    "end": "3649119"
  },
  {
    "text": "money that your corporation makes your downtime from when you get exploited",
    "start": "3649119",
    "end": "3654400"
  },
  {
    "text": "you can imagine what would happen if you sat there with this really large log after you uh someone rooted your box",
    "start": "3654400",
    "end": "3660960"
  },
  {
    "text": "and the the board of director says you know what happened you say well someone got administrator access to our machine",
    "start": "3660960",
    "end": "3667280"
  },
  {
    "text": "and they say well how did that happen and the auditing report comes up that your log of failed authentication",
    "start": "3667280",
    "end": "3672799"
  },
  {
    "text": "attempts is two gigs in size you're probably going to look pretty dumb because no one ever looked at it we",
    "start": "3672799",
    "end": "3678720"
  },
  {
    "text": "never knew we were being brute forced even though our application recorded it so you still have to have that link",
    "start": "3678720",
    "end": "3685040"
  },
  {
    "text": "between people and your application it should always be there",
    "start": "3685040",
    "end": "3690078"
  },
  {
    "text": "last but not least you have to have some type of response process to secure your forensic data and restore",
    "start": "3690960",
    "end": "3697760"
  },
  {
    "text": "the application to a known secure and working state after hackers attempt to",
    "start": "3697760",
    "end": "3703040"
  },
  {
    "text": "break in or do break in because the truth is downtime is money so if you see some type of failure you need a way to",
    "start": "3703040",
    "end": "3709599"
  },
  {
    "text": "audit that instantly and throw something else back up notify the correct people",
    "start": "3709599",
    "end": "3715280"
  },
  {
    "text": "try to move on with this type of intrusion detection intrusion handling data handling state",
    "start": "3715280",
    "end": "3722640"
  },
  {
    "text": "mitigation then all of that comes back to if a hacker hits you you need to know that it",
    "start": "3722640",
    "end": "3728720"
  },
  {
    "text": "happened and from that you can make a logical decision as a human being as a person a physical person not as a",
    "start": "3728720",
    "end": "3734640"
  },
  {
    "text": "computer about what you need to do to resolve that issue",
    "start": "3734640",
    "end": "3740838"
  },
  {
    "text": "do i have any questions",
    "start": "3741599",
    "end": "3744640"
  },
  {
    "text": "yes",
    "start": "3747839",
    "end": "3750839"
  },
  {
    "text": "i've had several conversations about a",
    "start": "3761200",
    "end": "3768880"
  },
  {
    "text": "a monitored process by which even very small amounts of code could be",
    "start": "3768880",
    "end": "3774799"
  },
  {
    "text": "built up over time through some type of open source project just to give possible infrastructure",
    "start": "3774799",
    "end": "3781200"
  },
  {
    "text": "interfaces not oh this is how you perform this grand old function but just a very low level support",
    "start": "3781200",
    "end": "3787920"
  },
  {
    "text": "through an open source method and that conversation merely got to the point that",
    "start": "3787920",
    "end": "3794319"
  },
  {
    "text": "the ability to add exploits to open source code",
    "start": "3794319",
    "end": "3799599"
  },
  {
    "text": "um in conversation with certain peoples and some examples that they gave me",
    "start": "3799599",
    "end": "3805119"
  },
  {
    "text": "i would probably not suggest it i think that",
    "start": "3805119",
    "end": "3810559"
  },
  {
    "text": "as long as internally you perform your source code audits your code audits",
    "start": "3810559",
    "end": "3816960"
  },
  {
    "text": "look at the source code your binary audience using tools and just common guidelines that",
    "start": "3816960",
    "end": "3823200"
  },
  {
    "text": "you know anyone could create their own and probably just as secure as an open source environment by which a simple",
    "start": "3823200",
    "end": "3830160"
  },
  {
    "text": "extra stack variable could be the difference of an exploit or not and i doubt that any one corporation would",
    "start": "3830160",
    "end": "3836799"
  },
  {
    "text": "want to take responsibility at a level of library use to in that way shout out and say here",
    "start": "3836799",
    "end": "3844160"
  },
  {
    "text": "are 75 libraries that do these things exactly this way sure they may be",
    "start": "3844160",
    "end": "3849200"
  },
  {
    "text": "functional per chance if it was open source with kind of an open licensing that like just",
    "start": "3849200",
    "end": "3855599"
  },
  {
    "text": "take and copy and modify and do whatever you want with maybe it's a good baseline for other corporations to develop some",
    "start": "3855599",
    "end": "3862559"
  },
  {
    "text": "type of secure you know libraries in that but i don't foresee ever having like the open source project that you",
    "start": "3862559",
    "end": "3869520"
  },
  {
    "text": "know here's secure stuff because it won't be is that an answer",
    "start": "3869520",
    "end": "3876319"
  },
  {
    "text": "any other questions okay well thank you very much",
    "start": "3876319",
    "end": "3884400"
  },
  {
    "text": "if you have any questions come on up",
    "start": "3884400",
    "end": "3888599"
  },
  {
    "text": "foreign",
    "start": "3899760",
    "end": "3902760"
  },
  {
    "text": "so",
    "start": "3913599",
    "end": "3916599"
  },
  {
    "text": "foreign",
    "start": "3957119",
    "end": "3960119"
  },
  {
    "text": "foreign",
    "start": "3971359",
    "end": "3974359"
  },
  {
    "text": "so",
    "start": "3983280",
    "end": "3986280"
  },
  {
    "text": "so",
    "start": "4011599",
    "end": "4014599"
  },
  {
    "text": "foreign",
    "start": "4055200",
    "end": "4058200"
  },
  {
    "text": "foreign",
    "start": "4069119",
    "end": "4072119"
  },
  {
    "text": "so",
    "start": "4109600",
    "end": "4112600"
  },
  {
    "text": "foreign",
    "start": "4138799",
    "end": "4141798"
  },
  {
    "text": "foreign",
    "start": "4153520",
    "end": "4156520"
  },
  {
    "text": "foreign",
    "start": "4167040",
    "end": "4170040"
  },
  {
    "text": "so",
    "start": "4196719",
    "end": "4199719"
  },
  {
    "text": "foreign",
    "start": "4207679",
    "end": "4210679"
  },
  {
    "text": "so",
    "start": "4235679",
    "end": "4238679"
  },
  {
    "text": "foreign",
    "start": "4264960",
    "end": "4267960"
  },
  {
    "text": "do",
    "start": "4280560",
    "end": "4283560"
  },
  {
    "text": "so",
    "start": "4336400",
    "end": "4339400"
  },
  {
    "text": "foreign",
    "start": "4362960",
    "end": "4365960"
  },
  {
    "text": "foreign",
    "start": "4377040",
    "end": "4380040"
  },
  {
    "text": "so",
    "start": "4417600",
    "end": "4420600"
  },
  {
    "text": "so",
    "start": "4434480",
    "end": "4437480"
  },
  {
    "text": "foreign",
    "start": "4461120",
    "end": "4464120"
  },
  {
    "text": "foreign",
    "start": "4475440",
    "end": "4478440"
  },
  {
    "text": "foreign",
    "start": "4559360",
    "end": "4562360"
  },
  {
    "text": "foreign",
    "start": "4573199",
    "end": "4576199"
  },
  {
    "text": "so",
    "start": "4613679",
    "end": "4616679"
  },
  {
    "text": "foreign",
    "start": "4642719",
    "end": "4645719"
  },
  {
    "text": "foreign",
    "start": "4657360",
    "end": "4660360"
  },
  {
    "text": "foreign",
    "start": "4671280",
    "end": "4674280"
  },
  {
    "text": "so",
    "start": "4697360",
    "end": "4700360"
  },
  {
    "text": "foreign",
    "start": "4711760",
    "end": "4714760"
  },
  {
    "text": "so",
    "start": "4742880",
    "end": "4745880"
  },
  {
    "text": "foreign",
    "start": "4755440",
    "end": "4758440"
  },
  {
    "text": "foreign",
    "start": "4769040",
    "end": "4772040"
  },
  {
    "text": "foreign",
    "start": "4783040",
    "end": "4786040"
  },
  {
    "text": "foreign",
    "start": "4867120",
    "end": "4870120"
  },
  {
    "text": "foreign",
    "start": "4881199",
    "end": "4884199"
  },
  {
    "text": "so",
    "start": "4935360",
    "end": "4938360"
  },
  {
    "text": "foreign",
    "start": "4965280",
    "end": "4968280"
  },
  {
    "text": "foreign",
    "start": "4979280",
    "end": "4982280"
  },
  {
    "text": "foreign",
    "start": "5049120",
    "end": "5052120"
  },
  {
    "text": "foreign",
    "start": "5063520",
    "end": "5066520"
  },
  {
    "text": "foreign",
    "start": "5077040",
    "end": "5080040"
  },
  {
    "text": "foreign",
    "start": "5117600",
    "end": "5120600"
  },
  {
    "text": "so",
    "start": "5145679",
    "end": "5148679"
  },
  {
    "text": "foreign",
    "start": "5161440",
    "end": "5164440"
  },
  {
    "text": "do",
    "start": "5176639",
    "end": "5179639"
  },
  {
    "text": "so",
    "start": "5204639",
    "end": "5207639"
  },
  {
    "text": "foreign",
    "start": "5215760",
    "end": "5218760"
  },
  {
    "text": "foreign",
    "start": "5259440",
    "end": "5262440"
  },
  {
    "text": "foreign",
    "start": "5273120",
    "end": "5276120"
  },
  {
    "text": "foreign",
    "start": "5287199",
    "end": "5290199"
  },
  {
    "text": "so",
    "start": "5299360",
    "end": "5302360"
  },
  {
    "text": "foreign",
    "start": "5371040",
    "end": "5374040"
  },
  {
    "text": "foreign",
    "start": "5385360",
    "end": "5388360"
  },
  {
    "text": "you",
    "start": "5405199",
    "end": "5407280"
  }
]