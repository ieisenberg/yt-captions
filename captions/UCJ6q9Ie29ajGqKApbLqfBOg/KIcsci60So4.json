[
  {
    "start": "0",
    "end": "37000"
  },
  {
    "text": "[Music]",
    "start": "1180",
    "end": "14720"
  },
  {
    "text": "hello everyone welcome to my presentation today my topic is related to",
    "start": "15920",
    "end": "21520"
  },
  {
    "text": "the apple bluetooth subsystem the title is attacking io bluetooth spamming hci and",
    "start": "21520",
    "end": "27119"
  },
  {
    "text": "vendor-specific commands my name is wong from dd research america",
    "start": "27119",
    "end": "33120"
  },
  {
    "text": "i can be reached through this email address in the first part of the presentation we",
    "start": "33120",
    "end": "41040"
  },
  {
    "start": "37000",
    "end": "453000"
  },
  {
    "text": "will focus on the design and implementation of bluetooth hci on different platforms",
    "start": "41040",
    "end": "48800"
  },
  {
    "text": "the first question we may have is what is hci of the bluetooth system basically",
    "start": "49280",
    "end": "55920"
  },
  {
    "text": "people define the operating system side as the host and the firmware assigned as the",
    "start": "55920",
    "end": "61840"
  },
  {
    "text": "controller then the software interface between the host and the controller is called",
    "start": "61840",
    "end": "67200"
  },
  {
    "text": "hci from the hardware perspective the physical connection can be for",
    "start": "67200",
    "end": "72720"
  },
  {
    "text": "example the uart interface the following is a more detailed diagram",
    "start": "72720",
    "end": "79840"
  },
  {
    "text": "the blue part here is the hcs stack",
    "start": "79840",
    "end": "85200"
  },
  {
    "text": "which includes components such as demands and the drivers the red part is the hci firmware",
    "start": "85200",
    "end": "93600"
  },
  {
    "text": "or we can call it the controller the yellow arrow is hci which is a bridge connecting the two",
    "start": "93600",
    "end": "101200"
  },
  {
    "text": "parts for daemons hci provides a",
    "start": "101200",
    "end": "106960"
  },
  {
    "text": "unifying command method access bluetooth hardware features",
    "start": "106960",
    "end": "114000"
  },
  {
    "text": "next question we may have is how many commands does hci bluetooth hss part the answer is a lot",
    "start": "114000",
    "end": "123040"
  },
  {
    "text": "and they are divided into many groups it is worth mentioning that",
    "start": "123040",
    "end": "128080"
  },
  {
    "text": "there is a group dedicated to vendor-specific commands or we can call it vsc for short",
    "start": "128080",
    "end": "136319"
  },
  {
    "text": "if we search for vsc on the internet we can quickly find documents similar to",
    "start": "136319",
    "end": "142720"
  },
  {
    "text": "the following this document is from texas instruments",
    "start": "142720",
    "end": "148560"
  },
  {
    "text": "but i have to point out that holding a small number of bluetooth",
    "start": "148640",
    "end": "154720"
  },
  {
    "text": "vendor-specific commands are documented for most of them we cannot find references at all another thing is that",
    "start": "154720",
    "end": "164400"
  },
  {
    "text": "the meaning of vses on different hardware may be different even if their op codes",
    "start": "164400",
    "end": "171280"
  },
  {
    "text": "are the same for example for the command whose op code is fc0a",
    "start": "171280",
    "end": "179680"
  },
  {
    "text": "they have completely different meaning on the ti and broadcom platform",
    "start": "179680",
    "end": "187760"
  },
  {
    "text": "and let's take an example to learn the hci command of bluetooth",
    "start": "189280",
    "end": "194400"
  },
  {
    "text": "in the link control group the number one command is inquiry we can find its definition",
    "start": "194400",
    "end": "201680"
  },
  {
    "text": "in the latest version of the bluetooth official menu",
    "start": "201680",
    "end": "206640"
  },
  {
    "text": "according to the menu inquiry must include lab inquiry length",
    "start": "207120",
    "end": "214480"
  },
  {
    "text": "and the number of responses the menu also defines the cracked",
    "start": "214480",
    "end": "222000"
  },
  {
    "text": "value range for input for example for",
    "start": "222000",
    "end": "227360"
  },
  {
    "text": "inquiry lens input should be from 1 to 30 in hex",
    "start": "227360",
    "end": "235120"
  },
  {
    "text": "if you submit an incorrect input it will theoretically be rejected by hci",
    "start": "235120",
    "end": "242319"
  },
  {
    "text": "or controller with the basic concept of inquiry",
    "start": "242319",
    "end": "248959"
  },
  {
    "text": "command let's take a look at how each operating system implemented",
    "start": "248959",
    "end": "254080"
  },
  {
    "text": "i chose three different operating systems lightweight bluetooth linux kernel and",
    "start": "254080",
    "end": "260479"
  },
  {
    "text": "macos kernel lightweight bluetooth is representatively implementation of",
    "start": "260479",
    "end": "268080"
  },
  {
    "text": "bluetooth protocol stack and we often see such lightweight implementations in iot",
    "start": "268080",
    "end": "275040"
  },
  {
    "text": "devices or iot environments lice 731 to 738",
    "start": "275040",
    "end": "283199"
  },
  {
    "text": "of the code are the construction of the inquiry command we can see that",
    "start": "283199",
    "end": "290320"
  },
  {
    "text": "this this code is constructing lab inquiry lens and the number of",
    "start": "290320",
    "end": "297919"
  },
  {
    "text": "responses almost a bite by byte personally i don't like this kind of",
    "start": "297919",
    "end": "304320"
  },
  {
    "text": "handmade code very much they are not easy to maintain and sometimes not easy to",
    "start": "304320",
    "end": "310880"
  },
  {
    "text": "understand when it comes to the linux kernel it",
    "start": "310880",
    "end": "317120"
  },
  {
    "text": "becomes clear almost all commands are defined as data structures",
    "start": "317120",
    "end": "322560"
  },
  {
    "text": "which can be found in the header file",
    "start": "322560",
    "end": "327680"
  },
  {
    "text": "the third example is our protagonist today the mac os io bluetooth family kernel",
    "start": "328160",
    "end": "335120"
  },
  {
    "text": "extension when i first located the function io",
    "start": "335120",
    "end": "340560"
  },
  {
    "text": "bluetooth hci inquiry i saw some strange strings with the",
    "start": "340560",
    "end": "347440"
  },
  {
    "text": "deepening of reverse engineering i found a large number of such strings",
    "start": "347440",
    "end": "354240"
  },
  {
    "text": "which appear in almost every bluetooth hcl handler",
    "start": "354240",
    "end": "360479"
  },
  {
    "text": "curiosity draw me to summarize these strings and i found that they could actually be",
    "start": "362319",
    "end": "369840"
  },
  {
    "text": "regarded as indicators to guide the functions pack data list and",
    "start": "369840",
    "end": "376240"
  },
  {
    "text": "unpack the list the indicator for bluetooth hci inquiry is hbtb",
    "start": "376240",
    "end": "385199"
  },
  {
    "text": "h means two bytes and b means one byte they represent the op code and",
    "start": "385199",
    "end": "391759"
  },
  {
    "text": "body size of the hci request tbb corresponds to lap",
    "start": "391759",
    "end": "399039"
  },
  {
    "text": "lab inquiry length and number of responses in the menu so we can easily deduce that t means",
    "start": "399039",
    "end": "407039"
  },
  {
    "text": "three bytes now we can summarize three different",
    "start": "407039",
    "end": "413759"
  },
  {
    "text": "operating systems the implementation of iot related hci",
    "start": "413759",
    "end": "419039"
  },
  {
    "text": "represented by lwbt is the simplest and the design of",
    "start": "419039",
    "end": "425199"
  },
  {
    "text": "mac os io bluetooth family is the most complicated i think apple can patent",
    "start": "425199",
    "end": "432080"
  },
  {
    "text": "their hci requests to construction process maybe second complex design",
    "start": "432080",
    "end": "439199"
  },
  {
    "text": "often means more attack surface and please also keep in mind if the design and the implementation are",
    "start": "439199",
    "end": "446479"
  },
  {
    "text": "too simple it usually doesn't mean security we will discuss it later on",
    "start": "446479",
    "end": "453840"
  },
  {
    "start": "453000",
    "end": "705000"
  },
  {
    "text": "in the next part we will try our best to dive into io bluetooth family to be",
    "start": "454560",
    "end": "464240"
  },
  {
    "text": "honest when i started this research project i didn't expect that i could find the",
    "start": "464240",
    "end": "471280"
  },
  {
    "text": "security problems of bluetooth at first i just want to",
    "start": "471280",
    "end": "476319"
  },
  {
    "text": "learn about the bluetooth subsystem of mac os",
    "start": "476319",
    "end": "481360"
  },
  {
    "text": "for this i read the documentation write a lot of source code and",
    "start": "481360",
    "end": "488720"
  },
  {
    "text": "even reverse engineered the bluetooth kernel extensions however if we in turn to take the",
    "start": "488720",
    "end": "497280"
  },
  {
    "text": "previous work as a starting point and continue this research seriously",
    "start": "497280",
    "end": "503440"
  },
  {
    "text": "where should we start for me i think i still need some more",
    "start": "503440",
    "end": "508479"
  },
  {
    "text": "tours for example sniffer i need sniffer i need fuzzer",
    "start": "508479",
    "end": "515039"
  },
  {
    "text": "i need the code coverage masters for close the source driver",
    "start": "515039",
    "end": "520080"
  },
  {
    "text": "and the kernel address sanitizer then we need to do attack surface",
    "start": "520080",
    "end": "528240"
  },
  {
    "text": "assessment after reverse engineering i found that there are at least",
    "start": "528240",
    "end": "533360"
  },
  {
    "text": "two attack surfaces that we must consider",
    "start": "533360",
    "end": "539440"
  },
  {
    "text": "simple dispatch wl is responsible for managing the data floor from daemons",
    "start": "540160",
    "end": "547200"
  },
  {
    "text": "to the hci while the function process event data wl is in charge of",
    "start": "547200",
    "end": "554320"
  },
  {
    "text": "the state machine from the controller back to the host",
    "start": "554320",
    "end": "562320"
  },
  {
    "text": "and three years ago in order to learn mac os i wrote a kernel extension which",
    "start": "562320",
    "end": "569600"
  },
  {
    "text": "integrated file operate file operation monitoring dynamic library and the network traffic",
    "start": "569600",
    "end": "576640"
  },
  {
    "text": "monitoring manager access control policy filtering kernel extension firewall and other",
    "start": "576640",
    "end": "583279"
  },
  {
    "text": "features the project called chemo also includes a kernel inline hook engine which can",
    "start": "583279",
    "end": "590480"
  },
  {
    "text": "hook almost any kernel function you want the source code of the project can be found",
    "start": "590480",
    "end": "595760"
  },
  {
    "text": "on github in the last year i practiced the mac os ipc communication monitoring based on",
    "start": "595760",
    "end": "602640"
  },
  {
    "text": "this project it can filter x pc ipc communication",
    "start": "602640",
    "end": "607680"
  },
  {
    "text": "between processes and here is a link to blackhead usa arsenal and in order to",
    "start": "607680",
    "end": "616079"
  },
  {
    "text": "learn more about the architecture and the attack surface of mac os bluetooth",
    "start": "616079",
    "end": "622720"
  },
  {
    "text": "subsystem i wrote several sniffers based on chemo",
    "start": "622720",
    "end": "629440"
  },
  {
    "text": "this screenshot is one of them it can intercept all hci requests sent to the",
    "start": "630959",
    "end": "637920"
  },
  {
    "text": "controller because k-monk has pre and post callback capabilities",
    "start": "637920",
    "end": "643279"
  },
  {
    "text": "i can parse out the input parameters core processor like bluetooth d",
    "start": "643279",
    "end": "652800"
  },
  {
    "text": "and other useful information in the pre callback handler and i can also print or modify",
    "start": "652800",
    "end": "660160"
  },
  {
    "text": "the return data of the target function in the post callback handler by",
    "start": "660160",
    "end": "667120"
  },
  {
    "text": "analysing the log we can find some interesting details of the bluetooth operation on mac os",
    "start": "667120",
    "end": "675040"
  },
  {
    "text": "platform first of all",
    "start": "675040",
    "end": "679440"
  },
  {
    "text": "every specific operation is accompanied by crate and the delete",
    "start": "680160",
    "end": "687040"
  },
  {
    "text": "operation this is very similar to the file operation",
    "start": "687040",
    "end": "692720"
  },
  {
    "text": "file open and close handle operations on windows platform between",
    "start": "692720",
    "end": "699519"
  },
  {
    "text": "create and delete is a specific hci request",
    "start": "699519",
    "end": "706079"
  },
  {
    "start": "705000",
    "end": "1001000"
  },
  {
    "text": "and i have a demo of the sniffer project please let me play the video",
    "start": "707200",
    "end": "717839"
  },
  {
    "text": "let me first clean all kimon locks then i will turn on air job",
    "start": "719040",
    "end": "726880"
  },
  {
    "text": "it will trigger sharing the and the bluetooth these operations",
    "start": "726880",
    "end": "733040"
  },
  {
    "text": "okay yeah then we can say a large number of",
    "start": "734320",
    "end": "740320"
  },
  {
    "text": "bluetooth hci requests let's take the first group the first",
    "start": "740320",
    "end": "747440"
  },
  {
    "text": "group as an example first there is a create operation and then",
    "start": "747440",
    "end": "754880"
  },
  {
    "text": "is a row command row window specific command from process bluetooth",
    "start": "754880",
    "end": "762320"
  },
  {
    "text": "d and then is a delete operation so compared with other",
    "start": "762320",
    "end": "769200"
  },
  {
    "text": "hci sniffers on based sniffer can capture and display",
    "start": "769200",
    "end": "775680"
  },
  {
    "text": "the details of this car sequences",
    "start": "775680",
    "end": "781200"
  },
  {
    "text": "okay and in order to deepen our understanding of the hci commands",
    "start": "784839",
    "end": "791519"
  },
  {
    "text": "we need to do some more practice next i'd like to refer an article",
    "start": "791519",
    "end": "798720"
  },
  {
    "text": "called hanking i o bluetooth which will be mentioned trials in today's presentation",
    "start": "798720",
    "end": "806399"
  },
  {
    "text": "this article explains how to write a user mode program to communicate with",
    "start": "806399",
    "end": "812800"
  },
  {
    "text": "the bluetooth daemon and driver and finally meet the requirements such as modifying",
    "start": "812800",
    "end": "820480"
  },
  {
    "text": "the local name as shown on the left here the author",
    "start": "820480",
    "end": "828639"
  },
  {
    "text": "wants to change the bluetooth local name to cda",
    "start": "828639",
    "end": "834560"
  },
  {
    "text": "with the knowledge learned by using keymount based sniver this requirement is is easy to us",
    "start": "836959",
    "end": "844480"
  },
  {
    "text": "to achieve we only need to implement the calling process from",
    "start": "844480",
    "end": "851519"
  },
  {
    "text": "one crit hci crate and then read local name change log name",
    "start": "851519",
    "end": "857600"
  },
  {
    "text": "and then delete so we can have a command line tool like the one on the",
    "start": "857600",
    "end": "864160"
  },
  {
    "text": "right in the next step we need to deepen our",
    "start": "864160",
    "end": "871199"
  },
  {
    "text": "understanding of vendor-specific commands render specific commands on mac os",
    "start": "871199",
    "end": "876720"
  },
  {
    "text": "can be divided into two types the first is the building vs",
    "start": "876720",
    "end": "884639"
  },
  {
    "text": "reverse engineering shows that these commands have corresponding",
    "start": "884639",
    "end": "890720"
  },
  {
    "text": "handlers and indicators",
    "start": "890720",
    "end": "894800"
  },
  {
    "text": "but more vendor-specific commands come in the form of raw data for example",
    "start": "895760",
    "end": "902639"
  },
  {
    "text": "as shown in the screenshot of hci sniffer",
    "start": "902639",
    "end": "909680"
  },
  {
    "text": "it's your command in the in the format of document",
    "start": "909680",
    "end": "915439"
  },
  {
    "text": "at this year's blackhead usa arsenal i shared some tools that uses the",
    "start": "916000",
    "end": "922399"
  },
  {
    "text": "raw vendor-specific commands they can communicate directly with the controller among",
    "start": "922399",
    "end": "929600"
  },
  {
    "text": "them some commands are very variable they can even read and write ramp",
    "start": "929600",
    "end": "936959"
  },
  {
    "text": "data of the firmware and here is a link",
    "start": "936959",
    "end": "943360"
  },
  {
    "text": "okay so our next goal is fuzzing because we have sniffers we can quickly",
    "start": "945680",
    "end": "952240"
  },
  {
    "text": "convert them to passive buzzer that is that is because we can do bit flipping",
    "start": "952240",
    "end": "958160"
  },
  {
    "text": "of input parameter easily and we have implement some tools that can",
    "start": "958160",
    "end": "964959"
  },
  {
    "text": "send for example raw when a specific command to controller",
    "start": "964959",
    "end": "970720"
  },
  {
    "text": "which can also be transformed into active fuzzers",
    "start": "970720",
    "end": "976000"
  },
  {
    "text": "in practice in practice i found that combining the two fuzzing method often has better",
    "start": "976000",
    "end": "982399"
  },
  {
    "text": "results and by the way since we have chemo in hand we can use the",
    "start": "982399",
    "end": "989199"
  },
  {
    "text": "inline hook based method to perform basic code coverage analysis",
    "start": "989199",
    "end": "996720"
  },
  {
    "text": "against closed source drivers",
    "start": "996720",
    "end": "1000480"
  },
  {
    "start": "1001000",
    "end": "1080000"
  },
  {
    "text": "let's see how my further works on mac os bixer let me play the video",
    "start": "1002959",
    "end": "1009950"
  },
  {
    "text": "[Music] as a target machine when i made this video",
    "start": "1009950",
    "end": "1015759"
  },
  {
    "text": "the operating system was the latest macos mixer",
    "start": "1015759",
    "end": "1021360"
  },
  {
    "text": "let me draw my browser and yeah after a few seconds the system crashed",
    "start": "1021680",
    "end": "1029360"
  },
  {
    "text": "it's already crashed",
    "start": "1030000",
    "end": "1032798"
  },
  {
    "text": "[Music] okay",
    "start": "1035710",
    "end": "1039839"
  },
  {
    "text": "yeah through all kinds of efforts we have gone a long way compared with simply",
    "start": "1043039",
    "end": "1050720"
  },
  {
    "text": "reading documents and codes we already have our own sniffers and the fuzzer",
    "start": "1050720",
    "end": "1059120"
  },
  {
    "text": "we even implement several implements simple code coverage tool and",
    "start": "1059120",
    "end": "1065360"
  },
  {
    "text": "the kernel address sanitizer for close the source driver they are not perfect",
    "start": "1065360",
    "end": "1070640"
  },
  {
    "text": "but as we will see in the next capture they do perform well",
    "start": "1070640",
    "end": "1081280"
  },
  {
    "start": "1080000",
    "end": "1199000"
  },
  {
    "text": "the next capture is mainly about vulnerability case study i will share with you some details of",
    "start": "1081280",
    "end": "1087919"
  },
  {
    "text": "the latest macos bluetooth kernel vulnerabilities and what i have learned",
    "start": "1087919",
    "end": "1093600"
  },
  {
    "text": "from them since hci is open to low privileged",
    "start": "1093600",
    "end": "1101520"
  },
  {
    "text": "processes the infosec community has always been concerned about the security impact of",
    "start": "1101520",
    "end": "1109039"
  },
  {
    "text": "this interface in recent years binary auditing and fuzzing against",
    "start": "1109039",
    "end": "1116000"
  },
  {
    "text": "drivers such as io bluetooth family have never stopped we can also approve this from the output",
    "start": "1116000",
    "end": "1122880"
  },
  {
    "text": "of error pro hexary the routing",
    "start": "1122880",
    "end": "1128320"
  },
  {
    "text": "io business hci user client valid parameters has expanded from",
    "start": "1128320",
    "end": "1134960"
  },
  {
    "text": "300 lies of code on macos highest sierra to more than 3000 lies on macos catalina",
    "start": "1134960",
    "end": "1146720"
  },
  {
    "text": "so that means hunt vulnerability is not that easy",
    "start": "1147679",
    "end": "1152720"
  },
  {
    "text": "however with the help of fuzzer's k-mount-based code coverage method and",
    "start": "1152720",
    "end": "1160080"
  },
  {
    "text": "the kernel address sanitizer solution i did the i did find some security problems in the",
    "start": "1160080",
    "end": "1167840"
  },
  {
    "text": "latest mac os and i so far i reported the 23 vulnerabilities to apple",
    "start": "1167840",
    "end": "1174400"
  },
  {
    "text": "um and their types include uninitialized memory derivatives kernel",
    "start": "1174400",
    "end": "1181520"
  },
  {
    "text": "information disclosure heap data autobahn access arbitrary",
    "start": "1181520",
    "end": "1186720"
  },
  {
    "text": "memory access double free use of the free cost by risk condition and one more thing",
    "start": "1186720",
    "end": "1193760"
  },
  {
    "text": "security update turning turning number two can be bypassed",
    "start": "1193760",
    "end": "1199120"
  },
  {
    "start": "1199000",
    "end": "1323000"
  },
  {
    "text": "here is the cv id and the patch information",
    "start": "1200000",
    "end": "1204320"
  },
  {
    "text": "the first vulnerability i want to share with you is related to autobahn's reading of kernel hip data",
    "start": "1205200",
    "end": "1213600"
  },
  {
    "text": "i have i have give i have given two cases for this type the cv id is",
    "start": "1213600",
    "end": "1222440"
  },
  {
    "text": "3907 and 3908",
    "start": "1222440",
    "end": "1226879"
  },
  {
    "text": "in the kernel address sanitizer's panic lock we can see that for vulnerability 20 20",
    "start": "1232400",
    "end": "1239840"
  },
  {
    "text": "39 7 our actual input lens is only one byte and the wonderful function will read",
    "start": "1239840",
    "end": "1246720"
  },
  {
    "text": "about 200 bytes out of bonds to hci request",
    "start": "1246720",
    "end": "1253120"
  },
  {
    "text": "and here we can see a lot of database tag",
    "start": "1253120",
    "end": "1259840"
  },
  {
    "text": "they are all created by my kernel address sanitizer and the call stack is",
    "start": "1259840",
    "end": "1266559"
  },
  {
    "text": "is this [Music]",
    "start": "1267280",
    "end": "1272920"
  },
  {
    "text": "hci request method",
    "start": "1273520",
    "end": "1277520"
  },
  {
    "text": "a similar situation also exists in function hci write start link key",
    "start": "1278960",
    "end": "1285520"
  },
  {
    "text": "this handle this handler mistakenly trust the user input",
    "start": "1285520",
    "end": "1291679"
  },
  {
    "text": "and the situation is the same",
    "start": "1291679",
    "end": "1297440"
  },
  {
    "text": "so in summary this type of vulnerability is straightforward and easy to fix the",
    "start": "1298240",
    "end": "1304480"
  },
  {
    "text": "wonderbolt handler lack the necessary verification for user mode input parameters and",
    "start": "1304480",
    "end": "1312240"
  },
  {
    "text": "with kernel address analyzers help such vulnerabilities are easy to hunt",
    "start": "1312240",
    "end": "1319440"
  },
  {
    "text": "we have several more cases [Music]",
    "start": "1319440",
    "end": "1324809"
  },
  {
    "start": "1323000",
    "end": "1453000"
  },
  {
    "text": "the second vulnerabilities cv id is turning 10 39 12. it was fixed",
    "start": "1325360",
    "end": "1332640"
  },
  {
    "text": "in june this year this is an autobahn access vulnerability",
    "start": "1332640",
    "end": "1341280"
  },
  {
    "text": "and i listed list listed separately because as far as i know this is the third time",
    "start": "1341280",
    "end": "1349280"
  },
  {
    "text": "this function has been found vulnerable the first time",
    "start": "1349280",
    "end": "1354400"
  },
  {
    "text": "the vulnerability was disclosed in 2014",
    "start": "1354400",
    "end": "1361520"
  },
  {
    "text": "that means six years ago and in the in the link below is a poc for",
    "start": "1361520",
    "end": "1367840"
  },
  {
    "text": "the vulnerability and then in 2015",
    "start": "1367840",
    "end": "1375840"
  },
  {
    "text": "a vulnerability named 20 2015 3787",
    "start": "1375840",
    "end": "1382480"
  },
  {
    "text": "showed that the function was once again found to be vulnerable the call stack triggered by the",
    "start": "1382480",
    "end": "1389280"
  },
  {
    "text": "vulnerability is shown in the figure below",
    "start": "1389280",
    "end": "1394159"
  },
  {
    "text": "and five years later when i was auditing this function i found that it still lacks",
    "start": "1394640",
    "end": "1402400"
  },
  {
    "text": "if effective boundary checking when the input is malicious magical",
    "start": "1402400",
    "end": "1409760"
  },
  {
    "text": "number the handler will auto bond access and the",
    "start": "1409760",
    "end": "1414840"
  },
  {
    "text": "panic in fact vulnerabilities are found",
    "start": "1414840",
    "end": "1420080"
  },
  {
    "text": "repeatedly for some complex functions another interesting case is 2020",
    "start": "1420080",
    "end": "1425840"
  },
  {
    "text": "9834 it's a wi-fi vulnerability i discovered this year this wonderful",
    "start": "1425840",
    "end": "1432720"
  },
  {
    "text": "function was attacked 30 years ago",
    "start": "1432720",
    "end": "1438320"
  },
  {
    "text": "so for such complex functions it is better to have complete test",
    "start": "1438320",
    "end": "1444960"
  },
  {
    "text": "cases to ensure that all branch can be covered",
    "start": "1444960",
    "end": "1451840"
  },
  {
    "start": "1453000",
    "end": "1674000"
  },
  {
    "text": "case number three the 79 cv id for of the third vulnerability is",
    "start": "1454080",
    "end": "1462000"
  },
  {
    "text": "20 20 99 29 which is fixed in september this year",
    "start": "1462000",
    "end": "1469440"
  },
  {
    "text": "the reason i noticed this one variability is because i found that the indicator of function hci enhanced",
    "start": "1470799",
    "end": "1479520"
  },
  {
    "text": "except a synchronized connection request has changed on the high sierra platform the",
    "start": "1479520",
    "end": "1486640"
  },
  {
    "text": "indicator is this one but on macos catalina the indicator of the function has",
    "start": "1486640",
    "end": "1493360"
  },
  {
    "text": "changed to well to to this this string contains several percentage characters",
    "start": "1493360",
    "end": "1501840"
  },
  {
    "text": "and i have no idea about the percentage character",
    "start": "1501840",
    "end": "1507600"
  },
  {
    "text": "so this change has brought me many questions for example um we will need to introduce",
    "start": "1512320",
    "end": "1520960"
  },
  {
    "text": "compatibility issues and what is the main meaning of the",
    "start": "1520960",
    "end": "1527679"
  },
  {
    "text": "percentage character and whether are there other new characters introduced",
    "start": "1527679",
    "end": "1533760"
  },
  {
    "text": "um i have no idea that at a time after reverse engineering i found that percentage",
    "start": "1533760",
    "end": "1541279"
  },
  {
    "text": "means that the pack and unpack routine need to read five bytes",
    "start": "1541279",
    "end": "1549120"
  },
  {
    "text": "of the data from the input address but the problem is that the address can",
    "start": "1549120",
    "end": "1555279"
  },
  {
    "text": "be controlled by user mode so the following panic log is the",
    "start": "1555279",
    "end": "1563120"
  },
  {
    "text": "result of setting input address to that coffee that beef",
    "start": "1563120",
    "end": "1570080"
  },
  {
    "text": "there are many interesting use uses for this feature such as",
    "start": "1570480",
    "end": "1577360"
  },
  {
    "text": "building a more efficient low hammer based on this vulnerability",
    "start": "1577360",
    "end": "1584320"
  },
  {
    "text": "and we can have a try",
    "start": "1584320",
    "end": "1587278"
  },
  {
    "text": "next i searched for for apple sdks this is another case",
    "start": "1589520",
    "end": "1596000"
  },
  {
    "text": "where i found useful information from the sdk in the bluetooth header file the",
    "start": "1596000",
    "end": "1603200"
  },
  {
    "text": "indicator input that can be accepted by the pack and unpack function is defined in",
    "start": "1603200",
    "end": "1611279"
  },
  {
    "text": "detail a percentage is actually the shift key of the number five",
    "start": "1611279",
    "end": "1619120"
  },
  {
    "text": "which represents the reverse processing of the data input by the user",
    "start": "1619120",
    "end": "1626480"
  },
  {
    "text": "so all the questions about indicators have answers here",
    "start": "1626480",
    "end": "1632260"
  },
  {
    "text": "[Music] as a conclusion i want to",
    "start": "1632260",
    "end": "1638320"
  },
  {
    "text": "print out the change of indicator actually means that",
    "start": "1638320",
    "end": "1644720"
  },
  {
    "text": "the function of the controller has changed and the new features",
    "start": "1644720",
    "end": "1652320"
  },
  {
    "text": "or changes always mean new attack surfaces",
    "start": "1652320",
    "end": "1657440"
  },
  {
    "text": "um so which are worthy of our exploration",
    "start": "1657440",
    "end": "1664320"
  },
  {
    "text": "and by the way uh reverse engineering plus apple sdk usually means a better",
    "start": "1664320",
    "end": "1671600"
  },
  {
    "text": "life the first vulnerability is related to",
    "start": "1671600",
    "end": "1680159"
  },
  {
    "text": "vendor-specific command let's start with lwbt",
    "start": "1680159",
    "end": "1687278"
  },
  {
    "text": "i found many interesting comments when reading the lwbt source code",
    "start": "1687360",
    "end": "1694399"
  },
  {
    "text": "the comments show that the ulcer does not seem to be very clear about",
    "start": "1694399",
    "end": "1701840"
  },
  {
    "text": "how to handle the bluetooth event state machine and how to write",
    "start": "1701840",
    "end": "1709679"
  },
  {
    "text": "exception exception handling correctly",
    "start": "1709679",
    "end": "1714640"
  },
  {
    "text": "it should be said that this situation is not uncommon",
    "start": "1715840",
    "end": "1722559"
  },
  {
    "text": "it's remind me that bluetooth event handling functions are worth of attention",
    "start": "1722559",
    "end": "1730080"
  },
  {
    "text": "on the mac os platform the name of this function is process even the data wl",
    "start": "1730080",
    "end": "1739039"
  },
  {
    "text": "and for which i wrote fuzzer and the sniffer specifically for it",
    "start": "1739039",
    "end": "1746960"
  },
  {
    "text": "and this with the further research i noticed a raw command",
    "start": "1747600",
    "end": "1754240"
  },
  {
    "text": "with opcode fce9 which is not actually documented",
    "start": "1754240",
    "end": "1761679"
  },
  {
    "text": "this command will cause the kernel event handler to crash and this is the screenshot",
    "start": "1761679",
    "end": "1769679"
  },
  {
    "text": "at the time",
    "start": "1769679",
    "end": "1772320"
  },
  {
    "text": "so this case reminds me that undocumented commands and",
    "start": "1775279",
    "end": "1783679"
  },
  {
    "text": "non-standard hci implementations can lead to domino",
    "start": "1783679",
    "end": "1791360"
  },
  {
    "text": "effect case number five the fifth case",
    "start": "1792840",
    "end": "1800399"
  },
  {
    "start": "1795000",
    "end": "2030000"
  },
  {
    "text": "is is an uninitialized memory dereference vulnerability which",
    "start": "1800399",
    "end": "1805919"
  },
  {
    "text": "is also the first bluetooth vulnerability i found",
    "start": "1805919",
    "end": "1811760"
  },
  {
    "text": "the process of discovering this vulnerability is very interesting it took me less than 20 minutes",
    "start": "1814640",
    "end": "1821760"
  },
  {
    "text": "to find it and 20 minutes ago i just decided to open the edit pro to reverse",
    "start": "1821760",
    "end": "1828960"
  },
  {
    "text": "bluetooth kernel extension so this vulnerability give me a great confidence um",
    "start": "1828960",
    "end": "1836399"
  },
  {
    "text": "i i can fund this vulnerability not because i'm lucky now because i'm good at kernel reverse",
    "start": "1836399",
    "end": "1844480"
  },
  {
    "text": "engineering but because i have made similar mistakes a few years ago",
    "start": "1844480",
    "end": "1852640"
  },
  {
    "text": "the pattern of this vulnerability is like this say if someone writes a lot",
    "start": "1853679",
    "end": "1862159"
  },
  {
    "text": "conditions in an if statement so what what situation need to be",
    "start": "1862159",
    "end": "1867360"
  },
  {
    "text": "covered in the else branch to me for for this case i",
    "start": "1867360",
    "end": "1872559"
  },
  {
    "text": "don't know i prefer to rewrite this code",
    "start": "1872559",
    "end": "1878080"
  },
  {
    "text": "and let's simplify the problem the this this question um",
    "start": "1878080",
    "end": "1884559"
  },
  {
    "text": "if there are only two conditions uh like condition a is true and",
    "start": "1884559",
    "end": "1891279"
  },
  {
    "text": "condition b is also true we need to discuss three cases uh in the else branch",
    "start": "1891279",
    "end": "1900399"
  },
  {
    "text": "which is uh a is not true but b is true and a is",
    "start": "1900399",
    "end": "1907600"
  },
  {
    "text": "true b is not true and a and b they are both not true so",
    "start": "1907600",
    "end": "1914480"
  },
  {
    "text": "if we ignore these corner cases they are likely to lead potential problems",
    "start": "1914480",
    "end": "1921840"
  },
  {
    "text": "so now let's look at the wonder real vulnerability of the mac os",
    "start": "1922559",
    "end": "1929039"
  },
  {
    "text": "kernel the if branch here has two conditions",
    "start": "1929039",
    "end": "1935840"
  },
  {
    "text": "the number one is the number one condition is the kernel must allocate",
    "start": "1936240",
    "end": "1943679"
  },
  {
    "text": "a heap block successfully and number two is the the user input",
    "start": "1943679",
    "end": "1950559"
  },
  {
    "text": "buffer is not empty okay",
    "start": "1950559",
    "end": "1955518"
  },
  {
    "text": "according to our previous analysis the else branch should cover all",
    "start": "1957360",
    "end": "1963600"
  },
  {
    "text": "uh three corner cases um but what about the the actual situation",
    "start": "1963600",
    "end": "1971519"
  },
  {
    "text": "yeah we can see here the else branch has nothing",
    "start": "1971519",
    "end": "1977840"
  },
  {
    "text": "this means that attacker can bypass or skip the initialization process of",
    "start": "1979760",
    "end": "1986880"
  },
  {
    "text": "the function validate parameters by holding providing the",
    "start": "1986880",
    "end": "1992080"
  },
  {
    "text": "input lens and this uninitialized buffer are then parsed to all hci handlers",
    "start": "1992080",
    "end": "2002158"
  },
  {
    "text": "so um this vulnerability has been hidden in plant side for a long time and",
    "start": "2003679",
    "end": "2011919"
  },
  {
    "text": "some traditional fuzzing methods are difficult to find this type of vulnerability and one more thing",
    "start": "2011919",
    "end": "2019600"
  },
  {
    "text": "is i i agree with linux coding style do one",
    "start": "2019600",
    "end": "2026159"
  },
  {
    "text": "thing and do that well okay the last one the last case",
    "start": "2026159",
    "end": "2034480"
  },
  {
    "start": "2030000",
    "end": "2266000"
  },
  {
    "text": "um also represents a class of vulnerability that took two patch days to fix",
    "start": "2034480",
    "end": "2043200"
  },
  {
    "text": "the story can start with the call stack in the article hanking i o bluetooth when i first saw",
    "start": "2043760",
    "end": "2051040"
  },
  {
    "text": "the call stack the odin words i could say was wow",
    "start": "2051040",
    "end": "2057919"
  },
  {
    "text": "with the deepening deepening of the research i found that it contained a lot of",
    "start": "2057919",
    "end": "2065118"
  },
  {
    "text": "useful information in this english cod stack in short",
    "start": "2065119",
    "end": "2072158"
  },
  {
    "text": "after entering hci the entry is simple this here simple dispatch wl",
    "start": "2072159",
    "end": "2080800"
  },
  {
    "text": "and the exit is i o bluetooth hci request to start after request to start the request",
    "start": "2080800",
    "end": "2088960"
  },
  {
    "text": "will be inserted into a queue and then send to the controller",
    "start": "2088960",
    "end": "2095679"
  },
  {
    "text": "through the uart interface my question is",
    "start": "2095679",
    "end": "2100720"
  },
  {
    "text": "how to protect the data structure in a multiple thread development",
    "start": "2100960",
    "end": "2107599"
  },
  {
    "text": "the answer is the command command gate mechanism which holds the lock when entering the",
    "start": "2108720",
    "end": "2115839"
  },
  {
    "text": "command gate and release the lock when the command sleep is caught",
    "start": "2115839",
    "end": "2121280"
  },
  {
    "text": "so please note that we cannot hold the lock during sleep",
    "start": "2121280",
    "end": "2126800"
  },
  {
    "text": "otherwise it means deadlock",
    "start": "2126800",
    "end": "2131839"
  },
  {
    "text": "then a new problem comes after command sleep the request is not",
    "start": "2134560",
    "end": "2140720"
  },
  {
    "text": "completed by the bluetooth controller so again how to ensure the bluetooth related data",
    "start": "2140720",
    "end": "2147760"
  },
  {
    "text": "structure are safe in this window unfortunately the mac os bluetooth",
    "start": "2147760",
    "end": "2154320"
  },
  {
    "text": "kernel developers didn't consider this situation",
    "start": "2154320",
    "end": "2159838"
  },
  {
    "text": "and this design issue is very similar to the windows wings 32k user mode callback",
    "start": "2160320",
    "end": "2166720"
  },
  {
    "text": "issue and due to the the limited time i could not discuss it here",
    "start": "2166720",
    "end": "2174160"
  },
  {
    "text": "um here is a link i i i have",
    "start": "2174160",
    "end": "2181760"
  },
  {
    "text": "explored this kind of vulnerability several years ago and it's very interesting",
    "start": "2181760",
    "end": "2189119"
  },
  {
    "text": "so here is the panning log of this vulnerability",
    "start": "2189839",
    "end": "2194880"
  },
  {
    "text": "it's a user after three or double free issue",
    "start": "2195119",
    "end": "2201200"
  },
  {
    "text": "so as a previous one vulnerability like 20 20 99 28",
    "start": "2201200",
    "end": "2208400"
  },
  {
    "text": "have been hidden in plant side for a long time and the factor all os bluetooth hci handlers",
    "start": "2208400",
    "end": "2216720"
  },
  {
    "text": "um yeah so and and again this kind of vulnerability is",
    "start": "2216720",
    "end": "2222800"
  },
  {
    "text": "very uh it's hard to find by traditional",
    "start": "2222800",
    "end": "2228000"
  },
  {
    "text": "fuzzer okay the last part take takeaways",
    "start": "2228000",
    "end": "2235359"
  },
  {
    "text": "the first one from the perspective of vulnerability research i want to say with the with this",
    "start": "2236480",
    "end": "2244880"
  },
  {
    "text": "research as a startup starting point i believe we can do more",
    "start": "2244880",
    "end": "2250000"
  },
  {
    "text": "and from the perspective of engineering i would say with the help of kmon",
    "start": "2250000",
    "end": "2256400"
  },
  {
    "text": "project i believe we can do better",
    "start": "2256400",
    "end": "2261119"
  },
  {
    "text": "okay thank you thank you very much thank you for your time bye",
    "start": "2261520",
    "end": "2268640"
  }
]