[
  {
    "text": "hi all um today I'm going to be talking about my research of csis and the 16 Z",
    "start": "2679",
    "end": "7759"
  },
  {
    "text": "days vulnerabilities that I have found and how I did it so first let let me present the",
    "start": "7759",
    "end": "16039"
  },
  {
    "text": "speakers uh I'm Vladimir to and this is Linda she's one of the C people of uh",
    "start": "16039",
    "end": "23080"
  },
  {
    "text": "PowerPoint and she will help me today and so what is a CES CES basically",
    "start": "23080",
    "end": "29439"
  },
  {
    "text": "it's a velopment system that connects to PLC device or small devices and allows",
    "start": "29439",
    "end": "35640"
  },
  {
    "text": "different Logics to be executed on this devices uh logic in a form of letter",
    "start": "35640",
    "end": "40760"
  },
  {
    "text": "logic structural text Etc now my research will talk and focus",
    "start": "40760",
    "end": "46640"
  },
  {
    "text": "specifically on the SDK on the part that's running on the smart device so where is cess is used it's",
    "start": "46640",
    "end": "54160"
  },
  {
    "text": "used in process automation industry in the energy Industries in the transportation smart housing um process",
    "start": "54160",
    "end": "62600"
  },
  {
    "text": "Automation and factories and embedded uh Industries and in other different areas",
    "start": "62600",
    "end": "68759"
  },
  {
    "text": "as well there are number of different vendors who use CES such as Fest wo",
    "start": "68759",
    "end": "75439"
  },
  {
    "text": "becko electric and a lot more it run on different CPUs such as power PC at by",
    "start": "75439",
    "end": "82600"
  },
  {
    "text": "Intel Three core arm Etc and it's basically ported to all the major uh Osa",
    "start": "82600",
    "end": "89119"
  },
  {
    "text": "such as WX un windows and different Linux embedded systems so after uh",
    "start": "89119",
    "end": "95520"
  },
  {
    "text": "presenting that another thing to keep in mind is very popular around the globe mainly on Europe but as well used in",
    "start": "95520",
    "end": "102680"
  },
  {
    "text": "Asia and in the Americas and in Australia as well and after presenting",
    "start": "102680",
    "end": "108040"
  },
  {
    "text": "all of that uh I uh want to say that it's like there are millions and",
    "start": "108040",
    "end": "113079"
  },
  {
    "text": "millions of devices around the globe that use cices in different Industries and in uh used in different sectors so",
    "start": "113079",
    "end": "120840"
  },
  {
    "text": "basically it's like a very sweet spot for supply chain attack and therefore it's very interesting thing to",
    "start": "120840",
    "end": "128039"
  },
  {
    "text": "research so this is was the why and now let's uh talk about how and what uh",
    "start": "128039",
    "end": "133040"
  },
  {
    "text": "basically uh I used uh those two plcs the wo PFC 200 and the TM 251 by",
    "start": "133040",
    "end": "139120"
  },
  {
    "text": "Schneider Electric and now I will present the the research I've done on Schneider and it can be practically",
    "start": "139120",
    "end": "146640"
  },
  {
    "text": "ported to W as well so first I'll start with uh opening the frameware of 2",
    "start": "146640",
    "end": "153040"
  },
  {
    "text": "m251 sorry of TM 251 and basically down liting the frameware from sh elcs web",
    "start": "153040",
    "end": "159239"
  },
  {
    "text": "page using binw to open it and basically after some deying out those two files",
    "start": "159239",
    "end": "166040"
  },
  {
    "text": "under C OS which are the m241 m251 fw1 v",
    "start": "166040",
    "end": "172319"
  },
  {
    "text": "um those are the FW files so after opening it up and using some strings I",
    "start": "172319",
    "end": "177879"
  },
  {
    "text": "understood this is an arm architecture and then I wanted to know which uh flavor of arm so after opening the box",
    "start": "177879",
    "end": "185319"
  },
  {
    "text": "of uh Schneider TM 251 I found out it was spear 680 now after a small research in the",
    "start": "185319",
    "end": "192519"
  },
  {
    "text": "web I found out this is little arm and from there it was nice to open it in Ida and another thing that I needed for",
    "start": "192519",
    "end": "198840"
  },
  {
    "text": "opening it ID in Ida was the um the offset to which it will be loaded when",
    "start": "198840",
    "end": "204319"
  },
  {
    "text": "executed and for that I used a base fine two by Sawyer Sawyer which didn't work",
    "start": "204319",
    "end": "210439"
  },
  {
    "text": "but a little bit changes and work perfectly and I found out that the IR is",
    "start": "210439",
    "end": "215519"
  },
  {
    "text": "is presented here so from here I opened the binary in Ida and successfully uh",
    "start": "215519",
    "end": "221439"
  },
  {
    "text": "received a ton of code and didn't know what to do from here and basically uh I",
    "start": "221439",
    "end": "227560"
  },
  {
    "text": "used number of tricks and number of presenting information in the binary to rename as many as possible methods uh",
    "start": "227560",
    "end": "234959"
  },
  {
    "text": "for me to be able to understand what I'm seeing what I'm dealing with and basically um",
    "start": "234959",
    "end": "240599"
  },
  {
    "text": "the tricks that I used to open the image where basically using some log or suffix",
    "start": "240599",
    "end": "247480"
  },
  {
    "text": "strings to rename the methods also using a reference table that located in the end of the file which is basically a",
    "start": "247480",
    "end": "254120"
  },
  {
    "text": "table and each uh entering the table is a pointer to a string and then a pointer",
    "start": "254120",
    "end": "259639"
  },
  {
    "text": "to a method and basically if I iterate on this table I could rename number of uh methods after using all of those I",
    "start": "259639",
    "end": "268120"
  },
  {
    "text": "successfully received an image with a lot of functions and a lot of call Stacks and um for those of you who want",
    "start": "268120",
    "end": "275960"
  },
  {
    "text": "to understand what exactly I did I have an Ida project a custom Ida project it's",
    "start": "275960",
    "end": "281360"
  },
  {
    "text": "located here so check it out later and uh now let's talk about okay so I opened",
    "start": "281360",
    "end": "287960"
  },
  {
    "text": "the image and I had tons of code and now I want to understand where like where the EET part goes where the packet goes",
    "start": "287960",
    "end": "295520"
  },
  {
    "text": "where the passing goes how does it works so afterward I understood that cesis is",
    "start": "295520",
    "end": "301280"
  },
  {
    "text": "like a sum of uh components and each component uh does specific logic and the",
    "start": "301280",
    "end": "308080"
  },
  {
    "text": "interesting part that if we look on all the packets of codices codices of course",
    "start": "308080",
    "end": "313320"
  },
  {
    "text": "have its own protocol Network protocol propriety Network protocol so if you look at all the packets you can see that",
    "start": "313320",
    "end": "320199"
  },
  {
    "text": "all of them have uh an magic that is uh on in all of the packets 55 CD so after",
    "start": "320199",
    "end": "326919"
  },
  {
    "text": "looking for this magic in the binary I found number of ref references to it and of course it is nice because now I know",
    "start": "326919",
    "end": "334240"
  },
  {
    "text": "uh what is relevant to the packets all the processing of the packets and this this why her Linda is happy now uh",
    "start": "334240",
    "end": "341880"
  },
  {
    "text": "something that helped me a lot to understand what's going on was the documentation of cesis there are tons of",
    "start": "341880",
    "end": "347639"
  },
  {
    "text": "documented methods and the more important part there are different structures that that are documented and",
    "start": "347639",
    "end": "353960"
  },
  {
    "text": "there are complex structure with pointer to other complex structure that without the documentation would be pretty hard",
    "start": "353960",
    "end": "359680"
  },
  {
    "text": "to understand what I'm looking at so after using that and continuing to",
    "start": "359680",
    "end": "364960"
  },
  {
    "text": "actually reverse engineer the the full flow of the image and finding the",
    "start": "364960",
    "end": "370479"
  },
  {
    "text": "reference points that are found with the 55 CD magic I successfully constructed the full protocol of cesis the network",
    "start": "370479",
    "end": "377639"
  },
  {
    "text": "protocol and basically it consist of four layers but here I presented as five",
    "start": "377639",
    "end": "383039"
  },
  {
    "text": "because the tags layer is very important and will be used a lot in the exploit that I'll present here later and",
    "start": "383039",
    "end": "388319"
  },
  {
    "text": "therefore let's that dive in so basically the blog driver layer it is the layer which is basically the UDP or",
    "start": "388319",
    "end": "394560"
  },
  {
    "text": "the TCP and then we have the DAT datr layer which contains um the destination",
    "start": "394560",
    "end": "401919"
  },
  {
    "text": "and the source which are the uh the red and brown squares and it have also the",
    "start": "401919",
    "end": "407400"
  },
  {
    "text": "length of them which is the orange square and another information such as hops counts Etc now the the third layer",
    "start": "407400",
    "end": "416479"
  },
  {
    "text": "is the channel layer each two devices of CES before they want start communicating",
    "start": "416479",
    "end": "422319"
  },
  {
    "text": "they need to open a a channel and this layer is responsible for managing this",
    "start": "422319",
    "end": "428160"
  },
  {
    "text": "so basically the green rectangle represents the channel ID and then we",
    "start": "428160",
    "end": "433280"
  },
  {
    "text": "have the block ID and the AC IDs and model information again used to uh pass",
    "start": "433280",
    "end": "439319"
  },
  {
    "text": "information and indicate which channel of communication we're using and and the fourth layer is the service layer which",
    "start": "439319",
    "end": "446400"
  },
  {
    "text": "is basically what I said before that CES consist of um components now each",
    "start": "446400",
    "end": "451560"
  },
  {
    "text": "component have its own service like service is the execution point of the component which manages the request for",
    "start": "451560",
    "end": "457800"
  },
  {
    "text": "this component and basically in this layer we have the ID of the service we",
    "start": "457800",
    "end": "463879"
  },
  {
    "text": "to which we want to send the information the query and this is the red one and the Orange is the subquery to this",
    "start": "463879",
    "end": "470720"
  },
  {
    "text": "service so again the red square is the service ID and the Orange is the specific query to this service we can",
    "start": "470720",
    "end": "478000"
  },
  {
    "text": "also see that 55 C is a magic here specifically uh it indicates that we are",
    "start": "478000",
    "end": "483120"
  },
  {
    "text": "going to use the tag layer on the service layer and now what is the tags",
    "start": "483120",
    "end": "488639"
  },
  {
    "text": "layer the tags layer is a basically a layer that contains information for specific service for specific query now",
    "start": "488639",
    "end": "495879"
  },
  {
    "text": "tags are constructs are binary construct that first bite of them is the ID of the",
    "start": "495879",
    "end": "501319"
  },
  {
    "text": "tag then we have the length um and the payload now in this image we can see that there are five tags 22 2 three uh",
    "start": "501319",
    "end": "510039"
  },
  {
    "text": "81 now 81 is a parent tag which means that it contains two subtags and then two tags uh number 10 and number 11",
    "start": "510039",
    "end": "517719"
  },
  {
    "text": "we'll revisit uh this image later now another thing that we need to keep in",
    "start": "517719",
    "end": "522919"
  },
  {
    "text": "mind is that cesses as very big and have a lot of different un complex Logics",
    "start": "522919",
    "end": "529440"
  },
  {
    "text": "therefore we need to a way of passing big data so specifically each PD uh of",
    "start": "529440",
    "end": "536320"
  },
  {
    "text": "cices can be only 512 bytes long so uh CES implemented fragmentation Logic on",
    "start": "536320",
    "end": "543640"
  },
  {
    "text": "the tags layer so here we can see an image that presents that the interesting part here is that there are two packets",
    "start": "543640",
    "end": "550079"
  },
  {
    "text": "sent and then the receiving side will send the relevant a to indicate that all the data has been received now let's go",
    "start": "550079",
    "end": "558680"
  },
  {
    "text": "back again and understand uh how all of that connected so we seen this image of",
    "start": "558680",
    "end": "565120"
  },
  {
    "text": "reference to code and in the end we can see that there are four references to the magic to the service layer magic and",
    "start": "565120",
    "end": "572800"
  },
  {
    "text": "if we will uh check out this metal we will find that there are a number of",
    "start": "572800",
    "end": "578720"
  },
  {
    "text": "reference to it to the magic and in the end of this method we can see uh a call",
    "start": "578720",
    "end": "584000"
  },
  {
    "text": "like that which uses the service idea that passed in a packet to call the relevant method so from here we can",
    "start": "584000",
    "end": "590079"
  },
  {
    "text": "understand that this is the location to actually execute the relevant service Handler and from here I could basically",
    "start": "590079",
    "end": "597279"
  },
  {
    "text": "find all the different logic all the different components and how they've been handled if a query will be sent to",
    "start": "597279",
    "end": "604440"
  },
  {
    "text": "them now this are this is the table of the components of cices and there are",
    "start": "604440",
    "end": "610120"
  },
  {
    "text": "numerous of them and uh basically the ID here represent which um which service",
    "start": "610120",
    "end": "616519"
  },
  {
    "text": "IDE I'll need to put in my packet to query the specific component and now let's look at uh at a",
    "start": "616519",
    "end": "622920"
  },
  {
    "text": "packeted courses and like look at how it been passed through all the logic of the",
    "start": "622920",
    "end": "628839"
  },
  {
    "text": "uh the Cod is paring flow now firstly we can receive this packet through UDP or",
    "start": "628839",
    "end": "634160"
  },
  {
    "text": "maybe TCP or even a canvas packet and then we'll uh let it go through the",
    "start": "634160",
    "end": "641399"
  },
  {
    "text": "passing layer of the drram layer and there we have different method that will handle and validate that this is Packet",
    "start": "641399",
    "end": "648200"
  },
  {
    "text": "that relevant to actually to this end point and not another address and we will also validate the hop count to",
    "start": "648200",
    "end": "654680"
  },
  {
    "text": "check that it's valid packet and then we'll get to the channel layer which which will basically um validate if it's",
    "start": "654680",
    "end": "662200"
  },
  {
    "text": "a block packet or maybe it's an act or keep aive packet and also in this layer",
    "start": "662200",
    "end": "667360"
  },
  {
    "text": "we have the um packets that are managing the channels so there's that and",
    "start": "667360",
    "end": "673240"
  },
  {
    "text": "basically after validating all the all of that it will be uh passed to the part",
    "start": "673240",
    "end": "678600"
  },
  {
    "text": "that will reorder the packets in the right order uh it is also happens in the",
    "start": "678600",
    "end": "684279"
  },
  {
    "text": "channel layer and then we'll hit the network service which is B which will basically check that the service ID that",
    "start": "684279",
    "end": "691079"
  },
  {
    "text": "we request is actually present and in the service uh Handler actually executed",
    "start": "691079",
    "end": "696720"
  },
  {
    "text": "and then we'll pass to it the packet uh yeah now uh after that let's",
    "start": "696720",
    "end": "703279"
  },
  {
    "text": "present a number of components of cesses and understand what they doing first we'll talk about comp component app or",
    "start": "703279",
    "end": "711160"
  },
  {
    "text": "Service app Handler uh in this case it is very big method with which case uh",
    "start": "711160",
    "end": "717440"
  },
  {
    "text": "statement that basically uh handles numerous Logics for application that we are uploading to",
    "start": "717440",
    "end": "723639"
  },
  {
    "text": "cod's devices such as for instance the bugging the application or maybe checking it memory and specifically the",
    "start": "723639",
    "end": "731839"
  },
  {
    "text": "interesting method here is the upload full application which again is very very big and long method but the",
    "start": "731839",
    "end": "739000"
  },
  {
    "text": "interesting part here is those two uh location that are presented well basically what happens in them is that",
    "start": "739000",
    "end": "745839"
  },
  {
    "text": "first we will'll call to bag reader get content which will basically par one",
    "start": "745839",
    "end": "751519"
  },
  {
    "text": "single tag from receive it packet and store the tag content in the second",
    "start": "751519",
    "end": "756959"
  },
  {
    "text": "parameter which is the PB area and Stor it length in the third parameter which is PBB area size now after it we can see",
    "start": "756959",
    "end": "764560"
  },
  {
    "text": "that this information being copied as it is to location on the stack now uh of",
    "start": "764560",
    "end": "770519"
  },
  {
    "text": "course it is stack based overflow because nobody validated the size of the tag and nobody checked that we have",
    "start": "770519",
    "end": "776160"
  },
  {
    "text": "enough or not enough data here so if I'll send a big enough H tag of course",
    "start": "776160",
    "end": "781720"
  },
  {
    "text": "it will overflow the location on the stock NOW another uh another same issue",
    "start": "781720",
    "end": "788160"
  },
  {
    "text": "here as as presented in the a BP service Handler to we have the same issue but",
    "start": "788160",
    "end": "794199"
  },
  {
    "text": "it's uh may may be used different from here we can see that uh the tag buffer will receive the tag content but then we",
    "start": "794199",
    "end": "801320"
  },
  {
    "text": "will uh handle the tag as though it have eight bytes of data but what happens if",
    "start": "801320",
    "end": "808000"
  },
  {
    "text": "there only present for instance this case we will will receive swe1 to 88 now",
    "start": "808000",
    "end": "816279"
  },
  {
    "text": "um this is what compare compare app so now let's talk about uh component Trace",
    "start": "816279",
    "end": "821519"
  },
  {
    "text": "manager uh Trace manager is basically a concept that allows me to trace variables in cod's application and what",
    "start": "821519",
    "end": "829440"
  },
  {
    "text": "it allowed me is to create and struct um a big structure that will help um help",
    "start": "829440",
    "end": "836120"
  },
  {
    "text": "me monitor specific specific variables uh in codices application so same as",
    "start": "836120",
    "end": "842959"
  },
  {
    "text": "same as before we have here a big switch case and same as before one of the methods will have uh this kind of uh",
    "start": "842959",
    "end": "851680"
  },
  {
    "text": "vulnerable logic as presented before again Lind the happy another stack based overflow and another location and",
    "start": "851680",
    "end": "859720"
  },
  {
    "text": "another Sut and the same here and the third and the last component that I will",
    "start": "859720",
    "end": "865279"
  },
  {
    "text": "present here is the component device which is basically manag different logic between the user uh and the device such",
    "start": "865279",
    "end": "872880"
  },
  {
    "text": "as authentication login log out so if you go deep enough we can find this uh",
    "start": "872880",
    "end": "878120"
  },
  {
    "text": "part of logic that search for username and hash password tags in the packet so",
    "start": "878120",
    "end": "883600"
  },
  {
    "text": "we can understand this basically a packet that contains information that you used to log in then we can see that",
    "start": "883600",
    "end": "891320"
  },
  {
    "text": "we have validation of the challenge so again another tck going to be in this",
    "start": "891320",
    "end": "896440"
  },
  {
    "text": "packet and in the end we consider the are this method that's called user manageable the Crypt password now let's",
    "start": "896440",
    "end": "902759"
  },
  {
    "text": "check it out um so we can see basically the matter is a based method with which used",
    "start": "902759",
    "end": "910680"
  },
  {
    "text": "con hardcoded key so of course it's vulnerable as hell and uh there's a CV",
    "start": "910680",
    "end": "916880"
  },
  {
    "text": "for it it's a already a CV few years back uh the issue here is that uh this",
    "start": "916880",
    "end": "924199"
  },
  {
    "text": "logic is still uh preserved in some of the device for back comp",
    "start": "924199",
    "end": "930480"
  },
  {
    "text": "compatibility uh yeaha a little bit sad about it and now uh this is the findings",
    "start": "930480",
    "end": "936680"
  },
  {
    "text": "here are the CVS the 16 CVS that are found and we can see that most Mo most of them basically used to achieve those",
    "start": "936680",
    "end": "944519"
  },
  {
    "text": "in RC and we can see that a component Trace manager is a big player here and",
    "start": "944519",
    "end": "950000"
  },
  {
    "text": "again helinda happy for that now as what I presented in the last uh slide was",
    "start": "950000",
    "end": "956399"
  },
  {
    "text": "basically that we can steal credentials right because we know how the encryption does we know this based with uh",
    "start": "956399",
    "end": "961800"
  },
  {
    "text": "hardcoded key so basically let's do a play attack but why we need it because all the vulnerabilities that are found",
    "start": "961800",
    "end": "968839"
  },
  {
    "text": "are basically uh achieved after a channel have been created and a service have been uh pinged and we have a",
    "start": "968839",
    "end": "974720"
  },
  {
    "text": "session for specific H service so basically what I mean is that it only can be exploited after an successful",
    "start": "974720",
    "end": "982360"
  },
  {
    "text": "authentication so for that we need to somehow steal credentials create a new Communication channel log in and then we",
    "start": "982360",
    "end": "989120"
  },
  {
    "text": "can exploit the vulnerabilities so let's talk about how we can do that um we",
    "start": "989120",
    "end": "994279"
  },
  {
    "text": "already seen this image uh with the tag and now we know what we're seeing we're basically seeing a login attempt which",
    "start": "994279",
    "end": "1000920"
  },
  {
    "text": "uh the tag 20 with id22 have uh the encryption type tag ad23 basically have",
    "start": "1000920",
    "end": "1008240"
  },
  {
    "text": "um The Challenge and then we have another two tags 10 and 11 which is the",
    "start": "1008240",
    "end": "1013560"
  },
  {
    "text": "username and the hash password so basically if we could Sniff and find",
    "start": "1013560",
    "end": "1019440"
  },
  {
    "text": "those pockets on the net we could store the information and use it later to uh to authenticate ourself and this is",
    "start": "1019440",
    "end": "1026120"
  },
  {
    "text": "exactly what I've implemented basically I've implemented um uh three threads",
    "start": "1026120",
    "end": "1031438"
  },
  {
    "text": "that one of them sniffing and searching for this kind of packets if a packet like that is appears it will store the",
    "start": "1031439",
    "end": "1038600"
  },
  {
    "text": "information on the side and then we will use this information the credentials to log in and uh let's check out uh demo of",
    "start": "1038600",
    "end": "1046600"
  },
  {
    "text": "that um yeah we can see that the packet been sniffed here we can see a uh user",
    "start": "1046600",
    "end": "1052919"
  },
  {
    "text": "been trying to log first and then we'll steal the information the credentials and log in and well",
    "start": "1052919",
    "end": "1060960"
  },
  {
    "text": "yeah uh nice and her Linda happy again um now uh",
    "start": "1060960",
    "end": "1068200"
  },
  {
    "text": "after we achieved a successful credential theft let's talk about one of the vulnerabilities that I found and let's like let's exploit uh so again uh",
    "start": "1068200",
    "end": "1077520"
  },
  {
    "text": "this is kind of logical already seen um we will copy some tag information store",
    "start": "1077520",
    "end": "1083320"
  },
  {
    "text": "it and then uh copy it on location on this stack now let's understand how much",
    "start": "1083320",
    "end": "1088720"
  },
  {
    "text": "we need to overflow in order to achieve a a corruption from here we can see that",
    "start": "1088720",
    "end": "1094039"
  },
  {
    "text": "this variable is 34 hexy long so uh after that yeah of course like best",
    "start": "1094039",
    "end": "1100840"
  },
  {
    "text": "overflow and then now let's understand uh what we will uh overflow on the stack",
    "start": "1100840",
    "end": "1106559"
  },
  {
    "text": "and how it will behave from the of the metal we can understand which reg will be uh impacted by the Overflow now uh",
    "start": "1106559",
    "end": "1114880"
  },
  {
    "text": "here we can see an image of registers on the right lower part and actually the",
    "start": "1114880",
    "end": "1120600"
  },
  {
    "text": "right upper part is an Crush log by Schneider Electric which presents uh the stack uh information which shows that",
    "start": "1120600",
    "end": "1129440"
  },
  {
    "text": "those values have been uh put in the stack and the left lower part presents",
    "start": "1129440",
    "end": "1135200"
  },
  {
    "text": "actual crash log with the values of the regist and we can see that we have",
    "start": "1135200",
    "end": "1140520"
  },
  {
    "text": "successfully overflow them with wanted values now exactly how it was executed",
    "start": "1140520",
    "end": "1147559"
  },
  {
    "text": "so but first we I created an CIS packet then I added to it a big enough tag and",
    "start": "1147559",
    "end": "1153880"
  },
  {
    "text": "then I send it and this is the pack that I added and in the end we can see the values of the registers that we are",
    "start": "1153880",
    "end": "1159440"
  },
  {
    "text": "overflow and this is the log scene eara happy we achiev the basic",
    "start": "1159440",
    "end": "1165280"
  },
  {
    "text": "corruption uh now uh in order to make this exploit usable and working as well",
    "start": "1165280",
    "end": "1171919"
  },
  {
    "text": "we need to understand what we running on and basically after searching Ida I'll F",
    "start": "1171919",
    "end": "1176960"
  },
  {
    "text": "I found out that Schneider elm2 51 is basically Wix fors",
    "start": "1176960",
    "end": "1182240"
  },
  {
    "text": "6.9 and from here I started trying to understand what mitigation wiws have so",
    "start": "1182240",
    "end": "1189400"
  },
  {
    "text": "I went to on the internet and started SE researching for uh research that relevant to that and I stumbled on this",
    "start": "1189400",
    "end": "1196559"
  },
  {
    "text": "beautiful piece by Yos Wessel to talk about uh different mitigation of ARs and basically the underline was that",
    "start": "1196559",
    "end": "1204480"
  },
  {
    "text": "well no mitigation what's however on the X Forks was is nice so after that I",
    "start": "1204480",
    "end": "1209760"
  },
  {
    "text": "continue to this piece by uh by armies which named origin 11 and same underline",
    "start": "1209760",
    "end": "1216520"
  },
  {
    "text": "here we don't have mitigations and because there's no mitigation everything easy right so not exactly after",
    "start": "1216520",
    "end": "1223480"
  },
  {
    "text": "executing the cor the corruption twice I found out that the stack is being randomized so we do have ASR and then I",
    "start": "1223480",
    "end": "1232559"
  },
  {
    "text": "checked out this piece by uh John biasi and found out that basically uh the",
    "start": "1232559",
    "end": "1238400"
  },
  {
    "text": "areep on vix works but it need to be configured so no luck again and sorry",
    "start": "1238400",
    "end": "1244880"
  },
  {
    "text": "and herlinda here saying let's uh think about it let's find a way to overcome that so let's talk about how I bypassed",
    "start": "1244880",
    "end": "1252080"
  },
  {
    "text": "those on TM 251 basically two things of sh elect helped me a lot first the the",
    "start": "1252080",
    "end": "1258200"
  },
  {
    "text": "crash logs that schneid electric have first we can see it like here the crash",
    "start": "1258200",
    "end": "1263280"
  },
  {
    "text": "C1 and the second part was that basically tm21 have a power failure",
    "start": "1263280",
    "end": "1269679"
  },
  {
    "text": "mechanism that allows uh to restore after power failure to specific state of",
    "start": "1269679",
    "end": "1274720"
  },
  {
    "text": "the uh PLC so here we can see uh after two consecutive power failures the same",
    "start": "1274720",
    "end": "1280559"
  },
  {
    "text": "other the same stock segment and the same address of the stock segment being uh loaded to so basically a R is uh",
    "start": "1280559",
    "end": "1289279"
  },
  {
    "text": "implemented quickly on this uh instance and um now let's think about by",
    "start": "1289279",
    "end": "1295919"
  },
  {
    "text": "passing dep so here uh cesis is what helps me and basically cesis by Des by",
    "start": "1295919",
    "end": "1301480"
  },
  {
    "text": "Design disables dep and what is that exactly let's uh let's take a deep in uh",
    "start": "1301480",
    "end": "1306919"
  },
  {
    "text": "in let's take a dive into C's uh alure so basically we can see on the left side",
    "start": "1306919",
    "end": "1312240"
  },
  {
    "text": "an image of a process dump of the memory of uh of a process of cices on weos PLC",
    "start": "1312240",
    "end": "1320080"
  },
  {
    "text": "and specifically we can see that there are threee segments with cesis code data segment and it's cool but then we have",
    "start": "1320080",
    "end": "1326520"
  },
  {
    "text": "number of segments and every second segment have like redri and execute permissions so basically in order to",
    "start": "1326520",
    "end": "1333480"
  },
  {
    "text": "understand what I'm looking at I went again to the CODIS documentation and found out what that'll be talking about",
    "start": "1333480",
    "end": "1340120"
  },
  {
    "text": "uh cesis I task uh execution uh task okay so basically what is an IC task",
    "start": "1340120",
    "end": "1347559"
  },
  {
    "text": "it's a execution um unit of cices now uh what I'm saying is that if",
    "start": "1347559",
    "end": "1355679"
  },
  {
    "text": "somebody if somebody somehow would land and write some code on this uh area he",
    "start": "1355679",
    "end": "1361360"
  },
  {
    "text": "could execute it and that wouldn't bother him right so let's check out what we are executing and where where are we",
    "start": "1361360",
    "end": "1367960"
  },
  {
    "text": "running so this is on um GDB server that",
    "start": "1367960",
    "end": "1373080"
  },
  {
    "text": "is uh on wo and after debugging and setting a breakpoint right right before",
    "start": "1373080",
    "end": "1378600"
  },
  {
    "text": "the stock is being overflow by the vulnerability uh I can see here all the registers and the interesting part here",
    "start": "1378600",
    "end": "1385679"
  },
  {
    "text": "is that we can see that the stock pointer is basically located on one of those uh redri execute uh segments so",
    "start": "1385679",
    "end": "1393440"
  },
  {
    "text": "basically what I'm saying is if somebody will overflow the stack and write some code it will successfully um execute",
    "start": "1393440",
    "end": "1400919"
  },
  {
    "text": "code because it will land on uh segment with execution permission so",
    "start": "1400919",
    "end": "1406640"
  },
  {
    "text": "wonderful um and now let's talk about how we can achieve basic RC here now we",
    "start": "1406640",
    "end": "1412880"
  },
  {
    "text": "already seen this log that indicates the um the registers values and uh here we",
    "start": "1412880",
    "end": "1419080"
  },
  {
    "text": "can see a log that indicates a little different Behavior first we can see in the red uh part the register overflow",
    "start": "1419080",
    "end": "1426320"
  },
  {
    "text": "overflow parts and then in the blue rectangle we can see the address to which we will jump and then we have the",
    "start": "1426320",
    "end": "1432000"
  },
  {
    "text": "Shell Code basically now if we'll check out the exception address in the log we can see that is actually the first non",
    "start": "1432000",
    "end": "1438440"
  },
  {
    "text": "op code of uh the Shell Code so basically what is indicated we successfully executed some noes and this",
    "start": "1438440",
    "end": "1445320"
  },
  {
    "text": "is um the registers overflow data and the Shell Code uh as such and this was a",
    "start": "1445320",
    "end": "1452240"
  },
  {
    "text": "basic currency on TM 251 and now uh",
    "start": "1452240",
    "end": "1457279"
  },
  {
    "text": "let's talk how I bypassed it on wo on wo they didn't have this exact mechanism for power failure so I needed to find",
    "start": "1457279",
    "end": "1464559"
  },
  {
    "text": "something else and what I found was a basic um um Rob Gadget hunting which",
    "start": "1464559",
    "end": "1471159"
  },
  {
    "text": "helped me a lot and saved and allowed me to execute code and basically what I did",
    "start": "1471159",
    "end": "1476799"
  },
  {
    "text": "is I found a gadget that allowed me to jump to the stock right so again from the suffix of the meod I understood what",
    "start": "1476799",
    "end": "1483120"
  },
  {
    "text": "I what registers are overflow and then I needed to find a register that contains",
    "start": "1483120",
    "end": "1489320"
  },
  {
    "text": "an address on the stack to which if I'll jump I'll have my code there and uh by",
    "start": "1489320",
    "end": "1495080"
  },
  {
    "text": "uh by a magic I found out that R1 and r to pointing on the stock to the location",
    "start": "1495080",
    "end": "1500279"
  },
  {
    "text": "where which I was already over overwritten so uh this is basically the",
    "start": "1500279",
    "end": "1505720"
  },
  {
    "text": "exploit first I will put some registers values that I need to use then I'll put the address of the gadget that would",
    "start": "1505720",
    "end": "1512559"
  },
  {
    "text": "that will allow me to jump on the stack and then I'll have the pointer to the",
    "start": "1512559",
    "end": "1518000"
  },
  {
    "text": "Shell Code now in this case I will use some return to lipy attack uh basically",
    "start": "1518000",
    "end": "1524240"
  },
  {
    "text": "I will execute an RTS system uh command with reboot",
    "start": "1524240",
    "end": "1530720"
  },
  {
    "text": "command and this is the registers uh that overflow which are presented that",
    "start": "1530720",
    "end": "1536360"
  },
  {
    "text": "have different values and we can see in the first part of them the reboot command and then this is the Shell Code",
    "start": "1536360",
    "end": "1542960"
  },
  {
    "text": "which will basically order some register and jump to the relevant location and",
    "start": "1542960",
    "end": "1548440"
  },
  {
    "text": "this is the stack layout how we will behave with this exploit firstly we'll have the part that overflow the",
    "start": "1548440",
    "end": "1554320"
  },
  {
    "text": "registers then we'll have the address of the BLX R2 Gadget and then in the end we'll have the Shell Code and this is a",
    "start": "1554320",
    "end": "1561880"
  },
  {
    "text": "presentation of this attack uh firstly we can see that we'll send this information uh this packet",
    "start": "1561880",
    "end": "1569080"
  },
  {
    "text": "that will H execute RC and then we can see that a user that's connected to Wago",
    "start": "1569080",
    "end": "1575360"
  },
  {
    "text": "PFC will be uh yep will lose connection and then we can see the PFC 200 uh will",
    "start": "1575360",
    "end": "1582880"
  },
  {
    "text": "indicate with all the lads that it's been rebooted uh yeah we can see it",
    "start": "1582880",
    "end": "1590360"
  },
  {
    "text": "here nice and herlinda happy again uh wonderful now uh after that let's talk a",
    "start": "1591320",
    "end": "1598960"
  },
  {
    "text": "little bit about how I use this uh exploit on Schneider Electric so",
    "start": "1598960",
    "end": "1604000"
  },
  {
    "text": "basically what I've uh what what we have done we build a model of elevator elevator with three floors uh and we",
    "start": "1604000",
    "end": "1611279"
  },
  {
    "text": "have uh the TM 251 which basically is the Mind behind the elevator which is",
    "start": "1611279",
    "end": "1616520"
  },
  {
    "text": "will pull the elevator up up and down and we have an shid electric server which actually does the ground work of",
    "start": "1616520",
    "end": "1622360"
  },
  {
    "text": "pulling up and down now uh what we want to achieve here we",
    "start": "1622360",
    "end": "1627640"
  },
  {
    "text": "want to uh send an a packet that will execute remote code execution and uh by",
    "start": "1627640",
    "end": "1635760"
  },
  {
    "text": "that we want we would like to crush the elevator so basically uh very basic",
    "start": "1635760",
    "end": "1641640"
  },
  {
    "text": "approach can be let's upload a malicious application but if we will upload a malicious application Cod is H have a",
    "start": "1641640",
    "end": "1648320"
  },
  {
    "text": "lot of logs and a lot of logs will be written and we want to be self so instead of that let's execute let's",
    "start": "1648320",
    "end": "1654520"
  },
  {
    "text": "execute remote code that will stealthly upload in malicious application how we'll do that we will remove the current",
    "start": "1654520",
    "end": "1661279"
  },
  {
    "text": "uh files that used by the application firstly the application app which is the the application that execut and manages",
    "start": "1661279",
    "end": "1667519"
  },
  {
    "text": "the elevator then the application CRC which is basically contains the CLC value for that uh application and",
    "start": "1667519",
    "end": "1674559"
  },
  {
    "text": "application map which Maps different variables we will remove that and then we will upload malicious files how we",
    "start": "1674559",
    "end": "1681720"
  },
  {
    "text": "will remove them cesses have implemented this for us so basically a packet per file we can delete it and then this is",
    "start": "1681720",
    "end": "1688399"
  },
  {
    "text": "the exploit firstly send a packet that will trigger remote code execution which will start a d leing file by chunks and",
    "start": "1688399",
    "end": "1696399"
  },
  {
    "text": "then read the application the malicious application divide it to chunks and send it by chunks and this is it then we have",
    "start": "1696399",
    "end": "1705000"
  },
  {
    "text": "the registers overflow that contain pointer to different location that we need and the interesting value is in R",
    "start": "1705000",
    "end": "1711399"
  },
  {
    "text": "for which is the number of interation that needed um to execute uh and to",
    "start": "1711399",
    "end": "1717000"
  },
  {
    "text": "download the full file and then the actual uh shell code that will download",
    "start": "1717000",
    "end": "1722720"
  },
  {
    "text": "that download the malicious application which is basically um we'll open an UDP",
    "start": "1722720",
    "end": "1728480"
  },
  {
    "text": "port and then we'll open a relevant file of the application read the chunk write it in the file do it R four times then",
    "start": "1728480",
    "end": "1736559"
  },
  {
    "text": "uh close the file and and the task address F and this is it and this is the",
    "start": "1736559",
    "end": "1742880"
  },
  {
    "text": "presentation for uh attack by downloading a malicious application we",
    "start": "1742880",
    "end": "1748480"
  },
  {
    "text": "can see firstly connecting and removing uh the normal the good application files",
    "start": "1748480",
    "end": "1753760"
  },
  {
    "text": "and then we'll start uh uploading um the malicious applications uh Chun by Chun and we can",
    "start": "1753760",
    "end": "1761559"
  },
  {
    "text": "see here that the chunks been are printed that we sent and we can see the",
    "start": "1761559",
    "end": "1766919"
  },
  {
    "text": "size of file grows up as we send more and more information and we achieved uh",
    "start": "1766919",
    "end": "1772720"
  },
  {
    "text": "uploading malicious application in self way nice harinda happy again now the the",
    "start": "1772720",
    "end": "1780200"
  },
  {
    "text": "interesting part here is uh all of that was pretty hard right like very big exploits and en chants not not very",
    "start": "1780200",
    "end": "1787679"
  },
  {
    "text": "bulletproof so can we achieve the same effect of let's say crushing the elevator with easier approach and of",
    "start": "1787679",
    "end": "1793600"
  },
  {
    "text": "course the answer was yes because you see for to crush the we just need to change the speed the acceleration on the",
    "start": "1793600",
    "end": "1801080"
  },
  {
    "text": "or the deceleration of the uh the servo that's pulling up or down um the",
    "start": "1801080",
    "end": "1807760"
  },
  {
    "text": "Elevator Shaft so basically how we'll do that um those values are stored in the",
    "start": "1807760",
    "end": "1813960"
  },
  {
    "text": "gvl the global variable list in the TM 251 so uh in order for us to change them",
    "start": "1813960",
    "end": "1820679"
  },
  {
    "text": "we basically can send a packet that will update them those values are stored on the eom so basically C implemented a",
    "start": "1820679",
    "end": "1828200"
  },
  {
    "text": "mechanism that allows me to update them so the actual attack will be just send a",
    "start": "1828200",
    "end": "1833279"
  },
  {
    "text": "qu's packet with relevant data and update those values here we can see a",
    "start": "1833279",
    "end": "1838640"
  },
  {
    "text": "lot of binary data that basically says update the gvl values of speed acceleration and acceleration to very",
    "start": "1838640",
    "end": "1845799"
  },
  {
    "text": "high values and now we'll see the the demo movie and uh those are two of my",
    "start": "1845799",
    "end": "1852600"
  },
  {
    "text": "colleagues bu and Goku and they all are talking about their life and about the",
    "start": "1852600",
    "end": "1859000"
  },
  {
    "text": "wife Susan of course and uh all of them as me like",
    "start": "1859000",
    "end": "1864960"
  },
  {
    "text": "coffee and uh they want to go and grab one on the third floor luckily for them they have very cool elevator and uh",
    "start": "1864960",
    "end": "1873720"
  },
  {
    "text": "basically uh of course nobody likes the steps so it's totally cool um yep went",
    "start": "1873720",
    "end": "1880080"
  },
  {
    "text": "to the third floor um yeah drink a lot of coffee not that",
    "start": "1880080",
    "end": "1885440"
  },
  {
    "text": "healthy but all of us doing that yep more espresso was espresso classic yep",
    "start": "1885440",
    "end": "1891919"
  },
  {
    "text": "and at meanwhile we have a malicious attacker crafting is a malicious attack",
    "start": "1891919",
    "end": "1897559"
  },
  {
    "text": "which will uh of course crash the elevator H here we can see uh the panel",
    "start": "1897559",
    "end": "1902960"
  },
  {
    "text": "management for the elevator the normal values of acceleration and acceleration and then the attacker sends malicious",
    "start": "1902960",
    "end": "1909320"
  },
  {
    "text": "packet that will update those values uh two problematic values and we can see",
    "start": "1909320",
    "end": "1916519"
  },
  {
    "text": "here changes and then of course we'll see the elevator",
    "start": "1916519",
    "end": "1922679"
  },
  {
    "text": "Crush yeah talking about our",
    "start": "1929720",
    "end": "1934440"
  },
  {
    "text": "research uh yeah so the elevator crushed",
    "start": "1936519",
    "end": "1942480"
  },
  {
    "text": "thanks uh so it was a it was a nice way of demonstrating uh what can be achieved",
    "start": "1942679",
    "end": "1948440"
  },
  {
    "text": "through um through this kind of uh problematic uh vulnerabilities on this",
    "start": "1948440",
    "end": "1954240"
  },
  {
    "text": "kind of SDK so basically what I'm trying to say here is that um you should protect uh third",
    "start": "1954240",
    "end": "1962639"
  },
  {
    "text": "parties SDK and check out how they uh behave and the key takes takeaways from",
    "start": "1962639",
    "end": "1968399"
  },
  {
    "text": "here is basically when you use API you should always check how exactly it work and don't assem anything and uh",
    "start": "1968399",
    "end": "1977679"
  },
  {
    "text": "specifically as presented here there are different s DEC that used in different",
    "start": "1977679",
    "end": "1982880"
  },
  {
    "text": "um Industries and different sectors across countries in the world so they are very lucrative um attack surface for",
    "start": "1982880",
    "end": "1991039"
  },
  {
    "text": "critical um uh critical infrastructures and they are a supply chain attack vectors so and they should be uh",
    "start": "1991039",
    "end": "1998080"
  },
  {
    "text": "regarded Accord accordingly and what I'm saying by that is that we need to uh mitigate them and install all the",
    "start": "1998080",
    "end": "2005120"
  },
  {
    "text": "information and install all the um software that can help us manage them and see if we have any issues with them",
    "start": "2005120",
    "end": "2012639"
  },
  {
    "text": "and update the patches when they released another uh takeaway of course",
    "start": "2012639",
    "end": "2018320"
  },
  {
    "text": "is that CES because of its popularity and because of its wide wide usage around the globe um have uh it's very",
    "start": "2018320",
    "end": "2026159"
  },
  {
    "text": "interesting critical attack vector and uh should be regarded as such and should be protected and",
    "start": "2026159",
    "end": "2032480"
  },
  {
    "text": "mitigated and a special thanks to Sergey rovic who helped me uh with the elevator",
    "start": "2032480",
    "end": "2039480"
  },
  {
    "text": "basically build it and to my Omri and gild that helped me with this research and uh basically I finished uh do we",
    "start": "2039480",
    "end": "2047399"
  },
  {
    "text": "have any questions",
    "start": "2047399",
    "end": "2052679"
  },
  {
    "text": "thanks",
    "start": "2053760",
    "end": "2056760"
  }
]