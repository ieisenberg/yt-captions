[
  {
    "text": "hello everyone I'm Lance today my colleague Dennis and I will give a presentation on urb excal the new wiw 4",
    "start": "2560",
    "end": "12120"
  },
  {
    "text": "platform virtual machine escapable first who are we we are",
    "start": "12120",
    "end": "17640"
  },
  {
    "text": "security research at an group last year security lab and we escaped from viral",
    "start": "17640",
    "end": "23800"
  },
  {
    "text": "machine many times what's more we won the pony award last year this is the",
    "start": "23800",
    "end": "30160"
  },
  {
    "text": "road map for our talk first I will share a introduction to v m escape and wiw",
    "start": "30160",
    "end": "38200"
  },
  {
    "text": "hypervisor in the second part we will share a journey of wiw hypervisor",
    "start": "38200",
    "end": "43840"
  },
  {
    "text": "vulnerability Discovery the last part is about our efforts in the explorate",
    "start": "43840",
    "end": "49520"
  },
  {
    "text": "development of wiw VM Escape where we will share a new set of",
    "start": "49520",
    "end": "56399"
  },
  {
    "text": "exploitation Primitives and how we use some to develop explorers for all wiw",
    "start": "56399",
    "end": "65479"
  },
  {
    "text": "hypervisors what is VM excape and what are its dangers VM Escape refers to an",
    "start": "65960",
    "end": "72799"
  },
  {
    "text": "Tech launch a tech from inside virtual machine using vulnerabilities in the",
    "start": "72799",
    "end": "79360"
  },
  {
    "text": "hypervisor to escape and cure the host a c is cloud platform may run a",
    "start": "79360",
    "end": "85720"
  },
  {
    "text": "large number of viral machines and device",
    "start": "85720",
    "end": "91560"
  },
  {
    "text": "on on one host which can cause significant harm it can be said that VM",
    "start": "91560",
    "end": "98759"
  },
  {
    "text": "Escape is one of the most cic threats to the",
    "start": "98759",
    "end": "106960"
  },
  {
    "text": "cloud this diagram is taken from a paper V published many years ago we can see v",
    "start": "106960",
    "end": "115119"
  },
  {
    "text": "as hypervisor consist of three parts vmx vmm driver and the",
    "start": "115119",
    "end": "121640"
  },
  {
    "text": "vmm As for the virtual devices we are most concerned about that code exist in",
    "start": "121640",
    "end": "130640"
  },
  {
    "text": "VM and and vmx most part is in",
    "start": "130640",
    "end": "137000"
  },
  {
    "text": "vmx so what are the attack surface of V",
    "start": "137160",
    "end": "143000"
  },
  {
    "text": "VW hypervisor I have a list a table and almost all of them modules on it have",
    "start": "143000",
    "end": "152040"
  },
  {
    "text": "had vulnerabilities in the past even leading to VM Escape except for the vmm I believe that",
    "start": "152040",
    "end": "161000"
  },
  {
    "text": "vmm may also have vulnerabilities just like KVM but the difficulty of finding",
    "start": "161000",
    "end": "167680"
  },
  {
    "text": "vulnerabilities in vmm may be too high compared to the ones",
    "start": "167680",
    "end": "174200"
  },
  {
    "text": "above on the right side I have listed all the public disclosed the VM escape",
    "start": "174200",
    "end": "182000"
  },
  {
    "text": "from 2021 to the present not including the Escape completed at Pon this year it",
    "start": "182000",
    "end": "190879"
  },
  {
    "text": "can be seen that in recent year security research have mainly focus",
    "start": "190879",
    "end": "197440"
  },
  {
    "text": "on researching USB attack surface now let me share how we start",
    "start": "197440",
    "end": "204799"
  },
  {
    "text": "the Journey of vulnerability Discovery in VW hypervisor",
    "start": "204799",
    "end": "211040"
  },
  {
    "text": "having already analyzed V architecture attack surface and history",
    "start": "211040",
    "end": "216879"
  },
  {
    "text": "vulnerabilities which was an interesting and potentially risk attack surface on",
    "start": "216879",
    "end": "223879"
  },
  {
    "text": "uh to focus on EHC controller to beginning Reserve",
    "start": "223879",
    "end": "230239"
  },
  {
    "text": "engineering V hyper we needed an ENT point resing for specifical Strings is a",
    "start": "230239",
    "end": "240519"
  },
  {
    "text": "simple and E effective way by researching for EHC in Ida we can",
    "start": "240519",
    "end": "247400"
  },
  {
    "text": "quickly locate the code for ehci implmentation from there there is a",
    "start": "247400",
    "end": "254319"
  },
  {
    "text": "matter of understanding the ehci specification and the qem use code will",
    "start": "254319",
    "end": "261440"
  },
  {
    "text": "reverse engineering VM code first I need to take a few slides",
    "start": "261440",
    "end": "269840"
  },
  {
    "text": "to introduce the EHC and the usb2 controller the diagr on this slide is",
    "start": "269840",
    "end": "277880"
  },
  {
    "text": "taken from the EHC specification from this diagram we can",
    "start": "277880",
    "end": "283199"
  },
  {
    "text": "see that the EHC specification is responsible for the communication",
    "start": "283199",
    "end": "289880"
  },
  {
    "text": "protocol between the system software and the USB controller the USB controller",
    "start": "289880",
    "end": "297080"
  },
  {
    "text": "then conver the data into usb2 package to communicate with the",
    "start": "297080",
    "end": "304759"
  },
  {
    "text": "USB device can can con connect to it",
    "start": "304759",
    "end": "310720"
  },
  {
    "text": "therefore during the reverse engineering process we focus on understanding how",
    "start": "310720",
    "end": "317479"
  },
  {
    "text": "EHC commands and data packet are handled by VW code and uh convered into USB data",
    "start": "317479",
    "end": "327479"
  },
  {
    "text": "package to be sent to the US B device the slide introduces the basic",
    "start": "327479",
    "end": "334960"
  },
  {
    "text": "data structure of EHC package and the state machine of the ehi",
    "start": "334960",
    "end": "341479"
  },
  {
    "text": "controller we can say that ehi consist of Q and qtd along with Z",
    "start": "341479",
    "end": "348919"
  },
  {
    "text": "structure like itd but today we will focus on only",
    "start": "348919",
    "end": "354759"
  },
  {
    "text": "qtd qh is stands for Q head which for was a singular linked list each Q",
    "start": "354759",
    "end": "363360"
  },
  {
    "text": "carries a linked list of qtdds and the qtd is a smallest structure in ehci data",
    "start": "363360",
    "end": "371240"
  },
  {
    "text": "transfer the qdd has a buff poter array",
    "start": "371240",
    "end": "376599"
  },
  {
    "text": "where buff Point Stones physical memory address from the diagram on the right we",
    "start": "376599",
    "end": "384599"
  },
  {
    "text": "can see that USB controller first pass the Q then process and transfers the qds",
    "start": "384599",
    "end": "393039"
  },
  {
    "text": "within the Q when the transfer is complete it",
    "start": "393039",
    "end": "398840"
  },
  {
    "text": "checks if there are any qtd that need to be written back afterwards it moves on",
    "start": "398840",
    "end": "404880"
  },
  {
    "text": "to the next Q and The Continuous roup finally there is one more slide we",
    "start": "404880",
    "end": "412479"
  },
  {
    "text": "need to know what EHC data transfer looks like a USB device will have",
    "start": "412479",
    "end": "419599"
  },
  {
    "text": "multiple endpoints for transmission and each endpoint will have a unial pipe the",
    "start": "419599",
    "end": "426720"
  },
  {
    "text": "control pipe is user to configure the USB device this and it is",
    "start": "426720",
    "end": "434440"
  },
  {
    "text": "present on every USB device then there are three tokens for qtd set up in and",
    "start": "434440",
    "end": "442280"
  },
  {
    "text": "out among them the setup qdd is responsible for describing the entire",
    "start": "442280",
    "end": "449759"
  },
  {
    "text": "trans for que ultimat a trans for que will looks",
    "start": "449759",
    "end": "455800"
  },
  {
    "text": "like the diagram on the right with a set of qdd Follow by many in qds and out",
    "start": "455800",
    "end": "464919"
  },
  {
    "text": "qds here I show the execution flow of  and VW we can see the difference in",
    "start": "464919",
    "end": "474280"
  },
  {
    "text": "how they handle EHC data transfers qm mu processes each qtd as a",
    "start": "474280",
    "end": "482280"
  },
  {
    "text": "single unit treating each qtd as a",
    "start": "482280",
    "end": "487479"
  },
  {
    "text": "packet depending on the token type setup package will execute du token setup",
    "start": "487479",
    "end": "496240"
  },
  {
    "text": "where in package or exq the do token",
    "start": "496240",
    "end": "501280"
  },
  {
    "text": "in on the other hand wi treats an entire",
    "start": "501280",
    "end": "506520"
  },
  {
    "text": "eh transform c as a whole in uh it considers the entire c as a",
    "start": "506520",
    "end": "515240"
  },
  {
    "text": "single urb and then submits the urb to the USB",
    "start": "515240",
    "end": "522080"
  },
  {
    "text": "device by urb submit function data transfer and processings",
    "start": "522080",
    "end": "529399"
  },
  {
    "text": "are likely to have vulnerabilities for example the welln",
    "start": "529399",
    "end": "536120"
  },
  {
    "text": "cve 2020 143 64 inq emu occurs in the hand",
    "start": "536120",
    "end": "544800"
  },
  {
    "text": "handling the handling of each packet",
    "start": "544800",
    "end": "549920"
  },
  {
    "text": "type so could there be box in VW function function ehci control transfer",
    "start": "549920",
    "end": "558600"
  },
  {
    "text": "which also process date the answer is",
    "start": "558600",
    "end": "565480"
  },
  {
    "text": "yes we discovered a critical vulnerability here and uh accomplished a",
    "start": "565480",
    "end": "572720"
  },
  {
    "text": "series of interesting things through it so vulnerability we dis discovered is",
    "start": "572720",
    "end": "580519"
  },
  {
    "text": "cve 2022 31705 which is a hip outbounds",
    "start": "580519",
    "end": "588600"
  },
  {
    "text": "right that affects wiw esxi workstation and",
    "start": "588600",
    "end": "594279"
  },
  {
    "text": "fing affects all of wiw hypervisors we will assign this",
    "start": "594279",
    "end": "601600"
  },
  {
    "text": "vulnerability a score of 9.3 the code on the right is the eh",
    "start": "601600",
    "end": "610200"
  },
  {
    "text": "Control transer Function I need to note that since wiw",
    "start": "610200",
    "end": "617160"
  },
  {
    "text": "hyper is a closed S software there are symbols including",
    "start": "617160",
    "end": "623519"
  },
  {
    "text": "function name uh are named by ourselves in each side control transer that is a",
    "start": "623519",
    "end": "631160"
  },
  {
    "text": "loop that pass all qds in the Q and process them based on the qtd token",
    "start": "631160",
    "end": "638560"
  },
  {
    "text": "type first for the setup qdd which is the beginning of transer",
    "start": "638560",
    "end": "645920"
  },
  {
    "text": "Q we will allock a new urb the size of urb depends on the set",
    "start": "645920",
    "end": "654680"
  },
  {
    "text": "setup L fil in setup qtd which represents the total length of",
    "start": "654680",
    "end": "662600"
  },
  {
    "text": "data to be transferred in the queue next are the out qdd and in qdd we",
    "start": "662600",
    "end": "672360"
  },
  {
    "text": "can say that when processing the out qdd there is a check to say if the TB is a",
    "start": "672360",
    "end": "678959"
  },
  {
    "text": "illegal value TB is a member of qtd used in indicate the length of the data car",
    "start": "678959",
    "end": "688440"
  },
  {
    "text": "carried by the qdd set of lens here represents the",
    "start": "688440",
    "end": "696000"
  },
  {
    "text": "remaining lens set so current urb can",
    "start": "696000",
    "end": "703120"
  },
  {
    "text": "transfer if T Bice is greater than setup length meanwhile we only transfer the",
    "start": "703120",
    "end": "710480"
  },
  {
    "text": "length of set up length we can say that finally the EHC read TD buffer data is",
    "start": "710480",
    "end": "717680"
  },
  {
    "text": "read from the physical address carried by the qdd and return",
    "start": "717680",
    "end": "723279"
  },
  {
    "text": "the PB data cursor point of the",
    "start": "723279",
    "end": "729440"
  },
  {
    "text": "urb the process then continue subtracting tbes from setup",
    "start": "729440",
    "end": "737320"
  },
  {
    "text": "lens to update the remaining transer lens after processing it",
    "start": "737320",
    "end": "744800"
  },
  {
    "text": "will enter the next qdd process and the pass the next",
    "start": "744800",
    "end": "750639"
  },
  {
    "text": "qtd the in qtd is similar but since the direction of the in qtd is from the USB",
    "start": "750639",
    "end": "759040"
  },
  {
    "text": "device to the system software at this stage the USB device has not received",
    "start": "759040",
    "end": "765920"
  },
  {
    "text": "and processed this package so they won't have any data for",
    "start": "765920",
    "end": "771279"
  },
  {
    "text": "us to transform in EHC control transfer it",
    "start": "771279",
    "end": "776440"
  },
  {
    "text": "will directly execute the next operation so now the question",
    "start": "776440",
    "end": "784759"
  },
  {
    "text": "is where is The Bu we can see that in the processing of",
    "start": "784959",
    "end": "793480"
  },
  {
    "text": "out qdd there is a tricker for",
    "start": "793480",
    "end": "797519"
  },
  {
    "text": "TB which ensures that there will be no issue when set L is subtracted by T Byes",
    "start": "799320",
    "end": "811120"
  },
  {
    "text": "however when processing inqd there are no checks at all the code directory",
    "start": "811279",
    "end": "818480"
  },
  {
    "text": "subract tbes from setup lens which means that if setup light is smaller than TB",
    "start": "818480",
    "end": "827880"
  },
  {
    "text": "setup light will become a negative number after processing this",
    "start": "827880",
    "end": "834360"
  },
  {
    "text": "QD it cause a integer overflow",
    "start": "834360",
    "end": "839920"
  },
  {
    "text": "now that we know there is a integ b when processing includ in this code let's say",
    "start": "840120",
    "end": "847560"
  },
  {
    "text": "how to upgrade this ability when setup lens is",
    "start": "847560",
    "end": "854399"
  },
  {
    "text": "negative it it can't pass the check during out qdd",
    "start": "854399",
    "end": "861079"
  },
  {
    "text": "processing we need a set up lens to be a positive number which is easy we just",
    "start": "861079",
    "end": "867240"
  },
  {
    "text": "need to set a large number of inqs each with a TB view value of 0 x 7",
    "start": "867240",
    "end": "877920"
  },
  {
    "text": "F FF the blue part below shows the value of set up lens at each stage finally we",
    "start": "877920",
    "end": "887680"
  },
  {
    "text": "can subtract setup lens to a larg integer at this point set set up length",
    "start": "887680",
    "end": "897320"
  },
  {
    "text": "will be much larger than size of urb we can p Alt qdd with a size larger than",
    "start": "897320",
    "end": "904440"
  },
  {
    "text": "the urb's data size at an end which can pass the",
    "start": "904440",
    "end": "910360"
  },
  {
    "text": "code check thus leading to a hip out of bond right this is a vulnerability we",
    "start": "910360",
    "end": "919720"
  },
  {
    "text": "discovered in addition to cve 2022",
    "start": "919720",
    "end": "926240"
  },
  {
    "text": "31705 we discovered a new other",
    "start": "926240",
    "end": "930959"
  },
  {
    "text": "such as out of bonds read information disclosure which",
    "start": "931600",
    "end": "937279"
  },
  {
    "text": "have uh which have all been fixed we will give two example here first there",
    "start": "937279",
    "end": "943920"
  },
  {
    "text": "is an aut of B read vulnerability caused by pipe pipe type confusion we can",
    "start": "943920",
    "end": "951560"
  },
  {
    "text": "choose a control pip in the process and should hand",
    "start": "951560",
    "end": "957160"
  },
  {
    "text": "a ISO as a coronos pip although their",
    "start": "957160",
    "end": "962920"
  },
  {
    "text": "data structure are the same they are used differently which Le",
    "start": "962920",
    "end": "970079"
  },
  {
    "text": "which leads to problem we can say the image in the right",
    "start": "970079",
    "end": "977120"
  },
  {
    "text": "swing so during the transfer process of isoc Chronos and point so urb will",
    "start": "977199",
    "end": "985199"
  },
  {
    "text": "have multi multiple packs and the the PB",
    "start": "985199",
    "end": "990360"
  },
  {
    "text": "cursor will be increased however a c p urb will not",
    "start": "990360",
    "end": "996880"
  },
  {
    "text": "have multi multiple packets so the current package have actually",
    "start": "996880",
    "end": "1005560"
  },
  {
    "text": "already point to the data when the urb's number package is",
    "start": "1005560",
    "end": "1012399"
  },
  {
    "text": "zero this won't directly cause a problem but the issue is that so number packets",
    "start": "1012399",
    "end": "1020240"
  },
  {
    "text": "of Contra types urb is always",
    "start": "1020240",
    "end": "1026079"
  },
  {
    "text": "one which means this code blocker will be always",
    "start": "1026079",
    "end": "1032160"
  },
  {
    "text": "entered automatically causing PB data Cur to be increased beyond the range of",
    "start": "1032160",
    "end": "1041678"
  },
  {
    "text": "urb without out of B read another one is information",
    "start": "1041679",
    "end": "1049720"
  },
  {
    "text": "disclosure vulnerability that exist in multi viral USB devices such as USB",
    "start": "1049720",
    "end": "1058520"
  },
  {
    "text": "audio USB video USB",
    "start": "1058520",
    "end": "1063520"
  },
  {
    "text": "RNG the cost of vulnerability is that when creating a new urb beware didn't",
    "start": "1063919",
    "end": "1070840"
  },
  {
    "text": "use klock or perform the or performance the memory set function on the urb data",
    "start": "1070840",
    "end": "1079960"
  },
  {
    "text": "uh data array this lead to the data array",
    "start": "1079960",
    "end": "1085080"
  },
  {
    "text": "carrying memory information many visal devices will set",
    "start": "1085080",
    "end": "1092960"
  },
  {
    "text": "right back lens to data lens by default which allow all this information",
    "start": "1092960",
    "end": "1098799"
  },
  {
    "text": "to be disclosed the next part is how to",
    "start": "1098799",
    "end": "1103960"
  },
  {
    "text": "developers exploit I will leave the following time to my colleague",
    "start": "1103960",
    "end": "1110760"
  },
  {
    "text": "Dennis thanks Lance uh I'm Dennis and I will share the remaining part of our our",
    "start": "1111120",
    "end": "1118720"
  },
  {
    "text": "talk first when we have a new Z day vulnerability what difficulties do we",
    "start": "1118720",
    "end": "1123960"
  },
  {
    "text": "still face the VM hypervisor are close source which create many difficulties for both vulnerability Discovery and",
    "start": "1123960",
    "end": "1130840"
  },
  {
    "text": "explosion moreover this is no there is no publicly available exploit code and",
    "start": "1130840",
    "end": "1136720"
  },
  {
    "text": "very few public exploit flows what even more challenging is that the VMware plays great importance on the security",
    "start": "1136720",
    "end": "1144880"
  },
  {
    "text": "of its software almost all public exploit Primitives are being patched",
    "start": "1144880",
    "end": "1150240"
  },
  {
    "text": "making it difficult to continue using historical exploit flows finally due to",
    "start": "1150240",
    "end": "1155600"
  },
  {
    "text": "the nature of VMware soft VMware uh virtual machine software only a small number of code paths can be fully",
    "start": "1155600",
    "end": "1162480"
  },
  {
    "text": "controlled by who is in the gasos which greatly reduced the number of modules",
    "start": "1162480",
    "end": "1167799"
  },
  {
    "text": "where exploit PR atives may exist despite these challenges we conduct further research and discovered",
    "start": "1167799",
    "end": "1175000"
  },
  {
    "text": "a new set of generic exploit Primitives that helps us achieving VM escapes",
    "start": "1175000",
    "end": "1181440"
  },
  {
    "text": "before sharing this this new exposion approach let me first share some of the",
    "start": "1181440",
    "end": "1187039"
  },
  {
    "text": "past exploit Primitives and how wew P them this slides list multiple",
    "start": "1187039",
    "end": "1194720"
  },
  {
    "text": "historical public uh exploit Primitives and how VW fix them uh but due to the time constraints I",
    "start": "1194720",
    "end": "1201360"
  },
  {
    "text": "will not go into detail after searching and analyzing this historical expor",
    "start": "1201360",
    "end": "1206919"
  },
  {
    "text": "flows we found that there was no exploit primitive that could be used directly so",
    "start": "1206919",
    "end": "1212080"
  },
  {
    "text": "we had to look for it ourselves fortunately we find finally find a new exploit object this powerful Exel we",
    "start": "1212080",
    "end": "1220799"
  },
  {
    "text": "find is U the object we mentioned earlier uh when analyzing the",
    "start": "1220799",
    "end": "1226080"
  },
  {
    "text": "vulnerability the urb USB request block is um an Universal object for",
    "start": "1226080",
    "end": "1231760"
  },
  {
    "text": "transferring USB package in VMware and is used by all virtual USB controllers",
    "start": "1231760",
    "end": "1238280"
  },
  {
    "text": "since almost all virtual machine configurations include USB devices this",
    "start": "1238280",
    "end": "1243400"
  },
  {
    "text": "also means that the Primitives built around it are very generic the diagram",
    "start": "1243400",
    "end": "1248760"
  },
  {
    "text": "on the right shows the data structures of the urb and its related objects um",
    "start": "1248760",
    "end": "1255120"
  },
  {
    "text": "after our previous introduction to the vulnerability I think there's no need to explain each member here in detail",
    "start": "1255120",
    "end": "1261840"
  },
  {
    "text": "however there's are two new objects that we haven't mentioned before one is V USD",
    "start": "1261840",
    "end": "1267600"
  },
  {
    "text": "V USB device which VMware creates when each USB device is connected it includes",
    "start": "1267600",
    "end": "1274080"
  },
  {
    "text": "the pipe array of it this device so another object is Dev device uh this",
    "start": "1274080",
    "end": "1280320"
  },
  {
    "text": "object is located in the program data segment and contains related function",
    "start": "1280320",
    "end": "1285400"
  },
  {
    "text": "pointers therefore we can see that urb is a very ideal explo object firstly it can",
    "start": "1285400",
    "end": "1292520"
  },
  {
    "text": "be arbitrary allocated and freed and its size can also be arbit controlled by us",
    "start": "1292520",
    "end": "1298240"
  },
  {
    "text": "it member include a variable lens data array a member of control the lens to",
    "start": "1298240",
    "end": "1304559"
  },
  {
    "text": "read the right back lens a pointer to data and a pointer to a a pipe through",
    "start": "1304559",
    "end": "1310000"
  },
  {
    "text": "the pipe pointer we can index the device object and obtain the program space",
    "start": "1310000",
    "end": "1315960"
  },
  {
    "text": "address next I will explain in detail how we can use the U and related objects",
    "start": "1315960",
    "end": "1321679"
  },
  {
    "text": "to construct exploit Primitives and build our exposion approach step by step",
    "start": "1321679",
    "end": "1328200"
  },
  {
    "text": "first we need to convert the outof bounds right vulnerability to an outof bounds read we can arrange the memory",
    "start": "1328200",
    "end": "1335279"
  },
  {
    "text": "according to the diagram on the right I will introduce the memory grooming method at the end first allocate urb1",
    "start": "1335279",
    "end": "1342640"
  },
  {
    "text": "and U2 and ensure they won't be fully processed and freed this step requires",
    "start": "1342640",
    "end": "1348520"
  },
  {
    "text": "the right back lens of this urb to have a value and we don't use inqd to read it",
    "start": "1348520",
    "end": "1354919"
  },
  {
    "text": "back so it will be reserved on the memory uh the second step is to create",
    "start": "1354919",
    "end": "1361559"
  },
  {
    "text": "an ehci control transfer and allocate the uabb in front of U1 then use the out",
    "start": "1361559",
    "end": "1367919"
  },
  {
    "text": "of Bounce right to override the right back lens of urb1 once right once the",
    "start": "1367919",
    "end": "1373559"
  },
  {
    "text": "right back lens of urb1 is overwritten we can use urb1 to read more content",
    "start": "1373559",
    "end": "1379120"
  },
  {
    "text": "including the pipe address and buffer address in U2 the next part is arbitr address read",
    "start": "1379120",
    "end": "1386720"
  },
  {
    "text": "so it is very easy because we already have the Hep address we can just override the U 1's P data cursor to any",
    "start": "1386720",
    "end": "1395960"
  },
  {
    "text": "location the next step is arbitary address right initially I encountered",
    "start": "1395960",
    "end": "1401279"
  },
  {
    "text": "difficulties here although we can modify the p pb data cursor of the urb to an",
    "start": "1401279",
    "end": "1407480"
  },
  {
    "text": "arbitr address but once the urb is created and sent to the USB device it",
    "start": "1407480",
    "end": "1413200"
  },
  {
    "text": "cannot be written Again by the system software if we send a new transfer queue",
    "start": "1413200",
    "end": "1418760"
  },
  {
    "text": "it would naturally create a new urb instead of obtaining the original one so",
    "start": "1418760",
    "end": "1424520"
  },
  {
    "text": "how can we a arbitr uh address right I S of pipes uh we can modify the pipe",
    "start": "1424520",
    "end": "1431799"
  },
  {
    "text": "pointer of the urb through an autobound ride is there any ride operation that can be performed through a pipe",
    "start": "1431799",
    "end": "1439159"
  },
  {
    "text": "I found this primitive in the uhci check and right by function the check and right by function is execute once before",
    "start": "1439159",
    "end": "1446600"
  },
  {
    "text": "and after the transfer function to check the transfer status and write the return data from the USB device to the physical",
    "start": "1446600",
    "end": "1454080"
  },
  {
    "text": "address in the guest I found this primitive in uhci",
    "start": "1454080",
    "end": "1459480"
  },
  {
    "text": "which is the usb1 controller since a device is connected to the usci controller by default config by default",
    "start": "1459480",
    "end": "1466919"
  },
  {
    "text": "configuration this can be trigger by default the pipe parameter of the usci",
    "start": "1466919",
    "end": "1472679"
  },
  {
    "text": "check and R back function comes from the U pointer we can see that the frame in",
    "start": "1472679",
    "end": "1478480"
  },
  {
    "text": "the function comes from the pipe more interestingly the function writes the",
    "start": "1478480",
    "end": "1483559"
  },
  {
    "text": "content of the four bytes pointed by the one pointer in the frame to another P",
    "start": "1483559",
    "end": "1488960"
  },
  {
    "text": "pointer in the frame since both frame and the pipe are fed by us this allows",
    "start": "1488960",
    "end": "1494440"
  },
  {
    "text": "us to perform a 4 by arbitr address right this image uh the image in the button uh",
    "start": "1494440",
    "end": "1500760"
  },
  {
    "text": "right corner shows the assembly code for this uh line of C",
    "start": "1500760",
    "end": "1505880"
  },
  {
    "text": "code after achieving arbitr address read and right the next",
    "start": "1505880",
    "end": "1511039"
  },
  {
    "text": "step is to find Primitives to control the IP what kind of targets do we generally",
    "start": "1511039",
    "end": "1517720"
  },
  {
    "text": "look for um a d dynamically allocated object with a function pointer where we",
    "start": "1517720",
    "end": "1524559"
  },
  {
    "text": "can invoke the core of the function pointer the object closely related to",
    "start": "1524559",
    "end": "1529679"
  },
  {
    "text": "urb is the pipe fit this ceration",
    "start": "1529679",
    "end": "1536039"
  },
  {
    "text": "creran uh in the pipe release function cancel pipe the very first instruction",
    "start": "1536600",
    "end": "1542200"
  },
  {
    "text": "is to call a function pointer from the V USB device in pipe and we can also control the first and second parameters",
    "start": "1542200",
    "end": "1550120"
  },
  {
    "text": "uh that is very great uh if we can forge our pipe and Trigger cancel pipe we can",
    "start": "1550120",
    "end": "1555520"
  },
  {
    "text": "achieve arbitary code execution in this regard I found two approaches to",
    "start": "1555520",
    "end": "1561320"
  },
  {
    "text": "utilize uh part one is to as we can see from the image in the ehci check and",
    "start": "1561320",
    "end": "1567080"
  },
  {
    "text": "right back function the pipes comes from the urb then under certain condition",
    "start": "1567080",
    "end": "1573080"
  },
  {
    "text": "when ehci check modified setup returns an error it will execute cancel pipe",
    "start": "1573080",
    "end": "1579919"
  },
  {
    "text": "when we Forge the pipes through an autof bonds right we can achieve arbitr address",
    "start": "1579919",
    "end": "1585399"
  },
  {
    "text": "core sometimes we may not be able to to use pass one for example the in case of",
    "start": "1585399",
    "end": "1591080"
  },
  {
    "text": "VMware Fusion the default configuration uses uh USB video device in my attempts",
    "start": "1591080",
    "end": "1598000"
  },
  {
    "text": "I found it difficult to retain the ehdi urb so I had to see other ways however",
    "start": "1598000",
    "end": "1605520"
  },
  {
    "text": "since we can achieve arbitary dress right we can do more interesting things uh for instance we can directly write a",
    "start": "1605520",
    "end": "1612320"
  },
  {
    "text": "forge pipe object into the pipe array pipe array of USB device then by",
    "start": "1612320",
    "end": "1617480"
  },
  {
    "text": "triggering a Port reset through the ehci resistors it will call destroy all pipe",
    "start": "1617480",
    "end": "1623720"
  },
  {
    "text": "and eventually release all pipes in V USB device including our for",
    "start": "1623720",
    "end": "1630120"
  },
  {
    "text": "pipe finally let's talk about The Primitives required uh for Heap grooming",
    "start": "1630120",
    "end": "1635720"
  },
  {
    "text": "this part is not our own finding but comes from the content of the black high Europe talk uh using the Shader object",
    "start": "1635720",
    "end": "1642880"
  },
  {
    "text": "in the svj model can help us compete Hep spraying and Grooming it can be",
    "start": "1642880",
    "end": "1649399"
  },
  {
    "text": "specified to any size and can be arbitrary allocated and freed by us the",
    "start": "1649399",
    "end": "1654520"
  },
  {
    "text": "below are the commands requiring to allocate and freeze the Shader object for the more details about SVGA I have",
    "start": "1654520",
    "end": "1661799"
  },
  {
    "text": "also attached the link to the Wi paper of this talk with sufficient Primitives our",
    "start": "1661799",
    "end": "1669000"
  },
  {
    "text": "explosion becomes feasible here I share my actual exposion plan which may seem",
    "start": "1669000",
    "end": "1674960"
  },
  {
    "text": "complex because we chose the pass two method to control rip uh which also",
    "start": "1674960",
    "end": "1680200"
  },
  {
    "text": "requires us to leak more information the good news is that after each asci control transfer is completed",
    "start": "1680200",
    "end": "1687600"
  },
  {
    "text": "the urb will be freed and the next allocation will still be in the in this freed position so there is no need to",
    "start": "1687600",
    "end": "1694919"
  },
  {
    "text": "message the hip again however the actual exposion does not stop here we still face a big",
    "start": "1694919",
    "end": "1703679"
  },
  {
    "text": "problem the problem comes from Macos itself the Macos SL maloc uses magazines",
    "start": "1703679",
    "end": "1710480"
  },
  {
    "text": "to manage hip blocks which uh with each CPU core having a unique corresponding",
    "start": "1710480",
    "end": "1716559"
  },
  {
    "text": "magazine when a program execute Malo the MEO finds the corresponding magazine to",
    "start": "1716559",
    "end": "1722200"
  },
  {
    "text": "complete the Hep trunk allocation based on the current CPU core of the process",
    "start": "1722200",
    "end": "1727919"
  },
  {
    "text": "this means that every time we allocate a hep trunk the corresponding Maxine and memory area are random this cause a very",
    "start": "1727919",
    "end": "1735960"
  },
  {
    "text": "big problem for us and the diagram in the lower left shows the hip management",
    "start": "1735960",
    "end": "1741360"
  },
  {
    "text": "of Li malog therefore we can find that the",
    "start": "1741360",
    "end": "1748080"
  },
  {
    "text": "memory areas of the magazines corresponding to each CPU core are different and the allocated hip trunks",
    "start": "1748080",
    "end": "1755000"
  },
  {
    "text": "are not together at all and the the diagram on the right shows a simple experiment I did I kept",
    "start": "1755000",
    "end": "1762519"
  },
  {
    "text": "running Malo in the program and then counted the which magazine the hip trunk",
    "start": "1762519",
    "end": "1768440"
  },
  {
    "text": "trunks were in we can find certain patterns such as most Heap trunks being",
    "start": "1768440",
    "end": "1773480"
  },
  {
    "text": "allocated in magazines with even numbered indexes which implies that CPU",
    "start": "1773480",
    "end": "1778880"
  },
  {
    "text": "scheduling priorities even numbered CPU course but the important point is that",
    "start": "1778880",
    "end": "1784799"
  },
  {
    "text": "almost all Maxine will be covered we did some research on Le Malo",
    "start": "1784799",
    "end": "1792519"
  },
  {
    "text": "and then come up with a way to deal with it first we can ensure that when we are",
    "start": "1792519",
    "end": "1797679"
  },
  {
    "text": "using Shader to spray the Hep the CPU core will not switch because they can be",
    "start": "1797679",
    "end": "1802919"
  },
  {
    "text": "in a simple while loop as long as we put the commment into the command port at",
    "start": "1802919",
    "end": "1808200"
  },
  {
    "text": "once however once there's a threat switch such as from svj to EHC",
    "start": "1808200",
    "end": "1814240"
  },
  {
    "text": "controller it is impossible to guarantee that it is still in the same CPU core",
    "start": "1814240",
    "end": "1819840"
  },
  {
    "text": "therefore if we cannot ensure that the EC control urb and the Shader we arranged in advance are in the same",
    "start": "1819840",
    "end": "1827159"
  },
  {
    "text": "magazines the out of Bounce right will cause the program to crash but what if we do a heap layout in all of the",
    "start": "1827159",
    "end": "1836159"
  },
  {
    "text": "magazines yes this is the count measure we came up with first repeat the basic",
    "start": "1836159",
    "end": "1842519"
  },
  {
    "text": "Heap layout and try to have at least one complete layout in each magazine then",
    "start": "1842519",
    "end": "1847960"
  },
  {
    "text": "for each subsequent step of the operation try a large number of times to ensure that our out over bonds right and",
    "start": "1847960",
    "end": "1855320"
  },
  {
    "text": "the inform information that needs to be laked happen to be in the same magazine it",
    "start": "1855320",
    "end": "1861440"
  },
  {
    "text": "doesn't matter if they are not in the same magazine because we have layouts in each magazine which were not in C cause",
    "start": "1861440",
    "end": "1868760"
  },
  {
    "text": "crash we just need to keep trying at this point we are left with",
    "start": "1868760",
    "end": "1873840"
  },
  {
    "text": "the most important question how to ensure that all magazines are laid out",
    "start": "1873840",
    "end": "1879760"
  },
  {
    "text": "we thought of many ways such as uh adding a sleep between each round of allocation we",
    "start": "1879760",
    "end": "1887519"
  },
  {
    "text": "experiment experimented with various sleep times from small to large but unfortunately none of them worked when",
    "start": "1887519",
    "end": "1894080"
  },
  {
    "text": "the sleep time uh reached more than 1 second it actually ensured fewer",
    "start": "1894080",
    "end": "1900720"
  },
  {
    "text": "magazines for hip spraying this is understandable because from the previous slides we can find that magazines with",
    "start": "1900720",
    "end": "1908559"
  },
  {
    "text": "even numbered indexes are more likely to be scheduled then we tried to increase",
    "start": "1908559",
    "end": "1914440"
  },
  {
    "text": "cpu's uh occupancy to in increase CP CPU core switching hoping to switch each CPU",
    "start": "1914440",
    "end": "1921200"
  },
  {
    "text": "core more evly evenly unfortunately this didn't work either we speculate that it",
    "start": "1921200",
    "end": "1927799"
  },
  {
    "text": "may be C what we can do is only increase CPU cost in the gas system uh of the",
    "start": "1927799",
    "end": "1933880"
  },
  {
    "text": "hyper hypervisor which has too little impact uh on the host operating",
    "start": "1933880",
    "end": "1939279"
  },
  {
    "text": "system finally we explore two ways to increase the POS probability of success",
    "start": "1939279",
    "end": "1946159"
  },
  {
    "text": "the first is to remove s de and speed up the uh exposion CPU scheduling should be",
    "start": "1946159",
    "end": "1953200"
  },
  {
    "text": "at ment intervals and the fast exposion can reduce other",
    "start": "1953200",
    "end": "1959039"
  },
  {
    "text": "interference interferences the second is to use a huge number of hip spray RS the",
    "start": "1959039",
    "end": "1965440"
  },
  {
    "text": "dozens or even hundreds of rounds are too few we used more than therex 1,000",
    "start": "1965440",
    "end": "1971720"
  },
  {
    "text": "RS of hip sprain to ensure more comprehensive maxing coverage we can",
    "start": "1971720",
    "end": "1977320"
  },
  {
    "text": "directly use the basic Hep layout to spray Hep without allocating many useless stages before the layout because",
    "start": "1977320",
    "end": "1985320"
  },
  {
    "text": "if it is an odd-numbered index magazine there are actually fewer Hep trunks on",
    "start": "1985320",
    "end": "1990720"
  },
  {
    "text": "it and it doesn't need much Heap spraying directly uh direct uh Heap",
    "start": "1990720",
    "end": "1996600"
  },
  {
    "text": "layout can Su succeed eventually after a long time of",
    "start": "1996600",
    "end": "2002679"
  },
  {
    "text": "debugging we increase the success rate on our MacBook Pro 13 to over 18% this",
    "start": "2002679",
    "end": "2011399"
  },
  {
    "text": "may still not be perfect but due to the randomness of magazines we are quite",
    "start": "2011399",
    "end": "2016840"
  },
  {
    "text": "satisfied with this result and we also complete the escape on the first attempt",
    "start": "2016840",
    "end": "2022200"
  },
  {
    "text": "at gon 2022 next let me play a v demo uh which",
    "start": "2022200",
    "end": "2028039"
  },
  {
    "text": "records our VW Fusion R machine Escape",
    "start": "2028039",
    "end": "2033240"
  },
  {
    "text": "attack so this is this is a fusion and",
    "start": "2033960",
    "end": "2039399"
  },
  {
    "text": "uh first we check the version of the back and the version of the fusion the",
    "start": "2039399",
    "end": "2045080"
  },
  {
    "text": "guest is uh then want to uh and this is our exploit we just run",
    "start": "2045080",
    "end": "2053520"
  },
  {
    "text": "the exploit and it",
    "start": "2053520",
    "end": "2057599"
  },
  {
    "text": "will it will pop up the calculator yeah that's",
    "start": "2060159",
    "end": "2065839"
  },
  {
    "text": "it uh thank you uh okay then let's briefly share the",
    "start": "2065839",
    "end": "2073839"
  },
  {
    "text": "exploit of vmw workstation it should be noted that under this default configuration there will be no devices",
    "start": "2073839",
    "end": "2080960"
  },
  {
    "text": "connect to the ehci controller therefore to trigger the vulnerability we need to",
    "start": "2080960",
    "end": "2086200"
  },
  {
    "text": "manually connected uh USB device to the ehci controller the exposion on Windows",
    "start": "2086200",
    "end": "2093079"
  },
  {
    "text": "will also face some troubles such as lfh the lower frag",
    "start": "2093079",
    "end": "2098520"
  },
  {
    "text": "Heap the existence of lfh increase the difficulty of exposion because it",
    "start": "2098520",
    "end": "2104839"
  },
  {
    "text": "randomly allocates Heap trunks fortunately the parameters we use",
    "start": "2104839",
    "end": "2110119"
  },
  {
    "text": "including urb and Shader can exceed uh ZX 4000 which is the maximum",
    "start": "2110119",
    "end": "2116680"
  },
  {
    "text": "size of lfh this makes Heap Arrangement much easier for the object that cannot",
    "start": "2116680",
    "end": "2122800"
  },
  {
    "text": "be larger than one 0x 4000 we can choose a size that has not been",
    "start": "2122800",
    "end": "2128440"
  },
  {
    "text": "uh has not yet been enabled by lfh such as z x 330 S70 uh the image in the lower",
    "start": "2128440",
    "end": "2136720"
  },
  {
    "text": "left reveals how we complete a of bonds reading under the windows the final exposion idea we have",
    "start": "2136720",
    "end": "2144280"
  },
  {
    "text": "as shown in the lower right corner and this is a demo of uh escaping",
    "start": "2144280",
    "end": "2153079"
  },
  {
    "text": "um workstation and we just do the record the",
    "start": "2153079",
    "end": "2158240"
  },
  {
    "text": "same thing uh and run the",
    "start": "2158240",
    "end": "2163359"
  },
  {
    "text": "exploit and how about the calculator the last exposion case is on",
    "start": "2168000",
    "end": "2175480"
  },
  {
    "text": "VMI like workstation no default devic is on the esci",
    "start": "2175480",
    "end": "2180880"
  },
  {
    "text": "controller um for the essi it is a system uh similar to Cent os7 using a",
    "start": "2180880",
    "end": "2187079"
  },
  {
    "text": "very old gdbc version 2.17 however in the new esxi",
    "start": "2187079",
    "end": "2193680"
  },
  {
    "text": "802 it has been updated to version 2.28 uh the same as Cent os8 so the",
    "start": "2193680",
    "end": "2201319"
  },
  {
    "text": "exposion idea on esxi will be similar to that of fusion and we don't need to face",
    "start": "2201319",
    "end": "2207400"
  },
  {
    "text": "the randomness problem caused by the magazines so at this point it will be",
    "start": "2207400",
    "end": "2213800"
  },
  {
    "text": "easier another difference is uh is that since 3 Graphics uh acceleration is not being",
    "start": "2213800",
    "end": "2221680"
  },
  {
    "text": "enabled by default in esxi uh we cannot use the Shader object we can use gmr",
    "start": "2221680",
    "end": "2227680"
  },
  {
    "text": "instead although it cannot be allocated in large quantities like shaders it still has a high degree of",
    "start": "2227680",
    "end": "2236000"
  },
  {
    "text": "flexibility due to the Lans of this talk I will not go in details about the",
    "start": "2236000",
    "end": "2241280"
  },
  {
    "text": "related exposion here uh we complete uh VMware esxi VN Escape at the 2023 te for",
    "start": "2241280",
    "end": "2248760"
  },
  {
    "text": "cup and eventually gain the highest privileges uh of esxi I hope we will",
    "start": "2248760",
    "end": "2255280"
  },
  {
    "text": "have opportunity to share more in the future and the last part is the",
    "start": "2255280",
    "end": "2261400"
  },
  {
    "text": "takeways uh first is where buxs have Arison with similar software there may",
    "start": "2261400",
    "end": "2268119"
  },
  {
    "text": "be new buxs the second is when looking for export Primitives try to look for",
    "start": "2268119",
    "end": "2274280"
  },
  {
    "text": "objects related to the vulnerability as the first time uh I",
    "start": "2274280",
    "end": "2281040"
  },
  {
    "text": "first uh do reverse engineering in lots of other modules but I can't find the",
    "start": "2281040",
    "end": "2288800"
  },
  {
    "text": "good object but but when I look back to the vulnerability I found the U is",
    "start": "2288800",
    "end": "2296280"
  },
  {
    "text": "really powerful the last is the virtual devices especially USB related devices uh now a",
    "start": "2296280",
    "end": "2304160"
  },
  {
    "text": "popular Tex service so this is our talk uh is there any questions",
    "start": "2304160",
    "end": "2310200"
  },
  {
    "text": "here uh you can uh ask uh ask us after the",
    "start": "2310200",
    "end": "2316480"
  },
  {
    "text": "presentation okay so this is our talk thanks for listening and hope you like it",
    "start": "2317760",
    "end": "2325760"
  }
]