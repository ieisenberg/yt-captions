[
  {
    "start": "0",
    "end": "81000"
  },
  {
    "text": "it's an honor again to be at blackhat so today I'm going to talk about work where",
    "start": "30",
    "end": "5549"
  },
  {
    "text": "we tested implementations of the Wi-Fi handshake and this work was done in collaboration with domains Quebec and",
    "start": "5549",
    "end": "11490"
  },
  {
    "text": "Frank pissants and they were both also working at university K 11 at the time",
    "start": "11490",
    "end": "18050"
  },
  {
    "text": "so first a quick background we see that lately more and more Wi-Fi networks are",
    "start": "18050",
    "end": "24900"
  },
  {
    "text": "employing encryption for example in the graph here you can see that in 2010 nearly half of all networks were using",
    "start": "24900",
    "end": "32369"
  },
  {
    "text": "wireless encryption so you can see the green line at the top that's the amount of network that employ some form of",
    "start": "32369",
    "end": "38579"
  },
  {
    "text": "encryption if we then look at the beginning of this year we can see that",
    "start": "38579",
    "end": "44489"
  },
  {
    "text": "around 75 percent of all wireless network we're using some form of encryption and the most important part",
    "start": "44489",
    "end": "52530"
  },
  {
    "text": "here is that all these networks rely on the 4-way Wi-Fi handshake to generate fresh session keys so even networks that",
    "start": "52530",
    "end": "60719"
  },
  {
    "text": "for example use appreciate key or you have an enterprise network they all rely",
    "start": "60719",
    "end": "66390"
  },
  {
    "text": "on the Wi-Fi handshake anton in particular on the 4-way handshake so",
    "start": "66390",
    "end": "71460"
  },
  {
    "text": "it's absolutely critical that this Wi-Fi handshake is securely implemented otherwise your network or your clients",
    "start": "71460",
    "end": "78180"
  },
  {
    "text": "might be vulnerable so if you look at the related work in this area we can see that the design of the handshake has",
    "start": "78180",
    "end": "85170"
  },
  {
    "start": "81000",
    "end": "81000"
  },
  {
    "text": "already been formally verified as secure so we are quite sure that that should be",
    "start": "85170",
    "end": "91710"
  },
  {
    "text": "good so I do want to remind you here that just because this design was proven",
    "start": "91710",
    "end": "96750"
  },
  {
    "text": "secure it could also be that there are some flaws and their proofs but for now we're going to assume that the design is",
    "start": "96750",
    "end": "104520"
  },
  {
    "text": "secure and on stead and this presentation we're going to look at implementation flaws so there has been a",
    "start": "104520",
    "end": "110729"
  },
  {
    "text": "very limited amount of related work in this area so there has been one paper",
    "start": "110729",
    "end": "115770"
  },
  {
    "text": "which faces the initial stage of the Wi-Fi handshake where beacons on prop",
    "start": "115770",
    "end": "120840"
  },
  {
    "text": "requests are used but limitation is that this work only looks for common",
    "start": "120840",
    "end": "127680"
  },
  {
    "text": "programming mistakes such as buffer overflows or double freeze or no pointer dereferences which",
    "start": "127680",
    "end": "133810"
  },
  {
    "text": "crash the implementation initially they only check the first stage of the handshake so we are not looking for",
    "start": "133810",
    "end": "140080"
  },
  {
    "text": "logical vulnerabilities and we are also not investigating the full Wi-Fi handshake um that will exactly be the",
    "start": "140080",
    "end": "147700"
  },
  {
    "text": "goal of our work we're going to study the Wi-Fi handshake in detail on try to detect logical vulnerabilities so magis",
    "start": "147700",
    "end": "155410"
  },
  {
    "text": "vulnerabilities that crash the implementations but cases where an implementation deviates from the",
    "start": "155410",
    "end": "160569"
  },
  {
    "text": "specification so in order to explain this I'm first going to introduce the",
    "start": "160569",
    "end": "167290"
  },
  {
    "start": "163000",
    "end": "163000"
  },
  {
    "text": "Wi-Fi handshake and how it works so as I mentioned the Wi-Fi handshake is used mainly to negotiate fresh session",
    "start": "167290",
    "end": "174940"
  },
  {
    "text": "keys which are then used to encrypt actual data traffic which has transmitted at a later point in time the",
    "start": "174940",
    "end": "182800"
  },
  {
    "text": "way the Wi-Fi handshake is of course also used to discover networks using beacons on ProQuest's and additionally",
    "start": "182800",
    "end": "189400"
  },
  {
    "text": "it has also used to select the cipher that you want to use um it prevents",
    "start": "189400",
    "end": "195400"
  },
  {
    "text": "against downgrade attacks as well so like I mentioned after this handshake",
    "start": "195400",
    "end": "201000"
  },
  {
    "text": "actual Wi-Fi traffic is encrypted using a specific algorithm and these days this",
    "start": "201000",
    "end": "206680"
  },
  {
    "text": "algorithm is a derp WPA tkip or AES ccmp now WPA tkip is rather insecure",
    "start": "206680",
    "end": "214810"
  },
  {
    "text": "algorithm and that was because it was designed to run on old web hardware so at the time that web was designed it was",
    "start": "214810",
    "end": "221769"
  },
  {
    "text": "found to be completely broken and companies and vendors wanted something more secure to run on this old hardware",
    "start": "221769",
    "end": "228910"
  },
  {
    "text": "however this hardware was not very efficient so they came up with a new standard but he had had to sacrifice",
    "start": "228910",
    "end": "235260"
  },
  {
    "text": "some security in order to be able to run on this old hardware and that's where",
    "start": "235260",
    "end": "240310"
  },
  {
    "text": "WPA T comes into play however these days we have modern hardware so you can run",
    "start": "240310",
    "end": "246730"
  },
  {
    "text": "proper encryption algorithms and in the case of a Wi-Fi you should only be using",
    "start": "246730",
    "end": "252130"
  },
  {
    "text": "AES ccmp okay so how does the Wi-Fi handshake actually work so the first",
    "start": "252130",
    "end": "259120"
  },
  {
    "start": "255000",
    "end": "255000"
  },
  {
    "text": "stage of the handshake we are basically basically going to discover nearby",
    "start": "259120",
    "end": "264430"
  },
  {
    "text": "networks and this is traditionally done by access points which constantly transmit",
    "start": "264430",
    "end": "270220"
  },
  {
    "text": "beacons which announce the presence of a network the client monitors for these beacons armed when it has found a",
    "start": "270220",
    "end": "276400"
  },
  {
    "text": "network it wants to join it will decide which cipher it wants to use and then it",
    "start": "276400",
    "end": "281680"
  },
  {
    "text": "will send an association request to the access point that is basically saying",
    "start": "281680",
    "end": "286870"
  },
  {
    "text": "hey I want to connect to this access point so once the client has sent this",
    "start": "286870",
    "end": "296530"
  },
  {
    "text": "association request which again informs the access point hey I'm a client and I want to connect if the access point",
    "start": "296530",
    "end": "303099"
  },
  {
    "text": "accepts this client then it will send the first message of the handshake Anton",
    "start": "303099",
    "end": "308379"
  },
  {
    "text": "the client will reply now essentially these two first messages and the handshake are used to transport random",
    "start": "308379",
    "end": "314979"
  },
  {
    "text": "nonsense and these random nonsense are used to generate a fresh session key",
    "start": "314979",
    "end": "320020"
  },
  {
    "text": "which has never been used before so we don't get kiri use so as you can see here the client generates a session keys",
    "start": "320020",
    "end": "327009"
  },
  {
    "text": "once it received message one on the access point will generate the session keys once it has received message two",
    "start": "327009",
    "end": "333060"
  },
  {
    "text": "then in the second stage of the four way handshake there are two more messages",
    "start": "333060",
    "end": "338469"
  },
  {
    "text": "that are exchanged and a bit simplified this message essentially tried to protect against downgrade attacks so in",
    "start": "338469",
    "end": "345699"
  },
  {
    "text": "particular and message three the access point will send its supported list of",
    "start": "345699",
    "end": "350770"
  },
  {
    "text": "ciphers in a secure and authenticated manner so by now the access point has a",
    "start": "350770",
    "end": "356169"
  },
  {
    "text": "session key on this message Tree is protected using the session key um the",
    "start": "356169",
    "end": "361270"
  },
  {
    "text": "idea here is that when a client receives this message it can verify the cypher list that is a message tree which is",
    "start": "361270",
    "end": "368199"
  },
  {
    "text": "authenticated on an attacker cannot Forge this list and it will compare it to the cypher list that was in the",
    "start": "368199",
    "end": "374169"
  },
  {
    "text": "beacon because the beacon contains no crypto and can be forged by an attacker and if there is a mismatch between these",
    "start": "374169",
    "end": "380020"
  },
  {
    "text": "lists then a downgrade attack was detected and finally at the last stage of the handshake the client sends",
    "start": "380020",
    "end": "386289"
  },
  {
    "text": "message for to the access points which basically informs the act access point hey I didn't attack a downgrade attack",
    "start": "386289",
    "end": "392139"
  },
  {
    "text": "we're good let's start exchanging normal data traffic now one thing I didn't",
    "start": "392139",
    "end": "398529"
  },
  {
    "text": "mention yet is in message two the client also transports the cipher",
    "start": "398529",
    "end": "404020"
  },
  {
    "text": "that it chose in a secure manner but this is just to make the handshake more robust so you can see at the access",
    "start": "404020",
    "end": "411490"
  },
  {
    "text": "point right there there is it will also verify the chosen cipher of the client",
    "start": "411490",
    "end": "417280"
  },
  {
    "text": "but this is just to make the access point more to him to make the handshake more robust at the end hand if the",
    "start": "417280",
    "end": "422920"
  },
  {
    "text": "access point sorry missus this check that doesn't mean there's a downgrade attack yet because we still have the",
    "start": "422920",
    "end": "428590"
  },
  {
    "text": "second check okay so the next thing you need to know is how are these messages",
    "start": "428590",
    "end": "434920"
  },
  {
    "text": "defines well they are defined using ei poll frames and simplified this is the",
    "start": "434920",
    "end": "440230"
  },
  {
    "start": "439000",
    "end": "439000"
  },
  {
    "text": "layout here of an ear poll frame basically you have a header with a destination on the source address you",
    "start": "440230",
    "end": "445630"
  },
  {
    "text": "have some flag which identify the message that we are dealing with for example is it message one two three or",
    "start": "445630",
    "end": "451210"
  },
  {
    "text": "four you also have a make the Meg here stands for message integrity code and",
    "start": "451210",
    "end": "456580"
  },
  {
    "text": "this is used to verify the authenticity of a frame in other words so that an",
    "start": "456580",
    "end": "462370"
  },
  {
    "text": "attacker cannot decide to flip bits in this frame or decide to forge a message",
    "start": "462370",
    "end": "467800"
  },
  {
    "text": "and finally there's a field called key data field and that's encrypted and it",
    "start": "467800",
    "end": "473950"
  },
  {
    "text": "is used to transport for example this list of cipher Suites in a secure and authenticated manner and it can also",
    "start": "473950",
    "end": "479980"
  },
  {
    "text": "transport the group key which is used to encrypt broadcast on multicast traffic",
    "start": "479980",
    "end": "486240"
  },
  {
    "text": "so we're almost done with the background here there is one more thing I need to explain and that's how a WPA ticket",
    "start": "486240",
    "end": "493780"
  },
  {
    "text": "frame looks like because we are going to use parts of this in our attack so you",
    "start": "493780",
    "end": "500200"
  },
  {
    "text": "can see a very simplified layout here on to the ideas basically we have some data that we want to transmit we calculate a",
    "start": "500200",
    "end": "506800"
  },
  {
    "text": "Mik over this data so make again stands for message integrity check so it assures the authenticity of the frame",
    "start": "506800",
    "end": "513310"
  },
  {
    "text": "that no bits have been flipped and this whole frame will be encrypted using our",
    "start": "513310",
    "end": "518469"
  },
  {
    "text": "c4 so you should know by now that our c4 is an insecure algorithm you should not",
    "start": "518469",
    "end": "523840"
  },
  {
    "text": "be using it and this is one of the reasons why WPA tkip is not as secure there's another reason why WPA tkip is",
    "start": "523840",
    "end": "531070"
  },
  {
    "text": "not secure and that's because this Mik check here it's calculated using a Mickey so it's using",
    "start": "531070",
    "end": "538660"
  },
  {
    "text": "a hash algorithm essentially but the problem here is that if an attacker is",
    "start": "538660",
    "end": "544810"
  },
  {
    "text": "able to gain access to the data on to make fields in a decrypted form so if",
    "start": "544810",
    "end": "549819"
  },
  {
    "text": "you can somehow undo the rc4 encryption then if not occur simply has access to",
    "start": "549819",
    "end": "555279"
  },
  {
    "text": "this data field on to make fields he can derive the Mickey normally that is not possible in a cryptographic protocol and",
    "start": "555279",
    "end": "563050"
  },
  {
    "text": "we're going to come back to this issue later during the presentation for now we",
    "start": "563050",
    "end": "569050"
  },
  {
    "text": "have covered the backgrounds and we can finally start explaining how our testing methodology actually works so the way we",
    "start": "569050",
    "end": "577509"
  },
  {
    "start": "577000",
    "end": "577000"
  },
  {
    "text": "are going to test implementations of the Wi-Fi handshake is using model-based testing so model-based testing is",
    "start": "577509",
    "end": "584410"
  },
  {
    "text": "already fairly well known especially in the academic world lately it has also",
    "start": "584410",
    "end": "590379"
  },
  {
    "text": "been applied to test the implementations of network protocols so just a reminder",
    "start": "590379",
    "end": "596740"
  },
  {
    "text": "what do I mean with model-based testing basically you have an implementation a program that you want to test on to us",
    "start": "596740",
    "end": "603939"
  },
  {
    "text": "also have a formal specification that describes how the implementation should be behaving and then you're basically",
    "start": "603939",
    "end": "610509"
  },
  {
    "text": "going to check is the implementation indeed behaving according to the specification according to this abstract",
    "start": "610509",
    "end": "617470"
  },
  {
    "text": "formal model um a few years ago this technique was applied against SSL on TLS",
    "start": "617470",
    "end": "624730"
  },
  {
    "text": "for example on the paper the messy State of the Union and the researchers there",
    "start": "624730",
    "end": "630850"
  },
  {
    "text": "discovered a lot of issues and the worst of these issues could be used to completely decrypt any TLS traffic on",
    "start": "630850",
    "end": "641620"
  },
  {
    "text": "the idea in our work now is to come up with a variation of this approach which",
    "start": "641620",
    "end": "646930"
  },
  {
    "text": "we can apply to the Wi-Fi handshake again with us goal to detect logical vulnerabilities in the handshake so how",
    "start": "646930",
    "end": "655449"
  },
  {
    "text": "does our approach work well we basically first start with a normal execution of",
    "start": "655449",
    "end": "660970"
  },
  {
    "start": "658000",
    "end": "658000"
  },
  {
    "text": "the handshake so in an execution where we can successfully connect to the access point every",
    "start": "660970",
    "end": "666920"
  },
  {
    "text": "Tango's okay we take that basically as our base point and then we modify this normal execution of the handshake for",
    "start": "666920",
    "end": "674510"
  },
  {
    "text": "example what we can do is we can decide to drop random messages from the handshake and if we do that the",
    "start": "674510",
    "end": "680240"
  },
  {
    "text": "handshake should no longer be successful because we didn't send all the required messages another thing that we can do is",
    "start": "680240",
    "end": "688430"
  },
  {
    "text": "we can try to retransmit messages and in that case the handshake should still be",
    "start": "688430",
    "end": "694040"
  },
  {
    "text": "executed perfectly fine because it's very normal in the Wi-Fi network that frames are retransmitted because for",
    "start": "694040",
    "end": "700670"
  },
  {
    "text": "example the acknowledgement was lost and these modifications to the Wi-Fi",
    "start": "700670",
    "end": "706910"
  },
  {
    "text": "handshake to this normal execution of the handshake we call these test generation rules so a test generation",
    "start": "706910",
    "end": "713510"
  },
  {
    "text": "rule is for example a rule which has try to drop every message of the handshake or try to inject random messages between",
    "start": "713510",
    "end": "719870"
  },
  {
    "text": "a normal handshake so what we need to do here then is define appropriate test",
    "start": "719870",
    "end": "726560"
  },
  {
    "text": "generation rules so we can test the necessarily functionality of a Wi-Fi",
    "start": "726560",
    "end": "731990"
  },
  {
    "text": "handshake now I will give some more example of these test generation rules but one important thing I do want to",
    "start": "731990",
    "end": "738860"
  },
  {
    "text": "mention now is that we assume that all these modifications to this base",
    "start": "738860",
    "end": "744110"
  },
  {
    "text": "execution of the handshake are applied independently so we're not going to combine two different test generation",
    "start": "744110",
    "end": "750050"
  },
  {
    "text": "rules because otherwise we would be in a explosion of the number of options it",
    "start": "750050",
    "end": "755449"
  },
  {
    "text": "would be an exponential options that we get which would be basically impossible to execute them all so we're going to",
    "start": "755449",
    "end": "761120"
  },
  {
    "text": "assume their independence this this is alimentation of the approach and we are working on it to remove this limitation",
    "start": "761120",
    "end": "768620"
  },
  {
    "text": "but currently that's what we're doing so once we have our test generation rules",
    "start": "768620",
    "end": "774500"
  },
  {
    "text": "we basically apply all these test generation rules to our model to our",
    "start": "774500",
    "end": "779510"
  },
  {
    "text": "normal execution of the handshake and we end up with a test case so what an hour",
    "start": "779510",
    "end": "784579"
  },
  {
    "text": "work what is the definition of a test case a test case essentially specifies the messages that you want to send to",
    "start": "784579",
    "end": "791060"
  },
  {
    "text": "the amplitude implementation under test on the replies that you expect and return but that's not everything that",
    "start": "791060",
    "end": "799130"
  },
  {
    "text": "the test case defines it also where this should result in a successful connection with the access point for",
    "start": "799130",
    "end": "805639"
  },
  {
    "text": "example because you might have a case where you always get the expected replies but it should not result in a",
    "start": "805639",
    "end": "811790"
  },
  {
    "text": "successful connection for example if you drop the last two messages of the handshake well you will always get the",
    "start": "811790",
    "end": "817579"
  },
  {
    "text": "expected replies but the handshake hasn't finished yet so you're not allowed to connect yet you're not",
    "start": "817579",
    "end": "822679"
  },
  {
    "text": "allowed to send data yet so to recap test case defines the messages that you sent that you expect on Twitter this",
    "start": "822679",
    "end": "829220"
  },
  {
    "text": "should result in a successful connection okay so we now have our test generation",
    "start": "829220",
    "end": "836059"
  },
  {
    "text": "rules we have our test cases how are we going to execute the test cases well the",
    "start": "836059",
    "end": "841249"
  },
  {
    "text": "idea is actually very straightforward form straightforward it's like normal test cases you basically execute the",
    "start": "841249",
    "end": "848089"
  },
  {
    "text": "test case if during this execution you get an unexpected reply you immediately",
    "start": "848089",
    "end": "853309"
  },
  {
    "text": "know that something is wrong here you don't that you don't yet know whether it's a vulnerability but it's definitely",
    "start": "853309",
    "end": "860089"
  },
  {
    "text": "a bug because there is deviation from the standard and you're going to track these in a sense failed test cases",
    "start": "860089",
    "end": "867139"
  },
  {
    "text": "you're going to save those and after the test case has been executed you're going",
    "start": "867139",
    "end": "872149"
  },
  {
    "text": "to reset the implementation under test by sending it the authentication frame to for example the access points or the",
    "start": "872149",
    "end": "878179"
  },
  {
    "text": "client if we always got the expected replies then we're going to check if it was a successful connection or not and",
    "start": "878179",
    "end": "884870"
  },
  {
    "text": "if we get the expected result then again everything is fine and we can ignore",
    "start": "884870",
    "end": "892399"
  },
  {
    "text": "this test case because implementation reacted in the way it's supposed to so we don't need to investigate anything",
    "start": "892399",
    "end": "899029"
  },
  {
    "text": "but if we get an unexpected result here for example if the test case says that",
    "start": "899029",
    "end": "904759"
  },
  {
    "text": "we should not end up with a successful connection however we are able to send data frames then something is wrong so",
    "start": "904759",
    "end": "912980"
  },
  {
    "text": "to clarify here the way we test whether a connection is successful or not is by sending our frames to the implementation",
    "start": "912980",
    "end": "919639"
  },
  {
    "text": "on the test and if we get a reply back we know that the handshake succeeded so",
    "start": "919639",
    "end": "925519"
  },
  {
    "text": "the idea is here that we now end up with a set of failed test cases and we're",
    "start": "925519",
    "end": "930679"
  },
  {
    "text": "going to inspect this test case so the way we can do this is that if we",
    "start": "930679",
    "end": "936180"
  },
  {
    "text": "don't have access to the source code of the implementation we can run additional blackbox tests and try to determine what",
    "start": "936180",
    "end": "943230"
  },
  {
    "text": "exactly went wrong if we have the source code then we can try to inspect the source code and see what the cause of",
    "start": "943230",
    "end": "951630"
  },
  {
    "text": "the problem is and once we know what the bug is an expert can then determine",
    "start": "951630",
    "end": "956850"
  },
  {
    "text": "where this Burke is exploitable or not",
    "start": "956850",
    "end": "961370"
  },
  {
    "start": "961000",
    "end": "961000"
  },
  {
    "text": "so to come back to the test generation rules that we have used we basically",
    "start": "962270",
    "end": "968310"
  },
  {
    "text": "have two broad categories of test generation rules the first one they manipulate messages as a whole there are",
    "start": "968310",
    "end": "975810"
  },
  {
    "text": "the examples that I already mentioned that you can drop a message or that you can repeat messages and you can then see",
    "start": "975810",
    "end": "982490"
  },
  {
    "text": "how the implementation reacts to this the second set of test generation rules",
    "start": "982490",
    "end": "988470"
  },
  {
    "text": "they don't manipulate messages as a whole but they manipulate certain fields or properties of a message that is being",
    "start": "988470",
    "end": "995460"
  },
  {
    "text": "sent for example we can use an invalid replay counter we can modify the header",
    "start": "995460",
    "end": "1002120"
  },
  {
    "text": "for example we can modify the header on say that this is message 3 while it's",
    "start": "1002120",
    "end": "1007640"
  },
  {
    "text": "actually message 2 or we can send an invalid Micke so in uninvolved message integrity codes",
    "start": "1007640",
    "end": "1015050"
  },
  {
    "text": "and we can do other stuff as well we can also mess with the list of supported",
    "start": "1015050",
    "end": "1020060"
  },
  {
    "text": "cipher Suites or the selected cipher suite which is normally authenticated in the handshake so that summarizes our",
    "start": "1020060",
    "end": "1029689"
  },
  {
    "text": "testing technique on the high level and we apply this technique to 12 access",
    "start": "1029690",
    "end": "1035030"
  },
  {
    "text": "points in total and we try to get a good variation in the type of access points",
    "start": "1035030",
    "end": "1041540"
  },
  {
    "text": "that we tested so for example we have open source ones like open BSD like",
    "start": "1041540",
    "end": "1046730"
  },
  {
    "text": "Linux implementations we also have a code of home routers where the source code was leaked so there's old code of",
    "start": "1046730",
    "end": "1054530"
  },
  {
    "text": "Broadcom and mediatek and there's also the traditional closed source implementations like Microsoft Apple and",
    "start": "1054530",
    "end": "1061190"
  },
  {
    "text": "so on and we also try to test two more professional access points",
    "start": "1061190",
    "end": "1066230"
  },
  {
    "text": "namely the arrow have implemented and also an arrow net which I think was from",
    "start": "1066230",
    "end": "1072440"
  },
  {
    "text": "Cisco um the results here were very surprising in my opinion because the",
    "start": "1072440",
    "end": "1079460"
  },
  {
    "text": "Wi-Fi handshake is fairly simple I mean you have this stage where you discover a network and then you just have four",
    "start": "1079460",
    "end": "1085700"
  },
  {
    "text": "messages which are exchanged so I expected that we weren't going to find much but we discovered several",
    "start": "1085700",
    "end": "1093530"
  },
  {
    "text": "issues so that was a very nice success and I'm going to briefly discuss some of",
    "start": "1093530",
    "end": "1101900"
  },
  {
    "text": "the more interesting issues we found and these issues are also the exploitable",
    "start": "1101900",
    "end": "1108410"
  },
  {
    "text": "one so generally an every access point we found some small deviations from the",
    "start": "1108410",
    "end": "1115250"
  },
  {
    "text": "standards but some of these Divini deviations were just very benign on you",
    "start": "1115250",
    "end": "1120799"
  },
  {
    "text": "you can't even consider them really bugs but there were deviations but yet somewhere bugs but non exploitable but",
    "start": "1120799",
    "end": "1126890"
  },
  {
    "text": "we're going to focus on the most interesting ones so the first one is that the media attack and telenet",
    "start": "1126890",
    "end": "1134809"
  },
  {
    "start": "1131000",
    "end": "1131000"
  },
  {
    "text": "implementations they don't properly defend against downgrade attacks so what is still not here telling that it's it's",
    "start": "1134809",
    "end": "1141410"
  },
  {
    "text": "a Belgium ISP and they hand out their own home routers with an implementation",
    "start": "1141410",
    "end": "1146540"
  },
  {
    "text": "of the Wi-Fi access point and here we found that they could do not check the",
    "start": "1146540",
    "end": "1152270"
  },
  {
    "text": "chosen cipher that the client sends a message to so as I mentioned in the",
    "start": "1152270",
    "end": "1157790"
  },
  {
    "text": "introduction this check here is only to make the handshake more robust or to put",
    "start": "1157790",
    "end": "1163610"
  },
  {
    "text": "it differently although this check is mission missing I'm not able to come up with an actual attack which abuses this",
    "start": "1163610",
    "end": "1170950"
  },
  {
    "text": "however inspired by this result I noticed that the media tech also has a",
    "start": "1170950",
    "end": "1177020"
  },
  {
    "text": "client-side implementation of the Wi-Fi handshake and then I manually inspected",
    "start": "1177020",
    "end": "1183350"
  },
  {
    "text": "the source code and found that mediatek was also missing the client-side downgrade check so it was missing both",
    "start": "1183350",
    "end": "1191360"
  },
  {
    "text": "checks on in this case you can't really downgrade a mediatek client so the way",
    "start": "1191360",
    "end": "1197510"
  },
  {
    "text": "this works is an attacker would pull up a rogue this point it would clone the real",
    "start": "1197510",
    "end": "1202549"
  },
  {
    "text": "Network and it would only advertise support for WPA tkip which means the",
    "start": "1202549",
    "end": "1208429"
  },
  {
    "text": "client is forced to select the cipher because it's the only option normally this attack would have been",
    "start": "1208429",
    "end": "1214340"
  },
  {
    "text": "detected at this stage because an attacker cannot modify message tweet because it is authenticated",
    "start": "1214340",
    "end": "1219710"
  },
  {
    "text": "however mediatek doesn't check it so it doesn't notice that anything is going wrong so for the second attack that we",
    "start": "1219710",
    "end": "1228770"
  },
  {
    "start": "1227000",
    "end": "1227000"
  },
  {
    "text": "found it is a denial of service attack against Windows 7 so in Windows 7 and",
    "start": "1228770",
    "end": "1234020"
  },
  {
    "text": "also in Windows 8 and Windows 10 you are able to set up a hotspot so a normal in",
    "start": "1234020",
    "end": "1240740"
  },
  {
    "text": "infrastructure access point you can set that up on Windows 7 and here we found a",
    "start": "1240740",
    "end": "1248530"
  },
  {
    "text": "denial of service attack which it's very interesting because we can target a",
    "start": "1248530",
    "end": "1254240"
  },
  {
    "text": "specific client using this denial of service attack so the way this",
    "start": "1254240",
    "end": "1259490"
  },
  {
    "text": "vulnerability works is if the client sends an association request to the access points then everything is fine",
    "start": "1259490",
    "end": "1266960"
  },
  {
    "text": "because sending one Association request is normal it is used to inform the access point hey I want to connect but",
    "start": "1266960",
    "end": "1273590"
  },
  {
    "text": "if you attend send too rapidly after one another something goes wrong on the access point because normally it should",
    "start": "1273590",
    "end": "1281299"
  },
  {
    "text": "now start the four-way handshake because it received the association you request it should either deny this connection or",
    "start": "1281299",
    "end": "1287630"
  },
  {
    "text": "it should start the fourth way handshake but nothing happens and if we now some",
    "start": "1287630",
    "end": "1293720"
  },
  {
    "text": "seconds later try to reconnect so we again send an association request then we get an association rejected response",
    "start": "1293720",
    "end": "1301840"
  },
  {
    "text": "in other words we cannot connect the interesting part here is that if a different client tries to connect then",
    "start": "1301840",
    "end": "1308659"
  },
  {
    "text": "everything goes just fine it sends the association request on the access point will start the four-way handshake so",
    "start": "1308659",
    "end": "1315200"
  },
  {
    "text": "although we don't have access to the source code here what we conjecture that goes wrong here is that the access point",
    "start": "1315200",
    "end": "1321890"
  },
  {
    "text": "is keeping state associated two clients one here on this state somehow gets",
    "start": "1321890",
    "end": "1327409"
  },
  {
    "text": "corrupted because we send to Association requests right after one another and",
    "start": "1327409",
    "end": "1333120"
  },
  {
    "text": "then this state associated to the client is corrupted it can no longer connect",
    "start": "1333120",
    "end": "1338480"
  },
  {
    "text": "and of course an attacker can abuse this he can spoof the MAC address of the",
    "start": "1338480",
    "end": "1344640"
  },
  {
    "text": "victim and then send to Association requests in name of the victim so the proof-of-concept code of this",
    "start": "1344640",
    "end": "1351870"
  },
  {
    "text": "attack is online I also have a recorded demonstration of this attack if there is",
    "start": "1351870",
    "end": "1357600"
  },
  {
    "text": "time at the end of the talk I will show it but to make sure we don't run out of time I'm going to show it at the end of",
    "start": "1357600",
    "end": "1364020"
  },
  {
    "text": "the presentation so if you follow this get up link you will see the proof of concept code of several other attacks",
    "start": "1364020",
    "end": "1371220"
  },
  {
    "text": "including some attacks against open BSD implementation as well okay so let's go",
    "start": "1371220",
    "end": "1378030"
  },
  {
    "text": "on to the next attack the next attack is a downgrade attack against Broadcom and",
    "start": "1378030",
    "end": "1386780"
  },
  {
    "start": "1379000",
    "end": "1379000"
  },
  {
    "text": "the vulnerability that we exploit here is that the implementation of Broadcom",
    "start": "1386780",
    "end": "1392220"
  },
  {
    "text": "cannot differentiate basically message two and four of the handshake so what do",
    "start": "1392220",
    "end": "1398730"
  },
  {
    "text": "I mean with this well if the access point is expecting message for but it's actually receiving message two then we",
    "start": "1398730",
    "end": "1405720"
  },
  {
    "text": "will simply treat message to as if it where message for and it will successfully complete the handshake now",
    "start": "1405720",
    "end": "1412740"
  },
  {
    "text": "I'm not going to go into detail about how this attack works you need a few tricks in order to carry it out but the",
    "start": "1412740",
    "end": "1421500"
  },
  {
    "text": "core message here is that we can abuse this to downgrade the access point into using WPA tkip so we cannot we cannot",
    "start": "1421500",
    "end": "1430140"
  },
  {
    "text": "down great the client we can only down rate the access point into using a weaker cipher and this is of course bad",
    "start": "1430140",
    "end": "1438960"
  },
  {
    "text": "because the access point will then start transmitting data frames encrypted using WPA TCAP which uses rc4 on an it's not",
    "start": "1438960",
    "end": "1446730"
  },
  {
    "text": "that secure now the reason why I find as a tech very",
    "start": "1446730",
    "end": "1452280"
  },
  {
    "text": "interesting is because if you read the Wi-Fi standard the official specification it says that message for",
    "start": "1452280",
    "end": "1458690"
  },
  {
    "text": "serves no real security purposes it says message for is only there to",
    "start": "1458690",
    "end": "1464940"
  },
  {
    "text": "ensure reliability in other words if you would drop message for you would still be fine however our tech clearly shows that if",
    "start": "1464940",
    "end": "1472500"
  },
  {
    "text": "you don't handle message for properly you can downgrade the access point so we are essentially not only that we found",
    "start": "1472500",
    "end": "1479430"
  },
  {
    "text": "an implementation flaw this also uncovered an incorrect claim in the Wi-Fi specification so now to the more",
    "start": "1479430",
    "end": "1489990"
  },
  {
    "text": "interesting parts of our examples we're going we have also tested the OpenBSD",
    "start": "1489990",
    "end": "1497150"
  },
  {
    "text": "implementation of the Wi-Fi handshake and here we found several issues as well",
    "start": "1497150",
    "end": "1503270"
  },
  {
    "text": "found in the first issue we are able to perform a denial of service attack against the access point and this is",
    "start": "1503270",
    "end": "1511230"
  },
  {
    "text": "based on two vulnerabilities and the implementation of open BSD the first",
    "start": "1511230",
    "end": "1517350"
  },
  {
    "text": "phone gulnur ability is that open BSD never stops the tkip countermeasures now",
    "start": "1517350",
    "end": "1524220"
  },
  {
    "text": "what are these two countermeasures so like I mentioned WPA tkip is not that",
    "start": "1524220",
    "end": "1530520"
  },
  {
    "text": "secure and in particular if you can obtain a decrypt at WPA tick packet you",
    "start": "1530520",
    "end": "1537030"
  },
  {
    "text": "could derive the micki onto the designers of WPA I realize this they",
    "start": "1537030",
    "end": "1542970"
  },
  {
    "text": "realized hey the protocol that we have here is not that secure on what they",
    "start": "1542970",
    "end": "1548550"
  },
  {
    "text": "decided to do is they decided to detect active attacks against this protocol and",
    "start": "1548550",
    "end": "1553740"
  },
  {
    "text": "if they noticed that an active attack is going on it will the access point will",
    "start": "1553740",
    "end": "1559500"
  },
  {
    "text": "stop all traffic for one minute so this is of course very interesting behavior",
    "start": "1559500",
    "end": "1564840"
  },
  {
    "text": "because the official specification says that if there's something strange going around going on",
    "start": "1564840",
    "end": "1570420"
  },
  {
    "text": "you should halt all traffic for one minute on another work we have shown that this connection can actually be",
    "start": "1570420",
    "end": "1577290"
  },
  {
    "text": "triggers by a third party attacker so this on on its",
    "start": "1577290",
    "end": "1583760"
  },
  {
    "text": "own it's already basically a well a flaw in the standard but for OpenBSD this",
    "start": "1583760",
    "end": "1589970"
  },
  {
    "text": "flaw is much worse because it doesn't just stop the traffic for one minute it stops the traffic forever so all that we",
    "start": "1589970",
    "end": "1599900"
  },
  {
    "text": "need to do now is we need to find a way to trigger these make failures so these",
    "start": "1599900",
    "end": "1605330"
  },
  {
    "text": "make failures happen when for example",
    "start": "1605330",
    "end": "1610700"
  },
  {
    "text": "the client receives a WP a ticket message where the message integrity code is invalid and if that happens the",
    "start": "1610700",
    "end": "1618080"
  },
  {
    "text": "client will send a so called make failure report towards the access point to inform the access point hey I got a",
    "start": "1618080",
    "end": "1624170"
  },
  {
    "text": "strange corrupted message here maybe I'm under attack and if the access point receives two of these messages",
    "start": "1624170",
    "end": "1629950"
  },
  {
    "text": "then it must stop all traffic on encase for OpenBSD I will stop it forever um",
    "start": "1629950",
    "end": "1636730"
  },
  {
    "text": "here the second for nobility comes into play namely the implementation of open",
    "start": "1636730",
    "end": "1642860"
  },
  {
    "text": "BSD accepts these make failure reports even before the 4 Way handshake has been",
    "start": "1642860",
    "end": "1648860"
  },
  {
    "text": "executed in particular even before these fresh session keys have been negotiated",
    "start": "1648860",
    "end": "1654650"
  },
  {
    "text": "and we can combine these two vulnerabilities and an unauthenticated terminal denial of service attack so how",
    "start": "1654650",
    "end": "1662000"
  },
  {
    "text": "does that attack work well we have our first stage of the tech where everything",
    "start": "1662000",
    "end": "1667010"
  },
  {
    "text": "happens normally so we have our attacker here which acts as a client we have the access point of open BSD the client",
    "start": "1667010",
    "end": "1675290"
  },
  {
    "text": "simply search for the network it sends an association request saying hey I want to connect to the network and then the",
    "start": "1675290",
    "end": "1681830"
  },
  {
    "text": "access point will send message one of the four way handshake but normally the",
    "start": "1681830",
    "end": "1688610"
  },
  {
    "text": "client would now send message to of the handshake however when we were going to execute our attack we're going to send",
    "start": "1688610",
    "end": "1694190"
  },
  {
    "text": "this make failure report on this mick failure report is also authenticated",
    "start": "1694190",
    "end": "1700370"
  },
  {
    "text": "using a Mac value however the key that we're going to use here is just an",
    "start": "1700370",
    "end": "1705380"
  },
  {
    "text": "all-zero key so an array of all zeros on why are we going to use that well",
    "start": "1705380",
    "end": "1710480"
  },
  {
    "text": "because the access point generated the session key yet because it hasn't received the real message - of",
    "start": "1710480",
    "end": "1716570"
  },
  {
    "text": "the handshake meaning currently at session key is memory and memory is just an array of all zeros so of course we",
    "start": "1716570",
    "end": "1723919"
  },
  {
    "text": "can then forge this message it will be accepted by the access points on the",
    "start": "1723919",
    "end": "1730909"
  },
  {
    "text": "freedom send that message again the access point will have received to make failure reports and it will start the",
    "start": "1730909",
    "end": "1737080"
  },
  {
    "text": "countermeasures and in case of OpenBSD these countermeasures last forever the",
    "start": "1737080",
    "end": "1744080"
  },
  {
    "text": "only way to stop it is to reboot the access point so to be clear this has already been patched by OpenBSD I'm now",
    "start": "1744080",
    "end": "1751909"
  },
  {
    "text": "going to try to give a demo of this attack so let's hope you can first get",
    "start": "1751909",
    "end": "1758270"
  },
  {
    "text": "the screen online so we had some trouble",
    "start": "1758270",
    "end": "1765710"
  },
  {
    "text": "with this I hope they can now show my screen",
    "start": "1765710",
    "end": "1771250"
  },
  {
    "text": "let's give them a minute",
    "start": "1783809",
    "end": "1787340"
  },
  {
    "text": "okay does this not seem to work so I will try again at the end of the",
    "start": "1801560",
    "end": "1807720"
  },
  {
    "text": "presentation and try to use some different settings for now let's just continue with presentation okay so you",
    "start": "1807720",
    "end": "1822210"
  },
  {
    "text": "can download the proof concept code online and I will also put a video of",
    "start": "1822210",
    "end": "1827520"
  },
  {
    "text": "this online as well okay so let's continue with the second attack on this",
    "start": "1827520",
    "end": "1833250"
  },
  {
    "text": "attack in my opinion is really the most interesting one namely we found a man-in-the-middle attack against an open",
    "start": "1833250",
    "end": "1840150"
  },
  {
    "start": "1838000",
    "end": "1838000"
  },
  {
    "text": "BSD client so after observing this issue in the open BSD access point we",
    "start": "1840150",
    "end": "1847620"
  },
  {
    "text": "inspected the source code and we found that the client has a much worse issue",
    "start": "1847620",
    "end": "1853490"
  },
  {
    "text": "namely it's simply missing this complete state machine of the protocol so what do",
    "start": "1853490",
    "end": "1858810"
  },
  {
    "text": "I mean with this what I mean is that the client will process any message you send",
    "start": "1858810",
    "end": "1865110"
  },
  {
    "text": "to it even though it's not even though it shouldn't be accepting this message so for example if you just send any",
    "start": "1865110",
    "end": "1872490"
  },
  {
    "text": "message in the handshake that will handle it now this is very surprising because the code of open BSD is actually",
    "start": "1872490",
    "end": "1880260"
  },
  {
    "text": "of high quality it doesn't have any buffer overflows it doesn't have any",
    "start": "1880260",
    "end": "1885360"
  },
  {
    "text": "double freeze a listen the Wi-Fi code to that I looked it's well written however",
    "start": "1885360",
    "end": "1890370"
  },
  {
    "text": "the state machine is missing so even though your code is very good this still",
    "start": "1890370",
    "end": "1895560"
  },
  {
    "text": "voids and throws away all security that the Wi-Fi handshake is supposed to provide so how does this man in the",
    "start": "1895560",
    "end": "1902340"
  },
  {
    "text": "middle attack work we again have our client here and now we are targeting the",
    "start": "1902340",
    "end": "1909090"
  },
  {
    "text": "client so it's the OpenBSD client that we are targeting and we are setting up a rogue access point the idea here is that",
    "start": "1909090",
    "end": "1918150"
  },
  {
    "text": "this rogue access point just advertises it basically clones the real network that we want to connect we want to",
    "start": "1918150",
    "end": "1924630"
  },
  {
    "text": "attack the client will then connect to our rogue access points it will send an association request informing our rogue",
    "start": "1924630",
    "end": "1931050"
  },
  {
    "text": "access point hey I want to connect cyma clients on normally a real access point would now",
    "start": "1931050",
    "end": "1936990"
  },
  {
    "text": "start the four-way handshake but what we're going to do is we're going to send message one of the group key handshake",
    "start": "1936990",
    "end": "1943790"
  },
  {
    "text": "so what's the group key handshake the group key handshake is in a sense similar to the four-way handshake except",
    "start": "1943790",
    "end": "1950160"
  },
  {
    "text": "that it's used to transport the group key which is used to encrypt broadcast on multicast traffic so the interesting",
    "start": "1950160",
    "end": "1956640"
  },
  {
    "text": "part here is that we have a very similar vulnerability to the previous case where",
    "start": "1956640",
    "end": "1961890"
  },
  {
    "text": "because the client hasn't generated the session key yet it will use again an",
    "start": "1961890",
    "end": "1967980"
  },
  {
    "text": "all-zero key to verify the authenticity of this frame so as an attacker we can easily Forge this group message one",
    "start": "1967980",
    "end": "1974190"
  },
  {
    "text": "frame on the open bl2 OpenBSD client will accept it once it accepted this",
    "start": "1974190",
    "end": "1980760"
  },
  {
    "text": "message it will reply using message two of the group key and an interesting side",
    "start": "1980760",
    "end": "1986760"
  },
  {
    "text": "effect of sending group message one is that it will also open the data port essentially so at this point the client",
    "start": "1986760",
    "end": "1993210"
  },
  {
    "text": "will accept normal data traffic and it will also send normal data traffic now",
    "start": "1993210",
    "end": "2000230"
  },
  {
    "text": "it's also quite bad about this situation is that not only are we now able to man",
    "start": "2000230",
    "end": "2009230"
  },
  {
    "text": "in the middle of this Wi-Fi client because just just to recap normally the",
    "start": "2009230",
    "end": "2014270"
  },
  {
    "text": "client also verifies the authenticity of the access point but in this case it",
    "start": "2014270",
    "end": "2019550"
  },
  {
    "text": "doesn't the attacker doesn't need to know the password yet still the client will successfully connect with what goes",
    "start": "2019550",
    "end": "2025130"
  },
  {
    "text": "wrong here not only does it accept data frames it never installed the key meaning it accepts plaintext data frames",
    "start": "2025130",
    "end": "2031100"
  },
  {
    "text": "and it also sends plaintext data frames",
    "start": "2031100",
    "end": "2035620"
  },
  {
    "text": "so at this point yeah your security of the Wi-Fi is broken again there is a",
    "start": "2036520",
    "end": "2044810"
  },
  {
    "text": "demo of this online and I hope that at the end of the presentation maybe the demos will work and then I can try to do",
    "start": "2044810",
    "end": "2052100"
  },
  {
    "text": "a live demo otherwise unfortunately that won't be the case so as I mentioned I",
    "start": "2052100",
    "end": "2058550"
  },
  {
    "text": "only discussed the most interesting vulnerabilities that I found we also found some other ones and you can see",
    "start": "2058550",
    "end": "2065120"
  },
  {
    "text": "them in our whitehead paper and also in the academic that's preceded this research so we",
    "start": "2065120",
    "end": "2072080"
  },
  {
    "text": "found things like basically benign irregularities where an implementation deviates from the specification but no",
    "start": "2072080",
    "end": "2079250"
  },
  {
    "text": "this does not result in an attack but you can use this to fingerprint an implementation of course you can",
    "start": "2079250",
    "end": "2084260"
  },
  {
    "text": "determine is this a Cisco access point is this a Microsoft Access Point or whatever",
    "start": "2084260",
    "end": "2090040"
  },
  {
    "text": "we also found other denial of service attacks so those whom to be quite common",
    "start": "2090040",
    "end": "2095600"
  },
  {
    "text": "for example a permanent denial of service attack against Broadcom but you do need to know the password of the",
    "start": "2095600",
    "end": "2104930"
  },
  {
    "text": "network to carry out that dinero service attack so you need to have an insider threat and against Windows 10 on arrow -",
    "start": "2104930",
    "end": "2112310"
  },
  {
    "text": "we also found another insider a denial of service attack so these attacks are for example problematic if you have a",
    "start": "2112310",
    "end": "2118790"
  },
  {
    "text": "network like interim or a network for example here like blackheads where everyone knows the password you could",
    "start": "2118790",
    "end": "2125450"
  },
  {
    "text": "take that network down until also some other issues that we found that are a",
    "start": "2125450",
    "end": "2131630"
  },
  {
    "text": "bit less interesting so our approach is still quite limited in a sense because",
    "start": "2131630",
    "end": "2140869"
  },
  {
    "text": "our tactic testing technique is quite basic in other words there are a few improvements that still can be made to",
    "start": "2140869",
    "end": "2147530"
  },
  {
    "text": "our work for example we don't know how much code we actually tested I mean we",
    "start": "2147530",
    "end": "2152900"
  },
  {
    "text": "are sending these messages we are sending modified messages but we don't know how much code actually is being",
    "start": "2152900",
    "end": "2158090"
  },
  {
    "text": "covered additionally we're only sending well-formed messages on what I mean with",
    "start": "2158090",
    "end": "2163550"
  },
  {
    "text": "that is that messages are for example never truncated they always have the",
    "start": "2163550",
    "end": "2168950"
  },
  {
    "text": "fields they should have but those fields simply have n values values another",
    "start": "2168950",
    "end": "2175250"
  },
  {
    "text": "thing is that these test generation rules were applied independently and we mainly tested access points we also",
    "start": "2175250",
    "end": "2181760"
  },
  {
    "text": "tested some clients if we thought that they were interesting to test as well",
    "start": "2181760",
    "end": "2187100"
  },
  {
    "text": "for example we found it back in the access point of limitation then we saw all this product also has a client",
    "start": "2187100",
    "end": "2194030"
  },
  {
    "text": "implementation maybe it has a similar bug but we mainly tested access points",
    "start": "2194030",
    "end": "2199270"
  },
  {
    "text": "now the reason why I think that this is a promising technique though is because the current method is a black",
    "start": "2199270",
    "end": "2206420"
  },
  {
    "text": "box testing methodology so you don't need access to the source code so you can test any implementation that you",
    "start": "2206420",
    "end": "2212840"
  },
  {
    "text": "want and another thing that is that this work shows is that searching for logical",
    "start": "2212840",
    "end": "2219050"
  },
  {
    "text": "vulnerabilities is quite important because like I mentioned the Wi-Fi handshake is fairly simple it still we",
    "start": "2219050",
    "end": "2225590"
  },
  {
    "text": "discovered quite some issues and that was surprising so that leads me to the conclusion of this talk this Wi-Fi",
    "start": "2225590",
    "end": "2232850"
  },
  {
    "text": "implementations are less secure than expected and I will believe that if we",
    "start": "2232850",
    "end": "2237950"
  },
  {
    "text": "come up with more advanced testing techniques we will uncover more issues",
    "start": "2237950",
    "end": "2243100"
  },
  {
    "text": "not only in the Wi-Fi protocol but also in other protocols for example in related work similar methods have been",
    "start": "2243100",
    "end": "2250340"
  },
  {
    "text": "used against TLS and for example open SSL and all the other libraries and they all found perks which sometimes leads to",
    "start": "2250340",
    "end": "2258470"
  },
  {
    "text": "exploitable vulnerabilities so that's",
    "start": "2258470",
    "end": "2264230"
  },
  {
    "text": "that point finally I have a short announcement which is basically about",
    "start": "2264230",
    "end": "2270080"
  },
  {
    "text": "follow-up work of this work if you have a product which uses a client-side",
    "start": "2270080",
    "end": "2276109"
  },
  {
    "text": "implementation of WPA 1 or 2 or another Wi-Fi handshake you should talk to me",
    "start": "2276109",
    "end": "2282230"
  },
  {
    "text": "because there's a good chance that it contains some flaw so I'm going to try",
    "start": "2282230",
    "end": "2288859"
  },
  {
    "text": "to do a demo again maybe it works now let me see if I can change the screen",
    "start": "2288859",
    "end": "2295970"
  },
  {
    "text": "resolution if that helps",
    "start": "2295970",
    "end": "2299710"
  },
  {
    "text": "there we go excellent so I'm going to show the men on the middle attack",
    "start": "2305300",
    "end": "2312300"
  },
  {
    "text": "against OpenBSD because that's the most interesting one so let me first check that my wireless interfaces are still",
    "start": "2312300",
    "end": "2319410"
  },
  {
    "text": "working that seems good let's go to the other VM",
    "start": "2319410",
    "end": "2325640"
  },
  {
    "text": "okay okay so let's get started we have our",
    "start": "2334230",
    "end": "2342780"
  },
  {
    "text": "attacker here which is represented by this Cali virtual image and what we're",
    "start": "2342780",
    "end": "2348000"
  },
  {
    "text": "going to do is we're going to start up the rogue access point so you can see the configuration of this access point",
    "start": "2348000",
    "end": "2354780"
  },
  {
    "text": "here basically the SSID is demo network and by the way if you don't want your",
    "start": "2354780",
    "end": "2360450"
  },
  {
    "text": "MAC address to accidentally show up here in some of the debug output disable your Wi-Fi so just to be clear there might be",
    "start": "2360450",
    "end": "2368190"
  },
  {
    "text": "some information otherwise on this presentation so disable it now anyway",
    "start": "2368190",
    "end": "2373560"
  },
  {
    "text": "the network that we are going to clone is called demo network and as you can see the attacker does not know the",
    "start": "2373560",
    "end": "2378690"
  },
  {
    "text": "password of this network so let's start this access point and I am currently",
    "start": "2378690",
    "end": "2385020"
  },
  {
    "text": "using a modified version of the Linux access points to carry out my attacks",
    "start": "2385020",
    "end": "2391040"
  },
  {
    "text": "okay so that access point has started let's now try to connect using here the",
    "start": "2392600",
    "end": "2398280"
  },
  {
    "text": "OpenBSD client so this is running an unpatched version of open BSD and we are",
    "start": "2398280",
    "end": "2406410"
  },
  {
    "text": "going to connect to the SSID demo network and the client is going to use",
    "start": "2406410",
    "end": "2414060"
  },
  {
    "text": "the passwords such secret wow and normally the client should not",
    "start": "2414060",
    "end": "2421790"
  },
  {
    "text": "successfully connect to the access point because these passwords passwords are different but let's see what works we",
    "start": "2421790",
    "end": "2432060"
  },
  {
    "text": "don't need that so the client is now",
    "start": "2432060",
    "end": "2437609"
  },
  {
    "text": "normally searching for network it's sending prop requests and it has",
    "start": "2437609",
    "end": "2443369"
  },
  {
    "text": "connected so you can see here our open BSD client has sent the association",
    "start": "2443369",
    "end": "2448380"
  },
  {
    "text": "request and normally it should now accept message one on the four way handshake however it receives message",
    "start": "2448380",
    "end": "2455310"
  },
  {
    "text": "two of the group key handshake and it will happily accept it on send message to of the group key handshake so first",
    "start": "2455310",
    "end": "2461340"
  },
  {
    "text": "receives message one on a replies using message to on here we can also see this at the attacker screen some other people",
    "start": "2461340",
    "end": "2470640"
  },
  {
    "text": "are trying to connect maybe I should show some MAC addresses anyway we can see here that the client",
    "start": "2470640",
    "end": "2477320"
  },
  {
    "text": "is trying to connect the access point is skipping the four-way handshake it's not installing the pair way pairwise keys",
    "start": "2477320",
    "end": "2483890"
  },
  {
    "text": "and then it's since then it receives message two of the group key handshake",
    "start": "2483890",
    "end": "2490130"
  },
  {
    "text": "meaning that the attack worked so by the way whoever is trying to connect it won't work because this is a modified",
    "start": "2490130",
    "end": "2496250"
  },
  {
    "text": "access point so let's confirm that we are able to now intercept traffic right",
    "start": "2496250",
    "end": "2503000"
  },
  {
    "text": "so let's start Wireshark here let's",
    "start": "2503000",
    "end": "2514970"
  },
  {
    "text": "actually enable monitor mode so we don't just see Internet traffic but we see the full Wi-Fi traffic okay",
    "start": "2514970",
    "end": "2535270"
  },
  {
    "text": "let's filter for traffic from our device let's now try to go to a website so",
    "start": "2537180",
    "end": "2548910"
  },
  {
    "text": "let's go for example to CNN CNN still uses an unencrypted website even today this is a cached version from online so",
    "start": "2548910",
    "end": "2556740"
  },
  {
    "text": "we can see the clients as connected now if you then go to the attacker we can",
    "start": "2556740",
    "end": "2562829"
  },
  {
    "text": "see here an HTTP GET request and this is indeed the one it is - cnn.com and we",
    "start": "2562829",
    "end": "2568710"
  },
  {
    "text": "can for example see the cookies that are transmitted meaning our attack indeed was successful so like I mentioned",
    "start": "2568710",
    "end": "2576799"
  },
  {
    "text": "OpenBSD hasn't installed hasn't installed a session key yet meaning it",
    "start": "2576799",
    "end": "2584339"
  },
  {
    "text": "sends unencrypted Wi-Fi traffic and we can confirm that here this frame is not",
    "start": "2584339",
    "end": "2589529"
  },
  {
    "text": "using any encryption at all so even you guys could see this request even if you are not an attacker you can still see",
    "start": "2589529",
    "end": "2595920"
  },
  {
    "text": "all the plaintext data on area we can confirm the protected flag is not set so",
    "start": "2595920",
    "end": "2601859"
  },
  {
    "text": "that concludes the demo",
    "start": "2601859",
    "end": "2604910"
  },
  {
    "text": "[Applause]",
    "start": "2608540",
    "end": "2616610"
  }
]