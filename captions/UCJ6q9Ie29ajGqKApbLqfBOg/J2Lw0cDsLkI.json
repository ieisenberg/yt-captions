[
  {
    "start": "0",
    "end": "9000"
  },
  {
    "text": "all right cool hi everybody uh this is uh taking a bit correlation with you and my name is Rob King and uh that is the",
    "start": "199",
    "end": "6919"
  },
  {
    "text": "last time I'm going to just read a slide to you so uh I am required by Nevada law",
    "start": "6919",
    "end": "12960"
  },
  {
    "start": "9000",
    "end": "45000"
  },
  {
    "text": "to tell you who I am so I'm Rob King uh there's my email address uh and yes it",
    "start": "12960",
    "end": "18000"
  },
  {
    "text": "is actually J not R uh it's a middle name thing um I actually grew up in in",
    "start": "18000",
    "end": "24000"
  },
  {
    "text": "smalltown Texas and I was like 27 before I realized that my nickname could have been Jim Bob so yay anyway but that's my",
    "start": "24000",
    "end": "30840"
  },
  {
    "text": "email address I'm going to repeat it at the end of the talk so that if you decide it's actually interesting and you want to email me you can do so uh the",
    "start": "30840",
    "end": "37120"
  },
  {
    "text": "rest of the stuff is not particularly interesting except that I kind of have done this sort of stuff before so you",
    "start": "37120",
    "end": "42399"
  },
  {
    "text": "know yay the Talk's the interesting part so uh I always wanted to do a",
    "start": "42399",
    "end": "47920"
  },
  {
    "start": "45000",
    "end": "82000"
  },
  {
    "text": "professional presentation that started with Webster's Dictionary defines but there's no actual definition of event correlation in Webster diary so what do",
    "start": "47920",
    "end": "55640"
  },
  {
    "text": "I mean when I talk about event correlation right well what are events events are all the little things that",
    "start": "55640",
    "end": "62559"
  },
  {
    "text": "you might care about right going on in your network a web request a login um",
    "start": "62559",
    "end": "69759"
  },
  {
    "text": "anything like that anything can be modeled as an event right an event correlation is extracting information",
    "start": "69759",
    "end": "76920"
  },
  {
    "text": "from that aggregate set of events from that stream of events right and that's what we're that's what we're going to be",
    "start": "76920",
    "end": "82320"
  },
  {
    "start": "82000",
    "end": "112000"
  },
  {
    "text": "talking about during this talk um and the goal of this presentation specifically is to",
    "start": "82320",
    "end": "87680"
  },
  {
    "text": "introduce a new open source tool called uh Giles right and Giles is a compiler",
    "start": "87680",
    "end": "94600"
  },
  {
    "text": "that makes it easy to build event correlation engines Giles itself is not event correlation engine it helps you build event correlation engines it's a",
    "start": "94600",
    "end": "101600"
  },
  {
    "text": "teach someone to fish versus giving them a fish kind of metaphor I don't know um",
    "start": "101600",
    "end": "107520"
  },
  {
    "text": "so it makes it easy to build the kind of event correlations that we're uh engines that we're talking about and it makes it",
    "start": "107520",
    "end": "112840"
  },
  {
    "start": "112000",
    "end": "158000"
  },
  {
    "text": "easy to find patterns comp uh defined by complex predicates and what do I mean when I say complex I don't mean",
    "start": "112840",
    "end": "119719"
  },
  {
    "text": "difficult I mean multiple relationships right not simple not just a equals B",
    "start": "119719",
    "end": "125479"
  },
  {
    "text": "right complex predicates enlarge constantly changing data sets and that's",
    "start": "125479",
    "end": "131440"
  },
  {
    "text": "also something that is uh maybe important to note constantly changing data sets you know you often have in",
    "start": "131440",
    "end": "137480"
  },
  {
    "text": "this sort of uh in these sorts of systems you might be able to deal with large data sets but only through a very narrow window right so the last five",
    "start": "137480",
    "end": "144920"
  },
  {
    "text": "logins the last 10 minutes something like that right and I want to talk about engines that are holistic they deal with",
    "start": "144920",
    "end": "151959"
  },
  {
    "text": "your entire data set even as changes trickle in or trickle out or you know however they come in and",
    "start": "151959",
    "end": "158519"
  },
  {
    "start": "158000",
    "end": "181000"
  },
  {
    "text": "out um and then and this is this is the the gimmick of",
    "start": "158519",
    "end": "163560"
  },
  {
    "text": "Giles it makes it very easy to integrate this sort of stuff into your existing",
    "start": "163560",
    "end": "169120"
  },
  {
    "text": "environment right and I don't just mean your existing software I mean your programmers already know how to use Giles engines right and it's it's a",
    "start": "169120",
    "end": "176519"
  },
  {
    "text": "little gimmicky it's not that gimmicky if you actually read the blurb for the talk but it's it's pretty cool so um",
    "start": "176519",
    "end": "182360"
  },
  {
    "text": "before I talk though about how Giles actually works I want to talk a little bit about how it came to be because that",
    "start": "182360",
    "end": "189120"
  },
  {
    "text": "uh that informs the the design decisions why we designed it the way we did right",
    "start": "189120",
    "end": "194319"
  },
  {
    "text": "so back in 200 10 might have been 2011 I don't know",
    "start": "194319",
    "end": "199680"
  },
  {
    "text": "a long time ago uh Coral logic was um contracted by DARPA the defense Advanced",
    "start": "199680",
    "end": "206680"
  },
  {
    "start": "205000",
    "end": "321000"
  },
  {
    "text": "research project agency they invented the Internet along with Al Gore um that joke never gets old timely",
    "start": "206680",
    "end": "213439"
  },
  {
    "text": "timely joke uh was contracted by DARPA as part of a multi-year contract uh as",
    "start": "213439",
    "end": "219280"
  },
  {
    "text": "part of the Cyber Insider program Cinder um to develop a product that protected",
    "start": "219280",
    "end": "226120"
  },
  {
    "text": "the uh the software development life cycle right specifically it was monitoring for um uh malicious insiders",
    "start": "226120",
    "end": "234239"
  },
  {
    "text": "in your source code management system so not looking for like Shell Code in your source code or anything like that but looking instead for um nefarious",
    "start": "234239",
    "end": "241439"
  },
  {
    "text": "behaviors in your source code management system right and that product was called dirt which stands for detecting inside",
    "start": "241439",
    "end": "247840"
  },
  {
    "text": "or repository tampering and it's fascinating product it's completely awesome but it's it's not the subject to this talk yet sort of um but dir you",
    "start": "247840",
    "end": "256000"
  },
  {
    "text": "know so dirt was delivered as an appliance it was it was an actual physical thing that went there because people didn't want their source code you",
    "start": "256000",
    "end": "262479"
  },
  {
    "text": "know leaving their their Network which which makes sense and dirt modeled the",
    "start": "262479",
    "end": "268479"
  },
  {
    "text": "source code repositories as sequences of change events right so it wasn't just looking at the source code repository it",
    "start": "268479",
    "end": "275240"
  },
  {
    "text": "was actually saying okay now this changed now this changed change change change change change right so we needed",
    "start": "275240",
    "end": "280800"
  },
  {
    "text": "an event correlation engine right but because it was an appliance and because it was not going to be under our Direct Control you know it had some pretty",
    "start": "280800",
    "end": "287680"
  },
  {
    "text": "strict uh requirements from the engineering standpoint it needed to be able to run unattended needed to be able",
    "start": "287680",
    "end": "294360"
  },
  {
    "text": "to uh handle large amounts of data right reliably and it needed to uh integrate",
    "start": "294360",
    "end": "301160"
  },
  {
    "text": "well you know it needed to to impose very few additional requirements because it was just one piece of a of a bigger",
    "start": "301160",
    "end": "307440"
  },
  {
    "text": "puzzle right and so that ended up being a tool called Giles and Giles is now",
    "start": "307440",
    "end": "313880"
  },
  {
    "text": "open source and you know you can download it and it's awesome um so",
    "start": "313880",
    "end": "320000"
  },
  {
    "text": "that's what we're going to talk about is Giles so how does Giles see the world right Gil sees the world um as a",
    "start": "320000",
    "end": "328120"
  },
  {
    "start": "321000",
    "end": "390000"
  },
  {
    "text": "collection of facts right and I realized that we're talking about events and events and facts are",
    "start": "328120",
    "end": "333240"
  },
  {
    "text": "interchangeable you can use the terms interchangeably we call them facts because Giles can be used to build",
    "start": "333240",
    "end": "338280"
  },
  {
    "text": "things that aren't event correlation engines right and can also describe things that aren't events you know but a",
    "start": "338280",
    "end": "343919"
  },
  {
    "text": "fact is just a statement that's true in our problem domain whatever our problem domain is right so like you know it",
    "start": "343919",
    "end": "349919"
  },
  {
    "text": "could be a statement about a person or an object you know Suzanne is an astronaut could be an event something",
    "start": "349919",
    "end": "355000"
  },
  {
    "text": "that happened like train I arrived at Platform 9 and 3/4 which you know I'm that big a dork um come on that's",
    "start": "355000",
    "end": "362120"
  },
  {
    "text": "awesome train I cuz it's okay whatever uh you know it can also State just things about Notions like the user",
    "start": "362120",
    "end": "369520"
  },
  {
    "text": "preferred languages you know Canadian French which you know isn't everybody's or more Salient to the kind",
    "start": "369520",
    "end": "376240"
  },
  {
    "text": "of thing that we deal with events on your network right user John do logged into terminal 33 at 510 right that's a",
    "start": "376240",
    "end": "384080"
  },
  {
    "text": "that's a fact that's something that we assert to be true and then just repeating myself that's we call them",
    "start": "384080",
    "end": "389759"
  },
  {
    "text": "instead of events so all of the facts that we're dealing with right at one time is called",
    "start": "389759",
    "end": "397120"
  },
  {
    "start": "390000",
    "end": "430000"
  },
  {
    "text": "our working memory right and so here's a here's a collection of facts um that we",
    "start": "397120",
    "end": "402720"
  },
  {
    "text": "got from a file called VAR log logins which probably doesn't really exist but you know whatever and that's that's",
    "start": "402720",
    "end": "408840"
  },
  {
    "text": "important to know facts can come from anywhere we don't care where they come from we just care that they are what they are so here's this collection of",
    "start": "408840",
    "end": "415759"
  },
  {
    "text": "facts it's just kind of a bag you know we can extract some information out of it you know we we can see that there's a failed login we can see that there's you",
    "start": "415759",
    "end": "421800"
  },
  {
    "text": "know usernames that sort of thing um but what we really want to do is is get as much information as possible out of",
    "start": "421800",
    "end": "427919"
  },
  {
    "text": "these facts right like that's the point of event correlation so what we can do is we impose structure on facts right um",
    "start": "427919",
    "end": "438160"
  },
  {
    "start": "430000",
    "end": "482000"
  },
  {
    "text": "so we immediately you know this immediately becomes much more clear what we're talking about right and uh the",
    "start": "438160",
    "end": "443560"
  },
  {
    "text": "preferred nomenclature dude for for that is Fields those are the fields of facts",
    "start": "443560",
    "end": "448720"
  },
  {
    "text": "right um and so you can immediately see that this is much more clear you have the status you have the username login time",
    "start": "448720",
    "end": "454479"
  },
  {
    "text": "terminal all that good stuff right and and then Giles even goes one step further and actually imposes type",
    "start": "454479",
    "end": "460199"
  },
  {
    "text": "information on those fields right so you're not just dealing with login successful and it could be whatever you",
    "start": "460199",
    "end": "465479"
  },
  {
    "text": "know that it's going to be a Boolean right um and the the type system is it's fairly simple you know it's Boolean",
    "start": "465479",
    "end": "471280"
  },
  {
    "text": "string integer real you know nothing nothing crazy nothing complex um and we'll get into we'll get into actual",
    "start": "471280",
    "end": "477080"
  },
  {
    "text": "practical gals here in a second I just want to make sure we're all the same page about the problem we're trying to solve um but you know facts are just",
    "start": "477080",
    "end": "485400"
  },
  {
    "start": "482000",
    "end": "530000"
  },
  {
    "text": "data they're just information right the whole point of it is that we want to get knowledge we want to extract knowledge",
    "start": "485400",
    "end": "491479"
  },
  {
    "text": "out of those facts you know and and how can we do that well we do that by looking at patterns of facts by asking",
    "start": "491479",
    "end": "498479"
  },
  {
    "text": "questions by seeing what sets of facts match a given pattern right and you know",
    "start": "498479",
    "end": "504039"
  },
  {
    "text": "sometimes all you got to do is do grep right I mean you could just GP for failed logins and you immediately know",
    "start": "504039",
    "end": "509680"
  },
  {
    "text": "you immediately get all your failed logins right it's just it's very simple you're correlating events there but it's just one event at a time which is you",
    "start": "509680",
    "end": "515760"
  },
  {
    "text": "know which is fine um and I'm a big fan of doing the least amount necessary I'm very lazy so you know if grep works you",
    "start": "515760",
    "end": "522719"
  },
  {
    "text": "know more power to you please use grep but that's not what I talk that's not what I'm talking about when I say complex event correlation right so let's",
    "start": "522719",
    "end": "530800"
  },
  {
    "start": "530000",
    "end": "601000"
  },
  {
    "text": "make it let's make it a little bit more complex right now we're going to say we don't just want to see one fail boggin",
    "start": "530800",
    "end": "536839"
  },
  {
    "text": "or all the fail boggins we only want to see things where where you have some number of failed logins in a given time",
    "start": "536839",
    "end": "543560"
  },
  {
    "text": "frame right and suddenly that makes things much more complex right and this isn't the end it gets more complex than",
    "start": "543560",
    "end": "550240"
  },
  {
    "text": "this but immediately we have to deal with we're storing state right we have to store the username we have to store",
    "start": "550240",
    "end": "556040"
  },
  {
    "text": "the start time you know we have to store our current count right so we're suddenly suddenly it's a little bit more",
    "start": "556040",
    "end": "561079"
  },
  {
    "text": "than just watching a stream of events go by we have to maintain some State on the back end and and it also starts raising",
    "start": "561079",
    "end": "567640"
  },
  {
    "text": "some questions like whose clock do we use you know um let's say for example you know do we use the wall the wall",
    "start": "567640",
    "end": "574120"
  },
  {
    "text": "clock we can say oh this happens in 5 minutes uh you know three failed logins in 5 minutes but what if one of those",
    "start": "574120",
    "end": "581680"
  },
  {
    "text": "was delayed right what if there was a network outage and that event never made it to our sensor made it you know you",
    "start": "581680",
    "end": "586959"
  },
  {
    "text": "know 10 minutes later we don't want to miss it right so we need to use the the",
    "start": "586959",
    "end": "593240"
  },
  {
    "text": "uh Time Field in the records themselves I mean we do have to trust that our sensors populate their times correctly but if you can't trust them do that you",
    "start": "593240",
    "end": "599720"
  },
  {
    "text": "can't trust them to tell you anything anyway um and then when do we reset the timer",
    "start": "599720",
    "end": "605959"
  },
  {
    "start": "601000",
    "end": "1122000"
  },
  {
    "text": "right looking at this example here let's say let's say that we wanted to see two failed logins in 5 minutes right there",
    "start": "605959",
    "end": "613480"
  },
  {
    "text": "are three ways that you could calculate two failed logins in five minutes you could have the first two you could have",
    "start": "613480",
    "end": "619040"
  },
  {
    "text": "the second two or you could have the first and the last right so do we want all those do we want just one do we you",
    "start": "619040",
    "end": "625279"
  },
  {
    "text": "know and there's no right or wrong answer there but uh you know if you're like me and and I know I am I want to",
    "start": "625279",
    "end": "631079"
  },
  {
    "text": "see it all right so that's that's not there's no right or wrong answer but that's the right answer you want to see",
    "start": "631079",
    "end": "637440"
  },
  {
    "text": "everything um but now let's do something really complex let's ask a very complex",
    "start": "637440",
    "end": "643120"
  },
  {
    "text": "question about a set of facts right we want to see and this is going to be a",
    "start": "643120",
    "end": "648880"
  },
  {
    "text": "word problem because I I can't draw um we want to see if somebody maybe is sharing their password right or or",
    "start": "648880",
    "end": "654920"
  },
  {
    "text": "somebody's password has been compromised so let's look at Bob okay Bob Works some where there are physical terminals uh",
    "start": "654920",
    "end": "661839"
  },
  {
    "text": "that you can't log into simultaneously you can't remote into them right and uh I actually I worked at for Whole Foods",
    "start": "661839",
    "end": "668040"
  },
  {
    "text": "for a long time um in their uh corporate headquarters doing networking stuff and so when I was thinking of this I was thinking cash registers right like you",
    "start": "668040",
    "end": "673720"
  },
  {
    "text": "don't want people logging into two different cash registers at once because the world might end um but it could be",
    "start": "673720",
    "end": "678959"
  },
  {
    "text": "anything else you know it doesn't matter so if Bob logs in to terminal one at 147",
    "start": "678959",
    "end": "684519"
  },
  {
    "text": "and then Terminal 2 at 149 and we know that terminals 1 and two are are",
    "start": "684519",
    "end": "689720"
  },
  {
    "text": "geographically separated right in space and he did it you know in such a short span of time then we can conclude that",
    "start": "689720",
    "end": "698040"
  },
  {
    "text": "at least one of those logins was impersonated right at least one of those logins was not Bob okay and so this this",
    "start": "698040",
    "end": "704600"
  },
  {
    "text": "is getting a little more complex this isn't just looking at you know one event at a time or anything like that it's it's actually looking at more complex",
    "start": "704600",
    "end": "711200"
  },
  {
    "text": "things so let's let's see how we would actually ask that question right what would we say so we would say well there's login",
    "start": "711200",
    "end": "718880"
  },
  {
    "text": "Fact one right Bob logged in there he is at Terminal 1 at 147 okay then he logged",
    "start": "718880",
    "end": "724000"
  },
  {
    "text": "in again at Terminal 2 right at 149 and then we can ask ourselves okay and and",
    "start": "724000",
    "end": "730680"
  },
  {
    "text": "by the way my when I was making these slides my four-year-old pointed out that this slide does look like a butt I know it looks like a butt you don't need to",
    "start": "730680",
    "end": "736639"
  },
  {
    "text": "tell me so thank you James for saying that but uh it does anyway but it's a",
    "start": "736639",
    "end": "743320"
  },
  {
    "text": "comparison right we're looking at the comparison um so we're asking a complex",
    "start": "743320",
    "end": "748600"
  },
  {
    "text": "question the question is these these collections this conjunction of predicates down here at the bottom we",
    "start": "748600",
    "end": "753800"
  },
  {
    "text": "want to see user one equals user 2 we don't care if it's success or fail we",
    "start": "753800",
    "end": "759000"
  },
  {
    "text": "might you know but in this case we don't Terminal 1 can't equal Terminal 2 and",
    "start": "759000",
    "end": "764880"
  },
  {
    "text": "time one is less than or equal to time 2 and time 2 minus Time 1 is less than or equal to to minimum time which you know",
    "start": "764880",
    "end": "770639"
  },
  {
    "text": "whatever that is we could calculate that dynamically we could set it it doesn't matter point is that's how we ask that",
    "start": "770639",
    "end": "775760"
  },
  {
    "text": "question right so we've asked the question but now how do we get the answer out how do we how do we know how",
    "start": "775760",
    "end": "782600"
  },
  {
    "text": "do we get our answer back from from whatever our system is in this case Giles um and there's you know different",
    "start": "782600",
    "end": "788480"
  },
  {
    "text": "systems do it in different ways but the way Giles does it is very simple it just asserts a new fact right so your working",
    "start": "788480",
    "end": "795720"
  },
  {
    "text": "memory after it sees these two facts with that comparison down there it you'll suddenly get a new fact in your",
    "start": "795720",
    "end": "802120"
  },
  {
    "text": "working memory that's an alert and there's nothing there's nothing magical alert's just a name there's no predefined alert or anything like that",
    "start": "802120",
    "end": "808959"
  },
  {
    "text": "and and so that right there opens up sort of the general working mechanism of",
    "start": "808959",
    "end": "815120"
  },
  {
    "text": "how you work with uh with these sorts of engines you feed in facts and then you occasionally ask hey is there anything",
    "start": "815120",
    "end": "821600"
  },
  {
    "text": "interesting that happened any new facts that I care about right like any new alerts you know um and so this this",
    "start": "821600",
    "end": "828320"
  },
  {
    "text": "thing at the bottom here and I really wish that I had put like a circle around it or something but I didn't this thing at the bottom is called uh a rule right",
    "start": "828320",
    "end": "836639"
  },
  {
    "text": "rle CU felt like I said that rule um the thing the comparison is",
    "start": "836639",
    "end": "842639"
  },
  {
    "text": "called the predicate and the assertion of that new fact is called the action right so when your predicate matches",
    "start": "842639",
    "end": "849399"
  },
  {
    "text": "your action fires and you get a new event or whatever you could also suppress events you can do other things but you know whatever so rules are",
    "start": "849399",
    "end": "856440"
  },
  {
    "text": "predicates plus actions they're also called Productions which is why it's called the production rule system it blah blah blah so doesn't matter lots of",
    "start": "856440",
    "end": "863920"
  },
  {
    "text": "lots of nomencl there's so many to choose from um so now that we've got this idea of how we're doing it we we",
    "start": "863920",
    "end": "870199"
  },
  {
    "text": "have more questions though right like now that things have got a little more complex we have to ask okay do we want",
    "start": "870199",
    "end": "876279"
  },
  {
    "text": "to detect everything you know like I said I do I do want to detect everything",
    "start": "876279",
    "end": "881399"
  },
  {
    "text": "so how do we detect all of those impersonating logins right so you know let's look at let's look at Bob you know",
    "start": "881399",
    "end": "886959"
  },
  {
    "text": "he logs in at terminal one this this guy logs in a lot he does he does a lot of logging in then he logs in again at",
    "start": "886959",
    "end": "892040"
  },
  {
    "text": "Terminal 2 he logs in again at Terminal 2 right and you'll notice there's only one minute difference between each right",
    "start": "892040",
    "end": "899079"
  },
  {
    "text": "well if we only kept track of say the last event or or you know we just watched it as a sequence or something",
    "start": "899079",
    "end": "904720"
  },
  {
    "text": "the most we would get is one alert out of this right we would just get an alert for the first login to Terminal Two",
    "start": "904720",
    "end": "911079"
  },
  {
    "text": "because the second login to Terminal 2 isn't bad if we only have a little bit of State because remember our our our",
    "start": "911079",
    "end": "917440"
  },
  {
    "text": "rule says the two terminal names can't be equal right so that this is not what we want what we want is something more",
    "start": "917440",
    "end": "925040"
  },
  {
    "text": "like that right where we detect both of those malicious logins and and you know",
    "start": "925040",
    "end": "932279"
  },
  {
    "text": "logins is just an example you know it's uh I also did you know I was playing around with this a credit card swipes",
    "start": "932279",
    "end": "937759"
  },
  {
    "text": "you know like if I swipe my credit card in Austin Texas and then I swipe it again in Las Vegas and then I swipe it again in Las Vegas maybe something's up",
    "start": "937759",
    "end": "944480"
  },
  {
    "text": "you know just because I did it twice in Las Vegas doesn't mean Las Vegas should win um although Vegas always",
    "start": "944480",
    "end": "949920"
  },
  {
    "text": "wins um so so we want to detect that right so this is a question that we need to ask",
    "start": "949920",
    "end": "955759"
  },
  {
    "text": "you know how do we detect both of those malicious laws or suspicious suspicious we don't want",
    "start": "955759",
    "end": "961240"
  },
  {
    "text": "to cast dispersions and then how do we handle out of error or out of order reporting",
    "start": "961240",
    "end": "967800"
  },
  {
    "text": "right so let's say that uh the building that has uh terminal one in it right",
    "start": "967800",
    "end": "974399"
  },
  {
    "text": "we'll call that building one has a network outage okay so it's not it's not sending login events to our Central",
    "start": "974399",
    "end": "980560"
  },
  {
    "text": "collector right but the building that has Terminal 2 which we'll call building a is sending events right it still has",
    "start": "980560",
    "end": "987560"
  },
  {
    "text": "network connectivity so what happen happens is it comes in order okay or it comes out of order rather so you see the",
    "start": "987560",
    "end": "993440"
  },
  {
    "text": "two logins from Terminal 2 before you see the login from terminal one right",
    "start": "993440",
    "end": "1001319"
  },
  {
    "text": "and that's obviously you know do we want to miss that I mean in some situations that might be fine but you know not on",
    "start": "1001319",
    "end": "1006639"
  },
  {
    "text": "my watch you know I want to see that I you know when when Network when building one's network connectivity comes back up I want those events to come in those",
    "start": "1006639",
    "end": "1013040"
  },
  {
    "text": "facts to come in and I want to correlate everything and I want to say hey I saw two suspicious logins right we still",
    "start": "1013040",
    "end": "1018680"
  },
  {
    "text": "want see that um but then there's you know still even more how do you handle retraction",
    "start": "1018680",
    "end": "1025160"
  },
  {
    "text": "of facts right do you handle it at all maybe you don't um although actually",
    "start": "1025160",
    "end": "1030199"
  },
  {
    "text": "there's uh if you don't handle retraction of facts doing out of order stuff gets difficult but anyway um say",
    "start": "1030199",
    "end": "1035918"
  },
  {
    "text": "for example the manager in building one says oh yeah you know I was testing something I used Bob's login that wasn't",
    "start": "1035919",
    "end": "1041880"
  },
  {
    "text": "malicious right that wasn't suspicious and so you want to retract that that login event from building one right but",
    "start": "1041880",
    "end": "1048600"
  },
  {
    "text": "when you do that you want that alert to go away or those both of those alerts right you don't want to leave you know spous alerts around so how do you handle",
    "start": "1048600",
    "end": "1055760"
  },
  {
    "text": "that how do you handle that particular thing and then how do you scale that how do you scale that to thousands or",
    "start": "1055760",
    "end": "1061679"
  },
  {
    "text": "millions of these facts floating around right and the answer at least for the purposes of this talk is Giles right now",
    "start": "1061679",
    "end": "1069200"
  },
  {
    "text": "that we know about event correlation we we we've come such a long way you and I um so Giles this is this is the cool",
    "start": "1069200",
    "end": "1076440"
  },
  {
    "text": "thing about Giles right remember all of the engineering decisions we had to make where it had to run unattended it had to",
    "start": "1076440",
    "end": "1081960"
  },
  {
    "text": "be data safe it had to do all this cool stuff right so you know that sounds a lot like a database right and so that's",
    "start": "1081960",
    "end": "1088640"
  },
  {
    "text": "what Giles does Giles takes a description of an event correlation",
    "start": "1088640",
    "end": "1093960"
  },
  {
    "text": "engine and spits out a schema for a SQL database right any you can use any SQL",
    "start": "1093960",
    "end": "1100559"
  },
  {
    "text": "database you want so long as it's SQL light and you take that database and",
    "start": "1100559",
    "end": "1105840"
  },
  {
    "text": "when you create a database from that schema that database is a complete Standalone no external dependencies no",
    "start": "1105840",
    "end": "1113400"
  },
  {
    "text": "runtime dependencies no extra libraries nothing event correlation engine that you interact with just by inserting and",
    "start": "1113400",
    "end": "1119039"
  },
  {
    "text": "deleting and selecting you don't even have to do complex stuff it's great and that's that immediately wins",
    "start": "1119039",
    "end": "1126280"
  },
  {
    "start": "1122000",
    "end": "1246000"
  },
  {
    "text": "some uh some engineering wins to this right this approach immediately has some wins right because your programmers your",
    "start": "1126280",
    "end": "1132600"
  },
  {
    "text": "programming team already knows how to interact with a database if they don't then they should probably learn because we use databases a lot",
    "start": "1132600",
    "end": "1139360"
  },
  {
    "text": "um you can use pretty much whatever language you want right pretty much every programming language has bindings",
    "start": "1139360",
    "end": "1144720"
  },
  {
    "text": "for for databases right you might not have bindings for uh drools or something like that some other big rule engine in",
    "start": "1144720",
    "end": "1150919"
  },
  {
    "text": "your language you know um because you're you know you're you're awesome and you're writing in has scho that's great but you know yeah or uh or my poor",
    "start": "1150919",
    "end": "1158520"
  },
  {
    "text": "colleague who had to do everything in visual Fox Pro that was that was painful um or uh and actually in speaking of bad",
    "start": "1158520",
    "end": "1165720"
  },
  {
    "text": "or speaking of cool languages that nobody uses anybody use Rebel any anybody raise your hand Rebel no old Amiga got no okay fine whatever JS was",
    "start": "1165720",
    "end": "1172799"
  },
  {
    "text": "almost Written In Rebel but uh but it's it's not it's written it's written in a a beautiful dialect of Ruby that's so",
    "start": "1172799",
    "end": "1179200"
  },
  {
    "text": "much better than regular Ruby called Python and um so those engines that Giles creates",
    "start": "1179200",
    "end": "1188039"
  },
  {
    "text": "they handle out of order assertions of fact so so you get all those benefits of just using regular database right and immediately you get all those great benefits just for free you also get you",
    "start": "1188039",
    "end": "1194840"
  },
  {
    "text": "know it crafts the it crafts the schema in such a way that you get out of order assertions are handled cleanly you scale",
    "start": "1194840",
    "end": "1200400"
  },
  {
    "text": "the millions of these facts because databases a lot of work's gone into making them scalable right so you pick up on all that scalability just for free",
    "start": "1200400",
    "end": "1208360"
  },
  {
    "text": "um you handle Factor traction consistently very important um and then this and this is",
    "start": "1208360",
    "end": "1214400"
  },
  {
    "text": "really neat like this is this is one of my favorite little little gimmies uh you also the engines can reveal their reasoning process to you right which",
    "start": "1214400",
    "end": "1221559"
  },
  {
    "text": "means that you know not only will they give you an answer but they'll tell you how they got it right so in your- face prologue so any any prolog programmers",
    "start": "1221559",
    "end": "1229039"
  },
  {
    "text": "out you know what I'm talking about yeah okay so and then run efficiently in time right and and this is important like a",
    "start": "1229039",
    "end": "1234760"
  },
  {
    "text": "lot of people seem to think that oh this is just doing some sort of complex you know queries it's doing a join or something you know blah blah blah no it",
    "start": "1234760",
    "end": "1241280"
  },
  {
    "text": "does more than that it's much faster as a result and and I'll talk about that in a minute um oh and then I'm going to do",
    "start": "1241280",
    "end": "1248039"
  },
  {
    "start": "1246000",
    "end": "1381000"
  },
  {
    "text": "a live demo before I do a live demo demo Gods help me before I do a live demo I want to talk real quick",
    "start": "1248039",
    "end": "1253919"
  },
  {
    "text": "about you know I want to be very clear about this whole retraction reassertion thing right so Giles uh engines have",
    "start": "1253919",
    "end": "1261280"
  },
  {
    "text": "What's called the Giles guarantee right it's a fundamental guarantee of how the engines work uh for for the default",
    "start": "1261280",
    "end": "1266600"
  },
  {
    "text": "engine type there's uh the development version of Gils has like statistical engines and stuff this doesn't apply there but for the the default engine",
    "start": "1266600",
    "end": "1272400"
  },
  {
    "text": "type um this this always works so when you give it a fact from outside the",
    "start": "1272400",
    "end": "1278919"
  },
  {
    "text": "engine right from a sensor from a person whatever we call that an axium okay and",
    "start": "1278919",
    "end": "1284799"
  },
  {
    "text": "that and and that's basically just saying that it isn't a fact that the engine produced is the result of something sort of rule right like it was",
    "start": "1284799",
    "end": "1290360"
  },
  {
    "text": "it it came uh from outside the engine and the guarantee is is twofold",
    "start": "1290360",
    "end": "1297279"
  },
  {
    "text": "all facts that can be derived from the current set of axioms given the current rule set will be",
    "start": "1297279",
    "end": "1302400"
  },
  {
    "text": "derived and no facts that cannot be derived from the current rule set given the current axium will not be derived",
    "start": "1302400",
    "end": "1308480"
  },
  {
    "text": "right so you're never going to get something that is that's unprovable right everything everything in a Gil's",
    "start": "1308480",
    "end": "1314159"
  },
  {
    "text": "engine can be proved okay so in your face berad Russell woo um",
    "start": "1314159",
    "end": "1319880"
  },
  {
    "text": "oh and so uh there should have been a delay here okay so and just to give an example of of how consistently this is",
    "start": "1319880",
    "end": "1325360"
  },
  {
    "text": "applied let's say fact a comes in right and you get rule one rule one sees fact",
    "start": "1325360",
    "end": "1331400"
  },
  {
    "text": "a and as its action it creates a new fact B okay you know that's that's pretty standard and then later on down",
    "start": "1331400",
    "end": "1337679"
  },
  {
    "text": "the line fact C comes along and Rule two CES fact C and Rule two's action is to",
    "start": "1337679",
    "end": "1345039"
  },
  {
    "text": "retract fact a right PE little laser sort of thing retracts fact a what",
    "start": "1345039",
    "end": "1352320"
  },
  {
    "text": "happens fact B is gone because fact B is no longer supportable because something else destroyed fact day right now here's",
    "start": "1352320",
    "end": "1359440"
  },
  {
    "text": "here's the kicker this is what's really fun and I I wish I I Illustrated this anybody want to guess what would happen",
    "start": "1359440",
    "end": "1364640"
  },
  {
    "text": "if fact C got retracted B comes back a comes back and",
    "start": "1364640",
    "end": "1370720"
  },
  {
    "text": "then B comes back everything is consistent boom it's it's it's really neat it also I pulled my hair out my",
    "start": "1370720",
    "end": "1377640"
  },
  {
    "text": "glorious luxurious hair got pulled out over getting that to work right so okay now who who wants to see a real live",
    "start": "1377640",
    "end": "1383919"
  },
  {
    "start": "1381000",
    "end": "1764000"
  },
  {
    "text": "demo everybody but me right because you know it's very nervous very nerve-wracking okay so let's let's see",
    "start": "1383919",
    "end": "1390240"
  },
  {
    "text": "here I've got two windows open see look at me all right so let's look at a Giles",
    "start": "1390240",
    "end": "1397520"
  },
  {
    "text": "engine and I'm going to open up the Giles engine here um engines can be written in in a variety of formats but",
    "start": "1397520",
    "end": "1403559"
  },
  {
    "text": "the the yaml front end is is the best supported and that was that was an executive decision because we wanted to",
    "start": "1403559",
    "end": "1409360"
  },
  {
    "text": "have engines be uh manipulatable um with external tools",
    "start": "1409360",
    "end": "1414440"
  },
  {
    "text": "right so you can write a you know you use your gaml parser to write Giles engines it's you it's useful um so can everybody see this I",
    "start": "1414440",
    "end": "1421240"
  },
  {
    "text": "don't my vision is terrible so tell me if this is not if this is too small is it good everybody good if if you can't",
    "start": "1421240",
    "end": "1427360"
  },
  {
    "text": "if you can't see in the back tell me I'm serious okay all right so engines um",
    "start": "1427360",
    "end": "1433000"
  },
  {
    "text": "they could have an optional description right and not to hold you in suspense but we're going to write the engine that we used for the examples right we're",
    "start": "1433000",
    "end": "1438880"
  },
  {
    "text": "going to we're going to detect uh logins to two different terms okay and there are better ways to do this like you know",
    "start": "1438880",
    "end": "1444600"
  },
  {
    "text": "I'm sure some of you out there are already thinking oh I could do this better yes you you most certainly could this is not the best way to do it but it's the easiest to illustrate okay so",
    "start": "1444600",
    "end": "1451679"
  },
  {
    "text": "there's our description you know it's pretty simple it just says you know this engine detects blah blah blah blah um and that's just for that's for your",
    "start": "1451679",
    "end": "1457720"
  },
  {
    "text": "benefit it doesn't doesn't get compiled anywhere um then we Define the kinds of",
    "start": "1457720",
    "end": "1462919"
  },
  {
    "text": "facts that we care about okay so we're going to Define three kinds of facts we",
    "start": "1462919",
    "end": "1468159"
  },
  {
    "text": "call these fact classes uh first one we just going to Def find preferences and all that is is we're going to be able to",
    "start": "1468159",
    "end": "1473799"
  },
  {
    "text": "set our minimum time that way we don't hard code it at 30 seconds or whatever right we can change it around and then",
    "start": "1473799",
    "end": "1479039"
  },
  {
    "text": "we're going to Define uh login record right and that's",
    "start": "1479039",
    "end": "1484080"
  },
  {
    "text": "excuse me that's the login record that we've been dealing with right so username successful login terminal login time right and then finally we're going",
    "start": "1484080",
    "end": "1490200"
  },
  {
    "text": "to define the alert class which is just going to be what we spit out when we actually detect a suspicious login and",
    "start": "1490200",
    "end": "1496279"
  },
  {
    "text": "then you have some set of rules okay the Only Rule that we have",
    "start": "1496279",
    "end": "1502399"
  },
  {
    "text": "is logged in two different places right the rule itself also has a description",
    "start": "1502399",
    "end": "1507960"
  },
  {
    "text": "and you can see that there's some magic going on there um with this uh this",
    "start": "1507960",
    "end": "1513080"
  },
  {
    "text": "little bang exper here uh so all that is it if you haven't used yaml yaml has",
    "start": "1513080",
    "end": "1518840"
  },
  {
    "text": "what's called Tags which uh are not anything like HTML tags or XML tags um",
    "start": "1518840",
    "end": "1524559"
  },
  {
    "text": "but that bang expert just says okay you know uh process this differently and the Giles uh engine the Giles compiler when",
    "start": "1524559",
    "end": "1531799"
  },
  {
    "text": "it sees that it passes the uh it passes the string like this this would normally just be uh parsers a string by Amel but",
    "start": "1531799",
    "end": "1538080"
  },
  {
    "text": "when Gil sees it it passes it to a a little shunting yard parser operator precedence parser to do math you know",
    "start": "1538080",
    "end": "1544279"
  },
  {
    "text": "math so uh or in this case string concatenation which is like math but with strings um so you can see there",
    "start": "1544279",
    "end": "1550600"
  },
  {
    "text": "you've got this little you've got this little pearlesque uh dollar username going on",
    "start": "1550600",
    "end": "1556520"
  },
  {
    "text": "right so that's a local variable that we're going to up assigning somewhere um local variables are How We Do",
    "start": "1556520",
    "end": "1563399"
  },
  {
    "text": "correlation between events right between facts okay every set of uh facts every",
    "start": "1563399",
    "end": "1571360"
  },
  {
    "text": "set of facts that matches a given signature gets its own instance of local variables right um excluding the empty",
    "start": "1571360",
    "end": "1577520"
  },
  {
    "text": "set and I I already made my in yourface Bertrand Russell joke but in yourface again Bertrand Russell the empty set doesn't count here so",
    "start": "1577520",
    "end": "1585080"
  },
  {
    "text": "um and then you have every engine has a match all right and all this is and you",
    "start": "1585080",
    "end": "1591840"
  },
  {
    "text": "have match all and match none and then the development version you also have some other crazy stuff like repeat and",
    "start": "1591840",
    "end": "1597039"
  },
  {
    "text": "match some and blah blah blah but once again I I don't want I don't want to sell anything that doesn't exist yet so right now uh you just get match all and",
    "start": "1597039",
    "end": "1603880"
  },
  {
    "text": "match none which as the name implies is everything for that one and then if any of those match it's n you know you don't",
    "start": "1603880",
    "end": "1610039"
  },
  {
    "text": "match um and then you get this little uh this little Dash here is just a yamalis saying that we're talking about a list",
    "start": "1610039",
    "end": "1615960"
  },
  {
    "text": "so we got a list of facts to match so first we're going to to match our preferences right we give it a meaning",
    "start": "1615960",
    "end": "1621399"
  },
  {
    "text": "which is just a little human readable string that we can spit out later that says this is what we mean when we see this fact right this is what this fact",
    "start": "1621399",
    "end": "1627240"
  },
  {
    "text": "means to us and then we assign something a local variable called",
    "start": "1627240",
    "end": "1633440"
  },
  {
    "text": "time interval using the fields of that event right of that fact and so that's",
    "start": "1633440",
    "end": "1639600"
  },
  {
    "text": "what this little this little carrot over here means the carrot means extract the field from this uh",
    "start": "1639600",
    "end": "1646880"
  },
  {
    "text": "from this event so we're saying here mintime you know when you see a preference is fact grab the mintime out",
    "start": "1646880",
    "end": "1652559"
  },
  {
    "text": "of it stuff it in time interval and this can be more complex like it doesn't have to be that you know you could do this",
    "start": "1652559",
    "end": "1657679"
  },
  {
    "text": "you can you know do that it doesn't matter you know blah blah blah you can do you can do crazy crazy stuff doesn't",
    "start": "1657679",
    "end": "1663200"
  },
  {
    "text": "matter it's an expression but in this case the expression is just uh M time",
    "start": "1663200",
    "end": "1669679"
  },
  {
    "text": "and then we look for our first login record right and remember there's no there's no checking on it here we just grab a login record we extract the",
    "start": "1669679",
    "end": "1676120"
  },
  {
    "text": "username the terminal and the login time right and we stuff them in local variables again and then the magic",
    "start": "1676120",
    "end": "1681480"
  },
  {
    "text": "happens look at the magic this is the magic part says now we look for another",
    "start": "1681480",
    "end": "1686760"
  },
  {
    "text": "login record this is this would be login fact 2 right and we attach a predicate to this one right and it",
    "start": "1686760",
    "end": "1693880"
  },
  {
    "text": "says uh and the default predicate is just everything so but in this case it's a this is not a default predicate this matches only certain things and this is",
    "start": "1693880",
    "end": "1700840"
  },
  {
    "text": "an encoding of that comparison uh table that I showed you",
    "start": "1700840",
    "end": "1706120"
  },
  {
    "text": "earlier right username equals username and you see how we're looking we're comparing the field to the local",
    "start": "1706120",
    "end": "1711880"
  },
  {
    "text": "variable right so the field username of our second login record is equal to the local variable username that we",
    "start": "1711880",
    "end": "1718039"
  },
  {
    "text": "extracted from our first login record um terminal does not equal",
    "start": "1718039",
    "end": "1723399"
  },
  {
    "text": "Terminal One log in time is greater than or equal to time one and then log in time is less than or equal to Time 1 plus time interval right um and then we",
    "start": "1723399",
    "end": "1731600"
  },
  {
    "text": "have our action which is just assert a new alert right and there's you know we assert the message blah blah blah so",
    "start": "1731600",
    "end": "1737720"
  },
  {
    "text": "that you know hopefully hopefully that doesn't look like super duper scary um the syntax is not exceptionally",
    "start": "1737720",
    "end": "1743080"
  },
  {
    "text": "beautiful uh the original version had a uh I I don't know if you can tell I like writing compilers the original version",
    "start": "1743080",
    "end": "1748240"
  },
  {
    "text": "had a Oberon syntax and everybody was like oh obon that's a that's a language I've never heard of and hate the syntax",
    "start": "1748240",
    "end": "1754399"
  },
  {
    "text": "of so no so we don't get to do that anymore but uh one day one day there's going to be an obon Syntax for it overon",
    "start": "1754399",
    "end": "1760200"
  },
  {
    "text": "like Syntax for it so anybody anybody use obon no no okay ni ni Nick lorth",
    "start": "1760200",
    "end": "1766679"
  },
  {
    "text": "invented Pascal one of doesn't matter okay so I like programming languages all right so let's",
    "start": "1766679",
    "end": "1772880"
  },
  {
    "text": "compile that engine so we're going to compil it example SQL that's you know D",
    "start": "1772880",
    "end": "1778440"
  },
  {
    "text": "just like GCC and pull an example yaml and let's watch it not work because it's a live",
    "start": "1778440",
    "end": "1784679"
  },
  {
    "text": "demo oh no look at that worked okay so now and just give you an idea let's look",
    "start": "1784679",
    "end": "1789799"
  },
  {
    "text": "at example SQL and when I say look at I just mean count the lines of it is in fact quite large you got you just got",
    "start": "1789799",
    "end": "1796279"
  },
  {
    "text": "1600 lines of SQL that you are glad glad you didn't have to write yourself um so let's actually now create we're going to",
    "start": "1796279",
    "end": "1802519"
  },
  {
    "text": "we're going to create our own little um knock here right so I created a script",
    "start": "1802519",
    "end": "1808799"
  },
  {
    "text": "and it's very very simple all it does is sit there and selects out alerts can everybody see that I realize that this",
    "start": "1808799",
    "end": "1814760"
  },
  {
    "text": "is not zoomed in sorry is that better maybe okay",
    "start": "1814760",
    "end": "1821240"
  },
  {
    "text": "um it uh selects out alerts from the uh the database and just sits in a loop and just keeps selecting right so let's look",
    "start": "1821240",
    "end": "1828200"
  },
  {
    "text": "at our do we have um does alerts DB actually exist yet no okay so let's actually create alerts DB real quick",
    "start": "1828200",
    "end": "1835120"
  },
  {
    "text": "you'll notice that that is just a regular old SQL light instan uh I'm not I'm not doing anything special nothing",
    "start": "1835120",
    "end": "1840480"
  },
  {
    "text": "up my sleeve um and then I'm going to read in our example",
    "start": "1840480",
    "end": "1847080"
  },
  {
    "text": "SQL this is my burner laptop and it's it's got like the world's slowest hard drive so just forgive me come on come on",
    "start": "1847159",
    "end": "1854200"
  },
  {
    "text": "you can do it there we go okay and now let's start watching for",
    "start": "1854200",
    "end": "1859919"
  },
  {
    "text": "alerts which thankfully there aren't any right now that would be really confusing if there were okay so now look at me I'm",
    "start": "1860000",
    "end": "1865639"
  },
  {
    "text": "going to start interacting with this completely normal database as if it were just in fact a database so let's do",
    "start": "1865639",
    "end": "1873000"
  },
  {
    "text": "let's insert our preferences first right so let's do Giles preferences facts if I misspell",
    "start": "1873000",
    "end": "1879000"
  },
  {
    "text": "something yell out because I don't have to go back and type it up uh J purposes facts was it mintime values what we pick",
    "start": "1879000",
    "end": "1885600"
  },
  {
    "text": "let's pick 30 30 seconds okay okay great no alerts you know which is once again good because there shouldn't be and then",
    "start": "1885600",
    "end": "1892880"
  },
  {
    "text": "uh now let's let's have Bob log in here and you'll notice I'm not doing",
    "start": "1892880",
    "end": "1898880"
  },
  {
    "text": "anything magic I'm not doing anything complex I'm just doing an insert right I don't have to do any crazy selection anything that um so was it",
    "start": "1898880",
    "end": "1906000"
  },
  {
    "text": "username login time success and terminal and let's what was his name Bob",
    "start": "1906000",
    "end": "1912679"
  },
  {
    "text": "are we picking on Bob let's pick on Bob he logged in at uh what would that be that would be like early in the morning",
    "start": "1912679",
    "end": "1919360"
  },
  {
    "text": "on January 1st 1970 for doing Unico so yeah so that's when he logged in um it",
    "start": "1919360",
    "end": "1925080"
  },
  {
    "text": "was a successful login and he logged into terminal one all right notice no",
    "start": "1925080",
    "end": "1930600"
  },
  {
    "text": "alerts wait I'm pointing at my own screen notice no alerts okay so now let's have him log in",
    "start": "1930600",
    "end": "1936559"
  },
  {
    "text": "again at say 1029 to Terminal",
    "start": "1936559",
    "end": "1944399"
  },
  {
    "text": "Two oh no Bob's password made compromised right and there you go that",
    "start": "1945000",
    "end": "1950720"
  },
  {
    "text": "that's the magic of Giles right there which you know okay remember remember in the uh in the the iPad demo the original",
    "start": "1950720",
    "end": "1956440"
  },
  {
    "text": "iPad demo when they made uh uh working with spreadsheets with your fingers look awesome I just did that with SQL light",
    "start": "1956440",
    "end": "1961919"
  },
  {
    "text": "so everybody be a so um so yeah so this is how this is basically how it works you know so so think about it for a",
    "start": "1961919",
    "end": "1968720"
  },
  {
    "text": "second can your programmers instantly pick this up yes they can you know you can instantly integrate this anywhere",
    "start": "1968720",
    "end": "1974519"
  },
  {
    "text": "you want so now let's say okay you know um I'm getting a lot of false positives with that 30second window it's not",
    "start": "1974519",
    "end": "1981080"
  },
  {
    "text": "working for me I don't like that 30second window so let's do let's let's increase",
    "start": "1981080",
    "end": "1986600"
  },
  {
    "text": "it so preferences go away alert goes",
    "start": "1986600",
    "end": "1991840"
  },
  {
    "text": "away here I can just yay command history let's call it uh 60 seconds",
    "start": "1991880",
    "end": "1998519"
  },
  {
    "text": "right uh oh that did not work 1029 60 see the live demo is going to kill",
    "start": "1998519",
    "end": "2005320"
  },
  {
    "text": "me why did that work um let's try 30 oh 60 because 60 is",
    "start": "2005320",
    "end": "2012919"
  },
  {
    "text": "greater than I'm an idiot sorry 20 seconds there we go let's try 20 seconds getting false poses sorry basic arithmetic there we go alert did not",
    "start": "2012919",
    "end": "2020200"
  },
  {
    "text": "come back okay God I thought I thought algebra was broken for a minute okay so",
    "start": "2020200",
    "end": "2026440"
  },
  {
    "text": "um all right so see the alert did not come back right they say no no no I I am in fact that that's that I I do want",
    "start": "2026440",
    "end": "2034080"
  },
  {
    "text": "that 60-second window so let's get the alert to come back boom okay so now let's look at what those actually look like and um Let me let me show off",
    "start": "2034080",
    "end": "2041039"
  },
  {
    "text": "something else just real quick and then we can go back to playing with this for a second so let's look at it it's more",
    "start": "2041039",
    "end": "2046600"
  },
  {
    "text": "than just um you know let's let's look at what they look like in the database themselves so let's look at the alerts",
    "start": "2046600",
    "end": "2054040"
  },
  {
    "text": "that came out all right there's there's the alert that we just saw over in the other window so something that Giles can do or",
    "start": "2054040",
    "end": "2061118"
  },
  {
    "text": "Giles engines can do is we can ask it to justify its reasoning right it's not enough to say that Bob's password may be",
    "start": "2061119",
    "end": "2066480"
  },
  {
    "text": "compromised we're we're Afra forensic minded crowd we want to know why Bob's password why why we think Bob's password",
    "start": "2066480",
    "end": "2072240"
  },
  {
    "text": "has been compromised right so what we can do is we can justify it we can ask the database to",
    "start": "2072240",
    "end": "2078040"
  },
  {
    "text": "justify um the fact so justification I cannot",
    "start": "2078040",
    "end": "2084118"
  },
  {
    "text": "type all right so there's your justification the engine spits out fact alert number three was produced by rule",
    "start": "2084119",
    "end": "2089638"
  },
  {
    "text": "logged into two different places Bob's haser may be compromise blah blah blah justification there was a minimum time",
    "start": "2089639",
    "end": "2094760"
  },
  {
    "text": "period uh as specified by pref references number four you know so we can recursively go back and look at",
    "start": "2094760",
    "end": "2100720"
  },
  {
    "text": "preferences number four which was the one that we Bob logged in terminal one at time 1000 whatever whatever so the",
    "start": "2100720",
    "end": "2106320"
  },
  {
    "text": "point is you can do this for any fact you can say I want to know why you believe this to in fact be true um and",
    "start": "2106320",
    "end": "2112400"
  },
  {
    "text": "then you know you can recursively uh justify stuff now the the justification for the other things isn't particularly interesting because they're all",
    "start": "2112400",
    "end": "2118000"
  },
  {
    "text": "axiomatic but just to show it um so justification",
    "start": "2118000",
    "end": "2123320"
  },
  {
    "text": "from uh what do we call them login record login record yeah login record",
    "start": "2123320",
    "end": "2130320"
  },
  {
    "text": "facts where ID equals one no oh not facts justification",
    "start": "2130320",
    "end": "2138119"
  },
  {
    "text": "sorry yay it just says it was injected from an external Source right because that's where it came from it came from me I'm the external Source um so yeah so",
    "start": "2139000",
    "end": "2148079"
  },
  {
    "text": "that's pretty much how am I doing on time I've got I've got okay I've got a little bit more I want to talk about and then um I want let me let me show you",
    "start": "2148079",
    "end": "2155960"
  },
  {
    "text": "just one thing real quick if I want to does anybody want to see any more",
    "start": "2155960",
    "end": "2161079"
  },
  {
    "text": "live stuff any qu let's let's just while while I have it up let's let's break format a minute is there any questions",
    "start": "2161079",
    "end": "2166720"
  },
  {
    "text": "about the live demo that would be best answered right this second don't be shy",
    "start": "2166720",
    "end": "2172359"
  },
  {
    "text": "don't be shy you can also ask at the end of the talk but then I won't have it up on the screen so no no where are you",
    "start": "2172359",
    "end": "2177599"
  },
  {
    "text": "actually running your engine the engine is entirely inside SQL light it it converted it it is running in I I'll get",
    "start": "2177599",
    "end": "2184800"
  },
  {
    "text": "to that in a second I'll explain exactly how in a second but basically it turn turns SQ into an",
    "start": "2184800",
    "end": "2190560"
  },
  {
    "text": "correlation I'm sorry yeah it uses triggers exactly it uses a lot of triggers and that's",
    "start": "2190560",
    "end": "2197680"
  },
  {
    "text": "actually a great segue um which is if you've ever actually read the word segue it is not pronounced like it dis spelled",
    "start": "2197680",
    "end": "2205640"
  },
  {
    "start": "2205000",
    "end": "2320000"
  },
  {
    "text": "um let's talk about how we actually oh well okay real quick advantages of Gil we already talked about this so I don't",
    "start": "2205640",
    "end": "2210839"
  },
  {
    "text": "want to keep going but uh you could run your event correlation engine anywhere you can run SQL light which is",
    "start": "2210839",
    "end": "2217160"
  },
  {
    "text": "everywhere pretty much including my phone which is why the talk is called taking event correlation with you because people like running things on",
    "start": "2217160",
    "end": "2223319"
  },
  {
    "text": "their phones at least a lot of people do my wife doesn't she actually just got her first smartphone like they just call them phones now like she keeps saying",
    "start": "2223319",
    "end": "2229040"
  },
  {
    "text": "it's a smartphone no it's just a phone now we don't call anyway she just got her first smartphone like two months ago",
    "start": "2229040",
    "end": "2235280"
  },
  {
    "text": "um and uh you can use your existing database apis right your existing",
    "start": "2235280",
    "end": "2240880"
  },
  {
    "text": "expertise you already know how to access databases you already know how to use GS um you can have transactional semantics",
    "start": "2240880",
    "end": "2247359"
  },
  {
    "text": "this this is actually really cool so remember that Gil's guarantee I was telling you about every time you insert a new fact you can do that inside a",
    "start": "2247359",
    "end": "2253560"
  },
  {
    "text": "transaction so it's guaranteed that when that that uh that statement finishes all possible consequences of that fact have",
    "start": "2253560",
    "end": "2262520"
  },
  {
    "text": "been accounted for right like it's it's Atomic uh transactional semantics Atomic",
    "start": "2262520",
    "end": "2269200"
  },
  {
    "text": "uh insert um and then the tool itself is open source and uh commercial use friendly so please go do whatever you",
    "start": "2269200",
    "end": "2275079"
  },
  {
    "text": "want to do with it it's it's completely awesome um something that's not clear you say anywhere can run SQL light also",
    "start": "2275079",
    "end": "2281720"
  },
  {
    "text": "talking about other databases SQL light hit SQL light right now sqlite is the only database that's supported um",
    "start": "2281720",
    "end": "2288240"
  },
  {
    "text": "there's a certain minimum set of features that the database has to support for this to work uh and uh",
    "start": "2288240",
    "end": "2295040"
  },
  {
    "text": "postgress I'm currently researching postgress postgress should be able to handle it just fine um Maria DB and",
    "start": "2295040",
    "end": "2301200"
  },
  {
    "text": "MySQL cannot handle it they their their trigger handling just doesn't doesn't work right for this sort of thing um and",
    "start": "2301200",
    "end": "2310040"
  },
  {
    "text": "I Microsoft SQL might work I don't know I I I have never used it probably maybe",
    "start": "2310040",
    "end": "2315800"
  },
  {
    "text": "people seem to like it um if anybody wants to give me $10,000 I'll Port it to Oracle so it'll be great no I like",
    "start": "2315800",
    "end": "2323200"
  },
  {
    "text": "Oracle I'm not trying to be you know I'm sure they're worth the money I just I don't have $10,000 okay I got five minutes all right I gota um so uses for",
    "start": "2323200",
    "end": "2329839"
  },
  {
    "text": "child engines so uh let me just plow through this real quick obviously forensics you don't have to do event",
    "start": "2329839",
    "end": "2336040"
  },
  {
    "text": "correlation engines right um Giles are Giles engines are actually instances of what are called production rule systems",
    "start": "2336040",
    "end": "2341839"
  },
  {
    "text": "which are the basis for a lot of uh expert systems uh artificial intelligence stuff uh action selection",
    "start": "2341839",
    "end": "2347640"
  },
  {
    "text": "mechanisms blah blah blah blah blah um and so one of the cool ones is record linkage right so remember that you have",
    "start": "2347640",
    "end": "2354359"
  },
  {
    "text": "this uh this automatic uh guarantee of everything sort of coming out in the wash right so what happens if you have a",
    "start": "2354359",
    "end": "2361599"
  },
  {
    "text": "big collection of documents and you're trying to associate documents with people and you put in a rule that says",
    "start": "2361599",
    "end": "2367680"
  },
  {
    "text": "oh by the way today I learned that a common nickname for Robert is Bob well immediately not just for any documents",
    "start": "2367680",
    "end": "2373640"
  },
  {
    "text": "that are added later but now documents that have ever been added we'll say oh Bob oh that's also Robert we can link",
    "start": "2373640",
    "end": "2379000"
  },
  {
    "text": "those two records together right and it happens you know more or less instantaneously um log analysis event",
    "start": "2379000",
    "end": "2384640"
  },
  {
    "text": "correlation you know decision systems diagnostic systems uh there's one of the examples in the Giles uh Source",
    "start": "2384640",
    "end": "2390960"
  },
  {
    "text": "directory is uh an expert system that detects uh reverse traffic Flows In networks so if you say this network has",
    "start": "2390960",
    "end": "2398079"
  },
  {
    "text": "a security clearance of 50 and this one has a security Lance of 30 and then there's a bidirectional connection",
    "start": "2398079",
    "end": "2403119"
  },
  {
    "text": "between these three networks and blah blah blah you'll get alerts saying oh you can get traffic to this network by",
    "start": "2403119",
    "end": "2408720"
  },
  {
    "text": "this route that you didn't know about you know maybe um so that's so it's cool you know you can build lots of cool",
    "start": "2408720",
    "end": "2413960"
  },
  {
    "text": "stuff with it um and if I had more time I would have shown you that that was uh that's called tarnis um not Tardis",
    "start": "2413960",
    "end": "2419560"
  },
  {
    "text": "everybody thinks it's a doctor who thing it's not it's tarnus it's an obscure Buffy the Vampire Slayer joke as is the name Giles so um although Tardis is also",
    "start": "2419560",
    "end": "2426839"
  },
  {
    "start": "2424000",
    "end": "2498000"
  },
  {
    "text": "fine I love them doctor H doesn't matter all right so performance you know so everybody asks you know how is this",
    "start": "2426839",
    "end": "2432760"
  },
  {
    "text": "different from just running a SQL query right um you know is this any faster than running a SQL career and I'm going",
    "start": "2432760",
    "end": "2438640"
  },
  {
    "text": "to tell you the same thing I told them which is smoke bomb and run away no um",
    "start": "2438640",
    "end": "2444599"
  },
  {
    "text": "it's so a regular database if you run a query and you already have t facts right",
    "start": "2444599",
    "end": "2449760"
  },
  {
    "text": "in that database and you add N More then it's going to be on the order of t+ n to check for new matches right every time",
    "start": "2449760",
    "end": "2457359"
  },
  {
    "text": "whereas with Giles and this is in the best case in the common case worst case it's just as bad as the other thing you can write slow code in any language so",
    "start": "2457359",
    "end": "2464240"
  },
  {
    "text": "don't don't yell at me if this you know if you if if your engine does not perform uh at Peak efficiency but um",
    "start": "2464240",
    "end": "2471520"
  },
  {
    "text": "Giles advertises the cost of uh uh pattern matching over the cost of",
    "start": "2471520",
    "end": "2478240"
  },
  {
    "text": "insertion so adding n facts to a database to a GS engine that already has TS only takes end time so if you have a",
    "start": "2478240",
    "end": "2486040"
  },
  {
    "text": "million facts and you insert one it still takes the same amount of time as if you inserted one fact in a database with zero facts right on on average best",
    "start": "2486040",
    "end": "2493319"
  },
  {
    "text": "case General case and it does that via a magical algorithm called re and before",
    "start": "2493319",
    "end": "2501000"
  },
  {
    "start": "2498000",
    "end": "2582000"
  },
  {
    "text": "somebody yells me on this one too I have heard this pronounce re Reit R and ready and it is I I say Reit it's a Latin word",
    "start": "2501000",
    "end": "2509240"
  },
  {
    "text": "if anybody out there speaks Latin tell me how it's supposed to be pronounced because I I I just picked REI but it's",
    "start": "2509240",
    "end": "2514400"
  },
  {
    "text": "probably ready but I doesn't matter so um so this graph here it's I'm not going",
    "start": "2514400",
    "end": "2520560"
  },
  {
    "text": "to go into details this graph is not meant to be illustrative of what's actually Happ it is illustrative what's actually happening we're not going to go",
    "start": "2520560",
    "end": "2525880"
  },
  {
    "text": "over it it's just to let you know that there's something a little more magical happening under the hood um this was developed uh as part of the Ops 5 um",
    "start": "2525880",
    "end": "2535440"
  },
  {
    "text": "system expert system shell back in 70s I think no no no it was later",
    "start": "2535440",
    "end": "2541319"
  },
  {
    "text": "than that anyway doesn't matter and it uh uh what happens is it basically builds a discrimination Network where",
    "start": "2541319",
    "end": "2546960"
  },
  {
    "text": "you feed facts in they they trickle down through this discrimination Network and then eventually out poops your new facts",
    "start": "2546960",
    "end": "2553119"
  },
  {
    "text": "right and that's that's what Giles does Giles in a very real sense Giles could be called an implementation of the re",
    "start": "2553119",
    "end": "2561079"
  },
  {
    "text": "algorithm in SQL lights trigger language right and and and when I say a very real sense I mean literally like that's what",
    "start": "2561079",
    "end": "2567160"
  },
  {
    "text": "it is it's an implementation of the algorithm in SQL lights trigger language um and so just you know it's it's these",
    "start": "2567160",
    "end": "2574319"
  },
  {
    "text": "each one of these little circles here is called a memory memories just become tables uh each Edge between those nodes",
    "start": "2574319",
    "end": "2581960"
  },
  {
    "text": "becomes a trigger um the alpha predicates which we can use to cheaply prove that a fact",
    "start": "2581960",
    "end": "2587920"
  },
  {
    "text": "will never match anything we just use those we create triggers that suppress their insertion so we don't waste time correlating facts that could never",
    "start": "2587920",
    "end": "2594040"
  },
  {
    "text": "possibly match right um we uh we re the compiler rewrites the Expressions to be",
    "start": "2594040",
    "end": "2599880"
  },
  {
    "text": "more amenable to query optimization so it looks at modern query optimizers and uh and you know figures out the best way",
    "start": "2599880",
    "end": "2605839"
  },
  {
    "text": "to rewrite the expression and and then it also computes a minimal uh covering index set of covering indexes right so",
    "start": "2605839",
    "end": "2612599"
  },
  {
    "text": "every expression is covered to the greatest extent possible bu an index so that you're never doing Full Table scan",
    "start": "2612599",
    "end": "2618359"
  },
  {
    "text": "you can do you can do Full Table scans if you write your engine wrong but we try",
    "start": "2618359",
    "end": "2623480"
  },
  {
    "text": "really hard to not make that happen um and so that's it so um you know just to",
    "start": "2623480",
    "end": "2628760"
  },
  {
    "start": "2625000",
    "end": "2912000"
  },
  {
    "text": "to reiterate complex event correlation engines have great applications in right oh I said I wasn't going to read any",
    "start": "2628760",
    "end": "2634160"
  },
  {
    "text": "more slides so uh uh I won't read I'll just I'll just paraphrase uh they don't have to be complex you can write engines",
    "start": "2634160",
    "end": "2641680"
  },
  {
    "text": "that aren't that hard to use right um and they're just normal databases so you immediately get all the benefits of",
    "start": "2641680",
    "end": "2647359"
  },
  {
    "text": "normal B of normal databases ease of use ease of Access Data safety transactional semantics it's all awesome and then you",
    "start": "2647359",
    "end": "2654599"
  },
  {
    "text": "can reach me here's my email address again remember it's j not R and yes I could set up an alias but I'm not going to it's the principle of the thing j",
    "start": "2654599",
    "end": "2660839"
  },
  {
    "text": "King at dead pixie.com and the Giles source code itself is available at core Logics get repo at that URL right there",
    "start": "2660839",
    "end": "2668040"
  },
  {
    "text": "so thank [Applause]",
    "start": "2668040",
    "end": "2675839"
  },
  {
    "text": "you does anybody have any questions I specifically stopped early for try hi",
    "start": "2675839",
    "end": "2681440"
  },
  {
    "text": "yes if you have rule changes if you have rule changes do you have to what do you uh oh I'm sorry I uh sorry let can you",
    "start": "2681440",
    "end": "2689839"
  },
  {
    "text": "go first and then you sorry oh sorry yeah I'm sorry say that again did you rule out some of the existing CP systems",
    "start": "2689839",
    "end": "2696160"
  },
  {
    "text": "for reason esper yeah so we looked at uh he asked if we had ruled out some of the existing um complex event processing",
    "start": "2696160",
    "end": "2703760"
  },
  {
    "text": "systems like esper and others we we did uh for a variety of reasons um there",
    "start": "2703760",
    "end": "2709839"
  },
  {
    "text": "were often you know they had to be zero cost they had to be low maintenance they had to be accessible from both Pearl and",
    "start": "2709839",
    "end": "2715240"
  },
  {
    "text": "python they had to be permissive licensing that allow commercial use blah blah blah blah blah so at the end of the day we ended up writing our own so thank",
    "start": "2715240",
    "end": "2722839"
  },
  {
    "text": "you and I'm sorry what was your question you have rule changes um you have",
    "start": "2722839",
    "end": "2727880"
  },
  {
    "text": "yes so the rule changes are that that is something that is a little uh hackish",
    "start": "2727880",
    "end": "2733079"
  },
  {
    "text": "right now so the way it works is when you want to do a rule change you recompile the schema and then uh there's",
    "start": "2733079",
    "end": "2739880"
  },
  {
    "text": "a trigger program in each database that serializes out all the facts as triples",
    "start": "2739880",
    "end": "2745640"
  },
  {
    "text": "all of the axiomatic facts as triples and then you attach the other database load the triples back in and Bob your",
    "start": "2745640",
    "end": "2751000"
  },
  {
    "text": "uncle uh it's not great but it it works pretty well thank you any other question yes",
    "start": "2751000",
    "end": "2757520"
  },
  {
    "text": "what happens when you have rules circular events um so Gile supports uh",
    "start": "2757520",
    "end": "2764760"
  },
  {
    "text": "I'm sorry the question was what happens when there's contradictory rules or uh Cycles in events so Giles uh first off",
    "start": "2764760",
    "end": "2771160"
  },
  {
    "text": "if you try to compile an engine that has uh blatantly contradictory rules the",
    "start": "2771160",
    "end": "2776240"
  },
  {
    "text": "compiler will error out if you compile an engine that has Cycles in it um the engine will complain unless you pass",
    "start": "2776240",
    "end": "2783359"
  },
  {
    "text": "the- C flag saying you acknowledge that there are cycles and there is is uh one of the actions in addition to assert",
    "start": "2783359",
    "end": "2790160"
  },
  {
    "text": "there's also assert distinct which means assert a fact if and only if it doesn't already exist uh and that also",
    "start": "2790160",
    "end": "2796559"
  },
  {
    "text": "participates in the G's guarantee so if that fact gets gets ban you know gets retracted somehow another rule that",
    "start": "2796559",
    "end": "2802240"
  },
  {
    "text": "would have produced it will produce it any any other questions anybody",
    "start": "2802240",
    "end": "2807960"
  },
  {
    "text": "anybody your log include a log you're right it didn't you're",
    "start": "2807960",
    "end": "2815599"
  },
  {
    "text": "right so that's that's that's left us an exercise to the reader so any other",
    "start": "2815599",
    "end": "2822640"
  },
  {
    "text": "questions yeah oh yep sorry biggest implementation I'm sorry what's the",
    "start": "2822640",
    "end": "2828599"
  },
  {
    "text": "biggest biggest implementation youve got uh the biggest implementation we've got was dirt uh which analyzed very large",
    "start": "2828599",
    "end": "2836839"
  },
  {
    "text": "sour code repositories including uh the git repo for the Linux Kel which uh using dirt semantics came out to be 33",
    "start": "2836839",
    "end": "2844880"
  },
  {
    "text": "million events on the first import and it processed that in about two hours",
    "start": "2844880",
    "end": "2851599"
  },
  {
    "text": "so yeah it's not it's not the fastest engine but it's you know it's pretty good",
    "start": "2851599",
    "end": "2856960"
  },
  {
    "text": "so anybody else oh I'm sorry yes any plans for myql support in the very near",
    "start": "2856960",
    "end": "2863559"
  },
  {
    "text": "future not in the very my SQL right now does not have the trigger support that we need the the semantics um postgress I",
    "start": "2863559",
    "end": "2870440"
  },
  {
    "text": "think does my SQL I I've tried to make it work and it just I just don't think it's going to sadly I I would like to",
    "start": "2870440",
    "end": "2877160"
  },
  {
    "text": "but I just don't think it will are there any plans for it though like um I don't I don't know it would require MySQL to",
    "start": "2877160",
    "end": "2884000"
  },
  {
    "text": "change their the way they handle triggers and I I don't know if they're going to I I wish they would because",
    "start": "2884000",
    "end": "2889440"
  },
  {
    "text": "I've seen other people complaining about it um for unrelated reasons So yeah",
    "start": "2889440",
    "end": "2894680"
  },
  {
    "text": "thank you yeah thank you anybody else anybody else going one oh somebody standing up more people are standing up",
    "start": "2894680",
    "end": "2902319"
  },
  {
    "text": "are you asking questions or leaving you could also leave okay all right are we good okay all right well thank you very much",
    "start": "2902319",
    "end": "2911359"
  }
]