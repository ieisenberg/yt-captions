[
  {
    "start": "0",
    "end": "43000"
  },
  {
    "text": "good afternoon again and welcome to cracking the lens exploiting HTTP hidden attack surface have you ever seen a",
    "start": "0",
    "end": "7470"
  },
  {
    "text": "tempting target but had to ignore it because it's not quite within the scope",
    "start": "7470",
    "end": "12599"
  },
  {
    "text": "of your test or maybe you saw something that is within scope but it's just not",
    "start": "12599",
    "end": "18060"
  },
  {
    "text": "very interesting looking and not worth wasting any time on load balances and",
    "start": "18060",
    "end": "23670"
  },
  {
    "text": "analytic systems are everywhere but they're just a bit boring they form a lens in front of website still we're",
    "start": "23670",
    "end": "30300"
  },
  {
    "text": "used to looking through rather than at in this session I'll share with you",
    "start": "30300",
    "end": "35520"
  },
  {
    "text": "proven techniques to hunt these systems down crack them open and use them as gateways into our targets infrastructure",
    "start": "35520",
    "end": "43700"
  },
  {
    "text": "some of these techniques involve requests so malformed that they break",
    "start": "43700",
    "end": "48780"
  },
  {
    "text": "certain hacker tools and may exploit systems that you never even realized existed right at the start of this",
    "start": "48780",
    "end": "55559"
  },
  {
    "text": "research I wrote a simple payload that was designed to make vulnerable systems send a ping back back to my server and I",
    "start": "55559",
    "end": "62879"
  },
  {
    "text": "send that payload to a couple of thousand sites and I got quite a few pingbacks but there was something",
    "start": "62879",
    "end": "68460"
  },
  {
    "text": "slightly strange about a few of them I noticed the ping backs coming from cloud mailed over and Inga comm were",
    "start": "68460",
    "end": "76200"
  },
  {
    "text": "coming from the same ip address which was a bit weird because you wouldn't think that they would be on shared hosting and so I did a reverse DNS",
    "start": "76200",
    "end": "84600"
  },
  {
    "text": "lookup on this mysterious IP address and found that it belonged to my own ISP which is even stranger bear in mind that",
    "start": "84600",
    "end": "92670"
  },
  {
    "text": "this can't be caused by some kind of caching solution because they're clearly",
    "start": "92670",
    "end": "98159"
  },
  {
    "text": "doing dynamic processing of my input or they would have been exploited and so I",
    "start": "98159",
    "end": "103259"
  },
  {
    "text": "took the request that's in the payload and I resent it a few times in the repeater and I noticed that the response",
    "start": "103259",
    "end": "109829"
  },
  {
    "text": "from Cloud Mayor was coming back to me in about 52 milliseconds which is",
    "start": "109829",
    "end": "115490"
  },
  {
    "text": "suspiciously fast for a request that's supposedly going for me in England to the server in Russia and then all the",
    "start": "115490",
    "end": "122759"
  },
  {
    "text": "way to the ping back server in Ireland and then all the way back again and so I",
    "start": "122759",
    "end": "127920"
  },
  {
    "text": "decided to do a couple of trace routes the one on the Left simulates",
    "start": "127920",
    "end": "133740"
  },
  {
    "start": "131000",
    "end": "244000"
  },
  {
    "text": "a HTTP connection because it's a trace route to port 80 and as you can see this",
    "start": "133740",
    "end": "139700"
  },
  {
    "text": "connection is never getting on to the actual Internet it's being terminated inside my ISP whereas the HTTP",
    "start": "139700",
    "end": "148100"
  },
  {
    "text": "connection goes all the way to where the server is actually located in Russia you",
    "start": "148100",
    "end": "153540"
  },
  {
    "text": "can see that on the right and that is even more suspicious because it suggests",
    "start": "153540",
    "end": "158940"
  },
  {
    "text": "that the person who's doing the interception doesn't have their HTTP secret keys that would enable them to",
    "start": "158940",
    "end": "165090"
  },
  {
    "text": "actually intercept HTTPS safely and without notifying the user so it means this interception is going on probably",
    "start": "165090",
    "end": "172680"
  },
  {
    "text": "without the permission or knowledge of cloud mail government and also I found",
    "start": "172680",
    "end": "179070"
  },
  {
    "text": "that this was affecting not only me at work but also on my home connection so",
    "start": "179070",
    "end": "185520"
  },
  {
    "text": "this was affecting all consumer and commercial users of BT Broadband BT Broadband being the largest ISP in",
    "start": "185520",
    "end": "192330"
  },
  {
    "text": "England by quite a long way and I investigated this further and I found out what the purpose of this system was",
    "start": "192330",
    "end": "198720"
  },
  {
    "text": "and I found out that I could potentially you hijack the system using the",
    "start": "198720",
    "end": "204300"
  },
  {
    "text": "vulnerability in it and make alterations to the traffic of millions of BT users which would be kind of cool but that's",
    "start": "204300",
    "end": "210960"
  },
  {
    "text": "just a distraction from the question that we should be asking which is given that for many years I and many are the",
    "start": "210960",
    "end": "219330"
  },
  {
    "text": "British pen testers have been doing the security audits through an exploitable proxy system without ever realizing it",
    "start": "219330",
    "end": "227130"
  },
  {
    "text": "what else have we missed there was one other suspicious thing about this server",
    "start": "227130",
    "end": "233700"
  },
  {
    "text": "which was that that was a reverse DNS was hoped to predator door alias not BT dog coat UK which doesn't exactly",
    "start": "233700",
    "end": "241230"
  },
  {
    "text": "suggest this is a friendly kind of system so first I'll talk about how to",
    "start": "241230",
    "end": "248070"
  },
  {
    "start": "244000",
    "end": "281000"
  },
  {
    "text": "build a speculative attack pipeline then lets us efficiently hunt these systems",
    "start": "248070",
    "end": "253200"
  },
  {
    "text": "down and initiate a conversation with them after that I'll describe two key",
    "start": "253200",
    "end": "258450"
  },
  {
    "text": "types of attacks one focused on targeting front-end systems like reverse proxies by making the Miss route",
    "start": "258450",
    "end": "264120"
  },
  {
    "text": "requests and one focused on targeting back in the system like analytic systems where we have to",
    "start": "264120",
    "end": "269690"
  },
  {
    "text": "be a bit more inventive to actually get to a useful exploit after that I'll do a brief demo of one of the tools I'll be",
    "start": "269690",
    "end": "276080"
  },
  {
    "text": "releasing and then wrap up and take five minutes of questions the systems that",
    "start": "276080",
    "end": "283760"
  },
  {
    "text": "we'll be targeting are designed to remain invisible and as such the process",
    "start": "283760",
    "end": "289370"
  },
  {
    "text": "of finding and interacting with them is really important otherwise you just won't for even finding systems for the",
    "start": "289370",
    "end": "296240"
  },
  {
    "text": "purpose of this research I sent payloads designed to make vulnerable servers send a DNS or HTTP",
    "start": "296240",
    "end": "302419"
  },
  {
    "text": "query back to my server this approach to finding vulnerabilities has been so",
    "start": "302419",
    "end": "308270"
  },
  {
    "text": "effective in recent years that my boss recently coined an acronym for it to try getting more attention to it so we call",
    "start": "308270",
    "end": "315200"
  },
  {
    "text": "it Oh asked out-of-band application security testing and if I use that acronym now you know what I mean it's",
    "start": "315200",
    "end": "321169"
  },
  {
    "text": "just trying to find a vulnerability by sending a payload that will cause a ping back at the start of this research I had",
    "start": "321169",
    "end": "329390"
  },
  {
    "text": "absolutely no idea if anything was actually going to work and as such I injected payloads in the laziest way",
    "start": "329390",
    "end": "336110"
  },
  {
    "text": "possible I simply made a burp match interface rule that put a hard-coded payload in every request that got",
    "start": "336110",
    "end": "342470"
  },
  {
    "text": "proxied through book and then just browsed some websites and that found",
    "start": "342470",
    "end": "348020"
  },
  {
    "text": "quite a few interesting bits of behavior but it didn't get me much useful information because it didn't correlate",
    "start": "348020",
    "end": "354440"
  },
  {
    "text": "the paint back that my server received with the payload or the request that",
    "start": "354440",
    "end": "359720"
  },
  {
    "text": "caused the ping back so in many cases I couldn't even tell which website a ping back was coming from I thought I could",
    "start": "359720",
    "end": "365390"
  },
  {
    "text": "correlate it by looking at the time the request was sent and the time the ping back happened but that doesn't actually work in many cases for example what",
    "start": "365390",
    "end": "373460"
  },
  {
    "start": "369000",
    "end": "476000"
  },
  {
    "text": "we've got here is a server that for some mysterious reason it's decided to ping me once every 24 hours and it just kept",
    "start": "373460",
    "end": "381290"
  },
  {
    "text": "doing that for days and I was never able to find out what caused that behavior what's this then that was will actually",
    "start": "381290",
    "end": "387260"
  },
  {
    "text": "get anywhere useful with that so to fix this issue I won't collaborate everywhere which is",
    "start": "387260",
    "end": "392600"
  },
  {
    "text": "an open source burp suite extension which injects a number of unique being",
    "start": "392600",
    "end": "398390"
  },
  {
    "text": "back payloads into every request being proxied through and it uses those to automatically",
    "start": "398390",
    "end": "404050"
  },
  {
    "text": "correlate the requests with the response Oh with the pingback so even if you get",
    "start": "404050",
    "end": "409150"
  },
  {
    "text": "a ping back 12 hours after you send the payload it will still be able to link those together for you and give you some",
    "start": "409150",
    "end": "415420"
  },
  {
    "text": "information that's actually useful now that to work pretty well it found about",
    "start": "415420",
    "end": "421300"
  },
  {
    "text": "half the vulnerabilities that I'm going to show you in this presentation but I noticed on one site it was only finding",
    "start": "421300",
    "end": "427450"
  },
  {
    "text": "an issue intermittently and that was because they were using a round robin",
    "start": "427450",
    "end": "433180"
  },
  {
    "text": "DNS to point me to one of their five front-end load balances and only one of",
    "start": "433180",
    "end": "438550"
  },
  {
    "text": "their load balances was vulnerable so when you're targeting front-end systems you need to bear in mind that you need",
    "start": "438550",
    "end": "444910"
  },
  {
    "text": "to hit all of the systems rather than just an arbitrary one and to do that I switched using masscan and then",
    "start": "444910",
    "end": "451720"
  },
  {
    "text": "eventually switched using Z grab which is basically masscan but with more useful features for sending attacks the",
    "start": "451720",
    "end": "457990"
  },
  {
    "text": "websites so if you want to do a focused manual audit on a specific site",
    "start": "457990",
    "end": "464070"
  },
  {
    "text": "collaborate Everywhere is the best tool for the job but if you want to send payloads to thousands of different web",
    "start": "464070",
    "end": "470500"
  },
  {
    "text": "sites and spray them over someone's entire infrastructure Zed grabbed is the way to go so who did I target well I",
    "start": "470500",
    "end": "481930"
  },
  {
    "start": "476000",
    "end": "577000"
  },
  {
    "text": "targeted everyone that I could legally target which means every site that has a",
    "start": "481930",
    "end": "487510"
  },
  {
    "text": "bug bounty program that doesn't forbid automated testing and to identify them I",
    "start": "487510",
    "end": "492550"
  },
  {
    "text": "manually reviewed every single program on hacker one and bug route which was quite boring but at the end of that I",
    "start": "492550",
    "end": "500560"
  },
  {
    "text": "had a spreadsheet from which I could generate a regular expression that would match any domain name that was within",
    "start": "500560",
    "end": "507070"
  },
  {
    "text": "the scope of any bounty program that I could legally test I then combined that regex with rapid",
    "start": "507070",
    "end": "514300"
  },
  {
    "text": "evans project sonar database of all known host names and by combining those two I had a",
    "start": "514300",
    "end": "520990"
  },
  {
    "text": "short list of three million hosts that I could send payloads to they were all within scope of bug bounties and I",
    "start": "520990",
    "end": "526300"
  },
  {
    "text": "hadn't actually had to send any requests or do any DNS lookups myself that was over to about 50,000 active web servers",
    "start": "526300",
    "end": "534320"
  },
  {
    "text": "I initially populated this list of targets also using reverse DNS lookups",
    "start": "534320",
    "end": "540889"
  },
  {
    "text": "but I only do a little bit of a problem with that the problem is the google has",
    "start": "540889",
    "end": "546949"
  },
  {
    "text": "got a bug bounty program and some websites for whatever reason that like to spoof Google's reverse DNS they like",
    "start": "546949",
    "end": "554839"
  },
  {
    "text": "to pretend to be Google I'm not entirely sure why they do this but the result is that if you use if you trust reverse DNS",
    "start": "554839",
    "end": "562279"
  },
  {
    "text": "you end up sending payloads to people who are probably not expecting you to send payloads to them and might not be",
    "start": "562279",
    "end": "567649"
  },
  {
    "text": "too happy about it now you could argue that they're asking for it but in making",
    "start": "567649",
    "end": "573019"
  },
  {
    "text": "that reverse DNS setup but I wouldn't recommend that overall now if you're",
    "start": "573019",
    "end": "579139"
  },
  {
    "text": "gonna send in requests to 50,000 web servers you might as well make sure that it's optimized to hit as much attack",
    "start": "579139",
    "end": "584600"
  },
  {
    "text": "surface as possible one way to do that is using the mode transform directive for the cache control header which",
    "start": "584600",
    "end": "590959"
  },
  {
    "text": "instructs systems like reverse proxies not to rewrite the request in any way",
    "start": "590959",
    "end": "595970"
  },
  {
    "text": "that before passing it along because that might break the payload that you're sending also you could try resending",
    "start": "595970",
    "end": "603110"
  },
  {
    "text": "your payloads but using their exported proto header to pretend though you're using a protocol other than the one that",
    "start": "603110",
    "end": "608720"
  },
  {
    "text": "you're really using now which can also just cause unexpected scenarios and let",
    "start": "608720",
    "end": "614060"
  },
  {
    "text": "you hit code paths that most people never touch the end result of the setup",
    "start": "614060",
    "end": "621399"
  },
  {
    "text": "was that during this research whenever I had an idea for a new type of technique I could spend a couple of minutes",
    "start": "621399",
    "end": "628190"
  },
  {
    "text": "writing HTTP requests manually with that payload in it and then user draft us in",
    "start": "628190",
    "end": "633649"
  },
  {
    "text": "that 250-thousand web servers in the space of about five minutes and just collect the results that capability to",
    "start": "633649",
    "end": "640550"
  },
  {
    "text": "quickly try out ideas and then iteratively improve them is a large part of the reason why this research was so",
    "start": "640550",
    "end": "647269"
  },
  {
    "text": "successful okay that's enough about the tooling and now for some exploits so",
    "start": "647269",
    "end": "655579"
  },
  {
    "start": "649000",
    "end": "734000"
  },
  {
    "text": "first of all we're going to target things that sit in front of the application how we're going to try and trick them into routing requests to",
    "start": "655579",
    "end": "661939"
  },
  {
    "text": "internal services this services that are meant to be private so this is a type of server-side request",
    "start": "661939",
    "end": "667500"
  },
  {
    "text": "forgery but it's a lot more powerful than your rock than your run-of-the-mill",
    "start": "667500",
    "end": "672900"
  },
  {
    "text": "SSR F that's because we've got generally here got a huge amount of control over",
    "start": "672900",
    "end": "678600"
  },
  {
    "text": "the requests that we're sending to the internal service which makes it much easier to exploit internal services as",
    "start": "678600",
    "end": "684960"
  },
  {
    "text": "we'll see shortly the simplest way to make your request get miss routed is",
    "start": "684960",
    "end": "691440"
  },
  {
    "text": "simply to change the host header to where you want the request to get routed to this approach works on an amazing",
    "start": "691440",
    "end": "697320"
  },
  {
    "text": "number of sites now this technique is publicly known in some locations but",
    "start": "697320",
    "end": "703910"
  },
  {
    "text": "it's hugely underappreciated I can say that with confidence because using my",
    "start": "703910",
    "end": "711030"
  },
  {
    "text": "pipeline I just mentioned in the space of five minutes I was able to exploit 27",
    "start": "711030",
    "end": "716250"
  },
  {
    "text": "different Department of Defense servers a couple of Yahoo load balances my only",
    "start": "716250",
    "end": "721680"
  },
  {
    "text": "ISP by accident and also a Colombian RSP",
    "start": "721680",
    "end": "726780"
  },
  {
    "text": "that threw itself into the firing line by doing DNS poisoning on one of my targets so let's take a look at what the",
    "start": "726780",
    "end": "736350"
  },
  {
    "start": "734000",
    "end": "1154000"
  },
  {
    "text": "impact of this very simple mishap can be here I'm sending a request to one of",
    "start": "736350",
    "end": "741840"
  },
  {
    "text": "Yahoo's load balancers and I'm using the host header to trick them into routing it to port 8080 to on on a nearby IP so",
    "start": "741840",
    "end": "750780"
  },
  {
    "text": "the service I'm accessing that you can see in the response is not publicly accessible now judging by the repeated",
    "start": "750780",
    "end": "757650"
  },
  {
    "text": "are unknown command lines in the response this service is not talking HTTP it's using some kind of line based",
    "start": "757650",
    "end": "765270"
  },
  {
    "text": "protocol and is therefore interpreting every HTTP header as a separate command",
    "start": "765270",
    "end": "770570"
  },
  {
    "text": "other than that I had no real idea what the system was but I had an idea to find",
    "start": "770570",
    "end": "777150"
  },
  {
    "text": "out I changed the HTTP method from get to help how amazingly that actually",
    "start": "777150",
    "end": "784260"
  },
  {
    "text": "worked so the service was like hi i'm i'm an apache traffic overseer which",
    "start": "784260",
    "end": "790050"
  },
  {
    "text": "means i'm responsible for distributing the configuration of probably a large",
    "start": "790050",
    "end": "795090"
  },
  {
    "text": "number of Yahoo's front-end load balance and also here's how you can change configuration settings on me now know",
    "start": "795090",
    "end": "804389"
  },
  {
    "text": "that if this was no more server side request forgery it would be impossible to exploit this service because to get",
    "start": "804389",
    "end": "812279"
  },
  {
    "text": "in second man's we need to send requests to have white space in them and you can't do that with a normal server side",
    "start": "812279",
    "end": "818459"
  },
  {
    "text": "request forgery but because we can send pretty much whatever the quest we like it's actually pretty easy to exploit",
    "start": "818459",
    "end": "824670"
  },
  {
    "text": "this system so here you can see at the top I'm saying what is the value of",
    "start": "824670",
    "end": "829680"
  },
  {
    "text": "proxy configured or alarm email and they're like hey yep that's set to nobody at Yahoo Inc com perfect and by",
    "start": "829680",
    "end": "838410"
  },
  {
    "text": "setting variables I could potentially whitelist to my own external IP address",
    "start": "838410",
    "end": "843540"
  },
  {
    "text": "to give me permission to push items into their cache and overwrite items in all of their caches which would give me the",
    "start": "843540",
    "end": "850589"
  },
  {
    "text": "ability to deface a good number of the Apple services also I could enable Sox",
    "start": "850589",
    "end": "856889"
  },
  {
    "text": "Fox seeing on all of their load balancers thereby giving me full IP level access to their internal network",
    "start": "856889",
    "end": "863130"
  },
  {
    "text": "which would be pretty nice disadvantage with that approach is that it would also give everybody else full tcp/ip access",
    "start": "863130",
    "end": "869639"
  },
  {
    "text": "to their network which would make things pretty short-lived I think I reported",
    "start": "869639",
    "end": "874889"
  },
  {
    "text": "this issue to Yahoo and got a fifteen thousand dollar payout for it so that",
    "start": "874889",
    "end": "879990"
  },
  {
    "text": "was pretty cool and I found this issue using thank you there's more where that",
    "start": "879990",
    "end": "889290"
  },
  {
    "text": "came from I found this issue using collaborated collaborator everywhere and when I made",
    "start": "889290",
    "end": "894750"
  },
  {
    "text": "that and they fixed it pretty fast and when I made that pipeline I mentioned a",
    "start": "894750",
    "end": "900779"
  },
  {
    "text": "couple of weeks later I found another server with the same vulnerability so I got another five thousand for that for",
    "start": "900779",
    "end": "906300"
  },
  {
    "text": "twenty thousand total which was a really good start to this research as mentioned",
    "start": "906300",
    "end": "913170"
  },
  {
    "text": "the same technique also worked on my ISP and I could use it to make this set of",
    "start": "913170",
    "end": "920790"
  },
  {
    "text": "proxy servers route my request to their own administration interface and if I could prove force the password on that",
    "start": "920790",
    "end": "927269"
  },
  {
    "text": "or he was using default credentials they don't have a bug bound program so I don't actually know if they",
    "start": "927269",
    "end": "932730"
  },
  {
    "text": "were I could I could use rewrite rules to like do rewrite the requests of",
    "start": "932730",
    "end": "938670"
  },
  {
    "text": "millions of BT users which would be quite nice but what I really wanted to know was what is the point of this",
    "start": "938670",
    "end": "944790"
  },
  {
    "text": "interception system was what is it doing and to try and find out I did a trace",
    "start": "944790",
    "end": "950820"
  },
  {
    "text": "view of the whole ipv4 space well the tto of ten which meant the packet never left to my ISPs infrastructure and that",
    "start": "950820",
    "end": "957810"
  },
  {
    "text": "showed me the roughly 5% of website IP addresses had been blacklisted and would",
    "start": "957810",
    "end": "963300"
  },
  {
    "text": "be routed into this proxy system there's an interesting side effect of that which",
    "start": "963300",
    "end": "968550"
  },
  {
    "text": "is that if your website hypee address is on this blacklist perhaps because you were just using cloud hosting and you've got no control",
    "start": "968550",
    "end": "975690"
  },
  {
    "text": "over what IP address is you're on all traffic from all BT users which is the",
    "start": "975690",
    "end": "981060"
  },
  {
    "text": "majority of England is going to come from about five IP addresses and that",
    "start": "981060",
    "end": "986490"
  },
  {
    "text": "means if you're doing any IP based authentication it's gonna fail horribly and also if you decide to IP ban any of",
    "start": "986490",
    "end": "993120"
  },
  {
    "text": "these users for bad behavior you might end up banning a substantial part of England which wouldn't be much good",
    "start": "993120",
    "end": "999290"
  },
  {
    "text": "anyway after your traffic if your request is to one of these blacklisted by piece it gets routed into this pool",
    "start": "999290",
    "end": "1005750"
  },
  {
    "text": "of proxies and then they apply a black list of hosts names and if you're trying to access a dodgy hostname like icefilms",
    "start": "1005750",
    "end": "1011870"
  },
  {
    "text": "thought info you see this message which I'm sure none of the upstanding English people in the audience have ever seen",
    "start": "1011870",
    "end": "1017510"
  },
  {
    "text": "before it says access to the websites listed on this page has been blocked",
    "start": "1017510",
    "end": "1022640"
  },
  {
    "text": "pursuant to orders of the High Court although of course it's pretty easy to bypass so it looks like this system is",
    "start": "1022640",
    "end": "1031040"
  },
  {
    "text": "being used to prevent copyright infringement but when I reported the admin access vulnerability to BT I got a",
    "start": "1031040",
    "end": "1038750"
  },
  {
    "text": "little bit of backstory this system was actually originally built as path cleaner feet which is a government",
    "start": "1038750",
    "end": "1045949"
  },
  {
    "text": "initiative to block access to images of child abuse it's just that after it was made here was quickly repurposed to",
    "start": "1045950",
    "end": "1053060"
  },
  {
    "text": "target copyright abuse a while later I send a payload to a different Russian",
    "start": "1053060",
    "end": "1059690"
  },
  {
    "text": "application this time it was vk.com and once again got a ping back from an unexpected location this time it was",
    "start": "1059690",
    "end": "1065700"
  },
  {
    "text": "from Columbia nice ISP called Metro tell and because they're not my ISP I knew",
    "start": "1065700",
    "end": "1071760"
  },
  {
    "text": "that to get my payload to go to their server they had to have done DNS poisoning and I was using rapid sevens",
    "start": "1071760",
    "end": "1077700"
  },
  {
    "text": "DNS database so I contacted rapid7 and they hopefully identified the",
    "start": "1077700",
    "end": "1083070"
  },
  {
    "text": "responsible DNS server and then I did lookups for the Alexa top million through this server to figure out who",
    "start": "1083070",
    "end": "1090030"
  },
  {
    "text": "they were targeting that showed that they were mostly focused on image hosts and social networks and if you try to",
    "start": "1090030",
    "end": "1096600"
  },
  {
    "text": "hit some of those you would gain once that you just get blocked and it would say access to this has been blocked due",
    "start": "1096600",
    "end": "1102990"
  },
  {
    "text": "to images of child abuse along with this logo here however once again that's not",
    "start": "1102990",
    "end": "1108780"
  },
  {
    "text": "all this system was fought because they were also poisoned the DNS for BBC dog",
    "start": "1108780",
    "end": "1113940"
  },
  {
    "text": "code or UK which is a news website and I don't think you'll find many dodgy images on that site which raises the",
    "start": "1113940",
    "end": "1121110"
  },
  {
    "text": "question of why they want to VU all traffic to that site through their proxies unfortunately finding out why is",
    "start": "1121110",
    "end": "1128250"
  },
  {
    "text": "quite difficult they weren't doing any kind of injection or rewriting on all all requests as far as I could tell so",
    "start": "1128250",
    "end": "1136320"
  },
  {
    "text": "they're either targeting specific articles and maybe blocking access to or changing the content of those or maybe",
    "start": "1136320",
    "end": "1142200"
  },
  {
    "text": "they're just passively watching maybe they simply want to know which articles on the BBC you're actually meeting so",
    "start": "1142200",
    "end": "1147420"
  },
  {
    "text": "they can pass that information along to someone now although the payload that",
    "start": "1147420",
    "end": "1156840"
  },
  {
    "text": "I've shown you is really very simple thinking you can reliably predict what",
    "start": "1156840",
    "end": "1162060"
  },
  {
    "text": "will happen when you send that payload it is always a mistake I found seven Yahoo servers that would take the host",
    "start": "1162060",
    "end": "1169260"
  },
  {
    "text": "header that I gave in this case recap not me and they would route the request to outage dot that host header and I",
    "start": "1169260",
    "end": "1175740"
  },
  {
    "text": "would also put the host in the path twice now I've got no idea what the",
    "start": "1175740",
    "end": "1182460"
  },
  {
    "text": "point of a is but luckily all I need to know is how to exploit it and as presented there it's not much use right",
    "start": "1182460",
    "end": "1189180"
  },
  {
    "text": "because you're just going to get a 404 from whatever internal server you here fortunately this the vulnerable service",
    "start": "1189180",
    "end": "1196790"
  },
  {
    "text": "that was rewriting the request was incredibly tolerant of what you put in the host header so if you sent the",
    "start": "1196790",
    "end": "1203090"
  },
  {
    "text": "following host header it would rewrite it as you see on the right and that request to when the back in the server",
    "start": "1203090",
    "end": "1208760"
  },
  {
    "text": "gets it will get normalized to enter a request to the web loop so we can",
    "start": "1208760",
    "end": "1214070"
  },
  {
    "text": "actually fetch pretty much arbitary stuff using this technique that got an another 5,000 of your home to be honest",
    "start": "1214070",
    "end": "1221270"
  },
  {
    "text": "I'm not sure why the bounty values from Yahoo varied so much they seem to be a little bit random but that the total",
    "start": "1221270",
    "end": "1227870"
  },
  {
    "text": "amount was a good amount of money so I'm not really complaining anyway the moral of this issue is that",
    "start": "1227870",
    "end": "1235100"
  },
  {
    "text": "on your on your server that's receiving pingbacks you need to use wildcard dearness to make sure that you receive",
    "start": "1235100",
    "end": "1241160"
  },
  {
    "text": "everything that's been triggered by your payloads know this request may look",
    "start": "1241160",
    "end": "1248420"
  },
  {
    "text": "familiar I used it back in 2013 to poison Django's password reset emails but here",
    "start": "1248420",
    "end": "1255080"
  },
  {
    "text": "I found this certain US military server which would move the request to wherever",
    "start": "1255080",
    "end": "1260420"
  },
  {
    "text": "I specified in the request line so I think they had a white list of acceptable hosts but the request line",
    "start": "1260420",
    "end": "1266480"
  },
  {
    "text": "takes priority however I had a little bit of an issue here which is that I",
    "start": "1266480",
    "end": "1272170"
  },
  {
    "text": "wanted to prove I could access an internal service to show that this issue had some kind of severity but I was too",
    "start": "1272170",
    "end": "1279110"
  },
  {
    "text": "nervous to do a proper internal port scan on a Department of Defense server so instead I decided to Google a bit and",
    "start": "1279110",
    "end": "1286490"
  },
  {
    "text": "see if I could find anything useful and I found an amazing forum post on defense of caring comm it says if you're looking",
    "start": "1286490",
    "end": "1293930"
  },
  {
    "text": "at this and I'm not in the military or DoD then this won't mean anything to you nor will you be able to access it and",
    "start": "1293930",
    "end": "1299270"
  },
  {
    "text": "then it linked a couple of internal Department of Defense websites and sure enough using this technique I could",
    "start": "1299270",
    "end": "1305510"
  },
  {
    "text": "access them so that was handy I think the mall here is number one I if you can",
    "start": "1305510",
    "end": "1313340"
  },
  {
    "text": "of avoid during a port scan of someone's internal network I would recommend doing so people can get quite twitchy about",
    "start": "1313340",
    "end": "1320720"
  },
  {
    "text": "that Yahoo's certainly did and also the lord of the target company",
    "start": "1320720",
    "end": "1326600"
  },
  {
    "text": "less likely is that you actually need to because people are just leaking tons of useful stuff online now although the",
    "start": "1326600",
    "end": "1333860"
  },
  {
    "start": "1332000",
    "end": "1481000"
  },
  {
    "text": "network diagram only shows one proxy server it's possible that some people",
    "start": "1333860",
    "end": "1339470"
  },
  {
    "text": "like to chain proxy servers and if you want to target the server in the middle of a chain that can make life a bit",
    "start": "1339470",
    "end": "1345410"
  },
  {
    "text": "difficult because your payload is likely to get rejected by the first proxy in the chain for example in caps Allah uses",
    "start": "1345410",
    "end": "1351830"
  },
  {
    "text": "the host header to work out which of their clients to route the quests onto so if you try the normal payload that I showed at the start it will just get",
    "start": "1351830",
    "end": "1358130"
  },
  {
    "text": "dropped fortunately in caps Allah is incredibly tolerant about what they",
    "start": "1358130",
    "end": "1363590"
  },
  {
    "text": "allow in the host header basically they ignore everything that comes after the colon in the request so you can send a",
    "start": "1363590",
    "end": "1370220"
  },
  {
    "text": "request like the one shown there and encapsulated will route on to the target and then the target or a particular",
    "start": "1370220",
    "end": "1376880"
  },
  {
    "text": "target that I found in this case would rewrite that as a URL like so and it",
    "start": "1376880",
    "end": "1382190"
  },
  {
    "text": "would end up getting routed to where by choice so even though that target hadn't captured in front of it with a bit of",
    "start": "1382190",
    "end": "1387380"
  },
  {
    "text": "creativity you can get around that and still get your server side request forgery this adds a slightly cool side",
    "start": "1387380",
    "end": "1394250"
  },
  {
    "text": "effect which is because the payload cause the backend to connect directly to my server that told me exactly where the",
    "start": "1394250",
    "end": "1401030"
  },
  {
    "text": "backend was and off from that point I could speak directly to the backend and just and just avoiding capsuleer",
    "start": "1401030",
    "end": "1407000"
  },
  {
    "text": "entirely so although this isn't strictly a vulnerability in encapsulator it's",
    "start": "1407000",
    "end": "1413690"
  },
  {
    "text": "still probably something they might want to think about fixing these vulnerabilities aren't just caused by",
    "start": "1413690",
    "end": "1421039"
  },
  {
    "text": "misconfigurations what we've got here is some code that New Relic had on their main on their",
    "start": "1421039",
    "end": "1427460"
  },
  {
    "text": "main official web site and well it probably looks absolutely fine to you it",
    "start": "1427460",
    "end": "1433460"
  },
  {
    "text": "does tomato to be honest it just takes the user supplied llamó and it over",
    "start": "1433460",
    "end": "1439190"
  },
  {
    "text": "writes the host and the port specified in that URL with a hard-coded one of the",
    "start": "1439190",
    "end": "1444950"
  },
  {
    "text": "internal server that they want to root your request to unfortunately for New Relic they were using the Apache HTTP",
    "start": "1444950",
    "end": "1451789"
  },
  {
    "text": "components library for their server and this server fails to require that paths",
    "start": "1451789",
    "end": "1457520"
  },
  {
    "text": "start with a forward slash so that means if you send a malformed illegal HTTP request like that then",
    "start": "1457520",
    "end": "1465510"
  },
  {
    "text": "their code rewrites it like that and once again they're accessing a server of my choice with a username of back-end",
    "start": "1465510",
    "end": "1473760"
  },
  {
    "text": "server so this got me access to new relics internal network which had some",
    "start": "1473760",
    "end": "1479519"
  },
  {
    "text": "amazing stuff on it for a start it had some incredible developer in jokes",
    "start": "1479519",
    "end": "1484620"
  },
  {
    "start": "1481000",
    "end": "1563000"
  },
  {
    "text": "such as this page which was blasting out music and had marquees and everything they also had some administration panels",
    "start": "1484620",
    "end": "1491610"
  },
  {
    "text": "with no authentication on them which was cool now unfortunately New Relic don't",
    "start": "1491610",
    "end": "1497909"
  },
  {
    "text": "pay cash bounties but to their credit they patch this issue really quite fast on a public holiday and they also",
    "start": "1497909",
    "end": "1503880"
  },
  {
    "text": "reported this problem with this problem back to apache HTTP components where",
    "start": "1503880",
    "end": "1509549"
  },
  {
    "text": "it's now been fixed so if you're using that library then you don't need to be",
    "start": "1509549",
    "end": "1514710"
  },
  {
    "text": "panicking right now as long as you're using the latest version of fortunately for me this technique also works on 17",
    "start": "1514710",
    "end": "1521700"
  },
  {
    "text": "different Yahoo servers so I got another $8,000 now that made a total of of",
    "start": "1521700",
    "end": "1531470"
  },
  {
    "text": "33,000 which is how much I enter in bounties during this research and you",
    "start": "1531470",
    "end": "1537210"
  },
  {
    "text": "might be wondering what happened to that money now when I started this research I had to deal with my company that any",
    "start": "1537210",
    "end": "1544500"
  },
  {
    "text": "bounties I owned would get spent on beer however we were fairly small company in",
    "start": "1544500",
    "end": "1552899"
  },
  {
    "text": "spending thirty two thousand dollars on beer was looking like it was going to be quite challenging so we gave the",
    "start": "1552899",
    "end": "1559529"
  },
  {
    "text": "majority to charity and spent a small amount of it on beer",
    "start": "1559529",
    "end": "1564259"
  },
  {
    "start": "1563000",
    "end": "1704000"
  },
  {
    "text": "so possibly the strangest behavior that I saw during this research was courtesy",
    "start": "1570490",
    "end": "1575990"
  },
  {
    "text": "of our website called called global eeks which is a bit like WikiLeaks except",
    "start": "1575990",
    "end": "1581750"
  },
  {
    "text": "actually legitimate and so what I found these guys was if I sent them the",
    "start": "1581750",
    "end": "1587930"
  },
  {
    "text": "following HTTP request which is malformed because it doesn't start with a forward slash then I got about 15 DNS",
    "start": "1587930",
    "end": "1594980"
  },
  {
    "text": "lookups all in mixed case coming from different IP addresses which is",
    "start": "1594980",
    "end": "1600410"
  },
  {
    "text": "definitely not what I expected to happen now eventually due to the nature of the",
    "start": "1600410",
    "end": "1606590"
  },
  {
    "text": "site and the fact that all the IP addresses the lookups were coming from were different I had an idea as to what",
    "start": "1606590",
    "end": "1612980"
  },
  {
    "text": "the cause of this behavior might be because this is a whistleblowing website they want to hide the physical location",
    "start": "1612980",
    "end": "1619760"
  },
  {
    "text": "of their back-end server to stop like governments from raiding it in that kind of stuff so they connect to it as a tor",
    "start": "1619760",
    "end": "1627260"
  },
  {
    "text": "hidden service so what I've got is server side request forgery through talk which is quite interesting from an",
    "start": "1627260",
    "end": "1635990"
  },
  {
    "text": "exploitation perspective so it going through tor is the reason that all the IP addresses of the lookups are",
    "start": "1635990",
    "end": "1642260"
  },
  {
    "text": "different they're coming from different exit nodes and also the mixed case DNS lookups are the result of a fairly",
    "start": "1642260",
    "end": "1647870"
  },
  {
    "text": "obscure mechanism that tor users to try and increase the entropy in DNS by",
    "start": "1647870",
    "end": "1653390"
  },
  {
    "text": "making the requests a mixed case so the impact of this is hard to qualify",
    "start": "1653390",
    "end": "1658490"
  },
  {
    "text": "because I can't access the internal network it's definitely server side request forgery but I'm accessing whatever I try",
    "start": "1658490",
    "end": "1665510"
  },
  {
    "text": "and access through tor what I can do though is get a decent expansion of",
    "start": "1665510",
    "end": "1671960"
  },
  {
    "text": "attack surface because I can make their client their talk line to connect directly to my server and if I've got a",
    "start": "1671960",
    "end": "1678830"
  },
  {
    "text": "vulnerability for a tall client then that could be quite useful also I can potentially use it to obscure and attack",
    "start": "1678830",
    "end": "1686360"
  },
  {
    "text": "on a target because I can use them as a hop and make them route my payload through tor to my target and that means",
    "start": "1686360",
    "end": "1692300"
  },
  {
    "text": "even if the attack gets traced backwards through tor they'll just end up looking at this highly suspicious global links",
    "start": "1692300",
    "end": "1698540"
  },
  {
    "text": "website that probably doesn't keep any logs and won't be able to figure out that it was me",
    "start": "1698540",
    "end": "1704380"
  },
  {
    "start": "1704000",
    "end": "1734000"
  },
  {
    "text": "right now let's talk about exploiting helper systems unlike miss routing",
    "start": "1704380",
    "end": "1710480"
  },
  {
    "text": "attacks with helper systems causing pink backs is often really easy but",
    "start": "1710480",
    "end": "1716470"
  },
  {
    "text": "exploiting the systems in a meaningful way it can be quite hard that's because a server-side request forgery we found",
    "start": "1716470",
    "end": "1723080"
  },
  {
    "text": "in back-end systems is normally blind which means we can't see the result from the internal requests we've triggered",
    "start": "1723080",
    "end": "1729470"
  },
  {
    "text": "which means we can't adapt our attacks based on what we see this research",
    "start": "1729470",
    "end": "1735350"
  },
  {
    "start": "1734000",
    "end": "1799000"
  },
  {
    "text": "started on a really old website that had an amazing sentence on it it said the extract profile header should contain a",
    "start": "1735350",
    "end": "1742460"
  },
  {
    "text": "URL pointing to an XML document that specifies the features of a mobile device so it specifies the specification",
    "start": "1742460",
    "end": "1750350"
  },
  {
    "text": "gives you two amazingly 5s pieces of functionality one you've got to fetch a user supplied URL - you've got a pause",
    "start": "1750350",
    "end": "1757010"
  },
  {
    "text": "the resulting untrusted XML file and I immediately try this out on a bunch of websites but it didn't work on any of",
    "start": "1757010",
    "end": "1764240"
  },
  {
    "text": "them sadly probably cuz it's so old so I just tweeted it and then I got a ping",
    "start": "1764240",
    "end": "1770390"
  },
  {
    "text": "back from Facebook it turns out Facebook does support this but they fetched the",
    "start": "1770390",
    "end": "1775820"
  },
  {
    "text": "URL you supply about 26 hours after you send the request unfortunately their",
    "start": "1775820",
    "end": "1783260"
  },
  {
    "text": "implementation of this and their XML parsing seems to be secure as far as I",
    "start": "1783260",
    "end": "1788270"
  },
  {
    "text": "can tell although the fact there was a 26 hour time like that between each attack made it really tedious so I might",
    "start": "1788270",
    "end": "1794900"
  },
  {
    "text": "miss something so if you want to try and hack the hat feel free fortunately there",
    "start": "1794900",
    "end": "1800330"
  },
  {
    "start": "1799000",
    "end": "1888000"
  },
  {
    "text": "are many other useful ways to trigger pingbacks from helper systems that are actually effective are widely supported",
    "start": "1800330",
    "end": "1808150"
  },
  {
    "text": "through a fervor header is the most popular one a huge number of websites",
    "start": "1808150",
    "end": "1813890"
  },
  {
    "text": "you will not believe how many websites do this will fetch whatever URL you specify in the refer header",
    "start": "1813890",
    "end": "1819440"
  },
  {
    "text": "I'm not hundred percent sure why they're doing it by assume it's for some kind of analytics purpose so that's probably the",
    "start": "1819440",
    "end": "1828320"
  },
  {
    "text": "most effective way of tricking pingbacks and back-end systems but also you'll be familiar with the x-forwarded-for header",
    "start": "1828320",
    "end": "1833930"
  },
  {
    "text": "you've probably used it to spoof your IP it also supports host names and if you",
    "start": "1833930",
    "end": "1839160"
  },
  {
    "text": "specify a host name in there then you can use the fact that you did or didn't receive a DNS lookup for that host name",
    "start": "1839160",
    "end": "1845309"
  },
  {
    "text": "to work out whether they're trusting this header and therefore whether it's worth using exploits that try and take",
    "start": "1845309",
    "end": "1851040"
  },
  {
    "text": "advantage of this and similarly the slightly more obscure variants to client IP and excellent ex via IP can be used",
    "start": "1851040",
    "end": "1858270"
  },
  {
    "text": "in exactly the same way also for some",
    "start": "1858270",
    "end": "1863309"
  },
  {
    "text": "reason capsular will fetch any URL that you specify provided that you specify it",
    "start": "1863309",
    "end": "1870090"
  },
  {
    "text": "with the same parameter name twice I have no idea why they're doing that I only found it by accident because a bug",
    "start": "1870090",
    "end": "1876179"
  },
  {
    "text": "in my code meant that URL famis has got specified twice and I don't know if it's exploitable because they don't have a",
    "start": "1876179",
    "end": "1882299"
  },
  {
    "text": "bug bounty program so I'm not allowed to actually try and find out but there you go so say that a site is stretching the URL",
    "start": "1882299",
    "end": "1890040"
  },
  {
    "start": "1888000",
    "end": "1952000"
  },
  {
    "text": "specified in them afirma header I so what what can you do well one option is to try an off-the-shelf exploit for",
    "start": "1890040",
    "end": "1895410"
  },
  {
    "text": "example you can make them connect to your server and run responder on your server which is a wonderful piece of",
    "start": "1895410",
    "end": "1901110"
  },
  {
    "text": "code that tries to trick connecting clients into linking credentials to your server I out on all of my targets it",
    "start": "1901110",
    "end": "1909270"
  },
  {
    "text": "didn't work on any of them but while I was trying it out some random guy with the vulnerability scanner hit my server",
    "start": "1909270",
    "end": "1914520"
  },
  {
    "text": "and did get exploited so I still count that as a kind of win you can also trow",
    "start": "1914520",
    "end": "1921360"
  },
  {
    "text": "a pacemaker which is and which is a Python the fake as a cell server that",
    "start": "1921360",
    "end": "1926820"
  },
  {
    "text": "tries the lesser-used client hardly an attack on connecting clients and I did",
    "start": "1926820",
    "end": "1932610"
  },
  {
    "text": "work on one of my targets so honest I thought I had blind server side request forgery on I was able to make them",
    "start": "1932610",
    "end": "1938520"
  },
  {
    "text": "connect to my server and rida memory from their back-end which was quite cool also you can do you can use tools like",
    "start": "1938520",
    "end": "1946549"
  },
  {
    "text": "tough to do tcp/ip fingerprinting and they're like but that's a bit boring why",
    "start": "1946549",
    "end": "1953040"
  },
  {
    "start": "1952000",
    "end": "2066000"
  },
  {
    "text": "off-the-shelf exploits only get you so far what else can you do well you can do more Oh asked so you will have found",
    "start": "1953040",
    "end": "1960750"
  },
  {
    "text": "this behavior using a pingback technique but that doesn't mean you have to stop using those techniques you can take the",
    "start": "1960750",
    "end": "1966600"
  },
  {
    "text": "latest struts to remote code execution the week and revite the exploit so it triggers a ping back and then make their",
    "start": "1966600",
    "end": "1972450"
  },
  {
    "text": "afirma caller spray that payload across their own internal network and maybe you'll get some shouts even better some",
    "start": "1972450",
    "end": "1980609"
  },
  {
    "text": "of these clients that fetch the referrer vendor the page that they fetch using",
    "start": "1980609",
    "end": "1986070"
  },
  {
    "text": "phantom Jes or the like and that means that we can make them spray a cross-site",
    "start": "1986070",
    "end": "1991080"
  },
  {
    "text": "scripting payload across their own internal network and if that works then",
    "start": "1991080",
    "end": "1996269"
  },
  {
    "text": "we can inject a beef hook onto that site and we've got full access like persistent access to an internal website",
    "start": "1996269",
    "end": "2003049"
  },
  {
    "text": "which is pretty nice so I've decided to dub this blind reflected server-side XSS",
    "start": "2003049",
    "end": "2008619"
  },
  {
    "text": "also depending on how they implement cross protocol access restrictions in",
    "start": "2008619",
    "end": "2015229"
  },
  {
    "text": "this thick line that they've been doing pages with you can potentially get XSS in local files like Fox elf environment",
    "start": "2015229",
    "end": "2023109"
  },
  {
    "text": "that can mean if you can pull that off that can mean that you can potentially use javascript in a local file like that",
    "start": "2023109",
    "end": "2030169"
  },
  {
    "text": "to read files from their file system on their server which is once again pretty nice in fact if they're rendering there",
    "start": "2030169",
    "end": "2040159"
  },
  {
    "text": "are loads of interesting things and loads of questions that it rates its for example do they even enforce the same",
    "start": "2040159",
    "end": "2045349"
  },
  {
    "text": "origin policy because some of them don't and that means you can basically use them as a permanent proxy with the right JavaScript code also maybe you can open",
    "start": "2045349",
    "end": "2053240"
  },
  {
    "text": "a pop-up that subsequently won't get closed giving yourself persistent",
    "start": "2053240",
    "end": "2058908"
  },
  {
    "text": "JavaScript execution on their server and you know what plugins do they support that could be interesting to answer",
    "start": "2058909",
    "end": "2065358"
  },
  {
    "text": "these questions my colleague Gareth Hayes wrote a tool called hack ability this is a website that you can connect",
    "start": "2065359",
    "end": "2072919"
  },
  {
    "start": "2066000",
    "end": "2142000"
  },
  {
    "text": "you in a browser or anything that will render a webpage and it will perform tests to try and answer these questions",
    "start": "2072919",
    "end": "2079398"
  },
  {
    "text": "for you it will show you the answers visually and it will also trigger",
    "start": "2079399",
    "end": "2085579"
  },
  {
    "text": "requests to the server so even if this is a blind server side request forgery vulnerability that you've got you can just look in your server logs and see",
    "start": "2085579",
    "end": "2092148"
  },
  {
    "text": "what the results of these tests are with this particular example I've pointed",
    "start": "2092149",
    "end": "2097900"
  },
  {
    "text": "parity at this which is the second most popular Ethan client most notable because last week",
    "start": "2097900",
    "end": "2104369"
  },
  {
    "text": "someone hacked it and stole 30 million dollars worth of beef earring using it and it integrates into a web browser and",
    "start": "2104369",
    "end": "2110760"
  },
  {
    "text": "what hack ability has spotted here is some interesting objects in the JavaScript environment so these are",
    "start": "2110760",
    "end": "2117480"
  },
  {
    "text": "objects that are not present in a normal browser environment which strongly suggests that parity itself has injected",
    "start": "2117480",
    "end": "2123510"
  },
  {
    "text": "them and sure enough using those you can do things like you can get the current",
    "start": "2123510",
    "end": "2128940"
  },
  {
    "text": "uses he theorem wallet my ID and potentially see what balance they have",
    "start": "2128940",
    "end": "2134250"
  },
  {
    "text": "in that wallet and also initiate transactions and other kinds of interesting stuff ok it's time for one",
    "start": "2134250",
    "end": "2144030"
  },
  {
    "start": "2142000",
    "end": "2199000"
  },
  {
    "text": "final exploit this one's my favorite I've got the best the last here I sent",
    "start": "2144030",
    "end": "2149220"
  },
  {
    "text": "that payload that I showed you right at the start but the request they didn't get Miss routed it got routed correctly",
    "start": "2149220",
    "end": "2155119"
  },
  {
    "text": "but several seconds after I sent it I received some attempts to request",
    "start": "2155119",
    "end": "2161580"
  },
  {
    "text": "certain resources for my server and I confirmed if I try to load a history of blimps page on this military website and",
    "start": "2161580",
    "end": "2169770"
  },
  {
    "text": "on why is this slyly then the server would try to grab a picture of a blimp from my server which is pretty weird I",
    "start": "2169770",
    "end": "2178109"
  },
  {
    "text": "wonder if we can exploit that it's obvious that well the only explanation for this is that there's some kind of",
    "start": "2178109",
    "end": "2184940"
  },
  {
    "text": "reverse proxy some kind of caching reverse proxy that's scanning the",
    "start": "2184940",
    "end": "2190170"
  },
  {
    "text": "sponsors from the application looking for resource import statements like image source equals and is then fetching",
    "start": "2190170",
    "end": "2195450"
  },
  {
    "text": "those presumably so it can cache it so",
    "start": "2195450",
    "end": "2200570"
  },
  {
    "start": "2199000",
    "end": "2275000"
  },
  {
    "text": "maybe I can send a request to the application that triggers a response to me that makes the reverse proxy fetch an",
    "start": "2200570",
    "end": "2208910"
  },
  {
    "text": "internal URL that I don't have access to and cache the response and then I can just grab it out the cache hopefully so",
    "start": "2208910",
    "end": "2218250"
  },
  {
    "text": "I found some some normal reflected XSS in the target and I used it to inject",
    "start": "2218250",
    "end": "2223890"
  },
  {
    "text": "the following the spots so from the proxies point of view this is definitely",
    "start": "2223890",
    "end": "2229290"
  },
  {
    "text": "a static image import I'm using the image source equals state and the foil name ends in a dot jpg but",
    "start": "2229290",
    "end": "2236270"
  },
  {
    "text": "from the backend the server's point of view this is a request to the root of a",
    "start": "2236270",
    "end": "2241730"
  },
  {
    "text": "PHP application so the proxy saw that response that I injected through XSS",
    "start": "2241730",
    "end": "2247640"
  },
  {
    "text": "they fetch that euro and they cashed it and then I was able to grab that out of the cache so the key problem here is",
    "start": "2247640",
    "end": "2256190"
  },
  {
    "text": "that we've just got a foxy that's really enthusiastic it will cache anything it sees regardless of what the main it's on",
    "start": "2256190",
    "end": "2261589"
  },
  {
    "text": "and it has no concept of things that should be internally accessible and things they should not okay looks like",
    "start": "2261589",
    "end": "2270770"
  },
  {
    "text": "it's time for a brief demo I'm going to",
    "start": "2270770",
    "end": "2276380"
  },
  {
    "start": "2275000",
    "end": "2328000"
  },
  {
    "text": "demo collaborate it everywhere so I'm just gonna enable that okay it works",
    "start": "2276380",
    "end": "2289400"
  },
  {
    "text": "good so you you can see here it's worked out what my IP address is",
    "start": "2289400",
    "end": "2296390"
  },
  {
    "text": "that's because sometimes when you're browsing your browser will cause interactions and if you don't realize",
    "start": "2296390",
    "end": "2302720"
  },
  {
    "text": "that Zuko's and them you can get very excited before you found out found out that you haven't really achieved anything whatsoever so now I'm gonna",
    "start": "2302720",
    "end": "2309079"
  },
  {
    "text": "load Firefox and it's gonna ping open a bunch of websites please no I'm not",
    "start": "2309079",
    "end": "2314299"
  },
  {
    "text": "demonstrating vulnerabilities in these websites I'm just demonstrating interesting behavior in these websites",
    "start": "2314299",
    "end": "2320140"
  },
  {
    "text": "as far as I know none of these issues that I'm none of these websites have exploitable issues I mentioned Facebook",
    "start": "2320140",
    "end": "2329420"
  },
  {
    "start": "2328000",
    "end": "2335000"
  },
  {
    "text": "but that one's gonna happen in 26 hours times so you're not actually gonna see that one so if we look in burp then you",
    "start": "2329420",
    "end": "2338390"
  },
  {
    "start": "2335000",
    "end": "2451000"
  },
  {
    "text": "can see that's the normal request that the browser sent but collaborator everywhere has rewritten it and it's",
    "start": "2338390",
    "end": "2344960"
  },
  {
    "text": "injected a lot of payloads it's called collaborate everywhere because it just injects payloads everywhere and if we look at the target",
    "start": "2344960",
    "end": "2353210"
  },
  {
    "text": "then we can see that we've got some interactions so for example here strike",
    "start": "2353210",
    "end": "2360020"
  },
  {
    "text": "after two seconds has fetched the euro specified",
    "start": "2360020",
    "end": "2365650"
  },
  {
    "text": "in the referer header over there and we can see that they using Ruby and the",
    "start": "2365650",
    "end": "2371470"
  },
  {
    "text": "next thing to do would be to point that attack ability and work out how how to",
    "start": "2371470",
    "end": "2377890"
  },
  {
    "text": "exploit it but also here's wonderful Netflix I triggered this earlier because",
    "start": "2377890",
    "end": "2383410"
  },
  {
    "text": "there's a nine hour and 30 minute time gap in between you send you send in the",
    "start": "2383410",
    "end": "2388599"
  },
  {
    "text": "payload and them getting the response yeah interestingly here they claim that they using an iPhone but they also claim",
    "start": "2388599",
    "end": "2396039"
  },
  {
    "text": "to be using an x86 CPU so yeah I know",
    "start": "2396039",
    "end": "2401319"
  },
  {
    "text": "which one I believe also we can see some",
    "start": "2401319",
    "end": "2407980"
  },
  {
    "text": "people using the true client IP header which is less well known these guys",
    "start": "2407980",
    "end": "2412990"
  },
  {
    "text": "fetch it after quite a few hours and interestingly so these two payloads both",
    "start": "2412990",
    "end": "2418809"
  },
  {
    "text": "come from Starbucks but they come from completely different servers after a different length of time so this has",
    "start": "2418809",
    "end": "2426549"
  },
  {
    "text": "given you a point as to a back-end system so as well as being useful information that they support this",
    "start": "2426549",
    "end": "2431650"
  },
  {
    "text": "header you now know what back in the analytic system they're using and maybe you can just go find their website and",
    "start": "2431650",
    "end": "2437529"
  },
  {
    "text": "exploit that if you're a proper hacker and similarly loads of guys use X for it",
    "start": "2437529",
    "end": "2442839"
  },
  {
    "text": "for okay",
    "start": "2442839",
    "end": "2450359"
  },
  {
    "start": "2451000",
    "end": "2530000"
  },
  {
    "text": "all right so as far as replicating these issues goes you can like you can",
    "start": "2451460",
    "end": "2457340"
  },
  {
    "text": "replicate them all of them are using burp of course so I wouldn't found them as of today there's an update to burp",
    "start": "2457340",
    "end": "2463820"
  },
  {
    "text": "that will make it scanner or to automatically find all of them all of the vulnerabilities are found about now",
    "start": "2463820",
    "end": "2469790"
  },
  {
    "text": "you could replicate these issues using this app if it wasn't for issue one three one eight which I'm imported to",
    "start": "2469790",
    "end": "2475640"
  },
  {
    "text": "them a few years ago which means that if you change the host header in zap does that will send that request to the wrong",
    "start": "2475640",
    "end": "2481160"
  },
  {
    "text": "place so if you want to use an open-source tool I'd recommend using MIT",
    "start": "2481160",
    "end": "2486800"
  },
  {
    "text": "M proxy it's extremely late looking so now if you want to help your clients",
    "start": "2486800",
    "end": "2492080"
  },
  {
    "text": "replicate this issues they might not be familiar with any of these tools so you probably want to give them some kind of shell commands you can use curl to",
    "start": "2492080",
    "end": "2500270"
  },
  {
    "text": "replicate some of these attacks but the more mount the ones with in a more malformed the more advanced attacks",
    "start": "2500270",
    "end": "2506060"
  },
  {
    "text": "can't be done using curl so you'll have to use end cap and then just pipe that",
    "start": "2506060",
    "end": "2511790"
  },
  {
    "text": "your so you have to use echo and then pipe that into end cap or open SSL as appropriate also you may need to use a",
    "start": "2511790",
    "end": "2518810"
  },
  {
    "text": "server name Drive active with open SSL to set the server name indicator field",
    "start": "2518810",
    "end": "2523850"
  },
  {
    "text": "to make sure that it gets routed to the right place so how do you prevent these",
    "start": "2523850",
    "end": "2532700"
  },
  {
    "start": "2530000",
    "end": "2614000"
  },
  {
    "text": "attacks cool as far as the reverse proxy attacks go I think you just have to",
    "start": "2532700",
    "end": "2538640"
  },
  {
    "text": "acknowledge that reverse proxies are designed to proxy traffic so they're going to proxy traffic and only takes a",
    "start": "2538640",
    "end": "2545660"
  },
  {
    "text": "tiny bug to make them proxy traffic to the wrong place as such they should be put in inside a demilitarized zone where",
    "start": "2545660",
    "end": "2552980"
  },
  {
    "text": "they don't have access to anything sensitive where they don't have access to an or thinking unauthenticated",
    "start": "2552980",
    "end": "2558130"
  },
  {
    "text": "administration panels as for callers it may help to think of them as employees",
    "start": "2558130",
    "end": "2564190"
  },
  {
    "text": "with really old web browsers who click on every link that you give them on the",
    "start": "2564190",
    "end": "2570650"
  },
  {
    "text": "brighter side unlike employees they won't complain very much if you stick them in a sandbox so once again that's",
    "start": "2570650",
    "end": "2576740"
  },
  {
    "text": "what I recommend as for research is what I recommend welcoming",
    "start": "2576740",
    "end": "2582440"
  },
  {
    "text": "researchers if you've got a bug bounty program that's public and allow us automated testing I've probably already",
    "start": "2582440",
    "end": "2587589"
  },
  {
    "text": "tested your site so you can have a little bit of peace of mind so I see a",
    "start": "2587589",
    "end": "2596000"
  },
  {
    "text": "lot of bug bounty programs that forbid automated testing and I understand they're probably doing that because that",
    "start": "2596000",
    "end": "2601160"
  },
  {
    "text": "otherwise they get flooded with traffic by people scanning them without genetics and burp millions of times so what I",
    "start": "2601160",
    "end": "2606200"
  },
  {
    "text": "recommend doing is saying please don't use off-the-shelf tools on our website but still allowing the use of custom",
    "start": "2606200",
    "end": "2612500"
  },
  {
    "text": "tools so the three key takeaways are the bug bounties enable white hat research",
    "start": "2612500",
    "end": "2619910"
  },
  {
    "start": "2614000",
    "end": "2645000"
  },
  {
    "text": "its scale load balancers our VPNs for the public and coolers our employees who",
    "start": "2619910",
    "end": "2626210"
  },
  {
    "text": "click I'll take five minutes of questions now and if you have any more after that feel free to come and speak",
    "start": "2626210",
    "end": "2631550"
  },
  {
    "text": "to me at the back or semi and email don't forget to follow me on Twitter thank you for listening",
    "start": "2631550",
    "end": "2637830"
  },
  {
    "text": "[Applause] [Music]",
    "start": "2637830",
    "end": "2644010"
  },
  {
    "text": "[Applause]",
    "start": "2644230",
    "end": "2647429"
  }
]