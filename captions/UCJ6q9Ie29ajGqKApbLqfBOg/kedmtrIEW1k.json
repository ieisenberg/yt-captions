[
  {
    "text": "good uh afternoon everyone and welcome to the final talk of day two of black hat 2015 just a quick reminder if you",
    "start": "719",
    "end": "8760"
  },
  {
    "text": "would please remember to put your phone on vibrate during the uh talk and uh you are now located in the uh Jasmine Ball",
    "start": "8760",
    "end": "15719"
  },
  {
    "text": "Room uh for D flow untangling the D for easy bugs by Ahmed",
    "start": "15719",
    "end": "24680"
  },
  {
    "text": "nafin cute than",
    "start": "25400",
    "end": "31279"
  },
  {
    "text": "thank you thanks for being here uh it's always scary to give a talk right after someone has given a talk on hacking",
    "start": "32840",
    "end": "40120"
  },
  {
    "text": "MacBooks using USB cables the sit 2 version uh anyways I'm just using HDMI",
    "start": "40120",
    "end": "47239"
  },
  {
    "text": "so let's hope nothing bad happens so uh just to set the expectation for today's",
    "start": "47239",
    "end": "52600"
  },
  {
    "text": "stock uh for those of you who doesn't get to understand the context of the Dom",
    "start": "52600",
    "end": "58920"
  },
  {
    "text": "here Dom flow or the Dom bugs that we're talking about today uh it's not going to be anything",
    "start": "58920",
    "end": "65000"
  },
  {
    "text": "about memory corruption bugs it's more about the browsers um JavaScript the Dom",
    "start": "65000",
    "end": "71000"
  },
  {
    "text": "API and some interesting nuances around that area",
    "start": "71000",
    "end": "76080"
  },
  {
    "text": "so about me um I'm Ahmed Naf U I work as a software security engineer for a",
    "start": "76080",
    "end": "82159"
  },
  {
    "text": "startup in San Francisco uh I've been speaking at few conferences for some time mostly about",
    "start": "82159",
    "end": "88280"
  },
  {
    "text": "web appc and and I usually like to play the um you know the defender role try to",
    "start": "88280",
    "end": "95840"
  },
  {
    "text": "defend things I believe that's much more harder uh with the emerging attack",
    "start": "95840",
    "end": "101799"
  },
  {
    "text": "trends that comes along especially in the browsers so uh the overall talk today is",
    "start": "101799",
    "end": "109479"
  },
  {
    "text": "going to be something about how how are the modern web apps evolving on the",
    "start": "109479",
    "end": "114920"
  },
  {
    "text": "front end and especially their problems with respect to penetration testing them",
    "start": "114920",
    "end": "121240"
  },
  {
    "text": "and then talk about a couple of tools that I have written uh to help",
    "start": "121240",
    "end": "126320"
  },
  {
    "text": "understand and analyze those kind certain bugs that we're going to talk about and then uh and then of course a",
    "start": "126320",
    "end": "133680"
  },
  {
    "text": "few instances or scenarios where um new kind of bugs uh could emerge and how we",
    "start": "133680",
    "end": "140720"
  },
  {
    "text": "can catch them so uh if you see most of the web",
    "start": "140720",
    "end": "146480"
  },
  {
    "text": "apps today they're going to be more and more uh using uh frend libraries like react",
    "start": "146480",
    "end": "155440"
  },
  {
    "text": "meteor uh whose purpose is to make things simple for the developers they contain a lot of logic within them uh",
    "start": "155440",
    "end": "163120"
  },
  {
    "text": "and the existing P penetration testing tools are written especially for",
    "start": "163120",
    "end": "168920"
  },
  {
    "text": "attacking web apps the traditional web apps but the modern day web apps are",
    "start": "168920",
    "end": "174959"
  },
  {
    "text": "more and more using these libraries for instance if you take meteor uh they have",
    "start": "174959",
    "end": "180080"
  },
  {
    "text": "their own protocol uh which does some websocket communication a two-way B directional communication and uh if if",
    "start": "180080",
    "end": "188280"
  },
  {
    "text": "you need to write your own protocol uh if you need to write your own tool to",
    "start": "188280",
    "end": "193640"
  },
  {
    "text": "understand what's the communication which is going on between your server and your client it can become a little",
    "start": "193640",
    "end": "199640"
  },
  {
    "text": "harder with the existing tools so uh I'm not going to talk specifically",
    "start": "199640",
    "end": "206000"
  },
  {
    "text": "about any of these uh but I'll give an overall uh",
    "start": "206000",
    "end": "211159"
  },
  {
    "text": "idea about what we can do and what we should be looking forward in attacking web",
    "start": "211159",
    "end": "216760"
  },
  {
    "text": "apps so one thing uh as I already mentioned like these um these Frameworks",
    "start": "216760",
    "end": "223400"
  },
  {
    "text": "which which are already complicated and static analysis on them is pretty hard",
    "start": "223400",
    "end": "229319"
  },
  {
    "text": "if you run static analysis on for example the Google's frontend code um",
    "start": "229319",
    "end": "235720"
  },
  {
    "text": "they won't understand anything even if you beautify them and send it to static analysis it's there's a lot of stuff",
    "start": "235720",
    "end": "241200"
  },
  {
    "text": "closures other some different kinds of comp compilers a lot of things happening there and again uh the complex",
    "start": "241200",
    "end": "248599"
  },
  {
    "text": "Frameworks which includes things like jsss like U react Js from Facebook uses",
    "start": "248599",
    "end": "253879"
  },
  {
    "text": "something known as jsss uh if if you've been hearing about SSS the classical SSS",
    "start": "253879",
    "end": "260239"
  },
  {
    "text": "by which I mean the reflected SSS was a problem that I've been haunting us for the past two decades uh in",
    "start": "260239",
    "end": "266840"
  },
  {
    "text": "which uh the vulnerabilities occur when you have JavaScript injected into a HTML",
    "start": "266840",
    "end": "274440"
  },
  {
    "text": "context uh and I'm not so sure that we as a security Community or developers",
    "start": "274440",
    "end": "280520"
  },
  {
    "text": "have completely addressed them but now we have another Beast where things like um jsss where you can inject HTML code",
    "start": "280520",
    "end": "289280"
  },
  {
    "text": "inside JavaScript right the inverse of that uh so things like jss comes from an",
    "start": "289280",
    "end": "295039"
  },
  {
    "text": "existing technology called ESET which was used in firce way back but with this",
    "start": "295039",
    "end": "301039"
  },
  {
    "text": "things are going with with your own Dom and own parsing and compilers uh which",
    "start": "301039",
    "end": "307160"
  },
  {
    "text": "all these libraries bring brings into the picture things are going to be much more",
    "start": "307160",
    "end": "312600"
  },
  {
    "text": "complicated so let's talk specifically about Dom xss uh so um to just to give",
    "start": "312600",
    "end": "320240"
  },
  {
    "text": "an overview of what an SSS is uh it's a certain bug which due to",
    "start": "320240",
    "end": "326960"
  },
  {
    "text": "some failure in input validation or output encoding uh you could have",
    "start": "326960",
    "end": "333479"
  },
  {
    "text": "attackers code running on your front end and as I would always like to Define cross it scripting is uh when someone",
    "start": "333479",
    "end": "340960"
  },
  {
    "text": "else runs code on your web app it's not your web app anymore especially the friend and with all those Logics now the",
    "start": "340960",
    "end": "348440"
  },
  {
    "text": "specific G of specific case of Dom SSS is where an SSS is triggered mostly or",
    "start": "348440",
    "end": "355120"
  },
  {
    "text": "completely due to your front end code wherein uh your Tacker payload doesn't",
    "start": "355120",
    "end": "360720"
  },
  {
    "text": "even goes to the server side everything is executed on the client side especially using the Dom apis and the",
    "start": "360720",
    "end": "368160"
  },
  {
    "text": "browser components so to understand more about Dom xss people usually refer to the",
    "start": "368160",
    "end": "375680"
  },
  {
    "text": "classical thing of uh how data flows using source and syncs so in today's",
    "start": "375680",
    "end": "381840"
  },
  {
    "text": "talk when we talk about sources we are going to talk about any entry point where an attacker can inject data and a",
    "start": "381840",
    "end": "388440"
  },
  {
    "text": "sync is where the the same untrusted data gets to execute directly or",
    "start": "388440",
    "end": "394240"
  },
  {
    "text": "indirectly so cool so uh let's see a",
    "start": "394240",
    "end": "400800"
  },
  {
    "text": "very classical Dom exus example or the hollow world of Dom xss as most people",
    "start": "400800",
    "end": "408199"
  },
  {
    "text": "would you know put this as when they're trying to explain what a Dom xss is here we have a location where it says uh some",
    "start": "408199",
    "end": "416479"
  },
  {
    "text": "website.com SL something and then at the you have a hash and then a name",
    "start": "416479",
    "end": "423400"
  },
  {
    "text": "something like Mark and you have a JavaScript code which tries to take the",
    "start": "423400",
    "end": "428520"
  },
  {
    "text": "hash of the current URL and then tries to do some filtering on that takes that",
    "start": "428520",
    "end": "435400"
  },
  {
    "text": "and writes it into your Dom using the document. write so in this case as it's pretty obvious the the document.location",
    "start": "435400",
    "end": "442879"
  },
  {
    "text": "do the location here becomes a source and which is the entry point for the attacker as an attacker can directly",
    "start": "442879",
    "end": "449560"
  },
  {
    "text": "control that part and a document. right becomes the sync so this is a pretty",
    "start": "449560",
    "end": "455840"
  },
  {
    "text": "easy way of having a doet assist and there are of course a few web apps today which still have",
    "start": "455840",
    "end": "462879"
  },
  {
    "text": "vulnerabilities like this very pretty simple even with eval so",
    "start": "462879",
    "end": "469319"
  },
  {
    "text": "uh during the past blackhead talks we have seen some amazing research in terms",
    "start": "469319",
    "end": "476080"
  },
  {
    "text": "of domit sus and how uh and how they are and the kind of tools which have been",
    "start": "476080",
    "end": "483159"
  },
  {
    "text": "used in taming them so uh Sebastian Ben and Martin they have done this research",
    "start": "483159",
    "end": "489879"
  },
  {
    "text": "on 25 million flows later which where they took the Alexa's top thousand or",
    "start": "489879",
    "end": "495159"
  },
  {
    "text": "10,000 websites and then they tried to run their own instrumentation engine on that using some crawling and they found",
    "start": "495159",
    "end": "502680"
  },
  {
    "text": "the most commonly used source sensings so uh this is a pretty pretty big issue",
    "start": "502680",
    "end": "510759"
  },
  {
    "text": "and um developers even today or when they try to uh you know keep moving fast",
    "start": "510759",
    "end": "517479"
  },
  {
    "text": "with their friend and code uh these kind of bugs can be easily introduced wherein if you don't understand what your",
    "start": "517479",
    "end": "523279"
  },
  {
    "text": "sources and SS and your Dom apas are doing then it can be pretty",
    "start": "523279",
    "end": "529200"
  },
  {
    "text": "bad so so why why do these kind of problems come into existence so uh it's",
    "start": "529480",
    "end": "537160"
  },
  {
    "text": "it's it's a common software engineering problem or or uh or I would like to say the print of anti pattern right so where",
    "start": "537160",
    "end": "545399"
  },
  {
    "text": "you say where you try to mix code and uh you try to mix code and strings together",
    "start": "545399",
    "end": "552519"
  },
  {
    "text": "and you end up with problems like this so uh even Frameworks for instance",
    "start": "552519",
    "end": "558800"
  },
  {
    "text": "angularjs uh have some ways of executing code uh directly from a string uh even",
    "start": "558800",
    "end": "564680"
  },
  {
    "text": "though eval can be disabled using strict JavaScript uh paring things can still go",
    "start": "564680",
    "end": "570760"
  },
  {
    "text": "wrong that is specifically because the Dom specification the Dom apis are pretty rich at doing this string to code",
    "start": "570760",
    "end": "578079"
  },
  {
    "text": "conversions in a direct or indirect way so when I mean the direct ways it's pretty obvious uh we have been hearing",
    "start": "578079",
    "end": "585160"
  },
  {
    "text": "JavaScript in while is evil for a long time uh yeah people have kind of stopped",
    "start": "585160",
    "end": "590200"
  },
  {
    "text": "using that but we still have other things like the function Constructor where if you replace the string here",
    "start": "590200",
    "end": "596120"
  },
  {
    "text": "would be an X where it could have any kind of code execute and or even it's it's set script set",
    "start": "596120",
    "end": "603079"
  },
  {
    "text": "time or set interval uh a lot of other apis which directly executes code and",
    "start": "603079",
    "end": "608959"
  },
  {
    "text": "the most interesting ones to me are the indirect uh Dom apis which converts",
    "start": "608959",
    "end": "614360"
  },
  {
    "text": "string into code something like jQuery select their API it's the dollar of",
    "start": "614360",
    "end": "619959"
  },
  {
    "text": "whatever string you give or the document. right so the document R right here is the document. right here itself",
    "start": "619959",
    "end": "626279"
  },
  {
    "text": "is Javascript it's a Dom API it's JavaScript but it can take string and",
    "start": "626279",
    "end": "632000"
  },
  {
    "text": "put it as HTML that means it can push stuff into the Dom now at the same time",
    "start": "632000",
    "end": "638000"
  },
  {
    "text": "the Dom can execute JavaScript if you give certain conditions so ultimately this IND this is an indirect way of",
    "start": "638000",
    "end": "644920"
  },
  {
    "text": "executing code executing JavaScript using JavaScript itself and various other examples which uh which is pretty",
    "start": "644920",
    "end": "652519"
  },
  {
    "text": "obvious uh if you have been around the domus as well uh they have just given a",
    "start": "652519",
    "end": "657959"
  },
  {
    "text": "few examples of the direct and indirect Dom cases so uh the specific example of",
    "start": "657959",
    "end": "666360"
  },
  {
    "text": "jquery's selector where we as most the the jqu U most uh important",
    "start": "666360",
    "end": "674680"
  },
  {
    "text": "documentations or when you see stack Overflow or the uh the top page of jQuery the one which is advertised or",
    "start": "674680",
    "end": "681800"
  },
  {
    "text": "people know jQuery for selectors right so if you start something with hash it can select the IDS in the document it it",
    "start": "681800",
    "end": "688680"
  },
  {
    "text": "does the of document. getet element by ID if you do something with DOT it does",
    "start": "688680",
    "end": "693880"
  },
  {
    "text": "look for elements with class and returns an array of elements which has those",
    "start": "693880",
    "end": "699880"
  },
  {
    "text": "class as its class name or even tag name but there the same selector can also be",
    "start": "699880",
    "end": "707560"
  },
  {
    "text": "used to inject HTML content onto the Dom if if your string doesn't starts with a",
    "start": "707560",
    "end": "714880"
  },
  {
    "text": "DOT or a hash and if it's something like an image RC equals something or some",
    "start": "714880",
    "end": "720720"
  },
  {
    "text": "script SRC equal something it just injects that into the Dom and it has been known for for a long time but but",
    "start": "720720",
    "end": "727399"
  },
  {
    "text": "what I'm trying to say here is the indirect ways of executing um code in",
    "start": "727399",
    "end": "732519"
  },
  {
    "text": "your Dom which most people are not especially the developers are not aware",
    "start": "732519",
    "end": "738639"
  },
  {
    "text": "of so with all these being said and with a few tools which are already trying to",
    "start": "738639",
    "end": "743800"
  },
  {
    "text": "find all these bugs uh why is it especially hard to find these kind of",
    "start": "743800",
    "end": "748839"
  },
  {
    "text": "bugs uh in in today's web apps this is because usually your web apps when you",
    "start": "748839",
    "end": "754839"
  },
  {
    "text": "look at the view source of pages they going to look something like this which uh if you try google.com and see the we",
    "start": "754839",
    "end": "761720"
  },
  {
    "text": "Source it's going to look something like this Facebook something like this uh and",
    "start": "761720",
    "end": "766760"
  },
  {
    "text": "even if a website completely adopts CSP and then you have all your uh scripts",
    "start": "766760",
    "end": "772560"
  },
  {
    "text": "embedded inside script tags and being properly loaded from Whit listed sources even then the",
    "start": "772560",
    "end": "779880"
  },
  {
    "text": "JavaScript is going to be minified compressed and and will'll have a lot of",
    "start": "779880",
    "end": "786399"
  },
  {
    "text": "lot of complexity involved with this so uh I had this problem I I didn't want to look at code like this rather I wanted",
    "start": "786399",
    "end": "793519"
  },
  {
    "text": "to have an understanding of how the web app is by just doing something with the",
    "start": "793519",
    "end": "799279"
  },
  {
    "text": "web app right rather than doing some static analysis so I've been using few of these",
    "start": "799279",
    "end": "806320"
  },
  {
    "text": "tools especially the Dominator Pro for a long time but there have been a few complexities",
    "start": "806320",
    "end": "811480"
  },
  {
    "text": "in setting it up and doing things the Dominator Pro way uh and but by far",
    "start": "811480",
    "end": "819440"
  },
  {
    "text": "today we it is the best Dom xss scanner that I aware of that can find",
    "start": "819440",
    "end": "825000"
  },
  {
    "text": "vulnerabilities uh by doing some Dynamic uh tainting and there's also this research",
    "start": "825000",
    "end": "832279"
  },
  {
    "text": "by uh the paper that I just showed Sebastian Ben Hawks uh where they they",
    "start": "832279",
    "end": "838639"
  },
  {
    "text": "patched v8's V8 and the chro chromium and open source the they patch the",
    "start": "838639",
    "end": "844680"
  },
  {
    "text": "chromium web browser to kind of track all these sources and things and come up",
    "start": "844680",
    "end": "850519"
  },
  {
    "text": "with those results but I'm not sure sure whether they made it public and it's not an unusable form so it's a problem for",
    "start": "850519",
    "end": "857639"
  },
  {
    "text": "pin testers uh and even static analysis I said they can be useful in some cases",
    "start": "857639",
    "end": "863360"
  },
  {
    "text": "but I'm not a big fan of regets and uh simple string matches trying to find",
    "start": "863360",
    "end": "869680"
  },
  {
    "text": "vulnerabilities uh in complex apps so I thought of a way so what can we",
    "start": "869680",
    "end": "877759"
  },
  {
    "text": "look for just in in addition to Dom xss um I I found like okay it's not just the",
    "start": "877759",
    "end": "883639"
  },
  {
    "text": "Dom xss the source to sys which flows that's the problem there's also uh",
    "start": "883639",
    "end": "888720"
  },
  {
    "text": "various other problems which which can be found on the Dom some logical bugs or",
    "start": "888720",
    "end": "894920"
  },
  {
    "text": "people using methods where it it wasn't the appropriate method thir",
    "start": "894920",
    "end": "901519"
  },
  {
    "text": "so as I said uh these are the kinds of thing that you can find with uh you know",
    "start": "901519",
    "end": "907720"
  },
  {
    "text": "the Dom injection you can have have something like a Dom based open redirection wherein the server doesn't",
    "start": "907720",
    "end": "913320"
  },
  {
    "text": "even gets to know where what kind of code you're injecting or what kind of uh",
    "start": "913320",
    "end": "918600"
  },
  {
    "text": "redirect you're trying to do especially useful in advanced uh open R directions",
    "start": "918600",
    "end": "924639"
  },
  {
    "text": "where U if someone is doing some specific spear fishing and stuff like that a Dom based open re action is a",
    "start": "924639",
    "end": "931800"
  },
  {
    "text": "pretty good thing to do because even if you have botes or stuffs doing on your server side sitting on the server side",
    "start": "931800",
    "end": "938160"
  },
  {
    "text": "they wouldn't get to know what's happening right and things like web storage manipulation every kind of hmlf",
    "start": "938160",
    "end": "944279"
  },
  {
    "text": "API manipulation local storage websockets uh things like that and",
    "start": "944279",
    "end": "951199"
  },
  {
    "text": "specifically I wanted to talk about the second order Dom injection so this is a",
    "start": "951199",
    "end": "957040"
  },
  {
    "text": "this is a common thing which is most missed by uh the usual Dom xss scanners",
    "start": "957040",
    "end": "963839"
  },
  {
    "text": "uh because of the fact uh the source actually come comes very delayed so by",
    "start": "963839",
    "end": "970920"
  },
  {
    "text": "second second order Dom injection I mean it's more like a second order SQL injections that we used to hear the term",
    "start": "970920",
    "end": "977880"
  },
  {
    "text": "uh so rather than having a source and syn directly on the Dom your source is",
    "start": "977880",
    "end": "983319"
  },
  {
    "text": "somewhat delayed in the sense they're coming from a persistent storage for example uh to today you register for a",
    "start": "983319",
    "end": "990440"
  },
  {
    "text": "website and you go and store your username and after after 5 days someone",
    "start": "990440",
    "end": "996000"
  },
  {
    "text": "writes a vulnerable code which uses a sync and the source here is an HR",
    "start": "996000",
    "end": "1001480"
  },
  {
    "text": "response which comes from a database right so people haven't thought about HR",
    "start": "1001480",
    "end": "1007600"
  },
  {
    "text": "responses as possible U Dom Source I",
    "start": "1007600",
    "end": "1013040"
  },
  {
    "text": "mean we know that's a problem but like the tools have not been so good with finding uh the kind of",
    "start": "1013040",
    "end": "1020319"
  },
  {
    "text": "stuff so and also uh things like globally exposed variables in the D we",
    "start": "1020319",
    "end": "1026079"
  },
  {
    "text": "have been hearing case of hey you shouldn't be actually doing uh globally exposed variables that's a bad idea it's",
    "start": "1026079",
    "end": "1032438"
  },
  {
    "text": "a bad JavaScript practice it can cause bugs but we have rarely seen problems",
    "start": "1032439",
    "end": "1037600"
  },
  {
    "text": "which can cause which can which can have security issues with that so I I recently came across an issue where",
    "start": "1037600",
    "end": "1044600"
  },
  {
    "text": "actually a global variable uh in combination with dom clobbering uh can actually be an issue uh and usage of",
    "start": "1044600",
    "end": "1053080"
  },
  {
    "text": "certain methods which uh uh the egas script file specification uh has some very quy",
    "start": "1053080",
    "end": "1060039"
  },
  {
    "text": "behavior in s in how they Define certain methods so we'll go over one of the methods and talk how to find these uh",
    "start": "1060039",
    "end": "1068280"
  },
  {
    "text": "methods using how to find these functions using the tool so uh yeah of",
    "start": "1068280",
    "end": "1073840"
  },
  {
    "text": "course the tool I've been talking about is uh I I've written a Chrome extension called hook",
    "start": "1073840",
    "end": "1079640"
  },
  {
    "text": "uh it's basically to find and analyze and examine how your current web apps",
    "start": "1079640",
    "end": "1085600"
  },
  {
    "text": "Dom is and what kind of things can go wrong and basically it's like reverse",
    "start": "1085600",
    "end": "1090960"
  },
  {
    "text": "engineering a web app uh so you kind of get uh get to understand what's",
    "start": "1090960",
    "end": "1096559"
  },
  {
    "text": "happening so if if if you're from if you're from the OS world if if you need to know what an app does without doing",
    "start": "1096559",
    "end": "1104320"
  },
  {
    "text": "uh much static analysis you go and hook into all the uh registers or all the",
    "start": "1104320",
    "end": "1111600"
  },
  {
    "text": "apis the DL injection stuff like that so I'm kind of trying to do something similar in the world of U Chrome",
    "start": "1111600",
    "end": "1118640"
  },
  {
    "text": "extensions and JavaScript to use to to make use of it and have U Dynamic",
    "start": "1118640",
    "end": "1127320"
  },
  {
    "text": "analysis so let's take a look at",
    "start": "1127320",
    "end": "1132480"
  },
  {
    "text": "it okay",
    "start": "1132480",
    "end": "1136480"
  },
  {
    "text": "okay so it's a chrome exension you can install from the Chrome Store and you",
    "start": "1146880",
    "end": "1154240"
  },
  {
    "text": "have this thing over here so uh yeah this is like the panel that I have for",
    "start": "1154240",
    "end": "1160159"
  },
  {
    "text": "hookes uh and here you can have all these different kinds of apis that you",
    "start": "1160159",
    "end": "1166080"
  },
  {
    "text": "want to hook or uh you know override and redefine and analyze",
    "start": "1166080",
    "end": "1172600"
  },
  {
    "text": "so so let's say let's try to look at ansite like Facebook right as I said so",
    "start": "1172600",
    "end": "1179440"
  },
  {
    "text": "I believe I shouldn't be logged in yeah I'm not",
    "start": "1179440",
    "end": "1187320"
  },
  {
    "text": "but there you go so yeah this is the problem I've been talking about so uh",
    "start": "1189679",
    "end": "1195400"
  },
  {
    "text": "most of the web apps I see today while pen testing they look like this which which is pretty annoying to me so",
    "start": "1195400",
    "end": "1203039"
  },
  {
    "text": "uh or any pentester for the matter so so I go here give Facebook so now",
    "start": "1203039",
    "end": "1210120"
  },
  {
    "text": "what happens is uh Hook is stops running on running on facebook.com right now and",
    "start": "1210120",
    "end": "1218240"
  },
  {
    "text": "uh it starts hooking into all the different sources and things and starts",
    "start": "1218240",
    "end": "1224280"
  },
  {
    "text": "reporting back to the app so in this page I just loaded face Facebook and it",
    "start": "1224280",
    "end": "1229640"
  },
  {
    "text": "just navigated through it and all these cases are actually not may",
    "start": "1229640",
    "end": "1236880"
  },
  {
    "text": "not be vulnerable cases of course I'm not going to show you Facebook vulnerability right now which uh but the",
    "start": "1236880",
    "end": "1243240"
  },
  {
    "text": "the thing which is uh which is interesting which I wanted to see was uh",
    "start": "1243240",
    "end": "1249039"
  },
  {
    "text": "what what are the values being passed to different apis and what are the S how are the sources and sys being called so",
    "start": "1249039",
    "end": "1255360"
  },
  {
    "text": "for example here as you can see the syn called Dom noes so by Dom noes in the",
    "start": "1255360",
    "end": "1260559"
  },
  {
    "text": "context of hookes it means anything like element. inner HTML or element do OU",
    "start": "1260559",
    "end": "1266440"
  },
  {
    "text": "HTML uh some anything which has to do with a Dom nodes property which injects",
    "start": "1266440",
    "end": "1273480"
  },
  {
    "text": "stuff into the Dom so in this case uh as",
    "start": "1273480",
    "end": "1278520"
  },
  {
    "text": "you can see U an HTML element called div class equals something uh yeah the",
    "start": "1278520",
    "end": "1284880"
  },
  {
    "text": "gender form has been injected so this is using uh probably this is because one of",
    "start": "1284880",
    "end": "1291520"
  },
  {
    "text": "their librar is trying to do stuff uh and instead D trying to do stuff",
    "start": "1291520",
    "end": "1297279"
  },
  {
    "text": "dynamically so for most of the cases you won't find these kind of things which",
    "start": "1297279",
    "end": "1302760"
  },
  {
    "text": "are dynamically injected as part of your source code uh so so these are the",
    "start": "1302760",
    "end": "1308640"
  },
  {
    "text": "things uh I was interested in looking while P testing an app uh and also things like what what kind",
    "start": "1308640",
    "end": "1315760"
  },
  {
    "text": "of values are written to document. cookie and and and from here if I if I see",
    "start": "1315760",
    "end": "1322080"
  },
  {
    "text": "something is interesting for example I see okay the document. cookie is being uh set to certain value at this point so",
    "start": "1322080",
    "end": "1328720"
  },
  {
    "text": "I want to know at what what what file and what line is this thing happening so",
    "start": "1328720",
    "end": "1334720"
  },
  {
    "text": "here we have a a small stack raas which tries to show you uh okay at what line",
    "start": "1334720",
    "end": "1340840"
  },
  {
    "text": "and what point is this thing happening and if you just click on it you could",
    "start": "1340840",
    "end": "1346400"
  },
  {
    "text": "yeah so this directly integrates with the",
    "start": "1346400",
    "end": "1352520"
  },
  {
    "text": "Chrome's console so if you just click on it just directly takes you to that page",
    "start": "1352520",
    "end": "1359440"
  },
  {
    "text": "and yeah you can you can kind of analyze the methods which are being called and",
    "start": "1359440",
    "end": "1365039"
  },
  {
    "text": "get a function call trace of how how are these methods called and when so with that being said uh I'd also",
    "start": "1365039",
    "end": "1374400"
  },
  {
    "text": "like to talk about uh a POC app I made for specifically testing U these bugs a",
    "start": "1374400",
    "end": "1382120"
  },
  {
    "text": "few of a bugs are being being that I'm going to talk about today uh so it's",
    "start": "1382120",
    "end": "1387840"
  },
  {
    "text": "called Dam vulnerable. me and it it has different examples or scenarios uh so if",
    "start": "1387840",
    "end": "1394640"
  },
  {
    "text": "if you have been in testing Dom accesses for some time you must be knowing things",
    "start": "1394640",
    "end": "1399919"
  },
  {
    "text": "like let me let me check um yeah Google's public firing",
    "start": "1399919",
    "end": "1407200"
  },
  {
    "text": "range. do appspot it's it's a publicly available sources of you know collection",
    "start": "1407200",
    "end": "1413400"
  },
  {
    "text": "of sources to Sy and if if you have a Dom a scanner you can just run it against this and uh navigate them and uh",
    "start": "1413400",
    "end": "1422200"
  },
  {
    "text": "your Dom scanner is good if it can find all these issues on the fly so I've taken a few examples of that and then a",
    "start": "1422200",
    "end": "1428440"
  },
  {
    "text": "few examples of my own um about the certain different Dom bugs that that I",
    "start": "1428440",
    "end": "1434200"
  },
  {
    "text": "talked about so let's get into it in more detail",
    "start": "1434200",
    "end": "1440440"
  },
  {
    "text": "yeah so that's damn vulnerable uh okay so I kind of explain how Hook is works",
    "start": "1441000",
    "end": "1447840"
  },
  {
    "text": "but uh by giving an analog analogy to how uh you would reverse engineer native",
    "start": "1447840",
    "end": "1453640"
  },
  {
    "text": "apps by doing D injection so here in this case I've written a library called",
    "start": "1453640",
    "end": "1459480"
  },
  {
    "text": "Dom hooks so um which is which tries to",
    "start": "1459480",
    "end": "1464720"
  },
  {
    "text": "uh track all different sources and syncs and it injects them into the page before",
    "start": "1464720",
    "end": "1472440"
  },
  {
    "text": "so this is a Chrome extension and it tries to inject them into the page and wait for the page to load and then you",
    "start": "1472440",
    "end": "1477919"
  },
  {
    "text": "track the sources sensing so this is the high level view of it so as you can see",
    "start": "1477919",
    "end": "1483799"
  },
  {
    "text": "the hook is green bar over here is the extension and you have a web app which",
    "start": "1483799",
    "end": "1489360"
  },
  {
    "text": "with its own Dom and one of the things that you should when when trying to do",
    "start": "1489360",
    "end": "1494760"
  },
  {
    "text": "something like this is you should be careful that you don't mess with the already existing Dom otherwise the",
    "start": "1494760",
    "end": "1501240"
  },
  {
    "text": "existing web app won't work properly right so you want a completely isolated context and Chrome's extension gives you",
    "start": "1501240",
    "end": "1508399"
  },
  {
    "text": "exactly that uh due to some security reasons they already do extensions",
    "start": "1508399",
    "end": "1513919"
  },
  {
    "text": "already run in an isolated context so hookies just takes all these Dom Hooks",
    "start": "1513919",
    "end": "1519760"
  },
  {
    "text": "and then registers all these hooks for example document. WR and sends it to that web apps",
    "start": "1519760",
    "end": "1526440"
  },
  {
    "text": "Dom and now what happens is the web apps JavaScript code runs after this so",
    "start": "1526440",
    "end": "1534080"
  },
  {
    "text": "that's just like a d injection everything that the web app calls would be registered by the already",
    "start": "1534080",
    "end": "1541320"
  },
  {
    "text": "existing uh registers that uh we are placed also you could use something like",
    "start": "1541320",
    "end": "1547760"
  },
  {
    "text": "ecas scripts object. freeze which make makes sure that your overrides are being",
    "start": "1547760",
    "end": "1554399"
  },
  {
    "text": "maintained now you can also ask delayed questions right so once the web app has",
    "start": "1554399",
    "end": "1560840"
  },
  {
    "text": "loaded and um the web app has reached a certain State you can ask questions like",
    "start": "1560840",
    "end": "1566880"
  },
  {
    "text": "okay give me the list of all Global variables that your Dom has currently exposed things and various other",
    "start": "1566880",
    "end": "1573559"
  },
  {
    "text": "interesting questions like this so so I've written this Dom hooks. JS in a",
    "start": "1573559",
    "end": "1580120"
  },
  {
    "text": "modular fashion so if you're like interested in trying to do first testing or even writing um Dom based ideas or",
    "start": "1580120",
    "end": "1587960"
  },
  {
    "text": "you know things like hardening your Dom it can be interesting to",
    "start": "1587960",
    "end": "1593278"
  },
  {
    "text": "you so here are a few ways of redefining how you would re redefine our override",
    "start": "1593440",
    "end": "1599480"
  },
  {
    "text": "in JavaScript so I've used the basic properties here and for instance you",
    "start": "1599480",
    "end": "1605640"
  },
  {
    "text": "have if you have a method like a window. alert which is a method uh you would",
    "start": "1605640",
    "end": "1611039"
  },
  {
    "text": "just have a copy of it and redefine and override it or or also use for certain",
    "start": "1611039",
    "end": "1618240"
  },
  {
    "text": "properties like cookies so cookies are interesting properties you can you cannot just go and say uh you know have",
    "start": "1618240",
    "end": "1626480"
  },
  {
    "text": "a copy of the cookie and then create a new uh cookie proy out of it uh you want",
    "start": "1626480",
    "end": "1633080"
  },
  {
    "text": "to uh if you say document. cookie equals a equal 1 2 3 you set a cookie",
    "start": "1633080",
    "end": "1638799"
  },
  {
    "text": "with a name a and value 1 2 3 the cookies Setter already has a logic which",
    "start": "1638799",
    "end": "1645000"
  },
  {
    "text": "tries to push these cookies into the cookie jar so you can have something",
    "start": "1645000",
    "end": "1650159"
  },
  {
    "text": "like so what you can use here is uh lookup getter or lookup Setter for",
    "start": "1650159",
    "end": "1655559"
  },
  {
    "text": "cookie and then redefine them using Define getter and Define Setter so if you have been involved in JavaScript",
    "start": "1655559",
    "end": "1662159"
  },
  {
    "text": "overriding uh these things must be kind of familiar so so an interesting thing",
    "start": "1662159",
    "end": "1668320"
  },
  {
    "text": "happened so a couple of months back uh while I was testing uh my tool all of a",
    "start": "1668320",
    "end": "1674399"
  },
  {
    "text": "sudden uh my one of the registers stopped working right one of the hooks",
    "start": "1674399",
    "end": "1680240"
  },
  {
    "text": "just won't work it won't I was not able to override it and then I researched and what happened and then I saw there was a",
    "start": "1680240",
    "end": "1687240"
  },
  {
    "text": "patch which came which disabled uh registering of which disabled overriding of location and",
    "start": "1687240",
    "end": "1694480"
  },
  {
    "text": "things like document or domain so U and I remembered actually an Year back um I",
    "start": "1694480",
    "end": "1701720"
  },
  {
    "text": "gave a talk at U black ad Asia about how you can use this overriding itself for",
    "start": "1701720",
    "end": "1708960"
  },
  {
    "text": "insecurity right so uh Ju Just by overriding document or domain uh at that",
    "start": "1708960",
    "end": "1715159"
  },
  {
    "text": "time the oasp csrf god the Java csrf God library was can be completely bypassed",
    "start": "1715159",
    "end": "1722760"
  },
  {
    "text": "from a cross domain website so someone can send craft up someone can read the",
    "start": "1722760",
    "end": "1728039"
  },
  {
    "text": "csrf token from a cross domain website by saying I am a good domain.com by",
    "start": "1728039",
    "end": "1733559"
  },
  {
    "text": "spoofing document.domain so at that time when I filed the bug on chromium bugs",
    "start": "1733559",
    "end": "1738720"
  },
  {
    "text": "uh people are not so interested in fixing them because it was more of a web",
    "start": "1738720",
    "end": "1744559"
  },
  {
    "text": "apps problem that's what they thought at that time Safari was the only one which fits which had that fits and Firefox and",
    "start": "1744559",
    "end": "1752600"
  },
  {
    "text": "Google were not so serious about it but if you see redefine redefinition has been an interesting problem recently so",
    "start": "1752600",
    "end": "1758679"
  },
  {
    "text": "if you have been in Natasha's talk yesterday redefining EAS script properties and how she used the same",
    "start": "1758679",
    "end": "1767399"
  },
  {
    "text": "stuff in action script as well so it it's been an increasing problem",
    "start": "1767399",
    "end": "1773760"
  },
  {
    "text": "for especially for security uh but at the end of the day the web app or the developer has to implement all these",
    "start": "1773760",
    "end": "1779919"
  },
  {
    "text": "things properly with keeping these in mind so they don't break their web apps",
    "start": "1779919",
    "end": "1786200"
  },
  {
    "text": "Integrity so that was an ironic story couple of years back I used the same properties for insecurity but today I'm",
    "start": "1786200",
    "end": "1792440"
  },
  {
    "text": "trying to use them for security and it's not working out I mean a part of it is not working out",
    "start": "1792440",
    "end": "1798840"
  },
  {
    "text": "so uh I I use a tool called Dom storm which I have written uh",
    "start": "1798840",
    "end": "1805519"
  },
  {
    "text": "so this this link basically gives you all the location properties which can be overridden in Chrome right now and",
    "start": "1805519",
    "end": "1811799"
  },
  {
    "text": "different various different browsers so uh the tool I'm talking about is domtom",
    "start": "1811799",
    "end": "1817559"
  },
  {
    "text": "so it has it is it is a database of all uh of interesting questions that you can",
    "start": "1817559",
    "end": "1825600"
  },
  {
    "text": "ask to a browser and track them across different across different versions of different browsers so for instance uh",
    "start": "1825600",
    "end": "1832960"
  },
  {
    "text": "you might find a bug in Firefox and you have a PC for that but you know at the same time at a um as of this point in",
    "start": "1832960",
    "end": "1841120"
  },
  {
    "text": "time it doesn't work in Chrome uh you can have a database for that and it just keeps running the tests and tries to",
    "start": "1841120",
    "end": "1848120"
  },
  {
    "text": "tell you when uh you know something goes wrong in different browsers",
    "start": "1848120",
    "end": "1853880"
  },
  {
    "text": "so as you can see",
    "start": "1853880",
    "end": "1858320"
  },
  {
    "text": "so uh let's try to look at the location",
    "start": "1862399",
    "end": "1867440"
  },
  {
    "text": "properties so a year back this this column was full of red which means none",
    "start": "1873399",
    "end": "1879399"
  },
  {
    "text": "of the location properties can be over done the is configurable was true and in",
    "start": "1879399",
    "end": "1884559"
  },
  {
    "text": "the latest chromium browsers U this is different so if you run it on Chrome 42",
    "start": "1884559",
    "end": "1889760"
  },
  {
    "text": "I believe uh this these results would be different U yeah and of course you can",
    "start": "1889760",
    "end": "1895919"
  },
  {
    "text": "track this across different browsers yeah and for different yeah so for certain properties uh and certain uh",
    "start": "1895919",
    "end": "1905360"
  },
  {
    "text": "and different OES uh the results May Vary",
    "start": "1905360",
    "end": "1910600"
  },
  {
    "text": "so let me get back yeah and another interesting thing",
    "start": "1910600",
    "end": "1915799"
  },
  {
    "text": "I would like to show is uh yeah I forgot that how about window so while working",
    "start": "1915799",
    "end": "1922639"
  },
  {
    "text": "with bypassing filters uh xss filters and stuff so you might in C certain",
    "start": "1922639",
    "end": "1928000"
  },
  {
    "text": "cases your Dom properties might be uh filtered for example in one of the",
    "start": "1928000",
    "end": "1934120"
  },
  {
    "text": "instances I was uh not allowed to use uh parenthesis or the word terms like",
    "start": "1934120",
    "end": "1941559"
  },
  {
    "text": "window or top or any object it refers to window so I wrote a module which uh I",
    "start": "1941559",
    "end": "1946760"
  },
  {
    "text": "mean not me uh one of my Twitter friends pep he wrote a module which uh list the",
    "start": "1946760",
    "end": "1952039"
  },
  {
    "text": "constructors of window uh without parenthesis",
    "start": "1952039",
    "end": "1957960"
  },
  {
    "text": "so just second yeah so all these things",
    "start": "1957960",
    "end": "1963000"
  },
  {
    "text": "in Chrome would refer to a window object uh which doesn't which you can access",
    "start": "1963000",
    "end": "1969399"
  },
  {
    "text": "without using a parenthesis so that's so these kind of interesting things can be tracked across different browsers uh of",
    "start": "1969399",
    "end": "1975679"
  },
  {
    "text": "course you have to F them on each browser to get the",
    "start": "1975679",
    "end": "1980200"
  },
  {
    "text": "results so that said let's move on to how Dom flow Works uh",
    "start": "1981720",
    "end": "1989200"
  },
  {
    "text": "so uh uh as we talked about we have this Dom hooks which are into every sources",
    "start": "1989200",
    "end": "1996440"
  },
  {
    "text": "and sys possible so right now any source which gets data uh Hook is knows about",
    "start": "1996440",
    "end": "2002120"
  },
  {
    "text": "it so so if a data Comes The Source The Source knows my overriding function",
    "start": "2002120",
    "end": "2008120"
  },
  {
    "text": "takes note of it and adds a specific flag in different methods so one of the",
    "start": "2008120",
    "end": "2013919"
  },
  {
    "text": "methods is by just changing the value or prepending or appending uh depending",
    "start": "2013919",
    "end": "2019240"
  },
  {
    "text": "upon the context in which the code is used so here I would say okay uh so this",
    "start": "2019240",
    "end": "2024399"
  },
  {
    "text": "location has been called U and I'm just adding a flag to it so whoever sings who",
    "start": "2024399",
    "end": "2031480"
  },
  {
    "text": "tries to get this result might get the data so so one thing to note here is of",
    "start": "2031480",
    "end": "2038039"
  },
  {
    "text": "course this level of uh tracking uh you",
    "start": "2038039",
    "end": "2043440"
  },
  {
    "text": "know tracking the sources to syns is nowhere close to how you would be doing in uh Native level you know V8 level",
    "start": "2043440",
    "end": "2050560"
  },
  {
    "text": "Tain tracking so that's that's the most exertive and complete way of doing uh",
    "start": "2050560",
    "end": "2056679"
  },
  {
    "text": "analyzing sources to sys but this kind of helps you understand uh most cases of",
    "start": "2056679",
    "end": "2062800"
  },
  {
    "text": "uh you know sources to Sy flows and then the Ted data can go through different different uh filters so which can be a",
    "start": "2062800",
    "end": "2070760"
  },
  {
    "text": "json. stringify or json. pars things like a substring many uh you know it can go",
    "start": "2070760",
    "end": "2077800"
  },
  {
    "text": "through a lot of lot of logic even the the whole string can be lost and you can have a completely new string from it so",
    "start": "2077800",
    "end": "2086800"
  },
  {
    "text": "and then uh it goes into the sync so whenever uh a sync receives data or sing",
    "start": "2086800",
    "end": "2092158"
  },
  {
    "text": "also knows okay so if if this has gone through a source which has already been",
    "start": "2092159",
    "end": "2097359"
  },
  {
    "text": "uh you know which has already had a flag attached to it then you can kind of tell",
    "start": "2097359",
    "end": "2102720"
  },
  {
    "text": "whether uh this you know this piece of data has taken this path or not so",
    "start": "2102720",
    "end": "2110440"
  },
  {
    "text": "thinking of a simple example uh so every time for instance if you if you have a",
    "start": "2110440",
    "end": "2116560"
  },
  {
    "text": "document. cookie which goes through different methods and ultimately ends up ends up in some div. in",
    "start": "2116560",
    "end": "2123320"
  },
  {
    "text": "HTML so so every time the cookie accessed that specific data is you know",
    "start": "2123320",
    "end": "2129520"
  },
  {
    "text": "marked with or tagged with uh a flag which says okay I am do cookie with a",
    "start": "2129520",
    "end": "2136839"
  },
  {
    "text": "certain flag and it goes through Transformations and ultimately when the inner html's uh inner htmls sync",
    "start": "2136839",
    "end": "2146480"
  },
  {
    "text": "registers uh look at this they understand what's happening here so so",
    "start": "2146480",
    "end": "2152119"
  },
  {
    "text": "that's one way of doing it in certain methods you might you have to do you have to make use of javascripts boxing",
    "start": "2152119",
    "end": "2158000"
  },
  {
    "text": "property so in JavaScript if you have a literal string like St Str equals hello",
    "start": "2158000",
    "end": "2163280"
  },
  {
    "text": "and say type of string type of s Str that would be string the literal JavaScript string now you can add a",
    "start": "2163280",
    "end": "2170040"
  },
  {
    "text": "property to that string it's uh because we know the mother of all everything in",
    "start": "2170040",
    "end": "2175880"
  },
  {
    "text": "JavaScript is object now you can still say Okay St str. flag equals true and if",
    "start": "2175880",
    "end": "2182520"
  },
  {
    "text": "you still say type of s strr that would still be string but you can if you access s Str directly that would be a",
    "start": "2182520",
    "end": "2188920"
  },
  {
    "text": "string but if you say s strr do some property it would have the",
    "start": "2188920",
    "end": "2194720"
  },
  {
    "text": "flag yeah so let's see uh more about how I",
    "start": "2195119",
    "end": "2201440"
  },
  {
    "text": "generate this uh source to sync uh stat Trace so uh I was able to make use of uh",
    "start": "2201440",
    "end": "2210599"
  },
  {
    "text": "v8's powerful uh uh stack tracing method which is also available in Chrome so if",
    "start": "2210599",
    "end": "2217800"
  },
  {
    "text": "you deliberately throw an error at a given line of code then it it actually",
    "start": "2217800",
    "end": "2223000"
  },
  {
    "text": "gives you an error do stack which tells you at this line uh okay this this error",
    "start": "2223000",
    "end": "2230319"
  },
  {
    "text": "has happened at this line and here's the stack through which I have been called or this the line above me have been",
    "start": "2230319",
    "end": "2236839"
  },
  {
    "text": "called uh and it just gives you the stack and and it easily integrates with",
    "start": "2236839",
    "end": "2244000"
  },
  {
    "text": "Chrome's Dev tools as we saw you can just click on the links and go and navigate what the files are and also um",
    "start": "2244000",
    "end": "2250240"
  },
  {
    "text": "in in using using it in complex real world applications you have to Blacklist a lot of things for example if you just",
    "start": "2250240",
    "end": "2257000"
  },
  {
    "text": "simply do this on all uh sources and Sy on all web apps uh it would give you a",
    "start": "2257000",
    "end": "2262640"
  },
  {
    "text": "lot of stray information that you might not need for instance uh if your web app at some point is using uh Google",
    "start": "2262640",
    "end": "2269640"
  },
  {
    "text": "analytics then your G or JS code just comes in and sticks into this uh stack",
    "start": "2269640",
    "end": "2275200"
  },
  {
    "text": "so you need to look for all these stuff and Blacklist them so with that being said uh I will",
    "start": "2275200",
    "end": "2283440"
  },
  {
    "text": "go through four interesting scenarios and use the hook is tool to find web AB",
    "start": "2283440",
    "end": "2288800"
  },
  {
    "text": "box so let me go through that quickly so the first thing uh is something which I",
    "start": "2288800",
    "end": "2295079"
  },
  {
    "text": "kind of talked about already uh is which most most pen testing uh tools Miss is",
    "start": "2295079",
    "end": "2302640"
  },
  {
    "text": "your hr's response or your websockets response and how they are being operate",
    "start": "2302640",
    "end": "2307720"
  },
  {
    "text": "into the Dom so I always used to wonder when when a web app is using uh some API",
    "start": "2307720",
    "end": "2313319"
  },
  {
    "text": "some API and fetches some Json content I always used to wonder okay what's going to happen to this Json content because",
    "start": "2313319",
    "end": "2320079"
  },
  {
    "text": "regardless of what's happening on the server side they might be doing proper uh filtering and output encoding",
    "start": "2320079",
    "end": "2325680"
  },
  {
    "text": "regardless of that the ultimate uh choke point is what your JavaScript is doing",
    "start": "2325680",
    "end": "2333119"
  },
  {
    "text": "before pushing it to the Dom right so",
    "start": "2333119",
    "end": "2338400"
  },
  {
    "text": "so uh and and an example for that would look something like this so you get a",
    "start": "2338400",
    "end": "2344240"
  },
  {
    "text": "response so this is a second order Dom exess so you get a response you do a json. pars your response you take a",
    "start": "2344240",
    "end": "2351359"
  },
  {
    "text": "certain part of your response and then push it into the Dom right so this can",
    "start": "2351359",
    "end": "2356599"
  },
  {
    "text": "become interesting while while you're dealing with hook is",
    "start": "2356599",
    "end": "2361800"
  },
  {
    "text": "especially because your your shr do response text is no more directly",
    "start": "2361800",
    "end": "2368240"
  },
  {
    "text": "injected into the Dom but a part of it is injected into the Dom but um in in",
    "start": "2368240",
    "end": "2373560"
  },
  {
    "text": "most of the cases when you deal with Json content uh you're that you would be",
    "start": "2373560",
    "end": "2379319"
  },
  {
    "text": "most most of the apps usually use json.parse so you have your json. pars",
    "start": "2379319",
    "end": "2385000"
  },
  {
    "text": "here as a filter so if you also reg uh hook into json.parse and kind of have",
    "start": "2385000",
    "end": "2394800"
  },
  {
    "text": "the kind of give the data that you want to give so that uh all other Hook is components can know okay this has gone",
    "start": "2394800",
    "end": "2401560"
  },
  {
    "text": "through this flow then uh you can easily identify these kind of vulnerabilities",
    "start": "2401560",
    "end": "2408280"
  },
  {
    "text": "so yeah uh let me",
    "start": "2409400",
    "end": "2413920"
  },
  {
    "text": "show I'll just try hook on dam. me and",
    "start": "2420920",
    "end": "2428760"
  },
  {
    "text": "yep cool",
    "start": "2432000",
    "end": "2436200"
  },
  {
    "text": "so it's just infinet",
    "start": "2443720",
    "end": "2448359"
  },
  {
    "text": "um okay so yeah so this is an example of uh ajon",
    "start": "2450960",
    "end": "2459880"
  },
  {
    "text": "response being injected directly into the Dom as you can see here uh it's it's kind of like the same code uh so this is",
    "start": "2459880",
    "end": "2467839"
  },
  {
    "text": "the vulnerable script uh yeah so this is the vulnerable line",
    "start": "2467839",
    "end": "2473960"
  },
  {
    "text": "of script this is where the actual domis takes place and so uh you can pretty",
    "start": "2473960",
    "end": "2480160"
  },
  {
    "text": "much tell from just by looking at the code this is this is a proper Dom assess",
    "start": "2480160",
    "end": "2485400"
  },
  {
    "text": "so if you look into Hook is things which are specifically uh uh which hookes can",
    "start": "2485400",
    "end": "2492040"
  },
  {
    "text": "find that okay this can be really interesting or serious issue or can be possibly a dois issue it's going to give",
    "start": "2492040",
    "end": "2498599"
  },
  {
    "text": "you a different uh look of it it just highlights that",
    "start": "2498599",
    "end": "2504040"
  },
  {
    "text": "and and it it also gives you the line and so it's in div do div in html. js on",
    "start": "2504040",
    "end": "2510880"
  },
  {
    "text": "line 16 is where you have actually have to fix this so the interesting thing",
    "start": "2510880",
    "end": "2516520"
  },
  {
    "text": "here is this this mechanism of testing for web apps by you know doing all these things is",
    "start": "2516520",
    "end": "2523160"
  },
  {
    "text": "it's not direct it's not just directly useful to the pent testers but uh it's",
    "start": "2523160",
    "end": "2528200"
  },
  {
    "text": "directly it can be directly used by developers as well so if you see developers when they try to go and push",
    "start": "2528200",
    "end": "2535520"
  },
  {
    "text": "some code uh before they do all this they they try to do the local changes",
    "start": "2535520",
    "end": "2540720"
  },
  {
    "text": "and they actually try it on their web app on their local site so when they do that if you have if the developer",
    "start": "2540720",
    "end": "2547839"
  },
  {
    "text": "has something like this enabled on the Fly and uh he can keep browsing his",
    "start": "2547839",
    "end": "2553640"
  },
  {
    "text": "website or he can keep testing his new feature as in when these vulnerable components comes into the Dom U hookes",
    "start": "2553640",
    "end": "2561000"
  },
  {
    "text": "alerts the developer and tells hey you have something going on wrong because one of the fundamental problem with",
    "start": "2561000",
    "end": "2567559"
  },
  {
    "text": "scanning or you know Finding web app bugs is actually the quote path to take",
    "start": "2567559",
    "end": "2573559"
  },
  {
    "text": "so if you give this if you give a whole new app to a pentester and hey okay go",
    "start": "2573559",
    "end": "2579440"
  },
  {
    "text": "and pentest this app he might try try out the natural spidering way of doing",
    "start": "2579440",
    "end": "2584960"
  },
  {
    "text": "things and he tries to understand the web app by looking at it a little bit but it cannot get as much closer as a",
    "start": "2584960",
    "end": "2591920"
  },
  {
    "text": "developer knows the web app so and he doesn't have to do anything extra he",
    "start": "2591920",
    "end": "2597400"
  },
  {
    "text": "just integrates with it so this can be pretty useful to developers and if you de and integrating tools like this into",
    "start": "2597400",
    "end": "2605480"
  },
  {
    "text": "the developer workflow will actually actually help so yeah as you saw here so this",
    "start": "2605480",
    "end": "2612040"
  },
  {
    "text": "Hook was able to identify the vulnerability and also uh for p",
    "start": "2612040",
    "end": "2617680"
  },
  {
    "text": "penetration testers who are more interested in finding these kind of bugs they can just use dflow I have I have a",
    "start": "2617680",
    "end": "2624520"
  },
  {
    "text": "different interface for that so okay uh this this can be things like okay I want",
    "start": "2624520",
    "end": "2630040"
  },
  {
    "text": "to find sources like smml HTP request websocket or even document. name which",
    "start": "2630040",
    "end": "2637440"
  },
  {
    "text": "leads into inner HTML so yeah and it tells you whether",
    "start": "2637440",
    "end": "2643680"
  },
  {
    "text": "you know what kind of it just gives you an alert but the end of the day it finds everything and logs them into the uh",
    "start": "2643680",
    "end": "2649720"
  },
  {
    "text": "console and he knows where the vulnerability is from this so that's pretty useful",
    "start": "2649720",
    "end": "2656640"
  },
  {
    "text": "too so yeah this is basically uh using json.",
    "start": "2656640",
    "end": "2662040"
  },
  {
    "text": "pars as a filter and giving the hook is intelligence to that the second one is",
    "start": "2662040",
    "end": "2667119"
  },
  {
    "text": "kind of interesting I will have to just go through this pretty quickly uh I have three more cases to show so yeah so uh",
    "start": "2667119",
    "end": "2675319"
  },
  {
    "text": "most of us would have been aware of iframe sandboxing iframe sandboxing is uh Bas it's it's a HTML 5 concept uh in",
    "start": "2675319",
    "end": "2684520"
  },
  {
    "text": "addition to the normal I frame the sand Bots would execute in a null origin and",
    "start": "2684520",
    "end": "2690559"
  },
  {
    "text": "if you want to run untrusted code in your web app in your in your domain then",
    "start": "2690559",
    "end": "2695640"
  },
  {
    "text": "you can just use this and and even if you want to enable scripts or disable scripts all these kind of controls uh",
    "start": "2695640",
    "end": "2702079"
  },
  {
    "text": "are available using iframe sand bots so as you can see here you have a trusted parent window think of websites like",
    "start": "2702079",
    "end": "2709480"
  },
  {
    "text": "jsfiddle uh know Cod pendo things like that and then you have an unrusted",
    "start": "2709480",
    "end": "2715040"
  },
  {
    "text": "sandbed high frame child which by default uh you know the origin would be",
    "start": "2715040",
    "end": "2720359"
  },
  {
    "text": "null and you just say I just need access to allow scripts so any script that this",
    "start": "2720359",
    "end": "2725400"
  },
  {
    "text": "if frame would execute would actually be executed but in the context of the null",
    "start": "2725400",
    "end": "2731000"
  },
  {
    "text": "origin so I have a uh so this is the explanation of what an iframe sandbo is",
    "start": "2731000",
    "end": "2736880"
  },
  {
    "text": "I'm just not going through it but yeah uh I have an example of this uh written",
    "start": "2736880",
    "end": "2742240"
  },
  {
    "text": "as a code in damn vulnerable uh just go through that pretty quickly oops",
    "start": "2742240",
    "end": "2751119"
  },
  {
    "text": "Yeah so so this is the parent domain uh which is the trusted one and then you you kind",
    "start": "2751280",
    "end": "2758720"
  },
  {
    "text": "of give a payload through the parent domain which should take that data and execute that script in the iframe sand",
    "start": "2758720",
    "end": "2766119"
  },
  {
    "text": "bots so here's the code which does that so",
    "start": "2766119",
    "end": "2773160"
  },
  {
    "text": "so the actual bug is in this where you do a window. onload and then once the",
    "start": "2773160",
    "end": "2780680"
  },
  {
    "text": "page has been loaded you try to create an iframe sand bots on the Fly and then take this user input and then inject",
    "start": "2780680",
    "end": "2786720"
  },
  {
    "text": "into the iframe and at the same time your parent page has a code which which",
    "start": "2786720",
    "end": "2793160"
  },
  {
    "text": "executes secure code so for example U if if if someone is able to execute this",
    "start": "2793160",
    "end": "2799000"
  },
  {
    "text": "line of code then he has actually broken the sand it's equivalent to Breaking the sandboxs in this case because uh he's",
    "start": "2799000",
    "end": "2805559"
  },
  {
    "text": "executing code the challenge here the challenge here is to execute code on the iframe window but it should affect",
    "start": "2805559",
    "end": "2813520"
  },
  {
    "text": "something in your parent window so here if you see the the global variable is of course securecore flag which is not",
    "start": "2813520",
    "end": "2820880"
  },
  {
    "text": "which doesn't have a declaration the developer just made a mistake by doing okay securecore flag equals true",
    "start": "2820880",
    "end": "2828800"
  },
  {
    "text": "now if yeah so uh yeah and one this this",
    "start": "2828800",
    "end": "2836400"
  },
  {
    "text": "this this uh this condition can only be executed if the window. infero method can be called but this cannot be called",
    "start": "2836400",
    "end": "2844280"
  },
  {
    "text": "uh until unless you are executing code in the same domain hope that hope the explanation helps so here uh the actual",
    "start": "2844280",
    "end": "2853920"
  },
  {
    "text": "payload be something like uh whatever the user gives here would be executed in these iframe sand Bots and yeah you just",
    "start": "2853920",
    "end": "2861720"
  },
  {
    "text": "broke out of the sand bots so so I was able to run script in this",
    "start": "2861720",
    "end": "2867040"
  },
  {
    "text": "iframe which actually affected this so let's see what's happening here",
    "start": "2867040",
    "end": "2872200"
  },
  {
    "text": "uh so this was the initial scenario we have the trusted parent window the interested parent window uned child",
    "start": "2872200",
    "end": "2879240"
  },
  {
    "text": "iframe and initially uh there was no window. name for this if frame right",
    "start": "2879240",
    "end": "2886640"
  },
  {
    "text": "this sandbusted I frame now I was able to execute any script in this context so",
    "start": "2886640",
    "end": "2892040"
  },
  {
    "text": "I set a name name equals securecore flag so by default everything in JavaScript",
    "start": "2892040",
    "end": "2897319"
  },
  {
    "text": "on the Dom is executed is is on top of window object so here it would be window. name equal",
    "start": "2897319",
    "end": "2903359"
  },
  {
    "text": "secure flag so this if frames name now becomes secure flag now because this if frames",
    "start": "2903359",
    "end": "2911200"
  },
  {
    "text": "name is in Secure flag uh in the Dom usually your usually the parent windows and the",
    "start": "2911200",
    "end": "2919040"
  },
  {
    "text": "child Windows the one thing one of the things that being shared is the window. name right so what has actually happened",
    "start": "2919040",
    "end": "2926559"
  },
  {
    "text": "here is a Dom clobbering your uh child window was able to",
    "start": "2926559",
    "end": "2931920"
  },
  {
    "text": "replace the actual securecore flag uh global able in the parent window",
    "start": "2931920",
    "end": "2938559"
  },
  {
    "text": "by changing its name to secure flag that which created a new uh new Global",
    "start": "2938559",
    "end": "2946359"
  },
  {
    "text": "variable in the parent flag in the parent window yeah so uh another interesting so",
    "start": "2946359",
    "end": "2954240"
  },
  {
    "text": "yeah of course you can find these uh Global variables by who by using hook",
    "start": "2954240",
    "end": "2959280"
  },
  {
    "text": "and just give me the global variables it just tells you what are the global variables which are listed in the current page now redirecting parent",
    "start": "2959280",
    "end": "2966720"
  },
  {
    "text": "window with uh while opening links in a new tab so some time back someone on guy",
    "start": "2966720",
    "end": "2971880"
  },
  {
    "text": "called Daniel report on hacker one which was the vulnerability on hacker one and different other websites where uh where",
    "start": "2971880",
    "end": "2979280"
  },
  {
    "text": "you can uh you can have a parent window uh open a new tab with a Target equals",
    "start": "2979280",
    "end": "2984480"
  },
  {
    "text": "under blank then it and it can be malicious and if he does a window.",
    "start": "2984480",
    "end": "2989640"
  },
  {
    "text": "window. opener. location. Reload of some fishing page then the original page just",
    "start": "2989640",
    "end": "2995040"
  },
  {
    "text": "changes changes its uh domain so which can be pretty useful",
    "start": "2995040",
    "end": "3000359"
  },
  {
    "text": "in uh fishing attacks um so here's the attack uh which the guy",
    "start": "3000359",
    "end": "3008079"
  },
  {
    "text": "so I'm just so this is a page which has Okay click me I'm this which has a",
    "start": "3008079",
    "end": "3013440"
  },
  {
    "text": "underscore blank uh which opens in the new tab so when someone clicks that as you can see here this was the original",
    "start": "3013440",
    "end": "3019359"
  },
  {
    "text": "page which was from from this window which was a completely different domain you are able to change uh the original",
    "start": "3019359",
    "end": "3026440"
  },
  {
    "text": "page window so this can be used in classical attacks like tabnabbing which",
    "start": "3026440",
    "end": "3031680"
  },
  {
    "text": "which browsers by default try to prevent when you do a normal window. open but this is a uh case in uh this is a case",
    "start": "3031680",
    "end": "3040440"
  },
  {
    "text": "in uh Chrome and Firefox when you do open tabs using uh underscore",
    "start": "3040440",
    "end": "3046280"
  },
  {
    "text": "blank so yeah so how so the way to prevent this would be to use uh to make",
    "start": "3046280",
    "end": "3052520"
  },
  {
    "text": "sure before redirecting uh you set the window. opener to null or to make sure that your",
    "start": "3052520",
    "end": "3058720"
  },
  {
    "text": "new tab has you know real equals no refer set to",
    "start": "3058720",
    "end": "3063960"
  },
  {
    "text": "it yeah so yeah either so that's why P",
    "start": "3064000",
    "end": "3069200"
  },
  {
    "text": "one of the things hacker one does right now is to set all these uh you know Set",
    "start": "3069200",
    "end": "3074280"
  },
  {
    "text": "uh things to null before redirecting to different pages so it can be interesting if you're uh doing it in in the context",
    "start": "3074280",
    "end": "3081559"
  },
  {
    "text": "of U you know web apps like banking apps where if someone nav Gates away and then",
    "start": "3081559",
    "end": "3087720"
  },
  {
    "text": "comes back comes back and sees a login page they might think okay this is the login page of the bank which has already",
    "start": "3087720",
    "end": "3093319"
  },
  {
    "text": "on but in fact you on a different domain a classical fishing attack so so um so",
    "start": "3093319",
    "end": "3101079"
  },
  {
    "text": "why is this interesting so when I wanted to test for these kind of vulnerabilities I was looking into uh I",
    "start": "3101079",
    "end": "3107280"
  },
  {
    "text": "the task is basically to look into pages and look okay uh give me the links which has Target equals undor blank and",
    "start": "3107280",
    "end": "3113440"
  },
  {
    "text": "doesn't have Rel equals no referrer but static analysis is pretty bad at doing",
    "start": "3113440",
    "end": "3119960"
  },
  {
    "text": "that because by default uh in most of the cases I've seen uh developers have",
    "start": "3119960",
    "end": "3126920"
  },
  {
    "text": "the links already pop you know being populated in the HTML and then they have some jQuery code which loads on window",
    "start": "3126920",
    "end": "3134280"
  },
  {
    "text": "loading which loads on window. load and then tries to injector blank and you",
    "start": "3134280",
    "end": "3139520"
  },
  {
    "text": "know R equals no refer on the load so here you need to dynamically understand the Dom and",
    "start": "3139520",
    "end": "3145079"
  },
  {
    "text": "dynamically par the Dom and then get the results so this can be possible only by using some Dynamic analysis tools like",
    "start": "3145079",
    "end": "3152839"
  },
  {
    "text": "hookes okay here's the final one and a pretty interesting one and the the one",
    "start": "3152839",
    "end": "3159119"
  },
  {
    "text": "of the problems with ecmascript f methods which I'm going to talk about so so I I found this vulnerability in one",
    "start": "3159119",
    "end": "3165599"
  },
  {
    "text": "of uh in a couple of templating engines uh which are not so quite popular but",
    "start": "3165599",
    "end": "3170640"
  },
  {
    "text": "yeah and also uh in also in custom implementation of templating engine so",
    "start": "3170640",
    "end": "3176880"
  },
  {
    "text": "uh to talk about frontend templating engines so you have some data a custom data and then you have a templating",
    "start": "3176880",
    "end": "3183799"
  },
  {
    "text": "language something like okay data. Mark with which opens like this which has tags like this then uh the template",
    "start": "3183799",
    "end": "3191960"
  },
  {
    "text": "compiler understands okay I need to uh replace this word with this pretty simple right so you if you are a",
    "start": "3191960",
    "end": "3199319"
  },
  {
    "text": "templating engine developer um the and if you're trying to do that in JavaScript on the front end the natural",
    "start": "3199319",
    "end": "3205960"
  },
  {
    "text": "way would be to load the template data object try to do all the filtering and encoding and then you know find whatever",
    "start": "3205960",
    "end": "3213280"
  },
  {
    "text": "is the your languages templating languages pattern and do the do a simple string do replace of pattern and the",
    "start": "3213280",
    "end": "3219960"
  },
  {
    "text": "matching data so here's a simple templating code uh which which I'm going to talk about so assume for for the sake",
    "start": "3219960",
    "end": "3228359"
  },
  {
    "text": "of this demo like the actual input HTML is the first line with the placeholder",
    "start": "3228359",
    "end": "3234480"
  },
  {
    "text": "which is the templating directive here so me as a templating engine this do",
    "start": "3234480",
    "end": "3239680"
  },
  {
    "text": "templating is going to replace whenever I say placeholder I'm going to replace that with a certain value so in this",
    "start": "3239680",
    "end": "3246440"
  },
  {
    "text": "case I'm going to replace that with the input which the user gave",
    "start": "3246440",
    "end": "3252079"
  },
  {
    "text": "so uh and before you know doing the string. replace inner html. replace of",
    "start": "3252079",
    "end": "3258040"
  },
  {
    "text": "sorry input html. replace of placeholder comma input I'm I'm going to do a",
    "start": "3258040",
    "end": "3263200"
  },
  {
    "text": "filtering and the filtering is a pretty standard HTML filtering where you take care you take care of single quotes",
    "start": "3263200",
    "end": "3269200"
  },
  {
    "text": "double quotes less than greater than stuff like that",
    "start": "3269200",
    "end": "3274559"
  },
  {
    "text": "uh let's take a look at an example",
    "start": "3274559",
    "end": "3279799"
  },
  {
    "text": "yeah so yeah uh so here's the input to the templating engine so whatever you",
    "start": "3279799",
    "end": "3285680"
  },
  {
    "text": "give here so if I say SRC equals some smaller in. blah blah blah. PNG then",
    "start": "3285680",
    "end": "3291440"
  },
  {
    "text": "yeah this is the actual templating code which was generated and it just writes",
    "start": "3291440",
    "end": "3297599"
  },
  {
    "text": "into the document dot uh you know it just does a document. write and puts that into the current Dom so here uh we",
    "start": "3297599",
    "end": "3305400"
  },
  {
    "text": "can actually cause an NSS in this scenario uh but let's let's take a look at that so if you if you try to do",
    "start": "3305400",
    "end": "3312359"
  },
  {
    "text": "things like 1 2 three single Cotes double quotes blah blah blah uh whatever",
    "start": "3312359",
    "end": "3317559"
  },
  {
    "text": "all these are being filtered because the templating engine already does a filtering right so as you already",
    "start": "3317559",
    "end": "3324680"
  },
  {
    "text": "know to get out of this context context you need to have a single code to get out of this context because your",
    "start": "3324680",
    "end": "3330720"
  },
  {
    "text": "placeholder ends with a single code so if you have a if you can have a single code you can get past that and have you",
    "start": "3330720",
    "end": "3338960"
  },
  {
    "text": "know standard HSS uh code like onload equals or on error equals blah blah blah but we",
    "start": "3338960",
    "end": "3346480"
  },
  {
    "text": "already have filtering here in this case so the actual payload that can bypass this would be something like a dollar",
    "start": "3346480",
    "end": "3353160"
  },
  {
    "text": "and a btic on error equals aler",
    "start": "3353160",
    "end": "3358720"
  },
  {
    "text": "of yeah so in this case I'm using couple of interesting",
    "start": "3358720",
    "end": "3365839"
  },
  {
    "text": "characters here of course the first one is dollar which is pretty interesting in this context and then uh backtick yeah",
    "start": "3365839",
    "end": "3371680"
  },
  {
    "text": "back ticks in general are you know for a long time I've been considered bad but in frontend templating engine uh",
    "start": "3371680",
    "end": "3377720"
  },
  {
    "text": "encodings you don't usually see things like backticks until unless if the template engine writer is aware of",
    "start": "3377720",
    "end": "3384400"
  },
  {
    "text": "things like mutation SSS and knows things like msss can cause different bugs he's going to replace stuff like",
    "start": "3384400",
    "end": "3392400"
  },
  {
    "text": "that but yeah in a traditional filtering you're not going to look at uh things",
    "start": "3392400",
    "end": "3397640"
  },
  {
    "text": "like back ticks or dollars so if you do uh if you doing a uh you know templating",
    "start": "3397640",
    "end": "3403640"
  },
  {
    "text": "of that I'm not so sure how many can see this but yeah this can actually get past the you know single code without using a",
    "start": "3403640",
    "end": "3410680"
  },
  {
    "text": "single code so let's see what happened here so of course the culprit here is",
    "start": "3410680",
    "end": "3415960"
  },
  {
    "text": "the in input html. replace and this was the bypass that we",
    "start": "3415960",
    "end": "3421039"
  },
  {
    "text": "used so what's happening here is uh uh EAS script's uh definition has few",
    "start": "3421039",
    "end": "3428359"
  },
  {
    "text": "interesting ways of doing stuff uh and one of them is the string. prototype.",
    "start": "3428359",
    "end": "3433520"
  },
  {
    "text": "replace so usually when you write a string do a string. replace every",
    "start": "3433520",
    "end": "3439440"
  },
  {
    "text": "language gives you okay tell me the string to search for and let me replace with that there's no special conditions",
    "start": "3439440",
    "end": "3446240"
  },
  {
    "text": "but in case of JavaScript which uses ecmascript which uses ecmascript standard uh you have something",
    "start": "3446240",
    "end": "3453280"
  },
  {
    "text": "like special cases with dollars if something if your text to be replaced starts with a dollar uh then it can take",
    "start": "3453280",
    "end": "3461680"
  },
  {
    "text": "uh different behaviors then you can do different behaviors so here the interesting behavior that we made use of was dollar and the btic so the dollar",
    "start": "3461680",
    "end": "3469079"
  },
  {
    "text": "and the btic would uh replace the current string with whatever was there",
    "start": "3469079",
    "end": "3474760"
  },
  {
    "text": "before before the current context so here we made use of the single quote",
    "start": "3474760",
    "end": "3480079"
  },
  {
    "text": "which actually started the context that we were in and we were able to use the same characters even though they were",
    "start": "3480079",
    "end": "3486720"
  },
  {
    "text": "being filtered yeah so yeah and so yeah so these kind",
    "start": "3486720",
    "end": "3495079"
  },
  {
    "text": "of things can be directly found using uh tools like Hook is so uh the whole idea",
    "start": "3495079",
    "end": "3501240"
  },
  {
    "text": "here is we need to start thinking in terms of uh you know identifying bugs in",
    "start": "3501240",
    "end": "3506359"
  },
  {
    "text": "the front end not just by looking at traditional domes but also different",
    "start": "3506359",
    "end": "3511760"
  },
  {
    "text": "nuances like this these are not just the uh simple nuances but there are like tons of them there are tons of examples",
    "start": "3511760",
    "end": "3518000"
  },
  {
    "text": "of Dom clobbering uh few which can bypass important security restrictions",
    "start": "3518000",
    "end": "3524920"
  },
  {
    "text": "and the way people do code on the front end today so uh yeah so the next thing I'm working",
    "start": "3524920",
    "end": "3533000"
  },
  {
    "text": "on with respect to hook Kish is of course improving the track of you know the how we track data",
    "start": "3533000",
    "end": "3539000"
  },
  {
    "text": "between the source and syns of course I'm trying to patch chromium to make sure that all these properties which",
    "start": "3539000",
    "end": "3545000"
  },
  {
    "text": "have been recently uh the location property can be overden again and you",
    "start": "3545000",
    "end": "3550400"
  },
  {
    "text": "know track more things like post messages and uh easily identify or have a library to or a framework to identify",
    "start": "3550400",
    "end": "3557720"
  },
  {
    "text": "especially interesting cases like Dom cling so yeah that's that's what I've",
    "start": "3557720",
    "end": "3563480"
  },
  {
    "text": "been working on and yeah do contribute and make use of this Tool uh of course",
    "start": "3563480",
    "end": "3569520"
  },
  {
    "text": "criticize As You Wish uh it's on github.com keptic hook it's a it's a",
    "start": "3569520",
    "end": "3576720"
  },
  {
    "text": "it's a Chrome extension of course every Chrome extensions are open source and I",
    "start": "3576720",
    "end": "3582160"
  },
  {
    "text": "would love it if someone comes and talks more about this and U you know build",
    "start": "3582160",
    "end": "3587520"
  },
  {
    "text": "tools like this and start P testing uh or looking for these kind of bugs um",
    "start": "3587520",
    "end": "3594359"
  },
  {
    "text": "yeah any questions",
    "start": "3594359",
    "end": "3598038"
  },
  {
    "text": "thank you [Applause]",
    "start": "3604240",
    "end": "3611059"
  }
]