[
  {
    "text": "so this is going to be a talk about Advanced black hat attack techniques against Android we're going to ask the",
    "start": "280",
    "end": "6440"
  },
  {
    "text": "question what is the most effective and most stealthy way to gain complete control of an Android device and in",
    "start": "6440",
    "end": "12960"
  },
  {
    "text": "order to answer that question we're going to be taking a deep dive into andr internals and in that deep dive we're",
    "start": "12960",
    "end": "19880"
  },
  {
    "text": "going to discover a system component which is little researched and little known but at the same time it's so",
    "start": "19880",
    "end": "25599"
  },
  {
    "text": "Central to the architecture of the system that any attacker can actually compromise that component and gain",
    "start": "25599",
    "end": "31880"
  },
  {
    "text": "control over it will immediately have full power over the system so welcome to man in the binder here controls IPC",
    "start": "31880",
    "end": "39160"
  },
  {
    "text": "controls the Droid and we'll present our research in",
    "start": "39160",
    "end": "44520"
  },
  {
    "text": "the form of a story it'll be an a hack in three acts if you will in the First Act we'll focus on the architecture of",
    "start": "44520",
    "end": "51760"
  },
  {
    "text": "the system and specifically on those parts we need to know in order to understand the attacks and the second",
    "start": "51760",
    "end": "57320"
  },
  {
    "text": "part that will be the fun part we actually attack an Android device we",
    "start": "57320",
    "end": "62519"
  },
  {
    "text": "attack a Target application and we look from the perspective of two attackers who come from different experience levels levels and different knowledge",
    "start": "62519",
    "end": "69479"
  },
  {
    "text": "levels of the system and in act three we'll show you how you can prepare your",
    "start": "69479",
    "end": "74520"
  },
  {
    "text": "clients and your devices against these kinds of attacks that we're going to present today so like every good story",
    "start": "74520",
    "end": "80479"
  },
  {
    "text": "our story has a cast can anybody see everybody see this yeah think it's okay",
    "start": "80479",
    "end": "85759"
  },
  {
    "text": "fine uh so first there's us my myself I'm niai and this is Idan we are",
    "start": "85759",
    "end": "92040"
  },
  {
    "text": "co-authors of This research we work for checkpoint in checkpoints special",
    "start": "92040",
    "end": "97240"
  },
  {
    "text": "vulnerability and malware research group our group basically deals with Advanced security research and you may have seen",
    "start": "97240",
    "end": "103439"
  },
  {
    "text": "our work in the recent Defcon we'll also be probably presenting at CCC so watch this",
    "start": "103439",
    "end": "109439"
  },
  {
    "text": "space and then the main character will be a victim application it's a serious",
    "start": "109439",
    "end": "114600"
  },
  {
    "text": "Android banking application and like most banking applications it's meant to transfer funds to receive funds and to",
    "start": "114600",
    "end": "121479"
  },
  {
    "text": "check and to check your balance and our attackers would like to attack this application simply because they want",
    "start": "121479",
    "end": "126799"
  },
  {
    "text": "lots of money this is the noob attacker he he",
    "start": "126799",
    "end": "131920"
  },
  {
    "text": "doesn't really know the system that well he's not really aware of how the internals work but he's still willing to",
    "start": "131920",
    "end": "137720"
  },
  {
    "text": "try now this attacker basically represents most of us as we approach Android most of us don't really know the",
    "start": "137720",
    "end": "144000"
  },
  {
    "text": "system that well so we'll see how that works out and then there's the ninja attacker he's spent months studying the",
    "start": "144000",
    "end": "150000"
  },
  {
    "text": "system before actually lifting a finger against it and we'll see how his attacks defer from the noob and what he knows",
    "start": "150000",
    "end": "156640"
  },
  {
    "text": "that the noob doesn't we have Android system Services they're kind of Silent actors but",
    "start": "156640",
    "end": "161840"
  },
  {
    "text": "they're really important they keep the whole system running and we'll understand why and we'll have the Linux",
    "start": "161840",
    "end": "167400"
  },
  {
    "text": "kernel which is like any other story about Linux a central actor in this story but as you'll see in Android it's",
    "start": "167400",
    "end": "174239"
  },
  {
    "text": "not the kernel is not as important as in under as in other Linux systems and we'll understand why",
    "start": "174239",
    "end": "180360"
  },
  {
    "text": "and now we come to our main mystery all powerful character the binder you may have not heard about the binder but it's",
    "start": "180360",
    "end": "186760"
  },
  {
    "text": "actually handling your most transactive data behind the scenes thousands of times a minute and we learn all about",
    "start": "186760",
    "end": "192200"
  },
  {
    "text": "the binder today but the one thing you need to understand now is that everything goes through the binder and",
    "start": "192200",
    "end": "198200"
  },
  {
    "text": "now let us start with act one in which we'll learn about the architecture of the system and for that I give you aan",
    "start": "198200",
    "end": "204120"
  },
  {
    "text": "hi everyone uh sir first of all inorder",
    "start": "204120",
    "end": "210080"
  },
  {
    "text": "everyone hear me do like that okay so first in order",
    "start": "214239",
    "end": "219480"
  },
  {
    "text": "to attack a system we first need to understand the system and to and to do that let's first take a look at another",
    "start": "219480",
    "end": "225200"
  },
  {
    "text": "operating system that we all know and some of us like Windows so a typical Windows application when it wants to do",
    "start": "225200",
    "end": "232079"
  },
  {
    "text": "something really simple like play a sound what he basically needs to do is um know what kind of a kernel we have in",
    "start": "232079",
    "end": "239159"
  },
  {
    "text": "our application it needs to know what kind of a CIS they need to use they need to enumerate all",
    "start": "239159",
    "end": "244680"
  },
  {
    "text": "the audio devices in the system they need to uh send uh this CIS",
    "start": "244680",
    "end": "252040"
  },
  {
    "text": "basically they need to know a lot of information in order to do something really simple what this is basically",
    "start": "252040",
    "end": "257400"
  },
  {
    "text": "means that our application is really heavy application now I'm not saying that the the programmer needs to know",
    "start": "257400",
    "end": "263440"
  },
  {
    "text": "all this information what I'm saying is the compiler knows all this information it will embed all this information",
    "start": "263440",
    "end": "268919"
  },
  {
    "text": "inside your application and this is exactly what the Android designers wanted to",
    "start": "268919",
    "end": "274560"
  },
  {
    "text": "avoid so in Android the first thing they did they wanted to build an objectoriented operating system in order",
    "start": "274560",
    "end": "280639"
  },
  {
    "text": "to do so the first thing they did they wanted to isolate the application from the kernel so when application will try",
    "start": "280639",
    "end": "288000"
  },
  {
    "text": "to speak directly to the kernel it will fail they introduced A New Concept called system Services what this",
    "start": "288000",
    "end": "294320"
  },
  {
    "text": "basically means is this system Services is responsible for a specific part of the kernel for example if the if",
    "start": "294320",
    "end": "302000"
  },
  {
    "text": "we want to send um if we want to take a picture we need to talk to the camera",
    "start": "302000",
    "end": "307120"
  },
  {
    "text": "manager and the camera manager is the only one that is responsible on doing all this complex information for the",
    "start": "307120",
    "end": "313680"
  },
  {
    "text": "kernel for us um so this is all nice and fun but we still have a question if we",
    "start": "313680",
    "end": "319400"
  },
  {
    "text": "say that we can't talk directly to the colonel how can we uh speak with the how",
    "start": "319400",
    "end": "325039"
  },
  {
    "text": "can we speak with the other processor so in Windows the processor speak with one another uh through the Kel in Android we",
    "start": "325039",
    "end": "332560"
  },
  {
    "text": "have what is called the binder so the binder is a simple uh interprocess",
    "start": "332560",
    "end": "338080"
  },
  {
    "text": "communication mechanism that is in charge of passing the information the request the remote procedure calls to",
    "start": "338080",
    "end": "344039"
  },
  {
    "text": "the required services for example if we want to play a sound our application we need to send a remote procedure call to",
    "start": "344039",
    "end": "351120"
  },
  {
    "text": "the um audio manager and the audio manager will handle all this transaction for",
    "start": "351120",
    "end": "357080"
  },
  {
    "text": "him okay so now let's take an and remember everything goes through the binder it's a very important thing here",
    "start": "357080",
    "end": "363160"
  },
  {
    "text": "so remember uh now let's take a look at how Android developers implemented",
    "start": "363160",
    "end": "368240"
  },
  {
    "text": "binder so they implemented it in two parts the first part is a userland um a",
    "start": "368240",
    "end": "374680"
  },
  {
    "text": "userland um framework part that is responsible on wrapping the remote procedure call into some special",
    "start": "374680",
    "end": "381120"
  },
  {
    "text": "container and another part called the drive the driver kernel which is responsible to pass that information to",
    "start": "381120",
    "end": "387759"
  },
  {
    "text": "the required process so again our example when we want to play a sound we'll need to rra that information using",
    "start": "387759",
    "end": "394880"
  },
  {
    "text": "the user Land part we'll send it to the dri part using the ictl C scull and then",
    "start": "394880",
    "end": "401919"
  },
  {
    "text": "uh unwrap it again using our userland framework into the other application and",
    "start": "401919",
    "end": "407759"
  },
  {
    "text": "he will do again he will talk for us to the drive to the driver the specific",
    "start": "407759",
    "end": "412880"
  },
  {
    "text": "driver now the parcel is basically a flexible extendable data object that is",
    "start": "412880",
    "end": "419160"
  },
  {
    "text": "a we we'll have all the information that we need in order to invoke the remote procedure call so the first thing is",
    "start": "419160",
    "end": "424919"
  },
  {
    "text": "we're going to have is going to have the destination as you can see right here we have the destination for this time is a",
    "start": "424919",
    "end": "430919"
  },
  {
    "text": "media player so we're going to have a string to where we're supposed to go after that we're going to have the",
    "start": "430919",
    "end": "436400"
  },
  {
    "text": "function code the function code is going to tell us which function we want to invoke in the other side and then we're",
    "start": "436400",
    "end": "442599"
  },
  {
    "text": "going to pass the arguments to this function this in this example we're going to send two numbers the left",
    "start": "442599",
    "end": "449720"
  },
  {
    "text": "volume and the right volume and in this case it's ones okay now let's do a short recap",
    "start": "449720",
    "end": "456440"
  },
  {
    "text": "just to see that everyone understands what happened until this point so when our application wants to play a sound he",
    "start": "456440",
    "end": "462800"
  },
  {
    "text": "will send it to the user space part and then he will wrap it inside a parcel the parcel will be sent into the driver part",
    "start": "462800",
    "end": "470599"
  },
  {
    "text": "the driver part will will parse that information and passes to the required process and then again he will send the",
    "start": "470599",
    "end": "477199"
  },
  {
    "text": "right CIS call in order to play that sound in the Sy system okay so this is like now you can",
    "start": "477199",
    "end": "483080"
  },
  {
    "text": "see the real picture of and now you can see what's really going on we have a lot of applications those applications are",
    "start": "483080",
    "end": "489879"
  },
  {
    "text": "sending a lot of request through the binder we have a lot of system services that are receiving those request through",
    "start": "489879",
    "end": "496319"
  },
  {
    "text": "the binder and handling on the communication what I'm basically trying to say here everything goes through the",
    "start": "496319",
    "end": "502159"
  },
  {
    "text": "binder and now for the fun part I'll give you ni for some really cool attacks",
    "start": "502159",
    "end": "507240"
  },
  {
    "text": "n so you ready for some entertainment",
    "start": "507240",
    "end": "513440"
  },
  {
    "text": "well in this act we look at some really popular attacks against Android and we",
    "start": "513440",
    "end": "518959"
  },
  {
    "text": "look at the old way of doing them and we look at the new way that we think they'll be done in the",
    "start": "518959",
    "end": "524279"
  },
  {
    "text": "future well we'll have three rounds and we'll have our two attackers having a",
    "start": "524279",
    "end": "529399"
  },
  {
    "text": "face off again I remind you we have a noob attacker and a ninja attacker and we see the differences between them and their first Target is the most simple",
    "start": "529399",
    "end": "536360"
  },
  {
    "text": "the most common kind of attack you'd want to have against a device key logging they simply want to capture the keystrokes of the user specifically when",
    "start": "536360",
    "end": "542640"
  },
  {
    "text": "he's putting in his user and password into the banking application let's see how the newba attacker actually",
    "start": "542640",
    "end": "547880"
  },
  {
    "text": "approaches the problem and how he sees the system well anat attacker doesn't really know the system that well and",
    "start": "547880",
    "end": "553320"
  },
  {
    "text": "what he sees is that there is a keyboard server which is a system server a system service for which our application",
    "start": "553320",
    "end": "560240"
  },
  {
    "text": "basically registers and it receives the key the keyst data from that server so there's this back and forth going",
    "start": "560240",
    "end": "566519"
  },
  {
    "text": "through from the application to the server and that's how the keyboard data that gets sent and that's what the noob attacker sees now in order to attack the",
    "start": "566519",
    "end": "574560"
  },
  {
    "text": "application the noob attacker uses a very simple approach he's using social engineering he basically tries to",
    "start": "574560",
    "end": "581079"
  },
  {
    "text": "manipulate the user into installing a malicious keyboard application which would then just grabb the keyboard data",
    "start": "581079",
    "end": "586680"
  },
  {
    "text": "and send it to a CNC server now the problem this is a very common approach",
    "start": "586680",
    "end": "592519"
  },
  {
    "text": "it's surprisingly popular we might say that it's actually the only approach in the wild to implement kogos on Android",
    "start": "592519",
    "end": "598000"
  },
  {
    "text": "we've seen some recent attacks against instead uh imitating popular keyboard applications and causing users to",
    "start": "598000",
    "end": "603560"
  },
  {
    "text": "install them and the problem with this of course is that it's very easy to spot all the user has to do is simply go into",
    "start": "603560",
    "end": "609839"
  },
  {
    "text": "the application menu see that a malicious keyboard application is being installed and remove it and Antivirus",
    "start": "609839",
    "end": "615360"
  },
  {
    "text": "vendors Focus specifically on those sort of issues they know how to identify malicious packages they use hashing",
    "start": "615360",
    "end": "621320"
  },
  {
    "text": "techniques to identify uh applications they need to remove so this is an A B",
    "start": "621320",
    "end": "627120"
  },
  {
    "text": "approach which doesn't really work that properly now let's look at how a ninja attacker would try to do it and now",
    "start": "627120",
    "end": "634079"
  },
  {
    "text": "first of all how he would view the system well when a ninja attacker looks at the system the first thing that he takes into account is that everything",
    "start": "634079",
    "end": "641440"
  },
  {
    "text": "goes through the binder and what does that what does that mean in this context well it means that as the keyboard data",
    "start": "641440",
    "end": "648480"
  },
  {
    "text": "gets sent from the keyboard server from the keyboard server to the application to the banking application it all moves",
    "start": "648480",
    "end": "654839"
  },
  {
    "text": "through binder in those Parcels we've discussed so the only thing we need to do is C these parcels and pass them and",
    "start": "654839",
    "end": "661720"
  },
  {
    "text": "get the keyboard data out of them and for that we'll have a demo I'll show you exactly how that's",
    "start": "661720",
    "end": "668720"
  },
  {
    "text": "done okay so the first demo what we're basically is going to do we're going to inject ourself into our bank application",
    "start": "672000",
    "end": "680000"
  },
  {
    "text": "as you can see here we'll check the number of the process that we want to inject ourselves",
    "start": "680000",
    "end": "686560"
  },
  {
    "text": "into in this point it's going to be 9",
    "start": "687760",
    "end": "693040"
  },
  {
    "text": "7 4 and now what you're going to see here",
    "start": "693040",
    "end": "700200"
  },
  {
    "text": "is when whatever we do a keystroke when the keyboard will show up",
    "start": "700200",
    "end": "705760"
  },
  {
    "text": "whatever we see keystroke we'll see these keystrokes because all those keystrokes are passing through the",
    "start": "705760",
    "end": "711680"
  },
  {
    "text": "binder in clear text so for this first example we implemented a key loger",
    "start": "711680",
    "end": "720600"
  },
  {
    "text": "uh um are you",
    "start": "724519",
    "end": "730519"
  },
  {
    "text": "yeah so that was demo number one a pretty simple hack now round one ends in",
    "start": "730519",
    "end": "737880"
  },
  {
    "text": "clear Victory to the ninja attacker because he understands the binder let's move forward let's look at",
    "start": "737880",
    "end": "743720"
  },
  {
    "text": "round two well this is a slightly more advanced attack and it's one of the most",
    "start": "743720",
    "end": "749320"
  },
  {
    "text": "uh interesting most popular attack vectors against sensitive applications but in this case a user uses a banking",
    "start": "749320",
    "end": "755360"
  },
  {
    "text": "application in order to transfer funds from his account to another account and what an attack would like to do the most",
    "start": "755360",
    "end": "762079"
  },
  {
    "text": "uh the kind of most obvious thing to do is to grab that that data on the way and",
    "start": "762079",
    "end": "767800"
  },
  {
    "text": "perhaps change it perhaps move it to the attackers account perhaps change the amount and that's what our two attackers",
    "start": "767800",
    "end": "773199"
  },
  {
    "text": "would like to do so let's look at how the newer sees it and let's look at how",
    "start": "773199",
    "end": "778279"
  },
  {
    "text": "an Android application Android application looks from his perspective well an Android application is really",
    "start": "778279",
    "end": "783720"
  },
  {
    "text": "just a set of activities each screen is actually an activity and most applications use play with those",
    "start": "783720",
    "end": "790480"
  },
  {
    "text": "activities in order to present some kind of interface to the user so in the case of our banking application we'll have",
    "start": "790480",
    "end": "796600"
  },
  {
    "text": "three activities that actually deal with transacting the funds in the first screen the first activity uh we the user",
    "start": "796600",
    "end": "803160"
  },
  {
    "text": "will just put in the account number to which you would like to transfer the funds and the amount transferable in the",
    "start": "803160",
    "end": "808279"
  },
  {
    "text": "second screen the actual uh transaction with the bank will take place it'll just be a waiting screen while the",
    "start": "808279",
    "end": "814240"
  },
  {
    "text": "application talks to the bank servers and the third screen will actually show a confirmation message and explain that",
    "start": "814240",
    "end": "819639"
  },
  {
    "text": "the funds have been transferred well what would a n attacker do against this",
    "start": "819639",
    "end": "824720"
  },
  {
    "text": "well a attacker has a problem he doesn't really know how to attack a process on the inside he can't really access the",
    "start": "824720",
    "end": "831279"
  },
  {
    "text": "internals of the application specifically if you assume that the application is obfuscated as most security critical applications certainly",
    "start": "831279",
    "end": "837920"
  },
  {
    "text": "are well what would he do again he would use social engineering it would cause the user to somehow uninstall the",
    "start": "837920",
    "end": "844759"
  },
  {
    "text": "banking application and install a malicious application which looks and acts just like it but instead of",
    "start": "844759",
    "end": "851079"
  },
  {
    "text": "transferring the funds to the user's account we'll transfer them to a malicious uh attacker",
    "start": "851079",
    "end": "856800"
  },
  {
    "text": "account now this is also a very bad approach again because antivirus vendors look",
    "start": "856800",
    "end": "863519"
  },
  {
    "text": "specifically for these kinds of attacks again this is the most popular attack vectors one of the most popular attack",
    "start": "863519",
    "end": "869360"
  },
  {
    "text": "vectors when you're trying to achieve this on Android and uh this is very easy to discover you basically compare hashes",
    "start": "869360",
    "end": "874880"
  },
  {
    "text": "of known packages you look for malicious package names that you're aware of and whenever these databases get updated of",
    "start": "874880",
    "end": "880680"
  },
  {
    "text": "you know Hash Hash package hashes of malicious applications the user will get notified and this is assuming that",
    "start": "880680",
    "end": "886880"
  },
  {
    "text": "you've managed to actually fool the user into installing your application so this is no good let's see how a ninja",
    "start": "886880",
    "end": "893720"
  },
  {
    "text": "attacker would actually do it and first let's understand how we views the system and now we're in for a surprise because",
    "start": "893720",
    "end": "899560"
  },
  {
    "text": "when a ninja attacker looks at the system the first thing it takes into account is that everything goes with a",
    "start": "899560",
    "end": "907000"
  },
  {
    "text": "binder and this is kind of surprising because this if we've divided our view",
    "start": "907000",
    "end": "912920"
  },
  {
    "text": "of the system into islands and our application is an isolated island and remember remember that Android is an",
    "start": "912920",
    "end": "918680"
  },
  {
    "text": "objectoriented system you're supposed to have encapsulation why is it that our data our most sensitive data actually",
    "start": "918680",
    "end": "925480"
  },
  {
    "text": "get sent outside so let's look at the internals of the system what really happens on Android is that to start a",
    "start": "925480",
    "end": "931519"
  },
  {
    "text": "new screen you need to talk to the activity manager which is a separate service a system service running in a",
    "start": "931519",
    "end": "938199"
  },
  {
    "text": "separate process in order to do that you actually need to talk to the binder you need to send your activity data you need",
    "start": "938199",
    "end": "943920"
  },
  {
    "text": "to send your request to the binder binder sends it to the activity manager the activity activity manager",
    "start": "943920",
    "end": "950319"
  },
  {
    "text": "actually initializes the new activity and then the application ends up in a",
    "start": "950319",
    "end": "955480"
  },
  {
    "text": "new screen in a new G now it's not only that the application calls the activity manager in order to start an activity it",
    "start": "955480",
    "end": "961680"
  },
  {
    "text": "also has to give it all the data which it would like the other activity the second activity to have access to in the",
    "start": "961680",
    "end": "968120"
  },
  {
    "text": "case of this banking application in the case of our transaction we actually need to give it our transaction data now most",
    "start": "968120",
    "end": "974720"
  },
  {
    "text": "developers are not aware that this data is actually going to another process so even highly security ARR developers will",
    "start": "974720",
    "end": "980720"
  },
  {
    "text": "just send this data in PL text and then to complete the",
    "start": "980720",
    "end": "986040"
  },
  {
    "text": "transaction um again we'll call the activity manager to start the third activity and that would be a confirmation message to the user so what",
    "start": "986040",
    "end": "993279"
  },
  {
    "text": "would our ninja attacker do why that should be obvious by now it would simply capture the data as it goes through the",
    "start": "993279",
    "end": "1000279"
  },
  {
    "text": "binder in plain text and that's just like a sample uh",
    "start": "1000279",
    "end": "1005839"
  },
  {
    "text": "buffer that we've captured uh you can just change the amount change whatever you want in the application will not know a thing it will just be presented",
    "start": "1005839",
    "end": "1012240"
  },
  {
    "text": "to the next activity as if it's the real data and in this attack what we've done",
    "start": "1012240",
    "end": "1017680"
  },
  {
    "text": "is simply changed the account numbers in",
    "start": "1017680",
    "end": "1021920"
  },
  {
    "text": "transit okay now now for the second one we're going to log in again into our",
    "start": "1045439",
    "end": "1052080"
  },
  {
    "text": "system still without injecting ourself into the binder now let's do a simple",
    "start": "1052080",
    "end": "1057480"
  },
  {
    "text": "transaction we're going to do from 222 to 444 and we'll give it I don't know a",
    "start": "1057480",
    "end": "1064320"
  },
  {
    "text": "lot of money wait just a minute which account is Kitty Kitty's",
    "start": "1064320",
    "end": "1072240"
  },
  {
    "text": "account is the 222 and he will transfer the money to her friend Idan in this",
    "start": "1072240",
    "end": "1077400"
  },
  {
    "text": "case and then we'll see the trans transaction as you see we got the page of the transaction the transaction has",
    "start": "1077400",
    "end": "1083240"
  },
  {
    "text": "been successful and as you can see here in the service part we'll see that the transaction from Kitty toan was a",
    "start": "1083240",
    "end": "1090600"
  },
  {
    "text": "success and the amount is what we entered now again what we're going to do",
    "start": "1090600",
    "end": "1096080"
  },
  {
    "text": "is we're going to inject ourself into the binder to the binder of the",
    "start": "1096080",
    "end": "1102000"
  },
  {
    "text": "application now this is a mock server that we've set up to imitate the bank service so this is like the transaction",
    "start": "1102159",
    "end": "1107480"
  },
  {
    "text": "assets accepted on the bank service of the serus bank",
    "start": "1107480",
    "end": "1112679"
  },
  {
    "text": "application okay again we injected ourself into the bank application and now again let's do the",
    "start": "1112679",
    "end": "1120399"
  },
  {
    "text": "transfer again the same",
    "start": "1120760",
    "end": "1124600"
  },
  {
    "text": "amounts and as we see in the application we still got a success but if you can see the where to we see that we change",
    "start": "1131360",
    "end": "1138360"
  },
  {
    "text": "it to 1337 and we change also the amount just for the fund from 100,000 to 900,000",
    "start": "1138360",
    "end": "1145600"
  },
  {
    "text": "should have been a million yeah maybe next time you're ambitious it's good to be humble though yes okay so that was",
    "start": "1145600",
    "end": "1153240"
  },
  {
    "text": "our second attack and just a personal note about that I've worked with some banks before like reviewing source code",
    "start": "1153240",
    "end": "1159640"
  },
  {
    "text": "and all that and it's really overwhelming how many banking applications use this approach they just take a a whole bunch of really sensitive",
    "start": "1159640",
    "end": "1166559"
  },
  {
    "text": "data like confirmation numbers tokens user accounts um amounts funds and all",
    "start": "1166559",
    "end": "1171679"
  },
  {
    "text": "of this just goes in plain text as you've just seen so you may say that our application is kind of like a demo application but that's not the case",
    "start": "1171679",
    "end": "1178320"
  },
  {
    "text": "that's actually real in many cases so that's a point to take home so we have a",
    "start": "1178320",
    "end": "1183880"
  },
  {
    "text": "clear victory for our ninja attacker so that's two Z and now we have our final attack this",
    "start": "1183880",
    "end": "1192679"
  },
  {
    "text": "is also a really popular attack on Android intercepting SMS and in this case the problem that our two attackers",
    "start": "1192679",
    "end": "1198520"
  },
  {
    "text": "are facing is that when the when the victim user actually transacts funds uh",
    "start": "1198520",
    "end": "1205000"
  },
  {
    "text": "he needs to get some kind of confirmation SMS from uh from the bank and just like put the number somewhere",
    "start": "1205000",
    "end": "1211280"
  },
  {
    "text": "that's also something quite common in banking applications so our attackers actually need to grab intercept that SMS",
    "start": "1211280",
    "end": "1217640"
  },
  {
    "text": "and get the confirmation number in order to get the money so how would our Noob attacker actually approaches the",
    "start": "1217640",
    "end": "1222960"
  },
  {
    "text": "approach the problem well in Android we have a telepone manager",
    "start": "1222960",
    "end": "1229280"
  },
  {
    "text": "which is a system service that actually talks to the hardware and gets the SMS messages from the",
    "start": "1229280",
    "end": "1234760"
  },
  {
    "text": "baseband and we have our regular SMS application which is just a normal user application this is what most of us use",
    "start": "1234760",
    "end": "1241559"
  },
  {
    "text": "to send messages and this gets input from the telephone manager and presents the smss to the user so what would a nub",
    "start": "1241559",
    "end": "1248640"
  },
  {
    "text": "attacker do well the most common approach in Android today to get smss is just to ask politely you just",
    "start": "1248640",
    "end": "1255679"
  },
  {
    "text": "cause the user to somehow install a malicious application which has permissions to read and to write smss",
    "start": "1255679",
    "end": "1261159"
  },
  {
    "text": "you grab the smss on the way and you can just the broadcast so the user doesn't really see the SMS as it comes",
    "start": "1261159",
    "end": "1266679"
  },
  {
    "text": "through and that's what normally is done today by malicious banking malware on",
    "start": "1266679",
    "end": "1271720"
  },
  {
    "text": "Android and again why is this a bad approach well it's just easily discoverable and a very common euristic",
    "start": "1271720",
    "end": "1277960"
  },
  {
    "text": "today in antivirus software is simply to scan packages for their permissions just to open the Manifest and look for any",
    "start": "1277960",
    "end": "1283960"
  },
  {
    "text": "out of the ordinary permissions something that's shouldn't be there and read SMS WR SMS are just the specific",
    "start": "1283960",
    "end": "1290440"
  },
  {
    "text": "permissions that always raise the red flag so it's very easily discoverable and the user gets a prompt and",
    "start": "1290440",
    "end": "1296679"
  },
  {
    "text": "uninstalls the application so another fail unfortunately for the noob how would the ninja approach it well the",
    "start": "1296679",
    "end": "1303440"
  },
  {
    "text": "ninja knows that anybody goes for the binder yeah it goes for the binder yeah",
    "start": "1303440",
    "end": "1309159"
  },
  {
    "text": "that was easy did yeah so it really goes to the binder as as the uh teleph",
    "start": "1309159",
    "end": "1316159"
  },
  {
    "text": "manager uh receives an SMS it tells the binder and uh then the binder in a kind",
    "start": "1316159",
    "end": "1322520"
  },
  {
    "text": "of complicated transaction which we'll go into in a minute sends it to the SMS application and what the ninja attacker",
    "start": "1322520",
    "end": "1329520"
  },
  {
    "text": "would do was would be just to attack the binder in order to see the data now why is this a more intricate hack well a",
    "start": "1329520",
    "end": "1336440"
  },
  {
    "text": "problem in Android is that the system is really complicated I'm sure most of you are aware and specifically since we are",
    "start": "1336440",
    "end": "1342200"
  },
  {
    "text": "running this modware in native code it's a it's kind of difficult to interact",
    "start": "1342200",
    "end": "1347400"
  },
  {
    "text": "with the Java structure which basically do everything above us so this will be a sample of how we've actually gone around",
    "start": "1347400",
    "end": "1353559"
  },
  {
    "text": "that well what happens is at the detailed level the telepon manager is",
    "start": "1353559",
    "end": "1359600"
  },
  {
    "text": "actually running a database that is it has a database of smss which have been",
    "start": "1359600",
    "end": "1364640"
  },
  {
    "text": "received in the system and whenever the data database is updated the telephon manager updates our SMS application and",
    "start": "1364640",
    "end": "1372640"
  },
  {
    "text": "the SMS application then has to query the telephon manager it does it of course with a binder and it has this",
    "start": "1372640",
    "end": "1379600"
  },
  {
    "text": "really complicated function called it's a database query in Java it returns something known as a cursor object that",
    "start": "1379600",
    "end": "1385440"
  },
  {
    "text": "is a common object in Android but it's kind of hard to work with why is it hard hard to work with well it's a very messy",
    "start": "1385440",
    "end": "1391720"
  },
  {
    "text": "abstraction of a database response you have this weird uh Java Constructor which is really hard to work with",
    "start": "1391720",
    "end": "1397559"
  },
  {
    "text": "especially if you have to instantiate these Java objects from C it was a real nightmare actually we've had a few",
    "start": "1397559",
    "end": "1402760"
  },
  {
    "text": "sleepless nights over it but then we kind of dug into it we kind of looked at the buffer we looked at what everything",
    "start": "1402760",
    "end": "1408520"
  },
  {
    "text": "presents and we found something very simple and actually very happy that this",
    "start": "1408520",
    "end": "1413960"
  },
  {
    "text": "under the cover this complicated Java object this cursor object is just a file descriptor in Unix and what do you do",
    "start": "1413960",
    "end": "1419919"
  },
  {
    "text": "with the file descriptor you just read it very simple and",
    "start": "1419919",
    "end": "1425120"
  },
  {
    "text": "then you just get this dump I'm not sure you can see it because it's a bit bright but on the right you'll see the ask key",
    "start": "1425120",
    "end": "1431400"
  },
  {
    "text": "where it says that uh you've got the confirmation number and all that so this is what we got after reading the buffer",
    "start": "1431400",
    "end": "1438159"
  },
  {
    "text": "again this is an example of how you would take these uh Java structures and with a summarized so just slice them to",
    "start": "1438159",
    "end": "1443720"
  },
  {
    "text": "pieces and take what you need in C and that kind of works for most approaches and again the ninja attacker",
    "start": "1443720",
    "end": "1450240"
  },
  {
    "text": "one so that's three Z it's a clear Victory so",
    "start": "1450240",
    "end": "1456480"
  },
  {
    "text": "yeah so let's look at what just happened look let's look at how these attacks against the binder actually work because",
    "start": "1456480",
    "end": "1462520"
  },
  {
    "text": "they've not been into that and what happens in binder is that you have one hook to rule them all this is the",
    "start": "1462520",
    "end": "1468399"
  },
  {
    "text": "critical point this is the point where the system calls the ictal which actually goes into the kernel driver and",
    "start": "1468399",
    "end": "1474320"
  },
  {
    "text": "it is right here at this very point that you can gain complete control of the system if you just hook this one place",
    "start": "1474320",
    "end": "1480159"
  },
  {
    "text": "because the data all the data buffers we described all the sensitive information it goes right here into this one place",
    "start": "1480159",
    "end": "1485880"
  },
  {
    "text": "this is a central point of failure super important so and this also offers you a lot of possibilities for stealth because",
    "start": "1485880",
    "end": "1492360"
  },
  {
    "text": "you have a very complicated function structure all going down towards this point because it all has to go through binder and you can literally hook",
    "start": "1492360",
    "end": "1499240"
  },
  {
    "text": "hundreds of points on your way to this so any software which wants to look for you has a lot of a lot of work to do and",
    "start": "1499240",
    "end": "1505799"
  },
  {
    "text": "it has to really understand the system before it can find you now this is an obvious question",
    "start": "1505799",
    "end": "1512320"
  },
  {
    "text": "which some of you may have been thinking about already don't you need root in order to inject code into another",
    "start": "1512320",
    "end": "1517440"
  },
  {
    "text": "service another process and the question is of course you do but we're saying that this is not really an issue on",
    "start": "1517440",
    "end": "1524320"
  },
  {
    "text": "Android anymore and what do you mean well we have all these Android operating systems right up to KitKat and the",
    "start": "1524320",
    "end": "1530640"
  },
  {
    "text": "simple fact about all these versions is that all of them have rooting exploits which are just out there they're very",
    "start": "1530640",
    "end": "1537120"
  },
  {
    "text": "accessible they're very easy to find the most recent one was Tower rout which works up to the most recent version and",
    "start": "1537120",
    "end": "1542919"
  },
  {
    "text": "we're saying that rooting on Android is no longer a big issue I mean you can just use any remote drive by exploit to",
    "start": "1542919",
    "end": "1548600"
  },
  {
    "text": "just gain code execution on the device then use a rooting exploit for previlege escalation and you're in the game and",
    "start": "1548600",
    "end": "1554200"
  },
  {
    "text": "then the next game is what do you do with that power and that's what we looking at here how do you Implement a perfect T kit which does just what you",
    "start": "1554200",
    "end": "1560520"
  },
  {
    "text": "want in a portable and flexible way and you should just consider the",
    "start": "1560520",
    "end": "1565760"
  },
  {
    "text": "possibilities let's look at again at how the Android system looks like from the outside we have all these Services all",
    "start": "1565760",
    "end": "1571640"
  },
  {
    "text": "these all these uh system Services all these applications passing around sensitive important data we have VIP",
    "start": "1571640",
    "end": "1578520"
  },
  {
    "text": "applications we have Facebook social applications banking applications and all of them need to talk to the binder",
    "start": "1578520",
    "end": "1584799"
  },
  {
    "text": "and we have the system Services which are Central points in which this this data goes through and all of them have",
    "start": "1584799",
    "end": "1590000"
  },
  {
    "text": "binder in their process memory just right for us to hook and to get all that",
    "start": "1590000",
    "end": "1595360"
  },
  {
    "text": "juicy data so really the only limit to what you can do with this technique is your own imagination because it's all",
    "start": "1595360",
    "end": "1602120"
  },
  {
    "text": "there it's all in the binder so now let's look at um how are",
    "start": "1602120",
    "end": "1607520"
  },
  {
    "text": "we with timing we have time yeah so let's look at uh how we can how we",
    "start": "1607520",
    "end": "1613559"
  },
  {
    "text": "actually need to prepare our system what we can actually do against this kind of",
    "start": "1613559",
    "end": "1619120"
  },
  {
    "text": "attack in order to make it less less dangerous and I I should emphasize that we believe that this is actually the",
    "start": "1619120",
    "end": "1625640"
  },
  {
    "text": "future of Mal and Android so we should all be prepared",
    "start": "1625640",
    "end": "1631200"
  },
  {
    "text": "well there are plenty as I said there are plenty of wrting exploits and what this really means is that the Android",
    "start": "1631200",
    "end": "1637559"
  },
  {
    "text": "security model that we all know and love should no longer be taken for granted we should no longer say that we should",
    "start": "1637559",
    "end": "1643440"
  },
  {
    "text": "count on a device not being rooted because that's no longer a reality and",
    "start": "1643440",
    "end": "1648799"
  },
  {
    "text": "the problem we're facing is that antivirus software doesn't have permissions to actually fight the kind",
    "start": "1648799",
    "end": "1653840"
  },
  {
    "text": "of threat that we're showing here Android antivirus software runs within the sandbox it runs within the security",
    "start": "1653840",
    "end": "1659559"
  },
  {
    "text": "model of Android so the question needs to be asked what can we do",
    "start": "1659559",
    "end": "1665279"
  },
  {
    "text": "well first of all a developer on Android and any Security Experts on Android need",
    "start": "1665279",
    "end": "1670320"
  },
  {
    "text": "to understand that they have to take control of their own process memory space this this process memory is theirs",
    "start": "1670320",
    "end": "1676519"
  },
  {
    "text": "there's stuff that can be done there and we can catch it we can look for it second we need to if there's any",
    "start": "1676519",
    "end": "1683799"
  },
  {
    "text": "sensitive data going through binder going through IPC we might want to minimize it and we might we first of all",
    "start": "1683799",
    "end": "1689559"
  },
  {
    "text": "need to be aware of what is it and then we need to control it and see does it really need to go to the binder and there are steps that can be done against",
    "start": "1689559",
    "end": "1696679"
  },
  {
    "text": "that well and what do I mean we'll come to that in a second but regarding memory scanning uh what we",
    "start": "1696679",
    "end": "1703960"
  },
  {
    "text": "should do like these are just conclus Solutions we should be taking home in order to to count to this threat now",
    "start": "1703960",
    "end": "1710240"
  },
  {
    "text": "first of all a developer or a security developer should scan memory for weird",
    "start": "1710240",
    "end": "1715519"
  },
  {
    "text": "stuff that's happening there in this case our hooks that we've put uh gu this is a difficult task because stealth is",
    "start": "1715519",
    "end": "1721200"
  },
  {
    "text": "really built into this solution because there's so many places you can hook but there's a lot to be done by just",
    "start": "1721200",
    "end": "1727279"
  },
  {
    "text": "scanning your process memory protecting it using anti-debugging techniques uh and uh this is this has",
    "start": "1727279",
    "end": "1733200"
  },
  {
    "text": "been done for years on Windows any secure Windows software uses these techniques like anti bugging anti-",
    "start": "1733200",
    "end": "1738679"
  },
  {
    "text": "reversing to protect itself and this also needs to be a reality on Android uh second you should probably",
    "start": "1738679",
    "end": "1745000"
  },
  {
    "text": "implement your own keyboard uh within the process in order to protect it and",
    "start": "1745000",
    "end": "1750559"
  },
  {
    "text": "uh what we mean is that we saw that all this keystroke data is going through the keyboard server it's very transparent",
    "start": "1750559",
    "end": "1756440"
  },
  {
    "text": "it's all in plain text and it's very easy to capture it would be much harder for an attacker to capture the device as it",
    "start": "1756440",
    "end": "1763000"
  },
  {
    "text": "moves within your own application if you actually Implement your own keyboard",
    "start": "1763000",
    "end": "1768200"
  },
  {
    "text": "as part of the application and you need to remember to encrypt the key strokes because it will all still go through the activity manager and third if there's",
    "start": "1768200",
    "end": "1775640"
  },
  {
    "text": "anything important that goes through a binder as we saw in the example of uh those banking transactions you probably",
    "start": "1775640",
    "end": "1781279"
  },
  {
    "text": "need to encrypt it which is not the case today so in the overwhelming amount of",
    "start": "1781279",
    "end": "1787080"
  },
  {
    "text": "uh number of applications so you really need to take control of it and encrypt it so actually yeah we have a lot of",
    "start": "1787080",
    "end": "1795039"
  },
  {
    "text": "time left for questions so uh we know you're hungry so so yeah we kind of uh",
    "start": "1795039",
    "end": "1801000"
  },
  {
    "text": "did it quickly so any questions nice slide",
    "start": "1801000",
    "end": "1806760"
  },
  {
    "text": "huh yeah oh",
    "start": "1809440",
    "end": "1813120"
  },
  {
    "text": "yeah Yes actually it is it it's it's very possible your own process well um",
    "start": "1819799",
    "end": "1826679"
  },
  {
    "text": "bind is basically a transaction mechanism and in every process in Android binder is actually already pre-loaded it's part of the zygote if",
    "start": "1826679",
    "end": "1833519"
  },
  {
    "text": "you know what I mean so that gets forked and replicated into every application in Android so yeah you have it in your in",
    "start": "1833519",
    "end": "1839519"
  },
  {
    "text": "your memory space and anything that comes to your process it's visible",
    "start": "1839519",
    "end": "1844960"
  },
  {
    "text": "there exactly yeah there's tons of stuff you can do with this",
    "start": "1847399",
    "end": "1852679"
  },
  {
    "text": "technique but if you already have root why do you why tar the",
    "start": "1854600",
    "end": "1861960"
  },
  {
    "text": "app well most backing applications I've worked with use use reverse engineering measures um lots of them use binary code",
    "start": "1863159",
    "end": "1871200"
  },
  {
    "text": "by now I mean you'll have to start reversing arm in in order to understand how the application works at the least",
    "start": "1871200",
    "end": "1876880"
  },
  {
    "text": "case you'll have to overcome ofation measures in Java in dvic so that's not a",
    "start": "1876880",
    "end": "1882120"
  },
  {
    "text": "trival task and it's not portable I mean you've attacked One banking application this way you still have a problem you",
    "start": "1882120",
    "end": "1887200"
  },
  {
    "text": "need to reverse all the banking applications you approach so that's really much less portable than just",
    "start": "1887200",
    "end": "1892279"
  },
  {
    "text": "finding that one spot where all data goes",
    "start": "1892279",
    "end": "1896320"
  },
  {
    "text": "through okay thank you very much thank you guys",
    "start": "1899279",
    "end": "1905080"
  }
]