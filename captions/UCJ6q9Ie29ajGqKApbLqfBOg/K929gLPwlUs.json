[
  {
    "text": "you're currently in South Seas CDF for the session bypass control flow guard",
    "start": "399",
    "end": "7639"
  },
  {
    "text": "comprehensively by yunai Shang thank",
    "start": "7639",
    "end": "13240"
  },
  {
    "text": "you okay hello everyone thanks for joining this talk my name is John yhai",
    "start": "19960",
    "end": "27039"
  },
  {
    "text": "and this talk is about control FL C or CFG for",
    "start": "27039",
    "end": "33000"
  },
  {
    "text": "short first uh let me introduce myself I came from Beijing China and I",
    "start": "33000",
    "end": "40520"
  },
  {
    "text": "work for as Focus as a researcher and mainly focused on exploiter detection",
    "start": "40520",
    "end": "46160"
  },
  {
    "text": "and",
    "start": "46160",
    "end": "48440"
  },
  {
    "text": "prevention now now this is the agenda first is a quick overview and",
    "start": "52480",
    "end": "60280"
  },
  {
    "text": "then sa the internals and tex Surface after that I will show a universal",
    "start": "60280",
    "end": "67080"
  },
  {
    "text": "bypass Technic and then finally the fix of that",
    "start": "67080",
    "end": "73758"
  },
  {
    "text": "issue okay this is the overv control flow guard is a mitigation",
    "start": "75960",
    "end": "83000"
  },
  {
    "text": "that prevent redirection control flow to unexpected location it's not a a brand",
    "start": "83000",
    "end": "90680"
  },
  {
    "text": "new future it was first introduced in Windows 8.1 preview but disabled in itm",
    "start": "90680",
    "end": "99960"
  },
  {
    "text": "for compatible reason and then Microsoft enhance that",
    "start": "99960",
    "end": "107040"
  },
  {
    "text": "future and enable and enable it in Windows 10 technical Pro and the Windows 8.1 updat",
    "start": "107040",
    "end": "116880"
  },
  {
    "text": "3 now the next is safety",
    "start": "116880",
    "end": "123560"
  },
  {
    "text": "internals since mj1 and the Jack Tong has discussed this",
    "start": "123560",
    "end": "132680"
  },
  {
    "text": "in Greater detail so here I just show some key",
    "start": "132680",
    "end": "139640"
  },
  {
    "text": "point when a module is compiled with safety enabled the compiler will append",
    "start": "140720",
    "end": "147920"
  },
  {
    "text": "file load configure table entry the first is for the address of a",
    "start": "147920",
    "end": "155280"
  },
  {
    "text": "function poter which is names the CF check function",
    "start": "155280",
    "end": "160840"
  },
  {
    "text": "pointer and the second one is resoled the third and the fourth defines a table",
    "start": "160840",
    "end": "168319"
  },
  {
    "text": "the C function table now this is a example of s",
    "start": "168319",
    "end": "176120"
  },
  {
    "text": "table it's a a list",
    "start": "176120",
    "end": "181400"
  },
  {
    "text": "the compiler will analyze the program and find every location",
    "start": "181400",
    "end": "188239"
  },
  {
    "text": "that IND jump",
    "start": "188239",
    "end": "193920"
  },
  {
    "text": "well well AR and store those info in this table so",
    "start": "194200",
    "end": "201519"
  },
  {
    "text": "this is what the valid Target",
    "start": "201519",
    "end": "206200"
  },
  {
    "text": "address um and the compiler we also inject check to",
    "start": "207879",
    "end": "214640"
  },
  {
    "text": "ensure that the target address is valid this is the function before SG",
    "start": "214640",
    "end": "222280"
  },
  {
    "text": "enabled and this is the compiler code",
    "start": "222280",
    "end": "227760"
  },
  {
    "text": "after SG enabled you can see those in red are injected code it ca a function",
    "start": "227760",
    "end": "236680"
  },
  {
    "text": "this is the c s check function I mentioned",
    "start": "236680",
    "end": "243360"
  },
  {
    "text": "before where S Mode is",
    "start": "250799",
    "end": "256199"
  },
  {
    "text": "load the operating system will map bit map into the processor memory address",
    "start": "257320",
    "end": "266199"
  },
  {
    "text": "space course the CFG B map do was use to used to check all Val the target",
    "start": "266199",
    "end": "274240"
  },
  {
    "text": "address and the the address of the bmap itself is stored in",
    "start": "274240",
    "end": "282840"
  },
  {
    "text": "ndl in the ldr system D initial block at",
    "start": "282840",
    "end": "288639"
  },
  {
    "text": "of set six 6 60 and it si was stored in the",
    "start": "288639",
    "end": "297039"
  },
  {
    "text": "set 68",
    "start": "297039",
    "end": "300400"
  },
  {
    "text": "when the model is load the operating system also updated the sgb",
    "start": "306919",
    "end": "312639"
  },
  {
    "text": "map it us the C sa function table I mentioned before to update the",
    "start": "312639",
    "end": "321600"
  },
  {
    "text": "M uh there is a little",
    "start": "321600",
    "end": "327160"
  },
  {
    "text": "trick each all the in the BET map where represent",
    "start": "327160",
    "end": "334639"
  },
  {
    "text": "one Z X1 Z Alle legit address and the the even",
    "start": "336080",
    "end": "344639"
  },
  {
    "text": "bit in the bit map will represent the the other 15",
    "start": "344639",
    "end": "353280"
  },
  {
    "text": "address so the compiler will try to make",
    "start": "353360",
    "end": "358800"
  },
  {
    "text": "most fun function alleged",
    "start": "358800",
    "end": "365360"
  },
  {
    "text": "so in most case each bit set in the 7g",
    "start": "365720",
    "end": "371000"
  },
  {
    "text": "bit map will represent only one address and not not",
    "start": "371000",
    "end": "378400"
  },
  {
    "text": "uh not modal",
    "start": "378400",
    "end": "382120"
  },
  {
    "text": "address besides that the operating system also updated the check function",
    "start": "383840",
    "end": "389199"
  },
  {
    "text": "point and point it to the ntid ldr while the",
    "start": "389199",
    "end": "396120"
  },
  {
    "text": "user call",
    "start": "396120",
    "end": "398800"
  },
  {
    "text": "Target so at the r time this function will be code adjust before any indirect",
    "start": "401560",
    "end": "410680"
  },
  {
    "text": "code in this function it will test the target address and to see",
    "start": "410840",
    "end": "418199"
  },
  {
    "text": "is is the address valid this is how how how to test the",
    "start": "418199",
    "end": "426960"
  },
  {
    "text": "address it will use the highest 24 bit of the taret address as the",
    "start": "426960",
    "end": "435199"
  },
  {
    "text": "index and treat the safg bit map as an area",
    "start": "435199",
    "end": "441520"
  },
  {
    "text": "of 32 bit integral so this can get one C bit from",
    "start": "441520",
    "end": "450360"
  },
  {
    "text": "the 70 bit map and then it",
    "start": "450360",
    "end": "455720"
  },
  {
    "text": "use the thir to the a bit from the target address is the",
    "start": "455720",
    "end": "463680"
  },
  {
    "text": "offset and test if the address is a",
    "start": "463680",
    "end": "469680"
  },
  {
    "text": "legend if not it will or the offset with",
    "start": "469680",
    "end": "475280"
  },
  {
    "text": "one so this is the little tricker I just mentioned",
    "start": "475280",
    "end": "481400"
  },
  {
    "text": "us this offset it will fetch the 551 bit from the 32",
    "start": "481639",
    "end": "493039"
  },
  {
    "text": "bit from the 70 bit map and the test if that b is set if so the Tet address is",
    "start": "493039",
    "end": "501560"
  },
  {
    "text": "valid and ital return to call the indor core otherwise it will always an",
    "start": "501560",
    "end": "508440"
  },
  {
    "text": "exception and the Clos the",
    "start": "508440",
    "end": "512800"
  },
  {
    "text": "program uh this is how the function raise the exception we are do more",
    "start": "518000",
    "end": "525920"
  },
  {
    "text": "checks of the environment if the processor executor flag was set",
    "start": "525920",
    "end": "537560"
  },
  {
    "text": "enable or it trunk ulation all the",
    "start": "537560",
    "end": "543279"
  },
  {
    "text": "protector is enable is is excludable it",
    "start": "543279",
    "end": "548360"
  },
  {
    "text": "will R the exception otherwise it will written",
    "start": "548360",
    "end": "555560"
  },
  {
    "text": "to now this this now that's the key point of the",
    "start": "559320",
    "end": "567399"
  },
  {
    "text": "safety internals which will be be very important in the bypass",
    "start": "567399",
    "end": "574200"
  },
  {
    "text": "technique after that I will discuss the T surface of the S",
    "start": "574200",
    "end": "581560"
  },
  {
    "text": "CH uh I will discuss five TCH surface",
    "start": "582839",
    "end": "588240"
  },
  {
    "text": "first is non safy modules",
    "start": "588240",
    "end": "594279"
  },
  {
    "text": "as compiler in W the mitigation future",
    "start": "594279",
    "end": "600959"
  },
  {
    "text": "modules that not comp with those future enabled will always be",
    "start": "604279",
    "end": "612120"
  },
  {
    "text": "programmed for safc now safg modes well",
    "start": "612200",
    "end": "617360"
  },
  {
    "text": "has two effector the first it will contain unprotected indir core of course",
    "start": "617360",
    "end": "624600"
  },
  {
    "text": "since it didn't compiler with safg enabled so any direct core in that model",
    "start": "624600",
    "end": "632079"
  },
  {
    "text": "will be unprotected and if those indirect core can be",
    "start": "632079",
    "end": "637600"
  },
  {
    "text": "controlled safety can be bypassed from",
    "start": "637839",
    "end": "642839"
  },
  {
    "text": "that the second effect is that what be in S Mode we have the corresponding bit",
    "start": "646519",
    "end": "654800"
  },
  {
    "text": "set in the 7g bit map so what the address inide module will be valid so",
    "start": "654800",
    "end": "661519"
  },
  {
    "text": "you can get RP from s from s",
    "start": "661519",
    "end": "668120"
  },
  {
    "text": "modes but any comp inol the mitigation",
    "start": "671959",
    "end": "678360"
  },
  {
    "text": "future now SG modules we are exhausted eventually since Rend trans to compiler",
    "start": "678360",
    "end": "685079"
  },
  {
    "text": "new modules with safg enabled so there there will be less and less not",
    "start": "685079",
    "end": "692839"
  },
  {
    "text": "mode the second Tex surface is J generated",
    "start": "694839",
    "end": "701519"
  },
  {
    "text": "code because uh J generated code is just like non safg modules if it contain",
    "start": "701519",
    "end": "710560"
  },
  {
    "text": "indir core it's unprotected and all bits in the",
    "start": "710560",
    "end": "716399"
  },
  {
    "text": "generated coder the corresponding bit was set in the",
    "start": "716399",
    "end": "722880"
  },
  {
    "text": "safg bit map so just uh just almost the same as nfg",
    "start": "722880",
    "end": "733880"
  },
  {
    "text": "modeles but the Microsoft is continuing improve safety",
    "start": "738160",
    "end": "744480"
  },
  {
    "text": "protection so both are not longer the case in the lat or of AG the default B",
    "start": "744480",
    "end": "753320"
  },
  {
    "text": "of Windows 10 in in inide verion JT code is ined",
    "start": "753320",
    "end": "761920"
  },
  {
    "text": "and the JT code Pages do not have set only few really in Target we have just",
    "start": "761920",
    "end": "772240"
  },
  {
    "text": "bit set so this is this will not be",
    "start": "772240",
    "end": "780959"
  },
  {
    "text": "program for a long time I I think Microsoft will will do this in other in other",
    "start": "780959",
    "end": "789519"
  },
  {
    "text": "modules that we are generator J",
    "start": "789519",
    "end": "794040"
  },
  {
    "text": "Code the thir T surface is indirect jump because this can control flow just",
    "start": "797199",
    "end": "806360"
  },
  {
    "text": "like IND direct core and this is an example",
    "start": "806360",
    "end": "813959"
  },
  {
    "text": "of IND jle that can be fully controlled and",
    "start": "813959",
    "end": "820399"
  },
  {
    "text": "uh and for this special one Microsoft has ADD protection",
    "start": "824079",
    "end": "831680"
  },
  {
    "text": "in in the window 10 for at least this",
    "start": "831680",
    "end": "837600"
  },
  {
    "text": "special div and there can be other inter jump not protect but I think uh as time",
    "start": "837600",
    "end": "846360"
  },
  {
    "text": "go Microsoft will protect what the inter jum inter Cod so this will",
    "start": "846360",
    "end": "854320"
  },
  {
    "text": "be for a long time this won't be a problem for a long",
    "start": "854320",
    "end": "860240"
  },
  {
    "text": "time the fourth Tex surface is return return address because",
    "start": "863959",
    "end": "870720"
  },
  {
    "text": "this can also red the control flow but it not like inter jump it canot be",
    "start": "870720",
    "end": "878560"
  },
  {
    "text": "protected use the same technique as interal",
    "start": "878560",
    "end": "884800"
  },
  {
    "text": "core so this maybe maybe this can be a problem for a long",
    "start": "885279",
    "end": "892160"
  },
  {
    "text": "time uh maybe you know tradition stle flow are not",
    "start": "893720",
    "end": "901399"
  },
  {
    "text": "usable nowadays so we need a new technical to over write the return",
    "start": "901399",
    "end": "908720"
  },
  {
    "text": "address if you have the whole address space read write capability we can do",
    "start": "908720",
    "end": "915959"
  },
  {
    "text": "this first we search for the stack and then we search in the stack for and",
    "start": "915959",
    "end": "923120"
  },
  {
    "text": "appreciate frame and then replace the whole St frame with craft one",
    "start": "923120",
    "end": "929880"
  },
  {
    "text": "and wait it to return to our special",
    "start": "929880",
    "end": "935560"
  },
  {
    "text": "code uh as as far as I know this will will not",
    "start": "936440",
    "end": "944319"
  },
  {
    "text": "be will not be proed by Microsoft at least",
    "start": "944319",
    "end": "950639"
  },
  {
    "text": "for where will not be proed recently",
    "start": "954720",
    "end": "960079"
  },
  {
    "text": "now this is the last ATT surface the valid API",
    "start": "960880",
    "end": "967880"
  },
  {
    "text": "functions there are some API functions which can be used to exploit",
    "start": "967880",
    "end": "977160"
  },
  {
    "text": "directly the the first three was uh can be used to switch the",
    "start": "980079",
    "end": "987720"
  },
  {
    "text": "context so so you you can control the IP register",
    "start": "987720",
    "end": "994480"
  },
  {
    "text": "completely and the the fourth and the fifth one can exude",
    "start": "994480",
    "end": "1000959"
  },
  {
    "text": "and executable directly and the last one can loader and",
    "start": "1000959",
    "end": "1008040"
  },
  {
    "text": "Library you may notice that I marked the first three in red this is because this",
    "start": "1008199",
    "end": "1016480"
  },
  {
    "text": "function are no longer where the",
    "start": "1016480",
    "end": "1022440"
  },
  {
    "text": "interet so the user are only three left",
    "start": "1025199",
    "end": "1030880"
  },
  {
    "text": "and I think this will be shorter and shorter and this T surface will not be PR for a",
    "start": "1030880",
    "end": "1038959"
  },
  {
    "text": "long time",
    "start": "1038959",
    "end": "1042319"
  },
  {
    "text": "now next I show you the universal bypass",
    "start": "1053080",
    "end": "1058880"
  },
  {
    "text": "technical the objective of the universal bypass is to bypass safety",
    "start": "1061600",
    "end": "1067640"
  },
  {
    "text": "comprehensively that is to say when you when we use this",
    "start": "1067640",
    "end": "1073720"
  },
  {
    "text": "technical we can make any exploited technique that be mitigation by",
    "start": "1073720",
    "end": "1081799"
  },
  {
    "text": "CFG re exploitable again as there no",
    "start": "1081799",
    "end": "1089158"
  },
  {
    "text": "safg how could you do that let's reval how the C S Check",
    "start": "1092280",
    "end": "1100240"
  },
  {
    "text": "function is called it's called through a function point that is to say is a inter",
    "start": "1100240",
    "end": "1107840"
  },
  {
    "text": "core itself so if we overwrite this function",
    "start": "1107840",
    "end": "1115280"
  },
  {
    "text": "pointer we can do some interesting",
    "start": "1115280",
    "end": "1119640"
  },
  {
    "text": "scene let's see the behavior the check function do when the",
    "start": "1123880",
    "end": "1130320"
  },
  {
    "text": "target address is valid this is the instruction",
    "start": "1130320",
    "end": "1136960"
  },
  {
    "text": "executed you can see from the aspect of the caller this",
    "start": "1137080",
    "end": "1143679"
  },
  {
    "text": "instruction has no difference with the only a single return instruction because",
    "start": "1143679",
    "end": "1149640"
  },
  {
    "text": "it has no return return address",
    "start": "1149640",
    "end": "1153840"
  },
  {
    "text": "checked so if we overwrite the C check function",
    "start": "1155400",
    "end": "1161000"
  },
  {
    "text": "pointer and the poin the two the single",
    "start": "1161000",
    "end": "1167400"
  },
  {
    "text": "return and any address is test will be valid and uh we can overwrite the",
    "start": "1167400",
    "end": "1176120"
  },
  {
    "text": "indect code with and address as before so this is our new objective to",
    "start": "1176120",
    "end": "1184480"
  },
  {
    "text": "overwrite the g s check function poter but there's a big",
    "start": "1184480",
    "end": "1191159"
  },
  {
    "text": "problem the function pointer is R only so ass n",
    "start": "1191159",
    "end": "1200320"
  },
  {
    "text": "so we had to do a new objective to make",
    "start": "1200480",
    "end": "1205600"
  },
  {
    "text": "read only memory right table that's the magic",
    "start": "1205600",
    "end": "1211360"
  },
  {
    "text": "here it uh seems to be crazy since we cannot exclude code now because we",
    "start": "1212480",
    "end": "1220679"
  },
  {
    "text": "haven't bypass sa now but uh after some research I found an interesting class in",
    "start": "1220679",
    "end": "1229440"
  },
  {
    "text": "jscript 9 that's the custom",
    "start": "1229440",
    "end": "1235039"
  },
  {
    "text": "hip J now use the custom he custom Hep to manage it custom",
    "start": "1235039",
    "end": "1244039"
  },
  {
    "text": "memory this is the structure of the that class you can see that it has many list",
    "start": "1244039",
    "end": "1253679"
  },
  {
    "text": "in in the hip",
    "start": "1253679",
    "end": "1258399"
  },
  {
    "text": "from the offset 64 to the",
    "start": "1259679",
    "end": "1266080"
  },
  {
    "text": "offset EC there's there's many double link",
    "start": "1266080",
    "end": "1275120"
  },
  {
    "text": "list uh we we can call the buckets each bucket is a double link",
    "start": "1275120",
    "end": "1282960"
  },
  {
    "text": "list of custom HP page",
    "start": "1282960",
    "end": "1288120"
  },
  {
    "text": "oops when this class is Destructor it",
    "start": "1295640",
    "end": "1301200"
  },
  {
    "text": "has some interesting Behavior now this is the function",
    "start": "1301200",
    "end": "1307679"
  },
  {
    "text": "in first the destructor we are call free to free what the memory it",
    "start": "1307679",
    "end": "1316279"
  },
  {
    "text": "allocated and the Free World where call free bucket for each",
    "start": "1316279",
    "end": "1321960"
  },
  {
    "text": "bucket it has free bucket we are call inure page",
    "start": "1321960",
    "end": "1329200"
  },
  {
    "text": "with right for each P each page in the double link",
    "start": "1329200",
    "end": "1335278"
  },
  {
    "text": "list now this is the key Point Ure page read right where core or to protect with",
    "start": "1337279",
    "end": "1345640"
  },
  {
    "text": "the following arguments you can see see the new protect is the page R right that's just",
    "start": "1345640",
    "end": "1353880"
  },
  {
    "text": "what we need so if we",
    "start": "1353880",
    "end": "1362320"
  },
  {
    "text": "can control the arguments the first arguments we can make any page we like",
    "start": "1362320",
    "end": "1370440"
  },
  {
    "text": "to be right",
    "start": "1370440",
    "end": "1374600"
  },
  {
    "text": "table now the first question is where can we find the cast",
    "start": "1376400",
    "end": "1384080"
  },
  {
    "text": "him the custom hip is an is a member of the interpretor trun imit at of set",
    "start": "1388200",
    "end": "1399158"
  },
  {
    "text": "C and the interm chunk imit is pointed by a m of Jaz script Conta text at",
    "start": "1400279",
    "end": "1409880"
  },
  {
    "text": "offset 4 b0 and this is this is it's not fixed",
    "start": "1409880",
    "end": "1417640"
  },
  {
    "text": "one across orins of jpt but I I",
    "start": "1417640",
    "end": "1423640"
  },
  {
    "text": "think it only have Chang once so for the early version of just n this",
    "start": "1423640",
    "end": "1433679"
  },
  {
    "text": "maybe uh maybe offset a little",
    "start": "1433679",
    "end": "1441600"
  },
  {
    "text": "larger and the JS SC context is pointed by a member of scri engine at offset",
    "start": "1444400",
    "end": "1457039"
  },
  {
    "text": "four next SC engine is pointed by a member of super set at offset",
    "start": "1457600",
    "end": "1466000"
  },
  {
    "text": "42 uh SC set is very easy to be located you",
    "start": "1466200",
    "end": "1473159"
  },
  {
    "text": "can choose any object you like that has a PO has a member poter to it and uh put",
    "start": "1473159",
    "end": "1481880"
  },
  {
    "text": "put it in uh and AR You can predict to",
    "start": "1481880",
    "end": "1487640"
  },
  {
    "text": "read the address so",
    "start": "1487640",
    "end": "1494919"
  },
  {
    "text": "we so we can locate the custom hip let's",
    "start": "1497320",
    "end": "1504360"
  },
  {
    "text": "review let's reveal the structure when we located the custom hip",
    "start": "1506080",
    "end": "1512600"
  },
  {
    "text": "we can search the double link",
    "start": "1512600",
    "end": "1519159"
  },
  {
    "text": "list the search The Bucket and uh find",
    "start": "1519159",
    "end": "1525360"
  },
  {
    "text": "the and find the appreciate the one to modify to",
    "start": "1525360",
    "end": "1532480"
  },
  {
    "text": "overwrite is and to modify the one page inide",
    "start": "1532480",
    "end": "1539960"
  },
  {
    "text": "list and uh try to trigger the distructor so we",
    "start": "1548600",
    "end": "1554760"
  },
  {
    "text": "can wait the distructor to make the page we chose",
    "start": "1554760",
    "end": "1562039"
  },
  {
    "text": "right",
    "start": "1562039",
    "end": "1565039"
  },
  {
    "text": "but but when we reach the destructor we will find that what bu is",
    "start": "1570720",
    "end": "1578600"
  },
  {
    "text": "empty the the one we chose and overr is not",
    "start": "1578600",
    "end": "1585200"
  },
  {
    "text": "Z why",
    "start": "1585200",
    "end": "1589200"
  },
  {
    "text": "because all custom page are decommitted in JS real context closed and the the",
    "start": "1590679",
    "end": "1598720"
  },
  {
    "text": "committed custom page custom H page is removed from the buet that is the d",
    "start": "1598720",
    "end": "1606960"
  },
  {
    "text": "double link list and the function JS real context",
    "start": "1606960",
    "end": "1613360"
  },
  {
    "text": "close is called before the destructor so when we reach the",
    "start": "1613360",
    "end": "1620279"
  },
  {
    "text": "destructor all the buckets will be empty we over the the one we overwrite",
    "start": "1620279",
    "end": "1628320"
  },
  {
    "text": "is no longer",
    "start": "1628320",
    "end": "1631158"
  },
  {
    "text": "Z to resolve this we have two Choice the first is to insert a fake custom page",
    "start": "1633840",
    "end": "1641919"
  },
  {
    "text": "into the bucket since is faked it will be decommitted and will s in in the we",
    "start": "1641919",
    "end": "1651159"
  },
  {
    "text": "surval to the destructure and uh the other solution is",
    "start": "1651159",
    "end": "1656760"
  },
  {
    "text": "to prevent the the one we chose to override",
    "start": "1656760",
    "end": "1662679"
  },
  {
    "text": "from being decommitted this is that that is to modify some flag in the custom HP",
    "start": "1662679",
    "end": "1670000"
  },
  {
    "text": "object to acheve this",
    "start": "1670000",
    "end": "1674600"
  },
  {
    "text": "so now we can make any read only memory R",
    "start": "1680039",
    "end": "1686360"
  },
  {
    "text": "table that is to say we can overwrite the G self check function poter with",
    "start": "1686360",
    "end": "1692640"
  },
  {
    "text": "anything we like that is to say we can bypass CFG comprehensively",
    "start": "1692640",
    "end": "1700518"
  },
  {
    "text": "next uh the finally is the fix for set",
    "start": "1709039",
    "end": "1715080"
  },
  {
    "text": "issue this is the timeline we report this issue to",
    "start": "1715600",
    "end": "1721600"
  },
  {
    "text": "msrc at January 22 and uh it was confirmed in general",
    "start": "1721600",
    "end": "1732919"
  },
  {
    "text": "30 and the uh since since the the capability to make any read only memory",
    "start": "1735159",
    "end": "1744720"
  },
  {
    "text": "page right table is very essential so Microsoft fixes this issue very quickly",
    "start": "1744720",
    "end": "1752840"
  },
  {
    "text": "and uh released the patch at uh March",
    "start": "1752840",
    "end": "1759480"
  },
  {
    "text": "10 very nice",
    "start": "1759480",
    "end": "1763080"
  },
  {
    "text": "work now let's see how Microsoft fixes this",
    "start": "1764640",
    "end": "1769720"
  },
  {
    "text": "issue uh in the patch it introduced a new",
    "start": "1769720",
    "end": "1776440"
  },
  {
    "text": "function the hip page allocator protect pages is uh a wrapper of the function",
    "start": "1776440",
    "end": "1784240"
  },
  {
    "text": "Oro protect in this function it will check",
    "start": "1784240",
    "end": "1791840"
  },
  {
    "text": "the arguments before it called the what",
    "start": "1791840",
    "end": "1797039"
  },
  {
    "text": "protect the Checker including the following first the lp",
    "start": "1797039",
    "end": "1803480"
  },
  {
    "text": "address must be a legion next the IP address must bigger",
    "start": "1803480",
    "end": "1811760"
  },
  {
    "text": "than the segments address",
    "start": "1811760",
    "end": "1817440"
  },
  {
    "text": "and the IP address plus the DW size must",
    "start": "1817440",
    "end": "1823840"
  },
  {
    "text": "the less than the segment address plus segment size that is to say the range of",
    "start": "1823840",
    "end": "1832440"
  },
  {
    "text": "the core the memory range of the core must be inside the segment and the D size must smaller than",
    "start": "1832440",
    "end": "1841360"
  },
  {
    "text": "the region size the last one is the key",
    "start": "1841360",
    "end": "1846919"
  },
  {
    "text": "point this this function protect Pages has an",
    "start": "1846919",
    "end": "1852240"
  },
  {
    "text": "argument uh Accord to the expected protect it we check",
    "start": "1852240",
    "end": "1858840"
  },
  {
    "text": "the the memory regions or region protect if and check if it is equal to",
    "start": "1858840",
    "end": "1867159"
  },
  {
    "text": "the expect protuct and check of this field it will",
    "start": "1867159",
    "end": "1874120"
  },
  {
    "text": "always an exception and close the",
    "start": "1874120",
    "end": "1878960"
  },
  {
    "text": "program now let's see the ins short page reite function it will called the",
    "start": "1880120",
    "end": "1886639"
  },
  {
    "text": "protect pages instead of what to protect and it will set the expected",
    "start": "1886639",
    "end": "1894960"
  },
  {
    "text": "protector to page exclud that is to say it only allow us",
    "start": "1894960",
    "end": "1901240"
  },
  {
    "text": "to make an executable page to be R",
    "start": "1901240",
    "end": "1909080"
  },
  {
    "text": "writeable no longer any type so we can't make the r only one to be rable",
    "start": "1909320",
    "end": "1919639"
  },
  {
    "text": "uh that's how Microsoft fix this issue very",
    "start": "1922159",
    "end": "1929360"
  },
  {
    "text": "effor now the last is some B the first",
    "start": "1931960",
    "end": "1938399"
  },
  {
    "text": "is no s bullet SG is uh very good but uh",
    "start": "1938399",
    "end": "1946080"
  },
  {
    "text": "still not good enough and there and can be",
    "start": "1946080",
    "end": "1952720"
  },
  {
    "text": "bypassed the second one is read only is not equal",
    "start": "1952960",
    "end": "1959600"
  },
  {
    "text": "CQ you can see the G function is read only but it's",
    "start": "1959720",
    "end": "1966240"
  },
  {
    "text": "not secure it can be overr right the last one is control the date",
    "start": "1966240",
    "end": "1973880"
  },
  {
    "text": "control the execute",
    "start": "1973880",
    "end": "1977480"
  },
  {
    "text": "you can see we only control the custom hip the backets of the custom",
    "start": "1981960",
    "end": "1989399"
  },
  {
    "text": "hip we can control how how it is C and the let",
    "start": "1989399",
    "end": "1995159"
  },
  {
    "text": "uh let the let let it uh make what we",
    "start": "1995159",
    "end": "2002000"
  },
  {
    "text": "want so that's all was any question",
    "start": "2006760",
    "end": "2012840"
  },
  {
    "text": "a",
    "start": "2038000",
    "end": "2041000"
  }
]