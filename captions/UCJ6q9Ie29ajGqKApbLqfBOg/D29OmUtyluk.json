[
  {
    "text": "welcome all uh this is breaching the perimeter via Cloud synchronized browser settings I'm Ed so I thought I'd start",
    "start": "4520",
    "end": "10559"
  },
  {
    "text": "off by telling a story of how I first encountered Cloud sync so I was doing an attack simulation and uh we successfully",
    "start": "10559",
    "end": "17039"
  },
  {
    "text": "compromised the users credentials VI Ving so we had user credentials but we needed a way to actually crack the",
    "start": "17039",
    "end": "22439"
  },
  {
    "text": "perimeter with them um so my attack diagrams usually look something like this so I'll try to get into the VPN if",
    "start": "22439",
    "end": "28560"
  },
  {
    "text": "I can if not look at business infra things like SharePoint to try to pull data uh externally if not maybe try",
    "start": "28560",
    "end": "34559"
  },
  {
    "text": "internal fishing to drop uh malware for COD exac if not maybe try to hit their other Cloud infrastructure to get Cod",
    "start": "34559",
    "end": "40760"
  },
  {
    "text": "exec and if none of that's working sus out whatever else we've got in the way of external infrastructure that we can",
    "start": "40760",
    "end": "46039"
  },
  {
    "text": "try to get code exac on but nothing was working on this specific engagement the",
    "start": "46039",
    "end": "51239"
  },
  {
    "text": "VPN needed alternate credentials all their business info was locked down by MFA and we couldn't find any other sites",
    "start": "51239",
    "end": "56480"
  },
  {
    "text": "to compromise but someone gave me a tip that potentially enrolling in inun might",
    "start": "56480",
    "end": "62079"
  },
  {
    "text": "circumvent MFA so I spun up a VM and then I enrolled in inun and it worked without a hitch but then when I opened",
    "start": "62079",
    "end": "68200"
  },
  {
    "text": "up Edge to try to see if I could then hit the M365 with this new permissions I",
    "start": "68200",
    "end": "73280"
  },
  {
    "text": "found that Not only was I already authenticated but I had a whole pile of the users passwords history and even credit cards that were already in my",
    "start": "73280",
    "end": "80320"
  },
  {
    "text": "browser and as you can imagine I was uh reasonably ped by this and it turns out",
    "start": "80320",
    "end": "85520"
  },
  {
    "text": "that InTune automatically enables sync uh in a whole bunch of different circumstances",
    "start": "85520",
    "end": "90600"
  },
  {
    "text": "uh such as this one and as this user had sync enabled on their end as well I had a whole bunch of information that",
    "start": "90600",
    "end": "95640"
  },
  {
    "text": "wouldn't have been accessible to me using my traditional means from this ended up being able to find credentials to an i server so we",
    "start": "95640",
    "end": "102560"
  },
  {
    "text": "managed to crack the perimeter using that final technique there but after the engagement I wondered what else does s",
    "start": "102560",
    "end": "108240"
  },
  {
    "text": "allow uh because I hadn't really seen much on the way of documentation online about this uh which led to the",
    "start": "108240",
    "end": "113759"
  },
  {
    "text": "exploration I'm going to share with you all today um coming down to one key question attack primitive which is about",
    "start": "113759",
    "end": "120680"
  },
  {
    "text": "malicious links specifically what is the worst thing that can happen when a malicious link is clicked so",
    "start": "120680",
    "end": "126360"
  },
  {
    "text": "traditionally you might look at things like credential fishing but this isn't necessarily going to help you crack the perimeter and you're relying on user",
    "start": "126360",
    "end": "132800"
  },
  {
    "text": "interaction similarly you can try to download malware through things like internal fishing or external fishing but again you're relying on internal uh user",
    "start": "132800",
    "end": "139640"
  },
  {
    "text": "interaction and potentially some additional uh limiting factors such as application allow listing on the more",
    "start": "139640",
    "end": "145640"
  },
  {
    "text": "complex side you've got things like cross site request forgery which can give you code execution but usually requires an immense amount of context",
    "start": "145640",
    "end": "152360"
  },
  {
    "text": "that you're just not going to have as an external attacker similarly with browser exploits there's just too much context",
    "start": "152360",
    "end": "158000"
  },
  {
    "text": "that you won't have if you want to reliably exploit something rather than trying to spray and prey so really today's goal is to talk",
    "start": "158000",
    "end": "164560"
  },
  {
    "text": "about how sync uh gives an attacker an immense amount of context and some unique way ways to incubate payloads",
    "start": "164560",
    "end": "172080"
  },
  {
    "text": "through sync that are just unavailable without sync so it's a quick who am I oh",
    "start": "172080",
    "end": "177560"
  },
  {
    "text": "actually demo time first I uh mix this up last minut I thought I'd kick off by",
    "start": "177560",
    "end": "183440"
  },
  {
    "text": "showing all of this uh through so this is emulating a developer user who has a",
    "start": "183440",
    "end": "189400"
  },
  {
    "text": "tomcat instance running all of the contacts to build this payload was found through sync uh this is obviously an",
    "start": "189400",
    "end": "194640"
  },
  {
    "text": "emulated copy but yep all the context was uh pulled out through sync and the entire payload is incubated through syn",
    "start": "194640",
    "end": "200720"
  },
  {
    "text": "as well so all you have to do is wait for the user to start their browser at the start of the day probably on a",
    "start": "200720",
    "end": "206120"
  },
  {
    "text": "Monday morning and then I've just opened the Tomcat web route so that can see the payload in action when they open it they",
    "start": "206120",
    "end": "212159"
  },
  {
    "text": "get sent to their Tom Cat little weird a webshell appears and then my VM is slow",
    "start": "212159",
    "end": "218599"
  },
  {
    "text": "unfortunately but we get C uh so this is the kind of key way to",
    "start": "218599",
    "end": "225120"
  },
  {
    "text": "consider syn it's just a whole bunch of different ways to get uh context and then use that context in weird and",
    "start": "225120",
    "end": "231519"
  },
  {
    "text": "unexpected ways yep so was a quick who am I I'm Ed or Jank Jank on socials started in",
    "start": "231519",
    "end": "238000"
  },
  {
    "text": "robotics moved into ml ended up being a pentester which I've been doing for the last six years got the usual hacker SE a",
    "start": "238000",
    "end": "243280"
  },
  {
    "text": "few CVS and I currently am a CTF challenge designer for the AI Village at defcom so as a quick intro uh outline",
    "start": "243280",
    "end": "250280"
  },
  {
    "text": "for the day going to go over a quick intro on how sync works the actual inner workings go over five different Cas",
    "start": "250280",
    "end": "255840"
  },
  {
    "text": "studies for different attack Primitives that sync allows demonstrate a whole bunch of volums including a couple ways",
    "start": "255840",
    "end": "261160"
  },
  {
    "text": "to get code exec talk quickly about prevention and detection and then talk about automated emulation of these",
    "start": "261160",
    "end": "266919"
  },
  {
    "text": "techniques so as a quick intro to Cloud sync uh it's a feature in every browser that allows for a consistent State",
    "start": "266919",
    "end": "272639"
  },
  {
    "text": "between devices as such it's built for remote devices to be able to authenticate and pull down this data",
    "start": "272639",
    "end": "277840"
  },
  {
    "text": "through the cloud in general the sync settings are extensions uh settings themselves",
    "start": "277840",
    "end": "283520"
  },
  {
    "text": "passwords history user data that kind of thing um and they all periodically pull down data from some form of Cloud Server",
    "start": "283520",
    "end": "289160"
  },
  {
    "text": "to update the local device date one other key question that I often get when I talk about sync especially when I was",
    "start": "289160",
    "end": "295160"
  },
  {
    "text": "discussing uh some of the features SL vulnerabilities depending on your perspective uh that we're going to show off a bit um is what's the actual",
    "start": "295160",
    "end": "301680"
  },
  {
    "text": "likelihood of compromise through clouds so as we talked about M365 uh is very",
    "start": "301680",
    "end": "307160"
  },
  {
    "text": "sneaky and sometimes turns itself on without you even realizing it and if especially if you're using either M365",
    "start": "307160",
    "end": "312520"
  },
  {
    "text": "or Google Business Suites within your Enterprise there's a high chance a lot of users have this on anyway just uh for",
    "start": "312520",
    "end": "317680"
  },
  {
    "text": "convenience's sake and also just anecdotally I've seen a whole bunch of personal browser sync accounts in",
    "start": "317680",
    "end": "324080"
  },
  {
    "text": "reasonably uh serious Enterprises uh for similar uh convenience features but because these are personal accounts they",
    "start": "324080",
    "end": "330240"
  },
  {
    "text": "often don't have MFA uh and you'll have basically no visibility on what they're doing because they go to the same sync and points as your trusted",
    "start": "330240",
    "end": "337680"
  },
  {
    "text": "equivalent this takes us to the case studies so each of these case studies were done on a fully patched Chrome Edge",
    "start": "337680",
    "end": "343080"
  },
  {
    "text": "and Firefox browser and the base assumption is that the user is using this browser regularly so maybe restarting the browser at the start of",
    "start": "343080",
    "end": "349240"
  },
  {
    "text": "the day other than that browsing sites entering passwords Etc so the first case study explores",
    "start": "349240",
    "end": "355520"
  },
  {
    "text": "passive actions which is really just uh anything non overtly malicious uh the key key thing here being what can you do",
    "start": "355520",
    "end": "361120"
  },
  {
    "text": "without any uh real notification to the user um and the first couple things that uh stood out immediately are things like",
    "start": "361120",
    "end": "367800"
  },
  {
    "text": "passwords and the locations to where those passwords are used autofill data uh which can include sensitive info such",
    "start": "367800",
    "end": "374199"
  },
  {
    "text": "as credit cards themselves uh on top of the actual credit card features and history and the key notes",
    "start": "374199",
    "end": "380520"
  },
  {
    "text": "on History being that it gives you the full get parameters for uh the pages that we browsed to and also gives you",
    "start": "380520",
    "end": "385639"
  },
  {
    "text": "the internal title so even for an Internet site you can read the title through Cloud sync which can give a",
    "start": "385639",
    "end": "391080"
  },
  {
    "text": "whole pile of context to an attacker typically you can just look through the gooey to find this info but if you want",
    "start": "391080",
    "end": "396160"
  },
  {
    "text": "to get into the nitty-gritty uh there's features called sync node browsers which allow you to see all the data that's",
    "start": "396160",
    "end": "401840"
  },
  {
    "text": "actually stored within sync uh so from this you can pull out everything even the stuff that's hidden through the guey Edge and chrome have",
    "start": "401840",
    "end": "408720"
  },
  {
    "text": "this by default at SL sync or sync internals Firefox is a bit trickier uh there's an extension to emulate this",
    "start": "408720",
    "end": "415120"
  },
  {
    "text": "functionality uh but the the key information here is that you can pull out a lot of stuff uh that you can't see through the GUI especially in Firefox",
    "start": "415120",
    "end": "421639"
  },
  {
    "text": "which hides a lot more and on top of this every single piece of data within",
    "start": "421639",
    "end": "426960"
  },
  {
    "text": "um the sync node has to be timestamped because that's the way it knows that the state has changed such that it can update your local state so every single",
    "start": "426960",
    "end": "434080"
  },
  {
    "text": "piece of data in here is timestamped which allows you to triage the most recent uh information to see what a user",
    "start": "434080",
    "end": "439319"
  },
  {
    "text": "is most recently marking around with one of the interesting features specifically in Edge is these three settings here",
    "start": "439319",
    "end": "446240"
  },
  {
    "text": "when all three of these three settings are set Edge will automatically save your pass passwords without asking and all three of these features are Cloud",
    "start": "446240",
    "end": "452199"
  },
  {
    "text": "synced so even if a user has no password stored within Edge all you needs to do is set these three settings and uh you",
    "start": "452199",
    "end": "458319"
  },
  {
    "text": "functionally have a key logger on your user uh they will get a minor notification but again they're not going to realize that something overtly",
    "start": "458319",
    "end": "464599"
  },
  {
    "text": "malicious has happened has happened as they haven't done something like clicked a link they've just used their browser regularly so that wraps up case study",
    "start": "464599",
    "end": "471560"
  },
  {
    "text": "one case study two uh which informed basically the rest of the attacks is about Force navigation in setting the",
    "start": "471560",
    "end": "477879"
  },
  {
    "text": "user start page uh you can set the start page with basically any URL you want uh which can allow for a whole variety of",
    "start": "477879",
    "end": "484039"
  },
  {
    "text": "different things mostly works the same kind of way as fishing with slightly more trust because the user hasn't clicked a malicious link they've just",
    "start": "484039",
    "end": "490000"
  },
  {
    "text": "open their browser so this allows for some uh the usual kind of fishing attacks things like spoofing a trusted site to drop",
    "start": "490000",
    "end": "496080"
  },
  {
    "text": "malware is pretty useable uh because you can uh Point them at any kind of fake",
    "start": "496080",
    "end": "501319"
  },
  {
    "text": "site and they're probably not going to check the URL because they haven't specifically navigated to it in this specific example just emulating the",
    "start": "501319",
    "end": "506639"
  },
  {
    "text": "Chrome um update uh to try to commit to to click it that way these attacks get",
    "start": "506639",
    "end": "511720"
  },
  {
    "text": "significantly more Insidious um via the use of the JavaScript URL rather than going to an HTTP site um if anyone",
    "start": "511720",
    "end": "519120"
  },
  {
    "text": "doesn't know if you put Javascript into a URL it'll just run as long as it goes JavaScript colon whatever which allows",
    "start": "519120",
    "end": "524880"
  },
  {
    "text": "you to get accesss on typically the current page but in this context when you set it as the start page it'll run",
    "start": "524880",
    "end": "530680"
  },
  {
    "text": "in a domain lless context but it can allow for some uh more Insidious versions of this technique where you get",
    "start": "530680",
    "end": "535959"
  },
  {
    "text": "basically no external call outs the entire malware just comes from sync uh which can make it a bit more tricky and I'll show off a full demo of that a bit",
    "start": "535959",
    "end": "542079"
  },
  {
    "text": "later on uh unfortunately as we said this is a domain xss so it can't be used to say",
    "start": "542079",
    "end": "548000"
  },
  {
    "text": "exfiltrate data uh however Edge has another very cool feature uh which is the home button uh so the home button",
    "start": "548000",
    "end": "554720"
  },
  {
    "text": "also allows embeding arbitrary xss uh this one is a universal xss so all you have to do is set the start page to any",
    "start": "554720",
    "end": "561160"
  },
  {
    "text": "page you want to run the xss on and then set the uh home button to whatever",
    "start": "561160",
    "end": "566399"
  },
  {
    "text": "JavaScript you want to execute in this case just sending it to Microsoft to pop an alert box showing off the cookies",
    "start": "566399",
    "end": "572079"
  },
  {
    "text": "again I notified edge of this and they gave me the thumbs up and said that it was a risk accepted so um this is still",
    "start": "572079",
    "end": "577839"
  },
  {
    "text": "in Edge today um but yep so uh unfortunately this does mean you do have some user interaction but again it's",
    "start": "577839",
    "end": "584120"
  },
  {
    "text": "pressing the home button it's not you know clicking link um but that's not the only types of",
    "start": "584120",
    "end": "589720"
  },
  {
    "text": "URLs that you can navigate to you can also use uh local files or even um remote file shares to allow for things",
    "start": "589720",
    "end": "594800"
  },
  {
    "text": "like this so if you send a user to a remote file share and Port 445 outbound is allowed then you can just uh coers",
    "start": "594800",
    "end": "601560"
  },
  {
    "text": "authentication to crack uh domain passwords U or potentially relay them but that's a bit uh too tricky in my",
    "start": "601560",
    "end": "608560"
  },
  {
    "text": "opinion um so it'll looks something like this usually where it says access to the file was denied that's just because this",
    "start": "608560",
    "end": "614040"
  },
  {
    "text": "wasn't a real file but if you were to put in a real file you can run that HTML from a file context uh which we'll talk",
    "start": "614040",
    "end": "620360"
  },
  {
    "text": "about in a moment and then just on the local equivalent um if you go to a folder it'll typically look something like this uh as a directory listing uh",
    "start": "620360",
    "end": "627640"
  },
  {
    "text": "specifically I use used C users here because that gives you the list of all the users on that desktop",
    "start": "627640",
    "end": "634360"
  },
  {
    "text": "device so if you have accs such as via the edge Universal xss we just mentioned or specifically via extensions uh just",
    "start": "634360",
    "end": "641560"
  },
  {
    "text": "any way to get xss on the page you can then exfiltrate this data and just ship it off via fetch to pull this data down",
    "start": "641560",
    "end": "646760"
  },
  {
    "text": "for yourself um rather than going to a folder if you go to a specific file typically it'll also be rendered in",
    "start": "646760",
    "end": "652399"
  },
  {
    "text": "browser which again allows you to just pull down that data via xss if you've got it um so the other weird thing that",
    "start": "652399",
    "end": "659000"
  },
  {
    "text": "the file uh context allows that I wanted to flag is um Lo uh loading local resources so typically the same origin",
    "start": "659000",
    "end": "666040"
  },
  {
    "text": "policy prevents you loading local files as resources into Pages however the entire file um is treated as the same",
    "start": "666040",
    "end": "672600"
  },
  {
    "text": "origin context which means you can use a remote file share to load a local file",
    "start": "672600",
    "end": "678639"
  },
  {
    "text": "so in a circumstance like this um this is a little difficult to find in the real world the best example I found is",
    "start": "678639",
    "end": "684120"
  },
  {
    "text": "the preferences file in Firefox which you do need to know the full path for but as this file works as JavaScript all",
    "start": "684120",
    "end": "690279"
  },
  {
    "text": "you need to do is overwrite the user prath string with a function in this case just logging it to dis but again",
    "start": "690279",
    "end": "695600"
  },
  {
    "text": "you can exfiltrate it just as easily um so you just set that function to something to exfiltrate and then you can",
    "start": "695600",
    "end": "701240"
  },
  {
    "text": "just load that Resource as JavaScript and then once it's in the Dom you have full access to it uh so that that",
    "start": "701240",
    "end": "707440"
  },
  {
    "text": "technique in particular I wanted to call out because it doesn't require any of these other vulnerabilities that we're going to talk about today it's just a",
    "start": "707440",
    "end": "713320"
  },
  {
    "text": "thing that browsers do um on top of the file protocol handl",
    "start": "713320",
    "end": "718680"
  },
  {
    "text": "there's also AR protocol handlers typically application protocol handlers are just a way to inform a browser uh to",
    "start": "718680",
    "end": "724480"
  },
  {
    "text": "leave the browser context to run an external application so this could be um something like Zoom or teams when you're",
    "start": "724480",
    "end": "729920"
  },
  {
    "text": "trying to open a a conferencing software uh but there's just a whole slew of them a lot of them inbuilt into Windows um in",
    "start": "729920",
    "end": "735839"
  },
  {
    "text": "general the more unsafe ones are going to be ones that need to get downloaded a good example here being the Java Network launch protocol Handler which looks like",
    "start": "735839",
    "end": "743199"
  },
  {
    "text": "this uh and this just pulls down and runs a remote jar file Java does need to be installed for this one but uh this",
    "start": "743199",
    "end": "749639"
  },
  {
    "text": "can run arbitrary code it does give you a secondary prompt because Java's nice like that but in the case where you find",
    "start": "749639",
    "end": "755360"
  },
  {
    "text": "a protocol handling vulnerability which is when it shouldn't do RC but it does uh it's typically uh patched out and CER",
    "start": "755360",
    "end": "761720"
  },
  {
    "text": "uh vulnerability things like Felino were a recent example of this uh but these do come up semi frequently uh but again",
    "start": "761720",
    "end": "768519"
  },
  {
    "text": "this gives you an interesting way to kind of um execute code outside of the browser context um in the real world I",
    "start": "768519",
    "end": "775519"
  },
  {
    "text": "think things like jnlp are probably more likely uh than someone droing an arbitary OD but if something does come",
    "start": "775519",
    "end": "781680"
  },
  {
    "text": "out in the protocol Handler space uh this is something to keep an eye on and last but not least U malicious",
    "start": "781680",
    "end": "788959"
  },
  {
    "text": "extensions uh by default are synced if the browser vendor approves them which means there is a limit to how overtly",
    "start": "788959",
    "end": "795440"
  },
  {
    "text": "malicious these extensions can be but malicious extensions get approved every day and um on top of that there's also",
    "start": "795440",
    "end": "801199"
  },
  {
    "text": "just a lot of dodgy extensions out there where the code isn't overtly malicious but just poorly written which can lead",
    "start": "801199",
    "end": "806399"
  },
  {
    "text": "to all kinds of circumstances um as such rather than trying to get malicious extensions published for each of the",
    "start": "806399",
    "end": "812480"
  },
  {
    "text": "browsers I just use local developer extensions which gives you a lot of that same functionality it just won't sync",
    "start": "812480",
    "end": "817680"
  },
  {
    "text": "and then uh when testing I just chucked it on the the victim device and then used a couple real extensions to",
    "start": "817680",
    "end": "822800"
  },
  {
    "text": "validate sync was working the way that I thought it would uh so the key thing here most extensions also allow you to",
    "start": "822800",
    "end": "828839"
  },
  {
    "text": "set some settings but within a sync context we have access to all these settings anyway so it doesn't really matter uh",
    "start": "828839",
    "end": "834320"
  },
  {
    "text": "but uh goodness yeah um but we get the ability to read and write data to any",
    "start": "834320",
    "end": "840040"
  },
  {
    "text": "page that the user browses to and as we've now shown we have access to a whole bunch of things that aren't just websites which allows you to do cool",
    "start": "840040",
    "end": "846120"
  },
  {
    "text": "things like this where you set the user start page to in this case an SSH private key and then we use XS uh the",
    "start": "846120",
    "end": "852240"
  },
  {
    "text": "xss within the extension to in this case Chu it an alert box but again you can just wrap up and exfiltrate whatever",
    "start": "852240",
    "end": "857720"
  },
  {
    "text": "data uh you send them to on sync this version is overtly malicious but I'll show some sneakier examples of how this",
    "start": "857720",
    "end": "863440"
  },
  {
    "text": "can be done but that basically wraps up the case studies unfortunately each of the case studies formed the attacks for",
    "start": "863440",
    "end": "870040"
  },
  {
    "text": "subsequent case studies so it kind of turned into just a massive lines so instead I thought I'd talk about it all",
    "start": "870040",
    "end": "875759"
  },
  {
    "text": "and then show off all the actual exploits um so yeah we've we've shown there's a whole bunch of info theft both actively and through some passive",
    "start": "875759",
    "end": "881800"
  },
  {
    "text": "attacks including being able to pull down arbitary Files full control the victim URLs which includes not just HTP",
    "start": "881800",
    "end": "887279"
  },
  {
    "text": "but a whole bunch of different protocols with a whole bunch of different attack vectors or coercion for cracking and",
    "start": "887279",
    "end": "892519"
  },
  {
    "text": "relaying uh viewing local and remote files and then the ability to trigger external",
    "start": "892519",
    "end": "898040"
  },
  {
    "text": "applications uh so as I mentioned at the start uh wherever anything to me looked like a",
    "start": "898040",
    "end": "903279"
  },
  {
    "text": "vulnerability I've told the browser vendors and basically everything's been risk accepted uh the few things that haven't are still getting discussed with",
    "start": "903279",
    "end": "909360"
  },
  {
    "text": "the browsers uh but everything that we're going to show today worked as of a week ago when I last tested but I presume it's all still in",
    "start": "909360",
    "end": "916040"
  },
  {
    "text": "there as we talked about Force password theft I think is probably one of the most likely things you'll see in the real world uh just because it's so uh",
    "start": "916040",
    "end": "923360"
  },
  {
    "text": "easy to do and so non overtly malicious so all you got to do is set those three settings and then the US will get a",
    "start": "923360",
    "end": "928600"
  },
  {
    "text": "little like that that just says their password was saved but again they're probably not going to assume anything malicious has happened and on top of",
    "start": "928600",
    "end": "934759"
  },
  {
    "text": "that if they do uh freak out and decide that they don't want their password saved and delete it in sync it is",
    "start": "934759",
    "end": "940000"
  },
  {
    "text": "already too late because the attacker can just Lo uh log their sync requests as they come in uh so once you try to",
    "start": "940000",
    "end": "946360"
  },
  {
    "text": "clear data from syn it doesn't really help uh as long as you've already got a copy of it for something more averly malicious",
    "start": "946360",
    "end": "953519"
  },
  {
    "text": "using that uh attack primitive we showed earlier where you can browse to a local file and then exfiltrate it via an",
    "start": "953519",
    "end": "958639"
  },
  {
    "text": "extent all you need to do on top of this is just throw in a redirection to whatever their start page was and depending on",
    "start": "958639",
    "end": "964360"
  },
  {
    "text": "how big the file is you're trying to exfiltrate this usually takes about half a second before it swaps to the usual page and then once you've exfiltrated it",
    "start": "964360",
    "end": "971240"
  },
  {
    "text": "you can just swap their homepage back to whatever their normal homepage was they'll see something weird for half a second and then never see it",
    "start": "971240",
    "end": "977560"
  },
  {
    "text": "again similarly you can do the same thing on share drives um uh here I've just uh emulated net log on on a domain",
    "start": "977560",
    "end": "984279"
  },
  {
    "text": "controller which I think is a pretty good example of the power of this where this allows you even with without exfiltrating these files just by looking",
    "start": "984279",
    "end": "990600"
  },
  {
    "text": "at the file extensions U net logon will just uh run all of these uh programs whenever uh the whatever you're in an",
    "start": "990600",
    "end": "997800"
  },
  {
    "text": "active domain cont active directory context uh and login um so by doing this it gives you pretty good context as to",
    "start": "997800",
    "end": "1004360"
  },
  {
    "text": "what is going to circumvent app allow listing for your subsequent malware attacks uh or you can pull down these",
    "start": "1004360",
    "end": "1009560"
  },
  {
    "text": "actual files and you can often find things like credentials in them as well uh and yeah just using the same",
    "start": "1009560",
    "end": "1015199"
  },
  {
    "text": "technique with either xss through Edge or a malicious extension you can just pull all this data",
    "start": "1015199",
    "end": "1021000"
  },
  {
    "text": "down uh and then I just thought I'd show off the Json P theft uh technique earlier where you're just loading a",
    "start": "1021000",
    "end": "1026880"
  },
  {
    "text": "local resource uh into the Dom and then exfiltrating it or in this case just console. logging it uh as this technique",
    "start": "1026880",
    "end": "1032798"
  },
  {
    "text": "seems to be one that uh is rather confusing to understand conceptually so",
    "start": "1032799",
    "end": "1037918"
  },
  {
    "text": "this is just a file share called demo share with a HTML file that you then send um send the user start page to and",
    "start": "1037919",
    "end": "1044319"
  },
  {
    "text": "it'll exfiltrate that data as for the more code EXA side of things",
    "start": "1044319",
    "end": "1049480"
  },
  {
    "text": "um so this is a way to use the xss within sync to drop malware without any",
    "start": "1049480",
    "end": "1054880"
  },
  {
    "text": "additional external callouts so in this case all you're doing is you're embedding an HTML smuggling payload",
    "start": "1054880",
    "end": "1061280"
  },
  {
    "text": "which is just a way to drop a malicious payload to dis just through JavaScript uh so it drops this chrome update.exe to",
    "start": "1061280",
    "end": "1067280"
  },
  {
    "text": "disk and then sends the user to google.com.au uh in this case all the",
    "start": "1067280",
    "end": "1072679"
  },
  {
    "text": "user we see is the browser load the download start and then be at Google which gives you uh pretty significant",
    "start": "1072679",
    "end": "1078120"
  },
  {
    "text": "context that it looks like it's come from Google uh and again there's almost no network visibility as to what's",
    "start": "1078120",
    "end": "1083679"
  },
  {
    "text": "actually happened the only thing you'll actually see is the sync request when this data gets pulled down uh which is",
    "start": "1083679",
    "end": "1089640"
  },
  {
    "text": "yeah rather rather Insidious way to go about it uh for something that's again got a higher likelihood of getting",
    "start": "1089640",
    "end": "1095679"
  },
  {
    "text": "clicked but is a little more difficult uh you can also just hollow out download functionality on pages that the user",
    "start": "1095679",
    "end": "1100919"
  },
  {
    "text": "browsers to wait for them to download a trusted executable somewhere and in this case I've just holed out the um download",
    "start": "1100919",
    "end": "1107520"
  },
  {
    "text": "Chrome button to uh put in that same HTML smuggling payload i' consider this more of like a",
    "start": "1107520",
    "end": "1113360"
  },
  {
    "text": "threat actor concern where you've got enough time to guarantee your payload execution uh the reason I've shown this",
    "start": "1113360",
    "end": "1118559"
  },
  {
    "text": "one specifically is because this technique doesn't actually work on Google and my goal is to not uh give script kitties more uh things to cause",
    "start": "1118559",
    "end": "1125600"
  },
  {
    "text": "Havoc um so one fun thing about extensions uh is that content security policies will typically be prevent uh",
    "start": "1125600",
    "end": "1132480"
  },
  {
    "text": "will typically prevent malicious stuff from running in circumstances like this so you actually can't do this hollowing",
    "start": "1132480",
    "end": "1137559"
  },
  {
    "text": "attack on Google but other sites it absolutely does work and it's literally as easy as just pulling down the HTML",
    "start": "1137559",
    "end": "1144360"
  },
  {
    "text": "finding the download functionality hollowing it out and then throwing in your malicious payload",
    "start": "1144360",
    "end": "1149840"
  },
  {
    "text": "instead uh onto the direct code executions so uh this is from the white paper uh where I've just added a",
    "start": "1149840",
    "end": "1155960"
  },
  {
    "text": "protocol Handler vul to demonstrate these techniques uh as I don't have any available but these things do come out",
    "start": "1155960",
    "end": "1161919"
  },
  {
    "text": "all the time i' recommend keeping an eye on them uh so in this case this is just a command injection vulnerability uh",
    "start": "1161919",
    "end": "1167919"
  },
  {
    "text": "through Ms MS dt. uh in this case just sending it to Cal to open a calculator",
    "start": "1167919",
    "end": "1173039"
  },
  {
    "text": "uh so there's a full Park in the white paper for this but if you set a use a start page to a protocol Handler all",
    "start": "1173039",
    "end": "1178080"
  },
  {
    "text": "they'll see is this prompt and then the fact that it says Windows command processor there is just because that's the first process that is run by this",
    "start": "1178080",
    "end": "1185120"
  },
  {
    "text": "protocol Handler if this was something like office or something like Adobe they'll just see that instead uh which",
    "start": "1185120",
    "end": "1191000"
  },
  {
    "text": "again increases the likelihood that your users going to click it uh the other key uh point I wanted to",
    "start": "1191000",
    "end": "1197960"
  },
  {
    "text": "flag so this is the Tomcat exploit from earlier and the way to obtain all of that context and um incubate it all",
    "start": "1197960",
    "end": "1203720"
  },
  {
    "text": "through sync so in this case by looking through the users history we can see that they've got a tomcat server running",
    "start": "1203720",
    "end": "1209120"
  },
  {
    "text": "locally on um port 8080 and by looking at the fact that they've gone to manage HTML which is the admin endpoint there's",
    "start": "1209120",
    "end": "1216280"
  },
  {
    "text": "some reasonable inference there that they've got um uh that they've got admin credentials and because the title is",
    "start": "1216280",
    "end": "1222200"
  },
  {
    "text": "saved in sync you can see the full uh version there of 9.0.2 and then by ating that location",
    "start": "1222200",
    "end": "1230000"
  },
  {
    "text": "with the password saved in this case Local Host 8080 you can pull down the admin credentials for tomap this then",
    "start": "1230000",
    "end": "1235200"
  },
  {
    "text": "gives you all you need to uh build that uh cross-site request forgery payload and then the only other limitation is",
    "start": "1235200",
    "end": "1241000"
  },
  {
    "text": "you need to run it from the tomc cap endpoint itself such that bypasses SEF and same origin policy",
    "start": "1241000",
    "end": "1247120"
  },
  {
    "text": "protections so as we showed earlier you just send them to uh send them to that Tomcat server by setting the start page",
    "start": "1247120",
    "end": "1253360"
  },
  {
    "text": "or by using a malicious extension and then using XS through either the extension or through the edge xss to",
    "start": "1253360",
    "end": "1259760"
  },
  {
    "text": "launch this payload as we talked about with desktop credential compromise uh this gives you",
    "start": "1259760",
    "end": "1265360"
  },
  {
    "text": "a copy of their net ntlmv2 hash uh which can then potentially be cracked by something like hash cap uh in this case",
    "start": "1265360",
    "end": "1271480"
  },
  {
    "text": "I've just given it an easy password to demonstrate uh relaying a tax mails be possible but again it's a little harder and you won't be able to hit the local",
    "start": "1271480",
    "end": "1277600"
  },
  {
    "text": "server you'll need to find something else internally which requires additional uh limitations but taking these credentials",
    "start": "1277600",
    "end": "1284960"
  },
  {
    "text": "uh we can uh do a different form of uh code execution through C surf uh via this time via winrm so winrm is just a",
    "start": "1284960",
    "end": "1291960"
  },
  {
    "text": "remoting uh protocol which uh if you have administrator privileges allows you to just run arbitary code uh as it has a",
    "start": "1291960",
    "end": "1298200"
  },
  {
    "text": "web endpoint you can do the same thing as Tomcat just send them to this local host and then embed the payload uh",
    "start": "1298200",
    "end": "1303640"
  },
  {
    "text": "within an extension or within the home button and then launch this payload uh when the user",
    "start": "1303640",
    "end": "1308720"
  },
  {
    "text": "restarts uh the key thing that I wanted to uh kind of demonstrate with both of these code executions is you shouldn't",
    "start": "1308720",
    "end": "1314799"
  },
  {
    "text": "necessarily be looking for Tom cat or I I would look for winm because it's generally all over the place but uh this",
    "start": "1314799",
    "end": "1320559"
  },
  {
    "text": "is more of a conceptual idea as to how you can find this context and cater it to the specific environment that you're",
    "start": "1320559",
    "end": "1325760"
  },
  {
    "text": "trying to crack not specifically you know to focus on this tomat for example as um cod exac in that is well",
    "start": "1325760",
    "end": "1332159"
  },
  {
    "text": "documented one final thing I wanted to touch on but I won't get into too deeply is all of these settings are just saved",
    "start": "1332159",
    "end": "1338480"
  },
  {
    "text": "on disk uh usually in the profiles directories so there's a whole bunch of settings that aren't Cloud synced",
    "start": "1338480",
    "end": "1344440"
  },
  {
    "text": "because they're quite unsafe and as such uh if you have right priv privileges to these you can just set those unsafe",
    "start": "1344440",
    "end": "1350919"
  },
  {
    "text": "settings yourself um so without going into it too much uh as it's a little too adjacent to a couple Vols that haven't",
    "start": "1350919",
    "end": "1356919"
  },
  {
    "text": "finished being patched yet U there's a lot of very easy RC in here from a a",
    "start": "1356919",
    "end": "1361960"
  },
  {
    "text": "desktop uh from a active directory uh prives perspective and lateral movement",
    "start": "1361960",
    "end": "1367480"
  },
  {
    "text": "if you have um right privileges on these files which is typically you know already got admin and you just trying to",
    "start": "1367480",
    "end": "1372880"
  },
  {
    "text": "move laterally so to summarize the attacks we've looked at uh there significant",
    "start": "1372880",
    "end": "1378039"
  },
  {
    "text": "info the actively passively um being able to pull down arbitary files um full",
    "start": "1378039",
    "end": "1383480"
  },
  {
    "text": "control of the victim URLs including a whole slew of protocols this by no means the entire list of protocols that are out there that would be unsafe these are",
    "start": "1383480",
    "end": "1390559"
  },
  {
    "text": "just the ones that I found that have interesting things in them uh or coersion for both credential cracking",
    "start": "1390559",
    "end": "1396159"
  },
  {
    "text": "and uh relaying attacks and potentially use for attacking internal sites with things like",
    "start": "1396159",
    "end": "1401400"
  },
  {
    "text": "winrm viewing local and remote files through the file context uh to allow you to circumvent some same origin policy",
    "start": "1401400",
    "end": "1407120"
  },
  {
    "text": "protections uh the ability to trigger external applications with things like protocol handlers um and then request",
    "start": "1407120",
    "end": "1412760"
  },
  {
    "text": "for your attacks that circumvent the SL which gives you a whole bunch of different ways to get Cod exac depending on what internal apps are available uh",
    "start": "1412760",
    "end": "1419720"
  },
  {
    "text": "that is one thing that I don't know if I covered but these don't have to hit a local uh the local site itself this could hit any external uh any internal",
    "start": "1419720",
    "end": "1427320"
  },
  {
    "text": "site or any external site that has IP allow listing because the attack is fully derived from the user's browser um",
    "start": "1427320",
    "end": "1433760"
  },
  {
    "text": "it can hit anything that they can hit and then finally there is some lateral movement Tech in in there as",
    "start": "1433760",
    "end": "1439520"
  },
  {
    "text": "well so to quickly cover off defense as far as prevention goes uh when I",
    "start": "1439520",
    "end": "1444640"
  },
  {
    "text": "discussed this with the browsers uh browser vendors they basically told me to harden these browsers uh towards sync",
    "start": "1444640",
    "end": "1451600"
  },
  {
    "text": "attacks don't disable sync however as we've seen there's a whole bunch of seemingly innocuous features that end up",
    "start": "1451600",
    "end": "1457120"
  },
  {
    "text": "being pretty dastardly in the context of sync so my personal recommendation is just to disable them uh both at a cloud",
    "start": "1457120",
    "end": "1463320"
  },
  {
    "text": "level and a device level doing it at a cloud level will lock down all of your accounts but it won't help you against",
    "start": "1463320",
    "end": "1468440"
  },
  {
    "text": "trusted accounts being synced within your domain so doing it at a device level as well through group policy helps with that uh there's full information on",
    "start": "1468440",
    "end": "1475000"
  },
  {
    "text": "this in the white paper as well uh and then I would absolutely recommend decoupling your passive manager from",
    "start": "1475000",
    "end": "1480200"
  },
  {
    "text": "your browser uh it's just too open in a tax office in my opinion uh and then just additional Rex",
    "start": "1480200",
    "end": "1486279"
  },
  {
    "text": "we've only looked at windows in these three browsers uh today so I would recommend looking at uh all the other",
    "start": "1486279",
    "end": "1491440"
  },
  {
    "text": "browsers that are in use within your organization and any other desktop environments that may need different",
    "start": "1491440",
    "end": "1496679"
  },
  {
    "text": "hardening um and then there are any personal browser accounts in use in your environment I'd also recommend looking",
    "start": "1496679",
    "end": "1502039"
  },
  {
    "text": "at them uh already just because you get very little visibility on them and they're very powerful for things like data exfiltration as well uh so I'd have",
    "start": "1502039",
    "end": "1508919"
  },
  {
    "text": "a look at those if you do happen to stumble across them whilst looking at the stuff as for detection this is all",
    "start": "1508919",
    "end": "1514960"
  },
  {
    "text": "reasonably top level uh you get very little visibility within sync itself you could SSL inspect the sync traffic and",
    "start": "1514960",
    "end": "1520919"
  },
  {
    "text": "try to find malicious things but it doesn't really seem like a great option to me personally um so I'd recommend",
    "start": "1520919",
    "end": "1527000"
  },
  {
    "text": "looking more at the actual authentic ation s so uh in your in any of your Enterprise accounts that are external",
    "start": "1527000",
    "end": "1532799"
  },
  {
    "text": "investigating things like anomalous logins uh within your external Services uh also on the internal side looking for",
    "start": "1532799",
    "end": "1538440"
  },
  {
    "text": "any malicious extensions as they do give you an immense amount of power and especially some key ways to uh execute C",
    "start": "1538440",
    "end": "1544440"
  },
  {
    "text": "attacks that you don't get elsewhere investigating anomalous browser sub processes helps with protocol handlers",
    "start": "1544440",
    "end": "1551039"
  },
  {
    "text": "um and then just alerting on excessive network activity things like Port scanning if you do want to say find winam on a server you may need to port",
    "start": "1551039",
    "end": "1557720"
  },
  {
    "text": "scan through which will be rather noisy so for the more opportunistic attackers side of things I'd recommend looking for that",
    "start": "1557720",
    "end": "1564320"
  },
  {
    "text": "the way you typically would last but not least I wanted to uh show sinky off which is just a net tool",
    "start": "1564320",
    "end": "1571039"
  },
  {
    "text": "to uh emulate the techniques that we've talked about today um so it's not overtly malicious in itself it's just a",
    "start": "1571039",
    "end": "1576559"
  },
  {
    "text": "way to drop um browser profiles that sync to disk with a malicious extension",
    "start": "1576559",
    "end": "1582039"
  },
  {
    "text": "uh a malicious developer extension so you don't have to uh deal with the vendors and then it just periodically",
    "start": "1582039",
    "end": "1587960"
  },
  {
    "text": "opens encloses itself and then from that you can incubate all of the techniques we've talked about today and if they",
    "start": "1587960",
    "end": "1593440"
  },
  {
    "text": "require an extension it has a way to pass the malicious uh JavaScript to the uh the extension uh from the sync to the",
    "start": "1593440",
    "end": "1600679"
  },
  {
    "text": "extension to leverage those attacks and then it'll just keep looping until you send it a kill request uh and",
    "start": "1600679",
    "end": "1608279"
  },
  {
    "text": "now I'll show off a couple of those techniques",
    "start": "1608279",
    "end": "1613360"
  },
  {
    "text": "through um through sinky",
    "start": "1613679",
    "end": "1620240"
  },
  {
    "text": "where is my mouse there excellent oh by the way perfect um so",
    "start": "1622600",
    "end": "1630000"
  },
  {
    "text": "just as far as the setup goes on the left here is our victim device uh the one running sinky and in this case I've just told it to just Loop Chrome uh and",
    "start": "1630000",
    "end": "1636640"
  },
  {
    "text": "then on the right here we have our car instance which is going to retrieve the data we're exfiltrating and then um is",
    "start": "1636640",
    "end": "1642120"
  },
  {
    "text": "also hosting the share with a malicious HTML file for our Json P theft and then the uh the bad metal device here is the",
    "start": "1642120",
    "end": "1650120"
  },
  {
    "text": "external attack in this context but all this is coming through through the internet through",
    "start": "1650120",
    "end": "1656120"
  },
  {
    "text": "syn so in this case we're just waiting for synu to fire off as we can see there's no malicious activity but they're both uh running the same syn",
    "start": "1657880",
    "end": "1664399"
  },
  {
    "text": "account so in this case you can just Chuck in the the Json P theft payload wait for it to syn and then wait",
    "start": "1664399",
    "end": "1670960"
  },
  {
    "text": "for sinky to kill it and restart it and",
    "start": "1670960",
    "end": "1676720"
  },
  {
    "text": "then whenever she's ready uh and then in this case it's just wrapping it up in Bas 64 and sending it off to this HTP",
    "start": "1677120",
    "end": "1686240"
  },
  {
    "text": "server uh so in this case we're just pulling down that prefs JS file we saw earlier uh finding things that are",
    "start": "1697840",
    "end": "1703519"
  },
  {
    "text": "vulnerable to Json P theft is a bit trickier but I haven't been able to go through the whole file system cuz it takes far too long and then for this one",
    "start": "1703519",
    "end": "1710919"
  },
  {
    "text": "we're just doing that uh private key theft that we showed earlier and in this case we're now to improve the opsec",
    "start": "1710919",
    "end": "1717399"
  },
  {
    "text": "we're now redirecting them to Google afterwards to show just how quick that window is for",
    "start": "1717399",
    "end": "1723640"
  },
  {
    "text": "exfiltration and then once you've got that exfiltration once you can just clear out that homepage and they'll never see it",
    "start": "1728279",
    "end": "1734240"
  },
  {
    "text": "again uh and then this is the winrm exploit so in this case sending to Local Host 5985 and then this exploit has the",
    "start": "1734240",
    "end": "1741519"
  },
  {
    "text": "credentials embedded within it that we compromised earlier via cred",
    "start": "1741519",
    "end": "1746440"
  },
  {
    "text": "cracking so again yet just sends it back to Google and then we see our calp",
    "start": "1762880",
    "end": "1770039"
  },
  {
    "text": "and then that's basically the way sinky Works uh you can just send keep sending payloads to fill as much um uh logs or",
    "start": "1775320",
    "end": "1781799"
  },
  {
    "text": "set off as many alerts as you want and then whenever you're done with it you just send through uh in this case it's literally just set to super secret kill",
    "start": "1781799",
    "end": "1787799"
  },
  {
    "text": "code and then um sinky reads that from the preferences file and will um get the",
    "start": "1787799",
    "end": "1793360"
  },
  {
    "text": "notification to kill itself uh in this case I was slightly too late on um sending that request so",
    "start": "1793360",
    "end": "1800840"
  },
  {
    "text": "it opens a second calculator uh but then on the next Loop it'll um read that sync",
    "start": "1800840",
    "end": "1806679"
  },
  {
    "text": "and then",
    "start": "1806679",
    "end": "1809679"
  },
  {
    "text": "end and then we see kill received and then sinki stops itself it currently",
    "start": "1819200",
    "end": "1824320"
  },
  {
    "text": "doesn't do a full wrap of um",
    "start": "1824320",
    "end": "1829960"
  },
  {
    "text": "uh it doesn't uh fully nuke itself from dis yet which is something I'd like to expand in the future uh but for now it's",
    "start": "1830480",
    "end": "1836159"
  },
  {
    "text": "just built to do as much overtly malicious activity as you can um again the goal here is not to necessarily Aid",
    "start": "1836159",
    "end": "1841919"
  },
  {
    "text": "attackers with a new tool but to uh kind of demonstrate impact and make people actually start thinking about sync as an",
    "start": "1841919",
    "end": "1848320"
  },
  {
    "text": "attack Vector so just to wrap up syn provides remote attackers with significant",
    "start": "1848320",
    "end": "1854919"
  },
  {
    "text": "context and very unique ways to leverage that context to incubate some surprisingly complex payloads within",
    "start": "1854919",
    "end": "1861919"
  },
  {
    "text": "Sy uh to allow you to crack the perimeter personally I just recommend disabling sync in Enterprise",
    "start": "1861919",
    "end": "1866960"
  },
  {
    "text": "environments but at the very least start keeping a good eye on it and hardening against as much of these techniques as",
    "start": "1866960",
    "end": "1872200"
  },
  {
    "text": "you can and if you're on the offensive side uh consider using sinky for your next attack him it's pretty easy to wrap",
    "start": "1872200",
    "end": "1878799"
  },
  {
    "text": "up with Cod exac if you want to try it for a C2 as well uh but again it's really built for the for the defensive",
    "start": "1878799",
    "end": "1886919"
  },
  {
    "text": "side excellent and that's",
    "start": "1886919",
    "end": "1891679"
  },
  {
    "text": "it y so sink is coming out this AO uh and the white paper will be up on the briefings page as of tonight if you want",
    "start": "1899399",
    "end": "1905039"
  },
  {
    "text": "to look at the actual exploits themselves uh plus a few others that I didn't um have time to get into uh we've",
    "start": "1905039",
    "end": "1911320"
  },
  {
    "text": "got about yeah fiveish minutes if anyone doesn't have any questions there are",
    "start": "1911320",
    "end": "1916840"
  },
  {
    "text": "mics hi very thank you very much for the",
    "start": "1916840",
    "end": "1922840"
  },
  {
    "text": "presentation I just wanted to ask because in the demo basically there is like you run sinky on the local machine",
    "start": "1922840",
    "end": "1930279"
  },
  {
    "text": "which you're like trying to exploit yeah so like is that just for demonstration purposes because if you already have",
    "start": "1930279",
    "end": "1936200"
  },
  {
    "text": "access to the machine why there is a point to actually perform all the attack when you can just exate the files yeah",
    "start": "1936200",
    "end": "1942039"
  },
  {
    "text": "exactly uh yeah so the beauty of uh or not necessarily the beauty but the goal of sinki is to",
    "start": "1942039",
    "end": "1948600"
  },
  {
    "text": "uh allow you to just Chuck a device somewhere on someone's Enterprise uh to emulate these techniques to start",
    "start": "1948600",
    "end": "1954799"
  },
  {
    "text": "sending off alerts and whatnot uh without having to actually have a user getting compromised and periodically",
    "start": "1954799",
    "end": "1960440"
  },
  {
    "text": "having the browser mucked around with so this is just something that you can chuck on a network on any device and",
    "start": "1960440",
    "end": "1965559"
  },
  {
    "text": "just leave it plugged in and generate whatever alerts you want or start doing mici activity whenever you want as",
    "start": "1965559",
    "end": "1971120"
  },
  {
    "text": "opposed to uh like I wouldn't be using this for a rat for example for an attack simulation okay thank you",
    "start": "1971120",
    "end": "1979840"
  },
  {
    "text": "hi uh thank you for your great presentation uh I just have a question regarding using third party password",
    "start": "1985159",
    "end": "1991919"
  },
  {
    "text": "manager extension on the broader how is the likelihood of the exploitation possibility in these",
    "start": "1991919",
    "end": "1998080"
  },
  {
    "text": "cases um the only one I've looked at was last pass uh just because I was curious",
    "start": "1998080",
    "end": "2003799"
  },
  {
    "text": "if there was any metad dat uh that gets synced because extensions panel out for syncing of metadata I didn't see",
    "start": "2003799",
    "end": "2010080"
  },
  {
    "text": "anything sensitive in there but um in general I'm personally an advocate for using desktop versions of password",
    "start": "2010080",
    "end": "2016559"
  },
  {
    "text": "managers for as much security as possible I'm just to kind of avoid uh the wild west that is browsers from",
    "start": "2016559",
    "end": "2022960"
  },
  {
    "text": "having anything to do with your passwords uh but it it's really up your own risk tolerance I know some people who use multiple password managers that",
    "start": "2022960",
    "end": "2029320"
  },
  {
    "text": "concatenate their passwords together and that just seems awful to me so really up to your own risk",
    "start": "2029320",
    "end": "2036279"
  },
  {
    "text": "tolerance thank you",
    "start": "2036279",
    "end": "2039720"
  },
  {
    "text": "excellent seems like there's nothing nothing else um if you do have any other questions feel free to hit me up in the",
    "start": "2043960",
    "end": "2049000"
  },
  {
    "text": "hall otherwise cheers for [Applause]",
    "start": "2049000",
    "end": "2054609"
  },
  {
    "text": "coming",
    "start": "2055560",
    "end": "2058560"
  }
]