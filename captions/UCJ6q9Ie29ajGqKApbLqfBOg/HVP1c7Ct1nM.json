[
  {
    "start": "0",
    "end": "93000"
  },
  {
    "text": "and this session is ah Universal Android Android rooting is back with our speaker",
    "start": "40",
    "end": "6120"
  },
  {
    "text": "W",
    "start": "6120",
    "end": "8440"
  },
  {
    "text": "Shu hello everyone thanks for coming to my talk so I'm Wu from King te today I",
    "start": "12080",
    "end": "20720"
  },
  {
    "text": "will share with you the universal R solution of King first of all I want to",
    "start": "20720",
    "end": "26519"
  },
  {
    "text": "introduce myself I am a security research intern at King team mainly I",
    "start": "26519",
    "end": "32599"
  },
  {
    "text": "focus on Android routing and software exploitation and meanwhile I'm a",
    "start": "32599",
    "end": "38640"
  },
  {
    "text": "undergrad student at Shanghai J University I'm a big fans of CTF games",
    "start": "38640",
    "end": "45120"
  },
  {
    "text": "and and I'm the vice captain of Team oops so we will participate the deathcon",
    "start": "45120",
    "end": "51760"
  },
  {
    "text": "city final tomorrow and hope us good luck here's the road map of my talk so",
    "start": "51760",
    "end": "60039"
  },
  {
    "text": "first of all I will talk about the present situation of Android routin then I'll show the our the Highlight parts of",
    "start": "60039",
    "end": "68280"
  },
  {
    "text": "our work include an awesome bug we exploited to achieve enjoy routine on",
    "start": "68280",
    "end": "76080"
  },
  {
    "text": "Android devices and the second part is about the exploitation techniques we",
    "start": "76080",
    "end": "82759"
  },
  {
    "text": "use and At Last I will talk about the future of the Android routine so let's",
    "start": "82759",
    "end": "88280"
  },
  {
    "text": "start so the question before we do the enjoy",
    "start": "88280",
    "end": "96439"
  },
  {
    "start": "93000",
    "end": "93000"
  },
  {
    "text": "routing and we must make clear that what do we root for so when it comes to Linux",
    "start": "96439",
    "end": "102520"
  },
  {
    "text": "rooting maybe the goal is to get a root shell with the privilege of a root user but it's somehow it is meaningless when",
    "start": "102520",
    "end": "111240"
  },
  {
    "text": "we are doing Android routing because if we want a permanent root on Android devices maybe we should put the Su",
    "start": "111240",
    "end": "119320"
  },
  {
    "text": "binary on the system partition and then if we only have a ro shell then that",
    "start": "119320",
    "end": "125920"
  },
  {
    "text": "won't won't be enough in fact we need a kernel op read and write ability so you",
    "start": "125920",
    "end": "132239"
  },
  {
    "text": "know currently many Android devices um are protected by many protections or",
    "start": "132239",
    "end": "139599"
  },
  {
    "text": "mitigations from these vendors uh such like SE Linux or some protections that",
    "start": "139599",
    "end": "147319"
  },
  {
    "text": "uh even you are a root user you cannot run AR U binary files under specific folders",
    "start": "147319",
    "end": "154680"
  },
  {
    "text": "or you cannot remount the system partition then you cannot put the Su binary under it so these things are all",
    "start": "154680",
    "end": "162040"
  },
  {
    "text": "in the kernel so if we have a kernel object read and write ability then we can take all of them down and Achieve",
    "start": "162040",
    "end": "168680"
  },
  {
    "text": "our goal so the second question is that what vulnerabilities we need to do a root on",
    "start": "168680",
    "end": "177200"
  },
  {
    "text": "Android devices so here I list some some vulnerabilities in drivers on Android",
    "start": "177200",
    "end": "184879"
  },
  {
    "text": "devices all of them are found by King team members so we used to use these",
    "start": "184879",
    "end": "191360"
  },
  {
    "text": "vulnerabilities in our root tool to root Android devices but one problem is that",
    "start": "191360",
    "end": "197760"
  },
  {
    "text": "these vulnerabilities are all in the Linux oh sorry is all in the drivers so",
    "start": "197760",
    "end": "204440"
  },
  {
    "text": "maybe in ccom processors or Tigra or something like so these are not",
    "start": "204440",
    "end": "211280"
  },
  {
    "text": "Universal vulnerabilities in fact we need a universal applied bug then we can do a",
    "start": "211280",
    "end": "217599"
  },
  {
    "text": "universal root solution so we want to make a big deal so we want two things",
    "start": "217599",
    "end": "222959"
  },
  {
    "start": "220000",
    "end": "220000"
  },
  {
    "text": "one things that we want to need a universal applied bug in Linux kernos Source not in a specific driver or",
    "start": "222959",
    "end": "230720"
  },
  {
    "text": "something like that and the another things that we want to use the universal applied exploitation techniques which is",
    "start": "230720",
    "end": "238159"
  },
  {
    "text": "which can be applied for hundreds of thousands of android devices and we do",
    "start": "238159",
    "end": "243560"
  },
  {
    "text": "not need too much hard code we need one generic root exploit for all of these",
    "start": "243560",
    "end": "249120"
  },
  {
    "text": "Android devices so last year remember that there is a universal Root tour called Tower",
    "start": "249120",
    "end": "256120"
  },
  {
    "text": "route invented by so this year ping pong route is coming back from from King",
    "start": "256120",
    "end": "262440"
  },
  {
    "text": "team so let's start and in fact I I will I will talk talk about stories of of of",
    "start": "262440",
    "end": "269880"
  },
  {
    "text": "mine how I developed this uh root exploit and uh what difficulties I met",
    "start": "269880",
    "end": "276800"
  },
  {
    "text": "during this process and how I exchanged the ideas with my teammates and finally",
    "start": "276800",
    "end": "283039"
  },
  {
    "text": "achieved this goal so let's start the first part is about bug hunting so once",
    "start": "283039",
    "end": "290720"
  },
  {
    "start": "290000",
    "end": "290000"
  },
  {
    "text": "a Upon a Time so our team leader woi give me a zip fire and including",
    "start": "290720",
    "end": "298160"
  },
  {
    "text": "hundreds of you know know konel crashes in Linux konel so in fact he got these",
    "start": "298160",
    "end": "305120"
  },
  {
    "text": "crash logs from a non open source Cisco F called TR Trinity so everyone everyone",
    "start": "305120",
    "end": "312800"
  },
  {
    "text": "could get it online and um but it is based on the desktop Linux I mean so USI",
    "start": "312800",
    "end": "320199"
  },
  {
    "text": "customized it and puted it to the arm Linux and just executed on Android",
    "start": "320199",
    "end": "326479"
  },
  {
    "text": "devices and he it generated hundreds of Crash logs and he gave it give them to",
    "start": "326479",
    "end": "334039"
  },
  {
    "text": "me and my task is just to analyze analyz it and find something interesting",
    "start": "334039",
    "end": "340680"
  },
  {
    "text": "so here we are among these crash logs I found the interest one the colonel has a",
    "start": "340680",
    "end": "348319"
  },
  {
    "text": "critical page fot at 200200 so that's weird and you can see that the PC is in",
    "start": "348319",
    "end": "355720"
  },
  {
    "text": "function pin and hash so let's have a deeper discover Discovery so you can see",
    "start": "355720",
    "end": "364120"
  },
  {
    "text": "that the function pin and hash take up take SK as a variable and this argument",
    "start": "364120",
    "end": "370520"
  },
  {
    "text": "is a type of struct sock so in fact it is a socket object in kernel and you can",
    "start": "370520",
    "end": "377120"
  },
  {
    "text": "see that it is passed into the pin and hash so it is a pin socket object in the kernel and attackers can create such a",
    "start": "377120",
    "end": "385360"
  },
  {
    "text": "object in his user program by calling socket and a space specifying the you",
    "start": "385360",
    "end": "391240"
  },
  {
    "text": "know the icmp protocol so in fact the kernel crashes in the in that function",
    "start": "391240",
    "end": "397919"
  },
  {
    "text": "called H list new stale which I marked it with a red underline and because this",
    "start": "397919",
    "end": "404479"
  },
  {
    "text": "function is in line so if you only take a look in the um crash log you you",
    "start": "404479",
    "end": "410479"
  },
  {
    "text": "cannot know that where the exact location the crash happens so let's go into it and so so my my",
    "start": "410479",
    "end": "420560"
  },
  {
    "text": "first task is to find where this 2002 200 comes so that's weird so in fact",
    "start": "420560",
    "end": "426280"
  },
  {
    "text": "when I have a look at this this function and I know where this 200 200 comes from",
    "start": "426280",
    "end": "433400"
  },
  {
    "text": "so in fact the value of this predefined Con in kernel SCE list poison 2 is just",
    "start": "433400",
    "end": "440960"
  },
  {
    "text": "2200 and then you can see that when we first called the Ping and hash and the",
    "start": "440960",
    "end": "446919"
  },
  {
    "text": "the first called the HL news then you can see the pre previous member of this",
    "start": "446919",
    "end": "453199"
  },
  {
    "text": "node n will be set to the list poison to is just the 200 200 and if we call this",
    "start": "453199",
    "end": "460520"
  },
  {
    "text": "function again then you can go into the go into the that a function upper and",
    "start": "460520",
    "end": "467280"
  },
  {
    "text": "you can see that I marked the two you can see that the local variable P prep",
    "start": "467280",
    "end": "472960"
  },
  {
    "text": "is assigned by this previous member of this node n which is 200 200 and then",
    "start": "472960",
    "end": "478840"
  },
  {
    "text": "immediately there's a der reference on this on this local variable and then there's a deference on 200 200 and if we",
    "start": "478840",
    "end": "486000"
  },
  {
    "text": "will not map this value in u space then the kernel crashes with the critical",
    "start": "486000",
    "end": "491800"
  },
  {
    "text": "page fult right so here we got the root cause of this",
    "start": "491800",
    "end": "497319"
  },
  {
    "text": "vulnerability and we should try to uh find the approved concept of this",
    "start": "497319",
    "end": "503639"
  },
  {
    "text": "vulnerability so how could we make the the roads to this pin and hash function",
    "start": "503639",
    "end": "510440"
  },
  {
    "text": "so in fact it is interesting so you can see that the P andash function is called in function UDP disconnect but the udb",
    "start": "510440",
    "end": "519159"
  },
  {
    "text": "disconnect is called in in dagram Connect and with a special sa family",
    "start": "519159",
    "end": "526240"
  },
  {
    "text": "specified called AP unspec you you can see that the disconnect in kernel is called uh as you",
    "start": "526240",
    "end": "533800"
  },
  {
    "text": "call connect in the user program so that's interesting and here we are very",
    "start": "533800",
    "end": "540000"
  },
  {
    "text": "clear about this about this proof concept to uh reproduce this colel page",
    "start": "540000",
    "end": "547399"
  },
  {
    "text": "F we just create a socket by specifying the protocol as icmp and make two",
    "start": "547399",
    "end": "553399"
  },
  {
    "text": "connection connections to it with specifying the uh the sa family as AP",
    "start": "553399",
    "end": "560880"
  },
  {
    "text": "unspc then we got a crash so I stuck at this place for a",
    "start": "560880",
    "end": "567839"
  },
  {
    "text": "long time because I want to so the a local denial of service is not my goal I",
    "start": "567839",
    "end": "575440"
  },
  {
    "text": "want to uh achieve the rul so this is not enough so I stuck at this this place",
    "start": "575440",
    "end": "581120"
  },
  {
    "text": "and I want to manipulate the H list pointers to find something interesting but I failed at last so I turned my",
    "start": "581120",
    "end": "588360"
  },
  {
    "text": "interest to other crash logs for about two or three weeks then I found that",
    "start": "588360",
    "end": "593920"
  },
  {
    "text": "this one is the most hopeful one so I just turn back to it and I make some Tes",
    "start": "593920",
    "end": "600959"
  },
  {
    "start": "600000",
    "end": "600000"
  },
  {
    "text": "so in fact this time I map 200 200 in user space then I make two connections",
    "start": "600959",
    "end": "607200"
  },
  {
    "text": "then the kernel won't crash but you know I have a good programming habit I just",
    "start": "607200",
    "end": "614160"
  },
  {
    "text": "uh close all of these sockets before I quit my program but an interesting thing",
    "start": "614160",
    "end": "620880"
  },
  {
    "text": "is that the kernel crash When I close the socket object and I goes deep into",
    "start": "620880",
    "end": "626600"
  },
  {
    "text": "the source you can see that when I close a five descriptor in user space and the kernel will call inet release and then",
    "start": "626600",
    "end": "635040"
  },
  {
    "text": "there is a somehow like a V table of this socket object it is just called",
    "start": "635040",
    "end": "641360"
  },
  {
    "text": "Escape Pro and it is a array of the function pointers and when I close it",
    "start": "641360",
    "end": "646600"
  },
  {
    "text": "one of the fun function pointers called close will be invoked and then the kernel crash so I",
    "start": "646600",
    "end": "654440"
  },
  {
    "text": "realize that it is a typical use of free vulnerability maybe there you know",
    "start": "654440",
    "end": "659680"
  },
  {
    "text": "because the that skap Pro value has been corrupted and and let's see what",
    "start": "659680",
    "end": "667600"
  },
  {
    "text": "happened so in fact when I have a second view had a second view into the source",
    "start": "667600",
    "end": "674839"
  },
  {
    "text": "and then I found that immediately after the H list news there there is a function called which named as sofort",
    "start": "674839",
    "end": "683880"
  },
  {
    "text": "suput so if you are familiar with Linux kernel source you know that there are",
    "start": "683880",
    "end": "689839"
  },
  {
    "text": "some function called Blah Blah Blah put then it's just decrease the reference count of this object and if the",
    "start": "689839",
    "end": "696519"
  },
  {
    "text": "reference count of this object equals zero and then the kernel will free it",
    "start": "696519",
    "end": "701880"
  },
  {
    "text": "right so here we are if we map the 200 200 in user space and avoid the kernel",
    "start": "701880",
    "end": "709160"
  },
  {
    "text": "crash and then make two connections and then the kernel will free it but we have",
    "start": "709160",
    "end": "715680"
  },
  {
    "text": "a dling file descriptor associated with this pin socket object in the kernel in",
    "start": "715680",
    "end": "722120"
  },
  {
    "text": "the user program under our control right so this is a typical user free vulnerability in the kernel and it has a",
    "start": "722120",
    "end": "729480"
  },
  {
    "text": "CV number called CV 2015 3636 so here we are we have a use up",
    "start": "729480",
    "end": "737079"
  },
  {
    "text": "three vulnerability and in fact if we can control the content of the free the vulnerable pink socket object then we",
    "start": "737079",
    "end": "743920"
  },
  {
    "text": "can control the PC register by calling close",
    "start": "743920",
    "end": "749760"
  },
  {
    "text": "so next part I will talk about the exploitation of this vulnerability so first of all when when",
    "start": "751000",
    "end": "758000"
  },
  {
    "start": "757000",
    "end": "757000"
  },
  {
    "text": "it comes to use of free exploiting UF vulnerability the most critical issue",
    "start": "758000",
    "end": "763800"
  },
  {
    "text": "and annoying problem is the refilling so we must have the control of the free",
    "start": "763800",
    "end": "769399"
  },
  {
    "text": "vulnerable object that's critical so this time our T Target is this structure",
    "start": "769399",
    "end": "776000"
  },
  {
    "text": "sock socket object in kernel and and disappointedly it is allocated in a",
    "start": "776000",
    "end": "782560"
  },
  {
    "text": "custom use cache named ping so let's take a review of slab",
    "start": "782560",
    "end": "788839"
  },
  {
    "text": "cache so basically slap cache is is a kind of storage unit in kernel storing",
    "start": "788839",
    "end": "795480"
  },
  {
    "text": "objects of specific type so in fact he provide a separation between kernel",
    "start": "795480",
    "end": "801800"
  },
  {
    "text": "objects so these are the difficulties I meet When developing this root exploit",
    "start": "801800",
    "end": "809440"
  },
  {
    "start": "803000",
    "end": "803000"
  },
  {
    "text": "first the object is is allocated by slab allocator so the slab allocator provide",
    "start": "809440",
    "end": "815320"
  },
  {
    "text": "a separation between kernel objects so it is not very easy to use another type",
    "start": "815320",
    "end": "820560"
  },
  {
    "text": "of Kernel objects to override the vulnerable object it is somehow like the",
    "start": "820560",
    "end": "825760"
  },
  {
    "text": "isolate Heap in Internet Internet Explorer so the second thing is that the",
    "start": "825760",
    "end": "830959"
  },
  {
    "text": "candidate kernel object so we must find a controllable candidate object K object",
    "start": "830959",
    "end": "836040"
  },
  {
    "text": "to do the override because we cannot directly allocating or deallocating the",
    "start": "836040",
    "end": "841800"
  },
  {
    "text": "Kent object so this is another issue and the third thing is that we must overcome",
    "start": "841800",
    "end": "848000"
  },
  {
    "text": "the multi threading support of the kernel because you know when your attack",
    "start": "848000",
    "end": "853720"
  },
  {
    "text": "program is executing there are hundreds of active tasks",
    "start": "853720",
    "end": "858800"
  },
  {
    "text": "running simultaneously scheduled on the core so they will have impact on the layout of",
    "start": "858800",
    "end": "866720"
  },
  {
    "text": "the kernel Hep so that's another problem and the final problem is that we must",
    "start": "866720",
    "end": "871959"
  },
  {
    "text": "control the content of the vulnerable free object so but we do not have a string in the kernel right so that's for",
    "start": "871959",
    "end": "880800"
  },
  {
    "text": "difficulty difficulties I conclude so my initial plan is to use",
    "start": "880800",
    "end": "887880"
  },
  {
    "start": "886000",
    "end": "886000"
  },
  {
    "text": "the K Malik buffer so I think k k Malik buffer is somehow the stram in Linux",
    "start": "887880",
    "end": "894320"
  },
  {
    "text": "kernel so K Malo buffer is exist in hundreds of flows in Linux kernel and in",
    "start": "894320",
    "end": "902720"
  },
  {
    "text": "fact it has several choices on sizes you you cannot specify any kind of choice",
    "start": "902720",
    "end": "908920"
  },
  {
    "text": "you like just most of them are powers of two so you have K Malo",
    "start": "908920",
    "end": "915079"
  },
  {
    "text": "10028 buffer you have kallo 256 buffer something like that and how to create it",
    "start": "915079",
    "end": "922839"
  },
  {
    "text": "so uh here I recommend a choice there is a k buffer allocated in process of send",
    "start": "922839",
    "end": "930600"
  },
  {
    "text": "message which is also used in Tower rots so basically in Tower roots and Jal use",
    "start": "930600",
    "end": "937199"
  },
  {
    "text": "this um buffer to override initialized stack memory but if the size is large",
    "start": "937199",
    "end": "945360"
  },
  {
    "text": "enough then konel won't put the buffer on the stack but instead use kog to allo",
    "start": "945360",
    "end": "951600"
  },
  {
    "text": "allocate an area and put the data into it and if we use the send message we can",
    "start": "951600",
    "end": "957279"
  },
  {
    "text": "control the size because the size is just the length of the control message you want to transfer via send message",
    "start": "957279",
    "end": "964519"
  },
  {
    "text": "and the content is also controlled by us so my initial intuitive idea is to",
    "start": "964519",
    "end": "973720"
  },
  {
    "start": "968000",
    "end": "968000"
  },
  {
    "text": "use Kim buffer to override the vulnerable objects I just want to you",
    "start": "973720",
    "end": "979199"
  },
  {
    "text": "know spray the vulnerable objects and free all of them and maybe the slabs",
    "start": "979199",
    "end": "984240"
  },
  {
    "text": "storing these vulnerable objects will be recycled by the kernel for future",
    "start": "984240",
    "end": "989279"
  },
  {
    "text": "allocation and I hope that this era will be used to storing the kall buffer later",
    "start": "989279",
    "end": "996920"
  },
  {
    "text": "when I spray in the kall buffer but this this plan is out of control and it has",
    "start": "996920",
    "end": "1003720"
  },
  {
    "text": "a really quite low success rate so I want to improve this so basically I'm",
    "start": "1003720",
    "end": "1011480"
  },
  {
    "start": "1008000",
    "end": "1008000"
  },
  {
    "text": "write I was writing my first root exploit targeting this vulnerability on",
    "start": "1011480",
    "end": "1016920"
  },
  {
    "text": "goldfish which is a en emulator and on this emulator the size",
    "start": "1016920",
    "end": "1022519"
  },
  {
    "text": "of the vulnerable object pink socket object is 512 which is a k maloc size",
    "start": "1022519",
    "end": "1030839"
  },
  {
    "text": "so here I want to say that the slap allocator helps us so the newly adopted",
    "start": "1030839",
    "end": "1037000"
  },
  {
    "text": "slub allocators try to merge different objects of the same size into one cache",
    "start": "1037000",
    "end": "1042678"
  },
  {
    "text": "instead of the same type so it's just give us an opportunity to use the kallo",
    "start": "1042679",
    "end": "1049960"
  },
  {
    "text": "buffer to override the vulnerable objects so if the size of the vulnerable",
    "start": "1049960",
    "end": "1055320"
  },
  {
    "text": "object is 512 then I can use send message to allocate kallo buffers to",
    "start": "1055320",
    "end": "1060840"
  },
  {
    "text": "override it so I'm excited I finished the EXP exploit on emulator and I told",
    "start": "1060840",
    "end": "1067160"
  },
  {
    "text": "this result to my colleague Le and he told me that you should try to test your exploits on uh some other Android",
    "start": "1067160",
    "end": "1074520"
  },
  {
    "text": "devices real Android devices and disappointedly I found that the size of the pink socket objects 100 varies on",
    "start": "1074520",
    "end": "1082080"
  },
  {
    "text": "different Android devices and maybe on this Android devices of ssung the size",
    "start": "1082080",
    "end": "1087600"
  },
  {
    "text": "of the pink socket object is 576 and another Android devices of Sony",
    "start": "1087600",
    "end": "1093760"
  },
  {
    "text": "maybe the size of the pink socket object is is uh over 600 so you cannot use the",
    "start": "1093760",
    "end": "1101880"
  },
  {
    "text": "K Malo 52 buffer to override all of them and my goal is to achieve a universal",
    "start": "1101880",
    "end": "1108799"
  },
  {
    "text": "generic root exploit for hundreds of android devices so that's not the final",
    "start": "1108799",
    "end": "1114880"
  },
  {
    "text": "plan we use so here's our final plan the first part of our Universal",
    "start": "1114880",
    "end": "1121400"
  },
  {
    "text": "solution is to control the kernel memory so in fact I stuck at this place",
    "start": "1121400",
    "end": "1128400"
  },
  {
    "text": "also for a long time and you know I like reading academic paper and there's a academic paper called return to dur and",
    "start": "1128400",
    "end": "1136000"
  },
  {
    "text": "he used fist map to buy pass kernel protections like SM or",
    "start": "1136000",
    "end": "1142960"
  },
  {
    "text": "smap but a mine appeared in my there's a",
    "start": "1142960",
    "end": "1148600"
  },
  {
    "text": "idea an idea appeared in my mind that could I use the fist map to help exploit",
    "start": "1148600",
    "end": "1155600"
  },
  {
    "text": "us of free vulnerabilities in the kernel so let's take a look at the fist map so",
    "start": "1155600",
    "end": "1162120"
  },
  {
    "text": "fist map also called directly map memory is just a mechanism which map the",
    "start": "1162120",
    "end": "1168799"
  },
  {
    "text": "directly map the memory in user space into the kernel space for promoting the",
    "start": "1168799",
    "end": "1173840"
  },
  {
    "text": "efficiency of the kernel so you you can take a look at this picture and in the fist map all of these pages are",
    "start": "1173840",
    "end": "1180360"
  },
  {
    "text": "physically continuous so here's my idea I want to",
    "start": "1180360",
    "end": "1186440"
  },
  {
    "start": "1185000",
    "end": "1185000"
  },
  {
    "text": "use the fist map to do the overwriting not not that the fist map is",
    "start": "1186440",
    "end": "1192240"
  },
  {
    "text": "not a kernel object so it has its own Advantage so how to create a f map you",
    "start": "1192240",
    "end": "1199880"
  },
  {
    "text": "it is very easy you you can an attacker just iteratively call M map and then map",
    "start": "1199880",
    "end": "1208200"
  },
  {
    "text": "of a size of 256 megabytes and fill in the proper",
    "start": "1208200",
    "end": "1213960"
  },
  {
    "text": "payload he want for the following rout exploit so the fist map will with the",
    "start": "1213960",
    "end": "1220039"
  },
  {
    "text": "our payload will grow in a kernel W",
    "start": "1220039",
    "end": "1225120"
  },
  {
    "text": "while occupying the freed memory and we hope that the this map will use the the",
    "start": "1225120",
    "end": "1231000"
  },
  {
    "text": "space once occupied by the vulnerable pink sock sock objects for his expand",
    "start": "1231000",
    "end": "1240400"
  },
  {
    "text": "expandation so here we are so first thing is that uh",
    "start": "1240400",
    "end": "1249320"
  },
  {
    "text": "we want to make sure that the F map can cover the slap caches so we can take a",
    "start": "1249320",
    "end": "1254440"
  },
  {
    "text": "look at the size of the face map and for example on arm 32 and the fist map has a",
    "start": "1254440",
    "end": "1261720"
  },
  {
    "text": "size of uh 76 MB and it is large enough to",
    "start": "1261720",
    "end": "1267480"
  },
  {
    "text": "cover the slap caches so here is the first thing and",
    "start": "1267480",
    "end": "1274840"
  },
  {
    "text": "uh so my initial plan is to allocate",
    "start": "1274840",
    "end": "1280520"
  },
  {
    "start": "1275000",
    "end": "1275000"
  },
  {
    "text": "allocate a large amounts of vulnerable pink socket objects and then I free all",
    "start": "1280520",
    "end": "1287320"
  },
  {
    "text": "of them and I use iteratively called M map and hopes that the fist map will",
    "start": "1287320",
    "end": "1295320"
  },
  {
    "text": "make some memory collisions with these free slab caches which one store the",
    "start": "1295320",
    "end": "1303279"
  },
  {
    "text": "vulnerable pink socket object but in fact if you try this and the success",
    "start": "1303279",
    "end": "1309600"
  },
  {
    "text": "rate is still not very high so let's move to the second step we",
    "start": "1309600",
    "end": "1315960"
  },
  {
    "text": "want a reliability so if we want to achieve a reliable",
    "start": "1315960",
    "end": "1323200"
  },
  {
    "start": "1320000",
    "end": "1320000"
  },
  {
    "text": "memory Collis we must make some changes in fact this time I want to spray the",
    "start": "1323200",
    "end": "1330120"
  },
  {
    "text": "vulnerable pink socket objects in group so every five pin socket objects which I",
    "start": "1330120",
    "end": "1338679"
  },
  {
    "text": "consider them as the normal ones I just free them by closing it then I allocate",
    "start": "1338679",
    "end": "1345039"
  },
  {
    "text": "one vulnerable pin socket object you know so every every group 500 normal one",
    "start": "1345039",
    "end": "1351279"
  },
  {
    "text": "and one vulnerable one so why I do this because I want to make sure that the",
    "start": "1351279",
    "end": "1357760"
  },
  {
    "text": "pink socket object the vulnerable pink socket objects are are placed everywhere",
    "start": "1357760",
    "end": "1363799"
  },
  {
    "text": "in the kernel space and then that sharply increase the probabilties that",
    "start": "1363799",
    "end": "1370240"
  },
  {
    "text": "the fist map and the vulnerable ping socket objects will meet together and after after I write",
    "start": "1370240",
    "end": "1378520"
  },
  {
    "text": "achieved exploits based on this idea the success rate in sharply",
    "start": "1378520",
    "end": "1385279"
  },
  {
    "text": "increased but in fact I do not want to throw a dice I want to definitely know",
    "start": "1385279",
    "end": "1391080"
  },
  {
    "text": "that there are vulnerable pink socket objects already covered by fist map so",
    "start": "1391080",
    "end": "1397080"
  },
  {
    "text": "here's the thir step create an information leakage so in fact we found",
    "start": "1397080",
    "end": "1404360"
  },
  {
    "text": "an info leak we can call IO control on that pink socket object in the user",
    "start": "1404360",
    "end": "1410880"
  },
  {
    "text": "program with a with specifying this this",
    "start": "1410880",
    "end": "1417600"
  },
  {
    "text": "timestamps options you know then you can get a dword value from this pink socket",
    "start": "1417600",
    "end": "1424039"
  },
  {
    "text": "object and then if if once we iterative M map and fill in our proper payload we",
    "start": "1424039",
    "end": "1432279"
  },
  {
    "text": "need for the root exploit we also need to fill in some magic value I call so",
    "start": "1432279",
    "end": "1438799"
  },
  {
    "text": "then when I will when I am do the spraying in each stage I will I will",
    "start": "1438799",
    "end": "1444480"
  },
  {
    "text": "control on these vulnerable objects and then I will get the return value from this iio control and if it's just equals",
    "start": "1444480",
    "end": "1453240"
  },
  {
    "text": "to the magic value or correctly reflect the magic value once I filled in that",
    "start": "1453240",
    "end": "1459640"
  },
  {
    "text": "means this vulnerable object has already been covered by F map and I got it so",
    "start": "1459640",
    "end": "1466679"
  },
  {
    "text": "this information leakage also helps improve the reliability of",
    "start": "1466679",
    "end": "1472960"
  },
  {
    "text": "our root solution so let's let's make a summary",
    "start": "1472960",
    "end": "1478000"
  },
  {
    "text": "so first we spray our pin socket objects in group every 500 normal ones with one",
    "start": "1478000",
    "end": "1485000"
  },
  {
    "text": "vulnerable ones and we freed all of them but for normal ones we just close it",
    "start": "1485000",
    "end": "1490399"
  },
  {
    "text": "releasing them normally but for the vulnerable when we trigger the use off fre vulnerability and the these objects",
    "start": "1490399",
    "end": "1498039"
  },
  {
    "text": "will be freed and make a large free spaces in in a kernel and then we hope",
    "start": "1498039",
    "end": "1505200"
  },
  {
    "text": "they will be used for the growth of the Fist map with our payload and then we",
    "start": "1505200",
    "end": "1512559"
  },
  {
    "text": "iteratively call and map we do the fist map spraying and filling the payload you",
    "start": "1512559",
    "end": "1518679"
  },
  {
    "text": "know the the addresses we need when for the following root exploited also the",
    "start": "1518679",
    "end": "1525799"
  },
  {
    "text": "magic values I mentioned before and then at each stage we call control on the pin",
    "start": "1525799",
    "end": "1531520"
  },
  {
    "text": "socket objects that 5 descriptor we own in user program and then we check the",
    "start": "1531520",
    "end": "1537320"
  },
  {
    "text": "return return value and if one vulnerable object is already being covered then the spring just",
    "start": "1537320",
    "end": "1544799"
  },
  {
    "text": "stopped so in fact I've presented uh not just a root explo",
    "start": "1545080",
    "end": "1553159"
  },
  {
    "start": "1546000",
    "end": "1546000"
  },
  {
    "text": "targeting um our use this vulnerability but uh generate memory",
    "start": "1553159",
    "end": "1560159"
  },
  {
    "text": "memory Collision model targeting us of free vulnerabilities in Linux kernel",
    "start": "1560159",
    "end": "1566279"
  },
  {
    "text": "so this scheme this plan overcomes the difficulties I mentioned before and it",
    "start": "1566279",
    "end": "1573520"
  },
  {
    "text": "is hard to mitigate it because I use the inherent property of Linux kernel",
    "start": "1573520",
    "end": "1580159"
  },
  {
    "text": "because the fist map is just the mechanism of the of the memory management of Linux kernel and it always",
    "start": "1580159",
    "end": "1586840"
  },
  {
    "text": "occupies the space place in the in the kernel and if there is the the memory is",
    "start": "1586840",
    "end": "1593440"
  },
  {
    "text": "free then there is probability that this memory will be for the growth of the",
    "start": "1593440",
    "end": "1599679"
  },
  {
    "text": "Fist map with the data in the user space right so it is an excellent plan",
    "start": "1599679",
    "end": "1606840"
  },
  {
    "text": "targeting us fre vulnerabilities in Linux kernels this is the point key",
    "start": "1606840",
    "end": "1613279"
  },
  {
    "text": "point I want to mention so here we are if we control the",
    "start": "1613279",
    "end": "1618360"
  },
  {
    "start": "1616000",
    "end": "1616000"
  },
  {
    "text": "content of the free the vulnerable pin socket objects then we control the PC",
    "start": "1618360",
    "end": "1624000"
  },
  {
    "text": "register right so because the skap pro the virtual address of skap pro this uh",
    "start": "1624000",
    "end": "1631039"
  },
  {
    "text": "so-called arrays of function pointers is controlled by us then we we can just",
    "start": "1631039",
    "end": "1636520"
  },
  {
    "text": "control the P PC register and then return to the Shell Code in the user line so what does Shell Code",
    "start": "1636520",
    "end": "1644760"
  },
  {
    "start": "1643000",
    "end": "1643000"
  },
  {
    "text": "do so jul told us this again in his Tower rout so in fact the Shell Code",
    "start": "1644760",
    "end": "1651799"
  },
  {
    "text": "need two two things first it should leak the kernel stack address and when we got",
    "start": "1651799",
    "end": "1658200"
  },
  {
    "text": "the kernel stack address then we got the address of the S info and if we got the",
    "start": "1658200",
    "end": "1663399"
  },
  {
    "text": "address of the S info then we can patch override the addr limit of the current",
    "start": "1663399",
    "end": "1668519"
  },
  {
    "text": "thread of our um representing our attack program the override this ADR limit to",
    "start": "1668519",
    "end": "1676960"
  },
  {
    "text": "zero and we got the kernel arbitary read and WR abilities through",
    "start": "1676960",
    "end": "1683039"
  },
  {
    "text": "pipe so here we are so I've presented",
    "start": "1683559",
    "end": "1688640"
  },
  {
    "text": "the root exploit for the 32bit Android devices already but back to our goal we",
    "start": "1688640",
    "end": "1697240"
  },
  {
    "text": "want to achieve the universal root solution and there are 64-bit Android devices on market now so what about",
    "start": "1697240",
    "end": "1705640"
  },
  {
    "text": "64-bit Android devices does the bug exist",
    "start": "1705640",
    "end": "1711600"
  },
  {
    "start": "1708000",
    "end": "1708000"
  },
  {
    "text": "yes so does the list Po and two also",
    "start": "1711600",
    "end": "1717640"
  },
  {
    "text": "have the value of 200 200 so this is a serious problem because uh when when",
    "start": "1717640",
    "end": "1724360"
  },
  {
    "text": "when our team want to exploit the 64bit devices I I just propose guess that the",
    "start": "1724360",
    "end": "1732240"
  },
  {
    "text": "maybe the L point in two won't be cannot be mapped on 64bit Android devices but",
    "start": "1732240",
    "end": "1739799"
  },
  {
    "text": "surprisingly this time not disappointedly the its value is also",
    "start": "1739799",
    "end": "1745440"
  },
  {
    "text": "200200 and that can be mapped and could I achieve the memory",
    "start": "1745440",
    "end": "1751840"
  },
  {
    "text": "collision between the fist map and the vulnerable objects and the answer is yes",
    "start": "1751840",
    "end": "1758279"
  },
  {
    "text": "after we doing some experiments in Practical so in fact although the 64bit",
    "start": "1758279",
    "end": "1767159"
  },
  {
    "text": "Android devices has a larger you know virtual address space but the but the",
    "start": "1767159",
    "end": "1773240"
  },
  {
    "text": "memory of the ram ram the size of the ram is uh limited and you know the",
    "start": "1773240",
    "end": "1780240"
  },
  {
    "text": "Collision will finally happen on and uh 64bit Android devices also and then the",
    "start": "1780240",
    "end": "1788000"
  },
  {
    "text": "last issue is that could we just uh simply return to the to the Shell Code",
    "start": "1788000",
    "end": "1794559"
  },
  {
    "text": "played in the user space and you know for some s some devices like S6 or sxh",
    "start": "1794559",
    "end": "1800880"
  },
  {
    "text": "you you cannot do that because pxn is applied so we have to so the first thing",
    "start": "1800880",
    "end": "1808279"
  },
  {
    "start": "1803000",
    "end": "1803000"
  },
  {
    "text": "I up in my mind is could I just return to the fist map you know we can place",
    "start": "1808279",
    "end": "1813559"
  },
  {
    "text": "our sh in the user space and um change the property of the memory to executable",
    "start": "1813559",
    "end": "1819880"
  },
  {
    "text": "and then they will be mapped through fist map into the kernel space and then we can just return to the kernel space",
    "start": "1819880",
    "end": "1826039"
  },
  {
    "text": "but disappointedly again and the the fist map is not",
    "start": "1826039",
    "end": "1831559"
  },
  {
    "text": "executable on on devices on Android devices so we have to do the RO kernel",
    "start": "1831559",
    "end": "1838240"
  },
  {
    "text": "Ro so the kernel R has have two St stages the first stage is to construct a",
    "start": "1838240",
    "end": "1845399"
  },
  {
    "text": "r chain and leak the kernel stack address and the second R chain is to",
    "start": "1845399",
    "end": "1852880"
  },
  {
    "text": "just override the ADR limit to zero but uh a pity what a Pity is that",
    "start": "1852880",
    "end": "1860760"
  },
  {
    "text": "we have to do some hard code here that is because if we haven't achieve the",
    "start": "1860760",
    "end": "1866679"
  },
  {
    "text": "kernel OPP read and write ability we cannot uh search the kernel memory and",
    "start": "1866679",
    "end": "1872519"
  },
  {
    "text": "find the gadgets we want so we have to dump the room ROM and put it into ID and",
    "start": "1872519",
    "end": "1879880"
  },
  {
    "text": "find the gadgets and we have to hard code for every types of ROMs so here is",
    "start": "1879880",
    "end": "1885919"
  },
  {
    "text": "the things that we should which is not very Universal in this Universal",
    "start": "1885919",
    "end": "1892399"
  },
  {
    "text": "solution so in fact my my teammates so",
    "start": "1892399",
    "end": "1898159"
  },
  {
    "start": "1893000",
    "end": "1893000"
  },
  {
    "text": "at first I I finished an R CH compromising the Sansung",
    "start": "1898159",
    "end": "1903399"
  },
  {
    "text": "S5 and then I then you know I I'm turned",
    "start": "1903399",
    "end": "1909120"
  },
  {
    "text": "to some other work and my teammate QB uh he continues my work and write write",
    "start": "1909120",
    "end": "1915200"
  },
  {
    "text": "more R chance for different Android devices and they say that",
    "start": "1915200",
    "end": "1920480"
  },
  {
    "text": "disappointedly my kind of attack uh cannot work very well and have certain",
    "start": "1920480",
    "end": "1926840"
  },
  {
    "text": "failure rate on some devices so in fact Q be re reite my R chain in fact he",
    "start": "1926840",
    "end": "1935559"
  },
  {
    "text": "preferred jop instead of r o the reason is that if we if we use ROP",
    "start": "1935559",
    "end": "1944320"
  },
  {
    "text": "in kernel then we we couldn't avoid the stack privating and but you know the",
    "start": "1944320",
    "end": "1949880"
  },
  {
    "text": "kernel will schedule the each every task and if if the stack address is the stack",
    "start": "1949880",
    "end": "1957120"
  },
  {
    "text": "value is corrupted then the kernel will be crashed and bring some",
    "start": "1957120",
    "end": "1962720"
  },
  {
    "text": "unexpected uh results so we should use JP we just jump jump jump J and jump and",
    "start": "1962720",
    "end": "1968760"
  },
  {
    "text": "finally achieve our goal we cannot crop the stack value so here are some tips so",
    "start": "1968760",
    "end": "1976880"
  },
  {
    "text": "basically you you should make full use of the the value of the registers when",
    "start": "1976880",
    "end": "1982760"
  },
  {
    "text": "you're invoking that fun corrupted function pointers at the beginning of",
    "start": "1982760",
    "end": "1988360"
  },
  {
    "text": "the r chain you should make use of these values of the current values of the",
    "start": "1988360",
    "end": "1993440"
  },
  {
    "text": "regesters and another thing that if you are in the exploiting uh 64bit Android",
    "start": "1993440",
    "end": "2000600"
  },
  {
    "text": "devices the high 32 bits of the of the of a virtual address in the kernel space",
    "start": "2000600",
    "end": "2006639"
  },
  {
    "text": "remain the same so if you find a gadget that just read or right the low 32",
    "start": "2006639",
    "end": "2013960"
  },
  {
    "text": "bits of the virtual address of a kernel virtu address then that will be helpful",
    "start": "2013960",
    "end": "2019880"
  },
  {
    "text": "and in fact we found some gold Gadgets in some",
    "start": "2019880",
    "end": "2025279"
  },
  {
    "text": "ROMs uh and we only use this one Gadget and we can achieve two steps we can",
    "start": "2025279",
    "end": "2031679"
  },
  {
    "text": "combine the two step leakage and over overriding into one and then maybe left",
    "start": "2031679",
    "end": "2038000"
  },
  {
    "text": "to you guys to find find it so here we are with the help of the with the help",
    "start": "2038000",
    "end": "2046320"
  },
  {
    "start": "2043000",
    "end": "2043000"
  },
  {
    "text": "of our my teammates um James fwn and QB and with",
    "start": "2046320",
    "end": "2052040"
  },
  {
    "text": "the vulnerability from whoi finally uh we achieve uh a universal rot",
    "start": "2052040",
    "end": "2059520"
  },
  {
    "text": "solution and we can Lage at to most popular Android devices on Market uh oh",
    "start": "2059520",
    "end": "2068320"
  },
  {
    "text": "by the way the version should be higher than 4.3 and also we have the first 64bit",
    "start": "2068320",
    "end": "2076280"
  },
  {
    "text": "Android Root case in the world as we aware and we just released our R",
    "start": "2076280",
    "end": "2084158"
  },
  {
    "text": "solution targeting samung Galaxy S6 and X S6 age on XDA fors and I heard from my",
    "start": "2084159",
    "end": "2093638"
  },
  {
    "text": "colleagues that um are already over 300 100,000 people downloading it and rot",
    "start": "2093639",
    "end": "2101480"
  },
  {
    "text": "their de Android devices and here's a piece of",
    "start": "2101480",
    "end": "2107400"
  },
  {
    "text": "demo so here is a Galaxy S6 and you can see that we clicked our",
    "start": "2108800",
    "end": "2116920"
  },
  {
    "text": "Lo solution and it will first install the Super SU and then the superu is installed",
    "start": "2116920",
    "end": "2126359"
  },
  {
    "text": "okay but the super The Prompt says that super say that there is no se binary on your system paration so the device",
    "start": "2129079",
    "end": "2135839"
  },
  {
    "text": "hasn't been rooted so we just run our root exploit",
    "start": "2135839",
    "end": "2141520"
  },
  {
    "text": "packet in the Android in a Android application and then the our root",
    "start": "2141520",
    "end": "2149040"
  },
  {
    "text": "exploit is finished and we reboot the device and wait a minute",
    "start": "2149040",
    "end": "2158240"
  },
  {
    "text": "you can see the logo it is a Galaxy",
    "start": "2158240",
    "end": "2162079"
  },
  {
    "text": "S6 and then the phone is booted",
    "start": "2182680",
    "end": "2188200"
  },
  {
    "text": "and then we just open an",
    "start": "2188200",
    "end": "2192760"
  },
  {
    "text": "application we open an application which needs the super user privilege and you",
    "start": "2194280",
    "end": "2199839"
  },
  {
    "text": "can see that the Super SU prompt and say that would you like to give the um root",
    "start": "2199839",
    "end": "2206319"
  },
  {
    "text": "privilege to that application and that means we achieve a permanent root on this Android devices and the",
    "start": "2206319",
    "end": "2216240"
  },
  {
    "text": "and in fact in fact um based on the research of James f um actually We R the",
    "start": "2220119",
    "end": "2227119"
  },
  {
    "text": "the S some devices without corrupting the war warranty bit so yeah so but the",
    "start": "2227119",
    "end": "2235280"
  },
  {
    "text": "details of the details of that are not included in in my talk",
    "start": "2235280",
    "end": "2243079"
  },
  {
    "text": "so so finally I will talk about the future of Android routing so I think 64",
    "start": "2243480",
    "end": "2251000"
  },
  {
    "start": "2250000",
    "end": "2250000"
  },
  {
    "text": "Android devices could be more secure yes so the first thing is that",
    "start": "2251000",
    "end": "2257359"
  },
  {
    "text": "you know when when I reported this bug to the Linux uh Community some of the",
    "start": "2257359",
    "end": "2264960"
  },
  {
    "text": "guys complaining that why this less point two the value of less point two on",
    "start": "2264960",
    "end": "2270000"
  },
  {
    "text": "Android devices is set as 20000 for",
    "start": "2270000",
    "end": "2275440"
  },
  {
    "text": "64 Android devices so that's not an intelligent choice I think because on",
    "start": "2275440",
    "end": "2281720"
  },
  {
    "text": "the desktop Linux PC I mean every distrib distribution of Linux PC on",
    "start": "2281720",
    "end": "2289040"
  },
  {
    "text": "desktop the value of list point two is that value that follow with uh 12 O's so",
    "start": "2289040",
    "end": "2298960"
  },
  {
    "text": "you know the 64bit processors currently only use 48 bit for addressing and this",
    "start": "2298960",
    "end": "2306040"
  },
  {
    "text": "this address cannot be mapped definitely and if I cannot map it map this list",
    "start": "2306040",
    "end": "2312599"
  },
  {
    "text": "point two then kernel will crash and I cannot go um arrive at the stock pot set",
    "start": "2312599",
    "end": "2319200"
  },
  {
    "text": "free location so another thing that we can prevent the memory cision with fist",
    "start": "2319200",
    "end": "2325280"
  },
  {
    "text": "map maybe we can make some separation between the F map because this fmap are",
    "start": "2325280",
    "end": "2332400"
  },
  {
    "text": "containing the data from the user space for promoting the efficiency we we you",
    "start": "2332400",
    "end": "2337560"
  },
  {
    "text": "can separate them from the data in the kernel I mean so that's another choice",
    "start": "2337560",
    "end": "2343240"
  },
  {
    "text": "and the second thing is about maybe we can employ the ks ASR which should not",
    "start": "2343240",
    "end": "2349160"
  },
  {
    "text": "employ in current Android devices yeah so so I think the days become harder for",
    "start": "2349160",
    "end": "2355960"
  },
  {
    "text": "the next phoners but when there is a a protections appear appearing then we",
    "start": "2355960",
    "end": "2364359"
  },
  {
    "text": "have we may try harder and have some cter measures on to attack against them",
    "start": "2364359",
    "end": "2371160"
  },
  {
    "text": "and bypass them and then we can improve the the community to uh make their uh",
    "start": "2371160",
    "end": "2380560"
  },
  {
    "text": "improve the security of the of like lindex to make it more secure and have a",
    "start": "2380560",
    "end": "2387680"
  },
  {
    "text": "more strong security support oh At Last I want to mention",
    "start": "2387680",
    "end": "2395640"
  },
  {
    "start": "2393000",
    "end": "2393000"
  },
  {
    "text": "that in this talk super Pon nominations were leveraged one is about USI for the",
    "start": "2395640",
    "end": "2402079"
  },
  {
    "text": "lifetime achievement and he and just uh gives um",
    "start": "2402079",
    "end": "2408720"
  },
  {
    "text": "didn't stop giving the bugs to to the other members of King team and support",
    "start": "2408720",
    "end": "2415720"
  },
  {
    "text": "King team go ahead and another thing that about our ping pong route the universal rot",
    "start": "2415720",
    "end": "2422359"
  },
  {
    "text": "Solutions is selected as the nominees of privilege escalation and I also used the",
    "start": "2422359",
    "end": "2428960"
  },
  {
    "text": "um a basic result an important result from retain to dur which is uh selected",
    "start": "2428960",
    "end": "2436520"
  },
  {
    "text": "as a nominees of uh most Innovative research but disappointedly all of these",
    "start": "2436520",
    "end": "2444760"
  },
  {
    "text": "three fell in Last At Last so yeah so",
    "start": "2444760",
    "end": "2450440"
  },
  {
    "text": "hope us good luck next year here's the acknowledgement",
    "start": "2450440",
    "end": "2457880"
  },
  {
    "start": "2455000",
    "end": "2455000"
  },
  {
    "text": "so uh thanks to whoi James F and Leo C also known as QB for their contributions",
    "start": "2457880",
    "end": "2465079"
  },
  {
    "text": "to our root product yeah and thanks to L slipper and",
    "start": "2465079",
    "end": "2471319"
  },
  {
    "text": "Peter from kingon for their Inspirations on me and the pictures is",
    "start": "2471319",
    "end": "2478040"
  },
  {
    "text": "from comes from Google so thank you all and questions are",
    "start": "2478040",
    "end": "2483520"
  },
  {
    "text": "welcome thank you he",
    "start": "2483520",
    "end": "2490440"
  }
]