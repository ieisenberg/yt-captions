[
  {
    "text": "foreign",
    "start": "4200",
    "end": "6799"
  },
  {
    "text": "the title of a talk is soft7",
    "start": "7740",
    "end": "10920"
  },
  {
    "text": "revealing the secrets of the Siemens S7",
    "start": "10920",
    "end": "13799"
  },
  {
    "text": "plcs",
    "start": "13799",
    "end": "15660"
  },
  {
    "text": "this is Joint work with Professor Eric",
    "start": "15660",
    "end": "18119"
  },
  {
    "text": "BM and three of her students",
    "start": "18119",
    "end": "21140"
  },
  {
    "text": "maximbarsky idanraz and Alon dankner who",
    "start": "21140",
    "end": "25140"
  },
  {
    "text": "is here with me",
    "start": "25140",
    "end": "26939"
  },
  {
    "text": "we are all from the faculty of computer",
    "start": "26939",
    "end": "28980"
  },
  {
    "text": "science in the technion Israel Institute",
    "start": "28980",
    "end": "31679"
  },
  {
    "text": "of Technology",
    "start": "31679",
    "end": "34399"
  },
  {
    "text": "my name is Sarah bachan I'm the founder",
    "start": "35840",
    "end": "39360"
  },
  {
    "text": "of c and CEO of cyclog that provides",
    "start": "39360",
    "end": "42899"
  },
  {
    "text": "secure system design and audit services",
    "start": "42899",
    "end": "46320"
  },
  {
    "text": "I'm also a senior researcher at the",
    "start": "46320",
    "end": "49140"
  },
  {
    "text": "technion hiruchi fujiara cyber security",
    "start": "49140",
    "end": "51539"
  },
  {
    "text": "Research Center",
    "start": "51539",
    "end": "53760"
  },
  {
    "text": "my name is Alan dagner I'm a security",
    "start": "53760",
    "end": "56520"
  },
  {
    "text": "researcher and the decline graduate",
    "start": "56520",
    "end": "60559"
  },
  {
    "text": "Simmons S7 pocs are certainly the most",
    "start": "62579",
    "end": "66420"
  },
  {
    "text": "researched and attacked ones",
    "start": "66420",
    "end": "68820"
  },
  {
    "text": "the reason is twofold ubiquitous",
    "start": "68820",
    "end": "71760"
  },
  {
    "text": "deployment in critical facilities",
    "start": "71760",
    "end": "74520"
  },
  {
    "text": "and the vendor Siemens set a high",
    "start": "74520",
    "end": "77580"
  },
  {
    "text": "security standard in fact it was the",
    "start": "77580",
    "end": "81659"
  },
  {
    "text": "first ICS vendor to integrate",
    "start": "81659",
    "end": "83580"
  },
  {
    "text": "cryptographic protections on its plcs",
    "start": "83580",
    "end": "87420"
  },
  {
    "text": "so here's a quick history of malicious",
    "start": "87420",
    "end": "90000"
  },
  {
    "text": "Squad execution on Siemens S7 pocs",
    "start": "90000",
    "end": "94200"
  },
  {
    "text": "the first to do it was the infamous",
    "start": "94200",
    "end": "96900"
  },
  {
    "text": "stuxnet worm discovered in 2010",
    "start": "96900",
    "end": "100979"
  },
  {
    "text": "it exploited the vulnerability in",
    "start": "100979",
    "end": "103439"
  },
  {
    "text": "Siemens Windows software to inject raw",
    "start": "103439",
    "end": "106740"
  },
  {
    "text": "control program to the plc",
    "start": "106740",
    "end": "109140"
  },
  {
    "text": "and tamper with the HMI outputs",
    "start": "109140",
    "end": "112860"
  },
  {
    "text": "this was before Siemens security",
    "start": "112860",
    "end": "114899"
  },
  {
    "text": "enhancement and was actually triggered",
    "start": "114899",
    "end": "117960"
  },
  {
    "text": "to it",
    "start": "117960",
    "end": "119399"
  },
  {
    "text": "in rock 7 the work we presented here in",
    "start": "119399",
    "end": "123360"
  },
  {
    "text": "2019 we came up with the Rogue",
    "start": "123360",
    "end": "126600"
  },
  {
    "text": "engineering station python script it's",
    "start": "126600",
    "end": "129899"
  },
  {
    "text": "exploited vulnerabilities in the S7",
    "start": "129899",
    "end": "132180"
  },
  {
    "text": "protocol to perform stress injection of",
    "start": "132180",
    "end": "135900"
  },
  {
    "text": "an unauthorized control program to an S7",
    "start": "135900",
    "end": "138900"
  },
  {
    "text": "1500",
    "start": "138900",
    "end": "140640"
  },
  {
    "text": "we also find out that all the PLC from",
    "start": "140640",
    "end": "144060"
  },
  {
    "text": "the same model and firmware version use",
    "start": "144060",
    "end": "146879"
  },
  {
    "text": "the same key pair",
    "start": "146879",
    "end": "149160"
  },
  {
    "text": "in the same year at Blackhawk London",
    "start": "149160",
    "end": "151940"
  },
  {
    "text": "Abasi and his team exploited the",
    "start": "151940",
    "end": "154620"
  },
  {
    "text": "vulnerability in the S7 1200 bootloader",
    "start": "154620",
    "end": "158099"
  },
  {
    "text": "and demonstrated arbitrary toward",
    "start": "158099",
    "end": "160860"
  },
  {
    "text": "execution",
    "start": "160860",
    "end": "162180"
  },
  {
    "text": "they were also the first to find out",
    "start": "162180",
    "end": "165120"
  },
  {
    "text": "that the S7 plcs are using the Adonis",
    "start": "165120",
    "end": "168360"
  },
  {
    "text": "killer",
    "start": "168360",
    "end": "169739"
  },
  {
    "text": "in 2021 Cal current from Clarity",
    "start": "169739",
    "end": "173599"
  },
  {
    "text": "exploited vulnerability in Siemens",
    "start": "173599",
    "end": "176280"
  },
  {
    "text": "memory management to escape the control",
    "start": "176280",
    "end": "178920"
  },
  {
    "text": "program sandbox and go to remote code",
    "start": "178920",
    "end": "182160"
  },
  {
    "text": "arbitrary code execution in the Adonis",
    "start": "182160",
    "end": "184920"
  },
  {
    "text": "kernel",
    "start": "184920",
    "end": "186540"
  },
  {
    "text": "our current work takes the capability to",
    "start": "186540",
    "end": "190080"
  },
  {
    "text": "run native code on the PLC and create a",
    "start": "190080",
    "end": "193080"
  },
  {
    "text": "rogue PLC a few steps forward",
    "start": "193080",
    "end": "197220"
  },
  {
    "text": "remember the Purdue model with the PLC",
    "start": "197220",
    "end": "200459"
  },
  {
    "text": "communication is restricted only to the",
    "start": "200459",
    "end": "203819"
  },
  {
    "text": "planet local HMI and Engineering station",
    "start": "203819",
    "end": "208140"
  },
  {
    "text": "well you can start forgetting it",
    "start": "208140",
    "end": "211819"
  },
  {
    "text": "Industries 4-0",
    "start": "211819",
    "end": "214200"
  },
  {
    "text": "and the digital transformation",
    "start": "214200",
    "end": "216659"
  },
  {
    "text": "of changing the ICS architecture model",
    "start": "216659",
    "end": "220080"
  },
  {
    "text": "new architectures are emerging with the",
    "start": "220080",
    "end": "223319"
  },
  {
    "text": "PLC communicates through a service bus",
    "start": "223319",
    "end": "226200"
  },
  {
    "text": "that might reside in the internet with",
    "start": "226200",
    "end": "229560"
  },
  {
    "text": "other ICS components part of which must",
    "start": "229560",
    "end": "232799"
  },
  {
    "text": "might also be scattered in the internet",
    "start": "232799",
    "end": "237080"
  },
  {
    "text": "so smart manufacturing brings forward",
    "start": "238019",
    "end": "241500"
  },
  {
    "text": "new PLC requirements they are required",
    "start": "241500",
    "end": "245519"
  },
  {
    "text": "to run integrated development",
    "start": "245519",
    "end": "247379"
  },
  {
    "text": "environment they're required to support",
    "start": "247379",
    "end": "249840"
  },
  {
    "text": "new communication protocol and even",
    "start": "249840",
    "end": "252299"
  },
  {
    "text": "perform extensive Cloud communication",
    "start": "252299",
    "end": "255799"
  },
  {
    "text": "hence the vendor must be agile and",
    "start": "255799",
    "end": "259320"
  },
  {
    "text": "flexible",
    "start": "259320",
    "end": "260459"
  },
  {
    "text": "yet they must preserve existing ipn",
    "start": "260459",
    "end": "264000"
  },
  {
    "text": "technology and cannot start from scratch",
    "start": "264000",
    "end": "267720"
  },
  {
    "text": "so the solution the vendors came up with",
    "start": "267720",
    "end": "270840"
  },
  {
    "text": "are the software plc",
    "start": "270840",
    "end": "273780"
  },
  {
    "text": "this is a POC that contains a VM it runs",
    "start": "273780",
    "end": "278520"
  },
  {
    "text": "a general purpose OS",
    "start": "278520",
    "end": "281040"
  },
  {
    "text": "mostly we've seen windows but some are",
    "start": "281040",
    "end": "283560"
  },
  {
    "text": "running Linux",
    "start": "283560",
    "end": "285000"
  },
  {
    "text": "now the fact that the standard OS is",
    "start": "285000",
    "end": "287460"
  },
  {
    "text": "running on the PLC CPU leads to the",
    "start": "287460",
    "end": "290340"
  },
  {
    "text": "usage of the standard CPU",
    "start": "290340",
    "end": "293060"
  },
  {
    "text": "another VM runs the PLC code which",
    "start": "293060",
    "end": "297419"
  },
  {
    "text": "usually runs on the vendors proprietary",
    "start": "297419",
    "end": "300380"
  },
  {
    "text": "operating system",
    "start": "300380",
    "end": "303000"
  },
  {
    "text": "as we have two",
    "start": "303000",
    "end": "305100"
  },
  {
    "text": "operating system running on the same CPU",
    "start": "305100",
    "end": "308160"
  },
  {
    "text": "the general purpose and the proprietary",
    "start": "308160",
    "end": "311520"
  },
  {
    "text": "and they are running a virtualized",
    "start": "311520",
    "end": "314600"
  },
  {
    "text": "sandboxes and the virtualization is",
    "start": "314600",
    "end": "317940"
  },
  {
    "text": "implemented by hypervisor or vmm in",
    "start": "317940",
    "end": "322020"
  },
  {
    "text": "Simmons case the CPU the PLC is using is",
    "start": "322020",
    "end": "326100"
  },
  {
    "text": "an internal a multi-core where a Windows",
    "start": "326100",
    "end": "330300"
  },
  {
    "text": "embedded OS is using three of the cores",
    "start": "330300",
    "end": "333620"
  },
  {
    "text": "and the fourth score is used by Siemens",
    "start": "333620",
    "end": "337199"
  },
  {
    "text": "proprietary operating system which runs",
    "start": "337199",
    "end": "340380"
  },
  {
    "text": "the plc",
    "start": "340380",
    "end": "343100"
  },
  {
    "text": "thank you",
    "start": "344160",
    "end": "345320"
  },
  {
    "text": "Simmons 82 200 SP open controller it",
    "start": "345320",
    "end": "350699"
  },
  {
    "text": "seems version of the software puc",
    "start": "350699",
    "end": "353220"
  },
  {
    "text": "it is a software version of the S7 1500",
    "start": "353220",
    "end": "357660"
  },
  {
    "text": "it was introduced to the market at 2015.",
    "start": "357660",
    "end": "362400"
  },
  {
    "text": "now virtualization brings with its",
    "start": "362400",
    "end": "365820"
  },
  {
    "text": "significant operational advantages for",
    "start": "365820",
    "end": "369600"
  },
  {
    "text": "example you can update the windows and",
    "start": "369600",
    "end": "373020"
  },
  {
    "text": "when it is restarted or even when",
    "start": "373020",
    "end": "376620"
  },
  {
    "text": "Windows receive a blue screen of death",
    "start": "376620",
    "end": "379080"
  },
  {
    "text": "the PLC continues to run without",
    "start": "379080",
    "end": "382020"
  },
  {
    "text": "interruption since it runs it runs in a",
    "start": "382020",
    "end": "385139"
  },
  {
    "text": "separate VM",
    "start": "385139",
    "end": "387139"
  },
  {
    "text": "Siemens have also used virtualization to",
    "start": "387139",
    "end": "390780"
  },
  {
    "text": "prefer separation of communication and",
    "start": "390780",
    "end": "393720"
  },
  {
    "text": "to decrease the attack surface of the",
    "start": "393720",
    "end": "395759"
  },
  {
    "text": "PSC code",
    "start": "395759",
    "end": "397080"
  },
  {
    "text": "in the new architecture the PLC",
    "start": "397080",
    "end": "399900"
  },
  {
    "text": "communicates only with the field devices",
    "start": "399900",
    "end": "402560"
  },
  {
    "text": "all the communication with the upper",
    "start": "402560",
    "end": "405600"
  },
  {
    "text": "layers of the Purdue model that contains",
    "start": "405600",
    "end": "407819"
  },
  {
    "text": "the AG mind engineering as a station and",
    "start": "407819",
    "end": "411780"
  },
  {
    "text": "might also reside in the cloud is",
    "start": "411780",
    "end": "414360"
  },
  {
    "text": "performed by the windows VM",
    "start": "414360",
    "end": "417440"
  },
  {
    "text": "the device that we've tested is CPU 1515",
    "start": "417440",
    "end": "421560"
  },
  {
    "text": "SP",
    "start": "421560",
    "end": "424100"
  },
  {
    "text": "now let me take you backwards to about",
    "start": "426060",
    "end": "429720"
  },
  {
    "text": "six years ago before we started our",
    "start": "429720",
    "end": "433139"
  },
  {
    "text": "Rogue 7 research",
    "start": "433139",
    "end": "435300"
  },
  {
    "text": "our first intention Regional intention",
    "start": "435300",
    "end": "438500"
  },
  {
    "text": "was to attempt a vulnerability search on",
    "start": "438500",
    "end": "442560"
  },
  {
    "text": "the S7 1500 firmware",
    "start": "442560",
    "end": "445380"
  },
  {
    "text": "at that stage we found out that it was",
    "start": "445380",
    "end": "448259"
  },
  {
    "text": "encrypted",
    "start": "448259",
    "end": "449759"
  },
  {
    "text": "and we couldn't construct the plain text",
    "start": "449759",
    "end": "452940"
  },
  {
    "text": "firmware from the plc so we fell back to",
    "start": "452940",
    "end": "457139"
  },
  {
    "text": "protocol reverse engineering and the",
    "start": "457139",
    "end": "459120"
  },
  {
    "text": "result was our Rogue 7 research",
    "start": "459120",
    "end": "462120"
  },
  {
    "text": "when we learned about the new software",
    "start": "462120",
    "end": "464639"
  },
  {
    "text": "PLC and the new architecture we thought",
    "start": "464639",
    "end": "467220"
  },
  {
    "text": "okay let's give it another shot",
    "start": "467220",
    "end": "470759"
  },
  {
    "text": "and as we started our Quest towards the",
    "start": "470759",
    "end": "473460"
  },
  {
    "text": "Siemens PLC plain text firmware",
    "start": "473460",
    "end": "477360"
  },
  {
    "text": "now when the PLC boots",
    "start": "477360",
    "end": "480419"
  },
  {
    "text": "it immediately enters the windows VM a",
    "start": "480419",
    "end": "484740"
  },
  {
    "text": "jailed environment and all we can see is",
    "start": "484740",
    "end": "487080"
  },
  {
    "text": "the Windows screen",
    "start": "487080",
    "end": "488880"
  },
  {
    "text": "so our first attempt was to run a",
    "start": "488880",
    "end": "492120"
  },
  {
    "text": "different operating system on the POC",
    "start": "492120",
    "end": "495060"
  },
  {
    "text": "Hardware",
    "start": "495060",
    "end": "496020"
  },
  {
    "text": "so we brought our own discounted",
    "start": "496020",
    "end": "499199"
  },
  {
    "text": "container Ubuntu and we tried to run it",
    "start": "499199",
    "end": "502080"
  },
  {
    "text": "on the plc",
    "start": "502080",
    "end": "504120"
  },
  {
    "text": "and surprise we successfully run Ubuntu",
    "start": "504120",
    "end": "508139"
  },
  {
    "text": "on the PLC Hardware",
    "start": "508139",
    "end": "511580"
  },
  {
    "text": "Ubuntu we found that there are five",
    "start": "512120",
    "end": "515479"
  },
  {
    "text": "partitions in the PLC internal memory",
    "start": "515479",
    "end": "519539"
  },
  {
    "text": "we found that sdo1 contains the Windows",
    "start": "519539",
    "end": "523320"
  },
  {
    "text": "File system and also the grab files and",
    "start": "523320",
    "end": "526800"
  },
  {
    "text": "the hypervisor binaries and there are",
    "start": "526800",
    "end": "529560"
  },
  {
    "text": "other four partitions in the internal",
    "start": "529560",
    "end": "531600"
  },
  {
    "text": "memory for example that contains some",
    "start": "531600",
    "end": "533580"
  },
  {
    "text": "other stuff for example SDA 5 contains",
    "start": "533580",
    "end": "537060"
  },
  {
    "text": "the cement project file",
    "start": "537060",
    "end": "540560"
  },
  {
    "text": "by analyzing the grab files we found",
    "start": "541800",
    "end": "545580"
  },
  {
    "text": "that the hypervisor is running in two",
    "start": "545580",
    "end": "548100"
  },
  {
    "text": "stages at the first stage the hypervisor",
    "start": "548100",
    "end": "551519"
  },
  {
    "text": "configured the PLC Hardware at the",
    "start": "551519",
    "end": "554100"
  },
  {
    "text": "second stage",
    "start": "554100",
    "end": "555600"
  },
  {
    "text": "it loads two virtual machine the first",
    "start": "555600",
    "end": "559620"
  },
  {
    "text": "virtual machine contains when those",
    "start": "559620",
    "end": "563160"
  },
  {
    "text": "and the second virtual machine is loaded",
    "start": "563160",
    "end": "566519"
  },
  {
    "text": "from a",
    "start": "566519",
    "end": "568760"
  },
  {
    "text": "cpu.alpha that contains the mysterious",
    "start": "568760",
    "end": "572160"
  },
  {
    "text": "software CPU",
    "start": "572160",
    "end": "574080"
  },
  {
    "text": "in an encrypted phone",
    "start": "574080",
    "end": "576720"
  },
  {
    "text": "hence",
    "start": "576720",
    "end": "578700"
  },
  {
    "text": "We Gather the tests PLC software",
    "start": "578700",
    "end": "582000"
  },
  {
    "text": "architecture is a vmm and hypervisors",
    "start": "582000",
    "end": "585839"
  },
  {
    "text": "that runs on top of the hardware and it",
    "start": "585839",
    "end": "588540"
  },
  {
    "text": "runs 2vm one VM runs the windows",
    "start": "588540",
    "end": "591120"
  },
  {
    "text": "embedded operating system and the second",
    "start": "591120",
    "end": "593519"
  },
  {
    "text": "VM runs this Mysterio software CPU",
    "start": "593519",
    "end": "597680"
  },
  {
    "text": "from our analysis of the grab",
    "start": "597680",
    "end": "600240"
  },
  {
    "text": "configuration fund we also figured out",
    "start": "600240",
    "end": "602640"
  },
  {
    "text": "the CPU load sequence the excuse me the",
    "start": "602640",
    "end": "606480"
  },
  {
    "text": "open controller boot sequence so after",
    "start": "606480",
    "end": "609959"
  },
  {
    "text": "the BIOS is running the a grab",
    "start": "609959",
    "end": "612720"
  },
  {
    "text": "bootloader is running the transde first",
    "start": "612720",
    "end": "616140"
  },
  {
    "text": "stage of the hypervisor configures the",
    "start": "616140",
    "end": "618300"
  },
  {
    "text": "hardware the second stage it will",
    "start": "618300",
    "end": "620459"
  },
  {
    "text": "hypervisor the clothes the 2vm the",
    "start": "620459",
    "end": "623459"
  },
  {
    "text": "embedded windows that communicates with",
    "start": "623459",
    "end": "626279"
  },
  {
    "text": "the HDMI engineering station and",
    "start": "626279",
    "end": "629220"
  },
  {
    "text": "optionally with Cloud platform and the",
    "start": "629220",
    "end": "632399"
  },
  {
    "text": "software CPU that communicates with the",
    "start": "632399",
    "end": "635940"
  },
  {
    "text": "field devices",
    "start": "635940",
    "end": "638779"
  },
  {
    "text": "surprisingly at this stage we found out",
    "start": "639620",
    "end": "642420"
  },
  {
    "text": "that the vml binaries the grab",
    "start": "642420",
    "end": "645720"
  },
  {
    "text": "configuration and the cpu.l size are",
    "start": "645720",
    "end": "649500"
  },
  {
    "text": "also accessible from Windows the",
    "start": "649500",
    "end": "652500"
  },
  {
    "text": "implication is that an administrator",
    "start": "652500",
    "end": "655920"
  },
  {
    "text": "that has read write privileges of course",
    "start": "655920",
    "end": "659100"
  },
  {
    "text": "on all the file system can read those",
    "start": "659100",
    "end": "662820"
  },
  {
    "text": "five and can even write and uh his own",
    "start": "662820",
    "end": "667680"
  },
  {
    "text": "software the software PLC files or a",
    "start": "667680",
    "end": "672060"
  },
  {
    "text": "Crypts of the PSC files or change the",
    "start": "672060",
    "end": "675540"
  },
  {
    "text": "grub and the hypervisor binaries",
    "start": "675540",
    "end": "680160"
  },
  {
    "text": "now that we had access to the",
    "start": "680160",
    "end": "682640"
  },
  {
    "text": "hypervisor's boundaries we searched for",
    "start": "682640",
    "end": "685620"
  },
  {
    "text": "the part in the hypervisor the clothes",
    "start": "685620",
    "end": "689339"
  },
  {
    "text": "the plain text",
    "start": "689339",
    "end": "692040"
  },
  {
    "text": "binary of the poc2 memory",
    "start": "692040",
    "end": "696480"
  },
  {
    "text": "so we did it by reverse engineering the",
    "start": "696480",
    "end": "700200"
  },
  {
    "text": "hypervisor binary specifically the",
    "start": "700200",
    "end": "702899"
  },
  {
    "text": "second stage of the hypervisor",
    "start": "702899",
    "end": "706160"
  },
  {
    "text": "now looking at the binaries we found out",
    "start": "706160",
    "end": "709680"
  },
  {
    "text": "that hypervisor is looking for a",
    "start": "709680",
    "end": "712560"
  },
  {
    "text": "specific magic at the beginning of the",
    "start": "712560",
    "end": "715560"
  },
  {
    "text": "uh encrypted the software CPU file which",
    "start": "715560",
    "end": "720000"
  },
  {
    "text": "is the S3 Magic",
    "start": "720000",
    "end": "721980"
  },
  {
    "text": "now we tampered with this magic and got",
    "start": "721980",
    "end": "725459"
  },
  {
    "text": "an error message that said that the POC",
    "start": "725459",
    "end": "728700"
  },
  {
    "text": "failed to load the its firmware",
    "start": "728700",
    "end": "732420"
  },
  {
    "text": "looking at the binaries we found this",
    "start": "732420",
    "end": "735600"
  },
  {
    "text": "error message and before it we found the",
    "start": "735600",
    "end": "740040"
  },
  {
    "text": "call to the decryption function so we",
    "start": "740040",
    "end": "743339"
  },
  {
    "text": "now have the part in the code that calls",
    "start": "743339",
    "end": "745680"
  },
  {
    "text": "the the equipment function the decrypts",
    "start": "745680",
    "end": "748920"
  },
  {
    "text": "the PLC firmware in memory",
    "start": "748920",
    "end": "753320"
  },
  {
    "text": "now once we go to the decryption",
    "start": "753660",
    "end": "756899"
  },
  {
    "text": "function we started to try and reverse",
    "start": "756899",
    "end": "759959"
  },
  {
    "text": "engineering and understand what the",
    "start": "759959",
    "end": "762060"
  },
  {
    "text": "decryption function is performing but we",
    "start": "762060",
    "end": "764639"
  },
  {
    "text": "found that the code is very",
    "start": "764639",
    "end": "766079"
  },
  {
    "text": "sophisticated and we understood that",
    "start": "766079",
    "end": "769139"
  },
  {
    "text": "static code analysis is not enough to uh",
    "start": "769139",
    "end": "772260"
  },
  {
    "text": "reverse the decryption we needed a",
    "start": "772260",
    "end": "775019"
  },
  {
    "text": "dynamic code analysis namely we needed a",
    "start": "775019",
    "end": "777480"
  },
  {
    "text": "debugger now consider that the PLC is",
    "start": "777480",
    "end": "780480"
  },
  {
    "text": "running in a hardened restricted",
    "start": "780480",
    "end": "782880"
  },
  {
    "text": "environment Siemens removed some of the",
    "start": "782880",
    "end": "785220"
  },
  {
    "text": "functionality from the hypervisor",
    "start": "785220",
    "end": "788519"
  },
  {
    "text": "so we could not install our own debugger",
    "start": "788519",
    "end": "790920"
  },
  {
    "text": "in the PLC hardened environment",
    "start": "790920",
    "end": "794220"
  },
  {
    "text": "so we came up with our own primitive yet",
    "start": "794220",
    "end": "798360"
  },
  {
    "text": "very effective debugger we simply we",
    "start": "798360",
    "end": "801779"
  },
  {
    "text": "found out that in3 is connected to the",
    "start": "801779",
    "end": "804420"
  },
  {
    "text": "CPU debug interrupt Handler",
    "start": "804420",
    "end": "807060"
  },
  {
    "text": "and this Handler creates a dump of all",
    "start": "807060",
    "end": "809399"
  },
  {
    "text": "the registers and the memory so we",
    "start": "809399",
    "end": "812100"
  },
  {
    "text": "simply inserted in three to places in",
    "start": "812100",
    "end": "815339"
  },
  {
    "text": "the code we wanted to break and examine",
    "start": "815339",
    "end": "817740"
  },
  {
    "text": "the content of the registers and the",
    "start": "817740",
    "end": "819660"
  },
  {
    "text": "memory",
    "start": "819660",
    "end": "821279"
  },
  {
    "text": "using our N3 debugger we found the",
    "start": "821279",
    "end": "824639"
  },
  {
    "text": "runtime call to the decryption function",
    "start": "824639",
    "end": "826680"
  },
  {
    "text": "its argument in the local variability",
    "start": "826680",
    "end": "829500"
  },
  {
    "text": "allocates on stack",
    "start": "829500",
    "end": "832139"
  },
  {
    "text": "the arguments in the local variable",
    "start": "832139",
    "end": "834540"
  },
  {
    "text": "includes pointer to the ciphertext and",
    "start": "834540",
    "end": "838200"
  },
  {
    "text": "the clear text of the CPU elf and we",
    "start": "838200",
    "end": "841079"
  },
  {
    "text": "could see the contents of the the memory",
    "start": "841079",
    "end": "845279"
  },
  {
    "text": "pointed by the spontaneous in memory",
    "start": "845279",
    "end": "849420"
  },
  {
    "text": "so this was a very frustrating stage in",
    "start": "849420",
    "end": "853260"
  },
  {
    "text": "the research for us we had the",
    "start": "853260",
    "end": "856200"
  },
  {
    "text": "plaintiffs of the firmware in memory but",
    "start": "856200",
    "end": "858600"
  },
  {
    "text": "we could not export it from the POC to",
    "start": "858600",
    "end": "861420"
  },
  {
    "text": "analyze it it's like we found ourselves",
    "start": "861420",
    "end": "864480"
  },
  {
    "text": "in front of a locked wall in a secure",
    "start": "864480",
    "end": "867300"
  },
  {
    "text": "room with cctvs and motion detectors all",
    "start": "867300",
    "end": "870420"
  },
  {
    "text": "over the place and all we had is a tiny",
    "start": "870420",
    "end": "873540"
  },
  {
    "text": "screwdriver namely our N3 debugger",
    "start": "873540",
    "end": "878040"
  },
  {
    "text": "we knew that with enough effort in time",
    "start": "878040",
    "end": "881220"
  },
  {
    "text": "we could lock the standard the the vault",
    "start": "881220",
    "end": "884519"
  },
  {
    "text": "in the standard common way",
    "start": "884519",
    "end": "886560"
  },
  {
    "text": "but we decided to think out of the box",
    "start": "886560",
    "end": "889260"
  },
  {
    "text": "go completely nuts and who knows we",
    "start": "889260",
    "end": "891899"
  },
  {
    "text": "might get lucky and it will simply work",
    "start": "891899",
    "end": "894120"
  },
  {
    "text": "over or even turn out to be much easier",
    "start": "894120",
    "end": "898199"
  },
  {
    "text": "so here's what we've done",
    "start": "898199",
    "end": "902399"
  },
  {
    "text": "excuse me for a moment",
    "start": "902399",
    "end": "904320"
  },
  {
    "text": "okay",
    "start": "904320",
    "end": "907040"
  },
  {
    "text": "okay taking a frustration to innovation",
    "start": "913139",
    "end": "917699"
  },
  {
    "text": "you ready",
    "start": "917699",
    "end": "920240"
  },
  {
    "text": "I'm ready",
    "start": "921120",
    "end": "923779"
  },
  {
    "text": "hey can we successfully moved the ball",
    "start": "946880",
    "end": "950220"
  },
  {
    "text": "from the TLC restricted environment to",
    "start": "950220",
    "end": "953639"
  },
  {
    "text": "our own powerful attack environment",
    "start": "953639",
    "end": "955800"
  },
  {
    "text": "which is based on Linux but the vault is",
    "start": "955800",
    "end": "959519"
  },
  {
    "text": "still up so I give you a loan I have to",
    "start": "959519",
    "end": "962880"
  },
  {
    "text": "rock",
    "start": "962880",
    "end": "964560"
  },
  {
    "text": "thank you sir",
    "start": "964560",
    "end": "967459"
  },
  {
    "text": "so our idea was to run the vmm",
    "start": "976740",
    "end": "982199"
  },
  {
    "text": "or parts of it in an environment that is",
    "start": "982199",
    "end": "985500"
  },
  {
    "text": "easier to debug that allows us to",
    "start": "985500",
    "end": "988560"
  },
  {
    "text": "produce output and mainly that allows us",
    "start": "988560",
    "end": "992279"
  },
  {
    "text": "to export the plain text binary from the",
    "start": "992279",
    "end": "995339"
  },
  {
    "text": "vmm",
    "start": "995339",
    "end": "996480"
  },
  {
    "text": "we just couldn't do it directly on the",
    "start": "996480",
    "end": "999060"
  },
  {
    "text": "PLC itself",
    "start": "999060",
    "end": "1001339"
  },
  {
    "text": "now the vmm is an x86 binary so it may",
    "start": "1001339",
    "end": "1005959"
  },
  {
    "text": "seem straightforward to run it but there",
    "start": "1005959",
    "end": "1008540"
  },
  {
    "text": "are several challenges that must be",
    "start": "1008540",
    "end": "1010519"
  },
  {
    "text": "addressed",
    "start": "1010519",
    "end": "1012079"
  },
  {
    "text": "first the vmm runs in hypervisor mode",
    "start": "1012079",
    "end": "1015560"
  },
  {
    "text": "and we wanted to run it in user mode",
    "start": "1015560",
    "end": "1019279"
  },
  {
    "text": "second the vmm has its own kernel and",
    "start": "1019279",
    "end": "1022820"
  },
  {
    "text": "libraries while a standard Linux has",
    "start": "1022820",
    "end": "1025520"
  },
  {
    "text": "libsy",
    "start": "1025520",
    "end": "1027260"
  },
  {
    "text": "to address these challenges",
    "start": "1027260",
    "end": "1029780"
  },
  {
    "text": "we use Dynamic binary instrumentation",
    "start": "1029780",
    "end": "1033260"
  },
  {
    "text": "we used it to start the execution of the",
    "start": "1033260",
    "end": "1036438"
  },
  {
    "text": "vmm from a specific location",
    "start": "1036439",
    "end": "1039438"
  },
  {
    "text": "to add our code wherever we wanted and",
    "start": "1039439",
    "end": "1043100"
  },
  {
    "text": "replace vmm functions with our own",
    "start": "1043100",
    "end": "1046160"
  },
  {
    "text": "function",
    "start": "1046160",
    "end": "1048500"
  },
  {
    "text": "we chose Intel pin as our binary",
    "start": "1048500",
    "end": "1051400"
  },
  {
    "text": "instrumentation tool it is typically",
    "start": "1051400",
    "end": "1054020"
  },
  {
    "text": "used for performance analysis and",
    "start": "1054020",
    "end": "1056120"
  },
  {
    "text": "Architectural studies but we used it for",
    "start": "1056120",
    "end": "1059000"
  },
  {
    "text": "our purposes that is to unlock the vault",
    "start": "1059000",
    "end": "1064120"
  },
  {
    "text": "foreign",
    "start": "1065120",
    "end": "1067299"
  },
  {
    "text": "starts to run",
    "start": "1067299",
    "end": "1069200"
  },
  {
    "text": "it loads the binary of the vmm to the",
    "start": "1069200",
    "end": "1072500"
  },
  {
    "text": "memory",
    "start": "1072500",
    "end": "1073400"
  },
  {
    "text": "and replaces the vmm functions with",
    "start": "1073400",
    "end": "1076520"
  },
  {
    "text": "libsy functions using hooking",
    "start": "1076520",
    "end": "1080059"
  },
  {
    "text": "we placed another Rook inside where we",
    "start": "1080059",
    "end": "1082880"
  },
  {
    "text": "identified as the decryption Loop",
    "start": "1082880",
    "end": "1085700"
  },
  {
    "text": "the decryption Loop takes a block of",
    "start": "1085700",
    "end": "1087679"
  },
  {
    "text": "ciphertext the crypts and the compresses",
    "start": "1087679",
    "end": "1090620"
  },
  {
    "text": "it and we added a curve for a function",
    "start": "1090620",
    "end": "1093440"
  },
  {
    "text": "that exports the plain text to a file",
    "start": "1093440",
    "end": "1098320"
  },
  {
    "text": "Intel pin starts running the vmm from",
    "start": "1098840",
    "end": "1102140"
  },
  {
    "text": "the vmm entry point but we don't want to",
    "start": "1102140",
    "end": "1105020"
  },
  {
    "text": "run the initialization or the first",
    "start": "1105020",
    "end": "1107360"
  },
  {
    "text": "stages of the vmm we want to go directly",
    "start": "1107360",
    "end": "1110539"
  },
  {
    "text": "to the decryption",
    "start": "1110539",
    "end": "1112820"
  },
  {
    "text": "therefore on the first instruction",
    "start": "1112820",
    "end": "1116600"
  },
  {
    "text": "we use a hook to hijack the control from",
    "start": "1116600",
    "end": "1120080"
  },
  {
    "text": "the vmm and transfer it to our decrypter",
    "start": "1120080",
    "end": "1125059"
  },
  {
    "text": "but before we jump to the decryption",
    "start": "1125059",
    "end": "1127640"
  },
  {
    "text": "entry point we need to prepare the",
    "start": "1127640",
    "end": "1129980"
  },
  {
    "text": "environment",
    "start": "1129980",
    "end": "1132080"
  },
  {
    "text": "to work correctly",
    "start": "1132080",
    "end": "1133880"
  },
  {
    "text": "the function must receive the correct",
    "start": "1133880",
    "end": "1136700"
  },
  {
    "text": "set of arguments",
    "start": "1136700",
    "end": "1139280"
  },
  {
    "text": "the second argument RSI is a pointer to",
    "start": "1139280",
    "end": "1143360"
  },
  {
    "text": "the encrypted software CPU",
    "start": "1143360",
    "end": "1146059"
  },
  {
    "text": "our seeks points to a buffer that is",
    "start": "1146059",
    "end": "1149120"
  },
  {
    "text": "used for the plain text",
    "start": "1149120",
    "end": "1151640"
  },
  {
    "text": "now we also Point RSP to the beginning",
    "start": "1151640",
    "end": "1155360"
  },
  {
    "text": "of a large buffer we created",
    "start": "1155360",
    "end": "1158179"
  },
  {
    "text": "and this is interesting because the vmm",
    "start": "1158179",
    "end": "1161059"
  },
  {
    "text": "actually uses this buffer as a stack",
    "start": "1161059",
    "end": "1166480"
  },
  {
    "text": "after we prepare the environment",
    "start": "1167900",
    "end": "1170500"
  },
  {
    "text": "we redirect the control straight to the",
    "start": "1170500",
    "end": "1174140"
  },
  {
    "text": "decryption entry point",
    "start": "1174140",
    "end": "1177280"
  },
  {
    "text": "at some point of the execution we may",
    "start": "1177620",
    "end": "1180380"
  },
  {
    "text": "encounter a call for a vmm function like",
    "start": "1180380",
    "end": "1182900"
  },
  {
    "text": "vmm Arlo",
    "start": "1182900",
    "end": "1185419"
  },
  {
    "text": "instead of jumping to the original",
    "start": "1185419",
    "end": "1187220"
  },
  {
    "text": "function we use the hook we placed",
    "start": "1187220",
    "end": "1190039"
  },
  {
    "text": "earlier to jump to malloc",
    "start": "1190039",
    "end": "1193940"
  },
  {
    "text": "eventually",
    "start": "1193940",
    "end": "1195980"
  },
  {
    "text": "the vmm reaches the decryption Loop that",
    "start": "1195980",
    "end": "1199160"
  },
  {
    "text": "the crypts and decompresses the software",
    "start": "1199160",
    "end": "1201799"
  },
  {
    "text": "CPU block by block",
    "start": "1201799",
    "end": "1204740"
  },
  {
    "text": "for each block",
    "start": "1204740",
    "end": "1206480"
  },
  {
    "text": "we call the rightf function that writes",
    "start": "1206480",
    "end": "1210559"
  },
  {
    "text": "the buffer that contains the plain text",
    "start": "1210559",
    "end": "1212480"
  },
  {
    "text": "to a new file",
    "start": "1212480",
    "end": "1215799"
  },
  {
    "text": "so with an iteration of the decryption",
    "start": "1217880",
    "end": "1221360"
  },
  {
    "text": "Loop we write another plain text block",
    "start": "1221360",
    "end": "1224299"
  },
  {
    "text": "to the file and this is how we build the",
    "start": "1224299",
    "end": "1228500"
  },
  {
    "text": "decrypted software CPU",
    "start": "1228500",
    "end": "1231260"
  },
  {
    "text": "at the end of the decryption Loop we",
    "start": "1231260",
    "end": "1234320"
  },
  {
    "text": "actually get a legal L file and you can",
    "start": "1234320",
    "end": "1237500"
  },
  {
    "text": "see some of the elf segments in the",
    "start": "1237500",
    "end": "1239600"
  },
  {
    "text": "slide",
    "start": "1239600",
    "end": "1241900"
  },
  {
    "text": "now let's see a demo of our decrypter",
    "start": "1244100",
    "end": "1249280"
  },
  {
    "text": "the vmm directory contains the binary of",
    "start": "1249559",
    "end": "1252440"
  },
  {
    "text": "the vmm and the encrypted software CPU",
    "start": "1252440",
    "end": "1255140"
  },
  {
    "text": "we show here the md5 hash of the",
    "start": "1255140",
    "end": "1257900"
  },
  {
    "text": "software CPU which is equal to the one",
    "start": "1257900",
    "end": "1260660"
  },
  {
    "text": "on the plc as you can see the software",
    "start": "1260660",
    "end": "1264020"
  },
  {
    "text": "CPU is encrypted and it begins with the",
    "start": "1264020",
    "end": "1267200"
  },
  {
    "text": "S3 Magic",
    "start": "1267200",
    "end": "1268700"
  },
  {
    "text": "run stars decryptor that runs the vmm",
    "start": "1268700",
    "end": "1272419"
  },
  {
    "text": "with our modifications and the output",
    "start": "1272419",
    "end": "1275299"
  },
  {
    "text": "comes from the decryption Loop so",
    "start": "1275299",
    "end": "1277880"
  },
  {
    "text": "at the end we get a segmentation form",
    "start": "1277880",
    "end": "1280640"
  },
  {
    "text": "but we just don't care because we ran",
    "start": "1280640",
    "end": "1283700"
  },
  {
    "text": "the vmm long enough to get the plain",
    "start": "1283700",
    "end": "1285679"
  },
  {
    "text": "text",
    "start": "1285679",
    "end": "1286880"
  },
  {
    "text": "the decrypted software CPU is delivered",
    "start": "1286880",
    "end": "1289820"
  },
  {
    "text": "in output.bin as you can see it begins",
    "start": "1289820",
    "end": "1292880"
  },
  {
    "text": "with the Elf Magic and riddle shows that",
    "start": "1292880",
    "end": "1296120"
  },
  {
    "text": "we actually managed to parse it",
    "start": "1296120",
    "end": "1299179"
  },
  {
    "text": "now check this out we've just run a PLC",
    "start": "1299179",
    "end": "1303740"
  },
  {
    "text": "binary on an Ubuntu machine which",
    "start": "1303740",
    "end": "1306740"
  },
  {
    "text": "doesn't even sound possible",
    "start": "1306740",
    "end": "1309080"
  },
  {
    "text": "and still we got the decrypted software",
    "start": "1309080",
    "end": "1311419"
  },
  {
    "text": "CPU",
    "start": "1311419",
    "end": "1313100"
  },
  {
    "text": "therefore it is crystal clear that the",
    "start": "1313100",
    "end": "1316039"
  },
  {
    "text": "decryption key is hard coded",
    "start": "1316039",
    "end": "1320000"
  },
  {
    "text": "now back to you server for the rest of",
    "start": "1320000",
    "end": "1322520"
  },
  {
    "text": "the talk",
    "start": "1322520",
    "end": "1324820"
  },
  {
    "text": "thank you",
    "start": "1329539",
    "end": "1331900"
  },
  {
    "text": "so our Quest ended the key was to film a",
    "start": "1331900",
    "end": "1337100"
  },
  {
    "text": "last line of defense and since it was",
    "start": "1337100",
    "end": "1339860"
  },
  {
    "text": "literally glued to the Vault when we",
    "start": "1339860",
    "end": "1342140"
  },
  {
    "text": "open it uh when we took it we opened it",
    "start": "1342140",
    "end": "1346039"
  },
  {
    "text": "and exposed the firmware",
    "start": "1346039",
    "end": "1349419"
  },
  {
    "text": "that's we got the plain text firmware",
    "start": "1353299",
    "end": "1357639"
  },
  {
    "text": "initial analysis of the software showed",
    "start": "1357679",
    "end": "1360860"
  },
  {
    "text": "that it contained much more from what is",
    "start": "1360860",
    "end": "1364159"
  },
  {
    "text": "required to operate the software CPU in",
    "start": "1364159",
    "end": "1366919"
  },
  {
    "text": "80 2000 test 200 SP",
    "start": "1366919",
    "end": "1370700"
  },
  {
    "text": "in addition to the peers software to PLC",
    "start": "1370700",
    "end": "1374059"
  },
  {
    "text": "software it contained full Libs",
    "start": "1374059",
    "end": "1376940"
  },
  {
    "text": "implementation openssl library and even",
    "start": "1376940",
    "end": "1380179"
  },
  {
    "text": "binary encoded in maps Isa",
    "start": "1380179",
    "end": "1384080"
  },
  {
    "text": "moreover it contains strings that we",
    "start": "1384080",
    "end": "1387440"
  },
  {
    "text": "were familiar with from previous",
    "start": "1387440",
    "end": "1389179"
  },
  {
    "text": "research from unrelated parts of other",
    "start": "1389179",
    "end": "1392960"
  },
  {
    "text": "software of other Hardware based S7 plc",
    "start": "1392960",
    "end": "1398799"
  },
  {
    "text": "so the the good intention of reducing",
    "start": "1399340",
    "end": "1403460"
  },
  {
    "text": "the PLC attacks survey failed because we",
    "start": "1403460",
    "end": "1407419"
  },
  {
    "text": "found out that a huge code base is",
    "start": "1407419",
    "end": "1410720"
  },
  {
    "text": "carried from previous models of the S7",
    "start": "1410720",
    "end": "1414159"
  },
  {
    "text": "plcs into this software PLC hence the",
    "start": "1414159",
    "end": "1419120"
  },
  {
    "text": "the attack surface is indeed increased",
    "start": "1419120",
    "end": "1422299"
  },
  {
    "text": "and not decreased now note although it's",
    "start": "1422299",
    "end": "1425600"
  },
  {
    "text": "a different model it's a software plc",
    "start": "1425600",
    "end": "1428780"
  },
  {
    "text": "99 of the et200s Picard is shared with",
    "start": "1428780",
    "end": "1433520"
  },
  {
    "text": "the rest of the S7 1500 plcs including",
    "start": "1433520",
    "end": "1437840"
  },
  {
    "text": "the hardware-based plc",
    "start": "1437840",
    "end": "1441640"
  },
  {
    "text": "now what could Siemens have done to",
    "start": "1441919",
    "end": "1445580"
  },
  {
    "text": "prevent us from successfully decrypting",
    "start": "1445580",
    "end": "1448400"
  },
  {
    "text": "the the firmware",
    "start": "1448400",
    "end": "1450440"
  },
  {
    "text": "if they would have separated the key",
    "start": "1450440",
    "end": "1453080"
  },
  {
    "text": "from the vmn binaries",
    "start": "1453080",
    "end": "1455659"
  },
  {
    "text": "we could we would not have been able to",
    "start": "1455659",
    "end": "1458720"
  },
  {
    "text": "use Intel pin to decrypt the software",
    "start": "1458720",
    "end": "1461120"
  },
  {
    "text": "CPU",
    "start": "1461120",
    "end": "1462860"
  },
  {
    "text": "if they would have used secure boot",
    "start": "1462860",
    "end": "1465919"
  },
  {
    "text": "we would not have been able to implement",
    "start": "1465919",
    "end": "1468679"
  },
  {
    "text": "her in 3D bugger",
    "start": "1468679",
    "end": "1470659"
  },
  {
    "text": "if they would have encrypted the",
    "start": "1470659",
    "end": "1472640"
  },
  {
    "text": "hypervisor binaries we would not have",
    "start": "1472640",
    "end": "1475460"
  },
  {
    "text": "been able to reverse engineering them",
    "start": "1475460",
    "end": "1480380"
  },
  {
    "text": "and again",
    "start": "1480380",
    "end": "1482059"
  },
  {
    "text": "if they would have implemented secure",
    "start": "1482059",
    "end": "1484700"
  },
  {
    "text": "boot we would not have been able to run",
    "start": "1484700",
    "end": "1487760"
  },
  {
    "text": "another operating system namely Ubuntu",
    "start": "1487760",
    "end": "1491240"
  },
  {
    "text": "under PLC Hardware",
    "start": "1491240",
    "end": "1494740"
  },
  {
    "text": "but Siemens",
    "start": "1496520",
    "end": "1500020"
  },
  {
    "text": "didn't deploy any of these preventive",
    "start": "1501020",
    "end": "1504140"
  },
  {
    "text": "measures in the ET 200 SP secure boot is",
    "start": "1504140",
    "end": "1508400"
  },
  {
    "text": "not implemented the Intel atom TPM is",
    "start": "1508400",
    "end": "1511640"
  },
  {
    "text": "not used and the vmm binaries are not",
    "start": "1511640",
    "end": "1514760"
  },
  {
    "text": "encrypted",
    "start": "1514760",
    "end": "1517100"
  },
  {
    "text": "to summarize these are the basic",
    "start": "1517100",
    "end": "1519440"
  },
  {
    "text": "mitigation that we would like to see in",
    "start": "1519440",
    "end": "1521780"
  },
  {
    "text": "a secure POC the key must be separated",
    "start": "1521780",
    "end": "1525440"
  },
  {
    "text": "from the code preferably stored in a",
    "start": "1525440",
    "end": "1528799"
  },
  {
    "text": "hardware model for example CPM",
    "start": "1528799",
    "end": "1531440"
  },
  {
    "text": "secure boot must be implemented to",
    "start": "1531440",
    "end": "1534020"
  },
  {
    "text": "prevent system manipulation the file",
    "start": "1534020",
    "end": "1536840"
  },
  {
    "text": "system must be encrypted to prevent",
    "start": "1536840",
    "end": "1539000"
  },
  {
    "text": "static code analysis but as I said none",
    "start": "1539000",
    "end": "1542240"
  },
  {
    "text": "of these mitigation were implemented in",
    "start": "1542240",
    "end": "1545059"
  },
  {
    "text": "a",
    "start": "1545059",
    "end": "1546740"
  },
  {
    "text": "et200 SP",
    "start": "1546740",
    "end": "1549880"
  },
  {
    "text": "Simmons confirmed graph finding",
    "start": "1549880",
    "end": "1553520"
  },
  {
    "text": "and they were interested in possible",
    "start": "1553520",
    "end": "1556520"
  },
  {
    "text": "customer",
    "start": "1556520",
    "end": "1557500"
  },
  {
    "text": "impact the truth is the customer impact",
    "start": "1557500",
    "end": "1561620"
  },
  {
    "text": "of this attack is severe the PLC",
    "start": "1561620",
    "end": "1564919"
  },
  {
    "text": "firmware leakage exposes the full",
    "start": "1564919",
    "end": "1567799"
  },
  {
    "text": "somatic S7 product line since we found",
    "start": "1567799",
    "end": "1570440"
  },
  {
    "text": "out that the code base is shared so via",
    "start": "1570440",
    "end": "1574159"
  },
  {
    "text": "exploitation of non-vulnerabilities the",
    "start": "1574159",
    "end": "1577039"
  },
  {
    "text": "house is based PLC can be attacked and",
    "start": "1577039",
    "end": "1580340"
  },
  {
    "text": "the horses may have already left the",
    "start": "1580340",
    "end": "1582679"
  },
  {
    "text": "stable",
    "start": "1582679",
    "end": "1583940"
  },
  {
    "text": "a recent finding which is not part of",
    "start": "1583940",
    "end": "1586580"
  },
  {
    "text": "this research and it's part of a",
    "start": "1586580",
    "end": "1588860"
  },
  {
    "text": "different publication we found out that",
    "start": "1588860",
    "end": "1592039"
  },
  {
    "text": "an attacker who gains admin rights on",
    "start": "1592039",
    "end": "1594260"
  },
  {
    "text": "the Windows VM can replace the PLC",
    "start": "1594260",
    "end": "1597679"
  },
  {
    "text": "firmware with its own crafted Rogue POC",
    "start": "1597679",
    "end": "1600919"
  },
  {
    "text": "firmware",
    "start": "1600919",
    "end": "1602960"
  },
  {
    "text": "and this means that an attacker that",
    "start": "1602960",
    "end": "1605840"
  },
  {
    "text": "gains control over the windows VM which",
    "start": "1605840",
    "end": "1608900"
  },
  {
    "text": "has a huge attack surface since it's",
    "start": "1608900",
    "end": "1611600"
  },
  {
    "text": "communicate with the upper layers and",
    "start": "1611600",
    "end": "1614000"
  },
  {
    "text": "maybe with the cloud",
    "start": "1614000",
    "end": "1615860"
  },
  {
    "text": "can run his own probe PLC firmware",
    "start": "1615860",
    "end": "1620360"
  },
  {
    "text": "we shared the full details with Siemens",
    "start": "1620360",
    "end": "1623059"
  },
  {
    "text": "before the talk",
    "start": "1623059",
    "end": "1627039"
  },
  {
    "text": "now to summarize as of 2019 semen had a",
    "start": "1628460",
    "end": "1633740"
  },
  {
    "text": "31 of the PLC market share those plcs",
    "start": "1633740",
    "end": "1638360"
  },
  {
    "text": "are deployed in critical places like",
    "start": "1638360",
    "end": "1641000"
  },
  {
    "text": "power plants water facilities from",
    "start": "1641000",
    "end": "1643760"
  },
  {
    "text": "spaces system and even nuclear reactors",
    "start": "1643760",
    "end": "1648080"
  },
  {
    "text": "the female leakage exposes the full",
    "start": "1648080",
    "end": "1651980"
  },
  {
    "text": "S7 somatic product line to known",
    "start": "1651980",
    "end": "1655520"
  },
  {
    "text": "unpatched vulnerability",
    "start": "1655520",
    "end": "1657559"
  },
  {
    "text": "and this is a design flow there's no",
    "start": "1657559",
    "end": "1660380"
  },
  {
    "text": "easy solution it's not like you your",
    "start": "1660380",
    "end": "1662840"
  },
  {
    "text": "distributed Siemens will distribute the",
    "start": "1662840",
    "end": "1664880"
  },
  {
    "text": "patch and it is immediately fixed the",
    "start": "1664880",
    "end": "1667279"
  },
  {
    "text": "the solution is operationally much more",
    "start": "1667279",
    "end": "1670240"
  },
  {
    "text": "uh sophisticated",
    "start": "1670240",
    "end": "1673159"
  },
  {
    "text": "I would like to use this opportunity on",
    "start": "1673159",
    "end": "1675740"
  },
  {
    "text": "this stage to send two messages",
    "start": "1675740",
    "end": "1679279"
  },
  {
    "text": "the first message this is the to the",
    "start": "1679279",
    "end": "1682460"
  },
  {
    "text": "community",
    "start": "1682460",
    "end": "1683600"
  },
  {
    "text": "we suspect that Simmons is not the only",
    "start": "1683600",
    "end": "1686659"
  },
  {
    "text": "ICS vendors that has problems securing",
    "start": "1686659",
    "end": "1689900"
  },
  {
    "text": "this new POC architecture we didn't",
    "start": "1689900",
    "end": "1692900"
  },
  {
    "text": "check other uh vendors",
    "start": "1692900",
    "end": "1695840"
  },
  {
    "text": "but the reason to our suspicion is that",
    "start": "1695840",
    "end": "1699020"
  },
  {
    "text": "secure binding to hardware and",
    "start": "1699020",
    "end": "1701240"
  },
  {
    "text": "large-scale Key Management are tough",
    "start": "1701240",
    "end": "1703640"
  },
  {
    "text": "operational problems",
    "start": "1703640",
    "end": "1705799"
  },
  {
    "text": "so I challenge you all Academy standard",
    "start": "1705799",
    "end": "1709100"
  },
  {
    "text": "bodies security and ICS vendors to look",
    "start": "1709100",
    "end": "1712460"
  },
  {
    "text": "for a solution to this problem this is",
    "start": "1712460",
    "end": "1715340"
  },
  {
    "text": "especially important now since ICS",
    "start": "1715340",
    "end": "1718460"
  },
  {
    "text": "architecture are currently shifting from",
    "start": "1718460",
    "end": "1720740"
  },
  {
    "text": "wall Garden to open Cloud oriented",
    "start": "1720740",
    "end": "1724159"
  },
  {
    "text": "environments",
    "start": "1724159",
    "end": "1727159"
  },
  {
    "text": "another message I want to stand to send",
    "start": "1727880",
    "end": "1730820"
  },
  {
    "text": "from this stage is to the ICS customs of",
    "start": "1730820",
    "end": "1734960"
  },
  {
    "text": "all ICS vendors I'm addressing you",
    "start": "1734960",
    "end": "1738380"
  },
  {
    "text": "you're the asset owners you will suffer",
    "start": "1738380",
    "end": "1741620"
  },
  {
    "text": "from the impact as long as you will not",
    "start": "1741620",
    "end": "1744679"
  },
  {
    "text": "clear make clear specific specific",
    "start": "1744679",
    "end": "1747980"
  },
  {
    "text": "requirements you will continue to get",
    "start": "1747980",
    "end": "1750860"
  },
  {
    "text": "security mechanism that the vendor",
    "start": "1750860",
    "end": "1752840"
  },
  {
    "text": "chooses to implement which is not",
    "start": "1752840",
    "end": "1754880"
  },
  {
    "text": "necessarily the ones that you need",
    "start": "1754880",
    "end": "1758779"
  },
  {
    "text": "and thank you all for your time and your",
    "start": "1758779",
    "end": "1761480"
  },
  {
    "text": "attention",
    "start": "1761480",
    "end": "1763778"
  }
]