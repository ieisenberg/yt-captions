[
  {
    "text": "hello everyone thanks for coming so has a few minutes late but happy to",
    "start": "30",
    "end": "6240"
  },
  {
    "text": "be here and today I'm going to be presenting about augmenting static",
    "start": "6240",
    "end": "11730"
  },
  {
    "text": "analysis so how many people here have reverse-engineered or used Ida that's",
    "start": "11730",
    "end": "20640"
  },
  {
    "text": "that's great and so this is all about improving and extending how you can use",
    "start": "20640",
    "end": "28500"
  },
  {
    "text": "Ida to reverse engineer and the inspiration for the talk it kind of came",
    "start": "28500",
    "end": "35010"
  },
  {
    "text": "back to when I first was learning how to reverse engineer I got to learn in an",
    "start": "35010",
    "end": "40469"
  },
  {
    "text": "environment where I was surrounded by a lot of really interesting people they",
    "start": "40469",
    "end": "46170"
  },
  {
    "text": "were all they loved they loved their work and I found that very inspiring and",
    "start": "46170",
    "end": "51829"
  },
  {
    "text": "so that's what got me into security and that also gave me the ability to ask",
    "start": "51829",
    "end": "58649"
  },
  {
    "text": "smart people questions and I don't know if you guys have reversed a lot of C++",
    "start": "58649",
    "end": "65400"
  },
  {
    "text": "code but just when I was getting comfortable reversing C I started to",
    "start": "65400",
    "end": "74700"
  },
  {
    "text": "pick up some C++ code and I I came across my an indirect call like call EAX",
    "start": "74700",
    "end": "81320"
  },
  {
    "text": "so I was like well how do you know what EAX is so I walked across the room and",
    "start": "81320",
    "end": "87180"
  },
  {
    "text": "asked my brother means like oh that's a virtual call you're gonna have to go and reverse the class structure or you can",
    "start": "87180",
    "end": "93450"
  },
  {
    "text": "use a debugger so that's kind of the",
    "start": "93450",
    "end": "99360"
  },
  {
    "text": "original reason that I wanted to create this tool to do things like automate",
    "start": "99360",
    "end": "104399"
  },
  {
    "text": "that process for me because it gets tedious pretty quickly so when I heard",
    "start": "104399",
    "end": "112740"
  },
  {
    "text": "about pin tool I thought that's a great opportunity to make it super simple and",
    "start": "112740",
    "end": "119939"
  },
  {
    "text": "easy to do things like resolve virtual calls pin tool if you guys aren't",
    "start": "119939",
    "end": "126780"
  },
  {
    "text": "familiar with it it's a it's a tool for",
    "start": "126780",
    "end": "131790"
  },
  {
    "text": "binary buying instrumentation now what that means is they're just going to modify a program",
    "start": "131790",
    "end": "138930"
  },
  {
    "text": "at runtime so it allows to be insert your own code a blasian is a tool that I",
    "start": "138930",
    "end": "148439"
  },
  {
    "text": "built on top of ping tool that extracts information from the process as it runs and it was designed to simplify the",
    "start": "148439",
    "end": "157349"
  },
  {
    "text": "process of reverse engineering to take the headaches out of trying to reverse",
    "start": "157349",
    "end": "162629"
  },
  {
    "text": "class structures when you're not even sure if you want to yet but then I found",
    "start": "162629",
    "end": "175260"
  },
  {
    "text": "that you can also use it to find interesting code to audit and this I'll",
    "start": "175260",
    "end": "182909"
  },
  {
    "text": "get into later but I call it a blade of fuzzing and essentially it's trying to",
    "start": "182909",
    "end": "188549"
  },
  {
    "text": "find interesting code using existing samples out there you know where is it",
    "start": "188549",
    "end": "196530"
  },
  {
    "text": "useful as I mentioned before it's useful with C++ especially if you're newer at",
    "start": "196530",
    "end": "202019"
  },
  {
    "text": "it you can feel a bit overwhelmed if say for instance you're you're dealing with",
    "start": "202019",
    "end": "209209"
  },
  {
    "text": "MS HTML that has 78,000 functions in it",
    "start": "209209",
    "end": "215639"
  },
  {
    "text": "or chrome child that's two hundred and two thousand functions where do you even start so if you're if you're new on or",
    "start": "215639",
    "end": "224810"
  },
  {
    "text": "dealing with something like MS HTML or chrome child it can be a bit of a pain",
    "start": "224810",
    "end": "231209"
  },
  {
    "text": "it can be a little overwhelming so using a blasian it kind of gives you the",
    "start": "231209",
    "end": "236370"
  },
  {
    "text": "illusion that you're in control so it's a little motivating you you kind of have",
    "start": "236370",
    "end": "242129"
  },
  {
    "text": "a little bit of guidance and you don't have to worry about every little virtual call out there you can use existing",
    "start": "242129",
    "end": "249690"
  },
  {
    "text": "samples to get yourself going so here if",
    "start": "249690",
    "end": "255150"
  },
  {
    "text": "looking at this slide but can anyone tell anyone have a clue what this does I don't but you know you could probably go",
    "start": "255150",
    "end": "266159"
  },
  {
    "text": "through veristic last lecture figure it out or using a blasian you can really quickly resolve those calls and",
    "start": "266159",
    "end": "273600"
  },
  {
    "text": "then it looks something like this well now we have some context we kind of have",
    "start": "273600",
    "end": "281160"
  },
  {
    "text": "an idea of what it does it's dealing with polygons and triangles rectangles",
    "start": "281160",
    "end": "288810"
  },
  {
    "text": "etc but we're dealing with shapes they're something also that's great is",
    "start": "288810",
    "end": "295680"
  },
  {
    "text": "when you resolve virtual calls it traits you interactive cross references in Ida",
    "start": "295680",
    "end": "301880"
  },
  {
    "text": "so you can actually look at the cross references to a call that would you would not be able to before and it will",
    "start": "301880",
    "end": "308250"
  },
  {
    "text": "show up in the graph view etc so it extends the interactivity of Ida now to",
    "start": "308250",
    "end": "319740"
  },
  {
    "text": "use a blasian it's it's actually super simple you just give it a module that",
    "start": "319740",
    "end": "325050"
  },
  {
    "text": "you're targeting and you let it go and then you have to go and run through some samples exercise the code thank you",
    "start": "325050",
    "end": "338870"
  },
  {
    "text": "now what information can we gather at run time we could do things like save",
    "start": "339110",
    "end": "349849"
  },
  {
    "text": "control flow data that we can look at later that's a that's the basic blocks",
    "start": "349849",
    "end": "355550"
  },
  {
    "text": "that get executed the frequency at which they execute the virtual calls and their",
    "start": "355550",
    "end": "363949"
  },
  {
    "text": "targets we can do things like identify interfaces that are being called",
    "start": "363949",
    "end": "370550"
  },
  {
    "text": "externally I'll get into how that works and once you have all this information",
    "start": "370550",
    "end": "376129"
  },
  {
    "text": "you have to use it for something otherwise what's the point I important into Ida using a script so",
    "start": "376129",
    "end": "387190"
  },
  {
    "text": "it's very portable you don't have to have any extra tools you don't actually have to run any code on your system to",
    "start": "387190",
    "end": "393020"
  },
  {
    "text": "use it properly which I really like because running random code well we are",
    "start": "393020",
    "end": "399439"
  },
  {
    "text": "in the security industry right this is a",
    "start": "399439",
    "end": "404949"
  },
  {
    "text": "snapshot of it gathering control flow data now this is a Firefox in the",
    "start": "404949",
    "end": "411020"
  },
  {
    "text": "background and this is a blasian printing it out so these are all basic",
    "start": "411020",
    "end": "416900"
  },
  {
    "text": "blocks that are getting executed you use a virtual call that has been resolved",
    "start": "416900",
    "end": "422029"
  },
  {
    "text": "and this is a virginal call that was to an external module now those you can't",
    "start": "422029",
    "end": "428659"
  },
  {
    "text": "really resolve in Ida but it fills in the comment saying exactly what call it",
    "start": "428659",
    "end": "435620"
  },
  {
    "text": "is which very useful now at runtime the",
    "start": "435620",
    "end": "442729"
  },
  {
    "text": "this is kind of key here the first time a basic block executes we say that but",
    "start": "442729",
    "end": "450770"
  },
  {
    "text": "only the first time if you tried to save every basic block every time it executed",
    "start": "450770",
    "end": "456289"
  },
  {
    "text": "you'd end up with an enormous amount of data and I thought it would be very useful but by doing only the first basic",
    "start": "456289",
    "end": "463879"
  },
  {
    "text": "block we can do things like create a set of basic blocks that are tied to a",
    "start": "463879",
    "end": "470270"
  },
  {
    "text": "sample so sample a maps to a set of basic blocks within the module and we're",
    "start": "470270",
    "end": "478220"
  },
  {
    "text": "essentially looking at a subset of the total basic blocks in the module but you",
    "start": "478220",
    "end": "485990"
  },
  {
    "text": "can use this to compare samples and see if they actually do something new now",
    "start": "485990",
    "end": "492860"
  },
  {
    "text": "when you import the information in data it ends up looking a lot like this the",
    "start": "492860",
    "end": "500090"
  },
  {
    "text": "green highlighted sections are basic blocks that have been exercised and you can see it jumped over that one and off",
    "start": "500090",
    "end": "509900"
  },
  {
    "text": "to the right you can see some virtual calls that have been resolved now I went",
    "start": "509900",
    "end": "518990"
  },
  {
    "text": "through a bit of a process trying to choose the colors for you know how to",
    "start": "518990",
    "end": "524480"
  },
  {
    "text": "represent it what I found was if you picked annoying colors staring at it for hours well it gets irritating do you",
    "start": "524480",
    "end": "533480"
  },
  {
    "text": "want to pick something that's kind of passive not really gonna distract you in that way after a while you start to",
    "start": "533480",
    "end": "538790"
  },
  {
    "text": "absorb the information just as you're reversing an Ida and you don't even need",
    "start": "538790",
    "end": "544670"
  },
  {
    "text": "to think about it so it may seem like minutiae at first but it's important not",
    "start": "544670",
    "end": "553790"
  },
  {
    "text": "to annoy people right now when it comes",
    "start": "553790",
    "end": "559400"
  },
  {
    "text": "to actually resolving virtual calls the way that I do it is instrumenting the",
    "start": "559400",
    "end": "567170"
  },
  {
    "text": "process for every indirect call instruction I maintain a list of the",
    "start": "567170",
    "end": "575480"
  },
  {
    "text": "observed targets so if you have well here we have four four different calls",
    "start": "575480",
    "end": "582530"
  },
  {
    "text": "that have been resolved or sorry four different targets and we also know now",
    "start": "582530",
    "end": "589280"
  },
  {
    "text": "that there's four different types there we can infer that they're all related and we save this information as a",
    "start": "589280",
    "end": "601850"
  },
  {
    "text": "process excuse by running different samples so we can tell if you know a sample is",
    "start": "601850",
    "end": "607910"
  },
  {
    "text": "using a specific type of object and kind",
    "start": "607910",
    "end": "614929"
  },
  {
    "text": "of where samples differ now every time",
    "start": "614929",
    "end": "621110"
  },
  {
    "text": "that virtual call does get executed we we look at the previous list and if it's",
    "start": "621110",
    "end": "628730"
  },
  {
    "text": "already in the list we just you know ignore it but if it's new we say it so I",
    "start": "628730",
    "end": "636439"
  },
  {
    "text": "think I'm gonna show you guys real quick here just how simple it is to use the",
    "start": "636439",
    "end": "643819"
  },
  {
    "text": "tool and in order to do that I'm just",
    "start": "643819",
    "end": "649309"
  },
  {
    "text": "gonna go through the whole process of downloading pin tool and running a",
    "start": "649309",
    "end": "660079"
  },
  {
    "text": "sample and then importing it into Ida now has anyone here used pin tool before",
    "start": "660079",
    "end": "668290"
  },
  {
    "text": "pin tool it's it's great it's really easy to use I really like it there are",
    "start": "668889",
    "end": "678790"
  },
  {
    "text": "some alternative products I know of dynamic dynamo real and I think there's",
    "start": "678790",
    "end": "686569"
  },
  {
    "text": "another one I forget but there's a few out there that you could use for the same purpose now Intel makes it free for",
    "start": "686569",
    "end": "697189"
  },
  {
    "text": "everyone which is great I think it was developed at the University of Colorado",
    "start": "697189",
    "end": "704919"
  },
  {
    "text": "secur",
    "start": "708940",
    "end": "711940"
  },
  {
    "text": "okay so when that's done downloading here",
    "start": "718550",
    "end": "724550"
  },
  {
    "text": "well I actually have it already set up in the VM so you can go there you grab it you extract it in the VM and then you",
    "start": "724550",
    "end": "732139"
  },
  {
    "text": "copy in just the the module now this",
    "start": "732139",
    "end": "737839"
  },
  {
    "text": "module you can get it it will be signed but I suggest you build your own pretty simple we're not going to go through the",
    "start": "737839",
    "end": "744860"
  },
  {
    "text": "process but once you have the module there in the VM I'm gonna run it against",
    "start": "744860",
    "end": "752560"
  },
  {
    "text": "Internet Explorer and we're gonna look at do you guys remember vml Microsoft's",
    "start": "752560",
    "end": "761000"
  },
  {
    "text": "vector graphics library so it's pretty much like you I think it's long dead but",
    "start": "761000",
    "end": "766670"
  },
  {
    "text": "it is still supported there have been a few bugs in recent years and it was like",
    "start": "766670",
    "end": "773509"
  },
  {
    "text": "they wanted to you compete against SVG and then Microsoft went and added SVG support ie so the amount is a little bit",
    "start": "773509",
    "end": "783350"
  },
  {
    "text": "deprecated which makes it a good example here so you just have to specify the",
    "start": "783350",
    "end": "790309"
  },
  {
    "text": "tool and then the module modules name is",
    "start": "790309",
    "end": "796939"
  },
  {
    "text": "VG X and then a double dash or the",
    "start": "796939",
    "end": "802009"
  },
  {
    "text": "process",
    "start": "802009",
    "end": "804579"
  },
  {
    "text": "then I'm going to give it the sight",
    "start": "808600",
    "end": "812589"
  },
  {
    "text": "and we'll let it go now what we're gonna",
    "start": "824620",
    "end": "830470"
  },
  {
    "text": "see here is Internet Explorer load I'm",
    "start": "830470",
    "end": "836230"
  },
  {
    "text": "using a build of Internet Explorer preview because it's a single process",
    "start": "836230",
    "end": "843160"
  },
  {
    "text": "and a renders all in that same process which makes it easier you can specify a process ID but for the sake of",
    "start": "843160",
    "end": "850480"
  },
  {
    "text": "simplicity it's nice and easy",
    "start": "850480",
    "end": "857790"
  },
  {
    "text": "so now I'm running the samples off of a virtual machine here so it's a Linux",
    "start": "869010",
    "end": "874500"
  },
  {
    "text": "server",
    "start": "874500",
    "end": "876740"
  },
  {
    "text": "and when it loads we're going to see when vgx loads and we're also going to",
    "start": "890670",
    "end": "897660"
  },
  {
    "text": "see if the code that gets executed we're gonna see basic block basic blocks as",
    "start": "897660",
    "end": "902670"
  },
  {
    "text": "they get rendered there and virtual calls being resolved and then we're",
    "start": "902670",
    "end": "911460"
  },
  {
    "text": "gonna import that information into Ida so we can actually use it now I find",
    "start": "911460",
    "end": "917700"
  },
  {
    "text": "that using this tool it saves me a lot of time especially when I'm looking at newer versions of something that I've",
    "start": "917700",
    "end": "924030"
  },
  {
    "text": "looked at before so we rendered some vml",
    "start": "924030",
    "end": "929940"
  },
  {
    "text": "and then we're gonna close it and the",
    "start": "929940",
    "end": "935970"
  },
  {
    "text": "result here is just a Python file that",
    "start": "935970",
    "end": "944520"
  },
  {
    "text": "when we have Ida open so right now we can see on the Left all the functions in",
    "start": "944520",
    "end": "950850"
  },
  {
    "text": "here now running this file here it I'll",
    "start": "950850",
    "end": "959790"
  },
  {
    "text": "show you briefly what it looks like",
    "start": "959790",
    "end": "963079"
  },
  {
    "text": "it has a header with which is a script just for importing the data and then it",
    "start": "966310",
    "end": "974250"
  },
  {
    "text": "just Scrolls through all the different pieces of data to import now when I run",
    "start": "974250",
    "end": "985120"
  },
  {
    "text": "it it'll probably take a few seconds and the result is now we can see the code",
    "start": "985120",
    "end": "993520"
  },
  {
    "text": "that got executed consider that most of the code that runs is things that is can",
    "start": "993520",
    "end": "1001380"
  },
  {
    "text": "be shared by a lot of samples so if we run a really simple sample just like the",
    "start": "1001380",
    "end": "1007170"
  },
  {
    "text": "most basic one draw yourself a circle it's gonna show us the code that's",
    "start": "1007170",
    "end": "1012270"
  },
  {
    "text": "involved in drawing a circle but that's also gonna be involved in drawing say a path or fonts that code isn't gonna be",
    "start": "1012270",
    "end": "1022110"
  },
  {
    "text": "very interesting to audit what you can",
    "start": "1022110",
    "end": "1027480"
  },
  {
    "text": "do is if you dip the to say we render that circle and we render say a text",
    "start": "1027480",
    "end": "1035160"
  },
  {
    "text": "path and then we find the code that is exclusive to the text path well now we",
    "start": "1035160",
    "end": "1041459"
  },
  {
    "text": "know we can start auditing this and we're going to be looking at code that's relevant on the left you can see all the",
    "start": "1041459",
    "end": "1050970"
  },
  {
    "text": "functions that got executed and if we",
    "start": "1050970",
    "end": "1057090"
  },
  {
    "text": "were to look at some of these",
    "start": "1057090",
    "end": "1061610"
  },
  {
    "text": "yeah okay so this virtual call here it",
    "start": "1066370",
    "end": "1073720"
  },
  {
    "text": "probably would have been not too difficult to figure out if we were using a debugger because it looks like they're",
    "start": "1073720",
    "end": "1079630"
  },
  {
    "text": "pulling it from a global but if you're new up if you're new out or you haven't reversed C++ in a while it's a pain in",
    "start": "1079630",
    "end": "1088480"
  },
  {
    "text": "the ass and you might just not want to do it motivation is key when you're reversing",
    "start": "1088480",
    "end": "1093730"
  },
  {
    "text": "because you have to want to do it we can look at these we can look at",
    "start": "1093730",
    "end": "1100659"
  },
  {
    "text": "cross references to it so there's only",
    "start": "1100659",
    "end": "1108130"
  },
  {
    "text": "one but if we wasted a whole bunch of time reversing that and it was just really boring code well that'd be",
    "start": "1108130",
    "end": "1114070"
  },
  {
    "text": "annoying but just very simply we were",
    "start": "1114070",
    "end": "1119890"
  },
  {
    "text": "able to pull all this information out of the process and now we can use it in Ida",
    "start": "1119890",
    "end": "1124929"
  },
  {
    "text": "and I really love the portability of it the fact that you can run it in the VM",
    "start": "1124929",
    "end": "1131620"
  },
  {
    "text": "and you don't actually have to run any code on your system so that's briefly",
    "start": "1131620",
    "end": "1139990"
  },
  {
    "text": "how to use it I there's another demo later that shows a little bit more in",
    "start": "1139990",
    "end": "1145899"
  },
  {
    "text": "depth now how ablation augments static",
    "start": "1145899",
    "end": "1153820"
  },
  {
    "text": "analysis we've already discussed this a little bit but it avoids the tediousness",
    "start": "1153820",
    "end": "1160779"
  },
  {
    "text": "and things that can be automated well",
    "start": "1160779",
    "end": "1167830"
  },
  {
    "text": "they should be automated it it adds context by showing you what calls are",
    "start": "1167830",
    "end": "1174309"
  },
  {
    "text": "operating on which data and that allows you to understand quicker what you're",
    "start": "1174309",
    "end": "1180850"
  },
  {
    "text": "looking at if you don't have symbols sometimes it can be really hard just just to get started to figure out okay",
    "start": "1180850",
    "end": "1187840"
  },
  {
    "text": "well what's this actually doing but if I can see all the other places where this",
    "start": "1187840",
    "end": "1194919"
  },
  {
    "text": "code is used if I can compare a couple of samples and then add some context to it then you can",
    "start": "1194919",
    "end": "1204110"
  },
  {
    "text": "actually get going and start to understand what you're looking at and that's where you gain traction now it",
    "start": "1204110",
    "end": "1212090"
  },
  {
    "text": "improves the interactivity of the ITB cross-references it's it's actually",
    "start": "1212090",
    "end": "1221269"
  },
  {
    "text": "quite useful because if you find code that might be vulnerable it it's",
    "start": "1221269",
    "end": "1228799"
  },
  {
    "text": "annoying to go and try and find every place where this code has been used but if you can just look at the cross",
    "start": "1228799",
    "end": "1233990"
  },
  {
    "text": "references and check for say a size comparison",
    "start": "1233990",
    "end": "1239029"
  },
  {
    "text": "well that would really speed up the process of assessing whether it is a",
    "start": "1239029",
    "end": "1244999"
  },
  {
    "text": "problem or not",
    "start": "1244999",
    "end": "1247570"
  },
  {
    "text": "now adding Tracey info I honestly don't find traces very useful by themselves",
    "start": "1255460",
    "end": "1263760"
  },
  {
    "text": "there's often too much data and it's just not something you can make use of",
    "start": "1263760",
    "end": "1272790"
  },
  {
    "text": "you can use it as a trace but that's that wasn't the original intention the",
    "start": "1272790",
    "end": "1278530"
  },
  {
    "text": "trace info is displayed there to help the user understand the the flow of data",
    "start": "1278530",
    "end": "1284710"
  },
  {
    "text": "and the flow of code and if you actually",
    "start": "1284710",
    "end": "1289810"
  },
  {
    "text": "think about you know what's shown that also includes what's not shown so you",
    "start": "1289810",
    "end": "1295330"
  },
  {
    "text": "can see that if you have a feature here and it has chunks of you know code that",
    "start": "1295330",
    "end": "1301360"
  },
  {
    "text": "was never executed but you've ran your test samples over it well why wasn't",
    "start": "1301360",
    "end": "1306430"
  },
  {
    "text": "that code executed maybe it's an undocumented feature or maybe it's an",
    "start": "1306430",
    "end": "1312490"
  },
  {
    "text": "incomplete sample set that you're using for your development a good example",
    "start": "1312490",
    "end": "1319030"
  },
  {
    "text": "would be a media codec so you have code for processing an mp4 but your test",
    "start": "1319030",
    "end": "1328870"
  },
  {
    "text": "samples they're not going to be massive files I imagine they're probably gonna be a mega two because you don't want to",
    "start": "1328870",
    "end": "1334960"
  },
  {
    "text": "lug these things around but what if your codec treats like a streaming four gig",
    "start": "1334960",
    "end": "1342070"
  },
  {
    "text": "file differently than a 1 Meg file because the 1 Meg file will be downloaded before you even know it but",
    "start": "1342070",
    "end": "1348490"
  },
  {
    "text": "if you're streaming 4 gigs there might",
    "start": "1348490",
    "end": "1354220"
  },
  {
    "text": "be a feature to buffer that and that might end up being used so you can tell that well this feature here has not",
    "start": "1354220",
    "end": "1361240"
  },
  {
    "text": "actually been tested with our sample set or if you're auditing for bugs well why",
    "start": "1361240",
    "end": "1366580"
  },
  {
    "text": "wasn't that executed maybe it's more interesting",
    "start": "1366580",
    "end": "1370350"
  },
  {
    "text": "you can also do things like infer inheritance info determine that things",
    "start": "1374279",
    "end": "1380350"
  },
  {
    "text": "are related to each other and come to",
    "start": "1380350",
    "end": "1386590"
  },
  {
    "text": "understand the different objects that you're working with now here I mean it's",
    "start": "1386590",
    "end": "1392919"
  },
  {
    "text": "pretty obvious by looking at this we're dealing with shapes and a generic parent class but if we didn't have this well we",
    "start": "1392919",
    "end": "1401380"
  },
  {
    "text": "might have to spend a fair amount of work to figure out that it's not something we want to look at at the very",
    "start": "1401380",
    "end": "1409029"
  },
  {
    "text": "least we know here that these are all related",
    "start": "1409029",
    "end": "1412980"
  },
  {
    "text": "so now observing live execution this is kind of a fun little thing that I did",
    "start": "1416039",
    "end": "1423909"
  },
  {
    "text": "that turned out to actually be a little bit useful but when you observe something on a computer it always ends",
    "start": "1423909",
    "end": "1429880"
  },
  {
    "text": "up looking like the matrix and it's like oh cool but you know what's the point",
    "start": "1429880",
    "end": "1435370"
  },
  {
    "text": "it's not very useful now the reason why you can actually make sense of this is because if you run several samples the",
    "start": "1435370",
    "end": "1447429"
  },
  {
    "text": "rate at which new basic blocks end up being a stated it decreases greatly after you know the first few samples",
    "start": "1447429",
    "end": "1453970"
  },
  {
    "text": "most of it is initialization and then you end up with you know specific code",
    "start": "1453970",
    "end": "1459909"
  },
  {
    "text": "for each sample that the more samples you run the fewer Blazek blocks you",
    "start": "1459909",
    "end": "1465309"
  },
  {
    "text": "actually see so this actually allows you",
    "start": "1465309",
    "end": "1472210"
  },
  {
    "text": "to watch the process in real time and you can do things like tell that I've",
    "start": "1472210",
    "end": "1477909"
  },
  {
    "text": "run a whole bunch of samples but I haven't hid me a new code for a while and then all of a sudden you run a",
    "start": "1477909",
    "end": "1482950"
  },
  {
    "text": "sample and you do hit something at you well maybe that sample does something that's uncommon or a bit different maybe",
    "start": "1482950",
    "end": "1491559"
  },
  {
    "text": "that sample is worth looking at further because well you're rendering just a circle really who cares",
    "start": "1491559",
    "end": "1502850"
  },
  {
    "text": "I like to use this this feature to find unique sample it's cool samples samples",
    "start": "1502850",
    "end": "1510140"
  },
  {
    "text": "that aren't just your generic thing that it's the first link on Google and using",
    "start": "1510140",
    "end": "1517100"
  },
  {
    "text": "this tool it's actually a lot easier than trying to dissect all these samples that would dip them or however you would",
    "start": "1517100",
    "end": "1524240"
  },
  {
    "text": "have done it before now if you run over",
    "start": "1524240",
    "end": "1530000"
  },
  {
    "text": "a sample set and then let's say you were to fuzz this sample set you can tell",
    "start": "1530000",
    "end": "1536150"
  },
  {
    "text": "when you've actually done something new as well so if you fiddle with things it",
    "start": "1536150",
    "end": "1541790"
  },
  {
    "text": "will show you that here is a place you might want to look and if you're really",
    "start": "1541790",
    "end": "1548660"
  },
  {
    "text": "lucky it might be an undocumented feature now I love undocumented peaches",
    "start": "1548660",
    "end": "1556270"
  },
  {
    "text": "they are great they contain lots of bugs this is actually where the name of the",
    "start": "1556270",
    "end": "1564650"
  },
  {
    "text": "tool comes from now I don't know if you guys know but a blasian it's kind of weathering something down over time it's",
    "start": "1564650",
    "end": "1572990"
  },
  {
    "text": "a little bit like erosion I like to think of it as your weathering down the module you're breaking away this stuff",
    "start": "1572990",
    "end": "1578570"
  },
  {
    "text": "you don't want to look at now I'm gonna",
    "start": "1578570",
    "end": "1585020"
  },
  {
    "text": "show you guys it actually looking at Firefox in real time here we're gonna be",
    "start": "1585020",
    "end": "1595730"
  },
  {
    "text": "looking at their WebGL library so shaders and the like",
    "start": "1595730",
    "end": "1602590"
  },
  {
    "text": "so we can see all the modules that get loaded I added the verbose flag it usually that's not there but it's it's",
    "start": "1610020",
    "end": "1616290"
  },
  {
    "text": "nice to see we can tell when our module gets loaded and we're gonna run it",
    "start": "1616290",
    "end": "1622920"
  },
  {
    "text": "through a few samples and you guys are gonna see that the basic blocks they decrease when we run more samples",
    "start": "1622920",
    "end": "1629220"
  },
  {
    "text": "because well they're quite similar in the terms of code they execute and",
    "start": "1629220",
    "end": "1634340"
  },
  {
    "text": "you'll actually be able to recognize names of functions and you know well",
    "start": "1634340",
    "end": "1640740"
  },
  {
    "text": "maybe that's something I want to look at or now that's boring",
    "start": "1640740",
    "end": "1645980"
  },
  {
    "text": "so here we go so I downloaded the WebGL conformance",
    "start": "1674530",
    "end": "1681440"
  },
  {
    "text": "tests this is what the developers use right this is what they're using to test their code on a daily basis and if we",
    "start": "1681440",
    "end": "1690590"
  },
  {
    "text": "run that entire set we should have a pretty good idea of exactly the code",
    "start": "1690590",
    "end": "1695870"
  },
  {
    "text": "they test and we're not going to run the whole set right now because that would",
    "start": "1695870",
    "end": "1701090"
  },
  {
    "text": "probably take a few minutes but we can see that this code here is all",
    "start": "1701090",
    "end": "1707659"
  },
  {
    "text": "initialization we haven't even done anything interesting yet and once we",
    "start": "1707659",
    "end": "1714500"
  },
  {
    "text": "start running a few samples we're I like",
    "start": "1714500",
    "end": "1719840"
  },
  {
    "text": "to think of it as we're weathering away the actual code that we don't have to look at there's a lot of code out there",
    "start": "1719840",
    "end": "1727039"
  },
  {
    "text": "and if you can improve your efficiency you're gonna you're gonna find more",
    "start": "1727039",
    "end": "1732260"
  },
  {
    "text": "things you're gonna you're going to enjoy it more as well so we're gonna run",
    "start": "1732260",
    "end": "1742909"
  },
  {
    "text": "this first sample set it looks like they're looking at attributes but",
    "start": "1742909",
    "end": "1748059"
  },
  {
    "text": "all right here we go so now we've got some samples running we're gonna tell what code they",
    "start": "1760600",
    "end": "1767890"
  },
  {
    "text": "exercise and there's a lot of stuff coming up it's probably iterating over a",
    "start": "1767890",
    "end": "1774160"
  },
  {
    "text": "few samples now and slow down a bit",
    "start": "1774160",
    "end": "1778470"
  },
  {
    "text": "now this little box here it's for changing the color that you're shaping",
    "start": "1786830",
    "end": "1791900"
  },
  {
    "text": "things in with alright because we've run the initialization code maybe we'll want",
    "start": "1791900",
    "end": "1797510"
  },
  {
    "text": "to color that in as gray so it's not so interesting maybe we want to color in",
    "start": "1797510",
    "end": "1804440"
  },
  {
    "text": "code that's related to specific shader features as another color so that when",
    "start": "1804440",
    "end": "1811040"
  },
  {
    "text": "we're going over it we can say oh you know I know where that's wrong so to",
    "start": "1811040",
    "end": "1817580"
  },
  {
    "text": "show you guys I'm just gonna change the color to a blue now all that actually",
    "start": "1817580",
    "end": "1826580"
  },
  {
    "text": "does is it adds one line to the script mm-hmm that it so it changes the color",
    "start": "1826580",
    "end": "1833360"
  },
  {
    "text": "and anything that comes after that well you know it will be shaded in like that",
    "start": "1833360",
    "end": "1839500"
  },
  {
    "text": "so now we run a few samples it looks",
    "start": "1841240",
    "end": "1849140"
  },
  {
    "text": "like things are slowing down a little bit if you make your way through the whole thing by the end you're barely",
    "start": "1849140",
    "end": "1855140"
  },
  {
    "text": "hitting anything and that actually I",
    "start": "1855140",
    "end": "1860690"
  },
  {
    "text": "think is where something interesting happens because when you're barely hitting anything you've covered most of",
    "start": "1860690",
    "end": "1868100"
  },
  {
    "text": "their sample set and you can use that information to find really interesting",
    "start": "1868100",
    "end": "1874700"
  },
  {
    "text": "code we can also tell that well the code",
    "start": "1874700",
    "end": "1882830"
  },
  {
    "text": "that has been run we don't want to look at it or maybe just not as much",
    "start": "1882830",
    "end": "1890559"
  },
  {
    "text": "now when we run it you'll see certain",
    "start": "1902900",
    "end": "1908950"
  },
  {
    "text": "features have been exercised certain",
    "start": "1908950",
    "end": "1913990"
  },
  {
    "text": "ones haven't but this is where the fuzzing comes in now it's a term that I",
    "start": "1913990",
    "end": "1923430"
  },
  {
    "text": "call a blade of fuzzing",
    "start": "1923430",
    "end": "1929190"
  },
  {
    "text": "and it makes use of what I call an X sample and it's really just the set of",
    "start": "1936400",
    "end": "1943750"
  },
  {
    "text": "basic blocks that a single sample executes now if you think about it you can have different samples that have the",
    "start": "1943750",
    "end": "1950410"
  },
  {
    "text": "exact same example for example rendering two circles rather than one now you can",
    "start": "1950410",
    "end": "1958450"
  },
  {
    "text": "also do things like well does a comment tag change the way HTML is rendered well",
    "start": "1958450",
    "end": "1965680"
  },
  {
    "text": "I mean it shouldn't but it does that's kind of interesting very simple",
    "start": "1965680",
    "end": "1974170"
  },
  {
    "text": "example but you can see how some things that you know if you were to diff wouldn't necessarily show up as",
    "start": "1974170",
    "end": "1981520"
  },
  {
    "text": "different samples Eve allows you to highlight where samples actually diverge",
    "start": "1981520",
    "end": "1988559"
  },
  {
    "text": "which is useful if you have related samples say if you had samples that were",
    "start": "1988559",
    "end": "1994270"
  },
  {
    "text": "fuzzed well you're falling from one sample to another let's say you end up",
    "start": "1994270",
    "end": "1999340"
  },
  {
    "text": "with a crash you can find out how you got there but not only how you got there why you",
    "start": "1999340",
    "end": "2005490"
  },
  {
    "text": "got there so different ways that",
    "start": "2005490",
    "end": "2011610"
  },
  {
    "text": "ablation can be used calculating coverage for a sample set highlighting untested features now that's when you",
    "start": "2011610",
    "end": "2018300"
  },
  {
    "text": "run it through a like an entire test suite Auto generating new samples I",
    "start": "2018300",
    "end": "2025740"
  },
  {
    "text": "actually did this it worked out pretty",
    "start": "2025740",
    "end": "2031140"
  },
  {
    "text": "well but we're gonna I wasn't looking to generate actual test samples I was looking to generate samples that get me",
    "start": "2031140",
    "end": "2036179"
  },
  {
    "text": "to certain areas of code crash analysis",
    "start": "2036179",
    "end": "2041690"
  },
  {
    "text": "trying to assess how it crashes it would be really simple you run three samples",
    "start": "2042320",
    "end": "2049648"
  },
  {
    "text": "the first one let's see how an HTML crash you'd run a hello world sample that's your initialization code then you",
    "start": "2049649",
    "end": "2056070"
  },
  {
    "text": "run the parent to the crash sample so you get pretty close and then you run",
    "start": "2056070",
    "end": "2061378"
  },
  {
    "text": "the crash sample anything that happens after this parent sample is very likely",
    "start": "2061379",
    "end": "2067408"
  },
  {
    "text": "related to the crash and I've used it to figure out why programs are crashing really quickly",
    "start": "2067409",
    "end": "2075010"
  },
  {
    "text": "when sometimes if you have a fuzz sample it can take you ages determining which",
    "start": "2075010",
    "end": "2082659"
  },
  {
    "text": "code specific is sorry determine which code process is specific data like SVG",
    "start": "2082660",
    "end": "2089919"
  },
  {
    "text": "in Internet Explorer capture-the-flag",
    "start": "2089920",
    "end": "2095320"
  },
  {
    "text": "does anyone here like playing capture the flag yeah so capture the flag I've",
    "start": "2095320",
    "end": "2100830"
  },
  {
    "text": "actually used it to breeze through some samples because in capture the flag a lot of the times there was just extra",
    "start": "2100830",
    "end": "2106600"
  },
  {
    "text": "code around it that never gets run well you can see exactly what gets run and decided where you want to go on exploit",
    "start": "2106600",
    "end": "2116920"
  },
  {
    "text": "analysis just last weekend I was looking at a flash exploit and actually what I",
    "start": "2116920",
    "end": "2124870"
  },
  {
    "text": "thought was going on I realized wasn't quite accurate when I saw a virtual",
    "start": "2124870",
    "end": "2130210"
  },
  {
    "text": "called resolved to both something in flash and virtual protect well that's",
    "start": "2130210",
    "end": "2135820"
  },
  {
    "text": "pretty odd turns out they just corrupted a pointer and used flash functionality",
    "start": "2135820",
    "end": "2140830"
  },
  {
    "text": "to cover to protect so now blade of fuzzing is fuzzing what",
    "start": "2140830",
    "end": "2145930"
  },
  {
    "text": "not to audit now why do people audit",
    "start": "2145930",
    "end": "2151740"
  },
  {
    "text": "it's how you find the good stuff why do people fuzz a computer can work while",
    "start": "2151740",
    "end": "2159220"
  },
  {
    "text": "you sleep I mean that's a pretty great idea researchers print tend to prefer one or",
    "start": "2159220",
    "end": "2166030"
  },
  {
    "text": "another I've always been an auditor but I think a combination of the two could",
    "start": "2166030",
    "end": "2172000"
  },
  {
    "text": "be even better than just one alone take for instance if you try to hide a bug in",
    "start": "2172000",
    "end": "2178240"
  },
  {
    "text": "one slide well anyone's gonna find it but if you if you had in the hundred slides well",
    "start": "2178240",
    "end": "2184150"
  },
  {
    "text": "that's a little different now if you fuzz those those code samples and you",
    "start": "2184150",
    "end": "2190930"
  },
  {
    "text": "didn't find the bug you would see what code was tested it would make sense to",
    "start": "2190930",
    "end": "2197950"
  },
  {
    "text": "start on the slides that were not tested you might still have to go through all",
    "start": "2197950",
    "end": "2204290"
  },
  {
    "text": "100 samples but if you found it in the first 10 wouldn't you be happy that you started there and this brings us to the",
    "start": "2204290",
    "end": "2214700"
  },
  {
    "text": "fact that highly traversed coat is not particularly interesting we went over",
    "start": "2214700",
    "end": "2221660"
  },
  {
    "text": "this circle versus animated font sample well the code that they share I'm not",
    "start": "2221660",
    "end": "2228320"
  },
  {
    "text": "all that interested in and my time is better spent elsewhere that circle",
    "start": "2228320",
    "end": "2235790"
  },
  {
    "text": "element it also shares code with a bunch of other samples now if we looked at in frequently executed code that's a lot",
    "start": "2235790",
    "end": "2244460"
  },
  {
    "text": "more likely to contain bugs now ironically I actually have found a pug",
    "start": "2244460",
    "end": "2251150"
  },
  {
    "text": "in an SVG circle element but that's the exception not the rule",
    "start": "2251150",
    "end": "2258370"
  },
  {
    "text": "so by dipping the two you can exclude the code that they share now if you use",
    "start": "2259330",
    "end": "2266420"
  },
  {
    "text": "a blasian screw to traverse a sample set like an SVG test suite here you have a",
    "start": "2266420",
    "end": "2275930"
  },
  {
    "text": "bunch of common samples if you take those samples and you fuzz and you hit",
    "start": "2275930",
    "end": "2282020"
  },
  {
    "text": "new code we are moving off this baseline depending on your Prezi or my work great",
    "start": "2282020",
    "end": "2289390"
  },
  {
    "text": "chances are that it won't but you're gonna look at new code that goes beyond",
    "start": "2289390",
    "end": "2296090"
  },
  {
    "text": "their sample set now I like to use grey to show code that was run during",
    "start": "2296090",
    "end": "2301940"
  },
  {
    "text": "initialization I like to use green to",
    "start": "2301940",
    "end": "2307670"
  },
  {
    "text": "show the sample set and then blue",
    "start": "2307670",
    "end": "2313960"
  },
  {
    "text": "represents the fuzz samples something that's new right we mutate those samples",
    "start": "2313960",
    "end": "2320570"
  },
  {
    "text": "when we get to new code but the most interesting stuff is the stuff that's",
    "start": "2320570",
    "end": "2326510"
  },
  {
    "text": "not colored in",
    "start": "2326510",
    "end": "2329170"
  },
  {
    "text": "it's adjacent to the stuff that's calling it especially adjacent to the to the fuzz samples this code it's it's not",
    "start": "2334160",
    "end": "2343130"
  },
  {
    "text": "really tested out there you got to it through some sort of a mutation but you know their entire test suite doesn't",
    "start": "2343130",
    "end": "2348859"
  },
  {
    "text": "touch it this club's going to be less scrutinized maybe it's untested and undocumented or experimental but the SVG",
    "start": "2348859",
    "end": "2360039"
  },
  {
    "text": "test suite didn't hit it which means they haven't been testing this code this",
    "start": "2360039",
    "end": "2365329"
  },
  {
    "text": "code here specifically it's from MS htmls SVG rendering now I don't know",
    "start": "2365329",
    "end": "2374180"
  },
  {
    "text": "exactly what this does but we fuzzed it and hopped over this well this call here",
    "start": "2374180",
    "end": "2380150"
  },
  {
    "text": "interests me I'd like to know what that is if you're looking at C++ code you can",
    "start": "2380150",
    "end": "2388940"
  },
  {
    "text": "also include methods from other classes there that are colored so to summarize",
    "start": "2388940",
    "end": "2398140"
  },
  {
    "text": "it's excluding code to audit we're look we're fuzzing to find code not to audit",
    "start": "2398140",
    "end": "2403670"
  },
  {
    "text": "and then we go and actually look at the code as because I don't think you're ever going to replace people so you can",
    "start": "2403670",
    "end": "2413059"
  },
  {
    "text": "use things like genetic algorithm to find cool code to audit now what can we",
    "start": "2413059",
    "end": "2422569"
  },
  {
    "text": "take away from this honestly I find myself using this tool because it saves",
    "start": "2422569",
    "end": "2428479"
  },
  {
    "text": "me time and it's easy to use so I hope",
    "start": "2428479",
    "end": "2435380"
  },
  {
    "text": "you guys will give it a try but it doesn't do the interesting work for you it might help you get there",
    "start": "2435380",
    "end": "2443799"
  },
  {
    "text": "so thank you anyone have any questions",
    "start": "2449090",
    "end": "2454360"
  },
  {
    "text": "yeah",
    "start": "2458050",
    "end": "2461050"
  },
  {
    "text": "oh yeah so you can dip runs oh right is there support for dipping runs",
    "start": "2463119",
    "end": "2469599"
  },
  {
    "text": "already built into the tool the simplest way to do that is to perform like run",
    "start": "2469599",
    "end": "2477400"
  },
  {
    "text": "one sample then just change the color and run another sample you could run two",
    "start": "2477400",
    "end": "2484599"
  },
  {
    "text": "different samples and if those no problem but the support is there you won't have to go and do it manually",
    "start": "2484599",
    "end": "2489900"
  },
  {
    "text": "thank you yes",
    "start": "2489900",
    "end": "2494338"
  },
  {
    "text": "I know I haven't sorry it's called the dye plugins yeah",
    "start": "2503559",
    "end": "2514660"
  },
  {
    "text": "dynamic Ida execution mm-hmm so I know that there is an Ida pin tool for trace",
    "start": "2514660",
    "end": "2523630"
  },
  {
    "text": "execution I haven't actually used it myself honestly when I was trying to",
    "start": "2523630",
    "end": "2531609"
  },
  {
    "text": "test it out I got irritated without knowing it was to get started I'd be",
    "start": "2531609",
    "end": "2540189"
  },
  {
    "text": "really interested to see what they've done there with this these die tools I'll have a look at them yeah",
    "start": "2540189",
    "end": "2549180"
  },
  {
    "text": "all right thank you guys for coming [Applause]",
    "start": "2551160",
    "end": "2559808"
  }
]