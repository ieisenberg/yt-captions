[
  {
    "text": "thank you everybody for being here we've got a lot of slides to go through so I'm just gonna dive right in and we're gonna",
    "start": "30",
    "end": "5759"
  },
  {
    "text": "start by looking at the TLS handshake so",
    "start": "5759",
    "end": "11389"
  },
  {
    "text": "the purpose of the TLS handshake of course is that the client and server want to agree upon a shared secret and",
    "start": "11420",
    "end": "18289"
  },
  {
    "text": "that's going to happen oftentimes through RSA base key exchanges so you",
    "start": "18289",
    "end": "24300"
  },
  {
    "text": "have two modes of RSA key exchanges you've got encryption based and signature based now what we're focusing",
    "start": "24300",
    "end": "31830"
  },
  {
    "text": "on for this talk is RSA encryption based key exchanges and that looks something",
    "start": "31830",
    "end": "37110"
  },
  {
    "text": "like this what we're really interested in here is only the one message that client key exchange and so what this contains is",
    "start": "37110",
    "end": "45329"
  },
  {
    "text": "RSA encrypted premaster secret data so this is going to be the data that's used to later derive keys in the sand shake",
    "start": "45329",
    "end": "52320"
  },
  {
    "text": "and authenticate it to understand what's going on here we need to look at RSA encryption the basic algorithms for RSA",
    "start": "52320",
    "end": "60510"
  },
  {
    "text": "encryption are pretty easy to understand but it can't really work this way in the real world this is what we would call",
    "start": "60510",
    "end": "66840"
  },
  {
    "text": "textbook RSA and it breaks down when you're in looking at values of 0 and 1 you've got identity arrangements here",
    "start": "66840",
    "end": "73680"
  },
  {
    "text": "and this is why we need padding so padding is going to be a way that we're",
    "start": "73680",
    "end": "78960"
  },
  {
    "text": "going to specially format our messages so that they will be appropriate for secure encryption through RSA and the",
    "start": "78960",
    "end": "86280"
  },
  {
    "text": "padding that's being used for TLS prior to 1.3 is pkcs number 11.5 the structure",
    "start": "86280",
    "end": "94829"
  },
  {
    "text": "of this looks something like this we start out with a block type that's going to be a constant 0 0 0 2 we then have",
    "start": "94829",
    "end": "103079"
  },
  {
    "text": "some random bytes the random bytes cannot contain any nulls because it is then terminated with null byte and then",
    "start": "103079",
    "end": "111329"
  },
  {
    "text": "we see the TLS version now you see here this has 0 3 0 3 that naturally stands",
    "start": "111329",
    "end": "117390"
  },
  {
    "text": "for TLS 1.2 because yeah it just does and TLS versions are saying we could",
    "start": "117390",
    "end": "124560"
  },
  {
    "text": "give it a we'll talk about TLS version numbers like yeah but that's not the",
    "start": "124560",
    "end": "129959"
  },
  {
    "text": "topic of the talk today yeah the topic is more about this gripped out of here these random bites",
    "start": "129959",
    "end": "135270"
  },
  {
    "text": "at the end this is the premaster secret in this case and the client key exchange and Daniel Blake and Bakker had looked",
    "start": "135270",
    "end": "143250"
  },
  {
    "text": "at this and considered the possibility of chosen cipher test ciphertext attacks",
    "start": "143250",
    "end": "148739"
  },
  {
    "text": "on this and so this is based on the fact that an RSA block is going to start with",
    "start": "148739",
    "end": "155430"
  },
  {
    "text": "these static bytes zero zero zero two and we have to think about what happens",
    "start": "155430",
    "end": "160470"
  },
  {
    "text": "when what the server should do if it receives a value that decrypts but does",
    "start": "160470",
    "end": "165480"
  },
  {
    "text": "not start with these values so the initial idea here was just why not send",
    "start": "165480",
    "end": "172049"
  },
  {
    "text": "an error back let the user know or let the client know that there was for example Iran block type prefix but this",
    "start": "172049",
    "end": "180390"
  },
  {
    "text": "doesn't really turn out to be such a great idea because when you're doing this that error message is actually",
    "start": "180390",
    "end": "186239"
  },
  {
    "text": "leaking information about the encrypted data so if you know that it has a",
    "start": "186239",
    "end": "191370"
  },
  {
    "text": "correct prefix you know that the value of the message is within certain ranges and if it has a bad prefix it's going to",
    "start": "191370",
    "end": "198690"
  },
  {
    "text": "be outside of those ranges now this combines with a factor of our",
    "start": "198690",
    "end": "204329"
  },
  {
    "text": "property of RSA encryption known as malleability in which we can multiply to",
    "start": "204329",
    "end": "209430"
  },
  {
    "text": "plain text or the multiplication of plaintext has a correlation with the",
    "start": "209430",
    "end": "214650"
  },
  {
    "text": "multiplication of the ciphertext there so by multiplying chosen ciphertext with",
    "start": "214650",
    "end": "222630"
  },
  {
    "text": "the known ciphertext you can drive that these plain texts have a relationship and really at this point it's important",
    "start": "222630",
    "end": "229620"
  },
  {
    "text": "to reiterate that RSA is doing everything based on numbers you're not talking about strings here you're",
    "start": "229620",
    "end": "234959"
  },
  {
    "text": "talking about messages and keys and modulo and these are all just numbers so",
    "start": "234959",
    "end": "243560"
  },
  {
    "text": "what we can say then is that if we have some message times some chosen value and",
    "start": "243560",
    "end": "249810"
  },
  {
    "text": "that ends up starting with 0 X or with 0 0 0 to that we know something but what",
    "start": "249810",
    "end": "258269"
  },
  {
    "text": "exactly do we know what's the importance of this well to get an idea of that",
    "start": "258269",
    "end": "263729"
  },
  {
    "text": "let's just look at a basic algebraic example here let's say that I give you a problem and",
    "start": "263729",
    "end": "269640"
  },
  {
    "text": "you know that three thousand times the number of the variable X is going to be a five digit decimal starting with the",
    "start": "269640",
    "end": "276390"
  },
  {
    "text": "numbers four and five that means that three thousand X in other words has to be greater than or equal to forty five",
    "start": "276390",
    "end": "282780"
  },
  {
    "text": "thousand but it has to be less than forty six thousand we can reduce that and you know that fifteen is less than",
    "start": "282780",
    "end": "289620"
  },
  {
    "text": "or equal to X is less than fifteen point three three now if you get some",
    "start": "289620",
    "end": "295260"
  },
  {
    "text": "additional information here and you learn that also three thousand ten times X follows that same property where",
    "start": "295260",
    "end": "302190"
  },
  {
    "text": "you've got a five digit decimal starting with four five then you get another interval you can combine these intervals",
    "start": "302190",
    "end": "309420"
  },
  {
    "text": "into a smaller range and so with each time that you're learning about this",
    "start": "309420",
    "end": "315540"
  },
  {
    "text": "other factor of X you're able to narrow down the range and the same principle it",
    "start": "315540",
    "end": "322560"
  },
  {
    "text": "works with RSA too but it is just a bit more complicated because of the modulo",
    "start": "322560",
    "end": "328020"
  },
  {
    "text": "you end up with multiple intervals that have to reconcile but like and baakir did derive a formula for going through",
    "start": "328020",
    "end": "335220"
  },
  {
    "text": "this and the long story of that is basically just that each time you get a positive response back from the server",
    "start": "335220",
    "end": "341940"
  },
  {
    "text": "telling you that the padding was correct you're narrowing in on the possibilities of the decrypted value and after you've",
    "start": "341940",
    "end": "350040"
  },
  {
    "text": "done this enough you've got a small enough space that you can simply do a brute-force search and recover the",
    "start": "350040",
    "end": "355650"
  },
  {
    "text": "message so there are various variations of this though it's not necessarily",
    "start": "355650",
    "end": "361919"
  },
  {
    "text": "always going to be that a server tells you that the block type prefix is incorrect it could also be that the",
    "start": "361919",
    "end": "367890"
  },
  {
    "text": "padding length or various other fields like the null byte might be in the wrong place and so depending on what server",
    "start": "367890",
    "end": "373710"
  },
  {
    "text": "checks are actually there you're going to get different Oracle's and these different Oracle's will have different",
    "start": "373710",
    "end": "379080"
  },
  {
    "text": "strengths meaning that they will require more or fewer numbers of connections to",
    "start": "379080",
    "end": "385020"
  },
  {
    "text": "the Oracle to get down to your final value yeah so okay so this was detected",
    "start": "385020",
    "end": "393720"
  },
  {
    "text": "back in 1998 so after that people of course wondered what do we do now how do",
    "start": "393720",
    "end": "399180"
  },
  {
    "text": "we fix this and so you have to remember 1998 that was back pls didn't exist there it was",
    "start": "399180",
    "end": "406269"
  },
  {
    "text": "still called SSL and then in 1999 the first TLS turn dirtiest 1.0 was",
    "start": "406269",
    "end": "415059"
  },
  {
    "text": "published and this was the first standard that contained countermeasures against this kind of attack and I'll",
    "start": "415059",
    "end": "421389"
  },
  {
    "text": "just read this to you the best way to avoid one ability to this attack is to treat incorrectly formatted messages in",
    "start": "421389",
    "end": "428259"
  },
  {
    "text": "a manner indistinguishable from correctly formatted RS a blocks thus when it receives an incorrectly",
    "start": "428259",
    "end": "434529"
  },
  {
    "text": "formatted RSA block a server should generate a random 48 byte value and",
    "start": "434529",
    "end": "439869"
  },
  {
    "text": "proceed using it as the premaster secret thus the server act in identically",
    "start": "439869",
    "end": "446259"
  },
  {
    "text": "whether the receive earth a block is correctly encoded or not so the idea here is if the server detects something",
    "start": "446259",
    "end": "452199"
  },
  {
    "text": "is wrong about this RSA message it will not send an error but it will continue with a random value and pretend",
    "start": "452199",
    "end": "459339"
  },
  {
    "text": "everything is all right and this will then fail later on because obviously then the server and the kind will end up",
    "start": "459339",
    "end": "465669"
  },
  {
    "text": "with a different key and they there will be no useful communication so if this",
    "start": "465669",
    "end": "471309"
  },
  {
    "text": "sounds a bit strange to you then maybe you're right because like maybe this was not the best fix but that's what they",
    "start": "471309",
    "end": "477579"
  },
  {
    "text": "came up with now but the current TLS tunnel is TLS 1.2 and yeah so that's",
    "start": "477579",
    "end": "485229"
  },
  {
    "text": "what is it so in case of a bad padding a server should pretend everything's alright and then use a random value to",
    "start": "485229",
    "end": "492399"
  },
  {
    "text": "continue the handshake now the current TLS stirlitz TLS 1.2 and there this",
    "start": "492399",
    "end": "498879"
  },
  {
    "text": "section got a bit longer so because someone figured out ok there are some problems this is old algorithm",
    "start": "498879",
    "end": "505499"
  },
  {
    "text": "particular with the handling of the version number someone fell out there's attack very similar to Platon bajas",
    "start": "505499",
    "end": "512680"
  },
  {
    "text": "attack and so TLS 1.2 says yeah as described by kima this was this improved",
    "start": "512680",
    "end": "519518"
  },
  {
    "text": "platypi attack these vulnerabilities can be avoided by treating incorrectly formatted messages blocks and or",
    "start": "519519",
    "end": "526540"
  },
  {
    "text": "mismatched version numbers in a manner indistinguishable from correctly formatted RSA blocks and then it",
    "start": "526540",
    "end": "532209"
  },
  {
    "text": "describes an algorithm three steps here apparently in step three there's a variation that could do",
    "start": "532209",
    "end": "538740"
  },
  {
    "text": "several different things then it goes on",
    "start": "538740",
    "end": "543960"
  },
  {
    "text": "it proposes another algorithm which you could also use the difference between",
    "start": "543960",
    "end": "550020"
  },
  {
    "text": "the two is how you would actually handle a wrong version number and then it tells",
    "start": "550020",
    "end": "555270"
  },
  {
    "text": "you although no practical attacks against this construction unknown key",
    "start": "555270",
    "end": "560430"
  },
  {
    "text": "might our describes on theoretical attacks and therefore the first construction is recommended so we have",
    "start": "560430",
    "end": "565740"
  },
  {
    "text": "two algorithms how to prevent this attack we really should only use one of them but yeah the standard describes two",
    "start": "565740",
    "end": "572960"
  },
  {
    "text": "and also by the way we should prevent timing attacks and other kinds of leaks",
    "start": "572960",
    "end": "578070"
  },
  {
    "text": "and yeah so it's a really long section how to prevent these attacks so to summarize that so what you're",
    "start": "578070",
    "end": "586050"
  },
  {
    "text": "supposed to do is that you generate a random value before you actually decrypt",
    "start": "586050",
    "end": "591180"
  },
  {
    "text": "the message and the reason for that is the timing attack because if you generate this random value after you",
    "start": "591180",
    "end": "596700"
  },
  {
    "text": "figured out that this message is wrong then the client could depending on how long it takes you to generate this",
    "start": "596700",
    "end": "602880"
  },
  {
    "text": "random value kind of figure out whether you had a correctly formatted message or",
    "start": "602880",
    "end": "608760"
  },
  {
    "text": "not so you generate this random value anyway and you only swap out your value if you figure out the pending is",
    "start": "608760",
    "end": "615450"
  },
  {
    "text": "incorrect yeah and if you have a bad",
    "start": "615450",
    "end": "622830"
  },
  {
    "text": "version number then the server can do different things it could either continue with the random value or it",
    "start": "622830",
    "end": "629790"
  },
  {
    "text": "could replace the version with actually the correct version there's a very",
    "start": "629790",
    "end": "635029"
  },
  {
    "text": "subtle theoretical argument why this is preferable so ultimately the second",
    "start": "635029",
    "end": "642660"
  },
  {
    "text": "variation is better but we would like to make the standard longer and more complicated and therefore we have two variations and yeah everything has to be",
    "start": "642660",
    "end": "652140"
  },
  {
    "text": "timing safe and please figure out how to do that so it's totally easy right I",
    "start": "652140",
    "end": "657690"
  },
  {
    "text": "mean everyone will get this right and I mean it's it's an attack from 1998 so",
    "start": "657690",
    "end": "665950"
  },
  {
    "text": "everyone knows about this it's a well-known attack it's all documented so everyone has regression tests for this",
    "start": "665950",
    "end": "672310"
  },
  {
    "text": "right I mean if you write or TLS library you would have regression tests for known attacks so this would not be a big",
    "start": "672310",
    "end": "680050"
  },
  {
    "text": "deal right or maybe maybe this so at some point last year I thought I should",
    "start": "680050",
    "end": "686320"
  },
  {
    "text": "actually test that because like and I knew about this attack but I didn't really know if anyone had in recent",
    "start": "686320",
    "end": "693700"
  },
  {
    "text": "years tried to exploit this attack or find more neural implementations so in",
    "start": "693700",
    "end": "700780"
  },
  {
    "text": "order to test this I initially I patched open SSL so I was able to send different",
    "start": "700780",
    "end": "706980"
  },
  {
    "text": "versions of protein arts a key exchanges because what we want to know is whether",
    "start": "706980",
    "end": "712710"
  },
  {
    "text": "depending on different errors the server behaves in different ways and as soon as",
    "start": "712710",
    "end": "718900"
  },
  {
    "text": "I get differences between these different error types I know I have an Oracle and this could somehow be exploited and what you can look there is",
    "start": "718900",
    "end": "727840"
  },
  {
    "text": "not just error codes but any kind of different behavior from the server you can detect can be used as an Oracle so",
    "start": "727840",
    "end": "734920"
  },
  {
    "text": "these can be different TLS errors this can also with we saw implementation sets in duplicate TLS arrows I think this is",
    "start": "734920",
    "end": "742630"
  },
  {
    "text": "not really considered by the specification but some do this we can also have service that on some errors",
    "start": "742630",
    "end": "749440"
  },
  {
    "text": "just close the connection or that just don't answer anymore and you have a timeout so there are different ways",
    "start": "749440",
    "end": "756280"
  },
  {
    "text": "where you can have these Oracle's and so it can't be Alexa top 1 million list and",
    "start": "756280",
    "end": "761770"
  },
  {
    "text": "the first hit was Facebook facebook.com was vulnerable so I thought okay we have",
    "start": "761770",
    "end": "768490"
  },
  {
    "text": "to attack Facebook and it would be really nice to have a message that",
    "start": "768490",
    "end": "774490"
  },
  {
    "text": "assigned with Facebook's key why would I do that I mean this doesn't really have any value it doesn't put facebook at risk in",
    "start": "774490",
    "end": "781930"
  },
  {
    "text": "any way but I would have cryptographic proof that this really happened like nobody can tell that I'm just making",
    "start": "781930",
    "end": "789850"
  },
  {
    "text": "this up or anything so so yeah so I reach out to you I he is like the",
    "start": "789850",
    "end": "795940"
  },
  {
    "text": "thought author of the paper who is not here and together like we put together a",
    "start": "795940",
    "end": "801910"
  },
  {
    "text": "proof-of-concept attack and as we would meet several thousands of connections to",
    "start": "801910",
    "end": "808180"
  },
  {
    "text": "Facebook we wanted this to be fast so we didn't have to wait several weeks till it completed",
    "start": "808180",
    "end": "813430"
  },
  {
    "text": "so one thing we did we try to all AWS",
    "start": "813430",
    "end": "819160"
  },
  {
    "text": "locations where you can rent service from AWS and measure the ping times and",
    "start": "819160",
    "end": "824200"
  },
  {
    "text": "on some of them we got ping times of two to three milliseconds to Facebook we",
    "start": "824200",
    "end": "830740"
  },
  {
    "text": "also figured out that if you set the if you have many very short connections then using this option called TCP no",
    "start": "830740",
    "end": "837460"
  },
  {
    "text": "delay gives you a huge speed-up so this was I think by a factor of 10 in faster",
    "start": "837460",
    "end": "843520"
  },
  {
    "text": "we got there with the attack and yeah after throat tries so we had several",
    "start": "843520",
    "end": "850480"
  },
  {
    "text": "bugs in our script which had after several tries we managed it and we sign a message with Facebook's key of course",
    "start": "850480",
    "end": "860290"
  },
  {
    "text": "we reported that to Facebook they also gave us a very generous Park bounty and",
    "start": "860290",
    "end": "865350"
  },
  {
    "text": "they fixed it I think about a week later and then yeah so now at this point after",
    "start": "865350",
    "end": "874210"
  },
  {
    "text": "Facebook had delivered their patch you can see if we send a crafted client key exchange that has improper padding we",
    "start": "874210",
    "end": "881470"
  },
  {
    "text": "just get generic alerts back we're not seeing anything that is going to be in",
    "start": "881470",
    "end": "886690"
  },
  {
    "text": "Oracle anymore but what happens if we play with the message flow a little bit so going back to this diagram again you",
    "start": "886690",
    "end": "895120"
  },
  {
    "text": "should understand that each one of these blocks they can be sent together or a lot of them can be sent together in the",
    "start": "895120",
    "end": "900670"
  },
  {
    "text": "same packet or they can be split and what we found is that when splitting these messages up that Facebook would",
    "start": "900670",
    "end": "908740"
  },
  {
    "text": "actually have some slightly different behavior you could actually just omit the change cypher spec and the finished",
    "start": "908740",
    "end": "914440"
  },
  {
    "text": "message and you end up with something like this so now this is with after",
    "start": "914440",
    "end": "919630"
  },
  {
    "text": "Facebook had deployed their first patch we run our test again but this time we are not sending out the final change",
    "start": "919630",
    "end": "925930"
  },
  {
    "text": "Cypress back and finish message and you can see on the left here when we send an invalid padding Facebook is in the",
    "start": "925930",
    "end": "933040"
  },
  {
    "text": "lately tearing down the connection with the TCP fin but if we have a PCI conforming client key exchange meaning",
    "start": "933040",
    "end": "939790"
  },
  {
    "text": "it has that valid block prefix and everything Facebook servers were leaving the connection open waiting for us to",
    "start": "939790",
    "end": "946449"
  },
  {
    "text": "send more data and it turned out that Facebook was not the only server that",
    "start": "946449",
    "end": "951699"
  },
  {
    "text": "was doing this when we kept scanning the internet we found that various other products so for example f5s big IP here",
    "start": "951699",
    "end": "959500"
  },
  {
    "text": "this is one of the various Oracle's that was in their product you can see that",
    "start": "959500",
    "end": "964839"
  },
  {
    "text": "they were sending an alert in one case and leaving the connection open in the other case but only if we would not send",
    "start": "964839",
    "end": "972069"
  },
  {
    "text": "that change cypress peck and finished message and just as one more example",
    "start": "972069",
    "end": "977190"
  },
  {
    "text": "with the citrix netscaler this one we would send the full exchange and the",
    "start": "977190",
    "end": "982540"
  },
  {
    "text": "connection status would again indicate to us whether or not we had valid padding yeah so what is the impact of",
    "start": "982540",
    "end": "991930"
  },
  {
    "text": "this you will assume okay we can decrypt messages that sounds pretty bad but in",
    "start": "991930",
    "end": "997510"
  },
  {
    "text": "practice it it's a bit more complicated so we learnt earlier that there are at",
    "start": "997510",
    "end": "1004410"
  },
  {
    "text": "least two different ways to do TLS handshakes one is this older RSA",
    "start": "1004410",
    "end": "1010230"
  },
  {
    "text": "encryption modes and there are these more modern modes that use only RSA signatures and use it if you had a",
    "start": "1010230",
    "end": "1016500"
  },
  {
    "text": "monkey exchange and if the server and or a client only support this old mode so",
    "start": "1016500",
    "end": "1023940"
  },
  {
    "text": "we have a connection with this old mode this is kind of the most devastating attack because then we can just record",
    "start": "1023940",
    "end": "1029699"
  },
  {
    "text": "that data later undo the attack and then decrypt all the data however these days",
    "start": "1029699",
    "end": "1036720"
  },
  {
    "text": "most people prefer to use these more modern modes of course and they still support earth encryption for legacy",
    "start": "1036720",
    "end": "1043470"
  },
  {
    "text": "connections but they would usually not use them because all the modern browsers",
    "start": "1043470",
    "end": "1049950"
  },
  {
    "text": "support these different modes and if you have server that supports both then it",
    "start": "1049950",
    "end": "1055290"
  },
  {
    "text": "will choose the diffie-hellman mode this could still be attacked in theory but in",
    "start": "1055290",
    "end": "1061530"
  },
  {
    "text": "order to do that you would have to do this attack really fast and as I mentioned earlier we're talking",
    "start": "1061530",
    "end": "1067380"
  },
  {
    "text": "about several tens of thousands of connections so this would be challenging and we we think this might be possible",
    "start": "1067380",
    "end": "1074790"
  },
  {
    "text": "but we've never performed such an attack so we don't know if it's practical but if you think about the target like",
    "start": "1074790",
    "end": "1080460"
  },
  {
    "text": "Facebook they have many servers they are fast so you could also parallel eyes this attack so you could run it from ten",
    "start": "1080460",
    "end": "1086940"
  },
  {
    "text": "different places on the internet and so this should be feasible but we never tried it in practice but still the idea",
    "start": "1086940",
    "end": "1094110"
  },
  {
    "text": "is like even if server and client support these more modern modes and have this far back to this older mode that",
    "start": "1094110",
    "end": "1100260"
  },
  {
    "text": "could still be used for an attack but this is a much more challenging attack",
    "start": "1100260",
    "end": "1105800"
  },
  {
    "text": "yeah Facebook of course was not the only one over host so here are a few others",
    "start": "1107090",
    "end": "1112290"
  },
  {
    "text": "maybe you recognize some of the company names I heard something like quite well-known like epic um Cisco come eBay",
    "start": "1112290",
    "end": "1120300"
  },
  {
    "text": "paper something from Microsoft the",
    "start": "1120300",
    "end": "1127560"
  },
  {
    "text": "figures so we knew how these web pages are vulnerable but what's really a challenge if you do something like this",
    "start": "1127560",
    "end": "1132960"
  },
  {
    "text": "is then we need to find the vendors and so we're trying to contact the owners of",
    "start": "1132960",
    "end": "1139170"
  },
  {
    "text": "these web pages but many people are not very happy to tell you about what products they're using for example like",
    "start": "1139170",
    "end": "1146430"
  },
  {
    "text": "the first one here the epic on Apple is",
    "start": "1146430",
    "end": "1153360"
  },
  {
    "text": "using Citrix devices but they didn't want to tell us this but trying to",
    "start": "1153360",
    "end": "1162570"
  },
  {
    "text": "contact a lot of web pages after we found a lot of vendors that were vulnerable so we figure out yeah five",
    "start": "1162570",
    "end": "1168180"
  },
  {
    "text": "devices were vulnerable Citrix devices radware Cisco Cisco had two different",
    "start": "1168180",
    "end": "1173820"
  },
  {
    "text": "products that were vulnerable then we tested various open source libraries we",
    "start": "1173820",
    "end": "1179940"
  },
  {
    "text": "found a bouncy castle was vulnerable along with SSL and then after we",
    "start": "1179940",
    "end": "1186150"
  },
  {
    "text": "published our paper other people found out that there were more vulnerable",
    "start": "1186150",
    "end": "1191180"
  },
  {
    "text": "products for example I don't networked IBM several products from Symantec",
    "start": "1191180",
    "end": "1197740"
  },
  {
    "text": "unisys what was the kea participants EP I heard it's important I have no idea",
    "start": "1197740",
    "end": "1203470"
  },
  {
    "text": "what it is and cambium chips which are accelerator chips which are used in many",
    "start": "1203470",
    "end": "1209350"
  },
  {
    "text": "other products so we had a long list of foreigner aligners the Cisco thing was",
    "start": "1209350",
    "end": "1215710"
  },
  {
    "text": "particularly interesting so we heard from some webpage operator that they were using a Cisco AC and so we",
    "start": "1215710",
    "end": "1224140"
  },
  {
    "text": "contacted Cisco about it obviously and Cisco told us yeah we won't fix this",
    "start": "1224140",
    "end": "1229899"
  },
  {
    "text": "because this device has been out of support for for many years so we're not",
    "start": "1229899",
    "end": "1235090"
  },
  {
    "text": "doing any updates on this anymore and this vulnerability was particularly severe because these devices didn't",
    "start": "1235090",
    "end": "1241510"
  },
  {
    "text": "support any of these different modes so you would always have this classic as a heat exchange so we could easily decrypt",
    "start": "1241510",
    "end": "1248470"
  },
  {
    "text": "traffic from that but there were a lot of web pages that were still using these",
    "start": "1248470",
    "end": "1254679"
  },
  {
    "text": "AC devices for example Cisco come and like I told them that and they didn't",
    "start": "1254679",
    "end": "1262419"
  },
  {
    "text": "answer that email and and a few weeks later I said yeah we're going to publish this soon and I think Cisco comm is",
    "start": "1262419",
    "end": "1267970"
  },
  {
    "text": "running these AC devices and I'm gonna publish that - do you want to comment on that didn't get an answer on that it's",
    "start": "1267970",
    "end": "1275679"
  },
  {
    "text": "no longer running on that right now oh yeah where they have a firewall on purpose yeah maybe they have a firewall or maybe you can't figure out what the",
    "start": "1275679",
    "end": "1281890"
  },
  {
    "text": "origin is yeah what we also did is that",
    "start": "1281890",
    "end": "1289210"
  },
  {
    "text": "we try to reach out to developers of test tools and I mean probably most of you know this right this is the test",
    "start": "1289210",
    "end": "1294880"
  },
  {
    "text": "from quality as its elapsed test which is very popular when you want to know if your els configuration on your website",
    "start": "1294880",
    "end": "1302080"
  },
  {
    "text": "is any good and the I think this a",
    "start": "1302080",
    "end": "1307240"
  },
  {
    "text": "crucial see here because I mean we're talking about vulnerability from 1998 and why is this still around and the",
    "start": "1307240",
    "end": "1315460"
  },
  {
    "text": "obvious answer is nobody is test was testing for it before we did this research like all the commonly easily",
    "start": "1315460",
    "end": "1322299"
  },
  {
    "text": "available tools they didn't have a test for this vulnerability and that's I think why it was still around and where",
    "start": "1322299",
    "end": "1328179"
  },
  {
    "text": "it was still so prevalent so we reached out to as and they added a check for it and yes",
    "start": "1328179",
    "end": "1334919"
  },
  {
    "text": "you can see here now you get an F if you're vulnerable to this attack we were to test SSL which is a very powerful SSL",
    "start": "1334919",
    "end": "1344970"
  },
  {
    "text": "testing tool which is written in bash so quite impressive TLS attacker which",
    "start": "1344970",
    "end": "1350909"
  },
  {
    "text": "is written by one of our co-authors so and TLS father which is from a ratchet",
    "start": "1350909",
    "end": "1357389"
  },
  {
    "text": "developer and also tripwire yes tripwire IP 360 was killed four as well yeah so",
    "start": "1357389",
    "end": "1363600"
  },
  {
    "text": "so before robot no easily no test tool was available really for blacking Baja",
    "start": "1363600",
    "end": "1368879"
  },
  {
    "text": "text and after that so we hope that now these vulnerabilities will be detected",
    "start": "1368879",
    "end": "1373950"
  },
  {
    "text": "more easily and we also think we were successful with that because as I said earlier after we published this research",
    "start": "1373950",
    "end": "1381299"
  },
  {
    "text": "many more products showed up to be vulnerable which we did not know about before yeah",
    "start": "1381299",
    "end": "1389220"
  },
  {
    "text": "what we also did was a capture the flag contest so we thought yeah we want to give people a chance to try to",
    "start": "1389220",
    "end": "1395789"
  },
  {
    "text": "re-implement this attack so originally we did not publish our attack tool we",
    "start": "1395789",
    "end": "1401009"
  },
  {
    "text": "have published it later after the capture the flag so and we set up a vulnerable hosts and we gave people an",
    "start": "1401009",
    "end": "1408480"
  },
  {
    "text": "encrypted message and they should decrypt it by implementing this attack",
    "start": "1408480",
    "end": "1414059"
  },
  {
    "text": "against this host and then they got a message which told them about the second",
    "start": "1414059",
    "end": "1419879"
  },
  {
    "text": "host but it only gave them the key of that host and interestingly this seemed to be the most difficult part because I got",
    "start": "1419879",
    "end": "1425850"
  },
  {
    "text": "many people asking me hey how do I find your second toast you're only giving me the key the idea there was that you can",
    "start": "1425850",
    "end": "1432330"
  },
  {
    "text": "use that key and search in the certificate transparency database and then find the host name and then you had",
    "start": "1432330",
    "end": "1437700"
  },
  {
    "text": "that host and the second step was then you had to sign a message because the",
    "start": "1437700",
    "end": "1443580"
  },
  {
    "text": "the attack for signatures is it requires an additional step so this is a bit more complicated and I think we had like 10",
    "start": "1443580",
    "end": "1451080"
  },
  {
    "text": "people who finish the capture the flag successfully so I think this was a nice thing so when you publish a",
    "start": "1451080",
    "end": "1457740"
  },
  {
    "text": "vulnerability also give people a chance to practically play with it",
    "start": "1457740",
    "end": "1463008"
  },
  {
    "text": "so then there's this issue of timing attacks so we did not really look into",
    "start": "1463930",
    "end": "1469550"
  },
  {
    "text": "this in detail but I mentioned it earlier that particular these changes in TLS 1.2 were also to prevent timing",
    "start": "1469550",
    "end": "1478340"
  },
  {
    "text": "attacks but so these timing",
    "start": "1478340",
    "end": "1484850"
  },
  {
    "text": "countermeasures are relatively complicated and there are some TLS ticks that where it's well known that they",
    "start": "1484850",
    "end": "1490010"
  },
  {
    "text": "just don't implement protection against these timing attacks for example in NSS there's an open bar but it's been hopes",
    "start": "1490010",
    "end": "1497270"
  },
  {
    "text": "in several years I guess it's not that relevant because almost nobody is using",
    "start": "1497270",
    "end": "1502370"
  },
  {
    "text": "NSS on servers but yeah but then we",
    "start": "1502370",
    "end": "1508850"
  },
  {
    "text": "learned something that even if you implement the specification from TLS 1.2",
    "start": "1508850",
    "end": "1514910"
  },
  {
    "text": "which should protect you against timing attacks you may still have a problem and",
    "start": "1514910",
    "end": "1521690"
  },
  {
    "text": "that comes back to this that crypto is just math so when we talk about cryptographic keys or signatures",
    "start": "1521690",
    "end": "1528830"
  },
  {
    "text": "everything it's just we're talking about numbers right cryptographic key and RSA key is two numbers signature is one",
    "start": "1528830",
    "end": "1537230"
  },
  {
    "text": "number and so these cryptographic libraries like open SSL they use bignum",
    "start": "1537230",
    "end": "1544700"
  },
  {
    "text": "libraries that is like they have mathematical functions that operate on numbers of arbitrary size and this has",
    "start": "1544700",
    "end": "1553970"
  },
  {
    "text": "the effect that if you have smaller numbers they take less memory because like you have I don't know your number",
    "start": "1553970",
    "end": "1560660"
  },
  {
    "text": "is 500 bytes large so you have a buffer of 500 bytes maybe a size value in front",
    "start": "1560660",
    "end": "1566810"
  },
  {
    "text": "and they restore your number and but if you have a smaller number it's less space and if you look back at RSA okay",
    "start": "1566810",
    "end": "1576800"
  },
  {
    "text": "ours is to some formula where you do some exponentiation and the modulus and",
    "start": "1576800",
    "end": "1582550"
  },
  {
    "text": "if you have a standard key size then the result is 250 256 bytes large usually",
    "start": "1582550",
    "end": "1590060"
  },
  {
    "text": "but it may start with the 0 and then it's 255 bytes or 254 if it starts with",
    "start": "1590060",
    "end": "1597200"
  },
  {
    "text": "2 zeros so simply the fact that this big name library has variable size may give",
    "start": "1597200",
    "end": "1604190"
  },
  {
    "text": "you another timing signal because storing 255 bytes takes less time than",
    "start": "1604190",
    "end": "1609890"
  },
  {
    "text": "storing 256 bytes so you may have a side",
    "start": "1609890",
    "end": "1616880"
  },
  {
    "text": "channel due to the use of big name libraries with variable size if this is",
    "start": "1616880",
    "end": "1624050"
  },
  {
    "text": "practical we don't know this is kind of an open research question if someone wants to have a research topic would be",
    "start": "1624050",
    "end": "1631700"
  },
  {
    "text": "an interesting one and to our knowledge",
    "start": "1631700",
    "end": "1637250"
  },
  {
    "text": "this effect practically all common TLS libraries and david benjamin from google",
    "start": "1637250",
    "end": "1643820"
  },
  {
    "text": "has recently fixed this in boring as a cell and has submitted a pull request to",
    "start": "1643820",
    "end": "1649520"
  },
  {
    "text": "organize a cell but right now they are still the stuff that's out there is usually one or two this yeah so one of",
    "start": "1649520",
    "end": "1661790"
  },
  {
    "text": "the other things that we were seeing during scans is the internet is a lot of hosts would respond let's say",
    "start": "1661790",
    "end": "1668480"
  },
  {
    "text": "inconsistently so in some cases I would see that a root see that certificate",
    "start": "1668480",
    "end": "1674210"
  },
  {
    "text": "chains would actually come back to in response to a malformed client key exchange but in other cases we would",
    "start": "1674210",
    "end": "1680120"
  },
  {
    "text": "actually just see what appeared to be random bytes I entropy streams of data unclear what it was exactly the only",
    "start": "1680120",
    "end": "1688310"
  },
  {
    "text": "vendor that we were able to pin down on this is this communicate Pro but there",
    "start": "1688310",
    "end": "1694100"
  },
  {
    "text": "are definitely others out there based on looking the debt at the data that we had from scans of the Alexa top million",
    "start": "1694100",
    "end": "1699350"
  },
  {
    "text": "sites and this leads me to believe that maybe there's something out there that's",
    "start": "1699350",
    "end": "1705410"
  },
  {
    "text": "like a heartbleed style bug within the way that these things are being processed and so perhaps if some of you",
    "start": "1705410",
    "end": "1712940"
  },
  {
    "text": "want to take the robots.txt script and run it against obscure hosts that you have if you get inconsistent results",
    "start": "1712940",
    "end": "1719270"
  },
  {
    "text": "might be worth digging into that a little bit further to see what's going on",
    "start": "1719270",
    "end": "1724520"
  },
  {
    "text": "yeah so after that you might wonder what what should we do about this because",
    "start": "1724520",
    "end": "1730560"
  },
  {
    "text": "like these countermeasures are really complicated and many people get them wrong and then they are still these",
    "start": "1730560",
    "end": "1736110"
  },
  {
    "text": "timing issues even if you do the countermeasures and what we actually recommend is that if you run tear less",
    "start": "1736110",
    "end": "1741540"
  },
  {
    "text": "than just disable these are say cipher suites so we did subjects with where we",
    "start": "1741540",
    "end": "1747720"
  },
  {
    "text": "locked connections to web pages these were not the most high volume web pages but reasonable sample I think and we saw",
    "start": "1747720",
    "end": "1756680"
  },
  {
    "text": "practically no legitimate connections that we're using these old cipher suites so almost everyone these days is using a",
    "start": "1756680",
    "end": "1764700"
  },
  {
    "text": "browser that will support one of the more modern modes and this also gives",
    "start": "1764700",
    "end": "1770130"
  },
  {
    "text": "you forward secrecy which is a nice property roughly so we would recommend",
    "start": "1770130",
    "end": "1775860"
  },
  {
    "text": "if you're on a server that's using TLS just consider disabling these all cipher modes because really I don't believe",
    "start": "1775860",
    "end": "1782970"
  },
  {
    "text": "there's any implementation out there right now that I would call robust on this until it's 1.3 will no longer",
    "start": "1782970",
    "end": "1792330"
  },
  {
    "text": "support these modes anyway because it it has deprecated a lot of bad stuff we're",
    "start": "1792330",
    "end": "1797700"
  },
  {
    "text": "expecting that TLS 1.3 will now be published every day took a bit longer",
    "start": "1797700",
    "end": "1803420"
  },
  {
    "text": "but yeah but you may still be at risk",
    "start": "1803420",
    "end": "1808620"
  },
  {
    "text": "even if you use ETS 1.3 because if you we mentioned earlier that you could do",
    "start": "1808620",
    "end": "1813660"
  },
  {
    "text": "these signature attacks where you're doing a man-in-the-middle attack by attacking the property that the server",
    "start": "1813660",
    "end": "1818820"
  },
  {
    "text": "still supports these old RSA encryption modes so even if you have TS 1.3 the",
    "start": "1818820",
    "end": "1825570"
  },
  {
    "text": "attack may still be possible in some circumstances so ideally just disable these modes if you can and then we",
    "start": "1825570",
    "end": "1835470"
  },
  {
    "text": "definitely recommend no longer use RSA with pkcs1 1.5 this is standard from the",
    "start": "1835470",
    "end": "1841650"
  },
  {
    "text": "90s it is many problems it also also if you use it for signatures there are",
    "start": "1841650",
    "end": "1846960"
  },
  {
    "text": "other problems with it and there's a more modern version of this pkcs standard purchased using something",
    "start": "1846960",
    "end": "1853200"
  },
  {
    "text": "called Oh a EP for encryption and PSS for Sigma",
    "start": "1853200",
    "end": "1858549"
  },
  {
    "text": "I think the first version has been published in 2001 and it's not really",
    "start": "1858549",
    "end": "1864010"
  },
  {
    "text": "clear why TLS doesn't use that until now it will use it appears 1.3 but yeah so",
    "start": "1864010",
    "end": "1870100"
  },
  {
    "text": "really don't use these legacy modes they have so many problems if you if you want to use RSA I mean you could of course",
    "start": "1870100",
    "end": "1877240"
  },
  {
    "text": "also use more modern crypto algorithms but if you want to use RSA in anything",
    "start": "1877240",
    "end": "1882580"
  },
  {
    "text": "new you build please use this more modern encryption most yeah so our",
    "start": "1882580",
    "end": "1891549"
  },
  {
    "text": "takeaways here is all the texture work you can win a pony award by recycling a",
    "start": "1891549",
    "end": "1898270"
  },
  {
    "text": "20 year old attack we recommend stop using the TLS RSA modes in TLS and stop",
    "start": "1898270",
    "end": "1906190"
  },
  {
    "text": "using pkcs1 1.5 yeah and also if you do",
    "start": "1906190",
    "end": "1911559"
  },
  {
    "text": "have a server that does support the tell us RSA ciphers but also supports forward",
    "start": "1911559",
    "end": "1917470"
  },
  {
    "text": "secrecy if somebody is able to do this attack fast enough they would be able to do a downgrade to force a client to use",
    "start": "1917470",
    "end": "1924730"
  },
  {
    "text": "TLS RSA ciphers yeah so yeah I think we",
    "start": "1924730",
    "end": "1931600"
  },
  {
    "text": "meant you have time for questions Thanks",
    "start": "1931600",
    "end": "1936480"
  },
  {
    "text": "[Applause]",
    "start": "1940740",
    "end": "1944640"
  }
]