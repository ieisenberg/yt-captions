[
  {
    "start": "0",
    "end": "10000"
  },
  {
    "text": "all right so we're gonna actually talk about the details of on-chip debug interfaces now so the two that jtagulator supports JTAG and UART and",
    "start": "0",
    "end": "7140"
  },
  {
    "text": "I'll give demos of each once once we go into kind of the details so JTAG is this",
    "start": "7140",
    "end": "12300"
  },
  {
    "start": "10000",
    "end": "61000"
  },
  {
    "text": "industry standard interface that is really this low-level definition that",
    "start": "12300",
    "end": "18150"
  },
  {
    "text": "was designed initially for chip level and system level testing during a",
    "start": "18150",
    "end": "23189"
  },
  {
    "text": "manufacturing process and it sort of expanded into being able to be used for",
    "start": "23189",
    "end": "28699"
  },
  {
    "text": "programming of parts for debugging of parts some vendors actually create",
    "start": "28699",
    "end": "34110"
  },
  {
    "text": "additional vendor specific functionality that can be that could be communicated",
    "start": "34110",
    "end": "39300"
  },
  {
    "text": "and controlled through JTAG so it's become sort of this Universal interface when it really started as just a very low-level specific interface to like",
    "start": "39300",
    "end": "47399"
  },
  {
    "text": "test the connections of pins on a circuit board what's really cool about JTAG is you can actually hijack all of",
    "start": "47399",
    "end": "55590"
  },
  {
    "text": "the pins on a device through something called called a boundary scan or you can individually control either outputs or",
    "start": "55590",
    "end": "63600"
  },
  {
    "start": "61000",
    "end": "118000"
  },
  {
    "text": "inputs of each pin so if you can twiddle",
    "start": "63600",
    "end": "69960"
  },
  {
    "text": "all of those pins you can now potentially communicate with other things that are connected to that device",
    "start": "69960",
    "end": "75840"
  },
  {
    "text": "that you're twiddling which is how you can like you know program external memory through controlling a chip in",
    "start": "75840",
    "end": "82140"
  },
  {
    "text": "JTAG also sometimes you know most devices now have internal memory so you can access internal memory through",
    "start": "82140",
    "end": "88320"
  },
  {
    "text": "through through JTAG so you can do standard programming standard debugging and a lot of this stuff too you can with",
    "start": "88320",
    "end": "96150"
  },
  {
    "text": "JTAG you can do some functionality without affecting the system operation at all so if we're doing an ID code scan",
    "start": "96150",
    "end": "103079"
  },
  {
    "text": "which we'll do or a bypass scan the the actual CPU operation the product is going to continue running because JTAG",
    "start": "103079",
    "end": "109439"
  },
  {
    "text": "is sort of its own specialized you know part of the silicon so it's really kind of neat you can start working with the",
    "start": "109439",
    "end": "115229"
  },
  {
    "text": "device while the things actually running and most of the time you won't mess anything up unless you end up doing you",
    "start": "115229",
    "end": "121439"
  },
  {
    "start": "118000",
    "end": "266000"
  },
  {
    "text": "know a debug command or programming command to halt the processor or something but it's you know it's a very powerful interface what's also",
    "start": "121439",
    "end": "128340"
  },
  {
    "text": "interesting about JTAG versus a lot of the industry standard or sorry vendors",
    "start": "128340",
    "end": "133530"
  },
  {
    "text": "specific interfaces is you can have multiple devices connected to a single chain so now you can have one JTAG",
    "start": "133530",
    "end": "139800"
  },
  {
    "text": "connection on the board that connects say two three or four different devices on a board maybe a CPU a baseband for a",
    "start": "139800",
    "end": "149760"
  },
  {
    "text": "mobile phone or something or it could be multiple chips within a single device so",
    "start": "149760",
    "end": "156090"
  },
  {
    "text": "now you look at a board and there might be you know two two dies inside of a single package and you don't know that there's two but if you do a JTAG scan",
    "start": "156090",
    "end": "163020"
  },
  {
    "text": "you'll say hey wait a second there's two devices there you can communicate with both of them so it just makes it easy you don't need to have multiple",
    "start": "163020",
    "end": "168410"
  },
  {
    "text": "connections for multiple devices on the board the vendor specific interfaces",
    "start": "168410",
    "end": "174330"
  },
  {
    "text": "that are out there so microchip has there in circuit serial programming interface Texas Instruments has their",
    "start": "174330",
    "end": "180230"
  },
  {
    "text": "spy by wire interface atmail has their isp interface every vendor has their own",
    "start": "180230",
    "end": "186030"
  },
  {
    "text": "kind of programming debug interface that they'll use if they don't use JTAG but",
    "start": "186030",
    "end": "192660"
  },
  {
    "text": "JTAG is just way more Universal the development environment for whatever",
    "start": "192660",
    "end": "198720"
  },
  {
    "text": "target processor we're looking at will abstract a lot of the low-level details",
    "start": "198720",
    "end": "203760"
  },
  {
    "text": "of JTAG which is great because all the detail I'll give you in this presentation is all that you really need",
    "start": "203760",
    "end": "209250"
  },
  {
    "text": "to care about just to understand how we're detecting the pin out and how we're detecting the interface but at",
    "start": "209250",
    "end": "215280"
  },
  {
    "text": "that point everything else is gonna be abstracted so once you find the interface that's our whole thing is once we can locate that interface we can rely",
    "start": "215280",
    "end": "221549"
  },
  {
    "text": "on the standard off-the-shelf development environment for that particular target chip and rely on",
    "start": "221549",
    "end": "227070"
  },
  {
    "text": "standard off-the-shelf JTAG hardware that's designed to do the JTAG communication usually what I tell people",
    "start": "227070",
    "end": "234209"
  },
  {
    "text": "is try to put yourself in the mindset of the legitimate engineer that designed the product so say if we if we're",
    "start": "234209",
    "end": "240510"
  },
  {
    "text": "looking on an access point it's a Broadcom BCM 4702 I would try to find out if there's a development environment",
    "start": "240510",
    "end": "247500"
  },
  {
    "text": "for the 4702 is there a recommended JTAG hardware to use for that architecture and I believe",
    "start": "247500",
    "end": "255510"
  },
  {
    "text": "that was an ARM based architecture so I'd probably find it on you know something that supports arm because then",
    "start": "255510",
    "end": "261450"
  },
  {
    "text": "everything is abstracted and we don't have to worry about low-level stuff anymore so that makes it",
    "start": "261450",
    "end": "267330"
  },
  {
    "start": "266000",
    "end": "279000"
  },
  {
    "text": "here's kind of a fun slide this is you know this is what happens if we if we get access to a target through JTAG we",
    "start": "267330",
    "end": "275070"
  },
  {
    "text": "control the entire thing so the",
    "start": "275070",
    "end": "282240"
  },
  {
    "start": "279000",
    "end": "360000"
  },
  {
    "text": "architecture is basically it's a tiny little state machine that can execute",
    "start": "282240",
    "end": "287330"
  },
  {
    "text": "instructions so sort of like a little little CPU and we're basically shifting data in and getting data out so it's",
    "start": "287330",
    "end": "294720"
  },
  {
    "text": "lots of shift registers the interface is a synchronous serial interface synchronous meaning that it requires an",
    "start": "294720",
    "end": "300240"
  },
  {
    "text": "external clock so there's four signals that are required data in data out mode selecting clock and the mode select is",
    "start": "300240",
    "end": "306360"
  },
  {
    "text": "what we use to go through the different states of the state machine and then we're just shifting data in and shifting data out there's an optional test reset",
    "start": "306360",
    "end": "313620"
  },
  {
    "text": "pin that some target boards use to asynchronously reset the JTAG or usually",
    "start": "313620",
    "end": "321810"
  },
  {
    "text": "what they mostly use it for is to disable JTAG just by pulling the pin low to keep the JTAG port in reset so",
    "start": "321810",
    "end": "329370"
  },
  {
    "text": "somebody can't just come up and attach to it so what I'm working on now and the the version I have released right now",
    "start": "329370",
    "end": "334830"
  },
  {
    "text": "looks for just TDI tdo TMS and TCK assuming that test reset isn't used or",
    "start": "334830",
    "end": "340740"
  },
  {
    "text": "that it's being held high which is also the case on some boards but the next version I'm working on will detect reset",
    "start": "340740",
    "end": "348300"
  },
  {
    "text": "as well so if it is being used we won't miss the interface because right now if test resets held low and we don't hook",
    "start": "348300",
    "end": "355260"
  },
  {
    "text": "up to it if we happen to miss that pin then we're not going to detect it so",
    "start": "355260",
    "end": "360800"
  },
  {
    "start": "360000",
    "end": "452000"
  },
  {
    "text": "yeah sometimes that's used but we can actually what wheat when we reset the TAF we can do it in a different way that",
    "start": "360800",
    "end": "365820"
  },
  {
    "text": "I'll show you for the test access port which is the the kind of CPU if you will",
    "start": "365820",
    "end": "370890"
  },
  {
    "text": "of JTAG has an instruction register that has to be greater than two bits per the spec usually it's like four five eight",
    "start": "370890",
    "end": "377790"
  },
  {
    "text": "bit wide instructions it can sort of be whatever the vendor wants and then for",
    "start": "377790",
    "end": "383400"
  },
  {
    "text": "the data so that's for sending instructions in then there's data registers and depending on the command",
    "start": "383400",
    "end": "388830"
  },
  {
    "text": "we send the tap will enable a different data register so there's one that's a bypass register which is what were you",
    "start": "388830",
    "end": "395280"
  },
  {
    "text": "what we use in our bypass scan to detect the JTAG interface where we send data in on TDI",
    "start": "395280",
    "end": "400770"
  },
  {
    "text": "and it comes out on t do one clock cycle later so it's just a pass-through and that that's useful if we want to access",
    "start": "400770",
    "end": "407039"
  },
  {
    "text": "like the second chip in a scan or in a chain we would use they'll enter the put",
    "start": "407039",
    "end": "412889"
  },
  {
    "text": "the first device in to bypass and then go to the second one so it's like you know just passes the data along boundary",
    "start": "412889",
    "end": "418740"
  },
  {
    "text": "scan depends on the number of pins or the chip and then device ID is an optional register but most vendors use",
    "start": "418740",
    "end": "424530"
  },
  {
    "text": "it and that's the other mode that we use to to try to determine the JTAG interface because on powerup are on",
    "start": "424530",
    "end": "431759"
  },
  {
    "text": "reset of the tap the 32 bit device ID is in the data register so what we could do",
    "start": "431759",
    "end": "436949"
  },
  {
    "text": "is say okay let's let's reset the tap try to shift data out of the data register and if there's a 32 bit value",
    "start": "436949",
    "end": "442590"
  },
  {
    "text": "in there that matches what it needs to be for a device ID then that's probably a good interface I have a block diagram",
    "start": "442590",
    "end": "451520"
  },
  {
    "text": "so I'm going to skip here's the here so this is sort of when you when you do a",
    "start": "451520",
    "end": "456780"
  },
  {
    "start": "452000",
    "end": "502000"
  },
  {
    "text": "search for JTAG like this is the picture that you most always see and this is the actual state machine and it looks really",
    "start": "456780",
    "end": "462599"
  },
  {
    "text": "complicated and the in the specification for JTAG is really really long and really really boring like any other spec",
    "start": "462599",
    "end": "468630"
  },
  {
    "text": "you read but once you distill it down and sort of digest it it's really not that complicated so what we do since",
    "start": "468630",
    "end": "475919"
  },
  {
    "text": "we're not sure the state of the of the JTAG port on the target is we always need to do a we always need to do a",
    "start": "475919",
    "end": "481500"
  },
  {
    "text": "reset and get back to the the test logic reset state and you can do that by holding TMS high for 5 clock cycles and",
    "start": "481500",
    "end": "489750"
  },
  {
    "text": "if you sort of follow where the where the high bit goes you always get back to the beginning so we're always able to",
    "start": "489750",
    "end": "495599"
  },
  {
    "text": "reset first and then continue with our continue with our operations there's a",
    "start": "495599",
    "end": "503430"
  },
  {
    "start": "502000",
    "end": "558000"
  },
  {
    "text": "bunch of instructions that are listed in the in the JTAG spec the only ones that we're looking at our bypass which is the",
    "start": "503430",
    "end": "510479"
  },
  {
    "text": "required instruction and then actually that's the only that's really the only one that worked that we're looking at",
    "start": "510479",
    "end": "515880"
  },
  {
    "text": "there are other ones as well that are some are requires a bypass is required there's a few others and there's some",
    "start": "515880",
    "end": "522060"
  },
  {
    "text": "that are optional but usually those are implemented and then there commands so there is actually an ID code opcode",
    "start": "522060",
    "end": "528199"
  },
  {
    "text": "that's specific to to some devices so instead of just shifting the ID ID code",
    "start": "528199",
    "end": "533910"
  },
  {
    "text": "out which is what do you can actually send an opcode and then get the data out but all that we don't need we don't need any of that",
    "start": "533910",
    "end": "539190"
  },
  {
    "text": "stuff bypass is the only one and that's required by the JTAG spec to be all an opcode of all ones for the instruction",
    "start": "539190",
    "end": "545310"
  },
  {
    "text": "register so no matter which chip you use if you shift all one's into the instruction register you can enable",
    "start": "545310",
    "end": "550740"
  },
  {
    "text": "bypass mode and that that way we can always force the device in the bypass mode even if we don't know what it is so",
    "start": "550740",
    "end": "558230"
  },
  {
    "start": "558000",
    "end": "625000"
  },
  {
    "text": "I talked about protection a little bit it is implementation specific if you do encounter a device that's password",
    "start": "558230",
    "end": "564300"
  },
  {
    "text": "protected there's no you know gold standard of how to defeat it you might be able to try to do some brute forcing",
    "start": "564300",
    "end": "570350"
  },
  {
    "text": "if there's a physical security fuse that's blown or a diode or something on",
    "start": "570350",
    "end": "575580"
  },
  {
    "text": "the die itself you might be able to decap the chip repair it Christoph's key is a good guy who can do that stuff from",
    "start": "575580",
    "end": "581940"
  },
  {
    "text": "fly logic which is now part of i/o active there's a handful of people that are really good at doing silicon die",
    "start": "581940",
    "end": "587400"
  },
  {
    "text": "hacking so maybe that's an option to physically repair that broken fuse on the die to re-enable the JTAG interface",
    "start": "587400",
    "end": "594380"
  },
  {
    "text": "basically if if there's JTAG support omlette on the chip itself on the die itself there's always a potential to",
    "start": "594380",
    "end": "601830"
  },
  {
    "text": "re-enable it and usually even if there is password protection bypass mode still",
    "start": "601830",
    "end": "609630"
  },
  {
    "text": "needs to be active because if you imagine if there's a few devices in the chain and if the first one is protected and you need to access a second one you",
    "start": "609630",
    "end": "615990"
  },
  {
    "text": "still need to have bypass so we can take advantage of that would still be able to find the interface which is great and",
    "start": "615990",
    "end": "621000"
  },
  {
    "text": "then maybe we can devise an attack or something to try to actually defeat the protection so there they're a bunch of",
    "start": "621000",
    "end": "627780"
  },
  {
    "text": "off-the-shelf hardware tools available and I mentioned once we find the pin out relying on existing tools is the way to",
    "start": "627780",
    "end": "634260"
  },
  {
    "text": "go there's no point in recreating the wheel with the jtagulator really all we need to do is find that interface and",
    "start": "634260",
    "end": "640170"
  },
  {
    "text": "we're good to go there's a bunch of software tools some open source tools as well so again if",
    "start": "640170",
    "end": "645600"
  },
  {
    "start": "641000",
    "end": "662000"
  },
  {
    "text": "you can use the same development environment that a normal engineer would use with the chip that's sort of the",
    "start": "645600",
    "end": "651930"
  },
  {
    "text": "best way to go but if you need to you could use some open source tools as well that are designed to manipulate",
    "start": "651930",
    "end": "657240"
  },
  {
    "text": "different types of processors and extract memory and stuff like that",
    "start": "657240",
    "end": "662510"
  },
  {
    "start": "662000",
    "end": "689000"
  },
  {
    "text": "so here's the here's the ID code scan this is one of the two methods of detecting the interface",
    "start": "663020",
    "end": "668430"
  },
  {
    "text": "with ID code once you reset the tap if there is a device ID available it's",
    "start": "668430",
    "end": "674069"
  },
  {
    "text": "gonna be in the data register so all we do is reset the tap and then clock out data and see if anything comes out if it",
    "start": "674069",
    "end": "684540"
  },
  {
    "text": "does then we know that that's you know if it matches the device ID format which",
    "start": "684540",
    "end": "690509"
  },
  {
    "start": "689000",
    "end": "772000"
  },
  {
    "text": "has least significant bit as one then that's potentially a valid device ID and",
    "start": "690509",
    "end": "695790"
  },
  {
    "text": "the device ID is gonna vary with with part number with family with vendor usually it's documented within the",
    "start": "695790",
    "end": "701699"
  },
  {
    "text": "datasheet of the part or maybe in a bsdl file which are used for for JTAG connection as a boundary scan",
    "start": "701699",
    "end": "707189"
  },
  {
    "text": "description language so if you usually what I'll do is and I'll show you this when I give the demo is when you get the",
    "start": "707189",
    "end": "712889"
  },
  {
    "text": "ID code if you do successfully find one then you just do a Google search for that ID code and it will probably come",
    "start": "712889",
    "end": "718230"
  },
  {
    "text": "up with some website telling you what what the part is which is cool and then you can validate and verify that you",
    "start": "718230",
    "end": "723269"
  },
  {
    "text": "have the right one the manufacturer ID portion of the device ID is is given out",
    "start": "723269",
    "end": "728850"
  },
  {
    "text": "by J deck a standards organization so if you don't find anything online you could at least take the manufacture ID version",
    "start": "728850",
    "end": "735449"
  },
  {
    "text": "or ssin go to their website grab the free pdf and look and you know verify that oh it is a Qualcomm chip or it is a",
    "start": "735449",
    "end": "742050"
  },
  {
    "text": "Motorola chip and know that you've you know gotten a correct ID code so the way",
    "start": "742050",
    "end": "748499"
  },
  {
    "text": "that we that it works is we basically go through every possible pin permutation and and you know set what we think might",
    "start": "748499",
    "end": "756839"
  },
  {
    "text": "be TDI or what we think might be t do what we think might be TMS what we think might be",
    "start": "756839",
    "end": "761970"
  },
  {
    "text": "TCK and try it and if we get a device ID out then we then we print out that result and then keep trying over and",
    "start": "761970",
    "end": "767579"
  },
  {
    "text": "over again if the device ID is invalid we just skip it for bypass scan what",
    "start": "767579",
    "end": "774509"
  },
  {
    "start": "772000",
    "end": "835000"
  },
  {
    "text": "we're doing is shifting 32 bits of data in and seeing if we get 32 bits of data",
    "start": "774509",
    "end": "780959"
  },
  {
    "text": "out and at the same time as we're doing that we're trying to determine how many",
    "start": "780959",
    "end": "787949"
  },
  {
    "text": "devices there are in the chain and so what we do in bypass scan is we basically just flush as many ones we",
    "start": "787949",
    "end": "794579"
  },
  {
    "text": "just send a ton of ones down down the line I think we have 30 32 I can support",
    "start": "794579",
    "end": "800250"
  },
  {
    "text": "up to 32 devices and I think I 128 bits per device so it's a lot of ones that I'm shifting through a chain",
    "start": "800250",
    "end": "807300"
  },
  {
    "text": "because we don't know how long the chain is either right so we have to shift a bunch of ones in to try to force every device in the bypass mode and then I",
    "start": "807300",
    "end": "813900"
  },
  {
    "text": "send one zero in on TDI or what I think is TDI clock it and see if I see a zero",
    "start": "813900",
    "end": "820890"
  },
  {
    "text": "come out eventually on what I think might be T do so it takes a longer time because I'm sort of shifting and I'm",
    "start": "820890",
    "end": "825990"
  },
  {
    "text": "waiting and listening and waiting for a zero to come down the line that might not ever show up so it just takes a little bit longer but as you'll see from",
    "start": "825990",
    "end": "832050"
  },
  {
    "text": "the timing it's really not that much longer yeah so that's basically the",
    "start": "832050",
    "end": "837270"
  },
  {
    "text": "process is just you know resetting the tap performing this interrogation and hopefully we find if we if we get the",
    "start": "837270",
    "end": "842490"
  },
  {
    "text": "same 32 bits out then we know was pretty good certainty that that's going to be a valid interface so here's the timing",
    "start": "842490",
    "end": "849870"
  },
  {
    "start": "848000",
    "end": "930000"
  },
  {
    "text": "with ID code it's pretty fast we're actually not concerned with TDI with data in right because we're only we're",
    "start": "849870",
    "end": "857070"
  },
  {
    "text": "resetting the tap and only reading data out so we're only looking for three of the four pins so it's a lot faster 264",
    "start": "857070",
    "end": "863700"
  },
  {
    "text": "permutations a second but the problem is then you still need the other pin you still need TDI so usually what I'll do",
    "start": "863700",
    "end": "869940"
  },
  {
    "text": "is run an ID code scan first to verify that there is a JTAG interface and then once I know there is one then I can do",
    "start": "869940",
    "end": "876750"
  },
  {
    "text": "the bypass scan to get that you know to get TDI to get that final pin for the",
    "start": "876750",
    "end": "881880"
  },
  {
    "text": "bypass scan thirteen point three seven permutations per second just happened that way totally leet and the reason",
    "start": "881880",
    "end": "891210"
  },
  {
    "text": "it's so much slower is because we have to deal with TDI and we have to shift in all of these different bits but still if",
    "start": "891210",
    "end": "897420"
  },
  {
    "text": "you look at it like I don't know say we had eight channels hooked up eight unknown test points on the board two",
    "start": "897420",
    "end": "902880"
  },
  {
    "text": "seconds to do an ID code scan even less than a minute for 24 channels but then",
    "start": "902880",
    "end": "907920"
  },
  {
    "text": "if you look over here if we had 24 channels for bypass almost 255,000 permutations I think it's around a",
    "start": "907920",
    "end": "915180"
  },
  {
    "text": "little more than five hours so that's something where you'd set it up take a long lunch break and come back and it would be done and that's why you",
    "start": "915180",
    "end": "921990"
  },
  {
    "text": "know you'd want to test with ID code scan first but maybe sometimes you know if the ID code is not used in the chip",
    "start": "921990",
    "end": "927030"
  },
  {
    "text": "you have to use bypass scan first okay so I'm gonna give oh yeah so I have some",
    "start": "927030",
    "end": "933300"
  },
  {
    "text": "examples first just just show you to see how them on paper the slides are available on the DVD also on",
    "start": "933300",
    "end": "938610"
  },
  {
    "start": "934000",
    "end": "952000"
  },
  {
    "text": "my website the DEF CON badge I'm gonna give a demo with this one just showing",
    "start": "938610",
    "end": "943680"
  },
  {
    "text": "the ID code and I found this bsdl file that showed the pin out or showed the",
    "start": "943680",
    "end": "948779"
  },
  {
    "text": "the format so I could you know compare it here's one of Linksys wrt54g I have",
    "start": "948779",
    "end": "954720"
  },
  {
    "start": "952000",
    "end": "960000"
  },
  {
    "text": "that here too I'll give a demo of that one a Broadcom chip another access point",
    "start": "954720",
    "end": "962279"
  },
  {
    "start": "960000",
    "end": "966000"
  },
  {
    "text": "of Samsung I just want to put these in his reference there's lots of them and I just have a handful of boards at home",
    "start": "962279",
    "end": "968130"
  },
  {
    "start": "966000",
    "end": "975000"
  },
  {
    "text": "that I that I test on here's a here's a Cpl D a programmable logic device that has a JTAG interface if I was kind of",
    "start": "968130",
    "end": "974130"
  },
  {
    "text": "neat here's a mobile phone samsung SCH i 9/10 what was interesting about this one",
    "start": "974130",
    "end": "980699"
  },
  {
    "start": "975000",
    "end": "1030000"
  },
  {
    "text": "is when and I'm not exactly sure how how",
    "start": "980699",
    "end": "987269"
  },
  {
    "text": "this works but when I when I'm powering the phone with like a with a wall wart",
    "start": "987269",
    "end": "992910"
  },
  {
    "text": "like a pet with the charger or if it's on with the battery like if it's actually on and it shows a screen",
    "start": "992910",
    "end": "999560"
  },
  {
    "text": "JTAG is disabled if i turn the phone off and i remove the power plug then JTAG",
    "start": "999560",
    "end": "1006350"
  },
  {
    "text": "will will work so I don't know if that's like an intentional security mechanism",
    "start": "1006350",
    "end": "1012079"
  },
  {
    "text": "or something where the you know I'm not sure so at first it wasn't working I'm like well why is that and I unplug it",
    "start": "1012079",
    "end": "1017240"
  },
  {
    "text": "and it worked I was like what that's really weird and I did a search and there's like some some phone hacking web sites that have mentioned similar things",
    "start": "1017240",
    "end": "1023209"
  },
  {
    "text": "so I don't I just don't know if it's intentional or not but it was sort of interesting so sometimes you kind of have to play around with stuff like that",
    "start": "1023209",
    "end": "1028640"
  },
  {
    "text": "to to uncover the secrets okay so i'll give a demonstration of the JTAG portion",
    "start": "1028640",
    "end": "1033949"
  },
  {
    "start": "1030000",
    "end": "1360000"
  },
  {
    "text": "now and then we'll talk about you are next so let's switch to the to the camera for a second just I can show the setup",
    "start": "1033949",
    "end": "1041020"
  },
  {
    "text": "little manual camera switching action",
    "start": "1047880",
    "end": "1052380"
  },
  {
    "text": "okay",
    "start": "1062570",
    "end": "1065110"
  },
  {
    "text": "okay it's a little bit fuzzy but just so just so I don't have to you know hold hold things up this uh so here's the",
    "start": "1075070",
    "end": "1081850"
  },
  {
    "text": "jtagulator what I have is I'm using the screw terminal blocks and I put a little",
    "start": "1081850",
    "end": "1089140"
  },
  {
    "text": "five pin header in here just for the first demo I always like to make sure the demo is gonna work before I start doing other demos so I have a little 5",
    "start": "1089140",
    "end": "1095710"
  },
  {
    "text": "pin header here and then I have a cable connected to this DEFCON badge which is",
    "start": "1095710",
    "end": "1103420"
  },
  {
    "text": "an MMC 56 F 8000 or MCMC 56 to have 8006",
    "start": "1103420",
    "end": "1110370"
  },
  {
    "text": "digital single controller that has JTAG and I had designed this this DEFCON badge a few years ago this was DEFCON 17",
    "start": "1110370",
    "end": "1116860"
  },
  {
    "text": "and just happened to have a JTAG interface and I had brought out the JTAG pins to test test points on the board so",
    "start": "1116860",
    "end": "1125350"
  },
  {
    "text": "for the demo I said okay well this way I'll just make a little cable why are the test points to a cable so everything",
    "start": "1125350",
    "end": "1131140"
  },
  {
    "text": "is kind of hard coded so I'll give that demo first I'm just gonna plug that into I plug that into the jtagulator which is",
    "start": "1131140",
    "end": "1138910"
  },
  {
    "text": "ground channel 0 channel 1 channel 2 channel 3 and then the next demo I'll actually use I'm not gonna switch back",
    "start": "1138910",
    "end": "1146200"
  },
  {
    "text": "to the camera mode for it but I have this Linksys device where I have a JTAG port on some of the pins and then a you",
    "start": "1146200",
    "end": "1152890"
  },
  {
    "text": "are on other with just discrete wires and this is normally how you would do it you would just have discrete wires",
    "start": "1152890",
    "end": "1158310"
  },
  {
    "text": "soldered down or connected up and you just arbitrarily connect those to the device so we'll do that we'll do that",
    "start": "1158310",
    "end": "1165610"
  },
  {
    "text": "next so first let's go back to the to the normal screen and I'll have my terminal program",
    "start": "1165610",
    "end": "1172470"
  },
  {
    "text": "okay everyone tilt their heads good okay",
    "start": "1186750",
    "end": "1192789"
  },
  {
    "text": "so here's the terminal program I already have plugged in the jtagulator and on",
    "start": "1192789",
    "end": "1198700"
  },
  {
    "text": "reset what you'll see",
    "start": "1198700",
    "end": "1202919"
  },
  {
    "text": "oops",
    "start": "1214800",
    "end": "1217430"
  },
  {
    "text": "make sure have the right serial port",
    "start": "1222590",
    "end": "1226360"
  },
  {
    "text": "okay didn't have the right see report so on reset get a little header with some",
    "start": "1236680",
    "end": "1243430"
  },
  {
    "text": "information if you hit return the command the the colon is the command prompt so you just hit return we see",
    "start": "1243430",
    "end": "1249820"
  },
  {
    "text": "question mark invalid command hit H we can actually see the different commands that we have available right now the",
    "start": "1249820",
    "end": "1255490"
  },
  {
    "text": "first thing that we need to do is set the target voltage target system voltage so we're doing the cr2032 battery so",
    "start": "1255490",
    "end": "1262120"
  },
  {
    "text": "it's a 3 volt sweetie 3.0 new target voltage set and now we'll do identify",
    "start": "1262120",
    "end": "1270040"
  },
  {
    "text": "JTAG Pinto so we'll do the ID code scan first and then we'll do a bypass scan so",
    "start": "1270040",
    "end": "1275980"
  },
  {
    "text": "identify pin out include optional reset pin so this version of code that I'm running right now is is the development",
    "start": "1275980",
    "end": "1283870"
  },
  {
    "text": "version I'm using to add the new reset functionality which I started doing last night so we're just gonna say no because",
    "start": "1283870",
    "end": "1289780"
  },
  {
    "text": "we're not using that right now enter a number of channels to use so I have 4 channels connected 4 pins connected and",
    "start": "1289780",
    "end": "1297220"
  },
  {
    "text": "it says ensure connections are on CH 3 to CH 0 which they are 24 possible",
    "start": "1297220",
    "end": "1302350"
  },
  {
    "text": "permutations I'll hit spacebar and then you know pretty much right away there is the pin",
    "start": "1302350",
    "end": "1307960"
  },
  {
    "text": "out but we don't know TDI it says na not available but we CT do TC k and TMS",
    "start": "1307960",
    "end": "1313060"
  },
  {
    "text": "that's pretty cool we can actually verify that I believe it's the D command",
    "start": "1313060",
    "end": "1319440"
  },
  {
    "text": "so TDI not needed to retrieve the device ID so now it says enter new and Artie do pimp's that's gonna be pin 3 pin 1 pin 2",
    "start": "1320070",
    "end": "1330300"
  },
  {
    "text": "that's what we just got from the scan 1 device in the chain and there's a device",
    "start": "1330300",
    "end": "1337150"
  },
  {
    "text": "ID now the number of devices in the chain normally I would do a bypass scan first it would tell me the device ID I'll do that next I just want to do the",
    "start": "1337150",
    "end": "1343690"
  },
  {
    "text": "ID code or you could see here's the ID code 0 1 C 0 6 0 1 D so then what you",
    "start": "1343690",
    "end": "1352750"
  },
  {
    "text": "would do is go to go to Google and look that up and see what there is so I don't have internet access but I actually",
    "start": "1352750",
    "end": "1357760"
  },
  {
    "text": "loaded loaded this beforehand so when you do that you'll see stuff like this",
    "start": "1357760",
    "end": "1363220"
  },
  {
    "text": "here's a bsdl file thats that says you know information there it is so it's MC 56 F 8006 and then once you know that",
    "start": "1363220",
    "end": "1370630"
  },
  {
    "text": "then you can go and grab the datasheet of the part from the manufacturer and start reading and more and continuing down your down your of your hardware",
    "start": "1370630",
    "end": "1376330"
  },
  {
    "text": "hacking path that's ID code let's do a",
    "start": "1376330",
    "end": "1385180"
  },
  {
    "text": "bypass scan which would be no now you'll",
    "start": "1385180",
    "end": "1393610"
  },
  {
    "text": "notice it says that the minimum number of pins is now four instead of three because now we have to look for TD TDI",
    "start": "1393610",
    "end": "1400000"
  },
  {
    "text": "as well so four channels still 24 possible permutations spacebar begin so you saw",
    "start": "1400000",
    "end": "1406240"
  },
  {
    "text": "it took like a slight slight bit of extra time number of devices detected one so that's how we know one device in",
    "start": "1406240",
    "end": "1412600"
  },
  {
    "text": "the chain and there's pin 0 is TDI so now we have the full the full scan and",
    "start": "1412600",
    "end": "1417850"
  },
  {
    "text": "we can validate that with the test bypass and when you hit Enter it saves",
    "start": "1417850",
    "end": "1424900"
  },
  {
    "text": "the default value or it saves the most recent value so you don't have to keep retyping stuff you can just hit enter to skip it up to skip it so TDI 0t do three",
    "start": "1424900",
    "end": "1434640"
  },
  {
    "text": "one two one device in the chain so match pattern in pattern out match you know we",
    "start": "1434640",
    "end": "1441190"
  },
  {
    "text": "can like do it again and just hit enter for everything and it will be different 32-bit values being set so now we know",
    "start": "1441190",
    "end": "1448180"
  },
  {
    "text": "that's that's the valid jtag port and now we can continue on with our attack",
    "start": "1448180",
    "end": "1453659"
  },
  {
    "text": "so let's do it with the with this Linksys wrt54g version two just for fun",
    "start": "1453870",
    "end": "1462400"
  },
  {
    "text": "I'm gonna disable the target voltage to zero target voltage off now I'm going to",
    "start": "1462400",
    "end": "1467710"
  },
  {
    "text": "connect up the new one now the the one thing you do need to do is make sure that you have a shared ground between",
    "start": "1467710",
    "end": "1474370"
  },
  {
    "text": "the systems sort of a reference zero volt reference between the two so you will at least need to do that reverse",
    "start": "1474370",
    "end": "1480130"
  },
  {
    "text": "engineering to figure out where ground is to share otherwise it they're not gonna be able communicate properly so",
    "start": "1480130",
    "end": "1486130"
  },
  {
    "text": "I'm gonna connect ground and then these are I'm just gonna arbitrarily plug in",
    "start": "1486130",
    "end": "1492760"
  },
  {
    "text": "these four pins from this connector I don't know what they are",
    "start": "1492760",
    "end": "1498570"
  },
  {
    "text": "didn't wanna fit in there there okay so now I have the four wires from this unknown connector plugged into the",
    "start": "1507300",
    "end": "1513060"
  },
  {
    "text": "jtagulator and the seat it's all powered on so I should be able to now set the",
    "start": "1513060",
    "end": "1520200"
  },
  {
    "text": "target voltage I think the target voltage for the for the router is three point three but we'll see if that's",
    "start": "1520200",
    "end": "1527010"
  },
  {
    "text": "right so now we'll do an ID code ID code scan no we don't want the reset number",
    "start": "1527010",
    "end": "1533100"
  },
  {
    "text": "of channels I have one two three okay so I still have four space bar and then",
    "start": "1533100",
    "end": "1541200"
  },
  {
    "text": "right away so TDI we don't know and then one two and zero so let's do a bypass scan no yeah so now we know TDI TDI spin",
    "start": "1541200",
    "end": "1555180"
  },
  {
    "text": "and three one teaser so if I actually just to prove that I'm not faking this I'll switch some of the pins okay now",
    "start": "1555180",
    "end": "1567480"
  },
  {
    "text": "let's do it again what was that bypassed can't oops bypass",
    "start": "1567480",
    "end": "1573930"
  },
  {
    "text": "scan no four channels calculating two",
    "start": "1573930",
    "end": "1581520"
  },
  {
    "text": "one three zero so it was what three two one zero or something I know it now it's",
    "start": "1581520",
    "end": "1587730"
  },
  {
    "text": "different so 3 1 2 0 and 2 1 3 0 so it's",
    "start": "1587730",
    "end": "1593580"
  },
  {
    "text": "gonna work no matter you know how you plug in the connections okay so that's um that's the JTAG scan i'll go back to",
    "start": "1593580",
    "end": "1602970"
  },
  {
    "text": "the slides and I'll show you UART",
    "start": "1602970",
    "end": "1606500"
  },
  {
    "text": "okay so this was function this is the the the second protocol that I added to",
    "start": "1612250",
    "end": "1617710"
  },
  {
    "text": "the jtagulator originally it was just J tagging and this is the next thing and I have a whole list of other interfaces so you are it is a very common interface",
    "start": "1617710",
    "end": "1625270"
  },
  {
    "text": "for debug and for communicating to a to a device it's an asynchronous serial interface so when we think about serial",
    "start": "1625270",
    "end": "1632380"
  },
  {
    "text": "ports this is this is what it is a you are a synchronous receiver and",
    "start": "1632380",
    "end": "1637419"
  },
  {
    "text": "transmitter so asynchronous meaning there's no external clock so the signal itself has the timing kind of associated",
    "start": "1637419",
    "end": "1644230"
  },
  {
    "text": "with it so you have to have the correct baud rate in order to correctly identify the data and here's sort of a spec you",
    "start": "1644230",
    "end": "1654130"
  },
  {
    "start": "1651000",
    "end": "1674000"
  },
  {
    "text": "have a start bit 5 to 8 data bits and then a stop bit and looking at UART data is sort of the more you look at it the",
    "start": "1654130",
    "end": "1661510"
  },
  {
    "text": "more obvious it that it's asynchronous serial versus some other signals so if you're probing a board you might be able",
    "start": "1661510",
    "end": "1667090"
  },
  {
    "text": "to take a guess and go oh I think that's a UART but in most cases you know being able to automatically detect it will be",
    "start": "1667090",
    "end": "1672760"
  },
  {
    "text": "easier the most commonly used pins these days are just TX and rx just transmit",
    "start": "1672760",
    "end": "1679090"
  },
  {
    "start": "1674000",
    "end": "1723000"
  },
  {
    "text": "and receive back in the day we had a bunch of different control signals that were used for handshaking and making",
    "start": "1679090",
    "end": "1684669"
  },
  {
    "text": "sure that the systems you know one system was ready to receive data from the other and there's sort of all these incompatibilities but nowadays TX and rx",
    "start": "1684669",
    "end": "1692470"
  },
  {
    "text": "are usually what you see so on a on an embedded system say an Access Point which I'll give you the demo of you",
    "start": "1692470",
    "end": "1698409"
  },
  {
    "text": "usually see something like power tx/rx ground as as a 4 a 4 pin connector for",
    "start": "1698409",
    "end": "1706210"
  },
  {
    "text": "example even though they don't really need power usually it's on the connector or other times it's not but TX and rx",
    "start": "1706210",
    "end": "1712030"
  },
  {
    "text": "those are the ones and those are the only ones that we're looking at we're not trying to find these other control signals lots of embedded systems are",
    "start": "1712030",
    "end": "1717220"
  },
  {
    "text": "using UART for debug outputs for root shells and stuff and I'll show you an example and I'll show you a real demo as",
    "start": "1717220",
    "end": "1723010"
  },
  {
    "text": "well so here's what it looks like if you do probe on a board and look at an asynchronous serial data stream it just",
    "start": "1723010",
    "end": "1731200"
  },
  {
    "text": "kind of looks like that the important thing and the way that we can figure out the baud rate is by measuring the bit",
    "start": "1731200",
    "end": "1736600"
  },
  {
    "text": "width which is the narrowest portion of the wave the narrowest transition so in",
    "start": "1736600",
    "end": "1742990"
  },
  {
    "text": "our case you can see there's some small so small pieces ends up being around 8.7",
    "start": "1742990",
    "end": "1749230"
  },
  {
    "text": "microseconds if you do one over 8.7 you end up getting around 115 0.2 kilobits a",
    "start": "1749230",
    "end": "1756340"
  },
  {
    "text": "second it's actually a hundred and fourteen point nine which is within the standard kind of deviation or within the",
    "start": "1756340",
    "end": "1763390"
  },
  {
    "text": "tolerance of rs-232 400 serial for one hundred fifteen point two kilobits per second so normally we would take a",
    "start": "1763390",
    "end": "1769570"
  },
  {
    "text": "measurement of the bit width and then set our terminal program to the nearest standard baud rate and that's basically",
    "start": "1769570",
    "end": "1776320"
  },
  {
    "text": "what uh yeah that's how you would that's how you would manually figure out you",
    "start": "1776320",
    "end": "1782590"
  },
  {
    "start": "1782000",
    "end": "1825000"
  },
  {
    "text": "are but in our case what we're doing is we're just setting up the standard configuration 8 data bits one stop bit",
    "start": "1782590",
    "end": "1787930"
  },
  {
    "text": "eight and one and we have a bunch of standard baud rates stored in a lookup table so all of these it is possible for",
    "start": "1787930",
    "end": "1795070"
  },
  {
    "text": "a vendor to be tricky and use like a non-standard baud rate which in our case since we're doing a table lookup we",
    "start": "1795070",
    "end": "1801400"
  },
  {
    "text": "might not see it but the cool thing about asynchronous data is even though we might not see the exact data we might",
    "start": "1801400",
    "end": "1808480"
  },
  {
    "text": "still see a response of some sort and you'll see in the demo other like different baud rates are gonna show you",
    "start": "1808480",
    "end": "1813970"
  },
  {
    "text": "maybe maybe it's junk but at least you know that you see a signal on that pin and then you could always go and use the",
    "start": "1813970",
    "end": "1819250"
  },
  {
    "text": "oscilloscope to figure it out so even if a vendor is trying to obfuscate it you'll be able to find it most of the time so the scan what we do is we ask",
    "start": "1819250",
    "end": "1828400"
  },
  {
    "start": "1825000",
    "end": "1894000"
  },
  {
    "text": "the user for a desired string and normally it's just carriage return you",
    "start": "1828400",
    "end": "1833530"
  },
  {
    "text": "know it's like when you connect up to a system you'd usually hit Enter or something to try to wake up the system maybe you know that the system requires",
    "start": "1833530",
    "end": "1840730"
  },
  {
    "text": "some other sequence some other key keystrokes so you have up to sixteen bytes that you can actually enter what",
    "start": "1840730",
    "end": "1847570"
  },
  {
    "text": "you want it to send on what you think the TX pin is and then we're gonna look for responses and what we think the RX",
    "start": "1847570",
    "end": "1853990"
  },
  {
    "text": "pin is and then we try all the different permutations so that's basically what we do what we do as well since we're",
    "start": "1853990",
    "end": "1859420"
  },
  {
    "text": "sending a string we're gonna wait up to 20 milliseconds to receive a byte back which is pretty long in computer time",
    "start": "1859420",
    "end": "1865000"
  },
  {
    "text": "and if you don't get a response back on that pin within 20 milliseconds and we just assume that it's not not a valid",
    "start": "1865000",
    "end": "1871690"
  },
  {
    "text": "you are if there are any bytes that received we're gonna see six the first",
    "start": "1871690",
    "end": "1877810"
  },
  {
    "text": "16 bytes that the system's the target is sending back to us and again as you'll see different if it's",
    "start": "1877810",
    "end": "1884350"
  },
  {
    "text": "not the valid baud rate you might still see data and then the human you will go through and choose the one that seems to",
    "start": "1884350",
    "end": "1889900"
  },
  {
    "text": "be the most valid one or try you know try those but at least you have that pin out and that's the key here's an example",
    "start": "1889900",
    "end": "1896800"
  },
  {
    "start": "1894000",
    "end": "1935000"
  },
  {
    "text": "of the of the UART scan so I have a defined string or as I can't remember",
    "start": "1896800",
    "end": "1902410"
  },
  {
    "text": "what it was I think yeah so my defined string I think was hello is what I'm transmitting at at different baud rates",
    "start": "1902410",
    "end": "1908470"
  },
  {
    "text": "so I have my oscilloscope set up with digital decoding at a certain baud rate and I'm trying all the different baud",
    "start": "1908470",
    "end": "1914380"
  },
  {
    "text": "rates as TX so I'm sending hello as my",
    "start": "1914380",
    "end": "1919480"
  },
  {
    "text": "string to the target different broad rates and then let's see let's wait until so there's that one baud rate",
    "start": "1919480",
    "end": "1925090"
  },
  {
    "text": "where we get a response back and that's basically what we're doing is we're just reading that received line till we see some data so for the speed since we only",
    "start": "1925090",
    "end": "1937120"
  },
  {
    "start": "1935000",
    "end": "1948000"
  },
  {
    "text": "have to locate two pins it ends up being about one permutation a second so ten minutes at the most",
    "start": "1937120",
    "end": "1943560"
  },
  {
    "text": "not too bad I have two examples so the",
    "start": "1943560",
    "end": "1949480"
  },
  {
    "start": "1948000",
    "end": "1965000"
  },
  {
    "text": "same broad Comley that are the Linksys wrt54g the same one we just did the JTAG test on also has a UART on a separate",
    "start": "1949480",
    "end": "1956200"
  },
  {
    "text": "set of pins so the you are or that the JTAG was here here's the UART and I'll",
    "start": "1956200",
    "end": "1962890"
  },
  {
    "text": "show you I'll give you demo that one here's another example here's a set-top",
    "start": "1962890",
    "end": "1968020"
  },
  {
    "start": "1965000",
    "end": "2014000"
  },
  {
    "text": "box from from Israel and a student had",
    "start": "1968020",
    "end": "1973510"
  },
  {
    "text": "come to one of my hardware hacking classes and said hey I've heard that there's a some sort of root shell interface on here but I don't know where",
    "start": "1973510",
    "end": "1980650"
  },
  {
    "text": "it is can we find it so we sort of went through the process of looking on the board identifying the interfaces looking",
    "start": "1980650",
    "end": "1986740"
  },
  {
    "text": "for the you know the very obvious connectors and then poking around with",
    "start": "1986740",
    "end": "1992770"
  },
  {
    "text": "our oscilloscope to find out which one it was now if I had the UART detection functionality done on the jtagulator we",
    "start": "1992770",
    "end": "1999070"
  },
  {
    "text": "could have just hooked up you know test points hooked all those up to the jtagulator and how to do it automatically but we didn't once we",
    "start": "1999070",
    "end": "2005940"
  },
  {
    "text": "ended up finding the correct pin out we had to use a level shifter which had an",
    "start": "2005940",
    "end": "2011070"
  },
  {
    "text": "FTDI part on it so USB to serial adapter hook that up to a terminal program we",
    "start": "2011070",
    "end": "2016230"
  },
  {
    "start": "2014000",
    "end": "2031000"
  },
  {
    "text": "got the baud rate right and then we can see it's this you know boot up screen with you boot and stuff which is pretty",
    "start": "2016230",
    "end": "2021899"
  },
  {
    "text": "cool so that was more of a manual process I'll show you now how you can do it with the jtagulator that is way",
    "start": "2021899",
    "end": "2027809"
  },
  {
    "text": "cooler and requires just less less hassle",
    "start": "2027809",
    "end": "2032480"
  },
  {
    "text": "okay so let's switch actually you know you know what you don't even need to",
    "start": "2032870",
    "end": "2037919"
  },
  {
    "text": "switch that you're okay I realize I can",
    "start": "2037919",
    "end": "2043919"
  },
  {
    "text": "just use the terminal program you know switch back to the slides please all I'm",
    "start": "2043919",
    "end": "2050790"
  },
  {
    "text": "doing here you don't really need to see this on the on the screen I'm disconnecting the JTAG cables and I have",
    "start": "2050790",
    "end": "2057330"
  },
  {
    "text": "a bunch connected to the UART which now I know is the UART but I'll remember what the pins are anything so I'm just",
    "start": "2057330",
    "end": "2063300"
  },
  {
    "text": "gonna connect these connect these up so there's it's a it's a 2 by 5 row header",
    "start": "2063300",
    "end": "2069179"
  },
  {
    "text": "but one side I'm looking at one side and so there's five pins I have ground",
    "start": "2069179",
    "end": "2075929"
  },
  {
    "text": "hooked up and then I have four other pins so I'm gonna connect those two CH 0 1 2 & 3 just like I did before and I",
    "start": "2075929",
    "end": "2083398"
  },
  {
    "text": "don't care how they how they go in",
    "start": "2083399",
    "end": "2086780"
  },
  {
    "text": "let's reset the device just to be safe okay so now we're in cool term I think",
    "start": "2092850",
    "end": "2100440"
  },
  {
    "text": "the settings are probably still the same yes so still we're set at 3.3 volts so now I have things hooked up to the UART",
    "start": "2100440",
    "end": "2108650"
  },
  {
    "text": "and okay so now all we do is identify UART text screen we're just going to use",
    "start": "2108650",
    "end": "2114990"
  },
  {
    "text": "carriage return as our text string to stamp to send number of channels we have",
    "start": "2114990",
    "end": "2121100"
  },
  {
    "text": "four twelve possible permutations press",
    "start": "2121100",
    "end": "2127020"
  },
  {
    "text": "spacebar let's see if anything comes up",
    "start": "2127020",
    "end": "2133220"
  },
  {
    "text": "and you see those little dashes that were coming that was another feature I just added to kind of show progress indicator and then all of a sudden we",
    "start": "2141620",
    "end": "2147650"
  },
  {
    "text": "get this massive dump of responses and you can see the TX and rx they're all the same in three four TX pin two for rx",
    "start": "2147650",
    "end": "2157720"
  },
  {
    "text": "but for different baud rates we're seeing different data coming back now since we don't know what type of data",
    "start": "2157720",
    "end": "2163940"
  },
  {
    "text": "we're expecting back from the target a lot of times at least the jtagulator doesn't know if it's supposed to be printable ASCII or if it's supposed to",
    "start": "2163940",
    "end": "2170330"
  },
  {
    "text": "be something else this is where the user comes in to actually go through manually and determine if that's a likely",
    "start": "2170330",
    "end": "2176630"
  },
  {
    "text": "scenario and if that's worth checking out more so we can go through and see if we see any any bites that might be that",
    "start": "2176630",
    "end": "2183680"
  },
  {
    "text": "might you know be something useful so to go through we see 57 six has zero D",
    "start": "2183680",
    "end": "2190840"
  },
  {
    "text": "carriage return right go down more here's 115 to 0 D 0 so carriage return",
    "start": "2190840",
    "end": "2196130"
  },
  {
    "text": "line feed that's probably the one that's the right baud rate so let's try that TX",
    "start": "2196130",
    "end": "2201170"
  },
  {
    "text": "of three rx of two so now we can do instead of having to disconnect the",
    "start": "2201170",
    "end": "2206720"
  },
  {
    "text": "jtagulator put on a different level shifter get your terminal program set up again and all of that we can use what's",
    "start": "2206720",
    "end": "2212000"
  },
  {
    "text": "called the pass-through mode to let the jtagulator do all of that so let's do P",
    "start": "2212000",
    "end": "2217970"
  },
  {
    "text": "what was it TX pin 3 rx pin 2 baud rate 1 2 not 116 that's not gonna work P 3 2",
    "start": "2217970",
    "end": "2235010"
  },
  {
    "text": "1 1 5 200 sometimes I'm bad at typing ok",
    "start": "2235010",
    "end": "2242180"
  },
  {
    "text": "entering UART pass through so now we can just start communicating and interfacing",
    "start": "2242180",
    "end": "2247730"
  },
  {
    "text": "directly with the device that we've just discovered the UART for so here we go dd-wrt I think the login is us not route",
    "start": "2247730",
    "end": "2255800"
  },
  {
    "text": "I think it's admin password or something admin password no maybe I have local",
    "start": "2255800",
    "end": "2265790"
  },
  {
    "text": "echo turned on root admin yes",
    "start": "2265790",
    "end": "2271230"
  },
  {
    "text": "acted ok so now we logged into dd-wrt which was loaded on this access point and now now I have a root shell and I",
    "start": "2271230",
    "end": "2278369"
  },
  {
    "text": "can just sort of you know manipulate the device I don't now I'm in so kind of",
    "start": "2278369",
    "end": "2283980"
  },
  {
    "text": "cool and then when I'm done I can hit control X UART pass-through complete and",
    "start": "2283980",
    "end": "2290400"
  },
  {
    "text": "now I'm back communicating with the jtagulator instead so that is UART",
    "start": "2290400",
    "end": "2295920"
  },
  {
    "text": "detection so there are some limitations",
    "start": "2295920",
    "end": "2304320"
  },
  {
    "start": "2301000",
    "end": "2407000"
  },
  {
    "text": "like any tool sometimes tools are good for a certain jobs sometimes they're not sometimes the tool is going to work so",
    "start": "2304320",
    "end": "2311100"
  },
  {
    "text": "there are some limitations one of them mate might be that there is no on chip debug interface for that for that target",
    "start": "2311100",
    "end": "2317100"
  },
  {
    "text": "maybe the device is physically disconnected like we talked about maybe there is a reset pin being pulled low to",
    "start": "2317100",
    "end": "2323340"
  },
  {
    "text": "disable JTAG what we have right now with the current firmware that's available on github and that's on the units I",
    "start": "2323340",
    "end": "2329850"
  },
  {
    "text": "basically any any pin that we're not currently manipulating any channel we're not currently manipulating I have set",
    "start": "2329850",
    "end": "2336330"
  },
  {
    "text": "high so if there is a reset pin it's gonna keep it high so it's going to enable it so so the system you'll still",
    "start": "2336330",
    "end": "2343200"
  },
  {
    "text": "be able to detect the interface but eventually the next version they're all gonna be low and then I'm gonna try to set it high only to discover if there is",
    "start": "2343200",
    "end": "2350490"
  },
  {
    "text": "a reset pin there maybe it's password-protected maybe it's some other configuration we don't know about I'm sure there's lots of different edge",
    "start": "2350490",
    "end": "2356369"
  },
  {
    "text": "cases of different parts that don't work but my goal is to try to eventually fit those in and you know get feedback from",
    "start": "2356369",
    "end": "2362070"
  },
  {
    "text": "people that are using the using the device I have a list on github of like known good targets so as that list grows",
    "start": "2362070",
    "end": "2369150"
  },
  {
    "text": "people will be able to know if you know there's like a special thing they need to do maybe their strong pull-up resistors that are preventing the",
    "start": "2369150",
    "end": "2375780"
  },
  {
    "text": "jtagulator signals from being the proper levels one limitation which is only a",
    "start": "2375780",
    "end": "2381030"
  },
  {
    "text": "limitation sometimes is that you know possibly as you're fuzzing this interface you're sending different different data streams on different pins",
    "start": "2381030",
    "end": "2388140"
  },
  {
    "text": "of test points that you don't know what they are you might end up causing the causing the device to to operate",
    "start": "2388140",
    "end": "2393230"
  },
  {
    "text": "abnormally but from a hacker point of view if you can if you can cause some sort of issue to happen like that might",
    "start": "2393230",
    "end": "2399840"
  },
  {
    "text": "be another clue that you can then use for another Hardware hack or something so somewhat of",
    "start": "2399840",
    "end": "2404880"
  },
  {
    "text": "imitation but but if you use it right it could be useful some future work I mentioned I have lots of stuff to do",
    "start": "2404880",
    "end": "2410130"
  },
  {
    "start": "2407000",
    "end": "2471000"
  },
  {
    "text": "this list keeps growing I want to do lots of different interfaces flash memory devices you can even communicate",
    "start": "2410130",
    "end": "2416309"
  },
  {
    "text": "directly to those and get information back from them about you know met with their memory size and configuration so",
    "start": "2416309",
    "end": "2422700"
  },
  {
    "text": "now we might be able to detect if there's a flash memory device on a board which I thought would be kind of neat",
    "start": "2422700",
    "end": "2428480"
  },
  {
    "text": "possibly doing a level shifting module to allow adjustable target voltages above three point three so for",
    "start": "2428480",
    "end": "2433920"
  },
  {
    "text": "industrial equipment SCADA equipment there's lots of stuff out there that's still five volt and above especially for",
    "start": "2433920",
    "end": "2439920"
  },
  {
    "text": "UART interfaces maybe do a logic analyzer since you know we have 24",
    "start": "2439920",
    "end": "2444990"
  },
  {
    "text": "channels with proper input protection there's no reason why we couldn't write some code to just read the state of",
    "start": "2444990",
    "end": "2451799"
  },
  {
    "text": "whatever pins that were connected to and then interface it with something like Sig rock and open-source logic analyzer tool that would probably be done in",
    "start": "2451799",
    "end": "2459000"
  },
  {
    "text": "assembly language on the on the chip so you can get kind of maximum speed but I think that might be cool you know since",
    "start": "2459000",
    "end": "2464970"
  },
  {
    "text": "you're already you know if you already have one it will sort of prevent you from having to buy another logic analyzer so lots of stuff in the future",
    "start": "2464970",
    "end": "2473480"
  },
  {
    "start": "2471000",
    "end": "2560000"
  },
  {
    "text": "if you want to get information all the stuff is available on jtagulator comm",
    "start": "2473480",
    "end": "2478710"
  },
  {
    "text": "which just links over to my my website which is grand idea studio so schematics",
    "start": "2478710",
    "end": "2484769"
  },
  {
    "text": "source code build materials tests procedure everything you need Gerber",
    "start": "2484769",
    "end": "2489960"
  },
  {
    "text": "plots if you want to send those to a local pc board fabricator you could do that everything's online there and then",
    "start": "2489960",
    "end": "2494970"
  },
  {
    "text": "from there there's a link to the to the firmware on github parallax I mentioned they manufacture",
    "start": "2494970",
    "end": "2500250"
  },
  {
    "text": "the units so they sell assembled units and they sell I believe they have the",
    "start": "2500250",
    "end": "2506579"
  },
  {
    "text": "bus pirate probes and they currently sell bare boards I think they have maybe",
    "start": "2506579",
    "end": "2511710"
  },
  {
    "text": "like twenty or thirty bare blank PC boards left for 20 bucks so if you wanted to buy a bear one and build your",
    "start": "2511710",
    "end": "2517140"
  },
  {
    "text": "own you could do that oh Sh Park is a is a guy out of Portland named Neil Lane is",
    "start": "2517140",
    "end": "2523859"
  },
  {
    "text": "his handle and he builds he fabricates circuit boards for the hobbyist community and basically batches and",
    "start": "2523859",
    "end": "2530039"
  },
  {
    "text": "copies everybody's designs onto a giant circuit board panel and then gets that fabricated because the the cost of board",
    "start": "2530039",
    "end": "2537210"
  },
  {
    "text": "fabrication is really determined the size of the panel so if you only have a tiny little part you might still",
    "start": "2537210",
    "end": "2542280"
  },
  {
    "text": "have to use their minimum panel size so he does is batch everything together and so you wait a few days longer but now",
    "start": "2542280",
    "end": "2549330"
  },
  {
    "text": "you pay some few dollars per square inch to get your boards back so I uploaded",
    "start": "2549330",
    "end": "2554490"
  },
  {
    "text": "the designs to there as well so you can always order from him so we have about",
    "start": "2554490",
    "end": "2562110"
  },
  {
    "start": "2560000",
    "end": "2607000"
  },
  {
    "text": "15 more minutes in the presentation so what I'll do is I guess well we'll open",
    "start": "2562110",
    "end": "2567360"
  },
  {
    "text": "up for questions and then feel free if you want to come up an experiment we can",
    "start": "2567360",
    "end": "2572430"
  },
  {
    "text": "use my machine I have two jtagulator x' here I have a bunch of different target boards I have a BlackBerry device in",
    "start": "2572430",
    "end": "2578460"
  },
  {
    "text": "another access point of a logic analyzer of a bunch of stuff if you want to come up an experiment and kind of play around",
    "start": "2578460",
    "end": "2585240"
  },
  {
    "text": "with the technology feel free and then yeah we'll just do that until until",
    "start": "2585240",
    "end": "2592560"
  },
  {
    "text": "we're done so any any questions before we kind of open it up for the for the hands-on no okay well thanks for coming",
    "start": "2592560",
    "end": "2604309"
  }
]