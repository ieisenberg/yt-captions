[
  {
    "text": "good afternoon everyone thanks for joining us today we'll be talking about how we can hack our accounts at",
    "start": "2520",
    "end": "8679"
  },
  {
    "text": "integration platforms with a new class of authorization n talks I am ka l a PhD candidate at the",
    "start": "8679",
    "end": "16560"
  },
  {
    "text": "Chinese University of Hong Kong and I started this work when I was a former intern at Samsung research America so",
    "start": "16560",
    "end": "22920"
  },
  {
    "text": "this is a joint work with my labmate S who's standing next to me um my PHP",
    "start": "22920",
    "end": "28199"
  },
  {
    "text": "advisor Professor Lao and my colleagues and managers at Samsung Adonis and",
    "start": "28199",
    "end": "34559"
  },
  {
    "text": "Julian this is our today's agenda we'll start with an executive summary to get it warm up with the basics and then go",
    "start": "34559",
    "end": "41600"
  },
  {
    "text": "through the attacks with detailed prodical analysis we'll share with you the result of our investigation against",
    "start": "41600",
    "end": "47879"
  },
  {
    "text": "20 plus integration platforms with concrete attack",
    "start": "47879",
    "end": "53399"
  },
  {
    "text": "examples so first of all what is an integration platform in a narrow sense",
    "start": "53719",
    "end": "59600"
  },
  {
    "text": "people often refer to it as workflow automation platforms such as Microsoft power automate or",
    "start": "59600",
    "end": "65600"
  },
  {
    "text": "if but here we are also including several other types of platforms that has a similar architecture including",
    "start": "65600",
    "end": "72720"
  },
  {
    "text": "virtual Voice Assistant such as Alexa spart homes for example uh Google homes",
    "start": "72720",
    "end": "77880"
  },
  {
    "text": "and most recently large language model platforms with plugin support like open",
    "start": "77880",
    "end": "83079"
  },
  {
    "text": "AI chat GPT the commonality between these",
    "start": "83079",
    "end": "88880"
  },
  {
    "text": "platforms is that they all wish to build an allinone solution that will connect and Aggregates the functionalities of",
    "start": "88880",
    "end": "95720"
  },
  {
    "text": "diverse apps or services on the internet for example you can ask Alexa to turn",
    "start": "95720",
    "end": "101720"
  },
  {
    "text": "off the smart Bobs and then get her a ride with lift to the airport but in",
    "start": "101720",
    "end": "106880"
  },
  {
    "text": "this example since you're communicating through Alexa the LT server must somehow",
    "start": "106880",
    "end": "112240"
  },
  {
    "text": "figure out which lyt account is requesting the ride so that's how account linking come into",
    "start": "112240",
    "end": "118399"
  },
  {
    "text": "play account link is a must have feature supported by all integration platforms which will link the end users app app",
    "start": "118399",
    "end": "126000"
  },
  {
    "text": "accounts to their platform accounts so that the platform can therefore uh",
    "start": "126000",
    "end": "131239"
  },
  {
    "text": "control the apps on behalf of the end user and to establish account linking o",
    "start": "131239",
    "end": "137480"
  },
  {
    "text": "off is the most prevalent protocol being used integration platforms have a",
    "start": "137480",
    "end": "144920"
  },
  {
    "text": "Marketplace to accommodate all its apps this is usually an Open Marketplace where anyone can register and publish in",
    "start": "144920",
    "end": "150840"
  },
  {
    "text": "an app so keep in mind that the third party apps could be inherently entrusted",
    "start": "150840",
    "end": "156680"
  },
  {
    "text": "and there could even be the infiltration of a malicious",
    "start": "156680",
    "end": "161680"
  },
  {
    "text": "app in account linking normally a user just link their own app account like LT",
    "start": "162000",
    "end": "167440"
  },
  {
    "text": "account to their platform account like Alexa account so it's perfectly fine and nothing can go",
    "start": "167440",
    "end": "173519"
  },
  {
    "text": "wrong however let's say I am attacker and you are the victim if I can somehow",
    "start": "173519",
    "end": "179120"
  },
  {
    "text": "steal your LIF account and then buy it to my Alexa then I can request a ride for free and you're going to pay my bill",
    "start": "179120",
    "end": "186920"
  },
  {
    "text": "so this will cause an authorized access on the other hand if I as an",
    "start": "186920",
    "end": "192440"
  },
  {
    "text": "attacker can unknowingly bind my lift account to your Alexa account then I can",
    "start": "192440",
    "end": "197879"
  },
  {
    "text": "track your traces whenever I you request to right in the future so these impacts could be",
    "start": "197879",
    "end": "205159"
  },
  {
    "text": "realized with the attacker's presence as a malicious app targeting B up and refer",
    "start": "205159",
    "end": "211560"
  },
  {
    "text": "to it as the cross up attack scenario then some PL platforms may have",
    "start": "211560",
    "end": "217439"
  },
  {
    "text": "an impression that well let's just close our Marketplace and make sure that there's not a single malicious entity",
    "start": "217439",
    "end": "223599"
  },
  {
    "text": "involved but that's not a Panacea it turns out that an attacker",
    "start": "223599",
    "end": "228840"
  },
  {
    "text": "could still act as a normal platform user and Target a victim",
    "start": "228840",
    "end": "233879"
  },
  {
    "text": "directly also launching an authorized control so we refer to this scenario as",
    "start": "233879",
    "end": "239920"
  },
  {
    "text": "the cross user attack scenario so cross app and cross user attacks will be our Focus",
    "start": "239920",
    "end": "247200"
  },
  {
    "text": "today to give you a better uh understanding of like what kind of attack we are able to launch here's an",
    "start": "247200",
    "end": "255640"
  },
  {
    "text": "example the left hand side is the attackers following and the right hand side is the victims they are all running",
    "start": "258199",
    "end": "263600"
  },
  {
    "text": "Alexa and uh there's a victim smart lamp which could be controlled with victim",
    "start": "263600",
    "end": "268800"
  },
  {
    "text": "victim's Alexa so now victims is tricked to click on a single",
    "start": "268800",
    "end": "276198"
  },
  {
    "text": "link and is already doomed because an attacker actually just hijacked his",
    "start": "279039",
    "end": "286039"
  },
  {
    "text": "account now the attacker can control the victim smart lamp with their own",
    "start": "286039",
    "end": "294599"
  },
  {
    "text": "Alexa so that's quite simple but also quite scary isn't it so next we'll go",
    "start": "295680",
    "end": "301720"
  },
  {
    "text": "into the technical details we'll go through the protocol flow and highlight how the O of protocol can be abused in",
    "start": "301720",
    "end": "308039"
  },
  {
    "text": "account linking under the hood account linking is based on the o of 2.0 authorization C",
    "start": "308039",
    "end": "315880"
  },
  {
    "text": "Grant this actually coincides with the traditional of use case uh where the",
    "start": "315880",
    "end": "321120"
  },
  {
    "text": "authorization can be granted to uh the O of client so it's a three LX protocol",
    "start": "321120",
    "end": "326720"
  },
  {
    "text": "done in two faces there are three entities involved uh the first entity is called uh the O",
    "start": "326720",
    "end": "332600"
  },
  {
    "text": "of client which is usually um hosted by the platform backend there's a platform",
    "start": "332600",
    "end": "338840"
  },
  {
    "text": "front end being the user agent usually it's in a web browser and uh each",
    "start": "338840",
    "end": "343919"
  },
  {
    "text": "integrated app would host its authorization server it's start in two phases and the",
    "start": "343919",
    "end": "350479"
  },
  {
    "text": "first phase is the authorization phase eventually a shortlived",
    "start": "350479",
    "end": "355800"
  },
  {
    "text": "authorization code will be uh issued and to begin with the end user would",
    "start": "355800",
    "end": "361000"
  },
  {
    "text": "initiate account linking from the platform front end which would start the underline overflow and then hit the",
    "start": "361000",
    "end": "366639"
  },
  {
    "text": "integration platform backend then the user will be redirected to the integrated apps authorization",
    "start": "366639",
    "end": "372840"
  },
  {
    "text": "server like this the user would usually be asked uh to log in at the apps website and then",
    "start": "372840",
    "end": "379880"
  },
  {
    "text": "uh Grant the",
    "start": "379880",
    "end": "383039"
  },
  {
    "text": "authorizations but please note that although it is named authorized the authorized button or any user consent",
    "start": "385479",
    "end": "391360"
  },
  {
    "text": "can usually be skipped if there's a prior consent so this would make the authorization process fully automatic",
    "start": "391360",
    "end": "398039"
  },
  {
    "text": "and the authorization code will be issued without any user interactions so the authorization code",
    "start": "398039",
    "end": "404680"
  },
  {
    "text": "will pass through the user agent and be handed in to the platform back end it",
    "start": "404680",
    "end": "410160"
  },
  {
    "text": "will hit the redirection endpoint uh this is label ASR here and this uh",
    "start": "410160",
    "end": "415840"
  },
  {
    "text": "endpoint where the URL is specified earlier through through the rig by u i",
    "start": "415840",
    "end": "421280"
  },
  {
    "text": "parameter so that wraps up the first phase the second phase is the so-called",
    "start": "421280",
    "end": "426560"
  },
  {
    "text": "token exchange phase so the authorization code will be redeemed for Access token through a",
    "start": "426560",
    "end": "433199"
  },
  {
    "text": "purely server to server communication So eventually the access",
    "start": "433199",
    "end": "440280"
  },
  {
    "text": "token indicating the app accounts access will be associated with a platform account and from now on the platform",
    "start": "440280",
    "end": "446199"
  },
  {
    "text": "could call the apps apis with the access token the attached to control the app on",
    "start": "446199",
    "end": "451280"
  },
  {
    "text": "the user's behalf if you're familiar with ol security you might be aware that there",
    "start": "451280",
    "end": "457240"
  },
  {
    "text": "are two common types of attacks um first one is about the r URI if the r URI is",
    "start": "457240",
    "end": "463879"
  },
  {
    "text": "not matched against by the authorization server then the authorization could then",
    "start": "463879",
    "end": "469240"
  },
  {
    "text": "the authorization code could have been leaked to uh an an intendent server",
    "start": "469240",
    "end": "475120"
  },
  {
    "text": "there's also a state parameter o off which tracks the O state and then also",
    "start": "475120",
    "end": "480479"
  },
  {
    "text": "used as the csrf cross-site request fory token so if the state is not correctly",
    "start": "480479",
    "end": "485680"
  },
  {
    "text": "bound or matched against it could end up with a loog in CSF attack but since we like to explore",
    "start": "485680",
    "end": "492840"
  },
  {
    "text": "those new security challenges in account linking we assume that the platforms and",
    "start": "492840",
    "end": "498000"
  },
  {
    "text": "the apps are all exempt from these common flaws or at least our texts not",
    "start": "498000",
    "end": "503520"
  },
  {
    "text": "depend on these fls so account linking is based on of",
    "start": "503520",
    "end": "509879"
  },
  {
    "text": "but it does not equate with ool account linking there are some uh unique challenges for account linking that",
    "start": "509879",
    "end": "516399"
  },
  {
    "text": "requires further customizations to the old protocol specifically the platform needs",
    "start": "516399",
    "end": "522440"
  },
  {
    "text": "to coherently track the active app and the active platform user information or",
    "start": "522440",
    "end": "528399"
  },
  {
    "text": "in other words to maintain an account linking session during account linking and failure to do so would expose",
    "start": "528399",
    "end": "534720"
  },
  {
    "text": "session Integrity issues and break account linking so next we will go through these issues one by",
    "start": "534720",
    "end": "542240"
  },
  {
    "text": "one we'll first start with the issues related to our crossa",
    "start": "542320",
    "end": "547880"
  },
  {
    "text": "talks in traditional o there is only just one authorization server involved um but in integration platforms",
    "start": "547880",
    "end": "555279"
  },
  {
    "text": "it needs to support multiple integrated apps or Services where each app has its own authorization server and their own",
    "start": "555279",
    "end": "561399"
  },
  {
    "text": "account linking needs so first the platform needs to support linking with both uh LT and",
    "start": "561399",
    "end": "567360"
  },
  {
    "text": "spoted valus in separate close but more importantly in order to achieve this the",
    "start": "567360",
    "end": "573200"
  },
  {
    "text": "platform must remember the user's choice in the first place and then later retrieve",
    "start": "573200",
    "end": "578720"
  },
  {
    "text": "it why is the case because ASO off involves two phases for the second phase",
    "start": "578720",
    "end": "585120"
  },
  {
    "text": "the token exchange phase the platform needs to send the authorization code to the exact same app where it initially",
    "start": "585120",
    "end": "592640"
  },
  {
    "text": "gets the authorization code from so the platform literally needs to",
    "start": "592640",
    "end": "598279"
  },
  {
    "text": "First embat its initial contact and then later extract this information uh before",
    "start": "598279",
    "end": "603720"
  },
  {
    "text": "the token exchange and we call this the active app",
    "start": "603720",
    "end": "608959"
  },
  {
    "text": "tracking there are two common patterns uh to accomplish this goal uh the first",
    "start": "608959",
    "end": "614399"
  },
  {
    "text": "mechanism is through the state parameter because state is traveled uh along the authorization phase so the platform",
    "start": "614399",
    "end": "621360"
  },
  {
    "text": "could embat an app identifiers a lift in the state parameter and uh assign it to",
    "start": "621360",
    "end": "627760"
  },
  {
    "text": "make sure that nobody can uh temperate that's one way to track the F",
    "start": "627760",
    "end": "633600"
  },
  {
    "text": "ID another choice is to embed the ID in the r Ur like in the URL",
    "start": "633600",
    "end": "641360"
  },
  {
    "text": "path so that the platform could also extract this information when the user agent hits the uh redirection",
    "start": "641360",
    "end": "650760"
  },
  {
    "text": "endpoint however it turns out that these information alone are all insufficient",
    "start": "651079",
    "end": "656480"
  },
  {
    "text": "from a security standpoint why because say for State parameter it",
    "start": "656480",
    "end": "663800"
  },
  {
    "text": "only reflects how o is started but it cannot track how all of this ended up",
    "start": "663800",
    "end": "670200"
  },
  {
    "text": "with the state is opaque to the authorization servers so the state could",
    "start": "670200",
    "end": "675560"
  },
  {
    "text": "actually be traveled uh along the offload to multiple authorization servers but the platform and the",
    "start": "675560",
    "end": "682720"
  },
  {
    "text": "authorization will know nothing about it and this oversight can result in an",
    "start": "682720",
    "end": "688519"
  },
  {
    "text": "attack that render account takeovers and it goes like this first just to make",
    "start": "688519",
    "end": "693560"
  },
  {
    "text": "sure that we're on the same page we assume here that the platform is tracking the active app solely by the",
    "start": "693560",
    "end": "699320"
  },
  {
    "text": "state parameter so let's say when a victim stumble upon a malicious app for",
    "start": "699320",
    "end": "705480"
  },
  {
    "text": "account linking the platform would embat the malicious apps identifier in the",
    "start": "705480",
    "end": "711440"
  },
  {
    "text": "state parameter and then take the victim to the malicious app",
    "start": "711440",
    "end": "716519"
  },
  {
    "text": "server but instead of authorizing the user is what is supposed to do the",
    "start": "716519",
    "end": "722920"
  },
  {
    "text": "malicious apps authorization server would issue a crafted redir to another benign apps",
    "start": "722920",
    "end": "730079"
  },
  {
    "text": "authorization server from the benign apps perspective",
    "start": "730079",
    "end": "735720"
  },
  {
    "text": "everything looks legit so it will be the benai app who issue an authorization",
    "start": "735720",
    "end": "742880"
  },
  {
    "text": "code but the rir would also keep the malicious App State",
    "start": "742880",
    "end": "749760"
  },
  {
    "text": "such that when the state is sent together with the authorization code back to the redirection",
    "start": "749959",
    "end": "756680"
  },
  {
    "text": "endpoint the platform would retrieve the active app information from the state and think that well I've been always",
    "start": "756680",
    "end": "763440"
  },
  {
    "text": "communicating with the militia app so then the platform would send the",
    "start": "763440",
    "end": "770079"
  },
  {
    "text": "authorization code of the victim to the malicious apps server and once the authorization code",
    "start": "770079",
    "end": "777000"
  },
  {
    "text": "is leaked that's basically end game because the attacker just needs to launch a vanilla authorization code",
    "start": "777000",
    "end": "783040"
  },
  {
    "text": "injection attack which is well discussed by the community and to uh redeem the",
    "start": "783040",
    "end": "788320"
  },
  {
    "text": "code for Access token and then bind the token to the attacker's own platform account because this is essentially",
    "start": "788320",
    "end": "795680"
  },
  {
    "text": "stealing the victim's app account we name this attack cross Foo off account",
    "start": "795680",
    "end": "801000"
  },
  {
    "text": "takeover or Cod so the second common design as we've",
    "start": "801000",
    "end": "807199"
  },
  {
    "text": "mentioned is to track the active app through the r u parameter but this is flawed as well the reason is that the r",
    "start": "807199",
    "end": "815519"
  },
  {
    "text": "URI by itself has weak Integrity so it can be changed by the attacker say from",
    "start": "815519",
    "end": "821240"
  },
  {
    "text": "lift to Spotify So based on this idea we could launch a different attack that enables",
    "start": "821240",
    "end": "827800"
  },
  {
    "text": "privacy leakage the attack would also begin with the victim starting account linking with",
    "start": "827800",
    "end": "833880"
  },
  {
    "text": "the malicious app but because the r URI lacks integrity protection the attacker",
    "start": "833880",
    "end": "841000"
  },
  {
    "text": "could change the active app from malicious app to benai app like",
    "start": "841000",
    "end": "847279"
  },
  {
    "text": "this so what's the purpose it would make the platform later",
    "start": "847279",
    "end": "853000"
  },
  {
    "text": "contact back to the Beni app for token exchange like",
    "start": "853000",
    "end": "859959"
  },
  {
    "text": "this so the attacker could actually leverage this app contact switch and inject a still valid authorization code",
    "start": "859959",
    "end": "867759"
  },
  {
    "text": "of his own and uh into the oilf",
    "start": "867759",
    "end": "873160"
  },
  {
    "text": "flow and that's how an attacker could inject their own uh app account at the",
    "start": "873160",
    "end": "878560"
  },
  {
    "text": "benai app to be forcefully linked with the victim we call this attack cross app o",
    "start": "878560",
    "end": "884560"
  },
  {
    "text": "off request forgery or",
    "start": "884560",
    "end": "888120"
  },
  {
    "text": "quf so the root cause of both problem is that the platform would solely rely on",
    "start": "891440",
    "end": "896759"
  },
  {
    "text": "the state parameter or the r UI for the xab tracking so to defend against these",
    "start": "896759",
    "end": "902680"
  },
  {
    "text": "two attacks our solution is that the platform should first embat the same app",
    "start": "902680",
    "end": "908199"
  },
  {
    "text": "identifier in both state parameter and the URI and then extract it from both to",
    "start": "908199",
    "end": "913560"
  },
  {
    "text": "see if they're consistent uh before the token exchange why would it be an effective",
    "start": "913560",
    "end": "920320"
  },
  {
    "text": "approach because in this way if there is a code or C attack going on the state",
    "start": "920320",
    "end": "926120"
  },
  {
    "text": "parameter would indicate a malicious AB identity but the video URI would",
    "start": "926120",
    "end": "932120"
  },
  {
    "text": "indicate a beny app so now the app mismatch would make the attack sensible",
    "start": "932120",
    "end": "939440"
  },
  {
    "text": "by the platform so now I finished the cross at",
    "start": "939440",
    "end": "944560"
  },
  {
    "text": "part and uh I'll hand over the presentation to symol to talk about the cross user",
    "start": "944560",
    "end": "950639"
  },
  {
    "text": "attack okay thank you thanks for kaian for his introduction and also on the",
    "start": "951639",
    "end": "957240"
  },
  {
    "text": "cross app attack part now I'm introducing the cross user",
    "start": "957240",
    "end": "963040"
  },
  {
    "text": "Tex so before that let's first again take a look at this uh classic OS flow",
    "start": "963040",
    "end": "969160"
  },
  {
    "text": "diagram but this time you can just ignore all those arrrow and all the parameters inside you can just focus on",
    "start": "969160",
    "end": "975639"
  },
  {
    "text": "the red part in the diagram which is the uh user session on a platform uh know",
    "start": "975639",
    "end": "981480"
  },
  {
    "text": "that the session is actually not part of the O oos standards but it plays an",
    "start": "981480",
    "end": "986639"
  },
  {
    "text": "important role in a con linking the account linking is initiated from",
    "start": "986639",
    "end": "992319"
  },
  {
    "text": "the platform by the user and then finally after oos uh uh authorization",
    "start": "992319",
    "end": "999120"
  },
  {
    "text": "the platform uh it the platform will rely on the session memorized you the uh",
    "start": "999120",
    "end": "1005199"
  },
  {
    "text": "in the user agent to tell which user to authorize to in simple cases where",
    "start": "1005199",
    "end": "1011680"
  },
  {
    "text": "there's only one browser and one platform domain this can be very easy",
    "start": "1011680",
    "end": "1017040"
  },
  {
    "text": "all it need to do is to Rel liely on the browser to manage the session qy",
    "start": "1017040",
    "end": "1023039"
  },
  {
    "text": "automatically however the assumption that the user agent can keep track of",
    "start": "1023039",
    "end": "1028240"
  },
  {
    "text": "the session may be uh May BR may break in some other more complex",
    "start": "1028240",
    "end": "1034240"
  },
  {
    "text": "scenarios so this is the first scenario uh where it can become challenging to",
    "start": "1034240",
    "end": "1040240"
  },
  {
    "text": "manage uh to track session in this case uh you can see that the server the left",
    "start": "1040240",
    "end": "1046558"
  },
  {
    "text": "hand side uh the same platform may have uh multiple different domains or we can",
    "start": "1046559",
    "end": "1053120"
  },
  {
    "text": "call it origin so in this case the user will first initiate the account linking at",
    "start": "1053120",
    "end": "1060360"
  },
  {
    "text": "the front alexa.com for example and then the after all the",
    "start": "1060360",
    "end": "1065679"
  },
  {
    "text": "authorization uh the Au authorization information will finally goes to amazon.com which will be in charge of",
    "start": "1065679",
    "end": "1073120"
  },
  {
    "text": "all the account manage account management stuffs so this is a common",
    "start": "1073120",
    "end": "1078400"
  },
  {
    "text": "practice for big platforms for reasons like server side uh decoupling the",
    "start": "1078400",
    "end": "1084320"
  },
  {
    "text": "problem here is that the browser Cy cannot be shared across uh different",
    "start": "1084320",
    "end": "1090640"
  },
  {
    "text": "website on different domains so that amazon.com who received the authorization knows nothing about which",
    "start": "1090640",
    "end": "1098400"
  },
  {
    "text": "user to link to without an uh",
    "start": "1098400",
    "end": "1103600"
  },
  {
    "text": "session so one common implementation pattern we observe in practice is to add",
    "start": "1105039",
    "end": "1110440"
  },
  {
    "text": "another run of redirection between the two different domains so the section",
    "start": "1110440",
    "end": "1115600"
  },
  {
    "text": "information can be carried from one to the other just look at the middle the",
    "start": "1115600",
    "end": "1120720"
  },
  {
    "text": "orange part the pre-authorized VL with the session ID which have the session uh",
    "start": "1120720",
    "end": "1128760"
  },
  {
    "text": "uh session variable in the URL is how some of the platform pass the session from uh origin a to origin B when a",
    "start": "1128760",
    "end": "1136720"
  },
  {
    "text": "server adds the second origin origin B receiv receives your url it will set the",
    "start": "1136720",
    "end": "1143960"
  },
  {
    "text": "corresponding cookie in the browser to Mark the so-called Aon linking session a",
    "start": "1143960",
    "end": "1149320"
  },
  {
    "text": "session that can tell the platform to link to which user and which Target app",
    "start": "1149320",
    "end": "1155720"
  },
  {
    "text": "so can anyone spot the vulnerability here just take look at the middle part",
    "start": "1155720",
    "end": "1164240"
  },
  {
    "text": "do you uh do any of the uh an anent tack called session fixation attack coming to",
    "start": "1164240",
    "end": "1171360"
  },
  {
    "text": "your memory so so because uh because the server only",
    "start": "1171360",
    "end": "1179360"
  },
  {
    "text": "relies on the URL here to dispatch the cookie the T can just send the pre-authorize URL which the session ID",
    "start": "1179360",
    "end": "1186840"
  },
  {
    "text": "insight to the victim and then victim click the link and all all the oos Magics happens just in a blink and",
    "start": "1186840",
    "end": "1194159"
  },
  {
    "text": "finally the attacker's platform account will get access to the victim's app cont",
    "start": "1194159",
    "end": "1199760"
  },
  {
    "text": "well who can expect such an uh almost forgotten attack still exist in many big",
    "start": "1199760",
    "end": "1205400"
  },
  {
    "text": "platform and it just hide itself in the oos protocol in some other",
    "start": "1205400",
    "end": "1211919"
  },
  {
    "text": "form and another scenario uh which brings the challenge for session tracking is when uh the native app is",
    "start": "1211919",
    "end": "1219320"
  },
  {
    "text": "involved imagine that you're using Alexa mobile app and click uh and then you",
    "start": "1219320",
    "end": "1225000"
  },
  {
    "text": "initiate a con linking inside the mobile app and it needs to pop up the external",
    "start": "1225000",
    "end": "1230120"
  },
  {
    "text": "browser to request the authorization from some uh apps website so the",
    "start": "1230120",
    "end": "1236320"
  },
  {
    "text": "external browser have no information about the platform session in the native app because there's no easy way to pass",
    "start": "1236320",
    "end": "1244360"
  },
  {
    "text": "a session or cie from the Native app to the uh browser for example from Android",
    "start": "1244360",
    "end": "1250200"
  },
  {
    "text": "mobile app to the Android uh system browser so here we have two user agents",
    "start": "1250200",
    "end": "1256559"
  },
  {
    "text": "which will break the session track implantation we observe in practice for",
    "start": "1256559",
    "end": "1262840"
  },
  {
    "text": "this case is to reuse the state parameter in oos to impat the platform",
    "start": "1262840",
    "end": "1267919"
  },
  {
    "text": "session by Design the state parameter is for memorizing any Uh custom information",
    "start": "1267919",
    "end": "1274159"
  },
  {
    "text": "through the O flow so it is a natural choice for platform developer to save",
    "start": "1274159",
    "end": "1279559"
  },
  {
    "text": "the session inside it this time although it's not very obvious it is once again",
    "start": "1279559",
    "end": "1284960"
  },
  {
    "text": "vulnerable to session fixation so attacker can just send the",
    "start": "1284960",
    "end": "1290200"
  },
  {
    "text": "authorized URL uh Circle in the diagram to the victim and let victim finish all",
    "start": "1290200",
    "end": "1296240"
  },
  {
    "text": "the oos uh stuffs and then attacker again uh his platform account can get",
    "start": "1296240",
    "end": "1302480"
  },
  {
    "text": "unauthorized control to the victim app so to summarize this kind of problems",
    "start": "1302480",
    "end": "1308640"
  },
  {
    "text": "happen all because of the actual oos process happen on an unauthorized space",
    "start": "1308640",
    "end": "1316320"
  },
  {
    "text": "uh in the right part of the diagram separated from the original authenticated",
    "start": "1316320",
    "end": "1321880"
  },
  {
    "text": "space and platforms usually will add some mechanism in between to pass the session from one to the other and it's",
    "start": "1321880",
    "end": "1329120"
  },
  {
    "text": "very easy to make mistakes here which Rel leats to the session fixation",
    "start": "1329120",
    "end": "1334159"
  },
  {
    "text": "attacks we just uh mentioned our recommended fix is to make the protocol always return to the",
    "start": "1334159",
    "end": "1341120"
  },
  {
    "text": "original us session a us the agent who have the initial session information and",
    "start": "1341120",
    "end": "1346960"
  },
  {
    "text": "it can either be the native app or in the first case it will be the initial domain who keeps the session in that way",
    "start": "1346960",
    "end": "1353640"
  },
  {
    "text": "the session passing is no longer needed and yet the platform can still know",
    "start": "1353640",
    "end": "1359400"
  },
  {
    "text": "which user to link to after or us okay so that uh concludes uh most all",
    "start": "1359400",
    "end": "1366080"
  },
  {
    "text": "of the attacks uh both the cross attack and cross app attack then I will uh pass",
    "start": "1366080",
    "end": "1372080"
  },
  {
    "text": "back to Ken for the rest of the presentation so after realize in all of",
    "start": "1372080",
    "end": "1379000"
  },
  {
    "text": "these attack factors here are some of our initiatives to heal the internet and make it a better place we investigated 25 integration",
    "start": "1379000",
    "end": "1386960"
  },
  {
    "text": "platforms of different categories including sever seven workfor automation platforms six virtual voice assistants",
    "start": "1386960",
    "end": "1393799"
  },
  {
    "text": "four Smart Homes two L based plugins and six other uncategorized platforms there",
    "start": "1393799",
    "end": "1401279"
  },
  {
    "text": "are all major players in each category and many platforms has over 100 million",
    "start": "1401279",
    "end": "1406400"
  },
  {
    "text": "users as a summary 20 4 out of 25 of them are vulnerable and 19 platforms",
    "start": "1406400",
    "end": "1413080"
  },
  {
    "text": "actually support a TX that can be completed in single click on the Anum link if we break down the two uh",
    "start": "1413080",
    "end": "1420720"
  },
  {
    "text": "category of attacks there would be 16 vulnerable to cross app and another 16",
    "start": "1420720",
    "end": "1425840"
  },
  {
    "text": "vulnerable to cross user attacks and there are eight platforms",
    "start": "1425840",
    "end": "1431158"
  },
  {
    "text": "overlap as our responsible dis closure efforts we've informed all 24 vulnerable",
    "start": "1436279",
    "end": "1441520"
  },
  {
    "text": "platforms uh which has been confirmed by 16 platforms we have accumulated four",
    "start": "1441520",
    "end": "1447400"
  },
  {
    "text": "critical or P1 bucks and the most critical cve assigned has a CVS score of",
    "start": "1447400",
    "end": "1453440"
  },
  {
    "text": "9.6 we also receiv received some general back bounties especially kudos to the",
    "start": "1453440",
    "end": "1460520"
  },
  {
    "text": "following responsible companies uh Samsung for first studying these issues",
    "start": "1460520",
    "end": "1466159"
  },
  {
    "text": "uh as early as 2019 and later extend to this full-blown research we want to thank uh Microsoft for keeping us",
    "start": "1466159",
    "end": "1472320"
  },
  {
    "text": "closest in the loop Amazon for responsibly fixing these issues and uh also always been generous in bounties",
    "start": "1472320",
    "end": "1478840"
  },
  {
    "text": "and Google for fixing these issues these issues in two",
    "start": "1478840",
    "end": "1483880"
  },
  {
    "text": "weeks so next let's move to a concrete case",
    "start": "1483919",
    "end": "1489240"
  },
  {
    "text": "study to begin with here's another quick",
    "start": "1491200",
    "end": "1496600"
  },
  {
    "text": "demo this time the vi still it's l to click on a",
    "start": "1496600",
    "end": "1504240"
  },
  {
    "text": "link but what the attacker could do now is that it could view all of the",
    "start": "1505279",
    "end": "1511520"
  },
  {
    "text": "victim's Microsoft Outlook",
    "start": "1511520",
    "end": "1515520"
  },
  {
    "text": "emails so this attack can actually be launched against Microsoft power automate normally you could automate",
    "start": "1517080",
    "end": "1524640"
  },
  {
    "text": "workflows there like sending you a Gmail whenever a new GitHub issue is filed but",
    "start": "1524640",
    "end": "1529960"
  },
  {
    "text": "here we are actually not attacking those F third parties but Microsoft own first",
    "start": "1529960",
    "end": "1535000"
  },
  {
    "text": "party apps they are implicitly trusted so actually no user consent from the",
    "start": "1535000",
    "end": "1540399"
  },
  {
    "text": "victim is Ever Needed also the victim user does not even need to be a Microsoft platform",
    "start": "1540399",
    "end": "1548760"
  },
  {
    "text": "user or like even be need to be aware of the existence of this",
    "start": "1548760",
    "end": "1554600"
  },
  {
    "text": "platform the victim only needs to have a regular Microsoft session in his browser",
    "start": "1554600",
    "end": "1560399"
  },
  {
    "text": "to get compromised and this is because here we are actually combining the cross app and",
    "start": "1560399",
    "end": "1566960"
  },
  {
    "text": "cross user attacks for session fixation or the cross user attacks it is the",
    "start": "1566960",
    "end": "1573640"
  },
  {
    "text": "attacker starting account linking with the benai app but unfortunately",
    "start": "1573640",
    "end": "1579120"
  },
  {
    "text": "Microsoft platform is not directly vulnerable to that the Microsoft platform indeed has a",
    "start": "1579120",
    "end": "1585640"
  },
  {
    "text": "code vulnerability but usually to exploit Cod it is the victim who",
    "start": "1585640",
    "end": "1591159"
  },
  {
    "text": "proactively contact the Malia app for account linking so that means the attacker needs to First at least publish",
    "start": "1591159",
    "end": "1597440"
  },
  {
    "text": "the app into the public Marketplace of the platform But Here by combining the two",
    "start": "1597440",
    "end": "1603320"
  },
  {
    "text": "it is actually the attacker starting account linking with an unpublished",
    "start": "1603320",
    "end": "1608360"
  },
  {
    "text": "malicious app lying in their own developer conso and only asking the victim to complete the account linking",
    "start": "1608360",
    "end": "1615720"
  },
  {
    "text": "and that could achieve first single click account",
    "start": "1615720",
    "end": "1621120"
  },
  {
    "text": "takeovers so for the attack details part to start with the attacker would register such a malicious app in his own",
    "start": "1622720",
    "end": "1630120"
  },
  {
    "text": "developer console but instead of publishing the app the attacker simply",
    "start": "1630120",
    "end": "1635279"
  },
  {
    "text": "initiates account linking on his own and then it will generate a URL",
    "start": "1635279",
    "end": "1640720"
  },
  {
    "text": "dispatched account linking session in a pre-authorized request",
    "start": "1640720",
    "end": "1647960"
  },
  {
    "text": "then the attacker could distribute the URL to the victim and trick him to make a",
    "start": "1648600",
    "end": "1655480"
  },
  {
    "text": "click the victim will be redirected to the malicious apps authorization",
    "start": "1655480",
    "end": "1661000"
  },
  {
    "text": "server and then the malicious app server operated by the attacker on the left",
    "start": "1661000",
    "end": "1666320"
  },
  {
    "text": "hand side could be programmed to launch the crafted redact in the cross app account take over or code",
    "start": "1666320",
    "end": "1673480"
  },
  {
    "text": "attack so this would redirect the victim to a benign AB server",
    "start": "1673480",
    "end": "1678720"
  },
  {
    "text": "such as that of a Office 365 Outlook the Outlook app on Microsoft power",
    "start": "1678720",
    "end": "1684640"
  },
  {
    "text": "automate but notice that in this crafted redirect the malicious app state is",
    "start": "1684640",
    "end": "1689960"
  },
  {
    "text": "still there and it will be used later normally if you just link with",
    "start": "1689960",
    "end": "1697080"
  },
  {
    "text": "Microsoft first-party products there would still be an account selection page like this although technically speaking",
    "start": "1697080",
    "end": "1703720"
  },
  {
    "text": "it is not a consense screen but actually this consense screen",
    "start": "1703720",
    "end": "1708880"
  },
  {
    "text": "sorry this account selection page could also be bypassed if the attacker just",
    "start": "1708880",
    "end": "1714559"
  },
  {
    "text": "tweak this URL parameter in the CF",
    "start": "1714559",
    "end": "1719799"
  },
  {
    "text": "rir so therefore an authorization code would be issued automatically without",
    "start": "1722679",
    "end": "1728000"
  },
  {
    "text": "the victim noticing about it and it would just hit the redirection",
    "start": "1728000",
    "end": "1733279"
  },
  {
    "text": "endpoint since there is a code vulnerability at Microsoft site so",
    "start": "1733279",
    "end": "1738320"
  },
  {
    "text": "although we can see that the in the r URI the app ID indicates that of a um",
    "start": "1738320",
    "end": "1745760"
  },
  {
    "text": "Office 365 Outlook of a beny app the platform would still solely determine",
    "start": "1745760",
    "end": "1751399"
  },
  {
    "text": "the active app by the app ID in the state parameter which is the malicious",
    "start": "1751399",
    "end": "1757360"
  },
  {
    "text": "app so the platform would just send the victim's Outlook authorization code to",
    "start": "1757360",
    "end": "1762799"
  },
  {
    "text": "the attacker and that's how the authorization code is leaked to an",
    "start": "1762799",
    "end": "1768120"
  },
  {
    "text": "techer control",
    "start": "1768120",
    "end": "1770720"
  },
  {
    "text": "server and after that the ATT teer could just exchange the code for an access",
    "start": "1773640",
    "end": "1778760"
  },
  {
    "text": "token and then bind it to their own platform account you may notice that here we",
    "start": "1778760",
    "end": "1787080"
  },
  {
    "text": "uh that like Microsoft do have a user session Integrity check and it is meant to check like",
    "start": "1787080",
    "end": "1794399"
  },
  {
    "text": "whether there is in a techers account linking session that's happening uh at the victim's browser and that's why",
    "start": "1794399",
    "end": "1800159"
  },
  {
    "text": "Microsoft is not directly vulnerable to session fixation issues however this",
    "start": "1800159",
    "end": "1805240"
  },
  {
    "text": "check is way too late that the token exchange actually precedes",
    "start": "1805240",
    "end": "1812080"
  },
  {
    "text": "it so the authorization code is already leaked with a code attack by the time",
    "start": "1812200",
    "end": "1818440"
  },
  {
    "text": "the platform can realize that something actually goes wrong so Microsoft actually fixed this",
    "start": "1818440",
    "end": "1824480"
  },
  {
    "text": "bug in two steps first it makes sure that the user session integrity Tech is done in a timely man uh Manner and then",
    "start": "1824480",
    "end": "1831519"
  },
  {
    "text": "it fix the Cod vulnerability by always mandating and then matching the app ID",
    "start": "1831519",
    "end": "1837399"
  },
  {
    "text": "in VI U and the state parameter eventually the attacker could",
    "start": "1837399",
    "end": "1843960"
  },
  {
    "text": "just simply put up workflow and to use the stolen Outlook account of the victim",
    "start": "1843960",
    "end": "1849039"
  },
  {
    "text": "like forwarding all the victim's emails to his own",
    "start": "1849039",
    "end": "1853760"
  },
  {
    "text": "server with the same attack technique we could even leak more confidential data",
    "start": "1854840",
    "end": "1860919"
  },
  {
    "text": "like this we could leak the API keys with the secrets from the Key Management",
    "start": "1860919",
    "end": "1866799"
  },
  {
    "text": "Service of azure the so-called Azure key Vault so now we assume that the victim",
    "start": "1866799",
    "end": "1873039"
  },
  {
    "text": "is actually a uh VA AD mean and uh again the victim is tricked",
    "start": "1873039",
    "end": "1878480"
  },
  {
    "text": "to click on a few links in the crafted email",
    "start": "1878480",
    "end": "1884480"
  },
  {
    "text": "and now all of the key names in the victim's key Vault are available to the",
    "start": "1889440",
    "end": "1897120"
  },
  {
    "text": "attacker attacker chose one of them and now the secret value is",
    "start": "1897120",
    "end": "1904039"
  },
  {
    "text": "there so it turns out that an attacker can steal your Outlook emails leak your",
    "start": "1911600",
    "end": "1916679"
  },
  {
    "text": "aure secrets and also compromise 50 plus Microsoft services in 365 and",
    "start": "1916679",
    "end": "1924039"
  },
  {
    "text": "Azure these are the related work of our research in particular we like to",
    "start": "1927519",
    "end": "1933240"
  },
  {
    "text": "highlight that account Linkin integration platform is an emerging use case for Olaf so it brings forward a",
    "start": "1933240",
    "end": "1939960"
  },
  {
    "text": "paradigm shift in Olaf roles in trust relationships so the authorization",
    "start": "1939960",
    "end": "1945000"
  },
  {
    "text": "servers which are usually trusted entities in Tradition know of are now taken up by the usted apps and this is",
    "start": "1945000",
    "end": "1953200"
  },
  {
    "text": "how what makes our cross-up attacks leally",
    "start": "1953200",
    "end": "1958440"
  },
  {
    "text": "practical this is a summary of our research we inspect 25 mainstream integration platforms and found 32",
    "start": "1961000",
    "end": "1968240"
  },
  {
    "text": "instances of vulnerabilities so these attacks could lead to unauthorized access or privacy leakage and we have also proposed uh",
    "start": "1968240",
    "end": "1975720"
  },
  {
    "text": "respective defenses for all of these Falls",
    "start": "1975720",
    "end": "1979840"
  },
  {
    "text": "we want to end our talk with some key takeaways um first account linking in",
    "start": "1981600",
    "end": "1988279"
  },
  {
    "text": "integration platforms has critical design flaws we have done our job to secure",
    "start": "1988279",
    "end": "1994440"
  },
  {
    "text": "those mainstream platforms but we believe there could be more platforms out there that are still exploitable in",
    "start": "1994440",
    "end": "1999480"
  },
  {
    "text": "the wild including leading to single click account takeovers we name our work one hack rule",
    "start": "1999480",
    "end": "2007240"
  },
  {
    "text": "them all because first the impact is actually everywhere it is pervasive across all well-known Brands and covers",
    "start": "2007240",
    "end": "2014039"
  },
  {
    "text": "almost the entire internet and all apps or Services",
    "start": "2014039",
    "end": "2020880"
  },
  {
    "text": "integrated Within These vulnerable platforms are actually impacted moreover it should be the",
    "start": "2020880",
    "end": "2027880"
  },
  {
    "text": "platform's responsibility to fix these issues but until a platform actually",
    "start": "2027880",
    "end": "2032960"
  },
  {
    "text": "takes some action all users including you could be victims",
    "start": "2032960",
    "end": "2039720"
  },
  {
    "text": "lastly there's still an urgent need for industrial standards to secure the entire ecosystem because in that way",
    "start": "2039760",
    "end": "2046360"
  },
  {
    "text": "future platforms would be securely introducing their account linking mechanism from day",
    "start": "2046360",
    "end": "2053240"
  },
  {
    "text": "one thank you and um I'd like to welcome our contributors also on stage and we",
    "start": "2054079",
    "end": "2059320"
  },
  {
    "text": "are ready to take questions [Applause]",
    "start": "2059320",
    "end": "2072468"
  },
  {
    "text": "question uh so for the power automate uh implementation when you did the actual attacks across we're using the same",
    "start": "2074639",
    "end": "2081440"
  },
  {
    "text": "tenant or an attacker tenant to do the actual execution of the attack yeah so actually like uh the victim and attacker",
    "start": "2081440",
    "end": "2088040"
  },
  {
    "text": "could belong to different tenants and uh to launch the attack um yeah it's just",
    "start": "2088040",
    "end": "2094158"
  },
  {
    "text": "like the attacker could be in any tenant it has it it could be like the attacker",
    "start": "2094159",
    "end": "2100040"
  },
  {
    "text": "don't know the victim before and um it's done like in completely isolated uh environment sure sure so I've been using",
    "start": "2100040",
    "end": "2106760"
  },
  {
    "text": "these attacks since like 2018 I seen my own research on how automate very similar to this different from the the",
    "start": "2106760",
    "end": "2112200"
  },
  {
    "text": "attacks but it's what's interesting if you are targeting a 0365 you know",
    "start": "2112200",
    "end": "2117680"
  },
  {
    "text": "Microsoft environment and use your own attacker tenant the same security controls do not apply to your tet that",
    "start": "2117680",
    "end": "2124640"
  },
  {
    "text": "should apply to theirs although you're using their own octo so the interesting thing is you can",
    "start": "2124640",
    "end": "2130440"
  },
  {
    "text": "actually disable that functionality in other words disable the ability to have an attacker put your tokens into their",
    "start": "2130440",
    "end": "2137000"
  },
  {
    "text": "tenant it's called tenant isolation so it actually prevents that attack entirely across the platform so that's",
    "start": "2137000",
    "end": "2143680"
  },
  {
    "text": "one mitigation that's really effective for this yeah thank you for CH yeah yeah",
    "start": "2143680",
    "end": "2151240"
  },
  {
    "text": "thanks any other questions if the there's question you can come to the",
    "start": "2153880",
    "end": "2160160"
  },
  {
    "text": "mic uh thank you very much for providing a really good example uh of that interdependency and weakness uh what",
    "start": "2163960",
    "end": "2171240"
  },
  {
    "text": "about um automations such as uh hyper automation platforms that are available",
    "start": "2171240",
    "end": "2177319"
  },
  {
    "text": "at more of the Enterprise level and popular even in the business Hall uh",
    "start": "2177319",
    "end": "2182359"
  },
  {
    "text": "boost today can you comment on that yeah I would say like you can view",
    "start": "2182359",
    "end": "2188119"
  },
  {
    "text": "Microsoft power automate as a both a consumer facing and Enterprise facing platforms and actually if you talk about",
    "start": "2188119",
    "end": "2195560"
  },
  {
    "text": "the workflow automation platforms as a whole um those Enterprise facing platforms are usually called IP or",
    "start": "2195560",
    "end": "2202520"
  },
  {
    "text": "integration platform as a service and we also found a few cases like for our in our evaluation maybe three or four of",
    "start": "2202520",
    "end": "2210000"
  },
  {
    "text": "the seven vulnerable workflow automation platforms are actually um those Enterprise basing ones yeah so they are",
    "start": "2210000",
    "end": "2218119"
  },
  {
    "text": "I would say like uh consumer and Enterprise facing platforms are equally",
    "start": "2218119",
    "end": "2224078"
  },
  {
    "text": "vulnerable okay uh if there's no more questions uh that's it and you can come welcome to chat with us uh offline we be",
    "start": "2226520",
    "end": "2234200"
  },
  {
    "text": "here for some time okay thank you thank you all thank you",
    "start": "2234200",
    "end": "2240560"
  }
]