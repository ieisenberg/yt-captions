[
  {
    "start": "0",
    "end": "37000"
  },
  {
    "text": "good afternoon welcome to uh final session for the day uh just as a reminder as you are leaving uh this",
    "start": "120",
    "end": "6440"
  },
  {
    "text": "afternoon's talk there are two Pods at the back of the room that you can use to swipe your card and provide speaker",
    "start": "6440",
    "end": "11880"
  },
  {
    "text": "evaluation and talk evaluation we'd appreciate if you do that so at that point in time I will allow uh I will",
    "start": "11880",
    "end": "18199"
  },
  {
    "text": "turn it over to Nathan Kelner and Josh Thomas for so",
    "start": "18199",
    "end": "23330"
  },
  {
    "text": "[Music] exploitation so first thanks everybody",
    "start": "23330",
    "end": "30640"
  },
  {
    "text": "for showing up uh late in the day for the last black hat talk uh we appreciate that this is the talk you",
    "start": "30640",
    "end": "37520"
  },
  {
    "start": "37000",
    "end": "37000"
  },
  {
    "text": "chose um so agenda we're going to go over just what a sock is in general um",
    "start": "37520",
    "end": "43440"
  },
  {
    "text": "then I'm going to actually dive into uh why Harvard chips are cool why we don't",
    "start": "43440",
    "end": "48800"
  },
  {
    "text": "actually see very many of them um and just the mental shifts that you have to do between the x86 Von Newman esque",
    "start": "48800",
    "end": "55039"
  },
  {
    "text": "architecture that we're used to and actually exploiting Harvard um we'll go into just the general Hardware reversing",
    "start": "55039",
    "end": "61800"
  },
  {
    "text": "process that we use um and from there we'll transition into the actual charian chips that we're going to talk about um",
    "start": "61800",
    "end": "67640"
  },
  {
    "text": "we'll do a full live exploitation and then we'll also talk about glitching and other more advanced Hardware",
    "start": "67640",
    "end": "74280"
  },
  {
    "text": "techniques so right so yeah so I'm Nathan Kelner um yeah Josh Thomas we",
    "start": "74280",
    "end": "80560"
  },
  {
    "text": "both work for acuant uh and we do um work like this projects like this um for",
    "start": "80560",
    "end": "86960"
  },
  {
    "text": "our day jobs so so but we found a vendor we had not worked with yet to do this",
    "start": "86960",
    "end": "94280"
  },
  {
    "text": "yeah so what is a sock sock is a system on a chip um it's everything you need",
    "start": "94280",
    "end": "100439"
  },
  {
    "text": "it's basically a computer everything you need to run uh whatever you want to do except for voltage which you have to get",
    "start": "100439",
    "end": "105920"
  },
  {
    "text": "from the wall or some other place and software but I mean it is it's a computer um full microcontroller memory",
    "start": "105920",
    "end": "113119"
  },
  {
    "text": "typically a lot of the peripherals are built in um you see them a lot in uh any",
    "start": "113119",
    "end": "118159"
  },
  {
    "text": "embedded devices you also see them in cell phones uh pretty much everything other than your laptop uh typically runs",
    "start": "118159",
    "end": "124479"
  },
  {
    "text": "a sock um cars are another exception or another thing that you see them in um",
    "start": "124479",
    "end": "131520"
  },
  {
    "text": "one of the reasons they they've got so much great market share right now is because they're incredibly cheap uh and",
    "start": "131520",
    "end": "136720"
  },
  {
    "text": "they're incredibly low power uh so pretty much every new product that we",
    "start": "136720",
    "end": "143000"
  },
  {
    "text": "see that we're attacking on a day job is is powered by a sock um and we have",
    "start": "143000",
    "end": "149400"
  },
  {
    "text": "Harvard so when we're dealing with x86 or old arm or things like that we're typically",
    "start": "149400",
    "end": "154959"
  },
  {
    "text": "looking at Von Newman architectures when we look at Von Newman and how it works um you know we're used to having a code",
    "start": "154959",
    "end": "162800"
  },
  {
    "text": "section and a data section we're used to being able the CPU to be able to grab between them um you may have tricks like",
    "start": "162800",
    "end": "169319"
  },
  {
    "text": "NX and stuff but that is uh used to only be software now it's software and",
    "start": "169319",
    "end": "174360"
  },
  {
    "text": "Hardware but it is it it's it's an add-on when you look at how Harvard works right yeah yeah conceptually right",
    "start": "174360",
    "end": "182000"
  },
  {
    "text": "x86 everything is is sort of one big address space and then we we divide it up at the OS layer right and so well now",
    "start": "182000",
    "end": "189519"
  },
  {
    "text": "we're doing some things at the hardware layer but um so where where your data is or where your code is or your stack is",
    "start": "189519",
    "end": "195120"
  },
  {
    "text": "any of those types of things those are all U potentially mixed and matched and uh it's not anything different at the",
    "start": "195120",
    "end": "201360"
  },
  {
    "text": "hardware layer so when an instruction says you know operate on this address then you know there's the one place that",
    "start": "201360",
    "end": "207000"
  },
  {
    "text": "it goes and it does whatever that instruction does where it's Harvard yeah so um everything's one big chunk when",
    "start": "207000",
    "end": "212519"
  },
  {
    "text": "you start looking at Harvard Harvard is actually cut into two right so I have a code section that has buses that go to",
    "start": "212519",
    "end": "220159"
  },
  {
    "text": "the code section and I have a completely disjoint not Hardware connected separate",
    "start": "220159",
    "end": "226000"
  },
  {
    "text": "piece of memory that is data and I've got separate buffers and buses that go",
    "start": "226000",
    "end": "231040"
  },
  {
    "text": "there um never the two shall meet as far as the technical spec and design that is",
    "start": "231040",
    "end": "236640"
  },
  {
    "text": "Harvard um so I'm going to do that I guess we don't really have NX but we kind of have NX anyway because we don't",
    "start": "236640",
    "end": "244239"
  },
  {
    "text": "have code and data in the same place um one of the cool things that we start seeing is um this dual bus allows like",
    "start": "244239",
    "end": "252000"
  },
  {
    "text": "prefetching to not get in the way of other things and the system can be optimized like crazy so you start seeing",
    "start": "252000",
    "end": "257479"
  },
  {
    "text": "almost every instruction that runs on the device is single cycle um so we've got uh it may be technically slow but it",
    "start": "257479",
    "end": "264720"
  },
  {
    "text": "actually runs fairly fast um at low power yeah one of the things that the like the TR ship that we're going to",
    "start": "264720",
    "end": "270280"
  },
  {
    "text": "talk about later in more detail um that their one of their like selling points or whatever on it is that uh it's got",
    "start": "270280",
    "end": "276080"
  },
  {
    "text": "about an 8 or 16x speed increase over other cores that are that are similar for the same like clock per clock cycle",
    "start": "276080",
    "end": "282600"
  },
  {
    "text": "because they can do basically everything in one clock cycle so there's very few instructions that take more than one yeah so what we started seeing when we",
    "start": "282600",
    "end": "289560"
  },
  {
    "text": "start booking at Harvard a little more um we start seeing the the first headache we see is that like you know",
    "start": "289560",
    "end": "295919"
  },
  {
    "text": "because the buses are different because it's it's physically separated we can have programming and data actually have different bit widths that starts to be a",
    "start": "295919",
    "end": "302639"
  },
  {
    "text": "pain but not really for us it's just interesting um crazy registers um you",
    "start": "302639",
    "end": "309199"
  },
  {
    "text": "typically have custom compilers and custom tools um you have banking headaches which Nathan will get into a",
    "start": "309199",
    "end": "315600"
  },
  {
    "text": "little point in a little bit um and then things like pointers and stacks are just",
    "start": "315600",
    "end": "320919"
  },
  {
    "text": "awkward or gone or work way different um if you're interested in Harvard as a a",
    "start": "320919",
    "end": "326639"
  },
  {
    "text": "overview and just kind of getting a little more into the whole technology if we don't cover enough for you today uh",
    "start": "326639",
    "end": "332560"
  },
  {
    "text": "Travis Goodspeed did an excellent talk at no such con um really you should go look at that he basically covered like",
    "start": "332560",
    "end": "339080"
  },
  {
    "text": "10 different embedded chips and then tips and tricks on how to do exploitation on all of them um",
    "start": "339080",
    "end": "344639"
  },
  {
    "text": "unfortunately none of that really applies to like to this one and so like the stuff we're talking about here there's not a lot of overlap but it's the same space so if you're interested",
    "start": "344639",
    "end": "350759"
  },
  {
    "text": "in this uh it it's it's great work so our typical Hardware reversing",
    "start": "350759",
    "end": "356960"
  },
  {
    "text": "um just what we do how we do it how I attack a problem um how Nathan attacks a problem um we tend to work with Smart",
    "start": "356960",
    "end": "364160"
  },
  {
    "text": "Meters we tend to work with things like that we're talking about a lot of voltage running through your desk at home uh first warning that we hear at",
    "start": "364160",
    "end": "371400"
  },
  {
    "text": "every presentation that is talking about smart meters is uh you have high voltage",
    "start": "371400",
    "end": "376800"
  },
  {
    "text": "you don't want to touch touching high voltage sucks we've all done it um every one of us is at least run one0 through",
    "start": "376800",
    "end": "383280"
  },
  {
    "text": "us right and it it hurts don't don't do that so um be careful uh logic analyzers",
    "start": "383280",
    "end": "389720"
  },
  {
    "text": "they're great um you can start latching on the chips which we'll see in a second uh start figuring out what's going on um",
    "start": "389720",
    "end": "395639"
  },
  {
    "text": "almost every type of Harvard chip or any sort of embedded chip that you're going to look at um we'll typically have a custom",
    "start": "395639",
    "end": "402599"
  },
  {
    "text": "debugging board you can also start playing with the good fet which we've done quite a bit for this project but sadly we're not releasing anything yet",
    "start": "402599",
    "end": "409479"
  },
  {
    "text": "um because it never quite worked the way we wanted um bus pirate I mean typically",
    "start": "409479",
    "end": "414759"
  },
  {
    "text": "you want to be able to figure out what's going on on the wire um then you want to figure out how to actually debug and start playing with things um I'm just",
    "start": "414759",
    "end": "422360"
  },
  {
    "text": "about figuring out figuring out what are those interfaces there right so just figuring out what talks to what how can I interface with that how can I monitor",
    "start": "422360",
    "end": "428160"
  },
  {
    "text": "how it's How the pieces are interfacing with each other um and then in what ways can I can I influence execution State",
    "start": "428160",
    "end": "433440"
  },
  {
    "text": "yeah and the last kind of pro tip that we've got before we really get into the meet is um if you're working on high",
    "start": "433440",
    "end": "439599"
  },
  {
    "text": "voltage or typically almost any embedded system you see um if you are powering that device um like we're we're failing",
    "start": "439599",
    "end": "446639"
  },
  {
    "text": "here um but if you're powering and you're running ground on the same plane",
    "start": "446639",
    "end": "453120"
  },
  {
    "text": "that you're running your device like if we're running 110 that your laptop doesn't like that you end up doing",
    "start": "453120",
    "end": "458319"
  },
  {
    "text": "things like frying your USB ports if if pcbs were designed correctly that would never be a problem but um when you get",
    "start": "458319",
    "end": "463599"
  },
  {
    "text": "into like debugging interfaces and stuff like that like there's a there's a couple of them out there that are uh known for um letting you electrocute",
    "start": "463599",
    "end": "469479"
  },
  {
    "text": "yourself or frying your laptop yeah um so this is kind of just uh we got a",
    "start": "469479",
    "end": "476919"
  },
  {
    "text": "couple pictures that I'll just walk through real quick um this is a typical setup when we're starting to hit uh hardware and start",
    "start": "476919",
    "end": "483639"
  },
  {
    "text": "digging into it what you can see in the foreground there is we've got uh very tiny micro grippers actually gripping",
    "start": "483639",
    "end": "489400"
  },
  {
    "text": "onto the sock as it soldered onto the board so it's it's running it's got 110",
    "start": "489400",
    "end": "495080"
  },
  {
    "text": "volts through it um and then you can see past the beer no it does no the chip",
    "start": "495080",
    "end": "500120"
  },
  {
    "text": "doesn't though that's true the chip doesn't the board does um but you can see like halfway back uh we've actually",
    "start": "500120",
    "end": "506400"
  },
  {
    "text": "got the vendor supplied uh debug Port so I'm actually being able to control debug",
    "start": "506400",
    "end": "512680"
  },
  {
    "text": "but as I'm doing that at a software layer I'm those little micro grippers are actually letting us uh do a full",
    "start": "512680",
    "end": "518560"
  },
  {
    "text": "logic analysis on what's going on on the wires so we're able to track more things than the vendors let us get to um and",
    "start": "518560",
    "end": "525200"
  },
  {
    "text": "start digging a little deeper and then again um you know kind",
    "start": "525200",
    "end": "531399"
  },
  {
    "text": "of the same picture just from a different angle we're basically every time we attack something like this we're really trying to just figure out what's",
    "start": "531399",
    "end": "537480"
  },
  {
    "text": "going on um my thing is really what's going on at boot um you know where",
    "start": "537480",
    "end": "542800"
  },
  {
    "text": "things getting loaded from what can we do our end goal typically is I need to dump this firmware so I can then throw",
    "start": "542800",
    "end": "548959"
  },
  {
    "text": "it in Ida and I'm back in a comfortable spot um but so",
    "start": "548959",
    "end": "556320"
  },
  {
    "text": "Tran these are the chips we're going to talk about today there's a ton of Tran chips on the",
    "start": "556320",
    "end": "562160"
  },
  {
    "text": "market they're one of the biggest vendors for Smart Meters um so you see them everywhere in the smart meter space",
    "start": "562160",
    "end": "568600"
  },
  {
    "text": "you also we've started seeing them a lot in pin pads um any type of distribution automation or home automation um they",
    "start": "568600",
    "end": "576959"
  },
  {
    "text": "were originally Terian semiconductor and then they were bought by Maxum and now they've got a huge huge huge market share but because they already had a",
    "start": "576959",
    "end": "583880"
  },
  {
    "text": "good name Maxum keum um for the most part we only see these on the Metrology",
    "start": "583880",
    "end": "590000"
  },
  {
    "text": "side of um a smart meter there's not there's not really any space that",
    "start": "590000",
    "end": "595760"
  },
  {
    "text": "they're touching on the other side do you agree uh I mean well yeah so it's it's doing the Metrology side always right so",
    "start": "595760",
    "end": "601920"
  },
  {
    "text": "it's always doing the side that's actually like measuring power um and so if you have a smart meter on your house uh there's a good chance that one of",
    "start": "601920",
    "end": "607760"
  },
  {
    "text": "these chips is actually in it performing that function um and then how it talks to everything else right that well that get really that gets different you know",
    "start": "607760",
    "end": "614079"
  },
  {
    "text": "there's there's standard interfaces into this chip um you know serial is the most common one uh and then that can talk to",
    "start": "614079",
    "end": "620000"
  },
  {
    "text": "whatever they want it to talk to and so uh it could it could either talk to another you know another board that uh",
    "start": "620000",
    "end": "625079"
  },
  {
    "text": "is is an entire you know computer in its own right and it's doing whatever it's doing and then it's just faring uh",
    "start": "625079",
    "end": "630440"
  },
  {
    "text": "commands back and forth or it could just be doing like straight pass through and like in the the the traan ship itself",
    "start": "630440",
    "end": "635760"
  },
  {
    "text": "could be speaking something like like uh ANC C c1222 is the one for network",
    "start": "635760",
    "end": "640800"
  },
  {
    "text": "communications and then you've got like actual actual packets terminating inside the traan ship itself so yeah so um when",
    "start": "640800",
    "end": "648399"
  },
  {
    "text": "they're not hooked up you know you basically you have to have physical access to be able to pop this as soon as",
    "start": "648399",
    "end": "653480"
  },
  {
    "text": "they're hooked up to any sort of radio interface now you hacks they have a valid remote attack Vector uh which you",
    "start": "653480",
    "end": "659079"
  },
  {
    "text": "know was logical it's it's not really jumping anywhere from where we're comfortable with",
    "start": "659079",
    "end": "664639"
  },
  {
    "text": "um so uh couple more Pro tips if you ever get into the space if you ever",
    "start": "664639",
    "end": "670480"
  },
  {
    "text": "start poking in a sock in general um Teran is wonderful about this they have",
    "start": "670480",
    "end": "675839"
  },
  {
    "text": "Dev boards where they're trying to sell big vendors you know millions of these chips to start building Hardware with so",
    "start": "675839",
    "end": "682240"
  },
  {
    "text": "they make a a demo board that has great open source code um it's open source kind of Open Source Hardware um",
    "start": "682240",
    "end": "689440"
  },
  {
    "text": "relatively cheap so they're great because the whole chip is broken out completely already um I've got nice",
    "start": "689440",
    "end": "696240"
  },
  {
    "text": "codes so you can start figuring out what the chip is doing at least as far as the vendor so then if you have a specific",
    "start": "696240",
    "end": "701839"
  },
  {
    "text": "Target you're looking at you at least know what reference they started with um and you can look at the board which",
    "start": "701839",
    "end": "709279"
  },
  {
    "text": "here's a demo board right here it's the one uh we're playing with today but you can start looking at the board and",
    "start": "709279",
    "end": "714880"
  },
  {
    "text": "looking at all the specs that come with it and pretty quickly figure out this is how I physically put the ship into deug",
    "start": "714880",
    "end": "720000"
  },
  {
    "text": "mode this is how I enable JTAG if it's been blown um there it's a much easier",
    "start": "720000",
    "end": "725560"
  },
  {
    "text": "than just starting blind um yeah so uh one of the things we",
    "start": "725560",
    "end": "733680"
  },
  {
    "text": "always want to do is we want to dump firmware right and a lot of times that's very difficult on production gear it's",
    "start": "733680",
    "end": "739360"
  },
  {
    "text": "not impossible um but one of the things that we found that is actually significantly easier than fighting with",
    "start": "739360",
    "end": "746440"
  },
  {
    "text": "production gear I buy the demo I take my production gear I run chip",
    "start": "746440",
    "end": "753360"
  },
  {
    "text": "quick around the whole production gear sock I pull that off and then I resolder it on the demo board and now I've got",
    "start": "753360",
    "end": "759560"
  },
  {
    "text": "everything broken out JTAG is miraculously um in Hardware enabled",
    "start": "759560",
    "end": "764720"
  },
  {
    "text": "again and we can just use the standard tools to dump firmware um you can't really do that live in the field as an",
    "start": "764720",
    "end": "770560"
  },
  {
    "text": "attack Vector but if you want just to get the device once uh it's really the easiest way to",
    "start": "770560",
    "end": "776560"
  },
  {
    "text": "go um second thing when you start wanting to look at these type of devices and how",
    "start": "776560",
    "end": "783120"
  },
  {
    "text": "they work um you really want to figure out what the PCB is doing around the sock just as much as you want the sock",
    "start": "783120",
    "end": "789760"
  },
  {
    "text": "um one of the tricks that we have started to do more and more is I take a",
    "start": "789760",
    "end": "795199"
  },
  {
    "text": "board like a production board and I deser everything and just like that's all the detrius crap that was on the",
    "start": "795199",
    "end": "801199"
  },
  {
    "text": "board I'm sure it's important for it to run but I don't care at this point I take that I throw it away um then I",
    "start": "801199",
    "end": "806880"
  },
  {
    "text": "throw the bare PCB in a flatbed scanner I scan both sides and then I just throw into the gamper Photoshop and I start",
    "start": "806880",
    "end": "813120"
  },
  {
    "text": "tracing all of the traces and now I have a complete PCB layout um just like I",
    "start": "813120",
    "end": "818279"
  },
  {
    "text": "would if I was the electrical engineer actually building the PCB to begin with um now I can start enabling and",
    "start": "818279",
    "end": "824480"
  },
  {
    "text": "disabling um filters in the and I can fully understand how that Hardware is working um yeah and and of course you",
    "start": "824480",
    "end": "831680"
  },
  {
    "text": "know um there's different types of pcbs right so you've got ones that have multiple types of layers as a general rule uh the ones that we've seen uh it",
    "start": "831680",
    "end": "839360"
  },
  {
    "text": "those middle layers uh are primarily just either like ground planes or power planes that kind of thing so uh there's",
    "start": "839360",
    "end": "844519"
  },
  {
    "text": "not a lot of complexity on those and you can usually kind of figuring out figure out what they're doing so we've not had anything really complex that that's",
    "start": "844519",
    "end": "850639"
  },
  {
    "text": "bothered us with yet yeah um so and I mean meters you know the the",
    "start": "850639",
    "end": "857880"
  },
  {
    "text": "demo boards are 250 meter boards or or meters in general tend to be really cheap um because they're just mass",
    "start": "857880",
    "end": "863199"
  },
  {
    "text": "produced like crazy um so once we've done the full deep analysis of how the",
    "start": "863199",
    "end": "869759"
  },
  {
    "text": "board works and we can start working on a live PCB we can start playing with it when it's got power through it when it",
    "start": "869759",
    "end": "875160"
  },
  {
    "text": "doesn't have power through it um yeah so typically what we find is and",
    "start": "875160",
    "end": "883680"
  },
  {
    "text": "this is just general not really uteran specific but you know typically what we're looking for when we went a dump fir where is just shift the chip into a",
    "start": "883680",
    "end": "889839"
  },
  {
    "text": "different mode so it's ungrounding a pen it's grounding a pen it's crossing a pin with power um you know the these are how",
    "start": "889839",
    "end": "896839"
  },
  {
    "text": "the hardware actually works so this is what we're going for for when we were really trying to understand",
    "start": "896839",
    "end": "902800"
  },
  {
    "text": "um yeah you want to talk about code tracing oh sure yeah um so some of the chips support what's called code tracing",
    "start": "902800",
    "end": "908839"
  },
  {
    "text": "over the debug interface and some don't uh so the uh like this demo board that we bought here um we had a a long long",
    "start": "908839",
    "end": "916839"
  },
  {
    "text": "hard argument or or discussion I guess with Tran uh where we were just trying to get some of this stuff because it was on back order for an extreme periods of",
    "start": "916839",
    "end": "922880"
  },
  {
    "text": "time and uh so we ended up finally just switching and ordering this one at the last minute quickly because they had it",
    "start": "922880",
    "end": "928279"
  },
  {
    "text": "uh and then later I just that oh it doesn't have code tracing and just code tracing is basically um I mean it's what it sounds like right it just it exports",
    "start": "928279",
    "end": "935440"
  },
  {
    "text": "uh the the the full state of all the registers uh at every single cycle so um",
    "start": "935440",
    "end": "941160"
  },
  {
    "text": "your the the debug application that that they use will give you like full um uh",
    "start": "941160",
    "end": "947000"
  },
  {
    "text": "like the ability to go backwards and forwards through uh execution States so as the program's running it just it makes it so much easier to figure out",
    "start": "947000",
    "end": "953240"
  },
  {
    "text": "what's going on um and with if you're doing you know trying to figure out exploitation if you're just trying to figure out um you know maybe how it's",
    "start": "953240",
    "end": "959079"
  },
  {
    "text": "like pulling in and it's decrypting a certain part of itself to like pull keys out or whatever whatever you want to figure out uh it's so much easier if you",
    "start": "959079",
    "end": "965199"
  },
  {
    "text": "have code tracing so um unfortunately we don't have that to demo because the you know the one that we have doesn't have",
    "start": "965199",
    "end": "970480"
  },
  {
    "text": "that which makes various things harder but um the uh there it's only a slight difference in the debug this expensive",
    "start": "970480",
    "end": "977720"
  },
  {
    "text": "debug interface thing that we had to use so it's worth it to just like we just as a heads up that they don't all have it so it's worth it to find it um all right",
    "start": "977720",
    "end": "985000"
  },
  {
    "text": "so I'm going to switch gears a little bit I'm going to talk about this chip uh specifically and we're going to use it to kind of walk through the uh an",
    "start": "985000",
    "end": "991120"
  },
  {
    "text": "example of how um the harbard architecture works on this one and how exploitation works or how the the",
    "start": "991120",
    "end": "996240"
  },
  {
    "text": "pathways that we've figured out for it um so this is a uh this is like the",
    "start": "996240",
    "end": "1003240"
  },
  {
    "text": "the overall schematic of what is inside that sock right so we're talking about that a Stock's got everything that would",
    "start": "1003240",
    "end": "1009279"
  },
  {
    "text": "be needed for a given uh use case so for this case we're talking Smart Meters so it's got stuff to like Drive the LCD",
    "start": "1009279",
    "end": "1015199"
  },
  {
    "text": "screen it's got stuff to um like well like say pin p that's got stuff to you know to drive the pin pad that's on",
    "start": "1015199",
    "end": "1020720"
  },
  {
    "text": "there uh this has got lots of inputs that are designed specifically for measuring um you know uh measuring power",
    "start": "1020720",
    "end": "1027798"
  },
  {
    "text": "usage in an accurate manner um for Smart Meters right so every single sock like in all the trian socks all have a very",
    "start": "1027799",
    "end": "1034160"
  },
  {
    "text": "similar um uh structure and then they've got like an 851 core and they've got memory they've got these things and",
    "start": "1034160",
    "end": "1039199"
  },
  {
    "text": "they've got different peripherals that they stuffed in uh for the different use cases um so zoom in a little bit and",
    "start": "1039199",
    "end": "1045199"
  },
  {
    "text": "we're going to look at these two to start with so what we're looking at here uh it's the the mpu microprocessor and",
    "start": "1045199",
    "end": "1051080"
  },
  {
    "text": "the C is uh something specific for uh uh doing the power measurement uh uh",
    "start": "1051080",
    "end": "1056799"
  },
  {
    "start": "1052000",
    "end": "1052000"
  },
  {
    "text": "calculations so the mpu that right 851 derivative uh that's an Intel chip that's been around forever uh it that",
    "start": "1056799",
    "end": "1062400"
  },
  {
    "text": "one's very very ubiquitous it's in uh lots of places uh in sort of everyday life uh this version of it uh is one",
    "start": "1062400",
    "end": "1068840"
  },
  {
    "text": "that has just been uh massively uh parallelized or whatever you would say that uh it's got It's got the ability to",
    "start": "1068840",
    "end": "1075000"
  },
  {
    "text": "do um lots of things in just one instruction cycle right we were talking about earlier so that's the major difference on that um it's bite aligned",
    "start": "1075000",
    "end": "1082200"
  },
  {
    "text": "which means that uh you can kind of jump wherever you want right you can uh you can do things like Ro uh if you wanted",
    "start": "1082200",
    "end": "1087720"
  },
  {
    "text": "to um if you were able to control the stack uh so it it's uh useful on on on",
    "start": "1087720",
    "end": "1094320"
  },
  {
    "text": "those sides the computation engine is something that we don't really care about um for like from a security",
    "start": "1094320",
    "end": "1099480"
  },
  {
    "text": "perspective just knowing that it's it's there and it will occasionally step on you so the problem with the c is that it",
    "start": "1099480",
    "end": "1105200"
  },
  {
    "text": "and the microprocessor share uh flash memory and so um basically there's timers firing off all the time saying",
    "start": "1105200",
    "end": "1111760"
  },
  {
    "text": "who's allowed to have or who's allowed to be running and so you'll be doing something uh in your code for example",
    "start": "1111760",
    "end": "1117320"
  },
  {
    "text": "and then suddenly the CE will kick in and it'll like lock you out of flash memory in the middle of what you're",
    "start": "1117320",
    "end": "1123000"
  },
  {
    "text": "doing and so um it's just something you have to keep in mind like when you're doing exploitation on this kind of stuff there's all kinds of other things that",
    "start": "1123000",
    "end": "1129200"
  },
  {
    "text": "are happening via like via interrupts or via uh timers that are going off that are outside of your control and you",
    "start": "1129200",
    "end": "1134600"
  },
  {
    "text": "don't necessarily um you don't necessarily know that those are happening so the very first thing you usually do is you go and you start",
    "start": "1134600",
    "end": "1139960"
  },
  {
    "text": "shutting all that kind of stuff off as soon as like your shell code hits um so yeah the major things that we care about",
    "start": "1139960",
    "end": "1145159"
  },
  {
    "text": "on this particular architecture uh right 851 core uh the memory and then the The Ice components IC being like JTAG analog",
    "start": "1145159",
    "end": "1153159"
  },
  {
    "text": "if you're familiar with that okay so let's talk about memory right so we've got uh these four basic",
    "start": "1153159",
    "end": "1159080"
  },
  {
    "text": "different types and we really really only care about three so the there's flash uh external RAM and then internal",
    "start": "1159080",
    "end": "1164799"
  },
  {
    "text": "Ram so memory map so talking about um where is Flash and and what's that look",
    "start": "1164799",
    "end": "1169919"
  },
  {
    "text": "like um this is where where where code and occasionally static data is stored",
    "start": "1169919",
    "end": "1175159"
  },
  {
    "start": "1171000",
    "end": "1171000"
  },
  {
    "text": "so if you're writing this kind of code uh it would be like you want to be putting things like keys and stuff like that in here for some other reasons",
    "start": "1175159",
    "end": "1180679"
  },
  {
    "text": "we'll talk about later but um static data is also stored there because it's a it's a large amount of space um so like",
    "start": "1180679",
    "end": "1187360"
  },
  {
    "text": "one I think one of the biggest things that's stored there in like the demo software for example is just all of the",
    "start": "1187360",
    "end": "1192520"
  },
  {
    "text": "like the text like the ask key that's used for like the help thing on like one interface so um that so it's got yeah",
    "start": "1192520",
    "end": "1199240"
  },
  {
    "text": "got code uh and data but it's never modified data and the data usually has to be copied somewhere else before you can do anything with it um flash memory",
    "start": "1199240",
    "end": "1205840"
  },
  {
    "text": "itself can't normally be modified so true Harvard would mean that this would be readon like all the time um and that",
    "start": "1205840",
    "end": "1212120"
  },
  {
    "text": "so you would you would load it you'd load code with like a j tag or whatever and then you send the production device out and then it never gets modified ever",
    "start": "1212120",
    "end": "1218039"
  },
  {
    "text": "now reality right is that that nobody can do that right nobody can um ship code on a device and then never update",
    "start": "1218039",
    "end": "1223840"
  },
  {
    "text": "that code again so what that means in the in the real world is that uh that nowadays Harvard architectures require",
    "start": "1223840",
    "end": "1229960"
  },
  {
    "text": "the ability to somehow modify flash memory um so you got to jump through like 10 different Hoops to make that occur um but uh the general statement is",
    "start": "1229960",
    "end": "1239080"
  },
  {
    "text": "that you can't you can't modify it so that makes it hard right if that's the only place that that that code can ever be loaded from that's the only place",
    "start": "1239080",
    "end": "1245120"
  },
  {
    "text": "that instructions are ever run from and you want to you know change the thing like you want to you want to drop Shell Code on it and you want to do whatever",
    "start": "1245120",
    "end": "1250360"
  },
  {
    "text": "you want to do um that is obviously the that's the major barrier on Harvard architecture um uh unique to this um",
    "start": "1250360",
    "end": "1258240"
  },
  {
    "text": "it's it's you know we're talking very small spaces so it only addresses 64 KB at a time uh and then the like half of",
    "start": "1258240",
    "end": "1265159"
  },
  {
    "text": "that is get gets swapped out this thing called banking so this Bank switches so like the the top half is always there so",
    "start": "1265159",
    "end": "1271360"
  },
  {
    "text": "like that first whatever that first 32k uh is always there in that address bace and then the next 32k gets rotated out",
    "start": "1271360",
    "end": "1278559"
  },
  {
    "text": "by what's by a certain value in a uh like a bank select um register B yeah",
    "start": "1278559",
    "end": "1285039"
  },
  {
    "text": "bit register and so whatever set in there tells you what data is accessible over there and that get that brings you all kinds",
    "start": "1285039",
    "end": "1291760"
  },
  {
    "text": "of headaches when it comes time for uh for exploitation in software it's not really a big deal because you just load",
    "start": "1291760",
    "end": "1297799"
  },
  {
    "text": "up the um the settings for the compiler it knows what chip that is and it just automatically handles all that for you",
    "start": "1297799",
    "end": "1303960"
  },
  {
    "text": "so you write normal C code and you don't really have to care about most of this stuff because it'll automatically load in the libraries and do all the bank switching for you um however if you if",
    "start": "1303960",
    "end": "1311120"
  },
  {
    "text": "you jump in uh via some you know external method where uh you've been able to to to do some of the stuff we're",
    "start": "1311120",
    "end": "1316240"
  },
  {
    "text": "talking about here uh or talk about later where you're able to actually get code execution then suddenly you have to deal with all that stuff um and so it's",
    "start": "1316240",
    "end": "1322159"
  },
  {
    "text": "a it's a big headache um flash is is really weird so I don't know if if you know um a lot",
    "start": "1322159",
    "end": "1329080"
  },
  {
    "text": "about Flash or like how it works but like when you get to the point where you actually can start modifying it so let's say that uh that you you bypass you do",
    "start": "1329080",
    "end": "1335760"
  },
  {
    "text": "those tin those tin Hoops so that now you can make modifications well the way flash works is that it's not like an",
    "start": "1335760",
    "end": "1341760"
  },
  {
    "text": "onoff switch like what you normally think about um the way that it works is that you will Mass erase a whole section",
    "start": "1341760",
    "end": "1347919"
  },
  {
    "text": "of it at once once and what that does is it turns all the bits on right so basically it resets everything to FF and",
    "start": "1347919",
    "end": "1353360"
  },
  {
    "text": "then when you code it you turn off select bits to give it a certain value so what that means is that if you want",
    "start": "1353360",
    "end": "1358840"
  },
  {
    "text": "to make a modification you end up that you have to reset it to FF first before you can put an arbitrary piece of data in it um or you have to find a find a",
    "start": "1358840",
    "end": "1365960"
  },
  {
    "text": "place of code memory that's already full of ffs but it's not it's very different than just like normal Ram or like what",
    "start": "1365960",
    "end": "1371000"
  },
  {
    "text": "we think about on you know hard drives and stuff where you just like can just push something and just say go do that um it will it's if you don't know what",
    "start": "1371000",
    "end": "1377080"
  },
  {
    "text": "you're doing um and you don't know what the state of it is beforehand then random rights will just fail because it",
    "start": "1377080",
    "end": "1382840"
  },
  {
    "text": "can't create that state right because it's all a series of just which bits are turned on and which ones are off um and",
    "start": "1382840",
    "end": "1388960"
  },
  {
    "text": "yeah you can only erase pages of Flash not bytes so if you want to make a small modification to the code right what do",
    "start": "1388960",
    "end": "1394080"
  },
  {
    "text": "you have to do well okay crap I've got to pull this whole page of code from over here into RAM I got to make the",
    "start": "1394080",
    "end": "1399360"
  },
  {
    "text": "modifications that I want I got to do a mass erase on this page from over here and then I got to copy it back that's kind of painful to do from",
    "start": "1399360",
    "end": "1407159"
  },
  {
    "text": "um from Shell Code all right so yeah so what do you have to do right what I just walked through um the other things you",
    "start": "1407159",
    "end": "1413120"
  },
  {
    "text": "got to do like that I mentioned earlier you got to make sure you turn off interrupts and turn off C things like that because it'll step on you right in",
    "start": "1413120",
    "end": "1418640"
  },
  {
    "text": "the middle of it um the way that this particular Harvard implementation works uh like I mentioned that normally you",
    "start": "1418640",
    "end": "1424799"
  },
  {
    "text": "can't ever modify uh the the code page you can't ever modify flash um the way that it works is that there's this this",
    "start": "1424799",
    "end": "1430159"
  },
  {
    "text": "move X instruction where normally what that means it's saying copy data to or from X data so X data being a very you",
    "start": "1430159",
    "end": "1436600"
  },
  {
    "text": "know particular section of memory um or the the where all the data is stored like uh like all your variables and all",
    "start": "1436600",
    "end": "1441919"
  },
  {
    "text": "that kind of stuff not code um and you flip a certain bit and suddenly that same instruction now makes a modification to the flash memory um but",
    "start": "1441919",
    "end": "1450159"
  },
  {
    "text": "again that's difficult because it's the same instruction so if you happen to have that bit on longer than it should",
    "start": "1450159",
    "end": "1455720"
  },
  {
    "text": "be and like some other piece of code runs then suddenly like all of your flash just got corrupted right because",
    "start": "1455720",
    "end": "1461039"
  },
  {
    "text": "every single instruction is um like every single function is dealing with move X commands because it's that's",
    "start": "1461039",
    "end": "1466480"
  },
  {
    "text": "where it's storing uh storing arguments and pulling data out things like that and so like if you don't get this thing Switched Off fast enough then um",
    "start": "1466480",
    "end": "1473480"
  },
  {
    "text": "suddenly something else will run and it thinks that it's storing code like on you know or fetching and storing code or",
    "start": "1473480",
    "end": "1478799"
  },
  {
    "text": "storing data over in Ram but instead it's actually corrupting your",
    "start": "1478799",
    "end": "1484520"
  },
  {
    "text": "firmware um right so computation engine will step all over you um and then uh",
    "start": "1484520",
    "end": "1489799"
  },
  {
    "text": "there's one other thing that's that's on here it's not really a security feature it's more of uh just to make sure that uh in",
    "start": "1489799",
    "end": "1495880"
  },
  {
    "text": "that certain sections of memory don't get written it has a way for you to uh to set certain bits that say turn off",
    "start": "1495880",
    "end": "1502200"
  },
  {
    "text": "the first you know X pages of of Flash from being able to be Mass over written so like uh that would typically be where",
    "start": "1502200",
    "end": "1509039"
  },
  {
    "text": "you would store like boot code for example something like that like a sort of fail safe or it's the code that loads",
    "start": "1509039",
    "end": "1514200"
  },
  {
    "text": "everything else and so you put that there and and then you never want it to be overwritten but it's just a it's just a bit so um there's not a security",
    "start": "1514200",
    "end": "1520200"
  },
  {
    "text": "feature of that you can just goad and change it if you need to right so we can unset bits um in",
    "start": "1520200",
    "end": "1526760"
  },
  {
    "text": "certain specific situations you can be happy with not having to do that mass erase trick you you can craft but it's",
    "start": "1526760",
    "end": "1532799"
  },
  {
    "text": "got to be that you know in a in a binary one and zero format you can still flip",
    "start": "1532799",
    "end": "1538840"
  },
  {
    "text": "from a one to a zero and then recraft your data but you have to I mean that is a huge headache right um there's been",
    "start": "1538840",
    "end": "1545760"
  },
  {
    "text": "some stuff on other architectures where this matters a lot more um like uh some of the stuff that that Travis has talked",
    "start": "1545760",
    "end": "1551200"
  },
  {
    "text": "about um on I don't remember which architecture it was now but the uh the",
    "start": "1551200",
    "end": "1556840"
  },
  {
    "text": "the the particular way that that um like the compilers on that uh architecture worked is that they would store um they",
    "start": "1556840",
    "end": "1564399"
  },
  {
    "text": "would store certain types of stuff that you could modify uh up higher than stuff down below that you cared about so like",
    "start": "1564399",
    "end": "1570399"
  },
  {
    "text": "what you would end up being able to do is you could unset certain bits and then you could drop a a pointer to being a lower value and then you could jump out",
    "start": "1570399",
    "end": "1577200"
  },
  {
    "text": "of that particular area that you were in so like the the upper area would be this protected area that you can't get into for example um and then you unset some",
    "start": "1577200",
    "end": "1583039"
  },
  {
    "text": "bits and then suddenly now you're down in you know like the equivalent of user land right we can't do that here because we kind of have the problem um all the",
    "start": "1583039",
    "end": "1589799"
  },
  {
    "text": "code that's already there uh is down below and then the only places that we would ever modify are up above so you",
    "start": "1589799",
    "end": "1595640"
  },
  {
    "text": "can't you can't go higher but you could theoretically go lower all right so next section right",
    "start": "1595640",
    "end": "1602520"
  },
  {
    "text": "we're going to talk about um Iram they're down there at the bottom so irm is really small right uh what is it 256",
    "start": "1602520",
    "end": "1609120"
  },
  {
    "text": "bytes I think um yeah and uh and so that's where like so special function registers that's um yeah we don't really",
    "start": "1609120",
    "end": "1616520"
  },
  {
    "text": "need to know what those are other than just the that they uh that's where you store certain types of bits on like the state or the the configuration of the",
    "start": "1616520",
    "end": "1622919"
  },
  {
    "text": "processor um and then basically what's in here is uh is your stack for the most part and so it's really small and so",
    "start": "1622919",
    "end": "1630159"
  },
  {
    "text": "what that let's see yeah so depending on compiler and stting and and settings the stack is usually there but the problem",
    "start": "1630159",
    "end": "1637080"
  },
  {
    "text": "is that it's so small that variables aren't so that's another major difference right from the stacks that we're used to variables are never stored",
    "start": "1637080",
    "end": "1642559"
  },
  {
    "text": "here um the compiler basically always sticks them over an X data and then it hard links them um or it will uh it'll",
    "start": "1642559",
    "end": "1650039"
  },
  {
    "text": "just embed it directly into the code itself if it knows that it can do that so that makes it really hard for",
    "start": "1650039",
    "end": "1655159"
  },
  {
    "text": "exploitation right like you think about um any type of uh the of you know exploitation pathway that deals with the",
    "start": "1655159",
    "end": "1661399"
  },
  {
    "text": "stack um none of those are really are really valid on this particular architecture because like you know any",
    "start": "1661399",
    "end": "1666840"
  },
  {
    "text": "sort of a like let's say like a a MIM copy bug right um let's see any kind any",
    "start": "1666840",
    "end": "1674320"
  },
  {
    "text": "kind of MIM copy bug you would not be able to uh modify the stack in this case because you're not actually on the stack",
    "start": "1674320",
    "end": "1679360"
  },
  {
    "text": "right all your variables are someplace else all right so xram so this is the",
    "start": "1679360",
    "end": "1685360"
  },
  {
    "text": "one that we uh primarily are the most interested in have the most interaction with um this is where variables go",
    "start": "1685360",
    "end": "1691519"
  },
  {
    "text": "because that's where variables go then that's what you end up being able to corrupt um all of the you know when",
    "start": "1691519",
    "end": "1697200"
  },
  {
    "text": "whenever um a mistake is made in code that happens um and it's it's some some",
    "start": "1697200",
    "end": "1702760"
  },
  {
    "text": "sort of mistake that allows you to modify like the the uh the variables that it's dealing with right so like if",
    "start": "1702760",
    "end": "1707960"
  },
  {
    "text": "it's it's a if it's a MIM copy right that I talked about a second ago um and it allows you to overwrite something well in this in this case you'd be able",
    "start": "1707960",
    "end": "1714080"
  },
  {
    "text": "to overwrite things uh after that in X data but again we don't have stuff",
    "start": "1714080",
    "end": "1719320"
  },
  {
    "text": "that's there we don't have registers there we don't have you know you don't have the ability to run to overwrite the the return value for example because the",
    "start": "1719320",
    "end": "1724480"
  },
  {
    "text": "return value is not there it's in someplace else all right and then um so we'll come",
    "start": "1724480",
    "end": "1730320"
  },
  {
    "text": "back to that here in a second when we get to uh to the actual exploitation stuff um but then this last last section",
    "start": "1730320",
    "end": "1735840"
  },
  {
    "text": "that's specific for this we'll talk a little bit about the emulator and that's what what the this JTAG like",
    "start": "1735840",
    "end": "1740919"
  },
  {
    "text": "thing is um it's a proprietary undocumented debugging interface which basically means that you've got to buy the expensive one um and then but once",
    "start": "1740919",
    "end": "1747640"
  },
  {
    "text": "you have that then you're able to to talk to it uh We've looked at a little bit of trying to to reverse this out and do some of it ourselves um and there's",
    "start": "1747640",
    "end": "1755320"
  },
  {
    "text": "some possibility to do that it's similar to uh the like the chipcon debugging interface which is also made by Intel um",
    "start": "1755320",
    "end": "1762320"
  },
  {
    "text": "so it's it's similar to that which there's some code for in the good fet base um but uh but it's still pretty",
    "start": "1762320",
    "end": "1768519"
  },
  {
    "text": "hard so we would that's one of the things that we're we're we're continuing to work on um what we'd love to be able",
    "start": "1768519",
    "end": "1774679"
  },
  {
    "text": "to do is uh release some the ability to do at least certain types of debugging without requiring this device so um if",
    "start": "1774679",
    "end": "1782200"
  },
  {
    "text": "we can get to that state you know we're we're we're going to be releasing that code but um for now this is what we have to",
    "start": "1782200",
    "end": "1787559"
  },
  {
    "start": "1787000",
    "end": "1787000"
  },
  {
    "text": "use so the way this works so you think about jtags right and you know that uh like jtags have these fuses that that",
    "start": "1787559",
    "end": "1793720"
  },
  {
    "text": "are there and you can blow a fuse and then the JTAG interface is now turned off um in this case it doesn't it doesn't quite work the same way um it",
    "start": "1793720",
    "end": "1801760"
  },
  {
    "text": "doesn't it's not on whenever you first turn on the machine or first turn on when you first apply power for the first 30 or 60 instructions the the uh",
    "start": "1801760",
    "end": "1809000"
  },
  {
    "text": "processor is in what's called pre-boot phase and it's turned off during that during that time period and then at the end of that preboot phase which is",
    "start": "1809000",
    "end": "1815200"
  },
  {
    "text": "either 30 or 60 Cycles depending on it may be depending on documentation version uh and rather not chip I think",
    "start": "1815200",
    "end": "1821039"
  },
  {
    "text": "somebody made a mistake but um it doesn't matter it's so it's so small that it's you know it's imperceptible for us for the most part um and then it",
    "start": "1821039",
    "end": "1827159"
  },
  {
    "text": "gets turned off it's turned on by default every single time you apply power right like it would be on by default every time it turns on power",
    "start": "1827159",
    "end": "1833279"
  },
  {
    "text": "unless you set a specific bit that says hey don't turn me on um the pin pad ones are a little bit",
    "start": "1833279",
    "end": "1839679"
  },
  {
    "text": "different they allow you to permanently set that that bit that says keep this thing off um but this one doesn't it's",
    "start": "1839679",
    "end": "1845360"
  },
  {
    "text": "like pin pad one is more like a uh a JTAG fuse uh We've not actually looked at one of those so I don't know how",
    "start": "1845360",
    "end": "1850640"
  },
  {
    "text": "robust that is uh if you can use you know similar um types of attacks that have been used on JTAG fuses to try to get back into it but um they say the",
    "start": "1850640",
    "end": "1858240"
  },
  {
    "text": "documentation anyway says that it's permanent smart meter socks chose to not do that so uh there are certain security",
    "start": "1858240",
    "end": "1863679"
  },
  {
    "text": "ramifications to that all right and then last case here we'll talk about uh the interfaces into",
    "start": "1863679",
    "end": "1870399"
  },
  {
    "text": "this guy so you've got a Serial uarts or a Serial uart that's just kind of standard like you would think and then it also has Hardware that's designed to",
    "start": "1870399",
    "end": "1876960"
  },
  {
    "text": "speak to an optical interface on the outside um that's the uh the you know the looking into the eye of the meter",
    "start": "1876960",
    "end": "1882120"
  },
  {
    "text": "like cutaway stock last year right uh that's where they match on the pinouts and right these interfaces are",
    "start": "1882120",
    "end": "1889080"
  },
  {
    "start": "1888000",
    "end": "1888000"
  },
  {
    "text": "where all your problems are right because this is where uh you actually get to interface with code so remote expectation occurs over these types of",
    "start": "1889080",
    "end": "1895360"
  },
  {
    "text": "interfaces um right so cutaways talked uh about doing um the you know doing",
    "start": "1895360",
    "end": "1901159"
  },
  {
    "text": "exploitation or or finding bugs at least over that obstacle Port doing on on that side um there's another serial Port that's on the other side of this that",
    "start": "1901159",
    "end": "1907480"
  },
  {
    "text": "then talks to the world right somehow um and whoever that's doing that whatever that's handling that's where you're where your problems are going to",
    "start": "1907480",
    "end": "1914200"
  },
  {
    "text": "be right yeah plug and Coda aways talk um bugs found on that side will likely",
    "start": "1914200",
    "end": "1919320"
  },
  {
    "text": "be found on the inside because of the way the uh the the the standards work they're using a very either the same or",
    "start": "1919320",
    "end": "1925760"
  },
  {
    "text": "a very similar an standard uh on both ports so whatever you found whatever you're able to find on the outside via",
    "start": "1925760",
    "end": "1931080"
  },
  {
    "text": "like cutaways tool for example if you just happen to you know to to to play with that um something very similar",
    "start": "1931080",
    "end": "1936840"
  },
  {
    "text": "would likely be also uh triggerable uh over the network side so the thing with",
    "start": "1936840",
    "end": "1942720"
  },
  {
    "text": "cutaways talk right it's really really cool stuff but we're talking about um plugging onto a to a meter on the outside if you find a bug that allows",
    "start": "1942720",
    "end": "1949039"
  },
  {
    "text": "you to do that um and you you have a way to be able to get on the network which depending on the architecture there may be a dozens of ways to do that uh and",
    "start": "1949039",
    "end": "1956000"
  },
  {
    "text": "you can send packets for this thing then you'd be able to trigger the similar types of",
    "start": "1956000",
    "end": "1960799"
  },
  {
    "text": "bucks all right so let's talk about um sort of bypasses for some of the things we've talked about okay so the secure",
    "start": "1961600",
    "end": "1967320"
  },
  {
    "start": "1962000",
    "end": "1962000"
  },
  {
    "text": "bit right this is the thing that says um let's prevent the ability to uh to use",
    "start": "1967320",
    "end": "1973919"
  },
  {
    "text": "the debugging interface right so this says um I'm not going to let you extra only read flash memory I'm not going to",
    "start": "1973919",
    "end": "1979480"
  },
  {
    "text": "let you uh you know light up the debugging interface",
    "start": "1979480",
    "end": "1985679"
  },
  {
    "text": "um the way to unset that so it's not again that is also not a permanent flag",
    "start": "1985799",
    "end": "1992480"
  },
  {
    "text": "right um the way to to unset that kind of stuff is to hit it with a mass arase so that you uh you",
    "start": "1992480",
    "end": "1999399"
  },
  {
    "text": "wipe out the code that is setting that in the first place so in the first 30 or 60 first 30 or 60 Cycles what's normally",
    "start": "1999399",
    "end": "2005320"
  },
  {
    "text": "happening is that there's a there's a instruction that runs that sets this and says turn off the debugging interface preboot phase ends and then the debuging",
    "start": "2005320",
    "end": "2011320"
  },
  {
    "text": "interface does not come up so how do you get back into that device right so the they didn't want to just have that be a",
    "start": "2011320",
    "end": "2016720"
  },
  {
    "text": "bricked scenario so the common way that these guys will do it and MSP 430 does it the same way and others um it'll let",
    "start": "2016720",
    "end": "2022000"
  },
  {
    "text": "you go ahead and like you without being able to light up the full debuging interface you can perform a mass erase",
    "start": "2022000",
    "end": "2027320"
  },
  {
    "text": "so what does that do right it resets all the flash to FF um but there's an important consideration here right did they also think to clear all the other",
    "start": "2027320",
    "end": "2033919"
  },
  {
    "text": "locations cuz that's not just where that's not the only location where something sensitive is",
    "start": "2033919",
    "end": "2039240"
  },
  {
    "text": "right so um this is a this is the screen that pops up on the debug interface when it's inse secure mode when that uh when",
    "start": "2039240",
    "end": "2044480"
  },
  {
    "text": "that bit has been set there on the left is what it looks like whenever that's been set um and it's basically saying no you don't get",
    "start": "2044480",
    "end": "2050679"
  },
  {
    "text": "access to any of that stuff but then after you do a mass arase well now the code is gone but all the data is still",
    "start": "2050679",
    "end": "2056800"
  },
  {
    "text": "there right so like this is an example here that we just used where um you know we had some code that loaded this that",
    "start": "2056800",
    "end": "2062280"
  },
  {
    "text": "loaded black hat into memory uh and then we wipe that code and then we light up the debugging interface and then wow I",
    "start": "2062280",
    "end": "2068358"
  },
  {
    "text": "can still see all that stuff now that may or may not matter depending on the particular use case so I mean right this",
    "start": "2068359",
    "end": "2075398"
  },
  {
    "text": "is this is like being able to see Ram without being able to see the code so you don't necessarily have any context to know what these things are outside of",
    "start": "2075399",
    "end": "2082000"
  },
  {
    "text": "knowing what the device does right so if the device does things like let's say it's a smart meter and let's say that it's it's doing um encryption as part of",
    "start": "2082000",
    "end": "2089560"
  },
  {
    "text": "an an standard well you know certain things about how that's going to work you know the things about like what type of encryption it uses you know what",
    "start": "2089560",
    "end": "2094878"
  },
  {
    "text": "sizes it its key sizes are things like that um and coincidentally the way that",
    "start": "2094879",
    "end": "2100280"
  },
  {
    "text": "that's implemented in code uh will most commonly always require you to copy that",
    "start": "2100280",
    "end": "2106079"
  },
  {
    "text": "key out of some like out of code memory into RAM to then perform operations on it so if you have a live you know a live",
    "start": "2106079",
    "end": "2113560"
  },
  {
    "text": "meter you can try to authenticate authenticate with it uh or or try to uh begin encryption operations with it uh",
    "start": "2113560",
    "end": "2119320"
  },
  {
    "text": "it'll load its key into RAM somewhere and then you do a mass erase and then take a look and then oh look check that out there's the key right there right so",
    "start": "2119320",
    "end": "2126280"
  },
  {
    "text": "and that's that's a hardware problem like that's something that that can't be fixed and it's not just a traan problem either uh msp430 does the exact same",
    "start": "2126280",
    "end": "2131800"
  },
  {
    "text": "thing um there's several other uh other chips in this embedded world that do the",
    "start": "2131800",
    "end": "2137000"
  },
  {
    "text": "same thing so right xrm is accessible once",
    "start": "2137000",
    "end": "2142880"
  },
  {
    "text": "flash has been Mass rased after you do that hard reset it comes up um power's never lost to that so even though",
    "start": "2142880",
    "end": "2147960"
  },
  {
    "text": "portions of it uh would normally go away like with with when power shut off um as long as power is maintained then the",
    "start": "2147960",
    "end": "2153640"
  },
  {
    "text": "data is all still there and so where did you store those keys right and then UNT even if you stored them in code half the",
    "start": "2153640",
    "end": "2159359"
  },
  {
    "text": "time they get copied over to data at some point anyway all right so um so let's talk",
    "start": "2159359",
    "end": "2165960"
  },
  {
    "start": "2163000",
    "end": "2163000"
  },
  {
    "text": "about code execution right this is what kind of like what what one of the main points of the talk was so code is in in",
    "start": "2165960",
    "end": "2171720"
  },
  {
    "text": "separate locations right there is no concept of being able to execute code from data like the instruction pointer",
    "start": "2171720",
    "end": "2177240"
  },
  {
    "text": "can never point over there there are different buses it makes no sense so there's no there's no way to do that the only way you're going to be able to get",
    "start": "2177240",
    "end": "2183319"
  },
  {
    "text": "this is that you've got to be able to um find a way to divert execution flow and",
    "start": "2183319",
    "end": "2188800"
  },
  {
    "text": "then once you've got that then you've got to be you got to be be able to piece together the components to jump through",
    "start": "2188800",
    "end": "2194079"
  },
  {
    "text": "those 10 Hoops like I said earlier to actually make modifications to code and there's some things in that that happen",
    "start": "2194079",
    "end": "2199280"
  },
  {
    "text": "in real life that make that a little bit easier um because the stacks over in I",
    "start": "2199280",
    "end": "2205760"
  },
  {
    "text": "data in in the the internal RAM and variables are over in external data over here normal vulnerabilities will will",
    "start": "2205760",
    "end": "2212520"
  },
  {
    "text": "not work right it's just incredibly hard to to leverage those um and then unfortunately even after you gain",
    "start": "2212520",
    "end": "2217960"
  },
  {
    "text": "execution pointer control you still don't have have control of the stack in in on this architecture because whatever",
    "start": "2217960",
    "end": "2224960"
  },
  {
    "text": "mechanism you're going to use to gain execution flow uh is not coming through the stack right so you don't have control of that um or you may have the",
    "start": "2224960",
    "end": "2231280"
  },
  {
    "text": "ability to see it or like modify it but you can't do that in any sort of um like contextual fashion you don't necessarily",
    "start": "2231280",
    "end": "2236839"
  },
  {
    "text": "know what it is so you can go and you could clobber it right but that's not going to that's not going to give you any um any",
    "start": "2236839",
    "end": "2242960"
  },
  {
    "text": "help um so let's talk about a standard overflow right so standard MIM Copy Type Thing",
    "start": "2242960",
    "end": "2248440"
  },
  {
    "text": "um once you've once you've got you know whatever that type of bug would be um you've got the ability to make",
    "start": "2248440",
    "end": "2253839"
  },
  {
    "text": "modifications to X data right but there's nothing important there so how do we do it um and it's not necessarily just an -51 thing that uh that this does",
    "start": "2253839",
    "end": "2261640"
  },
  {
    "text": "it but it's it's try and specific so there are other um EI I think uh uh Travis's talk that we we plugged earlier",
    "start": "2261640",
    "end": "2268280"
  },
  {
    "text": "uh he speaks of of another 8051 implementation where this is is doable because the stack is in a in a location",
    "start": "2268280",
    "end": "2274240"
  },
  {
    "text": "um that is is is bigger in comparison and so um the compilers for that one",
    "start": "2274240",
    "end": "2279880"
  },
  {
    "text": "don't do this sort of trick where it sticks the stack over here and sticks the data over here uh so in those cases you know standard buffer overflows would",
    "start": "2279880",
    "end": "2287160"
  },
  {
    "text": "would work just fine but they won't in ours unfortunately um and then because",
    "start": "2287160",
    "end": "2293359"
  },
  {
    "text": "there's another side of this too so what what we end up looking for right we're what what you're ultimately doing is you're trying to find pointers right",
    "start": "2293359",
    "end": "2298520"
  },
  {
    "text": "you're trying to find some sort of pointers stored over an external data um that you can then modify and then trigger some code execution path that",
    "start": "2298520",
    "end": "2304200"
  },
  {
    "text": "will then fire those off and get them for you um but there's a few reasons why those are really hard to find right so",
    "start": "2304200",
    "end": "2309839"
  },
  {
    "text": "normally right they're on the stack there you know as part of normal execution flow and you pop one on and you go you go to run a function and then",
    "start": "2309839",
    "end": "2315319"
  },
  {
    "text": "you return back but even outside of that um the compilers know that uh I mean it",
    "start": "2315319",
    "end": "2321680"
  },
  {
    "text": "knows a lot about the state of of the program right and so what it'll do um is that half the time it just embeds like a",
    "start": "2321680",
    "end": "2327400"
  },
  {
    "text": "hardcoded value into the code anyway so there's not there's not a lot of pointers um that are accessible anywhere",
    "start": "2327400",
    "end": "2333280"
  },
  {
    "text": "because they're all they're all permanently static over in read only memory um but so let's talk about like the ways",
    "start": "2333280",
    "end": "2340160"
  },
  {
    "text": "that you might be able to do this and the ways that that we'll demo this here in a minute so the anti smart meter standard uh uses concept of tables right",
    "start": "2340160",
    "end": "2346839"
  },
  {
    "text": "so if you saw cway talk you know all about this stuff or if you've seen one of the other ones um but it's it's it's",
    "start": "2346839",
    "end": "2352640"
  },
  {
    "text": "when you read it when you're reading memory out of data or reading memory off of a off a meter let's say you're doing something similar like you want to know",
    "start": "2352640",
    "end": "2358000"
  },
  {
    "text": "you know how much power usage has been has been used over this period what you do is you know via VIA this via the",
    "start": "2358000",
    "end": "2363040"
  },
  {
    "text": "standard you ask it the right way to say hey give me the contents of table you know 10 whatever um and then if if",
    "start": "2363040",
    "end": "2368480"
  },
  {
    "text": "you've got access rights to do that it'll give it to you well so the spec of course tells you what's valid it tells you what to what what tables are real",
    "start": "2368480",
    "end": "2374800"
  },
  {
    "text": "what tables are not um and so of course you have common programming errors where you know you you code only to what the spec says so um it's common to see or",
    "start": "2374800",
    "end": "2383760"
  },
  {
    "text": "vulnerabilities do exist um or have existed that uh that did not account for being able",
    "start": "2383760",
    "end": "2389720"
  },
  {
    "text": "to like ask for for table values or things like that that um would never happen in the normal part of uh of of",
    "start": "2389720",
    "end": "2394960"
  },
  {
    "text": "anything right and so when that happens you could see something like this right so um let's say that uh you've got some",
    "start": "2394960",
    "end": "2401720"
  },
  {
    "text": "you know some table value uh and then you're taking a table index that's coming in from like a request it's saying I want to see table 10 for",
    "start": "2401720",
    "end": "2407240"
  },
  {
    "text": "example um and if that's if that's implemented and in arrays then you'll see something along these lines where um",
    "start": "2407240",
    "end": "2413599"
  },
  {
    "text": "it feeds a value in now what this looks like and if you if you've not seen this type of vulner vulnerability before what",
    "start": "2413599",
    "end": "2419599"
  },
  {
    "text": "this is it's complete arbitrary control of uh external data so what this would let you this would give you a right",
    "start": "2419599",
    "end": "2425200"
  },
  {
    "text": "anywhere anywhere in external data because what that is is that you can just increasing you can keep increasing the table index and it'll overflow",
    "start": "2425200",
    "end": "2431520"
  },
  {
    "text": "itself and then so the array will just happily like the array may only be you know it could be like say 10 bytes over here and you just keep grabbing indexes",
    "start": "2431520",
    "end": "2438200"
  },
  {
    "text": "all the way off the end and so you can keep reading all the way around and then your your your integer will go ahead and overflow and it comes back over here and",
    "start": "2438200",
    "end": "2443520"
  },
  {
    "text": "reads from in front of it and so you end up getting the ability to uh to read or write to the whole thing depending on what the bug",
    "start": "2443520",
    "end": "2449200"
  },
  {
    "text": "is so um okay so we can write to arbitrary locations of of xram right so",
    "start": "2449200",
    "end": "2454240"
  },
  {
    "text": "we can do that uh and of course having the same type of read runs well what are we going to write right how are we going to do this where how are we going to find what we need to modify how are we",
    "start": "2454240",
    "end": "2460560"
  },
  {
    "text": "going to find a pointer over there somewhere that's going to divert execution flow for us um you know one of the things we we",
    "start": "2460560",
    "end": "2467359"
  },
  {
    "text": "mentioned this demo board right uh one of the reasons that we we chose this to talk about it is because it's this architecture that we wanted to speak",
    "start": "2467359",
    "end": "2473359"
  },
  {
    "text": "about um but it's a uh an open or sort of public publicly available board that",
    "start": "2473359",
    "end": "2478440"
  },
  {
    "text": "just anybody can buy and then we can you know publicly talk about it um this comes with sample sample code right that",
    "start": "2478440",
    "end": "2484079"
  },
  {
    "text": "is given to uh you as a potential developer you want to build smart meter apps and so the the demo board comes",
    "start": "2484079",
    "end": "2490960"
  },
  {
    "text": "with common features that you would want to do um in the real world one of those is using this thing called software",
    "start": "2490960",
    "end": "2496160"
  },
  {
    "text": "timer interrupts um it uses or it grants the ability for functions to be called",
    "start": "2496160",
    "end": "2503079"
  },
  {
    "text": "um after a certain number of Cycles have occurred why it's there is because",
    "start": "2503079",
    "end": "2508160"
  },
  {
    "text": "Hardware interrupts Hardware timer interrupts are relatively expensive because you don't have a lot of them so like on this one I think you've got",
    "start": "2508160",
    "end": "2513280"
  },
  {
    "text": "maybe like four Hardware timer interrupts and so what right those are just you you you call it with like",
    "start": "2513280",
    "end": "2518760"
  },
  {
    "text": "basically say I want you to invoke this function after this many cycles have run or I want you to do this particular call back whenever this interrupt fires and",
    "start": "2518760",
    "end": "2527000"
  },
  {
    "text": "uh but you may need more than four right so what their their Library does is it uh implements software timers on top of",
    "start": "2527000",
    "end": "2533319"
  },
  {
    "text": "those so it basically takes one Hardware timer and multiplexes it out to like 8 or 16 um but ultimately right what that",
    "start": "2533319",
    "end": "2539800"
  },
  {
    "text": "means is that there's there's there are arrays somewhere that are sitting in memory that contain function pointers",
    "start": "2539800",
    "end": "2545960"
  },
  {
    "text": "and then there's another right next to it that contains how many cycles to run in between when it should fire",
    "start": "2545960",
    "end": "2552599"
  },
  {
    "text": "right okay so let's say that so at this point um we know we've got we've identified some pointers we'd like to modify those pointers um how can we do",
    "start": "2552599",
    "end": "2559640"
  },
  {
    "text": "that right so well we can't we can't modify flash directly we already know that um we can't execute data anywhere",
    "start": "2559640",
    "end": "2564880"
  },
  {
    "text": "else uh this implementation only executes functions in that first 64k which makes things um more difficult",
    "start": "2564880",
    "end": "2570800"
  },
  {
    "text": "especially if you're trying to do something like R like with uh you know taking advantage of the the sort of the one bite alignment stuff um and then",
    "start": "2570800",
    "end": "2577920"
  },
  {
    "text": "additionally you've got all the banking issues but again the real real world real life scenarios kind of come to the",
    "start": "2577920",
    "end": "2583280"
  },
  {
    "text": "rescue um even though architecturally that could be really hard uh those are the same problems that the code has to",
    "start": "2583280",
    "end": "2588920"
  },
  {
    "text": "solve for itself so um code blocks exist that do most of those heavy lifting um in the real world right you're going to",
    "start": "2588920",
    "end": "2595000"
  },
  {
    "text": "have things like bootloading and reflashing code so somewhere you're going to have code already that uh that",
    "start": "2595000",
    "end": "2600359"
  },
  {
    "text": "does all those things for you it disables interrupts it turns off the C it uh flips the bit and then it copies a particular value from over here into",
    "start": "2600359",
    "end": "2607119"
  },
  {
    "text": "flash memory and then it and then it reverses itself and steps back out so that that codee's going to be there somewhere already um again for this we",
    "start": "2607119",
    "end": "2613640"
  },
  {
    "text": "just copied uh there was another Library um from Tran just that gives it an example of how to do it um and uh and so",
    "start": "2613640",
    "end": "2620520"
  },
  {
    "text": "we would just use that as as a great public example we stuffed that into our code and then that's what we what we end up leveraging uh in the exploit here in",
    "start": "2620520",
    "end": "2626200"
  },
  {
    "text": "a minute okay so STM right how does that work uh here's what the functions look",
    "start": "2626200",
    "end": "2632760"
  },
  {
    "start": "2629000",
    "end": "2629000"
  },
  {
    "text": "like you can see uh the the STM start function is just taking a function point and it's taking how many counts that you",
    "start": "2632760",
    "end": "2638640"
  },
  {
    "text": "want and then it stuffs that onto that array FN ptrs uh and then later there's another one that says hey uh if if one",
    "start": "2638640",
    "end": "2645319"
  },
  {
    "text": "of these is inspired then let's go ahead and call it um so this is just a GP through the",
    "start": "2645319",
    "end": "2651480"
  },
  {
    "text": "uh the source tree for this particular sample thing and this is just pointing out there's all these different locations that are using this functionality right it's used by the uh",
    "start": "2651480",
    "end": "2657680"
  },
  {
    "text": "the serial ports uh and the command line interface stuff it's used by eom uh it's used by the uh the LCD screen on the",
    "start": "2657680",
    "end": "2663640"
  },
  {
    "text": "front uh it's kind of it's used everywhere so that means that when you walk into a when you walk onto a a",
    "start": "2663640",
    "end": "2669480"
  },
  {
    "text": "device after you've got exploitation you know working um that means that those arrays are already going to be populated there's already going to be arrays there",
    "start": "2669480",
    "end": "2675000"
  },
  {
    "text": "um that are doing this for you so you can just modify them and your things will run",
    "start": "2675000",
    "end": "2680839"
  },
  {
    "text": "um all of the locations where the stuff is going to be stored are static for a given piece of compile so once you",
    "start": "2680839",
    "end": "2687160"
  },
  {
    "text": "locate where that array is stored um it's going to be the same for like every every single version or for every",
    "start": "2687160",
    "end": "2692760"
  },
  {
    "text": "iteration of that version right so that means all the meters are going to be the same that that array is going to be stored at the same same place on all of them um you just have to compute the",
    "start": "2692760",
    "end": "2699480"
  },
  {
    "text": "index that you know to feed into your you know your bug that we talked about earlier um and then it will allow you to make modif or make modifications to that",
    "start": "2699480",
    "end": "2707760"
  },
  {
    "start": "2707000",
    "end": "2707000"
  },
  {
    "text": "location um now the stack is still logically split herec of because of how the",
    "start": "2707760",
    "end": "2713800"
  },
  {
    "text": "compiler set it sets it up how the compiler does like hard links over here and then there's the real stack over here now what we're able to do is we're",
    "start": "2713800",
    "end": "2720160"
  },
  {
    "text": "able to fire off function pointers so we're able to um we're able to gain code execution but we still don't have control of like other stuff so like I",
    "start": "2720160",
    "end": "2726599"
  },
  {
    "text": "can say hey okay um I'm going to overwrite a pointer and I want it to run this function over here but that that function maybe is expecting something on",
    "start": "2726599",
    "end": "2733400"
  },
  {
    "text": "the stack right that happens occasionally um and so it'll look up something on the stack and then points somewhere else well that's that's really hard so you've got to figure out um",
    "start": "2733400",
    "end": "2740240"
  },
  {
    "text": "where the locations um for variable storage are or you have to find which functions are actually using variable",
    "start": "2740240",
    "end": "2745280"
  },
  {
    "text": "storage in static locations in external RAM which uh happens most of the time because of the compiler and then you modify those so like when you think",
    "start": "2745280",
    "end": "2751599"
  },
  {
    "text": "about uh the way that you know the way normal uh you know function control happens on like most of our platforms um",
    "start": "2751599",
    "end": "2757760"
  },
  {
    "text": "you stuff a few arguments or a few pointers to arguments on the stack and then you jump to that location right and",
    "start": "2757760",
    "end": "2763559"
  },
  {
    "text": "then or or you're stuffing them into Registries or you know registers uh in this case all that stuff is statically",
    "start": "2763559",
    "end": "2770960"
  },
  {
    "text": "um they're from static values and external data so when you jump into a function that function has hard-coded",
    "start": "2770960",
    "end": "2776680"
  },
  {
    "text": "values just saying like grab from you know address 1 2 3 4 and I'm going to use that for this grab from one two you",
    "start": "2776680",
    "end": "2782400"
  },
  {
    "text": "know 1 2 38 for this um so once you find those you make modifications to those locations as well",
    "start": "2782400",
    "end": "2788640"
  },
  {
    "text": "and then the last step is you overwrite the the function pointer and the STM stuff and then finally your code",
    "start": "2788640",
    "end": "2794280"
  },
  {
    "text": "executes now the problem and why I say pray here is because of course this is uh we're doing this in a really um sort",
    "start": "2794280",
    "end": "2801280"
  },
  {
    "text": "of strange way we've got race conditions because we're modifying like we're modifying what the variables are and",
    "start": "2801280",
    "end": "2807280"
  },
  {
    "text": "then you wait and then you're modifying saying go ahead and uh execute this function so it's not altogether right",
    "start": "2807280",
    "end": "2813400"
  },
  {
    "text": "like that like it would be in any sort of like sane world where you would say you know run this this function with",
    "start": "2813400",
    "end": "2818599"
  },
  {
    "text": "these variables here you're saying let's modify these variables first and then okay let's run whatever's there and let's hope that whatever's there hasn't",
    "start": "2818599",
    "end": "2824440"
  },
  {
    "text": "changed that that does happen sometimes just in normal normal flow of of the",
    "start": "2824440",
    "end": "2830040"
  },
  {
    "text": "execution um you have no contextual information about any of that other stuff which of course is is more painful",
    "start": "2830040",
    "end": "2836640"
  },
  {
    "text": "um and during the uh during that process where you're trying to figure out how to make this work um but in state once you",
    "start": "2836640",
    "end": "2841800"
  },
  {
    "text": "finally get there you've got resident code execution um in on ours and then it's it's there it's there forever right",
    "start": "2841800",
    "end": "2847200"
  },
  {
    "text": "it's it's not going to go away until the thing's been uh been reflashed so uh we'll kind of do a quick",
    "start": "2847200",
    "end": "2852280"
  },
  {
    "text": "demo of what this looks like all right so this is looking at uh",
    "start": "2852280",
    "end": "2858079"
  },
  {
    "text": "this is the the debug interface application just the Windows application that does all this um I've already got",
    "start": "2858079",
    "end": "2863160"
  },
  {
    "text": "this loaded up and it's running so what you're going to see here um so I've got a script over here I'm going to run that's going to interface with the uh",
    "start": "2863160",
    "end": "2869400"
  },
  {
    "text": "the serial Port where this bug exists um on and this this bug didn't exist in their demo board because uh the uh the",
    "start": "2869400",
    "end": "2875599"
  },
  {
    "text": "demo board itself doesn't actually Implement any of those standards it doesn't actually Implement anything for talking to the outside world uh it's",
    "start": "2875599",
    "end": "2881480"
  },
  {
    "text": "just meant for showing off the chip so we had to um you know Implement our own uh interface on that and then have the",
    "start": "2881480",
    "end": "2887359"
  },
  {
    "text": "bug in that so that's what we're doing um and again and I guess the overall point of this talk is not necessarily",
    "start": "2887359",
    "end": "2892599"
  },
  {
    "text": "about specific bugs in uh in in Smart Meters that are out there right now um but talking about once you find those",
    "start": "2892599",
    "end": "2898680"
  },
  {
    "text": "bugs because they're out there once you find them what do you do right and so um that's why so we've got our our demo one",
    "start": "2898680",
    "end": "2904200"
  },
  {
    "text": "over here um code's already running so you're looking at like here uh this is this is address uh you know 6,000 in in",
    "start": "2904200",
    "end": "2911079"
  },
  {
    "text": "program state currently it's all FF because it's blank um we're going to see that get modified here in a second and then uh execution flow is going to jump",
    "start": "2911079",
    "end": "2917720"
  },
  {
    "text": "into it and then that's that's basically our like our Landing Pad where the first stage of Shell Code runs that then",
    "start": "2917720",
    "end": "2922760"
  },
  {
    "text": "starts making modifications to other parts of the of the OS to do what you want it to do all",
    "start": "2922760",
    "end": "2930599"
  },
  {
    "text": "right let's see [Applause]",
    "start": "2935720",
    "end": "2942699"
  },
  {
    "text": "here that's right so we're we're setting different U variables for functions that we want to call starting to upload Shell",
    "start": "2943240",
    "end": "2949200"
  },
  {
    "text": "Code executing that uh that flash R and saying actually make the copy the Shell Code over from xram to there fix up the",
    "start": "2949200",
    "end": "2956480"
  },
  {
    "text": "STM array to make it happen and make it not crash afterwards and then finally redirect",
    "start": "2956480",
    "end": "2963839"
  },
  {
    "text": "execution flow and are we going to work ah there we go and so um so in this case we're",
    "start": "2963839",
    "end": "2969799"
  },
  {
    "text": "talking about like a fake demo board here so it's kind of hard to figure out like what's the best way to show off that bug um but here this is what we've",
    "start": "2969799",
    "end": "2975200"
  },
  {
    "text": "got like we've modified uh this this this particular range you can see it's red now it's been modified it's not ever supposed to be able to be modified um",
    "start": "2975200",
    "end": "2981480"
  },
  {
    "text": "and then we stuffed our own code in there and then we jump to it there we",
    "start": "2981480",
    "end": "2987559"
  },
  {
    "text": "[Applause]",
    "start": "2990020",
    "end": "2993230"
  },
  {
    "text": "go all right so that's kind of the the bulk of it where we went I think we've got a couple minutes that we'll we'll",
    "start": "2995240",
    "end": "3000359"
  },
  {
    "text": "cover glitching real quick so if you remember way way way",
    "start": "3000359",
    "end": "3008280"
  },
  {
    "text": "back um we talked about there's some bits that can be set that don't let like",
    "start": "3008280",
    "end": "3013599"
  },
  {
    "text": "ice be enabled anymore so you can't actually do any live debugging on the board um unless you magically hit it within",
    "start": "3013599",
    "end": "3020880"
  },
  {
    "text": "that first like 30 to 60 Cycles um once you do you can get away from that uh but",
    "start": "3020880",
    "end": "3027359"
  },
  {
    "text": "we kind of wanted to do something a little sexier and it was one of the reasons we're not releasing the good fet code because we we went tangential down",
    "start": "3027359",
    "end": "3033440"
  },
  {
    "text": "this path and the good fet just couldn't quite keep up with where we wanted to go um we will get there and release it",
    "start": "3033440",
    "end": "3038920"
  },
  {
    "text": "hopefully at some point so we've got that pre-boot that is like",
    "start": "3038920",
    "end": "3044119"
  },
  {
    "text": "60 cycles and in that 60 Cycles somewhere that security bit gets set we",
    "start": "3044119",
    "end": "3049480"
  },
  {
    "text": "just need to keep that security bit from getting set um when you start looking at all of the Terian documentation was is",
    "start": "3049480",
    "end": "3056240"
  },
  {
    "text": "um just massively fabulous like it covers everything in the world you would ever want to know as a developer",
    "start": "3056240",
    "end": "3062400"
  },
  {
    "text": "um like uh they give you the demo code to turn that up and they tell you exactly where to put it so you know they",
    "start": "3062400",
    "end": "3069160"
  },
  {
    "text": "say the very first thing you should do is this is what your code looks like um if you do this Security will be set and",
    "start": "3069160",
    "end": "3075400"
  },
  {
    "text": "you can't debug the thing after uh after it gets out a pre-boot it'll never actually go into ice um so we we",
    "start": "3075400",
    "end": "3082960"
  },
  {
    "text": "compiled that in threw it in started looking at it what this code actually translates to is long jump long jump set",
    "start": "3082960",
    "end": "3089520"
  },
  {
    "text": "secure butt and then something else so we like okay we just need to Stomp all the hell over that third clock cycle",
    "start": "3089520",
    "end": "3095760"
  },
  {
    "text": "after boot like you give power boom I need to kill that third clock cycle that thing doesn't get set and then I'm I'm",
    "start": "3095760",
    "end": "3101599"
  },
  {
    "text": "good like the thing will boot I can get in um so that's the goal right we want to",
    "start": "3101599",
    "end": "3107640"
  },
  {
    "text": "hit cycle number three just glitch it and we're fine um constraints that we've",
    "start": "3107640",
    "end": "3113160"
  },
  {
    "start": "3111000",
    "end": "3111000"
  },
  {
    "text": "got with that type of glitch right we're running at 10 MHz we have to hit cycle three and we've got to hit it hard on",
    "start": "3113160",
    "end": "3118640"
  },
  {
    "text": "the dot um cuz you know we don't want to hit one we don't want to hit two necessarily right cuz we uh if you want",
    "start": "3118640",
    "end": "3125599"
  },
  {
    "text": "to still have it running and be live um you still want those jumps you just don't want that third that third thing",
    "start": "3125599",
    "end": "3132559"
  },
  {
    "text": "to to hit oh maybe right it it it uh it do it doesn't always matter um you know",
    "start": "3132559",
    "end": "3137599"
  },
  {
    "text": "if you're if you're in state is that you're just trying to get this thing up so that you can pull the code off of it uh and then once you got that that's great uh you'd be able to make whatever",
    "start": "3137599",
    "end": "3143680"
  },
  {
    "text": "modifications you want to it and then reflash it so um so yeah so you can be you can be extremely exact with it and everything",
    "start": "3143680",
    "end": "3150359"
  },
  {
    "text": "will still run correctly or you could you know not be extremely exact with it um but you'd still get the debug",
    "start": "3150359",
    "end": "3156079"
  },
  {
    "text": "interface so as long as the thing doesn't like constantly go into a reboot loop for example um and you if you can",
    "start": "3156079",
    "end": "3161880"
  },
  {
    "text": "get past that and long enough you can keep it alive long enough to let the debug interface be up um then you'd be able to to to Halt execution and then at",
    "start": "3161880",
    "end": "3169160"
  },
  {
    "text": "that point You' got the debug interface which is something he reminded me of cuz I was focused on that like clock cycle 3",
    "start": "3169160",
    "end": "3174440"
  },
  {
    "text": "and was like killing myself and then he was like dude you have to hit it I like it got a little easier um so we at the",
    "start": "3174440",
    "end": "3181319"
  },
  {
    "text": "end of the day we probably can just stomp over every damn thing that's in those first 60 cycles and we'll get through enough to dump code um so we've",
    "start": "3181319",
    "end": "3188480"
  },
  {
    "text": "kind of got two approaches right um if you want to go with the open sourcy kind of Hardware type thing you've got the",
    "start": "3188480",
    "end": "3193920"
  },
  {
    "text": "good fet um which is not remotely fast enough to actually pull this off unless",
    "start": "3193920",
    "end": "3199000"
  },
  {
    "text": "you're going to be sloppy and just step over everything um and it looks like we can do that right so this is what that",
    "start": "3199000",
    "end": "3205319"
  },
  {
    "start": "3204000",
    "end": "3204000"
  },
  {
    "text": "approach would look like it's just like a massive like table flip I don't care um and then you've got the do and C",
    "start": "3205319",
    "end": "3211680"
  },
  {
    "text": "approach uh that was released at Recon um if you're not familiar with the dot cric yet you should look into that stuff",
    "start": "3211680",
    "end": "3216960"
  },
  {
    "text": "it's it's a um basically it's it's it's just an fpga that's hooked up to uh tons",
    "start": "3216960",
    "end": "3223319"
  },
  {
    "text": "and tons of buses so like it'll let you interface with whatever you want to interface with and then you write fpga code to do all that um it's it's a",
    "start": "3223319",
    "end": "3229799"
  },
  {
    "text": "really fast way to be able to monitor lots and lots of things all at once or be able to do things like this where you're monitoring lots of things and",
    "start": "3229799",
    "end": "3235400"
  },
  {
    "text": "then also changing stuff you're you're providing stuff at um at of specific value or whatever specific speed yeah so",
    "start": "3235400",
    "end": "3241160"
  },
  {
    "text": "that approach would look like this it would be like I just want to hit that one instruction and be able to do it um",
    "start": "3241160",
    "end": "3246319"
  },
  {
    "text": "we started down this path um we were about halfway through with the good fet stuff and then we actually got a cake",
    "start": "3246319",
    "end": "3251599"
  },
  {
    "text": "hardware and it got really excited and we started like completely diverging which is one of the other reasons we didn't finish with either but when we",
    "start": "3251599",
    "end": "3258119"
  },
  {
    "text": "got the hardware we talking to one of the other guys at Recon that was trying to do something completely different",
    "start": "3258119",
    "end": "3263359"
  },
  {
    "text": "with the traan chips and accidentally pulled this off um yeah what one of one of the sort of the kind of a funny side",
    "start": "3263359",
    "end": "3269319"
  },
  {
    "text": "like how vulnerable this thing would be to glitching and and others as well I'm sure um when you're stepping through the",
    "start": "3269319",
    "end": "3274359"
  },
  {
    "text": "source code of like their demo stuff like so I I I said earlier that we copied over the the bootler code from",
    "start": "3274359",
    "end": "3279640"
  },
  {
    "text": "you that they had released and used that so you're stepping through the Section that that deals with like flash you know flash rights and like every third line",
    "start": "3279640",
    "end": "3286520"
  },
  {
    "text": "or something it checks this value and it's saying like is you know am I am I supposed to be doing this am I supposed to be doing this am I supposed to be",
    "start": "3286520",
    "end": "3291839"
  },
  {
    "text": "doing this and finally one place you find a remark from the from the author that says um uh because of like normal",
    "start": "3291839",
    "end": "3298760"
  },
  {
    "text": "electromagnetic interference like in storms and whatever else um this the execution pointer gets corrupted like",
    "start": "3298760",
    "end": "3304400"
  },
  {
    "text": "all the time so like just in normal usage of the thing the the instruction pointer will like jump someplace else and it just goes all crazy um and it's",
    "start": "3304400",
    "end": "3311160"
  },
  {
    "text": "okay because there's a hardware Watch Dog that uh is paying attention and it'll just reset it if it gets too out of whack um and that's so that's not a",
    "start": "3311160",
    "end": "3317040"
  },
  {
    "text": "big deal for that but it just it it points out like a a funny aside where it's like they had to put all these checks in because they wanted to make",
    "start": "3317040",
    "end": "3322440"
  },
  {
    "text": "sure that the execution pointer didn't ever just accidentally get corrupted by like a lightning build or what whatever and then jump into the flash overwrite",
    "start": "3322440",
    "end": "3328720"
  },
  {
    "text": "section and then corrupt like the whole world and then it'd be bricked forever right so that'd be really bad um but if",
    "start": "3328720",
    "end": "3333839"
  },
  {
    "text": "it's really that that vulnerable like this just happens in in normal um normal situations then uh then that means that",
    "start": "3333839",
    "end": "3341039"
  },
  {
    "text": "um obviously you'd be able to induce that state you'd be able to to divert execution flow um when you want it to so",
    "start": "3341039",
    "end": "3347559"
  },
  {
    "text": "you could say don't execute this skure bid and because of the way the architecture set up if you don't execute the skure bit then the thing lights up",
    "start": "3347559",
    "end": "3353559"
  },
  {
    "text": "just like you want so and with that um I think we're done uh I think we've",
    "start": "3353559",
    "end": "3359480"
  },
  {
    "text": "already mentioned cutaway and Alice and Travis um a ton also want to thank uh Dr",
    "start": "3359480",
    "end": "3364640"
  },
  {
    "text": "Springfield he was actually really helpful with us which is Braden um I'm Josh yeah Nathan thanks guys",
    "start": "3364640",
    "end": "3372760"
  },
  {
    "text": "thanks",
    "start": "3375799",
    "end": "3378799"
  }
]