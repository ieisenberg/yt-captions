[
  {
    "text": "so uh very good afternoon everyone I hope you had a very good lunch and now you're back to business again so before",
    "start": "2639",
    "end": "9920"
  },
  {
    "text": "we begin don't worry uh we're not going to ask you what do you have for lunch instead we'll be presenting our session",
    "start": "9920",
    "end": "16240"
  },
  {
    "text": "on breaking manage identity barriers and Azure services so a little bit about myself uh",
    "start": "16240",
    "end": "23840"
  },
  {
    "text": "my name is NES I from SIM a beautiful state in India and we are actually",
    "start": "23840",
    "end": "29199"
  },
  {
    "text": "really honored to be here at blackhe hat Asia this is our first time here at blackhe hat Asia so at Tren micro I work",
    "start": "29199",
    "end": "35719"
  },
  {
    "text": "on the security and threat research focusing on everything between code and Cloud so I've been presenting some of my",
    "start": "35719",
    "end": "42480"
  },
  {
    "text": "work at conferences such as black at USA hack in the Box hacken Paris and a lot more so we've been submitting",
    "start": "42480",
    "end": "49360"
  },
  {
    "text": "vulnerabilities that have been found in uh cloud service providers and particularly Microsoft via the zero day",
    "start": "49360",
    "end": "56879"
  },
  {
    "text": "initiative I've been in the top 100 MSR see most valuable researchers for 2023",
    "start": "56879",
    "end": "62559"
  },
  {
    "text": "and hopefully for 2024 even now so you can find some of the uh fun stuff that",
    "start": "62559",
    "end": "68080"
  },
  {
    "text": "I've worked on by going to my page I also am on Twitter or X so yeah so my",
    "start": "68080",
    "end": "74280"
  },
  {
    "text": "findings range from vulnerabilities in home routers to Android apps and now onto cloud services apart from my work",
    "start": "74280",
    "end": "82439"
  },
  {
    "text": "uh I'm mostly found playing base and composing some vocals for my band and",
    "start": "82439",
    "end": "88079"
  },
  {
    "text": "yeah hello everyone my name is David um I start my infos Journey back in 2010",
    "start": "88079",
    "end": "95600"
  },
  {
    "text": "starting as a Mal analyst over the time I gained some experience presented on conferences such as AAR and Caro in the",
    "start": "95600",
    "end": "103280"
  },
  {
    "text": "late 2017 I joined the Trend Micro and switch my focus more into the cloud",
    "start": "103280",
    "end": "108600"
  },
  {
    "text": "threats and vulnerabilities and I presented some of our team initial finding in 2019 and the",
    "start": "108600",
    "end": "116200"
  },
  {
    "text": "security fast during the P pandemic out Brank I was one of the guys who was",
    "start": "116200",
    "end": "122320"
  },
  {
    "text": "writing about the team TNT activities and especially their switch to Cloud FOC",
    "start": "122320",
    "end": "128039"
  },
  {
    "text": "Cloud focus and stealing Cloud credentials from time to time I find also Bella and most importantly I try to",
    "start": "128039",
    "end": "136519"
  },
  {
    "text": "remain a human being so David found some issues in",
    "start": "136519",
    "end": "142519"
  },
  {
    "text": "Azure functions the Azure function service in Microsoft cloud and I found",
    "start": "142519",
    "end": "147640"
  },
  {
    "text": "some issues in Azure machine learning service and particularly today we are going to",
    "start": "147640",
    "end": "152800"
  },
  {
    "text": "talk about the issues in the manage identity implementation and Azure functions and Azure machine learning",
    "start": "152800",
    "end": "159440"
  },
  {
    "text": "service but before we will tell you about our foundings let's tell you",
    "start": "159440",
    "end": "164560"
  },
  {
    "text": "something about how we got there because there's actually funny story behind it you know in early 2022 the world was",
    "start": "164560",
    "end": "171840"
  },
  {
    "text": "still recovering from the pandemic and I was locked down in the Philippines in the hotel room although Philippines is",
    "start": "171840",
    "end": "178720"
  },
  {
    "text": "very Sun Sunny Country country there was sh over the place and you know without the vitamin D it's just not doesn't feel",
    "start": "178720",
    "end": "184920"
  },
  {
    "text": "right and there was one particular thing that make me happy to the that day and",
    "start": "184920",
    "end": "190480"
  },
  {
    "text": "that was when I found these issues inside the aure functions then couple of months later",
    "start": "190480",
    "end": "197560"
  },
  {
    "text": "nites was digging deep down into the Azure machine learning and found lot of different issues and after that time",
    "start": "197560",
    "end": "205959"
  },
  {
    "text": "passed and in December last year we met in Japan and go we were going from a",
    "start": "205959",
    "end": "211640"
  },
  {
    "text": "party sitting in a taxi and it's you know what NES let's apply for a black Asia so here we",
    "start": "211640",
    "end": "219480"
  },
  {
    "text": "are so let me walk you through my journey inside the Azure",
    "start": "219519",
    "end": "226080"
  },
  {
    "text": "functions but first question I have to ask myself was what are actually aure",
    "start": "226080",
    "end": "231239"
  },
  {
    "text": "functions right well I did what I usually do I look up to the",
    "start": "231239",
    "end": "236480"
  },
  {
    "text": "documentation and find out it's a seress platform but what is the server as right",
    "start": "236480",
    "end": "241799"
  },
  {
    "text": "it doesn't run somewhere in dis Skies so we found out it's nothing more that",
    "start": "241799",
    "end": "247480"
  },
  {
    "text": "running our user provided code inside the cloud service provider on the manage",
    "start": "247480",
    "end": "254879"
  },
  {
    "text": "platform wait uh David did you just say running user code that to on someone",
    "start": "254879",
    "end": "260199"
  },
  {
    "text": "else's server that to on cloud well I know what you thinking right there is",
    "start": "260199",
    "end": "265320"
  },
  {
    "text": "one saying among the developers never trust user input and now we are G giving like executable code what could go go",
    "start": "265320",
    "end": "272400"
  },
  {
    "text": "wrong",
    "start": "272400",
    "end": "274840"
  },
  {
    "text": "right so don't worry n there are you know some mechanism that prevents",
    "start": "277919",
    "end": "283479"
  },
  {
    "text": "everyone from executing outr such as authentification and you know we can Harden use it the triggers that there",
    "start": "283479",
    "end": "290039"
  },
  {
    "text": "not doesn't need to be a public end point that execute arure",
    "start": "290039",
    "end": "295320"
  },
  {
    "text": "functions so what we did since we are providing a code in to our cloud service",
    "start": "295320",
    "end": "301560"
  },
  {
    "text": "we did a simulation of compromise because we assume that one at one point in the time the user were bring the",
    "start": "301560",
    "end": "308000"
  },
  {
    "text": "vulnerability to the code so basically we designed our own",
    "start": "308000",
    "end": "313039"
  },
  {
    "text": "serverless function which was nothing more than a rever share that connected to our contrite environment and from",
    "start": "313039",
    "end": "319840"
  },
  {
    "text": "that we analyzed the underlying environment cing the serverless or aure",
    "start": "319840",
    "end": "325479"
  },
  {
    "text": "functions and also executed some commands right and observe the configuration changes",
    "start": "325479",
    "end": "332680"
  },
  {
    "text": "because not every feature inside the aure function is available by default So speaking of authentification",
    "start": "332680",
    "end": "340639"
  },
  {
    "text": "aure functions get several options starting with functions tokens there are",
    "start": "340639",
    "end": "347919"
  },
  {
    "text": "two scopes of the tokens functions token which are basically binded to the function itself and host token with the",
    "start": "347919",
    "end": "356680"
  },
  {
    "text": "host token you can execute any function onite your server lless environment and",
    "start": "356680",
    "end": "363240"
  },
  {
    "text": "also it provides you to the capability to execute some of the API of the",
    "start": "363240",
    "end": "369080"
  },
  {
    "text": "function host the second option which is little",
    "start": "369080",
    "end": "374599"
  },
  {
    "text": "bit more secure is using client certificate and there is also a third",
    "start": "374599",
    "end": "380919"
  },
  {
    "text": "option since we are actually providing the code for the executing the functions we can Implement a custom logic and the",
    "start": "380919",
    "end": "387240"
  },
  {
    "text": "client certificate is actually using the custom logic but there are uh code",
    "start": "387240",
    "end": "393800"
  },
  {
    "text": "Snippets already available speaking of triggers don't",
    "start": "393800",
    "end": "399120"
  },
  {
    "text": "worry it's not a land mine the default one is https request",
    "start": "399120",
    "end": "405280"
  },
  {
    "text": "you can it's basically public endpoint the second one are events that are",
    "start": "405280",
    "end": "410919"
  },
  {
    "text": "binded to the cloud and we can imagine like database trigger just like",
    "start": "410919",
    "end": "417599"
  },
  {
    "text": "that one thing that we need to analyze as a researcher",
    "start": "417599",
    "end": "423319"
  },
  {
    "text": "were the timeouts you know how much time we do have inside the environment by default it turns out that our rever",
    "start": "423319",
    "end": "430599"
  },
  {
    "text": "shell will be by default active for 5 minutes when the our request will expire",
    "start": "430599",
    "end": "435919"
  },
  {
    "text": "after 4 and a half minutes due to the load balancer and one important thing you can limit your execution time inside",
    "start": "435919",
    "end": "443280"
  },
  {
    "text": "the host. Json file speaking of environmental analysis",
    "start": "443280",
    "end": "449280"
  },
  {
    "text": "oh you know what do you do when you pop up of shell right well you ask who am I",
    "start": "449280",
    "end": "454720"
  },
  {
    "text": "turns out we are a root okay that sounds nice right but you know root isn't what",
    "start": "454720",
    "end": "460599"
  },
  {
    "text": "it was before so we need to execute another command such as Mount and capshell and we find out that we by",
    "start": "460599",
    "end": "467599"
  },
  {
    "text": "analyzing the output of this command that we are running inside the container Docker container and our capabilities",
    "start": "467599",
    "end": "473639"
  },
  {
    "text": "are limited basically the default Docker capabilities but there was one",
    "start": "473639",
    "end": "478680"
  },
  {
    "text": "particular thing we run this EnV command which basically print out all of the",
    "start": "478680",
    "end": "483800"
  },
  {
    "text": "environmental variables and there is the moment where it started to be",
    "start": "483800",
    "end": "489919"
  },
  {
    "text": "interesting but before I will speak about the environment art issues it's",
    "start": "489919",
    "end": "495120"
  },
  {
    "text": "important to speak about the environment varable itself well you might know it's",
    "start": "495120",
    "end": "500440"
  },
  {
    "text": "very popular practice among a devops and it often stores a Secrets right and",
    "start": "500440",
    "end": "507440"
  },
  {
    "text": "believe or not there are some uh products that reference environmental",
    "start": "507440",
    "end": "512479"
  },
  {
    "text": "variable inside their documentation as a vault and by all means if they tell it a",
    "start": "512479",
    "end": "518080"
  },
  {
    "text": "w then I am telling that is the same like this was present for Pablo",
    "start": "518080",
    "end": "524560"
  },
  {
    "text": "Escobar so let's speak about the underling fundamentals of environment variables well you probably know that",
    "start": "525040",
    "end": "532560"
  },
  {
    "text": "everything on Linux is a file light so we can just L list the Brock file system",
    "start": "532560",
    "end": "539279"
  },
  {
    "text": "and and here is one file Environ and we can print it out that's basically the",
    "start": "539279",
    "end": "545399"
  },
  {
    "text": "table of environment variables for the given process and",
    "start": "545399",
    "end": "551240"
  },
  {
    "text": "basically uh we can access the all of the environmental",
    "start": "551240",
    "end": "557399"
  },
  {
    "text": "variables of the running user inide our process Nam space and there is one very",
    "start": "557399",
    "end": "562800"
  },
  {
    "text": "important thing by default the environmental variables are inherited",
    "start": "562800",
    "end": "568360"
  },
  {
    "text": "into every child process unless explicitly new environmental variable table are passed as",
    "start": "568360",
    "end": "576160"
  },
  {
    "text": "arguments we did a little demo for you this is nothing more than simple hello",
    "start": "576160",
    "end": "582760"
  },
  {
    "text": "word in C++ right it doesn't even mention environment variables so we",
    "start": "582760",
    "end": "588360"
  },
  {
    "text": "export our super secret API key into environmental variable compile our application run",
    "start": "588360",
    "end": "595880"
  },
  {
    "text": "into the debugger and break it at mine function and that's you can see from the",
    "start": "595880",
    "end": "602959"
  },
  {
    "text": "RDX is pointing on the stacks just comparing the rspdx value and if we",
    "start": "602959",
    "end": "608360"
  },
  {
    "text": "follow the RDX we can see it's also pointing on the stack and there is something which notably similar to",
    "start": "608360",
    "end": "615279"
  },
  {
    "text": "environmental variable and if we print out the address rench we can find all of the environmental variables including",
    "start": "615279",
    "end": "622720"
  },
  {
    "text": "our super secret API key but isn't this something like just",
    "start": "622720",
    "end": "628480"
  },
  {
    "text": "specific to the Burger is it inherited by every process from the first P ID itself that's a great question you know",
    "start": "628480",
    "end": "635600"
  },
  {
    "text": "we need to verify so what we did we actually analyzed it like first thought",
    "start": "635600",
    "end": "641240"
  },
  {
    "text": "that it might be debugger but unlikely right because we got some knowledge and then okay it can be let's say lipy who",
    "start": "641240",
    "end": "648480"
  },
  {
    "text": "is doing the job but we found out that it's actually the Kel itself who pushes the environmental variables on the stack",
    "start": "648480",
    "end": "655639"
  },
  {
    "text": "so this function is called when a new process is found in the Linux and one of",
    "start": "655639",
    "end": "663200"
  },
  {
    "text": "the code Snippets from the large function is this where we can see actually how it's pushed into the",
    "start": "663200",
    "end": "669200"
  },
  {
    "text": "stack so back to the serverless functions this is how the environmental",
    "start": "669200",
    "end": "674800"
  },
  {
    "text": "variable print out look like it's a lot isn't it hard to navigate so we cut it a",
    "start": "674800",
    "end": "680200"
  },
  {
    "text": "little bit for you still isn't it but for our security purposes this is the",
    "start": "680200",
    "end": "685399"
  },
  {
    "text": "most important bits so let's start with the asure web job storage so what what is this environmental for",
    "start": "685399",
    "end": "693360"
  },
  {
    "text": "well it turns out that for aure function you need to store code somewhere and in",
    "start": "693360",
    "end": "698800"
  },
  {
    "text": "a lot of cases you will need a storage account and the storage account is used",
    "start": "698800",
    "end": "704920"
  },
  {
    "text": "for storing the source code and the Azure function holds pull the source code and then it execute it right and",
    "start": "704920",
    "end": "712399"
  },
  {
    "text": "this Azure web job storage is nothing more than connection string or access to",
    "start": "712399",
    "end": "717440"
  },
  {
    "text": "can to the storage account so you know we can copy and paste to cool tool called Azure storage Explorer and what",
    "start": "717440",
    "end": "724760"
  },
  {
    "text": "we can find out here well of course the source code some some of the secrets",
    "start": "724760",
    "end": "730519"
  },
  {
    "text": "like function tokens host tokens and you know there's one thing unless we really",
    "start": "730519",
    "end": "737399"
  },
  {
    "text": "Harden it in the cloud uh make the storage C account not available to the",
    "start": "737399",
    "end": "742440"
  },
  {
    "text": "public or let's say disable the right access what we can do we can just delete",
    "start": "742440",
    "end": "748000"
  },
  {
    "text": "and upload but there is a bit if we do the hardening then you know if it's not",
    "start": "748000",
    "end": "754399"
  },
  {
    "text": "publicly available it's more tricky or inconvenient for the developer to put to",
    "start": "754399",
    "end": "760120"
  },
  {
    "text": "put the source Cod there you know and if we remove the right permission then if you are just using the vs code for",
    "start": "760120",
    "end": "766680"
  },
  {
    "text": "pushing your source code of the servers function then it will not work",
    "start": "766680",
    "end": "774800"
  },
  {
    "text": "right so what you can do you can complet the right the function itself and",
    "start": "775320",
    "end": "781320"
  },
  {
    "text": "execute your own code and that just by leaking your environmental variable and next and this is the most",
    "start": "781320",
    "end": "788320"
  },
  {
    "text": "important interesting and important environmental is this container star",
    "start": "788320",
    "end": "794199"
  },
  {
    "text": "context it's short lft URL and if we follow the URL we get something like",
    "start": "794199",
    "end": "800079"
  },
  {
    "text": "this it's basically the container configuration encrypted context well",
    "start": "800079",
    "end": "805480"
  },
  {
    "text": "looks nice right but what does it mean well we did some digging and it's basically the encrypted context is AES",
    "start": "805480",
    "end": "813399"
  },
  {
    "text": "encrypted payload where the first part is in Vector the second part is the",
    "start": "813399",
    "end": "819880"
  },
  {
    "text": "payload itself followed by the hash and guess what was the decryption key",
    "start": "819880",
    "end": "826920"
  },
  {
    "text": "anyone okay I give you a hint it's the container encryption key the first environmental variable so we can decrypt",
    "start": "826920",
    "end": "833560"
  },
  {
    "text": "it okay looks like that but what we can get out of it well of course",
    "start": "833560",
    "end": "839399"
  },
  {
    "text": "authentification tokens but let's assume that we can execute the function anyway so doesn't add so much value right but",
    "start": "839399",
    "end": "848240"
  },
  {
    "text": "most importantly manage identity proxy settings and we consider this should be",
    "start": "848240",
    "end": "854440"
  },
  {
    "text": "hidden from the from the server environment",
    "start": "854440",
    "end": "859839"
  },
  {
    "text": "itself so we got asure function what our manage idity we got aure function we got",
    "start": "859839",
    "end": "866320"
  },
  {
    "text": "storage account and we got very nice image and we want to work with this image ins our our asure function and we",
    "start": "866320",
    "end": "874320"
  },
  {
    "text": "don't want to put our credentials inside environmental variable so what we do we",
    "start": "874320",
    "end": "879800"
  },
  {
    "text": "use manage identities this is how it looks like the most important is it's running within the same container as the",
    "start": "879800",
    "end": "887480"
  },
  {
    "text": "serverless function this is how the reply looks",
    "start": "887480",
    "end": "893959"
  },
  {
    "text": "like so but what is underneath you got a",
    "start": "893959",
    "end": "899040"
  },
  {
    "text": "meure functions there is a binary running inside the same container and because we decrypted the contents we get",
    "start": "899040",
    "end": "906320"
  },
  {
    "text": "all of the parameters of the propy including client certificate end points",
    "start": "906320",
    "end": "911480"
  },
  {
    "text": "and some other parameters and this is just forwarded from the binary to the",
    "start": "911480",
    "end": "916800"
  },
  {
    "text": "per to the public endpoint this is forwarded by to get the token so to what",
    "start": "916800",
    "end": "923000"
  },
  {
    "text": "we found a lot of environmental variables including proxy parameters but",
    "start": "923000",
    "end": "928360"
  },
  {
    "text": "what does it mean well it turned out we can obtain a valid",
    "start": "928360",
    "end": "933399"
  },
  {
    "text": "jwd tokens and how we can do it outside the aure environment itself and this is",
    "start": "933399",
    "end": "940240"
  },
  {
    "text": "actually where it breaks the security barrier because it should be hardening it for inside the Azure so just by",
    "start": "940240",
    "end": "947160"
  },
  {
    "text": "leaking the environmental variables we can obtain the tokens from the manage identities but there's one important bit",
    "start": "947160",
    "end": "954199"
  },
  {
    "text": "to mention of course Azure is kind of secure platform and unless you",
    "start": "954199",
    "end": "959519"
  },
  {
    "text": "explicitly specify the permissions for the manage identities you might get the",
    "start": "959519",
    "end": "964639"
  },
  {
    "text": "token but it got no permission at all there's little demo so first of all",
    "start": "964639",
    "end": "972120"
  },
  {
    "text": "simulate the leakage of the environmental variables decrypted the encrypted context as you can see here",
    "start": "972120",
    "end": "977839"
  },
  {
    "text": "this is the client certificate among another proxy parameters then we use it inide another",
    "start": "977839",
    "end": "985680"
  },
  {
    "text": "ask for the token once we get the token we contact our storage account and get",
    "start": "985680",
    "end": "992399"
  },
  {
    "text": "some metadata out of it and this is what all done outside the aure the only communication with the asure environment",
    "start": "992399",
    "end": "998639"
  },
  {
    "text": "was first communicating with the vulnerable function and getting leaked the environment varas",
    "start": "998639",
    "end": "1004399"
  },
  {
    "text": "itself and there's one important question to answer why this all happens",
    "start": "1004399",
    "end": "1010000"
  },
  {
    "text": "right well obviously the important bit is the environment variable popularity",
    "start": "1010000",
    "end": "1016000"
  },
  {
    "text": "itself you know sometimes when I looking on these issues I get the feeling that we you know everyone feels it's safe we",
    "start": "1016000",
    "end": "1022920"
  },
  {
    "text": "use it and we don't think what is underneath and then they may be like slight Cod chain change you know some",
    "start": "1022920",
    "end": "1030199"
  },
  {
    "text": "stress and then it's just inherit to the to the child process or maybe yeah some",
    "start": "1030199",
    "end": "1039000"
  },
  {
    "text": "might don't know maybe do know but you know it's acceptable a risk for us and it's sometimes okay",
    "start": "1039000",
    "end": "1045959"
  },
  {
    "text": "right but we as a security people should know about the consequences and telling",
    "start": "1045959",
    "end": "1051400"
  },
  {
    "text": "others what could go wrong so that's a really strong statement of not knowing",
    "start": "1051400",
    "end": "1057360"
  },
  {
    "text": "how to use an environment variable what do you suggest David well in this particular",
    "start": "1057360",
    "end": "1063160"
  },
  {
    "text": "example uh simplified artial we got the Azure function host which is basically",
    "start": "1063160",
    "end": "1069280"
  },
  {
    "text": "container image and a process which executes the language worker which in",
    "start": "1069280",
    "end": "1074320"
  },
  {
    "text": "our case was so Python and then you execute your user code and because this container image is publicly accessible",
    "start": "1074320",
    "end": "1080720"
  },
  {
    "text": "inside Microsoft container registry we can play a little bit with and also use",
    "start": "1080720",
    "end": "1086840"
  },
  {
    "text": "it inside our new serverless function so what we did we basically renamed our",
    "start": "1086840",
    "end": "1093720"
  },
  {
    "text": "python interpreter to python in with the little hack and replace it with this compiled binary and what this comary B",
    "start": "1093720",
    "end": "1100559"
  },
  {
    "text": "it utilize pseudo utility to Run in under different R play user and that's",
    "start": "1100559",
    "end": "1106320"
  },
  {
    "text": "why because well obviously we if we got code execution which is the worst part",
    "start": "1106320",
    "end": "1113120"
  },
  {
    "text": "we could still read the all of the environmental variables because it were running under same user because of the",
    "start": "1113120",
    "end": "1119440"
  },
  {
    "text": "nature of the Unix right and then we pass a new environmental table and here",
    "start": "1119440",
    "end": "1124840"
  },
  {
    "text": "we can see only one environment variable so we did our testing and it turns out",
    "start": "1124840",
    "end": "1131760"
  },
  {
    "text": "that for our serverless function it's not needed at",
    "start": "1131760",
    "end": "1136799"
  },
  {
    "text": "all it was just needed that for the function H which actually spawns our",
    "start": "1136799",
    "end": "1143799"
  },
  {
    "text": "service function so it means it was just inherited maybe it was not even intentional it just",
    "start": "1143799",
    "end": "1150640"
  },
  {
    "text": "happened we wrote some article about it back in then something about disclosure timeline",
    "start": "1151360",
    "end": "1159360"
  },
  {
    "text": "we originally find this issue in April 2022 we share with Microsoft but you",
    "start": "1159360",
    "end": "1165120"
  },
  {
    "text": "know at the time of being and with this Cloud VAB ities or security issues depends how you call it there is",
    "start": "1165120",
    "end": "1172240"
  },
  {
    "text": "sometimes Blue Line because we are assuming that the function is vulnerable by itself you know so the severity it's",
    "start": "1172240",
    "end": "1179520"
  },
  {
    "text": "not that he it's not traditional RC so we haven't been contacted B so we is the",
    "start": "1179520",
    "end": "1184799"
  },
  {
    "text": "blog post a year later net SPI folks discovered the same issue credit for",
    "start": "1184799",
    "end": "1190000"
  },
  {
    "text": "them they were much more persistent pushing the Microsoft to fix the issue now it's fixed and generally the binary",
    "start": "1190000",
    "end": "1197080"
  },
  {
    "text": "was taken outside the container and there was another container created then if you contact manage ID entity running",
    "start": "1197080",
    "end": "1203919"
  },
  {
    "text": "somewhere else and the manage proxy uh is somewhere else although you can still",
    "start": "1203919",
    "end": "1209760"
  },
  {
    "text": "get the credentials for the storage account from the environmental",
    "start": "1209760",
    "end": "1215120"
  },
  {
    "text": "variables okay this is our original block F this is the block po of the netsi folks and this is all for me and",
    "start": "1215120",
    "end": "1222919"
  },
  {
    "text": "now it's time for NES so NES Stags so thank you d",
    "start": "1222919",
    "end": "1229200"
  },
  {
    "text": "uh I think the first episode was pretty good now we begin episode two that is on the Azure machine learning",
    "start": "1229200",
    "end": "1235520"
  },
  {
    "text": "service so these days AI is being sprinkled in almost everything that we are going to be use going to use or",
    "start": "1235520",
    "end": "1242480"
  },
  {
    "text": "going to be know get going eventually and it's super cool uh by now we have",
    "start": "1242480",
    "end": "1248480"
  },
  {
    "text": "somewhere or the other been you know exposed to these services or at least you know tried your hands on or",
    "start": "1248480",
    "end": "1255280"
  },
  {
    "text": "something so these are all the services that are are based on the Azure AI",
    "start": "1255280",
    "end": "1260679"
  },
  {
    "text": "platform and it it depends on the Azure AI offerings so the applied AI services",
    "start": "1260679",
    "end": "1266799"
  },
  {
    "text": "are the offerings which basically solve a business problem these are followed by the cognitive services that are the",
    "start": "1266799",
    "end": "1274120"
  },
  {
    "text": "machine learning models that are offered as a service which is consumed by the applied AI service and eventually the",
    "start": "1274120",
    "end": "1280039"
  },
  {
    "text": "applications that we use and all of this is actually built on top of azure",
    "start": "1280039",
    "end": "1285440"
  },
  {
    "text": "machine learning service so well azure machine learning is a cloud-based machine learning as a",
    "start": "1285440",
    "end": "1291320"
  },
  {
    "text": "service offering from Microsoft in EML you create a workspace and this",
    "start": "1291320",
    "end": "1297000"
  },
  {
    "text": "workspace is basically the centralized place to do your machine learning operations So mlops eventually falls",
    "start": "1297000",
    "end": "1303240"
  },
  {
    "text": "down to uh having some compute having some cloud storage and a way to monitor the logs and there are a few more other",
    "start": "1303240",
    "end": "1309880"
  },
  {
    "text": "parameters to it so the workspace is dependent on certain Azure services like",
    "start": "1309880",
    "end": "1315000"
  },
  {
    "text": "the storage account the Azure keyal the Azure container registry and the application inside",
    "start": "1315000",
    "end": "1321000"
  },
  {
    "text": "services so the storage account for each workspace a storage account is created",
    "start": "1321000",
    "end": "1326159"
  },
  {
    "text": "where the storage account is used to keep your machine learning models and your machine learning data sets as well",
    "start": "1326159",
    "end": "1332080"
  },
  {
    "text": "like uh data sets jupyter notebooks logs models snapshots Python scripts and all",
    "start": "1332080",
    "end": "1337520"
  },
  {
    "text": "of these other things this is where you keep your stuff and there are various other compute options that Azure ml",
    "start": "1337520",
    "end": "1344880"
  },
  {
    "text": "provides where you can run your code and compute instances are managed uban 2",
    "start": "1344880",
    "end": "1349960"
  },
  {
    "text": "virtual machines by managed we mean that the security of the host OS everything",
    "start": "1349960",
    "end": "1355240"
  },
  {
    "text": "is managed by Microsoft themselves so the OS image contains like various tools",
    "start": "1355240",
    "end": "1360360"
  },
  {
    "text": "used by developers such as Jupiter uh Jupiter notebooks vs code cond Docker Python and all of these other things",
    "start": "1360360",
    "end": "1367440"
  },
  {
    "text": "unlike Azure functions we have complete root access to this virtual machine or",
    "start": "1367440",
    "end": "1372480"
  },
  {
    "text": "the compute instance additionally these compute instances contain certain programs or",
    "start": "1372480",
    "end": "1379640"
  },
  {
    "text": "middleware agents that are created and maintained by the cloud service provider in this case Microsoft so these are like",
    "start": "1379640",
    "end": "1386120"
  },
  {
    "text": "secret undocumented agents that are used to configure environments diagnose",
    "start": "1386120",
    "end": "1391360"
  },
  {
    "text": "environments and do a lot of other stuff and sometimes open up Avenues of information disclosure and code",
    "start": "1391360",
    "end": "1397000"
  },
  {
    "text": "execution as well so these may be open source like Omi or these may be closed",
    "start": "1397000",
    "end": "1402799"
  },
  {
    "text": "source as we'll see in a bit so the compute instance is where you run your code and the storage account is where",
    "start": "1402799",
    "end": "1408240"
  },
  {
    "text": "you keep your stuff okay so the approach was not very magical since we had root",
    "start": "1408240",
    "end": "1414640"
  },
  {
    "text": "access to the compute instance we wanted to inspect the network traffic that is going in and out when we do something we",
    "start": "1414640",
    "end": "1421279"
  },
  {
    "text": "want to check the running processes to find such agents uh reverse those cloud service",
    "start": "1421279",
    "end": "1426840"
  },
  {
    "text": "provided agents because they are not open source and maybe we can find some undocumented API or some overly",
    "start": "1426840",
    "end": "1432520"
  },
  {
    "text": "permissive API and of course explore the logs that are generated when we do something",
    "start": "1432520",
    "end": "1439200"
  },
  {
    "text": "so as David shared earlier this is a similar example let's say we have a function app and a compute instance in a",
    "start": "1439200",
    "end": "1445200"
  },
  {
    "text": "user's uh subscription and we want these asure resources to access a storage account so",
    "start": "1445200",
    "end": "1453000"
  },
  {
    "text": "one of the ways is to hard code credentials but uh that's not a recommended way we have a cwe for it and",
    "start": "1453000",
    "end": "1459159"
  },
  {
    "text": "Microsoft recommends using something that is called a manage identity so the first type of manage",
    "start": "1459159",
    "end": "1465480"
  },
  {
    "text": "identities is a user assigned manage identity so this identity can span",
    "start": "1465480",
    "end": "1470520"
  },
  {
    "text": "across resources and can be also used by multiple resources for instance in this",
    "start": "1470520",
    "end": "1475799"
  },
  {
    "text": "case we can use one single user assign manager entity to allow the function app",
    "start": "1475799",
    "end": "1480919"
  },
  {
    "text": "and the compute instance to access the storage account the second type of manage",
    "start": "1480919",
    "end": "1486679"
  },
  {
    "text": "identities are system assigned manage identities this identity is specific and tied to the life cycle of the resource",
    "start": "1486679",
    "end": "1493320"
  },
  {
    "text": "to which you assign it and these identities cannot span across resources",
    "start": "1493320",
    "end": "1499520"
  },
  {
    "text": "to get going with manage identities using Azure CLI you can run AZ login",
    "start": "1499520",
    "end": "1504799"
  },
  {
    "text": "followed by this uh flag of-- identity since we have root access to",
    "start": "1504799",
    "end": "1509880"
  },
  {
    "text": "the virtual machine or the compute instance what happens when we run this command a get request is sent to a local",
    "start": "1509880",
    "end": "1517640"
  },
  {
    "text": "uh Port which is 46808 and again since we have root access we are able to figure out which",
    "start": "1517640",
    "end": "1522720"
  },
  {
    "text": "is the underlying process that is listening on this port in this case it is identity responder D well what is",
    "start": "1522720",
    "end": "1530039"
  },
  {
    "text": "identity responder D it is a powerful demon uh it runs as root and it is also",
    "start": "1530039",
    "end": "1535760"
  },
  {
    "text": "known as Azure batch AI identity responder demon so does it respond with some identities some tokens we'll see in",
    "start": "1535760",
    "end": "1543120"
  },
  {
    "text": "a bit and it also fetches its configuration configurations that are stored as environment variables in files",
    "start": "1543120",
    "end": "1550200"
  },
  {
    "text": "so these are the locations of the files so these are some of the environment variables that are used by",
    "start": "1550200",
    "end": "1555840"
  },
  {
    "text": "identity responder demon to get going with a computer instance and particularly MSI endpoint MSI secret and",
    "start": "1555840",
    "end": "1562399"
  },
  {
    "text": "the CT URL these are the three important environment variables that we need to focus on well we just want to figure out",
    "start": "1562399",
    "end": "1569200"
  },
  {
    "text": "how does the outbound traffic look like to see whether we can do something about it so we have eventually this post",
    "start": "1569200",
    "end": "1575720"
  },
  {
    "text": "request where the host header is set and the post request body contains the certificate thumb print and the compute",
    "start": "1575720",
    "end": "1583120"
  },
  {
    "text": "instance name that is set as the instance ID and the resource for which we are you know getting the token for",
    "start": "1583120",
    "end": "1589480"
  },
  {
    "text": "and to talk to this end point we need a pair of certificate and a private key from this hardcoded port uh path on all",
    "start": "1589480",
    "end": "1597080"
  },
  {
    "text": "compute instances that you will ever create so overall we have this compute",
    "start": "1597080",
    "end": "1602520"
  },
  {
    "text": "instance which contains a binary that is identity respond demon remember that this is a closed Source binary we don't",
    "start": "1602520",
    "end": "1608520"
  },
  {
    "text": "have any public code a available for this which talks to a public endpoint using a pair of certificate and a",
    "start": "1608520",
    "end": "1615000"
  },
  {
    "text": "private key and in the response uh the the manage identity jws can be fetched",
    "start": "1615000",
    "end": "1620240"
  },
  {
    "text": "and used from the compute instance let's say the certificate and",
    "start": "1620240",
    "end": "1625880"
  },
  {
    "text": "the keair are compromised in an assumed breach scenario like a post compromise scenario these are compromised and",
    "start": "1625880",
    "end": "1632440"
  },
  {
    "text": "exfiltrated from the compu instance could an attacker still use the",
    "start": "1632440",
    "end": "1637640"
  },
  {
    "text": "same pair of certificate and key pair to get the manage identity token from non-",
    "start": "1637640",
    "end": "1642679"
  },
  {
    "text": "aure environments let's try to bypass the security boundary right now we found that we could not so we got a 401",
    "start": "1642679",
    "end": "1649480"
  },
  {
    "text": "unauthorized so we're like okay so did Microsoft really win there let's see so",
    "start": "1649480",
    "end": "1655039"
  },
  {
    "text": "the certificate and the key pair they are actually tied to the compute instance and these are unique per",
    "start": "1655039",
    "end": "1661840"
  },
  {
    "text": "compute instances so like no two pairs of certificate and the private key will ever be equal H but was that it like we",
    "start": "1661840",
    "end": "1670200"
  },
  {
    "text": "could have just you know packed our bags and left but no just kidding so enter",
    "start": "1670200",
    "end": "1676000"
  },
  {
    "text": "DSi Mount agent DSi agent is another binary that exists on all compute instances which again runs as root it is",
    "start": "1676000",
    "end": "1683600"
  },
  {
    "text": "known as batch AI batch AI DSi Mount agent and it also fetches its",
    "start": "1683600",
    "end": "1689120"
  },
  {
    "text": "configuration from environment variables stored in files like the same environment variables David So yeah so",
    "start": "1689120",
    "end": "1697039"
  },
  {
    "text": "this is the same binary that uh same agent that we found uh vulnerability in",
    "start": "1697039",
    "end": "1702240"
  },
  {
    "text": "last year for black hat USA so we found a bug in the binary itself where in",
    "start": "1702240",
    "end": "1708159"
  },
  {
    "text": "Network Adent attacker could basically fetch logs for any service and in this",
    "start": "1708159",
    "end": "1713399"
  },
  {
    "text": "case you can see we can fetch the uh logs for Jupiter service because Jupiter is installed on all compute instances so",
    "start": "1713399",
    "end": "1720480"
  },
  {
    "text": "let's say if you are a data scientist who is using compute instances and running some commands as pseudo using",
    "start": "1720480",
    "end": "1726440"
  },
  {
    "text": "the Jupiter terminal they would get in the logs and these logs can be viewed by a network agisent attacker and this",
    "start": "1726440",
    "end": "1733039"
  },
  {
    "text": "issue was later fixed uh with the cve now I'd like to present what was ini",
    "start": "1733039",
    "end": "1738080"
  },
  {
    "text": "ially plannned for last year's blackhe hat USA but things changed the last minute so the configuration files for",
    "start": "1738080",
    "end": "1744919"
  },
  {
    "text": "DSI Mount agent contain certain interesting environment variables like some symmetric key some certificate uh",
    "start": "1744919",
    "end": "1752880"
  },
  {
    "text": "cluster certificate some cluster private key some XDS endpoint so what is happening here well the purpose of DSi",
    "start": "1752880",
    "end": "1761039"
  },
  {
    "text": "Mount agent is to make sure that the file share of the storage account for this workspace is mounted on the compute",
    "start": "1761039",
    "end": "1768519"
  },
  {
    "text": "instance and it does so by checking every 2 minutes so its job is just to make sure that the file share is mounted",
    "start": "1768519",
    "end": "1774640"
  },
  {
    "text": "on the compute instance so turns out the DSi Mount agent talks to the batch exds endpoint",
    "start": "1774640",
    "end": "1782080"
  },
  {
    "text": "using the same pair of certificate and the private key that identity responder demon uses and in the response we get",
    "start": "1782080",
    "end": "1788279"
  },
  {
    "text": "something what do we get So eventually the post request uh like the outbound traffic looks something like this so we",
    "start": "1788279",
    "end": "1794960"
  },
  {
    "text": "are not concerned about the post request or the uh headers and all we'll just focus on the request body because from",
    "start": "1794960",
    "end": "1802440"
  },
  {
    "text": "here onwards the certificates are the same the endpoint is the same the URI is the same so yeah let's see what is the",
    "start": "1802440",
    "end": "1809320"
  },
  {
    "text": "response for request type get workspace so we reversed the binary DSi",
    "start": "1809320",
    "end": "1814640"
  },
  {
    "text": "Mount agent and we found this function called uh clients get workspace info in",
    "start": "1814640",
    "end": "1819799"
  },
  {
    "text": "this binary and we have this request uh type set to get workspace which is the post request body this request is sent",
    "start": "1819799",
    "end": "1826399"
  },
  {
    "text": "to the batch a XDS endpoint using the same pair of certificate and the private key that we saw earlier and in the",
    "start": "1826399",
    "end": "1832240"
  },
  {
    "text": "response we get the AML workspaces metadata this metadata contains information such as the storage accounts",
    "start": "1832240",
    "end": "1839600"
  },
  {
    "text": "uh resource ID the key walls application insights the tenant IDs the subscription ID so this can be thought of like the",
    "start": "1839600",
    "end": "1846519"
  },
  {
    "text": "who am I of the AML workspace later we come across another",
    "start": "1846519",
    "end": "1851840"
  },
  {
    "text": "request which looks like this so we have a function called get workspace Secrets where the request type is set to get",
    "start": "1851840",
    "end": "1858120"
  },
  {
    "text": "workspace Secrets just note that this binary is not open source so we are able to find this after we have reversed the",
    "start": "1858120",
    "end": "1864720"
  },
  {
    "text": "binary and in the response we get an encrypted form of the storage accounts access",
    "start": "1864720",
    "end": "1870279"
  },
  {
    "text": "key so the response is decrypted by certain environment variables that are again stored in files for the DSi Mount",
    "start": "1870279",
    "end": "1877799"
  },
  {
    "text": "agent and the DSi idle stop agent which is a different binary so using these two environment variables we get the",
    "start": "1877799",
    "end": "1883320"
  },
  {
    "text": "decrypted symmetric key and using this decrypted symmetric key we are able to to decrypt the response that we saw and",
    "start": "1883320",
    "end": "1890039"
  },
  {
    "text": "eventually obtain the storage accounts access key and that's where David helped me so you're welcome thank",
    "start": "1890039",
    "end": "1896279"
  },
  {
    "text": "you so the attack scenario is something like this we have a certificate and a private",
    "start": "1896279",
    "end": "1902360"
  },
  {
    "text": "key and a bunch of environment variables that are stored in files these variables are used uh as configurations for uh for",
    "start": "1902360",
    "end": "1910600"
  },
  {
    "text": "these middleware agents and you can use these to get the storage accounts access",
    "start": "1910600",
    "end": "1916480"
  },
  {
    "text": "key let's say these three files are compromised now what would you do to",
    "start": "1916480",
    "end": "1922679"
  },
  {
    "text": "invalidate the storage accounts access key well NES what about if we rotate the",
    "start": "1922679",
    "end": "1928760"
  },
  {
    "text": "keys right H that's a good idea let's see whether that",
    "start": "1928760",
    "end": "1935320"
  },
  {
    "text": "works so on the left I have the AML workspace and on the right I have a bash terminal open on my laptop so on the AML",
    "start": "1936519",
    "end": "1943639"
  },
  {
    "text": "workspace I navigate to the uh storage account and I go to the access keys",
    "start": "1943639",
    "end": "1949039"
  },
  {
    "text": "section now we view the primary access key and we copy this to the terminal on",
    "start": "1949039",
    "end": "1954279"
  },
  {
    "text": "the sorry terminal on the okay let me just play this",
    "start": "1954279",
    "end": "1959880"
  },
  {
    "text": "again so yeah on the left we have the AML workspace and we go to the storage account so after we go to the storage",
    "start": "1959880",
    "end": "1966639"
  },
  {
    "text": "account we go to the access keys and we copy the first like the",
    "start": "1966639",
    "end": "1973159"
  },
  {
    "text": "primary access key that is being used with this storage account so after we have copied this we will run the P where",
    "start": "1973159",
    "end": "1980000"
  },
  {
    "text": "have where I have exfiltrated the certificate and the private key so we are able to get the current storage",
    "start": "1980000",
    "end": "1985080"
  },
  {
    "text": "accounts access key now what we will do is we will generate the storage accounts",
    "start": "1985080",
    "end": "1991559"
  },
  {
    "text": "access key again we'll basically rotate the key so now that the key has been",
    "start": "1991559",
    "end": "1997000"
  },
  {
    "text": "rotated we will copy this a newly generated key back to our terminal and now we will uh synchronize",
    "start": "1997000",
    "end": "2004600"
  },
  {
    "text": "the AML workspace to use this new uh storage accounts access key so once this",
    "start": "2004600",
    "end": "2009919"
  },
  {
    "text": "synchronization has completed we will go back to our terminal and we will rerun the PC to see whether we can get the",
    "start": "2009919",
    "end": "2016919"
  },
  {
    "text": "rotated storage accounts access key and as you can see we got the rotated storage accounts access key as",
    "start": "2016919",
    "end": "2024360"
  },
  {
    "text": "well does the story end here like all the stories that could have been this one does not really end so",
    "start": "2028200",
    "end": "2035039"
  },
  {
    "text": "fast so there were a few more agents that talk to such public endpoints using",
    "start": "2035039",
    "end": "2041360"
  },
  {
    "text": "a pair of certificate and a private key and in the response we get certain Crown jeels like storage accounts access key",
    "start": "2041360",
    "end": "2047679"
  },
  {
    "text": "the EML workspace metadata information and a lot of other things there were a few more agents that we could look into",
    "start": "2047679",
    "end": "2054240"
  },
  {
    "text": "and reverse and figure out what else can we fetch using the storage accounts access key using the certificates and",
    "start": "2054240",
    "end": "2060440"
  },
  {
    "text": "the private Keys basically so the idea was to find what",
    "start": "2060440",
    "end": "2065638"
  },
  {
    "text": "else can we request and what else can can be the uh the parameters for request type in the post request body so the",
    "start": "2065639",
    "end": "2072878"
  },
  {
    "text": "function for example get workspace Secrets calls another function that is generate XDS API request schema so the",
    "start": "2072879",
    "end": "2079919"
  },
  {
    "text": "post requests body is is generated by this function so the request type parameter is populated by this function",
    "start": "2079919",
    "end": "2086839"
  },
  {
    "text": "so the idea was to look at all the cross references across all the binaries to this particular function and find out",
    "start": "2086839",
    "end": "2092839"
  },
  {
    "text": "what else could be done and this is the list that we uh came up with in this we",
    "start": "2092839",
    "end": "2098160"
  },
  {
    "text": "have generate SAS generate data store credentials get ACR token get secret so",
    "start": "2098160",
    "end": "2103640"
  },
  {
    "text": "we put so we pick get ad token because that's you know interesting and then back then I don't think Azure was",
    "start": "2103640",
    "end": "2110119"
  },
  {
    "text": "renamed to entra so we were good so this function called get a token",
    "start": "2110119",
    "end": "2117040"
  },
  {
    "text": "which is there in the host tools package for identity responder demon host tools and a lot of other binaries as",
    "start": "2117040",
    "end": "2123359"
  },
  {
    "text": "well so this is how the request body looks like where we have the request types set to get ad token and the",
    "start": "2123359",
    "end": "2129079"
  },
  {
    "text": "request body contains the resource for which we are fetching the token for this is sent to the same batch a XDS and",
    "start": "2129079",
    "end": "2135880"
  },
  {
    "text": "point and in the response we get the entra ID JWT of the manager entity that",
    "start": "2135880",
    "end": "2141920"
  },
  {
    "text": "was assigned this is how the response look like and similarly for fetching the",
    "start": "2141920",
    "end": "2147480"
  },
  {
    "text": "user assigned manag identity we just specify the client ID in the request and we get the enter ID JWT of the assigned",
    "start": "2147480",
    "end": "2154880"
  },
  {
    "text": "user assigned manage identity quick recap so we have certain binaries in compute instances that talk to public",
    "start": "2154880",
    "end": "2160760"
  },
  {
    "text": "endpoints using a pair of certificate and a private key and we can fetch the",
    "start": "2160760",
    "end": "2165960"
  },
  {
    "text": "so this is how the compute instance fetches the Whi of the AML workspace the storage account key the jwt's for the uh",
    "start": "2165960",
    "end": "2172240"
  },
  {
    "text": "manage entities and a lot more of stuff and if these credentials are compromised in a post compromise scenario an",
    "start": "2172240",
    "end": "2178480"
  },
  {
    "text": "attacker could do the same well but we can use the locks right",
    "start": "2178480",
    "end": "2184359"
  },
  {
    "text": "we can see the activity that something happened okay you the logs let's let's find out well let's do some legitimate",
    "start": "2184359",
    "end": "2191119"
  },
  {
    "text": "activity this is using the Azure ml SDK or you could just you know run easy",
    "start": "2191119",
    "end": "2196240"
  },
  {
    "text": "login hyphen I identity from the compute instance and using the certificate and",
    "start": "2196240",
    "end": "2201839"
  },
  {
    "text": "the key pair from the same compute instance outside the comput instance let's say this is already compromised we",
    "start": "2201839",
    "end": "2207079"
  },
  {
    "text": "run this request and we get these logs so the difference between the attacker logs and",
    "start": "2207079",
    "end": "2213040"
  },
  {
    "text": "the compute instance logs don't really signify something uh you know important that we can Bank on to figure out",
    "start": "2213040",
    "end": "2219680"
  },
  {
    "text": "whether this request came in from the compute instance or from an attacker's environment and as you can see the sign",
    "start": "2219680",
    "end": "2225400"
  },
  {
    "text": "in details don't contain any information about the IP address so that would have been one indicator that you could have",
    "start": "2225400",
    "end": "2230640"
  },
  {
    "text": "you know banked on but you can't so how do we detect that someone",
    "start": "2230640",
    "end": "2236680"
  },
  {
    "text": "have stolen our certificates you can't use the logs",
    "start": "2236680",
    "end": "2241760"
  },
  {
    "text": "David that's too bad yeah well but let me referes why why",
    "start": "2241760",
    "end": "2248800"
  },
  {
    "text": "why is this even a vulnerability can you explain about that okay so when we go to",
    "start": "2248800",
    "end": "2254000"
  },
  {
    "text": "the documentation for Microsoft we came across this one particular mention about identities manage identities is that by",
    "start": "2254000",
    "end": "2260280"
  },
  {
    "text": "Design only the Azure resource to which we have assigned the identity can use",
    "start": "2260280",
    "end": "2265640"
  },
  {
    "text": "this identity to request tokens from Azure ad but we are able to use the",
    "start": "2265640",
    "end": "2271720"
  },
  {
    "text": "certificates and the private keys to fetch tokens outside the resource to which the identity has been",
    "start": "2271720",
    "end": "2279440"
  },
  {
    "text": "assigned so trust but did you verify you know the documentation could be outdated",
    "start": "2279720",
    "end": "2284960"
  },
  {
    "text": "we all know who develop software we don't like doing documentation okay well you know everyone someday",
    "start": "2284960",
    "end": "2292480"
  },
  {
    "text": "somewhere needs someone whom they can absolutely Trust and Believe In to confirm things from the Lords themselves",
    "start": "2292480",
    "end": "2299680"
  },
  {
    "text": "we dialed in aure support so we called aure support and I",
    "start": "2299680",
    "end": "2306079"
  },
  {
    "text": "asked them like why don't the manage identity signin logs contain any IP address and this is what they came back",
    "start": "2306079",
    "end": "2312359"
  },
  {
    "text": "with so the assumption is that the manage identity tokens are fetched from a local endpoint so just like AWS imds",
    "start": "2312359",
    "end": "2319280"
  },
  {
    "text": "endpoint so in this case because of the feature of manager entities the logs are",
    "start": "2319280",
    "end": "2325359"
  },
  {
    "text": "not helpful that you can Bank on later just to be sure about things it",
    "start": "2325359",
    "end": "2330400"
  },
  {
    "text": "turns out that the certificate couldn't be uh figured out whether it came from",
    "start": "2330400",
    "end": "2335720"
  },
  {
    "text": "like where the request actually came from and again they said like okay Microsoft entra does not record the IP address",
    "start": "2335720",
    "end": "2342640"
  },
  {
    "text": "because it is assumed that the sign in happened from the targeted manage identity resource so uh like a quick note on the",
    "start": "2342640",
    "end": "2350560"
  },
  {
    "text": "persistence so using the certificate and the private key you can get the rotated Keys the jwt's for manage ID entities",
    "start": "2350560",
    "end": "2356760"
  },
  {
    "text": "the certificate is valid for two full years so if you have a compromise you wouldn't know for at least two years that you know somebody else had the",
    "start": "2356760",
    "end": "2363520"
  },
  {
    "text": "backd door access and yeah to to invalidate the certificate you need to delete the",
    "start": "2363520",
    "end": "2368920"
  },
  {
    "text": "compute instance and obviously these logging discrepancies can be really helpful for",
    "start": "2368920",
    "end": "2374040"
  },
  {
    "text": "attackers so the disclosure timeline looks uh interesting for this so we had planned to share this research with the",
    "start": "2374040",
    "end": "2379520"
  },
  {
    "text": "community back in blackhead USA however the vulnerability was reproducible and not fixed uh before the before the talk",
    "start": "2379520",
    "end": "2386560"
  },
  {
    "text": "was recorded we reached out to Microsoft and they deemed the bug to be a low of a low severity and later upon Microsoft's",
    "start": "2386560",
    "end": "2392720"
  },
  {
    "text": "request we redacted the details although this bug was over the 90day zdi disclosure",
    "start": "2392720",
    "end": "2397880"
  },
  {
    "text": "uh policy and it was reproducible as well Microsoft has recently confirmed that the vulnerability has been passed",
    "start": "2397880",
    "end": "2403520"
  },
  {
    "text": "and we have also validated on our end currently the fix does not allow the certificate and the keypad to be used",
    "start": "2403520",
    "end": "2408880"
  },
  {
    "text": "outside compute instances later we'll be releasing this blog by 22nd of April so",
    "start": "2408880",
    "end": "2414920"
  },
  {
    "text": "stay tuned on that as well so how many services support manage ID anyway yeah that's cool uh there are",
    "start": "2414920",
    "end": "2423119"
  },
  {
    "text": "over 50 plus Azure services that can support azzure manager entities",
    "start": "2423119",
    "end": "2428280"
  },
  {
    "text": "so we have looked into azzure app Services Azure machine learning service so possibly researchers you can look",
    "start": "2428280",
    "end": "2433880"
  },
  {
    "text": "into other services to find more variants and find logging discrepancies in the service all right uh time to wake up",
    "start": "2433880",
    "end": "2441200"
  },
  {
    "text": "folks uh so back to R takeaways yeah so if you sleep till night there is key",
    "start": "2441200",
    "end": "2447480"
  },
  {
    "text": "take takeaways to take from this talk I'm not saying you can't use environment to variable inject Secret inside this",
    "start": "2447480",
    "end": "2452960"
  },
  {
    "text": "but you have to be very careful when you do it and know the consequences and that the thing can get very bad and it's",
    "start": "2452960",
    "end": "2459280"
  },
  {
    "text": "definitely not a wall well it's always good to threat model cloud service provider services to",
    "start": "2459280",
    "end": "2467119"
  },
  {
    "text": "to you know to get an idea what could get wrong and perhaps create an action plan if something gets wrong because you",
    "start": "2467119",
    "end": "2474040"
  },
  {
    "text": "know if you hardcore secrat and then you find a leak and you have to rotate that it it's pain yeah but if you store them",
    "start": "2474040",
    "end": "2481119"
  },
  {
    "text": "in the world you can do it by one click also one of the security cliche follow",
    "start": "2481119",
    "end": "2486599"
  },
  {
    "text": "principle of leas privilege and this is especially important for the cloud deployant because single access token",
    "start": "2486599",
    "end": "2494160"
  },
  {
    "text": "could lead to the full cloud account comp right especially if you get like high privileg or like service",
    "start": "2494160",
    "end": "2502280"
  },
  {
    "text": "principle if you are a threat researcher examine Cloud apis find the box and make",
    "start": "2502280",
    "end": "2507560"
  },
  {
    "text": "the whole environment even more secure so it's very important to test",
    "start": "2507560",
    "end": "2512760"
  },
  {
    "text": "and secure your authentication and authorization Scopes so from where you can use these certificat based uh like",
    "start": "2512760",
    "end": "2518480"
  },
  {
    "text": "authentication to work definitely we if we had the actionable logging then we could have detected such sort of things",
    "start": "2518480",
    "end": "2524520"
  },
  {
    "text": "and you know you could have been much more secure such assumed breach approach",
    "start": "2524520",
    "end": "2529640"
  },
  {
    "text": "uh can lead to such security findings as well and that would be really hard to detect and obviously uh Challenge",
    "start": "2529640",
    "end": "2536720"
  },
  {
    "text": "official documentation and don't forget to call asure support uh we'd like to acknowledge uh",
    "start": "2536720",
    "end": "2543040"
  },
  {
    "text": "Zer Initiative for helping us out with uh Tri like getting the bugs across Microsoft and now we open the floor for",
    "start": "2543040",
    "end": "2551839"
  },
  {
    "text": "any questions that you may",
    "start": "2551839",
    "end": "2555040"
  },
  {
    "text": "have I think we have one question okay sorry I'm Paul your colleague so do",
    "start": "2568520",
    "end": "2577480"
  },
  {
    "text": "you have a recommendation for those uh stolen certificates I mean how the S so",
    "start": "2577480",
    "end": "2583760"
  },
  {
    "text": "can detect it so based on the logs that we found the S so could not be able to detect",
    "start": "2583760",
    "end": "2589599"
  },
  {
    "text": "whether the certificate abuse was happening from an Azure environment or from an attacker's environment because",
    "start": "2589599",
    "end": "2596040"
  },
  {
    "text": "one of the factors that one would Bank on would be an IP address but the IP address is not there in the signin also Reed okay you would have to detect the",
    "start": "2596040",
    "end": "2603119"
  },
  {
    "text": "initial Breakin but you wouldn't detect that something was leak perhaps or use to leak maybe but use",
    "start": "2603119",
    "end": "2611240"
  },
  {
    "text": "not okay all right thank you uh if you have any other questions we'll be down in the hallway and we'll",
    "start": "2611240",
    "end": "2617839"
  },
  {
    "text": "be also back here tomorrow so we can connect there uh these are our QR codes",
    "start": "2617839",
    "end": "2622880"
  },
  {
    "text": "uh feel free to reach out and thank you for attending breaking manage identity barriers in Azure Services once again we",
    "start": "2622880",
    "end": "2628839"
  },
  {
    "text": "are David and NES and we'll be back with some cool stuff thank you",
    "start": "2628839",
    "end": "2635839"
  }
]