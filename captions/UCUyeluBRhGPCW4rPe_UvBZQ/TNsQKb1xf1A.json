[
  {
    "text": "how turbo repo is porting from go to",
    "start": "0",
    "end": "3000"
  },
  {
    "text": "rust or strategy for making updates and",
    "start": "3000",
    "end": "5040"
  },
  {
    "text": "maintaining stability while we migrate",
    "start": "5040",
    "end": "7020"
  },
  {
    "text": "languages okay we've read something",
    "start": "7020",
    "end": "8460"
  },
  {
    "text": "earlier this year that was about how",
    "start": "8460",
    "end": "10559"
  },
  {
    "text": "they they ported turbo and now they're",
    "start": "10559",
    "end": "12540"
  },
  {
    "text": "doing this whole turbo repo business so",
    "start": "12540",
    "end": "14519"
  },
  {
    "text": "let's see this all right we could we",
    "start": "14519",
    "end": "16500"
  },
  {
    "text": "should recognize some of these people",
    "start": "16500",
    "end": "17820"
  },
  {
    "text": "here let's go in a previous blog post",
    "start": "17820",
    "end": "19800"
  },
  {
    "text": "with the one we've already read right uh",
    "start": "19800",
    "end": "21660"
  },
  {
    "text": "we talked about why we are reporting uh",
    "start": "21660",
    "end": "24119"
  },
  {
    "text": "turbo remember it was like rust makes",
    "start": "24119",
    "end": "25920"
  },
  {
    "text": "developers happy when you have happy",
    "start": "25920",
    "end": "27240"
  },
  {
    "text": "developers they tend to work better blah",
    "start": "27240",
    "end": "28859"
  },
  {
    "text": "blah blah blah the high performance",
    "start": "28859",
    "end": "30480"
  },
  {
    "text": "build system of uh JavaScript and",
    "start": "30480",
    "end": "33059"
  },
  {
    "text": "typescript from go to rust now we're",
    "start": "33059",
    "end": "34860"
  },
  {
    "text": "going to talk about how",
    "start": "34860",
    "end": "36660"
  },
  {
    "text": "it's pretty exciting let's see the how",
    "start": "36660",
    "end": "38040"
  },
  {
    "text": "let's see the Nitty Gritty today our",
    "start": "38040",
    "end": "40379"
  },
  {
    "text": "reporting effort is in full swing moving",
    "start": "40379",
    "end": "42780"
  },
  {
    "text": "more and more code to rust but when we",
    "start": "42780",
    "end": "44399"
  },
  {
    "text": "were starting out we had to make sure",
    "start": "44399",
    "end": "45840"
  },
  {
    "text": "that porting was feasible for us to",
    "start": "45840",
    "end": "47460"
  },
  {
    "text": "accomplish a migration from one language",
    "start": "47460",
    "end": "49559"
  },
  {
    "text": "to another is no small task and there's",
    "start": "49559",
    "end": "51360"
  },
  {
    "text": "a lot of research to do up front uh to",
    "start": "51360",
    "end": "54180"
  },
  {
    "text": "ensure that the end goal is attainable",
    "start": "54180",
    "end": "55860"
  },
  {
    "text": "yes here's uh how we started the process",
    "start": "55860",
    "end": "59039"
  },
  {
    "text": "validating our current porting strategy",
    "start": "59039",
    "end": "61079"
  },
  {
    "text": "and made the call to Port turbo repo",
    "start": "61079",
    "end": "63239"
  },
  {
    "text": "rust I think that anything that involves",
    "start": "63239",
    "end": "65100"
  },
  {
    "text": "a bunch of system calls I go on the",
    "start": "65100",
    "end": "67439"
  },
  {
    "text": "fence of whether you should stick with",
    "start": "67439",
    "end": "68820"
  },
  {
    "text": "rust or or or stick with go or go to",
    "start": "68820",
    "end": "71820"
  },
  {
    "text": "rust honestly I think there's a lot of",
    "start": "71820",
    "end": "74159"
  },
  {
    "text": "value and go in this and I don't think",
    "start": "74159",
    "end": "75840"
  },
  {
    "text": "you're I don't think go and rust you're",
    "start": "75840",
    "end": "77939"
  },
  {
    "text": "gonna experience a huge slowdown or",
    "start": "77939",
    "end": "80220"
  },
  {
    "text": "difference in fact I think writing in",
    "start": "80220",
    "end": "82020"
  },
  {
    "text": "Rust you might even find yourself",
    "start": "82020",
    "end": "83040"
  },
  {
    "text": "slowing down because you're just not",
    "start": "83040",
    "end": "84420"
  },
  {
    "text": "good at writing it right I am very",
    "start": "84420",
    "end": "86759"
  },
  {
    "text": "curious",
    "start": "86759",
    "end": "87960"
  },
  {
    "text": "which is better right uh Port versus",
    "start": "87960",
    "end": "90119"
  },
  {
    "text": "full rewrite when we are planning our",
    "start": "90119",
    "end": "91680"
  },
  {
    "text": "migration we briefly considered a full",
    "start": "91680",
    "end": "93360"
  },
  {
    "text": "ground up rewrite but talking the idea",
    "start": "93360",
    "end": "95400"
  },
  {
    "text": "through we realized it wouldn't fit our",
    "start": "95400",
    "end": "96840"
  },
  {
    "text": "goals as well as an incremental Port",
    "start": "96840",
    "end": "98340"
  },
  {
    "text": "would what is an incremental Port",
    "start": "98340",
    "end": "99960"
  },
  {
    "text": "incremental porting moves code piece by",
    "start": "99960",
    "end": "102180"
  },
  {
    "text": "piece running new and old code together",
    "start": "102180",
    "end": "103979"
  },
  {
    "text": "at the same time Roman writing pretty",
    "start": "103979",
    "end": "105960"
  },
  {
    "text": "much uh the goal for the chunk of code",
    "start": "105960",
    "end": "108119"
  },
  {
    "text": "uh being moved is to keep the behavior",
    "start": "108119",
    "end": "110220"
  },
  {
    "text": "exactly the same as before it was ported",
    "start": "110220",
    "end": "112140"
  },
  {
    "text": "yep you're just going piece by piece",
    "start": "112140",
    "end": "113880"
  },
  {
    "text": "there's like a the first block is the",
    "start": "113880",
    "end": "115860"
  },
  {
    "text": "hardest block because it has to do like",
    "start": "115860",
    "end": "117119"
  },
  {
    "text": "the core work and then you slowly start",
    "start": "117119",
    "end": "119700"
  },
  {
    "text": "unraveling that you know what I mean in",
    "start": "119700",
    "end": "121439"
  },
  {
    "text": "our case this means we need to have our",
    "start": "121439",
    "end": "123060"
  },
  {
    "text": "go code and rust code interoper",
    "start": "123060",
    "end": "124979"
  },
  {
    "text": "inter-operating with each other we want",
    "start": "124979",
    "end": "127500"
  },
  {
    "text": "to do simple translation explicitly",
    "start": "127500",
    "end": "129660"
  },
  {
    "text": "avoiding making improvements or changing",
    "start": "129660",
    "end": "131400"
  },
  {
    "text": "functionality while we're swapping out",
    "start": "131400",
    "end": "132840"
  },
  {
    "text": "the languages for uh the slice of code",
    "start": "132840",
    "end": "134760"
  },
  {
    "text": "that way we can do an intensive testing",
    "start": "134760",
    "end": "136560"
  },
  {
    "text": "against both sets of code and complete",
    "start": "136560",
    "end": "138300"
  },
  {
    "text": "the migration as quickly as possible why",
    "start": "138300",
    "end": "140400"
  },
  {
    "text": "we didn't do a full rewrite full",
    "start": "140400",
    "end": "141660"
  },
  {
    "text": "rewrites are very tempting they are so",
    "start": "141660",
    "end": "143400"
  },
  {
    "text": "tempting and they seem like the best",
    "start": "143400",
    "end": "144720"
  },
  {
    "text": "time plan every single time they are",
    "start": "144720",
    "end": "146879"
  },
  {
    "text": "more simple to write and ship as you",
    "start": "146879",
    "end": "148620"
  },
  {
    "text": "don't need to worry about the before and",
    "start": "148620",
    "end": "150060"
  },
  {
    "text": "after code working together you also get",
    "start": "150060",
    "end": "152099"
  },
  {
    "text": "a clean slate to write new and improved",
    "start": "152099",
    "end": "153720"
  },
  {
    "text": "version without the warts and Technical",
    "start": "153720",
    "end": "155220"
  },
  {
    "text": "debt of the previous iteration however",
    "start": "155220",
    "end": "156660"
  },
  {
    "text": "full rewrites also come with some",
    "start": "156660",
    "end": "158040"
  },
  {
    "text": "serious downsides agreed completely",
    "start": "158040",
    "end": "161099"
  },
  {
    "text": "agreed this is a great little this is a",
    "start": "161099",
    "end": "163500"
  },
  {
    "text": "great chart honestly is that this is",
    "start": "163500",
    "end": "165599"
  },
  {
    "text": "what your code did look like this is",
    "start": "165599",
    "end": "166920"
  },
  {
    "text": "what it looks like now and you",
    "start": "166920",
    "end": "168000"
  },
  {
    "text": "fundamentally changed pieces so it's",
    "start": "168000",
    "end": "169620"
  },
  {
    "text": "like really hard to go one-to-one on how",
    "start": "169620",
    "end": "171300"
  },
  {
    "text": "it's going to operate and everything",
    "start": "171300",
    "end": "172260"
  },
  {
    "text": "first a full rewrite tends to require a",
    "start": "172260",
    "end": "174660"
  },
  {
    "text": "complete halt to shipping new features",
    "start": "174660",
    "end": "176220"
  },
  {
    "text": "otherwise you run the risk of chasing a",
    "start": "176220",
    "end": "177900"
  },
  {
    "text": "moving Target as the old code base grows",
    "start": "177900",
    "end": "180060"
  },
  {
    "text": "while you catch up with your new code",
    "start": "180060",
    "end": "182700"
  },
  {
    "text": "full rewrite also does not guarantee a",
    "start": "182700",
    "end": "184739"
  },
  {
    "text": "better user experience often a rewrite",
    "start": "184739",
    "end": "186480"
  },
  {
    "text": "ends up less than seamless and it's as",
    "start": "186480",
    "end": "189180"
  },
  {
    "text": "it's not feasible for the new version to",
    "start": "189180",
    "end": "191099"
  },
  {
    "text": "match the old one feature for feature",
    "start": "191099",
    "end": "193140"
  },
  {
    "text": "Edge case for Edge case the surface area",
    "start": "193140",
    "end": "194940"
  },
  {
    "text": "of the rewrite grows there's more room",
    "start": "194940",
    "end": "196980"
  },
  {
    "text": "for error and as the users can end up",
    "start": "196980",
    "end": "199319"
  },
  {
    "text": "frustrated with the breaking changes and",
    "start": "199319",
    "end": "201599"
  },
  {
    "text": "missing features good reason not to do",
    "start": "201599",
    "end": "203640"
  },
  {
    "text": "full rewrites I'm always very skeptical",
    "start": "203640",
    "end": "205500"
  },
  {
    "text": "of full rewrites full rewrites are",
    "start": "205500",
    "end": "207900"
  },
  {
    "text": "almost always a mistake almost a full",
    "start": "207900",
    "end": "211260"
  },
  {
    "text": "rewrites also require building an",
    "start": "211260",
    "end": "212700"
  },
  {
    "text": "entirely new code base which is a large",
    "start": "212700",
    "end": "214680"
  },
  {
    "text": "quantity of the unused code in our",
    "start": "214680",
    "end": "216360"
  },
  {
    "text": "experience unused code even when",
    "start": "216360",
    "end": "218640"
  },
  {
    "text": "verified with tests can be a breeding",
    "start": "218640",
    "end": "220680"
  },
  {
    "text": "ground for bugs we wanted to make sure",
    "start": "220680",
    "end": "222360"
  },
  {
    "text": "that any new rust code was properly",
    "start": "222360",
    "end": "223980"
  },
  {
    "text": "exercised as we moved through the",
    "start": "223980",
    "end": "225480"
  },
  {
    "text": "porting effort",
    "start": "225480",
    "end": "227159"
  },
  {
    "text": "this is good uh just delete all the old",
    "start": "227159",
    "end": "229620"
  },
  {
    "text": "project remember the mistakes you didn't",
    "start": "229620",
    "end": "231120"
  },
  {
    "text": "go and rewrite and rust we choose to",
    "start": "231120",
    "end": "233700"
  },
  {
    "text": "Port therefore we decided to Port turbo",
    "start": "233700",
    "end": "235620"
  },
  {
    "text": "repo to rust instead of doing a full",
    "start": "235620",
    "end": "237120"
  },
  {
    "text": "rewrite the reporting didn't uh",
    "start": "237120",
    "end": "239099"
  },
  {
    "text": "necessitate some trade-offs so we had to",
    "start": "239099",
    "end": "240780"
  },
  {
    "text": "introduce a significant amount of",
    "start": "240780",
    "end": "241980"
  },
  {
    "text": "complexity into our code base so that we",
    "start": "241980",
    "end": "243540"
  },
  {
    "text": "could interrupt between go and rust this",
    "start": "243540",
    "end": "245340"
  },
  {
    "text": "complexity meant slower developer",
    "start": "245340",
    "end": "246780"
  },
  {
    "text": "velocity to start with but we look",
    "start": "246780",
    "end": "248879"
  },
  {
    "text": "forward to workflow improvements going",
    "start": "248879",
    "end": "250500"
  },
  {
    "text": "forward particularly when our porting",
    "start": "250500",
    "end": "252720"
  },
  {
    "text": "effort has finished more importantly we",
    "start": "252720",
    "end": "254819"
  },
  {
    "text": "know we could continue shipping features",
    "start": "254819",
    "end": "257040"
  },
  {
    "text": "to Turbo repo users while porting All",
    "start": "257040",
    "end": "259500"
  },
  {
    "text": "Things Considered we determined that",
    "start": "259500",
    "end": "261000"
  },
  {
    "text": "this was a reasonable compromise and a",
    "start": "261000",
    "end": "262800"
  },
  {
    "text": "path we would take perfect I think this",
    "start": "262800",
    "end": "264900"
  },
  {
    "text": "is really good honestly I think this is",
    "start": "264900",
    "end": "266280"
  },
  {
    "text": "a really good reason to do that starting",
    "start": "266280",
    "end": "267900"
  },
  {
    "text": "the port uh rewrite uh rust and go",
    "start": "267900",
    "end": "270780"
  },
  {
    "text": "please yeah just switch it up just",
    "start": "270780",
    "end": "272400"
  },
  {
    "text": "rewrite it just rewrite it already I",
    "start": "272400",
    "end": "274320"
  },
  {
    "text": "we've already heard this song all right",
    "start": "274320",
    "end": "276120"
  },
  {
    "text": "we choose to start by writing a small",
    "start": "276120",
    "end": "277740"
  },
  {
    "text": "new turbo repo feature in Rust this way",
    "start": "277740",
    "end": "279900"
  },
  {
    "text": "we could add new functionality from the",
    "start": "279900",
    "end": "281759"
  },
  {
    "text": "roadmap for our users integrating rust",
    "start": "281759",
    "end": "283500"
  },
  {
    "text": "into the build process and interacting",
    "start": "283500",
    "end": "285120"
  },
  {
    "text": "with the existing Guild code as little",
    "start": "285120",
    "end": "287340"
  },
  {
    "text": "as possible to reduce our initial",
    "start": "287340",
    "end": "288720"
  },
  {
    "text": "complexity once we laid the groundwork",
    "start": "288720",
    "end": "290580"
  },
  {
    "text": "we knew that we could slowly Port more",
    "start": "290580",
    "end": "292680"
  },
  {
    "text": "and more code to rust over time Global",
    "start": "292680",
    "end": "295440"
  },
  {
    "text": "turbo we decided to have our first rust",
    "start": "295440",
    "end": "298440"
  },
  {
    "text": "feature be Global turbo a feature that",
    "start": "298440",
    "end": "301199"
  },
  {
    "text": "allows users to install turbo repo as",
    "start": "301199",
    "end": "303419"
  },
  {
    "text": "globally available command on their",
    "start": "303419",
    "end": "304979"
  },
  {
    "text": "machine okay a global installation of",
    "start": "304979",
    "end": "306780"
  },
  {
    "text": "Turbo will look for a locally installed",
    "start": "306780",
    "end": "308340"
  },
  {
    "text": "turbo program in the rep in the",
    "start": "308340",
    "end": "310080"
  },
  {
    "text": "suppository executed if it exists or",
    "start": "310080",
    "end": "312600"
  },
  {
    "text": "otherwise fall back to a global turbo",
    "start": "312600",
    "end": "314220"
  },
  {
    "text": "binary that way you could easily run",
    "start": "314220",
    "end": "316440"
  },
  {
    "text": "Turbo from anywhere in your uh",
    "start": "316440",
    "end": "318300"
  },
  {
    "text": "suppository and keep and also keep a",
    "start": "318300",
    "end": "320759"
  },
  {
    "text": "specific version of Turbo pinned to your",
    "start": "320759",
    "end": "322320"
  },
  {
    "text": "package Json this is great that's uh",
    "start": "322320",
    "end": "324300"
  },
  {
    "text": "this is a perfect way to do things",
    "start": "324300",
    "end": "325500"
  },
  {
    "text": "beautiful",
    "start": "325500",
    "end": "327240"
  },
  {
    "text": "beautiful uh let's see see apps web",
    "start": "327240",
    "end": "330000"
  },
  {
    "text": "turbo app info uh turbo no local local",
    "start": "330000",
    "end": "333660"
  },
  {
    "text": "found run run run run run beautiful this",
    "start": "333660",
    "end": "336300"
  },
  {
    "text": "feature is implemented through what we",
    "start": "336300",
    "end": "337860"
  },
  {
    "text": "called the rust shim a bit of rust code",
    "start": "337860",
    "end": "340560"
  },
  {
    "text": "that wraps the existing go code the goad",
    "start": "340560",
    "end": "343139"
  },
  {
    "text": "portion is compiled via seago as a",
    "start": "343139",
    "end": "345960"
  },
  {
    "text": "c-static library and then linked to the",
    "start": "345960",
    "end": "347639"
  },
  {
    "text": "rust binary luckily Global turbo only",
    "start": "347639",
    "end": "350039"
  },
  {
    "text": "requires a few features from the rest of",
    "start": "350039",
    "end": "351660"
  },
  {
    "text": "Turbo repos code such as a reading",
    "start": "351660",
    "end": "354000"
  },
  {
    "text": "configuration and navigating the file",
    "start": "354000",
    "end": "355380"
  },
  {
    "text": "system okay",
    "start": "355380",
    "end": "357120"
  },
  {
    "text": "why not turbo in Turbo Pascal though it",
    "start": "357120",
    "end": "359880"
  },
  {
    "text": "would have been the best uh this is",
    "start": "359880",
    "end": "361560"
  },
  {
    "text": "where it gets uh uh [ __ ] okay okay okay",
    "start": "361560",
    "end": "364699"
  },
  {
    "text": "CLI parsing as we implemented Global",
    "start": "364699",
    "end": "367320"
  },
  {
    "text": "turbo we realized we needed to parse a",
    "start": "367320",
    "end": "369120"
  },
  {
    "text": "few command line arguments like current",
    "start": "369120",
    "end": "370800"
  },
  {
    "text": "working directory the argument for",
    "start": "370800",
    "end": "372600"
  },
  {
    "text": "setting Turbo's current working",
    "start": "372600",
    "end": "374039"
  },
  {
    "text": "directory well clap come on get clapped",
    "start": "374039",
    "end": "377520"
  },
  {
    "text": "kid after global turbo it uh it made",
    "start": "377520",
    "end": "380220"
  },
  {
    "text": "sense to continue by porting the rest of",
    "start": "380220",
    "end": "381900"
  },
  {
    "text": "the CLI argument parser to rust to parse",
    "start": "381900",
    "end": "384300"
  },
  {
    "text": "arguments we used clap let's go clap",
    "start": "384300",
    "end": "386280"
  },
  {
    "text": "claps the best Russ equivalent to the",
    "start": "386280",
    "end": "388380"
  },
  {
    "text": "npm package of an npm package it's just",
    "start": "388380",
    "end": "391139"
  },
  {
    "text": "so good though clap lets you define a",
    "start": "391139",
    "end": "392759"
  },
  {
    "text": "data type with the arguments annotate a",
    "start": "392759",
    "end": "394680"
  },
  {
    "text": "little bit of it and automatically",
    "start": "394680",
    "end": "395699"
  },
  {
    "text": "create a parser let's go with the pieces",
    "start": "395699",
    "end": "398100"
  },
  {
    "text": "in place we had to work on sending the",
    "start": "398100",
    "end": "399660"
  },
  {
    "text": "args from rust entry points to the go",
    "start": "399660",
    "end": "401580"
  },
  {
    "text": "code for better or worse C is the",
    "start": "401580",
    "end": "403860"
  },
  {
    "text": "standard foreign function interface uh",
    "start": "403860",
    "end": "406380"
  },
  {
    "text": "ffi",
    "start": "406380",
    "end": "407520"
  },
  {
    "text": "let's see so we had the UC communicate",
    "start": "407520",
    "end": "409380"
  },
  {
    "text": "between rust and go what do you mean do",
    "start": "409380",
    "end": "411060"
  },
  {
    "text": "you see you have the right C for this",
    "start": "411060",
    "end": "413340"
  },
  {
    "text": "you couldn't just directly call if",
    "start": "413340",
    "end": "414660"
  },
  {
    "text": "you're doing a static link Library I",
    "start": "414660",
    "end": "416039"
  },
  {
    "text": "thought you're doing like a c build of",
    "start": "416039",
    "end": "417780"
  },
  {
    "text": "the go I'm confused do they actually",
    "start": "417780",
    "end": "419039"
  },
  {
    "text": "write C do they have like a bit of C in",
    "start": "419039",
    "end": "421080"
  },
  {
    "text": "in betwixt",
    "start": "421080",
    "end": "422819"
  },
  {
    "text": "go is in cabi compatible I don't know is",
    "start": "422819",
    "end": "425100"
  },
  {
    "text": "it I thought it was because rust is C",
    "start": "425100",
    "end": "426539"
  },
  {
    "text": "ABI compatible there's like a little",
    "start": "426539",
    "end": "427860"
  },
  {
    "text": "flag repercy or something like that that",
    "start": "427860",
    "end": "429419"
  },
  {
    "text": "you can put on the top rust seago",
    "start": "429419",
    "end": "431880"
  },
  {
    "text": "see the great equalizer makes everybody",
    "start": "431880",
    "end": "434639"
  },
  {
    "text": "cry in segmentation fault uh we wanted",
    "start": "434639",
    "end": "437520"
  },
  {
    "text": "to avoid having too many types in C as",
    "start": "437520",
    "end": "439860"
  },
  {
    "text": "we weren't confident that we could write",
    "start": "439860",
    "end": "441479"
  },
  {
    "text": "cross-platform C types that played well",
    "start": "441479",
    "end": "443340"
  },
  {
    "text": "with both rust and go instead we decided",
    "start": "443340",
    "end": "445740"
  },
  {
    "text": "to serialize our arguments to just on",
    "start": "445740",
    "end": "447599"
  },
  {
    "text": "and send them to go as a string even",
    "start": "447599",
    "end": "449819"
  },
  {
    "text": "though just on serialization does have",
    "start": "449819",
    "end": "451860"
  },
  {
    "text": "some overhead we knew these argument",
    "start": "451860",
    "end": "453599"
  },
  {
    "text": "structs would uh only be a few 100 bytes",
    "start": "453599",
    "end": "456900"
  },
  {
    "text": "in size so the performance would be",
    "start": "456900",
    "end": "458880"
  },
  {
    "text": "minimal yeah that's fine I'm surprised",
    "start": "458880",
    "end": "461099"
  },
  {
    "text": "you know when I hear this I'm actually",
    "start": "461099",
    "end": "462660"
  },
  {
    "text": "surprised they didn't uh just run the go",
    "start": "462660",
    "end": "465300"
  },
  {
    "text": "program as a sub module and then allow",
    "start": "465300",
    "end": "467639"
  },
  {
    "text": "standard in and just like right to",
    "start": "467639",
    "end": "469319"
  },
  {
    "text": "standard in like do some basic IPC or",
    "start": "469319",
    "end": "471180"
  },
  {
    "text": "something like that uh on this on Rust",
    "start": "471180",
    "end": "473340"
  },
  {
    "text": "side we used another Cornerstone of",
    "start": "473340",
    "end": "475020"
  },
  {
    "text": "crate of the rust ecosystem",
    "start": "475020",
    "end": "477259"
  },
  {
    "text": "which allows you to by the way that's",
    "start": "477259",
    "end": "479220"
  },
  {
    "text": "properly High I didn't know if you know",
    "start": "479220",
    "end": "480660"
  },
  {
    "text": "that but to say Saturday correctly you",
    "start": "480660",
    "end": "482520"
  },
  {
    "text": "have to say it like that anyone that",
    "start": "482520",
    "end": "483840"
  },
  {
    "text": "tries to give you some other way they're",
    "start": "483840",
    "end": "486120"
  },
  {
    "text": "lying to you okay Saturday and Jay",
    "start": "486120",
    "end": "488699"
  },
  {
    "text": "diesel would have solved this because",
    "start": "488699",
    "end": "489780"
  },
  {
    "text": "Tom's a genius let's just face it when",
    "start": "489780",
    "end": "491880"
  },
  {
    "text": "which lets you serialize and deserialize",
    "start": "491880",
    "end": "493740"
  },
  {
    "text": "data in various formats using some",
    "start": "493740",
    "end": "495720"
  },
  {
    "text": "minimal annotation for the go side we",
    "start": "495720",
    "end": "497639"
  },
  {
    "text": "were already we were already using in",
    "start": "497639",
    "end": "500699"
  },
  {
    "text": "the code base so it was easy to receive",
    "start": "500699",
    "end": "502199"
  },
  {
    "text": "suggests on string and just serialize",
    "start": "502199",
    "end": "503639"
  },
  {
    "text": "into a ghost struct well plus go",
    "start": "503639",
    "end": "505379"
  },
  {
    "text": "supports the chasson at a first-class",
    "start": "505379",
    "end": "507360"
  },
  {
    "text": "Citizen though heterogeneous lists are a",
    "start": "507360",
    "end": "509400"
  },
  {
    "text": "bit odd ship it",
    "start": "509400",
    "end": "513620"
  },
  {
    "text": "something I said pull the plug that",
    "start": "514039",
    "end": "516120"
  },
  {
    "text": "usually means to kill it so that didn't",
    "start": "516120",
    "end": "517320"
  },
  {
    "text": "make any sense by the way sorry for this",
    "start": "517320",
    "end": "519060"
  },
  {
    "text": "like this light part I'm reworking the",
    "start": "519060",
    "end": "520919"
  },
  {
    "text": "lights that's why I look a little green",
    "start": "520919",
    "end": "522060"
  },
  {
    "text": "right now with these two features ported",
    "start": "522060",
    "end": "524159"
  },
  {
    "text": "we were are we are ready to ship our",
    "start": "524159",
    "end": "526080"
  },
  {
    "text": "first hybrid go release however before",
    "start": "526080",
    "end": "528000"
  },
  {
    "text": "we could release we need to make sure",
    "start": "528000",
    "end": "529260"
  },
  {
    "text": "the go rust binary worked in all the",
    "start": "529260",
    "end": "531360"
  },
  {
    "text": "various contacts that turbo repos use",
    "start": "531360",
    "end": "533100"
  },
  {
    "text": "like different operating systems and",
    "start": "533100",
    "end": "534480"
  },
  {
    "text": "Linux distros that we supported as we",
    "start": "534480",
    "end": "536459"
  },
  {
    "text": "tested our code we started noticing some",
    "start": "536459",
    "end": "537959"
  },
  {
    "text": "issues on a couple platforms Windows",
    "start": "537959",
    "end": "540300"
  },
  {
    "text": "difficulties",
    "start": "540300",
    "end": "543200"
  },
  {
    "text": "you know the easiest way to get around",
    "start": "543240",
    "end": "544740"
  },
  {
    "text": "windows difficulties is just",
    "start": "544740",
    "end": "547680"
  },
  {
    "text": "don't support Windows honestly",
    "start": "547680",
    "end": "550140"
  },
  {
    "text": "boom first try",
    "start": "550140",
    "end": "553760"
  },
  {
    "text": "classic Windows issues ebn ebn every",
    "start": "553920",
    "end": "557760"
  },
  {
    "text": "time I swear it is just the worst on",
    "start": "557760",
    "end": "560940"
  },
  {
    "text": "Windows there are two main tool chains",
    "start": "560940",
    "end": "562560"
  },
  {
    "text": "Microsoft's visual C plus plus msvc and",
    "start": "562560",
    "end": "565800"
  },
  {
    "text": "minimalist gnu for Windows mingui uh go",
    "start": "565800",
    "end": "569339"
  },
  {
    "text": "only uses mingui but we we're using Russ",
    "start": "569339",
    "end": "572220"
  },
  {
    "text": "with msvc oh gosh this caused some",
    "start": "572220",
    "end": "575160"
  },
  {
    "text": "runtime issues but luckily the solution",
    "start": "575160",
    "end": "576600"
  },
  {
    "text": "was simple we moved rust tool chain to",
    "start": "576600",
    "end": "578820"
  },
  {
    "text": "uh mingui",
    "start": "578820",
    "end": "580440"
  },
  {
    "text": "next up",
    "start": "580440",
    "end": "581760"
  },
  {
    "text": "we had some issues with pass Windows has",
    "start": "581760",
    "end": "583740"
  },
  {
    "text": "a couple concepts of past including",
    "start": "583740",
    "end": "585240"
  },
  {
    "text": "what's called a universal naming",
    "start": "585240",
    "end": "586560"
  },
  {
    "text": "convention young path really that's",
    "start": "586560",
    "end": "589019"
  },
  {
    "text": "funny it has a Windows has a couple",
    "start": "589019",
    "end": "590940"
  },
  {
    "text": "Concepts one of them is called Universal",
    "start": "590940",
    "end": "592380"
  },
  {
    "text": "naming convention is that not working or",
    "start": "592380",
    "end": "594000"
  },
  {
    "text": "something for everybody is it not quite",
    "start": "594000",
    "end": "595680"
  },
  {
    "text": "Universal as promised when you ask",
    "start": "595680",
    "end": "597480"
  },
  {
    "text": "Windows to uh canonicalize a path",
    "start": "597480",
    "end": "600420"
  },
  {
    "text": "resolving all Sim links and normalized",
    "start": "600420",
    "end": "602040"
  },
  {
    "text": "components in the past it gives you a",
    "start": "602040",
    "end": "603540"
  },
  {
    "text": "UNC path however despite its name UNC",
    "start": "603540",
    "end": "606480"
  },
  {
    "text": "paths are not supported everywhere",
    "start": "606480",
    "end": "609800"
  },
  {
    "text": "classic Windows W oh my goodness this is",
    "start": "610519",
    "end": "615839"
  },
  {
    "text": "just like Windows to a t what's that",
    "start": "615839",
    "end": "618120"
  },
  {
    "text": "that's a gwid where's it supported on",
    "start": "618120",
    "end": "620220"
  },
  {
    "text": "Windows nobody else uses it everyone",
    "start": "620220",
    "end": "622740"
  },
  {
    "text": "uses uuid we do Global unique",
    "start": "622740",
    "end": "625019"
  },
  {
    "text": "identifiers around here what's that",
    "start": "625019",
    "end": "626940"
  },
  {
    "text": "Universal naming conventions who uses it",
    "start": "626940",
    "end": "629459"
  },
  {
    "text": "Windows does universally available in",
    "start": "629459",
    "end": "632339"
  },
  {
    "text": "Windows sometimes not even Windows",
    "start": "632339",
    "end": "634380"
  },
  {
    "text": "itself oh yes",
    "start": "634380",
    "end": "636360"
  },
  {
    "text": "not even Windows uses it this caused a",
    "start": "636360",
    "end": "639060"
  },
  {
    "text": "few bugs where we provided a UNC path to",
    "start": "639060",
    "end": "641399"
  },
  {
    "text": "get an invalid path here the solution",
    "start": "641399",
    "end": "643200"
  },
  {
    "text": "was to use helpful rushcraft called",
    "start": "643200",
    "end": "644760"
  },
  {
    "text": "dunce that lets you canonicalize a path",
    "start": "644760",
    "end": "647519"
  },
  {
    "text": "and get non-unk path back handling the",
    "start": "647519",
    "end": "650339"
  },
  {
    "text": "intricacies of this problem for us let's",
    "start": "650339",
    "end": "652440"
  },
  {
    "text": "go Alpine Linux the second set of",
    "start": "652440",
    "end": "654720"
  },
  {
    "text": "challenges came with alpine Linux the",
    "start": "654720",
    "end": "656459"
  },
  {
    "text": "one where you hate your life at versel",
    "start": "656459",
    "end": "658740"
  },
  {
    "text": "we use Alpine a common operating system",
    "start": "658740",
    "end": "660540"
  },
  {
    "text": "for cloud computing to create",
    "start": "660540",
    "end": "661620"
  },
  {
    "text": "lightweight containers for building your",
    "start": "661620",
    "end": "663120"
  },
  {
    "text": "projects yeah it's fun until you have to",
    "start": "663120",
    "end": "664920"
  },
  {
    "text": "use it uh Alpine though does not come",
    "start": "664920",
    "end": "667500"
  },
  {
    "text": "with a G lib C the de facto",
    "start": "667500",
    "end": "669720"
  },
  {
    "text": "implementation of the C standard Library",
    "start": "669720",
    "end": "671220"
  },
  {
    "text": "this is a problem because many binaries",
    "start": "671220",
    "end": "673140"
  },
  {
    "text": "assume glib a glitzy is installed and",
    "start": "673140",
    "end": "676500"
  },
  {
    "text": "don't package it themselves there are",
    "start": "676500",
    "end": "678300"
  },
  {
    "text": "some libraries that pave over this issue",
    "start": "678300",
    "end": "679860"
  },
  {
    "text": "by using packages like uh G compat or",
    "start": "679860",
    "end": "682740"
  },
  {
    "text": "lib C6 compat but they didn't end up",
    "start": "682740",
    "end": "685200"
  },
  {
    "text": "working for us because the version of",
    "start": "685200",
    "end": "686579"
  },
  {
    "text": "glibsy that rust requires was too modern",
    "start": "686579",
    "end": "688920"
  },
  {
    "text": "uh for our supported targets when we",
    "start": "688920",
    "end": "691320"
  },
  {
    "text": "tried to run the binary we'd get errors",
    "start": "691320",
    "end": "693000"
  },
  {
    "text": "that required glibsy",
    "start": "693000",
    "end": "695160"
  },
  {
    "text": "Classic this is like such a classic as a",
    "start": "695160",
    "end": "697800"
  },
  {
    "text": "result we just had to compile turbo repo",
    "start": "697800",
    "end": "699420"
  },
  {
    "text": "as a fully static binary this meant we",
    "start": "699420",
    "end": "701220"
  },
  {
    "text": "packaged our own C standard Library",
    "start": "701220",
    "end": "702600"
  },
  {
    "text": "implementation using muscle",
    "start": "702600",
    "end": "704540"
  },
  {
    "text": "uh you can't a statically link uh glibsy",
    "start": "704540",
    "end": "708720"
  },
  {
    "text": "due to licensing issue beautiful",
    "start": "708720",
    "end": "711240"
  },
  {
    "text": "licensing isn't licensing just the best",
    "start": "711240",
    "end": "714120"
  },
  {
    "text": "isn't just licensing just the best like",
    "start": "714120",
    "end": "717180"
  },
  {
    "text": "to me if this is a thing that's",
    "start": "717180",
    "end": "719220"
  },
  {
    "text": "available it just seems like your",
    "start": "719220",
    "end": "721079"
  },
  {
    "text": "licensing sucks uh this seems to work",
    "start": "721079",
    "end": "723480"
  },
  {
    "text": "just fine for both rust and go is it",
    "start": "723480",
    "end": "725880"
  },
  {
    "text": "because glpsy is like uh under the",
    "start": "725880",
    "end": "728399"
  },
  {
    "text": "license that requires you to also do the",
    "start": "728399",
    "end": "730860"
  },
  {
    "text": "same licensing for your project isn't",
    "start": "730860",
    "end": "732720"
  },
  {
    "text": "that like the required well not all open",
    "start": "732720",
    "end": "734100"
  },
  {
    "text": "source is open source you know what I",
    "start": "734100",
    "end": "735540"
  },
  {
    "text": "mean some open source is like a cancer",
    "start": "735540",
    "end": "737880"
  },
  {
    "text": "and it spreads wild and fast whereas",
    "start": "737880",
    "end": "741480"
  },
  {
    "text": "others aren't like that right and so",
    "start": "741480",
    "end": "743339"
  },
  {
    "text": "this one is more like a virus type",
    "start": "743339",
    "end": "746100"
  },
  {
    "text": "acting where it's like you do if you use",
    "start": "746100",
    "end": "748560"
  },
  {
    "text": "me then you must be the same the same",
    "start": "748560",
    "end": "752040"
  },
  {
    "text": "version of Library we use right and so",
    "start": "752040",
    "end": "754440"
  },
  {
    "text": "it spreads it's like rxjs it spreads",
    "start": "754440",
    "end": "756779"
  },
  {
    "text": "spreads to the whole code base this",
    "start": "756779",
    "end": "758760"
  },
  {
    "text": "seems to work just fine for both rust",
    "start": "758760",
    "end": "760380"
  },
  {
    "text": "and go Russ lets you set the C standard",
    "start": "760380",
    "end": "762360"
  },
  {
    "text": "library in the Target okay uh versus",
    "start": "762360",
    "end": "764519"
  },
  {
    "text": "this and go does not use a c standard",
    "start": "764519",
    "end": "767040"
  },
  {
    "text": "Library by default however when we ran",
    "start": "767040",
    "end": "768660"
  },
  {
    "text": "the statically linked live binary it",
    "start": "768660",
    "end": "770880"
  },
  {
    "text": "would return a segmentation fault got",
    "start": "770880",
    "end": "773279"
  },
  {
    "text": "him even worse would be inspect it with",
    "start": "773279",
    "end": "775380"
  },
  {
    "text": "the debugger we find a corrupted stack",
    "start": "775380",
    "end": "777120"
  },
  {
    "text": "and even worse the seg fault appeared to",
    "start": "777120",
    "end": "778860"
  },
  {
    "text": "be coming from go runtime itself",
    "start": "778860",
    "end": "782480"
  },
  {
    "text": "this makes me so sad to hear all right",
    "start": "786000",
    "end": "788459"
  },
  {
    "text": "after searching we tracked down to a",
    "start": "788459",
    "end": "790620"
  },
  {
    "text": "seven-year-old GitHub issue which",
    "start": "790620",
    "end": "792300"
  },
  {
    "text": "explained that go cannot be compiled as",
    "start": "792300",
    "end": "793980"
  },
  {
    "text": "a c-static library with muscle uh this",
    "start": "793980",
    "end": "796320"
  },
  {
    "text": "post a significant challenge as Alpine",
    "start": "796320",
    "end": "797940"
  },
  {
    "text": "Linux is essentially essential platform",
    "start": "797940",
    "end": "799920"
  },
  {
    "text": "for Turbo repo and its users we had to",
    "start": "799920",
    "end": "802019"
  },
  {
    "text": "go back to the drawing board and figure",
    "start": "802019",
    "end": "803220"
  },
  {
    "text": "out how we could ship our go rust",
    "start": "803220",
    "end": "805740"
  },
  {
    "text": "combination eventually after a ton of",
    "start": "805740",
    "end": "807839"
  },
  {
    "text": "deliberation we came up with a solution",
    "start": "807839",
    "end": "809160"
  },
  {
    "text": "we'd compile our go code and our rust",
    "start": "809160",
    "end": "811200"
  },
  {
    "text": "code as two separate binaries the rust",
    "start": "811200",
    "end": "812880"
  },
  {
    "text": "code would call the go code and pass the",
    "start": "812880",
    "end": "814560"
  },
  {
    "text": "ARG serialized to Jason via the CLI I",
    "start": "814560",
    "end": "818040"
  },
  {
    "text": "feel like did I not say did I not did I",
    "start": "818040",
    "end": "820680"
  },
  {
    "text": "not say a little IPC",
    "start": "820680",
    "end": "822360"
  },
  {
    "text": "did I not say a little in and out give",
    "start": "822360",
    "end": "824940"
  },
  {
    "text": "it the old in and out it called it",
    "start": "824940",
    "end": "828420"
  },
  {
    "text": "uh it's not terrible it's actually not a",
    "start": "828420",
    "end": "831120"
  },
  {
    "text": "bad idea okay I know this may seem hard",
    "start": "831120",
    "end": "834060"
  },
  {
    "text": "but honestly when you're doing when",
    "start": "834060",
    "end": "836519"
  },
  {
    "text": "you're doing Roman writing like this",
    "start": "836519",
    "end": "838079"
  },
  {
    "text": "where you're kind of writing two",
    "start": "838079",
    "end": "839220"
  },
  {
    "text": "different environments just make it",
    "start": "839220",
    "end": "841320"
  },
  {
    "text": "simple do the thing because you know",
    "start": "841320",
    "end": "843420"
  },
  {
    "text": "that one part of this is gonna go away",
    "start": "843420",
    "end": "845279"
  },
  {
    "text": "forever",
    "start": "845279",
    "end": "846420"
  },
  {
    "text": "you know what I mean",
    "start": "846420",
    "end": "848880"
  },
  {
    "text": "we knew that the args were small enough",
    "start": "848880",
    "end": "850680"
  },
  {
    "text": "that they could be passed by a CLI",
    "start": "850680",
    "end": "852180"
  },
  {
    "text": "without too much of the performance hit",
    "start": "852180",
    "end": "853560"
  },
  {
    "text": "and because we were using a",
    "start": "853560",
    "end": "854700"
  },
  {
    "text": "serialization format the code changes",
    "start": "854700",
    "end": "856200"
  },
  {
    "text": "were extremely small all we had to do",
    "start": "856200",
    "end": "858120"
  },
  {
    "text": "was change how rust was sending the jeze",
    "start": "858120",
    "end": "860040"
  },
  {
    "text": "on string to go with that we are able to",
    "start": "860040",
    "end": "862260"
  },
  {
    "text": "get our first hybrid uh go rust release",
    "start": "862260",
    "end": "864540"
  },
  {
    "text": "out the door the first version of Turbo",
    "start": "864540",
    "end": "866339"
  },
  {
    "text": "was shipped to you using these",
    "start": "866339",
    "end": "868440"
  },
  {
    "text": "compilation strategies version one seven",
    "start": "868440",
    "end": "870600"
  },
  {
    "text": "zero what we learned uh though this F",
    "start": "870600",
    "end": "873240"
  },
  {
    "text": "let's see though this effort we or",
    "start": "873240",
    "end": "875040"
  },
  {
    "text": "through this effort we learned a lot",
    "start": "875040",
    "end": "877320"
  },
  {
    "text": "about moving from one language to",
    "start": "877320",
    "end": "878579"
  },
  {
    "text": "another let's take note of what we found",
    "start": "878579",
    "end": "879980"
  },
  {
    "text": "serialization is useful for ffi our",
    "start": "879980",
    "end": "883079"
  },
  {
    "text": "first takeaway is that serialization",
    "start": "883079",
    "end": "884519"
  },
  {
    "text": "formats are very useful for",
    "start": "884519",
    "end": "885720"
  },
  {
    "text": "interoperability by serializing the Json",
    "start": "885720",
    "end": "887519"
  },
  {
    "text": "a format with robust support in both go",
    "start": "887519",
    "end": "889620"
  },
  {
    "text": "and Russ we were able to minimize our",
    "start": "889620",
    "end": "891240"
  },
  {
    "text": "ffi surface area and avoid having a",
    "start": "891240",
    "end": "892980"
  },
  {
    "text": "whole uh class of cross-platform issues",
    "start": "892980",
    "end": "895320"
  },
  {
    "text": "so one thing I would have done",
    "start": "895320",
    "end": "896459"
  },
  {
    "text": "differently than they did is I would not",
    "start": "896459",
    "end": "898320"
  },
  {
    "text": "have used Json I would have used",
    "start": "898320",
    "end": "899639"
  },
  {
    "text": "something like protobufs and the reason",
    "start": "899639",
    "end": "900899"
  },
  {
    "text": "why I would have used protobufs is that",
    "start": "900899",
    "end": "902339"
  },
  {
    "text": "protobufs would have provided a",
    "start": "902339",
    "end": "904079"
  },
  {
    "text": "universal",
    "start": "904079",
    "end": "905760"
  },
  {
    "text": "um serialization format and deserializer",
    "start": "905760",
    "end": "908339"
  },
  {
    "text": "serializer and so you kind of get one",
    "start": "908339",
    "end": "911220"
  },
  {
    "text": "place to Define your types and then your",
    "start": "911220",
    "end": "913440"
  },
  {
    "text": "types are defined for both programs you",
    "start": "913440",
    "end": "915180"
  },
  {
    "text": "don't have any of this like moving",
    "start": "915180",
    "end": "916680"
  },
  {
    "text": "Target type nonsense I I",
    "start": "916680",
    "end": "921560"
  },
  {
    "text": "like you know what I mean",
    "start": "922279",
    "end": "924720"
  },
  {
    "text": "that's just something that I I fully I'm",
    "start": "924720",
    "end": "926820"
  },
  {
    "text": "like fully on board with is always",
    "start": "926820",
    "end": "930500"
  },
  {
    "text": "if you have two different platforms",
    "start": "930500",
    "end": "932820"
  },
  {
    "text": "you're using use a common type",
    "start": "932820",
    "end": "934920"
  },
  {
    "text": "definition you know what I mean",
    "start": "934920",
    "end": "937199"
  },
  {
    "text": "the moving Target issue yeah exactly",
    "start": "937199",
    "end": "939180"
  },
  {
    "text": "cross-language bugs uh when we had to",
    "start": "939180",
    "end": "941040"
  },
  {
    "text": "switch from single linked binary to two",
    "start": "941040",
    "end": "942899"
  },
  {
    "text": "binaries we were able to do so with",
    "start": "942899",
    "end": "944220"
  },
  {
    "text": "relative ease because of our ffi surface",
    "start": "944220",
    "end": "946260"
  },
  {
    "text": "area was so small",
    "start": "946260",
    "end": "947880"
  },
  {
    "text": "okay um I I would say that I just I I",
    "start": "947880",
    "end": "950880"
  },
  {
    "text": "don't know if I agree with this because",
    "start": "950880",
    "end": "952320"
  },
  {
    "text": "I haven't done enough ffi to have a",
    "start": "952320",
    "end": "953880"
  },
  {
    "text": "strong opinion about it but it seems",
    "start": "953880",
    "end": "955740"
  },
  {
    "text": "like you were doomed before you started",
    "start": "955740",
    "end": "959100"
  },
  {
    "text": "and I think you had some odd ffi stuff",
    "start": "959100",
    "end": "961320"
  },
  {
    "text": "because you were dipping into C to call",
    "start": "961320",
    "end": "962880"
  },
  {
    "text": "from rust to go I feel like something",
    "start": "962880",
    "end": "964560"
  },
  {
    "text": "was wrong there just just like in",
    "start": "964560",
    "end": "967139"
  },
  {
    "text": "general I'm not really sure what was",
    "start": "967139",
    "end": "968399"
  },
  {
    "text": "happening but I just the engineers at",
    "start": "968399",
    "end": "970620"
  },
  {
    "text": "Purcell are very very smart so I'm just",
    "start": "970620",
    "end": "972120"
  },
  {
    "text": "gonna assume whatever was the reasoning",
    "start": "972120",
    "end": "973560"
  },
  {
    "text": "it was it was the correct reason right",
    "start": "973560",
    "end": "976279"
  },
  {
    "text": "uh protobufs worked fine between rest",
    "start": "976279",
    "end": "978660"
  },
  {
    "text": "and go exactly uh the trade-off here is",
    "start": "978660",
    "end": "981600"
  },
  {
    "text": "that is that serialization and",
    "start": "981600",
    "end": "983040"
  },
  {
    "text": "deserialization is slow you can only",
    "start": "983040",
    "end": "984600"
  },
  {
    "text": "depend on this technique if either you",
    "start": "984600",
    "end": "986399"
  },
  {
    "text": "know your serial serialized payloads",
    "start": "986399",
    "end": "988560"
  },
  {
    "text": "will be small or you don't care about",
    "start": "988560",
    "end": "990240"
  },
  {
    "text": "the performance hit to your use case",
    "start": "990240",
    "end": "992639"
  },
  {
    "text": "yeah",
    "start": "992639",
    "end": "994019"
  },
  {
    "text": "um porting takes preparation the second",
    "start": "994019",
    "end": "996300"
  },
  {
    "text": "takeaway is that incremental porting is",
    "start": "996300",
    "end": "997800"
  },
  {
    "text": "feasible but requires a lot of careful",
    "start": "997800",
    "end": "999240"
  },
  {
    "text": "testing and strategizing agreed uh we",
    "start": "999240",
    "end": "1001579"
  },
  {
    "text": "ran into quite a few tricky bugs and we",
    "start": "1001579",
    "end": "1003199"
  },
  {
    "text": "caught these issues through a lot of",
    "start": "1003199",
    "end": "1004399"
  },
  {
    "text": "automated and manual testing right here",
    "start": "1004399",
    "end": "1006440"
  },
  {
    "text": "okay check out their testing testing is",
    "start": "1006440",
    "end": "1008480"
  },
  {
    "text": "also extremely important for nailing",
    "start": "1008480",
    "end": "1010040"
  },
  {
    "text": "down the behavior of your code whether",
    "start": "1010040",
    "end": "1011540"
  },
  {
    "text": "it's an exact Edge case of CLI parsing",
    "start": "1011540",
    "end": "1013579"
  },
  {
    "text": "or the order in which configuration is",
    "start": "1013579",
    "end": "1015920"
  },
  {
    "text": "loaded these exact details are not so",
    "start": "1015920",
    "end": "1018139"
  },
  {
    "text": "crucial when you're writing your first",
    "start": "1018139",
    "end": "1019519"
  },
  {
    "text": "implementation but they're absolutely",
    "start": "1019519",
    "end": "1021500"
  },
  {
    "text": "Paramount to avoid breaking changes",
    "start": "1021500",
    "end": "1023120"
  },
  {
    "text": "during port or rewrite you should aim to",
    "start": "1023120",
    "end": "1025400"
  },
  {
    "text": "write tests before you start reporting",
    "start": "1025400",
    "end": "1027918"
  },
  {
    "text": "your code so you have a known",
    "start": "1027919",
    "end": "1029178"
  },
  {
    "text": "specifications to work against okay so I",
    "start": "1029179",
    "end": "1031280"
  },
  {
    "text": "would say this is the one time where I",
    "start": "1031280",
    "end": "1033199"
  },
  {
    "text": "would agree with like tests before code",
    "start": "1033199",
    "end": "1035720"
  },
  {
    "text": "and the reason why I say that is because",
    "start": "1035720",
    "end": "1037819"
  },
  {
    "text": "you already have a working version right",
    "start": "1037819",
    "end": "1040160"
  },
  {
    "text": "you've already figured it out and so to",
    "start": "1040160",
    "end": "1042438"
  },
  {
    "text": "me this makes more sense but I would",
    "start": "1042439",
    "end": "1046339"
  },
  {
    "text": "no actually I disagree with it now that",
    "start": "1046339",
    "end": "1048020"
  },
  {
    "text": "I'm arguing this to myself out loud I",
    "start": "1048020",
    "end": "1050059"
  },
  {
    "text": "can already feel myself disagreeing with",
    "start": "1050059",
    "end": "1051740"
  },
  {
    "text": "this already which is that",
    "start": "1051740",
    "end": "1053660"
  },
  {
    "text": "the reason why I don't agree with this",
    "start": "1053660",
    "end": "1057760"
  },
  {
    "text": "is that when you're rewriting in a",
    "start": "1058820",
    "end": "1061039"
  },
  {
    "text": "different language your structure and",
    "start": "1061039",
    "end": "1062419"
  },
  {
    "text": "how you're doing it is so much different",
    "start": "1062419",
    "end": "1063980"
  },
  {
    "text": "and what you don't want to do is mirror",
    "start": "1063980",
    "end": "1066500"
  },
  {
    "text": "your current code base into a new",
    "start": "1066500",
    "end": "1068240"
  },
  {
    "text": "language you want to write it with the",
    "start": "1068240",
    "end": "1069799"
  },
  {
    "text": "idioms the canonicalization of that",
    "start": "1069799",
    "end": "1072980"
  },
  {
    "text": "language not the language you're using",
    "start": "1072980",
    "end": "1074840"
  },
  {
    "text": "and so if you don't",
    "start": "1074840",
    "end": "1076640"
  },
  {
    "text": "if you don't if you try to write your",
    "start": "1076640",
    "end": "1078380"
  },
  {
    "text": "test beforehand you may go in with the",
    "start": "1078380",
    "end": "1080900"
  },
  {
    "text": "go knowledge of doing things versus",
    "start": "1080900",
    "end": "1082460"
  },
  {
    "text": "going in with the rust knowledge so I I",
    "start": "1082460",
    "end": "1084919"
  },
  {
    "text": "feel like I wouldn't",
    "start": "1084919",
    "end": "1087020"
  },
  {
    "text": "I feel like you're you should have a set",
    "start": "1087020",
    "end": "1089120"
  },
  {
    "text": "of uh of what's it called you should",
    "start": "1089120",
    "end": "1091340"
  },
  {
    "text": "effectively have a set of integration",
    "start": "1091340",
    "end": "1093080"
  },
  {
    "text": "end-to-end tests that you can prove work",
    "start": "1093080",
    "end": "1095059"
  },
  {
    "text": "and then your tests are already written",
    "start": "1095059",
    "end": "1096980"
  },
  {
    "text": "for this new this new one right so it's",
    "start": "1096980",
    "end": "1099380"
  },
  {
    "text": "already existing",
    "start": "1099380",
    "end": "1101240"
  },
  {
    "text": "um",
    "start": "1101240",
    "end": "1101980"
  },
  {
    "text": "that's my personal feeling right you",
    "start": "1101980",
    "end": "1104120"
  },
  {
    "text": "wouldn't want to input you wouldn't want",
    "start": "1104120",
    "end": "1105440"
  },
  {
    "text": "to test against the uh the units level",
    "start": "1105440",
    "end": "1108500"
  },
  {
    "text": "more like the end to end level",
    "start": "1108500",
    "end": "1110780"
  },
  {
    "text": "if you don't embrace the language",
    "start": "1110780",
    "end": "1112039"
  },
  {
    "text": "features why the hell are you using",
    "start": "1112039",
    "end": "1113360"
  },
  {
    "text": "rewriting anyways exactly so it's not",
    "start": "1113360",
    "end": "1114919"
  },
  {
    "text": "really tdd at that point all right cross",
    "start": "1114919",
    "end": "1117200"
  },
  {
    "text": "compatibility is difficult the third",
    "start": "1117200",
    "end": "1119000"
  },
  {
    "text": "takeaway is that cross-platform cross",
    "start": "1119000",
    "end": "1120500"
  },
  {
    "text": "language release engineering is",
    "start": "1120500",
    "end": "1121700"
  },
  {
    "text": "extremely challenging this is why I",
    "start": "1121700",
    "end": "1122960"
  },
  {
    "text": "think a lot of people default to",
    "start": "1122960",
    "end": "1123980"
  },
  {
    "text": "interpreted languages every platform",
    "start": "1123980",
    "end": "1125720"
  },
  {
    "text": "language and compile that's also why",
    "start": "1125720",
    "end": "1127220"
  },
  {
    "text": "people love go they love go because it",
    "start": "1127220",
    "end": "1129740"
  },
  {
    "text": "just seems to work everywhere it's one",
    "start": "1129740",
    "end": "1131660"
  },
  {
    "text": "of the most this is why go is just such",
    "start": "1131660",
    "end": "1133580"
  },
  {
    "text": "a popular language is that it just works",
    "start": "1133580",
    "end": "1135919"
  },
  {
    "text": "everywhere nicely every platform",
    "start": "1135919",
    "end": "1137720"
  },
  {
    "text": "language and compiler has their own",
    "start": "1137720",
    "end": "1139160"
  },
  {
    "text": "quirks that makes interoperability",
    "start": "1139160",
    "end": "1140480"
  },
  {
    "text": "difficult and more things you have",
    "start": "1140480",
    "end": "1142100"
  },
  {
    "text": "working together the more opportunities",
    "start": "1142100",
    "end": "1143419"
  },
  {
    "text": "you have for new complications porting",
    "start": "1143419",
    "end": "1145400"
  },
  {
    "text": "is worth it for us finally while porting",
    "start": "1145400",
    "end": "1147620"
  },
  {
    "text": "from go to rust has been challenging it",
    "start": "1147620",
    "end": "1149240"
  },
  {
    "text": "has been proven correct choice for us",
    "start": "1149240",
    "end": "1150860"
  },
  {
    "text": "strategically even with our porting",
    "start": "1150860",
    "end": "1152960"
  },
  {
    "text": "effort going on we've been able to ship",
    "start": "1152960",
    "end": "1154400"
  },
  {
    "text": "new features handle bugs in our existing",
    "start": "1154400",
    "end": "1156140"
  },
  {
    "text": "functionality and help keeping our users",
    "start": "1156140",
    "end": "1158299"
  },
  {
    "text": "or and keep helping our users while we",
    "start": "1158299",
    "end": "1162260"
  },
  {
    "text": "migrate it requires some extraordinary",
    "start": "1162260",
    "end": "1164299"
  },
  {
    "text": "tricky debugging careful planning and",
    "start": "1164299",
    "end": "1166039"
  },
  {
    "text": "rarest testing but we believe that it's",
    "start": "1166039",
    "end": "1167419"
  },
  {
    "text": "been worth it",
    "start": "1167419",
    "end": "1168620"
  },
  {
    "text": "try Porta turbo repo try turbo repo whoa",
    "start": "1168620",
    "end": "1171679"
  },
  {
    "text": "turbo repo saved this many hours of time",
    "start": "1171679",
    "end": "1173960"
  },
  {
    "text": "for the product engineers and CI",
    "start": "1173960",
    "end": "1175580"
  },
  {
    "text": "machines at for sale nice",
    "start": "1175580",
    "end": "1178460"
  },
  {
    "text": "that's a lot of hours that's a lot",
    "start": "1178460",
    "end": "1180200"
  },
  {
    "text": "that's a lot of hours even if it only",
    "start": "1180200",
    "end": "1182120"
  },
  {
    "text": "equates to five seconds per build fine",
    "start": "1182120",
    "end": "1184160"
  },
  {
    "text": "like when you have a build that goes",
    "start": "1184160",
    "end": "1185780"
  },
  {
    "text": "from three seconds to 10 seconds like",
    "start": "1185780",
    "end": "1188539"
  },
  {
    "text": "there is this point in time that's like",
    "start": "1188539",
    "end": "1190460"
  },
  {
    "text": "the I just accidentally went on Twitter",
    "start": "1190460",
    "end": "1192500"
  },
  {
    "text": "time you know what I mean there's the I",
    "start": "1192500",
    "end": "1194900"
  },
  {
    "text": "accidentally went on Twitter time and",
    "start": "1194900",
    "end": "1196640"
  },
  {
    "text": "that happens at around like what 15",
    "start": "1196640",
    "end": "1198440"
  },
  {
    "text": "seconds",
    "start": "1198440",
    "end": "1199700"
  },
  {
    "text": "right so I totally am like I'm totally",
    "start": "1199700",
    "end": "1202520"
  },
  {
    "text": "on board for the faster it gets",
    "start": "1202520",
    "end": "1205580"
  },
  {
    "text": "oh Anthony she was here to answer",
    "start": "1205580",
    "end": "1207500"
  },
  {
    "text": "articles about this oh Anthony I didn't",
    "start": "1207500",
    "end": "1209539"
  },
  {
    "text": "realize you're here",
    "start": "1209539",
    "end": "1210860"
  },
  {
    "text": "um I'm Gonna Keep spamming it well",
    "start": "1210860",
    "end": "1212419"
  },
  {
    "text": "awesome",
    "start": "1212419",
    "end": "1213740"
  },
  {
    "text": "I like to hear that it's 10 seconds for",
    "start": "1213740",
    "end": "1215539"
  },
  {
    "text": "a user to switch tests yeah you got to",
    "start": "1215539",
    "end": "1216860"
  },
  {
    "text": "be very careful well hey Anthony I",
    "start": "1216860",
    "end": "1218000"
  },
  {
    "text": "didn't even really uh stay tuned for the",
    "start": "1218000",
    "end": "1219320"
  },
  {
    "text": "next article rewriting turbo repo and",
    "start": "1219320",
    "end": "1220940"
  },
  {
    "text": "CSS now that's the article we want",
    "start": "1220940",
    "end": "1223940"
  },
  {
    "text": "Anthony",
    "start": "1223940",
    "end": "1225500"
  },
  {
    "text": "that's the article um this is great",
    "start": "1225500",
    "end": "1227780"
  },
  {
    "text": "Mastodon oh gosh no",
    "start": "1227780",
    "end": "1230780"
  },
  {
    "text": "this is not even a part of it I needed",
    "start": "1230780",
    "end": "1232400"
  },
  {
    "text": "another Mastodon server because",
    "start": "1232400",
    "end": "1233480"
  },
  {
    "text": "apparently having interviewed at the NSA",
    "start": "1233480",
    "end": "1236000"
  },
  {
    "text": "13 years ago when I was an undergraduate",
    "start": "1236000",
    "end": "1238100"
  },
  {
    "text": "means I'm banned from programming",
    "start": "1238100",
    "end": "1239360"
  },
  {
    "text": "languages server fediverse are you okay",
    "start": "1239360",
    "end": "1241360"
  },
  {
    "text": "people use massdot Twitter's just read",
    "start": "1241360",
    "end": "1244400"
  },
  {
    "text": "by a bunch of power hungry billionaires",
    "start": "1244400",
    "end": "1247059"
  },
  {
    "text": "Mastodon also",
    "start": "1247059",
    "end": "1249940"
  },
  {
    "text": "it's just like okay",
    "start": "1249940",
    "end": "1253340"
  },
  {
    "text": "what kind of bargain are you getting it",
    "start": "1253340",
    "end": "1257679"
  },
  {
    "text": "why",
    "start": "1258860",
    "end": "1260179"
  },
  {
    "text": "why",
    "start": "1260179",
    "end": "1262240"
  },
  {
    "text": "I love Reddit mods if I could have",
    "start": "1267700",
    "end": "1270080"
  },
  {
    "text": "anything in my life it would be Reddit",
    "start": "1270080",
    "end": "1273020"
  },
  {
    "text": "mods running my social media site like",
    "start": "1273020",
    "end": "1275600"
  },
  {
    "text": "that's what I've always wanted in life",
    "start": "1275600",
    "end": "1276919"
  },
  {
    "text": "you should read the image you can no",
    "start": "1276919",
    "end": "1278780"
  },
  {
    "text": "longer use your account and your profile",
    "start": "1278780",
    "end": "1280400"
  },
  {
    "text": "and other data are no longer accessible",
    "start": "1280400",
    "end": "1281960"
  },
  {
    "text": "you can still log in to request a backup",
    "start": "1281960",
    "end": "1284299"
  },
  {
    "text": "of your data until the data is fully",
    "start": "1284299",
    "end": "1285980"
  },
  {
    "text": "removed in about 30 days we will retain",
    "start": "1285980",
    "end": "1287900"
  },
  {
    "text": "some basic data to prevent you from",
    "start": "1287900",
    "end": "1289400"
  },
  {
    "text": "evading this uh suspension uh don't work",
    "start": "1289400",
    "end": "1292460"
  },
  {
    "text": "for the NSA do not work for the [ __ ]",
    "start": "1292460",
    "end": "1294440"
  },
  {
    "text": "NSA do not interview for the NSA do not",
    "start": "1294440",
    "end": "1296840"
  },
  {
    "text": "entertain the possibility of working for",
    "start": "1296840",
    "end": "1298340"
  },
  {
    "text": "the NSA I thought you were cool double",
    "start": "1298340",
    "end": "1300320"
  },
  {
    "text": "exclamation point I saw you on PL",
    "start": "1300320",
    "end": "1303020"
  },
  {
    "text": "Twitter and thought you were a neat",
    "start": "1303020",
    "end": "1304880"
  },
  {
    "text": "person why would you work for the effing",
    "start": "1304880",
    "end": "1306799"
  },
  {
    "text": "NSA again why would you want a Reddit",
    "start": "1306799",
    "end": "1309200"
  },
  {
    "text": "mod controlling your social media site",
    "start": "1309200",
    "end": "1311480"
  },
  {
    "text": "just letting you know why would you want",
    "start": "1311480",
    "end": "1313820"
  },
  {
    "text": "that every time I think Twitter couldn't",
    "start": "1313820",
    "end": "1315679"
  },
  {
    "text": "get any worse I literally read this and",
    "start": "1315679",
    "end": "1319220"
  },
  {
    "text": "go oh yeah Twitter's pretty pretty",
    "start": "1319220",
    "end": "1321140"
  },
  {
    "text": "freaking awesome",
    "start": "1321140",
    "end": "1323860"
  }
]