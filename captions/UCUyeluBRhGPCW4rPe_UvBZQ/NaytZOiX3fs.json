[
  {
    "text": "okay so I did see this tweet I saw this",
    "start": "199",
    "end": "2240"
  },
  {
    "text": "tweet right I saw this thing right here",
    "start": "2240",
    "end": "4560"
  },
  {
    "text": "where it's just like you you don't use",
    "start": "4560",
    "end": "6279"
  },
  {
    "text": "10% of your brain do I use this and so",
    "start": "6279",
    "end": "8200"
  },
  {
    "text": "bend is apparently a simple a simple",
    "start": "8200",
    "end": "10000"
  },
  {
    "text": "language that allows you to write feels",
    "start": "10000",
    "end": "12040"
  },
  {
    "text": "like python but also scales like uh like",
    "start": "12040",
    "end": "14320"
  },
  {
    "text": "Cuda uh need a sorting Network just",
    "start": "14320",
    "end": "16600"
  },
  {
    "text": "write a function Vim sort. Bend sorting",
    "start": "16600",
    "end": "19279"
  },
  {
    "text": "Network oh gosh come on let me see it",
    "start": "19279",
    "end": "21680"
  },
  {
    "text": "need a fragment just write a function I",
    "start": "21680",
    "end": "23480"
  },
  {
    "text": "wish I could pause this let's look at",
    "start": "23480",
    "end": "25119"
  },
  {
    "text": "this for a second because this looks",
    "start": "25119",
    "end": "26279"
  },
  {
    "text": "pretty cool all right so let's see def",
    "start": "26279",
    "end": "28960"
  },
  {
    "text": "sort tree this this this and this rots I",
    "start": "28960",
    "end": "32040"
  },
  {
    "text": "don't know what rots are hold on hold on",
    "start": "32040",
    "end": "34160"
  },
  {
    "text": "hold on DS okay damn it it looks like",
    "start": "34160",
    "end": "37280"
  },
  {
    "text": "python which means there's no type so I",
    "start": "37280",
    "end": "38600"
  },
  {
    "text": "have no clue what the hell's going on",
    "start": "38600",
    "end": "40160"
  },
  {
    "text": "here D is zero that must be depth which",
    "start": "40160",
    "end": "42600"
  },
  {
    "text": "is the tree sorting Network equals just",
    "start": "42600",
    "end": "45079"
  },
  {
    "text": "rotate trees okay okay tree equals XY so",
    "start": "45079",
    "end": "49000"
  },
  {
    "text": "that must be left and right so this is a",
    "start": "49000",
    "end": "50559"
  },
  {
    "text": "binary tree uh left is sort depth minus",
    "start": "50559",
    "end": "54480"
  },
  {
    "text": "one okay so we're starting from the",
    "start": "54480",
    "end": "55719"
  },
  {
    "text": "bottom uh with x s is zero I don't know",
    "start": "55719",
    "end": "59000"
  },
  {
    "text": "what s is where is s even used here oh s",
    "start": "59000",
    "end": "63079"
  },
  {
    "text": "must be is used in this R in this rots",
    "start": "63079",
    "end": "66320"
  },
  {
    "text": "right is D minus one okay I don't really",
    "start": "66320",
    "end": "68119"
  },
  {
    "text": "I don't quite honestly to tell you the",
    "start": "68119",
    "end": "69960"
  },
  {
    "text": "truth I don't really get it I don't I",
    "start": "69960",
    "end": "71560"
  },
  {
    "text": "don't really get this function there's",
    "start": "71560",
    "end": "73000"
  },
  {
    "text": "like a warp a down I I I don't know what",
    "start": "73000",
    "end": "76159"
  },
  {
    "text": "we're doing here uh rotate so this must",
    "start": "76159",
    "end": "78119"
  },
  {
    "text": "be a well-known algorithm that I just",
    "start": "78119",
    "end": "79439"
  },
  {
    "text": "don't that I don't I know but I just",
    "start": "79439",
    "end": "81079"
  },
  {
    "text": "don't get it okay well it sounds cool I",
    "start": "81079",
    "end": "83360"
  },
  {
    "text": "just don't know how how would you",
    "start": "83360",
    "end": "84280"
  },
  {
    "text": "parallelize this that's my question is",
    "start": "84280",
    "end": "86840"
  },
  {
    "text": "how is this parallelized that's what I",
    "start": "86840",
    "end": "88799"
  },
  {
    "text": "want to go find out and so let's see if",
    "start": "88799",
    "end": "90840"
  },
  {
    "text": "this let's see if this thing does it",
    "start": "90840",
    "end": "91960"
  },
  {
    "text": "because there is a fireship video which",
    "start": "91960",
    "end": "93079"
  },
  {
    "text": "we'll look at here shortly but I want to",
    "start": "93079",
    "end": "94520"
  },
  {
    "text": "know can I understand this from this",
    "start": "94520",
    "end": "96439"
  },
  {
    "text": "perspective shaders are always just",
    "start": "96439",
    "end": "98200"
  },
  {
    "text": "shaders have always just been magic to",
    "start": "98200",
    "end": "99960"
  },
  {
    "text": "me there you go here's a bunch of math",
    "start": "99960",
    "end": "102399"
  },
  {
    "text": "you do it on a per pixel basis right",
    "start": "102399",
    "end": "104600"
  },
  {
    "text": "dude I I've never understand create a",
    "start": "104600",
    "end": "106040"
  },
  {
    "text": "pixel tree why is everything a tree are",
    "start": "106040",
    "end": "107880"
  },
  {
    "text": "pixels trees create a pixel tree uh Bend",
    "start": "107880",
    "end": "110719"
  },
  {
    "text": "D equals zero and I oh is Bend where",
    "start": "110719",
    "end": "113799"
  },
  {
    "text": "okay is that is that how you say hey",
    "start": "113799",
    "end": "115320"
  },
  {
    "text": "this thing is going to be a color go",
    "start": "115320",
    "end": "118240"
  },
  {
    "text": "okay I don't know what go does and it I",
    "start": "118240",
    "end": "120039"
  },
  {
    "text": "think it has a a definition of go so we",
    "start": "120039",
    "end": "122119"
  },
  {
    "text": "don't know what go does need a fast map",
    "start": "122119",
    "end": "124399"
  },
  {
    "text": "reduce just write a function okay I I",
    "start": "124399",
    "end": "126719"
  },
  {
    "text": "mean I love this idea by the way that",
    "start": "126719",
    "end": "128399"
  },
  {
    "text": "you can just go Lambda do this this one",
    "start": "128399",
    "end": "130440"
  },
  {
    "text": "map red Bam Bam Bam and you just go and",
    "start": "130440",
    "end": "132879"
  },
  {
    "text": "it just does it and it it it makes it",
    "start": "132879",
    "end": "134720"
  },
  {
    "text": "multi-threaded I just don't how does it",
    "start": "134720",
    "end": "137040"
  },
  {
    "text": "do mutations cuz that original tree one",
    "start": "137040",
    "end": "138879"
  },
  {
    "text": "does a tree sorting how does it do",
    "start": "138879",
    "end": "140640"
  },
  {
    "text": "mutations I don't understand that",
    "start": "140640",
    "end": "142760"
  },
  {
    "text": "interesting okay let's go back to let's",
    "start": "142760",
    "end": "144519"
  },
  {
    "text": "let's go back to the GitHub repo and um",
    "start": "144519",
    "end": "148200"
  },
  {
    "text": "because I mean honestly this feels like",
    "start": "148200",
    "end": "149519"
  },
  {
    "text": "V you know what I mean this feels too",
    "start": "149519",
    "end": "151480"
  },
  {
    "text": "good to be true I don't know if you've",
    "start": "151480",
    "end": "153080"
  },
  {
    "text": "ever seen this but whenever I see this",
    "start": "153080",
    "end": "154560"
  },
  {
    "text": "things it always just feels too good to",
    "start": "154560",
    "end": "156040"
  },
  {
    "text": "be true so I just feel like it's a lie",
    "start": "156040",
    "end": "157840"
  },
  {
    "text": "I'm sure that's just me being jaded",
    "start": "157840",
    "end": "159480"
  },
  {
    "text": "right because here here's the thing that",
    "start": "159480",
    "end": "161360"
  },
  {
    "text": "I don't understand is how did they make",
    "start": "161360",
    "end": "162840"
  },
  {
    "text": "it so whoever made this language how did",
    "start": "162840",
    "end": "165200"
  },
  {
    "text": "you make it so simple to be massively",
    "start": "165200",
    "end": "168159"
  },
  {
    "text": "parallel with mutations especially when",
    "start": "168159",
    "end": "170879"
  },
  {
    "text": "something like Mojo is trying to do the",
    "start": "170879",
    "end": "172280"
  },
  {
    "text": "same thing it's totally real okay it's",
    "start": "172280",
    "end": "174440"
  },
  {
    "text": "totally real right like Mojo's",
    "start": "174440",
    "end": "176080"
  },
  {
    "text": "attempting to do the same thing a",
    "start": "176080",
    "end": "177519"
  },
  {
    "text": "Fearless parallelism I know I fear fear",
    "start": "177519",
    "end": "180000"
  },
  {
    "text": "parallelism okay I fear it Mojo is",
    "start": "180000",
    "end": "182920"
  },
  {
    "text": "different though well I know Mojo of",
    "start": "182920",
    "end": "184519"
  },
  {
    "text": "course Mojo is different but Mojo is",
    "start": "184519",
    "end": "185799"
  },
  {
    "text": "attempting to make python fast as well I",
    "start": "185799",
    "end": "188440"
  },
  {
    "text": "know don't worry we like to look at the",
    "start": "188440",
    "end": "190720"
  },
  {
    "text": "GitHub thing okay it it makes it more",
    "start": "190720",
    "end": "192879"
  },
  {
    "text": "fun to start with the GitHub thing and",
    "start": "192879",
    "end": "194519"
  },
  {
    "text": "like and and and read about it and and",
    "start": "194519",
    "end": "196560"
  },
  {
    "text": "have an idea going into it you know what",
    "start": "196560",
    "end": "198440"
  },
  {
    "text": "I mean um so it must be things that run",
    "start": "198440",
    "end": "201440"
  },
  {
    "text": "on the cudas right uh if you want to use",
    "start": "201440",
    "end": "203560"
  },
  {
    "text": "the C runtime install the C compiler",
    "start": "203560",
    "end": "205440"
  },
  {
    "text": "okay if you want to use the Cuda runtime",
    "start": "205440",
    "end": "207000"
  },
  {
    "text": "install the Cuda toolkit uh all right",
    "start": "207000",
    "end": "209519"
  },
  {
    "text": "all right then install both hvm 2 and",
    "start": "209519",
    "end": "212319"
  },
  {
    "text": "bend with this one okay cargo nice okay",
    "start": "212319",
    "end": "214840"
  },
  {
    "text": "nice rust mentioned rust mentioned uh",
    "start": "214840",
    "end": "218120"
  },
  {
    "text": "then finally write some Bend files okay",
    "start": "218120",
    "end": "221200"
  },
  {
    "text": "uses the rust interpreter wait",
    "start": "221200",
    "end": "224280"
  },
  {
    "text": "what wait what uses the C interpreter",
    "start": "224280",
    "end": "227480"
  },
  {
    "text": "parallel uses the uh Cuda interpreter",
    "start": "227480",
    "end": "230080"
  },
  {
    "text": "massively parallel okay interesting",
    "start": "230080",
    "end": "232200"
  },
  {
    "text": "interesting you can also compile Bend",
    "start": "232200",
    "end": "234519"
  },
  {
    "text": "Standalone C Cuda files into gen C and",
    "start": "234519",
    "end": "236879"
  },
  {
    "text": "gen Cuda uh for maximum performance but",
    "start": "236879",
    "end": "239120"
  },
  {
    "text": "keep in mind our code gen is still in",
    "start": "239120",
    "end": "241200"
  },
  {
    "text": "its infancy it's nowhere near as mature",
    "start": "241200",
    "end": "243120"
  },
  {
    "text": "as so these nuts compilers like GCC and",
    "start": "243120",
    "end": "245840"
  },
  {
    "text": "GHC interesting interesting interesting",
    "start": "245840",
    "end": "248879"
  },
  {
    "text": "all right let's read about this parallel",
    "start": "248879",
    "end": "250400"
  },
  {
    "text": "programming and bend to write a parallel",
    "start": "250400",
    "end": "251799"
  },
  {
    "text": "program and bend all you have to do is",
    "start": "251799",
    "end": "253120"
  },
  {
    "text": "nothing other than making it inherently",
    "start": "253120",
    "end": "255120"
  },
  {
    "text": "sequential for",
    "start": "255120",
    "end": "257400"
  },
  {
    "text": "example let's see cannot run in parallel",
    "start": "257400",
    "end": "259519"
  },
  {
    "text": "because four depends on three which",
    "start": "259519",
    "end": "260680"
  },
  {
    "text": "depends on two yes uh let's see can run",
    "start": "260680",
    "end": "264280"
  },
  {
    "text": "in parallel and that can run in parallel",
    "start": "264280",
    "end": "265840"
  },
  {
    "text": "are independent and it will per B's",
    "start": "265840",
    "end": "268040"
  },
  {
    "text": "fundamental pledge",
    "start": "268040",
    "end": "270520"
  },
  {
    "text": "everything that can run in parallel will",
    "start": "270520",
    "end": "272080"
  },
  {
    "text": "run in parallel interesting okay okay",
    "start": "272080",
    "end": "275360"
  },
  {
    "text": "let's look at the tree example there we",
    "start": "275360",
    "end": "276600"
  },
  {
    "text": "go for a more complete example here's",
    "start": "276600",
    "end": "278720"
  },
  {
    "text": "that tree thing which I just don't",
    "start": "278720",
    "end": "280520"
  },
  {
    "text": "understand this file implements the",
    "start": "280520",
    "end": "282440"
  },
  {
    "text": "batonic sorder with immutable tree",
    "start": "282440",
    "end": "284960"
  },
  {
    "text": "rotations okay so there you go so it",
    "start": "284960",
    "end": "286479"
  },
  {
    "text": "creates copies there you go that was see",
    "start": "286479",
    "end": "288560"
  },
  {
    "text": "okay that was my question was the was",
    "start": "288560",
    "end": "290680"
  },
  {
    "text": "the copy was the copy uh it is not the",
    "start": "290680",
    "end": "293560"
  },
  {
    "text": "kind of algorithm you'd expect to run",
    "start": "293560",
    "end": "295160"
  },
  {
    "text": "fast on gpus yet since it uses divide",
    "start": "295160",
    "end": "297360"
  },
  {
    "text": "and conquer approach which is inherently",
    "start": "297360",
    "end": "299039"
  },
  {
    "text": "parallel yep uh Bend will run it in",
    "start": "299039",
    "end": "301720"
  },
  {
    "text": "multi-threaded so the benchmarks 16,000",
    "start": "301720",
    "end": "305000"
  },
  {
    "text": "threads oh my goodness that's just just",
    "start": "305000",
    "end": "307160"
  },
  {
    "text": "mindboggling these nuts uh that's a 50x",
    "start": "307160",
    "end": "310240"
  },
  {
    "text": "a 57x speed up doing nothing uh no",
    "start": "310240",
    "end": "312720"
  },
  {
    "text": "thread spawning no explicit management",
    "start": "312720",
    "end": "314280"
  },
  {
    "text": "of locks mutases uh yes by the way",
    "start": "314280",
    "end": "316639"
  },
  {
    "text": "they're called mutases which should be",
    "start": "316639",
    "end": "318080"
  },
  {
    "text": "close they really should be called M",
    "start": "318080",
    "end": "319639"
  },
  {
    "text": "mutil lisks okay because you think you",
    "start": "319639",
    "end": "322960"
  },
  {
    "text": "like muisk and you know you just can't",
    "start": "322960",
    "end": "325319"
  },
  {
    "text": "have one so you got to have like",
    "start": "325319",
    "end": "326720"
  },
  {
    "text": "thousands of mutil lisks but then one",
    "start": "326720",
    "end": "329720"
  },
  {
    "text": "effing threadlock IE whatever you call",
    "start": "329720",
    "end": "332639"
  },
  {
    "text": "those Raven bombs just destroys your",
    "start": "332639",
    "end": "334800"
  },
  {
    "text": "entire your just entire fleet every",
    "start": "334800",
    "end": "337759"
  },
  {
    "text": "single time that's called why it should",
    "start": "337759",
    "end": "339759"
  },
  {
    "text": "be called the mutases this is why mutil",
    "start": "339759",
    "end": "342039"
  },
  {
    "text": "lisks mutes same thing it's a trap Learn",
    "start": "342039",
    "end": "345680"
  },
  {
    "text": "Python oh let's see what are your",
    "start": "345680",
    "end": "347720"
  },
  {
    "text": "thoughts on MDD meme driven development",
    "start": "347720",
    "end": "350039"
  },
  {
    "text": "um shockingly HTM X felt like meme",
    "start": "350039",
    "end": "352759"
  },
  {
    "text": "driven development and it actually",
    "start": "352759",
    "end": "354199"
  },
  {
    "text": "wasn't it turns out it was actually it",
    "start": "354199",
    "end": "356199"
  },
  {
    "text": "was actually it's actually just real",
    "start": "356199",
    "end": "357560"
  },
  {
    "text": "it's just real development I hate bench",
    "start": "357560",
    "end": "359759"
  },
  {
    "text": "marks generally I dislike benchmarks",
    "start": "359759",
    "end": "361440"
  },
  {
    "text": "because I don't know what any of these",
    "start": "361440",
    "end": "362440"
  },
  {
    "text": "things mean um but it's cool that it",
    "start": "362440",
    "end": "364840"
  },
  {
    "text": "like I like relative benchmarks which I",
    "start": "364840",
    "end": "367120"
  },
  {
    "text": "think is I think relative benchmarks are",
    "start": "367120",
    "end": "369160"
  },
  {
    "text": "very interesting I think absolute",
    "start": "369160",
    "end": "371160"
  },
  {
    "text": "benchmarks are stupid like I wouldn't go",
    "start": "371160",
    "end": "372880"
  },
  {
    "text": "into this thinking I'm going to get",
    "start": "372880",
    "end": "374199"
  },
  {
    "text": "something that's super fast what I can",
    "start": "374199",
    "end": "376240"
  },
  {
    "text": "say is that doing nothing other than",
    "start": "376240",
    "end": "378400"
  },
  {
    "text": "changing where you run it it just gets",
    "start": "378400",
    "end": "380880"
  },
  {
    "text": "faster because relative makes a lot of",
    "start": "380880",
    "end": "383000"
  },
  {
    "text": "sense cuz then I can I can compare this",
    "start": "383000",
    "end": "385360"
  },
  {
    "text": "against this and be like yeah that's",
    "start": "385360",
    "end": "387440"
  },
  {
    "text": "this shit's way faster though why would",
    "start": "387440",
    "end": "389880"
  },
  {
    "text": "you do uh relative benchmarks relative",
    "start": "389880",
    "end": "391759"
  },
  {
    "text": "benchmarks show that this like that long",
    "start": "391759",
    "end": "395160"
  },
  {
    "text": "as you know long as they're comparing",
    "start": "395160",
    "end": "396560"
  },
  {
    "text": "the output and proving that the output",
    "start": "396560",
    "end": "397960"
  },
  {
    "text": "is sound that you get a massive speed up",
    "start": "397960",
    "end": "400880"
  },
  {
    "text": "a practically 100x speed up by just",
    "start": "400880",
    "end": "403000"
  },
  {
    "text": "swapping over into this right so that's",
    "start": "403000",
    "end": "406759"
  },
  {
    "text": "really cool uh but a Bend isn't limited",
    "start": "406759",
    "end": "409080"
  },
  {
    "text": "to a specific Paradigm like tenters or",
    "start": "409080",
    "end": "410639"
  },
  {
    "text": "matrices any concurrent system from",
    "start": "410639",
    "end": "412240"
  },
  {
    "text": "shaders to llang actor models can be",
    "start": "412240",
    "end": "414080"
  },
  {
    "text": "emulated on Bend for example to render",
    "start": "414080",
    "end": "416360"
  },
  {
    "text": "images in real time we could simply",
    "start": "416360",
    "end": "418319"
  },
  {
    "text": "allocate any immutable Tree on each",
    "start": "418319",
    "end": "420280"
  },
  {
    "text": "frame okay so I wonder I wonder what the",
    "start": "420280",
    "end": "422440"
  },
  {
    "text": "GC is like I would like to see more on",
    "start": "422440",
    "end": "424800"
  },
  {
    "text": "the GC and how what how that runs",
    "start": "424800",
    "end": "427360"
  },
  {
    "text": "because that's I guess that's my big",
    "start": "427360",
    "end": "428879"
  },
  {
    "text": "thing is how are they doing memory",
    "start": "428879",
    "end": "430800"
  },
  {
    "text": "allocation uh it let's see it would",
    "start": "430800",
    "end": "432919"
  },
  {
    "text": "actually work even uh okay so this is",
    "start": "432919",
    "end": "435680"
  },
  {
    "text": "that that demo Shader which is pretty",
    "start": "435680",
    "end": "437639"
  },
  {
    "text": "interesting um even let's see even",
    "start": "437639",
    "end": "440000"
  },
  {
    "text": "involved algorithms uh parallelize well",
    "start": "440000",
    "end": "441960"
  },
  {
    "text": "on Bend longdistance communication is",
    "start": "441960",
    "end": "444800"
  },
  {
    "text": "performed by global beta reduction as",
    "start": "444800",
    "end": "447000"
  },
  {
    "text": "per the uh interaction calculus and",
    "start": "447000",
    "end": "448879"
  },
  {
    "text": "synchronized correct corly uh and",
    "start": "448879",
    "end": "450400"
  },
  {
    "text": "efficiently by hvm 2's Atomic Linker",
    "start": "450400",
    "end": "453560"
  },
  {
    "text": "interesting okay it is very important to",
    "start": "453560",
    "end": "455879"
  },
  {
    "text": "reinforce that while let's see that",
    "start": "455879",
    "end": "457319"
  },
  {
    "text": "while Ben does what it uh it was built",
    "start": "457319",
    "end": "459120"
  },
  {
    "text": "to scale performance with cores up to",
    "start": "459120",
    "end": "461039"
  },
  {
    "text": "10,000 concurrent threads its single",
    "start": "461039",
    "end": "462960"
  },
  {
    "text": "core performance is extremely subpar",
    "start": "462960",
    "end": "465280"
  },
  {
    "text": "okay yeah uh this is the first version",
    "start": "465280",
    "end": "467159"
  },
  {
    "text": "of the system and we haven't put much",
    "start": "467159",
    "end": "468319"
  },
  {
    "text": "effort into the proper compiler yet that",
    "start": "468319",
    "end": "469800"
  },
  {
    "text": "makes sense I think that's a good I",
    "start": "469800",
    "end": "470960"
  },
  {
    "text": "think that's a great great approach by",
    "start": "470960",
    "end": "472680"
  },
  {
    "text": "the way great approach right here um you",
    "start": "472680",
    "end": "474840"
  },
  {
    "text": "can expect the raw performance to",
    "start": "474840",
    "end": "476400"
  },
  {
    "text": "substantially improve on every release",
    "start": "476400",
    "end": "478479"
  },
  {
    "text": "uh as we work towards a proper Cod gen",
    "start": "478479",
    "end": "480479"
  },
  {
    "text": "including constellation of missing",
    "start": "480479",
    "end": "481879"
  },
  {
    "text": "optimizations yeah meanwhile you can uh",
    "start": "481879",
    "end": "484240"
  },
  {
    "text": "you can use the interpreters today to",
    "start": "484240",
    "end": "486120"
  },
  {
    "text": "have a glimpse of the massively parallel",
    "start": "486120",
    "end": "487800"
  },
  {
    "text": "programs look like from the lens of a",
    "start": "487800",
    "end": "489680"
  },
  {
    "text": "pythonic highle language this is a super",
    "start": "489680",
    "end": "492800"
  },
  {
    "text": "promising language if this is real I",
    "start": "492800",
    "end": "494879"
  },
  {
    "text": "guess there's two things we could do one",
    "start": "494879",
    "end": "496639"
  },
  {
    "text": "if if the person who is in the chat is",
    "start": "496639",
    "end": "499000"
  },
  {
    "text": "in the chat we could get whoever the",
    "start": "499000",
    "end": "500759"
  },
  {
    "text": "Creator is to give us like uh if if they",
    "start": "500759",
    "end": "502840"
  },
  {
    "text": "would like uh they could give us like a",
    "start": "502840",
    "end": "504800"
  },
  {
    "text": "a a five minute explanation of how this",
    "start": "504800",
    "end": "507360"
  },
  {
    "text": "is accomplished and all those things cuz",
    "start": "507360",
    "end": "508960"
  },
  {
    "text": "it sounds like it's all immutable so",
    "start": "508960",
    "end": "510800"
  },
  {
    "text": "it's all it it works via allocations",
    "start": "510800",
    "end": "514599"
  },
  {
    "text": "like you can do anything that's",
    "start": "514599",
    "end": "515839"
  },
  {
    "text": "parallelized uh via allocations if I'm",
    "start": "515839",
    "end": "518080"
  },
  {
    "text": "not mistaken and are the allocations are",
    "start": "518080",
    "end": "520039"
  },
  {
    "text": "they like R seed are they all stack",
    "start": "520039",
    "end": "523080"
  },
  {
    "text": "allocations for that for like the tree",
    "start": "523080",
    "end": "525160"
  },
  {
    "text": "sorder how does it work with Heap",
    "start": "525160",
    "end": "527160"
  },
  {
    "text": "allocations is it a is it a garbage",
    "start": "527160",
    "end": "529279"
  },
  {
    "text": "collection I don't know uh PR I would",
    "start": "529279",
    "end": "532000"
  },
  {
    "text": "literally never make my own language uh",
    "start": "532000",
    "end": "534519"
  },
  {
    "text": "is it hoarding memory is it a bump",
    "start": "534519",
    "end": "535920"
  },
  {
    "text": "allocator just let it go straight to the",
    "start": "535920",
    "end": "537480"
  },
  {
    "text": "universe I do not know right there's",
    "start": "537480",
    "end": "539240"
  },
  {
    "text": "like there's a lot of questions there",
    "start": "539240",
    "end": "540440"
  },
  {
    "text": "that I think it uh it mentions rendering",
    "start": "540440",
    "end": "542560"
  },
  {
    "text": "and shaders it does me it does that it",
    "start": "542560",
    "end": "545120"
  },
  {
    "text": "does do that yes okay so this was really",
    "start": "545120",
    "end": "547399"
  },
  {
    "text": "cool so let's just check out the",
    "start": "547399",
    "end": "548880"
  },
  {
    "text": "fireship bend video okay nice nice",
    "start": "548880",
    "end": "551680"
  },
  {
    "text": "yesterday the clouds opened up and a",
    "start": "551680",
    "end": "553320"
  },
  {
    "text": "weird new programming language came down",
    "start": "553320",
    "end": "554880"
  },
  {
    "text": "to earth with a promise of parallelism",
    "start": "554880",
    "end": "557079"
  },
  {
    "text": "for Alou who writeth code this is big if",
    "start": "557079",
    "end": "559600"
  },
  {
    "text": "true because parallel Computing is a",
    "start": "559600",
    "end": "561320"
  },
  {
    "text": "superpower it allows a programmer to",
    "start": "561320",
    "end": "563120"
  },
  {
    "text": "take a problem that could be solved in a",
    "start": "563120",
    "end": "564720"
  },
  {
    "text": "week and instead solve it in seven days",
    "start": "564720",
    "end": "566720"
  },
  {
    "text": "using seven different computers",
    "start": "566720",
    "end": "568320"
  },
  {
    "text": "unfortunately running",
    "start": "568320",
    "end": "571360"
  },
  {
    "text": "I mean that's typically how parallelism",
    "start": "572000",
    "end": "573720"
  },
  {
    "text": "ends up happening parallelism is",
    "start": "573720",
    "end": "575640"
  },
  {
    "text": "extremely hard that's why this language",
    "start": "575640",
    "end": "577120"
  },
  {
    "text": "is so interesting is that it is crazy to",
    "start": "577120",
    "end": "580360"
  },
  {
    "text": "think that there is something that could",
    "start": "580360",
    "end": "581959"
  },
  {
    "text": "actually solve the parallelism problem",
    "start": "581959",
    "end": "584160"
  },
  {
    "text": "right it is it is Wild is always on",
    "start": "584160",
    "end": "586560"
  },
  {
    "text": "point Banger absolute Banger meme right",
    "start": "586560",
    "end": "588720"
  },
  {
    "text": "there code in parallel is like",
    "start": "588720",
    "end": "590200"
  },
  {
    "text": "conducting a symphony one wrong note and",
    "start": "590200",
    "end": "592120"
  },
  {
    "text": "the entire thing becomes a total",
    "start": "592120",
    "end": "593560"
  },
  {
    "text": "disaster but luckily Bend offers Hope by",
    "start": "593560",
    "end": "596000"
  },
  {
    "text": "making a bold promise everything that",
    "start": "596000",
    "end": "597800"
  },
  {
    "text": "can run in parallel will run in parallel",
    "start": "597800",
    "end": "600079"
  },
  {
    "text": "you don't need to know anything about",
    "start": "600079",
    "end": "601320"
  },
  {
    "text": "Cuda blocks locks mutexes or regex's to",
    "start": "601320",
    "end": "605079"
  },
  {
    "text": "write algorithms that take advantage of",
    "start": "605079",
    "end": "606839"
  },
  {
    "text": "all 24 of your CPU cores or even all",
    "start": "606839",
    "end": "609480"
  },
  {
    "text": "16,000 of your GPU cores you just write",
    "start": "609480",
    "end": "612120"
  },
  {
    "text": "some highlevel python looking code and",
    "start": "612120",
    "end": "614200"
  },
  {
    "text": "the rest is Magic it is May 17th 2024 it",
    "start": "614200",
    "end": "617880"
  },
  {
    "text": "feels untrue that's what I mean like",
    "start": "617880",
    "end": "620519"
  },
  {
    "text": "because it just feels so amazing that",
    "start": "620519",
    "end": "622480"
  },
  {
    "text": "that that this could possibly exist it",
    "start": "622480",
    "end": "624800"
  },
  {
    "text": "feels untrue I I'm curious what the",
    "start": "624800",
    "end": "627000"
  },
  {
    "text": "rules are and how how the rules are",
    "start": "627000",
    "end": "628839"
  },
  {
    "text": "going to play I'm also curious why I",
    "start": "628839",
    "end": "631440"
  },
  {
    "text": "guess I'm not too curious why it went",
    "start": "631440",
    "end": "632880"
  },
  {
    "text": "with python style syntax it just makes",
    "start": "632880",
    "end": "635120"
  },
  {
    "text": "sense right if you're going to make a",
    "start": "635120",
    "end": "636360"
  },
  {
    "text": "language like this that you want to be",
    "start": "636360",
    "end": "637720"
  },
  {
    "text": "massively parallelized and you want it",
    "start": "637720",
    "end": "639760"
  },
  {
    "text": "to really I mean your your your target",
    "start": "639760",
    "end": "641519"
  },
  {
    "text": "is going to be machine learningdata",
    "start": "641519",
    "end": "643200"
  },
  {
    "text": "scientist and so it makes perfect sense",
    "start": "643200",
    "end": "645600"
  },
  {
    "text": "that it exists uh that it exists in this",
    "start": "645600",
    "end": "649200"
  },
  {
    "text": "python yeah I'm curious about the edge",
    "start": "649200",
    "end": "650920"
  },
  {
    "text": "cases like what breaks",
    "start": "650920",
    "end": "653279"
  },
  {
    "text": "parallelism and you're watching the code",
    "start": "653279",
    "end": "655320"
  },
  {
    "text": "report when you write code in a language",
    "start": "655320",
    "end": "656800"
  },
  {
    "text": "like python your code runs on a single",
    "start": "656800",
    "end": "658800"
  },
  {
    "text": "thread that means only one thing can",
    "start": "658800",
    "end": "660519"
  },
  {
    "text": "happen at a time it's like going to a",
    "start": "660519",
    "end": "662240"
  },
  {
    "text": "KFC with only one employee who takes the",
    "start": "662240",
    "end": "664200"
  },
  {
    "text": "order cleans the toilets and Cooks the",
    "start": "664200",
    "end": "665920"
  },
  {
    "text": "food in that order now on a modern CPU",
    "start": "665920",
    "end": "668279"
  },
  {
    "text": "you might have a clock cycle around 4",
    "start": "668279",
    "end": "670040"
  },
  {
    "text": "GHz and if it's handling one instruction",
    "start": "670040",
    "end": "672160"
  },
  {
    "text": "per cycle you're only able to perform 4",
    "start": "672160",
    "end": "674279"
  },
  {
    "text": "billion instructions per second now if",
    "start": "674279",
    "end": "676160"
  },
  {
    "text": "four Gibs is not enough you can modify",
    "start": "676160",
    "end": "679079"
  },
  {
    "text": "your python code to take advantage of",
    "start": "679079",
    "end": "680880"
  },
  {
    "text": "multiple threads but it adds a lot of",
    "start": "680880",
    "end": "682760"
  },
  {
    "text": "complexity to your code and there you",
    "start": "682760",
    "end": "684920"
  },
  {
    "text": "know the whole thread start thread joint",
    "start": "684920",
    "end": "687279"
  },
  {
    "text": "thing this is just so difficult called",
    "start": "687279",
    "end": "689959"
  },
  {
    "text": "you know I know this looks easy and",
    "start": "689959",
    "end": "691720"
  },
  {
    "text": "every why is every single multi-threaded",
    "start": "691720",
    "end": "695120"
  },
  {
    "text": "application example so simple but every",
    "start": "695120",
    "end": "697839"
  },
  {
    "text": "multi-threaded actual application is so",
    "start": "697839",
    "end": "700959"
  },
  {
    "text": "dang hard it's just it just feels it",
    "start": "700959",
    "end": "703800"
  },
  {
    "text": "feels emotionally damaging every single",
    "start": "703800",
    "end": "705920"
  },
  {
    "text": "time every single time you like but I",
    "start": "705920",
    "end": "708120"
  },
  {
    "text": "remember I still to this day remember my",
    "start": "708120",
    "end": "709760"
  },
  {
    "text": "very first four years into",
    "start": "709760",
    "end": "711120"
  },
  {
    "text": "multi-threaded programming and it always",
    "start": "711120",
    "end": "713279"
  },
  {
    "text": "felt so easy it's just like look you",
    "start": "713279",
    "end": "715160"
  },
  {
    "text": "just do this you just do this and then",
    "start": "715160",
    "end": "716639"
  },
  {
    "text": "you just join it at the end and I'm like",
    "start": "716639",
    "end": "718200"
  },
  {
    "text": "ah that seems pretty simple that seems",
    "start": "718200",
    "end": "720000"
  },
  {
    "text": "straightforward and then I actually do",
    "start": "720000",
    "end": "721760"
  },
  {
    "text": "it and I go this wasn't straightforward",
    "start": "721760",
    "end": "723320"
  },
  {
    "text": "at all and I don't know what's happening",
    "start": "723320",
    "end": "725160"
  },
  {
    "text": "and now I have a synchronize everywhere",
    "start": "725160",
    "end": "727240"
  },
  {
    "text": "in my Java code you know it's just it's",
    "start": "727240",
    "end": "729839"
  },
  {
    "text": "just it's just the worst it sounds like",
    "start": "729839",
    "end": "731480"
  },
  {
    "text": "skill issues it is skill issues because",
    "start": "731480",
    "end": "733040"
  },
  {
    "text": "it's effing hard I don't have the skills",
    "start": "733040",
    "end": "734720"
  },
  {
    "text": "to pay the bills on threads okay and",
    "start": "734720",
    "end": "736680"
  },
  {
    "text": "debugging is awful debugging is always",
    "start": "736680",
    "end": "739279"
  },
  {
    "text": "awful there's all kinds of gotas like",
    "start": "739279",
    "end": "741839"
  },
  {
    "text": "race conditions Deadlocks thread",
    "start": "741839",
    "end": "743920"
  },
  {
    "text": "starvation and I mean Deadlocks are",
    "start": "743920",
    "end": "745959"
  },
  {
    "text": "still completely available in uh in",
    "start": "745959",
    "end": "748519"
  },
  {
    "text": "async a I the rust asyn a we because",
    "start": "748519",
    "end": "751880"
  },
  {
    "text": "rust async a we is pull versus",
    "start": "751880",
    "end": "753399"
  },
  {
    "text": "javascripts push uh you you run into",
    "start": "753399",
    "end": "756600"
  },
  {
    "text": "Deadlocks because you don't know what",
    "start": "756600",
    "end": "757560"
  },
  {
    "text": "you're doing you know the worst part is",
    "start": "757560",
    "end": "759360"
  },
  {
    "text": "is in like especially in Rust if you",
    "start": "759360",
    "end": "761040"
  },
  {
    "text": "have an error that you just simply want",
    "start": "761040",
    "end": "762399"
  },
  {
    "text": "to ignore you do an under you just",
    "start": "762399",
    "end": "764839"
  },
  {
    "text": "simply assign it to underscore the",
    "start": "764839",
    "end": "767360"
  },
  {
    "text": "problem is is that as you're programming",
    "start": "767360",
    "end": "768920"
  },
  {
    "text": "and then you change the API the API to a",
    "start": "768920",
    "end": "771519"
  },
  {
    "text": "weight or to an async function and then",
    "start": "771519",
    "end": "774240"
  },
  {
    "text": "you don't realize that your underscore",
    "start": "774240",
    "end": "776279"
  },
  {
    "text": "uh assignment also will ignore async and",
    "start": "776279",
    "end": "778800"
  },
  {
    "text": "it won't give you a warning and then you",
    "start": "778800",
    "end": "780839"
  },
  {
    "text": "just explode you have no idea why and",
    "start": "780839",
    "end": "783399"
  },
  {
    "text": "you're deadlocking for days and it's",
    "start": "783399",
    "end": "785279"
  },
  {
    "text": "just like oh man oh man oh man that is",
    "start": "785279",
    "end": "788880"
  },
  {
    "text": "just there just just just the worst it's",
    "start": "788880",
    "end": "791800"
  },
  {
    "text": "just the",
    "start": "791800",
    "end": "792959"
  },
  {
    "text": "worst for those that don't understand it",
    "start": "792959",
    "end": "796040"
  },
  {
    "text": "um it's the uh uh main RS right where",
    "start": "796040",
    "end": "799680"
  },
  {
    "text": "you have something that looks like this",
    "start": "799680",
    "end": "801199"
  },
  {
    "text": "uh what is it funk main me Daddy and",
    "start": "801199",
    "end": "803600"
  },
  {
    "text": "then you have something like uh what is",
    "start": "803600",
    "end": "805040"
  },
  {
    "text": "it async uh FN uh Fu that returns a",
    "start": "805040",
    "end": "809160"
  },
  {
    "text": "result you",
    "start": "809160",
    "end": "810760"
  },
  {
    "text": "know I don't know why not there we go",
    "start": "810760",
    "end": "813880"
  },
  {
    "text": "and it does this and I don't even have",
    "start": "813880",
    "end": "815279"
  },
  {
    "text": "an LSP so I don't even know why it's",
    "start": "815279",
    "end": "817079"
  },
  {
    "text": "doing this right so we'll just go like",
    "start": "817079",
    "end": "818880"
  },
  {
    "text": "this um okay right there we go we return",
    "start": "818880",
    "end": "822360"
  },
  {
    "text": "that and you do uh",
    "start": "822360",
    "end": "825600"
  },
  {
    "text": "Fu there we go so by doing this it's",
    "start": "825839",
    "end": "828279"
  },
  {
    "text": "going to call it and it's going to just",
    "start": "828279",
    "end": "829680"
  },
  {
    "text": "simply ignore the fact that this is a",
    "start": "829680",
    "end": "831320"
  },
  {
    "text": "future and you have to you have to await",
    "start": "831320",
    "end": "834519"
  },
  {
    "text": "it if you don't await a future it it",
    "start": "834519",
    "end": "836639"
  },
  {
    "text": "don't work and so it's like that will",
    "start": "836639",
    "end": "838560"
  },
  {
    "text": "just simply ignore it and so I've had so",
    "start": "838560",
    "end": "840279"
  },
  {
    "text": "many times in my life where I was",
    "start": "840279",
    "end": "841399"
  },
  {
    "text": "programming something realized I need to",
    "start": "841399",
    "end": "843160"
  },
  {
    "text": "go to async because again every single",
    "start": "843160",
    "end": "845399"
  },
  {
    "text": "time you're in the world of async uh you",
    "start": "845399",
    "end": "847880"
  },
  {
    "text": "have this whole problem which I think we",
    "start": "847880",
    "end": "849480"
  },
  {
    "text": "all know about this whole problem but",
    "start": "849480",
    "end": "850680"
  },
  {
    "text": "just to make sure we all do we go to",
    "start": "850680",
    "end": "852279"
  },
  {
    "text": "Ryan Winchester's profile and look at",
    "start": "852279",
    "end": "854279"
  },
  {
    "text": "his pin tweet right here you have this",
    "start": "854279",
    "end": "858040"
  },
  {
    "text": "whole problem where you have all of your",
    "start": "858040",
    "end": "859759"
  },
  {
    "text": "functions come together one of them's",
    "start": "859759",
    "end": "861240"
  },
  {
    "text": "async and now you got all of them async",
    "start": "861240",
    "end": "863199"
  },
  {
    "text": "all of them become async immediately you",
    "start": "863199",
    "end": "864880"
  },
  {
    "text": "forget you've done that you've ignored",
    "start": "864880",
    "end": "866199"
  },
  {
    "text": "an error and boom you've now just",
    "start": "866199",
    "end": "867720"
  },
  {
    "text": "ignored an async call and now your acing",
    "start": "867720",
    "end": "870040"
  },
  {
    "text": "call never runs and then you're",
    "start": "870040",
    "end": "871480"
  },
  {
    "text": "emotionally bruised every single time",
    "start": "871480",
    "end": "874480"
  },
  {
    "text": "every single time oh my goodness I just",
    "start": "874480",
    "end": "876600"
  },
  {
    "text": "hate it",
    "start": "876600",
    "end": "877880"
  },
  {
    "text": "anyways it's happened once before that's",
    "start": "877880",
    "end": "880000"
  },
  {
    "text": "why I actually never ignore errors now I",
    "start": "880000",
    "end": "881959"
  },
  {
    "text": "like the the underscore assignment was a",
    "start": "881959",
    "end": "885000"
  },
  {
    "text": "mistake I think it was genuinely a",
    "start": "885000",
    "end": "887079"
  },
  {
    "text": "mistake in Rust because it can lead you",
    "start": "887079",
    "end": "888720"
  },
  {
    "text": "into this why don't you just have all",
    "start": "888720",
    "end": "890560"
  },
  {
    "text": "your functions be acing shut up Marcos",
    "start": "890560",
    "end": "893320"
  },
  {
    "text": "red starvation and may even lead to",
    "start": "893320",
    "end": "895160"
  },
  {
    "text": "conflicts with demons even if you do",
    "start": "895160",
    "end": "896880"
  },
  {
    "text": "manage to get it working you might find",
    "start": "896880",
    "end": "898519"
  },
  {
    "text": "that your CP just doesn't have enough",
    "start": "898519",
    "end": "900240"
  },
  {
    "text": "juice at which point you look into using",
    "start": "900240",
    "end": "902040"
  },
  {
    "text": "the thousands of cacor on your GPU but",
    "start": "902040",
    "end": "904440"
  },
  {
    "text": "now you'll need to write some C++ code",
    "start": "904440",
    "end": "906279"
  },
  {
    "text": "and likely blow your leg off in the",
    "start": "906279",
    "end": "907839"
  },
  {
    "text": "process well what if there's a language",
    "start": "907839",
    "end": "909720"
  },
  {
    "text": "that just knew how to run things in",
    "start": "909720",
    "end": "911000"
  },
  {
    "text": "parallel by default that's the promise",
    "start": "911000",
    "end": "912800"
  },
  {
    "text": "of Bend imagine we have a computation",
    "start": "912800",
    "end": "914920"
  },
  {
    "text": "that adds two completely random numbers",
    "start": "914920",
    "end": "916800"
  },
  {
    "text": "together in Python The",
    "start": "916800",
    "end": "919639"
  },
  {
    "text": "Interpreter you can tell he's a man of",
    "start": "919639",
    "end": "922000"
  },
  {
    "text": "culture okay you can just see the man of",
    "start": "922000",
    "end": "925240"
  },
  {
    "text": "culturing right here totally random",
    "start": "925240",
    "end": "927440"
  },
  {
    "text": "numbers completely random",
    "start": "927440",
    "end": "930399"
  },
  {
    "text": "culturally appropriate numbers together",
    "start": "930399",
    "end": "932959"
  },
  {
    "text": "in Python The Interpreter is going to",
    "start": "932959",
    "end": "934600"
  },
  {
    "text": "convert this into B code and then",
    "start": "934600",
    "end": "936120"
  },
  {
    "text": "eventually run it on the python virtual",
    "start": "936120",
    "end": "937800"
  },
  {
    "text": "machine pretty simple but in Bend things",
    "start": "937800",
    "end": "939959"
  },
  {
    "text": "are a little more complex the elements",
    "start": "939959",
    "end": "941680"
  },
  {
    "text": "of the computation are structured into a",
    "start": "941680",
    "end": "943759"
  },
  {
    "text": "graph which are called interaction",
    "start": "943759",
    "end": "945399"
  },
  {
    "text": "combinators you can think of it as a big",
    "start": "945399",
    "end": "947199"
  },
  {
    "text": "network of all the this guy writes askal",
    "start": "947199",
    "end": "949639"
  },
  {
    "text": "you can just tell right away zero",
    "start": "949639",
    "end": "951720"
  },
  {
    "text": "information about the person but from",
    "start": "951720",
    "end": "954040"
  },
  {
    "text": "the GitHub said the word calculus and I",
    "start": "954040",
    "end": "956720"
  },
  {
    "text": "didn't see any integrals and then also",
    "start": "956720",
    "end": "959279"
  },
  {
    "text": "here we see the word combinator again",
    "start": "959279",
    "end": "961880"
  },
  {
    "text": "this hasal mentioned this is hascal",
    "start": "961880",
    "end": "963680"
  },
  {
    "text": "mentioned for sure this is hasal",
    "start": "963680",
    "end": "966000"
  },
  {
    "text": "mentioned pick pick is Ben here big fan",
    "start": "966000",
    "end": "968360"
  },
  {
    "text": "here thank you white papers mentioned",
    "start": "968360",
    "end": "970720"
  },
  {
    "text": "white papers are happening as we speak",
    "start": "970720",
    "end": "973440"
  },
  {
    "text": "computations that need to be done when",
    "start": "973440",
    "end": "975000"
  },
  {
    "text": "two nodes run into each other the",
    "start": "975000",
    "end": "976519"
  },
  {
    "text": "computation progresses by following a",
    "start": "976519",
    "end": "978759"
  },
  {
    "text": "simple set of rules that rewrite the",
    "start": "978759",
    "end": "980440"
  },
  {
    "text": "computation in a way that can be done in",
    "start": "980440",
    "end": "984199"
  },
  {
    "text": "parallel okay so if you're tip to tip",
    "start": "985240",
    "end": "988240"
  },
  {
    "text": "you becomeing Infinity but if you're",
    "start": "988240",
    "end": "990480"
  },
  {
    "text": "tipto tip fully colored in you become",
    "start": "990480",
    "end": "993480"
  },
  {
    "text": "two lines but then if you're tip to tip",
    "start": "993480",
    "end": "995800"
  },
  {
    "text": "but one's only full then you become",
    "start": "995800",
    "end": "998319"
  },
  {
    "text": "definitely the infinity sign just poorly",
    "start": "998319",
    "end": "1000079"
  },
  {
    "text": "drawn I don't know what this means I",
    "start": "1000079",
    "end": "1001920"
  },
  {
    "text": "don't know I this pattern until all",
    "start": "1001920",
    "end": "1003759"
  },
  {
    "text": "computations are done it then merges the",
    "start": "1003759",
    "end": "1005680"
  },
  {
    "text": "result back into whatever expression was",
    "start": "1005680",
    "end": "1007720"
  },
  {
    "text": "returned from the function this concept",
    "start": "1007720",
    "end": "1009360"
  },
  {
    "text": "of interaction combinators goes all the",
    "start": "1009360",
    "end": "1011199"
  },
  {
    "text": "way back to the 1990s and is implemented",
    "start": "1011199",
    "end": "1013319"
  },
  {
    "text": "in a runtime called the higher order",
    "start": "1013319",
    "end": "1015160"
  },
  {
    "text": "virtual machine hbm is not meant to be",
    "start": "1015160",
    "end": "1017199"
  },
  {
    "text": "used directly and that",
    "start": "1017199",
    "end": "1019519"
  },
  {
    "text": "it is above your pay grade I must say",
    "start": "1019519",
    "end": "1021519"
  },
  {
    "text": "that at this point in programming since",
    "start": "1021519",
    "end": "1023560"
  },
  {
    "text": "I've never I've never been a big Lambda",
    "start": "1023560",
    "end": "1025520"
  },
  {
    "text": "calculus dork I I I just don't",
    "start": "1025520",
    "end": "1028160"
  },
  {
    "text": "understand these Concepts or even the",
    "start": "1028160",
    "end": "1029720"
  },
  {
    "text": "vernacular behind it uh you know it's",
    "start": "1029720",
    "end": "1031880"
  },
  {
    "text": "it's like that guy that doesn't have",
    "start": "1031880",
    "end": "1033240"
  },
  {
    "text": "compiler experience and walks in and",
    "start": "1033240",
    "end": "1035360"
  },
  {
    "text": "keeps calling everything a compiler when",
    "start": "1035360",
    "end": "1036798"
  },
  {
    "text": "it's a transpiler but then when you",
    "start": "1036799",
    "end": "1038240"
  },
  {
    "text": "actually get around people whose like",
    "start": "1038240",
    "end": "1039678"
  },
  {
    "text": "job it is to write these things you know",
    "start": "1039679",
    "end": "1042160"
  },
  {
    "text": "how vacular bothers them when you use it",
    "start": "1042160",
    "end": "1044520"
  },
  {
    "text": "incorrectly for me I'm just like L to",
    "start": "1044520",
    "end": "1046520"
  },
  {
    "text": "calculus what the [ __ ] is this right and",
    "start": "1046520",
    "end": "1048319"
  },
  {
    "text": "they're like well you're not using the",
    "start": "1048319",
    "end": "1049520"
  },
  {
    "text": "terms right you know and people",
    "start": "1049520",
    "end": "1051880"
  },
  {
    "text": "understand like people will start being",
    "start": "1051880",
    "end": "1054120"
  },
  {
    "text": "like ah you're you know I can tell",
    "start": "1054120",
    "end": "1055600"
  },
  {
    "text": "you're new and you can tell I'm new",
    "start": "1055600",
    "end": "1058480"
  },
  {
    "text": "because of that this ism is not meant to",
    "start": "1058480",
    "end": "1060080"
  },
  {
    "text": "be used directly and that's why they",
    "start": "1060080",
    "end": "1061679"
  },
  {
    "text": "build bend a highle language to",
    "start": "1061679",
    "end": "1063559"
  },
  {
    "text": "interface with it and the language",
    "start": "1063559",
    "end": "1064919"
  },
  {
    "text": "itself is implemented in Rust you can",
    "start": "1064919",
    "end": "1067039"
  },
  {
    "text": "tell right away that's why it's so good",
    "start": "1067039",
    "end": "1068840"
  },
  {
    "text": "tax is very similar to Python and we can",
    "start": "1068840",
    "end": "1070679"
  },
  {
    "text": "write a Hello World by defining a main",
    "start": "1070679",
    "end": "1072520"
  },
  {
    "text": "function that returns a string now to",
    "start": "1072520",
    "end": "1074480"
  },
  {
    "text": "execute this code we can pull up the",
    "start": "1074480",
    "end": "1076000"
  },
  {
    "text": "terminal and use the Ben run command by",
    "start": "1076000",
    "end": "1078480"
  },
  {
    "text": "default this is going to that's single",
    "start": "1078480",
    "end": "1080320"
  },
  {
    "text": "threaded rust interpreter correct yeah",
    "start": "1080320",
    "end": "1082559"
  },
  {
    "text": "use the rust interpreter which will",
    "start": "1082559",
    "end": "1084200"
  },
  {
    "text": "execute it sequentially just like any",
    "start": "1084200",
    "end": "1086360"
  },
  {
    "text": "other boring language but now here's",
    "start": "1086360",
    "end": "1088200"
  },
  {
    "text": "where things get interesting imagine we",
    "start": "1088200",
    "end": "1089720"
  },
  {
    "text": "have an",
    "start": "1089720",
    "end": "1092000"
  },
  {
    "text": "algorithm why aliens why aliens pre-at",
    "start": "1092000",
    "end": "1095039"
  },
  {
    "text": "come on it's because I read the GitHub",
    "start": "1095039",
    "end": "1097000"
  },
  {
    "text": "this is why we read the GitHub first",
    "start": "1097000",
    "end": "1098799"
  },
  {
    "text": "okay because the next one is then if you",
    "start": "1098799",
    "end": "1100600"
  },
  {
    "text": "build it with a c you get to run it on",
    "start": "1100600",
    "end": "1102919"
  },
  {
    "text": "all of your little nodes and then if you",
    "start": "1102919",
    "end": "1104679"
  },
  {
    "text": "build it with the CU the C the cudas you",
    "start": "1104679",
    "end": "1107200"
  },
  {
    "text": "get to run it on all your cudas get",
    "start": "1107200",
    "end": "1109120"
  },
  {
    "text": "interesting imagine we have an algorithm",
    "start": "1109120",
    "end": "1111000"
  },
  {
    "text": "that needs to count a bunch of numbers",
    "start": "1111000",
    "end": "1112679"
  },
  {
    "text": "and then add them together the first",
    "start": "1112679",
    "end": "1114159"
  },
  {
    "text": "thing that might blow your mind is that",
    "start": "1114159",
    "end": "1115679"
  },
  {
    "text": "bend does not have loops like we can't",
    "start": "1115679",
    "end": "1117600"
  },
  {
    "text": "just do a for Loop like we would in",
    "start": "1117600",
    "end": "1118919"
  },
  {
    "text": "Python instead then has something",
    "start": "1118919",
    "end": "1120919"
  },
  {
    "text": "entirely different called a fold that",
    "start": "1120919",
    "end": "1122919"
  },
  {
    "text": "works like a search and replace for data",
    "start": "1122919",
    "end": "1124840"
  },
  {
    "text": "types and any algorithm that requires a",
    "start": "1124840",
    "end": "1126840"
  },
  {
    "text": "loop can be replaced with a fold",
    "start": "1126840",
    "end": "1128679"
  },
  {
    "text": "basically a fold allows you to consume",
    "start": "1128679",
    "end": "1130640"
  },
  {
    "text": "recursive data types in parallel like a",
    "start": "1130640",
    "end": "1132720"
  },
  {
    "text": "list or a tree but first we need to",
    "start": "1132720",
    "end": "1134400"
  },
  {
    "text": "construct a recursive data type and for",
    "start": "1134400",
    "end": "1136200"
  },
  {
    "text": "that we have the bend keyword which is",
    "start": "1136200",
    "end": "1137960"
  },
  {
    "text": "like the opposite of fold now if that's",
    "start": "1137960",
    "end": "1139679"
  },
  {
    "text": "a little too mindbending maybe check out",
    "start": "1139679",
    "end": "1141520"
  },
  {
    "text": "my back catalog okay so I actually got",
    "start": "1141520",
    "end": "1143960"
  },
  {
    "text": "lost in the sauce there for a second I'm",
    "start": "1143960",
    "end": "1146240"
  },
  {
    "text": "not going to lie to you I feel like Mark",
    "start": "1146240",
    "end": "1148200"
  },
  {
    "text": "I feel like Mark Cuban right now and",
    "start": "1148200",
    "end": "1150480"
  },
  {
    "text": "being like Oh you said fold therefore",
    "start": "1150480",
    "end": "1154320"
  },
  {
    "text": "I'm out and I'm not g and I'm not going",
    "start": "1154320",
    "end": "1157240"
  },
  {
    "text": "to lie to you when I saw all those cans",
    "start": "1157240",
    "end": "1158760"
  },
  {
    "text": "going might have got might have got a",
    "start": "1158760",
    "end": "1160559"
  },
  {
    "text": "little distracted by the cans as opposed",
    "start": "1160559",
    "end": "1162960"
  },
  {
    "text": "to what was actually happening okay so a",
    "start": "1162960",
    "end": "1164679"
  },
  {
    "text": "fold I feel like I get a fold is just a",
    "start": "1164679",
    "end": "1166559"
  },
  {
    "text": "function that produces out a fold is",
    "start": "1166559",
    "end": "1168039"
  },
  {
    "text": "just reduced for the those that are just",
    "start": "1168039",
    "end": "1169440"
  },
  {
    "text": "JavaScript kitties that's all it is fold",
    "start": "1169440",
    "end": "1171799"
  },
  {
    "text": "is just simply reduce and this is like",
    "start": "1171799",
    "end": "1173720"
  },
  {
    "text": "your seed value typically is the one",
    "start": "1173720",
    "end": "1175880"
  },
  {
    "text": "right here and then you you you like go",
    "start": "1175880",
    "end": "1178799"
  },
  {
    "text": "up it right it's just going over a list",
    "start": "1178799",
    "end": "1180760"
  },
  {
    "text": "reducing it it's it's a I believe they",
    "start": "1180760",
    "end": "1182720"
  },
  {
    "text": "use the term",
    "start": "1182720",
    "end": "1185280"
  },
  {
    "text": "opposite thing the bend is a value that",
    "start": "1198919",
    "end": "1201080"
  },
  {
    "text": "goes into a l I'm not see that's where I",
    "start": "1201080",
    "end": "1203600"
  },
  {
    "text": "I I start losing it you can't use",
    "start": "1203600",
    "end": "1205840"
  },
  {
    "text": "wrinkle brain vocabulary on Twitch you",
    "start": "1205840",
    "end": "1207679"
  },
  {
    "text": "really can't use wrinkle brain vocab can",
    "start": "1207679",
    "end": "1209440"
  },
  {
    "text": "be replaced with a fold basically a fold",
    "start": "1209440",
    "end": "1211520"
  },
  {
    "text": "allows you to consume recursive data",
    "start": "1211520",
    "end": "1213280"
  },
  {
    "text": "types and parallel like a list a",
    "start": "1213280",
    "end": "1215120"
  },
  {
    "text": "recursive data type yet just like a list",
    "start": "1215120",
    "end": "1217080"
  },
  {
    "text": "it's something that you can walk across",
    "start": "1217080",
    "end": "1218679"
  },
  {
    "text": "via recursion to get to get to the end",
    "start": "1218679",
    "end": "1221039"
  },
  {
    "text": "of okay which means you could also use a",
    "start": "1221039",
    "end": "1222919"
  },
  {
    "text": "tree you could also use a graph with a a",
    "start": "1222919",
    "end": "1225320"
  },
  {
    "text": "DFS okay okay I think we're starting to",
    "start": "1225320",
    "end": "1227360"
  },
  {
    "text": "see it confirmed pict was a mistake",
    "start": "1227360",
    "end": "1229200"
  },
  {
    "text": "confirmed pick is a mistake list or a",
    "start": "1229200",
    "end": "1231799"
  },
  {
    "text": "tree but first we need to construct a",
    "start": "1231799",
    "end": "1233520"
  },
  {
    "text": "recursive data type and for that we have",
    "start": "1233520",
    "end": "1235400"
  },
  {
    "text": "the bend keyword which is like the",
    "start": "1235400",
    "end": "1237000"
  },
  {
    "text": "opposite of fold now if that's a little",
    "start": "1237000",
    "end": "1238559"
  },
  {
    "text": "too mind-bending maybe check out my back",
    "start": "1238559",
    "end": "1240559"
  },
  {
    "text": "catalog for recursion in 100 seconds but",
    "start": "1240559",
    "end": "1243039"
  },
  {
    "text": "now let's see what this looks like from",
    "start": "1243039",
    "end": "1244280"
  },
  {
    "text": "a performance standpoint when I try to",
    "start": "1244280",
    "end": "1246039"
  },
  {
    "text": "run this algorithm on a single thread it",
    "start": "1246039",
    "end": "1248039"
  },
  {
    "text": "takes forever like 10 minutes or more",
    "start": "1248039",
    "end": "1250159"
  },
  {
    "text": "however I can run the same code without",
    "start": "1250159",
    "end": "1251799"
  },
  {
    "text": "any modification whatsoever with the",
    "start": "1251799",
    "end": "1254000"
  },
  {
    "text": "bend run C command when I do that it's",
    "start": "1254000",
    "end": "1256280"
  },
  {
    "text": "now utilizing all 24 threads on my CPU",
    "start": "1256280",
    "end": "1259240"
  },
  {
    "text": "and now it only takes about 30 seconds",
    "start": "1259240",
    "end": "1260840"
  },
  {
    "text": "to run the computation that's a huge",
    "start": "1260840",
    "end": "1262559"
  },
  {
    "text": "Improvement but I think we can still do",
    "start": "1262559",
    "end": "1264159"
  },
  {
    "text": "better because I'm a baller I have an",
    "start": "1264159",
    "end": "1265919"
  },
  {
    "text": "Nvidia RTX 490 and once again I can run",
    "start": "1265919",
    "end": "1269039"
  },
  {
    "text": "this code without any modification on",
    "start": "1269039",
    "end": "1270840"
  },
  {
    "text": "Cuda with Bend run- cuu and now this",
    "start": "1270840",
    "end": "1273720"
  },
  {
    "text": "code only takes one and 1 half seconds",
    "start": "1273720",
    "end": "1275240"
  },
  {
    "text": "to run and I'll just go ahead and drop",
    "start": "1275240",
    "end": "1276960"
  },
  {
    "text": "the mic right there this has been the",
    "start": "1276960",
    "end": "1278480"
  },
  {
    "text": "code report thanks for watching and I",
    "start": "1278480",
    "end": "1280320"
  },
  {
    "text": "will see you in the next one very cool",
    "start": "1280320",
    "end": "1283200"
  },
  {
    "text": "okay okay",
    "start": "1283200",
    "end": "1285279"
  },
  {
    "text": "so this looks totally awesome",
    "start": "1285279",
    "end": "1289039"
  },
  {
    "text": "and I absolutely think it's fantastic",
    "start": "1289039",
    "end": "1291400"
  },
  {
    "text": "but I do want to say something okay I'm",
    "start": "1291400",
    "end": "1293720"
  },
  {
    "text": "going to say",
    "start": "1293720",
    "end": "1296080"
  },
  {
    "text": "something and I hope that you guys don't",
    "start": "1296080",
    "end": "1298240"
  },
  {
    "text": "get upset at",
    "start": "1298240",
    "end": "1300799"
  },
  {
    "text": "me everyone virtually in this chat will",
    "start": "1307640",
    "end": "1310559"
  },
  {
    "text": "never use this language Let Me Tell You",
    "start": "1310559",
    "end": "1312200"
  },
  {
    "text": "Why this is the case this is the case",
    "start": "1312200",
    "end": "1314360"
  },
  {
    "text": "because this language is specifically",
    "start": "1314360",
    "end": "1316000"
  },
  {
    "text": "designed for people that have what we",
    "start": "1316000",
    "end": "1317640"
  },
  {
    "text": "refer to as an adult education in",
    "start": "1317640",
    "end": "1320679"
  },
  {
    "text": "mathematics okay you most of you guys",
    "start": "1320679",
    "end": "1323039"
  },
  {
    "text": "are a bunch of front end andies right in",
    "start": "1323039",
    "end": "1324640"
  },
  {
    "text": "react like this isn't going to come to",
    "start": "1324640",
    "end": "1326000"
  },
  {
    "text": "the front end and be useful like that",
    "start": "1326000",
    "end": "1327640"
  },
  {
    "text": "this isn't going to come into your",
    "start": "1327640",
    "end": "1328760"
  },
  {
    "text": "server and be just instantaneously",
    "start": "1328760",
    "end": "1330360"
  },
  {
    "text": "useful on your server okay this is just",
    "start": "1330360",
    "end": "1332640"
  },
  {
    "text": "going to be useful for people performing",
    "start": "1332640",
    "end": "1334240"
  },
  {
    "text": "like linear algebra and all that stuff",
    "start": "1334240",
    "end": "1336720"
  },
  {
    "text": "and they just want fast python they want",
    "start": "1336720",
    "end": "1338559"
  },
  {
    "text": "Loops that don't suck ass and that's",
    "start": "1338559",
    "end": "1341159"
  },
  {
    "text": "called pandas or it's called C this",
    "start": "1341159",
    "end": "1344200"
  },
  {
    "text": "whatever this is okay I don't use it",
    "start": "1344200",
    "end": "1346279"
  },
  {
    "text": "either this isn't going to be useful for",
    "start": "1346279",
    "end": "1347679"
  },
  {
    "text": "me either okay I it's it's absolutely",
    "start": "1347679",
    "end": "1350440"
  },
  {
    "text": "super duper awesome and the speed and",
    "start": "1350440",
    "end": "1352360"
  },
  {
    "text": "the glory of it is fantastic and the",
    "start": "1352360",
    "end": "1354240"
  },
  {
    "text": "fact that you can use the term calculus",
    "start": "1354240",
    "end": "1355880"
  },
  {
    "text": "and not use an integral at the exact",
    "start": "1355880",
    "end": "1357679"
  },
  {
    "text": "same time makes it just mindblowing for",
    "start": "1357679",
    "end": "1360240"
  },
  {
    "text": "me okay I don't get it but that here we",
    "start": "1360240",
    "end": "1362600"
  },
  {
    "text": "are here we are doing these things and",
    "start": "1362600",
    "end": "1365559"
  },
  {
    "text": "it just feels fantastic it feels amazing",
    "start": "1365559",
    "end": "1368200"
  },
  {
    "text": "when you look at this language you think",
    "start": "1368200",
    "end": "1369880"
  },
  {
    "text": "how could this not be the language we",
    "start": "1369880",
    "end": "1371480"
  },
  {
    "text": "all use this is truly the Lord's",
    "start": "1371480",
    "end": "1373279"
  },
  {
    "text": "language it requires folds and bends and",
    "start": "1373279",
    "end": "1376080"
  },
  {
    "text": "[ __ ] in reality that does not make any",
    "start": "1376080",
    "end": "1378159"
  },
  {
    "text": "sense and yet here we are realizing that",
    "start": "1378159",
    "end": "1382000"
  },
  {
    "text": "all we're going to be doing is writing",
    "start": "1382000",
    "end": "1383840"
  },
  {
    "text": "simple stuff on the front end or the",
    "start": "1383840",
    "end": "1385600"
  },
  {
    "text": "back end and it's just not going to be",
    "start": "1385600",
    "end": "1387320"
  },
  {
    "text": "for you it's not for you it's not been",
    "start": "1387320",
    "end": "1389000"
  },
  {
    "text": "for you it not it will not be for you in",
    "start": "1389000",
    "end": "1391240"
  },
  {
    "text": "the future so just be okay with it okay",
    "start": "1391240",
    "end": "1394200"
  },
  {
    "text": "instead learn rust learn go learn",
    "start": "1394200",
    "end": "1396640"
  },
  {
    "text": "JavaScript learn o camel learn Elixir",
    "start": "1396640",
    "end": "1399279"
  },
  {
    "text": "learn Swift and enjoy your day okay the",
    "start": "1399279",
    "end": "1402640"
  },
  {
    "text": "name is I'm sorry but this is fantastic",
    "start": "1402640",
    "end": "1405200"
  },
  {
    "text": "but at the exact same time you'll",
    "start": "1405200",
    "end": "1406480"
  },
  {
    "text": "probably never use it again but by the",
    "start": "1406480",
    "end": "1408120"
  },
  {
    "text": "way there will be people that do use it",
    "start": "1408120",
    "end": "1409679"
  },
  {
    "text": "and they will love it and it'll be",
    "start": "1409679",
    "end": "1410960"
  },
  {
    "text": "fantastic just not for your use case",
    "start": "1410960",
    "end": "1414120"
  },
  {
    "text": "okay just probably use Elixir or",
    "start": "1414120",
    "end": "1416039"
  },
  {
    "text": "something like that",
    "start": "1416039",
    "end": "1418759"
  }
]