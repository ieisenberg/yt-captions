[
  {
    "text": "I've already watched this guy's video",
    "start": "560",
    "end": "1839"
  },
  {
    "text": "once before not this one but another one",
    "start": "1839",
    "end": "3800"
  },
  {
    "text": "so I'm I'm pre- subscribing I like I",
    "start": "3800",
    "end": "6200"
  },
  {
    "text": "like this guy's video a lot I like him a",
    "start": "6200",
    "end": "9040"
  },
  {
    "text": "lot all right all right all right all",
    "start": "9040",
    "end": "10160"
  },
  {
    "text": "right let's go whenever I upload a video",
    "start": "10160",
    "end": "12759"
  },
  {
    "text": "about my Mario 64 optimization project I",
    "start": "12759",
    "end": "16198"
  },
  {
    "text": "get asked about implementing the famous",
    "start": "16199",
    "end": "18600"
  },
  {
    "text": "fast in wear square root function made",
    "start": "18600",
    "end": "20880"
  },
  {
    "text": "famous by Quake 3 this algorithm",
    "start": "20880",
    "end": "23400"
  },
  {
    "text": "computes one divided by the square root",
    "start": "23400",
    "end": "25400"
  },
  {
    "text": "of x only with still favorite line just",
    "start": "25400",
    "end": "30560"
  },
  {
    "text": "just what the [ __ ] just right in the",
    "start": "30560",
    "end": "33239"
  },
  {
    "text": "middle of the code we wa we actually",
    "start": "33239",
    "end": "35040"
  },
  {
    "text": "watched this one this was like the first",
    "start": "35040",
    "end": "36480"
  },
  {
    "text": "video I ever reacted to was the fast",
    "start": "36480",
    "end": "38559"
  },
  {
    "text": "inverse square root algorithm and like a",
    "start": "38559",
    "end": "41640"
  },
  {
    "text": "deep explanation of it and I cannot seem",
    "start": "41640",
    "end": "43800"
  },
  {
    "text": "to remember any of it it was wild it is",
    "start": "43800",
    "end": "48079"
  },
  {
    "text": "it is crazy that someone in some coked",
    "start": "48079",
    "end": "51160"
  },
  {
    "text": "out nightmare created",
    "start": "51160",
    "end": "53480"
  },
  {
    "text": "this simple operations by exploiting",
    "start": "53480",
    "end": "56719"
  },
  {
    "text": "need properties of how the computer",
    "start": "56719",
    "end": "59039"
  },
  {
    "text": "represents float Point values this",
    "start": "59039",
    "end": "61320"
  },
  {
    "text": "allows you to skip Computing a square",
    "start": "61320",
    "end": "63320"
  },
  {
    "text": "root directly which is usually very",
    "start": "63320",
    "end": "65600"
  },
  {
    "text": "expensive and Old Computers often had to",
    "start": "65600",
    "end": "68080"
  },
  {
    "text": "run much more expensive approximation",
    "start": "68080",
    "end": "70200"
  },
  {
    "text": "algorithms like this one here I will",
    "start": "70200",
    "end": "72560"
  },
  {
    "text": "explain to you why most of the time this",
    "start": "72560",
    "end": "74920"
  },
  {
    "text": "is a bad idea but I will also show you",
    "start": "74920",
    "end": "77600"
  },
  {
    "text": "when it is a good idea and I will even",
    "start": "77600",
    "end": "79720"
  },
  {
    "text": "show you a little improvement over the",
    "start": "79720",
    "end": "81479"
  },
  {
    "text": "algorithm listed on Wikipedia that works",
    "start": "81479",
    "end": "84240"
  },
  {
    "text": "faster and is more accurate for most use",
    "start": "84240",
    "end": "87520"
  },
  {
    "text": "cases as well as a completely new spin",
    "start": "87520",
    "end": "90479"
  },
  {
    "text": "on this algorithm by the way his game",
    "start": "90479",
    "end": "93119"
  },
  {
    "text": "looks so good I want to play this game",
    "start": "93119",
    "end": "96759"
  },
  {
    "text": "Mario 64 was my favorite game like of",
    "start": "96759",
    "end": "100439"
  },
  {
    "text": "all",
    "start": "100439",
    "end": "101439"
  },
  {
    "text": "time potentially I loved this",
    "start": "101439",
    "end": "106520"
  },
  {
    "text": "game and look at how good it is yeah",
    "start": "106520",
    "end": "110280"
  },
  {
    "text": "Zelda was better was Zelda better I'm",
    "start": "110280",
    "end": "111840"
  },
  {
    "text": "not sure I I go back and forth on that",
    "start": "111840",
    "end": "114479"
  },
  {
    "text": "because I've beaten Ocarina of",
    "start": "114479",
    "end": "117960"
  },
  {
    "text": "Time gosh I'm not even sure how many",
    "start": "118840",
    "end": "121159"
  },
  {
    "text": "times I've beaten Ocarina of Time",
    "start": "121159",
    "end": "124399"
  },
  {
    "text": "um probably 18",
    "start": "124399",
    "end": "128920"
  },
  {
    "text": "20 25 times I've beaten majoro's mask",
    "start": "128920",
    "end": "132680"
  },
  {
    "text": "like 15",
    "start": "132680",
    "end": "135319"
  },
  {
    "text": "times but man this one I mean Mario I",
    "start": "135840",
    "end": "139800"
  },
  {
    "text": "don't even know how many times I've",
    "start": "139800",
    "end": "140959"
  },
  {
    "text": "beaten it it's just so good majoro's",
    "start": "140959",
    "end": "143040"
  },
  {
    "text": "Mass was greater than Ur of time you're",
    "start": "143040",
    "end": "144519"
  },
  {
    "text": "an ignorant [ __ ] it was not it was not",
    "start": "144519",
    "end": "147800"
  },
  {
    "text": "better that is crazy easy to say that it",
    "start": "147800",
    "end": "151040"
  },
  {
    "text": "was",
    "start": "151040",
    "end": "152000"
  },
  {
    "text": "better Ocarina of Time was the great but",
    "start": "152000",
    "end": "155319"
  },
  {
    "text": "uh but as an old man I give it a link to",
    "start": "155319",
    "end": "157560"
  },
  {
    "text": "the",
    "start": "157560",
    "end": "159680"
  },
  {
    "text": "past that might come in",
    "start": "160800",
    "end": "163800"
  },
  {
    "text": "handy the problem with using the F got",
    "start": "163800",
    "end": "167599"
  },
  {
    "text": "him got him got",
    "start": "167599",
    "end": "170879"
  },
  {
    "text": "him got",
    "start": "170879",
    "end": "174120"
  },
  {
    "text": "him scar algorithm is not that it is a",
    "start": "176360",
    "end": "179519"
  },
  {
    "text": "bad algorithm but rather that most of",
    "start": "179519",
    "end": "182000"
  },
  {
    "text": "the time on the N64 we have a much",
    "start": "182000",
    "end": "184760"
  },
  {
    "text": "better option available to us the N64",
    "start": "184760",
    "end": "187720"
  },
  {
    "text": "has special hardware parts that let it",
    "start": "187720",
    "end": "190239"
  },
  {
    "text": "compute the square root in the single",
    "start": "190239",
    "end": "192000"
  },
  {
    "text": "instruction can anyone name the song",
    "start": "192000",
    "end": "193599"
  },
  {
    "text": "that's playing right now right now name",
    "start": "193599",
    "end": "196000"
  },
  {
    "text": "it really quickly Forest Temple thank",
    "start": "196000",
    "end": "198440"
  },
  {
    "text": "you someone said Forest Temple right as",
    "start": "198440",
    "end": "199799"
  },
  {
    "text": "I said nice nice job Forest Temple",
    "start": "199799",
    "end": "201799"
  },
  {
    "text": "Forest Temple good job good job that",
    "start": "201799",
    "end": "203799"
  },
  {
    "text": "takes 29 Cycles this is the exact same",
    "start": "203799",
    "end": "206840"
  },
  {
    "text": "cost the doing a divide instruction",
    "start": "206840",
    "end": "208920"
  },
  {
    "text": "costs so if we compute 1 divided by the",
    "start": "208920",
    "end": "212080"
  },
  {
    "text": "fast inverse square root of x instead of",
    "start": "212080",
    "end": "214120"
  },
  {
    "text": "the square root of x we really just TCH",
    "start": "214120",
    "end": "216480"
  },
  {
    "text": "the cost and accuracy loss of this",
    "start": "216480",
    "end": "218480"
  },
  {
    "text": "function on top which is all around",
    "start": "218480",
    "end": "220400"
  },
  {
    "text": "terrible here is a table comparing the",
    "start": "220400",
    "end": "222480"
  },
  {
    "text": "cycle costs for using the build and",
    "start": "222480",
    "end": "224280"
  },
  {
    "text": "square root function and using the fast",
    "start": "224280",
    "end": "226560"
  },
  {
    "text": "inward square root with 0 one newton",
    "start": "226560",
    "end": "229760"
  },
  {
    "text": "iterations don't worry about what a",
    "start": "229760",
    "end": "231760"
  },
  {
    "text": "Newton iteration is Newton",
    "start": "231760",
    "end": "235200"
  },
  {
    "text": "iteration had to write that one out by",
    "start": "235200",
    "end": "237439"
  },
  {
    "text": "hand uh",
    "start": "237439",
    "end": "240640"
  },
  {
    "text": "nice nice I mean that's pretty that's",
    "start": "240640",
    "end": "242720"
  },
  {
    "text": "pretty great I mean 59 Cycles that's",
    "start": "242720",
    "end": "244680"
  },
  {
    "text": "crazy but still pretty",
    "start": "244680",
    "end": "247200"
  },
  {
    "text": "great",
    "start": "247200",
    "end": "249360"
  },
  {
    "text": "one don't worry about what a new",
    "start": "249360",
    "end": "251519"
  },
  {
    "text": "generation is just yet it's just a cheap",
    "start": "251519",
    "end": "253920"
  },
  {
    "text": "little thing we can do to increase",
    "start": "253920",
    "end": "255400"
  },
  {
    "text": "accuracy for this reason it only ever",
    "start": "255400",
    "end": "257720"
  },
  {
    "text": "makes sense to use the first iners",
    "start": "257720",
    "end": "259199"
  },
  {
    "text": "square root function if we actually want",
    "start": "259199",
    "end": "261120"
  },
  {
    "text": "to compute one divided by the square",
    "start": "261120",
    "end": "262639"
  },
  {
    "text": "root of x and never if we need the",
    "start": "262639",
    "end": "265120"
  },
  {
    "text": "actual s beautiful additionally there is",
    "start": "265120",
    "end": "267720"
  },
  {
    "text": "another issue we are not CPU Bond on the",
    "start": "267720",
    "end": "271240"
  },
  {
    "text": "N64 at all the",
    "start": "271240",
    "end": "274440"
  },
  {
    "text": "N",
    "start": "274440",
    "end": "276320"
  },
  {
    "text": "93.75",
    "start": "276320",
    "end": "279320"
  },
  {
    "text": "megahertz I just want you to just take a",
    "start": "280199",
    "end": "282520"
  },
  {
    "text": "moment and think about how shitty your",
    "start": "282520",
    "end": "285280"
  },
  {
    "text": "website",
    "start": "285280",
    "end": "286280"
  },
  {
    "text": "runs and you're watching Mario running",
    "start": "286280",
    "end": "289240"
  },
  {
    "text": "on a creamy smooth 60 frames a second on",
    "start": "289240",
    "end": "293039"
  },
  {
    "text": "a 93 megahertz computer okay I just want",
    "start": "293039",
    "end": "296160"
  },
  {
    "text": "you to think about that for a second I",
    "start": "296160",
    "end": "297800"
  },
  {
    "text": "just want you to take a moment and",
    "start": "297800",
    "end": "299840"
  },
  {
    "text": "consider your life and what you've built",
    "start": "299840",
    "end": "302880"
  },
  {
    "text": "versus",
    "start": "302880",
    "end": "305440"
  },
  {
    "text": "this you should be ashamed of",
    "start": "308080",
    "end": "311240"
  },
  {
    "text": "yourself 64 is possibly the machine with",
    "start": "311240",
    "end": "314400"
  },
  {
    "text": "the worst M to CP ratio of all time to",
    "start": "314400",
    "end": "318880"
  },
  {
    "text": "render at 30 FPS we need to finish a",
    "start": "318880",
    "end": "321479"
  },
  {
    "text": "frame in 33,000 microc seconds in this",
    "start": "321479",
    "end": "325319"
  },
  {
    "text": "scene you can see when you say it that",
    "start": "325319",
    "end": "326840"
  },
  {
    "text": "way it just sounds like so many the CPU",
    "start": "326840",
    "end": "329199"
  },
  {
    "text": "doesn't even use half of the time while",
    "start": "329199",
    "end": "331680"
  },
  {
    "text": "the renderer needs all the time it can",
    "start": "331680",
    "end": "333600"
  },
  {
    "text": "get the renderer and the CPU share the",
    "start": "333600",
    "end": "336199"
  },
  {
    "text": "same memory so any optimization we make",
    "start": "336199",
    "end": "338759"
  },
  {
    "text": "should aim to improve memory throughput",
    "start": "338759",
    "end": "340880"
  },
  {
    "text": "to make the rambas go vroom vroom while",
    "start": "340880",
    "end": "343280"
  },
  {
    "text": "using the square root and divide",
    "start": "343280",
    "end": "344800"
  },
  {
    "text": "instruction to get 1 divided by the sare",
    "start": "344800",
    "end": "346479"
  },
  {
    "text": "root of x takes 58 whole Cycles it also",
    "start": "346479",
    "end": "350319"
  },
  {
    "text": "Only Takes Two instructions loading",
    "start": "350319",
    "end": "352680"
  },
  {
    "text": "eight instructions takes 60 CPU cycles",
    "start": "352680",
    "end": "356520"
  },
  {
    "text": "and it starts the rendering for a bit",
    "start": "356520",
    "end": "358560"
  },
  {
    "text": "which is a whole lot worse than just",
    "start": "358560",
    "end": "360280"
  },
  {
    "text": "running the CPU a little slower here is",
    "start": "360280",
    "end": "362400"
  },
  {
    "text": "a comparison for oh you have to do more",
    "start": "362400",
    "end": "365560"
  },
  {
    "text": "instructions and this causes a",
    "start": "365560",
    "end": "368120"
  },
  {
    "text": "whole a whole situation going on",
    "start": "368120",
    "end": "372840"
  },
  {
    "text": "here",
    "start": "372840",
    "end": "375160"
  },
  {
    "text": "huh wild that is wild I mean first off",
    "start": "375160",
    "end": "378400"
  },
  {
    "text": "this is this is incredible second off",
    "start": "378400",
    "end": "380360"
  },
  {
    "text": "this just goes to",
    "start": "380360",
    "end": "381560"
  },
  {
    "text": "show measuring is really really great",
    "start": "381560",
    "end": "385280"
  },
  {
    "text": "right measuring just really eliminates",
    "start": "385280",
    "end": "388120"
  },
  {
    "text": "an entire category of false premises",
    "start": "388120",
    "end": "391680"
  },
  {
    "text": "Computing 1 / by theare root of x if you",
    "start": "391680",
    "end": "394680"
  },
  {
    "text": "look at the graph you can see that the",
    "start": "394680",
    "end": "396840"
  },
  {
    "text": "instruction count for the fast in square",
    "start": "396840",
    "end": "398960"
  },
  {
    "text": "root is higher regardless of how",
    "start": "398960",
    "end": "401039"
  },
  {
    "text": "inaccurate we go this is because while",
    "start": "401039",
    "end": "403400"
  },
  {
    "text": "the fast in square root uses a bunch of",
    "start": "403400",
    "end": "405599"
  },
  {
    "text": "quick to run instructions that just move",
    "start": "405599",
    "end": "407759"
  },
  {
    "text": "numbers around in memory it has to use a",
    "start": "407759",
    "end": "410160"
  },
  {
    "text": "lot more than just divide and a square",
    "start": "410160",
    "end": "412240"
  },
  {
    "text": "root instruction there is one saving rce",
    "start": "412240",
    "end": "414400"
  },
  {
    "text": "here and that is cach code the cache is",
    "start": "414400",
    "end": "416840"
  },
  {
    "text": "like a memory that the CPU can use all",
    "start": "416840",
    "end": "419080"
  },
  {
    "text": "by it itself very quickly without",
    "start": "419080",
    "end": "421599"
  },
  {
    "text": "disturbing the renderer it can hold 16",
    "start": "421599",
    "end": "424039"
  },
  {
    "text": "kiloby of information and it's our best",
    "start": "424039",
    "end": "426319"
  },
  {
    "text": "friend as far as optimizations go if our",
    "start": "426319",
    "end": "428720"
  },
  {
    "text": "code is already cached we don't have to",
    "start": "428720",
    "end": "430879"
  },
  {
    "text": "pay any cost per instruction beyond the",
    "start": "430879",
    "end": "433000"
  },
  {
    "text": "first caching making this negligable",
    "start": "433000",
    "end": "435479"
  },
  {
    "text": "I've Rewritten Mario 64's graph rler",
    "start": "435479",
    "end": "437599"
  },
  {
    "text": "engine to fit all into one block of code",
    "start": "437599",
    "end": "440840"
  },
  {
    "text": "cache meaning if we use this somewhere",
    "start": "440840",
    "end": "443039"
  },
  {
    "text": "in engine we can avoid this cost and",
    "start": "443039",
    "end": "445560"
  },
  {
    "text": "make this whole column",
    "start": "445560",
    "end": "448160"
  },
  {
    "text": "irrelevant but but even then there's an",
    "start": "448160",
    "end": "450879"
  },
  {
    "text": "I don't understand how that works but",
    "start": "450879",
    "end": "452280"
  },
  {
    "text": "that's",
    "start": "452280",
    "end": "453400"
  },
  {
    "text": "awesome right like I don't understand",
    "start": "453400",
    "end": "455440"
  },
  {
    "text": "how it makes it",
    "start": "455440",
    "end": "458000"
  },
  {
    "text": "irrelevant fast memory oh that's on this",
    "start": "460840",
    "end": "463080"
  },
  {
    "text": "is is interesting because it basically",
    "start": "463080",
    "end": "464479"
  },
  {
    "text": "proves why risk workstations were",
    "start": "464479",
    "end": "466080"
  },
  {
    "text": "expensive fast memory was really really",
    "start": "466080",
    "end": "468280"
  },
  {
    "text": "really uh expensive and uh risk had",
    "start": "468280",
    "end": "471599"
  },
  {
    "text": "flattened code and cisk uh this is why",
    "start": "471599",
    "end": "473919"
  },
  {
    "text": "risk video game systems uh didn't scale",
    "start": "473919",
    "end": "476360"
  },
  {
    "text": "well this equation is different now and",
    "start": "476360",
    "end": "478360"
  },
  {
    "text": "arm will win yeah I arm arm is arm is",
    "start": "478360",
    "end": "481360"
  },
  {
    "text": "quite wild another issue with the fast",
    "start": "481360",
    "end": "484280"
  },
  {
    "text": "inverse square root function the",
    "start": "484280",
    "end": "486479"
  },
  {
    "text": "accuracy is reduced we can use this for",
    "start": "486479",
    "end": "489919"
  },
  {
    "text": "any type of code that values the",
    "start": "489919",
    "end": "491960"
  },
  {
    "text": "accuracy more than the tiny performance",
    "start": "491960",
    "end": "494560"
  },
  {
    "text": "benefit that this offers in this video",
    "start": "494560",
    "end": "497440"
  },
  {
    "text": "I've used the fast andw square root to",
    "start": "497440",
    "end": "499280"
  },
  {
    "text": "normalize The View Matrix and while you",
    "start": "499280",
    "end": "501960"
  },
  {
    "text": "might not be able to see the accuracy",
    "start": "501960",
    "end": "503800"
  },
  {
    "text": "loss right away I think the accuracy",
    "start": "503800",
    "end": "505840"
  },
  {
    "text": "loss is more noticeable than the 0.5",
    "start": "505840",
    "end": "508720"
  },
  {
    "text": "microc in CPU gain that this algorithm",
    "start": "508720",
    "end": "511120"
  },
  {
    "text": "offers per use all of this means it's",
    "start": "511120",
    "end": "513560"
  },
  {
    "text": "looking very Grim for the fast and with",
    "start": "513560",
    "end": "515760"
  },
  {
    "text": "SAR function ever being useful but this",
    "start": "515760",
    "end": "519200"
  },
  {
    "text": "is just the weirdest guy in all of Zelda",
    "start": "519200",
    "end": "521240"
  },
  {
    "text": "okay I don't know why this",
    "start": "521240",
    "end": "525719"
  },
  {
    "text": "guy why was the mask guy okay what was",
    "start": "526320",
    "end": "530360"
  },
  {
    "text": "what was his issue why was he so strange",
    "start": "530360",
    "end": "533839"
  },
  {
    "text": "all these factors working against us is",
    "start": "533839",
    "end": "536040"
  },
  {
    "text": "there ever a situation where it's faster",
    "start": "536040",
    "end": "538640"
  },
  {
    "text": "that dude registered sex offender",
    "start": "538640",
    "end": "540040"
  },
  {
    "text": "probably that guy's I don't trust the",
    "start": "540040",
    "end": "542640"
  },
  {
    "text": "mask guy Yes actually we just need to",
    "start": "542640",
    "end": "545800"
  },
  {
    "text": "fulfill all three of these conditions",
    "start": "545800",
    "end": "548680"
  },
  {
    "text": "one we want the actual inverse of the",
    "start": "548680",
    "end": "551360"
  },
  {
    "text": "square root and not the square root",
    "start": "551360",
    "end": "553079"
  },
  {
    "text": "itself okay two the code we are running",
    "start": "553079",
    "end": "556440"
  },
  {
    "text": "is already residing in instruction cache",
    "start": "556440",
    "end": "559320"
  },
  {
    "text": "okay three we don't need very high",
    "start": "559320",
    "end": "561959"
  },
  {
    "text": "accuracy this leaves only a single use",
    "start": "561959",
    "end": "565160"
  },
  {
    "text": "case that I can think of right now",
    "start": "565160",
    "end": "567120"
  },
  {
    "text": "normalizing vectors for important",
    "start": "567120",
    "end": "569800"
  },
  {
    "text": "graphical effects which is",
    "start": "569800",
    "end": "571720"
  },
  {
    "text": "coincidentally the exact same use case",
    "start": "571720",
    "end": "574320"
  },
  {
    "text": "Doom had to make this algorithm as",
    "start": "574320",
    "end": "576279"
  },
  {
    "text": "famous as it is normalizing vectors",
    "start": "576279",
    "end": "578839"
  },
  {
    "text": "works by multiplying with one divided by",
    "start": "578839",
    "end": "581000"
  },
  {
    "text": "the size of the vector and the size of",
    "start": "581000",
    "end": "583200"
  },
  {
    "text": "the vector is the square root of all the",
    "start": "583200",
    "end": "585160"
  },
  {
    "text": "elements added together meaning we can",
    "start": "585160",
    "end": "587720"
  },
  {
    "text": "substitute 1 / the root of x with the",
    "start": "587720",
    "end": "590839"
  },
  {
    "text": "fast inverse square root function here",
    "start": "590839",
    "end": "592839"
  },
  {
    "text": "and our first condition is passed I",
    "start": "592839",
    "end": "595079"
  },
  {
    "text": "managed to compress the code for the",
    "start": "595079",
    "end": "596760"
  },
  {
    "text": "graph render into just 12 kiloby we",
    "start": "596760",
    "end": "600399"
  },
  {
    "text": "just that is very",
    "start": "600399",
    "end": "603320"
  },
  {
    "text": "funny just a bunch of the the little",
    "start": "603320",
    "end": "605640"
  },
  {
    "text": "igen vectors got you that's all",
    "start": "605640",
    "end": "609279"
  },
  {
    "text": "was I can't believe",
    "start": "609519",
    "end": "613000"
  },
  {
    "text": "that this is also this is just",
    "start": "613000",
    "end": "615000"
  },
  {
    "text": "incredible just watching",
    "start": "615000",
    "end": "616640"
  },
  {
    "text": "this less than the 16 kiloby of in",
    "start": "616640",
    "end": "619480"
  },
  {
    "text": "Vector normies just a bunch of vector",
    "start": "619480",
    "end": "621120"
  },
  {
    "text": "normies second condition is passed as",
    "start": "621120",
    "end": "623240"
  },
  {
    "text": "well and additionally it is not",
    "start": "623240",
    "end": "626040"
  },
  {
    "text": "important that the vector is perfectly",
    "start": "626040",
    "end": "627880"
  },
  {
    "text": "normalized for unimportant effects like",
    "start": "627880",
    "end": "629839"
  },
  {
    "text": "Shadows so we passed all three",
    "start": "629839",
    "end": "632079"
  },
  {
    "text": "conditions additionally we have a little",
    "start": "632079",
    "end": "634079"
  },
  {
    "text": "Advantage here because the inverse grare",
    "start": "634079",
    "end": "636160"
  },
  {
    "text": "function has inaccuracies we don't have",
    "start": "636160",
    "end": "638399"
  },
  {
    "text": "to worry about dividing by zero in this",
    "start": "638399",
    "end": "640360"
  },
  {
    "text": "spot anymore and end up saving an",
    "start": "640360",
    "end": "642600"
  },
  {
    "text": "additional free cycles for a total of 58",
    "start": "642600",
    "end": "645519"
  },
  {
    "text": "Cycles saved this is another small",
    "start": "645519",
    "end": "647959"
  },
  {
    "text": "Advantage for the F and sare algorithm",
    "start": "647959",
    "end": "650360"
  },
  {
    "text": "and it ends up making it just a tiny bit",
    "start": "650360",
    "end": "652720"
  },
  {
    "text": "more valuable I went with the lowest",
    "start": "652720",
    "end": "654760"
  },
  {
    "text": "accuracy version of The Fast and with",
    "start": "654760",
    "end": "656440"
  },
  {
    "text": "square rout which saved around 80 micros",
    "start": "656440",
    "end": "659120"
  },
  {
    "text": "per frame on the CPU which means data is",
    "start": "659120",
    "end": "662040"
  },
  {
    "text": "fed into the GPU more efficiently where",
    "start": "662040",
    "end": "664440"
  },
  {
    "text": "it saved around 20 microc per frame",
    "start": "664440",
    "end": "666880"
  },
  {
    "text": "which is a much bigger Improvement than",
    "start": "666880",
    "end": "668680"
  },
  {
    "text": "I initially expected from investigating",
    "start": "668680",
    "end": "670959"
  },
  {
    "text": "this and the",
    "start": "670959",
    "end": "673680"
  },
  {
    "text": "inaccurate you know when you hear this I",
    "start": "678560",
    "end": "681000"
  },
  {
    "text": "don't think any of us have thought about",
    "start": "681000",
    "end": "683079"
  },
  {
    "text": "20 microseconds in a long",
    "start": "683079",
    "end": "686920"
  },
  {
    "text": "time",
    "start": "687959",
    "end": "690480"
  },
  {
    "text": "someone hire this guy for switch",
    "start": "690480",
    "end": "691720"
  },
  {
    "text": "Graphics can somebody just hire this guy",
    "start": "691720",
    "end": "693320"
  },
  {
    "text": "for switch Graphics",
    "start": "693320",
    "end": "695040"
  },
  {
    "text": "please uh the wife he has the actual red",
    "start": "695040",
    "end": "698800"
  },
  {
    "text": "pill moment uh with this video is none",
    "start": "698800",
    "end": "701399"
  },
  {
    "text": "of the Elegance was",
    "start": "701399",
    "end": "703200"
  },
  {
    "text": "required uh to make Mario a commercial",
    "start": "703200",
    "end": "705600"
  },
  {
    "text": "success and would and wouldn't have",
    "start": "705600",
    "end": "707200"
  },
  {
    "text": "helped much I mean that's the truth",
    "start": "707200",
    "end": "710160"
  },
  {
    "text": "Mario in all of its flaws was still one",
    "start": "710160",
    "end": "712880"
  },
  {
    "text": "of my favorite games of all",
    "start": "712880",
    "end": "715320"
  },
  {
    "text": "time and",
    "start": "715320",
    "end": "717440"
  },
  {
    "text": "yet here we are are showing it could",
    "start": "717440",
    "end": "720519"
  },
  {
    "text": "have been done much",
    "start": "720519",
    "end": "723200"
  },
  {
    "text": "bettery is at most around 3% which is",
    "start": "723200",
    "end": "726279"
  },
  {
    "text": "the difference between these two Circles",
    "start": "726279",
    "end": "728839"
  },
  {
    "text": "of course the average difference is much",
    "start": "728839",
    "end": "731040"
  },
  {
    "text": "lower and I doubt anyone would actually",
    "start": "731040",
    "end": "733199"
  },
  {
    "text": "notice the inaccuracy in no one would",
    "start": "733199",
    "end": "734839"
  },
  {
    "text": "notice a 3% reduction in girth",
    "start": "734839",
    "end": "737079"
  },
  {
    "text": "right it's just it's just a little it's",
    "start": "737079",
    "end": "739240"
  },
  {
    "text": "just a little less girthy that's",
    "start": "739240",
    "end": "741760"
  },
  {
    "text": "all just just a",
    "start": "741760",
    "end": "745440"
  },
  {
    "text": "touch but the fast and west algorithm as",
    "start": "746519",
    "end": "749760"
  },
  {
    "text": "shown on Wikipedia was just a",
    "start": "749760",
    "end": "751720"
  },
  {
    "text": "35-year-old algorithm that wasn't fully",
    "start": "751720",
    "end": "754079"
  },
  {
    "text": "cooked back then let's see if we can",
    "start": "754079",
    "end": "756240"
  },
  {
    "text": "improve on it there are a few obvious",
    "start": "756240",
    "end": "758680"
  },
  {
    "text": "accuracy improvements to this like",
    "start": "758680",
    "end": "760279"
  },
  {
    "text": "optimizing all three constants instead",
    "start": "760279",
    "end": "762120"
  },
  {
    "text": "of just this one here and there are a",
    "start": "762120",
    "end": "763800"
  },
  {
    "text": "lot of scientific papers on a subject",
    "start": "763800",
    "end": "765720"
  },
  {
    "text": "already that we could simply copy paste",
    "start": "765720",
    "end": "767680"
  },
  {
    "text": "if you've been counting Cycles",
    "start": "767680",
    "end": "768920"
  },
  {
    "text": "throughout this video you might have",
    "start": "768920",
    "end": "770440"
  },
  {
    "text": "thought that I was off by one on all the",
    "start": "770440",
    "end": "772880"
  },
  {
    "text": "new durations but that's actually",
    "start": "772880",
    "end": "775519"
  },
  {
    "text": "because there's a one cycle Improvement",
    "start": "775519",
    "end": "777399"
  },
  {
    "text": "you can make over the algorithm with",
    "start": "777399",
    "end": "778920"
  },
  {
    "text": "them listed on Wikipedia you can",
    "start": "778920",
    "end": "780600"
  },
  {
    "text": "actually just bitag even harder and",
    "start": "780600",
    "end": "782480"
  },
  {
    "text": "subtract one from the exponent instead",
    "start": "782480",
    "end": "784120"
  },
  {
    "text": "of multiplying by 0.5 in a normal",
    "start": "784120",
    "end": "786040"
  },
  {
    "text": "inverse Square algorithm this Sayes one",
    "start": "786040",
    "end": "788519"
  },
  {
    "text": "cycle on the N64 and I've been comparing",
    "start": "788519",
    "end": "791000"
  },
  {
    "text": "with this algorithm the whole time",
    "start": "791000",
    "end": "792519"
  },
  {
    "text": "throughout the video it only works if",
    "start": "792519",
    "end": "794399"
  },
  {
    "text": "your number is bigger than this tiny",
    "start": "794399",
    "end": "796000"
  },
  {
    "text": "number shown on screen that I'm not",
    "start": "796000",
    "end": "797360"
  },
  {
    "text": "going to pronounce but like come on your",
    "start": "797360",
    "end": "799680"
  },
  {
    "text": "number won't be that small I can't",
    "start": "799680",
    "end": "802079"
  },
  {
    "text": "imagine I'm the first to think of this",
    "start": "802079",
    "end": "803720"
  },
  {
    "text": "but I figured I'd mention it before you",
    "start": "803720",
    "end": "805240"
  },
  {
    "text": "guys cook me in the comments but since",
    "start": "805240",
    "end": "807160"
  },
  {
    "text": "we actually use the simplest and least",
    "start": "807160",
    "end": "809399"
  },
  {
    "text": "accurate version we only want to",
    "start": "809399",
    "end": "811440"
  },
  {
    "text": "optimize the version of this algorithm",
    "start": "811440",
    "end": "813519"
  },
  {
    "text": "with no Newton iterations which somehow",
    "start": "813519",
    "end": "817000"
  },
  {
    "text": "doesn't seem to have any research done",
    "start": "817000",
    "end": "818560"
  },
  {
    "text": "on it so we can get to be the first to",
    "start": "818560",
    "end": "821160"
  },
  {
    "text": "optimize it optimizing this is",
    "start": "821160",
    "end": "823399"
  },
  {
    "text": "surprisingly very simple Because by the",
    "start": "823399",
    "end": "825600"
  },
  {
    "text": "way we've entered into the area in which",
    "start": "825600",
    "end": "828440"
  },
  {
    "text": "my math knowledge has left the building",
    "start": "828440",
    "end": "832759"
  },
  {
    "text": "um I don't know how a floating Point",
    "start": "832759",
    "end": "835240"
  },
  {
    "text": "number is represented anymore I know",
    "start": "835240",
    "end": "837000"
  },
  {
    "text": "there is the mantisa and the exponent",
    "start": "837000",
    "end": "840160"
  },
  {
    "text": "and I know that this uses the exponent",
    "start": "840160",
    "end": "842000"
  },
  {
    "text": "as part of the trick but that is where I",
    "start": "842000",
    "end": "844199"
  },
  {
    "text": "leave the building and that is",
    "start": "844199",
    "end": "847279"
  },
  {
    "text": "it all I had to do for it is ride a",
    "start": "847279",
    "end": "849959"
  },
  {
    "text": "brute forcer and let it run on my",
    "start": "849959",
    "end": "851880"
  },
  {
    "text": "Nintendo 64 overnight since all our",
    "start": "851880",
    "end": "854440"
  },
  {
    "text": "Vector ns are going to be in the range",
    "start": "854440",
    "end": "856440"
  },
  {
    "text": "0.03 to1 we can simply iterate over all",
    "start": "856440",
    "end": "860079"
  },
  {
    "text": "floats in this range and try all the",
    "start": "860079",
    "end": "861839"
  },
  {
    "text": "constants and then use whichever one",
    "start": "861839",
    "end": "864079"
  },
  {
    "text": "ended up having the lowest maximum",
    "start": "864079",
    "end": "866680"
  },
  {
    "text": "relative error running the Brute for",
    "start": "866680",
    "end": "869120"
  },
  {
    "text": "directly on the same Hardware that this",
    "start": "869120",
    "end": "870759"
  },
  {
    "text": "algorithm will run on also accommodates",
    "start": "870759",
    "end": "872800"
  },
  {
    "text": "for all kinds of Hardware quirks that we",
    "start": "872800",
    "end": "875320"
  },
  {
    "text": "might not know of after letting my N64",
    "start": "875320",
    "end": "877880"
  },
  {
    "text": "run overnight the best constant and",
    "start": "877880",
    "end": "879839"
  },
  {
    "text": "found was 0x5 f37 8171 classic which is",
    "start": "879839",
    "end": "884920"
  },
  {
    "text": "not far off for Doom us at all and",
    "start": "884920",
    "end": "887120"
  },
  {
    "text": "improved accuracy by just",
    "start": "887120",
    "end": "889279"
  },
  {
    "text": "1.9% one other idea that syus lock had",
    "start": "889279",
    "end": "892720"
  },
  {
    "text": "was to not compute the first and with",
    "start": "892720",
    "end": "894680"
  },
  {
    "text": "square root but instead compute two",
    "start": "894680",
    "end": "897600"
  },
  {
    "text": "separate approximation",
    "start": "897600",
    "end": "899399"
  },
  {
    "text": "for the fourth inverse square root using",
    "start": "899399",
    "end": "902320"
  },
  {
    "text": "two different magic constants pick to",
    "start": "902320",
    "end": "904800"
  },
  {
    "text": "cancel each other's error out and then",
    "start": "904800",
    "end": "906800"
  },
  {
    "text": "to multiply them together to get the",
    "start": "906800",
    "end": "908519"
  },
  {
    "text": "inverse square root what a cool idea",
    "start": "908519",
    "end": "911199"
  },
  {
    "text": "this gives us a 33% reduced error over",
    "start": "911199",
    "end": "913880"
  },
  {
    "text": "the fast invers s algorithm but it does",
    "start": "913880",
    "end": "916880"
  },
  {
    "text": "cost nine Cycles more to give you a",
    "start": "916880",
    "end": "919399"
  },
  {
    "text": "comparison the first Newton iteration",
    "start": "919399",
    "end": "921639"
  },
  {
    "text": "cost 24 cycl and it has",
    "start": "921639",
    "end": "924600"
  },
  {
    "text": "90% that's the I turn over to look at",
    "start": "924600",
    "end": "927959"
  },
  {
    "text": "chat and all I see is this background",
    "start": "927959",
    "end": "931319"
  },
  {
    "text": "Ricky just real angry about it just",
    "start": "931319",
    "end": "933639"
  },
  {
    "text": "could not handle what he's about to",
    "start": "933639",
    "end": "937079"
  },
  {
    "text": "watch background Ricky I get it",
    "start": "937160",
    "end": "940319"
  },
  {
    "text": "ridiculous absolutely ridiculous brain",
    "start": "940319",
    "end": "943519"
  },
  {
    "text": "shambles dude the idea of creating two",
    "start": "943519",
    "end": "947000"
  },
  {
    "text": "constants that compete against the that",
    "start": "947000",
    "end": "948680"
  },
  {
    "text": "erir in opposite directions is",
    "start": "948680",
    "end": "952880"
  },
  {
    "text": "just just out just mantissa and shambles",
    "start": "953920",
    "end": "957639"
  },
  {
    "text": "right now just use rea act just use",
    "start": "957639",
    "end": "959639"
  },
  {
    "text": "react",
    "start": "959639",
    "end": "961800"
  },
  {
    "text": "already increased accuracy I think all",
    "start": "961800",
    "end": "964920"
  },
  {
    "text": "three of these approaches are valid and",
    "start": "964920",
    "end": "966680"
  },
  {
    "text": "this new idea provides a pretty nice",
    "start": "966680",
    "end": "968959"
  },
  {
    "text": "intermediate step I'm sure there are",
    "start": "968959",
    "end": "970920"
  },
  {
    "text": "some cases where each of these free",
    "start": "970920",
    "end": "972639"
  },
  {
    "text": "functions is your best choice and I bet",
    "start": "972639",
    "end": "975319"
  },
  {
    "text": "at least one programmer watching this",
    "start": "975319",
    "end": "977120"
  },
  {
    "text": "just went yo because that 33% accuracy",
    "start": "977120",
    "end": "981360"
  },
  {
    "text": "gain was all they needed but this",
    "start": "981360",
    "end": "983480"
  },
  {
    "text": "concludes my research on this topic I",
    "start": "983480",
    "end": "985720"
  },
  {
    "text": "hope you learned something and I'll see",
    "start": "985720",
    "end": "987440"
  },
  {
    "text": "you in the next video",
    "start": "987440",
    "end": "989160"
  },
  {
    "text": "bye-bye",
    "start": "989160",
    "end": "990800"
  },
  {
    "text": "dad I can officially say I have learned",
    "start": "990800",
    "end": "995759"
  },
  {
    "text": "nothing I have learned nothing but I",
    "start": "996040",
    "end": "998360"
  },
  {
    "text": "have never been more excited at the",
    "start": "998360",
    "end": "999920"
  },
  {
    "text": "exact same time I have learned nothing",
    "start": "999920",
    "end": "1002680"
  },
  {
    "text": "because I am incapable of that",
    "start": "1002680",
    "end": "1006199"
  },
  {
    "text": "level of of",
    "start": "1006199",
    "end": "1008399"
  },
  {
    "text": "games you know what I mean I don't make",
    "start": "1008399",
    "end": "1011319"
  },
  {
    "text": "games I'm not a games guy so I don't I",
    "start": "1011319",
    "end": "1013040"
  },
  {
    "text": "don't I don't quite it was a watch more",
    "start": "1013040",
    "end": "1015040"
  },
  {
    "text": "of his excellent vids I've watched one",
    "start": "1015040",
    "end": "1016480"
  },
  {
    "text": "other one and they're they're great",
    "start": "1016480",
    "end": "1020240"
  }
]