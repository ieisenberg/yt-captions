[
  {
    "text": "over the last couple days there's been a",
    "start": "359",
    "end": "1719"
  },
  {
    "text": "lot of talk about this rust issue in",
    "start": "1719",
    "end": "4160"
  },
  {
    "text": "Windows and people are saying it's a",
    "start": "4160",
    "end": "6040"
  },
  {
    "text": "Windows issue and not a rust issue so",
    "start": "6040",
    "end": "7759"
  },
  {
    "text": "I'm very curious about this so we're",
    "start": "7759",
    "end": "8960"
  },
  {
    "text": "going to look first at the nist report",
    "start": "8960",
    "end": "10440"
  },
  {
    "text": "and then we got a couple other ones that",
    "start": "10440",
    "end": "11679"
  },
  {
    "text": "are going to try to maybe break it down",
    "start": "11679",
    "end": "12960"
  },
  {
    "text": "for us in a more simple term uh but",
    "start": "12960",
    "end": "15120"
  },
  {
    "text": "let's first read this thing rust is a",
    "start": "15120",
    "end": "16760"
  },
  {
    "text": "programming language rust uh the rust",
    "start": "16760",
    "end": "18640"
  },
  {
    "text": "security response working group was",
    "start": "18640",
    "end": "20039"
  },
  {
    "text": "notified that the rust standard Library",
    "start": "20039",
    "end": "22320"
  },
  {
    "text": "prior to version 1772 did not properly",
    "start": "22320",
    "end": "25240"
  },
  {
    "text": "Escape arguments when invoking batch",
    "start": "25240",
    "end": "26960"
  },
  {
    "text": "files with the bat and command",
    "start": "26960",
    "end": "28880"
  },
  {
    "text": "extensions on Windows using command ooh",
    "start": "28880",
    "end": "32119"
  },
  {
    "text": "okay okay if you don't know command is",
    "start": "32119",
    "end": "33879"
  },
  {
    "text": "um that's how you just run like a",
    "start": "33879",
    "end": "36640"
  },
  {
    "text": "another process you can get some sort of",
    "start": "36640",
    "end": "38239"
  },
  {
    "text": "child going right there it's like the",
    "start": "38239",
    "end": "39719"
  },
  {
    "text": "same thing as a node node spawn uh an",
    "start": "39719",
    "end": "41879"
  },
  {
    "text": "attacker able to control the arguments",
    "start": "41879",
    "end": "43320"
  },
  {
    "text": "pass the spawn process could uh execute",
    "start": "43320",
    "end": "45600"
  },
  {
    "text": "arbitrary shell commands by bypassing",
    "start": "45600",
    "end": "47480"
  },
  {
    "text": "the escaping the severity of this",
    "start": "47480",
    "end": "49480"
  },
  {
    "text": "vulnerability is critical for those",
    "start": "49480",
    "end": "51079"
  },
  {
    "text": "invoke uh for those who invoke bash",
    "start": "51079",
    "end": "53399"
  },
  {
    "text": "files on windows with untrusted",
    "start": "53399",
    "end": "55000"
  },
  {
    "text": "arguments no other platform is uh or use",
    "start": "55000",
    "end": "58239"
  },
  {
    "text": "is affected okay so this is this is not",
    "start": "58239",
    "end": "60600"
  },
  {
    "text": "necessarily people were saying that this",
    "start": "60600",
    "end": "62000"
  },
  {
    "text": "is a Windows bug but it doesn't sound",
    "start": "62000",
    "end": "63760"
  },
  {
    "text": "like a Windows bug this sounds like a",
    "start": "63760",
    "end": "64878"
  },
  {
    "text": "rust implementation bug shells are a",
    "start": "64879",
    "end": "67080"
  },
  {
    "text": "mess on window this is a Bobby table's",
    "start": "67080",
    "end": "69080"
  },
  {
    "text": "issue this is genuinely a Bobby table's",
    "start": "69080",
    "end": "70720"
  },
  {
    "text": "issue little Robert is is this this is",
    "start": "70720",
    "end": "72960"
  },
  {
    "text": "not a Windows issue this is a rust issue",
    "start": "72960",
    "end": "75799"
  },
  {
    "text": "every imple did it wrong oh it's a",
    "start": "75799",
    "end": "77200"
  },
  {
    "text": "legacy Windows issue oh interesting okay",
    "start": "77200",
    "end": "79560"
  },
  {
    "text": "everyone's saying it's a legacy Windows",
    "start": "79560",
    "end": "80720"
  },
  {
    "text": "issue okay hold on okay okay okay okay",
    "start": "80720",
    "end": "82759"
  },
  {
    "text": "okay the rust command ARG and command",
    "start": "82759",
    "end": "84880"
  },
  {
    "text": "args API state in their documentation",
    "start": "84880",
    "end": "87079"
  },
  {
    "text": "that arguments will be passed to the",
    "start": "87079",
    "end": "88479"
  },
  {
    "text": "spawn process as is regardless of the",
    "start": "88479",
    "end": "90759"
  },
  {
    "text": "content of their arguments and will not",
    "start": "90759",
    "end": "92720"
  },
  {
    "text": "be evaluated by the shell this means it",
    "start": "92720",
    "end": "94720"
  },
  {
    "text": "should be safe to pass untrusted input",
    "start": "94720",
    "end": "96759"
  },
  {
    "text": "as arguments on Windows the",
    "start": "96759",
    "end": "98399"
  },
  {
    "text": "implementation is of this is more",
    "start": "98399",
    "end": "100759"
  },
  {
    "text": "complex than other",
    "start": "100759",
    "end": "102759"
  },
  {
    "text": "platforms is this how we say windows",
    "start": "102759",
    "end": "104880"
  },
  {
    "text": "skill issues you know so Windows is a",
    "start": "104880",
    "end": "107000"
  },
  {
    "text": "touch more uh complex when it comes to",
    "start": "107000",
    "end": "111079"
  },
  {
    "text": "um the",
    "start": "111079",
    "end": "113119"
  },
  {
    "text": "implementation of this",
    "start": "113119",
    "end": "117479"
  },
  {
    "text": "thing because of the windows API only",
    "start": "117479",
    "end": "120039"
  },
  {
    "text": "provides a single string containing all",
    "start": "120039",
    "end": "121640"
  },
  {
    "text": "the arguments to the spawn process and",
    "start": "121640",
    "end": "123560"
  },
  {
    "text": "it's up to the spawn process to split",
    "start": "123560",
    "end": "125240"
  },
  {
    "text": "them most programs use this uh standard",
    "start": "125240",
    "end": "127479"
  },
  {
    "text": "C runtime arcv which in practice results",
    "start": "127479",
    "end": "130360"
  },
  {
    "text": "in a mo mostly consistent way arguments",
    "start": "130360",
    "end": "132879"
  },
  {
    "text": "are splitted one exception though is",
    "start": "132879",
    "end": "135200"
  },
  {
    "text": "command. exe uh used among other things",
    "start": "135200",
    "end": "138120"
  },
  {
    "text": "to execute batch files which has its own",
    "start": "138120",
    "end": "140280"
  },
  {
    "text": "argument splitting logic that forces the",
    "start": "140280",
    "end": "142360"
  },
  {
    "text": "standard library to implement custom",
    "start": "142360",
    "end": "144000"
  },
  {
    "text": "escaping for arguments pass to batch",
    "start": "144000",
    "end": "146160"
  },
  {
    "text": "files unfortunately it was reported that",
    "start": "146160",
    "end": "147840"
  },
  {
    "text": "our escaping logic was not thorough",
    "start": "147840",
    "end": "150000"
  },
  {
    "text": "thorough enough and it was possible to",
    "start": "150000",
    "end": "152000"
  },
  {
    "text": "pass malicious arguments that will",
    "start": "152000",
    "end": "153840"
  },
  {
    "text": "result in arbitrary shell execution due",
    "start": "153840",
    "end": "156319"
  },
  {
    "text": "to the complexity of command exe we",
    "start": "156319",
    "end": "158400"
  },
  {
    "text": "didn't identify a solution that would",
    "start": "158400",
    "end": "160480"
  },
  {
    "text": "correctly Escape arguments in all cases",
    "start": "160480",
    "end": "162640"
  },
  {
    "text": "to maintain our API guarantees we",
    "start": "162640",
    "end": "164360"
  },
  {
    "text": "improved the robustness of the escape",
    "start": "164360",
    "end": "166360"
  },
  {
    "text": "code and change the command API to",
    "start": "166360",
    "end": "168120"
  },
  {
    "text": "return an invalid input error when it",
    "start": "168120",
    "end": "170239"
  },
  {
    "text": "cannot safely Escape an argument this",
    "start": "170239",
    "end": "172319"
  },
  {
    "text": "error will be emitted when spawning the",
    "start": "172319",
    "end": "174120"
  },
  {
    "text": "process the fix is in Rust 1772 uh note",
    "start": "174120",
    "end": "178000"
  },
  {
    "text": "that the new escaping logic for batch",
    "start": "178000",
    "end": "180239"
  },
  {
    "text": "files s on the conversion side and could",
    "start": "180239",
    "end": "182920"
  },
  {
    "text": "reject valid arguments those who",
    "start": "182920",
    "end": "184680"
  },
  {
    "text": "Implement an escaping themselves or only",
    "start": "184680",
    "end": "186560"
  },
  {
    "text": "handle trusted inputs can uh on Windows",
    "start": "186560",
    "end": "189080"
  },
  {
    "text": "can also use command extended raw ARG",
    "start": "189080",
    "end": "192400"
  },
  {
    "text": "method to bypass the uh standard",
    "start": "192400",
    "end": "194080"
  },
  {
    "text": "libraries escaping logic okay so it",
    "start": "194080",
    "end": "196280"
  },
  {
    "text": "really was an Oopsy Daisy on the rust",
    "start": "196280",
    "end": "198360"
  },
  {
    "text": "side people keep you guys keep blaming",
    "start": "198360",
    "end": "200200"
  },
  {
    "text": "windows for this one this sounds like",
    "start": "200200",
    "end": "202799"
  },
  {
    "text": "it's this is just simply that rust",
    "start": "202799",
    "end": "204920"
  },
  {
    "text": "didn't do this not only rust that's",
    "start": "204920",
    "end": "207519"
  },
  {
    "text": "that's fine no one said it's not only",
    "start": "207519",
    "end": "208879"
  },
  {
    "text": "rust but this is a rust problem they",
    "start": "208879",
    "end": "210760"
  },
  {
    "text": "fixed it it's their issue yeah if they",
    "start": "210760",
    "end": "212120"
  },
  {
    "text": "were able to fix it help me understand",
    "start": "212120",
    "end": "214519"
  },
  {
    "text": "why you guys keep saying it's windows",
    "start": "214519",
    "end": "217480"
  },
  {
    "text": "can I just throw something out here if",
    "start": "217480",
    "end": "219319"
  },
  {
    "text": "you run into this problem that means",
    "start": "219319",
    "end": "221680"
  },
  {
    "text": "you're using Windows and if you're using",
    "start": "221680",
    "end": "224799"
  },
  {
    "text": "Windows that's your fault man",
    "start": "224799",
    "end": "227519"
  },
  {
    "text": "okay it's not my fault you're using",
    "start": "227519",
    "end": "229879"
  },
  {
    "text": "Windows so guess what I don't know what",
    "start": "229879",
    "end": "231760"
  },
  {
    "text": "to tell you you're using Windows I'm",
    "start": "231760",
    "end": "233879"
  },
  {
    "text": "sorry that it sucks okay I'm sorry that",
    "start": "233879",
    "end": "236640"
  },
  {
    "text": "that sucks I know Elden ring is awesome",
    "start": "236640",
    "end": "239120"
  },
  {
    "text": "and I own Windows machine just to play",
    "start": "239120",
    "end": "241200"
  },
  {
    "text": "Elden ring on it but you know what I",
    "start": "241200",
    "end": "242959"
  },
  {
    "text": "don't develop on Windows okay I avoid it",
    "start": "242959",
    "end": "246040"
  },
  {
    "text": "like the plague if possible I stream and",
    "start": "246040",
    "end": "248920"
  },
  {
    "text": "play Elden ring from Windows because",
    "start": "248920",
    "end": "250480"
  },
  {
    "text": "let's just face it audio and video",
    "start": "250480",
    "end": "252079"
  },
  {
    "text": "better on better on Windows okay I don't",
    "start": "252079",
    "end": "254519"
  },
  {
    "text": "care what you you Arch nerds have to say",
    "start": "254519",
    "end": "256680"
  },
  {
    "text": "about it I can I can I can get my camera",
    "start": "256680",
    "end": "260079"
  },
  {
    "text": "driver to work on it I just have to you",
    "start": "260079",
    "end": "261880"
  },
  {
    "text": "know sometimes I have to fix some",
    "start": "261880",
    "end": "263240"
  },
  {
    "text": "weekend updates I don't I'm not going to",
    "start": "263240",
    "end": "265120"
  },
  {
    "text": "do it I'm not going to do it I'm sorry",
    "start": "265120",
    "end": "266680"
  },
  {
    "text": "I'm going to turn on Windows and it's",
    "start": "266680",
    "end": "267919"
  },
  {
    "text": "just going to work I mean this is",
    "start": "267919",
    "end": "269240"
  },
  {
    "text": "actually really interesting this is",
    "start": "269240",
    "end": "270560"
  },
  {
    "text": "super interesting I because again I I",
    "start": "270560",
    "end": "273280"
  },
  {
    "text": "think what this highlights is is the",
    "start": "273280",
    "end": "275120"
  },
  {
    "text": "more interesting problem with rust which",
    "start": "275120",
    "end": "277639"
  },
  {
    "text": "is there is some level of safety you can",
    "start": "277639",
    "end": "280680"
  },
  {
    "text": "guarantee right um but at the end of the",
    "start": "280680",
    "end": "284199"
  },
  {
    "text": "day rust is still made by people which",
    "start": "284199",
    "end": "286560"
  },
  {
    "text": "are inherently unsafe that's why you can",
    "start": "286560",
    "end": "289600"
  },
  {
    "text": "have there that's why there currently",
    "start": "289600",
    "end": "291080"
  },
  {
    "text": "exists that fundamental flawed rust",
    "start": "291080",
    "end": "293880"
  },
  {
    "text": "compiler problem where you can actually",
    "start": "293880",
    "end": "295440"
  },
  {
    "text": "create buffer overflow so even the",
    "start": "295440",
    "end": "297759"
  },
  {
    "text": "memory safety isn't true if you do a",
    "start": "297759",
    "end": "301479"
  },
  {
    "text": "certain kind of like super Jerry rigging",
    "start": "301479",
    "end": "303440"
  },
  {
    "text": "of lifetimes and it's just like the",
    "start": "303440",
    "end": "304680"
  },
  {
    "text": "craziest function ever but it",
    "start": "304680",
    "end": "305919"
  },
  {
    "text": "effectively is able to cast any any any",
    "start": "305919",
    "end": "308440"
  },
  {
    "text": "piece of memory from its lifetime to a",
    "start": "308440",
    "end": "310160"
  },
  {
    "text": "static lifetime which is not possible",
    "start": "310160",
    "end": "311680"
  },
  {
    "text": "but apparently it is possible and able",
    "start": "311680",
    "end": "313360"
  },
  {
    "text": "to then use that throughout the rest of",
    "start": "313360",
    "end": "315720"
  },
  {
    "text": "the program which is kind of interesting",
    "start": "315720",
    "end": "318160"
  },
  {
    "text": "issue right and so you know when I see",
    "start": "318160",
    "end": "320919"
  },
  {
    "text": "these things what it just reminds me of",
    "start": "320919",
    "end": "322600"
  },
  {
    "text": "is no matter how hard you try you are",
    "start": "322600",
    "end": "324880"
  },
  {
    "text": "still the one writing the code and you",
    "start": "324880",
    "end": "326440"
  },
  {
    "text": "will still make mistakes you can still",
    "start": "326440",
    "end": "328440"
  },
  {
    "text": "leak memory and rust it's not hard it's",
    "start": "328440",
    "end": "330639"
  },
  {
    "text": "a hashmap hashmaps are super easy to",
    "start": "330639",
    "end": "332319"
  },
  {
    "text": "leak memory with you can still have lots",
    "start": "332319",
    "end": "334319"
  },
  {
    "text": "of critical flaws you can still",
    "start": "334319",
    "end": "336039"
  },
  {
    "text": "Implement security violations with rust",
    "start": "336039",
    "end": "339000"
  },
  {
    "text": "right 100% of the time you can still",
    "start": "339000",
    "end": "341160"
  },
  {
    "text": "goof it up and make giant security",
    "start": "341160",
    "end": "344080"
  },
  {
    "text": "problems real world uh programs have",
    "start": "344080",
    "end": "347199"
  },
  {
    "text": "real world problems no matter how much",
    "start": "347199",
    "end": "349360"
  },
  {
    "text": "you use rust right it's just simply it's",
    "start": "349360",
    "end": "353000"
  },
  {
    "text": "a it's attempting to erase a class of",
    "start": "353000",
    "end": "355280"
  },
  {
    "text": "problems and that's one of these",
    "start": "355280",
    "end": "356639"
  },
  {
    "text": "problems that I have with it like when",
    "start": "356639",
    "end": "357840"
  },
  {
    "text": "you watch when you look at the rust",
    "start": "357840",
    "end": "359120"
  },
  {
    "text": "survey you see every single year I bet",
    "start": "359120",
    "end": "360600"
  },
  {
    "text": "you could bring it up right now rust",
    "start": "360600",
    "end": "362120"
  },
  {
    "text": "survey or results for me this is like",
    "start": "362120",
    "end": "365240"
  },
  {
    "text": "the biggest cope of rust right once",
    "start": "365240",
    "end": "368120"
  },
  {
    "text": "again the top reason employers of our",
    "start": "368120",
    "end": "369960"
  },
  {
    "text": "survey respondents invested in Rust was",
    "start": "369960",
    "end": "371840"
  },
  {
    "text": "the ability to build relatively correct",
    "start": "371840",
    "end": "373560"
  },
  {
    "text": "and bug-free software like yo dog I hate",
    "start": "373560",
    "end": "376440"
  },
  {
    "text": "to tell you this but your software is",
    "start": "376440",
    "end": "378400"
  },
  {
    "text": "not bug free just because you have",
    "start": "378400",
    "end": "380880"
  },
  {
    "text": "ownership doesn't mean you're not a bad",
    "start": "380880",
    "end": "383039"
  },
  {
    "text": "programmer you're still bad okay you",
    "start": "383039",
    "end": "385280"
  },
  {
    "text": "know what if if rust was a bug-free",
    "start": "385280",
    "end": "387599"
  },
  {
    "text": "experience why' they real question why",
    "start": "387599",
    "end": "390680"
  },
  {
    "text": "why did they create a test sweet why",
    "start": "390680",
    "end": "393560"
  },
  {
    "text": "would they create testing tools honestly",
    "start": "393560",
    "end": "395560"
  },
  {
    "text": "why would you test your code if you",
    "start": "395560",
    "end": "397319"
  },
  {
    "text": "could write bug free code I'm waiting",
    "start": "397319",
    "end": "399280"
  },
  {
    "text": "for a proper answer here I write bugs",
    "start": "399280",
    "end": "401479"
  },
  {
    "text": "just to feel something now that's the",
    "start": "401479",
    "end": "402759"
  },
  {
    "text": "proper answer no no disagreement here",
    "start": "402759",
    "end": "405360"
  },
  {
    "text": "right I know it says relatively correct",
    "start": "405360",
    "end": "408280"
  },
  {
    "text": "it still terrifies me okay someone said",
    "start": "408280",
    "end": "410120"
  },
  {
    "text": "you skipped over the word relatively you",
    "start": "410120",
    "end": "411759"
  },
  {
    "text": "know what I say rust allows me to write",
    "start": "411759",
    "end": "414319"
  },
  {
    "text": "code and I probably put a bunch of bugs",
    "start": "414319",
    "end": "416080"
  },
  {
    "text": "in it I don't care what your software is",
    "start": "416080",
    "end": "418080"
  },
  {
    "text": "I don't care what your text stack is I",
    "start": "418080",
    "end": "419800"
  },
  {
    "text": "don't care what third party Services you",
    "start": "419800",
    "end": "421400"
  },
  {
    "text": "use if you come into it with a mentality",
    "start": "421400",
    "end": "424160"
  },
  {
    "text": "that your code is going to be less bug",
    "start": "424160",
    "end": "425919"
  },
  {
    "text": "riddled you're stupid okay sorry that's",
    "start": "425919",
    "end": "429879"
  },
  {
    "text": "it the end bugs are a constant and if",
    "start": "429879",
    "end": "433120"
  },
  {
    "text": "you ever think that somehow you are",
    "start": "433120",
    "end": "435280"
  },
  {
    "text": "going to magically not have as many bugs",
    "start": "435280",
    "end": "437639"
  },
  {
    "text": "You're simply wrong and it's going to",
    "start": "437639",
    "end": "440280"
  },
  {
    "text": "make you write shittier code because you",
    "start": "440280",
    "end": "442639"
  },
  {
    "text": "think you can somehow accidentally avoid",
    "start": "442639",
    "end": "444919"
  },
  {
    "text": "bugs because you're now writing in this",
    "start": "444919",
    "end": "446599"
  },
  {
    "text": "magically safe code types just erase a",
    "start": "446599",
    "end": "449520"
  },
  {
    "text": "simple class of dumb bugs right you",
    "start": "449520",
    "end": "451520"
  },
  {
    "text": "can't actually pass a string to an INT",
    "start": "451520",
    "end": "453919"
  },
  {
    "text": "function right okay good like we're not",
    "start": "453919",
    "end": "456319"
  },
  {
    "text": "in JavaScript land okay that's fine it's",
    "start": "456319",
    "end": "458919"
  },
  {
    "text": "proven there's a critical bug every 500",
    "start": "458919",
    "end": "461080"
  },
  {
    "text": "to 2,000 lines in a big code base like",
    "start": "461080",
    "end": "463520"
  },
  {
    "text": "not surprising at all like even though I",
    "start": "463520",
    "end": "466000"
  },
  {
    "text": "have I don't know how you prove this I",
    "start": "466000",
    "end": "467800"
  },
  {
    "text": "have no idea why there's that range it",
    "start": "467800",
    "end": "469639"
  },
  {
    "text": "sounds like a completely madeup",
    "start": "469639",
    "end": "470919"
  },
  {
    "text": "statistic but I will say that I believe",
    "start": "470919",
    "end": "473879"
  },
  {
    "text": "it without any",
    "start": "473879",
    "end": "476319"
  },
  {
    "text": "proof without any proof I believe it is",
    "start": "476319",
    "end": "479120"
  },
  {
    "text": "Pro QED draw the Box submit it to a math",
    "start": "479120",
    "end": "483240"
  },
  {
    "text": "magazine and people will say it right",
    "start": "483240",
    "end": "485599"
  },
  {
    "text": "bugs decrease with time not correctness",
    "start": "485599",
    "end": "488199"
  },
  {
    "text": "yeah that's fair the moment you use div",
    "start": "488199",
    "end": "490599"
  },
  {
    "text": "over div euklid yeah there's so many",
    "start": "490599",
    "end": "493120"
  },
  {
    "text": "good ones so many good ones I will",
    "start": "493120",
    "end": "495639"
  },
  {
    "text": "reduce a lot of runtime bugs uh we'll",
    "start": "495639",
    "end": "498159"
  },
  {
    "text": "stand we still have uh logic errors but",
    "start": "498159",
    "end": "500960"
  },
  {
    "text": "a big category of stupid bugs are gone",
    "start": "500960",
    "end": "503159"
  },
  {
    "text": "I'm not sure what big category is of",
    "start": "503159",
    "end": "505639"
  },
  {
    "text": "stupid bugs right I'm not sure what",
    "start": "505639",
    "end": "508520"
  },
  {
    "text": "stupid bugs are on because what I",
    "start": "508520",
    "end": "511280"
  },
  {
    "text": "personally see is a bunch of anytime any",
    "start": "511280",
    "end": "513919"
  },
  {
    "text": "application gets sufficiently large ref",
    "start": "513919",
    "end": "516959"
  },
  {
    "text": "ref cells and me Texas as far as the eye",
    "start": "516959",
    "end": "520159"
  },
  {
    "text": "can see Raku is a bug free programming",
    "start": "520159",
    "end": "522440"
  },
  {
    "text": "language that's because it's a human",
    "start": "522440",
    "end": "523680"
  },
  {
    "text": "free programming",
    "start": "523680",
    "end": "525839"
  },
  {
    "text": "language Raku is the only Raku is the",
    "start": "525839",
    "end": "528800"
  },
  {
    "text": "only language in which you read that",
    "start": "528800",
    "end": "530720"
  },
  {
    "text": "someone once wrote a program in it okay",
    "start": "530720",
    "end": "533080"
  },
  {
    "text": "what's interesting is physics is the",
    "start": "533080",
    "end": "534880"
  },
  {
    "text": "most absolute rule driven runtime",
    "start": "534880",
    "end": "536720"
  },
  {
    "text": "environment that exists and we still",
    "start": "536720",
    "end": "538320"
  },
  {
    "text": "build cars that kill people",
    "start": "538320",
    "end": "540880"
  },
  {
    "text": "it's true uh CSV oh yes I did see this",
    "start": "540880",
    "end": "543760"
  },
  {
    "text": "this is so this is the one that I was",
    "start": "543760",
    "end": "544880"
  },
  {
    "text": "talking about so this is where you can",
    "start": "544880",
    "end": "546600"
  },
  {
    "text": "effectively take rust and you can cast",
    "start": "546600",
    "end": "549240"
  },
  {
    "text": "its lifetime into from a from a relative",
    "start": "549240",
    "end": "552160"
  },
  {
    "text": "lifetime into a static lifetime it's",
    "start": "552160",
    "end": "554040"
  },
  {
    "text": "it's it's extremely confusing let's",
    "start": "554040",
    "end": "555920"
  },
  {
    "text": "let's find this uh lifetime expansion",
    "start": "555920",
    "end": "557880"
  },
  {
    "text": "there you go that's what I'm looking for",
    "start": "557880",
    "end": "559440"
  },
  {
    "text": "like look at this look at this beautiful",
    "start": "559440",
    "end": "560720"
  },
  {
    "text": "code it just expands it it goes from",
    "start": "560720",
    "end": "563880"
  },
  {
    "text": "small to Giant and it just causes buffer",
    "start": "563880",
    "end": "566440"
  },
  {
    "text": "overflows seg faults everything",
    "start": "566440",
    "end": "570399"
  },
  {
    "text": "right it's pretty amazing it's pretty",
    "start": "570399",
    "end": "573000"
  },
  {
    "text": "amazing that someone made it but it's",
    "start": "573000",
    "end": "574360"
  },
  {
    "text": "even more amazing that whoever made it",
    "start": "574360",
    "end": "576680"
  },
  {
    "text": "trolled so hard trolled to the absolute",
    "start": "576680",
    "end": "579959"
  },
  {
    "text": "Nth Degree that you have this the",
    "start": "579959",
    "end": "581959"
  },
  {
    "text": "Blazing fast me memory vulnerabilities",
    "start": "581959",
    "end": "584120"
  },
  {
    "text": "written 100% safe rust blazingly fast",
    "start": "584120",
    "end": "587880"
  },
  {
    "text": "and then where I got my favorite license",
    "start": "587880",
    "end": "590560"
  },
  {
    "text": "ever from is from this crate which is",
    "start": "590560",
    "end": "592760"
  },
  {
    "text": "the good luck with that public",
    "start": "592760",
    "end": "595000"
  },
  {
    "text": "license copyright every one",
    "start": "595000",
    "end": "597760"
  },
  {
    "text": "except the author",
    "start": "597760",
    "end": "599760"
  },
  {
    "text": "terms and conditions zero just do",
    "start": "599760",
    "end": "601959"
  },
  {
    "text": "whatever the you want long as you",
    "start": "601959",
    "end": "603760"
  },
  {
    "text": "never leave a Trace to track the",
    "start": "603760",
    "end": "605640"
  },
  {
    "text": "author of the original product to blame",
    "start": "605640",
    "end": "608240"
  },
  {
    "text": "for for or held",
    "start": "608240",
    "end": "610160"
  },
  {
    "text": "responsible here by the way here's a",
    "start": "610160",
    "end": "612000"
  },
  {
    "text": "fundamental flaw in Rust please you're",
    "start": "612000",
    "end": "614040"
  },
  {
    "text": "never allowed to give me credit I don't",
    "start": "614040",
    "end": "615920"
  },
  {
    "text": "ever want to be told what to do Preamble",
    "start": "615920",
    "end": "619120"
  },
  {
    "text": "the author has absolutely no",
    "start": "619120",
    "end": "620560"
  },
  {
    "text": "clue what the code in this project does",
    "start": "620560",
    "end": "622279"
  },
  {
    "text": "it might just uh work or not",
    "start": "622279",
    "end": "624720"
  },
  {
    "text": "there is no third",
    "start": "624720",
    "end": "627040"
  },
  {
    "text": "option that's a Boeing engineer doctor",
    "start": "627040",
    "end": "629480"
  },
  {
    "text": "that is Boeing engineer Doctrine anyways",
    "start": "629480",
    "end": "631519"
  },
  {
    "text": "okay so this is actually super",
    "start": "631519",
    "end": "632519"
  },
  {
    "text": "interesting that this rust bug exists um",
    "start": "632519",
    "end": "635560"
  },
  {
    "text": "command. exe that's funny that it has",
    "start": "635560",
    "end": "637480"
  },
  {
    "text": "its own Escape that's like such a pain",
    "start": "637480",
    "end": "638839"
  },
  {
    "text": "in the ass by the way the fact that uh",
    "start": "638839",
    "end": "641160"
  },
  {
    "text": "that that that command exe has its own",
    "start": "641160",
    "end": "643480"
  },
  {
    "text": "escape and how it handles like how it",
    "start": "643480",
    "end": "645560"
  },
  {
    "text": "handles its own you know its own arc",
    "start": "645560",
    "end": "647880"
  },
  {
    "text": "parsing in comparison to every other",
    "start": "647880",
    "end": "649760"
  },
  {
    "text": "programming like genuinely that has to",
    "start": "649760",
    "end": "651720"
  },
  {
    "text": "hurt a little bit the name is rust is",
    "start": "651720",
    "end": "655560"
  },
  {
    "text": "sound safe and relatively bug free",
    "start": "655560",
    "end": "661240"
  },
  {
    "text": "do it",
    "start": "661519",
    "end": "664240"
  }
]