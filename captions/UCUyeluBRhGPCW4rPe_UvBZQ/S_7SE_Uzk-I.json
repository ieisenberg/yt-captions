[
  {
    "text": "we're over here arguing about code",
    "start": "40",
    "end": "2080"
  },
  {
    "text": "coverage and somebody gives us a 4day",
    "start": "2080",
    "end": "4880"
  },
  {
    "text": "old one why reaching 100% code coverage",
    "start": "4880",
    "end": "8000"
  },
  {
    "text": "must not be your testing goal with",
    "start": "8000",
    "end": "10280"
  },
  {
    "text": "examples in C okay obviously first big",
    "start": "10280",
    "end": "12360"
  },
  {
    "text": "mistake is C got him got him easy",
    "start": "12360",
    "end": "15160"
  },
  {
    "text": "destroyed Get Wrecked um I I'm I'm fully",
    "start": "15160",
    "end": "17920"
  },
  {
    "text": "in agreeance with this statement but I'm",
    "start": "17920",
    "end": "19920"
  },
  {
    "text": "willing to be wrong and I do mean that I",
    "start": "19920",
    "end": "22160"
  },
  {
    "text": "am fully willing to be wrong here all",
    "start": "22160",
    "end": "24640"
  },
  {
    "text": "right table of contents for an article",
    "start": "24640",
    "end": "26160"
  },
  {
    "text": "come on just a second if you're here and",
    "start": "26160",
    "end": "28080"
  },
  {
    "text": "you're a software engineer did you know",
    "start": "28080",
    "end": "29599"
  },
  {
    "text": "about in domain and networking cost do",
    "start": "29599",
    "end": "32040"
  },
  {
    "text": "this thing in this blog uh something",
    "start": "32040",
    "end": "34000"
  },
  {
    "text": "configured AdSense I'm not really sure",
    "start": "34000",
    "end": "35360"
  },
  {
    "text": "okay code coverage is a valuable metric",
    "start": "35360",
    "end": "37360"
  },
  {
    "text": "in software development especially when",
    "start": "37360",
    "end": "38960"
  },
  {
    "text": "it comes to testing it provides insights",
    "start": "38960",
    "end": "41160"
  },
  {
    "text": "into how much of your code base is",
    "start": "41160",
    "end": "42760"
  },
  {
    "text": "exercised by your test Suite however we",
    "start": "42760",
    "end": "45280"
  },
  {
    "text": "must recognize that code coverage alone",
    "start": "45280",
    "end": "47160"
  },
  {
    "text": "should not be the ultimate goal of your",
    "start": "47160",
    "end": "48879"
  },
  {
    "text": "strategy it has some known",
    "start": "48879",
    "end": "51480"
  },
  {
    "text": "limitations okay okay",
    "start": "51480",
    "end": "55039"
  },
  {
    "text": "okay 100% code coverage does not",
    "start": "55039",
    "end": "58079"
  },
  {
    "text": "guarantee your code to be bug free yes",
    "start": "58079",
    "end": "59600"
  },
  {
    "text": "we all we all know this you can't you",
    "start": "59600",
    "end": "61879"
  },
  {
    "text": "can't test you can't just write hard",
    "start": "61879",
    "end": "63440"
  },
  {
    "text": "code to test your way out of things this",
    "start": "63440",
    "end": "64878"
  },
  {
    "text": "article will explore why code coverage",
    "start": "64879",
    "end": "66400"
  },
  {
    "text": "matters it's limitations and how to",
    "start": "66400",
    "end": "68040"
  },
  {
    "text": "balance uh achieving High coverage and",
    "start": "68040",
    "end": "70520"
  },
  {
    "text": "effective testing we'll use C to De",
    "start": "70520",
    "end": "72799"
  },
  {
    "text": "demonstrate the code coverage and how",
    "start": "72799",
    "end": "74159"
  },
  {
    "text": "you can uh and how you can cheat the",
    "start": "74159",
    "end": "75600"
  },
  {
    "text": "results okay what is code coverage code",
    "start": "75600",
    "end": "77280"
  },
  {
    "text": "coverage measures the percent of code",
    "start": "77280",
    "end": "78960"
  },
  {
    "text": "lines branches and or statements",
    "start": "78960",
    "end": "80840"
  },
  {
    "text": "executed during a test it helps answer",
    "start": "80840",
    "end": "82880"
  },
  {
    "text": "questions like how much of my code is",
    "start": "82880",
    "end": "84600"
  },
  {
    "text": "tested are there any untested paths or",
    "start": "84600",
    "end": "86720"
  },
  {
    "text": "dead code which parts of the application",
    "start": "86720",
    "end": "88520"
  },
  {
    "text": "need additional test coverage in C tools",
    "start": "88520",
    "end": "91280"
  },
  {
    "text": "like C cob do coverage and visual",
    "start": "91280",
    "end": "95360"
  },
  {
    "text": "Studios built-in coverage analysis",
    "start": "95360",
    "end": "97079"
  },
  {
    "text": "provide code coverage reports you may be",
    "start": "97079",
    "end": "99360"
  },
  {
    "text": "tempted to think that higher the",
    "start": "99360",
    "end": "101479"
  },
  {
    "text": "coverage the better the quality of your",
    "start": "101479",
    "end": "103320"
  },
  {
    "text": "tests however we will soon demonstrate",
    "start": "103320",
    "end": "105399"
  },
  {
    "text": "why this assumption is misleading okay",
    "start": "105399",
    "end": "107320"
  },
  {
    "text": "okay okay okay hold on let's hey let the",
    "start": "107320",
    "end": "110600"
  },
  {
    "text": "man cook everybody why test it's not",
    "start": "110600",
    "end": "113399"
  },
  {
    "text": "expected go you know you got to really",
    "start": "113399",
    "end": "116600"
  },
  {
    "text": "lean into that oh I like this in my",
    "start": "116600",
    "end": "119360"
  },
  {
    "text": "opinion the bottom line as you can",
    "start": "119360",
    "end": "120600"
  },
  {
    "text": "enforce thinking through something with",
    "start": "120600",
    "end": "122159"
  },
  {
    "text": "policy Gates I don't think you can force",
    "start": "122159",
    "end": "124520"
  },
  {
    "text": "somebody to become a good tester by",
    "start": "124520",
    "end": "126680"
  },
  {
    "text": "saying that they need 100% coverage I",
    "start": "126680",
    "end": "128640"
  },
  {
    "text": "think you'll get a bunch of lazy tests",
    "start": "128640",
    "end": "130080"
  },
  {
    "text": "that get there",
    "start": "130080",
    "end": "133000"
  },
  {
    "text": "gatekeeping okay thank you Bry I",
    "start": "133000",
    "end": "135480"
  },
  {
    "text": "appreciate that testing for",
    "start": "135480",
    "end": "137360"
  },
  {
    "text": " saying it out loud put my foot",
    "start": "137360",
    "end": "140280"
  },
  {
    "text": "down now um all right clearly if you",
    "start": "140280",
    "end": "143360"
  },
  {
    "text": "write valuable test the code coverage is",
    "start": "143360",
    "end": "145360"
  },
  {
    "text": "a great Ally a high value of code",
    "start": "145360",
    "end": "147959"
  },
  {
    "text": "coverage helps you with risk mitigation",
    "start": "147959",
    "end": "149920"
  },
  {
    "text": "High coverage code reduces the risk of",
    "start": "149920",
    "end": "151560"
  },
  {
    "text": "undiscovered defects if a piece of code",
    "start": "151560",
    "end": "154440"
  },
  {
    "text": "isn't covered it will likely contain",
    "start": "154440",
    "end": "156440"
  },
  {
    "text": "bugs okay I don't agree with that",
    "start": "156440",
    "end": "158400"
  },
  {
    "text": "statement just in general I do not think",
    "start": "158400",
    "end": "162280"
  },
  {
    "text": "that you can say either or because most",
    "start": "162280",
    "end": "165440"
  },
  {
    "text": "the code you write is Happy path code",
    "start": "165440",
    "end": "168360"
  },
  {
    "text": "and most the codes you write or and most",
    "start": "168360",
    "end": "170680"
  },
  {
    "text": "the code that's tested is Happy path",
    "start": "170680",
    "end": "172200"
  },
  {
    "text": "code and those are the easiest ones to",
    "start": "172200",
    "end": "173720"
  },
  {
    "text": "get right it's all the other parts of it",
    "start": "173720",
    "end": "178440"
  },
  {
    "text": "uh code is destined to evolve over time",
    "start": "178440",
    "end": "180400"
  },
  {
    "text": "if you ensure that most of your code",
    "start": "180400",
    "end": "181840"
  },
  {
    "text": "coverage is covered by tests whenever",
    "start": "181840",
    "end": "183760"
  },
  {
    "text": "you'll add some more code you'll",
    "start": "183760",
    "end": "185080"
  },
  {
    "text": "discover which parts of the existing",
    "start": "185080",
    "end": "186319"
  },
  {
    "text": "system are impacted by your changes if",
    "start": "186319",
    "end": "188280"
  },
  {
    "text": "you update the production code and no",
    "start": "188280",
    "end": "189760"
  },
  {
    "text": "test failed it might be a bad sign you",
    "start": "189760",
    "end": "192280"
  },
  {
    "text": "probably need to cover your code you are",
    "start": "192280",
    "end": "194120"
  },
  {
    "text": "modifying with enough tests I don't know",
    "start": "194120",
    "end": "195560"
  },
  {
    "text": "if I actually agree with the statement",
    "start": "195560",
    "end": "197319"
  },
  {
    "text": "either again if you update your code and",
    "start": "197319",
    "end": "199760"
  },
  {
    "text": "no test fail I don't see how that's bad",
    "start": "199760",
    "end": "202000"
  },
  {
    "text": "or",
    "start": "202000",
    "end": "203280"
  },
  {
    "text": "good I think more like this if a piece",
    "start": "203280",
    "end": "205840"
  },
  {
    "text": "of code isn't covered then you can't be",
    "start": "205840",
    "end": "207760"
  },
  {
    "text": "sure it doesn't contain a bug okay but",
    "start": "207760",
    "end": "210280"
  },
  {
    "text": "then I would give you the opposite a",
    "start": "210280",
    "end": "211920"
  },
  {
    "text": "axim if a code is covered you can't be",
    "start": "211920",
    "end": "214519"
  },
  {
    "text": "sure it contains a bug like I I don't I",
    "start": "214519",
    "end": "217280"
  },
  {
    "text": "don't think you can like that that's",
    "start": "217280",
    "end": "219879"
  },
  {
    "text": "what I'm saying I think the difficulty",
    "start": "219879",
    "end": "221159"
  },
  {
    "text": "here is that there is these statements",
    "start": "221159",
    "end": "224720"
  },
  {
    "text": "these statements mean nothing in the",
    "start": "224720",
    "end": "226319"
  },
  {
    "text": "sense like this this statement means",
    "start": "226319",
    "end": "228080"
  },
  {
    "text": "literally nothing the sky is blue when",
    "start": "228080",
    "end": "230640"
  },
  {
    "text": "it's not orange you're like yeah sure",
    "start": "230640",
    "end": "233480"
  },
  {
    "text": "but it's orange sometimes also you know",
    "start": "233480",
    "end": "235439"
  },
  {
    "text": "when the sun's like setting and stuff",
    "start": "235439",
    "end": "236799"
  },
  {
    "text": "it's kind of getting a little orangey",
    "start": "236799",
    "end": "238239"
  },
  {
    "text": "and you're like well yeah but we're",
    "start": "238239",
    "end": "239239"
  },
  {
    "text": "talking about the blue and you're like",
    "start": "239239",
    "end": "240519"
  },
  {
    "text": "okay cool what are you saying I don't",
    "start": "240519",
    "end": "242680"
  },
  {
    "text": "get it 100% code coverage is still",
    "start": "242680",
    "end": "244480"
  },
  {
    "text": "useful to find dead code how you covered",
    "start": "244480",
    "end": "246400"
  },
  {
    "text": "100% of your code how do you know it's",
    "start": "246400",
    "end": "247599"
  },
  {
    "text": "dead like like isn't it the opposite is",
    "start": "247599",
    "end": "250120"
  },
  {
    "text": "it what you're saying the literal",
    "start": "250120",
    "end": "251239"
  },
  {
    "text": "opposite if your test test 100% of your",
    "start": "251239",
    "end": "253120"
  },
  {
    "text": "interface all of your code should run no",
    "start": "253120",
    "end": "255680"
  },
  {
    "text": "that's that's not 100% coverage is not",
    "start": "255680",
    "end": "257680"
  },
  {
    "text": "coverage of interfaces it's coverage of",
    "start": "257680",
    "end": "259880"
  },
  {
    "text": "code it's in fact the opposite if you",
    "start": "259880",
    "end": "262600"
  },
  {
    "text": "have 100% code coverage you're certainly",
    "start": "262600",
    "end": "265120"
  },
  {
    "text": "not getting a good insight into dead",
    "start": "265120",
    "end": "267320"
  },
  {
    "text": "code all right guidance uh let's see",
    "start": "267320",
    "end": "270320"
  },
  {
    "text": "code coverage ensures that critical",
    "start": "270320",
    "end": "271800"
  },
  {
    "text": "parts of your application are tested",
    "start": "271800",
    "end": "273680"
  },
  {
    "text": "thoroughly also not true good test focus",
    "start": "273680",
    "end": "276560"
  },
  {
    "text": "on the functional aspects of code what",
    "start": "276560",
    "end": "278520"
  },
  {
    "text": "rather than the technical aspects how",
    "start": "278520",
    "end": "281000"
  },
  {
    "text": "I'd have to think about that statement",
    "start": "281000",
    "end": "282240"
  },
  {
    "text": "more I'm not really sure I understand it",
    "start": "282240",
    "end": "284560"
  },
  {
    "text": "a good test Suite is safety net against",
    "start": "284560",
    "end": "287120"
  },
  {
    "text": "regressions this is fine I think this is",
    "start": "287120",
    "end": "289639"
  },
  {
    "text": "true this last statement is very very",
    "start": "289639",
    "end": "291080"
  },
  {
    "text": "true if you have a known bug and you",
    "start": "291080",
    "end": "293400"
  },
  {
    "text": "ensure that you put stuff in it does",
    "start": "293400",
    "end": "295880"
  },
  {
    "text": "mean that you will probably not make",
    "start": "295880",
    "end": "297400"
  },
  {
    "text": "that bug again right now you may make it",
    "start": "297400",
    "end": "299400"
  },
  {
    "text": "in new in in an extravagant way but it's",
    "start": "299400",
    "end": "302320"
  },
  {
    "text": "unlikely you will create the same Oopsy",
    "start": "302320",
    "end": "304360"
  },
  {
    "text": "Daisy more than once again this goes",
    "start": "304360",
    "end": "305800"
  },
  {
    "text": "back to the exact same thing that I've",
    "start": "305800",
    "end": "307039"
  },
  {
    "text": "talked about uh chat is dumb where I",
    "start": "307039",
    "end": "309639"
  },
  {
    "text": "test the things I don't",
    "start": "309639",
    "end": "312000"
  },
  {
    "text": "like I don't know I can get correct",
    "start": "312000",
    "end": "315479"
  },
  {
    "text": "first try like window spec ensuring that",
    "start": "315479",
    "end": "318720"
  },
  {
    "text": "I can create a window do all the stuff",
    "start": "318720",
    "end": "320759"
  },
  {
    "text": "and close a window I know I could",
    "start": "320759",
    "end": "322919"
  },
  {
    "text": "probably add some more tests and",
    "start": "322919",
    "end": "324319"
  },
  {
    "text": "different stuff with a you know",
    "start": "324319",
    "end": "325720"
  },
  {
    "text": "specification all this kind of stuff but",
    "start": "325720",
    "end": "327440"
  },
  {
    "text": "I wasn't I could not do all this once",
    "start": "327440",
    "end": "329199"
  },
  {
    "text": "and test it was extremely difficult",
    "start": "329199",
    "end": "331360"
  },
  {
    "text": "actually doing going through the process",
    "start": "331360",
    "end": "333280"
  },
  {
    "text": "of testing and un testing required me to",
    "start": "333280",
    "end": "335280"
  },
  {
    "text": "close down Vim or clear out the Lu cash",
    "start": "335280",
    "end": "337720"
  },
  {
    "text": "rebr bring everything back in re-execute",
    "start": "337720",
    "end": "339639"
  },
  {
    "text": "a script seeing if the results were",
    "start": "339639",
    "end": "341600"
  },
  {
    "text": "correct instead I could just write",
    "start": "341600",
    "end": "343000"
  },
  {
    "text": "something that can just tell me those",
    "start": "343000",
    "end": "344000"
  },
  {
    "text": "things very very quick that just feels",
    "start": "344000",
    "end": "346080"
  },
  {
    "text": "easier this was even harder to get right",
    "start": "346080",
    "end": "348440"
  },
  {
    "text": "right doing a caching mechanism ensuring",
    "start": "348440",
    "end": "350720"
  },
  {
    "text": "that from a string I could actually",
    "start": "350720",
    "end": "352199"
  },
  {
    "text": "build out the correct display from a",
    "start": "352199",
    "end": "354360"
  },
  {
    "text": "string I could not get this right first",
    "start": "354360",
    "end": "356280"
  },
  {
    "text": "try this was ex this was an extremely",
    "start": "356280",
    "end": "359120"
  },
  {
    "text": "difficult piece of code code to get",
    "start": "359120",
    "end": "360440"
  },
  {
    "text": "right first try as you can see very easy",
    "start": "360440",
    "end": "362400"
  },
  {
    "text": "to goof this up especially with",
    "start": "362400",
    "end": "363479"
  },
  {
    "text": "one-based indexing one-based indexing",
    "start": "363479",
    "end": "365800"
  },
  {
    "text": "the death of all programmers by the way",
    "start": "365800",
    "end": "367919"
  },
  {
    "text": "um I found it to be very difficult to",
    "start": "367919",
    "end": "369759"
  },
  {
    "text": "reason about so this makes perfect sense",
    "start": "369759",
    "end": "371479"
  },
  {
    "text": "why you'd want to run over this right",
    "start": "371479",
    "end": "373199"
  },
  {
    "text": "like why you'd want to test this because",
    "start": "373199",
    "end": "374720"
  },
  {
    "text": "I don't think I could ever get this",
    "start": "374720",
    "end": "376000"
  },
  {
    "text": "right in one try at all ever for any",
    "start": "376000",
    "end": "378639"
  },
  {
    "text": "reason right and it's just so much",
    "start": "378639",
    "end": "380639"
  },
  {
    "text": "faster to have a function I can run and",
    "start": "380639",
    "end": "382120"
  },
  {
    "text": "test it over and over again so yeah I'm",
    "start": "382120",
    "end": "384199"
  },
  {
    "text": "happy about that I've covered",
    "start": "384199",
    "end": "385280"
  },
  {
    "text": "regressions now I won't goof up messing",
    "start": "385280",
    "end": "387280"
  },
  {
    "text": "that up Lua y one y one Lua uh code",
    "start": "387280",
    "end": "390599"
  },
  {
    "text": "coverage highlights areas that need more",
    "start": "390599",
    "end": "391960"
  },
  {
    "text": "attention it guides developers in",
    "start": "391960",
    "end": "393680"
  },
  {
    "text": "writing additional tests where necessary",
    "start": "393680",
    "end": "395720"
  },
  {
    "text": "again I mean that that that assumes this",
    "start": "395720",
    "end": "397800"
  },
  {
    "text": "axim is true and that the inverse isn't",
    "start": "397800",
    "end": "400319"
  },
  {
    "text": "right there's a lot of assumptions made",
    "start": "400319",
    "end": "401599"
  },
  {
    "text": "in there the limitations of code",
    "start": "401599",
    "end": "403000"
  },
  {
    "text": "coverage while code coverage is valuable",
    "start": "403000",
    "end": "404639"
  },
  {
    "text": "it has limitations false sense of",
    "start": "404639",
    "end": "405880"
  },
  {
    "text": "security achieving 100% code coverage",
    "start": "405880",
    "end": "407479"
  },
  {
    "text": "doesn't guarantee bug free software it's",
    "start": "407479",
    "end": "409520"
  },
  {
    "text": "possible to have well- covered code that",
    "start": "409520",
    "end": "410919"
  },
  {
    "text": "contains a subtle defects this is",
    "start": "410919",
    "end": "413000"
  },
  {
    "text": "especially true when mocking",
    "start": "413000",
    "end": "414000"
  },
  {
    "text": "dependencies oh boy every time you mock",
    "start": "414000",
    "end": "417440"
  },
  {
    "text": "you have just stated that you understand",
    "start": "417440",
    "end": "419160"
  },
  {
    "text": "the verse for that mock and you will be",
    "start": "419160",
    "end": "421560"
  },
  {
    "text": "able to represents all of its behaviors",
    "start": "421560",
    "end": "423479"
  },
  {
    "text": "properly mocking is particularly",
    "start": "423479",
    "end": "426160"
  },
  {
    "text": "egregious when uh when discovering",
    "start": "426160",
    "end": "427800"
  },
  {
    "text": "problems I can't tell you how many",
    "start": "427800",
    "end": "429599"
  },
  {
    "text": "things I have discovered in production",
    "start": "429599",
    "end": "432639"
  },
  {
    "text": "or in code where the mock makes a false",
    "start": "432639",
    "end": "435080"
  },
  {
    "text": "assumption about production so not only",
    "start": "435080",
    "end": "437720"
  },
  {
    "text": "do you have a test that tests something",
    "start": "437720",
    "end": "439960"
  },
  {
    "text": "that no longer exists in production but",
    "start": "439960",
    "end": "442560"
  },
  {
    "text": "it also guards you from getting the",
    "start": "442560",
    "end": "444280"
  },
  {
    "text": "actual answer correct mocks are",
    "start": "444280",
    "end": "447160"
  },
  {
    "text": "literally the devil they're the the",
    "start": "447160",
    "end": "449800"
  },
  {
    "text": "devil for what it's worth we add about",
    "start": "449800",
    "end": "451560"
  },
  {
    "text": "we added 100% uh coverage to get our",
    "start": "451560",
    "end": "453599"
  },
  {
    "text": "devs to actually write any tests along",
    "start": "453599",
    "end": "455560"
  },
  {
    "text": "with their PR otherwise they just wait",
    "start": "455560",
    "end": "457160"
  },
  {
    "text": "till it breaks before writing another",
    "start": "457160",
    "end": "458479"
  },
  {
    "text": "test I'm actually not necessarily",
    "start": "458479",
    "end": "460440"
  },
  {
    "text": "opposed to that uh surprisingly easy to",
    "start": "460440",
    "end": "463120"
  },
  {
    "text": "keep your coverage over 80% in short",
    "start": "463120",
    "end": "464919"
  },
  {
    "text": "when someone complains about 100% code",
    "start": "464919",
    "end": "466599"
  },
  {
    "text": "coverage thing we explain that it's a",
    "start": "466599",
    "end": "467720"
  },
  {
    "text": "culture thing to try to get devs to be",
    "start": "467720",
    "end": "468919"
  },
  {
    "text": "good citizens so here so here's the",
    "start": "468919",
    "end": "470919"
  },
  {
    "text": "question I think you need to ask",
    "start": "470919",
    "end": "472280"
  },
  {
    "text": "yourself why aren't test WR why are devs",
    "start": "472280",
    "end": "475360"
  },
  {
    "text": "not writing tests my assumption is that",
    "start": "475360",
    "end": "478000"
  },
  {
    "text": "whatever the environment is makes it",
    "start": "478000",
    "end": "479960"
  },
  {
    "text": "hard to write tests to test specific",
    "start": "479960",
    "end": "482599"
  },
  {
    "text": "things CU you can't tell me that no devs",
    "start": "482599",
    "end": "484759"
  },
  {
    "text": "writing code that's not difficult that",
    "start": "484759",
    "end": "486280"
  },
  {
    "text": "they can't get right in the first try so",
    "start": "486280",
    "end": "488360"
  },
  {
    "text": "if they can have an iteration cycle",
    "start": "488360",
    "end": "490720"
  },
  {
    "text": "that's",
    "start": "490720",
    "end": "492120"
  },
  {
    "text": "directly better than trying to run the",
    "start": "492120",
    "end": "494720"
  },
  {
    "text": "entire program then there's your problem",
    "start": "494720",
    "end": "497560"
  },
  {
    "text": "I mean that's another reason why I write",
    "start": "497560",
    "end": "499159"
  },
  {
    "text": "test is because guess what it is a",
    "start": "499159",
    "end": "501159"
  },
  {
    "text": "thousand times easier testing this in a",
    "start": "501159",
    "end": "504000"
  },
  {
    "text": "test than it is trying to test it while",
    "start": "504000",
    "end": "506039"
  },
  {
    "text": "running it and so whenever you get into",
    "start": "506039",
    "end": "508599"
  },
  {
    "text": "this part where people aren't writing",
    "start": "508599",
    "end": "510560"
  },
  {
    "text": "tests I often think the environment to",
    "start": "510560",
    "end": "512560"
  },
  {
    "text": "write tests is more difficult to test",
    "start": "512560",
    "end": "515518"
  },
  {
    "text": "and run than the thing itself yeah the",
    "start": "515519",
    "end": "518719"
  },
  {
    "text": "en is often the problem in reality uh",
    "start": "518719",
    "end": "521880"
  },
  {
    "text": "the reality is writing testable code is",
    "start": "521880",
    "end": "523360"
  },
  {
    "text": "hard and most devs is new this is also",
    "start": "523360",
    "end": "525240"
  },
  {
    "text": "very very true a lot of people don't",
    "start": "525240",
    "end": "527880"
  },
  {
    "text": "know how to write testable code that is",
    "start": "527880",
    "end": "530040"
  },
  {
    "text": "a very fair statement you're using a",
    "start": "530040",
    "end": "532920"
  },
  {
    "text": "logical fallacy so are you uh the",
    "start": "532920",
    "end": "534800"
  },
  {
    "text": "existence of bad tests is not an",
    "start": "534800",
    "end": "536320"
  },
  {
    "text": "argument against 100% code coverage of",
    "start": "536320",
    "end": "538640"
  },
  {
    "text": "course the tests have to be effective as",
    "start": "538640",
    "end": "540160"
  },
  {
    "text": "well when safety is uh by far the top",
    "start": "540160",
    "end": "542680"
  },
  {
    "text": "priority example in software for",
    "start": "542680",
    "end": "544279"
  },
  {
    "text": "airplanes or x-ray machines remember I I",
    "start": "544279",
    "end": "548000"
  },
  {
    "text": "don't see why you shouldn't have 100%",
    "start": "548000",
    "end": "549480"
  },
  {
    "text": "test coverage I guarantee you you could",
    "start": "549480",
    "end": "551079"
  },
  {
    "text": "have had 100% test coverage and still",
    "start": "551079",
    "end": "552760"
  },
  {
    "text": "had that x-ray machine problem but",
    "start": "552760",
    "end": "554360"
  },
  {
    "text": "you're doing like the literal exact",
    "start": "554360",
    "end": "556079"
  },
  {
    "text": "opposite problem 100% code coverage does",
    "start": "556079",
    "end": "558560"
  },
  {
    "text": "not mean the software is safe either",
    "start": "558560",
    "end": "560800"
  },
  {
    "text": "right and so it's just like my argument",
    "start": "560800",
    "end": "562720"
  },
  {
    "text": "is that we should make good tests for",
    "start": "562720",
    "end": "565200"
  },
  {
    "text": "things that are very valuable we should",
    "start": "565200",
    "end": "568360"
  },
  {
    "text": "not make tests for the sake of making a",
    "start": "568360",
    "end": "571760"
  },
  {
    "text": "test I don't think x-ray machines are",
    "start": "571760",
    "end": "573600"
  },
  {
    "text": "simple I never said that I would most",
    "start": "573600",
    "end": "575959"
  },
  {
    "text": "certainly have never said that I just",
    "start": "575959",
    "end": "578040"
  },
  {
    "text": "don't think that you can make those",
    "start": "578040",
    "end": "579880"
  },
  {
    "text": "statements right thek 25 mentioned let's",
    "start": "579880",
    "end": "582720"
  },
  {
    "text": "go yeah exactly for those that don't",
    "start": "582720",
    "end": "584839"
  },
  {
    "text": "know there's a couple people that died",
    "start": "584839",
    "end": "586160"
  },
  {
    "text": "because of this uh race condition",
    "start": "586160",
    "end": "587959"
  },
  {
    "text": "effectively that happened while the arm",
    "start": "587959",
    "end": "590000"
  },
  {
    "text": "was",
    "start": "590000",
    "end": "590800"
  },
  {
    "text": "moving if you reset a value the value",
    "start": "590800",
    "end": "593519"
  },
  {
    "text": "wasn't accepted despite the UI still",
    "start": "593519",
    "end": "595240"
  },
  {
    "text": "showing it and guess what pretty much",
    "start": "595240",
    "end": "597440"
  },
  {
    "text": "guaranteed that a unit test would have",
    "start": "597440",
    "end": "598839"
  },
  {
    "text": "definitely thought that that was fine",
    "start": "598839",
    "end": "600959"
  },
  {
    "text": "let risk determine the testing",
    "start": "600959",
    "end": "602320"
  },
  {
    "text": "conditions when it comes to any of these",
    "start": "602320",
    "end": "603720"
  },
  {
    "text": "other things I would much rather see",
    "start": "603720",
    "end": "605360"
  },
  {
    "text": "tiger style I'd much rather see tons of",
    "start": "605360",
    "end": "608040"
  },
  {
    "text": "asserts negative space and a ton of",
    "start": "608040",
    "end": "610399"
  },
  {
    "text": "simulation testing on these things right",
    "start": "610399",
    "end": "612760"
  },
  {
    "text": "I would much rather see that because",
    "start": "612760",
    "end": "615120"
  },
  {
    "text": "you're going to because you could use",
    "start": "615120",
    "end": "616399"
  },
  {
    "text": "code coverage from your simulation",
    "start": "616399",
    "end": "617959"
  },
  {
    "text": "testing and you could say we are testing",
    "start": "617959",
    "end": "620040"
  },
  {
    "text": "100% of the code with simulation testing",
    "start": "620040",
    "end": "622560"
  },
  {
    "text": "and at least that's way more believable",
    "start": "622560",
    "end": "624800"
  },
  {
    "text": "at least at that point I'm like okay now",
    "start": "624800",
    "end": "626519"
  },
  {
    "text": "we actually have real things what it",
    "start": "626519",
    "end": "628440"
  },
  {
    "text": "does mean by testable code testable code",
    "start": "628440",
    "end": "630120"
  },
  {
    "text": "is really really simple let's pretend I",
    "start": "630120",
    "end": "632399"
  },
  {
    "text": "have a function Fu and inside function",
    "start": "632399",
    "end": "635360"
  },
  {
    "text": "FU by the way this is Lua so just deal",
    "start": "635360",
    "end": "637440"
  },
  {
    "text": "with it inside function Fu I go to the",
    "start": "637440",
    "end": "640959"
  },
  {
    "text": "uh go to the uh server for some",
    "start": "640959",
    "end": "644360"
  },
  {
    "text": "data right and then I uh do some things",
    "start": "644360",
    "end": "648800"
  },
  {
    "text": "to ah things",
    "start": "648800",
    "end": "651279"
  },
  {
    "text": "to uh data",
    "start": "651279",
    "end": "654920"
  },
  {
    "text": "right right in here this is very hard",
    "start": "654920",
    "end": "657880"
  },
  {
    "text": "code to test this is very hard code to",
    "start": "657880",
    "end": "659920"
  },
  {
    "text": "test you have to have something that you",
    "start": "659920",
    "end": "661320"
  },
  {
    "text": "could override say go to the server you",
    "start": "661320",
    "end": "663240"
  },
  {
    "text": "have to dependency inject at like a at",
    "start": "663240",
    "end": "665200"
  },
  {
    "text": "like a a level right you know it's much",
    "start": "665200",
    "end": "667399"
  },
  {
    "text": "nicer Fu",
    "start": "667399",
    "end": "670279"
  },
  {
    "text": "data this is very easy to test because",
    "start": "670279",
    "end": "673519"
  },
  {
    "text": "this on the other hand I can just make",
    "start": "673519",
    "end": "676480"
  },
  {
    "text": "up the different shapes I need that I",
    "start": "676480",
    "end": "678959"
  },
  {
    "text": "think are well tested or difficult to",
    "start": "678959",
    "end": "680880"
  },
  {
    "text": "produce and I can test that really",
    "start": "680880",
    "end": "682720"
  },
  {
    "text": "simple it's I mean that's really that's",
    "start": "682720",
    "end": "684639"
  },
  {
    "text": "how you write testable code right it's",
    "start": "684639",
    "end": "686760"
  },
  {
    "text": "it's it's like as simple as that test me",
    "start": "686760",
    "end": "689600"
  },
  {
    "text": "Daddy okay anyways uh they focus on",
    "start": "689600",
    "end": "691560"
  },
  {
    "text": "lines not Behavior code coverage doesn't",
    "start": "691560",
    "end": "693360"
  },
  {
    "text": "consider the quality of test it",
    "start": "693360",
    "end": "694600"
  },
  {
    "text": "guarantees that the line uh that the",
    "start": "694600",
    "end": "696040"
  },
  {
    "text": "test covers all possible scenarios it",
    "start": "696040",
    "end": "698279"
  },
  {
    "text": "touches all possible lines doesn't cover",
    "start": "698279",
    "end": "700880"
  },
  {
    "text": "all possible scenarios some code paths",
    "start": "700880",
    "end": "702880"
  },
  {
    "text": "execution handling rare conditions are",
    "start": "702880",
    "end": "704399"
  },
  {
    "text": "too complex to cover High coverage",
    "start": "704399",
    "end": "706160"
  },
  {
    "text": "doesn't uh necessarily mean thorough",
    "start": "706160",
    "end": "707800"
  },
  {
    "text": "testing facts okay practical reasons why",
    "start": "707800",
    "end": "710000"
  },
  {
    "text": "code coverage percentage can be",
    "start": "710000",
    "end": "711200"
  },
  {
    "text": "misleading for the sake of this article",
    "start": "711200",
    "end": "712639"
  },
  {
    "text": "I've created a dummy. net API project",
    "start": "712639",
    "end": "714560"
  },
  {
    "text": "with the typical three layers controller",
    "start": "714560",
    "end": "716320"
  },
  {
    "text": "service and",
    "start": "716320",
    "end": "717720"
  },
  {
    "text": "repository uh it contains contains a",
    "start": "717720",
    "end": "719480"
  },
  {
    "text": "controller with two end points okay so",
    "start": "719480",
    "end": "721120"
  },
  {
    "text": "we got one endpoint un Universal weather",
    "start": "721120",
    "end": "723920"
  },
  {
    "text": "forecasting controller uh we got low HP",
    "start": "723920",
    "end": "726279"
  },
  {
    "text": "G we innumerable weather forecast",
    "start": "726279",
    "end": "728240"
  },
  {
    "text": "weather service by locations to list",
    "start": "728240",
    "end": "730440"
  },
  {
    "text": "weather get my Min Planet weather Min",
    "start": "730440",
    "end": "733279"
  },
  {
    "text": "Planet whatever Universal stuff Weather",
    "start": "733279",
    "end": "735320"
  },
  {
    "text": "Service another one of these I don't",
    "start": "735320",
    "end": "737399"
  },
  {
    "text": "really know this pattern I don't know",
    "start": "737399",
    "end": "738480"
  },
  {
    "text": "what I'm looking at I innumerable",
    "start": "738480",
    "end": "740040"
  },
  {
    "text": "weather by locations argument out of uh",
    "start": "740040",
    "end": "742680"
  },
  {
    "text": "argument exception throw if less than",
    "start": "742680",
    "end": "744560"
  },
  {
    "text": "this weird way to throw exceptions but",
    "start": "744560",
    "end": "746519"
  },
  {
    "text": "whatever do this I really hate when",
    "start": "746519",
    "end": "749199"
  },
  {
    "text": "people program logic like this into a",
    "start": "749199",
    "end": "751680"
  },
  {
    "text": "function throw if less than or equal you",
    "start": "751680",
    "end": "754320"
  },
  {
    "text": "know it's like way cooler just if",
    "start": "754320",
    "end": "757240"
  },
  {
    "text": "location is less than or equal to zero",
    "start": "757240",
    "end": "760360"
  },
  {
    "text": "throw out of range exception you know",
    "start": "760360",
    "end": "763600"
  },
  {
    "text": "how much nicer it is to just have that",
    "start": "763600",
    "end": "766959"
  },
  {
    "text": "can we just all agree that this type of",
    "start": "766959",
    "end": "768800"
  },
  {
    "text": "stuff is just just why have one more",
    "start": "768800",
    "end": "771680"
  },
  {
    "text": "level of indirection why can we just",
    "start": "771680",
    "end": "774560"
  },
  {
    "text": "stop can we just stop and then right",
    "start": "774560",
    "end": "776839"
  },
  {
    "text": "afterwards doing this Mr Safety Safety",
    "start": "776839",
    "end": "779600"
  },
  {
    "text": "you toss in a non squirly brace if",
    "start": "779600",
    "end": "781440"
  },
  {
    "text": "statement you're being an evil",
    "start": "781440",
    "end": "782800"
  },
  {
    "text": "individual okay you can't do that you",
    "start": "782800",
    "end": "785040"
  },
  {
    "text": "can't do that we can't actually that's",
    "start": "785040",
    "end": "787399"
  },
  {
    "text": "crazy evil okay this is way more",
    "start": "787399",
    "end": "790880"
  },
  {
    "text": "terrifying this is way more terrifying",
    "start": "790880",
    "end": "793360"
  },
  {
    "text": "than anything else anyways okay do a",
    "start": "793360",
    "end": "796360"
  },
  {
    "text": "bunch of crap more of this stuff blah",
    "start": "796360",
    "end": "798399"
  },
  {
    "text": "blah blah blah okay fantastic finally",
    "start": "798399",
    "end": "800120"
  },
  {
    "text": "the service calls the repository",
    "start": "800120",
    "end": "801480"
  },
  {
    "text": "admitted for brevity just a bunch of",
    "start": "801480",
    "end": "803519"
  },
  {
    "text": "items of in memory lists then I created",
    "start": "803519",
    "end": "806519"
  },
  {
    "text": "an nunit test project to generate some",
    "start": "806519",
    "end": "808720"
  },
  {
    "text": "uh unit test okay let's see what the",
    "start": "808720",
    "end": "810399"
  },
  {
    "text": "unit tests are all right so we got some",
    "start": "810399",
    "end": "812000"
  },
  {
    "text": "setup we got some tear Downs oh we got",
    "start": "812000",
    "end": "813360"
  },
  {
    "text": "some mocks oh you're done effed up",
    "start": "813360",
    "end": "815399"
  },
  {
    "text": "you're done effed up already this class",
    "start": "815399",
    "end": "817199"
  },
  {
    "text": "covers two cases both related to the",
    "start": "817199",
    "end": "818600"
  },
  {
    "text": "forecast by location method of service",
    "start": "818600",
    "end": "820680"
  },
  {
    "text": "case one the location exists in the",
    "start": "820680",
    "end": "822240"
  },
  {
    "text": "repository this method must return the",
    "start": "822240",
    "end": "823639"
  },
  {
    "text": "related information okay this is what we",
    "start": "823639",
    "end": "826000"
  },
  {
    "text": "expect here's the new clay thing we do",
    "start": "826000",
    "end": "828720"
  },
  {
    "text": "this we tell it to hey you get these",
    "start": "828720",
    "end": "831399"
  },
  {
    "text": "functions right here do this guy right",
    "start": "831399",
    "end": "833600"
  },
  {
    "text": "here now we got it okay great you've",
    "start": "833600",
    "end": "836120"
  },
  {
    "text": "tested that your mock is fantastic your",
    "start": "836120",
    "end": "838199"
  },
  {
    "text": "mock real nice real nice mock there case",
    "start": "838199",
    "end": "841600"
  },
  {
    "text": "two the location does not exist uh in",
    "start": "841600",
    "end": "843279"
  },
  {
    "text": "the repository and the method should",
    "start": "843279",
    "end": "844600"
  },
  {
    "text": "throw location not found exception do a",
    "start": "844600",
    "end": "846639"
  },
  {
    "text": "little bit of this one null get a little",
    "start": "846639",
    "end": "848959"
  },
  {
    "text": "location assert catch this okay",
    "start": "848959",
    "end": "851399"
  },
  {
    "text": "fantastic all right when I run the code",
    "start": "851399",
    "end": "853560"
  },
  {
    "text": "coverage report I see the following",
    "start": "853560",
    "end": "854720"
  },
  {
    "text": "results line covered 16% branches",
    "start": "854720",
    "end": "856519"
  },
  {
    "text": "covered 25% fantastic test coverage 16%",
    "start": "856519",
    "end": "859440"
  },
  {
    "text": "of lines 25% in branches shown in the",
    "start": "859440",
    "end": "861160"
  },
  {
    "text": "chart above delving into the details of",
    "start": "861160",
    "end": "862480"
  },
  {
    "text": "the Weather Service class we can see",
    "start": "862480",
    "end": "863519"
  },
  {
    "text": "that we have reached 100% code coverage",
    "start": "863519",
    "end": "865160"
  },
  {
    "text": "of forecast by location",
    "start": "865160",
    "end": "867800"
  },
  {
    "text": "method I hope you don't test that",
    "start": "867800",
    "end": "869920"
  },
  {
    "text": "anymore look at that you got 100%",
    "start": "869920",
    "end": "872399"
  },
  {
    "text": "coverage we got 100%",
    "start": "872399",
    "end": "876279"
  },
  {
    "text": "coverage you don't need to test that",
    "start": "876279",
    "end": "878639"
  },
  {
    "text": "right right I think everybody can see",
    "start": "878639",
    "end": "881720"
  },
  {
    "text": "the bug",
    "start": "881720",
    "end": "883120"
  },
  {
    "text": "right can everyone see the can everyone",
    "start": "883120",
    "end": "885360"
  },
  {
    "text": "see the",
    "start": "885360",
    "end": "886399"
  },
  {
    "text": "bug they haven't tested this thing right",
    "start": "886399",
    "end": "888720"
  },
  {
    "text": "here right they haven't tested if your",
    "start": "888720",
    "end": "890759"
  },
  {
    "text": "argument is out of",
    "start": "890759",
    "end": "893639"
  },
  {
    "text": "is if if it's out of range can't see the",
    "start": "893639",
    "end": "897279"
  },
  {
    "text": "screen well too bad I don't think I can",
    "start": "897279",
    "end": "898759"
  },
  {
    "text": "relase zoom in it's an",
    "start": "898759",
    "end": "900399"
  },
  {
    "text": "image argument out of exception it's",
    "start": "900399",
    "end": "903120"
  },
  {
    "text": "it's it's this line up",
    "start": "903120",
    "end": "904800"
  },
  {
    "text": "here it's this one every single time you",
    "start": "904800",
    "end": "908160"
  },
  {
    "text": "run by this code of course you run this",
    "start": "908160",
    "end": "910279"
  },
  {
    "text": "line now what you don't see is that",
    "start": "910279",
    "end": "912600"
  },
  {
    "text": "underneath the hood this function has",
    "start": "912600",
    "end": "916639"
  },
  {
    "text": "not covered code so then you end up",
    "start": "916639",
    "end": "918720"
  },
  {
    "text": "testing the function to make sure that",
    "start": "918720",
    "end": "920199"
  },
  {
    "text": "that function works correctly so you'll",
    "start": "920199",
    "end": "922320"
  },
  {
    "text": "notice that you get a 100% code coverage",
    "start": "922320",
    "end": "924079"
  },
  {
    "text": "you have you can test that this thing",
    "start": "924079",
    "end": "925880"
  },
  {
    "text": "throws properly and you test that this",
    "start": "925880",
    "end": "928079"
  },
  {
    "text": "function works and 100% code coverage",
    "start": "928079",
    "end": "930399"
  },
  {
    "text": "but you actually haven't tested to see",
    "start": "930399",
    "end": "931600"
  },
  {
    "text": "if this function throws when you hit",
    "start": "931600",
    "end": "933519"
  },
  {
    "text": "there you actually haven't tested the",
    "start": "933519",
    "end": "935839"
  },
  {
    "text": "the the most important case of this",
    "start": "935839",
    "end": "937399"
  },
  {
    "text": "function which is the rare event all",
    "start": "937399",
    "end": "942160"
  },
  {
    "text": "right let's do this this is Fant this is",
    "start": "942160",
    "end": "944120"
  },
  {
    "text": "this is a very good example by the way",
    "start": "944120",
    "end": "945800"
  },
  {
    "text": "let's review the code on your question",
    "start": "945800",
    "end": "946959"
  },
  {
    "text": "blah blah only tests covered by two",
    "start": "946959",
    "end": "948639"
  },
  {
    "text": "cases location exists location does not",
    "start": "948639",
    "end": "950319"
  },
  {
    "text": "exist however there are no test to cover",
    "start": "950319",
    "end": "952079"
  },
  {
    "text": "the following question uh the location",
    "start": "952079",
    "end": "954160"
  },
  {
    "text": "uh is less than zero the location is",
    "start": "954160",
    "end": "955720"
  },
  {
    "text": "exactly zero the repository throws an",
    "start": "955720",
    "end": "958160"
  },
  {
    "text": "exception right now that exception is",
    "start": "958160",
    "end": "959639"
  },
  {
    "text": "not handled the location does not exist",
    "start": "959639",
    "end": "961600"
  },
  {
    "text": "but it has no weather forecast info or",
    "start": "961600",
    "end": "964199"
  },
  {
    "text": "the location does exist but it has no",
    "start": "964199",
    "end": "965680"
  },
  {
    "text": "weather forecast info is this a valid",
    "start": "965680",
    "end": "967920"
  },
  {
    "text": "result or should we have thrown another",
    "start": "967920",
    "end": "969680"
  },
  {
    "text": "Uh custom exception so we have 100% code",
    "start": "969680",
    "end": "971880"
  },
  {
    "text": "coverage for this method yet we have",
    "start": "971880",
    "end": "973040"
  },
  {
    "text": "plenty of uncovered",
    "start": "973040",
    "end": "974959"
  },
  {
    "text": "cases you can cheat the result by adding",
    "start": "974959",
    "end": "977199"
  },
  {
    "text": "pointless tests yes so this is where the",
    "start": "977199",
    "end": "979040"
  },
  {
    "text": "100% gets so dangerous is that you",
    "start": "979040",
    "end": "981639"
  },
  {
    "text": "create tests to increase the code",
    "start": "981639",
    "end": "983519"
  },
  {
    "text": "coverage but you're not testing the",
    "start": "983519",
    "end": "985639"
  },
  {
    "text": "thing right so if I tested the exception",
    "start": "985639",
    "end": "988959"
  },
  {
    "text": "throw if less than",
    "start": "988959",
    "end": "991040"
  },
  {
    "text": "zero I don't actually test it in my real",
    "start": "991040",
    "end": "994079"
  },
  {
    "text": "function I just test it in the synthetic",
    "start": "994079",
    "end": "995759"
  },
  {
    "text": "way and then I get this really weird",
    "start": "995759",
    "end": "997959"
  },
  {
    "text": "sounds like bad unit testing practices",
    "start": "997959",
    "end": "999720"
  },
  {
    "text": "it actually no you know what it sounds",
    "start": "999720",
    "end": "1000839"
  },
  {
    "text": "like it sounds like every unit testing",
    "start": "1000839",
    "end": "1002279"
  },
  {
    "text": "practices of all time it's just what it",
    "start": "1002279",
    "end": "1004639"
  },
  {
    "text": "is sad padding it's so dangerous this is",
    "start": "1004639",
    "end": "1006360"
  },
  {
    "text": "why I don't like 100% code coverage is",
    "start": "1006360",
    "end": "1008959"
  },
  {
    "text": "this exact same reason is that you end",
    "start": "1008959",
    "end": "1010360"
  },
  {
    "text": "up writing you it hides to you the real",
    "start": "1010360",
    "end": "1013040"
  },
  {
    "text": "reason what things are not being tested",
    "start": "1013040",
    "end": "1014959"
  },
  {
    "text": "to demonstrate it we can create a single",
    "start": "1014959",
    "end": "1016480"
  },
  {
    "text": "uh test method to reach 100% C coverage",
    "start": "1016480",
    "end": "1018600"
  },
  {
    "text": "with the repository without even knowing",
    "start": "1018600",
    "end": "1020040"
  },
  {
    "text": "what it actually",
    "start": "1020040",
    "end": "1021399"
  },
  {
    "text": "does totally useless test get location",
    "start": "1021399",
    "end": "1023800"
  },
  {
    "text": "byid planet Jupiter uh equal one one",
    "start": "1023800",
    "end": "1027120"
  },
  {
    "text": "equals to one nice nailed it here we are",
    "start": "1027120",
    "end": "1030839"
  },
  {
    "text": "we've reached 53% uh total code coverage",
    "start": "1030839",
    "end": "1033160"
  },
  {
    "text": "by adding a single test does it provide",
    "start": "1033160",
    "end": "1035038"
  },
  {
    "text": "any",
    "start": "1035039",
    "end": "1036280"
  },
  {
    "text": "value",
    "start": "1036280",
    "end": "1039000"
  },
  {
    "text": "Society fantastic you can cheat by",
    "start": "1039000",
    "end": "1041280"
  },
  {
    "text": "excluding p uh parts of the code in C",
    "start": "1041280",
    "end": "1043520"
  },
  {
    "text": "there's a handy attribute you can apply",
    "start": "1043520",
    "end": "1044918"
  },
  {
    "text": "to methods and classes exclude from code",
    "start": "1044919",
    "end": "1046558"
  },
  {
    "text": "coverage while this attribute can be",
    "start": "1046559",
    "end": "1048319"
  },
  {
    "text": "useful for classes you cannot test it",
    "start": "1048319",
    "end": "1050039"
  },
  {
    "text": "can be uh it can be used to inflate the",
    "start": "1050039",
    "end": "1051679"
  },
  {
    "text": "code coverage percentage by applying",
    "start": "1051679",
    "end": "1053160"
  },
  {
    "text": "classes and methods you don't want to",
    "start": "1053160",
    "end": "1054480"
  },
  {
    "text": "test maybe because you are Lazy",
    "start": "1054480",
    "end": "1057400"
  },
  {
    "text": "H that's actually pretty funny that you",
    "start": "1057400",
    "end": "1059360"
  },
  {
    "text": "can do that I don't even know I didn't",
    "start": "1059360",
    "end": "1061679"
  },
  {
    "text": "even actually",
    "start": "1061679",
    "end": "1062919"
  },
  {
    "text": "know one would argue that it's better",
    "start": "1062919",
    "end": "1065000"
  },
  {
    "text": "than nothing and I'd say that one",
    "start": "1065000",
    "end": "1066559"
  },
  {
    "text": "argument was",
    "start": "1066559",
    "end": "1069280"
  },
  {
    "text": "shitty let's go let's go 100% we're",
    "start": "1069280",
    "end": "1073559"
  },
  {
    "text": "destroying it boys I never said I know",
    "start": "1073559",
    "end": "1075960"
  },
  {
    "text": "you didn't say",
    "start": "1075960",
    "end": "1077400"
  },
  {
    "text": "that I I know you didn't say that but",
    "start": "1077400",
    "end": "1080000"
  },
  {
    "text": "still people are getting this idea",
    "start": "1080000",
    "end": "1082080"
  },
  {
    "text": "there's people that argue that 100% is",
    "start": "1082080",
    "end": "1083799"
  },
  {
    "text": "good I I'd say 100% means nothing that's",
    "start": "1083799",
    "end": "1087640"
  },
  {
    "text": "what I say 100% code coverage means",
    "start": "1087640",
    "end": "1091320"
  },
  {
    "text": "nothing if you say I have a project with",
    "start": "1091320",
    "end": "1093679"
  },
  {
    "text": "90% code coverage 60% code coverage and",
    "start": "1093679",
    "end": "1096960"
  },
  {
    "text": "100% code coverage which one has the",
    "start": "1096960",
    "end": "1099159"
  },
  {
    "text": "best coverage I would say I don't know",
    "start": "1099159",
    "end": "1101880"
  },
  {
    "text": "that's what I would say I would say I",
    "start": "1101880",
    "end": "1103679"
  },
  {
    "text": "have literally no clue which one",
    "start": "1103679",
    "end": "1106200"
  },
  {
    "text": "contains the least amount of bugs I",
    "start": "1106200",
    "end": "1107760"
  },
  {
    "text": "could say the one was Zero % probably",
    "start": "1107760",
    "end": "1109760"
  },
  {
    "text": "contains more bugs than one with some",
    "start": "1109760",
    "end": "1111640"
  },
  {
    "text": "percent 0% I can at least say the",
    "start": "1111640",
    "end": "1114280"
  },
  {
    "text": "likelihood of bugs is higher you have",
    "start": "1114280",
    "end": "1116919"
  },
  {
    "text": "even run your happy paths but everything",
    "start": "1116919",
    "end": "1119240"
  },
  {
    "text": "else I don't know I think most stems",
    "start": "1119240",
    "end": "1121320"
  },
  {
    "text": "from management not de well there's risk",
    "start": "1121320",
    "end": "1122720"
  },
  {
    "text": "factors too like people have talked",
    "start": "1122720",
    "end": "1123720"
  },
  {
    "text": "about like medical equipment like what",
    "start": "1123720",
    "end": "1124880"
  },
  {
    "text": "do you do with medical equipment do you",
    "start": "1124880",
    "end": "1126200"
  },
  {
    "text": "do 100% test coverage Pro probably I I I",
    "start": "1126200",
    "end": "1130000"
  },
  {
    "text": "honestly I think for not getting sued",
    "start": "1130000",
    "end": "1131760"
  },
  {
    "text": "you probably do that what's the correct",
    "start": "1131760",
    "end": "1134159"
  },
  {
    "text": "percent what's the correct percentage",
    "start": "1134159",
    "end": "1135679"
  },
  {
    "text": "you do on medical equipment or",
    "start": "1135679",
    "end": "1137000"
  },
  {
    "text": "self-driving cars that's where things",
    "start": "1137000",
    "end": "1139240"
  },
  {
    "text": "get really tricky and I'm totally on",
    "start": "1139240",
    "end": "1140840"
  },
  {
    "text": "that I'm totally on that team where it's",
    "start": "1140840",
    "end": "1143000"
  },
  {
    "text": "just like what's the proper amount I",
    "start": "1143000",
    "end": "1144799"
  },
  {
    "text": "don't know the problem is is that I want",
    "start": "1144799",
    "end": "1146760"
  },
  {
    "text": "good test coverage uh as we saw High",
    "start": "1146760",
    "end": "1149039"
  },
  {
    "text": "code coverage is not enough it's a good",
    "start": "1149039",
    "end": "1150320"
  },
  {
    "text": "starting point but it must not be the",
    "start": "1150320",
    "end": "1151640"
  },
  {
    "text": "final goal we can indeed focus our",
    "start": "1151640",
    "end": "1153600"
  },
  {
    "text": "efforts in different areas testing",
    "start": "1153600",
    "end": "1154960"
  },
  {
    "text": "quality prioritize writing meaningful",
    "start": "1154960",
    "end": "1156400"
  },
  {
    "text": "tests again this is is it's",
    "start": "1156400",
    "end": "1159200"
  },
  {
    "text": "meaningless I mean for the average",
    "start": "1159200",
    "end": "1161200"
  },
  {
    "text": "product not talking let's not talk about",
    "start": "1161200",
    "end": "1162840"
  },
  {
    "text": "the specialty cases I think the best way",
    "start": "1162840",
    "end": "1167320"
  },
  {
    "text": "the best way to have a well-running",
    "start": "1167320",
    "end": "1169520"
  },
  {
    "text": "project is to have is to have tests",
    "start": "1169520",
    "end": "1173840"
  },
  {
    "text": "easier to write and run to test your",
    "start": "1173840",
    "end": "1176120"
  },
  {
    "text": "project than to run your project",
    "start": "1176120",
    "end": "1179320"
  },
  {
    "text": "itself and I think as long as you can",
    "start": "1179320",
    "end": "1181520"
  },
  {
    "text": "always have tests that drive any",
    "start": "1181520",
    "end": "1183960"
  },
  {
    "text": "difficult feature I think you'll have",
    "start": "1183960",
    "end": "1185320"
  },
  {
    "text": "simply a better you'll have a better",
    "start": "1185320",
    "end": "1188039"
  },
  {
    "text": "experience that's the only way I think",
    "start": "1188039",
    "end": "1189799"
  },
  {
    "text": "it could be done focus on edge cases",
    "start": "1189799",
    "end": "1191919"
  },
  {
    "text": "boundaries values uh all this yep agree",
    "start": "1191919",
    "end": "1194200"
  },
  {
    "text": "with that uh exploratory testing manual",
    "start": "1194200",
    "end": "1196360"
  },
  {
    "text": "testing complement automated testing ooh",
    "start": "1196360",
    "end": "1199720"
  },
  {
    "text": "yes exploratory testing uncovers issues",
    "start": "1199720",
    "end": "1202120"
  },
  {
    "text": "that automate tests might miss it's true",
    "start": "1202120",
    "end": "1205080"
  },
  {
    "text": "it's that's called production by the way",
    "start": "1205080",
    "end": "1206840"
  },
  {
    "text": "manual testing is called production and",
    "start": "1206840",
    "end": "1208400"
  },
  {
    "text": "canaries okay you log and you find out",
    "start": "1208400",
    "end": "1211240"
  },
  {
    "text": "why things change okay that's called",
    "start": "1211240",
    "end": "1212760"
  },
  {
    "text": "production instead of just measuring",
    "start": "1212760",
    "end": "1214240"
  },
  {
    "text": "coverage consider mutation testing",
    "start": "1214240",
    "end": "1215840"
  },
  {
    "text": "introduced artificial defects and check",
    "start": "1215840",
    "end": "1217559"
  },
  {
    "text": "to see uh if the test catch them",
    "start": "1217559",
    "end": "1219159"
  },
  {
    "text": "negative space programming uh finally my",
    "start": "1219159",
    "end": "1221440"
  },
  {
    "text": "suggestion is to focus on integration",
    "start": "1221440",
    "end": "1222760"
  },
  {
    "text": "test rather than on unit tests this",
    "start": "1222760",
    "end": "1224440"
  },
  {
    "text": "testing strategy is called testing",
    "start": "1224440",
    "end": "1225640"
  },
  {
    "text": "diamond yeah that's where is it isn't it",
    "start": "1225640",
    "end": "1228039"
  },
  {
    "text": "testing pyramid",
    "start": "1228039",
    "end": "1229280"
  },
  {
    "text": "I don't know about the diamond I'm not",
    "start": "1229280",
    "end": "1230720"
  },
  {
    "text": "sure about this whole Diamond business",
    "start": "1230720",
    "end": "1233120"
  },
  {
    "text": "anyways this was actually really good I",
    "start": "1233120",
    "end": "1235320"
  },
  {
    "text": "like I mean I I mean I like I loved the",
    "start": "1235320",
    "end": "1237400"
  },
  {
    "text": "the thing he showed by the way this was",
    "start": "1237400",
    "end": "1239240"
  },
  {
    "text": "fantastic I loved the example testing",
    "start": "1239240",
    "end": "1242559"
  },
  {
    "text": "the reverse funnel I do like integration",
    "start": "1242559",
    "end": "1244640"
  },
  {
    "text": "testing but they're also can be very",
    "start": "1244640",
    "end": "1246039"
  },
  {
    "text": "difficult setting up your project in",
    "start": "1246039",
    "end": "1247640"
  },
  {
    "text": "integration testing has to be in the",
    "start": "1247640",
    "end": "1250120"
  },
  {
    "text": "culture and thought of first it's so",
    "start": "1250120",
    "end": "1252400"
  },
  {
    "text": "hard to go back and try to make",
    "start": "1252400",
    "end": "1254320"
  },
  {
    "text": "integration testing work I think 100%",
    "start": "1254320",
    "end": "1256360"
  },
  {
    "text": "becomes popular if it lets you have the",
    "start": "1256360",
    "end": "1258000"
  },
  {
    "text": "false sense of security and you don't",
    "start": "1258000",
    "end": "1259559"
  },
  {
    "text": "have to review tests to actually make",
    "start": "1259559",
    "end": "1260880"
  },
  {
    "text": "them meaningful fairly Diamond because",
    "start": "1260880",
    "end": "1262480"
  },
  {
    "text": "you have more integration tests I guess",
    "start": "1262480",
    "end": "1264000"
  },
  {
    "text": "wasn't that like supposed to be like the",
    "start": "1264000",
    "end": "1265400"
  },
  {
    "text": "I thought it was always this right is",
    "start": "1265400",
    "end": "1267360"
  },
  {
    "text": "that you have like the tip is unit and",
    "start": "1267360",
    "end": "1270360"
  },
  {
    "text": "then you have this whole people give",
    "start": "1270360",
    "end": "1272480"
  },
  {
    "text": "different names and honestly these names",
    "start": "1272480",
    "end": "1274279"
  },
  {
    "text": "mean different things to different",
    "start": "1274279",
    "end": "1275480"
  },
  {
    "text": "people you know you have functional",
    "start": "1275480",
    "end": "1276840"
  },
  {
    "text": "tests I'm pretty sure most people cannot",
    "start": "1276840",
    "end": "1278520"
  },
  {
    "text": "even tell you the difference between a",
    "start": "1278520",
    "end": "1280360"
  },
  {
    "text": "functional test and an integration test",
    "start": "1280360",
    "end": "1282480"
  },
  {
    "text": "or end to end where is end to end in",
    "start": "1282480",
    "end": "1284760"
  },
  {
    "text": "this is functional right here and then",
    "start": "1284760",
    "end": "1286440"
  },
  {
    "text": "end to end or is integration end to end",
    "start": "1286440",
    "end": "1288799"
  },
  {
    "text": "how do most people feel about it right",
    "start": "1288799",
    "end": "1291360"
  },
  {
    "text": "most I I I think that this whole part of",
    "start": "1291360",
    "end": "1293360"
  },
  {
    "text": "the triangle most people don't have very",
    "start": "1293360",
    "end": "1295320"
  },
  {
    "text": "good definitions for and then at the end",
    "start": "1295320",
    "end": "1297279"
  },
  {
    "text": "of the day",
    "start": "1297279",
    "end": "1299520"
  },
  {
    "text": "Illuminati a Jen",
    "start": "1299520",
    "end": "1303200"
  }
]