[
  {
    "text": "so you might be wondering why is this",
    "start": "80",
    "end": "2520"
  },
  {
    "text": "not the prime engine I mean maybe you're",
    "start": "2520",
    "end": "4000"
  },
  {
    "text": "thinking wow this guy looks kind of like",
    "start": "4000",
    "end": "5879"
  },
  {
    "text": "the prime engine flip cut this part out",
    "start": "5879",
    "end": "8639"
  },
  {
    "text": "but the problem is prime has been in the",
    "start": "8639",
    "end": "11000"
  },
  {
    "text": "valley you may have seen him it's a day",
    "start": "11000",
    "end": "12759"
  },
  {
    "text": "in the life of an engineer that",
    "start": "12759",
    "end": "14719"
  },
  {
    "text": "accidentally stayed up all night um and",
    "start": "14719",
    "end": "16760"
  },
  {
    "text": "now he's at",
    "start": "16760",
    "end": "19279"
  },
  {
    "text": "twitchcon BR um so you've got discount",
    "start": "19640",
    "end": "23199"
  },
  {
    "text": "Prime uh the interns are running the",
    "start": "23199",
    "end": "25439"
  },
  {
    "text": "startup right now while the CEO's away",
    "start": "25439",
    "end": "27519"
  },
  {
    "text": "so we're going to react to some",
    "start": "27519",
    "end": "29480"
  },
  {
    "text": "different arti Les today so chat you can",
    "start": "29480",
    "end": "31240"
  },
  {
    "text": "all say hello to YouTube hopefully my",
    "start": "31240",
    "end": "33120"
  },
  {
    "text": "javascript's faster than your rest GC",
    "start": "33120",
    "end": "35160"
  },
  {
    "text": "your D alic and let your threads down",
    "start": "35160",
    "end": "37760"
  },
  {
    "text": "let's talk performance I go over some of",
    "start": "37760",
    "end": "41280"
  },
  {
    "text": "the performance trade-offs that are made",
    "start": "41280",
    "end": "42719"
  },
  {
    "text": "with different approaches but the moral",
    "start": "42719",
    "end": "44559"
  },
  {
    "text": "of the story is that performance is",
    "start": "44559",
    "end": "45760"
  },
  {
    "text": "complicated and very use case dependent",
    "start": "45760",
    "end": "48280"
  },
  {
    "text": "nice it depends called it one of the",
    "start": "48280",
    "end": "50840"
  },
  {
    "text": "primary trade-offs considerations is CPU",
    "start": "50840",
    "end": "53440"
  },
  {
    "text": "vers memory but the memory side of that",
    "start": "53440",
    "end": "55879"
  },
  {
    "text": "equation can get very complicated one of",
    "start": "55879",
    "end": "59399"
  },
  {
    "text": "the most enjoyable at least from my",
    "start": "59399",
    "end": "61399"
  },
  {
    "text": "point of view parts of being a software",
    "start": "61399",
    "end": "63320"
  },
  {
    "text": "architect is mentoring developers and",
    "start": "63320",
    "end": "65560"
  },
  {
    "text": "help expose them to New Concepts and",
    "start": "65560",
    "end": "66960"
  },
  {
    "text": "larger implications of technical",
    "start": "66960",
    "end": "68799"
  },
  {
    "text": "decisions nice uh that's good this is",
    "start": "68799",
    "end": "72200"
  },
  {
    "text": "actually good uh way better that your",
    "start": "72200",
    "end": "74000"
  },
  {
    "text": "software architect actually helps other",
    "start": "74000",
    "end": "75960"
  },
  {
    "text": "developers in your company to understand",
    "start": "75960",
    "end": "77640"
  },
  {
    "text": "what's happening right and that they",
    "start": "77640",
    "end": "80960"
  },
  {
    "text": "actually are like doing something",
    "start": "80960",
    "end": "82000"
  },
  {
    "text": "instead of just like sitting all by",
    "start": "82000",
    "end": "83159"
  },
  {
    "text": "themselves not not doing anything um",
    "start": "83159",
    "end": "86280"
  },
  {
    "text": "it's also fun uh it's also a fun to",
    "start": "86280",
    "end": "90520"
  },
  {
    "text": "Foster okay nice that one's not on me",
    "start": "90520",
    "end": "92200"
  },
  {
    "text": "it's also fun to foster a learning",
    "start": "92200",
    "end": "93920"
  },
  {
    "text": "environment by occasionally letting a",
    "start": "93920",
    "end": "95159"
  },
  {
    "text": "Brash Dev fall in their face a bit of",
    "start": "95159",
    "end": "96880"
  },
  {
    "text": "the pay forward from when I was young",
    "start": "96880",
    "end": "98079"
  },
  {
    "text": "Brash develper nice nice that's really",
    "start": "98079",
    "end": "101520"
  },
  {
    "text": "good uh one of the most oh I already",
    "start": "101520",
    "end": "103560"
  },
  {
    "text": "read this paragraph a perfect example is",
    "start": "103560",
    "end": "105600"
  },
  {
    "text": "when a green Dev challenges your",
    "start": "105600",
    "end": "108040"
  },
  {
    "text": "recommendations reality being an",
    "start": "108040",
    "end": "109600"
  },
  {
    "text": "architect you will always make the wrong",
    "start": "109600",
    "end": "110759"
  },
  {
    "text": "choice in others eyes true lots of",
    "start": "110759",
    "end": "112799"
  },
  {
    "text": "people no matter what the choices made",
    "start": "112799",
    "end": "115159"
  },
  {
    "text": "will just be against it because their",
    "start": "115159",
    "end": "117079"
  },
  {
    "text": "boss said so just be honest chat you",
    "start": "117079",
    "end": "119159"
  },
  {
    "text": "know that you're in inclined to not like",
    "start": "119159",
    "end": "120880"
  },
  {
    "text": "when someone else makes the choice",
    "start": "120880",
    "end": "122079"
  },
  {
    "text": "instead of what you do even if you would",
    "start": "122079",
    "end": "123439"
  },
  {
    "text": "have made the same choice at the same t",
    "start": "123439",
    "end": "125920"
  },
  {
    "text": "uh go to bet that their approach is the",
    "start": "125920",
    "end": "127439"
  },
  {
    "text": "best approach I know far from everything",
    "start": "127439",
    "end": "129280"
  },
  {
    "text": "but I've been around long enough to see",
    "start": "129280",
    "end": "130520"
  },
  {
    "text": "a",
    "start": "130520",
    "end": "131480"
  },
  {
    "text": "sucker all right unfortunately I'm going",
    "start": "131480",
    "end": "134120"
  },
  {
    "text": "to like this article I think I can",
    "start": "134120",
    "end": "135599"
  },
  {
    "text": "already tell uh that I think I'm going",
    "start": "135599",
    "end": "137879"
  },
  {
    "text": "to like this article even though it's",
    "start": "137879",
    "end": "140360"
  },
  {
    "text": "saying javascript's faster than rust so",
    "start": "140360",
    "end": "143400"
  },
  {
    "text": "I feel conflicted as my first time solo",
    "start": "143400",
    "end": "146360"
  },
  {
    "text": "reacting on this channel of course it's",
    "start": "146360",
    "end": "148599"
  },
  {
    "text": "going to be I'm going to like the",
    "start": "148599",
    "end": "150480"
  },
  {
    "text": "article and Prime's going to hate me but",
    "start": "150480",
    "end": "152000"
  },
  {
    "text": "okay how could I resist I'll take that",
    "start": "152000",
    "end": "153680"
  },
  {
    "text": "bet and then years later I'll write a",
    "start": "153680",
    "end": "155400"
  },
  {
    "text": "post about it",
    "start": "155400",
    "end": "157760"
  },
  {
    "text": "this oh this is this is great I love",
    "start": "157760",
    "end": "160519"
  },
  {
    "text": "this yeah I'll let you make a bad choice",
    "start": "160519",
    "end": "161959"
  },
  {
    "text": "so I can write a blog post about it",
    "start": "161959",
    "end": "163280"
  },
  {
    "text": "later gigachad all right the bet I",
    "start": "163280",
    "end": "166239"
  },
  {
    "text": "honestly don't remember the specifics",
    "start": "166239",
    "end": "167680"
  },
  {
    "text": "it's been a few years but I do recall",
    "start": "167680",
    "end": "169400"
  },
  {
    "text": "that I recommended using nodejs",
    "start": "169400",
    "end": "171000"
  },
  {
    "text": "primarily based on the knowledge set of",
    "start": "171000",
    "end": "172640"
  },
  {
    "text": "an existing team available libraries and",
    "start": "172640",
    "end": "174640"
  },
  {
    "text": "other technical debt that makes sense",
    "start": "174640",
    "end": "176879"
  },
  {
    "text": "that one's the clearest reason that you",
    "start": "176879",
    "end": "178440"
  },
  {
    "text": "would continue using nodejs a pretty",
    "start": "178440",
    "end": "180959"
  },
  {
    "text": "Junior Dev I don't know what his looks",
    "start": "180959",
    "end": "183080"
  },
  {
    "text": "have to do with it but that's fine",
    "start": "183080",
    "end": "184200"
  },
  {
    "text": "wanted to show off their fancy new",
    "start": "184200",
    "end": "185519"
  },
  {
    "text": "Bachelors of computer science and show",
    "start": "185519",
    "end": "186959"
  },
  {
    "text": "off their Mad Skills maybe they knew I",
    "start": "186959",
    "end": "189760"
  },
  {
    "text": "only minored in computer science and",
    "start": "189760",
    "end": "191480"
  },
  {
    "text": "assumed I was simply unaware of how",
    "start": "191480",
    "end": "193640"
  },
  {
    "text": "computers actually worked to be fair",
    "start": "193640",
    "end": "195519"
  },
  {
    "text": "after 20 years I have come to believe",
    "start": "195519",
    "end": "197159"
  },
  {
    "text": "they are just magic uh this is a common",
    "start": "197159",
    "end": "199799"
  },
  {
    "text": "scenario chat if you want people to not",
    "start": "199799",
    "end": "203080"
  },
  {
    "text": "like you at your job when you're the new",
    "start": "203080",
    "end": "205640"
  },
  {
    "text": "person you come in and you just act like",
    "start": "205640",
    "end": "207760"
  },
  {
    "text": "everyone else is an idiot not a good",
    "start": "207760",
    "end": "210560"
  },
  {
    "text": "strategy okay not a good strategy I",
    "start": "210560",
    "end": "212879"
  },
  {
    "text": "would recommend being nice and listening",
    "start": "212879",
    "end": "215959"
  },
  {
    "text": "especially when you're young you'll",
    "start": "215959",
    "end": "217599"
  },
  {
    "text": "learn a lot and the people who know",
    "start": "217599",
    "end": "219080"
  },
  {
    "text": "stuff will like you a lot more so it's",
    "start": "219080",
    "end": "220720"
  },
  {
    "text": "just just a little side life Pro tip we",
    "start": "220720",
    "end": "223000"
  },
  {
    "text": "do those in the middle of the Articles",
    "start": "223000",
    "end": "224439"
  },
  {
    "text": "right I don't just I'm not just a screen",
    "start": "224439",
    "end": "226319"
  },
  {
    "text": "reader the names the teen the claim was",
    "start": "226319",
    "end": "229319"
  },
  {
    "text": "something along the lines of the",
    "start": "229319",
    "end": "230720"
  },
  {
    "text": "standard C++ is faster than JavaScript I",
    "start": "230720",
    "end": "233560"
  },
  {
    "text": "mean technically JavaScript is just C++",
    "start": "233560",
    "end": "236360"
  },
  {
    "text": "you know the V8 runtime well you know",
    "start": "236360",
    "end": "238280"
  },
  {
    "text": "sometimes I do some stuff with the V8",
    "start": "238280",
    "end": "239760"
  },
  {
    "text": "runtime in the uh countered by my",
    "start": "239760",
    "end": "242920"
  },
  {
    "text": "stereotypically architect response of it",
    "start": "242920",
    "end": "245239"
  },
  {
    "text": "depends nice maybe I should be a",
    "start": "245239",
    "end": "247760"
  },
  {
    "text": "software architect I say it depends a",
    "start": "247760",
    "end": "250599"
  },
  {
    "text": "lot in fact recently I was almost",
    "start": "250599",
    "end": "253200"
  },
  {
    "text": "cancelled for saying it depends because",
    "start": "253200",
    "end": "255319"
  },
  {
    "text": "I said someone shouldn't just only try",
    "start": "255319",
    "end": "258720"
  },
  {
    "text": "and get a job by quote building in",
    "start": "258720",
    "end": "262040"
  },
  {
    "text": "public and having an online presence and",
    "start": "262040",
    "end": "265040"
  },
  {
    "text": "I was told that applying to jobs through",
    "start": "265040",
    "end": "267800"
  },
  {
    "text": "job application sites was a waste of",
    "start": "267800",
    "end": "270720"
  },
  {
    "text": "time because I said it depends on the",
    "start": "270720",
    "end": "273000"
  },
  {
    "text": "person and their situation and sometimes",
    "start": "273000",
    "end": "275000"
  },
  {
    "text": "you do get jobs from applying to regular",
    "start": "275000",
    "end": "278400"
  },
  {
    "text": "job posts and someone told me that that",
    "start": "278400",
    "end": "281280"
  },
  {
    "text": "was a terrible take and I should be",
    "start": "281280",
    "end": "282840"
  },
  {
    "text": "ashamed of",
    "start": "282840",
    "end": "284360"
  },
  {
    "text": "myself um",
    "start": "284360",
    "end": "287280"
  },
  {
    "text": "so but apparently I could be a software",
    "start": "287280",
    "end": "290120"
  },
  {
    "text": "architect cuz I like to say it depends",
    "start": "290120",
    "end": "292479"
  },
  {
    "text": "even though that's uh I know I should be",
    "start": "292479",
    "end": "294479"
  },
  {
    "text": "just ashamed that I would think of",
    "start": "294479",
    "end": "297080"
  },
  {
    "text": "saying basically you might want to apply",
    "start": "297080",
    "end": "299960"
  },
  {
    "text": "for jobs the normal way as well people",
    "start": "299960",
    "end": "302280"
  },
  {
    "text": "do uh sometimes get hired through that",
    "start": "302280",
    "end": "304479"
  },
  {
    "text": "process should have just bought a fake",
    "start": "304479",
    "end": "306320"
  },
  {
    "text": "mustach I know sorry you should always",
    "start": "306320",
    "end": "307880"
  },
  {
    "text": "be ashamed of fear that's that's a",
    "start": "307880",
    "end": "309960"
  },
  {
    "text": "separate argument but also true the",
    "start": "309960",
    "end": "312800"
  },
  {
    "text": "claim was something along oh yeah we",
    "start": "312800",
    "end": "314360"
  },
  {
    "text": "already read this actually this time for",
    "start": "314360",
    "end": "315840"
  },
  {
    "text": "real um more probably optimize C+",
    "start": "315840",
    "end": "319520"
  },
  {
    "text": "perform better than optimize JavaScript",
    "start": "319520",
    "end": "321199"
  },
  {
    "text": "as there is inescapable overhead and",
    "start": "321199",
    "end": "322880"
  },
  {
    "text": "running JavaScript well you could",
    "start": "322880",
    "end": "324000"
  },
  {
    "text": "probably compile it down to a static",
    "start": "324000",
    "end": "325120"
  },
  {
    "text": "program get to FR to really really try",
    "start": "325120",
    "end": "326800"
  },
  {
    "text": "needless say I like a good challenge and",
    "start": "326800",
    "end": "329919"
  },
  {
    "text": "the result the surprise that the jav",
    "start": "329919",
    "end": "332639"
  },
  {
    "text": "solution was a bit faster than C++",
    "start": "332639",
    "end": "334280"
  },
  {
    "text": "program and more importantly from an",
    "start": "334280",
    "end": "336000"
  },
  {
    "text": "architectural point of view had the",
    "start": "336000",
    "end": "337680"
  },
  {
    "text": "benefit that it was fully maintainable",
    "start": "337680",
    "end": "339319"
  },
  {
    "text": "by the existing team so this is true so",
    "start": "339319",
    "end": "341440"
  },
  {
    "text": "as someone I'll be honest chat I'll be",
    "start": "341440",
    "end": "345240"
  },
  {
    "text": "honest as someone who has snuck rust",
    "start": "345240",
    "end": "348759"
  },
  {
    "text": "into their",
    "start": "348759",
    "end": "350600"
  },
  {
    "text": "job um it was through a series of",
    "start": "350600",
    "end": "355400"
  },
  {
    "text": "really really tricky moves that",
    "start": "355400",
    "end": "357840"
  },
  {
    "text": "eventually made rust a ser serious part",
    "start": "357840",
    "end": "360080"
  },
  {
    "text": "of my day job um it's it's true that",
    "start": "360080",
    "end": "364199"
  },
  {
    "text": "people are terrified to just touch any",
    "start": "364199",
    "end": "366720"
  },
  {
    "text": "part of that program and I actually had",
    "start": "366720",
    "end": "370360"
  },
  {
    "text": "good technical reasons and good like",
    "start": "370360",
    "end": "372000"
  },
  {
    "text": "architectural reasons for why we would",
    "start": "372000",
    "end": "373800"
  },
  {
    "text": "have chosen rust and why it's still",
    "start": "373800",
    "end": "375560"
  },
  {
    "text": "working and running and stuff like that",
    "start": "375560",
    "end": "377800"
  },
  {
    "text": "right",
    "start": "377800",
    "end": "379199"
  },
  {
    "text": "but but people are just terrified about",
    "start": "379199",
    "end": "382000"
  },
  {
    "text": "it because it's rust so this is",
    "start": "382000",
    "end": "384599"
  },
  {
    "text": "something if you're actually trying to",
    "start": "384599",
    "end": "386240"
  },
  {
    "text": "get something done at your work you do",
    "start": "386240",
    "end": "389080"
  },
  {
    "text": "have to thinking about this possibility",
    "start": "389080",
    "end": "391199"
  },
  {
    "text": "of being maintained by the existing team",
    "start": "391199",
    "end": "393400"
  },
  {
    "text": "not that the people aren't smart enough",
    "start": "393400",
    "end": "394919"
  },
  {
    "text": "to learn it necessarily or anything like",
    "start": "394919",
    "end": "396720"
  },
  {
    "text": "that just that people are afraid and",
    "start": "396720",
    "end": "398880"
  },
  {
    "text": "then therefore they don't want to do it",
    "start": "398880",
    "end": "400280"
  },
  {
    "text": "and then it just stays there and never",
    "start": "400280",
    "end": "401440"
  },
  {
    "text": "chains so uh let the choir hold their",
    "start": "401440",
    "end": "403960"
  },
  {
    "text": "tongues and scratch their heads at the",
    "start": "403960",
    "end": "405960"
  },
  {
    "text": "same time yeah I bet you can't do it to",
    "start": "405960",
    "end": "409240"
  },
  {
    "text": "be honest I wasn't 100% sure that it",
    "start": "409240",
    "end": "411080"
  },
  {
    "text": "would win but based on the specific use",
    "start": "411080",
    "end": "413120"
  },
  {
    "text": "cases likely dependence on dynamically",
    "start": "413120",
    "end": "415160"
  },
  {
    "text": "sized memory objects and the developers",
    "start": "415160",
    "end": "417240"
  },
  {
    "text": "inexperience I took an educated guess",
    "start": "417240",
    "end": "419080"
  },
  {
    "text": "okay",
    "start": "419080",
    "end": "420120"
  },
  {
    "text": "so yes uh",
    "start": "420120",
    "end": "423280"
  },
  {
    "text": "this this part uh will definitely play",
    "start": "423280",
    "end": "426599"
  },
  {
    "text": "into into this problem uh which so maybe",
    "start": "426599",
    "end": "430479"
  },
  {
    "text": "the title is just clickbait but that's",
    "start": "430479",
    "end": "431759"
  },
  {
    "text": "fine wait how if you can't guess why",
    "start": "431759",
    "end": "434680"
  },
  {
    "text": "don't worry in my experience most devs",
    "start": "434680",
    "end": "436919"
  },
  {
    "text": "wouldn't know why either the result",
    "start": "436919",
    "end": "438759"
  },
  {
    "text": "flies in the face of the common rule of",
    "start": "438759",
    "end": "440720"
  },
  {
    "text": "thumb that compiled language are fashion",
    "start": "440720",
    "end": "442240"
  },
  {
    "text": "than interpreted and static profession",
    "start": "442240",
    "end": "443879"
  },
  {
    "text": "NVM but this is just a rule of Thum true",
    "start": "443879",
    "end": "446879"
  },
  {
    "text": "um there are no always or",
    "start": "446879",
    "end": "450240"
  },
  {
    "text": "Nevers what's it always or every time I",
    "start": "450240",
    "end": "452280"
  },
  {
    "text": "don't know whatever but uh you got to",
    "start": "452280",
    "end": "454080"
  },
  {
    "text": "look around and be curious okay",
    "start": "454080",
    "end": "457360"
  },
  {
    "text": "surprised that a junior Dev can't make a",
    "start": "457360",
    "end": "458960"
  },
  {
    "text": "good C++ program yeah yeah um there's",
    "start": "458960",
    "end": "462160"
  },
  {
    "text": "some confounding problems to this just",
    "start": "462160",
    "end": "464440"
  },
  {
    "text": "don't do allocations optimize this",
    "start": "464440",
    "end": "466240"
  },
  {
    "text": "keyword in my BP as a naive C++ program",
    "start": "466240",
    "end": "468639"
  },
  {
    "text": "can quickly go off the rails I would",
    "start": "468639",
    "end": "470680"
  },
  {
    "text": "even say not just a naive C++ program in",
    "start": "470680",
    "end": "473599"
  },
  {
    "text": "my experience you could just remove this",
    "start": "473599",
    "end": "476000"
  },
  {
    "text": "part A C++ program can quickly go off",
    "start": "476000",
    "end": "479039"
  },
  {
    "text": "the rate",
    "start": "479039",
    "end": "479919"
  },
  {
    "text": "on the other hand node.js leveraging the",
    "start": "479919",
    "end": "482840"
  },
  {
    "text": "C++ cbas V8 and libuv libraries true as",
    "start": "482840",
    "end": "487280"
  },
  {
    "text": "pre-at sorry I as I said before some",
    "start": "487280",
    "end": "490400"
  },
  {
    "text": "would argue JavaScript is just C++ it's",
    "start": "490400",
    "end": "494080"
  },
  {
    "text": "just a DSL for C++ node V8 blah blah",
    "start": "494080",
    "end": "498039"
  },
  {
    "text": "blah pre-at sorry has made a lot of",
    "start": "498039",
    "end": "500879"
  },
  {
    "text": "strides with optimizing dumb JS to run",
    "start": "500879",
    "end": "502960"
  },
  {
    "text": "fast meaning there are well it's like no",
    "start": "502960",
    "end": "505759"
  },
  {
    "text": "need to be redundant meaning there are",
    "start": "505759",
    "end": "507520"
  },
  {
    "text": "cases where naive JS can beat naive C++",
    "start": "507520",
    "end": "510680"
  },
  {
    "text": "but it's obviously more complicated than",
    "start": "510680",
    "end": "512039"
  },
  {
    "text": "that this is like in some ways kind of a",
    "start": "512039",
    "end": "514719"
  },
  {
    "text": "tautology right in the sense that like",
    "start": "514719",
    "end": "517080"
  },
  {
    "text": "yeah um you can write bad code in all",
    "start": "517080",
    "end": "519959"
  },
  {
    "text": "the languages right you can always write",
    "start": "519959",
    "end": "522518"
  },
  {
    "text": "bad code in all the languages some",
    "start": "522519",
    "end": "524080"
  },
  {
    "text": "languages make it easier to write bad",
    "start": "524080",
    "end": "525600"
  },
  {
    "text": "code some some would just make it harder",
    "start": "525600",
    "end": "527640"
  },
  {
    "text": "uh to write bad code of some kinds but",
    "start": "527640",
    "end": "529640"
  },
  {
    "text": "you can make at least bad code in the",
    "start": "529640",
    "end": "531839"
  },
  {
    "text": "sense of not performant right this is",
    "start": "531839",
    "end": "534279"
  },
  {
    "text": "literally yeah we're we're reacting to",
    "start": "534279",
    "end": "536600"
  },
  {
    "text": "an article right now and look at this we",
    "start": "536600",
    "end": "538040"
  },
  {
    "text": "even have chat up here so so that you",
    "start": "538040",
    "end": "539480"
  },
  {
    "text": "can say wow this is literally primagen",
    "start": "539480",
    "end": "541000"
  },
  {
    "text": "stream where's the meat of the article",
    "start": "541000",
    "end": "543640"
  },
  {
    "text": "um that's we're going to find out I",
    "start": "543640",
    "end": "545399"
  },
  {
    "text": "guess nice Prim never select the first",
    "start": "545399",
    "end": "547000"
  },
  {
    "text": "and last I'm I'm trying to be as",
    "start": "547000",
    "end": "548920"
  },
  {
    "text": "authentic as possible as authentic as",
    "start": "548920",
    "end": "552279"
  },
  {
    "text": "possible uh okay so oh yeah the memory",
    "start": "552279",
    "end": "555560"
  },
  {
    "text": "most developers should be familiar with",
    "start": "555560",
    "end": "557480"
  },
  {
    "text": "the ideas of stacks and heaps but many",
    "start": "557480",
    "end": "559480"
  },
  {
    "text": "don't go deeper than the surface level",
    "start": "559480",
    "end": "561079"
  },
  {
    "text": "characteristics like a stack is linear",
    "start": "561079",
    "end": "562399"
  },
  {
    "text": "and a happens a pile pointers or",
    "start": "562399",
    "end": "563920"
  },
  {
    "text": "something like that um chat have yeah",
    "start": "563920",
    "end": "567720"
  },
  {
    "text": "okay so that's true so they also",
    "start": "567720",
    "end": "569200"
  },
  {
    "text": "probably missed that they these are just",
    "start": "569200",
    "end": "570800"
  },
  {
    "text": "Concepts and there are other approaches",
    "start": "570800",
    "end": "572200"
  },
  {
    "text": "with multiple",
    "start": "572200",
    "end": "573600"
  },
  {
    "text": "implementations low-level Hardware",
    "start": "573600",
    "end": "575519"
  },
  {
    "text": "typically doesn't know what a heap is as",
    "start": "575519",
    "end": "577399"
  },
  {
    "text": "software defines how memory is managed",
    "start": "577399",
    "end": "579640"
  },
  {
    "text": "and the choices made can have massive",
    "start": "579640",
    "end": "581000"
  },
  {
    "text": "impacts on the performance",
    "start": "581000",
    "end": "582079"
  },
  {
    "text": "characteristics of the file",
    "start": "582079",
    "end": "583839"
  },
  {
    "text": "program um okay so you don't want to",
    "start": "583839",
    "end": "586360"
  },
  {
    "text": "know about this blah blah blah that's",
    "start": "586360",
    "end": "588519"
  },
  {
    "text": "fine uh yeah so this is definitely true",
    "start": "588519",
    "end": "592120"
  },
  {
    "text": "I would say most developers don't go",
    "start": "592120",
    "end": "594320"
  },
  {
    "text": "deeper than surface level I would say",
    "start": "594320",
    "end": "595640"
  },
  {
    "text": "most developers just never think about",
    "start": "595640",
    "end": "598000"
  },
  {
    "text": "memory right",
    "start": "598000",
    "end": "601120"
  },
  {
    "text": "right like is that a fair like if you're",
    "start": "601320",
    "end": "603880"
  },
  {
    "text": "just taking all developers like most",
    "start": "603880",
    "end": "605880"
  },
  {
    "text": "developers probably just don't even",
    "start": "605880",
    "end": "607240"
  },
  {
    "text": "think about memory and when they do they",
    "start": "607240",
    "end": "609600"
  },
  {
    "text": "think about it like completely wrong",
    "start": "609600",
    "end": "612279"
  },
  {
    "text": "like they're worried about putting stuff",
    "start": "612279",
    "end": "613839"
  },
  {
    "text": "inside a list when they have like 10",
    "start": "613839",
    "end": "615720"
  },
  {
    "text": "users you know what I mean they're like",
    "start": "615720",
    "end": "618040"
  },
  {
    "text": "oh we can't use a list cuz like and keep",
    "start": "618040",
    "end": "620760"
  },
  {
    "text": "that around CU we have like 10 users you",
    "start": "620760",
    "end": "623680"
  },
  {
    "text": "know uh but that's okay so so agreed so",
    "start": "623680",
    "end": "627079"
  },
  {
    "text": "far agreed so far agreed which as I said",
    "start": "627079",
    "end": "630519"
  },
  {
    "text": "before I'm",
    "start": "630519",
    "end": "632040"
  },
  {
    "text": "feeling bad that I'm agreeing with my",
    "start": "632040",
    "end": "634800"
  },
  {
    "text": "JavaScript is faster than your rust okay",
    "start": "634800",
    "end": "637160"
  },
  {
    "text": "technically so far it's only been C++",
    "start": "637160",
    "end": "639320"
  },
  {
    "text": "though okay so far we've only had C++",
    "start": "639320",
    "end": "642959"
  },
  {
    "text": "all right the cheat garbage collection",
    "start": "642959",
    "end": "645240"
  },
  {
    "text": "sure no JS Sol takes longer to",
    "start": "645240",
    "end": "647920"
  },
  {
    "text": "start has to load and run the script",
    "start": "647920",
    "end": "650000"
  },
  {
    "text": "through its jit compiler but once it's",
    "start": "650000",
    "end": "651320"
  },
  {
    "text": "loaded it has a secret Edge it's garbage",
    "start": "651320",
    "end": "656279"
  },
  {
    "text": "collected okay I don't think that's a",
    "start": "656519",
    "end": "660480"
  },
  {
    "text": "secret",
    "start": "660480",
    "end": "662040"
  },
  {
    "text": "like I'm not I'm not convinced that's a",
    "start": "662040",
    "end": "665120"
  },
  {
    "text": "secret feature of no JS everyone's like",
    "start": "665120",
    "end": "668360"
  },
  {
    "text": "surprised they're up up down down AB",
    "start": "668360",
    "end": "671079"
  },
  {
    "text": "left right left right and they're like",
    "start": "671079",
    "end": "672399"
  },
  {
    "text": "dude I unlocked the secret garbage",
    "start": "672399",
    "end": "675600"
  },
  {
    "text": "collection inside no. JS before I was",
    "start": "675600",
    "end": "678320"
  },
  {
    "text": "manually managing my Js memory in the",
    "start": "678320",
    "end": "681279"
  },
  {
    "text": "C++ program on the other hand the app",
    "start": "681279",
    "end": "683519"
  },
  {
    "text": "routinely created dynamically sized",
    "start": "683519",
    "end": "685320"
  },
  {
    "text": "objects in the Heat and then deleted",
    "start": "685320",
    "end": "687000"
  },
  {
    "text": "them oh no I can't can't believe Prime's",
    "start": "687000",
    "end": "689800"
  },
  {
    "text": "not here it's literally going to be",
    "start": "689800",
    "end": "692760"
  },
  {
    "text": "about reusing",
    "start": "692760",
    "end": "695760"
  },
  {
    "text": "memory this is like Prime's favorite",
    "start": "696920",
    "end": "700079"
  },
  {
    "text": "JavaScript",
    "start": "700079",
    "end": "701560"
  },
  {
    "text": "trick it's literally avoid",
    "start": "701560",
    "end": "704880"
  },
  {
    "text": "allocations avoid allocations is",
    "start": "704880",
    "end": "707000"
  },
  {
    "text": "literally his favorite",
    "start": "707000",
    "end": "708310"
  },
  {
    "text": "[Laughter]",
    "start": "708310",
    "end": "711279"
  },
  {
    "text": "one oh just make it object w i just",
    "start": "711279",
    "end": "713920"
  },
  {
    "text": "reuse the object that way it won't free",
    "start": "713920",
    "end": "715320"
  },
  {
    "text": "the memory we don't have to get the C",
    "start": "715320",
    "end": "716800"
  },
  {
    "text": "you just have them in a circular oh my",
    "start": "716800",
    "end": "719320"
  },
  {
    "text": "goodness I'm sorry Prime sorry for",
    "start": "719320",
    "end": "721440"
  },
  {
    "text": "reading this one uh too bad I guess next",
    "start": "721440",
    "end": "723839"
  },
  {
    "text": "time don't go to twitchcon without",
    "start": "723839",
    "end": "725680"
  },
  {
    "text": "me um okay so they alcate and dealate",
    "start": "725680",
    "end": "729279"
  },
  {
    "text": "the memory Heap over and over again this",
    "start": "729279",
    "end": "730760"
  },
  {
    "text": "is generally not fast true memory things",
    "start": "730760",
    "end": "733320"
  },
  {
    "text": "are slow chat memory things are",
    "start": "733320",
    "end": "736880"
  },
  {
    "text": "slow okay um it depends heavily on what",
    "start": "736880",
    "end": "739440"
  },
  {
    "text": "algorithm is used in the allocator yep",
    "start": "739440",
    "end": "741240"
  },
  {
    "text": "in many cases D alic is particularly",
    "start": "741240",
    "end": "743160"
  },
  {
    "text": "slow and sanitized Alex aren't the cheap",
    "start": "743160",
    "end": "745399"
  },
  {
    "text": "either okay yeah so basically um it's",
    "start": "745399",
    "end": "747680"
  },
  {
    "text": "not free to get new memory and if you're",
    "start": "747680",
    "end": "750519"
  },
  {
    "text": "manually managing your C++ program right",
    "start": "750519",
    "end": "752959"
  },
  {
    "text": "if you're thinking about it then you're",
    "start": "752959",
    "end": "755760"
  },
  {
    "text": "you're going to just be like opening and",
    "start": "755760",
    "end": "757440"
  },
  {
    "text": "closing the same memory you're going to",
    "start": "757440",
    "end": "758880"
  },
  {
    "text": "be alloing and dealling Malik stands for",
    "start": "758880",
    "end": "761760"
  },
  {
    "text": "memory allocation right by the way Prime",
    "start": "761760",
    "end": "764279"
  },
  {
    "text": "um malic and in the JS one the garbage",
    "start": "764279",
    "end": "767480"
  },
  {
    "text": "collector is going to kind of cheat",
    "start": "767480",
    "end": "768440"
  },
  {
    "text": "right so the cheat occurs because the",
    "start": "768440",
    "end": "769519"
  },
  {
    "text": "program runs once and exits no JS runs",
    "start": "769519",
    "end": "771440"
  },
  {
    "text": "the script allocates all the memory",
    "start": "771440",
    "end": "772920"
  },
  {
    "text": "needed but actual removals are postponed",
    "start": "772920",
    "end": "775000"
  },
  {
    "text": "for the garbage collector to take care",
    "start": "775000",
    "end": "776600"
  },
  {
    "text": "of wait so what is this just some random",
    "start": "776600",
    "end": "780839"
  },
  {
    "text": "script I still don't know what the",
    "start": "780839",
    "end": "782760"
  },
  {
    "text": "problem is that they're solving so they",
    "start": "782760",
    "end": "784440"
  },
  {
    "text": "haven't told us any details about the",
    "start": "784440",
    "end": "785880"
  },
  {
    "text": "problem right am I am I missing",
    "start": "785880",
    "end": "788560"
  },
  {
    "text": "something um now garbage question ishly",
    "start": "788560",
    "end": "792040"
  },
  {
    "text": "better or worse than other man memory",
    "start": "792040",
    "end": "793600"
  },
  {
    "text": "management strategies true but in the",
    "start": "793600",
    "end": "795480"
  },
  {
    "text": "case of this proov it pro proved",
    "start": "795480",
    "end": "798480"
  },
  {
    "text": "beneficial as it actually never",
    "start": "798480",
    "end": "800920"
  },
  {
    "text": "ran this is not even like a long running",
    "start": "800920",
    "end": "804480"
  },
  {
    "text": "wait",
    "start": "804480",
    "end": "805639"
  },
  {
    "text": "what it's not even like a long running",
    "start": "805639",
    "end": "808040"
  },
  {
    "text": "process or anything",
    "start": "808040",
    "end": "809600"
  },
  {
    "text": "it's just literally like they they just",
    "start": "809600",
    "end": "812199"
  },
  {
    "text": "ran a script one time not even enough to",
    "start": "812199",
    "end": "814399"
  },
  {
    "text": "trigger garbage collection and then",
    "start": "814399",
    "end": "816040"
  },
  {
    "text": "their mem then they're trying to figure",
    "start": "816040",
    "end": "817680"
  },
  {
    "text": "out which one's faster or",
    "start": "817680",
    "end": "819760"
  },
  {
    "text": "slower why would you even write a C++",
    "start": "819760",
    "end": "822600"
  },
  {
    "text": "thing well okay so why would you even",
    "start": "822600",
    "end": "824639"
  },
  {
    "text": "write C++ but then like besides that why",
    "start": "824639",
    "end": "827480"
  },
  {
    "text": "would you write C++ like for this",
    "start": "827480",
    "end": "832040"
  },
  {
    "text": "problem okay all right now I'm getting",
    "start": "832040",
    "end": "834199"
  },
  {
    "text": "confused does come at a cost no JS",
    "start": "834199",
    "end": "836240"
  },
  {
    "text": "process us more memory than C++ and the",
    "start": "836240",
    "end": "838480"
  },
  {
    "text": "class trade of less he more memory blah",
    "start": "838480",
    "end": "840120"
  },
  {
    "text": "blah blah it was a good trade to win the",
    "start": "840120",
    "end": "841320"
  },
  {
    "text": "bet does this count the whole thing too",
    "start": "841320",
    "end": "843839"
  },
  {
    "text": "even no JS like starting up what is this",
    "start": "843839",
    "end": "847720"
  },
  {
    "text": "problem",
    "start": "847720",
    "end": "850480"
  },
  {
    "text": "cuz I don't know the B only worked",
    "start": "850480",
    "end": "852959"
  },
  {
    "text": "because the vro a naive strategy",
    "start": "852959",
    "end": "854279"
  },
  {
    "text": "implemented correctly a quick way to win",
    "start": "854279",
    "end": "856040"
  },
  {
    "text": "would be to add a memory leak",
    "start": "856040",
    "end": "857360"
  },
  {
    "text": "purposefully keeping all the allocations",
    "start": "857360",
    "end": "858800"
  },
  {
    "text": "memory it would likely use less memory",
    "start": "858800",
    "end": "860680"
  },
  {
    "text": "than nodejs and still be significantly",
    "start": "860680",
    "end": "864480"
  },
  {
    "text": "[Laughter]",
    "start": "864960",
    "end": "867680"
  },
  {
    "text": "faster",
    "start": "867680",
    "end": "870680"
  },
  {
    "text": "what is",
    "start": "870759",
    "end": "871759"
  },
  {
    "text": "this what is this",
    "start": "871759",
    "end": "875879"
  },
  {
    "text": "question oh I've been debated by micro",
    "start": "876120",
    "end": "879079"
  },
  {
    "text": "benchmarks this is almost as",
    "start": "879079",
    "end": "881120"
  },
  {
    "text": "unbelievable as",
    "start": "881120",
    "end": "882839"
  },
  {
    "text": "trut",
    "start": "882839",
    "end": "885639"
  },
  {
    "text": "um no he's pre read this also brings up",
    "start": "885639",
    "end": "889639"
  },
  {
    "text": "an issue with benchmarks often they use",
    "start": "889639",
    "end": "891040"
  },
  {
    "text": "a single metric like Ops for seconds",
    "start": "891040",
    "end": "892720"
  },
  {
    "text": "this is JS C++ perfect example blah blah",
    "start": "892720",
    "end": "895639"
  },
  {
    "text": "blah yeah turns out you need to know",
    "start": "895639",
    "end": "897279"
  },
  {
    "text": "more than what some naive Benchmark did",
    "start": "897279",
    "end": "899639"
  },
  {
    "text": "blah blah blah okay uh modern day",
    "start": "899639",
    "end": "902360"
  },
  {
    "text": "entered rust thank goodness finally rust",
    "start": "902360",
    "end": "905240"
  },
  {
    "text": "is one of my go-to languages nowadays",
    "start": "905240",
    "end": "907240"
  },
  {
    "text": "nice it's got a lot of great modern",
    "start": "907240",
    "end": "908839"
  },
  {
    "text": "features is fast has a great memory",
    "start": "908839",
    "end": "910839"
  },
  {
    "text": "model and it generally leads to safe",
    "start": "910839",
    "end": "912880"
  },
  {
    "text": "codes and unsafe communities it has",
    "start": "912880",
    "end": "914720"
  },
  {
    "text": "drawbacks for sure compile time is still",
    "start": "914720",
    "end": "917000"
  },
  {
    "text": "an issue and it's got some weird",
    "start": "917000",
    "end": "918240"
  },
  {
    "text": "semantics here and there but in general",
    "start": "918240",
    "end": "920120"
  },
  {
    "text": "I highly recommend it you can have a lot",
    "start": "920120",
    "end": "923199"
  },
  {
    "text": "of control over how memory is managed in",
    "start": "923199",
    "end": "924880"
  },
  {
    "text": "Rust but the stack memory follows in",
    "start": "924880",
    "end": "927000"
  },
  {
    "text": "ownership model which creates this",
    "start": "927000",
    "end": "929079"
  },
  {
    "text": "trademark",
    "start": "929079",
    "end": "930880"
  },
  {
    "text": "safety T why not put safety as a TM also",
    "start": "930880",
    "end": "934639"
  },
  {
    "text": "is this officially endorsed by the",
    "start": "934639",
    "end": "936319"
  },
  {
    "text": "foundation one of the projects I'm",
    "start": "936319",
    "end": "938120"
  },
  {
    "text": "currently working on is a fast function",
    "start": "938120",
    "end": "941120"
  },
  {
    "text": "as a service host written in Russ that",
    "start": "941120",
    "end": "942839"
  },
  {
    "text": "executes",
    "start": "942839",
    "end": "944079"
  },
  {
    "text": "WM WM functions it's designed to",
    "start": "944079",
    "end": "947199"
  },
  {
    "text": "securely execute isolated functions very",
    "start": "947199",
    "end": "949120"
  },
  {
    "text": "quickly minimizing the overhead of using",
    "start": "949120",
    "end": "951440"
  },
  {
    "text": "functions as a",
    "start": "951440",
    "end": "952639"
  },
  {
    "text": "service okay chat I'm embarrassed",
    "start": "952639",
    "end": "955560"
  },
  {
    "text": "honestly I'm thinking about turning this",
    "start": "955560",
    "end": "957000"
  },
  {
    "text": "article off imag imagine not typing it's",
    "start": "957000",
    "end": "964399"
  },
  {
    "text": "fast like what is even the point of",
    "start": "965880",
    "end": "969160"
  },
  {
    "text": "having dumb acronyms and so many things",
    "start": "969160",
    "end": "973240"
  },
  {
    "text": "like",
    "start": "973240",
    "end": "974399"
  },
  {
    "text": "blazingly fast like this it it's a it's",
    "start": "974399",
    "end": "979040"
  },
  {
    "text": "shameful really it's shameful uh it's",
    "start": "979040",
    "end": "981880"
  },
  {
    "text": "pretty fast able to get 90k clean",
    "start": "981880",
    "end": "983880"
  },
  {
    "text": "requests per second per core better yet",
    "start": "983880",
    "end": "985560"
  },
  {
    "text": "it can do those total reference memory",
    "start": "985560",
    "end": "986959"
  },
  {
    "text": "20 megab okay what does that have to do",
    "start": "986959",
    "end": "988639"
  },
  {
    "text": "no JS C++ while use no JS as my",
    "start": "988639",
    "end": "990680"
  },
  {
    "text": "Benchmark for reasonable performance go",
    "start": "990680",
    "end": "992360"
  },
  {
    "text": "is used as the dream Target it literally",
    "start": "992360",
    "end": "994759"
  },
  {
    "text": "seems like Prime wrote",
    "start": "994759",
    "end": "997240"
  },
  {
    "text": "this uh it's hard to compare to a",
    "start": "997240",
    "end": "999199"
  },
  {
    "text": "language designed for web services while",
    "start": "999199",
    "end": "1000839"
  },
  {
    "text": "adding the overhead of fast and early",
    "start": "1000839",
    "end": "1003600"
  },
  {
    "text": "versions of the program weren't",
    "start": "1003600",
    "end": "1004639"
  },
  {
    "text": "promising even though they use less than",
    "start": "1004639",
    "end": "1006199"
  },
  {
    "text": "10% of the memory of no JS while it's",
    "start": "1006199",
    "end": "1008000"
  },
  {
    "text": "common to focus on getting something",
    "start": "1008000",
    "end": "1009040"
  },
  {
    "text": "working before optimizing it's not a",
    "start": "1009040",
    "end": "1010240"
  },
  {
    "text": "great feeling to put a ton of work using",
    "start": "1010240",
    "end": "1011560"
  },
  {
    "text": "a fast language only to get beat by",
    "start": "1011560",
    "end": "1013880"
  },
  {
    "text": "novice JavaScript okay so wait use JS in",
    "start": "1013880",
    "end": "1016800"
  },
  {
    "text": "my Ben I'm so con confused this thing",
    "start": "1016800",
    "end": "1020079"
  },
  {
    "text": "runs functions but somehow the job it",
    "start": "1020079",
    "end": "1022240"
  },
  {
    "text": "what does it even do B was pretty clear",
    "start": "1022240",
    "end": "1024600"
  },
  {
    "text": "early on is the memory management each",
    "start": "1024600",
    "end": "1026438"
  },
  {
    "text": "guest function was allocated an array of",
    "start": "1026439",
    "end": "1028240"
  },
  {
    "text": "memory there's a lot of overhead between",
    "start": "1028240",
    "end": "1030280"
  },
  {
    "text": "allocating within the function and also",
    "start": "1030280",
    "end": "1032079"
  },
  {
    "text": "copying data to and from the function's",
    "start": "1032079",
    "end": "1033839"
  },
  {
    "text": "memory and the hosts because of the",
    "start": "1033839",
    "end": "1036079"
  },
  {
    "text": "dynamic data being thrown on the",
    "start": "1036079",
    "end": "1037160"
  },
  {
    "text": "allocator was being hammered from all",
    "start": "1037160",
    "end": "1039079"
  },
  {
    "text": "directions the solution cheat sort of",
    "start": "1039079",
    "end": "1041959"
  },
  {
    "text": "okay so I'm still I'm confused so I",
    "start": "1041959",
    "end": "1044000"
  },
  {
    "text": "guess I'm doing a good job of being",
    "start": "1044000",
    "end": "1045918"
  },
  {
    "text": "reacting like Prime now I think so we'll",
    "start": "1045919",
    "end": "1049080"
  },
  {
    "text": "keep reading and if it doesn't make",
    "start": "1049080",
    "end": "1050400"
  },
  {
    "text": "sense we'll just finish the article and",
    "start": "1050400",
    "end": "1052160"
  },
  {
    "text": "I'll go on a rant about how I don't like",
    "start": "1052160",
    "end": "1054760"
  },
  {
    "text": "jsx now and I do like go templating so",
    "start": "1054760",
    "end": "1057480"
  },
  {
    "text": "that in two weeks when I change my mind",
    "start": "1057480",
    "end": "1059799"
  },
  {
    "text": "then we'll have more content so",
    "start": "1059799",
    "end": "1062280"
  },
  {
    "text": "fundamentally a heap is just a memory",
    "start": "1062280",
    "end": "1064160"
  },
  {
    "text": "that an allocator manages the mapping",
    "start": "1064160",
    "end": "1065840"
  },
  {
    "text": "for the program requests n units of",
    "start": "1065840",
    "end": "1068400"
  },
  {
    "text": "memory and the allocator will find it in",
    "start": "1068400",
    "end": "1069880"
  },
  {
    "text": "available memory pool or Crystal give",
    "start": "1069880",
    "end": "1071559"
  },
  {
    "text": "more memory store store that the units",
    "start": "1071559",
    "end": "1074640"
  },
  {
    "text": "are in use and then return the location",
    "start": "1074640",
    "end": "1075919"
  },
  {
    "text": "pointer of that memory when the program",
    "start": "1075919",
    "end": "1078240"
  },
  {
    "text": "is is done with that memory it tells the",
    "start": "1078240",
    "end": "1079640"
  },
  {
    "text": "allocator and the allocator then updates",
    "start": "1079640",
    "end": "1081559"
  },
  {
    "text": "his mapping to know these units are now",
    "start": "1081559",
    "end": "1082840"
  },
  {
    "text": "available simple right the issue starts",
    "start": "1082840",
    "end": "1085159"
  },
  {
    "text": "to arise when allocating a bunch of",
    "start": "1085159",
    "end": "1086440"
  },
  {
    "text": "different size units of memory with",
    "start": "1086440",
    "end": "1087679"
  },
  {
    "text": "different lifetimes you're going to end",
    "start": "1087679",
    "end": "1088960"
  },
  {
    "text": "up with a lot of fragmentation that",
    "start": "1088960",
    "end": "1090799"
  },
  {
    "text": "amplifies the cost of allocating new",
    "start": "1090799",
    "end": "1093360"
  },
  {
    "text": "memory sure okay this is where he starts",
    "start": "1093360",
    "end": "1095400"
  },
  {
    "text": "the performance going kick in as it's",
    "start": "1095400",
    "end": "1097280"
  },
  {
    "text": "basically its own program just to figure",
    "start": "1097280",
    "end": "1099159"
  },
  {
    "text": "out where to store things obviously",
    "start": "1099159",
    "end": "1100559"
  },
  {
    "text": "there isn't one solution to this problem",
    "start": "1100559",
    "end": "1101840"
  },
  {
    "text": "there are lots of different allocation",
    "start": "1101840",
    "end": "1103440"
  },
  {
    "text": "algorithms from buddies to slabs to",
    "start": "1103440",
    "end": "1105280"
  },
  {
    "text": "blocks each approach has trade-offs",
    "start": "1105280",
    "end": "1107760"
  },
  {
    "text": "meaning you can choose one that fits",
    "start": "1107760",
    "end": "1109200"
  },
  {
    "text": "your use case or just choose the default",
    "start": "1109200",
    "end": "1110559"
  },
  {
    "text": "one like most people",
    "start": "1110559",
    "end": "1111880"
  },
  {
    "text": "do okay so I guess the fast is the thing",
    "start": "1111880",
    "end": "1115960"
  },
  {
    "text": "that's choosing",
    "start": "1115960",
    "end": "1118240"
  },
  {
    "text": "the how the allocator is going to work",
    "start": "1118240",
    "end": "1120760"
  },
  {
    "text": "or something that's what part that I",
    "start": "1120760",
    "end": "1123000"
  },
  {
    "text": "don't really get so I guess he's R in",
    "start": "1123000",
    "end": "1124679"
  },
  {
    "text": "thing that's going to do",
    "start": "1124679",
    "end": "1126159"
  },
  {
    "text": "that I'm not sure okay now for cheating",
    "start": "1126159",
    "end": "1128720"
  },
  {
    "text": "you don't have to choose just one",
    "start": "1128720",
    "end": "1130000"
  },
  {
    "text": "approach and for fast you can go LAX on",
    "start": "1130000",
    "end": "1131559"
  },
  {
    "text": "the per run diic and just clear the",
    "start": "1131559",
    "end": "1133320"
  },
  {
    "text": "whole heap after each run you can use",
    "start": "1133320",
    "end": "1135559"
  },
  {
    "text": "different allocators for different parts",
    "start": "1135559",
    "end": "1136880"
  },
  {
    "text": "of the function lifestyle for example",
    "start": "1136880",
    "end": "1138320"
  },
  {
    "text": "example a knit versus run this allows",
    "start": "1138320",
    "end": "1139720"
  },
  {
    "text": "either a clean function reset to the",
    "start": "1139720",
    "end": "1142120"
  },
  {
    "text": "exact same memor run or a stateful one",
    "start": "1142120",
    "end": "1143640"
  },
  {
    "text": "maintain State between runs and have",
    "start": "1143640",
    "end": "1145240"
  },
  {
    "text": "each case optimized using a different",
    "start": "1145240",
    "end": "1146679"
  },
  {
    "text": "memory strategy so you have this",
    "start": "1146679",
    "end": "1150559"
  },
  {
    "text": "fast and he's saying you start a",
    "start": "1150559",
    "end": "1152919"
  },
  {
    "text": "function you run it and then you finish",
    "start": "1152919",
    "end": "1155320"
  },
  {
    "text": "and he's saying if you have a knit you",
    "start": "1155320",
    "end": "1158400"
  },
  {
    "text": "just clear everything at the end and run",
    "start": "1158400",
    "end": "1163600"
  },
  {
    "text": "right you do this and then you keep the",
    "start": "1163600",
    "end": "1165760"
  },
  {
    "text": "memory so he's saying for a bunch of of",
    "start": "1165760",
    "end": "1168720"
  },
  {
    "text": "the key ones for run you're",
    "start": "1168720",
    "end": "1172799"
  },
  {
    "text": "not okay I'm not sure okay we'll keep",
    "start": "1172799",
    "end": "1174760"
  },
  {
    "text": "reading so allows either or stateful one",
    "start": "1174760",
    "end": "1176799"
  },
  {
    "text": "yep okay so uh for mine we end up",
    "start": "1176799",
    "end": "1178679"
  },
  {
    "text": "building a dynamic allocator that",
    "start": "1178679",
    "end": "1180200"
  },
  {
    "text": "chooses the allocation algorithm based",
    "start": "1180200",
    "end": "1181840"
  },
  {
    "text": "on usage that choice persists between",
    "start": "1181840",
    "end": "1184400"
  },
  {
    "text": "runs for low usage functions seeming the",
    "start": "1184400",
    "end": "1186720"
  },
  {
    "text": "majority of functions thus far uh yeah",
    "start": "1186720",
    "end": "1189360"
  },
  {
    "text": "low usage functions that's because",
    "start": "1189360",
    "end": "1190840"
  },
  {
    "text": "probably chat is using the surface",
    "start": "1190840",
    "end": "1193320"
  },
  {
    "text": "service and you guys don't have any",
    "start": "1193320",
    "end": "1194679"
  },
  {
    "text": "users so like all of your stuff would be",
    "start": "1194679",
    "end": "1196840"
  },
  {
    "text": "low usage a naive stack allocator is",
    "start": "1196840",
    "end": "1199559"
  },
  {
    "text": "used that just maintains a single",
    "start": "1199559",
    "end": "1200720"
  },
  {
    "text": "pointer to the next free slot when dallo",
    "start": "1200720",
    "end": "1203400"
  },
  {
    "text": "is called if the unit is the last one on",
    "start": "1203400",
    "end": "1205280"
  },
  {
    "text": "the stack it will just roll back the",
    "start": "1205280",
    "end": "1207080"
  },
  {
    "text": "pointer otherwise it's a no op sure when",
    "start": "1207080",
    "end": "1209640"
  },
  {
    "text": "the function has completed the pointer",
    "start": "1209640",
    "end": "1211120"
  },
  {
    "text": "is set to zero makes sense makes sense",
    "start": "1211120",
    "end": "1214760"
  },
  {
    "text": "it so uh for those of you who don't get",
    "start": "1214760",
    "end": "1216440"
  },
  {
    "text": "that uh basically what's happening is",
    "start": "1216440",
    "end": "1218679"
  },
  {
    "text": "like can I do another one of these um",
    "start": "1218679",
    "end": "1222600"
  },
  {
    "text": "you have like your block of memory right",
    "start": "1222600",
    "end": "1224720"
  },
  {
    "text": "here you just have a pointer the pointer",
    "start": "1224720",
    "end": "1226600"
  },
  {
    "text": "keeps moving as you alloc new stuff you",
    "start": "1226600",
    "end": "1228919"
  },
  {
    "text": "never free anything and then when it's",
    "start": "1228919",
    "end": "1231559"
  },
  {
    "text": "done you just move the pointer back here",
    "start": "1231559",
    "end": "1233480"
  },
  {
    "text": "so this is just like a linear allocator",
    "start": "1233480",
    "end": "1235039"
  },
  {
    "text": "this there's also another Heap Us in the",
    "start": "1235039",
    "end": "1236559"
  },
  {
    "text": "run time that is the host function",
    "start": "1236559",
    "end": "1238080"
  },
  {
    "text": "shared memory same Dynamic allocation",
    "start": "1238080",
    "end": "1240159"
  },
  {
    "text": "Str allows for writing directly the",
    "start": "1240159",
    "end": "1241600"
  },
  {
    "text": "function memory bypassing the copy step",
    "start": "1241600",
    "end": "1243240"
  },
  {
    "text": "in early versions this means that the io",
    "start": "1243240",
    "end": "1245880"
  },
  {
    "text": "gets directly copied from the colonel to",
    "start": "1245880",
    "end": "1247240"
  },
  {
    "text": "the guest byp passing the host function",
    "start": "1247240",
    "end": "1249440"
  },
  {
    "text": "okay nice nice um after opens stations",
    "start": "1249440",
    "end": "1252799"
  },
  {
    "text": "the rust function as a service end up",
    "start": "1252799",
    "end": "1254880"
  },
  {
    "text": "being 70% faster once again this is",
    "start": "1254880",
    "end": "1258520"
  },
  {
    "text": "embarrassing while using 90% less memory",
    "start": "1258520",
    "end": "1261039"
  },
  {
    "text": "than our reference node.js but the key",
    "start": "1261039",
    "end": "1264080"
  },
  {
    "text": "is after optimizations the initial",
    "start": "1264080",
    "end": "1266320"
  },
  {
    "text": "implementation was slower did require",
    "start": "1266320",
    "end": "1268360"
  },
  {
    "text": "placing some restrictions on the walls",
    "start": "1268360",
    "end": "1269760"
  },
  {
    "text": "and functions to work though they those",
    "start": "1269760",
    "end": "1271760"
  },
  {
    "text": "are transparently applied during",
    "start": "1271760",
    "end": "1273200"
  },
  {
    "text": "compilation with rare incompatibilities",
    "start": "1273200",
    "end": "1275720"
  },
  {
    "text": "okay um the major benefit of the rust",
    "start": "1275720",
    "end": "1278559"
  },
  {
    "text": "implantation is the low memory footprint",
    "start": "1278559",
    "end": "1280159"
  },
  {
    "text": "all the extra Ram can be used for things",
    "start": "1280159",
    "end": "1281600"
  },
  {
    "text": "like caching and distributing man stores",
    "start": "1281600",
    "end": "1283480"
  },
  {
    "text": "even faster by reducing IO blah blah",
    "start": "1283480",
    "end": "1285240"
  },
  {
    "text": "blah that's great we do have more",
    "start": "1285240",
    "end": "1286840"
  },
  {
    "text": "optimization slated but mostly involve",
    "start": "1286840",
    "end": "1288679"
  },
  {
    "text": "changes to the host layer that have some",
    "start": "1288679",
    "end": "1290480"
  },
  {
    "text": "major security implications they also",
    "start": "1290480",
    "end": "1292799"
  },
  {
    "text": "aren't directly related to memory",
    "start": "1292799",
    "end": "1294240"
  },
  {
    "text": "management performance but they do give",
    "start": "1294240",
    "end": "1295720"
  },
  {
    "text": "plenty of fodder for the rust is faster",
    "start": "1295720",
    "end": "1297440"
  },
  {
    "text": "than node Camp conclusion not really",
    "start": "1297440",
    "end": "1300120"
  },
  {
    "text": "sure same all right we're still I'm",
    "start": "1300120",
    "end": "1302720"
  },
  {
    "text": "still agreeing with this",
    "start": "1302720",
    "end": "1305720"
  },
  {
    "text": "article there's a couple of points um",
    "start": "1306000",
    "end": "1309360"
  },
  {
    "text": "memory management is interesting and",
    "start": "1309360",
    "end": "1310799"
  },
  {
    "text": "every approach has trade-offs true",
    "start": "1310799",
    "end": "1312440"
  },
  {
    "text": "tradeoffs are something that you will",
    "start": "1312440",
    "end": "1314400"
  },
  {
    "text": "not find out about on x.com it's",
    "start": "1314400",
    "end": "1317440"
  },
  {
    "text": "possible to reach huge performance get",
    "start": "1317440",
    "end": "1319360"
  },
  {
    "text": "uh gains by playing with different",
    "start": "1319360",
    "end": "1320520"
  },
  {
    "text": "strategies also true I still use and",
    "start": "1320520",
    "end": "1322720"
  },
  {
    "text": "recommend both no. JS and rust for",
    "start": "1322720",
    "end": "1324200"
  },
  {
    "text": "different purposes so no win here either",
    "start": "1324200",
    "end": "1326720"
  },
  {
    "text": "uh JavaScript is wonderfully portable",
    "start": "1326720",
    "end": "1328480"
  },
  {
    "text": "and works wonderfully for a bunch of",
    "start": "1328480",
    "end": "1330000"
  },
  {
    "text": "cloud native scenarios but Russ is a",
    "start": "1330000",
    "end": "1331559"
  },
  {
    "text": "great choice when performance really",
    "start": "1331559",
    "end": "1332960"
  },
  {
    "text": "matters okay my JavaScript is faster",
    "start": "1332960",
    "end": "1335880"
  },
  {
    "text": "than your Russ I'm still getting some",
    "start": "1335880",
    "end": "1337159"
  },
  {
    "text": "mix messages and whenever I say",
    "start": "1337159",
    "end": "1338640"
  },
  {
    "text": "JavaScript I actually mean typescript",
    "start": "1338640",
    "end": "1340360"
  },
  {
    "text": "I'm not a Savage Dre um although man I",
    "start": "1340360",
    "end": "1344279"
  },
  {
    "text": "don't know no bill JS coming back the",
    "start": "1344279",
    "end": "1347120"
  },
  {
    "text": "end of the day you got to choose the",
    "start": "1347120",
    "end": "1348120"
  },
  {
    "text": "best stack for your situation is rarely",
    "start": "1348120",
    "end": "1349480"
  },
  {
    "text": "a simple answer but understanding the",
    "start": "1349480",
    "end": "1350960"
  },
  {
    "text": "different characteristics of different",
    "start": "1350960",
    "end": "1352400"
  },
  {
    "text": "Stacks can surely help uh starting drama",
    "start": "1352400",
    "end": "1355960"
  },
  {
    "text": "with",
    "start": "1355960",
    "end": "1356760"
  },
  {
    "text": "dhh all performance no trade-offs",
    "start": "1356760",
    "end": "1359960"
  },
  {
    "text": "exactly exactly lisby okay",
    "start": "1359960",
    "end": "1363240"
  },
  {
    "text": "so what I see here this pretty good",
    "start": "1363240",
    "end": "1365480"
  },
  {
    "text": "article overall the reason that",
    "start": "1365480",
    "end": "1367880"
  },
  {
    "text": "JavaScript was faster for this kind of",
    "start": "1367880",
    "end": "1371320"
  },
  {
    "text": "problem is because we built an entire",
    "start": "1371320",
    "end": "1376000"
  },
  {
    "text": "ecosystem around one shot functions as a",
    "start": "1376000",
    "end": "1379559"
  },
  {
    "text": "service or serverless or all this other",
    "start": "1379559",
    "end": "1382559"
  },
  {
    "text": "stuff because JavaScript sucks at",
    "start": "1382559",
    "end": "1385679"
  },
  {
    "text": "running for a long time so this like",
    "start": "1385679",
    "end": "1388360"
  },
  {
    "text": "whole thing is only a problem that you",
    "start": "1388360",
    "end": "1390600"
  },
  {
    "text": "would want to have functions as a",
    "start": "1390600",
    "end": "1392120"
  },
  {
    "text": "service primarily because your original",
    "start": "1392120",
    "end": "1396080"
  },
  {
    "text": "framework suck at running and running",
    "start": "1396080",
    "end": "1398600"
  },
  {
    "text": "performant for a long time so there you",
    "start": "1398600",
    "end": "1401360"
  },
  {
    "text": "go so it's like rust doesn't work that",
    "start": "1401360",
    "end": "1403240"
  },
  {
    "text": "good at this problem CU it's a dumb",
    "start": "1403240",
    "end": "1404919"
  },
  {
    "text": "problem to have there you go there's my",
    "start": "1404919",
    "end": "1407559"
  },
  {
    "text": "hot take",
    "start": "1407559",
    "end": "1410360"
  },
  {
    "text": "um I I gave my best take of what prime",
    "start": "1410360",
    "end": "1413159"
  },
  {
    "text": "did unless it's a good hot take then",
    "start": "1413159",
    "end": "1414760"
  },
  {
    "text": "it's my idea okay deeper tone yeah we",
    "start": "1414760",
    "end": "1418080"
  },
  {
    "text": "can do that yeah yeah yeah yeah that's",
    "start": "1418080",
    "end": "1422240"
  },
  {
    "text": "my hot take guys chroot chroot",
    "start": "1422240",
    "end": "1427240"
  },
  {
    "text": "chroot um yeah I'm just not going to",
    "start": "1427240",
    "end": "1429600"
  },
  {
    "text": "twitchcon so I can Farm Prime zerus",
    "start": "1429600",
    "end": "1431039"
  },
  {
    "text": "that's true talk about how you hate",
    "start": "1431039",
    "end": "1432760"
  },
  {
    "text": "typescript all right uh typescripts the",
    "start": "1432760",
    "end": "1434919"
  },
  {
    "text": "best also it's bad the name the teen",
    "start": "1434919",
    "end": "1441200"
  }
]