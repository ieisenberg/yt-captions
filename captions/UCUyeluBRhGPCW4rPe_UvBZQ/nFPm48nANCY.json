[
  {
    "text": "so this is a language in which everybody",
    "start": "0",
    "end": "3480"
  },
  {
    "text": "tells me I must learn by the way I just",
    "start": "3480",
    "end": "5819"
  },
  {
    "text": "turned off alerts so suck it YouTube",
    "start": "5819",
    "end": "7680"
  },
  {
    "text": "okay suck on that",
    "start": "7680",
    "end": "9840"
  },
  {
    "text": "um but this is the language I get",
    "start": "9840",
    "end": "11340"
  },
  {
    "text": "probably the most amount of heresing to",
    "start": "11340",
    "end": "13799"
  },
  {
    "text": "learn is Nim it's either nimber Odin and",
    "start": "13799",
    "end": "16379"
  },
  {
    "text": "those two just seem to be the most",
    "start": "16379",
    "end": "18480"
  },
  {
    "text": "popular but man do I get a lot of nim",
    "start": "18480",
    "end": "20460"
  },
  {
    "text": "gang nim nim nim nim nim nim Gangnam",
    "start": "20460",
    "end": "22199"
  },
  {
    "text": "game like it's just constant the Nim",
    "start": "22199",
    "end": "24660"
  },
  {
    "text": "team is proud and happy to announce Nim",
    "start": "24660",
    "end": "27240"
  },
  {
    "text": "2.0 man rust seething right now they",
    "start": "27240",
    "end": "30119"
  },
  {
    "text": "can't 2.0 they you know there's talks",
    "start": "30119",
    "end": "32758"
  },
  {
    "text": "about it but they can't do it uh cope",
    "start": "32759",
    "end": "34920"
  },
  {
    "text": "and sees people uh this is an evolution",
    "start": "34920",
    "end": "36719"
  },
  {
    "text": "not a revolution of uh Nim bringing orc",
    "start": "36719",
    "end": "40440"
  },
  {
    "text": "what why are there Orcs orc memory",
    "start": "40440",
    "end": "42660"
  },
  {
    "text": "management as a default what is orc",
    "start": "42660",
    "end": "44280"
  },
  {
    "text": "memory management like I know what arcs",
    "start": "44280",
    "end": "47100"
  },
  {
    "text": "are I know what RC's are but what's an",
    "start": "47100",
    "end": "49500"
  },
  {
    "text": "orc what's the o stand for I assume it's",
    "start": "49500",
    "end": "51719"
  },
  {
    "text": "something reference count Oracle okay so",
    "start": "51719",
    "end": "54600"
  },
  {
    "text": "it's an oracle reference counter object",
    "start": "54600",
    "end": "57059"
  },
  {
    "text": "relational crap not sure what any of",
    "start": "57059",
    "end": "59160"
  },
  {
    "text": "that means anyways this it seems",
    "start": "59160",
    "end": "61340"
  },
  {
    "text": "Seems exciting memory management as",
    "start": "61340",
    "end": "64080"
  },
  {
    "text": "default along with many other new",
    "start": "64080",
    "end": "65700"
  },
  {
    "text": "features and improvements Nim is a",
    "start": "65700",
    "end": "68159"
  },
  {
    "text": "programming language that is good for",
    "start": "68159",
    "end": "69240"
  },
  {
    "text": "everything but not for everybody it",
    "start": "69240",
    "end": "71220"
  },
  {
    "text": "focuses on imperative programming",
    "start": "71220",
    "end": "73020"
  },
  {
    "text": "Paradigm and enhances it with macro",
    "start": "73020",
    "end": "74640"
  },
  {
    "text": "system so I actually really like this",
    "start": "74640",
    "end": "76140"
  },
  {
    "text": "because I mean ultimately in the end I",
    "start": "76140",
    "end": "78119"
  },
  {
    "text": "know procedural code is just really easy",
    "start": "78119",
    "end": "80159"
  },
  {
    "text": "it can be very awful sometimes but I I",
    "start": "80159",
    "end": "82560"
  },
  {
    "text": "end up enjoying it you know for whatever",
    "start": "82560",
    "end": "84360"
  },
  {
    "text": "reason I always end up enjoying it the",
    "start": "84360",
    "end": "85920"
  },
  {
    "text": "most uh it's customizable memory",
    "start": "85920",
    "end": "87900"
  },
  {
    "text": "management makes it well suited for",
    "start": "87900",
    "end": "89460"
  },
  {
    "text": "unforgiving domains such as hard or",
    "start": "89460",
    "end": "91500"
  },
  {
    "text": "real-time systems and system",
    "start": "91500",
    "end": "92759"
  },
  {
    "text": "programmings in general all right and so",
    "start": "92759",
    "end": "96000"
  },
  {
    "text": "we have a little installing we won't",
    "start": "96000",
    "end": "97579"
  },
  {
    "text": "sorry installing neovan or Nim if you",
    "start": "97579",
    "end": "101100"
  },
  {
    "text": "want to donating to Nim hey check this",
    "start": "101100",
    "end": "103140"
  },
  {
    "text": "out they take Bitcoin or open Collective",
    "start": "103140",
    "end": "105299"
  },
  {
    "text": "go give them some money so new features",
    "start": "105299",
    "end": "107040"
  },
  {
    "text": "let's do this again I've always wanted",
    "start": "107040",
    "end": "108900"
  },
  {
    "text": "to learn this language I've just never",
    "start": "108900",
    "end": "110759"
  },
  {
    "text": "taken the time to learn it okay Tuple",
    "start": "110759",
    "end": "112920"
  },
  {
    "text": "unpacking for variables is now treated",
    "start": "112920",
    "end": "114780"
  },
  {
    "text": "as syntax sugar that directly expands",
    "start": "114780",
    "end": "116939"
  },
  {
    "text": "into multiple assignments along with",
    "start": "116939",
    "end": "119040"
  },
  {
    "text": "this Tuple unpacking for variables can",
    "start": "119040",
    "end": "120780"
  },
  {
    "text": "now be nested oh cool so here's a tuple",
    "start": "120780",
    "end": "124020"
  },
  {
    "text": "obviously uh uh this is a foreple uh and",
    "start": "124020",
    "end": "127380"
  },
  {
    "text": "in the four-pole the first position has",
    "start": "127380",
    "end": "129360"
  },
  {
    "text": "a uh Tuple in it oh cool",
    "start": "129360",
    "end": "132120"
  },
  {
    "text": "hey",
    "start": "132120",
    "end": "133379"
  },
  {
    "text": "cool",
    "start": "133379",
    "end": "134700"
  },
  {
    "text": "I could like that could you like that I",
    "start": "134700",
    "end": "137220"
  },
  {
    "text": "could like that improved type inference",
    "start": "137220",
    "end": "139379"
  },
  {
    "text": "a new form of type reference called top",
    "start": "139379",
    "end": "141480"
  },
  {
    "text": "down inference okay but when are we",
    "start": "141480",
    "end": "143220"
  },
  {
    "text": "gonna get middle out inference okay I'm",
    "start": "143220",
    "end": "145500"
  },
  {
    "text": "sick and tired of this hindley Milner",
    "start": "145500",
    "end": "148220"
  },
  {
    "text": "hindley Milner inference or typescript",
    "start": "148220",
    "end": "151319"
  },
  {
    "text": "in France but now we got top down",
    "start": "151319",
    "end": "152879"
  },
  {
    "text": "inference I want middle out okay if you",
    "start": "152879",
    "end": "156180"
  },
  {
    "text": "can't find the lowest distance between",
    "start": "156180",
    "end": "158280"
  },
  {
    "text": "two points of inferencing what are you",
    "start": "158280",
    "end": "160920"
  },
  {
    "text": "really even doing uh has been",
    "start": "160920",
    "end": "162360"
  },
  {
    "text": "implemented for a variety of basic cases",
    "start": "162360",
    "end": "164099"
  },
  {
    "text": "for example code like this now compiles",
    "start": "164099",
    "end": "166019"
  },
  {
    "text": "okay let's see it a foo which is a",
    "start": "166019",
    "end": "168060"
  },
  {
    "text": "sequence of float bite C string is this",
    "start": "168060",
    "end": "170879"
  },
  {
    "text": "right here okay cool there must have",
    "start": "170879",
    "end": "172440"
  },
  {
    "text": "been this little ad symbol or something",
    "start": "172440",
    "end": "173879"
  },
  {
    "text": "must have just been something else",
    "start": "173879",
    "end": "175440"
  },
  {
    "text": "forbidden tags oh I love anything that's",
    "start": "175440",
    "end": "177540"
  },
  {
    "text": "forbidden uh tag tracking now supports",
    "start": "177540",
    "end": "180180"
  },
  {
    "text": "the definition of forbidden Tags by dot",
    "start": "180180",
    "end": "181980"
  },
  {
    "text": "forbids pragma uh which is used to",
    "start": "181980",
    "end": "185220"
  },
  {
    "text": "disable certain effects in proc types so",
    "start": "185220",
    "end": "188040"
  },
  {
    "text": "for example you have this whole like",
    "start": "188040",
    "end": "189720"
  },
  {
    "text": "type IO we can read uh read line tags IO",
    "start": "189720",
    "end": "193319"
  },
  {
    "text": "discard",
    "start": "193319",
    "end": "195120"
  },
  {
    "text": "echoline void no I O please forbids IO",
    "start": "195120",
    "end": "199200"
  },
  {
    "text": "oh interesting so something I see right",
    "start": "199200",
    "end": "201659"
  },
  {
    "text": "away that's kind of cool over this",
    "start": "201659",
    "end": "202980"
  },
  {
    "text": "notion right right away something that I",
    "start": "202980",
    "end": "204599"
  },
  {
    "text": "think is kind of neat about that is that",
    "start": "204599",
    "end": "206280"
  },
  {
    "text": "like imagine you had some some really",
    "start": "206280",
    "end": "208220"
  },
  {
    "text": "Speedy some really hot functions going",
    "start": "208220",
    "end": "211560"
  },
  {
    "text": "on some just hot Hansel hot and you want",
    "start": "211560",
    "end": "216120"
  },
  {
    "text": "to ensure that they don't do certain",
    "start": "216120",
    "end": "217920"
  },
  {
    "text": "operations",
    "start": "217920",
    "end": "219420"
  },
  {
    "text": "you could imagine that you could tag",
    "start": "219420",
    "end": "221480"
  },
  {
    "text": "certain things",
    "start": "221480",
    "end": "223860"
  },
  {
    "text": "and just say hey you're not allowed to",
    "start": "223860",
    "end": "226019"
  },
  {
    "text": "use these tags within this function",
    "start": "226019",
    "end": "228299"
  },
  {
    "text": "because it's so hot right now it's",
    "start": "228299",
    "end": "229980"
  },
  {
    "text": "Hansel hot there's something kind of",
    "start": "229980",
    "end": "231540"
  },
  {
    "text": "cool about that right it's useful for",
    "start": "231540",
    "end": "233280"
  },
  {
    "text": "teens exactly that's what I was about to",
    "start": "233280",
    "end": "234659"
  },
  {
    "text": "say this seems actually really useful",
    "start": "234659",
    "end": "235920"
  },
  {
    "text": "for a team because you could you could",
    "start": "235920",
    "end": "238260"
  },
  {
    "text": "imagine that you just come to a point of",
    "start": "238260",
    "end": "240120"
  },
  {
    "text": "a piece of code you've never seen before",
    "start": "240120",
    "end": "241980"
  },
  {
    "text": "it's just sitting there and you're like",
    "start": "241980",
    "end": "243299"
  },
  {
    "text": "okay I don't what am I looking at what",
    "start": "243299",
    "end": "245340"
  },
  {
    "text": "do you ask me to do you have to do a",
    "start": "245340",
    "end": "247440"
  },
  {
    "text": "small bug fix so you just start putting",
    "start": "247440",
    "end": "249239"
  },
  {
    "text": "stuff in it and you don't realize that",
    "start": "249239",
    "end": "251280"
  },
  {
    "text": "you're about to like downgrade the",
    "start": "251280",
    "end": "252720"
  },
  {
    "text": "entire system because you're in the",
    "start": "252720",
    "end": "253920"
  },
  {
    "text": "hottest function so hot uh forbid give",
    "start": "253920",
    "end": "257760"
  },
  {
    "text": "intern forbid code yeah that could be a",
    "start": "257760",
    "end": "259560"
  },
  {
    "text": "good one all right I like that that's",
    "start": "259560",
    "end": "261000"
  },
  {
    "text": "actually a pretty cool idea uh I mean I",
    "start": "261000",
    "end": "263280"
  },
  {
    "text": "like it for communication purposes very",
    "start": "263280",
    "end": "265560"
  },
  {
    "text": "very neat uh new standard Library",
    "start": "265560",
    "end": "267479"
  },
  {
    "text": "modules uh the famous OS module got an",
    "start": "267479",
    "end": "270060"
  },
  {
    "text": "overhaul several of its features are",
    "start": "270060",
    "end": "271740"
  },
  {
    "text": "available under a new interface that",
    "start": "271740",
    "end": "273479"
  },
  {
    "text": "produces path abstractions a path is a",
    "start": "273479",
    "end": "275460"
  },
  {
    "text": "distinct string which improves the type",
    "start": "275460",
    "end": "277800"
  },
  {
    "text": "safety when dealing with paths files and",
    "start": "277800",
    "end": "279780"
  },
  {
    "text": "directories uh all right so you got a",
    "start": "279780",
    "end": "282479"
  },
  {
    "text": "bunch of new stuff coming out okay I",
    "start": "282479",
    "end": "284400"
  },
  {
    "text": "like that uh overloaded enums",
    "start": "284400",
    "end": "286440"
  },
  {
    "text": "overloadable enums are no longer",
    "start": "286440",
    "end": "288720"
  },
  {
    "text": "experimental for example enum value one",
    "start": "288720",
    "end": "290820"
  },
  {
    "text": "enum value two okay",
    "start": "290820",
    "end": "294560"
  },
  {
    "text": "I'm not really sure what I'm looking at",
    "start": "296820",
    "end": "298500"
  },
  {
    "text": "here",
    "start": "298500",
    "end": "300740"
  },
  {
    "text": "what does this mean the types E1 and E2",
    "start": "301560",
    "end": "303720"
  },
  {
    "text": "share the names value one and value two",
    "start": "303720",
    "end": "305220"
  },
  {
    "text": "they are overloaded and usually overload",
    "start": "305220",
    "end": "307139"
  },
  {
    "text": "disambiguation is used so that E1 and E2",
    "start": "307139",
    "end": "309419"
  },
  {
    "text": "prefixes can be left out in many cases",
    "start": "309419",
    "end": "310979"
  },
  {
    "text": "okay you get you give it the same shape",
    "start": "310979",
    "end": "314220"
  },
  {
    "text": "okay so the point is you give it the",
    "start": "314220",
    "end": "316080"
  },
  {
    "text": "same shape so you don't have to do uh E1",
    "start": "316080",
    "end": "318600"
  },
  {
    "text": "dot this it just works you can just do",
    "start": "318600",
    "end": "321300"
  },
  {
    "text": "that and it goes I already know I I get",
    "start": "321300",
    "end": "323639"
  },
  {
    "text": "it I get it these features are most",
    "start": "323639",
    "end": "325740"
  },
  {
    "text": "beneficial for independently developed",
    "start": "325740",
    "end": "327539"
  },
  {
    "text": "libraries",
    "start": "327539",
    "end": "329580"
  },
  {
    "text": "okay okay",
    "start": "329580",
    "end": "332340"
  },
  {
    "text": "interesting",
    "start": "332340",
    "end": "334020"
  },
  {
    "text": "weird I know it's a super weird language",
    "start": "334020",
    "end": "335699"
  },
  {
    "text": "but people just non-stop talk about this",
    "start": "335699",
    "end": "337979"
  },
  {
    "text": "you've always had the prefix the edoms",
    "start": "337979",
    "end": "339419"
  },
  {
    "text": "with their type name yeah so this just",
    "start": "339419",
    "end": "342240"
  },
  {
    "text": "this just allows that to effectively not",
    "start": "342240",
    "end": "345000"
  },
  {
    "text": "happen Okay default values for objects",
    "start": "345000",
    "end": "346979"
  },
  {
    "text": "inside an object declaration Fields can",
    "start": "346979",
    "end": "348720"
  },
  {
    "text": "now have default values relational",
    "start": "348720",
    "end": "350580"
  },
  {
    "text": "object",
    "start": "350580",
    "end": "352320"
  },
  {
    "text": "Okay cool so it can be an ant here's the",
    "start": "352320",
    "end": "354300"
  },
  {
    "text": "default value perfect you get this thing",
    "start": "354300",
    "end": "355919"
  },
  {
    "text": "you get a new relational boom you got",
    "start": "355919",
    "end": "357419"
  },
  {
    "text": "that okay good I like I like that I like",
    "start": "357419",
    "end": "359400"
  },
  {
    "text": "default values default values are really",
    "start": "359400",
    "end": "360840"
  },
  {
    "text": "cool uh it's kind of it's kind of",
    "start": "360840",
    "end": "363060"
  },
  {
    "text": "exciting",
    "start": "363060",
    "end": "364919"
  },
  {
    "text": "Doug typing in my compiled language what",
    "start": "364919",
    "end": "368160"
  },
  {
    "text": "the",
    "start": "368160",
    "end": "369419"
  },
  {
    "text": "yeah it's happening uh definitely a",
    "start": "369419",
    "end": "372380"
  },
  {
    "text": "definite assignment analysis we found",
    "start": "372380",
    "end": "375300"
  },
  {
    "text": "Nim's default initialization rule has",
    "start": "375300",
    "end": "377160"
  },
  {
    "text": "been one of the major source of bugs",
    "start": "377160",
    "end": "378419"
  },
  {
    "text": "there's a new experimental switch called",
    "start": "378419",
    "end": "380280"
  },
  {
    "text": "strict defs that protects against these",
    "start": "380280",
    "end": "382560"
  },
  {
    "text": "bugs when enabled it enforces that a",
    "start": "382560",
    "end": "384419"
  },
  {
    "text": "variable has been given a value",
    "start": "384419",
    "end": "385680"
  },
  {
    "text": "explicitly before the variable can be",
    "start": "385680",
    "end": "387360"
  },
  {
    "text": "used oh very cool",
    "start": "387360",
    "end": "389699"
  },
  {
    "text": "oh awesome okay that's great I love that",
    "start": "389699",
    "end": "392039"
  },
  {
    "text": "I love that perfect so it's just good",
    "start": "392039",
    "end": "393780"
  },
  {
    "text": "linting right there building good",
    "start": "393780",
    "end": "395280"
  },
  {
    "text": "linting into the system I love to see",
    "start": "395280",
    "end": "396840"
  },
  {
    "text": "that uh let's see to turn the warning",
    "start": "396840",
    "end": "399360"
  },
  {
    "text": "into an area used uh warning as air uh",
    "start": "399360",
    "end": "401940"
  },
  {
    "text": "on a knit on okay cool",
    "start": "401940",
    "end": "404100"
  },
  {
    "text": "cool uh the out the analysis understands",
    "start": "404100",
    "end": "406380"
  },
  {
    "text": "basic control flow so the so following",
    "start": "406380",
    "end": "408419"
  },
  {
    "text": "works because every possible code path",
    "start": "408419",
    "end": "409800"
  },
  {
    "text": "uh signs are before it is used nice okay",
    "start": "409800",
    "end": "412919"
  },
  {
    "text": "cool I love that because this is such an",
    "start": "412919",
    "end": "414840"
  },
  {
    "text": "annoying thing when you get into when",
    "start": "414840",
    "end": "416520"
  },
  {
    "text": "you get into uh conditions where",
    "start": "416520",
    "end": "419520"
  },
  {
    "text": "like my least favorite part about",
    "start": "419520",
    "end": "421020"
  },
  {
    "text": "typescript is when you're in a for Loop",
    "start": "421020",
    "end": "424199"
  },
  {
    "text": "and you have to index into the thing",
    "start": "424199",
    "end": "426479"
  },
  {
    "text": "you're using and you check to see if the",
    "start": "426479",
    "end": "428699"
  },
  {
    "text": "index item is there but then right",
    "start": "428699",
    "end": "431520"
  },
  {
    "text": "afterwards you can't continue to use the",
    "start": "431520",
    "end": "433199"
  },
  {
    "text": "indexed item so I wonder if this works",
    "start": "433199",
    "end": "434699"
  },
  {
    "text": "in the same the same kind of concept can",
    "start": "434699",
    "end": "436800"
  },
  {
    "text": "an indexed item work because I does not",
    "start": "436800",
    "end": "439620"
  },
  {
    "text": "change",
    "start": "439620",
    "end": "441000"
  },
  {
    "text": "I don't know it'd be cool to it'd be",
    "start": "441000",
    "end": "442620"
  },
  {
    "text": "cool to find out because it always makes",
    "start": "442620",
    "end": "443819"
  },
  {
    "text": "me just so frustrated uh even better",
    "start": "443819",
    "end": "445919"
  },
  {
    "text": "this feature works with let variables",
    "start": "445919",
    "end": "447419"
  },
  {
    "text": "too all right let rational this this",
    "start": "447419",
    "end": "449099"
  },
  {
    "text": "okay cool uh it is checked that every",
    "start": "449099",
    "end": "451740"
  },
  {
    "text": "lead variable is assigned a value",
    "start": "451740",
    "end": "453479"
  },
  {
    "text": "exactly once perfect",
    "start": "453479",
    "end": "455759"
  },
  {
    "text": "I do like that",
    "start": "455759",
    "end": "457919"
  },
  {
    "text": "that is a cool feature so a let variable",
    "start": "457919",
    "end": "459840"
  },
  {
    "text": "if I'm reading this correctly a let",
    "start": "459840",
    "end": "461819"
  },
  {
    "text": "variable is something that can only be",
    "start": "461819",
    "end": "464099"
  },
  {
    "text": "assigned once it's effectively a const",
    "start": "464099",
    "end": "465960"
  },
  {
    "text": "but you don't have to Define it in place",
    "start": "465960",
    "end": "467580"
  },
  {
    "text": "you can do something like this",
    "start": "467580",
    "end": "470659"
  },
  {
    "text": "I can dig",
    "start": "474020",
    "end": "477060"
  },
  {
    "text": "I always wanted that that's one of those",
    "start": "477060",
    "end": "479160"
  },
  {
    "text": "things that I've always wanted because I",
    "start": "479160",
    "end": "480840"
  },
  {
    "text": "always have like I need to assign a",
    "start": "480840",
    "end": "482940"
  },
  {
    "text": "value and there's like a bunch of things",
    "start": "482940",
    "end": "484560"
  },
  {
    "text": "I might have to do to do something",
    "start": "484560",
    "end": "486120"
  },
  {
    "text": "obviously something like oh camera rust",
    "start": "486120",
    "end": "488400"
  },
  {
    "text": "kind of gets around it because",
    "start": "488400",
    "end": "489360"
  },
  {
    "text": "Expressions can return stuff but",
    "start": "489360",
    "end": "491520"
  },
  {
    "text": "JavaScript you can't do it right so if",
    "start": "491520",
    "end": "493680"
  },
  {
    "text": "you have a bunch of if State like you",
    "start": "493680",
    "end": "495720"
  },
  {
    "text": "can't do that in JavaScript",
    "start": "495720",
    "end": "498240"
  },
  {
    "text": "isn't that just a standard ml derived",
    "start": "498240",
    "end": "500160"
  },
  {
    "text": "like yes yes but I'm just saying that",
    "start": "500160",
    "end": "502139"
  },
  {
    "text": "there's like this thing that happens",
    "start": "502139",
    "end": "503460"
  },
  {
    "text": "that it's just",
    "start": "503460",
    "end": "506220"
  },
  {
    "text": "you can think of it as a runtime cons",
    "start": "506220",
    "end": "507660"
  },
  {
    "text": "cool",
    "start": "507660",
    "end": "508879"
  },
  {
    "text": "side effects",
    "start": "508879",
    "end": "511379"
  },
  {
    "text": "sword pointer to T right so I just see",
    "start": "511379",
    "end": "513779"
  },
  {
    "text": "this as soy sort a pointer to an array T",
    "start": "513779",
    "end": "516839"
  },
  {
    "text": "all right",
    "start": "516839",
    "end": "518219"
  },
  {
    "text": "uh all right uh here the let's see the",
    "start": "518219",
    "end": "521339"
  },
  {
    "text": "meaning here is that sword has an effect",
    "start": "521339",
    "end": "523080"
  },
  {
    "text": "has effects of compare sort and can",
    "start": "523080",
    "end": "525720"
  },
  {
    "text": "raise exceptions comp",
    "start": "525720",
    "end": "529399"
  },
  {
    "text": "proc this and closure orders yeah",
    "start": "531260",
    "end": "536040"
  },
  {
    "text": "Nim seems too strange for me to try to",
    "start": "536040",
    "end": "538019"
  },
  {
    "text": "understand I'm trying to understand it",
    "start": "538019",
    "end": "539100"
  },
  {
    "text": "but I you know obviously only looking at",
    "start": "539100",
    "end": "540540"
  },
  {
    "text": "it for 10 seconds it's really hard to",
    "start": "540540",
    "end": "541920"
  },
  {
    "text": "understand improved error message uh for",
    "start": "541920",
    "end": "544080"
  },
  {
    "text": "a tight mismatch okay Foo four produces",
    "start": "544080",
    "end": "546959"
  },
  {
    "text": "uh let's see",
    "start": "546959",
    "end": "550459"
  },
  {
    "text": "oh oh you got overloading in this",
    "start": "550560",
    "end": "553080"
  },
  {
    "text": "language okay so you got overloading in",
    "start": "553080",
    "end": "554820"
  },
  {
    "text": "this language and it says Hey type",
    "start": "554820",
    "end": "556200"
  },
  {
    "text": "mismatch you can't do this",
    "start": "556200",
    "end": "559339"
  },
  {
    "text": "at least it's good it's good error",
    "start": "559740",
    "end": "561480"
  },
  {
    "text": "messages",
    "start": "561480",
    "end": "562560"
  },
  {
    "text": "right it's good error messages I like",
    "start": "562560",
    "end": "564180"
  },
  {
    "text": "that",
    "start": "564180",
    "end": "564959"
  },
  {
    "text": "oh star is not a pointer it's a",
    "start": "564959",
    "end": "567180"
  },
  {
    "text": "declaration of public function oh okay",
    "start": "567180",
    "end": "569760"
  },
  {
    "text": "okay",
    "start": "569760",
    "end": "571680"
  },
  {
    "text": "consistent underscore handling the",
    "start": "571680",
    "end": "573360"
  },
  {
    "text": "underscore identifier is now generally",
    "start": "573360",
    "end": "575040"
  },
  {
    "text": "let's see is now generally not added to",
    "start": "575040",
    "end": "576959"
  },
  {
    "text": "a scope when used uh as the name of a",
    "start": "576959",
    "end": "579600"
  },
  {
    "text": "definition while this was the case for a",
    "start": "579600",
    "end": "581580"
  },
  {
    "text": "variables it is now also the case for",
    "start": "581580",
    "end": "583440"
  },
  {
    "text": "routine parameters generic parameters",
    "start": "583440",
    "end": "585180"
  },
  {
    "text": "routine declarations type declarations",
    "start": "585180",
    "end": "587700"
  },
  {
    "text": "Etc this means the following code does",
    "start": "587700",
    "end": "589260"
  },
  {
    "text": "not compile all right Foo plus one why",
    "start": "589260",
    "end": "592140"
  },
  {
    "text": "would you do this",
    "start": "592140",
    "end": "593640"
  },
  {
    "text": "see whereas the following code does",
    "start": "593640",
    "end": "595320"
  },
  {
    "text": "compile",
    "start": "595320",
    "end": "597680"
  },
  {
    "text": "okay",
    "start": "601320",
    "end": "602700"
  },
  {
    "text": "oh so you can no longer you can",
    "start": "602700",
    "end": "607820"
  },
  {
    "text": "why doesn't this compile I'm let's see",
    "start": "610260",
    "end": "614120"
  },
  {
    "text": "so this does this this this doesn't work",
    "start": "617160",
    "end": "620040"
  },
  {
    "text": "because you can't do this right this",
    "start": "620040",
    "end": "623339"
  },
  {
    "text": "doesn't work because you can't do this",
    "start": "623339",
    "end": "625080"
  },
  {
    "text": "but this is fine it's this that's not",
    "start": "625080",
    "end": "627720"
  },
  {
    "text": "fine is that what it's saying",
    "start": "627720",
    "end": "631160"
  },
  {
    "text": "uh you just gotta look at code you got",
    "start": "632420",
    "end": "634500"
  },
  {
    "text": "to generalize you got to kind of just it",
    "start": "634500",
    "end": "635880"
  },
  {
    "text": "just you know work through a problem try",
    "start": "635880",
    "end": "637500"
  },
  {
    "text": "to like try to argue with yourself why",
    "start": "637500",
    "end": "639120"
  },
  {
    "text": "something doesn't doesn't you know it's",
    "start": "639120",
    "end": "640260"
  },
  {
    "text": "good for the brain",
    "start": "640260",
    "end": "642060"
  },
  {
    "text": "it's good for the brain to try to see",
    "start": "642060",
    "end": "643860"
  },
  {
    "text": "things in a different light right",
    "start": "643860",
    "end": "645060"
  },
  {
    "text": "JavaScript code gen Improvement",
    "start": "645060",
    "end": "646800"
  },
  {
    "text": "JavaScript backend now uses big in for",
    "start": "646800",
    "end": "649140"
  },
  {
    "text": "64 integer types A bigint is the Bane in",
    "start": "649140",
    "end": "651899"
  },
  {
    "text": "my life it you cannot Jason stringify",
    "start": "651899",
    "end": "654240"
  },
  {
    "text": "and parse begins which is just like the",
    "start": "654240",
    "end": "656820"
  },
  {
    "text": "devil",
    "start": "656820",
    "end": "658260"
  },
  {
    "text": "it's just the devil as this affects JS",
    "start": "658260",
    "end": "661079"
  },
  {
    "text": "code generation code using the types to",
    "start": "661079",
    "end": "663000"
  },
  {
    "text": "interface with JS backend may need to be",
    "start": "663000",
    "end": "664980"
  },
  {
    "text": "able to update note that int and huint",
    "start": "664980",
    "end": "666839"
  },
  {
    "text": "are not affected okay for compatibility",
    "start": "666839",
    "end": "668339"
  },
  {
    "text": "with platforms that do not support big",
    "start": "668339",
    "end": "669720"
  },
  {
    "text": "in the case of potential bugs with this",
    "start": "669720",
    "end": "671220"
  },
  {
    "text": "new implementation the old behavior is",
    "start": "671220",
    "end": "672480"
  },
  {
    "text": "still currently supported on the command",
    "start": "672480",
    "end": "673740"
  },
  {
    "text": "line option that okay so you got some",
    "start": "673740",
    "end": "676560"
  },
  {
    "text": "Doc coaching very cool",
    "start": "676560",
    "end": "679560"
  },
  {
    "text": "I don't think we care about docs we",
    "start": "679560",
    "end": "681300"
  },
  {
    "text": "don't write docs around here C plus plus",
    "start": "681300",
    "end": "683060"
  },
  {
    "text": "interrupt enhancements okay this is",
    "start": "683060",
    "end": "685140"
  },
  {
    "text": "actually pretty cool Nim takes the C",
    "start": "685140",
    "end": "686760"
  },
  {
    "text": "plus interop uh to the next level with a",
    "start": "686760",
    "end": "689100"
  },
  {
    "text": "new virtual prachma and the extended",
    "start": "689100",
    "end": "691320"
  },
  {
    "text": "Constructor pragma uh now one can Define",
    "start": "691320",
    "end": "693660"
  },
  {
    "text": "Constructors and virtual procs that map",
    "start": "693660",
    "end": "695399"
  },
  {
    "text": "to C plus Constructors and virtual",
    "start": "695399",
    "end": "697140"
  },
  {
    "text": "methods allowing for further",
    "start": "697140",
    "end": "698820"
  },
  {
    "text": "customization with interoperability this",
    "start": "698820",
    "end": "700740"
  },
  {
    "text": "allows extended support for the Cogen uh",
    "start": "700740",
    "end": "703200"
  },
  {
    "text": "decimal decal pragma okay let's see what",
    "start": "703200",
    "end": "707040"
  },
  {
    "text": "this is struct bass and okay",
    "start": "707040",
    "end": "709980"
  },
  {
    "text": "okay we got to okay okay okay okay type",
    "start": "709980",
    "end": "713820"
  },
  {
    "text": "bass we got this thing",
    "start": "713820",
    "end": "717380"
  },
  {
    "text": "notice that we can access this inside",
    "start": "720660",
    "end": "722519"
  },
  {
    "text": "the Constructor",
    "start": "722519",
    "end": "725120"
  },
  {
    "text": "what is going on here",
    "start": "728700",
    "end": "732140"
  },
  {
    "text": "because this okay so like this this",
    "start": "732240",
    "end": "734760"
  },
  {
    "text": "looks like we're doing some C plus plus",
    "start": "734760",
    "end": "736019"
  },
  {
    "text": "up here this looks like some C plus plus",
    "start": "736019",
    "end": "738420"
  },
  {
    "text": "up here",
    "start": "738420",
    "end": "740839"
  },
  {
    "text": "but now we're actually taking",
    "start": "740880",
    "end": "743700"
  },
  {
    "text": "this import C plus plus",
    "start": "743700",
    "end": "747060"
  },
  {
    "text": "and you're just like literally",
    "start": "747060",
    "end": "748620"
  },
  {
    "text": "interrupting with C plus plus while",
    "start": "748620",
    "end": "750240"
  },
  {
    "text": "you're writing it",
    "start": "750240",
    "end": "751560"
  },
  {
    "text": "and then feels like three languages in a",
    "start": "751560",
    "end": "753480"
  },
  {
    "text": "trench coat a nym plus plus I I think",
    "start": "753480",
    "end": "755700"
  },
  {
    "text": "that that's pretty cool",
    "start": "755700",
    "end": "757079"
  },
  {
    "text": "uh for anyone that does all you know",
    "start": "757079",
    "end": "759060"
  },
  {
    "text": "anyone that does a lot of C plus plus",
    "start": "759060",
    "end": "760260"
  },
  {
    "text": "and they wish they had a language that",
    "start": "760260",
    "end": "761640"
  },
  {
    "text": "was a little bit easier to write which",
    "start": "761640",
    "end": "763620"
  },
  {
    "text": "here's the problem okay so I'm gonna be",
    "start": "763620",
    "end": "765360"
  },
  {
    "text": "real here everyone that likes to do c",
    "start": "765360",
    "end": "767639"
  },
  {
    "text": "plus doesn't want another language to",
    "start": "767639",
    "end": "769320"
  },
  {
    "text": "use",
    "start": "769320",
    "end": "770700"
  },
  {
    "text": "so I'm not really sure who like in all",
    "start": "770700",
    "end": "773100"
  },
  {
    "text": "reality I'm not really sure who you're",
    "start": "773100",
    "end": "774899"
  },
  {
    "text": "actually advertising this stuff to",
    "start": "774899",
    "end": "778560"
  },
  {
    "text": "as far as I can tell people that like C",
    "start": "778560",
    "end": "780480"
  },
  {
    "text": "plus like C plus plus when they build a",
    "start": "780480",
    "end": "782639"
  },
  {
    "text": "new program they build it in C plus plus",
    "start": "782639",
    "end": "786500"
  },
  {
    "text": "what about carbon yeah I mean I see I",
    "start": "787440",
    "end": "790200"
  },
  {
    "text": "see people excited about it but I just",
    "start": "790200",
    "end": "791519"
  },
  {
    "text": "doubt that carbon I mean I I really",
    "start": "791519",
    "end": "793139"
  },
  {
    "text": "doubt that that's gonna take off",
    "start": "793139",
    "end": "795899"
  },
  {
    "text": "but I got too messy but why I don't know",
    "start": "795899",
    "end": "797940"
  },
  {
    "text": "that's I use Odin now Odin seems very",
    "start": "797940",
    "end": "800100"
  },
  {
    "text": "exciting okay Arc uh Arc and orc uh",
    "start": "800100",
    "end": "802800"
  },
  {
    "text": "refinements with a 2.0 release Arc and",
    "start": "802800",
    "end": "804839"
  },
  {
    "text": "orc model got redefined once again and",
    "start": "804839",
    "end": "807000"
  },
  {
    "text": "now I've finally complete programmers",
    "start": "807000",
    "end": "808260"
  },
  {
    "text": "now of control over the item was moved",
    "start": "808260",
    "end": "810300"
  },
  {
    "text": "from state with this was moved override",
    "start": "810300",
    "end": "813000"
  },
  {
    "text": "there's new Hadoop hook which is more",
    "start": "813000",
    "end": "814860"
  },
  {
    "text": "efficient than the old combination was",
    "start": "814860",
    "end": "816240"
  },
  {
    "text": "moved",
    "start": "816240",
    "end": "817200"
  },
  {
    "text": "hmm",
    "start": "817200",
    "end": "820160"
  },
  {
    "text": "stuff seems",
    "start": "821700",
    "end": "823320"
  },
  {
    "text": "I feel like Nim is gonna take a a ton of",
    "start": "823320",
    "end": "826440"
  },
  {
    "text": "understanding like if if you were to get",
    "start": "826440",
    "end": "828600"
  },
  {
    "text": "into Nim it seems like it takes a lot of",
    "start": "828600",
    "end": "830220"
  },
  {
    "text": "understanding when I read all this stuff",
    "start": "830220",
    "end": "832380"
  },
  {
    "text": "I always come down to the same problem",
    "start": "832380",
    "end": "834300"
  },
  {
    "text": "which is",
    "start": "834300",
    "end": "836160"
  },
  {
    "text": "what is being solved here",
    "start": "836160",
    "end": "840079"
  },
  {
    "text": "you know like what why why would someone",
    "start": "841320",
    "end": "843180"
  },
  {
    "text": "why would someone hear there has to be",
    "start": "843180",
    "end": "844980"
  },
  {
    "text": "people that use nimin in in here uh",
    "start": "844980",
    "end": "848700"
  },
  {
    "text": "yeah it doesn't feel like a normal",
    "start": "848700",
    "end": "849779"
  },
  {
    "text": "language why do you use Nim",
    "start": "849779",
    "end": "852180"
  },
  {
    "text": "why do you use Nim over",
    "start": "852180",
    "end": "854820"
  },
  {
    "text": "using a language that's already been",
    "start": "854820",
    "end": "856680"
  },
  {
    "text": "around",
    "start": "856680",
    "end": "858860"
  },
  {
    "text": "and it was good for me to transfer uh",
    "start": "859700",
    "end": "862560"
  },
  {
    "text": "from knowing python to something else a",
    "start": "862560",
    "end": "864720"
  },
  {
    "text": "good stepping stone to using something",
    "start": "864720",
    "end": "866160"
  },
  {
    "text": "else okay there's there's some dimmers",
    "start": "866160",
    "end": "868200"
  },
  {
    "text": "that's uh that's what I learned 10 years",
    "start": "868200",
    "end": "870180"
  },
  {
    "text": "ago writing links is fun but I uh feel",
    "start": "870180",
    "end": "872880"
  },
  {
    "text": "like uh there's saturation in the space",
    "start": "872880",
    "end": "874560"
  },
  {
    "text": "yeah I use Nim to write exploits when I",
    "start": "874560",
    "end": "876360"
  },
  {
    "text": "don't have a lot of time same reason why",
    "start": "876360",
    "end": "878040"
  },
  {
    "text": "I use Russ to brag about it yeah okay",
    "start": "878040",
    "end": "879480"
  },
  {
    "text": "it's a it's a talk only language I like",
    "start": "879480",
    "end": "881279"
  },
  {
    "text": "pain why use any other language than",
    "start": "881279",
    "end": "883079"
  },
  {
    "text": "Russ will have you heard my friend oh",
    "start": "883079",
    "end": "884699"
  },
  {
    "text": "Campbell",
    "start": "884699",
    "end": "885959"
  },
  {
    "text": "um I feel like Nim's learning curve is",
    "start": "885959",
    "end": "887820"
  },
  {
    "text": "worse than Russ yeah you read the patch",
    "start": "887820",
    "end": "889380"
  },
  {
    "text": "notes uh or read a tutorial I know I'm",
    "start": "889380",
    "end": "892560"
  },
  {
    "text": "reading the patch notes why is there yet",
    "start": "892560",
    "end": "895079"
  },
  {
    "text": "another one let's see uh you use it to",
    "start": "895079",
    "end": "897660"
  },
  {
    "text": "get free trips to conferences Odin",
    "start": "897660",
    "end": "899160"
  },
  {
    "text": "Campbell uh have you heard of uh have",
    "start": "899160",
    "end": "901139"
  },
  {
    "text": "you heard of Mike Hamilton just no",
    "start": "901139",
    "end": "903420"
  },
  {
    "text": "Mike oh Campbell not my your camel oh",
    "start": "903420",
    "end": "906360"
  },
  {
    "text": "camels",
    "start": "906360",
    "end": "907320"
  },
  {
    "text": "I haven't heard of a greyhound and a hot",
    "start": "907320",
    "end": "909600"
  },
  {
    "text": "minute yeah I know it's here we're",
    "start": "909600",
    "end": "911579"
  },
  {
    "text": "listening to it why are we learning oh",
    "start": "911579",
    "end": "913320"
  },
  {
    "text": "camel",
    "start": "913320",
    "end": "914459"
  },
  {
    "text": "probably the same reason for people to",
    "start": "914459",
    "end": "915899"
  },
  {
    "text": "learn Nim uh oh camel is having a very",
    "start": "915899",
    "end": "919320"
  },
  {
    "text": "large and faster industry adoption right",
    "start": "919320",
    "end": "921899"
  },
  {
    "text": "now it's in a very great place",
    "start": "921899",
    "end": "924420"
  },
  {
    "text": "it's really primed to become a language",
    "start": "924420",
    "end": "926940"
  },
  {
    "text": "that actually might",
    "start": "926940",
    "end": "929279"
  },
  {
    "text": "it might become the first more",
    "start": "929279",
    "end": "931440"
  },
  {
    "text": "mainstream functional language",
    "start": "931440",
    "end": "933660"
  },
  {
    "text": "I think it actually has a chance because",
    "start": "933660",
    "end": "934980"
  },
  {
    "text": "I don't think there's a mainstream",
    "start": "934980",
    "end": "936060"
  },
  {
    "text": "functional language",
    "start": "936060",
    "end": "937440"
  },
  {
    "text": "uh right now and what I mean by that is",
    "start": "937440",
    "end": "940440"
  },
  {
    "text": "that if someone says Haskell you know",
    "start": "940440",
    "end": "942300"
  },
  {
    "text": "they're just",
    "start": "942300",
    "end": "943320"
  },
  {
    "text": "it's not true",
    "start": "943320",
    "end": "945360"
  },
  {
    "text": "um",
    "start": "945360",
    "end": "947420"
  },
  {
    "text": "uh Scala",
    "start": "947699",
    "end": "949560"
  },
  {
    "text": "F sharp F sharp is not mainstream Elixir",
    "start": "949560",
    "end": "952139"
  },
  {
    "text": "I don't think it's maybe Elixir oh camel",
    "start": "952139",
    "end": "954779"
  },
  {
    "text": "are probably pretty near each other",
    "start": "954779",
    "end": "956699"
  },
  {
    "text": "but they're just not like",
    "start": "956699",
    "end": "959839"
  },
  {
    "text": "it's not it's not",
    "start": "960540",
    "end": "963000"
  },
  {
    "text": "Elixir is pretty mainstream no it's not",
    "start": "963000",
    "end": "965279"
  },
  {
    "text": "because that's the thing is I know",
    "start": "965279",
    "end": "966899"
  },
  {
    "text": "virtually nobody that knows a functional",
    "start": "966899",
    "end": "969180"
  },
  {
    "text": "programming language that means it's not",
    "start": "969180",
    "end": "970800"
  },
  {
    "text": "mainstream everybody knows C based style",
    "start": "970800",
    "end": "974220"
  },
  {
    "text": "languages like that's that that's a",
    "start": "974220",
    "end": "975899"
  },
  {
    "text": "mainstream language Elixir is growing",
    "start": "975899",
    "end": "977459"
  },
  {
    "text": "it's not mainstream yet exactly Elixir",
    "start": "977459",
    "end": "979199"
  },
  {
    "text": "has potential to be the first",
    "start": "979199",
    "end": "981139"
  },
  {
    "text": "uh yeah it's yeah it's mainstream for a",
    "start": "981139",
    "end": "984420"
  },
  {
    "text": "very specific Niche use group right you",
    "start": "984420",
    "end": "986339"
  },
  {
    "text": "mean it's not web dev it's not just that",
    "start": "986339",
    "end": "987779"
  },
  {
    "text": "it's not web dev it's typically not CLI",
    "start": "987779",
    "end": "991079"
  },
  {
    "text": "it's typically not this it's typically",
    "start": "991079",
    "end": "992760"
  },
  {
    "text": "not that it's typically not servers",
    "start": "992760",
    "end": "994380"
  },
  {
    "text": "right Elixir has the greatest chance",
    "start": "994380",
    "end": "996300"
  },
  {
    "text": "because right now Elixir has a really",
    "start": "996300",
    "end": "998100"
  },
  {
    "text": "good strong story around uh servers and",
    "start": "998100",
    "end": "1000920"
  },
  {
    "text": "I think they're kind of they're kind of",
    "start": "1000920",
    "end": "1002480"
  },
  {
    "text": "winning oh Campbell's a very practical",
    "start": "1002480",
    "end": "1003800"
  },
  {
    "text": "functional language you can write",
    "start": "1003800",
    "end": "1004759"
  },
  {
    "text": "imperative if you need to yeah so for me",
    "start": "1004759",
    "end": "1006380"
  },
  {
    "text": "it has first off oh camel's the most",
    "start": "1006380",
    "end": "1008540"
  },
  {
    "text": "amazing type system I've ever used in my",
    "start": "1008540",
    "end": "1010279"
  },
  {
    "text": "lifetime it is fantastic notice that I",
    "start": "1010279",
    "end": "1012620"
  },
  {
    "text": "virtue I haven't set a single type yet",
    "start": "1012620",
    "end": "1014959"
  },
  {
    "text": "everything in this file is completely",
    "start": "1014959",
    "end": "1016759"
  },
  {
    "text": "typed right because this thing is typed",
    "start": "1016759",
    "end": "1019519"
  },
  {
    "text": "it knows that okay this thing is an",
    "start": "1019519",
    "end": "1021740"
  },
  {
    "text": "option of int so therefore this is that",
    "start": "1021740",
    "end": "1024260"
  },
  {
    "text": "so when I do the match it has to have",
    "start": "1024260",
    "end": "1026600"
  },
  {
    "text": "some and none that means handle to do",
    "start": "1026600",
    "end": "1029418"
  },
  {
    "text": "has to take in an ID this means that",
    "start": "1029419",
    "end": "1032240"
  },
  {
    "text": "handle to do has to return uh a dream",
    "start": "1032240",
    "end": "1035900"
  },
  {
    "text": "response",
    "start": "1035900",
    "end": "1037400"
  },
  {
    "text": "that's threaded and if it doesn't it",
    "start": "1037400",
    "end": "1040640"
  },
  {
    "text": "means that uh when I try to return",
    "start": "1040640",
    "end": "1042558"
  },
  {
    "text": "something else this thing is going to",
    "start": "1042559",
    "end": "1043819"
  },
  {
    "text": "err right so if I go here and go uh",
    "start": "1043819",
    "end": "1047120"
  },
  {
    "text": "right and I just go uh what is it uh",
    "start": "1047120",
    "end": "1050120"
  },
  {
    "text": "five right",
    "start": "1050120",
    "end": "1051559"
  },
  {
    "text": "I I suck at this kind of stuff uh how do",
    "start": "1051559",
    "end": "1054080"
  },
  {
    "text": "you how do you stop a match statement",
    "start": "1054080",
    "end": "1055460"
  },
  {
    "text": "see I'm still pretty new to this stuff",
    "start": "1055460",
    "end": "1056840"
  },
  {
    "text": "begin uh and there we go",
    "start": "1056840",
    "end": "1060679"
  },
  {
    "text": "uh there we go this uh see look at this",
    "start": "1060679",
    "end": "1063440"
  },
  {
    "text": "it's already telling you this is",
    "start": "1063440",
    "end": "1065059"
  },
  {
    "text": "supposed to have a certain expression",
    "start": "1065059",
    "end": "1066440"
  },
  {
    "text": "but it's not having it therefore it's",
    "start": "1066440",
    "end": "1068299"
  },
  {
    "text": "not it's not working your type is wrong",
    "start": "1068299",
    "end": "1070160"
  },
  {
    "text": "here you're doing the wrong type but",
    "start": "1070160",
    "end": "1072740"
  },
  {
    "text": "when I go this this beauty",
    "start": "1072740",
    "end": "1074780"
  },
  {
    "text": "it goes no your type is now right it can",
    "start": "1074780",
    "end": "1077120"
  },
  {
    "text": "now be used how it's supposed to be used",
    "start": "1077120",
    "end": "1078559"
  },
  {
    "text": "and I just think that that's so",
    "start": "1078559",
    "end": "1080240"
  },
  {
    "text": "fantastic it has such a strong typing",
    "start": "1080240",
    "end": "1082580"
  },
  {
    "text": "system that it's incredible uh what's a",
    "start": "1082580",
    "end": "1085880"
  },
  {
    "text": "strong use case I really like it for uh",
    "start": "1085880",
    "end": "1088039"
  },
  {
    "text": "processing stuff I think it could become",
    "start": "1088039",
    "end": "1089660"
  },
  {
    "text": "uh",
    "start": "1089660",
    "end": "1091700"
  },
  {
    "text": "I think that it could become my new",
    "start": "1091700",
    "end": "1094039"
  },
  {
    "text": "favorite CLI language because right now",
    "start": "1094039",
    "end": "1096860"
  },
  {
    "text": "I write a lot of CLI applications and I",
    "start": "1096860",
    "end": "1099140"
  },
  {
    "text": "could I",
    "start": "1099140",
    "end": "1100340"
  },
  {
    "text": "I can find myself liking more and more",
    "start": "1100340",
    "end": "1103340"
  },
  {
    "text": "using it for clis",
    "start": "1103340",
    "end": "1106160"
  },
  {
    "text": "right was written to write compilers",
    "start": "1106160",
    "end": "1108140"
  },
  {
    "text": "exactly it's like it's a very CLI",
    "start": "1108140",
    "end": "1110360"
  },
  {
    "text": "friendly language and so I keep seeing",
    "start": "1110360",
    "end": "1112820"
  },
  {
    "text": "it over and over again that I'm like",
    "start": "1112820",
    "end": "1114320"
  },
  {
    "text": "okay I'm gonna learn it and now that I'm",
    "start": "1114320",
    "end": "1116720"
  },
  {
    "text": "starting to learn and I go this is",
    "start": "1116720",
    "end": "1117860"
  },
  {
    "text": "fantastic and the thing about ocamel is",
    "start": "1117860",
    "end": "1120500"
  },
  {
    "text": "that it has a really strong you know",
    "start": "1120500",
    "end": "1122780"
  },
  {
    "text": "ecosystem right now it's actually",
    "start": "1122780",
    "end": "1124160"
  },
  {
    "text": "shockingly strong so again it always",
    "start": "1124160",
    "end": "1126799"
  },
  {
    "text": "comes back to the same thing Nim",
    "start": "1126799",
    "end": "1130280"
  },
  {
    "text": "what are you like",
    "start": "1130280",
    "end": "1132559"
  },
  {
    "text": "is it because you like writing",
    "start": "1132559",
    "end": "1134419"
  },
  {
    "text": "programming languages or are you solving",
    "start": "1134419",
    "end": "1135919"
  },
  {
    "text": "a real thing like I think of Odin Odin",
    "start": "1135919",
    "end": "1138140"
  },
  {
    "text": "is a language designed for game",
    "start": "1138140",
    "end": "1139940"
  },
  {
    "text": "programming it's designed for graphics",
    "start": "1139940",
    "end": "1141980"
  },
  {
    "text": "programming maybe it would be a better",
    "start": "1141980",
    "end": "1143240"
  },
  {
    "text": "way to say it Jai is another language",
    "start": "1143240",
    "end": "1145280"
  },
  {
    "text": "designed specifically for a niche use",
    "start": "1145280",
    "end": "1147980"
  },
  {
    "text": "case which means that it can be very",
    "start": "1147980",
    "end": "1149660"
  },
  {
    "text": "very good what is Nim's Niche use case I",
    "start": "1149660",
    "end": "1154100"
  },
  {
    "text": "don't know",
    "start": "1154100",
    "end": "1155840"
  },
  {
    "text": "like I I don't I don't I have no idea",
    "start": "1155840",
    "end": "1158360"
  },
  {
    "text": "and so that's what I want to see is what",
    "start": "1158360",
    "end": "1160160"
  },
  {
    "text": "is the niche use case for this what are",
    "start": "1160160",
    "end": "1162080"
  },
  {
    "text": "you trying to solve that can be solved",
    "start": "1162080",
    "end": "1163700"
  },
  {
    "text": "better than any other language now when",
    "start": "1163700",
    "end": "1166520"
  },
  {
    "text": "it comes to when it comes to game",
    "start": "1166520",
    "end": "1168260"
  },
  {
    "text": "programming in Odin Odin just has like",
    "start": "1168260",
    "end": "1170720"
  },
  {
    "text": "really amazing things and it's just this",
    "start": "1170720",
    "end": "1173120"
  },
  {
    "text": "really great a tunable GC isn't isn't a",
    "start": "1173120",
    "end": "1175940"
  },
  {
    "text": "use case right it's not something that's",
    "start": "1175940",
    "end": "1177919"
  },
  {
    "text": "a huge win a tunable GC just makes a",
    "start": "1177919",
    "end": "1180559"
  },
  {
    "text": "language that should be fast faster like",
    "start": "1180559",
    "end": "1182900"
  },
  {
    "text": "go like if you can do an arena",
    "start": "1182900",
    "end": "1184340"
  },
  {
    "text": "allocation and go you just made your",
    "start": "1184340",
    "end": "1186440"
  },
  {
    "text": "program from 99 to 99.5 faster",
    "start": "1186440",
    "end": "1190940"
  },
  {
    "text": "so",
    "start": "1190940",
    "end": "1193520"
  },
  {
    "text": "that's cool but it's not a reason to",
    "start": "1193520",
    "end": "1196039"
  },
  {
    "text": "switch from say go to Nim",
    "start": "1196039",
    "end": "1198080"
  },
  {
    "text": "does that make sense and the name",
    "start": "1198080",
    "end": "1201260"
  },
  {
    "text": "is the Imogen",
    "start": "1201260",
    "end": "1204100"
  }
]