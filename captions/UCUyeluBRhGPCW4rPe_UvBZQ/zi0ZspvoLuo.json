[
  {
    "text": "I feel like this article would have been",
    "start": "60",
    "end": "1860"
  },
  {
    "text": "sacrilege only a few years ago under",
    "start": "1860",
    "end": "3600"
  },
  {
    "text": "protection of this newfound trendiness",
    "start": "3600",
    "end": "5460"
  },
  {
    "text": "and react to this pleasure I'd like to",
    "start": "5460",
    "end": "7020"
  },
  {
    "text": "finally say my piece dude I've been",
    "start": "7020",
    "end": "8639"
  },
  {
    "text": "saying my piece for a long time never",
    "start": "8639",
    "end": "10080"
  },
  {
    "text": "never be worried about saying what you",
    "start": "10080",
    "end": "11760"
  },
  {
    "text": "think okay uh don't be mean but don't",
    "start": "11760",
    "end": "14700"
  },
  {
    "text": "you know say what you think about",
    "start": "14700",
    "end": "16379"
  },
  {
    "text": "technology I don't care I don't much",
    "start": "16379",
    "end": "18720"
  },
  {
    "text": "care for react and frankly I'd say the",
    "start": "18720",
    "end": "20220"
  },
  {
    "text": "same uh same is true for most even if",
    "start": "20220",
    "end": "22380"
  },
  {
    "text": "you have yet to actualize your",
    "start": "22380",
    "end": "23699"
  },
  {
    "text": "resentment trust me you hate it uh well",
    "start": "23699",
    "end": "27060"
  },
  {
    "text": "I've been using react for quite a long",
    "start": "27060",
    "end": "28260"
  },
  {
    "text": "time and uh long enough to say I'd",
    "start": "28260",
    "end": "30300"
  },
  {
    "text": "prefer the company of another I mean I'm",
    "start": "30300",
    "end": "32700"
  },
  {
    "text": "practically a react developer for Pete's",
    "start": "32700",
    "end": "34440"
  },
  {
    "text": "sake my last company this company",
    "start": "34440",
    "end": "35700"
  },
  {
    "text": "probably my next company I can it can't",
    "start": "35700",
    "end": "39059"
  },
  {
    "text": "seem to avoid it you'd think I'd stop",
    "start": "39059",
    "end": "40680"
  },
  {
    "text": "caring so much after a while but it just",
    "start": "40680",
    "end": "42840"
  },
  {
    "text": "takes one look at the alternative to",
    "start": "42840",
    "end": "44640"
  },
  {
    "text": "wonder why you'd ever stay yeah actually",
    "start": "44640",
    "end": "46440"
  },
  {
    "text": "okay I agree I'll tell you react is not",
    "start": "46440",
    "end": "48960"
  },
  {
    "text": "all it's cracked up to be I mean it was",
    "start": "48960",
    "end": "50760"
  },
  {
    "text": "It was obviously when react came onto",
    "start": "50760",
    "end": "53579"
  },
  {
    "text": "the scene it all looked so elegant",
    "start": "53579",
    "end": "55199"
  },
  {
    "text": "component code would focus on locality",
    "start": "55199",
    "end": "57000"
  },
  {
    "text": "of behavior your Dom was inlined is sat",
    "start": "57000",
    "end": "59579"
  },
  {
    "text": "right next to the event handlers your",
    "start": "59579",
    "end": "61079"
  },
  {
    "text": "code looked modular and was neat",
    "start": "61079",
    "end": "62460"
  },
  {
    "text": "actually I really do agree with this I",
    "start": "62460",
    "end": "63780"
  },
  {
    "text": "really did like I think reacts initial",
    "start": "63780",
    "end": "65760"
  },
  {
    "text": "starting was incredible for those that",
    "start": "65760",
    "end": "67680"
  },
  {
    "text": "weren't there when react started it was",
    "start": "67680",
    "end": "69960"
  },
  {
    "text": "like it was incredible it was the same",
    "start": "69960",
    "end": "71880"
  },
  {
    "text": "feeling I got when I started using",
    "start": "71880",
    "end": "73080"
  },
  {
    "text": "jQuery",
    "start": "73080",
    "end": "74460"
  },
  {
    "text": "like when I started using jQuery from",
    "start": "74460",
    "end": "76860"
  },
  {
    "text": "using nothing it was just like wow right",
    "start": "76860",
    "end": "79500"
  },
  {
    "text": "it was like such a wow moment and then",
    "start": "79500",
    "end": "81780"
  },
  {
    "text": "going from using jQuery and this to",
    "start": "81780",
    "end": "84060"
  },
  {
    "text": "react it was such a wow moment I really",
    "start": "84060",
    "end": "87119"
  },
  {
    "text": "loved it",
    "start": "87119",
    "end": "89400"
  },
  {
    "text": "it was a cool moment in life yeah",
    "start": "89400",
    "end": "90780"
  },
  {
    "text": "tutorials were born books were written",
    "start": "90780",
    "end": "92520"
  },
  {
    "text": "gurus were created react had erected oh",
    "start": "92520",
    "end": "94979"
  },
  {
    "text": "yeah hell yeah we're gonna get a solid",
    "start": "94979",
    "end": "96900"
  },
  {
    "text": "erection from this one and Empire faster",
    "start": "96900",
    "end": "98820"
  },
  {
    "text": "than I'd uh seen before no jQuery",
    "start": "98820",
    "end": "100740"
  },
  {
    "text": "definitely did uh the developer",
    "start": "100740",
    "end": "102180"
  },
  {
    "text": "experience was unparalleled but better",
    "start": "102180",
    "end": "104159"
  },
  {
    "text": "than that it was obvious the first uh",
    "start": "104159",
    "end": "106560"
  },
  {
    "text": "the first to try a taste were the",
    "start": "106560",
    "end": "109259"
  },
  {
    "text": "conference goers the think fluencers the",
    "start": "109259",
    "end": "111360"
  },
  {
    "text": "nerdiest of us the library spread how",
    "start": "111360",
    "end": "113640"
  },
  {
    "text": "could it not it was syntactically simple",
    "start": "113640",
    "end": "116100"
  },
  {
    "text": "we all bought in then we were gifted",
    "start": "116100",
    "end": "118439"
  },
  {
    "text": "hooks huzzah to be honest they were a",
    "start": "118439",
    "end": "120780"
  },
  {
    "text": "bit foreign at first but the clarity",
    "start": "120780",
    "end": "122220"
  },
  {
    "text": "Newfound Elegance quicker to type faster",
    "start": "122220",
    "end": "124259"
  },
  {
    "text": "to iterate easier to read react was the",
    "start": "124259",
    "end": "126299"
  },
  {
    "text": "correct choice I actually felt like",
    "start": "126299",
    "end": "127500"
  },
  {
    "text": "hooks is where things started to fall",
    "start": "127500",
    "end": "128880"
  },
  {
    "text": "apart",
    "start": "128880",
    "end": "130619"
  },
  {
    "text": "honestly I I know that's a very",
    "start": "130619",
    "end": "133080"
  },
  {
    "text": "unpopular take but to me it's like the",
    "start": "133080",
    "end": "135780"
  },
  {
    "text": "worst middle ground between fine grain",
    "start": "135780",
    "end": "137640"
  },
  {
    "text": "reactivity",
    "start": "137640",
    "end": "140180"
  },
  {
    "text": "and uh like this class component based I",
    "start": "140400",
    "end": "143459"
  },
  {
    "text": "really think that fine-grained",
    "start": "143459",
    "end": "144720"
  },
  {
    "text": "reactivity solid.js is the route to go",
    "start": "144720",
    "end": "147120"
  },
  {
    "text": "this Middle Ground of hooks I feel like",
    "start": "147120",
    "end": "149160"
  },
  {
    "text": "is the worst ground to go I always feel",
    "start": "149160",
    "end": "151200"
  },
  {
    "text": "like compromise is the worst place uh",
    "start": "151200",
    "end": "153660"
  },
  {
    "text": "but then years pass and you start to",
    "start": "153660",
    "end": "154920"
  },
  {
    "text": "notice a wealth of Alternatives every",
    "start": "154920",
    "end": "156360"
  },
  {
    "text": "new month a new name okay well that's",
    "start": "156360",
    "end": "158220"
  },
  {
    "text": "just JavaScript being terrible and we",
    "start": "158220",
    "end": "160020"
  },
  {
    "text": "scoff at these new fangled weekend",
    "start": "160020",
    "end": "161519"
  },
  {
    "text": "projects they'll never catch on react is",
    "start": "161519",
    "end": "163440"
  },
  {
    "text": "Battle tested react has molded itself",
    "start": "163440",
    "end": "164940"
  },
  {
    "text": "perfectly into a whole weed previous",
    "start": "164940",
    "end": "166620"
  },
  {
    "text": "that we found previously",
    "start": "166620",
    "end": "168440"
  },
  {
    "text": "there is no room left for a new kind of",
    "start": "168440",
    "end": "171060"
  },
  {
    "text": "spackle what a great I like how this",
    "start": "171060",
    "end": "174000"
  },
  {
    "text": "reads this is great this feels really",
    "start": "174000",
    "end": "176160"
  },
  {
    "text": "good my nose is itching I forgot to",
    "start": "176160",
    "end": "177900"
  },
  {
    "text": "shave today look at how big my beard is",
    "start": "177900",
    "end": "180599"
  },
  {
    "text": "I can't be going this long and then",
    "start": "180599",
    "end": "182700"
  },
  {
    "text": "people start uh speaking too positively",
    "start": "182700",
    "end": "185099"
  },
  {
    "text": "too consistently it feels like everybody",
    "start": "185099",
    "end": "187140"
  },
  {
    "text": "is happy with their new things and less",
    "start": "187140",
    "end": "189239"
  },
  {
    "text": "happy with the old thing yeah I mean",
    "start": "189239",
    "end": "191340"
  },
  {
    "text": "that's always true uh but those are just",
    "start": "191340",
    "end": "193560"
  },
  {
    "text": "passing pads nothing like how react",
    "start": "193560",
    "end": "195120"
  },
  {
    "text": "stood the test of time from his launch",
    "start": "195120",
    "end": "196560"
  },
  {
    "text": "in 2015 uh and iteration in 2019 and",
    "start": "196560",
    "end": "200280"
  },
  {
    "text": "constant Evolution you know react",
    "start": "200280",
    "end": "201659"
  },
  {
    "text": "doesn't feel so stable anymore I mean",
    "start": "201659",
    "end": "203280"
  },
  {
    "text": "maybe it's the best choice but who",
    "start": "203280",
    "end": "204540"
  },
  {
    "text": "really knows I thought we were done",
    "start": "204540",
    "end": "206040"
  },
  {
    "text": "iterating but I just kept getting swept",
    "start": "206040",
    "end": "207900"
  },
  {
    "text": "along with some new change maybe there's",
    "start": "207900",
    "end": "209700"
  },
  {
    "text": "a better way than I haven't seen yet it",
    "start": "209700",
    "end": "211800"
  },
  {
    "text": "can't possibly hurt to look and yet it",
    "start": "211800",
    "end": "214260"
  },
  {
    "text": "does",
    "start": "214260",
    "end": "215519"
  },
  {
    "text": "reactant hooks Evan you right this is",
    "start": "215519",
    "end": "218340"
  },
  {
    "text": "the uh you guy The View guy I mean",
    "start": "218340",
    "end": "221280"
  },
  {
    "text": "I'm always so curious about this uh I've",
    "start": "221280",
    "end": "223920"
  },
  {
    "text": "heard such mixed reviews of this person",
    "start": "223920",
    "end": "225299"
  },
  {
    "text": "I don't know him I'd love to get to know",
    "start": "225299",
    "end": "226980"
  },
  {
    "text": "him maybe one day I'll be at a",
    "start": "226980",
    "end": "228120"
  },
  {
    "text": "conference with him and I can sit down",
    "start": "228120",
    "end": "229140"
  },
  {
    "text": "and just talk to him uh hooks created a",
    "start": "229140",
    "end": "231060"
  },
  {
    "text": "lot of problems that simply do not exist",
    "start": "231060",
    "end": "232620"
  },
  {
    "text": "in idiomatic JS I hate that phrase uh",
    "start": "232620",
    "end": "235080"
  },
  {
    "text": "difficult to optimize absolutely too",
    "start": "235080",
    "end": "237000"
  },
  {
    "text": "heavy to invest in runtime semantics",
    "start": "237000",
    "end": "238739"
  },
  {
    "text": "which makes it difficult to evolve in a",
    "start": "238739",
    "end": "240360"
  },
  {
    "text": "direction that makes more use of",
    "start": "240360",
    "end": "241620"
  },
  {
    "text": "compilers",
    "start": "241620",
    "end": "242940"
  },
  {
    "text": "I know all those words absolutely",
    "start": "242940",
    "end": "245540"
  },
  {
    "text": "individually I can Define anything hit",
    "start": "245540",
    "end": "248340"
  },
  {
    "text": "me",
    "start": "248340",
    "end": "249900"
  },
  {
    "text": "but when you put them together",
    "start": "249900",
    "end": "252060"
  },
  {
    "text": "I don't even know uh hooks uh isn't",
    "start": "252060",
    "end": "254879"
  },
  {
    "text": "react but honestly it might as well be",
    "start": "254879",
    "end": "256979"
  },
  {
    "text": "react hooks in the distinct from react",
    "start": "256979",
    "end": "259680"
  },
  {
    "text": "itself you can still use class",
    "start": "259680",
    "end": "261000"
  },
  {
    "text": "components after all however it has",
    "start": "261000",
    "end": "262440"
  },
  {
    "text": "taken over the react landscape to the",
    "start": "262440",
    "end": "264419"
  },
  {
    "text": "point where hooks seem inherent to a",
    "start": "264419",
    "end": "266400"
  },
  {
    "text": "reactive development when I refer to",
    "start": "266400",
    "end": "268139"
  },
  {
    "text": "reacts model of things in this article",
    "start": "268139",
    "end": "269880"
  },
  {
    "text": "I'm referring to react hooks okay uh I",
    "start": "269880",
    "end": "272940"
  },
  {
    "text": "recently read someone's astonishment at",
    "start": "272940",
    "end": "274560"
  },
  {
    "text": "how smoothly the react ecosystem",
    "start": "274560",
    "end": "276320"
  },
  {
    "text": "translation to hooks was how everyone",
    "start": "276320",
    "end": "278759"
  },
  {
    "text": "was unilaterally in agreement on its",
    "start": "278759",
    "end": "280800"
  },
  {
    "text": "benefit I was not I've been just I feel",
    "start": "280800",
    "end": "282479"
  },
  {
    "text": "like I remember when we were making this",
    "start": "282479",
    "end": "284280"
  },
  {
    "text": "upgrade at Netflix and just like",
    "start": "284280",
    "end": "286620"
  },
  {
    "text": "researching it oh gosh I must spend four",
    "start": "286620",
    "end": "288720"
  },
  {
    "text": "years ago and I was just like such a",
    "start": "288720",
    "end": "290160"
  },
  {
    "text": "proponent like dude I don't I don't know",
    "start": "290160",
    "end": "292040"
  },
  {
    "text": "I don't know I don't like this how",
    "start": "292040",
    "end": "294419"
  },
  {
    "text": "everyone was unilaterally in agreement",
    "start": "294419",
    "end": "295919"
  },
  {
    "text": "on its benefit not let's say this is not",
    "start": "295919",
    "end": "297600"
  },
  {
    "text": "the pass I remember I remember quite a",
    "start": "297600",
    "end": "299280"
  },
  {
    "text": "bit of uh contention particularly on the",
    "start": "299280",
    "end": "301620"
  },
  {
    "text": "orange site",
    "start": "301620",
    "end": "304160"
  },
  {
    "text": "but not exclusive to it I think I",
    "start": "304620",
    "end": "306600"
  },
  {
    "text": "understand now where a lot of the",
    "start": "306600",
    "end": "307979"
  },
  {
    "text": "ideological resistance to hooks comes",
    "start": "307979",
    "end": "309720"
  },
  {
    "text": "from thread",
    "start": "309720",
    "end": "311580"
  },
  {
    "text": "but not necessarily siding with the",
    "start": "311580",
    "end": "313080"
  },
  {
    "text": "anti-hook crowd",
    "start": "313080",
    "end": "315918"
  },
  {
    "text": "it's starting to get a weird sounding it",
    "start": "316560",
    "end": "318600"
  },
  {
    "text": "sounds like politics at this point but I",
    "start": "318600",
    "end": "320340"
  },
  {
    "text": "do think a lot of the concerns were",
    "start": "320340",
    "end": "321660"
  },
  {
    "text": "warranted react hooks existed within an",
    "start": "321660",
    "end": "323460"
  },
  {
    "text": "environment controlled by class",
    "start": "323460",
    "end": "324720"
  },
  {
    "text": "components to allow this transition",
    "start": "324720",
    "end": "326340"
  },
  {
    "text": "react had to be a fully compatible with",
    "start": "326340",
    "end": "328500"
  },
  {
    "text": "class code and it was this compatibility",
    "start": "328500",
    "end": "330180"
  },
  {
    "text": "compatibility combined with",
    "start": "330180",
    "end": "331680"
  },
  {
    "text": "composability and readability",
    "start": "331680",
    "end": "333300"
  },
  {
    "text": "improvements used uh ushered the",
    "start": "333300",
    "end": "336240"
  },
  {
    "text": "industry as a whole to adopt hooks",
    "start": "336240",
    "end": "338039"
  },
  {
    "text": "quicker than one would predict I",
    "start": "338039",
    "end": "340259"
  },
  {
    "text": "generally I do genuinely think hooks",
    "start": "340259",
    "end": "342060"
  },
  {
    "text": "brought both the improvements while it's",
    "start": "342060",
    "end": "344280"
  },
  {
    "text": "not universally agreed upon I'm in The",
    "start": "344280",
    "end": "346740"
  },
  {
    "text": "Firm composability over inheritance Camp",
    "start": "346740",
    "end": "349020"
  },
  {
    "text": "yeah I agree with that for the almost",
    "start": "349020",
    "end": "351000"
  },
  {
    "text": "all cases and I think sharing Behavior",
    "start": "351000",
    "end": "353220"
  },
  {
    "text": "via functions is drastically improvement",
    "start": "353220",
    "end": "355139"
  },
  {
    "text": "over class inheritance I can also get",
    "start": "355139",
    "end": "357840"
  },
  {
    "text": "behind that for most cases as the",
    "start": "357840",
    "end": "359880"
  },
  {
    "text": "readability while the length of your",
    "start": "359880",
    "end": "361320"
  },
  {
    "text": "code may not be directly correlated with",
    "start": "361320",
    "end": "363720"
  },
  {
    "text": "legibility yep react hooks improved",
    "start": "363720",
    "end": "365759"
  },
  {
    "text": "locality of behavior I would agree with",
    "start": "365759",
    "end": "367380"
  },
  {
    "text": "that as well locality of behavior is why",
    "start": "367380",
    "end": "369660"
  },
  {
    "text": "I like solid yes your eyes do less",
    "start": "369660",
    "end": "371280"
  },
  {
    "text": "scanning and smaller components event",
    "start": "371280",
    "end": "372660"
  },
  {
    "text": "listeners State Transformations and",
    "start": "372660",
    "end": "374340"
  },
  {
    "text": "rendered output can have your eyes",
    "start": "374340",
    "end": "375600"
  },
  {
    "text": "jumping up and down and hooks can",
    "start": "375600",
    "end": "377580"
  },
  {
    "text": "improve on this",
    "start": "377580",
    "end": "379020"
  },
  {
    "text": "I find function components do uh write",
    "start": "379020",
    "end": "381780"
  },
  {
    "text": "let's see I find function components",
    "start": "381780",
    "end": "384060"
  },
  {
    "text": "both right uh quicker to write oh my",
    "start": "384060",
    "end": "385919"
  },
  {
    "text": "goodness and easier to read uh I will",
    "start": "385919",
    "end": "388020"
  },
  {
    "text": "say that one thing they're missing right",
    "start": "388020",
    "end": "389340"
  },
  {
    "text": "here is there's like this whole higher",
    "start": "389340",
    "end": "391500"
  },
  {
    "text": "order components phase that is just like",
    "start": "391500",
    "end": "393180"
  },
  {
    "text": "completely skipped dear goodness",
    "start": "393180",
    "end": "397580"
  },
  {
    "text": "dear goodness about readability at least",
    "start": "397680",
    "end": "400440"
  },
  {
    "text": "in the intermediate sense does not",
    "start": "400440",
    "end": "402120"
  },
  {
    "text": "itself go hand in hand with complexity",
    "start": "402120",
    "end": "404100"
  },
  {
    "text": "hooks lower complexity via localized",
    "start": "404100",
    "end": "406199"
  },
  {
    "text": "Behavior but increases it by",
    "start": "406199",
    "end": "407400"
  },
  {
    "text": "abstractions it had to make I think",
    "start": "407400",
    "end": "410100"
  },
  {
    "text": "about this out of context quote from",
    "start": "410100",
    "end": "411900"
  },
  {
    "text": "Amos a lot",
    "start": "411900",
    "end": "413520"
  },
  {
    "text": "or rather it's half truth that",
    "start": "413520",
    "end": "415919"
  },
  {
    "text": "conveniently covers up the fact that",
    "start": "415919",
    "end": "417600"
  },
  {
    "text": "when you make something simple you move",
    "start": "417600",
    "end": "419460"
  },
  {
    "text": "complexity elsewhere",
    "start": "419460",
    "end": "421860"
  },
  {
    "text": "yeah I fully agree with that statement",
    "start": "421860",
    "end": "423560"
  },
  {
    "text": "abstractions don't necessarily make",
    "start": "423560",
    "end": "426180"
  },
  {
    "text": "things better",
    "start": "426180",
    "end": "427380"
  },
  {
    "text": "they just change things",
    "start": "427380",
    "end": "430440"
  },
  {
    "text": "when we abstract over complex systems we",
    "start": "430440",
    "end": "433620"
  },
  {
    "text": "don't eliminate complexity we move it in",
    "start": "433620",
    "end": "435240"
  },
  {
    "text": "our case complex system is not front-end",
    "start": "435240",
    "end": "437039"
  },
  {
    "text": "development but react hooks move our",
    "start": "437039",
    "end": "439020"
  },
  {
    "text": "mental model around to think about State",
    "start": "439020",
    "end": "440580"
  },
  {
    "text": "Transformations and synchronization",
    "start": "440580",
    "end": "442139"
  },
  {
    "text": "instead of life cycles or at least it",
    "start": "442139",
    "end": "444120"
  },
  {
    "text": "attempts to absolutely",
    "start": "444120",
    "end": "446220"
  },
  {
    "text": "there were some sacrifices to",
    "start": "446220",
    "end": "447960"
  },
  {
    "text": "Performance brought out by this movement",
    "start": "447960",
    "end": "449580"
  },
  {
    "text": "its bandages visible as hooks use memo",
    "start": "449580",
    "end": "451680"
  },
  {
    "text": "use callback uh I know someone that",
    "start": "451680",
    "end": "453960"
  },
  {
    "text": "calls it use memo never liked that",
    "start": "453960",
    "end": "455520"
  },
  {
    "text": "finding memos I don't mean to imply that",
    "start": "455520",
    "end": "458660"
  },
  {
    "text": "memoization did not predate hooks in",
    "start": "458660",
    "end": "461460"
  },
  {
    "text": "react I did react memo I'm saying we now",
    "start": "461460",
    "end": "464880"
  },
  {
    "text": "have to memorize State initialization",
    "start": "464880",
    "end": "466620"
  },
  {
    "text": "and Transformations due to the",
    "start": "466620",
    "end": "467759"
  },
  {
    "text": "improvements we've made in localizing",
    "start": "467759",
    "end": "469080"
  },
  {
    "text": "Behavior there's a common Community",
    "start": "469080",
    "end": "470460"
  },
  {
    "text": "conversations on memoization in react",
    "start": "470460",
    "end": "472560"
  },
  {
    "text": "much more so than other Frameworks value",
    "start": "472560",
    "end": "474780"
  },
  {
    "text": "caching is important in all Frameworks",
    "start": "474780",
    "end": "476639"
  },
  {
    "text": "but hooks force a lot of that decision",
    "start": "476639",
    "end": "478500"
  },
  {
    "text": "making onto the component author not the",
    "start": "478500",
    "end": "481560"
  },
  {
    "text": "core Library yeah like the thing is like",
    "start": "481560",
    "end": "483900"
  },
  {
    "text": "if you use something like solid.js",
    "start": "483900",
    "end": "487199"
  },
  {
    "text": "there's a lot to it and that if it's",
    "start": "487199",
    "end": "489360"
  },
  {
    "text": "something that's rapidly changing has",
    "start": "489360",
    "end": "490680"
  },
  {
    "text": "the same value you can use something",
    "start": "490680",
    "end": "491759"
  },
  {
    "text": "like memo so it doesn't keep firing",
    "start": "491759",
    "end": "493919"
  },
  {
    "text": "but for the most part",
    "start": "493919",
    "end": "496979"
  },
  {
    "text": "like due to its speed I've rarely even",
    "start": "496979",
    "end": "498960"
  },
  {
    "text": "thought about it it's like really nice",
    "start": "498960",
    "end": "500639"
  },
  {
    "text": "solid.js is really nice I'm also curious",
    "start": "500639",
    "end": "502259"
  },
  {
    "text": "how felt does a lot of their stuff I",
    "start": "502259",
    "end": "503759"
  },
  {
    "text": "haven't played this felt enough to know",
    "start": "503759",
    "end": "504900"
  },
  {
    "text": "about it we'll get more into that later",
    "start": "504900",
    "end": "506340"
  },
  {
    "text": "but we'll continue alright",
    "start": "506340",
    "end": "508020"
  },
  {
    "text": "there's a model you'll often read about",
    "start": "508020",
    "end": "509639"
  },
  {
    "text": "in react stocks or YouTube videos that",
    "start": "509639",
    "end": "511199"
  },
  {
    "text": "let's see and there's what is really",
    "start": "511199",
    "end": "513060"
  },
  {
    "text": "happening or at least there exists a",
    "start": "513060",
    "end": "515039"
  },
  {
    "text": "mental model more true to the actual",
    "start": "515039",
    "end": "516599"
  },
  {
    "text": "Behavior than one uh and one I think is",
    "start": "516599",
    "end": "518940"
  },
  {
    "text": "important to go over okay a better",
    "start": "518940",
    "end": "520320"
  },
  {
    "text": "mental model it's rare to see a",
    "start": "520320",
    "end": "521880"
  },
  {
    "text": "conversation around react itself without",
    "start": "521880",
    "end": "523140"
  },
  {
    "text": "seeing them in terms of vdom sprinkled",
    "start": "523140",
    "end": "524940"
  },
  {
    "text": "about Dan abramov doesn't seem to be a",
    "start": "524940",
    "end": "526920"
  },
  {
    "text": "fan of this I agree with him here the",
    "start": "526920",
    "end": "528899"
  },
  {
    "text": "react V Dom should not be our Focus",
    "start": "528899",
    "end": "530600"
  },
  {
    "text": "react is not it's vedom the vdom is a",
    "start": "530600",
    "end": "533580"
  },
  {
    "text": "consequence of react not the cause of it",
    "start": "533580",
    "end": "535620"
  },
  {
    "text": "although when discussing the immediate",
    "start": "535620",
    "end": "538200"
  },
  {
    "text": "differences it's something easy to point",
    "start": "538200",
    "end": "539519"
  },
  {
    "text": "to we should instead be focusing on how",
    "start": "539519",
    "end": "541860"
  },
  {
    "text": "react components are meant to be pure",
    "start": "541860",
    "end": "544860"
  },
  {
    "text": "this term seems immediately misplaced",
    "start": "544860",
    "end": "547140"
  },
  {
    "text": "when we remember that components have",
    "start": "547140",
    "end": "548399"
  },
  {
    "text": "state state seems directly contrary to",
    "start": "548399",
    "end": "550260"
  },
  {
    "text": "the idea of pure functions something",
    "start": "550260",
    "end": "551880"
  },
  {
    "text": "that produces the same output for a",
    "start": "551880",
    "end": "553500"
  },
  {
    "text": "given set of inputs no matter the amount",
    "start": "553500",
    "end": "555060"
  },
  {
    "text": "of times or ways in which we call it so",
    "start": "555060",
    "end": "557519"
  },
  {
    "text": "this whole idea remember that or one",
    "start": "557519",
    "end": "559380"
  },
  {
    "text": "that that video we watched earlier or",
    "start": "559380",
    "end": "561240"
  },
  {
    "text": "that uh that article we watched earlier",
    "start": "561240",
    "end": "562980"
  },
  {
    "text": "about how we how you create the state",
    "start": "562980",
    "end": "565140"
  },
  {
    "text": "and functions and returning out those",
    "start": "565140",
    "end": "566760"
  },
  {
    "text": "objects and we called it oop versus uh",
    "start": "566760",
    "end": "569519"
  },
  {
    "text": "functional effectively hooks does the",
    "start": "569519",
    "end": "572100"
  },
  {
    "text": "same thing it just does it programmatic",
    "start": "572100",
    "end": "573779"
  },
  {
    "text": "for you",
    "start": "573779",
    "end": "574860"
  },
  {
    "text": "you know what I mean I'm excited to see",
    "start": "574860",
    "end": "576660"
  },
  {
    "text": "where this is going",
    "start": "576660",
    "end": "579319"
  },
  {
    "text": "but hooks in some sense you can imagine",
    "start": "580080",
    "end": "582120"
  },
  {
    "text": "our properties on a class or functions",
    "start": "582120",
    "end": "583860"
  },
  {
    "text": "on a class",
    "start": "583860",
    "end": "586279"
  },
  {
    "text": "it's the same thing but slightly",
    "start": "586380",
    "end": "588060"
  },
  {
    "text": "different it's hard to explain if you're",
    "start": "588060",
    "end": "590339"
  },
  {
    "text": "not pretty familiar with programming but",
    "start": "590339",
    "end": "591839"
  },
  {
    "text": "it's like it allows for a bit more",
    "start": "591839",
    "end": "593640"
  },
  {
    "text": "composability which is nice",
    "start": "593640",
    "end": "596880"
  },
  {
    "text": "but I find that often",
    "start": "596880",
    "end": "599760"
  },
  {
    "text": "I don't really like I don't use it in",
    "start": "599760",
    "end": "601860"
  },
  {
    "text": "such a way that I use it in multiple",
    "start": "601860",
    "end": "603240"
  },
  {
    "text": "places right it's like I always am just",
    "start": "603240",
    "end": "604980"
  },
  {
    "text": "using this in this one area it's not",
    "start": "604980",
    "end": "607620"
  },
  {
    "text": "really like I'm not really composing",
    "start": "607620",
    "end": "609060"
  },
  {
    "text": "anything",
    "start": "609060",
    "end": "610019"
  },
  {
    "text": "I'm just defining a class that's set in",
    "start": "610019",
    "end": "612899"
  },
  {
    "text": "a function with these properties that I",
    "start": "612899",
    "end": "614760"
  },
  {
    "text": "pull out programmatically",
    "start": "614760",
    "end": "616200"
  },
  {
    "text": "you know what I mean like most the time",
    "start": "616200",
    "end": "617580"
  },
  {
    "text": "I'm not composing anything I don't have",
    "start": "617580",
    "end": "619019"
  },
  {
    "text": "this behavior that I'm spreading to",
    "start": "619019",
    "end": "620220"
  },
  {
    "text": "multiple classes I have this behavior",
    "start": "620220",
    "end": "621540"
  },
  {
    "text": "that I'm spreading to a singular item",
    "start": "621540",
    "end": "623279"
  },
  {
    "text": "and that is it",
    "start": "623279",
    "end": "625140"
  },
  {
    "text": "state is yet another input and the react",
    "start": "625140",
    "end": "627180"
  },
  {
    "text": "land uh calls to you state or another",
    "start": "627180",
    "end": "629220"
  },
  {
    "text": "way of receiving input State lives in",
    "start": "629220",
    "end": "630720"
  },
  {
    "text": "the react V Dom state tree components",
    "start": "630720",
    "end": "632580"
  },
  {
    "text": "are called in a very order mannered yep",
    "start": "632580",
    "end": "634080"
  },
  {
    "text": "you state will pop inputs off the",
    "start": "634080",
    "end": "636180"
  },
  {
    "text": "provided stack",
    "start": "636180",
    "end": "637459"
  },
  {
    "text": "both state and props are kind of inputs",
    "start": "637459",
    "end": "640019"
  },
  {
    "text": "uh calls to set standard signals to",
    "start": "640019",
    "end": "642060"
  },
  {
    "text": "reacts internals not to direct mutations",
    "start": "642060",
    "end": "643740"
  },
  {
    "text": "these signals will in turn update the",
    "start": "643740",
    "end": "645899"
  },
  {
    "text": "component States stack and rerun the",
    "start": "645899",
    "end": "648180"
  },
  {
    "text": "component the component will then",
    "start": "648180",
    "end": "649380"
  },
  {
    "text": "produce it so yep yep yep yep yep yep",
    "start": "649380",
    "end": "652920"
  },
  {
    "text": "yep it makes a little bit easier",
    "start": "652920",
    "end": "656279"
  },
  {
    "text": "let's see components let's say react",
    "start": "656279",
    "end": "657959"
  },
  {
    "text": "components might as well be a a black",
    "start": "657959",
    "end": "660240"
  },
  {
    "text": "box to react yep its internal behavior",
    "start": "660240",
    "end": "662279"
  },
  {
    "text": "is not viewable we can think of",
    "start": "662279",
    "end": "663360"
  },
  {
    "text": "components themselves as being reactive",
    "start": "663360",
    "end": "664860"
  },
  {
    "text": "objects instead of individual pieces of",
    "start": "664860",
    "end": "666420"
  },
  {
    "text": "state that's commonly what people mean",
    "start": "666420",
    "end": "668220"
  },
  {
    "text": "when they describe reacts reactivity",
    "start": "668220",
    "end": "669779"
  },
  {
    "text": "model as not being fine-grained yep it",
    "start": "669779",
    "end": "672600"
  },
  {
    "text": "sits on the component level not at the",
    "start": "672600",
    "end": "674700"
  },
  {
    "text": "property or individual you know at the",
    "start": "674700",
    "end": "677040"
  },
  {
    "text": "individual point of render uh this",
    "start": "677040",
    "end": "678839"
  },
  {
    "text": "reason reacts react needs a way to not",
    "start": "678839",
    "end": "681300"
  },
  {
    "text": "rewrite the entire Dom on each update",
    "start": "681300",
    "end": "683100"
  },
  {
    "text": "therefore must run through a diffing",
    "start": "683100",
    "end": "684600"
  },
  {
    "text": "process yep and that's where the V down",
    "start": "684600",
    "end": "686160"
  },
  {
    "text": "comes in state tree component tree this",
    "start": "686160",
    "end": "688740"
  },
  {
    "text": "is react a relationship between render",
    "start": "688740",
    "end": "690240"
  },
  {
    "text": "and reconcile the pure component",
    "start": "690240",
    "end": "691680"
  },
  {
    "text": "Behavior this lack of direct connection",
    "start": "691680",
    "end": "693360"
  },
  {
    "text": "between State and Dom updates in react",
    "start": "693360",
    "end": "695700"
  },
  {
    "text": "components are real and the Dom is not",
    "start": "695700",
    "end": "698579"
  },
  {
    "text": "hmm perhaps this is why react makes such",
    "start": "698579",
    "end": "701519"
  },
  {
    "text": "a good choice for non-web renderers we",
    "start": "701519",
    "end": "703500"
  },
  {
    "text": "can use react to describe a UI and",
    "start": "703500",
    "end": "705240"
  },
  {
    "text": "updates but swap out the process in",
    "start": "705240",
    "end": "706980"
  },
  {
    "text": "which these updates are applied to our",
    "start": "706980",
    "end": "708480"
  },
  {
    "text": "UI as a web developer This Is Not Great",
    "start": "708480",
    "end": "710880"
  },
  {
    "text": "enough upside",
    "start": "710880",
    "end": "712980"
  },
  {
    "text": "um",
    "start": "712980",
    "end": "713880"
  },
  {
    "text": "the quickest obstacle you'll run into as",
    "start": "713880",
    "end": "715620"
  },
  {
    "text": "someone new to react will be is",
    "start": "715620",
    "end": "716940"
  },
  {
    "text": "something like this",
    "start": "716940",
    "end": "718440"
  },
  {
    "text": "all right here we go look at that we got",
    "start": "718440",
    "end": "721019"
  },
  {
    "text": "this thing going on infinite Loop suck",
    "start": "721019",
    "end": "723480"
  },
  {
    "text": "it yeah",
    "start": "723480",
    "end": "725160"
  },
  {
    "text": "isn't this great",
    "start": "725160",
    "end": "726779"
  },
  {
    "text": "don't do that whatever you do don't do",
    "start": "726779",
    "end": "729060"
  },
  {
    "text": "that uh try to make uh State updates at",
    "start": "729060",
    "end": "731579"
  },
  {
    "text": "the top level of a component will result",
    "start": "731579",
    "end": "732839"
  },
  {
    "text": "in an infinite Loop State updates rerun",
    "start": "732839",
    "end": "734760"
  },
  {
    "text": "components this doesn't mean the Dom",
    "start": "734760",
    "end": "736320"
  },
  {
    "text": "updated it means another state update",
    "start": "736320",
    "end": "738300"
  },
  {
    "text": "which will trigger another rerun of the",
    "start": "738300",
    "end": "739740"
  },
  {
    "text": "triggers yet blah blah blah you'll",
    "start": "739740",
    "end": "741060"
  },
  {
    "text": "probably find this bug pretty quickly if",
    "start": "741060",
    "end": "742740"
  },
  {
    "text": "in Loops like this are aren't too",
    "start": "742740",
    "end": "744720"
  },
  {
    "text": "difficult to spot when you don't know",
    "start": "744720",
    "end": "746399"
  },
  {
    "text": "what you're looking for they're very",
    "start": "746399",
    "end": "747660"
  },
  {
    "text": "difficult to spot right it sucks the",
    "start": "747660",
    "end": "750660"
  },
  {
    "text": "first time you solve it it sucks",
    "start": "750660",
    "end": "752760"
  },
  {
    "text": "if that makes so much sense now you",
    "start": "752760",
    "end": "754200"
  },
  {
    "text": "didn't know this yeah so so that's why",
    "start": "754200",
    "end": "756120"
  },
  {
    "text": "the Dom doesn't update because the Dom",
    "start": "756120",
    "end": "757380"
  },
  {
    "text": "so you'll notice something the Dom can",
    "start": "757380",
    "end": "759600"
  },
  {
    "text": "never update so you can make a bunch of",
    "start": "759600",
    "end": "760920"
  },
  {
    "text": "updates to the Dom but the Dom itself",
    "start": "760920",
    "end": "763019"
  },
  {
    "text": "will never update until the JavaScript",
    "start": "763019",
    "end": "764880"
  },
  {
    "text": "process event Loop has been like is",
    "start": "764880",
    "end": "768000"
  },
  {
    "text": "you're off and you're about to go back",
    "start": "768000",
    "end": "769620"
  },
  {
    "text": "into it and so you can just like make a",
    "start": "769620",
    "end": "772079"
  },
  {
    "text": "bunch of updates and then while true and",
    "start": "772079",
    "end": "774180"
  },
  {
    "text": "it will just sit there Frozen on the",
    "start": "774180",
    "end": "775620"
  },
  {
    "text": "screen until this thing pops up and then",
    "start": "775620",
    "end": "777360"
  },
  {
    "text": "goes back up and so it's one of those",
    "start": "777360",
    "end": "779160"
  },
  {
    "text": "things where this that's all that's",
    "start": "779160",
    "end": "780660"
  },
  {
    "text": "happening is",
    "start": "780660",
    "end": "782639"
  },
  {
    "text": "all of your components render it sets at",
    "start": "782639",
    "end": "784560"
  },
  {
    "text": "the next state it does all the state the",
    "start": "784560",
    "end": "786240"
  },
  {
    "text": "state then gets triggered mutated and",
    "start": "786240",
    "end": "787620"
  },
  {
    "text": "all that and then it triggers the next",
    "start": "787620",
    "end": "788880"
  },
  {
    "text": "render and it goes through and it does",
    "start": "788880",
    "end": "790079"
  },
  {
    "text": "the same thing does the same thing and",
    "start": "790079",
    "end": "791700"
  },
  {
    "text": "it just does this in a tight Loop it",
    "start": "791700",
    "end": "793079"
  },
  {
    "text": "doesn't let the process of you know it",
    "start": "793079",
    "end": "794459"
  },
  {
    "text": "doesn't go off the process of end Loop",
    "start": "794459",
    "end": "796440"
  },
  {
    "text": "it instead just stays within the same",
    "start": "796440",
    "end": "798120"
  },
  {
    "text": "one you can imagine like a while loop",
    "start": "798120",
    "end": "800459"
  },
  {
    "text": "while dirty is still true keep on",
    "start": "800459",
    "end": "802620"
  },
  {
    "text": "re-rendering",
    "start": "802620",
    "end": "805200"
  },
  {
    "text": "let's see things get more complicated",
    "start": "805200",
    "end": "806940"
  },
  {
    "text": "when you start using react context and",
    "start": "806940",
    "end": "808500"
  },
  {
    "text": "start signaling updates and parent",
    "start": "808500",
    "end": "809820"
  },
  {
    "text": "components the render Cascades maybe one",
    "start": "809820",
    "end": "813420"
  },
  {
    "text": "component fetches some data some",
    "start": "813420",
    "end": "814920"
  },
  {
    "text": "components remount and you rerun your",
    "start": "814920",
    "end": "816720"
  },
  {
    "text": "state update again delayed by a few",
    "start": "816720",
    "end": "818940"
  },
  {
    "text": "seconds this pattern is common enough to",
    "start": "818940",
    "end": "820860"
  },
  {
    "text": "be deserving of its own article but this",
    "start": "820860",
    "end": "822480"
  },
  {
    "text": "isn't the article to know how to fix",
    "start": "822480",
    "end": "823800"
  },
  {
    "text": "reacts problems it's a rant components",
    "start": "823800",
    "end": "825720"
  },
  {
    "text": "as a reactive object let's continue the",
    "start": "825720",
    "end": "827579"
  },
  {
    "text": "discussion as components existing as the",
    "start": "827579",
    "end": "829019"
  },
  {
    "text": "reactive objects not State there are",
    "start": "829019",
    "end": "830700"
  },
  {
    "text": "some consequences of this pattern",
    "start": "830700",
    "end": "832740"
  },
  {
    "text": "all right look at this Beauty look at",
    "start": "832740",
    "end": "834540"
  },
  {
    "text": "that little beauty right there",
    "start": "834540",
    "end": "836220"
  },
  {
    "text": "this makes so much more sense now yeah",
    "start": "836220",
    "end": "837959"
  },
  {
    "text": "if you don't think about how react works",
    "start": "837959",
    "end": "840660"
  },
  {
    "text": "it can be really confusing to a lot of",
    "start": "840660",
    "end": "842339"
  },
  {
    "text": "people a lot of people don't uh you",
    "start": "842339",
    "end": "843779"
  },
  {
    "text": "should always here's a little tip for",
    "start": "843779",
    "end": "846120"
  },
  {
    "text": "you whenever you use something take a",
    "start": "846120",
    "end": "848579"
  },
  {
    "text": "moment",
    "start": "848579",
    "end": "849779"
  },
  {
    "text": "and try",
    "start": "849779",
    "end": "851459"
  },
  {
    "text": "to just imagine how you would write it",
    "start": "851459",
    "end": "854579"
  },
  {
    "text": "you know what I mean just take a moment",
    "start": "854579",
    "end": "856320"
  },
  {
    "text": "and try that every time you use",
    "start": "856320",
    "end": "858000"
  },
  {
    "text": "something just just even for five",
    "start": "858000",
    "end": "859380"
  },
  {
    "text": "minutes not a lot of time and you will",
    "start": "859380",
    "end": "861600"
  },
  {
    "text": "find that it opens a lot of doors to how",
    "start": "861600",
    "end": "863880"
  },
  {
    "text": "you think about things it's just trying",
    "start": "863880",
    "end": "866040"
  },
  {
    "text": "to imagine how things are are written",
    "start": "866040",
    "end": "868200"
  },
  {
    "text": "honestly",
    "start": "868200",
    "end": "869700"
  },
  {
    "text": "it's it's very good for that practice",
    "start": "869700",
    "end": "871560"
  },
  {
    "text": "because then you would kind of think",
    "start": "871560",
    "end": "873540"
  },
  {
    "text": "about like how does you state work",
    "start": "873540",
    "end": "875880"
  },
  {
    "text": "like even for me I don't quite",
    "start": "875880",
    "end": "878040"
  },
  {
    "text": "understand the exact use State order and",
    "start": "878040",
    "end": "880500"
  },
  {
    "text": "how it's able to maintain you state",
    "start": "880500",
    "end": "882839"
  },
  {
    "text": "perfectly",
    "start": "882839",
    "end": "884339"
  },
  {
    "text": "but I I have a lot of ideas of how it",
    "start": "884339",
    "end": "886440"
  },
  {
    "text": "works yeah yeah I get that because it it",
    "start": "886440",
    "end": "889079"
  },
  {
    "text": "depends on the order called so you can't",
    "start": "889079",
    "end": "890699"
  },
  {
    "text": "swap these the you state you know like",
    "start": "890699",
    "end": "892860"
  },
  {
    "text": "so if you have a use state in an if",
    "start": "892860",
    "end": "894180"
  },
  {
    "text": "statement it can totally F things up",
    "start": "894180",
    "end": "896639"
  },
  {
    "text": "all right anyways let's get let's see",
    "start": "896639",
    "end": "897839"
  },
  {
    "text": "I'm oversimplifying this component uh",
    "start": "897839",
    "end": "899639"
  },
  {
    "text": "for the purpose of not causing you to",
    "start": "899639",
    "end": "901079"
  },
  {
    "text": "immense pain but anyone who has worked",
    "start": "901079",
    "end": "902639"
  },
  {
    "text": "with forms in react knows that they're",
    "start": "902639",
    "end": "904019"
  },
  {
    "text": "often more complex I regularly see form",
    "start": "904019",
    "end": "906240"
  },
  {
    "text": "components with 300 lines who've",
    "start": "906240",
    "end": "908100"
  },
  {
    "text": "involved is a state transformation",
    "start": "908100",
    "end": "909839"
  },
  {
    "text": "validations and air views a lot of it is",
    "start": "909839",
    "end": "912240"
  },
  {
    "text": "inherent to forms not just react yeah",
    "start": "912240",
    "end": "913740"
  },
  {
    "text": "forms are very hard forms are very hard",
    "start": "913740",
    "end": "915779"
  },
  {
    "text": "I love the song that's playing",
    "start": "915779",
    "end": "917399"
  },
  {
    "text": "remember components are reactive not",
    "start": "917399",
    "end": "919139"
  },
  {
    "text": "State when working with controlled",
    "start": "919139",
    "end": "921240"
  },
  {
    "text": "inputs we are causing re-render on every",
    "start": "921240",
    "end": "923040"
  },
  {
    "text": "key press in our input this means we're",
    "start": "923040",
    "end": "925560"
  },
  {
    "text": "potentially running State computation",
    "start": "925560",
    "end": "927000"
  },
  {
    "text": "code regardless of anything that's being",
    "start": "927000",
    "end": "928500"
  },
  {
    "text": "touched yeah but the V down fixes all",
    "start": "928500",
    "end": "930420"
  },
  {
    "text": "that that seems to be prevailing in the",
    "start": "930420",
    "end": "933180"
  },
  {
    "text": "anti-anti-v Dom fallacy the vdom",
    "start": "933180",
    "end": "936000"
  },
  {
    "text": "perverts extraneous Dom updates not",
    "start": "936000",
    "end": "937800"
  },
  {
    "text": "State uh computations your component is",
    "start": "937800",
    "end": "939839"
  },
  {
    "text": "a function that is quite literally being",
    "start": "939839",
    "end": "941820"
  },
  {
    "text": "rerun each time you need to check for",
    "start": "941820",
    "end": "943260"
  },
  {
    "text": "updates while the Dom itself may not be",
    "start": "943260",
    "end": "944880"
  },
  {
    "text": "touched the code is running may not",
    "start": "944880",
    "end": "946860"
  },
  {
    "text": "neither yes exactly okay so he's he's",
    "start": "946860",
    "end": "949440"
  },
  {
    "text": "100 correct on this one right here do",
    "start": "949440",
    "end": "951720"
  },
  {
    "text": "you know what I mean this is 100 100",
    "start": "951720",
    "end": "954500"
  },
  {
    "text": "correct is that vdom only saves you from",
    "start": "954500",
    "end": "957660"
  },
  {
    "text": "changes in the Dom it doesn't change",
    "start": "957660",
    "end": "959040"
  },
  {
    "text": "save you from from JavaScript being",
    "start": "959040",
    "end": "961199"
  },
  {
    "text": "re-ran right all right let's see here we",
    "start": "961199",
    "end": "963959"
  },
  {
    "text": "go uh",
    "start": "963959",
    "end": "965220"
  },
  {
    "text": "imagine the following component here we",
    "start": "965220",
    "end": "966899"
  },
  {
    "text": "go label text uh label two title case",
    "start": "966899",
    "end": "969300"
  },
  {
    "text": "text input",
    "start": "969300",
    "end": "970740"
  },
  {
    "text": "all right just make sure we have",
    "start": "970740",
    "end": "972000"
  },
  {
    "text": "everything here uh return this on input",
    "start": "972000",
    "end": "974820"
  },
  {
    "text": "value on input okay",
    "start": "974820",
    "end": "977399"
  },
  {
    "text": "there's just so much going on here it's",
    "start": "977399",
    "end": "978899"
  },
  {
    "text": "kind of confusing a more realistic",
    "start": "978899",
    "end": "980820"
  },
  {
    "text": "example I think we need to fix the Let's",
    "start": "980820",
    "end": "982560"
  },
  {
    "text": "see we decided to fix label inputs",
    "start": "982560",
    "end": "984480"
  },
  {
    "text": "provided to us by transforming them into",
    "start": "984480",
    "end": "986579"
  },
  {
    "text": "title case from now on it's fine I've",
    "start": "986579",
    "end": "988680"
  },
  {
    "text": "decided not to memorize anything because",
    "start": "988680",
    "end": "990300"
  },
  {
    "text": "the computation seems simple enough but",
    "start": "990300",
    "end": "992339"
  },
  {
    "text": "what if things uh change what if two",
    "start": "992339",
    "end": "994560"
  },
  {
    "text": "title case grew in complexity perhaps",
    "start": "994560",
    "end": "996720"
  },
  {
    "text": "over time we slowly added features to",
    "start": "996720",
    "end": "998220"
  },
  {
    "text": "create the ultimate title uh title caser",
    "start": "998220",
    "end": "1000380"
  },
  {
    "text": "yeah",
    "start": "1000380",
    "end": "1001459"
  },
  {
    "text": "and now you're doing this every single",
    "start": "1001459",
    "end": "1003019"
  },
  {
    "text": "time",
    "start": "1003019",
    "end": "1004720"
  },
  {
    "text": "on every keystroke we now have to rerun",
    "start": "1004720",
    "end": "1007040"
  },
  {
    "text": "two title case in every component our",
    "start": "1007040",
    "end": "1009500"
  },
  {
    "text": "use let's see our use of use state has",
    "start": "1009500",
    "end": "1011480"
  },
  {
    "text": "made our entire componentry reactive",
    "start": "1011480",
    "end": "1013339"
  },
  {
    "text": "yeah oh no I mean is that a problem",
    "start": "1013339",
    "end": "1015800"
  },
  {
    "text": "browsers are pretty fast Hardware is",
    "start": "1015800",
    "end": "1017600"
  },
  {
    "text": "pretty fast maybe it's not an issue I",
    "start": "1017600",
    "end": "1019040"
  },
  {
    "text": "hate this I hate this take",
    "start": "1019040",
    "end": "1020839"
  },
  {
    "text": "I hate this take that's fast enough",
    "start": "1020839",
    "end": "1023180"
  },
  {
    "text": "right fast enough should not be a reason",
    "start": "1023180",
    "end": "1025400"
  },
  {
    "text": "to have crappy code well it isn't uh it",
    "start": "1025400",
    "end": "1028819"
  },
  {
    "text": "isn't until it is yeah incrementally by",
    "start": "1028819",
    "end": "1031339"
  },
  {
    "text": "adding computation in different places",
    "start": "1031339",
    "end": "1032540"
  },
  {
    "text": "won't cause much harm but keep uh doing",
    "start": "1032540",
    "end": "1034640"
  },
  {
    "text": "that it'll eventually you've created a",
    "start": "1034640",
    "end": "1036678"
  },
  {
    "text": "sluggish experience now you must face",
    "start": "1036679",
    "end": "1038120"
  },
  {
    "text": "the problem that there is no single",
    "start": "1038120",
    "end": "1039740"
  },
  {
    "text": "source of performance pains it's",
    "start": "1039740",
    "end": "1041000"
  },
  {
    "text": "everywhere",
    "start": "1041000",
    "end": "1043360"
  },
  {
    "text": "[Applause]",
    "start": "1043400",
    "end": "1046938"
  },
  {
    "text": "this is always the problem of writing",
    "start": "1046939",
    "end": "1048860"
  },
  {
    "text": "shitty code over time is you get this",
    "start": "1048860",
    "end": "1050960"
  },
  {
    "text": "thing right here right and you can't",
    "start": "1050960",
    "end": "1053540"
  },
  {
    "text": "optimize it because everything is slow",
    "start": "1053540",
    "end": "1055820"
  },
  {
    "text": "it's everywhere fixing uh this requires",
    "start": "1055820",
    "end": "1057860"
  },
  {
    "text": "a lot more work than you'd like to",
    "start": "1057860",
    "end": "1058940"
  },
  {
    "text": "expect but aren't you forgetting about",
    "start": "1058940",
    "end": "1059960"
  },
  {
    "text": "use memo ah yes that I wish there was",
    "start": "1059960",
    "end": "1061820"
  },
  {
    "text": "confident a confident consensus on this",
    "start": "1061820",
    "end": "1063740"
  },
  {
    "text": "for every Pro memorization article",
    "start": "1063740",
    "end": "1065780"
  },
  {
    "text": "there's one against it well the problem",
    "start": "1065780",
    "end": "1067400"
  },
  {
    "text": "is memoization by the very definition",
    "start": "1067400",
    "end": "1069860"
  },
  {
    "text": "memoization is expensive and people",
    "start": "1069860",
    "end": "1072440"
  },
  {
    "text": "don't understand that",
    "start": "1072440",
    "end": "1073880"
  },
  {
    "text": "I think uh I preferred the FP guy damn",
    "start": "1073880",
    "end": "1077900"
  },
  {
    "text": "but real talk like",
    "start": "1077900",
    "end": "1079940"
  },
  {
    "text": "the problem with memoization is that you",
    "start": "1079940",
    "end": "1082039"
  },
  {
    "text": "need to memorize which means you need to",
    "start": "1082039",
    "end": "1083900"
  },
  {
    "text": "check something so remember you're doing",
    "start": "1083900",
    "end": "1085280"
  },
  {
    "text": "a hash map minimum check if they're",
    "start": "1085280",
    "end": "1086900"
  },
  {
    "text": "using a hash map or an object lookup I",
    "start": "1086900",
    "end": "1088700"
  },
  {
    "text": "assume they're using a hash map right",
    "start": "1088700",
    "end": "1089900"
  },
  {
    "text": "you're doing some sort of hashing and",
    "start": "1089900",
    "end": "1091820"
  },
  {
    "text": "keying into a hash map with the",
    "start": "1091820",
    "end": "1093980"
  },
  {
    "text": "arguments going into this thing",
    "start": "1093980",
    "end": "1095360"
  },
  {
    "text": "therefore you're getting something back",
    "start": "1095360",
    "end": "1097039"
  },
  {
    "text": "out of it right like it is it is",
    "start": "1097039",
    "end": "1099380"
  },
  {
    "text": "non-trivial remember hash maps have to",
    "start": "1099380",
    "end": "1101720"
  },
  {
    "text": "resize hashmaps have some non-trivial",
    "start": "1101720",
    "end": "1104720"
  },
  {
    "text": "hashing function that's involved it is",
    "start": "1104720",
    "end": "1107059"
  },
  {
    "text": "faster to put objects in an array for",
    "start": "1107059",
    "end": "1111260"
  },
  {
    "text": "small amounts and just walk through it",
    "start": "1111260",
    "end": "1113000"
  },
  {
    "text": "and individually compare it as then to",
    "start": "1113000",
    "end": "1115100"
  },
  {
    "text": "run a hash map",
    "start": "1115100",
    "end": "1116840"
  },
  {
    "text": "right I wanted hot takes but this",
    "start": "1116840",
    "end": "1119660"
  },
  {
    "text": "article is making so much sense it",
    "start": "1119660",
    "end": "1120860"
  },
  {
    "text": "really is it is making this is actually",
    "start": "1120860",
    "end": "1122539"
  },
  {
    "text": "one of the most sensible front-end",
    "start": "1122539",
    "end": "1123919"
  },
  {
    "text": "articles I've ever read in my lifetime",
    "start": "1123919",
    "end": "1125840"
  },
  {
    "text": "uh Dan abramoff has repeatedly pointed",
    "start": "1125840",
    "end": "1127640"
  },
  {
    "text": "out that memoization does still uh incur",
    "start": "1127640",
    "end": "1129919"
  },
  {
    "text": "the cost of comparing props absolutely",
    "start": "1129919",
    "end": "1131360"
  },
  {
    "text": "there's many cases for memorization a",
    "start": "1131360",
    "end": "1133100"
  },
  {
    "text": "check can never prevent a re-renders",
    "start": "1133100",
    "end": "1134539"
  },
  {
    "text": "because the components always receive",
    "start": "1134539",
    "end": "1135620"
  },
  {
    "text": "new props as this example damn people",
    "start": "1135620",
    "end": "1137900"
  },
  {
    "text": "this is emotionally painful me to read",
    "start": "1137900",
    "end": "1140120"
  },
  {
    "text": "uh the comment was in reference to react",
    "start": "1140120",
    "end": "1142520"
  },
  {
    "text": "memo slightly different uh yep yep you",
    "start": "1142520",
    "end": "1144860"
  },
  {
    "text": "have memorization entire component stops",
    "start": "1144860",
    "end": "1147020"
  },
  {
    "text": "at the Cascade of renders from not",
    "start": "1147020",
    "end": "1148400"
  },
  {
    "text": "needing to check its children this feels",
    "start": "1148400",
    "end": "1150140"
  },
  {
    "text": "like a sensible default to put the",
    "start": "1150140",
    "end": "1151340"
  },
  {
    "text": "reacts team seems to think the",
    "start": "1151340",
    "end": "1152480"
  },
  {
    "text": "performance cost of comparing props",
    "start": "1152480",
    "end": "1153799"
  },
  {
    "text": "outweighs the average performance cost",
    "start": "1153799",
    "end": "1155179"
  },
  {
    "text": "of letting massive re-renders Cascade",
    "start": "1155179",
    "end": "1156679"
  },
  {
    "text": "take place",
    "start": "1156679",
    "end": "1157700"
  },
  {
    "text": "I figure that's probably wrong Mark",
    "start": "1157700",
    "end": "1159980"
  },
  {
    "text": "seems to agree",
    "start": "1159980",
    "end": "1161960"
  },
  {
    "text": "yeah",
    "start": "1161960",
    "end": "1163160"
  },
  {
    "text": "all me and my homies seem to agree I I",
    "start": "1163160",
    "end": "1165980"
  },
  {
    "text": "actually I'm I'm on team react with this",
    "start": "1165980",
    "end": "1168980"
  },
  {
    "text": "one and the reason why I'm on team react",
    "start": "1168980",
    "end": "1171200"
  },
  {
    "text": "with this one is that you should know",
    "start": "1171200",
    "end": "1173539"
  },
  {
    "text": "when you incur an additional cost for",
    "start": "1173539",
    "end": "1176120"
  },
  {
    "text": "everything because that additional cost",
    "start": "1176120",
    "end": "1177799"
  },
  {
    "text": "for everything may only be useful in a",
    "start": "1177799",
    "end": "1180080"
  },
  {
    "text": "very specific circumstance and so you",
    "start": "1180080",
    "end": "1182120"
  },
  {
    "text": "should only enable the very specific",
    "start": "1182120",
    "end": "1184460"
  },
  {
    "text": "circumstance when you need it right like",
    "start": "1184460",
    "end": "1186860"
  },
  {
    "text": "you really got to be you really got to",
    "start": "1186860",
    "end": "1188600"
  },
  {
    "text": "be careful about that hey Brian just",
    "start": "1188600",
    "end": "1190460"
  },
  {
    "text": "watched your front end Masters video on",
    "start": "1190460",
    "end": "1191840"
  },
  {
    "text": "YouTube it's very nice presentation oh",
    "start": "1191840",
    "end": "1193220"
  },
  {
    "text": "thank you oh why delete carbo wait what",
    "start": "1193220",
    "end": "1196160"
  },
  {
    "text": "Mark mark my words Mark uh it also makes",
    "start": "1196160",
    "end": "1199940"
  },
  {
    "text": "the type uh look uh ever so uglier most",
    "start": "1199940",
    "end": "1203120"
  },
  {
    "text": "code bases I look at tend to avoid react",
    "start": "1203120",
    "end": "1204919"
  },
  {
    "text": "memo until it's absolutely certain they",
    "start": "1204919",
    "end": "1206480"
  },
  {
    "text": "will create a significant performance",
    "start": "1206480",
    "end": "1207799"
  },
  {
    "text": "improve it's another argument against",
    "start": "1207799",
    "end": "1208940"
  },
  {
    "text": "memorization that is easier to that it",
    "start": "1208940",
    "end": "1211520"
  },
  {
    "text": "is easy for a react memo to be",
    "start": "1211520",
    "end": "1213080"
  },
  {
    "text": "ineffective when the parent code isn't",
    "start": "1213080",
    "end": "1215480"
  },
  {
    "text": "written correctly absolutely",
    "start": "1215480",
    "end": "1217880"
  },
  {
    "text": "this is pretty cool this is actually a",
    "start": "1217880",
    "end": "1219980"
  },
  {
    "text": "really good uh I really like this we're",
    "start": "1219980",
    "end": "1222260"
  },
  {
    "text": "comparing props let's see uh we're",
    "start": "1222260",
    "end": "1224660"
  },
  {
    "text": "comparing props in the fastest way",
    "start": "1224660",
    "end": "1226039"
  },
  {
    "text": "possible shallow equality this appears",
    "start": "1226039",
    "end": "1228080"
  },
  {
    "text": "to appears like a new prop on each",
    "start": "1228080",
    "end": "1230000"
  },
  {
    "text": "re-render since re-renders are common we",
    "start": "1230000",
    "end": "1231860"
  },
  {
    "text": "need to be aware of this absolutely",
    "start": "1231860",
    "end": "1233059"
  },
  {
    "text": "components being the reactive Primitives",
    "start": "1233059",
    "end": "1235280"
  },
  {
    "text": "here so we can fix some of the",
    "start": "1235280",
    "end": "1236360"
  },
  {
    "text": "memorization by moving States through",
    "start": "1236360",
    "end": "1238520"
  },
  {
    "text": "components I don't particularly enjoy",
    "start": "1238520",
    "end": "1240559"
  },
  {
    "text": "this kind of discussion when I'm trying",
    "start": "1240559",
    "end": "1241760"
  },
  {
    "text": "to create a product",
    "start": "1241760",
    "end": "1243140"
  },
  {
    "text": "yes I said use memo not react.memo fair",
    "start": "1243140",
    "end": "1246320"
  },
  {
    "text": "enough let's talk a bit about that we",
    "start": "1246320",
    "end": "1248059"
  },
  {
    "text": "fall into the same performance",
    "start": "1248059",
    "end": "1249080"
  },
  {
    "text": "considerations absolutely it's totally a",
    "start": "1249080",
    "end": "1251360"
  },
  {
    "text": "depends people don't realize that there",
    "start": "1251360",
    "end": "1253280"
  },
  {
    "text": "is no golden hammers like look at this",
    "start": "1253280",
    "end": "1255200"
  },
  {
    "text": "what what they're not even speaking",
    "start": "1255200",
    "end": "1256940"
  },
  {
    "text": "about is that you've got to remember so",
    "start": "1256940",
    "end": "1258980"
  },
  {
    "text": "let's just say you have thousands of",
    "start": "1258980",
    "end": "1260120"
  },
  {
    "text": "components rendering every single time",
    "start": "1260120",
    "end": "1262100"
  },
  {
    "text": "it renders you create this array",
    "start": "1262100",
    "end": "1265400"
  },
  {
    "text": "this means this array that gets created",
    "start": "1265400",
    "end": "1267760"
  },
  {
    "text": "continuously every single render is",
    "start": "1267760",
    "end": "1270919"
  },
  {
    "text": "gonna have to be garbage collected later",
    "start": "1270919",
    "end": "1272480"
  },
  {
    "text": "on because it's held on to for some",
    "start": "1272480",
    "end": "1274100"
  },
  {
    "text": "amount of time",
    "start": "1274100",
    "end": "1275780"
  },
  {
    "text": "every single time this function renders",
    "start": "1275780",
    "end": "1278120"
  },
  {
    "text": "this function right here is created like",
    "start": "1278120",
    "end": "1281000"
  },
  {
    "text": "it's not a zero cost",
    "start": "1281000",
    "end": "1284059"
  },
  {
    "text": "even just setting it up is not zero cost",
    "start": "1284059",
    "end": "1286580"
  },
  {
    "text": "which means that you now incur more GC",
    "start": "1286580",
    "end": "1288799"
  },
  {
    "text": "time GC time can be very important",
    "start": "1288799",
    "end": "1291440"
  },
  {
    "text": "especially as your product scales",
    "start": "1291440",
    "end": "1293620"
  },
  {
    "text": "especially on a server servers is where",
    "start": "1293620",
    "end": "1297080"
  },
  {
    "text": "you really experience these slowdowns",
    "start": "1297080",
    "end": "1298880"
  },
  {
    "text": "not so much on the client client's ear",
    "start": "1298880",
    "end": "1300980"
  },
  {
    "text": "you're probably not going to see it",
    "start": "1300980",
    "end": "1301880"
  },
  {
    "text": "nearly as much if you're on a fast",
    "start": "1301880",
    "end": "1303080"
  },
  {
    "text": "computer but on a server this is where",
    "start": "1303080",
    "end": "1305000"
  },
  {
    "text": "like this separates your 25 requests per",
    "start": "1305000",
    "end": "1308059"
  },
  {
    "text": "second maximum to your 100 requests per",
    "start": "1308059",
    "end": "1309799"
  },
  {
    "text": "second maximum it's very very very",
    "start": "1309799",
    "end": "1311840"
  },
  {
    "text": "different",
    "start": "1311840",
    "end": "1312919"
  },
  {
    "text": "it's just very very different don't",
    "start": "1312919",
    "end": "1315080"
  },
  {
    "text": "spend too much time reading uh that it's",
    "start": "1315080",
    "end": "1316760"
  },
  {
    "text": "just nonsense for demonstration purposes",
    "start": "1316760",
    "end": "1318260"
  },
  {
    "text": "uh whoopsie daisies I should have read",
    "start": "1318260",
    "end": "1320360"
  },
  {
    "text": "ahead people but did you notice",
    "start": "1320360",
    "end": "1321980"
  },
  {
    "text": "something weird there are two discrete",
    "start": "1321980",
    "end": "1323360"
  },
  {
    "text": "State Transformations one is a list",
    "start": "1323360",
    "end": "1324679"
  },
  {
    "text": "operation the other one calls some",
    "start": "1324679",
    "end": "1325820"
  },
  {
    "text": "function resulting data we've actually",
    "start": "1325820",
    "end": "1327380"
  },
  {
    "text": "memorized too much what happens if a",
    "start": "1327380",
    "end": "1329179"
  },
  {
    "text": "randomizer changes we rerun the whole",
    "start": "1329179",
    "end": "1331220"
  },
  {
    "text": "function which should have been written",
    "start": "1331220",
    "end": "1332360"
  },
  {
    "text": "like this we have a c now look at this",
    "start": "1332360",
    "end": "1333919"
  },
  {
    "text": "now you're creating four required pieces",
    "start": "1333919",
    "end": "1336380"
  },
  {
    "text": "of cleanup garbage right this keeps on",
    "start": "1336380",
    "end": "1338780"
  },
  {
    "text": "growing right it keeps on happening and",
    "start": "1338780",
    "end": "1341059"
  },
  {
    "text": "people this this is the hardest concept",
    "start": "1341059",
    "end": "1343340"
  },
  {
    "text": "I think for a lot of JavaScript",
    "start": "1343340",
    "end": "1344419"
  },
  {
    "text": "Engineers I hate using the term of a",
    "start": "1344419",
    "end": "1347000"
  },
  {
    "text": "language and engineer together I am not",
    "start": "1347000",
    "end": "1348980"
  },
  {
    "text": "a rust engineer I am not a typescript",
    "start": "1348980",
    "end": "1350900"
  },
  {
    "text": "engineer I am a software engineer and",
    "start": "1350900",
    "end": "1353480"
  },
  {
    "text": "I'm good at typescript and rust right",
    "start": "1353480",
    "end": "1355460"
  },
  {
    "text": "now our values are more specific change",
    "start": "1355460",
    "end": "1357500"
  },
  {
    "text": "randomizer oh yeah yeah yeah yeah yeah",
    "start": "1357500",
    "end": "1358880"
  },
  {
    "text": "yeah yeah yeah the day is saved I think",
    "start": "1358880",
    "end": "1360740"
  },
  {
    "text": "I tend to automatically memorize data",
    "start": "1360740",
    "end": "1362419"
  },
  {
    "text": "when I see a list operation uh is that a",
    "start": "1362419",
    "end": "1365240"
  },
  {
    "text": "qualifier I don't know I just do it most",
    "start": "1365240",
    "end": "1367159"
  },
  {
    "text": "notable issue with memorization is that",
    "start": "1367159",
    "end": "1368539"
  },
  {
    "text": "it's ugly okay so I don't like that I I",
    "start": "1368539",
    "end": "1370580"
  },
  {
    "text": "mean it is ugly but I don't really",
    "start": "1370580",
    "end": "1372080"
  },
  {
    "text": "consider that a big like loss here uh I",
    "start": "1372080",
    "end": "1375320"
  },
  {
    "text": "don't know that I'd call that a coat",
    "start": "1375320",
    "end": "1376460"
  },
  {
    "text": "smell I've read that before but it",
    "start": "1376460",
    "end": "1378200"
  },
  {
    "text": "definitely might make code harder to",
    "start": "1378200",
    "end": "1379400"
  },
  {
    "text": "read memorization might help sometimes",
    "start": "1379400",
    "end": "1381200"
  },
  {
    "text": "but only if we're careful in both",
    "start": "1381200",
    "end": "1382760"
  },
  {
    "text": "components usage and composition caching",
    "start": "1382760",
    "end": "1384919"
  },
  {
    "text": "is not a feel let's see is not a field",
    "start": "1384919",
    "end": "1386780"
  },
  {
    "text": "of complexity exclusive to react but",
    "start": "1386780",
    "end": "1388520"
  },
  {
    "text": "we're forced to deal with it manually",
    "start": "1388520",
    "end": "1389840"
  },
  {
    "text": "yes yes memorization solves problems",
    "start": "1389840",
    "end": "1392720"
  },
  {
    "text": "that but that I can feel it's",
    "start": "1392720",
    "end": "1393919"
  },
  {
    "text": "frustrating to think about when when and",
    "start": "1393919",
    "end": "1395659"
  },
  {
    "text": "where to memorize it's not that the",
    "start": "1395659",
    "end": "1397400"
  },
  {
    "text": "ergonomics is poor I don't like that",
    "start": "1397400",
    "end": "1399440"
  },
  {
    "text": "term either the problem is is that you",
    "start": "1399440",
    "end": "1401480"
  },
  {
    "text": "can't know that answer without",
    "start": "1401480",
    "end": "1402620"
  },
  {
    "text": "observation",
    "start": "1402620",
    "end": "1403940"
  },
  {
    "text": "and most people don't know how to",
    "start": "1403940",
    "end": "1405860"
  },
  {
    "text": "observe that you know what I mean that's",
    "start": "1405860",
    "end": "1407900"
  },
  {
    "text": "the true answer of this how do you know",
    "start": "1407900",
    "end": "1410539"
  },
  {
    "text": "something is faster or slower you don't",
    "start": "1410539",
    "end": "1412400"
  },
  {
    "text": "know until you can measure it uh the",
    "start": "1412400",
    "end": "1415760"
  },
  {
    "text": "pedagogy the pedagogy",
    "start": "1415760",
    "end": "1417679"
  },
  {
    "text": "I I forget what this word even means",
    "start": "1417679",
    "end": "1420440"
  },
  {
    "text": "I feel like I should know this word",
    "start": "1420440",
    "end": "1421820"
  },
  {
    "text": "right off the the method of practice of",
    "start": "1421820",
    "end": "1424039"
  },
  {
    "text": "teaching especially when okay yeah yeah",
    "start": "1424039",
    "end": "1425780"
  },
  {
    "text": "yeah yeah yeah yeah yeah yeah uh on the",
    "start": "1425780",
    "end": "1428480"
  },
  {
    "text": "method of teaching that's what I'd love",
    "start": "1428480",
    "end": "1430100"
  },
  {
    "text": "to focus on I've made a hobby out of",
    "start": "1430100",
    "end": "1431480"
  },
  {
    "text": "researching programming pedagogy over",
    "start": "1431480",
    "end": "1433520"
  },
  {
    "text": "the years I've been focused on let's see",
    "start": "1433520",
    "end": "1434840"
  },
  {
    "text": "how do I most effectively communicate",
    "start": "1434840",
    "end": "1436280"
  },
  {
    "text": "programming Concepts I don't think I",
    "start": "1436280",
    "end": "1437600"
  },
  {
    "text": "have an answer just yet but I know how",
    "start": "1437600",
    "end": "1439940"
  },
  {
    "text": "you do the opposite reacts has",
    "start": "1439940",
    "end": "1442100"
  },
  {
    "text": "traditionally been taught as the",
    "start": "1442100",
    "end": "1443179"
  },
  {
    "text": "simplest component system where the",
    "start": "1443179",
    "end": "1444320"
  },
  {
    "text": "state is connected to the UI over time",
    "start": "1444320",
    "end": "1445580"
  },
  {
    "text": "I've had the pleasure of teaching quite",
    "start": "1445580",
    "end": "1446960"
  },
  {
    "text": "a few people react people relatively new",
    "start": "1446960",
    "end": "1448880"
  },
  {
    "text": "to Frameworks to react or to coding in",
    "start": "1448880",
    "end": "1450559"
  },
  {
    "text": "general react isn't easy and it's made",
    "start": "1450559",
    "end": "1452419"
  },
  {
    "text": "even more difficult by obfuscation and",
    "start": "1452419",
    "end": "1454159"
  },
  {
    "text": "teaching material",
    "start": "1454159",
    "end": "1455419"
  },
  {
    "text": "okay is this",
    "start": "1455419",
    "end": "1456799"
  },
  {
    "text": "uh these Concepts these mental models",
    "start": "1456799",
    "end": "1458600"
  },
  {
    "text": "were going over they might seem trivial",
    "start": "1458600",
    "end": "1460100"
  },
  {
    "text": "to you if you've been working with react",
    "start": "1460100",
    "end": "1461480"
  },
  {
    "text": "long enough it isn't for most people it",
    "start": "1461480",
    "end": "1463340"
  },
  {
    "text": "isn't obvious that your computer",
    "start": "1463340",
    "end": "1464360"
  },
  {
    "text": "re-renders on State updates How would",
    "start": "1464360",
    "end": "1466340"
  },
  {
    "text": "how would that even work there's no name",
    "start": "1466340",
    "end": "1468080"
  },
  {
    "text": "to go along with each state usage how",
    "start": "1468080",
    "end": "1469820"
  },
  {
    "text": "does that even remember",
    "start": "1469820",
    "end": "1471919"
  },
  {
    "text": "these are all really good I'm going to",
    "start": "1471919",
    "end": "1474140"
  },
  {
    "text": "skip that part but it is a good point",
    "start": "1474140",
    "end": "1475760"
  },
  {
    "text": "it's a good point",
    "start": "1475760",
    "end": "1477200"
  },
  {
    "text": "you know what I mean",
    "start": "1477200",
    "end": "1479179"
  },
  {
    "text": "we can't change the articles there I'm",
    "start": "1479179",
    "end": "1480679"
  },
  {
    "text": "going to skip over that uh I want to",
    "start": "1480679",
    "end": "1482480"
  },
  {
    "text": "revisit the forms discussion the pain",
    "start": "1482480",
    "end": "1483980"
  },
  {
    "text": "I've been felt a lot let's see the pain",
    "start": "1483980",
    "end": "1485840"
  },
  {
    "text": "has been felt long enough for there to",
    "start": "1485840",
    "end": "1487760"
  },
  {
    "text": "be some change in forms best practices",
    "start": "1487760",
    "end": "1489500"
  },
  {
    "text": "uncontrolled inputs are all the rage",
    "start": "1489500",
    "end": "1491179"
  },
  {
    "text": "these days component updates uh come",
    "start": "1491179",
    "end": "1493760"
  },
  {
    "text": "from State updates controlled inputs",
    "start": "1493760",
    "end": "1495500"
  },
  {
    "text": "force a state update on each form",
    "start": "1495500",
    "end": "1497299"
  },
  {
    "text": "interaction we just let the form do",
    "start": "1497299",
    "end": "1499400"
  },
  {
    "text": "whatever we let's see whatever when we",
    "start": "1499400",
    "end": "1501500"
  },
  {
    "text": "only need to update on submission and",
    "start": "1501500",
    "end": "1502880"
  },
  {
    "text": "validation steps this pattern has been",
    "start": "1502880",
    "end": "1504740"
  },
  {
    "text": "popularized by a formal formic and react",
    "start": "1504740",
    "end": "1507679"
  },
  {
    "text": "hook form",
    "start": "1507679",
    "end": "1508760"
  },
  {
    "text": "I don't know what this render field is",
    "start": "1508760",
    "end": "1510320"
  },
  {
    "text": "oh use form",
    "start": "1510320",
    "end": "1512559"
  },
  {
    "text": "okay render field input okay",
    "start": "1512559",
    "end": "1516140"
  },
  {
    "text": "interesting",
    "start": "1516140",
    "end": "1518000"
  },
  {
    "text": "I have to play with this a little bit",
    "start": "1518000",
    "end": "1519320"
  },
  {
    "text": "more to know yes we're adding some",
    "start": "1519320",
    "end": "1521059"
  },
  {
    "text": "complexity here but it helps with State",
    "start": "1521059",
    "end": "1522260"
  },
  {
    "text": "updates and affecting the components",
    "start": "1522260",
    "end": "1523460"
  },
  {
    "text": "we'd like that this brings us to an",
    "start": "1523460",
    "end": "1524720"
  },
  {
    "text": "interesting point however when we look",
    "start": "1524720",
    "end": "1526279"
  },
  {
    "text": "at react ecosystem we find a whole lot",
    "start": "1526279",
    "end": "1528020"
  },
  {
    "text": "of libraries that exist for the express",
    "start": "1528020",
    "end": "1529279"
  },
  {
    "text": "purpose of fixing reacts shortcomings",
    "start": "1529279",
    "end": "1531140"
  },
  {
    "text": "when you see these Library advertises",
    "start": "1531140",
    "end": "1532820"
  },
  {
    "text": "about 100 speed up and ergonomics",
    "start": "1532820",
    "end": "1534799"
  },
  {
    "text": "improving what they're doing with react",
    "start": "1534799",
    "end": "1536840"
  },
  {
    "text": "when I build libraries for react",
    "start": "1536840",
    "end": "1538279"
  },
  {
    "text": "ironically",
    "start": "1538279",
    "end": "1539539"
  },
  {
    "text": "when I build libraries for react",
    "start": "1539539",
    "end": "1541340"
  },
  {
    "text": "ironically I don't really use hooks like",
    "start": "1541340",
    "end": "1543799"
  },
  {
    "text": "you state user or whatever one of the",
    "start": "1543799",
    "end": "1545419"
  },
  {
    "text": "best perks and foot gums of managing",
    "start": "1545419",
    "end": "1547159"
  },
  {
    "text": "your own State outside of react is that",
    "start": "1547159",
    "end": "1548779"
  },
  {
    "text": "you get to have full control over what",
    "start": "1548779",
    "end": "1550220"
  },
  {
    "text": "your components should render",
    "start": "1550220",
    "end": "1551960"
  },
  {
    "text": "Tanner's also a good guy",
    "start": "1551960",
    "end": "1553880"
  },
  {
    "text": "he's a smart guy you should listen to",
    "start": "1553880",
    "end": "1555320"
  },
  {
    "text": "Tanner",
    "start": "1555320",
    "end": "1556720"
  },
  {
    "text": "uh which for the record I'm not against",
    "start": "1556720",
    "end": "1559340"
  },
  {
    "text": "it's just um let's see it's just",
    "start": "1559340",
    "end": "1560840"
  },
  {
    "text": "abstractly funny to watch the ecosystem",
    "start": "1560840",
    "end": "1562279"
  },
  {
    "text": "review I renderer work so tirelessly to",
    "start": "1562279",
    "end": "1564559"
  },
  {
    "text": "keep using it while you avoid every part",
    "start": "1564559",
    "end": "1566480"
  },
  {
    "text": "of it",
    "start": "1566480",
    "end": "1568039"
  },
  {
    "text": "is there anything left in here okay this",
    "start": "1568039",
    "end": "1570559"
  },
  {
    "text": "just goes over the the counter of it",
    "start": "1570559",
    "end": "1572659"
  },
  {
    "text": "which is just fine grain reactivity",
    "start": "1572659",
    "end": "1574760"
  },
  {
    "text": "solid yeah solid JS let's go solid.js",
    "start": "1574760",
    "end": "1577159"
  },
  {
    "text": "we'll read a little bit about solid what",
    "start": "1577159",
    "end": "1578720"
  },
  {
    "text": "would a framework uh integrate fine",
    "start": "1578720",
    "end": "1580100"
  },
  {
    "text": "grade reactivity look like probably",
    "start": "1580100",
    "end": "1581659"
  },
  {
    "text": "something like solid.js so here you go",
    "start": "1581659",
    "end": "1584000"
  },
  {
    "text": "this creates a signal you set the count",
    "start": "1584000",
    "end": "1585919"
  },
  {
    "text": "right here by calling it plus one set",
    "start": "1585919",
    "end": "1587539"
  },
  {
    "text": "count blah blah blah uh then you can",
    "start": "1587539",
    "end": "1590659"
  },
  {
    "text": "return it and so then only this part",
    "start": "1590659",
    "end": "1592159"
  },
  {
    "text": "gets updated right here solid it's fun",
    "start": "1592159",
    "end": "1594860"
  },
  {
    "text": "to bring up a react discussion because",
    "start": "1594860",
    "end": "1596179"
  },
  {
    "text": "the API looks rather similar to react",
    "start": "1596179",
    "end": "1598279"
  },
  {
    "text": "the major exception is that we don't uh",
    "start": "1598279",
    "end": "1600260"
  },
  {
    "text": "need to wrap our code like this and use",
    "start": "1600260",
    "end": "1602059"
  },
  {
    "text": "effect exactly react uh this kind of",
    "start": "1602059",
    "end": "1604880"
  },
  {
    "text": "code would result in a nasty bug where",
    "start": "1604880",
    "end": "1606440"
  },
  {
    "text": "we created a new call to set interval",
    "start": "1606440",
    "end": "1607880"
  },
  {
    "text": "every second for Frameworks that don't",
    "start": "1607880",
    "end": "1609679"
  },
  {
    "text": "need component-based reactivity the",
    "start": "1609679",
    "end": "1611299"
  },
  {
    "text": "distinction between components kind of",
    "start": "1611299",
    "end": "1612740"
  },
  {
    "text": "Fades away they are useful for setting",
    "start": "1612740",
    "end": "1614779"
  },
  {
    "text": "up for setup and UI generation the state",
    "start": "1614779",
    "end": "1616640"
  },
  {
    "text": "is all truly matters during your",
    "start": "1616640",
    "end": "1617779"
  },
  {
    "text": "lifetime your applications exactly so",
    "start": "1617779",
    "end": "1619100"
  },
  {
    "text": "this so for those that don't know what",
    "start": "1619100",
    "end": "1620779"
  },
  {
    "text": "solid.js does right here is that this is",
    "start": "1620779",
    "end": "1622760"
  },
  {
    "text": "a Constructor it's not a renderer so if",
    "start": "1622760",
    "end": "1625159"
  },
  {
    "text": "you're used to if you're used to react",
    "start": "1625159",
    "end": "1626720"
  },
  {
    "text": "you'd look at this as a renderer which",
    "start": "1626720",
    "end": "1628820"
  },
  {
    "text": "means that this gets called every time",
    "start": "1628820",
    "end": "1631039"
  },
  {
    "text": "we render but it doesn't this gets",
    "start": "1631039",
    "end": "1633500"
  },
  {
    "text": "rendered which is what you return and it",
    "start": "1633500",
    "end": "1636200"
  },
  {
    "text": "changes based on this little hook of",
    "start": "1636200",
    "end": "1638480"
  },
  {
    "text": "reactivity but this function",
    "start": "1638480",
    "end": "1640220"
  },
  {
    "text": "theoretically only gets executed once",
    "start": "1640220",
    "end": "1642559"
  },
  {
    "text": "now obviously if inside of here you make",
    "start": "1642559",
    "end": "1645679"
  },
  {
    "text": "it such that when this thing changes you",
    "start": "1645679",
    "end": "1647360"
  },
  {
    "text": "render a new component then yes you will",
    "start": "1647360",
    "end": "1649880"
  },
  {
    "text": "render it you'll reconstruct it but you",
    "start": "1649880",
    "end": "1652460"
  },
  {
    "text": "don't re-render it every single time and",
    "start": "1652460",
    "end": "1654380"
  },
  {
    "text": "so that's like the big difference",
    "start": "1654380",
    "end": "1655220"
  },
  {
    "text": "between solid.js and react and I find",
    "start": "1655220",
    "end": "1657200"
  },
  {
    "text": "that once you make it over the hump",
    "start": "1657200",
    "end": "1658520"
  },
  {
    "text": "using solid.js I find that it's just",
    "start": "1658520",
    "end": "1661039"
  },
  {
    "text": "tremendously easier to think about",
    "start": "1661039",
    "end": "1662720"
  },
  {
    "text": "because this these are like little LSP",
    "start": "1662720",
    "end": "1665900"
  },
  {
    "text": "things you can kind of Trace through",
    "start": "1665900",
    "end": "1667460"
  },
  {
    "text": "your program it makes a lot of sense you",
    "start": "1667460",
    "end": "1669980"
  },
  {
    "text": "know that this is the point in which it",
    "start": "1669980",
    "end": "1672020"
  },
  {
    "text": "changes whereas with react you have to",
    "start": "1672020",
    "end": "1674779"
  },
  {
    "text": "find the progenitor the one or the",
    "start": "1674779",
    "end": "1676580"
  },
  {
    "text": "producer of said uh state so wherever",
    "start": "1676580",
    "end": "1679580"
  },
  {
    "text": "the state gets produced that's the point",
    "start": "1679580",
    "end": "1682039"
  },
  {
    "text": "that causes the reaction whereas in",
    "start": "1682039",
    "end": "1684799"
  },
  {
    "text": "solid.js it's the point of using it that",
    "start": "1684799",
    "end": "1687620"
  },
  {
    "text": "causes the change and that's a",
    "start": "1687620",
    "end": "1689360"
  },
  {
    "text": "fundamental difference in thought",
    "start": "1689360",
    "end": "1690740"
  },
  {
    "text": "process but it is",
    "start": "1690740",
    "end": "1693080"
  },
  {
    "text": "amazing it just makes uis so much easier",
    "start": "1693080",
    "end": "1696620"
  },
  {
    "text": "to think about",
    "start": "1696620",
    "end": "1698659"
  },
  {
    "text": "just saying I just think it's a lot",
    "start": "1698659",
    "end": "1700220"
  },
  {
    "text": "better now obviously I haven't written",
    "start": "1700220",
    "end": "1701900"
  },
  {
    "text": "large uis with solid.js so I can't",
    "start": "1701900",
    "end": "1703640"
  },
  {
    "text": "really say it's better than react I have",
    "start": "1703640",
    "end": "1705559"
  },
  {
    "text": "been a part of large uis in react and",
    "start": "1705559",
    "end": "1707179"
  },
  {
    "text": "I've hated every single moment of it I'd",
    "start": "1707179",
    "end": "1708679"
  },
  {
    "text": "rather go drink toilet water at this",
    "start": "1708679",
    "end": "1710419"
  },
  {
    "text": "current point but I'm just saying",
    "start": "1710419",
    "end": "1712039"
  },
  {
    "text": "solid.js so far has been a great",
    "start": "1712039",
    "end": "1713840"
  },
  {
    "text": "experience for me really have enjoyed it",
    "start": "1713840",
    "end": "1716120"
  },
  {
    "text": "all right I'm done with the article hey",
    "start": "1716120",
    "end": "1717799"
  },
  {
    "text": "the name is the prime machine like And",
    "start": "1717799",
    "end": "1720440"
  },
  {
    "text": "subscribe and give me your Twitch Prime",
    "start": "1720440",
    "end": "1721640"
  },
  {
    "text": "baby",
    "start": "1721640",
    "end": "1723200"
  },
  {
    "text": "gotta",
    "start": "1723200",
    "end": "1725679"
  }
]