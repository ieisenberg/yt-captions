[
  {
    "text": "all right so my name is threaten mikov and I helped create the Hermes JavaScript engine at meta",
    "start": "240",
    "end": "7140"
  },
  {
    "text": "so I can tell that there are at least two three users of Hermes in the audience uh can you make some noise so I",
    "start": "7140",
    "end": "12360"
  },
  {
    "text": "can hear you I need the supports",
    "start": "12360",
    "end": "16039"
  },
  {
    "text": "we explored the Hermes engine at Netflix for a little bit it's pretty exciting we went with V8 but I'm still curious what",
    "start": "17940",
    "end": "23279"
  },
  {
    "text": "it would have been like going with Hermes anyways for two people you guys are really loud I have to say",
    "start": "23279",
    "end": "29640"
  },
  {
    "text": "anyway last time I was here I was really pleasantly surprised about the reaction to my talk after my talk a couple of",
    "start": "29640",
    "end": "36059"
  },
  {
    "text": "people approached me to tell me that the talk was very technical but okay",
    "start": "36059",
    "end": "41460"
  },
  {
    "text": "so let's hope we can live up to this standard once more I like it",
    "start": "41460",
    "end": "47340"
  },
  {
    "text": "I want to start by telling you a little story this is the sad Fable of John native in",
    "start": "47340",
    "end": "53460"
  },
  {
    "text": "his slow cold by the way is anyone noticing the back the backdrop to this guy",
    "start": "53460",
    "end": "59940"
  },
  {
    "text": "it's like he's in a rave concert going on behind him I feel like whatever's going on behind him I can't tell if it's",
    "start": "59940",
    "end": "66360"
  },
  {
    "text": "this part of the screen down here or if they just have the craziest background of all time",
    "start": "66360",
    "end": "74180"
  },
  {
    "text": "DJ herpes I know it looks wild back there Joe was sad because he hit he was",
    "start": "74780",
    "end": "79920"
  },
  {
    "text": "having performance problems in his react native app the startup was very fast because we've all had performance",
    "start": "79920",
    "end": "85320"
  },
  {
    "text": "problems but there was occasional UI stutter when scrolling very long lists when using complex animations oh and",
    "start": "85320",
    "end": "91259"
  },
  {
    "text": "Computing crypto hashes or mining a bit of Bitcoin in pure JavaScript problems that we all have had obviously",
    "start": "91259",
    "end": "99360"
  },
  {
    "text": "Joe who was a very you know making jokes at conferences is really hard and I genuinely appreciate",
    "start": "99360",
    "end": "107280"
  },
  {
    "text": "the attempt to get out there and to make it happen because you know what sometimes no matter how hard you make a",
    "start": "107280",
    "end": "113100"
  },
  {
    "text": "joke people just aren't they're just not they're not joining in",
    "start": "113100",
    "end": "118380"
  },
  {
    "text": "and it's a little bit emotional okay very passionate try it and tried doing a",
    "start": "118380",
    "end": "124380"
  },
  {
    "text": "50-hour coding Marathon he swore he drank gallons of coffee he profiled he optimized his code he reloaded over and",
    "start": "124380",
    "end": "130739"
  },
  {
    "text": "over but ultimately he was faced with the fundamental limit of interpreter performance",
    "start": "130739",
    "end": "135840"
  },
  {
    "text": "he could not make his JavaScript any faster it was beyond his control deadly tired with the crash Spirit but",
    "start": "135840",
    "end": "144060"
  },
  {
    "text": "boiling anger to a Joe was considering making his final move of total desperation",
    "start": "144060",
    "end": "149760"
  },
  {
    "text": "trying to rewrite some of his code in C plus plus but then",
    "start": "149760",
    "end": "155819"
  },
  {
    "text": "he wondered what if I could leverage type information to generate efficient",
    "start": "155819",
    "end": "160860"
  },
  {
    "text": "native code ahead of time I would still be writing JavaScript I would be in control of performance not",
    "start": "160860",
    "end": "166620"
  },
  {
    "text": "the here is interpreter which is actually great but let's I could optimize as much as I need could I do",
    "start": "166620",
    "end": "172620"
  },
  {
    "text": "that Joe wondered and the answer to that is yes yes you",
    "start": "172620",
    "end": "178200"
  },
  {
    "text": "can Joe you can do all of those things and more you realize like how much better",
    "start": "178200",
    "end": "183480"
  },
  {
    "text": "things can get if you can just have type information like what you can do in a programming",
    "start": "183480",
    "end": "189660"
  },
  {
    "text": "language is vastly different when you can just just have it in there",
    "start": "189660",
    "end": "196159"
  },
  {
    "text": "as part of our cross-platform vision we really want to unleash JS developers",
    "start": "196379",
    "end": "201420"
  },
  {
    "text": "like Joel and give them access to the unchecked power that native code has to offer optionally if Joe really wanted he",
    "start": "201420",
    "end": "208620"
  },
  {
    "text": "can even carefully perform unsafe operations potentially not only creating harmless web JavaScript crashes but also",
    "start": "208620",
    "end": "216060"
  },
  {
    "text": "devastating native crashes just as C plus plus developers regularly do it's a",
    "start": "216060",
    "end": "221159"
  },
  {
    "text": "good time look at him he's so happy he doesn't know what he's getting into",
    "start": "221159",
    "end": "227280"
  },
  {
    "text": "but seriously he will mostly get tons of performance and on that highly optimistic note I am",
    "start": "227280",
    "end": "233700"
  },
  {
    "text": "excited to introduce the next version of Hermes which we have been working on for some time now code named static Hermes",
    "start": "233700",
    "end": "240780"
  },
  {
    "text": "some of you may have already heard some speculation about it very excited it was not meant to be a secret it was on",
    "start": "240780",
    "end": "247019"
  },
  {
    "text": "GitHub since day one but we didn't really want to talk about it because there was nothing to show",
    "start": "247019",
    "end": "252840"
  },
  {
    "text": "well now finally there is something to show and we are eager to share it with you the main innovation of static Hermes as",
    "start": "252840",
    "end": "259979"
  },
  {
    "text": "you have guessed already is optional ahead of time compilation of JavaScript to native code",
    "start": "259979",
    "end": "265740"
  },
  {
    "text": "this is just so cool like I I just this is just my favorite this is my favoritest thing right here right there",
    "start": "265740",
    "end": "271680"
  },
  {
    "text": "do you see this thing that just goes on right here this Top Line is so good like a met like",
    "start": "271680",
    "end": "277680"
  },
  {
    "text": "think about think about like cold start times in no they they're they're slow",
    "start": "277680",
    "end": "284820"
  },
  {
    "text": "especially when you're running on a single thread right A lot of these a lot of you know a lot of these serverless things it's not like they're giving them",
    "start": "284820",
    "end": "290340"
  },
  {
    "text": "maximum resources you're getting a shared resource and whenever you start up node right like even if you just do",
    "start": "290340",
    "end": "295740"
  },
  {
    "text": "the most world's most basic thing if you just do a node uh a trace GC uh",
    "start": "295740",
    "end": "302660"
  },
  {
    "text": "e-console log uh hello right oh I didn't get anything oh that's",
    "start": "302660",
    "end": "309360"
  },
  {
    "text": "nice uh but if you import anything right I mean we're talking about like barely import anything you will just you'll",
    "start": "309360",
    "end": "315419"
  },
  {
    "text": "cause so many Trace GCS I thought you'd get a trace do you see this is a little disappointing you didn't get a trace GC",
    "start": "315419",
    "end": "320820"
  },
  {
    "text": "for this one but you'll GC multiple times and on these like single core little running ephemeral processes it's",
    "start": "320820",
    "end": "327060"
  },
  {
    "text": "a stop the world GC right it is a stop the world GC and it completely destroys stuff and so I know",
    "start": "327060",
    "end": "333900"
  },
  {
    "text": "it's very anticlimactic you know and so like you could you could imagine how much you could potentially do by having",
    "start": "333900",
    "end": "340440"
  },
  {
    "text": "your stuff compiled and more tight and being able to just have finer control over what's going on I would love to see",
    "start": "340440",
    "end": "346560"
  },
  {
    "text": "more of that I know GC isn't GC is going to be present in either of these but it could be a vastly different type of",
    "start": "346560",
    "end": "353100"
  },
  {
    "text": "performance and what goes on um I love it it brings us close to our goal",
    "start": "353100",
    "end": "359220"
  },
  {
    "text": "of combining the predictability and high performance of C with JavaScript usability",
    "start": "359220",
    "end": "365160"
  },
  {
    "text": "and no that's why that's the last slide said natively compiled JS is completely safe by default exactly as interpreted",
    "start": "365160",
    "end": "371820"
  },
  {
    "text": "JS so there will not be native crashes for job oh well that's cool to be clear native compilation is not for your",
    "start": "371820",
    "end": "378539"
  },
  {
    "text": "entire app even though that is possible you need to decide which parts of your",
    "start": "378539",
    "end": "383580"
  },
  {
    "text": "code need to be optimized to the Max and only they get compiled to Native ahead of time the rest continues to use Hermes",
    "start": "383580",
    "end": "390960"
  },
  {
    "text": "bytecode and if you want to learn Hermes by code I recommend a great talk by radic react native field 2023",
    "start": "390960",
    "end": "398460"
  },
  {
    "text": "you will find it on YouTube in a couple of weeks now the really big change here is that",
    "start": "398460",
    "end": "404699"
  },
  {
    "text": "in order to I wonder how true this is C performance with jsu's ability like",
    "start": "404699",
    "end": "411060"
  },
  {
    "text": "what what exactly are they saying I I don't know I I",
    "start": "411060",
    "end": "415880"
  },
  {
    "text": "would love to see some sort of like Channel I know strong sauce I know whenever I see someone say C like your",
    "start": "416460",
    "end": "422639"
  },
  {
    "text": "biggest dead giveaway that people are saying something stupid is when they say it's faster than C then the next one is",
    "start": "422639",
    "end": "428940"
  },
  {
    "text": "when they say it's a dynamic language that's as fast as C or it's a bytecode language that's as",
    "start": "428940",
    "end": "436919"
  },
  {
    "text": "fast as C you're just like well you know what you're saying is",
    "start": "436919",
    "end": "443400"
  },
  {
    "text": "largely offensive I don't believe you",
    "start": "443400",
    "end": "448800"
  },
  {
    "text": "I'm not going to believe you sorry fully exploit native performance",
    "start": "448800",
    "end": "455240"
  },
  {
    "text": "static Hermes relies on sound types now even if you don't know what sound",
    "start": "455240",
    "end": "460740"
  },
  {
    "text": "types are what's a little after remember these words and we'll really delve into that a little bit deeper in a few slides",
    "start": "460740",
    "end": "467400"
  },
  {
    "text": "I see someone say e e equals m m c squared so it didn't didn't someone",
    "start": "467400",
    "end": "474000"
  },
  {
    "text": "tweet just recently E equals m c squared plus a i as if it was some sort of",
    "start": "474000",
    "end": "479520"
  },
  {
    "text": "revolutionary thing",
    "start": "479520",
    "end": "483860"
  },
  {
    "text": "you think twitch chat is dumb okay I just want you to remember this if you think twitch chat is dumb go on Twitter",
    "start": "488580",
    "end": "495599"
  },
  {
    "text": "whole new world out there okay whole new whole new world out there this point I",
    "start": "495599",
    "end": "501180"
  },
  {
    "text": "want to make a big disclaimer uh we are seeing encouraging results from static Hermes but it is still very much a work in",
    "start": "501180",
    "end": "507900"
  },
  {
    "text": "progress okay it's not ready right now it is not suitable for anyone besides the most extreme hackers in enthusiasts",
    "start": "507900",
    "end": "513659"
  },
  {
    "text": "like radic it is still not easy to use and many things are broken if you tried it which",
    "start": "513659",
    "end": "519659"
  },
  {
    "text": "you can because it is on GitHub you might get disappointed okay but rest assured we are working on it and it is",
    "start": "519659",
    "end": "525420"
  },
  {
    "text": "getting better all the time some of the Hermes team is here with me in Black native for you and they are submitting",
    "start": "525420",
    "end": "530459"
  },
  {
    "text": "this as we speak so it is improving at this very second with all that said we really wanted to",
    "start": "530459",
    "end": "536940"
  },
  {
    "text": "share it early with the rack native community and to get your feedback we also want to thank our partner in",
    "start": "536940",
    "end": "543120"
  },
  {
    "text": "this Amazon by the way how how different is react native from react who here programs in both",
    "start": "543120",
    "end": "550640"
  },
  {
    "text": "anybody anybody honestly pretty different very",
    "start": "551940",
    "end": "557519"
  },
  {
    "text": "different me pretty different okay",
    "start": "557519",
    "end": "565279"
  },
  {
    "text": "I only use preact oh okay tough guy 50 similar",
    "start": "565560",
    "end": "572240"
  },
  {
    "text": "I mean I'm like 97 similar to an ape so 50 similar means nothing to me okay",
    "start": "573540",
    "end": "578940"
  },
  {
    "text": "I don't even know what that means I don't I don't even know what that's supposed to mean at this point",
    "start": "578940",
    "end": "584760"
  },
  {
    "text": "22 better because internally we added flow support",
    "start": "584760",
    "end": "589860"
  },
  {
    "text": "did I just hold on did I just typescript support to static armies we also want to thank our partner in this Amazon",
    "start": "589860",
    "end": "595640"
  },
  {
    "text": "typescript support to study Hermes because internally we added flow support",
    "start": "595640",
    "end": "601260"
  },
  {
    "text": "Amazon users react native in many of its apps and it has been supporting us in going like native over the past few",
    "start": "601260",
    "end": "607140"
  },
  {
    "text": "years okay so this is a brief overview of the",
    "start": "607140",
    "end": "612240"
  },
  {
    "text": "topics that we'll cover in this presentation yeah Amazon doing non-evil things okay it's it's weird I I okay W",
    "start": "612240",
    "end": "618779"
  },
  {
    "text": "on the board for Amazon flow yep vomit I've never actually used flow I am",
    "start": "618779",
    "end": "623940"
  },
  {
    "text": "curious about flow you know what I mean I've never used flow why would anyone use flow Has",
    "start": "623940",
    "end": "630000"
  },
  {
    "text": "anyone used flow flow's good flow's great one w a",
    "start": "630000",
    "end": "636540"
  },
  {
    "text": "thousand L's flow is better flow has sound types oh interesting flow has",
    "start": "636540",
    "end": "641760"
  },
  {
    "text": "sound types how does it do that does it have some sort of runtime component",
    "start": "641760",
    "end": "647060"
  },
  {
    "text": "is that what it does because like how do you have a sound type it has speakers oh you're you're a funny guy huh",
    "start": "650880",
    "end": "657180"
  },
  {
    "text": "you're a funny guy aren't you",
    "start": "657180",
    "end": "661040"
  },
  {
    "text": "okay forget you guys but I will try to fit everything in the remaining yeah sound types what are",
    "start": "664140",
    "end": "670260"
  },
  {
    "text": "those and how does it have it so first we'll start with explaining why it is difficult to compile JavaScript to",
    "start": "670260",
    "end": "675480"
  },
  {
    "text": "Native then we'll explain what sound typing is and we'll look into an example of actual",
    "start": "675480",
    "end": "681300"
  },
  {
    "text": "native compilation so you can get a few shut up finally we'll talk about something that became possible with",
    "start": "681300",
    "end": "687420"
  },
  {
    "text": "static Hermes and that is zero cost ffi first we'll look at an example which reads an sqlite database entirely in",
    "start": "687420",
    "end": "694380"
  },
  {
    "text": "JavaScript without C plus plus or C this Hermes have does Hermes have his hand run time",
    "start": "694380",
    "end": "700880"
  },
  {
    "text": "Hermes like node",
    "start": "701160",
    "end": "704180"
  },
  {
    "text": "yes yes no",
    "start": "708959",
    "end": "712519"
  },
  {
    "text": "sounds like it yes no why do I keep asking you guys things",
    "start": "715140",
    "end": "720899"
  },
  {
    "text": "why do I keep asking you guys things okay what what is my problem",
    "start": "720899",
    "end": "728060"
  },
  {
    "text": "wow somehow this became less helpful I'll just have to go places a little bit",
    "start": "728120",
    "end": "733140"
  },
  {
    "text": "more detailed example of one simple native code which is get them 50 likely",
    "start": "733140",
    "end": "739200"
  },
  {
    "text": "first let's stage let's set the stage a little bit here why do we need static Hermes isn't regular Hermes good enough",
    "start": "739200",
    "end": "747360"
  },
  {
    "text": "well as an interpreter Hermes is pretty good and we actually do have plans to make it about twice faster which is a",
    "start": "747360",
    "end": "754380"
  },
  {
    "text": "topic for a whole another talk but ultimately that's a lot faster there is only so much performance that you can get from an interpreter and that isn't",
    "start": "754380",
    "end": "761519"
  },
  {
    "text": "always enough one way for people to exceed that level of performance is to write extensions in",
    "start": "761519",
    "end": "766920"
  },
  {
    "text": "C plus just as Poor Joe was going to yeah that's how it can be quite",
    "start": "766920",
    "end": "772079"
  },
  {
    "text": "difficult to write and to maintain so instead we want to take advantage of",
    "start": "772079",
    "end": "777120"
  },
  {
    "text": "react native developers familiarity with typed JavaScript and compile type JavaScript to Native",
    "start": "777120",
    "end": "783660"
  },
  {
    "text": "ahead of time I know I'm repeating myself a little bit you know this is about compilation to Native",
    "start": "783660",
    "end": "789000"
  },
  {
    "text": "a valid question to ask here is what makes compiling GS to Native so",
    "start": "789000",
    "end": "794100"
  },
  {
    "text": "difficult in the first place well the answer is easy to see in the example like this one yeah we have a",
    "start": "794100",
    "end": "800339"
  },
  {
    "text": "function it takes two parameters but we don't know their types so all possible types string array number regular",
    "start": "800339",
    "end": "806220"
  },
  {
    "text": "expression whatever and combinations between them need to be supported the result is that if you wanted to",
    "start": "806220",
    "end": "812100"
  },
  {
    "text": "compile this to Native you either would get a binary explosion you effectively get free generics you",
    "start": "812100",
    "end": "819240"
  },
  {
    "text": "get a generic you get you get a generic of T and uh V and U and you get both of",
    "start": "819240",
    "end": "825600"
  },
  {
    "text": "them and then they just explode to every type that'd be fun huh that'd be kind of nice all type combinations or you would",
    "start": "825600",
    "end": "831480"
  },
  {
    "text": "just get interpreted like performance which defeats the purpose of native combination compilation",
    "start": "831480",
    "end": "837240"
  },
  {
    "text": "uh there are interesting Solutions in the Academia that I would like to acknowledge specifically the excellent",
    "start": "837240",
    "end": "843839"
  },
  {
    "text": "hope C compiler by Manuel Serrano but unfortunately it doesn't really meet",
    "start": "843839",
    "end": "848940"
  },
  {
    "text": "our needs since it compiles every function twice and relies on heuristics so performance is not guaranteed and",
    "start": "848940",
    "end": "855420"
  },
  {
    "text": "predictable we are not rolling it out though for the future okay then we already said that we want",
    "start": "855420",
    "end": "861899"
  },
  {
    "text": "to use type annotations can they help unfortunately not by themselves because",
    "start": "861899",
    "end": "868200"
  },
  {
    "text": "type annotations in typescript and flow are unsound",
    "start": "868200",
    "end": "873240"
  },
  {
    "text": "the typescript community right now are in shambles they're completely in shambles",
    "start": "873240",
    "end": "879959"
  },
  {
    "text": "right now it's not it's type safe just shambled right now you shook",
    "start": "879959",
    "end": "888360"
  },
  {
    "text": "there's that word again sound and sound what does it mean unsound means that these type of",
    "start": "888360",
    "end": "894240"
  },
  {
    "text": "notations cannot guarantee that the actual types at runtime are correct but",
    "start": "894240",
    "end": "899459"
  },
  {
    "text": "they are what we say here how so you might ask well here's a very simple example we",
    "start": "899459",
    "end": "905880"
  },
  {
    "text": "have this function annotated with number we imagine doing all this annotation just to not actually have types always",
    "start": "905880",
    "end": "913380"
  },
  {
    "text": "with two array elements unfortunately these array elements are out of range so",
    "start": "913380",
    "end": "918660"
  },
  {
    "text": "instead of calling the function with number and number we're calling it with two values of undefined so as you can see we have Vulcan the",
    "start": "918660",
    "end": "924959"
  },
  {
    "text": "type Checkers it is true typescript has only ever talked about a code organization has nothing to do with",
    "start": "924959",
    "end": "930240"
  },
  {
    "text": "actual types it's it's supposed to be that it gives you the feeling of doing the right thing and likely cures most",
    "start": "930240",
    "end": "935399"
  },
  {
    "text": "your bugs uh and and as I'm sure you know there are many similar ways to break the type",
    "start": "935399",
    "end": "941880"
  },
  {
    "text": "Checkers and this is not a bug in typescript or flow uh it is just that given JavaScript",
    "start": "941880",
    "end": "946920"
  },
  {
    "text": "semantics this problem cannot be solved statically at compile time correct it is a very difficult problem",
    "start": "946920",
    "end": "953399"
  },
  {
    "text": "here is how static Hermes addresses this problem in this specific example on the left we have regular Hermes executing",
    "start": "953399",
    "end": "960240"
  },
  {
    "text": "this code oh nice you get actually like hard as we can hardly recall undefined on the right we have static",
    "start": "960240",
    "end": "966120"
  },
  {
    "text": "Hermes now rather than call the function with undefined it throws a range exception",
    "start": "966120",
    "end": "971760"
  },
  {
    "text": "when we try to answer the not in range dude welcome to Java one point oh there",
    "start": "971760",
    "end": "978660"
  },
  {
    "text": "you go all you script kitties have you ever heard of Rangers they're a lot of fun",
    "start": "978660",
    "end": "983880"
  },
  {
    "text": "they're a lot of fun okay",
    "start": "983880",
    "end": "987920"
  },
  {
    "text": "modifies some JavaScript semantics in order to enable efficient sound typing",
    "start": "990019",
    "end": "995339"
  },
  {
    "text": "at runtime in other words at runtime the types of values are guaranteed to match",
    "start": "995339",
    "end": "1000500"
  },
  {
    "text": "the type annotations which in turn allows us to compile that Source very efficiently",
    "start": "1000500",
    "end": "1006320"
  },
  {
    "text": "the new semantics are opt-in on a granular level and you can use them only where you need",
    "start": "1006320",
    "end": "1011600"
  },
  {
    "text": "them plus the new code can coexist in interop and finally as I",
    "start": "1011600",
    "end": "1017779"
  },
  {
    "text": "mentioned both typescript and flow are supported this is super curious to me because I",
    "start": "1017779",
    "end": "1023480"
  },
  {
    "text": "mean you still can cheat at some point in typescript to convert an object to a number and then how does this all like I",
    "start": "1023480",
    "end": "1030678"
  },
  {
    "text": "I wonder what all the errors are and what is that are we breaking JavaScript we can't arbitrarily change how the",
    "start": "1030679",
    "end": "1036199"
  },
  {
    "text": "language Works can we well consider this we are simply enforcing the behavior that the user",
    "start": "1036199",
    "end": "1042260"
  },
  {
    "text": "declared they wanted when they hold the type of notation when they wrote that X is of type number they certainly did not",
    "start": "1042260",
    "end": "1049220"
  },
  {
    "text": "intend for X to occasionally be of type undefined that wouldn't make sense so technically the program we had there",
    "start": "1049220",
    "end": "1055039"
  },
  {
    "text": "was incorrect we just called the bug at runtime instead of silently ignoring it",
    "start": "1055039",
    "end": "1061820"
  },
  {
    "text": "so we are strengthening the typescript in flow type systems I wonder if the static Generation all this allows for",
    "start": "1061820",
    "end": "1067940"
  },
  {
    "text": "something like uh number or undefined and allows for like that more uh like",
    "start": "1067940",
    "end": "1073340"
  },
  {
    "text": "still loosey-goosey feeling of JavaScript while having still like this",
    "start": "1073340",
    "end": "1078740"
  },
  {
    "text": "increased performance of pre-compilation I'm very curious about that because that would be you know that would be Dynamite",
    "start": "1078740",
    "end": "1084320"
  },
  {
    "text": "right that would be a genuinely Dynamite item yeah a nullable effectively you'd get a nullable uh",
    "start": "1084320",
    "end": "1090799"
  },
  {
    "text": "it would be pretty cool uh so so if you use Hermes and you use protobufs instead of uh instead of Json you correctly",
    "start": "1090799",
    "end": "1097039"
  },
  {
    "text": "organize oh my goodness all of your code into modules hierarchy and you don't spam but none of this [ __ ] functions all over the place",
    "start": "1097039",
    "end": "1103280"
  },
  {
    "text": "and then you can do basic modern programming in JS yes you've now officially caught up again 1995 was a",
    "start": "1103280",
    "end": "1109100"
  },
  {
    "text": "hell of a year it was a hell of a year for programming Java came out JavaScript came out they announced together null",
    "start": "1109100",
    "end": "1117140"
  },
  {
    "text": "was included in JavaScript because it needed to interrupt with Java I mean it was a good it was a good year it was",
    "start": "1117140",
    "end": "1123980"
  },
  {
    "text": "a genuinely Good Year super information Highway we don't necessarily view that is breaking JavaScript",
    "start": "1123980",
    "end": "1129740"
  },
  {
    "text": "but regardless of these philosophical arguments it is all opt-in so if you don't like it you don't have to use it",
    "start": "1129740",
    "end": "1135799"
  },
  {
    "text": "but if you do use it it will make your code both faster and more correct",
    "start": "1135799",
    "end": "1140840"
  },
  {
    "text": "so we we would like you to use it I like this idea we have talked a lot about this in",
    "start": "1140840",
    "end": "1146960"
  },
  {
    "text": "theory now so it's time to finally look at concrete examples by the way this is the most confusing meme still to my",
    "start": "1146960",
    "end": "1152840"
  },
  {
    "text": "lifetime I genuinely have no idea how to interpret this meme",
    "start": "1152840",
    "end": "1158000"
  },
  {
    "text": "it's just like you put the most confusing image of all time and you just",
    "start": "1158000",
    "end": "1164000"
  },
  {
    "text": "put words on top of it and somehow it makes me chuckle I don't even get it",
    "start": "1164000",
    "end": "1171520"
  },
  {
    "text": "it's Darth Vader caring about his water quality obviously I know but it doesn't make any I don't I I'm still I still",
    "start": "1176480",
    "end": "1182780"
  },
  {
    "text": "struggle I didn't understand what compilation to native means for performance and what it looks like",
    "start": "1182780",
    "end": "1188419"
  },
  {
    "text": "it's ironic for example we have chosen is some of you may be familiar with it it's a part of a well-known computer",
    "start": "1188419",
    "end": "1195559"
  },
  {
    "text": "language benchmarks game okay it is a math heavy Benchmark do you think it's like the three body problem",
    "start": "1195559",
    "end": "1203080"
  },
  {
    "text": "famous novel by the way by the way citing that I read hey just so you know I read I I read not a big deal",
    "start": "1204020",
    "end": "1212419"
  },
  {
    "text": "with many property accesses when we started compiling it wow it was the same performance as Hermes and that is 550",
    "start": "1212419",
    "end": "1219559"
  },
  {
    "text": "milliseconds but now as you can see hell of a difference it is 10 times faster when compiled natively so that is that is not",
    "start": "1219559",
    "end": "1225620"
  },
  {
    "text": "pretty shabby plus we're certain that there is more Headroom we can probably get to 20 times faster than Harvest 20",
    "start": "1225620",
    "end": "1231380"
  },
  {
    "text": "times [Applause]",
    "start": "1231380",
    "end": "1237200"
  },
  {
    "text": "something like V8 as well in this comparison just so you can see",
    "start": "1237200",
    "end": "1242720"
  },
  {
    "text": "um like another engine so you have something to compare to because it's Hermes against itself meaning that it",
    "start": "1242720",
    "end": "1248179"
  },
  {
    "text": "just got a lot faster has it caught up to standard JavaScript expectation speed",
    "start": "1248179",
    "end": "1253880"
  },
  {
    "text": "or has it exceeded JavaScript expectation speed I would have loved to see something outside of just Hermione",
    "start": "1253880",
    "end": "1260260"
  },
  {
    "text": "comparison you know just toss it no toss it and Bun somewhere else just so you can understand what you're looking at",
    "start": "1260260",
    "end": "1265580"
  },
  {
    "text": "you know [Music] [Applause] okay so we have this very nice",
    "start": "1265580",
    "end": "1272660"
  },
  {
    "text": "performance Improvement but what does the compiled code look like let's examine this loop from inbody.js",
    "start": "1272660",
    "end": "1279620"
  },
  {
    "text": "how did it be the three body problem series is coming to coming in January 2024 to Netflix by the",
    "start": "1279620",
    "end": "1285740"
  },
  {
    "text": "way oh gosh they have another opportunity to ruin a really great book damn you come so fast well this is how",
    "start": "1285740",
    "end": "1292220"
  },
  {
    "text": "before starting Hermes deal with dozens of instructions executed for every line",
    "start": "1292220",
    "end": "1297559"
  },
  {
    "text": "of this Loop by The Interpreter with static Hermes it is much better and",
    "start": "1297559",
    "end": "1302840"
  },
  {
    "text": "by the way I'm really happy to bring some low level assembler to this JavaScript conference in the next slide",
    "start": "1302840",
    "end": "1309140"
  },
  {
    "text": "let's put the native interact native here we are if you don't know r64",
    "start": "1309140",
    "end": "1317000"
  },
  {
    "text": "assembler don't worry I think you'll still get the idea the first thing to see is how if you",
    "start": "1317000",
    "end": "1323240"
  },
  {
    "text": "assemble instructions we have for the first two lines of the loop we have six instructions",
    "start": "1323240",
    "end": "1328640"
  },
  {
    "text": "and most importantly most of these instructions are very cheap the entire calculation the two",
    "start": "1328640",
    "end": "1333860"
  },
  {
    "text": "multiplications in the two apps what's an F my life advanced mode on two dimensions",
    "start": "1333860",
    "end": "1340840"
  },
  {
    "text": "is this some sort of sim Deez Nuts type operation going on here",
    "start": "1342860",
    "end": "1348220"
  },
  {
    "text": "what's this F my life going on right here it's divorce papers",
    "start": "1348320",
    "end": "1354399"
  },
  {
    "text": "it looks like it's doing two operations at once multiply and add",
    "start": "1355280",
    "end": "1361940"
  },
  {
    "text": "floating multiply lastly add that",
    "start": "1361940",
    "end": "1369200"
  },
  {
    "text": "all performed in parallel by a single instruction which is marked with a divorce which is really impressive and",
    "start": "1369200",
    "end": "1374900"
  },
  {
    "text": "trust me this is very fast and it is quite exciting for compiler Developers",
    "start": "1374900",
    "end": "1380000"
  },
  {
    "text": "this is the rest of the loop again very few instructions well why is that one so again you don't need to understand the",
    "start": "1380000",
    "end": "1385760"
  },
  {
    "text": "details of this but you can see how small the output is and rest assured this is indeed very fast it is achieving",
    "start": "1385760",
    "end": "1392059"
  },
  {
    "text": "performance close to C much faster than Hermes I'd love it I'd love to see again saying those phrases I really wish they",
    "start": "1392059",
    "end": "1398419"
  },
  {
    "text": "could have just tossed tossed a quick into God bolt and done a quick little look-see and see like what what does",
    "start": "1398419",
    "end": "1404720"
  },
  {
    "text": "that look like what is the equivalent 03 awesome",
    "start": "1404720",
    "end": "1410360"
  },
  {
    "text": "you know compiler version of this and and look at that even done with it it will become",
    "start": "1410360",
    "end": "1417080"
  },
  {
    "text": "even faster but it'd be interesting",
    "start": "1417080",
    "end": "1422720"
  },
  {
    "text": "when we hopefully would have shipped this now a little a few more benchmarks we",
    "start": "1422720",
    "end": "1428900"
  },
  {
    "text": "can see the results of other benchmarks that we have created they are in the static Hermes Repository",
    "start": "1428900",
    "end": "1434059"
  },
  {
    "text": "they are not as impressive but it's still not bad one of them is like five times faster and we again we are still",
    "start": "1434059",
    "end": "1439940"
  },
  {
    "text": "working on making them better I mean this is all good I love the performance increase next thing I want",
    "start": "1439940",
    "end": "1446360"
  },
  {
    "text": "to talk about is zero cost ffi which I suspect might be even more exciting for some of you come on Zig",
    "start": "1446360",
    "end": "1452780"
  },
  {
    "text": "um very serious slide I don't know",
    "start": "1452780",
    "end": "1458539"
  },
  {
    "text": "I shouldn't have used chat GPT for this presentation let's keep moving so early on when we",
    "start": "1458539",
    "end": "1465080"
  },
  {
    "text": "started implementing sound typing we got an unexpected benefit we realized that sound types unlock the possibility of",
    "start": "1465080",
    "end": "1471140"
  },
  {
    "text": "very efficient native platform integration yes we can call native platform functions",
    "start": "1471140",
    "end": "1476720"
  },
  {
    "text": "with practically no cost just as if we were a c program this enables us if we wanted to",
    "start": "1476720",
    "end": "1482539"
  },
  {
    "text": "implement platform Integrations entirely in JavaScript without the need for resorting to C plus at all",
    "start": "1482539",
    "end": "1489580"
  },
  {
    "text": "that is incredible and the reason",
    "start": "1496760",
    "end": "1502840"
  },
  {
    "text": "I can foresee some of the the reasons why that is so dang incredible because especially with the moving",
    "start": "1503480",
    "end": "1509600"
  },
  {
    "text": "Target like a phone where the platform does make changes from time to time what does ffi stand for fast Fourier",
    "start": "1509600",
    "end": "1516320"
  },
  {
    "text": "intercourse um with the platform moving like various",
    "start": "1516320",
    "end": "1522020"
  },
  {
    "text": "things change on the platform pretty regularly and so being able to have a bridge methods written in JavaScript",
    "start": "1522020",
    "end": "1528440"
  },
  {
    "text": "means that you can do like JavaScript operations and actually have like a",
    "start": "1528440",
    "end": "1533779"
  },
  {
    "text": "platform normalization layer and it effectively gets to run at almost native",
    "start": "1533779",
    "end": "1539179"
  },
  {
    "text": "speed like that that that's super cool that's like super super cool",
    "start": "1539179",
    "end": "1547658"
  },
  {
    "text": "so what problem are we really solving here first 20 billion dollars sweating",
    "start": "1547720",
    "end": "1555159"
  },
  {
    "text": "amount of code in order to implement and wrap a single call to a native platform API furthermore those wrappers which use",
    "start": "1555159",
    "end": "1563000"
  },
  {
    "text": "JSI can become expensive when they're invoked very frequently we can give JavaScript developers",
    "start": "1563000",
    "end": "1569360"
  },
  {
    "text": "another option the zero cost ffi information is literally that zero cost it performs no",
    "start": "1569360",
    "end": "1575659"
  },
  {
    "text": "conversions no allocations no interactions it is exactly as cheap as performing a regular Library code in C",
    "start": "1575659",
    "end": "1582500"
  },
  {
    "text": "plus we have measured that the call Overhead is between 15 and 80 times not",
    "start": "1582500",
    "end": "1587720"
  },
  {
    "text": "percent 80 times lower than JSI native function",
    "start": "1587720",
    "end": "1594580"
  },
  {
    "text": "wow that's that's pretty dang good even I mean I know it's all self-referential speed up points that they keep doing",
    "start": "1594820",
    "end": "1601279"
  },
  {
    "text": "right they're only referring to Hermes as what they've actually made faster but nonetheless I mean making stuff faster",
    "start": "1601279",
    "end": "1607700"
  },
  {
    "text": "within your own platform by huge Leaps and Bounds like that's really good like that's genuinely an awesome thing especially native calls like that where",
    "start": "1607700",
    "end": "1614360"
  },
  {
    "text": "you can really get deep on it I like it however we have to be careful as we all know native functions can be unsafe and",
    "start": "1614360",
    "end": "1621140"
  },
  {
    "text": "dangerous we have made it very cheap to call them but that doesn't mean that they should be called irresponsibly to",
    "start": "1621140",
    "end": "1626720"
  },
  {
    "text": "ensure that we have introduced a distinction between safe and unsafe code this is very similar to another very",
    "start": "1626720",
    "end": "1632840"
  },
  {
    "text": "popular system software language I'll let you guess which one it is unsafe code sections trust that the",
    "start": "1632840",
    "end": "1639740"
  },
  {
    "text": "developer knows what they are doing hopefully Joe knows we'll see and",
    "start": "1639740",
    "end": "1644799"
  },
  {
    "text": "interacting with whoopsies I just accidentally I tried the plus I just I just messed that up he's talking about",
    "start": "1644799",
    "end": "1650659"
  },
  {
    "text": "rust okay the rust mentioned let's go patience on the other hand disallow unsafe operations so you cannot",
    "start": "1650659",
    "end": "1656299"
  },
  {
    "text": "accidentally call a native function from there so you have to be very really deliberate when interacting I skipped",
    "start": "1656299",
    "end": "1662299"
  },
  {
    "text": "something I'm not sure what happened here you cannot deal with it just deal with it",
    "start": "1662299",
    "end": "1666880"
  },
  {
    "text": "by the way squeal light is still so good for those that don't know why squeal light is so good",
    "start": "1669220",
    "end": "1675020"
  },
  {
    "text": "I just want to let you know something you can take squealite and you can point it",
    "start": "1675020",
    "end": "1680600"
  },
  {
    "text": "to a file and it works I want you just to take a",
    "start": "1680600",
    "end": "1687620"
  },
  {
    "text": "second and think about how many cool integration tests you could have written",
    "start": "1687620",
    "end": "1692659"
  },
  {
    "text": "by Simply Having golden database files and you just write the database file",
    "start": "1692659",
    "end": "1699380"
  },
  {
    "text": "once save it as the file and then that's the thing you test against now you can actually like just",
    "start": "1699380",
    "end": "1705679"
  },
  {
    "text": "test and have actual database like working and the database is",
    "start": "1705679",
    "end": "1711080"
  },
  {
    "text": "perfectly set up and all you have to do is just like CP that file into a directory run it call it good you're",
    "start": "1711080",
    "end": "1717559"
  },
  {
    "text": "like yeah that's exactly the thing we wanted to to work I know actual data like actual data",
    "start": "1717559",
    "end": "1726260"
  },
  {
    "text": "squeal light is really cool if I I wanted to give you a taste of",
    "start": "1726260",
    "end": "1732080"
  },
  {
    "text": "what is possible you can do Ram only first example ramrod me uh but the problem about Ram only is I I don't know",
    "start": "1732080",
    "end": "1737299"
  },
  {
    "text": "how this I don't know how the environment's set up first so that's why I just like the file thing right you can really do some cool stuff",
    "start": "1737299",
    "end": "1743539"
  },
  {
    "text": "foreign first as you can see we need to declare",
    "start": "1743539",
    "end": "1750020"
  },
  {
    "text": "some native apis these are the apis exported by sqlite now I did not write this by hand it was generated by our",
    "start": "1750020",
    "end": "1756860"
  },
  {
    "text": "tool which takes a c header and generates JavaScript Bindings that we can use",
    "start": "1756860",
    "end": "1762799"
  },
  {
    "text": "and this is the JavaScript source that opens the database queries it",
    "start": "1762799",
    "end": "1768080"
  },
  {
    "text": "oh gosh guys I know there's a lot of JavaScript engineers in here um",
    "start": "1768080",
    "end": "1773419"
  },
  {
    "text": "this this is raw docking squeal okay squail form a boy I know this is this",
    "start": "1773419",
    "end": "1779960"
  },
  {
    "text": "this is very hard to see there's not even an orm or at least a squeal Builder",
    "start": "1779960",
    "end": "1785659"
  },
  {
    "text": "okay I get it I get that this is really hard to look at and you probably feel very",
    "start": "1785659",
    "end": "1791539"
  },
  {
    "text": "scared okay you're probably you're literally going to Prisma chat and chatting with a",
    "start": "1791539",
    "end": "1797299"
  },
  {
    "text": "live representative right now just to feel better about yourself I I understand but trust me it's okay we",
    "start": "1797299",
    "end": "1804740"
  },
  {
    "text": "can do this it's just it's just it's just an example okay it's okay where's my [ __ ]",
    "start": "1804740",
    "end": "1810080"
  },
  {
    "text": "ose brings the result and this is it this is the entire Source there's no C plus plus this is",
    "start": "1810080",
    "end": "1815600"
  },
  {
    "text": "it runs sqlite and it actually does work I was actually planning to do this in a live demo but I",
    "start": "1815600",
    "end": "1822260"
  },
  {
    "text": "got discouraged after I saw what Microsoft did yesterday I couldn't compare with that so here's a",
    "start": "1822260",
    "end": "1828080"
  },
  {
    "text": "screenshot that's pretty funny you can see you can",
    "start": "1828080",
    "end": "1833240"
  },
  {
    "text": "see this is invoking static Hermits to compile the demo on the Mac OS imagine big",
    "start": "1833240",
    "end": "1838279"
  },
  {
    "text": "whatever what whatever whatever Microsoft did ruined the guy this is such a good",
    "start": "1838279",
    "end": "1844340"
  },
  {
    "text": "presentation I would love to see whatever this is yeah I'm just showing you the output it",
    "start": "1844340",
    "end": "1849799"
  },
  {
    "text": "is a true wait is the thing called shermis what the hell sure means is shermis the compiler is sure me is to",
    "start": "1849799",
    "end": "1857120"
  },
  {
    "text": "compile for Hermes please tell me that's real macro is binary and we're running it",
    "start": "1857120",
    "end": "1862480"
  },
  {
    "text": "okay I don't know how I didn't see that so as you can see you could even use static Hermes if you wanted to to hide",
    "start": "1862480",
    "end": "1868760"
  },
  {
    "text": "native applications for Mac OS or Linux or Windows oh my goodness but although we do not recommend it but I find it",
    "start": "1868760",
    "end": "1874520"
  },
  {
    "text": "amusing that it is possible JavaScript devs don't even raw dog",
    "start": "1874520",
    "end": "1881919"
  },
  {
    "text": "JavaScript imagine looking at squeal yeah I can imagine that okay this second",
    "start": "1881919",
    "end": "1887120"
  },
  {
    "text": "example will be a little bit more boring but I hope it will allow you to understand a little bit more what is",
    "start": "1887120",
    "end": "1892640"
  },
  {
    "text": "going on here we have deliberately chosen a very simple native API for demonstration purposes it is the C get end function",
    "start": "1892640",
    "end": "1900200"
  },
  {
    "text": "average an environment variable by name uh think process.n in node.js",
    "start": "1900200",
    "end": "1906260"
  },
  {
    "text": "again observe that this is all JavaScript there is no C plus plus JSI or anything like that here and we're not",
    "start": "1906260",
    "end": "1912380"
  },
  {
    "text": "going to spend a lot of time on this but let's quickly go over what is happening",
    "start": "1912380",
    "end": "1917840"
  },
  {
    "text": "first this is the external declaration that we're going to call this is telling static Hermes of the C function that we",
    "start": "1917840",
    "end": "1923659"
  },
  {
    "text": "want to call we're converting the name of the variable that we want to take from a",
    "start": "1923659",
    "end": "1929779"
  },
  {
    "text": "JavaScript string to a C string okay here we are calling the native function okay",
    "start": "1929779",
    "end": "1936260"
  },
  {
    "text": "then we're converting the result to a JavaScript string what's that 2048 is 2048 like the max",
    "start": "1936260",
    "end": "1943700"
  },
  {
    "text": "value are we just did he just did he literally just go over a quick 2 to the 11. just",
    "start": "1943700",
    "end": "1950480"
  },
  {
    "text": "just allowing a 2 to the 11 hang out like that buff size I know but that's what I mean you can't just you can't",
    "start": "1950480",
    "end": "1956120"
  },
  {
    "text": "just gloss over the fact that you're I don't know how I feel about people playing with buffers and thinking about",
    "start": "1956120",
    "end": "1962419"
  },
  {
    "text": "stir end copy in JavaScript okay it makes me feel a little nervous all of a sudden freeing the temporary buffer that",
    "start": "1962419",
    "end": "1967700"
  },
  {
    "text": "we needed then you got to free it I know this is a simple very logical although you should only do this in libraries you",
    "start": "1967700",
    "end": "1973279"
  },
  {
    "text": "should not do this in product code obviously and here I would like us to examine",
    "start": "1973279",
    "end": "1979580"
  },
  {
    "text": "a little bit external variable uh the external function call and I promise you this is",
    "start": "1979580",
    "end": "1985159"
  },
  {
    "text": "actually the end there's not a lot more first we have a place where we can put",
    "start": "1985159",
    "end": "1992120"
  },
  {
    "text": "options things like calling convention platform depend on things it is an object open-ended where we can use it to",
    "start": "1992120",
    "end": "1998659"
  },
  {
    "text": "add functionality this is where we specify the name of the Native function we're importing",
    "start": "1998659",
    "end": "2005440"
  },
  {
    "text": "we describe the types of its parameters like you can just say C Point describe the return type that's nice and this is",
    "start": "2005440",
    "end": "2012100"
  },
  {
    "text": "just a throwaway body that we need to populate in order to make the types I want to know Microsoft did I know I do too since this is an",
    "start": "2012100",
    "end": "2018880"
  },
  {
    "text": "external function but it's still passing to the to typescript and flow we just throw a dummy exception so that it",
    "start": "2018880",
    "end": "2024880"
  },
  {
    "text": "doesn't complain that we're not returning a result so yeah this is",
    "start": "2024880",
    "end": "2031299"
  },
  {
    "text": "it for questions or suggestions I'm highly encouraging you to use the discussions tab I really want to play",
    "start": "2031299",
    "end": "2036460"
  },
  {
    "text": "around with this I really want to play out and play around with some shermis right I think shermis is really exciting I love this idea like I said I I've been",
    "start": "2036460",
    "end": "2043720"
  },
  {
    "text": "super excited about all of this um I I really do think that this is the much more interesting",
    "start": "2043720",
    "end": "2050440"
  },
  {
    "text": "version right of of a run time than anything else I think I feel like this is the",
    "start": "2050440",
    "end": "2056440"
  },
  {
    "text": "first real iteration in JavaScript in any sort of way in app just in years upon years obviously v8's like this slow",
    "start": "2056440",
    "end": "2063398"
  },
  {
    "text": "iteration where they said hey we could make a better engine hey we're gonna add in jit jit was really important and then",
    "start": "2063399",
    "end": "2068679"
  },
  {
    "text": "really some of their different uh garbage collection stuff really made a big a big difference but",
    "start": "2068679",
    "end": "2075820"
  },
  {
    "text": "this I think is like the next big step which is like well we have to kind of get out of this interpreted world if you",
    "start": "2075820",
    "end": "2081099"
  },
  {
    "text": "actually want to see it move fast now you're actually starting to get into speeds that are probably a lot a lot a",
    "start": "2081099",
    "end": "2086679"
  },
  {
    "text": "lot better and so this to me is just extremely exciting love the idea awesome presentation shermis for everybody did",
    "start": "2086679",
    "end": "2094300"
  },
  {
    "text": "bun just get toasted I don't know but the name",
    "start": "2094300",
    "end": "2099539"
  }
]