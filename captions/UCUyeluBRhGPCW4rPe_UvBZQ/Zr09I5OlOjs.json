[
  {
    "text": "I'm going to start this off by saying I invited you under technically false pretenses okay that's fine I invited you",
    "start": "80",
    "end": "7080"
  },
  {
    "text": "over Casey because I actually just wanted to hang out and I needed a technical topic to get you to agree to",
    "start": "7080",
    "end": "13400"
  },
  {
    "text": "and so if you want to talk about arm you can talk about that but you can also tell me about anything and if you have",
    "start": "13400",
    "end": "19160"
  },
  {
    "text": "anything technical to talk about I'm in well I love being on the show you didn't have you could have just said hey come",
    "start": "19160",
    "end": "24640"
  },
  {
    "text": "talk about anything come listen to me talk about WordPress and I would have said yes so thanks for the",
    "start": "24640",
    "end": "30800"
  },
  {
    "text": "invitation uh but I'm happy to talk about arm if you if there was something in particular that you or your viewers",
    "start": "30800",
    "end": "37280"
  },
  {
    "text": "were interested in that that I can help with I mean I'm not an arm expert obviously so if it's something highly",
    "start": "37280",
    "end": "44440"
  },
  {
    "text": "technical like hey this particular arm instructure and I'm going to be like sorry uh but if it's sort of more just",
    "start": "44440",
    "end": "50719"
  },
  {
    "text": "about arm in general I might be able to help uh but if not we can yeah how about we just arm versus Intel or arm versus",
    "start": "50719",
    "end": "58480"
  },
  {
    "text": "risk five CIS 5 okay sure CIS did you just call it CIS",
    "start": "58480",
    "end": "64400"
  },
  {
    "text": "five I like that yeah uh well sure um I mean I guess the the thing I would say",
    "start": "64400",
    "end": "70799"
  },
  {
    "text": "is we we sort of touched on this a little bit uh back when you and I did that stream on the there's a person",
    "start": "70799",
    "end": "78360"
  },
  {
    "text": "who's like x86 needs to die yeah I remember that was what it was yeah and",
    "start": "78360",
    "end": "83759"
  },
  {
    "text": "and kind of it's a it's a broader topic than what that person was talking about but it's it it came up there which was",
    "start": "83759",
    "end": "91000"
  },
  {
    "text": "just that people believe that arm is like intrinsically better for",
    "start": "91000",
    "end": "96880"
  },
  {
    "text": "lower power uh like like low like you know devices that that don't consume",
    "start": "96880",
    "end": "102880"
  },
  {
    "text": "much power that performance per watt whatever you want to talk say right that that's that's the conventional wisdom like arm is better for low power uh and",
    "start": "102880",
    "end": "111280"
  },
  {
    "text": "and Intel is is not just inherently and a lot of people then you",
    "start": "111280",
    "end": "117479"
  },
  {
    "text": "you can literally like if you Googled that you'd find on stack Overflow and stuff like that or quora you'd find",
    "start": "117479",
    "end": "124039"
  },
  {
    "text": "people giving reasons and those reasons just aren't accurate they they may maybe",
    "start": "124039",
    "end": "130119"
  },
  {
    "text": "they were accurate for like arm one like the very first arm processor which was",
    "start": "130119",
    "end": "135560"
  },
  {
    "text": "like back in the BBC micro days it's like it was it was designed as a successor to like uh the BBC micro",
    "start": "135560",
    "end": "142760"
  },
  {
    "text": "computer for people who know what that was we're talking ancient history at this point but nowadays A lot of the things",
    "start": "142760",
    "end": "149640"
  },
  {
    "text": "that they say just aren't true right arm is not a small instruction set anymore arm is a huge instruction set at this",
    "start": "149640",
    "end": "155879"
  },
  {
    "text": "point uh and calling it a reduced instruction set is really hard to justify and so on so you know maybe what",
    "start": "155879",
    "end": "164440"
  },
  {
    "text": "we could do here is just give people a little bit of perspective about what the actual difference between these two",
    "start": "164440",
    "end": "169560"
  },
  {
    "text": "instruction sets is uh and then maybe uh just a a vague notion of like why arm",
    "start": "169560",
    "end": "177480"
  },
  {
    "text": "has been better for power which which I think is not really the reasons people think I mean I think there's a lot of",
    "start": "177480",
    "end": "184200"
  },
  {
    "text": "good places in here to go I think a lot of people don't even I like honestly don't know much of a difference between",
    "start": "184200",
    "end": "189400"
  },
  {
    "text": "arm and x86 in my head it's just two different instruction sets attempting to do the same thing I'm not really sure if",
    "start": "189400",
    "end": "196319"
  },
  {
    "text": "there is much of a difference besides for like ways to just this one uses this set of instructions this one uses this",
    "start": "196319",
    "end": "202440"
  },
  {
    "text": "one and that's that it that but I have a very black box understanding and then on top of that the power thing is very",
    "start": "202440",
    "end": "207640"
  },
  {
    "text": "compelling because I know Sushi Dragon if you've ever seen streams he does these really amazing sushi sushi what's",
    "start": "207640",
    "end": "213280"
  },
  {
    "text": "Sushi Dragon the sushi dragon is this live stream editor that does a lot of AI and stuff to just completely morph a",
    "start": "213280",
    "end": "219760"
  },
  {
    "text": "bunch of his streams and okay he's been able to Skyrocket his power by adopting",
    "start": "219760",
    "end": "226200"
  },
  {
    "text": "computers that use arm as opposed to x86 and so he does all of his streaming now off of like MacBooks as he used to do it",
    "start": "226200",
    "end": "233000"
  },
  {
    "text": "with uh Lenovo or some some okay run-of-the-mill company um well maybe we'll just this",
    "start": "233000",
    "end": "240200"
  },
  {
    "text": "cuz people seem to when I'm on the show people generally expect there to be some weird technical stuff so maybe we can",
    "start": "240200",
    "end": "245720"
  },
  {
    "text": "start there because that's you know you got to give the people what they want that's that's how I think of it yep I'm on that team Let's Do It um so so maybe",
    "start": "245720",
    "end": "253959"
  },
  {
    "text": "uh let me see if I can do this here if you want to make me big I will make my head small gotcha give me one second I",
    "start": "253959",
    "end": "261479"
  },
  {
    "text": "can show you uh some some literal just to give just to give a a literal some",
    "start": "261479",
    "end": "268880"
  },
  {
    "text": "literal examples here um of of what's going on with things I got make myself",
    "start": "268880",
    "end": "273919"
  },
  {
    "text": "small I just realized I'm giant I'm over here just focusing on that's okay you can stay giant you can stay",
    "start": "273919",
    "end": "280440"
  },
  {
    "text": "giant it's okay we're only using the top we're GNA use the top here",
    "start": "280440",
    "end": "288440"
  },
  {
    "text": "so could people read that I don't know if I this might can I make this larger I think I",
    "start": "291240",
    "end": "296759"
  },
  {
    "text": "can encodings cuz this is going through several encoding so it might be let me see if I can",
    "start": "296759",
    "end": "303520"
  },
  {
    "text": "make larger and still see it can is that big enough to see maybe I'll go one more",
    "start": "303520",
    "end": "309400"
  },
  {
    "text": "I think I think we got enough room for one more just real large all right maybe people can see",
    "start": "309400",
    "end": "316360"
  },
  {
    "text": "that people are saying it's good I'm trying to figure out a way to there we go perfect okay I can see this all right",
    "start": "316360",
    "end": "324319"
  },
  {
    "text": "so uh for those of you who aren't I'll just quickly say for those of you who aren't familiar with this Tool uh",
    "start": "324319",
    "end": "330160"
  },
  {
    "text": "there's a fellow M named Matt godbolt uh I think he was a he was a Google",
    "start": "330160",
    "end": "335280"
  },
  {
    "text": "engineer he's I I think I don't know I don't think he is anymore he might be retired I'm not sure I I don't know",
    "start": "335280",
    "end": "340319"
  },
  {
    "text": "where he works now but he made this tool it's very famous and popular among",
    "start": "340319",
    "end": "345400"
  },
  {
    "text": "people who like to look at low-l code stuff uh and it's it's freely available it's just called godbolt dorg here it's",
    "start": "345400",
    "end": "352400"
  },
  {
    "text": "called compiler Explorer and atod bolt. org and What it lets you do is it",
    "start": "352400",
    "end": "357479"
  },
  {
    "text": "basically just automates the process uh for any given compiler that actually compiles to machine code you can usually",
    "start": "357479",
    "end": "365240"
  },
  {
    "text": "do a thing with the command line of that compiler or with a disassembler or various ways to get out the actual",
    "start": "365240",
    "end": "371759"
  },
  {
    "text": "Assembly Language instructions uh that that compiler generated for your highle code okay and the problem is a lot of",
    "start": "371759",
    "end": "379800"
  },
  {
    "text": "times uh you just don't do that when you're programming normally even if you're someone who reads a semi language",
    "start": "379800",
    "end": "385120"
  },
  {
    "text": "fluently and would be interested to see a lot of times you just don't bother with that uh because it takes too long",
    "start": "385120",
    "end": "392039"
  },
  {
    "text": "to go through that process and it's annoying so this automates that process and more importantly because what you",
    "start": "392039",
    "end": "397800"
  },
  {
    "text": "can do like what I do a lot of times is I step through stuff in the de bugger and that lets me see the assembly Lage code very quickly but only for one",
    "start": "397800",
    "end": "404680"
  },
  {
    "text": "compiler and so what this tool lets you do is it lets you put in some source",
    "start": "404680",
    "end": "409840"
  },
  {
    "text": "code into a window and I'm sort of this this is the source code here this is a simple C program probably everyone could",
    "start": "409840",
    "end": "415840"
  },
  {
    "text": "read this it's it would be legible in every language basically right it's like I multiply two numbers together this is",
    "start": "415840",
    "end": "421280"
  },
  {
    "text": "just the default that comes up when you start godt you can put anything you want here and then over here you can add as",
    "start": "421280",
    "end": "427759"
  },
  {
    "text": "many I've created three Windows here which you can add as many windows as you want and pick compilers from a huge set",
    "start": "427759",
    "end": "434039"
  },
  {
    "text": "of compilers for various platforms like here I've got x86 64 GCC 14.2 then I've",
    "start": "434039",
    "end": "440720"
  },
  {
    "text": "got arm gcc1 14 I don't know why I picked one there I meant to pick two 14.2 here I've got R 64c 14.2 and it",
    "start": "440720",
    "end": "448199"
  },
  {
    "text": "shows me the assembly length language that's generated for each of these compilers and",
    "start": "448199",
    "end": "454080"
  },
  {
    "text": "platforms now this is just a great resource for people who want to",
    "start": "454080",
    "end": "459160"
  },
  {
    "text": "investigate this stuff because it's so fast right if I want to see like oh I just want to see what happens if I just",
    "start": "459160",
    "end": "464879"
  },
  {
    "text": "return them like instead of multiplying it takes a little bit but then it updates the other windows so it's like it's very Dynamic and it's like",
    "start": "464879",
    "end": "471720"
  },
  {
    "text": "especially if you were someone who's just learning a sem language it's pretty great because you can just put anything you want in that left window and quickly",
    "start": "471720",
    "end": "478759"
  },
  {
    "text": "read what it comes out to be in other you know in the other windows and it just helps you gain this intuition for",
    "start": "478759",
    "end": "484240"
  },
  {
    "text": "what's actually going on this is incredible I mean I've seen godbolt before and I've used godbolt but for",
    "start": "484240",
    "end": "489319"
  },
  {
    "text": "those that haven't used it first off I can't believe a man was named with the last name of godbolt like life is unfair",
    "start": "489319",
    "end": "494919"
  },
  {
    "text": "truly but then on top of it like this is such an amazing tool like the amount of time that I had to spend in 2005 looking",
    "start": "494919",
    "end": "501479"
  },
  {
    "text": "up stuff to understand what's happening during my education time it's just like man I wish I I wish I had this back then",
    "start": "501479",
    "end": "509240"
  },
  {
    "text": "oh and you know there's and there's way more features than I'm talking I'm only just briefly but there's tons more",
    "start": "509240",
    "end": "514440"
  },
  {
    "text": "features you know if I move over this it tells me what the instruction is right I mean it's like it's it's fantastic uh",
    "start": "514440",
    "end": "520839"
  },
  {
    "text": "and the amount of time like you just to your point that you would save if you were trying to learn about something",
    "start": "520839",
    "end": "527360"
  },
  {
    "text": "like this uh is it's just phenomenal so it's a fantastic tool everybody loves it everybody loves uh Matt for making it",
    "start": "527360",
    "end": "535320"
  },
  {
    "text": "and and here it is now uh the thing I would mention here again just for people who aren't",
    "start": "535320",
    "end": "541560"
  },
  {
    "text": "familiar with this is that you know why do we care about the Assembly Language code I'm going to show you some things",
    "start": "541560",
    "end": "547640"
  },
  {
    "text": "because we want to know about arm versus x64 so maybe that's one reason you care but more broadly why do we care about",
    "start": "547640",
    "end": "553560"
  },
  {
    "text": "assem language code well some people think we care about Assembly Language code because that there there are these uh you know uh ancient Wizards who still",
    "start": "553560",
    "end": "561760"
  },
  {
    "text": "program in Assembly Language right and that's the only people who care about AEM language and they think that you",
    "start": "561760",
    "end": "567920"
  },
  {
    "text": "know you see this come up sometimes in arguments where people are like you shouldn't use such and such a highle uh",
    "start": "567920",
    "end": "573360"
  },
  {
    "text": "feature because it it creates this really bad code or something and people are like yeah well why don't we just all program an assem language or something",
    "start": "573360",
    "end": "580200"
  },
  {
    "text": "yeah this is an Antiquated view it's it's just not how the world works anymore almost nobody programs an",
    "start": "580200",
    "end": "586880"
  },
  {
    "text": "Assembly Language there are a few times very specific times in very",
    "start": "586880",
    "end": "592800"
  },
  {
    "text": "specific circumstances or very specific domains of embedded programming or very speciic domains of optimization where",
    "start": "592800",
    "end": "599000"
  },
  {
    "text": "you have to program assem language it does still exist I don't want to say that it doesn't but the vast majority of",
    "start": "599000",
    "end": "606040"
  },
  {
    "text": "people who do performance work don't ever actually program in Assembly Language but what they pretty much all",
    "start": "606040",
    "end": "612880"
  },
  {
    "text": "do if they're good performance people is read Assembly Language and that's kind of the real disconnect I think people",
    "start": "612880",
    "end": "620000"
  },
  {
    "text": "have the reason why you learn Assembly Language today for almost everyone who learns it is not because you want to",
    "start": "620000",
    "end": "628200"
  },
  {
    "text": "write like in by hand the Assembly Language it's because you want to understand why something is happening or",
    "start": "628200",
    "end": "635200"
  },
  {
    "text": "you want to understand a weird performance thing that you've seen or the most common now because of the world",
    "start": "635200",
    "end": "642040"
  },
  {
    "text": "we live in security research you want to be able to disassemble things and see",
    "start": "642040",
    "end": "647560"
  },
  {
    "text": "what they're actually doing and you don't have the source code right that's another huge one that NE wouldn't have been a thing 20 years ago much right but",
    "start": "647560",
    "end": "654480"
  },
  {
    "text": "now very much so uh and so the reason that I think it's really important while when we go",
    "start": "654480",
    "end": "660880"
  },
  {
    "text": "through this exercise that people uh learn a semi language is because a it's very simple it's much simpler than your",
    "start": "660880",
    "end": "667399"
  },
  {
    "text": "highle language it's there it really can't do very much right it's a very basic low-level thing and two it is the",
    "start": "667399",
    "end": "674079"
  },
  {
    "text": "machine code that your Hardware executes so when you learn what it does you are learning how the machine actually works",
    "start": "674079",
    "end": "680279"
  },
  {
    "text": "which is not true of any highle language high level languages are always things that are you know some kind of",
    "start": "680279",
    "end": "685800"
  },
  {
    "text": "intermediate where you're then going to turn it into this machine code the Assembly Language by contrast is almost",
    "start": "685800",
    "end": "691839"
  },
  {
    "text": "one to one there's a little bit uh the machine code itself we can talk we're actually going to touch on that uh today",
    "start": "691839",
    "end": "698360"
  },
  {
    "text": "the machine code itself is is slight a slightly different thing in in con concept but it's more or less one to one",
    "start": "698360",
    "end": "703480"
  },
  {
    "text": "so if you see a particular Assembly Language listing you pretty much know exactly what the computer is going to do",
    "start": "703480",
    "end": "709320"
  },
  {
    "text": "with that there isn't really an additional step that you need to take so does that make good sense uh hopefully I've covered basically everything there",
    "start": "709320",
    "end": "715639"
  },
  {
    "text": "you didn't know to get started fantastic intro I think uh everybody salivating and ready uh I would it sounds like you",
    "start": "715639",
    "end": "723120"
  },
  {
    "text": "know if I were to put it in layman's terms it sounds like uh assembly is kind of like learning the alphabet like a e",
    "start": "723120",
    "end": "729760"
  },
  {
    "text": "and all these like the basic very basic yeah the phonics of everything very very basic it's the doing the high levels",
    "start": "729760",
    "end": "735959"
  },
  {
    "text": "like putting those together and creating vocabulary where a small set of sounds now has a very large semantic meaning",
    "start": "735959",
    "end": "742160"
  },
  {
    "text": "which can still be broken down into a bunch of small set of sounds not that it's like a great one for one uh but because you know the semantic meaning is",
    "start": "742160",
    "end": "748240"
  },
  {
    "text": "actually the important part the the sound effects but you get the idea but they're both important right and it's",
    "start": "748240",
    "end": "753639"
  },
  {
    "text": "like this is why you know we uh they they had they had times when they stopped teaching phonics in curriculums",
    "start": "753639",
    "end": "760880"
  },
  {
    "text": "across the country and and people had a really hard time reading and they they went back to phonics right there's a",
    "start": "760880",
    "end": "766920"
  },
  {
    "text": "reason why uh you know it's really good to have an understanding of what the computer's actually doing again not",
    "start": "766920",
    "end": "772800"
  },
  {
    "text": "because no one is saying especially not me I I almost never write a Assembly Language like like hand it in right but",
    "start": "772800",
    "end": "780240"
  },
  {
    "text": "I'm constantly reading it because it just it keeps me informed of what the computer's actually doing and it also",
    "start": "780240",
    "end": "786480"
  },
  {
    "text": "unlocks all these other things for you because once you know the Assembly Language you can do things like read a CPU diagram because CPU diagrams are",
    "start": "786480",
    "end": "792959"
  },
  {
    "text": "telling you how the assembly is executed right they're not telling you how C is executed they're not telling you how",
    "start": "792959",
    "end": "798160"
  },
  {
    "text": "python is executed they're telling you how Assembly Language is executed because that's what the the CPU gets and",
    "start": "798160",
    "end": "804120"
  },
  {
    "text": "so it also unlocks all this other knowledge for you that you really can't have it's meaningless uh if you don't",
    "start": "804120",
    "end": "810160"
  },
  {
    "text": "know the assembly because you simply won't understand what that diagram is meant to tell you so amazing so anyway",
    "start": "810160",
    "end": "815440"
  },
  {
    "text": "okay so if we take a look at a tool like this which again thank you to M godbolt for making such a cool thing and putting",
    "start": "815440",
    "end": "820920"
  },
  {
    "text": "it online where it's easy for everyone to access you don't to install anything you just pop on there uh what I wanted",
    "start": "820920",
    "end": "826959"
  },
  {
    "text": "to show was just some basic ideas about what the difference between these two uh uh instruction sets are so that people",
    "start": "826959",
    "end": "834680"
  },
  {
    "text": "kind of know what we're talking about because when we talk about arm there's multiple things that you have to",
    "start": "834680",
    "end": "839800"
  },
  {
    "text": "consider and when people say arm versus x64 or x86 which they probably mean x86",
    "start": "839800",
    "end": "846519"
  },
  {
    "text": "64 which is the 64-bit version of x86 remember their legacy versions by the",
    "start": "846519",
    "end": "851600"
  },
  {
    "text": "same token when people say arm these days they probably mean arm 64 which is the most modern one not arm 32 although",
    "start": "851600",
    "end": "858880"
  },
  {
    "text": "that is still in use because you may have 32-bit processors and like low power embedded whatever um so again",
    "start": "858880",
    "end": "865600"
  },
  {
    "text": "these instruction sets come in various flavors we're not going to talk too much about about that now because it's not that important but you have to remember",
    "start": "865600",
    "end": "872120"
  },
  {
    "text": "that you know when people say arm or X6 86 or x64 there's a kind of a those are",
    "start": "872120",
    "end": "877240"
  },
  {
    "text": "umbrella terms and if you really want to talk specifics you have to sort of pick some things but suffice to say when we",
    "start": "877240",
    "end": "884480"
  },
  {
    "text": "talk about those things we're talking about uh what's called an Isa instruction set architecture which is",
    "start": "884480",
    "end": "889600"
  },
  {
    "text": "basically a series of definitions of what machine code does it's like if you",
    "start": "889600",
    "end": "895279"
  },
  {
    "text": "put these bits in memory and tell the CPU to execute them what will will the CPU do right and there's additional",
    "start": "895279",
    "end": "902000"
  },
  {
    "text": "things on top of that things like you know uh how exactly are you going to handle uh you know when you're talking",
    "start": "902000",
    "end": "908600"
  },
  {
    "text": "about how these things will Ex you it's not just oh what does this math operation do like what does AD do it's",
    "start": "908600",
    "end": "914120"
  },
  {
    "text": "also going to be things like how is the security handled like are there different modes the processor can be in",
    "start": "914120",
    "end": "919560"
  },
  {
    "text": "where if you're in this mode you cannot access these instructions because those are high security instructions only the",
    "start": "919560",
    "end": "924880"
  },
  {
    "text": "colonel should have access to them all of that stuff is contained in this idea of an an Isa instruction set",
    "start": "924880",
    "end": "930920"
  },
  {
    "text": "architecture or Isa so when people talk about that they're talking about this broad specification that talks about how",
    "start": "930920",
    "end": "936480"
  },
  {
    "text": "the instruction set works and all of the things that go with the instruction set like the security model and the memory",
    "start": "936480",
    "end": "942040"
  },
  {
    "text": "models and all of these things but that's what you mean when you say arm",
    "start": "942040",
    "end": "947319"
  },
  {
    "text": "because you're not and the same with when you say x64 or x86 you're not",
    "start": "947319",
    "end": "952600"
  },
  {
    "text": "talking about a particular processor and that's very important Intel and AMD have",
    "start": "952600",
    "end": "958160"
  },
  {
    "text": "completely different processor architectures so they're using the same Isa for the most part although they each",
    "start": "958160",
    "end": "964000"
  },
  {
    "text": "have maybe some slightly different extensions that maybe only are on their platforms but for the most part they're using the same thing but they have",
    "start": "964000",
    "end": "970880"
  },
  {
    "text": "completely different Hardware implementations important to remember that the same is true for arm when we",
    "start": "970880",
    "end": "976560"
  },
  {
    "text": "talk about some processor from Qualcomm versus a pro like you know like a Snapdragon processor that might be in",
    "start": "976560",
    "end": "982839"
  },
  {
    "text": "your phone or we talk about an apple M series processor which might be in your laptop these are completely different",
    "start": "982839",
    "end": "989000"
  },
  {
    "text": "architectures right and although they might share some DNA sometimes because sometimes sometimes there's Hardware",
    "start": "989000",
    "end": "995040"
  },
  {
    "text": "Architects that have worked on both of them so even though they you know yeah they're completely different in the arm",
    "start": "995040",
    "end": "1001000"
  },
  {
    "text": "World there may be a little bit more commonality and the reason for that is because you can like when you license",
    "start": "1001000",
    "end": "1007199"
  },
  {
    "text": "arm from arm you also get a bunch of reference designs with that and you may",
    "start": "1007199",
    "end": "1012720"
  },
  {
    "text": "choose to use some of that reference design when you are making your chip you don't have to but might right and so",
    "start": "1012720",
    "end": "1020560"
  },
  {
    "text": "there also is a little maybe more shared DNA amongst armed things because even the hardware itself you're getting some",
    "start": "1020560",
    "end": "1027038"
  },
  {
    "text": "of that when you license arm you're not just getting a document that says here's how the instructions work so that's what",
    "start": "1027039",
    "end": "1032400"
  },
  {
    "text": "we're talking about okay this good great precursor by the way now now I feel like we're ready we're",
    "start": "1032400",
    "end": "1038400"
  },
  {
    "text": "engaged I'm sorry for so much warmup I just want to make sure everyone knows it's the perfect amount of for we're",
    "start": "1038400",
    "end": "1043760"
  },
  {
    "text": "ready you can edit it out uh so uh so when we look at",
    "start": "1043760",
    "end": "1049799"
  },
  {
    "text": "something like this what I want to show you is when we're talking about these two different things we're really just",
    "start": "1049799",
    "end": "1055280"
  },
  {
    "text": "talking about some differences in how we are putting binary like actual data into",
    "start": "1055280",
    "end": "1060720"
  },
  {
    "text": "the computer for it to execute that's what we mean and so when people make claims like arm is better for low",
    "start": "1060720",
    "end": "1067799"
  },
  {
    "text": "power what they mean or have to mean maybe they're not intending to but this is what they have to mean they mean that",
    "start": "1067799",
    "end": "1074520"
  },
  {
    "text": "literally this way of specifying the bits that control your CPU allows you to",
    "start": "1074520",
    "end": "1081280"
  },
  {
    "text": "make a lower power device because short of that the it's a nonsense statement",
    "start": "1081280",
    "end": "1087200"
  },
  {
    "text": "because the only thing that defines arm and the only thing that Des defines x86 or",
    "start": "1087200",
    "end": "1092640"
  },
  {
    "text": "x64 is that encoding that's what you mean so there can't be it's not talking",
    "start": "1092640",
    "end": "1098640"
  },
  {
    "text": "about a particular chip or a particular way of doing something in Hardware it's really important to remember that so",
    "start": "1098640",
    "end": "1104080"
  },
  {
    "text": "let's take a look at what's going on here here over here we have some source code this is just the default that comes",
    "start": "1104080",
    "end": "1109200"
  },
  {
    "text": "up uh when you start uh when you start godbolt it happens to be the square thing I deleted the times numb earlier",
    "start": "1109200",
    "end": "1116039"
  },
  {
    "text": "as you saw me do uh to show it change but what you can see over here is we've now created uh the assem language over",
    "start": "1116039",
    "end": "1122640"
  },
  {
    "text": "here godbolt made it for us directly you can see here we just have a function it's supposed to return a number and it",
    "start": "1122640",
    "end": "1128280"
  },
  {
    "text": "takes a number right and it the only thing this does is return that number doesn't do any operations on the number",
    "start": "1128280",
    "end": "1135240"
  },
  {
    "text": "what we can see over here is that you get some code for what happens in uh in",
    "start": "1135240",
    "end": "1140840"
  },
  {
    "text": "in these different uh platforms and really the differences are incredibly minor they're so minor in fact that the",
    "start": "1140840",
    "end": "1147640"
  },
  {
    "text": "only reason that you see a difference at all is because of the particular platform that this is compiling on there's a thing called an ABI that",
    "start": "1147640",
    "end": "1153960"
  },
  {
    "text": "defines how variables are passed and things like that but for the most part you see there's almost no difference between them and specifically what we",
    "start": "1153960",
    "end": "1160559"
  },
  {
    "text": "have as the last instruction there's always a thing that's basically a return right it's it's essentially encoding",
    "start": "1160559",
    "end": "1167080"
  },
  {
    "text": "exactly what this does which is return back to the to the function that called me right so you can see this R here is",
    "start": "1167080",
    "end": "1173440"
  },
  {
    "text": "that this BX LR this is actually branched to this the return register basically which is the thing that holds",
    "start": "1173440",
    "end": "1178960"
  },
  {
    "text": "the the address that you came from so it's effectively a return and this in arm 64 there actually is just a return",
    "start": "1178960",
    "end": "1184320"
  },
  {
    "text": "instruction again so you see that's all the same here and the only code that exists at all uh that actually does",
    "start": "1184320",
    "end": "1190559"
  },
  {
    "text": "anything is here in this uh XA 8664 version where it has to move the",
    "start": "1190559",
    "end": "1196520"
  },
  {
    "text": "location this EDI is actually where the input parameter will come in and this",
    "start": "1196520",
    "end": "1201760"
  },
  {
    "text": "eax is where the return value goes out just purely by convention that is what",
    "start": "1201760",
    "end": "1207880"
  },
  {
    "text": "this platform defines and so it will do that move before doing the r just so you",
    "start": "1207880",
    "end": "1213919"
  },
  {
    "text": "get the the input parameter past as the output that's it doesn't the other ones do a like the other ones have to do",
    "start": "1213919",
    "end": "1219919"
  },
  {
    "text": "something similar anyways is BX kind of or BX in the next column over in the arm",
    "start": "1219919",
    "end": "1225200"
  },
  {
    "text": "32 isn't that kind of interpreted the same way I don't forget my language if I'm using the wrong language because",
    "start": "1225200",
    "end": "1230640"
  },
  {
    "text": "something has to say this parameter now goes in the return slot I assume it has to be copied",
    "start": "1230640",
    "end": "1236400"
  },
  {
    "text": "somewhere it does not and the reason for that is because uh so yeah uh in in",
    "start": "1236400",
    "end": "1242360"
  },
  {
    "text": "keeping with our streams I'm just going I'll go down all kinds of rabbit hole I'll just ask questions that I find very",
    "start": "1242360",
    "end": "1248600"
  },
  {
    "text": "intriguing because I would just assume something has to say this is the return value okay so there's an additional",
    "start": "1248600",
    "end": "1254000"
  },
  {
    "text": "thing that layers on top of this and that is what's called an ABI or application binary interface this has",
    "start": "1254000",
    "end": "1260159"
  },
  {
    "text": "nothing to do with arm and it has nothing to do with X 8664 what it has to do with is which",
    "start": "1260159",
    "end": "1266240"
  },
  {
    "text": "operating system you're on each one of these is implicitly on an operating",
    "start": "1266240",
    "end": "1272159"
  },
  {
    "text": "system we know that GCC is native to Linux so I believe this will just be I",
    "start": "1272159",
    "end": "1277640"
  },
  {
    "text": "don't think you have to specify anything in godbolt it's just going to assume Linux basically and the Linux ABI what",
    "start": "1277640",
    "end": "1285159"
  },
  {
    "text": "this application binary interface specifies is things like when you call a function and I guess I should mention",
    "start": "1285159",
    "end": "1291279"
  },
  {
    "text": "just before that there's no such thing as parameter passing in Assembly",
    "start": "1291279",
    "end": "1297000"
  },
  {
    "text": "Language or to your CPU the the concept of passing",
    "start": "1297000",
    "end": "1302480"
  },
  {
    "text": "parameters is entirely something that is native to the actual uh the definition",
    "start": "1302480",
    "end": "1309279"
  },
  {
    "text": "of a particular like uh environment that you're programming in and so what",
    "start": "1309279",
    "end": "1314360"
  },
  {
    "text": "happens is when you have a platform like Linux or Windows they or Mac for that matter they Define something called an",
    "start": "1314360",
    "end": "1320480"
  },
  {
    "text": "ABI or application binary interface and what that says is look if you have a function and you're trying to implement",
    "start": "1320480",
    "end": "1326960"
  },
  {
    "text": "a function compile a function down to machine code here are the rules for where the",
    "start": "1326960",
    "end": "1333919"
  },
  {
    "text": "parameters go so again we don't need to get too far into the Weeds on how AEM",
    "start": "1333919",
    "end": "1340360"
  },
  {
    "text": "language works but basically these are things called registers registers are names that we give to slots effectively",
    "start": "1340360",
    "end": "1347159"
  },
  {
    "text": "uh logical slots that we're using for programming in Assembly Language so you",
    "start": "1347159",
    "end": "1352240"
  },
  {
    "text": "know I'll just give an anatomy of an instruction this is called the pneumonic for the instruction and it basically says what the instruction is going to",
    "start": "1352240",
    "end": "1358640"
  },
  {
    "text": "doov is just the pneumonic meaning the the word name we give to a particular binary encoding that will tell the CPU",
    "start": "1358640",
    "end": "1365279"
  },
  {
    "text": "to move something from one place to another mov makes sense right then it has two things which are the two uh",
    "start": "1365279",
    "end": "1371840"
  },
  {
    "text": "operands for that instruction and in this case they're going to be this is the destination the destination comes",
    "start": "1371840",
    "end": "1378159"
  },
  {
    "text": "first you can think of equals it being the same the left side is the thing that gets the value the right side is the",
    "start": "1378159",
    "end": "1383559"
  },
  {
    "text": "thing that gives the value can I interrupt one quick second please you told me what EA eax meant months ago I'm",
    "start": "1383559",
    "end": "1389440"
  },
  {
    "text": "going to see if I can remember what it is e is for extended a is the first register and",
    "start": "1389440",
    "end": "1395559"
  },
  {
    "text": "E well no X is like the extended first register it's like a second set of registers because there's a b c d and",
    "start": "1395559",
    "end": "1401360"
  },
  {
    "text": "then ax a BX CX DX do I remember this correctly I I I know the E is extended I",
    "start": "1401360",
    "end": "1406600"
  },
  {
    "text": "know I'm close but I'm not horses very very close uh so what it is",
    "start": "1406600",
    "end": "1412919"
  },
  {
    "text": "is just you you were right you just thought you needed a second thing but there is no second thing because this is",
    "start": "1412919",
    "end": "1418559"
  },
  {
    "text": "Intel and they've gone through so many revisions of this architecture the",
    "start": "1418559",
    "end": "1423600"
  },
  {
    "text": "original register was a before x86 yep the original register was a then when",
    "start": "1423600",
    "end": "1431080"
  },
  {
    "text": "x86 came along it went from 8 bit to 16 bit they added the X if you're talking about the 16bit version of the register",
    "start": "1431080",
    "end": "1438320"
  },
  {
    "text": "right right so that's ax hold on one second hold on one second I got a little no",
    "start": "1438320",
    "end": "1444159"
  },
  {
    "text": "problem I got a C kid I don't know what's happening hold on you",
    "start": "1444159",
    "end": "1450519"
  },
  {
    "text": "can you can entertain them for a second",
    "start": "1450600",
    "end": "1457120"
  },
  {
    "text": "okay I guess I don't know I don't want to not answer uh Prime's question well here's what I'll say I'll just continue",
    "start": "1458760",
    "end": "1464760"
  },
  {
    "text": "the explanation of this instruction so you can know so what what happens is there are no such things really as",
    "start": "1464760",
    "end": "1471159"
  },
  {
    "text": "variable names in something like Assembly Language because the CPU is programmed with a fixed number of like",
    "start": "1471159",
    "end": "1476520"
  },
  {
    "text": "names for things that's just how Isis are are defined and so when you talk",
    "start": "1476520",
    "end": "1482399"
  },
  {
    "text": "about variable names you only get the ones they give you and so in you know in",
    "start": "1482399",
    "end": "1487679"
  },
  {
    "text": "a more sane time they'd just be called R zero R1 R2 R3 R4 R5 right through uh",
    "start": "1487679",
    "end": "1494000"
  },
  {
    "text": "however many the processor had but because of Legacy reasons they often have weird naming schemes that don't line up exactly that way so the register",
    "start": "1494000",
    "end": "1501679"
  },
  {
    "text": "names are just EDI here and eax here and again some of that naming is just telling you whether they're 32bit or",
    "start": "1501679",
    "end": "1507520"
  },
  {
    "text": "16bit and things like that and again a bunch of details that would be worth going into if we were trying to learn",
    "start": "1507520",
    "end": "1512840"
  },
  {
    "text": "Assembly Language here but if we're just trying to gain the the general uh knowledge of what's the difference between x64 and arm we don't need to go",
    "start": "1512840",
    "end": "1519679"
  },
  {
    "text": "down that rat hole so we can just think of it as look there are these names for for sort of logical slots that we're",
    "start": "1519679",
    "end": "1525679"
  },
  {
    "text": "programming with we can move things between them we can do oper ations on them and these are some of those names the names differ between instruction set",
    "start": "1525679",
    "end": "1532679"
  },
  {
    "text": "architectures obviously uh because x64 has different you know randomly ended up",
    "start": "1532679",
    "end": "1538480"
  },
  {
    "text": "with different names for their registers then arm and so you can see arm here for example has this LR register that is not",
    "start": "1538480",
    "end": "1544320"
  },
  {
    "text": "a register that exists on an Intel uh assim in Intel assim langage you couldn't use that name to refer to",
    "start": "1544320",
    "end": "1549600"
  },
  {
    "text": "something so you get some differences in naming but they mean the same basic things and sometimes like in this case",
    "start": "1549600",
    "end": "1555600"
  },
  {
    "text": "sometimes the registers have specific dedicated purposes where you're usually using it for one",
    "start": "1555600",
    "end": "1560679"
  },
  {
    "text": "specific thing and in this case the LR is like specifically for holding the",
    "start": "1560679",
    "end": "1565799"
  },
  {
    "text": "address of whoever called you so that is why it's kind of got an uh you know a",
    "start": "1565799",
    "end": "1571000"
  },
  {
    "text": "more specific name I don't think godbolt it doesn't look like godbolt can explain that part to you uh it doesn't seem to",
    "start": "1571000",
    "end": "1576440"
  },
  {
    "text": "explain register name so it it does like I said give you if you hover over these you can find that out but if you want to",
    "start": "1576440",
    "end": "1582399"
  },
  {
    "text": "know more about the different registers you have to look at actual uh the actual architecture manuals but uh sorry is",
    "start": "1582399",
    "end": "1587760"
  },
  {
    "text": "prime back I am I'm back hey I didn't want to interrupt you there sorry about that I you know no problem my wife's off",
    "start": "1587760",
    "end": "1593360"
  },
  {
    "text": "running some stuff and we it's a holiday so kids are at home and my youngest mother was told that something was going",
    "start": "1593360",
    "end": "1598799"
  },
  {
    "text": "to get flushed down the toilet or something like that and she was just freaked out that the cat was going to go down the toilet I don't know what",
    "start": "1598799",
    "end": "1604559"
  },
  {
    "text": "happened my kids are playing a joke and so the three-year-old takes it literally and that's very reasonable it's reasonable yeah so anyway uh after all",
    "start": "1604559",
    "end": "1613520"
  },
  {
    "text": "that uh basically so what I was saying before uh you you left Prime was that",
    "start": "1613520",
    "end": "1618640"
  },
  {
    "text": "the the eax is like you're very close to the name it's just the extension of the registers out to more bits okay a was a",
    "start": "1618640",
    "end": "1626360"
  },
  {
    "text": "was 8 bit ax and then it exess to Al ah the two high and low part then it was ax",
    "start": "1626360",
    "end": "1632120"
  },
  {
    "text": "for 16bit eax for 32bit and it it went to Rax for 64 bit in fact y uh I don't",
    "start": "1632120",
    "end": "1638000"
  },
  {
    "text": "know if you could you could probably I could probably show you that here if we uh oops typing day um if we uh try to",
    "start": "1638000",
    "end": "1645799"
  },
  {
    "text": "get like a un 64 like a 64-bit integer here uh where I'm going to",
    "start": "1645799",
    "end": "1653080"
  },
  {
    "text": "return something 64 bits uh then it has to do a larger move and you can see it",
    "start": "1653080",
    "end": "1658480"
  },
  {
    "text": "just changed the prefixes to R right same exact code but just doing it with 64 bits now right whereas if I had if",
    "start": "1658480",
    "end": "1665640"
  },
  {
    "text": "these are 32-bit then I'm going to get the the E version right um and that's just yeah",
    "start": "1665640",
    "end": "1674640"
  },
  {
    "text": "that's all that's all that is so there you go awesome okay so as I was saying ABI is",
    "start": "1674640",
    "end": "1685159"
  },
  {
    "text": "the reason why you have this difference and so what what is what you're seeing fall out here is that in the X 8664 ABI",
    "start": "1685159",
    "end": "1693960"
  },
  {
    "text": "for what I would believe would be Linux in this case uh it basically says that the first input parameter is going to go",
    "start": "1693960",
    "end": "1700880"
  },
  {
    "text": "into the EDI register but the first return value is going to go in eax",
    "start": "1700880",
    "end": "1707880"
  },
  {
    "text": "that's how it will work right so when you call a function if you happen to",
    "start": "1707880",
    "end": "1713240"
  },
  {
    "text": "want to return your first parameter you have to do a move to Move It from the register name that's going",
    "start": "1713240",
    "end": "1720200"
  },
  {
    "text": "to contain the par first parameter to the register name that's going to be the return value in arm the first return",
    "start": "1720200",
    "end": "1728760"
  },
  {
    "text": "value is also the first parameter value so it doesn't have to move it now I can",
    "start": "1728760",
    "end": "1733919"
  },
  {
    "text": "demonstrate this by introducing a second variable right so now we have a num and a num two",
    "start": "1733919",
    "end": "1740799"
  },
  {
    "text": "I'm sorry it wraps here but we're trying to fit a lot a large right um so if I",
    "start": "1740799",
    "end": "1747120"
  },
  {
    "text": "were to switch from returning num one which is that first slot to returning num two then you can see that arm has to",
    "start": "1747120",
    "end": "1753880"
  },
  {
    "text": "do the same thing see it now has to move the second parameter will go in in this",
    "start": "1753880",
    "end": "1759559"
  },
  {
    "text": "R1 right but the return value has to go in r0 or w0 in this case that's again",
    "start": "1759559",
    "end": "1764960"
  },
  {
    "text": "because of the 32-bit nature you can actually see that will change if I if I do a 64 here this is again arm has the",
    "start": "1764960",
    "end": "1771799"
  },
  {
    "text": "exact same thing going on as Intel you can see those change to X right yep that",
    "start": "1771799",
    "end": "1777320"
  },
  {
    "text": "makes sense uh so there's a lot of stuff like that I guess is what I'd say and that's",
    "start": "1777320",
    "end": "1783000"
  },
  {
    "text": "not really a difference at all in the instruction in fact you saw arm have to do the exact same thing here when we add",
    "start": "1783000",
    "end": "1788120"
  },
  {
    "text": "a second parameter now they're exactly the same right first they have to do a move to move the parameter into the",
    "start": "1788120",
    "end": "1794279"
  },
  {
    "text": "return because they're in different places and then they do their return exact exactly the same right yep okay so",
    "start": "1794279",
    "end": "1802320"
  },
  {
    "text": "let's talk about the um we'll talk about some other differences in a second because there are other differences uh",
    "start": "1802320",
    "end": "1808760"
  },
  {
    "text": "but what I want to talk about first is just the difference that probably makes the",
    "start": "1808760",
    "end": "1813799"
  },
  {
    "text": "most uh or has the most impact if you will on Hardware design in in any",
    "start": "1813799",
    "end": "1819960"
  },
  {
    "text": "meaningful way and it's something that you can't even see if all you're doing",
    "start": "1819960",
    "end": "1825799"
  },
  {
    "text": "is looking at the basic godbold output because like I said when you look at",
    "start": "1825799",
    "end": "1831120"
  },
  {
    "text": "these they look basically the same now so you know if you didn't know anything",
    "start": "1831120",
    "end": "1837320"
  },
  {
    "text": "further about what was going on behind the scenes and you looked at these you would be like I don't even understand",
    "start": "1837320",
    "end": "1843279"
  },
  {
    "text": "why people are saying there's a difference between arm and Intel they look exactly the same right",
    "start": "1843279",
    "end": "1849080"
  },
  {
    "text": "yeah but there is one really big difference even to this day and that is if I turn on in godbolt here this thing",
    "start": "1849080",
    "end": "1855960"
  },
  {
    "text": "called compil to Binary object uh what that does is it actually",
    "start": "1855960",
    "end": "1861679"
  },
  {
    "text": "produces the the actual machine code doesn't produce just the assembly it produces the actual machine code that",
    "start": "1861679",
    "end": "1867240"
  },
  {
    "text": "you would like literally put in your executable right um and what it will",
    "start": "1867240",
    "end": "1873200"
  },
  {
    "text": "show when we do that is above each instruction it will show literally the",
    "start": "1873200",
    "end": "1879760"
  },
  {
    "text": "binary that will get sent to the CPU like the actual bits that are in memory",
    "start": "1879760",
    "end": "1885440"
  },
  {
    "text": "that that comprise the code right that that that that are this code and what you can see here even just",
    "start": "1885440",
    "end": "1893120"
  },
  {
    "text": "with this I mean this is not even code right Prime I mean it's like it's not even doing an operation at all but even",
    "start": "1893120",
    "end": "1901080"
  },
  {
    "text": "so we can see a massive difference between these two if we look at the",
    "start": "1901080",
    "end": "1906760"
  },
  {
    "text": "binary that's actually generated so if we start with Intel",
    "start": "1906760",
    "end": "1912720"
  },
  {
    "text": "right the old oldest most venerable architecture that we have um you can see",
    "start": "1912720",
    "end": "1918799"
  },
  {
    "text": "something very striking the binary is not the same length for each instruction",
    "start": "1918799",
    "end": "1926039"
  },
  {
    "text": "right so for those of you who read heximal you know that each heximal is",
    "start": "1926039",
    "end": "1931919"
  },
  {
    "text": "four bits so any two heximal digits is one byte there are two of those here so",
    "start": "1931919",
    "end": "1939399"
  },
  {
    "text": "this right here is a TW byte instruction it's encoded as two bytes does that make",
    "start": "1939399",
    "end": "1946120"
  },
  {
    "text": "sense yes yes sorry I was shaking my head assuming it's yes I'm looking at the other screen so",
    "start": "1946120",
    "end": "1953399"
  },
  {
    "text": "I'm only going by Audio okay uh yeah whereas the return instruction even",
    "start": "1953399",
    "end": "1959200"
  },
  {
    "text": "simpler it's one bite it only takes one bite to encode that return instruction",
    "start": "1959200",
    "end": "1965720"
  },
  {
    "text": "right so what you can see there is very compact encoding and also variable",
    "start": "1965720",
    "end": "1972960"
  },
  {
    "text": "length we don't know like without knowing what the instruction is if if I",
    "start": "1972960",
    "end": "1978000"
  },
  {
    "text": "were to just ask you prime how many bytes does it take to encode an x64 instruction the only answer you can give",
    "start": "1978000",
    "end": "1984919"
  },
  {
    "text": "me is I don't know you have to tell me the instruction first right that's very that's this is going in a very",
    "start": "1984919",
    "end": "1990559"
  },
  {
    "text": "interesting Direction okay I was I was about to say I noticed that the other side the other two seem to be the same",
    "start": "1990559",
    "end": "1995960"
  },
  {
    "text": "length oh yes proportional to the architecture that they're on yes it is",
    "start": "1995960",
    "end": "2001519"
  },
  {
    "text": "okay and so uh if we take a look at what happens when we are compiling in other",
    "start": "2001519",
    "end": "2008919"
  },
  {
    "text": "uh in arm for example right uh what we can see is that there",
    "start": "2008919",
    "end": "2014039"
  },
  {
    "text": "are two different instruction en coding sizes depending on whether we picked arm or arm 64 here for GCC and part of that",
    "start": "2014039",
    "end": "2019679"
  },
  {
    "text": "is because arm also defines this thing called thumb which is a 16 bit as opposed to a 30- bit instruction you",
    "start": "2019679",
    "end": "2025919"
  },
  {
    "text": "actually could I believe Force this to have generated 32-bit instructions if you'd wanted to but that's kind of",
    "start": "2025919",
    "end": "2031440"
  },
  {
    "text": "neither here nor there and getting way into the weed so we're going to skip that for now and I'll simply point out",
    "start": "2031440",
    "end": "2036480"
  },
  {
    "text": "no matter which one of these you pick what you will notice is the instructions",
    "start": "2036480",
    "end": "2041519"
  },
  {
    "text": "are very regular now although they do have random gobbl here in the sense that",
    "start": "2041519",
    "end": "2047600"
  },
  {
    "text": "if you don't know how these instructions are encoded these are just going to look like a big old uh garbage set of digits",
    "start": "2047600",
    "end": "2053358"
  },
  {
    "text": "right you can easily tell even without knowing anything else that they are exactly the same size in each case",
    "start": "2053359",
    "end": "2060560"
  },
  {
    "text": "instructions are not differing in how big they are and in general with the exception of the fact that like I said",
    "start": "2060560",
    "end": "2066398"
  },
  {
    "text": "there's a thing called thumb you can use used for compression where different segments of your code can when you do a",
    "start": "2066399",
    "end": "2072079"
  },
  {
    "text": "when you do a branch you can say whether you want it to be encoded as 32-bit instructions or 16 bit instructions so there is a little bit of variability in",
    "start": "2072079",
    "end": "2078520"
  },
  {
    "text": "arm there is no such thing as this like uber flexible",
    "start": "2078520",
    "end": "2084560"
  },
  {
    "text": "format and I just want to underscore this a little bit by adding one more thing to the mix for example so let me",
    "start": "2084560",
    "end": "2091118"
  },
  {
    "text": "go ahead and change our first parameter uh into an array here effectively now if",
    "start": "2091119",
    "end": "2096599"
  },
  {
    "text": "you don't know C syntax you may not know what this means uh this is just a pointer but we don't care about that",
    "start": "2096599",
    "end": "2101920"
  },
  {
    "text": "just think of this as an array so something that we can uh access by element right and so let's suppose I",
    "start": "2101920",
    "end": "2107760"
  },
  {
    "text": "wanted to add these two together uh and I'm going to go ahead and well you know what let me let me simplify just just to",
    "start": "2107760",
    "end": "2113520"
  },
  {
    "text": "not do too many changes at once first I'll just add uh just an INT here and we can we can get rid of these types because we don't care about that anymore",
    "start": "2113520",
    "end": "2119240"
  },
  {
    "text": "so we'll just use you know basic whatever the default integer is we're just going to add two numbers together",
    "start": "2119240",
    "end": "2124480"
  },
  {
    "text": "right that's all we're going to do here uh and what you see here and unfortunately uh this this compiler is",
    "start": "2124480",
    "end": "2130560"
  },
  {
    "text": "getting pretty creative on us and using a shorthand Syntax for addition what you can see on the arm side is is pretty basic we're just going to have an ad",
    "start": "2130560",
    "end": "2136800"
  },
  {
    "text": "instruction this is an ad instruction but it's kind of a creative format for the ad instruction that puts the ad in",
    "start": "2136800",
    "end": "2142400"
  },
  {
    "text": "here but effectively it is doing the same basic operation and that's fine etc",
    "start": "2142400",
    "end": "2147599"
  },
  {
    "text": "etc all I wanted to show was we can make these bytes get longer up here now we've",
    "start": "2147599",
    "end": "2153440"
  },
  {
    "text": "got a three bite instruction right one two three four we only had two so it",
    "start": "2153440",
    "end": "2158640"
  },
  {
    "text": "gets longer and longer right maybe now I've got um I do want let's say I want",
    "start": "2158640",
    "end": "2163960"
  },
  {
    "text": "to change this one uh to an array like I said and I want to access uh you know some part of it right uh we can make",
    "start": "2163960",
    "end": "2172119"
  },
  {
    "text": "this even longer right if you can see it grows and grows and grows right and so",
    "start": "2172119",
    "end": "2178760"
  },
  {
    "text": "the x64 instruction set no matter what I do I'm never G to get longer than 32",
    "start": "2178760",
    "end": "2185440"
  },
  {
    "text": "bits over here for the most part right like in general it's just going to add more instructions when it needs to do",
    "start": "2185440",
    "end": "2192359"
  },
  {
    "text": "something but Intel has this sort of flexible format where it can do a bunch of weird stuff where it can just make",
    "start": "2192359",
    "end": "2200079"
  },
  {
    "text": "the instruction arbitrarily longer if it needs to and you'll pack more into a",
    "start": "2200079",
    "end": "2206359"
  },
  {
    "text": "single op operation if that makes sense so that is a very big difference between",
    "start": "2206359",
    "end": "2214520"
  },
  {
    "text": "these two now again and I'm happy this happened so I can actually pointed out you can see there are some circumstances",
    "start": "2214520",
    "end": "2220319"
  },
  {
    "text": "where you have two of something right in this case you can see this was encoded",
    "start": "2220319",
    "end": "2225440"
  },
  {
    "text": "as two things like it was two pair it was 16 and 16 right so there are",
    "start": "2225440",
    "end": "2231920"
  },
  {
    "text": "sometimes an arm where you can say I'm going to take two instructions to encode one basically if that makes sense but",
    "start": "2231920",
    "end": "2237760"
  },
  {
    "text": "it's still highly highly regular there's none of this like this one's six bytes",
    "start": "2237760",
    "end": "2243520"
  },
  {
    "text": "this one's two and this one's one nothing like that really happened in arm for the most part right not at that",
    "start": "2243520",
    "end": "2250079"
  },
  {
    "text": "level of granularity and so why is why do I say this is the biggest difference that",
    "start": "2250079",
    "end": "2256680"
  },
  {
    "text": "actually matters at the hardware level well the reason that this matters so much is because if you think about what",
    "start": "2256680",
    "end": "2263280"
  },
  {
    "text": "happens here with this imagine you're the CPU and you're trying to execute these",
    "start": "2263280",
    "end": "2269760"
  },
  {
    "text": "instructions you have no way of knowing like literally you have no way of",
    "start": "2269760",
    "end": "2275720"
  },
  {
    "text": "knowing when you're on a instruction where the next instruction is right you",
    "start": "2275720",
    "end": "2281640"
  },
  {
    "text": "have no idea because until you actually parse this instruction it is it's",
    "start": "2281640",
    "end": "2287800"
  },
  {
    "text": "parsing right like it's like it's like you were handed a text file that had like you're trying to parse identifiers a text file it's got some number of",
    "start": "2287800",
    "end": "2294640"
  },
  {
    "text": "characters makes this identifier you don't know where the next token in that input stream is until you count how many",
    "start": "2294640",
    "end": "2300440"
  },
  {
    "text": "characters follow each other and find a space right well the same thing is going on here the instruction encoding defines",
    "start": "2300440",
    "end": "2307640"
  },
  {
    "text": "bu of things like oh if this bit is set then read another bite right and so the",
    "start": "2307640",
    "end": "2314079"
  },
  {
    "text": "processor has to actually parse each instruction completely before it knows",
    "start": "2314079",
    "end": "2320720"
  },
  {
    "text": "for sure where the next instruction is so does it have some sort of like Peak",
    "start": "2320720",
    "end": "2325760"
  },
  {
    "text": "kind of like a like whenever you're doing tokenizing in a compiler something similar to that where you're like or",
    "start": "2325760",
    "end": "2331040"
  },
  {
    "text": "does it know by the very nature of the instructions that this one's the last one or does it have to peek at the next one no it's not there's nothing left in",
    "start": "2331040",
    "end": "2338480"
  },
  {
    "text": "it so the way that this actually ends up working in in uh practice now is even",
    "start": "2338480",
    "end": "2345680"
  },
  {
    "text": "more wild than what you would think of as happening in a normal parser what these CPUs need to be able",
    "start": "2345680",
    "end": "2352839"
  },
  {
    "text": "to do uh and we kind of talked I think we may have mentioned the concept of in IPC once on your stream I don't remember",
    "start": "2352839",
    "end": "2359680"
  },
  {
    "text": "but the modern processors get most of their performance uh from this notion of",
    "start": "2359680",
    "end": "2365800"
  },
  {
    "text": "instructions per clock they get performance by doing more than one instruction every clock cycle so when",
    "start": "2365800",
    "end": "2373480"
  },
  {
    "text": "your processor says something on it like this is a 5 gahz processor that means",
    "start": "2373480",
    "end": "2378839"
  },
  {
    "text": "well the clock is running at you know five billion you know ticks per per",
    "start": "2378839",
    "end": "2384359"
  },
  {
    "text": "second and the CPU in order to get performance isn't just going to try and",
    "start": "2384359",
    "end": "2389560"
  },
  {
    "text": "execute a single instruction on each one of those clock Cycles effectively it's going to try and execute several right",
    "start": "2389560",
    "end": "2395319"
  },
  {
    "text": "at least two at a minimum but now they're trying to push up you know towards six seven eight right there like",
    "start": "2395319",
    "end": "2401520"
  },
  {
    "text": "it keeps getting more what that means is in order to sustain that it has to be able to parse uh we call this decode",
    "start": "2401520",
    "end": "2409280"
  },
  {
    "text": "right it's not really called parsing it's called decoding but it's par it's basically parsing on Intel side they have to be able to decode more",
    "start": "2409280",
    "end": "2416760"
  },
  {
    "text": "than one per cycle so that means every clock cycle the CPU has to look at",
    "start": "2416760",
    "end": "2422359"
  },
  {
    "text": "something like this move ad R going on here and it has to try and DEC code them",
    "start": "2422359",
    "end": "2427960"
  },
  {
    "text": "all at the same time in order to get it fast enough so what it actually does is",
    "start": "2427960",
    "end": "2433760"
  },
  {
    "text": "it guesses it uses some like knowledge of exactly how the things work to guess",
    "start": "2433760",
    "end": "2439839"
  },
  {
    "text": "about probably where the instructions are and then tries that and if it",
    "start": "2439839",
    "end": "2445920"
  },
  {
    "text": "succeeds you get the maximum number of of instructions decoded right and if it",
    "start": "2445920",
    "end": "2451560"
  },
  {
    "text": "fails you maybe get less I'm serious that's that's how it works it's it it it's like sort of of a",
    "start": "2451560",
    "end": "2457920"
  },
  {
    "text": "a best case kind of thing where it's like well hopefully we can capture most",
    "start": "2457920",
    "end": "2463160"
  },
  {
    "text": "instruction streams most of the time by guessing these things and having circuitry that tries that to code and",
    "start": "2463160",
    "end": "2468599"
  },
  {
    "text": "then so if you thought about this in a parser sense it's like you guessed how long the identifier was going to be and",
    "start": "2468599",
    "end": "2475640"
  },
  {
    "text": "ran a couple guesses in parallel and then checked at the end to see which one was correct dang yeah I don't even that that",
    "start": "2475640",
    "end": "2484240"
  },
  {
    "text": "just sounds difficult in my head even to create but I assume it's it's all Hardware logic as in it just it just",
    "start": "2484240",
    "end": "2489839"
  },
  {
    "text": "knows how to whatever the bits are magically flow to each box and each box takes some sort of variation guess to it and one of them comes out correctly and",
    "start": "2489839",
    "end": "2496680"
  },
  {
    "text": "boom you got it because I mean once you're done you know how long it was so you just go like hey did did we was one",
    "start": "2496680",
    "end": "2504359"
  },
  {
    "text": "of these guesses correct and if the answer is yes you're like sweet if it's not you're like oh well then the we still ran the slow decoder that only",
    "start": "2504359",
    "end": "2510560"
  },
  {
    "text": "gets one instruction or something and that one will be the one we use right so",
    "start": "2510560",
    "end": "2515599"
  },
  {
    "text": "I the reason why that matters is because as your head just intuitively did where",
    "start": "2515599",
    "end": "2522000"
  },
  {
    "text": "you're like oh God right that's not pretty that is a serious architecture",
    "start": "2522000",
    "end": "2528520"
  },
  {
    "text": "thing you've got to deal with contrast that to if you want to do that with this instruction set let's say RM 64 well",
    "start": "2528520",
    "end": "2535520"
  },
  {
    "text": "guess what you know exactly where they are yeah right yeah precisely every four bytes is a new instruction I want to",
    "start": "2535520",
    "end": "2541640"
  },
  {
    "text": "decode four of these in parallel I just start every four bittes and I decode them done right didn't need any complex",
    "start": "2541640",
    "end": "2548520"
  },
  {
    "text": "logic or fancy footwork going on there I just copy my decoder four times and feed it four bite offsets and then I've got a",
    "start": "2548520",
    "end": "2554599"
  },
  {
    "text": "four wide decoder happy birthday right a quick question on that one is this part of where the uh Energy savings it",
    "start": "2554599",
    "end": "2561160"
  },
  {
    "text": "there's no additional cost for decoding at each one of these steps or is the decoding cost of paralyzation is",
    "start": "2561160",
    "end": "2567359"
  },
  {
    "text": "significantly less than doing it one at a time is that is that where we're going with this yes so I was I don't want to",
    "start": "2567359",
    "end": "2574920"
  },
  {
    "text": "claim that this is some kind of a definite thing where it's like oh well obviously then you will get lower power",
    "start": "2574920",
    "end": "2581640"
  },
  {
    "text": "out of arm okay I merely want to point out that in terms of when you think",
    "start": "2581640",
    "end": "2588040"
  },
  {
    "text": "about actually implementing one of these chips how much space and how much power are you going to have to dedicate to",
    "start": "2588040",
    "end": "2593680"
  },
  {
    "text": "decoding I see what you're saying well this this is a real difference so if someone wanted to make the claim that",
    "start": "2593680",
    "end": "2599079"
  },
  {
    "text": "arm was more uh better for you know designing more efficient chip they could certainly point to this and say that's a",
    "start": "2599079",
    "end": "2606079"
  },
  {
    "text": "thing right yeah it makes it much simpler at least to talk about this at least because everything's a fixed",
    "start": "2606079",
    "end": "2611920"
  },
  {
    "text": "offset my small P brain can understand that I don't even like I can't even think of the magic behind Intel to make",
    "start": "2611920",
    "end": "2618280"
  },
  {
    "text": "whatever that is where you could have up to six bytes to you know explain an instruction how do you jump ahead and",
    "start": "2618280",
    "end": "2623680"
  },
  {
    "text": "guess that it sounds magical to me and I think you're not the only one who has trouble conceptualizing that as well",
    "start": "2623680",
    "end": "2629160"
  },
  {
    "text": "because uh it takes them a long time to improve the decoders on x64 like a lot",
    "start": "2629160",
    "end": "2634559"
  },
  {
    "text": "of work goes into it whereas I don't as as far as I know there's no magic to decoding lots of instructions on arm you",
    "start": "2634559",
    "end": "2642240"
  },
  {
    "text": "just do it right it's like it's like no one had to be clever yeah uh they just kind of did it so I think what you're",
    "start": "2642240",
    "end": "2648640"
  },
  {
    "text": "experiencing there in your own brain is basically what they experien in Hardware it's like okay this is a serious thing",
    "start": "2648640",
    "end": "2654760"
  },
  {
    "text": "and I've got to go do actual work on this as opposed to just oh we want a wider decoder well then we just do",
    "start": "2654760",
    "end": "2659920"
  },
  {
    "text": "decode more you know copy the decoder more times or something right I'm sure a",
    "start": "2659920",
    "end": "2665839"
  },
  {
    "text": "bit is back because x86 I assume is older than arm uh by some amount and",
    "start": "2665839",
    "end": "2672240"
  },
  {
    "text": "that binary size used to be like hyper important comparatively to it is now is this also like a binary size implication",
    "start": "2672240",
    "end": "2679400"
  },
  {
    "text": "where they had to get clever at one point in time in which that cleverness maybe has left some",
    "start": "2679400",
    "end": "2684599"
  },
  {
    "text": "level uh yes everything you just said is true uh and it's more than just binary",
    "start": "2684599",
    "end": "2690680"
  },
  {
    "text": "size it's also speed uh and that's actually still true today so let me talk",
    "start": "2690680",
    "end": "2695920"
  },
  {
    "text": "about that so if you move yourself back in time to something like the",
    "start": "2695920",
    "end": "2702480"
  },
  {
    "text": "886 every bite you read from memory was expensive right every single individual",
    "start": "2702480",
    "end": "2708839"
  },
  {
    "text": "bite was very expensive and you waited for it so what that means is that if an",
    "start": "2708839",
    "end": "2714599"
  },
  {
    "text": "instruction can be encoded more compactly like if you could encode an instruction in one bite instead of two bytes you got faster you weren't just",
    "start": "2714599",
    "end": "2722200"
  },
  {
    "text": "smaller you were faster right and so there was a lot more",
    "start": "2722200",
    "end": "2727400"
  },
  {
    "text": "incentive at that point to encode uh smaller binaries now fast forward to today and you might think well it",
    "start": "2727400",
    "end": "2734079"
  },
  {
    "text": "doesn't matter anymore turns out it really does actually and the reason that",
    "start": "2734079",
    "end": "2739319"
  },
  {
    "text": "it matters is because uh especially with the way people program nowadays where they've just got these massive you know",
    "start": "2739319",
    "end": "2746559"
  },
  {
    "text": "everyone uses 50 million libraries even if the libraries have the same exact stuff in them they you know there's",
    "start": "2746559",
    "end": "2753160"
  },
  {
    "text": "there's 17 different yeah yeah uh like you know it's like it's like how many",
    "start": "2753160",
    "end": "2758559"
  },
  {
    "text": "jpeg decompressors are in the thing you shipped and usually answer is I don't even know right several probably or",
    "start": "2758559",
    "end": "2764079"
  },
  {
    "text": "something right because they just get included from everywhere and who knows what right or things like that uh how",
    "start": "2764079",
    "end": "2770280"
  },
  {
    "text": "many copies of the entire Chrome browser shipped with this with this uh binary it's like four right uh so anyway you",
    "start": "2770280",
    "end": "2777839"
  },
  {
    "text": "get these things that where the code size is very large and one of the things that's actually kind of amusing these days is actually this does create a",
    "start": "2777839",
    "end": "2784319"
  },
  {
    "text": "problem it creates a problem for something uh where there's this part of the all",
    "start": "2784319",
    "end": "2790160"
  },
  {
    "text": "modern trips have this is called an instruction cache and what its job is to cash things just like a data cach caches",
    "start": "2790160",
    "end": "2796720"
  },
  {
    "text": "the data your program's working with the instructions have to be cashed as well because it's expensive to BR bring them in memory just just like it was in the",
    "start": "2796720",
    "end": "2803200"
  },
  {
    "text": "886 days the more things change more they stay the same so having giant binaries means you have these things",
    "start": "2803200",
    "end": "2809880"
  },
  {
    "text": "called iach Misses or instruction cache misses which are when you're Jumping All Around through giant massive heaps of",
    "start": "2809880",
    "end": "2816559"
  },
  {
    "text": "code and you end up stalling because the processor is literally waiting for",
    "start": "2816559",
    "end": "2822880"
  },
  {
    "text": "whatever random virtual function call you're calling on your objectoriented mess to come in from memory and get",
    "start": "2822880",
    "end": "2830079"
  },
  {
    "text": "there so it can execute it it's just sitting around waiting because it ran out of things to do waiting for your",
    "start": "2830079",
    "end": "2836240"
  },
  {
    "text": "code to come in right um and that's a real thing that happens nowadays so",
    "start": "2836240",
    "end": "2841920"
  },
  {
    "text": "amusingly even though you would think this doesn't matter at all anymore code size still",
    "start": "2841920",
    "end": "2847359"
  },
  {
    "text": "of oddly enough matters because the iach is only so big you may only get 32k of",
    "start": "2847359",
    "end": "2853319"
  },
  {
    "text": "iach or something depending on the processor and so the more code you can fit in that 32k the happier you are and",
    "start": "2853319",
    "end": "2860680"
  },
  {
    "text": "so it matters now does x64 necessarily do a great job of maximizing that space",
    "start": "2860680",
    "end": "2865880"
  },
  {
    "text": "anymore not really and that brings us to our next point so one of the things that",
    "start": "2865880",
    "end": "2874079"
  },
  {
    "text": "artificially hurts Intel as composed to as opposed to arm is normally if you",
    "start": "2874079",
    "end": "2879880"
  },
  {
    "text": "were to design an instruction set that did this sort of thing what you would be doing is studying your modern",
    "start": "2879880",
    "end": "2886480"
  },
  {
    "text": "instruction streams very carefully and you would be planning almost like for those of you who know compression almost",
    "start": "2886480",
    "end": "2892319"
  },
  {
    "text": "like a Huffman tree or something you would be planning exactly how the bit layout worked for your",
    "start": "2892319",
    "end": "2899200"
  },
  {
    "text": "instructions such that you would minimize the size of your typical",
    "start": "2899200",
    "end": "2904760"
  },
  {
    "text": "instruction streams it'd be like this it's like the designing compression format right it's like I'm going to pick this and I'm going to see how well it",
    "start": "2904760",
    "end": "2911559"
  },
  {
    "text": "does at compressing these things right but Intel didn't do that right",
    "start": "2911559",
    "end": "2918280"
  },
  {
    "text": "maybe 886 had a little bit of that right but over time as they've extended the",
    "start": "2918280",
    "end": "2924319"
  },
  {
    "text": "instruction set what the variable length ended up doing more than anything else was just allowing them to add",
    "start": "2924319",
    "end": "2930760"
  },
  {
    "text": "instructions while maintaining backwards compatibility that does not lead to the",
    "start": "2930760",
    "end": "2936839"
  },
  {
    "text": "most concise encoding for an instruction set because now you've got extra bittes",
    "start": "2936839",
    "end": "2942119"
  },
  {
    "text": "that are all over the place that were really just there to Signal like Hey we're using some extended instructions",
    "start": "2942119",
    "end": "2948319"
  },
  {
    "text": "now right so so what you're trying to say is that in the backwards",
    "start": "2948319",
    "end": "2954160"
  },
  {
    "text": "compatibility effectively made it such that the in in Huffman for those that don't know Huffman trees effectively",
    "start": "2954160",
    "end": "2959200"
  },
  {
    "text": "just the thing that appears the most takes like one bit to encode whereas in this world you're saying that the things",
    "start": "2959200",
    "end": "2965640"
  },
  {
    "text": "that take one bit to and code are the things probably or would I say one bit one bite and code shall we say uh if",
    "start": "2965640",
    "end": "2971280"
  },
  {
    "text": "that's even true uh that those are the least likely to be used instructions",
    "start": "2971280",
    "end": "2976359"
  },
  {
    "text": "effectively other than maybe return remaining the same but the rest being like so no one's using an 8bit ad",
    "start": "2976359",
    "end": "2982760"
  },
  {
    "text": "therefore 8bit ad just sits there in some one bite range and just like well I guess I'll never be used again you effectively yes and it's not",
    "start": "2982760",
    "end": "2991079"
  },
  {
    "text": "as bad as maybe what you said meaning meaning it's not like you you pointed",
    "start": "2991079",
    "end": "2996920"
  },
  {
    "text": "out correctly return right that's commonly used and still one bite that's great right so there it does get",
    "start": "2996920",
    "end": "3002400"
  },
  {
    "text": "something from it but my point is more it's handicapped right at that point like you know like in a golf or whatever",
    "start": "3002400",
    "end": "3009079"
  },
  {
    "text": "right it's like um it's it's uh getting an unfair detriment to it because it",
    "start": "3009079",
    "end": "3014160"
  },
  {
    "text": "wasn't designed for that so it's at this point now where if you imagined",
    "start": "3014160",
    "end": "3020359"
  },
  {
    "text": "redesigning x64 to be optimally encoded for space",
    "start": "3020359",
    "end": "3026960"
  },
  {
    "text": "uh or and you can even throw in efficiency of decoding you could do things to make it much easier for the decoder to know like the first bite",
    "start": "3026960",
    "end": "3033440"
  },
  {
    "text": "always tells you where the how many uh instruction bites there are in some way",
    "start": "3033440",
    "end": "3038799"
  },
  {
    "text": "so that you can do a quick like spread to know where to gather I was going to",
    "start": "3038799",
    "end": "3043920"
  },
  {
    "text": "say that I actually thought about that I was like dude you could have the first nibble really be like it this thing's going to be 1 to 16 jumps right yeah and",
    "start": "3043920",
    "end": "3051960"
  },
  {
    "text": "it's a little hard to that because you probably need to encode how big several instructions are but you know I mean I",
    "start": "3051960",
    "end": "3057079"
  },
  {
    "text": "don't want to tell say pretend I know how the Hardware's going to work I don't know those things right so I don't know it would help them but point is you",
    "start": "3057079",
    "end": "3063240"
  },
  {
    "text": "could consider those things right yeah and you could make something that minimized space while still keeping",
    "start": "3063240",
    "end": "3068520"
  },
  {
    "text": "decoding reasonable and my point is just x64 is not the best representative of of",
    "start": "3068520",
    "end": "3075079"
  },
  {
    "text": "what you could get out of a VAR blength en coding so it's a little unfair also to say well you know we could compare uh",
    "start": "3075079",
    "end": "3083280"
  },
  {
    "text": "X4 and arm and conclude that arm uh that uh that uh fixed length instructions are always better because armed is better at",
    "start": "3083280",
    "end": "3090240"
  },
  {
    "text": "low power or eventually better at high power who knows what right not really cuz x64 a lot of what its benefits were",
    "start": "3090240",
    "end": "3097480"
  },
  {
    "text": "were backwards compatibility which is very valuable you know it created this really great ecosystem over many uh",
    "start": "3097480",
    "end": "3103000"
  },
  {
    "text": "Generations but that's more where it was coming from so you could also say that one of the great things about a",
    "start": "3103000",
    "end": "3109880"
  },
  {
    "text": "variable L instruction set is they've never had to wholesale wipe it really Y and so that was great too but again not",
    "start": "3109880",
    "end": "3116599"
  },
  {
    "text": "something you neily care about if what you're talking about is how low power can things be you're not talking about those other important benefits and so",
    "start": "3116599",
    "end": "3124000"
  },
  {
    "text": "again uh you get less of it so anyway so that's really the biggest difference",
    "start": "3124000",
    "end": "3130200"
  },
  {
    "text": "that you'll see from a hardware standpoint I want to talk maybe so so",
    "start": "3130200",
    "end": "3135280"
  },
  {
    "text": "are we all good here is that I don't know I can't read the chat while I'm looking at my screen here so I don't know if everyone's okay chat's going",
    "start": "3135280",
    "end": "3141559"
  },
  {
    "text": "great a lot of people have a lot of opinions about stuff but it looks like we're do it looks great we're doing good so we can move on to the next thing I",
    "start": "3141559",
    "end": "3147920"
  },
  {
    "text": "think people largely get what's happening okay a lot of people so so people are arguing about rx6 or",
    "start": "3147920",
    "end": "3153240"
  },
  {
    "text": "something like that in there actually the explanation on this one thing you know like you know they happen so don't",
    "start": "3153240",
    "end": "3158640"
  },
  {
    "text": "worry don't worry there's always always oh well that's fine if someone wants me to to elaborate on something because",
    "start": "3158640",
    "end": "3164160"
  },
  {
    "text": "they don't feel like it was correct we can also do that was there something in particular I'd rather just keep going forward honestly uh there's always some",
    "start": "3164160",
    "end": "3170559"
  },
  {
    "text": "highly because then we'll just be sewing the Weeds on one particular Edge in which you do you do go hey not everything's like this but is generally",
    "start": "3170559",
    "end": "3177160"
  },
  {
    "text": "a nice like way to go yeah I mean that's always a problem with things like this is it's like well you know there",
    "start": "3177160",
    "end": "3183559"
  },
  {
    "text": "anything that I say there's always a well there's this you know and and",
    "start": "3183559",
    "end": "3189359"
  },
  {
    "text": "that's just I I assume that's true in my head so I just assume that Chad also adopts that mentality which is we're",
    "start": "3189359",
    "end": "3195559"
  },
  {
    "text": "you're obviously first off you're talking to me and Neanderthal comparatively so therefore it's like you're already boxing up something and",
    "start": "3195559",
    "end": "3201400"
  },
  {
    "text": "you we don't have hours just to spend on every particular point so let's just move as fast as we can",
    "start": "3201400",
    "end": "3207319"
  },
  {
    "text": "get as much understanding as we can everybody is slightly like the veil has been slightly pulled back and now we see",
    "start": "3207319",
    "end": "3213079"
  },
  {
    "text": "a little bit more you know okay well um yeah if if anyone wants to follow",
    "start": "3213079",
    "end": "3218480"
  },
  {
    "text": "with me afterwards that's fine too but either way uh so anyway you know you can kind of see here exactly what's going on",
    "start": "3218480",
    "end": "3226040"
  },
  {
    "text": "uh with the encoding bites and that's a difference but like I said it's uh it's",
    "start": "3226040",
    "end": "3233480"
  },
  {
    "text": "unclear really how much advantage that actually is for something like arm it is",
    "start": "3233480",
    "end": "3240760"
  },
  {
    "text": "true uh so so let's move on to to maybe some things about power so it is true that traditionally",
    "start": "3240760",
    "end": "3247920"
  },
  {
    "text": "arm has been much better at low power and so when we're talking about just in",
    "start": "3247920",
    "end": "3253119"
  },
  {
    "text": "practice what where have the low power stuff come where has the low power stuff come from arm is way stronger at that",
    "start": "3253119",
    "end": "3259160"
  },
  {
    "text": "and has way more examples of excelling in that domain than something like x86 uh or",
    "start": "3259160",
    "end": "3265160"
  },
  {
    "text": "x64 and this was true my understanding although I was never involved in the you",
    "start": "3265160",
    "end": "3270200"
  },
  {
    "text": "know I never had one of these computers as a kid but uh my understanding was this was true right from the the first",
    "start": "3270200",
    "end": "3276319"
  },
  {
    "text": "arm arm one so the original arm that they designed as a successor to BBC",
    "start": "3276319",
    "end": "3283240"
  },
  {
    "text": "micro uh which I don't even know what chip was in there I think it was a 6502 maybe or I I don't remember what was in",
    "start": "3283240",
    "end": "3289319"
  },
  {
    "text": "the BBC micro because I never had any of those um but they designed it as a a a do chip for acorn computer I think",
    "start": "3289319",
    "end": "3296520"
  },
  {
    "text": "that's what the a originally stood for in arm uh was Acorn believe it or not I",
    "start": "3296520",
    "end": "3301559"
  },
  {
    "text": "I could be very wrong about that I'm sure chat will correct me if I'm wrong on that one but uh the the original chip",
    "start": "3301559",
    "end": "3308400"
  },
  {
    "text": "was extremely extremely low power like I want to say there were weird like anecdotes about it running it was able",
    "start": "3308400",
    "end": "3316000"
  },
  {
    "text": "to run while not being powered someone literally just said yes the AR the first",
    "start": "3316000",
    "end": "3321520"
  },
  {
    "text": "arm was Notorious to consume zero power and I wasn't sure if it was that was a joke as it it was going it was crashing",
    "start": "3321520",
    "end": "3327920"
  },
  {
    "text": "as in it just didn't run or if that was saying like literally it just would run with such little power that it was it",
    "start": "3327920",
    "end": "3333799"
  },
  {
    "text": "lit I I the the anecdote anyway and again I wasn't there I don't know any of this stuff so I'm just saying like what",
    "start": "3333799",
    "end": "3340240"
  },
  {
    "text": "you read when you read about arm history is what it will say supposedly just like",
    "start": "3340240",
    "end": "3347039"
  },
  {
    "text": "the residual electrical fields from powering the other things on like a",
    "start": "3347039",
    "end": "3353480"
  },
  {
    "text": "circuit board around the arm chip was enough to make the arm chip work that's",
    "start": "3353480",
    "end": "3359359"
  },
  {
    "text": "incredible that's it was like 0.1 Watts or something I I don't remember what the",
    "start": "3359359",
    "end": "3364400"
  },
  {
    "text": "draw was on this thing but it was like it was so low that you could run it",
    "start": "3364400",
    "end": "3369520"
  },
  {
    "text": "without actually intentionally powering it that was the that's the anecdote and I have no idea if that's really true but",
    "start": "3369520",
    "end": "3375920"
  },
  {
    "text": "that's the anecdote anyway and who knows like I I'm not I am not an armed person and I don't study arm history so that's",
    "start": "3375920",
    "end": "3382720"
  },
  {
    "text": "for someone else to say but that you will see that claim right and so it",
    "start": "3382720",
    "end": "3388480"
  },
  {
    "text": "comes from a lineage where they were intentionally designing this thing to be a low power chip and succeeded right so",
    "start": "3388480",
    "end": "3396280"
  },
  {
    "text": "the chip they actually shipped as the first arm was very low power now",
    "start": "3396280",
    "end": "3401760"
  },
  {
    "text": "originally uh you know people there's all kinds of weird claims and some of them are actually false so for example",
    "start": "3401760",
    "end": "3409440"
  },
  {
    "text": "uh it's typically claimed that arm one wasn't micro coded right so there's this",
    "start": "3409440",
    "end": "3415559"
  },
  {
    "text": "notion so if you you look at something like the original the early chips right there's like a 6502 like the kind of classic chip that",
    "start": "3415559",
    "end": "3422880"
  },
  {
    "text": "people refer to for the old microcomputer days that it does not have Micro code uh meaning the instructions",
    "start": "3422880",
    "end": "3430319"
  },
  {
    "text": "are like directly wired like when it loads something from memory the bits are wired directly to the like instruction",
    "start": "3430319",
    "end": "3438520"
  },
  {
    "text": "execution Matrix there's no intermediate right probably explaining this poorly",
    "start": "3438520",
    "end": "3444200"
  },
  {
    "text": "but whereas if you take something like the 886 it's micro coded what that means is",
    "start": "3444200",
    "end": "3450440"
  },
  {
    "text": "that each instruction and not every single instruction try it for for the for the if we have pedants in chat I'll",
    "start": "3450440",
    "end": "3457079"
  },
  {
    "text": "try to be more specific not literally every instruction but almost every instruction on 886 888 so think original",
    "start": "3457079",
    "end": "3465559"
  },
  {
    "text": "IBM PC doesn't actually directly feed the instruction bits into the execution part",
    "start": "3465559",
    "end": "3473359"
  },
  {
    "text": "of the chip instead those code for a location in internal in effectively an",
    "start": "3473359",
    "end": "3481039"
  },
  {
    "text": "internal ROM if you will that says a series of smaller instructions to do",
    "start": "3481039",
    "end": "3487839"
  },
  {
    "text": "typically you know two three four five right so if you go back and look at",
    "start": "3487839",
    "end": "3493240"
  },
  {
    "text": "original 8086 every instruction actually maps to some series of smaller",
    "start": "3493240",
    "end": "3499039"
  },
  {
    "text": "instructions which we would today call Micro Ops although I don't know if they called them that in those",
    "start": "3499039",
    "end": "3505119"
  },
  {
    "text": "days so people normally said I mean this",
    "start": "3505119",
    "end": "3510280"
  },
  {
    "text": "is what I always heard anyway was that the original arm chips were not micro coded they were risk reduced instruction",
    "start": "3510280",
    "end": "3515720"
  },
  {
    "text": "set computer right and they were directly mapped just like a 6502 but that apparently isn't the case",
    "start": "3515720",
    "end": "3523280"
  },
  {
    "text": "I actually saw recently uh you know just just in the past you know in recent memory not in the old days uh there's a",
    "start": "3523280",
    "end": "3530400"
  },
  {
    "text": "there's a fellow called Ken Sheriff Who does these really great uh reverse engineering of of silicon",
    "start": "3530400",
    "end": "3537000"
  },
  {
    "text": "on uh they actually reverse engineered the entire arm one and it's micro coded",
    "start": "3537000",
    "end": "3542839"
  },
  {
    "text": "You could argue that it's less the micro code is less micro codyy it's a little",
    "start": "3542839",
    "end": "3548440"
  },
  {
    "text": "less micro codyy than something like an 886 but to my eye I was like that's micro code like it is definitely I would",
    "start": "3548440",
    "end": "3554799"
  },
  {
    "text": "consider it micro code and so even originally and this is I always try to",
    "start": "3554799",
    "end": "3560960"
  },
  {
    "text": "spread this around because a lot of people think like original 886 was much simpler original art one was simpler",
    "start": "3560960",
    "end": "3567839"
  },
  {
    "text": "even the original early chips they were using things like micro code where instructions maap to uh Micro Ops",
    "start": "3567839",
    "end": "3575599"
  },
  {
    "text": "effectively so where do I want to go with that well over time this kind of",
    "start": "3575599",
    "end": "3580720"
  },
  {
    "text": "thing just gets more and more and more common and so today when you look at a modern arm chip like something like a",
    "start": "3580720",
    "end": "3586680"
  },
  {
    "text": "Snapdragon or an M series chip if you look at something like an Intel uh chip",
    "start": "3586680",
    "end": "3591960"
  },
  {
    "text": "or an AMD chip for x86 or x64 they all work off of the same basic",
    "start": "3591960",
    "end": "3598400"
  },
  {
    "text": "model and that is a fairly comp complex instruction set comes in no matter who",
    "start": "3598400",
    "end": "3604400"
  },
  {
    "text": "wants to tell you that arm is risk it's not there's nothing reduced about having",
    "start": "3604400",
    "end": "3609720"
  },
  {
    "text": "hundreds of instructions in your instruction set right the original arm had something like 41 or something like",
    "start": "3609720",
    "end": "3616039"
  },
  {
    "text": "that modern arms have hundreds right so they take a fairly complicated",
    "start": "3616039",
    "end": "3622440"
  },
  {
    "text": "instruction set in and then they execute a series of Micro Ops just like the original their original forebears did",
    "start": "3622440",
    "end": "3628920"
  },
  {
    "text": "but now those Micro Ops are going through a much more complicated series of scheduling and executing parallel and",
    "start": "3628920",
    "end": "3636000"
  },
  {
    "text": "all this sort of stuff right they all work that way and there really isn't that much of",
    "start": "3636000",
    "end": "3643079"
  },
  {
    "text": "a difference between the chips at that point it's just who does a better job",
    "start": "3643079",
    "end": "3648559"
  },
  {
    "text": "implementing them low power-wise and it's hard to really find things like I",
    "start": "3648559",
    "end": "3654200"
  },
  {
    "text": "have never found somebody actually been able to pinpoint beyond the difference in decoders which I think is real like",
    "start": "3654200",
    "end": "3661359"
  },
  {
    "text": "the decoder can be much more simplified on arm and still decode lots of instructions at the same time in",
    "start": "3661359",
    "end": "3667440"
  },
  {
    "text": "parallel I have never seen somebody identify oh here is a particular aspect",
    "start": "3667440",
    "end": "3674400"
  },
  {
    "text": "of the arm Isa that allows it to be way lower power than Intel",
    "start": "3674400",
    "end": "3680599"
  },
  {
    "text": "right maybe the what like I've tried to highlight one of them which is the variable L instruction maybe you can get",
    "start": "3680599",
    "end": "3686839"
  },
  {
    "text": "something there another one is just well when you say x64 you're probably meaning",
    "start": "3686839",
    "end": "3692760"
  },
  {
    "text": "all of the backwards compatibility baggage so that could take up you know",
    "start": "3692760",
    "end": "3697880"
  },
  {
    "text": "some extra space in terms of micro coding ROMs and maybe some things like that maybe the memory model there's a",
    "start": "3697880",
    "end": "3704400"
  },
  {
    "text": "few things like that but it's very hard to identify anything in the ISA that's like well there it is like that's the",
    "start": "3704400",
    "end": "3710960"
  },
  {
    "text": "reason that arm is so much more power efficient so for me anyway the reason I",
    "start": "3710960",
    "end": "3716760"
  },
  {
    "text": "usually think that arm is more power efficient is actually business related not anything to do with the actual Isa",
    "start": "3716760",
    "end": "3724559"
  },
  {
    "text": "could there be some things that maybe are an edge for arm yeah but they're like an edge I think the real reason",
    "start": "3724559",
    "end": "3731000"
  },
  {
    "text": "we've seen arm be so successful at low power well while EX4 hasn't pain it's just because of market dynamics arm grew",
    "start": "3731000",
    "end": "3738079"
  },
  {
    "text": "up in low power the companies who licensed arm were all focusing on low",
    "start": "3738079",
    "end": "3743119"
  },
  {
    "text": "power and more to the point they're way more of them because it's an open uh",
    "start": "3743119",
    "end": "3748440"
  },
  {
    "text": "platform that anyone can license you had way more people trying to make Innovative low power designs right",
    "start": "3748440",
    "end": "3755480"
  },
  {
    "text": "whereas if you look at what happened with x64 there's only two players and they were never really that focused on",
    "start": "3755480",
    "end": "3761359"
  },
  {
    "text": "low power they all came from higher power and then tried to like start low power initiatives which they're now",
    "start": "3761359",
    "end": "3767279"
  },
  {
    "text": "working towards and so I think the history makes",
    "start": "3767279",
    "end": "3772880"
  },
  {
    "text": "it seem like arm was magically better I don't know that it was I think that may have been just more of an artifact of",
    "start": "3772880",
    "end": "3778559"
  },
  {
    "text": "what the original you know when you think about how chip design works you get a lot of like Legacy stuff going on a lot of like well we've already got",
    "start": "3778559",
    "end": "3784760"
  },
  {
    "text": "this design and we're we're low risks you know we don't want to take a wild risk with every generation so we're not going to change it that much I think",
    "start": "3784760",
    "end": "3791440"
  },
  {
    "text": "what you're seeing is mostly inertia to be completely honest and yeah could there be some things like like the",
    "start": "3791440",
    "end": "3796680"
  },
  {
    "text": "decoding or like some backwards compat Badness or things like that where at the limit arm is actually better for low",
    "start": "3796680",
    "end": "3803960"
  },
  {
    "text": "power that could very much be true but that minor element of it I think is not",
    "start": "3803960",
    "end": "3812440"
  },
  {
    "text": "why historically it's been the lower power uh thing there there was also some",
    "start": "3812440",
    "end": "3817720"
  },
  {
    "text": "things earlier on that would make like interrupts were more power efficient in arm right from the start but again that",
    "start": "3817720",
    "end": "3823480"
  },
  {
    "text": "was ear very early and I don't think that is something that you would carry forward to something like you know 2010",
    "start": "3823480",
    "end": "3829520"
  },
  {
    "text": "or when people normally think of like o arm being low power so that's usually my feeling on it is it's over",
    "start": "3829520",
    "end": "3836440"
  },
  {
    "text": "the degree to the ISA is mattering here is overstated I think it's more about who was working on what and how much",
    "start": "3836440",
    "end": "3843839"
  },
  {
    "text": "human creativity was brought to bear on each side for doing low power and how",
    "start": "3843839",
    "end": "3849599"
  },
  {
    "text": "those market dynamics worked is more why we've got this entrenched version of arm whereas I think if it was just Isa",
    "start": "3849599",
    "end": "3855400"
  },
  {
    "text": "differences might there be a difference yes but the difference wouldn't have been as massive as what it was uh at the",
    "start": "3855400",
    "end": "3862440"
  },
  {
    "text": "time does that make sense that makes perfect sense I mean you see this in in L every form of life even regarding you",
    "start": "3862440",
    "end": "3867920"
  },
  {
    "text": "can disregard every last technical problem you've ever experienced just company cultures dictate different types of work different types of how people",
    "start": "3867920",
    "end": "3875400"
  },
  {
    "text": "assimilate and and work together you know so you can see this that when there's a certain need at a place",
    "start": "3875400",
    "end": "3882319"
  },
  {
    "text": "everyone aligns around that need and they work towards it and so it's like it makes perfect sense that if arm has",
    "start": "3882319",
    "end": "3887559"
  },
  {
    "text": "always historically been in the low power it makes sense that they build architectures and chips that are just",
    "start": "3887559",
    "end": "3893279"
  },
  {
    "text": "thoughtful first of low power versus Intel's always been like this is the fastest desktop you know like that's",
    "start": "3893279",
    "end": "3899160"
  },
  {
    "text": "kind of where they were birth is like the Pentium 3 had the blue man dancing room dancing around for 400 mehz and so",
    "start": "3899160",
    "end": "3904920"
  },
  {
    "text": "it's like they must data centers and yeah and all this stuff right they're they're trying to maximize how much power I assume trying to get through it",
    "start": "3904920",
    "end": "3911160"
  },
  {
    "text": "and so that's a very different problem and I assume that solving one makes it difficult to solve the other at the",
    "start": "3911160",
    "end": "3917079"
  },
  {
    "text": "exact same time and so I I could I could understand this at least minimally it's a CH it's a tough you know like thought",
    "start": "3917079",
    "end": "3924200"
  },
  {
    "text": "pattern to change in an organization and I and I think like you know one of the reasons that I feel like my analysis",
    "start": "3924200",
    "end": "3930680"
  },
  {
    "text": "there is not like completely uh BS is just because now that you've had 15",
    "start": "3930680",
    "end": "3937039"
  },
  {
    "text": "years or so or 20 years of Intel and AMD going oh we probably do need to care",
    "start": "3937039",
    "end": "3944039"
  },
  {
    "text": "about low power right because they they sort of have have changed direction right they're producing some fairly",
    "start": "3944039",
    "end": "3951039"
  },
  {
    "text": "competitive low power chips now right and so the fact that that's happen happening suggests to me that like yeah",
    "start": "3951039",
    "end": "3958760"
  },
  {
    "text": "and and again you can't turn on a dime with Hardware right if you've got a",
    "start": "3958760",
    "end": "3963799"
  },
  {
    "text": "lineage that you're maintaining it's not like you can just wake up one morning and just be like all right the whole company's about low power now like",
    "start": "3963799",
    "end": "3969680"
  },
  {
    "text": "that's not how that's going to work right 20 years is not a long time in Hardware right it's it's it's it's a",
    "start": "3969680",
    "end": "3975680"
  },
  {
    "text": "long time in software because we can iterate so quickly it's not a long time in hardware and so moving those organizations and and they have to be",
    "start": "3975680",
    "end": "3982200"
  },
  {
    "text": "risk averse and they have to continue to sell to their high power customers they can't just take all their engineers and",
    "start": "3982200",
    "end": "3988319"
  },
  {
    "text": "say okay we're just going to Ghost Ship the high power Parts like that can't happen right so with you know with",
    "start": "3988319",
    "end": "3994400"
  },
  {
    "text": "limited design resources and all those sorts of things you only have so many great Architects uh at your company",
    "start": "3994400",
    "end": "3999680"
  },
  {
    "text": "whatever I think that what you're seeing is a lot that and so again that's not to say that's not to try and state that",
    "start": "3999680",
    "end": "4006039"
  },
  {
    "text": "there are no differences in the Isis I've tried to point some out or that those differences won't be important at the limit um or even that they weren't",
    "start": "4006039",
    "end": "4012920"
  },
  {
    "text": "important during that process it's just to say that I think what we saw was a much more exaggerated difference between",
    "start": "4012920",
    "end": "4019279"
  },
  {
    "text": "the two because of business effects and by the way I think uh it's in some sense",
    "start": "4019279",
    "end": "4025480"
  },
  {
    "text": "you could say there is a property of arms Isa that makes it much more low",
    "start": "4025480",
    "end": "4030839"
  },
  {
    "text": "power that is not often mentioned and that's that it's open license I bet if",
    "start": "4030839",
    "end": "4036039"
  },
  {
    "text": "x64 had been an open license they would have had better low power chips why because some other chip designers at",
    "start": "4036039",
    "end": "4042799"
  },
  {
    "text": "other companies maybe even Apple maybe when they did their chips they would have done I mean they probably wouldn't",
    "start": "4042799",
    "end": "4048160"
  },
  {
    "text": "have because they had their iPhone line which would have started on arm but you know who knows you may have gotten other",
    "start": "4048160",
    "end": "4054000"
  },
  {
    "text": "people who were like wanted to do low power stuff who were really great at it somewhere in the world and they would",
    "start": "4054000",
    "end": "4059799"
  },
  {
    "text": "have licens x64 because they wanted to tap into PC market or something and ship low power PC devices so in a way I would",
    "start": "4059799",
    "end": "4067760"
  },
  {
    "text": "consider arms openness to almost be the most important aspect of their Isa for",
    "start": "4067760",
    "end": "4072960"
  },
  {
    "text": "low power beyond all of the things that anyone else might say right does that",
    "start": "4072960",
    "end": "4078119"
  },
  {
    "text": "make sense that makes perfect sense um you know a lot of problems in the world",
    "start": "4078119",
    "end": "4083480"
  },
  {
    "text": "do come down to uh a people problem and so this would not be shocking that if",
    "start": "4083480",
    "end": "4088599"
  },
  {
    "text": "this actually just turns out to be the answer that you end up in the end having just equally competitive chips when the",
    "start": "4088599",
    "end": "4095640"
  },
  {
    "text": "focus becomes on low power and that's just the way it is so I I mean it makes perfect it it does make a lot of sense I",
    "start": "4095640",
    "end": "4102560"
  },
  {
    "text": "I think you also made a good argument about not having to guess the variable length therefore you could always have a",
    "start": "4102560",
    "end": "4107640"
  },
  {
    "text": "fairly consistent decoding and thus you don't have to try as hard maybe there is just something there where you're like we only do four instructions ever we",
    "start": "4107640",
    "end": "4113960"
  },
  {
    "text": "don't have to think about trying to hop six or eight or 10 or and do anything super clever we can just do it and",
    "start": "4113960",
    "end": "4119080"
  },
  {
    "text": "that's it so I I could see that also being very you know potentially beneficial maybe you know but I'm so",
    "start": "4119080",
    "end": "4124440"
  },
  {
    "text": "lame in at this point that it's it's ridiculous law that's it matters it",
    "start": "4124440",
    "end": "4129480"
  },
  {
    "text": "matters right I think it does matter because it just makes it much more difficult for the uh for the Intel side",
    "start": "4129480",
    "end": "4135920"
  },
  {
    "text": "to SC for the x64 side to scale that decode and when you're talking about like literally chips are now talking",
    "start": "4135920",
    "end": "4142679"
  },
  {
    "text": "about we wanted to code eight instructions at a time things like that that's really hard if you don't",
    "start": "4142679",
    "end": "4149199"
  },
  {
    "text": "know where the instructions are right and so when you look at something like rum there's a definite Advantage there",
    "start": "4149199",
    "end": "4154798"
  },
  {
    "text": "and like I said I I don't want to minimize that because we don't know like we don't know how that could play out in",
    "start": "4154799",
    "end": "4160359"
  },
  {
    "text": "the long run it could be that it just it really is important and and and off you go right so yeah because would assume to",
    "start": "4160359",
    "end": "4165880"
  },
  {
    "text": "be able to decode that many up ahead you need a larger variance of just things that can just test run various you know",
    "start": "4165880",
    "end": "4173080"
  },
  {
    "text": "various attempts at decoding thus the arm one's only going to be eight because that's like well you know 0 four you",
    "start": "4173080",
    "end": "4180520"
  },
  {
    "text": "know 8 12 16 like it can just be like here we go I'm gon to do all at the exact same time Intel is doing this like",
    "start": "4180520",
    "end": "4186640"
  },
  {
    "text": "magic like okay we actually have 16 lines of that going which theoretically that has to consume more power just like",
    "start": "4186640",
    "end": "4192960"
  },
  {
    "text": "just by pure you know observational power and and you know there's other weird",
    "start": "4192960",
    "end": "4198159"
  },
  {
    "text": "things that are happening now where like uh sometimes they don't have what's called a micro op cach which is where you have a thing where you decode things",
    "start": "4198159",
    "end": "4204640"
  },
  {
    "text": "into a cache so that you know that you don't have to do that decoding again for",
    "start": "4204640",
    "end": "4209719"
  },
  {
    "text": "like hot loops and things like that and so you know you look at things like that and you're like some chips now don't",
    "start": "4209719",
    "end": "4215360"
  },
  {
    "text": "have that like in amusingly it's the x64 chips that that oftentimes now don't have a micro op cach even though they",
    "start": "4215360",
    "end": "4221040"
  },
  {
    "text": "used to uh and so you have to consider things like that might get easier to for the same reason because now again you're",
    "start": "4221040",
    "end": "4227679"
  },
  {
    "text": "you're decoding all the time and you're not using that cash I don't know so there's a whole bunch of things where like decoders are putting more pressure",
    "start": "4227679",
    "end": "4234600"
  },
  {
    "text": "you have to have much smarter designers working much harder I think to deal with the EX4 side of that but does that end",
    "start": "4234600",
    "end": "4241400"
  },
  {
    "text": "up being a real uh crippling factor for low power I just don't know and again we",
    "start": "4241400",
    "end": "4246719"
  },
  {
    "text": "are seeing Intel and AMD make some pretty impressive gains there and so at some point you you know it may just be",
    "start": "4246719",
    "end": "4252880"
  },
  {
    "text": "like no actually they they managed to figure it out and and it doesn't really handicap them very much and you know if",
    "start": "4252880",
    "end": "4259560"
  },
  {
    "text": "it's if we're talking about 0.5% or 1% or something like that that only matters",
    "start": "4259560",
    "end": "4265040"
  },
  {
    "text": "at the very very limit if everyone else did exactly the same stuff exactly the same way you would get a little bit out of it right but it's not going to be 10%",
    "start": "4265040",
    "end": "4272840"
  },
  {
    "text": "20% twice as fast half the power any of that stuff right so you know that's my",
    "start": "4272840",
    "end": "4278719"
  },
  {
    "text": "that's that's my guess but you know it's just a guess I can't believe we we're doing all of this just to run JavaScript",
    "start": "4278719",
    "end": "4285280"
  },
  {
    "text": "I mean just who would have thought huh Society if you know well the hardware",
    "start": "4285280",
    "end": "4290640"
  },
  {
    "text": "companies love it I mean they want you to run JavaScript because if you were to start using the chip very efficiently",
    "start": "4290640",
    "end": "4296320"
  },
  {
    "text": "how do they sell the next chip right it's very very true Ginger Bill currently in shambles right now as you",
    "start": "4296320",
    "end": "4301679"
  },
  {
    "text": "say that yeah well yeah they I'm sure they don't they don't want to help him at all right they don't they don't want",
    "start": "4301679",
    "end": "4307280"
  },
  {
    "text": "to hear about that uh they they want to hear about JavaScript it's like tell me more about this JavaScript uh yeah I",
    "start": "4307280",
    "end": "4314880"
  },
  {
    "text": "mean you know so anyway uh was I didn't want to leave anything uh inaccurate for",
    "start": "4314880",
    "end": "4320000"
  },
  {
    "text": "chat like I said is was there anything people were were particularly unhappy about because we can go over that in more detail just at the end here because",
    "start": "4320000",
    "end": "4325920"
  },
  {
    "text": "I think we're mostly yeah yeah yeah we can call ourselves done if you will but uh here let me let me just I'll make you small you can go back to regular regular",
    "start": "4325920",
    "end": "4333280"
  },
  {
    "text": "Casey and I have all the chats up and if any I I my guess is that there",
    "start": "4333280",
    "end": "4340120"
  },
  {
    "text": "probably isn't much uh everyone seemed to be very very happy with it I think there's just some small things",
    "start": "4340120",
    "end": "4346719"
  },
  {
    "text": "around just at very very tiny points like an arm thing or something because",
    "start": "4346719",
    "end": "4352280"
  },
  {
    "text": "again I should also mention since I don't do arm every day uh like I it's it's not I'm not even going to know some",
    "start": "4352280",
    "end": "4359360"
  },
  {
    "text": "of the small things to mention as well uh which would would be true because you know it's it's something that I only",
    "start": "4359360",
    "end": "4365560"
  },
  {
    "text": "look at occasionally whereas x64 is really where I where I live I probably should learn more arm natively because",
    "start": "4365560",
    "end": "4372760"
  },
  {
    "text": "you know over time it becomes more important but yeah is there anything people wanted to mention or just get get in the Stream So that it's not",
    "start": "4372760",
    "end": "4378600"
  },
  {
    "text": "inaccurate a lot of people are just saying they're having side discussions about what was being discussed they just kind of going into bigger and smaller",
    "start": "4378600",
    "end": "4385040"
  },
  {
    "text": "things uh a lot of people apparently there's just a giant even new crazy um",
    "start": "4385040",
    "end": "4390920"
  },
  {
    "text": "dhh drama I saw a lot of that happening Matt apparently went after dhh and it's gotten insane out there uh but here so",
    "start": "4390920",
    "end": "4398360"
  },
  {
    "text": "while we were talking yeah while we were talking new drama dropped I did actually",
    "start": "4398360",
    "end": "4403480"
  },
  {
    "text": "I did actually uh grab both of them right here and so I I was going to I was going to look at that here shortly by",
    "start": "4403480",
    "end": "4409639"
  },
  {
    "text": "the way if you want to go back to a full camera mode you won't be a tiny Casey in a tiny box let's do",
    "start": "4409639",
    "end": "4417519"
  },
  {
    "text": "it let's see uh let's see the only ones I guess there's a lot of uh let's see can we ask Casey some questions I don't",
    "start": "4420199",
    "end": "4426239"
  },
  {
    "text": "understand why hundreds of instructions exist you have an add let's see you have an add a six bits six bits constant it",
    "start": "4426239",
    "end": "4434440"
  },
  {
    "text": "makes sense to use a literal encoding in these bits in the instruction so you don't need to decode these bits okay",
    "start": "4434440",
    "end": "4440120"
  },
  {
    "text": "hold on that I'm a little bit confused I had a lot of questions in the stes okay there's a lot of questions apparently in some sort of thread oh look at this oh I",
    "start": "4440120",
    "end": "4445600"
  },
  {
    "text": "missed it I've never seen something like this that's why I was reading it all goofy so a lot of questions in this thread says here's some questions okay",
    "start": "4445600",
    "end": "4453400"
  },
  {
    "text": "let's see if I can find anyone that uh that is interesting so first why do we have so many instructions why why do",
    "start": "4453400",
    "end": "4458679"
  },
  {
    "text": "hundreds of instructions say exist in modern like arm processors I understand",
    "start": "4458679",
    "end": "4464199"
  },
  {
    "text": "we at least understand some the x86 stuff there's a lot of historical reasons you have ad 16 AD 32 ad 64",
    "start": "4464199",
    "end": "4470480"
  },
  {
    "text": "dropping any of those why why do all those exist why are there so many instructions if that's an appropriate",
    "start": "4470480",
    "end": "4477280"
  },
  {
    "text": "question it's an it's an appropriate question and um I guess it depends the",
    "start": "4477280",
    "end": "4483480"
  },
  {
    "text": "the the real answer is a lot of reasons right but I can give you an example that",
    "start": "4483480",
    "end": "4488679"
  },
  {
    "text": "hopefully will let you imagine all the kinds of regions that reasons there are so CPUs have gone from being single",
    "start": "4488679",
    "end": "4498280"
  },
  {
    "text": "instruction single data right so add one number to another number uh they've gone",
    "start": "4498280",
    "end": "4503880"
  },
  {
    "text": "from that to single instruction multiple data which means you could do ads now",
    "start": "4503880",
    "end": "4509280"
  },
  {
    "text": "and you can do them by you know wide so four numbers added to four other numbers produces four results right eight",
    "start": "4509280",
    "end": "4516560"
  },
  {
    "text": "numbers added to eight other numbers equals eight results and so on these",
    "start": "4516560",
    "end": "4522400"
  },
  {
    "text": "instructions add to the bulk so if you thought that you needed 40 instructions",
    "start": "4522400",
    "end": "4527600"
  },
  {
    "text": "to do all the things you were going to do on individual numbers well you probably need at least 40 more instructions to do things on the wide",
    "start": "4527600",
    "end": "4534560"
  },
  {
    "text": "versions and you might if you added them in different ways you might actually have multiple copies of those",
    "start": "4534560",
    "end": "4539880"
  },
  {
    "text": "instructions because you've got like the ones that are four wide and the ones that are eight wide and the ones that are 16 wide and then you also have all",
    "start": "4539880",
    "end": "4546639"
  },
  {
    "text": "kinds of new things that are about how to move things between you know themselves so one reason is just",
    "start": "4546639",
    "end": "4552880"
  },
  {
    "text": "processors went simy another reason is anytime CPU designers",
    "start": "4552880",
    "end": "4560040"
  },
  {
    "text": "uh are looking at what their customers are doing and looking at benchmarks they're often saying things",
    "start": "4560040",
    "end": "4566040"
  },
  {
    "text": "like well okay we could get way more performance on this very common very important Benchmark if we had an",
    "start": "4566040",
    "end": "4572480"
  },
  {
    "text": "instruction that did this loaded four values and put them into two different",
    "start": "4572480",
    "end": "4579239"
  },
  {
    "text": "registers in this way or so Weir there's some statistical like this one operation just keeps happening because it turns",
    "start": "4579239",
    "end": "4584760"
  },
  {
    "text": "out out left pad does this one thing and the universe runs off left pad and so it's like here's my super special instruction for this one common use case",
    "start": "4584760",
    "end": "4592320"
  },
  {
    "text": "get you get those and those are there because they're trying to ma excuse me they're trying to maximize that",
    "start": "4592320",
    "end": "4598159"
  },
  {
    "text": "Benchmark and so even though that's not a smart instruction to put in an instruction set it doesn't make sense",
    "start": "4598159",
    "end": "4604360"
  },
  {
    "text": "from the perspective of we want a nice clean simple design for this chip that only does a few things and we want to",
    "start": "4604360",
    "end": "4611159"
  },
  {
    "text": "minimize what people have to learn and what the compiler has to output and all they're just like look we need this",
    "start": "4611159",
    "end": "4616480"
  },
  {
    "text": "instruction over perform B on this Benchmark so it's in there right and they know that they don't want to put",
    "start": "4616480",
    "end": "4621560"
  },
  {
    "text": "that in there they know that it's like kind of clumsy and it's like they just but that's what they need this has gotten horrible especially with things",
    "start": "4621560",
    "end": "4627960"
  },
  {
    "text": "like AI video encoding string search there's all these special purpose",
    "start": "4627960",
    "end": "4633000"
  },
  {
    "text": "instructions that are just there to speed that up and arm has to do that too they can't not do it right they can't",
    "start": "4633000",
    "end": "4638040"
  },
  {
    "text": "just be like no we're simple because they're trying to compete with Intel they're trying to compete with powerpc",
    "start": "4638040",
    "end": "4643199"
  },
  {
    "text": "they're trying to compete with risk 5 whatever what you know whoever it is at the time there are people out there",
    "start": "4643199",
    "end": "4648840"
  },
  {
    "text": "doing other ises and arm is in a licensing because they have to have ways that people can you know use their",
    "start": "4648840",
    "end": "4654440"
  },
  {
    "text": "standard structure set and get good performance so if you take something like arm now it even has two entire",
    "start": "4654440",
    "end": "4661800"
  },
  {
    "text": "instruction domains for those wide kinds of instructions I'm talking about there's a thing called neon which was",
    "start": "4661800",
    "end": "4667480"
  },
  {
    "text": "the original wide instruction set for doing those you know multiple things that's a whole new set of instructions",
    "start": "4667480",
    "end": "4672880"
  },
  {
    "text": "that adds to the total there's a they enter a new one that's a vector instruction set called sve which is a",
    "start": "4672880",
    "end": "4679679"
  },
  {
    "text": "variable length in uh Vector instruction set so that's a whole another set of instructions completely different than",
    "start": "4679679",
    "end": "4685480"
  },
  {
    "text": "neon for doing the same thing and that's an arm the supposedly risk right which",
    "start": "4685480",
    "end": "4690960"
  },
  {
    "text": "that's why I say it's ridiculous to call it risk anymore it is not risk it is incredibly complicated right um and we",
    "start": "4690960",
    "end": "4697040"
  },
  {
    "text": "didn't mention this in uh we didn't mention this in the actual me of the stream but I'll say it here just in case people are wondering some people have",
    "start": "4697040",
    "end": "4704960"
  },
  {
    "text": "retreated to the concept that what risk actually means is just can you do memory",
    "start": "4704960",
    "end": "4711400"
  },
  {
    "text": "can you do a memory fetch along with instruction or not and that's it called",
    "start": "4711400",
    "end": "4716480"
  },
  {
    "text": "a load store architecture is often what this called nobody would have claim that's what risk was originally so I",
    "start": "4716480",
    "end": "4722360"
  },
  {
    "text": "don't consider that to be valid because it's even the name reduced instruction to computer there is nothing in there but reduced there's no claims about it",
    "start": "4722360",
    "end": "4729800"
  },
  {
    "text": "it happened that at the original ones that load and store were separate why because that's how you reduce the total number in C by not having all these",
    "start": "4729800",
    "end": "4736199"
  },
  {
    "text": "permutations of oh I can do an ad from reg treasure or an ad from register to memory and all these other sorts of things so in my opinion that's not",
    "start": "4736199",
    "end": "4743920"
  },
  {
    "text": "really a valid use of the term risk but if you wanted to just ignore the risk cisk debate or using that and just",
    "start": "4743920",
    "end": "4750239"
  },
  {
    "text": "ignore that it is true that arm is much closer to a pure load store architecture",
    "start": "4750239",
    "end": "4756040"
  },
  {
    "text": "than Intel Intel and we didn't really go over this when we had the stuff up but I'll just tell you it can still do",
    "start": "4756040",
    "end": "4762360"
  },
  {
    "text": "things like I want to add this register to this memory location and it will read the memory location and add it to the",
    "start": "4762360",
    "end": "4768960"
  },
  {
    "text": "register as one instruction that's encoded I feel like we went over this last time with the x86 needs to die you",
    "start": "4768960",
    "end": "4775719"
  },
  {
    "text": "showed me like this is memory to memory constant constant variable to variable right like you had all these different kind of I think they got rid of memory",
    "start": "4775719",
    "end": "4782199"
  },
  {
    "text": "to memory but yes the original 80 886 though did have act actually had memory to memory um and so if you look at that",
    "start": "4782199",
    "end": "4790679"
  },
  {
    "text": "uh risk uh sorry if you looked at that and said forget risk think load store architecture arm you could say that",
    "start": "4790679",
    "end": "4797880"
  },
  {
    "text": "about it's like in arm generally speaking most of the time your loads and stores are individual instructions that",
    "start": "4797880",
    "end": "4804400"
  },
  {
    "text": "you see they are not they cannot be baked the loads cannot be baked into uh",
    "start": "4804400",
    "end": "4809639"
  },
  {
    "text": "instructions whereas on Intel loads can be baked into other instructions so I just throw that out there as well that's",
    "start": "4809639",
    "end": "4815400"
  },
  {
    "text": "that's a side point but anyway hopefully that's where do all these instructions come from they come from processor manufacturers thinking they got to",
    "start": "4815400",
    "end": "4821239"
  },
  {
    "text": "Target something and doing that thing and then the other place is system control",
    "start": "4821239",
    "end": "4826360"
  },
  {
    "text": "stuff monitor are very complicated we get all these additional things the CPU needs to enter a lower power state right",
    "start": "4826360",
    "end": "4832920"
  },
  {
    "text": "now uh that's got to be some there's gotta be structure to that the CPU has to wait on a change to a cash line uh",
    "start": "4832920",
    "end": "4839360"
  },
  {
    "text": "and enter a low power State until then we got to have instructure for that uh we got a transition from this security",
    "start": "4839360",
    "end": "4845199"
  },
  {
    "text": "ring to this other security ring things that you never would have thought about in a home computer maybe are now all",
    "start": "4845199",
    "end": "4851040"
  },
  {
    "text": "those instructions have to be there and arm has to have them arm has to be able to run the same kinds of security rings",
    "start": "4851040",
    "end": "4856440"
  },
  {
    "text": "and memory protection and all these other sorts of stuff so you know you get a bunch of instruction for that kind of",
    "start": "4856440",
    "end": "4861600"
  },
  {
    "text": "crap too and it's not nothing right that piles up so that's where all these",
    "start": "4861600",
    "end": "4867159"
  },
  {
    "text": "instructions come from targeting benchmarks expanding the capabilities of the processor and just you know system",
    "start": "4867159",
    "end": "4873080"
  },
  {
    "text": "maintenance system op stuff hopefully that answers the question but yeah no that's that's a that is a great",
    "start": "4873080",
    "end": "4879199"
  },
  {
    "text": "explanation and it just it again that makes so much sense cuz in any form of software I've ever developed as time",
    "start": "4879199",
    "end": "4886360"
  },
  {
    "text": "went on you just you have to just put stuff on top and you can't just clean break so it's just like this this",
    "start": "4886360",
    "end": "4892320"
  },
  {
    "text": "already exists in my mind and it exists in everyone's mind in this chat that this is just a regular way of life and",
    "start": "4892320",
    "end": "4898639"
  },
  {
    "text": "so it's worth it's worth remembering that nobody is hardwiring all those instructions right yeah they do have a",
    "start": "4898639",
    "end": "4905239"
  },
  {
    "text": "cost yes but it's not like the actual core of the CPU has a bunch of actual circuitry to do those Specific",
    "start": "4905239",
    "end": "4912840"
  },
  {
    "text": "Instructions so that you actually have you know if you have 10,000 instructions you don't have 10,000 little parts of",
    "start": "4912840",
    "end": "4919520"
  },
  {
    "text": "the chip that each execute one of those instructions it doesn't work that way it's micr coded so basically all of your",
    "start": "4919520",
    "end": "4926080"
  },
  {
    "text": "instructions that aren't very basic like ad or something are actually just doing lots of little mini instructions to",
    "start": "4926080",
    "end": "4933320"
  },
  {
    "text": "accomplish that weird system control thing that you were doing right yeah so the cost for having a lot of those",
    "start": "4933320",
    "end": "4940040"
  },
  {
    "text": "instructions isn't very high you care more about the decode implications of of them probably most of the time than the",
    "start": "4940040",
    "end": "4947560"
  },
  {
    "text": "micro code implications because like you just don't care you're not you're not typically executing those weird",
    "start": "4947560",
    "end": "4952639"
  },
  {
    "text": "instructions they're not the bulk of your hot Loops or anything so that it's it it matters less that there are a ton",
    "start": "4952639",
    "end": "4959000"
  },
  {
    "text": "of instructions than people would think um because of what a lot of those instructions are just not that critical",
    "start": "4959000",
    "end": "4964840"
  },
  {
    "text": "that's what I'd say nice well I really appreciate having you on here this was",
    "start": "4964840",
    "end": "4970280"
  },
  {
    "text": "this was absolutely fantastic and we should um I'd like to set up some sort of more formalized QA Q&A in the future if you",
    "start": "4970280",
    "end": "4978520"
  },
  {
    "text": "want to do if you want to do another thing if you want to talk about any other topic just let us know and we should do another kind of a fun one of",
    "start": "4978520",
    "end": "4985600"
  },
  {
    "text": "these because this was just absolutely F again this is just the side of the computer world I never get to learn",
    "start": "4985600",
    "end": "4990920"
  },
  {
    "text": "about and just not due to desire but just time you know how it all goes we all have our areas of focus so",
    "start": "4990920",
    "end": "4997600"
  },
  {
    "text": "absolutely awesome so appreciate that well I'm happy to come back anytime as you know so I mean maybe just whatever",
    "start": "4997600",
    "end": "5003159"
  },
  {
    "text": "the chat wants I mean hopefully like I said there's some things I just don't know anything about so if you want to ask questions about the arm instruction",
    "start": "5003159",
    "end": "5009440"
  },
  {
    "text": "set I can't help you right cuz I but if you want to ask questions about x86 I got you covered so it's usually like",
    "start": "5009440",
    "end": "5015159"
  },
  {
    "text": "yeah as long as it's something I know about I'd love to come on I I always love the stream it's it's uh it's fantastic uh so I love the invitation",
    "start": "5015159",
    "end": "5022440"
  },
  {
    "text": "anytime really really anytime okay cool I'm glad to know that because that's that's why I invited you to begin with",
    "start": "5022440",
    "end": "5027480"
  },
  {
    "text": "because I was like I need I put Casey back anytime anytime sneak him in and just bait him with some sort of odd",
    "start": "5027480",
    "end": "5033199"
  },
  {
    "text": "open-ended question tell me the differ no I just I'm happy to just I'm happy to come and just hang out and watch you",
    "start": "5033199",
    "end": "5038719"
  },
  {
    "text": "explain this ridiculous WordPress stuff so I I love the stream anytime really uh I love the chat every everyone's great",
    "start": "5038719",
    "end": "5045120"
  },
  {
    "text": "so thanks for having me and anytime you want me back I'm here okay I will uh we'll I'll get chat to um uh come up",
    "start": "5045120",
    "end": "5051760"
  },
  {
    "text": "with some good questions also TJ says we're gonna we should have you just on the top top shelf where we actually come up with more in-depth questions than as",
    "start": "5051760",
    "end": "5058560"
  },
  {
    "text": "opposed to just like topical but more just like how' you get here kind of questions the bigger the bigger pictures",
    "start": "5058560",
    "end": "5064080"
  },
  {
    "text": "of Casey is uh because I think that would be a lot of fun so we'll have you come on uh for that as well if you're",
    "start": "5064080",
    "end": "5070360"
  },
  {
    "text": "okay with that sure anytime anytime literally awesome love to hear it well thanks Prime all right have a good luck",
    "start": "5070360",
    "end": "5078040"
  },
  {
    "text": "with d whoa whoa before you go we can't forget the most important part it's",
    "start": "5078040",
    "end": "5083080"
  },
  {
    "text": "computer enhanced. comom correct if you want to find me computer enhanced. comom",
    "start": "5083080",
    "end": "5088239"
  },
  {
    "text": "you got to go don't be a loser be a winner enhance that computer yes zoom in",
    "start": "5088239",
    "end": "5096159"
  },
  {
    "text": "all right well thank you Casey thanks Prime have a good one byebye",
    "start": "5096159",
    "end": "5101960"
  }
]