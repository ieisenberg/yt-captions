[
  {
    "text": "so let's talk about this amazing uh Benchmark that that keeps I just I wish",
    "start": "359",
    "end": "7640"
  },
  {
    "text": "they would stop but they wouldn't stop we talked about the loops thing y Unfortunately they then continued and uh",
    "start": "7640",
    "end": "15400"
  },
  {
    "text": "they did this uh Levenstein distance bit for those who don't know leein is what",
    "start": "15400",
    "end": "21720"
  },
  {
    "text": "you take two words and it calculates the difference between them based on letters it's like it's like add remove and the",
    "start": "21720",
    "end": "28039"
  },
  {
    "text": "same it's it's like it's kind of like alith in some amount yes uh and so it's",
    "start": "28039",
    "end": "34760"
  },
  {
    "text": "just a way of comparing two strings you could think of it it's like a it gives you a comparison of two strings that's",
    "start": "34760",
    "end": "39960"
  },
  {
    "text": "you know trying to be some something about their similarity right like how this is betx two strings if you will",
    "start": "39960",
    "end": "46480"
  },
  {
    "text": "yeah um and uh and of course then we got another one of these bouncing ball",
    "start": "46480",
    "end": "52280"
  },
  {
    "text": "things right oh man forr kicking C's ass and and and the person who made this",
    "start": "52280",
    "end": "59239"
  },
  {
    "text": "posted literally a tweet uh in fact I don't know if we can get the oh you",
    "start": "59239",
    "end": "64720"
  },
  {
    "text": "can't guess on here because I'm not logged in I guess to on Twitter you can't do that anymore but posted a tweet that was like Fortran out there really",
    "start": "64720",
    "end": "71560"
  },
  {
    "text": "impressing was the was the slug for this",
    "start": "71560",
    "end": "77360"
  },
  {
    "text": "uh I guess I'll call it a graph but that's being charitable right this this thing whatever this is and they said",
    "start": "77360",
    "end": "84560"
  },
  {
    "text": "that of course because if you look and you you can't see it neither can I but if I zoom in here on the top in a way",
    "start": "84560",
    "end": "90520"
  },
  {
    "text": "that would make it actually visible what you can see is that Fortran is outperforming C even not to mention all",
    "start": "90520",
    "end": "99439"
  },
  {
    "text": "of these other languages you're talking about Odin zigg uh my favorite is that Objective C beats rust I I mean I I",
    "start": "99439",
    "end": "106680"
  },
  {
    "text": "personally just I just love to see it can't rust obviously and not by a little",
    "start": "106680",
    "end": "112920"
  },
  {
    "text": "right Fortran is crushing these languages right it's like ginger Bill what were you doing why does it take 10",
    "start": "112920",
    "end": "119920"
  },
  {
    "text": "milliseconds longer to run this in Odin than it does in Fortran which has been around since the 70s right 57 if I'm not",
    "start": "119920",
    "end": "128039"
  },
  {
    "text": "mistaken 60s sorry yeah 60s um what's going on you guys just don't know how to",
    "start": "128039",
    "end": "133720"
  },
  {
    "text": "program all of you people in the bottom of the list right that's obviously what's going on um and and that's the",
    "start": "133720",
    "end": "140440"
  },
  {
    "text": "problem because again that I'm saying that in just obviously but people believe that like when you Tweet stuff",
    "start": "140440",
    "end": "147200"
  },
  {
    "text": "like this when you do a benchmark like this that's done very poorly and you tweet something like this people don't",
    "start": "147200",
    "end": "154440"
  },
  {
    "text": "take it with the grain of salt they literally think this means that zigg is is half the speed of Fortran yeah that's",
    "start": "154440",
    "end": "161760"
  },
  {
    "text": "what they think they get hit with that that's what they that's what they think right I guarantee you that there's a",
    "start": "161760",
    "end": "167560"
  },
  {
    "text": "bunch of people who are like oh wow if I took my Zig code and rote it in Fortran",
    "start": "167560",
    "end": "172599"
  },
  {
    "text": "it would be twice as fast is what they're thinking in their head yeah which is also a really hilarious tweet",
    "start": "172599",
    "end": "177840"
  },
  {
    "text": "to be like why choose Zig when you could just choose for trying and get double the speed right and so at that point it's",
    "start": "177840",
    "end": "186319"
  },
  {
    "text": "creating a real problem it's creating a real misperception this is not a harmless thing to have get traction if",
    "start": "186319",
    "end": "192200"
  },
  {
    "text": "this was just someone tweeting into the void that would be fine but for some reason people are paying attention to this I really don't know why I guess",
    "start": "192200",
    "end": "198680"
  },
  {
    "text": "just because it feeds into their ability to make their own stuff or make their own quick comments without looking into",
    "start": "198680",
    "end": "205599"
  },
  {
    "text": "things further so it's unfortunate but as a result this is a very damaging thing that has happened because these",
    "start": "205599",
    "end": "212000"
  },
  {
    "text": "graphs are out there and people are create that is an inference that they are making about these languages I",
    "start": "212000",
    "end": "218840"
  },
  {
    "text": "randomly picked Zig in that case but obviously it's true for all of these right yeah it's true for any of the ones",
    "start": "218840",
    "end": "224280"
  },
  {
    "text": "that are up on here and there are some languages down at the bottom like Ruby and Python and stuff that are going way",
    "start": "224280",
    "end": "229799"
  },
  {
    "text": "way slower so maybe you're not making a real comparison between those two like maybe people aren't comparing the bottom",
    "start": "229799",
    "end": "235840"
  },
  {
    "text": "of the list to the top so often but tons of people are looking at this top list",
    "start": "235840",
    "end": "241040"
  },
  {
    "text": "and going oh wow yeah you know like Fortran twice as fast as all of these languages twice as fast as go it must be",
    "start": "241040",
    "end": "248000"
  },
  {
    "text": "the garbage collector right they're making all of these statements but no one's looking right no",
    "start": "248000",
    "end": "253840"
  },
  {
    "text": "one's actually looking to see why and we showed that on the last time when that",
    "start": "253840",
    "end": "258880"
  },
  {
    "text": "that really bad part of this Benchmark the loops test in this Benchmark I was kind of trying to give people some",
    "start": "258880",
    "end": "264840"
  },
  {
    "text": "perspective on why that was such a bad Benchmark well here's the Levenstein distance what let's talk about why this",
    "start": "264840",
    "end": "271120"
  },
  {
    "text": "is such a bad Benchmark well there's a number of reasons why it's a bad Benchmark that are subtle like the last",
    "start": "271120",
    "end": "277600"
  },
  {
    "text": "time but let's just start with one that's not so subtle which is why Fortran is performing so well on this",
    "start": "277600",
    "end": "285680"
  },
  {
    "text": "Benchmark relative to languages even like C that's a significant difference that's that's over 10% uh speed",
    "start": "285680",
    "end": "293199"
  },
  {
    "text": "difference even then C let alone these other languages Zig should just be",
    "start": "293199",
    "end": "298919"
  },
  {
    "text": "compiling like see right C rust Odin uh Zig I would just",
    "start": "298919",
    "end": "305000"
  },
  {
    "text": "assume they all should thetically behave the same especially since I think they all have llvm anyways like they're all",
    "start": "305000",
    "end": "311680"
  },
  {
    "text": "using lvm back end so so what's going on here right like I don't reliably think",
    "start": "311680",
    "end": "317479"
  },
  {
    "text": "it's good so Fortran let's just take just the reason why why is Fortran sorry",
    "start": "317479",
    "end": "322560"
  },
  {
    "text": "what it's cheating obviously Fortran somehow skirting around work um well that's one way to say it",
    "start": "322560",
    "end": "329080"
  },
  {
    "text": "but let's take let's take a closer look at what's going on here cuz cuz that's that saying that might be generous let's",
    "start": "329080",
    "end": "337400"
  },
  {
    "text": "say um so let's start by doing what I again I encourage everyone to look into",
    "start": "337400",
    "end": "345240"
  },
  {
    "text": "these things like learn more look into them don't take this sort of stuff uh at face value because you",
    "start": "345240",
    "end": "352840"
  },
  {
    "text": "know it's very common nowadays that a benchmark will be made by someone who doesn't really know what they're doing",
    "start": "352840",
    "end": "359039"
  },
  {
    "text": "and so if you just just take it at face value all the time you're going to be uh badly misled right yeah um so anyway",
    "start": "359039",
    "end": "366400"
  },
  {
    "text": "let's start by pasting the C version in as I always like to do here uh into",
    "start": "366400",
    "end": "372080"
  },
  {
    "text": "godbolt I forget how hard that algorithm is it's a lot of four Loops I remember that now okay uh yeah and uh I don't",
    "start": "372080",
    "end": "379960"
  },
  {
    "text": "know this looks like it's visible enough on stream hopefully the compression is not kind of sucks but we we'll we'll",
    "start": "379960",
    "end": "386919"
  },
  {
    "text": "just try to get through it we'll roll with it um so okay so what I'm going to do here",
    "start": "386919",
    "end": "392800"
  },
  {
    "text": "is I'm just going to uh use GCC in this case because G4 Tran is probably what",
    "start": "392800",
    "end": "400400"
  },
  {
    "text": "I'm assuming what they were using uh to compile with but it's a it's a Fortran compiler we could use so we can you",
    "start": "400400",
    "end": "406000"
  },
  {
    "text": "compare sort of very like to like right G4 TR and GCC I you can find out actually pretty easy with that one uh I",
    "start": "406000",
    "end": "411759"
  },
  {
    "text": "can find out yeah there's a build there's a build dos you can look at but I'm assuming they're using G4 Tran but",
    "start": "411759",
    "end": "417280"
  },
  {
    "text": "even if they're not it this is fine for us because you know we can run I'll run it with G4",
    "start": "417280",
    "end": "423120"
  },
  {
    "text": "Trend so we'll be able to see and verify the results in a second here so if we go ahead and do an",
    "start": "423120",
    "end": "430759"
  },
  {
    "text": "optimized build in GCC of our C code I'll save everyone the trouble of trying",
    "start": "430759",
    "end": "436039"
  },
  {
    "text": "to read all this uh on stream obviously and just explain that this part right here uh of the of the code is sort of",
    "start": "436039",
    "end": "444840"
  },
  {
    "text": "the heavyweight part what I mean by that is if you look at the way this code is",
    "start": "444840",
    "end": "450360"
  },
  {
    "text": "structured there's a main Loop out here that Loops through all pairs of strings so it's n squ if you if you pass this",
    "start": "450360",
    "end": "456800"
  },
  {
    "text": "thing n strings it has to do n squ comparisons and the only exception to that is that it's not going to compare a",
    "start": "456800",
    "end": "463479"
  },
  {
    "text": "string to itself because it knows the distance is zero uh for that right but",
    "start": "463479",
    "end": "469000"
  },
  {
    "text": "it means there's an N squ loop on the outside and then the strings themselves get looped over so there's like another",
    "start": "469000",
    "end": "475879"
  },
  {
    "text": "n squ loop on the inside so that means there's an n s Loop running an N squ",
    "start": "475879",
    "end": "480919"
  },
  {
    "text": "Loop so this is like an end to the Fourth Kind of a situation right yeah yeah that sounds right which means that",
    "start": "480919",
    "end": "486919"
  },
  {
    "text": "this is the hots spot of the program for all intents and purposes this is what will be run the most so barring other",
    "start": "486919",
    "end": "495039"
  },
  {
    "text": "kinds of issues which of course there can be so you know when I looked at this I was looking at it pretty carefully but I'm skipping a",
    "start": "495039",
    "end": "501720"
  },
  {
    "text": "bunch this is where we would expect the time to concentrate if the programmer or the language hasn't done anything too",
    "start": "501720",
    "end": "508560"
  },
  {
    "text": "stupid about other things like if they haven't inserted some really ridiculous",
    "start": "508560",
    "end": "513800"
  },
  {
    "text": "stuff elsewhere in the program our time is going to be spent inside this Loop",
    "start": "513800",
    "end": "519279"
  },
  {
    "text": "that's what's going to happen so the first thing I do here just to like you know because it's free for",
    "start": "519279",
    "end": "525240"
  },
  {
    "text": "me to do it I just you know I could do it while I'm reading Twitter and I see this thing pass by I go okay where is",
    "start": "525240",
    "end": "531600"
  },
  {
    "text": "this what's happening here like where is this Loop existing and I want to come",
    "start": "531600",
    "end": "537320"
  },
  {
    "text": "over here and just find it see if I can find it and what we can see is it it's basically right here this is the loop can I kind",
    "start": "537320",
    "end": "545279"
  },
  {
    "text": "of dumb question yes is there any reason for The Coloring other than showing you just separate",
    "start": "545279",
    "end": "551640"
  },
  {
    "text": "statements it corresponds the two together to a certain extent right so do you see how that's green and this is",
    "start": "551640",
    "end": "557959"
  },
  {
    "text": "green yeah I was wondering is there like a reason is there like a certain type of statement that's always gets highlighted green versus a certain type of statement",
    "start": "557959",
    "end": "564360"
  },
  {
    "text": "that always gets highlighted red or is this always just because I I just have always just looked at as random colors so I just wasn't sure just trying to",
    "start": "564360",
    "end": "570079"
  },
  {
    "text": "disig for your eyes it corresponds side to side okay okay so it's just for you",
    "start": "570079",
    "end": "575399"
  },
  {
    "text": "to be able to help look into this graph just to make sure yeah so like when I'm hovering over you'll notice it's like it",
    "start": "575399",
    "end": "581640"
  },
  {
    "text": "highlights that is this code is for this right or whatever that's what the highlighting is supposed to be telling",
    "start": "581640",
    "end": "587959"
  },
  {
    "text": "you that's what the color is to to correspond like this corresponds to",
    "start": "587959",
    "end": "593240"
  },
  {
    "text": "this right so they're both tan mhm that's it okay that's all it's trying to",
    "start": "593240",
    "end": "598279"
  },
  {
    "text": "do okay I wasn't sure if there's also like some sort of grouping of instructions also that infer some of these colors like oh when it's green you",
    "start": "598279",
    "end": "604040"
  },
  {
    "text": "know it's this if it's red you know it might mean this but okay that's fine I just sure it okay just side to side as",
    "start": "604040",
    "end": "611320"
  },
  {
    "text": "far as I know I don't I someone correct me if I'm wrong about that but I didn't think there was any other Rhyme or Reason of the color like oh it'll prefer",
    "start": "611320",
    "end": "617640"
  },
  {
    "text": "tan if it's a you know Declaration of of a constant or something I don't okay that I don't know uh but I I I don't I",
    "start": "617640",
    "end": "625000"
  },
  {
    "text": "certainly don't use it that way I'm just looking for correspondence there uh but I usually also just highlight like this",
    "start": "625000",
    "end": "630959"
  },
  {
    "text": "uh so you can just quickly see like what does it correspond to and that's not always accurate but at least because in an optimized build it's not always",
    "start": "630959",
    "end": "637399"
  },
  {
    "text": "accurate in an unoptimized build it is but in an but an optimized build it's not so when we are looking at it this is",
    "start": "637399",
    "end": "645000"
  },
  {
    "text": "that internal Loop this most innermost part here right uh is this code right",
    "start": "645000",
    "end": "650680"
  },
  {
    "text": "here so you know we don't really need to walk through to know what it does if you don't know a semi language you won't",
    "start": "650680",
    "end": "656120"
  },
  {
    "text": "necessarily know what that does but I'm looking at that and going like okay does that look reasonable to me yes it does",
    "start": "656120",
    "end": "663519"
  },
  {
    "text": "uh and you'll notice that even though just pointing out compilers are good these days right this is using a",
    "start": "663519",
    "end": "670160"
  },
  {
    "text": "function called Min that function is actually defined up here and it's basically saying look uh start with a if",
    "start": "670160",
    "end": "677639"
  },
  {
    "text": "B is less than that then pick B if C is less than either of those two whichever",
    "start": "677639",
    "end": "682800"
  },
  {
    "text": "one was lower then pick C right standard tary Min right here like a b and c",
    "start": "682800",
    "end": "690079"
  },
  {
    "text": "it's basically saying like Okay pick the lesser of those with some if statements right and what you'll notice is it is",
    "start": "690079",
    "end": "696920"
  },
  {
    "text": "was not declared inline but the compiler completely inlined it there's no call here right and also you'll notice no",
    "start": "696920",
    "end": "706120"
  },
  {
    "text": "branches so it looked at that and goes oh you know what I should Branch free that and so what it does instead is just",
    "start": "706120",
    "end": "713000"
  },
  {
    "text": "use conditional moves it does the comparison but then instead of branching around the assignment it just does a",
    "start": "713000",
    "end": "718079"
  },
  {
    "text": "conditional move m so that it doesn't have to have any branches either so GCC correctly inlines correctly removes the",
    "start": "718079",
    "end": "724639"
  },
  {
    "text": "branches you are good to go this looks pretty good to me so how is for what is",
    "start": "724639",
    "end": "732760"
  },
  {
    "text": "the Fortran code doing Prime that's going to beat this did they have some",
    "start": "732760",
    "end": "738240"
  },
  {
    "text": "kind of amazing vectorizer like this is very concise code I didn't spend a lot",
    "start": "738240",
    "end": "743800"
  },
  {
    "text": "of time figuring out if I could shave a cycle or two off it but it is not bad and the for code is outperforming the C",
    "start": "743800",
    "end": "750639"
  },
  {
    "text": "code by a lot right not to mention Zig and Odin and those other languages that were way worse right so what is the",
    "start": "750639",
    "end": "757360"
  },
  {
    "text": "Fortran code doing here I don't know but I'm excited right so let's take one more",
    "start": "757360",
    "end": "763639"
  },
  {
    "text": "step here and say okay let's add the Fortran code oops that H I didn't want",
    "start": "763639",
    "end": "770199"
  },
  {
    "text": "to do that okay good we're still here sorry we I accidentally clicked the wrong button we're still here here's",
    "start": "770199",
    "end": "775839"
  },
  {
    "text": "that code that we're talking about let's add the for code and see what it's doing",
    "start": "775839",
    "end": "781639"
  },
  {
    "text": "so I need Source editor and we'll put that down here and",
    "start": "781639",
    "end": "786920"
  },
  {
    "text": "I'll uh switch this to G4 Tran which I believe is supported by this does uh or",
    "start": "786920",
    "end": "792120"
  },
  {
    "text": "Fortran maybe not wait I was able to do this before I",
    "start": "792120",
    "end": "797959"
  },
  {
    "text": "know there is the for Trend oh I know why this is in the wrong language yeah I",
    "start": "797959",
    "end": "805800"
  },
  {
    "text": "need to add a different language how do I switch the language it's this there I'm like what the heck forr there it is",
    "start": "805800",
    "end": "812959"
  },
  {
    "text": "Fortran it was correctly giving you proper compilers I mean NE it's never",
    "start": "812959",
    "end": "818680"
  },
  {
    "text": "godbolt it's only going to be me right this this is you know the tool of of Champions well you can tell that a",
    "start": "818680",
    "end": "824480"
  },
  {
    "text": "champion built this because what is the only two options for editor standard notepad operation and Vin right like you",
    "start": "824480",
    "end": "831880"
  },
  {
    "text": "can tell the class it's a Mana class right here z uh what what would they say uh",
    "start": "831880",
    "end": "838759"
  },
  {
    "text": "Vim Vim Master race or something I don't know probably there you go you got it you got it okay um all right so do I",
    "start": "838759",
    "end": "846079"
  },
  {
    "text": "have let me see if I've got this set up right I seem to have i' I've definitely ruined something there's my C Source but",
    "start": "846079",
    "end": "851199"
  },
  {
    "text": "I lost one of my compilers so let's add new compiler here and try to get that",
    "start": "851199",
    "end": "856519"
  },
  {
    "text": "back sorry I no no it's looking good I I see everything you're doing it's looking it's looking right operator error right",
    "start": "856519",
    "end": "862120"
  },
  {
    "text": "uh but I just want both of these up at the same time so that you can see them both right okay so I'm going to do an 03",
    "start": "862120",
    "end": "869120"
  },
  {
    "text": "build in both G4 Tran uh versus GCC here uh like I'll scroll down again to uh our",
    "start": "869120",
    "end": "876000"
  },
  {
    "text": "our little friendly piece of code here um yep you can see the you can see",
    "start": "876000",
    "end": "881639"
  },
  {
    "text": "the inline right there in the gray there it is uh and maybe I'll try to do this slightly differently I guess uh in terms",
    "start": "881639",
    "end": "886759"
  },
  {
    "text": "of the way the windows are set up maybe because we want this to be fairly large maybe what I'll do is I'll just put this",
    "start": "886759",
    "end": "892720"
  },
  {
    "text": "uh below this so so that the uh the compiler the source is uh the compiled",
    "start": "892720",
    "end": "897839"
  },
  {
    "text": "version is below so that we can have that be big because once we find the location all we really need to look at",
    "start": "897839",
    "end": "903600"
  },
  {
    "text": "is that code gen to see what it's doing right so let's take a look at the Fortran version now uh again I have to",
    "start": "903600",
    "end": "909720"
  },
  {
    "text": "kind of go grab it here from the the Fortran version for is there a wait let's you open that notepad++ I guess",
    "start": "909720",
    "end": "917920"
  },
  {
    "text": "the Lord editor by the way Fortran pretty nice looking languages these days you know looks it it looks pretty simple",
    "start": "917920",
    "end": "924120"
  },
  {
    "text": "yeah I had to do lot of for back in the day when you couldn't use the first seven columns and so like really is that",
    "start": "924120",
    "end": "930079"
  },
  {
    "text": "yeah older fortrend was a really horrifying language I mean that it looks like you could use that you could be",
    "start": "930079",
    "end": "935880"
  },
  {
    "text": "productive in that if you want to well unsurprisingly Fortran pretty much looks exactly like the C code too right so",
    "start": "935880",
    "end": "942000"
  },
  {
    "text": "there's nothing much going on here if I pull this back down for a second here you can see same exact thing you got a",
    "start": "942000",
    "end": "947639"
  },
  {
    "text": "and a do do I think is what they have and a do do you know nothing it's just a",
    "start": "947639",
    "end": "952759"
  },
  {
    "text": "little dooo a little dooo in the uh in the code there so let's try and find uh",
    "start": "952759",
    "end": "958600"
  },
  {
    "text": "where it's actually doing this right let's try and find the place that that actually compiled to um where it's doing",
    "start": "958600",
    "end": "965959"
  },
  {
    "text": "this interior part like the Min here right to see uh what is what is it doing",
    "start": "965959",
    "end": "971040"
  },
  {
    "text": "like what's it doing differently that's so amazing and I I wish I had not quite expanded it out there because I need to",
    "start": "971040",
    "end": "976440"
  },
  {
    "text": "be able to find uh this part which is harder to do on stream than you would think yeah but",
    "start": "976440",
    "end": "982959"
  },
  {
    "text": "anytime you need to do something in front of people it always gets twice as hard it always is right should be right",
    "start": "982959",
    "end": "989199"
  },
  {
    "text": "around here and it should have uh very",
    "start": "989199",
    "end": "994560"
  },
  {
    "text": "similar structure right um to there it is there it is right",
    "start": "994560",
    "end": "1000880"
  },
  {
    "text": "there okay found it there's this yeah there's the conditional moves you can see them so they're avoiding the",
    "start": "1000880",
    "end": "1007480"
  },
  {
    "text": "branching so here's the code gen and what you will notice is even if you",
    "start": "1007480",
    "end": "1012519"
  },
  {
    "text": "don't know anything about a semi language it is shockingly similar right",
    "start": "1012519",
    "end": "1017959"
  },
  {
    "text": "yeah I mean to the point where you've got the exact same techniques being used here the instruction ordering is",
    "start": "1017959",
    "end": "1024000"
  },
  {
    "text": "slightly different that Lea is like slightly it's like in between the two on",
    "start": "1024000",
    "end": "1029600"
  },
  {
    "text": "this side and it's not on that side but it's the exact same code and the only",
    "start": "1029600",
    "end": "1035520"
  },
  {
    "text": "difference here the only difference is that the Fortran the G4 Tran compiler",
    "start": "1035520",
    "end": "1040720"
  },
  {
    "text": "for some reason has decided to unroll the loop one additional time so this",
    "start": "1040720",
    "end": "1046839"
  },
  {
    "text": "code as you can see gets repeated did right one more time here before it does",
    "start": "1046839",
    "end": "1053160"
  },
  {
    "text": "a comp jump this uh GCC did not do that",
    "start": "1053160",
    "end": "1058360"
  },
  {
    "text": "right that's the only difference no no real difference and this will persist",
    "start": "1058360",
    "end": "1063600"
  },
  {
    "text": "even if you you know we can tell it to do use a much more recent instruction set if we want to uh we won't really get",
    "start": "1063600",
    "end": "1071840"
  },
  {
    "text": "uh any appreciable difference we'll always get basically this exact uh same thing where we see uh very similar just",
    "start": "1071840",
    "end": "1080200"
  },
  {
    "text": "the SE very similar pattern there's like some very small differences that will occur in the code but for the most part",
    "start": "1080200",
    "end": "1086039"
  },
  {
    "text": "uh it will be the same and there's a few differences like in the for Trend it decides to unroll it but otherwise uh",
    "start": "1086039",
    "end": "1092520"
  },
  {
    "text": "they will be basically identical right so that's what we will see here's the same code again no matter what we really",
    "start": "1092520",
    "end": "1099200"
  },
  {
    "text": "do so how is it getting so much faster well",
    "start": "1099200",
    "end": "1105640"
  },
  {
    "text": "one answer might be for some reason that's not obious just from looking at it unrolling this Loop in additional",
    "start": "1105640",
    "end": "1112039"
  },
  {
    "text": "time is just a really great idea I just can't imagine it's like 40% faster or whatever it is it's ver 25 right like that's that's",
    "start": "1112039",
    "end": "1120159"
  },
  {
    "text": "that's a huge amount 66% slower to not have it unrolled so I'm like that can't be real well it was the Fortran was only",
    "start": "1120159",
    "end": "1128280"
  },
  {
    "text": "like uh about 15% faster than the C version which is the one we're looking at here we were not looking at like the",
    "start": "1128280",
    "end": "1133520"
  },
  {
    "text": "Odin one or the Z One or the right um so we're at this and we're going that",
    "start": "1133520",
    "end": "1140440"
  },
  {
    "text": "doesn't make a lot of sense I don't think unrolling that Loop would have made any difference so the first thing I",
    "start": "1140440",
    "end": "1145760"
  },
  {
    "text": "did just to check that because I was like wait what is I just forced this Loop to unroll twice by putting a pragma",
    "start": "1145760",
    "end": "1151799"
  },
  {
    "text": "unroll in front of it and I tested it and it didn't change the speed at all right okay so I can tell you we won't",
    "start": "1151799",
    "end": "1159120"
  },
  {
    "text": "bother doing that on stream here but I can tell you unrolling the loop makes no difference there was no reason for the fortrend Cally do that it doesn't really",
    "start": "1159120",
    "end": "1165320"
  },
  {
    "text": "help in any particular way so it was unnecessary and is not the cause of the speed up so now we're left with this",
    "start": "1165320",
    "end": "1172159"
  },
  {
    "text": "thing it's like okay I can pretty much tell you that the for train code isn't better we're looking at it it's the same",
    "start": "1172159",
    "end": "1179080"
  },
  {
    "text": "don't rewrite your code in four Tran kids because it's the same it does the same thing right so if you were",
    "start": "1179080",
    "end": "1185159"
  },
  {
    "text": "programming and see The Benchmark already very suspicious because we're looking at the assembly and again this",
    "start": "1185159",
    "end": "1190679"
  },
  {
    "text": "again tells you they didn't even spot check it right like like the people making this Benchmark do not even spot",
    "start": "1190679",
    "end": "1196320"
  },
  {
    "text": "check these results they just publish them and they leave it to other people to do the dirty work for them it's very",
    "start": "1196320",
    "end": "1201919"
  },
  {
    "text": "irresponsible and I don't like it right um but let's go ahead and take a look",
    "start": "1201919",
    "end": "1207200"
  },
  {
    "text": "now at what's actually going on then so I obviously am like what's the deal here",
    "start": "1207200",
    "end": "1212559"
  },
  {
    "text": "because that doesn't make sense to me I'm like that can't really be uh a legitimate thing that's happening why",
    "start": "1212559",
    "end": "1219039"
  },
  {
    "text": "are they getting the Benchmark results that they're getting right and so uh I",
    "start": "1219039",
    "end": "1224640"
  },
  {
    "text": "you know obviously and and hopefully I can do this here I I don't think I have a I don't know if I can do a GCC can I",
    "start": "1224640",
    "end": "1230240"
  },
  {
    "text": "do a GCC I might be able to do a GCC of just the C version can I do",
    "start": "1230240",
    "end": "1237720"
  },
  {
    "text": "that let's see if I can okay great will it run will it will",
    "start": "1237720",
    "end": "1243520"
  },
  {
    "text": "it blend yes so I can compile both of these on this computer it's not the computer I actually used to do this I I",
    "start": "1243520",
    "end": "1249799"
  },
  {
    "text": "did this on my my zen4 uh I have a Linux machine I because I wanted to use Linux",
    "start": "1249799",
    "end": "1255880"
  },
  {
    "text": "so I could use some more of the stuff that they had in there but we can do this on this Windows machine so let's do",
    "start": "1255880",
    "end": "1261200"
  },
  {
    "text": "the exact same thing we did we'll use the the Fortran version here and we'll compile both of these uh programs into",
    "start": "1261200",
    "end": "1269280"
  },
  {
    "text": "executable so that we can see what the heck is going on right because I just don't understand and I want to know uh",
    "start": "1269280",
    "end": "1274919"
  },
  {
    "text": "what's happening so we can run both the the C version and the Fortran version they appear to be working uh and so uh",
    "start": "1274919",
    "end": "1281919"
  },
  {
    "text": "now oops no no Visual Studio no",
    "start": "1281919",
    "end": "1287000"
  },
  {
    "text": "no why I love that your debugger also gets you",
    "start": "1287000",
    "end": "1293200"
  },
  {
    "text": "uh I it's just associated with C version um so I can run both versions I can run the four Trend version I can run the C",
    "start": "1293200",
    "end": "1299520"
  },
  {
    "text": "version so now I should be in a position to find out what the heck is going on right um and the way that they're doing",
    "start": "1299520",
    "end": "1307679"
  },
  {
    "text": "this right is if you look they've got this uh thing I I took I took a copy of",
    "start": "1307679",
    "end": "1312919"
  },
  {
    "text": "the Repro here uh they have this input uh. text thing this input. text right",
    "start": "1312919",
    "end": "1321600"
  },
  {
    "text": "and uh I'll copy that into this directory that is what they're using",
    "start": "1321600",
    "end": "1327080"
  },
  {
    "text": "so this okay is the input to the program and these are the strings right that",
    "start": "1327080",
    "end": "1334679"
  },
  {
    "text": "they are going to be uh processing okay nice yeah so it's it's an it's a square",
    "start": "1334679",
    "end": "1340679"
  },
  {
    "text": "you compare each string against every other string so it's an N squ of whatever that is so lot of comparisons going on and whites space I assume is",
    "start": "1340679",
    "end": "1347320"
  },
  {
    "text": "the uh how they split the strings I I mean a lot of comparisons like okay n",
    "start": "1347320",
    "end": "1354720"
  },
  {
    "text": "squar of like I don't know 30 or something it's it's not a lot it's 900",
    "start": "1354720",
    "end": "1361039"
  },
  {
    "text": "it's like it's so tiny a lot maybe in like for my eyes I look at that and go okay there's there's a bunch going in",
    "start": "1361039",
    "end": "1366360"
  },
  {
    "text": "this feels like a classic leak code setup where you're going to be like oh Bamboozled so you look at this and as",
    "start": "1366360",
    "end": "1372799"
  },
  {
    "text": "you just pointed out I think it's it's going to be separated by space because it's not red you can see here it's not",
    "start": "1372799",
    "end": "1379880"
  },
  {
    "text": "read as a file it's read as part of the arguments right which is a really really",
    "start": "1379880",
    "end": "1386080"
  },
  {
    "text": "weird decision to make for a benchmark because now you're talking about going through someone's com Pro uh command",
    "start": "1386080",
    "end": "1393400"
  },
  {
    "text": "command line parser which is not something we would typically ever care about the performance of there's almost",
    "start": "1393400",
    "end": "1399120"
  },
  {
    "text": "no situation uh where that is how large amounts of data is passed so it's a very",
    "start": "1399120",
    "end": "1406640"
  },
  {
    "text": "strange decision for a bmark highly highly suspicious but I I'll just",
    "start": "1406640",
    "end": "1413400"
  },
  {
    "text": "say like that's actually not exactly the problem here can I can I you second you",
    "start": "1413400",
    "end": "1418919"
  },
  {
    "text": "just said it was a large amount of data after making fun of me for calling it a large amount of comparisons I feel like",
    "start": "1418919",
    "end": "1425520"
  },
  {
    "text": "I feel like I feel like we're fighting now now it's like no longer fun sorry what I meant to say was I if you were",
    "start": "1425520",
    "end": "1433600"
  },
  {
    "text": "trying to design a benchmark and you wanted to test things yeah you typically",
    "start": "1433600",
    "end": "1438679"
  },
  {
    "text": "wouldn't test the command line parser agreed because you're never going to feed a large amount of data to it I'm",
    "start": "1438679",
    "end": "1444480"
  },
  {
    "text": "not saying that this is feeding a large amount of data to it I'm saying nobody who processes 70 gigabytes of data",
    "start": "1444480",
    "end": "1451720"
  },
  {
    "text": "passes that on the command line right so when you're creating a benchmark you typically wouldn't care very much unless",
    "start": "1451720",
    "end": "1458320"
  },
  {
    "text": "you're just doing command line parsing benchmarks for your own Amusement um you're you're never passing",
    "start": "1458320",
    "end": "1465000"
  },
  {
    "text": "very many things on the command line so the speed of that parser is usually not Rel to you and so it's very strange to",
    "start": "1465000",
    "end": "1471039"
  },
  {
    "text": "be constructing a benchmark where you're saying oh we're going to include the amount of time it takes to parse the",
    "start": "1471039",
    "end": "1476360"
  },
  {
    "text": "input if it was passed on the command line that's a very strange thing to say right I'm not suggesting this is much",
    "start": "1476360",
    "end": "1483080"
  },
  {
    "text": "but I am suggesting that is weird add some sort of variance that's unfair right or who knows or what we're",
    "start": "1483080",
    "end": "1489600"
  },
  {
    "text": "about to see which is way different than that so if we take a look at what happens here um and and maybe this won't",
    "start": "1489600",
    "end": "1497399"
  },
  {
    "text": "reprod I I guess to to be fair I don't actually know since I haven't done this on windows before I only did it on Linux",
    "start": "1497399",
    "end": "1503840"
  },
  {
    "text": "I don't know if this is a bug specific to Macos and and Linux we'll find out in a second here but so we have to pass",
    "start": "1503840",
    "end": "1510760"
  },
  {
    "text": "this uh on the command line to a program in order to get it to run right so let",
    "start": "1510760",
    "end": "1516960"
  },
  {
    "text": "me just try to construct something uh where we do that for example if I go back to a notepad here and I make like a",
    "start": "1516960",
    "end": "1524840"
  },
  {
    "text": "batch file or something uh so that I can you know make it a little bit easier to do to do that I'll just create something",
    "start": "1524840",
    "end": "1532960"
  },
  {
    "text": "here um I don't know if this will stop me probably won't we'll just say this is going to be run.bat hopefully that",
    "start": "1532960",
    "end": "1540559"
  },
  {
    "text": "worked right yes so I'm make a little run.bat here and I will open up that",
    "start": "1540559",
    "end": "1546840"
  },
  {
    "text": "input text here I'll just grab that and we'll make a little thing that runs uh",
    "start": "1546840",
    "end": "1552320"
  },
  {
    "text": "our our Fortran version with this right so we'll say",
    "start": "1552320",
    "end": "1558039"
  },
  {
    "text": "okay okay uh let's go ahead and and run the Fortran version with that I guess I don't need the XZ there it should just",
    "start": "1558039",
    "end": "1563919"
  },
  {
    "text": "work right and I'll Echo off that so we don't get that dumped so if I do run now you can see",
    "start": "1563919",
    "end": "1570440"
  },
  {
    "text": "the Fortran version runs it runs the amount of times that the Benchmark said it should because if you go look on their page like it should say that it",
    "start": "1570440",
    "end": "1577000"
  },
  {
    "text": "ran 3906 different comparisons that's what it should be uh for the N sness of",
    "start": "1577000",
    "end": "1583480"
  },
  {
    "text": "this I guess that's how many things there were in there uh and then the minimum that it reports is seven which",
    "start": "1583480",
    "end": "1589960"
  },
  {
    "text": "is the correct answer according to the Benchmark which is just saying look this is how many uh if we took the the",
    "start": "1589960",
    "end": "1596960"
  },
  {
    "text": "closest two pair the closest pair that's what Levenstein returned for the closest",
    "start": "1596960",
    "end": "1602840"
  },
  {
    "text": "pair does that make sense M yes okay so let's go one",
    "start": "1602840",
    "end": "1609600"
  },
  {
    "text": "better and run the C version as well so now oops version right so now if",
    "start": "1609600",
    "end": "1617880"
  },
  {
    "text": "I do I can see okay they both run they both report the same results so I mean",
    "start": "1617880",
    "end": "1623640"
  },
  {
    "text": "Prime they both report the same results such stringent testing on this Benchmark",
    "start": "1623640",
    "end": "1629120"
  },
  {
    "text": "clearly the Fortran version and the C version are are doing the same amount of work you you must be wrong Prime you",
    "start": "1629120",
    "end": "1635679"
  },
  {
    "text": "just don't understand I make up a language just to have it so I can hide in something that just literally prints out the exact answer they're expecting",
    "start": "1635679",
    "end": "1642520"
  },
  {
    "text": "but it looks really complicated and then it's just like oh my made up language does it in Nan buddy in the compiler",
    "start": "1642520",
    "end": "1650679"
  },
  {
    "text": "hide it in the compiler too so they can't see it happening it looks like it's running the regular algorithm but",
    "start": "1650679",
    "end": "1656080"
  },
  {
    "text": "it just outputs the result right so good so so anyway um what's going on here",
    "start": "1656080",
    "end": "1664279"
  },
  {
    "text": "well again you know one thing that you might start doing now is saying well how",
    "start": "1664279",
    "end": "1669360"
  },
  {
    "text": "sure are you that that is actually producing the same answer because if all",
    "start": "1669360",
    "end": "1675120"
  },
  {
    "text": "you do is print out the minimum distance that's not much of a verification now is it because all that says is that you",
    "start": "1675120",
    "end": "1682399"
  },
  {
    "text": "correctly computed the answer for the smallest pair you could have created",
    "start": "1682399",
    "end": "1688000"
  },
  {
    "text": "cuted the answer wrong for every other pair but the smallest and still been right you know what I'm saying yep so it",
    "start": "1688000",
    "end": "1695919"
  },
  {
    "text": "makes me go well what would happen right if I were to ask it to maybe just be a",
    "start": "1695919",
    "end": "1703799"
  },
  {
    "text": "little bit better and mind you I have no idea how to program for TR so I'm just going to go in here close enough it",
    "start": "1703799",
    "end": "1710320"
  },
  {
    "text": "looks like you know right I think no negative one do a negative one cuz your first comparison is a negative one good",
    "start": "1710320",
    "end": "1716200"
  },
  {
    "text": "point yeah yeah I was thinking I should initialize it to something that would always fail but that's yeah they've",
    "start": "1716200",
    "end": "1722080"
  },
  {
    "text": "already done that for me I was confused why M distance was negative one because I was like I think I would put that as",
    "start": "1722080",
    "end": "1727480"
  },
  {
    "text": "like Max int right like I was already way off so maybe this you know maybe this will work Prime what do you think I",
    "start": "1727480",
    "end": "1733559"
  },
  {
    "text": "don't know just copying it in there right get the M distance get the max dist",
    "start": "1733559",
    "end": "1740039"
  },
  {
    "text": "let's compile it again okay I love it right has no implicit type uh oh we've",
    "start": "1742120",
    "end": "1747919"
  },
  {
    "text": "done something wrong there's what did we do oh oh is it up",
    "start": "1747919",
    "end": "1754640"
  },
  {
    "text": "here yeah there has to be some sort of Declaration somewhere yeah there it is there it is watch us learn Fortran on stream so",
    "start": "1754640",
    "end": "1761480"
  },
  {
    "text": "there we go right now we run it and we get a max",
    "start": "1761480",
    "end": "1766640"
  },
  {
    "text": "distance of s I guess no one saw",
    "start": "1766640",
    "end": "1774559"
  },
  {
    "text": "that there we go we get a max distance of 100 right so that's the largest one",
    "start": "1774559",
    "end": "1780360"
  },
  {
    "text": "it found the smallest one it found was seven the largest one it found uh was",
    "start": "1780360",
    "end": "1785799"
  },
  {
    "text": "100 so I know how to program C thankfully so you know it should be even",
    "start": "1785799",
    "end": "1792320"
  },
  {
    "text": "easier for me to do that uh with the c version let's go ahead and check it out there so we'll copy our Min distance",
    "start": "1792320",
    "end": "1799320"
  },
  {
    "text": "here into max distance this code is very similar as you can see uh we'll just copy it here we'll grab the max",
    "start": "1799320",
    "end": "1806039"
  },
  {
    "text": "distance um just like identical yep almost the same right yeah and we'll",
    "start": "1806039",
    "end": "1812080"
  },
  {
    "text": "just go ahead and print that out as the max distance and we'll see what we",
    "start": "1812080",
    "end": "1817760"
  },
  {
    "text": "get there we go gosh prime those don't look like the",
    "start": "1822679",
    "end": "1828039"
  },
  {
    "text": "same numbers do they oh no why is it all right is there a 100 in the forr program",
    "start": "1828039",
    "end": "1834600"
  },
  {
    "text": "is something preventing it from searching very deep you know who knows right who knows",
    "start": "1834600",
    "end": "1842120"
  },
  {
    "text": "what's happening Prime and I I do know but I'm I'm amping this up for I love your foreshadowing yeah uh because I'm",
    "start": "1842120",
    "end": "1849600"
  },
  {
    "text": "so annoyed right I'm so annoyed that that someone put this out there and didn't even like they didn't even do",
    "start": "1849600",
    "end": "1856519"
  },
  {
    "text": "validation of the benchmark they didn't look at the assembly they didn't look at the validation right um",
    "start": "1856519",
    "end": "1863519"
  },
  {
    "text": "and then then all this like you know and then Hacker News and whatever else right it's just can I throw something out crap",
    "start": "1863519",
    "end": "1869519"
  },
  {
    "text": "please um I think this just goes to show that as you develop one of these benchmarks and the language web if you",
    "start": "1869519",
    "end": "1876039"
  },
  {
    "text": "will gets wider and wider or the language net gets wider and wider you start getting these little esoteric",
    "start": "1876039",
    "end": "1881240"
  },
  {
    "text": "languages that are popping up I'd call forren at this point point an esoteric language uh or a very unused language",
    "start": "1881240",
    "end": "1887360"
  },
  {
    "text": "arcane might be a better term for it and uh no one can look at the code and",
    "start": "1887360",
    "end": "1892840"
  },
  {
    "text": "validate it so you have one person setting up something and there's not rigorous testing because it's just like a side fund project I'm just giv benefit",
    "start": "1892840",
    "end": "1900039"
  },
  {
    "text": "of a doubt right it's just side fund project hey long as you say you do these things you've iterated this many times and you have this number you're probably",
    "start": "1900039",
    "end": "1905720"
  },
  {
    "text": "good to go no one can validate it right like they just look at and they go oh yeah Emoji code cool right like they",
    "start": "1905720",
    "end": "1912720"
  },
  {
    "text": "just no one can like do anything about it it takes someone going wait a second let's actually make it cuz all you done",
    "start": "1912720",
    "end": "1918159"
  },
  {
    "text": "is just added more testing and on the smallest Dimension you're showing right away that even with the tiniest fraction",
    "start": "1918159",
    "end": "1924240"
  },
  {
    "text": "more testing it's actually showing that this thing is broken and how many of the other ones are broken also well that's exactly my point and",
    "start": "1924240",
    "end": "1931679"
  },
  {
    "text": "this is why I say like you got to take benchmarking more seriously if if you're doing micro benchmarks yeah micro",
    "start": "1931679",
    "end": "1937880"
  },
  {
    "text": "benchmarks are are not for like Whimsical side project that then you",
    "start": "1937880",
    "end": "1945760"
  },
  {
    "text": "post about as if it's a real ranking right that is not how that goes a real Benchmark you could do that with because",
    "start": "1945760",
    "end": "1952440"
  },
  {
    "text": "you've done the work right like a real Benchmark even if you're naive you at least ran the workload and you got the",
    "start": "1952440",
    "end": "1959799"
  },
  {
    "text": "result you needed and you said this is how long it takes right like the people who bench I pointed that with gpus or",
    "start": "1959799",
    "end": "1965799"
  },
  {
    "text": "whatever right the people who Benchmark they load up a game they see how long it",
    "start": "1965799",
    "end": "1971159"
  },
  {
    "text": "takes to render the frames they don't know anything necessarily about how a GPU is working they didn't analyze any",
    "start": "1971159",
    "end": "1977279"
  },
  {
    "text": "of some like but it's okay because they they saw the freight like they got the frames they wanted they know how many",
    "start": "1977279",
    "end": "1983200"
  },
  {
    "text": "there were right and they looked at how fast they were generated that's all you care about right micro benchmarking is",
    "start": "1983200",
    "end": "1989880"
  },
  {
    "text": "not that way you haven't validated anything if you're just looking at this one little thing you haven't tested a",
    "start": "1989880",
    "end": "1995200"
  },
  {
    "text": "real workload you don't know if the workload has been uh produced correctly it's a real problem right so",
    "start": "1995200",
    "end": "2002880"
  },
  {
    "text": "anyway starting there right and going well okay we've looked at the assembly",
    "start": "2002880",
    "end": "2008000"
  },
  {
    "text": "we see no reason the for TR verion should be faster we added a little bit of checking and it doesn't seem like",
    "start": "2008000",
    "end": "2013399"
  },
  {
    "text": "it's even uh Computing the lein distance properly so what's going on here well I",
    "start": "2013399",
    "end": "2019720"
  },
  {
    "text": "actually did try to inspect the code and I was like here's the C code here's the Forint code I'm like actually they look",
    "start": "2019720",
    "end": "2028120"
  },
  {
    "text": "very similar so I don't see why I look at the assembly code they look for so I'm like something else is going on here",
    "start": "2028120",
    "end": "2035480"
  },
  {
    "text": "so I was like what really is happening with this code like what is",
    "start": "2035480",
    "end": "2044440"
  },
  {
    "text": "that doing 100 in there let's",
    "start": "2044440",
    "end": "2049558"
  },
  {
    "text": "go right I'm like I'm like what what what is that strictly out of",
    "start": "2050800",
    "end": "2058520"
  },
  {
    "text": "curiosity you know like is that is is that is that suspicious at all to",
    "start": "2058520",
    "end": "2065398"
  },
  {
    "text": "anyone else yeah I'm not a Fortran programmer you know don't take my word for it but it does look like a",
    "start": "2065399",
    "end": "2070919"
  },
  {
    "text": "conveniently similar uh number that was also the maximum number on the other side but it it it seems like to me if I",
    "start": "2070919",
    "end": "2080520"
  },
  {
    "text": "had to guess that that is a little suspicious I would I would be hitting",
    "start": "2080520",
    "end": "2086079"
  },
  {
    "text": "sus right now for sure so at that point I was like well you know let me",
    "start": "2086079",
    "end": "2093440"
  },
  {
    "text": "just you maybe that's not what that means maybe 100 means like give it 100%",
    "start": "2093440",
    "end": "2098640"
  },
  {
    "text": "you know like we're going to Classic percentile in Computing when you comes to allocation yeah like we're going to do",
    "start": "2098640",
    "end": "2105920"
  },
  {
    "text": "we're you know just we're not going to give 50% we're going to give 100 not 110% this isn't",
    "start": "2105920",
    "end": "2112480"
  },
  {
    "text": "the football team yeah come on right we're give around here come on yeah so I",
    "start": "2112480",
    "end": "2117520"
  },
  {
    "text": "said well all right I learned enough for Tran to know like okay that's asky character so like okay uh let's print",
    "start": "2117520",
    "end": "2123560"
  },
  {
    "text": "out what this thing thinks it's going to be uh using as the command line uh",
    "start": "2123560",
    "end": "2128839"
  },
  {
    "text": "arguments right yeah uh let's just see uh what that does oops I got to do the my G4 Tran",
    "start": "2128839",
    "end": "2136440"
  },
  {
    "text": "here and uh lo and behold klippenstein right it's not the Le it's",
    "start": "2138079",
    "end": "2145680"
  },
  {
    "text": "the clippin algorithm it's the klippenstein algorithm right uh it",
    "start": "2145680",
    "end": "2150920"
  },
  {
    "text": "actually Clips its input so that the longer the the strings that were supposed to be really long aren't really",
    "start": "2150920",
    "end": "2158760"
  },
  {
    "text": "long which of course in an N squared algorithm is a huge deal right like you",
    "start": "2158760",
    "end": "2164960"
  },
  {
    "text": "were going to use that string the much longer string to compare against all the other strings at some point so you're",
    "start": "2164960",
    "end": "2171359"
  },
  {
    "text": "now reducing that whatever that maximum length was uh you're reducing it quite a",
    "start": "2171359",
    "end": "2176839"
  },
  {
    "text": "bit right oh this is this is this is a thing of beauty I'm loving it I'm loving",
    "start": "2176839",
    "end": "2182079"
  },
  {
    "text": "this yeah well I wasn't loving it I mean I love it in the I I'm the s that it's",
    "start": "2182079",
    "end": "2187400"
  },
  {
    "text": "like it's just get w got wrecked by just the funniest way this is like the classic",
    "start": "2187400",
    "end": "2194480"
  },
  {
    "text": "micro like what's the HTP one that they always have like the world's fastest HTP server it's like all these languages are",
    "start": "2194480",
    "end": "2200280"
  },
  {
    "text": "always manipulating it to make it like the best possible version yeah so it's just like this is it this is it again I",
    "start": "2200280",
    "end": "2206520"
  },
  {
    "text": "mean he's technically right you don't even need to allocate the whole string because the reality is that the minimum distance is coming from a small string",
    "start": "2206520",
    "end": "2212720"
  },
  {
    "text": "anyways yeah exactly like maybe maybe this was a legitimate Benchmark op ation",
    "start": "2212720",
    "end": "2218599"
  },
  {
    "text": "as far as this bench boox concerned I have no idea but holy holy cow man that is sus so let's take a look now what",
    "start": "2218599",
    "end": "2226040"
  },
  {
    "text": "actually happens so uh let's go get that weird um you know they've got this",
    "start": "2226040",
    "end": "2232119"
  },
  {
    "text": "really weird uh what's the word for it um hyperfine",
    "start": "2232119",
    "end": "2238640"
  },
  {
    "text": "uh they use this this Syntax for hyperfine right so uh here's that",
    "start": "2238640",
    "end": "2244119"
  },
  {
    "text": "hyperfine syntax that they were using um",
    "start": "2244119",
    "end": "2249519"
  },
  {
    "text": "I'll try and dump that in here and see if we can get it to to so just so we can reproduce some results that'd be the",
    "start": "2249640",
    "end": "2256280"
  },
  {
    "text": "ideal ideal format um so let's let's dump it in there and see if we can get",
    "start": "2256280",
    "end": "2262359"
  },
  {
    "text": "this to run um and now I'll I'll go ahead and uh I'll also while we're at it",
    "start": "2262359",
    "end": "2268520"
  },
  {
    "text": "uh I'll remove that so well I guess they're both printing out the max this is fine so we'll just leave it that way",
    "start": "2268520",
    "end": "2275359"
  },
  {
    "text": "but you know uh see if we can get this to work here I remember this was a pain last timeck um",
    "start": "2275359",
    "end": "2284040"
  },
  {
    "text": "let's see what did I do wrong is that not how it works I I",
    "start": "2284040",
    "end": "2290920"
  },
  {
    "text": "didn't see the hyperfine command I think you're close though here I'm I'm going to look right now hold on",
    "start": "2290920",
    "end": "2298400"
  },
  {
    "text": "okay oh a value is required for number but what was okay I I just missed the two",
    "start": "2302440",
    "end": "2308640"
  },
  {
    "text": "I think that's all it was yeah warm up too and then yeah yeah yeah you got to warm it up baby okay you gotta right put",
    "start": "2308640",
    "end": "2314240"
  },
  {
    "text": "your hands to the fire so here we go right we're running",
    "start": "2314240",
    "end": "2319880"
  },
  {
    "text": "it and we are reproducing you know roughly the same thing as they were",
    "start": "2319880",
    "end": "2325200"
  },
  {
    "text": "getting on that Benchmark right the the C version is slower than the fortrend",
    "start": "2325200",
    "end": "2331640"
  },
  {
    "text": "version so as we know this means you should rewrite all of your mission critical performance critical code in",
    "start": "2331640",
    "end": "2338720"
  },
  {
    "text": "Fortran because this Benchmark created by experts for experts is telling you",
    "start": "2338720",
    "end": "2344040"
  },
  {
    "text": "that Fortran is 10% faster or whatever it is on this Benchmark right yeah",
    "start": "2344040",
    "end": "2349160"
  },
  {
    "text": "objective problem solved problem solved now what happens if we actually tell the",
    "start": "2349160",
    "end": "2355200"
  },
  {
    "text": "Fortran verion it should use the whole string right my guess is that it's going",
    "start": "2355200",
    "end": "2360240"
  },
  {
    "text": "to be like we're we're talking like easily into what 28 milliseconds we're going to be going a lot slower all of a",
    "start": "2360240",
    "end": "2365640"
  },
  {
    "text": "sudden so let's let's try the whole string now and see what happens like",
    "start": "2365640",
    "end": "2371599"
  },
  {
    "text": "suddenly we get a different story",
    "start": "2371599",
    "end": "2376960"
  },
  {
    "text": "right now our C version is faster than our Fortran version why is our C version",
    "start": "2376960",
    "end": "2383480"
  },
  {
    "text": "faster than our Fortran verion probably because the Fortran verion now actually has to do the work that is required of",
    "start": "2383480",
    "end": "2391480"
  },
  {
    "text": "The Benchmark which the C1 was doing and the Fortran one wasn't doing before but",
    "start": "2391480",
    "end": "2396839"
  },
  {
    "text": "nobody bothered to check right cinema this is this is pure cinema right here",
    "start": "2396839",
    "end": "2402319"
  },
  {
    "text": "so that right what what happened there uh is obviously really bad uh but again",
    "start": "2402319",
    "end": "2411160"
  },
  {
    "text": "just to just to underscore how bad this Benchmark is we really haven't learned",
    "start": "2411160",
    "end": "2416440"
  },
  {
    "text": "all that much we learned that the Benchmark is bad but we already knew that but if you go ahead and look at what happens up here for example uh in",
    "start": "2416440",
    "end": "2424000"
  },
  {
    "text": "the Fortran code there's a lot of stuff like length trim and like these are",
    "start": "2424000",
    "end": "2431079"
  },
  {
    "text": "allocatable string one and string two and I don't and it like this says",
    "start": "2431079",
    "end": "2437119"
  },
  {
    "text": "allocate so this is doing a dynamic allocation for these two things for these uh row buffers here right and the",
    "start": "2437119",
    "end": "2444920"
  },
  {
    "text": "C version just uses a stack Al I guess um on here right yep so again not really",
    "start": "2444920",
    "end": "2452720"
  },
  {
    "text": "comparing apples to oranges so this is also misleading because you probably",
    "start": "2452720",
    "end": "2458800"
  },
  {
    "text": "could make the Fortran code go roughly the same uh speed as the C code if you wanted to if you just rewrote the Fortran Benchmark slightly because as we",
    "start": "2458800",
    "end": "2465800"
  },
  {
    "text": "saw the actual inner loop assembly that was generated was the same effectively",
    "start": "2465800",
    "end": "2471680"
  },
  {
    "text": "for both right so you know that this is also a lie like this is a lie this is",
    "start": "2471680",
    "end": "2478560"
  },
  {
    "text": "also a lie and it just gets back to the same thing I was trying to say before which is this is a bad idea this",
    "start": "2478560",
    "end": "2484640"
  },
  {
    "text": "Benchmark should not exist like it is not done properly and this is not",
    "start": "2484640",
    "end": "2490319"
  },
  {
    "text": "telling you important information about this language and I was a little bit",
    "start": "2490319",
    "end": "2495560"
  },
  {
    "text": "calmer about it last time we talked about this but now that I'm doing it having to do it again for the same",
    "start": "2495560",
    "end": "2500760"
  },
  {
    "text": "Benchmark I I'm getting like increasingly agitated right like I'm just like someone needs to stop these",
    "start": "2500760",
    "end": "2506880"
  },
  {
    "text": "people from doing this it's creating so much misinformation for no reason right well",
    "start": "2506880",
    "end": "2512720"
  },
  {
    "text": "I think the good news is is that just talking about it and showing these kind of things just goes to show really a lot of the dangers also of benchmarking I",
    "start": "2512720",
    "end": "2519040"
  },
  {
    "text": "think a lot of people in amateur ways including myself have benchmarked things throughout our career and made things",
    "start": "2519040",
    "end": "2524560"
  },
  {
    "text": "faster only to realize that when you go to production nothing actually changes and that's because a lot of times your",
    "start": "2524560",
    "end": "2529839"
  },
  {
    "text": "methodology your soundness what are you actually testing for your controls like do you have one control are you having",
    "start": "2529839",
    "end": "2535440"
  },
  {
    "text": "confounding factors all that stuff all adds in and if you don't have like a real at the end of the day output that",
    "start": "2535440",
    "end": "2541359"
  },
  {
    "text": "you can say hey in the actual real thing we are now officially faster or we are now officially slower it just goes to",
    "start": "2541359",
    "end": "2547920"
  },
  {
    "text": "show that like these kind this type of practice even if it's fun to do you might draw bad conclusions you might not",
    "start": "2547920",
    "end": "2555359"
  },
  {
    "text": "or just conclusions that don't even matter or conclusions that are just like that that actually can influence you in",
    "start": "2555359",
    "end": "2561000"
  },
  {
    "text": "fact in like negative ways too absolutely and so I would",
    "start": "2561000",
    "end": "2567000"
  },
  {
    "text": "recommend uh that you know like uh I I don't really know what the",
    "start": "2567000",
    "end": "2574359"
  },
  {
    "text": "appropriate way of of actually like clearly articulating to people that",
    "start": "2574359",
    "end": "2581319"
  },
  {
    "text": "they need to ignore like they need to really just consider this uh you know just bad",
    "start": "2581319",
    "end": "2589559"
  },
  {
    "text": "information like don't like this is just bad and anything that comes out of this GitHub ignore it right yeah but I would",
    "start": "2589559",
    "end": "2597359"
  },
  {
    "text": "recommend that yeah the people who work on these languages to the extent that they can",
    "start": "2597359",
    "end": "2603760"
  },
  {
    "text": "um come out and say how ridiculous this is right right I mean there's I have not",
    "start": "2603760",
    "end": "2609280"
  },
  {
    "text": "looked at the zig version I have not looked at the Nim version I've not looked at the Go version not looked at the Odin version etc",
    "start": "2609280",
    "end": "2615359"
  },
  {
    "text": "etc I guarantee you that if we went and looked at them it is not representative that for that Fortran is is twice as",
    "start": "2615359",
    "end": "2622640"
  },
  {
    "text": "fast even after fixing that bug I'm there's no way that Fortran or c for",
    "start": "2622640",
    "end": "2628359"
  },
  {
    "text": "that matter is massively outperforming these other languages legitimately I I that that is not a very likely",
    "start": "2628359",
    "end": "2635640"
  },
  {
    "text": "outcome does make maybe Zig have some bug in some cod gen thing somewhere that's causing this to happen on just",
    "start": "2635640",
    "end": "2641480"
  },
  {
    "text": "this Benchmark that could be right is it repres programing it differently too they could just be programming it",
    "start": "2641480",
    "end": "2647280"
  },
  {
    "text": "incorrect there could be things about it because if we open up the Benchmark exact exactly if we open up the",
    "start": "2647280",
    "end": "2652359"
  },
  {
    "text": "Benchmark it might just be a garbage implementation in Zig and that is not representative of what the performance",
    "start": "2652359",
    "end": "2658559"
  },
  {
    "text": "of that language is going to be when you actually use it which is why this is such a bad thing to be publishing no",
    "start": "2658559",
    "end": "2665079"
  },
  {
    "text": "validation like you need to validate the benchmarks you need to validate the quality of the implementations and",
    "start": "2665079",
    "end": "2671559"
  },
  {
    "text": "ensure that they're all roughly the same right they have to be good quality ones",
    "start": "2671559",
    "end": "2676599"
  },
  {
    "text": "and it's not sufficient to just say like well it's the responsibility of uh the",
    "start": "2676599",
    "end": "2681640"
  },
  {
    "text": "zig Community to to to contribute a well written but no it's not you if you're the one publishing this Benchmark it's",
    "start": "2681640",
    "end": "2688240"
  },
  {
    "text": "your responsibility to make sure you've got a good Zig one and if you don't have a good Zig one don't include it on the",
    "start": "2688240",
    "end": "2694640"
  },
  {
    "text": "list right yeah or you don't have the confidence that you even know it's a good one yes uh so it's irresponsible",
    "start": "2694640",
    "end": "2703559"
  },
  {
    "text": "and so I feel like the other language maintainer should come out and and say this definitively people should very",
    "start": "2703559",
    "end": "2709079"
  },
  {
    "text": "clearly state that this is a bad Benchmark and people should not be looking at it yeah I wanted to see uh",
    "start": "2709079",
    "end": "2714520"
  },
  {
    "text": "I'm trying to see how to compile Zig in release mode I you know because it's not going to use o03 it's O",
    "start": "2714520",
    "end": "2721920"
  },
  {
    "text": "release there we go uh yeah I don't have a lot of experience like kn wasn't 03",
    "start": "2721920",
    "end": "2728480"
  },
  {
    "text": "let's see if it's knowing what the right compiler flags are going to be for you know did you did you make the go sample",
    "start": "2728480",
    "end": "2735040"
  },
  {
    "text": "correctly you know I I just don't know uh but for the languages I spot verified",
    "start": "2735040",
    "end": "2740720"
  },
  {
    "text": "I was like oh this is a mess yeah because the only thing that I see about the zig one that could be potentially causing a little bit of a goof to it is",
    "start": "2740720",
    "end": "2747280"
  },
  {
    "text": "that it's doing uh it has a Min that's calling another Min instead of doing the like the little",
    "start": "2747280",
    "end": "2754520"
  },
  {
    "text": "Min threeway that they had in the C one maybe that one's just not getting inlined as well yeah that that stuff I like I said",
    "start": "2754520",
    "end": "2762119"
  },
  {
    "text": "haven't looked into but I'm just it would be shocking for to me to find out",
    "start": "2762119",
    "end": "2767359"
  },
  {
    "text": "that on code this straightforward where basically all the language has to do is",
    "start": "2767359",
    "end": "2772520"
  },
  {
    "text": "hand a trivial uh block to llvm for",
    "start": "2772520",
    "end": "2778000"
  },
  {
    "text": "compilation I just refuse to believe that they've messed up something so badly in you know one of these like",
    "start": "2778000",
    "end": "2786960"
  },
  {
    "text": "native languages right um it just doesn't stand to reason and so I'm just",
    "start": "2786960",
    "end": "2792400"
  },
  {
    "text": "expecting that if I were to go investigate the zig version I would find something equally stupid going on to",
    "start": "2792400",
    "end": "2797680"
  },
  {
    "text": "what I just found with Fortran uh and that the reason that it's slow is not because inherently you can't",
    "start": "2797680",
    "end": "2803839"
  },
  {
    "text": "write elstein distance Loop uh in Zig and have it compiled to the exact same block of code we just saw C and Fortran",
    "start": "2803839",
    "end": "2810880"
  },
  {
    "text": "both generate yeah i' I'd say like your the the very easy Layman's one even",
    "start": "2810880",
    "end": "2815960"
  },
  {
    "text": "Beyond any of this is that you can just look that go is outperforming Zig like go has to set up",
    "start": "2815960",
    "end": "2821960"
  },
  {
    "text": "a runtime go has lots of things that are happening so whatever's going on whatever is going on like something has",
    "start": "2821960",
    "end": "2829599"
  },
  {
    "text": "obviously gone wrong here it's it just doesn't stand to reason and that's again why I'm so critical of this Benchmark",
    "start": "2829599",
    "end": "2836480"
  },
  {
    "text": "that before pushing send on this chart anyone who was a responsible bench",
    "start": "2836480",
    "end": "2842760"
  },
  {
    "text": "marker would have gone that doesn't look right let me at least go valid these results like and they clearly didn't",
    "start": "2842760",
    "end": "2849359"
  },
  {
    "text": "even do the minimum necessary validation because as you saw in about 10 seconds I was able to validate that the for Trend",
    "start": "2849359",
    "end": "2854800"
  },
  {
    "text": "version was completely messed up and that was probably one of dozens of bugs",
    "start": "2854800",
    "end": "2861400"
  },
  {
    "text": "we would find uh with the way this Benchmark was constructed like I kind of makes me want to go see what's going on",
    "start": "2861400",
    "end": "2867400"
  },
  {
    "text": "with Scala native right careful get that tiedye shirt out for that one",
    "start": "2867400",
    "end": "2874040"
  },
  {
    "text": "mhm so so anyway that's my my annoyance for the day uh I apologize for being so",
    "start": "2874040",
    "end": "2879920"
  },
  {
    "text": "annoyed at it but like I said the first time I try to maintain my composure second time I have to do this now I'm",
    "start": "2879920",
    "end": "2885400"
  },
  {
    "text": "starting to get grumpy uh and so it's like I don't know and and gosh I hope they don't introduce yet another fourth",
    "start": "2885400",
    "end": "2891960"
  },
  {
    "text": "Benchmark because then I'm going to be back here I'm gonna be screaming Prime you're gonna I'll be clipping the microphone the entire time it's okay",
    "start": "2891960",
    "end": "2898559"
  },
  {
    "text": "actually you know I I'm actually very happy all this stuff happened I know you're very upset CU this is an opportunity in which remember our the",
    "start": "2898559",
    "end": "2904640"
  },
  {
    "text": "last video we did together here not to to to my own horn here hold on one second let me just pull this up really",
    "start": "2904640",
    "end": "2912960"
  },
  {
    "text": "quickly I know it wasn't it was not very long ago let's see if I can see this let",
    "start": "2913200",
    "end": "2918599"
  },
  {
    "text": "me see if I can let me see if I can see this the ball is the ball diagram one yeah that one uh you know it has 200,000",
    "start": "2918599",
    "end": "2924920"
  },
  {
    "text": "views on it so 200,000 people ended up watching it for some amount of time and",
    "start": "2924920",
    "end": "2930359"
  },
  {
    "text": "so 200,000 people are going to go oh huh or I mean I don't know if 200,000 is like a I can't say there were",
    "start": "2930359",
    "end": "2937599"
  },
  {
    "text": "yeah all that stuff but nonetheless people watched it they learned and then there was a lot of people that learned from this opportunity including myself",
    "start": "2937599",
    "end": "2943960"
  },
  {
    "text": "you know I learned some things from all this as well which is just like these are I like to take these and look at it in the the more positive light which is",
    "start": "2943960",
    "end": "2950480"
  },
  {
    "text": "by someone screwing up in a very or not intentionally I it's hard to call it a screw it by someone doing something",
    "start": "2950480",
    "end": "2956160"
  },
  {
    "text": "naively in a very public environment it allows somebody with more expertise or more experience to be able to come in",
    "start": "2956160",
    "end": "2961400"
  },
  {
    "text": "and say hey here's why these things are wrong and now like everybody is just plus one and so when this video comes",
    "start": "2961400",
    "end": "2967760"
  },
  {
    "text": "out hopefully again the plus one is just like this is how important correctness is especially when it comes to a",
    "start": "2967760",
    "end": "2974319"
  },
  {
    "text": "comparison yeah except I mean I guess the only thing I'd say there I I like the positive Spin and I do think like",
    "start": "2974319",
    "end": "2981520"
  },
  {
    "text": "hey it gives us an opportunity to talk about this stuff which is good but I think the problem is the all the",
    "start": "2981520",
    "end": "2988200"
  },
  {
    "text": "negative information still got out and I don't know how effectively it's been uh corrected and as much as I I mean we",
    "start": "2988200",
    "end": "2995280"
  },
  {
    "text": "just talked about languages much as I kind of don't care that much about languages these days like we sort of",
    "start": "2995280",
    "end": "3001880"
  },
  {
    "text": "said I'm I'm still just programming and c and whatever I do feel for",
    "start": "3001880",
    "end": "3007319"
  },
  {
    "text": "like I don't want to be the people who are responsible for",
    "start": "3007319",
    "end": "3012920"
  },
  {
    "text": "Zig and this Benchmark comes out yeah yeah then now you have obligations to",
    "start": "3012920",
    "end": "3018119"
  },
  {
    "text": "something you're just like I don't even want those obligations I never even ask for them they're this this Benchmark",
    "start": "3018119",
    "end": "3023640"
  },
  {
    "text": "author by being irresponsible in this way and they've been warned many times right it they were warned on the",
    "start": "3023640",
    "end": "3029200"
  },
  {
    "text": "previous ones that they were doing this incorrectly there are many uh issues raised on their GitHub itself people",
    "start": "3029200",
    "end": "3035799"
  },
  {
    "text": "telling them that this is not a good methodology that there are problems with it and they're persisting so at some",
    "start": "3035799",
    "end": "3040839"
  },
  {
    "text": "level it's like it wasn't just naive like oh that you know because I would have a lot more patience with somebody who was just trying their best this was",
    "start": "3040839",
    "end": "3047319"
  },
  {
    "text": "not this was like it's ignoring people trying to tell them that this was creating problems for people and again I",
    "start": "3047319",
    "end": "3053280"
  },
  {
    "text": "feel bad for these language maintainers now because they're put in this position where their language is made to look bad",
    "start": "3053280",
    "end": "3059760"
  },
  {
    "text": "on a massive scale like that tweet was spread all over the place it's making their language look bad and it probably",
    "start": "3059760",
    "end": "3066240"
  },
  {
    "text": "has nothing to do with their language right it it it probably is completely unrepresentative of anything about their",
    "start": "3066240",
    "end": "3073079"
  },
  {
    "text": "language and it puts them on this unnecessary defensive foing or makes them feel bad about it for no reason",
    "start": "3073079",
    "end": "3080040"
  },
  {
    "text": "right for no real reason and it focuses their attention that was would have been better spent doing whatever the latest",
    "start": "3080040",
    "end": "3085960"
  },
  {
    "text": "thing they were going to do on their language doing that instead now they've got to respond to this like oh your",
    "start": "3085960",
    "end": "3091440"
  },
  {
    "text": "language is way slower than than rust right or whatever Fortran you know it's",
    "start": "3091440",
    "end": "3097640"
  },
  {
    "text": "like it's not this probably a lie right uh and so what can you do yeah so there",
    "start": "3097640",
    "end": "3103680"
  },
  {
    "text": "you go that's that's why I'm so annoyed at is because of that part of it and yes I I the people who we're able to reach",
    "start": "3103680",
    "end": "3111040"
  },
  {
    "text": "maybe that like that's been corrected but that's probably a subset of all of what went on with the you know with with",
    "start": "3111040",
    "end": "3116880"
  },
  {
    "text": "this Benchmark unfortunately because got so much attraction yeah yeah the good news is it got a lot of attra or",
    "start": "3116880",
    "end": "3123119"
  },
  {
    "text": "attraction on Twitter and attraction and so at the end of the day everyone looked at all these and were like wow look at",
    "start": "3123119",
    "end": "3129079"
  },
  {
    "text": "that look how fast these are I want to go back to writing this react component and you know that's that's like the end",
    "start": "3129079",
    "end": "3135839"
  },
  {
    "text": "you know so it's it's probably okay we're probably okay good point maybe I'm I'm over it because everyone like wow",
    "start": "3135839",
    "end": "3142240"
  },
  {
    "text": "Fortran is faster than rust and then I went right back to programming rust right so that you know it doesn't matter",
    "start": "3142240",
    "end": "3148280"
  },
  {
    "text": "right uh yeah it's fun though this was awesome this was really really good I can't believe you caught a bug and and",
    "start": "3148280",
    "end": "3154599"
  },
  {
    "text": "all that I mean to me I'm just I'm surprised about it so amazing work though especially since it was just like",
    "start": "3154599",
    "end": "3160599"
  },
  {
    "text": "so straightforward yeah I mean and who knows how many more there are like you",
    "start": "3160599",
    "end": "3166319"
  },
  {
    "text": "said like that was I literally looked at just the top one of the list and I found",
    "start": "3166319",
    "end": "3171880"
  },
  {
    "text": "a bug right away right like it wasn't like I oh I spent 40 hours digging",
    "start": "3171880",
    "end": "3177520"
  },
  {
    "text": "through all the code and found this it's like nope first time out of the gate and it's broken so yeah one could imagine",
    "start": "3177520",
    "end": "3183319"
  },
  {
    "text": "that the rust one probably has it uh have no idea you I once again those one of the",
    "start": "3183319",
    "end": "3191599"
  },
  {
    "text": "problems again with testing like this is those millisecond times are really way",
    "start": "3191599",
    "end": "3197440"
  },
  {
    "text": "too low uh if you're looking at command line startup times because uh all",
    "start": "3197440",
    "end": "3204200"
  },
  {
    "text": "languages have to make tradeoffs in that regard about how they're going to do",
    "start": "3204200",
    "end": "3209720"
  },
  {
    "text": "what kind of memory provisioning they're going to do what kind of uh thread stuff they're going to start up at runtime and",
    "start": "3209720",
    "end": "3214799"
  },
  {
    "text": "all this other sort of stuff and when you're talking about low millisecond times like that a lot of times a startup",
    "start": "3214799",
    "end": "3221839"
  },
  {
    "text": "hasn't been optimized to try and get that down for uh situations where you want extremely fast command line",
    "start": "3221839",
    "end": "3229319"
  },
  {
    "text": "turnaround now that's not to say that I don't think a very mature",
    "start": "3229319",
    "end": "3234400"
  },
  {
    "text": "language uh should probably have ways of of adding some directives to make sure",
    "start": "3234400",
    "end": "3239920"
  },
  {
    "text": "that your startup time is as fast as possible absolutely that's a good thing to have do I think that's an important",
    "start": "3239920",
    "end": "3246280"
  },
  {
    "text": "thing for ginger Bill to be worrying about on Odin right now no it is the",
    "start": "3246280",
    "end": "3252400"
  },
  {
    "text": "least important thing for him to be worrying about because 99.999% of programs don't care if their",
    "start": "3252400",
    "end": "3260000"
  },
  {
    "text": "startup has an additional 10 milliseconds in it cuz most of them are load and long run right most of them",
    "start": "3260000",
    "end": "3266119"
  },
  {
    "text": "aren like a compiler where like the turnaround time on the command line is something we're actually measuring uh",
    "start": "3266119",
    "end": "3271640"
  },
  {
    "text": "most of them are like this application you're running Ember genen if you can spend an extra 10 milliseconds at",
    "start": "3271640",
    "end": "3276839"
  },
  {
    "text": "startup to get you a bunch of performance or to get you a smoother thing happening later on that's a good",
    "start": "3276839",
    "end": "3283040"
  },
  {
    "text": "tradeoff and you don't want to bias against that because most programs would rather have the ladder and so again even",
    "start": "3283040",
    "end": "3291400"
  },
  {
    "text": "if we assumed there were no bugs one of the problems is this is not enough work to be timing on a startup run and exit",
    "start": "3291400",
    "end": "3297960"
  },
  {
    "text": "Benchmark because you're starting to get into a lot of OS things page fault things there's all these other sorts of things that you might be looking at",
    "start": "3297960",
    "end": "3303960"
  },
  {
    "text": "there depending on what the uh language has to do when it starts up and so as people have said over and over and over",
    "start": "3303960",
    "end": "3311480"
  },
  {
    "text": "again to the person who made this Benchmark you really should just be timing things inside what the languages",
    "start": "3311480",
    "end": "3317000"
  },
  {
    "text": "are doing because startup time is a really bad because there's different tradeoffs you might make there but if",
    "start": "3317000",
    "end": "3322200"
  },
  {
    "text": "you are so if you are conclud startup time you need to at least have enough work that the startup time itself isn't",
    "start": "3322200",
    "end": "3328760"
  },
  {
    "text": "like in that same range as the work amount right uh or you're in trouble",
    "start": "3328760",
    "end": "3334200"
  },
  {
    "text": "yeah so well awesome thanks for being on here again this was great thanks for",
    "start": "3334200",
    "end": "3340520"
  },
  {
    "text": "having me thanks everyone for for listening to another Benchmark rant and",
    "start": "3340520",
    "end": "3345880"
  },
  {
    "text": "uh when they invariably ship another one of these I'll be back here let's go and I'll try to remain calmer than this time",
    "start": "3345880",
    "end": "3353200"
  },
  {
    "text": "thanks everyone well this is very exciting I I feel like there's you know I don't know",
    "start": "3353200",
    "end": "3359039"
  },
  {
    "text": "if I could give my hand at making these any faster but it kind of feels like there's a lot of just funest in there just to go look at because I just",
    "start": "3359039",
    "end": "3364880"
  },
  {
    "text": "doesn't I I just don't even understand why they're they're different and so it just seems exciting yeah and that's what ideally",
    "start": "3364880",
    "end": "3372079"
  },
  {
    "text": "that's what a benchmark maintainer should be doing that's their job they should be looking and this is why uh",
    "start": "3372079",
    "end": "3377559"
  },
  {
    "text": "when I tweeted at this and I was uh when I first complained about it I said please stop poaching benchmarks without",
    "start": "3377559",
    "end": "3384000"
  },
  {
    "text": "the analysis you got to have the analysis right yeah if you do this Benchmark and then you go find out why",
    "start": "3384000",
    "end": "3389640"
  },
  {
    "text": "each one is the speed it is that's so valuable right if you just post this and go like ah YOLO swag it's that's",
    "start": "3389640",
    "end": "3397400"
  },
  {
    "text": "completely useless because you know maybe you're just mostly benchmarking bugs and it turns out that's what exactly what's going on",
    "start": "3397400",
    "end": "3403640"
  },
  {
    "text": "here it is all right awesome well thanks Casey thank you pleasure being on the",
    "start": "3403640",
    "end": "3410079"
  },
  {
    "text": "show as always thanks everyone for tuning in I forgot the most important part what computer enhance computer",
    "start": "3410079",
    "end": "3415640"
  },
  {
    "text": "computer enhance because I mean how did you get all of this valuable and amazing knowledge there must be a place in which",
    "start": "3415640",
    "end": "3421240"
  },
  {
    "text": "I could go to get this if you want to sign up",
    "start": "3421240",
    "end": "3427440"
  },
  {
    "text": "for computer enhance this is what we do there if you want to learn to read that asemu language and know why I looked at",
    "start": "3427440",
    "end": "3433440"
  },
  {
    "text": "it and said it looks pretty good well this is where you go this is where you go to find me this is what we do all all",
    "start": "3433440",
    "end": "3441240"
  },
  {
    "text": "day uh over at computer enhance so yeah check it out if you want to learn that stuff",
    "start": "3441240",
    "end": "3446720"
  },
  {
    "text": "uh I imagine most of your viewers know know that by now but thank you for the plug Prime I I do appreciate it no",
    "start": "3446720",
    "end": "3452319"
  },
  {
    "text": "problem it's it's awesome stuff in there I still get the emails and I look I look at I look at them like oh I want to look",
    "start": "3452319",
    "end": "3458119"
  },
  {
    "text": "at that one I want to look at that I just find I don't even have enough time to look at all of them they're so good they're just it's just it's a it's a",
    "start": "3458119",
    "end": "3464599"
  },
  {
    "text": "embarrassment of riches an embarrassment of riches it is it really is",
    "start": "3464599",
    "end": "3470440"
  }
]