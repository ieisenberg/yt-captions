[
  {
    "text": "server-side rendering react",
    "start": "0",
    "end": "3240"
  },
  {
    "text": "in ocamel server reason react is an",
    "start": "3240",
    "end": "6359"
  },
  {
    "text": "implementation of react Dom server and",
    "start": "6359",
    "end": "8519"
  },
  {
    "text": "some of reacts internals in ocamel its",
    "start": "8519",
    "end": "11519"
  },
  {
    "text": "purpose is to render HTML marker from",
    "start": "11519",
    "end": "13259"
  },
  {
    "text": "the server for a reason react",
    "start": "13259",
    "end": "15240"
  },
  {
    "text": "application natively this post provides",
    "start": "15240",
    "end": "17699"
  },
  {
    "text": "an overview of some of the concepts of",
    "start": "17699",
    "end": "19140"
  },
  {
    "text": "the library and what it means to render",
    "start": "19140",
    "end": "21180"
  },
  {
    "text": "react in ocamel and how we use it at",
    "start": "21180",
    "end": "24800"
  },
  {
    "text": "rfs.com a benchmark against node",
    "start": "24800",
    "end": "27060"
  },
  {
    "text": "equivalent and the future of all of this",
    "start": "27060",
    "end": "28619"
  },
  {
    "text": "ooh it's kind of excited let's see how",
    "start": "28619",
    "end": "30779"
  },
  {
    "text": "good it is against note because I have",
    "start": "30779",
    "end": "32099"
  },
  {
    "text": "no idea what ocamel can do",
    "start": "32099",
    "end": "34440"
  },
  {
    "text": "if you're not familiar with reason or oh",
    "start": "34440",
    "end": "36180"
  },
  {
    "text": "camel it's fine the purpose of this post",
    "start": "36180",
    "end": "37680"
  },
  {
    "text": "is not to convince you to learn or try",
    "start": "37680",
    "end": "39360"
  },
  {
    "text": "those languages but rather to share",
    "start": "39360",
    "end": "41340"
  },
  {
    "text": "something I built that I'm passionate",
    "start": "41340",
    "end": "43020"
  },
  {
    "text": "about",
    "start": "43020",
    "end": "44399"
  },
  {
    "text": "okay okay I will try to explain most",
    "start": "44399",
    "end": "46860"
  },
  {
    "text": "concepts for any developer with",
    "start": "46860",
    "end": "48059"
  },
  {
    "text": "experience and react don't be scared by",
    "start": "48059",
    "end": "49920"
  },
  {
    "text": "any Niche language technology mentioned",
    "start": "49920",
    "end": "51600"
  },
  {
    "text": "here since I'll introduce them as we go",
    "start": "51600",
    "end": "53039"
  },
  {
    "text": "the first piece of context to follow",
    "start": "53039",
    "end": "54480"
  },
  {
    "text": "this post is to introduce reason and O",
    "start": "54480",
    "end": "56879"
  },
  {
    "text": "camel for those who are not familiar",
    "start": "56879",
    "end": "58620"
  },
  {
    "text": "okay so I know nothing about ocamel",
    "start": "58620",
    "end": "60420"
  },
  {
    "text": "other than TJ loves him TJ is the",
    "start": "60420",
    "end": "64140"
  },
  {
    "text": "biggest fan",
    "start": "64140",
    "end": "65640"
  },
  {
    "text": "of oh camel",
    "start": "65640",
    "end": "68900"
  },
  {
    "text": "it is right there",
    "start": "70220",
    "end": "75180"
  },
  {
    "text": "there you go",
    "start": "75180",
    "end": "77960"
  },
  {
    "text": "there we go",
    "start": "78299",
    "end": "79740"
  },
  {
    "text": "uh okay let's see okay reason is a",
    "start": "79740",
    "end": "82320"
  },
  {
    "text": "language built on top of O camel they",
    "start": "82320",
    "end": "84299"
  },
  {
    "text": "share the compiler the type Checker in",
    "start": "84299",
    "end": "86100"
  },
  {
    "text": "most tooling around it was created by",
    "start": "86100",
    "end": "88439"
  },
  {
    "text": "Jordan walkie walkie walkie walkie",
    "start": "88439",
    "end": "91920"
  },
  {
    "text": "walkie",
    "start": "91920",
    "end": "94020"
  },
  {
    "text": "walkie",
    "start": "94020",
    "end": "95579"
  },
  {
    "text": "am I saying that right",
    "start": "95579",
    "end": "97259"
  },
  {
    "text": "uh anyways to allow JavaScript",
    "start": "97259",
    "end": "99180"
  },
  {
    "text": "developers to enjoy oh camel",
    "start": "99180",
    "end": "102540"
  },
  {
    "text": "okay okay I'm excited",
    "start": "102540",
    "end": "105180"
  },
  {
    "text": "uh back in the days when typescript was",
    "start": "105180",
    "end": "107159"
  },
  {
    "text": "not as popular many members of the",
    "start": "107159",
    "end": "108659"
  },
  {
    "text": "JavaScript Community were interested in",
    "start": "108659",
    "end": "110220"
  },
  {
    "text": "reason o camel is a type safe and robust",
    "start": "110220",
    "end": "112799"
  },
  {
    "text": "language that empowers a functional",
    "start": "112799",
    "end": "114360"
  },
  {
    "text": "Style with a powerful inference",
    "start": "114360",
    "end": "117000"
  },
  {
    "text": "I didn't realize El camo types",
    "start": "117000",
    "end": "119520"
  },
  {
    "text": "I didn't think it had types",
    "start": "119520",
    "end": "122719"
  },
  {
    "text": "it's pronounced Wally Wally uh it",
    "start": "123240",
    "end": "126360"
  },
  {
    "text": "provides a unique balance of performance",
    "start": "126360",
    "end": "127619"
  },
  {
    "text": "maintainability and readability okay",
    "start": "127619",
    "end": "129239"
  },
  {
    "text": "okay see That's how little I know about",
    "start": "129239",
    "end": "131039"
  },
  {
    "text": "ocamel despite being a niche a",
    "start": "131039",
    "end": "133140"
  },
  {
    "text": "programming language ocamel has made an",
    "start": "133140",
    "end": "134760"
  },
  {
    "text": "impact on Modern programming languages",
    "start": "134760",
    "end": "136260"
  },
  {
    "text": "in language tooling the first version of",
    "start": "136260",
    "end": "138060"
  },
  {
    "text": "rust were implemented in O Campbell and",
    "start": "138060",
    "end": "139980"
  },
  {
    "text": "meta's flow JavaScript type Checker as",
    "start": "139980",
    "end": "142020"
  },
  {
    "text": "well",
    "start": "142020",
    "end": "144200"
  },
  {
    "text": "huh",
    "start": "147360",
    "end": "149580"
  },
  {
    "text": "okay",
    "start": "149580",
    "end": "150959"
  },
  {
    "text": "nowadays o camel is a solid option for",
    "start": "150959",
    "end": "153540"
  },
  {
    "text": "General programming language backed by",
    "start": "153540",
    "end": "155340"
  },
  {
    "text": "trade firms blockchain and SAS companies",
    "start": "155340",
    "end": "160160"
  },
  {
    "text": "the the three out of four Riders of the",
    "start": "161280",
    "end": "163860"
  },
  {
    "text": "Apocalypse there I see is what writes",
    "start": "163860",
    "end": "165660"
  },
  {
    "text": "them fintech blockchain and SAS",
    "start": "165660",
    "end": "168900"
  },
  {
    "text": "companies",
    "start": "168900",
    "end": "170519"
  },
  {
    "text": "dang it",
    "start": "170519",
    "end": "172260"
  },
  {
    "text": "all right and refs I'm a software",
    "start": "172260",
    "end": "174420"
  },
  {
    "text": "engineer working on tooling IO work on",
    "start": "174420",
    "end": "176519"
  },
  {
    "text": "maintaining the design system style to",
    "start": "176519",
    "end": "178920"
  },
  {
    "text": "PPX uh let's see helping the malays and",
    "start": "178920",
    "end": "182400"
  },
  {
    "text": "now the server react reason uh refs is a",
    "start": "182400",
    "end": "184980"
  },
  {
    "text": "comprehensive SEO tool set okay let's",
    "start": "184980",
    "end": "187019"
  },
  {
    "text": "just go to the problem I want to read",
    "start": "187019",
    "end": "188160"
  },
  {
    "text": "the problem here",
    "start": "188160",
    "end": "189420"
  },
  {
    "text": "all right uh one of the initial problems",
    "start": "189420",
    "end": "191340"
  },
  {
    "text": "with our main react application was that",
    "start": "191340",
    "end": "193860"
  },
  {
    "text": "the client was client-side rendering the",
    "start": "193860",
    "end": "195360"
  },
  {
    "text": "canonical example of this problem",
    "start": "195360",
    "end": "196500"
  },
  {
    "text": "happens on the header we had a to load a",
    "start": "196500",
    "end": "199379"
  },
  {
    "text": "bunch of contextual data such as user",
    "start": "199379",
    "end": "201360"
  },
  {
    "text": "permissions Billings tokens and themes",
    "start": "201360",
    "end": "202980"
  },
  {
    "text": "running all those requests on the client",
    "start": "202980",
    "end": "204780"
  },
  {
    "text": "creates a request waterfall uh yep and",
    "start": "204780",
    "end": "207180"
  },
  {
    "text": "often our users use more than one tool",
    "start": "207180",
    "end": "209040"
  },
  {
    "text": "at a time where navigating between those",
    "start": "209040",
    "end": "211200"
  },
  {
    "text": "is not an optimal experience yep okay",
    "start": "211200",
    "end": "213239"
  },
  {
    "text": "navigation would be slow flashing the",
    "start": "213239",
    "end": "215580"
  },
  {
    "text": "header for an entire let's say and the",
    "start": "215580",
    "end": "217260"
  },
  {
    "text": "entire app while mounting each page uh",
    "start": "217260",
    "end": "219840"
  },
  {
    "text": "time can be annoying and waste okay okay",
    "start": "219840",
    "end": "221819"
  },
  {
    "text": "so you guys see the idea here we got",
    "start": "221819",
    "end": "223980"
  },
  {
    "text": "some we got some request problems we got",
    "start": "223980",
    "end": "225720"
  },
  {
    "text": "some waterfalls they're gonna try to",
    "start": "225720",
    "end": "227879"
  },
  {
    "text": "solve this I assume a server-side",
    "start": "227879",
    "end": "229019"
  },
  {
    "text": "rendering right",
    "start": "229019",
    "end": "230879"
  },
  {
    "text": "uh to address those issues we",
    "start": "230879",
    "end": "232379"
  },
  {
    "text": "implemented server-side rendering for",
    "start": "232379",
    "end": "233580"
  },
  {
    "text": "our static Parts a shell app and",
    "start": "233580",
    "end": "235799"
  },
  {
    "text": "injected the HD or the data as regular",
    "start": "235799",
    "end": "237840"
  },
  {
    "text": "scripts with serialized or jismo for",
    "start": "237840",
    "end": "240840"
  },
  {
    "text": "short uh we used time XML time XML is",
    "start": "240840",
    "end": "244799"
  },
  {
    "text": "that an XML library a library that",
    "start": "244799",
    "end": "246900"
  },
  {
    "text": "generates HTML from ocamel okay uh for",
    "start": "246900",
    "end": "250439"
  },
  {
    "text": "creating these static templates okay",
    "start": "250439",
    "end": "252659"
  },
  {
    "text": "to improve the user experience by a lot",
    "start": "252659",
    "end": "254519"
  },
  {
    "text": "since the HTML served contains the",
    "start": "254519",
    "end": "256500"
  },
  {
    "text": "static part of the app so the browser",
    "start": "256500",
    "end": "258419"
  },
  {
    "text": "can cache it locally but we quickly",
    "start": "258419",
    "end": "260220"
  },
  {
    "text": "encountered a new problem having two",
    "start": "260220",
    "end": "262260"
  },
  {
    "text": "separate implementations of the same",
    "start": "262260",
    "end": "263759"
  },
  {
    "text": "component yes this is such a problem",
    "start": "263759",
    "end": "265500"
  },
  {
    "text": "with all this stuff the client version",
    "start": "265500",
    "end": "267360"
  },
  {
    "text": "written in react and the server version",
    "start": "267360",
    "end": "268979"
  },
  {
    "text": "written in time XL time XL time XL I'm",
    "start": "268979",
    "end": "272460"
  },
  {
    "text": "not sure how to say that but this is",
    "start": "272460",
    "end": "273720"
  },
  {
    "text": "real this is real talk",
    "start": "273720",
    "end": "275880"
  },
  {
    "text": "even even in like a lot of the days if",
    "start": "275880",
    "end": "277979"
  },
  {
    "text": "you've been developing react long enough",
    "start": "277979",
    "end": "279840"
  },
  {
    "text": "like this is just a problem in general",
    "start": "279840",
    "end": "282060"
  },
  {
    "text": "you start getting these weird you start",
    "start": "282060",
    "end": "284040"
  },
  {
    "text": "getting these weird things where you",
    "start": "284040",
    "end": "285120"
  },
  {
    "text": "start writing things twice because of",
    "start": "285120",
    "end": "286680"
  },
  {
    "text": "just all the problems that are caused",
    "start": "286680",
    "end": "288660"
  },
  {
    "text": "not easy to share implementations or",
    "start": "288660",
    "end": "290340"
  },
  {
    "text": "even Styles between the two keeping both",
    "start": "290340",
    "end": "292320"
  },
  {
    "text": "versions in sync uh with different data",
    "start": "292320",
    "end": "294180"
  },
  {
    "text": "requirements is too much hustle yeah",
    "start": "294180",
    "end": "296160"
  },
  {
    "text": "ensuring the server version of the",
    "start": "296160",
    "end": "297600"
  },
  {
    "text": "component functions correctly without",
    "start": "297600",
    "end": "298979"
  },
  {
    "text": "data in the client one mounts on top",
    "start": "298979",
    "end": "301020"
  },
  {
    "text": "with the interaction the resulting Tech",
    "start": "301020",
    "end": "302940"
  },
  {
    "text": "was difficult to maintain deterring",
    "start": "302940",
    "end": "304979"
  },
  {
    "text": "Developers for making significant",
    "start": "304979",
    "end": "306180"
  },
  {
    "text": "changes while the solution was adequate",
    "start": "306180",
    "end": "308160"
  },
  {
    "text": "for some time we sought a more scalable",
    "start": "308160",
    "end": "309720"
  },
  {
    "text": "approach to our front ends okay",
    "start": "309720",
    "end": "311580"
  },
  {
    "text": "hydration issues always hydration always",
    "start": "311580",
    "end": "314520"
  },
  {
    "text": "hydration issues to address some of",
    "start": "314520",
    "end": "316320"
  },
  {
    "text": "those problems Javi experimented to mix",
    "start": "316320",
    "end": "318720"
  },
  {
    "text": "uh tax smell tax smell and reason react",
    "start": "318720",
    "end": "321660"
  },
  {
    "text": "with a public and publish the experiment",
    "start": "321660",
    "end": "323940"
  },
  {
    "text": "on his block okay in addition to",
    "start": "323940",
    "end": "325919"
  },
  {
    "text": "server-side rendering rendering with",
    "start": "325919",
    "end": "327000"
  },
  {
    "text": "each request we need a different",
    "start": "327000",
    "end": "328020"
  },
  {
    "text": "strategy for our static Pages such as",
    "start": "328020",
    "end": "329940"
  },
  {
    "text": "server side generation what next calls",
    "start": "329940",
    "end": "332160"
  },
  {
    "text": "incremental static regeneration running",
    "start": "332160",
    "end": "334139"
  },
  {
    "text": "a rendering Step at build time and",
    "start": "334139",
    "end": "336240"
  },
  {
    "text": "populating state on each request okay",
    "start": "336240",
    "end": "337979"
  },
  {
    "text": "okay ultimately our goal was to use the",
    "start": "337979",
    "end": "340139"
  },
  {
    "text": "same client components from our design",
    "start": "340139",
    "end": "342300"
  },
  {
    "text": "system in these server templates okay",
    "start": "342300",
    "end": "344400"
  },
  {
    "text": "this is actually pretty interesting this",
    "start": "344400",
    "end": "345840"
  },
  {
    "text": "is a really good I'd say this has been a",
    "start": "345840",
    "end": "347580"
  },
  {
    "text": "really good kind of setup problem does",
    "start": "347580",
    "end": "349740"
  },
  {
    "text": "everyone understand what's going on here",
    "start": "349740",
    "end": "351240"
  },
  {
    "text": "because I'm very curious how how are",
    "start": "351240",
    "end": "352979"
  },
  {
    "text": "they actually gonna",
    "start": "352979",
    "end": "355440"
  },
  {
    "text": "you know it's used in a bunch of terms",
    "start": "355440",
    "end": "357120"
  },
  {
    "text": "right there's a bunch of there's a bunch",
    "start": "357120",
    "end": "359400"
  },
  {
    "text": "of terms that when people use in the in",
    "start": "359400",
    "end": "361080"
  },
  {
    "text": "the front end world I get confused all",
    "start": "361080",
    "end": "362699"
  },
  {
    "text": "right",
    "start": "362699",
    "end": "363660"
  },
  {
    "text": "let's see the first approach the common",
    "start": "363660",
    "end": "364919"
  },
  {
    "text": "solution to this problem is to go with a",
    "start": "364919",
    "end": "366780"
  },
  {
    "text": "node-based solution such as nexjs Gatsby",
    "start": "366780",
    "end": "369120"
  },
  {
    "text": "or Astro",
    "start": "369120",
    "end": "371220"
  },
  {
    "text": "Astro is pretty cool let's be real here",
    "start": "371220",
    "end": "373560"
  },
  {
    "text": "Astro is pretty cool after using Gatsby",
    "start": "373560",
    "end": "375600"
  },
  {
    "text": "and react snap for a few years and let's",
    "start": "375600",
    "end": "377759"
  },
  {
    "text": "say in a proof of concept with next we",
    "start": "377759",
    "end": "379320"
  },
  {
    "text": "weren't satisfied with any approach love",
    "start": "379320",
    "end": "381300"
  },
  {
    "text": "it pre-rendering SSG with node",
    "start": "381300",
    "end": "385080"
  },
  {
    "text": "running the pre-rendering step during",
    "start": "385080",
    "end": "387000"
  },
  {
    "text": "the build and serving them via our back",
    "start": "387000",
    "end": "388860"
  },
  {
    "text": "end in ocamel the solution couples the",
    "start": "388860",
    "end": "391319"
  },
  {
    "text": "build process running in a CI with the",
    "start": "391319",
    "end": "392940"
  },
  {
    "text": "runtime the production and staging",
    "start": "392940",
    "end": "394319"
  },
  {
    "text": "servers increase the complexity on how",
    "start": "394319",
    "end": "396120"
  },
  {
    "text": "we were serving those static files and",
    "start": "396120",
    "end": "397919"
  },
  {
    "text": "how those static files became populated",
    "start": "397919",
    "end": "400020"
  },
  {
    "text": "with data known as hydration interesting",
    "start": "400020",
    "end": "402840"
  },
  {
    "text": "this just all seems really hard because",
    "start": "402840",
    "end": "404880"
  },
  {
    "text": "whenever you're mixing light like",
    "start": "404880",
    "end": "406259"
  },
  {
    "text": "because mixing languages",
    "start": "406259",
    "end": "408180"
  },
  {
    "text": "especially when there's not like because",
    "start": "408180",
    "end": "409380"
  },
  {
    "text": "javascript's the only one with the full",
    "start": "409380",
    "end": "411120"
  },
  {
    "text": "react support so like this mixing of",
    "start": "411120",
    "end": "413340"
  },
  {
    "text": "languages just seems like it's so hard I",
    "start": "413340",
    "end": "416160"
  },
  {
    "text": "just assume this is so dang hard and",
    "start": "416160",
    "end": "417660"
  },
  {
    "text": "yeah you could you create these",
    "start": "417660",
    "end": "419160"
  },
  {
    "text": "templates but still templates could be",
    "start": "419160",
    "end": "420840"
  },
  {
    "text": "unsafe to hydrate and error prone yep",
    "start": "420840",
    "end": "422639"
  },
  {
    "text": "you need to generate templates for each",
    "start": "422639",
    "end": "423960"
  },
  {
    "text": "language currently 17 and upload them",
    "start": "423960",
    "end": "425699"
  },
  {
    "text": "well each language has in each spoken",
    "start": "425699",
    "end": "427979"
  },
  {
    "text": "language that must be a spoken language",
    "start": "427979",
    "end": "429479"
  },
  {
    "text": "thing that's tough we don't do it like",
    "start": "429479",
    "end": "432060"
  },
  {
    "text": "that at Netflix but interesting running",
    "start": "432060",
    "end": "434220"
  },
  {
    "text": "the pre-rendering on CI made a weird",
    "start": "434220",
    "end": "436380"
  },
  {
    "text": "combination pre-rendering required to",
    "start": "436380",
    "end": "437940"
  },
  {
    "text": "couple our o camel back end with HTML",
    "start": "437940",
    "end": "439979"
  },
  {
    "text": "files and be aware of purging the cache",
    "start": "439979",
    "end": "443660"
  },
  {
    "text": "this is this sounds really hard this",
    "start": "444780",
    "end": "447539"
  },
  {
    "text": "sounds really really hard",
    "start": "447539",
    "end": "449759"
  },
  {
    "text": "running node with SSR on production the",
    "start": "449759",
    "end": "451979"
  },
  {
    "text": "other solution is to serve applications",
    "start": "451979",
    "end": "453240"
  },
  {
    "text": "by node and using ocamel as an API okay",
    "start": "453240",
    "end": "455699"
  },
  {
    "text": "placing node in front is a very common",
    "start": "455699",
    "end": "457979"
  },
  {
    "text": "architecture that works wonderful in",
    "start": "457979",
    "end": "459479"
  },
  {
    "text": "some teams but there are still drawbacks",
    "start": "459479",
    "end": "461160"
  },
  {
    "text": "when using node in the back end uh for",
    "start": "461160",
    "end": "464160"
  },
  {
    "text": "refs is this",
    "start": "464160",
    "end": "466199"
  },
  {
    "text": "so what he's saying is that you have an",
    "start": "466199",
    "end": "467880"
  },
  {
    "text": "application that does",
    "start": "467880",
    "end": "469620"
  },
  {
    "text": "just to get this kind of correct in my",
    "start": "469620",
    "end": "471120"
  },
  {
    "text": "head I think what he's saying is that",
    "start": "471120",
    "end": "472020"
  },
  {
    "text": "you have a client right here you have",
    "start": "472020",
    "end": "473520"
  },
  {
    "text": "like middleware that is still node and",
    "start": "473520",
    "end": "475680"
  },
  {
    "text": "then you have like an API that it calls",
    "start": "475680",
    "end": "477599"
  },
  {
    "text": "into that is ocamel they don't just",
    "start": "477599",
    "end": "479880"
  },
  {
    "text": "substitute translations uh in the one in",
    "start": "479880",
    "end": "481680"
  },
  {
    "text": "the template they make multiple",
    "start": "481680",
    "end": "482759"
  },
  {
    "text": "templates say yeah they make multiple",
    "start": "482759",
    "end": "484139"
  },
  {
    "text": "templates one for each language",
    "start": "484139",
    "end": "486660"
  },
  {
    "text": "hmm",
    "start": "486660",
    "end": "489139"
  },
  {
    "text": "anyways very interesting I think that's",
    "start": "489960",
    "end": "491940"
  },
  {
    "text": "what I'm saying I think that's what I'm",
    "start": "491940",
    "end": "493319"
  },
  {
    "text": "seeing here most of our apis consist of",
    "start": "493319",
    "end": "495240"
  },
  {
    "text": "fetching from different data storages",
    "start": "495240",
    "end": "496680"
  },
  {
    "text": "and Shuffle this data to serve it some",
    "start": "496680",
    "end": "498599"
  },
  {
    "text": "of those problems make it not ideal for",
    "start": "498599",
    "end": "500280"
  },
  {
    "text": "us single threaded nature node.js",
    "start": "500280",
    "end": "502440"
  },
  {
    "text": "inherently single threaded yes which can",
    "start": "502440",
    "end": "504120"
  },
  {
    "text": "lead to Performance issues when dealing",
    "start": "504120",
    "end": "505500"
  },
  {
    "text": "with high concurrency or CPU intensive",
    "start": "505500",
    "end": "507300"
  },
  {
    "text": "tasks yes yes and yes node.js isn't the",
    "start": "507300",
    "end": "510539"
  },
  {
    "text": "best player at memory consumption oh",
    "start": "510539",
    "end": "512640"
  },
  {
    "text": "really I just read in our previous",
    "start": "512640",
    "end": "514020"
  },
  {
    "text": "article that",
    "start": "514020",
    "end": "515880"
  },
  {
    "text": "that uh JavaScript devs are very",
    "start": "515880",
    "end": "518940"
  },
  {
    "text": "concerned about memory all of a sudden",
    "start": "518940",
    "end": "520919"
  },
  {
    "text": "I'm looking right here and I don't know",
    "start": "520919",
    "end": "522479"
  },
  {
    "text": "I don't I don't know about this you know",
    "start": "522479",
    "end": "524940"
  },
  {
    "text": "what I mean seems a little suspicious",
    "start": "524940",
    "end": "526920"
  },
  {
    "text": "you know what I mean seems a little",
    "start": "526920",
    "end": "528480"
  },
  {
    "text": "suspicious SSR applications can be",
    "start": "528480",
    "end": "530399"
  },
  {
    "text": "Memory intensive potentially causing",
    "start": "530399",
    "end": "531779"
  },
  {
    "text": "resource constrained in production",
    "start": "531779",
    "end": "532920"
  },
  {
    "text": "environments yes this is real you use a",
    "start": "532920",
    "end": "535680"
  },
  {
    "text": "lot of memory when you use something",
    "start": "535680",
    "end": "537060"
  },
  {
    "text": "like react on the server right I think",
    "start": "537060",
    "end": "538980"
  },
  {
    "text": "this is going to be a really big problem",
    "start": "538980",
    "end": "540360"
  },
  {
    "text": "with the upcoming push for everyone",
    "start": "540360",
    "end": "542160"
  },
  {
    "text": "writing a bunch of JavaScript",
    "start": "542160",
    "end": "543720"
  },
  {
    "text": "applications all these serverless places",
    "start": "543720",
    "end": "546300"
  },
  {
    "text": "like it's gonna need a lot of memories",
    "start": "546300",
    "end": "548820"
  },
  {
    "text": "just not cheap and it's only getting",
    "start": "548820",
    "end": "550320"
  },
  {
    "text": "less and less cheap all the time",
    "start": "550320",
    "end": "552300"
  },
  {
    "text": "uh let's see additional burden on devops",
    "start": "552300",
    "end": "555180"
  },
  {
    "text": "as they're not happy learning another",
    "start": "555180",
    "end": "556560"
  },
  {
    "text": "language and a framework to manage with",
    "start": "556560",
    "end": "558240"
  },
  {
    "text": "the emphasis since it's an uh entry",
    "start": "558240",
    "end": "559980"
  },
  {
    "text": "point for users type safety concerns",
    "start": "559980",
    "end": "561779"
  },
  {
    "text": "ensuring type safety would be required",
    "start": "561779",
    "end": "563339"
  },
  {
    "text": "either using typescript and maintaining",
    "start": "563339",
    "end": "565019"
  },
  {
    "text": "a separate type definitions or using a",
    "start": "565019",
    "end": "566940"
  },
  {
    "text": "reason and compiling it to JavaScript",
    "start": "566940",
    "end": "568380"
  },
  {
    "text": "however the node.js's bindings aren't my",
    "start": "568380",
    "end": "570779"
  },
  {
    "text": "favorite part of Reason okay",
    "start": "570779",
    "end": "573420"
  },
  {
    "text": "let's see might lead to some duplication",
    "start": "573420",
    "end": "574920"
  },
  {
    "text": "of logic yep",
    "start": "574920",
    "end": "576540"
  },
  {
    "text": "yeah see this I mean this all makes",
    "start": "576540",
    "end": "578640"
  },
  {
    "text": "sense you have two different you have",
    "start": "578640",
    "end": "580080"
  },
  {
    "text": "two different problems you have two",
    "start": "580080",
    "end": "581640"
  },
  {
    "text": "different back ends you're gonna have",
    "start": "581640",
    "end": "582540"
  },
  {
    "text": "two different duplications logic",
    "start": "582540",
    "end": "583680"
  },
  {
    "text": "switching a request from the server to",
    "start": "583680",
    "end": "584940"
  },
  {
    "text": "the client or the other way around can",
    "start": "584940",
    "end": "586260"
  },
  {
    "text": "be challenging potentially leading to",
    "start": "586260",
    "end": "587640"
  },
  {
    "text": "increased complexity",
    "start": "587640",
    "end": "590420"
  },
  {
    "text": "all right so it looks like it's time",
    "start": "590820",
    "end": "594180"
  },
  {
    "text": "think of the poor devops guy we're just",
    "start": "594180",
    "end": "595860"
  },
  {
    "text": "going to jump right down here entering",
    "start": "595860",
    "end": "597060"
  },
  {
    "text": "server reason react reason react this",
    "start": "597060",
    "end": "599519"
  },
  {
    "text": "reason the reason parser comes with the",
    "start": "599519",
    "end": "601500"
  },
  {
    "text": "jsx Transformations out of the box so",
    "start": "601500",
    "end": "603120"
  },
  {
    "text": "jsx expressions are compiled down to",
    "start": "603120",
    "end": "605459"
  },
  {
    "text": "function calls no need to use Babel es",
    "start": "605459",
    "end": "608160"
  },
  {
    "text": "build or white or uh in reason oh",
    "start": "608160",
    "end": "610500"
  },
  {
    "text": "interesting",
    "start": "610500",
    "end": "612120"
  },
  {
    "text": "is that because",
    "start": "612120",
    "end": "614160"
  },
  {
    "text": "in I assume that's because in O camel",
    "start": "614160",
    "end": "617519"
  },
  {
    "text": "there's some sort of",
    "start": "617519",
    "end": "619459"
  },
  {
    "text": "macroing that's going on here right this",
    "start": "619459",
    "end": "621959"
  },
  {
    "text": "little react component is some sort of",
    "start": "621959",
    "end": "623580"
  },
  {
    "text": "macroing that's changing everything",
    "start": "623580",
    "end": "626760"
  },
  {
    "text": "who is Jay and why is he why is he sex",
    "start": "626760",
    "end": "629100"
  },
  {
    "text": "oh J J sex yeah that's how you say the",
    "start": "629100",
    "end": "631980"
  },
  {
    "text": "name properly uh",
    "start": "631980",
    "end": "634380"
  },
  {
    "text": "uh that's cool",
    "start": "634380",
    "end": "635940"
  },
  {
    "text": "this is super cool I think I think I",
    "start": "635940",
    "end": "638100"
  },
  {
    "text": "could I think I could get used to that I",
    "start": "638100",
    "end": "640080"
  },
  {
    "text": "like that I'm a little confused as how",
    "start": "640080",
    "end": "641880"
  },
  {
    "text": "what the syntax means because I don't",
    "start": "641880",
    "end": "643200"
  },
  {
    "text": "see like a return statement I see a",
    "start": "643200",
    "end": "644640"
  },
  {
    "text": "semicolon at the end so you know if I",
    "start": "644640",
    "end": "646380"
  },
  {
    "text": "apply my rust skills this is not",
    "start": "646380",
    "end": "647820"
  },
  {
    "text": "returning anything out okay but I like",
    "start": "647820",
    "end": "650100"
  },
  {
    "text": "that I love the idea that you don't have",
    "start": "650100",
    "end": "651899"
  },
  {
    "text": "a build step",
    "start": "651899",
    "end": "653519"
  },
  {
    "text": "for just a translation of the language",
    "start": "653519",
    "end": "655440"
  },
  {
    "text": "right I I love so I love that idea",
    "start": "655440",
    "end": "657660"
  },
  {
    "text": "reason reactor Set uh our set of",
    "start": "657660",
    "end": "659940"
  },
  {
    "text": "bindings to the JavaScript version of",
    "start": "659940",
    "end": "661560"
  },
  {
    "text": "react so a tiny layer of the type system",
    "start": "661560",
    "end": "663779"
  },
  {
    "text": "to tell the reason code the right",
    "start": "663779",
    "end": "665600"
  },
  {
    "text": "interface of those hooks create element",
    "start": "665600",
    "end": "667920"
  },
  {
    "text": "calls and any react API similar to what",
    "start": "667920",
    "end": "670019"
  },
  {
    "text": "dot DTS modules are in typescript okay",
    "start": "670019",
    "end": "673260"
  },
  {
    "text": "or ffi and rust okay so what's server",
    "start": "673260",
    "end": "675480"
  },
  {
    "text": "reason react server reason react is a",
    "start": "675480",
    "end": "677279"
  },
  {
    "text": "re-implemented re-implementation of",
    "start": "677279",
    "end": "679140"
  },
  {
    "text": "react Dom server and some parts of react",
    "start": "679140",
    "end": "681839"
  },
  {
    "text": "itself to generate markup from a react",
    "start": "681839",
    "end": "683760"
  },
  {
    "text": "component but written in O camel more",
    "start": "683760",
    "end": "685680"
  },
  {
    "text": "precisely react Dom render to string and",
    "start": "685680",
    "end": "687360"
  },
  {
    "text": "react okay okay uh to make sure that Dom",
    "start": "687360",
    "end": "690959"
  },
  {
    "text": "let's see react Dom can represent all",
    "start": "690959",
    "end": "692760"
  },
  {
    "text": "kinds of nodes in react components",
    "start": "692760",
    "end": "694320"
  },
  {
    "text": "elements fragments providers consumers",
    "start": "694320",
    "end": "695940"
  },
  {
    "text": "there's a node variant",
    "start": "695940",
    "end": "698640"
  },
  {
    "text": "okay so this must be oh camera we're",
    "start": "698640",
    "end": "700440"
  },
  {
    "text": "looking at here",
    "start": "700440",
    "end": "701700"
  },
  {
    "text": "and so this must be this is effectively",
    "start": "701700",
    "end": "703680"
  },
  {
    "text": "a tagged Union are we seeing a tagged",
    "start": "703680",
    "end": "705360"
  },
  {
    "text": "Union here is that what this is",
    "start": "705360",
    "end": "708620"
  },
  {
    "text": "right",
    "start": "709079",
    "end": "711000"
  },
  {
    "text": "I don't really know what I'm looking at",
    "start": "711000",
    "end": "712380"
  },
  {
    "text": "because I don't understand the syntax",
    "start": "712380",
    "end": "713579"
  },
  {
    "text": "this looks like some sort of function",
    "start": "713579",
    "end": "715860"
  },
  {
    "text": "here a function that takes it takes in",
    "start": "715860",
    "end": "718079"
  },
  {
    "text": "the unit returns a node",
    "start": "718079",
    "end": "719760"
  },
  {
    "text": "this takes in a unit returns a node",
    "start": "719760",
    "end": "723420"
  },
  {
    "text": "I don't understand what that list does",
    "start": "723420",
    "end": "724860"
  },
  {
    "text": "right there it's a rusty note yeah",
    "start": "724860",
    "end": "726000"
  },
  {
    "text": "that's why I said tag Dino yeah I kind",
    "start": "726000",
    "end": "727740"
  },
  {
    "text": "of understand this okay",
    "start": "727740",
    "end": "729720"
  },
  {
    "text": "cool all right they match uh with what",
    "start": "729720",
    "end": "732420"
  },
  {
    "text": "react internally uses uh with symbols",
    "start": "732420",
    "end": "734459"
  },
  {
    "text": "the actual string generation is done by",
    "start": "734459",
    "end": "736380"
  },
  {
    "text": "traversing the component tree and",
    "start": "736380",
    "end": "737700"
  },
  {
    "text": "generating specific HTML representation",
    "start": "737700",
    "end": "739380"
  },
  {
    "text": "of each node and each node takes into",
    "start": "739380",
    "end": "741120"
  },
  {
    "text": "account a few details uh let's say such",
    "start": "741120",
    "end": "743399"
  },
  {
    "text": "a serialization Dom uh processes let's",
    "start": "743399",
    "end": "746040"
  },
  {
    "text": "see attributes process inline Styles and",
    "start": "746040",
    "end": "747720"
  },
  {
    "text": "code HTML and a few reacts particular",
    "start": "747720",
    "end": "749220"
  },
  {
    "text": "such as dangerously set in uh set inner",
    "start": "749220",
    "end": "752339"
  },
  {
    "text": "HTML so I've always was curious about",
    "start": "752339",
    "end": "753839"
  },
  {
    "text": "how react does that so they keep it in a",
    "start": "753839",
    "end": "756180"
  },
  {
    "text": "tree formation and then they walk the",
    "start": "756180",
    "end": "757740"
  },
  {
    "text": "tree and generate the string as it goes",
    "start": "757740",
    "end": "760860"
  },
  {
    "text": "okay that makes sense",
    "start": "760860",
    "end": "763260"
  },
  {
    "text": "that makes sense a pseudo implementation",
    "start": "763260",
    "end": "765300"
  },
  {
    "text": "of uh rendered a string to illustrate",
    "start": "765300",
    "end": "767279"
  },
  {
    "text": "the mapping between components and HTML",
    "start": "767279",
    "end": "768779"
  },
  {
    "text": "representation okay we're going full all",
    "start": "768779",
    "end": "770339"
  },
  {
    "text": "in right now with o camera right here",
    "start": "770339",
    "end": "772079"
  },
  {
    "text": "all right so render to string this must",
    "start": "772079",
    "end": "774300"
  },
  {
    "text": "be the argument",
    "start": "774300",
    "end": "775620"
  },
  {
    "text": "match node with lowercase tags attribute",
    "start": "775620",
    "end": "779100"
  },
  {
    "text": "when HTML is self-closing tag",
    "start": "779100",
    "end": "781740"
  },
  {
    "text": "okay",
    "start": "781740",
    "end": "784019"
  },
  {
    "text": "okay there we go so it's generating this",
    "start": "784019",
    "end": "785880"
  },
  {
    "text": "string right here tag attributes to",
    "start": "785880",
    "end": "788639"
  },
  {
    "text": "string tag attributes okay so this must",
    "start": "788639",
    "end": "790800"
  },
  {
    "text": "be a function call that takes in two",
    "start": "790800",
    "end": "792120"
  },
  {
    "text": "arguments that's how I kind of read this",
    "start": "792120",
    "end": "793380"
  },
  {
    "text": "and so it does each one of these okay",
    "start": "793380",
    "end": "795899"
  },
  {
    "text": "and then we recall render to string",
    "start": "795899",
    "end": "798660"
  },
  {
    "text": "with component goes back in here and",
    "start": "798660",
    "end": "801240"
  },
  {
    "text": "goes back through here text it does a",
    "start": "801240",
    "end": "803279"
  },
  {
    "text": "little text inner HTML okay list render",
    "start": "803279",
    "end": "805920"
  },
  {
    "text": "to string list okay",
    "start": "805920",
    "end": "808079"
  },
  {
    "text": "I think I understand that uh list itter",
    "start": "808079",
    "end": "810300"
  },
  {
    "text": "I don't really quite get this",
    "start": "810300",
    "end": "812880"
  },
  {
    "text": "this must taken list iter must take in a",
    "start": "812880",
    "end": "815519"
  },
  {
    "text": "function to call with the thing to",
    "start": "815519",
    "end": "818100"
  },
  {
    "text": "iterate over",
    "start": "818100",
    "end": "820019"
  },
  {
    "text": "is that correct",
    "start": "820019",
    "end": "822740"
  },
  {
    "text": "they get that correct",
    "start": "823920",
    "end": "826380"
  },
  {
    "text": "okay",
    "start": "826380",
    "end": "828860"
  },
  {
    "text": "cool",
    "start": "828959",
    "end": "830220"
  },
  {
    "text": "I feel like okay like I mean the thing",
    "start": "830220",
    "end": "832200"
  },
  {
    "text": "is I haven't written any ocamel so it",
    "start": "832200",
    "end": "833940"
  },
  {
    "text": "feels I mean reading a language can be",
    "start": "833940",
    "end": "836880"
  },
  {
    "text": "kind of easy if you have if you have",
    "start": "836880",
    "end": "838500"
  },
  {
    "text": "something to think of like if you have",
    "start": "838500",
    "end": "840180"
  },
  {
    "text": "some sort of uh template to think of and",
    "start": "840180",
    "end": "842820"
  },
  {
    "text": "I kind of feel like you know it's",
    "start": "842820",
    "end": "844380"
  },
  {
    "text": "supposed to be rusty",
    "start": "844380",
    "end": "846120"
  },
  {
    "text": "right so you know I figured this was a",
    "start": "846120",
    "end": "848100"
  },
  {
    "text": "tagged Union I I know functional style",
    "start": "848100",
    "end": "850560"
  },
  {
    "text": "is really confusing they love that kind",
    "start": "850560",
    "end": "852300"
  },
  {
    "text": "of stuff uh but",
    "start": "852300",
    "end": "854399"
  },
  {
    "text": "I could I could learn to love oh camel I",
    "start": "854399",
    "end": "856380"
  },
  {
    "text": "could learn to love it uh to be sure it",
    "start": "856380",
    "end": "858660"
  },
  {
    "text": "supports full render and hydration the",
    "start": "858660",
    "end": "860100"
  },
  {
    "text": "same way as reacts does I migrated all",
    "start": "860100",
    "end": "861660"
  },
  {
    "text": "tests uh oh really okay with all this",
    "start": "861660",
    "end": "864540"
  },
  {
    "text": "solved uh on the server a rest of reacts",
    "start": "864540",
    "end": "867120"
  },
  {
    "text": "such as hooks portals or any other apis",
    "start": "867120",
    "end": "868920"
  },
  {
    "text": "were trivially trivial in comparison",
    "start": "868920",
    "end": "870720"
  },
  {
    "text": "okay uh most hooks do nothing use the",
    "start": "870720",
    "end": "873300"
  },
  {
    "text": "facts that don't run you state is only",
    "start": "873300",
    "end": "874860"
  },
  {
    "text": "setting the initial value all states are",
    "start": "874860",
    "end": "876959"
  },
  {
    "text": "ignored use callback creates a function",
    "start": "876959",
    "end": "879000"
  },
  {
    "text": "once and probably never called use memo",
    "start": "879000",
    "end": "881100"
  },
  {
    "text": "runs and gets the value yep okay this",
    "start": "881100",
    "end": "882959"
  },
  {
    "text": "all makes sense yeah because on the",
    "start": "882959",
    "end": "884040"
  },
  {
    "text": "server it's a bunch of nothings that",
    "start": "884040",
    "end": "886560"
  },
  {
    "text": "totally makes sense once let's see one",
    "start": "886560",
    "end": "888660"
  },
  {
    "text": "difference with my implementation is",
    "start": "888660",
    "end": "890160"
  },
  {
    "text": "about doing a single pass on the react",
    "start": "890160",
    "end": "891779"
  },
  {
    "text": "tree while react JS does multiple passes",
    "start": "891779",
    "end": "894420"
  },
  {
    "text": "it's uh let's see but it's on them to",
    "start": "894420",
    "end": "896880"
  },
  {
    "text": "change it",
    "start": "896880",
    "end": "898440"
  },
  {
    "text": "all nice",
    "start": "898440",
    "end": "900440"
  },
  {
    "text": "uh with all this done uh we can return",
    "start": "900440",
    "end": "902940"
  },
  {
    "text": "those uh strings as HP responses okay",
    "start": "902940",
    "end": "906120"
  },
  {
    "text": "okay Benchmark all right this is where",
    "start": "906120",
    "end": "908279"
  },
  {
    "text": "the juice comes in this is what I'm very",
    "start": "908279",
    "end": "910440"
  },
  {
    "text": "curious about does it win with the",
    "start": "910440",
    "end": "913139"
  },
  {
    "text": "juices you know what I mean the juices",
    "start": "913139",
    "end": "914940"
  },
  {
    "text": "uh the main question I got while I was",
    "start": "914940",
    "end": "917279"
  },
  {
    "text": "implementing was this was about",
    "start": "917279",
    "end": "918240"
  },
  {
    "text": "performance yeah the theory said that",
    "start": "918240",
    "end": "919680"
  },
  {
    "text": "the compiled language ocamel should over",
    "start": "919680",
    "end": "921360"
  },
  {
    "text": "perform and interpreted one JavaScript",
    "start": "921360",
    "end": "923160"
  },
  {
    "text": "so you can't",
    "start": "923160",
    "end": "924600"
  },
  {
    "text": "the thing is is that",
    "start": "924600",
    "end": "927320"
  },
  {
    "text": "V8 is really amazing",
    "start": "927320",
    "end": "930000"
  },
  {
    "text": "and there's a lot of things VA can do",
    "start": "930000",
    "end": "931860"
  },
  {
    "text": "that are really amazing you know string",
    "start": "931860",
    "end": "935160"
  },
  {
    "text": "concatenation is a great example so in a",
    "start": "935160",
    "end": "937320"
  },
  {
    "text": "more traditional language you're going",
    "start": "937320",
    "end": "938279"
  },
  {
    "text": "to be making memory allocations every",
    "start": "938279",
    "end": "939779"
  },
  {
    "text": "single time and you're going to have to",
    "start": "939779",
    "end": "941279"
  },
  {
    "text": "reallocate and move things around",
    "start": "941279",
    "end": "942899"
  },
  {
    "text": "whereas like V8 you got you know rope",
    "start": "942899",
    "end": "944760"
  },
  {
    "text": "strings as we learned earlier you guys",
    "start": "944760",
    "end": "946440"
  },
  {
    "text": "so it's a little different so it's a",
    "start": "946440",
    "end": "948899"
  },
  {
    "text": "different world out there so even when",
    "start": "948899",
    "end": "950279"
  },
  {
    "text": "V8 the internet runs on uh that node",
    "start": "950279",
    "end": "952560"
  },
  {
    "text": "runs on top of is working tirelessly to",
    "start": "952560",
    "end": "955079"
  },
  {
    "text": "optimize it there's been many benchmarks",
    "start": "955079",
    "end": "956940"
  },
  {
    "text": "to prove but does it hold true here",
    "start": "956940",
    "end": "958860"
  },
  {
    "text": "my guess is no I was curious too but as",
    "start": "958860",
    "end": "961740"
  },
  {
    "text": "I explained above it was not uh the",
    "start": "961740",
    "end": "963360"
  },
  {
    "text": "impetus uh impetus impetus did I say",
    "start": "963360",
    "end": "965940"
  },
  {
    "text": "that word right that's impetus right",
    "start": "965940",
    "end": "967260"
  },
  {
    "text": "impetus yeah for a reason react Creation",
    "start": "967260",
    "end": "969899"
  },
  {
    "text": "in fact the implementation isn't very",
    "start": "969899",
    "end": "972000"
  },
  {
    "text": "optimized and not even profiled but it",
    "start": "972000",
    "end": "974040"
  },
  {
    "text": "does let's see but it does try to",
    "start": "974040",
    "end": "975420"
  },
  {
    "text": "minimize allocations and CPU Cycles but",
    "start": "975420",
    "end": "977399"
  },
  {
    "text": "there has been any performance work so",
    "start": "977399",
    "end": "978720"
  },
  {
    "text": "far okay",
    "start": "978720",
    "end": "980040"
  },
  {
    "text": "impotence uh impotence is a little bit",
    "start": "980040",
    "end": "982079"
  },
  {
    "text": "different uh you know plenty of",
    "start": "982079",
    "end": "985260"
  },
  {
    "text": "react applications get a little",
    "start": "985260",
    "end": "988440"
  },
  {
    "text": "impotent uh let's say I made a small",
    "start": "988440",
    "end": "990540"
  },
  {
    "text": "micro Benchmark before pushing the",
    "start": "990540",
    "end": "991980"
  },
  {
    "text": "production to ensure there wasn't any",
    "start": "991980",
    "end": "993480"
  },
  {
    "text": "regressions and prove uh how much we",
    "start": "993480",
    "end": "995399"
  },
  {
    "text": "gain let's see how much gain we were",
    "start": "995399",
    "end": "996720"
  },
  {
    "text": "talking against node interesting and Bun",
    "start": "996720",
    "end": "998759"
  },
  {
    "text": "Solutions oh and a bun solution okay",
    "start": "998759",
    "end": "1000500"
  },
  {
    "text": "interesting apparently buns quick we",
    "start": "1000500",
    "end": "1003019"
  },
  {
    "text": "compared the performance of these three",
    "start": "1003019",
    "end": "1004339"
  },
  {
    "text": "star uh Stacks in terms of latency",
    "start": "1004339",
    "end": "1006019"
  },
  {
    "text": "requests per second and transfer rate",
    "start": "1006019",
    "end": "1007940"
  },
  {
    "text": "okay I love this node.js with Express",
    "start": "1007940",
    "end": "1010220"
  },
  {
    "text": "okay request per second average latency",
    "start": "1010220",
    "end": "1013540"
  },
  {
    "text": "megabytes transferred bun okay okay so",
    "start": "1013540",
    "end": "1017540"
  },
  {
    "text": "17 about double so bun is significantly",
    "start": "1017540",
    "end": "1019880"
  },
  {
    "text": "better than node is what we're looking",
    "start": "1019880",
    "end": "1021139"
  },
  {
    "text": "at here but request per second it's not",
    "start": "1021139",
    "end": "1023060"
  },
  {
    "text": "like it's it's great reason server uh",
    "start": "1023060",
    "end": "1026058"
  },
  {
    "text": "server reason react 64 000 so about 10x",
    "start": "1026059",
    "end": "1030020"
  },
  {
    "text": "node.js",
    "start": "1030020",
    "end": "1031459"
  },
  {
    "text": "just dominating",
    "start": "1031459",
    "end": "1034160"
  },
  {
    "text": "the response time the 5x better average",
    "start": "1034160",
    "end": "1036860"
  },
  {
    "text": "latency 10x more requests per second",
    "start": "1036860",
    "end": "1040100"
  },
  {
    "text": "transfer rate out of this world",
    "start": "1040100",
    "end": "1043600"
  },
  {
    "text": "wow",
    "start": "1046339",
    "end": "1048500"
  },
  {
    "text": "that's incredible",
    "start": "1048500",
    "end": "1050240"
  },
  {
    "text": "I am surprised I am surprised by that",
    "start": "1050240",
    "end": "1052040"
  },
  {
    "text": "much",
    "start": "1052040",
    "end": "1053299"
  },
  {
    "text": "V8 is magical V8 is magical micro",
    "start": "1053299",
    "end": "1055460"
  },
  {
    "text": "benchmarks do lie exactly they do lie I",
    "start": "1055460",
    "end": "1059000"
  },
  {
    "text": "I always forget how bad",
    "start": "1059000",
    "end": "1061940"
  },
  {
    "text": "react is okay so here's the deals I",
    "start": "1061940",
    "end": "1064520"
  },
  {
    "text": "forget about how bad react is so I I",
    "start": "1064520",
    "end": "1066980"
  },
  {
    "text": "didn't put that into my calculations you",
    "start": "1066980",
    "end": "1068480"
  },
  {
    "text": "know when I played around with leptos",
    "start": "1068480",
    "end": "1069740"
  },
  {
    "text": "and did like leptos versus react it was",
    "start": "1069740",
    "end": "1072200"
  },
  {
    "text": "like a hundred X faster using like a",
    "start": "1072200",
    "end": "1074660"
  },
  {
    "text": "tenth of the memory you know you forget",
    "start": "1074660",
    "end": "1076580"
  },
  {
    "text": "about how bad react is when it comes to",
    "start": "1076580",
    "end": "1079520"
  },
  {
    "text": "Performance react has never been built",
    "start": "1079520",
    "end": "1081620"
  },
  {
    "text": "at a as a performance first library that",
    "start": "1081620",
    "end": "1083900"
  },
  {
    "text": "is not the point",
    "start": "1083900",
    "end": "1085340"
  },
  {
    "text": "at all and so",
    "start": "1085340",
    "end": "1088640"
  },
  {
    "text": "just it catches me off guard all tests",
    "start": "1088640",
    "end": "1090860"
  },
  {
    "text": "run on my MacBook uh okay okay in the",
    "start": "1090860",
    "end": "1092780"
  },
  {
    "text": "Benchmark okay so that's interesting so",
    "start": "1092780",
    "end": "1094100"
  },
  {
    "text": "he was doing so I I would like to see",
    "start": "1094100",
    "end": "1095840"
  },
  {
    "text": "this done my guess is he did this all",
    "start": "1095840",
    "end": "1097880"
  },
  {
    "text": "locally so I'd like to see this done",
    "start": "1097880",
    "end": "1099500"
  },
  {
    "text": "non-locally I'd love to see it put onto",
    "start": "1099500",
    "end": "1101360"
  },
  {
    "text": "a server because it does make a big",
    "start": "1101360",
    "end": "1102620"
  },
  {
    "text": "difference when you're on a server",
    "start": "1102620",
    "end": "1104419"
  },
  {
    "text": "versus when you're local your",
    "start": "1104419",
    "end": "1106700"
  },
  {
    "text": "applications do respond a lot different",
    "start": "1106700",
    "end": "1108320"
  },
  {
    "text": "right",
    "start": "1108320",
    "end": "1110000"
  },
  {
    "text": "I didn't realize it was going to be",
    "start": "1110000",
    "end": "1111200"
  },
  {
    "text": "drastically different yeah same here",
    "start": "1111200",
    "end": "1114400"
  },
  {
    "text": "yeah python is the best oh really okay",
    "start": "1114400",
    "end": "1117380"
  },
  {
    "text": "uh status it's deployed to all of our",
    "start": "1117380",
    "end": "1119600"
  },
  {
    "text": "users uh since February and planning to",
    "start": "1119600",
    "end": "1121280"
  },
  {
    "text": "use it on all front ends although it's",
    "start": "1121280",
    "end": "1122480"
  },
  {
    "text": "not ready for consumption the lack of",
    "start": "1122480",
    "end": "1123799"
  },
  {
    "text": "documentation the shape of the libraries",
    "start": "1123799",
    "end": "1125120"
  },
  {
    "text": "and some missing apis make it hard to",
    "start": "1125120",
    "end": "1126620"
  },
  {
    "text": "use and I don't recommend relying on it",
    "start": "1126620",
    "end": "1128059"
  },
  {
    "text": "okay it's open source in the repository",
    "start": "1128059",
    "end": "1130400"
  },
  {
    "text": "lives here okay this could be fun this",
    "start": "1130400",
    "end": "1133160"
  },
  {
    "text": "could be fun even with all of this if",
    "start": "1133160",
    "end": "1135080"
  },
  {
    "text": "you're still interested feel free to",
    "start": "1135080",
    "end": "1136400"
  },
  {
    "text": "contact okay so you know it would be",
    "start": "1136400",
    "end": "1137960"
  },
  {
    "text": "really cool is to create a solid version",
    "start": "1137960",
    "end": "1140419"
  },
  {
    "text": "right maybe you'll camel maybe I do need",
    "start": "1140419",
    "end": "1142640"
  },
  {
    "text": "to start playing with oh camel okay so",
    "start": "1142640",
    "end": "1144559"
  },
  {
    "text": "my general idea",
    "start": "1144559",
    "end": "1147740"
  },
  {
    "text": "see oh okay there's there's some more",
    "start": "1147740",
    "end": "1149419"
  },
  {
    "text": "stuff uh",
    "start": "1149419",
    "end": "1150740"
  },
  {
    "text": "my general idea is that I do want my",
    "start": "1150740",
    "end": "1152660"
  },
  {
    "text": "next project I do on stream after The",
    "start": "1152660",
    "end": "1154160"
  },
  {
    "text": "Interpreter is going to be trying to",
    "start": "1154160",
    "end": "1155660"
  },
  {
    "text": "implement J diesel okay am I a genius",
    "start": "1155660",
    "end": "1158720"
  },
  {
    "text": "can I implement",
    "start": "1158720",
    "end": "1160580"
  },
  {
    "text": "J diesel but then after that",
    "start": "1160580",
    "end": "1163580"
  },
  {
    "text": "maybe it's time to play with o camel",
    "start": "1163580",
    "end": "1167380"
  },
  {
    "text": "you know what I mean",
    "start": "1170240",
    "end": "1172900"
  },
  {
    "text": "it's working",
    "start": "1177260",
    "end": "1179919"
  },
  {
    "text": "maybe I need to look into oh camel",
    "start": "1181880",
    "end": "1185620"
  },
  {
    "text": "okay are you guys excited because I'm a",
    "start": "1185780",
    "end": "1187580"
  },
  {
    "text": "genius and I'm going to implement the J",
    "start": "1187580",
    "end": "1188900"
  },
  {
    "text": "diesel or are you excited because I",
    "start": "1188900",
    "end": "1190700"
  },
  {
    "text": "might be touching o camel",
    "start": "1190700",
    "end": "1193400"
  },
  {
    "text": "oh camel my camel",
    "start": "1193400",
    "end": "1195980"
  },
  {
    "text": "let's go is it oh Campbell or is it J",
    "start": "1195980",
    "end": "1198140"
  },
  {
    "text": "diesel which one is it J diesel oh camel",
    "start": "1198140",
    "end": "1202039"
  },
  {
    "text": "J diesel J diesel I know it's j diesel",
    "start": "1202039",
    "end": "1204860"
  },
  {
    "text": "okay it could be cool",
    "start": "1204860",
    "end": "1207020"
  },
  {
    "text": "let's see what it enables I got a little",
    "start": "1207020",
    "end": "1208820"
  },
  {
    "text": "deep into some of the details about how",
    "start": "1208820",
    "end": "1210200"
  },
  {
    "text": "it works with the curious minds but the",
    "start": "1210200",
    "end": "1211640"
  },
  {
    "text": "implementation doesn't matter much what",
    "start": "1211640",
    "end": "1212900"
  },
  {
    "text": "matters are the consequences same code",
    "start": "1212900",
    "end": "1214820"
  },
  {
    "text": "for the front end and back and the same",
    "start": "1214820",
    "end": "1216260"
  },
  {
    "text": "code gets compiled to Native uh to",
    "start": "1216260",
    "end": "1218419"
  },
  {
    "text": "Native and JavaScript thanks entirely to",
    "start": "1218419",
    "end": "1220160"
  },
  {
    "text": "malang's uh as far as I know it can't be",
    "start": "1220160",
    "end": "1222500"
  },
  {
    "text": "done in any other native languages such",
    "start": "1222500",
    "end": "1223940"
  },
  {
    "text": "as rust or go and let's see there are",
    "start": "1223940",
    "end": "1225919"
  },
  {
    "text": "many similar situations but they don't",
    "start": "1225919",
    "end": "1227299"
  },
  {
    "text": "cross compose the same code okay",
    "start": "1227299",
    "end": "1230740"
  },
  {
    "text": "that's super cool that is super cool",
    "start": "1233660",
    "end": "1235760"
  },
  {
    "text": "that that actually works it enables full",
    "start": "1235760",
    "end": "1237440"
  },
  {
    "text": "stack applications written in reason no",
    "start": "1237440",
    "end": "1239480"
  },
  {
    "text": "matter uh",
    "start": "1239480",
    "end": "1241220"
  },
  {
    "text": "it's not a matter of one language to",
    "start": "1241220",
    "end": "1242900"
  },
  {
    "text": "rule them all all but rather Simplicity",
    "start": "1242900",
    "end": "1244880"
  },
  {
    "text": "I'm actually in full support for single",
    "start": "1244880",
    "end": "1246500"
  },
  {
    "text": "stack languages",
    "start": "1246500",
    "end": "1247820"
  },
  {
    "text": "real real talk I'm in full support of",
    "start": "1247820",
    "end": "1249799"
  },
  {
    "text": "single stack languages and it's one of",
    "start": "1249799",
    "end": "1251240"
  },
  {
    "text": "the reasons why I've never loved go is",
    "start": "1251240",
    "end": "1253400"
  },
  {
    "text": "because go does not have the language",
    "start": "1253400",
    "end": "1255080"
  },
  {
    "text": "complexity",
    "start": "1255080",
    "end": "1256640"
  },
  {
    "text": "to describe what it takes",
    "start": "1256640",
    "end": "1259640"
  },
  {
    "text": "to have a single stack language and it's",
    "start": "1259640",
    "end": "1262220"
  },
  {
    "text": "also the big problem about zig Zig also",
    "start": "1262220",
    "end": "1265280"
  },
  {
    "text": "does not have what it takes to be a",
    "start": "1265280",
    "end": "1267559"
  },
  {
    "text": "single stack language",
    "start": "1267559",
    "end": "1270279"
  },
  {
    "text": "but Russ does",
    "start": "1270320",
    "end": "1272120"
  },
  {
    "text": "and it seems like oh camel might as well",
    "start": "1272120",
    "end": "1276520"
  },
  {
    "text": "so",
    "start": "1277640",
    "end": "1278840"
  },
  {
    "text": "yeah rest us has what it takes Russ does",
    "start": "1278840",
    "end": "1281720"
  },
  {
    "text": "rust you can do you can do you can do a",
    "start": "1281720",
    "end": "1283700"
  },
  {
    "text": "lot of cool stuff with rust",
    "start": "1283700",
    "end": "1285440"
  },
  {
    "text": "right",
    "start": "1285440",
    "end": "1287799"
  },
  {
    "text": "you know what I mean let's see uh",
    "start": "1288020",
    "end": "1289159"
  },
  {
    "text": "Simplicity on shares so I I'm curious",
    "start": "1289159",
    "end": "1290960"
  },
  {
    "text": "about the debugging experience the",
    "start": "1290960",
    "end": "1292520"
  },
  {
    "text": "debugging experience because the rust",
    "start": "1292520",
    "end": "1293780"
  },
  {
    "text": "debugging experience with wasm is it",
    "start": "1293780",
    "end": "1295580"
  },
  {
    "text": "sucks",
    "start": "1295580",
    "end": "1296480"
  },
  {
    "text": "debugging wasm sucks Real Talk debugging",
    "start": "1296480",
    "end": "1299600"
  },
  {
    "text": "wasm sucks it always sucks because you",
    "start": "1299600",
    "end": "1302480"
  },
  {
    "text": "just get these Arcane looking things and",
    "start": "1302480",
    "end": "1304460"
  },
  {
    "text": "errors are weird and you're just trying",
    "start": "1304460",
    "end": "1305840"
  },
  {
    "text": "to get stuff out like it does but if the",
    "start": "1305840",
    "end": "1309260"
  },
  {
    "text": "transpilation of O camel into JavaScript",
    "start": "1309260",
    "end": "1311720"
  },
  {
    "text": "and I can debug JavaScript I'm I wonder",
    "start": "1311720",
    "end": "1313880"
  },
  {
    "text": "how I wonder what that translation is in",
    "start": "1313880",
    "end": "1315919"
  },
  {
    "text": "your head",
    "start": "1315919",
    "end": "1318158"
  },
  {
    "text": "if you're asking who Tom is",
    "start": "1318799",
    "end": "1322100"
  },
  {
    "text": "I personally would feel bad okay don't",
    "start": "1322100",
    "end": "1324559"
  },
  {
    "text": "ask who Thomas if you don't know the",
    "start": "1324559",
    "end": "1325820"
  },
  {
    "text": "genius himself Tom Tom is a genius Tom",
    "start": "1325820",
    "end": "1328760"
  },
  {
    "text": "is a genius all right performance is",
    "start": "1328760",
    "end": "1330980"
  },
  {
    "text": "much better performance is critical for",
    "start": "1330980",
    "end": "1332240"
  },
  {
    "text": "any SSR solution absolutely that's",
    "start": "1332240",
    "end": "1334039"
  },
  {
    "text": "that's been my whole problem so this has",
    "start": "1334039",
    "end": "1335659"
  },
  {
    "text": "like been my whole new react World",
    "start": "1335659",
    "end": "1337580"
  },
  {
    "text": "problem is that the new react World",
    "start": "1337580",
    "end": "1339919"
  },
  {
    "text": "problem is purely this that react is now",
    "start": "1339919",
    "end": "1344299"
  },
  {
    "text": "becoming this like whole streaming react",
    "start": "1344299",
    "end": "1346940"
  },
  {
    "text": "server components react everything",
    "start": "1346940",
    "end": "1348559"
  },
  {
    "text": "building it onto the server but it has",
    "start": "1348559",
    "end": "1350360"
  },
  {
    "text": "abysmal performance and you're really",
    "start": "1350360",
    "end": "1352580"
  },
  {
    "text": "tied to Providers right now it's really",
    "start": "1352580",
    "end": "1354200"
  },
  {
    "text": "just kind of like leaning into a lot of",
    "start": "1354200",
    "end": "1355880"
  },
  {
    "text": "the serverless stuff and it feels like",
    "start": "1355880",
    "end": "1358340"
  },
  {
    "text": "it's it's going to be hard for a lot of",
    "start": "1358340",
    "end": "1360200"
  },
  {
    "text": "places to adopt this and so I'm very",
    "start": "1360200",
    "end": "1362480"
  },
  {
    "text": "curious how this is all going to work",
    "start": "1362480",
    "end": "1363919"
  },
  {
    "text": "out",
    "start": "1363919",
    "end": "1365780"
  },
  {
    "text": "what is the future of react and all that",
    "start": "1365780",
    "end": "1367760"
  },
  {
    "text": "so is this like a cool kind of like hey",
    "start": "1367760",
    "end": "1370700"
  },
  {
    "text": "maybe you don't need that type of stuff",
    "start": "1370700",
    "end": "1372679"
  },
  {
    "text": "I'm so curious right",
    "start": "1372679",
    "end": "1374780"
  },
  {
    "text": "I'm curious right not uh not only the",
    "start": "1374780",
    "end": "1377360"
  },
  {
    "text": "rendering engine itself but the platform",
    "start": "1377360",
    "end": "1379400"
  },
  {
    "text": "you are running uh as well not only the",
    "start": "1379400",
    "end": "1381200"
  },
  {
    "text": "number of requests per second it",
    "start": "1381200",
    "end": "1382340"
  },
  {
    "text": "supports or the memory footprint but",
    "start": "1382340",
    "end": "1383960"
  },
  {
    "text": "among many performance issues one that",
    "start": "1383960",
    "end": "1385400"
  },
  {
    "text": "stands out is the slow start the slow",
    "start": "1385400",
    "end": "1387320"
  },
  {
    "text": "start of a node application is a barrier",
    "start": "1387320",
    "end": "1389120"
  },
  {
    "text": "for current Solutions now often this",
    "start": "1389120",
    "end": "1391220"
  },
  {
    "text": "problem is addressed by changing the",
    "start": "1391220",
    "end": "1392600"
  },
  {
    "text": "architecture of your application uh by",
    "start": "1392600",
    "end": "1394340"
  },
  {
    "text": "utilizing Edge Computing or a blocker to",
    "start": "1394340",
    "end": "1397100"
  },
  {
    "text": "run SSR in development here's an example",
    "start": "1397100",
    "end": "1399320"
  },
  {
    "text": "of the performance benefits of ocam O",
    "start": "1399320",
    "end": "1401059"
  },
  {
    "text": "camel based Frameworks are fast enough",
    "start": "1401059",
    "end": "1402740"
  },
  {
    "text": "that you can boot for each request and",
    "start": "1402740",
    "end": "1404720"
  },
  {
    "text": "tear down when a session finishes on the",
    "start": "1404720",
    "end": "1406700"
  },
  {
    "text": "other hand this is much more challenging",
    "start": "1406700",
    "end": "1407960"
  },
  {
    "text": "with note this is absolutely true you",
    "start": "1407960",
    "end": "1410059"
  },
  {
    "text": "kind of I mean that's the whole cold",
    "start": "1410059",
    "end": "1411260"
  },
  {
    "text": "start problem with node",
    "start": "1411260",
    "end": "1413360"
  },
  {
    "text": "it is really really difficult to do this",
    "start": "1413360",
    "end": "1418280"
  },
  {
    "text": "um",
    "start": "1418280",
    "end": "1419780"
  },
  {
    "text": "it is really really difficult heard of",
    "start": "1419780",
    "end": "1421700"
  },
  {
    "text": "The Bling project no uh by who by uh tan",
    "start": "1421700",
    "end": "1426020"
  },
  {
    "text": "stack",
    "start": "1426020",
    "end": "1427039"
  },
  {
    "text": "by solid tan stack and Astro gnome",
    "start": "1427039",
    "end": "1429500"
  },
  {
    "text": "weird I'm in a Discord with them I",
    "start": "1429500",
    "end": "1431659"
  },
  {
    "text": "should just ask them",
    "start": "1431659",
    "end": "1434179"
  },
  {
    "text": "yeah I think I I mean I do think react",
    "start": "1434179",
    "end": "1436760"
  },
  {
    "text": "has a lot of problems coming up uh",
    "start": "1436760",
    "end": "1437840"
  },
  {
    "text": "allows for further explanation uh let's",
    "start": "1437840",
    "end": "1439760"
  },
  {
    "text": "see of effects of react and no camel uh",
    "start": "1439760",
    "end": "1442520"
  },
  {
    "text": "react has a let's see has been",
    "start": "1442520",
    "end": "1443900"
  },
  {
    "text": "influenced by o camel and some of the",
    "start": "1443900",
    "end": "1445580"
  },
  {
    "text": "functional programming Concepts from the",
    "start": "1445580",
    "end": "1446960"
  },
  {
    "text": "start such as immutability Purity and",
    "start": "1446960",
    "end": "1448940"
  },
  {
    "text": "eventually algebraic effects create",
    "start": "1448940",
    "end": "1450919"
  },
  {
    "text": "let's see create some of these base",
    "start": "1450919",
    "end": "1452240"
  },
  {
    "text": "implementations for Server components",
    "start": "1452240",
    "end": "1453740"
  },
  {
    "text": "which are a deal breaker for yep uh",
    "start": "1453740",
    "end": "1456620"
  },
  {
    "text": "allowing to only run components on the",
    "start": "1456620",
    "end": "1458419"
  },
  {
    "text": "server and stream the output",
    "start": "1458419",
    "end": "1459799"
  },
  {
    "text": "representation of it without the",
    "start": "1459799",
    "end": "1461059"
  },
  {
    "text": "client-side penalty of executing the",
    "start": "1461059",
    "end": "1462679"
  },
  {
    "text": "JavaScript code can change radically how",
    "start": "1462679",
    "end": "1464600"
  },
  {
    "text": "we write our back ends yep yep recently",
    "start": "1464600",
    "end": "1467360"
  },
  {
    "text": "o camel 5-0 was released",
    "start": "1467360",
    "end": "1469220"
  },
  {
    "text": "with high let's see with the highly",
    "start": "1469220",
    "end": "1470659"
  },
  {
    "text": "anticipated uh features multi-core and",
    "start": "1470659",
    "end": "1473059"
  },
  {
    "text": "effects these new features enable the",
    "start": "1473059",
    "end": "1474679"
  },
  {
    "text": "possibility of exploring some of reacts",
    "start": "1474679",
    "end": "1476299"
  },
  {
    "text": "Concepts to be written in no camel in",
    "start": "1476299",
    "end": "1477980"
  },
  {
    "text": "interesting",
    "start": "1477980",
    "end": "1478940"
  },
  {
    "text": "interesting interesting interesting",
    "start": "1478940",
    "end": "1482559"
  },
  {
    "text": "huh",
    "start": "1484520",
    "end": "1485780"
  },
  {
    "text": "huh maybe yo camel's a little bit cooler",
    "start": "1485780",
    "end": "1489679"
  },
  {
    "text": "than I thought",
    "start": "1489679",
    "end": "1491659"
  },
  {
    "text": "maybe ocamel is just slightly cooler",
    "start": "1491659",
    "end": "1494059"
  },
  {
    "text": "than I thought it was",
    "start": "1494059",
    "end": "1495620"
  },
  {
    "text": "okay",
    "start": "1495620",
    "end": "1498100"
  },
  {
    "text": "maybe I've been wrong",
    "start": "1498140",
    "end": "1501520"
  },
  {
    "text": "let's see yeah the main reasons why I",
    "start": "1502880",
    "end": "1504320"
  },
  {
    "text": "would not adopt this today the entire uh",
    "start": "1504320",
    "end": "1506659"
  },
  {
    "text": "it's an entire new ecosystem new",
    "start": "1506659",
    "end": "1508760"
  },
  {
    "text": "language new package manager new",
    "start": "1508760",
    "end": "1510260"
  },
  {
    "text": "trade-offs okay",
    "start": "1510260",
    "end": "1511760"
  },
  {
    "text": "uh the learning curve might be big the",
    "start": "1511760",
    "end": "1513440"
  },
  {
    "text": "trade-offs made by ocamel do not match",
    "start": "1513440",
    "end": "1515179"
  },
  {
    "text": "with uh by some of the JavaScript or",
    "start": "1515179",
    "end": "1516620"
  },
  {
    "text": "node",
    "start": "1516620",
    "end": "1517700"
  },
  {
    "text": "probably not as big as the learning",
    "start": "1517700",
    "end": "1519260"
  },
  {
    "text": "curve how to deal with the Paro Checker",
    "start": "1519260",
    "end": "1520820"
  },
  {
    "text": "okay see that's okay so this is what",
    "start": "1520820",
    "end": "1523460"
  },
  {
    "text": "everyone says that oh camel is like rust",
    "start": "1523460",
    "end": "1525380"
  },
  {
    "text": "without the borrow Checker is this true",
    "start": "1525380",
    "end": "1526760"
  },
  {
    "text": "TJ",
    "start": "1526760",
    "end": "1529120"
  },
  {
    "text": "because",
    "start": "1530659",
    "end": "1533020"
  },
  {
    "text": "real talk",
    "start": "1534380",
    "end": "1536000"
  },
  {
    "text": "all I want",
    "start": "1536000",
    "end": "1538900"
  },
  {
    "text": "no offense I trust TJ I don't trust you",
    "start": "1539000",
    "end": "1541760"
  },
  {
    "text": "guys okay I know TJ is a good engineer",
    "start": "1541760",
    "end": "1543919"
  },
  {
    "text": "and I think you guys are a bunch of",
    "start": "1543919",
    "end": "1546260"
  },
  {
    "text": "degenerates um so I just want a trade",
    "start": "1546260",
    "end": "1549860"
  },
  {
    "text": "system",
    "start": "1549860",
    "end": "1552039"
  },
  {
    "text": "and iterators",
    "start": "1554539",
    "end": "1556279"
  },
  {
    "text": "and then I would also love async",
    "start": "1556279",
    "end": "1558559"
  },
  {
    "text": "iterators or some sort of push some sort",
    "start": "1558559",
    "end": "1560900"
  },
  {
    "text": "of like rx-like thing in the language",
    "start": "1560900",
    "end": "1564380"
  },
  {
    "text": "right that's really what I want and of",
    "start": "1564380",
    "end": "1566539"
  },
  {
    "text": "course like a good typing system enums",
    "start": "1566539",
    "end": "1568520"
  },
  {
    "text": "you know take to unions all that that's",
    "start": "1568520",
    "end": "1570740"
  },
  {
    "text": "all I really want you're not wrong we",
    "start": "1570740",
    "end": "1572179"
  },
  {
    "text": "are degenerates yeah I'm not trying to",
    "start": "1572179",
    "end": "1573440"
  },
  {
    "text": "be mean to you guys I'm just saying if",
    "start": "1573440",
    "end": "1575419"
  },
  {
    "text": "if o camel has",
    "start": "1575419",
    "end": "1577940"
  },
  {
    "text": "a hurtful but true this man's not a line",
    "start": "1577940",
    "end": "1580640"
  },
  {
    "text": "but what he says is correct",
    "start": "1580640",
    "end": "1584320"
  },
  {
    "text": "TJ it doesn't uh it doesn't have a type",
    "start": "1584419",
    "end": "1586940"
  },
  {
    "text": "class well it doesn't have a type class",
    "start": "1586940",
    "end": "1588620"
  },
  {
    "text": "in the same way but it has things like",
    "start": "1588620",
    "end": "1590659"
  },
  {
    "text": "uh like that you can do but in a lot of",
    "start": "1590659",
    "end": "1592700"
  },
  {
    "text": "ways you'll transfer your understanding",
    "start": "1592700",
    "end": "1594020"
  },
  {
    "text": "of rust to okay well easily that's what",
    "start": "1594020",
    "end": "1595400"
  },
  {
    "text": "I figured is that uh that's fair I'm a",
    "start": "1595400",
    "end": "1597799"
  },
  {
    "text": "bad engineer okay",
    "start": "1597799",
    "end": "1599480"
  },
  {
    "text": "Everything you ask for is in C sharp uh",
    "start": "1599480",
    "end": "1601880"
  },
  {
    "text": "yeah but then you have C sharp",
    "start": "1601880",
    "end": "1603980"
  },
  {
    "text": "I'm very important person I drive a",
    "start": "1603980",
    "end": "1605840"
  },
  {
    "text": "Dodge Stratus yeah the problem is you",
    "start": "1605840",
    "end": "1607880"
  },
  {
    "text": "got that okay and I don't I don't I",
    "start": "1607880",
    "end": "1609380"
  },
  {
    "text": "don't wanna I don't wanna uh I don't",
    "start": "1609380",
    "end": "1610880"
  },
  {
    "text": "wanna do C sharp okay I don't like",
    "start": "1610880",
    "end": "1612500"
  },
  {
    "text": "Microsoft",
    "start": "1612500",
    "end": "1614960"
  },
  {
    "text": "all right not everyone needs this uh at",
    "start": "1614960",
    "end": "1616880"
  },
  {
    "text": "rev so we made it all let's see it made",
    "start": "1616880",
    "end": "1618679"
  },
  {
    "text": "a lot of sense but it may not okay I'm",
    "start": "1618679",
    "end": "1620299"
  },
  {
    "text": "very excited it's still experimental it",
    "start": "1620299",
    "end": "1622100"
  },
  {
    "text": "requires let's see it requires to lift",
    "start": "1622100",
    "end": "1623659"
  },
  {
    "text": "the ecosystem to work on the server so",
    "start": "1623659",
    "end": "1626000"
  },
  {
    "text": "all client libraries need to be ported",
    "start": "1626000",
    "end": "1627740"
  },
  {
    "text": "to ocamel okay or step okay that makes",
    "start": "1627740",
    "end": "1630200"
  },
  {
    "text": "sense that could be true that okay",
    "start": "1630200",
    "end": "1632299"
  },
  {
    "text": "that's our so this is a real problem",
    "start": "1632299",
    "end": "1633860"
  },
  {
    "text": "smaller Community but growing do we need",
    "start": "1633860",
    "end": "1636320"
  },
  {
    "text": "to blow up this community degenerates",
    "start": "1636320",
    "end": "1640100"
  },
  {
    "text": "okay",
    "start": "1642260",
    "end": "1644779"
  },
  {
    "text": "okay so so so so so",
    "start": "1644779",
    "end": "1646900"
  },
  {
    "text": "arguably oh camel is simpler than rust",
    "start": "1646900",
    "end": "1651400"
  },
  {
    "text": "don't send the DJ and army why not",
    "start": "1654980",
    "end": "1658340"
  },
  {
    "text": "I mean then I can't do it on stream",
    "start": "1658340",
    "end": "1660080"
  },
  {
    "text": "because the moment I started doing it I",
    "start": "1660080",
    "end": "1661640"
  },
  {
    "text": "I've been looking I've been wanting to",
    "start": "1661640",
    "end": "1663200"
  },
  {
    "text": "find a technology that I'm excited about",
    "start": "1663200",
    "end": "1664820"
  },
  {
    "text": "writing full stack applications in okay",
    "start": "1664820",
    "end": "1667700"
  },
  {
    "text": "because I'm so tired of of JavaScript",
    "start": "1667700",
    "end": "1670100"
  },
  {
    "text": "JavaScript is just",
    "start": "1670100",
    "end": "1672919"
  },
  {
    "text": "people always be like you know you can't",
    "start": "1672919",
    "end": "1675559"
  },
  {
    "text": "why are you always talking bad about it",
    "start": "1675559",
    "end": "1677539"
  },
  {
    "text": "why don't you just like you know just",
    "start": "1677539",
    "end": "1679100"
  },
  {
    "text": "fix the things that are wrong you can't",
    "start": "1679100",
    "end": "1680539"
  },
  {
    "text": "fundamentally fix these things okay it's",
    "start": "1680539",
    "end": "1683120"
  },
  {
    "text": "like coming down to PHP",
    "start": "1683120",
    "end": "1685299"
  },
  {
    "text": "laravel all right am I gonna do laravel",
    "start": "1685299",
    "end": "1688700"
  },
  {
    "text": "or am I going to do full stack rust or",
    "start": "1688700",
    "end": "1690740"
  },
  {
    "text": "are we going to do full stack o camel",
    "start": "1690740",
    "end": "1692320"
  },
  {
    "text": "leptos is beautiful I love leptos real",
    "start": "1692320",
    "end": "1695419"
  },
  {
    "text": "talk leptos is one of the best",
    "start": "1695419",
    "end": "1696740"
  },
  {
    "text": "Frameworks ever out there you mentioned",
    "start": "1696740",
    "end": "1698059"
  },
  {
    "text": "uh you try to Elixir uh",
    "start": "1698059",
    "end": "1700460"
  },
  {
    "text": "I don't know if I I want to do Elixir",
    "start": "1700460",
    "end": "1702200"
  },
  {
    "text": "the the types really hurt me",
    "start": "1702200",
    "end": "1706179"
  },
  {
    "text": "I hear great things about laravel",
    "start": "1720080",
    "end": "1721760"
  },
  {
    "text": "everyone says laravel is amazing",
    "start": "1721760",
    "end": "1725559"
  },
  {
    "text": "just don't make full stack Frameworks",
    "start": "1725900",
    "end": "1727520"
  },
  {
    "text": "that's fine the thing is I've just been",
    "start": "1727520",
    "end": "1729320"
  },
  {
    "text": "wanting to try something to do that",
    "start": "1729320",
    "end": "1730640"
  },
  {
    "text": "right and so I've just been on this",
    "start": "1730640",
    "end": "1731960"
  },
  {
    "text": "language exploration for the last year",
    "start": "1731960",
    "end": "1733520"
  },
  {
    "text": "because I really want to like make the",
    "start": "1733520",
    "end": "1735559"
  },
  {
    "text": "right decision",
    "start": "1735559",
    "end": "1736700"
  },
  {
    "text": "you know what I mean",
    "start": "1736700",
    "end": "1738620"
  },
  {
    "text": "real talk I've been trying to make",
    "start": "1738620",
    "end": "1741500"
  },
  {
    "text": "like I've been really trying out a bunch",
    "start": "1741500",
    "end": "1743360"
  },
  {
    "text": "of languages like you guys have been",
    "start": "1743360",
    "end": "1744679"
  },
  {
    "text": "here for this adventure and so like",
    "start": "1744679",
    "end": "1746419"
  },
  {
    "text": "reading this this does get me excited",
    "start": "1746419",
    "end": "1748100"
  },
  {
    "text": "you know what I think some of the",
    "start": "1748100",
    "end": "1749419"
  },
  {
    "text": "tooling stuff is better in Rust though",
    "start": "1749419",
    "end": "1751220"
  },
  {
    "text": "yeah that's fine just to be aware the",
    "start": "1751220",
    "end": "1753020"
  },
  {
    "text": "situation is getting much better for",
    "start": "1753020",
    "end": "1754279"
  },
  {
    "text": "ocam On the Open Source space even the",
    "start": "1754279",
    "end": "1756140"
  },
  {
    "text": "last six months okay",
    "start": "1756140",
    "end": "1757700"
  },
  {
    "text": "I mean",
    "start": "1757700",
    "end": "1759679"
  },
  {
    "text": "I'm programming with Zig currently on",
    "start": "1759679",
    "end": "1761600"
  },
  {
    "text": "stream have you seen the Tooling in Zig",
    "start": "1761600",
    "end": "1763820"
  },
  {
    "text": "there we go stopped that a while ago",
    "start": "1763820",
    "end": "1766520"
  },
  {
    "text": "flip stop it a while ago the name is the",
    "start": "1766520",
    "end": "1769159"
  },
  {
    "text": "primogen all right",
    "start": "1769159",
    "end": "1772000"
  }
]