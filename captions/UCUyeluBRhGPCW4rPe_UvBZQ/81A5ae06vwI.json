[
  {
    "text": "the dark side of the rust language are",
    "start": "0",
    "end": "3060"
  },
  {
    "text": "you ready for this one rust is an",
    "start": "3060",
    "end": "5040"
  },
  {
    "text": "amazing language if you follow my blog",
    "start": "5040",
    "end": "6540"
  },
  {
    "text": "activity and you know me in person you",
    "start": "6540",
    "end": "8220"
  },
  {
    "text": "might know I'm really invested in Rust",
    "start": "8220",
    "end": "9840"
  },
  {
    "text": "in the last 12 months and also blogging",
    "start": "9840",
    "end": "11760"
  },
  {
    "text": "a lot about rust now I want to do",
    "start": "11760",
    "end": "13559"
  },
  {
    "text": "something different I do not want to",
    "start": "13559",
    "end": "15059"
  },
  {
    "text": "paint a Rosy picture of rust I do",
    "start": "15059",
    "end": "17100"
  },
  {
    "text": "believe trade-offs matter and you only",
    "start": "17100",
    "end": "19320"
  },
  {
    "text": "know something true when you know the",
    "start": "19320",
    "end": "21600"
  },
  {
    "text": "cons yeah I agree with this it's good",
    "start": "21600",
    "end": "23160"
  },
  {
    "text": "okay this is a good start this is a good",
    "start": "23160",
    "end": "24420"
  },
  {
    "text": "start",
    "start": "24420",
    "end": "25800"
  },
  {
    "text": "problems I will expose in this blog and",
    "start": "25800",
    "end": "28320"
  },
  {
    "text": "not related to rust only but related to",
    "start": "28320",
    "end": "30660"
  },
  {
    "text": "the fact about two other factors a new",
    "start": "30660",
    "end": "33420"
  },
  {
    "text": "languages B rust has a plus 10 years",
    "start": "33420",
    "end": "36000"
  },
  {
    "text": "however still not mainstream and I",
    "start": "36000",
    "end": "38040"
  },
  {
    "text": "consider it a new language and B a new",
    "start": "38040",
    "end": "40500"
  },
  {
    "text": "paradigm slash approach everything you",
    "start": "40500",
    "end": "42120"
  },
  {
    "text": "deviate from standards",
    "start": "42120",
    "end": "44040"
  },
  {
    "text": "copium you will face resistance I saw it",
    "start": "44040",
    "end": "47399"
  },
  {
    "text": "happen uh let's see I saw it happens a",
    "start": "47399",
    "end": "49559"
  },
  {
    "text": "lot with other languages like Scala",
    "start": "49559",
    "end": "51539"
  },
  {
    "text": "enclosure these problems happen in Rust",
    "start": "51539",
    "end": "53280"
  },
  {
    "text": "but I want to make it absolutely clear",
    "start": "53280",
    "end": "55020"
  },
  {
    "text": "they are not unique to us so let's get",
    "start": "55020",
    "end": "56820"
  },
  {
    "text": "started let's start with the good things",
    "start": "56820",
    "end": "60360"
  },
  {
    "text": "okay what are the good things so I was",
    "start": "60360",
    "end": "61860"
  },
  {
    "text": "having trouble reading that I don't know",
    "start": "61860",
    "end": "63000"
  },
  {
    "text": "what happened I'm not sure what just",
    "start": "63000",
    "end": "64500"
  },
  {
    "text": "happened there but I couldn't read there",
    "start": "64500",
    "end": "65880"
  },
  {
    "text": "for a second the great things about rust",
    "start": "65880",
    "end": "67200"
  },
  {
    "text": "before talking about rust benefits you",
    "start": "67200",
    "end": "68580"
  },
  {
    "text": "might want to uh talk let's see you",
    "start": "68580",
    "end": "70860"
  },
  {
    "text": "might want to talk a look take a look",
    "start": "70860",
    "end": "73380"
  },
  {
    "text": "okay maybe I'm not the one having okay",
    "start": "73380",
    "end": "75119"
  },
  {
    "text": "maybe I'm not having a hard time reading",
    "start": "75119",
    "end": "76619"
  },
  {
    "text": "maybe it's just some of the words in",
    "start": "76619",
    "end": "78180"
  },
  {
    "text": "there are incorrect you may want to take",
    "start": "78180",
    "end": "79560"
  },
  {
    "text": "a look into some of the blog posts I",
    "start": "79560",
    "end": "80939"
  },
  {
    "text": "made about rust Russ the language of the",
    "start": "80939",
    "end": "82979"
  },
  {
    "text": "future Rich type system I love the I",
    "start": "82979",
    "end": "85020"
  },
  {
    "text": "love the the type system rust and Java",
    "start": "85020",
    "end": "87299"
  },
  {
    "text": "interoperability why would you write",
    "start": "87299",
    "end": "88619"
  },
  {
    "text": "Java rust service and kubernetes is only",
    "start": "88619",
    "end": "91080"
  },
  {
    "text": "three and a half Megs let's go building",
    "start": "91080",
    "end": "92580"
  },
  {
    "text": "a microservices rust Let's Go axum slash",
    "start": "92580",
    "end": "95040"
  },
  {
    "text": "tactics now let's talk about rust",
    "start": "95040",
    "end": "96420"
  },
  {
    "text": "language benefits live rust is a live",
    "start": "96420",
    "end": "99360"
  },
  {
    "text": "language",
    "start": "99360",
    "end": "100619"
  },
  {
    "text": "it has a community Tech events new ideas",
    "start": "100619",
    "end": "102720"
  },
  {
    "text": "I mean we all know about the tech events",
    "start": "102720",
    "end": "105840"
  },
  {
    "text": "am I right",
    "start": "105840",
    "end": "107759"
  },
  {
    "text": "and libraries are flowing and popping up",
    "start": "107759",
    "end": "110159"
  },
  {
    "text": "every single day I would argue this is",
    "start": "110159",
    "end": "112200"
  },
  {
    "text": "one of the most desirable properties of",
    "start": "112200",
    "end": "113820"
  },
  {
    "text": "a language you want to be aware The",
    "start": "113820",
    "end": "115680"
  },
  {
    "text": "Innovation is happening",
    "start": "115680",
    "end": "118020"
  },
  {
    "text": "interoperability rust plays well with",
    "start": "118020",
    "end": "120299"
  },
  {
    "text": "pretty much all other languages I",
    "start": "120299",
    "end": "121560"
  },
  {
    "text": "thought this was the opposite I thought",
    "start": "121560",
    "end": "122880"
  },
  {
    "text": "Russ is not that great I thought the",
    "start": "122880",
    "end": "125280"
  },
  {
    "text": "interoperability with C plus plus kind",
    "start": "125280",
    "end": "127439"
  },
  {
    "text": "of sucks with rust because of all the",
    "start": "127439",
    "end": "129179"
  },
  {
    "text": "issues it has to do with",
    "start": "129179",
    "end": "131459"
  },
  {
    "text": "being from safe language to inherently",
    "start": "131459",
    "end": "133739"
  },
  {
    "text": "unsafe language right",
    "start": "133739",
    "end": "135660"
  },
  {
    "text": "glazing I I thought that was I thought",
    "start": "135660",
    "end": "137760"
  },
  {
    "text": "this was like one of the reasons why Zig",
    "start": "137760",
    "end": "140099"
  },
  {
    "text": "is so amazing is that it just it just is",
    "start": "140099",
    "end": "141840"
  },
  {
    "text": "much better at that right",
    "start": "141840",
    "end": "143700"
  },
  {
    "text": "um anyways uh it's easy to invoke this",
    "start": "143700",
    "end": "146099"
  },
  {
    "text": "language from rust and vice versa for",
    "start": "146099",
    "end": "147660"
  },
  {
    "text": "this reason rust is really great for",
    "start": "147660",
    "end": "149040"
  },
  {
    "text": "embedded systems and iot I think rust is",
    "start": "149040",
    "end": "151260"
  },
  {
    "text": "really great for iot or embedded systems",
    "start": "151260",
    "end": "153840"
  },
  {
    "text": "because if I'm gonna make it some sort",
    "start": "153840",
    "end": "155580"
  },
  {
    "text": "of system that could accidentally Crush",
    "start": "155580",
    "end": "157200"
  },
  {
    "text": "my hand I would rather have it Crush my",
    "start": "157200",
    "end": "159660"
  },
  {
    "text": "hand because I'm a horrible programmer",
    "start": "159660",
    "end": "161220"
  },
  {
    "text": "not because I had some sort of like",
    "start": "161220",
    "end": "163200"
  },
  {
    "text": "oopsie Daisy in my programming because",
    "start": "163200",
    "end": "165480"
  },
  {
    "text": "I'm a dum-dum right I would rather have",
    "start": "165480",
    "end": "167519"
  },
  {
    "text": "it that I actually made a thing that",
    "start": "167519",
    "end": "169440"
  },
  {
    "text": "just is like the hand crushing module",
    "start": "169440",
    "end": "170940"
  },
  {
    "text": "and I accidentally crushed my hand not",
    "start": "170940",
    "end": "172860"
  },
  {
    "text": "because I was just like well I thought I",
    "start": "172860",
    "end": "174360"
  },
  {
    "text": "was right in good C but it turns out I",
    "start": "174360",
    "end": "175800"
  },
  {
    "text": "pointed to the wrong thing and just yeah",
    "start": "175800",
    "end": "178200"
  },
  {
    "text": "right easy to read rust code is obvious",
    "start": "178200",
    "end": "180480"
  },
  {
    "text": "this is very untrue uh I think rust code",
    "start": "180480",
    "end": "183060"
  },
  {
    "text": "is not easy to read uh once you get",
    "start": "183060",
    "end": "185160"
  },
  {
    "text": "Beyond a simple application rust code",
    "start": "185160",
    "end": "187980"
  },
  {
    "text": "becomes excessively hard to read you",
    "start": "187980",
    "end": "190319"
  },
  {
    "text": "have to really really really really",
    "start": "190319",
    "end": "192060"
  },
  {
    "text": "really",
    "start": "192060",
    "end": "192980"
  },
  {
    "text": "know what you're doing uh to read rust",
    "start": "192980",
    "end": "196260"
  },
  {
    "text": "code right you there's definitely an arc",
    "start": "196260",
    "end": "199019"
  },
  {
    "text": "of expertise that's required in Rust it",
    "start": "199019",
    "end": "201540"
  },
  {
    "text": "has a very deep deep side to it and I",
    "start": "201540",
    "end": "204420"
  },
  {
    "text": "love that about the language",
    "start": "204420",
    "end": "205920"
  },
  {
    "text": "I love it a lot about the language but",
    "start": "205920",
    "end": "208500"
  },
  {
    "text": "it's not obvious it's not it's not it's",
    "start": "208500",
    "end": "211739"
  },
  {
    "text": "not easy I don't think the syntax is",
    "start": "211739",
    "end": "213420"
  },
  {
    "text": "weird I think the syntax is different",
    "start": "213420",
    "end": "215400"
  },
  {
    "text": "right and that's a big thing is that",
    "start": "215400",
    "end": "217260"
  },
  {
    "text": "just because syntax is different doesn't",
    "start": "217260",
    "end": "219239"
  },
  {
    "text": "make it weird the first time you looked",
    "start": "219239",
    "end": "221459"
  },
  {
    "text": "at syntax the first time you learned",
    "start": "221459",
    "end": "222900"
  },
  {
    "text": "some other syntax it was weird right I",
    "start": "222900",
    "end": "224760"
  },
  {
    "text": "started off in PHP there's like colons",
    "start": "224760",
    "end": "227519"
  },
  {
    "text": "and dollar signs and all sorts of",
    "start": "227519",
    "end": "229379"
  },
  {
    "text": "everywhere",
    "start": "229379",
    "end": "230459"
  },
  {
    "text": "like that's weird but it felt normal and",
    "start": "230459",
    "end": "233700"
  },
  {
    "text": "then when I got done with it it wasn't",
    "start": "233700",
    "end": "235500"
  },
  {
    "text": "normal anymore you know what I mean it's",
    "start": "235500",
    "end": "237299"
  },
  {
    "text": "very easy syntax and therefore very easy",
    "start": "237299",
    "end": "239400"
  },
  {
    "text": "to read code the ability to easily read",
    "start": "239400",
    "end": "241200"
  },
  {
    "text": "code is important for maintenance",
    "start": "241200",
    "end": "242940"
  },
  {
    "text": "perspective uh and for learning uh again",
    "start": "242940",
    "end": "246299"
  },
  {
    "text": "I just don't think that's a real thing",
    "start": "246299",
    "end": "247500"
  },
  {
    "text": "functional vein rust allows functional",
    "start": "247500",
    "end": "249120"
  },
  {
    "text": "programming you have lambdas option",
    "start": "249120",
    "end": "250860"
  },
  {
    "text": "optional map find filter and much more",
    "start": "250860",
    "end": "253200"
  },
  {
    "text": "functional functional programming is a",
    "start": "253200",
    "end": "255120"
  },
  {
    "text": "really great Paradigm in modern",
    "start": "255120",
    "end": "256139"
  },
  {
    "text": "languages need to embrace it at least",
    "start": "256139",
    "end": "257639"
  },
  {
    "text": "partially I think that's one thing that",
    "start": "257639",
    "end": "259320"
  },
  {
    "text": "rust has done really really well which",
    "start": "259320",
    "end": "260940"
  },
  {
    "text": "is like it's functional light",
    "start": "260940",
    "end": "263460"
  },
  {
    "text": "like it has most the things you'd ever",
    "start": "263460",
    "end": "265500"
  },
  {
    "text": "want you know what I mean uh memory",
    "start": "265500",
    "end": "267660"
  },
  {
    "text": "allocation rust really forces you to",
    "start": "267660",
    "end": "269160"
  },
  {
    "text": "think about memory allocation and memory",
    "start": "269160",
    "end": "270720"
  },
  {
    "text": "management I see I actually feel it's",
    "start": "270720",
    "end": "272220"
  },
  {
    "text": "quite the opposite I feel with with rust",
    "start": "272220",
    "end": "275639"
  },
  {
    "text": "you actually you don't think about",
    "start": "275639",
    "end": "277500"
  },
  {
    "text": "memory at all right like ever you're you",
    "start": "277500",
    "end": "280800"
  },
  {
    "text": "just you just do it and when something's",
    "start": "280800",
    "end": "282780"
  },
  {
    "text": "slow you're like I'm probably allocating",
    "start": "282780",
    "end": "284340"
  },
  {
    "text": "on the Heap I mean there's like a simple",
    "start": "284340",
    "end": "285540"
  },
  {
    "text": "rule if you put it in a container it's",
    "start": "285540",
    "end": "287580"
  },
  {
    "text": "probably on the Heap",
    "start": "287580",
    "end": "289139"
  },
  {
    "text": "if it's not in the container it's",
    "start": "289139",
    "end": "291540"
  },
  {
    "text": "probably on the stack right if it's in a",
    "start": "291540",
    "end": "294060"
  },
  {
    "text": "box it's on the Heap if it's in an what",
    "start": "294060",
    "end": "295979"
  },
  {
    "text": "is it an RC it's on the Heap if it's in",
    "start": "295979",
    "end": "298440"
  },
  {
    "text": "a ref cell it's on the Heap right like I",
    "start": "298440",
    "end": "300840"
  },
  {
    "text": "find like this I find that you think one",
    "start": "300840",
    "end": "303540"
  },
  {
    "text": "reason why I like rust is I don't think",
    "start": "303540",
    "end": "305699"
  },
  {
    "text": "about memory allocations",
    "start": "305699",
    "end": "307500"
  },
  {
    "text": "and that's what I like zero cost",
    "start": "307500",
    "end": "309540"
  },
  {
    "text": "abstraction I love this too because",
    "start": "309540",
    "end": "310680"
  },
  {
    "text": "iterators become they disappear when you",
    "start": "310680",
    "end": "313320"
  },
  {
    "text": "compile another great rust capability",
    "start": "313320",
    "end": "315419"
  },
  {
    "text": "several languages have great syntactical",
    "start": "315419",
    "end": "317160"
  },
  {
    "text": "sugar sugar and features however often",
    "start": "317160",
    "end": "319440"
  },
  {
    "text": "using the obstructions are slow compared",
    "start": "319440",
    "end": "321060"
  },
  {
    "text": "with the standard features yeah I love",
    "start": "321060",
    "end": "322740"
  },
  {
    "text": "this so I love that uh where iterators",
    "start": "322740",
    "end": "325259"
  },
  {
    "text": "they don't cost right fantastic rust uh",
    "start": "325259",
    "end": "327960"
  },
  {
    "text": "Library variety rust has a great variety",
    "start": "327960",
    "end": "330060"
  },
  {
    "text": "of Libs and ecosystem yeah",
    "start": "330060",
    "end": "333479"
  },
  {
    "text": "um only 35 000 libraries I could get 35",
    "start": "333479",
    "end": "337320"
  },
  {
    "text": "000 libraries in npm by installing left",
    "start": "337320",
    "end": "339600"
  },
  {
    "text": "pad okay you think that's you think you",
    "start": "339600",
    "end": "342960"
  },
  {
    "text": "think that's amazing please",
    "start": "342960",
    "end": "345300"
  },
  {
    "text": "please all right speed rust is super",
    "start": "345300",
    "end": "349380"
  },
  {
    "text": "fast faster than Java go C plus plus",
    "start": "349380",
    "end": "351060"
  },
  {
    "text": "okay it's not faster than C plus plus",
    "start": "351060",
    "end": "354180"
  },
  {
    "text": "um",
    "start": "354180",
    "end": "355020"
  },
  {
    "text": "I don't I would even argue that it's",
    "start": "355020",
    "end": "357000"
  },
  {
    "text": "it's hard to make it faster than go",
    "start": "357000",
    "end": "359340"
  },
  {
    "text": "I would say that it's it's you'd have",
    "start": "359340",
    "end": "361139"
  },
  {
    "text": "you have to be pretty slick at rust to",
    "start": "361139",
    "end": "364020"
  },
  {
    "text": "make it faster than go",
    "start": "364020",
    "end": "365940"
  },
  {
    "text": "um so rust is only slow compared with C",
    "start": "365940",
    "end": "368000"
  },
  {
    "text": "nope I mean you can lit the statement",
    "start": "368000",
    "end": "371039"
  },
  {
    "text": "doesn't make any sense uh compared with",
    "start": "371039",
    "end": "372479"
  },
  {
    "text": "high level languages like",
    "start": "372479",
    "end": "374240"
  },
  {
    "text": "java.net.net is not a language uh go",
    "start": "374240",
    "end": "376620"
  },
  {
    "text": "python Ruby rust is super fast well",
    "start": "376620",
    "end": "379320"
  },
  {
    "text": "Ruby's a I mean",
    "start": "379320",
    "end": "381120"
  },
  {
    "text": "I mean technically I think I could I",
    "start": "381120",
    "end": "382860"
  },
  {
    "text": "think I could beat Ruby in a foot race",
    "start": "382860",
    "end": "384479"
  },
  {
    "text": "uh rust is super fast and much better",
    "start": "384479",
    "end": "386880"
  },
  {
    "text": "than these languages and a sense of",
    "start": "386880",
    "end": "388139"
  },
  {
    "text": "speed this means doing less with more",
    "start": "388139",
    "end": "390240"
  },
  {
    "text": "saving costs if you're running on the",
    "start": "390240",
    "end": "391680"
  },
  {
    "text": "cloud and better user experience safe",
    "start": "391680",
    "end": "393600"
  },
  {
    "text": "Russ is also super safe uh it's true as",
    "start": "393600",
    "end": "396300"
  },
  {
    "text": "long as you don't use the unsafe feature",
    "start": "396300",
    "end": "397860"
  },
  {
    "text": "and even then it's still pretty safe",
    "start": "397860",
    "end": "398940"
  },
  {
    "text": "this is one of the main advantages of",
    "start": "398940",
    "end": "400380"
  },
  {
    "text": "rust uh the compiler is really your",
    "start": "400380",
    "end": "401759"
  },
  {
    "text": "friend and catch as many things web",
    "start": "401759",
    "end": "403080"
  },
  {
    "text": "assembly webassembly is the future of",
    "start": "403080",
    "end": "404819"
  },
  {
    "text": "the web",
    "start": "404819",
    "end": "405900"
  },
  {
    "text": "you know I sometimes I sometimes deep",
    "start": "405900",
    "end": "408900"
  },
  {
    "text": "down inside my inners when I hear the",
    "start": "408900",
    "end": "411360"
  },
  {
    "text": "term web assemblies the future of the",
    "start": "411360",
    "end": "412860"
  },
  {
    "text": "web I also think about",
    "start": "412860",
    "end": "414900"
  },
  {
    "text": "2023 is the year of the Linux desktop",
    "start": "414900",
    "end": "418020"
  },
  {
    "text": "you know what I mean do you ever feel",
    "start": "418020",
    "end": "419819"
  },
  {
    "text": "that do you ever",
    "start": "419819",
    "end": "421560"
  },
  {
    "text": "do you ever feel that by any by any",
    "start": "421560",
    "end": "423360"
  },
  {
    "text": "chance you guys called it you guys",
    "start": "423360",
    "end": "425340"
  },
  {
    "text": "caught a flag on the play right now it",
    "start": "425340",
    "end": "427259"
  },
  {
    "text": "could uh and the implementations are in",
    "start": "427259",
    "end": "429120"
  },
  {
    "text": "Rust this is another very attractive",
    "start": "429120",
    "end": "431039"
  },
  {
    "text": "point of the language I do agree that it",
    "start": "431039",
    "end": "433680"
  },
  {
    "text": "it is I think the best webassembly",
    "start": "433680",
    "end": "435960"
  },
  {
    "text": "language right now spall binary small",
    "start": "435960",
    "end": "438419"
  },
  {
    "text": "footprint I'm not is that true I I don't",
    "start": "438419",
    "end": "440759"
  },
  {
    "text": "I don't know how I don't know the the",
    "start": "440759",
    "end": "442500"
  },
  {
    "text": "binary sizes I've never comp you know",
    "start": "442500",
    "end": "444479"
  },
  {
    "text": "compared them rust is not a memory",
    "start": "444479",
    "end": "445740"
  },
  {
    "text": "sucker like Java suck my memory Java uh",
    "start": "445740",
    "end": "449160"
  },
  {
    "text": "rust generates a very small",
    "start": "449160",
    "end": "450180"
  },
  {
    "text": "self-contained binaries which are",
    "start": "450180",
    "end": "451560"
  },
  {
    "text": "usually great for containers like Docker",
    "start": "451560",
    "end": "453120"
  },
  {
    "text": "and cluster uh cluster managers like",
    "start": "453120",
    "end": "455160"
  },
  {
    "text": "kubernetes uh great for concurrency rust",
    "start": "455160",
    "end": "458819"
  },
  {
    "text": "has a strong uh is also strong against",
    "start": "458819",
    "end": "461400"
  },
  {
    "text": "ah you know you know I don't always",
    "start": "461400",
    "end": "465660"
  },
  {
    "text": "think rust is great for concurrency I",
    "start": "465660",
    "end": "467699"
  },
  {
    "text": "mean it's great for correctness",
    "start": "467699",
    "end": "469979"
  },
  {
    "text": "don't get me wrong it's great for",
    "start": "469979",
    "end": "471720"
  },
  {
    "text": "correctness it's not always like",
    "start": "471720",
    "end": "474180"
  },
  {
    "text": "it's not a dynamite concurrency right",
    "start": "474180",
    "end": "476759"
  },
  {
    "text": "the amount of because one of the",
    "start": "476759",
    "end": "478560"
  },
  {
    "text": "problems one of the problems that I",
    "start": "478560",
    "end": "480599"
  },
  {
    "text": "don't like about rust is that like",
    "start": "480599",
    "end": "483000"
  },
  {
    "text": "there's things you can do in C plus that",
    "start": "483000",
    "end": "484620"
  },
  {
    "text": "are kind of unique because you have this",
    "start": "484620",
    "end": "486180"
  },
  {
    "text": "whole separation of mutex whereas often",
    "start": "486180",
    "end": "488580"
  },
  {
    "text": "the mutex contains a piece of data and",
    "start": "488580",
    "end": "490680"
  },
  {
    "text": "so you'd have to do something kind of",
    "start": "490680",
    "end": "492060"
  },
  {
    "text": "silly to make it so that you could have",
    "start": "492060",
    "end": "494940"
  },
  {
    "text": "multiple Parts be mutex but not all",
    "start": "494940",
    "end": "497520"
  },
  {
    "text": "parts be mutexed right it's kind of like",
    "start": "497520",
    "end": "499620"
  },
  {
    "text": "a I don't know I always find it like a",
    "start": "499620",
    "end": "501479"
  },
  {
    "text": "kind of an interesting",
    "start": "501479",
    "end": "503220"
  },
  {
    "text": "it's an interesting argument I don't",
    "start": "503220",
    "end": "504780"
  },
  {
    "text": "think that it's it's fantastic for",
    "start": "504780",
    "end": "506400"
  },
  {
    "text": "concurrency but I think it's it makes it",
    "start": "506400",
    "end": "508620"
  },
  {
    "text": "really easy to do the right thing which",
    "start": "508620",
    "end": "510240"
  },
  {
    "text": "in most cases is great for concurrency",
    "start": "510240",
    "end": "512940"
  },
  {
    "text": "right",
    "start": "512940",
    "end": "514140"
  },
  {
    "text": "for the most part that's like what you",
    "start": "514140",
    "end": "515640"
  },
  {
    "text": "want",
    "start": "515640",
    "end": "516719"
  },
  {
    "text": "uh better than go I don't I wouldn't say",
    "start": "516719",
    "end": "518640"
  },
  {
    "text": "it's better than go I would say that",
    "start": "518640",
    "end": "520560"
  },
  {
    "text": "it's different than go go you run to the",
    "start": "520560",
    "end": "523020"
  },
  {
    "text": "same problem but you run to that into",
    "start": "523020",
    "end": "524339"
  },
  {
    "text": "any language which is you try to you try",
    "start": "524339",
    "end": "526140"
  },
  {
    "text": "to read and write to the same resource",
    "start": "526140",
    "end": "527580"
  },
  {
    "text": "right that's like a very classic thing",
    "start": "527580",
    "end": "530820"
  },
  {
    "text": "um and so",
    "start": "530820",
    "end": "532560"
  },
  {
    "text": "they have new taxes we can mutacy and so",
    "start": "532560",
    "end": "535560"
  },
  {
    "text": "it's not the but the difference is is",
    "start": "535560",
    "end": "537300"
  },
  {
    "text": "that I can also just hand you something",
    "start": "537300",
    "end": "538680"
  },
  {
    "text": "and if you're in a different thread I",
    "start": "538680",
    "end": "540120"
  },
  {
    "text": "don't have to think about it right",
    "start": "540120",
    "end": "541200"
  },
  {
    "text": "here's the thing it doesn't need to be",
    "start": "541200",
    "end": "543000"
  },
  {
    "text": "behind an arc mutex so when I pass it I",
    "start": "543000",
    "end": "545700"
  },
  {
    "text": "don't have to pass something that has",
    "start": "545700",
    "end": "547320"
  },
  {
    "text": "this Atomic reference counting then on",
    "start": "547320",
    "end": "549360"
  },
  {
    "text": "top of it I have to unlock it to use it",
    "start": "549360",
    "end": "551339"
  },
  {
    "text": "right like I can just give you something",
    "start": "551339",
    "end": "553200"
  },
  {
    "text": "and you can use it there is there is a",
    "start": "553200",
    "end": "555720"
  },
  {
    "text": "performance Advantage there to just not",
    "start": "555720",
    "end": "558180"
  },
  {
    "text": "caring right and so it's it's not",
    "start": "558180",
    "end": "561360"
  },
  {
    "text": "it's not a 100 right it's not just like",
    "start": "561360",
    "end": "564660"
  },
  {
    "text": "oh it's better",
    "start": "564660",
    "end": "566459"
  },
  {
    "text": "um",
    "start": "566459",
    "end": "567779"
  },
  {
    "text": "so that's what it means like they're",
    "start": "567779",
    "end": "569459"
  },
  {
    "text": "they're there's there's trade-offs the",
    "start": "569459",
    "end": "571560"
  },
  {
    "text": "thing about rust though is when you",
    "start": "571560",
    "end": "573360"
  },
  {
    "text": "cross that thread boundary you are",
    "start": "573360",
    "end": "575820"
  },
  {
    "text": "guaranteed to be doing it",
    "start": "575820",
    "end": "577620"
  },
  {
    "text": "the right way and so yeah correct is",
    "start": "577620",
    "end": "579959"
  },
  {
    "text": "better than fast so that's the one nice",
    "start": "579959",
    "end": "581279"
  },
  {
    "text": "part is that you are forced to do it the",
    "start": "581279",
    "end": "583200"
  },
  {
    "text": "right way but you may actually write",
    "start": "583200",
    "end": "585360"
  },
  {
    "text": "something that's slower",
    "start": "585360",
    "end": "587399"
  },
  {
    "text": "are you still learning Zig yeah I wrote",
    "start": "587399",
    "end": "588959"
  },
  {
    "text": "a little bit of Zig yesterday uh small",
    "start": "588959",
    "end": "590399"
  },
  {
    "text": "small Market currently there are a few",
    "start": "590399",
    "end": "592080"
  },
  {
    "text": "companies using Rusty up the dark sides",
    "start": "592080",
    "end": "593940"
  },
  {
    "text": "of rust okay so this is a real thing",
    "start": "593940",
    "end": "595380"
  },
  {
    "text": "therefore a few programmers and a few",
    "start": "595380",
    "end": "597000"
  },
  {
    "text": "job offers I do believe the market size",
    "start": "597000",
    "end": "598380"
  },
  {
    "text": "will increase I do too but if you need",
    "start": "598380",
    "end": "600000"
  },
  {
    "text": "massive number of developers now and",
    "start": "600000",
    "end": "601800"
  },
  {
    "text": "cannot afford their education Russ so I",
    "start": "601800",
    "end": "603779"
  },
  {
    "text": "I disagree with this point I think that",
    "start": "603779",
    "end": "605220"
  },
  {
    "text": "if I tweeted right now I have three open",
    "start": "605220",
    "end": "607680"
  },
  {
    "text": "positions I could fill it within the",
    "start": "607680",
    "end": "609300"
  },
  {
    "text": "afternoon right like I think there's a",
    "start": "609300",
    "end": "611339"
  },
  {
    "text": "very there's a larger hungrier crowd",
    "start": "611339",
    "end": "614160"
  },
  {
    "text": "than the positions that are available I",
    "start": "614160",
    "end": "616080"
  },
  {
    "text": "don't think it'd be hard at all to hire",
    "start": "616080",
    "end": "618540"
  },
  {
    "text": "rust devs right now too many strings",
    "start": "618540",
    "end": "620519"
  },
  {
    "text": "rust has an issue with strings rust has",
    "start": "620519",
    "end": "622500"
  },
  {
    "text": "six string type string stir seester",
    "start": "622500",
    "end": "624779"
  },
  {
    "text": "seester Oster Oster uh which makes it",
    "start": "624779",
    "end": "627839"
  },
  {
    "text": "complicated and confusing some functions",
    "start": "627839",
    "end": "629760"
  },
  {
    "text": "return stir uh there's also a a cow's",
    "start": "629760",
    "end": "632580"
  },
  {
    "text": "ring",
    "start": "632580",
    "end": "633420"
  },
  {
    "text": "where's this cow string",
    "start": "633420",
    "end": "635220"
  },
  {
    "text": "moo right",
    "start": "635220",
    "end": "637620"
  },
  {
    "text": "you have that two lossy utf-8 or",
    "start": "637620",
    "end": "640200"
  },
  {
    "text": "whatever it is uh anyway sub functions",
    "start": "640200",
    "end": "642540"
  },
  {
    "text": "return string I might just be wrong",
    "start": "642540",
    "end": "643680"
  },
  {
    "text": "there's also path buff",
    "start": "643680",
    "end": "645180"
  },
  {
    "text": "don't forget path buff which is really",
    "start": "645180",
    "end": "646860"
  },
  {
    "text": "just a string",
    "start": "646860",
    "end": "648060"
  },
  {
    "text": "you know it's a string that allows for",
    "start": "648060",
    "end": "650100"
  },
  {
    "text": "that non-utf8 encoding just for this one",
    "start": "650100",
    "end": "653040"
  },
  {
    "text": "little tiny little thing",
    "start": "653040",
    "end": "654959"
  },
  {
    "text": "uh copy on right copy on o Orville right",
    "start": "654959",
    "end": "658980"
  },
  {
    "text": "now mummy daddy wow uh slow compilation",
    "start": "658980",
    "end": "661680"
  },
  {
    "text": "Yep this is true this is actually a real",
    "start": "661680",
    "end": "663360"
  },
  {
    "text": "problem",
    "start": "663360",
    "end": "664320"
  },
  {
    "text": "though it's not a real problem it's both",
    "start": "664320",
    "end": "665940"
  },
  {
    "text": "a real problem and a non-real problem uh",
    "start": "665940",
    "end": "667920"
  },
  {
    "text": "as you have 200 200 plus dependencies",
    "start": "667920",
    "end": "669839"
  },
  {
    "text": "you'll see compilation become super slow",
    "start": "669839",
    "end": "671339"
  },
  {
    "text": "everything let's see or almost",
    "start": "671339",
    "end": "672899"
  },
  {
    "text": "everything is statically linked which",
    "start": "672899",
    "end": "674279"
  },
  {
    "text": "makes compilation slow you have a lot of",
    "start": "674279",
    "end": "676200"
  },
  {
    "text": "outdated Libs in your file system okay",
    "start": "676200",
    "end": "678180"
  },
  {
    "text": "IDE support is not ideal",
    "start": "678180",
    "end": "680579"
  },
  {
    "text": "um I'm a vs code",
    "start": "680579",
    "end": "683600"
  },
  {
    "text": "I'm I'm",
    "start": "683700",
    "end": "685620"
  },
  {
    "text": "oh yeah",
    "start": "685620",
    "end": "688220"
  },
  {
    "text": "oh yeah is the best option so far it",
    "start": "688920",
    "end": "690600"
  },
  {
    "text": "really isn't um so this article must be",
    "start": "690600",
    "end": "693060"
  },
  {
    "text": "older it must be older because rust",
    "start": "693060",
    "end": "695459"
  },
  {
    "text": "analyzer is fantastic",
    "start": "695459",
    "end": "698220"
  },
  {
    "text": "right it's it's fantastic right uh",
    "start": "698220",
    "end": "702959"
  },
  {
    "text": "so I'd say rust analyzer might be one of",
    "start": "702959",
    "end": "705360"
  },
  {
    "text": "the best",
    "start": "705360",
    "end": "707040"
  },
  {
    "text": "um",
    "start": "707040",
    "end": "707700"
  },
  {
    "text": "might be one of the best on the markets",
    "start": "707700",
    "end": "709620"
  },
  {
    "text": "honestly it's one of the best language",
    "start": "709620",
    "end": "711180"
  },
  {
    "text": "servers I've seen yet libraries low",
    "start": "711180",
    "end": "713220"
  },
  {
    "text": "maturity several Libs uh are incomplete",
    "start": "713220",
    "end": "715680"
  },
  {
    "text": "and immature often you find poor",
    "start": "715680",
    "end": "717180"
  },
  {
    "text": "documentation and documentation that is",
    "start": "717180",
    "end": "718740"
  },
  {
    "text": "not up to date this makes using a",
    "start": "718740",
    "end": "720300"
  },
  {
    "text": "library always an adventure because you",
    "start": "720300",
    "end": "722279"
  },
  {
    "text": "need to look at the source code and",
    "start": "722279",
    "end": "723600"
  },
  {
    "text": "guess what the source code's not always",
    "start": "723600",
    "end": "725040"
  },
  {
    "text": "all that easy to look at",
    "start": "725040",
    "end": "727079"
  },
  {
    "text": "um let's see rust is not for beginners",
    "start": "727079",
    "end": "728459"
  },
  {
    "text": "Yep this is true uh I actually I don't",
    "start": "728459",
    "end": "730860"
  },
  {
    "text": "know about that I'm curious if this is",
    "start": "730860",
    "end": "732600"
  },
  {
    "text": "true I guess because I could never",
    "start": "732600",
    "end": "733860"
  },
  {
    "text": "relearn for the first time is rust not",
    "start": "733860",
    "end": "736980"
  },
  {
    "text": "for beginners like if you had no concept",
    "start": "736980",
    "end": "739500"
  },
  {
    "text": "of programming oh ownership and",
    "start": "739500",
    "end": "741779"
  },
  {
    "text": "borrowing I thought ownership and",
    "start": "741779",
    "end": "743040"
  },
  {
    "text": "borrowing was really straightforward",
    "start": "743040",
    "end": "745260"
  },
  {
    "text": "like I just I I read one small version",
    "start": "745260",
    "end": "748079"
  },
  {
    "text": "of what it does and it makes perfect",
    "start": "748079",
    "end": "749880"
  },
  {
    "text": "sense right",
    "start": "749880",
    "end": "752100"
  },
  {
    "text": "there's the thing",
    "start": "752100",
    "end": "754740"
  },
  {
    "text": "then there's things that refer to the",
    "start": "754740",
    "end": "756540"
  },
  {
    "text": "thing",
    "start": "756540",
    "end": "758220"
  },
  {
    "text": "I don't know I didn't find it very",
    "start": "758220",
    "end": "759660"
  },
  {
    "text": "confusing at all",
    "start": "759660",
    "end": "761220"
  },
  {
    "text": "and so I'm a beginner and I find it very",
    "start": "761220",
    "end": "763620"
  },
  {
    "text": "easy I'm very curious about it because",
    "start": "763620",
    "end": "765660"
  },
  {
    "text": "in the sense like if you knew no other",
    "start": "765660",
    "end": "768120"
  },
  {
    "text": "paradigm",
    "start": "768120",
    "end": "769740"
  },
  {
    "text": "would rust be hard to learn would it be",
    "start": "769740",
    "end": "772139"
  },
  {
    "text": "harder to learn than say c",
    "start": "772139",
    "end": "775200"
  },
  {
    "text": "ownership and borrowing were easier for",
    "start": "775200",
    "end": "777180"
  },
  {
    "text": "me to grock than scope that's super",
    "start": "777180",
    "end": "778740"
  },
  {
    "text": "interesting see a simple C is simple but",
    "start": "778740",
    "end": "781320"
  },
  {
    "text": "it's also hard",
    "start": "781320",
    "end": "783180"
  },
  {
    "text": "right it's both simple and hard",
    "start": "783180",
    "end": "786000"
  },
  {
    "text": "uh uh see to just just to like know what",
    "start": "786000",
    "end": "789839"
  },
  {
    "text": "c can do it's very very simple but to do",
    "start": "789839",
    "end": "793139"
  },
  {
    "text": "something and see and to actually get",
    "start": "793139",
    "end": "794579"
  },
  {
    "text": "experience is really hard",
    "start": "794579",
    "end": "796620"
  },
  {
    "text": "right pointers are difficult to grok",
    "start": "796620",
    "end": "799380"
  },
  {
    "text": "right so so like there is that whole",
    "start": "799380",
    "end": "800940"
  },
  {
    "text": "aspect like you could learn the syntax",
    "start": "800940",
    "end": "802740"
  },
  {
    "text": "in an afternoon but to know how pointers",
    "start": "802740",
    "end": "804959"
  },
  {
    "text": "work why you'd want to use double",
    "start": "804959",
    "end": "806880"
  },
  {
    "text": "pointers a const pointer to a const",
    "start": "806880",
    "end": "808860"
  },
  {
    "text": "versus a pointer to a cons versus a",
    "start": "808860",
    "end": "810600"
  },
  {
    "text": "const point or two of value right like",
    "start": "810600",
    "end": "812639"
  },
  {
    "text": "what's the thing going on there right",
    "start": "812639",
    "end": "814260"
  },
  {
    "text": "there's like a whole there's a whole",
    "start": "814260",
    "end": "815639"
  },
  {
    "text": "bunch of stuff there",
    "start": "815639",
    "end": "818360"
  },
  {
    "text": "the compiler is very helpful yep",
    "start": "818700",
    "end": "821160"
  },
  {
    "text": "uh C uh is easy to behave undefined yes",
    "start": "821160",
    "end": "824940"
  },
  {
    "text": "yes milky just posted uh your nipples on",
    "start": "824940",
    "end": "827760"
  },
  {
    "text": "Twitter nice nice Bertrand let's get",
    "start": "827760",
    "end": "830339"
  },
  {
    "text": "those nipples up",
    "start": "830339",
    "end": "831720"
  },
  {
    "text": "um also shout out to Melky come on milky",
    "start": "831720",
    "end": "835019"
  },
  {
    "text": "give me them nips",
    "start": "835019",
    "end": "836519"
  },
  {
    "text": "where's the Snips is this right here",
    "start": "836519",
    "end": "838680"
  },
  {
    "text": "nope",
    "start": "838680",
    "end": "840540"
  },
  {
    "text": "where is it where is it where's my",
    "start": "840540",
    "end": "842820"
  },
  {
    "text": "nipples",
    "start": "842820",
    "end": "843779"
  },
  {
    "text": "I don't see my nipples",
    "start": "843779",
    "end": "846060"
  },
  {
    "text": "link it or it didn't happen",
    "start": "846060",
    "end": "849420"
  },
  {
    "text": "link it or it didn't happen Okay let's",
    "start": "849420",
    "end": "851040"
  },
  {
    "text": "go back to this thing uh rust is a great",
    "start": "851040",
    "end": "852899"
  },
  {
    "text": "language I believe Russ will grow a lot",
    "start": "852899",
    "end": "854339"
  },
  {
    "text": "in the in the New Years documentation",
    "start": "854339",
    "end": "856019"
  },
  {
    "text": "Library maturity jobs Engineers tooling",
    "start": "856019",
    "end": "858060"
  },
  {
    "text": "support issues uh tend to get fixed",
    "start": "858060",
    "end": "859800"
  },
  {
    "text": "however borrower borrow and ownership is",
    "start": "859800",
    "end": "862560"
  },
  {
    "text": "not going away so you'll be required to",
    "start": "862560",
    "end": "864120"
  },
  {
    "text": "learn",
    "start": "864120",
    "end": "865139"
  },
  {
    "text": "um",
    "start": "865139",
    "end": "866220"
  },
  {
    "text": "yeah I really and truly don't think",
    "start": "866220",
    "end": "870959"
  },
  {
    "text": "look at those nipples",
    "start": "870959",
    "end": "873980"
  },
  {
    "text": "you like that I took a picture of myself",
    "start": "875040",
    "end": "878040"
  },
  {
    "text": "I've been getting in shape okay",
    "start": "878040",
    "end": "880620"
  },
  {
    "text": "people asked for it and I gave it to",
    "start": "880620",
    "end": "882959"
  },
  {
    "text": "them",
    "start": "882959",
    "end": "883800"
  },
  {
    "text": "okay",
    "start": "883800",
    "end": "886279"
  },
  {
    "text": "this is what 37 looks like okay thirst",
    "start": "886380",
    "end": "888779"
  },
  {
    "text": "trap I'm sorry you know I I actually I'm",
    "start": "888779",
    "end": "891000"
  },
  {
    "text": "always a little embarrassed to know that",
    "start": "891000",
    "end": "892380"
  },
  {
    "text": "there's an there's a naked photo of me",
    "start": "892380",
    "end": "893880"
  },
  {
    "text": "look at that look at that one pack I",
    "start": "893880",
    "end": "896399"
  },
  {
    "text": "have one pack",
    "start": "896399",
    "end": "898019"
  },
  {
    "text": "I have a singular item called a stomach",
    "start": "898019",
    "end": "900660"
  },
  {
    "text": "say would you call async Race conditions",
    "start": "900660",
    "end": "902699"
  },
  {
    "text": "or race conditions",
    "start": "902699",
    "end": "904199"
  },
  {
    "text": "um so it depends on what you mean by",
    "start": "904199",
    "end": "906180"
  },
  {
    "text": "async race conditions are you talking",
    "start": "906180",
    "end": "908220"
  },
  {
    "text": "about because there's two different",
    "start": "908220",
    "end": "909420"
  },
  {
    "text": "things there's data races which is",
    "start": "909420",
    "end": "911279"
  },
  {
    "text": "usually you're trying to read and write",
    "start": "911279",
    "end": "912420"
  },
  {
    "text": "to the same location and then there's",
    "start": "912420",
    "end": "914100"
  },
  {
    "text": "just race conditions which is like a",
    "start": "914100",
    "end": "915600"
  },
  {
    "text": "Boolean trap right you want it to be",
    "start": "915600",
    "end": "917880"
  },
  {
    "text": "true or false and two things they're",
    "start": "917880",
    "end": "919380"
  },
  {
    "text": "trying to set it and you're trying to",
    "start": "919380",
    "end": "920639"
  },
  {
    "text": "you know in your program stops working",
    "start": "920639",
    "end": "922320"
  },
  {
    "text": "because something finished before it was",
    "start": "922320",
    "end": "923940"
  },
  {
    "text": "supposed to that I would just call that",
    "start": "923940",
    "end": "924959"
  },
  {
    "text": "a general race condition race condition",
    "start": "924959",
    "end": "926699"
  },
  {
    "text": "is where concurrency happens and the",
    "start": "926699",
    "end": "929519"
  },
  {
    "text": "outcome is inconsistent because of the",
    "start": "929519",
    "end": "931920"
  },
  {
    "text": "ordering in which it finishes then",
    "start": "931920",
    "end": "933360"
  },
  {
    "text": "there's this the specificity which is",
    "start": "933360",
    "end": "935160"
  },
  {
    "text": "like a data race",
    "start": "935160",
    "end": "936680"
  },
  {
    "text": "uh yeah yeah",
    "start": "936680",
    "end": "941639"
  },
  {
    "text": "joke's old come on",
    "start": "941639",
    "end": "945620"
  },
  {
    "text": "how would you ever understand as a",
    "start": "946139",
    "end": "947760"
  },
  {
    "text": "beginner why you need the borrow Checker",
    "start": "947760",
    "end": "949260"
  },
  {
    "text": "and its rules how would you ever",
    "start": "949260",
    "end": "950880"
  },
  {
    "text": "understand that there's any other way to",
    "start": "950880",
    "end": "952139"
  },
  {
    "text": "program right like you're what you're",
    "start": "952139",
    "end": "954060"
  },
  {
    "text": "doing to a beginner is you're putting",
    "start": "954060",
    "end": "955680"
  },
  {
    "text": "you're giving them knowledge they don't",
    "start": "955680",
    "end": "957480"
  },
  {
    "text": "have yet do do it in Rust you can do",
    "start": "957480",
    "end": "960120"
  },
  {
    "text": "that in Rust right that is a pointer to",
    "start": "960120",
    "end": "963360"
  },
  {
    "text": "a function",
    "start": "963360",
    "end": "964860"
  },
  {
    "text": "I think I can read this hold on I think",
    "start": "964860",
    "end": "967019"
  },
  {
    "text": "I could read this my C is not that great",
    "start": "967019",
    "end": "968820"
  },
  {
    "text": "I think I could read this okay so what",
    "start": "968820",
    "end": "971160"
  },
  {
    "text": "do we have here",
    "start": "971160",
    "end": "972360"
  },
  {
    "text": "we have",
    "start": "972360",
    "end": "974699"
  },
  {
    "text": "what appears to be a function that",
    "start": "974699",
    "end": "977880"
  },
  {
    "text": "returns a function that doesn't",
    "start": "977880",
    "end": "980820"
  },
  {
    "text": "if I saying that right it's a function",
    "start": "980820",
    "end": "982680"
  },
  {
    "text": "that returns a pointer to a function",
    "start": "982680",
    "end": "984600"
  },
  {
    "text": "that doesn't return anything",
    "start": "984600",
    "end": "988399"
  },
  {
    "text": "is that right",
    "start": "988500",
    "end": "990480"
  },
  {
    "text": "I always am so bad off I'm So Bad on",
    "start": "990480",
    "end": "992639"
  },
  {
    "text": "these things",
    "start": "992639",
    "end": "994139"
  },
  {
    "text": "the best way to learn something new is",
    "start": "994139",
    "end": "995519"
  },
  {
    "text": "to put your existing knowledge uh at the",
    "start": "995519",
    "end": "997380"
  },
  {
    "text": "door it is very true",
    "start": "997380",
    "end": "1000680"
  },
  {
    "text": "uh but anyways so this article I think",
    "start": "1000680",
    "end": "1003380"
  },
  {
    "text": "one thing they didn't do uh well in this",
    "start": "1003380",
    "end": "1005060"
  },
  {
    "text": "article is they're too rust positive",
    "start": "1005060",
    "end": "1007399"
  },
  {
    "text": "like if you're going to say the dark",
    "start": "1007399",
    "end": "1008480"
  },
  {
    "text": "sides of rust I expect you to kind of",
    "start": "1008480",
    "end": "1009980"
  },
  {
    "text": "think about a little bit more which is",
    "start": "1009980",
    "end": "1012139"
  },
  {
    "text": "um",
    "start": "1012139",
    "end": "1013519"
  },
  {
    "text": "you know what is what is the cost of",
    "start": "1013519",
    "end": "1015680"
  },
  {
    "text": "larger refactors does it have the same",
    "start": "1015680",
    "end": "1018620"
  },
  {
    "text": "you know like the type system can become",
    "start": "1018620",
    "end": "1020480"
  },
  {
    "text": "a pain to work with",
    "start": "1020480",
    "end": "1022519"
  },
  {
    "text": "sometimes uh I think enums they're",
    "start": "1022519",
    "end": "1024798"
  },
  {
    "text": "fantastic but there also can be a pain",
    "start": "1024799",
    "end": "1026240"
  },
  {
    "text": "in the ass every now and then",
    "start": "1026240",
    "end": "1028699"
  },
  {
    "text": "oh yes that's casting you're right oh my",
    "start": "1028699",
    "end": "1031579"
  },
  {
    "text": "goodness this cat oh I'm such a stupid",
    "start": "1031579",
    "end": "1033380"
  },
  {
    "text": "yes this cast food to a function",
    "start": "1033380",
    "end": "1036860"
  },
  {
    "text": "is that is that right",
    "start": "1036860",
    "end": "1039199"
  },
  {
    "text": "this cast food to a function pointer and",
    "start": "1039199",
    "end": "1041720"
  },
  {
    "text": "executes it I don't know I still edubs",
    "start": "1041720",
    "end": "1044600"
  },
  {
    "text": "are super simple enums are super super",
    "start": "1044600",
    "end": "1045980"
  },
  {
    "text": "simple",
    "start": "1045980",
    "end": "1047120"
  },
  {
    "text": "um they're not they're not hard but",
    "start": "1047120",
    "end": "1049940"
  },
  {
    "text": "just let just go use it for just a",
    "start": "1049940",
    "end": "1052280"
  },
  {
    "text": "moment",
    "start": "1052280",
    "end": "1053179"
  },
  {
    "text": "um but I think that one thing about rust",
    "start": "1053179",
    "end": "1055160"
  },
  {
    "text": "that makes it super hard is that due to",
    "start": "1055160",
    "end": "1057620"
  },
  {
    "text": "the expressive nature of rust it's",
    "start": "1057620",
    "end": "1060679"
  },
  {
    "text": "really easy to express a problem",
    "start": "1060679",
    "end": "1062660"
  },
  {
    "text": "incorrectly",
    "start": "1062660",
    "end": "1065559"
  },
  {
    "text": "does that make sense",
    "start": "1065840",
    "end": "1068419"
  },
  {
    "text": "and so you'll you'll think that you got",
    "start": "1068419",
    "end": "1070460"
  },
  {
    "text": "a good idea",
    "start": "1070460",
    "end": "1071780"
  },
  {
    "text": "and you'll start going down this path",
    "start": "1071780",
    "end": "1074960"
  },
  {
    "text": "and you'll express a type",
    "start": "1074960",
    "end": "1078020"
  },
  {
    "text": "that might be nice with what you're",
    "start": "1078020",
    "end": "1080419"
  },
  {
    "text": "doing in the beginning but as you scale",
    "start": "1080419",
    "end": "1082820"
  },
  {
    "text": "it it's all Incorrect and you",
    "start": "1082820",
    "end": "1084500"
  },
  {
    "text": "effectively have to redo your types and",
    "start": "1084500",
    "end": "1086960"
  },
  {
    "text": "so",
    "start": "1086960",
    "end": "1089200"
  },
  {
    "text": "you know what I mean like that that it's",
    "start": "1089600",
    "end": "1091280"
  },
  {
    "text": "it's a hard thought process I haven't",
    "start": "1091280",
    "end": "1093260"
  },
  {
    "text": "had to do a ton with lifetimes and so I",
    "start": "1093260",
    "end": "1095299"
  },
  {
    "text": "don't know how hard lifetimes really are",
    "start": "1095299",
    "end": "1097100"
  },
  {
    "text": "a rust async is kind of clunky I agree",
    "start": "1097100",
    "end": "1099860"
  },
  {
    "text": "with that you know it's not it's it's",
    "start": "1099860",
    "end": "1101600"
  },
  {
    "text": "definitely not a w",
    "start": "1101600",
    "end": "1104000"
  },
  {
    "text": "ow weird when I press backspace it",
    "start": "1104000",
    "end": "1106039"
  },
  {
    "text": "wasn't working async traits generics is",
    "start": "1106039",
    "end": "1108260"
  },
  {
    "text": "really hard absolutely impulse aren't",
    "start": "1108260",
    "end": "1110419"
  },
  {
    "text": "super use like they're they're super",
    "start": "1110419",
    "end": "1112160"
  },
  {
    "text": "pain in the asses every time I start",
    "start": "1112160",
    "end": "1113539"
  },
  {
    "text": "trying to use more and more impulse",
    "start": "1113539",
    "end": "1116240"
  },
  {
    "text": "um so same with other lengths well other",
    "start": "1116240",
    "end": "1118400"
  },
  {
    "text": "lengths don't have the borrow Checker",
    "start": "1118400",
    "end": "1119660"
  },
  {
    "text": "and so that tends to remove a lot of",
    "start": "1119660",
    "end": "1121280"
  },
  {
    "text": "problems as far as type systems go it",
    "start": "1121280",
    "end": "1123559"
  },
  {
    "text": "depends on the expressivity of your",
    "start": "1123559",
    "end": "1125179"
  },
  {
    "text": "types right so one thing that goes good",
    "start": "1125179",
    "end": "1127400"
  },
  {
    "text": "at is that types are so simple you can't",
    "start": "1127400",
    "end": "1130460"
  },
  {
    "text": "create a really complex set of types and",
    "start": "1130460",
    "end": "1133340"
  },
  {
    "text": "without really complex set of types you",
    "start": "1133340",
    "end": "1135740"
  },
  {
    "text": "can create you know when you need the",
    "start": "1135740",
    "end": "1137960"
  },
  {
    "text": "refactor the refactor is very",
    "start": "1137960",
    "end": "1140059"
  },
  {
    "text": "one-dimensional",
    "start": "1140059",
    "end": "1141620"
  },
  {
    "text": "it's this typescript has the same",
    "start": "1141620",
    "end": "1143660"
  },
  {
    "text": "problem which typescript you can create",
    "start": "1143660",
    "end": "1146960"
  },
  {
    "text": "really complex types and when you need",
    "start": "1146960",
    "end": "1149360"
  },
  {
    "text": "to refactor the refactoring becomes much",
    "start": "1149360",
    "end": "1152900"
  },
  {
    "text": "more difficult does that make sense",
    "start": "1152900",
    "end": "1156880"
  },
  {
    "text": "that might be just a peer experience",
    "start": "1158059",
    "end": "1159860"
  },
  {
    "text": "thing that's kind of hard to describe",
    "start": "1159860",
    "end": "1161299"
  },
  {
    "text": "but I find that the Richer the type",
    "start": "1161299",
    "end": "1163280"
  },
  {
    "text": "system is",
    "start": "1163280",
    "end": "1164480"
  },
  {
    "text": "the easier it is to express problems but",
    "start": "1164480",
    "end": "1167840"
  },
  {
    "text": "the harder it is to change it but it's",
    "start": "1167840",
    "end": "1170120"
  },
  {
    "text": "harder to do without good types yeah",
    "start": "1170120",
    "end": "1172039"
  },
  {
    "text": "exactly so it's it's a trade-off I'm not",
    "start": "1172039",
    "end": "1174679"
  },
  {
    "text": "saying one's better I still don't know",
    "start": "1174679",
    "end": "1176299"
  },
  {
    "text": "if I think one is better than the other",
    "start": "1176299",
    "end": "1177860"
  },
  {
    "text": "honestly like real talk I don't know",
    "start": "1177860",
    "end": "1180260"
  },
  {
    "text": "which one I think is better that's why",
    "start": "1180260",
    "end": "1182299"
  },
  {
    "text": "I'm actually Super O camel curious",
    "start": "1182299",
    "end": "1184160"
  },
  {
    "text": "because when you look at o camel it has",
    "start": "1184160",
    "end": "1187400"
  },
  {
    "text": "it just has a lot less typing and a",
    "start": "1187400",
    "end": "1190100"
  },
  {
    "text": "really great inference and I wonder if",
    "start": "1190100",
    "end": "1191720"
  },
  {
    "text": "that is actually easier to write and",
    "start": "1191720",
    "end": "1194179"
  },
  {
    "text": "refactor I don't know like I truly don't",
    "start": "1194179",
    "end": "1196820"
  },
  {
    "text": "know and so that's why I'm just very",
    "start": "1196820",
    "end": "1198080"
  },
  {
    "text": "curious about that and so I want to try",
    "start": "1198080",
    "end": "1199640"
  },
  {
    "text": "I want to take some time and actually",
    "start": "1199640",
    "end": "1200840"
  },
  {
    "text": "learn it and try to you know get good at",
    "start": "1200840",
    "end": "1203360"
  },
  {
    "text": "it anyways there you go that's my",
    "start": "1203360",
    "end": "1205340"
  },
  {
    "text": "thought rust of the dark side",
    "start": "1205340",
    "end": "1207200"
  },
  {
    "text": "there you go hey guess what the name",
    "start": "1207200",
    "end": "1210799"
  },
  {
    "text": "is the prime machine",
    "start": "1210799",
    "end": "1213519"
  }
]