[
  {
    "text": "hey go 21 the 1.21 has been released as",
    "start": "0",
    "end": "4799"
  },
  {
    "text": "of today is it really today yeah today's",
    "start": "4799",
    "end": "6720"
  },
  {
    "text": "the eighth the go team is thrilled to",
    "start": "6720",
    "end": "8940"
  },
  {
    "text": "announce go 1.21 which can uh you can",
    "start": "8940",
    "end": "11580"
  },
  {
    "text": "get by visiting the download page go to",
    "start": "11580",
    "end": "14400"
  },
  {
    "text": "uh I don't I actually have no idea why I",
    "start": "14400",
    "end": "16198"
  },
  {
    "text": "just growled right there uh go 1.21 is",
    "start": "16199",
    "end": "18840"
  },
  {
    "text": "Pat I'm just gonna call It Go 21 okay",
    "start": "18840",
    "end": "20699"
  },
  {
    "text": "everyone uh we're packed with new",
    "start": "20699",
    "end": "22800"
  },
  {
    "text": "features and improvements here are some",
    "start": "22800",
    "end": "24000"
  },
  {
    "text": "notable changes all right tool",
    "start": "24000",
    "end": "25320"
  },
  {
    "text": "improvements the profile guided",
    "start": "25320",
    "end": "27119"
  },
  {
    "text": "optimization feature we announced uh for",
    "start": "27119",
    "end": "29460"
  },
  {
    "text": "preview in 1.20 is now generally",
    "start": "29460",
    "end": "31980"
  },
  {
    "text": "available I really hope they have Arena",
    "start": "31980",
    "end": "33420"
  },
  {
    "text": "allocations come on Arena allocations uh",
    "start": "33420",
    "end": "36120"
  },
  {
    "text": "if a file name to default for go is",
    "start": "36120",
    "end": "38880"
  },
  {
    "text": "present in the package directory the go",
    "start": "38880",
    "end": "40680"
  },
  {
    "text": "command will use it to enable Pogo build",
    "start": "40680",
    "end": "43200"
  },
  {
    "text": "see the Pogo uh documentation for more",
    "start": "43200",
    "end": "45840"
  },
  {
    "text": "details cool interesting the go tool now",
    "start": "45840",
    "end": "48300"
  },
  {
    "text": "supports backers a two to seven percent",
    "start": "48300",
    "end": "49739"
  },
  {
    "text": "Improvement in performance that's huge",
    "start": "49739",
    "end": "51780"
  },
  {
    "text": "when it comes to like servers if you",
    "start": "51780",
    "end": "54480"
  },
  {
    "text": "could a magically get seven percent",
    "start": "54480",
    "end": "56280"
  },
  {
    "text": "better things on large in like large",
    "start": "56280",
    "end": "58680"
  },
  {
    "text": "companies that's great like language",
    "start": "58680",
    "end": "60239"
  },
  {
    "text": "changes new built-in uh functions min",
    "start": "60239",
    "end": "62100"
  },
  {
    "text": "max and clear is this due today now that",
    "start": "62100",
    "end": "64500"
  },
  {
    "text": "they have generics you can just have",
    "start": "64500",
    "end": "66000"
  },
  {
    "text": "generic min max is that what's happening",
    "start": "66000",
    "end": "68400"
  },
  {
    "text": "here",
    "start": "68400",
    "end": "69479"
  },
  {
    "text": "um",
    "start": "69479",
    "end": "70320"
  },
  {
    "text": "min",
    "start": "70320",
    "end": "71700"
  },
  {
    "text": "minute Max",
    "start": "71700",
    "end": "73740"
  },
  {
    "text": "all right uh the built-in function's",
    "start": "73740",
    "end": "75720"
  },
  {
    "text": "been in Max compute the smallest or",
    "start": "75720",
    "end": "76920"
  },
  {
    "text": "largest respectively of the value okay",
    "start": "76920",
    "end": "78479"
  },
  {
    "text": "of uh value of a fixed number of",
    "start": "78479",
    "end": "81180"
  },
  {
    "text": "arguments ordered types okay oh",
    "start": "81180",
    "end": "83640"
  },
  {
    "text": "interesting they actually have proper",
    "start": "83640",
    "end": "85320"
  },
  {
    "text": "Min and Maxes let's go let's go go I",
    "start": "85320",
    "end": "88500"
  },
  {
    "text": "appreciate that I appreciate that",
    "start": "88500",
    "end": "90780"
  },
  {
    "text": "finally they're adding some basic",
    "start": "90780",
    "end": "92580"
  },
  {
    "text": "functions to the language can't believe",
    "start": "92580",
    "end": "93780"
  },
  {
    "text": "it this will make it go honestly a lot",
    "start": "93780",
    "end": "95220"
  },
  {
    "text": "better several improvements to type",
    "start": "95220",
    "end": "96659"
  },
  {
    "text": "inference for generic functions that's a",
    "start": "96659",
    "end": "98400"
  },
  {
    "text": "description of type inference in the",
    "start": "98400",
    "end": "99960"
  },
  {
    "text": "spec has been expanded and clarified",
    "start": "99960",
    "end": "101340"
  },
  {
    "text": "nice I like to hear that in a future",
    "start": "101340",
    "end": "103500"
  },
  {
    "text": "version of go we're planning to address",
    "start": "103500",
    "end": "104820"
  },
  {
    "text": "one of the most common gotchas of go",
    "start": "104820",
    "end": "106439"
  },
  {
    "text": "programming Loop variable capture 21",
    "start": "106439",
    "end": "108960"
  },
  {
    "text": "comes with a preview of that feature",
    "start": "108960",
    "end": "110939"
  },
  {
    "text": "that you can enable in your code okay",
    "start": "110939",
    "end": "112680"
  },
  {
    "text": "cool I I don't know that one but we can",
    "start": "112680",
    "end": "115439"
  },
  {
    "text": "look at that one later actually let's",
    "start": "115439",
    "end": "116759"
  },
  {
    "text": "look at it now what the hell is it",
    "start": "116759",
    "end": "118920"
  },
  {
    "text": "what does it do",
    "start": "118920",
    "end": "121758"
  },
  {
    "text": "um",
    "start": "121920",
    "end": "124020"
  },
  {
    "text": "let's see what is the problem consider a",
    "start": "124020",
    "end": "125880"
  },
  {
    "text": "loop like this okay we have an INT that",
    "start": "125880",
    "end": "128280"
  },
  {
    "text": "we range over the test cases we run this",
    "start": "128280",
    "end": "131099"
  },
  {
    "text": "one right here T parallel uh that must",
    "start": "131099",
    "end": "134340"
  },
  {
    "text": "mean run in parallel uh V value does not",
    "start": "134340",
    "end": "137220"
  },
  {
    "text": "equal oh is this like the old JavaScript",
    "start": "137220",
    "end": "139800"
  },
  {
    "text": "problem too right is that what's",
    "start": "139800",
    "end": "141480"
  },
  {
    "text": "happening V is just pegging to the end",
    "start": "141480",
    "end": "142920"
  },
  {
    "text": "this aims uh to check that all the tests",
    "start": "142920",
    "end": "145379"
  },
  {
    "text": "are uh are even they are not but it",
    "start": "145379",
    "end": "147840"
  },
  {
    "text": "passes without uh go experimental Loop",
    "start": "147840",
    "end": "150120"
  },
  {
    "text": "the problem is that t dot parallel stops",
    "start": "150120",
    "end": "151739"
  },
  {
    "text": "the closure and lets the loop continue",
    "start": "151739",
    "end": "153360"
  },
  {
    "text": "yep",
    "start": "153360",
    "end": "155280"
  },
  {
    "text": "yeah this is like the cloud this is the",
    "start": "155280",
    "end": "157319"
  },
  {
    "text": "Classic this is the classic right this",
    "start": "157319",
    "end": "160800"
  },
  {
    "text": "used to get me in JavaScript remember",
    "start": "160800",
    "end": "162180"
  },
  {
    "text": "where you'd have a JavaScript and you'd",
    "start": "162180",
    "end": "163800"
  },
  {
    "text": "have like something go and then I would",
    "start": "163800",
    "end": "165540"
  },
  {
    "text": "be the same for everything and you're",
    "start": "165540",
    "end": "166739"
  },
  {
    "text": "like why every time I remember that okay",
    "start": "166739",
    "end": "169680"
  },
  {
    "text": "cool all right I like that I like it uh",
    "start": "169680",
    "end": "172739"
  },
  {
    "text": "very very cool uh let's see standard",
    "start": "172739",
    "end": "174840"
  },
  {
    "text": "Library editions the new log slog",
    "start": "174840",
    "end": "176760"
  },
  {
    "text": "package for structured logging beautiful",
    "start": "176760",
    "end": "178860"
  },
  {
    "text": "love structure logging new slices",
    "start": "178860",
    "end": "180360"
  },
  {
    "text": "packages for common operations on slices",
    "start": "180360",
    "end": "182160"
  },
  {
    "text": "of any element type this includes",
    "start": "182160",
    "end": "183959"
  },
  {
    "text": "sorting functions that are generally",
    "start": "183959",
    "end": "185160"
  },
  {
    "text": "faster and more ergonomic than the sword",
    "start": "185160",
    "end": "186720"
  },
  {
    "text": "package all right a new maps package for",
    "start": "186720",
    "end": "189120"
  },
  {
    "text": "common operation on maps of any key and",
    "start": "189120",
    "end": "191400"
  },
  {
    "text": "element type a new compare package with",
    "start": "191400",
    "end": "193440"
  },
  {
    "text": "utilities for comparing ordered values",
    "start": "193440",
    "end": "195120"
  },
  {
    "text": "very cool Ghost making a comeback ghost",
    "start": "195120",
    "end": "197459"
  },
  {
    "text": "making a comeback okay",
    "start": "197459",
    "end": "199440"
  },
  {
    "text": "I like this nice leveraging the generics",
    "start": "199440",
    "end": "202319"
  },
  {
    "text": "uh they added yeah this is good copy um",
    "start": "202319",
    "end": "204180"
  },
  {
    "text": "this is this gopium look at that Porco",
    "start": "204180",
    "end": "207000"
  },
  {
    "text": "okay hey come on everyone knows that go",
    "start": "207000",
    "end": "209340"
  },
  {
    "text": "go is going places okay improve",
    "start": "209340",
    "end": "211680"
  },
  {
    "text": "performance in addition to the",
    "start": "211680",
    "end": "212700"
  },
  {
    "text": "performance improvements when enabling",
    "start": "212700",
    "end": "213840"
  },
  {
    "text": "Pogo uh the go compiler itself has been",
    "start": "213840",
    "end": "216180"
  },
  {
    "text": "rebuilt with Pago enabled for uh like",
    "start": "216180",
    "end": "218700"
  },
  {
    "text": "the compiler needs to be faster as a",
    "start": "218700",
    "end": "220620"
  },
  {
    "text": "result go programs build two to four",
    "start": "220620",
    "end": "222480"
  },
  {
    "text": "four percent faster that means your",
    "start": "222480",
    "end": "224519"
  },
  {
    "text": "program's gonna build instead of 40",
    "start": "224519",
    "end": "225900"
  },
  {
    "text": "milliseconds it's gonna be 39.6 faster",
    "start": "225900",
    "end": "228540"
  },
  {
    "text": "like oh cool",
    "start": "228540",
    "end": "230819"
  },
  {
    "text": "cool I I noticed that",
    "start": "230819",
    "end": "234000"
  },
  {
    "text": "um due to tuning of the garbage",
    "start": "234000",
    "end": "235379"
  },
  {
    "text": "collector some applications may see up",
    "start": "235379",
    "end": "236879"
  },
  {
    "text": "to a 40 reduction in tail latency oh",
    "start": "236879",
    "end": "239640"
  },
  {
    "text": "that's incredible",
    "start": "239640",
    "end": "241379"
  },
  {
    "text": "that is incredible because tail because",
    "start": "241379",
    "end": "243780"
  },
  {
    "text": "that's really that's where all of your",
    "start": "243780",
    "end": "245040"
  },
  {
    "text": "problems are your problem isn't in your",
    "start": "245040",
    "end": "246959"
  },
  {
    "text": "median right it's in your it's in your",
    "start": "246959",
    "end": "248640"
  },
  {
    "text": "99 percentile right the 99 percentile is",
    "start": "248640",
    "end": "252360"
  },
  {
    "text": "where it's all at right collecting",
    "start": "252360",
    "end": "254340"
  },
  {
    "text": "traces with runtime Trace now incurs a",
    "start": "254340",
    "end": "256320"
  },
  {
    "text": "substantially smaller CPU cost oh let's",
    "start": "256320",
    "end": "258479"
  },
  {
    "text": "go",
    "start": "258479",
    "end": "259680"
  },
  {
    "text": "uh Newport to Waze I uh go 21 ads",
    "start": "259680",
    "end": "262320"
  },
  {
    "text": "experimental port for webassembly system",
    "start": "262320",
    "end": "263880"
  },
  {
    "text": "interface preview one all right let's go",
    "start": "263880",
    "end": "266520"
  },
  {
    "text": "with the goose uh to facilitating right",
    "start": "266520",
    "end": "269400"
  },
  {
    "text": "uh writing more generalized General",
    "start": "269400",
    "end": "271139"
  },
  {
    "text": "webassembly wasm code the compiler also",
    "start": "271139",
    "end": "273360"
  },
  {
    "text": "supports a new directive for importing",
    "start": "273360",
    "end": "275040"
  },
  {
    "text": "functions from wasm host go wasm import",
    "start": "275040",
    "end": "277259"
  },
  {
    "text": "thanks everyone who contributed let's go",
    "start": "277259",
    "end": "279540"
  },
  {
    "text": "actually this is really cool there's",
    "start": "279540",
    "end": "280919"
  },
  {
    "text": "some really good stuff I I really do",
    "start": "280919",
    "end": "282600"
  },
  {
    "text": "feel like go is hitting this really cool",
    "start": "282600",
    "end": "284340"
  },
  {
    "text": "curve",
    "start": "284340",
    "end": "285300"
  },
  {
    "text": "which it's",
    "start": "285300",
    "end": "286560"
  },
  {
    "text": "it's gonna provide everything you want",
    "start": "286560",
    "end": "289620"
  },
  {
    "text": "it's gonna have just enough generics",
    "start": "289620",
    "end": "291300"
  },
  {
    "text": "it's super constrained in features it's",
    "start": "291300",
    "end": "293280"
  },
  {
    "text": "very very simple and I just feel like",
    "start": "293280",
    "end": "295199"
  },
  {
    "text": "there's going to be this curve that it's",
    "start": "295199",
    "end": "296880"
  },
  {
    "text": "going to become a really amazing",
    "start": "296880",
    "end": "298860"
  },
  {
    "text": "language and I think it's it's it's it's",
    "start": "298860",
    "end": "300199"
  },
  {
    "text": "very very fast it's extremely it's it's",
    "start": "300199",
    "end": "303540"
  },
  {
    "text": "so easy to get it right when writing",
    "start": "303540",
    "end": "305400"
  },
  {
    "text": "parallelized code right just going go",
    "start": "305400",
    "end": "308100"
  },
  {
    "text": "you know go Funk yourself going and",
    "start": "308100",
    "end": "310020"
  },
  {
    "text": "writing these things there's no colored",
    "start": "310020",
    "end": "311520"
  },
  {
    "text": "functions it just seems to be pretty",
    "start": "311520",
    "end": "313919"
  },
  {
    "text": "good like I really like it there's a lot",
    "start": "313919",
    "end": "316080"
  },
  {
    "text": "of really great reasons to like a go and",
    "start": "316080",
    "end": "318300"
  },
  {
    "text": "so",
    "start": "318300",
    "end": "319860"
  },
  {
    "text": "I'm happy about it",
    "start": "319860",
    "end": "321780"
  },
  {
    "text": "um I'm very happy about it is",
    "start": "321780",
    "end": "323220"
  },
  {
    "text": "unfathomably based it really is this was",
    "start": "323220",
    "end": "324900"
  },
  {
    "text": "I'm ready uh wasm is on the cusp but I'm",
    "start": "324900",
    "end": "328020"
  },
  {
    "text": "not sure if it's ready like",
    "start": "328020",
    "end": "330120"
  },
  {
    "text": "I don't know I know I made it into I'm a",
    "start": "330120",
    "end": "332039"
  },
  {
    "text": "meme I'm a meme boys I'm a meme in",
    "start": "332039",
    "end": "334860"
  },
  {
    "text": "fireship's latest video I I that is most",
    "start": "334860",
    "end": "337919"
  },
  {
    "text": "excellent",
    "start": "337919",
    "end": "338880"
  },
  {
    "text": "um I finally made it I finally made it",
    "start": "338880",
    "end": "340800"
  },
  {
    "text": "as a meme",
    "start": "340800",
    "end": "342240"
  },
  {
    "text": "um anyways in essence it's grinding",
    "start": "342240",
    "end": "343800"
  },
  {
    "text": "towards the 90 right point on the worst",
    "start": "343800",
    "end": "346020"
  },
  {
    "text": "is better scale it is I think that it's",
    "start": "346020",
    "end": "348120"
  },
  {
    "text": "doing exactly what you want because",
    "start": "348120",
    "end": "349560"
  },
  {
    "text": "worse is better is a really good way to",
    "start": "349560",
    "end": "351240"
  },
  {
    "text": "gauge making software and I do really",
    "start": "351240",
    "end": "352740"
  },
  {
    "text": "think that go is",
    "start": "352740",
    "end": "354419"
  },
  {
    "text": "is awesome right I think go is just the",
    "start": "354419",
    "end": "356699"
  },
  {
    "text": "right you know it's just the right",
    "start": "356699",
    "end": "358199"
  },
  {
    "text": "amount so I love it uh Hey thank you",
    "start": "358199",
    "end": "360840"
  },
  {
    "text": "very much for listening this is some",
    "start": "360840",
    "end": "362940"
  },
  {
    "text": "prime news we did look at this there's a",
    "start": "362940",
    "end": "364680"
  },
  {
    "text": "little bit of news piece the name",
    "start": "364680",
    "end": "366780"
  },
  {
    "text": "is the primogen the mimajin the I'm in",
    "start": "366780",
    "end": "369539"
  },
  {
    "text": "the latest fireship video widget",
    "start": "369539",
    "end": "372919"
  }
]