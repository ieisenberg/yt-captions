[
  {
    "text": "all right so apparently go routines are",
    "start": "0",
    "end": "3120"
  },
  {
    "text": "useless for back-end development which",
    "start": "3120",
    "end": "5100"
  },
  {
    "text": "this seems strange okay uh today I was",
    "start": "5100",
    "end": "7319"
  },
  {
    "text": "listening to the podcast and one of the",
    "start": "7319",
    "end": "8700"
  },
  {
    "text": "hosts said basically that go routines",
    "start": "8700",
    "end": "10080"
  },
  {
    "text": "are useless for back-end development",
    "start": "10080",
    "end": "11460"
  },
  {
    "text": "because we won't run multi-core systems",
    "start": "11460",
    "end": "13559"
  },
  {
    "text": "when we deploy we run multiple single",
    "start": "13559",
    "end": "15839"
  },
  {
    "text": "core instances so I was wondering if if",
    "start": "15839",
    "end": "18600"
  },
  {
    "text": "it's in your experience true or that the",
    "start": "18600",
    "end": "21960"
  },
  {
    "text": "strange phrase uh that now let's say",
    "start": "21960",
    "end": "23820"
  },
  {
    "text": "that nowaday we usually develop uh",
    "start": "23820",
    "end": "25619"
  },
  {
    "text": "deploy only single core instances I'm",
    "start": "25619",
    "end": "27420"
  },
  {
    "text": "not a goaling developer I'm a junior",
    "start": "27420",
    "end": "28920"
  },
  {
    "text": "Java developer okay hey respect hey give",
    "start": "28920",
    "end": "32220"
  },
  {
    "text": "the man a little bit of respect okay",
    "start": "32220",
    "end": "33480"
  },
  {
    "text": "he's coming out here junior Java Dev",
    "start": "33480",
    "end": "36200"
  },
  {
    "text": "pleaded pants on loving life of many",
    "start": "36200",
    "end": "39780"
  },
  {
    "text": "respects for this uh but I'm interested",
    "start": "39780",
    "end": "41399"
  },
  {
    "text": "in learning golang okay so we could",
    "start": "41399",
    "end": "42960"
  },
  {
    "text": "listen to this podcast here here let's",
    "start": "42960",
    "end": "44460"
  },
  {
    "text": "let's bring up this podcast because I",
    "start": "44460",
    "end": "45960"
  },
  {
    "text": "want to be fair just make sure that the",
    "start": "45960",
    "end": "47280"
  },
  {
    "text": "take is correct oh and it's late okay",
    "start": "47280",
    "end": "49140"
  },
  {
    "text": "okay whoa whoa okay so right now I'm",
    "start": "49140",
    "end": "51719"
  },
  {
    "text": "gonna first choose to have no sound",
    "start": "51719",
    "end": "52980"
  },
  {
    "text": "because I I felt like that was the best",
    "start": "52980",
    "end": "54600"
  },
  {
    "text": "approach to to start with who was",
    "start": "54600",
    "end": "56820"
  },
  {
    "text": "invented to solve a problem that we",
    "start": "56820",
    "end": "59100"
  },
  {
    "text": "immediately stopped",
    "start": "59100",
    "end": "60440"
  },
  {
    "text": "in some regard not not all of go but",
    "start": "60440",
    "end": "63739"
  },
  {
    "text": "specifically it's go routine model which",
    "start": "63739",
    "end": "66420"
  },
  {
    "text": "is by the time they actually got go",
    "start": "66420",
    "end": "68520"
  },
  {
    "text": "routines stable and landed working the",
    "start": "68520",
    "end": "71820"
  },
  {
    "text": "way they were described in the original",
    "start": "71820",
    "end": "73200"
  },
  {
    "text": "conference talk five years prior",
    "start": "73200",
    "end": "75479"
  },
  {
    "text": "they were useless because we don't run",
    "start": "75479",
    "end": "77880"
  },
  {
    "text": "multi-core systems anymore",
    "start": "77880",
    "end": "79799"
  },
  {
    "text": "you you deploy and it runs on multiple",
    "start": "79799",
    "end": "82560"
  },
  {
    "text": "instances multiple single core instances",
    "start": "82560",
    "end": "84540"
  },
  {
    "text": "where they're actually not even single",
    "start": "84540",
    "end": "85860"
  },
  {
    "text": "core instances they are one half of a",
    "start": "85860",
    "end": "89640"
  },
  {
    "text": "hyper thread",
    "start": "89640",
    "end": "91619"
  },
  {
    "text": "yeah",
    "start": "91619",
    "end": "92820"
  },
  {
    "text": "I completely agree with that right like",
    "start": "92820",
    "end": "94560"
  },
  {
    "text": "if you if you're using kubernetes you",
    "start": "94560",
    "end": "96119"
  },
  {
    "text": "just scale up at the Pod level right",
    "start": "96119",
    "end": "97979"
  },
  {
    "text": "rather than right within your",
    "start": "97979",
    "end": "99479"
  },
  {
    "text": "application though I will say",
    "start": "99479",
    "end": "102720"
  },
  {
    "text": "um there's been a lot of times where it",
    "start": "102720",
    "end": "104100"
  },
  {
    "text": "was really nice to be able to just run a",
    "start": "104100",
    "end": "106320"
  },
  {
    "text": "quick background job on the same server",
    "start": "106320",
    "end": "108600"
  },
  {
    "text": "for the reason that I don't need to",
    "start": "108600",
    "end": "110100"
  },
  {
    "text": "reach to the infrastructure to solve the",
    "start": "110100",
    "end": "111540"
  },
  {
    "text": "problem for me",
    "start": "111540",
    "end": "112680"
  },
  {
    "text": "um that doesn't mean you should never",
    "start": "112680",
    "end": "113640"
  },
  {
    "text": "reach to the infrastructure sometimes",
    "start": "113640",
    "end": "115259"
  },
  {
    "text": "like serverless stuff or kubernetes are",
    "start": "115259",
    "end": "117360"
  },
  {
    "text": "really are good for those things but it",
    "start": "117360",
    "end": "119040"
  },
  {
    "text": "is kind of nice just people like I'm",
    "start": "119040",
    "end": "120420"
  },
  {
    "text": "just going to spawn a go routine and do",
    "start": "120420",
    "end": "121619"
  },
  {
    "text": "it here really quick",
    "start": "121619",
    "end": "124079"
  },
  {
    "text": "in general like",
    "start": "124079",
    "end": "125399"
  },
  {
    "text": "okay okay okay okay okay I see what is",
    "start": "125399",
    "end": "128580"
  },
  {
    "text": "being said here",
    "start": "128580",
    "end": "130440"
  },
  {
    "text": "so how I take what is being said is that",
    "start": "130440",
    "end": "134520"
  },
  {
    "text": "every request is effectively running on",
    "start": "134520",
    "end": "137280"
  },
  {
    "text": "its own",
    "start": "137280",
    "end": "139099"
  },
  {
    "text": "one half of a hyper thread is that",
    "start": "139099",
    "end": "142319"
  },
  {
    "text": "correct is that what is that what is",
    "start": "142319",
    "end": "143879"
  },
  {
    "text": "that what you're hearing is that every",
    "start": "143879",
    "end": "145319"
  },
  {
    "text": "request effectively goes into its own",
    "start": "145319",
    "end": "148800"
  },
  {
    "text": "like go",
    "start": "148800",
    "end": "150420"
  },
  {
    "text": "environment that's ran One Time by",
    "start": "150420",
    "end": "153720"
  },
  {
    "text": "itself it's not some long-lived",
    "start": "153720",
    "end": "155220"
  },
  {
    "text": "application that's getting thousands of",
    "start": "155220",
    "end": "156540"
  },
  {
    "text": "requests and said every no it's not that",
    "start": "156540",
    "end": "159000"
  },
  {
    "text": "a single core it's not single core",
    "start": "159000",
    "end": "160860"
  },
  {
    "text": "that's not what we're saying",
    "start": "160860",
    "end": "162360"
  },
  {
    "text": "um single course it is on its own single",
    "start": "162360",
    "end": "165120"
  },
  {
    "text": "core it's it's that each",
    "start": "165120",
    "end": "167340"
  },
  {
    "text": "request is being its own Standalone",
    "start": "167340",
    "end": "171360"
  },
  {
    "text": "process is that what I'm hearing yes one",
    "start": "171360",
    "end": "174480"
  },
  {
    "text": "core per request okay so if it's true",
    "start": "174480",
    "end": "177180"
  },
  {
    "text": "okay",
    "start": "177180",
    "end": "178080"
  },
  {
    "text": "no no",
    "start": "178080",
    "end": "180180"
  },
  {
    "text": "yes but no one actually does that sounds",
    "start": "180180",
    "end": "182640"
  },
  {
    "text": "like serverless no yes okay so it sounds",
    "start": "182640",
    "end": "184980"
  },
  {
    "text": "like every okay well it's one hyper",
    "start": "184980",
    "end": "186540"
  },
  {
    "text": "thread I just said one process right it",
    "start": "186540",
    "end": "188220"
  },
  {
    "text": "could be one hyper thread one core per",
    "start": "188220",
    "end": "190319"
  },
  {
    "text": "request yes and",
    "start": "190319",
    "end": "192120"
  },
  {
    "text": "um okay so let me",
    "start": "192120",
    "end": "194700"
  },
  {
    "text": "let me say it this way I don't know how",
    "start": "194700",
    "end": "197220"
  },
  {
    "text": "that would exactly work and how",
    "start": "197220",
    "end": "198720"
  },
  {
    "text": "efficient that really would be uh I",
    "start": "198720",
    "end": "201239"
  },
  {
    "text": "don't think there's a startup time",
    "start": "201239",
    "end": "202500"
  },
  {
    "text": "concern at all with go or any of those",
    "start": "202500",
    "end": "204720"
  },
  {
    "text": "things but if go I'm not even sure how",
    "start": "204720",
    "end": "207239"
  },
  {
    "text": "you'd write your server in such a way",
    "start": "207239",
    "end": "208739"
  },
  {
    "text": "that it can be something because you",
    "start": "208739",
    "end": "210180"
  },
  {
    "text": "wouldn't want to set up your server",
    "start": "210180",
    "end": "211379"
  },
  {
    "text": "every single time to do all this but",
    "start": "211379",
    "end": "212760"
  },
  {
    "text": "anyways whatever let's just say that",
    "start": "212760",
    "end": "214680"
  },
  {
    "text": "that's what's happening every request",
    "start": "214680",
    "end": "216420"
  },
  {
    "text": "gets its own process in which it does",
    "start": "216420",
    "end": "219120"
  },
  {
    "text": "its thing and then it's taken down if",
    "start": "219120",
    "end": "221819"
  },
  {
    "text": "that is the case",
    "start": "221819",
    "end": "223319"
  },
  {
    "text": "then I understand why you'd say go",
    "start": "223319",
    "end": "225599"
  },
  {
    "text": "routines offer nothing because you'd",
    "start": "225599",
    "end": "228360"
  },
  {
    "text": "only be adding",
    "start": "228360",
    "end": "230159"
  },
  {
    "text": "overhead right because you're literally",
    "start": "230159",
    "end": "231959"
  },
  {
    "text": "gonna do a request",
    "start": "231959",
    "end": "233459"
  },
  {
    "text": "process the request get the results put",
    "start": "233459",
    "end": "236459"
  },
  {
    "text": "it in Chase on and that's it right so if",
    "start": "236459",
    "end": "239099"
  },
  {
    "text": "you were running a single request",
    "start": "239099",
    "end": "240720"
  },
  {
    "text": "through a singular process I'm on your",
    "start": "240720",
    "end": "243420"
  },
  {
    "text": "team with that one that that makes sense",
    "start": "243420",
    "end": "245640"
  },
  {
    "text": "now I'm having a hard time visualizing",
    "start": "245640",
    "end": "247739"
  },
  {
    "text": "or understanding why you would do that",
    "start": "247739",
    "end": "249360"
  },
  {
    "text": "perhaps I'm missing out on some really",
    "start": "249360",
    "end": "251400"
  },
  {
    "text": "cool scaling technique that I'm I'm very",
    "start": "251400",
    "end": "253200"
  },
  {
    "text": "unaware of and that's fair I'm not like",
    "start": "253200",
    "end": "255120"
  },
  {
    "text": "a huge infrastructure person so I I",
    "start": "255120",
    "end": "257280"
  },
  {
    "text": "could totally I maybe there's something",
    "start": "257280",
    "end": "259500"
  },
  {
    "text": "I'm missing hey to be fair maybe there",
    "start": "259500",
    "end": "262079"
  },
  {
    "text": "are things I'm missing but what about",
    "start": "262079",
    "end": "263280"
  },
  {
    "text": "creating DB connections I know exactly",
    "start": "263280",
    "end": "265139"
  },
  {
    "text": "like I said there's a lot of questions I",
    "start": "265139",
    "end": "267060"
  },
  {
    "text": "have that it doesn't make any sense to",
    "start": "267060",
    "end": "268620"
  },
  {
    "text": "me what's being said right what's being",
    "start": "268620",
    "end": "270840"
  },
  {
    "text": "said doesn't make any sense now I guess",
    "start": "270840",
    "end": "273180"
  },
  {
    "text": "the next thing I could see happening is",
    "start": "273180",
    "end": "275580"
  },
  {
    "text": "that every request is ran on its own",
    "start": "275580",
    "end": "277620"
  },
  {
    "text": "green thread in which you just sit there",
    "start": "277620",
    "end": "279120"
  },
  {
    "text": "and block but that somehow doesn't make",
    "start": "279120",
    "end": "281520"
  },
  {
    "text": "any sense to me I'm having a hard time",
    "start": "281520",
    "end": "283740"
  },
  {
    "text": "seeing that or understanding why that",
    "start": "283740",
    "end": "285479"
  },
  {
    "text": "would be a good thing because you would",
    "start": "285479",
    "end": "286500"
  },
  {
    "text": "block many threads or depending on how",
    "start": "286500",
    "end": "288660"
  },
  {
    "text": "the async stuff is set up there could be",
    "start": "288660",
    "end": "290220"
  },
  {
    "text": "a lot of blocking like in my head",
    "start": "290220",
    "end": "292440"
  },
  {
    "text": "here here's a good example here",
    "start": "292440",
    "end": "295740"
  },
  {
    "text": "um okay that's a very good joke for my",
    "start": "295740",
    "end": "297419"
  },
  {
    "text": "YouTube please don't look at that really",
    "start": "297419",
    "end": "298740"
  },
  {
    "text": "great joke for my YouTube I'm just gonna",
    "start": "298740",
    "end": "300300"
  },
  {
    "text": "do it in typescript because it's",
    "start": "300300",
    "end": "301500"
  },
  {
    "text": "honestly the easiest function uh you",
    "start": "301500",
    "end": "303960"
  },
  {
    "text": "know we'll go like this uh",
    "start": "303960",
    "end": "306120"
  },
  {
    "text": "AC function one right and this thing uh",
    "start": "306120",
    "end": "309180"
  },
  {
    "text": "return a new promise uh uh res set time",
    "start": "309180",
    "end": "313919"
  },
  {
    "text": "out and actually let's just call this",
    "start": "313919",
    "end": "316080"
  },
  {
    "text": "thing wait and have a uh an MS number",
    "start": "316080",
    "end": "319560"
  },
  {
    "text": "come in right there we go and then we'll",
    "start": "319560",
    "end": "321780"
  },
  {
    "text": "just do res Ms right okay this is great",
    "start": "321780",
    "end": "323940"
  },
  {
    "text": "so we could have Function One",
    "start": "323940",
    "end": "326039"
  },
  {
    "text": "are you seeing function one and it could",
    "start": "326039",
    "end": "328080"
  },
  {
    "text": "literally just await uh console",
    "start": "328080",
    "end": "330660"
  },
  {
    "text": "log for those that don't understand why",
    "start": "330660",
    "end": "332520"
  },
  {
    "text": "this is important right one start just",
    "start": "332520",
    "end": "334979"
  },
  {
    "text": "in case you didn't understand why this",
    "start": "334979",
    "end": "336539"
  },
  {
    "text": "is important let's have this thing wait",
    "start": "336539",
    "end": "338039"
  },
  {
    "text": "one second like you could imagine this",
    "start": "338039",
    "end": "339660"
  },
  {
    "text": "is a you know some sort of database",
    "start": "339660",
    "end": "342539"
  },
  {
    "text": "whatever call right",
    "start": "342539",
    "end": "345419"
  },
  {
    "text": "um right and we can Yap that and then",
    "start": "345419",
    "end": "347880"
  },
  {
    "text": "you could have a a two which does the",
    "start": "347880",
    "end": "350520"
  },
  {
    "text": "exact same thing which I don't know why",
    "start": "350520",
    "end": "351960"
  },
  {
    "text": "I didn't just uh find and replace but",
    "start": "351960",
    "end": "353759"
  },
  {
    "text": "whatever we're gonna do that and let's",
    "start": "353759",
    "end": "355919"
  },
  {
    "text": "just say this thing is two seconds and",
    "start": "355919",
    "end": "357900"
  },
  {
    "text": "then we can have our async main which is",
    "start": "357900",
    "end": "359820"
  },
  {
    "text": "gonna be uh what function let's go like",
    "start": "359820",
    "end": "362880"
  },
  {
    "text": "this we could have a weight one",
    "start": "362880",
    "end": "365280"
  },
  {
    "text": "and await to",
    "start": "365280",
    "end": "367740"
  },
  {
    "text": "or like that would be like kind of this",
    "start": "367740",
    "end": "370199"
  },
  {
    "text": "is like more single threaded right this",
    "start": "370199",
    "end": "371699"
  },
  {
    "text": "is where you have no none of them or you",
    "start": "371699",
    "end": "374400"
  },
  {
    "text": "can do something that's more like",
    "start": "374400",
    "end": "375300"
  },
  {
    "text": "promise.all which allows you to do well",
    "start": "375300",
    "end": "378479"
  },
  {
    "text": "this right",
    "start": "378479",
    "end": "381320"
  },
  {
    "text": "oh my goodness uh this this example is",
    "start": "391860",
    "end": "394259"
  },
  {
    "text": "getting kind of long people this example",
    "start": "394259",
    "end": "396600"
  },
  {
    "text": "is getting kind of long people",
    "start": "396600",
    "end": "399919"
  },
  {
    "text": "there we go",
    "start": "403440",
    "end": "406160"
  },
  {
    "text": "so it's like why wouldn't you want to do",
    "start": "412560",
    "end": "415080"
  },
  {
    "text": "this one",
    "start": "415080",
    "end": "416460"
  },
  {
    "text": "so even if I am running it on one thread",
    "start": "416460",
    "end": "420060"
  },
  {
    "text": "right",
    "start": "420060",
    "end": "421380"
  },
  {
    "text": "even if I'm running on one single thread",
    "start": "421380",
    "end": "424500"
  },
  {
    "text": "I can still have multiple things out at",
    "start": "424500",
    "end": "427080"
  },
  {
    "text": "the same time you still get concurrency",
    "start": "427080",
    "end": "429120"
  },
  {
    "text": "so I don't understand yeah I used button",
    "start": "429120",
    "end": "431880"
  },
  {
    "text": "by the way I program I do my front ends",
    "start": "431880",
    "end": "434819"
  },
  {
    "text": "in htmx and I run bun for classic",
    "start": "434819",
    "end": "437039"
  },
  {
    "text": "scripts",
    "start": "437039",
    "end": "438240"
  },
  {
    "text": "um it's just like to me I don't get I I",
    "start": "438240",
    "end": "440160"
  },
  {
    "text": "purely don't get the argument unless if",
    "start": "440160",
    "end": "442740"
  },
  {
    "text": "it is the way he said at the beginning",
    "start": "442740",
    "end": "444620"
  },
  {
    "text": "which was if every I would love to get",
    "start": "444620",
    "end": "448800"
  },
  {
    "text": "Lane on here if Lane was here maybe he",
    "start": "448800",
    "end": "450539"
  },
  {
    "text": "could kind of clarify what's being said",
    "start": "450539",
    "end": "452099"
  },
  {
    "text": "here but if this is uh just a js on the",
    "start": "452099",
    "end": "455400"
  },
  {
    "text": "server copium is this",
    "start": "455400",
    "end": "457860"
  },
  {
    "text": "notes concurrency is not single thread",
    "start": "457860",
    "end": "460680"
  },
  {
    "text": "um so it is it it is it isn't uh what",
    "start": "460680",
    "end": "464340"
  },
  {
    "text": "you're saying is entirely too confusing",
    "start": "464340",
    "end": "466099"
  },
  {
    "text": "to actually really resonate with or to",
    "start": "466099",
    "end": "469020"
  },
  {
    "text": "kind of understand uh they have a bunch",
    "start": "469020",
    "end": "471780"
  },
  {
    "text": "of threads that do stuff V8 spawns",
    "start": "471780",
    "end": "473759"
  },
  {
    "text": "multiple threads to actually do things",
    "start": "473759",
    "end": "475199"
  },
  {
    "text": "right there is a scavenger thread that",
    "start": "475199",
    "end": "477000"
  },
  {
    "text": "scavenges garbage really easily and",
    "start": "477000",
    "end": "478680"
  },
  {
    "text": "doesn't require a minor major GC there's",
    "start": "478680",
    "end": "481020"
  },
  {
    "text": "Network threads there's things but node",
    "start": "481020",
    "end": "483240"
  },
  {
    "text": "itself is a single execution is what I",
    "start": "483240",
    "end": "487380"
  },
  {
    "text": "like to say I believe it's all on the",
    "start": "487380",
    "end": "489419"
  },
  {
    "text": "same thread but it's it's single",
    "start": "489419",
    "end": "491639"
  },
  {
    "text": "execution notice just lib8 plus UV yeah",
    "start": "491639",
    "end": "494940"
  },
  {
    "text": "yeah yeah agreed if you had one language",
    "start": "494940",
    "end": "496800"
  },
  {
    "text": "that could actually take advantage of",
    "start": "496800",
    "end": "497880"
  },
  {
    "text": "multiple cores could run for a long time",
    "start": "497880",
    "end": "499560"
  },
  {
    "text": "without choking it is actually faster",
    "start": "499560",
    "end": "500940"
  },
  {
    "text": "you could just do more stuff with more",
    "start": "500940",
    "end": "502199"
  },
  {
    "text": "capable Hardware yes that's called go",
    "start": "502199",
    "end": "504000"
  },
  {
    "text": "that's literally what go is for right",
    "start": "504000",
    "end": "507180"
  },
  {
    "text": "um but either way like when I see this I",
    "start": "507180",
    "end": "509639"
  },
  {
    "text": "don't understand this take because I",
    "start": "509639",
    "end": "511020"
  },
  {
    "text": "don't think it makes any sense because",
    "start": "511020",
    "end": "512099"
  },
  {
    "text": "even single threaded you want IO to be",
    "start": "512099",
    "end": "515219"
  },
  {
    "text": "in the background you want I O to run on",
    "start": "515219",
    "end": "516959"
  },
  {
    "text": "a separate thread you want I O know the",
    "start": "516959",
    "end": "518339"
  },
  {
    "text": "waiting to whatever it's doing whoever",
    "start": "518339",
    "end": "519959"
  },
  {
    "text": "it's calling to you want it to happen",
    "start": "519959",
    "end": "521099"
  },
  {
    "text": "somewhere else because why would you",
    "start": "521099",
    "end": "522180"
  },
  {
    "text": "want to wait so I I genuinely cannot",
    "start": "522180",
    "end": "524339"
  },
  {
    "text": "understand this take unless there's this",
    "start": "524339",
    "end": "527040"
  },
  {
    "text": "one caveat which is that it has to be",
    "start": "527040",
    "end": "529980"
  },
  {
    "text": "single request single process but then",
    "start": "529980",
    "end": "532320"
  },
  {
    "text": "you got the whole database thing you got",
    "start": "532320",
    "end": "534180"
  },
  {
    "text": "all these things like right you have to",
    "start": "534180",
    "end": "535500"
  },
  {
    "text": "establish a new TCP handshake https",
    "start": "535500",
    "end": "539279"
  },
  {
    "text": "whatever you're doing alpn Alpine",
    "start": "539279",
    "end": "542220"
  },
  {
    "text": "whatever the hell you're doing you're",
    "start": "542220",
    "end": "543779"
  },
  {
    "text": "doing your Alpine request so that way",
    "start": "543779",
    "end": "545580"
  },
  {
    "text": "you can do your efficient H2 request but",
    "start": "545580",
    "end": "547200"
  },
  {
    "text": "then you get none of the benefit of H2",
    "start": "547200",
    "end": "548820"
  },
  {
    "text": "right uh thank you uh privacy for",
    "start": "548820",
    "end": "551940"
  },
  {
    "text": "everything you do hey appreciate that",
    "start": "551940",
    "end": "553560"
  },
  {
    "text": "milk um and so it it I I I'm just",
    "start": "553560",
    "end": "557100"
  },
  {
    "text": "personally confused by this it does",
    "start": "557100",
    "end": "559500"
  },
  {
    "text": "sound like this is a bit of what",
    "start": "559500",
    "end": "560820"
  },
  {
    "text": "serverless does I think",
    "start": "560820",
    "end": "562680"
  },
  {
    "text": "that sounds correct that sounds like",
    "start": "562680",
    "end": "565200"
  },
  {
    "text": "serverless I got an F I'm getting some",
    "start": "565200",
    "end": "566760"
  },
  {
    "text": "F's let's go F's getting some F's let's",
    "start": "566760",
    "end": "568920"
  },
  {
    "text": "go Tina Turner um but other than that I",
    "start": "568920",
    "end": "571080"
  },
  {
    "text": "I'm really I'm genuinely confused by",
    "start": "571080",
    "end": "573000"
  },
  {
    "text": "this argument so um let's see let's see",
    "start": "573000",
    "end": "575220"
  },
  {
    "text": "if we got any comments uh you can have a",
    "start": "575220",
    "end": "577140"
  },
  {
    "text": "single core but many threads and",
    "start": "577140",
    "end": "578339"
  },
  {
    "text": "processes yeah uh you can have a single",
    "start": "578339",
    "end": "580440"
  },
  {
    "text": "core but two logical cores hyper",
    "start": "580440",
    "end": "581820"
  },
  {
    "text": "threading damn got him it's interesting",
    "start": "581820",
    "end": "583560"
  },
  {
    "text": "to look at nginx it's single threaded",
    "start": "583560",
    "end": "585180"
  },
  {
    "text": "and implemented in C yet it is used for",
    "start": "585180",
    "end": "587160"
  },
  {
    "text": "routing Ingress traffic into k8's",
    "start": "587160",
    "end": "588959"
  },
  {
    "text": "clusters it's also one of the quickest",
    "start": "588959",
    "end": "590640"
  },
  {
    "text": "static file servers yeah yeah it's it's",
    "start": "590640",
    "end": "592860"
  },
  {
    "text": "see look at this the whole point is just",
    "start": "592860",
    "end": "594480"
  },
  {
    "text": "taking care of IO so that's the thing",
    "start": "594480",
    "end": "596700"
  },
  {
    "text": "I'm I'm confused about is there anyone",
    "start": "596700",
    "end": "598740"
  },
  {
    "text": "that's saying no that doesn't make sense",
    "start": "598740",
    "end": "599820"
  },
  {
    "text": "let's see a guy on a JavaScript related",
    "start": "599820",
    "end": "601920"
  },
  {
    "text": "podcast claiming that we run every",
    "start": "601920",
    "end": "604380"
  },
  {
    "text": "system out there on a single core",
    "start": "604380",
    "end": "605760"
  },
  {
    "text": "machine doesn't really surprise me it's",
    "start": "605760",
    "end": "607680"
  },
  {
    "text": "not a JavaScript related podcast this is",
    "start": "607680",
    "end": "609600"
  },
  {
    "text": "actually or well maybe maybe that is a",
    "start": "609600",
    "end": "611940"
  },
  {
    "text": "JavaScript related podcast to be fair",
    "start": "611940",
    "end": "614160"
  },
  {
    "text": "this is top end devs I don't know top",
    "start": "614160",
    "end": "616200"
  },
  {
    "text": "end devs",
    "start": "616200",
    "end": "617399"
  },
  {
    "text": "um maybe this is a JavaScript",
    "start": "617399",
    "end": "620940"
  },
  {
    "text": "podcast",
    "start": "620940",
    "end": "622620"
  },
  {
    "text": "uh here's a better podcast for you go",
    "start": "622620",
    "end": "624899"
  },
  {
    "text": "Time and ship it oh okay change log I",
    "start": "624899",
    "end": "627000"
  },
  {
    "text": "like changelog um but nonetheless it",
    "start": "627000",
    "end": "630000"
  },
  {
    "text": "even this surprises me right every",
    "start": "630000",
    "end": "632519"
  },
  {
    "text": "JavaScript person knows in the world",
    "start": "632519",
    "end": "634080"
  },
  {
    "text": "that you do async await to avoid",
    "start": "634080",
    "end": "636480"
  },
  {
    "text": "blocking JavaScript like I in fact it's",
    "start": "636480",
    "end": "639240"
  },
  {
    "text": "almost impossible like to do a",
    "start": "639240",
    "end": "641100"
  },
  {
    "text": "synchronous HTTP request HTT HTTP",
    "start": "641100",
    "end": "644279"
  },
  {
    "text": "request is actually like you have to",
    "start": "644279",
    "end": "646920"
  },
  {
    "text": "configure it to be sync right it's not",
    "start": "646920",
    "end": "649200"
  },
  {
    "text": "trivial so I don't know I I genuinely",
    "start": "649200",
    "end": "651959"
  },
  {
    "text": "don't understand this take and I want",
    "start": "651959",
    "end": "654240"
  },
  {
    "text": "everybody to know please use go routines",
    "start": "654240",
    "end": "656640"
  },
  {
    "text": "go routines are one of the most",
    "start": "656640",
    "end": "657899"
  },
  {
    "text": "incredible things ever created and I'm",
    "start": "657899",
    "end": "659579"
  },
  {
    "text": "going to tell you why they're actually",
    "start": "659579",
    "end": "660600"
  },
  {
    "text": "better than JavaScript uh than",
    "start": "660600",
    "end": "663899"
  },
  {
    "text": "JavaScript await uh async await and it",
    "start": "663899",
    "end": "666899"
  },
  {
    "text": "comes down to function coloring right so",
    "start": "666899",
    "end": "669000"
  },
  {
    "text": "if you're not if you're not aware of",
    "start": "669000",
    "end": "670560"
  },
  {
    "text": "function coloring effectively if you",
    "start": "670560",
    "end": "672420"
  },
  {
    "text": "have one function that's async and one",
    "start": "672420",
    "end": "674160"
  },
  {
    "text": "function that's sync you have to call",
    "start": "674160",
    "end": "676019"
  },
  {
    "text": "each function differently they have to",
    "start": "676019",
    "end": "677940"
  },
  {
    "text": "exist differently in different functions",
    "start": "677940",
    "end": "680100"
  },
  {
    "text": "and if you have a function that's async",
    "start": "680100",
    "end": "682680"
  },
  {
    "text": "the calling function that wants to use",
    "start": "682680",
    "end": "684480"
  },
  {
    "text": "it nicely has to become async itself",
    "start": "684480",
    "end": "686760"
  },
  {
    "text": "it's called The Leaky abstraction right",
    "start": "686760",
    "end": "688500"
  },
  {
    "text": "one makes everybody else have it and",
    "start": "688500",
    "end": "690779"
  },
  {
    "text": "then it spreads All the Way backwards",
    "start": "690779",
    "end": "692220"
  },
  {
    "text": "right it's the same thing with like the",
    "start": "692220",
    "end": "693600"
  },
  {
    "text": "result type in rust or um the uh the",
    "start": "693600",
    "end": "697200"
  },
  {
    "text": "async and rust right it kind of colors",
    "start": "697200",
    "end": "699240"
  },
  {
    "text": "it the types and async color in Rust",
    "start": "699240",
    "end": "701640"
  },
  {
    "text": "where you just keep on passing backwards",
    "start": "701640",
    "end": "703260"
  },
  {
    "text": "and so when it comes to when it comes to",
    "start": "703260",
    "end": "706380"
  },
  {
    "text": "doing this I actually do want to read",
    "start": "706380",
    "end": "707459"
  },
  {
    "text": "what you're trying to say here uh Ryan",
    "start": "707459",
    "end": "709140"
  },
  {
    "text": "but what what go does that's so",
    "start": "709140",
    "end": "711060"
  },
  {
    "text": "incredible is that it literally doesn't",
    "start": "711060",
    "end": "713220"
  },
  {
    "text": "have function coloring you don't know if",
    "start": "713220",
    "end": "716160"
  },
  {
    "text": "the function you're using is going to be",
    "start": "716160",
    "end": "718560"
  },
  {
    "text": "async or sync and that's incredible you",
    "start": "718560",
    "end": "721260"
  },
  {
    "text": "may get a channel out and a channel you",
    "start": "721260",
    "end": "723300"
  },
  {
    "text": "sit there and you synchronously wait for",
    "start": "723300",
    "end": "725279"
  },
  {
    "text": "the next results like that gives you the",
    "start": "725279",
    "end": "727680"
  },
  {
    "text": "choice to do something with and that's",
    "start": "727680",
    "end": "729779"
  },
  {
    "text": "really incredible because it's a",
    "start": "729779",
    "end": "731279"
  },
  {
    "text": "non-leaky abstraction it's the only",
    "start": "731279",
    "end": "733440"
  },
  {
    "text": "language I know about it but I think",
    "start": "733440",
    "end": "734820"
  },
  {
    "text": "Elixir also has this I'm sure Ryan will",
    "start": "734820",
    "end": "736560"
  },
  {
    "text": "correct me on this one but or erlang uh",
    "start": "736560",
    "end": "738779"
  },
  {
    "text": "there's there's other languages with you",
    "start": "738779",
    "end": "741660"
  },
  {
    "text": "know these these uh these non-colored",
    "start": "741660",
    "end": "743579"
  },
  {
    "text": "functions and so I I just to me that's",
    "start": "743579",
    "end": "745500"
  },
  {
    "text": "just super incredible",
    "start": "745500",
    "end": "747240"
  },
  {
    "text": "in my opinion that's bad I don't think",
    "start": "747240",
    "end": "748620"
  },
  {
    "text": "it's bad because you get a channel if",
    "start": "748620",
    "end": "750420"
  },
  {
    "text": "it's async if you need an asynchronous",
    "start": "750420",
    "end": "752940"
  },
  {
    "text": "value and so you synchronously listen",
    "start": "752940",
    "end": "754860"
  },
  {
    "text": "for your asynchronous values and if you",
    "start": "754860",
    "end": "756540"
  },
  {
    "text": "need that on a different thread you put",
    "start": "756540",
    "end": "758220"
  },
  {
    "text": "that on a different thread it literally",
    "start": "758220",
    "end": "759480"
  },
  {
    "text": "gives you the fullest control with none",
    "start": "759480",
    "end": "761940"
  },
  {
    "text": "of the Annoying parts of colored",
    "start": "761940",
    "end": "763380"
  },
  {
    "text": "functions it's genuinely one of the best",
    "start": "763380",
    "end": "765600"
  },
  {
    "text": "things I've ever seen as far as a",
    "start": "765600",
    "end": "767760"
  },
  {
    "text": "concurrency model goes and I gen I",
    "start": "767760",
    "end": "769560"
  },
  {
    "text": "genuinely love it I think it's truly the",
    "start": "769560",
    "end": "771600"
  },
  {
    "text": "best way to do it change my mind change",
    "start": "771600",
    "end": "774540"
  },
  {
    "text": "my mind the name's the cancel again",
    "start": "774540",
    "end": "778160"
  }
]