[
  {
    "text": "nice okay we're in we're so in we're so",
    "start": "120",
    "end": "2360"
  },
  {
    "text": "in let's go we're so in dear functional",
    "start": "2360",
    "end": "6160"
  },
  {
    "text": "Bros at least what how many of you type",
    "start": "6160",
    "end": "8719"
  },
  {
    "text": "one in the chat if you're a functional",
    "start": "8719",
    "end": "9840"
  },
  {
    "text": "bro do you identify as a functional bro",
    "start": "9840",
    "end": "12440"
  },
  {
    "text": "right now type one in the chat go go one",
    "start": "12440",
    "end": "15160"
  },
  {
    "text": "in the chats one in the chats one in the",
    "start": "15160",
    "end": "16720"
  },
  {
    "text": "chats we got some ones we got we",
    "start": "16720",
    "end": "18800"
  },
  {
    "text": "definitely got some ones in here in fact",
    "start": "18800",
    "end": "20920"
  },
  {
    "text": "YouTube YouTube I'm Gonna Let You Go",
    "start": "20920",
    "end": "22640"
  },
  {
    "text": "type one in the chat YouTube You're",
    "start": "22640",
    "end": "23880"
  },
  {
    "text": "Going to be a part of this video I'm",
    "start": "23880",
    "end": "24960"
  },
  {
    "text": "going to let you be a part of this video",
    "start": "24960",
    "end": "26560"
  },
  {
    "text": "just this one time okay I want to see it",
    "start": "26560",
    "end": "29560"
  },
  {
    "text": "man see YouTube here here's a little",
    "start": "29560",
    "end": "32078"
  },
  {
    "text": "deal people here's a little deal okay",
    "start": "32079",
    "end": "33879"
  },
  {
    "text": "I'm going to tell you what YouTube is",
    "start": "33879",
    "end": "35239"
  },
  {
    "text": "always like why don't you guys let us be",
    "start": "35239",
    "end": "36719"
  },
  {
    "text": "on the chat more often let me tell you",
    "start": "36719",
    "end": "39320"
  },
  {
    "text": "something do you see this right here 770",
    "start": "39320",
    "end": "42120"
  },
  {
    "text": "concurrent viewers 148 likes you wonder",
    "start": "42120",
    "end": "45399"
  },
  {
    "text": "why you're not going to be on the big",
    "start": "45399",
    "end": "46840"
  },
  {
    "text": "screen now you know okay now you know I",
    "start": "46840",
    "end": "51000"
  },
  {
    "text": "see you I see you I hear you yeah and I",
    "start": "51000",
    "end": "54039"
  },
  {
    "text": "love you oh functional programming is",
    "start": "54039",
    "end": "56840"
  },
  {
    "text": "awesome but functional programmers are",
    "start": "56840",
    "end": "59079"
  },
  {
    "text": "bad marketers",
    "start": "59079",
    "end": "61920"
  },
  {
    "text": "oh that is so good dude you just dude",
    "start": "71159",
    "end": "74119"
  },
  {
    "text": "people are in shambles right now that is",
    "start": "74119",
    "end": "76000"
  },
  {
    "text": "so good I mean it's so true though the",
    "start": "76000",
    "end": "78759"
  },
  {
    "text": "most annoying ones are just like it's",
    "start": "78759",
    "end": "81759"
  },
  {
    "text": "called like dude just know you know for",
    "start": "81759",
    "end": "84119"
  },
  {
    "text": "a fact that your programming language",
    "start": "84119",
    "end": "85799"
  },
  {
    "text": "looks funny and it's hard for people to",
    "start": "85799",
    "end": "87520"
  },
  {
    "text": "understand right away you just see the",
    "start": "87520",
    "end": "89360"
  },
  {
    "text": "thing you only say that because you know",
    "start": "89360",
    "end": "91720"
  },
  {
    "text": "here's the thing is that you only say",
    "start": "91720",
    "end": "93360"
  },
  {
    "text": "that because you just haven't done it",
    "start": "93360",
    "end": "94799"
  },
  {
    "text": "it's just like okay yeah I haven't done",
    "start": "94799",
    "end": "98600"
  },
  {
    "text": "[Music]",
    "start": "101380",
    "end": "104469"
  },
  {
    "text": "functions to be a thing and like I know",
    "start": "120039",
    "end": "121640"
  },
  {
    "text": "you can construct it but goodness",
    "start": "121640",
    "end": "125119"
  },
  {
    "text": "gracious please the debug ability of",
    "start": "125119",
    "end": "127439"
  },
  {
    "text": "those things are so effing annoying okay",
    "start": "127439",
    "end": "130319"
  },
  {
    "text": "because they really lie on some spectrum",
    "start": "130319",
    "end": "132720"
  },
  {
    "text": "between the math of category Theory",
    "start": "132720",
    "end": "134640"
  },
  {
    "text": "Lambda calculus and their specific",
    "start": "134640",
    "end": "136959"
  },
  {
    "text": "mapping to different language",
    "start": "136959",
    "end": "138920"
  },
  {
    "text": "implementations but still I do",
    "start": "138920",
    "end": "141920"
  },
  {
    "text": "understand the beauty of it the concept",
    "start": "141920",
    "end": "144040"
  },
  {
    "text": "of a function is so pure you have this",
    "start": "144040",
    "end": "147200"
  },
  {
    "text": "elegant thing that takes an input and",
    "start": "147200",
    "end": "149000"
  },
  {
    "text": "gives you an output",
    "start": "149000",
    "end": "149820"
  },
  {
    "text": "[Music]",
    "start": "149820",
    "end": "153110"
  },
  {
    "text": "and no matter what the same input always",
    "start": "153400",
    "end": "155680"
  },
  {
    "text": "gives you the same",
    "start": "155680",
    "end": "158439"
  },
  {
    "text": "output the key thing that ensures that",
    "start": "159040",
    "end": "161400"
  },
  {
    "text": "it gives you the same answer always for",
    "start": "161400",
    "end": "163680"
  },
  {
    "text": "Infinity is that there's no side effects",
    "start": "163680",
    "end": "166200"
  },
  {
    "text": "there's no",
    "start": "166200",
    "end": "167650"
  },
  {
    "text": "[Music]",
    "start": "167650",
    "end": "170959"
  },
  {
    "text": "State no thing inside of the function",
    "start": "172280",
    "end": "174840"
  },
  {
    "text": "that isn't directly derived by the",
    "start": "174840",
    "end": "178760"
  },
  {
    "text": "input so",
    "start": "178760",
    "end": "181280"
  },
  {
    "text": "beautiful once you introduce State the",
    "start": "181280",
    "end": "183760"
  },
  {
    "text": "outcome of the function can vary based",
    "start": "183760",
    "end": "185599"
  },
  {
    "text": "upon that",
    "start": "185599",
    "end": "186550"
  },
  {
    "text": "[Music]",
    "start": "186550",
    "end": "195639"
  },
  {
    "text": "state I understand why people love pure",
    "start": "199480",
    "end": "202519"
  },
  {
    "text": "functions right this is it pick pick",
    "start": "202519",
    "end": "204560"
  },
  {
    "text": "claps pick is clap and pick is in for",
    "start": "204560",
    "end": "206239"
  },
  {
    "text": "this pick's like yes yes you tell them",
    "start": "206239",
    "end": "208040"
  },
  {
    "text": "the glories you tell them you tell them",
    "start": "208040",
    "end": "210200"
  },
  {
    "text": "about",
    "start": "210200",
    "end": "211540"
  },
  {
    "text": "[Music]",
    "start": "211540",
    "end": "213920"
  },
  {
    "text": "categories honestly most programming",
    "start": "213920",
    "end": "216040"
  },
  {
    "text": "paradigms are really just different",
    "start": "216040",
    "end": "217480"
  },
  {
    "text": "takes on how you manage State yeah it's",
    "start": "217480",
    "end": "220200"
  },
  {
    "text": "all about state so let's talk about what",
    "start": "220200",
    "end": "222599"
  },
  {
    "text": "functional programming is why it kind of",
    "start": "222599",
    "end": "224560"
  },
  {
    "text": "sucks but why adding a little bit your",
    "start": "224560",
    "end": "226360"
  },
  {
    "text": "code is awesome I like that intro I like",
    "start": "226360",
    "end": "228640"
  },
  {
    "text": "that intro it's a good",
    "start": "228640",
    "end": "231250"
  },
  {
    "text": "[Music]",
    "start": "231250",
    "end": "234439"
  },
  {
    "text": "one functional programming takes one",
    "start": "234599",
    "end": "237040"
  },
  {
    "text": "extreme side of the state opinion it's",
    "start": "237040",
    "end": "239239"
  },
  {
    "text": "about writing programs based upon One",
    "start": "239239",
    "end": "240879"
  },
  {
    "text": "Core concept there shall be no State you",
    "start": "240879",
    "end": "244120"
  },
  {
    "text": "have inputs which are trans pick is that",
    "start": "244120",
    "end": "245840"
  },
  {
    "text": "true there shall be no State there shall",
    "start": "245840",
    "end": "248920"
  },
  {
    "text": "be no State isn't that like isn't scan",
    "start": "248920",
    "end": "253280"
  },
  {
    "text": "isn't scan inherently I forget what it's",
    "start": "253280",
    "end": "255760"
  },
  {
    "text": "called fold left isn't fold left",
    "start": "255760",
    "end": "257280"
  },
  {
    "text": "inherently naughty I think scan is in",
    "start": "257280",
    "end": "259400"
  },
  {
    "text": "rxjs I can't remember but it just you",
    "start": "259400",
    "end": "261799"
  },
  {
    "text": "get the previous you get the previous",
    "start": "261799",
    "end": "263639"
  },
  {
    "text": "you get your input is based on the",
    "start": "263639",
    "end": "265040"
  },
  {
    "text": "previous one as well formed into outputs",
    "start": "265040",
    "end": "267800"
  },
  {
    "text": "in order to get stuff done you compose",
    "start": "267800",
    "end": "269720"
  },
  {
    "text": "and connect functions to other functions",
    "start": "269720",
    "end": "271479"
  },
  {
    "text": "hooking up their inputs and outputs",
    "start": "271479",
    "end": "272880"
  },
  {
    "text": "together into one big long chain that",
    "start": "272880",
    "end": "274639"
  },
  {
    "text": "achieves the goal of the program but you",
    "start": "274639",
    "end": "277280"
  },
  {
    "text": "don't oh damn he passed a function in",
    "start": "277280",
    "end": "279240"
  },
  {
    "text": "out of the function that function just",
    "start": "279240",
    "end": "281000"
  },
  {
    "text": "had a function that function had a baby",
    "start": "281000",
    "end": "283759"
  },
  {
    "text": "always not fun to debug have objects or",
    "start": "283759",
    "end": "286400"
  },
  {
    "text": "structures in memory that you mutate to",
    "start": "286400",
    "end": "288039"
  },
  {
    "text": "track what's going on in this absolute",
    "start": "288039",
    "end": "290680"
  },
  {
    "text": "pure world where you want to write",
    "start": "290680",
    "end": "292080"
  },
  {
    "text": "functions with no State this also means",
    "start": "292080",
    "end": "293919"
  },
  {
    "text": "that you're not allowed to mutate",
    "start": "293919",
    "end": "295039"
  },
  {
    "text": "variables so this means if you were to",
    "start": "295039",
    "end": "296600"
  },
  {
    "text": "set a value you cannot change it again",
    "start": "296600",
    "end": "299160"
  },
  {
    "text": "this means conventional iteration Loops",
    "start": "299160",
    "end": "300639"
  },
  {
    "text": "like for and while are impossible if you",
    "start": "300639",
    "end": "303120"
  },
  {
    "text": "think about a for Loop or while loop it",
    "start": "303120",
    "end": "304840"
  },
  {
    "text": "requires you to mutate some State at",
    "start": "304840",
    "end": "306759"
  },
  {
    "text": "least some variable that's tracking how",
    "start": "306759",
    "end": "308160"
  },
  {
    "text": "many times you've",
    "start": "308160",
    "end": "309400"
  },
  {
    "text": "iterated so how do you do a loop in a",
    "start": "309400",
    "end": "311600"
  },
  {
    "text": "pure functional way the answer with",
    "start": "311600",
    "end": "313919"
  },
  {
    "text": "functional programming is usually well",
    "start": "313919",
    "end": "316360"
  },
  {
    "text": "more functions when all you have is a",
    "start": "316360",
    "end": "318120"
  },
  {
    "text": "hammer this is the part that we want to",
    "start": "318120",
    "end": "319800"
  },
  {
    "text": "repeat over and over again so we'll just",
    "start": "319800",
    "end": "321639"
  },
  {
    "text": "pull that part out to a function so now",
    "start": "321639",
    "end": "323720"
  },
  {
    "text": "we need to replicate the three parts of",
    "start": "323720",
    "end": "325120"
  },
  {
    "text": "the for Loop the key thing that the for",
    "start": "325120",
    "end": "327080"
  },
  {
    "text": "Loop does is increment the index",
    "start": "327080",
    "end": "328479"
  },
  {
    "text": "variable so that the body gets rerun",
    "start": "328479",
    "end": "330240"
  },
  {
    "text": "with each index so we need an equivalent",
    "start": "330240",
    "end": "332479"
  },
  {
    "text": "of incrementing index and rerunning our",
    "start": "332479",
    "end": "334360"
  },
  {
    "text": "body inside of process receipt since we",
    "start": "334360",
    "end": "336759"
  },
  {
    "text": "can't mutate index you can imagine us",
    "start": "336759",
    "end": "338560"
  },
  {
    "text": "creating a new variable next index which",
    "start": "338560",
    "end": "340840"
  },
  {
    "text": "contains the next index we want to",
    "start": "340840",
    "end": "342840"
  },
  {
    "text": "process but now we want to repeat the",
    "start": "342840",
    "end": "344639"
  },
  {
    "text": "section again so we'll need to call",
    "start": "344639",
    "end": "346360"
  },
  {
    "text": "Process receipt again so now if you were",
    "start": "346360",
    "end": "348880"
  },
  {
    "text": "to call Process receipt let's say with",
    "start": "348880",
    "end": "350360"
  },
  {
    "text": "an index of two it's recursion it would",
    "start": "350360",
    "end": "353039"
  },
  {
    "text": "print the mergent from index 2 then",
    "start": "353039",
    "end": "355199"
  },
  {
    "text": "recall process receipt with index 3 then",
    "start": "355199",
    "end": "357720"
  },
  {
    "text": "four Etc recur called it I knew I was a",
    "start": "357720",
    "end": "360560"
  },
  {
    "text": "genius I knew as was a genius but he",
    "start": "360560",
    "end": "361840"
  },
  {
    "text": "forgot his base case his base case the",
    "start": "361840",
    "end": "364720"
  },
  {
    "text": "base case where the hell is the base",
    "start": "364720",
    "end": "366000"
  },
  {
    "text": "case but as it is now it'll keep calling",
    "start": "366000",
    "end": "368280"
  },
  {
    "text": "the process receipt forever until it",
    "start": "368280",
    "end": "369680"
  },
  {
    "text": "goes beyond the size of the receip array",
    "start": "369680",
    "end": "371599"
  },
  {
    "text": "causing an air to be thrown yeah and",
    "start": "371599",
    "end": "374000"
  },
  {
    "text": "this is where the second part of the for",
    "start": "374000",
    "end": "375280"
  },
  {
    "text": "Loop comes into play the condition yes",
    "start": "375280",
    "end": "377800"
  },
  {
    "text": "we only want to execute the body if the",
    "start": "377800",
    "end": "379440"
  },
  {
    "text": "condition is met otherwise we do nothing",
    "start": "379440",
    "end": "381560"
  },
  {
    "text": "and move on so we'll move that condition",
    "start": "381560",
    "end": "383599"
  },
  {
    "text": "down into our function I hate how this",
    "start": "383599",
    "end": "385160"
  },
  {
    "text": "base case was done I'm not going to lie",
    "start": "385160",
    "end": "386599"
  },
  {
    "text": "to you I hate how this base case was",
    "start": "386599",
    "end": "388080"
  },
  {
    "text": "done because it's the inverse of the B",
    "start": "388080",
    "end": "389680"
  },
  {
    "text": "case but I understand he's doing it for",
    "start": "389680",
    "end": "391120"
  },
  {
    "text": "the for Loop okay I understand it's like",
    "start": "391120",
    "end": "392960"
  },
  {
    "text": "it's for the for Loop but I hate how",
    "start": "392960",
    "end": "394280"
  },
  {
    "text": "it's done okay I just want I just want",
    "start": "394280",
    "end": "395599"
  },
  {
    "text": "to throw that out there where we only do",
    "start": "395599",
    "end": "397639"
  },
  {
    "text": "anything if our index is still in range",
    "start": "397639",
    "end": "399840"
  },
  {
    "text": "you can see when we run the program it",
    "start": "399840",
    "end": "401120"
  },
  {
    "text": "works like before it increases the index",
    "start": "401120",
    "end": "403000"
  },
  {
    "text": "beyond the size of the array and we",
    "start": "403000",
    "end": "404599"
  },
  {
    "text": "still call our",
    "start": "404599",
    "end": "405759"
  },
  {
    "text": "function but in this case it fails our",
    "start": "405759",
    "end": "408039"
  },
  {
    "text": "condition and we do nothing Yep this",
    "start": "408039",
    "end": "410000"
  },
  {
    "text": "breaks the recursive Loop and all our",
    "start": "410000",
    "end": "411479"
  },
  {
    "text": "functions return recursion is just a",
    "start": "411479",
    "end": "413720"
  },
  {
    "text": "fancier form of iteration and finally we",
    "start": "413720",
    "end": "416080"
  },
  {
    "text": "have our last part of the for loop it's",
    "start": "416080",
    "end": "417479"
  },
  {
    "text": "a fair take recursion is just a fancier",
    "start": "417479",
    "end": "419120"
  },
  {
    "text": "form of of iteration Fair which is where",
    "start": "419120",
    "end": "421080"
  },
  {
    "text": "we set our starting point this just",
    "start": "421080",
    "end": "422560"
  },
  {
    "text": "represents our first call into our",
    "start": "422560",
    "end": "424000"
  },
  {
    "text": "recursive Loop so now we've completely",
    "start": "424000",
    "end": "426120"
  },
  {
    "text": "converted our Loop to be done in the",
    "start": "426120",
    "end": "427440"
  },
  {
    "text": "more functional way we can also remove",
    "start": "427440",
    "end": "429240"
  },
  {
    "text": "any unneeded variables to make our code",
    "start": "429240",
    "end": "430759"
  },
  {
    "text": "more concise if we want it okay this is",
    "start": "430759",
    "end": "433479"
  },
  {
    "text": "pretty simple and just logs each item in",
    "start": "433479",
    "end": "435160"
  },
  {
    "text": "the loop is this where we're about to",
    "start": "435160",
    "end": "436199"
  },
  {
    "text": "get into higher order functions here is",
    "start": "436199",
    "end": "437800"
  },
  {
    "text": "this where we're about to take this bad",
    "start": "437800",
    "end": "439479"
  },
  {
    "text": "boy and create a 4 each are we creating",
    "start": "439479",
    "end": "441400"
  },
  {
    "text": "a 4 each is this pre-at have I preat",
    "start": "441400",
    "end": "443720"
  },
  {
    "text": "this with life experience but what if we",
    "start": "443720",
    "end": "445400"
  },
  {
    "text": "wanted to do something useful like",
    "start": "445400",
    "end": "446599"
  },
  {
    "text": "finding all the receipts that belong to",
    "start": "446599",
    "end": "447960"
  },
  {
    "text": "a particular user and",
    "start": "447960",
    "end": "450000"
  },
  {
    "text": "theyed damn well we can take the user ID",
    "start": "450000",
    "end": "452639"
  },
  {
    "text": "as a third parameter and then check if",
    "start": "452639",
    "end": "454400"
  },
  {
    "text": "the user matches this now onlys the",
    "start": "454400",
    "end": "456919"
  },
  {
    "text": "receipt of the merchant if the user ID",
    "start": "456919",
    "end": "458879"
  },
  {
    "text": "matches but instead we want this",
    "start": "458879",
    "end": "460720"
  },
  {
    "text": "function to return the list of matching",
    "start": "460720",
    "end": "462039"
  },
  {
    "text": "receipts so that it can be displayed on",
    "start": "462039",
    "end": "464000"
  },
  {
    "text": "fil we return the results of the",
    "start": "464000",
    "end": "466000"
  },
  {
    "text": "matching at each recursive call we want",
    "start": "466000",
    "end": "468360"
  },
  {
    "text": "to make an array with the current",
    "start": "468360",
    "end": "469680"
  },
  {
    "text": "receipt at the front and the results",
    "start": "469680",
    "end": "471440"
  },
  {
    "text": "from the deeper calls attached to the",
    "start": "471440",
    "end": "472720"
  },
  {
    "text": "end this way we can get back everything",
    "start": "472720",
    "end": "474680"
  },
  {
    "text": "in order but we only want to append the",
    "start": "474680",
    "end": "476240"
  },
  {
    "text": "current item if it has the right user ID",
    "start": "476240",
    "end": "478919"
  },
  {
    "text": "otherwise is we just want to pass",
    "start": "478919",
    "end": "480159"
  },
  {
    "text": "through the previous result so in order",
    "start": "480159",
    "end": "481520"
  },
  {
    "text": "to do this we'll actually get the",
    "start": "481520",
    "end": "482919"
  },
  {
    "text": "results of the deeper calls first and",
    "start": "482919",
    "end": "484840"
  },
  {
    "text": "then if the user ID matches we'll return",
    "start": "484840",
    "end": "486879"
  },
  {
    "text": "the current results all right here we go",
    "start": "486879",
    "end": "488520"
  },
  {
    "text": "we got this we got this so in order to",
    "start": "488520",
    "end": "490520"
  },
  {
    "text": "do this we'll actually get the results",
    "start": "490520",
    "end": "492000"
  },
  {
    "text": "of the deeper calls first and then if",
    "start": "492000",
    "end": "493960"
  },
  {
    "text": "the user ID matches we'll return the",
    "start": "493960",
    "end": "495879"
  },
  {
    "text": "current results appended to the later",
    "start": "495879",
    "end": "497360"
  },
  {
    "text": "results this is right where we froze",
    "start": "497360",
    "end": "499360"
  },
  {
    "text": "let's go let's go okay we're back in",
    "start": "499360",
    "end": "501240"
  },
  {
    "text": "we're so back in we're so back just",
    "start": "501240",
    "end": "503400"
  },
  {
    "text": "because my computer breaks just because",
    "start": "503400",
    "end": "505039"
  },
  {
    "text": "every now I don't know what happened but",
    "start": "505039",
    "end": "506560"
  },
  {
    "text": "this has happened twice now otherwise",
    "start": "506560",
    "end": "507960"
  },
  {
    "text": "just forward on the later results is and",
    "start": "507960",
    "end": "510520"
  },
  {
    "text": "lastly if we process the entire list",
    "start": "510520",
    "end": "512479"
  },
  {
    "text": "we'll just return empty results since",
    "start": "512479",
    "end": "513959"
  },
  {
    "text": "there's no more results to be had so now",
    "start": "513959",
    "end": "516200"
  },
  {
    "text": "this function just returns all the",
    "start": "516200",
    "end": "517719"
  },
  {
    "text": "receipts for a given user ID and we'll",
    "start": "517719",
    "end": "519880"
  },
  {
    "text": "give it a better name thing is you can",
    "start": "519880",
    "end": "522240"
  },
  {
    "text": "imagine this pattern happening over and",
    "start": "522240",
    "end": "523640"
  },
  {
    "text": "over again whenever you wanted to find",
    "start": "523640",
    "end": "525240"
  },
  {
    "text": "stuff in an array yep the only",
    "start": "525240",
    "end": "526880"
  },
  {
    "text": "difference between these functions is",
    "start": "526880",
    "end": "528040"
  },
  {
    "text": "the condition in the if statement yeah",
    "start": "528040",
    "end": "530320"
  },
  {
    "text": "we could replace all three functions",
    "start": "530320",
    "end": "532080"
  },
  {
    "text": "your first problems you're using",
    "start": "532080",
    "end": "533120"
  },
  {
    "text": "JavaScript okay just throwing that out",
    "start": "533120",
    "end": "534600"
  },
  {
    "text": "there with just one if we instead passed",
    "start": "534600",
    "end": "536360"
  },
  {
    "text": "in a function that returned whether or",
    "start": "536360",
    "end": "537720"
  },
  {
    "text": "not an item should be included let's",
    "start": "537720",
    "end": "539880"
  },
  {
    "text": "pull out the condition and move it to",
    "start": "539880",
    "end": "541200"
  },
  {
    "text": "its own function and instead of taking",
    "start": "541200",
    "end": "543560"
  },
  {
    "text": "the user ID as a parameter we'll pass in",
    "start": "543560",
    "end": "545440"
  },
  {
    "text": "that function instead we can call it",
    "start": "545440",
    "end": "546839"
  },
  {
    "text": "condition or if you want to be a classy",
    "start": "546839",
    "end": "548399"
  },
  {
    "text": "fellow you can call it predicate then we",
    "start": "548399",
    "end": "550680"
  },
  {
    "text": "just call that function where the",
    "start": "550680",
    "end": "552000"
  },
  {
    "text": "condition used to be and that function",
    "start": "552000",
    "end": "553640"
  },
  {
    "text": "tells us whether or not to include the",
    "start": "553640",
    "end": "555000"
  },
  {
    "text": "item then we can pass our condition the",
    "start": "555000",
    "end": "557120"
  },
  {
    "text": "user ID equals function into our filter",
    "start": "557120",
    "end": "560200"
  },
  {
    "text": "and if look at this",
    "start": "560200",
    "end": "563920"
  },
  {
    "text": "receipt receipt user",
    "start": "563920",
    "end": "567519"
  },
  {
    "text": "idid I see a bug",
    "start": "567519",
    "end": "570000"
  },
  {
    "text": "I I currently see a bug okay I see a bug",
    "start": "570000",
    "end": "574200"
  },
  {
    "text": "of course we can now rename our function",
    "start": "574200",
    "end": "575680"
  },
  {
    "text": "to be a generic",
    "start": "575680",
    "end": "578399"
  },
  {
    "text": "filter now we can run our beautiful",
    "start": "578399",
    "end": "580360"
  },
  {
    "text": "program with our filter and user ID",
    "start": "580360",
    "end": "581959"
  },
  {
    "text": "equals function and wait we have a",
    "start": "581959",
    "end": "584160"
  },
  {
    "text": "problem our user ID equals function",
    "start": "584160",
    "end": "586320"
  },
  {
    "text": "takes two parameters",
    "start": "586320",
    "end": "588680"
  },
  {
    "text": "okay code review success okay at least",
    "start": "588680",
    "end": "592440"
  },
  {
    "text": "I'm paying attention Okay pre-at we're",
    "start": "592440",
    "end": "594440"
  },
  {
    "text": "paying attention we're paying attention",
    "start": "594440",
    "end": "596480"
  },
  {
    "text": "here people pre-at preat user ID to",
    "start": "596480",
    "end": "598800"
  },
  {
    "text": "check again",
    "start": "598800",
    "end": "599800"
  },
  {
    "text": "but our only checks against the receipt",
    "start": "599800",
    "end": "601760"
  },
  {
    "text": "itself oh oh my goodness we're we're",
    "start": "601760",
    "end": "604160"
  },
  {
    "text": "we're about to get higher ordered aren't",
    "start": "604160",
    "end": "605480"
  },
  {
    "text": "we we're about to get ourselves higher",
    "start": "605480",
    "end": "607079"
  },
  {
    "text": "ordered functions returning functions I",
    "start": "607079",
    "end": "609399"
  },
  {
    "text": "cannot wait we don't know the user ID to",
    "start": "609399",
    "end": "611240"
  },
  {
    "text": "check against y we could try passing in",
    "start": "611240",
    "end": "613480"
  },
  {
    "text": "another value that we could relay into",
    "start": "613480",
    "end": "615000"
  },
  {
    "text": "the function but what if we need more",
    "start": "615000",
    "end": "616240"
  },
  {
    "text": "than one like in the case we needed to",
    "start": "616240",
    "end": "617839"
  },
  {
    "text": "check if the total was between a range",
    "start": "617839",
    "end": "619560"
  },
  {
    "text": "if only there was a way to so instead",
    "start": "619560",
    "end": "621240"
  },
  {
    "text": "we're going to get a bit fancy here",
    "start": "621240",
    "end": "622920"
  },
  {
    "text": "instead of having our user ID equals",
    "start": "622920",
    "end": "624519"
  },
  {
    "text": "function take both a receipt and a user",
    "start": "624519",
    "end": "626279"
  },
  {
    "text": "ID we're going to have it take only the",
    "start": "626279",
    "end": "628320"
  },
  {
    "text": "user ID that want to compare against and",
    "start": "628320",
    "end": "630560"
  },
  {
    "text": "it will construct and return a new",
    "start": "630560",
    "end": "631959"
  },
  {
    "text": "function that takes a receipt and let's",
    "start": "631959",
    "end": "635160"
  },
  {
    "text": "go gosh I just [ __ ] genius okay I saw",
    "start": "635160",
    "end": "639920"
  },
  {
    "text": "it coming like a mile away this is great",
    "start": "639920",
    "end": "641920"
  },
  {
    "text": "this is great times right here clearly",
    "start": "641920",
    "end": "643959"
  },
  {
    "text": "clearly definitely not pre-at did not",
    "start": "643959",
    "end": "646120"
  },
  {
    "text": "pre-at this one okay did not I did not",
    "start": "646120",
    "end": "648800"
  },
  {
    "text": "pre-at this one it's just we're just",
    "start": "648800",
    "end": "650440"
  },
  {
    "text": "here okay we're just here we're ready",
    "start": "650440",
    "end": "652160"
  },
  {
    "text": "we're ready okay by the way there's",
    "start": "652160",
    "end": "653639"
  },
  {
    "text": "somebody in here that's saying why is",
    "start": "653639",
    "end": "655240"
  },
  {
    "text": "bro Yapp and just get to the point this",
    "start": "655240",
    "end": "657200"
  },
  {
    "text": "is the point yo dog this is the point",
    "start": "657200",
    "end": "660720"
  },
  {
    "text": "yeah I'm a mod trust me it's pre-at guy",
    "start": "660720",
    "end": "663040"
  },
  {
    "text": "doesn't even know the Oracle legit okay",
    "start": "663040",
    "end": "664800"
  },
  {
    "text": "that is rude don't call me Oracle turns",
    "start": "664800",
    "end": "667639"
  },
  {
    "text": "whether it's from the user ID we then",
    "start": "667639",
    "end": "669839"
  },
  {
    "text": "pass in that new function that's been",
    "start": "669839",
    "end": "671519"
  },
  {
    "text": "created into our filter this is a little",
    "start": "671519",
    "end": "673480"
  },
  {
    "text": "weird but what's happening is that the",
    "start": "673480",
    "end": "675079"
  },
  {
    "text": "user ID is like a secret extra parameter",
    "start": "675079",
    "end": "677480"
  },
  {
    "text": "which is bound to the function yeah and",
    "start": "677480",
    "end": "679639"
  },
  {
    "text": "this function remembers that value and",
    "start": "679639",
    "end": "681320"
  },
  {
    "text": "can use it the name for this pattern is",
    "start": "681320",
    "end": "683360"
  },
  {
    "text": "called currying instead of handling the",
    "start": "683360",
    "end": "685600"
  },
  {
    "text": "entire operation at once it returns a",
    "start": "685600",
    "end": "687760"
  },
  {
    "text": "function that handles the next part of",
    "start": "687760",
    "end": "689079"
  },
  {
    "text": "the operation the later part has the",
    "start": "689079",
    "end": "691440"
  },
  {
    "text": "previous state bound to it that new on",
    "start": "691440",
    "end": "693880"
  },
  {
    "text": "the-fly created function is this called",
    "start": "693880",
    "end": "695600"
  },
  {
    "text": "curring isn't this a higher ordering I",
    "start": "695600",
    "end": "697560"
  },
  {
    "text": "got I'm getting so I'm getting so used",
    "start": "697560",
    "end": "699399"
  },
  {
    "text": "to the the old o camels that I'm having",
    "start": "699399",
    "end": "702120"
  },
  {
    "text": "a hard time visualizing this are you",
    "start": "702120",
    "end": "703880"
  },
  {
    "text": "sure this is curring I don't believe you",
    "start": "703880",
    "end": "705519"
  },
  {
    "text": "guys pick give us the details is this",
    "start": "705519",
    "end": "707160"
  },
  {
    "text": "curring yeah that's curring is it I",
    "start": "707160",
    "end": "708600"
  },
  {
    "text": "thought curring was actually having them",
    "start": "708600",
    "end": "710160"
  },
  {
    "text": "as arguments into the function I thought",
    "start": "710160",
    "end": "712680"
  },
  {
    "text": "that was binding right because because",
    "start": "712680",
    "end": "714560"
  },
  {
    "text": "in the old in the old o camo world if",
    "start": "714560",
    "end": "716399"
  },
  {
    "text": "you have a function that takes in two",
    "start": "716399",
    "end": "717839"
  },
  {
    "text": "parameters and you call it with one",
    "start": "717839",
    "end": "719040"
  },
  {
    "text": "parameter you get back that function",
    "start": "719040",
    "end": "720480"
  },
  {
    "text": "that has the parameter preall onto it",
    "start": "720480",
    "end": "722519"
  },
  {
    "text": "but the function still gets two",
    "start": "722519",
    "end": "723680"
  },
  {
    "text": "parameters yeah curring equals partial",
    "start": "723680",
    "end": "725279"
  },
  {
    "text": "application exactly this ain't partial",
    "start": "725279",
    "end": "727279"
  },
  {
    "text": "application there's no partially",
    "start": "727279",
    "end": "728680"
  },
  {
    "text": "applying here I don't think this is",
    "start": "728680",
    "end": "729920"
  },
  {
    "text": "technically curring I think you have to",
    "start": "729920",
    "end": "731120"
  },
  {
    "text": "use bind right like if if you're doing",
    "start": "731120",
    "end": "732720"
  },
  {
    "text": "the if you're doing the old uh the old",
    "start": "732720",
    "end": "735760"
  },
  {
    "text": "the old javascripts right JS and you had",
    "start": "735760",
    "end": "739399"
  },
  {
    "text": "a function right a function of Fu that",
    "start": "739399",
    "end": "741880"
  },
  {
    "text": "took an A and B and you wanted to you",
    "start": "741880",
    "end": "744160"
  },
  {
    "text": "wanted to like Curry that son of a that",
    "start": "744160",
    "end": "746120"
  },
  {
    "text": "son of a [ __ ] you'd go food. bind what",
    "start": "746120",
    "end": "748519"
  },
  {
    "text": "is it all one and there we go bar now",
    "start": "748519",
    "end": "751760"
  },
  {
    "text": "has been partially applied right so now",
    "start": "751760",
    "end": "754760"
  },
  {
    "text": "I just go bar you know seven and we get",
    "start": "754760",
    "end": "758480"
  },
  {
    "text": "the answer what is",
    "start": "758480",
    "end": "760240"
  },
  {
    "text": "bind I'm sorry dog if you don't know",
    "start": "760240",
    "end": "762680"
  },
  {
    "text": "what he kind of just implemented binding",
    "start": "762680",
    "end": "764240"
  },
  {
    "text": "in this video I don't know I don't",
    "start": "764240",
    "end": "767279"
  },
  {
    "text": "that's the same thing I don't know if",
    "start": "767279",
    "end": "768560"
  },
  {
    "text": "it's the same thing I'm having a hard",
    "start": "768560",
    "end": "770040"
  },
  {
    "text": "time believing you it's the same thing",
    "start": "770040",
    "end": "771600"
  },
  {
    "text": "cuz one's using a closure to pass",
    "start": "771600",
    "end": "773120"
  },
  {
    "text": "objects the other one's not using a",
    "start": "773120",
    "end": "774480"
  },
  {
    "text": "closure people still use bind of course",
    "start": "774480",
    "end": "775959"
  },
  {
    "text": "they still use bind man invents language",
    "start": "775959",
    "end": "777480"
  },
  {
    "text": "to create more language I just want I",
    "start": "777480",
    "end": "779160"
  },
  {
    "text": "just want to hear this thing okay words",
    "start": "779160",
    "end": "781279"
  },
  {
    "text": "words words words words I know I don't I",
    "start": "781279",
    "end": "783360"
  },
  {
    "text": "don't believe it I'm not believing",
    "start": "783360",
    "end": "784920"
  },
  {
    "text": "things is what gets called when filter",
    "start": "784920",
    "end": "786720"
  },
  {
    "text": "needs to check a condition can I get",
    "start": "786720",
    "end": "789360"
  },
  {
    "text": "banned you can Warren you can get banned",
    "start": "789360",
    "end": "790760"
  },
  {
    "text": "you can come straight over to my house",
    "start": "790760",
    "end": "791839"
  },
  {
    "text": "and I'll ban you so good",
    "start": "791839",
    "end": "794240"
  },
  {
    "text": "baby this is what's a bit funny to me",
    "start": "794240",
    "end": "796839"
  },
  {
    "text": "because functional programming is",
    "start": "796839",
    "end": "797880"
  },
  {
    "text": "supposed to be so different than object",
    "start": "797880",
    "end": "799360"
  },
  {
    "text": "oriented programming but by binding data",
    "start": "799360",
    "end": "802240"
  },
  {
    "text": "like this we're creating an instance of",
    "start": "802240",
    "end": "803800"
  },
  {
    "text": "a function with some bound data to work",
    "start": "803800",
    "end": "805839"
  },
  {
    "text": "with yep instead of creating an instance",
    "start": "805839",
    "end": "807760"
  },
  {
    "text": "of a data object with it down",
    "start": "807760",
    "end": "811079"
  },
  {
    "text": "functions currying like this is a bit of",
    "start": "811079",
    "end": "813519"
  },
  {
    "text": "an older way of doing this you can",
    "start": "813519",
    "end": "815480"
  },
  {
    "text": "automate this in JavaScript and many",
    "start": "815480",
    "end": "816639"
  },
  {
    "text": "other languages by using",
    "start": "816639",
    "end": "819519"
  },
  {
    "text": "bind I'm not saying it's pre-at won't go",
    "start": "821880",
    "end": "824800"
  },
  {
    "text": "into bind fully here because really the",
    "start": "824800",
    "end": "826639"
  },
  {
    "text": "way we want to do this today is to use",
    "start": "826639",
    "end": "828040"
  },
  {
    "text": "Lambda functions this is where we'll",
    "start": "828040",
    "end": "829880"
  },
  {
    "text": "move our equals check right into an",
    "start": "829880",
    "end": "831560"
  },
  {
    "text": "inline",
    "start": "831560",
    "end": "832759"
  },
  {
    "text": "function now this is finally where",
    "start": "832759",
    "end": "834720"
  },
  {
    "text": "things start to get kind of nice I'm",
    "start": "834720",
    "end": "836800"
  },
  {
    "text": "filtering by user now or I can filter by",
    "start": "836800",
    "end": "838920"
  },
  {
    "text": "Merchant just like this or do a more",
    "start": "838920",
    "end": "840680"
  },
  {
    "text": "complex check on the total here we might",
    "start": "840680",
    "end": "842839"
  },
  {
    "text": "want to get just the filtered Merchant",
    "start": "842839",
    "end": "844399"
  },
  {
    "text": "names instead of the entire object if we",
    "start": "844399",
    "end": "846800"
  },
  {
    "text": "devise a new function based upon our",
    "start": "846800",
    "end": "848480"
  },
  {
    "text": "Loop that doesn't filter based upon a",
    "start": "848480",
    "end": "850519"
  },
  {
    "text": "condition but instead takes a function",
    "start": "850519",
    "end": "852240"
  },
  {
    "text": "that gives you the desired results for",
    "start": "852240",
    "end": "853800"
  },
  {
    "text": "each element we insert that new",
    "start": "853800",
    "end": "855600"
  },
  {
    "text": "transformed element into the array",
    "start": "855600",
    "end": "857160"
  },
  {
    "text": "instead we'll call this function map",
    "start": "857160",
    "end": "859839"
  },
  {
    "text": "because it Maps each element to a",
    "start": "859839",
    "end": "861399"
  },
  {
    "text": "different thing damn then we can chain",
    "start": "861399",
    "end": "864079"
  },
  {
    "text": "these together so first I by the way I'm",
    "start": "864079",
    "end": "866880"
  },
  {
    "text": "so offended by the use of concat",
    "start": "866880",
    "end": "869360"
  },
  {
    "text": "I just want you to know that this is",
    "start": "869360",
    "end": "871839"
  },
  {
    "text": "just like offensive to me in in",
    "start": "871839",
    "end": "873800"
  },
  {
    "text": "JavaScript okay this is all right I'm a",
    "start": "873800",
    "end": "876320"
  },
  {
    "text": "functional",
    "start": "876320",
    "end": "877399"
  },
  {
    "text": "bro this is just I feel so upset about",
    "start": "877399",
    "end": "880399"
  },
  {
    "text": "this we get our list of receipts find",
    "start": "880399",
    "end": "883000"
  },
  {
    "text": "the ones with a total between 14 and 20",
    "start": "883000",
    "end": "885360"
  },
  {
    "text": "and then just say for each give us the",
    "start": "885360",
    "end": "886920"
  },
  {
    "text": "merchant",
    "start": "886920",
    "end": "889240"
  },
  {
    "text": "name so now we get an array of the",
    "start": "889399",
    "end": "891560"
  },
  {
    "text": "merchant strings instead of the full",
    "start": "891560",
    "end": "892880"
  },
  {
    "text": "receipt objects at the end iterators and",
    "start": "892880",
    "end": "895399"
  },
  {
    "text": "if we only wanted to take the first I",
    "start": "895399",
    "end": "896880"
  },
  {
    "text": "just want monads and iterators that's",
    "start": "896880",
    "end": "898480"
  },
  {
    "text": "all I want I never mind we're not going",
    "start": "898480",
    "end": "901320"
  },
  {
    "text": "items we could write a function called",
    "start": "901320",
    "end": "902680"
  },
  {
    "text": "take take would give us up to the count",
    "start": "902680",
    "end": "905160"
  },
  {
    "text": "elements from the array love take we can",
    "start": "905160",
    "end": "906920"
  },
  {
    "text": "chain that on as well so now you can see",
    "start": "906920",
    "end": "909279"
  },
  {
    "text": "that we basically created a data",
    "start": "909279",
    "end": "910560"
  },
  {
    "text": "pipeline here where we have an input",
    "start": "910560",
    "end": "912279"
  },
  {
    "text": "State we filter it down to what we want",
    "start": "912279",
    "end": "914839"
  },
  {
    "text": "map the types of the values to what we",
    "start": "914839",
    "end": "916320"
  },
  {
    "text": "want and then take the first five to",
    "start": "916320",
    "end": "918160"
  },
  {
    "text": "display I I love take by the way our",
    "start": "918160",
    "end": "919880"
  },
  {
    "text": "code clearly declares what we want to",
    "start": "919880",
    "end": "921240"
  },
  {
    "text": "happen and all the complexity how this",
    "start": "921240",
    "end": "922920"
  },
  {
    "text": "is done is behind the scenes in our",
    "start": "922920",
    "end": "924320"
  },
  {
    "text": "fundamental functions so we've just",
    "start": "924320",
    "end": "926600"
  },
  {
    "text": "derived these functional style",
    "start": "926600",
    "end": "927920"
  },
  {
    "text": "fundamentals are",
    "start": "927920",
    "end": "929600"
  },
  {
    "text": "in fact I love take so much ay fun fun",
    "start": "929600",
    "end": "931639"
  },
  {
    "text": "little thing fun fun little thing here",
    "start": "931639",
    "end": "933399"
  },
  {
    "text": "people look at that little little take",
    "start": "933399",
    "end": "935120"
  },
  {
    "text": "right here take little Skip and take",
    "start": "935120",
    "end": "937319"
  },
  {
    "text": "here huh little Skip and take we're",
    "start": "937319",
    "end": "939240"
  },
  {
    "text": "doing a little we're doing ourselves a",
    "start": "939240",
    "end": "940720"
  },
  {
    "text": "little bit of a skip little bit of a",
    "start": "940720",
    "end": "942399"
  },
  {
    "text": "take okay if you can't handle it you",
    "start": "942399",
    "end": "944440"
  },
  {
    "text": "can't handle it okay but these are also",
    "start": "944440",
    "end": "946480"
  },
  {
    "text": "built directly into JavaScript so let's",
    "start": "946480",
    "end": "948920"
  },
  {
    "text": "take a look at how to use those to",
    "start": "948920",
    "end": "950120"
  },
  {
    "text": "create data",
    "start": "950120",
    "end": "951319"
  },
  {
    "text": "pipelines but first what's our goal with",
    "start": "951319",
    "end": "953639"
  },
  {
    "text": "these receipts we have this amazing new",
    "start": "953639",
    "end": "955920"
  },
  {
    "text": "startup idea that solves a uniquely",
    "start": "955920",
    "end": "957600"
  },
  {
    "text": "American problem in an American Way in",
    "start": "957600",
    "end": "960560"
  },
  {
    "text": "the US I love it I yes come on let's go",
    "start": "960560",
    "end": "963079"
  },
  {
    "text": "let's go American problem American way",
    "start": "963079",
    "end": "964720"
  },
  {
    "text": "what are we solving when you're in a",
    "start": "964720",
    "end": "966199"
  },
  {
    "text": "restaurant you need to fill a tip",
    "start": "966199",
    "end": "967639"
  },
  {
    "text": "manually by writing the tip in total",
    "start": "967639",
    "end": "970319"
  },
  {
    "text": "this is effectively a mandatory fee on",
    "start": "970319",
    "end": "972160"
  },
  {
    "text": "your meal enforced by social shaming",
    "start": "972160",
    "end": "974399"
  },
  {
    "text": "your card is initially charged for the",
    "start": "974399",
    "end": "977839"
  },
  {
    "text": "total dude some dude D people I recently",
    "start": "977839",
    "end": "981800"
  },
  {
    "text": "went to a keios that was self- automated",
    "start": "981800",
    "end": "984319"
  },
  {
    "text": "and it asked for a tip that shit's wild",
    "start": "984319",
    "end": "987600"
  },
  {
    "text": "okay you're telling me that I'm supposed",
    "start": "987600",
    "end": "989759"
  },
  {
    "text": "to tip myself and then give you that tip",
    "start": "989759",
    "end": "993120"
  },
  {
    "text": "I'm starting I dude it's criminal I'm",
    "start": "993120",
    "end": "994920"
  },
  {
    "text": "starting to get upset I tip just because",
    "start": "994920",
    "end": "996839"
  },
  {
    "text": "I I I the only reason why I tip is",
    "start": "996839",
    "end": "999440"
  },
  {
    "text": "because I worked a lot of shitty",
    "start": "999440",
    "end": "1001079"
  },
  {
    "text": "restaurant jobs I don't feel good about",
    "start": "1001079",
    "end": "1003600"
  },
  {
    "text": "it without the tip but several days",
    "start": "1003600",
    "end": "1005279"
  },
  {
    "text": "later the updated total with your hand",
    "start": "1005279",
    "end": "1006680"
  },
  {
    "text": "scribbl tip will show up on your credit",
    "start": "1006680",
    "end": "1008319"
  },
  {
    "text": "card the problem here is that no one is",
    "start": "1008319",
    "end": "1010519"
  },
  {
    "text": "really going to check whether their tip",
    "start": "1010519",
    "end": "1011720"
  },
  {
    "text": "was accurately reported when their",
    "start": "1011720",
    "end": "1013120"
  },
  {
    "text": "transaction was settled so in theory a",
    "start": "1013120",
    "end": "1015480"
  },
  {
    "text": "company or disgruntled service staff",
    "start": "1015480",
    "end": "1017040"
  },
  {
    "text": "could simply enter a bigger number",
    "start": "1017040",
    "end": "1018199"
  },
  {
    "text": "taking more of your money are you",
    "start": "1018199",
    "end": "1019720"
  },
  {
    "text": "worried about losing your hard-earned",
    "start": "1019720",
    "end": "1021079"
  },
  {
    "text": "money to restaurant credit card fraud",
    "start": "1021079",
    "end": "1023240"
  },
  {
    "text": "black Sky Financial finds these small",
    "start": "1023240",
    "end": "1024798"
  },
  {
    "text": "family-owned mom and pop restaurants and",
    "start": "1024799",
    "end": "1026520"
  },
  {
    "text": "sues them for everything they have the",
    "start": "1026520",
    "end": "1029400"
  },
  {
    "text": "proceeds from the destruction of",
    "start": "1029400",
    "end": "1030558"
  },
  {
    "text": "people's dreams are then equitably",
    "start": "1030559",
    "end": "1031839"
  },
  {
    "text": "distributed to you the user of the app",
    "start": "1031839",
    "end": "1033678"
  },
  {
    "text": "based upon how many receipts you've",
    "start": "1033679",
    "end": "1035400"
  },
  {
    "text": "submitted sign up today and start",
    "start": "1035400",
    "end": "1037199"
  },
  {
    "text": "submitting receipts and know that you're",
    "start": "1037199",
    "end": "1038319"
  },
  {
    "text": "helping prevent credit card fraud in",
    "start": "1038319",
    "end": "1039798"
  },
  {
    "text": "your community one lawsuit at a",
    "start": "1039799",
    "end": "1042319"
  },
  {
    "text": "time so yeah I I this is so good this is",
    "start": "1042319",
    "end": "1046480"
  },
  {
    "text": "the greatest this is honestly the",
    "start": "1046480",
    "end": "1047918"
  },
  {
    "text": "greatest thing I've ever seen in my",
    "start": "1047919",
    "end": "1049200"
  },
  {
    "text": "entire lifetime the real American way",
    "start": "1049200",
    "end": "1051160"
  },
  {
    "text": "you think Egyptians sued people a lot",
    "start": "1051160",
    "end": "1052720"
  },
  {
    "text": "they Su dead people by the way just so",
    "start": "1052720",
    "end": "1054320"
  },
  {
    "text": "you know they sue dead people but to",
    "start": "1054320",
    "end": "1057640"
  },
  {
    "text": "pull this off we basically need to grab",
    "start": "1057640",
    "end": "1058919"
  },
  {
    "text": "each receipt look up the transaction in",
    "start": "1058919",
    "end": "1060600"
  },
  {
    "text": "the users's connected credit card",
    "start": "1060600",
    "end": "1061640"
  },
  {
    "text": "accounts filter out the transactions",
    "start": "1061640",
    "end": "1063240"
  },
  {
    "text": "that haven't yet settled or whose totals",
    "start": "1063240",
    "end": "1065120"
  },
  {
    "text": "match correctly sort them by the most",
    "start": "1065120",
    "end": "1067000"
  },
  {
    "text": "egregious discrepancy and then take the",
    "start": "1067000",
    "end": "1068880"
  },
  {
    "text": "top 10 then we display them in a",
    "start": "1068880",
    "end": "1070919"
  },
  {
    "text": "dashboard so our army of lawyers can get",
    "start": "1070919",
    "end": "1072320"
  },
  {
    "text": "to work fighting the good fight let's go",
    "start": "1072320",
    "end": "1075200"
  },
  {
    "text": "here's that code written in a procedural",
    "start": "1075200",
    "end": "1076760"
  },
  {
    "text": "way let's change this to the fun fun",
    "start": "1076760",
    "end": "1078640"
  },
  {
    "text": "approach in modern JavaScript all the",
    "start": "1078640",
    "end": "1080600"
  },
  {
    "text": "methods that we need are already built",
    "start": "1080600",
    "end": "1082159"
  },
  {
    "text": "in and are also methods directly on",
    "start": "1082159",
    "end": "1084240"
  },
  {
    "text": "arrays for each reite we eventually want",
    "start": "1084240",
    "end": "1086799"
  },
  {
    "text": "this result object that contains all of",
    "start": "1086799",
    "end": "1088440"
  },
  {
    "text": "the relevant information I love that",
    "start": "1088440",
    "end": "1090480"
  },
  {
    "text": "sort sorts the array in place but also",
    "start": "1090480",
    "end": "1094720"
  },
  {
    "text": "Returns the array so that you",
    "start": "1094720",
    "end": "1097559"
  },
  {
    "text": "think that you got a different",
    "start": "1097559",
    "end": "1100120"
  },
  {
    "text": "one I love that and now we have two",
    "start": "1100120",
    "end": "1102880"
  },
  {
    "text": "sorted which gives you a new one and we",
    "start": "1102880",
    "end": "1105720"
  },
  {
    "text": "have sorted the receipt the final",
    "start": "1105720",
    "end": "1107520"
  },
  {
    "text": "transaction and the cency so we can just",
    "start": "1107520",
    "end": "1110159"
  },
  {
    "text": "map our receipts to that but nothing's",
    "start": "1110159",
    "end": "1111960"
  },
  {
    "text": "better than reverse I can tell you that",
    "start": "1111960",
    "end": "1113520"
  },
  {
    "text": "I've seen so many people get owned by",
    "start": "1113520",
    "end": "1115200"
  },
  {
    "text": "reverse even Theo recently got owned by",
    "start": "1115200",
    "end": "1117320"
  },
  {
    "text": "reverse oh man he was talking about a",
    "start": "1117320",
    "end": "1118520"
  },
  {
    "text": "bug he had in ping like gosh weeks ago",
    "start": "1118520",
    "end": "1121520"
  },
  {
    "text": "or uh years ago two years ago a year and",
    "start": "1121520",
    "end": "1123200"
  },
  {
    "text": "a half ago got owned by reverse reverse",
    "start": "1123200",
    "end": "1125440"
  },
  {
    "text": "is such a good one I love the fact I",
    "start": "1125440",
    "end": "1127919"
  },
  {
    "text": "love the fact that they exist and they",
    "start": "1127919",
    "end": "1129640"
  },
  {
    "text": "just shoot people in the foot all the",
    "start": "1129640",
    "end": "1130919"
  },
  {
    "text": "time they're so good they're so good we",
    "start": "1130919",
    "end": "1132440"
  },
  {
    "text": "can use the built-in map meth to",
    "start": "1132440",
    "end": "1134919"
  },
  {
    "text": "transform the array into our list of",
    "start": "1134919",
    "end": "1136400"
  },
  {
    "text": "objects the map method you're not a real",
    "start": "1136400",
    "end": "1138960"
  },
  {
    "text": "front-end developer if you haven't spent",
    "start": "1138960",
    "end": "1140440"
  },
  {
    "text": "30 minutes getting owned by reverse okay",
    "start": "1140440",
    "end": "1142679"
  },
  {
    "text": "makes a Lambda function for Transforming",
    "start": "1142679",
    "end": "1144320"
  },
  {
    "text": "Our receipts into those result",
    "start": "1144320",
    "end": "1147720"
  },
  {
    "text": "objects this condition is skipping over",
    "start": "1148120",
    "end": "1150120"
  },
  {
    "text": "the transactions that aren't yet settled",
    "start": "1150120",
    "end": "1151880"
  },
  {
    "text": "or don't have a difference between the",
    "start": "1151880",
    "end": "1153039"
  },
  {
    "text": "receipt total and the final total on the",
    "start": "1153039",
    "end": "1154520"
  },
  {
    "text": "transaction so we can just change this",
    "start": "1154520",
    "end": "1156280"
  },
  {
    "text": "to a filter okay we'll need to inverse",
    "start": "1156280",
    "end": "1158559"
  },
  {
    "text": "the condition since it now describes",
    "start": "1158559",
    "end": "1160000"
  },
  {
    "text": "what to keep instead of what to",
    "start": "1160000",
    "end": "1162200"
  },
  {
    "text": "ignore this code basically just ensur",
    "start": "1162200",
    "end": "1165039"
  },
  {
    "text": "but this also this also assumes that the",
    "start": "1165039",
    "end": "1167960"
  },
  {
    "text": "that you have the original Total entered",
    "start": "1167960",
    "end": "1169880"
  },
  {
    "text": "in how do you know you have the original",
    "start": "1169880",
    "end": "1171559"
  },
  {
    "text": "Total entered in okay I don't even know",
    "start": "1171559",
    "end": "1173320"
  },
  {
    "text": "if black Sky Financial could be real",
    "start": "1173320",
    "end": "1174960"
  },
  {
    "text": "what are they using Chad chippity to",
    "start": "1174960",
    "end": "1176360"
  },
  {
    "text": "analyze the receipts to ensure that the",
    "start": "1176360",
    "end": "1177840"
  },
  {
    "text": "receipts are correctly done is the mod",
    "start": "1177840",
    "end": "1179799"
  },
  {
    "text": "Pop Shop even using chat chippity I",
    "start": "1179799",
    "end": "1182000"
  },
  {
    "text": "don't even know okay there's questions",
    "start": "1182000",
    "end": "1184919"
  },
  {
    "text": "about this startup all of a sudden I",
    "start": "1184919",
    "end": "1187000"
  },
  {
    "text": "don't know if I believe it anymore is",
    "start": "1187000",
    "end": "1189200"
  },
  {
    "text": "that the list is sorted from biggest to",
    "start": "1189200",
    "end": "1190720"
  },
  {
    "text": "smallest so we can replace this with a",
    "start": "1190720",
    "end": "1192400"
  },
  {
    "text": "sort on our filter list the sort takes a",
    "start": "1192400",
    "end": "1194600"
  },
  {
    "text": "function that tells the sort function",
    "start": "1194600",
    "end": "1195880"
  },
  {
    "text": "how two elements should be ordered it",
    "start": "1195880",
    "end": "1197840"
  },
  {
    "text": "gives you two items and ask for a",
    "start": "1197840",
    "end": "1199120"
  },
  {
    "text": "negative number if a is less than b and",
    "start": "1199120",
    "end": "1201159"
  },
  {
    "text": "a positive if a is greater than you",
    "start": "1201159",
    "end": "1203080"
  },
  {
    "text": "typically get by subtracting B from a",
    "start": "1203080",
    "end": "1205559"
  },
  {
    "text": "but since we want things ordered big",
    "start": "1205559",
    "end": "1207000"
  },
  {
    "text": "first we'll flip this and subtract a",
    "start": "1207000",
    "end": "1208840"
  },
  {
    "text": "from B pre-at pre-at that's pre-at right",
    "start": "1208840",
    "end": "1212400"
  },
  {
    "text": "there people that right there is pre-at",
    "start": "1212400",
    "end": "1214400"
  },
  {
    "text": "did you see that I called the future I",
    "start": "1214400",
    "end": "1216280"
  },
  {
    "text": "looked into the future and saw it and",
    "start": "1216280",
    "end": "1218039"
  },
  {
    "text": "called it okay mind in the game people",
    "start": "1218039",
    "end": "1220720"
  },
  {
    "text": "you got to get your mind in the game",
    "start": "1220720",
    "end": "1221840"
  },
  {
    "text": "when you're watching these videos okay",
    "start": "1221840",
    "end": "1223120"
  },
  {
    "text": "if you're not pre-at it by watching it",
    "start": "1223120",
    "end": "1225200"
  },
  {
    "text": "live you're not in the game you're not",
    "start": "1225200",
    "end": "1226720"
  },
  {
    "text": "in the game and then we only want Count",
    "start": "1226720",
    "end": "1229000"
  },
  {
    "text": "number of elements which we can get with",
    "start": "1229000",
    "end": "1230360"
  },
  {
    "text": "the slice method which we were already",
    "start": "1230360",
    "end": "1232000"
  },
  {
    "text": "doing here so we'll just add that into",
    "start": "1232000",
    "end": "1234080"
  },
  {
    "text": "our pipeline nice and voila after we",
    "start": "1234080",
    "end": "1237200"
  },
  {
    "text": "make the formatting a bit more pretty",
    "start": "1237200",
    "end": "1238880"
  },
  {
    "text": "all of that is written only in 12",
    "start": "1238880",
    "end": "1240640"
  },
  {
    "text": "nothing is better than than debugging",
    "start": "1240640",
    "end": "1242480"
  },
  {
    "text": "these type of don't you love debugging",
    "start": "1242480",
    "end": "1244200"
  },
  {
    "text": "these type of statements isn't this just",
    "start": "1244200",
    "end": "1246480"
  },
  {
    "text": "like the funnest thing ever don't you",
    "start": "1246480",
    "end": "1248320"
  },
  {
    "text": "just love it like it's just so much fun",
    "start": "1248320",
    "end": "1251600"
  },
  {
    "text": "you get a go in there and hope you get",
    "start": "1251600",
    "end": "1254159"
  },
  {
    "text": "it right you know it's not that bad uh",
    "start": "1254159",
    "end": "1256840"
  },
  {
    "text": "yes it is bad cuz you have to Ed a coded",
    "start": "1256840",
    "end": "1258360"
  },
  {
    "text": "to bug it properly you have to like",
    "start": "1258360",
    "end": "1259760"
  },
  {
    "text": "break these into multiple statements",
    "start": "1259760",
    "end": "1261320"
  },
  {
    "text": "erase the return create a bunch of const",
    "start": "1261320",
    "end": "1263840"
  },
  {
    "text": "along the way which part is actually",
    "start": "1263840",
    "end": "1265640"
  },
  {
    "text": "failing it's not fun they're not like",
    "start": "1265640",
    "end": "1267880"
  },
  {
    "text": "iterators see iterators iterators are",
    "start": "1267880",
    "end": "1270400"
  },
  {
    "text": "different than this iterators pull out a",
    "start": "1270400",
    "end": "1273320"
  },
  {
    "text": "value all the way through so you can",
    "start": "1273320",
    "end": "1275159"
  },
  {
    "text": "actually see a value go through and it's",
    "start": "1275159",
    "end": "1276919"
  },
  {
    "text": "a little bit easier to break point",
    "start": "1276919",
    "end": "1279120"
  },
  {
    "text": "whereas these aren't iterators they",
    "start": "1279120",
    "end": "1281360"
  },
  {
    "text": "don't pull a value all the way through",
    "start": "1281360",
    "end": "1283400"
  },
  {
    "text": "they pull everything at once so you do",
    "start": "1283400",
    "end": "1285120"
  },
  {
    "text": "all the maps at once then you do all the",
    "start": "1285120",
    "end": "1286679"
  },
  {
    "text": "filters at once and then you do sort and",
    "start": "1286679",
    "end": "1288720"
  },
  {
    "text": "then you do the slice and so it just",
    "start": "1288720",
    "end": "1290480"
  },
  {
    "text": "comes out so effing annoying Lines Just",
    "start": "1290480",
    "end": "1294200"
  },
  {
    "text": "functional programming lets you rewrite",
    "start": "1294200",
    "end": "1295520"
  },
  {
    "text": "things into a beautiful pipeline for",
    "start": "1295520",
    "end": "1296760"
  },
  {
    "text": "your data and honestly most of",
    "start": "1296760",
    "end": "1298640"
  },
  {
    "text": "programming jobs are really just taking",
    "start": "1298640",
    "end": "1300039"
  },
  {
    "text": "data from Source a doing some",
    "start": "1300039",
    "end": "1301559"
  },
  {
    "text": "transformation filtering and sorting and",
    "start": "1301559",
    "end": "1303760"
  },
  {
    "text": "then putting it in place B A lot of the",
    "start": "1303760",
    "end": "1305720"
  },
  {
    "text": "time we're just sophisticated plumbers",
    "start": "1305720",
    "end": "1308000"
  },
  {
    "text": "if you'd like to try out some functional",
    "start": "1308000",
    "end": "1309320"
  },
  {
    "text": "programming like this I put some",
    "start": "1309320",
    "end": "1310720"
  },
  {
    "text": "experiments on my website accessible",
    "start": "1310720",
    "end": "1312120"
  },
  {
    "text": "through my patreon I give you some",
    "start": "1312120",
    "end": "1313679"
  },
  {
    "text": "procedural code and ask you to change it",
    "start": "1313679",
    "end": "1315080"
  },
  {
    "text": "so it doesn't use any for Loops or while",
    "start": "1315080",
    "end": "1316520"
  },
  {
    "text": "Loops if you're curious check them out",
    "start": "1316520",
    "end": "1318279"
  },
  {
    "text": "at codes. oh we even blurred it out de",
    "start": "1318279",
    "end": "1320480"
  },
  {
    "text": "functional Bros sometimes I feel like",
    "start": "1320480",
    "end": "1322600"
  },
  {
    "text": "you focus on the complexity and",
    "start": "1322600",
    "end": "1324000"
  },
  {
    "text": "mathematical Elegance of functional",
    "start": "1324000",
    "end": "1325440"
  },
  {
    "text": "programming instead of explaining why",
    "start": "1325440",
    "end": "1327120"
  },
  {
    "text": "it's awesome and help others see how",
    "start": "1327120",
    "end": "1328600"
  },
  {
    "text": "useful parts of it can be maybe we need",
    "start": "1328600",
    "end": "1330919"
  },
  {
    "text": "a special fpro signal to let others know",
    "start": "1330919",
    "end": "1333240"
  },
  {
    "text": "that you're also a secret fpro then you",
    "start": "1333240",
    "end": "1335679"
  },
  {
    "text": "can talk about fpro things like mons but",
    "start": "1335679",
    "end": "1338520"
  },
  {
    "text": "if you don't get the signal we can play",
    "start": "1338520",
    "end": "1339600"
  },
  {
    "text": "a Gill and talk about how nice it is to",
    "start": "1339600",
    "end": "1341440"
  },
  {
    "text": "delete for",
    "start": "1341440",
    "end": "1342960"
  },
  {
    "text": "Loops peer functional",
    "start": "1342960",
    "end": "1346640"
  },
  {
    "text": "programming",
    "start": "1346960",
    "end": "1349960"
  },
  {
    "text": "give me who's my f boys where's my f",
    "start": "1350640",
    "end": "1352720"
  },
  {
    "text": "boys at I feel like",
    "start": "1352720",
    "end": "1354320"
  },
  {
    "text": "there's they describe us with having",
    "start": "1354320",
    "end": "1356760"
  },
  {
    "text": "hasal brains where's my f boys at you",
    "start": "1356760",
    "end": "1358679"
  },
  {
    "text": "know I'm not going to lie to you f booys",
    "start": "1358679",
    "end": "1360039"
  },
  {
    "text": "has this particular sound that sounds",
    "start": "1360039",
    "end": "1361960"
  },
  {
    "text": "like another type of f boy F boys",
    "start": "1361960",
    "end": "1364480"
  },
  {
    "text": "represent F boys oh man something weird",
    "start": "1364480",
    "end": "1366919"
  },
  {
    "text": "about that one where you cannot mutate",
    "start": "1366919",
    "end": "1368480"
  },
  {
    "text": "any state or have any side effects it's",
    "start": "1368480",
    "end": "1370360"
  },
  {
    "text": "kind of awful yeah the is is it's fake",
    "start": "1370360",
    "end": "1372919"
  },
  {
    "text": "computers fundamentally have state I",
    "start": "1372919",
    "end": "1374600"
  },
  {
    "text": "mean literally the whole Von noyman",
    "start": "1374600",
    "end": "1375960"
  },
  {
    "text": "architecture is where you have one giant",
    "start": "1375960",
    "end": "1377960"
  },
  {
    "text": "state in memory and then little",
    "start": "1377960",
    "end": "1379640"
  },
  {
    "text": "instructions which mutate that state to",
    "start": "1379640",
    "end": "1381000"
  },
  {
    "text": "get stuff done input is",
    "start": "1381000",
    "end": "1382400"
  },
  {
    "text": "non-deterministic and any output is",
    "start": "1382400",
    "end": "1384080"
  },
  {
    "text": "forcing some side effect pure functional",
    "start": "1384080",
    "end": "1386840"
  },
  {
    "text": "programming is still mostly academic but",
    "start": "1386840",
    "end": "1388960"
  },
  {
    "text": "what has been happening is the best",
    "start": "1388960",
    "end": "1390039"
  },
  {
    "text": "parts of functional programming have",
    "start": "1390039",
    "end": "1391279"
  },
  {
    "text": "been extracted and injected into our",
    "start": "1391279",
    "end": "1392760"
  },
  {
    "text": "most popular languages like always",
    "start": "1392760",
    "end": "1395000"
  },
  {
    "text": "balance is key and adopting some of the",
    "start": "1395000",
    "end": "1396720"
  },
  {
    "text": "principles like reducing State have been",
    "start": "1396720",
    "end": "1399720"
  },
  {
    "text": "all my homies hate comprehensions okay",
    "start": "1399720",
    "end": "1404279"
  },
  {
    "text": "all the homies hate comprehensions just",
    "start": "1404279",
    "end": "1406799"
  },
  {
    "text": "saying it just saying it when someone",
    "start": "1406799",
    "end": "1408640"
  },
  {
    "text": "tries to go like two three deep on",
    "start": "1408640",
    "end": "1410279"
  },
  {
    "text": "comprehensions I just want to throat",
    "start": "1410279",
    "end": "1412159"
  },
  {
    "text": "punch them shit's annoying when you have",
    "start": "1412159",
    "end": "1414159"
  },
  {
    "text": "when you when you go double deep on a",
    "start": "1414159",
    "end": "1415720"
  },
  {
    "text": "comprehension okay I just want to I just",
    "start": "1415720",
    "end": "1417720"
  },
  {
    "text": "I just hate it okay I just hate it I",
    "start": "1417720",
    "end": "1419480"
  },
  {
    "text": "want you to know that now te loves",
    "start": "1419480",
    "end": "1421080"
  },
  {
    "text": "comprehension of course te does of",
    "start": "1421080",
    "end": "1422600"
  },
  {
    "text": "course he does",
    "start": "1422600",
    "end": "1424200"
  },
  {
    "text": "te TJ loves every TJ just loves",
    "start": "1424200",
    "end": "1427600"
  },
  {
    "text": "everything okay he's like the most",
    "start": "1427600",
    "end": "1429000"
  },
  {
    "text": "positive and kind person ever and I",
    "start": "1429000",
    "end": "1431000"
  },
  {
    "text": "absolutely hate him for it and extracted",
    "start": "1431000",
    "end": "1432880"
  },
  {
    "text": "and injected into our most popular",
    "start": "1432880",
    "end": "1434559"
  },
  {
    "text": "languages like always balance is key and",
    "start": "1434559",
    "end": "1437000"
  },
  {
    "text": "adopting some of the princip like",
    "start": "1437000",
    "end": "1438279"
  },
  {
    "text": "reducing State and formulating data",
    "start": "1438279",
    "end": "1439960"
  },
  {
    "text": "pipelines in your programs where it",
    "start": "1439960",
    "end": "1441039"
  },
  {
    "text": "makes sense can bring huge benefit but",
    "start": "1441039",
    "end": "1443039"
  },
  {
    "text": "without all the crazy restrictiveness",
    "start": "1443039",
    "end": "1444679"
  },
  {
    "text": "and I'd expect more of these patterns to",
    "start": "1444679",
    "end": "1445960"
  },
  {
    "text": "become more common massively parallel",
    "start": "1445960",
    "end": "1448039"
  },
  {
    "text": "systems don't rely on using one big",
    "start": "1448039",
    "end": "1449799"
  },
  {
    "text": "state of memory the more cores you throw",
    "start": "1449799",
    "end": "1452000"
  },
  {
    "text": "at something the more tracking your",
    "start": "1452000",
    "end": "1453400"
  },
  {
    "text": "state of memory and El Square becomes a",
    "start": "1453400",
    "end": "1455360"
  },
  {
    "text": "bottleneck you know the best part is you",
    "start": "1455360",
    "end": "1457360"
  },
  {
    "text": "have all these functions set up and",
    "start": "1457360",
    "end": "1458559"
  },
  {
    "text": "everything looks really great and at the",
    "start": "1458559",
    "end": "1460120"
  },
  {
    "text": "very bottom there's a hashmap with a",
    "start": "1460120",
    "end": "1461880"
  },
  {
    "text": "mutex on it like we all know we all know",
    "start": "1461880",
    "end": "1463840"
  },
  {
    "text": "what's going to happen Okay you think oh",
    "start": "1463840",
    "end": "1466440"
  },
  {
    "text": "I'm a functional program I'm just so",
    "start": "1466440",
    "end": "1468760"
  },
  {
    "text": "good at functional programming yeah yeah",
    "start": "1468760",
    "end": "1471559"
  },
  {
    "text": "yeah I hear you nice mutex hashmap okay",
    "start": "1471559",
    "end": "1475279"
  },
  {
    "text": "nice nice so who knows maybe pure",
    "start": "1475279",
    "end": "1478399"
  },
  {
    "text": "functional programming will have a new",
    "start": "1478399",
    "end": "1480840"
  },
  {
    "text": "renissance every time I by the way I've",
    "start": "1480840",
    "end": "1484000"
  },
  {
    "text": "been trying to experiment using a uh",
    "start": "1484000",
    "end": "1486600"
  },
  {
    "text": "using a multi-rod single consumer on uh",
    "start": "1486600",
    "end": "1490480"
  },
  {
    "text": "in Rust and piping that into a hashmap",
    "start": "1490480",
    "end": "1494039"
  },
  {
    "text": "instead of the old Arc mutex it's been",
    "start": "1494039",
    "end": "1496679"
  },
  {
    "text": "pretty good it's been pretty Prett good",
    "start": "1496679",
    "end": "1498080"
  },
  {
    "text": "I've been happy about that I've been",
    "start": "1498080",
    "end": "1499480"
  },
  {
    "text": "trying to get really good on on the old",
    "start": "1499480",
    "end": "1501720"
  },
  {
    "text": "on the old like I'm trying to step up my",
    "start": "1501720",
    "end": "1503440"
  },
  {
    "text": "game you know what I mean I've been",
    "start": "1503440",
    "end": "1504720"
  },
  {
    "text": "trying to step up my my rust game I've",
    "start": "1504720",
    "end": "1506480"
  },
  {
    "text": "read through the rust atomics and locks",
    "start": "1506480",
    "end": "1508799"
  },
  {
    "text": "book feeling a little bit more confident",
    "start": "1508799",
    "end": "1510440"
  },
  {
    "text": "trying to just step it up I'm still",
    "start": "1510440",
    "end": "1512399"
  },
  {
    "text": "stuck on Tokyo not going to lie to you",
    "start": "1512399",
    "end": "1513919"
  },
  {
    "text": "guys I'm still stuck on Tokyo I'm still",
    "start": "1513919",
    "end": "1515600"
  },
  {
    "text": "stuck doing multi-threading controlling",
    "start": "1515600",
    "end": "1517279"
  },
  {
    "text": "how many things run at once via like a",
    "start": "1517279",
    "end": "1520080"
  },
  {
    "text": "like a context semaphor that I pass",
    "start": "1520080",
    "end": "1522000"
  },
  {
    "text": "around I really wish I was better but",
    "start": "1522000",
    "end": "1524039"
  },
  {
    "text": "I'm not I'm not better okay I'm not",
    "start": "1524039",
    "end": "1526440"
  },
  {
    "text": "better I wish I was better but I'm not",
    "start": "1526440",
    "end": "1528240"
  },
  {
    "text": "better makes me it makes me sad but I",
    "start": "1528240",
    "end": "1530000"
  },
  {
    "text": "really do like just having a semaphor",
    "start": "1530000",
    "end": "1532360"
  },
  {
    "text": "what's that semaphor well it's for",
    "start": "1532360",
    "end": "1534559"
  },
  {
    "text": "helping me make only eight to 12",
    "start": "1534559",
    "end": "1536399"
  },
  {
    "text": "requests at a time so that I don't get a",
    "start": "1536399",
    "end": "1538880"
  },
  {
    "text": "nice nasty slack message from my",
    "start": "1538880",
    "end": "1541240"
  },
  {
    "text": "coworker asking why do I have a 100",
    "start": "1541240",
    "end": "1544399"
  },
  {
    "text": "[ __ ] queries going at once to their Dev",
    "start": "1544399",
    "end": "1547720"
  },
  {
    "text": "only database that MacBook mini is about",
    "start": "1547720",
    "end": "1550399"
  },
  {
    "text": "to get pounded if I don't use that",
    "start": "1550399",
    "end": "1551960"
  },
  {
    "text": "semaphor okay that MacBook mini about to",
    "start": "1551960",
    "end": "1555000"
  },
  {
    "text": "go to Pound Town the name",
    "start": "1555000",
    "end": "1558760"
  },
  {
    "text": "poundtown MacBook mini that's what they",
    "start": "1558760",
    "end": "1560600"
  },
  {
    "text": "call me okay a jet",
    "start": "1560600",
    "end": "1564080"
  }
]