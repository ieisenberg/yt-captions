[
  {
    "text": "my node.js is a bit Rusty replacing an",
    "start": "0",
    "end": "2760"
  },
  {
    "text": "internal node.js module with a native",
    "start": "2760",
    "end": "4560"
  },
  {
    "text": "rust module made a 25x purse boost let's",
    "start": "4560",
    "end": "8340"
  },
  {
    "text": "understand why September 3rd",
    "start": "8340",
    "end": "11240"
  },
  {
    "text": "2023 and by the way it's only September",
    "start": "11240",
    "end": "13559"
  },
  {
    "text": "6th three days away from the big day you",
    "start": "13559",
    "end": "15599"
  },
  {
    "text": "know what I'm talking about the big day",
    "start": "15599",
    "end": "16560"
  },
  {
    "text": "you know what day I'm talking about this",
    "start": "16560",
    "end": "18060"
  },
  {
    "text": "blog post has been residing in draft",
    "start": "18060",
    "end": "19619"
  },
  {
    "text": "mode for quite a while now I finally",
    "start": "19619",
    "end": "21420"
  },
  {
    "text": "decided to just publish it let's see",
    "start": "21420",
    "end": "23400"
  },
  {
    "text": "let's see as such a few things might be",
    "start": "23400",
    "end": "25380"
  },
  {
    "text": "a bit off but that's life yeah always",
    "start": "25380",
    "end": "28019"
  },
  {
    "text": "just share stop worrying so much about",
    "start": "28019",
    "end": "29820"
  },
  {
    "text": "if it's the perfectest back in 2020 my",
    "start": "29820",
    "end": "32398"
  },
  {
    "text": "team at Wix launched a new internal",
    "start": "32399",
    "end": "36059"
  },
  {
    "text": "product sorry I lost my place called a",
    "start": "36059",
    "end": "38160"
  },
  {
    "text": "CDN stats as the name suggests CDN stats",
    "start": "38160",
    "end": "40860"
  },
  {
    "text": "is a platform that displayed displays",
    "start": "40860",
    "end": "42660"
  },
  {
    "text": "and Aggregates data and statistics",
    "start": "42660",
    "end": "44160"
  },
  {
    "text": "derived from the Wix CDN okay uh that",
    "start": "44160",
    "end": "46920"
  },
  {
    "text": "same year I delivered a presentation",
    "start": "46920",
    "end": "48120"
  },
  {
    "text": "about an experiment I conducted this",
    "start": "48120",
    "end": "49920"
  },
  {
    "text": "experiment which involved rewriting a",
    "start": "49920",
    "end": "51420"
  },
  {
    "text": "single module into a native node.js",
    "start": "51420",
    "end": "53219"
  },
  {
    "text": "add-on using rust resulted in a",
    "start": "53219",
    "end": "55079"
  },
  {
    "text": "staggering 25x performance Improvement",
    "start": "55079",
    "end": "57120"
  },
  {
    "text": "awesome awesome awesome this platform",
    "start": "57120",
    "end": "60480"
  },
  {
    "text": "empowers front-end developers at Wix by",
    "start": "60480",
    "end": "62160"
  },
  {
    "text": "providing real-time data on the usage of",
    "start": "62160",
    "end": "63960"
  },
  {
    "text": "their compiled assets by our customers",
    "start": "63960",
    "end": "65880"
  },
  {
    "text": "including platforms downloads uh per",
    "start": "65880",
    "end": "68159"
  },
  {
    "text": "platform response size transfer side",
    "start": "68159",
    "end": "69900"
  },
  {
    "text": "these metrics allow front-end developers",
    "start": "69900",
    "end": "71580"
  },
  {
    "text": "to identify which bundles need",
    "start": "71580",
    "end": "73020"
  },
  {
    "text": "optimization and the urgency of these",
    "start": "73020",
    "end": "75119"
  },
  {
    "text": "optimizations it helped us Rectify a",
    "start": "75119",
    "end": "77460"
  },
  {
    "text": "critical issue that we might have",
    "start": "77460",
    "end": "78720"
  },
  {
    "text": "otherwise overlooked due to a human",
    "start": "78720",
    "end": "80700"
  },
  {
    "text": "error one of our primary JavaScript",
    "start": "80700",
    "end": "82860"
  },
  {
    "text": "assets ballooned to 33 megabytes that's",
    "start": "82860",
    "end": "87540"
  },
  {
    "text": "so much shitty code like how do you even",
    "start": "87540",
    "end": "90780"
  },
  {
    "text": "get that many code units like minified",
    "start": "90780",
    "end": "93659"
  },
  {
    "text": "JavaScript per character is like one of",
    "start": "93659",
    "end": "96000"
  },
  {
    "text": "the most dense semantic languages ever",
    "start": "96000",
    "end": "98220"
  },
  {
    "text": "how do you even accidentally do that",
    "start": "98220",
    "end": "100020"
  },
  {
    "text": "because it inlined uncompressed a Savage",
    "start": "100020",
    "end": "102659"
  },
  {
    "text": "without oh okay well that I didn't read",
    "start": "102659",
    "end": "104880"
  },
  {
    "text": "the next sentence I didn't read the next",
    "start": "104880",
    "end": "106079"
  },
  {
    "text": "ends this actually makes perfect sense",
    "start": "106079",
    "end": "107520"
  },
  {
    "text": "without externalizing it or even",
    "start": "107520",
    "end": "109439"
  },
  {
    "text": "dynamically importing it okay that's a",
    "start": "109439",
    "end": "111360"
  },
  {
    "text": "big Savage why do you have a 33 megabyte",
    "start": "111360",
    "end": "113579"
  },
  {
    "text": "Savage that that also doesn't make any",
    "start": "113579",
    "end": "115799"
  },
  {
    "text": "sense or maybe 32 megabytes this project",
    "start": "115799",
    "end": "118259"
  },
  {
    "text": "seems fairly straightforward doesn't it",
    "start": "118259",
    "end": "119700"
  },
  {
    "text": "all we're doing is counting and summing",
    "start": "119700",
    "end": "121920"
  },
  {
    "text": "up values toss in some indices in a",
    "start": "121920",
    "end": "123960"
  },
  {
    "text": "database present it with the data table",
    "start": "123960",
    "end": "125460"
  },
  {
    "text": "in Viola but is it really that simple",
    "start": "125460",
    "end": "127140"
  },
  {
    "text": "nothing is that simple even the most",
    "start": "127140",
    "end": "128940"
  },
  {
    "text": "simplest projects aren't simple how does",
    "start": "128940",
    "end": "130979"
  },
  {
    "text": "that work in order to populate the data",
    "start": "130979",
    "end": "132480"
  },
  {
    "text": "table we need to sift through the CDN",
    "start": "132480",
    "end": "134099"
  },
  {
    "text": "logs these are tab separated values oh",
    "start": "134099",
    "end": "136980"
  },
  {
    "text": "nothing like a good tsv if you're not",
    "start": "136980",
    "end": "139379"
  },
  {
    "text": "getting patted down by the tsv what are",
    "start": "139379",
    "end": "141540"
  },
  {
    "text": "you really doing in your life you know",
    "start": "141540",
    "end": "142739"
  },
  {
    "text": "what I mean what are you really doing",
    "start": "142739",
    "end": "143879"
  },
  {
    "text": "let me guess dot split considered",
    "start": "143879",
    "end": "146580"
  },
  {
    "text": "harmful is that the answer because you",
    "start": "146580",
    "end": "148560"
  },
  {
    "text": "know what they're gonna do you already",
    "start": "148560",
    "end": "149520"
  },
  {
    "text": "know for a fact they're gonna like dot",
    "start": "149520",
    "end": "151440"
  },
  {
    "text": "split decompose I mean the amount of",
    "start": "151440",
    "end": "153300"
  },
  {
    "text": "garbage they're going to create is",
    "start": "153300",
    "end": "154620"
  },
  {
    "text": "incredible uh we're talking about 290",
    "start": "154620",
    "end": "157860"
  },
  {
    "text": "000 fi uh files per day which can amount",
    "start": "157860",
    "end": "160500"
  },
  {
    "text": "to 200 gigabytes okay so every day we",
    "start": "160500",
    "end": "163379"
  },
  {
    "text": "download the tsv files from the previous",
    "start": "163379",
    "end": "165180"
  },
  {
    "text": "day parse them into meaningful",
    "start": "165180",
    "end": "166739"
  },
  {
    "text": "information I'm surprised you don't just",
    "start": "166739",
    "end": "168000"
  },
  {
    "text": "stream them out you know seems like a",
    "start": "168000",
    "end": "170340"
  },
  {
    "text": "good data just to just to stream out",
    "start": "170340",
    "end": "171780"
  },
  {
    "text": "those sobs uh just because the",
    "start": "171780",
    "end": "173819"
  },
  {
    "text": "downloading them all at once seems like",
    "start": "173819",
    "end": "175140"
  },
  {
    "text": "that would just be the largest part I'd",
    "start": "175140",
    "end": "177180"
  },
  {
    "text": "be shocked if downloading them took less",
    "start": "177180",
    "end": "179099"
  },
  {
    "text": "time than processing them uh so every",
    "start": "179099",
    "end": "181080"
  },
  {
    "text": "day we allowed the tsv files from the",
    "start": "181080",
    "end": "183060"
  },
  {
    "text": "previous day parsed them into meaningful",
    "start": "183060",
    "end": "184680"
  },
  {
    "text": "information and store this data in our",
    "start": "184680",
    "end": "185940"
  },
  {
    "text": "database we accomplished this by",
    "start": "185940",
    "end": "187080"
  },
  {
    "text": "enqueuing each log file into a job queue",
    "start": "187080",
    "end": "189120"
  },
  {
    "text": "the strategy allows us to paralyze the",
    "start": "189120",
    "end": "191040"
  },
  {
    "text": "process and utilize up to 25 instances",
    "start": "191040",
    "end": "192900"
  },
  {
    "text": "that's an odd like hard number to put in",
    "start": "192900",
    "end": "195480"
  },
  {
    "text": "there to parse out the log files within",
    "start": "195480",
    "end": "198060"
  },
  {
    "text": "approximately three hours each day I",
    "start": "198060",
    "end": "200459"
  },
  {
    "text": "also have another question why not just",
    "start": "200459",
    "end": "201959"
  },
  {
    "text": "have one big ass instance with a lot of",
    "start": "201959",
    "end": "204239"
  },
  {
    "text": "uh with a lot of cores and instead of",
    "start": "204239",
    "end": "206940"
  },
  {
    "text": "having like 25 individual instances why",
    "start": "206940",
    "end": "210300"
  },
  {
    "text": "not just run parallel you know what I",
    "start": "210300",
    "end": "212280"
  },
  {
    "text": "mean we just learned about parallel the",
    "start": "212280",
    "end": "213959"
  },
  {
    "text": "gnu utility what's an ass instance um",
    "start": "213959",
    "end": "217080"
  },
  {
    "text": "pick I'm not sure where you got that",
    "start": "217080",
    "end": "218700"
  },
  {
    "text": "from to tell you the truth I was I was",
    "start": "218700",
    "end": "220379"
  },
  {
    "text": "ready to follow that joke",
    "start": "220379",
    "end": "221940"
  },
  {
    "text": "to the end I was going to take it and",
    "start": "221940",
    "end": "224400"
  },
  {
    "text": "run with it as fast as I can and really",
    "start": "224400",
    "end": "226739"
  },
  {
    "text": "lean into the ass instance but I just",
    "start": "226739",
    "end": "229140"
  },
  {
    "text": "couldn't I couldn't see it I could not",
    "start": "229140",
    "end": "230700"
  },
  {
    "text": "see the joke and now I'm emotionally",
    "start": "230700",
    "end": "232200"
  },
  {
    "text": "scarred then every few hours we generate",
    "start": "232200",
    "end": "234659"
  },
  {
    "text": "an aggregation for uh for the previous",
    "start": "234659",
    "end": "236400"
  },
  {
    "text": "week this process takes around one hour",
    "start": "236400",
    "end": "238260"
  },
  {
    "text": "and is primarily executed in the",
    "start": "238260",
    "end": "239760"
  },
  {
    "text": "database using aggregation",
    "start": "239760",
    "end": "243360"
  },
  {
    "text": "that's me uh shedding a tear for",
    "start": "243360",
    "end": "246420"
  },
  {
    "text": "aggregation aggregation",
    "start": "246420",
    "end": "249420"
  },
  {
    "text": "don't get your things in the wrong order",
    "start": "249420",
    "end": "251519"
  },
  {
    "text": "because we're gonna screw you uh mongodb",
    "start": "251519",
    "end": "254580"
  },
  {
    "text": "query was pretty intense okay let's",
    "start": "254580",
    "end": "256139"
  },
  {
    "text": "let's check it out let's check out",
    "start": "256139",
    "end": "257579"
  },
  {
    "text": "anytime you can tweet out your",
    "start": "257579",
    "end": "259620"
  },
  {
    "text": "query you know for a fact it's going to",
    "start": "259620",
    "end": "261120"
  },
  {
    "text": "be great okay that's this is I mean",
    "start": "261120",
    "end": "263220"
  },
  {
    "text": "that's just",
    "start": "263220",
    "end": "264120"
  },
  {
    "text": "what is what is this Tokyo night you're",
    "start": "264120",
    "end": "266580"
  },
  {
    "text": "just showing me your Tokyo night theme",
    "start": "266580",
    "end": "269040"
  },
  {
    "text": "okay not impressed not impressed uh so",
    "start": "269040",
    "end": "272460"
  },
  {
    "text": "what's the problem parsing gigabytes of",
    "start": "272460",
    "end": "274259"
  },
  {
    "text": "tsv files might seem like a tedious task",
    "start": "274259",
    "end": "276660"
  },
  {
    "text": "sounds like a computer task to me",
    "start": "276660",
    "end": "278280"
  },
  {
    "text": "investing so much time and resources on",
    "start": "278280",
    "end": "280320"
  },
  {
    "text": "it well it's not exactly a joy to be",
    "start": "280320",
    "end": "282120"
  },
  {
    "text": "brutally honest having 25 node.js",
    "start": "282120",
    "end": "283860"
  },
  {
    "text": "instances running for three hours to",
    "start": "283860",
    "end": "285180"
  },
  {
    "text": "parse 200 gigabytes of data seems like",
    "start": "285180",
    "end": "286919"
  },
  {
    "text": "an indication that something isn't quite",
    "start": "286919",
    "end": "288479"
  },
  {
    "text": "right agreed",
    "start": "288479",
    "end": "289919"
  },
  {
    "text": "completely agreed with this because I",
    "start": "289919",
    "end": "291660"
  },
  {
    "text": "I'm still I can't figure out why that's",
    "start": "291660",
    "end": "294240"
  },
  {
    "text": "required like someone said well isn't",
    "start": "294240",
    "end": "297060"
  },
  {
    "text": "something about i o tasks blah blah how",
    "start": "297060",
    "end": "299400"
  },
  {
    "text": "long do you think it takes for your disk",
    "start": "299400",
    "end": "301440"
  },
  {
    "text": "to Shell out 200 gigs how long do you",
    "start": "301440",
    "end": "303780"
  },
  {
    "text": "think it takes for two computers sitting",
    "start": "303780",
    "end": "305820"
  },
  {
    "text": "on the same network to Shell out",
    "start": "305820",
    "end": "308400"
  },
  {
    "text": "over the network create the space and",
    "start": "308400",
    "end": "311160"
  },
  {
    "text": "update you as they come in like it's",
    "start": "311160",
    "end": "312840"
  },
  {
    "text": "gonna take a while but not three hours",
    "start": "312840",
    "end": "315780"
  },
  {
    "text": "I'll tell you that much it's gonna be in",
    "start": "315780",
    "end": "318840"
  },
  {
    "text": "the order of seconds",
    "start": "318840",
    "end": "320639"
  },
  {
    "text": "10 sacks oh this is an arch user Channel",
    "start": "320639",
    "end": "323160"
  },
  {
    "text": "okay we don't we don't talk about sex",
    "start": "323160",
    "end": "325020"
  },
  {
    "text": "around here 6.6",
    "start": "325020",
    "end": "327620"
  },
  {
    "text": "6.9 for 20 seconds right",
    "start": "327620",
    "end": "331020"
  },
  {
    "text": "the solution that eventually worked I I",
    "start": "331020",
    "end": "333120"
  },
  {
    "text": "would just assume in the order of",
    "start": "333120",
    "end": "334320"
  },
  {
    "text": "seconds maybe one minute you know what I",
    "start": "334320",
    "end": "336780"
  },
  {
    "text": "mean like it's gonna be a short amount",
    "start": "336780",
    "end": "338580"
  },
  {
    "text": "of time I would not expect hours like if",
    "start": "338580",
    "end": "341280"
  },
  {
    "text": "you saw hours something's just wrong the",
    "start": "341280",
    "end": "343620"
  },
  {
    "text": "solution that eventually worked uh was",
    "start": "343620",
    "end": "345180"
  },
  {
    "text": "not our first attempt initially we tried",
    "start": "345180",
    "end": "346800"
  },
  {
    "text": "using internal Wix serverless framework",
    "start": "346800",
    "end": "348979"
  },
  {
    "text": "we process all the log files",
    "start": "348979",
    "end": "351120"
  },
  {
    "text": "concurrently and aggregated them used",
    "start": "351120",
    "end": "352500"
  },
  {
    "text": "you and promised at all",
    "start": "352500",
    "end": "355460"
  },
  {
    "text": "isn't that delightful however to our",
    "start": "357620",
    "end": "359880"
  },
  {
    "text": "surprise we soon ran into an out of",
    "start": "359880",
    "end": "361440"
  },
  {
    "text": "memory issue really you're telling me",
    "start": "361440",
    "end": "363840"
  },
  {
    "text": "you didn't see 200 gigs being a problem",
    "start": "363840",
    "end": "366120"
  },
  {
    "text": "even when using uh utilities like P",
    "start": "366120",
    "end": "368820"
  },
  {
    "text": "limits to limit ourselves to just two",
    "start": "368820",
    "end": "370500"
  },
  {
    "text": "jobs in parallel P limit why not just",
    "start": "370500",
    "end": "373199"
  },
  {
    "text": "parallel dog uh so it's back to the",
    "start": "373199",
    "end": "375419"
  },
  {
    "text": "drawing board for us our second approach",
    "start": "375419",
    "end": "376740"
  },
  {
    "text": "was involved uh involved migrating the",
    "start": "376740",
    "end": "378720"
  },
  {
    "text": "same code verbatim to a Wix node.js",
    "start": "378720",
    "end": "380580"
  },
  {
    "text": "platform which runs on Docker containers",
    "start": "380580",
    "end": "382380"
  },
  {
    "text": "in kubernetes cluster we still",
    "start": "382380",
    "end": "384240"
  },
  {
    "text": "encountered out of memory issues leading",
    "start": "384240",
    "end": "386160"
  },
  {
    "text": "us to reduce the number of files",
    "start": "386160",
    "end": "387479"
  },
  {
    "text": "processed in parallel eventually we got",
    "start": "387479",
    "end": "389039"
  },
  {
    "text": "it to work however it was",
    "start": "389039",
    "end": "390360"
  },
  {
    "text": "disappointingly slow processing a single",
    "start": "390360",
    "end": "392880"
  },
  {
    "text": "day's worth of data took more than a day",
    "start": "392880",
    "end": "395220"
  },
  {
    "text": "clearly this was not a scalable solution",
    "start": "395220",
    "end": "398280"
  },
  {
    "text": "reasonable uh so we decided to try the",
    "start": "398280",
    "end": "401340"
  },
  {
    "text": "job Q pattern by scaling our servers to",
    "start": "401340",
    "end": "403860"
  },
  {
    "text": "25 containers it's weird that they just",
    "start": "403860",
    "end": "405600"
  },
  {
    "text": "you know",
    "start": "405600",
    "end": "407220"
  },
  {
    "text": "shouldn't you just put n a configurable",
    "start": "407220",
    "end": "409199"
  },
  {
    "text": "amount of containers we managed to",
    "start": "409199",
    "end": "410940"
  },
  {
    "text": "achieve more reasonable processing time",
    "start": "410940",
    "end": "412500"
  },
  {
    "text": "but we can truly consider running 25",
    "start": "412500",
    "end": "414360"
  },
  {
    "text": "instances to be reasonable not on this",
    "start": "414360",
    "end": "416280"
  },
  {
    "text": "this just seems crazy every part about",
    "start": "416280",
    "end": "417900"
  },
  {
    "text": "this seems crazy I'm glad that he",
    "start": "417900",
    "end": "419340"
  },
  {
    "text": "recognized right away perhaps it's time",
    "start": "419340",
    "end": "421139"
  },
  {
    "text": "to consider that JavaScript may be the",
    "start": "421139",
    "end": "423240"
  },
  {
    "text": "problem you know what you could do a",
    "start": "423240",
    "end": "425160"
  },
  {
    "text": "really simple thing to do is here I made",
    "start": "425160",
    "end": "427560"
  },
  {
    "text": "a I made something last night I made",
    "start": "427560",
    "end": "429479"
  },
  {
    "text": "something last night that I've kind of",
    "start": "429479",
    "end": "430800"
  },
  {
    "text": "been working through that I think is",
    "start": "430800",
    "end": "432000"
  },
  {
    "text": "really good way to look at it this is a",
    "start": "432000",
    "end": "434039"
  },
  {
    "text": "server in which it's very very simple",
    "start": "434039",
    "end": "435780"
  },
  {
    "text": "what is happening",
    "start": "435780",
    "end": "437220"
  },
  {
    "text": "um let's see uh what is it called",
    "start": "437220",
    "end": "439759"
  },
  {
    "text": "shooter shooter okay it's very very",
    "start": "439759",
    "end": "442680"
  },
  {
    "text": "simple I have a cargo task that runs and",
    "start": "442680",
    "end": "445380"
  },
  {
    "text": "I can say how many parallel jobs that's",
    "start": "445380",
    "end": "447120"
  },
  {
    "text": "the Q parameter and how many total Games",
    "start": "447120",
    "end": "448860"
  },
  {
    "text": "should be played uh then I run the",
    "start": "448860",
    "end": "450960"
  },
  {
    "text": "server over here and the server just",
    "start": "450960",
    "end": "452280"
  },
  {
    "text": "logs out some basic data or I can run it",
    "start": "452280",
    "end": "454259"
  },
  {
    "text": "with the inspect flag to see what's",
    "start": "454259",
    "end": "455520"
  },
  {
    "text": "happening when I do that this is what I",
    "start": "455520",
    "end": "458340"
  },
  {
    "text": "get so no matter how much I scale how",
    "start": "458340",
    "end": "460440"
  },
  {
    "text": "many concurrent games being played I",
    "start": "460440",
    "end": "462539"
  },
  {
    "text": "have a whole bunch of idle time on here",
    "start": "462539",
    "end": "464160"
  },
  {
    "text": "and not only do I have a whole bunch of",
    "start": "464160",
    "end": "465840"
  },
  {
    "text": "idle time I also have",
    "start": "465840",
    "end": "467660"
  },
  {
    "text": "huge gigantic uh garbage collection uh",
    "start": "467660",
    "end": "471780"
  },
  {
    "text": "things that happen and so you can kind",
    "start": "471780",
    "end": "474419"
  },
  {
    "text": "of see that you're running up against a",
    "start": "474419",
    "end": "476220"
  },
  {
    "text": "potential issue here and the issue is",
    "start": "476220",
    "end": "479639"
  },
  {
    "text": "not",
    "start": "479639",
    "end": "481560"
  },
  {
    "text": "anything other than JavaScript itself I",
    "start": "481560",
    "end": "484259"
  },
  {
    "text": "know how to get rid of most of these",
    "start": "484259",
    "end": "485580"
  },
  {
    "text": "idle times and guess what guess what the",
    "start": "485580",
    "end": "487860"
  },
  {
    "text": "answer is",
    "start": "487860",
    "end": "490280"
  },
  {
    "text": "don't use a promise",
    "start": "492300",
    "end": "496580"
  },
  {
    "text": "you have to be a little bit more clever",
    "start": "500099",
    "end": "501539"
  },
  {
    "text": "about not using",
    "start": "501539",
    "end": "504419"
  },
  {
    "text": "this isn't that shocking it's shocking",
    "start": "504419",
    "end": "506940"
  },
  {
    "text": "to me at least anyways uh perhaps it's",
    "start": "506940",
    "end": "508860"
  },
  {
    "text": "time to consider that JavaScript may be",
    "start": "508860",
    "end": "510120"
  },
  {
    "text": "the problem there might be certain",
    "start": "510120",
    "end": "511860"
  },
  {
    "text": "issues that JavaScript simply can't",
    "start": "511860",
    "end": "513599"
  },
  {
    "text": "solve efficiently especially when the",
    "start": "513599",
    "end": "515580"
  },
  {
    "text": "work is primarily CPU and memory bound",
    "start": "515580",
    "end": "517800"
  },
  {
    "text": "areas where node.js does not Excel but",
    "start": "517800",
    "end": "520620"
  },
  {
    "text": "why is that so node.js is a garbage",
    "start": "520620",
    "end": "522899"
  },
  {
    "text": "collected VM node.js is a remarkable",
    "start": "522899",
    "end": "524940"
  },
  {
    "text": "piece of technology it Fosters",
    "start": "524940",
    "end": "526320"
  },
  {
    "text": "Innovation and enables countless",
    "start": "526320",
    "end": "527580"
  },
  {
    "text": "Developers",
    "start": "527580",
    "end": "530060"
  },
  {
    "text": "yeah all right uh can I can someone get",
    "start": "532200",
    "end": "535200"
  },
  {
    "text": "me a flag flag on play unnecessary dick",
    "start": "535200",
    "end": "537240"
  },
  {
    "text": "riding uh V8 determines when to free up",
    "start": "537240",
    "end": "539640"
  },
  {
    "text": "memory this is how many languages are",
    "start": "539640",
    "end": "541620"
  },
  {
    "text": "designed to optimize the developer",
    "start": "541620",
    "end": "543000"
  },
  {
    "text": "experience however for each application",
    "start": "543000",
    "end": "544920"
  },
  {
    "text": "explicit memory usage is unavoidable uh",
    "start": "544920",
    "end": "548220"
  },
  {
    "text": "let's analyze what approximately",
    "start": "548220",
    "end": "549839"
  },
  {
    "text": "transpires when we execute our",
    "start": "549839",
    "end": "551279"
  },
  {
    "text": "simplified tsv parsing code for a way",
    "start": "551279",
    "end": "554580"
  },
  {
    "text": "ooh nice and async iterator Well Done uh",
    "start": "554580",
    "end": "557220"
  },
  {
    "text": "cons line read line of stream const",
    "start": "557220",
    "end": "559680"
  },
  {
    "text": "field split you've just created a bunch",
    "start": "559680",
    "end": "561600"
  },
  {
    "text": "of pointers HTTP status numbers that if",
    "start": "561600",
    "end": "564899"
  },
  {
    "text": "status is less than 200 or greater than",
    "start": "564899",
    "end": "567000"
  },
  {
    "text": "299 continue hate your lack of score",
    "start": "567000",
    "end": "570120"
  },
  {
    "text": "release but whatever records push path",
    "start": "570120",
    "end": "572339"
  },
  {
    "text": "name this refer that okay yep we see",
    "start": "572339",
    "end": "575820"
  },
  {
    "text": "what's happening here the quote is quite",
    "start": "575820",
    "end": "577260"
  },
  {
    "text": "straightforward by using a read line we",
    "start": "577260",
    "end": "579360"
  },
  {
    "text": "iterate through the lines in the field",
    "start": "579360",
    "end": "581160"
  },
  {
    "text": "and uh let's see in a stream to",
    "start": "581160",
    "end": "583620"
  },
  {
    "text": "circumvent memory bottlenecks caused by",
    "start": "583620",
    "end": "585779"
  },
  {
    "text": "reading an entire file into memory yep",
    "start": "585779",
    "end": "587459"
  },
  {
    "text": "for every line we split it by the tab",
    "start": "587459",
    "end": "589740"
  },
  {
    "text": "character and push into a push an item",
    "start": "589740",
    "end": "592140"
  },
  {
    "text": "to an array of results really you're not",
    "start": "592140",
    "end": "594600"
  },
  {
    "text": "really circumventing",
    "start": "594600",
    "end": "596100"
  },
  {
    "text": "pretty much anything here you're going",
    "start": "596100",
    "end": "598320"
  },
  {
    "text": "to take most of that line you're going",
    "start": "598320",
    "end": "600300"
  },
  {
    "text": "to recreate it into these files and",
    "start": "600300",
    "end": "602040"
  },
  {
    "text": "you're going to hold on to it and guess",
    "start": "602040",
    "end": "603360"
  },
  {
    "text": "what's going to happen you're going to",
    "start": "603360",
    "end": "604920"
  },
  {
    "text": "still blow your stack you're still going",
    "start": "604920",
    "end": "606240"
  },
  {
    "text": "to use too much memory",
    "start": "606240",
    "end": "608279"
  },
  {
    "text": "but what's happening behind the scenes",
    "start": "608279",
    "end": "610440"
  },
  {
    "text": "in terms of memory line dot split is",
    "start": "610440",
    "end": "612240"
  },
  {
    "text": "invoked and we get newly allocated array",
    "start": "612240",
    "end": "614220"
  },
  {
    "text": "containing multiple items each item is a",
    "start": "614220",
    "end": "616260"
  },
  {
    "text": "newly allocated string that occupies",
    "start": "616260",
    "end": "617820"
  },
  {
    "text": "memory so this is not technically true",
    "start": "617820",
    "end": "619500"
  },
  {
    "text": "what likely is happening is because it's",
    "start": "619500",
    "end": "621899"
  },
  {
    "text": "using a substring it's actually going to",
    "start": "621899",
    "end": "623519"
  },
  {
    "text": "be a it's going to be a rope string",
    "start": "623519",
    "end": "625140"
  },
  {
    "text": "right so it's going to be it's going to",
    "start": "625140",
    "end": "627060"
  },
  {
    "text": "be a rope so it's going to be a pointer",
    "start": "627060",
    "end": "628800"
  },
  {
    "text": "it's going to be a fat pointer you're",
    "start": "628800",
    "end": "630660"
  },
  {
    "text": "going to get an offset",
    "start": "630660",
    "end": "633360"
  },
  {
    "text": "and a length or not even a fat prone",
    "start": "633360",
    "end": "635220"
  },
  {
    "text": "yeah it's like a fat pointer you're",
    "start": "635220",
    "end": "636360"
  },
  {
    "text": "gonna get an offset in the length that's",
    "start": "636360",
    "end": "637620"
  },
  {
    "text": "all you're going to get for this and",
    "start": "637620",
    "end": "639060"
  },
  {
    "text": "that's effectively what's happening",
    "start": "639060",
    "end": "640920"
  },
  {
    "text": "underneath the hood uh this isn't a way",
    "start": "640920",
    "end": "642959"
  },
  {
    "text": "that array.split works it creates a new",
    "start": "642959",
    "end": "644760"
  },
  {
    "text": "array in strings every time it creates",
    "start": "644760",
    "end": "647339"
  },
  {
    "text": "new array and new string references",
    "start": "647339",
    "end": "648720"
  },
  {
    "text": "every single time absolutely the",
    "start": "648720",
    "end": "650040"
  },
  {
    "text": "Intriguing part here is that line and",
    "start": "650040",
    "end": "651720"
  },
  {
    "text": "Fields won't be cleared from memory",
    "start": "651720",
    "end": "653459"
  },
  {
    "text": "until the garbage collector determines",
    "start": "653459",
    "end": "655140"
  },
  {
    "text": "its time to do so we find ourselves with",
    "start": "655140",
    "end": "657120"
  },
  {
    "text": "ram filled with redundant strings and",
    "start": "657120",
    "end": "658860"
  },
  {
    "text": "arrays that needed uh need cleaning it's",
    "start": "658860",
    "end": "661079"
  },
  {
    "text": "hardly surprising that our computer",
    "start": "661079",
    "end": "662579"
  },
  {
    "text": "wasn't thrilled with the situation yes",
    "start": "662579",
    "end": "664500"
  },
  {
    "text": "you'll still use a lot you'll still use",
    "start": "664500",
    "end": "666360"
  },
  {
    "text": "a lot a lot of stuff",
    "start": "666360",
    "end": "668399"
  },
  {
    "text": "finding comfort in Rust as an",
    "start": "668399",
    "end": "670260"
  },
  {
    "text": "intermediate restation I do have a",
    "start": "670260",
    "end": "672360"
  },
  {
    "text": "fairly successful open source project",
    "start": "672360",
    "end": "673620"
  },
  {
    "text": "written in Rust called phenomenon",
    "start": "673620",
    "end": "676579"
  },
  {
    "text": "I'm well aware that memory management is",
    "start": "676579",
    "end": "679079"
  },
  {
    "text": "one of rust's key strengths the fact",
    "start": "679079",
    "end": "681600"
  },
  {
    "text": "that rust does not require",
    "start": "681600",
    "end": "683700"
  },
  {
    "text": "a runtime garbage collector makes it",
    "start": "683700",
    "end": "685320"
  },
  {
    "text": "suitable for embedding within another",
    "start": "685320",
    "end": "686760"
  },
  {
    "text": "language and virtual machines",
    "start": "686760",
    "end": "687959"
  },
  {
    "text": "positioning itself as an ideal candidate",
    "start": "687959",
    "end": "690000"
  },
  {
    "text": "for implementing such a feature this is",
    "start": "690000",
    "end": "691320"
  },
  {
    "text": "true anything that manual memory",
    "start": "691320",
    "end": "693779"
  },
  {
    "text": "management is ideal especially for this",
    "start": "693779",
    "end": "695700"
  },
  {
    "text": "environment because node requires you to",
    "start": "695700",
    "end": "697860"
  },
  {
    "text": "have some sort of Lifetime an implicit",
    "start": "697860",
    "end": "700019"
  },
  {
    "text": "lifetime to your memory whereas rust",
    "start": "700019",
    "end": "702000"
  },
  {
    "text": "requires an explicit one so it's able to",
    "start": "702000",
    "end": "704040"
  },
  {
    "text": "manage all the memory it uses kind of in",
    "start": "704040",
    "end": "706140"
  },
  {
    "text": "inside of its own little world and just",
    "start": "706140",
    "end": "708300"
  },
  {
    "text": "give out what it doesn't need to hold on",
    "start": "708300",
    "end": "709680"
  },
  {
    "text": "to anymore and and the the the neon API",
    "start": "709680",
    "end": "712920"
  },
  {
    "text": "is actually really it's really slick the",
    "start": "712920",
    "end": "715380"
  },
  {
    "text": "neon API is super super slick I've",
    "start": "715380",
    "end": "718440"
  },
  {
    "text": "shared a few tweets expressing my",
    "start": "718440",
    "end": "719880"
  },
  {
    "text": "beliefs building applications and rust",
    "start": "719880",
    "end": "721500"
  },
  {
    "text": "is powerful but the ability to embed",
    "start": "721500",
    "end": "723240"
  },
  {
    "text": "rust in a battle tested VM without",
    "start": "723240",
    "end": "724800"
  },
  {
    "text": "altering the rest of your application is",
    "start": "724800",
    "end": "726420"
  },
  {
    "text": "a true Game Changer I agree this is",
    "start": "726420",
    "end": "728519"
  },
  {
    "text": "actually a really great point right here",
    "start": "728519",
    "end": "729899"
  },
  {
    "text": "I love this point creating a service in",
    "start": "729899",
    "end": "731820"
  },
  {
    "text": "node.js and only using rust when",
    "start": "731820",
    "end": "733440"
  },
  {
    "text": "necessary can help you accelerate",
    "start": "733440",
    "end": "734880"
  },
  {
    "text": "development and replace modules with",
    "start": "734880",
    "end": "736800"
  },
  {
    "text": "more efficient ones as uh as and when",
    "start": "736800",
    "end": "739260"
  },
  {
    "text": "required",
    "start": "739260",
    "end": "740399"
  },
  {
    "text": "using node.js is the entry point of our",
    "start": "740399",
    "end": "742380"
  },
  {
    "text": "application enabled me to leverage Wix",
    "start": "742380",
    "end": "744360"
  },
  {
    "text": "standard storage database connectors air",
    "start": "744360",
    "end": "746100"
  },
  {
    "text": "reporting logging and configuration and",
    "start": "746100",
    "end": "747959"
  },
  {
    "text": "management without the need to",
    "start": "747959",
    "end": "749399"
  },
  {
    "text": "re-implement these on the rust side this",
    "start": "749399",
    "end": "751500"
  },
  {
    "text": "allows me to focus solely on what",
    "start": "751500",
    "end": "753120"
  },
  {
    "text": "matters most optimizing the slow part",
    "start": "753120",
    "end": "754800"
  },
  {
    "text": "let's go let's go uh fortunately",
    "start": "754800",
    "end": "757560"
  },
  {
    "text": "embedding rust in node.js is a breeze",
    "start": "757560",
    "end": "759300"
  },
  {
    "text": "thanks to the nappy RS an excellent rust",
    "start": "759300",
    "end": "761760"
  },
  {
    "text": "Library I think now it's called neon I",
    "start": "761760",
    "end": "763500"
  },
  {
    "text": "think neon's the one that people use at",
    "start": "763500",
    "end": "765120"
  },
  {
    "text": "this point uh that facilitates seamless",
    "start": "765120",
    "end": "767579"
  },
  {
    "text": "integration between rust and node you",
    "start": "767579",
    "end": "768959"
  },
  {
    "text": "simply write a rust Library use some",
    "start": "768959",
    "end": "770940"
  },
  {
    "text": "fancy macros and Viola he loves that",
    "start": "770940",
    "end": "772860"
  },
  {
    "text": "term uh you have a native a node.js",
    "start": "772860",
    "end": "775200"
  },
  {
    "text": "module written in Rust",
    "start": "775200",
    "end": "776760"
  },
  {
    "text": "all right let's see what we got here",
    "start": "776760",
    "end": "779220"
  },
  {
    "text": "uh correct restations and wrestling so",
    "start": "779220",
    "end": "781139"
  },
  {
    "text": "one thing that's different about rust",
    "start": "781139",
    "end": "783600"
  },
  {
    "text": "uh I don't think you're getting like I I",
    "start": "783600",
    "end": "785579"
  },
  {
    "text": "honestly don't think you're actually",
    "start": "785579",
    "end": "786660"
  },
  {
    "text": "using that much less memory with rust",
    "start": "786660",
    "end": "789959"
  },
  {
    "text": "here",
    "start": "789959",
    "end": "790980"
  },
  {
    "text": "I think it's I think it's getting rid of",
    "start": "790980",
    "end": "792720"
  },
  {
    "text": "the memory you're not using that's",
    "start": "792720",
    "end": "793980"
  },
  {
    "text": "really helping out here",
    "start": "793980",
    "end": "796740"
  },
  {
    "text": "uh and plus there's a whole bunch of",
    "start": "796740",
    "end": "798480"
  },
  {
    "text": "like pointer cost in uh node.js that's",
    "start": "798480",
    "end": "801899"
  },
  {
    "text": "just not present in Rust let's see",
    "start": "801899",
    "end": "803700"
  },
  {
    "text": "Ruskin I Can Begin by declaring my",
    "start": "803700",
    "end": "805200"
  },
  {
    "text": "structs as irrelevant data structures I",
    "start": "805200",
    "end": "806760"
  },
  {
    "text": "want to parse into a typed driven",
    "start": "806760",
    "end": "808920"
  },
  {
    "text": "development workflow I start with a",
    "start": "808920",
    "end": "810360"
  },
  {
    "text": "record the most basic line I want to",
    "start": "810360",
    "end": "811740"
  },
  {
    "text": "parse from the tsv record set instead of",
    "start": "811740",
    "end": "813660"
  },
  {
    "text": "designating every part of the record as",
    "start": "813660",
    "end": "815100"
  },
  {
    "text": "a string an owned string I can force",
    "start": "815100",
    "end": "817260"
  },
  {
    "text": "into a reference yep there you go bada",
    "start": "817260",
    "end": "819120"
  },
  {
    "text": "bing bada boom this is just a this is a",
    "start": "819120",
    "end": "820680"
  },
  {
    "text": "fat pointer right it contains an offset",
    "start": "820680",
    "end": "822600"
  },
  {
    "text": "in the length uh note by making record",
    "start": "822600",
    "end": "824820"
  },
  {
    "text": "contain uh contain slices of string with",
    "start": "824820",
    "end": "827100"
  },
  {
    "text": "an a lifetime we're essentially stating",
    "start": "827100",
    "end": "828540"
  },
  {
    "text": "that record is a derived data structure",
    "start": "828540",
    "end": "830459"
  },
  {
    "text": "that doesn't alter the original data",
    "start": "830459",
    "end": "831959"
  },
  {
    "text": "that implies record cannot outlive line",
    "start": "831959",
    "end": "833940"
  },
  {
    "text": "an advantageous feature it aids Us in",
    "start": "833940",
    "end": "836940"
  },
  {
    "text": "developing our application while being",
    "start": "836940",
    "end": "838200"
  },
  {
    "text": "mindful of optimal memory usage all",
    "start": "838200",
    "end": "840660"
  },
  {
    "text": "right so let's see what they do there",
    "start": "840660",
    "end": "841620"
  },
  {
    "text": "because I'm wondering if he does",
    "start": "841620",
    "end": "842700"
  },
  {
    "text": "something different here is there some",
    "start": "842700",
    "end": "844620"
  },
  {
    "text": "sort of",
    "start": "844620",
    "end": "846860"
  },
  {
    "text": "some sort of thing oh someone's saying",
    "start": "847019",
    "end": "849000"
  },
  {
    "text": "that I'm pronouncing something very",
    "start": "849000",
    "end": "850019"
  },
  {
    "text": "wrong Viola is French actually the way",
    "start": "850019",
    "end": "852839"
  },
  {
    "text": "he's pronouncing is uh it is something",
    "start": "852839",
    "end": "854820"
  },
  {
    "text": "really wrong in Spanish oh really well",
    "start": "854820",
    "end": "857459"
  },
  {
    "text": "viola",
    "start": "857459",
    "end": "858540"
  },
  {
    "text": "these nuts have you thought about that",
    "start": "858540",
    "end": "860700"
  },
  {
    "text": "one all right to maximize our",
    "start": "860700",
    "end": "862560"
  },
  {
    "text": "capabilities of a browser caching static",
    "start": "862560",
    "end": "864600"
  },
  {
    "text": "assets and deployments of oh hold on oh",
    "start": "864600",
    "end": "866880"
  },
  {
    "text": "yeah that's where we're at",
    "start": "866880",
    "end": "868380"
  },
  {
    "text": "however merely deriving the raw data",
    "start": "868380",
    "end": "870360"
  },
  {
    "text": "isn't a sufficient for our use case to",
    "start": "870360",
    "end": "872040"
  },
  {
    "text": "maximize the capabilities of browser",
    "start": "872040",
    "end": "873720"
  },
  {
    "text": "caching static assets are deployed with",
    "start": "873720",
    "end": "876180"
  },
  {
    "text": "a Content hash as part of the file name",
    "start": "876180",
    "end": "877860"
  },
  {
    "text": "instead of having artifact.file.js we",
    "start": "877860",
    "end": "880139"
  },
  {
    "text": "have",
    "start": "880139",
    "end": "880880"
  },
  {
    "text": "artifact.file.abcd uh hexadecimal.js",
    "start": "880880",
    "end": "883680"
  },
  {
    "text": "files allowing uh the browser to Cache",
    "start": "883680",
    "end": "885720"
  },
  {
    "text": "them indefinitely okay nice",
    "start": "885720",
    "end": "888660"
  },
  {
    "text": "uh for our aggregations we want to",
    "start": "888660",
    "end": "890760"
  },
  {
    "text": "remove this content hash furthermore we",
    "start": "890760",
    "end": "893220"
  },
  {
    "text": "want to infer the artifact name and the",
    "start": "893220",
    "end": "894959"
  },
  {
    "text": "path name this is where we introduced",
    "start": "894959",
    "end": "896220"
  },
  {
    "text": "enhanced row enhance let's say Okay path",
    "start": "896220",
    "end": "899220"
  },
  {
    "text": "name refer I'm surprised you didn't use",
    "start": "899220",
    "end": "901019"
  },
  {
    "text": "a path buff uh artifact or a path or",
    "start": "901019",
    "end": "903240"
  },
  {
    "text": "whatever one is the equivalent of a that",
    "start": "903240",
    "end": "905820"
  },
  {
    "text": "file name a cow ooh nothing like a cow",
    "start": "905820",
    "end": "909360"
  },
  {
    "text": "you know for a fact that once you get to",
    "start": "909360",
    "end": "911519"
  },
  {
    "text": "a cow you've reached new levels of rust",
    "start": "911519",
    "end": "913620"
  },
  {
    "text": "stationing",
    "start": "913620",
    "end": "916160"
  },
  {
    "text": "they could use some power peg in this",
    "start": "916680",
    "end": "918360"
  },
  {
    "text": "code they could",
    "start": "918360",
    "end": "920040"
  },
  {
    "text": "as we can see enhance row incorporates",
    "start": "920040",
    "end": "921959"
  },
  {
    "text": "everything that a record a does but it",
    "start": "921959",
    "end": "924300"
  },
  {
    "text": "enhances it with a few values artifact a",
    "start": "924300",
    "end": "926579"
  },
  {
    "text": "reference uh part of the path name file",
    "start": "926579",
    "end": "929040"
  },
  {
    "text": "name is a copy on right just as we",
    "start": "929040",
    "end": "931019"
  },
  {
    "text": "mentioned we attempted to remove the",
    "start": "931019",
    "end": "932279"
  },
  {
    "text": "content hash from the file if we don't",
    "start": "932279",
    "end": "933899"
  },
  {
    "text": "find the content hash there's no need to",
    "start": "933899",
    "end": "935579"
  },
  {
    "text": "copy the string if we do find it copy we",
    "start": "935579",
    "end": "938040"
  },
  {
    "text": "copy the string this type allows us to",
    "start": "938040",
    "end": "940260"
  },
  {
    "text": "be incredibly explicit with our",
    "start": "940260",
    "end": "941519"
  },
  {
    "text": "intentions yep after defining these two",
    "start": "941519",
    "end": "943500"
  },
  {
    "text": "structs we Implement a try from okay I",
    "start": "943500",
    "end": "945480"
  },
  {
    "text": "love a good old-fashioned try from and a",
    "start": "945480",
    "end": "947339"
  },
  {
    "text": "try from record oh beautiful I love",
    "start": "947339",
    "end": "949019"
  },
  {
    "text": "tri-froms this is like one of my",
    "start": "949019",
    "end": "950579"
  },
  {
    "text": "favorite features of rust is the the",
    "start": "950579",
    "end": "952680"
  },
  {
    "text": "trade system and it's a and and it's",
    "start": "952680",
    "end": "955019"
  },
  {
    "text": "like",
    "start": "955019",
    "end": "956040"
  },
  {
    "text": "ability to include",
    "start": "956040",
    "end": "958680"
  },
  {
    "text": "on any type and just make things feel",
    "start": "958680",
    "end": "960839"
  },
  {
    "text": "very standard I love this part I love it",
    "start": "960839",
    "end": "963180"
  },
  {
    "text": "I love the fact that there's very like",
    "start": "963180",
    "end": "964680"
  },
  {
    "text": "there's a good rail type programming",
    "start": "964680",
    "end": "966959"
  },
  {
    "text": "when it comes to basic operations and",
    "start": "966959",
    "end": "968820"
  },
  {
    "text": "tri-from is one of those like kind of",
    "start": "968820",
    "end": "970800"
  },
  {
    "text": "like here's the rails just go on the",
    "start": "970800",
    "end": "972540"
  },
  {
    "text": "rails and use what we've already",
    "start": "972540",
    "end": "973740"
  },
  {
    "text": "provided I love from and try from I use",
    "start": "973740",
    "end": "975540"
  },
  {
    "text": "it all the time uh next we create a new",
    "start": "975540",
    "end": "977940"
  },
  {
    "text": "struct called resource counter which",
    "start": "977940",
    "end": "979320"
  },
  {
    "text": "performs aggregation for a given files",
    "start": "979320",
    "end": "980940"
  },
  {
    "text": "it's a simple wrap around hash map with",
    "start": "980940",
    "end": "983040"
  },
  {
    "text": "our key composed of artifact file name",
    "start": "983040",
    "end": "984720"
  },
  {
    "text": "okay",
    "start": "984720",
    "end": "986399"
  },
  {
    "text": "resource counter allows you to provide",
    "start": "986399",
    "end": "988019"
  },
  {
    "text": "enhanced record and only clones the data",
    "start": "988019",
    "end": "989699"
  },
  {
    "text": "if necessary and okay I want to see what",
    "start": "989699",
    "end": "991500"
  },
  {
    "text": "that is can we see what that is because",
    "start": "991500",
    "end": "993779"
  },
  {
    "text": "I because what I'm seeing here is",
    "start": "993779",
    "end": "995519"
  },
  {
    "text": "something much much different actually",
    "start": "995519",
    "end": "996600"
  },
  {
    "text": "are you guys seeing this",
    "start": "996600",
    "end": "998519"
  },
  {
    "text": "are you seeing what's happening right",
    "start": "998519",
    "end": "999959"
  },
  {
    "text": "here uh so what's happening is that",
    "start": "999959",
    "end": "1002000"
  },
  {
    "text": "enhanced row relies on the lifetime of a",
    "start": "1002000",
    "end": "1004880"
  },
  {
    "text": "line",
    "start": "1004880",
    "end": "1006800"
  },
  {
    "text": "but if you look at this JavaScript right",
    "start": "1006800",
    "end": "1008720"
  },
  {
    "text": "here",
    "start": "1008720",
    "end": "1009800"
  },
  {
    "text": "the lifetime of a line is actually the",
    "start": "1009800",
    "end": "1012440"
  },
  {
    "text": "entirety of reading the Stream",
    "start": "1012440",
    "end": "1015500"
  },
  {
    "text": "right so the stream itself goes on and",
    "start": "1015500",
    "end": "1019160"
  },
  {
    "text": "on and on",
    "start": "1019160",
    "end": "1021620"
  },
  {
    "text": "which makes me think that what I'm",
    "start": "1021620",
    "end": "1023899"
  },
  {
    "text": "seeing is two very different",
    "start": "1023899",
    "end": "1025040"
  },
  {
    "text": "implementations I think you could have",
    "start": "1025040",
    "end": "1026418"
  },
  {
    "text": "got a a much better performance in",
    "start": "1026419",
    "end": "1029240"
  },
  {
    "text": "JavaScript doing what they're saying",
    "start": "1029240",
    "end": "1030500"
  },
  {
    "text": "right down here which is to add a map as",
    "start": "1030500",
    "end": "1033740"
  },
  {
    "text": "your like counter and so then you're",
    "start": "1033740",
    "end": "1035178"
  },
  {
    "text": "only counting on certain specific items",
    "start": "1035179",
    "end": "1036980"
  },
  {
    "text": "you're not recreating a record every",
    "start": "1036980",
    "end": "1038900"
  },
  {
    "text": "single time this is like a classic",
    "start": "1038900",
    "end": "1040579"
  },
  {
    "text": "JavaScript oopsie Daisy which is that",
    "start": "1040579",
    "end": "1042860"
  },
  {
    "text": "it's so easy to create memory that you",
    "start": "1042860",
    "end": "1045860"
  },
  {
    "text": "write awful",
    "start": "1045860",
    "end": "1048020"
  },
  {
    "text": "all the time",
    "start": "1048020",
    "end": "1049460"
  },
  {
    "text": "right and so if you were trying to build",
    "start": "1049460",
    "end": "1051440"
  },
  {
    "text": "the exact same thing in JavaScript I",
    "start": "1051440",
    "end": "1053240"
  },
  {
    "text": "don't think it's hard I think that",
    "start": "1053240",
    "end": "1054559"
  },
  {
    "text": "they're just simply missing",
    "start": "1054559",
    "end": "1056419"
  },
  {
    "text": "uh this one this one little thing so",
    "start": "1056419",
    "end": "1058580"
  },
  {
    "text": "let's find out with this our code was",
    "start": "1058580",
    "end": "1060200"
  },
  {
    "text": "complete however since we implemented a",
    "start": "1060200",
    "end": "1061640"
  },
  {
    "text": "performance optimization feature we knew",
    "start": "1061640",
    "end": "1063860"
  },
  {
    "text": "we couldn't call it a day without",
    "start": "1063860",
    "end": "1065539"
  },
  {
    "text": "benchmarking it against the current",
    "start": "1065539",
    "end": "1066799"
  },
  {
    "text": "JavaScript implementation this this",
    "start": "1066799",
    "end": "1068660"
  },
  {
    "text": "benchmarking would require us to use",
    "start": "1068660",
    "end": "1069919"
  },
  {
    "text": "node.js module rather than using a rust",
    "start": "1069919",
    "end": "1071539"
  },
  {
    "text": "as our CLI or something similar to",
    "start": "1071539",
    "end": "1072919"
  },
  {
    "text": "ensure we included the overhead of rust",
    "start": "1072919",
    "end": "1074299"
  },
  {
    "text": "to JS communication I fired up our",
    "start": "1074299",
    "end": "1076400"
  },
  {
    "text": "internal JavaScript benchmarking tool",
    "start": "1076400",
    "end": "1077840"
  },
  {
    "text": "called perfor and wrote a simple",
    "start": "1077840",
    "end": "1079340"
  },
  {
    "text": "Benchmark",
    "start": "1079340",
    "end": "1081039"
  },
  {
    "text": "native parse async some big feature okay",
    "start": "1081039",
    "end": "1084740"
  },
  {
    "text": "some big fixture run async native parser",
    "start": "1084740",
    "end": "1087860"
  },
  {
    "text": "okay Benchmark node create file stream",
    "start": "1087860",
    "end": "1089960"
  },
  {
    "text": "some big fixture cost values ohjs parser",
    "start": "1089960",
    "end": "1093020"
  },
  {
    "text": "uh let's see run async this thing all",
    "start": "1093020",
    "end": "1096500"
  },
  {
    "text": "right it ran and the results were",
    "start": "1096500",
    "end": "1098360"
  },
  {
    "text": "impressive",
    "start": "1098360",
    "end": "1099919"
  },
  {
    "text": "okay that looks nice",
    "start": "1099919",
    "end": "1102860"
  },
  {
    "text": "that looks nice now but again",
    "start": "1102860",
    "end": "1105440"
  },
  {
    "text": "what's this thing right here why is this",
    "start": "1105440",
    "end": "1107960"
  },
  {
    "text": "happening again I'm telling you it's",
    "start": "1107960",
    "end": "1110419"
  },
  {
    "text": "because of this line right up here",
    "start": "1110419",
    "end": "1114020"
  },
  {
    "text": "it was a simple wrapper around a hash",
    "start": "1114020",
    "end": "1115880"
  },
  {
    "text": "map and our keys was composed of",
    "start": "1115880",
    "end": "1117500"
  },
  {
    "text": "artifact file name and our value had a",
    "start": "1117500",
    "end": "1119960"
  },
  {
    "text": "counter for the request based on the",
    "start": "1119960",
    "end": "1121460"
  },
  {
    "text": "platforms",
    "start": "1121460",
    "end": "1122960"
  },
  {
    "text": "based on the platform I think it's",
    "start": "1122960",
    "end": "1124340"
  },
  {
    "text": "literally this I think this is one of",
    "start": "1124340",
    "end": "1125780"
  },
  {
    "text": "the big differences is that you're only",
    "start": "1125780",
    "end": "1127640"
  },
  {
    "text": "storing unique combos of artifact and",
    "start": "1127640",
    "end": "1130700"
  },
  {
    "text": "file name and an Associated int so",
    "start": "1130700",
    "end": "1133160"
  },
  {
    "text": "you're really storing a very few amount",
    "start": "1133160",
    "end": "1135200"
  },
  {
    "text": "of pieces of data right you're storing",
    "start": "1135200",
    "end": "1137660"
  },
  {
    "text": "of some megabytes right",
    "start": "1137660",
    "end": "1141100"
  },
  {
    "text": "yeah",
    "start": "1143480",
    "end": "1145039"
  },
  {
    "text": "uh okay so someone's saying like show me",
    "start": "1145039",
    "end": "1147200"
  },
  {
    "text": "what's going on here so this is how I",
    "start": "1147200",
    "end": "1148940"
  },
  {
    "text": "read what's happening right here is that",
    "start": "1148940",
    "end": "1150679"
  },
  {
    "text": "we have something that looks like this",
    "start": "1150679",
    "end": "1151880"
  },
  {
    "text": "so right they had four or they had four",
    "start": "1151880",
    "end": "1153679"
  },
  {
    "text": "await cons item in stream right or sorry",
    "start": "1153679",
    "end": "1158360"
  },
  {
    "text": "of stream right that's effectively what",
    "start": "1158360",
    "end": "1160700"
  },
  {
    "text": "they had and then they would do",
    "start": "1160700",
    "end": "1162080"
  },
  {
    "text": "something had something like this const",
    "start": "1162080",
    "end": "1163640"
  },
  {
    "text": "out equals an array and then they did",
    "start": "1163640",
    "end": "1165559"
  },
  {
    "text": "out dot push some object in here right",
    "start": "1165559",
    "end": "1168620"
  },
  {
    "text": "can we all agree that's effectively what",
    "start": "1168620",
    "end": "1170720"
  },
  {
    "text": "they were doing right this so",
    "start": "1170720",
    "end": "1175100"
  },
  {
    "text": "what they're doing in Rust looks a",
    "start": "1175100",
    "end": "1176960"
  },
  {
    "text": "little bit different they're doing",
    "start": "1176960",
    "end": "1178160"
  },
  {
    "text": "something that looks more like this",
    "start": "1178160",
    "end": "1179299"
  },
  {
    "text": "kant's out is this and then four oh wait",
    "start": "1179299",
    "end": "1183559"
  },
  {
    "text": "well really it's it's I mean it's a new",
    "start": "1183559",
    "end": "1185000"
  },
  {
    "text": "map right let's just be fair here four",
    "start": "1185000",
    "end": "1187039"
  },
  {
    "text": "away cons item uh of stream",
    "start": "1187039",
    "end": "1191200"
  },
  {
    "text": "and then doing some sort of out dot set",
    "start": "1191539",
    "end": "1194360"
  },
  {
    "text": "or I'll I'll dot we'll call it some sort",
    "start": "1194360",
    "end": "1197000"
  },
  {
    "text": "of Set uh you know item let's see some",
    "start": "1197000",
    "end": "1200059"
  },
  {
    "text": "sort of combo right item.id item Dot",
    "start": "1200059",
    "end": "1203660"
  },
  {
    "text": "path or whatever it was I forgot the",
    "start": "1203660",
    "end": "1205580"
  },
  {
    "text": "exact name hash I forgot what they had",
    "start": "1205580",
    "end": "1207860"
  },
  {
    "text": "in there uh",
    "start": "1207860",
    "end": "1209720"
  },
  {
    "text": "equals",
    "start": "1209720",
    "end": "1211100"
  },
  {
    "text": "out dot get this thing",
    "start": "1211100",
    "end": "1214160"
  },
  {
    "text": "uh",
    "start": "1214160",
    "end": "1216740"
  },
  {
    "text": "plus one",
    "start": "1216740",
    "end": "1218120"
  },
  {
    "text": "or whatever it was or one right they had",
    "start": "1218120",
    "end": "1221059"
  },
  {
    "text": "something that looked like this right",
    "start": "1221059",
    "end": "1224200"
  },
  {
    "text": "right",
    "start": "1228380",
    "end": "1230679"
  },
  {
    "text": "that's effectively what they're doing",
    "start": "1232820",
    "end": "1234559"
  },
  {
    "text": "and so these are very very different",
    "start": "1234559",
    "end": "1236360"
  },
  {
    "text": "notice that you're recreating the line",
    "start": "1236360",
    "end": "1238640"
  },
  {
    "text": "every single time and storing all the",
    "start": "1238640",
    "end": "1240860"
  },
  {
    "text": "information versus just storing all the",
    "start": "1240860",
    "end": "1243380"
  },
  {
    "text": "information using a hash map so that way",
    "start": "1243380",
    "end": "1245539"
  },
  {
    "text": "they didn't have to create an individual",
    "start": "1245539",
    "end": "1247280"
  },
  {
    "text": "object every single line instead they",
    "start": "1247280",
    "end": "1250220"
  },
  {
    "text": "created they just mutated a variable or",
    "start": "1250220",
    "end": "1252860"
  },
  {
    "text": "created one new entry or X new entries",
    "start": "1252860",
    "end": "1255500"
  },
  {
    "text": "into a hash map it's an Apple Store yeah",
    "start": "1255500",
    "end": "1258260"
  },
  {
    "text": "there's definitely something going on",
    "start": "1258260",
    "end": "1259700"
  },
  {
    "text": "here that I think is vastly unfair",
    "start": "1259700",
    "end": "1262280"
  },
  {
    "text": "to the comparison at least that's how I",
    "start": "1262280",
    "end": "1264620"
  },
  {
    "text": "read it when you say things like that",
    "start": "1264620",
    "end": "1265880"
  },
  {
    "text": "and I think that's why it makes sense",
    "start": "1265880",
    "end": "1267020"
  },
  {
    "text": "you see these two vast differences is",
    "start": "1267020",
    "end": "1269419"
  },
  {
    "text": "that rust should not reduce memory by by",
    "start": "1269419",
    "end": "1272600"
  },
  {
    "text": "300 fold as far as I can tell when it",
    "start": "1272600",
    "end": "1275600"
  },
  {
    "text": "comes to a bunch of string and number uh",
    "start": "1275600",
    "end": "1278059"
  },
  {
    "text": "storing it can it can usually reduce the",
    "start": "1278059",
    "end": "1280400"
  },
  {
    "text": "size by like up to like four to five",
    "start": "1280400",
    "end": "1282980"
  },
  {
    "text": "times right it can be it can be like",
    "start": "1282980",
    "end": "1285380"
  },
  {
    "text": "definitely smaller because you just",
    "start": "1285380",
    "end": "1288080"
  },
  {
    "text": "don't you you can just store things in",
    "start": "1288080",
    "end": "1289880"
  },
  {
    "text": "such smaller amounts but this is just",
    "start": "1289880",
    "end": "1292159"
  },
  {
    "text": "like straight up saying no way no way",
    "start": "1292159",
    "end": "1294200"
  },
  {
    "text": "not believing it",
    "start": "1294200",
    "end": "1295760"
  },
  {
    "text": "right also node itself takes up 40 Megs",
    "start": "1295760",
    "end": "1298760"
  },
  {
    "text": "right like just the environment uh what",
    "start": "1298760",
    "end": "1300740"
  },
  {
    "text": "I mean by that is if you like this",
    "start": "1300740",
    "end": "1302840"
  },
  {
    "text": "um uh go",
    "start": "1302840",
    "end": "1305659"
  },
  {
    "text": "node e while uh while true right",
    "start": "1305659",
    "end": "1311659"
  },
  {
    "text": "um",
    "start": "1311659",
    "end": "1312440"
  },
  {
    "text": "there we go that thing's just running",
    "start": "1312440",
    "end": "1314320"
  },
  {
    "text": "vmrss like it just takes up 40 makes",
    "start": "1314320",
    "end": "1316880"
  },
  {
    "text": "right so this is how much memory it's",
    "start": "1316880",
    "end": "1318679"
  },
  {
    "text": "taking on my system right now",
    "start": "1318679",
    "end": "1320900"
  },
  {
    "text": "so it's like a forever running item it",
    "start": "1320900",
    "end": "1322820"
  },
  {
    "text": "just runs forever",
    "start": "1322820",
    "end": "1325539"
  },
  {
    "text": "if so if if you're testing if you're",
    "start": "1334280",
    "end": "1337100"
  },
  {
    "text": "testing",
    "start": "1337100",
    "end": "1338120"
  },
  {
    "text": "yeah you have to be careful what you're",
    "start": "1338120",
    "end": "1339679"
  },
  {
    "text": "testing I have never seen something do",
    "start": "1339679",
    "end": "1341179"
  },
  {
    "text": "this I've seen people change stuff but",
    "start": "1341179",
    "end": "1342679"
  },
  {
    "text": "they said they launched rust as a module",
    "start": "1342679",
    "end": "1344360"
  },
  {
    "text": "from node so the overhead would still be",
    "start": "1344360",
    "end": "1346400"
  },
  {
    "text": "there yeah they must be memorizing or",
    "start": "1346400",
    "end": "1348440"
  },
  {
    "text": "they're they're just uh measuring the",
    "start": "1348440",
    "end": "1351020"
  },
  {
    "text": "memory used by this I'm not exactly sure",
    "start": "1351020",
    "end": "1352640"
  },
  {
    "text": "how they're doing the memory just by the",
    "start": "1352640",
    "end": "1354740"
  },
  {
    "text": "native module because it like you said",
    "start": "1354740",
    "end": "1356600"
  },
  {
    "text": "it should be wrapped up inside of here",
    "start": "1356600",
    "end": "1358100"
  },
  {
    "text": "it should be a minimum of four to three",
    "start": "1358100",
    "end": "1360020"
  },
  {
    "text": "Megs right",
    "start": "1360020",
    "end": "1361400"
  },
  {
    "text": "there's something going on here that I",
    "start": "1361400",
    "end": "1362900"
  },
  {
    "text": "think we're we're goofing up a little",
    "start": "1362900",
    "end": "1364580"
  },
  {
    "text": "bit you know what I mean something's",
    "start": "1364580",
    "end": "1365960"
  },
  {
    "text": "wrong I don't know what it is let's look",
    "start": "1365960",
    "end": "1367820"
  },
  {
    "text": "at these ones JS parser let's see",
    "start": "1367820",
    "end": "1369799"
  },
  {
    "text": "runtime",
    "start": "1369799",
    "end": "1371179"
  },
  {
    "text": "all right uh memory awesome this I'm",
    "start": "1371179",
    "end": "1374720"
  },
  {
    "text": "actually another thing that uh",
    "start": "1374720",
    "end": "1377179"
  },
  {
    "text": "I'm actually a bit surprised by is this",
    "start": "1377179",
    "end": "1378980"
  },
  {
    "text": "right here the standard deviation I feel",
    "start": "1378980",
    "end": "1381559"
  },
  {
    "text": "like should be a lot larger this",
    "start": "1381559",
    "end": "1384380"
  },
  {
    "text": "seems reasonable I guess",
    "start": "1384380",
    "end": "1387200"
  },
  {
    "text": "anyways",
    "start": "1387200",
    "end": "1388460"
  },
  {
    "text": "uh the results were as follows JF uh",
    "start": "1388460",
    "end": "1390799"
  },
  {
    "text": "JavaScript parser uh a lot of",
    "start": "1390799",
    "end": "1392960"
  },
  {
    "text": "milliseconds this much time that much",
    "start": "1392960",
    "end": "1395720"
  },
  {
    "text": "memory Russ parser that much this much",
    "start": "1395720",
    "end": "1397820"
  },
  {
    "text": "and this much yeah again I think it's",
    "start": "1397820",
    "end": "1399559"
  },
  {
    "text": "just simply the data structure you chose",
    "start": "1399559",
    "end": "1401299"
  },
  {
    "text": "while there's a significant difference",
    "start": "1401299",
    "end": "1402799"
  },
  {
    "text": "in times the most glaring disparity lies",
    "start": "1402799",
    "end": "1404720"
  },
  {
    "text": "in memory usage the difference enables",
    "start": "1404720",
    "end": "1406159"
  },
  {
    "text": "us to process more files in parallel and",
    "start": "1406159",
    "end": "1408020"
  },
  {
    "text": "that's a huge Advantage uh the Wix I I",
    "start": "1408020",
    "end": "1410600"
  },
  {
    "text": "like them using rust though I'm thinking",
    "start": "1410600",
    "end": "1412700"
  },
  {
    "text": "rust was a better move no matter what",
    "start": "1412700",
    "end": "1415059"
  },
  {
    "text": "but I'm just saying this uh this",
    "start": "1415059",
    "end": "1417500"
  },
  {
    "text": "comparison might be unfair",
    "start": "1417500",
    "end": "1419179"
  },
  {
    "text": "uh the Wix deployment uh preview model",
    "start": "1419179",
    "end": "1421760"
  },
  {
    "text": "is based on an ephemeral kubernetes pods",
    "start": "1421760",
    "end": "1425000"
  },
  {
    "text": "remember when Eazy-E tried to describe",
    "start": "1425000",
    "end": "1427340"
  },
  {
    "text": "kubernetes because of that Cameo payment",
    "start": "1427340",
    "end": "1429380"
  },
  {
    "text": "I've never been able to find the video",
    "start": "1429380",
    "end": "1430820"
  },
  {
    "text": "again but I loved it if someone can find",
    "start": "1430820",
    "end": "1433100"
  },
  {
    "text": "it for me I would be so appreciative uh",
    "start": "1433100",
    "end": "1435500"
  },
  {
    "text": "pause that can be manually requested for",
    "start": "1435500",
    "end": "1437539"
  },
  {
    "text": "a specific comment uh the Ingress proxy",
    "start": "1437539",
    "end": "1439700"
  },
  {
    "text": "can direct traffic to these uh special",
    "start": "1439700",
    "end": "1441380"
  },
  {
    "text": "pods given a specific header this is",
    "start": "1441380",
    "end": "1443600"
  },
  {
    "text": "great for testing something as",
    "start": "1443600",
    "end": "1444740"
  },
  {
    "text": "Innovative as this project so we decided",
    "start": "1444740",
    "end": "1446780"
  },
  {
    "text": "by running a few uh preview deployments",
    "start": "1446780",
    "end": "1448940"
  },
  {
    "text": "using the rust parser instead of the",
    "start": "1448940",
    "end": "1450440"
  },
  {
    "text": "JavaScript ones this is also great it",
    "start": "1450440",
    "end": "1451700"
  },
  {
    "text": "sounds like you can also do Shadow",
    "start": "1451700",
    "end": "1452900"
  },
  {
    "text": "traffic comparison prove that your new",
    "start": "1452900",
    "end": "1455419"
  },
  {
    "text": "feature written as a whole new rewrite",
    "start": "1455419",
    "end": "1457159"
  },
  {
    "text": "can also you know it's effectively",
    "start": "1457159",
    "end": "1458960"
  },
  {
    "text": "creating the same information it also is",
    "start": "1458960",
    "end": "1461360"
  },
  {
    "text": "really great I I really love the idea of",
    "start": "1461360",
    "end": "1463760"
  },
  {
    "text": "being able to",
    "start": "1463760",
    "end": "1465620"
  },
  {
    "text": "uh compare things",
    "start": "1465620",
    "end": "1468080"
  },
  {
    "text": "in a real environment you know what I",
    "start": "1468080",
    "end": "1470000"
  },
  {
    "text": "mean not just some Benchmark ran on some",
    "start": "1470000",
    "end": "1471799"
  },
  {
    "text": "person's computer but like a benchmark",
    "start": "1471799",
    "end": "1473659"
  },
  {
    "text": "as in we have all of our instances",
    "start": "1473659",
    "end": "1475400"
  },
  {
    "text": "running this and we have all of our",
    "start": "1475400",
    "end": "1476840"
  },
  {
    "text": "instances running this let's see which",
    "start": "1476840",
    "end": "1478700"
  },
  {
    "text": "one's faster let's see which one uses",
    "start": "1478700",
    "end": "1480200"
  },
  {
    "text": "less memory let's see what we can do",
    "start": "1480200",
    "end": "1481760"
  },
  {
    "text": "here I love that idea we ran a benchmark",
    "start": "1481760",
    "end": "1483980"
  },
  {
    "text": "a few times and processed the same 190",
    "start": "1483980",
    "end": "1486140"
  },
  {
    "text": "000 log files using the following",
    "start": "1486140",
    "end": "1487580"
  },
  {
    "text": "infrastructure JavaScript implementation",
    "start": "1487580",
    "end": "1489500"
  },
  {
    "text": "with 25 instances which finished in",
    "start": "1489500",
    "end": "1491360"
  },
  {
    "text": "three hours rust implementation with one",
    "start": "1491360",
    "end": "1493340"
  },
  {
    "text": "deployed preview instance completing in",
    "start": "1493340",
    "end": "1495080"
  },
  {
    "text": "2.5 hours this does not include any",
    "start": "1495080",
    "end": "1497539"
  },
  {
    "text": "database i o since the deployment",
    "start": "1497539",
    "end": "1499039"
  },
  {
    "text": "preview instance is read only but there",
    "start": "1499039",
    "end": "1501620"
  },
  {
    "text": "are fewer uh insertions in the rust",
    "start": "1501620",
    "end": "1503960"
  },
  {
    "text": "implementation because we can process",
    "start": "1503960",
    "end": "1505280"
  },
  {
    "text": "more files simultaneously this enhances",
    "start": "1505280",
    "end": "1507200"
  },
  {
    "text": "our aggregation reduces the number of",
    "start": "1507200",
    "end": "1508640"
  },
  {
    "text": "Records to be pushed to the database we",
    "start": "1508640",
    "end": "1510559"
  },
  {
    "text": "could modify our implementation to store",
    "start": "1510559",
    "end": "1512000"
  },
  {
    "text": "data directly in a simple storage like",
    "start": "1512000",
    "end": "1514280"
  },
  {
    "text": "S3 and then have a separate job that",
    "start": "1514280",
    "end": "1516200"
  },
  {
    "text": "transfers the data directly to the",
    "start": "1516200",
    "end": "1517460"
  },
  {
    "text": "database this would allow us to uh to",
    "start": "1517460",
    "end": "1519320"
  },
  {
    "text": "separate computational work from Network",
    "start": "1519320",
    "end": "1520700"
  },
  {
    "text": "work nice assuming the times were the",
    "start": "1520700",
    "end": "1523039"
  },
  {
    "text": "same the rust implementation used only",
    "start": "1523039",
    "end": "1525020"
  },
  {
    "text": "125th of the resources available to the",
    "start": "1525020",
    "end": "1527419"
  },
  {
    "text": "JavaScript implement station that's 2500",
    "start": "1527419",
    "end": "1529940"
  },
  {
    "text": "percent performance boost even if we did",
    "start": "1529940",
    "end": "1533600"
  },
  {
    "text": "uh do need to add the mongodb insertions",
    "start": "1533600",
    "end": "1535700"
  },
  {
    "text": "which may take extra time we would still",
    "start": "1535700",
    "end": "1537200"
  },
  {
    "text": "be looking at a boost of twenty thousand",
    "start": "1537200",
    "end": "1539240"
  },
  {
    "text": "or two thousand nineteen thousand",
    "start": "1539240",
    "end": "1541159"
  },
  {
    "text": "percent gosh I keep saying twenty",
    "start": "1541159",
    "end": "1542659"
  },
  {
    "text": "thousand ninety thousand two thousand",
    "start": "1542659",
    "end": "1544340"
  },
  {
    "text": "Nineteen Hundred percent either way",
    "start": "1544340",
    "end": "1545960"
  },
  {
    "text": "that's a significant win I agree I",
    "start": "1545960",
    "end": "1548360"
  },
  {
    "text": "completely agree on this plus you can",
    "start": "1548360",
    "end": "1549679"
  },
  {
    "text": "still parallelize this so what's the",
    "start": "1549679",
    "end": "1551480"
  },
  {
    "text": "takeaway it seems that choosing the",
    "start": "1551480",
    "end": "1552799"
  },
  {
    "text": "right tool for the job is essential also",
    "start": "1552799",
    "end": "1554299"
  },
  {
    "text": "choosing the right data structures",
    "start": "1554299",
    "end": "1556100"
  },
  {
    "text": "okay",
    "start": "1556100",
    "end": "1558700"
  },
  {
    "text": "that data structure call out",
    "start": "1559100",
    "end": "1561620"
  },
  {
    "text": "it's very serious",
    "start": "1561620",
    "end": "1564080"
  },
  {
    "text": "okay I think we really gotta focus on",
    "start": "1564080",
    "end": "1566779"
  },
  {
    "text": "that data structure there some tasks are",
    "start": "1566779",
    "end": "1569000"
  },
  {
    "text": "well suited for JavaScript While others",
    "start": "1569000",
    "end": "1570380"
  },
  {
    "text": "are not although rust is a language",
    "start": "1570380",
    "end": "1571580"
  },
  {
    "text": "that's more challenging to master you",
    "start": "1571580",
    "end": "1573080"
  },
  {
    "text": "can uh we can still encapsulate the",
    "start": "1573080",
    "end": "1574940"
  },
  {
    "text": "logic and distribute it in such a way",
    "start": "1574940",
    "end": "1576620"
  },
  {
    "text": "that users uh don't mind using it we can",
    "start": "1576620",
    "end": "1579380"
  },
  {
    "text": "see this trend across JavaScript",
    "start": "1579380",
    "end": "1580640"
  },
  {
    "text": "ecosystem next.js replace their use of",
    "start": "1580640",
    "end": "1582620"
  },
  {
    "text": "Babel with Swiss and may use turbo pack",
    "start": "1582620",
    "end": "1585140"
  },
  {
    "text": "by default to fingers crossed I assume",
    "start": "1585140",
    "end": "1587960"
  },
  {
    "text": "they're going to be doing it soon es",
    "start": "1587960",
    "end": "1588980"
  },
  {
    "text": "build a popular choice for bundling and",
    "start": "1588980",
    "end": "1590600"
  },
  {
    "text": "transforming typescript or modern Jazz",
    "start": "1590600",
    "end": "1592159"
  },
  {
    "text": "to JavaScript is written in golang it's",
    "start": "1592159",
    "end": "1594140"
  },
  {
    "text": "simply faster which is always beneficial",
    "start": "1594140",
    "end": "1596179"
  },
  {
    "text": "yeah it's massively faster than than TSC",
    "start": "1596179",
    "end": "1598400"
  },
  {
    "text": "it's beautiful I suppose that uh my",
    "start": "1598400",
    "end": "1600320"
  },
  {
    "text": "takeaway here is uh use whatever makes",
    "start": "1600320",
    "end": "1602120"
  },
  {
    "text": "you happy and if something is too slow",
    "start": "1602120",
    "end": "1604400"
  },
  {
    "text": "profile at first then encapsulate it and",
    "start": "1604400",
    "end": "1606380"
  },
  {
    "text": "then perhaps consider writing it in Rust",
    "start": "1606380",
    "end": "1608779"
  },
  {
    "text": "I do like the idea of profiling it we",
    "start": "1608779",
    "end": "1610940"
  },
  {
    "text": "never knew what was slow so he never",
    "start": "1610940",
    "end": "1613039"
  },
  {
    "text": "actually profiled it right he only timed",
    "start": "1613039",
    "end": "1615679"
  },
  {
    "text": "it right he said okay it takes 25",
    "start": "1615679",
    "end": "1618620"
  },
  {
    "text": "instances and takes three hours that's",
    "start": "1618620",
    "end": "1620360"
  },
  {
    "text": "not profiling that's timing it right",
    "start": "1620360",
    "end": "1622240"
  },
  {
    "text": "what was slow",
    "start": "1622240",
    "end": "1624559"
  },
  {
    "text": "why were you running out of memory like",
    "start": "1624559",
    "end": "1626720"
  },
  {
    "text": "none of those questions were answered I",
    "start": "1626720",
    "end": "1628039"
  },
  {
    "text": "would highly recommend always asking",
    "start": "1628039",
    "end": "1630620"
  },
  {
    "text": "those questions I think it's very very",
    "start": "1630620",
    "end": "1632299"
  },
  {
    "text": "good and lastly I want you to go on",
    "start": "1632299",
    "end": "1634100"
  },
  {
    "text": "Twitter and if you would like you can",
    "start": "1634100",
    "end": "1635960"
  },
  {
    "text": "give this person a follow oh he follows",
    "start": "1635960",
    "end": "1638000"
  },
  {
    "text": "me look at that hey that's a good",
    "start": "1638000",
    "end": "1639740"
  },
  {
    "text": "article though I really did like it I",
    "start": "1639740",
    "end": "1641419"
  },
  {
    "text": "would really love if you could whisper",
    "start": "1641419",
    "end": "1642919"
  },
  {
    "text": "me",
    "start": "1642919",
    "end": "1644000"
  },
  {
    "text": "if you could whisper me what happened",
    "start": "1644000",
    "end": "1646039"
  },
  {
    "text": "and what you changed I would love it I",
    "start": "1646039",
    "end": "1648919"
  },
  {
    "text": "would love to know if you did change",
    "start": "1648919",
    "end": "1650600"
  },
  {
    "text": "data structures and if it's fair to say",
    "start": "1650600",
    "end": "1652340"
  },
  {
    "text": "that still at this point anyways the",
    "start": "1652340",
    "end": "1654679"
  },
  {
    "text": "name",
    "start": "1654679",
    "end": "1655820"
  },
  {
    "text": "is the prime imagine",
    "start": "1655820",
    "end": "1658539"
  }
]