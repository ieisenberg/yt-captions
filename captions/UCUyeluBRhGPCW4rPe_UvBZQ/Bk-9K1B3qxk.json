[
  {
    "text": "didn't I just watch this",
    "start": "120",
    "end": "1979"
  },
  {
    "text": "an option type yeah I I feel like I've",
    "start": "1979",
    "end": "4680"
  },
  {
    "text": "seen this",
    "start": "4680",
    "end": "7160"
  },
  {
    "text": "I mean",
    "start": "7560",
    "end": "9300"
  },
  {
    "text": "the pro so a huge problem with a lot of",
    "start": "9300",
    "end": "11400"
  },
  {
    "text": "this stuff is that",
    "start": "11400",
    "end": "12840"
  },
  {
    "text": "first first off don't use underscores",
    "start": "12840",
    "end": "15120"
  },
  {
    "text": "underscores are Grody okay don't use",
    "start": "15120",
    "end": "16619"
  },
  {
    "text": "underscores don't use underscores",
    "start": "16619",
    "end": "17940"
  },
  {
    "text": "underscores are stupid",
    "start": "17940",
    "end": "19560"
  },
  {
    "text": "um but the thing I don't like about it",
    "start": "19560",
    "end": "22140"
  },
  {
    "text": "in typescript",
    "start": "22140",
    "end": "23939"
  },
  {
    "text": "I want to like it it's that you cannot",
    "start": "23939",
    "end": "26519"
  },
  {
    "text": "add implementations",
    "start": "26519",
    "end": "28740"
  },
  {
    "text": "yeah it's a non-zero cost abstraction",
    "start": "28740",
    "end": "30660"
  },
  {
    "text": "right it's not it's you can't add",
    "start": "30660",
    "end": "33000"
  },
  {
    "text": "implementation functions to it you can",
    "start": "33000",
    "end": "35160"
  },
  {
    "text": "add methods and so I am curious do this",
    "start": "35160",
    "end": "38820"
  },
  {
    "text": "I've been using rust and to me this",
    "start": "38820",
    "end": "41160"
  },
  {
    "text": "sounds a lot like when people use",
    "start": "41160",
    "end": "42180"
  },
  {
    "text": "booleans to represent two states yeah",
    "start": "42180",
    "end": "44219"
  },
  {
    "text": "yeah",
    "start": "44219",
    "end": "45420"
  },
  {
    "text": "yeah just to make it some type I know",
    "start": "45420",
    "end": "47280"
  },
  {
    "text": "exactly I I do like that uh let's let's",
    "start": "47280",
    "end": "49980"
  },
  {
    "text": "look at this I'm actually curious about",
    "start": "49980",
    "end": "51300"
  },
  {
    "text": "this let's find out what this guy has to",
    "start": "51300",
    "end": "52620"
  },
  {
    "text": "say there's a really neat construct of",
    "start": "52620",
    "end": "54780"
  },
  {
    "text": "the language that I want to talk about",
    "start": "54780",
    "end": "56399"
  },
  {
    "text": "today but we're not going to do it in",
    "start": "56399",
    "end": "57719"
  },
  {
    "text": "Rust we're going to pour it to",
    "start": "57719",
    "end": "58800"
  },
  {
    "text": "typescript I'm talking about the option",
    "start": "58800",
    "end": "60180"
  },
  {
    "text": "enum the idea behind the option enum is",
    "start": "60180",
    "end": "61920"
  },
  {
    "text": "that it's a wrapper for a value that may",
    "start": "61920",
    "end": "63359"
  },
  {
    "text": "or may not exist no surprise that we're",
    "start": "63359",
    "end": "64978"
  },
  {
    "text": "going to model this in typescript as a",
    "start": "64979",
    "end": "66299"
  },
  {
    "text": "union and the union is going to be a",
    "start": "66299",
    "end": "68100"
  },
  {
    "text": "union of none and some and this is the",
    "start": "68100",
    "end": "69840"
  },
  {
    "text": "terminology that Russ uses I should say",
    "start": "69840",
    "end": "71040"
  },
  {
    "text": "too that this is not unique to rust",
    "start": "71040",
    "end": "72000"
  },
  {
    "text": "there are a lot of languages that do",
    "start": "72000",
    "end": "72900"
  },
  {
    "text": "something like this so the idea here is",
    "start": "72900",
    "end": "74100"
  },
  {
    "text": "we're going to have this underscore type",
    "start": "74100",
    "end": "75000"
  },
  {
    "text": "field to distinguish between the none",
    "start": "75000",
    "end": "76680"
  },
  {
    "text": "and the sum and the main difference here",
    "start": "76680",
    "end": "78299"
  },
  {
    "text": "is that if we have a sum it has a",
    "start": "78299",
    "end": "79860"
  },
  {
    "text": "particular value and when you have an",
    "start": "79860",
    "end": "80880"
  },
  {
    "text": "option of T you could have nothing",
    "start": "80880",
    "end": "83220"
  },
  {
    "text": "or you could have something and so this",
    "start": "83220",
    "end": "85080"
  },
  {
    "text": "can be really useful in cases where you",
    "start": "85080",
    "end": "86640"
  },
  {
    "text": "may have a value or it might be",
    "start": "86640",
    "end": "87960"
  },
  {
    "text": "undefined or this function could return",
    "start": "87960",
    "end": "89220"
  },
  {
    "text": "something or maybe it throws an error or",
    "start": "89220",
    "end": "90780"
  },
  {
    "text": "this is a promise that",
    "start": "90780",
    "end": "93618"
  },
  {
    "text": "what",
    "start": "93659",
    "end": "96200"
  },
  {
    "text": "can we just agree that no no underscores",
    "start": "96420",
    "end": "100140"
  },
  {
    "text": "probably the best the best score a great",
    "start": "100140",
    "end": "103320"
  },
  {
    "text": "thing called promises",
    "start": "103320",
    "end": "105720"
  },
  {
    "text": "uh if you're gonna do a video about",
    "start": "105720",
    "end": "107460"
  },
  {
    "text": "options and you don't say monad I",
    "start": "107460",
    "end": "109560"
  },
  {
    "text": "dislike no excuse yeah",
    "start": "109560",
    "end": "112200"
  },
  {
    "text": "really",
    "start": "112200",
    "end": "113880"
  },
  {
    "text": "returns a value or it might reject and",
    "start": "113880",
    "end": "115799"
  },
  {
    "text": "this option type can give you a unifying",
    "start": "115799",
    "end": "117600"
  },
  {
    "text": "interface to interact with those",
    "start": "117600",
    "end": "118740"
  },
  {
    "text": "different scenarios I just mentioned and",
    "start": "118740",
    "end": "119939"
  },
  {
    "text": "we can create some helper values here",
    "start": "119939",
    "end": "121140"
  },
  {
    "text": "for creating option objects there's not",
    "start": "121140",
    "end": "122520"
  },
  {
    "text": "really a need to construct new none",
    "start": "122520",
    "end": "124079"
  },
  {
    "text": "values because it's just a hard-coded",
    "start": "124079",
    "end": "125520"
  },
  {
    "text": "value so this is the menu that we can",
    "start": "125520",
    "end": "126960"
  },
  {
    "text": "use we have our non-constant here and it",
    "start": "126960",
    "end": "128580"
  },
  {
    "text": "just is the object you would expect some",
    "start": "128580",
    "end": "129959"
  },
  {
    "text": "on the other hand is a function that",
    "start": "129959",
    "end": "131280"
  },
  {
    "text": "takes an argument and the return type is",
    "start": "131280",
    "end": "132780"
  },
  {
    "text": "a sum of T and we just return a new",
    "start": "132780",
    "end": "134400"
  },
  {
    "text": "object that has our tag here sum and",
    "start": "134400",
    "end": "136560"
  },
  {
    "text": "then the value by the way using Arrow",
    "start": "136560",
    "end": "138720"
  },
  {
    "text": "functions all the time just feels like",
    "start": "138720",
    "end": "140280"
  },
  {
    "text": "such a try hard move like this syntax",
    "start": "140280",
    "end": "142980"
  },
  {
    "text": "sucks",
    "start": "142980",
    "end": "144120"
  },
  {
    "text": "can we agree that returning an object",
    "start": "144120",
    "end": "146280"
  },
  {
    "text": "from an arrow function it just sucks it",
    "start": "146280",
    "end": "149220"
  },
  {
    "text": "just looks stupid it's",
    "start": "149220",
    "end": "153000"
  },
  {
    "text": "it it's it's it's it's just it just",
    "start": "153959",
    "end": "156120"
  },
  {
    "text": "feels like a strong try hard on this",
    "start": "156120",
    "end": "158160"
  },
  {
    "text": "thing",
    "start": "158160",
    "end": "159239"
  },
  {
    "text": "I'm a fan of Arrow functions I like",
    "start": "159239",
    "end": "160800"
  },
  {
    "text": "Arrow functions too",
    "start": "160800",
    "end": "162420"
  },
  {
    "text": "but using them as top level functions is",
    "start": "162420",
    "end": "165720"
  },
  {
    "text": "not the same right",
    "start": "165720",
    "end": "167940"
  },
  {
    "text": "private type amen I mean the thing is is",
    "start": "167940",
    "end": "170819"
  },
  {
    "text": "that there's a difference between this",
    "start": "170819",
    "end": "172140"
  },
  {
    "text": "like you're not really saving anything",
    "start": "172140",
    "end": "174379"
  },
  {
    "text": "dude get Triple X Arrow folks you're not",
    "start": "174379",
    "end": "176940"
  },
  {
    "text": "actually saving anything",
    "start": "176940",
    "end": "179220"
  },
  {
    "text": "doing this right you're not you're most",
    "start": "179220",
    "end": "181680"
  },
  {
    "text": "certainly aren't saving anything at all",
    "start": "181680",
    "end": "184019"
  },
  {
    "text": "and look at this you're even defining a",
    "start": "184019",
    "end": "185879"
  },
  {
    "text": "return type on here you're I mean you're",
    "start": "185879",
    "end": "188940"
  },
  {
    "text": "defining the whole thing like this is",
    "start": "188940",
    "end": "190739"
  },
  {
    "text": "fantastic like just just write a",
    "start": "190739",
    "end": "192239"
  },
  {
    "text": "function",
    "start": "192239",
    "end": "194540"
  },
  {
    "text": "it just makes it easier",
    "start": "195060",
    "end": "197159"
  },
  {
    "text": "right but not uh jokingly functions and",
    "start": "197159",
    "end": "199680"
  },
  {
    "text": "yeah uh uh",
    "start": "199680",
    "end": "201420"
  },
  {
    "text": "function syntax I use for top level",
    "start": "201420",
    "end": "203819"
  },
  {
    "text": "functions",
    "start": "203819",
    "end": "205080"
  },
  {
    "text": "for functions I pass around I think",
    "start": "205080",
    "end": "207360"
  },
  {
    "text": "Arrow functions are fine right that's",
    "start": "207360",
    "end": "209040"
  },
  {
    "text": "kind of where I've got where I've gotten",
    "start": "209040",
    "end": "210540"
  },
  {
    "text": "into uh writing function takes two less",
    "start": "210540",
    "end": "213000"
  },
  {
    "text": "characters right for me it's just all",
    "start": "213000",
    "end": "214620"
  },
  {
    "text": "about Clarity right the fact I see const",
    "start": "214620",
    "end": "217019"
  },
  {
    "text": "sum it's creating a variable",
    "start": "217019",
    "end": "219959"
  },
  {
    "text": "but now we're creating it as a function",
    "start": "219959",
    "end": "221580"
  },
  {
    "text": "like there's just like maybe just",
    "start": "221580",
    "end": "223379"
  },
  {
    "text": "created as a top level function be clear",
    "start": "223379",
    "end": "224879"
  },
  {
    "text": "with what you're trying to do you know",
    "start": "224879",
    "end": "226200"
  },
  {
    "text": "what I mean just be as clear as possible",
    "start": "226200",
    "end": "227459"
  },
  {
    "text": "so now we have some easy ways to",
    "start": "227459",
    "end": "229440"
  },
  {
    "text": "reference a nun and to create a sum now",
    "start": "229440",
    "end": "231120"
  },
  {
    "text": "once you have a wrapper type I also",
    "start": "231120",
    "end": "232500"
  },
  {
    "text": "understand that you can't",
    "start": "232500",
    "end": "234480"
  },
  {
    "text": "that this is a dead fight I understand",
    "start": "234480",
    "end": "236280"
  },
  {
    "text": "it's a dead fight people this is just",
    "start": "236280",
    "end": "238319"
  },
  {
    "text": "what's happening",
    "start": "238319",
    "end": "239459"
  },
  {
    "text": "um",
    "start": "239459",
    "end": "240180"
  },
  {
    "text": "it's gonna it's gonna happen forever",
    "start": "240180",
    "end": "241980"
  },
  {
    "text": "forever ever you know what I mean uh if",
    "start": "241980",
    "end": "244379"
  },
  {
    "text": "you're trying to be as clear as possible",
    "start": "244379",
    "end": "245580"
  },
  {
    "text": "you'd rewrite it in Rust this is very",
    "start": "245580",
    "end": "247319"
  },
  {
    "text": "very true solution linter formatter that",
    "start": "247319",
    "end": "249900"
  },
  {
    "text": "dominates everybody",
    "start": "249900",
    "end": "251459"
  },
  {
    "text": "I saw a video that said creating",
    "start": "251459",
    "end": "252840"
  },
  {
    "text": "functions like that and normal functions",
    "start": "252840",
    "end": "254519"
  },
  {
    "text": "are functionally different they are",
    "start": "254519",
    "end": "255659"
  },
  {
    "text": "functionally different uh these wrapper",
    "start": "255659",
    "end": "258000"
  },
  {
    "text": "functions actually lexically bind to",
    "start": "258000",
    "end": "260340"
  },
  {
    "text": "this whereas regular functions don't so",
    "start": "260340",
    "end": "263160"
  },
  {
    "text": "passing in an arrow function and you're",
    "start": "263160",
    "end": "264840"
  },
  {
    "text": "referring to this gives you the ability",
    "start": "264840",
    "end": "266340"
  },
  {
    "text": "to refer to this whereas if you passion",
    "start": "266340",
    "end": "268199"
  },
  {
    "text": "a function that's an anonymous function",
    "start": "268199",
    "end": "269820"
  },
  {
    "text": "you can't actually bind to this you bind",
    "start": "269820",
    "end": "271560"
  },
  {
    "text": "to the global scope of this like they",
    "start": "271560",
    "end": "273900"
  },
  {
    "text": "are non-functionally equivalent like",
    "start": "273900",
    "end": "276360"
  },
  {
    "text": "this or an envelope if you will that we",
    "start": "276360",
    "end": "278040"
  },
  {
    "text": "can put a value inside of it's kind of",
    "start": "278040",
    "end": "279300"
  },
  {
    "text": "two things you want to be able to do",
    "start": "279300",
    "end": "280259"
  },
  {
    "text": "right the first one of course is we need",
    "start": "280259",
    "end": "282180"
  },
  {
    "text": "to be able to create these and the",
    "start": "282180",
    "end": "283500"
  },
  {
    "text": "second thing of course is that we need",
    "start": "283500",
    "end": "284639"
  },
  {
    "text": "to be able to consume them let's create",
    "start": "284639",
    "end": "285780"
  },
  {
    "text": "a couple I do want to take a step back",
    "start": "285780",
    "end": "287160"
  },
  {
    "text": "here for a quick second having keyboard",
    "start": "287160",
    "end": "288720"
  },
  {
    "text": "sounds 100 IQ okay it proves he's really",
    "start": "288720",
    "end": "291060"
  },
  {
    "text": "typing okay",
    "start": "291060",
    "end": "292620"
  },
  {
    "text": "of functions that make it easy to create",
    "start": "292620",
    "end": "294360"
  },
  {
    "text": "or put values into an option and also to",
    "start": "294360",
    "end": "296759"
  },
  {
    "text": "consume more pull those values out of",
    "start": "296759",
    "end": "298080"
  },
  {
    "text": "the option so I mentioned earlier a",
    "start": "298080",
    "end": "299220"
  },
  {
    "text": "couple of scenarios where you might have",
    "start": "299220",
    "end": "300419"
  },
  {
    "text": "a value or you might not and one of",
    "start": "300419",
    "end": "301979"
  },
  {
    "text": "those is if you have some function that",
    "start": "301979",
    "end": "303000"
  },
  {
    "text": "throws an error wouldn't it be great if",
    "start": "303000",
    "end": "304199"
  },
  {
    "text": "instead of throwing an error we could",
    "start": "304199",
    "end": "305160"
  },
  {
    "text": "just get back a none instead sometimes",
    "start": "305160",
    "end": "306419"
  },
  {
    "text": "we don't really care about that error we",
    "start": "306419",
    "end": "307500"
  },
  {
    "text": "just want to know did I get my value",
    "start": "307500",
    "end": "308699"
  },
  {
    "text": "back or not so to do that let's create a",
    "start": "308699",
    "end": "310139"
  },
  {
    "text": "function here called optional catch now",
    "start": "310139",
    "end": "311400"
  },
  {
    "text": "this optional catch takes a function",
    "start": "311400",
    "end": "312720"
  },
  {
    "text": "that returns some type T optional cat",
    "start": "312720",
    "end": "314460"
  },
  {
    "text": "will return you an option of T and then",
    "start": "314460",
    "end": "315840"
  },
  {
    "text": "of course in here we just have a try",
    "start": "315840",
    "end": "316740"
  },
  {
    "text": "cache and we call the function that gets",
    "start": "316740",
    "end": "317880"
  },
  {
    "text": "passed in and if that function Returns",
    "start": "317880",
    "end": "319259"
  },
  {
    "text": "the value of type t as we would expect",
    "start": "319259",
    "end": "320639"
  },
  {
    "text": "then we can create a sum and return that",
    "start": "320639",
    "end": "322259"
  },
  {
    "text": "if instead it throws an error we'll just",
    "start": "322259",
    "end": "323580"
  },
  {
    "text": "catch that error and we'll return none",
    "start": "323580",
    "end": "324840"
  },
  {
    "text": "instead so for example here we could",
    "start": "324840",
    "end": "326160"
  },
  {
    "text": "create a function called greet and it's",
    "start": "326160",
    "end": "327720"
  },
  {
    "text": "really simple to have this return hello",
    "start": "327720",
    "end": "328979"
  },
  {
    "text": "name but maybe let's say we don't want",
    "start": "328979",
    "end": "330720"
  },
  {
    "text": "to greet anyone named Andrew so we could",
    "start": "330720",
    "end": "332520"
  },
  {
    "text": "say if name equals Andrew then inside",
    "start": "332520",
    "end": "334020"
  },
  {
    "text": "Andrew we'll throw an error and so we",
    "start": "334020",
    "end": "335400"
  },
  {
    "text": "either get our greeting or we don't so",
    "start": "335400",
    "end": "336600"
  },
  {
    "text": "what we can do now is create a variable",
    "start": "336600",
    "end": "337860"
  },
  {
    "text": "here and we'll call this maybe green",
    "start": "337860",
    "end": "339360"
  },
  {
    "text": "optional catch let's just say greet",
    "start": "339360",
    "end": "341520"
  },
  {
    "text": "Andrew and so if we look at the type of",
    "start": "341520",
    "end": "342660"
  },
  {
    "text": "maybe greeting here we can see that it",
    "start": "342660",
    "end": "343680"
  },
  {
    "text": "is an option of string which means there",
    "start": "343680",
    "end": "344820"
  },
  {
    "text": "might be a string in here and we'll look",
    "start": "344820",
    "end": "346020"
  },
  {
    "text": "at how we can get that value out a bit",
    "start": "346020",
    "end": "347160"
  },
  {
    "text": "later when we look at our consumes but",
    "start": "347160",
    "end": "348180"
  },
  {
    "text": "for now we successfully handle the error",
    "start": "348180",
    "end": "349320"
  },
  {
    "text": "and we captured our value now another",
    "start": "349320",
    "end": "350520"
  },
  {
    "text": "common scenario for possibly getting a",
    "start": "350520",
    "end": "351900"
  },
  {
    "text": "value back is when you're",
    "start": "351900",
    "end": "353100"
  },
  {
    "text": "hold on my beautiful wife's calling me",
    "start": "353100",
    "end": "355620"
  },
  {
    "text": "okay when she calls me I I gotta answer",
    "start": "355620",
    "end": "357660"
  },
  {
    "text": "hello",
    "start": "357660",
    "end": "359220"
  },
  {
    "text": "she hung up on me",
    "start": "359220",
    "end": "362160"
  },
  {
    "text": "I'm over here answering phone calls",
    "start": "362160",
    "end": "364080"
  },
  {
    "text": "being a",
    "start": "364080",
    "end": "367039"
  },
  {
    "text": "it's 1.5 x speed I'm not watching things",
    "start": "367919",
    "end": "370740"
  },
  {
    "text": "I'm a programmer hey what's up great all",
    "start": "370740",
    "end": "373620"
  },
  {
    "text": "right here we go",
    "start": "373620",
    "end": "374580"
  },
  {
    "text": "and Promises so maybe we want to have an",
    "start": "374580",
    "end": "376139"
  },
  {
    "text": "optional resolve a function as well so",
    "start": "376139",
    "end": "377520"
  },
  {
    "text": "we can wrap a promise result in an",
    "start": "377520",
    "end": "379020"
  },
  {
    "text": "option so this is our optional resolve",
    "start": "379020",
    "end": "380699"
  },
  {
    "text": "here it takes some promise of type T and",
    "start": "380699",
    "end": "382500"
  },
  {
    "text": "it returns a promise of option of T now",
    "start": "382500",
    "end": "384300"
  },
  {
    "text": "that might feel like we're going the",
    "start": "384300",
    "end": "385199"
  },
  {
    "text": "opposite direction because we now have",
    "start": "385199",
    "end": "386340"
  },
  {
    "text": "more rappers on our T value but because",
    "start": "386340",
    "end": "387900"
  },
  {
    "text": "we're taking a promise and you have to",
    "start": "387900",
    "end": "388800"
  },
  {
    "text": "await it there's no way we can return",
    "start": "388800",
    "end": "389880"
  },
  {
    "text": "anything but a promise from this",
    "start": "389880",
    "end": "390960"
  },
  {
    "text": "function the nice thing",
    "start": "390960",
    "end": "393680"
  },
  {
    "text": "foreign",
    "start": "394919",
    "end": "396840"
  },
  {
    "text": "besides for a basic designs decision I",
    "start": "396840",
    "end": "399900"
  },
  {
    "text": "see where he's going with this one",
    "start": "399900",
    "end": "402419"
  },
  {
    "text": "we haven't watched CT CT oh wait what",
    "start": "402419",
    "end": "405000"
  },
  {
    "text": "hold on just stopping though is that",
    "start": "405000",
    "end": "406919"
  },
  {
    "text": "when we have something like our optional",
    "start": "406919",
    "end": "408120"
  },
  {
    "text": "result here we can know that when P",
    "start": "408120",
    "end": "409440"
  },
  {
    "text": "might reject promise of option of T is",
    "start": "409440",
    "end": "411419"
  },
  {
    "text": "never going to reject in the case of our",
    "start": "411419",
    "end": "412500"
  },
  {
    "text": "catch here we don't reject it said we'll",
    "start": "412500",
    "end": "414060"
  },
  {
    "text": "just resolve with a nun instead and so",
    "start": "414060",
    "end": "415740"
  },
  {
    "text": "our code execution will continue until",
    "start": "415740",
    "end": "417120"
  },
  {
    "text": "we actually need to inspect this value",
    "start": "417120",
    "end": "418259"
  },
  {
    "text": "but we don't get interrupted by an error",
    "start": "418259",
    "end": "419699"
  },
  {
    "text": "I've written this in a way that's pretty",
    "start": "419699",
    "end": "420780"
  },
  {
    "text": "similar to what we did up here with our",
    "start": "420780",
    "end": "421919"
  },
  {
    "text": "optional catch unfortunately because of",
    "start": "421919",
    "end": "423300"
  },
  {
    "text": "the way so something that's I think kind",
    "start": "423300",
    "end": "424860"
  },
  {
    "text": "of interesting about at least the sum",
    "start": "424860",
    "end": "426960"
  },
  {
    "text": "call this sum call right here will",
    "start": "426960",
    "end": "429479"
  },
  {
    "text": "effectively never be optimized inside of",
    "start": "429479",
    "end": "431759"
  },
  {
    "text": "the JavaScript engine because T value",
    "start": "431759",
    "end": "433800"
  },
  {
    "text": "changes so that's one kind of",
    "start": "433800",
    "end": "435000"
  },
  {
    "text": "interesting thing is you kind of destroy",
    "start": "435000",
    "end": "436500"
  },
  {
    "text": "your monomorphism or whatever they call",
    "start": "436500",
    "end": "438180"
  },
  {
    "text": "it uh which means you could get",
    "start": "438180",
    "end": "440759"
  },
  {
    "text": "optimized de-optimized",
    "start": "440759",
    "end": "442800"
  },
  {
    "text": "some semi-regularly kind of an",
    "start": "442800",
    "end": "445199"
  },
  {
    "text": "interesting thing having these type of",
    "start": "445199",
    "end": "446340"
  },
  {
    "text": "functions around",
    "start": "446340",
    "end": "447479"
  },
  {
    "text": "promises work there's not really a way",
    "start": "447479",
    "end": "448800"
  },
  {
    "text": "for us to combine these I guess you",
    "start": "448800",
    "end": "450000"
  },
  {
    "text": "could also choose to write this with",
    "start": "450000",
    "end": "450900"
  },
  {
    "text": "then and catch instead so we could do",
    "start": "450900",
    "end": "452520"
  },
  {
    "text": "something like return P dot then and get",
    "start": "452520",
    "end": "455039"
  },
  {
    "text": "a value out of p and then so we can",
    "start": "455039",
    "end": "456660"
  },
  {
    "text": "return some of the otherwise if we catch",
    "start": "456660",
    "end": "458520"
  },
  {
    "text": "we can just return none so this is kind",
    "start": "458520",
    "end": "460680"
  },
  {
    "text": "of a little bit more succinct",
    "start": "460680",
    "end": "462380"
  },
  {
    "text": "you can see that this also matches our",
    "start": "462380",
    "end": "464520"
  },
  {
    "text": "types",
    "start": "464520",
    "end": "465900"
  },
  {
    "text": "sorry I don't have enough money for a",
    "start": "465900",
    "end": "467460"
  },
  {
    "text": "tooth never say that never say you're",
    "start": "467460",
    "end": "468840"
  },
  {
    "text": "sorry I appreciate your support",
    "start": "468840",
    "end": "470720"
  },
  {
    "text": "wholeheartedly uh just curious did the",
    "start": "470720",
    "end": "473340"
  },
  {
    "text": "combo with Theo yesterday make you feel",
    "start": "473340",
    "end": "474720"
  },
  {
    "text": "a tad uncomfy feels like disagreeing",
    "start": "474720",
    "end": "476580"
  },
  {
    "text": "with the friends can be tough uh I don't",
    "start": "476580",
    "end": "478740"
  },
  {
    "text": "feel I I don't feel I I don't feel",
    "start": "478740",
    "end": "480479"
  },
  {
    "text": "uncomfortable about it um I think that",
    "start": "480479",
    "end": "482280"
  },
  {
    "text": "me and Theo will probably never see eye",
    "start": "482280",
    "end": "483960"
  },
  {
    "text": "to eye on this one",
    "start": "483960",
    "end": "485400"
  },
  {
    "text": "um",
    "start": "485400",
    "end": "487139"
  },
  {
    "text": "I can't make any guesses as to how we",
    "start": "487139",
    "end": "489599"
  },
  {
    "text": "have arrived to two different",
    "start": "489599",
    "end": "490380"
  },
  {
    "text": "conclusions uh but we just have arrived",
    "start": "490380",
    "end": "493319"
  },
  {
    "text": "to two different collusion conclusions I",
    "start": "493319",
    "end": "495120"
  },
  {
    "text": "don't know",
    "start": "495120",
    "end": "496740"
  },
  {
    "text": "I don't know this is maybe a little bit",
    "start": "496740",
    "end": "498599"
  },
  {
    "text": "easier to read depending on the type of",
    "start": "498599",
    "end": "499740"
  },
  {
    "text": "code you like to write what we can do to",
    "start": "499740",
    "end": "501060"
  },
  {
    "text": "actually give this a quick test is we",
    "start": "501060",
    "end": "503039"
  },
  {
    "text": "can say maybe count optional resolve and",
    "start": "503039",
    "end": "504900"
  },
  {
    "text": "we can have promise.resolve of 34 in",
    "start": "504900",
    "end": "507180"
  },
  {
    "text": "there if we hover over maybe count we",
    "start": "507180",
    "end": "508500"
  },
  {
    "text": "can see that we get a promise of option",
    "start": "508500",
    "end": "510000"
  },
  {
    "text": "of number back now the other thing we",
    "start": "510000",
    "end": "511379"
  },
  {
    "text": "could do here is more likely we would be",
    "start": "511379",
    "end": "513240"
  },
  {
    "text": "doing this inside of some kind of async",
    "start": "513240",
    "end": "514860"
  },
  {
    "text": "function like this and I would probably",
    "start": "514860",
    "end": "516360"
  },
  {
    "text": "have on a weight on here and this and",
    "start": "516360",
    "end": "517620"
  },
  {
    "text": "now is going to be an option of number",
    "start": "517620",
    "end": "518700"
  },
  {
    "text": "and so the await of course unwraps that",
    "start": "518700",
    "end": "520020"
  },
  {
    "text": "promise for us now handling an error",
    "start": "520020",
    "end": "521339"
  },
  {
    "text": "that's thrown or a promise that's been",
    "start": "521339",
    "end": "522479"
  },
  {
    "text": "rejected are two common cases but so one",
    "start": "522479",
    "end": "524820"
  },
  {
    "text": "thing I say that's kind of interesting",
    "start": "524820",
    "end": "525839"
  },
  {
    "text": "about this is that at least so far he",
    "start": "525839",
    "end": "528000"
  },
  {
    "text": "hasn't talked about this but value",
    "start": "528000",
    "end": "529200"
  },
  {
    "text": "lifting and typescript is",
    "start": "529200",
    "end": "531240"
  },
  {
    "text": "not as good",
    "start": "531240",
    "end": "533279"
  },
  {
    "text": "um",
    "start": "533279",
    "end": "535279"
  },
  {
    "text": "because you don't yeah you just don't",
    "start": "538200",
    "end": "539459"
  },
  {
    "text": "have a lift operation right you don't",
    "start": "539459",
    "end": "540600"
  },
  {
    "text": "have match or pattern matching and so I",
    "start": "540600",
    "end": "542279"
  },
  {
    "text": "feel like this is kind of difficulty",
    "start": "542279",
    "end": "545459"
  },
  {
    "text": "you know what I mean",
    "start": "545459",
    "end": "548040"
  },
  {
    "text": "I mean like I feel like wrapping these",
    "start": "548040",
    "end": "550019"
  },
  {
    "text": "it's the the one reason why I haven't",
    "start": "550019",
    "end": "551459"
  },
  {
    "text": "really ever liked this idea of being",
    "start": "551459",
    "end": "553380"
  },
  {
    "text": "available in JavaScript because there",
    "start": "553380",
    "end": "555899"
  },
  {
    "text": "isn't the mechanisms to work with it",
    "start": "555899",
    "end": "557640"
  },
  {
    "text": "nicely uh you don't have like a nice",
    "start": "557640",
    "end": "559680"
  },
  {
    "text": "concept around it uh pattern it feels",
    "start": "559680",
    "end": "562380"
  },
  {
    "text": "like pattern matching is extremely",
    "start": "562380",
    "end": "565800"
  },
  {
    "text": "needed for this but I don't know maybe",
    "start": "565800",
    "end": "568560"
  },
  {
    "text": "I'm wrong Maybe I'm Wrong here you could",
    "start": "568560",
    "end": "570120"
  },
  {
    "text": "also Imagine wanting to create optionals",
    "start": "570120",
    "end": "571320"
  },
  {
    "text": "around your own specific business logic",
    "start": "571320",
    "end": "572580"
  },
  {
    "text": "and for that we can create what I'm",
    "start": "572580",
    "end": "574320"
  },
  {
    "text": "going to call too optional this is a",
    "start": "574320",
    "end": "575700"
  },
  {
    "text": "function that returns one of these",
    "start": "575700",
    "end": "577380"
  },
  {
    "text": "option creating functions so the way",
    "start": "577380",
    "end": "578880"
  },
  {
    "text": "this works is two optional has two",
    "start": "578880",
    "end": "580080"
  },
  {
    "text": "generic arguments here ino for input and",
    "start": "580080",
    "end": "582060"
  },
  {
    "text": "output right and these are the types",
    "start": "582060",
    "end": "583080"
  },
  {
    "text": "that we expect to receive and the type",
    "start": "583080",
    "end": "584519"
  },
  {
    "text": "that we expect to put into the option",
    "start": "584519",
    "end": "585720"
  },
  {
    "text": "now the way this works is that we expect",
    "start": "585720",
    "end": "586680"
  },
  {
    "text": "the output to be a subset of the input",
    "start": "586680",
    "end": "588420"
  },
  {
    "text": "and we can encode that by saying oh",
    "start": "588420",
    "end": "589860"
  },
  {
    "text": "extends I if you're not sure what I mean",
    "start": "589860",
    "end": "591360"
  },
  {
    "text": "here think about the scenario where",
    "start": "591360",
    "end": "592260"
  },
  {
    "text": "maybe you have a value that could be",
    "start": "592260",
    "end": "593459"
  },
  {
    "text": "null or undefined or a string and you",
    "start": "593459",
    "end": "595080"
  },
  {
    "text": "want an option of string I hate that",
    "start": "595080",
    "end": "597180"
  },
  {
    "text": "example already I don't want null or",
    "start": "597180",
    "end": "599279"
  },
  {
    "text": "undefined or a string maybe you have",
    "start": "599279",
    "end": "601140"
  },
  {
    "text": "something that could be a negative or a",
    "start": "601140",
    "end": "602519"
  },
  {
    "text": "positive number and you want it to be an",
    "start": "602519",
    "end": "603600"
  },
  {
    "text": "option of a positive number in this case",
    "start": "603600",
    "end": "604920"
  },
  {
    "text": "I might be all numbers and O might be",
    "start": "604920",
    "end": "606779"
  },
  {
    "text": "only positive numbers and so to",
    "start": "606779",
    "end": "607980"
  },
  {
    "text": "determine that narrowing we take some",
    "start": "607980",
    "end": "609240"
  },
  {
    "text": "function here that takes an i and",
    "start": "609240",
    "end": "610620"
  },
  {
    "text": "returns a Boolean and if that is true",
    "start": "610620",
    "end": "612360"
  },
  {
    "text": "then we are saying here that I is O so",
    "start": "612360",
    "end": "615000"
  },
  {
    "text": "that means our our value here I is of",
    "start": "615000",
    "end": "617580"
  },
  {
    "text": "type O and so then this returns a",
    "start": "617580",
    "end": "618899"
  },
  {
    "text": "function that takes an argument of type",
    "start": "618899",
    "end": "620220"
  },
  {
    "text": "I and returns an option of type O and we",
    "start": "620220",
    "end": "622260"
  },
  {
    "text": "could write this in a single line as you",
    "start": "622260",
    "end": "623279"
  },
  {
    "text": "can see here I've got commented out we",
    "start": "623279",
    "end": "624600"
  },
  {
    "text": "can just say if function of argument",
    "start": "624600",
    "end": "625800"
  },
  {
    "text": "true then we have some otherwise we have",
    "start": "625800",
    "end": "627480"
  },
  {
    "text": "none however why not include some try",
    "start": "627480",
    "end": "629279"
  },
  {
    "text": "catch I guess actually one way that we",
    "start": "629279",
    "end": "630779"
  },
  {
    "text": "could make this a little bit smaller is",
    "start": "630779",
    "end": "632040"
  },
  {
    "text": "I could put this in here in my try catch",
    "start": "632040",
    "end": "633720"
  },
  {
    "text": "may as well offer some free error",
    "start": "633720",
    "end": "635100"
  },
  {
    "text": "handling while you're at it but of",
    "start": "635100",
    "end": "636360"
  },
  {
    "text": "course that's up to you now let's create",
    "start": "636360",
    "end": "637560"
  },
  {
    "text": "an example error handling is not free",
    "start": "637560",
    "end": "639480"
  },
  {
    "text": "simple usage of this and let's go with",
    "start": "639480",
    "end": "641459"
  },
  {
    "text": "one of those use cases I mentioned",
    "start": "641459",
    "end": "642420"
  },
  {
    "text": "earlier where we want to filter out null",
    "start": "642420",
    "end": "644160"
  },
  {
    "text": "or undefined values so let's create",
    "start": "644160",
    "end": "645660"
  },
  {
    "text": "something here we're going to call",
    "start": "645660",
    "end": "646440"
  },
  {
    "text": "optional defined and we need to call to",
    "start": "646440",
    "end": "648000"
  },
  {
    "text": "optional and we know that we need to",
    "start": "648000",
    "end": "649260"
  },
  {
    "text": "pass it some kind of function here we",
    "start": "649260",
    "end": "651180"
  },
  {
    "text": "want this to work for kind of any type",
    "start": "651180",
    "end": "652680"
  },
  {
    "text": "like you know string or undefined number",
    "start": "652680",
    "end": "654000"
  },
  {
    "text": "undefined that type of thing so we're",
    "start": "654000",
    "end": "655140"
  },
  {
    "text": "going to need some generic T here this",
    "start": "655140",
    "end": "656519"
  },
  {
    "text": "is going to take an argument that is T",
    "start": "656519",
    "end": "657660"
  },
  {
    "text": "or undefined or no and then this",
    "start": "657660",
    "end": "660120"
  },
  {
    "text": "function can return if R is not equal to",
    "start": "660120",
    "end": "662519"
  },
  {
    "text": "null now notice that this isn't type",
    "start": "662519",
    "end": "663779"
  },
  {
    "text": "checking just yet and for better for",
    "start": "663779",
    "end": "664980"
  },
  {
    "text": "worst typescript needs us to include the",
    "start": "664980",
    "end": "666540"
  },
  {
    "text": "return type here we're going to say ARG",
    "start": "666540",
    "end": "668100"
  },
  {
    "text": "is T and so basically what this means if",
    "start": "668100",
    "end": "669959"
  },
  {
    "text": "ARG is not null are undefined then ARG",
    "start": "669959",
    "end": "672000"
  },
  {
    "text": "is of type t one case where I know we",
    "start": "672000",
    "end": "673920"
  },
  {
    "text": "get undefined or null is when you pop",
    "start": "673920",
    "end": "675120"
  },
  {
    "text": "something out of an array so for example",
    "start": "675120",
    "end": "676320"
  },
  {
    "text": "let's create a quick array here with a",
    "start": "676320",
    "end": "677820"
  },
  {
    "text": "couple of numbers in it and we can grab",
    "start": "677820",
    "end": "679320"
  },
  {
    "text": "a value out of that right if we do",
    "start": "679320",
    "end": "680880"
  },
  {
    "text": "array.pop now if I hover over B you can",
    "start": "680880",
    "end": "682740"
  },
  {
    "text": "see that it's either a number or",
    "start": "682740",
    "end": "684000"
  },
  {
    "text": "undefined which makes sense because when",
    "start": "684000",
    "end": "685500"
  },
  {
    "text": "you pop your we don't really know how",
    "start": "685500",
    "end": "686399"
  },
  {
    "text": "many values are left in the array if we",
    "start": "686399",
    "end": "687899"
  },
  {
    "text": "wrap this in optional to find then what",
    "start": "687899",
    "end": "690360"
  },
  {
    "text": "we should get back instead is an option",
    "start": "690360",
    "end": "691740"
  },
  {
    "text": "of number Okay so we've looked at a",
    "start": "691740",
    "end": "693240"
  },
  {
    "text": "couple of ways that we can create these",
    "start": "693240",
    "end": "696680"
  },
  {
    "text": "welcome to Costco I love you",
    "start": "697019",
    "end": "700860"
  },
  {
    "text": "hey I love you too MSP at Ms MPS",
    "start": "700860",
    "end": "706140"
  },
  {
    "text": "um",
    "start": "706140",
    "end": "708180"
  },
  {
    "text": "you know again I like I mean",
    "start": "708180",
    "end": "710100"
  },
  {
    "text": "I get where he's coming from with this",
    "start": "710100",
    "end": "711660"
  },
  {
    "text": "which is trying to figure out",
    "start": "711660",
    "end": "715320"
  },
  {
    "text": "why are just trying to include options",
    "start": "715320",
    "end": "717899"
  },
  {
    "text": "right because options are a superior",
    "start": "717899",
    "end": "719579"
  },
  {
    "text": "version of undefined slash null I think",
    "start": "719579",
    "end": "721980"
  },
  {
    "text": "most people can be on that side of the",
    "start": "721980",
    "end": "724500"
  },
  {
    "text": "table meaning that uh it seems to make a",
    "start": "724500",
    "end": "727860"
  },
  {
    "text": "lot of money a wall tanker thank you",
    "start": "727860",
    "end": "730380"
  },
  {
    "text": "very much I appreciate that let's go",
    "start": "730380",
    "end": "731880"
  },
  {
    "text": "nine months on Twitch Prime's hard and",
    "start": "731880",
    "end": "733980"
  },
  {
    "text": "so like I totally feel that but it's",
    "start": "733980",
    "end": "735300"
  },
  {
    "text": "just like I don't think I'd want this in",
    "start": "735300",
    "end": "737519"
  },
  {
    "text": "my code base",
    "start": "737519",
    "end": "738660"
  },
  {
    "text": "you know what I mean I don't think I'd",
    "start": "738660",
    "end": "740459"
  },
  {
    "text": "want this to be around in my code base I",
    "start": "740459",
    "end": "742980"
  },
  {
    "text": "don't think I'd want to include a",
    "start": "742980",
    "end": "744420"
  },
  {
    "text": "library using these kind of things uh",
    "start": "744420",
    "end": "746519"
  },
  {
    "text": "first off one thing I just don't like",
    "start": "746519",
    "end": "747660"
  },
  {
    "text": "which we can't see right here is just",
    "start": "747660",
    "end": "748920"
  },
  {
    "text": "there's a lot of error catching and",
    "start": "748920",
    "end": "751440"
  },
  {
    "text": "options aren't necessarily meant to",
    "start": "751440",
    "end": "753660"
  },
  {
    "text": "capture an error do you know what I mean",
    "start": "753660",
    "end": "757019"
  },
  {
    "text": "they're not meant to capture an error",
    "start": "757019",
    "end": "758940"
  },
  {
    "text": "they're meant to describe if something",
    "start": "758940",
    "end": "760500"
  },
  {
    "text": "does not exist or does exist and so you",
    "start": "760500",
    "end": "763800"
  },
  {
    "text": "know like this whole thing that's going",
    "start": "763800",
    "end": "765899"
  },
  {
    "text": "on is is a little bit uh",
    "start": "765899",
    "end": "768420"
  },
  {
    "text": "you know like maybe it's just his",
    "start": "768420",
    "end": "770639"
  },
  {
    "text": "example but it feels it feels goofy you",
    "start": "770639",
    "end": "773639"
  },
  {
    "text": "know what I mean like I wouldn't want",
    "start": "773639",
    "end": "774899"
  },
  {
    "text": "this because I feel like it at least",
    "start": "774899",
    "end": "777000"
  },
  {
    "text": "this specific implementation would just",
    "start": "777000",
    "end": "778500"
  },
  {
    "text": "like hide everything right he's a yeah",
    "start": "778500",
    "end": "780420"
  },
  {
    "text": "he's he has conflating exceptions and",
    "start": "780420",
    "end": "781860"
  },
  {
    "text": "undefined in this example yeah and so it",
    "start": "781860",
    "end": "784680"
  },
  {
    "text": "just feels dangerous you know what I",
    "start": "784680",
    "end": "786899"
  },
  {
    "text": "mean I want",
    "start": "786899",
    "end": "789800"
  },
  {
    "text": "I don't think I want optionals right now",
    "start": "790019",
    "end": "792000"
  },
  {
    "text": "in typescript until there's a mechanism",
    "start": "792000",
    "end": "793700"
  },
  {
    "text": "to work with them well like you can have",
    "start": "793700",
    "end": "796980"
  },
  {
    "text": "types but you cannot you cannot attach",
    "start": "796980",
    "end": "799139"
  },
  {
    "text": "uh implementations and I hate that right",
    "start": "799139",
    "end": "801480"
  },
  {
    "text": "so there's not really like",
    "start": "801480",
    "end": "803940"
  },
  {
    "text": "doing this really high programmatic",
    "start": "803940",
    "end": "805740"
  },
  {
    "text": "types meaning you have like this type",
    "start": "805740",
    "end": "807440"
  },
  {
    "text": "hierarchy that you build and then you",
    "start": "807440",
    "end": "809760"
  },
  {
    "text": "have to also build the same type",
    "start": "809760",
    "end": "811620"
  },
  {
    "text": "hierarchy but you have to use it and",
    "start": "811620",
    "end": "813720"
  },
  {
    "text": "build it in code so it's like you get no",
    "start": "813720",
    "end": "815220"
  },
  {
    "text": "advantage of using all these types uh",
    "start": "815220",
    "end": "820139"
  },
  {
    "text": "yeah it just seems Seems",
    "start": "822899",
    "end": "826139"
  },
  {
    "text": "frustrating",
    "start": "826139",
    "end": "827820"
  },
  {
    "text": "um you know rust has its own problems I",
    "start": "827820",
    "end": "829980"
  },
  {
    "text": "I most certainly don't think that um",
    "start": "829980",
    "end": "833760"
  },
  {
    "text": "you can extend through interface but",
    "start": "833760",
    "end": "835440"
  },
  {
    "text": "that's I mean that's so dangerous right",
    "start": "835440",
    "end": "837060"
  },
  {
    "text": "that's like typescript's worst features",
    "start": "837060",
    "end": "839160"
  },
  {
    "text": "one of them extends through interface to",
    "start": "839160",
    "end": "842160"
  },
  {
    "text": "any right",
    "start": "842160",
    "end": "844200"
  },
  {
    "text": "um",
    "start": "844200",
    "end": "846200"
  },
  {
    "text": "extend through interfaces they're so",
    "start": "846240",
    "end": "848279"
  },
  {
    "text": "dangerous",
    "start": "848279",
    "end": "849959"
  },
  {
    "text": "it's just so dangerous it really is is",
    "start": "849959",
    "end": "852180"
  },
  {
    "text": "the fact that if you don't even realize",
    "start": "852180",
    "end": "854220"
  },
  {
    "text": "it right like hey thank you uh Jay Galt",
    "start": "854220",
    "end": "856800"
  },
  {
    "text": "I appreciate that uh if I'm not mistaken",
    "start": "856800",
    "end": "859079"
  },
  {
    "text": "I think this should just work uh let's",
    "start": "859079",
    "end": "861000"
  },
  {
    "text": "just find out really quickly so there is",
    "start": "861000",
    "end": "862740"
  },
  {
    "text": "actually something called a node right",
    "start": "862740",
    "end": "864240"
  },
  {
    "text": "this is an interface that's available",
    "start": "864240",
    "end": "865620"
  },
  {
    "text": "right here right and so if I'm not",
    "start": "865620",
    "end": "868079"
  },
  {
    "text": "mistaken I believe let's just see if",
    "start": "868079",
    "end": "869760"
  },
  {
    "text": "this one works let's see if I can do",
    "start": "869760",
    "end": "871019"
  },
  {
    "text": "this one interface uh node uh bar baz is",
    "start": "871019",
    "end": "875279"
  },
  {
    "text": "a number right and so now what I have",
    "start": "875279",
    "end": "879180"
  },
  {
    "text": "just done is that this is something that",
    "start": "879180",
    "end": "881459"
  },
  {
    "text": "is totally used by something else right",
    "start": "881459",
    "end": "883860"
  },
  {
    "text": "something like this uh TS ignore",
    "start": "883860",
    "end": "887579"
  },
  {
    "text": "um oopsies we're gonna oh my goodness uh",
    "start": "887579",
    "end": "889680"
  },
  {
    "text": "do that and go let uh Foo up wrong",
    "start": "889680",
    "end": "891839"
  },
  {
    "text": "language",
    "start": "891839",
    "end": "892740"
  },
  {
    "text": "cons this thing equals node get node",
    "start": "892740",
    "end": "894959"
  },
  {
    "text": "right this function doesn't exist",
    "start": "894959",
    "end": "896040"
  },
  {
    "text": "whatever we're just going to say it",
    "start": "896040",
    "end": "897300"
  },
  {
    "text": "exists and it returns type that is that",
    "start": "897300",
    "end": "899459"
  },
  {
    "text": "now I have bar bats right like I didn't",
    "start": "899459",
    "end": "901980"
  },
  {
    "text": "mean to accidentally",
    "start": "901980",
    "end": "904320"
  },
  {
    "text": "add a definition to something that",
    "start": "904320",
    "end": "906540"
  },
  {
    "text": "already exists I just tried to create my",
    "start": "906540",
    "end": "908160"
  },
  {
    "text": "own node interface and so like I kind of",
    "start": "908160",
    "end": "910320"
  },
  {
    "text": "I just hate that right it just feels",
    "start": "910320",
    "end": "913440"
  },
  {
    "text": "super",
    "start": "913440",
    "end": "915320"
  },
  {
    "text": "dangerous you know what I mean it just",
    "start": "915320",
    "end": "917880"
  },
  {
    "text": "feels like that's just like a Surefire",
    "start": "917880",
    "end": "919800"
  },
  {
    "text": "way to actually end up trying to debug a",
    "start": "919800",
    "end": "922440"
  },
  {
    "text": "problem for a long time",
    "start": "922440",
    "end": "925199"
  },
  {
    "text": "you know what I mean",
    "start": "925199",
    "end": "928100"
  },
  {
    "text": "yeah well the problem with it is that",
    "start": "930060",
    "end": "932160"
  },
  {
    "text": "you can't it's it's not adding",
    "start": "932160",
    "end": "934620"
  },
  {
    "text": "implementation details it's adding it's",
    "start": "934620",
    "end": "937740"
  },
  {
    "text": "like mutating definition details right",
    "start": "937740",
    "end": "940019"
  },
  {
    "text": "it's just it's it seems super scary",
    "start": "940019",
    "end": "943440"
  },
  {
    "text": "the cool thing about option is and then",
    "start": "943440",
    "end": "946199"
  },
  {
    "text": "yeah",
    "start": "946199",
    "end": "947279"
  },
  {
    "text": "yeah map is neat I don't use it very",
    "start": "947279",
    "end": "949680"
  },
  {
    "text": "often uh thank you it's Biz just because",
    "start": "949680",
    "end": "953220"
  },
  {
    "text": "I don't really need like I've never ran",
    "start": "953220",
    "end": "954660"
  },
  {
    "text": "into a case where it's been super useful",
    "start": "954660",
    "end": "956339"
  },
  {
    "text": "for me uh",
    "start": "956339",
    "end": "958860"
  },
  {
    "text": "anything basically only good for methods",
    "start": "958860",
    "end": "960660"
  },
  {
    "text": "that accept it and do something like two",
    "start": "960660",
    "end": "962160"
  },
  {
    "text": "string the most other uses are very dumb",
    "start": "962160",
    "end": "963600"
  },
  {
    "text": "I don't know what we're talking about I",
    "start": "963600",
    "end": "964620"
  },
  {
    "text": "literally run into this problem you",
    "start": "964620",
    "end": "965699"
  },
  {
    "text": "described and ended up debugging for",
    "start": "965699",
    "end": "967019"
  },
  {
    "text": "three hours yeah it's extremely hard",
    "start": "967019",
    "end": "968820"
  },
  {
    "text": "that's the thing it's extremely",
    "start": "968820",
    "end": "971160"
  },
  {
    "text": "extremely hard if this if this is the",
    "start": "971160",
    "end": "972660"
  },
  {
    "text": "faster than lime one I'm not gonna watch",
    "start": "972660",
    "end": "974760"
  },
  {
    "text": "it",
    "start": "974760",
    "end": "976940"
  },
  {
    "text": "thank you for including the rust stuff",
    "start": "985019",
    "end": "987180"
  },
  {
    "text": "um",
    "start": "987180",
    "end": "989300"
  },
  {
    "text": "it's uh let's see my linter has stopped",
    "start": "990480",
    "end": "992579"
  },
  {
    "text": "me from doing that yeah okay dude that's",
    "start": "992579",
    "end": "994860"
  },
  {
    "text": "cool stuff uh I don't think I want to",
    "start": "994860",
    "end": "996360"
  },
  {
    "text": "watch any more of this do you wanna",
    "start": "996360",
    "end": "997680"
  },
  {
    "text": "let's look a little bit uh is a monadic",
    "start": "997680",
    "end": "1000440"
  },
  {
    "text": "bind over an option type when you speak",
    "start": "1000440",
    "end": "1002540"
  },
  {
    "text": "like this I want you to know that you be",
    "start": "1002540",
    "end": "1004579"
  },
  {
    "text": "it it prolongs your stay as a tarnished",
    "start": "1004579",
    "end": "1007699"
  },
  {
    "text": "a maidenless tarnished longer okay just",
    "start": "1007699",
    "end": "1011180"
  },
  {
    "text": "so you know",
    "start": "1011180",
    "end": "1013339"
  },
  {
    "text": "careful I'm trying to help you",
    "start": "1013339",
    "end": "1016519"
  },
  {
    "text": "you know move on with your quest in life",
    "start": "1016519",
    "end": "1019220"
  },
  {
    "text": "you know it's very it's very scary you",
    "start": "1019220",
    "end": "1021560"
  },
  {
    "text": "know very scary",
    "start": "1021560",
    "end": "1023480"
  },
  {
    "text": "I missed that I missed that blueberry I",
    "start": "1023480",
    "end": "1026240"
  },
  {
    "text": "missed it again I missed it again I've",
    "start": "1026240",
    "end": "1028640"
  },
  {
    "text": "caught it four times without taking my",
    "start": "1028640",
    "end": "1030079"
  },
  {
    "text": "eye off",
    "start": "1030079",
    "end": "1032240"
  },
  {
    "text": "I missed that last one",
    "start": "1032240",
    "end": "1035260"
  }
]