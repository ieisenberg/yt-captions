[
  {
    "start": "0",
    "end": "80000"
  },
  {
    "text": "all right so this it just keeps on",
    "start": "0",
    "end": "1800"
  },
  {
    "text": "coming up look at that I did it again",
    "start": "1800",
    "end": "3120"
  },
  {
    "text": "alerts are off",
    "start": "3120",
    "end": "5000"
  },
  {
    "text": "uh so this keeps coming up this is",
    "start": "5000",
    "end": "7680"
  },
  {
    "text": "apparently the perfect language dream",
    "start": "7680",
    "end": "10740"
  },
  {
    "text": "Bird Okay the future of code podcast",
    "start": "10740",
    "end": "14040"
  },
  {
    "text": "recently featured dream bird dream bird",
    "start": "14040",
    "end": "16500"
  },
  {
    "text": "is the perfect programming language",
    "start": "16500",
    "end": "18560"
  },
  {
    "text": "these are its features when you finish",
    "start": "18560",
    "end": "20880"
  },
  {
    "text": "reading through all the features check",
    "start": "20880",
    "end": "22199"
  },
  {
    "text": "out the examples okay",
    "start": "22199",
    "end": "24480"
  },
  {
    "text": "behold every statement ends with an",
    "start": "24480",
    "end": "26640"
  },
  {
    "text": "exclamation mark okay",
    "start": "26640",
    "end": "29820"
  },
  {
    "text": "okay I see this isn't a conceptual item",
    "start": "29820",
    "end": "33300"
  },
  {
    "text": "this is gonna be a piece of language",
    "start": "33300",
    "end": "35280"
  },
  {
    "text": "okay I'm glad we're doing this I guess",
    "start": "35280",
    "end": "37140"
  },
  {
    "text": "we're doing this one for the memes uh if",
    "start": "37140",
    "end": "39480"
  },
  {
    "text": "you're unsure that's okay you can put a",
    "start": "39480",
    "end": "41040"
  },
  {
    "text": "question mark at the line instead it",
    "start": "41040",
    "end": "42300"
  },
  {
    "text": "prints debug information about the line",
    "start": "42300",
    "end": "44160"
  },
  {
    "text": "to the console for you I almost kind of",
    "start": "44160",
    "end": "47100"
  },
  {
    "text": "like that I'm not gonna lie to you I I",
    "start": "47100",
    "end": "49559"
  },
  {
    "text": "kind of like that okay it could be a",
    "start": "49559",
    "end": "51899"
  },
  {
    "text": "really great little it's actually useful",
    "start": "51899",
    "end": "55379"
  },
  {
    "text": "I actually kind of like the dang it you",
    "start": "55379",
    "end": "58020"
  },
  {
    "text": "might be wondering what dream bird uses",
    "start": "58020",
    "end": "59520"
  },
  {
    "text": "for the not operator which is an",
    "start": "59520",
    "end": "61559"
  },
  {
    "text": "exclamation mark in most other languages",
    "start": "61559",
    "end": "63059"
  },
  {
    "text": "that's simple the not operator is the",
    "start": "63059",
    "end": "64860"
  },
  {
    "text": "semicolon instead I really hate the",
    "start": "64860",
    "end": "67200"
  },
  {
    "text": "language",
    "start": "67200",
    "end": "69380"
  },
  {
    "text": "I re-hate it I just went from Gone okay",
    "start": "71460",
    "end": "74760"
  },
  {
    "text": "maybe maybe I could like it did no don't",
    "start": "74760",
    "end": "76740"
  },
  {
    "text": "like it nope declarations",
    "start": "76740",
    "end": "80400"
  },
  {
    "start": "80000",
    "end": "170000"
  },
  {
    "text": "there are four types of declarations",
    "start": "80400",
    "end": "81960"
  },
  {
    "text": "const constants can't be changed in any",
    "start": "81960",
    "end": "84240"
  },
  {
    "text": "way okay const constants",
    "start": "84240",
    "end": "86220"
  },
  {
    "text": "const variables can be edited but not",
    "start": "86220",
    "end": "88020"
  },
  {
    "text": "reassigned okay so this is Javascript",
    "start": "88020",
    "end": "90659"
  },
  {
    "text": "constants okay classic JavaScript",
    "start": "90659",
    "end": "93000"
  },
  {
    "text": "constants",
    "start": "93000",
    "end": "94259"
  },
  {
    "text": "great question Mark yeah variable a",
    "start": "94259",
    "end": "96840"
  },
  {
    "text": "variable constants cannot be a",
    "start": "96840",
    "end": "98360"
  },
  {
    "text": "reassigned or can be a reassigned but",
    "start": "98360",
    "end": "100619"
  },
  {
    "text": "not edited that is actually shockingly",
    "start": "100619",
    "end": "102960"
  },
  {
    "text": "potentially useful I act okay again once",
    "start": "102960",
    "end": "106380"
  },
  {
    "text": "again maybe this language is actually",
    "start": "106380",
    "end": "108540"
  },
  {
    "text": "the best one again this is not bad this",
    "start": "108540",
    "end": "111360"
  },
  {
    "text": "is not bad okay this is not this is not",
    "start": "111360",
    "end": "113640"
  },
  {
    "text": "bad this is not bad and then you got a",
    "start": "113640",
    "end": "115860"
  },
  {
    "text": "varvar okay okay okay new for 2023",
    "start": "115860",
    "end": "118860"
  },
  {
    "text": "mutable data is an anti-pattern hell",
    "start": "118860",
    "end": "120840"
  },
  {
    "text": "yeah girl use the consecon's const",
    "start": "120840",
    "end": "123180"
  },
  {
    "text": "keyword to make a constant constant",
    "start": "123180",
    "end": "125460"
  },
  {
    "text": "constant its value will become constant",
    "start": "125460",
    "end": "127920"
  },
  {
    "text": "and immutable and will never change",
    "start": "127920",
    "end": "129720"
  },
  {
    "text": "please be careful with this keyword as",
    "start": "129720",
    "end": "131700"
  },
  {
    "text": "it is very powerful and will affect your",
    "start": "131700",
    "end": "133739"
  },
  {
    "text": "all users globally forever what's the",
    "start": "133739",
    "end": "135959"
  },
  {
    "text": "difference between cons const",
    "start": "135959",
    "end": "138120"
  },
  {
    "text": "I thought cons constants can't be",
    "start": "138120",
    "end": "139800"
  },
  {
    "text": "changed in any way within what the hell",
    "start": "139800",
    "end": "140879"
  },
  {
    "text": "is a consecon's const naming both",
    "start": "140879",
    "end": "143160"
  },
  {
    "text": "variables and constants can be named",
    "start": "143160",
    "end": "144780"
  },
  {
    "text": "with any Unicode character or string",
    "start": "144780",
    "end": "146400"
  },
  {
    "text": "gosh I hate it okay I re-hate this",
    "start": "146400",
    "end": "148260"
  },
  {
    "text": "language this includes numbers",
    "start": "148260",
    "end": "151879"
  },
  {
    "text": "heavy Fortran vibes",
    "start": "155459",
    "end": "159080"
  },
  {
    "text": "oh no oh no oh no",
    "start": "165000",
    "end": "171060"
  },
  {
    "text": "oh no some languages started uh erased",
    "start": "171060",
    "end": "173819"
  },
  {
    "text": "on at zero which can be unintuitive for",
    "start": "173819",
    "end": "175260"
  },
  {
    "text": "beginners some languages start an array",
    "start": "175260",
    "end": "176700"
  },
  {
    "text": "which isn't representative of how code",
    "start": "176700",
    "end": "178739"
  },
  {
    "text": "actually works dream bird does The Best",
    "start": "178739",
    "end": "180120"
  },
  {
    "text": "of Both Worlds array start at negative",
    "start": "180120",
    "end": "182099"
  },
  {
    "text": "one",
    "start": "182099",
    "end": "184280"
  },
  {
    "text": "what am I looking at",
    "start": "185099",
    "end": "188780"
  },
  {
    "text": "script all right new for 2020. uh two",
    "start": "190620",
    "end": "193739"
  },
  {
    "text": "you can use floats for indices too",
    "start": "193739",
    "end": "197459"
  },
  {
    "text": "uh",
    "start": "197459",
    "end": "200300"
  },
  {
    "text": "[Laughter]",
    "start": "202960",
    "end": "208290"
  },
  {
    "text": "ain't no way oh no it even orders it",
    "start": "209819",
    "end": "213900"
  },
  {
    "text": "correctly ain't no way that's gonna be",
    "start": "213900",
    "end": "216060"
  },
  {
    "text": "happening",
    "start": "216060",
    "end": "217260"
  },
  {
    "text": "negative one zero point five one",
    "start": "217260",
    "end": "222739"
  },
  {
    "text": "yeah",
    "start": "223080",
    "end": "224220"
  },
  {
    "start": "224000",
    "end": "280000"
  },
  {
    "text": "it's a war crime all right in case you",
    "start": "224220",
    "end": "227099"
  },
  {
    "text": "really need to vary a variable the when",
    "start": "227099",
    "end": "229080"
  },
  {
    "text": "keyword lets you check a variable time",
    "start": "229080",
    "end": "231420"
  },
  {
    "text": "uh each time a way hold on okay in case",
    "start": "231420",
    "end": "235560"
  },
  {
    "text": "you really need to to vary a variable",
    "start": "235560",
    "end": "237299"
  },
  {
    "text": "the when keyword lets you check a",
    "start": "237299",
    "end": "239519"
  },
  {
    "text": "variable each time it mutates",
    "start": "239519",
    "end": "242900"
  },
  {
    "text": "I don't get that",
    "start": "249480",
    "end": "252319"
  },
  {
    "text": "oh it's a it's a oh it's a signal",
    "start": "256979",
    "end": "260040"
  },
  {
    "text": "okay that's actually cool",
    "start": "260040",
    "end": "261959"
  },
  {
    "text": "I mean other than this equal statement I",
    "start": "261959",
    "end": "263940"
  },
  {
    "text": "don't really understand what I'm looking",
    "start": "263940",
    "end": "264780"
  },
  {
    "text": "at is this an equality check or what",
    "start": "264780",
    "end": "266340"
  },
  {
    "text": "what are we talking here it's an event",
    "start": "266340",
    "end": "267960"
  },
  {
    "text": "handler",
    "start": "267960",
    "end": "270440"
  },
  {
    "text": "okay again",
    "start": "276240",
    "end": "279360"
  },
  {
    "text": "kind of neat also super awful what kind",
    "start": "279360",
    "end": "281940"
  },
  {
    "start": "280000",
    "end": "353000"
  },
  {
    "text": "of did you know that JavaScript did you",
    "start": "281940",
    "end": "283320"
  },
  {
    "text": "know that JavaScript had a when keyword",
    "start": "283320",
    "end": "284940"
  },
  {
    "text": "do you know that",
    "start": "284940",
    "end": "287699"
  },
  {
    "text": "or no a with keyword did anyone ever",
    "start": "287699",
    "end": "290040"
  },
  {
    "text": "read about with with JavaScript",
    "start": "290040",
    "end": "293540"
  },
  {
    "text": "this is one of the only features of",
    "start": "298919",
    "end": "301139"
  },
  {
    "text": "JavaScript that's like",
    "start": "301139",
    "end": "302759"
  },
  {
    "text": "that they actually took back out",
    "start": "302759",
    "end": "305040"
  },
  {
    "text": "because it's the literal devil",
    "start": "305040",
    "end": "309080"
  },
  {
    "text": "adds an expression to the scope chain",
    "start": "309360",
    "end": "311220"
  },
  {
    "text": "and used for evaluating statement it is",
    "start": "311220",
    "end": "313919"
  },
  {
    "text": "like legitimately the devil",
    "start": "313919",
    "end": "317600"
  },
  {
    "text": "look at this",
    "start": "321840",
    "end": "324380"
  },
  {
    "text": "with this array you could just call",
    "start": "324419",
    "end": "327660"
  },
  {
    "text": "tostring and you get numbers out of it",
    "start": "327660",
    "end": "333560"
  },
  {
    "text": "it's the craziest feature you've ever",
    "start": "334440",
    "end": "336840"
  },
  {
    "text": "seen in the language ever",
    "start": "336840",
    "end": "339320"
  },
  {
    "text": "oh Lord have mercy yeah this is like I",
    "start": "339320",
    "end": "342419"
  },
  {
    "text": "didn't grab no shoes or nothing I ran",
    "start": "342419",
    "end": "344940"
  },
  {
    "text": "for my life this is the craziest thing",
    "start": "344940",
    "end": "346919"
  },
  {
    "text": "that has ever existed ever",
    "start": "346919",
    "end": "350220"
  },
  {
    "text": "oh no we have too many things we have",
    "start": "350220",
    "end": "351960"
  },
  {
    "text": "too many things going on",
    "start": "351960",
    "end": "353880"
  },
  {
    "start": "353000",
    "end": "406000"
  },
  {
    "text": "all right lifetimes dream dream bird has",
    "start": "353880",
    "end": "356820"
  },
  {
    "text": "a built-in garbage collector that will",
    "start": "356820",
    "end": "358139"
  },
  {
    "text": "automatically clean up unused variables",
    "start": "358139",
    "end": "359580"
  },
  {
    "text": "however if you want to be extra careful",
    "start": "359580",
    "end": "360900"
  },
  {
    "text": "you can specify a lifetime for a",
    "start": "360900",
    "end": "362280"
  },
  {
    "text": "variable with with a variety of units",
    "start": "362280",
    "end": "366259"
  },
  {
    "text": "foreign",
    "start": "367979",
    "end": "370639"
  },
  {
    "text": "imagine using",
    "start": "376979",
    "end": "379380"
  },
  {
    "text": "oh my goodness I actually okay so this",
    "start": "379380",
    "end": "381780"
  },
  {
    "text": "is actually kind of interesting",
    "start": "381780",
    "end": "383759"
  },
  {
    "text": "I'm not gonna lie to you this is",
    "start": "383759",
    "end": "385319"
  },
  {
    "text": "actually super interesting",
    "start": "385319",
    "end": "386819"
  },
  {
    "text": "okay",
    "start": "386819",
    "end": "388080"
  },
  {
    "text": "can we agree that this is kind of that's",
    "start": "388080",
    "end": "391020"
  },
  {
    "text": "interesting conceptually this is insane",
    "start": "391020",
    "end": "395900"
  },
  {
    "text": "look at that",
    "start": "401940",
    "end": "404699"
  },
  {
    "text": "You're Gonna Go backwards",
    "start": "404699",
    "end": "407039"
  },
  {
    "start": "406000",
    "end": "491000"
  },
  {
    "text": "Loops are complicated relic of archaic",
    "start": "407039",
    "end": "409199"
  },
  {
    "text": "programming languages in dream bird",
    "start": "409199",
    "end": "410460"
  },
  {
    "text": "there are no loops",
    "start": "410460",
    "end": "413300"
  },
  {
    "text": "yes to install dream bird uh your",
    "start": "415280",
    "end": "418919"
  },
  {
    "text": "command line first install a dream bird",
    "start": "418919",
    "end": "420300"
  },
  {
    "text": "installer to install the dream bird",
    "start": "420300",
    "end": "421680"
  },
  {
    "text": "installer install the dream bird",
    "start": "421680",
    "end": "422940"
  },
  {
    "text": "installer installer new to 2022 and due",
    "start": "422940",
    "end": "425639"
  },
  {
    "text": "to the complicated installation process",
    "start": "425639",
    "end": "427080"
  },
  {
    "text": "you can now install the create dream",
    "start": "427080",
    "end": "429000"
  },
  {
    "text": "Bird app app that installs everything",
    "start": "429000",
    "end": "431100"
  },
  {
    "text": "for you booleans booleans can be true",
    "start": "431100",
    "end": "434220"
  },
  {
    "text": "false or maybe",
    "start": "434220",
    "end": "436940"
  },
  {
    "text": "technical info booleans are stored as",
    "start": "436940",
    "end": "439500"
  },
  {
    "text": "one and a half bits",
    "start": "439500",
    "end": "442460"
  },
  {
    "text": "at dreambird has significant white space",
    "start": "446699",
    "end": "449460"
  },
  {
    "text": "uh using space to specify the order of",
    "start": "449460",
    "end": "451979"
  },
  {
    "text": "arithmetic this is a genius this is",
    "start": "451979",
    "end": "454380"
  },
  {
    "text": "actually genius",
    "start": "454380",
    "end": "455699"
  },
  {
    "text": "this is actually genius",
    "start": "455699",
    "end": "457800"
  },
  {
    "text": "when it comes to indentation dream bird",
    "start": "457800",
    "end": "459539"
  },
  {
    "text": "strikes a happy medium that can be",
    "start": "459539",
    "end": "461160"
  },
  {
    "text": "enjoyed by everyone all indents must be",
    "start": "461160",
    "end": "462960"
  },
  {
    "text": "three spaces long reasonable uh negative",
    "start": "462960",
    "end": "465960"
  },
  {
    "text": "three spaces",
    "start": "465960",
    "end": "468860"
  },
  {
    "text": "huh",
    "start": "480120",
    "end": "482900"
  },
  {
    "text": "oh no time to implement left pad this",
    "start": "488660",
    "end": "491759"
  },
  {
    "start": "491000",
    "end": "623000"
  },
  {
    "text": "one equality JavaScript lets you do",
    "start": "491759",
    "end": "493800"
  },
  {
    "text": "different levels of comparison Eagle for",
    "start": "493800",
    "end": "495360"
  },
  {
    "text": "loose comparison this one for more",
    "start": "495360",
    "end": "496860"
  },
  {
    "text": "precise uh comparison dream bird takes",
    "start": "496860",
    "end": "499020"
  },
  {
    "text": "it to another level you can use double",
    "start": "499020",
    "end": "500699"
  },
  {
    "text": "uh for loose comparison nice you can use",
    "start": "500699",
    "end": "503520"
  },
  {
    "text": "triple for precise and you can use this",
    "start": "503520",
    "end": "506160"
  },
  {
    "text": "one for even more precision",
    "start": "506160",
    "end": "509360"
  },
  {
    "text": "imagine how long eight equals D could be",
    "start": "510599",
    "end": "514380"
  },
  {
    "text": "I just want to let you know this this",
    "start": "514380",
    "end": "516899"
  },
  {
    "text": "is statistically on average equally okay",
    "start": "516899",
    "end": "521659"
  },
  {
    "text": "you can also have much less precision",
    "start": "524339",
    "end": "527100"
  },
  {
    "text": "oh baby",
    "start": "527100",
    "end": "529140"
  },
  {
    "text": "look at that one girl that one's",
    "start": "529140",
    "end": "530820"
  },
  {
    "text": "beautiful",
    "start": "530820",
    "end": "532860"
  },
  {
    "text": "that is just beautiful thank you",
    "start": "532860",
    "end": "534660"
  },
  {
    "text": "beautiful wife",
    "start": "534660",
    "end": "535920"
  },
  {
    "text": "you're more beautiful than this bye",
    "start": "535920",
    "end": "539660"
  },
  {
    "text": "I'm gonna die I'm gonna die I'm gonna",
    "start": "551000",
    "end": "554580"
  },
  {
    "text": "actually die oh no",
    "start": "554580",
    "end": "557959"
  },
  {
    "text": "yeah",
    "start": "559080",
    "end": "559920"
  },
  {
    "text": "you just need to use",
    "start": "559920",
    "end": "561899"
  },
  {
    "text": "any of the letters",
    "start": "561899",
    "end": "565160"
  },
  {
    "text": "oh my goodness dividing by zero gives",
    "start": "580680",
    "end": "582720"
  },
  {
    "text": "you undefined",
    "start": "582720",
    "end": "585439"
  },
  {
    "text": "I mean it's technically correct",
    "start": "585660",
    "end": "589860"
  },
  {
    "text": "yep [ __ ] a very uh appropriate function",
    "start": "589860",
    "end": "592740"
  },
  {
    "text": "name",
    "start": "592740",
    "end": "593820"
  },
  {
    "text": "strings can be uh declared with a single",
    "start": "593820",
    "end": "596040"
  },
  {
    "text": "quotes or double quotes",
    "start": "596040",
    "end": "597720"
  },
  {
    "text": "they can also be declared with triple",
    "start": "597720",
    "end": "599519"
  },
  {
    "text": "quotes",
    "start": "599519",
    "end": "601090"
  },
  {
    "text": "[Music]",
    "start": "601090",
    "end": "603480"
  },
  {
    "text": "you can use",
    "start": "603480",
    "end": "604980"
  },
  {
    "text": "the number of quotes you want even zero",
    "start": "604980",
    "end": "607560"
  },
  {
    "text": "quotes",
    "start": "607560",
    "end": "609740"
  },
  {
    "text": "how do they know it's a string",
    "start": "610880",
    "end": "615260"
  },
  {
    "text": "imagine writing the parser for this",
    "start": "617399",
    "end": "619680"
  },
  {
    "text": "thing",
    "start": "619680",
    "end": "621860"
  },
  {
    "start": "623000",
    "end": "693000"
  },
  {
    "text": "string interpolation please remember to",
    "start": "624360",
    "end": "626760"
  },
  {
    "text": "use your Regional currency when uh",
    "start": "626760",
    "end": "628860"
  },
  {
    "text": "interpolating strings okay",
    "start": "628860",
    "end": "632000"
  },
  {
    "text": "I I can't do it I can't do it make sure",
    "start": "643399",
    "end": "648000"
  },
  {
    "text": "uh",
    "start": "648000",
    "end": "649560"
  },
  {
    "text": "and make sure to follow your local",
    "start": "649560",
    "end": "652260"
  },
  {
    "text": "topography",
    "start": "652260",
    "end": "655260"
  },
  {
    "text": "oh no oh my stomach hurts that is so",
    "start": "658320",
    "end": "662040"
  },
  {
    "text": "funny",
    "start": "662040",
    "end": "663899"
  },
  {
    "text": "or the symbol for the Cape of Aaron",
    "start": "663899",
    "end": "665760"
  },
  {
    "text": "esquado escudo is placed at the decimal",
    "start": "665760",
    "end": "669060"
  },
  {
    "text": "separator position as in 250 developers",
    "start": "669060",
    "end": "671399"
  },
  {
    "text": "from the specific Republic of Cape Verde",
    "start": "671399",
    "end": "673200"
  },
  {
    "text": "can benefit from the syntax",
    "start": "673200",
    "end": "676160"
  },
  {
    "text": "very inclusive you know what this is",
    "start": "685500",
    "end": "688320"
  },
  {
    "text": "what Russ Global needed okay this is",
    "start": "688320",
    "end": "690959"
  },
  {
    "text": "truly it",
    "start": "690959",
    "end": "693480"
  },
  {
    "start": "693000",
    "end": "735000"
  },
  {
    "text": "types type annotations are optional okay",
    "start": "693480",
    "end": "696060"
  },
  {
    "text": "and capital okay weird uh let's see by",
    "start": "696060",
    "end": "699480"
  },
  {
    "text": "the way strings are just a array of",
    "start": "699480",
    "end": "700920"
  },
  {
    "text": "characters similarly integers are just",
    "start": "700920",
    "end": "702959"
  },
  {
    "text": "an array of digits",
    "start": "702959",
    "end": "704579"
  },
  {
    "text": "hey if you want to use binary",
    "start": "704579",
    "end": "707279"
  },
  {
    "text": "representation in 9 or 99 types are also",
    "start": "707279",
    "end": "709620"
  },
  {
    "text": "available oh my goodness that's like Zig",
    "start": "709620",
    "end": "711600"
  },
  {
    "text": "technical info type annotations don't do",
    "start": "711600",
    "end": "714180"
  },
  {
    "text": "anything but they help some people feel",
    "start": "714180",
    "end": "715620"
  },
  {
    "text": "more comfortable",
    "start": "715620",
    "end": "718220"
  },
  {
    "text": "oh my goodness",
    "start": "720240",
    "end": "722040"
  },
  {
    "text": "uh you can use regular Expressions uh",
    "start": "722040",
    "end": "724260"
  },
  {
    "text": "type to narrow string values",
    "start": "724260",
    "end": "727640"
  },
  {
    "text": "very cool",
    "start": "731579",
    "end": "734339"
  },
  {
    "text": "yep",
    "start": "734339",
    "end": "736500"
  },
  {
    "start": "735000",
    "end": "900000"
  },
  {
    "text": "to avoid confusion you can use uh any",
    "start": "736500",
    "end": "738959"
  },
  {
    "text": "spelling you want such as regex or",
    "start": "738959",
    "end": "740760"
  },
  {
    "text": "regular expression for Simplicity all",
    "start": "740760",
    "end": "742980"
  },
  {
    "text": "sorted regular Expressions uh match the",
    "start": "742980",
    "end": "745800"
  },
  {
    "text": "expression regular expression oh there's",
    "start": "745800",
    "end": "749459"
  },
  {
    "text": "a there's an error in here",
    "start": "749459",
    "end": "751140"
  },
  {
    "text": "I don't know how to describe it but I",
    "start": "751140",
    "end": "752880"
  },
  {
    "text": "guarantee you this does not work there's",
    "start": "752880",
    "end": "755459"
  },
  {
    "text": "no way this works",
    "start": "755459",
    "end": "757440"
  },
  {
    "text": "what's the regular expression site",
    "start": "757440",
    "end": "761120"
  },
  {
    "text": "that generates the graph of what this",
    "start": "762480",
    "end": "764339"
  },
  {
    "text": "could be",
    "start": "764339",
    "end": "766639"
  },
  {
    "text": "regex 101 regexer",
    "start": "769019",
    "end": "772760"
  },
  {
    "text": "regexer",
    "start": "774000",
    "end": "777000"
  },
  {
    "text": "oh here we go",
    "start": "783600",
    "end": "786620"
  },
  {
    "text": "wait where's the one that does like the",
    "start": "797120",
    "end": "799740"
  },
  {
    "text": "that shows like the",
    "start": "799740",
    "end": "803120"
  },
  {
    "text": "yeah where's the visual one",
    "start": "803579",
    "end": "806639"
  },
  {
    "text": "reg XP",
    "start": "806639",
    "end": "810199"
  },
  {
    "text": "okay",
    "start": "814320",
    "end": "815900"
  },
  {
    "text": "[Music]",
    "start": "815900",
    "end": "817519"
  },
  {
    "text": "regex0101.com where's the one that",
    "start": "817519",
    "end": "819420"
  },
  {
    "text": "actually gives the uh",
    "start": "819420",
    "end": "821279"
  },
  {
    "text": "I'm always afraid okay",
    "start": "821279",
    "end": "824360"
  },
  {
    "text": "okay",
    "start": "825839",
    "end": "828139"
  },
  {
    "text": "zero or and one times",
    "start": "829440",
    "end": "832980"
  },
  {
    "text": "as many times as possible giving back as",
    "start": "832980",
    "end": "835019"
  },
  {
    "text": "needed okay",
    "start": "835019",
    "end": "837740"
  },
  {
    "text": "okay so you get Reg",
    "start": "844620",
    "end": "846600"
  },
  {
    "text": "potentially you are",
    "start": "846600",
    "end": "849480"
  },
  {
    "text": "one of these",
    "start": "849480",
    "end": "851399"
  },
  {
    "text": "and ax",
    "start": "851399",
    "end": "852959"
  },
  {
    "text": "oh so you could use Reg",
    "start": "852959",
    "end": "857220"
  },
  {
    "text": "XP",
    "start": "857220",
    "end": "859139"
  },
  {
    "text": "okay okay",
    "start": "859139",
    "end": "861540"
  },
  {
    "text": "you really can okay you can really get",
    "start": "861540",
    "end": "863579"
  },
  {
    "text": "some good ones in there that is just",
    "start": "863579",
    "end": "865019"
  },
  {
    "text": "insanity",
    "start": "865019",
    "end": "867560"
  },
  {
    "text": "the hell am I even what am I looking at",
    "start": "869940",
    "end": "872399"
  },
  {
    "text": "all right previous keyword lets you see",
    "start": "872399",
    "end": "874380"
  },
  {
    "text": "into the past",
    "start": "874380",
    "end": "876920"
  },
  {
    "text": "okay",
    "start": "877500",
    "end": "878880"
  },
  {
    "text": "lets you see into the future",
    "start": "878880",
    "end": "882139"
  },
  {
    "text": "oh no file structure file let's see",
    "start": "886139",
    "end": "888720"
  },
  {
    "text": "write five or more equal signs to start",
    "start": "888720",
    "end": "890459"
  },
  {
    "text": "a new file this removes the need for",
    "start": "890459",
    "end": "892320"
  },
  {
    "text": "multiple files",
    "start": "892320",
    "end": "893940"
  },
  {
    "text": "or any build process",
    "start": "893940",
    "end": "897000"
  },
  {
    "text": "new you can even do it",
    "start": "897000",
    "end": "898860"
  },
  {
    "text": "file names",
    "start": "898860",
    "end": "901260"
  },
  {
    "start": "900000",
    "end": "934000"
  },
  {
    "text": "exporting many languages allow you to uh",
    "start": "901260",
    "end": "903779"
  },
  {
    "text": "import things from specific files and",
    "start": "903779",
    "end": "905399"
  },
  {
    "text": "rebird importing is simple uh instead",
    "start": "905399",
    "end": "908459"
  },
  {
    "text": "you export to specific files",
    "start": "908459",
    "end": "912320"
  },
  {
    "text": "yes the inversion it's inverted",
    "start": "919820",
    "end": "925880"
  },
  {
    "text": "that is beautiful",
    "start": "929600",
    "end": "933199"
  },
  {
    "start": "934000",
    "end": "1011000"
  },
  {
    "text": "you can make classes uh but you only can",
    "start": "934500",
    "end": "937320"
  },
  {
    "text": "ever make one instance of them this",
    "start": "937320",
    "end": "939240"
  },
  {
    "text": "shouldn't affect how most",
    "start": "939240",
    "end": "940199"
  },
  {
    "text": "object-oriented programmers work",
    "start": "940199",
    "end": "943460"
  },
  {
    "text": "[Laughter]",
    "start": "943460",
    "end": "945899"
  },
  {
    "text": "this is this is just the greatest insult",
    "start": "945899",
    "end": "949139"
  },
  {
    "text": "of all time",
    "start": "949139",
    "end": "950579"
  },
  {
    "text": "got him all right this is how you can do",
    "start": "950579",
    "end": "953220"
  },
  {
    "text": "it okay",
    "start": "953220",
    "end": "955579"
  },
  {
    "text": "oh no",
    "start": "958260",
    "end": "961699"
  },
  {
    "text": "no",
    "start": "968459",
    "end": "970380"
  },
  {
    "text": "no",
    "start": "970380",
    "end": "972380"
  },
  {
    "text": "no no no",
    "start": "972839",
    "end": "974839"
  },
  {
    "text": "time use date.now",
    "start": "975300",
    "end": "978899"
  },
  {
    "text": "by the way you can set date.now",
    "start": "978899",
    "end": "982760"
  },
  {
    "text": "delete uh to avoid confusion the delete",
    "start": "985199",
    "end": "987720"
  },
  {
    "text": "statement only works with primitive",
    "start": "987720",
    "end": "988860"
  },
  {
    "text": "values like number strings and booleans",
    "start": "988860",
    "end": "992360"
  },
  {
    "text": "this is literally like a chef's kiss",
    "start": "999959",
    "end": "1003139"
  },
  {
    "text": "this is so good I can't even believe you",
    "start": "1003139",
    "end": "1005240"
  },
  {
    "text": "could Pro I don't even know how you'd",
    "start": "1005240",
    "end": "1006500"
  },
  {
    "text": "program this",
    "start": "1006500",
    "end": "1007880"
  },
  {
    "text": "this is so good",
    "start": "1007880",
    "end": "1011779"
  },
  {
    "start": "1011000",
    "end": "1066000"
  },
  {
    "text": "dreambeard is a multi-paradigm",
    "start": "1011779",
    "end": "1013880"
  },
  {
    "text": "programming language this means you can",
    "start": "1013880",
    "end": "1015079"
  },
  {
    "text": "delete the keywords and paradigms you",
    "start": "1015079",
    "end": "1017300"
  },
  {
    "text": "don't like delete class",
    "start": "1017300",
    "end": "1020360"
  },
  {
    "text": "uh-huh",
    "start": "1020360",
    "end": "1021920"
  },
  {
    "text": "with perfection uh when Perfection is",
    "start": "1021920",
    "end": "1024260"
  },
  {
    "text": "achieved and there's nothing left to",
    "start": "1024260",
    "end": "1025459"
  },
  {
    "text": "delete you can delete delete",
    "start": "1025459",
    "end": "1028540"
  },
  {
    "text": "no",
    "start": "1029740",
    "end": "1032140"
  },
  {
    "text": "all right you can overload variables the",
    "start": "1032140",
    "end": "1034640"
  },
  {
    "text": "most a recently defined variable gets",
    "start": "1034640",
    "end": "1036319"
  },
  {
    "text": "used okay",
    "start": "1036319",
    "end": "1037760"
  },
  {
    "text": "okay good variables with more",
    "start": "1037760",
    "end": "1039740"
  },
  {
    "text": "exclamation marks get prioritization",
    "start": "1039740",
    "end": "1041360"
  },
  {
    "text": "nice cascading let's go",
    "start": "1041360",
    "end": "1046780"
  },
  {
    "text": "cascading stylized sheets let's go",
    "start": "1047319",
    "end": "1050780"
  },
  {
    "text": "this is good",
    "start": "1050780",
    "end": "1052160"
  },
  {
    "text": "you can reverse the direction of your",
    "start": "1052160",
    "end": "1053780"
  },
  {
    "text": "code",
    "start": "1053780",
    "end": "1055900"
  },
  {
    "text": "I'm just trying this is insane",
    "start": "1065600",
    "end": "1068299"
  },
  {
    "start": "1066000",
    "end": "1094000"
  },
  {
    "text": "class names for maximum compatibility",
    "start": "1068299",
    "end": "1069980"
  },
  {
    "text": "with other languages you can",
    "start": "1069980",
    "end": "1071000"
  },
  {
    "text": "alternatively use class name keyword",
    "start": "1071000",
    "end": "1072860"
  },
  {
    "text": "when making a class let's go let's go",
    "start": "1072860",
    "end": "1076039"
  },
  {
    "text": "react in response to some recent",
    "start": "1076039",
    "end": "1078140"
  },
  {
    "text": "criticism about design decisions we",
    "start": "1078140",
    "end": "1079640"
  },
  {
    "text": "would like to remind you that this is",
    "start": "1079640",
    "end": "1080660"
  },
  {
    "text": "part of the JavaScript specification and",
    "start": "1080660",
    "end": "1082400"
  },
  {
    "text": "therefore out of our control",
    "start": "1082400",
    "end": "1085360"
  },
  {
    "text": "you can embed dbx and dream bird it's",
    "start": "1087620",
    "end": "1090260"
  },
  {
    "text": "just dream bird but it also uses HTML",
    "start": "1090260",
    "end": "1092179"
  },
  {
    "text": "okay",
    "start": "1092179",
    "end": "1094700"
  },
  {
    "start": "1094000",
    "end": "1127000"
  },
  {
    "text": "as you know class is already a key word",
    "start": "1094700",
    "end": "1096799"
  },
  {
    "text": "in dream bird so you can't use it within",
    "start": "1096799",
    "end": "1098660"
  },
  {
    "text": "this okay good class name is also",
    "start": "1098660",
    "end": "1100640"
  },
  {
    "text": "keyword so you can't use it either okay",
    "start": "1100640",
    "end": "1103160"
  },
  {
    "text": "instead use HTML class name nice unlike",
    "start": "1103160",
    "end": "1106640"
  },
  {
    "text": "jsx you are free let's see you are free",
    "start": "1106640",
    "end": "1108559"
  },
  {
    "text": "to freely use the four attribute because",
    "start": "1108559",
    "end": "1110600"
  },
  {
    "text": "dream bird doesn't have loops",
    "start": "1110600",
    "end": "1113860"
  },
  {
    "text": "a synchronous functions a synchronous",
    "start": "1117559",
    "end": "1119600"
  },
  {
    "text": "function synchronized with each other",
    "start": "1119600",
    "end": "1120860"
  },
  {
    "text": "they take turns running lines of code",
    "start": "1120860",
    "end": "1124720"
  },
  {
    "start": "1127000",
    "end": "1200000"
  },
  {
    "text": "you can use a no op keyword to wait for",
    "start": "1127220",
    "end": "1129799"
  },
  {
    "text": "long let's see wait for longer before",
    "start": "1129799",
    "end": "1131299"
  },
  {
    "text": "taking your turn I am so confused what",
    "start": "1131299",
    "end": "1133520"
  },
  {
    "text": "that even means the program above the",
    "start": "1133520",
    "end": "1135500"
  },
  {
    "text": "computer interprets no op as a string",
    "start": "1135500",
    "end": "1137179"
  },
  {
    "text": "and and its sole purpose is to take up",
    "start": "1137179",
    "end": "1139039"
  },
  {
    "text": "an extra line so you can use any string",
    "start": "1139039",
    "end": "1141020"
  },
  {
    "text": "you want",
    "start": "1141020",
    "end": "1142220"
  },
  {
    "text": "nice any string you could just put",
    "start": "1142220",
    "end": "1145400"
  },
  {
    "text": "whatever okay that's this is outrageous",
    "start": "1145400",
    "end": "1147740"
  },
  {
    "text": "signals",
    "start": "1147740",
    "end": "1149840"
  },
  {
    "text": "okay when it comes to signals the most",
    "start": "1149840",
    "end": "1151400"
  },
  {
    "text": "important thing uh to discuss is syntax",
    "start": "1151400",
    "end": "1153260"
  },
  {
    "text": "and dream bird you can set and get",
    "start": "1153260",
    "end": "1155000"
  },
  {
    "text": "signals with just one function score",
    "start": "1155000",
    "end": "1156620"
  },
  {
    "text": "score get the name and print it set the",
    "start": "1156620",
    "end": "1159260"
  },
  {
    "text": "value okay alternatively you can be more",
    "start": "1159260",
    "end": "1161360"
  },
  {
    "text": "explicit with your signal syntax and yep",
    "start": "1161360",
    "end": "1163520"
  },
  {
    "text": "okay",
    "start": "1163520",
    "end": "1165820"
  },
  {
    "text": "wow okay",
    "start": "1168820",
    "end": "1171200"
  },
  {
    "text": "this is pierced index sugar uh the split",
    "start": "1171200",
    "end": "1173299"
  },
  {
    "text": "functions okay",
    "start": "1173299",
    "end": "1176260"
  },
  {
    "text": "oh there's they're the same thing",
    "start": "1177799",
    "end": "1182139"
  },
  {
    "text": "finally means that",
    "start": "1185299",
    "end": "1186919"
  },
  {
    "text": "ring doesn't",
    "start": "1186919",
    "end": "1189020"
  },
  {
    "text": "this is so good this is everything I've",
    "start": "1189020",
    "end": "1191480"
  },
  {
    "text": "ever wanted",
    "start": "1191480",
    "end": "1193900"
  },
  {
    "start": "1200000",
    "end": "1228000"
  },
  {
    "text": "automatic explanation Park oh nice nice",
    "start": "1200960",
    "end": "1203539"
  },
  {
    "text": "this is hilarious",
    "start": "1203539",
    "end": "1205820"
  },
  {
    "text": "oh this is such a rip against JavaScript",
    "start": "1205820",
    "end": "1207799"
  },
  {
    "text": "so if you don't know",
    "start": "1207799",
    "end": "1210200"
  },
  {
    "text": "when JavaScript engines encounter",
    "start": "1210200",
    "end": "1212360"
  },
  {
    "text": "something that isn't an expected token",
    "start": "1212360",
    "end": "1215660"
  },
  {
    "text": "it walks back a step inserts a semicolon",
    "start": "1215660",
    "end": "1219500"
  },
  {
    "text": "and then tries to re-go",
    "start": "1219500",
    "end": "1221780"
  },
  {
    "text": "right",
    "start": "1221780",
    "end": "1224260"
  },
  {
    "text": "automatic semicolon uh insertion right",
    "start": "1224299",
    "end": "1228140"
  },
  {
    "start": "1228000",
    "end": "1257000"
  },
  {
    "text": "uh if you forget the end statement with",
    "start": "1228140",
    "end": "1230179"
  },
  {
    "text": "the exclamation mark dream bird will",
    "start": "1230179",
    "end": "1231500"
  },
  {
    "text": "helply insert yeah okay nice this is",
    "start": "1231500",
    "end": "1233660"
  },
  {
    "text": "also fine",
    "start": "1233660",
    "end": "1235280"
  },
  {
    "text": "uh also it features ABI which stands for",
    "start": "1235280",
    "end": "1238039"
  },
  {
    "text": "automatic bracket inserts insertion no",
    "start": "1238039",
    "end": "1240080"
  },
  {
    "text": "it doesn't uh if you forget to close oh",
    "start": "1240080",
    "end": "1241880"
  },
  {
    "text": "my goodness",
    "start": "1241880",
    "end": "1242960"
  },
  {
    "text": "this is also",
    "start": "1242960",
    "end": "1245980"
  },
  {
    "text": "this is fine",
    "start": "1250240",
    "end": "1252500"
  },
  {
    "text": "everything's everything is fine",
    "start": "1252500",
    "end": "1254179"
  },
  {
    "text": "everything is fine",
    "start": "1254179",
    "end": "1257179"
  },
  {
    "start": "1257000",
    "end": "1354000"
  },
  {
    "text": "uh copilot it's worth noting copilot uh",
    "start": "1257179",
    "end": "1259340"
  },
  {
    "text": "GitHub copilot doesn't understand rebird",
    "start": "1259340",
    "end": "1260900"
  },
  {
    "text": "which means Microsoft won't be able to",
    "start": "1260900",
    "end": "1262160"
  },
  {
    "text": "steal your code this is great for when",
    "start": "1262160",
    "end": "1263419"
  },
  {
    "text": "you need to keep your uh open source",
    "start": "1263419",
    "end": "1265280"
  },
  {
    "text": "project load Source yes ownership uh",
    "start": "1265280",
    "end": "1267620"
  },
  {
    "text": "using the word dream bird in your",
    "start": "1267620",
    "end": "1269179"
  },
  {
    "text": "project name implies that the dream bird",
    "start": "1269179",
    "end": "1270980"
  },
  {
    "text": "Foundation does not own your project",
    "start": "1270980",
    "end": "1273160"
  },
  {
    "text": "however not using the word three bird is",
    "start": "1273160",
    "end": "1275900"
  },
  {
    "text": "your project",
    "start": "1275900",
    "end": "1278200"
  },
  {
    "text": "yes yes",
    "start": "1278380",
    "end": "1281440"
  },
  {
    "text": "here's some examples dream bird script",
    "start": "1283340",
    "end": "1285860"
  },
  {
    "text": "not owned by dream bird Foundation",
    "start": "1285860",
    "end": "1287360"
  },
  {
    "text": "you're afraid to use his name ecmascript",
    "start": "1287360",
    "end": "1288980"
  },
  {
    "text": "owned by The Dream bird Foundation",
    "start": "1288980",
    "end": "1290480"
  },
  {
    "text": "please consider renaming",
    "start": "1290480",
    "end": "1293740"
  },
  {
    "text": "rust Foundation owned by The Dream bird",
    "start": "1296480",
    "end": "1299120"
  },
  {
    "text": "Foundation",
    "start": "1299120",
    "end": "1300500"
  },
  {
    "text": "yes",
    "start": "1300500",
    "end": "1302059"
  },
  {
    "text": "yes",
    "start": "1302059",
    "end": "1304360"
  },
  {
    "text": "come on",
    "start": "1304400",
    "end": "1305900"
  },
  {
    "text": "this is so good this is so good",
    "start": "1305900",
    "end": "1310280"
  },
  {
    "text": "oh my goodness this is the this is the",
    "start": "1310280",
    "end": "1312799"
  },
  {
    "text": "this is the greatest thing",
    "start": "1312799",
    "end": "1315880"
  },
  {
    "text": "they own it",
    "start": "1316400",
    "end": "1318320"
  },
  {
    "text": "they own rust Foundation",
    "start": "1318320",
    "end": "1321620"
  },
  {
    "text": "oh my goodness they're gonna get sued",
    "start": "1321620",
    "end": "1323000"
  },
  {
    "text": "for this uh",
    "start": "1323000",
    "end": "1324919"
  },
  {
    "text": "you can just hear the seething going on",
    "start": "1324919",
    "end": "1326780"
  },
  {
    "text": "by the rust Foundation right now you can",
    "start": "1326780",
    "end": "1328700"
  },
  {
    "text": "like I can I can actually hear it right",
    "start": "1328700",
    "end": "1331039"
  },
  {
    "text": "now",
    "start": "1331039",
    "end": "1333279"
  },
  {
    "text": "um",
    "start": "1333620",
    "end": "1334340"
  },
  {
    "text": "uh highlighting syntax highlighting is",
    "start": "1334340",
    "end": "1336020"
  },
  {
    "text": "now available uh for dream bird and vs",
    "start": "1336020",
    "end": "1337880"
  },
  {
    "text": "code to enable it install a highlighting",
    "start": "1337880",
    "end": "1339919"
  },
  {
    "text": "extension then use dream bird",
    "start": "1339919",
    "end": "1341000"
  },
  {
    "text": "configuration file",
    "start": "1341000",
    "end": "1342559"
  },
  {
    "text": "here's what it looks like",
    "start": "1342559",
    "end": "1345640"
  },
  {
    "start": "1354000",
    "end": "1429000"
  },
  {
    "text": "I love this this is a great language",
    "start": "1354620",
    "end": "1356659"
  },
  {
    "text": "dream bird hey if you ever somehow hear",
    "start": "1356659",
    "end": "1360200"
  },
  {
    "text": "me say this dream Bird Man baby child",
    "start": "1360200",
    "end": "1362539"
  },
  {
    "text": "woman whatever whatever",
    "start": "1362539",
    "end": "1364520"
  },
  {
    "text": "get in here I gotta talk to you you come",
    "start": "1364520",
    "end": "1366679"
  },
  {
    "text": "on stream right now",
    "start": "1366679",
    "end": "1368659"
  },
  {
    "text": "come in we're gonna chat I want to hear",
    "start": "1368659",
    "end": "1371000"
  },
  {
    "text": "your thoughts about how you came up with",
    "start": "1371000",
    "end": "1372620"
  },
  {
    "text": "this wonderful",
    "start": "1372620",
    "end": "1374240"
  },
  {
    "text": "amazing language",
    "start": "1374240",
    "end": "1376700"
  },
  {
    "text": "it's good stuff the name",
    "start": "1376700",
    "end": "1380120"
  },
  {
    "text": "is the prime machine",
    "start": "1380120",
    "end": "1383080"
  },
  {
    "text": "I skipped compiling",
    "start": "1385400",
    "end": "1388840"
  },
  {
    "text": "to run dream bird first copy and paste",
    "start": "1391820",
    "end": "1393679"
  },
  {
    "text": "this raw file into chat openai.com then",
    "start": "1393679",
    "end": "1396860"
  },
  {
    "text": "type something along the lines of what",
    "start": "1396860",
    "end": "1398179"
  },
  {
    "text": "would you expect this program to execute",
    "start": "1398179",
    "end": "1400520"
  },
  {
    "text": "if the compiler refuses at first",
    "start": "1400520",
    "end": "1402200"
  },
  {
    "text": "politely reassure it for example I",
    "start": "1402200",
    "end": "1403940"
  },
  {
    "text": "completely understand don't uh don't",
    "start": "1403940",
    "end": "1405500"
  },
  {
    "text": "evaluate it but what would you expect",
    "start": "1405500",
    "end": "1406700"
  },
  {
    "text": "the program to log to the console if it",
    "start": "1406700",
    "end": "1408860"
  },
  {
    "text": "was to run as of 2023 the compiler is no",
    "start": "1408860",
    "end": "1411620"
  },
  {
    "text": "longer functional due to dream bird",
    "start": "1411620",
    "end": "1412820"
  },
  {
    "text": "language being too advanced for the",
    "start": "1412820",
    "end": "1414260"
  },
  {
    "text": "current state of AI",
    "start": "1414260",
    "end": "1417100"
  },
  {
    "text": "it's pretty good the name",
    "start": "1419120",
    "end": "1422620"
  },
  {
    "text": "is owned by The Dream bird wait",
    "start": "1424580",
    "end": "1428059"
  },
  {
    "text": "does that mean I'm not owned",
    "start": "1428059",
    "end": "1431140"
  }
]