[
  {
    "text": "I feel like this brain fck a minimal",
    "start": "840",
    "end": "2720"
  },
  {
    "text": "esoteric programming language designed",
    "start": "2720",
    "end": "4720"
  },
  {
    "text": "to make your brain hurt it's Turing",
    "start": "4720",
    "end": "6440"
  },
  {
    "text": "complete but not designed to build",
    "start": "6440",
    "end": "8280"
  },
  {
    "text": "actual software it's more like a work of",
    "start": "8280",
    "end": "10040"
  },
  {
    "text": "art that challenges the status quo it",
    "start": "10040",
    "end": "11880"
  },
  {
    "text": "was created in 1993 by Swiss physics",
    "start": "11880",
    "end": "14280"
  },
  {
    "text": "student Urban",
    "start": "14280",
    "end": "16960"
  },
  {
    "text": "Mueller it turns out it turns out brain",
    "start": "17800",
    "end": "21039"
  },
  {
    "text": "is older than JavaScript I'm pretty sure",
    "start": "21039",
    "end": "23000"
  },
  {
    "text": "of it where the goal was to create a",
    "start": "23000",
    "end": "24920"
  },
  {
    "text": "language with the smallest possible",
    "start": "24920",
    "end": "26599"
  },
  {
    "text": "compiler it was built for the Amiga 2.0",
    "start": "26599",
    "end": "28960"
  },
  {
    "text": "op I will say that that is actually",
    "start": "28960",
    "end": "30679"
  },
  {
    "text": "pretty",
    "start": "30679",
    "end": "31640"
  },
  {
    "text": "cool that it represents the",
    "start": "31640",
    "end": "35840"
  },
  {
    "text": "smallest compiler it's kind of a unique",
    "start": "35840",
    "end": "38520"
  },
  {
    "text": "metric I I don't know there's something",
    "start": "38520",
    "end": "40000"
  },
  {
    "text": "about that that's that's excit you know",
    "start": "40000",
    "end": "41320"
  },
  {
    "text": "what I mean it's just kind of exciting",
    "start": "41320",
    "end": "43200"
  },
  {
    "text": "opting system and the compiler weighs in",
    "start": "43200",
    "end": "45280"
  },
  {
    "text": "at under 200 btes a",
    "start": "45280",
    "end": "48800"
  },
  {
    "text": "brain how does it",
    "start": "50000",
    "end": "52280"
  },
  {
    "text": "work how can this how is this",
    "start": "52280",
    "end": "55039"
  },
  {
    "text": "possible how can you create look that",
    "start": "55039",
    "end": "57440"
  },
  {
    "text": "it's even doing CIS calls it's doing ass",
    "start": "57440",
    "end": "60440"
  },
  {
    "text": "calls I don't even know I don't know",
    "start": "60440",
    "end": "62519"
  },
  {
    "text": "what four minus bang b means but it's",
    "start": "62519",
    "end": "64559"
  },
  {
    "text": "due to CIS",
    "start": "64559",
    "end": "67560"
  },
  {
    "text": "call you know what I mean this it's",
    "start": "69920",
    "end": "72920"
  },
  {
    "text": "incredible I look at this how is main",
    "start": "72920",
    "end": "75759"
  },
  {
    "text": "rate",
    "start": "75759",
    "end": "78159"
  },
  {
    "text": "here oh my goodness Main's",
    "start": "79799",
    "end": "83960"
  },
  {
    "text": "recursive what",
    "start": "88200",
    "end": "91920"
  },
  {
    "text": "how's that I have never what a recursive",
    "start": "92079",
    "end": "97200"
  },
  {
    "text": "main what that can't be real that can't",
    "start": "97200",
    "end": "100920"
  },
  {
    "text": "I must be misreading this I have to be",
    "start": "100920",
    "end": "103159"
  },
  {
    "text": "misreading it oh my",
    "start": "103159",
    "end": "106280"
  },
  {
    "text": "this program starts with a 30,000 by",
    "start": "106960",
    "end": "110040"
  },
  {
    "text": "one-dimensional array all values are",
    "start": "110040",
    "end": "111840"
  },
  {
    "text": "initialized to zero then it provides a",
    "start": "111840",
    "end": "113600"
  },
  {
    "text": "movable pointer that you can manipulate",
    "start": "113600",
    "end": "115680"
  },
  {
    "text": "with eight different commands use angle",
    "start": "115680",
    "end": "117560"
  },
  {
    "text": "brackets to move the pointer left or",
    "start": "117560",
    "end": "119159"
  },
  {
    "text": "right by one cell at a time then",
    "start": "119159",
    "end": "121039"
  },
  {
    "text": "increment or decrement the value in a",
    "start": "121039",
    "end": "122880"
  },
  {
    "text": "Cell using plus or minus use a period to",
    "start": "122880",
    "end": "125640"
  },
  {
    "text": "Output the bite at the Pointer's current",
    "start": "125640",
    "end": "127360"
  },
  {
    "text": "location or use a comma to accept input",
    "start": "127360",
    "end": "129800"
  },
  {
    "text": "and store it at the Pointer's current",
    "start": "129800",
    "end": "131480"
  },
  {
    "text": "location and finally use opening and",
    "start": "131480",
    "end": "133680"
  },
  {
    "text": "closing brackets to create a loop notice",
    "start": "133680",
    "end": "135800"
  },
  {
    "text": "how brain [ __ ] doesn't require silly",
    "start": "135800",
    "end": "137560"
  },
  {
    "text": "things like variables functions and",
    "start": "137560",
    "end": "139440"
  },
  {
    "text": "classes to get started with brain [ __ ]",
    "start": "139440",
    "end": "143360"
  },
  {
    "text": "delete who needs those silly things like",
    "start": "143720",
    "end": "146120"
  },
  {
    "text": "variables",
    "start": "146120",
    "end": "147599"
  },
  {
    "text": "and and classes and",
    "start": "147599",
    "end": "150920"
  },
  {
    "text": "all that let's go",
    "start": "150920",
    "end": "153840"
  },
  {
    "text": "brain started with brain [ __ ] delete",
    "start": "153840",
    "end": "156120"
  },
  {
    "text": "your operating system and install a MGA",
    "start": "156120",
    "end": "158280"
  },
  {
    "text": "OS then create a file ending inbf which",
    "start": "158280",
    "end": "161159"
  },
  {
    "text": "stands for brain any characters that are",
    "start": "161159",
    "end": "163400"
  },
  {
    "text": "not the eight I mentioned previously",
    "start": "163400",
    "end": "164959"
  },
  {
    "text": "will be ignored as a comment at this",
    "start": "164959",
    "end": "167000"
  },
  {
    "text": "point we have an array with 30,000 8bit",
    "start": "167000",
    "end": "169400"
  },
  {
    "text": "numbers all set to zero to say hi mom",
    "start": "169400",
    "end": "171800"
  },
  {
    "text": "we'll need to set each number to its",
    "start": "171800",
    "end": "173400"
  },
  {
    "text": "corresponding asky character we can",
    "start": "173400",
    "end": "175200"
  },
  {
    "text": "increment the first cell then enter a",
    "start": "175200",
    "end": "177000"
  },
  {
    "text": "loop with an opening bracket for each",
    "start": "177000",
    "end": "178920"
  },
  {
    "text": "iteration of the loop will decrement the",
    "start": "178920",
    "end": "180840"
  },
  {
    "text": "current cell by five then use an angle",
    "start": "180840",
    "end": "182840"
  },
  {
    "text": "bracket to move one cell to the right",
    "start": "182840",
    "end": "184799"
  },
  {
    "text": "we'll increment that cell by three then",
    "start": "184799",
    "end": "186519"
  },
  {
    "text": "move back to the left and close the loop",
    "start": "186519",
    "end": "188519"
  },
  {
    "text": "the loop will continue until the",
    "start": "188519",
    "end": "189799"
  },
  {
    "text": "original cell goes back to zero at which",
    "start": "189799",
    "end": "191760"
  },
  {
    "text": "point it will exit we now have a value",
    "start": "191760",
    "end": "193680"
  },
  {
    "text": "of 103 at index one we can move",
    "start": "193680",
    "end": "196799"
  },
  {
    "text": "the I did not understand that okay I",
    "start": "196799",
    "end": "200000"
  },
  {
    "text": "must have missed that I missed this I",
    "start": "200000",
    "end": "202440"
  },
  {
    "text": "somehow missed that this was a real",
    "start": "202440",
    "end": "204239"
  },
  {
    "text": "thing",
    "start": "204239",
    "end": "207239"
  },
  {
    "text": "how did this get",
    "start": "215560",
    "end": "217920"
  },
  {
    "text": "103 decrementing wraps oh my",
    "start": "217920",
    "end": "222080"
  },
  {
    "text": "goodness oh they're 25 oh my goodness",
    "start": "222080",
    "end": "226640"
  },
  {
    "text": "it's so",
    "start": "226640",
    "end": "228319"
  },
  {
    "text": "brilliant oh it's using zero falsy and",
    "start": "228319",
    "end": "231040"
  },
  {
    "text": "wrapping a bite oh man oh",
    "start": "231040",
    "end": "235720"
  },
  {
    "text": "man I did not see that one coming I'm",
    "start": "235720",
    "end": "239319"
  },
  {
    "text": "laughing like someone with smoking all",
    "start": "239319",
    "end": "241599"
  },
  {
    "text": "his life oh my goodness it's to it",
    "start": "241599",
    "end": "243280"
  },
  {
    "text": "increment it to 104 then use a period to",
    "start": "243280",
    "end": "245920"
  },
  {
    "text": "Output it that corresponds to the letter",
    "start": "245920",
    "end": "247599"
  },
  {
    "text": "H and asky we can increment it again to",
    "start": "247599",
    "end": "249799"
  },
  {
    "text": "get 105 which corresponds to the letter",
    "start": "249799",
    "end": "252159"
  },
  {
    "text": "I now we continue this process of",
    "start": "252159",
    "end": "253799"
  },
  {
    "text": "manipulating memory like cavemen until",
    "start": "253799",
    "end": "255680"
  },
  {
    "text": "we output all the characters that we",
    "start": "255680",
    "end": "257120"
  },
  {
    "text": "need now to run your code use rightclick",
    "start": "257120",
    "end": "259320"
  },
  {
    "text": "copy and paste it into one of the many",
    "start": "259320",
    "end": "261359"
  },
  {
    "text": "online interpreters congratulations you",
    "start": "261359",
    "end": "263520"
  },
  {
    "text": "just said hi to your mom in brain [ __ ]",
    "start": "263520",
    "end": "265520"
  },
  {
    "text": "this has been brain [ __ ] in 100 seconds",
    "start": "265520",
    "end": "267680"
  },
  {
    "text": "if you want to see more brain [ __ ]",
    "start": "267680",
    "end": "269000"
  },
  {
    "text": "content on this channel Channel make",
    "start": "269000",
    "end": "270199"
  },
  {
    "text": "sure to hit the like button and",
    "start": "270199",
    "end": "271560"
  },
  {
    "text": "subscribe thanks for watching and I will",
    "start": "271560",
    "end": "273560"
  },
  {
    "text": "see you in what does that code do I'm",
    "start": "273560",
    "end": "276759"
  },
  {
    "text": "way too lazy to type this in there's",
    "start": "276759",
    "end": "278880"
  },
  {
    "text": "just no way I want to type that in but",
    "start": "278880",
    "end": "281199"
  },
  {
    "text": "at the exact same time I kind of want to",
    "start": "281199",
    "end": "283960"
  },
  {
    "text": "type that in oh no oh no what has",
    "start": "283960",
    "end": "287639"
  },
  {
    "text": "happened to me oh",
    "start": "287639",
    "end": "291840"
  },
  {
    "text": "no Google Lens yeah oh subscribe to",
    "start": "292440",
    "end": "297199"
  },
  {
    "text": "fireship it must be subscribed to",
    "start": "297199",
    "end": "299080"
  },
  {
    "text": "fireship that's actually a pretty good",
    "start": "299080",
    "end": "300520"
  },
  {
    "text": "that that that could very well be it oh",
    "start": "300520",
    "end": "302199"
  },
  {
    "text": "man subscribe to fireship people",
    "start": "302199",
    "end": "305039"
  },
  {
    "text": "okay clearly a good move clearly a good",
    "start": "305039",
    "end": "308240"
  },
  {
    "text": "move oh okay well that felt good that",
    "start": "308240",
    "end": "312280"
  },
  {
    "text": "feels really good what benefit does this",
    "start": "312280",
    "end": "313800"
  },
  {
    "text": "language even offer smallest compiler",
    "start": "313800",
    "end": "316759"
  },
  {
    "text": "did you not recursive main function it",
    "start": "316759",
    "end": "319680"
  },
  {
    "text": "doesn't have sh variables or",
    "start": "319680",
    "end": "322560"
  },
  {
    "text": "classes you just got what you need which",
    "start": "322560",
    "end": "325440"
  },
  {
    "text": "is a onedimensional",
    "start": "325440",
    "end": "327759"
  },
  {
    "text": "array of btes I mean that's really all",
    "start": "327759",
    "end": "330199"
  },
  {
    "text": "your program is anyways it's just a big",
    "start": "330199",
    "end": "331880"
  },
  {
    "text": "ass array of bites okay you're just",
    "start": "331880",
    "end": "334039"
  },
  {
    "text": "putting all this meaning okay you're",
    "start": "334039",
    "end": "337160"
  },
  {
    "text": "implicitly casting chars to",
    "start": "337160",
    "end": "341240"
  },
  {
    "text": "things like not",
    "start": "341240",
    "end": "344759"
  },
  {
    "text": "chars it's disgusting it's as touring",
    "start": "346080",
    "end": "348400"
  },
  {
    "text": "intended a big an infinitely long strip",
    "start": "348400",
    "end": "350520"
  },
  {
    "text": "of paper or 30,000 btes that's I mean",
    "start": "350520",
    "end": "352680"
  },
  {
    "text": "that's probably Infinity back in his day",
    "start": "352680",
    "end": "354360"
  },
  {
    "text": "30,000 bites that's out",
    "start": "354360",
    "end": "356080"
  },
  {
    "text": "outstanding uh yeah I'm a huge I I think",
    "start": "356080",
    "end": "358400"
  },
  {
    "text": "bra I think uh I think serverless brain",
    "start": "358400",
    "end": "361720"
  },
  {
    "text": "is where it's at okay I really do think",
    "start": "361720",
    "end": "364160"
  },
  {
    "text": "that that's where it's at perhaps one",
    "start": "364160",
    "end": "366080"
  },
  {
    "text": "day if I have enough time we'll create",
    "start": "366080",
    "end": "368039"
  },
  {
    "text": "our own JavaScript where you can output",
    "start": "368039",
    "end": "373800"
  },
  {
    "text": "elements and you just have you have",
    "start": "373800",
    "end": "375960"
  },
  {
    "text": "30,000 Dom nodes to",
    "start": "375960",
    "end": "379880"
  },
  {
    "text": "use and you have to wiggle around and",
    "start": "379880",
    "end": "382520"
  },
  {
    "text": "output them",
    "start": "382520",
    "end": "385918"
  }
]