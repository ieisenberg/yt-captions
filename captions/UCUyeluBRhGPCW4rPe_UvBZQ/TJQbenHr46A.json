[
  {
    "text": "all right guess what everybody we got",
    "start": "80",
    "end": "2000"
  },
  {
    "text": "another person coming in saying go nil",
    "start": "2000",
    "end": "4319"
  },
  {
    "text": "panic in the billion dooll mistake I",
    "start": "4319",
    "end": "6160"
  },
  {
    "text": "don't know about you but I have this",
    "start": "6160",
    "end": "7319"
  },
  {
    "text": "book little nice reading 100 go mistakes",
    "start": "7319",
    "end": "9679"
  },
  {
    "text": "and how to avoid them good book here",
    "start": "9679",
    "end": "11719"
  },
  {
    "text": "let's see what they have to say okay",
    "start": "11719",
    "end": "13320"
  },
  {
    "text": "let's see what they have to say at my",
    "start": "13320",
    "end": "14759"
  },
  {
    "text": "job we have a few dozen development",
    "start": "14759",
    "end": "16760"
  },
  {
    "text": "teams and a handful doing go the rest",
    "start": "16760",
    "end": "18680"
  },
  {
    "text": "are doing cotlin with spring I am a big",
    "start": "18680",
    "end": "20720"
  },
  {
    "text": "fan of go and honestly you know go it",
    "start": "20720",
    "end": "22760"
  },
  {
    "text": "doesn't make sense to me to ever use the",
    "start": "22760",
    "end": "25160"
  },
  {
    "text": "jvm Java virtual machine on Which cot",
    "start": "25160",
    "end": "27519"
  },
  {
    "text": "ler apps run again so I started push",
    "start": "27519",
    "end": "29840"
  },
  {
    "text": "with within the company for the other",
    "start": "29840",
    "end": "31080"
  },
  {
    "text": "teams to start using go to and a few",
    "start": "31080",
    "end": "32960"
  },
  {
    "text": "started new projects with go to try it",
    "start": "32960",
    "end": "34680"
  },
  {
    "text": "out sounds like a positive nice story by",
    "start": "34680",
    "end": "36360"
  },
  {
    "text": "the way also really cool that this guy",
    "start": "36360",
    "end": "37960"
  },
  {
    "text": "had enough sway to be able to get some",
    "start": "37960",
    "end": "39200"
  },
  {
    "text": "projects started out with go fast",
    "start": "39200",
    "end": "40440"
  },
  {
    "text": "forward a few months and the team who",
    "start": "40440",
    "end": "41960"
  },
  {
    "text": "maintains the subscription service has",
    "start": "41960",
    "end": "43440"
  },
  {
    "text": "their first Go app live it basically a",
    "start": "43440",
    "end": "46079"
  },
  {
    "text": "microservice which lets you get user",
    "start": "46079",
    "end": "47960"
  },
  {
    "text": "subscription information when calling",
    "start": "47960",
    "end": "49559"
  },
  {
    "text": "with a user ID the user information is",
    "start": "49559",
    "end": "52359"
  },
  {
    "text": "fetched from the DB in the call but",
    "start": "52359",
    "end": "54440"
  },
  {
    "text": "since we only have a few subscription",
    "start": "54440",
    "end": "55800"
  },
  {
    "text": "plans they are loaded once during",
    "start": "55800",
    "end": "57120"
  },
  {
    "text": "startup to keep in memory and refresh in",
    "start": "57120",
    "end": "59000"
  },
  {
    "text": "the background every few hours hours",
    "start": "59000",
    "end": "60239"
  },
  {
    "text": "fast forward again this by the way cash",
    "start": "60239",
    "end": "62039"
  },
  {
    "text": "inv validation is extremely hard okay",
    "start": "62039",
    "end": "63800"
  },
  {
    "text": "whenever I hear this I it immediately I",
    "start": "63800",
    "end": "65920"
  },
  {
    "text": "mean at least the GU is realistic about",
    "start": "65920",
    "end": "67439"
  },
  {
    "text": "it they have enough subscriptions that",
    "start": "67439",
    "end": "69159"
  },
  {
    "text": "they can keep all the subscriptions in",
    "start": "69159",
    "end": "70960"
  },
  {
    "text": "memory handrolled reddis easy enough",
    "start": "70960",
    "end": "72880"
  },
  {
    "text": "right I feel bad just saying that out",
    "start": "72880",
    "end": "74759"
  },
  {
    "text": "loud fast forward a few weeks again and",
    "start": "74759",
    "end": "77280"
  },
  {
    "text": "we are about to go live with the new",
    "start": "77280",
    "end": "78439"
  },
  {
    "text": "subscription plan it's loaded into the",
    "start": "78439",
    "end": "80119"
  },
  {
    "text": "subscription service database with flag",
    "start": "80119",
    "end": "81680"
  },
  {
    "text": "visible equals false and would be",
    "start": "81680",
    "end": "84240"
  },
  {
    "text": "brought live later by setting it to true",
    "start": "84240",
    "end": "86280"
  },
  {
    "text": "and refreshing the cache data in the app",
    "start": "86280",
    "end": "87759"
  },
  {
    "text": "the data was inserted into the database",
    "start": "87759",
    "end": "89200"
  },
  {
    "text": "in the afternoon some tests were",
    "start": "89200",
    "end": "90439"
  },
  {
    "text": "performed and everything looked fine by",
    "start": "90439",
    "end": "91720"
  },
  {
    "text": "the way this is what is called a shadow",
    "start": "91720",
    "end": "93240"
  },
  {
    "text": "traffic test which should be being",
    "start": "93240",
    "end": "94880"
  },
  {
    "text": "performed here if you're creating a",
    "start": "94880",
    "end": "96320"
  },
  {
    "text": "whole new rewrite of a service you take",
    "start": "96320",
    "end": "98399"
  },
  {
    "text": "a request and you replay it against your",
    "start": "98399",
    "end": "100640"
  },
  {
    "text": "new service ensuring that throughout say",
    "start": "100640",
    "end": "103159"
  },
  {
    "text": "like a week you return the same results",
    "start": "103159",
    "end": "105520"
  },
  {
    "text": "every time or the differentiation",
    "start": "105520",
    "end": "107600"
  },
  {
    "text": "between your two Services is known and",
    "start": "107600",
    "end": "109960"
  },
  {
    "text": "that's expected and that happens I'm",
    "start": "109960",
    "end": "112479"
  },
  {
    "text": "back today from my miserable life only",
    "start": "112479",
    "end": "114280"
  },
  {
    "text": "to be lightened up by your L takes okay",
    "start": "114280",
    "end": "117439"
  },
  {
    "text": "first off that was not an L take what I",
    "start": "117439",
    "end": "118920"
  },
  {
    "text": "just said there that was great advice so",
    "start": "118920",
    "end": "120560"
  },
  {
    "text": "you can shut the hell up and second off",
    "start": "120560",
    "end": "122960"
  },
  {
    "text": "let's see what happens later that day in",
    "start": "122960",
    "end": "125119"
  },
  {
    "text": "the evening the traffic is the highest",
    "start": "125119",
    "end": "127039"
  },
  {
    "text": "one by one the instances of the app",
    "start": "127039",
    "end": "128679"
  },
  {
    "text": "trigger and the background task to",
    "start": "128679",
    "end": "129959"
  },
  {
    "text": "reload the subscription data from the DB",
    "start": "129959",
    "end": "131800"
  },
  {
    "text": "and crash the instances try to start",
    "start": "131800",
    "end": "134480"
  },
  {
    "text": "again but they load data from the DB",
    "start": "134480",
    "end": "136080"
  },
  {
    "text": "during startup 2 and crash again within",
    "start": "136080",
    "end": "138160"
  },
  {
    "text": "minutes zero instances are available and",
    "start": "138160",
    "end": "140360"
  },
  {
    "text": "our entire service goes down for users",
    "start": "140360",
    "end": "142640"
  },
  {
    "text": "alerts go off people get paged the",
    "start": "142640",
    "end": "144400"
  },
  {
    "text": "support team is very confused because",
    "start": "144400",
    "end": "145760"
  },
  {
    "text": "there hasn't been a code Chang in weeks",
    "start": "145760",
    "end": "147760"
  },
  {
    "text": "so nothing to roll back and the it team",
    "start": "147760",
    "end": "150120"
  },
  {
    "text": "is brought in to debug and fix the issue",
    "start": "150120",
    "end": "152080"
  },
  {
    "text": "in the end our service was down for a",
    "start": "152080",
    "end": "153879"
  },
  {
    "text": "little over an hour with an estimated",
    "start": "153879",
    "end": "155239"
  },
  {
    "text": "Revenue loss of",
    "start": "155239",
    "end": "157360"
  },
  {
    "text": "$100,000 let's just let that one sit for",
    "start": "157360",
    "end": "159440"
  },
  {
    "text": "a second can we get some Fs in the chat",
    "start": "159440",
    "end": "160920"
  },
  {
    "text": "FS for $100,000 feels a little bad huh",
    "start": "160920",
    "end": "163200"
  },
  {
    "text": "so what happened when inserting the new",
    "start": "163200",
    "end": "164840"
  },
  {
    "text": "subscription into the database some",
    "start": "164840",
    "end": "166080"
  },
  {
    "text": "information was unknown and set to null",
    "start": "166080",
    "end": "168200"
  },
  {
    "text": "the app using using a pointer for these",
    "start": "168200",
    "end": "170480"
  },
  {
    "text": "optional Fields And while transforming",
    "start": "170480",
    "end": "172159"
  },
  {
    "text": "the data from the database struct into",
    "start": "172159",
    "end": "173599"
  },
  {
    "text": "another struct used in the API endpoints",
    "start": "173599",
    "end": "175800"
  },
  {
    "text": "a nilde reference happened loser uh by",
    "start": "175800",
    "end": "178040"
  },
  {
    "text": "the way this is one reason why options",
    "start": "178040",
    "end": "179440"
  },
  {
    "text": "are single-handedly the greatest there",
    "start": "179440",
    "end": "181360"
  },
  {
    "text": "is no greater decision made than to have",
    "start": "181360",
    "end": "184400"
  },
  {
    "text": "a nil pointer wrapped in an option with",
    "start": "184400",
    "end": "186400"
  },
  {
    "text": "a programmable interface to it and then",
    "start": "186400",
    "end": "188360"
  },
  {
    "text": "second that decoding Json is validation",
    "start": "188360",
    "end": "191120"
  },
  {
    "text": "now go does the first one very very well",
    "start": "191120",
    "end": "193280"
  },
  {
    "text": "decoding Json is validation but it",
    "start": "193280",
    "end": "195720"
  },
  {
    "text": "doesn't have an option options are so",
    "start": "195720",
    "end": "197840"
  },
  {
    "text": "good sounds like they kind of did the",
    "start": "197840",
    "end": "199040"
  },
  {
    "text": "microservice thing kind of wrong yeah",
    "start": "199040",
    "end": "200400"
  },
  {
    "text": "well I mean the obviously they made",
    "start": "200400",
    "end": "201760"
  },
  {
    "text": "mistakes but an option is",
    "start": "201760",
    "end": "203040"
  },
  {
    "text": "single-handedly the greatest data",
    "start": "203040",
    "end": "204599"
  },
  {
    "text": "structure for professional programming",
    "start": "204599",
    "end": "206720"
  },
  {
    "text": "ever oh hold on we got ourselves a",
    "start": "206720",
    "end": "208319"
  },
  {
    "text": "problem someone's saying we got to do",
    "start": "208319",
    "end": "209519"
  },
  {
    "text": "some ban what are we Banning who we",
    "start": "209519",
    "end": "211239"
  },
  {
    "text": "Banning who we Banning who who we",
    "start": "211239",
    "end": "213200"
  },
  {
    "text": "Banning who we Banning who we Banning",
    "start": "213200",
    "end": "214799"
  },
  {
    "text": "who we Banning def code okay Death code",
    "start": "214799",
    "end": "216560"
  },
  {
    "text": "we got it I'm all over it Death code bam",
    "start": "216560",
    "end": "219080"
  },
  {
    "text": "got him get the hell out of here didn't",
    "start": "219080",
    "end": "221239"
  },
  {
    "text": "even look at what you said get him got",
    "start": "221239",
    "end": "222959"
  },
  {
    "text": "him yeah so I was like what do he say",
    "start": "222959",
    "end": "225239"
  },
  {
    "text": "and people were all like screaming like",
    "start": "225239",
    "end": "226879"
  },
  {
    "text": "get him and I didn't even look at him",
    "start": "226879",
    "end": "229319"
  },
  {
    "text": "but I did that you know that scene in",
    "start": "229319",
    "end": "231200"
  },
  {
    "text": "300 where kicks the guy the same thing",
    "start": "231200",
    "end": "234360"
  },
  {
    "text": "like identical okay he's",
    "start": "234360",
    "end": "237480"
  },
  {
    "text": "Fall Fallen backwards right out the door",
    "start": "237480",
    "end": "240680"
  },
  {
    "text": "you know what I said to him as he fell",
    "start": "240680",
    "end": "241840"
  },
  {
    "text": "on the ground don't let the ground hit",
    "start": "241840",
    "end": "243760"
  },
  {
    "text": "you on the way out the app panicked and",
    "start": "243760",
    "end": "246400"
  },
  {
    "text": "quit and when starting up the app got",
    "start": "246400",
    "end": "248560"
  },
  {
    "text": "the same nil issue again and just",
    "start": "248560",
    "end": "250560"
  },
  {
    "text": "panicked immediately too yeah I mean",
    "start": "250560",
    "end": "252560"
  },
  {
    "text": "this is what it goes I really it's sad",
    "start": "252560",
    "end": "255120"
  },
  {
    "text": "due to the time period in which go was",
    "start": "255120",
    "end": "256880"
  },
  {
    "text": "created in which options weren't like",
    "start": "256880",
    "end": "259079"
  },
  {
    "text": "maybe options nonn whatever you call",
    "start": "259079",
    "end": "261440"
  },
  {
    "text": "them NBL or whatever stupid phrase you",
    "start": "261440",
    "end": "263639"
  },
  {
    "text": "want to speak of them as weren't really",
    "start": "263639",
    "end": "265520"
  },
  {
    "text": "part of the mainstream programming world",
    "start": "265520",
    "end": "267680"
  },
  {
    "text": "and that's one thing I wish go enforced",
    "start": "267680",
    "end": "270360"
  },
  {
    "text": "there's a couple things I wish they",
    "start": "270360",
    "end": "271440"
  },
  {
    "text": "enforced like you know maps maps you",
    "start": "271440",
    "end": "274000"
  },
  {
    "text": "can't have map's default value being nil",
    "start": "274000",
    "end": "276479"
  },
  {
    "text": "is emotionally painful we've all made",
    "start": "276479",
    "end": "278160"
  },
  {
    "text": "that mistake and you just have to learn",
    "start": "278160",
    "end": "279680"
  },
  {
    "text": "from that mistake you know what's an",
    "start": "279680",
    "end": "281479"
  },
  {
    "text": "option it's a monad duh it's a burrito",
    "start": "281479",
    "end": "283800"
  },
  {
    "text": "everybody knows about burritos you know",
    "start": "283800",
    "end": "286080"
  },
  {
    "text": "I right naturally many things went wrong",
    "start": "286080",
    "end": "288240"
  },
  {
    "text": "here an inexperienced team using go in",
    "start": "288240",
    "end": "290240"
  },
  {
    "text": "production for a critical app while they",
    "start": "290240",
    "end": "291759"
  },
  {
    "text": "hardly had any experience using a",
    "start": "291759",
    "end": "293320"
  },
  {
    "text": "pointer field without a nil check not",
    "start": "293320",
    "end": "295440"
  },
  {
    "text": "manually refreshing the cash data after",
    "start": "295440",
    "end": "297199"
  },
  {
    "text": "inserting it into the database having no",
    "start": "297199",
    "end": "298840"
  },
  {
    "text": "runbook ready to revert the data",
    "start": "298840",
    "end": "300800"
  },
  {
    "text": "insertion and notify support staff of",
    "start": "300800",
    "end": "302759"
  },
  {
    "text": "the data change or shall I say shadow",
    "start": "302759",
    "end": "305520"
  },
  {
    "text": "traffic shadow shadow test people okay",
    "start": "305520",
    "end": "308960"
  },
  {
    "text": "just do it you should always do that",
    "start": "308960",
    "end": "310639"
  },
  {
    "text": "when you rewrite just make sure the",
    "start": "310639",
    "end": "312360"
  },
  {
    "text": "thing is the thing but the Colin guys",
    "start": "312360",
    "end": "314320"
  },
  {
    "text": "were uh very fast to point out that this",
    "start": "314320",
    "end": "316720"
  },
  {
    "text": "would never happen in a cotlin or jvm",
    "start": "316720",
    "end": "319120"
  },
  {
    "text": "app first in cotland null is explicit so",
    "start": "319120",
    "end": "322280"
  },
  {
    "text": "null D reference cannot happen",
    "start": "322280",
    "end": "323960"
  },
  {
    "text": "accidentally unless you're using Java",
    "start": "323960",
    "end": "325479"
  },
  {
    "text": "code together with Colin code this is",
    "start": "325479",
    "end": "326880"
  },
  {
    "text": "facts I was about to say what do you",
    "start": "326880",
    "end": "327840"
  },
  {
    "text": "mean what what the hell do you even mean",
    "start": "327840",
    "end": "329560"
  },
  {
    "text": "but also when you get a null pointer",
    "start": "329560",
    "end": "330759"
  },
  {
    "text": "exception in the background thread only",
    "start": "330759",
    "end": "332440"
  },
  {
    "text": "the thread is killed and not the entire",
    "start": "332440",
    "end": "334080"
  },
  {
    "text": "app and even then most mechanisms to run",
    "start": "334080",
    "end": "336759"
  },
  {
    "text": "background tasks have error recovery",
    "start": "336759",
    "end": "338600"
  },
  {
    "text": "built in in the form of try catch around",
    "start": "338600",
    "end": "341039"
  },
  {
    "text": "the whole job yeah this this whole try",
    "start": "341039",
    "end": "343080"
  },
  {
    "text": "catch business it's just it's honestly",
    "start": "343080",
    "end": "344759"
  },
  {
    "text": "the worst it's honestly the worst to me",
    "start": "344759",
    "end": "346600"
  },
  {
    "text": "this was a big eye opener I'm pretty",
    "start": "346600",
    "end": "348400"
  },
  {
    "text": "experienced with go and was previously",
    "start": "348400",
    "end": "349759"
  },
  {
    "text": "recommending it to everyone now I'm not",
    "start": "349759",
    "end": "351319"
  },
  {
    "text": "so sure anymore what are your thoughts",
    "start": "351319",
    "end": "352759"
  },
  {
    "text": "on it this is actually a really it's a",
    "start": "352759",
    "end": "354280"
  },
  {
    "text": "really good really good suggestion it's",
    "start": "354280",
    "end": "355960"
  },
  {
    "text": "really good story obviously skill issues",
    "start": "355960",
    "end": "358000"
  },
  {
    "text": "plague everybody anyone who thinks that",
    "start": "358000",
    "end": "360319"
  },
  {
    "text": "some other language or some other",
    "start": "360319",
    "end": "361759"
  },
  {
    "text": "construct is going to prevent you from",
    "start": "361759",
    "end": "363080"
  },
  {
    "text": "having errors is kind of silly right",
    "start": "363080",
    "end": "364600"
  },
  {
    "text": "there's so many things you can do wrong",
    "start": "364600",
    "end": "366000"
  },
  {
    "text": "with rust like the amount of times I",
    "start": "366000",
    "end": "368160"
  },
  {
    "text": "have personally written or have",
    "start": "368160",
    "end": "369840"
  },
  {
    "text": "personally seen somebody due to how rust",
    "start": "369840",
    "end": "372199"
  },
  {
    "text": "requires you to write things have all",
    "start": "372199",
    "end": "374319"
  },
  {
    "text": "these Tokyo threads running just for it",
    "start": "374319",
    "end": "376440"
  },
  {
    "text": "to all funnel down to a single map with",
    "start": "376440",
    "end": "378680"
  },
  {
    "text": "a mutex around it I've done that I've",
    "start": "378680",
    "end": "380560"
  },
  {
    "text": "skill issued myself constantly in Rust",
    "start": "380560",
    "end": "382560"
  },
  {
    "text": "rust is a one giant skill issue non-stop",
    "start": "382560",
    "end": "385400"
  },
  {
    "text": "all the time always and forever I still",
    "start": "385400",
    "end": "387680"
  },
  {
    "text": "skill issue myself the thing about J",
    "start": "387680",
    "end": "389639"
  },
  {
    "text": "script that makes it so squirly even",
    "start": "389639",
    "end": "391319"
  },
  {
    "text": "with typescript support so you get",
    "start": "391319",
    "end": "392639"
  },
  {
    "text": "warned about the potential of null is",
    "start": "392639",
    "end": "394479"
  },
  {
    "text": "that you also have to know that there's",
    "start": "394479",
    "end": "396319"
  },
  {
    "text": "a potential of null also Json parsing is",
    "start": "396319",
    "end": "399400"
  },
  {
    "text": "not validation you can Json parse",
    "start": "399400",
    "end": "401560"
  },
  {
    "text": "anything and what ends up coming out is",
    "start": "401560",
    "end": "403280"
  },
  {
    "text": "an any and that's really important to",
    "start": "403280",
    "end": "405280"
  },
  {
    "text": "know because if you return from a",
    "start": "405280",
    "end": "406919"
  },
  {
    "text": "function with a signature and it's an",
    "start": "406919",
    "end": "408840"
  },
  {
    "text": "any or on the other hand you return a",
    "start": "408840",
    "end": "411479"
  },
  {
    "text": "Json parse out of a function in which",
    "start": "411479",
    "end": "413840"
  },
  {
    "text": "the definition says I'm a foo it will",
    "start": "413840",
    "end": "416840"
  },
  {
    "text": "automatically assign a foo and it will",
    "start": "416840",
    "end": "418680"
  },
  {
    "text": "be guaranteed to be a foo because it has",
    "start": "418680",
    "end": "421160"
  },
  {
    "text": "an implicit any on the Json return like",
    "start": "421160",
    "end": "423599"
  },
  {
    "text": "it's not easy there's a lot of",
    "start": "423599",
    "end": "424680"
  },
  {
    "text": "validation you have to do every single",
    "start": "424680",
    "end": "426160"
  },
  {
    "text": "function in JavaScript that has the word",
    "start": "426160",
    "end": "428400"
  },
  {
    "text": "await in it could possibly throw that's",
    "start": "428400",
    "end": "430759"
  },
  {
    "text": "also very very difficult there's lots of",
    "start": "430759",
    "end": "432759"
  },
  {
    "text": "foot guns in every single language and",
    "start": "432759",
    "end": "434400"
  },
  {
    "text": "each one has a different set of foot",
    "start": "434400",
    "end": "435680"
  },
  {
    "text": "guns so is go somehow better or worse",
    "start": "435680",
    "end": "438360"
  },
  {
    "text": "than cin I don't think so Panic only",
    "start": "438360",
    "end": "440160"
  },
  {
    "text": "kills the go routine it happened in",
    "start": "440160",
    "end": "441599"
  },
  {
    "text": "interesting okay skill issue should have",
    "start": "441599",
    "end": "443599"
  },
  {
    "text": "read Effective go before migrating",
    "start": "443599",
    "end": "445120"
  },
  {
    "text": "crucial microservices yeah okay that's",
    "start": "445120",
    "end": "447080"
  },
  {
    "text": "fair I I would definitely say one of the",
    "start": "447080",
    "end": "448520"
  },
  {
    "text": "biggest things that they obviously did",
    "start": "448520",
    "end": "449840"
  },
  {
    "text": "wrong is they found their one of their",
    "start": "449840",
    "end": "451280"
  },
  {
    "text": "most critical Services they ran no",
    "start": "451280",
    "end": "453319"
  },
  {
    "text": "Shadow traffic and they had a bunch of",
    "start": "453319",
    "end": "455160"
  },
  {
    "text": "rookies that have never written go write",
    "start": "455160",
    "end": "456840"
  },
  {
    "text": "it like did did all the rookies become",
    "start": "456840",
    "end": "458960"
  },
  {
    "text": "mid-level engineers afterwards yeah",
    "start": "458960",
    "end": "460840"
  },
  {
    "text": "they're probably actually really Adept",
    "start": "460840",
    "end": "462199"
  },
  {
    "text": "now with go and they probably will never",
    "start": "462199",
    "end": "464240"
  },
  {
    "text": "make the same mistake again yes that",
    "start": "464240",
    "end": "466599"
  },
  {
    "text": "sounds great let's see we do need to",
    "start": "466599",
    "end": "468120"
  },
  {
    "text": "throw an option type into the core and",
    "start": "468120",
    "end": "469960"
  },
  {
    "text": "be done with it you can totally write",
    "start": "469960",
    "end": "471599"
  },
  {
    "text": "one you just need to standardize also uh",
    "start": "471599",
    "end": "473759"
  },
  {
    "text": "don't do the previous 15",
    "start": "473759",
    "end": "476240"
  },
  {
    "text": "fuckups yes most I mean option type",
    "start": "476240",
    "end": "479520"
  },
  {
    "text": "would be great you just you will never",
    "start": "479520",
    "end": "481120"
  },
  {
    "text": "mess up again a nil right it'll be",
    "start": "481120",
    "end": "483240"
  },
  {
    "text": "fantastic if there was some sort of",
    "start": "483240",
    "end": "484720"
  },
  {
    "text": "option type you can just guarantee from",
    "start": "484720",
    "end": "486240"
  },
  {
    "text": "here on out beautiful right I think we",
    "start": "486240",
    "end": "487879"
  },
  {
    "text": "all agree to that",
    "start": "487879",
    "end": "489639"
  },
  {
    "text": "fantastic but it's so true you can still",
    "start": "489639",
    "end": "492039"
  },
  {
    "text": "there's so many runtime errors that you",
    "start": "492039",
    "end": "493599"
  },
  {
    "text": "will make no matter the language what's",
    "start": "493599",
    "end": "495120"
  },
  {
    "text": "an option type an option type is really",
    "start": "495120",
    "end": "496800"
  },
  {
    "text": "really simple I didn't know what an",
    "start": "496800",
    "end": "498800"
  },
  {
    "text": "option type was until I started using",
    "start": "498800",
    "end": "501159"
  },
  {
    "text": "rust and so an option type is a very",
    "start": "501159",
    "end": "503280"
  },
  {
    "text": "very simple item it's an it's an option",
    "start": "503280",
    "end": "506280"
  },
  {
    "text": "with a generic value underneath and it",
    "start": "506280",
    "end": "508680"
  },
  {
    "text": "has two values it can either be none or",
    "start": "508680",
    "end": "511120"
  },
  {
    "text": "it can be some with that whatever that",
    "start": "511120",
    "end": "514080"
  },
  {
    "text": "generic is as its value right we'll call",
    "start": "514080",
    "end": "516120"
  },
  {
    "text": "it t right so whatever we'll call it t",
    "start": "516120",
    "end": "518320"
  },
  {
    "text": "that's well now we're n thank you",
    "start": "518320",
    "end": "519800"
  },
  {
    "text": "everybody we're n So that's its two",
    "start": "519800",
    "end": "521200"
  },
  {
    "text": "values that means if you have a nil it",
    "start": "521200",
    "end": "523680"
  },
  {
    "text": "is none if you have a sum it is",
    "start": "523680",
    "end": "525680"
  },
  {
    "text": "something so underlying in the memory",
    "start": "525680",
    "end": "527640"
  },
  {
    "text": "what you're going to have is you're",
    "start": "527640",
    "end": "528600"
  },
  {
    "text": "going to have the tag and then you're",
    "start": "528600",
    "end": "530240"
  },
  {
    "text": "going to have the space for however big",
    "start": "530240",
    "end": "532640"
  },
  {
    "text": "I is which means that if you have a none",
    "start": "532640",
    "end": "535279"
  },
  {
    "text": "you're going to have something that",
    "start": "535279",
    "end": "536200"
  },
  {
    "text": "looks like this a tag zero plus all the",
    "start": "536200",
    "end": "538880"
  },
  {
    "text": "space now and I know this isn't",
    "start": "538880",
    "end": "539839"
  },
  {
    "text": "technically true technically if you have",
    "start": "539839",
    "end": "541399"
  },
  {
    "text": "a nun first it has this like memory",
    "start": "541399",
    "end": "543399"
  },
  {
    "text": "optimization trick but just deal with it",
    "start": "543399",
    "end": "545360"
  },
  {
    "text": "okay nonetheless you can never run into",
    "start": "545360",
    "end": "547399"
  },
  {
    "text": "a nil pointer because there is no such",
    "start": "547399",
    "end": "549040"
  },
  {
    "text": "thing as a nil pointer because",
    "start": "549040",
    "end": "550760"
  },
  {
    "text": "everything has a type and this thing is",
    "start": "550760",
    "end": "553320"
  },
  {
    "text": "a type so for you to get the value out",
    "start": "553320",
    "end": "555440"
  },
  {
    "text": "you have to do some sort of pattern",
    "start": "555440",
    "end": "556959"
  },
  {
    "text": "matching or some sort of like accessing",
    "start": "556959",
    "end": "559440"
  },
  {
    "text": "and so this is what's something it's",
    "start": "559440",
    "end": "561440"
  },
  {
    "text": "it's very very fantastic you there is no",
    "start": "561440",
    "end": "563600"
  },
  {
    "text": "such thing as a nil because it has a",
    "start": "563600",
    "end": "565200"
  },
  {
    "text": "typed wrap around it to prevent the",
    "start": "565200",
    "end": "567640"
  },
  {
    "text": "entire idea of null so good like okay so",
    "start": "567640",
    "end": "570320"
  },
  {
    "text": "why would you ever use this very very",
    "start": "570320",
    "end": "572040"
  },
  {
    "text": "simple let's say you have some Json and",
    "start": "572040",
    "end": "574200"
  },
  {
    "text": "you have a a field called A and A may or",
    "start": "574200",
    "end": "576920"
  },
  {
    "text": "may not be there well you can do what",
    "start": "576920",
    "end": "578839"
  },
  {
    "text": "you do in JavaScript and have a question",
    "start": "578839",
    "end": "580920"
  },
  {
    "text": "mark Or you can do what you do in other",
    "start": "580920",
    "end": "583279"
  },
  {
    "text": "languages and you have an option with",
    "start": "583279",
    "end": "584959"
  },
  {
    "text": "the type inside of it that means you",
    "start": "584959",
    "end": "587360"
  },
  {
    "text": "have a type in which you need to handle",
    "start": "587360",
    "end": "590560"
  },
  {
    "text": "or in the case of typescript you have a",
    "start": "590560",
    "end": "592760"
  },
  {
    "text": "linter that lets you know that this",
    "start": "592760",
    "end": "594680"
  },
  {
    "text": "thing could be undefined and so the idea",
    "start": "594680",
    "end": "597160"
  },
  {
    "text": "of having it as a type means that it's",
    "start": "597160",
    "end": "599360"
  },
  {
    "text": "significantly more strict like you can't",
    "start": "599360",
    "end": "601800"
  },
  {
    "text": "access the underlying value without",
    "start": "601800",
    "end": "603880"
  },
  {
    "text": "first going through the type and that's",
    "start": "603880",
    "end": "606360"
  },
  {
    "text": "called a lift operation or a",
    "start": "606360",
    "end": "610040"
  },
  {
    "text": "catamorphism use there are null types",
    "start": "616120",
    "end": "618839"
  },
  {
    "text": "you can use when deserializing DB",
    "start": "618839",
    "end": "620360"
  },
  {
    "text": "records They Live alongside a squeal",
    "start": "620360",
    "end": "622040"
  },
  {
    "text": "package there's also a version which",
    "start": "622040",
    "end": "623279"
  },
  {
    "text": "works with Json yaml too again pointers",
    "start": "623279",
    "end": "625200"
  },
  {
    "text": "are still widely idiomatic but it's",
    "start": "625200",
    "end": "626800"
  },
  {
    "text": "something to investigate mostly I think",
    "start": "626800",
    "end": "628519"
  },
  {
    "text": "having years experience helps the",
    "start": "628519",
    "end": "630160"
  },
  {
    "text": "cotland team at least as much as the",
    "start": "630160",
    "end": "632200"
  },
  {
    "text": "features being new to something is",
    "start": "632200",
    "end": "633959"
  },
  {
    "text": "always harder this is such a great point",
    "start": "633959",
    "end": "635920"
  },
  {
    "text": "I mean is this surprising at all should",
    "start": "635920",
    "end": "637480"
  },
  {
    "text": "you ever be surprised that you can run",
    "start": "637480",
    "end": "639160"
  },
  {
    "text": "into dumb problems like unless if the",
    "start": "639160",
    "end": "641200"
  },
  {
    "text": "language strictly Forbes it right so",
    "start": "641200",
    "end": "643440"
  },
  {
    "text": "rust would be a language that strictly",
    "start": "643440",
    "end": "644720"
  },
  {
    "text": "forbad a null pointer problem but you",
    "start": "644720",
    "end": "647200"
  },
  {
    "text": "can still in unsafe rust you can still",
    "start": "647200",
    "end": "648920"
  },
  {
    "text": "null pointer yourself but generally you",
    "start": "648920",
    "end": "651600"
  },
  {
    "text": "can't null pointer yourself like it's",
    "start": "651600",
    "end": "653519"
  },
  {
    "text": "just forbidden in safe rust and so",
    "start": "653519",
    "end": "655560"
  },
  {
    "text": "unless if you have that you're going to",
    "start": "655560",
    "end": "657079"
  },
  {
    "text": "it's going to happen do we have any",
    "start": "657079",
    "end": "658279"
  },
  {
    "text": "other fun ones as someone who works in a",
    "start": "658279",
    "end": "660000"
  },
  {
    "text": "programming language design I have to",
    "start": "660000",
    "end": "661480"
  },
  {
    "text": "agree with them nil and generally zero",
    "start": "661480",
    "end": "663480"
  },
  {
    "text": "values feel like big errors in the",
    "start": "663480",
    "end": "664880"
  },
  {
    "text": "design of go every other language design",
    "start": "664880",
    "end": "666720"
  },
  {
    "text": "in the last 25 years have found a",
    "start": "666720",
    "end": "668120"
  },
  {
    "text": "solution to this problem so I can't",
    "start": "668120",
    "end": "669800"
  },
  {
    "text": "understand why Go's designers decided to",
    "start": "669800",
    "end": "671440"
  },
  {
    "text": "make this choice I don't know about the",
    "start": "671440",
    "end": "672800"
  },
  {
    "text": "last 25 years you know I don't know if",
    "start": "672800",
    "end": "675480"
  },
  {
    "text": "1999 we fixed the null problem can",
    "start": "675480",
    "end": "678240"
  },
  {
    "text": "someone tell me what happened in 1999",
    "start": "678240",
    "end": "680320"
  },
  {
    "text": "that made people want to fix the null",
    "start": "680320",
    "end": "682079"
  },
  {
    "text": "problem seems kind of wild party like",
    "start": "682079",
    "end": "683760"
  },
  {
    "text": "it's 199 to Y2K came in yeah I know Y2K",
    "start": "683760",
    "end": "686760"
  },
  {
    "text": "baby all right hold on someone said",
    "start": "686760",
    "end": "687959"
  },
  {
    "text": "something about management maybe there's",
    "start": "687959",
    "end": "689480"
  },
  {
    "text": "a management process issue here too do",
    "start": "689480",
    "end": "691720"
  },
  {
    "text": "you really start your team's first real",
    "start": "691720",
    "end": "693560"
  },
  {
    "text": "experience with a new language by having",
    "start": "693560",
    "end": "695120"
  },
  {
    "text": "them code public facing Revenue critical",
    "start": "695120",
    "end": "698040"
  },
  {
    "text": "app if I say the word Shadow traffic one",
    "start": "698040",
    "end": "700440"
  },
  {
    "text": "more time I feel like you guys are going",
    "start": "700440",
    "end": "701680"
  },
  {
    "text": "to punch me and quit listening to me but",
    "start": "701680",
    "end": "703079"
  },
  {
    "text": "real talk just figu Shadow traffic if",
    "start": "703079",
    "end": "705680"
  },
  {
    "text": "you rewrite a surface oh my goodness",
    "start": "705680",
    "end": "707560"
  },
  {
    "text": "it's just like come on people like op",
    "start": "707560",
    "end": "710320"
  },
  {
    "text": "mentioned there were other processes",
    "start": "710320",
    "end": "712040"
  },
  {
    "text": "checks that would have caught this",
    "start": "712040",
    "end": "713000"
  },
  {
    "text": "regardless of the team being new to go",
    "start": "713000",
    "end": "714839"
  },
  {
    "text": "or not if this was the first time a new",
    "start": "714839",
    "end": "717240"
  },
  {
    "text": "subscription was added it should have",
    "start": "717240",
    "end": "718720"
  },
  {
    "text": "been done in a test environment first",
    "start": "718720",
    "end": "720959"
  },
  {
    "text": "especially if you're inserting null data",
    "start": "720959",
    "end": "722880"
  },
  {
    "text": "where it's available on every other",
    "start": "722880",
    "end": "724600"
  },
  {
    "text": "subscription and it's generally a better",
    "start": "724600",
    "end": "726560"
  },
  {
    "text": "practice to have non-null defaults in",
    "start": "726560",
    "end": "728440"
  },
  {
    "text": "your database to ensure your app handles",
    "start": "728440",
    "end": "730240"
  },
  {
    "text": "those default values yes this is a great",
    "start": "730240",
    "end": "733160"
  },
  {
    "text": "Point null values are just effing",
    "start": "733160",
    "end": "734720"
  },
  {
    "text": "dangerous to begin with just don't have",
    "start": "734720",
    "end": "736480"
  },
  {
    "text": "null values somebody please what is",
    "start": "736480",
    "end": "738120"
  },
  {
    "text": "Shadow traffic a shadow traffic is",
    "start": "738120",
    "end": "739600"
  },
  {
    "text": "really simple if you're ever building a",
    "start": "739600",
    "end": "741160"
  },
  {
    "text": "new service that is a rewrite of an old",
    "start": "741160",
    "end": "743480"
  },
  {
    "text": "service why is Shadow traffic so",
    "start": "743480",
    "end": "745480"
  },
  {
    "text": "important so what happens right now",
    "start": "745480",
    "end": "747120"
  },
  {
    "text": "today is you're going to have your old",
    "start": "747120",
    "end": "748399"
  },
  {
    "text": "service right here right your old",
    "start": "748399",
    "end": "750040"
  },
  {
    "text": "service is going to take in some sort of",
    "start": "750040",
    "end": "751440"
  },
  {
    "text": "HTP request coming in whatever it is and",
    "start": "751440",
    "end": "753720"
  },
  {
    "text": "it's going to respond with some data",
    "start": "753720",
    "end": "755160"
  },
  {
    "text": "whatever that data is a shadow request",
    "start": "755160",
    "end": "757760"
  },
  {
    "text": "is pretty simple is you take your new",
    "start": "757760",
    "end": "759639"
  },
  {
    "text": "service and you actually take this",
    "start": "759639",
    "end": "761760"
  },
  {
    "text": "request and you split it off and hit",
    "start": "761760",
    "end": "763959"
  },
  {
    "text": "your new service your new service then",
    "start": "763959",
    "end": "765920"
  },
  {
    "text": "responds also and it has what it",
    "start": "765920",
    "end": "768279"
  },
  {
    "text": "responds with you're going to take this",
    "start": "768279",
    "end": "770120"
  },
  {
    "text": "data and store it somewhere and then or",
    "start": "770120",
    "end": "773000"
  },
  {
    "text": "you live compare it at the point of",
    "start": "773000",
    "end": "775079"
  },
  {
    "text": "completion and you just say hey how is",
    "start": "775079",
    "end": "777120"
  },
  {
    "text": "new service doing is new service doing a",
    "start": "777120",
    "end": "780199"
  },
  {
    "text": "good job is new service responding the",
    "start": "780199",
    "end": "782800"
  },
  {
    "text": "same way as old service it's like a",
    "start": "782800",
    "end": "785279"
  },
  {
    "text": "canary except for it's not serving any",
    "start": "785279",
    "end": "788079"
  },
  {
    "text": "real world traffic it's not a comparison",
    "start": "788079",
    "end": "789959"
  },
  {
    "text": "of real world it's a comparison of is",
    "start": "789959",
    "end": "792320"
  },
  {
    "text": "this thing ready for the real world and",
    "start": "792320",
    "end": "794880"
  },
  {
    "text": "this is an extremely effective technique",
    "start": "794880",
    "end": "796800"
  },
  {
    "text": "to make sure that whatever you've made",
    "start": "796800",
    "end": "798639"
  },
  {
    "text": "is the same as the old version okay well",
    "start": "798639",
    "end": "800680"
  },
  {
    "text": "I think we've talked that one to death",
    "start": "800680",
    "end": "801920"
  },
  {
    "text": "the name is the primagen",
    "start": "801920",
    "end": "806399"
  }
]