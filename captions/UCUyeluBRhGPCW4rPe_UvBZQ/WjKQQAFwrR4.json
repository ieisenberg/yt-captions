[
  {
    "text": "how much memory do you need to run one",
    "start": "0",
    "end": "3959"
  },
  {
    "text": "million concurrent tasks",
    "start": "3959",
    "end": "6180"
  },
  {
    "text": "by the way alerts are off",
    "start": "6180",
    "end": "9360"
  },
  {
    "text": "uh uh in this blog post I delve into the",
    "start": "9360",
    "end": "12179"
  },
  {
    "text": "comparison of memory consumption between",
    "start": "12179",
    "end": "13380"
  },
  {
    "text": "asynchronous and multi-thread programs",
    "start": "13380",
    "end": "15000"
  },
  {
    "text": "across popular languages like rust go",
    "start": "15000",
    "end": "16800"
  },
  {
    "text": "Java C sharp",
    "start": "16800",
    "end": "19800"
  },
  {
    "text": "Python node.js and of course everybody's",
    "start": "19800",
    "end": "23039"
  },
  {
    "text": "favorite",
    "start": "23039",
    "end": "25080"
  },
  {
    "text": "these nuts uh sometimes ago I had to",
    "start": "25080",
    "end": "27660"
  },
  {
    "text": "compare performance of a few computer",
    "start": "27660",
    "end": "29099"
  },
  {
    "text": "programs designed to handle a large",
    "start": "29099",
    "end": "30599"
  },
  {
    "text": "number of network connections I saw a",
    "start": "30599",
    "end": "32578"
  },
  {
    "text": "huge difference in memory consumption of",
    "start": "32579",
    "end": "33840"
  },
  {
    "text": "those programs even exceeding 20x",
    "start": "33840",
    "end": "36960"
  },
  {
    "text": "okay that I mean it makes sense it will",
    "start": "36960",
    "end": "39600"
  },
  {
    "text": "you know how are they handling things",
    "start": "39600",
    "end": "40739"
  },
  {
    "text": "because I can go it's pretty it's pretty",
    "start": "40739",
    "end": "42780"
  },
  {
    "text": "slick goes pretty dang pretty dang slick",
    "start": "42780",
    "end": "45719"
  },
  {
    "text": "you know what I mean uh some programmers",
    "start": "45719",
    "end": "47520"
  },
  {
    "text": "consume little over 100 megabytes but",
    "start": "47520",
    "end": "49800"
  },
  {
    "text": "others reach almost uh three gigs I",
    "start": "49800",
    "end": "51480"
  },
  {
    "text": "think what he's trying to say here I",
    "start": "51480",
    "end": "52800"
  },
  {
    "text": "think what Peter what old Peter up there",
    "start": "52800",
    "end": "55879"
  },
  {
    "text": "kalaskowski is trying to say is that",
    "start": "55879",
    "end": "58500"
  },
  {
    "text": "node.js",
    "start": "58500",
    "end": "61079"
  },
  {
    "text": "node.js loves the memory okay at 10K",
    "start": "61079",
    "end": "63660"
  },
  {
    "text": "connections unfortunately those programs",
    "start": "63660",
    "end": "65400"
  },
  {
    "text": "were quite complex and differed also in",
    "start": "65400",
    "end": "67439"
  },
  {
    "text": "features so it'd be hard to compare them",
    "start": "67439",
    "end": "69299"
  },
  {
    "text": "directly and draw some meaningful",
    "start": "69299",
    "end": "70740"
  },
  {
    "text": "conclusion as that wouldn't be an apple",
    "start": "70740",
    "end": "72420"
  },
  {
    "text": "to Apple comparison this led me to an",
    "start": "72420",
    "end": "74580"
  },
  {
    "text": "idea of creating a synthetic Benchmark",
    "start": "74580",
    "end": "76619"
  },
  {
    "text": "instead",
    "start": "76619",
    "end": "79340"
  },
  {
    "text": "synthetic by the way I actually do want",
    "start": "79460",
    "end": "81659"
  },
  {
    "text": "to like follow this this little line of",
    "start": "81659",
    "end": "83460"
  },
  {
    "text": "thought right here so I want everyone to",
    "start": "83460",
    "end": "85020"
  },
  {
    "text": "pay really close attention if you go to",
    "start": "85020",
    "end": "86640"
  },
  {
    "text": "github.com the primogen right uh",
    "start": "86640",
    "end": "92460"
  },
  {
    "text": "and you look at this and you go to my",
    "start": "92820",
    "end": "96600"
  },
  {
    "text": "latest one is they're like yeah not left",
    "start": "96600",
    "end": "98340"
  },
  {
    "text": "pad there we go TS is rust zigds I guess",
    "start": "98340",
    "end": "101159"
  },
  {
    "text": "I'm I'm going through a D's face okay uh",
    "start": "101159",
    "end": "104159"
  },
  {
    "text": "if you go here you can join and add your",
    "start": "104159",
    "end": "106979"
  },
  {
    "text": "own language we're building The",
    "start": "106979",
    "end": "108600"
  },
  {
    "text": "Interpreter okay",
    "start": "108600",
    "end": "111560"
  },
  {
    "text": "and then I want to test it I actually",
    "start": "112140",
    "end": "113700"
  },
  {
    "text": "want to build a server that does like",
    "start": "113700",
    "end": "115920"
  },
  {
    "text": "full interpretation and we'll figure out",
    "start": "115920",
    "end": "117780"
  },
  {
    "text": "what the what the rules are and all that",
    "start": "117780",
    "end": "119340"
  },
  {
    "text": "but actually can compile remotely right",
    "start": "119340",
    "end": "122280"
  },
  {
    "text": "and then that is what language can do",
    "start": "122280",
    "end": "125520"
  },
  {
    "text": "that the fastest I feel like that is a",
    "start": "125520",
    "end": "127259"
  },
  {
    "text": "way cooler",
    "start": "127259",
    "end": "128520"
  },
  {
    "text": "like test of languages than these dumb",
    "start": "128520",
    "end": "130440"
  },
  {
    "text": "tests that you see right there's that",
    "start": "130440",
    "end": "131640"
  },
  {
    "text": "one YouTube video that did like uh that",
    "start": "131640",
    "end": "133980"
  },
  {
    "text": "just did like a mathematical formula and",
    "start": "133980",
    "end": "135599"
  },
  {
    "text": "be like which one does this one the best",
    "start": "135599",
    "end": "137640"
  },
  {
    "text": "and it's just like it but that's not",
    "start": "137640",
    "end": "139140"
  },
  {
    "text": "even like real at all okay you're not",
    "start": "139140",
    "end": "140640"
  },
  {
    "text": "even creating memory we need like memory",
    "start": "140640",
    "end": "142920"
  },
  {
    "text": "you need cleanup you need things that",
    "start": "142920",
    "end": "144780"
  },
  {
    "text": "happen you need connections you need sys",
    "start": "144780",
    "end": "146459"
  },
  {
    "text": "calls you want to see the entire you",
    "start": "146459",
    "end": "149160"
  },
  {
    "text": "know the entire thing you don't want to",
    "start": "149160",
    "end": "151260"
  },
  {
    "text": "just see like just some tiny little",
    "start": "151260",
    "end": "153060"
  },
  {
    "text": "nothing you know what I mean it never",
    "start": "153060",
    "end": "155340"
  },
  {
    "text": "works that way it's always a lie it's",
    "start": "155340",
    "end": "156720"
  },
  {
    "text": "just a lie it's just always alive",
    "start": "156720",
    "end": "158220"
  },
  {
    "text": "anyways let's do this",
    "start": "158220",
    "end": "161340"
  },
  {
    "text": "we have Microsoft guy yeah Benchmark I",
    "start": "161340",
    "end": "163620"
  },
  {
    "text": "created the following program in various",
    "start": "163620",
    "end": "165060"
  },
  {
    "text": "programming languages let's launch and",
    "start": "165060",
    "end": "166680"
  },
  {
    "text": "concurrent tasks for each tack waits for",
    "start": "166680",
    "end": "169260"
  },
  {
    "text": "10 seconds and then the program uh",
    "start": "169260",
    "end": "171060"
  },
  {
    "text": "exists after all the tasks finished what",
    "start": "171060",
    "end": "174900"
  },
  {
    "text": "the program continues to exist after we",
    "start": "174900",
    "end": "177300"
  },
  {
    "text": "are finished",
    "start": "177300",
    "end": "179660"
  },
  {
    "text": "I'm pretty sure this is like a fork bomb",
    "start": "180420",
    "end": "182220"
  },
  {
    "text": "then uh the number of tasses controlled",
    "start": "182220",
    "end": "184500"
  },
  {
    "text": "by the command line argument let's go",
    "start": "184500",
    "end": "186360"
  },
  {
    "text": "let's go the little help of chat",
    "start": "186360",
    "end": "188459"
  },
  {
    "text": "Jeopardy I could write such programs in",
    "start": "188459",
    "end": "190319"
  },
  {
    "text": "a few what",
    "start": "190319",
    "end": "192300"
  },
  {
    "text": "what",
    "start": "192300",
    "end": "194700"
  },
  {
    "text": "what do you mean",
    "start": "194700",
    "end": "197840"
  },
  {
    "text": "this is not hard in Rust I mean are you",
    "start": "198060",
    "end": "200580"
  },
  {
    "text": "using a real threat are using Hardware",
    "start": "200580",
    "end": "202379"
  },
  {
    "text": "threads or green threads or go that",
    "start": "202379",
    "end": "204540"
  },
  {
    "text": "simple Java this is probably not that",
    "start": "204540",
    "end": "206459"
  },
  {
    "text": "hard to probably do it in a few moments",
    "start": "206459",
    "end": "207900"
  },
  {
    "text": "of just a what do you mean chat Jeopardy",
    "start": "207900",
    "end": "209700"
  },
  {
    "text": "see this seems like such a crazy",
    "start": "209700",
    "end": "211379"
  },
  {
    "text": "crazy things people just love them Chad",
    "start": "211379",
    "end": "213239"
  },
  {
    "text": "jeopardies uh anyways rust I created",
    "start": "213239",
    "end": "215459"
  },
  {
    "text": "three programs in Rust the first one",
    "start": "215459",
    "end": "216780"
  },
  {
    "text": "uses traditional threads",
    "start": "216780",
    "end": "218940"
  },
  {
    "text": "that's what I wanted to see okay I",
    "start": "218940",
    "end": "221340"
  },
  {
    "text": "wanted to see one Hardware in one",
    "start": "221340",
    "end": "223860"
  },
  {
    "text": "language traditional threads okay I'm",
    "start": "223860",
    "end": "225840"
  },
  {
    "text": "sick of all this polyphretisms going on",
    "start": "225840",
    "end": "228540"
  },
  {
    "text": "uh here's the core of it bam make it",
    "start": "228540",
    "end": "231180"
  },
  {
    "text": "happen uh the other two versions had",
    "start": "231180",
    "end": "233340"
  },
  {
    "text": "async with Tokyo and the other with",
    "start": "233340",
    "end": "235739"
  },
  {
    "text": "async stood",
    "start": "235739",
    "end": "238379"
  },
  {
    "text": "here's the core of the Tokyo beautiful",
    "start": "238379",
    "end": "240299"
  },
  {
    "text": "beautiful",
    "start": "240299",
    "end": "242340"
  },
  {
    "text": "I like this the async stud uh variant is",
    "start": "242340",
    "end": "244799"
  },
  {
    "text": "very similar so I won't put it there go",
    "start": "244799",
    "end": "246239"
  },
  {
    "text": "uh go routines are the building block",
    "start": "246239",
    "end": "247799"
  },
  {
    "text": "for Conservancy so we don't need to do",
    "start": "247799",
    "end": "249180"
  },
  {
    "text": "them separately uh but we used a weight",
    "start": "249180",
    "end": "250920"
  },
  {
    "text": "group okay beautiful great use of a",
    "start": "250920",
    "end": "252720"
  },
  {
    "text": "weight group by the way this is a great",
    "start": "252720",
    "end": "254040"
  },
  {
    "text": "use of a weight await group loved it",
    "start": "254040",
    "end": "256260"
  },
  {
    "text": "loved every part of this uh again I",
    "start": "256260",
    "end": "258900"
  },
  {
    "text": "think go for all of its downfalls also",
    "start": "258900",
    "end": "261060"
  },
  {
    "text": "has a lot of updrafts what's what's the",
    "start": "261060",
    "end": "263520"
  },
  {
    "text": "term for like",
    "start": "263520",
    "end": "265259"
  },
  {
    "text": "what's the opposite of a downfall",
    "start": "265259",
    "end": "268620"
  },
  {
    "text": "yes I did have a bad experience with C",
    "start": "268620",
    "end": "270660"
  },
  {
    "text": "sharp why you bring that up okay",
    "start": "270660",
    "end": "273180"
  },
  {
    "text": "an upfall an upwind an updraft",
    "start": "273180",
    "end": "275940"
  },
  {
    "text": "an uplift",
    "start": "275940",
    "end": "278840"
  },
  {
    "text": "a boob job what do we call it",
    "start": "279000",
    "end": "281639"
  },
  {
    "text": "I don't even know",
    "start": "281639",
    "end": "283020"
  },
  {
    "text": "Java Java traditionally uses threads but",
    "start": "283020",
    "end": "285660"
  },
  {
    "text": "JD jdk 21 offers a preview of virtual",
    "start": "285660",
    "end": "289560"
  },
  {
    "text": "threads which are similar concept to go",
    "start": "289560",
    "end": "291479"
  },
  {
    "text": "routines look at Java go",
    "start": "291479",
    "end": "294199"
  },
  {
    "text": "Java has almost caught up to 2015. I",
    "start": "294199",
    "end": "297540"
  },
  {
    "text": "think we all need to be impressed right",
    "start": "297540",
    "end": "298919"
  },
  {
    "text": "now can we just take a moment to realize",
    "start": "298919",
    "end": "300960"
  },
  {
    "text": "that Java's going places it really is",
    "start": "300960",
    "end": "304320"
  },
  {
    "text": "like this is incredible",
    "start": "304320",
    "end": "306419"
  },
  {
    "text": "I mean the next thing you know",
    "start": "306419",
    "end": "308900"
  },
  {
    "text": "they I mean the next they could actually",
    "start": "308900",
    "end": "312180"
  },
  {
    "text": "beat C plus plus by the time C plus plus",
    "start": "312180",
    "end": "314880"
  },
  {
    "text": "23 comes out Java might actually be",
    "start": "314880",
    "end": "317580"
  },
  {
    "text": "exceeding what happened in 2023 as far",
    "start": "317580",
    "end": "320160"
  },
  {
    "text": "as technology Technologies go it could",
    "start": "320160",
    "end": "322560"
  },
  {
    "text": "be it could be incredible and I think",
    "start": "322560",
    "end": "324000"
  },
  {
    "text": "you guys are just not even considering",
    "start": "324000",
    "end": "325740"
  },
  {
    "text": "how amazing this is all right uh let's",
    "start": "325740",
    "end": "328199"
  },
  {
    "text": "see list of threads new arraylist good",
    "start": "328199",
    "end": "330120"
  },
  {
    "text": "choice of arraylist uh you did not",
    "start": "330120",
    "end": "331979"
  },
  {
    "text": "create you know a little alarming that",
    "start": "331979",
    "end": "334020"
  },
  {
    "text": "you didn't you know pre-populate the",
    "start": "334020",
    "end": "335699"
  },
  {
    "text": "size here you knew how big it was going",
    "start": "335699",
    "end": "337199"
  },
  {
    "text": "to be a bunch of things new threads all",
    "start": "337199",
    "end": "340139"
  },
  {
    "text": "right a little sleep little truck catch",
    "start": "340139",
    "end": "341880"
  },
  {
    "text": "uh does it so he's not counting one",
    "start": "341880",
    "end": "344220"
  },
  {
    "text": "thing I'd be a little careful of is even",
    "start": "344220",
    "end": "345840"
  },
  {
    "text": "though you don't need to there is no",
    "start": "345840",
    "end": "347580"
  },
  {
    "text": "counting right here going on right how",
    "start": "347580",
    "end": "350039"
  },
  {
    "text": "many times did this fail I think that's",
    "start": "350039",
    "end": "351360"
  },
  {
    "text": "really important to think about",
    "start": "351360",
    "end": "352979"
  },
  {
    "text": "you know just in case when you're",
    "start": "352979",
    "end": "354360"
  },
  {
    "text": "creating these tests you you need to do",
    "start": "354360",
    "end": "355919"
  },
  {
    "text": "that okay",
    "start": "355919",
    "end": "357479"
  },
  {
    "text": "um thread start thread add let's go",
    "start": "357479",
    "end": "359160"
  },
  {
    "text": "thread join perfect beautiful I'm",
    "start": "359160",
    "end": "361500"
  },
  {
    "text": "curious about this as well",
    "start": "361500",
    "end": "363360"
  },
  {
    "text": "when you go individual thread joins this",
    "start": "363360",
    "end": "366660"
  },
  {
    "text": "could be bad right am I am I right on",
    "start": "366660",
    "end": "368940"
  },
  {
    "text": "this one this could actually have a a",
    "start": "368940",
    "end": "370620"
  },
  {
    "text": "greater Slowdown",
    "start": "370620",
    "end": "372300"
  },
  {
    "text": "because you're you're doing it one at a",
    "start": "372300",
    "end": "374220"
  },
  {
    "text": "time and so you could have already had",
    "start": "374220",
    "end": "375660"
  },
  {
    "text": "like a hundred finished that you like",
    "start": "375660",
    "end": "377639"
  },
  {
    "text": "aren't",
    "start": "377639",
    "end": "378560"
  },
  {
    "text": "you know what I mean that's a race yeah",
    "start": "378560",
    "end": "381060"
  },
  {
    "text": "yeah I feel like this is",
    "start": "381060",
    "end": "383280"
  },
  {
    "text": "it's blocking I know that but it's it's",
    "start": "383280",
    "end": "385020"
  },
  {
    "text": "not just blocking us that you could pay",
    "start": "385020",
    "end": "387300"
  },
  {
    "text": "a huge penalty up front and then you'll",
    "start": "387300",
    "end": "390000"
  },
  {
    "text": "have this whole thing where you have to",
    "start": "390000",
    "end": "391199"
  },
  {
    "text": "go through each one and I assume also",
    "start": "391199",
    "end": "392580"
  },
  {
    "text": "join is like not a free call",
    "start": "392580",
    "end": "394680"
  },
  {
    "text": "I assume it's like a sis call is that",
    "start": "394680",
    "end": "396720"
  },
  {
    "text": "fair",
    "start": "396720",
    "end": "397560"
  },
  {
    "text": "I don't know I don't know what it takes",
    "start": "397560",
    "end": "398819"
  },
  {
    "text": "to do a join but my my assumption is",
    "start": "398819",
    "end": "400680"
  },
  {
    "text": "that it's a non-trivial cost",
    "start": "400680",
    "end": "403020"
  },
  {
    "text": "uh",
    "start": "403020",
    "end": "404460"
  },
  {
    "text": "you know what I mean yeah anyways just a",
    "start": "404460",
    "end": "406259"
  },
  {
    "text": "thought just a thought but I guess if",
    "start": "406259",
    "end": "407880"
  },
  {
    "text": "they're green threads maybe that's not",
    "start": "407880",
    "end": "409199"
  },
  {
    "text": "the case maybe they're actually really",
    "start": "409199",
    "end": "410460"
  },
  {
    "text": "fast and delicious you know what I mean",
    "start": "410460",
    "end": "413699"
  },
  {
    "text": "I don't know anyways these are just my",
    "start": "413699",
    "end": "415440"
  },
  {
    "text": "thoughts I'm just kind of raw dogging my",
    "start": "415440",
    "end": "417000"
  },
  {
    "text": "thoughts out here okay uh here's the the",
    "start": "417000",
    "end": "419160"
  },
  {
    "text": "variant with virtual threads uh notice",
    "start": "419160",
    "end": "421680"
  },
  {
    "text": "how similar they are oh nice that's",
    "start": "421680",
    "end": "423419"
  },
  {
    "text": "beautiful well done oh I guess these",
    "start": "423419",
    "end": "424979"
  },
  {
    "text": "ones are Hardware ones and the other one",
    "start": "424979",
    "end": "426419"
  },
  {
    "text": "these ones are Hardware ones these ones",
    "start": "426419",
    "end": "428100"
  },
  {
    "text": "are oh my goodness I'm scrolling way too",
    "start": "428100",
    "end": "429539"
  },
  {
    "text": "fast oh my goodness I'm gonna vomit",
    "start": "429539",
    "end": "430800"
  },
  {
    "text": "these ones are virtual ones beautiful",
    "start": "430800",
    "end": "432180"
  },
  {
    "text": "still doing that I don't like that C",
    "start": "432180",
    "end": "434280"
  },
  {
    "text": "sharp is similar to rust has first class",
    "start": "434280",
    "end": "436139"
  },
  {
    "text": "support for async await awesome so there",
    "start": "436139",
    "end": "438419"
  },
  {
    "text": "we go we're gonna do a little task run",
    "start": "438419",
    "end": "439800"
  },
  {
    "text": "right here so this must be uh okay so",
    "start": "439800",
    "end": "443520"
  },
  {
    "text": "this has to be",
    "start": "443520",
    "end": "446360"
  },
  {
    "text": "those have to be synthetic thread so",
    "start": "447539",
    "end": "449280"
  },
  {
    "text": "we're not actually getting so C sharp is",
    "start": "449280",
    "end": "450960"
  },
  {
    "text": "not doing Hardware thread so there does",
    "start": "450960",
    "end": "452280"
  },
  {
    "text": "need to be like a a disambiguation here",
    "start": "452280",
    "end": "454560"
  },
  {
    "text": "which one's doing like actual actual",
    "start": "454560",
    "end": "456840"
  },
  {
    "text": "threads versus which ones are doing some",
    "start": "456840",
    "end": "458580"
  },
  {
    "text": "sort of managed environment because I",
    "start": "458580",
    "end": "460139"
  },
  {
    "text": "would assume that the managed",
    "start": "460139",
    "end": "461400"
  },
  {
    "text": "environment this is where a managed",
    "start": "461400",
    "end": "463199"
  },
  {
    "text": "environment does amazing right",
    "start": "463199",
    "end": "466460"
  },
  {
    "text": "right I think so",
    "start": "467039",
    "end": "470940"
  },
  {
    "text": "you can do both",
    "start": "470940",
    "end": "473280"
  },
  {
    "text": "well I would assume whenever you see",
    "start": "473280",
    "end": "475199"
  },
  {
    "text": "something like uh async await usually",
    "start": "475199",
    "end": "476759"
  },
  {
    "text": "there's some sort of whole managed",
    "start": "476759",
    "end": "478500"
  },
  {
    "text": "environment that goes into it",
    "start": "478500",
    "end": "480060"
  },
  {
    "text": "usually right because if you're not",
    "start": "480060",
    "end": "482220"
  },
  {
    "text": "doing it yourself there's something else",
    "start": "482220",
    "end": "484259"
  },
  {
    "text": "going on you know what I mean I feel",
    "start": "484259",
    "end": "485520"
  },
  {
    "text": "like uh the managed environment would be",
    "start": "485520",
    "end": "487440"
  },
  {
    "text": "slower no because Hardware Hardware",
    "start": "487440",
    "end": "490500"
  },
  {
    "text": "threads are expensive",
    "start": "490500",
    "end": "492419"
  },
  {
    "text": "right uh node.js util's promise file",
    "start": "492419",
    "end": "495300"
  },
  {
    "text": "okay so again you don't want to do this",
    "start": "495300",
    "end": "497580"
  },
  {
    "text": "I feel like there is a little something",
    "start": "497580",
    "end": "499080"
  },
  {
    "text": "there you got to be careful about you",
    "start": "499080",
    "end": "500460"
  },
  {
    "text": "know maybe a little extra garbage",
    "start": "500460",
    "end": "502020"
  },
  {
    "text": "collection going on I don't know but",
    "start": "502020",
    "end": "503580"
  },
  {
    "text": "they're probably fine probably not a big",
    "start": "503580",
    "end": "504900"
  },
  {
    "text": "deal probably enough probably not oh my",
    "start": "504900",
    "end": "507479"
  },
  {
    "text": "goodness",
    "start": "507479",
    "end": "508879"
  },
  {
    "text": "probably not enough to be too upset",
    "start": "508879",
    "end": "511259"
  },
  {
    "text": "about it uh python",
    "start": "511259",
    "end": "514380"
  },
  {
    "text": "I don't know what delay is delay must",
    "start": "514380",
    "end": "516360"
  },
  {
    "text": "just be a function that returns a",
    "start": "516360",
    "end": "519180"
  },
  {
    "text": "oh set timeout oh yeah okay yeah yeah",
    "start": "519180",
    "end": "521820"
  },
  {
    "text": "I'm dumb I'm dumb this is also a syntax",
    "start": "521820",
    "end": "524159"
  },
  {
    "text": "error",
    "start": "524159",
    "end": "525959"
  },
  {
    "text": "guys",
    "start": "525959",
    "end": "527640"
  },
  {
    "text": "syntax error right there okay watch your",
    "start": "527640",
    "end": "531060"
  },
  {
    "text": "parents okay don't you should make sure",
    "start": "531060",
    "end": "533220"
  },
  {
    "text": "you always just put code up on an",
    "start": "533220",
    "end": "534779"
  },
  {
    "text": "article that's just like it works always",
    "start": "534779",
    "end": "536339"
  },
  {
    "text": "make sure I mean I've done it too we've",
    "start": "536339",
    "end": "538320"
  },
  {
    "text": "all done it just make sure it works",
    "start": "538320",
    "end": "539880"
  },
  {
    "text": "right okay so this is looking good uh",
    "start": "539880",
    "end": "541620"
  },
  {
    "text": "python out of days think of weight in",
    "start": "541620",
    "end": "543120"
  },
  {
    "text": "three five nice okay look at this",
    "start": "543120",
    "end": "545820"
  },
  {
    "text": "asyncio a sinkio there we go beautiful",
    "start": "545820",
    "end": "549380"
  },
  {
    "text": "uh that all looks great Elixir is famous",
    "start": "549380",
    "end": "552300"
  },
  {
    "text": "for async capabilities as well let's go",
    "start": "552300",
    "end": "555060"
  },
  {
    "text": "I love to see it uh task await mini",
    "start": "555060",
    "end": "557880"
  },
  {
    "text": "until infinity and beyond",
    "start": "557880",
    "end": "561899"
  },
  {
    "text": "you know I really hate that phrase by",
    "start": "561899",
    "end": "563580"
  },
  {
    "text": "Buzz Lightyear to infinity and beyond",
    "start": "563580",
    "end": "566459"
  },
  {
    "text": "wouldn't you not be at Infinity if you",
    "start": "566459",
    "end": "569940"
  },
  {
    "text": "could go beyond the point of infinity",
    "start": "569940",
    "end": "573800"
  },
  {
    "text": "isn't that just like not Infinity like",
    "start": "574140",
    "end": "576540"
  },
  {
    "text": "can we be real here",
    "start": "576540",
    "end": "579500"
  },
  {
    "text": "that's the joke",
    "start": "581660",
    "end": "585079"
  },
  {
    "text": "uh it's true also Infinity yeah I know",
    "start": "586800",
    "end": "589320"
  },
  {
    "text": "thank you Deep Thoughts with me",
    "start": "589320",
    "end": "591180"
  },
  {
    "text": "just letting you know deep thoughts all",
    "start": "591180",
    "end": "592860"
  },
  {
    "text": "right test environment Hardware Xeon",
    "start": "592860",
    "end": "594959"
  },
  {
    "text": "this thing okay",
    "start": "594959",
    "end": "596820"
  },
  {
    "text": "um this is starting to look like a",
    "start": "596820",
    "end": "598080"
  },
  {
    "text": "personal computer which again gotta be a",
    "start": "598080",
    "end": "599580"
  },
  {
    "text": "little careful uh rust 169 nice go",
    "start": "599580",
    "end": "603300"
  },
  {
    "text": "eighteen one",
    "start": "603300",
    "end": "605040"
  },
  {
    "text": "nice jdk",
    "start": "605040",
    "end": "608220"
  },
  {
    "text": "uh dot net node",
    "start": "608220",
    "end": "611300"
  },
  {
    "text": "python Elixir let's go all programs were",
    "start": "611300",
    "end": "614580"
  },
  {
    "text": "launched uh using release mode if",
    "start": "614580",
    "end": "616260"
  },
  {
    "text": "available other options were left uh",
    "start": "616260",
    "end": "618000"
  },
  {
    "text": "default",
    "start": "618000",
    "end": "619019"
  },
  {
    "text": "all right minimum of footprint let's",
    "start": "619019",
    "end": "620760"
  },
  {
    "text": "start with something small because some",
    "start": "620760",
    "end": "622260"
  },
  {
    "text": "of the runtimes requires uh some memory",
    "start": "622260",
    "end": "624120"
  },
  {
    "text": "for themselves yep that's right yep here",
    "start": "624120",
    "end": "626339"
  },
  {
    "text": "you go this makes sense though because a",
    "start": "626339",
    "end": "628440"
  },
  {
    "text": "node would be really really large well",
    "start": "628440",
    "end": "630180"
  },
  {
    "text": "c-sharp requires a 131 megabytes for",
    "start": "630180",
    "end": "633360"
  },
  {
    "text": "just nothing",
    "start": "633360",
    "end": "635839"
  },
  {
    "text": "what",
    "start": "636420",
    "end": "638760"
  },
  {
    "text": "like I get that there's like a whole",
    "start": "638760",
    "end": "641279"
  },
  {
    "text": "thing going on but that's just a lot",
    "start": "641279",
    "end": "645240"
  },
  {
    "text": "I mean this all seems about in line with",
    "start": "645240",
    "end": "647399"
  },
  {
    "text": "node right C sharp I I would what does C",
    "start": "647399",
    "end": "650339"
  },
  {
    "text": "sharp do that requires three times the",
    "start": "650339",
    "end": "652800"
  },
  {
    "text": "amount of telemetry information that the",
    "start": "652800",
    "end": "654959"
  },
  {
    "text": "other ones do",
    "start": "654959",
    "end": "656060"
  },
  {
    "text": "uh okay it's pindos anyways so go make",
    "start": "656060",
    "end": "660120"
  },
  {
    "text": "sense rust all these things make sense",
    "start": "660120",
    "end": "661800"
  },
  {
    "text": "right because they all should be really",
    "start": "661800",
    "end": "662940"
  },
  {
    "text": "really small because they're actually",
    "start": "662940",
    "end": "664019"
  },
  {
    "text": "you know these are actually like",
    "start": "664019",
    "end": "665820"
  },
  {
    "text": "compiled thingies but I would like to",
    "start": "665820",
    "end": "667980"
  },
  {
    "text": "say that this is really impressive for",
    "start": "667980",
    "end": "670019"
  },
  {
    "text": "go I want you to take a a moment about",
    "start": "670019",
    "end": "672180"
  },
  {
    "text": "this",
    "start": "672180",
    "end": "673019"
  },
  {
    "text": "this includes a garbage collector",
    "start": "673019",
    "end": "676579"
  },
  {
    "text": "okay like things are running here",
    "start": "676579",
    "end": "681079"
  },
  {
    "text": "that's really good that's really really",
    "start": "682680",
    "end": "684420"
  },
  {
    "text": "good good job go good job go that's",
    "start": "684420",
    "end": "686339"
  },
  {
    "text": "really really good the surprise hero is",
    "start": "686339",
    "end": "688680"
  },
  {
    "text": "python it shouldn't be surprising uh oh",
    "start": "688680",
    "end": "690540"
  },
  {
    "text": "I mean I guess it's surprising in the",
    "start": "690540",
    "end": "691740"
  },
  {
    "text": "sense that it's half the it's half the",
    "start": "691740",
    "end": "693240"
  },
  {
    "text": "memory of I I guess I would have I guess",
    "start": "693240",
    "end": "695220"
  },
  {
    "text": "in my head I would have probably put it",
    "start": "695220",
    "end": "696420"
  },
  {
    "text": "the same as Java or node.js uh Elixir",
    "start": "696420",
    "end": "699360"
  },
  {
    "text": "also a little surprising and so large",
    "start": "699360",
    "end": "701579"
  },
  {
    "text": "interesting",
    "start": "701579",
    "end": "703140"
  },
  {
    "text": "um",
    "start": "703140",
    "end": "703800"
  },
  {
    "text": "I wonder how he's getting the memory is",
    "start": "703800",
    "end": "705300"
  },
  {
    "text": "he using vmrss what does he use in here",
    "start": "705300",
    "end": "707279"
  },
  {
    "text": "uh we can see there's our certainly two",
    "start": "707279",
    "end": "708899"
  },
  {
    "text": "groups of programs go and rust programs",
    "start": "708899",
    "end": "710579"
  },
  {
    "text": "compile statically to Native binaries uh",
    "start": "710579",
    "end": "712680"
  },
  {
    "text": "need very little memory Yep this makes",
    "start": "712680",
    "end": "714120"
  },
  {
    "text": "sense the other programs running on",
    "start": "714120",
    "end": "715320"
  },
  {
    "text": "managed platforms and or let's see or",
    "start": "715320",
    "end": "717300"
  },
  {
    "text": "through interpreters consume more memory",
    "start": "717300",
    "end": "718800"
  },
  {
    "text": "although python fares really well in",
    "start": "718800",
    "end": "720300"
  },
  {
    "text": "this case there is about an order of",
    "start": "720300",
    "end": "722279"
  },
  {
    "text": "magnitude difference in memory",
    "start": "722279",
    "end": "723480"
  },
  {
    "text": "consumption between these two groups yep",
    "start": "723480",
    "end": "725100"
  },
  {
    "text": "uh it is a surprise to me that.net",
    "start": "725100",
    "end": "727079"
  },
  {
    "text": "somehow has the worst footprint but I",
    "start": "727079",
    "end": "728760"
  },
  {
    "text": "guess that uh this can be tuned with",
    "start": "728760",
    "end": "730560"
  },
  {
    "text": "some settings maybe let me know in the",
    "start": "730560",
    "end": "732300"
  },
  {
    "text": "comments okay this is good it's good",
    "start": "732300",
    "end": "733860"
  },
  {
    "text": "that he's stating where he's a little",
    "start": "733860",
    "end": "735540"
  },
  {
    "text": "bit surprised about I like to see that",
    "start": "735540",
    "end": "737040"
  },
  {
    "text": "all right so 10K tasks before I oh no oh",
    "start": "737040",
    "end": "740640"
  },
  {
    "text": "no you can see you can see what's",
    "start": "740640",
    "end": "741959"
  },
  {
    "text": "happening here all right so let's see",
    "start": "741959",
    "end": "743399"
  },
  {
    "text": "rust threads this this makes this makes",
    "start": "743399",
    "end": "746040"
  },
  {
    "text": "perfect sense right it is expensive",
    "start": "746040",
    "end": "749339"
  },
  {
    "text": "so I guess one thing that they we didn't",
    "start": "749339",
    "end": "751800"
  },
  {
    "text": "specify here or that he didn't speak",
    "start": "751800",
    "end": "753959"
  },
  {
    "text": "about with these two right here which",
    "start": "753959",
    "end": "756480"
  },
  {
    "text": "was how much",
    "start": "756480",
    "end": "759300"
  },
  {
    "text": "worker threads were created",
    "start": "759300",
    "end": "763220"
  },
  {
    "text": "right",
    "start": "763740",
    "end": "764880"
  },
  {
    "text": "so I don't know what Tokyo does",
    "start": "764880",
    "end": "767940"
  },
  {
    "text": "but there is definitely something to",
    "start": "767940",
    "end": "769380"
  },
  {
    "text": "that right uh threat stack size right",
    "start": "769380",
    "end": "771600"
  },
  {
    "text": "yeah there's a there's a lot here that",
    "start": "771600",
    "end": "773100"
  },
  {
    "text": "might be hidden that we may not be uh",
    "start": "773100",
    "end": "775800"
  },
  {
    "text": "considering correctly there's just it",
    "start": "775800",
    "end": "778440"
  },
  {
    "text": "just looks really small which it may not",
    "start": "778440",
    "end": "780660"
  },
  {
    "text": "be this again this is one of the",
    "start": "780660",
    "end": "782399"
  },
  {
    "text": "problems about making a really really",
    "start": "782399",
    "end": "784079"
  },
  {
    "text": "small synthetic test is that you don't",
    "start": "784079",
    "end": "786420"
  },
  {
    "text": "know what's going to get you this makes",
    "start": "786420",
    "end": "788160"
  },
  {
    "text": "more sense this is something I I guess I",
    "start": "788160",
    "end": "790019"
  },
  {
    "text": "I can believe go being this uh just",
    "start": "790019",
    "end": "792720"
  },
  {
    "text": "because go does have a whole managed",
    "start": "792720",
    "end": "794399"
  },
  {
    "text": "system around it and so this is good",
    "start": "794399",
    "end": "797279"
  },
  {
    "text": "this is still great this is less than",
    "start": "797279",
    "end": "798660"
  },
  {
    "text": "what it took a thousand or ten thousand",
    "start": "798660",
    "end": "801420"
  },
  {
    "text": "go threads go routines go go co routines",
    "start": "801420",
    "end": "805040"
  },
  {
    "text": "uh is less memory",
    "start": "805040",
    "end": "807720"
  },
  {
    "text": "than node.js by itself right so it's",
    "start": "807720",
    "end": "810660"
  },
  {
    "text": "pretty good",
    "start": "810660",
    "end": "811680"
  },
  {
    "text": "pretty dang good I like to see this uh",
    "start": "811680",
    "end": "813839"
  },
  {
    "text": "let's see Java virtual threads yeah this",
    "start": "813839",
    "end": "815399"
  },
  {
    "text": "makes sense I'm a little bit surprised",
    "start": "815399",
    "end": "816600"
  },
  {
    "text": "that Java is that big for regular",
    "start": "816600",
    "end": "818220"
  },
  {
    "text": "threads right uh C sharp I assume",
    "start": "818220",
    "end": "820680"
  },
  {
    "text": "doesn't change much yeah it doesn't",
    "start": "820680",
    "end": "822180"
  },
  {
    "text": "change pretty much at all because again",
    "start": "822180",
    "end": "823920"
  },
  {
    "text": "it's probably doing the same Tokyo thing",
    "start": "823920",
    "end": "825959"
  },
  {
    "text": "that's going on here added nothing",
    "start": "825959",
    "end": "829440"
  },
  {
    "text": "all right",
    "start": "829440",
    "end": "831959"
  },
  {
    "text": "so this makes sense",
    "start": "831959",
    "end": "833579"
  },
  {
    "text": "uh virtual threads also this is you know",
    "start": "833579",
    "end": "836040"
  },
  {
    "text": "slightly in line this is more in line",
    "start": "836040",
    "end": "837300"
  },
  {
    "text": "with go I guess uh note I'm very",
    "start": "837300",
    "end": "841440"
  },
  {
    "text": "curious how that one I guess it's",
    "start": "841440",
    "end": "843060"
  },
  {
    "text": "because set timeout is not really",
    "start": "843060",
    "end": "845880"
  },
  {
    "text": "so one thing that he did not do",
    "start": "845880",
    "end": "847380"
  },
  {
    "text": "correctly is it's not",
    "start": "847380",
    "end": "849500"
  },
  {
    "text": "no doesn't really have this concept of",
    "start": "849500",
    "end": "851880"
  },
  {
    "text": "threads right I I guess maybe the most",
    "start": "851880",
    "end": "854700"
  },
  {
    "text": "correct way you could do this would be",
    "start": "854700",
    "end": "857100"
  },
  {
    "text": "do would to do something like",
    "start": "857100",
    "end": "859920"
  },
  {
    "text": "uh worker workers right",
    "start": "859920",
    "end": "862380"
  },
  {
    "text": "and the reason why this is kind of odd",
    "start": "862380",
    "end": "864240"
  },
  {
    "text": "is that node just creates a uh a a event",
    "start": "864240",
    "end": "869160"
  },
  {
    "text": "Loop item",
    "start": "869160",
    "end": "870600"
  },
  {
    "text": "and that event Loop item is probably",
    "start": "870600",
    "end": "872339"
  },
  {
    "text": "some very small piece of information my",
    "start": "872339",
    "end": "874139"
  },
  {
    "text": "guess is that especially since the timer",
    "start": "874139",
    "end": "875880"
  },
  {
    "text": "is probably a time for when it's done",
    "start": "875880",
    "end": "877920"
  },
  {
    "text": "and a pointer to a function to call",
    "start": "877920",
    "end": "879779"
  },
  {
    "text": "right it's like going to be a pretty",
    "start": "879779",
    "end": "881699"
  },
  {
    "text": "dang small amount of memory",
    "start": "881699",
    "end": "883920"
  },
  {
    "text": "and so this makes sense that node really",
    "start": "883920",
    "end": "885660"
  },
  {
    "text": "doesn't do much because you actually",
    "start": "885660",
    "end": "886800"
  },
  {
    "text": "didn't create multiple threads",
    "start": "886800",
    "end": "889440"
  },
  {
    "text": "you created 10 000 timers which is much",
    "start": "889440",
    "end": "892860"
  },
  {
    "text": "much different uh because all of these",
    "start": "892860",
    "end": "895380"
  },
  {
    "text": "through here they can they can also uh",
    "start": "895380",
    "end": "898740"
  },
  {
    "text": "execute with parallelism",
    "start": "898740",
    "end": "901019"
  },
  {
    "text": "you know what I mean",
    "start": "901019",
    "end": "902519"
  },
  {
    "text": "there's parallelism that can go on in",
    "start": "902519",
    "end": "904680"
  },
  {
    "text": "these that cannot happen in node.js",
    "start": "904680",
    "end": "906660"
  },
  {
    "text": "therefore they're not really equal so",
    "start": "906660",
    "end": "908820"
  },
  {
    "text": "it'd have to be worker threads you'd",
    "start": "908820",
    "end": "910260"
  },
  {
    "text": "have to use something like worker",
    "start": "910260",
    "end": "911100"
  },
  {
    "text": "threads I don't know if python has the",
    "start": "911100",
    "end": "912779"
  },
  {
    "text": "same parallelism problem I don't really",
    "start": "912779",
    "end": "914519"
  },
  {
    "text": "know how python works and I also don't",
    "start": "914519",
    "end": "916500"
  },
  {
    "text": "know how Elixir works but good job",
    "start": "916500",
    "end": "917820"
  },
  {
    "text": "elixir",
    "start": "917820",
    "end": "919019"
  },
  {
    "text": "right",
    "start": "919019",
    "end": "920339"
  },
  {
    "text": "I said parallelism parallelism",
    "start": "920339",
    "end": "922260"
  },
  {
    "text": "intentionally because these can all",
    "start": "922260",
    "end": "923940"
  },
  {
    "text": "execute with parallel parallelism",
    "start": "923940",
    "end": "925860"
  },
  {
    "text": "parallel parallelism depending on how",
    "start": "925860",
    "end": "928920"
  },
  {
    "text": "many worker threads where's Gradle great",
    "start": "928920",
    "end": "930720"
  },
  {
    "text": "question",
    "start": "930720",
    "end": "931860"
  },
  {
    "text": "all right few surprises uh everybody",
    "start": "931860",
    "end": "933959"
  },
  {
    "text": "probably expected the threads would be a",
    "start": "933959",
    "end": "936000"
  },
  {
    "text": "big loser of this Benchmark and this is",
    "start": "936000",
    "end": "937860"
  },
  {
    "text": "true for Java threads which indeed",
    "start": "937860",
    "end": "939240"
  },
  {
    "text": "consumed about 250 megabytes of ram the",
    "start": "939240",
    "end": "941519"
  },
  {
    "text": "native Linux threads used uh from rust",
    "start": "941519",
    "end": "943260"
  },
  {
    "text": "seem to be lightweight enough that the",
    "start": "943260",
    "end": "945120"
  },
  {
    "text": "10K threads of memory consumption is",
    "start": "945120",
    "end": "946680"
  },
  {
    "text": "still lower than the idle memory",
    "start": "946680",
    "end": "948000"
  },
  {
    "text": "consumption of many other runtimes async",
    "start": "948000",
    "end": "950699"
  },
  {
    "text": "tasks or virtual green threads might be",
    "start": "950699",
    "end": "952680"
  },
  {
    "text": "lighter than native threads",
    "start": "952680",
    "end": "954540"
  },
  {
    "text": "I would say might is I mean observably",
    "start": "954540",
    "end": "957660"
  },
  {
    "text": "probably true is what we're seeing here",
    "start": "957660",
    "end": "960480"
  },
  {
    "text": "right I'd say it's observably true uh",
    "start": "960480",
    "end": "963060"
  },
  {
    "text": "but we don't see the advantage at uh",
    "start": "963060",
    "end": "965040"
  },
  {
    "text": "only 10K tasks we need more tasks",
    "start": "965040",
    "end": "967560"
  },
  {
    "text": "okay another surprise here is go uh go",
    "start": "967560",
    "end": "970620"
  },
  {
    "text": "routines are supposed to be very",
    "start": "970620",
    "end": "972180"
  },
  {
    "text": "lightweight but they're actually",
    "start": "972180",
    "end": "973139"
  },
  {
    "text": "consumed more than 50 of the ram",
    "start": "973139",
    "end": "975120"
  },
  {
    "text": "required by rust threads honestly I was",
    "start": "975120",
    "end": "977279"
  },
  {
    "text": "expecting much bigger difference in",
    "start": "977279",
    "end": "978540"
  },
  {
    "text": "favor of go hence I conclude uh conclude",
    "start": "978540",
    "end": "981000"
  },
  {
    "text": "that 10K current tasks threads are quite",
    "start": "981000",
    "end": "983699"
  },
  {
    "text": "competitive alternative Linux kernel uh",
    "start": "983699",
    "end": "985680"
  },
  {
    "text": "definitely does something right here",
    "start": "985680",
    "end": "987959"
  },
  {
    "text": "huh",
    "start": "987959",
    "end": "989339"
  },
  {
    "text": "again I don't again I I'm not sure how",
    "start": "989339",
    "end": "992279"
  },
  {
    "text": "much I buy this I don't know I don't",
    "start": "992279",
    "end": "994380"
  },
  {
    "text": "know what go does",
    "start": "994380",
    "end": "997339"
  },
  {
    "text": "you know what I mean I don't know what",
    "start": "998459",
    "end": "999959"
  },
  {
    "text": "go does that makes this good or bad go",
    "start": "999959",
    "end": "1002480"
  },
  {
    "text": "maybe reserving more memory it may have",
    "start": "1002480",
    "end": "1005120"
  },
  {
    "text": "different parameters than something like",
    "start": "1005120",
    "end": "1007220"
  },
  {
    "text": "Tokyo does and so",
    "start": "1007220",
    "end": "1009320"
  },
  {
    "text": "again I don't know how fair this is to",
    "start": "1009320",
    "end": "1011180"
  },
  {
    "text": "say that rust greatly outperformed it",
    "start": "1011180",
    "end": "1012920"
  },
  {
    "text": "because it's not doing anything too much",
    "start": "1012920",
    "end": "1015139"
  },
  {
    "text": "Telemetry too much Telemetry all right",
    "start": "1015139",
    "end": "1017839"
  },
  {
    "text": "go also has lost its advantage over rust",
    "start": "1017839",
    "end": "1019880"
  },
  {
    "text": "Ace uh async in the previous Benchmark",
    "start": "1019880",
    "end": "1021740"
  },
  {
    "text": "it now consumes over six more times more",
    "start": "1021740",
    "end": "1023660"
  },
  {
    "text": "memory than the best rust program which",
    "start": "1023660",
    "end": "1025699"
  },
  {
    "text": "is also taken by python yeah the final",
    "start": "1025699",
    "end": "1027678"
  },
  {
    "text": "surprise is that 10K task memory",
    "start": "1027679",
    "end": "1029178"
  },
  {
    "text": "consumption.net didn't significantly go",
    "start": "1029179",
    "end": "1031040"
  },
  {
    "text": "up uh from the idle memory used yeah",
    "start": "1031040",
    "end": "1032600"
  },
  {
    "text": "again",
    "start": "1032600",
    "end": "1035020"
  },
  {
    "text": "Telemetry now uh Telemetry it's actually",
    "start": "1035059",
    "end": "1037760"
  },
  {
    "text": "just Telemetry uh probably it just uses",
    "start": "1037760",
    "end": "1039860"
  },
  {
    "text": "pre-allocated memory or its idle memory",
    "start": "1039860",
    "end": "1041418"
  },
  {
    "text": "is just so high uh that it 10ks didn't",
    "start": "1041419",
    "end": "1043760"
  },
  {
    "text": "yeah it didn't matter okay 100 000 tasks",
    "start": "1043760",
    "end": "1046280"
  },
  {
    "text": "okay let's do this let's see uh so the",
    "start": "1046280",
    "end": "1049280"
  },
  {
    "text": "thread benchmarks could be excluded",
    "start": "1049280",
    "end": "1050480"
  },
  {
    "text": "probably this could have somehow tweaked",
    "start": "1050480",
    "end": "1052520"
  },
  {
    "text": "by changing uh system settings but after",
    "start": "1052520",
    "end": "1054740"
  },
  {
    "text": "about an hour I gave up so hires a",
    "start": "1054740",
    "end": "1056480"
  },
  {
    "text": "hundred thousand tasks",
    "start": "1056480",
    "end": "1059320"
  },
  {
    "text": "okay so yeah you can't spawn non there",
    "start": "1059860",
    "end": "1062840"
  },
  {
    "text": "you go so this is a good notice that all",
    "start": "1062840",
    "end": "1065559"
  },
  {
    "text": "non-green uh threads have all gone away",
    "start": "1065559",
    "end": "1069020"
  },
  {
    "text": "so I I guess my guess is that his",
    "start": "1069020",
    "end": "1070760"
  },
  {
    "text": "program kept crashing he probably I",
    "start": "1070760",
    "end": "1072559"
  },
  {
    "text": "would assume your U limit you should be",
    "start": "1072559",
    "end": "1074360"
  },
  {
    "text": "able to do you I don't know if there's",
    "start": "1074360",
    "end": "1075679"
  },
  {
    "text": "like I don't know what the potential",
    "start": "1075679",
    "end": "1078020"
  },
  {
    "text": "requirements are that you can't spawn a",
    "start": "1078020",
    "end": "1079820"
  },
  {
    "text": "hundred thousand threads but my guess is",
    "start": "1079820",
    "end": "1081080"
  },
  {
    "text": "that you just Fork bomb yourself and it",
    "start": "1081080",
    "end": "1083179"
  },
  {
    "text": "explodes and dies",
    "start": "1083179",
    "end": "1084740"
  },
  {
    "text": "um all right so Tokyo's gone up this has",
    "start": "1084740",
    "end": "1087799"
  },
  {
    "text": "gone up this has gone up like to me this",
    "start": "1087799",
    "end": "1090320"
  },
  {
    "text": "is pretty these are all pretty fine",
    "start": "1090320",
    "end": "1092059"
  },
  {
    "text": "again I really doubt C Sharp's doing",
    "start": "1092059",
    "end": "1094280"
  },
  {
    "text": "something right something about C sharp",
    "start": "1094280",
    "end": "1096679"
  },
  {
    "text": "tells me that this is not executing the",
    "start": "1096679",
    "end": "1098419"
  },
  {
    "text": "way you think it is",
    "start": "1098419",
    "end": "1100340"
  },
  {
    "text": "can we all agree that this is not doing",
    "start": "1100340",
    "end": "1102380"
  },
  {
    "text": "what you think it is",
    "start": "1102380",
    "end": "1105220"
  },
  {
    "text": "there's no way that you just did ten",
    "start": "1107620",
    "end": "1110299"
  },
  {
    "text": "thousand there's no way that you did one",
    "start": "1110299",
    "end": "1112160"
  },
  {
    "text": "to ten thousand to a hundred thousand",
    "start": "1112160",
    "end": "1114799"
  },
  {
    "text": "with absolutely no memory change",
    "start": "1114799",
    "end": "1116799"
  },
  {
    "text": "something is being clever here",
    "start": "1116799",
    "end": "1120380"
  },
  {
    "text": "right something's being very clever",
    "start": "1120380",
    "end": "1123799"
  },
  {
    "text": "or C sharp is probably the best",
    "start": "1123799",
    "end": "1126740"
  },
  {
    "text": "no Jazz so C Sharp's gonna win I hope",
    "start": "1126740",
    "end": "1128720"
  },
  {
    "text": "everybody sees this coming right",
    "start": "1128720",
    "end": "1131179"
  },
  {
    "text": "I hope everybody sees this coming that C",
    "start": "1131179",
    "end": "1133580"
  },
  {
    "text": "sharp is gonna start beating out some",
    "start": "1133580",
    "end": "1135140"
  },
  {
    "text": "Rust if they keep going with thread",
    "start": "1135140",
    "end": "1136400"
  },
  {
    "text": "limits all right at this point go",
    "start": "1136400",
    "end": "1137840"
  },
  {
    "text": "program has been beaten up uh not only",
    "start": "1137840",
    "end": "1139460"
  },
  {
    "text": "by rust but also by Java C sharp and",
    "start": "1139460",
    "end": "1141559"
  },
  {
    "text": "node.js uh though let's see and",
    "start": "1141559",
    "end": "1143480"
  },
  {
    "text": "linux.net likely cheats because it's",
    "start": "1143480",
    "end": "1145340"
  },
  {
    "text": "memory uh you still isn't going up I had",
    "start": "1145340",
    "end": "1147740"
  },
  {
    "text": "to double check if it really launches",
    "start": "1147740",
    "end": "1149000"
  },
  {
    "text": "the right number of tasks but indeed it",
    "start": "1149000",
    "end": "1150559"
  },
  {
    "text": "does and still uh exits after about 10",
    "start": "1150559",
    "end": "1153380"
  },
  {
    "text": "seconds uh it doesn't block the main",
    "start": "1153380",
    "end": "1155120"
  },
  {
    "text": "Loop okay I would still",
    "start": "1155120",
    "end": "1158740"
  },
  {
    "text": "I would argue you need to do something",
    "start": "1158960",
    "end": "1161240"
  },
  {
    "text": "I bet you this will greatly change in C",
    "start": "1161240",
    "end": "1163940"
  },
  {
    "text": "sharp if you had like a",
    "start": "1163940",
    "end": "1166820"
  },
  {
    "text": "a concurrent hash map that every one of",
    "start": "1166820",
    "end": "1168740"
  },
  {
    "text": "those tasks try to add one item to and",
    "start": "1168740",
    "end": "1170360"
  },
  {
    "text": "read one item from I think it would just",
    "start": "1170360",
    "end": "1172039"
  },
  {
    "text": "completely",
    "start": "1172039",
    "end": "1173780"
  },
  {
    "text": "change the memory wildly right",
    "start": "1173780",
    "end": "1179440"
  },
  {
    "text": "uh let's say okay one million tasks",
    "start": "1180440",
    "end": "1182059"
  },
  {
    "text": "let's go extreme extreme extreme extreme",
    "start": "1182059",
    "end": "1186740"
  },
  {
    "text": "all right add one million tasks a Lister",
    "start": "1186740",
    "end": "1188600"
  },
  {
    "text": "gave up okay nice system limit has been",
    "start": "1188600",
    "end": "1191299"
  },
  {
    "text": "reached okay edit some commenters",
    "start": "1191299",
    "end": "1193039"
  },
  {
    "text": "pointed out that I could have increased",
    "start": "1193039",
    "end": "1194179"
  },
  {
    "text": "the limit yep U limit after adding Arrow",
    "start": "1194179",
    "end": "1197240"
  },
  {
    "text": "P plus bajillion uh to Elixir it ran",
    "start": "1197240",
    "end": "1200299"
  },
  {
    "text": "fine okay nice",
    "start": "1200299",
    "end": "1201740"
  },
  {
    "text": "all right let's see what we got here",
    "start": "1201740",
    "end": "1204620"
  },
  {
    "text": "nice look at look at that C sharp oh",
    "start": "1204620",
    "end": "1207200"
  },
  {
    "text": "memory did go up this time",
    "start": "1207200",
    "end": "1209179"
  },
  {
    "text": "so that's interesting C Sharp's memory",
    "start": "1209179",
    "end": "1211340"
  },
  {
    "text": "did go up",
    "start": "1211340",
    "end": "1213940"
  },
  {
    "text": "I wonder why this 10x caused memory to",
    "start": "1214840",
    "end": "1217640"
  },
  {
    "text": "go up but the other two 10xes didn't",
    "start": "1217640",
    "end": "1221140"
  },
  {
    "text": "sus and C Sharp's the best everybody",
    "start": "1221140",
    "end": "1223700"
  },
  {
    "text": "finally we see an increase in memory",
    "start": "1223700",
    "end": "1225559"
  },
  {
    "text": "consumption of the c-sharp program but",
    "start": "1225559",
    "end": "1227120"
  },
  {
    "text": "still very competitive it even managed",
    "start": "1227120",
    "end": "1228740"
  },
  {
    "text": "to slightly beat one of the rust run",
    "start": "1228740",
    "end": "1230000"
  },
  {
    "text": "times the distance between go and the",
    "start": "1230000",
    "end": "1231500"
  },
  {
    "text": "others increase now go loses over 12x to",
    "start": "1231500",
    "end": "1234020"
  },
  {
    "text": "the winner it also loses 2x to Java",
    "start": "1234020",
    "end": "1237340"
  },
  {
    "text": "Java which contradicts a general",
    "start": "1237340",
    "end": "1239900"
  },
  {
    "text": "perception of jvm being a memory hog and",
    "start": "1239900",
    "end": "1241880"
  },
  {
    "text": "go being lightweight",
    "start": "1241880",
    "end": "1244840"
  },
  {
    "text": "hey",
    "start": "1248240",
    "end": "1249799"
  },
  {
    "text": "Russ Tokyo remained unbeatable this",
    "start": "1249799",
    "end": "1252020"
  },
  {
    "text": "isn't surprising after seeing how it did",
    "start": "1252020",
    "end": "1253520"
  },
  {
    "text": "100K tasks final word as we observed a",
    "start": "1253520",
    "end": "1256039"
  },
  {
    "text": "high number of concurred tasks actually",
    "start": "1256039",
    "end": "1257539"
  },
  {
    "text": "I want to have a final word first okay",
    "start": "1257539",
    "end": "1259100"
  },
  {
    "text": "I'm having the final word first first",
    "start": "1259100",
    "end": "1261020"
  },
  {
    "text": "off I don't know if I like this",
    "start": "1261020",
    "end": "1262280"
  },
  {
    "text": "Benchmark I love the idea I don't know",
    "start": "1262280",
    "end": "1263840"
  },
  {
    "text": "if I love The Benchmark I feel like you",
    "start": "1263840",
    "end": "1265700"
  },
  {
    "text": "need to do more things right I really do",
    "start": "1265700",
    "end": "1268160"
  },
  {
    "text": "feel like you need to do more things for",
    "start": "1268160",
    "end": "1269960"
  },
  {
    "text": "this to be real because something is",
    "start": "1269960",
    "end": "1271580"
  },
  {
    "text": "wrong here first off one thing about",
    "start": "1271580",
    "end": "1273440"
  },
  {
    "text": "c-sharp and memory that they're",
    "start": "1273440",
    "end": "1275000"
  },
  {
    "text": "completely just disregarding along with",
    "start": "1275000",
    "end": "1277580"
  },
  {
    "text": "Java is garbage collection along with",
    "start": "1277580",
    "end": "1279799"
  },
  {
    "text": "node along with go like all of these",
    "start": "1279799",
    "end": "1281480"
  },
  {
    "text": "have garbage collection so does python I",
    "start": "1281480",
    "end": "1283280"
  },
  {
    "text": "assume elixir does too but I mean Elixir",
    "start": "1283280",
    "end": "1285260"
  },
  {
    "text": "has already had four gigs am I right am",
    "start": "1285260",
    "end": "1287780"
  },
  {
    "text": "I right",
    "start": "1287780",
    "end": "1289039"
  },
  {
    "text": "um but",
    "start": "1289039",
    "end": "1290059"
  },
  {
    "text": "that's where rust is gonna really shine",
    "start": "1290059",
    "end": "1292100"
  },
  {
    "text": "is that if you're just measuring memory",
    "start": "1292100",
    "end": "1294980"
  },
  {
    "text": "doing something that creates and uses",
    "start": "1294980",
    "end": "1297260"
  },
  {
    "text": "memory these other ones are going to",
    "start": "1297260",
    "end": "1299059"
  },
  {
    "text": "really struggle but I wonder how much go",
    "start": "1299059",
    "end": "1300679"
  },
  {
    "text": "is going to struggle because go gets the",
    "start": "1300679",
    "end": "1302299"
  },
  {
    "text": "best of Two Worlds it gets a managed",
    "start": "1302299",
    "end": "1304700"
  },
  {
    "text": "memory environment but it also gets like",
    "start": "1304700",
    "end": "1306799"
  },
  {
    "text": "the smallness of rust when it comes to",
    "start": "1306799",
    "end": "1309260"
  },
  {
    "text": "usage of memory so when you create a",
    "start": "1309260",
    "end": "1310700"
  },
  {
    "text": "struct you're getting like a smaller",
    "start": "1310700",
    "end": "1311960"
  },
  {
    "text": "structure you're not getting a node.js",
    "start": "1311960",
    "end": "1313400"
  },
  {
    "text": "struct which is just much different",
    "start": "1313400",
    "end": "1314960"
  },
  {
    "text": "right an object in node is not going to",
    "start": "1314960",
    "end": "1317539"
  },
  {
    "text": "be nearly as lightweight as an object",
    "start": "1317539",
    "end": "1319640"
  },
  {
    "text": "and go it's just that's how it works and",
    "start": "1319640",
    "end": "1322460"
  },
  {
    "text": "so there is like it's kind of",
    "start": "1322460",
    "end": "1323659"
  },
  {
    "text": "interesting you know what I mean",
    "start": "1323659",
    "end": "1325820"
  },
  {
    "text": "it's just it's just interesting that",
    "start": "1325820",
    "end": "1327740"
  },
  {
    "text": "doing nothing this is the results but I",
    "start": "1327740",
    "end": "1329780"
  },
  {
    "text": "just don't believe it because my guess",
    "start": "1329780",
    "end": "1332240"
  },
  {
    "text": "is that this Elixir number four",
    "start": "1332240",
    "end": "1334400"
  },
  {
    "text": "gigabytes is likely what would happen to",
    "start": "1334400",
    "end": "1337460"
  },
  {
    "text": "a lot of these if you did that",
    "start": "1337460",
    "end": "1339679"
  },
  {
    "text": "all right final word",
    "start": "1339679",
    "end": "1342380"
  },
  {
    "text": "what is wrong why do I keep having like",
    "start": "1342380",
    "end": "1346240"
  },
  {
    "text": "uh as we have observed a high number of",
    "start": "1347059",
    "end": "1348919"
  },
  {
    "text": "concurrent tasks can consume a",
    "start": "1348919",
    "end": "1350120"
  },
  {
    "text": "significant amount of memory even if it",
    "start": "1350120",
    "end": "1352039"
  },
  {
    "text": "did not do not perform complex",
    "start": "1352039",
    "end": "1353480"
  },
  {
    "text": "operations yeah I mean it makes sense",
    "start": "1353480",
    "end": "1354860"
  },
  {
    "text": "like just imagine that every single",
    "start": "1354860",
    "end": "1356600"
  },
  {
    "text": "imagine that every single task ran",
    "start": "1356600",
    "end": "1359360"
  },
  {
    "text": "requires a hundred bytes of memory",
    "start": "1359360",
    "end": "1362179"
  },
  {
    "text": "that would be a hundred that'd be 100",
    "start": "1362179",
    "end": "1363980"
  },
  {
    "text": "megabytes at a million right so it",
    "start": "1363980",
    "end": "1366380"
  },
  {
    "text": "likely is going to require more than",
    "start": "1366380",
    "end": "1367640"
  },
  {
    "text": "that yeah stack size you got all sorts",
    "start": "1367640",
    "end": "1369740"
  },
  {
    "text": "of stuff it requires probably more than",
    "start": "1369740",
    "end": "1371720"
  },
  {
    "text": "100 bytes therefore it makes sense this",
    "start": "1371720",
    "end": "1374539"
  },
  {
    "text": "makes sense right",
    "start": "1374539",
    "end": "1377059"
  },
  {
    "text": "this is like what's a million times 4K",
    "start": "1377059",
    "end": "1379700"
  },
  {
    "text": "right if you had 4K stack size boom you",
    "start": "1379700",
    "end": "1382039"
  },
  {
    "text": "got that right",
    "start": "1382039",
    "end": "1383600"
  },
  {
    "text": "uh anyways let's see conversely other",
    "start": "1383600",
    "end": "1385760"
  },
  {
    "text": "run times with high initial overhead can",
    "start": "1385760",
    "end": "1387260"
  },
  {
    "text": "handle High workloads effortlessly",
    "start": "1387260",
    "end": "1390200"
  },
  {
    "text": "C sharp for the win by the way by the",
    "start": "1390200",
    "end": "1391880"
  },
  {
    "text": "way the big takeaway here is you should",
    "start": "1391880",
    "end": "1393140"
  },
  {
    "text": "just use C sharp we're all C sharp Andes",
    "start": "1393140",
    "end": "1395419"
  },
  {
    "text": "now inside this stream I hope",
    "start": "1395419",
    "end": "1397039"
  },
  {
    "text": "everybody's ready for the C sharp Arc C",
    "start": "1397039",
    "end": "1398900"
  },
  {
    "text": "sharp Arc everyone excited for it I'm",
    "start": "1398900",
    "end": "1401419"
  },
  {
    "text": "excited for it",
    "start": "1401419",
    "end": "1403520"
  },
  {
    "text": "um I think that c Sharp's obviously the",
    "start": "1403520",
    "end": "1405320"
  },
  {
    "text": "best language okay I've been telling you",
    "start": "1405320",
    "end": "1406940"
  },
  {
    "text": "guys this for so long now and honestly",
    "start": "1406940",
    "end": "1409400"
  },
  {
    "text": "this chart just proves how good C sharp",
    "start": "1409400",
    "end": "1412400"
  },
  {
    "text": "is okay you guys kept always talking",
    "start": "1412400",
    "end": "1414679"
  },
  {
    "text": "about how great go is look at how",
    "start": "1414679",
    "end": "1416539"
  },
  {
    "text": "terrible go is 2.6 gigabytes",
    "start": "1416539",
    "end": "1420760"
  },
  {
    "text": "okay you just don't understand things at",
    "start": "1420760",
    "end": "1424880"
  },
  {
    "text": "all all right C sharp clearly best",
    "start": "1424880",
    "end": "1427880"
  },
  {
    "text": "language",
    "start": "1427880",
    "end": "1428840"
  },
  {
    "text": "clearly best language the comparison",
    "start": "1428840",
    "end": "1431480"
  },
  {
    "text": "focused solely on memory consumption",
    "start": "1431480",
    "end": "1432799"
  },
  {
    "text": "while other factors such as task launch",
    "start": "1432799",
    "end": "1434480"
  },
  {
    "text": "time and communication speeds are",
    "start": "1434480",
    "end": "1435980"
  },
  {
    "text": "equally important notably at one million",
    "start": "1435980",
    "end": "1438140"
  },
  {
    "text": "tasks I observe that the overhead of",
    "start": "1438140",
    "end": "1439520"
  },
  {
    "text": "launching tasks became evident and most",
    "start": "1439520",
    "end": "1441380"
  },
  {
    "text": "programs required more than 12 seconds",
    "start": "1441380",
    "end": "1443059"
  },
  {
    "text": "to complete stay tuned for upcoming",
    "start": "1443059",
    "end": "1445159"
  },
  {
    "text": "benchmarks where we'll explore",
    "start": "1445159",
    "end": "1446179"
  },
  {
    "text": "additional aspects in depth I'd love to",
    "start": "1446179",
    "end": "1448039"
  },
  {
    "text": "see this except for instead of doing",
    "start": "1448039",
    "end": "1449299"
  },
  {
    "text": "node.js just doing timers let's set",
    "start": "1449299",
    "end": "1451340"
  },
  {
    "text": "worker threads I'd love to see some sort",
    "start": "1451340",
    "end": "1453080"
  },
  {
    "text": "of computation model added to everything",
    "start": "1453080",
    "end": "1454840"
  },
  {
    "text": "I personally just think that the best",
    "start": "1454840",
    "end": "1456919"
  },
  {
    "text": "way to do this is to do some sort of",
    "start": "1456919",
    "end": "1459080"
  },
  {
    "text": "longer run living task right how many",
    "start": "1459080",
    "end": "1462200"
  },
  {
    "text": "websocket connections can you make how",
    "start": "1462200",
    "end": "1464780"
  },
  {
    "text": "effectively how many open TCP",
    "start": "1464780",
    "end": "1466520"
  },
  {
    "text": "connections can you make to a server and",
    "start": "1466520",
    "end": "1468380"
  },
  {
    "text": "then just start sending something back",
    "start": "1468380",
    "end": "1469880"
  },
  {
    "text": "and forth how much can you do in a",
    "start": "1469880",
    "end": "1472700"
  },
  {
    "text": "language not like these because you know",
    "start": "1472700",
    "end": "1475039"
  },
  {
    "text": "the reality is you don't use a language",
    "start": "1475039",
    "end": "1477080"
  },
  {
    "text": "to launch a timer you use a language to",
    "start": "1477080",
    "end": "1479720"
  },
  {
    "text": "do something and I feel like a",
    "start": "1479720",
    "end": "1481820"
  },
  {
    "text": "websocket's like a really great kind of",
    "start": "1481820",
    "end": "1484400"
  },
  {
    "text": "uh",
    "start": "1484400",
    "end": "1485960"
  },
  {
    "text": "it's a really great simple way to test",
    "start": "1485960",
    "end": "1488600"
  },
  {
    "text": "something because it is it's just a TCP",
    "start": "1488600",
    "end": "1490400"
  },
  {
    "text": "connection you have to do a moderate a",
    "start": "1490400",
    "end": "1492200"
  },
  {
    "text": "pretty small amount of work to parse out",
    "start": "1492200",
    "end": "1493760"
  },
  {
    "text": "a frame",
    "start": "1493760",
    "end": "1494659"
  },
  {
    "text": "it shows what garbage collection does to",
    "start": "1494659",
    "end": "1496460"
  },
  {
    "text": "the system uh it shows what kind of the",
    "start": "1496460",
    "end": "1498860"
  },
  {
    "text": "interacting with with the system calls",
    "start": "1498860",
    "end": "1500600"
  },
  {
    "text": "does to a system and then if you have",
    "start": "1500600",
    "end": "1502220"
  },
  {
    "text": "anything extra on the system such as",
    "start": "1502220",
    "end": "1504020"
  },
  {
    "text": "like if you do a chat room it will you",
    "start": "1504020",
    "end": "1506960"
  },
  {
    "text": "know if you have to for each over",
    "start": "1506960",
    "end": "1508100"
  },
  {
    "text": "clients what do four Loops do to your",
    "start": "1508100",
    "end": "1509840"
  },
  {
    "text": "program it's very very interesting uh",
    "start": "1509840",
    "end": "1511820"
  },
  {
    "text": "even with node.js the difference like if",
    "start": "1511820",
    "end": "1513380"
  },
  {
    "text": "you build a chat client",
    "start": "1513380",
    "end": "1515059"
  },
  {
    "text": "and all it is is a chat line to where",
    "start": "1515059",
    "end": "1517100"
  },
  {
    "text": "websocket connections can join in make a",
    "start": "1517100",
    "end": "1520100"
  },
  {
    "text": "simple request to join rooms and then",
    "start": "1520100",
    "end": "1522679"
  },
  {
    "text": "send messages to the room a for each",
    "start": "1522679",
    "end": "1525440"
  },
  {
    "text": "statement will effectively cut your RPS",
    "start": "1525440",
    "end": "1528020"
  },
  {
    "text": "in half when you're iterating over the",
    "start": "1528020",
    "end": "1530600"
  },
  {
    "text": "available sockets",
    "start": "1530600",
    "end": "1533500"
  },
  {
    "text": "or it's not RPS it's MPS messages per",
    "start": "1534080",
    "end": "1536419"
  },
  {
    "text": "second pretty wild that that can happen",
    "start": "1536419",
    "end": "1538460"
  },
  {
    "text": "right and so it's it's pretty wild that",
    "start": "1538460",
    "end": "1542120"
  },
  {
    "text": "even such a simple small little thing",
    "start": "1542120",
    "end": "1544460"
  },
  {
    "text": "can have such a huge impact",
    "start": "1544460",
    "end": "1547760"
  },
  {
    "text": "on performance",
    "start": "1547760",
    "end": "1549679"
  },
  {
    "text": "anyways just something to think about",
    "start": "1549679",
    "end": "1553120"
  },
  {
    "text": "anywho all right hey great article",
    "start": "1553220",
    "end": "1554960"
  },
  {
    "text": "though great article everybody hey",
    "start": "1554960",
    "end": "1556520"
  },
  {
    "text": "everybody great article hey great",
    "start": "1556520",
    "end": "1559220"
  },
  {
    "text": "article everybody everybody",
    "start": "1559220",
    "end": "1561460"
  },
  {
    "text": "give a little clap for Peter good job",
    "start": "1561460",
    "end": "1563840"
  },
  {
    "text": "Peter appreciate the work you put in",
    "start": "1563840",
    "end": "1568059"
  },
  {
    "text": "what is the name",
    "start": "1570340",
    "end": "1573760"
  },
  {
    "text": "you know what the hell the name is the",
    "start": "1574220",
    "end": "1576620"
  },
  {
    "text": "name",
    "start": "1576620",
    "end": "1578740"
  },
  {
    "text": "is the primogen",
    "start": "1579080",
    "end": "1582158"
  }
]