[
  {
    "start": "0",
    "end": "45000"
  },
  {
    "text": "I've been working on a pet project",
    "start": "40",
    "end": "1520"
  },
  {
    "text": "recently that I just can't get running",
    "start": "1520",
    "end": "3639"
  },
  {
    "text": "fast enough okay the Crux of the problem",
    "start": "3639",
    "end": "5839"
  },
  {
    "text": "is that I need to do multiple Loops over",
    "start": "5839",
    "end": "7560"
  },
  {
    "text": "3D space and do some calculations on",
    "start": "7560",
    "end": "9960"
  },
  {
    "text": "each is this a matrix problem is this",
    "start": "9960",
    "end": "13040"
  },
  {
    "text": "just yet yet another Matrix Video",
    "start": "13040",
    "end": "15280"
  },
  {
    "text": "position within the space after spending",
    "start": "15280",
    "end": "17800"
  },
  {
    "text": "a lot of time in PPR optimizing the",
    "start": "17800",
    "end": "20199"
  },
  {
    "text": "calculations I got to wondering if there",
    "start": "20199",
    "end": "22160"
  },
  {
    "text": "was a way to optimize the loop by the",
    "start": "22160",
    "end": "24400"
  },
  {
    "text": "way the fact that",
    "start": "24400",
    "end": "25800"
  },
  {
    "text": "it oh I see what's happening here XX",
    "start": "25800",
    "end": "29080"
  },
  {
    "text": "okay y y okay I see what's happening",
    "start": "29080",
    "end": "30640"
  },
  {
    "text": "here okay so it's an array of an array",
    "start": "30640",
    "end": "34879"
  },
  {
    "text": "of an array it's a three it's a",
    "start": "34879",
    "end": "37000"
  },
  {
    "text": "three-dimensional array arrays itself",
    "start": "37000",
    "end": "40640"
  },
  {
    "text": "here's the basic looping structure I'm",
    "start": "40640",
    "end": "42280"
  },
  {
    "text": "talking about it's pretty easy to",
    "start": "42280",
    "end": "44280"
  },
  {
    "text": "understand what's going on there but",
    "start": "44280",
    "end": "45800"
  },
  {
    "start": "45000",
    "end": "90000"
  },
  {
    "text": "there are a few different ways this",
    "start": "45800",
    "end": "46920"
  },
  {
    "text": "could be structured so I derived this",
    "start": "46920",
    "end": "49239"
  },
  {
    "text": "simple test program to try out different",
    "start": "49239",
    "end": "51199"
  },
  {
    "text": "mechanisms the first one benchmarks go",
    "start": "51199",
    "end": "54120"
  },
  {
    "text": "range instruction and it's probably the",
    "start": "54120",
    "end": "55840"
  },
  {
    "text": "most common way that people Loop over",
    "start": "55840",
    "end": "57920"
  },
  {
    "text": "arrays concise to write and easy to",
    "start": "57920",
    "end": "60320"
  },
  {
    "text": "understand the second by the way that",
    "start": "60320",
    "end": "62640"
  },
  {
    "text": "range operation's really nice I I",
    "start": "62640",
    "end": "64960"
  },
  {
    "text": "languages with basic range items very",
    "start": "64960",
    "end": "67600"
  },
  {
    "text": "very very comfortable you know what I",
    "start": "67600",
    "end": "70200"
  },
  {
    "text": "mean I like a nice range I don't like a",
    "start": "70200",
    "end": "73119"
  },
  {
    "text": "4 each with a function but I like a nice",
    "start": "73119",
    "end": "75360"
  },
  {
    "text": "range it feels good test is a more",
    "start": "75360",
    "end": "77920"
  },
  {
    "text": "classic set of Loops that iterate over",
    "start": "77920",
    "end": "79960"
  },
  {
    "text": "the array offsets and address the",
    "start": "79960",
    "end": "81640"
  },
  {
    "text": "requested element directly within the",
    "start": "81640",
    "end": "83200"
  },
  {
    "text": "loop I assume that one's worse the third",
    "start": "83200",
    "end": "84880"
  },
  {
    "text": "experiment is an optimization and I",
    "start": "84880",
    "end": "86520"
  },
  {
    "text": "thought might speed things up by",
    "start": "86520",
    "end": "87880"
  },
  {
    "text": "reducing the calls to the length",
    "start": "87880",
    "end": "89240"
  },
  {
    "text": "instruction",
    "start": "89240",
    "end": "90600"
  },
  {
    "start": "90000",
    "end": "115000"
  },
  {
    "text": "entally casing those values my",
    "start": "90600",
    "end": "92880"
  },
  {
    "text": "expectations were that the third method",
    "start": "92880",
    "end": "94560"
  },
  {
    "text": "would be faster than the second but I",
    "start": "94560",
    "end": "96759"
  },
  {
    "text": "didn't know if go optimize range enough",
    "start": "96759",
    "end": "98880"
  },
  {
    "text": "to make it the fastest of the three or",
    "start": "98880",
    "end": "100600"
  },
  {
    "text": "not which before I I haven't seen this",
    "start": "100600",
    "end": "103119"
  },
  {
    "text": "before anything I my assumption is that",
    "start": "103119",
    "end": "105560"
  },
  {
    "text": "the middle one and the last one will be",
    "start": "105560",
    "end": "108280"
  },
  {
    "text": "the",
    "start": "108280",
    "end": "109479"
  },
  {
    "text": "same but the first one will be the",
    "start": "109479",
    "end": "111640"
  },
  {
    "text": "fastest that's my assumption's part of",
    "start": "111640",
    "end": "114479"
  },
  {
    "text": "the reason for the experiment after",
    "start": "114479",
    "end": "116479"
  },
  {
    "start": "115000",
    "end": "200000"
  },
  {
    "text": "running the tests it's obvious that the",
    "start": "116479",
    "end": "118439"
  },
  {
    "text": "go compiler has some optimiz ation",
    "start": "118439",
    "end": "120320"
  },
  {
    "text": "around the range statement such that",
    "start": "120320",
    "end": "122159"
  },
  {
    "text": "it's not only the clearest to read but",
    "start": "122159",
    "end": "124119"
  },
  {
    "text": "also the fastest to execute for those",
    "start": "124119",
    "end": "126880"
  },
  {
    "text": "that can't see",
    "start": "126880",
    "end": "129200"
  },
  {
    "text": "um there you go there's like this extra",
    "start": "129200",
    "end": "131599"
  },
  {
    "text": "so here's here's my here's my guessing",
    "start": "131599",
    "end": "133520"
  },
  {
    "text": "why that's happening is that the range",
    "start": "133520",
    "end": "136360"
  },
  {
    "text": "statement is pulling out the array it",
    "start": "136360",
    "end": "137879"
  },
  {
    "text": "kind of seems like how it's aligned in",
    "start": "137879",
    "end": "139440"
  },
  {
    "text": "memory is that each one of these things",
    "start": "139440",
    "end": "141840"
  },
  {
    "text": "are are its own rows it's not like a big",
    "start": "141840",
    "end": "144080"
  },
  {
    "text": "ond array it's like a bunch of",
    "start": "144080",
    "end": "145800"
  },
  {
    "text": "individual arrays and so you're getting",
    "start": "145800",
    "end": "147800"
  },
  {
    "text": "these blocks of contiguous memory and so",
    "start": "147800",
    "end": "150360"
  },
  {
    "text": "the final one you're just reading one",
    "start": "150360",
    "end": "152480"
  },
  {
    "text": "block of contiguous memory whereas with",
    "start": "152480",
    "end": "154080"
  },
  {
    "text": "with this one you're doing like look at",
    "start": "154080",
    "end": "155160"
  },
  {
    "text": "this you're doing an access an access",
    "start": "155160",
    "end": "157480"
  },
  {
    "text": "and an",
    "start": "157480",
    "end": "158440"
  },
  {
    "text": "access and so it's like you have to do a",
    "start": "158440",
    "end": "161319"
  },
  {
    "text": "bunch of hopping is my guess what's",
    "start": "161319",
    "end": "163519"
  },
  {
    "text": "going on I don't know if go optimizes",
    "start": "163519",
    "end": "165680"
  },
  {
    "text": "that I'm not exactly sure how they would",
    "start": "165680",
    "end": "167319"
  },
  {
    "text": "optimize that you know I don't you know",
    "start": "167319",
    "end": "169920"
  },
  {
    "text": "I I assume that if you really thought",
    "start": "169920",
    "end": "171920"
  },
  {
    "text": "about it you could optimize it but",
    "start": "171920",
    "end": "173640"
  },
  {
    "text": "that'd be a very difficult you know",
    "start": "173640",
    "end": "175480"
  },
  {
    "text": "thing to do so that's that's my",
    "start": "175480",
    "end": "177159"
  },
  {
    "text": "assumption of what's going on here why",
    "start": "177159",
    "end": "179280"
  },
  {
    "text": "that's why I assumed range would be",
    "start": "179280",
    "end": "181200"
  },
  {
    "text": "better so I'm curious if if he talks",
    "start": "181200",
    "end": "183480"
  },
  {
    "text": "about it the thing that really surprised",
    "start": "183480",
    "end": "185239"
  },
  {
    "text": "me was that caching the results of Len",
    "start": "185239",
    "end": "187879"
  },
  {
    "text": "actually made the loops slower the best",
    "start": "187879",
    "end": "190239"
  },
  {
    "text": "I expected was that they'd be the same",
    "start": "190239",
    "end": "192480"
  },
  {
    "text": "yeah I don't really understand that I'd",
    "start": "192480",
    "end": "193640"
  },
  {
    "text": "also like to know how he's testing that",
    "start": "193640",
    "end": "195080"
  },
  {
    "text": "but that is shocking I I I I cannot",
    "start": "195080",
    "end": "197879"
  },
  {
    "text": "understand why that's the case speed but",
    "start": "197879",
    "end": "199760"
  },
  {
    "text": "apparently the compiler has some genius",
    "start": "199760",
    "end": "201640"
  },
  {
    "start": "200000",
    "end": "260000"
  },
  {
    "text": "in it that recognized the second",
    "start": "201640",
    "end": "203280"
  },
  {
    "text": "structure and can create a highly",
    "start": "203280",
    "end": "205239"
  },
  {
    "text": "optimized set of instructions from it at",
    "start": "205239",
    "end": "207640"
  },
  {
    "text": "this point I thought I had my answer and",
    "start": "207640",
    "end": "209239"
  },
  {
    "text": "that the by the way never try to fight",
    "start": "209239",
    "end": "211760"
  },
  {
    "text": "the compiler general rule of thumb is",
    "start": "211760",
    "end": "214040"
  },
  {
    "text": "that the compiler writes better code",
    "start": "214040",
    "end": "215840"
  },
  {
    "text": "than you and so you should just just",
    "start": "215840",
    "end": "219319"
  },
  {
    "text": "write like the more you write standard",
    "start": "219319",
    "end": "223599"
  },
  {
    "text": "code the more likely you're generally",
    "start": "223599",
    "end": "226200"
  },
  {
    "text": "doing",
    "start": "226200",
    "end": "227280"
  },
  {
    "text": "well if that makes sense very few times",
    "start": "227280",
    "end": "231120"
  },
  {
    "text": "when you get cutesy does it actually",
    "start": "231120",
    "end": "232760"
  },
  {
    "text": "make it better and that's because most",
    "start": "232760",
    "end": "234480"
  },
  {
    "text": "of the time you just don't you don't",
    "start": "234480",
    "end": "235480"
  },
  {
    "text": "know what you're doing and the compiler",
    "start": "235480",
    "end": "237120"
  },
  {
    "text": "is just it's optimized for whatever like",
    "start": "237120",
    "end": "239200"
  },
  {
    "text": "the common case is and so then you just",
    "start": "239200",
    "end": "241040"
  },
  {
    "text": "get all effed up right uh it's almost",
    "start": "241040",
    "end": "243720"
  },
  {
    "text": "always good to write your code simple",
    "start": "243720",
    "end": "245680"
  },
  {
    "text": "and straight to the point and it it just",
    "start": "245680",
    "end": "247280"
  },
  {
    "text": "works result was always compiler and so",
    "start": "247280",
    "end": "250040"
  },
  {
    "text": "just write reactjs and you'll be fine",
    "start": "250040",
    "end": "252239"
  },
  {
    "text": "everything will be creamy smooth you'll",
    "start": "252239",
    "end": "253680"
  },
  {
    "text": "have a job your server components will",
    "start": "253680",
    "end": "255959"
  },
  {
    "text": "be serving",
    "start": "255959",
    "end": "258079"
  },
  {
    "text": "components range statements but then I",
    "start": "258079",
    "end": "260840"
  },
  {
    "start": "260000",
    "end": "315000"
  },
  {
    "text": "had an idea for a few more optimizations",
    "start": "260840",
    "end": "262880"
  },
  {
    "text": "to attempt by putting all the data in a",
    "start": "262880",
    "end": "265199"
  },
  {
    "text": "single array I would need to calculate",
    "start": "265199",
    "end": "267120"
  },
  {
    "text": "offsets to locate an individual position",
    "start": "267120",
    "end": "269639"
  },
  {
    "text": "3D space but huh can you imagine that",
    "start": "269639",
    "end": "273400"
  },
  {
    "text": "contiguous memory is in fact faster I",
    "start": "273400",
    "end": "275880"
  },
  {
    "text": "assume one of the things that is",
    "start": "275880",
    "end": "276919"
  },
  {
    "text": "happening right now is that when you",
    "start": "276919",
    "end": "278440"
  },
  {
    "text": "have an array of an array of an array uh",
    "start": "278440",
    "end": "281000"
  },
  {
    "text": "or a list of a list of a list because",
    "start": "281000",
    "end": "282600"
  },
  {
    "text": "this is go right that's it's a list it's",
    "start": "282600",
    "end": "284320"
  },
  {
    "text": "not an array it's it's some sort of",
    "start": "284320",
    "end": "286600"
  },
  {
    "text": "moving underneath the hood list of",
    "start": "286600",
    "end": "288199"
  },
  {
    "text": "memory is that you actually have three",
    "start": "288199",
    "end": "290320"
  },
  {
    "text": "different locations that you're hopping",
    "start": "290320",
    "end": "291720"
  },
  {
    "text": "to but by making one big ass one you",
    "start": "291720",
    "end": "294160"
  },
  {
    "text": "only have one contiguous block of memory",
    "start": "294160",
    "end": "296479"
  },
  {
    "text": "and I always assume reading contiguous",
    "start": "296479",
    "end": "298840"
  },
  {
    "text": "memory is just generally better than",
    "start": "298840",
    "end": "302360"
  },
  {
    "text": "reading uh non-contiguous memory like",
    "start": "302360",
    "end": "305120"
  },
  {
    "text": "that's just like a standard but often I",
    "start": "305120",
    "end": "307560"
  },
  {
    "text": "mean the nice part is is that for the",
    "start": "307560",
    "end": "308880"
  },
  {
    "text": "most part in in regular programming you",
    "start": "308880",
    "end": "310800"
  },
  {
    "text": "don't have to think about that that's",
    "start": "310800",
    "end": "312560"
  },
  {
    "text": "just not typically something you have to",
    "start": "312560",
    "end": "314720"
  },
  {
    "text": "run into though it is nice to know",
    "start": "314720",
    "end": "316880"
  },
  {
    "start": "315000",
    "end": "410000"
  },
  {
    "text": "iterating through the entire list should",
    "start": "316880",
    "end": "318400"
  },
  {
    "text": "be faster why is accessing slower if the",
    "start": "318400",
    "end": "320759"
  },
  {
    "text": "lists are stack allocated I don't know",
    "start": "320759",
    "end": "322800"
  },
  {
    "text": "if they're stack allocated I don't are",
    "start": "322800",
    "end": "325479"
  },
  {
    "text": "lists in go stack allocated I don't",
    "start": "325479",
    "end": "328240"
  },
  {
    "text": "think they're stack allocated I just",
    "start": "328240",
    "end": "330160"
  },
  {
    "text": "always assumed I don't I don't see how",
    "start": "330160",
    "end": "332319"
  },
  {
    "text": "they could be stack allocated like an",
    "start": "332319",
    "end": "334160"
  },
  {
    "text": "array can uh in C because you're like",
    "start": "334160",
    "end": "336720"
  },
  {
    "text": "hey this array is length three it's",
    "start": "336720",
    "end": "339600"
  },
  {
    "text": "right here we didn't call Malik or",
    "start": "339600",
    "end": "341120"
  },
  {
    "text": "anything it's like right here right that",
    "start": "341120",
    "end": "342840"
  },
  {
    "text": "makes sense there's no concept of Stack",
    "start": "342840",
    "end": "344840"
  },
  {
    "text": "versus Heap and go yeah but there is",
    "start": "344840",
    "end": "346280"
  },
  {
    "text": "stack and Heap and go there is a concept",
    "start": "346280",
    "end": "347840"
  },
  {
    "text": "of stack and Heap and go and they talk",
    "start": "347840",
    "end": "349039"
  },
  {
    "text": "about it some things they they there's",
    "start": "349039",
    "end": "351680"
  },
  {
    "text": "like a whole set of rules about what",
    "start": "351680",
    "end": "353199"
  },
  {
    "text": "stays on the stack versus the Heap and",
    "start": "353199",
    "end": "354759"
  },
  {
    "text": "all that but you don't technically",
    "start": "354759",
    "end": "357039"
  },
  {
    "text": "like do anything with it you know I mean",
    "start": "357039",
    "end": "359440"
  },
  {
    "text": "I mean you could also Alec alak and see",
    "start": "359440",
    "end": "361919"
  },
  {
    "text": "yeah go moves all the values onto the",
    "start": "361919",
    "end": "363680"
  },
  {
    "text": "stack and stores pointers uh to the",
    "start": "363680",
    "end": "365440"
  },
  {
    "text": "first elements I really don't know if",
    "start": "365440",
    "end": "367759"
  },
  {
    "text": "any of that is true it sounds false it",
    "start": "367759",
    "end": "370039"
  },
  {
    "text": "sounds false to me too just because the",
    "start": "370039",
    "end": "372280"
  },
  {
    "text": "hard part you can't move memory on the",
    "start": "372280",
    "end": "374080"
  },
  {
    "text": "stack like in the sense that You' screw",
    "start": "374080",
    "end": "376840"
  },
  {
    "text": "up all the return addresses and all the",
    "start": "376840",
    "end": "378520"
  },
  {
    "text": "other in between right like you",
    "start": "378520",
    "end": "380080"
  },
  {
    "text": "can't just can't just move things it's a",
    "start": "380080",
    "end": "383160"
  },
  {
    "text": "stack like that it's in its name you",
    "start": "383160",
    "end": "386120"
  },
  {
    "text": "can't just move plates out of a middle",
    "start": "386120",
    "end": "388080"
  },
  {
    "text": "of a stack of plates and then create",
    "start": "388080",
    "end": "389599"
  },
  {
    "text": "more plates on top it just just you see",
    "start": "389599",
    "end": "393599"
  },
  {
    "text": "what I'm saying it just do that anyways",
    "start": "393599",
    "end": "397080"
  },
  {
    "text": "okay a go will uh let's see will",
    "start": "397080",
    "end": "399479"
  },
  {
    "text": "shortlived uh static things on the stack",
    "start": "399479",
    "end": "401759"
  },
  {
    "text": "regardless of their type okay",
    "start": "401759",
    "end": "403440"
  },
  {
    "text": "interesting I wonder how that works that",
    "start": "403440",
    "end": "404800"
  },
  {
    "text": "sounds really interesting anyways let's",
    "start": "404800",
    "end": "405880"
  },
  {
    "text": "keep on going let's let's let's back",
    "start": "405880",
    "end": "407120"
  },
  {
    "text": "this up for a",
    "start": "407120",
    "end": "408440"
  },
  {
    "text": "moment in 3D space but iterating through",
    "start": "408440",
    "end": "411639"
  },
  {
    "text": "the entire list should be faster however",
    "start": "411639",
    "end": "414120"
  },
  {
    "text": "the speed was roughly equivalent to the",
    "start": "414120",
    "end": "415759"
  },
  {
    "text": "three-dimensional array another issue",
    "start": "415759",
    "end": "418120"
  },
  {
    "text": "with this test yeah it's all very very",
    "start": "418120",
    "end": "420160"
  },
  {
    "text": "hard to say which one was faster there",
    "start": "420160",
    "end": "421599"
  },
  {
    "text": "is that I sometimes have to iterate",
    "start": "421599",
    "end": "423080"
  },
  {
    "text": "through the dimensions in reverse order",
    "start": "423080",
    "end": "425080"
  },
  {
    "text": "so I wrote another test to simulate that",
    "start": "425080",
    "end": "426840"
  },
  {
    "text": "use case and boy was my mind blown I",
    "start": "426840",
    "end": "429759"
  },
  {
    "text": "created one more experiment in an",
    "start": "429759",
    "end": "431319"
  },
  {
    "start": "430000",
    "end": "633000"
  },
  {
    "text": "attempt to understand what was going on",
    "start": "431319",
    "end": "433280"
  },
  {
    "text": "but it didn't clear anything up at this",
    "start": "433280",
    "end": "435360"
  },
  {
    "text": "stage I don't even have a guess as to",
    "start": "435360",
    "end": "437000"
  },
  {
    "text": "why the fifth test performed so well",
    "start": "437000",
    "end": "439080"
  },
  {
    "text": "after all this experimenting it seems to",
    "start": "439080",
    "end": "441120"
  },
  {
    "text": "me that most codes should just use range",
    "start": "441120",
    "end": "443360"
  },
  {
    "text": "statements a 100 millisecond improvement",
    "start": "443360",
    "end": "446120"
  },
  {
    "text": "over an array of 1 billion elements wow",
    "start": "446120",
    "end": "448720"
  },
  {
    "text": "that got really quiet at the end it said",
    "start": "448720",
    "end": "450520"
  },
  {
    "text": "one uh 100 millisecond improvement over",
    "start": "450520",
    "end": "452680"
  },
  {
    "text": "a 1 billion array at the end isn't much",
    "start": "452680",
    "end": "455720"
  },
  {
    "text": "it's certainly not enough Improvement to",
    "start": "455720",
    "end": "457280"
  },
  {
    "text": "have any impact on my current",
    "start": "457280",
    "end": "460039"
  },
  {
    "text": "problems okay I like that it's I you",
    "start": "460039",
    "end": "463080"
  },
  {
    "text": "know I really do like when people when",
    "start": "463080",
    "end": "464879"
  },
  {
    "text": "people document um just like what",
    "start": "464879",
    "end": "467199"
  },
  {
    "text": "they're trying to do and what they're",
    "start": "467199",
    "end": "468560"
  },
  {
    "text": "trying to figure out uh I also really",
    "start": "468560",
    "end": "471800"
  },
  {
    "text": "like uh his confidence dropped his",
    "start": "471800",
    "end": "473960"
  },
  {
    "text": "confidence dropped severely on that one",
    "start": "473960",
    "end": "475400"
  },
  {
    "text": "you couldn't hear it I I think one thing",
    "start": "475400",
    "end": "476840"
  },
  {
    "text": "that I really like about this entire",
    "start": "476840",
    "end": "478759"
  },
  {
    "text": "situation that went on there is that by",
    "start": "478759",
    "end": "480960"
  },
  {
    "text": "the way this is literally a video that",
    "start": "480960",
    "end": "482680"
  },
  {
    "text": "this channel dropped this morning and",
    "start": "482680",
    "end": "484840"
  },
  {
    "text": "yet here it is showing up right there um",
    "start": "484840",
    "end": "488440"
  },
  {
    "text": "I really am happy that range",
    "start": "488440",
    "end": "490360"
  },
  {
    "text": "statements performed well I really",
    "start": "490360",
    "end": "493560"
  },
  {
    "text": "really like that because at the end of",
    "start": "493560",
    "end": "495400"
  },
  {
    "text": "the day I really hate when you have to",
    "start": "495400",
    "end": "496840"
  },
  {
    "text": "write stupid code and you're trying to",
    "start": "496840",
    "end": "499199"
  },
  {
    "text": "like avoid performance pitfalls like the",
    "start": "499199",
    "end": "501639"
  },
  {
    "text": "the original JavaScript was just you",
    "start": "501639",
    "end": "503759"
  },
  {
    "text": "write the stupidest code right do you",
    "start": "503759",
    "end": "505639"
  },
  {
    "text": "guys remember this one uh do you",
    "start": "505639",
    "end": "507120"
  },
  {
    "text": "remember back in the day you would write",
    "start": "507120",
    "end": "508560"
  },
  {
    "text": "things like this like uh you do you know",
    "start": "508560",
    "end": "511440"
  },
  {
    "text": "VAR a equals this uh dap that get the",
    "start": "511440",
    "end": "514959"
  },
  {
    "text": "hell out of here and then you do a",
    "start": "514959",
    "end": "517320"
  },
  {
    "text": "length uh length equals zero to reset it",
    "start": "517320",
    "end": "520000"
  },
  {
    "text": "not a equals this cuz it was actually",
    "start": "520000",
    "end": "522200"
  },
  {
    "text": "just like it would slow your program",
    "start": "522200",
    "end": "524279"
  },
  {
    "text": "down you do things like that to avoid it",
    "start": "524279",
    "end": "527720"
  },
  {
    "text": "all or you do uh you do uh a uh a.length",
    "start": "527720",
    "end": "532320"
  },
  {
    "text": "equals some new item to push you",
    "start": "532320",
    "end": "534800"
  },
  {
    "text": "wouldn't call a. push right you would",
    "start": "534800",
    "end": "537279"
  },
  {
    "text": "not call a. push like you would just",
    "start": "537279",
    "end": "540040"
  },
  {
    "text": "never do that one uh dude okay shut up I",
    "start": "540040",
    "end": "542839"
  },
  {
    "text": "shut up typescript there does that make",
    "start": "542839",
    "end": "545160"
  },
  {
    "text": "you happy okay I'm happy",
    "start": "545160",
    "end": "548519"
  },
  {
    "text": "now",
    "start": "548519",
    "end": "550200"
  },
  {
    "text": "but it's funny like you just do these",
    "start": "550200",
    "end": "552880"
  },
  {
    "text": "dumb things and you had to be like",
    "start": "552880",
    "end": "555399"
  },
  {
    "text": "clever about it what about a range in",
    "start": "555399",
    "end": "556760"
  },
  {
    "text": "Python we all know Python's greatest",
    "start": "556760",
    "end": "558480"
  },
  {
    "text": "enemy is a for Loop okay it doesn't",
    "start": "558480",
    "end": "560320"
  },
  {
    "text": "matter what it is whether you're ranging",
    "start": "560320",
    "end": "562440"
  },
  {
    "text": "or comprehending or whatever if you're",
    "start": "562440",
    "end": "563920"
  },
  {
    "text": "doing anything in P python involving a",
    "start": "563920",
    "end": "566200"
  },
  {
    "text": "loop you're using the wrong language",
    "start": "566200",
    "end": "568440"
  },
  {
    "text": "okay Python's not for Loops python is",
    "start": "568440",
    "end": "570519"
  },
  {
    "text": "that you you use you use pandas for",
    "start": "570519",
    "end": "572279"
  },
  {
    "text": "Loops okay you use pandas and nump of",
    "start": "572279",
    "end": "576160"
  },
  {
    "text": "which I don't know how to use very well",
    "start": "576160",
    "end": "577839"
  },
  {
    "text": "so I don't use them because I suck at",
    "start": "577839",
    "end": "580880"
  },
  {
    "text": "python I'm I'm I'm terrible I'm terrible",
    "start": "580880",
    "end": "584880"
  },
  {
    "text": "generator help okay that's good to know",
    "start": "584880",
    "end": "587079"
  },
  {
    "text": "pirate software would never he would",
    "start": "587079",
    "end": "590000"
  },
  {
    "text": "never anyways uh Real Talk great I love",
    "start": "590000",
    "end": "593040"
  },
  {
    "text": "this I actually really liked this video",
    "start": "593040",
    "end": "594680"
  },
  {
    "text": "cuz I love the fact that go just works",
    "start": "594680",
    "end": "596959"
  },
  {
    "text": "well it's good enough for exactly",
    "start": "596959",
    "end": "600040"
  },
  {
    "text": "exactly what he wants skill issues oh",
    "start": "600040",
    "end": "601640"
  },
  {
    "text": "yeah skill issues trust me I I suffer",
    "start": "601640",
    "end": "603279"
  },
  {
    "text": "from python skill issues because the",
    "start": "603279",
    "end": "604800"
  },
  {
    "text": "thing is is that I have two Dynamic",
    "start": "604800",
    "end": "606240"
  },
  {
    "text": "languages really strongly underneath my",
    "start": "606240",
    "end": "607920"
  },
  {
    "text": "belt which of course is Lua and",
    "start": "607920",
    "end": "609640"
  },
  {
    "text": "JavaScript I really don't want a third",
    "start": "609640",
    "end": "611279"
  },
  {
    "text": "one you know what I mean I use Python to",
    "start": "611279",
    "end": "613880"
  },
  {
    "text": "graph things but it's like very light",
    "start": "613880",
    "end": "616680"
  },
  {
    "text": "and I just do just enough to get kind of",
    "start": "616680",
    "end": "618560"
  },
  {
    "text": "out out of the way there I like that",
    "start": "618560",
    "end": "620519"
  },
  {
    "text": "let's subscribe let's do that great one",
    "start": "620519",
    "end": "622920"
  },
  {
    "text": "software chats great software chat I",
    "start": "622920",
    "end": "624519"
  },
  {
    "text": "love this style of video this this live",
    "start": "624519",
    "end": "626399"
  },
  {
    "text": "blogging I'd love to see more of that",
    "start": "626399",
    "end": "627959"
  },
  {
    "text": "people just kind of just talk about",
    "start": "627959",
    "end": "629360"
  },
  {
    "text": "stuff they're learning it's good stuff",
    "start": "629360",
    "end": "630959"
  },
  {
    "text": "the name the primagen",
    "start": "630959",
    "end": "635079"
  }
]