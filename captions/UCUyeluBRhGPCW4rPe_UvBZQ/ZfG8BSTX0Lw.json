[
  {
    "start": "0",
    "end": "165000"
  },
  {
    "text": "I heard you liked factories so I made",
    "start": "359",
    "end": "2940"
  },
  {
    "text": "you a factory inside a factory which",
    "start": "2940",
    "end": "5220"
  },
  {
    "text": "inherits from an abstract Factory so it",
    "start": "5220",
    "end": "7919"
  },
  {
    "text": "can create new factories but enough",
    "start": "7919",
    "end": "10139"
  },
  {
    "text": "about programming in Java",
    "start": "10139",
    "end": "13880"
  },
  {
    "text": "you know",
    "start": "14340",
    "end": "16940"
  },
  {
    "text": "I mean I at Netflix on The Originals",
    "start": "17220",
    "end": "20220"
  },
  {
    "text": "team okay so so in 2017 when Originals",
    "start": "20220",
    "end": "23220"
  },
  {
    "text": "were really getting started uh real talk",
    "start": "23220",
    "end": "27900"
  },
  {
    "text": "we did have an abstract of",
    "start": "27900",
    "end": "31679"
  },
  {
    "text": "we we had an abstract Builder Factory",
    "start": "31679",
    "end": "33960"
  },
  {
    "text": "okay it was an abstract Builder",
    "start": "33960",
    "end": "38000"
  },
  {
    "text": "factories that would produce images",
    "start": "38000",
    "end": "42540"
  },
  {
    "text": "and other assets for all of our new",
    "start": "42540",
    "end": "44700"
  },
  {
    "text": "original content so I mean I I did have",
    "start": "44700",
    "end": "46620"
  },
  {
    "text": "I did get the full abstract Builder",
    "start": "46620",
    "end": "48660"
  },
  {
    "text": "Factory right like I think that's really",
    "start": "48660",
    "end": "50820"
  },
  {
    "text": "a winner and I if I'm not mistaken we",
    "start": "50820",
    "end": "53100"
  },
  {
    "text": "also had an abstract Factory we also had",
    "start": "53100",
    "end": "55440"
  },
  {
    "text": "the abstract Factory we had we had like",
    "start": "55440",
    "end": "58140"
  },
  {
    "text": "we had it all we had the Builder config",
    "start": "58140",
    "end": "60000"
  },
  {
    "text": "Factory for sure that you'd build up a",
    "start": "60000",
    "end": "62280"
  },
  {
    "text": "config",
    "start": "62280",
    "end": "63359"
  },
  {
    "text": "and then you'd produce it and it was",
    "start": "63359",
    "end": "66360"
  },
  {
    "text": "super complicated and I got most of it",
    "start": "66360",
    "end": "69000"
  },
  {
    "text": "down",
    "start": "69000",
    "end": "70439"
  },
  {
    "text": "but man those days in Java you know",
    "start": "70439",
    "end": "72240"
  },
  {
    "text": "Java's a lot of a lot of a lot a lot of",
    "start": "72240",
    "end": "75420"
  },
  {
    "text": "factories you know what I mean you just",
    "start": "75420",
    "end": "77040"
  },
  {
    "text": "get up right it's just like if",
    "start": "77040",
    "end": "79860"
  },
  {
    "text": "you ever want a good Factory",
    "start": "79860",
    "end": "83040"
  },
  {
    "text": "go get it",
    "start": "83040",
    "end": "85320"
  },
  {
    "text": "in this video we will learn about eight",
    "start": "85320",
    "end": "87479"
  },
  {
    "text": "design patterns every developer should",
    "start": "87479",
    "end": "89700"
  },
  {
    "text": "strategy is the only the strategy",
    "start": "89700",
    "end": "91380"
  },
  {
    "text": "pattern strategy pattern is like the",
    "start": "91380",
    "end": "93600"
  },
  {
    "text": "greatest pattern of all time okay",
    "start": "93600",
    "end": "94799"
  },
  {
    "text": "everyone uses the strategy pattern uh",
    "start": "94799",
    "end": "97259"
  },
  {
    "text": "second off iterator pattern real good",
    "start": "97259",
    "end": "99240"
  },
  {
    "text": "no in 1994 the gang of four released the",
    "start": "99240",
    "end": "103320"
  },
  {
    "text": "holy book design patterns introducing 23",
    "start": "103320",
    "end": "106500"
  },
  {
    "text": "objects by the way if you haven't read",
    "start": "106500",
    "end": "108180"
  },
  {
    "text": "this you should even if you don't like",
    "start": "108180",
    "end": "109439"
  },
  {
    "text": "oop this this idea of patterns that can",
    "start": "109439",
    "end": "113340"
  },
  {
    "text": "exist within software is really amazing",
    "start": "113340",
    "end": "115320"
  },
  {
    "text": "and it also works in things like rust",
    "start": "115320",
    "end": "117960"
  },
  {
    "text": "there is patterns and rust being able to",
    "start": "117960",
    "end": "120060"
  },
  {
    "text": "understand patterns and like abstract",
    "start": "120060",
    "end": "122340"
  },
  {
    "text": "them out and reuse a strategy to write",
    "start": "122340",
    "end": "124740"
  },
  {
    "text": "software I think is one of the best",
    "start": "124740",
    "end": "126719"
  },
  {
    "text": "things you can do because no matter what",
    "start": "126719",
    "end": "129239"
  },
  {
    "text": "software you write there are patterns",
    "start": "129239",
    "end": "130920"
  },
  {
    "text": "that can make things simpler and make",
    "start": "130920",
    "end": "132480"
  },
  {
    "text": "other people get up to speed",
    "start": "132480",
    "end": "136140"
  },
  {
    "text": "oriented design patterns falling into",
    "start": "136140",
    "end": "138660"
  },
  {
    "text": "one of three buckets creational patterns",
    "start": "138660",
    "end": "141420"
  },
  {
    "text": "structural patterns and behavioral",
    "start": "141420",
    "end": "144000"
  },
  {
    "text": "patterns while some argue that it's",
    "start": "144000",
    "end": "146040"
  },
  {
    "text": "updated the fact that a 30 year old book",
    "start": "146040",
    "end": "148319"
  },
  {
    "text": "is still being discussed definitely",
    "start": "148319",
    "end": "150480"
  },
  {
    "text": "means something especially in a world",
    "start": "150480",
    "end": "152879"
  },
  {
    "text": "where JavaScript Frameworks are going",
    "start": "152879",
    "end": "154920"
  },
  {
    "text": "out of stock",
    "start": "154920",
    "end": "156540"
  },
  {
    "text": "I just",
    "start": "156540",
    "end": "158700"
  },
  {
    "text": "let's just be real here",
    "start": "158700",
    "end": "160980"
  },
  {
    "text": "if only",
    "start": "160980",
    "end": "162780"
  },
  {
    "text": "if only react was dying okay anyways",
    "start": "162780",
    "end": "165420"
  },
  {
    "start": "165000",
    "end": "280000"
  },
  {
    "text": "dial faster than you can say JavaScript",
    "start": "165420",
    "end": "167580"
  },
  {
    "text": "was a mistake anyways let's start with",
    "start": "167580",
    "end": "170040"
  },
  {
    "text": "our first creational pattern the factory",
    "start": "170040",
    "end": "172379"
  },
  {
    "text": "imagine that you want a burger but you",
    "start": "172379",
    "end": "175140"
  },
  {
    "text": "don't want to have to worry about",
    "start": "175140",
    "end": "176040"
  },
  {
    "text": "getting all the ingredients and putting",
    "start": "176040",
    "end": "178260"
  },
  {
    "text": "them together you know this is always",
    "start": "178260",
    "end": "180300"
  },
  {
    "text": "how this this pattern is described I",
    "start": "180300",
    "end": "183900"
  },
  {
    "text": "always feel like it starts it's verbally",
    "start": "183900",
    "end": "186180"
  },
  {
    "text": "so simple but it's always a huge pain in",
    "start": "186180",
    "end": "188160"
  },
  {
    "text": "the ass anyways so instead you just",
    "start": "188160",
    "end": "190140"
  },
  {
    "text": "order a burger well we can do the same",
    "start": "190140",
    "end": "192360"
  },
  {
    "text": "thing with code if it takes a list of",
    "start": "192360",
    "end": "195000"
  },
  {
    "text": "ingredients to create a burger we can",
    "start": "195000",
    "end": "197580"
  },
  {
    "text": "instead use a factory which will",
    "start": "197580",
    "end": "199620"
  },
  {
    "text": "instantiate the burger for us and return",
    "start": "199620",
    "end": "201959"
  },
  {
    "text": "it to us whether it's a cheeseburger a",
    "start": "201959",
    "end": "204000"
  },
  {
    "text": "deluxe cheeseburger or even a vegan",
    "start": "204000",
    "end": "205860"
  },
  {
    "text": "burger all we have to do is tell the",
    "start": "205860",
    "end": "207780"
  },
  {
    "text": "factory what kind of burger we want just",
    "start": "207780",
    "end": "209819"
  },
  {
    "text": "like you would do at a restaurant but be",
    "start": "209819",
    "end": "211620"
  },
  {
    "text": "careful because this way you'll never",
    "start": "211620",
    "end": "213060"
  },
  {
    "text": "again you know this always is I mean",
    "start": "213060",
    "end": "215819"
  },
  {
    "text": "like when you look at this for a second",
    "start": "215819",
    "end": "217260"
  },
  {
    "text": "you realize like how annoyingly coupled",
    "start": "217260",
    "end": "221640"
  },
  {
    "text": "this is you know what I mean like your",
    "start": "221640",
    "end": "224879"
  },
  {
    "text": "method names like you have to say the",
    "start": "224879",
    "end": "226980"
  },
  {
    "text": "thing you want as the method name but it",
    "start": "226980",
    "end": "229680"
  },
  {
    "text": "uses the strategy pattern at the end the",
    "start": "229680",
    "end": "231299"
  },
  {
    "text": "strategy pattern is good like notice the",
    "start": "231299",
    "end": "232920"
  },
  {
    "text": "strategy pattern at the end they all",
    "start": "232920",
    "end": "234060"
  },
  {
    "text": "have the word print",
    "start": "234060",
    "end": "236720"
  },
  {
    "text": "yeah this example makes no sense I agree",
    "start": "237180",
    "end": "239340"
  },
  {
    "text": "with that but the print thing at the end",
    "start": "239340",
    "end": "241200"
  },
  {
    "text": "it is this this makes a lot of sense uh",
    "start": "241200",
    "end": "243840"
  },
  {
    "text": "why not use an email I don't think this",
    "start": "243840",
    "end": "245400"
  },
  {
    "text": "language uh",
    "start": "245400",
    "end": "247620"
  },
  {
    "text": "I mean at this point",
    "start": "247620",
    "end": "249780"
  },
  {
    "text": "you should probably compose a burger",
    "start": "249780",
    "end": "252360"
  },
  {
    "text": "of its various toppings",
    "start": "252360",
    "end": "255360"
  },
  {
    "text": "because you should be able to push a",
    "start": "255360",
    "end": "256620"
  },
  {
    "text": "topping and make your own then you can",
    "start": "256620",
    "end": "258780"
  },
  {
    "text": "have named ones right you should just",
    "start": "258780",
    "end": "260280"
  },
  {
    "text": "have named ones not you don't have to",
    "start": "260280",
    "end": "261840"
  },
  {
    "text": "create new instances they should just be",
    "start": "261840",
    "end": "263400"
  },
  {
    "text": "named uh hard-coded ones and then you",
    "start": "263400",
    "end": "265680"
  },
  {
    "text": "can have your build your own one right",
    "start": "265680",
    "end": "266820"
  },
  {
    "text": "well let's let's be real here okay uh",
    "start": "266820",
    "end": "269639"
  },
  {
    "text": "anyways",
    "start": "269639",
    "end": "271080"
  },
  {
    "text": "for know what's inside the Special Sauce",
    "start": "271080",
    "end": "273060"
  },
  {
    "text": "we added a secret ingredient",
    "start": "273060",
    "end": "276560"
  },
  {
    "text": "now alternatively control over how the",
    "start": "278340",
    "end": "281520"
  },
  {
    "start": "280000",
    "end": "410000"
  },
  {
    "text": "sausage is made you can go with the",
    "start": "281520",
    "end": "283139"
  },
  {
    "text": "builder pattern the idea is that if we",
    "start": "283139",
    "end": "285300"
  },
  {
    "text": "want to make a burger we don't",
    "start": "285300",
    "end": "286500"
  },
  {
    "text": "immediately have to pass in all the",
    "start": "286500",
    "end": "288419"
  },
  {
    "text": "parameters we can use a burger Builder",
    "start": "288419",
    "end": "290520"
  },
  {
    "text": "instead we'll have an in by the way this",
    "start": "290520",
    "end": "292500"
  },
  {
    "text": "is the the better way to do things uh",
    "start": "292500",
    "end": "294660"
  },
  {
    "text": "sort of I this whole it is better it is",
    "start": "294660",
    "end": "297240"
  },
  {
    "text": "and generally you should always use a",
    "start": "297240",
    "end": "299040"
  },
  {
    "text": "builder pattern rust has a builder",
    "start": "299040",
    "end": "300240"
  },
  {
    "text": "pattern uh this is this is a real this",
    "start": "300240",
    "end": "303660"
  },
  {
    "text": "is a real this is a real good this is",
    "start": "303660",
    "end": "305759"
  },
  {
    "text": "always usually much better this whole",
    "start": "305759",
    "end": "307320"
  },
  {
    "text": "like not returning yourself though this",
    "start": "307320",
    "end": "309060"
  },
  {
    "text": "is kind of freaking me out like you",
    "start": "309060",
    "end": "310919"
  },
  {
    "text": "should return yourself return yourself",
    "start": "310919",
    "end": "313380"
  },
  {
    "text": "individual method for adding each",
    "start": "313380",
    "end": "315479"
  },
  {
    "text": "ingredients whether it's a bun Patty or",
    "start": "315479",
    "end": "317400"
  },
  {
    "text": "cheese each one will return a reference",
    "start": "317400",
    "end": "319500"
  },
  {
    "text": "to the Builder and finally you will have",
    "start": "319500",
    "end": "321419"
  },
  {
    "text": "a build method which will return the",
    "start": "321419",
    "end": "323220"
  },
  {
    "text": "final product then we can instantiate a",
    "start": "323220",
    "end": "325560"
  },
  {
    "text": "burger Builder add the Buns that we want",
    "start": "325560",
    "end": "327539"
  },
  {
    "text": "the Patty that we don't like this that",
    "start": "327539",
    "end": "329639"
  },
  {
    "text": "we want and we can change what is this",
    "start": "329639",
    "end": "331080"
  },
  {
    "text": "bash what do we write in bash right now",
    "start": "331080",
    "end": "334440"
  },
  {
    "text": "in these methods because remember each",
    "start": "334440",
    "end": "336479"
  },
  {
    "text": "one will return a reference to the",
    "start": "336479",
    "end": "338400"
  },
  {
    "text": "Builder finally build it and we have the",
    "start": "338400",
    "end": "340919"
  },
  {
    "text": "exact burger that we want I've used this",
    "start": "340919",
    "end": "342960"
  },
  {
    "text": "pattern a lot at Google with protocol",
    "start": "342960",
    "end": "344639"
  },
  {
    "text": "buffers next we have the Singleton",
    "start": "344639",
    "end": "346620"
  },
  {
    "text": "pattern and I'm not I did you know he",
    "start": "346620",
    "end": "348720"
  },
  {
    "text": "just lightly threw out",
    "start": "348720",
    "end": "352020"
  },
  {
    "text": "uh using these with protobufs like that",
    "start": "352020",
    "end": "354600"
  },
  {
    "text": "is a really great thing Proto Buffs are",
    "start": "354600",
    "end": "357120"
  },
  {
    "text": "amazing and this is one of the reasons",
    "start": "357120",
    "end": "359100"
  },
  {
    "text": "why they're so good when I'm at Google I",
    "start": "359100",
    "end": "361139"
  },
  {
    "text": "know just tosses out casually tosses out",
    "start": "361139",
    "end": "363060"
  },
  {
    "text": "Google and protobufs it's a neat kill is",
    "start": "363060",
    "end": "365400"
  },
  {
    "text": "absolutely right like when you use",
    "start": "365400",
    "end": "367800"
  },
  {
    "text": "when you use proper Builder patterns",
    "start": "367800",
    "end": "370440"
  },
  {
    "text": "which is just like something you see all",
    "start": "370440",
    "end": "371699"
  },
  {
    "text": "the time so this is like a good thing",
    "start": "371699",
    "end": "372840"
  },
  {
    "text": "you can actually take away I like use",
    "start": "372840",
    "end": "375180"
  },
  {
    "text": "this honestly use this today says the",
    "start": "375180",
    "end": "377639"
  },
  {
    "text": "Netflix guy you know when I'm when I'm",
    "start": "377639",
    "end": "379020"
  },
  {
    "text": "designing my software at Netflix I tend",
    "start": "379020",
    "end": "381000"
  },
  {
    "text": "to use the Builder pattern as well you",
    "start": "381000",
    "end": "382740"
  },
  {
    "text": "know what I mean it's like this is",
    "start": "382740",
    "end": "384120"
  },
  {
    "text": "actually a really good",
    "start": "384120",
    "end": "385620"
  },
  {
    "text": "this is a very useful idea in general",
    "start": "385620",
    "end": "388800"
  },
  {
    "text": "and it works in a lot of languages it's",
    "start": "388800",
    "end": "391440"
  },
  {
    "text": "um right it's just good times use this",
    "start": "391440",
    "end": "393720"
  },
  {
    "text": "pattern a lot at Google with protocol",
    "start": "393720",
    "end": "395400"
  },
  {
    "text": "buffers next we have the Singleton",
    "start": "395400",
    "end": "397380"
  },
  {
    "text": "pattern and I'm not talking about they",
    "start": "397380",
    "end": "399060"
  },
  {
    "text": "actually renamed the Singleton pattern",
    "start": "399060",
    "end": "400500"
  },
  {
    "text": "of course to the arch user pattern",
    "start": "400500",
    "end": "403020"
  },
  {
    "text": "probably",
    "start": "403020",
    "end": "404160"
  },
  {
    "text": "you should probably keep up with the",
    "start": "404160",
    "end": "405479"
  },
  {
    "text": "times you know",
    "start": "405479",
    "end": "406620"
  },
  {
    "text": "my dating life a Singleton is just a",
    "start": "406620",
    "end": "409020"
  },
  {
    "text": "class that can only have a single",
    "start": "409020",
    "end": "410759"
  },
  {
    "start": "410000",
    "end": "605000"
  },
  {
    "text": "instance of it that's instantiated it",
    "start": "410759",
    "end": "412860"
  },
  {
    "text": "has many use cases for example",
    "start": "412860",
    "end": "414360"
  },
  {
    "text": "maintaining a single copy of our",
    "start": "414360",
    "end": "416100"
  },
  {
    "text": "application State we would start by",
    "start": "416100",
    "end": "418020"
  },
  {
    "text": "having a static instance variable let's",
    "start": "418020",
    "end": "420120"
  },
  {
    "text": "say in our app we want to know if a user",
    "start": "420120",
    "end": "422160"
  },
  {
    "text": "is logged in or not but we won't I I",
    "start": "422160",
    "end": "424500"
  },
  {
    "text": "know that python is considered like the",
    "start": "424500",
    "end": "426780"
  },
  {
    "text": "worst language to do classes in just",
    "start": "426780",
    "end": "429900"
  },
  {
    "text": "just be okay with it right we're we're",
    "start": "429900",
    "end": "432060"
  },
  {
    "text": "looking for the pattern right that's one",
    "start": "432060",
    "end": "434759"
  },
  {
    "text": "cool thing that should make the pattern",
    "start": "434759",
    "end": "436020"
  },
  {
    "text": "even cooler in the sense that uh the",
    "start": "436020",
    "end": "439680"
  },
  {
    "text": "pattern can exist in such a way that it",
    "start": "439680",
    "end": "442319"
  },
  {
    "text": "can work in multiple different languages",
    "start": "442319",
    "end": "443940"
  },
  {
    "text": "right that's good that's a good thing",
    "start": "443940",
    "end": "445380"
  },
  {
    "text": "because that's something that means that",
    "start": "445380",
    "end": "446520"
  },
  {
    "text": "you can take it with you uh the",
    "start": "446520",
    "end": "448199"
  },
  {
    "text": "Singleton pattern sucks until it's",
    "start": "448199",
    "end": "449639"
  },
  {
    "text": "really awesome",
    "start": "449639",
    "end": "451020"
  },
  {
    "text": "right you know I always come up with a",
    "start": "451020",
    "end": "452699"
  },
  {
    "text": "stupid like database connection pool",
    "start": "452699",
    "end": "454319"
  },
  {
    "text": "thing sometimes you want it as a",
    "start": "454319",
    "end": "456599"
  },
  {
    "text": "Singleton but then you're like well do",
    "start": "456599",
    "end": "457860"
  },
  {
    "text": "you really want another single tension",
    "start": "457860",
    "end": "459120"
  },
  {
    "text": "program just hold on to it by the way",
    "start": "459120",
    "end": "460800"
  },
  {
    "text": "low level learning we did react to yours",
    "start": "460800",
    "end": "462960"
  },
  {
    "text": "you you yours is great your Zig one",
    "start": "462960",
    "end": "465539"
  },
  {
    "text": "right you know you always get into this",
    "start": "465539",
    "end": "468720"
  },
  {
    "text": "one you know",
    "start": "468720",
    "end": "471319"
  },
  {
    "text": "we'll use a static method called get app",
    "start": "474080",
    "end": "477060"
  },
  {
    "text": "hey uh low-level learning can I do one",
    "start": "477060",
    "end": "478620"
  },
  {
    "text": "more reacts to one or more of your",
    "start": "478620",
    "end": "479759"
  },
  {
    "text": "contents can you pick your favorite one",
    "start": "479759",
    "end": "480960"
  },
  {
    "text": "and send it to me yeah yeah yeah yeah",
    "start": "480960",
    "end": "482460"
  },
  {
    "text": "we'll do one more after this okay stay",
    "start": "482460",
    "end": "484800"
  },
  {
    "text": "which will first check if there's",
    "start": "484800",
    "end": "486240"
  },
  {
    "text": "already an existing instance of can we",
    "start": "486240",
    "end": "488280"
  },
  {
    "text": "pause it for a second uh I hate",
    "start": "488280",
    "end": "490080"
  },
  {
    "text": "decorators",
    "start": "490080",
    "end": "491580"
  },
  {
    "text": "for application stay if not we'll",
    "start": "491580",
    "end": "493620"
  },
  {
    "text": "instantiate one if there already is",
    "start": "493620",
    "end": "495539"
  },
  {
    "text": "though we'll just return the existing",
    "start": "495539",
    "end": "497280"
  },
  {
    "text": "instance we'll never create more than",
    "start": "497280",
    "end": "499080"
  },
  {
    "text": "one so now if we get our app State for",
    "start": "499080",
    "end": "501240"
  },
  {
    "text": "the first time the logged in value will",
    "start": "501240",
    "end": "503220"
  },
  {
    "text": "initially be false but if we I mean to",
    "start": "503220",
    "end": "505199"
  },
  {
    "text": "be fair I did use a Singleton pattern",
    "start": "505199",
    "end": "507060"
  },
  {
    "text": "for this when I was writing the video",
    "start": "507060",
    "end": "508020"
  },
  {
    "text": "driver uh and the audio driver the thing",
    "start": "508020",
    "end": "511020"
  },
  {
    "text": "was is that I also wrote the driver in",
    "start": "511020",
    "end": "513180"
  },
  {
    "text": "such a way that behind the Singleton was",
    "start": "513180",
    "end": "515700"
  },
  {
    "text": "a strategy pattern so it'd create a",
    "start": "515700",
    "end": "518039"
  },
  {
    "text": "Singleton strategy pattern so that way I",
    "start": "518039",
    "end": "519539"
  },
  {
    "text": "could write a sync player something that",
    "start": "519539",
    "end": "521219"
  },
  {
    "text": "doesn't actually go to anything it just",
    "start": "521219",
    "end": "523680"
  },
  {
    "text": "is like a software sync it just swallows",
    "start": "523680",
    "end": "525839"
  },
  {
    "text": "all the video and audio so that way I",
    "start": "525839",
    "end": "527580"
  },
  {
    "text": "could do like high performance testing",
    "start": "527580",
    "end": "529019"
  },
  {
    "text": "right I could play two hours of video in",
    "start": "529019",
    "end": "531120"
  },
  {
    "text": "five seconds or I hadn't really actually",
    "start": "531120",
    "end": "534300"
  },
  {
    "text": "go out to the actual television and so",
    "start": "534300",
    "end": "537240"
  },
  {
    "text": "there is places where the Singleton",
    "start": "537240",
    "end": "539279"
  },
  {
    "text": "makes a lot of sense especially if you",
    "start": "539279",
    "end": "541200"
  },
  {
    "text": "can mix in like a Singleton with a",
    "start": "541200",
    "end": "542820"
  },
  {
    "text": "strategy you can create ways to create",
    "start": "542820",
    "end": "545040"
  },
  {
    "text": "your whole system such that it makes a",
    "start": "545040",
    "end": "547560"
  },
  {
    "text": "lot of sense so just saying you know I",
    "start": "547560",
    "end": "549839"
  },
  {
    "text": "know that the Singleton gets a lot of",
    "start": "549839",
    "end": "551519"
  },
  {
    "text": "riffraff but there are a few places",
    "start": "551519",
    "end": "553500"
  },
  {
    "text": "where it's super useful for me that was",
    "start": "553500",
    "end": "556140"
  },
  {
    "text": "super useful if we get the app State",
    "start": "556140",
    "end": "557760"
  },
  {
    "text": "again this will actually still be the",
    "start": "557760",
    "end": "559740"
  },
  {
    "text": "first instance so if we modify the first",
    "start": "559740",
    "end": "562080"
  },
  {
    "text": "instance and then print the logged in",
    "start": "562080",
    "end": "564180"
  },
  {
    "text": "value for both of them they will both",
    "start": "564180",
    "end": "565860"
  },
  {
    "text": "now be true this pattern can be useful",
    "start": "565860",
    "end": "568080"
  },
  {
    "text": "so that multiple components in your app",
    "start": "568080",
    "end": "569940"
  },
  {
    "text": "will have also this example is",
    "start": "569940",
    "end": "571380"
  },
  {
    "text": "terrifying I hate the you know modifying",
    "start": "571380",
    "end": "574140"
  },
  {
    "text": "a static a Singleton you know it just",
    "start": "574140",
    "end": "576899"
  },
  {
    "text": "terrifies me you know like this right",
    "start": "576899",
    "end": "579540"
  },
  {
    "text": "here this thing terrifies me",
    "start": "579540",
    "end": "582860"
  },
  {
    "text": "I know it's not dude it's crazy it's",
    "start": "583260",
    "end": "586320"
  },
  {
    "text": "crazy uh they're just so hard to test",
    "start": "586320",
    "end": "588360"
  },
  {
    "text": "they are so hard to test I'm totally on",
    "start": "588360",
    "end": "590399"
  },
  {
    "text": "your team with that shared immutable",
    "start": "590399",
    "end": "592080"
  },
  {
    "text": "State it's shared mutable state is the",
    "start": "592080",
    "end": "594360"
  },
  {
    "text": "the bane of all programming and the key",
    "start": "594360",
    "end": "597000"
  },
  {
    "text": "to super awesome amazing performance and",
    "start": "597000",
    "end": "598980"
  },
  {
    "text": "is the scariest thing in the universe",
    "start": "598980",
    "end": "600420"
  },
  {
    "text": "and so careful I have a shared source of",
    "start": "600420",
    "end": "603540"
  },
  {
    "text": "truth but how can all the components",
    "start": "603540",
    "end": "605399"
  },
  {
    "start": "605000",
    "end": "700000"
  },
  {
    "text": "listen for updates in real time well",
    "start": "605399",
    "end": "607680"
  },
  {
    "text": "that's where the Observer comes in our",
    "start": "607680",
    "end": "609360"
  },
  {
    "text": "first behavioral pattern I prefer to",
    "start": "609360",
    "end": "611459"
  },
  {
    "text": "call it the pub sub pattern it's widely",
    "start": "611459",
    "end": "613560"
  },
  {
    "text": "used Beyond just object oriented",
    "start": "613560",
    "end": "615600"
  },
  {
    "text": "programming including in distributed",
    "start": "615600",
    "end": "617279"
  },
  {
    "text": "systems let's take YouTube for example",
    "start": "617279",
    "end": "619440"
  },
  {
    "text": "every time I upload a video all of my",
    "start": "619440",
    "end": "622019"
  },
  {
    "text": "subscribers get a notification including",
    "start": "622019",
    "end": "624240"
  },
  {
    "text": "you because you're subscribed right",
    "start": "624240",
    "end": "626040"
  },
  {
    "text": "right in this case the YouTube channel",
    "start": "626040",
    "end": "628019"
  },
  {
    "text": "is the subject AKA publisher which will",
    "start": "628019",
    "end": "631140"
  },
  {
    "text": "be the source of events such as a new",
    "start": "631140",
    "end": "633300"
  },
  {
    "text": "video being uploaded we might want",
    "start": "633300",
    "end": "635279"
  },
  {
    "text": "multiple observers AKA subscribers to",
    "start": "635279",
    "end": "638220"
  },
  {
    "text": "all be notified when these events happen",
    "start": "638220",
    "end": "640140"
  },
  {
    "text": "in real time one way to implement this",
    "start": "640140",
    "end": "642480"
  },
  {
    "text": "pattern is to have a YouTube channel",
    "start": "642480",
    "end": "644279"
  },
  {
    "text": "class which maintains a list of its",
    "start": "644279",
    "end": "646560"
  },
  {
    "text": "subscribers when a new user subscribes",
    "start": "646560",
    "end": "648540"
  },
  {
    "text": "we add them to the list of subscribers",
    "start": "648540",
    "end": "650399"
  },
  {
    "text": "when an event occurs we go through that",
    "start": "650399",
    "end": "652920"
  },
  {
    "text": "list of subscribers and send the event",
    "start": "652920",
    "end": "654779"
  },
  {
    "text": "data to each of them with a notification",
    "start": "654779",
    "end": "656940"
  },
  {
    "text": "but we also have to define the",
    "start": "656940",
    "end": "658740"
  },
  {
    "text": "subscriber interface which you can do",
    "start": "658740",
    "end": "660300"
  },
  {
    "text": "with an abstract class or an interface",
    "start": "660300",
    "end": "662339"
  },
  {
    "text": "different subscribers might implement",
    "start": "662339",
    "end": "663899"
  },
  {
    "text": "this interface differently but for a",
    "start": "663899",
    "end": "665519"
  },
  {
    "text": "YouTube user let's say that we just want",
    "start": "665519",
    "end": "667320"
  },
  {
    "text": "to print the notification that was",
    "start": "667320",
    "end": "668760"
  },
  {
    "text": "received so then we can create a YouTube",
    "start": "668760",
    "end": "670800"
  },
  {
    "text": "channel add a few subscribers and we",
    "start": "670800",
    "end": "673200"
  },
  {
    "text": "only have to call notify once and all of",
    "start": "673200",
    "end": "675660"
  },
  {
    "text": "the subscribers will receive the",
    "start": "675660",
    "end": "676980"
  },
  {
    "text": "notification this is also",
    "start": "676980",
    "end": "679200"
  },
  {
    "text": "this is good I mean I mean Observer",
    "start": "679200",
    "end": "682079"
  },
  {
    "text": "pattern it's it's real time uh we use",
    "start": "682079",
    "end": "684120"
  },
  {
    "text": "this a bunch I you know again the python",
    "start": "684120",
    "end": "686459"
  },
  {
    "text": "I think there's like an instant distaste",
    "start": "686459",
    "end": "688740"
  },
  {
    "text": "for for this the idea of message passing",
    "start": "688740",
    "end": "691019"
  },
  {
    "text": "I know oh my goodness don't shut up TJ",
    "start": "691019",
    "end": "693079"
  },
  {
    "text": "TJ next thing you're gonna do is you're",
    "start": "693079",
    "end": "695399"
  },
  {
    "text": "gonna start talking about Objective C",
    "start": "695399",
    "end": "697200"
  },
  {
    "text": "so extensible enough that a subscriber",
    "start": "697200",
    "end": "699240"
  },
  {
    "text": "could be subscribed to multiple channels",
    "start": "699240",
    "end": "701220"
  },
  {
    "start": "700000",
    "end": "860000"
  },
  {
    "text": "an iterator is a pretty simple pattern",
    "start": "701220",
    "end": "703640"
  },
  {
    "text": "how the values in an object can be",
    "start": "703640",
    "end": "706140"
  },
  {
    "text": "iterated through in Python just defining",
    "start": "706140",
    "end": "708600"
  },
  {
    "text": "an array and then iterating in keyword",
    "start": "708600",
    "end": "711600"
  },
  {
    "text": "uses the built-in list iterator this way",
    "start": "711600",
    "end": "714540"
  },
  {
    "text": "we don't even have to index the array",
    "start": "714540",
    "end": "716399"
  },
  {
    "text": "now for more complex objects iterators",
    "start": "716399",
    "end": "718680"
  },
  {
    "text": "was good in fact you should know an",
    "start": "718680",
    "end": "720420"
  },
  {
    "text": "iterator pattern uh one of my first",
    "start": "720420",
    "end": "722279"
  },
  {
    "text": "interviews with Google like 10 years ago",
    "start": "722279",
    "end": "724019"
  },
  {
    "text": "when I had to fill it out on Google Docs",
    "start": "724019",
    "end": "725579"
  },
  {
    "text": "I actually did the Google interview at",
    "start": "725579",
    "end": "728040"
  },
  {
    "text": "my job when I was writing C for the",
    "start": "728040",
    "end": "730019"
  },
  {
    "text": "government for robots and",
    "start": "730019",
    "end": "732959"
  },
  {
    "text": "at Google by the way I got rejected by",
    "start": "732959",
    "end": "735000"
  },
  {
    "text": "the way they didn't like me by the way",
    "start": "735000",
    "end": "736320"
  },
  {
    "text": "but part of that interview was to write",
    "start": "736320",
    "end": "738420"
  },
  {
    "text": "an iterator right and so and so knowing",
    "start": "738420",
    "end": "741360"
  },
  {
    "text": "iterators iterators are super useful",
    "start": "741360",
    "end": "742980"
  },
  {
    "text": "they're they're it's a it's a great",
    "start": "742980",
    "end": "744779"
  },
  {
    "text": "pattern and I've used iterators",
    "start": "744779",
    "end": "748079"
  },
  {
    "text": "as ways to solve problems",
    "start": "748079",
    "end": "751860"
  },
  {
    "text": "at Netflix by the way by the way I used",
    "start": "751860",
    "end": "753779"
  },
  {
    "text": "I I work at Netflix by the way uh and so",
    "start": "753779",
    "end": "756180"
  },
  {
    "text": "it's like it's really really good yeah",
    "start": "756180",
    "end": "758459"
  },
  {
    "text": "yeah Netflix uh or Google did reject me",
    "start": "758459",
    "end": "760560"
  },
  {
    "text": "twice and then they offered me a salary",
    "start": "760560",
    "end": "762839"
  },
  {
    "text": "lower than the one I have at Netflix and",
    "start": "762839",
    "end": "765180"
  },
  {
    "text": "try to convince me that it's a starting",
    "start": "765180",
    "end": "766500"
  },
  {
    "text": "point and I said of course it's the",
    "start": "766500",
    "end": "768000"
  },
  {
    "text": "starting point any point you give me is",
    "start": "768000",
    "end": "769860"
  },
  {
    "text": "a starting point what you're saying is",
    "start": "769860",
    "end": "772019"
  },
  {
    "text": "an objective Truth for an objectively",
    "start": "772019",
    "end": "773940"
  },
  {
    "text": "bad offer so try again",
    "start": "773940",
    "end": "776339"
  },
  {
    "text": "it's like binary search trees or linked",
    "start": "776339",
    "end": "778500"
  },
  {
    "text": "lists we can Define our own we can take",
    "start": "778500",
    "end": "780480"
  },
  {
    "text": "a list node which just has a value and a",
    "start": "780480",
    "end": "782579"
  },
  {
    "text": "next pointer and then a linked list",
    "start": "782579",
    "end": "784260"
  },
  {
    "text": "which has a head pointer and a current",
    "start": "784260",
    "end": "785940"
  },
  {
    "text": "pointer we can first Define the",
    "start": "785940",
    "end": "789899"
  },
  {
    "text": "weird passing in head as the first note",
    "start": "789899",
    "end": "792079"
  },
  {
    "text": "uh you know just saying aren't you the",
    "start": "792079",
    "end": "794639"
  },
  {
    "text": "guy that built the auto place out on the",
    "start": "794639",
    "end": "796560"
  },
  {
    "text": "homepage I am iterator with the inner",
    "start": "796560",
    "end": "798660"
  },
  {
    "text": "function which will just set the current",
    "start": "798660",
    "end": "800339"
  },
  {
    "text": "pointer to the head and then return a",
    "start": "800339",
    "end": "802079"
  },
  {
    "text": "reference to the linked list to get the",
    "start": "802079",
    "end": "804000"
  },
  {
    "text": "next value in the sequence we defined",
    "start": "804000",
    "end": "805860"
  },
  {
    "text": "the next function if our current pointer",
    "start": "805860",
    "end": "807899"
  },
  {
    "text": "is non-null we can get the value and",
    "start": "807899",
    "end": "810180"
  },
  {
    "text": "then return it and also shift the",
    "start": "810180",
    "end": "811920"
  },
  {
    "text": "current pointer but if we reach the end",
    "start": "811920",
    "end": "813540"
  },
  {
    "text": "of the linked list we can send a signal",
    "start": "813540",
    "end": "815579"
  },
  {
    "text": "that we're going to stop iterating to",
    "start": "815579",
    "end": "817260"
  },
  {
    "text": "test it out we can just initialize",
    "start": "817260",
    "end": "819420"
  },
  {
    "text": "that's weird oh yeah because they don't",
    "start": "819420",
    "end": "821519"
  },
  {
    "text": "have options do they",
    "start": "821519",
    "end": "823100"
  },
  {
    "text": "oh yeah so rust solves this differently",
    "start": "823100",
    "end": "825660"
  },
  {
    "text": "you know I don't I mean this just seems",
    "start": "825660",
    "end": "827399"
  },
  {
    "text": "like why do you why you have to throw an",
    "start": "827399",
    "end": "829380"
  },
  {
    "text": "error to stop iterating",
    "start": "829380",
    "end": "831600"
  },
  {
    "text": "just I mean it seems weird right can we",
    "start": "831600",
    "end": "833820"
  },
  {
    "text": "agree that is a little it's just a",
    "start": "833820",
    "end": "835620"
  },
  {
    "text": "little weird you know it's a little",
    "start": "835620",
    "end": "836760"
  },
  {
    "text": "weird I'm just saying it's a little",
    "start": "836760",
    "end": "838079"
  },
  {
    "text": "weird Okay stop iterating is uh crucial",
    "start": "838079",
    "end": "841019"
  },
  {
    "text": "in Python yeah I know but it's still",
    "start": "841019",
    "end": "842579"
  },
  {
    "text": "it's weird",
    "start": "842579",
    "end": "844860"
  },
  {
    "text": "how do I get into Netflix as a software",
    "start": "844860",
    "end": "848220"
  },
  {
    "text": "and darn um",
    "start": "848220",
    "end": "849920"
  },
  {
    "text": "and iterate through it with the in",
    "start": "849920",
    "end": "852060"
  },
  {
    "text": "keyword this is a much more simple",
    "start": "852060",
    "end": "853800"
  },
  {
    "text": "interface than having to actually update",
    "start": "853800",
    "end": "855720"
  },
  {
    "text": "pointers ourselves now if you want to",
    "start": "855720",
    "end": "857820"
  },
  {
    "text": "modify or extend the behavior of a class",
    "start": "857820",
    "end": "859740"
  },
  {
    "text": "without directly changing it you can go",
    "start": "859740",
    "end": "862019"
  },
  {
    "start": "860000",
    "end": "970000"
  },
  {
    "text": "with the strategy pattern for example we",
    "start": "862019",
    "end": "864180"
  },
  {
    "text": "can stretch pattern always just always",
    "start": "864180",
    "end": "866760"
  },
  {
    "text": "use the strategy pattern okay just just",
    "start": "866760",
    "end": "868320"
  },
  {
    "text": "add everything's a strategy pattern",
    "start": "868320",
    "end": "869700"
  },
  {
    "text": "that's all strategy pattern is just",
    "start": "869700",
    "end": "871920"
  },
  {
    "text": "fancy talk for using interface you dummy",
    "start": "871920",
    "end": "874200"
  },
  {
    "text": "you can filter an array by removing",
    "start": "874200",
    "end": "876420"
  },
  {
    "text": "positive values or we could filter it by",
    "start": "876420",
    "end": "878639"
  },
  {
    "text": "removing all odd values these are two",
    "start": "878639",
    "end": "881100"
  },
  {
    "text": "strategies but maybe in the future we",
    "start": "881100",
    "end": "882839"
  },
  {
    "text": "want to add more and we want to follow",
    "start": "882839",
    "end": "884699"
  },
  {
    "text": "the open closed principle well we can",
    "start": "884699",
    "end": "887220"
  },
  {
    "text": "define a filter strategy create an",
    "start": "887220",
    "end": "889740"
  },
  {
    "text": "implementation which will remove all",
    "start": "889740",
    "end": "891540"
  },
  {
    "text": "negative values and an implementation",
    "start": "891540",
    "end": "893459"
  },
  {
    "text": "which will remove all odd values and",
    "start": "893459",
    "end": "895980"
  },
  {
    "text": "then at run time we can pass this",
    "start": "895980",
    "end": "898079"
  },
  {
    "text": "strategy into our values object and to",
    "start": "898079",
    "end": "900839"
  },
  {
    "text": "test it out all we have to do is pass in",
    "start": "900839",
    "end": "903060"
  },
  {
    "text": "the strategy into our filter method and",
    "start": "903060",
    "end": "905279"
  },
  {
    "text": "we'll get our desired result this way we",
    "start": "905279",
    "end": "907500"
  },
  {
    "text": "I use this exactly like I literally use",
    "start": "907500",
    "end": "909420"
  },
  {
    "text": "this exact same thing so I had to create",
    "start": "909420",
    "end": "910920"
  },
  {
    "text": "uh so at Netflix I'm doing this whole",
    "start": "910920",
    "end": "913079"
  },
  {
    "text": "like Performance Audio Video thing that",
    "start": "913079",
    "end": "915300"
  },
  {
    "text": "I've been kind of talking about and when",
    "start": "915300",
    "end": "917160"
  },
  {
    "text": "I'm building up some of the data stuff",
    "start": "917160",
    "end": "918740"
  },
  {
    "text": "there's some values that as I build it",
    "start": "918740",
    "end": "921600"
  },
  {
    "text": "up row by row I need to use the previous",
    "start": "921600",
    "end": "924300"
  },
  {
    "text": "value uh",
    "start": "924300",
    "end": "926519"
  },
  {
    "text": "but there's other that I need to only",
    "start": "926519",
    "end": "929040"
  },
  {
    "text": "use the values that happened within that",
    "start": "929040",
    "end": "930839"
  },
  {
    "text": "specific time span and so what I did is",
    "start": "930839",
    "end": "933300"
  },
  {
    "text": "I created an emitter right so I have a",
    "start": "933300",
    "end": "935880"
  },
  {
    "text": "continuous emitter one that always emits",
    "start": "935880",
    "end": "938220"
  },
  {
    "text": "the previous value and then I have a",
    "start": "938220",
    "end": "940440"
  },
  {
    "text": "counter emitter so that as time passes I",
    "start": "940440",
    "end": "943019"
  },
  {
    "text": "only emit at that point what I saw at",
    "start": "943019",
    "end": "945480"
  },
  {
    "text": "Netflix of course by the way I work at",
    "start": "945480",
    "end": "946920"
  },
  {
    "text": "Netflix I don't know if you know that",
    "start": "946920",
    "end": "948660"
  },
  {
    "text": "you can add so like",
    "start": "948660",
    "end": "950540"
  },
  {
    "text": "modifying you don't even have to you",
    "start": "950540",
    "end": "952260"
  },
  {
    "text": "don't even have to like oop to love",
    "start": "952260",
    "end": "953699"
  },
  {
    "text": "strategy pattern strategy pattern is",
    "start": "953699",
    "end": "955199"
  },
  {
    "text": "it's just make the thing into an",
    "start": "955199",
    "end": "957240"
  },
  {
    "text": "interface and do the logic below the",
    "start": "957240",
    "end": "959639"
  },
  {
    "text": "interface program at an interface level",
    "start": "959639",
    "end": "961500"
  },
  {
    "text": "that's all strategy pattern is",
    "start": "961500",
    "end": "963120"
  },
  {
    "text": "programming interface level oh Netflix",
    "start": "963120",
    "end": "964800"
  },
  {
    "text": "you must get a free subscription shut up",
    "start": "964800",
    "end": "966600"
  },
  {
    "text": "we don't talk about",
    "start": "966600",
    "end": "968360"
  },
  {
    "text": "next we have the adapter our first",
    "start": "968360",
    "end": "971279"
  },
  {
    "start": "970000",
    "end": "1075000"
  },
  {
    "text": "structural adapter pattern what I like",
    "start": "971279",
    "end": "973079"
  },
  {
    "text": "to recall the lose your hair slowly",
    "start": "973079",
    "end": "974880"
  },
  {
    "text": "pattern roll pattern it's analogous to",
    "start": "974880",
    "end": "977339"
  },
  {
    "text": "the real world where we have a screw",
    "start": "977339",
    "end": "979079"
  },
  {
    "text": "that's too small to fit into a hole",
    "start": "979079",
    "end": "982680"
  },
  {
    "text": "we we've all we've all felt this problem",
    "start": "982680",
    "end": "985680"
  },
  {
    "text": "okay you know a lot of",
    "start": "985680",
    "end": "988139"
  },
  {
    "text": "a lot of us you know we're just trying",
    "start": "988139",
    "end": "990959"
  },
  {
    "text": "to uh",
    "start": "990959",
    "end": "992519"
  },
  {
    "text": "you know we're just trying to live our",
    "start": "992519",
    "end": "993899"
  },
  {
    "text": "life",
    "start": "993899",
    "end": "994680"
  },
  {
    "text": "you know it's not my fault",
    "start": "994680",
    "end": "997940"
  },
  {
    "text": "so instead we use an adapter which makes",
    "start": "999120",
    "end": "1001759"
  },
  {
    "text": "the screw compatible with the hole or",
    "start": "1001759",
    "end": "1004519"
  },
  {
    "text": "maybe an example",
    "start": "1004519",
    "end": "1007180"
  },
  {
    "text": "did he just passed out the the sexy",
    "start": "1008540",
    "end": "1011000"
  },
  {
    "text": "Saxman at the end okay well I'm happy",
    "start": "1011000",
    "end": "1013399"
  },
  {
    "text": "that uh well I'm glad I'm very happy",
    "start": "1013399",
    "end": "1016220"
  },
  {
    "text": "that he leaned into that one that was",
    "start": "1016220",
    "end": "1017720"
  },
  {
    "text": "good no one can be upset about that",
    "start": "1017720",
    "end": "1021699"
  },
  {
    "text": "oh that's a lot of water no wonder I",
    "start": "1021699",
    "end": "1023899"
  },
  {
    "text": "keep peeing",
    "start": "1023899",
    "end": "1024980"
  },
  {
    "text": "I know I can't believe that can't",
    "start": "1024980",
    "end": "1026660"
  },
  {
    "text": "believe there'd be a sexy time joke here",
    "start": "1026660",
    "end": "1028160"
  },
  {
    "text": "people that you're more familiar with we",
    "start": "1028160",
    "end": "1030260"
  },
  {
    "text": "have a USB cable and a USB port we can",
    "start": "1030260",
    "end": "1033380"
  },
  {
    "text": "plug in the USB cable which will",
    "start": "1033380",
    "end": "1035480"
  },
  {
    "text": "directly fit into the port but instead",
    "start": "1035480",
    "end": "1037760"
  },
  {
    "text": "if we have a micro USB cable it's not",
    "start": "1037760",
    "end": "1040459"
  },
  {
    "text": "again okay just because",
    "start": "1040459",
    "end": "1043160"
  },
  {
    "text": "compatible so instead we need a micro to",
    "start": "1043160",
    "end": "1046040"
  },
  {
    "text": "USB adapter which extends from the USB",
    "start": "1046040",
    "end": "1049220"
  },
  {
    "text": "clasp but is composed of a micro USB",
    "start": "1049220",
    "end": "1052280"
  },
  {
    "text": "cable which will be plugged into the",
    "start": "1052280",
    "end": "1054380"
  },
  {
    "text": "adapter we can override the plug USB",
    "start": "1054380",
    "end": "1056900"
  },
  {
    "text": "method from our parent class if needed",
    "start": "1056900",
    "end": "1058820"
  },
  {
    "text": "but it's not in this case and then we",
    "start": "1058820",
    "end": "1060799"
  },
  {
    "text": "can plug our micro USB cable into the",
    "start": "1060799",
    "end": "1063140"
  },
  {
    "text": "adapter and then plug it into the port",
    "start": "1063140",
    "end": "1065240"
  },
  {
    "text": "and it works just like a this is pretty",
    "start": "1065240",
    "end": "1067820"
  },
  {
    "text": "much this is just pretty much the",
    "start": "1067820",
    "end": "1069200"
  },
  {
    "text": "strategy pattern again right adapter",
    "start": "1069200",
    "end": "1070880"
  },
  {
    "text": "pattern is just the application of a",
    "start": "1070880",
    "end": "1072200"
  },
  {
    "text": "strategy pattern thought is is that yeah",
    "start": "1072200",
    "end": "1075559"
  },
  {
    "start": "1075000",
    "end": "1329000"
  },
  {
    "text": "regular USB cable and our last pattern",
    "start": "1075559",
    "end": "1078559"
  },
  {
    "text": "is the facade according to the",
    "start": "1078559",
    "end": "1080419"
  },
  {
    "text": "dictionary so facade pattern",
    "start": "1080419",
    "end": "1083059"
  },
  {
    "text": "um",
    "start": "1083059",
    "end": "1083660"
  },
  {
    "text": "the facade pattern is actually",
    "start": "1083660",
    "end": "1087320"
  },
  {
    "text": "okay so remember that whole like types",
    "start": "1087320",
    "end": "1089240"
  },
  {
    "text": "definition argument that we went over",
    "start": "1089240",
    "end": "1090860"
  },
  {
    "text": "the whole return types and all that",
    "start": "1090860",
    "end": "1093080"
  },
  {
    "text": "in Theo's video one of the reasons why I",
    "start": "1093080",
    "end": "1096500"
  },
  {
    "text": "love return types is that you can",
    "start": "1096500",
    "end": "1098059"
  },
  {
    "text": "actually facade it and this is really",
    "start": "1098059",
    "end": "1100760"
  },
  {
    "text": "important it's not facade",
    "start": "1100760",
    "end": "1102919"
  },
  {
    "text": "it's not for Kate or however you're",
    "start": "1102919",
    "end": "1104900"
  },
  {
    "text": "saying it's it's facade uh",
    "start": "1104900",
    "end": "1107660"
  },
  {
    "text": "and so I actually like the facade",
    "start": "1107660",
    "end": "1110360"
  },
  {
    "text": "pattern the facade facade is just",
    "start": "1110360",
    "end": "1112039"
  },
  {
    "text": "encapsulation facade is just like a",
    "start": "1112039",
    "end": "1114140"
  },
  {
    "text": "fancy ass word for simple simple",
    "start": "1114140",
    "end": "1117020"
  },
  {
    "text": "right it's interface again it always",
    "start": "1117020",
    "end": "1119120"
  },
  {
    "text": "just comes down to interfaces this is",
    "start": "1119120",
    "end": "1120620"
  },
  {
    "text": "just facade these nuts it's just simply",
    "start": "1120620",
    "end": "1124179"
  },
  {
    "text": "make an interface and not all interfaces",
    "start": "1124179",
    "end": "1127520"
  },
  {
    "text": "need to be equal",
    "start": "1127520",
    "end": "1129380"
  },
  {
    "text": "okay",
    "start": "1129380",
    "end": "1131860"
  },
  {
    "text": "a facade is an outward appearance that",
    "start": "1131960",
    "end": "1134539"
  },
  {
    "text": "is maintained to conceal a Less Pleasant",
    "start": "1134539",
    "end": "1137120"
  },
  {
    "text": "or credible reality in the programming",
    "start": "1137120",
    "end": "1139460"
  },
  {
    "text": "world the outward appearance is the",
    "start": "1139460",
    "end": "1141440"
  },
  {
    "text": "class or interface we interact with as",
    "start": "1141440",
    "end": "1143720"
  },
  {
    "text": "programmers and the Less Pleasant",
    "start": "1143720",
    "end": "1145520"
  },
  {
    "text": "reality is hopefully the complexity that",
    "start": "1145520",
    "end": "1148160"
  },
  {
    "text": "is hidden from us so a facade is simply",
    "start": "1148160",
    "end": "1150559"
  },
  {
    "text": "a wrapper class that can be used to",
    "start": "1150559",
    "end": "1152480"
  },
  {
    "text": "abstract lower level details that we",
    "start": "1152480",
    "end": "1154760"
  },
  {
    "text": "don't want to have to worry about I'm",
    "start": "1154760",
    "end": "1156380"
  },
  {
    "text": "surprised it even qualifies as a design",
    "start": "1156380",
    "end": "1158299"
  },
  {
    "text": "pattern but some common examples might",
    "start": "1158299",
    "end": "1160340"
  },
  {
    "text": "include HTTP clients that abstract away",
    "start": "1160340",
    "end": "1163280"
  },
  {
    "text": "low level networks this is perfect this",
    "start": "1163280",
    "end": "1165200"
  },
  {
    "text": "is a perfect example you know that like",
    "start": "1165200",
    "end": "1167000"
  },
  {
    "text": "again I the problem about the facade",
    "start": "1167000",
    "end": "1169220"
  },
  {
    "text": "pattern is it's not necessarily a",
    "start": "1169220",
    "end": "1171080"
  },
  {
    "text": "pattern as much as it is just good",
    "start": "1171080",
    "end": "1174320"
  },
  {
    "text": "programming technique because because",
    "start": "1174320",
    "end": "1176000"
  },
  {
    "text": "the thing is is that you can't really",
    "start": "1176000",
    "end": "1177380"
  },
  {
    "text": "the thing about like the the strategy",
    "start": "1177380",
    "end": "1180620"
  },
  {
    "text": "pattern is that there's like there's a",
    "start": "1180620",
    "end": "1182720"
  },
  {
    "text": "there is an inherent thing you can apply",
    "start": "1182720",
    "end": "1184520"
  },
  {
    "text": "it to you can inherently apply the",
    "start": "1184520",
    "end": "1187760"
  },
  {
    "text": "Observer pattern you can inherently",
    "start": "1187760",
    "end": "1189500"
  },
  {
    "text": "apply the Singleton pattern this one you",
    "start": "1189500",
    "end": "1191660"
  },
  {
    "text": "can't just apply because there's no",
    "start": "1191660",
    "end": "1193220"
  },
  {
    "text": "actual application it's just like you",
    "start": "1193220",
    "end": "1195799"
  },
  {
    "text": "take a bunch of stuff and you make it",
    "start": "1195799",
    "end": "1197780"
  },
  {
    "text": "into a method for doing a thing",
    "start": "1197780",
    "end": "1199400"
  },
  {
    "text": "everything's a everything's a facade",
    "start": "1199400",
    "end": "1201620"
  },
  {
    "text": "exactly uh and so that's like part of",
    "start": "1201620",
    "end": "1205039"
  },
  {
    "text": "the the problem with this pattern is",
    "start": "1205039",
    "end": "1206660"
  },
  {
    "text": "that there's no concrete application of",
    "start": "1206660",
    "end": "1209960"
  },
  {
    "text": "it you don't know a good programmer uses",
    "start": "1209960",
    "end": "1212780"
  },
  {
    "text": "it a bad programmer uses it a good",
    "start": "1212780",
    "end": "1214940"
  },
  {
    "text": "programmer just uses it better than a",
    "start": "1214940",
    "end": "1217580"
  },
  {
    "text": "bad programmer uses it a facade pattern",
    "start": "1217580",
    "end": "1220160"
  },
  {
    "text": "doesn't even have to be an extension of",
    "start": "1220160",
    "end": "1221600"
  },
  {
    "text": "uh oh oh it's just an extension of good",
    "start": "1221600",
    "end": "1224120"
  },
  {
    "text": "programming you can take any anything",
    "start": "1224120",
    "end": "1226640"
  },
  {
    "text": "that you can hide information and you",
    "start": "1226640",
    "end": "1228799"
  },
  {
    "text": "can have private implementation",
    "start": "1228799",
    "end": "1230140"
  },
  {
    "text": "implementation details and external ways",
    "start": "1230140",
    "end": "1232640"
  },
  {
    "text": "to call it a server you can imagine a",
    "start": "1232640",
    "end": "1234919"
  },
  {
    "text": "server is still is a facade a crud",
    "start": "1234919",
    "end": "1237679"
  },
  {
    "text": "application is a facade you don't have",
    "start": "1237679",
    "end": "1239600"
  },
  {
    "text": "to know the squeal uh query to go do",
    "start": "1239600",
    "end": "1242120"
  },
  {
    "text": "whatever you're doing you're just",
    "start": "1242120",
    "end": "1243320"
  },
  {
    "text": "calling a simple endpoint it's just a",
    "start": "1243320",
    "end": "1246559"
  },
  {
    "text": "it's just an abstraction that makes",
    "start": "1246559",
    "end": "1248000"
  },
  {
    "text": "something simpler quote unquote simpler",
    "start": "1248000",
    "end": "1249860"
  },
  {
    "text": "but the problem is is once you add",
    "start": "1249860",
    "end": "1251179"
  },
  {
    "text": "enough abstractions you actually remake",
    "start": "1251179",
    "end": "1252679"
  },
  {
    "text": "it complicated again facade pattern is",
    "start": "1252679",
    "end": "1254480"
  },
  {
    "text": "both the best thing in the universe and",
    "start": "1254480",
    "end": "1255860"
  },
  {
    "text": "the literal worst thing in the universe",
    "start": "1255860",
    "end": "1257500"
  },
  {
    "text": "details or even arrays yes a dynamic",
    "start": "1257500",
    "end": "1260960"
  },
  {
    "text": "array like vectors and C plus plus or",
    "start": "1260960",
    "end": "1263419"
  },
  {
    "text": "array lists in Java are constantly being",
    "start": "1263419",
    "end": "1266059"
  },
  {
    "text": "resized under the hood thankfully as",
    "start": "1266059",
    "end": "1268580"
  },
  {
    "text": "programmers we rarely have to think",
    "start": "1268580",
    "end": "1270260"
  },
  {
    "text": "about memory allocation though if you're",
    "start": "1270260",
    "end": "1272360"
  },
  {
    "text": "interested to learn more check out my",
    "start": "1272360",
    "end": "1274039"
  },
  {
    "text": "newly released object-oriented design",
    "start": "1274039",
    "end": "1275960"
  },
  {
    "text": "interview course we talk this is great",
    "start": "1275960",
    "end": "1278240"
  },
  {
    "text": "this is fantastic check out his object",
    "start": "1278240",
    "end": "1280400"
  },
  {
    "text": "oriented design interview course uh",
    "start": "1280400",
    "end": "1282380"
  },
  {
    "text": "actually it's probably not a bad idea",
    "start": "1282380",
    "end": "1283760"
  },
  {
    "text": "everyone should learn how to think in",
    "start": "1283760",
    "end": "1285559"
  },
  {
    "text": "object oriented programming for a moment",
    "start": "1285559",
    "end": "1287179"
  },
  {
    "text": "just to see how some people structurally",
    "start": "1287179",
    "end": "1289640"
  },
  {
    "text": "set it up and it can also make things",
    "start": "1289640",
    "end": "1291260"
  },
  {
    "text": "drawing on a whiteboard really clear and",
    "start": "1291260",
    "end": "1293600"
  },
  {
    "text": "so often this is just how we naturally",
    "start": "1293600",
    "end": "1295220"
  },
  {
    "text": "think uh despite it actually being what",
    "start": "1295220",
    "end": "1298460"
  },
  {
    "text": "is good to program",
    "start": "1298460",
    "end": "1300380"
  },
  {
    "text": "you know how funny it is it's funny how",
    "start": "1300380",
    "end": "1302480"
  },
  {
    "text": "that can it's funny how that can be is",
    "start": "1302480",
    "end": "1304100"
  },
  {
    "text": "that a way we think is not necessarily",
    "start": "1304100",
    "end": "1306380"
  },
  {
    "text": "like the naturally best way thoughts on",
    "start": "1306380",
    "end": "1308419"
  },
  {
    "text": "functional options I think functional",
    "start": "1308419",
    "end": "1309740"
  },
  {
    "text": "you know there's some things about",
    "start": "1309740",
    "end": "1310520"
  },
  {
    "text": "functionalism that's great uh",
    "start": "1310520",
    "end": "1313460"
  },
  {
    "text": "private dang I missed it uh will this be",
    "start": "1313460",
    "end": "1315380"
  },
  {
    "text": "on YouTube yeah this is great uh go",
    "start": "1315380",
    "end": "1317900"
  },
  {
    "text": "check out neat code I thought this was",
    "start": "1317900",
    "end": "1319400"
  },
  {
    "text": "great he did a great job went right over",
    "start": "1319400",
    "end": "1320960"
  },
  {
    "text": "everything",
    "start": "1320960",
    "end": "1322340"
  },
  {
    "text": "fantastic great video really appreciated",
    "start": "1322340",
    "end": "1325100"
  },
  {
    "text": "this one uh uh by the way I work at",
    "start": "1325100",
    "end": "1327620"
  },
  {
    "text": "Netflix if you don't know that",
    "start": "1327620",
    "end": "1330700"
  }
]