[
  {
    "text": "the command center less is exponentially",
    "start": "0",
    "end": "3780"
  },
  {
    "text": "more I assume this is a talk about go I",
    "start": "3780",
    "end": "6000"
  },
  {
    "text": "can just I feel it I feel this is about",
    "start": "6000",
    "end": "8340"
  },
  {
    "text": "go by the way I my my shaver broke if",
    "start": "8340",
    "end": "11400"
  },
  {
    "text": "you're wondering why I'm turning into a",
    "start": "11400",
    "end": "12900"
  },
  {
    "text": "bearded man I don't know what to do with",
    "start": "12900",
    "end": "14460"
  },
  {
    "text": "my life okay I I want to have a mustache",
    "start": "14460",
    "end": "16859"
  },
  {
    "text": "but I literally have no availability to",
    "start": "16859",
    "end": "18900"
  },
  {
    "text": "have a mustache here is the text of a",
    "start": "18900",
    "end": "21060"
  },
  {
    "text": "talk I gave at the Go SF meeting in June",
    "start": "21060",
    "end": "23640"
  },
  {
    "text": "2012. this is a personal talk I do not",
    "start": "23640",
    "end": "26100"
  },
  {
    "text": "speak for anyone else on the go team",
    "start": "26100",
    "end": "28140"
  },
  {
    "text": "here although I want to acknowledge",
    "start": "28140",
    "end": "29820"
  },
  {
    "text": "right up front that the team is what",
    "start": "29820",
    "end": "31740"
  },
  {
    "text": "made and continues to make it go happen",
    "start": "31740",
    "end": "33480"
  },
  {
    "text": "I'd also like to thank the go SF",
    "start": "33480",
    "end": "35520"
  },
  {
    "text": "organizers for giving me the opportunity",
    "start": "35520",
    "end": "37140"
  },
  {
    "text": "to talk to you I was asked a few weeks",
    "start": "37140",
    "end": "39480"
  },
  {
    "text": "ago what was the biggest surprise you",
    "start": "39480",
    "end": "41160"
  },
  {
    "text": "encountered rolling out uh ago I knew",
    "start": "41160",
    "end": "44280"
  },
  {
    "text": "the answers instant instantly although",
    "start": "44280",
    "end": "46739"
  },
  {
    "text": "we expected C plus plus programmers to",
    "start": "46739",
    "end": "48840"
  },
  {
    "text": "see go was an alternative instead most",
    "start": "48840",
    "end": "51600"
  },
  {
    "text": "go programmers came from languages like",
    "start": "51600",
    "end": "53219"
  },
  {
    "text": "Python and Ruby very few can uh come",
    "start": "53219",
    "end": "56820"
  },
  {
    "text": "from C plus",
    "start": "56820",
    "end": "58559"
  },
  {
    "text": "interesting their original goal was C",
    "start": "58559",
    "end": "60480"
  },
  {
    "text": "plus plus",
    "start": "60480",
    "end": "62640"
  },
  {
    "text": "huh I wouldn't have expected that I",
    "start": "62640",
    "end": "64920"
  },
  {
    "text": "actually thought it was python I I",
    "start": "64920",
    "end": "66360"
  },
  {
    "text": "genuinely thought python was the target",
    "start": "66360",
    "end": "68280"
  },
  {
    "text": "market they were going for because go",
    "start": "68280",
    "end": "69960"
  },
  {
    "text": "has this like",
    "start": "69960",
    "end": "71299"
  },
  {
    "text": "python-esque feel to it and it just",
    "start": "71299",
    "end": "73560"
  },
  {
    "text": "feels like a natural transition you know",
    "start": "73560",
    "end": "75840"
  },
  {
    "text": "what I mean wrong I would have I",
    "start": "75840",
    "end": "78060"
  },
  {
    "text": "literally would have never guessed that",
    "start": "78060",
    "end": "80040"
  },
  {
    "text": "um all right we Ken Robert and myself",
    "start": "80040",
    "end": "82560"
  },
  {
    "text": "were C plus programmers when uh when we",
    "start": "82560",
    "end": "85080"
  },
  {
    "text": "designed a new language to solve the",
    "start": "85080",
    "end": "86700"
  },
  {
    "text": "problems that we thought needed to be",
    "start": "86700",
    "end": "88200"
  },
  {
    "text": "solved for the kind of software we wrote",
    "start": "88200",
    "end": "90360"
  },
  {
    "text": "it seems almost a paradoxical that other",
    "start": "90360",
    "end": "92880"
  },
  {
    "text": "C plus programmers don't seem to care",
    "start": "92880",
    "end": "94860"
  },
  {
    "text": "this is hilarious",
    "start": "94860",
    "end": "96900"
  },
  {
    "text": "really",
    "start": "96900",
    "end": "98460"
  },
  {
    "text": "this is so good they wrote a language",
    "start": "98460",
    "end": "102540"
  },
  {
    "text": "solving problems of the language they're",
    "start": "102540",
    "end": "105600"
  },
  {
    "text": "used to and then no one else agreed with",
    "start": "105600",
    "end": "107939"
  },
  {
    "text": "them",
    "start": "107939",
    "end": "109159"
  },
  {
    "text": "oh dude a hot take that's because people",
    "start": "109159",
    "end": "111600"
  },
  {
    "text": "who program C plus plus like to program",
    "start": "111600",
    "end": "113280"
  },
  {
    "text": "C plus plus they're kind of like",
    "start": "113280",
    "end": "114840"
  },
  {
    "text": "wrestlings right I don't think people",
    "start": "114840",
    "end": "117000"
  },
  {
    "text": "that love rust could go to another",
    "start": "117000",
    "end": "118439"
  },
  {
    "text": "language right they're kind of like",
    "start": "118439",
    "end": "119880"
  },
  {
    "text": "sucked into the rust hole and I feel",
    "start": "119880",
    "end": "122220"
  },
  {
    "text": "like C plus plus is kind of that you",
    "start": "122220",
    "end": "123840"
  },
  {
    "text": "have to like you have to copy I'm super",
    "start": "123840",
    "end": "126299"
  },
  {
    "text": "hard to really love the language don't",
    "start": "126299",
    "end": "128640"
  },
  {
    "text": "worry I have copy I'm tired myself okay",
    "start": "128640",
    "end": "130380"
  },
  {
    "text": "and uh and there comes a point where",
    "start": "130380",
    "end": "133080"
  },
  {
    "text": "once you have that hammer and you're",
    "start": "133080",
    "end": "134940"
  },
  {
    "text": "really good with the hammer you can do",
    "start": "134940",
    "end": "136319"
  },
  {
    "text": "anything oh camel by the way is the",
    "start": "136319",
    "end": "138180"
  },
  {
    "text": "greatest language ever created even",
    "start": "138180",
    "end": "139560"
  },
  {
    "text": "though I haven't done a lot I actually",
    "start": "139560",
    "end": "140459"
  },
  {
    "text": "have an opportunity to do some language",
    "start": "140459",
    "end": "142020"
  },
  {
    "text": "server stuff for my job maybe and I I",
    "start": "142020",
    "end": "145020"
  },
  {
    "text": "want to explore what is the best",
    "start": "145020",
    "end": "146760"
  },
  {
    "text": "language to write out that it'll",
    "start": "146760",
    "end": "148080"
  },
  {
    "text": "probably end up being in Rust but it",
    "start": "148080",
    "end": "149580"
  },
  {
    "text": "would be really fun to uh consider go or",
    "start": "149580",
    "end": "152640"
  },
  {
    "text": "uh oh camel uh the answer can be",
    "start": "152640",
    "end": "154800"
  },
  {
    "text": "summarized like this do you uh think",
    "start": "154800",
    "end": "156420"
  },
  {
    "text": "less is more or less is less here's a",
    "start": "156420",
    "end": "159120"
  },
  {
    "text": "metaphor in the form of a true story",
    "start": "159120",
    "end": "160620"
  },
  {
    "text": "Bell lab centers were originally",
    "start": "160620",
    "end": "162900"
  },
  {
    "text": "assigned three letter numbers one one",
    "start": "162900",
    "end": "164640"
  },
  {
    "text": "for physical research one two seven for",
    "start": "164640",
    "end": "166920"
  },
  {
    "text": "computing research or Computing science",
    "start": "166920",
    "end": "168599"
  },
  {
    "text": "research and so on in the early 1980s a",
    "start": "168599",
    "end": "171900"
  },
  {
    "text": "memo came around announcing that all the",
    "start": "171900",
    "end": "173459"
  },
  {
    "text": "understanding of research had grown and",
    "start": "173459",
    "end": "175319"
  },
  {
    "text": "had become necessary to add another",
    "start": "175319",
    "end": "176580"
  },
  {
    "text": "digit so we could better characterize",
    "start": "176580",
    "end": "178080"
  },
  {
    "text": "our work so our Center became one one",
    "start": "178080",
    "end": "180720"
  },
  {
    "text": "two seven",
    "start": "180720",
    "end": "181800"
  },
  {
    "text": "Ron Hardin joked half seriously that if",
    "start": "181800",
    "end": "184379"
  },
  {
    "text": "we understood our world better we could",
    "start": "184379",
    "end": "186540"
  },
  {
    "text": "drop a digit and go down uh from one to",
    "start": "186540",
    "end": "189239"
  },
  {
    "text": "seven to just to seven",
    "start": "189239",
    "end": "191760"
  },
  {
    "text": "oh that is super good I like that of",
    "start": "191760",
    "end": "194879"
  },
  {
    "text": "course management didn't get the joke",
    "start": "194879",
    "end": "196200"
  },
  {
    "text": "nor were they expected to got him stupid",
    "start": "196200",
    "end": "199920"
  },
  {
    "text": "management but I think there was wisdom",
    "start": "199920",
    "end": "202080"
  },
  {
    "text": "in it less can be more the better you",
    "start": "202080",
    "end": "204360"
  },
  {
    "text": "understand the pithier you be you can be",
    "start": "204360",
    "end": "207420"
  },
  {
    "text": "the best here you can be",
    "start": "207420",
    "end": "209879"
  },
  {
    "text": "um keep that in mind okay I like this I",
    "start": "209879",
    "end": "212159"
  },
  {
    "text": "like I I love this philosophy right I",
    "start": "212159",
    "end": "214920"
  },
  {
    "text": "actually really do like this philosophy",
    "start": "214920",
    "end": "216300"
  },
  {
    "text": "back around September 20 uh or back",
    "start": "216300",
    "end": "219840"
  },
  {
    "text": "September uh 2007 uh I was doing some",
    "start": "219840",
    "end": "222900"
  },
  {
    "text": "minor But Central work on an enormous go",
    "start": "222900",
    "end": "225360"
  },
  {
    "text": "C plus plus program one you've all",
    "start": "225360",
    "end": "228000"
  },
  {
    "text": "interacted with and my compilations were",
    "start": "228000",
    "end": "229860"
  },
  {
    "text": "taken about 45 minutes on our huge",
    "start": "229860",
    "end": "231900"
  },
  {
    "text": "distributed compiler cluster",
    "start": "231900",
    "end": "234000"
  },
  {
    "text": "she an announcement came around that",
    "start": "234000",
    "end": "236640"
  },
  {
    "text": "there are going to be a talk presented",
    "start": "236640",
    "end": "238379"
  },
  {
    "text": "by a couple of Google employees uh",
    "start": "238379",
    "end": "240720"
  },
  {
    "text": "serving on the C plus standard committee",
    "start": "240720",
    "end": "242819"
  },
  {
    "text": "they're going to tell us on what was",
    "start": "242819",
    "end": "245099"
  },
  {
    "text": "coming up with a zero plus yeah yeah",
    "start": "245099",
    "end": "247500"
  },
  {
    "text": "right",
    "start": "247500",
    "end": "248640"
  },
  {
    "text": "um as it was called at the time it's now",
    "start": "248640",
    "end": "250200"
  },
  {
    "text": "known as C plus plus 11. oh damn this",
    "start": "250200",
    "end": "252180"
  },
  {
    "text": "was pre-c plus plus 11. ew well I mean",
    "start": "252180",
    "end": "255540"
  },
  {
    "text": "obviously it's pretty pretty but either",
    "start": "255540",
    "end": "257579"
  },
  {
    "text": "way see before C plus plus 11 C plus",
    "start": "257579",
    "end": "260340"
  },
  {
    "text": "plus was really just I feel like at",
    "start": "260340",
    "end": "263340"
  },
  {
    "text": "least with you got like some smart",
    "start": "263340",
    "end": "264540"
  },
  {
    "text": "pointers and stuff in there uh but I",
    "start": "264540",
    "end": "266280"
  },
  {
    "text": "guess they probably used boost and they",
    "start": "266280",
    "end": "267300"
  },
  {
    "text": "had all the all the things they ever",
    "start": "267300",
    "end": "268560"
  },
  {
    "text": "needed uh in the span of an hour at the",
    "start": "268560",
    "end": "271020"
  },
  {
    "text": "Taco oh we heard something like 35 new",
    "start": "271020",
    "end": "273479"
  },
  {
    "text": "features that were being planned in fact",
    "start": "273479",
    "end": "275160"
  },
  {
    "text": "there were many more but only 35",
    "start": "275160",
    "end": "276780"
  },
  {
    "text": "described at the talk some of the",
    "start": "276780",
    "end": "278820"
  },
  {
    "text": "features were minor of course uh but the",
    "start": "278820",
    "end": "280979"
  },
  {
    "text": "ones in the talk were at least",
    "start": "280979",
    "end": "282060"
  },
  {
    "text": "significant enough to call out some were",
    "start": "282060",
    "end": "284040"
  },
  {
    "text": "very subtle and hard to understand like",
    "start": "284040",
    "end": "285900"
  },
  {
    "text": "our value references still don't",
    "start": "285900",
    "end": "287759"
  },
  {
    "text": "understand it the others were especially",
    "start": "287759",
    "end": "289620"
  },
  {
    "text": "the C plus plus like like variatic",
    "start": "289620",
    "end": "291479"
  },
  {
    "text": "templates and some others that are just",
    "start": "291479",
    "end": "293220"
  },
  {
    "text": "crazy like user defined literals",
    "start": "293220",
    "end": "296220"
  },
  {
    "text": "cholastic C plus plus what does the",
    "start": "296220",
    "end": "298560"
  },
  {
    "text": "world need more features",
    "start": "298560",
    "end": "301740"
  },
  {
    "text": "features will continue until morale",
    "start": "301740",
    "end": "304440"
  },
  {
    "text": "improves",
    "start": "304440",
    "end": "306479"
  },
  {
    "text": "that is that is a that is literally it",
    "start": "306479",
    "end": "310500"
  },
  {
    "text": "I'm tweeting it uh C plus plus uh uh a",
    "start": "310500",
    "end": "315240"
  },
  {
    "text": "lang designer",
    "start": "315240",
    "end": "316740"
  },
  {
    "text": "uh features oh we'll continue until",
    "start": "316740",
    "end": "319620"
  },
  {
    "text": "morale improves this feels like a good",
    "start": "319620",
    "end": "323520"
  },
  {
    "text": "this feels like a good tweet I feel like",
    "start": "323520",
    "end": "324960"
  },
  {
    "text": "I could say it better",
    "start": "324960",
    "end": "326520"
  },
  {
    "text": "but we'll keep it there we'll keep it",
    "start": "326520",
    "end": "328320"
  },
  {
    "text": "there you know you don't have you don't",
    "start": "328320",
    "end": "329580"
  },
  {
    "text": "want to overthink tweets right you just",
    "start": "329580",
    "end": "330960"
  },
  {
    "text": "want to have the one that kind of comes",
    "start": "330960",
    "end": "332460"
  },
  {
    "text": "into mind right uh",
    "start": "332460",
    "end": "335400"
  },
  {
    "text": "let's see at this point I uh I asked",
    "start": "335400",
    "end": "338460"
  },
  {
    "text": "myself a question did the C plus plus",
    "start": "338460",
    "end": "339900"
  },
  {
    "text": "committee really believe that uh was",
    "start": "339900",
    "end": "342180"
  },
  {
    "text": "let's see that was wrong with a c plus",
    "start": "342180",
    "end": "344100"
  },
  {
    "text": "was that it didn't have enough features",
    "start": "344100",
    "end": "346740"
  },
  {
    "text": "this was this was almost 20 years ago",
    "start": "346740",
    "end": "349800"
  },
  {
    "text": "how funny this article ages like a fine",
    "start": "349800",
    "end": "353160"
  },
  {
    "text": "wine uh surely in a variant of Ron",
    "start": "353160",
    "end": "356039"
  },
  {
    "text": "hardin's joke it would be a greater",
    "start": "356039",
    "end": "357960"
  },
  {
    "text": "achievement to simplify the language",
    "start": "357960",
    "end": "360000"
  },
  {
    "text": "rather than add to it of course that's",
    "start": "360000",
    "end": "361919"
  },
  {
    "text": "ridiculous but keep the idea in mind",
    "start": "361919",
    "end": "364320"
  },
  {
    "text": "just a few months before that c plus",
    "start": "364320",
    "end": "366840"
  },
  {
    "text": "talk I had given a talk myself on what",
    "start": "366840",
    "end": "369479"
  },
  {
    "text": "you can see on YouTube about a toy",
    "start": "369479",
    "end": "371280"
  },
  {
    "text": "concurrent language I had built way back",
    "start": "371280",
    "end": "372720"
  },
  {
    "text": "in the 1980s that language was called",
    "start": "372720",
    "end": "374759"
  },
  {
    "text": "new squeak oh beautiful uh and of course",
    "start": "374759",
    "end": "378360"
  },
  {
    "text": "it was a precursor to go I gave that",
    "start": "378360",
    "end": "381300"
  },
  {
    "text": "talk because there was there were ideas",
    "start": "381300",
    "end": "383220"
  },
  {
    "text": "in new squeak that I missed in my",
    "start": "383220",
    "end": "385080"
  },
  {
    "text": "current work at Google and I had been",
    "start": "385080",
    "end": "386759"
  },
  {
    "text": "thinking about them again I was",
    "start": "386759",
    "end": "388139"
  },
  {
    "text": "convinced they would make it easier to",
    "start": "388139",
    "end": "389759"
  },
  {
    "text": "write server code and Google could",
    "start": "389759",
    "end": "391319"
  },
  {
    "text": "really benefit from that and I actually",
    "start": "391319",
    "end": "393300"
  },
  {
    "text": "tried and failed to find a way to bring",
    "start": "393300",
    "end": "395280"
  },
  {
    "text": "the ideas to C plus plus really it was",
    "start": "395280",
    "end": "398340"
  },
  {
    "text": "too difficult to couple the concurrent",
    "start": "398340",
    "end": "400139"
  },
  {
    "text": "operations with C pluses control",
    "start": "400139",
    "end": "401940"
  },
  {
    "text": "structures and in turn that made it too",
    "start": "401940",
    "end": "404100"
  },
  {
    "text": "hard to see the real advantages plus C",
    "start": "404100",
    "end": "406139"
  },
  {
    "text": "plus plus just made it all seem too",
    "start": "406139",
    "end": "408000"
  },
  {
    "text": "cumbersome although I admit I was never",
    "start": "408000",
    "end": "410100"
  },
  {
    "text": "truly facile in the language so I",
    "start": "410100",
    "end": "412139"
  },
  {
    "text": "abandoned the idea",
    "start": "412139",
    "end": "413699"
  },
  {
    "text": "I mean this is a cool idea the fact that",
    "start": "413699",
    "end": "415800"
  },
  {
    "text": "he tried to take these good ideas and",
    "start": "415800",
    "end": "417539"
  },
  {
    "text": "then put it into C plus to try to make",
    "start": "417539",
    "end": "419520"
  },
  {
    "text": "it like a you know instead of creating a",
    "start": "419520",
    "end": "421860"
  },
  {
    "text": "new language can you create a library or",
    "start": "421860",
    "end": "423600"
  },
  {
    "text": "something that kind of fits the mold and",
    "start": "423600",
    "end": "425580"
  },
  {
    "text": "does the right thing I mean I I can",
    "start": "425580",
    "end": "427020"
  },
  {
    "text": "appreciate that but the C plus plus hex",
    "start": "427020",
    "end": "429900"
  },
  {
    "text": "talk uh got me thinking again the one",
    "start": "429900",
    "end": "431880"
  },
  {
    "text": "thing that really bothered me and I",
    "start": "431880",
    "end": "433620"
  },
  {
    "text": "think Ken and Robert as well was the new",
    "start": "433620",
    "end": "435660"
  },
  {
    "text": "C plus memory model with atomic types it",
    "start": "435660",
    "end": "438240"
  },
  {
    "text": "just felt wrong to put such",
    "start": "438240",
    "end": "439500"
  },
  {
    "text": "microscopically defined set of details",
    "start": "439500",
    "end": "441599"
  },
  {
    "text": "into an already overburdened type system",
    "start": "441599",
    "end": "443759"
  },
  {
    "text": "it also seemed short-sighted since it's",
    "start": "443759",
    "end": "446220"
  },
  {
    "text": "likely that Hardwell will change",
    "start": "446220",
    "end": "447599"
  },
  {
    "text": "significantly in the next decade and it",
    "start": "447599",
    "end": "449340"
  },
  {
    "text": "would uh it would be unwise to couple",
    "start": "449340",
    "end": "451020"
  },
  {
    "text": "the language too tightly to today's",
    "start": "451020",
    "end": "452340"
  },
  {
    "text": "Hardware Great foresight by the way",
    "start": "452340",
    "end": "454380"
  },
  {
    "text": "right there uh I really like this is",
    "start": "454380",
    "end": "457500"
  },
  {
    "text": "such good wisdom when thinking about",
    "start": "457500",
    "end": "460020"
  },
  {
    "text": "things right like I I know this talk is",
    "start": "460020",
    "end": "462720"
  },
  {
    "text": "is damn near 12 years old at this point",
    "start": "462720",
    "end": "465840"
  },
  {
    "text": "or 11 years old almost on the dot but",
    "start": "465840",
    "end": "470099"
  },
  {
    "text": "it's shocking house it's shocking how",
    "start": "470099",
    "end": "472560"
  },
  {
    "text": "wisdom remains unchanged but ideas can",
    "start": "472560",
    "end": "475199"
  },
  {
    "text": "change quite a bit",
    "start": "475199",
    "end": "476400"
  },
  {
    "text": "it's a beautiful thing all right anyways",
    "start": "476400",
    "end": "478740"
  },
  {
    "text": "uh we returned to our offices after the",
    "start": "478740",
    "end": "481199"
  },
  {
    "text": "talk I started another compilation to",
    "start": "481199",
    "end": "482880"
  },
  {
    "text": "turn to my chair around to face Robert",
    "start": "482880",
    "end": "484199"
  },
  {
    "text": "and started asking pointed questions",
    "start": "484199",
    "end": "485819"
  },
  {
    "text": "before the compilation was done we roped",
    "start": "485819",
    "end": "488160"
  },
  {
    "text": "in Canon and decided to do something",
    "start": "488160",
    "end": "490380"
  },
  {
    "text": "this sounds like every single time I've",
    "start": "490380",
    "end": "492300"
  },
  {
    "text": "compiled a long compilation I get",
    "start": "492300",
    "end": "495060"
  },
  {
    "text": "sidetracked and I just get off and oh",
    "start": "495060",
    "end": "497699"
  },
  {
    "text": "man the race begins right we did not",
    "start": "497699",
    "end": "499919"
  },
  {
    "text": "want to oh we did not want to be writing",
    "start": "499919",
    "end": "502440"
  },
  {
    "text": "C plus plus forever don't blame you I",
    "start": "502440",
    "end": "504660"
  },
  {
    "text": "believe that's called purgatory and we",
    "start": "504660",
    "end": "506460"
  },
  {
    "text": "me especially wanted to have concurrency",
    "start": "506460",
    "end": "508500"
  },
  {
    "text": "at my fingertips when writing uh Google",
    "start": "508500",
    "end": "510539"
  },
  {
    "text": "code we also wanted to address the",
    "start": "510539",
    "end": "512339"
  },
  {
    "text": "problem of programming in in the large",
    "start": "512339",
    "end": "514260"
  },
  {
    "text": "head-on which uh about which more later",
    "start": "514260",
    "end": "516959"
  },
  {
    "text": "okay we wrote on the Whiteboard a bunch",
    "start": "516959",
    "end": "519659"
  },
  {
    "text": "of stuff that we wanted uh",
    "start": "519659",
    "end": "522440"
  },
  {
    "text": "what is this word I don't think I even",
    "start": "522440",
    "end": "524820"
  },
  {
    "text": "know this word desiderata does it",
    "start": "524820",
    "end": "526740"
  },
  {
    "text": "deserterada what is this word I don't",
    "start": "526740",
    "end": "530100"
  },
  {
    "text": "even know it",
    "start": "530100",
    "end": "531600"
  },
  {
    "text": "man this guy is just just",
    "start": "531600",
    "end": "534360"
  },
  {
    "text": "things that are desired it's about life",
    "start": "534360",
    "end": "537120"
  },
  {
    "text": "okay I never read this poem okay well",
    "start": "537120",
    "end": "538920"
  },
  {
    "text": "note to self read that letter uh desert",
    "start": "538920",
    "end": "540959"
  },
  {
    "text": "uh",
    "start": "540959",
    "end": "542180"
  },
  {
    "text": "Desai Desai dirada designer wow that's a",
    "start": "542180",
    "end": "546720"
  },
  {
    "text": "hard word to say I'm sure I I'm sure I",
    "start": "546720",
    "end": "548940"
  },
  {
    "text": "missed saying it if you will we thought",
    "start": "548940",
    "end": "550440"
  },
  {
    "text": "big ignoring details syntax and",
    "start": "550440",
    "end": "552180"
  },
  {
    "text": "semantics and focus on the big picture",
    "start": "552180",
    "end": "553560"
  },
  {
    "text": "that's good I still have a fascinating",
    "start": "553560",
    "end": "555240"
  },
  {
    "text": "male thread from that week here are a",
    "start": "555240",
    "end": "557160"
  },
  {
    "text": "couple excerpts Roberts starting point C",
    "start": "557160",
    "end": "559440"
  },
  {
    "text": "fix some of the obvious flaws remove",
    "start": "559440",
    "end": "561180"
  },
  {
    "text": "crud and add a few missing features okay",
    "start": "561180",
    "end": "563279"
  },
  {
    "text": "Rob",
    "start": "563279",
    "end": "564600"
  },
  {
    "text": "name go you can invent reasons for uh",
    "start": "564600",
    "end": "567420"
  },
  {
    "text": "for this name but it has a nice",
    "start": "567420",
    "end": "569040"
  },
  {
    "text": "properties it's short easy to type tools",
    "start": "569040",
    "end": "571560"
  },
  {
    "text": "go see go L go uh go a and there's",
    "start": "571560",
    "end": "574500"
  },
  {
    "text": "interactivity debugger interpreter it",
    "start": "574500",
    "end": "576240"
  },
  {
    "text": "could just be called go the suffix is go",
    "start": "576240",
    "end": "579959"
  },
  {
    "text": "this is good Robert empty interfaces",
    "start": "579959",
    "end": "582480"
  },
  {
    "text": "interfaces these are implemented by all",
    "start": "582480",
    "end": "584160"
  },
  {
    "text": "interfaces and thus could take the place",
    "start": "584160",
    "end": "585600"
  },
  {
    "text": "of voidstar",
    "start": "585600",
    "end": "586860"
  },
  {
    "text": "I like this but I think this is a",
    "start": "586860",
    "end": "588480"
  },
  {
    "text": "failure of a of a complete enough type",
    "start": "588480",
    "end": "590459"
  },
  {
    "text": "system I really have never been a huge",
    "start": "590459",
    "end": "593040"
  },
  {
    "text": "lover of the interface thing the whole",
    "start": "593040",
    "end": "595320"
  },
  {
    "text": "that that's one thing that's always",
    "start": "595320",
    "end": "597000"
  },
  {
    "text": "turned me off from go that's why I say I",
    "start": "597000",
    "end": "598500"
  },
  {
    "text": "feel like tight unions have always just",
    "start": "598500",
    "end": "600600"
  },
  {
    "text": "been something I really want our tagged",
    "start": "600600",
    "end": "602220"
  },
  {
    "text": "unions this is something I've always",
    "start": "602220",
    "end": "603839"
  },
  {
    "text": "really wanted is just give me some",
    "start": "603839",
    "end": "605339"
  },
  {
    "text": "tagged unions give me tagged unions in a",
    "start": "605339",
    "end": "607680"
  },
  {
    "text": "basic way to manage memory in some sort",
    "start": "607680",
    "end": "609360"
  },
  {
    "text": "of way other than GC which they did with",
    "start": "609360",
    "end": "611279"
  },
  {
    "text": "this whole Arena idea and you have like",
    "start": "611279",
    "end": "613500"
  },
  {
    "text": "most of it kind of completed",
    "start": "613500",
    "end": "616080"
  },
  {
    "text": "um",
    "start": "616080",
    "end": "617339"
  },
  {
    "text": "which is very very exciting for me and",
    "start": "617339",
    "end": "620040"
  },
  {
    "text": "then just throw a little bit of Syntax",
    "start": "620040",
    "end": "621540"
  },
  {
    "text": "for handling errors based on the",
    "start": "621540",
    "end": "622860"
  },
  {
    "text": "convention that's now there for 10 years",
    "start": "622860",
    "end": "624360"
  },
  {
    "text": "and you literally have a language that I",
    "start": "624360",
    "end": "626100"
  },
  {
    "text": "think is just beautiful uh we didn't",
    "start": "626100",
    "end": "628620"
  },
  {
    "text": "figure it all out right away uh for",
    "start": "628620",
    "end": "630480"
  },
  {
    "text": "instance it took us over a year to",
    "start": "630480",
    "end": "631680"
  },
  {
    "text": "figure out arrays and slices but a",
    "start": "631680",
    "end": "633420"
  },
  {
    "text": "significant amount to the flavor of the",
    "start": "633420",
    "end": "634800"
  },
  {
    "text": "language emerged in that first couple",
    "start": "634800",
    "end": "636060"
  },
  {
    "text": "days notice that Robert said c was the",
    "start": "636060",
    "end": "638220"
  },
  {
    "text": "starting point not C plus plus I'm not",
    "start": "638220",
    "end": "639839"
  },
  {
    "text": "certain but I believe he meant C proper",
    "start": "639839",
    "end": "641700"
  },
  {
    "text": "because uh especially because Ken was",
    "start": "641700",
    "end": "644399"
  },
  {
    "text": "there but it's also true that in the end",
    "start": "644399",
    "end": "646980"
  },
  {
    "text": "we didn't really start from C we built",
    "start": "646980",
    "end": "649680"
  },
  {
    "text": "from scratch borrowing only minor things",
    "start": "649680",
    "end": "651240"
  },
  {
    "text": "like operators and Brace brackets and a",
    "start": "651240",
    "end": "654060"
  },
  {
    "text": "few common keywords and of course we",
    "start": "654060",
    "end": "655740"
  },
  {
    "text": "borrowed the ideas from other languages",
    "start": "655740",
    "end": "657000"
  },
  {
    "text": "we knew in any case I see now that we re",
    "start": "657000",
    "end": "660120"
  },
  {
    "text": "uh reacted to C plus plus by going back",
    "start": "660120",
    "end": "662220"
  },
  {
    "text": "down to Basics breaking it all down and",
    "start": "662220",
    "end": "664140"
  },
  {
    "text": "starting over isn't that pretty much",
    "start": "664140",
    "end": "665640"
  },
  {
    "text": "what happened with C plus plus to begin",
    "start": "665640",
    "end": "667260"
  },
  {
    "text": "with they didn't like C broke it down",
    "start": "667260",
    "end": "669120"
  },
  {
    "text": "made some changes boom made a horrible",
    "start": "669120",
    "end": "671459"
  },
  {
    "text": "language you just did it again we",
    "start": "671459",
    "end": "673440"
  },
  {
    "text": "weren't trying to design a better C plus",
    "start": "673440",
    "end": "674880"
  },
  {
    "text": "or even a better C it was to be a better",
    "start": "674880",
    "end": "677040"
  },
  {
    "text": "language which overall for the kind of",
    "start": "677040",
    "end": "678600"
  },
  {
    "text": "software we cared about and in the end",
    "start": "678600",
    "end": "680279"
  },
  {
    "text": "of course it came out quite different",
    "start": "680279",
    "end": "681660"
  },
  {
    "text": "from either C or C plus plus more",
    "start": "681660",
    "end": "684420"
  },
  {
    "text": "different even than many realized I'm in",
    "start": "684420",
    "end": "686579"
  },
  {
    "text": "a list of significant simple",
    "start": "686579",
    "end": "687600"
  },
  {
    "text": "simplifications and go over CNC plus",
    "start": "687600",
    "end": "689940"
  },
  {
    "text": "regular syntax don't need a simple table",
    "start": "689940",
    "end": "692339"
  },
  {
    "text": "to parse garbage collection only yep no",
    "start": "692339",
    "end": "694920"
  },
  {
    "text": "header files this right here",
    "start": "694920",
    "end": "698300"
  },
  {
    "text": "explicit uh dependencies no circular",
    "start": "698660",
    "end": "701339"
  },
  {
    "text": "dependencies constants are just numbers",
    "start": "701339",
    "end": "704839"
  },
  {
    "text": "uh Anton n32 are distinct types",
    "start": "705959",
    "end": "708120"
  },
  {
    "text": "beautiful uh letter case sets visibility",
    "start": "708120",
    "end": "710640"
  },
  {
    "text": "I hate this this is I I would",
    "start": "710640",
    "end": "714740"
  },
  {
    "text": "I really wish that one wasn't that uh",
    "start": "714779",
    "end": "717480"
  },
  {
    "text": "methods for any type no classes",
    "start": "717480",
    "end": "719579"
  },
  {
    "text": "um",
    "start": "719579",
    "end": "720480"
  },
  {
    "text": "yeah this is good but I mean in a sense",
    "start": "720480",
    "end": "722399"
  },
  {
    "text": "you kind of create classes this way I",
    "start": "722399",
    "end": "724800"
  },
  {
    "text": "mean I like what they've done I I prefer",
    "start": "724800",
    "end": "727140"
  },
  {
    "text": "the Go version of classes if you will I",
    "start": "727140",
    "end": "729660"
  },
  {
    "text": "like this no subtype inheritance this is",
    "start": "729660",
    "end": "731279"
  },
  {
    "text": "always just a good decision package",
    "start": "731279",
    "end": "732720"
  },
  {
    "text": "level initialization as well-defined",
    "start": "732720",
    "end": "734459"
  },
  {
    "text": "order of an initialization isn't this",
    "start": "734459",
    "end": "735959"
  },
  {
    "text": "largely considered a failure uh in it",
    "start": "735959",
    "end": "738600"
  },
  {
    "text": "any init functions are largely",
    "start": "738600",
    "end": "740100"
  },
  {
    "text": "considered a failure I'm pretty sure",
    "start": "740100",
    "end": "741660"
  },
  {
    "text": "that's true files compiled together in a",
    "start": "741660",
    "end": "743579"
  },
  {
    "text": "package package level globals presented",
    "start": "743579",
    "end": "745260"
  },
  {
    "text": "in any order uh no arithmic conversions",
    "start": "745260",
    "end": "748260"
  },
  {
    "text": "constants help I always like a just uh",
    "start": "748260",
    "end": "750720"
  },
  {
    "text": "automated uh upscaling events right so",
    "start": "750720",
    "end": "752880"
  },
  {
    "text": "if you do like a 32 plus a 64 it just",
    "start": "752880",
    "end": "755100"
  },
  {
    "text": "goes to 64. that always seems like a",
    "start": "755100",
    "end": "757079"
  },
  {
    "text": "reasonable that always seems like a",
    "start": "757079",
    "end": "759420"
  },
  {
    "text": "reasonable cast up can we all agree with",
    "start": "759420",
    "end": "761160"
  },
  {
    "text": "that one it's like I get why you'd never",
    "start": "761160",
    "end": "762959"
  },
  {
    "text": "cast down or cast sideways to like a",
    "start": "762959",
    "end": "765360"
  },
  {
    "text": "float right like I would never want a 32",
    "start": "765360",
    "end": "767760"
  },
  {
    "text": "to a float I can see why you'd want",
    "start": "767760",
    "end": "769620"
  },
  {
    "text": "explicit to be explicit about that just",
    "start": "769620",
    "end": "771660"
  },
  {
    "text": "because you you change the underlying",
    "start": "771660",
    "end": "773339"
  },
  {
    "text": "underlying binary representation",
    "start": "773339",
    "end": "775680"
  },
  {
    "text": "I'm on that team and so then doing",
    "start": "775680",
    "end": "777540"
  },
  {
    "text": "binary operations would then necessarily",
    "start": "777540",
    "end": "779279"
  },
  {
    "text": "have to do what JavaScript does which",
    "start": "779279",
    "end": "780660"
  },
  {
    "text": "casts your number type which is a 53-bit",
    "start": "780660",
    "end": "783540"
  },
  {
    "text": "minus one amalgamation of dumb ideas",
    "start": "783540",
    "end": "785820"
  },
  {
    "text": "into a 32-bit signed integer for just",
    "start": "785820",
    "end": "788880"
  },
  {
    "text": "that simple operation right so I can",
    "start": "788880",
    "end": "790980"
  },
  {
    "text": "totally get why you'd want these things",
    "start": "790980",
    "end": "793019"
  },
  {
    "text": "uh interfaces are uh let's see if",
    "start": "793019",
    "end": "795360"
  },
  {
    "text": "interfaces are implicit no implements",
    "start": "795360",
    "end": "797160"
  },
  {
    "text": "declaration and what I mean by that for",
    "start": "797160",
    "end": "798420"
  },
  {
    "text": "those that don't understand what I'm",
    "start": "798420",
    "end": "799500"
  },
  {
    "text": "saying right there check this out sorry",
    "start": "799500",
    "end": "801240"
  },
  {
    "text": "I realize that node thing's like pretty",
    "start": "801240",
    "end": "802920"
  },
  {
    "text": "specific if I go like this one uh one uh",
    "start": "802920",
    "end": "806760"
  },
  {
    "text": "30 you get this if I go 131 you go",
    "start": "806760",
    "end": "809639"
  },
  {
    "text": "negative which is probably surprising to",
    "start": "809639",
    "end": "811740"
  },
  {
    "text": "a lot of people and if you go 132 you go",
    "start": "811740",
    "end": "813959"
  },
  {
    "text": "all the way back down to one because",
    "start": "813959",
    "end": "815220"
  },
  {
    "text": "there's actually an implicit casting so",
    "start": "815220",
    "end": "817260"
  },
  {
    "text": "if I go like this one uh if I can I can",
    "start": "817260",
    "end": "821040"
  },
  {
    "text": "I go even further look at that look at",
    "start": "821040",
    "end": "822959"
  },
  {
    "text": "those fun things that can happen you",
    "start": "822959",
    "end": "824760"
  },
  {
    "text": "wouldn't expect a lot of these weird",
    "start": "824760",
    "end": "825959"
  },
  {
    "text": "things to happen right and can we go",
    "start": "825959",
    "end": "827760"
  },
  {
    "text": "like this and then or zero",
    "start": "827760",
    "end": "831320"
  },
  {
    "text": "look how beautiful that is like you can",
    "start": "831600",
    "end": "833459"
  },
  {
    "text": "just get these weird results right on",
    "start": "833459",
    "end": "835019"
  },
  {
    "text": "the end because you don't realize that",
    "start": "835019",
    "end": "836459"
  },
  {
    "text": "there's a signed integer that's",
    "start": "836459",
    "end": "837779"
  },
  {
    "text": "happening underneath the hood and if",
    "start": "837779",
    "end": "839940"
  },
  {
    "text": "you're doing anything in this region it",
    "start": "839940",
    "end": "841980"
  },
  {
    "text": "can be very surprising right and so the",
    "start": "841980",
    "end": "844980"
  },
  {
    "text": "first time you encounter this you're",
    "start": "844980",
    "end": "846300"
  },
  {
    "text": "like why is that happening I don't get",
    "start": "846300",
    "end": "849000"
  },
  {
    "text": "it and it's because you're just getting",
    "start": "849000",
    "end": "850620"
  },
  {
    "text": "hit with the two's compliment right",
    "start": "850620",
    "end": "852240"
  },
  {
    "text": "you're just whoopsie daisies",
    "start": "852240",
    "end": "854760"
  },
  {
    "text": "you know what I mean",
    "start": "854760",
    "end": "856860"
  },
  {
    "text": "so uh",
    "start": "856860",
    "end": "858779"
  },
  {
    "text": "interfaces are implicit no implements",
    "start": "858779",
    "end": "860940"
  },
  {
    "text": "okay I love that embed embedding no",
    "start": "860940",
    "end": "863100"
  },
  {
    "text": "promotion to superclass okay methods are",
    "start": "863100",
    "end": "865019"
  },
  {
    "text": "declared as functions no special",
    "start": "865019",
    "end": "866279"
  },
  {
    "text": "location methods are just functions yep",
    "start": "866279",
    "end": "868079"
  },
  {
    "text": "interfaces are just methods no data type",
    "start": "868079",
    "end": "870000"
  },
  {
    "text": "methods matched but uh by name only okay",
    "start": "870000",
    "end": "872760"
  },
  {
    "text": "I like it I do like that because that",
    "start": "872760",
    "end": "874079"
  },
  {
    "text": "means no I go back and forth on function",
    "start": "874079",
    "end": "876180"
  },
  {
    "text": "overloading do I want overloading or do",
    "start": "876180",
    "end": "878100"
  },
  {
    "text": "I not",
    "start": "878100",
    "end": "880399"
  },
  {
    "text": "I go back and forth because you either",
    "start": "880560",
    "end": "882420"
  },
  {
    "text": "overload it by name right then you have",
    "start": "882420",
    "end": "884160"
  },
  {
    "text": "like Foo with float Foo with this flu",
    "start": "884160",
    "end": "888420"
  },
  {
    "text": "Foo with that I never know I never know",
    "start": "888420",
    "end": "890279"
  },
  {
    "text": "if I like which one uh no Constructors",
    "start": "890279",
    "end": "892320"
  },
  {
    "text": "or destructors",
    "start": "892320",
    "end": "893699"
  },
  {
    "text": "I can buy",
    "start": "893699",
    "end": "895260"
  },
  {
    "text": "um",
    "start": "895260",
    "end": "895860"
  },
  {
    "text": "uh post increment and post-decrement are",
    "start": "895860",
    "end": "898019"
  },
  {
    "text": "statements not Expressions okay nice no",
    "start": "898019",
    "end": "900600"
  },
  {
    "text": "pre-increment or uh pre-decrement a sign",
    "start": "900600",
    "end": "903420"
  },
  {
    "text": "uh is not an expression of valuation in",
    "start": "903420",
    "end": "905639"
  },
  {
    "text": "order to find an assignment function",
    "start": "905639",
    "end": "907320"
  },
  {
    "text": "calls no sequence points no no pointer",
    "start": "907320",
    "end": "910320"
  },
  {
    "text": "arithmetic that's probably a good idea",
    "start": "910320",
    "end": "912360"
  },
  {
    "text": "no pointer arithmetic memory is always",
    "start": "912360",
    "end": "914699"
  },
  {
    "text": "uh zeroed I think this is always",
    "start": "914699",
    "end": "917100"
  },
  {
    "text": "probably good you should give an escape",
    "start": "917100",
    "end": "918660"
  },
  {
    "text": "hatch for unsafe Alec but this should",
    "start": "918660",
    "end": "921300"
  },
  {
    "text": "always be the default I think that this",
    "start": "921300",
    "end": "922800"
  },
  {
    "text": "is just a safe beautiful way not to f",
    "start": "922800",
    "end": "925380"
  },
  {
    "text": "yourself right that's why I think I",
    "start": "925380",
    "end": "926880"
  },
  {
    "text": "think node actually did end up doing it",
    "start": "926880",
    "end": "928620"
  },
  {
    "text": "right with their mistake of a buffer",
    "start": "928620",
    "end": "930060"
  },
  {
    "text": "class uh but that uh Alec unsafe I think",
    "start": "930060",
    "end": "933959"
  },
  {
    "text": "was a really good move right I really do",
    "start": "933959",
    "end": "936000"
  },
  {
    "text": "think that that was one of the best",
    "start": "936000",
    "end": "937139"
  },
  {
    "text": "design Decisions by the the the node",
    "start": "937139",
    "end": "940079"
  },
  {
    "text": "team dopa for being a",
    "start": "940079",
    "end": "942660"
  },
  {
    "text": "a mistake right uh legal to take",
    "start": "942660",
    "end": "945360"
  },
  {
    "text": "addresses from local variables uh know",
    "start": "945360",
    "end": "947699"
  },
  {
    "text": "this and methods yeah but then you I",
    "start": "947699",
    "end": "950220"
  },
  {
    "text": "mean",
    "start": "950220",
    "end": "951060"
  },
  {
    "text": "you effectively recreate it by having a",
    "start": "951060",
    "end": "953100"
  },
  {
    "text": "named version and which is now just a",
    "start": "953100",
    "end": "954839"
  },
  {
    "text": "single letter and I don't know how I",
    "start": "954839",
    "end": "955920"
  },
  {
    "text": "feel it segment and sex beautiful no",
    "start": "955920",
    "end": "957540"
  },
  {
    "text": "const or other uh type annotations no",
    "start": "957540",
    "end": "959399"
  },
  {
    "text": "templates no exceptions no templates",
    "start": "959399",
    "end": "961019"
  },
  {
    "text": "beautiful but then they kind of they",
    "start": "961019",
    "end": "963060"
  },
  {
    "text": "kind of went back on that with generics",
    "start": "963060",
    "end": "964620"
  },
  {
    "text": "in 118. I like generics I wish they had",
    "start": "964620",
    "end": "966839"
  },
  {
    "text": "a little bit stronger generics but I",
    "start": "966839",
    "end": "968220"
  },
  {
    "text": "also feel every time I do a generic",
    "start": "968220",
    "end": "970380"
  },
  {
    "text": "I have I I have to ask myself twice am I",
    "start": "970380",
    "end": "972959"
  },
  {
    "text": "really building the right thing because",
    "start": "972959",
    "end": "974040"
  },
  {
    "text": "I have to be sure uh built-in string",
    "start": "974040",
    "end": "976019"
  },
  {
    "text": "slice map beautiful array bounce",
    "start": "976019",
    "end": "977399"
  },
  {
    "text": "checking beautiful those like these last",
    "start": "977399",
    "end": "979260"
  },
  {
    "text": "two this is just like",
    "start": "979260",
    "end": "981060"
  },
  {
    "text": "it's crazy if you don't have those right",
    "start": "981060",
    "end": "982800"
  },
  {
    "text": "uh and yet with that long list of",
    "start": "982800",
    "end": "984660"
  },
  {
    "text": "simplifications and missing pieces go is",
    "start": "984660",
    "end": "986339"
  },
  {
    "text": "I believe more expressive than C or C",
    "start": "986339",
    "end": "988440"
  },
  {
    "text": "plus plus less can be more but you can",
    "start": "988440",
    "end": "990899"
  },
  {
    "text": "take uh you can't take out everything",
    "start": "990899",
    "end": "992820"
  },
  {
    "text": "you need building blocks such as an idea",
    "start": "992820",
    "end": "994740"
  },
  {
    "text": "about how types behave uh and syntax",
    "start": "994740",
    "end": "997079"
  },
  {
    "text": "that works well in practice and some uh",
    "start": "997079",
    "end": "998880"
  },
  {
    "text": "ineffable thing that makes libraries",
    "start": "998880",
    "end": "1000860"
  },
  {
    "text": "interop well they never even mention",
    "start": "1000860",
    "end": "1002600"
  },
  {
    "text": "anything about errors as values which I",
    "start": "1002600",
    "end": "1004759"
  },
  {
    "text": "think is one of the Go's greatest",
    "start": "1004759",
    "end": "1005899"
  },
  {
    "text": "contributions is errors as values I mean",
    "start": "1005899",
    "end": "1008480"
  },
  {
    "text": "I already know is the thing and there's",
    "start": "1008480",
    "end": "1009800"
  },
  {
    "text": "other languages that did it but go is a",
    "start": "1009800",
    "end": "1011660"
  },
  {
    "text": "very mainstream language and for it to",
    "start": "1011660",
    "end": "1013220"
  },
  {
    "text": "kind of bring that idea forward it was",
    "start": "1013220",
    "end": "1014660"
  },
  {
    "text": "beautiful I just wish they would have",
    "start": "1014660",
    "end": "1016339"
  },
  {
    "text": "thought of syntax and I still wish they",
    "start": "1016339",
    "end": "1017959"
  },
  {
    "text": "would consider syntax around it",
    "start": "1017959",
    "end": "1020600"
  },
  {
    "text": "we also had some things that were not uh",
    "start": "1020600",
    "end": "1022639"
  },
  {
    "text": "like uh in C or C plus plus like slices",
    "start": "1022639",
    "end": "1025100"
  },
  {
    "text": "and Maps composite literals Expressions",
    "start": "1025100",
    "end": "1027260"
  },
  {
    "text": "at the top level of the file which is a",
    "start": "1027260",
    "end": "1028819"
  },
  {
    "text": "huge thing that mostly goes unremarked",
    "start": "1028819",
    "end": "1030740"
  },
  {
    "text": "reflection garbage collection and so on",
    "start": "1030740",
    "end": "1032480"
  },
  {
    "text": "concurrency to naturally concurrency",
    "start": "1032480",
    "end": "1034220"
  },
  {
    "text": "their the model ghost concurrency model",
    "start": "1034220",
    "end": "1035900"
  },
  {
    "text": "might be the best ever uh one thing that",
    "start": "1035900",
    "end": "1037760"
  },
  {
    "text": "is uh conspicuously absent of course is",
    "start": "1037760",
    "end": "1040100"
  },
  {
    "text": "type hierarchy allow me to be rude about",
    "start": "1040100",
    "end": "1042079"
  },
  {
    "text": "that for a minute please be early in the",
    "start": "1042079",
    "end": "1044360"
  },
  {
    "text": "rollout of go I was told by someone that",
    "start": "1044360",
    "end": "1046220"
  },
  {
    "text": "he could not imagine working a language",
    "start": "1046220",
    "end": "1047660"
  },
  {
    "text": "without generic types as I have reported",
    "start": "1047660",
    "end": "1049760"
  },
  {
    "text": "elsewhere I found that an odd remark to",
    "start": "1049760",
    "end": "1052100"
  },
  {
    "text": "be fair he was probably saying in his",
    "start": "1052100",
    "end": "1053840"
  },
  {
    "text": "own way that he really liked the STL",
    "start": "1053840",
    "end": "1055640"
  },
  {
    "text": "does for him in C plus for that purpose",
    "start": "1055640",
    "end": "1058039"
  },
  {
    "text": "of the argument though let's take his",
    "start": "1058039",
    "end": "1059539"
  },
  {
    "text": "claim at face value what is uh what it",
    "start": "1059539",
    "end": "1063200"
  },
  {
    "text": "says is that he finds writing container",
    "start": "1063200",
    "end": "1065120"
  },
  {
    "text": "lists of ins and maps of strings and",
    "start": "1065120",
    "end": "1067280"
  },
  {
    "text": "unbearable burden I find that odd I find",
    "start": "1067280",
    "end": "1069860"
  },
  {
    "text": "that an odd claim I spend very little of",
    "start": "1069860",
    "end": "1072200"
  },
  {
    "text": "my programming time struggling with",
    "start": "1072200",
    "end": "1073760"
  },
  {
    "text": "those issues even in languages without",
    "start": "1073760",
    "end": "1075620"
  },
  {
    "text": "generic types but more importantly what",
    "start": "1075620",
    "end": "1078260"
  },
  {
    "text": "it says is that types are the way to",
    "start": "1078260",
    "end": "1080360"
  },
  {
    "text": "lift that burden types not polymorphic",
    "start": "1080360",
    "end": "1083480"
  },
  {
    "text": "functions or language Primitives or",
    "start": "1083480",
    "end": "1085160"
  },
  {
    "text": "helpers or uh or other kinds but types",
    "start": "1085160",
    "end": "1088539"
  },
  {
    "text": "that that's the detail that sticks with",
    "start": "1088539",
    "end": "1091220"
  },
  {
    "text": "me programmers who come from go or come",
    "start": "1091220",
    "end": "1094100"
  },
  {
    "text": "to go from C plus plus this is a really",
    "start": "1094100",
    "end": "1095780"
  },
  {
    "text": "interesting statement by the way",
    "start": "1095780",
    "end": "1097700"
  },
  {
    "text": "I probably shouldn't have glossed over",
    "start": "1097700",
    "end": "1099260"
  },
  {
    "text": "that so quick it's a really interesting",
    "start": "1099260",
    "end": "1101240"
  },
  {
    "text": "statement",
    "start": "1101240",
    "end": "1103580"
  },
  {
    "text": "huh programmers who come from go uh come",
    "start": "1103580",
    "end": "1106880"
  },
  {
    "text": "to go from C plus plus and Java missed",
    "start": "1106880",
    "end": "1108860"
  },
  {
    "text": "the idea of programming with types",
    "start": "1108860",
    "end": "1110840"
  },
  {
    "text": "particularly inheritance and subclassing",
    "start": "1110840",
    "end": "1112700"
  },
  {
    "text": "and all of that perhaps I'm a Philistine",
    "start": "1112700",
    "end": "1115340"
  },
  {
    "text": "about types oh what I don't even get",
    "start": "1115340",
    "end": "1118220"
  },
  {
    "text": "what that means uh but I've never found",
    "start": "1118220",
    "end": "1120320"
  },
  {
    "text": "that model particularly expressive",
    "start": "1120320",
    "end": "1122660"
  },
  {
    "text": "yeah I find well the problem is is that",
    "start": "1122660",
    "end": "1124940"
  },
  {
    "text": "it's an extremely constrained way of uh",
    "start": "1124940",
    "end": "1129260"
  },
  {
    "text": "being expressive and it always ends up",
    "start": "1129260",
    "end": "1131240"
  },
  {
    "text": "being just a burden uh my late friend uh",
    "start": "1131240",
    "end": "1134600"
  },
  {
    "text": "is it Elaine Elaine of thornier once",
    "start": "1134600",
    "end": "1137539"
  },
  {
    "text": "told me that he considered uh the lowest",
    "start": "1137539",
    "end": "1139760"
  },
  {
    "text": "form of academic work to be tax on",
    "start": "1139760",
    "end": "1141820"
  },
  {
    "text": "taxonomy uh what do you let's see and",
    "start": "1141820",
    "end": "1144679"
  },
  {
    "text": "you know what type hierarchies are just",
    "start": "1144679",
    "end": "1146660"
  },
  {
    "text": "taxonomy you need to decide what piece",
    "start": "1146660",
    "end": "1149299"
  },
  {
    "text": "goes in what box every type's parent",
    "start": "1149299",
    "end": "1151100"
  },
  {
    "text": "whether a in hairs from b or B from a it",
    "start": "1151100",
    "end": "1154280"
  },
  {
    "text": "is a sortable array an array that sorts",
    "start": "1154280",
    "end": "1157460"
  },
  {
    "text": "or a sorter represented to buy an array",
    "start": "1157460",
    "end": "1159860"
  },
  {
    "text": "if you believe that types address all",
    "start": "1159860",
    "end": "1161960"
  },
  {
    "text": "design issues you must make that",
    "start": "1161960",
    "end": "1163640"
  },
  {
    "text": "decision this is a very interesting",
    "start": "1163640",
    "end": "1165799"
  },
  {
    "text": "argument because I almost feel like it's",
    "start": "1165799",
    "end": "1167299"
  },
  {
    "text": "the antithesis to like uh Russ argument",
    "start": "1167299",
    "end": "1170660"
  },
  {
    "text": "or Haskell's argument right",
    "start": "1170660",
    "end": "1173299"
  },
  {
    "text": "is this like an is this like a a purely",
    "start": "1173299",
    "end": "1176440"
  },
  {
    "text": "anti-lisp rant",
    "start": "1176440",
    "end": "1178640"
  },
  {
    "text": "code is data data is code very",
    "start": "1178640",
    "end": "1181460"
  },
  {
    "text": "interesting",
    "start": "1181460",
    "end": "1182900"
  },
  {
    "text": "oh no I believe that's a Preposterous",
    "start": "1182900",
    "end": "1185120"
  },
  {
    "text": "way to think about programming what",
    "start": "1185120",
    "end": "1186320"
  },
  {
    "text": "matters isn't the answer uh the answer",
    "start": "1186320",
    "end": "1188299"
  },
  {
    "text": "okay yeah he's specifically talking",
    "start": "1188299",
    "end": "1189860"
  },
  {
    "text": "about that okay yeah then I I'm fully on",
    "start": "1189860",
    "end": "1192200"
  },
  {
    "text": "that team uh what matters isn't the",
    "start": "1192200",
    "end": "1194419"
  },
  {
    "text": "ancestor relations between things but",
    "start": "1194419",
    "end": "1196100"
  },
  {
    "text": "what they can do for you that of course",
    "start": "1196100",
    "end": "1198020"
  },
  {
    "text": "is where interface is coming to go but",
    "start": "1198020",
    "end": "1199700"
  },
  {
    "text": "they're uh part of a bigger picture the",
    "start": "1199700",
    "end": "1201980"
  },
  {
    "text": "true go philosophy and if C plus plus",
    "start": "1201980",
    "end": "1204020"
  },
  {
    "text": "and Java are about type hierarchies and",
    "start": "1204020",
    "end": "1205760"
  },
  {
    "text": "taxonomy of types goes about composition",
    "start": "1205760",
    "end": "1208360"
  },
  {
    "text": "Doug",
    "start": "1208360",
    "end": "1209919"
  },
  {
    "text": "mcclory",
    "start": "1209919",
    "end": "1211539"
  },
  {
    "text": "mcglory",
    "start": "1211539",
    "end": "1214539"
  },
  {
    "text": "uh well uh the eventual inventor of Unix",
    "start": "1214539",
    "end": "1217820"
  },
  {
    "text": "pipes wrote in 1964 we should have some",
    "start": "1217820",
    "end": "1220820"
  },
  {
    "text": "ways of coupling programs like a garden",
    "start": "1220820",
    "end": "1222559"
  },
  {
    "text": "hose screw in another segment when it",
    "start": "1222559",
    "end": "1224900"
  },
  {
    "text": "comes necessary to massage the data in",
    "start": "1224900",
    "end": "1227000"
  },
  {
    "text": "another way this is the way of IO also",
    "start": "1227000",
    "end": "1231919"
  },
  {
    "text": "the the man",
    "start": "1231919",
    "end": "1234140"
  },
  {
    "text": "is way ahead of his time oh is that an i",
    "start": "1234140",
    "end": "1236900"
  },
  {
    "text": "oh that is an eye McIlroy way ahead of",
    "start": "1236900",
    "end": "1239960"
  },
  {
    "text": "his time beautiful I love that",
    "start": "1239960",
    "end": "1242179"
  },
  {
    "text": "I thought it was two L's that's why I",
    "start": "1242179",
    "end": "1244039"
  },
  {
    "text": "was like mcclory McCoy",
    "start": "1244039",
    "end": "1246620"
  },
  {
    "text": "okay it's uh it's a it's the prime",
    "start": "1246620",
    "end": "1249620"
  },
  {
    "text": "machine yeah uh that way uh of go let's",
    "start": "1249620",
    "end": "1251780"
  },
  {
    "text": "see that is the way of go also go takes",
    "start": "1251780",
    "end": "1254299"
  },
  {
    "text": "the idea and pushes it very far it is a",
    "start": "1254299",
    "end": "1256100"
  },
  {
    "text": "language of composition and coupling the",
    "start": "1256100",
    "end": "1258500"
  },
  {
    "text": "obvious example in the way uh interfaces",
    "start": "1258500",
    "end": "1260780"
  },
  {
    "text": "give us the composition of components it",
    "start": "1260780",
    "end": "1262640"
  },
  {
    "text": "doesn't matter what the thing is uh if",
    "start": "1262640",
    "end": "1265400"
  },
  {
    "text": "it implements method M I can just drop",
    "start": "1265400",
    "end": "1267260"
  },
  {
    "text": "it in here quack uh another important",
    "start": "1267260",
    "end": "1270020"
  },
  {
    "text": "example of how concurrency gives us the",
    "start": "1270020",
    "end": "1271580"
  },
  {
    "text": "composition of independently executing",
    "start": "1271580",
    "end": "1273320"
  },
  {
    "text": "computations uh and there's an",
    "start": "1273320",
    "end": "1276200"
  },
  {
    "text": "let's see and there's even an unusual",
    "start": "1276200",
    "end": "1278000"
  },
  {
    "text": "and very simple form of type composition",
    "start": "1278000",
    "end": "1279799"
  },
  {
    "text": "embedding uh these compositional",
    "start": "1279799",
    "end": "1282020"
  },
  {
    "text": "techniques are what give go it's flavor",
    "start": "1282020",
    "end": "1283820"
  },
  {
    "text": "which is profoundly different from the",
    "start": "1283820",
    "end": "1285679"
  },
  {
    "text": "Flavor of C plus plus or Java programs",
    "start": "1285679",
    "end": "1287539"
  },
  {
    "text": "you know the surprising part about all",
    "start": "1287539",
    "end": "1289400"
  },
  {
    "text": "this",
    "start": "1289400",
    "end": "1291200"
  },
  {
    "text": "he hasn't really talked a lot about",
    "start": "1291200",
    "end": "1292640"
  },
  {
    "text": "concurrency I think concurrency is their",
    "start": "1292640",
    "end": "1294860"
  },
  {
    "text": "greatest feature of go maybe it wasn't",
    "start": "1294860",
    "end": "1297260"
  },
  {
    "text": "as big as it like maybe the initial",
    "start": "1297260",
    "end": "1299419"
  },
  {
    "text": "phases weren't",
    "start": "1299419",
    "end": "1300919"
  },
  {
    "text": "so well thought out but the asynchronous",
    "start": "1300919",
    "end": "1303740"
  },
  {
    "text": "part is just so like there's so many",
    "start": "1303740",
    "end": "1305780"
  },
  {
    "text": "things to love about it and we read that",
    "start": "1305780",
    "end": "1307580"
  },
  {
    "text": "red blue article not too long ago I love",
    "start": "1307580",
    "end": "1309919"
  },
  {
    "text": "the fact that go is colorless you don't",
    "start": "1309919",
    "end": "1313340"
  },
  {
    "text": "like you don't have to handle a lot of",
    "start": "1313340",
    "end": "1316100"
  },
  {
    "text": "these Concepts like that there's",
    "start": "1316100",
    "end": "1317240"
  },
  {
    "text": "something about that that is just so",
    "start": "1317240",
    "end": "1319640"
  },
  {
    "text": "good and I love that I truly truly love",
    "start": "1319640",
    "end": "1323720"
  },
  {
    "text": "that",
    "start": "1323720",
    "end": "1324679"
  },
  {
    "text": "uh there's an unrelated aspect of ghost",
    "start": "1324679",
    "end": "1326780"
  },
  {
    "text": "design I'd like to touch upon go is",
    "start": "1326780",
    "end": "1328820"
  },
  {
    "text": "designed to help write big programs",
    "start": "1328820",
    "end": "1330500"
  },
  {
    "text": "written and maintained by big teams",
    "start": "1330500",
    "end": "1332260"
  },
  {
    "text": "there's this idea about programming in a",
    "start": "1332260",
    "end": "1335059"
  },
  {
    "text": "in the large and somehow C plus plus and",
    "start": "1335059",
    "end": "1336980"
  },
  {
    "text": "Java own that domain I believe that's",
    "start": "1336980",
    "end": "1339140"
  },
  {
    "text": "just a historical accident or perhaps an",
    "start": "1339140",
    "end": "1341240"
  },
  {
    "text": "industry accident or an uh but the",
    "start": "1341240",
    "end": "1344419"
  },
  {
    "text": "widely held belief is that it has",
    "start": "1344419",
    "end": "1347000"
  },
  {
    "text": "something to do with object oriented",
    "start": "1347000",
    "end": "1348500"
  },
  {
    "text": "design agreed thank you Bob",
    "start": "1348500",
    "end": "1351740"
  },
  {
    "text": "Uncle Bob",
    "start": "1351740",
    "end": "1354940"
  },
  {
    "text": "I hate clean code uh I don't buy that at",
    "start": "1355820",
    "end": "1357919"
  },
  {
    "text": "all big software needs uh methodology to",
    "start": "1357919",
    "end": "1360140"
  },
  {
    "text": "be sure uh but not nearly as much as it",
    "start": "1360140",
    "end": "1363140"
  },
  {
    "text": "needs strongly a strong dependency",
    "start": "1363140",
    "end": "1365240"
  },
  {
    "text": "management and clean interface",
    "start": "1365240",
    "end": "1366559"
  },
  {
    "text": "abstraction and superb documentation",
    "start": "1366559",
    "end": "1368120"
  },
  {
    "text": "tools none of which is served by C plus",
    "start": "1368120",
    "end": "1370460"
  },
  {
    "text": "plus although Java does noticeably",
    "start": "1370460",
    "end": "1372080"
  },
  {
    "text": "better yeah uh we don't know yet because",
    "start": "1372080",
    "end": "1374840"
  },
  {
    "text": "not enough software has been written and",
    "start": "1374840",
    "end": "1376340"
  },
  {
    "text": "go but I'm confident go will turn out to",
    "start": "1376340",
    "end": "1378020"
  },
  {
    "text": "be a superb language for programming in",
    "start": "1378020",
    "end": "1379520"
  },
  {
    "text": "the large time will tell we have huge",
    "start": "1379520",
    "end": "1383120"
  },
  {
    "text": "programs at Netflix that are written in",
    "start": "1383120",
    "end": "1386240"
  },
  {
    "text": "go",
    "start": "1386240",
    "end": "1386960"
  },
  {
    "text": "they're very successful they're very",
    "start": "1386960",
    "end": "1389659"
  },
  {
    "text": "fast moving and we get a lot of stuff",
    "start": "1389659",
    "end": "1391580"
  },
  {
    "text": "done uh now to come back to the",
    "start": "1391580",
    "end": "1393679"
  },
  {
    "text": "surprising question that opened my talk",
    "start": "1393679",
    "end": "1395179"
  },
  {
    "text": "why does go a language designed from the",
    "start": "1395179",
    "end": "1396980"
  },
  {
    "text": "ground up to do what C plus is used for",
    "start": "1396980",
    "end": "1399140"
  },
  {
    "text": "not attract more C plus programmers this",
    "start": "1399140",
    "end": "1401000"
  },
  {
    "text": "is what I want to hear jokes aside I",
    "start": "1401000",
    "end": "1403280"
  },
  {
    "text": "think it's because go and C plus plus",
    "start": "1403280",
    "end": "1404720"
  },
  {
    "text": "are profoundly different philosophically",
    "start": "1404720",
    "end": "1406580"
  },
  {
    "text": "uh C plus plus is about having uh it all",
    "start": "1406580",
    "end": "1410059"
  },
  {
    "text": "there at your fingertips I found this",
    "start": "1410059",
    "end": "1411559"
  },
  {
    "text": "quote on C plus plus 11 frequently asked",
    "start": "1411559",
    "end": "1413900"
  },
  {
    "text": "questions uh the range of abstractions",
    "start": "1413900",
    "end": "1415880"
  },
  {
    "text": "that c plus can express elegantly",
    "start": "1415880",
    "end": "1417679"
  },
  {
    "text": "flexibly and add zero cost compared to",
    "start": "1417679",
    "end": "1419900"
  },
  {
    "text": "handcrafted specialized code has greatly",
    "start": "1419900",
    "end": "1421940"
  },
  {
    "text": "increased",
    "start": "1421940",
    "end": "1424360"
  },
  {
    "text": "that way of thinking just isn't the way",
    "start": "1424460",
    "end": "1426559"
  },
  {
    "text": "go operates zero cost isn't a goal at",
    "start": "1426559",
    "end": "1429679"
  },
  {
    "text": "least not zero CPU cost goes claim is",
    "start": "1429679",
    "end": "1432260"
  },
  {
    "text": "that minimizing programming effort is",
    "start": "1432260",
    "end": "1434659"
  },
  {
    "text": "more important consideration",
    "start": "1434659",
    "end": "1437419"
  },
  {
    "text": "long as you're like 98 I feel like",
    "start": "1437419",
    "end": "1440120"
  },
  {
    "text": "that's fine right uh go isn't",
    "start": "1440120",
    "end": "1442640"
  },
  {
    "text": "all-encompassing you don't get",
    "start": "1442640",
    "end": "1444320"
  },
  {
    "text": "everything built in you don't have",
    "start": "1444320",
    "end": "1445820"
  },
  {
    "text": "precise control of every Nuance of",
    "start": "1445820",
    "end": "1448520"
  },
  {
    "text": "execution for instance you don't have a",
    "start": "1448520",
    "end": "1450799"
  },
  {
    "text": "ray ray a resource acquisition is in the",
    "start": "1450799",
    "end": "1455299"
  },
  {
    "text": "initialization uh instead you get",
    "start": "1455299",
    "end": "1457460"
  },
  {
    "text": "garbage collector uh you don't get a",
    "start": "1457460",
    "end": "1459799"
  },
  {
    "text": "memory freeing function by the way they",
    "start": "1459799",
    "end": "1461360"
  },
  {
    "text": "actually are going back on this",
    "start": "1461360",
    "end": "1462500"
  },
  {
    "text": "potentially in one 1.20 did you see that",
    "start": "1462500",
    "end": "1464539"
  },
  {
    "text": "the whole Arena allocations I think that",
    "start": "1464539",
    "end": "1466520"
  },
  {
    "text": "that is a beautiful like not middle it's",
    "start": "1466520",
    "end": "1469039"
  },
  {
    "text": "not even a middle ground it's like just",
    "start": "1469039",
    "end": "1471080"
  },
  {
    "text": "one step from a collector saying hey",
    "start": "1471080",
    "end": "1472700"
  },
  {
    "text": "you're still collecting but I'm gonna",
    "start": "1472700",
    "end": "1474380"
  },
  {
    "text": "give you a handle that all the things go",
    "start": "1474380",
    "end": "1476720"
  },
  {
    "text": "under so you can collect all at once",
    "start": "1476720",
    "end": "1478280"
  },
  {
    "text": "that is so good I really hope that they",
    "start": "1478280",
    "end": "1481280"
  },
  {
    "text": "continue down this uh what you're given",
    "start": "1481280",
    "end": "1483140"
  },
  {
    "text": "is a set of powerful but easy to",
    "start": "1483140",
    "end": "1484460"
  },
  {
    "text": "understand easy to use building blocks",
    "start": "1484460",
    "end": "1486140"
  },
  {
    "text": "from which you can assemble compose a",
    "start": "1486140",
    "end": "1487820"
  },
  {
    "text": "solution to your problem it might not",
    "start": "1487820",
    "end": "1489740"
  },
  {
    "text": "end up quite as fast or as sophisticated",
    "start": "1489740",
    "end": "1492080"
  },
  {
    "text": "or as ideologically motivated as the",
    "start": "1492080",
    "end": "1494360"
  },
  {
    "text": "solution you'd write in some of those",
    "start": "1494360",
    "end": "1496100"
  },
  {
    "text": "other languages but it's all most",
    "start": "1496100",
    "end": "1497840"
  },
  {
    "text": "certainly uh be certainly be easier to",
    "start": "1497840",
    "end": "1500840"
  },
  {
    "text": "write easier to read easier to",
    "start": "1500840",
    "end": "1502640"
  },
  {
    "text": "understand and easier to maintain and",
    "start": "1502640",
    "end": "1504080"
  },
  {
    "text": "maybe safer to put it another way",
    "start": "1504080",
    "end": "1506080"
  },
  {
    "text": "oversimplifying of course Python and",
    "start": "1506080",
    "end": "1508400"
  },
  {
    "text": "Ruby programmers come to go because they",
    "start": "1508400",
    "end": "1510080"
  },
  {
    "text": "don't have to surrender much",
    "start": "1510080",
    "end": "1511220"
  },
  {
    "text": "expressiveness but gain performance and",
    "start": "1511220",
    "end": "1513020"
  },
  {
    "text": "get to play with concurrency",
    "start": "1513020",
    "end": "1515960"
  },
  {
    "text": "yes yes C plus pro uh C plus plus",
    "start": "1515960",
    "end": "1519140"
  },
  {
    "text": "programmers don't come to go because",
    "start": "1519140",
    "end": "1520820"
  },
  {
    "text": "they have fought hard to gain uh",
    "start": "1520820",
    "end": "1522559"
  },
  {
    "text": "Exquisite control of their program",
    "start": "1522559",
    "end": "1524360"
  },
  {
    "text": "domain and a programming domain and I",
    "start": "1524360",
    "end": "1526760"
  },
  {
    "text": "don't and don't want to surrender it uh",
    "start": "1526760",
    "end": "1528440"
  },
  {
    "text": "surrender any of it yep that's what I",
    "start": "1528440",
    "end": "1529880"
  },
  {
    "text": "thought to them software isn't just",
    "start": "1529880",
    "end": "1531380"
  },
  {
    "text": "about getting the job done it's about",
    "start": "1531380",
    "end": "1532940"
  },
  {
    "text": "doing it a certain way",
    "start": "1532940",
    "end": "1534740"
  },
  {
    "text": "bold claim but I think I could buy it",
    "start": "1534740",
    "end": "1536900"
  },
  {
    "text": "the issue then is that go success would",
    "start": "1536900",
    "end": "1539900"
  },
  {
    "text": "contradict their world view and we",
    "start": "1539900",
    "end": "1542000"
  },
  {
    "text": "should have realized that from the",
    "start": "1542000",
    "end": "1543080"
  },
  {
    "text": "beginning people are excited about C",
    "start": "1543080",
    "end": "1544340"
  },
  {
    "text": "plus 11's new features are not going to",
    "start": "1544340",
    "end": "1546740"
  },
  {
    "text": "care about a language that has so much",
    "start": "1546740",
    "end": "1548840"
  },
  {
    "text": "less even if in the end it offers so",
    "start": "1548840",
    "end": "1552020"
  },
  {
    "text": "much more thank you this was an",
    "start": "1552020",
    "end": "1554840"
  },
  {
    "text": "incredible talk",
    "start": "1554840",
    "end": "1556640"
  },
  {
    "text": "I cannot believe in a Talk 11 years ago",
    "start": "1556640",
    "end": "1559520"
  },
  {
    "text": "can still be so dang relevant today",
    "start": "1559520",
    "end": "1564080"
  },
  {
    "text": "you know it's one of the things",
    "start": "1564080",
    "end": "1565820"
  },
  {
    "text": "um",
    "start": "1565820",
    "end": "1566779"
  },
  {
    "text": "it's one of these things that I've been",
    "start": "1566779",
    "end": "1568159"
  },
  {
    "text": "I've been kind of harping on a little",
    "start": "1568159",
    "end": "1570020"
  },
  {
    "text": "bit about typescript is that it's such",
    "start": "1570020",
    "end": "1572299"
  },
  {
    "text": "an expressive type system I find that",
    "start": "1572299",
    "end": "1575000"
  },
  {
    "text": "you will crew technical debt really fast",
    "start": "1575000",
    "end": "1578539"
  },
  {
    "text": "and it's it's and it's a hard technical",
    "start": "1578539",
    "end": "1580880"
  },
  {
    "text": "debt it's so expressive and so",
    "start": "1580880",
    "end": "1584299"
  },
  {
    "text": "incredible that I have never had more",
    "start": "1584299",
    "end": "1586820"
  },
  {
    "text": "problems with technical debt than I've",
    "start": "1586820",
    "end": "1588380"
  },
  {
    "text": "had with typescript just saying uh maybe",
    "start": "1588380",
    "end": "1591020"
  },
  {
    "text": "people don't like that maybe people hate",
    "start": "1591020",
    "end": "1592640"
  },
  {
    "text": "that one but I I just I'm I've just",
    "start": "1592640",
    "end": "1595340"
  },
  {
    "text": "always had this problem where I think",
    "start": "1595340",
    "end": "1596659"
  },
  {
    "text": "that there's this idea of just enough",
    "start": "1596659",
    "end": "1598100"
  },
  {
    "text": "typescript you know what I mean",
    "start": "1598100",
    "end": "1599360"
  },
  {
    "text": "typescript is too much for me it's why I",
    "start": "1599360",
    "end": "1601520"
  },
  {
    "text": "stick with go you need uh you need a",
    "start": "1601520",
    "end": "1602960"
  },
  {
    "text": "million well yeah I mean that's just",
    "start": "1602960",
    "end": "1604100"
  },
  {
    "text": "that's that's not really I mean that's",
    "start": "1604100",
    "end": "1605779"
  },
  {
    "text": "just an ecosystem that's an ecosystem",
    "start": "1605779",
    "end": "1607880"
  },
  {
    "text": "right even if node came with a singular",
    "start": "1607880",
    "end": "1612799"
  },
  {
    "text": "tool that did everything compilation",
    "start": "1612799",
    "end": "1615500"
  },
  {
    "text": "build everything it's all in a single",
    "start": "1615500",
    "end": "1617000"
  },
  {
    "text": "step",
    "start": "1617000",
    "end": "1617840"
  },
  {
    "text": "I would still think typescript is too",
    "start": "1617840",
    "end": "1620419"
  },
  {
    "text": "expressive even if there was no problem",
    "start": "1620419",
    "end": "1622460"
  },
  {
    "text": "with building ever I would still feel",
    "start": "1622460",
    "end": "1624679"
  },
  {
    "text": "the same way yeah I think oh Campbell's",
    "start": "1624679",
    "end": "1626299"
  },
  {
    "text": "biggest problem is ocamel is functional",
    "start": "1626299",
    "end": "1628159"
  },
  {
    "text": "functional is 100 harder to read for the",
    "start": "1628159",
    "end": "1632000"
  },
  {
    "text": "average person and I and I think that's",
    "start": "1632000",
    "end": "1634279"
  },
  {
    "text": "probably just a starting point problem",
    "start": "1634279",
    "end": "1636440"
  },
  {
    "text": "but I also think it might just be a",
    "start": "1636440",
    "end": "1638539"
  },
  {
    "text": "procedural problem",
    "start": "1638539",
    "end": "1640220"
  },
  {
    "text": "procedural is really easy to understand",
    "start": "1640220",
    "end": "1643340"
  },
  {
    "text": "it's it's just really easy to understand",
    "start": "1643340",
    "end": "1646039"
  },
  {
    "text": "so I think it's such a natural",
    "start": "1646039",
    "end": "1648440"
  },
  {
    "text": "way",
    "start": "1648440",
    "end": "1649760"
  },
  {
    "text": "people can express programming and I",
    "start": "1649760",
    "end": "1651799"
  },
  {
    "text": "think that's why it's such an easy way",
    "start": "1651799",
    "end": "1653059"
  },
  {
    "text": "to start but to be able to solve things",
    "start": "1653059",
    "end": "1654440"
  },
  {
    "text": "recursively requires you to see things",
    "start": "1654440",
    "end": "1657559"
  },
  {
    "text": "in a very vastly different way almost",
    "start": "1657559",
    "end": "1659779"
  },
  {
    "text": "counterintuitive a lot like Vim like Vim",
    "start": "1659779",
    "end": "1661820"
  },
  {
    "text": "is counter-intuitive but in the end it's",
    "start": "1661820",
    "end": "1663380"
  },
  {
    "text": "better I think so can I believe that in",
    "start": "1663380",
    "end": "1666140"
  },
  {
    "text": "the end functional is better yes I can",
    "start": "1666140",
    "end": "1668120"
  },
  {
    "text": "do I believe it is it is just a no-go",
    "start": "1668120",
    "end": "1671000"
  },
  {
    "text": "for starters I think it is a no-go",
    "start": "1671000",
    "end": "1673940"
  },
  {
    "text": "right I think it is a no-go for starters",
    "start": "1673940",
    "end": "1676159"
  },
  {
    "text": "sorry shirai I think that it's a very",
    "start": "1676159",
    "end": "1678740"
  },
  {
    "text": "very hard thing to just start",
    "start": "1678740",
    "end": "1680299"
  },
  {
    "text": "recursively recursive is one of the",
    "start": "1680299",
    "end": "1682100"
  },
  {
    "text": "hardest ways to start thinking probably",
    "start": "1682100",
    "end": "1684200"
  },
  {
    "text": "when are you gonna roast reason to ml",
    "start": "1684200",
    "end": "1685520"
  },
  {
    "text": "instead when you're gonna try reason MSL",
    "start": "1685520",
    "end": "1686779"
  },
  {
    "text": "I do want to try it I do want to try it",
    "start": "1686779",
    "end": "1688100"
  },
  {
    "text": "I'm I'm dude I'm D to C okay I'm D to C",
    "start": "1688100",
    "end": "1691100"
  },
  {
    "text": "the name",
    "start": "1691100",
    "end": "1693679"
  },
  {
    "text": "is the prime again",
    "start": "1693679",
    "end": "1696399"
  }
]