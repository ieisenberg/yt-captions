[
  {
    "text": "this is actually my fetish mixing",
    "start": "80",
    "end": "2120"
  },
  {
    "text": "programming languages in which make no",
    "start": "2120",
    "end": "3800"
  },
  {
    "text": "sense mixing C++ and rust for Fun and",
    "start": "3800",
    "end": "6319"
  },
  {
    "text": "Profit I've also heard that there's D in",
    "start": "6319",
    "end": "8840"
  },
  {
    "text": "the article yeah you heard us you heard",
    "start": "8840",
    "end": "10960"
  },
  {
    "text": "you heard me right boys this article",
    "start": "10960",
    "end": "13320"
  },
  {
    "text": "about to give us the D Lang for quite",
    "start": "13320",
    "end": "17119"
  },
  {
    "text": "some time I've been bothered by this",
    "start": "17119",
    "end": "18640"
  },
  {
    "text": "thought individual programming languages",
    "start": "18640",
    "end": "20320"
  },
  {
    "text": "C++ rust go Etc are traditionally viewed",
    "start": "20320",
    "end": "23000"
  },
  {
    "text": "as waled Gardens if your main function",
    "start": "23000",
    "end": "25320"
  },
  {
    "text": "is written in C++ you better find",
    "start": "25320",
    "end": "27439"
  },
  {
    "text": "yourself C++ libraries like QT to build",
    "start": "27439",
    "end": "30119"
  },
  {
    "text": "the rest of your codebase with do you",
    "start": "30119",
    "end": "32078"
  },
  {
    "text": "want to use flutter to build your apps",
    "start": "32079",
    "end": "33680"
  },
  {
    "text": "user interface get ready to build logic",
    "start": "33680",
    "end": "35640"
  },
  {
    "text": "and flutter too do you really want to",
    "start": "35640",
    "end": "37440"
  },
  {
    "text": "use rust library to make your",
    "start": "37440",
    "end": "38840"
  },
  {
    "text": "application safer you get uh to either",
    "start": "38840",
    "end": "41800"
  },
  {
    "text": "rewrite the whole app in rust or build",
    "start": "41800",
    "end": "44079"
  },
  {
    "text": "an ugly exter C wrapper around it that",
    "start": "44079",
    "end": "46199"
  },
  {
    "text": "won't fit well into your pro into your",
    "start": "46199",
    "end": "48360"
  },
  {
    "text": "objectoriented C++ code okay this is",
    "start": "48360",
    "end": "50840"
  },
  {
    "text": "good this is a good start this is a good",
    "start": "50840",
    "end": "53199"
  },
  {
    "text": "start this is a good this is a good",
    "start": "53199",
    "end": "55000"
  },
  {
    "text": "start this has been this has been the",
    "start": "55000",
    "end": "57079"
  },
  {
    "text": "standard view on using multiple",
    "start": "57079",
    "end": "58920"
  },
  {
    "text": "programming uh language is for many",
    "start": "58920",
    "end": "60719"
  },
  {
    "text": "years however I've decided that this",
    "start": "60719",
    "end": "62199"
  },
  {
    "text": "view is fundamentally flawed because",
    "start": "62199",
    "end": "64000"
  },
  {
    "text": "every compiled language used the same",
    "start": "64000",
    "end": "66240"
  },
  {
    "text": "set of Concepts when it's compiled okay",
    "start": "66240",
    "end": "69920"
  },
  {
    "text": "okay or just use Zig really you're tell",
    "start": "69920",
    "end": "72920"
  },
  {
    "text": "me you're telling me Zig is better",
    "start": "72920",
    "end": "74400"
  },
  {
    "text": "you're telling me Zig is that much",
    "start": "74400",
    "end": "75560"
  },
  {
    "text": "better is Zig actually that better is",
    "start": "75560",
    "end": "77880"
  },
  {
    "text": "Zig is that better that you would rather",
    "start": "77880",
    "end": "79479"
  },
  {
    "text": "drop everything else and just use Zig",
    "start": "79479",
    "end": "81640"
  },
  {
    "text": "everything else just use cobal Zig is",
    "start": "81640",
    "end": "83960"
  },
  {
    "text": "pre-alpha maybe vlang vlang oh gosh oh",
    "start": "83960",
    "end": "87920"
  },
  {
    "text": "gosh all right anyways okay Cod split up",
    "start": "87920",
    "end": "90200"
  },
  {
    "text": "into functions that can be reused",
    "start": "90200",
    "end": "91520"
  },
  {
    "text": "functions are identified by a string",
    "start": "91520",
    "end": "92960"
  },
  {
    "text": "generated from a function name in the",
    "start": "92960",
    "end": "94320"
  },
  {
    "text": "source for example g++ generates Z3 fuv",
    "start": "94320",
    "end": "97880"
  },
  {
    "text": "as identifier for uh void Fu this string",
    "start": "97880",
    "end": "100759"
  },
  {
    "text": "is always reproducible for example both",
    "start": "100759",
    "end": "102600"
  },
  {
    "text": "clang and GCC on Linux follow the aium",
    "start": "102600",
    "end": "105600"
  },
  {
    "text": "C++ ABI convention for mangling function",
    "start": "105600",
    "end": "108119"
  },
  {
    "text": "names functions are called by storing",
    "start": "108119",
    "end": "110280"
  },
  {
    "text": "all parameters to that function at a",
    "start": "110280",
    "end": "111799"
  },
  {
    "text": "specific location in memory and then",
    "start": "111799",
    "end": "113880"
  },
  {
    "text": "using oh my goodness I'm still effed am",
    "start": "113880",
    "end": "116200"
  },
  {
    "text": "I really just we're am I really just",
    "start": "116200",
    "end": "118360"
  },
  {
    "text": "hitting that many FS today what what is",
    "start": "118360",
    "end": "120320"
  },
  {
    "text": "happening I'm going to have to call I'm",
    "start": "120320",
    "end": "122520"
  },
  {
    "text": "going to have to call I'm going to have",
    "start": "122520",
    "end": "123520"
  },
  {
    "text": "to call up my my internet service",
    "start": "123520",
    "end": "125240"
  },
  {
    "text": "provider let them know that I want to be",
    "start": "125240",
    "end": "128160"
  },
  {
    "text": "back I don't want to be down I want to",
    "start": "128160",
    "end": "130280"
  },
  {
    "text": "be back I want to be back functions are",
    "start": "130280",
    "end": "132440"
  },
  {
    "text": "called by storing all the parameters to",
    "start": "132440",
    "end": "134200"
  },
  {
    "text": "a function at a specific location in",
    "start": "134200",
    "end": "136560"
  },
  {
    "text": "memory and then using a call instruction",
    "start": "136560",
    "end": "138519"
  },
  {
    "text": "or equivalent to move control to the",
    "start": "138519",
    "end": "140160"
  },
  {
    "text": "function for example to call void Fu",
    "start": "140160",
    "end": "143360"
  },
  {
    "text": "from earlier the compiler converts C++",
    "start": "143360",
    "end": "145400"
  },
  {
    "text": "statement Fu into an assembly call Z3 Fu",
    "start": "145400",
    "end": "148280"
  },
  {
    "text": "V uh the assembler then replaces call",
    "start": "148280",
    "end": "150440"
  },
  {
    "text": "with the appropriate op code and",
    "start": "150440",
    "end": "151599"
  },
  {
    "text": "replaces Z3 FV with the location of the",
    "start": "151599",
    "end": "153959"
  },
  {
    "text": "first instruction by ident uh identified",
    "start": "153959",
    "end": "156400"
  },
  {
    "text": "by Z3 Fu V functions return by storing",
    "start": "156400",
    "end": "159680"
  },
  {
    "text": "their return value if they have one in a",
    "start": "159680",
    "end": "161239"
  },
  {
    "text": "specific location then R instruction or",
    "start": "161239",
    "end": "163440"
  },
  {
    "text": "equivalent okay this all makes sense I",
    "start": "163440",
    "end": "165280"
  },
  {
    "text": "assume everybody kind of follows this",
    "start": "165280",
    "end": "166879"
  },
  {
    "text": "this is just like your basic call frame",
    "start": "166879",
    "end": "168480"
  },
  {
    "text": "operation here classes and structs can",
    "start": "168480",
    "end": "170599"
  },
  {
    "text": "be boiled down to a collection of",
    "start": "170599",
    "end": "171760"
  },
  {
    "text": "primitive types although some classes do",
    "start": "171760",
    "end": "173400"
  },
  {
    "text": "have V tables class methods are just",
    "start": "173400",
    "end": "175560"
  },
  {
    "text": "another function uh that happens to take",
    "start": "175560",
    "end": "177599"
  },
  {
    "text": "a pointer to a class object as the first",
    "start": "177599",
    "end": "179840"
  },
  {
    "text": "parameter in other words you write like",
    "start": "179840",
    "end": "181360"
  },
  {
    "text": "this",
    "start": "181360",
    "end": "183800"
  },
  {
    "text": "yes",
    "start": "184519",
    "end": "186200"
  },
  {
    "text": "okay",
    "start": "186200",
    "end": "188159"
  },
  {
    "text": "okay okay I'm excited since every",
    "start": "188159",
    "end": "190840"
  },
  {
    "text": "compiled programming languages uses the",
    "start": "190840",
    "end": "192720"
  },
  {
    "text": "same Concepts to compile why can't they",
    "start": "192720",
    "end": "195120"
  },
  {
    "text": "just interact before we go any further",
    "start": "195120",
    "end": "197200"
  },
  {
    "text": "I'd like to give you an example of what",
    "start": "197200",
    "end": "198400"
  },
  {
    "text": "I want to want to",
    "start": "198400",
    "end": "200480"
  },
  {
    "text": "achieve include rust module header",
    "start": "200480",
    "end": "203400"
  },
  {
    "text": "header or let's see or ideal C++ 20",
    "start": "203400",
    "end": "205879"
  },
  {
    "text": "World import rust module we all know",
    "start": "205879",
    "end": "207519"
  },
  {
    "text": "that C++ 20 is going to be 2020 2032 is",
    "start": "207519",
    "end": "212519"
  },
  {
    "text": "favorite",
    "start": "212519",
    "end": "213640"
  },
  {
    "text": "feature uh all right pragma once hit it",
    "start": "213640",
    "end": "217000"
  },
  {
    "text": "void Fu rust module hit that okay we",
    "start": "217000",
    "end": "220360"
  },
  {
    "text": "want to be able to compile those files",
    "start": "220360",
    "end": "222159"
  },
  {
    "text": "and get an executable that prints hello",
    "start": "222159",
    "end": "224319"
  },
  {
    "text": "from rust to standard out now now let's",
    "start": "224319",
    "end": "227080"
  },
  {
    "text": "look at why this won't just work out of",
    "start": "227080",
    "end": "229159"
  },
  {
    "text": "the box okay name name mangling data",
    "start": "229159",
    "end": "231959"
  },
  {
    "text": "layout and standard libraries all right",
    "start": "231959",
    "end": "233519"
  },
  {
    "text": "the most obvious reason that compiled",
    "start": "233519",
    "end": "235560"
  },
  {
    "text": "programming languages just can't",
    "start": "235560",
    "end": "237040"
  },
  {
    "text": "interact with each other is the most",
    "start": "237040",
    "end": "238760"
  },
  {
    "text": "obvious one syntax tax C++ compilers",
    "start": "238760",
    "end": "241360"
  },
  {
    "text": "don't understand rust and rust compilers",
    "start": "241360",
    "end": "243360"
  },
  {
    "text": "don't understand C++ thus neither",
    "start": "243360",
    "end": "245239"
  },
  {
    "text": "language can tell what function or",
    "start": "245239",
    "end": "246920"
  },
  {
    "text": "classes the other is making",
    "start": "246920",
    "end": "249400"
  },
  {
    "text": "available okay yeah yeah yeah yeah yeah",
    "start": "249400",
    "end": "251640"
  },
  {
    "text": "yeah yeah yeah yeah this makes we're all",
    "start": "251640",
    "end": "253120"
  },
  {
    "text": "on the same page here uh now you might",
    "start": "253120",
    "end": "255640"
  },
  {
    "text": "be saying but if I use C++ header file",
    "start": "255640",
    "end": "258479"
  },
  {
    "text": "to export functions and classes to other",
    "start": "258479",
    "end": "260239"
  },
  {
    "text": "CPP files certainly I could make a",
    "start": "260239",
    "end": "261840"
  },
  {
    "text": "header file that tells C++ where that",
    "start": "261840",
    "end": "264120"
  },
  {
    "text": "there is oh my goodness my",
    "start": "264120",
    "end": "268040"
  },
  {
    "text": "camera",
    "start": "268600",
    "end": "271039"
  },
  {
    "text": "why does today suck why is today just",
    "start": "271039",
    "end": "275080"
  },
  {
    "text": "sucking I hate I hate my life okay uh I",
    "start": "275080",
    "end": "278800"
  },
  {
    "text": "don't know what happened today today is",
    "start": "278800",
    "end": "280240"
  },
  {
    "text": "just come out cursed today is a day of",
    "start": "280240",
    "end": "282160"
  },
  {
    "text": "cursed okay internet keeps failing um",
    "start": "282160",
    "end": "284880"
  },
  {
    "text": "camera ain't working new camera's on the",
    "start": "284880",
    "end": "287240"
  },
  {
    "text": "way it said it'd be here Wednesday but",
    "start": "287240",
    "end": "289560"
  },
  {
    "text": "now the one that said it'd be here",
    "start": "289560",
    "end": "290759"
  },
  {
    "text": "Wednesday says it's arriving Thursday I",
    "start": "290759",
    "end": "292840"
  },
  {
    "text": "don't know what's happening all I know",
    "start": "292840",
    "end": "294680"
  },
  {
    "text": "is this isn't okay all right let's keep",
    "start": "294680",
    "end": "296520"
  },
  {
    "text": "on going now you might be saying but if",
    "start": "296520",
    "end": "298120"
  },
  {
    "text": "I use C++ header to export functions and",
    "start": "298120",
    "end": "300199"
  },
  {
    "text": "classes to other CPP files certainly I'd",
    "start": "300199",
    "end": "302000"
  },
  {
    "text": "be able to make a a header file that",
    "start": "302000",
    "end": "303880"
  },
  {
    "text": "tells C++ where the rust function Fu uh",
    "start": "303880",
    "end": "306440"
  },
  {
    "text": "out there uh if you did say or at least",
    "start": "306440",
    "end": "308880"
  },
  {
    "text": "I think that congratulations you are on",
    "start": "308880",
    "end": "310759"
  },
  {
    "text": "the right track but there are some less",
    "start": "310759",
    "end": "312560"
  },
  {
    "text": "obvious things we need to talk about",
    "start": "312560",
    "end": "314520"
  },
  {
    "text": "okay okay first major blocker to",
    "start": "314520",
    "end": "316880"
  },
  {
    "text": "interoperability is name mangling you",
    "start": "316880",
    "end": "318960"
  },
  {
    "text": "can you can certainly make a h file with",
    "start": "318960",
    "end": "321440"
  },
  {
    "text": "the four Declaration of void Fu but the",
    "start": "321440",
    "end": "323360"
  },
  {
    "text": "C++ compiler will then look for a symbol",
    "start": "323360",
    "end": "325520"
  },
  {
    "text": "called Z3 Fu V while Russ compiler",
    "start": "325520",
    "end": "327680"
  },
  {
    "text": "mangled Fu function into Z zn1 rust",
    "start": "327680",
    "end": "330800"
  },
  {
    "text": "module 3 Fu 17 HD F3 DC gez I wonder",
    "start": "330800",
    "end": "335360"
  },
  {
    "text": "what's happened there compiling the C++",
    "start": "335360",
    "end": "337919"
  },
  {
    "text": "code starts out okay but the but once",
    "start": "337919",
    "end": "340600"
  },
  {
    "text": "the linking stage is reached the Linker",
    "start": "340600",
    "end": "342120"
  },
  {
    "text": "will not be able to find underscore",
    "start": "342120",
    "end": "345520"
  },
  {
    "text": "Z3 fuv since it doesn't",
    "start": "345520",
    "end": "349360"
  },
  {
    "text": "exist",
    "start": "349360",
    "end": "351479"
  },
  {
    "text": "rip this makes me sad it just does",
    "start": "351479",
    "end": "355720"
  },
  {
    "text": "where's the camam the cam died my life",
    "start": "355720",
    "end": "357479"
  },
  {
    "text": "died everything about this is just",
    "start": "357479",
    "end": "359120"
  },
  {
    "text": "scuffed okay just just deal with it",
    "start": "359120",
    "end": "361080"
  },
  {
    "text": "obviously we need to change how the name",
    "start": "361080",
    "end": "362919"
  },
  {
    "text": "mangling behaves on one side or the",
    "start": "362919",
    "end": "364600"
  },
  {
    "text": "other we'll come back to this thought in",
    "start": "364600",
    "end": "366240"
  },
  {
    "text": "a moment the second major blocker is",
    "start": "366240",
    "end": "368160"
  },
  {
    "text": "data layout put simply different",
    "start": "368160",
    "end": "370039"
  },
  {
    "text": "compilers May treat the same struct",
    "start": "370039",
    "end": "371759"
  },
  {
    "text": "declaration differently by putting its",
    "start": "371759",
    "end": "373280"
  },
  {
    "text": "fields at different locations in memory",
    "start": "373280",
    "end": "375160"
  },
  {
    "text": "yeah if I'm not mistaken C+ or C does",
    "start": "375160",
    "end": "377240"
  },
  {
    "text": "like tight packing of strs so if you",
    "start": "377240",
    "end": "379280"
  },
  {
    "text": "have a 32bit int a 32-bit int and an 8",
    "start": "379280",
    "end": "382800"
  },
  {
    "text": "bit int it'll be stored at like 32 you",
    "start": "382800",
    "end": "385800"
  },
  {
    "text": "know it'll be stored at 0o 0 plus 32 and",
    "start": "385800",
    "end": "389000"
  },
  {
    "text": "then one right if you have a 64-bit",
    "start": "389000",
    "end": "391840"
  },
  {
    "text": "right if you're 64-bit lines whereas",
    "start": "391840",
    "end": "394240"
  },
  {
    "text": "rust will put a 64-bit uh in place of",
    "start": "394240",
    "end": "397520"
  },
  {
    "text": "everything so if you have a 32-bit inte",
    "start": "397520",
    "end": "399280"
  },
  {
    "text": "the first one's at one the next one's at",
    "start": "399280",
    "end": "400840"
  },
  {
    "text": "two the next one's at three even eight",
    "start": "400840",
    "end": "402639"
  },
  {
    "text": "bits are sitting there that's like the",
    "start": "402639",
    "end": "404880"
  },
  {
    "text": "general thing I know that I know there's",
    "start": "404880",
    "end": "406840"
  },
  {
    "text": "no guarantee on these things but that's",
    "start": "406840",
    "end": "408280"
  },
  {
    "text": "generally what happens uh order is not",
    "start": "408280",
    "end": "411960"
  },
  {
    "text": "guaranteed either that can't make sense",
    "start": "411960",
    "end": "414919"
  },
  {
    "text": "I I don't believe that order is not",
    "start": "414919",
    "end": "416599"
  },
  {
    "text": "guaranteed because you can do um I I",
    "start": "416599",
    "end": "419479"
  },
  {
    "text": "guess in Rust maybe order is not",
    "start": "419479",
    "end": "420960"
  },
  {
    "text": "guaranteed but in C it is because you",
    "start": "420960",
    "end": "422400"
  },
  {
    "text": "can do a c you can do a c comp uh a c",
    "start": "422400",
    "end": "425280"
  },
  {
    "text": "data layout in Rust so it must be",
    "start": "425280",
    "end": "426840"
  },
  {
    "text": "deterministic right order is not",
    "start": "426840",
    "end": "428639"
  },
  {
    "text": "guaranteed huh crazy okay yeah I don't",
    "start": "428639",
    "end": "430879"
  },
  {
    "text": "know I don't know this area Okay I I I",
    "start": "430879",
    "end": "433039"
  },
  {
    "text": "can buy I can buy it all right the third",
    "start": "433039",
    "end": "435360"
  },
  {
    "text": "and final blocker I want to look at here",
    "start": "435360",
    "end": "437240"
  },
  {
    "text": "is standard libraries if you have a C++",
    "start": "437240",
    "end": "439960"
  },
  {
    "text": "function that returns a standard string",
    "start": "439960",
    "end": "441840"
  },
  {
    "text": "rust won't be able to understand that of",
    "start": "441840",
    "end": "443560"
  },
  {
    "text": "course not instead you just need to",
    "start": "443560",
    "end": "445720"
  },
  {
    "text": "implement some sort of converter that",
    "start": "445720",
    "end": "447160"
  },
  {
    "text": "will convert C++ strings to rust strings",
    "start": "447160",
    "end": "449400"
  },
  {
    "text": "similarly a rust VC object won't be",
    "start": "449400",
    "end": "451319"
  },
  {
    "text": "usable from C++ unless you convert uh it",
    "start": "451319",
    "end": "454280"
  },
  {
    "text": "to something C++ understands let's",
    "start": "454280",
    "end": "456879"
  },
  {
    "text": "investigate how we can fix the first",
    "start": "456879",
    "end": "458800"
  },
  {
    "text": "problem name mangling extern c and why",
    "start": "458800",
    "end": "461840"
  },
  {
    "text": "it sucks okay okay I like this the easy",
    "start": "461840",
    "end": "464840"
  },
  {
    "text": "way to use extern C feature that nearly",
    "start": "464840",
    "end": "466960"
  },
  {
    "text": "every programming language has is this",
    "start": "466960",
    "end": "468680"
  },
  {
    "text": "right here pragma once this thing extern",
    "start": "468680",
    "end": "471840"
  },
  {
    "text": "C Fu void okay yeah yeah yeah yeah yeah",
    "start": "471840",
    "end": "473720"
  },
  {
    "text": "yeah and then rust module no mangle boom",
    "start": "473720",
    "end": "476120"
  },
  {
    "text": "boom Pub extern C Fu function let's go",
    "start": "476120",
    "end": "479560"
  },
  {
    "text": "okay this still works and it's beautiful",
    "start": "479560",
    "end": "481680"
  },
  {
    "text": "it's beautiful enough this actually will",
    "start": "481680",
    "end": "483919"
  },
  {
    "text": "compile and run assuming uh you link all",
    "start": "483919",
    "end": "486080"
  },
  {
    "text": "the proper standard libraries so why",
    "start": "486080",
    "end": "488400"
  },
  {
    "text": "does extern c suck well by using extern",
    "start": "488400",
    "end": "490840"
  },
  {
    "text": "C you give up features like function",
    "start": "490840",
    "end": "492360"
  },
  {
    "text": "overloads class methods templates okay",
    "start": "492360",
    "end": "494639"
  },
  {
    "text": "it's po okay I mean okay it's possible",
    "start": "494639",
    "end": "496879"
  },
  {
    "text": "to create rappers around extern C",
    "start": "496879",
    "end": "498800"
  },
  {
    "text": "functions to crudely emulate these",
    "start": "498800",
    "end": "500639"
  },
  {
    "text": "features but I don't want complex",
    "start": "500639",
    "end": "502400"
  },
  {
    "text": "rappers that provide crude emulations I",
    "start": "502400",
    "end": "504599"
  },
  {
    "text": "want rappers that directly Plumb those",
    "start": "504599",
    "end": "506319"
  },
  {
    "text": "features and are human readable",
    "start": "506319",
    "end": "508000"
  },
  {
    "text": "furthermore I don't want to have have to",
    "start": "508000",
    "end": "509520"
  },
  {
    "text": "change existing source code which means",
    "start": "509520",
    "end": "511159"
  },
  {
    "text": "that ugly no mango Pub exter C must go",
    "start": "511159",
    "end": "514680"
  },
  {
    "text": "all right I love the motivation I'm",
    "start": "514680",
    "end": "516680"
  },
  {
    "text": "loving the motivation here enter D enter",
    "start": "516680",
    "end": "519479"
  },
  {
    "text": "the D people we got them we got him so",
    "start": "519479",
    "end": "522518"
  },
  {
    "text": "good D is a programming language that",
    "start": "522519",
    "end": "524240"
  },
  {
    "text": "has been around since 2001 and nobody",
    "start": "524240",
    "end": "526800"
  },
  {
    "text": "cares although it's not Source",
    "start": "526800",
    "end": "528480"
  },
  {
    "text": "compatible with C++ it is similar to C++",
    "start": "528480",
    "end": "531080"
  },
  {
    "text": "I personally like d for its intuitive",
    "start": "531080",
    "end": "533399"
  },
  {
    "text": "syntax and great features but for gluing",
    "start": "533399",
    "end": "535600"
  },
  {
    "text": "rust and C++ together d stands out for",
    "start": "535600",
    "end": "537880"
  },
  {
    "text": "two reasons classic D standing out",
    "start": "537880",
    "end": "540240"
  },
  {
    "text": "extern C++ and pragma mangle Fu with",
    "start": "540240",
    "end": "543160"
  },
  {
    "text": "extern C++ you can tell D to use C++",
    "start": "543160",
    "end": "546160"
  },
  {
    "text": "name mangling for any symbol therefore",
    "start": "546160",
    "end": "548440"
  },
  {
    "text": "following code will",
    "start": "548440",
    "end": "551399"
  },
  {
    "text": "compile",
    "start": "553600",
    "end": "556600"
  },
  {
    "text": "okay",
    "start": "557000",
    "end": "560000"
  },
  {
    "text": "okay void bar okay nice nice you just",
    "start": "561480",
    "end": "565519"
  },
  {
    "text": "like declare that this function exists",
    "start": "565519",
    "end": "567560"
  },
  {
    "text": "you call it and it does it and then this",
    "start": "567560",
    "end": "570040"
  },
  {
    "text": "one just puts it in is that what I'm",
    "start": "570040",
    "end": "571839"
  },
  {
    "text": "seeing right this one this one fu is",
    "start": "571839",
    "end": "575440"
  },
  {
    "text": "defined in in this file fu. CPP and bar",
    "start": "575440",
    "end": "578880"
  },
  {
    "text": "is defined in this file and so fu is",
    "start": "578880",
    "end": "582120"
  },
  {
    "text": "called which refers to bar right am I am",
    "start": "582120",
    "end": "584839"
  },
  {
    "text": "I seeing that correctly the D I mean the",
    "start": "584839",
    "end": "586720"
  },
  {
    "text": "D is strong yeah bar is forward declared",
    "start": "586720",
    "end": "589680"
  },
  {
    "text": "and then fu is also forward declared",
    "start": "589680",
    "end": "591160"
  },
  {
    "text": "right here okay okay okay okay I never",
    "start": "591160",
    "end": "593440"
  },
  {
    "text": "thought D would have a usefulness but",
    "start": "593440",
    "end": "595040"
  },
  {
    "text": "let's go however it gets better we can",
    "start": "595040",
    "end": "596920"
  },
  {
    "text": "use mangle Fu to manually override name",
    "start": "596920",
    "end": "599360"
  },
  {
    "text": "mangling to anything we want therefore",
    "start": "599360",
    "end": "601839"
  },
  {
    "text": "the following code",
    "start": "601839",
    "end": "604640"
  },
  {
    "text": "compiles oh",
    "start": "606000",
    "end": "608279"
  },
  {
    "text": "no oh",
    "start": "608279",
    "end": "610360"
  },
  {
    "text": "no huh oh no that means you have to have",
    "start": "610360",
    "end": "614160"
  },
  {
    "text": "something that compiles in between right",
    "start": "614160",
    "end": "616000"
  },
  {
    "text": "you have to you have to create D",
    "start": "616000",
    "end": "617800"
  },
  {
    "text": "bindings you have to compile your C++ to",
    "start": "617800",
    "end": "620360"
  },
  {
    "text": "D this looks cursed dude it's cursed",
    "start": "620360",
    "end": "622640"
  },
  {
    "text": "Wrong Turn bro no this is the right turn",
    "start": "622640",
    "end": "625399"
  },
  {
    "text": "this is the right turn rust Fu hello",
    "start": "625399",
    "end": "628399"
  },
  {
    "text": "from rust unsafe bar calling that bar",
    "start": "628399",
    "end": "630959"
  },
  {
    "text": "extern link Name Bar D function function",
    "start": "630959",
    "end": "633920"
  },
  {
    "text": "bar let's go with pagma mangle Fu we",
    "start": "633920",
    "end": "636680"
  },
  {
    "text": "cannot only tell D how rust mangled its",
    "start": "636680",
    "end": "639240"
  },
  {
    "text": "function but also create a function that",
    "start": "639240",
    "end": "641240"
  },
  {
    "text": "rust can see you might be wondering why",
    "start": "641240",
    "end": "643959"
  },
  {
    "text": "we had to tell rust to override mangling",
    "start": "643959",
    "end": "645880"
  },
  {
    "text": "of bar it's because rust apparently",
    "start": "645880",
    "end": "647680"
  },
  {
    "text": "won't apply any name mangling to bar for",
    "start": "647680",
    "end": "650480"
  },
  {
    "text": "the sole reason that it is an exter",
    "start": "650480",
    "end": "652320"
  },
  {
    "text": "block okay fair that is fair in my",
    "start": "652320",
    "end": "654399"
  },
  {
    "text": "testing not even marking it as extern",
    "start": "654399",
    "end": "656800"
  },
  {
    "text": "rust made any difference go figure",
    "start": "656800",
    "end": "660839"
  },
  {
    "text": "all right you also might be wondering",
    "start": "660839",
    "end": "662639"
  },
  {
    "text": "why we can't use rust name mangling",
    "start": "662639",
    "end": "664240"
  },
  {
    "text": "overrides instead of uh D's well rust",
    "start": "664240",
    "end": "667160"
  },
  {
    "text": "only lets you override mangling on",
    "start": "667160",
    "end": "668600"
  },
  {
    "text": "function for declarations marked as",
    "start": "668600",
    "end": "670480"
  },
  {
    "text": "extern so you can't make a function",
    "start": "670480",
    "end": "672160"
  },
  {
    "text": "defined in Rust masquerade as a C++",
    "start": "672160",
    "end": "674560"
  },
  {
    "text": "function okay so now we use D to glue",
    "start": "674560",
    "end": "677320"
  },
  {
    "text": "our basic example together look at this",
    "start": "677320",
    "end": "679079"
  },
  {
    "text": "thing go look at this thing go look at",
    "start": "679079",
    "end": "681399"
  },
  {
    "text": "it Go include rust module or an Ideal",
    "start": "681399",
    "end": "684320"
  },
  {
    "text": "World this function main okay this is in",
    "start": "684320",
    "end": "686959"
  },
  {
    "text": "Rust all right rust module yes it's",
    "start": "686959",
    "end": "688760"
  },
  {
    "text": "right here gluty gluty no",
    "start": "688760",
    "end": "691959"
  },
  {
    "text": "GC this is the rust function mangle this",
    "start": "691959",
    "end": "695160"
  },
  {
    "text": "oh my goodness void food from rust exter",
    "start": "695160",
    "end": "697240"
  },
  {
    "text": "C++ oh my",
    "start": "697240",
    "end": "700440"
  },
  {
    "text": "goodness oh my goodness what is this",
    "start": "700560",
    "end": "704040"
  },
  {
    "text": "this has to be generated right these",
    "start": "704040",
    "end": "705720"
  },
  {
    "text": "gluty files have to be generated this is",
    "start": "705720",
    "end": "708560"
  },
  {
    "text": "wild this is wild if this works this is",
    "start": "708560",
    "end": "712200"
  },
  {
    "text": "wild and this example main calls Fu from",
    "start": "712200",
    "end": "714360"
  },
  {
    "text": "C+ dude imagine the tool chain can we",
    "start": "714360",
    "end": "717040"
  },
  {
    "text": "just take a second and I just want you",
    "start": "717040",
    "end": "718600"
  },
  {
    "text": "to imagine the tool chain of compiling",
    "start": "718600",
    "end": "722160"
  },
  {
    "text": "C++ rust and D you got three like what",
    "start": "722160",
    "end": "726279"
  },
  {
    "text": "kind of what what the C makes going on",
    "start": "726279",
    "end": "728959"
  },
  {
    "text": "around here no I will not IM imagine try",
    "start": "728959",
    "end": "731560"
  },
  {
    "text": "it out dude trying it out is going to",
    "start": "731560",
    "end": "732880"
  },
  {
    "text": "take me hours to probably get it",
    "start": "732880",
    "end": "734199"
  },
  {
    "text": "correctly set up in this example when",
    "start": "734199",
    "end": "735880"
  },
  {
    "text": "Maine calls food from C++ is actually",
    "start": "735880",
    "end": "738040"
  },
  {
    "text": "doing a d function that then uh that can",
    "start": "738040",
    "end": "742240"
  },
  {
    "text": "call the rust function it's a little",
    "start": "742240",
    "end": "744000"
  },
  {
    "text": "ugly but it's possible uh but it's",
    "start": "744000",
    "end": "745639"
  },
  {
    "text": "possibly the best solution available",
    "start": "745639",
    "end": "746959"
  },
  {
    "text": "that leaves both C++ and rust code in",
    "start": "746959",
    "end": "749360"
  },
  {
    "text": "pristine condition automating the glue",
    "start": "749360",
    "end": "751399"
  },
  {
    "text": "let's go nobody wants to have to write",
    "start": "751399",
    "end": "753160"
  },
  {
    "text": "massive dile no a ain't nobody want that",
    "start": "753160",
    "end": "758199"
  },
  {
    "text": "massive defile truer statements have",
    "start": "758199",
    "end": "760480"
  },
  {
    "text": "never been said in my entire lifetime",
    "start": "760480",
    "end": "763240"
  },
  {
    "text": "okay truer statements have never been",
    "start": "763240",
    "end": "765199"
  },
  {
    "text": "said in fact nobody even wants to write",
    "start": "765199",
    "end": "767240"
  },
  {
    "text": "C++ header files by",
    "start": "767240",
    "end": "770600"
  },
  {
    "text": "hand we're so back uh for that reason I",
    "start": "772199",
    "end": "776040"
  },
  {
    "text": "created a proof of concept tool called",
    "start": "776040",
    "end": "778120"
  },
  {
    "text": "polyglot that can scan C++ code and",
    "start": "778120",
    "end": "780360"
  },
  {
    "text": "generate wrappers for use from rust and",
    "start": "780360",
    "end": "783000"
  },
  {
    "text": "D my eventual goal is to also wrap the",
    "start": "783000",
    "end": "785320"
  },
  {
    "text": "other languages but as this is a",
    "start": "785320",
    "end": "787279"
  },
  {
    "text": "personal project I'm not developing",
    "start": "787279",
    "end": "788680"
  },
  {
    "text": "polyglot very quickly and it certainly",
    "start": "788680",
    "end": "790680"
  },
  {
    "text": "is nowhere near the point of being ready",
    "start": "790680",
    "end": "792600"
  },
  {
    "text": "for production use in serious projects",
    "start": "792600",
    "end": "795160"
  },
  {
    "text": "that being said it's really amazing to",
    "start": "795160",
    "end": "796639"
  },
  {
    "text": "compile and run the examples and know",
    "start": "796639",
    "end": "799279"
  },
  {
    "text": "that you are looking at multiple",
    "start": "799279",
    "end": "800480"
  },
  {
    "text": "languages working together this is cool",
    "start": "800480",
    "end": "803120"
  },
  {
    "text": "this is this is pretty dang cool like in",
    "start": "803120",
    "end": "805680"
  },
  {
    "text": "general it is super cool to see these",
    "start": "805680",
    "end": "807399"
  },
  {
    "text": "things run together so smoothly I mean",
    "start": "807399",
    "end": "809839"
  },
  {
    "text": "Zig Zig offers something really similar",
    "start": "809839",
    "end": "811800"
  },
  {
    "text": "with C right like you can actually just",
    "start": "811800",
    "end": "813680"
  },
  {
    "text": "take C projects and just just call and",
    "start": "813680",
    "end": "816600"
  },
  {
    "text": "like you can just import an entire",
    "start": "816600",
    "end": "818120"
  },
  {
    "text": "library and things just compile it just",
    "start": "818120",
    "end": "820000"
  },
  {
    "text": "works in fact I've heard some people say",
    "start": "820000",
    "end": "823480"
  },
  {
    "text": "that it's easier to build a lot of the C",
    "start": "823480",
    "end": "825720"
  },
  {
    "text": "programs by simply importing it into Zig",
    "start": "825720",
    "end": "829639"
  },
  {
    "text": "and then compiling it via Zig I'm just",
    "start": "829639",
    "end": "831600"
  },
  {
    "text": "saying I heard that it's it's just it's",
    "start": "831600",
    "end": "833399"
  },
  {
    "text": "just easier this sounds like a micro",
    "start": "833399",
    "end": "835560"
  },
  {
    "text": "front end ziggs defer is goated yeah",
    "start": "835560",
    "end": "838279"
  },
  {
    "text": "apply cold water uh to burn areas I know",
    "start": "838279",
    "end": "841120"
  },
  {
    "text": "next up I originally planned to write",
    "start": "841120",
    "end": "842519"
  },
  {
    "text": "this on a top let's see on this topic in",
    "start": "842519",
    "end": "844560"
  },
  {
    "text": "one blog post but there's a lot of",
    "start": "844560",
    "end": "846000"
  },
  {
    "text": "interesting things to cover so I'll stop",
    "start": "846000",
    "end": "847880"
  },
  {
    "text": "here for now the next installment of",
    "start": "847880",
    "end": "849440"
  },
  {
    "text": "this series will take a look at how we",
    "start": "849440",
    "end": "850759"
  },
  {
    "text": "can overcome two major roadblockers okay",
    "start": "850759",
    "end": "853519"
  },
  {
    "text": "of interop ability this is super cool",
    "start": "853519",
    "end": "855800"
  },
  {
    "text": "great job on mixing C++ and rust and",
    "start": "855800",
    "end": "859399"
  },
  {
    "text": "just using the D and and recognizing",
    "start": "859399",
    "end": "862639"
  },
  {
    "text": "that nobody wants to write the massive D",
    "start": "862639",
    "end": "865800"
  },
  {
    "text": "glue code like nobody nobody in fact I'm",
    "start": "865800",
    "end": "869320"
  },
  {
    "text": "pretty sure everything you've written",
    "start": "869320",
    "end": "870639"
  },
  {
    "text": "right here all of this is exactly how",
    "start": "870639",
    "end": "874279"
  },
  {
    "text": "react hides the Dom from everybody this",
    "start": "874279",
    "end": "876560"
  },
  {
    "text": "is pretty much this is pretty much",
    "start": "876560",
    "end": "877880"
  },
  {
    "text": "virtual Dom as far as I can tell it's",
    "start": "877880",
    "end": "879920"
  },
  {
    "text": "the same thing same thing virtual Dom",
    "start": "879920",
    "end": "882320"
  },
  {
    "text": "using D glue code same thing same",
    "start": "882320",
    "end": "884560"
  },
  {
    "text": "difference okay you wouldn't understand",
    "start": "884560",
    "end": "886800"
  },
  {
    "text": "react mentioned HTM X go let's go this",
    "start": "886800",
    "end": "889600"
  },
  {
    "text": "was great this was great this is",
    "start": "889600",
    "end": "890959"
  },
  {
    "text": "honestly one of the best articles I've",
    "start": "890959",
    "end": "892360"
  },
  {
    "text": "read I've read in a while cuz it is just",
    "start": "892360",
    "end": "894279"
  },
  {
    "text": "it I love seeing people that write",
    "start": "894279",
    "end": "896199"
  },
  {
    "text": "projects that are just nuts it is just",
    "start": "896199",
    "end": "898240"
  },
  {
    "text": "simply nuts right would I I mean is this",
    "start": "898240",
    "end": "901880"
  },
  {
    "text": "really a great idea in my head no it's",
    "start": "901880",
    "end": "904240"
  },
  {
    "text": "not a good idea but is it awesome yes it",
    "start": "904240",
    "end": "907040"
  },
  {
    "text": "is awesome D's Nuts yeah exactly D also",
    "start": "907040",
    "end": "909839"
  },
  {
    "text": "has a compiler so it can run uh you see",
    "start": "909839",
    "end": "911560"
  },
  {
    "text": "libraries okay I like this though I like",
    "start": "911560",
    "end": "913880"
  },
  {
    "text": "it C+ plus rust using D my man just made",
    "start": "913880",
    "end": "917320"
  },
  {
    "text": "the crud uh just made a crud",
    "start": "917320",
    "end": "919839"
  },
  {
    "text": "app he he dude he just he made a crud",
    "start": "919839",
    "end": "924639"
  },
  {
    "text": "app you got to put a little lower case",
    "start": "924639",
    "end": "926519"
  },
  {
    "text": "on that U it's just straight up a CR app",
    "start": "926519",
    "end": "929800"
  },
  {
    "text": "imagine programming in 50 uh years",
    "start": "929800",
    "end": "931800"
  },
  {
    "text": "totally new stuff that we do nowadays I",
    "start": "931800",
    "end": "933600"
  },
  {
    "text": "know it's wild the drust I know it's",
    "start": "933600",
    "end": "936839"
  },
  {
    "text": "it's literally de crust it's some de",
    "start": "936839",
    "end": "938959"
  },
  {
    "text": "crust well hey the name is the primagen",
    "start": "938959",
    "end": "944199"
  }
]