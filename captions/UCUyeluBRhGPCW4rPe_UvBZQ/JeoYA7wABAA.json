[
  {
    "text": "Java is an amazing language better than rust disclaimer let me preface this by",
    "start": "240",
    "end": "6879"
  },
  {
    "text": "saying my favorite language is has that I write toy languages for fun I am a PL nerd so my opinion is valid also the",
    "start": "6879",
    "end": "13440"
  },
  {
    "text": "title is like 20% bait Jesus wrote this article it's from two it's from",
    "start": "13440",
    "end": "18520"
  },
  {
    "text": "001 um I do like that by saying I am a PL nerd my opinion is valid I mean",
    "start": "18520",
    "end": "24720"
  },
  {
    "text": "really okay so so just to kind of set the scene before we go go into this article I'm going to tell you a little bit of background about my myself uh I",
    "start": "24720",
    "end": "31080"
  },
  {
    "text": "started off by doing Java Java 1.5 is where I got my education and this is actually how I uh became a software",
    "start": "31080",
    "end": "37760"
  },
  {
    "text": "engineer was via Java I learned how to do some basic game programming in Java I used to build applets for the web that",
    "start": "37760",
    "end": "42960"
  },
  {
    "text": "could drive around little things and that's how I learned my physics homework was by applying physics to a little",
    "start": "42960",
    "end": "48120"
  },
  {
    "text": "JavaScript or Java application that I made yes Java not JavaScript Java application that I made way back in the",
    "start": "48120",
    "end": "53480"
  },
  {
    "text": "day um I did not quite understand uh Java uh but I still did it and I was",
    "start": "53480",
    "end": "58640"
  },
  {
    "text": "pretty good at it and that's how I did it and so there you go that's my life and so Java always holds this warm spot",
    "start": "58640",
    "end": "64158"
  },
  {
    "text": "in my heart now as far for as rust goes is that rust was my first introduction to a hendley Milner system and when I",
    "start": "64159",
    "end": "71320"
  },
  {
    "text": "did it I thought man this is so good I absolutely love it and I did rust so hardcore for multiple years and then I",
    "start": "71320",
    "end": "78479"
  },
  {
    "text": "realized that I don't really like rust that as much as I thought I did I really like the type system but I also realized",
    "start": "78479",
    "end": "84600"
  },
  {
    "text": "that structural typing is really nice too it's just super easy so you're saying your Java biased or rust biased",
    "start": "84600",
    "end": "90439"
  },
  {
    "text": "I think I'm neither biased I don't think I really like Java but Java holds like a",
    "start": "90439",
    "end": "95560"
  },
  {
    "text": "nice place in my heart just because I have like fond nostalgic viewpoints but I remember how much classes and and all",
    "start": "95560",
    "end": "101640"
  },
  {
    "text": "the boilerplate I had to do and then rust doesn't hold nearly as fond of a place in my heart it's not as fond if",
    "start": "101640",
    "end": "107719"
  },
  {
    "text": "that makes sense my secret was always that I liked coding in Java in some sort of masochistic way everything is dead",
    "start": "107719",
    "end": "113560"
  },
  {
    "text": "simple and everything is so over boast you can never forget what anything is it is like sitting down and playing a",
    "start": "113560",
    "end": "118680"
  },
  {
    "text": "relaxing card game game of stardew Valley it flows so easily the feeling of Mastery is so easy to attain this is",
    "start": "118680",
    "end": "125200"
  },
  {
    "text": "actually a really great observation sort of the one thing that makes Java hard is that you can abstract via inheritance",
    "start": "125200",
    "end": "132520"
  },
  {
    "text": "and often when you get just enough abstraction of iio plus inheritance like",
    "start": "132520",
    "end": "137720"
  },
  {
    "text": "just enough right like when you hit that real like when you hit like Shad level clean coating where everything has like",
    "start": "137720",
    "end": "144840"
  },
  {
    "text": "multiple levels of inheritance followed by multiple levels of inversion of control all at the same time time it's",
    "start": "144840",
    "end": "150840"
  },
  {
    "text": "it's it's a genuine mess I've done it it's a mess yes it is a mess it's genuinely a mess and so when you mix those two things together it just gets",
    "start": "150840",
    "end": "157560"
  },
  {
    "text": "it just gets so difficult and I've been there so can I agree with this yes it's",
    "start": "157560",
    "end": "162720"
  },
  {
    "text": "very easy to understand what is happening in the thing you're looking at but its own levels of abstraction can",
    "start": "162720",
    "end": "167920"
  },
  {
    "text": "make it also very very difficult coding and rust is like playing chess and League at the same",
    "start": "167920",
    "end": "173480"
  },
  {
    "text": "time okay I already love this article this article the fact that we just compared stardew Valley for Java and",
    "start": "173480",
    "end": "180800"
  },
  {
    "text": "chess and League at the same time this is so good it is the same mental exertion and the same insufferable",
    "start": "180800",
    "end": "186680"
  },
  {
    "text": "people yelling at you on the internet oh my gosh oh my the man the man is stuck in bronze",
    "start": "186680",
    "end": "195000"
  },
  {
    "text": "hell is what I'm hearing rust is being stuck in bronze hell in League um the semantics are cool I love how it borrows",
    "start": "195000",
    "end": "201640"
  },
  {
    "text": "stuff from functional languages but I can I tell you a secret Java gets 75% of the way there with 10% the complexity",
    "start": "201640",
    "end": "208319"
  },
  {
    "text": "rust is Elo hell rust is ELO hell okay air handling is definitely better than rust absolutely it's definitely better",
    "start": "208319",
    "end": "214720"
  },
  {
    "text": "than rust but it is closer than most think the way erors get buried and propagated up the call stack can be",
    "start": "214720",
    "end": "220760"
  },
  {
    "text": "confusing in complex programs it can be missed this is true I mean one thing that people forget about air handling",
    "start": "220760",
    "end": "228120"
  },
  {
    "text": "and rust is that everybody uh just just goes like this like they just hit",
    "start": "228120",
    "end": "233599"
  },
  {
    "text": "question marks everywhere because it's so it's so dirt simple right it's just like Ah that's your problem you hand it",
    "start": "233599",
    "end": "240519"
  },
  {
    "text": "and then you do that through your entire application and what ends up happening oh for those that don't okay we got a",
    "start": "240519",
    "end": "245959"
  },
  {
    "text": "lot of question marks what the hell is these question marks so in Rust a question mark simply means it's the same",
    "start": "245959",
    "end": "251560"
  },
  {
    "text": "thing as doing this uh try whatever your statements are",
    "start": "251560",
    "end": "258199"
  },
  {
    "text": "catch uh with e return e right it's like the same thing that's what a question",
    "start": "258199",
    "end": "263800"
  },
  {
    "text": "mark effectively does is it's like catching your error at this point and then returning the error back out so",
    "start": "263800",
    "end": "269919"
  },
  {
    "text": "it's like it's it's very it's it's like a very small way it's returning the fun it's it's returning at one level yeah",
    "start": "269919",
    "end": "275960"
  },
  {
    "text": "Zig has the same thing with try right Zig has the exact same thing this is not this is not a critique of just rust",
    "start": "275960",
    "end": "281720"
  },
  {
    "text": "alone this is also a critique as errors as values generally speaking and so what ends up happening is that you have a",
    "start": "281720",
    "end": "287639"
  },
  {
    "text": "program that's 16 lines deep and 15 of those 16 lines go like this question",
    "start": "287639",
    "end": "293280"
  },
  {
    "text": "question question question question and then you Topline one up in Maine handles",
    "start": "293280",
    "end": "299759"
  },
  {
    "text": "an error that's like a Json decoding error and you're just",
    "start": "299759",
    "end": "305039"
  },
  {
    "text": "like and you have to like go all the way through your program and try to figure out how to properly do the thing you're",
    "start": "305840",
    "end": "311639"
  },
  {
    "text": "supposed to do and I've seen this a lot I've seen this a decent amount of times and I myself have programmed this a",
    "start": "311639",
    "end": "317639"
  },
  {
    "text": "decent amount of times and so that's the downfall of errors as values for anyone that's wondering but once you've gone",
    "start": "317639",
    "end": "323479"
  },
  {
    "text": "through that you typically write SS's values a bit better and you try to handle them as quickly as possible as",
    "start": "323479",
    "end": "329080"
  },
  {
    "text": "opposed to just simply the convenience of the question mark operator that's why I've never had problem with goes if air",
    "start": "329080",
    "end": "334840"
  },
  {
    "text": "equals nil is because as I've handled errors long enough what I realize is",
    "start": "334840",
    "end": "340080"
  },
  {
    "text": "that you can't handle most errors with just a simple question mark or a simple try you actually need to have like",
    "start": "340080",
    "end": "347080"
  },
  {
    "text": "there's like a lot you have to do you have to really think about this whole process pattern matching is better in",
    "start": "347080",
    "end": "353800"
  },
  {
    "text": "Rust but it is closer than most think Java records Java switch statements optional streams they're all basically",
    "start": "353800",
    "end": "359720"
  },
  {
    "text": "makeup for the ois oop penis oenis of the language and are all plenty",
    "start": "359720",
    "end": "366520"
  },
  {
    "text": "straightforward all the concurrent data structures in Java are much nicer to use than rust okay that's a fact of life Java's uh Java's concurrent hashmap is",
    "start": "366520",
    "end": "373400"
  },
  {
    "text": "the greatest thing that has ever existed fight me on that one fight me on that one JavaScript concurrent hashmap is so",
    "start": "373400",
    "end": "381840"
  },
  {
    "text": "good and concurrent list is so good hashmap good structure no fight why never used it oh my gosh it is it is",
    "start": "381840",
    "end": "389400"
  },
  {
    "text": "like the deao standard concurrent hashmap is how we made our livelihood concurrent hashmap is one of the best",
    "start": "389400",
    "end": "394840"
  },
  {
    "text": "ever Cube thank you for that tier three you never even had to do that baby come on Cube you're getting into a YouTube video for that one thank you very much",
    "start": "394840",
    "end": "401520"
  },
  {
    "text": "um learning rust is hard it could not be the language apcs is taught in uh the",
    "start": "401520",
    "end": "407440"
  },
  {
    "text": "first skill Gap is the borrow Checker then lifetimes then async then macros and then you put async plus uh lifetimes",
    "start": "407440",
    "end": "413919"
  },
  {
    "text": "together and then then it just then it just",
    "start": "413919",
    "end": "418240"
  },
  {
    "text": "then you have you know you have lifetimes in your TR and then just right uh the smallest first skill",
    "start": "419599",
    "end": "426319"
  },
  {
    "text": "Gap the borrow Checker was about 10 times harder than learning uh about class uh Java classes for the first time",
    "start": "426319",
    "end": "431919"
  },
  {
    "text": "about 3.5 harder uh harder than grocking monads I don't know if that's true I'd",
    "start": "431919",
    "end": "437639"
  },
  {
    "text": "have to think about that I don't know I spent two hours the problem is is that one reason why I have a hard time",
    "start": "437639",
    "end": "444960"
  },
  {
    "text": "with that statement in general is that you can't AB test that statement meaning that I learned Java and classes were",
    "start": "444960",
    "end": "451319"
  },
  {
    "text": "hard to learn recursion was hard to learn there was a lot of things that were hard to learn when I first learned",
    "start": "451319",
    "end": "456680"
  },
  {
    "text": "how to program then I spent effectively 15 years programming then I tried to",
    "start": "456680",
    "end": "461879"
  },
  {
    "text": "learn rust was rust hard or easy to learn I didn't think rust was all that",
    "start": "461879",
    "end": "468479"
  },
  {
    "text": "bad to learn like if you don't read anything and you just try to use rust it's actually really difficult if you",
    "start": "468479",
    "end": "474720"
  },
  {
    "text": "read the Rust book for about two hours and you have some level of programming",
    "start": "474720",
    "end": "481039"
  },
  {
    "text": "experience you'll realize that just single-threaded rust with no lifetimes with just",
    "start": "481039",
    "end": "486960"
  },
  {
    "text": "clone right is actually incredibly simple like it it is actually incredibly",
    "start": "486960",
    "end": "492159"
  },
  {
    "text": "simple it's not hard because the borrow Checker in its basicness is really really really simple uh I refuse to",
    "start": "492159",
    "end": "499000"
  },
  {
    "text": "believe uh people actually have issues with the borrow Checker you lost me at Reed yeah okay that's fair that's fair the problem with the Bor Checker is that",
    "start": "499000",
    "end": "505039"
  },
  {
    "text": "the code is not movable it is clear it is not clear from the code that something has been moved out no it is very very clear uh that just means you",
    "start": "505039",
    "end": "511879"
  },
  {
    "text": "don't know what's happening with rust I think that the code is very very simple to see if something is is moved or not moved circular references are still hard",
    "start": "511879",
    "end": "518800"
  },
  {
    "text": "circular references are virtually impossible you have to use like this double you have to do this like whole double uh index data structure thing and",
    "start": "518800",
    "end": "527040"
  },
  {
    "text": "it's it's it's not simple uh that's where rust breaks down is once you have to do anything that's useful rust really",
    "start": "527040",
    "end": "532760"
  },
  {
    "text": "gets hard are lifetimes part of the borrow Checker if so the borrow Checker is hard well no I mean yes no yes no the",
    "start": "532760",
    "end": "539959"
  },
  {
    "text": "you're absolutely right life are lifetimes part of the borrow Checker if so the borrow Checker is hard yes lifetimes are hard due to the borrow",
    "start": "539959",
    "end": "546800"
  },
  {
    "text": "Checker that's what I would say that's part of the borrow Checker requirement yes uh tree and Russ took me forever yes",
    "start": "546800",
    "end": "553120"
  },
  {
    "text": "that's exactly it is that once you leave the realm of just like like if you build",
    "start": "553120",
    "end": "558920"
  },
  {
    "text": "a a CLI application in Rust that all it does is read some input look up some files parse out those files and then do",
    "start": "558920",
    "end": "564240"
  },
  {
    "text": "something with them maybe do some Json and all that it's actually an incredibly nice language",
    "start": "564240",
    "end": "570480"
  },
  {
    "text": "but the moment you have to do something that's longer lived lifetimes maybe produce your own macros all that it becomes a very difficult language it's",
    "start": "570480",
    "end": "578519"
  },
  {
    "text": "about understanding the consequences that arise simple Behavior can lead to complex Behavior yeah fair fair fair and",
    "start": "578519",
    "end": "584480"
  },
  {
    "text": "factual I can still barely write complex uh async rust and if I see or have to",
    "start": "584480",
    "end": "589959"
  },
  {
    "text": "write a macro that is like hair let's see that's like a hair above the simplest examples I quit the editor",
    "start": "589959",
    "end": "595279"
  },
  {
    "text": "honestly this is such Fair critiquing I think that this is really fair critiquing with which is that writing",
    "start": "595279",
    "end": "600800"
  },
  {
    "text": "really complex acing stuff is very very hard and often you need to use macros like you know when you go like when",
    "start": "600800",
    "end": "606720"
  },
  {
    "text": "people say oh using rust for a web app is simple you're like yeah you're right because all I do is I go there and I use",
    "start": "606720",
    "end": "613279"
  },
  {
    "text": "like axom uh I use axom I look at axom and axom looks really really easy to use",
    "start": "613279",
    "end": "619160"
  },
  {
    "text": "right it's just like ah you just go in here I have a little main statement I have like a little hello world and it's",
    "start": "619160",
    "end": "624680"
  },
  {
    "text": "like bada bing bada boom it's that simple but what goes into making this work",
    "start": "624680",
    "end": "630480"
  },
  {
    "text": "is mindbending it is like absolutely mind-bending and yes they're even",
    "start": "630480",
    "end": "635560"
  },
  {
    "text": "cheating right here sort of right they they've made it very very simple uh but I'm just saying that when someone says",
    "start": "635560",
    "end": "642200"
  },
  {
    "text": "it is simple it's not that good okay so right now they arguments are the following uh that rust has a lot of",
    "start": "642200",
    "end": "648480"
  },
  {
    "text": "mental overhead which I don't actually disagree with I think rust has a lot of mental overhead but I think the ease I",
    "start": "648480",
    "end": "653680"
  },
  {
    "text": "think the thing is is that there's two different types of mental overhead Java has a different type of mental overhead than rust Java so Java's mental overhead",
    "start": "653680",
    "end": "661440"
  },
  {
    "text": "is proportional to the amount of abstraction so as as as as abstraction goes up overhead goes up right so it's",
    "start": "661440",
    "end": "668360"
  },
  {
    "text": "like that maybe it's even nonlinear I have no idea maybe it's logarithmic or",
    "start": "668360",
    "end": "673600"
  },
  {
    "text": "uh just like really small exponential I don't know it's hard to say whereas with rust it's more like features is what",
    "start": "673600",
    "end": "679680"
  },
  {
    "text": "makes it confusing if you use uh just simple single-threaded clone rust it's",
    "start": "679680",
    "end": "685839"
  },
  {
    "text": "easy if you use single-threaded lifetimes it's not all that bad if you use async clone it's not all that bad if",
    "start": "685839",
    "end": "693440"
  },
  {
    "text": "you use async you know clone lifetime things start to get difficult if you use",
    "start": "693440",
    "end": "698800"
  },
  {
    "text": "async clone lifetime traits right like each one it's like this is actually",
    "start": "698800",
    "end": "705360"
  },
  {
    "text": "pretty simple this is ah you know it's a little hard but you get it this is about this can get a little bit harder ouch",
    "start": "705360",
    "end": "712240"
  },
  {
    "text": "and then it's just like it never actually reaches this point right and then we haven't got to macros right we",
    "start": "712240",
    "end": "717959"
  },
  {
    "text": "haven't got to the final boss of Mac macros right and when you get to macros you're actually like swirling in on",
    "start": "717959",
    "end": "724040"
  },
  {
    "text": "yourself you're tearing your ACL at that point and notice that I drew absolutely",
    "start": "724040",
    "end": "730200"
  },
  {
    "text": "no dicks it's crazy but a equals D all right I would say that uh I'd say the",
    "start": "730200",
    "end": "736199"
  },
  {
    "text": "most cluster abstract class inheritance system designed in Java would not even approach the most complex",
    "start": "736199",
    "end": "742040"
  },
  {
    "text": "rust design system I don't think he's wrong on that one I'm actually having a hard time trying to like argue against",
    "start": "742040",
    "end": "748920"
  },
  {
    "text": "it like the thing is is that to be completely Fair a bunch of abstract",
    "start": "748920",
    "end": "754440"
  },
  {
    "text": "inheritance system design in Java makes me unhappy in a deep part of my soul right",
    "start": "754440",
    "end": "761639"
  },
  {
    "text": "both both are true mess yes it it makes me 20% uh it makes me not 20% sorry I just",
    "start": "761639",
    "end": "767760"
  },
  {
    "text": "read this the 20% pay it actually just makes me deeply unhappy in my soul and really complex rust is more just I get",
    "start": "767760",
    "end": "774360"
  },
  {
    "text": "frustrated than I do get like deeply unhappy so I I I'm not sure which one",
    "start": "774360",
    "end": "779480"
  },
  {
    "text": "I'd rather work in the problem I see about rust is the moment you change say one lifetime you have an entire",
    "start": "779480",
    "end": "785440"
  },
  {
    "text": "application you have to refactor and that's a real problem when it comes to these complex larger applications like",
    "start": "785440",
    "end": "790839"
  },
  {
    "text": "you want to add a single reference to a string a stir like there goes all",
    "start": "790839",
    "end": "796800"
  },
  {
    "text": "refactor refactor baby it's refactor time it's uncomfortable but not hard I would argue that it's hard rust is",
    "start": "796800",
    "end": "804000"
  },
  {
    "text": "genuinely hard when you get to a a a real a real point at at some real point",
    "start": "804000",
    "end": "810279"
  },
  {
    "text": "it goes from like like I said this is why I said like single threaded",
    "start": "810279",
    "end": "815320"
  },
  {
    "text": "single-threaded clone and single threaded lifetimes they're really like not all that hard like yeah you have to learn about lifetimes it's like it's not",
    "start": "815320",
    "end": "821880"
  },
  {
    "text": "that big of a deal there's some things that could make it hard there's definitely like a small step function maybe in here but it's like okay it's",
    "start": "821880",
    "end": "828320"
  },
  {
    "text": "still in the order of simple I would say simple but takes time but once you kind of start like applying the other things",
    "start": "828320",
    "end": "835000"
  },
  {
    "text": "such as macros or uh traits and lifetimes and async and all that stuff it's like the step function just becomes",
    "start": "835000",
    "end": "842320"
  },
  {
    "text": "increasingly larger right and it becomes super super difficult to really reason about whereas the Java way the it's a",
    "start": "842320",
    "end": "850440"
  },
  {
    "text": "runtime mess right these are different this is a compile time mess this is a runtime mess and maybe that's like a",
    "start": "850440",
    "end": "856639"
  },
  {
    "text": "personality difference but a runtime mess the nice part about a runtime mess is you only need to understand a very",
    "start": "856639",
    "end": "862360"
  },
  {
    "text": "small portion and you can kind of unfuck a a runtime mess but when you get into the compile time mess you can't really",
    "start": "862360",
    "end": "868560"
  },
  {
    "text": "unfuck it cuz that's like that's what performance requires you can't unper",
    "start": "868560",
    "end": "873600"
  },
  {
    "text": "performance that if you've seen performance-based rust it is really really hard it's really really hard it",
    "start": "873600",
    "end": "880839"
  },
  {
    "text": "makes you handle your concurrency UPF front rather than having everything is written which is nice yeah Fair I'd say",
    "start": "880839",
    "end": "886120"
  },
  {
    "text": "fair it it makes you at least at least it makes you all possible issues are upfront and in your face yes oh yes",
    "start": "886120",
    "end": "892639"
  },
  {
    "text": "there is there's yes I'm not I'm not uh dumb that uh Java definitely has some complex aspects to it I also hate the",
    "start": "892639",
    "end": "899680"
  },
  {
    "text": "skill issue argument like how you know what the ultimate skill issue is you not knowing C well enough to make memory uh",
    "start": "899680",
    "end": "907000"
  },
  {
    "text": "safe code forgety you're not going to complete Roller Coaster Tycoon and writing some plain x86 assembly",
    "start": "907000",
    "end": "913480"
  },
  {
    "text": "absolutely right like I mean it is true the skill issue argument does get a little bit annoying in the upper bounds",
    "start": "913480",
    "end": "920199"
  },
  {
    "text": "I think that there's a lot to that that is absolutely correct that the upper bounds argument no longer becomes issues",
    "start": "920199",
    "end": "925759"
  },
  {
    "text": "of just skill it's like experts arguing Who is the most expert and Roller Coaster Tycoon is a great example like",
    "start": "925759",
    "end": "932639"
  },
  {
    "text": "there are people there's somebody that could write Roller Coaster Tycoon in assembly and you're not that person you're just not you're not that person",
    "start": "932639",
    "end": "939839"
  },
  {
    "text": "how old is this article my guess is that this article is six months old the whole point of the language is to be easy",
    "start": "939839",
    "end": "945199"
  },
  {
    "text": "basically the go philosophy which I do like more than Java these days although it does not have functional stuff I want",
    "start": "945199",
    "end": "951240"
  },
  {
    "text": "Go's functional nature is not all that great you can definitely use it but it's not as nice as rust but they do have",
    "start": "951240",
    "end": "957800"
  },
  {
    "text": "ranges now you can r over objects and I think it's probably right but the abstraction level of the range in 1.22",
    "start": "957800",
    "end": "964440"
  },
  {
    "text": "is just really ugly and it doesn't feel very go and reading it is just super difficult because it requires a function",
    "start": "964440",
    "end": "969800"
  },
  {
    "text": "that returns a function that takes in a function so you got a function I'm a function plane a function disguise is",
    "start": "969800",
    "end": "974880"
  },
  {
    "text": "another function right it's very difficult like the whole point of highle languages is to never encounter such",
    "start": "974880",
    "end": "980600"
  },
  {
    "text": "skill issues it is to write working code AS F let's see fast and in a maintainable way naturally you would",
    "start": "980600",
    "end": "985920"
  },
  {
    "text": "want this to be easy this is where Java gets it right in Rust gets it wrong and what I mean by that is that Java has",
    "start": "985920",
    "end": "992000"
  },
  {
    "text": "always tried to be one thing pretty much it's an application language it's an app L it tries to be an app Ling that's all",
    "start": "992000",
    "end": "999240"
  },
  {
    "text": "it's trying to be go got this wrong to begin with because go tried to be a systems level programming language to",
    "start": "999240",
    "end": "1005399"
  },
  {
    "text": "begin with it's not a system level programming language it's not it's a it's like a networking web programming",
    "start": "1005399",
    "end": "1013120"
  },
  {
    "text": "language where it's actually really good at right it's like it's it's it's actually really good at that Java got it",
    "start": "1013120",
    "end": "1019240"
  },
  {
    "text": "right right away rust did not get it right right away like rust did not get it right because rust unfortunately goes",
    "start": "1019240",
    "end": "1026000"
  },
  {
    "text": "we're a system programming language okay this is true this is good I would agree with this we're also an application",
    "start": "1026000",
    "end": "1031640"
  },
  {
    "text": "language maybe we're also a tool language okay we're all the things",
    "start": "1031640",
    "end": "1037720"
  },
  {
    "text": "language and this is where rust really fails I think rust wins rust starts",
    "start": "1037720",
    "end": "1043640"
  },
  {
    "text": "losing generally where I think and I think tools can be also in here as well I think you are right that someone says",
    "start": "1043640",
    "end": "1049240"
  },
  {
    "text": "it rust is great for tools depends on the tools but potentially I think you're I think you're right understated take on",
    "start": "1049240",
    "end": "1055440"
  },
  {
    "text": "Rust I think just rust got it wrong and I don't think rust itself got it wrong I think the community got it wrong because",
    "start": "1055440",
    "end": "1061799"
  },
  {
    "text": "once you touch those hindley Milner types oh my gosh I do agree Henley Milner types are so good oh my gosh I",
    "start": "1061799",
    "end": "1069600"
  },
  {
    "text": "want them for everything and oh man if you can just use macros you can really make it useful for everything like for",
    "start": "1069600",
    "end": "1076840"
  },
  {
    "text": "everything right and that's what's so hard that's the problem is rust can be good for everything o camel",
    "start": "1076840",
    "end": "1083320"
  },
  {
    "text": "unfortunately functional programming will never take off in the mainstream at least I don't think functional",
    "start": "1083320",
    "end": "1088720"
  },
  {
    "text": "programming will ever take off and it's sad it really is sad cuz I think functional programming could be really",
    "start": "1088720",
    "end": "1094600"
  },
  {
    "text": "cool and everyone that does functional programming really actually likes functional programming I just don't",
    "start": "1094600",
    "end": "1101240"
  },
  {
    "text": "think it's going to take off I just don't now here are some cheap easy arguments more people know Java and more",
    "start": "1101240",
    "end": "1107360"
  },
  {
    "text": "jobs need Java tooling is is better for Java and the ecosystem is more developed okay so I actually think that",
    "start": "1107360",
    "end": "1113480"
  },
  {
    "text": "this statement right here is just fundamentally incorrect I do not think that the tooling Java versus rust",
    "start": "1113480",
    "end": "1120600"
  },
  {
    "text": "tooling is just not is just not the same right truly a Miss on this one this this",
    "start": "1120600",
    "end": "1126080"
  },
  {
    "text": "actually was a really great argument in fact I would say that this was a perfect argument against rust up until this part",
    "start": "1126080",
    "end": "1132880"
  },
  {
    "text": "skipped one this one is just a goof oh I skipped one okay all right let me here hold on let me read this sorry I skipped",
    "start": "1132880",
    "end": "1139000"
  },
  {
    "text": "one I skipped one I skipped one it is so easy to write good Java with a few guidelines it dup duplicate one uh to 2x",
    "start": "1139000",
    "end": "1145760"
  },
  {
    "text": "before abstraction no inheritance unless you are sure which by the way that means you should just never do inheritance especially no more than one layer deep",
    "start": "1145760",
    "end": "1152360"
  },
  {
    "text": "good good advice use optional over no absolutely do not get cute with your abstractions Java is so uh so easy",
    "start": "1152360",
    "end": "1159000"
  },
  {
    "text": "people feel the need to make it hard doing oop gymnastics to build an elegant systems yeah I mean the exact same",
    "start": "1159000",
    "end": "1164360"
  },
  {
    "text": "thing's true with JavaScript too right so that that critique I think is a great critique in the sense that you could",
    "start": "1164360",
    "end": "1169559"
  },
  {
    "text": "make idental identical arguments in pretty much every language that's simple cuz one of the Java javascript's biggest",
    "start": "1169559",
    "end": "1176679"
  },
  {
    "text": "downfalls is the fact that you like can Curry into a class into like you can",
    "start": "1176679",
    "end": "1182039"
  },
  {
    "text": "generate a class from a cur like you you've seen this right you've seen where people generate just the craziest code",
    "start": "1182039",
    "end": "1187559"
  },
  {
    "text": "and it all has to do with the fact that you can do it in JavaScript and the same thing with Java you can go pretty deep",
    "start": "1187559",
    "end": "1194720"
  },
  {
    "text": "with Java even though you shouldn't I love curring curring is great but curring is also the devil curring is",
    "start": "1194720",
    "end": "1200120"
  },
  {
    "text": "absolutely great during uh writing absolutely awful for debugging cuz discovering where some of your things",
    "start": "1200120",
    "end": "1205919"
  },
  {
    "text": "got curried at can be such a nightmare like curring is great to write though curring is great we can all agree",
    "start": "1205919",
    "end": "1211240"
  },
  {
    "text": "curring is just absolutely fantastic right now some cheap easy arguments more let's see hold on more people know Java",
    "start": "1211240",
    "end": "1217200"
  },
  {
    "text": "and more jobs need Java this is a great argument tooling is uh better for Java and the ecosystem is more developed",
    "start": "1217200",
    "end": "1222919"
  },
  {
    "text": "ecosystem may be more developed Fair T link not there the fact that I don't know how to set up my Vim in to be able",
    "start": "1222919",
    "end": "1229159"
  },
  {
    "text": "to run Java is example we don't know it's just awful it's just honestly it's just awful I absolutely love Jeet brain's idea Jeet brains is also",
    "start": "1229159",
    "end": "1236000"
  },
  {
    "text": "fantastic and no amount of loser Lua",
    "start": "1236000",
    "end": "1240559"
  },
  {
    "text": "neovim don't come after me I use neovim for C Zig and other low-level languages",
    "start": "1242440",
    "end": "1247840"
  },
  {
    "text": "uh config for rust will match ID support let's see okay um also if the prime is",
    "start": "1247840",
    "end": "1253559"
  },
  {
    "text": "reading this Luis sucks don't add me it's it is never enjoyable to write imagine liking the language I I used to",
    "start": "1253559",
    "end": "1260200"
  },
  {
    "text": "code roblock hacks when I was 9 years old what is",
    "start": "1260200",
    "end": "1266960"
  },
  {
    "text": "this who did this to me who did this to me who actually did this to me this is so this is so much BS first off Lua is",
    "start": "1266960",
    "end": "1274880"
  },
  {
    "text": "not a bad language okay okay don't even try that with me you it's hard to create",
    "start": "1274880",
    "end": "1280279"
  },
  {
    "text": "a mess with Lua like you can in JavaScript okay so as far as an embeddable Dynamic language Lua is",
    "start": "1280279",
    "end": "1286919"
  },
  {
    "text": "fantastic and I do okay I agree I agree that you can never Neo will never be as",
    "start": "1286919",
    "end": "1293559"
  },
  {
    "text": "great as idea okay idea is lit or or uh jet brains is is a",
    "start": "1293559",
    "end": "1299600"
  },
  {
    "text": "multi bajoran dollar company that has what 10020 developers working on it",
    "start": "1299600",
    "end": "1306400"
  },
  {
    "text": "fulltime but I will say I'm going to say something that's actually really uh impressive I did get my name spell right",
    "start": "1306400",
    "end": "1313039"
  },
  {
    "text": "let's go let's go let's go oh yeah baby oh I feel so good I feel so good right",
    "start": "1313039",
    "end": "1319960"
  },
  {
    "text": "now I was I'm no longer in shambles I'm back in okay we're back in I'm going to admit maybe I just don't know rust",
    "start": "1319960",
    "end": "1327360"
  },
  {
    "text": "enough I think if you think the tooling is better I I I'm just so I think I",
    "start": "1327360",
    "end": "1332840"
  },
  {
    "text": "think what I I read here is that he's mistaking the word tooling for idea and",
    "start": "1332840",
    "end": "1339039"
  },
  {
    "text": "I do agree jet brains is great jet brains is unimaginably a great",
    "start": "1339039",
    "end": "1348919"
  },
  {
    "text": "IDE if I were to not use neovim I would use Jeet Rings okay absolutely uh I I I",
    "start": "1348919",
    "end": "1358840"
  },
  {
    "text": "I I typically am in the neovim is greater than intellig which is greater than vs code kind of Camp that's",
    "start": "1358840",
    "end": "1364960"
  },
  {
    "text": "typically where I'm at uh if I had the right uh if I had yes cargo is greater",
    "start": "1364960",
    "end": "1370799"
  },
  {
    "text": "than Gradle hands down unironically fully absolutely if I had to use",
    "start": "1370799",
    "end": "1377600"
  },
  {
    "text": "something for zig I would likely choose neovim as I am now if I had to do something for rust",
    "start": "1377600",
    "end": "1383679"
  },
  {
    "text": "I'd probably just choose neovim if I had if I had to debug a 2 million line",
    "start": "1383679",
    "end": "1390880"
  },
  {
    "text": "project when it comes to when it comes to rust I would probably choose",
    "start": "1390880",
    "end": "1397720"
  },
  {
    "text": "intell and try to debug that because at least I'd get really great support for",
    "start": "1397720",
    "end": "1404919"
  },
  {
    "text": "debugging right why don't you let's see why don't you use jet brains then because I generally don't have any I",
    "start": "1405080",
    "end": "1411039"
  },
  {
    "text": "just don't I don't like I don't have any reason to use jet brains right you can use cotlin as Gradle",
    "start": "1411039",
    "end": "1418440"
  },
  {
    "text": "replacement now okay that still doesn't sound great to me um okay if I'm going to admit it maybe I just don't know rust",
    "start": "1418440",
    "end": "1424120"
  },
  {
    "text": "enough but I promise I have coded more rust than most of you have and I probably know it better than the average self-proclaimed rust Enthusiast and yet",
    "start": "1424120",
    "end": "1431159"
  },
  {
    "text": "if I had to write a big grug business logic project you would see me reaching for Java before rust I'm having a hard",
    "start": "1431159",
    "end": "1438120"
  },
  {
    "text": "time with with this one I don't know I don't know if I'd choose Java like I I really don't think I could choose Java",
    "start": "1438120",
    "end": "1443400"
  },
  {
    "text": "ethically okay cuz I CU you know what it doesn't matter that sure sure Java's",
    "start": "1443400",
    "end": "1449360"
  },
  {
    "text": "learning curve is like that okay sure it's easier Russ learning curve is like you know that okay I get it you would",
    "start": "1449360",
    "end": "1455799"
  },
  {
    "text": "never do that but could I ethically choose Java right could I inflict the pain of Java for years to come on",
    "start": "1455799",
    "end": "1462600"
  },
  {
    "text": "somebody or should I inflate the pain of blue hair and lifetimes on somebody",
    "start": "1462600",
    "end": "1468880"
  },
  {
    "text": "okay which one do I choose if I had to choose it's it's it's a hard choice but I feel like I'd have to choose the blue",
    "start": "1468880",
    "end": "1474399"
  },
  {
    "text": "hair in lifetimes over the Java okay the correct answer is to use go well that's not the option we don't have the option",
    "start": "1474399",
    "end": "1480720"
  },
  {
    "text": "here okay that's not we don't have the option getting paid for easy stuff is what Java is Java stuff yeah Elixir",
    "start": "1480720",
    "end": "1486640"
  },
  {
    "text": "please I've never done Elixir so I can't actually say that that Elixir is is great I know Ryan Winchester's in",
    "start": "1486640",
    "end": "1494360"
  },
  {
    "text": "shambles right now the final thing about Russ that is not even particularly elegant is nice to look at really isn't",
    "start": "1494360",
    "end": "1501360"
  },
  {
    "text": "there like a ton of symbols in hll APL bqn UI UA is nice to look at when I",
    "start": "1501360",
    "end": "1507960"
  },
  {
    "text": "want to puzzle I write in those languages because I admire the mathematical abstraction rust is marred",
    "start": "1507960",
    "end": "1513320"
  },
  {
    "text": "with the compiler marred with low-level BS that makes it ugly that does not make it satisfying in this way if you love",
    "start": "1513320",
    "end": "1520000"
  },
  {
    "text": "language design or the beauty in programming languages rust is not even good at that it's not beautiful it is",
    "start": "1520000",
    "end": "1525240"
  },
  {
    "text": "not as useful as people Proclaim and it occupies such a small use case that the language is",
    "start": "1525240",
    "end": "1531720"
  },
  {
    "text": "mid I don't find Rust ugly uh even when I do systems programming like lowle stuff I want to manage my own me let's",
    "start": "1531720",
    "end": "1537919"
  },
  {
    "text": "see I just want to manage my own memory I do not want to beg the compiler to let me write code I just want to allocate",
    "start": "1537919",
    "end": "1543000"
  },
  {
    "text": "stuff and put it into there C is fine for this I'll try Zig later I think Zig is actually an absolutely fantastic",
    "start": "1543000",
    "end": "1548360"
  },
  {
    "text": "systems level language again I've been saying this for a little bit now that I've actually used it a little bit I will say that the one thing that's",
    "start": "1548360",
    "end": "1553799"
  },
  {
    "text": "amazing about Zig is that it has null protection which is good but you can interrupt really easily with code and",
    "start": "1553799",
    "end": "1560720"
  },
  {
    "text": "then you can say hey this thing can be null like you just have all these ways to make things nice and it it's simple",
    "start": "1560720",
    "end": "1566799"
  },
  {
    "text": "but I will say that zigg fundamentally is I think Zig is more ugly overall than rust I just don't think Zig is that",
    "start": "1566799",
    "end": "1573679"
  },
  {
    "text": "pretty of a language I find it like there's things I hate Zig is fine it's not ugly I there's things that I just",
    "start": "1573679",
    "end": "1580000"
  },
  {
    "text": "hate about it right uh like I hate the fact I know this is such a trivial thing to hate but I hate the fact that I have",
    "start": "1580000",
    "end": "1586080"
  },
  {
    "text": "to surround my booing logic with with",
    "start": "1586080",
    "end": "1591640"
  },
  {
    "text": "parentheses I know hey we're talking about ugly beauty is in the eye of the beholder here okay this is eye of the",
    "start": "1591640",
    "end": "1599200"
  },
  {
    "text": "beholder okay you can't you you can't judge me don't judge me I love that give",
    "start": "1599200",
    "end": "1605440"
  },
  {
    "text": "me all the parentheses I can I would say that this is fantastic being able to do slices treating C pointers or like C",
    "start": "1605440",
    "end": "1613000"
  },
  {
    "text": "arrays with a length is just beautiful and then being able to instead of doing pointer arithmetic slicing into it to",
    "start": "1613000",
    "end": "1619760"
  },
  {
    "text": "let it do the own uh pointer arithmetic beautiful like I I do think that that is beautiful uh I think capture groups are",
    "start": "1619760",
    "end": "1628120"
  },
  {
    "text": "interesting right so for those that don't know what capture groups are um this right here is a nulli meaning that",
    "start": "1628120",
    "end": "1635320"
  },
  {
    "text": "this thing could be null it might be null you don't know if it's null and so if you do this you then have to capture",
    "start": "1635320",
    "end": "1642440"
  },
  {
    "text": "it and capture like I like the concept of capture groups yeah I know I'm on",
    "start": "1642440",
    "end": "1647600"
  },
  {
    "text": "your team capture groups are great uh ipis uh but I don't know if I like the",
    "start": "1647600",
    "end": "1652880"
  },
  {
    "text": "looks of them right again this is me I'm just saying this is me this is beauty okay this is beauty just let me have my",
    "start": "1652880",
    "end": "1658880"
  },
  {
    "text": "own Beauty here okay anything else that I don't like about it I don't know if there's anything else that I really don't like about I think everything else",
    "start": "1658880",
    "end": "1664320"
  },
  {
    "text": "is pretty much just fine uh I don't like the fact that if you go like this like you can't like you have to use a",
    "start": "1664320",
    "end": "1672240"
  },
  {
    "text": "constant or you have to use a variable or you have to explicitly assign it to the underscore like sometimes I just",
    "start": "1672240",
    "end": "1678279"
  },
  {
    "text": "want to like underscore a variable cuz I know I'm going to use it in a little bit like I find that just annoying I find",
    "start": "1678279",
    "end": "1684000"
  },
  {
    "text": "that the fact that they treat warnings as errors can be sometimes frustrating",
    "start": "1684000",
    "end": "1689919"
  },
  {
    "text": "you know what I mean uh I'm not saying rust is always bad it has a small but limited number of use cases again I",
    "start": "1689919",
    "end": "1695919"
  },
  {
    "text": "think uh systems level if you're worried about that but I think Zig is winning in the systems department and I think tools",
    "start": "1695919",
    "end": "1701279"
  },
  {
    "text": "and I'd be surprised if go doesn't win in the tool department but maybe maybe I could be I could be proved wrong I'm glad to be proved wrong it's just all",
    "start": "1701279",
    "end": "1707720"
  },
  {
    "text": "comes down to to convenience and how large you can make a project because you know the problem is is that a lot of us are arguing whether or not rust is good",
    "start": "1707720",
    "end": "1713600"
  },
  {
    "text": "or bad or these things are good and bad and it goes down to um us making judgments about languages that are made",
    "start": "1713600",
    "end": "1720720"
  },
  {
    "text": "in a project of 2,000 lines or less like right now I'm at 4,000 lines of Zig and",
    "start": "1720720",
    "end": "1726200"
  },
  {
    "text": "I'm starting to say okay this is what I'm seeing about Zig and I like the way it scales right in Cloud rust is good uh",
    "start": "1726200",
    "end": "1732919"
  },
  {
    "text": "for faster than go yes but the thing is is that you're not writing faster than go go rust like I hate to tell you this",
    "start": "1732919",
    "end": "1739399"
  },
  {
    "text": "you're not doing it you're not doing it well you're not going to do it well",
    "start": "1739399",
    "end": "1744720"
  },
  {
    "text": "right yes rust is good for uh code predictability and safety this is much this is much more reasonable of an",
    "start": "1744720",
    "end": "1750080"
  },
  {
    "text": "argument right you're not that guy pal you're not that guy like I hate to tell you this but you just did an arc mutex",
    "start": "1750080",
    "end": "1756440"
  },
  {
    "text": "on a hashmap okay you're not the guy you're Arc mutex in your hashmap sorry bud sorry for example I wrote a bot that",
    "start": "1756440",
    "end": "1764440"
  },
  {
    "text": "helped buy things rather quickly in 2020 to 2021 provided I was a to do the sum of the captas I needed I needed it to be",
    "start": "1764440",
    "end": "1771720"
  },
  {
    "text": "performant robust and the scope wait hold on is he admitting is hold on are",
    "start": "1771720",
    "end": "1777840"
  },
  {
    "text": "we admitting to buying graphics cards faster than everybody else is he is he admitting to",
    "start": "1777840",
    "end": "1784440"
  },
  {
    "text": "being a scalper are we admitting to scalping scalper admitted here boo this",
    "start": "1784440",
    "end": "1793480"
  },
  {
    "text": "man okay police get the police on here okay maybe he's not talking about that maybe maybe he's not buying that let's",
    "start": "1796279",
    "end": "1802159"
  },
  {
    "text": "just pretend that whatever's going on he's actually just buying anime waifu pillows okay he could just be a crypt",
    "start": "1802159",
    "end": "1808159"
  },
  {
    "text": "Miner he's just buying hey he's just buying anime waifu pillows okay provided I was awake to do some of the captas I",
    "start": "1808159",
    "end": "1813760"
  },
  {
    "text": "needed it to be performant robust and the scope was just uh simple enough even though it was async where I knew I would",
    "start": "1813760",
    "end": "1819880"
  },
  {
    "text": "not need a lot of code but a mediocre amount it occupied the space just before the complexity curve went uh as Asm",
    "start": "1819880",
    "end": "1827159"
  },
  {
    "text": "totic the other the other use case is for writing toy languages it does super",
    "start": "1827159",
    "end": "1832760"
  },
  {
    "text": "well uh and it's best let's see at its best it feels like using a CNC mill to",
    "start": "1832760",
    "end": "1838880"
  },
  {
    "text": "machine a precise gear like sorry I don't touch grass",
    "start": "1838880",
    "end": "1844320"
  },
  {
    "text": "honestly I don't even know what that means like I don't I don't know what that means honestly both times you need an injection mold and some plastic but",
    "start": "1844320",
    "end": "1852000"
  },
  {
    "text": "most times you need an inject y again I it's hard for me to understand this but yeah shop lingo not get me p ps check",
    "start": "1852000",
    "end": "1857559"
  },
  {
    "text": "out Buzz implementation I did in Java I have not found a similar solution in Java anywhere on the internet it shows",
    "start": "1857559",
    "end": "1863000"
  },
  {
    "text": "the power of modern Java it's actually shockingly uh Rusty right except for you",
    "start": "1863000",
    "end": "1868519"
  },
  {
    "text": "can't do a range I'd love to see a range instead of a an integer yeah so this is just stream this thing map to object",
    "start": "1868519",
    "end": "1874880"
  },
  {
    "text": "entry set stream I'm not sure what uh these these must be like your uh what's it called your PR I I don't know what a",
    "start": "1874880",
    "end": "1881200"
  },
  {
    "text": "predicate engine integer is but I assume it just means that if these two things equal then yeah I mean this just seems",
    "start": "1881200",
    "end": "1887440"
  },
  {
    "text": "again this is kind of like that whole Java thing you know how Java is just so effing",
    "start": "1887440",
    "end": "1893039"
  },
  {
    "text": "confusing yeah it takes an in returns a pool yeah that makes sense okay it takes an INT and it returns a pool but still",
    "start": "1893039",
    "end": "1899000"
  },
  {
    "text": "like there's just this is just so very Java like you have to know all the Java things to really get this this makes",
    "start": "1899000",
    "end": "1905960"
  },
  {
    "text": "sense right filter you have an entry you get the key you test the X coming into it you're closing over the X right here",
    "start": "1905960",
    "end": "1913200"
  },
  {
    "text": "right uh you map the G value you reduce a string Con cat uh or else one of these",
    "start": "1913200",
    "end": "1918799"
  },
  {
    "text": "values of X okay I think I see what's happening this makes sense so you take all of your predicates which is going to",
    "start": "1918799",
    "end": "1924440"
  },
  {
    "text": "be this you're going to filter over all of them which could which is going to produce a set of zero or more you're",
    "start": "1924440",
    "end": "1931279"
  },
  {
    "text": "then going to map over those and get the uh value out of the entry meaning you're going to get Fizz or Buzz you're going",
    "start": "1931279",
    "end": "1937440"
  },
  {
    "text": "to concat all those strings so it makes literally like fizz Buzz with no separator and then if if it's empty or",
    "start": "1937440",
    "end": "1943519"
  },
  {
    "text": "there's no or yeah the iterator itself is empty then you'll simply do the string value of x then at the end of",
    "start": "1943519",
    "end": "1951120"
  },
  {
    "text": "that you just join all of those with an with a space which by the way it should be a new line okay for for Fizz buzzing",
    "start": "1951120",
    "end": "1958000"
  },
  {
    "text": "correctly it should be a new line procedural is just so much easier and faster generally speaking Yeah I I agree",
    "start": "1958000",
    "end": "1965360"
  },
  {
    "text": "I agree with that I think that this is there's a lot of mental overhead here I think this actually highlights one of",
    "start": "1965360",
    "end": "1970799"
  },
  {
    "text": "the points that I've disliked generally about a lot of modern programming is that I'm not sure if this is actually any easier than procedural I don't think",
    "start": "1970799",
    "end": "1978039"
  },
  {
    "text": "this is any easier to read like I I really I mean I think it's really easy to mutate I think that if you wanted to",
    "start": "1978039",
    "end": "1983679"
  },
  {
    "text": "add another like another another monatic operation on top of your sweet map right",
    "start": "1983679",
    "end": "1989120"
  },
  {
    "text": "these are monads right do I even understand monads do I even understand monads that you're able to abstract and",
    "start": "1989120",
    "end": "1994720"
  },
  {
    "text": "like add in say you could add one to it you could do something very easy to it agreed but I find that it's also just",
    "start": "1994720",
    "end": "2002279"
  },
  {
    "text": "really there's a lot of thought that you have to think you have to walk through each step just",
    "start": "2002279",
    "end": "2008679"
  },
  {
    "text": "more right it looks like the Builder pattern I'm a newbie it looks like the Builder pattern yeah that that's a good way to think of it it's kind of like a",
    "start": "2008679",
    "end": "2014399"
  },
  {
    "text": "builder pattern in a in a sense one could argue that a that uh iterator operations is kind of like a builder",
    "start": "2014399",
    "end": "2020080"
  },
  {
    "text": "pattern why do we use classes for interview coding I don't know it's a let's say or a builder pattern of",
    "start": "2020080",
    "end": "2025919"
  },
  {
    "text": "functions it's just a good way to think about it function calls are expensive we just don't care anymore because modern CPUs are fast that's fair I mean",
    "start": "2025919",
    "end": "2031960"
  },
  {
    "text": "generally speaking you should not be caring about your function uh about the amount of function calls you're making",
    "start": "2031960",
    "end": "2037279"
  },
  {
    "text": "generally speaking that's just probably not going to be your level of programming now there is some people who",
    "start": "2037279",
    "end": "2042720"
  },
  {
    "text": "are doing real programming that actually have to be concerned about function calls I've been there once by accident",
    "start": "2042720",
    "end": "2049000"
  },
  {
    "text": "uh when I was doing a supercomputer research project uh I found that a getter one of my Getters was slowing",
    "start": "2049000",
    "end": "2055760"
  },
  {
    "text": "down the supercomputers like a ability to execute like 100x because I had this",
    "start": "2055760",
    "end": "2061760"
  },
  {
    "text": "getter everywhere and it was old Java before they optimized Getters so the uh the optimized getter was not being being",
    "start": "2061760",
    "end": "2067878"
  },
  {
    "text": "executed and it would actually just actually do a function call to get out of value and it was doing that constant",
    "start": "2067879",
    "end": "2073280"
  },
  {
    "text": "time like all the time and it was littered throughout the program and so when you're making literally a thousand",
    "start": "2073280",
    "end": "2079200"
  },
  {
    "text": "extra function calls on every iteration you're making trillions of iterations it makes a huge difference so I literally",
    "start": "2079200",
    "end": "2085960"
  },
  {
    "text": "just made it public instantaneous like 100x speed up and this was again Java",
    "start": "2085960",
    "end": "2091158"
  },
  {
    "text": "1.5 so this is a long time ago right this is a this is a long long time ago can Java inline function calls I'm sure",
    "start": "2091159",
    "end": "2097240"
  },
  {
    "text": "can it this Point that's like a classic optimization for an interpreted language and Java in some sense is an interpreted",
    "start": "2097240",
    "end": "2102720"
  },
  {
    "text": "language yeah modern jvm should take care of those cases absolutely modern jvm does all that but back then that was",
    "start": "2102720",
    "end": "2107880"
  },
  {
    "text": "not a thing I work in scientific Computing with HBC we deal with a lot of this good programming and abstraction",
    "start": "2107880",
    "end": "2112920"
  },
  {
    "text": "tend to be very expensive yes it does it's very very expensive if you're doing something that requires a lot of execution but most of us don't do",
    "start": "2112920",
    "end": "2119240"
  },
  {
    "text": "something that's executing super super fast right like even my uh even even like my game engine that runs at it runs",
    "start": "2119240",
    "end": "2127400"
  },
  {
    "text": "at like what 15x realtime speed 100x real time speed some outstanding amount",
    "start": "2127400",
    "end": "2132920"
  },
  {
    "text": "of real-time speed uh Improvement even that I doing I'm doing things I",
    "start": "2132920",
    "end": "2138160"
  },
  {
    "text": "intentionally know are very very inappropriate like one thing that I'm doing that's just just absolutely ridiculous is that my game State object",
    "start": "2138160",
    "end": "2146079"
  },
  {
    "text": "I never deallocate uh a list item I just keep adding to the list and when I do",
    "start": "2146079",
    "end": "2152280"
  },
  {
    "text": "update I call through the entire list and if any of them are dead I I",
    "start": "2152280",
    "end": "2157720"
  },
  {
    "text": "just skip it like it is intentionally bad absolutely intentionally bad but",
    "start": "2157720",
    "end": "2163319"
  },
  {
    "text": "this thing still runs vastly faster I do want to improve this I have an idea effectively what I'm going to do is I'm going to turn this from a tower list",
    "start": "2163319",
    "end": "2169160"
  },
  {
    "text": "creep list projectile list and I want to do just a a simple comp time um what's it called pool uh turn it into a pool",
    "start": "2169160",
    "end": "2176480"
  },
  {
    "text": "where if two values are if it's dead dead then I will be able to say okay this thing is dead and so I'll have a",
    "start": "2176480",
    "end": "2183680"
  },
  {
    "text": "function call that's expected via comp time called dead and if it can be called as dead that it will be called as dead I",
    "start": "2183680",
    "end": "2188960"
  },
  {
    "text": "think it's a pretty good idea do you just describe pooling I literally just describe pooling yeah that's why I said",
    "start": "2188960",
    "end": "2194400"
  },
  {
    "text": "I'm going to do it as a pooling right it's just an object Pooler built in uh Zig and I now feel able to write that",
    "start": "2194400",
    "end": "2199960"
  },
  {
    "text": "code whereas if you would have asked me a month ago to write that code I couldn't do it Colin D nuts absolutely",
    "start": "2199960",
    "end": "2205280"
  },
  {
    "text": "and by the way I did see this comments uh where are you I know his prime ignores any of my comments with Colin no",
    "start": "2205280",
    "end": "2211680"
  },
  {
    "text": "I am not ignoring your comment I'm reading your comment and then ignoring it because you can cotlin these nuts",
    "start": "2211680",
    "end": "2218119"
  },
  {
    "text": "all right well let's go back to this article on how's crowd strike doing oh my gosh it's going way up PS please",
    "start": "2218119",
    "end": "2224079"
  },
  {
    "text": "write your applications and go instead of java otherwise you might get brainwashed by ARX Java if this happens no cure can be found okay I like this",
    "start": "2224079",
    "end": "2230359"
  },
  {
    "text": "guy again this guy's absolutely dude this guy's absolutely absolutely based absolutely based uh RX Java is a curse",
    "start": "2230359",
    "end": "2238720"
  },
  {
    "text": "RX itself is generally a curse go over java absolutely code girl",
    "start": "2238720",
    "end": "2243920"
  },
  {
    "text": "absolutely I generally agree with the statement I think that most things aren't that complicated and your type system does not need to be as",
    "start": "2243920",
    "end": "2249760"
  },
  {
    "text": "complicated as you think it should be I real talk I think most of you don't write complicated enough code I know I",
    "start": "2249760",
    "end": "2257359"
  },
  {
    "text": "mean I know I know you want your code to be complicated enough to need uh a",
    "start": "2257359",
    "end": "2264680"
  },
  {
    "text": "hendley Milner system it just doesn't most of the time you write really simple code you have like a buffer you have",
    "start": "2264680",
    "end": "2271760"
  },
  {
    "text": "some data you have like five objects you have a couple function calls that go out to a remote server and have some sort of",
    "start": "2271760",
    "end": "2278160"
  },
  {
    "text": "database that you're putting stuff into right like it's it's it's really not that complicated and what I mean by that",
    "start": "2278160",
    "end": "2283319"
  },
  {
    "text": "is that even this thing right here which actually has an entire system that is designed for like Huffman and coding and",
    "start": "2283319",
    "end": "2289240"
  },
  {
    "text": "testing and doing all this stuff and all of this good stuff even this as simple",
    "start": "2289240",
    "end": "2294359"
  },
  {
    "text": "and or as as as much as it is this stuff is dirt simple to do and I don't need a fancy type system I really don't need a",
    "start": "2294359",
    "end": "2301480"
  },
  {
    "text": "fancy type system and this thing this Huffman is actually doing a bite writer that could write at different bite",
    "start": "2301480",
    "end": "2306800"
  },
  {
    "text": "widths right The Stride is programmable and even this is simple to do right I",
    "start": "2306800",
    "end": "2312040"
  },
  {
    "text": "think a lot of people overestimate that they need complicated types but I will say this I will say",
    "start": "2312040",
    "end": "2318040"
  },
  {
    "text": "this that if you're using go this could be a this could actually be a great short if you want to defeat go all you",
    "start": "2318040",
    "end": "2323760"
  },
  {
    "text": "have to do is create an array of an integer and then a string go type system",
    "start": "2323760",
    "end": "2329160"
  },
  {
    "text": "defeated you want to defeat python all you have to do create a for Loop you",
    "start": "2329160",
    "end": "2334599"
  },
  {
    "text": "want to defeat JavaScript just use react it's a good one by the way very happy",
    "start": "2334599",
    "end": "2339920"
  },
  {
    "text": "about it I'm very I'm very happy about that I'm very happy about it not funny dude it's but it's so correct defeating",
    "start": "2339920",
    "end": "2345200"
  },
  {
    "text": "go with a a heterogeneous type list is just like the the the most awful thing in the universe tell me tell me that's",
    "start": "2345200",
    "end": "2352800"
  },
  {
    "text": "not true by the way every time I make fun of JavaScript and react so many people's feelings get hurt and the",
    "start": "2352800",
    "end": "2358040"
  },
  {
    "text": "reason why is that in short form content I have a theory that in short form content the amount of people that watch",
    "start": "2358040",
    "end": "2363920"
  },
  {
    "text": "shorts that are inexperienced versus experienced it vastly disproportionately",
    "start": "2363920",
    "end": "2369560"
  },
  {
    "text": "goes into inexperience than it does experience people and so when you say something about react they go why you",
    "start": "2369560",
    "end": "2376520"
  },
  {
    "text": "make fun of react and then they get really angry you know kind of makes sense I think it just generally makes sense uh what you call an overlab vend",
    "start": "2376520",
    "end": "2383720"
  },
  {
    "text": "diagram yeah yeah based yeah free real estate absolutely free real estate I'm in here just crushing some good real estate here uh anyways uh but for those",
    "start": "2383720",
    "end": "2391400"
  },
  {
    "text": "that are saying I can just do an interface an interface array dude come on we all know that that sucks come on can we can we agree that",
    "start": "2391400",
    "end": "2399280"
  },
  {
    "text": "that sucks runtime reflection is just super annoying no a list of interface no",
    "start": "2399280",
    "end": "2405200"
  },
  {
    "text": "that's not life that's not life it's not good life it's not a good life okay is",
    "start": "2405200",
    "end": "2410359"
  },
  {
    "text": "isn't that just a v box of Dy tee effectively that's vebox D interface is",
    "start": "2410359",
    "end": "2415400"
  },
  {
    "text": "effectively that Zig does get one thing right about that is that it it does at least do compile time generation of",
    "start": "2415400",
    "end": "2421359"
  },
  {
    "text": "functions which is pretty cool void oh my gosh no no we will not",
    "start": "2421359",
    "end": "2427480"
  },
  {
    "text": "do we will not do what what is this do I have this correctly that this is a a function that returns a void pointer",
    "start": "2427480",
    "end": "2435599"
  },
  {
    "text": "that takes in a void pointer is this a pointer to a function that takes in a am",
    "start": "2435599",
    "end": "2440839"
  },
  {
    "text": "I correct on that it's a pointer to a function that that returns a void pointer that takes in a void",
    "start": "2440839",
    "end": "2446280"
  },
  {
    "text": "pointer or an any opeg as they call it in Zig that's how you do it any opeg I I",
    "start": "2446280",
    "end": "2453560"
  },
  {
    "text": "missed the thing I forgot you type my name what's the point nobody knows void pointer needs to do uh needs to to do in",
    "start": "2453560",
    "end": "2460240"
  },
  {
    "text": "a fire wait what oh die in a fire uh void pointers don't need to die in a fire void pointers make perfect sense",
    "start": "2460240",
    "end": "2466680"
  },
  {
    "text": "like sometimes you just have memory and you don't know what the hell it is you're just given a length a",
    "start": "2466680",
    "end": "2474319"
  },
  {
    "text": "length plus a pointer like what's the problem with that I don't think that's a problem I honestly don't think that's a",
    "start": "2474319",
    "end": "2480440"
  },
  {
    "text": "problem like sometimes you don't even need to know right like you actually don't need to know what's in the memory",
    "start": "2480440",
    "end": "2486560"
  },
  {
    "text": "isn't that just a point no no no a pointer is just uh an array like an address a fat pointer is a length and an",
    "start": "2486560",
    "end": "2494040"
  },
  {
    "text": "address right I I like fat pointers fat pointers make perfect sense because then",
    "start": "2494040",
    "end": "2499680"
  },
  {
    "text": "at least you know not only are you pointed here but you know how big that thing is like that's great avoid double",
    "start": "2499680",
    "end": "2507040"
  },
  {
    "text": "star now that okay now that on the other hand that's bad your pointer is so fat dude damn you really think so who whoa",
    "start": "2507040",
    "end": "2513960"
  },
  {
    "text": "it's not it wasn't me saying that my pointer was fat okay hey hey I received a compliment and I ran with it okay I",
    "start": "2513960",
    "end": "2521200"
  },
  {
    "text": "don't think you can come over here and tell me how to live my life okay you know why Karen cuz the",
    "start": "2521200",
    "end": "2527520"
  },
  {
    "text": "name it's the fat pointer aen",
    "start": "2527520",
    "end": "2532480"
  }
]