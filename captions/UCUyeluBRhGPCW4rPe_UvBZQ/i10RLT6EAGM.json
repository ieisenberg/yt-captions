[
  {
    "text": "all right how slow is Javascript",
    "start": "780",
    "end": "3480"
  },
  {
    "text": "I've gotten a lot of flack for using",
    "start": "3480",
    "end": "5400"
  },
  {
    "text": "JavaScript for a lot of these projects",
    "start": "5400",
    "end": "7020"
  },
  {
    "text": "and possibly rightly so historically",
    "start": "7020",
    "end": "9540"
  },
  {
    "text": "it's been a super slow language not one",
    "start": "9540",
    "end": "11580"
  },
  {
    "text": "that you'd associate with game",
    "start": "11580",
    "end": "12660"
  },
  {
    "text": "development and I'm actually not sure",
    "start": "12660",
    "end": "14340"
  },
  {
    "text": "how fast it is I'm not actually a",
    "start": "14340",
    "end": "15660"
  },
  {
    "text": "JavaScript programmer I just kind of",
    "start": "15660",
    "end": "17039"
  },
  {
    "text": "play one of these videos so I'm kind of",
    "start": "17039",
    "end": "18600"
  },
  {
    "text": "curious what we find here a very brief",
    "start": "18600",
    "end": "20400"
  },
  {
    "text": "history of JavaScript apparently life",
    "start": "20400",
    "end": "22140"
  },
  {
    "text": "for JavaScript started out around 1993 a",
    "start": "22140",
    "end": "24359"
  },
  {
    "text": "programmer for an escape name",
    "start": "24359",
    "end": "27439"
  },
  {
    "text": "I feel like the history of JavaScript",
    "start": "29519",
    "end": "33660"
  },
  {
    "text": "has been told so many times at this",
    "start": "33660",
    "end": "36420"
  },
  {
    "text": "point",
    "start": "36420",
    "end": "38539"
  },
  {
    "text": "it might be the most told story",
    "start": "39480",
    "end": "42239"
  },
  {
    "text": "in the programming world",
    "start": "42239",
    "end": "45120"
  },
  {
    "text": "and Brendan I crapped it out over the",
    "start": "45120",
    "end": "46620"
  },
  {
    "text": "course of 10 days which is pretty",
    "start": "46620",
    "end": "47940"
  },
  {
    "text": "amazing given its popularity today we'll",
    "start": "47940",
    "end": "49800"
  },
  {
    "text": "fast forward a bit bunch of crap",
    "start": "49800",
    "end": "50940"
  },
  {
    "text": "happened over the years JavaScript got",
    "start": "50940",
    "end": "52379"
  },
  {
    "text": "standardized through ECMO International",
    "start": "52379",
    "end": "53640"
  },
  {
    "text": "none of this is particularly and then",
    "start": "53640",
    "end": "55860"
  },
  {
    "text": "JavaScript got stabbed in the Buns by",
    "start": "55860",
    "end": "58559"
  },
  {
    "text": "Microsoft",
    "start": "58559",
    "end": "59640"
  },
  {
    "text": "why do I know this voice I have no idea",
    "start": "59640",
    "end": "61500"
  },
  {
    "text": "yeah Microsoft uh really hurt a lot of",
    "start": "61500",
    "end": "63960"
  },
  {
    "text": "ecmascript they were really trying to",
    "start": "63960",
    "end": "65460"
  },
  {
    "text": "make jscript or whatever it was called",
    "start": "65460",
    "end": "67020"
  },
  {
    "text": "the thing what's ecma",
    "start": "67020",
    "end": "70700"
  },
  {
    "text": "irrelevant to us so let's just kind of",
    "start": "70799",
    "end": "72360"
  },
  {
    "text": "skim through here so in 2006 Google",
    "start": "72360",
    "end": "74280"
  },
  {
    "text": "hired this guy Lars back to build a new",
    "start": "74280",
    "end": "76260"
  },
  {
    "text": "JavaScript engine that would go on to",
    "start": "76260",
    "end": "77580"
  },
  {
    "text": "become V8 and this is where things got",
    "start": "77580",
    "end": "79020"
  },
  {
    "text": "interesting okay this is where",
    "start": "79020",
    "end": "80400"
  },
  {
    "text": "JavaScript changed from being this",
    "start": "80400",
    "end": "81540"
  },
  {
    "text": "painfully slow interpreted language to",
    "start": "81540",
    "end": "83040"
  },
  {
    "text": "one that had compilation I like it",
    "start": "83040",
    "end": "85320"
  },
  {
    "text": "here's a seemingly endless stream of",
    "start": "85320",
    "end": "86759"
  },
  {
    "text": "clever optimizations has trickled out",
    "start": "86759",
    "end": "88259"
  },
  {
    "text": "from the VA team dramatically improving",
    "start": "88259",
    "end": "89820"
  },
  {
    "text": "performance year after year",
    "start": "89820",
    "end": "91740"
  },
  {
    "text": "I do think that that is just not said",
    "start": "91740",
    "end": "93780"
  },
  {
    "text": "enough",
    "start": "93780",
    "end": "94680"
  },
  {
    "text": "V8 is truly the reason why JavaScript is",
    "start": "94680",
    "end": "97619"
  },
  {
    "text": "awesome",
    "start": "97619",
    "end": "98400"
  },
  {
    "text": "V8",
    "start": "98400",
    "end": "99860"
  },
  {
    "text": "made what",
    "start": "99860",
    "end": "102479"
  },
  {
    "text": "a crappy language the VA team was so",
    "start": "102479",
    "end": "105900"
  },
  {
    "text": "talented they took",
    "start": "105900",
    "end": "107939"
  },
  {
    "text": "one of the worst languages of all time",
    "start": "107939",
    "end": "111060"
  },
  {
    "text": "and made it pretty fast",
    "start": "111060",
    "end": "113939"
  },
  {
    "text": "like they did a pretty good job like no",
    "start": "113939",
    "end": "117780"
  },
  {
    "text": "one could be upset about that I should",
    "start": "117780",
    "end": "119820"
  },
  {
    "text": "really cover that mic arm shouldn't I",
    "start": "119820",
    "end": "121320"
  },
  {
    "text": "like they did that they did that",
    "start": "121320",
    "end": "126899"
  },
  {
    "text": "imagine how hard that had to be uh you",
    "start": "126899",
    "end": "129899"
  },
  {
    "text": "sound like you're friends with someone",
    "start": "129899",
    "end": "131099"
  },
  {
    "text": "who worked on the VA team",
    "start": "131099",
    "end": "133739"
  },
  {
    "text": "in 2019 at the international JavaScript",
    "start": "133739",
    "end": "136500"
  },
  {
    "text": "conference there was a talk called speed",
    "start": "136500",
    "end": "137879"
  },
  {
    "text": "speed JavaScript versus C plus versus",
    "start": "137879",
    "end": "139860"
  },
  {
    "text": "webassembly by one of Google's Engineers",
    "start": "139860",
    "end": "141420"
  },
  {
    "text": "oh I saw that talking because they had",
    "start": "141420",
    "end": "143040"
  },
  {
    "text": "some benchmarks where they showed",
    "start": "143040",
    "end": "144060"
  },
  {
    "text": "roughly how close JavaScript and C plus",
    "start": "144060",
    "end": "145680"
  },
  {
    "text": "plus was for the same algorithm now I",
    "start": "145680",
    "end": "147540"
  },
  {
    "text": "don't have the source they used but I I",
    "start": "147540",
    "end": "149160"
  },
  {
    "text": "never liked this comparison because it's",
    "start": "149160",
    "end": "151200"
  },
  {
    "text": "so single-minded uh or single like I",
    "start": "151200",
    "end": "154680"
  },
  {
    "text": "hate single implementation you know like",
    "start": "154680",
    "end": "156660"
  },
  {
    "text": "if you watch any of my main channel",
    "start": "156660",
    "end": "158040"
  },
  {
    "text": "YouTube stuff you always see how I talk",
    "start": "158040",
    "end": "160319"
  },
  {
    "text": "about like I've done a lot of",
    "start": "160319",
    "end": "161940"
  },
  {
    "text": "performance things and when it comes to",
    "start": "161940",
    "end": "163860"
  },
  {
    "text": "like building something actually even if",
    "start": "163860",
    "end": "166440"
  },
  {
    "text": "that actually is small the difference",
    "start": "166440",
    "end": "168959"
  },
  {
    "text": "between JavaScript and something else is",
    "start": "168959",
    "end": "171420"
  },
  {
    "text": "is just you know it's just massive",
    "start": "171420",
    "end": "176340"
  },
  {
    "text": "it's just massive they got roughly a 2X",
    "start": "176340",
    "end": "179940"
  },
  {
    "text": "difference which is pretty good and",
    "start": "179940",
    "end": "181440"
  },
  {
    "text": "we'll use that as a baseline for our own",
    "start": "181440",
    "end": "182819"
  },
  {
    "text": "comparisons let's write some code by the",
    "start": "182819",
    "end": "185519"
  },
  {
    "text": "way quick reminder to subscribe and if",
    "start": "185519",
    "end": "187140"
  },
  {
    "text": "you want to support me making future",
    "start": "187140",
    "end": "188099"
  },
  {
    "text": "videos",
    "start": "188099",
    "end": "189200"
  },
  {
    "text": "most games I've ever worked on don't",
    "start": "189200",
    "end": "191099"
  },
  {
    "text": "involve millions of string manipulations",
    "start": "191099",
    "end": "192540"
  },
  {
    "text": "and stuff it tends to be mostly math and",
    "start": "192540",
    "end": "194340"
  },
  {
    "text": "manipulation of data structures so we'll",
    "start": "194340",
    "end": "195780"
  },
  {
    "text": "stick to that side of things first up",
    "start": "195780",
    "end": "197400"
  },
  {
    "text": "I'll start with the soup he just hit us",
    "start": "197400",
    "end": "199319"
  },
  {
    "text": "with so much math that I don't even know",
    "start": "199319",
    "end": "200760"
  },
  {
    "text": "what happened I just looked at the math",
    "start": "200760",
    "end": "202440"
  },
  {
    "text": "saw some integrals",
    "start": "202440",
    "end": "205940"
  },
  {
    "text": "realize I'm not very good at integrals",
    "start": "206120",
    "end": "208319"
  },
  {
    "text": "you know what I mean I'm just not that",
    "start": "208319",
    "end": "209879"
  },
  {
    "text": "good at integrals I thought I was good",
    "start": "209879",
    "end": "211260"
  },
  {
    "text": "at integrals I'm not good at integrals",
    "start": "211260",
    "end": "212819"
  },
  {
    "text": "super basic Loop gotta have a basic Loop",
    "start": "212819",
    "end": "214860"
  },
  {
    "text": "let's just Loop over a bunch of crap and",
    "start": "214860",
    "end": "216239"
  },
  {
    "text": "sum it up for something no reason other",
    "start": "216239",
    "end": "217980"
  },
  {
    "text": "than it's easy you can see the C plus",
    "start": "217980",
    "end": "219420"
  },
  {
    "text": "plus code is pretty simple just a for",
    "start": "219420",
    "end": "220920"
  },
  {
    "text": "Loop which code here is virtually",
    "start": "220920",
    "end": "222840"
  },
  {
    "text": "identical just a simple Loop send them",
    "start": "222840",
    "end": "224640"
  },
  {
    "text": "up wrap the loop in performance.now",
    "start": "224640",
    "end": "226200"
  },
  {
    "text": "calls it runs in about 22 milliseconds",
    "start": "226200",
    "end": "228360"
  },
  {
    "text": "or so on the first run and then 17",
    "start": "228360",
    "end": "229620"
  },
  {
    "text": "milliseconds and later runs I'm guessing",
    "start": "229620",
    "end": "231540"
  },
  {
    "text": "all right so the thing I don't like",
    "start": "231540",
    "end": "233280"
  },
  {
    "text": "about about this type of optimization",
    "start": "233280",
    "end": "235200"
  },
  {
    "text": "that that he's speaking about or just",
    "start": "235200",
    "end": "237120"
  },
  {
    "text": "even this comparison in general is that",
    "start": "237120",
    "end": "241140"
  },
  {
    "text": "one of the biggest problems here is that",
    "start": "241140",
    "end": "243959"
  },
  {
    "text": "there is",
    "start": "243959",
    "end": "245780"
  },
  {
    "text": "no like interaction with what makes",
    "start": "245780",
    "end": "249120"
  },
  {
    "text": "JavaScript bad you know what I mean it's",
    "start": "249120",
    "end": "251340"
  },
  {
    "text": "like such a tight experience that",
    "start": "251340",
    "end": "254099"
  },
  {
    "text": "javascript's big part that it falls",
    "start": "254099",
    "end": "256079"
  },
  {
    "text": "apart on is not this like yeah the jits",
    "start": "256079",
    "end": "259139"
  },
  {
    "text": "really fast like it did a really good",
    "start": "259139",
    "end": "260880"
  },
  {
    "text": "job",
    "start": "260880",
    "end": "261780"
  },
  {
    "text": "but where things aren't good",
    "start": "261780",
    "end": "264120"
  },
  {
    "text": "is when you start allocating and",
    "start": "264120",
    "end": "266160"
  },
  {
    "text": "deallocating notice that we're really",
    "start": "266160",
    "end": "267600"
  },
  {
    "text": "just not doing much for allocations or",
    "start": "267600",
    "end": "269520"
  },
  {
    "text": "de-allocations uh because it's a small",
    "start": "269520",
    "end": "271620"
  },
  {
    "text": "number so they called us me right so",
    "start": "271620",
    "end": "273540"
  },
  {
    "text": "that's stored in a single pointer where",
    "start": "273540",
    "end": "275220"
  },
  {
    "text": "the first bit is a zero I think it is",
    "start": "275220",
    "end": "277740"
  },
  {
    "text": "and that signifies that it's a small",
    "start": "277740",
    "end": "279720"
  },
  {
    "text": "integer stored in there so it's like",
    "start": "279720",
    "end": "280979"
  },
  {
    "text": "it's such like a small nothing that",
    "start": "280979",
    "end": "283080"
  },
  {
    "text": "happens in the JavaScript engine whereas",
    "start": "283080",
    "end": "285720"
  },
  {
    "text": "like the moment you start allocating",
    "start": "285720",
    "end": "288000"
  },
  {
    "text": "anything",
    "start": "288000",
    "end": "290699"
  },
  {
    "text": "that's when everything starts breaking",
    "start": "290699",
    "end": "292919"
  },
  {
    "text": "down not only that but you have to like",
    "start": "292919",
    "end": "294180"
  },
  {
    "text": "let it run for a while like let it run",
    "start": "294180",
    "end": "296220"
  },
  {
    "text": "for five minutes doing something and",
    "start": "296220",
    "end": "298800"
  },
  {
    "text": "then watch how much does garbage",
    "start": "298800",
    "end": "300660"
  },
  {
    "text": "collection make a real difference in the",
    "start": "300660",
    "end": "303120"
  },
  {
    "text": "performance of say a server uh I mean",
    "start": "303120",
    "end": "306479"
  },
  {
    "text": "real",
    "start": "306479",
    "end": "308720"
  },
  {
    "text": "and optimization's kicking in to really",
    "start": "309780",
    "end": "312000"
  },
  {
    "text": "absolutely nobody surprised the AC plus",
    "start": "312000",
    "end": "313919"
  },
  {
    "text": "version is faster compiled with gcc-o3",
    "start": "313919",
    "end": "316500"
  },
  {
    "text": "which is the highest optimization level",
    "start": "316500",
    "end": "317759"
  },
  {
    "text": "we get about 15 milliseconds what's",
    "start": "317759",
    "end": "319860"
  },
  {
    "text": "pretty cool is that it's not that much",
    "start": "319860",
    "end": "321780"
  },
  {
    "text": "faster than the JavaScript version only",
    "start": "321780",
    "end": "323340"
  },
  {
    "text": "a two millisecond lead how about we try",
    "start": "323340",
    "end": "325020"
  },
  {
    "text": "more complex calculations let's emulate",
    "start": "325020",
    "end": "327060"
  },
  {
    "text": "a basically well again he's saying don't",
    "start": "327060",
    "end": "328680"
  },
  {
    "text": "do it for uh game stuff because it's",
    "start": "328680",
    "end": "331259"
  },
  {
    "text": "slow I would assume",
    "start": "331259",
    "end": "333860"
  },
  {
    "text": "that you create objects and you throw",
    "start": "333860",
    "end": "336840"
  },
  {
    "text": "away objects and stuff like that I think",
    "start": "336840",
    "end": "338280"
  },
  {
    "text": "the garbage collection can be a really",
    "start": "338280",
    "end": "339600"
  },
  {
    "text": "big problem",
    "start": "339600",
    "end": "341039"
  },
  {
    "text": "and so I'm curious like you have to not",
    "start": "341039",
    "end": "343800"
  },
  {
    "text": "create garbage to make it work out",
    "start": "343800",
    "end": "345419"
  },
  {
    "text": "JavaScript I think you could make one in",
    "start": "345419",
    "end": "347400"
  },
  {
    "text": "JavaScript that's like a simple game",
    "start": "347400",
    "end": "348720"
  },
  {
    "text": "because you just have to make sure that",
    "start": "348720",
    "end": "350280"
  },
  {
    "text": "you statically allocate everything and",
    "start": "350280",
    "end": "352199"
  },
  {
    "text": "then you reuse all of your objects and",
    "start": "352199",
    "end": "354419"
  },
  {
    "text": "you make sure you never have to use",
    "start": "354419",
    "end": "355440"
  },
  {
    "text": "delete right you have to have some sort",
    "start": "355440",
    "end": "356699"
  },
  {
    "text": "of like good way to make pools so that",
    "start": "356699",
    "end": "358800"
  },
  {
    "text": "way you don't accidentally make stuff in",
    "start": "358800",
    "end": "360360"
  },
  {
    "text": "like all these terrible ways blah blah",
    "start": "360360",
    "end": "361919"
  },
  {
    "text": "blah uh because you never want to like",
    "start": "361919",
    "end": "363960"
  },
  {
    "text": "delete or do something like this basic",
    "start": "363960",
    "end": "365280"
  },
  {
    "text": "glsl Shader with a supply normal in",
    "start": "365280",
    "end": "367199"
  },
  {
    "text": "color and use a directional light look",
    "start": "367199",
    "end": "368759"
  },
  {
    "text": "something like this chunk of code",
    "start": "368759",
    "end": "369720"
  },
  {
    "text": "JavaScript write shaders at one point",
    "start": "369720",
    "end": "373139"
  },
  {
    "text": "I have no idea how they work anymore I",
    "start": "373139",
    "end": "375120"
  },
  {
    "text": "just it was like a decade and a half ago",
    "start": "375120",
    "end": "377100"
  },
  {
    "text": "now they're just magic to me when I look",
    "start": "377100",
    "end": "379020"
  },
  {
    "text": "at code I'm just like wow",
    "start": "379020",
    "end": "381060"
  },
  {
    "text": "it's magic",
    "start": "381060",
    "end": "382740"
  },
  {
    "text": "we'll start by generating some random",
    "start": "382740",
    "end": "384060"
  },
  {
    "text": "data to serve as the frame buffer and",
    "start": "384060",
    "end": "385500"
  },
  {
    "text": "then just a big loop over all the data",
    "start": "385500",
    "end": "386940"
  },
  {
    "text": "to do the dot products multiplications",
    "start": "386940",
    "end": "388560"
  },
  {
    "text": "Etc Plus Code about as simple as it can",
    "start": "388560",
    "end": "391020"
  },
  {
    "text": "be pretty much the same Loop and I've",
    "start": "391020",
    "end": "392400"
  },
  {
    "text": "got a vector class here just to simplify",
    "start": "392400",
    "end": "393720"
  },
  {
    "text": "things a bit not unlike the JavaScript",
    "start": "393720",
    "end": "395400"
  },
  {
    "text": "version we'll inline a bunch of stuff",
    "start": "395400",
    "end": "396780"
  },
  {
    "text": "not that it matters my understanding is",
    "start": "396780",
    "end": "398699"
  },
  {
    "text": "that these are hints at best and",
    "start": "398699",
    "end": "400020"
  },
  {
    "text": "ultimately",
    "start": "400020",
    "end": "401180"
  },
  {
    "text": "please don't mind me I let this run a",
    "start": "401180",
    "end": "403380"
  },
  {
    "text": "bunch of times and took the best of the",
    "start": "403380",
    "end": "404340"
  },
  {
    "text": "runs that gives the jet compiler time to",
    "start": "404340",
    "end": "405780"
  },
  {
    "text": "do its thing identify an inline stuff",
    "start": "405780",
    "end": "407220"
  },
  {
    "text": "best foot forward and all that anyway",
    "start": "407220",
    "end": "408720"
  },
  {
    "text": "got around 110 milliseconds or so 109",
    "start": "408720",
    "end": "411120"
  },
  {
    "text": "milliseconds on the best run give or",
    "start": "411120",
    "end": "412500"
  },
  {
    "text": "take a few milliseconds here or there",
    "start": "412500",
    "end": "413699"
  },
  {
    "text": "maybe the first result is any indication",
    "start": "413699",
    "end": "415380"
  },
  {
    "text": "the C plus plus version will be around",
    "start": "415380",
    "end": "416699"
  },
  {
    "text": "95 milliseconds but the margin of",
    "start": "416699",
    "end": "418800"
  },
  {
    "text": "Victory is pretty substantial on the C",
    "start": "418800",
    "end": "420120"
  },
  {
    "text": "plus plus side 27 milliseconds so that",
    "start": "420120",
    "end": "422460"
  },
  {
    "text": "comes in at over four times faster for",
    "start": "422460",
    "end": "424680"
  },
  {
    "text": "this just the most basic version of the",
    "start": "424680",
    "end": "426240"
  },
  {
    "text": "loop with gcc-o3 let's do another",
    "start": "426240",
    "end": "428460"
  },
  {
    "text": "example so I think that was that one was",
    "start": "428460",
    "end": "430680"
  },
  {
    "text": "getting closer I wonder if he was uh",
    "start": "430680",
    "end": "432300"
  },
  {
    "text": "creating new objects or was he still",
    "start": "432300",
    "end": "435479"
  },
  {
    "text": "reusing the same objects and the real",
    "start": "435479",
    "end": "437699"
  },
  {
    "text": "question is is he perform you know like",
    "start": "437699",
    "end": "439080"
  },
  {
    "text": "again it just always comes down to",
    "start": "439080",
    "end": "440400"
  },
  {
    "text": "garbage collection memory and allocation",
    "start": "440400",
    "end": "441780"
  },
  {
    "text": "and all that so if I guess as long as",
    "start": "441780",
    "end": "443880"
  },
  {
    "text": "you're reusing everything maybe it's you",
    "start": "443880",
    "end": "445860"
  },
  {
    "text": "know you could argue it's not as as big",
    "start": "445860",
    "end": "448259"
  },
  {
    "text": "of a problem as it is uh",
    "start": "448259",
    "end": "450720"
  },
  {
    "text": "I mean I can buy that argument game",
    "start": "450720",
    "end": "452940"
  },
  {
    "text": "updates tend to involve updating many",
    "start": "452940",
    "end": "454500"
  },
  {
    "text": "entities manipulating data structures",
    "start": "454500",
    "end": "456120"
  },
  {
    "text": "that sort of thing and I did something",
    "start": "456120",
    "end": "457319"
  },
  {
    "text": "similar with these spatial hash grids a",
    "start": "457319",
    "end": "458699"
  },
  {
    "text": "while back check out that video for the",
    "start": "458699",
    "end": "460080"
  },
  {
    "text": "JavaScript implementation but let's",
    "start": "460080",
    "end": "461460"
  },
  {
    "text": "quickly Port that yeah anything special",
    "start": "461460",
    "end": "463800"
  },
  {
    "text": "no clever optimizations or anything this",
    "start": "463800",
    "end": "465539"
  },
  {
    "text": "is just a straightforward line-by-line",
    "start": "465539",
    "end": "467160"
  },
  {
    "text": "Port of the JavaScript version to try to",
    "start": "467160",
    "end": "468780"
  },
  {
    "text": "be fair so I'll run the JavaScript",
    "start": "468780",
    "end": "470039"
  },
  {
    "text": "Benchmark here and we can check out the",
    "start": "470039",
    "end": "471180"
  },
  {
    "text": "results I got around 167 milliseconds or",
    "start": "471180",
    "end": "473460"
  },
  {
    "text": "so for five nearby and eight",
    "start": "473460",
    "end": "474539"
  },
  {
    "text": "milliseconds for the update roughly now",
    "start": "474539",
    "end": "476280"
  },
  {
    "text": "when we run the C plus plus version we",
    "start": "476280",
    "end": "477840"
  },
  {
    "text": "get around 86 milliseconds per fight",
    "start": "477840",
    "end": "479460"
  },
  {
    "text": "nearby and six milliseconds for the",
    "start": "479460",
    "end": "480720"
  },
  {
    "text": "update so actually not that I do feel",
    "start": "480720",
    "end": "483120"
  },
  {
    "text": "like you can't you shouldn't Port things",
    "start": "483120",
    "end": "484860"
  },
  {
    "text": "one for one like line of Code by line of",
    "start": "484860",
    "end": "487620"
  },
  {
    "text": "code you should try to use like the",
    "start": "487620",
    "end": "489419"
  },
  {
    "text": "general constructs that are good in one",
    "start": "489419",
    "end": "491940"
  },
  {
    "text": "language versus another right like so if",
    "start": "491940",
    "end": "493500"
  },
  {
    "text": "you just did like a straight",
    "start": "493500",
    "end": "495120"
  },
  {
    "text": "you know transport to rust you'd want to",
    "start": "495120",
    "end": "497520"
  },
  {
    "text": "use Rusty type principles and if you you",
    "start": "497520",
    "end": "500220"
  },
  {
    "text": "know just like we were talking about",
    "start": "500220",
    "end": "501240"
  },
  {
    "text": "earlier like if you're using buying docs",
    "start": "501240",
    "end": "503220"
  },
  {
    "text": "or box dine uh trait references to make",
    "start": "503220",
    "end": "507660"
  },
  {
    "text": "it work out in in Rust you're going to",
    "start": "507660",
    "end": "509699"
  },
  {
    "text": "be doing things that are just inherently",
    "start": "509699",
    "end": "511080"
  },
  {
    "text": "slower than not doing it that way and so",
    "start": "511080",
    "end": "514200"
  },
  {
    "text": "you know is it should you always write",
    "start": "514200",
    "end": "516599"
  },
  {
    "text": "things one you know yeah idiomatic",
    "start": "516599",
    "end": "518580"
  },
  {
    "text": "translations not transliteration so a",
    "start": "518580",
    "end": "520560"
  },
  {
    "text": "lot of times we do like for these things",
    "start": "520560",
    "end": "522180"
  },
  {
    "text": "a lot of times we we would do something",
    "start": "522180",
    "end": "523560"
  },
  {
    "text": "like a transliteration where you're",
    "start": "523560",
    "end": "524940"
  },
  {
    "text": "actually just line by line transforming",
    "start": "524940",
    "end": "527700"
  },
  {
    "text": "that line of code into a different",
    "start": "527700",
    "end": "529980"
  },
  {
    "text": "language whereas you should do like",
    "start": "529980",
    "end": "531779"
  },
  {
    "text": "meaning for meaning",
    "start": "531779",
    "end": "533700"
  },
  {
    "text": "translations Greg Greg leptos Greg",
    "start": "533700",
    "end": "536160"
  },
  {
    "text": "understands",
    "start": "536160",
    "end": "538279"
  },
  {
    "text": "in line with the twice the speed claim",
    "start": "538279",
    "end": "540480"
  },
  {
    "text": "from the VA team what does this all mean",
    "start": "540480",
    "end": "542220"
  },
  {
    "text": "all in all not too bad of a showing for",
    "start": "542220",
    "end": "544320"
  },
  {
    "text": "JavaScript for a straight comparison",
    "start": "544320",
    "end": "545880"
  },
  {
    "text": "with C plus plus code we got very",
    "start": "545880",
    "end": "547320"
  },
  {
    "text": "roughly around two to four times the",
    "start": "547320",
    "end": "548580"
  },
  {
    "text": "time for JavaScript to run versus the",
    "start": "548580",
    "end": "550260"
  },
  {
    "text": "equivalent C plus plus code a bit slower",
    "start": "550260",
    "end": "552060"
  },
  {
    "text": "than what Google said but at the same",
    "start": "552060",
    "end": "553260"
  },
  {
    "text": "time meaning for meaning called it yeah",
    "start": "553260",
    "end": "554940"
  },
  {
    "text": "you did pick you always call I don't",
    "start": "554940",
    "end": "556320"
  },
  {
    "text": "know how you do it how do you always",
    "start": "556320",
    "end": "557700"
  },
  {
    "text": "call it how do you know I'm still pretty",
    "start": "557700",
    "end": "559860"
  },
  {
    "text": "amazing given this is supposed to be a",
    "start": "559860",
    "end": "561180"
  },
  {
    "text": "slow web language let's screw around a",
    "start": "561180",
    "end": "562920"
  },
  {
    "text": "bit more when I compare the dot product",
    "start": "562920",
    "end": "564540"
  },
  {
    "text": "version I had written several versions",
    "start": "564540",
    "end": "565860"
  },
  {
    "text": "comparing performance the version shown",
    "start": "565860",
    "end": "567720"
  },
  {
    "text": "wasn't the fastest but it also wasn't",
    "start": "567720",
    "end": "568980"
  },
  {
    "text": "the slowest I played with versions that",
    "start": "568980",
    "end": "570839"
  },
  {
    "text": "were straight array implementations so",
    "start": "570839",
    "end": "572279"
  },
  {
    "text": "normal in color was a three element",
    "start": "572279",
    "end": "573540"
  },
  {
    "text": "array I also tried it out with objects",
    "start": "573540",
    "end": "575100"
  },
  {
    "text": "with XYZ properties and they all were",
    "start": "575100",
    "end": "577260"
  },
  {
    "text": "roughly in the same ballpark give or",
    "start": "577260",
    "end": "578580"
  },
  {
    "text": "take there might be small differences",
    "start": "578580",
    "end": "579660"
  },
  {
    "text": "but I kind of lumped them together I",
    "start": "579660",
    "end": "581399"
  },
  {
    "text": "also wrote a four of loop instead of a",
    "start": "581399",
    "end": "582959"
  },
  {
    "text": "classic for Loop since I'd heard",
    "start": "582959",
    "end": "584100"
  },
  {
    "text": "somewhere that they were slower but I",
    "start": "584100",
    "end": "585240"
  },
  {
    "text": "didn't see a world of difference here",
    "start": "585240",
    "end": "586140"
  },
  {
    "text": "yeah when I tried just using one big",
    "start": "586140",
    "end": "588000"
  },
  {
    "text": "typed array of floats I managed to get",
    "start": "588000",
    "end": "589740"
  },
  {
    "text": "the loop down to 17 Mile seconds or so",
    "start": "589740",
    "end": "591300"
  },
  {
    "text": "there you go these typed arrays you get",
    "start": "591300",
    "end": "593339"
  },
  {
    "text": "a lot of benefits that you just don't",
    "start": "593339",
    "end": "594660"
  },
  {
    "text": "get in regular JavaScript and so I think",
    "start": "594660",
    "end": "597000"
  },
  {
    "text": "this is really important thing that he's",
    "start": "597000",
    "end": "598200"
  },
  {
    "text": "calling out right here type to raise in",
    "start": "598200",
    "end": "600000"
  },
  {
    "text": "JavaScript allow you to have uh like a",
    "start": "600000",
    "end": "603180"
  },
  {
    "text": "big continuous block of memory and so if",
    "start": "603180",
    "end": "605580"
  },
  {
    "text": "you're doing operations especially if",
    "start": "605580",
    "end": "606839"
  },
  {
    "text": "you're doing operations that can be",
    "start": "606839",
    "end": "607980"
  },
  {
    "text": "easily jitted you could you could get",
    "start": "607980",
    "end": "609720"
  },
  {
    "text": "some pretty amazing things coming out of",
    "start": "609720",
    "end": "611220"
  },
  {
    "text": "this I think that's where you're going",
    "start": "611220",
    "end": "612360"
  },
  {
    "text": "to see a lot of the benefits in the",
    "start": "612360",
    "end": "613500"
  },
  {
    "text": "JavaScript world I wonder if I could",
    "start": "613500",
    "end": "615240"
  },
  {
    "text": "make a JavaScript program perform really",
    "start": "615240",
    "end": "617640"
  },
  {
    "text": "well",
    "start": "617640",
    "end": "619940"
  },
  {
    "text": "you know just a thought so about two and",
    "start": "621779",
    "end": "624360"
  },
  {
    "text": "a half times lower than the C plus plus",
    "start": "624360",
    "end": "625440"
  },
  {
    "text": "version albeit at the cost of some",
    "start": "625440",
    "end": "627120"
  },
  {
    "text": "readability but there's some performance",
    "start": "627120",
    "end": "628800"
  },
  {
    "text": "foot guns floating around too when I",
    "start": "628800",
    "end": "630300"
  },
  {
    "text": "tried map and four each their",
    "start": "630300",
    "end": "631800"
  },
  {
    "text": "performance was seriously unimpressive a",
    "start": "631800",
    "end": "633779"
  },
  {
    "text": "straight Loop was a way bigger win but",
    "start": "633779",
    "end": "635700"
  },
  {
    "text": "wait there's more we're not done with C",
    "start": "635700",
    "end": "637560"
  },
  {
    "text": "plus plus yet because normally in games",
    "start": "637560",
    "end": "639060"
  },
  {
    "text": "we have a bottleneck that involves",
    "start": "639060",
    "end": "640200"
  },
  {
    "text": "turning through a bunch of data doing",
    "start": "640200",
    "end": "641220"
  },
  {
    "text": "calculations often the first instinct is",
    "start": "641220",
    "end": "643200"
  },
  {
    "text": "to go out and break out the intrinsics",
    "start": "643200",
    "end": "644279"
  },
  {
    "text": "and vectorize that section of code so",
    "start": "644279",
    "end": "646079"
  },
  {
    "text": "what I did with the first Loop was I",
    "start": "646079",
    "end": "647459"
  },
  {
    "text": "just quickly cropped out an SSE and an",
    "start": "647459",
    "end": "648959"
  },
  {
    "text": "AVX version so purchasing four eight",
    "start": "648959",
    "end": "650640"
  },
  {
    "text": "floats at a time",
    "start": "650640",
    "end": "651839"
  },
  {
    "text": "did clearly smarter than me the end",
    "start": "651839",
    "end": "654839"
  },
  {
    "text": "result was that our time goes from 15",
    "start": "654839",
    "end": "656040"
  },
  {
    "text": "milliseconds to six milliseconds for the",
    "start": "656040",
    "end": "657720"
  },
  {
    "text": "soc version and four milliseconds for",
    "start": "657720",
    "end": "659279"
  },
  {
    "text": "the AVX version so not bad that makes it",
    "start": "659279",
    "end": "661500"
  },
  {
    "text": "over four times faster than the JS",
    "start": "661500",
    "end": "662760"
  },
  {
    "text": "version the second Loop the Shader same",
    "start": "662760",
    "end": "664800"
  },
  {
    "text": "thing I went ahead and made a simple SSE",
    "start": "664800",
    "end": "666120"
  },
  {
    "text": "version got a little bit lazy about",
    "start": "666120",
    "end": "667440"
  },
  {
    "text": "making an AVX version but still saw an",
    "start": "667440",
    "end": "669000"
  },
  {
    "text": "immediate Improvement the time went down",
    "start": "669000",
    "end": "670440"
  },
  {
    "text": "quite a bit but wait there's even more",
    "start": "670440",
    "end": "672480"
  },
  {
    "text": "we're using gcc-o3 for the tests but at",
    "start": "672480",
    "end": "674940"
  },
  {
    "text": "these games I've worked on typically",
    "start": "674940",
    "end": "676079"
  },
  {
    "text": "they ship with unsafe math optimizations",
    "start": "676079",
    "end": "677640"
  },
  {
    "text": "so we'll go ahead and swap that for dash",
    "start": "677640",
    "end": "679200"
  },
  {
    "text": "o fast one thing to keep in mind is that",
    "start": "679200",
    "end": "681180"
  },
  {
    "text": "floating Point operations aren't",
    "start": "681180",
    "end": "682140"
  },
  {
    "text": "associative meaning brackets a plus b",
    "start": "682140",
    "end": "684060"
  },
  {
    "text": "plus C does not equal to a plus bracket",
    "start": "684060",
    "end": "686640"
  },
  {
    "text": "B plus C since floats are inherently",
    "start": "686640",
    "end": "688920"
  },
  {
    "text": "inexact by specifying so fast we've",
    "start": "688920",
    "end": "691260"
  },
  {
    "text": "given the compiler permission to break",
    "start": "691260",
    "end": "692399"
  },
  {
    "text": "strict standards compliance and go ahead",
    "start": "692399",
    "end": "693899"
  },
  {
    "text": "and reorder floating Point statements",
    "start": "693899",
    "end": "695220"
  },
  {
    "text": "for games this is generally fine",
    "start": "695220",
    "end": "696839"
  },
  {
    "text": "calculations just need to be close",
    "start": "696839",
    "end": "698279"
  },
  {
    "text": "broken Math called it it's enough when",
    "start": "698279",
    "end": "701040"
  },
  {
    "text": "we do that the first Loop the scalar",
    "start": "701040",
    "end": "702420"
  },
  {
    "text": "basic version drops to four milliseconds",
    "start": "702420",
    "end": "703860"
  },
  {
    "text": "on par with the AVX version meaning I",
    "start": "703860",
    "end": "705480"
  },
  {
    "text": "kind of wasted time writing that when",
    "start": "705480",
    "end": "706560"
  },
  {
    "text": "the compiler's version was just as good",
    "start": "706560",
    "end": "707880"
  },
  {
    "text": "it looks like the basic Shader dropped",
    "start": "707880",
    "end": "709920"
  },
  {
    "text": "down to 22 milliseconds from 27 so got a",
    "start": "709920",
    "end": "712079"
  },
  {
    "text": "decent win there and I'm not clear I saw",
    "start": "712079",
    "end": "713880"
  },
  {
    "text": "much of a win on the spatial hashgrid",
    "start": "713880",
    "end": "715140"
  },
  {
    "text": "code but maybe I didn't run it enough",
    "start": "715140",
    "end": "716220"
  },
  {
    "text": "times",
    "start": "716220",
    "end": "717120"
  },
  {
    "text": "so what does this all mean this wasn't",
    "start": "717120",
    "end": "719040"
  },
  {
    "text": "meant to be the most scientific of tests",
    "start": "719040",
    "end": "720420"
  },
  {
    "text": "I mostly just wanted to get a rough idea",
    "start": "720420",
    "end": "721800"
  },
  {
    "text": "of JavaScript and relative performance",
    "start": "721800",
    "end": "723060"
  },
  {
    "text": "that being said honestly JavaScript",
    "start": "723060",
    "end": "725040"
  },
  {
    "text": "surprised me a bit I mean I've been",
    "start": "725040",
    "end": "726600"
  },
  {
    "text": "screwing around for the last year in my",
    "start": "726600",
    "end": "727740"
  },
  {
    "text": "spare time on random projects to see",
    "start": "727740",
    "end": "728940"
  },
  {
    "text": "what it could do but I'm very much not a",
    "start": "728940",
    "end": "730800"
  },
  {
    "text": "JavaScript programmer I spent most of my",
    "start": "730800",
    "end": "732600"
  },
  {
    "text": "career in C plus plus with a few years",
    "start": "732600",
    "end": "733860"
  },
  {
    "text": "in Python if you couldn't tell another",
    "start": "733860",
    "end": "735420"
  },
  {
    "text": "JavaScript code it's definitely not that",
    "start": "735420",
    "end": "737579"
  },
  {
    "text": "slow crappy language that it was back in",
    "start": "737579",
    "end": "739140"
  },
  {
    "text": "the 2000s and the Jet compiler is just",
    "start": "739140",
    "end": "741000"
  },
  {
    "text": "going to keep getting better and better",
    "start": "741000",
    "end": "741959"
  },
  {
    "text": "over time so expect the difference",
    "start": "741959",
    "end": "743459"
  },
  {
    "text": "between C plus and JS to keep narrowing",
    "start": "743459",
    "end": "745140"
  },
  {
    "text": "in the future as the VA team comes up",
    "start": "745140",
    "end": "746880"
  },
  {
    "text": "with ever more clever ways of generating",
    "start": "746880",
    "end": "748140"
  },
  {
    "text": "machine code the C plus plus was that",
    "start": "748140",
    "end": "750420"
  },
  {
    "text": "Turtle doing drugs",
    "start": "750420",
    "end": "752220"
  },
  {
    "text": "is that what I'm saying right now are we",
    "start": "752220",
    "end": "753959"
  },
  {
    "text": "having some sort of totally drug problem",
    "start": "753959",
    "end": "755459"
  },
  {
    "text": "going on I don't know about this this",
    "start": "755459",
    "end": "758640"
  },
  {
    "text": "doesn't feel right kids don't be doing",
    "start": "758640",
    "end": "760740"
  },
  {
    "text": " okay I've heard I've heard a lot of",
    "start": "760740",
    "end": "763260"
  },
  {
    "text": "kids have been doing jit these days on",
    "start": "763260",
    "end": "764880"
  },
  {
    "text": "the street",
    "start": "764880",
    "end": "766620"
  },
  {
    "text": "um",
    "start": "766620",
    "end": "768060"
  },
  {
    "text": "and you know I I have you seen what your",
    "start": "768060",
    "end": "770519"
  },
  {
    "text": "brain yeah have you seen what happens to",
    "start": "770519",
    "end": "772079"
  },
  {
    "text": "your brain when you're on jit",
    "start": "772079",
    "end": "773700"
  },
  {
    "text": "it's not good okay not good",
    "start": "773700",
    "end": "778680"
  },
  {
    "text": "though I do hear it does help your max",
    "start": "778680",
    "end": "780480"
  },
  {
    "text": "honestly like if you're hitting the gym",
    "start": "780480",
    "end": "782279"
  },
  {
    "text": "a lot maybe you do want to jit a little",
    "start": "782279",
    "end": "783779"
  },
  {
    "text": "bit you know not like jit a lot you",
    "start": "783779",
    "end": "785519"
  },
  {
    "text": "don't want to get like some you know jit",
    "start": "785519",
    "end": "787320"
  },
  {
    "text": "rage you just wanna just a little",
    "start": "787320",
    "end": "789600"
  },
  {
    "text": "bit you know",
    "start": "789600",
    "end": "790920"
  },
  {
    "text": "do it for the Bros come on",
    "start": "790920",
    "end": "793980"
  },
  {
    "text": "just a little bit nice thing is that",
    "start": "793980",
    "end": "796019"
  },
  {
    "text": "you've got options you can go lower and",
    "start": "796019",
    "end": "797579"
  },
  {
    "text": "lower level massaging your code to be",
    "start": "797579",
    "end": "799260"
  },
  {
    "text": "even faster and compilers are super good",
    "start": "799260",
    "end": "800940"
  },
  {
    "text": "and getting better every year I wasn't",
    "start": "800940",
    "end": "802560"
  },
  {
    "text": "actually expecting to be GCC I figured",
    "start": "802560",
    "end": "804240"
  },
  {
    "text": "it's Auto vectorization would have beat",
    "start": "804240",
    "end": "805560"
  },
  {
    "text": "me out easily maybe it has something to",
    "start": "805560",
    "end": "807360"
  },
  {
    "text": "do with the way I'm using a vac 4 is a",
    "start": "807360",
    "end": "808680"
  },
  {
    "text": "Vex 3 with W padding or maybe I just",
    "start": "808680",
    "end": "810300"
  },
  {
    "text": "made some horrible mistakes somewhere",
    "start": "810300",
    "end": "811320"
  },
  {
    "text": "but but anyway I get the easier role in",
    "start": "811320",
    "end": "813480"
  },
  {
    "text": "that I understand my code and my",
    "start": "813480",
    "end": "814800"
  },
  {
    "text": "specific intentions and it sucks to have",
    "start": "814800",
    "end": "816360"
  },
  {
    "text": "the compiler's job I guess maybe the",
    "start": "816360",
    "end": "817980"
  },
  {
    "text": "next step is to learn to read my mind",
    "start": "817980",
    "end": "819180"
  },
  {
    "text": "until next time cheers",
    "start": "819180",
    "end": "821279"
  },
  {
    "text": "I did it is kind of funny that we just",
    "start": "821279",
    "end": "823740"
  },
  {
    "text": "watched a video Hey look it's me hey",
    "start": "823740",
    "end": "825060"
  },
  {
    "text": "look it's me uh it is kind of funny look",
    "start": "825060",
    "end": "827519"
  },
  {
    "text": "they're giving me my own videos uh it is",
    "start": "827519",
    "end": "829260"
  },
  {
    "text": "kind of funny that we watched two videos",
    "start": "829260",
    "end": "830940"
  },
  {
    "text": "in a row that are effectively the exact",
    "start": "830940",
    "end": "834120"
  },
  {
    "text": "same idea but almost like inversions of",
    "start": "834120",
    "end": "837240"
  },
  {
    "text": "each other",
    "start": "837240",
    "end": "838139"
  },
  {
    "text": "where",
    "start": "838139",
    "end": "840000"
  },
  {
    "text": "like he's just like ah look you can't",
    "start": "840000",
    "end": "841860"
  },
  {
    "text": "get faster but look at this this code is",
    "start": "841860",
    "end": "843540"
  },
  {
    "text": "kind of like the way I like it you know",
    "start": "843540",
    "end": "844800"
  },
  {
    "text": "what I mean kind of like that you know",
    "start": "844800",
    "end": "846779"
  },
  {
    "text": "or the other was like you get faster now",
    "start": "846779",
    "end": "849360"
  },
  {
    "text": "I don't know I I",
    "start": "849360",
    "end": "852180"
  },
  {
    "text": "think no matter what",
    "start": "852180",
    "end": "854700"
  },
  {
    "text": "JavaScript will always be slower",
    "start": "854700",
    "end": "856560"
  },
  {
    "text": "compared to any native option like it",
    "start": "856560",
    "end": "858360"
  },
  {
    "text": "just can't beat them",
    "start": "858360",
    "end": "860220"
  },
  {
    "text": "but the benefit of JavaScript is that",
    "start": "860220",
    "end": "862019"
  },
  {
    "text": "it's pretty easy to write you know like",
    "start": "862019",
    "end": "864120"
  },
  {
    "text": "if you're just doing stuff it's really",
    "start": "864120",
    "end": "865560"
  },
  {
    "text": "easy you can get Vibe really really",
    "start": "865560",
    "end": "867060"
  },
  {
    "text": "quick I've been using I've been doing",
    "start": "867060",
    "end": "868980"
  },
  {
    "text": "JavaScript I've been jitting you know",
    "start": "868980",
    "end": "870779"
  },
  {
    "text": "I've been hitting the Jets you know for",
    "start": "870779",
    "end": "872279"
  },
  {
    "text": "a while now and I must say it's it's",
    "start": "872279",
    "end": "874620"
  },
  {
    "text": "it's pretty easy but it's also not that",
    "start": "874620",
    "end": "877200"
  },
  {
    "text": "easy sometimes like if you're using",
    "start": "877200",
    "end": "878639"
  },
  {
    "text": "typescript",
    "start": "878639",
    "end": "879899"
  },
  {
    "text": "and you're defining a types of some more",
    "start": "879899",
    "end": "882360"
  },
  {
    "text": "complicated operations",
    "start": "882360",
    "end": "885540"
  },
  {
    "text": "I'm gonna say that that if I were to",
    "start": "885540",
    "end": "888660"
  },
  {
    "text": "Define this in Rust",
    "start": "888660",
    "end": "891240"
  },
  {
    "text": "I would spend significantly less time",
    "start": "891240",
    "end": "892860"
  },
  {
    "text": "like so much",
    "start": "892860",
    "end": "894959"
  },
  {
    "text": "dude like so much less time I think",
    "start": "894959",
    "end": "897120"
  },
  {
    "text": "that's the thing is that I think",
    "start": "897120",
    "end": "898740"
  },
  {
    "text": "JavaScript",
    "start": "898740",
    "end": "900800"
  },
  {
    "text": "written as an application is easier and",
    "start": "900800",
    "end": "903959"
  },
  {
    "text": "faster to write than rust but JavaScript",
    "start": "903959",
    "end": "906420"
  },
  {
    "text": "libraries that involve typescript and",
    "start": "906420",
    "end": "908220"
  },
  {
    "text": "just doing all that stupid typing that",
    "start": "908220",
    "end": "910680"
  },
  {
    "text": "you have to do I think is just massively",
    "start": "910680",
    "end": "914540"
  },
  {
    "text": "massively harder than rust like by a",
    "start": "914540",
    "end": "918540"
  },
  {
    "text": "significant portion because the the type",
    "start": "918540",
    "end": "920639"
  },
  {
    "text": "system is nutty right like the type",
    "start": "920639",
    "end": "922560"
  },
  {
    "text": "system is you're you have to write so",
    "start": "922560",
    "end": "925800"
  },
  {
    "text": "much more code to make it correct and",
    "start": "925800",
    "end": "928019"
  },
  {
    "text": "then uh it's just it's just a lot harder",
    "start": "928019",
    "end": "930240"
  },
  {
    "text": "I'll be able to show you guys the code",
    "start": "930240",
    "end": "931620"
  },
  {
    "text": "here in probably about three months",
    "start": "931620",
    "end": "934940"
  }
]