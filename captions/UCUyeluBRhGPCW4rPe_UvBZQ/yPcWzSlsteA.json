[
  {
    "text": "go versus rust versus bun versus node a",
    "start": "120",
    "end": "3199"
  },
  {
    "text": "simple",
    "start": "3199",
    "end": "4440"
  },
  {
    "text": "HTTP Benchmark okay let's start with",
    "start": "4440",
    "end": "7240"
  },
  {
    "text": "let's start with the Y well it looks",
    "start": "7240",
    "end": "8639"
  },
  {
    "text": "like there's actually a bunch of stuff",
    "start": "8639",
    "end": "9800"
  },
  {
    "text": "before the Y the the table of contents",
    "start": "9800",
    "end": "11880"
  },
  {
    "text": "is missing the I guess the foreplay all",
    "start": "11880",
    "end": "14719"
  },
  {
    "text": "right the prey recently bun 1.0 was",
    "start": "14719",
    "end": "17560"
  },
  {
    "text": "released which shows promise as a tool",
    "start": "17560",
    "end": "19680"
  },
  {
    "text": "for serving many users without using too",
    "start": "19680",
    "end": "21800"
  },
  {
    "text": "many resources to evaluate its",
    "start": "21800",
    "end": "23880"
  },
  {
    "text": "performance a simple benchmark test was",
    "start": "23880",
    "end": "25519"
  },
  {
    "text": "created to measure the number of HTP",
    "start": "25519",
    "end": "27119"
  },
  {
    "text": "calls the server could handle per second",
    "start": "27119",
    "end": "28760"
  },
  {
    "text": "The Benchmark also compares with go rust",
    "start": "28760",
    "end": "30920"
  },
  {
    "text": "and node as these languages are",
    "start": "30920",
    "end": "32599"
  },
  {
    "text": "frequently compared in other benchmarks",
    "start": "32599",
    "end": "34040"
  },
  {
    "text": "using similar purposes okay the",
    "start": "34040",
    "end": "36120"
  },
  {
    "text": "benchmark test by the way I have a very",
    "start": "36120",
    "end": "38600"
  },
  {
    "text": "hot hot take but I refuse to give it",
    "start": "38600",
    "end": "42360"
  },
  {
    "text": "right now but this take is going to be",
    "start": "42360",
    "end": "44520"
  },
  {
    "text": "scalding hot scalding okay so get ready",
    "start": "44520",
    "end": "47920"
  },
  {
    "text": "for the scalder uh The Benchmark uh test",
    "start": "47920",
    "end": "50760"
  },
  {
    "text": "was run both locally and on a len node",
    "start": "50760",
    "end": "53480"
  },
  {
    "text": "server I love okay good I love to see",
    "start": "53480",
    "end": "55680"
  },
  {
    "text": "this I love the Len no server take uh",
    "start": "55680",
    "end": "57760"
  },
  {
    "text": "with two dedicated CPU cores with 4 gbes",
    "start": "57760",
    "end": "59800"
  },
  {
    "text": "of running Deb and 11 on lenoe all four",
    "start": "59800",
    "end": "62120"
  },
  {
    "text": "tests were compiled uh and run using the",
    "start": "62120",
    "end": "64320"
  },
  {
    "text": "following commands all right run build",
    "start": "64320",
    "end": "65920"
  },
  {
    "text": "Minify index outfile Benchmark okay good",
    "start": "65920",
    "end": "69040"
  },
  {
    "text": "and then run the Benchmark cargo build",
    "start": "69040",
    "end": "71040"
  },
  {
    "text": "Target rust okay go build okay good good",
    "start": "71040",
    "end": "74080"
  },
  {
    "text": "good good good good uh no Benchmark okay",
    "start": "74080",
    "end": "76880"
  },
  {
    "text": "the tests were run on the following",
    "start": "76880",
    "end": "78080"
  },
  {
    "text": "runtime versions Russ 174 okay 121 1 and",
    "start": "78080",
    "end": "82240"
  },
  {
    "text": "206 okay so the latest environments this",
    "start": "82240",
    "end": "84119"
  },
  {
    "text": "is good because the difference between",
    "start": "84119",
    "end": "85880"
  },
  {
    "text": "node 18 and node 20 there's actually",
    "start": "85880",
    "end": "87880"
  },
  {
    "text": "quite a few performance improved M ments",
    "start": "87880",
    "end": "90640"
  },
  {
    "text": "all right to Benchmark each uh and it's",
    "start": "90640",
    "end": "92520"
  },
  {
    "text": "it's to do with V8 more than anything",
    "start": "92520",
    "end": "94320"
  },
  {
    "text": "else to benchmark test each runtime go",
    "start": "94320",
    "end": "97360"
  },
  {
    "text": "Rus go node and Bun were built for",
    "start": "97360",
    "end": "99479"
  },
  {
    "text": "production usage and the same test was",
    "start": "99479",
    "end": "101880"
  },
  {
    "text": "uh run for each language the test was",
    "start": "101880",
    "end": "103280"
  },
  {
    "text": "connected with 100 concurrent",
    "start": "103280",
    "end": "104479"
  },
  {
    "text": "connections running for one minute and",
    "start": "104479",
    "end": "106240"
  },
  {
    "text": "all of the runtime uh utiliz",
    "start": "106240",
    "end": "107920"
  },
  {
    "text": "multi-threading okay so here's my real",
    "start": "107920",
    "end": "110079"
  },
  {
    "text": "question did this person whoever wrote",
    "start": "110079",
    "end": "112960"
  },
  {
    "text": "this uh Emil did you run it from your",
    "start": "112960",
    "end": "116079"
  },
  {
    "text": "computer or a series of one or more",
    "start": "116079",
    "end": "118520"
  },
  {
    "text": "computers in Len node that's my first",
    "start": "118520",
    "end": "120680"
  },
  {
    "text": "question right away because if you're",
    "start": "120680",
    "end": "122640"
  },
  {
    "text": "running it from your own machine even as",
    "start": "122640",
    "end": "124560"
  },
  {
    "text": "the test client I mean it's not as good",
    "start": "124560",
    "end": "126920"
  },
  {
    "text": "of a test if you aren't running from",
    "start": "126920",
    "end": "129200"
  },
  {
    "text": "your own machine you know what I mean",
    "start": "129200",
    "end": "131080"
  },
  {
    "text": "it's always better to run from your own",
    "start": "131080",
    "end": "132640"
  },
  {
    "text": "machine I mean run from not your own",
    "start": "132640",
    "end": "135000"
  },
  {
    "text": "machine not not let's see the HTP test",
    "start": "135000",
    "end": "137640"
  },
  {
    "text": "we're running using this uh right here",
    "start": "137640",
    "end": "139560"
  },
  {
    "text": "okay WG work uh all the languages used",
    "start": "139560",
    "end": "141800"
  },
  {
    "text": "built-in HTP servers except for Russ",
    "start": "141800",
    "end": "143560"
  },
  {
    "text": "which uses axom and Tokyo because Russ",
    "start": "143560",
    "end": "145560"
  },
  {
    "text": "doesn't come with the built-in htttp",
    "start": "145560",
    "end": "147160"
  },
  {
    "text": "server Fair it has a TCP server but not",
    "start": "147160",
    "end": "149959"
  },
  {
    "text": "HTP server uh the uh let's see the",
    "start": "149959",
    "end": "152080"
  },
  {
    "text": "source code for these can be found here",
    "start": "152080",
    "end": "154000"
  },
  {
    "text": "okay why before I show you the results",
    "start": "154000",
    "end": "156680"
  },
  {
    "text": "I'd like to explain why I conducted this",
    "start": "156680",
    "end": "158040"
  },
  {
    "text": "test mainly out of curiosity I wanted to",
    "start": "158040",
    "end": "159560"
  },
  {
    "text": "see if there is a JS runtime that can",
    "start": "159560",
    "end": "161360"
  },
  {
    "text": "perform almost as fast as rust or go I'm",
    "start": "161360",
    "end": "163560"
  },
  {
    "text": "not a huge fan of JS in general mainly",
    "start": "163560",
    "end": "165720"
  },
  {
    "text": "because I don't enjoy writing the",
    "start": "165720",
    "end": "167360"
  },
  {
    "text": "language that's perfectly valid but I",
    "start": "167360",
    "end": "168879"
  },
  {
    "text": "also feel that there hasn't been a JS",
    "start": "168879",
    "end": "170720"
  },
  {
    "text": "runtime that is good enough the JS World",
    "start": "170720",
    "end": "172680"
  },
  {
    "text": "God Dino a while ago which seems a bit",
    "start": "172680",
    "end": "174920"
  },
  {
    "text": "faster but still not good enough okay",
    "start": "174920",
    "end": "177599"
  },
  {
    "text": "okay again my scalding hot",
    "start": "177599",
    "end": "181599"
  },
  {
    "text": "take is boiling inside of me it's it's",
    "start": "181599",
    "end": "184000"
  },
  {
    "text": "trying to come out I'm not letting it",
    "start": "184000",
    "end": "185319"
  },
  {
    "text": "come out in the real world the",
    "start": "185319",
    "end": "186920"
  },
  {
    "text": "bottlenecks in your system probably",
    "start": "186920",
    "end": "188280"
  },
  {
    "text": "would uh probably not be the runtime it",
    "start": "188280",
    "end": "190720"
  },
  {
    "text": "would probably be something else such as",
    "start": "190720",
    "end": "192560"
  },
  {
    "text": "your database or Ingress Etc uh we can",
    "start": "192560",
    "end": "195480"
  },
  {
    "text": "we can see this if we look at the",
    "start": "195480",
    "end": "197120"
  },
  {
    "text": "results of running the test in the cloud",
    "start": "197120",
    "end": "199120"
  },
  {
    "text": "this type of test may not be the best",
    "start": "199120",
    "end": "200680"
  },
  {
    "text": "but it still provides a good indication",
    "start": "200680",
    "end": "202319"
  },
  {
    "text": "of Bun's performance compared to others",
    "start": "202319",
    "end": "204319"
  },
  {
    "text": "with this we are now at the runtime that",
    "start": "204319",
    "end": "205879"
  },
  {
    "text": "we could have a good choice uh when",
    "start": "205879",
    "end": "207519"
  },
  {
    "text": "building businesses okay there's",
    "start": "207519",
    "end": "209920"
  },
  {
    "text": "probably a better way to conduct this",
    "start": "209920",
    "end": "211280"
  },
  {
    "text": "type of test probably by running a",
    "start": "211280",
    "end": "212760"
  },
  {
    "text": "websocket with numerous clients",
    "start": "212760",
    "end": "214120"
  },
  {
    "text": "listening to the uh socket to determine",
    "start": "214120",
    "end": "216200"
  },
  {
    "text": "which uh running performs the best",
    "start": "216200",
    "end": "218400"
  },
  {
    "text": "however this is a test for another time",
    "start": "218400",
    "end": "221319"
  },
  {
    "text": "I don't really get this end part but",
    "start": "221319",
    "end": "223000"
  },
  {
    "text": "it's good that he recognizes that this",
    "start": "223000",
    "end": "224599"
  },
  {
    "text": "isn't necessarily a great test and that",
    "start": "224599",
    "end": "227959"
  },
  {
    "text": "in the real world your bottlenecks",
    "start": "227959",
    "end": "229760"
  },
  {
    "text": "aren't usually what's being tested right",
    "start": "229760",
    "end": "232280"
  },
  {
    "text": "now right Fair runting the test locally",
    "start": "232280",
    "end": "236040"
  },
  {
    "text": "all right uh first rust okay latency",
    "start": "236040",
    "end": "238799"
  },
  {
    "text": "this thing uh obviously this none of",
    "start": "238799",
    "end": "241120"
  },
  {
    "text": "this really matters right here requests",
    "start": "241120",
    "end": "242599"
  },
  {
    "text": "a second okay we got 8.87k requests a",
    "start": "242599",
    "end": "245239"
  },
  {
    "text": "second we did this many requests in 30",
    "start": "245239",
    "end": "247680"
  },
  {
    "text": "seconds uh this much okay awesome",
    "start": "247680",
    "end": "250280"
  },
  {
    "text": "awesome awesome then go go also looking",
    "start": "250280",
    "end": "253640"
  },
  {
    "text": "pretty girthed pretty girthy a little",
    "start": "253640",
    "end": "255680"
  },
  {
    "text": "bit different though look at that a",
    "start": "255680",
    "end": "257120"
  },
  {
    "text": "little bit different about the same",
    "start": "257120",
    "end": "258440"
  },
  {
    "text": "amount less megabytes red request per",
    "start": "258440",
    "end": "261160"
  },
  {
    "text": "second not as good then bun not as good",
    "start": "261160",
    "end": "264600"
  },
  {
    "text": "as go as you can see right here okay and",
    "start": "264600",
    "end": "268479"
  },
  {
    "text": "then node node came",
    "start": "268479",
    "end": "271680"
  },
  {
    "text": "in you know that",
    "start": "271680",
    "end": "273919"
  },
  {
    "text": "Meme you know the meme where it's like",
    "start": "273919",
    "end": "278560"
  },
  {
    "text": "the I don't even want to say the meme",
    "start": "278560",
    "end": "280520"
  },
  {
    "text": "it's going to get me it's GNA get me",
    "start": "280520",
    "end": "281680"
  },
  {
    "text": "canceled okay you know node tried okay",
    "start": "281680",
    "end": "284720"
  },
  {
    "text": "node tried dude you haven't seen URL",
    "start": "284720",
    "end": "287199"
  },
  {
    "text": "parser does it have the Ada",
    "start": "287199",
    "end": "290280"
  },
  {
    "text": "parser does it have the Ada parser in it",
    "start": "290280",
    "end": "293120"
  },
  {
    "text": "because if it had the adap parser it'",
    "start": "293120",
    "end": "294360"
  },
  {
    "text": "probably be 10 times faster honestly 10",
    "start": "294360",
    "end": "296840"
  },
  {
    "text": "times faster when running uh test local",
    "start": "296840",
    "end": "299880"
  },
  {
    "text": "we see that Russ serves more requests",
    "start": "299880",
    "end": "301479"
  },
  {
    "text": "per second compared to the other options",
    "start": "301479",
    "end": "303000"
  },
  {
    "text": "okay yeah that's probably not too",
    "start": "303000",
    "end": "304520"
  },
  {
    "text": "surprising I don't think anyone's",
    "start": "304520",
    "end": "305960"
  },
  {
    "text": "necessarily surprised by this um yeah I",
    "start": "305960",
    "end": "309160"
  },
  {
    "text": "mean the differences should be fairly",
    "start": "309160",
    "end": "311199"
  },
  {
    "text": "minimal between these Frameworks I'm",
    "start": "311199",
    "end": "312880"
  },
  {
    "text": "actually surprised it's this bad",
    "start": "312880",
    "end": "315440"
  },
  {
    "text": "honestly I'm actually surprised it is",
    "start": "315440",
    "end": "317280"
  },
  {
    "text": "this bad that the difference between bun",
    "start": "317280",
    "end": "319919"
  },
  {
    "text": "and say rust or bun and go is that far",
    "start": "319919",
    "end": "322319"
  },
  {
    "text": "off because like the reality",
    "start": "322319",
    "end": "324560"
  },
  {
    "text": "is garbage collection happens in C++",
    "start": "324560",
    "end": "330360"
  },
  {
    "text": "HTTP processing and everything happens",
    "start": "330360",
    "end": "332240"
  },
  {
    "text": "in C++ every part of this is C++ so why",
    "start": "332240",
    "end": "336080"
  },
  {
    "text": "is it this much different I mean buns",
    "start": "336080",
    "end": "337680"
  },
  {
    "text": "obviously Zig instead of C++ and go is",
    "start": "337680",
    "end": "340360"
  },
  {
    "text": "go or whatever whatever however they",
    "start": "340360",
    "end": "342479"
  },
  {
    "text": "work and rust is I think rust rust",
    "start": "342479",
    "end": "345680"
  },
  {
    "text": "writes rust itself but either way it",
    "start": "345680",
    "end": "347400"
  },
  {
    "text": "just breaks down to you know a series of",
    "start": "347400",
    "end": "349199"
  },
  {
    "text": "CIS calls I can't imagine that one's",
    "start": "349199",
    "end": "350800"
  },
  {
    "text": "better than the other somehow that's why",
    "start": "350800",
    "end": "352800"
  },
  {
    "text": "it's just so surprising that I'm seeing",
    "start": "352800",
    "end": "354199"
  },
  {
    "text": "this all right testing locally uh it's",
    "start": "354199",
    "end": "356880"
  },
  {
    "text": "time to speed uh let's see time it a all",
    "start": "356880",
    "end": "361000"
  },
  {
    "text": "right here we go it is time to test the",
    "start": "361000",
    "end": "362440"
  },
  {
    "text": "speed of each runtime in serializing and",
    "start": "362440",
    "end": "364160"
  },
  {
    "text": "returning simple Json strings the task",
    "start": "364160",
    "end": "366639"
  },
  {
    "text": "is to serialize a simple Json struct and",
    "start": "366639",
    "end": "368639"
  },
  {
    "text": "return it okay so this is actually a",
    "start": "368639",
    "end": "369880"
  },
  {
    "text": "better test because really what you're",
    "start": "369880",
    "end": "371919"
  },
  {
    "text": "going to see so I hope the longevity of",
    "start": "371919",
    "end": "373520"
  },
  {
    "text": "the test is there you really do need to",
    "start": "373520",
    "end": "375400"
  },
  {
    "text": "run this over the course of a couple",
    "start": "375400",
    "end": "376720"
  },
  {
    "text": "minutes which is you want to see garbage",
    "start": "376720",
    "end": "380800"
  },
  {
    "text": "collection let's begin with rust and",
    "start": "380800",
    "end": "383160"
  },
  {
    "text": "there's another thing that I'm going to",
    "start": "383160",
    "end": "384360"
  },
  {
    "text": "talk about here shortly uh with this",
    "start": "384360",
    "end": "386319"
  },
  {
    "text": "test rust okay so somehow it is somehow",
    "start": "386319",
    "end": "391039"
  },
  {
    "text": "let's see 43",
    "start": "391039",
    "end": "393400"
  },
  {
    "text": "423 423 it is pretty much the same speed",
    "start": "393400",
    "end": "397400"
  },
  {
    "text": "right nothing about it is much different",
    "start": "397400",
    "end": "399280"
  },
  {
    "text": "not too surprising very little Works",
    "start": "399280",
    "end": "401039"
  },
  {
    "text": "actually going go pretty much the same",
    "start": "401039",
    "end": "403120"
  },
  {
    "text": "speed bun drastic fall down that's",
    "start": "403120",
    "end": "406120"
  },
  {
    "text": "actually a bit surprising that bun",
    "start": "406120",
    "end": "407520"
  },
  {
    "text": "suffered that much from a Json stringify",
    "start": "407520",
    "end": "409639"
  },
  {
    "text": "locally now obviously there could be a",
    "start": "409639",
    "end": "411319"
  },
  {
    "text": "lot of questions what's going on blah",
    "start": "411319",
    "end": "412720"
  },
  {
    "text": "blah blah blah but nonetheless I'm",
    "start": "412720",
    "end": "414280"
  },
  {
    "text": "surprised it suffered that hard from",
    "start": "414280",
    "end": "415800"
  },
  {
    "text": "Json stringifying effectively a constant",
    "start": "415800",
    "end": "420199"
  },
  {
    "text": "right because if you remember the other",
    "start": "420199",
    "end": "422400"
  },
  {
    "text": "one uh you know the other one is about",
    "start": "422400",
    "end": "424639"
  },
  {
    "text": "10% faster and",
    "start": "424639",
    "end": "427400"
  },
  {
    "text": "node node's about the same right if you",
    "start": "427400",
    "end": "430720"
  },
  {
    "text": "look right here node didn't change node",
    "start": "430720",
    "end": "433240"
  },
  {
    "text": "changed like Russ didn't change right",
    "start": "433240",
    "end": "435479"
  },
  {
    "text": "it's effectively the same thing okay so",
    "start": "435479",
    "end": "438160"
  },
  {
    "text": "that's interesting to me it says maybe",
    "start": "438160",
    "end": "440280"
  },
  {
    "text": "there's something going on with bun and",
    "start": "440280",
    "end": "441680"
  },
  {
    "text": "bun doesn't have a good Json whatever",
    "start": "441680",
    "end": "445080"
  },
  {
    "text": "uh let see I thought they would have",
    "start": "445080",
    "end": "447080"
  },
  {
    "text": "pulled uh that into native Zig or",
    "start": "447080",
    "end": "449240"
  },
  {
    "text": "something Json is so core to JavaScript",
    "start": "449240",
    "end": "451759"
  },
  {
    "text": "well no it should be it's it's within",
    "start": "451759",
    "end": "453160"
  },
  {
    "text": "the JavaScript engine it wouldn't be in",
    "start": "453160",
    "end": "455080"
  },
  {
    "text": "Zig it' be within the JavaScript engine",
    "start": "455080",
    "end": "456639"
  },
  {
    "text": "it' be within um uh JavaScript core",
    "start": "456639",
    "end": "460240"
  },
  {
    "text": "that's Safari so maybe the Safari",
    "start": "460240",
    "end": "461720"
  },
  {
    "text": "implementation of of java uh json",
    "start": "461720",
    "end": "464319"
  },
  {
    "text": "stringify or json.parse isn't quite",
    "start": "464319",
    "end": "466560"
  },
  {
    "text": "there read peron's message um Pon say",
    "start": "466560",
    "end": "470080"
  },
  {
    "text": "your message to my face right now I can",
    "start": "470080",
    "end": "473080"
  },
  {
    "text": "just shortcut it honestly I can just",
    "start": "473080",
    "end": "474599"
  },
  {
    "text": "shortcut",
    "start": "474599",
    "end": "475639"
  },
  {
    "text": "it oh hold up that's my article roasting",
    "start": "475639",
    "end": "478520"
  },
  {
    "text": "me let's y getting roasted get roasted",
    "start": "478520",
    "end": "482919"
  },
  {
    "text": "kid okay so I'm actually more surprised",
    "start": "482919",
    "end": "486520"
  },
  {
    "text": "by how much bun faltered because go",
    "start": "486520",
    "end": "489319"
  },
  {
    "text": "didn't change rust didn't change no",
    "start": "489319",
    "end": "493159"
  },
  {
    "text": "didn't change bun really changed that's",
    "start": "493159",
    "end": "495280"
  },
  {
    "text": "okay that's a bit surprising that's",
    "start": "495280",
    "end": "496520"
  },
  {
    "text": "something to investigate that's kind of",
    "start": "496520",
    "end": "498000"
  },
  {
    "text": "interesting running uh the test in the",
    "start": "498000",
    "end": "500159"
  },
  {
    "text": "cloud it's time to run the same test in",
    "start": "500159",
    "end": "501639"
  },
  {
    "text": "the cloud by the way provon I really",
    "start": "501639",
    "end": "503000"
  },
  {
    "text": "love that you put it also up in Len no",
    "start": "503000",
    "end": "506240"
  },
  {
    "text": "and you do like a cloud test I think",
    "start": "506240",
    "end": "507680"
  },
  {
    "text": "that that's very good uh this time I",
    "start": "507680",
    "end": "509840"
  },
  {
    "text": "have spun up a server with a dedicated",
    "start": "509840",
    "end": "511360"
  },
  {
    "text": "CPU in Stockholm oh you're having a",
    "start": "511360",
    "end": "513518"
  },
  {
    "text": "little bit of Stockholm syndrome as they",
    "start": "513519",
    "end": "514919"
  },
  {
    "text": "call it to avoid limitations I am",
    "start": "514919",
    "end": "516479"
  },
  {
    "text": "running The Benchmark from my local",
    "start": "516479",
    "end": "517919"
  },
  {
    "text": "computer to the server okay so that can",
    "start": "517919",
    "end": "519599"
  },
  {
    "text": "be a little bit I'm a little worried",
    "start": "519599",
    "end": "520880"
  },
  {
    "text": "about that but okay uh if I were to run",
    "start": "520880",
    "end": "523800"
  },
  {
    "text": "a client server within L node I would uh",
    "start": "523800",
    "end": "526080"
  },
  {
    "text": "be limited to choosing only two",
    "start": "526080",
    "end": "527440"
  },
  {
    "text": "dedicated CPUs without creating a",
    "start": "527440",
    "end": "529080"
  },
  {
    "text": "support ticket additionally my local",
    "start": "529080",
    "end": "530959"
  },
  {
    "text": "computer has more cores and internet",
    "start": "530959",
    "end": "532560"
  },
  {
    "text": "connection that is good enough for the",
    "start": "532560",
    "end": "534080"
  },
  {
    "text": "test fine at least they're all running",
    "start": "534080",
    "end": "536160"
  },
  {
    "text": "the same thing I've also increased the",
    "start": "536160",
    "end": "537600"
  },
  {
    "text": "number of connections to the server in",
    "start": "537600",
    "end": "538800"
  },
  {
    "text": "order to achieve better results okay",
    "start": "538800",
    "end": "541560"
  },
  {
    "text": "test uh testing returning only a simple",
    "start": "541560",
    "end": "543600"
  },
  {
    "text": "string is this the Json one I assume",
    "start": "543600",
    "end": "546640"
  },
  {
    "text": "this is like the or this is just a",
    "start": "546640",
    "end": "548240"
  },
  {
    "text": "simple string all right so rust",
    "start": "548240",
    "end": "550240"
  },
  {
    "text": "obviously a huge downgrade this all",
    "start": "550240",
    "end": "552079"
  },
  {
    "text": "makes perfect sense if you think about",
    "start": "552079",
    "end": "553560"
  },
  {
    "text": "it I'm a little worried about the",
    "start": "553560",
    "end": "555279"
  },
  {
    "text": "connection uh and all these things just",
    "start": "555279",
    "end": "557399"
  },
  {
    "text": "because this is where you know I see",
    "start": "557399",
    "end": "559720"
  },
  {
    "text": "things just fall apart especially",
    "start": "559720",
    "end": "560959"
  },
  {
    "text": "locally usually whenever I do something",
    "start": "560959",
    "end": "562519"
  },
  {
    "text": "that has a lot of connections I I tend",
    "start": "562519",
    "end": "564440"
  },
  {
    "text": "to break it onto several machines uh all",
    "start": "564440",
    "end": "566760"
  },
  {
    "text": "in the cloud but I get the idea",
    "start": "566760",
    "end": "569480"
  },
  {
    "text": "looking good okay go Yep this makes",
    "start": "569480",
    "end": "572160"
  },
  {
    "text": "sense bun all right bun is now sitting",
    "start": "572160",
    "end": "575399"
  },
  {
    "text": "equal with rust what this tells me is",
    "start": "575399",
    "end": "577920"
  },
  {
    "text": "that I did you did you run SAR by any",
    "start": "577920",
    "end": "581480"
  },
  {
    "text": "chance and just like see the network",
    "start": "581480",
    "end": "583320"
  },
  {
    "text": "utilization and the and the server",
    "start": "583320",
    "end": "585800"
  },
  {
    "text": "utilization and all that",
    "start": "585800",
    "end": "588360"
  },
  {
    "text": "here dos your own server absolutely in",
    "start": "588360",
    "end": "590959"
  },
  {
    "text": "the name of science because I'd be",
    "start": "590959",
    "end": "592680"
  },
  {
    "text": "curious what's the running speed I have",
    "start": "592680",
    "end": "594200"
  },
  {
    "text": "that VM RSS script as well to see how",
    "start": "594200",
    "end": "596079"
  },
  {
    "text": "much memory things are taken",
    "start": "596079",
    "end": "598040"
  },
  {
    "text": "up yeah I saw I saw I saw the link to it",
    "start": "598040",
    "end": "601279"
  },
  {
    "text": "but I was just wondering if you ran any",
    "start": "601279",
    "end": "602720"
  },
  {
    "text": "of the SAR stuff to look at how much uh",
    "start": "602720",
    "end": "605360"
  },
  {
    "text": "CPU is actually being taken and finally",
    "start": "605360",
    "end": "607360"
  },
  {
    "text": "node node again are can we all get an",
    "start": "607360",
    "end": "610240"
  },
  {
    "text": "rip node I feel bad for node node just",
    "start": "610240",
    "end": "613040"
  },
  {
    "text": "always coming in all right testing of",
    "start": "613040",
    "end": "614480"
  },
  {
    "text": "Json so this will be interesting so rust",
    "start": "614480",
    "end": "616760"
  },
  {
    "text": "again pretty much same speed right 713",
    "start": "616760",
    "end": "620040"
  },
  {
    "text": "718 yeah uh maybe a 1% difference go",
    "start": "620040",
    "end": "624440"
  },
  {
    "text": "same thing uh wait does did go did go",
    "start": "624440",
    "end": "628360"
  },
  {
    "text": "get faster somehow go got got faster",
    "start": "628360",
    "end": "630120"
  },
  {
    "text": "again maybe not long enough test I mean",
    "start": "630120",
    "end": "632440"
  },
  {
    "text": "this is so this would be one of the",
    "start": "632440",
    "end": "633880"
  },
  {
    "text": "problems with this type of test right",
    "start": "633880",
    "end": "636120"
  },
  {
    "text": "you got to let it run for a while",
    "start": "636120",
    "end": "637680"
  },
  {
    "text": "usually kind of isolate any of these",
    "start": "637680",
    "end": "640519"
  },
  {
    "text": "weird issues so go somehow got faster",
    "start": "640519",
    "end": "642920"
  },
  {
    "text": "doubt right hashtag doubt um bun Bun's",
    "start": "642920",
    "end": "646880"
  },
  {
    "text": "still doing great somehow bun is pretty",
    "start": "646880",
    "end": "649079"
  },
  {
    "text": "much identical to rust in this situation",
    "start": "649079",
    "end": "650959"
  },
  {
    "text": "and finally node is like this I'd love",
    "start": "650959",
    "end": "652880"
  },
  {
    "text": "to see some profiling are you actually",
    "start": "652880",
    "end": "657079"
  },
  {
    "text": "using the CPU",
    "start": "657079",
    "end": "660399"
  },
  {
    "text": "summary it's excited to see uh that bun",
    "start": "660399",
    "end": "662120"
  },
  {
    "text": "performs so well and seems to be a",
    "start": "662120",
    "end": "663760"
  },
  {
    "text": "runtime that can compete with rust or go",
    "start": "663760",
    "end": "665320"
  },
  {
    "text": "for h2p I'm also thrilled that there's a",
    "start": "665320",
    "end": "667000"
  },
  {
    "text": "runtime that does it all unlike",
    "start": "667000",
    "end": "668839"
  },
  {
    "text": "languages such as rust and go which",
    "start": "668839",
    "end": "670440"
  },
  {
    "text": "provide package managers bun provide one",
    "start": "670440",
    "end": "673279"
  },
  {
    "text": "as well yes note on the other hand has",
    "start": "673279",
    "end": "675040"
  },
  {
    "text": "various package managers it has various",
    "start": "675040",
    "end": "677360"
  },
  {
    "text": "everything for everything and all the",
    "start": "677360",
    "end": "679000"
  },
  {
    "text": "things have everything it's very it's a",
    "start": "679000",
    "end": "680519"
  },
  {
    "text": "pain in the ass to get started uh and",
    "start": "680519",
    "end": "682399"
  },
  {
    "text": "many different ways of achieving the",
    "start": "682399",
    "end": "683639"
  },
  {
    "text": "same thing where each method is faster",
    "start": "683639",
    "end": "685399"
  },
  {
    "text": "than the others yep although I'm not a",
    "start": "685399",
    "end": "687720"
  },
  {
    "text": "big fan of writing JavaScript in general",
    "start": "687720",
    "end": "689040"
  },
  {
    "text": "I look forward to building something",
    "start": "689040",
    "end": "690160"
  },
  {
    "text": "with bun I would love to receive",
    "start": "690160",
    "end": "691360"
  },
  {
    "text": "feedback this is great so I think this",
    "start": "691360",
    "end": "693360"
  },
  {
    "text": "is really great hey go follow go",
    "start": "693360",
    "end": "696560"
  },
  {
    "text": "follow provon on Twitter okay it's right",
    "start": "696560",
    "end": "700279"
  },
  {
    "text": "here but",
    "start": "700279",
    "end": "702079"
  },
  {
    "text": "uh all right so here's my here's my hot",
    "start": "702079",
    "end": "704880"
  },
  {
    "text": "steaming hot thing about this which is I",
    "start": "704880",
    "end": "708839"
  },
  {
    "text": "don't find these type of tests",
    "start": "708839",
    "end": "710440"
  },
  {
    "text": "interesting because it doesn't really",
    "start": "710440",
    "end": "711800"
  },
  {
    "text": "test the environment well uh the the the",
    "start": "711800",
    "end": "715240"
  },
  {
    "text": "Json one kind of did but here's the deal",
    "start": "715240",
    "end": "719320"
  },
  {
    "text": "is that there's a lot of these things",
    "start": "719320",
    "end": "720839"
  },
  {
    "text": "that happen right there's a lot of ways",
    "start": "720839",
    "end": "722360"
  },
  {
    "text": "that uh these companies hand or",
    "start": "722360",
    "end": "724000"
  },
  {
    "text": "companies these well I mean technically",
    "start": "724000",
    "end": "725440"
  },
  {
    "text": "Buns of company as well but uh there's a",
    "start": "725440",
    "end": "727639"
  },
  {
    "text": "lot of way these these languages handle",
    "start": "727639",
    "end": "729560"
  },
  {
    "text": "how do how does it do garbage collection",
    "start": "729560",
    "end": "731720"
  },
  {
    "text": "and so when you write an endpoint you",
    "start": "731720",
    "end": "733959"
  },
  {
    "text": "typically get some data you do like an",
    "start": "733959",
    "end": "737000"
  },
  {
    "text": "await it goes off to a database it comes",
    "start": "737000",
    "end": "739800"
  },
  {
    "text": "back you do maybe another await you go",
    "start": "739800",
    "end": "742000"
  },
  {
    "text": "to some other thing maybe you wait for a",
    "start": "742000",
    "end": "743560"
  },
  {
    "text": "couple different awaits and these things",
    "start": "743560",
    "end": "745279"
  },
  {
    "text": "can take a little bit of time right and",
    "start": "745279",
    "end": "747399"
  },
  {
    "text": "then you get a response and then you get",
    "start": "747399",
    "end": "748880"
  },
  {
    "text": "your response back and then you return",
    "start": "748880",
    "end": "750199"
  },
  {
    "text": "it all out and so what ends up happening",
    "start": "750199",
    "end": "752040"
  },
  {
    "text": "is you have these objects that end up",
    "start": "752040",
    "end": "753760"
  },
  {
    "text": "living longer and crossing the boundary",
    "start": "753760",
    "end": "756240"
  },
  {
    "text": "of a collection and being promoted from",
    "start": "756240",
    "end": "758279"
  },
  {
    "text": "Nursery into something larger and so",
    "start": "758279",
    "end": "760920"
  },
  {
    "text": "therefore you get a much more kind of",
    "start": "760920",
    "end": "763639"
  },
  {
    "text": "complex operating or runtime experience",
    "start": "763639",
    "end": "766440"
  },
  {
    "text": "which means that your your requests per",
    "start": "766440",
    "end": "768079"
  },
  {
    "text": "second or whatever can go way down",
    "start": "768079",
    "end": "769600"
  },
  {
    "text": "because you start to get all of the",
    "start": "769600",
    "end": "771639"
  },
  {
    "text": "different uh all the different facets of",
    "start": "771639",
    "end": "774040"
  },
  {
    "text": "the language actually running and so",
    "start": "774040",
    "end": "775720"
  },
  {
    "text": "that's one of my worries whenever you",
    "start": "775720",
    "end": "776959"
  },
  {
    "text": "see just a pure HTP test is you're not",
    "start": "776959",
    "end": "779800"
  },
  {
    "text": "really testing much other than what is",
    "start": "779800",
    "end": "781639"
  },
  {
    "text": "the runtime doing and I know that's the",
    "start": "781639",
    "end": "783440"
  },
  {
    "text": "purpose of this article but I like to",
    "start": "783440",
    "end": "785360"
  },
  {
    "text": "see a little bit more like what does it",
    "start": "785360",
    "end": "786800"
  },
  {
    "text": "actually offer does JS core actually",
    "start": "786800",
    "end": "788560"
  },
  {
    "text": "offer a compelling difference between V8",
    "start": "788560",
    "end": "791560"
  },
  {
    "text": "or is it purely just how well did they",
    "start": "791560",
    "end": "793519"
  },
  {
    "text": "write the system interface for with",
    "start": "793519",
    "end": "797680"
  },
  {
    "text": "zigg right because let's just face it",
    "start": "797680",
    "end": "801399"
  },
  {
    "text": "like you said it's the least interesting",
    "start": "801399",
    "end": "802880"
  },
  {
    "text": "part of the whole",
    "start": "802880",
    "end": "804880"
  },
  {
    "text": "thing it's great for your let's see it's",
    "start": "804880",
    "end": "807480"
  },
  {
    "text": "great if your server is fast but it's",
    "start": "807480",
    "end": "808920"
  },
  {
    "text": "not not great if it's too easy to",
    "start": "808920",
    "end": "810399"
  },
  {
    "text": "accidentally generate gigabytes of GC",
    "start": "810399",
    "end": "812000"
  },
  {
    "text": "collected memory for no reason EXA",
    "start": "812000",
    "end": "814320"
  },
  {
    "text": "exactly like this is a real thing this",
    "start": "814320",
    "end": "816079"
  },
  {
    "text": "is why just last night when we were",
    "start": "816079",
    "end": "817320"
  },
  {
    "text": "talking about it we were reading",
    "start": "817320",
    "end": "818440"
  },
  {
    "text": "something or I forgot what we were doing",
    "start": "818440",
    "end": "819920"
  },
  {
    "text": "last night but it's all about letting",
    "start": "819920",
    "end": "821680"
  },
  {
    "text": "node die it's okay that node dies it's",
    "start": "821680",
    "end": "824360"
  },
  {
    "text": "hard right that's like the whole",
    "start": "824360",
    "end": "825680"
  },
  {
    "text": "argument for why serverless is becoming",
    "start": "825680",
    "end": "827440"
  },
  {
    "text": "popular with node is that one of the",
    "start": "827440",
    "end": "829079"
  },
  {
    "text": "arguments is that it's hard to make a",
    "start": "829079",
    "end": "830800"
  },
  {
    "text": "node server live for a long time which",
    "start": "830800",
    "end": "834279"
  },
  {
    "text": "really is kind of a crazy statement to",
    "start": "834279",
    "end": "836320"
  },
  {
    "text": "if you really think about it could you",
    "start": "836320",
    "end": "839160"
  },
  {
    "text": "really say that that's like a great",
    "start": "839160",
    "end": "840880"
  },
  {
    "text": "thing like that's a language or an",
    "start": "840880",
    "end": "842759"
  },
  {
    "text": "environment you should be using is one",
    "start": "842759",
    "end": "844680"
  },
  {
    "text": "in which you can't get to live for a",
    "start": "844680",
    "end": "846720"
  },
  {
    "text": "long time node is not stable the",
    "start": "846720",
    "end": "849480"
  },
  {
    "text": "experience is not stable and it's not",
    "start": "849480",
    "end": "851040"
  },
  {
    "text": "that node is not stable it's that the",
    "start": "851040",
    "end": "853720"
  },
  {
    "text": "language itself doesn't give you the",
    "start": "853720",
    "end": "855600"
  },
  {
    "text": "constructs to avoid problems from",
    "start": "855600",
    "end": "857560"
  },
  {
    "text": "happening you probably just missed a try",
    "start": "857560",
    "end": "860160"
  },
  {
    "text": "catch you probably just accidentally did",
    "start": "860160",
    "end": "862360"
  },
  {
    "text": "something you're not allowed to do you",
    "start": "862360",
    "end": "864199"
  },
  {
    "text": "just didn't realize you couldn't do that",
    "start": "864199",
    "end": "866279"
  },
  {
    "text": "you accidentally held on to memory in a",
    "start": "866279",
    "end": "867839"
  },
  {
    "text": "closure that points to a and then it",
    "start": "867839",
    "end": "869680"
  },
  {
    "text": "ended up exploding it's really easy to",
    "start": "869680",
    "end": "871959"
  },
  {
    "text": "do dumb stuff in JavaScript and so I",
    "start": "871959",
    "end": "874040"
  },
  {
    "text": "totally get that and that's what always",
    "start": "874040",
    "end": "875920"
  },
  {
    "text": "you know that's what worries me more",
    "start": "875920",
    "end": "877720"
  },
  {
    "text": "about the language than anything else I",
    "start": "877720",
    "end": "879639"
  },
  {
    "text": "would love to see I mean because I'm",
    "start": "879639",
    "end": "881240"
  },
  {
    "text": "seeing right now a bunch of O camel",
    "start": "881240",
    "end": "882720"
  },
  {
    "text": "being executed from bun so to me that",
    "start": "882720",
    "end": "885560"
  },
  {
    "text": "actually seems like a really compelling",
    "start": "885560",
    "end": "887560"
  },
  {
    "text": "argument for bun is that bun has really",
    "start": "887560",
    "end": "889959"
  },
  {
    "text": "great",
    "start": "889959",
    "end": "890759"
  },
  {
    "text": "ffi and so maybe just maybe you know",
    "start": "890759",
    "end": "895399"
  },
  {
    "text": "what I mean maybe just maybe and so I I",
    "start": "895399",
    "end": "899160"
  },
  {
    "text": "like this idea you know what I mean you",
    "start": "899160",
    "end": "901279"
  },
  {
    "text": "you got to soak the testing you got to",
    "start": "901279",
    "end": "902600"
  },
  {
    "text": "do a deep soaking you know what I mean",
    "start": "902600",
    "end": "905079"
  },
  {
    "text": "all",
    "start": "905079",
    "end": "906120"
  },
  {
    "text": "right anyways I think ffi is a great",
    "start": "906120",
    "end": "909240"
  },
  {
    "text": "selling point I agree I'm on that team I",
    "start": "909240",
    "end": "910959"
  },
  {
    "text": "think the ffi is a great selling point",
    "start": "910959",
    "end": "912800"
  },
  {
    "text": "and I'd love to do more about that oh",
    "start": "912800",
    "end": "915600"
  },
  {
    "text": "wow I really want to make middleware",
    "start": "915600",
    "end": "917240"
  },
  {
    "text": "with o camel I can't wait to use a",
    "start": "917240",
    "end": "918680"
  },
  {
    "text": "language level abstractions exactly and",
    "start": "918680",
    "end": "921040"
  },
  {
    "text": "so there's something really Dino will",
    "start": "921040",
    "end": "922920"
  },
  {
    "text": "solve Rip but really like to me this is",
    "start": "922920",
    "end": "925920"
  },
  {
    "text": "really what makes it more compelling is",
    "start": "925920",
    "end": "927959"
  },
  {
    "text": "that you have bun to handle all the",
    "start": "927959",
    "end": "930680"
  },
  {
    "text": "shitty Parts about programming right",
    "start": "930680",
    "end": "932319"
  },
  {
    "text": "JavaScript is actually a really great",
    "start": "932319",
    "end": "933759"
  },
  {
    "text": "language for handling shitty parts of",
    "start": "933759",
    "end": "935440"
  },
  {
    "text": "programming we all agree that sometimes",
    "start": "935440",
    "end": "938360"
  },
  {
    "text": "you don't want to handle every single",
    "start": "938360",
    "end": "940639"
  },
  {
    "text": "type you don't want to have to write all",
    "start": "940639",
    "end": "942399"
  },
  {
    "text": "the structs you don't want to have to",
    "start": "942399",
    "end": "943600"
  },
  {
    "text": "have everything instead you can kind of",
    "start": "943600",
    "end": "945519"
  },
  {
    "text": "like reduce it you know you don't really",
    "start": "945519",
    "end": "947399"
  },
  {
    "text": "want to do any of that so you kind of",
    "start": "947399",
    "end": "948639"
  },
  {
    "text": "handle the the things that are shitty in",
    "start": "948639",
    "end": "950240"
  },
  {
    "text": "JavaScript because it's super easy and",
    "start": "950240",
    "end": "952079"
  },
  {
    "text": "then you have your your your better",
    "start": "952079",
    "end": "953519"
  },
  {
    "text": "language do all the complex parts and so",
    "start": "953519",
    "end": "955839"
  },
  {
    "text": "it's like I could see why that is kind",
    "start": "955839",
    "end": "957519"
  },
  {
    "text": "of exciting JS is kind of great at",
    "start": "957519",
    "end": "959920"
  },
  {
    "text": "working it's it's kind of great at doing",
    "start": "959920",
    "end": "962560"
  },
  {
    "text": "things but it shoots you the foot right",
    "start": "962560",
    "end": "964839"
  },
  {
    "text": "it's it's a fouyan bargain working with",
    "start": "964839",
    "end": "966560"
  },
  {
    "text": "JavaScript is a continuous FY and",
    "start": "966560",
    "end": "968279"
  },
  {
    "text": "bargain you you've missed error handling",
    "start": "968279",
    "end": "971519"
  },
  {
    "text": "you've missed some some typing you did",
    "start": "971519",
    "end": "973440"
  },
  {
    "text": "not expect because the thing is is that",
    "start": "973440",
    "end": "975160"
  },
  {
    "text": "you have to Define all the typing that",
    "start": "975160",
    "end": "977120"
  },
  {
    "text": "could",
    "start": "977120",
    "end": "978120"
  },
  {
    "text": "happen right whereas it's like the",
    "start": "978120",
    "end": "980120"
  },
  {
    "text": "inverse in a static language a static",
    "start": "980120",
    "end": "981800"
  },
  {
    "text": "language you define what types are",
    "start": "981800",
    "end": "983759"
  },
  {
    "text": "allowed to be and that's that the type",
    "start": "983759",
    "end": "986560"
  },
  {
    "text": "system cannot pass if it doesn't work",
    "start": "986560",
    "end": "988319"
  },
  {
    "text": "whereas with type script nothing nothing",
    "start": "988319",
    "end": "991399"
  },
  {
    "text": "it's if you just get handed a a string",
    "start": "991399",
    "end": "994360"
  },
  {
    "text": "instead of a number and you didn't plan",
    "start": "994360",
    "end": "996959"
  },
  {
    "text": "for that it doesn't matter your tests",
    "start": "996959",
    "end": "999639"
  },
  {
    "text": "your code you've written it just works",
    "start": "999639",
    "end": "1002519"
  },
  {
    "text": "and that's what's going to happen right",
    "start": "1002519",
    "end": "1004120"
  },
  {
    "text": "and you have you're you're doomed you're",
    "start": "1004120",
    "end": "1005920"
  },
  {
    "text": "doomed in a weird sense and things are",
    "start": "1005920",
    "end": "1007440"
  },
  {
    "text": "going to happen in a weird way you",
    "start": "1007440",
    "end": "1008759"
  },
  {
    "text": "didn't expect it to happen because you",
    "start": "1008759",
    "end": "1010319"
  },
  {
    "text": "have to know every possible type or you",
    "start": "1010319",
    "end": "1014360"
  },
  {
    "text": "have to do the typeless programming",
    "start": "1014360",
    "end": "1016199"
  },
  {
    "text": "where you enforce your types Zod would",
    "start": "1016199",
    "end": "1018279"
  },
  {
    "text": "be an example and if you use Zod your",
    "start": "1018279",
    "end": "1020360"
  },
  {
    "text": "server is going to Screech to a halt on",
    "start": "1020360",
    "end": "1022279"
  },
  {
    "text": "how fast it could go Kyle Simpson would",
    "start": "1022279",
    "end": "1024880"
  },
  {
    "text": "disagree I don't care what Kyle Simpson",
    "start": "1024880",
    "end": "1026520"
  },
  {
    "text": "has to say you have to know your types",
    "start": "1026520",
    "end": "1028319"
  },
  {
    "text": "either way you don't know what your",
    "start": "1028319",
    "end": "1030240"
  },
  {
    "text": "third party services are going to",
    "start": "1030240",
    "end": "1031520"
  },
  {
    "text": "respond with they can respond with",
    "start": "1031520",
    "end": "1033000"
  },
  {
    "text": "things you don't expect because that's",
    "start": "1033000",
    "end": "1034640"
  },
  {
    "text": "what happens you have to expect",
    "start": "1034640",
    "end": "1036038"
  },
  {
    "text": "everybody to play ball right and get",
    "start": "1036039",
    "end": "1038959"
  },
  {
    "text": "let's just face it not everyone's great",
    "start": "1038959",
    "end": "1040438"
  },
  {
    "text": "at playing ball anyways the name is I",
    "start": "1040439",
    "end": "1043520"
  },
  {
    "text": "really like this article it was pretty",
    "start": "1043520",
    "end": "1045839"
  },
  {
    "text": "interesting and I'm very excited about",
    "start": "1045839",
    "end": "1047640"
  },
  {
    "text": "more of it by the way for those that",
    "start": "1047640",
    "end": "1048679"
  },
  {
    "text": "don't know I've been I've been I've",
    "start": "1048679",
    "end": "1050120"
  },
  {
    "text": "teased it a few times we're going I'm",
    "start": "1050120",
    "end": "1051640"
  },
  {
    "text": "going through some bun versus nodejs",
    "start": "1051640",
    "end": "1053400"
  },
  {
    "text": "performance tighter is better B bun",
    "start": "1053400",
    "end": "1056520"
  },
  {
    "text": "super tight 3 million 3.2 million on",
    "start": "1056520",
    "end": "1059520"
  },
  {
    "text": "what I want to see and another one 2.2",
    "start": "1059520",
    "end": "1062200"
  },
  {
    "text": "million on what I want to see exact",
    "start": "1062200",
    "end": "1064480"
  },
  {
    "text": "code exact everything the difference is",
    "start": "1064480",
    "end": "1067520"
  },
  {
    "text": "is that the one I wanted to see only has",
    "start": "1067520",
    "end": "1068880"
  },
  {
    "text": "1.3 million and 1.4",
    "start": "1068880",
    "end": "1071520"
  },
  {
    "text": "million way better performance on bun on",
    "start": "1071520",
    "end": "1074200"
  },
  {
    "text": "identical code way tighter distribution",
    "start": "1074200",
    "end": "1076760"
  },
  {
    "text": "lots of things I'm excited about can't",
    "start": "1076760",
    "end": "1078520"
  },
  {
    "text": "wait to see it that's very bright sorry",
    "start": "1078520",
    "end": "1080679"
  },
  {
    "text": "for the flashbang the",
    "start": "1080679",
    "end": "1084000"
  },
  {
    "text": "name is the primagen",
    "start": "1084840",
    "end": "1088679"
  }
]