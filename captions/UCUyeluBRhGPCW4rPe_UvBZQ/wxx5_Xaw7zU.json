[
  {
    "text": "Zig helped us move data to the edge here",
    "start": "60",
    "end": "3060"
  },
  {
    "text": "are our Impressions all right kicking",
    "start": "3060",
    "end": "5040"
  },
  {
    "text": "the tires on Zig with the Greenfield",
    "start": "5040",
    "end": "6660"
  },
  {
    "text": "open source project our company is a",
    "start": "6660",
    "end": "9540"
  },
  {
    "text": "rust shop we love rust and we believe",
    "start": "9540",
    "end": "11219"
  },
  {
    "text": "rust will be the main engine of our work",
    "start": "11219",
    "end": "13259"
  },
  {
    "text": "for a lifetime but as a bunch of",
    "start": "13259",
    "end": "15420"
  },
  {
    "text": "performance nerds we've been keeping a",
    "start": "15420",
    "end": "17460"
  },
  {
    "text": "close eye on Zig it evokes a feeling of",
    "start": "17460",
    "end": "19740"
  },
  {
    "text": "Simplicity that I long for the sea days",
    "start": "19740",
    "end": "21660"
  },
  {
    "text": "yep agreed and comp time the ability to",
    "start": "21660",
    "end": "24660"
  },
  {
    "text": "run arbitrary code at compile time is",
    "start": "24660",
    "end": "27000"
  },
  {
    "text": "straight out brilliant idea welcome to",
    "start": "27000",
    "end": "29099"
  },
  {
    "text": "Costco almost as smart as me remembering",
    "start": "29099",
    "end": "31619"
  },
  {
    "text": "to turn off alerts come completely agree",
    "start": "31619",
    "end": "34140"
  },
  {
    "text": "so this is why I love the idea of Zig it",
    "start": "34140",
    "end": "36719"
  },
  {
    "text": "has the Simplicity feeling of C but it",
    "start": "36719",
    "end": "40140"
  },
  {
    "text": "also has calm time which effectively you",
    "start": "40140",
    "end": "42420"
  },
  {
    "text": "get everything you need out of C plus",
    "start": "42420",
    "end": "44000"
  },
  {
    "text": "right there so I love that idea uh like",
    "start": "44000",
    "end": "47100"
  },
  {
    "text": "a shiny new tool we've been looking for",
    "start": "47100",
    "end": "48719"
  },
  {
    "text": "a way to make use of Zig in the shop",
    "start": "48719",
    "end": "50520"
  },
  {
    "text": "rewriting existing production code",
    "start": "50520",
    "end": "52140"
  },
  {
    "text": "really wasn't an option so we found a",
    "start": "52140",
    "end": "53879"
  },
  {
    "text": "new project to give it a spin this",
    "start": "53879",
    "end": "55440"
  },
  {
    "text": "article details our experience so I",
    "start": "55440",
    "end": "58260"
  },
  {
    "text": "think this is pretty exciting our",
    "start": "58260",
    "end": "59879"
  },
  {
    "text": "product or so if you don't know I am",
    "start": "59879",
    "end": "61379"
  },
  {
    "text": "sponsored by Tercel but I'm reading this",
    "start": "61379",
    "end": "63239"
  },
  {
    "text": "article because other people send it to",
    "start": "63239",
    "end": "64799"
  },
  {
    "text": "me because it's actually it's pretty",
    "start": "64799",
    "end": "66240"
  },
  {
    "text": "great so just so you guys know this is",
    "start": "66240",
    "end": "67920"
  },
  {
    "text": "technically not an ad though it may feel",
    "start": "67920",
    "end": "69900"
  },
  {
    "text": "like one it's not one okay anyways uh",
    "start": "69900",
    "end": "71939"
  },
  {
    "text": "it's an edge database if you're",
    "start": "71939",
    "end": "72900"
  },
  {
    "text": "unfamiliar with the concept it's very",
    "start": "72900",
    "end": "74159"
  },
  {
    "text": "simple if you're deploying your code in",
    "start": "74159",
    "end": "76320"
  },
  {
    "text": "multiple geographical locations",
    "start": "76320",
    "end": "77700"
  },
  {
    "text": "accessing your data from a central",
    "start": "77700",
    "end": "78780"
  },
  {
    "text": "location will make your application slow",
    "start": "78780",
    "end": "80340"
  },
  {
    "text": "you may not like it but a genius let's",
    "start": "80340",
    "end": "82439"
  },
  {
    "text": "see but a genius a couple let's see but",
    "start": "82439",
    "end": "84780"
  },
  {
    "text": "a genius a couple years ago proved",
    "start": "84780",
    "end": "87000"
  },
  {
    "text": "there's nothing you can really do about",
    "start": "87000",
    "end": "88080"
  },
  {
    "text": "it I'm talking about Einstein not Tom",
    "start": "88080",
    "end": "90720"
  },
  {
    "text": "they know",
    "start": "90720",
    "end": "92759"
  },
  {
    "text": "they know about Tom that that's pretty",
    "start": "92759",
    "end": "95340"
  },
  {
    "text": "good we already know where the link goes",
    "start": "95340",
    "end": "97380"
  },
  {
    "text": "to we already know where the link goes",
    "start": "97380",
    "end": "99540"
  },
  {
    "text": "to we all know where the Link's about to",
    "start": "99540",
    "end": "101159"
  },
  {
    "text": "go to we all knew what was gonna happen",
    "start": "101159",
    "end": "103040"
  },
  {
    "text": "what what a play because of the",
    "start": "103040",
    "end": "106439"
  },
  {
    "text": "limitations of the physical world the",
    "start": "106439",
    "end": "108000"
  },
  {
    "text": "only way to get super fast database",
    "start": "108000",
    "end": "109860"
  },
  {
    "text": "queries in both San Francisco and Sydney",
    "start": "109860",
    "end": "111899"
  },
  {
    "text": "is to have the data replicated at both",
    "start": "111899",
    "end": "113520"
  },
  {
    "text": "places keeping a database running in",
    "start": "113520",
    "end": "115200"
  },
  {
    "text": "multiple locations is expensive which",
    "start": "115200",
    "end": "117240"
  },
  {
    "text": "means to make this work you need a",
    "start": "117240",
    "end": "118500"
  },
  {
    "text": "database that is extremely cheap to run",
    "start": "118500",
    "end": "120180"
  },
  {
    "text": "that's why we use lib squeal they an",
    "start": "120180",
    "end": "122640"
  },
  {
    "text": "open contribution Fork of squeal light",
    "start": "122640",
    "end": "124439"
  },
  {
    "text": "uh adds to that a lot of Machinery to",
    "start": "124439",
    "end": "126479"
  },
  {
    "text": "make replication simple and easy and",
    "start": "126479",
    "end": "127979"
  },
  {
    "text": "automated and automatically route you to",
    "start": "127979",
    "end": "129899"
  },
  {
    "text": "the closest replica and you have an edge",
    "start": "129899",
    "end": "132000"
  },
  {
    "text": "database there we go storage costs",
    "start": "132000",
    "end": "133680"
  },
  {
    "text": "replicating data everywhere does have a",
    "start": "133680",
    "end": "135720"
  },
  {
    "text": "cost our Reliance on a slim and mighty",
    "start": "135720",
    "end": "137819"
  },
  {
    "text": "database helps us to keep the compute",
    "start": "137819",
    "end": "139620"
  },
  {
    "text": "cost in check but for the data there's",
    "start": "139620",
    "end": "141599"
  },
  {
    "text": "not much you can do about it want 10",
    "start": "141599",
    "end": "143160"
  },
  {
    "text": "replicas pay 10 times the storage",
    "start": "143160",
    "end": "145680"
  },
  {
    "text": "makes sense uh this works for a variety",
    "start": "145680",
    "end": "148560"
  },
  {
    "text": "of applications especially in the web",
    "start": "148560",
    "end": "149879"
  },
  {
    "text": "where data volumes are low I have helped",
    "start": "149879",
    "end": "152580"
  },
  {
    "text": "design a no squeal database before Silo",
    "start": "152580",
    "end": "154739"
  },
  {
    "text": "DB that operates at the petabyte scale",
    "start": "154739",
    "end": "157080"
  },
  {
    "text": "so low and high are always relative",
    "start": "157080",
    "end": "159540"
  },
  {
    "text": "let's go around with the numbers storing",
    "start": "159540",
    "end": "161700"
  },
  {
    "text": "a gigabyte of data on Fast storage costs",
    "start": "161700",
    "end": "163980"
  },
  {
    "text": "less than a dollar per month assume 25",
    "start": "163980",
    "end": "165959"
  },
  {
    "text": "cents to leave room for all markups",
    "start": "165959",
    "end": "167940"
  },
  {
    "text": "storing 10 gigabytes of data will cost",
    "start": "167940",
    "end": "170340"
  },
  {
    "text": "around two dollars and fifty cents per",
    "start": "170340",
    "end": "171900"
  },
  {
    "text": "region we support up to 34 regions so if",
    "start": "171900",
    "end": "174420"
  },
  {
    "text": "you deploy into all regions that's still",
    "start": "174420",
    "end": "176280"
  },
  {
    "text": "85 dollars a month for storage costs",
    "start": "176280",
    "end": "178680"
  },
  {
    "text": "less than you'll pay for HubSpot Google",
    "start": "178680",
    "end": "180540"
  },
  {
    "text": "workspaces or any other SAS tool that",
    "start": "180540",
    "end": "182700"
  },
  {
    "text": "your company depends on okay",
    "start": "182700",
    "end": "185879"
  },
  {
    "text": "but even before we reached the petabyte",
    "start": "185879",
    "end": "188459"
  },
  {
    "text": "level there are many use cases we'll",
    "start": "188459",
    "end": "190440"
  },
  {
    "text": "accumulate uh will accumulate hundreds",
    "start": "190440",
    "end": "192180"
  },
  {
    "text": "if not thousands of GBS and while you",
    "start": "192180",
    "end": "195120"
  },
  {
    "text": "may have the money to spare the reality",
    "start": "195120",
    "end": "197040"
  },
  {
    "text": "is that you don't need all the data on",
    "start": "197040",
    "end": "198900"
  },
  {
    "text": "the edge some of it is just cold and you",
    "start": "198900",
    "end": "201120"
  },
  {
    "text": "don't need it all the time an",
    "start": "201120",
    "end": "202319"
  },
  {
    "text": "architecture that takes advantage of the",
    "start": "202319",
    "end": "203819"
  },
  {
    "text": "edge while keeping the cost down is one",
    "start": "203819",
    "end": "206340"
  },
  {
    "text": "will keep your database of record in a",
    "start": "206340",
    "end": "209220"
  },
  {
    "text": "central location and then replicates",
    "start": "209220",
    "end": "210840"
  },
  {
    "text": "some of the data to the edge",
    "start": "210840",
    "end": "212879"
  },
  {
    "text": "clever right pretty clever uh the",
    "start": "212879",
    "end": "215400"
  },
  {
    "text": "solution PT Tercel to tackle this issue",
    "start": "215400",
    "end": "217379"
  },
  {
    "text": "we built PG Tercel a postgres extension",
    "start": "217379",
    "end": "219959"
  },
  {
    "text": "that automatically syncs a slice of your",
    "start": "219959",
    "end": "222540"
  },
  {
    "text": "data to torso it is completely",
    "start": "222540",
    "end": "224220"
  },
  {
    "text": "experimental at the moment and not",
    "start": "224220",
    "end": "225659"
  },
  {
    "text": "production ready we are making progress",
    "start": "225659",
    "end": "227340"
  },
  {
    "text": "in productionizing it over the near",
    "start": "227340",
    "end": "228720"
  },
  {
    "text": "future that way it works let's see the",
    "start": "228720",
    "end": "230940"
  },
  {
    "text": "way it works is that your uh is that you",
    "start": "230940",
    "end": "233459"
  },
  {
    "text": "choose a table or materialized view in",
    "start": "233459",
    "end": "235799"
  },
  {
    "text": "postgres that you wish to replicate to",
    "start": "235799",
    "end": "237480"
  },
  {
    "text": "the edge tables are often already a",
    "start": "237480",
    "end": "239940"
  },
  {
    "text": "subset of your data a materialized view",
    "start": "239940",
    "end": "242099"
  },
  {
    "text": "are standard ways of selecting part of",
    "start": "242099",
    "end": "244260"
  },
  {
    "text": "your data for certain queries our",
    "start": "244260",
    "end": "246120"
  },
  {
    "text": "extension then hooks into postgres local",
    "start": "246120",
    "end": "248099"
  },
  {
    "text": "replication and materialize view refresh",
    "start": "248099",
    "end": "250260"
  },
  {
    "text": "process replicating the changes right",
    "start": "250260",
    "end": "252299"
  },
  {
    "text": "out to the turso database smart right",
    "start": "252299",
    "end": "255000"
  },
  {
    "text": "this is actually pretty dang smart we",
    "start": "255000",
    "end": "256859"
  },
  {
    "text": "built PG turso with Zig the first reason",
    "start": "256859",
    "end": "259320"
  },
  {
    "text": "why we may let's see why this made sense",
    "start": "259320",
    "end": "261060"
  },
  {
    "text": "is that PG turso is a very",
    "start": "261060",
    "end": "262800"
  },
  {
    "text": "self-contained and isolated project it",
    "start": "262800",
    "end": "264840"
  },
  {
    "text": "does not need to share code with the",
    "start": "264840",
    "end": "266160"
  },
  {
    "text": "rest of our database there's no need to",
    "start": "266160",
    "end": "267840"
  },
  {
    "text": "rewrite production code or even take a",
    "start": "267840",
    "end": "269580"
  },
  {
    "text": "dependency on zig",
    "start": "269580",
    "end": "271320"
  },
  {
    "text": "okay the second reason was that there's",
    "start": "271320",
    "end": "273479"
  },
  {
    "text": "already code in the wild written in C",
    "start": "273479",
    "end": "275160"
  },
  {
    "text": "that was similar to what we wanted to do",
    "start": "275160",
    "end": "276960"
  },
  {
    "text": "if we could reuse some of that code that",
    "start": "276960",
    "end": "279419"
  },
  {
    "text": "would be a win postgres allows users to",
    "start": "279419",
    "end": "281400"
  },
  {
    "text": "provide a logical decoding output",
    "start": "281400",
    "end": "283440"
  },
  {
    "text": "plug-in which is a fancy name for your",
    "start": "283440",
    "end": "285960"
  },
  {
    "text": "own replication routines postgres itself",
    "start": "285960",
    "end": "288540"
  },
  {
    "text": "already has an example of the plugin to",
    "start": "288540",
    "end": "290100"
  },
  {
    "text": "get you started",
    "start": "290100",
    "end": "292699"
  },
  {
    "text": "cool right all right Zig delivers uh",
    "start": "292979",
    "end": "295680"
  },
  {
    "text": "foresee interoperability Zig is famous",
    "start": "295680",
    "end": "298080"
  },
  {
    "text": "for its seamless interoperability with C",
    "start": "298080",
    "end": "299759"
  },
  {
    "text": "it even has cross compiler to transform",
    "start": "299759",
    "end": "301860"
  },
  {
    "text": "C code right into Zig oh that's cool I",
    "start": "301860",
    "end": "304560"
  },
  {
    "text": "don't even know that I have never",
    "start": "304560",
    "end": "306060"
  },
  {
    "text": "touched Zig before and because what",
    "start": "306060",
    "end": "307979"
  },
  {
    "text": "could go wrong so I just tried",
    "start": "307979",
    "end": "311400"
  },
  {
    "text": "which it didn't work at all okay but",
    "start": "311400",
    "end": "313440"
  },
  {
    "text": "that was just due to missing headers and",
    "start": "313440",
    "end": "314940"
  },
  {
    "text": "to my a slight surprise Zig translate",
    "start": "314940",
    "end": "317400"
  },
  {
    "text": "include okay",
    "start": "317400",
    "end": "320880"
  },
  {
    "text": "it compiled just fine dumping lots of",
    "start": "320880",
    "end": "323100"
  },
  {
    "text": "valid Zig code",
    "start": "323100",
    "end": "326300"
  },
  {
    "text": "huh",
    "start": "327000",
    "end": "328320"
  },
  {
    "text": "we still had work to do to make our",
    "start": "328320",
    "end": "330120"
  },
  {
    "text": "extension but that's the start that's",
    "start": "330120",
    "end": "331800"
  },
  {
    "text": "actually I didn't realize that you could",
    "start": "331800",
    "end": "333180"
  },
  {
    "text": "do that you could just translate C into",
    "start": "333180",
    "end": "334979"
  },
  {
    "text": "Zig you could just like",
    "start": "334979",
    "end": "338660"
  },
  {
    "text": "zig",
    "start": "339060",
    "end": "340199"
  },
  {
    "text": "it's pretty cool",
    "start": "340199",
    "end": "343080"
  },
  {
    "text": "uh The Next Step was to add some",
    "start": "343080",
    "end": "344520"
  },
  {
    "text": "definitions about postgres module in the",
    "start": "344520",
    "end": "346560"
  },
  {
    "text": "test code above was done with a macro",
    "start": "346560",
    "end": "348240"
  },
  {
    "text": "which ziggs thankfully does not support",
    "start": "348240",
    "end": "349800"
  },
  {
    "text": "for the rust people who complain about",
    "start": "349800",
    "end": "351600"
  },
  {
    "text": "rust macros C macros are Straight From",
    "start": "351600",
    "end": "353699"
  },
  {
    "text": "Hell",
    "start": "353699",
    "end": "355880"
  },
  {
    "text": "they are they are straight from hell",
    "start": "356340",
    "end": "358620"
  },
  {
    "text": "that required a bit of boilerplate code",
    "start": "358620",
    "end": "360180"
  },
  {
    "text": "but still manageable and ergonomic to",
    "start": "360180",
    "end": "361620"
  },
  {
    "text": "write predictably we are also going to",
    "start": "361620",
    "end": "363419"
  },
  {
    "text": "need a few definitions from the postgres",
    "start": "363419",
    "end": "364919"
  },
  {
    "text": "uh header interface forget binding",
    "start": "364919",
    "end": "367500"
  },
  {
    "text": "generators and explicit foreign function",
    "start": "367500",
    "end": "369060"
  },
  {
    "text": "interfaces in Zig you just slap us uh a",
    "start": "369060",
    "end": "372539"
  },
  {
    "text": "Sim Port ooh I got a lot of sim ports in",
    "start": "372539",
    "end": "375539"
  },
  {
    "text": "the chat uh and call it a day all the C",
    "start": "375539",
    "end": "378539"
  },
  {
    "text": "code available under an isolated",
    "start": "378539",
    "end": "380100"
  },
  {
    "text": "namespace that's actually super cool I",
    "start": "380100",
    "end": "381900"
  },
  {
    "text": "did not realize you could just",
    "start": "381900",
    "end": "383880"
  },
  {
    "text": "you could just import and boom that",
    "start": "383880",
    "end": "386940"
  },
  {
    "text": "actually just works okay that's pretty",
    "start": "386940",
    "end": "389520"
  },
  {
    "text": "cool",
    "start": "389520",
    "end": "390539"
  },
  {
    "text": "I did not know that about Zig that it's",
    "start": "390539",
    "end": "392400"
  },
  {
    "text": "it's it's it's actually that easy to",
    "start": "392400",
    "end": "395460"
  },
  {
    "text": "just just make it happen",
    "start": "395460",
    "end": "398160"
  },
  {
    "text": "that is cool",
    "start": "398160",
    "end": "399419"
  },
  {
    "text": "that is super cool",
    "start": "399419",
    "end": "401400"
  },
  {
    "text": "uh the support directive is based on the",
    "start": "401400",
    "end": "403500"
  },
  {
    "text": "translate C which means that the header",
    "start": "403500",
    "end": "405180"
  },
  {
    "text": "is translated to Native Zig code during",
    "start": "405180",
    "end": "407220"
  },
  {
    "text": "compilation this is where Zig shines it",
    "start": "407220",
    "end": "409620"
  },
  {
    "text": "seamlessly wraps a c header into a zig",
    "start": "409620",
    "end": "411660"
  },
  {
    "text": "structure as if it as if it yet oh my",
    "start": "411660",
    "end": "415259"
  },
  {
    "text": "goodness as if it was yet another Zig",
    "start": "415259",
    "end": "417479"
  },
  {
    "text": "module where's TJ to make fun of me and",
    "start": "417479",
    "end": "419580"
  },
  {
    "text": "you are free to use all constants and",
    "start": "419580",
    "end": "422039"
  },
  {
    "text": "functions as if they were Native Zig",
    "start": "422039",
    "end": "424020"
  },
  {
    "text": "truly amazing this actually is like an",
    "start": "424020",
    "end": "426960"
  },
  {
    "text": "incredible idea right here",
    "start": "426960",
    "end": "428940"
  },
  {
    "text": "this is one thing about taking a known",
    "start": "428940",
    "end": "431280"
  },
  {
    "text": "language not deviating far from the",
    "start": "431280",
    "end": "433740"
  },
  {
    "text": "syntax",
    "start": "433740",
    "end": "434940"
  },
  {
    "text": "or how it works and just fixing a few",
    "start": "434940",
    "end": "438120"
  },
  {
    "text": "small things that's one thing I really",
    "start": "438120",
    "end": "439319"
  },
  {
    "text": "appreciated about Zig it's like if",
    "start": "439319",
    "end": "440699"
  },
  {
    "text": "you're gonna write C",
    "start": "440699",
    "end": "442560"
  },
  {
    "text": "well there's a bunch of things in C that",
    "start": "442560",
    "end": "443940"
  },
  {
    "text": "kind of suck",
    "start": "443940",
    "end": "445800"
  },
  {
    "text": "Zig is just like it's really just",
    "start": "445800",
    "end": "447660"
  },
  {
    "text": "slightly better see",
    "start": "447660",
    "end": "449819"
  },
  {
    "text": "with comp time",
    "start": "449819",
    "end": "451680"
  },
  {
    "text": "that's how I feel about it it's just",
    "start": "451680",
    "end": "453240"
  },
  {
    "text": "like better C it's like go but the",
    "start": "453240",
    "end": "456539"
  },
  {
    "text": "harder version it's just it's battle",
    "start": "456539",
    "end": "458220"
  },
  {
    "text": "toads of go right there's there's the",
    "start": "458220",
    "end": "461819"
  },
  {
    "text": "there's the easier game that you know go",
    "start": "461819",
    "end": "464099"
  },
  {
    "text": "is more like The Sims and and Zig is",
    "start": "464099",
    "end": "467280"
  },
  {
    "text": "more like battle toads if C is the",
    "start": "467280",
    "end": "469020"
  },
  {
    "text": "father that's what you get out of it uh",
    "start": "469020",
    "end": "471120"
  },
  {
    "text": "go but hard mode yeah debugging and",
    "start": "471120",
    "end": "473759"
  },
  {
    "text": "cross compiling are smooth the way",
    "start": "473759",
    "end": "475680"
  },
  {
    "text": "translate C works is that all the",
    "start": "475680",
    "end": "477180"
  },
  {
    "text": "dependencies are cooked right into the",
    "start": "477180",
    "end": "478560"
  },
  {
    "text": "final file this means the relevant parts",
    "start": "478560",
    "end": "480120"
  },
  {
    "text": "of the C standard Library also gets",
    "start": "480120",
    "end": "481740"
  },
  {
    "text": "translated and added to the output",
    "start": "481740",
    "end": "483120"
  },
  {
    "text": "that's very convenient because it makes",
    "start": "483120",
    "end": "484740"
  },
  {
    "text": "the resulting a single source file",
    "start": "484740",
    "end": "487199"
  },
  {
    "text": "self-contained a bonus of this behavior",
    "start": "487199",
    "end": "489539"
  },
  {
    "text": "is that debugging deep issues the kind",
    "start": "489539",
    "end": "491220"
  },
  {
    "text": "that always occur when writing system",
    "start": "491220",
    "end": "492660"
  },
  {
    "text": "software is made much easier all the C",
    "start": "492660",
    "end": "494880"
  },
  {
    "text": "dependencies the C standard Library the",
    "start": "494880",
    "end": "496500"
  },
  {
    "text": "zig standard Library gets shipped as",
    "start": "496500",
    "end": "498419"
  },
  {
    "text": "code that gets compiled along with your",
    "start": "498419",
    "end": "500460"
  },
  {
    "text": "project that gives the compiler more",
    "start": "500460",
    "end": "502440"
  },
  {
    "text": "opportunity to optimize inline and",
    "start": "502440",
    "end": "504479"
  },
  {
    "text": "reduce your final binary to only what it",
    "start": "504479",
    "end": "506280"
  },
  {
    "text": "needs but it also means you're free to",
    "start": "506280",
    "end": "508319"
  },
  {
    "text": "edit the code yourself if you run into",
    "start": "508319",
    "end": "510120"
  },
  {
    "text": "one of those unexplainable issues that",
    "start": "510120",
    "end": "512159"
  },
  {
    "text": "could be coming from anywhere like we",
    "start": "512159",
    "end": "513899"
  },
  {
    "text": "did",
    "start": "513899",
    "end": "515159"
  },
  {
    "text": "huh",
    "start": "515159",
    "end": "516599"
  },
  {
    "text": "another Advantage is that uh it allows",
    "start": "516599",
    "end": "518820"
  },
  {
    "text": "Zig to shine in Cross compilation in our",
    "start": "518820",
    "end": "521219"
  },
  {
    "text": "company for example one of the reasons",
    "start": "521219",
    "end": "522539"
  },
  {
    "text": "that led us to uh to code our CLI and go",
    "start": "522539",
    "end": "525720"
  },
  {
    "text": "is how well it cross-compiles to Mac",
    "start": "525720",
    "end": "528660"
  },
  {
    "text": "Linux and even Windows rust is nowhere",
    "start": "528660",
    "end": "531240"
  },
  {
    "text": "near that yeah that's one of the I",
    "start": "531240",
    "end": "532800"
  },
  {
    "text": "always hear this as an advantage to go",
    "start": "532800",
    "end": "534360"
  },
  {
    "text": "and why I hear a lot of the devops stuff",
    "start": "534360",
    "end": "536160"
  },
  {
    "text": "is is that cross compilation is just",
    "start": "536160",
    "end": "538440"
  },
  {
    "text": "like top shelf in go uh translate C has",
    "start": "538440",
    "end": "541680"
  },
  {
    "text": "some issues with obscure-code a great uh",
    "start": "541680",
    "end": "544200"
  },
  {
    "text": "as great as they experiment with",
    "start": "544200",
    "end": "545220"
  },
  {
    "text": "translate C was Zig got some issues with",
    "start": "545220",
    "end": "547560"
  },
  {
    "text": "some complicated macro constructs now",
    "start": "547560",
    "end": "549839"
  },
  {
    "text": "say let's see now that same uh that says",
    "start": "549839",
    "end": "552660"
  },
  {
    "text": "more about C macros than it does about",
    "start": "552660",
    "end": "554279"
  },
  {
    "text": "Zig I have mentioned how monstro C",
    "start": "554279",
    "end": "556260"
  },
  {
    "text": "macros can be dude some of the worst",
    "start": "556260",
    "end": "558240"
  },
  {
    "text": "things I've ever had the debug are C",
    "start": "558240",
    "end": "560160"
  },
  {
    "text": "macros you get macros that call",
    "start": "560160",
    "end": "562320"
  },
  {
    "text": "functions that call macros that call",
    "start": "562320",
    "end": "564000"
  },
  {
    "text": "functions that call macros that call",
    "start": "564000",
    "end": "565620"
  },
  {
    "text": "functions there was one in Netflix for",
    "start": "565620",
    "end": "568440"
  },
  {
    "text": "logging that was so complex I spent an",
    "start": "568440",
    "end": "570660"
  },
  {
    "text": "entire day trying to trace it I could",
    "start": "570660",
    "end": "573720"
  },
  {
    "text": "not figure it out I could not for the",
    "start": "573720",
    "end": "575700"
  },
  {
    "text": "life of me in eight hours of looking at",
    "start": "575700",
    "end": "577980"
  },
  {
    "text": "code figure out what the hell was",
    "start": "577980",
    "end": "580500"
  },
  {
    "text": "happening it was just too difficult I",
    "start": "580500",
    "end": "583680"
  },
  {
    "text": "hate pre-processor stuff it is just the",
    "start": "583680",
    "end": "586800"
  },
  {
    "text": "worst the main issue is that Zig",
    "start": "586800",
    "end": "588959"
  },
  {
    "text": "compiler is not always capable of",
    "start": "588959",
    "end": "590399"
  },
  {
    "text": "guessing the types safely in all",
    "start": "590399",
    "end": "592440"
  },
  {
    "text": "fairness oftentimes with C macros humans",
    "start": "592440",
    "end": "594779"
  },
  {
    "text": "cannot guess them either but reality is",
    "start": "594779",
    "end": "596820"
  },
  {
    "text": "that the world of SIA is full of those",
    "start": "596820",
    "end": "598680"
  },
  {
    "text": "macros so expect interoperability to",
    "start": "598680",
    "end": "601019"
  },
  {
    "text": "fail at times",
    "start": "601019",
    "end": "602700"
  },
  {
    "text": "Fair the good parts of Russ are here",
    "start": "602700",
    "end": "604980"
  },
  {
    "text": "judging modern languages like rust and",
    "start": "604980",
    "end": "606959"
  },
  {
    "text": "Zig needs to go beyond the language",
    "start": "606959",
    "end": "608399"
  },
  {
    "text": "definitions the ecosystem matters",
    "start": "608399",
    "end": "610380"
  },
  {
    "text": "absolutely it's one of the four axes of",
    "start": "610380",
    "end": "612180"
  },
  {
    "text": "judging a language well uh the zika",
    "start": "612180",
    "end": "615060"
  },
  {
    "text": "building process is elegant it would it",
    "start": "615060",
    "end": "617040"
  },
  {
    "text": "wouldn't oh my goodness and it won't be",
    "start": "617040",
    "end": "618839"
  },
  {
    "text": "a surprise for rust folks that have uh",
    "start": "618839",
    "end": "621300"
  },
  {
    "text": "ever written a build RS script before",
    "start": "621300",
    "end": "623180"
  },
  {
    "text": "Zig is built on similar principles if",
    "start": "623180",
    "end": "626279"
  },
  {
    "text": "you want to state that your code should",
    "start": "626279",
    "end": "628680"
  },
  {
    "text": "be linked to the standard C library and",
    "start": "628680",
    "end": "630420"
  },
  {
    "text": "compiled to a shared Library you express",
    "start": "630420",
    "end": "632580"
  },
  {
    "text": "that in uh Zig yeah this makes sense I",
    "start": "632580",
    "end": "635459"
  },
  {
    "text": "I've never you know you have to learn a",
    "start": "635459",
    "end": "637080"
  },
  {
    "text": "little bit about Zig to be able to build",
    "start": "637080",
    "end": "638399"
  },
  {
    "text": "Zig effectively in these larger projects",
    "start": "638399",
    "end": "640440"
  },
  {
    "text": "but to me that's fine I'm fine with that",
    "start": "640440",
    "end": "642300"
  },
  {
    "text": "a build system in Zig forzig I'm okay",
    "start": "642300",
    "end": "645060"
  },
  {
    "text": "with that another thing that rust",
    "start": "645060",
    "end": "646740"
  },
  {
    "text": "hackers would admire is Zig format an",
    "start": "646740",
    "end": "648720"
  },
  {
    "text": "opinionated tool for formatting Zig code",
    "start": "648720",
    "end": "651180"
  },
  {
    "text": "so that you avoid endlessly bike",
    "start": "651180",
    "end": "652620"
  },
  {
    "text": "shedding over code South I I'm I'm fine",
    "start": "652620",
    "end": "654720"
  },
  {
    "text": "with that there's something about it no",
    "start": "654720",
    "end": "656760"
  },
  {
    "text": "matter how much I dislike it which I",
    "start": "656760",
    "end": "658380"
  },
  {
    "text": "feel like anytime you get four Auto",
    "start": "658380",
    "end": "659880"
  },
  {
    "text": "formatters nobody's technically happy",
    "start": "659880",
    "end": "663060"
  },
  {
    "text": "therefore everybody's happy I kind of",
    "start": "663060",
    "end": "665940"
  },
  {
    "text": "like that error handling is another",
    "start": "665940",
    "end": "667440"
  },
  {
    "text": "ergonomic aspect of Zig at first I was",
    "start": "667440",
    "end": "669540"
  },
  {
    "text": "really confused when I saw catch",
    "start": "669540",
    "end": "670920"
  },
  {
    "text": "unreachable yes idioms all over code",
    "start": "670920",
    "end": "673079"
  },
  {
    "text": "samples but once I understood it it made",
    "start": "673079",
    "end": "674579"
  },
  {
    "text": "perfect sense it also Maps well to rust",
    "start": "674579",
    "end": "676320"
  },
  {
    "text": "Concepts it does very very well",
    "start": "676320",
    "end": "678000"
  },
  {
    "text": "functions uh can explicitly declare if",
    "start": "678000",
    "end": "680459"
  },
  {
    "text": "they may uh rate turn errors if they do",
    "start": "680459",
    "end": "682440"
  },
  {
    "text": "you can use the try operator inside them",
    "start": "682440",
    "end": "684720"
  },
  {
    "text": "which is conceptually similar to Russ uh",
    "start": "684720",
    "end": "687000"
  },
  {
    "text": "question mark it is it's almost",
    "start": "687000",
    "end": "688320"
  },
  {
    "text": "identical it's the only downfall to it",
    "start": "688320",
    "end": "691140"
  },
  {
    "text": "is that it's a prefix operation as",
    "start": "691140",
    "end": "693420"
  },
  {
    "text": "opposed to a post-fix operation so that",
    "start": "693420",
    "end": "695160"
  },
  {
    "text": "means chaining becomes hard you have to",
    "start": "695160",
    "end": "697079"
  },
  {
    "text": "do things like this instead right so",
    "start": "697079",
    "end": "699300"
  },
  {
    "text": "this just simply means that we're going",
    "start": "699300",
    "end": "700740"
  },
  {
    "text": "to format this buff print we're going to",
    "start": "700740",
    "end": "702360"
  },
  {
    "text": "grab some sort of offset starting from",
    "start": "702360",
    "end": "704040"
  },
  {
    "text": "offset all the way through so we're",
    "start": "704040",
    "end": "705240"
  },
  {
    "text": "going to do some sort of slice in here",
    "start": "705240",
    "end": "706500"
  },
  {
    "text": "we're going to take the string null and",
    "start": "706500",
    "end": "708120"
  },
  {
    "text": "do something with it and here's the",
    "start": "708120",
    "end": "709320"
  },
  {
    "text": "options we're going to pass an anonymous",
    "start": "709320",
    "end": "710820"
  },
  {
    "text": "empty struct with the default values put",
    "start": "710820",
    "end": "712440"
  },
  {
    "text": "in and then just try that that means if",
    "start": "712440",
    "end": "715079"
  },
  {
    "text": "there is an error we return the error",
    "start": "715079",
    "end": "717240"
  },
  {
    "text": "else the value will be assigned to",
    "start": "717240",
    "end": "719399"
  },
  {
    "text": "nothing right so very very similar to",
    "start": "719399",
    "end": "721680"
  },
  {
    "text": "rest",
    "start": "721680",
    "end": "723300"
  },
  {
    "text": "errors are handled by a catch operator",
    "start": "723300",
    "end": "725220"
  },
  {
    "text": "yep you can do catch you can do a little",
    "start": "725220",
    "end": "727140"
  },
  {
    "text": "Catch Air this is pretty cool too you",
    "start": "727140",
    "end": "728820"
  },
  {
    "text": "can call a function and then call catch",
    "start": "728820",
    "end": "731220"
  },
  {
    "text": "and provide a little closure right here",
    "start": "731220",
    "end": "732779"
  },
  {
    "text": "effectively this is a capture group and",
    "start": "732779",
    "end": "734579"
  },
  {
    "text": "just say hey give me the things it's",
    "start": "734579",
    "end": "736380"
  },
  {
    "text": "pretty nice right I'm not a fan of the",
    "start": "736380",
    "end": "738120"
  },
  {
    "text": "anonymous syntax Truck Yeah I think that",
    "start": "738120",
    "end": "739980"
  },
  {
    "text": "it's a little weak I agree with it but",
    "start": "739980",
    "end": "741660"
  },
  {
    "text": "it works uh uh and catch unreadable uh",
    "start": "741660",
    "end": "744959"
  },
  {
    "text": "or unreachable as a concept uh twin of",
    "start": "744959",
    "end": "747000"
  },
  {
    "text": "Russ unwrap yes it aborts the execution",
    "start": "747000",
    "end": "749279"
  },
  {
    "text": "of your program if an error occurs yep",
    "start": "749279",
    "end": "750959"
  },
  {
    "text": "that makes sense right when an error",
    "start": "750959",
    "end": "753300"
  },
  {
    "text": "happens this should never happen is what",
    "start": "753300",
    "end": "755160"
  },
  {
    "text": "you're saying your program cannot",
    "start": "755160",
    "end": "756779"
  },
  {
    "text": "proceed I miss uh Ray Zig is very",
    "start": "756779",
    "end": "759720"
  },
  {
    "text": "opinionated on explicit is better than",
    "start": "759720",
    "end": "761820"
  },
  {
    "text": "implicit as a consequent it lacks rust",
    "start": "761820",
    "end": "763860"
  },
  {
    "text": "style uh destructors all the allocations",
    "start": "763860",
    "end": "766320"
  },
  {
    "text": "need to happen explicitly the explicit",
    "start": "766320",
    "end": "768720"
  },
  {
    "text": "allocations are definitely nice but it",
    "start": "768720",
    "end": "770220"
  },
  {
    "text": "lacks destructors uh is a mild foot gun",
    "start": "770220",
    "end": "772500"
  },
  {
    "text": "similar to go Zig offers a defer keyword",
    "start": "772500",
    "end": "775380"
  },
  {
    "text": "to let programmers create shutdown",
    "start": "775380",
    "end": "776940"
  },
  {
    "text": "routines it's idiomatic to write code",
    "start": "776940",
    "end": "778860"
  },
  {
    "text": "like this yeah you see this all the time",
    "start": "778860",
    "end": "780180"
  },
  {
    "text": "right this is like super common in zig",
    "start": "780180",
    "end": "783540"
  },
  {
    "text": "which",
    "start": "783540",
    "end": "784680"
  },
  {
    "text": "it's nice it just simply means at the",
    "start": "784680",
    "end": "786600"
  },
  {
    "text": "end of the scope we deallocated it's",
    "start": "786600",
    "end": "788339"
  },
  {
    "text": "effectively like rust but you just have",
    "start": "788339",
    "end": "790260"
  },
  {
    "text": "to write it uh it's easy to forget and",
    "start": "790260",
    "end": "792060"
  },
  {
    "text": "easy to leak memory or hold on to",
    "start": "792060",
    "end": "793800"
  },
  {
    "text": "resources yeah if you're used to rust or",
    "start": "793800",
    "end": "795839"
  },
  {
    "text": "a modern programming language doing this",
    "start": "795839",
    "end": "797459"
  },
  {
    "text": "again feels Arcane you know I obviously",
    "start": "797459",
    "end": "800700"
  },
  {
    "text": "do see the flip side of that sometimes",
    "start": "800700",
    "end": "802320"
  },
  {
    "text": "you're not interested in calling",
    "start": "802320",
    "end": "803940"
  },
  {
    "text": "destructors EG if your program uses",
    "start": "803940",
    "end": "805620"
  },
  {
    "text": "Arena allocators or creates long-lived",
    "start": "805620",
    "end": "807899"
  },
  {
    "text": "objects which in Rust are a bit painful",
    "start": "807899",
    "end": "809579"
  },
  {
    "text": "to write absolutely uh still a person",
    "start": "809579",
    "end": "812040"
  },
  {
    "text": "who forgets things I miss the",
    "start": "812040",
    "end": "813420"
  },
  {
    "text": "convenience of default destroyed nature",
    "start": "813420",
    "end": "814980"
  },
  {
    "text": "of Rey and rust yeah I completely agree",
    "start": "814980",
    "end": "817500"
  },
  {
    "text": "with this I wish there was a way that",
    "start": "817500",
    "end": "819480"
  },
  {
    "text": "you could provide an interface much like",
    "start": "819480",
    "end": "821040"
  },
  {
    "text": "try you know try also works this way I",
    "start": "821040",
    "end": "823680"
  },
  {
    "text": "wish there was a way you could there",
    "start": "823680",
    "end": "825120"
  },
  {
    "text": "could be like an auto destroy interface",
    "start": "825120",
    "end": "827040"
  },
  {
    "text": "like if you just do if you implement",
    "start": "827040",
    "end": "829139"
  },
  {
    "text": "this it just automatically does it for",
    "start": "829139",
    "end": "831420"
  },
  {
    "text": "you that'd be fantastic as it goes out",
    "start": "831420",
    "end": "833100"
  },
  {
    "text": "of scope I'd love that but I can see why",
    "start": "833100",
    "end": "835200"
  },
  {
    "text": "they don't do that they don't like to do",
    "start": "835200",
    "end": "836519"
  },
  {
    "text": "anything implicit",
    "start": "836519",
    "end": "839880"
  },
  {
    "text": "um using yeah using would be cool right",
    "start": "840300",
    "end": "842040"
  },
  {
    "text": "anything inside the using we need a",
    "start": "842040",
    "end": "844139"
  },
  {
    "text": "monad you could write a macro you could",
    "start": "844139",
    "end": "846560"
  },
  {
    "text": "uh or a comp time thing uh the ecosystem",
    "start": "846560",
    "end": "850139"
  },
  {
    "text": "is still maturing Zig has HTTP and Json",
    "start": "850139",
    "end": "852540"
  },
  {
    "text": "support embedded into the standard",
    "start": "852540",
    "end": "853680"
  },
  {
    "text": "Library which when I first did my work",
    "start": "853680",
    "end": "855120"
  },
  {
    "text": "with it it did not you had to download",
    "start": "855120",
    "end": "857040"
  },
  {
    "text": "it you had to import it it was not as",
    "start": "857040",
    "end": "859620"
  },
  {
    "text": "nice which came in handy since torso is",
    "start": "859620",
    "end": "861779"
  },
  {
    "text": "accessible over HTTP however a lot of",
    "start": "861779",
    "end": "863940"
  },
  {
    "text": "the cool features are only available in",
    "start": "863940",
    "end": "865320"
  },
  {
    "text": "Dev builds which daily releases and are",
    "start": "865320",
    "end": "867600"
  },
  {
    "text": "explicitly described as not mature in",
    "start": "867600",
    "end": "869220"
  },
  {
    "text": "their docs HTTP support was one of them",
    "start": "869220",
    "end": "872160"
  },
  {
    "text": "this forced us to use the newest Dev",
    "start": "872160",
    "end": "873839"
  },
  {
    "text": "release on our CI which kept breaking in",
    "start": "873839",
    "end": "875940"
  },
  {
    "text": "backwards incompatible ways ooh rough",
    "start": "875940",
    "end": "879060"
  },
  {
    "text": "and when we mentioned that having the",
    "start": "879060",
    "end": "880860"
  },
  {
    "text": "whole Library output the final file was",
    "start": "880860",
    "end": "882480"
  },
  {
    "text": "handy for debugging that's from",
    "start": "882480",
    "end": "883980"
  },
  {
    "text": "experience because of an issue with",
    "start": "883980",
    "end": "885540"
  },
  {
    "text": "standard headers we couldn't get",
    "start": "885540",
    "end": "886920"
  },
  {
    "text": "replication working uh ter so well we",
    "start": "886920",
    "end": "889980"
  },
  {
    "text": "couldn't get replication working torso",
    "start": "889980",
    "end": "891959"
  },
  {
    "text": "until it became clear it was an issue",
    "start": "891959",
    "end": "893820"
  },
  {
    "text": "with the standard Library we contributed",
    "start": "893820",
    "end": "895680"
  },
  {
    "text": "the fixed back oh nice content length",
    "start": "895680",
    "end": "898139"
  },
  {
    "text": "header was inspected by mistake which",
    "start": "898139",
    "end": "899639"
  },
  {
    "text": "makes it effectively impossible to use",
    "start": "899639",
    "end": "901139"
  },
  {
    "text": "chunks transfer encoding oh funny",
    "start": "901139",
    "end": "904440"
  },
  {
    "text": "can't do that that's cool though that's",
    "start": "904440",
    "end": "906720"
  },
  {
    "text": "cool that they're patching the HP stuff",
    "start": "906720",
    "end": "908760"
  },
  {
    "text": "chunked uh chunked chunked encoding you",
    "start": "908760",
    "end": "911279"
  },
  {
    "text": "know sometimes you just gotta have it",
    "start": "911279",
    "end": "912839"
  },
  {
    "text": "kind of annoying but you gotta have it",
    "start": "912839",
    "end": "914339"
  },
  {
    "text": "an experience cut let's see the",
    "start": "914339",
    "end": "915660"
  },
  {
    "text": "experience of contributing to Zig was",
    "start": "915660",
    "end": "916920"
  },
  {
    "text": "really great the pr was promptly",
    "start": "916920",
    "end": "918180"
  },
  {
    "text": "reviewed and accepted and landed in",
    "start": "918180",
    "end": "919680"
  },
  {
    "text": "Denver lease soon afterward but at the",
    "start": "919680",
    "end": "922019"
  },
  {
    "text": "end of the day the issue uh issue that",
    "start": "922019",
    "end": "924300"
  },
  {
    "text": "let's see an issue this Central with",
    "start": "924300",
    "end": "925800"
  },
  {
    "text": "HTTP headers does show that the language",
    "start": "925800",
    "end": "927839"
  },
  {
    "text": "has to uh to mature a bit before we can",
    "start": "927839",
    "end": "930000"
  },
  {
    "text": "switch our whole company to it okay",
    "start": "930000",
    "end": "932760"
  },
  {
    "text": "that's reasonable all right the verdict",
    "start": "932760",
    "end": "934620"
  },
  {
    "text": "the overall experience was great Zig",
    "start": "934620",
    "end": "936600"
  },
  {
    "text": "code looks cleaner and postgres C API",
    "start": "936600",
    "end": "938880"
  },
  {
    "text": "header is neatly hidden behind a zig",
    "start": "938880",
    "end": "940500"
  },
  {
    "text": "interface and the standard Library",
    "start": "940500",
    "end": "942240"
  },
  {
    "text": "support for HP and Json means that we",
    "start": "942240",
    "end": "944040"
  },
  {
    "text": "don't need any external dependencies",
    "start": "944040",
    "end": "945480"
  },
  {
    "text": "which has its own value I do agree with",
    "start": "945480",
    "end": "947579"
  },
  {
    "text": "that uh you know I like the fact that I",
    "start": "947579",
    "end": "951300"
  },
  {
    "text": "like when languages just provide the the",
    "start": "951300",
    "end": "953339"
  },
  {
    "text": "things you need right I like that I",
    "start": "953339",
    "end": "955860"
  },
  {
    "text": "personally want that I mean I know you",
    "start": "955860",
    "end": "957540"
  },
  {
    "text": "can do Saturday and then you can do",
    "start": "957540",
    "end": "959940"
  },
  {
    "text": "Saturday Json and then you get it or you",
    "start": "959940",
    "end": "962459"
  },
  {
    "text": "want some other version of the Jetson",
    "start": "962459",
    "end": "963959"
  },
  {
    "text": "you can use that as well but there is",
    "start": "963959",
    "end": "965339"
  },
  {
    "text": "something really nice about a language",
    "start": "965339",
    "end": "966660"
  },
  {
    "text": "just saying here is Json here's how you",
    "start": "966660",
    "end": "969540"
  },
  {
    "text": "decode it first class experience that is",
    "start": "969540",
    "end": "972120"
  },
  {
    "text": "that there's something very I just I",
    "start": "972120",
    "end": "974459"
  },
  {
    "text": "like that experience okay so like python",
    "start": "974459",
    "end": "976860"
  },
  {
    "text": "like JavaScript or better be in",
    "start": "976860",
    "end": "978720"
  },
  {
    "text": "JavaScript like uh not like rust though",
    "start": "978720",
    "end": "980880"
  },
  {
    "text": "rust you do have to kind of you know get",
    "start": "980880",
    "end": "982740"
  },
  {
    "text": "your own thing uh despite a couple of",
    "start": "982740",
    "end": "984300"
  },
  {
    "text": "rough edges we remain incredibly bullish",
    "start": "984300",
    "end": "986100"
  },
  {
    "text": "about the future of Zig the future",
    "start": "986100",
    "end": "987300"
  },
  {
    "text": "though is not yet here",
    "start": "987300",
    "end": "990899"
  },
  {
    "text": "this was a great article",
    "start": "990899",
    "end": "993650"
  },
  {
    "text": "[Applause]",
    "start": "993650",
    "end": "995160"
  },
  {
    "text": "I really really like these kind of",
    "start": "995160",
    "end": "997019"
  },
  {
    "text": "Articles because it wasn't too",
    "start": "997019",
    "end": "999000"
  },
  {
    "text": "technically deep right we're not reading",
    "start": "999000",
    "end": "1000920"
  },
  {
    "text": "just gallons of code right",
    "start": "1000920",
    "end": "1003740"
  },
  {
    "text": "this wasn't gallons of code to be read",
    "start": "1003740",
    "end": "1005600"
  },
  {
    "text": "but it was perfectly to the point it",
    "start": "1005600",
    "end": "1007220"
  },
  {
    "text": "highlighted everything I wanted to know",
    "start": "1007220",
    "end": "1008899"
  },
  {
    "text": "about Zig because the problem with Zig",
    "start": "1008899",
    "end": "1010940"
  },
  {
    "text": "is that I often build only toy projects",
    "start": "1010940",
    "end": "1012860"
  },
  {
    "text": "I'm not building something fully like",
    "start": "1012860",
    "end": "1015079"
  },
  {
    "text": "must be getting ready to be",
    "start": "1015079",
    "end": "1017240"
  },
  {
    "text": "productionized meaning I'm making a",
    "start": "1017240",
    "end": "1018920"
  },
  {
    "text": "really long-term bet on it and so for",
    "start": "1018920",
    "end": "1021019"
  },
  {
    "text": "this is like a this is like a really",
    "start": "1021019",
    "end": "1022880"
  },
  {
    "text": "good example of why you can make a",
    "start": "1022880",
    "end": "1025160"
  },
  {
    "text": "long-term bet on it but you have to know",
    "start": "1025160",
    "end": "1027438"
  },
  {
    "text": "what is happening and so generally how I",
    "start": "1027439",
    "end": "1030199"
  },
  {
    "text": "I judge a language is like language",
    "start": "1030199",
    "end": "1032178"
  },
  {
    "text": "syntax itself uh and then ecosystem",
    "start": "1032179",
    "end": "1035660"
  },
  {
    "text": "that's really important and so the",
    "start": "1035660",
    "end": "1037760"
  },
  {
    "text": "syntax itself and how it handles various",
    "start": "1037760",
    "end": "1039678"
  },
  {
    "text": "cases like it doesn't throw errors it's",
    "start": "1039679",
    "end": "1041839"
  },
  {
    "text": "just a must in today's languages I I",
    "start": "1041839",
    "end": "1044240"
  },
  {
    "text": "hate using languages that throw errors",
    "start": "1044240",
    "end": "1045918"
  },
  {
    "text": "at this point they're just so prone to",
    "start": "1045919",
    "end": "1048860"
  },
  {
    "text": "the most thorny things and the one good",
    "start": "1048860",
    "end": "1050660"
  },
  {
    "text": "use case is a global catch Handler for a",
    "start": "1050660",
    "end": "1052760"
  },
  {
    "text": "CLI application that just terminates",
    "start": "1052760",
    "end": "1054860"
  },
  {
    "text": "your program right like that's the only",
    "start": "1054860",
    "end": "1056720"
  },
  {
    "text": "time I really like it uh and so Zig",
    "start": "1056720",
    "end": "1059120"
  },
  {
    "text": "really fulfills that the the community",
    "start": "1059120",
    "end": "1061460"
  },
  {
    "text": "the ecosystem is pretty good blocks are",
    "start": "1061460",
    "end": "1064520"
  },
  {
    "text": "pretty good so it is it is definitely",
    "start": "1064520",
    "end": "1066140"
  },
  {
    "text": "poised to do something pretty amazing I",
    "start": "1066140",
    "end": "1068480"
  },
  {
    "text": "think Zig will win in embedded",
    "start": "1068480",
    "end": "1070640"
  },
  {
    "text": "if",
    "start": "1070640",
    "end": "1071840"
  },
  {
    "text": "we can really get the right you know if",
    "start": "1071840",
    "end": "1073820"
  },
  {
    "text": "we can get enough people working on it",
    "start": "1073820",
    "end": "1075620"
  },
  {
    "text": "which is kind of unfortunate that it",
    "start": "1075620",
    "end": "1076820"
  },
  {
    "text": "takes a huge people but a huge amount of",
    "start": "1076820",
    "end": "1078559"
  },
  {
    "text": "people to do that and I'm not that",
    "start": "1078559",
    "end": "1079820"
  },
  {
    "text": "person but I think Zig will win",
    "start": "1079820",
    "end": "1081440"
  },
  {
    "text": "ultimately because Zig is just easier to",
    "start": "1081440",
    "end": "1083059"
  },
  {
    "text": "write it's just the right it's just the",
    "start": "1083059",
    "end": "1084740"
  },
  {
    "text": "right thing",
    "start": "1084740",
    "end": "1085640"
  },
  {
    "text": "you know",
    "start": "1085640",
    "end": "1088179"
  },
  {
    "text": "anyways personal thoughts awesome links",
    "start": "1088880",
    "end": "1092299"
  },
  {
    "text": "always in the description",
    "start": "1092299",
    "end": "1095019"
  },
  {
    "text": "I'm actually pretty excited about Dick I",
    "start": "1095539",
    "end": "1097340"
  },
  {
    "text": "still think Zig has a big future ahead",
    "start": "1097340",
    "end": "1098900"
  },
  {
    "text": "of it I just don't feel like Zig is",
    "start": "1098900",
    "end": "1100520"
  },
  {
    "text": "there yet for me oh camel is actually I",
    "start": "1100520",
    "end": "1103220"
  },
  {
    "text": "I'm really excited about oh camel I",
    "start": "1103220",
    "end": "1105440"
  },
  {
    "text": "wrote yet another little thing in O",
    "start": "1105440",
    "end": "1106820"
  },
  {
    "text": "camel this morning very excited about",
    "start": "1106820",
    "end": "1109100"
  },
  {
    "text": "that",
    "start": "1109100",
    "end": "1110480"
  },
  {
    "text": "um you know I I really really want",
    "start": "1110480",
    "end": "1113539"
  },
  {
    "text": "to see that so",
    "start": "1113539",
    "end": "1116299"
  },
  {
    "text": "anywho the name",
    "start": "1116299",
    "end": "1119720"
  },
  {
    "text": "is the primogen",
    "start": "1119720",
    "end": "1122559"
  }
]