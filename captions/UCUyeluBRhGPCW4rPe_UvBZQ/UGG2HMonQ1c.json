[
  {
    "text": "surus to Elixir I recently rewrote a",
    "start": "1360",
    "end": "4640"
  },
  {
    "text": "server a service that was on AWS API",
    "start": "4640",
    "end": "7399"
  },
  {
    "text": "Gateway and Lambda in Elixir and",
    "start": "7399",
    "end": "9519"
  },
  {
    "text": "apparently that intrigued some people so",
    "start": "9519",
    "end": "11360"
  },
  {
    "text": "I decided to do a small write up you",
    "start": "11360",
    "end": "13040"
  },
  {
    "text": "know why you know why you want to guess",
    "start": "13040",
    "end": "16358"
  },
  {
    "text": "why it's because it involves Elixir okay",
    "start": "16359",
    "end": "20119"
  },
  {
    "text": "it has nothing else to do with",
    "start": "20119",
    "end": "21519"
  },
  {
    "text": "serverless or anything people just want",
    "start": "21519",
    "end": "23400"
  },
  {
    "text": "that Elixir juice in their life at all",
    "start": "23400",
    "end": "25240"
  },
  {
    "text": "times every time always this post is",
    "start": "25240",
    "end": "28080"
  },
  {
    "text": "going to be about our motivations for",
    "start": "28080",
    "end": "29439"
  },
  {
    "text": "the move and what replacement",
    "start": "29439",
    "end": "30920"
  },
  {
    "text": "implementation looks like this post is",
    "start": "30920",
    "end": "32480"
  },
  {
    "text": "not a critique of node.js Lambda or",
    "start": "32480",
    "end": "34559"
  },
  {
    "text": "serverless movement but a word of",
    "start": "34559",
    "end": "36200"
  },
  {
    "text": "caution about how pricey it can become",
    "start": "36200",
    "end": "37960"
  },
  {
    "text": "if your services end up going web scale",
    "start": "37960",
    "end": "40480"
  },
  {
    "text": " database trademarked uh we started",
    "start": "40480",
    "end": "43559"
  },
  {
    "text": "with the original service was designed",
    "start": "43559",
    "end": "45160"
  },
  {
    "text": "to collect uh an event stream from",
    "start": "45160",
    "end": "46960"
  },
  {
    "text": "various web browsers collecting",
    "start": "46960",
    "end": "48320"
  },
  {
    "text": "different client metrics and ingest them",
    "start": "48320",
    "end": "50000"
  },
  {
    "text": "into a greater ETL extract transform",
    "start": "50000",
    "end": "54399"
  },
  {
    "text": "load I love a good extracts transform",
    "start": "54399",
    "end": "57480"
  },
  {
    "text": "load system we had previously been using",
    "start": "57480",
    "end": "60320"
  },
  {
    "text": "a thirdparty logging solution that was",
    "start": "60320",
    "end": "62239"
  },
  {
    "text": "getting expensive and we did not provide",
    "start": "62239",
    "end": "63840"
  },
  {
    "text": "ways to extend or interact uh with the",
    "start": "63840",
    "end": "66119"
  },
  {
    "text": "data we stored in a way we needed to",
    "start": "66119",
    "end": "68799"
  },
  {
    "text": "here's a very generalized diagram of our",
    "start": "68799",
    "end": "71320"
  },
  {
    "text": "original system all right all right all",
    "start": "71320",
    "end": "73799"
  },
  {
    "text": "right all right all right a kesa stream",
    "start": "73799",
    "end": "76360"
  },
  {
    "text": "okay I like that word you know it",
    "start": "76360",
    "end": "78080"
  },
  {
    "text": "reminds me of Kinesis the keyboard I use",
    "start": "78080",
    "end": "80079"
  },
  {
    "text": "hashad",
    "start": "80079",
    "end": "82040"
  },
  {
    "text": "hashad use code primen",
    "start": "82040",
    "end": "84680"
  },
  {
    "text": "for 15% off actually it's Prime 360 if",
    "start": "84680",
    "end": "88159"
  },
  {
    "text": "we're going to be real it's Prime it's",
    "start": "88159",
    "end": "89320"
  },
  {
    "text": "not even prime it's actually Prime 360",
    "start": "89320",
    "end": "91119"
  },
  {
    "text": "that was a great ad by the way didn't",
    "start": "91119",
    "end": "93000"
  },
  {
    "text": "even plan the ad but it totally works",
    "start": "93000",
    "end": "96200"
  },
  {
    "text": "links links in the",
    "start": "96200",
    "end": "99600"
  },
  {
    "text": "description all right anyways so they",
    "start": "100079",
    "end": "102040"
  },
  {
    "text": "have API Gateway kesa stream Json schem",
    "start": "102040",
    "end": "104799"
  },
  {
    "text": "of validation Lambda all sorts of crazy",
    "start": "104799",
    "end": "106960"
  },
  {
    "text": "magic okay this looks like every single",
    "start": "106960",
    "end": "109079"
  },
  {
    "text": "project dude basic AF okay I love this",
    "start": "109079",
    "end": "114200"
  },
  {
    "text": "article this article is so good API",
    "start": "114200",
    "end": "117320"
  },
  {
    "text": "Gateway we bound our API client endpoint",
    "start": "117320",
    "end": "120039"
  },
  {
    "text": "directly to a Kinesis stream using",
    "start": "120039",
    "end": "122039"
  },
  {
    "text": "velocity templates so that the",
    "start": "122039",
    "end": "123520"
  },
  {
    "text": "downstream Lambda function could take",
    "start": "123520",
    "end": "125200"
  },
  {
    "text": "the advantage of Lambda Kinesis",
    "start": "125200",
    "end": "126799"
  },
  {
    "text": "functionality and can currently be",
    "start": "126799",
    "end": "128520"
  },
  {
    "text": "invoked to process batches of HTTP posts",
    "start": "128520",
    "end": "131959"
  },
  {
    "text": "we knew that the service would be",
    "start": "131959",
    "end": "133280"
  },
  {
    "text": "handling lots of HTTP requests at a time",
    "start": "133280",
    "end": "136000"
  },
  {
    "text": "and did not want to run into throttling",
    "start": "136000",
    "end": "137599"
  },
  {
    "text": "issues with Lambda so processing it off",
    "start": "137599",
    "end": "140000"
  },
  {
    "text": "a Que in batches was a solid Choice okay",
    "start": "140000",
    "end": "145040"
  },
  {
    "text": "I mean batching is always a good plan",
    "start": "145040",
    "end": "146920"
  },
  {
    "text": "Kinesis our Kinesis stream has varied in",
    "start": "146920",
    "end": "149440"
  },
  {
    "text": "size of bit but if I recall correctly",
    "start": "149440",
    "end": "151200"
  },
  {
    "text": "its highest throughput was 60 to 80",
    "start": "151200",
    "end": "153239"
  },
  {
    "text": "shards to avoid getting right",
    "start": "153239",
    "end": "155480"
  },
  {
    "text": "provisioned throughput exceeded that's a",
    "start": "155480",
    "end": "158160"
  },
  {
    "text": "lot of shards our Lambda was in charge",
    "start": "158160",
    "end": "160239"
  },
  {
    "text": "of pulling batches off the queue",
    "start": "160239",
    "end": "161920"
  },
  {
    "text": "validating that the data made sense",
    "start": "161920",
    "end": "164080"
  },
  {
    "text": "collecting metrics on our metrics",
    "start": "164080",
    "end": "165800"
  },
  {
    "text": "collect metrics honor metrics classic yo",
    "start": "165800",
    "end": "168319"
  },
  {
    "text": "doggy like metrics and ship off the",
    "start": "168319",
    "end": "170519"
  },
  {
    "text": "results to to a whole other Land of",
    "start": "170519",
    "end": "172519"
  },
  {
    "text": "Magic to dis uh dispatch notifications",
    "start": "172519",
    "end": "174640"
  },
  {
    "text": "store replicas of data in S3 for",
    "start": "174640",
    "end": "177159"
  },
  {
    "text": "posterity and compliance manage logevent",
    "start": "177159",
    "end": "180000"
  },
  {
    "text": "retention and ingest events into",
    "start": "180000",
    "end": "182080"
  },
  {
    "text": "gigantic elastic search three cluster or",
    "start": "182080",
    "end": "184519"
  },
  {
    "text": "cluster three all right to Summarize",
    "start": "184519",
    "end": "186720"
  },
  {
    "text": "each post adds an event to the kesa",
    "start": "186720",
    "end": "188400"
  },
  {
    "text": "stream a Lambda pulls off about n events",
    "start": "188400",
    "end": "190440"
  },
  {
    "text": "at a time for processing everything is",
    "start": "190440",
    "end": "192319"
  },
  {
    "text": "hunky dory for now this is a great this",
    "start": "192319",
    "end": "194480"
  },
  {
    "text": "is actually a great introduction they",
    "start": "194480",
    "end": "196519"
  },
  {
    "text": "gave us the meat they gave it to us raw",
    "start": "196519",
    "end": "198319"
  },
  {
    "text": "and we got none of the Annoying Parts",
    "start": "198319",
    "end": "200319"
  },
  {
    "text": "all right the system worked",
    "start": "200319",
    "end": "201480"
  },
  {
    "text": "fantastically for well over a year it",
    "start": "201480",
    "end": "203519"
  },
  {
    "text": "scaled very easily required almost zero",
    "start": "203519",
    "end": "205400"
  },
  {
    "text": "attention this is good I mean this is a",
    "start": "205400",
    "end": "207200"
  },
  {
    "text": "good argument for why relying on other",
    "start": "207200",
    "end": "209159"
  },
  {
    "text": "people's INF structure such a great",
    "start": "209159",
    "end": "210920"
  },
  {
    "text": "argument is cuz you don't have to do",
    "start": "210920",
    "end": "212799"
  },
  {
    "text": " to it when you build it it just",
    "start": "212799",
    "end": "214560"
  },
  {
    "text": "works it's fantastic absolutely in there",
    "start": "214560",
    "end": "217400"
  },
  {
    "text": "more teams and projects on the company",
    "start": "217400",
    "end": "218920"
  },
  {
    "text": "began to interface with it and",
    "start": "218920",
    "end": "222280"
  },
  {
    "text": "then beautiful Daddy basos coming in",
    "start": "222519",
    "end": "226959"
  },
  {
    "text": "hot let's go then it got expensive why",
    "start": "226959",
    "end": "230280"
  },
  {
    "text": "we needed a change API Gateway alone",
    "start": "230280",
    "end": "232439"
  },
  {
    "text": "cost about",
    "start": "232439",
    "end": "233480"
  },
  {
    "text": "$3.5 per million HTP requests that's",
    "start": "233480",
    "end": "236599"
  },
  {
    "text": "awesome I can run my side projects on it",
    "start": "236599",
    "end": "239400"
  },
  {
    "text": "for free I can build stuff in it rather",
    "start": "239400",
    "end": "241760"
  },
  {
    "text": "quickly and get things done but when it",
    "start": "241760",
    "end": "243560"
  },
  {
    "text": "scale so does the bill our let's see our",
    "start": "243560",
    "end": "246480"
  },
  {
    "text": "services our service didn't quite grow",
    "start": "246480",
    "end": "248840"
  },
  {
    "text": "exponentially in use but it did hockey",
    "start": "248840",
    "end": "251079"
  },
  {
    "text": "stick it went from free to a few hundred",
    "start": "251079",
    "end": "253920"
  },
  {
    "text": "to around $112,000 just for API Gateway",
    "start": "253920",
    "end": "256519"
  },
  {
    "text": "no Kinesis no Lambda just API Gateway we",
    "start": "256519",
    "end": "260000"
  },
  {
    "text": "are doing about 5 million requests per",
    "start": "260000",
    "end": "262960"
  },
  {
    "text": "hour you telling me it only cost 350 per",
    "start": "262960",
    "end": "267000"
  },
  {
    "text": "million be about 350 uh I can't believe",
    "start": "267000",
    "end": "270600"
  },
  {
    "text": "I did not recognize tree fit like it was",
    "start": "270600",
    "end": "273240"
  },
  {
    "text": "right there tree fitti was right there",
    "start": "273240",
    "end": "275639"
  },
  {
    "text": "and you're telling me I didn't even see",
    "start": "275639",
    "end": "277120"
  },
  {
    "text": "it uh 12,600 that's a lot of three",
    "start": "277120",
    "end": "280039"
  },
  {
    "text": "fitties yeah again there is no lambdas",
    "start": "280039",
    "end": "282360"
  },
  {
    "text": "doing business logic yet that's just",
    "start": "282360",
    "end": "284520"
  },
  {
    "text": "cash to get the events in that spend is",
    "start": "284520",
    "end": "287039"
  },
  {
    "text": "sustainable but obviously a waste and we",
    "start": "287039",
    "end": "289120"
  },
  {
    "text": "knew that we were going to be adding",
    "start": "289120",
    "end": "291120"
  },
  {
    "text": "additional load to the system in the",
    "start": "291120",
    "end": "292440"
  },
  {
    "text": "near future currently we were processing",
    "start": "292440",
    "end": "294520"
  },
  {
    "text": "up to 12 million events per",
    "start": "294520",
    "end": "296919"
  },
  {
    "text": "hour let's do a math if we stayed on a",
    "start": "296919",
    "end": "299720"
  },
  {
    "text": "Pi Gateway and Lambda all right we're up",
    "start": "299720",
    "end": "301800"
  },
  {
    "text": "to 30,000 30,000 glad we dodged that one",
    "start": "301800",
    "end": "305400"
  },
  {
    "text": "there's 30 days in a month classic 30",
    "start": "305400",
    "end": "307199"
  },
  {
    "text": "days in a month uh bleeding uh let's see",
    "start": "307199",
    "end": "309520"
  },
  {
    "text": "from bleeding cash to let it crash",
    "start": "309520",
    "end": "312320"
  },
  {
    "text": "that's an earling joke okay I don't get",
    "start": "312320",
    "end": "314479"
  },
  {
    "text": "it so a lot of people ask me why not go",
    "start": "314479",
    "end": "317080"
  },
  {
    "text": "this is a great qu this dude I love this",
    "start": "317080",
    "end": "320400"
  },
  {
    "text": "question I've only written a few C tues",
    "start": "320400",
    "end": "322960"
  },
  {
    "text": "and created a few PRS in go I am not nor",
    "start": "322960",
    "end": "325800"
  },
  {
    "text": "do I pretend to be a go Guru we had a",
    "start": "325800",
    "end": "327919"
  },
  {
    "text": "system running at a high scale and I",
    "start": "327919",
    "end": "329440"
  },
  {
    "text": "could risk building it in something I",
    "start": "329440",
    "end": "331039"
  },
  {
    "text": "didn't know how to write efficient",
    "start": "331039",
    "end": "333199"
  },
  {
    "text": "efficiently and operate that's one of",
    "start": "333199",
    "end": "335120"
  },
  {
    "text": "the Beauties about go you pretty much",
    "start": "335120",
    "end": "336720"
  },
  {
    "text": "always write it pretty efficiently uh",
    "start": "336720",
    "end": "338479"
  },
  {
    "text": "aside I did build the to prototype in",
    "start": "338479",
    "end": "340199"
  },
  {
    "text": "Rust for uh for fun one weekend but it",
    "start": "340199",
    "end": "342919"
  },
  {
    "text": "felt irresponsible to deploy it with the",
    "start": "342919",
    "end": "344560"
  },
  {
    "text": "G given I had absolutely zero rust",
    "start": "344560",
    "end": "348440"
  },
  {
    "text": "experience dude this is such a great",
    "start": "355400",
    "end": "358479"
  },
  {
    "text": "take you know we all love these bespoke",
    "start": "358479",
    "end": "362520"
  },
  {
    "text": "artisanal languages but man is that",
    "start": "362520",
    "end": "365479"
  },
  {
    "text": "hilarious why not node it was already",
    "start": "365479",
    "end": "367639"
  },
  {
    "text": "written in node actually most of the",
    "start": "367639",
    "end": "369759"
  },
  {
    "text": "code consuming parts were written in",
    "start": "369759",
    "end": "371000"
  },
  {
    "text": "terraform to deploy it all and velocity",
    "start": "371000",
    "end": "373520"
  },
  {
    "text": "templates to do some inflate request",
    "start": "373520",
    "end": "375199"
  },
  {
    "text": "manipulation to in uh ingest into",
    "start": "375199",
    "end": "377000"
  },
  {
    "text": "Kinesis the node Lambda was rather",
    "start": "377000",
    "end": "378960"
  },
  {
    "text": "simple it pulled off batches validated",
    "start": "378960",
    "end": "381240"
  },
  {
    "text": "them and send them on their way down to",
    "start": "381240",
    "end": "382639"
  },
  {
    "text": "the second Kinesis stream if I was going",
    "start": "382639",
    "end": "384599"
  },
  {
    "text": "to uh set up my own Express server or",
    "start": "384599",
    "end": "386599"
  },
  {
    "text": "whatever and then it would only be",
    "start": "386599",
    "end": "388319"
  },
  {
    "text": "replacing API Gateway portion and my",
    "start": "388319",
    "end": "390199"
  },
  {
    "text": "goal is to replace the Gateway and the",
    "start": "390199",
    "end": "391680"
  },
  {
    "text": "Lambda in one operation uh get the pre",
    "start": "391680",
    "end": "394400"
  },
  {
    "text": "preliminary Kinesis stream out uh out of",
    "start": "394400",
    "end": "398080"
  },
  {
    "text": "there uh this Lambda was originally",
    "start": "398080",
    "end": "400440"
  },
  {
    "text": "processing batches and shipping off",
    "start": "400440",
    "end": "401960"
  },
  {
    "text": "batches now the function function",
    "start": "401960",
    "end": "403720"
  },
  {
    "text": "handling individual requests would also",
    "start": "403720",
    "end": "405680"
  },
  {
    "text": "need to handle the batching we did not",
    "start": "405680",
    "end": "407680"
  },
  {
    "text": "want to hit Kinesis with a single record",
    "start": "407680",
    "end": "409400"
  },
  {
    "text": "at a time okay I don't know what Kinesis",
    "start": "409400",
    "end": "412080"
  },
  {
    "text": "is what is",
    "start": "412080",
    "end": "413759"
  },
  {
    "text": "kinesis I've heard the word Kinesis like",
    "start": "413759",
    "end": "415960"
  },
  {
    "text": "18 times I don't really work with Amazon",
    "start": "415960",
    "end": "419160"
  },
  {
    "text": "what is Kinesis is what is it what's the",
    "start": "419160",
    "end": "421479"
  },
  {
    "text": "thing what does it do someone tell me",
    "start": "421479",
    "end": "425240"
  },
  {
    "text": "it's a AWS cfco or CFA alternative oh",
    "start": "425240",
    "end": "429879"
  },
  {
    "text": "okay oh",
    "start": "429879",
    "end": "432319"
  },
  {
    "text": "okay the keyboard maker the Amazon Q",
    "start": "432319",
    "end": "436240"
  },
  {
    "text": "okay is that the SNS sqs stuff is that",
    "start": "436240",
    "end": "439120"
  },
  {
    "text": "like the proper name behind it yeah no",
    "start": "439120",
    "end": "442440"
  },
  {
    "text": "okay that's different I've only used sqs",
    "start": "442440",
    "end": "444319"
  },
  {
    "text": "and SNS right stuff and only very little",
    "start": "444319",
    "end": "447080"
  },
  {
    "text": "of it sqs is a separate product okay",
    "start": "447080",
    "end": "450120"
  },
  {
    "text": "it's a big data streams oh okay yeah",
    "start": "450120",
    "end": "452000"
  },
  {
    "text": "I've never really yeah I mean I played",
    "start": "452000",
    "end": "453319"
  },
  {
    "text": "with CFA at Netflix I've never played",
    "start": "453319",
    "end": "455000"
  },
  {
    "text": "with it anywhere else we have our own",
    "start": "455000",
    "end": "456800"
  },
  {
    "text": "internal Kafka stuff and mantis and",
    "start": "456800",
    "end": "460160"
  },
  {
    "text": "Raven Raven on top of mantis on top of",
    "start": "460160",
    "end": "462840"
  },
  {
    "text": "Kafka there's a lot of there's a lot of",
    "start": "462840",
    "end": "465039"
  },
  {
    "text": "abstractions there okay it's a lot",
    "start": "465039",
    "end": "467479"
  },
  {
    "text": "there's a lot of things anyways to get",
    "start": "467479",
    "end": "469520"
  },
  {
    "text": "the preliminary C uh oh we already",
    "start": "469520",
    "end": "471319"
  },
  {
    "text": "talked about this so if I let's see so",
    "start": "471319",
    "end": "473879"
  },
  {
    "text": "if I built it in node I would ra let's",
    "start": "473879",
    "end": "475879"
  },
  {
    "text": "see I would rather have to I would",
    "start": "475879",
    "end": "478280"
  },
  {
    "text": "either have to hack up some Global",
    "start": "478280",
    "end": "479840"
  },
  {
    "text": "variable to save my state in or uh in or",
    "start": "479840",
    "end": "483199"
  },
  {
    "text": "depend on some external data store like",
    "start": "483199",
    "end": "484759"
  },
  {
    "text": "reddis to mcash or mcash why not Cobalt",
    "start": "484759",
    "end": "488599"
  },
  {
    "text": "no one asked me that it's a valuable",
    "start": "488599",
    "end": "491240"
  },
  {
    "text": "question to be asked but why Elixir uh",
    "start": "491240",
    "end": "494520"
  },
  {
    "text": "this system has to be up when the rest",
    "start": "494520",
    "end": "496479"
  },
  {
    "text": "of the world falls apart this tool is",
    "start": "496479",
    "end": "498400"
  },
  {
    "text": "used for debugging issues in client",
    "start": "498400",
    "end": "500039"
  },
  {
    "text": "software that runs on a lot of hight",
    "start": "500039",
    "end": "501560"
  },
  {
    "text": "trffic websites it also has to be",
    "start": "501560",
    "end": "503680"
  },
  {
    "text": "absolutely fast our client library is",
    "start": "503680",
    "end": "505440"
  },
  {
    "text": "for sending lots of information per page",
    "start": "505440",
    "end": "507360"
  },
  {
    "text": "load in a lot of customers app",
    "start": "507360",
    "end": "510039"
  },
  {
    "text": "we can't go slowing down our customers",
    "start": "510039",
    "end": "511800"
  },
  {
    "text": "user experience at the same time we",
    "start": "511800",
    "end": "513399"
  },
  {
    "text": "decided since we are running our own",
    "start": "513399",
    "end": "514800"
  },
  {
    "text": "HTTP interface now that we should give",
    "start": "514800",
    "end": "517240"
  },
  {
    "text": "feedback 400 bad requests if the data is",
    "start": "517240",
    "end": "519200"
  },
  {
    "text": "invalid to the developer per request",
    "start": "519200",
    "end": "520839"
  },
  {
    "text": "instead of making them look at what the",
    "start": "520839",
    "end": "522399"
  },
  {
    "text": "reporting tool down the line keep the",
    "start": "522399",
    "end": "524320"
  },
  {
    "text": "users's experience good make the",
    "start": "524320",
    "end": "525920"
  },
  {
    "text": "developers experience better okay it's",
    "start": "525920",
    "end": "528320"
  },
  {
    "text": "cool and I enjoy writing and reading it",
    "start": "528320",
    "end": "531040"
  },
  {
    "text": "honestly one of the most valid reasons",
    "start": "531040",
    "end": "532920"
  },
  {
    "text": "uh I can take I mean again this is the",
    "start": "532920",
    "end": "534720"
  },
  {
    "text": "truest form of DX I can take advantage",
    "start": "534720",
    "end": "536959"
  },
  {
    "text": "of language features to reduce the need",
    "start": "536959",
    "end": "538480"
  },
  {
    "text": "for external dependencies like Rister",
    "start": "538480",
    "end": "540040"
  },
  {
    "text": "mcash okay that's cool too actually",
    "start": "540040",
    "end": "542120"
  },
  {
    "text": "letting it crash like all software",
    "start": "542120",
    "end": "543640"
  },
  {
    "text": "projects I shipped this to production I",
    "start": "543640",
    "end": "545000"
  },
  {
    "text": "forgot everything right from the first",
    "start": "545000",
    "end": "546680"
  },
  {
    "text": "time or hold on like all software",
    "start": "546680",
    "end": "548880"
  },
  {
    "text": "projects I shipped this to production",
    "start": "548880",
    "end": "550880"
  },
  {
    "text": "and got everything right the first time",
    "start": "550880",
    "end": "552880"
  },
  {
    "text": "and it worked fantastically everyone",
    "start": "552880",
    "end": "554720"
  },
  {
    "text": "paded me on the back and said good job",
    "start": "554720",
    "end": "556600"
  },
  {
    "text": "we shared egregious high fives and",
    "start": "556600",
    "end": "559480"
  },
  {
    "text": "people actually carried me out of the",
    "start": "559480",
    "end": "560880"
  },
  {
    "text": "office on a chair over their heads yep",
    "start": "560880",
    "end": "563720"
  },
  {
    "text": "JK I screwed this bad boy up a few times",
    "start": "563720",
    "end": "566320"
  },
  {
    "text": "and pretty sure I set a server on fire",
    "start": "566320",
    "end": "568279"
  },
  {
    "text": "somewhere in the AWS",
    "start": "568279",
    "end": "570160"
  },
  {
    "text": "region my first attempt handling the",
    "start": "570160",
    "end": "572760"
  },
  {
    "text": "HTTP request is the easy part but I had",
    "start": "572760",
    "end": "575200"
  },
  {
    "text": "the batch up data to ship off to Kinesis",
    "start": "575200",
    "end": "577519"
  },
  {
    "text": "one way to use aw Kinesis H HTTP API but",
    "start": "577519",
    "end": "581440"
  },
  {
    "text": "they also have a Kinesis agent that I've",
    "start": "581440",
    "end": "583760"
  },
  {
    "text": "run on Plenty of servers so I figured I",
    "start": "583760",
    "end": "586000"
  },
  {
    "text": "would use Elixir built-in logger module",
    "start": "586000",
    "end": "588480"
  },
  {
    "text": "and run a sidecar container with Kinesis",
    "start": "588480",
    "end": "590800"
  },
  {
    "text": "agent configured to ship my logs dead",
    "start": "590800",
    "end": "593640"
  },
  {
    "text": "simple nice well that BW uh that BW",
    "start": "593640",
    "end": "596760"
  },
  {
    "text": "let's see well that blew to bits quickly",
    "start": "596760",
    "end": "598560"
  },
  {
    "text": "The Elixir stand",
    "start": "598560",
    "end": "599959"
  },
  {
    "text": "logger mentions Alternatives between",
    "start": "599959",
    "end": "602079"
  },
  {
    "text": "sync and async modes to uh remain",
    "start": "602079",
    "end": "604320"
  },
  {
    "text": "performant when required but also",
    "start": "604320",
    "end": "605880"
  },
  {
    "text": "applies back pressure when under",
    "start": "605880",
    "end": "608399"
  },
  {
    "text": "stress there's no way I'm going to do",
    "start": "608399",
    "end": "610640"
  },
  {
    "text": "that that pretty much sounds like",
    "start": "610640",
    "end": "612519"
  },
  {
    "text": "everything I've ever done in my lifetime",
    "start": "612519",
    "end": "614200"
  },
  {
    "text": "literally every single time I think",
    "start": "614200",
    "end": "616120"
  },
  {
    "text": "that's not going to happen that happens",
    "start": "616120",
    "end": "617720"
  },
  {
    "text": "I don't recall the exceptions off hand",
    "start": "617720",
    "end": "619320"
  },
  {
    "text": "because this was the quickest I've ever",
    "start": "619320",
    "end": "620600"
  },
  {
    "text": "shut down a multivar test or rolled back",
    "start": "620600",
    "end": "622920"
  },
  {
    "text": "code but I drove the logger straight",
    "start": "622920",
    "end": "624640"
  },
  {
    "text": "into the ground request times rocketed",
    "start": "624640",
    "end": "626720"
  },
  {
    "text": "skyrocketed many memory went off the",
    "start": "626720",
    "end": "628360"
  },
  {
    "text": "rails and I started seeing all sorts of",
    "start": "628360",
    "end": "629839"
  },
  {
    "text": "errors or all sorts of crashes in the",
    "start": "629839",
    "end": "631839"
  },
  {
    "text": "logger process steam started coming out",
    "start": "631839",
    "end": "634320"
  },
  {
    "text": "of everything and I swear I saw a",
    "start": "634320",
    "end": "636160"
  },
  {
    "text": "sprocket fly off I kind of backed away",
    "start": "636160",
    "end": "638480"
  },
  {
    "text": "slowly from that approach my second",
    "start": "638480",
    "end": "640120"
  },
  {
    "text": "attempt I wanted to make sure I",
    "start": "640120",
    "end": "641480"
  },
  {
    "text": "circumvented any back pressure I needed",
    "start": "641480",
    "end": "643279"
  },
  {
    "text": "to keep the request super fast so I",
    "start": "643279",
    "end": "644800"
  },
  {
    "text": "replaced the logger module with a simple",
    "start": "644800",
    "end": "646399"
  },
  {
    "text": "right to a file that Kinesis agent would",
    "start": "646399",
    "end": "648200"
  },
  {
    "text": "read from writing files in Elixir also",
    "start": "648200",
    "end": "650560"
  },
  {
    "text": "happens through a process but you can",
    "start": "650560",
    "end": "652079"
  },
  {
    "text": "open up a raw access to a file okay I",
    "start": "652079",
    "end": "654760"
  },
  {
    "text": "like it I like it here's a little bit of",
    "start": "654760",
    "end": "656600"
  },
  {
    "text": "code little style for little Style",
    "start": "656600",
    "end": "659800"
  },
  {
    "text": "oh my goodness style forage storage file",
    "start": "659800",
    "end": "662720"
  },
  {
    "text": "a little file storage a behavior event",
    "start": "662720",
    "end": "665079"
  },
  {
    "text": "stream storage new line okay I don't",
    "start": "665079",
    "end": "668000"
  },
  {
    "text": "know what any of this means because this",
    "start": "668000",
    "end": "669079"
  },
  {
    "text": "isn't that fake ass language Elixir",
    "start": "669079",
    "end": "670680"
  },
  {
    "text": "which I what am I looking at I don't",
    "start": "670680",
    "end": "672279"
  },
  {
    "text": "even know what I'm looking at what is",
    "start": "672279",
    "end": "675079"
  },
  {
    "text": "this what is that I don't know what that",
    "start": "675079",
    "end": "677320"
  },
  {
    "text": "is seems fake write file log file",
    "start": "677320",
    "end": "680880"
  },
  {
    "text": "message whatever that means raw dog me",
    "start": "680880",
    "end": "683600"
  },
  {
    "text": "and appended okay they are attribute",
    "start": "683600",
    "end": "685880"
  },
  {
    "text": "yeah sure they are okay sure they are",
    "start": "685880",
    "end": "687480"
  },
  {
    "text": "air Champion sure they are I'm using a",
    "start": "687480",
    "end": "691000"
  },
  {
    "text": "behavior an interface in other languages",
    "start": "691000",
    "end": "693360"
  },
  {
    "text": "uh for storing data this allows me uh to",
    "start": "693360",
    "end": "696959"
  },
  {
    "text": "have a nice easily inspectable",
    "start": "696959",
    "end": "699720"
  },
  {
    "text": "implementation of the store in my test",
    "start": "699720",
    "end": "701720"
  },
  {
    "text": "Suite oh that's nice yeah good job",
    "start": "701720",
    "end": "703279"
  },
  {
    "text": "traits are great uh this actually worked",
    "start": "703279",
    "end": "705440"
  },
  {
    "text": "amazing request times dropped so low I",
    "start": "705440",
    "end": "707639"
  },
  {
    "text": "thought it wasn't working then Ram went",
    "start": "707639",
    "end": "711920"
  },
  {
    "text": "crazy things are obviously a skew when a",
    "start": "712639",
    "end": "715000"
  },
  {
    "text": "web server is using 10 gab of ram this",
    "start": "715000",
    "end": "717320"
  },
  {
    "text": "wasn't Elixir fault it wasn't kesa",
    "start": "717320",
    "end": "719279"
  },
  {
    "text": "faults either anyone know what it was I",
    "start": "719279",
    "end": "721560"
  },
  {
    "text": "mentioned a sidecar container Above This",
    "start": "721560",
    "end": "723519"
  },
  {
    "text": "is running in uh in kubernets and three",
    "start": "723519",
    "end": "725959"
  },
  {
    "text": "containers Elixir Kinesis log rotate are",
    "start": "725959",
    "end": "728839"
  },
  {
    "text": "sharing a volume that volume behind the",
    "start": "728839",
    "end": "731440"
  },
  {
    "text": "scenes is running with temp FS which is",
    "start": "731440",
    "end": "733839"
  },
  {
    "text": "an in-memory file system I could change",
    "start": "733839",
    "end": "736560"
  },
  {
    "text": "it to dis base but then I realized my",
    "start": "736560",
    "end": "738360"
  },
  {
    "text": "goals was to lower dependencies and now",
    "start": "738360",
    "end": "739959"
  },
  {
    "text": "I was sitting on a container full of",
    "start": "739959",
    "end": "741399"
  },
  {
    "text": "them uh was log rotate to deleting files",
    "start": "741399",
    "end": "744160"
  },
  {
    "text": "before Kinesis agent pars them I don't",
    "start": "744160",
    "end": "746240"
  },
  {
    "text": "know I hope not",
    "start": "746240",
    "end": "750320"
  },
  {
    "text": "I know this is getting real this is",
    "start": "750320",
    "end": "751800"
  },
  {
    "text": "getting real this explanation is",
    "start": "751800",
    "end": "754920"
  },
  {
    "text": "thorough oh my goodness just I mean this",
    "start": "754920",
    "end": "758600"
  },
  {
    "text": "is",
    "start": "758600",
    "end": "759600"
  },
  {
    "text": "why I don't see for the near future",
    "start": "759600",
    "end": "762639"
  },
  {
    "text": "devops being anything but a growing",
    "start": "762639",
    "end": "764720"
  },
  {
    "text": "career path is because there's so much",
    "start": "764720",
    "end": "768480"
  },
  {
    "text": "required in all of this you know what I",
    "start": "768480",
    "end": "771240"
  },
  {
    "text": "mean like the amount of stuff required",
    "start": "771240",
    "end": "773320"
  },
  {
    "text": "to know understand and be fast at is",
    "start": "773320",
    "end": "776440"
  },
  {
    "text": "insane I think devops is the only thing",
    "start": "776440",
    "end": "778839"
  },
  {
    "text": "that",
    "start": "778839",
    "end": "780680"
  },
  {
    "text": "Rivals like the front-end ecosystem for",
    "start": "780680",
    "end": "783760"
  },
  {
    "text": "just the amount of insanity that there",
    "start": "783760",
    "end": "785639"
  },
  {
    "text": "is like the amount of things you have to",
    "start": "785639",
    "end": "787320"
  },
  {
    "text": "come up with and do is really fun but I",
    "start": "787320",
    "end": "790040"
  },
  {
    "text": "will say that in like the dev opsy",
    "start": "790040",
    "end": "792160"
  },
  {
    "text": "backend stuff it's so much more fun you",
    "start": "792160",
    "end": "795800"
  },
  {
    "text": "know you're building these tests you're",
    "start": "795800",
    "end": "797320"
  },
  {
    "text": "trying to run you're splitting traffic",
    "start": "797320",
    "end": "798800"
  },
  {
    "text": "seeing it does it live do you do Shadow",
    "start": "798800",
    "end": "800839"
  },
  {
    "text": "traffic do you like inspect like it just",
    "start": "800839",
    "end": "803160"
  },
  {
    "text": "feels for me it just feels more fun but",
    "start": "803160",
    "end": "805800"
  },
  {
    "text": "some people really do love the front end",
    "start": "805800",
    "end": "808279"
  },
  {
    "text": "I don't know it's not for me it just",
    "start": "808279",
    "end": "809639"
  },
  {
    "text": "feels more fun",
    "start": "809639",
    "end": "812399"
  },
  {
    "text": "right all those dollar sucking Bezos",
    "start": "812399",
    "end": "815000"
  },
  {
    "text": "from Mr Bezos made me forget uh that",
    "start": "815000",
    "end": "817399"
  },
  {
    "text": "time honored software principle keep it",
    "start": "817399",
    "end": "819440"
  },
  {
    "text": "uh keep it simple or keep it simple",
    "start": "819440",
    "end": "822000"
  },
  {
    "text": "me the solution was a few gen servers uh",
    "start": "822000",
    "end": "825160"
  },
  {
    "text": "for people not uh from the llang or",
    "start": "825160",
    "end": "826959"
  },
  {
    "text": "Elixir World gen servers are a tool for",
    "start": "826959",
    "end": "828880"
  },
  {
    "text": "implementing a client server",
    "start": "828880",
    "end": "830240"
  },
  {
    "text": "relationship that allows for storing",
    "start": "830240",
    "end": "831680"
  },
  {
    "text": "State and processing work a",
    "start": "831680",
    "end": "833199"
  },
  {
    "text": "synchronously with a simple API it's",
    "start": "833199",
    "end": "835600"
  },
  {
    "text": "built into the language and a fair",
    "start": "835600",
    "end": "837000"
  },
  {
    "text": "amount of language features are built on",
    "start": "837000",
    "end": "838519"
  },
  {
    "text": "top of it here's an oversimplified",
    "start": "838519",
    "end": "840399"
  },
  {
    "text": "diagram of my supervision Tree",
    "start": "840399",
    "end": "842320"
  },
  {
    "text": "application o it's very bright event",
    "start": "842320",
    "end": "844320"
  },
  {
    "text": "stream Q event stream server event",
    "start": "844320",
    "end": "846240"
  },
  {
    "text": "stream worker okay server supports async",
    "start": "846240",
    "end": "848680"
  },
  {
    "text": "and sync calls from HTTP request to",
    "start": "848680",
    "end": "850399"
  },
  {
    "text": "place an event async responds fast with",
    "start": "850399",
    "end": "852759"
  },
  {
    "text": "the 2011 sync responds with any",
    "start": "852759",
    "end": "854639"
  },
  {
    "text": "validation error this allows developers",
    "start": "854639",
    "end": "856440"
  },
  {
    "text": "working on the integration to ask for",
    "start": "856440",
    "end": "857959"
  },
  {
    "text": "errors when they are debugging but run",
    "start": "857959",
    "end": "859959"
  },
  {
    "text": "efficiently when they are releasing code",
    "start": "859959",
    "end": "861399"
  },
  {
    "text": "to clients Q holds batches of work kesa",
    "start": "861399",
    "end": "864120"
  },
  {
    "text": "supports up to 500 items at a time uh up",
    "start": "864120",
    "end": "866600"
  },
  {
    "text": "to five G megabytes in size this queue",
    "start": "866600",
    "end": "868800"
  },
  {
    "text": "gets pummeled by requests and internally",
    "start": "868800",
    "end": "871040"
  },
  {
    "text": "it stores a set of batches when the",
    "start": "871040",
    "end": "872839"
  },
  {
    "text": "count or size is exceeded it a secretly",
    "start": "872839",
    "end": "876000"
  },
  {
    "text": "sends a batch to the worker this gen",
    "start": "876000",
    "end": "878079"
  },
  {
    "text": "server traps exits oh oh my goodness",
    "start": "878079",
    "end": "880839"
  },
  {
    "text": "this gen server traps traps exits wow",
    "start": "880839",
    "end": "883120"
  },
  {
    "text": "too many s's I can never read too many",
    "start": "883120",
    "end": "884720"
  },
  {
    "text": "s's in a row this gen server traps exits",
    "start": "884720",
    "end": "887639"
  },
  {
    "text": "and also dispatches events to the",
    "start": "887639",
    "end": "890160"
  },
  {
    "text": "workers when it receives an exit worker",
    "start": "890160",
    "end": "893240"
  },
  {
    "text": "makes a call to Kinesis put record via a",
    "start": "893240",
    "end": "895079"
  },
  {
    "text": "library called xaw if any event fail to",
    "start": "895079",
    "end": "897920"
  },
  {
    "text": "write they are placed back in into the",
    "start": "897920",
    "end": "899279"
  },
  {
    "text": "queue to be",
    "start": "899279",
    "end": "900959"
  },
  {
    "text": "reprocessed I mean it sounds",
    "start": "900959",
    "end": "903440"
  },
  {
    "text": "simple it sounds simple on",
    "start": "903440",
    "end": "907920"
  },
  {
    "text": "paper how emotionally damaging was it",
    "start": "907959",
    "end": "910759"
  },
  {
    "text": "though can we all at least come to",
    "start": "910759",
    "end": "913199"
  },
  {
    "text": "recognize that the amount of emotional",
    "start": "913199",
    "end": "914720"
  },
  {
    "text": "damage that went on in this probably was",
    "start": "914720",
    "end": "917120"
  },
  {
    "text": "a bit higher than we'd like to we would",
    "start": "917120",
    "end": "919839"
  },
  {
    "text": "like to admit with this approach I have",
    "start": "919839",
    "end": "921720"
  },
  {
    "text": "one binary to ship to no external",
    "start": "921720",
    "end": "923519"
  },
  {
    "text": "dependencies okay that's good that's",
    "start": "923519",
    "end": "925000"
  },
  {
    "text": "actually really awesome this has been",
    "start": "925000",
    "end": "926480"
  },
  {
    "text": "working fantastic response times are",
    "start": "926480",
    "end": "928160"
  },
  {
    "text": "subsecond and resource utilization is",
    "start": "928160",
    "end": "930440"
  },
  {
    "text": "almost constant here's a graph of CPU",
    "start": "930440",
    "end": "933040"
  },
  {
    "text": "versus Ram during our high traffic time",
    "start": "933040",
    "end": "936000"
  },
  {
    "text": "well done this is great very consistent",
    "start": "936000",
    "end": "939040"
  },
  {
    "text": "love it love to see it and our numbers",
    "start": "939040",
    "end": "941959"
  },
  {
    "text": "well rock on rock on the CPU usage",
    "start": "941959",
    "end": "944600"
  },
  {
    "text": "perixir node ranges between uh 6 to 1.8",
    "start": "944600",
    "end": "948040"
  },
  {
    "text": "under heavy uh load Ram stays pretty",
    "start": "948040",
    "end": "950399"
  },
  {
    "text": "consistent in the 100 to 150 range",
    "start": "950399",
    "end": "953240"
  },
  {
    "text": "although I currently over provision it",
    "start": "953240",
    "end": "954880"
  },
  {
    "text": "just in case how does this compare cost",
    "start": "954880",
    "end": "957079"
  },
  {
    "text": "wise it's a lot cheaper for us and mind",
    "start": "957079",
    "end": "959000"
  },
  {
    "text": "that we already have an Ops Team and we",
    "start": "959000",
    "end": "960959"
  },
  {
    "text": "already have a kubernetes cluster",
    "start": "960959",
    "end": "962399"
  },
  {
    "text": "running kubernets cluster running uh our",
    "start": "962399",
    "end": "965000"
  },
  {
    "text": "additional costs are the fractions of EC",
    "start": "965000",
    "end": "967639"
  },
  {
    "text": "ec2 instances that Elixir nodes are",
    "start": "967639",
    "end": "969839"
  },
  {
    "text": "consuming I could argue that it's free",
    "start": "969839",
    "end": "971920"
  },
  {
    "text": "since they are running on leftover",
    "start": "971920",
    "end": "973319"
  },
  {
    "text": "compute but for comparison with numbers",
    "start": "973319",
    "end": "975560"
  },
  {
    "text": "above I'll calculate the cost I'll use",
    "start": "975560",
    "end": "977959"
  },
  {
    "text": "CPU since that is what our this service",
    "start": "977959",
    "end": "980560"
  },
  {
    "text": "is mostly constrained by yeah that makes",
    "start": "980560",
    "end": "982319"
  },
  {
    "text": "sense our general kubernets instance",
    "start": "982319",
    "end": "984639"
  },
  {
    "text": "group is running on t2.2 XLS that is 40",
    "start": "984639",
    "end": "989079"
  },
  {
    "text": "4 cents per hour and have eight virtual",
    "start": "989079",
    "end": "991440"
  },
  {
    "text": "CPUs each so that makes about point or",
    "start": "991440",
    "end": "994120"
  },
  {
    "text": "makes about 5 cents uh or oo yeah yeah 5",
    "start": "994120",
    "end": "998040"
  },
  {
    "text": "cents per CPU per hour okay we're",
    "start": "998040",
    "end": "1000759"
  },
  {
    "text": "currently running three to five elixir",
    "start": "1000759",
    "end": "1002240"
  },
  {
    "text": "nodes using between 0.5 to two CPUs each",
    "start": "1002240",
    "end": "1005360"
  },
  {
    "text": "on the lower end",
    "start": "1005360",
    "end": "1008040"
  },
  {
    "text": "$59 on the higher end",
    "start": "1008040",
    "end": "1011639"
  },
  {
    "text": "$397 they went from what would be $ 30",
    "start": "1011639",
    "end": "1014160"
  },
  {
    "text": "some th000 now to $500 and some Dollar",
    "start": "1014160",
    "end": "1016839"
  },
  {
    "text": "on the high end or remember it's not 12K",
    "start": "1016839",
    "end": "1019959"
  },
  {
    "text": "12K was the old",
    "start": "1019959",
    "end": "1021839"
  },
  {
    "text": "numbers it went up to 30k with where",
    "start": "1021839",
    "end": "1024280"
  },
  {
    "text": "they're at now and that's just for API",
    "start": "1024280",
    "end": "1027000"
  },
  {
    "text": "Gateway remember they replaced API",
    "start": "1027000",
    "end": "1028520"
  },
  {
    "text": "Gateway plus the Lambda service so that",
    "start": "1028520",
    "end": "1031640"
  },
  {
    "text": "assuming the Lambda service isn't",
    "start": "1031640",
    "end": "1035000"
  },
  {
    "text": "zero it's something right let's just",
    "start": "1035000",
    "end": "1038558"
  },
  {
    "text": "assume it's not",
    "start": "1038559",
    "end": "1040438"
  },
  {
    "text": "zero uh uh we haven't had an Elixir node",
    "start": "1040439",
    "end": "1043600"
  },
  {
    "text": "uh using above 1.8 CPUs and on average",
    "start": "1043600",
    "end": "1045839"
  },
  {
    "text": "we were running four nodes at a total of",
    "start": "1045839",
    "end": "1047438"
  },
  {
    "text": "1.1 CPUs okay so",
    "start": "1047439",
    "end": "1050480"
  },
  {
    "text": "$174 so should everyone go and rewrite",
    "start": "1050480",
    "end": "1052679"
  },
  {
    "text": "their server uh serverless servers in",
    "start": "1052679",
    "end": "1054799"
  },
  {
    "text": "Elixir roll out kubernets uh get a nose",
    "start": "1054799",
    "end": "1057720"
  },
  {
    "text": "piercing absolutely",
    "start": "1057720",
    "end": "1059760"
  },
  {
    "text": "not get",
    "start": "1059760",
    "end": "1061559"
  },
  {
    "text": "a a good part of this entire system",
    "start": "1061559",
    "end": "1063799"
  },
  {
    "text": "still runs on uh in Lambda although it",
    "start": "1063799",
    "end": "1066039"
  },
  {
    "text": "will be moving into Elixir over time to",
    "start": "1066039",
    "end": "1067960"
  },
  {
    "text": "make it easier to reason about and",
    "start": "1067960",
    "end": "1069400"
  },
  {
    "text": "develop on locally what everybody should",
    "start": "1069400",
    "end": "1071840"
  },
  {
    "text": "do is think about where your service is",
    "start": "1071840",
    "end": "1073880"
  },
  {
    "text": "going and can you afford those costs",
    "start": "1073880",
    "end": "1075679"
  },
  {
    "text": "when you get there if you don't have a",
    "start": "1075679",
    "end": "1077799"
  },
  {
    "text": "team of Ops people and you aren't",
    "start": "1077799",
    "end": "1079840"
  },
  {
    "text": "familiar with server full stuff spending",
    "start": "1079840",
    "end": "1082320"
  },
  {
    "text": "30k a month on HTTP requests might be",
    "start": "1082320",
    "end": "1084480"
  },
  {
    "text": "cheaper than an OP steam absolutely this",
    "start": "1084480",
    "end": "1086840"
  },
  {
    "text": "is a great call out you got to make you",
    "start": "1086840",
    "end": "1089159"
  },
  {
    "text": "got you got to decide what sword you're",
    "start": "1089159",
    "end": "1091080"
  },
  {
    "text": "going to fall on but if you're already",
    "start": "1091080",
    "end": "1092559"
  },
  {
    "text": "at 30,000 and you're planning on",
    "start": "1092559",
    "end": "1094799"
  },
  {
    "text": "doubling or tripling you got to start",
    "start": "1094799",
    "end": "1097159"
  },
  {
    "text": "thinking about the future right at what",
    "start": "1097159",
    "end": "1099360"
  },
  {
    "text": "point do you change course and when do",
    "start": "1099360",
    "end": "1102440"
  },
  {
    "text": "you know to change course right it's",
    "start": "1102440",
    "end": "1103960"
  },
  {
    "text": "it's really about trying to predict the",
    "start": "1103960",
    "end": "1105320"
  },
  {
    "text": "future but if you have the team you know",
    "start": "1105320",
    "end": "1108120"
  },
  {
    "text": "how or will",
    "start": "1108120",
    "end": "1109280"
  },
  {
    "text": "once you hit the scale there is a lot of",
    "start": "1109280",
    "end": "1110840"
  },
  {
    "text": "room for savings by running your own",
    "start": "1110840",
    "end": "1112240"
  },
  {
    "text": "infrastructure update I was asked on The",
    "start": "1112240",
    "end": "1114000"
  },
  {
    "text": "Elixir Forum about the loss tolerance",
    "start": "1114000",
    "end": "1116039"
  },
  {
    "text": "I'll go into that a bit more in detail",
    "start": "1116039",
    "end": "1117559"
  },
  {
    "text": "here footnotes a downside oh it'll go",
    "start": "1117559",
    "end": "1119960"
  },
  {
    "text": "into here it's some other article if you",
    "start": "1119960",
    "end": "1121840"
  },
  {
    "text": "follow the link you can find the link uh",
    "start": "1121840",
    "end": "1124280"
  },
  {
    "text": "footnotes a downside to this approach",
    "start": "1124280",
    "end": "1125880"
  },
  {
    "text": "was developers using this async service",
    "start": "1125880",
    "end": "1128280"
  },
  {
    "text": "uh we returned 2011's and were unable to",
    "start": "1128280",
    "end": "1130559"
  },
  {
    "text": "tell them at the time if the data they",
    "start": "1130559",
    "end": "1132360"
  },
  {
    "text": "sent was valid and ingestible yeah I I",
    "start": "1132360",
    "end": "1134600"
  },
  {
    "text": "was wondering about that because they do",
    "start": "1134600",
    "end": "1135760"
  },
  {
    "text": "a 2011 first and then they do like a",
    "start": "1135760",
    "end": "1138880"
  },
  {
    "text": "another reporting they would have to use",
    "start": "1138880",
    "end": "1140760"
  },
  {
    "text": "some additional tooling to see if their",
    "start": "1140760",
    "end": "1142039"
  },
  {
    "text": "events made it to where they were",
    "start": "1142039",
    "end": "1143280"
  },
  {
    "text": "supposed to go okay the system uh uses",
    "start": "1143280",
    "end": "1146760"
  },
  {
    "text": "itself to monitor different aspects of",
    "start": "1146760",
    "end": "1148520"
  },
  {
    "text": "itself like ratios of malformed events",
    "start": "1148520",
    "end": "1151159"
  },
  {
    "text": "throughput and uh workflow step counters",
    "start": "1151159",
    "end": "1153600"
  },
  {
    "text": "okay interesting uh it's the compiler",
    "start": "1153600",
    "end": "1156520"
  },
  {
    "text": "that builds itself uh the back half of",
    "start": "1156520",
    "end": "1158640"
  },
  {
    "text": "the system is still in Lambda and no JS",
    "start": "1158640",
    "end": "1160960"
  },
  {
    "text": "but the invocations are tiny compare uh",
    "start": "1160960",
    "end": "1163320"
  },
  {
    "text": "in comparison to what was being invoked",
    "start": "1163320",
    "end": "1165120"
  },
  {
    "text": "by the lambdas exposed to the user",
    "start": "1165120",
    "end": "1166559"
  },
  {
    "text": "interactions yeah cuz the batching",
    "start": "1166559",
    "end": "1167880"
  },
  {
    "text": "happened here so it's one 1 15th right",
    "start": "1167880",
    "end": "1170280"
  },
  {
    "text": "uh so that means 12 million becomes what",
    "start": "1170280",
    "end": "1172720"
  },
  {
    "text": "hundreds of",
    "start": "1172720",
    "end": "1175200"
  },
  {
    "text": "thousands uh 2,000 events was our sweet",
    "start": "1175240",
    "end": "1178640"
  },
  {
    "text": "spot for real-time rendering of graphs",
    "start": "1178640",
    "end": "1181159"
  },
  {
    "text": "oh okay you may be thinking that sounds",
    "start": "1181159",
    "end": "1183039"
  },
  {
    "text": "like that can be replaced with the",
    "start": "1183039",
    "end": "1184480"
  },
  {
    "text": "Kinesis fire hose transform function it",
    "start": "1184480",
    "end": "1186799"
  },
  {
    "text": "could be I wasn't aware of or it didn't",
    "start": "1186799",
    "end": "1188960"
  },
  {
    "text": "exist at the time our system was",
    "start": "1188960",
    "end": "1190200"
  },
  {
    "text": "originally designed and now that we need",
    "start": "1190200",
    "end": "1191799"
  },
  {
    "text": "to get off the API Gateway it doesn't",
    "start": "1191799",
    "end": "1193400"
  },
  {
    "text": "matter it is a rad feature though my",
    "start": "1193400",
    "end": "1196000"
  },
  {
    "text": "word play is out of this world",
    "start": "1196000",
    "end": "1199880"
  },
  {
    "text": "I actually agree with this entire thing",
    "start": "1199880",
    "end": "1201440"
  },
  {
    "text": "including point6 I actually was thinking",
    "start": "1201440",
    "end": "1203200"
  },
  {
    "text": "this entire time this guy is an",
    "start": "1203200",
    "end": "1207360"
  },
  {
    "text": "inspiration as to how to make jokes for",
    "start": "1207360",
    "end": "1210120"
  },
  {
    "text": "technical content this is this is such a",
    "start": "1210120",
    "end": "1212520"
  },
  {
    "text": "good article this is such a good article",
    "start": "1212520",
    "end": "1215960"
  },
  {
    "text": "hyper media please uh this is a good",
    "start": "1215960",
    "end": "1217760"
  },
  {
    "text": "article okay okay okay okay hold on",
    "start": "1217760",
    "end": "1220640"
  },
  {
    "text": "there you go the article uh that's a",
    "start": "1220640",
    "end": "1222280"
  },
  {
    "text": "really good AR the article is really",
    "start": "1222280",
    "end": "1223679"
  },
  {
    "text": "really good IET I just love this stuff",
    "start": "1223679",
    "end": "1226559"
  },
  {
    "text": "because you know I I'm a bit of a",
    "start": "1226559",
    "end": "1228760"
  },
  {
    "text": "contrarian sometimes for the sake of",
    "start": "1228760",
    "end": "1230600"
  },
  {
    "text": "being a contrarian and I know that's not",
    "start": "1230600",
    "end": "1232200"
  },
  {
    "text": "good to be a contrarian for the sake of",
    "start": "1232200",
    "end": "1234200"
  },
  {
    "text": "contrarian but when everybody tells me",
    "start": "1234200",
    "end": "1236440"
  },
  {
    "text": "how amazing serverless is and that",
    "start": "1236440",
    "end": "1238640"
  },
  {
    "text": "there's no downsides ever and",
    "start": "1238640",
    "end": "1240120"
  },
  {
    "text": "everything's great and everything's",
    "start": "1240120",
    "end": "1241280"
  },
  {
    "text": "fantastic there's some part of it that",
    "start": "1241280",
    "end": "1245960"
  },
  {
    "text": "feels it it it feels like I'm being lied",
    "start": "1245960",
    "end": "1249520"
  },
  {
    "text": "to and I feel like I have to Simply go",
    "start": "1249520",
    "end": "1252480"
  },
  {
    "text": "against the",
    "start": "1252480",
    "end": "1254880"
  },
  {
    "text": "grain completely just because I don't",
    "start": "1254880",
    "end": "1258240"
  },
  {
    "text": "believe people you know what I mean like",
    "start": "1258240",
    "end": "1260120"
  },
  {
    "text": "how many times have you been in a",
    "start": "1260120",
    "end": "1261320"
  },
  {
    "text": "meeting and someone States like oh this",
    "start": "1261320",
    "end": "1264240"
  },
  {
    "text": "thing does this and you're like no it",
    "start": "1264240",
    "end": "1266320"
  },
  {
    "text": "doesn't it does not whatever you're like",
    "start": "1266320",
    "end": "1269400"
  },
  {
    "text": "d we've had people be like oh Json Json",
    "start": "1269400",
    "end": "1271360"
  },
  {
    "text": "is cheap and you're like no it's not",
    "start": "1271360",
    "end": "1273159"
  },
  {
    "text": "Json is like half of what your server",
    "start": "1273159",
    "end": "1277159"
  },
  {
    "text": "does it's not it's amazing uh for node",
    "start": "1277919",
    "end": "1281240"
  },
  {
    "text": "which is harder to have long running",
    "start": "1281240",
    "end": "1282600"
  },
  {
    "text": "Services yeah you know that it's very",
    "start": "1282600",
    "end": "1284559"
  },
  {
    "text": "funny you say those kind of things",
    "start": "1284559",
    "end": "1285799"
  },
  {
    "text": "because what that says to me is that",
    "start": "1285799",
    "end": "1287039"
  },
  {
    "text": "node is fundamentally sucky",
    "start": "1287039",
    "end": "1289360"
  },
  {
    "text": "if it's hard to have a long running",
    "start": "1289360",
    "end": "1290880"
  },
  {
    "text": "service it's not node's fault it's",
    "start": "1290880",
    "end": "1294559"
  },
  {
    "text": "JavaScript JavaScript it's just so easy",
    "start": "1294559",
    "end": "1297720"
  },
  {
    "text": "to make mistakes it's so easy to do the",
    "start": "1297720",
    "end": "1299640"
  },
  {
    "text": "wrong thing in I'm not convinced it is",
    "start": "1299640",
    "end": "1302000"
  },
  {
    "text": "fantastic I just simply am not I'm just",
    "start": "1302000",
    "end": "1304400"
  },
  {
    "text": "I'm convinced I don't like that",
    "start": "1304400",
    "end": "1306159"
  },
  {
    "text": "statement you should you should you",
    "start": "1306159",
    "end": "1308240"
  },
  {
    "text": "should be able to write a program that",
    "start": "1308240",
    "end": "1309960"
  },
  {
    "text": "lives for a long time I don't know it's",
    "start": "1309960",
    "end": "1312120"
  },
  {
    "text": "just strange to me anyways I'm just very",
    "start": "1312120",
    "end": "1314279"
  },
  {
    "text": "uh I I will always be very very uh",
    "start": "1314279",
    "end": "1317200"
  },
  {
    "text": "contrarian even",
    "start": "1317200",
    "end": "1319120"
  },
  {
    "text": "potentially contrarian to a fault just",
    "start": "1319120",
    "end": "1322000"
  },
  {
    "text": "because I want to go against the grain I",
    "start": "1322000",
    "end": "1324080"
  },
  {
    "text": "I don't believe when people say things",
    "start": "1324080",
    "end": "1325559"
  },
  {
    "text": "are fantastic because I've never seen",
    "start": "1325559",
    "end": "1327200"
  },
  {
    "text": "something be fantastic so this article",
    "start": "1327200",
    "end": "1329799"
  },
  {
    "text": "is awesome it just shows that there is",
    "start": "1329799",
    "end": "1332039"
  },
  {
    "text": "more Nuance to that conversation it's",
    "start": "1332039",
    "end": "1334200"
  },
  {
    "text": "not as cheap or as free as people make",
    "start": "1334200",
    "end": "1336960"
  },
  {
    "text": "it but if you don't have the team or the",
    "start": "1336960",
    "end": "1339520"
  },
  {
    "text": "experience sometimes it's worth having a",
    "start": "1339520",
    "end": "1341559"
  },
  {
    "text": "fake engineer who's worth $400,000 a",
    "start": "1341559",
    "end": "1344919"
  },
  {
    "text": "year on your team because it takes care",
    "start": "1344919",
    "end": "1347080"
  },
  {
    "text": "of everything for you",
    "start": "1347080",
    "end": "1349279"
  },
  {
    "text": "you know what I mean the",
    "start": "1349279",
    "end": "1351279"
  },
  {
    "text": "name is the primagen",
    "start": "1351279",
    "end": "1355320"
  }
]