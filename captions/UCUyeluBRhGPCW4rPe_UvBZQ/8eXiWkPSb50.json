[
  {
    "text": "i have never watched this presentation and everybody has said this is the greatest presentation of all time simple",
    "start": "80",
    "end": "6720"
  },
  {
    "text": "made e rich hickey 2011 i kind of feel like I've missed out on some lore here",
    "start": "6720",
    "end": "11920"
  },
  {
    "text": "sorry but not sorry because now we got to do it together all right so who's ready for some more C category theory",
    "start": "11920",
    "end": "19480"
  },
  {
    "text": "um it's what I have always wanted to hear at the beginning of a video always this already feels like it's made by Pic",
    "start": "19720",
    "end": "25760"
  },
  {
    "text": "and it's about to be D's nuts you're all in the wrong room",
    "start": "25760",
    "end": "31439"
  },
  {
    "text": "uh so this talk uh I I hope seems uh deceptively obvious",
    "start": "33920",
    "end": "41239"
  },
  {
    "text": "uh one of the things that's great about this conference is this is a this is a pretty cutting edge crowd a lot of you",
    "start": "41239",
    "end": "46320"
  },
  {
    "text": "are adopting new technologies a lot of you are doing functional programming and uh you may you may be nodding saying",
    "start": "46320",
    "end": "52079"
  },
  {
    "text": "yeah yeah yeah through parts of this and yeah yeah yeah yeah i can already tell I like rich you",
    "start": "52079",
    "end": "58800"
  },
  {
    "text": "know just I can tell you know um if some of it's familiar that that's great uh on",
    "start": "58800",
    "end": "65600"
  },
  {
    "text": "the other hand I think that I I would hope that you would come away from this talk with some tools you could use uh to",
    "start": "65600",
    "end": "72159"
  },
  {
    "text": "help conduct a similar kind of discussion to this talk with other people that you're trying to convince to",
    "start": "72159",
    "end": "78720"
  },
  {
    "text": "do the right thing uh I I do love those statements it's too",
    "start": "78720",
    "end": "85360"
  },
  {
    "text": "good there is definitely an implied like oh I do know fully what the right thing is that's like 98% of all my arguments I",
    "start": "85360",
    "end": "92799"
  },
  {
    "text": "ever had at my previous job was me just arguing about what is the right thing and me thinking I had the right thing",
    "start": "92799",
    "end": "99040"
  },
  {
    "text": "and and they think they have the right thing every single time so I'll start with an appeal to",
    "start": "99040",
    "end": "106200"
  },
  {
    "text": "authority um simplicity is a prerequisite for reliability i certainly agree with this um I don't agree with",
    "start": "106200",
    "end": "112479"
  },
  {
    "text": "everything Dystra said and I and I think he might have been very wrong about proof in particular but I think he's",
    "start": "112479",
    "end": "119600"
  },
  {
    "text": "right about this uh we need to build simple systems if we want to build good",
    "start": "119600",
    "end": "125159"
  },
  {
    "text": "systems and uh I don't think we focus enough on that u I love word origins",
    "start": "125159",
    "end": "131200"
  },
  {
    "text": "they're tremendous fun um before he goes on I hope hopefully he's going to define the word simple i've always had a very",
    "start": "131200",
    "end": "137200"
  },
  {
    "text": "hard time with those kind of statements because I feel often simplicity is in the eye of the beholder some people find",
    "start": "137200",
    "end": "142879"
  },
  {
    "text": "something simple that others find very complex or difficult i'm curious if we if if it's going to come out to be",
    "start": "142879",
    "end": "148959"
  },
  {
    "text": "something that I can like I can fully understand or is it going to be something that I'm going to just still be confused generally by one of the",
    "start": "148959",
    "end": "156000"
  },
  {
    "text": "reasons why they're fun is because words come to mean whatever we all",
    "start": "156000",
    "end": "161440"
  },
  {
    "text": "accept them to mean you know whatever's commonly understood to be the meaning is what it means and uh it's often interesting to say",
    "start": "161440",
    "end": "167760"
  },
  {
    "text": "well I wish I could I wish we'd go back to what it really means and use that and I think there's a couple of words that",
    "start": "167760",
    "end": "173120"
  },
  {
    "text": "I'm going to use in this talk that I would love for you to come away uh knowing the origins of and try to use",
    "start": "173120",
    "end": "179040"
  },
  {
    "text": "more precisely especially when talking about software uh so the first word is",
    "start": "179040",
    "end": "185480"
  },
  {
    "text": "simple um and the roots of this word are sim and plex and that means uh one fold",
    "start": "185480",
    "end": "192159"
  },
  {
    "text": "or one braid or twist um and uh that",
    "start": "192159",
    "end": "197840"
  },
  {
    "text": "Wait a second at any point was it ever simplex versus complex because that would have been so sweet is that what",
    "start": "197840",
    "end": "204239"
  },
  {
    "text": "we're talking about is that what we're talking about is that we're going to we were going to get at there was a world that it could have been simplex and",
    "start": "204239",
    "end": "209920"
  },
  {
    "text": "complex to make him very obvious about one um literally fold or twist of course",
    "start": "209920",
    "end": "216879"
  },
  {
    "text": "one twist modernity sucks what's one twist look like no twists right actually",
    "start": "216879",
    "end": "222959"
  },
  {
    "text": "um and it the opposite of this word is uh complex which means braided together",
    "start": "222959",
    "end": "229440"
  },
  {
    "text": "or folded together um being able to think about our software in terms of whether or not it's folded together sort",
    "start": "229440",
    "end": "235680"
  },
  {
    "text": "of the central point of this talk uh the other word we frequently use",
    "start": "235680",
    "end": "240799"
  },
  {
    "text": "interchangeably with simple is the word easy and the derivation there is to a",
    "start": "240799",
    "end": "246400"
  },
  {
    "text": "French word and the last step of this derivation is actually speculative but uh I bought it uh because it serves this",
    "start": "246400",
    "end": "252959"
  },
  {
    "text": "talk really well uh and that is from the Latin word that is the root of adjacent",
    "start": "252959",
    "end": "259120"
  },
  {
    "text": "uh and which means to lie near and to be nearby and the opposite is hard of",
    "start": "259120",
    "end": "265120"
  },
  {
    "text": "course the root of hard has nothing to do with lying near it doesn't mean lie far away um it actually means like",
    "start": "265120",
    "end": "272199"
  },
  {
    "text": "strong or torturously so",
    "start": "272199",
    "end": "277240"
  },
  {
    "text": "uh so if we want to so does that mean hard is not the opposite of easy okay",
    "start": "277240",
    "end": "283520"
  },
  {
    "text": "well either way good good definitions apply simple to the kinds of work that",
    "start": "283520",
    "end": "289600"
  },
  {
    "text": "we do um we're going to start with this concept of having one braid and look at it in a few different",
    "start": "289600",
    "end": "298160"
  },
  {
    "text": "dimensions i thought it was interesting in Eric's talk to talk about dimensions because it's definitely a big part of doing design work um and so if we want",
    "start": "298160",
    "end": "304479"
  },
  {
    "text": "to look for simple things we want to look for things that have sort of one of something they do they have one role",
    "start": "304479",
    "end": "311039"
  },
  {
    "text": "they fulfill one task or job they're about accomplishing sort of one objective uh they might be about one",
    "start": "311039",
    "end": "319880"
  },
  {
    "text": "concept like security um and and sort of overlapping with that",
    "start": "319880",
    "end": "326880"
  },
  {
    "text": "is they may they may be about a particular dimension of the problem that you're trying to solve uh the critical",
    "start": "326880",
    "end": "332479"
  },
  {
    "text": "thing there though is that when you're looking for something that's simple you want to see it have focus in these areas",
    "start": "332479",
    "end": "338400"
  },
  {
    "text": "uh you don't want to see it combining things uh on the other hand we can't get too fixated about uh one in particular",
    "start": "338400",
    "end": "346960"
  },
  {
    "text": "simple doesn't mean uh that there's only one of them right uh it also doesn't",
    "start": "346960",
    "end": "352240"
  },
  {
    "text": "mean um an interface that only has one operation so it's important to distinguish uh",
    "start": "352240",
    "end": "361120"
  },
  {
    "text": "u cardality right counting things from actual interle what matters for",
    "start": "361120",
    "end": "366800"
  },
  {
    "text": "simplicity is that there's there's no interle that there's only one thing this",
    "start": "366800",
    "end": "372160"
  },
  {
    "text": "is where we get dangerously close to clean code right and I think this is probably this is probably where clean code and all these ideas they all spawn",
    "start": "372160",
    "end": "379039"
  },
  {
    "text": "from the same idea which is that we want to be able you want to be able to look at a piece of code and understand it and",
    "start": "379039",
    "end": "384479"
  },
  {
    "text": "you also want to be able to look at a piece of code and understand that it's it is likely to continue to work but I",
    "start": "384479",
    "end": "389759"
  },
  {
    "text": "always found clean code at least the approach of breaking things into a bunch of little functions constantly it",
    "start": "389759",
    "end": "395039"
  },
  {
    "text": "doesn't go someone okay hold on this goes in the opposite of clean code it doesn't because right that's the whole point of clean code is that you break",
    "start": "395039",
    "end": "400639"
  },
  {
    "text": "things down into steps and you have these really simple things that just do one thing really really well the hard",
    "start": "400639",
    "end": "406000"
  },
  {
    "text": "part is is that I'm like entirely too stupid to handle clean code i can't just",
    "start": "406000",
    "end": "411759"
  },
  {
    "text": "continuously jump through layers of abstraction doing one thing at a time because I just I just kind of get really",
    "start": "411759",
    "end": "418560"
  },
  {
    "text": "confu confused i think Rich uh Hickeyy's version is more about being orthogonal rather than uh doing one thing yeah",
    "start": "418560",
    "end": "423759"
  },
  {
    "text": "that's what So I we haven't got to what he's attempting to say yet it's just that that's how I kind of think about",
    "start": "423759",
    "end": "428960"
  },
  {
    "text": "this is that this feels like you get dangerously close to clean code i didn't say it was okay you heard me i said",
    "start": "428960",
    "end": "435360"
  },
  {
    "text": "dangerously close i'm just more curious about what is going to be the separation between it uh and that's very",
    "start": "435360",
    "end": "443000"
  },
  {
    "text": "important uh okay the other critical thing about",
    "start": "443000",
    "end": "448639"
  },
  {
    "text": "simple as we've just described it right is if something is interled or not um",
    "start": "448639",
    "end": "455360"
  },
  {
    "text": "that's sort of an objective thing can probably go and look and see i don't see",
    "start": "455360",
    "end": "460479"
  },
  {
    "text": "any connections i don't see anywhere i'm curious what he means by interle i I think about like because UIs and how",
    "start": "460479",
    "end": "467280"
  },
  {
    "text": "they manipulate data is is a very interle like it's very interle by its very nature and so I'm",
    "start": "467280",
    "end": "475199"
  },
  {
    "text": "curious about this interle because some like it just sometimes it feels like some parts of a system just have to",
    "start": "475199",
    "end": "480800"
  },
  {
    "text": "interle or I'm a bad programmer where this twist was something else so simple",
    "start": "480800",
    "end": "485919"
  },
  {
    "text": "is actually an objective notion that's also very important in",
    "start": "485919",
    "end": "491360"
  },
  {
    "text": "deciding the difference between simple and easy okay uh so let's look at easy",
    "start": "491360",
    "end": "497440"
  },
  {
    "text": "uh I think this notion of nearness is really really cool uh did he just mention locality of behavior did he just",
    "start": "497440",
    "end": "503840"
  },
  {
    "text": "mention HTMX did Did Did Rich just say React sucks",
    "start": "503840",
    "end": "510440"
  },
  {
    "text": "he could have in particular obviously there's many ways in which something can be near right there's sort of the",
    "start": "512719",
    "end": "519440"
  },
  {
    "text": "physical notion of being near same right is something uh you know like right",
    "start": "519440",
    "end": "525120"
  },
  {
    "text": "there and I think that's where the root of the word came from you know this is easy to obtain because it's it's nearby",
    "start": "525120",
    "end": "530720"
  },
  {
    "text": "it's not in the next town i don't have to take a horse or whatever to go get to it we don't have the same notion of",
    "start": "530720",
    "end": "535839"
  },
  {
    "text": "physicality necessarily in our software um but we do sort of have you know our own hard drive or our own tool set uh or",
    "start": "535839",
    "end": "543519"
  },
  {
    "text": "sort of the ability to make things is this also an active argument against Docker",
    "start": "543519",
    "end": "548720"
  },
  {
    "text": "what you could just have the thing right here or not have it or maybe this is an inverse argument for Docker which is you",
    "start": "548720",
    "end": "555360"
  },
  {
    "text": "don't have to I mean I will say that I I would run if I had to run my own database I'd like to run it in Docker",
    "start": "555360",
    "end": "561120"
  },
  {
    "text": "but everything else have you ever tried to develop through Docker it's sometimes a huge pain in the ass and by sometimes",
    "start": "561120",
    "end": "566959"
  },
  {
    "text": "means that unless if it's your toy project in which you only have it for you and it's really small very simple",
    "start": "566959",
    "end": "574399"
  },
  {
    "text": "once you go to a big company you're always like this is going to be great it's works on any machine you use it like it works on any machine but mine",
    "start": "574399",
    "end": "581200"
  },
  {
    "text": "all right here we go physically near by getting them uh through things like installers and stuff like that the",
    "start": "581200",
    "end": "588640"
  },
  {
    "text": "second notion of nearness is something being near to our understanding right or",
    "start": "588640",
    "end": "594080"
  },
  {
    "text": "in our current skill set and uh I don't mean in this case near to our",
    "start": "594080",
    "end": "600080"
  },
  {
    "text": "understanding meaning a capability i mean literally near something that we already know uh so the word I do feel",
    "start": "600080",
    "end": "606959"
  },
  {
    "text": "like this right here this this easy aspect and what he's saying with nearer understanding this is like one of the",
    "start": "606959",
    "end": "612800"
  },
  {
    "text": "most common reasons why say react is so popular it is because it's near a your",
    "start": "612800",
    "end": "619839"
  },
  {
    "text": "understanding of how the DOM works then it's also near in JavaScript meaning that you can kind of like just marry",
    "start": "619839",
    "end": "625200"
  },
  {
    "text": "those two things and then people have this idea and it's really it's actually I mean there's some part of it that's",
    "start": "625200",
    "end": "630720"
  },
  {
    "text": "very very good which is selecting the best tool for the job is often the tool you're most familiar with so if you can",
    "start": "630720",
    "end": "636720"
  },
  {
    "text": "combine both those things you obviously be you're obviously able to go really really fast and you can solve problems",
    "start": "636720",
    "end": "644720"
  },
  {
    "text": "that otherwise would have taken you a lot longer i think that that's really really good but I think the inverse is",
    "start": "644720",
    "end": "650839"
  },
  {
    "text": "that if you always do that you never actually learn something new or it's very hard to learn something new because",
    "start": "650839",
    "end": "657120"
  },
  {
    "text": "something new is the opposite of easy right it's not right next to you you have to go further away to learn how to",
    "start": "657120",
    "end": "662880"
  },
  {
    "text": "solve a problem in a more unique way which could very well be significantly more efficient could be significantly",
    "start": "662880",
    "end": "668240"
  },
  {
    "text": "better word the word in this case is is about being familiar um I haven't really fully embraced",
    "start": "668240",
    "end": "675120"
  },
  {
    "text": "functional programming so I don't know if it's actually better maybe 2026 will be the year of functional programming",
    "start": "675120",
    "end": "681120"
  },
  {
    "text": "for me I think that uh collectively we are infatuated with these two notions of",
    "start": "681120",
    "end": "687920"
  },
  {
    "text": "easy we are just so self-involved in these two aspects it's hurting us",
    "start": "687920",
    "end": "694600"
  },
  {
    "text": "tremendously right all we care about is you know can I get this instantly and start running in 5 seconds it could be",
    "start": "694600",
    "end": "700720"
  },
  {
    "text": "this giant hairball that you got but all you care is you know can you get it um",
    "start": "700720",
    "end": "706079"
  },
  {
    "text": "in addition we're fixated on oh I can't I can't read that uh by the way I hate",
    "start": "706079",
    "end": "713480"
  },
  {
    "text": "that this idea that I mean there there is objectively bad code right if you have a closure and a closure and a",
    "start": "713480",
    "end": "719519"
  },
  {
    "text": "closure and a closure and it's producing all these functions and it's based on like some sort of switch statement state of incoming messages like it's just",
    "start": "719519",
    "end": "726880"
  },
  {
    "text": "producing a lot of variation and it's very hard to test it's very hard to break out like yeah obviously there is",
    "start": "726880",
    "end": "731920"
  },
  {
    "text": "bad code but I can like so much of working on a team involves somebody else",
    "start": "731920",
    "end": "737839"
  },
  {
    "text": "rewriting something because they felt like it could be simpler or simpler for",
    "start": "737839",
    "end": "743120"
  },
  {
    "text": "them easy for them and often what I I feel like is that easy I'm going to try",
    "start": "743120",
    "end": "748639"
  },
  {
    "text": "to use the correct term easy not simple in this case easy is often or is definitely based on his term is",
    "start": "748639",
    "end": "754880"
  },
  {
    "text": "definitely the one I think about when I think of the eye of the beholder this is easier for me to understand why well",
    "start": "754880",
    "end": "760720"
  },
  {
    "text": "pretty much because you wrote it it's hard to understand someone else's code it's easy to understand your code it's",
    "start": "760720",
    "end": "767279"
  },
  {
    "text": "convenient it's simple it's close um I can't read German does that mean",
    "start": "767279",
    "end": "772399"
  },
  {
    "text": "German is unreadable no I don't know German uh so you know this this sort of",
    "start": "772399",
    "end": "780000"
  },
  {
    "text": "approach is is definitely not helpful in particular if",
    "start": "780000",
    "end": "787360"
  },
  {
    "text": "you want everything to be familiar you will never learn anything new because it can't",
    "start": "787360",
    "end": "793360"
  },
  {
    "text": "be bam beautiful that is so good if you Yes if you want things to be familiar",
    "start": "799399",
    "end": "805680"
  },
  {
    "text": "you'll literally never learn something new this is perfect absolutely perfectly said",
    "start": "805680",
    "end": "811680"
  },
  {
    "text": "be significantly different from what you already know and not drift away from the familiarity",
    "start": "811680",
    "end": "818000"
  },
  {
    "text": "but again you know like the entire point of programming is not to learn something new it is to",
    "start": "818000",
    "end": "823839"
  },
  {
    "text": "actually build something useful for people to use and useful can take up a lot of like variation to that and so",
    "start": "823839",
    "end": "829839"
  },
  {
    "text": "that's why you got to balance the idea of familiar versus learning i do think that that's a very important concept",
    "start": "829839",
    "end": "835360"
  },
  {
    "text": "because you meet people that are only doing non-necapable stuff and that means",
    "start": "835360",
    "end": "840720"
  },
  {
    "text": "you're always learning which means you're never actually becoming a master at anything and then the inverse is that you only do things that are familiar to",
    "start": "840720",
    "end": "846240"
  },
  {
    "text": "you so you're like the ultimate at one thing there's a third aspect of being easy uh that I don't think we think",
    "start": "846240",
    "end": "853199"
  },
  {
    "text": "enough about um that's going to become critical to this discussion which is which now is being near to our",
    "start": "853199",
    "end": "860360"
  },
  {
    "text": "capabilities and uh we don't like to talk about this because it makes us uncomfortable because what kind of capabilities are we're talking about but",
    "start": "860360",
    "end": "866720"
  },
  {
    "text": "if we're talking about easy in the case of violin playing or piano playing or mountain climbing or something like that",
    "start": "866720",
    "end": "873600"
  },
  {
    "text": "well you know I don't personally feel bad if I don't play the violin well because I don't play the violin at all",
    "start": "873600",
    "end": "880720"
  },
  {
    "text": "um but the work that we're in is conceptual work so when we talk start talking about something being outside of",
    "start": "880720",
    "end": "887519"
  },
  {
    "text": "our capability well you know it really starts trampling on our our egos in a big way um and so you know due to a you",
    "start": "887519",
    "end": "896639"
  },
  {
    "text": "know I've never had to worry about this due to the fact that I'm incapable i've never had to worry about",
    "start": "896639",
    "end": "903279"
  },
  {
    "text": "my ego being trampled by my incapability it's like it's kind of a life hack super",
    "start": "903279",
    "end": "910399"
  },
  {
    "text": "easy barely an inconvenience honestly a combination of hubris and insecurity we",
    "start": "910399",
    "end": "916880"
  },
  {
    "text": "never really talk about whether or not something is outside of our capabilities uh it ends up that",
    "start": "916880",
    "end": "922839"
  },
  {
    "text": "um it's not so embarrassing after all because we don't have tremendously divergent abilities in that area",
    "start": "922839",
    "end": "930560"
  },
  {
    "text": "uh the last thing I want to say about easy and the critical thing to distinguish it from simple is that easy",
    "start": "930560",
    "end": "936639"
  },
  {
    "text": "is relative right playing the violin and reading German are really hard for me",
    "start": "936639",
    "end": "942800"
  },
  {
    "text": "they're easy for other people certain other people uh so unlike simple where we can go and look for interleings look",
    "start": "942800",
    "end": "949759"
  },
  {
    "text": "for braiding easy is always going to be you know easy for whom or hard for whom",
    "start": "949759",
    "end": "955680"
  },
  {
    "text": "it's a relative term uh the fact that we throw these things around sort of casually saying \"Oh I like to use that",
    "start": "955680",
    "end": "961279"
  },
  {
    "text": "technology because it's simple.\" And when I'm saying simple I mean easy and when I'm saying easy I mean because I",
    "start": "961279",
    "end": "966320"
  },
  {
    "text": "already know something that looks very much alike that is how this whole thing this guy's like my spirit",
    "start": "966320",
    "end": "971880"
  },
  {
    "text": "animal i never had the correct terms for simple i do love his definition of simple and I'm going to use it from here",
    "start": "971880",
    "end": "978480"
  },
  {
    "text": "on out and I love using easy the way he says easy this is so good because it it",
    "start": "978480",
    "end": "985920"
  },
  {
    "text": "does definitely add a a a very nice like formal nature to saying those words yeah",
    "start": "985920",
    "end": "992160"
  },
  {
    "text": "I'm stealing the definitions oh yeah these definitions are incredible i do love that relative is easy because this",
    "start": "992160",
    "end": "997199"
  },
  {
    "text": "has always been the thing about simple and I think this is why I've always had such a hard time with the word simple and you you've heard me complain about",
    "start": "997199",
    "end": "1003600"
  },
  {
    "text": "it a thousand times about how people always like simple and I'm like simple is so relative it's because I've always",
    "start": "1003600",
    "end": "1008800"
  },
  {
    "text": "had simple as definition or defined by as easy as and I think ev almost",
    "start": "1008800",
    "end": "1014320"
  },
  {
    "text": "virtually everyone I've ever talked to has the exact same kind of unfortunate problem of simple being a",
    "start": "1014320",
    "end": "1022440"
  },
  {
    "text": "non-objective relative kind of measurement like easy is degrades",
    "start": "1022440",
    "end": "1027880"
  },
  {
    "text": "never discussion about the qualities um that matter to us in our software",
    "start": "1027880",
    "end": "1034918"
  },
  {
    "text": "so what's one critical area where we that where we have to distinguish these two things uh and",
    "start": "1034919",
    "end": "1042280"
  },
  {
    "text": "uh and look at them from a perspective of them being easy and being simple um",
    "start": "1042280",
    "end": "1048240"
  },
  {
    "text": "it is it has to do with constructs and artifacts right we program with constructs we have programming languages",
    "start": "1048240",
    "end": "1054080"
  },
  {
    "text": "we use particular libraries and uh those things in and of themselves when we look",
    "start": "1054080",
    "end": "1060240"
  },
  {
    "text": "at them like when we look at the code we write have certain characteristics in and of themselves but we're in a",
    "start": "1060240",
    "end": "1066720"
  },
  {
    "text": "business of artifacts right we don't ship source code and the user doesn't look at our source code and say ah",
    "start": "1066720",
    "end": "1073600"
  },
  {
    "text": "that's so pleasant right no they run our software and they run it for a long",
    "start": "1073600",
    "end": "1079760"
  },
  {
    "text": "period of time and over time we keep glomming more stuff on our software ware",
    "start": "1079760",
    "end": "1084960"
  },
  {
    "text": "all that stuff the running of it um the performance of it the ability to change it all is an attribute of the artifact",
    "start": "1084960",
    "end": "1093440"
  },
  {
    "text": "not the original construct uh but again here we still focus so much on our",
    "start": "1093440",
    "end": "1100480"
  },
  {
    "text": "experience of the use of the construct oh look I only had to type 16 characters",
    "start": "1100480",
    "end": "1105760"
  },
  {
    "text": "wow that's great no he's saying in a very nice way nobody",
    "start": "1105760",
    "end": "1112160"
  },
  {
    "text": "cares how hard you work like that's it nobody cares this is why in some sense I",
    "start": "1112160",
    "end": "1118400"
  },
  {
    "text": "can feel really bad for the devs who made Concord you know that $300 million flop but at the exact same time I don't",
    "start": "1118400",
    "end": "1124640"
  },
  {
    "text": "feel bad for them because they lost the plot the plot was very very simple you got to make a game that people like it",
    "start": "1124640",
    "end": "1130559"
  },
  {
    "text": "doesn't matter how hard you worked it doesn't matter how amazing the voice acting is really doesn't matter about",
    "start": "1130559",
    "end": "1135840"
  },
  {
    "text": "any of those things if people don't like it sorry i mean sucks that you have",
    "start": "1135840",
    "end": "1143360"
  },
  {
    "text": "Morgan Freeman as a voice actor but nobody liked it so it doesn't really matter you know at the end of the day",
    "start": "1143360",
    "end": "1148480"
  },
  {
    "text": "the only thing that matters is the end product semicolons or things like that concord",
    "start": "1148480",
    "end": "1153679"
  },
  {
    "text": "is a moneyaundering screen this whole notion of sort of programmer convenience again we are infatuated with it yes not",
    "start": "1153679",
    "end": "1160400"
  },
  {
    "text": "not to our benefit we use the term uh developer experience now instead of programmer convenience i'm pretty sure",
    "start": "1160400",
    "end": "1166160"
  },
  {
    "text": "this is going to be a onetoone translation is that you know you see these phrases like pit of success and",
    "start": "1166160",
    "end": "1172320"
  },
  {
    "text": "all this i've never really liked any of those things because I'm not quite convinced a there is a pit of success",
    "start": "1172320",
    "end": "1177520"
  },
  {
    "text": "and b if a pit of success is actually a good thing i'm more and more convinced that if you really want to understand",
    "start": "1177520",
    "end": "1183840"
  },
  {
    "text": "like just yesterday you saw me trying to get copilot LSP up and I didn't want to have to go read all the documentation on the internet so I just used Copilot or I",
    "start": "1183840",
    "end": "1191120"
  },
  {
    "text": "used Grock tried to do some deep research get something up and just get it up and running and what ends up happening one thing doesn't work and I",
    "start": "1191120",
    "end": "1197679"
  },
  {
    "text": "have no idea why there's no pit of success and even when there is a pit of success a slight deviation from it makes",
    "start": "1197679",
    "end": "1203679"
  },
  {
    "text": "you feel completely out of your depths you just I mean I don't think there is any sort of there's no shortcut for",
    "start": "1203679",
    "end": "1211520"
  },
  {
    "text": "reading the docs no matter how much I want that to be true at the end of the day sometimes you got to just take one",
    "start": "1211520",
    "end": "1217840"
  },
  {
    "text": "hour and read on the flip side it gets even worse hey cog girl our employers are also",
    "start": "1217840",
    "end": "1224400"
  },
  {
    "text": "infatuated with it right those first two meanings of easy what do they mean right",
    "start": "1224400",
    "end": "1230720"
  },
  {
    "text": "if I can get another programmer in here right and they look at your source code",
    "start": "1230720",
    "end": "1236559"
  },
  {
    "text": "and they think it's familiar right and uh by the way this is",
    "start": "1236559",
    "end": "1242640"
  },
  {
    "text": "this just the it this has been the bane of for so long programmer replaceability",
    "start": "1242640",
    "end": "1247919"
  },
  {
    "text": "i blame scrum for that employers do not value tribal knowledge which is an insane thing to do the fact that",
    "start": "1247919",
    "end": "1254960"
  },
  {
    "text": "employers don't realize that someone who's been there for three years just has so much more understanding of things",
    "start": "1254960",
    "end": "1260080"
  },
  {
    "text": "than someone there who's brand new dude it's just like how do you not keep paying that person more the replacement",
    "start": "1260080",
    "end": "1266240"
  },
  {
    "text": "cost of that is so much money that's just one of those things where I just",
    "start": "1266240",
    "end": "1272159"
  },
  {
    "text": "don't understand how people don't purchase uh loyalty right how do you not",
    "start": "1272159",
    "end": "1277760"
  },
  {
    "text": "purchase loyalty as a company it is so obvious you should do that someone there",
    "start": "1277760",
    "end": "1282880"
  },
  {
    "text": "that's there for 6 months is vastly less valuable a good portion of the time than",
    "start": "1282880",
    "end": "1288720"
  },
  {
    "text": "someone that's been there for five years now obviously there's like some we could argue that there's there's all these",
    "start": "1288720",
    "end": "1293760"
  },
  {
    "text": "different situations in which someone that's been there for a long time maybe they're just riding their laurels of early success and they're not really learning blah blah blah blah blah",
    "start": "1293760",
    "end": "1300240"
  },
  {
    "text": "totally get it but it's just like why would you as a company not take your",
    "start": "1300240",
    "end": "1306880"
  },
  {
    "text": "like performers and just keep paying them to the point where you're just like absolutely no you won't go somewhere",
    "start": "1306880",
    "end": "1313120"
  },
  {
    "text": "else because I want you to stay here if I lose you it's hundreds of thousands of dollars for so long and plus all that",
    "start": "1313120",
    "end": "1320159"
  },
  {
    "text": "opportunity cost plus all the feature things that don't get done plus all the changes in architecture plus all that hidden dude it's just like how is this",
    "start": "1320159",
    "end": "1326720"
  },
  {
    "text": "not an obvious thing they already know the toolkit right so it's near at hand they've always had the same tool in",
    "start": "1326720",
    "end": "1332080"
  },
  {
    "text": "their toolkit they can read it i can replace you it's a breeze especially if",
    "start": "1332080",
    "end": "1337200"
  },
  {
    "text": "I ignore the third notion of easy right which is whether or not anybody can understand your code right because that",
    "start": "1337200",
    "end": "1344159"
  },
  {
    "text": "they don't actually care about that they just care that somebody can go and sit in your seat start typing um I think AI",
    "start": "1344159",
    "end": "1350080"
  },
  {
    "text": "is going to make this notion even worse right because like there's there's nice parts about AI like it's really it's",
    "start": "1350080",
    "end": "1356080"
  },
  {
    "text": "dude semantic search is like super sweet absolutely love it like if I if I",
    "start": "1356080",
    "end": "1361200"
  },
  {
    "text": "get thrown into a codebase I can just like start asking questions with cursor",
    "start": "1361200",
    "end": "1366720"
  },
  {
    "text": "that's like a super cool feature and if they've already started to set up these context files it makes it super easy to",
    "start": "1366720",
    "end": "1373600"
  },
  {
    "text": "actually run fast but it also gives this false illusion that programmers are in fact",
    "start": "1373600",
    "end": "1379840"
  },
  {
    "text": "more replaceable so again as sort of business owners um there's sort of an again the same kind of focus on those",
    "start": "1379840",
    "end": "1386960"
  },
  {
    "text": "first two aspects of easy because it makes programmers replaceable so we're going to we're going to contrast this with the impacts",
    "start": "1386960",
    "end": "1393520"
  },
  {
    "text": "of long-term use right uh what does it mean to use this long term and",
    "start": "1393520",
    "end": "1399960"
  },
  {
    "text": "uh what what's there what's there is all the meat right does the software do what",
    "start": "1399960",
    "end": "1405520"
  },
  {
    "text": "it's supposed to do um is it of high quality can we rely on it doing what",
    "start": "1405520",
    "end": "1410960"
  },
  {
    "text": "it's supposed to do can we um fix problems when they arise and if we're given a new requirement can we change it",
    "start": "1410960",
    "end": "1418799"
  },
  {
    "text": "these things have nothing to do with the construct as we typed it in or very",
    "start": "1418799",
    "end": "1424320"
  },
  {
    "text": "little to do with it and have a lot to do with um the attributes of the artifact um we have to start assessing",
    "start": "1424320",
    "end": "1432559"
  },
  {
    "text": "our constructs based around the artifacts not around the look and feel of the experience of typing it in um or",
    "start": "1432559",
    "end": "1440000"
  },
  {
    "text": "the cultural aspects of that so let's talk a little about bit about limits oh",
    "start": "1440000",
    "end": "1445600"
  },
  {
    "text": "look it does move this is just supposed to sort of lull you into this state where",
    "start": "1445600",
    "end": "1451919"
  },
  {
    "text": "everything I say seems true did Rich invent the Subway Surfer is",
    "start": "1451919",
    "end": "1458159"
  },
  {
    "text": "that what he just Did he just admit to that i guess all those people that",
    "start": "1458159",
    "end": "1463600"
  },
  {
    "text": "blamed brain rot on Tik Tok and Generation Z it was the millennials this",
    "start": "1463600",
    "end": "1468880"
  },
  {
    "text": "whole time or generation X were the killers",
    "start": "1468880",
    "end": "1474520"
  },
  {
    "text": "cuz I can't use monads to do that",
    "start": "1474559",
    "end": "1479399"
  },
  {
    "text": "friaking millennials uh this stuff is pretty simple logic right how can we",
    "start": "1480480",
    "end": "1485840"
  },
  {
    "text": "possibly make things that are reliable that we don't understand right it's very very",
    "start": "1485840",
    "end": "1490960"
  },
  {
    "text": "difficult um I think uh sorry this is just too funny goddamn toast eater",
    "start": "1490960",
    "end": "1497840"
  },
  {
    "text": "avocado toast eaters that is truly a millennial that",
    "start": "1497840",
    "end": "1504559"
  },
  {
    "text": "is just such a millennial start right there it's just It's just so true i can't even help it it's the greatest",
    "start": "1504559",
    "end": "1510159"
  },
  {
    "text": "thing of all time professor Susman made a great point saying there's going to be this trade-off right as we make things more",
    "start": "1510159",
    "end": "1517840"
  },
  {
    "text": "flexible and extensible and dynamic uh in some possible futures for some kinds of systems uh we are going to make a",
    "start": "1517840",
    "end": "1524400"
  },
  {
    "text": "trade-off in our ability to to um understand their their behavior and make",
    "start": "1524400",
    "end": "1530000"
  },
  {
    "text": "sure that they're correct um but for the things that we want to understand and and make sure are correct we're going to",
    "start": "1530000",
    "end": "1536320"
  },
  {
    "text": "be limited uh we're going to be limited to our understanding and our understanding is is very limited right",
    "start": "1536320",
    "end": "1541679"
  },
  {
    "text": "there's the whole notion of you know how many how many balls can you keep in the air at the time or how many things can you keep in mind at a time it's a it's a",
    "start": "1541679",
    "end": "1547679"
  },
  {
    "text": "limited number and it's a very small number right so we can only consider a few things and when things are",
    "start": "1547679",
    "end": "1552960"
  },
  {
    "text": "intertwined together we lose the ability to take them in isolation so if every time I think I pull out a new part of um",
    "start": "1552960",
    "end": "1560240"
  },
  {
    "text": "the software I need to comprehend and it's attached to another thing I have to pull that other thing into my mind",
    "start": "1560240",
    "end": "1565760"
  },
  {
    "text": "because I can't think about the one without the other that's the nature of them being intertwined so every",
    "start": "1565760",
    "end": "1571640"
  },
  {
    "text": "intertwining is adding this burden and the burden is kind of combinatorial uh as to the number of things that we",
    "start": "1571640",
    "end": "1578400"
  },
  {
    "text": "can we can consider so fundamentally this complexity and by complexity I mean",
    "start": "1578400",
    "end": "1584000"
  },
  {
    "text": "this braiding together of things um is going to limit our ability to understand our",
    "start": "1584000",
    "end": "1589240"
  },
  {
    "text": "systems so uh so how do we change our software um",
    "start": "1589240",
    "end": "1596720"
  },
  {
    "text": "apparently I heard in a talk today that agile and extreme programming have shown that refactoring and tests um allow us",
    "start": "1596720",
    "end": "1604159"
  },
  {
    "text": "to make uh change with zero impact i've met very few tests that",
    "start": "1604159",
    "end": "1610880"
  },
  {
    "text": "survive a refactor i never knew that um I still do not know",
    "start": "1610880",
    "end": "1618080"
  },
  {
    "text": "that because that's not actually a knowable thing it's that's fooy",
    "start": "1618080",
    "end": "1624960"
  },
  {
    "text": "uh I like if you're going to change software you're going to need to analyze what it does and make decisions about",
    "start": "1624960",
    "end": "1631360"
  },
  {
    "text": "what it ought to do you I mean at least you're going to have to go and say what is the impact of this potential change",
    "start": "1631360",
    "end": "1637760"
  },
  {
    "text": "right and what parts of the software do I need to go to to affect the change um",
    "start": "1637760",
    "end": "1645120"
  },
  {
    "text": "and you know I don't I don't care if you're using XP or Agile or anything else you're not going to get around the",
    "start": "1645120",
    "end": "1650880"
  },
  {
    "text": "fact that if you can't reason about your program you can't make these decisions",
    "start": "1650880",
    "end": "1656039"
  },
  {
    "text": "um but I do want to make clear here because a lot of people as soon as I would I would interject and add on top",
    "start": "1656039",
    "end": "1661679"
  },
  {
    "text": "of it even if you can reason about your system and even if you know the problem space super",
    "start": "1661679",
    "end": "1667960"
  },
  {
    "text": "well changes to the system are going to have just unforeseen things like I have",
    "start": "1667960",
    "end": "1673360"
  },
  {
    "text": "never made a change to a program that I did not have some level of fear that",
    "start": "1673360",
    "end": "1678799"
  },
  {
    "text": "it's going to cause a break that I just did not understand that something's going to happen like I I just don't like",
    "start": "1678799",
    "end": "1685120"
  },
  {
    "text": "I don't think I foresee any other way you can make changes they hear the word reason about they're",
    "start": "1685120",
    "end": "1691440"
  },
  {
    "text": "like oh my god are you saying that you have to be able to prove programs i am not I don't believe in that i don't",
    "start": "1691440",
    "end": "1696880"
  },
  {
    "text": "think that's an objective i'm just talking about informal reasoning the same kind of reasoning we use every day to decide what we're going to do we do",
    "start": "1696880",
    "end": "1703840"
  },
  {
    "text": "not take out category theory and say you know we we that's actually what",
    "start": "1703840",
    "end": "1709600"
  },
  {
    "text": "I say every time I whip out my category theor",
    "start": "1709600",
    "end": "1713840"
  },
  {
    "text": "theory actually can reason without it thank goodness so what about what about the",
    "start": "1715960",
    "end": "1723120"
  },
  {
    "text": "other side right there's two things you do with the future of your software one is you add new capabilities the other thing is you fix the ones you didn't get",
    "start": "1723120",
    "end": "1729600"
  },
  {
    "text": "you know so you know done so well uh and I like to ask this question what's true",
    "start": "1729600",
    "end": "1735200"
  },
  {
    "text": "of every bug found in the field what is true of every bug found in the field oh",
    "start": "1735200",
    "end": "1742039"
  },
  {
    "text": "no it was put there by us somebody made it i mean that's the only thing I can really say but now you also got AI so",
    "start": "1742039",
    "end": "1748960"
  },
  {
    "text": "it's like goten it got written yes",
    "start": "1748960",
    "end": "1754799"
  },
  {
    "text": "what's a more interesting fact about it it passed the type checker what else did",
    "start": "1754799",
    "end": "1760960"
  },
  {
    "text": "it do bro don't know about that JavaScript grind",
    "start": "1760960",
    "end": "1766640"
  },
  {
    "text": "oh sorry typescript oh sorry it's Typescript okay hey hey those are real",
    "start": "1766640",
    "end": "1772720"
  },
  {
    "text": "types okay it You've never been lied to in production okay",
    "start": "1772720",
    "end": "1778159"
  },
  {
    "text": "it passed all the tests okay vanilla now what do you do",
    "start": "1778159",
    "end": "1784799"
  },
  {
    "text": "right i I think we're in this world uh I'd like to call guard rail",
    "start": "1784799",
    "end": "1790600"
  },
  {
    "text": "programming right it's really sad we're like I I can make change because I have",
    "start": "1790600",
    "end": "1796120"
  },
  {
    "text": "tests right who does that who drives their car around banging against the guardrails saying \"Whoa I'm I'm glad",
    "start": "1796120",
    "end": "1803360"
  },
  {
    "text": "I've got these guardrails because I'd never make it to uh to the show on",
    "start": "1803360",
    "end": "1808679"
  },
  {
    "text": "time.\" Right and and I don't like the analogy but it's do the guards help you get to where",
    "start": "1808679",
    "end": "1815679"
  },
  {
    "text": "you want to go like the sometimes right i mean to be completely fair I mean that the I do think there are good tests",
    "start": "1815679",
    "end": "1822080"
  },
  {
    "text": "obviously in the type checkers obvious working with types is objectively superior to not working with",
    "start": "1822080",
    "end": "1827960"
  },
  {
    "text": "types you just don't have all that runtime so there I mean there is some level of value to the guard rails guard",
    "start": "1827960",
    "end": "1835760"
  },
  {
    "text": "rails like guide you places no there's guardrails everywhere they don't they don't point your car in any particular",
    "start": "1835760",
    "end": "1841880"
  },
  {
    "text": "direction uh so again we're going to need to be able to think about our",
    "start": "1841880",
    "end": "1847440"
  },
  {
    "text": "program it's going to be critical all of our guardrails will f will have failed us we're going to have this problem",
    "start": "1847440",
    "end": "1852559"
  },
  {
    "text": "we're going to need to be able to reason about our program say well you know what i think um because maybe if it's not too",
    "start": "1852559",
    "end": "1858640"
  },
  {
    "text": "complex I'll be able to say I know through ordinary logic um it couldn't be",
    "start": "1858640",
    "end": "1864640"
  },
  {
    "text": "in this part of the program it must be in that part and let me go look there first things like",
    "start": "1864640",
    "end": "1869720"
  },
  {
    "text": "that now of course every good logging",
    "start": "1869720",
    "end": "1875399"
  },
  {
    "text": "can can save a lot of time is going to start moaning but I have all this speed",
    "start": "1875399",
    "end": "1881279"
  },
  {
    "text": "i'm agile i'm fast i you know this easy stuff is making my life good because I I",
    "start": "1881279",
    "end": "1887279"
  },
  {
    "text": "have a lot of speed um so what kind of runner uh can run as fast as they",
    "start": "1887279",
    "end": "1893600"
  },
  {
    "text": "possibly can from the very start of a race one with two legs right only somebody",
    "start": "1893600",
    "end": "1899279"
  },
  {
    "text": "who runs really short races okay uh damn",
    "start": "1899279",
    "end": "1905120"
  },
  {
    "text": "but of course we are programmers and we're smarter than runners apparently because we know how to Dude that was a",
    "start": "1905120",
    "end": "1912720"
  },
  {
    "text": "crazy statement we're programmers we're smarter than runners don't let anyone hear that one and we're smarter than",
    "start": "1912720",
    "end": "1919799"
  },
  {
    "text": "runners apparently because we know how to fix that problem right we just fire",
    "start": "1919799",
    "end": "1925840"
  },
  {
    "text": "the starting pistol every hundred yards and call it a new",
    "start": "1925840",
    "end": "1930880"
  },
  {
    "text": "sprint right I",
    "start": "1931000",
    "end": "1935159"
  },
  {
    "text": "All my homies hate agile i don't know why they haven't figured that out but uh right um it's my contention based on",
    "start": "1936480",
    "end": "1944840"
  },
  {
    "text": "experience uh that if you ignore complexity you will slow down you will invariably slow down over the long haul",
    "start": "1944840",
    "end": "1952240"
  },
  {
    "text": "um of course if you are doing something that's really short term you don't need any of this you could write it you know",
    "start": "1952240",
    "end": "1958000"
  },
  {
    "text": "in ones and zeros good advant good advice and this is my really scientific graph you notice how none of the axes",
    "start": "1958000",
    "end": "1964000"
  },
  {
    "text": "are there's no numbers on it because I just I completely made it up um it's a",
    "start": "1964000",
    "end": "1970480"
  },
  {
    "text": "it's an experiential graph and what it shows is um if you focus on ease uh and",
    "start": "1970480",
    "end": "1977279"
  },
  {
    "text": "not and ignore simplicity so I'm not saying you can't try to do both that would be great but if you focus on ease",
    "start": "1977279",
    "end": "1983039"
  },
  {
    "text": "um you will be able to go as fast as possible from the beginning of the race but no matter what technology you use or",
    "start": "1983039",
    "end": "1988080"
  },
  {
    "text": "sprints or firing pistols or whatever um the complexity will eventually kill you it will kill you in a way that will make",
    "start": "1988080",
    "end": "1994159"
  },
  {
    "text": "every sprint accomplish less most sprints be about completely redoing things you've already done and the net",
    "start": "1994159",
    "end": "2001200"
  },
  {
    "text": "effect is you're not moving forward in any significant way now if you start by focusing on simplicity why can't you go",
    "start": "2001200",
    "end": "2007679"
  },
  {
    "text": "as fast as possible right at the beginning right because some some tools",
    "start": "2007679",
    "end": "2012720"
  },
  {
    "text": "that are simple are actually as easy to use as some tools that are",
    "start": "2012720",
    "end": "2017679"
  },
  {
    "text": "not i'm curious if there's like a kind of a hidden problem in this i mean I like what he's saying and I totally I'm",
    "start": "2017960",
    "end": "2024399"
  },
  {
    "text": "on team I'm on team my new dude new defi new definition of simplicity on that",
    "start": "2024399",
    "end": "2029760"
  },
  {
    "text": "team but there is something about it which is that when you don't know the problem space how do you know if you're",
    "start": "2029760",
    "end": "2035279"
  },
  {
    "text": "doing how do you like easy is kind of your only way to discover what simple is",
    "start": "2035279",
    "end": "2040880"
  },
  {
    "text": "you have to kind of just hack and slash your way in until you know what's going on and then you have to refactor that",
    "start": "2040880",
    "end": "2047079"
  },
  {
    "text": "stuff yeah easy is relative of course false really okay well why is that false",
    "start": "2047079",
    "end": "2053118"
  },
  {
    "text": "okay so you've never solved a problem in a specific domain how's that how is that not false or ho how's",
    "start": "2053119",
    "end": "2059638"
  },
  {
    "text": "that like if you've never if you've never built a game and I say go build a game loop you're gonna go read about",
    "start": "2059639",
    "end": "2066240"
  },
  {
    "text": "things you're gonna go try to understand it you're going to go build something and you're going to make an inevitable",
    "start": "2066240",
    "end": "2071398"
  },
  {
    "text": "mistake yeah it's skill is skill issue by definition though right like it's literal skill issue by",
    "start": "2071399",
    "end": "2079240"
  },
  {
    "text": "definition not always true you have context in most cases maybe notice that I didn't say that notice what I said was",
    "start": "2079240",
    "end": "2086480"
  },
  {
    "text": "very very straightforward If you don't have a strong idea if you don't have a lot of context in this",
    "start": "2086480",
    "end": "2092079"
  },
  {
    "text": "specific area if you don't have a strong understanding of the problem you are riddled with skill issues and the only",
    "start": "2092079",
    "end": "2098320"
  },
  {
    "text": "way to solve skill issues is with easy not simple why can't you go as fast i'm correct draw a square proved it normal",
    "start": "2098320",
    "end": "2104880"
  },
  {
    "text": "logic you have to actually apply some simplicity work to the problem before you start and that's going to give you",
    "start": "2104880",
    "end": "2110640"
  },
  {
    "text": "this ramp up um so one of the problems I think you",
    "start": "2110640",
    "end": "2115920"
  },
  {
    "text": "shouldn't code without understanding okay so I'm going to have to again I would argue the best way to get",
    "start": "2115920",
    "end": "2121200"
  },
  {
    "text": "understanding is with coding you cannot understand a problem by writing it out on paper you'll be able to solve more",
    "start": "2121200",
    "end": "2127599"
  },
  {
    "text": "and more of it the longer you think but if you have any fundamental",
    "start": "2127599",
    "end": "2134000"
  },
  {
    "text": "misconceptions at all all of your sequential work completely fails i would",
    "start": "2134000",
    "end": "2139040"
  },
  {
    "text": "argue coding is understanding you have to have a plan again I'm not sure if that's true you still need to understand",
    "start": "2139040",
    "end": "2144400"
  },
  {
    "text": "what you're building you have an end point and you have to like understand the the tension that's put into the",
    "start": "2144400",
    "end": "2150640"
  },
  {
    "text": "system by all the competing factors like there's no I am not convinced that there's any other way watch hammock",
    "start": "2150640",
    "end": "2156320"
  },
  {
    "text": "driven development maybe it's theory versus experience yeah i mean I had a lot of great ideas that when they come",
    "start": "2156320",
    "end": "2161599"
  },
  {
    "text": "down to it I made some fundamental misunderstanding at the very beginning and it ruined 100% of all my plans plans",
    "start": "2161599",
    "end": "2169760"
  },
  {
    "text": "i think Napoleon said it best which goes actually well Mike Tyson says it really good i think he says something along the",
    "start": "2169760",
    "end": "2175359"
  },
  {
    "text": "lines of everyone has a plan until they get punched in the face i think we have is this conundrum that some things that",
    "start": "2175359",
    "end": "2181040"
  },
  {
    "text": "are easy actually are are complex so let's look um there are a bunch of um",
    "start": "2181040",
    "end": "2188560"
  },
  {
    "text": "constructs that have complex artifacts that are very succinctly described right some of the things that are really",
    "start": "2188560",
    "end": "2194480"
  },
  {
    "text": "dangerous to use are like so simple to describe they're incredibly familiar right right if you're coming from object",
    "start": "2194480",
    "end": "2200320"
  },
  {
    "text": "orientation you're familiar with a lot of complex things they're very much available right uh and they're easy to",
    "start": "2200320",
    "end": "2208240"
  },
  {
    "text": "use in fact by all measures conventional measures you would look at them and say \"This is",
    "start": "2208240",
    "end": "2214359"
  },
  {
    "text": "easy right but we don't care about that.\" Right again the user is not looking at our software and they don't",
    "start": "2214359",
    "end": "2220560"
  },
  {
    "text": "actually care very much about how good a time we had when we were writing it right what they care about is what the",
    "start": "2220560",
    "end": "2227119"
  },
  {
    "text": "program does and the and if it works well it will Rich Hickey destroying",
    "start": "2227119",
    "end": "2232880"
  },
  {
    "text": "Concord 14 years later based absolutely based it will be related to whether or",
    "start": "2232880",
    "end": "2239040"
  },
  {
    "text": "not um the output of those constructs more simple in other words what what complexity do they yield when there is",
    "start": "2239040",
    "end": "2246240"
  },
  {
    "text": "complexity there um we're going to call that incidental complexity right it",
    "start": "2246240",
    "end": "2251520"
  },
  {
    "text": "wasn't part of what the user asked us to do we chose the tool it had some inherent complexity in it um it's",
    "start": "2251520",
    "end": "2256960"
  },
  {
    "text": "incidental to the problem i didn't put the definition in here um but um incidental is Latin for your",
    "start": "2256960",
    "end": "2265000"
  },
  {
    "text": "fault uh and and it is and I I think you",
    "start": "2265000",
    "end": "2270800"
  },
  {
    "text": "really have to ask yourself you know are you programming with a loom you know you're having a great time",
    "start": "2270800",
    "end": "2276480"
  },
  {
    "text": "you're throwing that shuttle back and forth and what's coming out the other side is this knotted you know mess i",
    "start": "2276480",
    "end": "2283520"
  },
  {
    "text": "mean it may look pretty uh but you have this problem right what is the problem the problem is the knitted castle",
    "start": "2283520",
    "end": "2290880"
  },
  {
    "text": "problem right do you want a knitted",
    "start": "2290880",
    "end": "2297560"
  },
  {
    "text": "castle so what I mean it'd be pretty sweet that like just objectively just saying it it's pretty sweet but in the",
    "start": "2297560",
    "end": "2305440"
  },
  {
    "text": "terms of software I understand what he's trying to say yes you don't want to knit a castle what benefits do we do we get from simplicity we get ease of",
    "start": "2305440",
    "end": "2311760"
  },
  {
    "text": "understanding right that's sort of definitional um I I contend we get ease of change uh and easier",
    "start": "2311760",
    "end": "2318920"
  },
  {
    "text": "debugging other benefits that come out of it that are sort of uh on a secondary level are increased flexibility and when",
    "start": "2318920",
    "end": "2325680"
  },
  {
    "text": "we talk more about modularity and breaking things apart we'll see where they where that falls um like the",
    "start": "2325680",
    "end": "2331200"
  },
  {
    "text": "ability to uh change policies or move things around",
    "start": "2331200",
    "end": "2337280"
  },
  {
    "text": "right as we make things simpler we get more independence of decisions uh because they're not interled so I can",
    "start": "2337280",
    "end": "2344240"
  },
  {
    "text": "make a a location decision it's orthogonal from a like a performance decision um I mean that last statement I",
    "start": "2344240",
    "end": "2352880"
  },
  {
    "text": "don't know if that's very hard to say i like the ideals of",
    "start": "2352880",
    "end": "2358119"
  },
  {
    "text": "this i just have a hard time with ideals versus versus reality is that often when",
    "start": "2358119",
    "end": "2364880"
  },
  {
    "text": "you when you make a decision even if things are independent quote unquote orthogonal whatever way you want to say",
    "start": "2364880",
    "end": "2369920"
  },
  {
    "text": "it you end up having kind of this like waterfall of issues like okay you had the fundament you had to change",
    "start": "2369920",
    "end": "2375240"
  },
  {
    "text": "something which then led into three other things needing to be changed because they relied on say a certain",
    "start": "2375240",
    "end": "2380560"
  },
  {
    "text": "shape they relied on a certain method they relied on a certain way that things are uh things are created there's like there's this there's this I forget what",
    "start": "2380560",
    "end": "2387520"
  },
  {
    "text": "it's called I'm I'm sure someone will correct me on it it's a software creation",
    "start": "2387520",
    "end": "2394200"
  },
  {
    "text": "uh law which goes something along the lines of anything you create you will end up you'll end up relying on like",
    "start": "2394240",
    "end": "2401200"
  },
  {
    "text": "hidden interfaces things that aren't an interface of themselves like they're not literally the function call but a",
    "start": "2401200",
    "end": "2407680"
  },
  {
    "text": "certain way in which the data is manipulated is a hidden interface there's like this thing that happens",
    "start": "2407680",
    "end": "2412800"
  },
  {
    "text": "where you end up relying on these underlying concepts that when you make changes further upstream you have these",
    "start": "2412800",
    "end": "2419280"
  },
  {
    "text": "really difficult and painful downstream changes i forget I for it's not leaky abstraction there's there's there's a",
    "start": "2419280",
    "end": "2424800"
  },
  {
    "text": "there's a term for it it's not just a leaky abstraction it's something else leaky abstraction is a little bit little bit different like I' I'd argue",
    "start": "2424800",
    "end": "2430640"
  },
  {
    "text": "observables are leaky abstractions or monads themselves are leaky abstractions because every time you use a monad you",
    "start": "2430640",
    "end": "2436000"
  },
  {
    "text": "want to keep using monads and so then your interface becomes a monad and then they just kind of keeps running outward async is a great example of a leaky",
    "start": "2436000",
    "end": "2442160"
  },
  {
    "text": "abstraction it's really hard it is really hard to not accidentally keep",
    "start": "2442160",
    "end": "2447280"
  },
  {
    "text": "making everything heram's law i think you're right here let's look that up uh Hums law right hyram's law heram's law",
    "start": "2447280",
    "end": "2454880"
  },
  {
    "text": "yeah I think it's this one right put it succinctly the observation is this with sufficient number of users of an API it",
    "start": "2454880",
    "end": "2461200"
  },
  {
    "text": "does not matter what you promise in the contract all observable behaviors of your system will uh will be depended on",
    "start": "2461200",
    "end": "2466480"
  },
  {
    "text": "by somebody yeah this is what I was trying to this is this is the law that I was trying to state which is that you",
    "start": "2466480",
    "end": "2472079"
  },
  {
    "text": "end up having these kind of hidden contracts that you don't really you don't really mean to have happen they",
    "start": "2472079",
    "end": "2478960"
  },
  {
    "text": "just are a thing that happens emacs mentioned Emacs literally mentioned",
    "start": "2478960",
    "end": "2484480"
  },
  {
    "text": "right here hyram's law it's a great law the accidental features people people relying on your bugs that's one of them",
    "start": "2484480",
    "end": "2490640"
  },
  {
    "text": "i've had plenty of things I've I have worked several times in situations in",
    "start": "2490640",
    "end": "2495680"
  },
  {
    "text": "which involved a bug that people had to rely on and then you get into this",
    "start": "2495680",
    "end": "2500720"
  },
  {
    "text": "really nasty situation which is you're damned if you don't fix the bug and you're damned if you do fix the bug and",
    "start": "2500720",
    "end": "2505760"
  },
  {
    "text": "this has happened this has happened multiple times in my time at Netflix at my time at the company before Workke at",
    "start": "2505760",
    "end": "2513200"
  },
  {
    "text": "at my time even before that in uh uh Schedulicity I've had all of it happen every single time and I really want to",
    "start": "2513200",
    "end": "2520720"
  },
  {
    "text": "make you know ask the question agileists or whatever is is having a test suite",
    "start": "2520720",
    "end": "2527359"
  },
  {
    "text": "and refactoring tools going to make changing the knitted castle faster than",
    "start": "2527359",
    "end": "2533680"
  },
  {
    "text": "changing the Lego castle no way completely",
    "start": "2533680",
    "end": "2539800"
  },
  {
    "text": "unrelated okay so how do we make things easy presumably you know the objective here is not to just bemoan this the",
    "start": "2539800",
    "end": "2547359"
  },
  {
    "text": "software crisis right so what can we do to make things easy so we'll look at those parts those aspects of being easy",
    "start": "2547359",
    "end": "2552400"
  },
  {
    "text": "again there's a location aspect making something at hand putting it in our toolkit that's relatively simple right",
    "start": "2552400",
    "end": "2559839"
  },
  {
    "text": "we just install it right maybe it's a little bit harder because we have to get somebody to say it's okay to use it um",
    "start": "2559839",
    "end": "2566319"
  },
  {
    "text": "then there's the aspect then you got everybody else that has to install it dude I know people that wanted to use",
    "start": "2566319",
    "end": "2572880"
  },
  {
    "text": "Windows at Netflix and you couldn't stop them and so they made things work out in Windows you know things happen of how do",
    "start": "2572880",
    "end": "2578560"
  },
  {
    "text": "I make it familiar right i may not not have ever seen this before that's a learning exercise i've got to go get a",
    "start": "2578560",
    "end": "2584400"
  },
  {
    "text": "book go take a tutorial have somebody explain it to me maybe try it out right",
    "start": "2584400",
    "end": "2589440"
  },
  {
    "text": "both these things are we're driving we're driving we install we learn we're it's totally in our hands then we have",
    "start": "2589440",
    "end": "2596240"
  },
  {
    "text": "this other part though right which is the mental capability part and there's",
    "start": "2596240",
    "end": "2602240"
  },
  {
    "text": "the part that's always hard to talk about the mental capability part uh right because the fact is we can",
    "start": "2602240",
    "end": "2609359"
  },
  {
    "text": "learn more things we actually can't get much smarter uh we're not going to move",
    "start": "2609359",
    "end": "2614800"
  },
  {
    "text": "we're not going to move our brain closer to the complexity um we have to make",
    "start": "2614800",
    "end": "2620000"
  },
  {
    "text": "things nearby simplifying them the the but the truth here is not that that like they're these super super uh you know",
    "start": "2620000",
    "end": "2625920"
  },
  {
    "text": "bright people who can do these amazing things and and everybody else is stuck um because the juggling analogy is",
    "start": "2625920",
    "end": "2632880"
  },
  {
    "text": "pretty close right the average juggler can do three balls the most amazing",
    "start": "2632880",
    "end": "2638480"
  },
  {
    "text": "juggler in the world can do like nine balls or 12 or something like that they can't do 20 or 100 right all of we're",
    "start": "2638480",
    "end": "2647280"
  },
  {
    "text": "all very limited you know compared to the complex this is actually a really good way to state it this is one thing",
    "start": "2647280",
    "end": "2653520"
  },
  {
    "text": "that I've always tried to fight for which is that people you know you see it all the time which is oh I'm not smart",
    "start": "2653520",
    "end": "2658560"
  },
  {
    "text": "enough i'm not good enough to be able to do this it's just like the the real difference between the people you think are smart and you is almost always",
    "start": "2658560",
    "end": "2666319"
  },
  {
    "text": "experienced now there are a there are a set of people who are just simply not going to be smart enough to be able to",
    "start": "2666319",
    "end": "2672800"
  },
  {
    "text": "do something right they they just simply don't have the mental capacity but that's probably much smaller than we",
    "start": "2672800",
    "end": "2679040"
  },
  {
    "text": "like inherently assume it is when I say inherently assume it is I think the",
    "start": "2679040",
    "end": "2684560"
  },
  {
    "text": "averaged intelligence person can be a good programmer not now they don't have to be a great programmer they don't have",
    "start": "2684560",
    "end": "2691280"
  },
  {
    "text": "to be They don't have to be John Carmarmac i'm not sure I could ever be John Carmarmac you've been in the field way too long i'm not I'm not convinced",
    "start": "2691280",
    "end": "2697200"
  },
  {
    "text": "of it i understand that you think I am smarter as someone just said I've been in the field too long and you're above",
    "start": "2697200",
    "end": "2703119"
  },
  {
    "text": "average i can tell you that I greatly struggled with a lot of things people found very simple or very easy uh I've",
    "start": "2703119",
    "end": "2710880"
  },
  {
    "text": "been in this field for approximately 20 years i just think people are more stupid than you think i think that that's a very cynical way to look at the",
    "start": "2710880",
    "end": "2717040"
  },
  {
    "text": "world i don't think people are as stupid as people say because I think that also makes it",
    "start": "2717040",
    "end": "2722800"
  },
  {
    "text": "so that you can't look at the past people often think of the people in the past as being stupid i think that a lot",
    "start": "2722800",
    "end": "2728079"
  },
  {
    "text": "of the people in the past were in fact smarter than you i just do not have this inherent look down on everybody i just",
    "start": "2728079",
    "end": "2733839"
  },
  {
    "text": "don't I I think that I think there's plenty of capable people i bet you could even take my mom who is what she's 68",
    "start": "2733839",
    "end": "2742400"
  },
  {
    "text": "she is very neural uh obviously she's much more neurallocked than the average person and if she absolutely had to",
    "start": "2742400",
    "end": "2749520"
  },
  {
    "text": "learn something and she felt the absolute need to learn it I think she could do it i think a lot of people just",
    "start": "2749520",
    "end": "2755040"
  },
  {
    "text": "struggle on the fact that they don't have this need and when you don't have that need I think it's a lot harder to",
    "start": "2755040",
    "end": "2761839"
  },
  {
    "text": "learn something so you feel stupid like I had a genuine need and so despite the",
    "start": "2761839",
    "end": "2766880"
  },
  {
    "text": "fact that I failed pre-calculus multiple times and I was not going to make it in college I had a genuine need and I went",
    "start": "2766880",
    "end": "2774680"
  },
  {
    "text": "nonstop as hard as I can sometimes just reading and practicing calculus problems for 16 hours straight because I had no",
    "start": "2774680",
    "end": "2782079"
  },
  {
    "text": "other choice and then also and I became the best did that mean I was somehow smarter than everybody i really don't",
    "start": "2782079",
    "end": "2787440"
  },
  {
    "text": "think that that I was smarter than everybody else i think there was a lot of people that were much smarter than me i just simply was willing to outwork",
    "start": "2787440",
    "end": "2793760"
  },
  {
    "text": "them i could work harder i could work longer because I had a motivation that wasn't simply oh I'm here because",
    "start": "2793760",
    "end": "2800240"
  },
  {
    "text": "everybody's supposed to go to college i was like I've already failed out twice and this is my last shot at doing this and if I don't get this right I am going",
    "start": "2800240",
    "end": "2806720"
  },
  {
    "text": "to literally like I have to go back and work at Texas Roadhouse which is how I paid to go to the place in the first",
    "start": "2806720",
    "end": "2812400"
  },
  {
    "text": "part i was like absolutely cannot go back i cannot go back we can create hard",
    "start": "2812400",
    "end": "2818000"
  },
  {
    "text": "work beats talent for sure i don't like that phrase either there are people that are truly talented like TJ honestly TJ",
    "start": "2818000",
    "end": "2823599"
  },
  {
    "text": "is a very talented programmer he is much better than me he has an ability to",
    "start": "2823599",
    "end": "2828640"
  },
  {
    "text": "identify problems in a longer he can look further into the future better but he also adds on top of it hard work",
    "start": "2828640",
    "end": "2836160"
  },
  {
    "text": "we're all you know statistically at the same point in our ability to understand it which is not very good um so we're",
    "start": "2836160",
    "end": "2842720"
  },
  {
    "text": "going to have to bring things towards us and because we can only juggle so many balls you have to make a decision how",
    "start": "2842720",
    "end": "2849200"
  },
  {
    "text": "many of those balls do you want to be incidental complexity and how many do you want to be problem complexity",
    "start": "2849200",
    "end": "2855839"
  },
  {
    "text": "right how many extra balls you want have somebody throwing you balls that you have to try to incorporate in here oh use this tool and you're like whoa you",
    "start": "2855839",
    "end": "2863119"
  },
  {
    "text": "know more more stuff who wants to do that all right so let's look at a let's",
    "start": "2863119",
    "end": "2869839"
  },
  {
    "text": "look at a fact uh so I've been on the other side of",
    "start": "2869839",
    "end": "2876319"
  },
  {
    "text": "this complaint and uh and I I like it we can look at it really quickly um only",
    "start": "2876319",
    "end": "2881839"
  },
  {
    "text": "because uh it it I'm going to go out on a limb here and say I agree with the",
    "start": "2881839",
    "end": "2887160"
  },
  {
    "text": "statement every time you add a parenthesy it's harder for me to understand it's not this analysis has",
    "start": "2887160",
    "end": "2893359"
  },
  {
    "text": "nothing to do with the usage this complexity analysis is just about the programmer experience right so PNS are",
    "start": "2893359",
    "end": "2899760"
  },
  {
    "text": "hard right they're not at hand for most people who haven't otherwise used it and what does that mean it means that like",
    "start": "2899760",
    "end": "2906599"
  },
  {
    "text": "um uh they don't have an editor that knows how to do you know PN matching or or move stuff around structurally or",
    "start": "2906599",
    "end": "2913200"
  },
  {
    "text": "they have one and they've never loaded the mode that makes that happen",
    "start": "2913200",
    "end": "2918240"
  },
  {
    "text": "was that an Emacs mentioned did I just hear Emacs i'm pretty sure I",
    "start": "2918240",
    "end": "2924359"
  },
  {
    "text": "did i'm pretty sure I just did totally given right it's not at hand nor is it",
    "start": "2924359",
    "end": "2930800"
  },
  {
    "text": "familiar i mean everybody's seen parenthesis but they haven't seen them on that side of the",
    "start": "2930800",
    "end": "2936520"
  },
  {
    "text": "method i mean that is just crazy",
    "start": "2936520",
    "end": "2945480"
  },
  {
    "text": "i don't that's not the complaint but you know I think this is this is your",
    "start": "2946800",
    "end": "2952079"
  },
  {
    "text": "responsibility right to fix these two things as a user as a potential user you got to do this u but we could dig deeper",
    "start": "2952079",
    "end": "2958880"
  },
  {
    "text": "let's look at the third thing did you actually give me something that was simple is a language built all out of",
    "start": "2958880",
    "end": "2963920"
  },
  {
    "text": "pens um simple in the case I'm saying right is it free of interle and braiding",
    "start": "2963920",
    "end": "2971839"
  },
  {
    "text": "and the answer is no right common lispin scheme um are not simple in this sense",
    "start": "2971839",
    "end": "2978079"
  },
  {
    "text": "in their use of pns because the use of parentheses in those languages is",
    "start": "2978079",
    "end": "2983880"
  },
  {
    "text": "overloaded right pns wrap calls they wrap grouping they wrap data structures",
    "start": "2983880",
    "end": "2992240"
  },
  {
    "text": "right and that overloading is a form of complexity by the definition you know I gave you right i got to go pee now i'm",
    "start": "2992240",
    "end": "2999119"
  },
  {
    "text": "going to be right back hold on hold on i come back from peeing and I read BBC",
    "start": "2999119",
    "end": "3005040"
  },
  {
    "text": "destroys Ben Shapiro damn bbc destroying him bbc's",
    "start": "3005040",
    "end": "3012559"
  },
  {
    "text": "have destroyed a lot in history i this is this something I'm not understanding",
    "start": "3012559",
    "end": "3018720"
  },
  {
    "text": "slammed right and so if you actually bother to get your editor set up and",
    "start": "3018920",
    "end": "3024319"
  },
  {
    "text": "learn that the parenthesis goes on the other side of the verb um this was still",
    "start": "3024319",
    "end": "3029760"
  },
  {
    "text": "a valid complaint now of course everybody was saying easy it's hard it's complex and they were using these words",
    "start": "3029760",
    "end": "3035599"
  },
  {
    "text": "really weakly right but it was hard for a couple of reasons you could solve and it was not simple for a reason that was",
    "start": "3035599",
    "end": "3042400"
  },
  {
    "text": "the fault of the language designer which was that there was overloading there right and we can fix that right we can",
    "start": "3042400",
    "end": "3048640"
  },
  {
    "text": "just add another data structure it doesn't make lisp not lisp to have more data structures right it's still a",
    "start": "3048640",
    "end": "3054079"
  },
  {
    "text": "language defined in terms of its own data structures but having more data structures in play means that we can get",
    "start": "3054079",
    "end": "3060480"
  },
  {
    "text": "rid of this overloading in this case which then makes it your fault again",
    "start": "3060480",
    "end": "3066079"
  },
  {
    "text": "right because now this the simplicity is back in the construct And it's just a familiarity thing which you can solve",
    "start": "3066079",
    "end": "3072160"
  },
  {
    "text": "for yourself i've never given lisp a real try i'm not",
    "start": "3072160",
    "end": "3077520"
  },
  {
    "text": "even gonna acknowledge what you're saying i never given lisp a real try and I never will true probably true likely",
    "start": "3077520",
    "end": "3086839"
  },
  {
    "text": "true but maybe someday in the future",
    "start": "3086839",
    "end": "3092880"
  },
  {
    "text": "maybe okay um this is an old dig at list",
    "start": "3093480",
    "end": "3098720"
  },
  {
    "text": "programmers i I I'm not totally sure what the um what he was talking about i",
    "start": "3098720",
    "end": "3105040"
  },
  {
    "text": "believe it was a performance related thing the listers just they coned up all this memory and they did all this",
    "start": "3105040",
    "end": "3110319"
  },
  {
    "text": "evaluation and it was it was a pig list programs at that time were list programs at that time were complete pigs relative",
    "start": "3110319",
    "end": "3116960"
  },
  {
    "text": "to the hardware um so they you know they knew the value of all these constructs right this dynamism you know dynamic",
    "start": "3116960",
    "end": "3122400"
  },
  {
    "text": "nature these things are all great they are valuable right um but there was this performance cost um I'd like to lift",
    "start": "3122400",
    "end": "3129359"
  },
  {
    "text": "this whole phrase and apply it to all of us right now right as programmers we are",
    "start": "3129359",
    "end": "3134880"
  },
  {
    "text": "looking at all kinds of things and I just see it you know read hacker news or whatever it's like oh look this thing",
    "start": "3134880",
    "end": "3140240"
  },
  {
    "text": "has this benefit oh great I'm going to do that oh but this has this benefit oh that's cool oh that's awesome you know",
    "start": "3140240",
    "end": "3147119"
  },
  {
    "text": "that's shorter uh you never see in these discussions was there a trade-off is there any",
    "start": "3147119",
    "end": "3153680"
  },
  {
    "text": "downside you know is there anything bad that comes along with this never nothing it's just like we look all for benefits",
    "start": "3153680",
    "end": "3160400"
  },
  {
    "text": "right so as programmers yeah no one ever mentions the fact that when you start when you use rust long enough there",
    "start": "3160400",
    "end": "3165680"
  },
  {
    "text": "comes a point where you have to make the decision of whether or not you continue to program Rust and wear thigh high",
    "start": "3165680",
    "end": "3173000"
  },
  {
    "text": "socks or to just learn a new language like it's a very hard decision I That's honestly the reason why I quit",
    "start": "3173000",
    "end": "3178720"
  },
  {
    "text": "programming is just like I'm not into thigh high socks and so I had to simply come to that and just",
    "start": "3178720",
    "end": "3184359"
  },
  {
    "text": "say sorry I can't do that it was a hard decision to make now i think we're we're",
    "start": "3184359",
    "end": "3189760"
  },
  {
    "text": "looking all for benefits and we're not looking carefully enough at the the byproducts",
    "start": "3189760",
    "end": "3195000"
  },
  {
    "text": "um so what's in your toolkit um I have a you know I have",
    "start": "3195000",
    "end": "3203280"
  },
  {
    "text": "these two columns one says complexity and one says simplicity um the simplicity column uh just means simpler",
    "start": "3203280",
    "end": "3211599"
  },
  {
    "text": "um it doesn't mean that the things over there are purely simple um now I didn't label these things bad and",
    "start": "3211599",
    "end": "3218680"
  },
  {
    "text": "good i'm leaving your minds to do",
    "start": "3218680",
    "end": "3224240"
  },
  {
    "text": "that uh so what what things are complex and what are the simple replacements i'm",
    "start": "3225640",
    "end": "3231680"
  },
  {
    "text": "going to dig into the details on these so I won't actually explain why they're complex we're going to say state and objects are complex and values are",
    "start": "3231680",
    "end": "3238240"
  },
  {
    "text": "simple does that mean that there is required complexity for programs",
    "start": "3238240",
    "end": "3245599"
  },
  {
    "text": "can replace them in many cases i'm going to say methods are complex and functions",
    "start": "3245599",
    "end": "3250640"
  },
  {
    "text": "are simple and name spaces are simple uh the reason why methods are there because",
    "start": "3250640",
    "end": "3256160"
  },
  {
    "text": "often the the space of methods um the class or whatever is also a mini very",
    "start": "3256160",
    "end": "3262000"
  },
  {
    "text": "poor namespace vars are complex and variables",
    "start": "3262000",
    "end": "3268240"
  },
  {
    "text": "are complex uh manage references are also complex but they're simpler",
    "start": "3268240",
    "end": "3274160"
  },
  {
    "text": "i don't think I understand this one and methods I kind of like do understand and kind of don't understand i think the",
    "start": "3274160",
    "end": "3279760"
  },
  {
    "text": "reason why he's labeling methods as being confusing is because inherently they're on top of usually some sort of",
    "start": "3279760",
    "end": "3285119"
  },
  {
    "text": "they're they're a encapsulation to move around to mudge data within a state",
    "start": "3285119",
    "end": "3292040"
  },
  {
    "text": "object inheritance I agree switch and matching I'm not sure about those ones",
    "start": "3292040",
    "end": "3297119"
  },
  {
    "text": "um inheritance switch statements pattern matching are all complex and polymorphism alakart is",
    "start": "3297119",
    "end": "3305040"
  },
  {
    "text": "simple is that true i feel like if I",
    "start": "3305040",
    "end": "3310119"
  },
  {
    "text": "had Winchester here right now Ryan Winchester and all the elixir all the",
    "start": "3310119",
    "end": "3315920"
  },
  {
    "text": "elixir Andes they would they would most certainly disagree because like having",
    "start": "3315920",
    "end": "3321920"
  },
  {
    "text": "multiple functions with pattern matching in the signature is pretty pretty exciting so I'm sure Yeah you're saying",
    "start": "3321920",
    "end": "3329359"
  },
  {
    "text": "he clarifies later in the talk okay so maybe he does and maybe that would make more sense but this seems hard for me to",
    "start": "3329359",
    "end": "3334800"
  },
  {
    "text": "understand in the in the like in this current perspective okay now remember the meaning of simple the meaning of",
    "start": "3334800",
    "end": "3342160"
  },
  {
    "text": "simple means unentangled right not twisted together",
    "start": "3342160",
    "end": "3347280"
  },
  {
    "text": "with something else doesn't mean I already know what it means right simple does not mean I already know what it",
    "start": "3347280",
    "end": "3353319"
  },
  {
    "text": "means okay syntax is complex data is simple",
    "start": "3353319",
    "end": "3360240"
  },
  {
    "text": "i really don't comparative loops fold even which seems kind of higher level still has some implications that tie two",
    "start": "3360240",
    "end": "3366480"
  },
  {
    "text": "things together whereas set functions are are simpler um actors are complex",
    "start": "3366480",
    "end": "3372000"
  },
  {
    "text": "and Q's are simpler OM is complex and declarative",
    "start": "3372000",
    "end": "3378000"
  },
  {
    "text": "data manipulation is simpler okay even said that in his talk he said it really",
    "start": "3378000",
    "end": "3383599"
  },
  {
    "text": "fast near the end oh yeah and eventual consist is",
    "start": "3383599",
    "end": "3389119"
  },
  {
    "text": "really hard for programmers um conditionals are complex",
    "start": "3389119",
    "end": "3396240"
  },
  {
    "text": "in interesting ways and rules can be can be simpler uh and inconsistency is very",
    "start": "3396240",
    "end": "3404000"
  },
  {
    "text": "complex it's almost definitionally complex right because consistent means to stand together so inconsistent means",
    "start": "3404000",
    "end": "3410160"
  },
  {
    "text": "to stand apart and that means taking a set of things that are standing apart and trying to think about them all at the same time it's inherently complex to",
    "start": "3410160",
    "end": "3417280"
  },
  {
    "text": "do that and anybody who's tried to use a system that's eventually consistent knows that okay so there's this really cool",
    "start": "3417280",
    "end": "3425359"
  },
  {
    "text": "word called complex i found it i love it it means to interle or",
    "start": "3425359",
    "end": "3432880"
  },
  {
    "text": "entwine or braid okay um I want to start talking about what we do to our software",
    "start": "3432880",
    "end": "3438000"
  },
  {
    "text": "that makes it bad and I don't want to say braid or entwine because it doesn't really have the good bad connotation",
    "start": "3438000",
    "end": "3444160"
  },
  {
    "text": "that complex has complex is obviously bad right um it happens to be an archaic",
    "start": "3444160",
    "end": "3450640"
  },
  {
    "text": "word but you know there's no rules that say you can't start using them again so I'm going to I love betwixed it's one of",
    "start": "3450640",
    "end": "3456319"
  },
  {
    "text": "my favorite words in the universe i'm all about those archaic words use them for the rest of the talk uh so what do",
    "start": "3456319",
    "end": "3462000"
  },
  {
    "text": "you know about complex it's bad don't do it right this is where complexity comes",
    "start": "3462000",
    "end": "3469880"
  },
  {
    "text": "from right completing that's very",
    "start": "3469880",
    "end": "3475280"
  },
  {
    "text": "simple right and in particular it's something that you want to avoid in the first place right look at this diagram",
    "start": "3475799",
    "end": "3482720"
  },
  {
    "text": "look at the first one look at the last one right it's the same stuff in both",
    "start": "3482720",
    "end": "3487839"
  },
  {
    "text": "those diagrams the exact It's the same strips what happened they got",
    "start": "3487839",
    "end": "3494760"
  },
  {
    "text": "complexed and now it's hard to understand the bottom diagram from the You know what really bothers me about",
    "start": "3494760",
    "end": "3500960"
  },
  {
    "text": "this diagram that he's not even mentioning right now is the fact that they're the same",
    "start": "3500960",
    "end": "3507240"
  },
  {
    "text": "length vertically when braided and not braided",
    "start": "3507240",
    "end": "3512720"
  },
  {
    "text": "i don't like that at all okay i'm not liking that at",
    "start": "3512720",
    "end": "3518520"
  },
  {
    "text": "all i'm feeling very I'm feeling very triggered right now",
    "start": "3518520",
    "end": "3525359"
  },
  {
    "text": "the top one but it's the same stuff you're doing this all the time you can make a program a hundred different ways",
    "start": "3525359",
    "end": "3531920"
  },
  {
    "text": "some of them it's just hanging there it's all straight you look at it you say \"Oh I see it's four lines.\" This program",
    "start": "3531920",
    "end": "3537440"
  },
  {
    "text": "right and you could type in four lines in another language or with a different construct and yet I don't like being on the side because it makes me look like",
    "start": "3537440",
    "end": "3543359"
  },
  {
    "text": "I'm wearing a weird hat i can't stop looking over like why does it look like I have bunny ears",
    "start": "3543359",
    "end": "3549599"
  },
  {
    "text": "what's wrong i'm complexed end up with this knot so got to take care of that so um",
    "start": "3549599",
    "end": "3559280"
  },
  {
    "text": "complex actually means to braid together and compose means to place",
    "start": "3559280",
    "end": "3564839"
  },
  {
    "text": "together and we know that right everybody keeps telling us what we want to do is make composable systems we just",
    "start": "3564839",
    "end": "3570079"
  },
  {
    "text": "want to place things together which is great and I think there's no disagreement right composing simple",
    "start": "3570079",
    "end": "3577200"
  },
  {
    "text": "components simple in that same respect is the way we write um robust",
    "start": "3577200",
    "end": "3583559"
  },
  {
    "text": "software so it's simple right all we need to do",
    "start": "3583559",
    "end": "3589119"
  },
  {
    "text": "is everybody knows this I'm up here just telling you stuff you know we can make simple systems by making them modular",
    "start": "3589119",
    "end": "3595040"
  },
  {
    "text": "right by the way this is you know this looks really easy when you put it this",
    "start": "3595040",
    "end": "3600559"
  },
  {
    "text": "way like this is super simple just two blocks boom that easy now draw the rest",
    "start": "3600559",
    "end": "3609280"
  },
  {
    "text": "of the owl it turns out it's it's it's the creating of the Lego blocks that is so that is so difficult i want to step",
    "start": "3609280",
    "end": "3616160"
  },
  {
    "text": "on it no you do not you will step on it but",
    "start": "3616160",
    "end": "3621440"
  },
  {
    "text": "it'll only be a night at nighttime we're done i'm like halfway",
    "start": "3621440",
    "end": "3626880"
  },
  {
    "text": "through my talk i don't even know if I'm going to finish it's so simple right this is it this is the",
    "start": "3626880",
    "end": "3633000"
  },
  {
    "text": "key no it's obviously not the key right who has seen who has seen components",
    "start": "3633000",
    "end": "3638240"
  },
  {
    "text": "that have this kind of characteristic i don't know what I'll read my hands twice because not enough people are",
    "start": "3638240",
    "end": "3643760"
  },
  {
    "text": "raising their hands it's ridiculous right what happens you can write modular software with all kinds of",
    "start": "3643760",
    "end": "3649440"
  },
  {
    "text": "interconnections between them right oh is this a circular dependency they may not call each other but they're",
    "start": "3649440",
    "end": "3655200"
  },
  {
    "text": "completely complexed right and we know how to solve this it",
    "start": "3655200",
    "end": "3661359"
  },
  {
    "text": "it has nothing to do with the fact that there are two things it has to do with what those two things are allowed to",
    "start": "3661359",
    "end": "3667040"
  },
  {
    "text": "think about if you want to really anthropom inheritance i think that's what he's trying to say we need to solve",
    "start": "3667040",
    "end": "3672079"
  },
  {
    "text": "it with inheritance right right morphize and what do we want",
    "start": "3672079",
    "end": "3677599"
  },
  {
    "text": "to make things allowed to think about and only these things some abstractions i don't know if",
    "start": "3677599",
    "end": "3684480"
  },
  {
    "text": "that's coming out that well that's a a dashed white version of the top of the Lego right that's all we want to limit",
    "start": "3684480",
    "end": "3691760"
  },
  {
    "text": "things to because now the blue guy doesn't really know anything about the yellow guy and the yellow guy doesn't really know anything about the blue guy",
    "start": "3691760",
    "end": "3697040"
  },
  {
    "text": "and they've both become simple u so it's very it's very important that you don't",
    "start": "3697040",
    "end": "3702799"
  },
  {
    "text": "associate simplicity with partitioning and stratification right they don't imply it right they are enabled by it if",
    "start": "3702799",
    "end": "3708960"
  },
  {
    "text": "you make simple components you can horizontally um separate them and you can vertically stratify them right but",
    "start": "3708960",
    "end": "3716240"
  },
  {
    "text": "you can also do that with complex things and you're going to get no benefits and so I would encourage you to be",
    "start": "3716240",
    "end": "3722640"
  },
  {
    "text": "particularly careful not to um be fooled by code organization right there's tons",
    "start": "3722640",
    "end": "3729200"
  },
  {
    "text": "of libraries that look oh look there's different classes they're separate classes they you know they call each",
    "start": "3729200",
    "end": "3734480"
  },
  {
    "text": "other in sort of these nice ways right then you get I understand this in in terms of Legos that he's attempting to",
    "start": "3734480",
    "end": "3741799"
  },
  {
    "text": "say but I don't quite understand it in terms of code because all I'm seeing",
    "start": "3741799",
    "end": "3746880"
  },
  {
    "text": "here is just like an interface but even even interfaces",
    "start": "3746880",
    "end": "3752640"
  },
  {
    "text": "suffer from Hyram's law right isn't that like the whole Call Uncle Bob to explain",
    "start": "3752640",
    "end": "3757839"
  },
  {
    "text": "it oh nice hey Adam yeah hey hey hey okay nice yeah I just I just put I just",
    "start": "3757839",
    "end": "3763200"
  },
  {
    "text": "I I linked the article uh typically so if you bang bang the article you can see right here he's setting up the example",
    "start": "3763200",
    "end": "3770319"
  },
  {
    "text": "okay good i want to see this because call Casey to explain well I mean I think I understand what he's attempting",
    "start": "3770319",
    "end": "3776000"
  },
  {
    "text": "to say but I still have a hard time trying to get this this exact concept of",
    "start": "3776000",
    "end": "3781760"
  },
  {
    "text": "when because you can still make an interface you can make things not rely explicitly on each other but just on like just the tips right but that but",
    "start": "3781760",
    "end": "3789920"
  },
  {
    "text": "that doesn't mean that it's not it doesn't mean that you inherently get simplicity based on the definition he's",
    "start": "3789920",
    "end": "3797280"
  },
  {
    "text": "talking about good interfaces good interfaces yeah good interfaces that's a",
    "start": "3797280",
    "end": "3802480"
  },
  {
    "text": "Let's get Casey call Casey we don't need to call Casey for this casey what the hell's an interface how do you know",
    "start": "3802480",
    "end": "3808160"
  },
  {
    "text": "what's good casey casey i Casey's gonna be like I don't",
    "start": "3808160",
    "end": "3813200"
  },
  {
    "text": "know are we talking about the assembly call John von Newman we're not calling Von Newman casey don't worry casey will",
    "start": "3813200",
    "end": "3820000"
  },
  {
    "text": "be on tomorrow we're doing the standup tomorrow we'll have Casey Trash Dev and TJ and we're going to talk about Cluey",
    "start": "3820000",
    "end": "3827200"
  },
  {
    "text": "the cheat on everything thing tj's going to have his brave yet controversial opinion get out in the field and you're",
    "start": "3827200",
    "end": "3833200"
  },
  {
    "text": "like \"Oh my god this thing presumes that that thing never returns the number 17 what is",
    "start": "3833200",
    "end": "3841400"
  },
  {
    "text": "that?\" Okay uh I'm not going to get up here and tell you state is awesome i",
    "start": "3841400",
    "end": "3846799"
  },
  {
    "text": "like state i'm not a functional whatever guy whatever i'm gonna say instead um I",
    "start": "3846799",
    "end": "3852240"
  },
  {
    "text": "uh did this and it sucked right i did years and years C++ uh you know He-Man",
    "start": "3852240",
    "end": "3859680"
  },
  {
    "text": "to be fair C++ does suck by itself so I don't think I I think his statement was",
    "start": "3859680",
    "end": "3865200"
  },
  {
    "text": "objectively true stateful programming um it's it's really",
    "start": "3865200",
    "end": "3870960"
  },
  {
    "text": "not fun it's not good um it's it's never simple having state in your program is",
    "start": "3870960",
    "end": "3877280"
  },
  {
    "text": "never simple right because it has a fundamental um complecting that goes on in its artifacts right it complex value",
    "start": "3877280",
    "end": "3885119"
  },
  {
    "text": "and time you don't have the ability to get a value independent of of time and u",
    "start": "3885119",
    "end": "3891119"
  },
  {
    "text": "sometimes not is that always true i must not understand that statement because I I'm not quite I don't quite understand",
    "start": "3891119",
    "end": "3896160"
  },
  {
    "text": "why that would be true 100% of the time does he mean that okay so what what he's",
    "start": "3896160",
    "end": "3901200"
  },
  {
    "text": "saying is that next value of state is a dependence of current value plus time i",
    "start": "3901200",
    "end": "3907119"
  },
  {
    "text": "think that's what he's trying to say am I correct on that statement because that makes more sense next value is a is the",
    "start": "3907119",
    "end": "3914720"
  },
  {
    "text": "complecting of value plus time and by time you it doesn't technically have to be time i assume it means like action or",
    "start": "3914720",
    "end": "3922079"
  },
  {
    "text": "sequence right so you could you could imagine a system that has no dependence on time but state could be a series of",
    "start": "3922079",
    "end": "3928559"
  },
  {
    "text": "events that come in that change it over time so it's like okay so it's the future value is current value plus",
    "start": "3928559",
    "end": "3934760"
  },
  {
    "text": "mutation okay I can buy that an ability to get a value in any proper sense at all but again it's a great example this",
    "start": "3934760",
    "end": "3942319"
  },
  {
    "text": "is easy it's totally familiar it's at hand it's in all the programming languages this is so easy this I'm also",
    "start": "3942319",
    "end": "3949200"
  },
  {
    "text": "not convinced that it's that there's not some programs that are just by definition required game right i'm not",
    "start": "3949200",
    "end": "3955200"
  },
  {
    "text": "Can you build a game without some sort of state i I I can't even I guess I don't even understand how to solve this",
    "start": "3955200",
    "end": "3960880"
  },
  {
    "text": "problem without some sort of state i'm I'm like I can't even like con I can't conceive of the idea without it this",
    "start": "3960880",
    "end": "3967119"
  },
  {
    "text": "complexity is so easy um and you can't get rid of it",
    "start": "3967119",
    "end": "3972720"
  },
  {
    "text": "everything so well have I have modularity that that assignment statement is inside a method right well",
    "start": "3972720",
    "end": "3978079"
  },
  {
    "text": "if if every time you call that method with the same arguments you can get a different result guess what happened",
    "start": "3978079",
    "end": "3983440"
  },
  {
    "text": "that complexity is it just leaked right out of there it doesn't matter that you can't see the variable right if the",
    "start": "3983440",
    "end": "3988960"
  },
  {
    "text": "thing that's wrapping it is stateful and the thing that's wrapping that is still stateful in other words by stateful I mean every time you ask it the same",
    "start": "3988960",
    "end": "3994480"
  },
  {
    "text": "question you get a different answer you have this complexity and it's like poison it's like dropping you know some",
    "start": "3994480",
    "end": "4001359"
  },
  {
    "text": "some dark liquid into this to a vase it's just going to end up all over the place the only time you can really I",
    "start": "4001359",
    "end": "4008319"
  },
  {
    "text": "really didn't understand i didn't I didn't quite get that la that last analogy i think something broke down i",
    "start": "4008319",
    "end": "4014480"
  },
  {
    "text": "think he had two thoughts in his head uh I think he had I think he had two thoughts in his head and they somehow collided there for a quick second i",
    "start": "4014480",
    "end": "4020480"
  },
  {
    "text": "don't know why the dark liquid and the vase gets everywhere but I do understand what he's saying like the overall anytime you can call something and it",
    "start": "4020480",
    "end": "4026799"
  },
  {
    "text": "causes a change that is an inherently dangerous part of your program perhaps that's like a great way to say it and so",
    "start": "4026799",
    "end": "4032480"
  },
  {
    "text": "having state that is derived from series of um a series of calls that inherently",
    "start": "4032480",
    "end": "4039680"
  },
  {
    "text": "that when called cause a state change and cannot be replayed therefore",
    "start": "4039680",
    "end": "4045480"
  },
  {
    "text": "bad you know get rid of it is when you put it inside something that's able to present a functional interface on the",
    "start": "4045480",
    "end": "4051680"
  },
  {
    "text": "outside a true functional interface same input same output um you can't mitigate",
    "start": "4051680",
    "end": "4057280"
  },
  {
    "text": "it uh through the ordinary code organization things and note in",
    "start": "4057280",
    "end": "4062319"
  },
  {
    "text": "particular I didn't talk about concurrency here this is not about concurrency this has nothing to do with",
    "start": "4062319",
    "end": "4067599"
  },
  {
    "text": "concurrency has the it's about your ability to understand your program your program was out there it's single threaded it didn't work all the tests",
    "start": "4067599",
    "end": "4074720"
  },
  {
    "text": "passed it made it through the type checker figure out what happened right if it's full of variables what are you",
    "start": "4074720",
    "end": "4080559"
  },
  {
    "text": "going to need to try to do recreate the state that was happening at the client when it went bad is that going to be",
    "start": "4080559",
    "end": "4088680"
  },
  {
    "text": "easy no is there such a program in which something can go wrong in which you",
    "start": "4088680",
    "end": "4094480"
  },
  {
    "text": "don't have state to recreate i want what he says like if you sell whatever this means I want that thing but we fixed",
    "start": "4094480",
    "end": "4101679"
  },
  {
    "text": "this right your language your new shiny language has something called var or maybe it has uh refs or references um",
    "start": "4101679",
    "end": "4110318"
  },
  {
    "text": "none of these constructs make state simple that's the first primary thing i don't want to say that even of closures",
    "start": "4110319",
    "end": "4116159"
  },
  {
    "text": "constructs they do not make state simple in the case I'm talking about in the in the nature of simple I'm talking about",
    "start": "4116159",
    "end": "4121520"
  },
  {
    "text": "but they're not the same oh someone says that uh that state is required it would be",
    "start": "4121520",
    "end": "4127679"
  },
  {
    "text": "he's not technically mentioning yeah that that yeah because I'm trying to like can I conceive of a world in which this somehow exists like even in a pure",
    "start": "4127679",
    "end": "4134400"
  },
  {
    "text": "functional system where every time something happens it operates and it copies and it's immutable and the only",
    "start": "4134400",
    "end": "4140080"
  },
  {
    "text": "transition is from you know is literally the state that's coming in plus whatever actions played on top of it and long as",
    "start": "4140080",
    "end": "4145600"
  },
  {
    "text": "you pass the two same things in over and over again it causes the same thing to happen over and over again you still have to get to the point of producing",
    "start": "4145600",
    "end": "4151040"
  },
  {
    "text": "that initial seed state for the next one to make sense so there's like this this difficulty right they all do warn you",
    "start": "4151040",
    "end": "4157520"
  },
  {
    "text": "when you have state and that's great most people who are using a language where mutability is not the default you",
    "start": "4157520",
    "end": "4163679"
  },
  {
    "text": "have to go out of your way to get it finds that the programs they end up writing have dramatically like orders of",
    "start": "4163679",
    "end": "4169520"
  },
  {
    "text": "magnitude less state than they would otherwise because they never needed all the other state in the first place um so",
    "start": "4169520",
    "end": "4175278"
  },
  {
    "text": "that's really great but I will call out Closure and Haskell's references as",
    "start": "4175279",
    "end": "4180640"
  },
  {
    "text": "being particularly superior in dealing with this because they compose values",
    "start": "4180640",
    "end": "4186159"
  },
  {
    "text": "and time they're actually little constructs that do two things they have some abstraction over time and the",
    "start": "4186159",
    "end": "4192080"
  },
  {
    "text": "ability to extract a value um is he try is he trying to give me a monad right now has this turned into I would like to",
    "start": "4192080",
    "end": "4200159"
  },
  {
    "text": "introduce you to your Lord and Savior Monad that's really important um because",
    "start": "4200159",
    "end": "4206400"
  },
  {
    "text": "that's that's your path back to simplicity right if I have a way to get out of this thing and get a value out I can continue with my program if that I",
    "start": "4206400",
    "end": "4213280"
  },
  {
    "text": "would love like a more concrete understanding of what this means because perhaps because you know this is again",
    "start": "4213280",
    "end": "4218400"
  },
  {
    "text": "this is one of those things where you learn or see problems from new angles and it makes it a lot more clear what",
    "start": "4218400",
    "end": "4224560"
  },
  {
    "text": "what does this mean pass that variable to somebody else or reference to something that's going to find the",
    "start": "4224560",
    "end": "4230400"
  },
  {
    "text": "variable every time through the varying thing i'm poisoning the rest of my system so uh you know look at the var in",
    "start": "4230400",
    "end": "4237600"
  },
  {
    "text": "your language and ask if it does the same the same thing i don't know what it even does to tell you the truth let's see why things are uh complex state we",
    "start": "4237600",
    "end": "4244880"
  },
  {
    "text": "already talked about it complex everything it touches objects complex",
    "start": "4244880",
    "end": "4251120"
  },
  {
    "text": "state identity and value they mix these three things up in a way that you cannot extricate the parts when he says objects",
    "start": "4251120",
    "end": "4258000"
  },
  {
    "text": "what is he attempting to say here does he have some sort of alternative meaning that I'm not understanding because does he just literally mean strruct or is he",
    "start": "4258000",
    "end": "4265040"
  },
  {
    "text": "talking about like Java style classes with properties and methods to mutate yeah I would assume he means he does not",
    "start": "4265040",
    "end": "4271199"
  },
  {
    "text": "mean key value pairs vtable i think he's meaning like more like JavaScript which",
    "start": "4271199",
    "end": "4276719"
  },
  {
    "text": "which has properties the key values plus the methods to be able to do stuff on is",
    "start": "4276719",
    "end": "4282480"
  },
  {
    "text": "that fair he means key value pairs oh he really does mean key value pairs okay he's talking about D table nice try nice",
    "start": "4282480",
    "end": "4290000"
  },
  {
    "text": "try buddy methods complect function and state ordinarily right in addition in",
    "start": "4290000",
    "end": "4297520"
  },
  {
    "text": "some languages they complect namespaces right derive from two things in Java that have the same name method",
    "start": "4297520",
    "end": "4303880"
  },
  {
    "text": "and right doesn't work that's fair syntax interestingly uh complex meaning",
    "start": "4303880",
    "end": "4310400"
  },
  {
    "text": "and order often in a very unidirectional way um Professor Susman made the great",
    "start": "4310400",
    "end": "4316080"
  },
  {
    "text": "point about um data versus syntax and you know it's super true i don't care",
    "start": "4316080",
    "end": "4322400"
  },
  {
    "text": "how much you really love the syntax of your favorite language it's inferior to data in every way um and see when I hear",
    "start": "4322400",
    "end": "4330480"
  },
  {
    "text": "people get so so excited about lisp just makes me get excited what what",
    "start": "4330480",
    "end": "4336320"
  },
  {
    "text": "if I'm the bad guy what if I don't understand complex types right so these",
    "start": "4336320",
    "end": "4341760"
  },
  {
    "text": "two types are comp that's what it means inheritance complecting it's like it's",
    "start": "4341760",
    "end": "4346960"
  },
  {
    "text": "it's definitional right switching and m matching right they complect multiple um",
    "start": "4346960",
    "end": "4354800"
  },
  {
    "text": "pairs of uh who's going to do something and what happens right and they do it all in one place in a closed way that's",
    "start": "4354800",
    "end": "4363199"
  },
  {
    "text": "very bad is that very bad why is that bad matching does not also have to be",
    "start": "4363199",
    "end": "4369840"
  },
  {
    "text": "everything all at once It's very bad if you're writing a library i don't know if that's true either i'm I'm I'm trying to understand",
    "start": "4369840",
    "end": "4375199"
  },
  {
    "text": "why that would be bad like take elixir pattern matching um matching",
    "start": "4375199",
    "end": "4382120"
  },
  {
    "text": "um function arguments let's see if we can just get a nice little example so I turned off dark",
    "start": "4382120",
    "end": "4388400"
  },
  {
    "text": "readers they were causing so much problems with just like using certain sites that I turned them off but then",
    "start": "4388400",
    "end": "4394640"
  },
  {
    "text": "system dark readers suck let's see if I can find a good example of this i think we're getting close yeah so this would",
    "start": "4394640",
    "end": "4401520"
  },
  {
    "text": "be a function yeah so this is a anonymous function right being defined with with a with with arguments of high",
    "start": "4401520",
    "end": "4408480"
  },
  {
    "text": "low and then any and then any it does make things a bit simpler but this isn't quite the way",
    "start": "4408480",
    "end": "4414400"
  },
  {
    "text": "I was looking to to do it dang it i was more I wanted to see it more a little bit little bit nicer there you go like",
    "start": "4414400",
    "end": "4420960"
  },
  {
    "text": "here's here's what I thought was a nice way like something that I thought was super cool about it right it's like here's two functions that have pattern",
    "start": "4420960",
    "end": "4427040"
  },
  {
    "text": "matching in them the empty function and then the non-mpty function that has the",
    "start": "4427040",
    "end": "4432239"
  },
  {
    "text": "single value plus the rest like there's something super cool about that if you're dispatch yeah but you don't like",
    "start": "4432239",
    "end": "4438080"
  },
  {
    "text": "that's the thing is you don't always want you don't always want things to be extensible not all things need to be",
    "start": "4438080",
    "end": "4443600"
  },
  {
    "text": "extensible you're right but some things do but there's other ways to extend them it doesn't have to be that way that's why it's hard for me to understand like",
    "start": "4443600",
    "end": "4449760"
  },
  {
    "text": "why is all pattern matching bad i'm not even a functional guy i don't even program Elixir but I yearn for that",
    "start": "4449760",
    "end": "4456000"
  },
  {
    "text": "feature elsewhere which is like hey I want to be able to def because it effectively removes a an if statement it",
    "start": "4456000",
    "end": "4461280"
  },
  {
    "text": "removes a single indentation in my code because now I can have a function that just operates solely on when I have no",
    "start": "4461280",
    "end": "4467280"
  },
  {
    "text": "items and this is like the cleanup function that I can operate solely on when I do have items and I don't have to",
    "start": "4467280",
    "end": "4472400"
  },
  {
    "text": "yeah I yearn for elixir right i'm just like kids yearning for the minds i yearn for elixir um varss and variables again",
    "start": "4472400",
    "end": "4479840"
  },
  {
    "text": "complex value in time often in inextricable way you can't obtain a value we saw a picture during a keynote",
    "start": "4479840",
    "end": "4487360"
  },
  {
    "text": "yesterday u it's not uh it's not bad it's more complex than a single path are",
    "start": "4487360",
    "end": "4494239"
  },
  {
    "text": "you using the term correctly there i don't know i don't know there's just some states that cannot be represented",
    "start": "4494239",
    "end": "4500640"
  },
  {
    "text": "in any other way other than like depending on it you know just think of some sort of polling system that's like",
    "start": "4500640",
    "end": "4506800"
  },
  {
    "text": "a white paper wet dream right you're only ever operating over a single value it's not even real it's not real",
    "start": "4506800",
    "end": "4512320"
  },
  {
    "text": "software this amazing memory right where you could dreference uh an address and get an object out i",
    "start": "4512320",
    "end": "4520800"
  },
  {
    "text": "want to get one of those computers right have you ever used one of those computers i can't get one i called Apple",
    "start": "4520800",
    "end": "4526239"
  },
  {
    "text": "and they were like \"No.\" The only thing you can ever get out of a memory address is a word a scallar right the thing that",
    "start": "4526239",
    "end": "4533360"
  },
  {
    "text": "was all derided right recovering a composite object from an address it's not something computers do correct none",
    "start": "4533360",
    "end": "4539520"
  },
  {
    "text": "of the ones that we have um so variables have the same problem you cannot recover a composite mutable thing with with one",
    "start": "4539520",
    "end": "4548520"
  },
  {
    "text": "dreference um loops and fold loops are pretty obviously complecting what you're",
    "start": "4548520",
    "end": "4554719"
  },
  {
    "text": "doing and how to do it um fold is a little bit more subtle right because it seems like this nice somebody else is",
    "start": "4554719",
    "end": "4560239"
  },
  {
    "text": "taking care of it but it does have this implication about the order of things this left to right bit actors complex",
    "start": "4560239",
    "end": "4567520"
  },
  {
    "text": "what's going to be done and who's going to do it",
    "start": "4567520",
    "end": "4572000"
  },
  {
    "text": "um now true professor Susman said all these talks have acronyms and I couldn't",
    "start": "4574120",
    "end": "4580800"
  },
  {
    "text": "actually modify my slides in time so object relational mapping um has oh my",
    "start": "4580800",
    "end": "4586080"
  },
  {
    "text": "god complexing going on um you can't even begin to talk about how how bad it",
    "start": "4586080",
    "end": "4591679"
  },
  {
    "text": "is i love the hate for OMS you know but to be completely fair every now and then",
    "start": "4591679",
    "end": "4598000"
  },
  {
    "text": "they feel really great hey they do feel good have you used Eloquent with Laravel i'm just saying uh SQLc is not an OM",
    "start": "4598000",
    "end": "4606960"
  },
  {
    "text": "it's a compiled statement right it's just a great alternative yeah it's a great alternative it's great until it",
    "start": "4606960",
    "end": "4612239"
  },
  {
    "text": "isn't exactly exactly eloquent is Eloquent d Taylor Outwell did a great job with Eloquent it's a great great",
    "start": "4612239",
    "end": "4619280"
  },
  {
    "text": "piece of software right and and and you know if you're gonna But I don't love OMS but I do love OMS but I don't love",
    "start": "4619280",
    "end": "4626080"
  },
  {
    "text": "OMS oms are the victim of the complexity of an app if you have a simple app OMS",
    "start": "4626080",
    "end": "4632239"
  },
  {
    "text": "are just amazing i've just never had an app remain simple if that makes sense it's like any app that I work on it just",
    "start": "4632239",
    "end": "4639920"
  },
  {
    "text": "slowly slowly becomes difficult right it becomes an application not just simply a",
    "start": "4639920",
    "end": "4644960"
  },
  {
    "text": "view like right like simple simple CRUD apps are just views that's all they are is just a viewed a view into data they",
    "start": "4644960",
    "end": "4651280"
  },
  {
    "text": "want to give you something to look at then you do a little bit of editing it's still pretty easy it's still just a little bit of you know it's just take a",
    "start": "4651280",
    "end": "4657040"
  },
  {
    "text": "little bit of couple day fields update it bada bing bada boom and then they get more and more complex and eventually OMS",
    "start": "4657040",
    "end": "4662320"
  },
  {
    "text": "just completely fall apart do like um uh DS right what's the duel of",
    "start": "4662320",
    "end": "4671159"
  },
  {
    "text": "value is it co-value what's a co-value it's an inconsistent",
    "start": "4671159",
    "end": "4678640"
  },
  {
    "text": "thing who wants that and conditionals I think are interesting right this is this is sort of more cutting edge area We",
    "start": "4678840",
    "end": "4684960"
  },
  {
    "text": "have a bunch of sort of rules about what our program is supposed to do it's strewn all throughout the program",
    "start": "4684960",
    "end": "4691600"
  },
  {
    "text": "uh can we fix that because that I want to know can you fix that because some of",
    "start": "4691719",
    "end": "4696960"
  },
  {
    "text": "these kind of feel like they are you could only write dumb programs without them like how do you not write a program",
    "start": "4696960",
    "end": "4703679"
  },
  {
    "text": "without conditionals that's complexed with the structure of the program and the organization of the",
    "start": "4703679",
    "end": "4710040"
  },
  {
    "text": "program all right so cuz somewhere somehow there has to be",
    "start": "4710040",
    "end": "4715520"
  },
  {
    "text": "something that makes it a decision pattern um one would be the difference between the words simple and easy the",
    "start": "4715520",
    "end": "4721120"
  },
  {
    "text": "other I would hope would be the fact that we can create precisely the same",
    "start": "4721120",
    "end": "4727280"
  },
  {
    "text": "programs we're creating right now with these tools of complexity with",
    "start": "4727280",
    "end": "4732360"
  },
  {
    "text": "dramatically drastically simpler tools right i did C++ for a long time i did",
    "start": "4732360",
    "end": "4738480"
  },
  {
    "text": "Java i did C i know how to make big systems in those languages and I",
    "start": "4738480",
    "end": "4743920"
  },
  {
    "text": "completely believe you do not need all that complexity you can write as sophisticated a system with dramatically",
    "start": "4743920",
    "end": "4751840"
  },
  {
    "text": "simpler tools which means you're going to be focusing on the system what it's supposed to do instead of all the [ __ ]",
    "start": "4751840",
    "end": "4756960"
  },
  {
    "text": "that falls out of the constructs you're using so I'd love to say the first step",
    "start": "4756960",
    "end": "4762159"
  },
  {
    "text": "in getting a simpler life is to just choose simpler stuff right so if you",
    "start": "4762159",
    "end": "4767600"
  },
  {
    "text": "want values usually you can get it most languages have something like values final or or",
    "start": "4767600",
    "end": "4773239"
  },
  {
    "text": "val you know lets you like declare something as being immutable um you do want to find some persistent collections",
    "start": "4773239",
    "end": "4779199"
  },
  {
    "text": "because the harder thing in a lot of languages is getting um um aggregates that are values right you got to find a",
    "start": "4779199",
    "end": "4786400"
  },
  {
    "text": "good library for that or use a language where that's the default so immutability immutability is not without its own",
    "start": "4786400",
    "end": "4792719"
  },
  {
    "text": "downfall though right a you have to have more references to the thing every time it changes you have to make sure that",
    "start": "4792719",
    "end": "4798800"
  },
  {
    "text": "you're referencing the latest one i've been bit by that it's not It's not a 100% It's not free but it does make",
    "start": "4798800",
    "end": "4805040"
  },
  {
    "text": "things typically more simple to reason about like I prefer everything to be constant if I can uh",
    "start": "4805040",
    "end": "4813480"
  },
  {
    "text": "also most languages have them thank goodness um if you don't know what they are they're like stateless methods",
    "start": "4813480",
    "end": "4820640"
  },
  {
    "text": "uh I mean to be fair a method is just a function where the first argument is the state you're operating on you can",
    "start": "4820640",
    "end": "4826880"
  },
  {
    "text": "recreate all the complexity of a method by calling it a function and then having some sort of type expectation for the",
    "start": "4826880",
    "end": "4832960"
  },
  {
    "text": "first argument and then call that argument self so I I I I get the",
    "start": "4832960",
    "end": "4838080"
  },
  {
    "text": "argument for why this is true and I think that I don't like using methods generally and I think you can solve a",
    "start": "4838080",
    "end": "4843760"
  },
  {
    "text": "lot of problems better i think the problems with using methods is that it makes you automatically start thinking",
    "start": "4843760",
    "end": "4848880"
  },
  {
    "text": "in terms of inheritance and it also locks in the type of strct that's being passed in you can't like duct type your way into it name spaces is something you",
    "start": "4848880",
    "end": "4855440"
  },
  {
    "text": "really need the language to do for you and unfortunately it's not done very well in a lot of places data",
    "start": "4855440",
    "end": "4862120"
  },
  {
    "text": "please we're programmers we we're supposedly write data processing programs there's all these programs they",
    "start": "4862120",
    "end": "4867440"
  },
  {
    "text": "don't have any data in them have all these constructs we put around it and globbed on top of data data is actually",
    "start": "4867440",
    "end": "4874239"
  },
  {
    "text": "really simple there's not there's not a tremendous number of of variations in the essential nature of data right there",
    "start": "4874239",
    "end": "4880000"
  },
  {
    "text": "are maps there are sets there are linear sequential things there's not a lot of other conceptual categories of data we",
    "start": "4880000",
    "end": "4887199"
  },
  {
    "text": "create hundreds of thousands of variations that have nothing to do with the essence of the stuff and make it hard to write programs that manipulate",
    "start": "4887199",
    "end": "4893920"
  },
  {
    "text": "the essence of the stuff we should just manipulate the essence of the stuff it's not hard it's simpler also same thing",
    "start": "4893920",
    "end": "4900800"
  },
  {
    "text": "for communications right are we all not glad we don't use the Unix method of",
    "start": "4900800",
    "end": "4906960"
  },
  {
    "text": "communicating on the web right any arbitrary command string can",
    "start": "4906960",
    "end": "4912800"
  },
  {
    "text": "be the argument list for your program and any arbitrary set of characters can come out the other end let's all write",
    "start": "4912800",
    "end": "4918320"
  },
  {
    "text": "parsers no I mean it's it's a problem it's it's",
    "start": "4918320",
    "end": "4923360"
  },
  {
    "text": "a source of complexity right so we can get rid of that just use data uh the biggest thing I think the most desirable",
    "start": "4923360",
    "end": "4929280"
  },
  {
    "text": "thing the most esoteric this is tough to get but boy when you have it your life is completely totally different thing is",
    "start": "4929280",
    "end": "4936639"
  },
  {
    "text": "polymorphism alakart right closure protocols and Haskell type classes um and and",
    "start": "4936639",
    "end": "4943280"
  },
  {
    "text": "constructs like that um give you the ability to independently say I have data structures I have definitions of sets of",
    "start": "4943280",
    "end": "4951760"
  },
  {
    "text": "functions and I can connect them together and those are three independent operations so I've never used Haskell",
    "start": "4951760",
    "end": "4958800"
  },
  {
    "text": "type classes what are they the most akin that I've I've gotten close to using",
    "start": "4958800",
    "end": "4964280"
  },
  {
    "text": "before are they kind of like you know when you want to make something be able",
    "start": "4964280",
    "end": "4969760"
  },
  {
    "text": "to be displayable in uh just standard print in Rust you implement",
    "start": "4969760",
    "end": "4976440"
  },
  {
    "text": "display is that like close to what it is you're able to effectively layer on",
    "start": "4976440",
    "end": "4981920"
  },
  {
    "text": "behaviors trait rust traits are rust traits close because again I'm not a I'm",
    "start": "4981920",
    "end": "4987360"
  },
  {
    "text": "not a Haskell guy so I just don't know the Haskellies protocol swift i've never used swift like good enough duct typing",
    "start": "4987360",
    "end": "4994400"
  },
  {
    "text": "but in a strict and type- safe way yeah I love structural typing there's",
    "start": "4994400",
    "end": "4999840"
  },
  {
    "text": "something about that that's super cool that's one thing I've always enjoyed about the ease of using TypeScript and I understand why people like it is that",
    "start": "4999840",
    "end": "5006159"
  },
  {
    "text": "you can do a lot of structural typing and you're just operating over a set of you know a set of properties i have",
    "start": "5006159",
    "end": "5012880"
  },
  {
    "text": "found that to be it can solve certain problems really really well in other words the genericity is not tied to",
    "start": "5012880",
    "end": "5018400"
  },
  {
    "text": "anything in particular it's available alakart um I don't know of a lot of library solutions for languages that",
    "start": "5018400",
    "end": "5024719"
  },
  {
    "text": "don't have it i already talked about manage references and how to get them maybe you can use closures from",
    "start": "5024719",
    "end": "5030239"
  },
  {
    "text": "different Java languages set functions you can get from libraries cues you can get from libraries right you don't need",
    "start": "5030239",
    "end": "5035760"
  },
  {
    "text": "a special communication language you can get declarative data manipulation by using SQL or learning SQL",
    "start": "5035760",
    "end": "5044920"
  },
  {
    "text": "finally or something like link or something like data log i I think these last couple of things are are harder",
    "start": "5044920",
    "end": "5051280"
  },
  {
    "text": "right we don't have a lot of ways to do this well integrated with our languages i think at currently link is an is an",
    "start": "5051280",
    "end": "5057360"
  },
  {
    "text": "effort to do that if you've ever seen I mean Go is a great example they have the",
    "start": "5057360",
    "end": "5062719"
  },
  {
    "text": "old like they have the the SQL data class or the SQL module but it's it's",
    "start": "5062719",
    "end": "5068880"
  },
  {
    "text": "still like a horrible pain in the ass to pull data values out like it's just it is just it is just not fun amounts of",
    "start": "5068880",
    "end": "5075600"
  },
  {
    "text": "programming i understand why people want things a bit simpler yeah that module is",
    "start": "5075600",
    "end": "5080800"
  },
  {
    "text": "horrific exactly it is like it's it it sucks uh rules right declarative rule",
    "start": "5080800",
    "end": "5086560"
  },
  {
    "text": "systems instead of you know embedding a bunch of uh conditionals in our raw language at every point of decision it's",
    "start": "5086560",
    "end": "5093360"
  },
  {
    "text": "nice to sort of gather that stuff and put it over someplace else and you can get rule systems in libraries or you can",
    "start": "5093360",
    "end": "5099120"
  },
  {
    "text": "use languages like prologue if is prologue a practical language can you actually use it in any sort of real",
    "start": "5099120",
    "end": "5105800"
  },
  {
    "text": "application i've never prologed beyond the most basic example is prologue one",
    "start": "5105800",
    "end": "5111520"
  },
  {
    "text": "of those things prologue is magic prologue is magic but is it one of those magics where it's just like actually if you use it in a sufficiently large",
    "start": "5111520",
    "end": "5117360"
  },
  {
    "text": "amount of a sufficiently large amount of code it becomes also really really hard heard it for the first time oh no it's",
    "start": "5117360",
    "end": "5123040"
  },
  {
    "text": "it's a prologue stream it's it can solve unique problems but I feel like you know",
    "start": "5123040",
    "end": "5128880"
  },
  {
    "text": "this doesn't really get you away from I'm curious how this gets you away from conditionals can you do that for everything because I feel like you're",
    "start": "5128880",
    "end": "5135520"
  },
  {
    "text": "just moving the conditionals into how you specify the program it's like you never actually left conditionals you've",
    "start": "5135520",
    "end": "5141360"
  },
  {
    "text": "just reformatted conditionals if you want consistency you need to use transactions and you need to use values",
    "start": "5141360",
    "end": "5148800"
  },
  {
    "text": "okay there are reasons why you might have to get off of this list but boy",
    "start": "5148800",
    "end": "5154000"
  },
  {
    "text": "there's no reason why you shouldn't start with it okay um there's a source of",
    "start": "5154000",
    "end": "5159920"
  },
  {
    "text": "complexity that's really difficult to deal with and not your fault i call it",
    "start": "5159920",
    "end": "5165120"
  },
  {
    "text": "environmental complexity right our programs end up running on machines next to other programs next to other that is",
    "start": "5165120",
    "end": "5172159"
  },
  {
    "text": "the most hasll answer I've ever heard of in my lifetime what are some environmental complexities a",
    "start": "5172159",
    "end": "5178920"
  },
  {
    "text": "computer it's just not as good as a white paper that's pretty parts of themselves and uh they contend they",
    "start": "5178920",
    "end": "5186320"
  },
  {
    "text": "contend for stuff right memory CPU cycles and things like that uh",
    "start": "5186320",
    "end": "5191600"
  },
  {
    "text": "everybody's contending for it this is an inherent complexity inherent is Latin for not your fault um in the",
    "start": "5191600",
    "end": "5199760"
  },
  {
    "text": "implementation space and know this is not part of the problem but it is part of the implementation right you can't go",
    "start": "5199760",
    "end": "5204800"
  },
  {
    "text": "back to the customer and say the thing you wanted is not good because um I have GC problems u but the GC problems and",
    "start": "5204800",
    "end": "5211840"
  },
  {
    "text": "stuff like that they they come into play um there's not a lot of great solutions right you can do segmentation you can",
    "start": "5211840",
    "end": "5216880"
  },
  {
    "text": "say this is your memory this is your memory this is your memory this is your your CPU and your CPU um but there's",
    "start": "5216880",
    "end": "5222000"
  },
  {
    "text": "tremendous waste in that right because you pre-allocate you don't use everything you don't have sort of dynamic nature um but the problem I",
    "start": "5222000",
    "end": "5229040"
  },
  {
    "text": "think we're facing and it's not NASA would say you should pre-allocate in fact NASA would say you",
    "start": "5229040",
    "end": "5236159"
  },
  {
    "text": "should never allocate except for at the very beginning of your program",
    "start": "5236159",
    "end": "5243040"
  },
  {
    "text": "just Good answer yeah I'm just saying NASA has a different Yeah good answer",
    "start": "5243080",
    "end": "5248480"
  },
  {
    "text": "thank you hey thank you low-level TV he knows okay one for which I have a",
    "start": "5248480",
    "end": "5253600"
  },
  {
    "text": "solution at the moment is that the policies around this stuff don't compose",
    "start": "5253600",
    "end": "5258960"
  },
  {
    "text": "right if everybody says I'll just size my thread pool to be the number of you know cores how many times can you do",
    "start": "5258960",
    "end": "5265120"
  },
  {
    "text": "that in one program not a lot and have it still work out so um unfortunately a lot of things",
    "start": "5265120",
    "end": "5272320"
  },
  {
    "text": "like that uh splitting that stuff up and making an individual decision is not",
    "start": "5272320",
    "end": "5278000"
  },
  {
    "text": "actually making things simpler it's making things complex because that's a decision that needs to be made by",
    "start": "5278000",
    "end": "5283440"
  },
  {
    "text": "someone who has better information um and I don't think we have a lot of good sources for um uh organizing those",
    "start": "5283440",
    "end": "5291120"
  },
  {
    "text": "decisions in in single places in our systems this is a hugely long quote um",
    "start": "5291120",
    "end": "5297840"
  },
  {
    "text": "basically it it says programming is not about typing like this yeah I'll read the",
    "start": "5297840",
    "end": "5303679"
  },
  {
    "text": "quote programming when stripped of all of its circumstantial irrelevance irrelevancies boils down to no more and",
    "start": "5303679",
    "end": "5310239"
  },
  {
    "text": "no less than very effective thinking so as to avoid unmastered complexity to",
    "start": "5310239",
    "end": "5315600"
  },
  {
    "text": "very vigorous separation of your many different concerns classic Dystra saying",
    "start": "5315600",
    "end": "5322480"
  },
  {
    "text": "words that I understand individually but never put together in",
    "start": "5322480",
    "end": "5327719"
  },
  {
    "text": "that way basically it it says programming is not about",
    "start": "5327719",
    "end": "5333320"
  },
  {
    "text": "typing like this um it's about",
    "start": "5333320",
    "end": "5338679"
  },
  {
    "text": "thinking um so the next phase here I got to move a little bit quicker is um how do we design simple things of our own",
    "start": "5338679",
    "end": "5345440"
  },
  {
    "text": "right so the first part of making things simple is just to choose that's it we need Casey hey this would actually be",
    "start": "5345440",
    "end": "5350560"
  },
  {
    "text": "funny for the standup tomorrow uh the standup tomorrow should I just have this and be like all right I'm going to read",
    "start": "5350560",
    "end": "5356400"
  },
  {
    "text": "you a quote you need to tell me what it means go Casey quote a quote from Edgar Dystra can you understand it in 4",
    "start": "5356400",
    "end": "5363520"
  },
  {
    "text": "seconds go it's about thinking um so the next phase",
    "start": "5363520",
    "end": "5369120"
  },
  {
    "text": "here I got to move a little bit quicker is um how do we design simple things of our own right so the first part of",
    "start": "5369120",
    "end": "5374719"
  },
  {
    "text": "making things simple is just to choose constructs that have simple artifacts but we have to write our own constructs",
    "start": "5374719",
    "end": "5380480"
  },
  {
    "text": "sometimes so how do we abstract for simplicity right and abstract again here's an actual definition not made up",
    "start": "5380480",
    "end": "5387840"
  },
  {
    "text": "one means to draw something away and in particular it means to draw away from the physical nature of something um I do",
    "start": "5387840",
    "end": "5395360"
  },
  {
    "text": "want to distinguish this from the sometimes people use this term really grossly to just mean hiding stuff that",
    "start": "5395360",
    "end": "5402000"
  },
  {
    "text": "is not what abstraction is and that's not going to help you in this space",
    "start": "5402000",
    "end": "5407239"
  },
  {
    "text": "uh it's the unfortunate part of of the human experience which is everyone does",
    "start": "5407239",
    "end": "5413120"
  },
  {
    "text": "it away that's what it means i've pretty much only ever heard of people use the word abstraction as complexity hiding",
    "start": "5413120",
    "end": "5421360"
  },
  {
    "text": "um there's two you know I can't totally explain how this is done it's really the",
    "start": "5421360",
    "end": "5426639"
  },
  {
    "text": "job of designing um but one approach you can take is just to do who what when where why and how right if you just go through those things and sort of look at",
    "start": "5426639",
    "end": "5432719"
  },
  {
    "text": "everything you're deciding to do and say what is the who aspect of this what is the what aspect of it this can help you",
    "start": "5432719",
    "end": "5438880"
  },
  {
    "text": "take stuff apart the other thing is to maintain this uh approach that says I",
    "start": "5438880",
    "end": "5444000"
  },
  {
    "text": "don't know I don't want to know i once said that so often during a C++",
    "start": "5444000",
    "end": "5449199"
  },
  {
    "text": "course I was teaching that one of the students made me a shirt it it was a boot diagram because we didn't have a",
    "start": "5449199",
    "end": "5456000"
  },
  {
    "text": "whatever it is now the unified one um and every line just said that um that's",
    "start": "5456000",
    "end": "5462000"
  },
  {
    "text": "what you want to do you really just don't want to know i think I understand complexity hiding a",
    "start": "5462000",
    "end": "5467840"
  },
  {
    "text": "little bit better now that I think about it more what he's saying is he doesn't want an abstraction to be taking things",
    "start": "5467840",
    "end": "5474320"
  },
  {
    "text": "and in his new word that he's been throwing at us complecting things together and causing complexity within",
    "start": "5474320",
    "end": "5480400"
  },
  {
    "text": "the program but hiding it behind an interface that gives the illusion of simplicity i think what he's trying to",
    "start": "5480400",
    "end": "5485600"
  },
  {
    "text": "say is that you want an abstraction that takes a lot of logic that would",
    "start": "5485600",
    "end": "5492719"
  },
  {
    "text": "otherwise be hard to throw into your brain and put it behind something that's simple and is easily understandable you",
    "start": "5492719",
    "end": "5499120"
  },
  {
    "text": "should be able to forget what your code does in an ideal world you should forget what your code does in a non ideal world",
    "start": "5499120",
    "end": "5504159"
  },
  {
    "text": "I do that all the time that's called not going to a project in two weeks i forget all about that all right so what is what",
    "start": "5504159",
    "end": "5511120"
  },
  {
    "text": "um what is the operations you know what what is what is it that what we want to accomplish right um we're going to form",
    "start": "5511120",
    "end": "5516880"
  },
  {
    "text": "abstractions by taking functions or and more particularly sets of functions and giving them names uh in particular so",
    "start": "5516880",
    "end": "5524480"
  },
  {
    "text": "and you're going to use whatever your language lets you use right so if you only have um interfaces you'll use that",
    "start": "5524480",
    "end": "5530239"
  },
  {
    "text": "if you have proto um protocols or type classes you'll use those so all those things are in the category of the things",
    "start": "5530239",
    "end": "5536320"
  },
  {
    "text": "you use to make sets of functions that are going to be abstractions and they're really sets of specifications of",
    "start": "5536320",
    "end": "5541760"
  },
  {
    "text": "functions um the point I'd like to get across today is just that they should be really small uh much smaller than what",
    "start": "5541760",
    "end": "5549120"
  },
  {
    "text": "we typically see java interfaces are huge i think that's one thing that Go does really really good it's in the Go",
    "start": "5549120",
    "end": "5554239"
  },
  {
    "text": "mistakes go does this really really well which is that uh so if you go to like Golang",
    "start": "5554239",
    "end": "5560880"
  },
  {
    "text": "io reader and IO reader this is it that's all its interface is which there",
    "start": "5560880",
    "end": "5566639"
  },
  {
    "text": "is something very very nice about that go's whole mantra is that your interface should be the absolute minimum at all",
    "start": "5566639",
    "end": "5573000"
  },
  {
    "text": "times like how do you make it as small as possible always IO reader is the goat",
    "start": "5573000",
    "end": "5579280"
  },
  {
    "text": "interface of Golang it is but it's also horrible because it doesn't allow for you to be able to make channels fair easily you have to always wrap a reader",
    "start": "5579280",
    "end": "5584880"
  },
  {
    "text": "with in this stupid way to generate a channel i just hate it i wish there was like a read but with channel anyways",
    "start": "5584880",
    "end": "5589920"
  },
  {
    "text": "doesn't matter that's just here noral huge uh and the reason why they are huge is because Java doesn't have union types",
    "start": "5589920",
    "end": "5596159"
  },
  {
    "text": "so it's inconvenient to say this function takes you know something that does this and that and that you have to",
    "start": "5596159",
    "end": "5602719"
  },
  {
    "text": "make a this and that and that interface so we see these giant interfaces and the thing with those giant interfaces is",
    "start": "5602719",
    "end": "5607840"
  },
  {
    "text": "that it's a lot harder to break up those programs um so you're going to represent them with your polymorphism constructs",
    "start": "5607840",
    "end": "5614239"
  },
  {
    "text": "they're specifications right they're not actually the implementations um they should only use",
    "start": "5614239",
    "end": "5620400"
  },
  {
    "text": "values and other abstractions in their definitions so you're going to define interfaces or whatever type classes that",
    "start": "5620400",
    "end": "5626480"
  },
  {
    "text": "only take interfaces and type classes or values and return them and the biggest",
    "start": "5626480",
    "end": "5631920"
  },
  {
    "text": "problem you have when you're doing this part of design is if you complect this with how right you can complect it with",
    "start": "5631920",
    "end": "5637199"
  },
  {
    "text": "how by jamming them together and saying here's just a concrete function instead of having an interface or here's a concrete class instead of having an",
    "start": "5637199",
    "end": "5643280"
  },
  {
    "text": "interface you can also complect it with how more subtly by having some implication of the semantics of the",
    "start": "5643280",
    "end": "5648400"
  },
  {
    "text": "function dictate how it um is done um fold is an example of",
    "start": "5648400",
    "end": "5653480"
  },
  {
    "text": "that uh the strictly separating what from how is the key to making how somebody else's",
    "start": "5653480",
    "end": "5660480"
  },
  {
    "text": "problem right if you've done this really well you can you can pawn off the work of how on somebody else you can say",
    "start": "5660480",
    "end": "5666560"
  },
  {
    "text": "database engine you figure out how to do this thing or logic engine you figure out how to search for this i I don't need to know who is about like data or",
    "start": "5666560",
    "end": "5674400"
  },
  {
    "text": "entities these are the things that are I wish you had a small example to go with that previous one because I'm trying to figure out how do you how do you",
    "start": "5674400",
    "end": "5680560"
  },
  {
    "text": "complect who and how together like what is a concrete version of this mistake because that's always one of those",
    "start": "5680560",
    "end": "5686159"
  },
  {
    "text": "things that I always I I I struggle with at least particularly in this talk is that he'll say something and I have to",
    "start": "5686159",
    "end": "5692880"
  },
  {
    "text": "really try to understand what he is attempting to say because my first thought goes okay the how would be say",
    "start": "5692880",
    "end": "5698199"
  },
  {
    "text": "the some sort of data structure so then you want to pass in that data structure but then you're saying no because by",
    "start": "5698199",
    "end": "5704719"
  },
  {
    "text": "passing that data structure you are saying how it's doing it but I'm like is that true that can't be true so what's",
    "start": "5704719",
    "end": "5710800"
  },
  {
    "text": "the other way in which how does it like what is the what is the how abstraction",
    "start": "5710800",
    "end": "5716880"
  },
  {
    "text": "is going to be connected to eventually depending on how you and how do I not accidentally create clean code from you want to build components up from",
    "start": "5716880",
    "end": "5722400"
  },
  {
    "text": "subcomponents in a sort of direct just just like man I got interface with my interface that produce interface",
    "start": "5722400",
    "end": "5728719"
  },
  {
    "text": "interfaces right like I just the strategy pattern yeah I know pretty much every single thing that honestly It's",
    "start": "5728719",
    "end": "5734880"
  },
  {
    "text": "the true golden hammer of programming is the strategy pattern everything I see is just like boom strategy pattern that",
    "start": "5734880",
    "end": "5741600"
  },
  {
    "text": "what is that what do you got there what is that thing that's called strategy pattern next question injection style",
    "start": "5741600",
    "end": "5747520"
  },
  {
    "text": "right you don't want to like hardwire what the subcomponents are you want to as much as possible take them as arguments because it's going to give you",
    "start": "5747520",
    "end": "5753679"
  },
  {
    "text": "more programmatic flexibility in how you build things um it is true but there",
    "start": "5753679",
    "end": "5759600"
  },
  {
    "text": "I've seen this taken to its maximum and it's also really freaking annoying it's",
    "start": "5759600",
    "end": "5766638"
  },
  {
    "text": "like you know what I mean it can be really I always struggle with this one",
    "start": "5766920",
    "end": "5772320"
  },
  {
    "text": "which is like how much where where and why do you do all these things there's like there is definitely like this",
    "start": "5772320",
    "end": "5777360"
  },
  {
    "text": "there's a balance there's a point where it makes it really great and then it also makes testing really great but then",
    "start": "5777360",
    "end": "5782480"
  },
  {
    "text": "any sort of refactoring just completely just prones you all the way through",
    "start": "5782480",
    "end": "5790159"
  },
  {
    "text": "you should have probably many more subcomponents than you have really much smaller interfaces than you have and you want to have more submponents than you",
    "start": "5790159",
    "end": "5796320"
  },
  {
    "text": "probably are typically having because usually I wouldn't want to do that uh that style in C very interesting yes yet",
    "start": "5796320",
    "end": "5803520"
  },
  {
    "text": "I had to think more about that you have none and then maybe you have one when you decide oh I need to farm out policy",
    "start": "5803520",
    "end": "5809679"
  },
  {
    "text": "if you go in saying this is a job and I've done who what when where why and I found five components don't feel bad",
    "start": "5809679",
    "end": "5816000"
  },
  {
    "text": "that's great you're winning massively by doing that you know split out policy and",
    "start": "5816000",
    "end": "5821199"
  },
  {
    "text": "stuff like that and uh the thing that you have to uh be aware of when you're building you know the definition of a",
    "start": "5821199",
    "end": "5827199"
  },
  {
    "text": "thing from subcomponents is any any of those kind of you know red you know yellow thinking about blue thinking",
    "start": "5827199",
    "end": "5832320"
  },
  {
    "text": "about yellow kind of um hidden detailed dependencies so you want to avoid that",
    "start": "5832320",
    "end": "5838719"
  },
  {
    "text": "how things happen this is the actual implementation code the work of of doing the job um you you strictly want to",
    "start": "5838719",
    "end": "5845119"
  },
  {
    "text": "connect these things together using those polymorphism constructs that's the most powerful thing yeah you can use a",
    "start": "5845119",
    "end": "5850560"
  },
  {
    "text": "switch statement you could use pattern matching but it's glomming all this stuff together if you use one of these systems you have an open polymorphism",
    "start": "5850560",
    "end": "5858360"
  },
  {
    "text": "policy and that is really powerful especially if it's runtime um open but",
    "start": "5858360",
    "end": "5863920"
  },
  {
    "text": "even if it's not it's better than than nothing um and again beware of uh",
    "start": "5863920",
    "end": "5869760"
  },
  {
    "text": "abstractions that dictate how in some subtle way because when you do that you're really you're nailing the person",
    "start": "5869760",
    "end": "5875119"
  },
  {
    "text": "down the line who has to do the implementation you're tying their hands so the more declarative things are the",
    "start": "5875119",
    "end": "5880719"
  },
  {
    "text": "better the better things work and the thing that uh I mean how is sort of the bottom right don't mix this up with",
    "start": "5880719",
    "end": "5887199"
  },
  {
    "text": "anything else all these implementations should be islands as much as possible uh",
    "start": "5887199",
    "end": "5892320"
  },
  {
    "text": "when I have a hard time understanding this section because I'm not I kind of feel like this this is really hitting",
    "start": "5892320",
    "end": "5898400"
  },
  {
    "text": "that Mike Tyson style which is this all like all these things and the way he's talking about it sound great but how",
    "start": "5898400",
    "end": "5904400"
  },
  {
    "text": "does it survive getting punched in the face I'm not quite sure I understand you",
    "start": "5904400",
    "end": "5910000"
  },
  {
    "text": "know like how does how how does how not intersect with who you like complecting",
    "start": "5910000",
    "end": "5915040"
  },
  {
    "text": "oh I like complexing i'm just not sure yeah I I need code examples exactly i'm trying to figure out like how does that",
    "start": "5915040",
    "end": "5920560"
  },
  {
    "text": "h how how do they not intersect at some point everybody got a plan until you get punched in the uh punched in the",
    "start": "5920560",
    "end": "5926800"
  },
  {
    "text": "implementation exactly dude the problem is I keep getting punched in the implementation i'm not saying no examples equals nothing said or implies",
    "start": "5926800",
    "end": "5932719"
  },
  {
    "text": "nothing said it's just that I want to understand what he's like there you should always be willing to listen to",
    "start": "5932719",
    "end": "5939199"
  },
  {
    "text": "what somebody says even when you're having a hard time understanding it like I'm I have all these internal feelings",
    "start": "5939199",
    "end": "5944800"
  },
  {
    "text": "of me fighting against some of the things he's saying but then I'm trying to like okay how do I take what he is saying can I apply it against what I am",
    "start": "5944800",
    "end": "5951520"
  },
  {
    "text": "building and can I make a better understanding of it invert that control invert control is great until it's not",
    "start": "5951520",
    "end": "5957600"
  },
  {
    "text": "great where this is pretty simple i think you just have to strenuously avoid",
    "start": "5957600",
    "end": "5963040"
  },
  {
    "text": "complexing this with anything um you see it accidentally coming in uh mostly when",
    "start": "5963040",
    "end": "5968960"
  },
  {
    "text": "people design systems with directly connected objects right so if you know the if your program is I'm going to",
    "start": "5968960",
    "end": "5974400"
  },
  {
    "text": "restart this actually I was too busy thinking as much as possible uh when and where this is pretty simple I think you",
    "start": "5974400",
    "end": "5981600"
  },
  {
    "text": "just have to strenuously avoid complexing this with anything um I see it accidentally coming in uh mostly when",
    "start": "5981600",
    "end": "5989679"
  },
  {
    "text": "people design systems with directly connected objects right so if you know the If your program is architected such",
    "start": "5989679",
    "end": "5995679"
  },
  {
    "text": "that you know this thing um deals with the input and then this thing has to do the the next part of the job well if if",
    "start": "5995679",
    "end": "6002400"
  },
  {
    "text": "thing A calls thing B you just complected it right and now you have a",
    "start": "6002400",
    "end": "6008960"
  },
  {
    "text": "when and where thing because now A has to know where B is in order to call B",
    "start": "6008960",
    "end": "6014480"
  },
  {
    "text": "and um when that happens is whenever A does it right stick a Q",
    "start": "6014480",
    "end": "6020800"
  },
  {
    "text": "i've se I've seen it done this way as well and this is how I did like uh when I was doing like the game programming when I built the tower defense for AIS",
    "start": "6020800",
    "end": "6027280"
  },
  {
    "text": "to play i did this and it worked fairly well but at the exact same time you're",
    "start": "6027280",
    "end": "6033440"
  },
  {
    "text": "still you're still building a a when and where right you're building that this thing now just talks to another",
    "start": "6033440",
    "end": "6039199"
  },
  {
    "text": "structure in which can just do something say an event bus or whatever and then",
    "start": "6039199",
    "end": "6044320"
  },
  {
    "text": "something else just has to listen to it in a different way i don't feel like you really get out of anything with these and I I go back and forth on all sorts",
    "start": "6044320",
    "end": "6050719"
  },
  {
    "text": "of different ways to kind of handle this i like when I was designing the um the DOM like interface for the Moria game",
    "start": "6050719",
    "end": "6057119"
  },
  {
    "text": "for how we're doing the UI I went back and forth between using an event bus and not using an event bus like 9,000 times",
    "start": "6057119",
    "end": "6064080"
  },
  {
    "text": "like literally just went yes no yes no yes no yes no it's because like do you connect the objects directly or do you",
    "start": "6064080",
    "end": "6070480"
  },
  {
    "text": "send some sort of intermediate way in there right q's are the way to just get rid of this problem if you're not using",
    "start": "6070480",
    "end": "6077280"
  },
  {
    "text": "Q's extensively you should be you should start right away any conclusions drawn yeah very very simple",
    "start": "6077280",
    "end": "6084760"
  },
  {
    "text": "conclusion every time I see somebody [ __ ] about how hard it is to build on the web I want to throat chop them do",
    "start": "6084760",
    "end": "6090560"
  },
  {
    "text": "you have any idea what it takes to build your own version of it and how much crappier it is than what you have on the",
    "start": "6090560",
    "end": "6095679"
  },
  {
    "text": "web shut up shut up that's my conclusion like",
    "start": "6095679",
    "end": "6101840"
  },
  {
    "text": "right after this talk and then there's the why part this is sort of the policy and rules um this is",
    "start": "6101840",
    "end": "6108800"
  },
  {
    "text": "a this is I think this is hard for us we typically put this stuff all over our application and if you ever have to talk",
    "start": "6108800",
    "end": "6115360"
  },
  {
    "text": "to a customer about what the application does you it's really difficult to sit you know with them in source code and",
    "start": "6115360",
    "end": "6120880"
  },
  {
    "text": "look at it now if you have one of these I would never want to sit with a customer and look at the source code i just would never want to do that pretend",
    "start": "6120880",
    "end": "6128080"
  },
  {
    "text": "testing systems that let you write English strings so the customer can look at that that's just silly right you",
    "start": "6128080",
    "end": "6133520"
  },
  {
    "text": "should have code that does the work that somebody can look at which means to try to you know uh put this stuff someplace",
    "start": "6133520",
    "end": "6139760"
  },
  {
    "text": "outside try to find a declarative system or a rule system that lets you let you do this work i've I've had some I've",
    "start": "6139760",
    "end": "6146080"
  },
  {
    "text": "tried to do things like that i've I've definitely had some problems there's I mean I understand what he's saying that makes it really really nice but then you",
    "start": "6146080",
    "end": "6153119"
  },
  {
    "text": "at least in my minimal experience is that you end up building a ve you you effectively invent a DSL then that DSL",
    "start": "6153119",
    "end": "6160239"
  },
  {
    "text": "becomes a programming language and then that programming language becomes riddled and worse than anything else that you could have just simply built",
    "start": "6160239",
    "end": "6166320"
  },
  {
    "text": "into the system at least that's always been my kind of experience with this and",
    "start": "6166320",
    "end": "6171679"
  },
  {
    "text": "it happens every time it starts off with this really good idea of like hey we can we can mention this is how we're going",
    "start": "6171679",
    "end": "6178000"
  },
  {
    "text": "to do blah blah blah it's going to be super simple and then someone's like do I need to add one and then someone",
    "start": "6178000",
    "end": "6185440"
  },
  {
    "text": "needs to add one and then you end up doing a DS and then then then it's just the world's worst thing and then your",
    "start": "6185440",
    "end": "6190960"
  },
  {
    "text": "DSL as someone said the D stands for a disappointment and it's true because now you've just become a compiler you've",
    "start": "6190960",
    "end": "6197520"
  },
  {
    "text": "just become a compiler and language designer in your spare time and your full-time job is still doing all the things that your job requires of you and",
    "start": "6197520",
    "end": "6204239"
  },
  {
    "text": "it makes you very sad finally in this area information it is simple right the",
    "start": "6204239",
    "end": "6211600"
  },
  {
    "text": "only thing you can possibly do with information is ruin it right don't do it",
    "start": "6211600",
    "end": "6217920"
  },
  {
    "text": "right don't do this stuff we I mean we got objects objects were made to like encapsulate IO devices so there's a",
    "start": "6217920",
    "end": "6224480"
  },
  {
    "text": "screen but I can't like touch the screen so I have an object right there's a mouse i can't touch the mouse so there's an object right that's all they're good",
    "start": "6224480",
    "end": "6230880"
  },
  {
    "text": "for they were never supposed to be applied to information and we apply them to information that's it's just wrong",
    "start": "6230880",
    "end": "6237280"
  },
  {
    "text": "it's wrong and but I can now say it's wrong for a reason right it's wrong because it's",
    "start": "6237280",
    "end": "6242760"
  },
  {
    "text": "complex um in particular it it ruins your ability to build generic data manipulation things if you leave data",
    "start": "6242760",
    "end": "6250280"
  },
  {
    "text": "alone right you can build things once that manipulate data and you can reuse",
    "start": "6250280",
    "end": "6256080"
  },
  {
    "text": "them all over the place and you know they're right once and you're done um the other thing about it which is also",
    "start": "6256080",
    "end": "6261199"
  },
  {
    "text": "I'm having a hard time understanding that last point which is okay leave the data alone write something once that",
    "start": "6261199",
    "end": "6266960"
  },
  {
    "text": "manipulates the data how is that not an argument for objects or methods i I",
    "start": "6266960",
    "end": "6273119"
  },
  {
    "text": "think I understand it um I'll give I'll try when we're done with this i have this really good example of something",
    "start": "6273119",
    "end": "6278719"
  },
  {
    "text": "that if you use like if you went with like an object-oriented style it's like a huge pain in the ass but a structural",
    "start": "6278719",
    "end": "6284159"
  },
  {
    "text": "style is like a super easy it's super easy barely an inconvenience applies to OM is that it it will tie your logic to",
    "start": "6284159",
    "end": "6290239"
  },
  {
    "text": "representational things which again tying complecting intertwining so represent data as data",
    "start": "6290239",
    "end": "6297040"
  },
  {
    "text": "please start using maps and sets directly don't feel like I have to write a class now because I have a new piece",
    "start": "6297040",
    "end": "6302560"
  },
  {
    "text": "of information it's just silly okay um so the final aspect right so we",
    "start": "6302560",
    "end": "6308960"
  },
  {
    "text": "we we choose simple tools you know okay I'll I'll learn how ECS's work in a more",
    "start": "6308960",
    "end": "6314960"
  },
  {
    "text": "complete way and I'll try to destroy my brain for what I'm thinking about",
    "start": "6314960",
    "end": "6320560"
  },
  {
    "text": "because I think you're saying ECS's is the way that but I I have some strong feeling like that's not exactly",
    "start": "6320560",
    "end": "6329280"
  },
  {
    "text": "what we're talking about we don't use simple stuff and sometimes we have to simplify other people's stuff just to",
    "start": "6329280",
    "end": "6336320"
  },
  {
    "text": "understand it better we may have to simplify the problem space or some code that somebody else wrote um this is a",
    "start": "6336320",
    "end": "6342000"
  },
  {
    "text": "whole separate talk I'm not going to get into right now um but the job is essentially one of disentangling right",
    "start": "6342000",
    "end": "6348320"
  },
  {
    "text": "we know what's what's complex it's entangled so what do we need to do acs is um entity component",
    "start": "6348320",
    "end": "6356199"
  },
  {
    "text": "system right we need to somehow disentangle it right you're going to get",
    "start": "6356199",
    "end": "6361239"
  },
  {
    "text": "this you're going to need to first sort of figure out where it's going you're",
    "start": "6361239",
    "end": "6367119"
  },
  {
    "text": "going to have to follow stuff around and eventually label everything right this is the start this is roughly what the",
    "start": "6367119",
    "end": "6373520"
  },
  {
    "text": "process is like but again it's a whole separate talk to try to talk about simplification all right I'm gonna wrap",
    "start": "6373520",
    "end": "6380719"
  },
  {
    "text": "up a couple of slides the bottom line is simplicity is a choice it's your fault if you don't",
    "start": "6380719",
    "end": "6387199"
  },
  {
    "text": "have a simple system and and I I think we have a culture of complexity to the",
    "start": "6387199",
    "end": "6392800"
  },
  {
    "text": "extent we all continue to use these tools that have complex outputs we're just in a rut we're just",
    "start": "6392800",
    "end": "6398760"
  },
  {
    "text": "self-reinforcing and we have to get out of that rut but again like I said if you're already saying \"I know this i believe you i already use something",
    "start": "6398760",
    "end": "6405280"
  },
  {
    "text": "better i I've already used that whole right column.\" Then hopefully this talk will give you the basis for talking with somebody else who doesn't believe you",
    "start": "6405280",
    "end": "6411920"
  },
  {
    "text": "right talk about simplicity versus complexity right but it is a choice",
    "start": "6411920",
    "end": "6417440"
  },
  {
    "text": "right it requires constant vigilance we already saw the guard rails don't yield simplicity they don't really help us",
    "start": "6417440",
    "end": "6423040"
  },
  {
    "text": "here right it requires sensibilities and care your sensibilities about simplicity",
    "start": "6423040",
    "end": "6429440"
  },
  {
    "text": "being equal to ease of use are wrong they're just simply wrong right we",
    "start": "6429440",
    "end": "6434960"
  },
  {
    "text": "No I think the TLDDR of this talk is that he's coming from the Java era of OOP this is the counterargument to OOP",
    "start": "6434960",
    "end": "6441840"
  },
  {
    "text": "you don't need a labyrinth of classes just use data containers in a sensible amount yes I I think I think I",
    "start": "6441840",
    "end": "6447760"
  },
  {
    "text": "understand what you're saying a lot better if you if you say if you put if you color in that because I guess you're correct from like what 2008 to 2018 was",
    "start": "6447760",
    "end": "6458719"
  },
  {
    "text": "really the Java era of OOP i kind of feel like we've been on a downward trajectory from that era and perhaps",
    "start": "6458719",
    "end": "6465600"
  },
  {
    "text": "that's like perhaps I'm missing a bit of that kind of cultural and and closure is inherently JVM right closure is a",
    "start": "6465600",
    "end": "6472960"
  },
  {
    "text": "language that runs only in the JVM so therefore it makes probably a lot more",
    "start": "6472960",
    "end": "6480040"
  },
  {
    "text": "sense thinking about and or thinking about what he's saying from that oh dude",
    "start": "6480040",
    "end": "6485520"
  },
  {
    "text": "OP and Jojo ouch uh this past week I found two companies that use Java as their whole uh moment and I was Yeah",
    "start": "6485520",
    "end": "6492880"
  },
  {
    "text": "well I mean Netflix is almost exclusively Java on the back end so I mean Java is still very very popular and",
    "start": "6492880",
    "end": "6498960"
  },
  {
    "text": "new Java apparently is a lot lot better than old Java so I don't want I don't want to completely dunk on Java in any",
    "start": "6498960",
    "end": "6504719"
  },
  {
    "text": "sort of way i think there was a I think it's easier to dunk on the mentality that was there for a while java is",
    "start": "6504719",
    "end": "6512320"
  },
  {
    "text": "unbelievably popular it is it's It hurts me every time I find out how popular Java is and every time I do that it",
    "start": "6512320",
    "end": "6520400"
  },
  {
    "text": "makes me sad but then I realize it is what it is c# is better apparently everyone says C# is better you're not",
    "start": "6520400",
    "end": "6526880"
  },
  {
    "text": "the only person that says C# is genuinely better nothing's wrong with Java yeah the hard part so I have the",
    "start": "6526880",
    "end": "6532560"
  },
  {
    "text": "same argument that I make all the time which is often these tools there's nothing inherently wrong with them but",
    "start": "6532560",
    "end": "6537679"
  },
  {
    "text": "there's a culture around that tool that makes it really bad and so the hard part is if you have a tool that's used in a",
    "start": "6537679",
    "end": "6544320"
  },
  {
    "text": "specific way continuously it's really hard to disambiguate the difference between Java be bad",
    "start": "6544320",
    "end": "6551320"
  },
  {
    "text": "and pinnacle pinnacle pattern be bad which is very hard it's a very you know",
    "start": "6551320",
    "end": "6556880"
  },
  {
    "text": "like when they're so coupled together it's hard to see them as two separate things we saw the definitions of simple and easy they're completely different",
    "start": "6556880",
    "end": "6563800"
  },
  {
    "text": "things right so easy is not simple you have to start developing",
    "start": "6563800",
    "end": "6569119"
  },
  {
    "text": "sensibilities around entanglement that's what you have to just have to have entanglement is he talking about quantum",
    "start": "6569119",
    "end": "6574480"
  },
  {
    "text": "physics here ginger Bill can you please help me on this one ginger Bill I'm going to need Ginger Bill here right i'm",
    "start": "6574480",
    "end": "6579520"
  },
  {
    "text": "going to need Ginger Bill here immediately to give me a quick entanglement theory breakdown and some of the new stuff coming out radar right",
    "start": "6579520",
    "end": "6587119"
  },
  {
    "text": "right you want to look at some software and say ah you know not that I don't like the names you used or the shape of",
    "start": "6587119",
    "end": "6592480"
  },
  {
    "text": "the code or there was a semicolon i mean that's also important too but you want to start seeing complecting you want to",
    "start": "6592480",
    "end": "6598800"
  },
  {
    "text": "start seeing interconnections between things that could be independent um that's where you're going to get the most power um all the reliability tools",
    "start": "6598800",
    "end": "6606320"
  },
  {
    "text": "you have right since they're not about simplicity they're all secondary right they just do not touch",
    "start": "6606320",
    "end": "6614480"
  },
  {
    "text": "the core of the That's a pretty hot take testing refactoring and type systems are",
    "start": "6614480",
    "end": "6621119"
  },
  {
    "text": "quite peripheral to producing good software h this problem that's a hard one they're safety nets so are you a",
    "start": "6621119",
    "end": "6628719"
  },
  {
    "text": "closure dev yet janet janet janet janet i can feel my closuress coming together",
    "start": "6628719",
    "end": "6633920"
  },
  {
    "text": "he doesn't like stat he doesn't like static type shenanigans okay that makes sense it's a very I mean for me this is",
    "start": "6633920",
    "end": "6640239"
  },
  {
    "text": "kind of a hard one to argue with like TJ just you and I even with the the whole Moria and",
    "start": "6640239",
    "end": "6645960"
  },
  {
    "text": "Lua having a stronger type system I think would have helped me more and it's not that I I'm not dunking",
    "start": "6645960",
    "end": "6652960"
  },
  {
    "text": "against Lua lua is perfectly good for what Lua does but it also made some things hard but they're nothing more",
    "start": "6652960",
    "end": "6659360"
  },
  {
    "text": "than that you would have done better in Odin think I would have how do we make simplicity easy but I think the reason",
    "start": "6659360",
    "end": "6665520"
  },
  {
    "text": "why we didn't do uh Odin is that it would have just taken us a lot longer to get up and running so our zero to one would have been super slow but our one",
    "start": "6665520",
    "end": "6672080"
  },
  {
    "text": "to two could have been a lot faster so instead we chose a language that makes the zero to one super easy if that makes",
    "start": "6672080",
    "end": "6677440"
  },
  {
    "text": "sense yeah more types uh better and more protocols perfectly good you are good",
    "start": "6677440",
    "end": "6682719"
  },
  {
    "text": "right we're going to choose constructs with simpler",
    "start": "6682719",
    "end": "6687800"
  },
  {
    "text": "um artifacts right and avoid that to have complex artifacts it likely has a",
    "start": "6687800",
    "end": "6693920"
  },
  {
    "text": "lot artifacts it's not It likely has a lot of stuff out there that makes it really easy for LLMs to produce near good code",
    "start": "6693920",
    "end": "6700639"
  },
  {
    "text": "and it generally did like we we we figured that we would be able to write cursor rules for it to be able to follow",
    "start": "6700639",
    "end": "6705679"
  },
  {
    "text": "and do a good job with because it's a fairly well-known language like the",
    "start": "6705679",
    "end": "6711440"
  },
  {
    "text": "thing is is with Lua and Love 2D TJ and I did not have to we didn't get out of writing our own UI system so whether we",
    "start": "6711440",
    "end": "6718639"
  },
  {
    "text": "would have used Odin or Lua we would have written the same code it's not that it made our life any easier it's just",
    "start": "6718639",
    "end": "6724960"
  },
  {
    "text": "that there's we optimized for a different for something different not the authoring as soon as you get in an",
    "start": "6724960",
    "end": "6731199"
  },
  {
    "text": "argument with somebody about oh should we should be using whatever get that sorted out you know because however they",
    "start": "6731199",
    "end": "6737599"
  },
  {
    "text": "feel about the shape of the code they type in is independent from this and this is the thing you have to live with",
    "start": "6737599",
    "end": "6743920"
  },
  {
    "text": "um we're going to try to create abstractions that have simplicity as a basis right we're going to spend a",
    "start": "6743920",
    "end": "6749599"
  },
  {
    "text": "little time up front simplifying things uh before we get started and recognize",
    "start": "6749599",
    "end": "6756639"
  },
  {
    "text": "that when you simplify things you often end up with more things right simplicity",
    "start": "6756639",
    "end": "6761679"
  },
  {
    "text": "is not about counting right i'd have rather have more things hanging nice straight down not twisted together than",
    "start": "6761679",
    "end": "6770159"
  },
  {
    "text": "just a couple of things tied in a knot um and the beautiful thing about making them uh separate is you'll have a lot",
    "start": "6770159",
    "end": "6775840"
  },
  {
    "text": "more ability to change it which is where I think the benefits lie so um I think",
    "start": "6775840",
    "end": "6781360"
  },
  {
    "text": "this is a big deal and um I hope uh everybody's able to bring it into",
    "start": "6781360",
    "end": "6787440"
  },
  {
    "text": "practice or use this as a tool for uh convincing somebody else to do that so I'll leave you with this um this is what",
    "start": "6787440",
    "end": "6795119"
  },
  {
    "text": "you say when somebody um tries to sell you a sophisticated type system",
    "start": "6795119",
    "end": "6801360"
  },
  {
    "text": "wow that ending I did not see coming at all genuinely that ending was just just",
    "start": "6801360",
    "end": "6809960"
  },
  {
    "text": "just wild",
    "start": "6809960",
    "end": "6816560"
  },
  {
    "text": "uh shots fired on types maybe you know maybe there is something",
    "start": "6816679",
    "end": "6824360"
  },
  {
    "text": "about types not being as important if data is well defined but then I I still come back to the same thing which is how",
    "start": "6824360",
    "end": "6831199"
  },
  {
    "text": "do you define data well without types and so I kind of feel like there's a bit of a check my guess is it's because I am",
    "start": "6831199",
    "end": "6837679"
  },
  {
    "text": "a I am a closure I am a I'm closure ignorant and",
    "start": "6837679",
    "end": "6843040"
  },
  {
    "text": "by being closure ignorant I don't understand some of the arguments he's making i'm also hasll ignorant which",
    "start": "6843040",
    "end": "6848239"
  },
  {
    "text": "means that I have a bunch of I have a bunch of holes in some of his arguments that he's making because I don't",
    "start": "6848239",
    "end": "6853280"
  },
  {
    "text": "understand them oh closure has optional types now okay okay so he might have changed his mind for a little bit okay",
    "start": "6853280",
    "end": "6858480"
  },
  {
    "text": "good i because I I gen I genuinely think that types are they just m like I can",
    "start": "6858480",
    "end": "6866599"
  },
  {
    "text": "store what is available not in my eyes by reading the code or not in my brain",
    "start": "6866599",
    "end": "6873599"
  },
  {
    "text": "by reading the code and understanding how it's used i can store what is available by looking at a signature",
    "start": "6873599",
    "end": "6879599"
  },
  {
    "text": "which generally is a lot easier i think there's just more mental overhead in the dynamic world and it's not a there is",
    "start": "6879599",
    "end": "6887440"
  },
  {
    "text": "definitely a trade-off to be made i'm writing something right now in just JavaScript with no types not even using",
    "start": "6887440",
    "end": "6893840"
  },
  {
    "text": "type like type stuff at all just because I I have a few points that I have some type definitions and that's it and the",
    "start": "6893840",
    "end": "6899440"
  },
  {
    "text": "rest is just like I already know what I want moving really quickly whatever and it's been it's it's been great okay",
    "start": "6899440",
    "end": "6905199"
  },
  {
    "text": "Lithia thank you you hold on let's finish out hey friends play videos till the end okay friends play videos till",
    "start": "6905199",
    "end": "6912639"
  },
  {
    "text": "the end and you should know that by now that was an amazing talk so Strange Loop is no longer is that is that what we are",
    "start": "6912639",
    "end": "6920239"
  },
  {
    "text": "hearing strange loop is not a thing anymore uh is that is that what we are hearing by the way thank you Lithium for",
    "start": "6920239",
    "end": "6926159"
  },
  {
    "text": "the 20 gifted subs the this conference kept stating uh simplicity is the absence of complexity opposite when uh",
    "start": "6926159",
    "end": "6933599"
  },
  {
    "text": "when the emergent property of wellorganized structured complexity i'm not sure what that dude I I honestly I",
    "start": "6933599",
    "end": "6939760"
  },
  {
    "text": "can't really understand what you're mean i I'm still trying to understand why Jesus is making an appearance in this i",
    "start": "6939760",
    "end": "6944960"
  },
  {
    "text": "can't tell if at first I thought you actually meant like Jesus was the appearance of wellorganized structure complexity then I was like no that's",
    "start": "6944960",
    "end": "6951360"
  },
  {
    "text": "he's cursing with it i don't understand what the purpose the sentence is actually too hard no you hold on to those never let go Rose I won't i was",
    "start": "6951360",
    "end": "6958080"
  },
  {
    "text": "very confused by that statement don't forget the meeting in five exactly that's why I'm ending the thing that's why we're ending it jesus saves us uh",
    "start": "6958080",
    "end": "6964560"
  },
  {
    "text": "from organized uh structure exactly boom anyways oh no it was it was genuinely",
    "start": "6964560",
    "end": "6971199"
  },
  {
    "text": "that was an exceptional talk and I'm super happy that I finally made time to listen to it i know it's 14 years old",
    "start": "6971199",
    "end": "6977520"
  },
  {
    "text": "and it's from a bygone era about a bygone like probably thought in time but",
    "start": "6977520",
    "end": "6983040"
  },
  {
    "text": "it was still fantastic and I think the real thing to drive home is just that intertwining always asking yourself why",
    "start": "6983040",
    "end": "6990239"
  },
  {
    "text": "are these two things intertwined and should they be can you add is there a",
    "start": "6990239",
    "end": "6995920"
  },
  {
    "text": "reason to have a space betw twix them right i think that would be a lot it's a very good question to ask and if if you",
    "start": "6995920",
    "end": "7003360"
  },
  {
    "text": "took away nothing from the talk to me that is the capstone takeaway which is",
    "start": "7003360",
    "end": "7008639"
  },
  {
    "text": "always ask about intertwining anyways that was great",
    "start": "7008639",
    "end": "7017638"
  },
  {
    "text": "the name is the betixen",
    "start": "7018320",
    "end": "7022719"
  }
]