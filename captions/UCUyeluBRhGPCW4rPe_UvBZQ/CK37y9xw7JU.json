[
  {
    "text": "all right some things happened last week I don't know if you were privy to what happened but at some point at up this",
    "start": "40",
    "end": "5520"
  },
  {
    "text": "giant tweet train things were going on okay people were saying live views great Brian Florence was saying I don't really",
    "start": "5520",
    "end": "12599"
  },
  {
    "text": "like that and then it went on for like a really long time even Ryan Winchester got in on this one everybody was",
    "start": "12599",
    "end": "19080"
  },
  {
    "text": "flopping on and flying and even Jose got in uh to all of this and it's a very",
    "start": "19080",
    "end": "24199"
  },
  {
    "text": "very long tweet threats we're going to go through that because then afterwards Jose the creator of elixair",
    "start": "24199",
    "end": "30480"
  },
  {
    "text": "comes in and actually does a whole bit and writes a whole article so I think we kind of need okay we can't use we can't",
    "start": "30480",
    "end": "35600"
  },
  {
    "text": "do that we're just going with this so we kind of have we're going to have to set a little bit of the context and then we're going to go okay so we're just",
    "start": "35600",
    "end": "41120"
  },
  {
    "text": "going to go right up on tippity top all right on the tippity tippity top of several tweets uh remix tagline is build",
    "start": "41120",
    "end": "49000"
  },
  {
    "text": "better websites but this last week's discourse shows that almost none of you actually care if your work is garbage o",
    "start": "49000",
    "end": "55520"
  },
  {
    "text": "dang that's crazy that's crazy take Ryan as long as it it got a couple guys Lambos and you get a paycheck my",
    "start": "55520",
    "end": "61879"
  },
  {
    "text": "motivation is lower than ever web sucks and you're proud of it okay okay I mean I I I think you should want to build",
    "start": "61879",
    "end": "68080"
  },
  {
    "text": "good websites I don't think you have to use remix to build good websites there's great HDMX websites out there that have all the interaction sometimes I feel",
    "start": "68080",
    "end": "74360"
  },
  {
    "text": "like the the general discourse of the web is you you show a website that doesn't do something right and then your",
    "start": "74360",
    "end": "81079"
  },
  {
    "text": "inverse is to say see I told you this framework sucks and maybe just maybe for",
    "start": "81079",
    "end": "87439"
  },
  {
    "text": "a second we could like invert this whole argument and say hey maybe you got a bit of skill issues you know what I mean",
    "start": "87439",
    "end": "93320"
  },
  {
    "text": "maybe you got a bit of skill issues or two maybe the person just didn't you know didn't want to try you know what I",
    "start": "93320",
    "end": "98640"
  },
  {
    "text": "mean all right live view love is part of this it can break through this its ceiling uh I can break any live view app",
    "start": "98640",
    "end": "104119"
  },
  {
    "text": "in seconds I don't know how true this is and it totally depends on how much they",
    "start": "104119",
    "end": "110360"
  },
  {
    "text": "attempt to hook into the hooks I don't know what live view offers but htx offers everything you effectively need so like say on a uh if you if you go and",
    "start": "110360",
    "end": "118439"
  },
  {
    "text": "request you can actually put in like a nice throbber so you know like how a couple weeks ago everyone was freaking out about uh hot wire where you'd press",
    "start": "118439",
    "end": "125439"
  },
  {
    "text": "an event and just you get a thin box and nothing would happen and then like two seconds later it pop in with all the data like in any of these Frameworks you",
    "start": "125439",
    "end": "132400"
  },
  {
    "text": "can just put like a throbber in there you can get us SVG throbber as a loading State and just have that throb and then",
    "start": "132400",
    "end": "138560"
  },
  {
    "text": "after it throbs it goes and and does some good stuck uh busted it uh using",
    "start": "138560",
    "end": "143599"
  },
  {
    "text": "the back button so then someone says here you go good luck one moment later busted it using the back button uh if I",
    "start": "143599",
    "end": "149959"
  },
  {
    "text": "can find the root cause but it looks like it just got some instructions to change the node that no longer existed",
    "start": "149959",
    "end": "155200"
  },
  {
    "text": "all right got owned got owned and it keeps on going blah blah so you can see tensions are building people are getting",
    "start": "155200",
    "end": "160920"
  },
  {
    "text": "angry okay people be getting angry then it goes on and these two are arguing over here and then Ryan Winchester goes",
    "start": "160920",
    "end": "168360"
  },
  {
    "text": "on and and broke the app in seconds and people getting angry so I'm not going to go through all of that anyways we'll go",
    "start": "168360",
    "end": "173920"
  },
  {
    "text": "to this one dug in deeper I have no idea let's see I let's see had no idea anything was dragable and I didn't have",
    "start": "173920",
    "end": "179159"
  },
  {
    "text": "any MP p3s on my computer to upload before notice it uses sortable JS to drag and drop this means the UI state is",
    "start": "179159",
    "end": "185319"
  },
  {
    "text": "driven by the Dom manipulation outside of live view somebody sent me uh a trellix dumb mini Trello that drove the",
    "start": "185319",
    "end": "191879"
  },
  {
    "text": "UI through a websocket drag and drop and it was super janky since livebe use is sortable and SNS in the background it",
    "start": "191879",
    "end": "197640"
  },
  {
    "text": "avoids Jank I'd be calling this bailing on live views model though so I would actually not be calling this bailing on",
    "start": "197640",
    "end": "202760"
  },
  {
    "text": "live views model I think this is exactly what you do this is like the perfect reason why we give you these controls is",
    "start": "202760",
    "end": "208040"
  },
  {
    "text": "that on any of these server driven framewor works at some point you need a little bit of client side like updating",
    "start": "208040",
    "end": "213439"
  },
  {
    "text": "to make it nice so dragging and dropping is a perfect example it's on hmx website as well you know perfect example of like",
    "start": "213439",
    "end": "218920"
  },
  {
    "text": "when you want to break into client side Behavior this is the ceiling I'm talking about I think this is an artificial ceiling that you've made up that's like",
    "start": "218920",
    "end": "225519"
  },
  {
    "text": "saying I mean that's like saying that you can only program things in react you",
    "start": "225519",
    "end": "230760"
  },
  {
    "text": "cannot do anything outside of that for remix any any logic existing outside of",
    "start": "230760",
    "end": "236079"
  },
  {
    "text": "a react component is breaking its ceiling and that would be kind of like",
    "start": "236079",
    "end": "241480"
  },
  {
    "text": "that'd be kind of nutty that would be a inappropriate usage of a ceiling so I don't want to see that right I I",
    "start": "241480",
    "end": "248360"
  },
  {
    "text": "wouldn't I would I would consider that like just a bad argument um do you think HML in the entire web ecosystem that",
    "start": "248360",
    "end": "253959"
  },
  {
    "text": "exists will go out of date I don't know I don't think anything new will come and replace it right and so I think making",
    "start": "253959",
    "end": "260040"
  },
  {
    "text": "this argument is just like it's a fundamentally bad argument um when live view stops becoming the source of Truth",
    "start": "260040",
    "end": "265160"
  },
  {
    "text": "you lose composition with the rest of the system it's difficult to compose and synchronize other random Dom live libraries with each other the UI and",
    "start": "265160",
    "end": "271600"
  },
  {
    "text": "server State it's difficult to do that in react too it's difficult to do that in anything anytime because I mean the entirety of a react application is",
    "start": "271600",
    "end": "279600"
  },
  {
    "text": "attempting to uh have a client side cache in which you're syncing with the server that's why this happens all the time you see it all the time you refresh",
    "start": "279600",
    "end": "285919"
  },
  {
    "text": "a page and all a sudden things change why is that because they're not synced with the server uh I'm sure you view it differently these have uh that these",
    "start": "285919",
    "end": "292240"
  },
  {
    "text": "Mount hooks uh to go do any adal manipulation you want is a feature not a ceiling it is a feature it is the point",
    "start": "292240",
    "end": "298639"
  },
  {
    "text": "uh but if any web app can just go write a bunch of do manipulations then I guess expressjs has no front end uh ceiling",
    "start": "298639",
    "end": "304759"
  },
  {
    "text": "either and the concept loses all meaning no I just think it's a weak I think you're just defining it incorrectly uh",
    "start": "304759",
    "end": "310160"
  },
  {
    "text": "to me the ceiling uh is anytime you stop using live view to drive UI updates and to do something else I still think it's",
    "start": "310160",
    "end": "315479"
  },
  {
    "text": "just a bad definition uh this app has a great job avoiding Network latency in favor of separate abstractions to drive",
    "start": "315479",
    "end": "320680"
  },
  {
    "text": "those Dom updates so I can't find any Jank yeah uh I didn't say i' let's see I didn't say I'd find Jen though I said",
    "start": "320680",
    "end": "326280"
  },
  {
    "text": "I'd break it and I did I'm actually super happy with how much y all care about getting rid of Jen 2 the only difference here I suspect is that I view",
    "start": "326280",
    "end": "333400"
  },
  {
    "text": "using something like sortable JS instead of something built in Livewire is a ceiling I know but okay so let me invert",
    "start": "333400",
    "end": "338759"
  },
  {
    "text": "this one for you so does that mean anytime you have a library that's made outside of react and then you have some",
    "start": "338759",
    "end": "344759"
  },
  {
    "text": "sort of react shim to make it work with react would that also be bad so is charts JS bad because it's not actually",
    "start": "344759",
    "end": "351720"
  },
  {
    "text": "reactjs it's actually just an integration with something that manipulates the Dom which is actually",
    "start": "351720",
    "end": "356800"
  },
  {
    "text": "what people do so is that a ceiling of react do you you have to build everything in react for it to be react",
    "start": "356800",
    "end": "362759"
  },
  {
    "text": "only like I just think that it's a I think it's a fundamentally poor uh argument right because there's plenty of",
    "start": "362759",
    "end": "369240"
  },
  {
    "text": "there's plenty of JavaScript libraries that interact with uh react and we just",
    "start": "369240",
    "end": "375000"
  },
  {
    "text": "call that okay because there because it has the word react Dash so if you had live view Dash in which you didn't",
    "start": "375000",
    "end": "381720"
  },
  {
    "text": "really notice it went to the Dom does that make it now part of live view I don't I I I just think that that's it's",
    "start": "381720",
    "end": "388039"
  },
  {
    "text": "just it's just a it just feels weak to me that's all it's just not a good argument okay so now that we know that",
    "start": "388039",
    "end": "393800"
  },
  {
    "text": "now let's let's back it up we've heard the arguments let's go and read this thing now all right the web apps have",
    "start": "393800",
    "end": "400199"
  },
  {
    "text": "client and server State plus real-time live view so this is from Jose creator of Elixir elixair now that we got the",
    "start": "400199",
    "end": "406560"
  },
  {
    "text": "context we kind of generally know what was going on we didn't read all the tweets because there's a lot of",
    "start": "406560",
    "end": "412080"
  },
  {
    "text": "like and I didn't want to talk about those ones uh recent discussions around client side and server side Frameworks",
    "start": "412080",
    "end": "417960"
  },
  {
    "text": "have brought up some misconceptions about State handling and web applications this article aims to address them with some examples and go",
    "start": "417960",
    "end": "424080"
  },
  {
    "text": "in a bit more detail how live VI in particularly in particular deals with state in real time you know I always",
    "start": "424080",
    "end": "429879"
  },
  {
    "text": "feel like live view is my ultimate end like I know it's going to happen maybe at some point but I first have to learn",
    "start": "429879",
    "end": "436000"
  },
  {
    "text": "elixair and then like that's it's going to H I just feel like at some point it has to happen is that everybody's",
    "start": "436000",
    "end": "441840"
  },
  {
    "text": "eventual end state is live VI or LEL I feel like it's live view or LEL like",
    "start": "441840",
    "end": "447479"
  },
  {
    "text": "that's just what ends up happening all devs slowly slide towards it and you can't help it elix A for the win yeah",
    "start": "447479",
    "end": "454160"
  },
  {
    "text": "most web applications have a state on the server in the shape of a database at least if we assume a web application is",
    "start": "454160",
    "end": "459919"
  },
  {
    "text": "that is not sending updates to the client as they happen as soon as you render the page in the browser the page you are seeing may be out of date fair",
    "start": "459919",
    "end": "466639"
  },
  {
    "text": "and factual some uh someone may have added a new comment to the blog post or even the author has updated it with an",
    "start": "466639",
    "end": "472879"
  },
  {
    "text": "Etta uh many times telling the user to refresh the page to get the latest version is fine other times you may want",
    "start": "472879",
    "end": "478360"
  },
  {
    "text": "to update the page in the web in real time yeah I think a Twitter has like a little like hey there's x amount of new tweets do you want to see them for",
    "start": "478360",
    "end": "484680"
  },
  {
    "text": "example if you have an application called hot sales which sells a limited amount of items with discount prices",
    "start": "484680",
    "end": "490199"
  },
  {
    "text": "every hour you probably want to update the availability of the items as they change fair and factual uh even then it",
    "start": "490199",
    "end": "496879"
  },
  {
    "text": "is still important to understand that client information is always out of date even if the user got a server update",
    "start": "496879",
    "end": "502080"
  },
  {
    "text": "saying that a few items are available and the user immediately clicks on buy there is no guarantee this was successful without acknowledgement from",
    "start": "502080",
    "end": "508440"
  },
  {
    "text": "the server okay everyone gets the idea I assume this is pretty simple this is pretty simple straightforward stuff uh",
    "start": "508440",
    "end": "514120"
  },
  {
    "text": "this has an implication on both client and server code regardless if client side or server side for example if you",
    "start": "514120",
    "end": "519279"
  },
  {
    "text": "decide to add optimistic UI updates to this experience you probably don't want to say you bought it while you wait for",
    "start": "519279",
    "end": "525519"
  },
  {
    "text": "the server telling a user they bought something and then soon after tell them that they actually did not could be",
    "start": "525519",
    "end": "530959"
  },
  {
    "text": "quite frustrating instead your optimistic UI should stick with something more neutral such as we are reserving your product okay okay it's",
    "start": "530959",
    "end": "538399"
  },
  {
    "text": "almost as if with server or client side Frameworks you have to have client side state that's separate from the server",
    "start": "538399",
    "end": "544600"
  },
  {
    "text": "and there's no way around it huh it's almost like if you had a framework that drives everything from the source of",
    "start": "544600",
    "end": "550279"
  },
  {
    "text": "Truth and then gives you hooks into the client to ensure that you can have this client side state that sounds fairly",
    "start": "550279",
    "end": "555680"
  },
  {
    "text": "ideal I don't know the hot sales web application also requires uh Care on the server and database sides since most web",
    "start": "555680",
    "end": "562399"
  },
  {
    "text": "applications have multiple servers talking to a single database you may have data races for example if you write",
    "start": "562399",
    "end": "567800"
  },
  {
    "text": "this pseudo code on the server if product available product sold to product user it may happen that between",
    "start": "567800",
    "end": "574000"
  },
  {
    "text": "checking the product is available and selling it it may have already sold out you need to use Atomic operations transactions with isolation levels and",
    "start": "574000",
    "end": "580519"
  },
  {
    "text": "similar to tackle these problems correctly yeah sucky problems transaction that one while not all",
    "start": "580519",
    "end": "586399"
  },
  {
    "text": "problems are this complex thankfully there is still a lot let's see there is a lot we could discuss and there isn't",
    "start": "586399",
    "end": "592640"
  },
  {
    "text": "one siiz fits-all solution the important to keep in mind for now is that if you have data in the web application that",
    "start": "592640",
    "end": "598920"
  },
  {
    "text": "you can read and update by different actors you need to consider the data/ page in the client before uh maybe out",
    "start": "598920",
    "end": "604800"
  },
  {
    "text": "of date okay yes we all agree with all the state right no nothing here is",
    "start": "604800",
    "end": "610839"
  },
  {
    "text": "unusual so far we talked about client state from the point of view uh of being out of date compared to the server",
    "start": "610839",
    "end": "616120"
  },
  {
    "text": "however the majority of web applications also have its own client side State uh even if they don't include a single line of JavaScript so for me the client side",
    "start": "616120",
    "end": "623079"
  },
  {
    "text": "data or the client side state is where most where I find most difficulty to exist and it's not because UI",
    "start": "623079",
    "end": "629720"
  },
  {
    "text": "programming is hard but it's because you have to have a c you have to have a client side cache that can sync and like",
    "start": "629720",
    "end": "636720"
  },
  {
    "text": "understand the server and remain in sync with the server and then update the client side experience I find that to always be a huge source of bugs and so",
    "start": "636720",
    "end": "644320"
  },
  {
    "text": "the larger that cash is the heart of the you know mo cash Mo Problems is how I",
    "start": "644320",
    "end": "649760"
  },
  {
    "text": "generally think about it because the I mean the sooner you can get to like just the source of Truth you just have less",
    "start": "649760",
    "end": "655279"
  },
  {
    "text": "problems right this problem hasn't changed since the late 90s it really has not changed since the internet was invented or it really hasn't changed",
    "start": "655279",
    "end": "661920"
  },
  {
    "text": "since even just computers requesting resources have changed boo you boo yourself Oren buffering and so it's like",
    "start": "661920",
    "end": "669079"
  },
  {
    "text": "it does any of that stuff change no it hasn't the simplest client State uh we can think about is in the form of inputs",
    "start": "669079",
    "end": "674600"
  },
  {
    "text": "imagine you wrote a blog post and now you want to edit it as soon as you change any character in the post you have uh state in the client that has",
    "start": "674600",
    "end": "681040"
  },
  {
    "text": "never been SE uh that has never been seen before by the server and once again depending on the application you may",
    "start": "681040",
    "end": "686160"
  },
  {
    "text": "want to carefully consider the implications of clients side State uh regardless if you're using a client side or server side framework for example it",
    "start": "686160",
    "end": "692680"
  },
  {
    "text": "could be a disaster if two people are editing the same blog post at the same time and then changes of one of them end up immediately erasing the others to",
    "start": "692680",
    "end": "699720"
  },
  {
    "text": "deal with this you have to implement git by the way so to deal with this you're just going to have to Simply have a uh a",
    "start": "699720",
    "end": "705800"
  },
  {
    "text": "a a add delete modified algorithm added I'd suggest the ort strategy leads to",
    "start": "705800",
    "end": "711040"
  },
  {
    "text": "less recursive conflicts and then on top of that when a merge conflict happens you make somebody solve it with a bunch",
    "start": "711040",
    "end": "717079"
  },
  {
    "text": "of dashes isn't that fun isn't that wouldn't that be just a good time web dev is so much fun dude it just",
    "start": "717079",
    "end": "723519"
  },
  {
    "text": "makes me happy isn't it it just makes me happy um when you uh open up a post for",
    "start": "723519",
    "end": "729519"
  },
  {
    "text": "addition you include a version in the form when the form is submitted you check the version is still the same if so you proceed if not you tell the user",
    "start": "729519",
    "end": "736040"
  },
  {
    "text": "they were uh not working on the latest version as done by git uhoh get",
    "start": "736040",
    "end": "741160"
  },
  {
    "text": "mentioned I told you I could see into the future here we go or strategy if possible you can detect in real time",
    "start": "741160",
    "end": "747040"
  },
  {
    "text": "someone else is editing the page which would be trivial pH Phoenix with multi-party uh presence mechanism then",
    "start": "747040",
    "end": "752399"
  },
  {
    "text": "you can let the user know about the potential conflicts quite early on once again there's a lot to explore here for",
    "start": "752399",
    "end": "758240"
  },
  {
    "text": "text editing you could use a collaborative editors or explore local first principles oh my gosh Warren",
    "start": "758240",
    "end": "764519"
  },
  {
    "text": "buffering did you hear that he's getting better at reading it does I didn't hear a lot of stutter shut up pick Ward",
    "start": "764519",
    "end": "770680"
  },
  {
    "text": "buffering did you see that local first W buffering local",
    "start": "770680",
    "end": "775720"
  },
  {
    "text": "first uh try let's see trying to explain a three-way merge to an end user would be the first step in my",
    "start": "775720",
    "end": "782760"
  },
  {
    "text": "retirement it's fair the over idea the overall idea is that clients have their",
    "start": "782760",
    "end": "788120"
  },
  {
    "text": "own state for offline apps this state changes even when disconnected and at some point the state needs to be",
    "start": "788120",
    "end": "793760"
  },
  {
    "text": "synchronized with the server or other clients to the server it doesn't really matter if the state is a consequence of",
    "start": "793760",
    "end": "799680"
  },
  {
    "text": "typing into an input or dragging and dropping an item fair fair and factual",
    "start": "799680",
    "end": "805160"
  },
  {
    "text": "uh enter real time given that web applications have both client and server stage client side and server side",
    "start": "805160",
    "end": "810360"
  },
  {
    "text": "Frameworks need to deal with both state is intrinsic part of the problem therefore it must be intrinsic part of",
    "start": "810360",
    "end": "815880"
  },
  {
    "text": "the solution ignoring how State changes on the server or ignoring how State changes on the client will lead to poor user experiences restricting a stack",
    "start": "815880",
    "end": "822600"
  },
  {
    "text": "from leveraging any of these states would be an artificial limitation that does not benefit anyone who wants to write production applications it's also",
    "start": "822600",
    "end": "829800"
  },
  {
    "text": "worth saying that even if you share programming languages between client and server code such as JavaScript closure",
    "start": "829800",
    "end": "835759"
  },
  {
    "text": "gleam Etc which is definitely a plus often are working on fundamentally different problems a client needs to",
    "start": "835759",
    "end": "842720"
  },
  {
    "text": "concern itself with the da manipulation syncing the latest state from the server Etc while the server needs to reconcile",
    "start": "842720",
    "end": "848120"
  },
  {
    "text": "changes from multiple clients perform authorization guarantee data consistency at the database level and more with this",
    "start": "848120",
    "end": "854720"
  },
  {
    "text": "in mind let's talk about real time for Simplicity sorry there's not like I you know like I I all these things are you",
    "start": "854720",
    "end": "861120"
  },
  {
    "text": "know the the only thing you could really take from this these statements so far",
    "start": "861120",
    "end": "866160"
  },
  {
    "text": "is that the obvious problem is that we have we have a definition problem and that's really the problem that we were talking about with Ryan Florence uh",
    "start": "866160",
    "end": "872240"
  },
  {
    "text": "talking about the ceiling and saying hey if you use live view other if you're doing anything other than live view this",
    "start": "872240",
    "end": "877600"
  },
  {
    "text": "is a problem which is also funny because they call react a library so if your application can only use react to drive",
    "start": "877600",
    "end": "883040"
  },
  {
    "text": "any sort of updates is it a library or is it a framework is a library or is a framework it's obviously at that point",
    "start": "883040",
    "end": "889600"
  },
  {
    "text": "most certainly becomes a framework most certainly uh but more so I do actually",
    "start": "889600",
    "end": "895600"
  },
  {
    "text": "like this one thing that kind of was pulled out right here that kind of a miss right here with which is that programming languages actually share",
    "start": "895600",
    "end": "902120"
  },
  {
    "text": "they can share domains meaning that you can what you could what you could program and say gleam you could program",
    "start": "902120",
    "end": "907639"
  },
  {
    "text": "in JavaScript the solution may look differently blah blah blah blah but the point of using one language over the",
    "start": "907639",
    "end": "913079"
  },
  {
    "text": "other is that a lot of these languages are designed to solve a specific problem and so that means you could actually get",
    "start": "913079",
    "end": "919279"
  },
  {
    "text": "a significant kind of level up by changing the language you use all the time you know just little fun little side fact all right now let's talk about",
    "start": "919279",
    "end": "926880"
  },
  {
    "text": "real time for Simplicity let's consider a real time web application to be one that where the server sends updates to",
    "start": "926880",
    "end": "932600"
  },
  {
    "text": "the client at will and those updates happen on the server with reasonable amount of time a few seconds but not minutes okay near real time near real",
    "start": "932600",
    "end": "939720"
  },
  {
    "text": "time uh not all features in an application need to be real time for the purpose of this discussion let's go back",
    "start": "939720",
    "end": "945120"
  },
  {
    "text": "to the blog post editor example using a collaborative editor would be a fantastic feature to add and improve user experience changes across the users",
    "start": "945120",
    "end": "951639"
  },
  {
    "text": "are now automatically synchronized however what happens if two users also change the category of the blog post",
    "start": "951639",
    "end": "957759"
  },
  {
    "text": "while editing merch conflict so much merge conflicting your",
    "start": "957759",
    "end": "963600"
  },
  {
    "text": "application likely uses a select or drop down to choose categories while while you could automatically synchronize",
    "start": "963600",
    "end": "969519"
  },
  {
    "text": "changes to the drop down across users is that the best user experience how would the user feel if they see the value of a",
    "start": "969519",
    "end": "975800"
  },
  {
    "text": "drop down changing out of nowhere with no explanation yeah I mean this is why real",
    "start": "975800",
    "end": "981600"
  },
  {
    "text": "time and collaborative oh my goodness you scared me thank you for the bacon that was very lovely of you she just she",
    "start": "981600",
    "end": "987360"
  },
  {
    "text": "like came in so stealthily so quiet then gave me",
    "start": "987360",
    "end": "994120"
  },
  {
    "text": "bacon it's a lovely part of the YouTube video thank you wife aen she's lovely she's great flip keep this in flip zoom",
    "start": "994120",
    "end": "1002000"
  },
  {
    "text": "in flip rotate It Go BR this part's kind of interesting I mean it's one of the",
    "start": "1002000",
    "end": "1007160"
  },
  {
    "text": "hard Parts about any sort of real-time collaborative uh you know applications there's certain things that",
    "start": "1007160",
    "end": "1013160"
  },
  {
    "text": "you just can't really change in real time with any sort of explanation I mean if you had like you know Google Docs and",
    "start": "1013160",
    "end": "1018240"
  },
  {
    "text": "you could see Aur are throbbing and then Tech starts happening like it makes sense but if just drop down start",
    "start": "1018240",
    "end": "1024160"
  },
  {
    "text": "changing that could feel a little bit weird what happens if they both change the drop down at the same time what happens if a user changes it while the",
    "start": "1024160",
    "end": "1029678"
  },
  {
    "text": "other has the drop down open a possible solution is to show a message or an indicator that the data has been changed",
    "start": "1029679",
    "end": "1035240"
  },
  {
    "text": "by someone else until these changes are effectively published it is a simple user interaction solution or interface",
    "start": "1035240",
    "end": "1041160"
  },
  {
    "text": "solution for a problem with technical Roots so the let see the point I want to drive here is that the real time does",
    "start": "1041160",
    "end": "1046438"
  },
  {
    "text": "not necessarily mean override the client with the latest version it does not matter if the server is sending updates",
    "start": "1046439",
    "end": "1052880"
  },
  {
    "text": "to the client in the shape of data as the client side Frameworks typically do or as chunks of HTML as the server side",
    "start": "1052880",
    "end": "1058400"
  },
  {
    "text": "framewor Frameworks typically do you need to consider how real-time updates are shown to the client fair and either",
    "start": "1058400",
    "end": "1065120"
  },
  {
    "text": "side so this is actually a really good point whether you're doing either side it does not matter this is like I actually really like this argument so",
    "start": "1065120",
    "end": "1070880"
  },
  {
    "text": "far this argument is actually really good which is there just comes points in the application that are irrelevant to",
    "start": "1070880",
    "end": "1077440"
  },
  {
    "text": "whether you're using client side or server side it's actually a fundamentally different problem which is what makes somebody confused so how do",
    "start": "1077440",
    "end": "1084520"
  },
  {
    "text": "you reconcile this if you have a push update or a server side event into your",
    "start": "1084520",
    "end": "1089559"
  },
  {
    "text": "react application or a websocket that something has changed you can't just update you actually literally have the",
    "start": "1089559",
    "end": "1095799"
  },
  {
    "text": "same problem hello live view is a framework for writing Rich real time and interactive applications with server",
    "start": "1095799",
    "end": "1101080"
  },
  {
    "text": "rendered HTML written in elixair man Elixir mentioned you know",
    "start": "1101080",
    "end": "1107360"
  },
  {
    "text": "somehow somehow it always ends with Brazil what's going on Brazil why do all roads lead to Brazil",
    "start": "1107360",
    "end": "1116159"
  },
  {
    "text": "okay somehow I'm programming Lua in Vim somehow every time anything cool happens",
    "start": "1116159",
    "end": "1122760"
  },
  {
    "text": "it's elixair what's going on why Brazil mentioned Brazil has been officially mentioned they're playing the long game",
    "start": "1122760",
    "end": "1129520"
  },
  {
    "text": "they have been playing the long game gleam for the win I don't know I don't know gleam or Elixir well enough to have",
    "start": "1129520",
    "end": "1135960"
  },
  {
    "text": "a strong opinion but every time I hear someone talk about Elixir they talk about how easy it is even TJ with all of his o",
    "start": "1135960",
    "end": "1143120"
  },
  {
    "text": "celess he sent me a whisper not too long ago and I swear it's it was something along the lines of I tried Elixir and",
    "start": "1143120",
    "end": "1149480"
  },
  {
    "text": "got something done really fast and then it was I think there was like almost a hint of",
    "start": "1149480",
    "end": "1155600"
  },
  {
    "text": "disappointment in TJ that he kind of wished there would have been a little bit more docs reading and and being a",
    "start": "1155600",
    "end": "1163080"
  },
  {
    "text": "bit more pedantic about the problem cuz it just got solved and he didn't know what to do with it you know he was like",
    "start": "1163080",
    "end": "1168799"
  },
  {
    "text": "a little bit like I you could almost see that he was a little annoyed with the fact that he just solved a problem really quickly and he's just",
    "start": "1168799",
    "end": "1175679"
  },
  {
    "text": "like how am I supp how am I supposed to read the friendly manual when I just solve these problems",
    "start": "1175679",
    "end": "1183280"
  },
  {
    "text": "chat how'd I do was that a good one to be fair he had live docs with Ryan W yeah he did I love Elixir yeah I don't",
    "start": "1183280",
    "end": "1191400"
  },
  {
    "text": "know Elixir is actually a very interesting language one of these days we'll do it uh since live view runs on the server it naturally addresses server",
    "start": "1191400",
    "end": "1197720"
  },
  {
    "text": "State and stays close to the database but it also has abstraction for dealing with client uh it is a must with an",
    "start": "1197720",
    "end": "1203760"
  },
  {
    "text": "understanding of these Concepts we can now discuss some of the implementation details within live view we have just",
    "start": "1203760",
    "end": "1208960"
  },
  {
    "text": "discussed uh we have just discussed that real-time applications need to consider how updates are shown to the client",
    "start": "1208960",
    "end": "1214120"
  },
  {
    "text": "because live view by the way you never I I don't think you have to do that in a good blog post you should you don't need to do that kind of transition you can",
    "start": "1214120",
    "end": "1220720"
  },
  {
    "text": "just go right in you can just go right into it uh live view keeps an open you know because live view keeps an open",
    "start": "1220720",
    "end": "1226520"
  },
  {
    "text": "websocket long pole connection between client server live view is aware of and controls what the client has rendered",
    "start": "1226520",
    "end": "1232400"
  },
  {
    "text": "and therefore developers can decide how real-time updates are propagated and rendered within live view itself and in",
    "start": "1232400",
    "end": "1238240"
  },
  {
    "text": "most case or in most cases live view also does a lot of work behind the scenes to guarantee those updates are",
    "start": "1238240",
    "end": "1244440"
  },
  {
    "text": "cheap and performant without a persistent connection resolving real-time updates on the CL a server",
    "start": "1244440",
    "end": "1249760"
  },
  {
    "text": "becomes riskier because it increases the chance you'll overlap with something the client is doing or seeing however we",
    "start": "1249760",
    "end": "1255720"
  },
  {
    "text": "have just talked about how applications have client and server state if uh there is client State how can a live view",
    "start": "1255720",
    "end": "1262039"
  },
  {
    "text": "manage real-time updates in such cases because the state is in the client the",
    "start": "1262039",
    "end": "1267080"
  },
  {
    "text": "state is in the client the state is in the client we must resolve it on the client for Such live view provides a",
    "start": "1267080",
    "end": "1273720"
  },
  {
    "text": "client side mechanism called hooks which integrate into the live view life cycle with the Dom allowing developers to",
    "start": "1273720",
    "end": "1279640"
  },
  {
    "text": "react to connections disconnections and updates in whatever way they prefer and live view team has mentioned as part of",
    "start": "1279640",
    "end": "1285320"
  },
  {
    "text": "their 10 RC announcement that integration with components is on the road map too this is actually really",
    "start": "1285320",
    "end": "1290799"
  },
  {
    "text": "cool I know web components get a really bad rap who here type one in the chat if you love web",
    "start": "1290799",
    "end": "1297640"
  },
  {
    "text": "components yeah ain't nobody's going to type one there's very few",
    "start": "1297640",
    "end": "1303200"
  },
  {
    "text": "ones how about this one type 69 in the chat if you dislike or hate web",
    "start": "1303200",
    "end": "1311200"
  },
  {
    "text": "components tends to be a lot more people getting feeling a little bit feeling a",
    "start": "1311200",
    "end": "1316240"
  },
  {
    "text": "little bit stronger I will say one thing about web components that's really nice when you write a web component and it",
    "start": "1316240",
    "end": "1323039"
  },
  {
    "text": "works the web component works at infinum you write it",
    "start": "1323039",
    "end": "1328760"
  },
  {
    "text": "once and you literally never have to think about that web component again it will work in 5 years from now it will",
    "start": "1328760",
    "end": "1335840"
  },
  {
    "text": "work in 10 years from now it just works forever and so that is",
    "start": "1335840",
    "end": "1342559"
  },
  {
    "text": "something that's really nice about them yeah they're like a little cumbersome to work with so I'm not like I don't love",
    "start": "1342559",
    "end": "1347760"
  },
  {
    "text": "how they feel but I do love the outcome once you write",
    "start": "1347760",
    "end": "1353240"
  },
  {
    "text": "one you can literally take that web component and just drop it in another website and it just runs you know what I",
    "start": "1353240",
    "end": "1360279"
  },
  {
    "text": "mean it just like works there's something about that that's really really nice shadow Dom feels weird",
    "start": "1360279",
    "end": "1366000"
  },
  {
    "text": "absolutely I'm not saying any of these things are good I'm just saying I like I like the outcome of websockets",
    "start": "1366000",
    "end": "1374039"
  },
  {
    "text": "you know I like I like the idea you know I I don't love the programming of them",
    "start": "1374039",
    "end": "1379120"
  },
  {
    "text": "I tried the program and I had several things that would go wrong there's like all these dumb things that it there's there's lots of dumb things like the",
    "start": "1379120",
    "end": "1385360"
  },
  {
    "text": "elements are there or they're not there depending on how the web page is loaded like if you first load the the elements",
    "start": "1385360",
    "end": "1392919"
  },
  {
    "text": "and then the script executes then you actually get a you get your web component plus any of the children but",
    "start": "1392919",
    "end": "1398640"
  },
  {
    "text": "if they if it's the other way around the script already exists then you get the web component but without the children",
    "start": "1398640",
    "end": "1404200"
  },
  {
    "text": "there's like all these like little gotchas that are super annoying about it but once you figure out all those things",
    "start": "1404200",
    "end": "1409480"
  },
  {
    "text": "and program it right they work forever and that's like that's pretty nice it's like a nice little thing the problem",
    "start": "1409480",
    "end": "1415799"
  },
  {
    "text": "with uh web components is Googling uh Googling for it gives you react docs o damn that's crazy that's not good that's",
    "start": "1415799",
    "end": "1422279"
  },
  {
    "text": "not what we want here is the interesting part because live view was designed to tackle real-time problems it has a strong foundation for dealing with",
    "start": "1422279",
    "end": "1427760"
  },
  {
    "text": "optimistic updates too because ultimately they are about synchron synchronizing client St with the server",
    "start": "1427760",
    "end": "1432919"
  },
  {
    "text": "updates you can consider an application with optimistic updates to be a subset of a of a real-time one since you only",
    "start": "1432919",
    "end": "1439440"
  },
  {
    "text": "receive updates caused by your own actions to make this practical we've implemented one mechanism within live",
    "start": "1439440",
    "end": "1444760"
  },
  {
    "text": "view let's talk about it the need for clocks hey speaking about the need for clocks while I was on my way home um you",
    "start": "1444760",
    "end": "1451240"
  },
  {
    "text": "know just driving along I was reworking some of the basics to go do what uh Casey moror did but I also made a nice",
    "start": "1451240",
    "end": "1458279"
  },
  {
    "text": "little a nice little uh little clock for the video game nice little clock you",
    "start": "1458279",
    "end": "1463799"
  },
  {
    "text": "know what I mean that way we could do some nice you know you know what I'm saying I don't",
    "start": "1463799",
    "end": "1469480"
  },
  {
    "text": "code and drive I wasn't driving anyways little little we're zigging you know we're getting the clocks in there little",
    "start": "1469480",
    "end": "1474960"
  },
  {
    "text": "real time clock little faux clock and then we're going to be able to do you know something with it clock called it",
    "start": "1474960",
    "end": "1480600"
  },
  {
    "text": "yeah I was cooking cooking clock's pick like Easy E um let's see okay imagine",
    "start": "1480600",
    "end": "1486120"
  },
  {
    "text": "your web application has a form the form has a single email input and a button we",
    "start": "1486120",
    "end": "1491360"
  },
  {
    "text": "have to validate the email is unique in our database and render a tiny or mhm according to uh according cloth let's",
    "start": "1491360",
    "end": "1498919"
  },
  {
    "text": "see accordingly close to the input because we are using serers side rendering we are debouncing throttling",
    "start": "1498919",
    "end": "1504600"
  },
  {
    "text": "form changes to the server and to avoid double submissions we want to disable the button as soon as it is clicked",
    "start": "1504600",
    "end": "1510279"
  },
  {
    "text": "here's what could happen a user typed hello add example by the way this is a valid email address until the period I",
    "start": "1510279",
    "end": "1516880"
  },
  {
    "text": "don't know if you know that but it's a very annoying feature of email that hello at example is actually real Hello",
    "start": "1516880",
    "end": "1523559"
  },
  {
    "text": "example dot is not considered good a debounce kicks in causing the client to send an event to the the server here is",
    "start": "1523559",
    "end": "1529120"
  },
  {
    "text": "how the client looks at the moment okay while the server is processing this information the user",
    "start": "1529120",
    "end": "1534360"
  },
  {
    "text": "finishes typing the email and presses submit the client sends the submit event to the server then proceeds to uh to",
    "start": "1534360",
    "end": "1541279"
  },
  {
    "text": "disable the button and the change its value to submitting by the way this is like a hard problem for react as well",
    "start": "1541279",
    "end": "1547559"
  },
  {
    "text": "right can we all agree like this is like a World's classic difficult problem in",
    "start": "1547559",
    "end": "1553799"
  },
  {
    "text": "react it it's it there's a lot to this uh you cannot uh ress the Big Clock",
    "start": "1553799",
    "end": "1559279"
  },
  {
    "text": "energy you can't night shade dude stop oppressing it redj solves it okay redj solves this thank you for the valid",
    "start": "1559279",
    "end": "1565640"
  },
  {
    "text": "input uh while the server is processing this information the user finishes typing the email and presses",
    "start": "1565640",
    "end": "1571799"
  },
  {
    "text": "submit all right and the client does this submitting solved with uh start transitions yeah you you hope but you",
    "start": "1571799",
    "end": "1578520"
  },
  {
    "text": "got two problems there you still got you got uh you got an inflight request that you have to now ignore you know Nick",
    "start": "1578520",
    "end": "1585720"
  },
  {
    "text": "solves it yeah you know because you got you know is a result of the of this check mark what do we do uh immediately",
    "start": "1585720",
    "end": "1592159"
  },
  {
    "text": "after pressing the submit the client receives an update uh from the server but this is an update from the debounce event if the client were to Simply",
    "start": "1592159",
    "end": "1598960"
  },
  {
    "text": "render this server update the client would effectively roll back the form to the previous state shown below",
    "start": "1598960",
    "end": "1605679"
  },
  {
    "text": "disaster this is let's see a simple example of how client and server State can evolve and differ for periods of",
    "start": "1605679",
    "end": "1611919"
  },
  {
    "text": "time due to the distance between them independent of the stack to address this in live view whenever it pushes an event",
    "start": "1611919",
    "end": "1617880"
  },
  {
    "text": "to the server live view includes a unique identifier built in or built from an always increasing counter monatomic",
    "start": "1617880",
    "end": "1624360"
  },
  {
    "text": "clock uh aka the clock and ties the identifier to uh stateful elements your",
    "start": "1624360",
    "end": "1629760"
  },
  {
    "text": "client side state then live view proceeds to cue the server changes to these elements until they it receives an",
    "start": "1629760",
    "end": "1636240"
  },
  {
    "text": "update that matches the most recent identifier okay I'm liking",
    "start": "1636240",
    "end": "1642919"
  },
  {
    "text": "this it's a it's it's a clever way to solve this um",
    "start": "1642919",
    "end": "1648760"
  },
  {
    "text": "yeah it's like a sequence number it's actually pretty good uh then live view proceeds to cue the server changes uh to these elements until it receives an",
    "start": "1648760",
    "end": "1654799"
  },
  {
    "text": "update that matches the most recent identifier so it means also just reading this it must mean that parts of your",
    "start": "1654799",
    "end": "1660320"
  },
  {
    "text": "application you can like group together so Ryan Winchester will be able to answer this one but you should be able",
    "start": "1660320",
    "end": "1665440"
  },
  {
    "text": "to by the way bour thank you for sardo you should be able to group together parts of your application such",
    "start": "1665440",
    "end": "1671840"
  },
  {
    "text": "that if the sequence number isn't the latest sequence number it's okay because it's different subse uh a different subsection am I correct on that",
    "start": "1671840",
    "end": "1678640"
  },
  {
    "text": "one I bet you Ryan Winchester's all stoked up about this problem he's somewhere in there he's working he hears",
    "start": "1678640",
    "end": "1684840"
  },
  {
    "text": "me responding to him he so he's like raging on the keyboard right now yes there are different live views and",
    "start": "1684840",
    "end": "1689880"
  },
  {
    "text": "components y you can tell I can tell don't worry I know what's happening you're working right now but you're just listening like oh yeah oh yeah actually",
    "start": "1689880",
    "end": "1696600"
  },
  {
    "text": "I think that you're wrong in the instance you simply check the message before building Rich experiences would",
    "start": "1696600",
    "end": "1702840"
  },
  {
    "text": "be impossible without live view being aware of client side state okay that makes sense though it I think that's really really clever to have sequences",
    "start": "1702840",
    "end": "1709279"
  },
  {
    "text": "that are also to have a latest be a combination of sequence and area I think",
    "start": "1709279",
    "end": "1714600"
  },
  {
    "text": "is really good right I think that's a really good approach to solving this problem super super clever good job Jose",
    "start": "1714600",
    "end": "1721519"
  },
  {
    "text": "the collection of these features is what makes it possible for Live View application to broadcast drag and drop events to all users in real time while",
    "start": "1721519",
    "end": "1728240"
  },
  {
    "text": "providing a nice experience even on 3G connections The Next Step uh and considerations today live view has two",
    "start": "1728240",
    "end": "1735320"
  },
  {
    "text": "main interoperability mechanisms with the client with the client hooks that integrate live views uh life cycles with",
    "start": "1735320",
    "end": "1741440"
  },
  {
    "text": "the Dom elements and commands which perform common client side actions without the server roundtrip the clock",
    "start": "1741440",
    "end": "1747760"
  },
  {
    "text": "mechanism described in the previous section is used internally for several live view features and it's partially",
    "start": "1747760",
    "end": "1753200"
  },
  {
    "text": "exposed to the user via the loading option on push the loading option applies and removes classes from",
    "start": "1753200",
    "end": "1759080"
  },
  {
    "text": "Elements which can then react to these events in the simplest case you can simply use CSS to uh to customize a",
    "start": "1759080",
    "end": "1765279"
  },
  {
    "text": "given element while it waits for the server update when using Tailwind Phoenix includes class variants to make",
    "start": "1765279",
    "end": "1771320"
  },
  {
    "text": "this trivial oh my gosh did he just mention Tailwind",
    "start": "1771320",
    "end": "1777039"
  },
  {
    "text": "honestly only the worst Engineers use Tailwind we are also discussing",
    "start": "1777039",
    "end": "1783600"
  },
  {
    "text": "mechanisms to expose our clock programmatically making it easier to pre-render a component on the client",
    "start": "1783600",
    "end": "1789880"
  },
  {
    "text": "while waiting on the server act that's bait that's bait right there note this is already possible with hooks today a",
    "start": "1789880",
    "end": "1797559"
  },
  {
    "text": "project like lives felt can help avoid a duplication in more complex cases near",
    "start": "1797559",
    "end": "1803519"
  },
  {
    "text": "real time simply okay someone says what the hell is near real time I use the term near real time near real time just",
    "start": "1803519",
    "end": "1808600"
  },
  {
    "text": "simply means like within five minutes that's typically what people use as near real time they're like as close as",
    "start": "1808600",
    "end": "1815519"
  },
  {
    "text": "possible because obviously real time would be like when someone does it it happens also within milliseconds but if",
    "start": "1815519",
    "end": "1821440"
  },
  {
    "text": "you're like in the seconds to minutes category you're a near real time uh it's",
    "start": "1821440",
    "end": "1826840"
  },
  {
    "text": "also been observed in stes that manual note taking is better for truly taking uh in what you've noted I I would assume",
    "start": "1826840",
    "end": "1833240"
  },
  {
    "text": "so cuz there's a there's a physical action to it usually whenever you can tie like multiple senses together you",
    "start": "1833240",
    "end": "1838840"
  },
  {
    "text": "tend to get you just tend to get better tend to get better memory I",
    "start": "1838840",
    "end": "1843880"
  },
  {
    "text": "mean typically speaking uh anyways uh we are also discussing mechanisms to expose our clock programmatically making it",
    "start": "1843880",
    "end": "1849960"
  },
  {
    "text": "easier to pre-render a component on the client while waiting for the server to uh the server act note this is already",
    "start": "1849960",
    "end": "1856840"
  },
  {
    "text": "possible with hooks today a projects like lives felt can help avoid duplication in more complex cases at the",
    "start": "1856840",
    "end": "1863080"
  },
  {
    "text": "end of the day most applications will require some JavaScript integration as an example an application such as live",
    "start": "1863080",
    "end": "1869240"
  },
  {
    "text": "beats which allows users to start their own radio station for people to listen to in real time requires 340 lines of",
    "start": "1869240",
    "end": "1874760"
  },
  {
    "text": "jav uh of JavaScript application code that's pretty good we target Real",
    "start": "1874760",
    "end": "1881639"
  },
  {
    "text": "Time 5 minutes that's the most ideal you can get when you have millions of events yep there you go correct so typically",
    "start": "1881639",
    "end": "1887200"
  },
  {
    "text": "real time means near real time 500 lines of JS is too many no uh for uh for the",
    "start": "1887200",
    "end": "1893360"
  },
  {
    "text": "Doom application it required 500 lines of code and of those 500 lines of code 100 of them were devoted to",
    "start": "1893360",
    "end": "1901679"
  },
  {
    "text": "making uh websockets behave properly and not send messages out of order and then I discover there's just a single",
    "start": "1901679",
    "end": "1907480"
  },
  {
    "text": "property which I'm still emotionally bruised by uh I can't believe the default behaviors messages can come out",
    "start": "1907480",
    "end": "1912880"
  },
  {
    "text": "of order like who does this how did that even happen how did you even program that I I I'm just so impressed by this",
    "start": "1912880",
    "end": "1918559"
  },
  {
    "text": "uh we don't understand the five minutes real time because we only have two users so everything happens",
    "start": "1918559",
    "end": "1923679"
  },
  {
    "text": "instantly correct well Phoenix live view does not support all use cases the most obvious being offline mode and while it",
    "start": "1923679",
    "end": "1929960"
  },
  {
    "text": "still requires you to bring JS libraries for managing the Dom it uh packs quite a punch by the way offline mode is",
    "start": "1929960",
    "end": "1937600"
  },
  {
    "text": "extremely difficult and 99% of websites don't handle it either and so I I've always found that one to be a bit of a",
    "start": "1937600",
    "end": "1944559"
  },
  {
    "text": "um I kind of feel like it's you know like when you're at a there's always every company has a different set of",
    "start": "1944559",
    "end": "1950960"
  },
  {
    "text": "arguments that people make that they're not making in good faith but they're making to defeat a project and it's",
    "start": "1950960",
    "end": "1958000"
  },
  {
    "text": "different from every company and this is one of those arguments that I think most people say well you can't do that",
    "start": "1958000",
    "end": "1963039"
  },
  {
    "text": "because if you don't have internet doesn't work it's like yeah I don't know like what Google Docs only if you",
    "start": "1963039",
    "end": "1969519"
  },
  {
    "text": "pre-select it being editable offline works okay but nothing else does it's a",
    "start": "1969519",
    "end": "1974760"
  },
  {
    "text": "red herring it's totally red herring almost nobody gets it right right I can't just scroll through Twitter and make a bunch of likes and then when I go",
    "start": "1974760",
    "end": "1981360"
  },
  {
    "text": "back online it's like and they're liked now right like that doesn't work uh you get real-time messaging multiparty presence clients side interoperability",
    "start": "1981360",
    "end": "1987960"
  },
  {
    "text": "fast browserless testing uploads monitoring dashboards and much more all provided out of the box without the need",
    "start": "1987960",
    "end": "1993519"
  },
  {
    "text": "for third party dependencies or third party services and that's without taking into account everything else you get",
    "start": "1993519",
    "end": "1998919"
  },
  {
    "text": "from elixair and earling ecosystems Fenix live view is currently in release candidate for upcoming 1 release give it",
    "start": "1998919",
    "end": "2006360"
  },
  {
    "text": "a try I think this is a really good I think this is really good counter example that that he gave and I really do think that",
    "start": "2006360",
    "end": "2013639"
  },
  {
    "text": "I I truly do think I like Ryan W Florence by the way I hope everybody understands that I I'm not I'm not here to dunk on him but I think that this is",
    "start": "2013639",
    "end": "2020399"
  },
  {
    "text": "fundamentally just a bad take and what I mean by bad take is that every single framework cannot just Exist by itself as",
    "start": "2020399",
    "end": "2027240"
  },
  {
    "text": "an island It's a combination of other things and like I said earlier charts JS is a great example lots of websites use",
    "start": "2027240",
    "end": "2033960"
  },
  {
    "text": "chartjs chartjs for these beautiful Integrations with charts but often those Integrations with charts and stuff are",
    "start": "2033960",
    "end": "2040679"
  },
  {
    "text": "never done actually in react they're always done by just Dom manipulation because you have so many little Dom",
    "start": "2040679",
    "end": "2046919"
  },
  {
    "text": "elements you may be doing and so I tend to just like doubt any of these things whenever I see it it's just like okay I",
    "start": "2046919",
    "end": "2053800"
  },
  {
    "text": "get it not everything you can't solve all client side interactions with server driven UI updates Fair factual but",
    "start": "2053800",
    "end": "2062398"
  },
  {
    "text": "writing 340 lines of JavaScript to make a decently Interactive website like I'm",
    "start": "2062399",
    "end": "2069398"
  },
  {
    "text": "happy about that like that's very little code that's that's I mean that's just fundamentally a much easier set of code",
    "start": "2069399",
    "end": "2076040"
  },
  {
    "text": "to deal with right the less you have to write for custom Behavior the better I like that show the website yeah I I",
    "start": "2076040",
    "end": "2082560"
  },
  {
    "text": "don't have any I don't have any uh what's it called MP3s right by the way",
    "start": "2082560",
    "end": "2087720"
  },
  {
    "text": "that was like licky split can we all agree you haven't seen a website load that fast in ages can we all agree ain't",
    "start": "2087720",
    "end": "2095679"
  },
  {
    "text": "nobody seen that all right hold on let me let we do this I mean it's it's a nice I mean this is a nice feeling",
    "start": "2095679",
    "end": "2103078"
  },
  {
    "text": "website it's a nice feeling like I would have no idea where all these things are coming",
    "start": "2103160",
    "end": "2109440"
  },
  {
    "text": "from right like look at that that didn't that didn't look like it cause a network request look at that they made a little they made a little interactive part oh",
    "start": "2109680",
    "end": "2116240"
  },
  {
    "text": "my gosh oh my",
    "start": "2116240",
    "end": "2119520"
  },
  {
    "text": "gosh anyways um",
    "start": "2122040",
    "end": "2127760"
  },
  {
    "text": "have a filter on I don't have any filters on there you go I mean it's all right there it's all being driven",
    "start": "2127760",
    "end": "2132800"
  },
  {
    "text": "through websockets usually websocket events uh they have a nice little thing I don't have any music so it's kind of",
    "start": "2132800",
    "end": "2138040"
  },
  {
    "text": "it causes a bit of a problem all right I need I need something here is this just HX no it's",
    "start": "2138040",
    "end": "2144240"
  },
  {
    "text": "like Advanced htx right show the websocket messages well typically the",
    "start": "2144240",
    "end": "2149920"
  },
  {
    "text": "websocket messages would be coming through whatever one did the websocket JS websocket there's this guy that's",
    "start": "2149920",
    "end": "2157240"
  },
  {
    "text": "cool I don't want to listen I'm not going to press listen but",
    "start": "2157240",
    "end": "2163720"
  },
  {
    "text": "okay yeah it doesn't really help let's see uh it doesn't really help to spread misleading statements in the title from",
    "start": "2163720",
    "end": "2169440"
  },
  {
    "text": "faulty Studios I'm not really sure what we're talking about here uh uh let's see L do",
    "start": "2169440",
    "end": "2174960"
  },
  {
    "text": "I need a way to get back to mp3s now yeah apparently we need that we need to use YouTube downloader to I'm not sure",
    "start": "2174960",
    "end": "2181000"
  },
  {
    "text": "if they come out as MP3s websockets are cool yeah websockets cool I mean it's just a generally that's just a really",
    "start": "2181000",
    "end": "2186040"
  },
  {
    "text": "good experience I I find that that was a fine experience I had no like absolutely",
    "start": "2186040",
    "end": "2191079"
  },
  {
    "text": "no problems with that experience and granted like my internet's not super fast it's not super slow it's just fine",
    "start": "2191079",
    "end": "2198160"
  },
  {
    "text": "um I we could drop it into slow 3G and and see the experience and all that kind of stuff",
    "start": "2198160",
    "end": "2203960"
  },
  {
    "text": "uh but at the end of the day a little bit of client a little bit of client",
    "start": "2203960",
    "end": "2209319"
  },
  {
    "text": "side JavaScript can pretty much make most of the problems described go away",
    "start": "2209319",
    "end": "2215160"
  },
  {
    "text": "and that's the whole point of these of the argument and I think that's the Miss here which is that that's what people",
    "start": "2215160",
    "end": "2220800"
  },
  {
    "text": "care about it's just like hey like this app does a great job avoiding a network latency in favor of separating uh",
    "start": "2220800",
    "end": "2226119"
  },
  {
    "text": "separate abstractions to drive those Dom updates so I can't find any Jank so there's no Jank to be found in this app",
    "start": "2226119",
    "end": "2231839"
  },
  {
    "text": "which is cool with 340 lines of code all right that's a w he does have",
    "start": "2231839",
    "end": "2238640"
  },
  {
    "text": "3G examples right here okay yeah because I'd rather see someone with a whole bunch of you",
    "start": "2238640",
    "end": "2244440"
  },
  {
    "text": "know with a whole bunch of songs it's regular 3G not even good 3G nice",
    "start": "2244440",
    "end": "2252160"
  },
  {
    "text": "that's looking really good hey that's looking really good for the 3Gs that's looking really good uh how much uh",
    "start": "2252160",
    "end": "2258560"
  },
  {
    "text": "server resources though half the benefit of JS is that you offload a bunch of resources to the client I don't think",
    "start": "2258560",
    "end": "2263760"
  },
  {
    "text": "you actually offload that many resources to the client I think that you say you do but I think you kind of artificially",
    "start": "2263760",
    "end": "2270040"
  },
  {
    "text": "create this because like here's a good example you have a server doesn't matter what language let's pretend it's in go",
    "start": "2270040",
    "end": "2275800"
  },
  {
    "text": "which just you automatically get 10x the scaling to JavaScript and you decide you're going to just deliver down the",
    "start": "2275800",
    "end": "2281599"
  },
  {
    "text": "HTML instead well what do you do you're going to go to the database which is going to be infinitely longer than anything else you do you get back the",
    "start": "2281599",
    "end": "2288560"
  },
  {
    "text": "information you do some string interpolation which is rather cheap right so you build a couple templates bada bing bada boom it runs through that",
    "start": "2288560",
    "end": "2295160"
  },
  {
    "text": "it produces out a string sends it down it does a bunch of logical choices based on the values that are inside of uh",
    "start": "2295160",
    "end": "2302119"
  },
  {
    "text": "what's it called that are inside of the data that comes back down then what happens well you send down the the",
    "start": "2302119",
    "end": "2309119"
  },
  {
    "text": "client side payload and the client side renders or B you can do something similar you're going to go through on",
    "start": "2309119",
    "end": "2315079"
  },
  {
    "text": "your server you're going to go request the data you're going to go through the data in the same fashion ensuring things",
    "start": "2315079",
    "end": "2320440"
  },
  {
    "text": "are on and off or in the the way you want it to be and then you're going to do Json stringifying which is not necessarily the same type of it's not",
    "start": "2320440",
    "end": "2327280"
  },
  {
    "text": "the same as building a template right a template is a known value that's is going to be coming out whereas Json it builds it one little bit at a time so",
    "start": "2327280",
    "end": "2333760"
  },
  {
    "text": "there's a bunch of stuff right it's just different like so even arguing which one's more efficient is like very very",
    "start": "2333760",
    "end": "2340720"
  },
  {
    "text": "very difficult it's very hard for me to understand how you could say one was",
    "start": "2340720",
    "end": "2346800"
  },
  {
    "text": "faster than the other cuz I honestly I have no idea I'd have to do we'd have to do a lot of testing on a lot of",
    "start": "2346800",
    "end": "2352000"
  },
  {
    "text": "different services to really understand which one was better so it's very context specific yeah and so when",
    "start": "2352000",
    "end": "2357119"
  },
  {
    "text": "someone says you're offloading it from the server to the client I I don't know if I buy that I think it's just an",
    "start": "2357119",
    "end": "2362800"
  },
  {
    "text": "argument people make is the server stateful now no it doesn't have to be stateful nothing about it has to be stateful I mean the web socket and all",
    "start": "2362800",
    "end": "2369599"
  },
  {
    "text": "that yeah that's just delivering down client or server side stuff but obviously Phoenix gives you a really",
    "start": "2369599",
    "end": "2374839"
  },
  {
    "text": "good experience with keeping State and keeping live sessions going HTM X you don't do that HTM X is a stateless",
    "start": "2374839",
    "end": "2381720"
  },
  {
    "text": "server kind of model so it's like you know I think these arguments they're kind of I think they're",
    "start": "2381720",
    "end": "2388760"
  },
  {
    "text": "arguments that are made either in good or bad faith I don't think there's any sort of I don't think you can identify why they're made but they're made and",
    "start": "2388760",
    "end": "2396200"
  },
  {
    "text": "they detract from the actual problem the actual problem",
    "start": "2396200",
    "end": "2402040"
  },
  {
    "text": "is what can you build and can you build it reasonably and can multiple people",
    "start": "2402040",
    "end": "2407280"
  },
  {
    "text": "join in on a product and make it into something great or is that just not tenable really because that's what we",
    "start": "2407280",
    "end": "2413400"
  },
  {
    "text": "ultimately want right everybody wants to be able to build nice web applications by everyone I mean actually a small",
    "start": "2413400",
    "end": "2420160"
  },
  {
    "text": "subsect of the total programming Community wants to be able to build you know web applications that are nice that",
    "start": "2420160",
    "end": "2425880"
  },
  {
    "text": "potentially 2 3 4 10 15 people can join in and help build and so what is the",
    "start": "2425880",
    "end": "2431160"
  },
  {
    "text": "best and most flourishing way we can do that what is going to lead to the most amount of features with the least amount",
    "start": "2431160",
    "end": "2436480"
  },
  {
    "text": "of people fighting each other that's really the question I think we're all asking ourselves that's a fantastic yes",
    "start": "2436480",
    "end": "2442760"
  },
  {
    "text": "uh it's how hard is it to maintain exactly and so I think sometimes people always go and they focus on these like",
    "start": "2442760",
    "end": "2449520"
  },
  {
    "text": "these these arguments that people that don't actually matter right so when you",
    "start": "2449520",
    "end": "2455000"
  },
  {
    "text": "say well yeah is it more expensive to produce htl than Json it's just like I don't know probably depends on the Json",
    "start": "2455000",
    "end": "2460800"
  },
  {
    "text": "and the HTML probably depends on how many Transformations depends on how many things are going on I have no idea is it",
    "start": "2460800",
    "end": "2466119"
  },
  {
    "text": "more expensive with egis I don't know I can't even tell with that one like right like I don't know because that's like a",
    "start": "2466119",
    "end": "2472160"
  },
  {
    "text": "very specific problem on a case-by Case basis I can't answer that question anyways so apply a little bit more",
    "start": "2472160",
    "end": "2479680"
  },
  {
    "text": "critical thought it's you know like every now and then you hear this phrase I've been hearing this phrase and I absolutely hate it and we are laughing",
    "start": "2479680",
    "end": "2485040"
  },
  {
    "text": "about this at Big Sky Devcon which is hear this phrase every now and then and you see it which goes something like this we know we know uh less about the",
    "start": "2485040",
    "end": "2494599"
  },
  {
    "text": "uh the Ocean than space like someone literally said this phrase and this was",
    "start": "2494599",
    "end": "2500280"
  },
  {
    "text": "reported and all these kind of things I mean obviously the problem is that like",
    "start": "2500280",
    "end": "2505720"
  },
  {
    "text": "in space there's probably a planet that has a bigger Ocean than ours just throwing it out there statistically",
    "start": "2505720",
    "end": "2511560"
  },
  {
    "text": "speaking there's probably a planet with some sort of liquid that is bigger than ours and there's oceans in space",
    "start": "2511560",
    "end": "2518160"
  },
  {
    "text": "okay space oceans so when someone says these phrases they're they sound great",
    "start": "2518160",
    "end": "2523880"
  },
  {
    "text": "and nice and all all cool but then when you take any sort of critical thought you're like okay we're arguing completely crazy things and none of this",
    "start": "2523880",
    "end": "2529760"
  },
  {
    "text": "makes any sense but space is fake facts the name is the primagen",
    "start": "2529760",
    "end": "2536318"
  }
]