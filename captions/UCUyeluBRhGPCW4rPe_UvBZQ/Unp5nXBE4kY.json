[
  {
    "text": "I saw this video a little bit ago and I'm going to let you know I have gotten a little heated up by this guy before in",
    "start": "120",
    "end": "6879"
  },
  {
    "text": "the past we will I'm gonna I'm going to not get heated up okay I'm you know you",
    "start": "6879",
    "end": "12599"
  },
  {
    "text": "should always take you should always listen to everyone's argument as it is and so I have to because if your code",
    "start": "12599",
    "end": "18320"
  },
  {
    "text": "looks like this you're a good programmer I just want you to know that generally speaking the best programmers I have",
    "start": "18320",
    "end": "25400"
  },
  {
    "text": "ever seen write really shitty code one of the best programmers I ever ever saw in my lifetime his code was by far the",
    "start": "25400",
    "end": "31880"
  },
  {
    "text": "most atrocious code I've ever read I actually hated it I hated working with him but man could the guy get stuff done",
    "start": "31880",
    "end": "38160"
  },
  {
    "text": "okay so I'm I'm just saying it depends on your measurement depends on your",
    "start": "38160",
    "end": "43200"
  },
  {
    "text": "measurement all right and I I worked with someone that always wrote really nice code and I hated working with them",
    "start": "43200",
    "end": "49920"
  },
  {
    "text": "because everything was an argument oh oh that variable name is slightly to uh slightly Too Short you know what like my",
    "start": "49920",
    "end": "56800"
  },
  {
    "text": "my least the thing that I hate is when you work with some people that are these like good code Andes it's like you do a",
    "start": "56800",
    "end": "62160"
  },
  {
    "text": "promise and you have res and regge right like dude do you really care in JavaScript that you're using res and",
    "start": "62160",
    "end": "68200"
  },
  {
    "text": "res versus a resolve and reject it's just like dude you're killing me you're killing me why are you making a this a",
    "start": "68200",
    "end": "74880"
  },
  {
    "text": "hill you want to die on like out of all Hills to die on why is this one we got to use reject and resolve or else it's",
    "start": "74880",
    "end": "81280"
  },
  {
    "text": "completely ununderstandable it's like it's not that understand it's not like that misunderstand oh my goodness it",
    "start": "81280",
    "end": "88159"
  },
  {
    "text": "just kills me uh how many times s we discuss this dude it's just too much it's just too much it kills me it kills",
    "start": "88159",
    "end": "94000"
  },
  {
    "text": "me honestly so I'm curious what this means but here we go so everybody you",
    "start": "94000",
    "end": "99360"
  },
  {
    "text": "ready we all say it that code is bad this code is terrible but what does it",
    "start": "99360",
    "end": "105040"
  },
  {
    "text": "mean and what should we do about it that's our topic for",
    "start": "105040",
    "end": "110320"
  },
  {
    "text": "[Music] today hi I'm Dave Farley of continuous",
    "start": "112160",
    "end": "118520"
  },
  {
    "text": "delivery and welcome to my channel if you haven't been here before please do hit subscribe and if you enjoy the",
    "start": "118520",
    "end": "124039"
  },
  {
    "text": "content today hit like as well bad code is probably a bad name for bad code but",
    "start": "124039",
    "end": "129239"
  },
  {
    "text": "at least colloquially if not technically we all know what we mean when we say it",
    "start": "129239",
    "end": "134400"
  },
  {
    "text": "that is but this picture of this hacker just made me so upset but at least colloquially if not technically I hate I",
    "start": "134400",
    "end": "142280"
  },
  {
    "text": "hate the fact that this guy's like a hacker guy and he keeps looking at his keyboard we all know what we mean when we say like that dude why are you",
    "start": "142280",
    "end": "148000"
  },
  {
    "text": "looking at your keyboard what is this what are you doing how are you typing without looking at your keyboard for an",
    "start": "148000",
    "end": "153319"
  },
  {
    "text": "extended period of time then typing Again by looking at it what kind of what kind of like what what stock footage is",
    "start": "153319",
    "end": "159120"
  },
  {
    "text": "this why am I triggered by the most trivial things oh I'm a good program I",
    "start": "159120",
    "end": "164319"
  },
  {
    "text": "can just tell right away when you're triggered by the most trivial things it means you're a good programmer by the way just so you know uh have you done",
    "start": "164319",
    "end": "169840"
  },
  {
    "text": "the government rust thing yet no I haven't low-l learning would you like to come on next for that low-l learning would you like to come on and talk to me",
    "start": "169840",
    "end": "175560"
  },
  {
    "text": "about government and Rus thing yeah let's do it okay let me get through this video which uh judging by the length it will be one hour from now I'm not going",
    "start": "175560",
    "end": "182280"
  },
  {
    "text": "to rage dude I can't help it I like literally cannot help it I I I lose I I",
    "start": "182280",
    "end": "188000"
  },
  {
    "text": "I actually turn into Goodwill Hunting and I'm like I'm losing my [ __ ] mables right dude I cannot I cannot help",
    "start": "188000",
    "end": "193760"
  },
  {
    "text": "this oh my goodness that is not how I would have done it or if it's our code",
    "start": "193760",
    "end": "200440"
  },
  {
    "text": "that's bad it's not how I'd do it now with the benefit of Hite bow code is",
    "start": "200440",
    "end": "205720"
  },
  {
    "text": "code that is difficult or at least unpleasant to work on in this I don't know if I agree with that fundamental uh",
    "start": "205720",
    "end": "212400"
  },
  {
    "text": "premise uh the reason why I say I don't agree with that fundamental premise right off the rip is that code that can be unpleasant to work on can also be",
    "start": "212400",
    "end": "219599"
  },
  {
    "text": "marred by the fact that it is Complicated by its very nature and what I mean by that is like a very classic",
    "start": "219599",
    "end": "226400"
  },
  {
    "text": "topic of difficulty at Netflix is on the television app there is no such thing as focus",
    "start": "226400",
    "end": "232920"
  },
  {
    "text": "focus is a madeup term on the web that does not exist on TVs and so we had to create our own Focus ring and our own",
    "start": "232920",
    "end": "239799"
  },
  {
    "text": "Focus that goes all around now obviously this is a very complicated topic and I've had to work on Focus code multiple",
    "start": "239799",
    "end": "248280"
  },
  {
    "text": "times is it easy no it's not easy it's really not easy and so whenever you do",
    "start": "248280",
    "end": "255159"
  },
  {
    "text": "these kind of things to say like oh this code since it's hard to work on therefore it's bad it's like is it or is the is the topic itself really really",
    "start": "255159",
    "end": "263400"
  },
  {
    "text": "difficult and the reality is that the topic itself can just simply be really difficult and that's that do you mean",
    "start": "263400",
    "end": "268520"
  },
  {
    "text": "like CSS Focus like when you press tab yeah like that's one way but like just think about when you use Amazon or when",
    "start": "268520",
    "end": "274080"
  },
  {
    "text": "you use Netflix or when you use any of these things on a TV you got to remember that you know how there's like a ring",
    "start": "274080",
    "end": "279680"
  },
  {
    "text": "that shows you what video you have highlighted this is not some sort of platform provided thing like Tab and",
    "start": "279680",
    "end": "286280"
  },
  {
    "text": "input boxes on the web Focus that focus and focus order is a provided to you thing whereas on TV it does not exist",
    "start": "286280",
    "end": "294960"
  },
  {
    "text": "this episode I want to explore what bad code really is what's a sensible practical definition for good code and",
    "start": "294960",
    "end": "302320"
  },
  {
    "text": "what it takes to build good code and avoid traps in how was she just typing Y",
    "start": "302320",
    "end": "309520"
  },
  {
    "text": "how is this person typing how are they typing neuralink it's crazy is that",
    "start": "309520",
    "end": "315120"
  },
  {
    "text": "neuralink man this is crazy this is crazy um any who is this is this what AI",
    "start": "315120",
    "end": "321160"
  },
  {
    "text": "generated stuff looks like because this can't be a real office this has to be all AI generated at this point they're watching a tutorial is that it watching",
    "start": "321160",
    "end": "327360"
  },
  {
    "text": "a stream okay to build good code Mt bad code based on some real world",
    "start": "327360",
    "end": "333639"
  },
  {
    "text": "examples I actually do like the fact that he's attempting to Define what bad code is I'm very excited to see what bad",
    "start": "333639",
    "end": "339600"
  },
  {
    "text": "code is because that is very important in my head uh because if you can't give",
    "start": "339600",
    "end": "344840"
  },
  {
    "text": "a concrete definition other than code I don't like then I don't think you know anything like honestly I don't think you know anything fundamentally bad code is",
    "start": "344840",
    "end": "352240"
  },
  {
    "text": "defined I think by two things either it doesn't do what it should or even if it",
    "start": "352240",
    "end": "357680"
  },
  {
    "text": "does do what it should it's too hard to change it when we need I disagree with the second point I think it just really",
    "start": "357680",
    "end": "364039"
  },
  {
    "text": "depends on the problem and the the amount of in you know again go back to focus imagine attemp imagine you had the",
    "start": "364039",
    "end": "371080"
  },
  {
    "text": "change Focus for an entire platform like Amazon Prime you think that that would be easy",
    "start": "371080",
    "end": "376479"
  },
  {
    "text": "change would that be a fun change how about there was a time at Netflix that we used to do this thing where there's",
    "start": "376479",
    "end": "381759"
  },
  {
    "text": "all these lists of movies right here and what how we represented this list of movie was a tree technically it was a",
    "start": "381759",
    "end": "386840"
  },
  {
    "text": "graph but for Simplicity I'll just show it as a tree it started off as a Lolo right and it was a Lolo and then inside",
    "start": "386840",
    "end": "393759"
  },
  {
    "text": "of it was like a big uu ID and then inside of that would be a list and then that would have like say numbers zero",
    "start": "393759",
    "end": "399120"
  },
  {
    "text": "through something which actually this zero through something was another uu ID right so it' be Lolo uh and then",
    "start": "399120",
    "end": "405039"
  },
  {
    "text": "technically this one would be like zero would point to a list one would point to a list but it's actually by ID so I'm",
    "start": "405039",
    "end": "410199"
  },
  {
    "text": "just kind of like abbreviating the structure so this is by ID and then this would have a list of videos so this",
    "start": "410199",
    "end": "415919"
  },
  {
    "text": "would be you know video one that would have like say a title it would have like a description it would have like maybe a",
    "start": "415919",
    "end": "421360"
  },
  {
    "text": "rating blah blah blah blah blah and this would go on for quite some time okay so you get the idea now here's a problem",
    "start": "421360",
    "end": "427879"
  },
  {
    "text": "when you organize your data structure like this when two lists point to the same movie they are actually pointing to the same object so when I try to put",
    "start": "427879",
    "end": "434599"
  },
  {
    "text": "some sort of badging right here that says Ah you would like this video because you like tough men doing tough",
    "start": "434599",
    "end": "440280"
  },
  {
    "text": "jobs right and say it's Live Free Die Hard and then in the next video it's",
    "start": "440280",
    "end": "445479"
  },
  {
    "text": "Bruce Willis action movies I couldn't change that descript description for why you liked it from tough men doing tough",
    "start": "445479",
    "end": "452720"
  },
  {
    "text": "jobs instead it should be because you like Bruce Willis I couldn't do that because of the shape of our data",
    "start": "452720",
    "end": "458479"
  },
  {
    "text": "structure so I had to change our data structure to include one more item inside the list so it' go instead of",
    "start": "458479",
    "end": "465240"
  },
  {
    "text": "instead of uh list list zero like say uh list so this list would represent one of",
    "start": "465240",
    "end": "471319"
  },
  {
    "text": "the one of the rows zero would be the zeroth title I couldn't just simply go zero title instead I'd go",
    "start": "471319",
    "end": "477440"
  },
  {
    "text": "zero. video. tile and zero do like say reason I had to add in an entire like",
    "start": "477440",
    "end": "483759"
  },
  {
    "text": "node into our graph to be able to add in these like badging in things and so to change the data structure of the entire",
    "start": "483759",
    "end": "491240"
  },
  {
    "text": "code was very very difficult does that mean that the code itself was bad or was",
    "start": "491240",
    "end": "496479"
  },
  {
    "text": "the problem hard people are saying yeah I think you guys are losers I didn't know that was a term yeah L's loser uh",
    "start": "496479",
    "end": "503120"
  },
  {
    "text": "neither it can be true uh both could be true yeah uh you should have used abstraction more abstraction uh what is",
    "start": "503120",
    "end": "509000"
  },
  {
    "text": "up with you and pirate software drawing boxes boxes are how you describe things I know this may sound shocking but if",
    "start": "509000",
    "end": "514680"
  },
  {
    "text": "you've ever been to any schooling ever for all time of life you would draw a box don't write bad code write bad",
    "start": "514680",
    "end": "521680"
  },
  {
    "text": "badass code thank you need to change it I'd argue that that's it everything else",
    "start": "521680",
    "end": "527480"
  },
  {
    "text": "is secondary to those two things if so quick question if you've never worked with C++ and you got thrown into a C++",
    "start": "527480",
    "end": "535040"
  },
  {
    "text": "code base is the code bad or do you have skill issues if you've never worked with JavaScript and you got thrown into a",
    "start": "535040",
    "end": "540399"
  },
  {
    "text": "JavaScript codebase if you got thrown into a python codebase if you got thrown into any codebase that you're not familiar with and it's hard to change",
    "start": "540399",
    "end": "546800"
  },
  {
    "text": "are you bad are you filled with skill issues or is the code bad the proper answer is you have skill issues and the",
    "start": "546800",
    "end": "552959"
  },
  {
    "text": "code is bad yeah the trick question is the code is always bad that's what I'm trying to say is that the measurement of",
    "start": "552959",
    "end": "558480"
  },
  {
    "text": "saying it's hard to change I I hate that because it's not it's not tangible what",
    "start": "558480",
    "end": "563880"
  },
  {
    "text": "is one person's hard as one person's easy if it does what it's meant to and it's easy to change then it's good code",
    "start": "563880",
    "end": "571000"
  },
  {
    "text": "this is not about engineering as art or over engineering or software developers",
    "start": "571000",
    "end": "576519"
  },
  {
    "text": "being over precious about the beauty in their code I would argue that if you change code that is super simple for you",
    "start": "576519",
    "end": "582480"
  },
  {
    "text": "to change either one you have extreme domain knowledge like me working on my tower defense I just simply know where everything is the 4,000 5,000 lines of",
    "start": "582480",
    "end": "589399"
  },
  {
    "text": "code in here I can just simply navigate because I understand everything about the code base or be or working on a product so dang simple that that even",
    "start": "589399",
    "end": "596040"
  },
  {
    "text": "Chad GPT can get it right like I I I don't see any other way I think all code is hard to change when you have to change someone else's code because you",
    "start": "596040",
    "end": "601920"
  },
  {
    "text": "have to you have to adopt their mentality this is practical pragmatic stuff it works and it's easy to change",
    "start": "601920",
    "end": "610040"
  },
  {
    "text": "these things have a direct bottom line impact on the productivity as well as quality of the systems that we build if",
    "start": "610040",
    "end": "617200"
  },
  {
    "text": "you want to go quickly bro was just drawn a line really focusing on that line like who I got to go down",
    "start": "617200",
    "end": "624360"
  },
  {
    "text": "again we got to go up right dude that was good man got the guy was cooking",
    "start": "624360",
    "end": "630480"
  },
  {
    "text": "something magical here it as well as quality of the systems you build if you",
    "start": "630480",
    "end": "635639"
  },
  {
    "text": "want to go quickly and build lots of features you don't get to do that by cutting corners and writing bad code",
    "start": "635639",
    "end": "642440"
  },
  {
    "text": "fast you do it by working more carefully to create good code from the start and",
    "start": "642440",
    "end": "648079"
  },
  {
    "text": "so saving lots of unnecessary time and effort correcting the Fallout that your bad code cause later",
    "start": "648079",
    "end": "654920"
  },
  {
    "text": "on oops professional oh no oh no transfer",
    "start": "654920",
    "end": "661040"
  },
  {
    "text": "hold on I just accidentally skipped forward I didn't mean to carefully to time and effort correcting the Fallout",
    "start": "661560",
    "end": "666600"
  },
  {
    "text": "that your bad code cause later on I wish I actually disagree with that statement in the sense that a lot of times",
    "start": "666600",
    "end": "672240"
  },
  {
    "text": "whenever you're creating something new you often don't know all the edges and so to create quote unquote good code is",
    "start": "672240",
    "end": "677720"
  },
  {
    "text": "actually quite difficult uh I think you'll spend much more time attempting to create something that's good and then",
    "start": "677720",
    "end": "682839"
  },
  {
    "text": "you'll later find out that you were completely wrong and that's that and then what the hell happened",
    "start": "682839",
    "end": "689920"
  },
  {
    "text": "did I get hacked by the Chinese government I'm sorry Edward Snowden I",
    "start": "689920",
    "end": "697839"
  },
  {
    "text": "got that China government on me I forgot what I was saying due to the video thing dropping so whatever we were talking",
    "start": "697839",
    "end": "703360"
  },
  {
    "text": "about it was I made a super good valid wise point and now audio doesn't work",
    "start": "703360",
    "end": "709320"
  },
  {
    "text": "okay that's that's actually what I really wanted flip you can keep this in this is emotionally that's just what I really wanted I wanted not only a w take",
    "start": "709320",
    "end": "716120"
  },
  {
    "text": "I wanted to get defeated by Audio directly after afterwards all right hold on I think I got this I think I got this",
    "start": "716120",
    "end": "722680"
  },
  {
    "text": "all right I found this I found this really cool feature that if you go to it and you go and you say do not allow",
    "start": "722680",
    "end": "728639"
  },
  {
    "text": "audio then allow audio it seems to fix believed that and defended that idea",
    "start": "728639",
    "end": "734000"
  },
  {
    "text": "more strongly to misguided people pressuring us to cut Corners to deliver faster because cutting Corners simply",
    "start": "734000",
    "end": "740440"
  },
  {
    "text": "doesn't work the Dora data says that teams that produce higher quality code are significantly more efficient overall",
    "start": "740440",
    "end": "748560"
  },
  {
    "text": "spending I I do feel like this is one of I mean I know Dora Dora the Explorer uh",
    "start": "748560",
    "end": "754360"
  },
  {
    "text": "is definitely it's like what is it a Google creation if I'm not mistaken uh it's a",
    "start": "754360",
    "end": "759760"
  },
  {
    "text": "nons symetric I just have this such a strong feeling that all this thing is",
    "start": "759760",
    "end": "764800"
  },
  {
    "text": "really saying is that people who are happy with their job produce code faster",
    "start": "764800",
    "end": "770040"
  },
  {
    "text": "because they're like oh I like this I like what I work on what I work on is good oh look at that this these people are producing more stuff you know I I'm",
    "start": "770040",
    "end": "777079"
  },
  {
    "text": "pretty sure it's like super subjective and it's just really a measurement of you enjoying what you work on versus",
    "start": "777079",
    "end": "784240"
  },
  {
    "text": "anything else yeah I know the problem is the quality improvement right to improve it any I know it's confirm it's it's",
    "start": "784240",
    "end": "790120"
  },
  {
    "text": "it's the most essential version of confirmation bias which is whenever you find whenever you find these things",
    "start": "790120",
    "end": "795519"
  },
  {
    "text": "about positive metrics and all that you really just find people who are like usually a small team working on a",
    "start": "795519",
    "end": "801240"
  },
  {
    "text": "precise product that's very easy for them to understand cuz they've all worked together and they're all happy with their job and it's just like ah yes",
    "start": "801240",
    "end": "808800"
  },
  {
    "text": "collap classic classic W's going on here when it actually is just simply people being happy confirmation bias was a",
    "start": "808800",
    "end": "815000"
  },
  {
    "text": "whole class I had wait you had a whole class to take back at Catholic Church oh",
    "start": "815000",
    "end": "820440"
  },
  {
    "text": "my gosh why danad why do I read what you have to",
    "start": "820440",
    "end": "826040"
  },
  {
    "text": "say 44% more of their time on producing new features than teams that don't",
    "start": "826040",
    "end": "834720"
  },
  {
    "text": "44 maybe they're just working on new features maybe they haven't hit that one curve",
    "start": "835279",
    "end": "842079"
  },
  {
    "text": "yet that really sucks you know what I'm talking about you know that one curve where it's just like ah I'm doing everything that's so good oh this is so",
    "start": "842079",
    "end": "847839"
  },
  {
    "text": "fun oh this is so lovely oh [ __ ] now it's 10 years old I'm going to quit this job and go to a new startup more of",
    "start": "847839",
    "end": "853880"
  },
  {
    "text": "their time on producing new features than teams that don't 44% that's a big win quality matters for",
    "start": "853880",
    "end": "862240"
  },
  {
    "text": "commercial reasons because we go faster overall and we create better quality code so as software professionals we",
    "start": "862240",
    "end": "870240"
  },
  {
    "text": "have can we just rewind for a quick second I know I shouldn't make fun of stock photos win quality matters for",
    "start": "870240",
    "end": "876240"
  },
  {
    "text": "commercial reasons because we go fast dude why was that guy typing with one hand what was that who who types with",
    "start": "876240",
    "end": "885800"
  },
  {
    "text": "one hand is this CSI or whatever that whatever that",
    "start": "885800",
    "end": "891160"
  },
  {
    "text": "one show is okay dude the man is just left hand typing like a champ this is",
    "start": "891160",
    "end": "897199"
  },
  {
    "text": "wild we got a right hand wrist Watcher and a and leftand typer this is I don't",
    "start": "897199",
    "end": "902360"
  },
  {
    "text": "even know what to do with this okay faster overall and we create better quality code so and if you look at the",
    "start": "902360",
    "end": "908639"
  },
  {
    "text": "screen very carefully I know okay we're breaking this I know we're breaking commercial reasons because we go fast",
    "start": "908639",
    "end": "914399"
  },
  {
    "text": "look at that look at nothing is actually changing on the screen at all and there's like three boxes this guy's like in PowerPoint overall and we create",
    "start": "914399",
    "end": "921160"
  },
  {
    "text": "better quality code so as software professionals we have a professional duty of care to do a good job this is",
    "start": "921160",
    "end": "928519"
  },
  {
    "text": "not about self-indulgence or over engineering this is what we are paid to",
    "start": "928519",
    "end": "933600"
  },
  {
    "text": "do our professional Duty what was that fake money that didn't look like Freedom Units I don't know what that money was",
    "start": "933600",
    "end": "939519"
  },
  {
    "text": "but it looked fake my guess is it's probably Canadian due to the fact that it's fake uh that's generally my my",
    "start": "939519",
    "end": "946519"
  },
  {
    "text": "general uh take on it is Canadian money it looks like Canadian money it feels like Canadian money I'm just going to",
    "start": "946519",
    "end": "953000"
  },
  {
    "text": "assume it's fake ass Canadian money duty of care to build software as efficiently as we can to do that we need to build",
    "start": "953000",
    "end": "959880"
  },
  {
    "text": "high quality software not create crap quickly because if we optimize to build",
    "start": "959880",
    "end": "965040"
  },
  {
    "text": "crap quickly then the data says that we just end up building bad software more slowly the worst of all I don't know I I",
    "start": "965040",
    "end": "972440"
  },
  {
    "text": "would love to see I really do hope we see some concrete examples cuz during the I've been programming for about 20",
    "start": "972440",
    "end": "978600"
  },
  {
    "text": "years and I have been in like the industry in some level whether it's my own startup or professionally at a place",
    "start": "978600",
    "end": "985480"
  },
  {
    "text": "or at a Fortune 500 company for at least about 15 plus years years uh and during",
    "start": "985480",
    "end": "991319"
  },
  {
    "text": "all that time I have really never seen good code I've never looked at code and said ah now this is good it's always",
    "start": "991319",
    "end": "998800"
  },
  {
    "text": "just like man this I'm about to build something and I hate what was there I'm going to Simply hack my way through it",
    "start": "998800",
    "end": "1005160"
  },
  {
    "text": "because it already exists of all possible outcomes let me pause there and say",
    "start": "1005160",
    "end": "1010440"
  },
  {
    "text": "thank you to our sponsors yeah who's the sponsor we are extremely fortunate to be sponsored by equal experts transic and",
    "start": "1010440",
    "end": "1017800"
  },
  {
    "text": "semaphor equal experts is a consultancy built on the idea of applying the techniques that we talk about here to",
    "start": "1017800",
    "end": "1024839"
  },
  {
    "text": "build great software for their clients transfig is a financial technology startup applying Advanced continuous",
    "start": "1024839",
    "end": "1031360"
  },
  {
    "text": "delivery techniques to deliver low latency trade routing services to some of the biggest financial institutions in",
    "start": "1031360",
    "end": "1037438"
  },
  {
    "text": "the world and our leading suppliers of cloud-based deployment pipeline",
    "start": "1037439",
    "end": "1043438"
  },
  {
    "text": "Technology support for your projects all by the way transfer actually sounds like",
    "start": "1043439",
    "end": "1049200"
  },
  {
    "text": "kind of a fun company right there right doing low latency pipelines I I would like that I would actually really like",
    "start": "1049200",
    "end": "1055559"
  },
  {
    "text": "that I think that'd be a lot of fun I think that'd be I think that'd be a lot of fun uh this is uh this is actually",
    "start": "1055559",
    "end": "1061120"
  },
  {
    "text": "one of my biggest pet peeps about big Tech you almost never work on something completely new then you have folks that who who don't know how to create",
    "start": "1061120",
    "end": "1067520"
  },
  {
    "text": "original abstractions they just patch things yeah it's it's a it's a very difficult place to be when that's why",
    "start": "1067520",
    "end": "1072880"
  },
  {
    "text": "people typically you you see this all the time where people that work at like say Facebook or at Netflix or at",
    "start": "1072880",
    "end": "1078280"
  },
  {
    "text": "Microsoft after any of these places for a couple years they come out and they're just not that great because they have never created something new they're just",
    "start": "1078280",
    "end": "1084640"
  },
  {
    "text": "like they're really good at patching they're just patch artists and that's that's that's tough all of these company",
    "start": "1084640",
    "end": "1091400"
  },
  {
    "text": "offer products and services that are extremely well aligned with the topics that we discuss here every week so if",
    "start": "1091400",
    "end": "1096960"
  },
  {
    "text": "you're looking for excellence in continuous delivery and software engineering please do click on their",
    "start": "1096960",
    "end": "1102000"
  },
  {
    "text": "links in the description to below to show them your support so if bad code is so important what is it and what do we",
    "start": "1102000",
    "end": "1109200"
  },
  {
    "text": "do to avoid it here is chat gpt's take on defining bad code it's not perfect",
    "start": "1109200",
    "end": "1115960"
  },
  {
    "text": "but it's also not a bad summary either so I just assume chat GPT is going to",
    "start": "1115960",
    "end": "1122039"
  },
  {
    "text": "just literally ejaculate exactly whatever is on the internet the most all right let's see maintenance difficulties",
    "start": "1122039",
    "end": "1128400"
  },
  {
    "text": "hard to read and understand bad code is often poorly structured lacking clear comments and not adhering to standard naming conventions this makes it",
    "start": "1128400",
    "end": "1135320"
  },
  {
    "text": "difficult for other developers or even original developer after some time to understand and mod the code poorly written code is more likely to contain",
    "start": "1135320",
    "end": "1140919"
  },
  {
    "text": "bugs which can be hard to track down and fix due to the convoluted unclear logic have you ever worked on a really hard uh",
    "start": "1140919",
    "end": "1147080"
  },
  {
    "text": "have you ever worked on like just I mean I've worked on some bugs that are just like super duper hard and it really wasn't bad Cod is just I'm not sure if",
    "start": "1147080",
    "end": "1153240"
  },
  {
    "text": "the difficulty of the bugs is necessarily correlated with the quality of software I'd say it's probably more",
    "start": "1153240",
    "end": "1158840"
  },
  {
    "text": "correlated with the difficulty of the problem uh performance inefficient code can slow down an application leading to",
    "start": "1158840",
    "end": "1164440"
  },
  {
    "text": "poor performance and scalability issues as the application grows react mentioned",
    "start": "1164440",
    "end": "1169880"
  },
  {
    "text": "you know I'm wondering how long until I quit getting invited to react conferences and I'm no longer allowed to",
    "start": "1169880",
    "end": "1175480"
  },
  {
    "text": "go to them at what point am I no longer allowed to go to react conferences I don't know when that time is but it's",
    "start": "1175480",
    "end": "1181240"
  },
  {
    "text": "coming I can feel it it's happening uh scalability let's see Resource Management bad code might not handle resources like memory and file handles",
    "start": "1181240",
    "end": "1188120"
  },
  {
    "text": "efficiently leading to potential leaks and crashes under high uh load is that bad code or is that just a bug I just",
    "start": "1188120",
    "end": "1194240"
  },
  {
    "text": "assume that's a bug that's just like a bug like if you have a memory leak that's just a the just a bug isn't it uh",
    "start": "1194240",
    "end": "1200200"
  },
  {
    "text": "let's see security vulnerabilities poror coding practices can introduce security vulnerabilities making the application more susceptible to attacks like a",
    "start": "1200200",
    "end": "1206559"
  },
  {
    "text": "squeal injection cross-site scripting and buffer overflows uh like I said I I wrote that one bug at Netflix that was",
    "start": "1206559",
    "end": "1212559"
  },
  {
    "text": "the categorically the worst bug ever that created its own class of uh bugs called the repulsive Grizzly attacks",
    "start": "1212559",
    "end": "1217840"
  },
  {
    "text": "that Target both memory and CPU at the same time and a single request can take down a single instance we had security",
    "start": "1217840",
    "end": "1223080"
  },
  {
    "text": "folks look at what I was building we had uh Team multiple teams of people look at what I was building everyone gave a",
    "start": "1223080",
    "end": "1228760"
  },
  {
    "text": "green check mark it's not as simple as people think security vulnerabilities are very very easy to to goof right the",
    "start": "1228760",
    "end": "1235799"
  },
  {
    "text": "repuls of grizzly exploit yeah I happen to also find that exploit and then reported it but a lot of lgmt uh lgtm",
    "start": "1235799",
    "end": "1242760"
  },
  {
    "text": "right it's not security vulnerabilities I don't think have anything to do with good or bad code I think that's just",
    "start": "1242760",
    "end": "1248080"
  },
  {
    "text": "simply that's just a an impossibly Hard Target altogether uh increase development time and cost longer",
    "start": "1248080",
    "end": "1253679"
  },
  {
    "text": "development Cycles fixing issues adding new features and refactoring bad code takes more time and effort leading to",
    "start": "1253679",
    "end": "1258760"
  },
  {
    "text": "longer development cycles and increase costs higher debugging costs debugging bad code is often more challenging and",
    "start": "1258760",
    "end": "1264159"
  },
  {
    "text": "timeconsuming requiring resources to ensure the application works correctly uh I I would like to say this is that",
    "start": "1264159",
    "end": "1270799"
  },
  {
    "text": "when you build any piece of software you build it on a set base of",
    "start": "1270799",
    "end": "1275880"
  },
  {
    "text": "assumptions this is the way that world works and then fundamentally what happens is that a PM comes in and",
    "start": "1275880",
    "end": "1282200"
  },
  {
    "text": "creates a new way in which the world works now you're going to have to do some level of hacking to kind of make",
    "start": "1282200",
    "end": "1287320"
  },
  {
    "text": "that happen then another feature is bolted on that's a new way of looking so you're going to have to do some sort of",
    "start": "1287320",
    "end": "1292520"
  },
  {
    "text": "changing which might actually cause some sort of Downstream changing and then a new feature is going to happen which of",
    "start": "1292520",
    "end": "1297960"
  },
  {
    "text": "course is going to require changes again here which is going to potentially require changes here which is going to potentially require changes all the way",
    "start": "1297960",
    "end": "1303480"
  },
  {
    "text": "down here and then it keeps happening over and over again that your fundamental world was built for one",
    "start": "1303480",
    "end": "1311120"
  },
  {
    "text": "reason but the changes you are being uh that you are making or having to create",
    "start": "1311120",
    "end": "1316279"
  },
  {
    "text": "are built on a world that you never were prepared for and so when I see something along the lines of fixing issues or",
    "start": "1316279",
    "end": "1323440"
  },
  {
    "text": "adding new features uh takes longer and longer development of time what I really hear is that you just simply have an",
    "start": "1323440",
    "end": "1328640"
  },
  {
    "text": "older product if you've ever worked on any product that's older than about five or six years this is just such a true",
    "start": "1328640",
    "end": "1335600"
  },
  {
    "text": "part of life every last projects they're all built on some assumption at some",
    "start": "1335600",
    "end": "1341120"
  },
  {
    "text": "point and adding just requires this Progressive downhill refactoring and so when people say that all these things",
    "start": "1341120",
    "end": "1346720"
  },
  {
    "text": "don't scale anymore we need to rebuild it what they're really saying is we want to reset our assumption base and then",
    "start": "1346720",
    "end": "1352400"
  },
  {
    "text": "hopefully we can be good again for the next four to five years before things explode this isn't this bad architecture",
    "start": "1352400",
    "end": "1359360"
  },
  {
    "text": "or bad starting information well no no no because when you build like I typically think most developers build",
    "start": "1359360",
    "end": "1364799"
  },
  {
    "text": "most things okay not great okay and I think it's best to try to build it okay I don't think it's great to build it",
    "start": "1364799",
    "end": "1370640"
  },
  {
    "text": "great because when you try to build it really great that it can handle every single thing you end up building your abstractions in such a way that just",
    "start": "1370640",
    "end": "1376679"
  },
  {
    "text": "simply makes your time to uh complete [ __ ] faster so just building it to do the thing it's supposed to do often",
    "start": "1376679",
    "end": "1383039"
  },
  {
    "text": "comes with a set of assumptions you're only going to have this much data you're only ever going to need to call out to this many type of data sources you're",
    "start": "1383039",
    "end": "1389320"
  },
  {
    "text": "only ever going to use say my SQL or postgress you're never like you know like there's all these assumptions that",
    "start": "1389320",
    "end": "1394679"
  },
  {
    "text": "are built in and then all of a sudden someone's like we need websockets and all of your assumptions are [ __ ] and",
    "start": "1394679",
    "end": "1399919"
  },
  {
    "text": "so now you have to like go in here and try to wle your way in to adding websockets because this wasn't what was",
    "start": "1399919",
    "end": "1406080"
  },
  {
    "text": "it originally designed for and so nothing ever actually scales and it's a difficult process and so when I see",
    "start": "1406080",
    "end": "1411520"
  },
  {
    "text": "these things where people say like ah adding new features is bad I'm like maybe it could also just be you're just",
    "start": "1411520",
    "end": "1419320"
  },
  {
    "text": "you're just using something that was built at one time in which slowly and over time it now cannot like meet those",
    "start": "1419320",
    "end": "1427440"
  },
  {
    "text": "challenging and that's it or meet those challenges and that's it there's nothing bad with that isn't",
    "start": "1427440",
    "end": "1434840"
  },
  {
    "text": "that a problem mostly with monolithic infas it's it's a problem about any sufficient any sufficient sized piece of",
    "start": "1434840",
    "end": "1442919"
  },
  {
    "text": "software when I say sufficient I mean something in the lines of 10K plus lines",
    "start": "1442919",
    "end": "1448640"
  },
  {
    "text": "write anything that's 10,000 lines of code and then add more features slowly",
    "start": "1448640",
    "end": "1455240"
  },
  {
    "text": "over time and you will find that no matter what you build no matter how well you built it things changed again I built a autod",
    "start": "1455240",
    "end": "1462240"
  },
  {
    "text": "do for gaming at Netflix and the autod do was originally built on Kafka events",
    "start": "1462240",
    "end": "1468480"
  },
  {
    "text": "and then also some [ __ ] events But as time changed it went to",
    "start": "1468480",
    "end": "1473840"
  },
  {
    "text": "Proto Buffs in a completely different storage and so all my assumptions were built on this real time thing that",
    "start": "1473840",
    "end": "1480480"
  },
  {
    "text": "actually got completely taken over to be a post like time kind of autod docking like a a postgame autod docking and so",
    "start": "1480480",
    "end": "1488360"
  },
  {
    "text": "for that to happen all of my like assumptions had to get destroyed and so",
    "start": "1488360",
    "end": "1493520"
  },
  {
    "text": "that's like a very difficult piece of software to re redo that because now I have my entire entry into my application",
    "start": "1493520",
    "end": "1499960"
  },
  {
    "text": "needing to be completely redone autod docking autod docking docking doc like doctoring right so it would take a game",
    "start": "1499960",
    "end": "1506840"
  },
  {
    "text": "you'd give it an ID and then it could go okay it was rendering at this rate uh encoding pipeline got really slow blah",
    "start": "1506840",
    "end": "1513440"
  },
  {
    "text": "blah blah blah it was able to do a bunch of the stuff you know uh and so you know when you had to change I had to change",
    "start": "1513440",
    "end": "1520279"
  },
  {
    "text": "my uh shut up with guys shut up with Docking doc me shut up when I had to",
    "start": "1520279",
    "end": "1526640"
  },
  {
    "text": "change my assumptions it just it it caused a lot of things to change right like every one of my objects had to",
    "start": "1526640",
    "end": "1532559"
  },
  {
    "text": "change every one of my type definitions had to change every one of the things had the and it just caused a whole bunch",
    "start": "1532559",
    "end": "1537720"
  },
  {
    "text": "of chaos and just because assumptions at one point were not even were assumptions at one point were",
    "start": "1537720",
    "end": "1544399"
  },
  {
    "text": "not what the future was hard to maintain then clearly it isn't easy to change if",
    "start": "1544399",
    "end": "1550399"
  },
  {
    "text": "it has scalability issues then it doesn't really work as it's meant to and all of these other things also fall into",
    "start": "1550399",
    "end": "1557440"
  },
  {
    "text": "my two category iies of doing what it's meant to and then being easy to change",
    "start": "1557440",
    "end": "1563840"
  },
  {
    "text": "which I think are the simpler more foundational and more useful ideas fundamentally good code needs to fulfill",
    "start": "1563840",
    "end": "1570039"
  },
  {
    "text": "its purpose and be easy to change everything else is just a special case of those two things it's possible that",
    "start": "1570039",
    "end": "1577159"
  },
  {
    "text": "I'm being a little bit overly reductive here but in this case I don't really think so because I can make my code",
    "start": "1577159",
    "end": "1583799"
  },
  {
    "text": "scalable or write it to eliminate security vulnerabilities and it still",
    "start": "1583799",
    "end": "1588840"
  },
  {
    "text": "might be bad code if it's hard to maintain or offers a poor user experience I feel like this just misses",
    "start": "1588840",
    "end": "1595960"
  },
  {
    "text": "the mark on all forms of Maintenance it's like you you don't have time to add",
    "start": "1595960",
    "end": "1601080"
  },
  {
    "text": "a feature and then refactor everything into today's world you have to Simply deal with the crap that's there add the",
    "start": "1601080",
    "end": "1607840"
  },
  {
    "text": "feature that you need to add and hope that you don't have to like refactor too",
    "start": "1607840",
    "end": "1612919"
  },
  {
    "text": "much that's pretty much every single time I worked on any sort of C++ project was God I hope hope I don't have to",
    "start": "1612919",
    "end": "1618799"
  },
  {
    "text": "touch logging please please I don't have to touch logging oh please please I",
    "start": "1618799",
    "end": "1624760"
  },
  {
    "text": "don't have to touch this system please if anything I don't want to do this it's just like if I can do all my changes",
    "start": "1624760",
    "end": "1631000"
  },
  {
    "text": "without touching those I know I'm going to be good but the moment I know I had to make a change there I know it's going to be really difficult so if you fix all",
    "start": "1631000",
    "end": "1638880"
  },
  {
    "text": "of these things is the code good now well maybe maybe not to achieve good",
    "start": "1638880",
    "end": "1644640"
  },
  {
    "text": "code our code needs to fix all of these things and depending on context probably",
    "start": "1644640",
    "end": "1650799"
  },
  {
    "text": "several more not listed here if up time matters a lot to my business resilience",
    "start": "1650799",
    "end": "1656159"
  },
  {
    "text": "may be a much more important defining characteristic of my system's quality than say scalability so code that isn't",
    "start": "1656159",
    "end": "1663919"
  },
  {
    "text": "resilient is bad too but that isn't covered in this list in this case that's",
    "start": "1663919",
    "end": "1670240"
  },
  {
    "text": "also uh that one can also be language difficulty",
    "start": "1670240",
    "end": "1675760"
  },
  {
    "text": "uh JavaScript I think is just I think JavaScript is difficult to",
    "start": "1675760",
    "end": "1680960"
  },
  {
    "text": "scale comparatively than go or erors that any any language that's errors as",
    "start": "1680960",
    "end": "1686480"
  },
  {
    "text": "values versus thrown errors I think that thrown errors are just just more difficult to deal with for resiliency",
    "start": "1686480",
    "end": "1693200"
  },
  {
    "text": "you can I've seen very resilient code but it's more difficult to scale",
    "start": "1693200",
    "end": "1699480"
  },
  {
    "text": "thrown error code than erors as value code a detailed list is less helpful",
    "start": "1699480",
    "end": "1706000"
  },
  {
    "text": "really than a generic statement of principle because we may always miss something off the list so although bad code is often",
    "start": "1706000",
    "end": "1713960"
  },
  {
    "text": "defined with lists like these these aren't really definitions but rather",
    "start": "1713960",
    "end": "1719240"
  },
  {
    "text": "only reminders of some of the things that we probably need to get right depending on our context but using the",
    "start": "1719240",
    "end": "1725720"
  },
  {
    "text": "more fundamental definition of code as something that fulfills its purpose and",
    "start": "1725720",
    "end": "1731640"
  },
  {
    "text": "yeah I mean hiding errors this is so this one just literally hides an error this one logs out the I mean I I",
    "start": "1731640",
    "end": "1738960"
  },
  {
    "text": "do agree that logging out your err is better than not telling any I don't think anyone's disagreeing with that",
    "start": "1738960",
    "end": "1744399"
  },
  {
    "text": "silent fails yeah I mean silent fails is is that bad code or is that just a rookie issue for me that's just rookie issues",
    "start": "1744399",
    "end": "1751640"
  },
  {
    "text": "don't use uh using Global variables hey I'm not going to lie to you sometimes I use Global",
    "start": "1751640",
    "end": "1756760"
  },
  {
    "text": "variables you know what we're doing it guess what it's a global variable right",
    "start": "1756760",
    "end": "1763000"
  },
  {
    "text": "here yeah throw my entire code I stringify everything inside of my Zig program",
    "start": "1763000",
    "end": "1769240"
  },
  {
    "text": "through a single Global buffer is that bad or good as it should be Global variables uh uh isn't inherently bad I",
    "start": "1769240",
    "end": "1776159"
  },
  {
    "text": "agree I don't think Global variables are inherently bad I think that they're just easier to do incorrect unfollowing right",
    "start": "1776159",
    "end": "1783000"
  },
  {
    "text": "now damn globalist they have Global list it's literally the worst part about it it's literally a global",
    "start": "1783000",
    "end": "1789399"
  },
  {
    "text": "list damn it's a global list this is badass I thought it was",
    "start": "1789399",
    "end": "1795039"
  },
  {
    "text": "badass too if you look at the code what it does it literally Lally grab it creates a two to the a two to the 16",
    "start": "1795039",
    "end": "1801000"
  },
  {
    "text": "sized buffer and then you just grab slices of the buffer out and then when you want to stringify something inside",
    "start": "1801000",
    "end": "1807120"
  },
  {
    "text": "say uh Zig which is kind of U you know generally speaking more hard to to stringify I just grab 250 of those bites",
    "start": "1807120",
    "end": "1813480"
  },
  {
    "text": "and stringify it right into that and then then I know for a fact that can only be used for a moment and once this",
    "start": "1813480",
    "end": "1820080"
  },
  {
    "text": "you know once I go through a couple Cycles I'm going to rewrite over myself so I don't I just simply don't hold on to it it's a scratch buffer meant to be",
    "start": "1820080",
    "end": "1826559"
  },
  {
    "text": "used in a synchronous fashion it's great right a better way to say it is keep all your variables to the smallest scope you",
    "start": "1826559",
    "end": "1832039"
  },
  {
    "text": "can correct correct preactor kills your project I actually agree with that I",
    "start": "1832039",
    "end": "1838559"
  },
  {
    "text": "fully agree with that to me this is more of a skill issue this is just like this right here bad versus good here is just",
    "start": "1838559",
    "end": "1845679"
  },
  {
    "text": "purely experience I don't think it's bad I think you're just inexperienced you just don't understand why it's good cuz",
    "start": "1845679",
    "end": "1853000"
  },
  {
    "text": "no one would hide an error unless if they had a really good reason or B they really just didn't know and that's",
    "start": "1853000",
    "end": "1860200"
  },
  {
    "text": "it it's just skill issue I you know that's it back in my days we called that",
    "start": "1860200",
    "end": "1866120"
  },
  {
    "text": "prototyping yeah it's prototyping and is easy to change he's always true so I",
    "start": "1866120",
    "end": "1872799"
  },
  {
    "text": "think he's a much more useful tool to help guide our choices that last one was",
    "start": "1872799",
    "end": "1877919"
  },
  {
    "text": "uh the last one was see so I think he's a much use",
    "start": "1877919",
    "end": "1884919"
  },
  {
    "text": "cuttingedge libraries sometimes times you know Cutting Edge is not",
    "start": "1884919",
    "end": "1890799"
  },
  {
    "text": "always good in all cases you know it's just it's just a real it's just a real a real life you know more useful tool to",
    "start": "1890799",
    "end": "1898720"
  },
  {
    "text": "help guide our choices but let's dig in a little bit deeper than that Long Function names are better than short",
    "start": "1898720",
    "end": "1904880"
  },
  {
    "text": "ones maybe sometimes right sum if you had a function called sum and it takes an",
    "start": "1904880",
    "end": "1910080"
  },
  {
    "text": "array array of ins isn't that uh do you really need do you need a",
    "start": "1910080",
    "end": "1916120"
  },
  {
    "text": "longer name I think naming the name the name should be what is most",
    "start": "1916120",
    "end": "1923000"
  },
  {
    "text": "clear in the minimal fashion I'd go with the inverse which",
    "start": "1923000",
    "end": "1929720"
  },
  {
    "text": "is you should have the name that provides the clearest indication into what it does in the shortest amount of",
    "start": "1929720",
    "end": "1936919"
  },
  {
    "text": "characters you should actually try to inverse it and make it as short as possible but as clear as possible the",
    "start": "1937200",
    "end": "1945679"
  },
  {
    "text": "name the name most lists of things that describe code",
    "start": "1945679",
    "end": "1951799"
  },
  {
    "text": "as bad look something like this and often they start with readability the problem is technical",
    "start": "1951799",
    "end": "1959120"
  },
  {
    "text": "debt bad or is it just reality is slowness of a program bad or is that",
    "start": "1959120",
    "end": "1964399"
  },
  {
    "text": "because you weren't prepared for a million lines when I did the when I did the gaming stuff I was not prepared for",
    "start": "1964399",
    "end": "1969880"
  },
  {
    "text": "10 million objects being created I just built a system that wasn't meant to be fast in that kind of",
    "start": "1969880",
    "end": "1976120"
  },
  {
    "text": "way so was it bad no I don't think so I actually don't think it was bad at all it just was life it just was the world",
    "start": "1976120",
    "end": "1981600"
  },
  {
    "text": "that I came into so was it not scalable no I just didn't optimize for a case I didn't think",
    "start": "1981600",
    "end": "1987519"
  },
  {
    "text": "existed by the way lithium you son of a [ __ ] thank you with this is that it's my impression",
    "start": "1987519",
    "end": "1995880"
  },
  {
    "text": "that what we mean when we say readability matters when comparing good code and bad is often rather ironically",
    "start": "1995880",
    "end": "2003480"
  },
  {
    "text": "Lost in Translation I quite okay I'm going to do one more so since I'm on the tower defense thing and",
    "start": "2003480",
    "end": "2009600"
  },
  {
    "text": "this is the thing I've been building for a little bit in my game State this is going to be very offensive it's very",
    "start": "2009600",
    "end": "2014840"
  },
  {
    "text": "offensive but if you look for the term alive what you'll notice is that I use this term alive a lot throughout my code",
    "start": "2014840",
    "end": "2022000"
  },
  {
    "text": "and you're probably thinking well what is all this Alive stuff being right like what is all that well it turns out that",
    "start": "2022000",
    "end": "2028919"
  },
  {
    "text": "I literally have a tower list that grows add infin item I have a creep list that",
    "start": "2028919",
    "end": "2034600"
  },
  {
    "text": "grows add infin item I do not try to be smart I just keep on allocating one new",
    "start": "2034600",
    "end": "2040399"
  },
  {
    "text": "one the thing is is that I know that there's not going to be more than a couple hundred Towers maybe at Max maybe",
    "start": "2040399",
    "end": "2046919"
  },
  {
    "text": "the amount of creeps could potentially get up to 500 at Max so it's like do I",
    "start": "2046919",
    "end": "2053599"
  },
  {
    "text": "really want to create a free list and making sure and all that I don't even prune I just simply if it's not alive I",
    "start": "2053599",
    "end": "2059800"
  },
  {
    "text": "don't update it m is that is that terrible no I actually it was from Casey Mortor which was uh which he's a great",
    "start": "2059800",
    "end": "2066200"
  },
  {
    "text": "game engine Creator he said hey when you're doing something and it's small and you know it's not going to be that big don't be smart be a Savage",
    "start": "2066200",
    "end": "2075040"
  },
  {
    "text": "create it intentionally simple because it's super easy to maintain static allocate 1K each I didn't even do that I",
    "start": "2075040",
    "end": "2081280"
  },
  {
    "text": "just simply I could do that that that would also be a really good way to do it demon is actually just have a allocation",
    "start": "2081280",
    "end": "2086440"
  },
  {
    "text": "list and a next up that would be even even easier and then assert if I cross that line and then I go oh wow look at",
    "start": "2086440",
    "end": "2092800"
  },
  {
    "text": "this I've created an environment in which uh my thousand creeps no like now breaks the world I'm now gonna change",
    "start": "2092800",
    "end": "2098760"
  },
  {
    "text": "this so it's something bigger or maybe I now need to change the data structure and so it's kind of interesting that you",
    "start": "2098760",
    "end": "2104160"
  },
  {
    "text": "could uh that I'm I'm literally doing something in which people would say",
    "start": "2104160",
    "end": "2110640"
  },
  {
    "text": "bad I don't know if it's bad be honest you learned this after programming go but real talk I learned",
    "start": "2110640",
    "end": "2117760"
  },
  {
    "text": "it after talking to Casey Mortor because you know what for me that would be considered bad programming I would never do that but Casey just kind of pulled me",
    "start": "2117760",
    "end": "2124560"
  },
  {
    "text": "back and said hey this is a time where you choose simple",
    "start": "2124560",
    "end": "2129640"
  },
  {
    "text": "overcorrect it's fine you will be able to move faster and build your game down the road you can solve that if",
    "start": "2129640",
    "end": "2137880"
  },
  {
    "text": "you need to it's easy to make that efficient that's a known problem you already know how to solve that problem I'm like I do it's called a ring buffer",
    "start": "2137880",
    "end": "2143160"
  },
  {
    "text": "and he's like exactly it's just a pool I'm like yeah okay this is good",
    "start": "2143160",
    "end": "2149400"
  },
  {
    "text": "it's easy to fix it's not hard to fix and so it's like okay then why make it",
    "start": "2149400",
    "end": "2155640"
  },
  {
    "text": "hard like this from the C too Wiki and one of the most amusing things about it",
    "start": "2155640",
    "end": "2160720"
  },
  {
    "text": "are the comments there's a link in the description to those if you want to check them out the comments argue quite",
    "start": "2160720",
    "end": "2165880"
  },
  {
    "text": "a bit about the ins and outs of these five lines of code and the coding",
    "start": "2165880",
    "end": "2171640"
  },
  {
    "text": "practice exhibited by them which goes to show that good and bad are somewhat subjective ideas when we get too lost in",
    "start": "2171640",
    "end": "2178440"
  },
  {
    "text": "the detail the code that fulfills its purpose and code that's easy to change",
    "start": "2178440",
    "end": "2184880"
  },
  {
    "text": "are a lot less subjective closer to real measures of practical outcomes that really matter to",
    "start": "2184880",
    "end": "2191359"
  },
  {
    "text": "us I feel like you just validated me and then went back on it also something that hasn't been mentioned here is easy to",
    "start": "2191359",
    "end": "2196560"
  },
  {
    "text": "change it's proportional with familiarity and experience and so a new engineer would take significantly longer than engineer who's worked on the",
    "start": "2196560",
    "end": "2202760"
  },
  {
    "text": "product so again it's emotionally bruised right now can code be bad and good at the same time depending on the",
    "start": "2202760",
    "end": "2208440"
  },
  {
    "text": "engineer looking at it that Mo just hurts me but back to my current Point fundament sher's code people oh my gosh",
    "start": "2208440",
    "end": "2217000"
  },
  {
    "text": "sorry for sorry readability doesn't mean that you the author can read it of",
    "start": "2217000",
    "end": "2223040"
  },
  {
    "text": "course you can in the moment that you wrote it you must be able to read it otherwise you couldn't have written it",
    "start": "2223040",
    "end": "2229079"
  },
  {
    "text": "but that is nowhere close to good enough not did we just get hit with a Camala Harris hold on hold on I'm coming back",
    "start": "2229079",
    "end": "2237359"
  },
  {
    "text": "have we been unburdened by what has been Quantum Code it exists both in good and bad at the same time I don't know what we just you can only write code in which",
    "start": "2237359",
    "end": "2244119"
  },
  {
    "text": "you have written for if you have written code in which you do not understand then you have having written the code it's like I've been unburdened by what has",
    "start": "2244119",
    "end": "2249960"
  },
  {
    "text": "been and I agree high enough bar to strive for readability means considerably more than that I think that",
    "start": "2249960",
    "end": "2256400"
  },
  {
    "text": "the best code is readable by almost anyone who understands the problem being",
    "start": "2256400",
    "end": "2261920"
  },
  {
    "text": "solved technical or not if you're writing medical software a non-programming doctor would understand",
    "start": "2261920",
    "end": "2269480"
  },
  {
    "text": "the core logic of your system with some disagree with that completely I actually was agreeing partly with that take cuz I",
    "start": "2269480",
    "end": "2276319"
  },
  {
    "text": "actually think he really did do a good job saying he finally defined it better which is an engineer who's very familiar",
    "start": "2276319",
    "end": "2282800"
  },
  {
    "text": "with the problem should be able to make changes I actually agree with that but then saying not technical that's",
    "start": "2282800",
    "end": "2290880"
  },
  {
    "text": "crazy right oh oh yeah hey don't worry that's called that's called an abstract Constructor okay see you can't create an",
    "start": "2290880",
    "end": "2298839"
  },
  {
    "text": "abstract object but you can inherit from the so inher no so when you inherit it",
    "start": "2298839",
    "end": "2304319"
  },
  {
    "text": "doesn't mean that two objects made one baby it means that it's like mitosis it's like they they go from one to",
    "start": "2304319",
    "end": "2311760"
  },
  {
    "text": "another you know what I mean it's like what the [ __ ] what does",
    "start": "2311760",
    "end": "2317880"
  },
  {
    "text": "that even mean dude explaining programming Concepts to non-technical people is insanity it's actually it's",
    "start": "2317880",
    "end": "2326200"
  },
  {
    "text": "actually nuts some help if you're writing a game a game player should be",
    "start": "2326200",
    "end": "2331760"
  },
  {
    "text": "able to follow the logic of your reasoning again probably with some help",
    "start": "2331760",
    "end": "2338280"
  },
  {
    "text": "so when I update a projectile I assert to ensure that the function these virtual functions I've created do create",
    "start": "2345720",
    "end": "2352520"
  },
  {
    "text": "if it's not alive it returns I grab the Target by switching on the target type and grabbing it out if it's not alive I",
    "start": "2352520",
    "end": "2359599"
  },
  {
    "text": "kill it that seems kind of odd if it if the bullet is not alive I kill the bullet wait if the target's not alive I",
    "start": "2359599",
    "end": "2366200"
  },
  {
    "text": "kill the bullet I some stuff I have a bunch of math equations go on and then I",
    "start": "2366200",
    "end": "2371359"
  },
  {
    "text": "do this little nice thing which is position add to Norm scale Delta P negative Delta P times speed it's that",
    "start": "2371359",
    "end": "2378640"
  },
  {
    "text": "simple do you know V do do do you know about vectors if you don't know about vectors I mean come on everybody knows",
    "start": "2378640",
    "end": "2385480"
  },
  {
    "text": "about a little bit about that torm scale baby kill self SS dude if you Ain if you",
    "start": "2385480",
    "end": "2391359"
  },
  {
    "text": "ain't killing yourself what are you doing okay will you share the code on Zig Tower Defense it's open it's already out there I think that this is a good",
    "start": "2391359",
    "end": "2398560"
  },
  {
    "text": "sanity check to think of the least technical person who understands the problem being able to read and",
    "start": "2398560",
    "end": "2405200"
  },
  {
    "text": "understand the intent of the code dude imagine doing Behavior trees",
    "start": "2405200",
    "end": "2410400"
  },
  {
    "text": "and then trying to explain to somebody why who deeply understands how like a a player how an NPC interacts with the",
    "start": "2410400",
    "end": "2417920"
  },
  {
    "text": "environment trying to explain to them how the behavior tree works like that that's it's it's it's it it is",
    "start": "2417920",
    "end": "2424000"
  },
  {
    "text": "impossible like I understand I think I understand like to be charitable what he's trying to say is that the code",
    "start": "2424000",
    "end": "2430319"
  },
  {
    "text": "should be if you are familiar if you are a subject expert me or if you're subject",
    "start": "2430319",
    "end": "2435839"
  },
  {
    "text": "matter expert and charitably to say you can read the code you should be able to read anyone's code that's written stuff",
    "start": "2435839",
    "end": "2441400"
  },
  {
    "text": "on this topic fair but to say that they're not technical it's just it this is very I I I'm really struggling here",
    "start": "2441400",
    "end": "2448920"
  },
  {
    "text": "I'm really struggling believing that at all especially when it comes to trees or recursion like recursion as a technical person took me like a month to really",
    "start": "2448920",
    "end": "2455359"
  },
  {
    "text": "get like get I I struggled I don't always achieve that in",
    "start": "2455359",
    "end": "2462240"
  },
  {
    "text": "my own code but I think that I usually write code that I could at least easily explain to them here's an example from",
    "start": "2462240",
    "end": "2469800"
  },
  {
    "text": "one of my pet projects this is a technical code but Within These constraints I think it's readable so it",
    "start": "2469800",
    "end": "2477400"
  },
  {
    "text": "looks like it's taking HTTP and creating some sort of method on",
    "start": "2477400",
    "end": "2483560"
  },
  {
    "text": "it in which then something else will be called to produce out HTML or a change",
    "start": "2483560",
    "end": "2489359"
  },
  {
    "text": "like to me like if I'm being completely fair this looks this I don't really understand what pram decoders is but I this this",
    "start": "2489359",
    "end": "2496240"
  },
  {
    "text": "now imagine expl like I know what classes are I know what implements is I know what private final is I know what",
    "start": "2496240",
    "end": "2502160"
  },
  {
    "text": "public same name as the class is this is Java I know the Java hey guys this is",
    "start": "2502160",
    "end": "2508079"
  },
  {
    "text": "Java imagine trying to explain this to someone who's not technical class is already difficult let",
    "start": "2508079",
    "end": "2515319"
  },
  {
    "text": "alone implements right ah it's an interface see an",
    "start": "2515319",
    "end": "2520440"
  },
  {
    "text": "interface actually operates on a it's really just like so if you think about",
    "start": "2520440",
    "end": "2527560"
  },
  {
    "text": "it an interface is just a v table which contains an Opa pointer and a list of",
    "start": "2527560",
    "end": "2534240"
  },
  {
    "text": "functions and then you use the OPA pointer as the first argument into the",
    "start": "2534240",
    "end": "2539319"
  },
  {
    "text": "function what so let's try that out this is a small part of some infrastructure",
    "start": "2539319",
    "end": "2546160"
  },
  {
    "text": "that is meant to take a Java class and use it to generate remote calls and",
    "start": "2546160",
    "end": "2551200"
  },
  {
    "text": "remote proxies to handle those remote calls translating them into calls into a service this code is on the receiver end",
    "start": "2551200",
    "end": "2558960"
  },
  {
    "text": "of one of those remote method calls and so represents the translation from a remote call of some kind into a local",
    "start": "2558960",
    "end": "2566559"
  },
  {
    "text": "call to the code that actually does the work none of the flip could you add in",
    "start": "2566559",
    "end": "2572319"
  },
  {
    "text": "during this explanation you know the sweating guy that's typing really hard the FPS try hard can you just like",
    "start": "2572319",
    "end": "2578920"
  },
  {
    "text": "overlay him on it as it happens cuz this feels this feels like the right meme to",
    "start": "2578920",
    "end": "2585920"
  },
  {
    "text": "have where it's just like he's getting in there he's sweating dude this this is it this is the moment unpopular take if",
    "start": "2585920",
    "end": "2592920"
  },
  {
    "text": "you can't dumb down if you can't dumb down a technical procedure you don't understand it fully all right dumb down",
    "start": "2592920",
    "end": "2600520"
  },
  {
    "text": "dumb down uh B uh Behavior trees right I think it just depends on the technical depth of the thing right like d down you",
    "start": "2600520",
    "end": "2607800"
  },
  {
    "text": "know what have you ever have you ever got around a group of people that aren't Technical and then they ask you technical questions such as how does",
    "start": "2607800",
    "end": "2613599"
  },
  {
    "text": "Bitcoin work have you ever attempted to explain to anybody how Bitcoin Works how about monads you want to try out monads",
    "start": "2613599",
    "end": "2621359"
  },
  {
    "text": "for sides okay so monads are like a burrito you know what I'm talking about like the you don't care about the",
    "start": "2621359",
    "end": "2627400"
  },
  {
    "text": "insides it's about the rapper it's like the tortilla it's the T it's the tortilla to the burrito now sometimes",
    "start": "2627400",
    "end": "2635000"
  },
  {
    "text": "you like a weat tortilla but some times when you get a wheat tortilla you also want to put on a little bit of flour and",
    "start": "2635000",
    "end": "2641160"
  },
  {
    "text": "maybe some beans on it but then you lift out the insides the burrito when you want to eat it you know what I'm talking",
    "start": "2641160",
    "end": "2647319"
  },
  {
    "text": "about you like put your hands in the burrito and you get the insides out that's called a lift operation or",
    "start": "2647319",
    "end": "2655160"
  },
  {
    "text": "understand the goals of this code the class is a runtime translator and here",
    "start": "2667359",
    "end": "2673359"
  },
  {
    "text": "we are registering the service that has the method that does the work and creating a translator for one specific",
    "start": "2673359",
    "end": "2680760"
  },
  {
    "text": "method core within that service identified by the method parameter to this Constructor I know that I'm largely",
    "start": "2680760",
    "end": "2687079"
  },
  {
    "text": "just read repeating what the code already says but that is kind of the point but that's the thing is that what",
    "start": "2687079",
    "end": "2693760"
  },
  {
    "text": "he just said requirs so much pre- baked in knowledge I don't I would have to understand the",
    "start": "2693760",
    "end": "2701000"
  },
  {
    "text": "problem more fully to even understand the purpose why what is this method is the method a like is is the method of",
    "start": "2701000",
    "end": "2707640"
  },
  {
    "text": "function or is it some sort of string is it some sort of is is a method an interface like how how do how is this",
    "start": "2707640",
    "end": "2713880"
  },
  {
    "text": "happen I'm I'm I'm I'm struggling understanding what's happening what is it's producing why are these paramet why",
    "start": "2713880",
    "end": "2719280"
  },
  {
    "text": "are you creating a rapper to it what is the point of a service because if you already have the method and the method params and how to decode those",
    "start": "2719280",
    "end": "2726280"
  },
  {
    "text": "parameters what's a service I'm I'm genuinely like really real talk I'm actually struggling trying to understand",
    "start": "2726280",
    "end": "2731480"
  },
  {
    "text": "that because I don't understand the words and so even though you've said all the words it doesn't mean I actually get it and so again explaining to some",
    "start": "2731480",
    "end": "2738240"
  },
  {
    "text": "explaining a technical concept to a technical person often can mean you don't understand it and that was me",
    "start": "2738240",
    "end": "2743640"
  },
  {
    "text": "attempting to try to understand I'm really trying to attempt to understand this which is I can see why you'd have a",
    "start": "2743640",
    "end": "2748960"
  },
  {
    "text": "method in pams I fail to see why you would ever have an object that's really just a function call let alone a class",
    "start": "2748960",
    "end": "2755839"
  },
  {
    "text": "like barring all the things I don't understand I don't understand that by itself why a service extends a method I",
    "start": "2755839",
    "end": "2761720"
  },
  {
    "text": "don't know I think that this is all that you need to know to put this code into context but let's look at the next layer",
    "start": "2761720",
    "end": "2769119"
  },
  {
    "text": "down and note this code is internally layered and named so that each we we",
    "start": "2769119",
    "end": "2775400"
  },
  {
    "text": "actually have someone trying to explain a behavior tree would a behavior tree basically be if this then that similar",
    "start": "2775400",
    "end": "2780960"
  },
  {
    "text": "to a conditional statement but with more actions functions no it totally depends uh it's a",
    "start": "2780960",
    "end": "2787079"
  },
  {
    "text": "Behavior tree obviously each node defines either a behavior that the thing should take or a translation of what",
    "start": "2787079",
    "end": "2796119"
  },
  {
    "text": "next node to go to based on the current state of the world and so some of those nodes are State Bound sequence some of",
    "start": "2796119",
    "end": "2803800"
  },
  {
    "text": "them aren't state-bound select uh selectors it's a it's a form of a state machine in which uses sequences and",
    "start": "2803800",
    "end": "2810240"
  },
  {
    "text": "selectors to get down to the behavior that should be operated on states rights",
    "start": "2810240",
    "end": "2815480"
  },
  {
    "text": "it's a federalist it's a Fed system GL switch switch mention yeah it's but it's",
    "start": "2815480",
    "end": "2820520"
  },
  {
    "text": "effectively a switch statement yeah they're really really great they're very very fun to make part is focused on only",
    "start": "2820520",
    "end": "2825680"
  },
  {
    "text": "one part of the job we have a layer of abstraction within this class public methods that orchestrate the work",
    "start": "2825680",
    "end": "2832880"
  },
  {
    "text": "private methods that then do the work so now what we want is to create a collection of parameter decoders is the",
    "start": "2832880",
    "end": "2840319"
  },
  {
    "text": "code for that and sure there's some technical boiler plate imposed by Java",
    "start": "2840319",
    "end": "2845359"
  },
  {
    "text": "here for creating fix size arrays and so on which we may have to explain to our",
    "start": "2845359",
    "end": "2851000"
  },
  {
    "text": "non-technical reader but for a moment try and separate the meaning of the intent of this code from the plumbing of",
    "start": "2851000",
    "end": "2858079"
  },
  {
    "text": "how Java Works imagine trying to explain what decoding is like even separating",
    "start": "2858079",
    "end": "2864079"
  },
  {
    "text": "out the fact that this is a list of decoders operating over parameters just the idea of decoding is just so",
    "start": "2864079",
    "end": "2871040"
  },
  {
    "text": "difficult dude I barely dude it took me four years of college to really get to",
    "start": "2871040",
    "end": "2876839"
  },
  {
    "text": "to the point of understanding decoding the core of what is happening here the plumbing aside is I hope pretty",
    "start": "2876839",
    "end": "2884520"
  },
  {
    "text": "clear even to our non-technical reader we're creating a new parameter decoder",
    "start": "2884520",
    "end": "2890200"
  },
  {
    "text": "for each parameter and saving it for later use here's the code that uses it",
    "start": "2890200",
    "end": "2895599"
  },
  {
    "text": "later when a method is invoked this code is called and it iterates over its predefine list of parameter decoders",
    "start": "2895599",
    "end": "2902839"
  },
  {
    "text": "that we stored earlier and uses them to decode each parameter in turn and then it makes the method core with those",
    "start": "2902839",
    "end": "2908960"
  },
  {
    "text": "decoded parameters there are several things that I think help this code to be",
    "start": "2908960",
    "end": "2914760"
  },
  {
    "text": "read is this just to make an HTTP call to something I think readability is in the eye of the beholder I think that",
    "start": "2914760",
    "end": "2921880"
  },
  {
    "text": "cirl well said wherever that went I feel like I've said that exact",
    "start": "2921880",
    "end": "2928040"
  },
  {
    "text": "same thing quite a few times it's an RCP call of RPC call of some sort",
    "start": "2928040",
    "end": "2933599"
  },
  {
    "text": "uh this feels like",
    "start": "2933599",
    "end": "2938480"
  },
  {
    "text": "readability is in the eye of the beholder how many people here walk work in",
    "start": "2938680",
    "end": "2943760"
  },
  {
    "text": "Java type one in the chat if you work in Java okay we got we got some ones we got",
    "start": "2943760",
    "end": "2950680"
  },
  {
    "text": "some ones uh out of the people that work in Java how many of you do a lot more kind of clean Cody kind of",
    "start": "2950680",
    "end": "2956839"
  },
  {
    "text": "abstraction style take like this is type 69 in the chat if you have to do more",
    "start": "2956839",
    "end": "2962240"
  },
  {
    "text": "clean code SL that stuff hey Jeremy Jeremy we got we got a couple 69s okay",
    "start": "2962240",
    "end": "2967559"
  },
  {
    "text": "out of the 69ers how many of you guys feel like this this is pretty straightforward type",
    "start": "2967559",
    "end": "2975160"
  },
  {
    "text": "code in the sense that you're you're not actually Str struggling with following along we got a couple ones in the chat I",
    "start": "2975160",
    "end": "2981839"
  },
  {
    "text": "think what this means is that readability really is in the eye of the",
    "start": "2981839",
    "end": "2987520"
  },
  {
    "text": "beholder I think walking through this like what I think about is debug ability",
    "start": "2987520",
    "end": "2992960"
  },
  {
    "text": "my ability to debug something obviously is based on the familiarity with the code and the comp the the comp uh the",
    "start": "2992960",
    "end": "2999000"
  },
  {
    "text": "complicated nature of the bug but if I had to walk through all this just to get to the point of calling a service with",
    "start": "2999000",
    "end": "3004920"
  },
  {
    "text": "the parameters I feel like this would be really hard so for me it's more about how many times how many times do I have",
    "start": "3004920",
    "end": "3010920"
  },
  {
    "text": "to switch context to understand what's happening so when we finally get down to invoke what I have to do is I have to",
    "start": "3010920",
    "end": "3018079"
  },
  {
    "text": "understand how the parameters decode what's happening then to pass that back in and then how the method",
    "start": "3018079",
    "end": "3025799"
  },
  {
    "text": "invokes on the service like there's a there's quite a bit of abstraction that I have to understand because then it's",
    "start": "3025799",
    "end": "3031200"
  },
  {
    "text": "like oh wow I don't really understand why we're decoding parameters that way for me to understand why we're decoding parameters that way I then have to back",
    "start": "3031200",
    "end": "3037280"
  },
  {
    "text": "up and understand how we initialize the parameters then I have to figure out how were those parameters passed in to be",
    "start": "3037280",
    "end": "3043079"
  },
  {
    "text": "initialized inside of this so I have to like walk quite a bit of distance to figure out where or who is calling what",
    "start": "3043079",
    "end": "3049799"
  },
  {
    "text": "and then if this thing is called by a bunch of different methods I then need to figure out and how to debug on the",
    "start": "3049799",
    "end": "3054880"
  },
  {
    "text": "outside to figure out who is is actually calling and setting up this service caller and for me that's like a bunch of",
    "start": "3054880",
    "end": "3061599"
  },
  {
    "text": "steps and for me that's very very difficult to uh build or to understand it because now I have to understand a",
    "start": "3061599",
    "end": "3067359"
  },
  {
    "text": "lot of the world just to understand a single call that's a that's a lot of hops to understand why X parameters goes",
    "start": "3067359",
    "end": "3074520"
  },
  {
    "text": "into y method the documentation I'm I'm less concerned about documentation I typically find it just it's much easier",
    "start": "3074520",
    "end": "3081079"
  },
  {
    "text": "to understand uh what the code does by walking through a a bugger like when I really want to understand complex code I",
    "start": "3081079",
    "end": "3087200"
  },
  {
    "text": "walk I use a debugger it just feels easier to me it just always will feel easier to meable each part of the code",
    "start": "3087200",
    "end": "3093839"
  },
  {
    "text": "is small and focused on a simple part of the task I've chosen names that I aim to",
    "start": "3093839",
    "end": "3099359"
  },
  {
    "text": "be descriptive in terms of the problem and their role in solving it given the",
    "start": "3099359",
    "end": "3104400"
  },
  {
    "text": "context of the problem I'm aiming for names that are meaningful and practically given an understanding of",
    "start": "3104400",
    "end": "3110400"
  },
  {
    "text": "the context clear enough that their role in solving the problem is it's true I I",
    "start": "3110400",
    "end": "3116160"
  },
  {
    "text": "would say that the name the generally speaking the names except for the react service method obviously I don't know is",
    "start": "3116160",
    "end": "3122000"
  },
  {
    "text": "that react library is that something else blah blah blah who really cares about that part but the rest yeah I'd say good names good naming he did a good",
    "start": "3122000",
    "end": "3128160"
  },
  {
    "text": "J good job on the day a good job on the the naming uh except for this right here",
    "start": "3128160",
    "end": "3133319"
  },
  {
    "text": "can we all agree this catch exception thr throw new exception I'm emotionally hurt by just exception rapping okay this",
    "start": "3133319",
    "end": "3140280"
  },
  {
    "text": "exception rapping is just emotionally bruising me the catch and throw clear to most people",
    "start": "3140280",
    "end": "3147160"
  },
  {
    "text": "including me in the future and in that last respect this code was indeed readable because I wrote this some years",
    "start": "3147160",
    "end": "3154119"
  },
  {
    "text": "ago and still understood it well enough now to try and explain it to you I think that this counts as readable code second",
    "start": "3154119",
    "end": "3161480"
  },
  {
    "text": "in this list of common problems though with bad code is complexity striving for",
    "start": "3161480",
    "end": "3166680"
  },
  {
    "text": "readability in the sense of easy understandability helps us to manage complexity certainly but even more so",
    "start": "3166680",
    "end": "3174520"
  },
  {
    "text": "working to prefer testable code helps with that I I will say I I do want",
    "start": "3174520",
    "end": "3180240"
  },
  {
    "text": "to throw it out there that for me readability honestly matters less than I",
    "start": "3180240",
    "end": "3185680"
  },
  {
    "text": "understand how State moves for me that's where most of the complication comes in",
    "start": "3185680",
    "end": "3190960"
  },
  {
    "text": "is trying to picture in my head the state and how it changes over time",
    "start": "3190960",
    "end": "3196400"
  },
  {
    "text": "because that code obviously had State coming in that would then call into a list of decoders that would produce a",
    "start": "3196400",
    "end": "3201520"
  },
  {
    "text": "new state and so like trying to understand that state trans transition",
    "start": "3201520",
    "end": "3206559"
  },
  {
    "text": "is would be very difficult and that would take me more time to try to understand like for me that's like",
    "start": "3206559",
    "end": "3211799"
  },
  {
    "text": "that's where I'd spend all my time deep State mentioned that too by adopting test",
    "start": "3211799",
    "end": "3218359"
  },
  {
    "text": "driven development it's difficult to avoid preferring testable code in our designs it promotes greater modularity",
    "start": "3218359",
    "end": "3225160"
  },
  {
    "text": "cohesion separation of concerns abstraction and sensibly managed coupling it's hard to write testable",
    "start": "3225160",
    "end": "3231240"
  },
  {
    "text": "code that doesn't demonstrate those features let's look again at my very simple real world code code as I said",
    "start": "3231240",
    "end": "3238119"
  },
  {
    "text": "this is part of a real world personal project it's not written as a demo for this video that's why I chose it I",
    "start": "3238119",
    "end": "3245000"
  },
  {
    "text": "developed it from scratch with test driven development and it works and does what it's meant to do but it's also very",
    "start": "3245000",
    "end": "3251359"
  },
  {
    "text": "easy to change because it is modular it's a collection of several small pieces each one dedicated to a small",
    "start": "3251359",
    "end": "3258280"
  },
  {
    "text": "Single part of the overall task so it's also cohesive and has good separation of",
    "start": "3258280",
    "end": "3264880"
  },
  {
    "text": "concerns one thing that difficult though as he talks about so this is the this is the Theo argument which I think Theo is",
    "start": "3264880",
    "end": "3270440"
  },
  {
    "text": "correct on this argument that level of testing where you're testing all these different little separation of concerns all these different little Parts uh it",
    "start": "3270440",
    "end": "3277440"
  },
  {
    "text": "gets really hard to refactor because when you refactor you literally invalidate a whole series of tests",
    "start": "3277440",
    "end": "3283240"
  },
  {
    "text": "because now you have a new Pipeline and I do find that that type of over testing can be really frustrating and I never",
    "start": "3283240",
    "end": "3290160"
  },
  {
    "text": "know the correct I never know the correct level to do it and I'm still trying to figure that out in game",
    "start": "3290160",
    "end": "3295960"
  },
  {
    "text": "program how to do it right I have some other ideas that I want to do but I I don't",
    "start": "3295960",
    "end": "3301040"
  },
  {
    "text": "know if I'm correct on it yet you know what I mean I'm still working on that that thing a deleting test is part of",
    "start": "3301040",
    "end": "3306559"
  },
  {
    "text": "the process I know but if you delete the test then you ruin the entire idea of code being able to refactor with",
    "start": "3306559",
    "end": "3312160"
  },
  {
    "text": "confidence right if you can refactor with confidence that means you have a set of tests that didn't go away when",
    "start": "3312160",
    "end": "3319079"
  },
  {
    "text": "you changed a couple methods it means you don't have confidence anymore and so there's like definitely like a there's",
    "start": "3319079",
    "end": "3325000"
  },
  {
    "text": "definitely something in there uh TD is in my opinion a way to premature optimize interesting maybe as long as",
    "start": "3325000",
    "end": "3331559"
  },
  {
    "text": "those are your personal projects and not group projects you'll never be right about uh refactoring get different level",
    "start": "3331559",
    "end": "3338079"
  },
  {
    "text": "of other folks involved is the measure yeah perhaps it's just you probably I mean you're definitely right at some",
    "start": "3338079",
    "end": "3343359"
  },
  {
    "text": "level but just the entire idea that tdd is the answer to making something that like reduces its complexity sometimes",
    "start": "3343359",
    "end": "3349240"
  },
  {
    "text": "you add complexity by making something debuggable or Not debuggable by making it testable by making it testable in the",
    "start": "3349240",
    "end": "3355960"
  },
  {
    "text": "sense being able to do isolated individual tests to it you necessarily have to add in an abstraction in which",
    "start": "3355960",
    "end": "3361760"
  },
  {
    "text": "you can mock this does happen and when you can mock something it can immediately make things",
    "start": "3361760",
    "end": "3369960"
  },
  {
    "text": "more difficult because now you have a layer in which it",
    "start": "3369960",
    "end": "3375000"
  },
  {
    "text": "jumps because each part does one thing and everything needed to achieve that",
    "start": "3375000",
    "end": "3380160"
  },
  {
    "text": "one thing is within the small relatively simple piece of code each piece of code interacts with others through",
    "start": "3380160",
    "end": "3385839"
  },
  {
    "text": "abstraction that hide information The Constructor delegates the most complicated part of the initialization",
    "start": "3385839",
    "end": "3392960"
  },
  {
    "text": "to all right someone's asking what mocking is just so everybody everybody's on the same page it's really really simple let's just say you have a function called Foo and it needs to go",
    "start": "3392960",
    "end": "3400200"
  },
  {
    "text": "out and say makes a request to a service and return data so you could have something that looks like this uh a URL",
    "start": "3400200",
    "end": "3407039"
  },
  {
    "text": "and then it returns out some sort of object right well what's the problem here well obviously I'm going to have to",
    "start": "3407039",
    "end": "3412480"
  },
  {
    "text": "go out here and I'm going to have to curl out this URL well I've just B found the implementation of my function to a",
    "start": "3412480",
    "end": "3418599"
  },
  {
    "text": "very specific way to get get data Maybe we don't want to do that",
    "start": "3418599",
    "end": "3424599"
  },
  {
    "text": "maybe we want to be able to read it from a file or maybe we want to do something else so instead of a URL perhaps you",
    "start": "3424599",
    "end": "3430880"
  },
  {
    "text": "have something like a you know like a data provider right some sort of Provider you see this term all the time",
    "start": "3430880",
    "end": "3437280"
  },
  {
    "text": "provider I think I've even used this term right and then this returns out an object and then you're like okay now I",
    "start": "3437280",
    "end": "3442440"
  },
  {
    "text": "can do a provider now this means that when I'm testing long as I to the same interface I can pass in a fake provider",
    "start": "3442440",
    "end": "3450079"
  },
  {
    "text": "that Returns the object you want versus doing the direct action that you meant it to take and so a mock can literally",
    "start": "3450079",
    "end": "3457200"
  },
  {
    "text": "mock out part of the service now the danger to mocks obviously is if I was doing a curl what are the potential",
    "start": "3457200",
    "end": "3463440"
  },
  {
    "text": "erors 400s",
    "start": "3463440",
    "end": "3468720"
  },
  {
    "text": "500s what about a 300 why happen if you get a 300 why Happ if you get a 302 what",
    "start": "3468720",
    "end": "3474640"
  },
  {
    "text": "Happ if you get a 303 do you know the difference between a 302 versus a 303 you may not even know the",
    "start": "3474640",
    "end": "3482640"
  },
  {
    "text": "difference yeah why happen if you get hit with 418 I'm a teapot it's a one the difference is",
    "start": "3482640",
    "end": "3489039"
  },
  {
    "text": "one well that is unit testing at that point because you have to test the type of errors that are coming back from the",
    "start": "3489039",
    "end": "3494720"
  },
  {
    "text": "provider in fact that is like very very much so you to testing is that you are testing a single unit in which your",
    "start": "3494720",
    "end": "3500000"
  },
  {
    "text": "abstraction has potential air conditionings you're testing a little if State a literal if statement within your",
    "start": "3500000",
    "end": "3505280"
  },
  {
    "text": "code coach hter saying nope why is it not so let me get this straight you have a function in which has something that's",
    "start": "3505280",
    "end": "3512680"
  },
  {
    "text": "passed in in which you are going to call that thing out const you know const x",
    "start": "3512680",
    "end": "3517960"
  },
  {
    "text": "equals await this thing out do an operation on it oh but now you realize crap I now",
    "start": "3517960",
    "end": "3524280"
  },
  {
    "text": "need to handle the types of errors that are coming out of this so your Foo function gets a little bit more intense",
    "start": "3524280",
    "end": "3530359"
  },
  {
    "text": "it now does a couple different air conditions is it a 302 is it this does it need the redirect and you have some",
    "start": "3530359",
    "end": "3536359"
  },
  {
    "text": "sort of abstract object now now you're like I need an abstract object like re-quest or maybe new you new new",
    "start": "3536359",
    "end": "3542319"
  },
  {
    "text": "location or maybe new object to go create uh if your let's see if your statements to test are abstractions",
    "start": "3542319",
    "end": "3547440"
  },
  {
    "text": "wrapping curl uh curl uh the same way you wrap your mock again this is the whole problem that I'm saying is that",
    "start": "3547440",
    "end": "3553400"
  },
  {
    "text": "this could be an entire enormous set of different errors right what happen if it's a retriable error and you have",
    "start": "3553400",
    "end": "3558520"
  },
  {
    "text": "providers that are retriable you have to test that if fu is retryable that is a unit test you have to make a provider",
    "start": "3558520",
    "end": "3564119"
  },
  {
    "text": "that mocks out the ability to do retrying x amount of times and then does it like that is that could easily be six",
    "start": "3564119",
    "end": "3571200"
  },
  {
    "text": "seven eight lines of code inside of Fu and maybe it's 100 lines of code inside your Mock and that's the biggest problem",
    "start": "3571200",
    "end": "3576799"
  },
  {
    "text": "is mocks suck mocks don't represent reality 302s are for redirects correct",
    "start": "3576799",
    "end": "3583200"
  },
  {
    "text": "and 303s are for redirects but you do not forward on uh the the htb verb so a 302 if you",
    "start": "3583200",
    "end": "3591119"
  },
  {
    "text": "do a delete call you have to forward on the delete to the next URL where is a 303 you actually forward on a get",
    "start": "3591119",
    "end": "3599160"
  },
  {
    "text": "request for those that don't know it it can be a little bit trixy right a little trixy there all right hold on one second",
    "start": "3599160",
    "end": "3605760"
  },
  {
    "text": "there we go uh a 307 you have to preserve verb and data oh I did not I did not know",
    "start": "3605760",
    "end": "3611240"
  },
  {
    "text": "that a 307 is uh preserve verb and data see all these different things there's a lot there's quite a bit in in in all",
    "start": "3611240",
    "end": "3618079"
  },
  {
    "text": "these things right how do you test the same scenario if not with MOX uh that's",
    "start": "3618079",
    "end": "3624880"
  },
  {
    "text": "the hard part a general speaking whenever whenever I do something that",
    "start": "3624880",
    "end": "3630359"
  },
  {
    "text": "requires a mock I typically what I do is I try to do the object translation as a function",
    "start": "3630359",
    "end": "3638799"
  },
  {
    "text": "this is like my logic that you know takes a and produces",
    "start": "3638799",
    "end": "3644520"
  },
  {
    "text": "B it operates over a function and then I have a separate function that's usually on the outside",
    "start": "3644520",
    "end": "3650799"
  },
  {
    "text": "that's like get get a that way I can test the thing that I",
    "start": "3650799",
    "end": "3656640"
  },
  {
    "text": "find to be very complicated and I don't test the thing I don't find to be very complicated I'm not going to write a",
    "start": "3656640",
    "end": "3662039"
  },
  {
    "text": "mock I typically do not like mocks I typically think that when you're doing",
    "start": "3662039",
    "end": "3668200"
  },
  {
    "text": "mocks no bueno no bueno to a private method",
    "start": "3668200",
    "end": "3673559"
  },
  {
    "text": "that's clearly named for what it is that it achieves in the context of the Constructor that allows me to keep the",
    "start": "3673559",
    "end": "3679440"
  },
  {
    "text": "intent of the Constructor clear to any reader these abstractions hide information depending on the few",
    "start": "3679440",
    "end": "3686119"
  },
  {
    "text": "simplest parameters to get the job done so even internally it's also minimally",
    "start": "3686119",
    "end": "3691319"
  },
  {
    "text": "coupled to achieve its job and each part of the code even at the level of methods",
    "start": "3691319",
    "end": "3696640"
  },
  {
    "text": "within a class is abstracted from every other so that I can change any single method with minimal or zero impact on",
    "start": "3696640",
    "end": "3704640"
  },
  {
    "text": "the others there is more to even these few lines though this code is clearly",
    "start": "3704640",
    "end": "3710359"
  },
  {
    "text": "objectoriented in terms of design a react service method is an object and it",
    "start": "3710359",
    "end": "3715960"
  },
  {
    "text": "contains a collection of instances of parameter decoders which are abstract and polymorphic and aimed at decoding",
    "start": "3715960",
    "end": "3723400"
  },
  {
    "text": "specific types of method parameters there is a state and behavior here so",
    "start": "3723400",
    "end": "3728760"
  },
  {
    "text": "it's definitely objectoriented but look a little closer this code also has no",
    "start": "3728760",
    "end": "3733839"
  },
  {
    "text": "side effects all of the state in these things is created during its initialization and is declared final",
    "start": "3733839",
    "end": "3741240"
  },
  {
    "text": "which in Java means that it won't change once it has been initialized by I do I mean that that",
    "start": "3741240",
    "end": "3747000"
  },
  {
    "text": "does that is nice I'm curious what final means in the sense that does it mean the pointer to the object won't",
    "start": "3747000",
    "end": "3754160"
  },
  {
    "text": "change or does it mean that the internals to the object won't change I'm",
    "start": "3754160",
    "end": "3759760"
  },
  {
    "text": "pretty sure it means that the pointer to the objects will not change yeah it's pointer only right it's reference only",
    "start": "3759760",
    "end": "3765079"
  },
  {
    "text": "just to make sure I understand final correctly it's just the final object not",
    "start": "3765079",
    "end": "3770760"
  },
  {
    "text": "the final thing side effects it does not create side effects well it can it can have internal mutab ility right so if",
    "start": "3770760",
    "end": "3776960"
  },
  {
    "text": "you call a service and that service is invoked you could actually have a state change on that service that renders it",
    "start": "3776960",
    "end": "3782160"
  },
  {
    "text": "into a new state the next time so there is there mutability is difficult",
    "start": "3782160",
    "end": "3788359"
  },
  {
    "text": "mutability equals business mutability is your business value it's just a this is just a F this is just a constant",
    "start": "3788359",
    "end": "3795480"
  },
  {
    "text": "pointer uh but I mean he is correct though uh having some sort of immutability on o design does make this",
    "start": "3795480",
    "end": "3802319"
  },
  {
    "text": "a little bit easier to reason about in the sense that you now just have this one item in which you're creating and that's that okay that's fair that that",
    "start": "3802319",
    "end": "3808880"
  },
  {
    "text": "that that does make it nice notability okay calm down so the state never changes for a given instance this too",
    "start": "3808880",
    "end": "3816799"
  },
  {
    "text": "limits unexpected changes in Behavior later and even though it's a functional idea perhaps here I'm using it in an O",
    "start": "3816799",
    "end": "3824440"
  },
  {
    "text": "system so this code is behaviorally simpler and so more deterministic as a",
    "start": "3824440",
    "end": "3829680"
  },
  {
    "text": "result I'm not using this code to boast about my design or as an example of",
    "start": "3829680",
    "end": "3834920"
  },
  {
    "text": "perfection I'm sure that there are ways that it could be better I'm always sure that there are ways that my code could",
    "start": "3834920",
    "end": "3840799"
  },
  {
    "text": "be better I don't know if you will agree with me the problem I have generally",
    "start": "3840799",
    "end": "3846000"
  },
  {
    "text": "with o especially o like this is I don't really see it doing anything right like I don't it's a very complicated way to",
    "start": "3846000",
    "end": "3854000"
  },
  {
    "text": "not do a lot of things I feel like this could be done also in just very little bit of code and it just feels like",
    "start": "3854000",
    "end": "3859480"
  },
  {
    "text": "there's a lot of abstraction and having to jump around just to make not that much happen I mean this is literally a",
    "start": "3859480",
    "end": "3865920"
  },
  {
    "text": "data stream that you need to parse out a data stream and call it on a service you know and so I understand this is",
    "start": "3865920",
    "end": "3871880"
  },
  {
    "text": "readable but for me this is just really hard to De bug if there's a bug somewhere in here there's just a lot of abstraction that you're going to have to",
    "start": "3871880",
    "end": "3877680"
  },
  {
    "text": "comb through to find out where exactly does the bug exist that's why I've never liked this approach that's why I've",
    "start": "3877680",
    "end": "3884319"
  },
  {
    "text": "always generally stayed away from wrapping abstractions with abstractions because it just becomes a nightmare and",
    "start": "3884319",
    "end": "3889799"
  },
  {
    "text": "then when your underlying abstractions change you have this like whole chain event that",
    "start": "3889799",
    "end": "3895720"
  },
  {
    "text": "or not that it's it's readable and less complex but even if you don't given that",
    "start": "3895720",
    "end": "3901279"
  },
  {
    "text": "it is well unit tested as a result of being built with tdd from the start I",
    "start": "3901279",
    "end": "3906319"
  },
  {
    "text": "hope that you will agree that this Cod is certainly easy to change for example I can trivially add support for new",
    "start": "3906319",
    "end": "3913599"
  },
  {
    "text": "parameter types if I want to without changing any of the code that I've shown you so far and because of the separation",
    "start": "3913599",
    "end": "3919760"
  },
  {
    "text": "of concerns in my design you have no idea how the transport of the data representing a method called works or",
    "start": "3919760",
    "end": "3926520"
  },
  {
    "text": "how messages are rooted between caller and receiver these are indeed separate concerns and so don't impact on this",
    "start": "3926520",
    "end": "3933680"
  },
  {
    "text": "part of the code at all I chose but how many different ways are you doing",
    "start": "3933680",
    "end": "3938960"
  },
  {
    "text": "something right like how how many different ways do you need to do something I'm always so confused I'm",
    "start": "3938960",
    "end": "3945240"
  },
  {
    "text": "always very difficult I always have such a like I I often I run into these things where there's like tons of abstraction",
    "start": "3945240",
    "end": "3950960"
  },
  {
    "text": "and then when you really get to Brass taxs it's just like one way to do it you built it all for the flexibility of an",
    "start": "3950960",
    "end": "3958440"
  },
  {
    "text": "event that never happens and when it does happen you have to rewrite it anyways but you built it all just so you",
    "start": "3958440",
    "end": "3964319"
  },
  {
    "text": "can unit test specific things and it's just like is this really where the W's happening maybe if you took all this",
    "start": "3964319",
    "end": "3971680"
  },
  {
    "text": "away and you get a stream of data and you just simply decode the parameters which by the way you have to read the",
    "start": "3971680",
    "end": "3977720"
  },
  {
    "text": "entire stream when you do uh when when you decode the parameters just having stream to parameters as a singular",
    "start": "3977720",
    "end": "3984240"
  },
  {
    "text": "function that's really easy to test because you craft the stream you want you show the output craft the stream you want show the output there we go bada",
    "start": "3984240",
    "end": "3990520"
  },
  {
    "text": "bing bada boom I have three unit tests that cover these kind of Corners go for it live on and prosper and then you just you know it just feels like it's just it",
    "start": "3990520",
    "end": "3997319"
  },
  {
    "text": "just feels like it's easier I'm a one implementation I'm a very much so avoid abstracting almost exclusively kind of",
    "start": "3997319",
    "end": "4004640"
  },
  {
    "text": "person speculative architecture very dangerous it is very very dangerous I",
    "start": "4004640",
    "end": "4009760"
  },
  {
    "text": "have something similar I did seven years ago that was written in C++ if you'd like to check it out I don't want to my very first time building a game was way",
    "start": "4009760",
    "end": "4016039"
  },
  {
    "text": "back in like 200 7 or 6 or something like that and I did it in c x and a and I had like 7",
    "start": "4016039",
    "end": "4023640"
  },
  {
    "text": "eight nine layers of inheritance and that's kind of where I learned that I I I I get emotionally",
    "start": "4023640",
    "end": "4029960"
  },
  {
    "text": "bruised and then I just didn't want to do that anymore there's this code because it's real world not some",
    "start": "4029960",
    "end": "4035760"
  },
  {
    "text": "artificial example this is what my code tends to look like when I write it I",
    "start": "4035760",
    "end": "4040839"
  },
  {
    "text": "also chose it because I think it demonstrates what I mean about using the tools of modern software engineering to",
    "start": "4040839",
    "end": "4047440"
  },
  {
    "text": "guide me towards what I think are better results by working iteratively in small steps and using tests via test driven",
    "start": "4047440",
    "end": "4053839"
  },
  {
    "text": "development as small focused experiments in Design This is the sort of code that",
    "start": "4053839",
    "end": "4059160"
  },
  {
    "text": "I tend to end up with if you'd like to learn more about that and how to do it do check out my book each part here is",
    "start": "4059160",
    "end": "4066640"
  },
  {
    "text": "consciously designed to be as simple as I can make it I think that that uh I",
    "start": "4066640",
    "end": "4072119"
  },
  {
    "text": "think this really just expresses that some people learn to think in a specific way and they like to think that",
    "start": "4072119",
    "end": "4078119"
  },
  {
    "text": "way that's it I think I I don't see how this you can't produce the same ending",
    "start": "4078119",
    "end": "4084000"
  },
  {
    "text": "result of software his way or somebody else's way I think you just have to Simply drink the Kool-Aid and do it",
    "start": "4084000",
    "end": "4090480"
  },
  {
    "text": "specifically one way and you do it long enough you'll be good at it I like my tribe join my tribe yeah I think this is",
    "start": "4090480",
    "end": "4097199"
  },
  {
    "text": "just a tri this is just I mean it's just tribalism that's it I'm not convinced that o isn't a successful way to create",
    "start": "4097199",
    "end": "4104440"
  },
  {
    "text": "things it's just not the way I like to create things but maybe if I understood the abstractions and I did it for years",
    "start": "4104440",
    "end": "4110960"
  },
  {
    "text": "maybe it'd become really simple maybe then it becomes the engineering side of things each part",
    "start": "4110960",
    "end": "4117199"
  },
  {
    "text": "even function method variable is focused on doing one thing and so I think that",
    "start": "4117199",
    "end": "4123480"
  },
  {
    "text": "all of these things help to make this code easier to understand more readable",
    "start": "4123480",
    "end": "4128838"
  },
  {
    "text": "by the way I do more likely to achieve my goals for the code whatever they may be they also make the code much easier",
    "start": "4128839",
    "end": "4135040"
  },
  {
    "text": "to change change when I've got something wrong or the circumstances of the use of my code change and require me to change",
    "start": "4135040",
    "end": "4140920"
  },
  {
    "text": "it to match them thank you very much for watching and if you're not already a patreon supporter please do consider",
    "start": "4140920",
    "end": "4147440"
  },
  {
    "text": "joining and supporting our Channel and and our production of this content and thank you to all of our existing patreon",
    "start": "4147440",
    "end": "4153798"
  },
  {
    "text": "supporters so far there are lots of benefits to joining as a patreon member and lots of additional information that",
    "start": "4153799",
    "end": "4160480"
  },
  {
    "text": "you can gain from there thank you and bye-bye",
    "start": "4160480",
    "end": "4166000"
  },
  {
    "text": "got to turn that down just slightly really just get slapped in the face all right um well all right good luck with",
    "start": "4169679",
    "end": "4177758"
  },
  {
    "text": "that one flip uh flip I hope you enjoy this hour and 20 minute video just for",
    "start": "4177759",
    "end": "4183960"
  },
  {
    "text": "you now that my friends is a wrap uh yeah I think I always just have a really",
    "start": "4183960",
    "end": "4189040"
  },
  {
    "text": "difficult time with o I know people are saying there's people in here that are just like I love o p but I like every time I've done",
    "start": "4189040",
    "end": "4196360"
  },
  {
    "text": "Enterprise level code I've always just disliked it cuz there's just so much type it's like a form of type",
    "start": "4196360",
    "end": "4202719"
  },
  {
    "text": "masturbation but it's like pattern masturbation just to do the thing and then it often just comes down to you",
    "start": "4202719",
    "end": "4208440"
  },
  {
    "text": "buil all of this apparatus just to produce one config for one service and",
    "start": "4208440",
    "end": "4214239"
  },
  {
    "text": "it's just like why why all of this all of",
    "start": "4214239",
    "end": "4219320"
  },
  {
    "text": "this right why why all of this when it was just nothing this entire time I feel",
    "start": "4221560",
    "end": "4228640"
  },
  {
    "text": "Bamboozled I feel absolutely Bamboozled by my config Factory when at the end of",
    "start": "4228640",
    "end": "4234840"
  },
  {
    "text": "the day it's the same thing all of this uh for 10 users for my startup and all of it for 10 users for my startup hey",
    "start": "4234840",
    "end": "4240800"
  },
  {
    "text": "don't worry I mean we've done it wrong in all multiple directions right like one thing that you can see a lot is that",
    "start": "4240800",
    "end": "4246960"
  },
  {
    "text": "there's this joke that runs around that says I have more microservices than users and that's not",
    "start": "4246960",
    "end": "4253440"
  },
  {
    "text": "necessarily a joke as this does actually happen right op often leads to over",
    "start": "4253440",
    "end": "4259840"
  },
  {
    "text": "engineering I think it's because you can see why a problem can be solved away I",
    "start": "4259840",
    "end": "4265280"
  },
  {
    "text": "think oop has this really interesting uh aspect to it where you have all these patterns and you can easily go oh I can",
    "start": "4265280",
    "end": "4272960"
  },
  {
    "text": "see how this pattern could work to solve this problem and then as you start doing",
    "start": "4272960",
    "end": "4278440"
  },
  {
    "text": "it you're like okay well now that I'm doing it I realize that this part could be solved with this pattern and then you",
    "start": "4278440",
    "end": "4284040"
  },
  {
    "text": "start doing and then oh but I'm a test deriven development so at the end of all my leaf nodes I then need to use",
    "start": "4284040",
    "end": "4290440"
  },
  {
    "text": "strategy pattern such that I can make sure I can test each one of these little leaf nodes in my in my kind of",
    "start": "4290440",
    "end": "4296360"
  },
  {
    "text": "architecture and so it's just like you keep abstracting all the way through and so",
    "start": "4296360",
    "end": "4302679"
  },
  {
    "text": "just it just it hurts op would work if people had self-control I don't have self-control I know myself better to not",
    "start": "4302679",
    "end": "4308920"
  },
  {
    "text": "have self control meanwhile procedural is do it yourself master",
    "start": "4308920",
    "end": "4316000"
  },
  {
    "text": "masturbation also Fair procedural could be [ __ ] code too you're absolutely right I think what we're all saying is your",
    "start": "4316000",
    "end": "4323840"
  },
  {
    "text": "code is horseshit and it doesn't really matter your beautiful code that you think is good and well engineered is",
    "start": "4323840",
    "end": "4330520"
  },
  {
    "text": "absolute horeshit to somebody else that is it that's the only way around it I'm",
    "start": "4330520",
    "end": "4335880"
  },
  {
    "text": "sorry that is not blackpill that is not a Doomer that is just reality hate to say",
    "start": "4335880",
    "end": "4343080"
  },
  {
    "text": "it I hate to be the one that kind of breaks your bubble like a real talk I",
    "start": "4343080",
    "end": "4348199"
  },
  {
    "text": "think I I I think that this is great code right here this is the entry point to my engine I think this is a great",
    "start": "4348199",
    "end": "4354000"
  },
  {
    "text": "game Loop honestly I think this game Loop is Stellar I think this game Loop is amazing I think this game this I've",
    "start": "4354000",
    "end": "4360600"
  },
  {
    "text": "seen a lot of game loops and this game Loop is the best one I've ever seen I know plenty of them and they keep telling me that I've written some of the",
    "start": "4360600",
    "end": "4366719"
  },
  {
    "text": "best game Loops ever and some people would say this is horseshit code and that's fine but for me it's beautiful",
    "start": "4366719",
    "end": "4373560"
  },
  {
    "text": "okay this game Loop [ __ ] I know that's what I'm saying this is a beautiful one okay we got like Deltas we have a",
    "start": "4373560",
    "end": "4380560"
  },
  {
    "text": "multiplier effect we have input we have active creeps and determining what to do and validating State and rendering all",
    "start": "4380560",
    "end": "4387040"
  },
  {
    "text": "in one giant loop it's amazing and yet do you think this is going to go do do",
    "start": "4387040",
    "end": "4392080"
  },
  {
    "text": "you think anyone that's like you think anyone's going to be happy about this this this piece of code that this game",
    "start": "4392080",
    "end": "4398360"
  },
  {
    "text": "Loop that spans what 40 lines of code 35 lines of code with another how much",
    "start": "4398360",
    "end": "4404080"
  },
  {
    "text": "setup code she that ain't going to happen whoa whoa whoa are you trying to insult horeshit okay calm down but again",
    "start": "4404080",
    "end": "4412120"
  },
  {
    "text": "this is what I consider pretty I think this is beautiful I think this is wonderful h on that thing so who's right",
    "start": "4412120",
    "end": "4421639"
  },
  {
    "text": "I don't know is there ever right or wrong I feel like the older I get the more I realize that I just want to build",
    "start": "4421639",
    "end": "4428600"
  },
  {
    "text": "something that's it the name is the premen",
    "start": "4428600",
    "end": "4436239"
  }
]