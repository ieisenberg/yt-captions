[
  {
    "text": "I have written jvm in Rust Andre you son",
    "start": "0",
    "end": "5220"
  },
  {
    "text": "of a I'm in all right lately I've",
    "start": "5220",
    "end": "7140"
  },
  {
    "text": "been spending quite a bit of time",
    "start": "7140",
    "end": "8220"
  },
  {
    "text": "learning rust and as any sane person",
    "start": "8220",
    "end": "9960"
  },
  {
    "text": "would do after writing a few hundred",
    "start": "9960",
    "end": "11400"
  },
  {
    "text": "lines of programs or a few hundred lines",
    "start": "11400",
    "end": "13559"
  },
  {
    "text": "programs I've decided to take on",
    "start": "13559",
    "end": "15000"
  },
  {
    "text": "something a little bit more ambitious I",
    "start": "15000",
    "end": "17340"
  },
  {
    "text": "have written a Java virtual machine in",
    "start": "17340",
    "end": "19080"
  },
  {
    "text": "Rust yeah with a lot of originality and",
    "start": "19080",
    "end": "22320"
  },
  {
    "text": "called it rjvm the code is available on",
    "start": "22320",
    "end": "24779"
  },
  {
    "text": "GitHub oh dear",
    "start": "24779",
    "end": "26840"
  },
  {
    "text": "oh oh yes oh yes oh I want all of this I",
    "start": "26840",
    "end": "31920"
  },
  {
    "text": "want to stress that this is my toy jvm",
    "start": "31920",
    "end": "33840"
  },
  {
    "text": "built for learning uh purposes and not",
    "start": "33840",
    "end": "36300"
  },
  {
    "text": "serious implementation in particular it",
    "start": "36300",
    "end": "37920"
  },
  {
    "text": "does not support generics threads",
    "start": "37920",
    "end": "39300"
  },
  {
    "text": "Reflections annotations IO just in time",
    "start": "39300",
    "end": "41700"
  },
  {
    "text": "compiler string and turning",
    "start": "41700",
    "end": "44520"
  },
  {
    "text": "pretty good",
    "start": "44520",
    "end": "45780"
  },
  {
    "text": "okay still pretty good however there are",
    "start": "45780",
    "end": "48300"
  },
  {
    "text": "quite a few non-trivial things to",
    "start": "48300",
    "end": "49559"
  },
  {
    "text": "implement control flow statements yep uh",
    "start": "49559",
    "end": "52200"
  },
  {
    "text": "primitive and object Creations a virtual",
    "start": "52200",
    "end": "54120"
  },
  {
    "text": "and static method invocation exceptions",
    "start": "54120",
    "end": "55860"
  },
  {
    "text": "garbage collection Class A resolution",
    "start": "55860",
    "end": "57660"
  },
  {
    "text": "from a jar file this last one is insane",
    "start": "57660",
    "end": "61100"
  },
  {
    "text": "effing jar files effing class resolution",
    "start": "61100",
    "end": "64699"
  },
  {
    "text": "effing Java for example the following uh",
    "start": "64700",
    "end": "68040"
  },
  {
    "text": "is part of a test Suite class stack",
    "start": "68040",
    "end": "70560"
  },
  {
    "text": "Trace printing public static void main",
    "start": "70560",
    "end": "72720"
  },
  {
    "text": "all right throw a ball new exception",
    "start": "72720",
    "end": "74939"
  },
  {
    "text": "stack elements get all these ones okay",
    "start": "74939",
    "end": "77280"
  },
  {
    "text": "print all these things okay yeah print",
    "start": "77280",
    "end": "79560"
  },
  {
    "text": "step okay it uses a real rt.jar",
    "start": "79560",
    "end": "82799"
  },
  {
    "text": "containing the class from open jdk7 thus",
    "start": "82799",
    "end": "85799"
  },
  {
    "text": "in the example above the Java Lang stack",
    "start": "85799",
    "end": "88020"
  },
  {
    "text": "Trace element comes from the real jdk",
    "start": "88020",
    "end": "90420"
  },
  {
    "text": "I'm very happy oh my goodness I'm very",
    "start": "90420",
    "end": "92640"
  },
  {
    "text": "happy with what I've learned about",
    "start": "92640",
    "end": "94080"
  },
  {
    "text": "Ruston about how to implement a virtual",
    "start": "94080",
    "end": "95820"
  },
  {
    "text": "machine in particular I'm super happy",
    "start": "95820",
    "end": "97259"
  },
  {
    "text": "about having implemented a real working",
    "start": "97259",
    "end": "99060"
  },
  {
    "text": "garbage collector it's quite mediocre",
    "start": "99060",
    "end": "101400"
  },
  {
    "text": "but it's mine and I love it I love this",
    "start": "101400",
    "end": "103560"
  },
  {
    "text": "mentality by the way this guy is just a",
    "start": "103560",
    "end": "105600"
  },
  {
    "text": "champ Andre champ status right here",
    "start": "105600",
    "end": "107520"
  },
  {
    "text": "given that I have achieved what I have",
    "start": "107520",
    "end": "109140"
  },
  {
    "text": "set out to do originally I've decided to",
    "start": "109140",
    "end": "110700"
  },
  {
    "text": "stop the project here I know there are",
    "start": "110700",
    "end": "112619"
  },
  {
    "text": "bugs but I do not plan to fix them",
    "start": "112619",
    "end": "116299"
  },
  {
    "text": "love it I love everything I'm hearing",
    "start": "117600",
    "end": "119340"
  },
  {
    "text": "about I love everything here in this",
    "start": "119340",
    "end": "121200"
  },
  {
    "text": "post I will give you an overview of how",
    "start": "121200",
    "end": "123060"
  },
  {
    "text": "my jvm Works in further articles I will",
    "start": "123060",
    "end": "125759"
  },
  {
    "text": "go into more detail about some of the",
    "start": "125759",
    "end": "127259"
  },
  {
    "text": "aspects discussed here okay code",
    "start": "127259",
    "end": "128640"
  },
  {
    "text": "organization uh the code is a standard",
    "start": "128640",
    "end": "130679"
  },
  {
    "text": "rust project I've split into three",
    "start": "130679",
    "end": "131879"
  },
  {
    "text": "crates a reader which reads the dot",
    "start": "131879",
    "end": "133680"
  },
  {
    "text": "class files okay VM which contains the",
    "start": "133680",
    "end": "136140"
  },
  {
    "text": "virtual machine that can execute code as",
    "start": "136140",
    "end": "137580"
  },
  {
    "text": "a library nice and Vim CLE which",
    "start": "137580",
    "end": "139319"
  },
  {
    "text": "contains the very simple command line",
    "start": "139319",
    "end": "140640"
  },
  {
    "text": "launcher for the uh to run the VM in the",
    "start": "140640",
    "end": "142739"
  },
  {
    "text": "spirit of java executable okay good I'm",
    "start": "142739",
    "end": "145200"
  },
  {
    "text": "considering extracting the reader crate",
    "start": "145200",
    "end": "146760"
  },
  {
    "text": "in a separate repository and Publishing",
    "start": "146760",
    "end": "148319"
  },
  {
    "text": "it on crates i o since it could actually",
    "start": "148319",
    "end": "149819"
  },
  {
    "text": "be useful to someone else",
    "start": "149819",
    "end": "152099"
  },
  {
    "text": "yeah it could be parsing a class file",
    "start": "152099",
    "end": "154260"
  },
  {
    "text": "interesting as you know Java's compiled",
    "start": "154260",
    "end": "156000"
  },
  {
    "text": "language the Java C compile takes your",
    "start": "156000",
    "end": "157860"
  },
  {
    "text": "dot Java source and produces uh various",
    "start": "157860",
    "end": "160260"
  },
  {
    "text": "dot class files",
    "start": "160260",
    "end": "162540"
  },
  {
    "text": "uh generally distributed in a DOT jar",
    "start": "162540",
    "end": "164640"
  },
  {
    "text": "file which is just a zip oh really jar",
    "start": "164640",
    "end": "167400"
  },
  {
    "text": "is just zip I thought I knew that I feel",
    "start": "167400",
    "end": "168900"
  },
  {
    "text": "like I knew that thus the first thing to",
    "start": "168900",
    "end": "170760"
  },
  {
    "text": "do is execute some Java code is to load",
    "start": "170760",
    "end": "172560"
  },
  {
    "text": "the dot class file containing the byte",
    "start": "172560",
    "end": "174239"
  },
  {
    "text": "code generated by the compiler a class",
    "start": "174239",
    "end": "176340"
  },
  {
    "text": "file contains the various things",
    "start": "176340",
    "end": "177800"
  },
  {
    "text": "metadata about the class such as its",
    "start": "177800",
    "end": "180660"
  },
  {
    "text": "name or the source file name the super",
    "start": "180660",
    "end": "182700"
  },
  {
    "text": "class name what the hell is a super",
    "start": "182700",
    "end": "184200"
  },
  {
    "text": "class name I know what a superclass is",
    "start": "184200",
    "end": "187319"
  },
  {
    "text": "uh and the implementing interfaces the",
    "start": "187319",
    "end": "189840"
  },
  {
    "text": "implemented interfaces the fields along",
    "start": "189840",
    "end": "191159"
  },
  {
    "text": "with their types and annotations methods",
    "start": "191159",
    "end": "192840"
  },
  {
    "text": "with their descriptor which is a string",
    "start": "192840",
    "end": "194340"
  },
  {
    "text": "representing the type of each parameter",
    "start": "194340",
    "end": "196319"
  },
  {
    "text": "and the method's return metadata such as",
    "start": "196319",
    "end": "198360"
  },
  {
    "text": "the throw Clauses annotations generic",
    "start": "198360",
    "end": "200280"
  },
  {
    "text": "information is the byte code along with",
    "start": "200280",
    "end": "201659"
  },
  {
    "text": "some extra metadata such as exception",
    "start": "201659",
    "end": "203459"
  },
  {
    "text": "Handler table and the line numbers table",
    "start": "203459",
    "end": "206640"
  },
  {
    "text": "as mentioned above for rjvm I have",
    "start": "206640",
    "end": "209099"
  },
  {
    "text": "created a separate crate named reader",
    "start": "209099",
    "end": "210959"
  },
  {
    "text": "which can parse the class file and",
    "start": "210959",
    "end": "212459"
  },
  {
    "text": "return a rust struct that models the",
    "start": "212459",
    "end": "214739"
  },
  {
    "text": "class and all of its content let's look",
    "start": "214739",
    "end": "216360"
  },
  {
    "text": "at that struct really quickly",
    "start": "216360",
    "end": "218940"
  },
  {
    "text": "look at that look at that",
    "start": "218940",
    "end": "221819"
  },
  {
    "text": "look at that beauty oh yeah nice job",
    "start": "221819",
    "end": "224280"
  },
  {
    "text": "using format nice job I like it oh this",
    "start": "224280",
    "end": "227459"
  },
  {
    "text": "is great",
    "start": "227459",
    "end": "228720"
  },
  {
    "text": "this is great uh maybe toss in like an",
    "start": "228720",
    "end": "231599"
  },
  {
    "text": "into I think an into could be pretty",
    "start": "231599",
    "end": "233280"
  },
  {
    "text": "cool right here so that way you could",
    "start": "233280",
    "end": "234599"
  },
  {
    "text": "take like maybe a path buff and just",
    "start": "234599",
    "end": "236760"
  },
  {
    "text": "call into and you could just into I love",
    "start": "236760",
    "end": "239159"
  },
  {
    "text": "those kind of things personally it makes",
    "start": "239159",
    "end": "240900"
  },
  {
    "text": "me feel pretty happy you know what I",
    "start": "240900",
    "end": "242400"
  },
  {
    "text": "mean have you ever had have you ever",
    "start": "242400",
    "end": "243900"
  },
  {
    "text": "done those they always make me really",
    "start": "243900",
    "end": "245280"
  },
  {
    "text": "happy uh in twos I don't know why this",
    "start": "245280",
    "end": "247500"
  },
  {
    "text": "is good well done",
    "start": "247500",
    "end": "250400"
  },
  {
    "text": "well done beautiful",
    "start": "250500",
    "end": "253760"
  },
  {
    "text": "um pretty good pretty pretty code all",
    "start": "254220",
    "end": "256799"
  },
  {
    "text": "right",
    "start": "256799",
    "end": "257639"
  },
  {
    "text": "executing a methods the main API of the",
    "start": "257639",
    "end": "260699"
  },
  {
    "text": "VM crate is VM invoke which is used to",
    "start": "260699",
    "end": "263340"
  },
  {
    "text": "execute a method it takes a call stack",
    "start": "263340",
    "end": "265139"
  },
  {
    "text": "which contains the various call frame",
    "start": "265139",
    "end": "266639"
  },
  {
    "text": "one for each method being executed for",
    "start": "266639",
    "end": "269040"
  },
  {
    "text": "executing main the call stack will",
    "start": "269040",
    "end": "270960"
  },
  {
    "text": "initially be empty and a new frame will",
    "start": "270960",
    "end": "273720"
  },
  {
    "text": "be created to run it okay then each",
    "start": "273720",
    "end": "275699"
  },
  {
    "text": "function invocation will add a new frame",
    "start": "275699",
    "end": "277500"
  },
  {
    "text": "to the call stack okay cool when a",
    "start": "277500",
    "end": "279360"
  },
  {
    "text": "method's execution completes its",
    "start": "279360",
    "end": "280740"
  },
  {
    "text": "corresponding frame will be dropped and",
    "start": "280740",
    "end": "282000"
  },
  {
    "text": "then removed from the call stack awesome",
    "start": "282000",
    "end": "283460"
  },
  {
    "text": "uh most methods will be implemented in",
    "start": "283460",
    "end": "285840"
  },
  {
    "text": "Java and thus their bytecode will be",
    "start": "285840",
    "end": "287460"
  },
  {
    "text": "executed however rjvm all supports",
    "start": "287460",
    "end": "289560"
  },
  {
    "text": "native methods IE methods that are",
    "start": "289560",
    "end": "291479"
  },
  {
    "text": "implemented directly by the jvm and not",
    "start": "291479",
    "end": "293759"
  },
  {
    "text": "in the Java byte code oh there's quite a",
    "start": "293759",
    "end": "295979"
  },
  {
    "text": "few of them in the lower parts of the",
    "start": "295979",
    "end": "297540"
  },
  {
    "text": "Java API where the interaction of the",
    "start": "297540",
    "end": "299400"
  },
  {
    "text": "operating system for example to do i o",
    "start": "299400",
    "end": "301259"
  },
  {
    "text": "or the support runtime if Nest or is",
    "start": "301259",
    "end": "303660"
  },
  {
    "text": "necessary some examples of let's say of",
    "start": "303660",
    "end": "305880"
  },
  {
    "text": "the latter you might have seen included",
    "start": "305880",
    "end": "306960"
  },
  {
    "text": "in this okay this makes sense array copy",
    "start": "306960",
    "end": "309000"
  },
  {
    "text": "yeah yeah yeah okay that all makes sense",
    "start": "309000",
    "end": "310919"
  },
  {
    "text": "these are implemented by the rust by",
    "start": "310919",
    "end": "313320"
  },
  {
    "text": "rust functions oh cool okay cool",
    "start": "313320",
    "end": "317100"
  },
  {
    "text": "this is actually really interesting uh",
    "start": "317100",
    "end": "319139"
  },
  {
    "text": "the jvm is a stack based virtual machine",
    "start": "319139",
    "end": "320880"
  },
  {
    "text": "I.E the bytecode instructions operate",
    "start": "320880",
    "end": "322560"
  },
  {
    "text": "mainly on value stack there is also a",
    "start": "322560",
    "end": "324780"
  },
  {
    "text": "set of local variables identified by",
    "start": "324780",
    "end": "326400"
  },
  {
    "text": "index that can be used to store values",
    "start": "326400",
    "end": "328080"
  },
  {
    "text": "and pass arguments to methods these are",
    "start": "328080",
    "end": "329880"
  },
  {
    "text": "associated with each call frame okay",
    "start": "329880",
    "end": "331560"
  },
  {
    "text": "that makes sense you have all your",
    "start": "331560",
    "end": "332940"
  },
  {
    "text": "variables all the information you need",
    "start": "332940",
    "end": "334139"
  },
  {
    "text": "per call frame to do this okay modeling",
    "start": "334139",
    "end": "336300"
  },
  {
    "text": "values and objects the value of models",
    "start": "336300",
    "end": "338520"
  },
  {
    "text": "and possibly value of the local variable",
    "start": "338520",
    "end": "340560"
  },
  {
    "text": "stack element or object Fields is also",
    "start": "340560",
    "end": "342539"
  },
  {
    "text": "implemented as follows uh we got a nice",
    "start": "342539",
    "end": "344759"
  },
  {
    "text": "enum value uninitialized I love the",
    "start": "344759",
    "end": "348060"
  },
  {
    "text": "named I love these all named",
    "start": "348060",
    "end": "350699"
  },
  {
    "text": "abstract objects nice null",
    "start": "350699",
    "end": "355259"
  },
  {
    "text": "classic ethanol nice if you look here we",
    "start": "355259",
    "end": "358199"
  },
  {
    "text": "have uninitialized",
    "start": "358199",
    "end": "360120"
  },
  {
    "text": "and we have null it's almost like we",
    "start": "360120",
    "end": "362340"
  },
  {
    "text": "have undefined and null this is",
    "start": "362340",
    "end": "364380"
  },
  {
    "text": "fantastic",
    "start": "364380",
    "end": "366600"
  },
  {
    "text": "okay but it should never be on there",
    "start": "366600",
    "end": "367919"
  },
  {
    "text": "okay I see that",
    "start": "367919",
    "end": "369660"
  },
  {
    "text": "how long can I use this in Microsoft",
    "start": "369660",
    "end": "371639"
  },
  {
    "text": "soon soon you'll be able to finally run",
    "start": "371639",
    "end": "374100"
  },
  {
    "text": "rust with jvm everybody's favorite thing",
    "start": "374100",
    "end": "377100"
  },
  {
    "text": "ever",
    "start": "377100",
    "end": "378000"
  },
  {
    "text": "as an aside this is one place where a",
    "start": "378000",
    "end": "380220"
  },
  {
    "text": "some type such as Russ enum is a",
    "start": "380220",
    "end": "382259"
  },
  {
    "text": "wonderful abstraction it is great for",
    "start": "382259",
    "end": "383639"
  },
  {
    "text": "expressing the fact that a value might",
    "start": "383639",
    "end": "385080"
  },
  {
    "text": "be of multiple different types",
    "start": "385080",
    "end": "386160"
  },
  {
    "text": "absolutely heterogeneous lists are just",
    "start": "386160",
    "end": "388380"
  },
  {
    "text": "like so common in programming I'm",
    "start": "388380",
    "end": "389819"
  },
  {
    "text": "shocked that we still use what we use",
    "start": "389819",
    "end": "391680"
  },
  {
    "text": "today for storing objects and their",
    "start": "391680",
    "end": "393539"
  },
  {
    "text": "values I initially used a simple struct",
    "start": "393539",
    "end": "395400"
  },
  {
    "text": "object containing a reference to the",
    "start": "395400",
    "end": "397080"
  },
  {
    "text": "class the object or the model uh to",
    "start": "397080",
    "end": "399900"
  },
  {
    "text": "model the object's type and a VEC value",
    "start": "399900",
    "end": "402240"
  },
  {
    "text": "for storing the field however when I",
    "start": "402240",
    "end": "404220"
  },
  {
    "text": "implemented the garbage collector I",
    "start": "404220",
    "end": "405479"
  },
  {
    "text": "modified this to use lower level",
    "start": "405479",
    "end": "406740"
  },
  {
    "text": "implementation with a ton of pointers",
    "start": "406740",
    "end": "408660"
  },
  {
    "text": "and casts quite C style in the current",
    "start": "408660",
    "end": "410580"
  },
  {
    "text": "implementation and Abstract object with",
    "start": "410580",
    "end": "412500"
  },
  {
    "text": "models a real object or an array is",
    "start": "412500",
    "end": "414479"
  },
  {
    "text": "simply a pointer to an array of bytes",
    "start": "414479",
    "end": "416160"
  },
  {
    "text": "which contains a couple headers words",
    "start": "416160",
    "end": "417900"
  },
  {
    "text": "and then the field values beautiful",
    "start": "417900",
    "end": "420539"
  },
  {
    "text": "oh I love this",
    "start": "420539",
    "end": "422759"
  },
  {
    "text": "oh that's fantastic that's kind of",
    "start": "422759",
    "end": "424680"
  },
  {
    "text": "similar to how JavaScript core used to",
    "start": "424680",
    "end": "426240"
  },
  {
    "text": "do it I'm not sure what they do now but",
    "start": "426240",
    "end": "427919"
  },
  {
    "text": "there was something very very similar to",
    "start": "427919",
    "end": "429360"
  },
  {
    "text": "this right it's just like in the end",
    "start": "429360",
    "end": "431220"
  },
  {
    "text": "it's just like a little array buffer",
    "start": "431220",
    "end": "432720"
  },
  {
    "text": "underneath the hood in which you put a",
    "start": "432720",
    "end": "435240"
  },
  {
    "text": "bunch of stuff into and you just offset",
    "start": "435240",
    "end": "437520"
  },
  {
    "text": "into it to read these fields right",
    "start": "437520",
    "end": "438900"
  },
  {
    "text": "that's all it really is in the end",
    "start": "438900",
    "end": "442220"
  },
  {
    "text": "is this ruscript no this is Java in Rust",
    "start": "444360",
    "end": "449780"
  },
  {
    "text": "uh you're gonna do you gotta have Java",
    "start": "449940",
    "end": "452880"
  },
  {
    "text": "but instead of having the a different",
    "start": "452880",
    "end": "455280"
  },
  {
    "text": "run time you have you have a rust run",
    "start": "455280",
    "end": "457800"
  },
  {
    "text": "time so why would you want that well",
    "start": "457800",
    "end": "459780"
  },
  {
    "text": "it's written in Rust primary feature",
    "start": "459780",
    "end": "461580"
  },
  {
    "text": "okay executing instructions executing a",
    "start": "461580",
    "end": "464280"
  },
  {
    "text": "method means executing its bytecode",
    "start": "464280",
    "end": "465720"
  },
  {
    "text": "instructions one at a time the jvm has a",
    "start": "465720",
    "end": "467819"
  },
  {
    "text": "wide list of instructions over 200",
    "start": "467819",
    "end": "469380"
  },
  {
    "text": "encoded uh by one byte in the byte code",
    "start": "469380",
    "end": "472259"
  },
  {
    "text": "many instructions are followed by",
    "start": "472259",
    "end": "474419"
  },
  {
    "text": "arguments and some have the variable",
    "start": "474419",
    "end": "476460"
  },
  {
    "text": "length this is modeled in the code uh",
    "start": "476460",
    "end": "478740"
  },
  {
    "text": "type of instruction okay standard stuff",
    "start": "478740",
    "end": "480419"
  },
  {
    "text": "right that makes all sense uh you just",
    "start": "480419",
    "end": "482880"
  },
  {
    "text": "have all these instructions come in each",
    "start": "482880",
    "end": "484259"
  },
  {
    "text": "thing has to do something it's just a",
    "start": "484259",
    "end": "486300"
  },
  {
    "text": "big",
    "start": "486300",
    "end": "487139"
  },
  {
    "text": "I mean it's just a loop with a switch in",
    "start": "487139",
    "end": "488819"
  },
  {
    "text": "it effectively uh the execution the",
    "start": "488819",
    "end": "490560"
  },
  {
    "text": "method will keep as mentioned above a",
    "start": "490560",
    "end": "492180"
  },
  {
    "text": "stack and an array of local variables",
    "start": "492180",
    "end": "494039"
  },
  {
    "text": "referred by the instruction by their",
    "start": "494039",
    "end": "495780"
  },
  {
    "text": "index it will also initialize a program",
    "start": "495780",
    "end": "497220"
  },
  {
    "text": "counter to zero that is the address of",
    "start": "497220",
    "end": "499199"
  },
  {
    "text": "the next instruction to execute the",
    "start": "499199",
    "end": "501120"
  },
  {
    "text": "instruction will be processed in the",
    "start": "501120",
    "end": "502560"
  },
  {
    "text": "program counter updated okay beautiful",
    "start": "502560",
    "end": "504300"
  },
  {
    "text": "this is awesome generally Advanced by",
    "start": "504300",
    "end": "506400"
  },
  {
    "text": "one uh and various jump instructions can",
    "start": "506400",
    "end": "509220"
  },
  {
    "text": "move to different locations remember if",
    "start": "509220",
    "end": "511319"
  },
  {
    "text": "you did if you did Advent of code I",
    "start": "511319",
    "end": "512940"
  },
  {
    "text": "think it was like 2019 Maybe",
    "start": "512940",
    "end": "517380"
  },
  {
    "text": "in 2019",
    "start": "517440",
    "end": "519659"
  },
  {
    "text": "um",
    "start": "519659",
    "end": "521719"
  },
  {
    "text": "2019 did this exact thing right where uh",
    "start": "522200",
    "end": "525360"
  },
  {
    "text": "in Advent of code where you did like an",
    "start": "525360",
    "end": "526980"
  },
  {
    "text": "INT computer you built like a really",
    "start": "526980",
    "end": "529320"
  },
  {
    "text": "sweet in computer okay everyone is",
    "start": "529320",
    "end": "530640"
  },
  {
    "text": "saying there's something amazing how to",
    "start": "530640",
    "end": "532380"
  },
  {
    "text": "get sued by Oracle and the rust",
    "start": "532380",
    "end": "533640"
  },
  {
    "text": "Foundation at the same time this is a",
    "start": "533640",
    "end": "535380"
  },
  {
    "text": "great name I will consider it",
    "start": "535380",
    "end": "538080"
  },
  {
    "text": "how to get sued by Oracle and the rust",
    "start": "538080",
    "end": "540060"
  },
  {
    "text": "Foundation at the same time",
    "start": "540060",
    "end": "542700"
  },
  {
    "text": "this is beautiful",
    "start": "542700",
    "end": "544680"
  },
  {
    "text": "um",
    "start": "544680",
    "end": "545339"
  },
  {
    "text": "a special family of instructions uh is",
    "start": "545339",
    "end": "547320"
  },
  {
    "text": "made of those that can invoke another",
    "start": "547320",
    "end": "548580"
  },
  {
    "text": "method there are various ways of",
    "start": "548580",
    "end": "550860"
  },
  {
    "text": "resolving which method should be invoked",
    "start": "550860",
    "end": "552839"
  },
  {
    "text": "virtual or static look up uh are the",
    "start": "552839",
    "end": "555420"
  },
  {
    "text": "main ones but there are others after",
    "start": "555420",
    "end": "557580"
  },
  {
    "text": "resolving the correct instructions rjvm",
    "start": "557580",
    "end": "560100"
  },
  {
    "text": "will add a new frame to the call stack",
    "start": "560100",
    "end": "561959"
  },
  {
    "text": "and start the methods execution the",
    "start": "561959",
    "end": "563459"
  },
  {
    "text": "methods return value will be pushed onto",
    "start": "563459",
    "end": "565080"
  },
  {
    "text": "the uh stack unless the uh it is void",
    "start": "565080",
    "end": "567660"
  },
  {
    "text": "yep okay so if you're not familiar with",
    "start": "567660",
    "end": "569820"
  },
  {
    "text": "the call frame this sounds like just",
    "start": "569820",
    "end": "570959"
  },
  {
    "text": "like what a call frame would do you have",
    "start": "570959",
    "end": "572160"
  },
  {
    "text": "to make memory for both the return value",
    "start": "572160",
    "end": "574320"
  },
  {
    "text": "and the return uh address all that kind",
    "start": "574320",
    "end": "576839"
  },
  {
    "text": "of stuff the Java byte code format is",
    "start": "576839",
    "end": "578700"
  },
  {
    "text": "quite interesting and I plan to dedicate",
    "start": "578700",
    "end": "580080"
  },
  {
    "text": "a post okay cool exceptions exceptions",
    "start": "580080",
    "end": "582779"
  },
  {
    "text": "are quite complex beasts to implement",
    "start": "582779",
    "end": "584220"
  },
  {
    "text": "since they break normal control flow",
    "start": "584220",
    "end": "585779"
  },
  {
    "text": "geez that's weird so they're both hard",
    "start": "585779",
    "end": "588240"
  },
  {
    "text": "to program and hard to make",
    "start": "588240",
    "end": "591120"
  },
  {
    "text": "shocking shocking that crazy ass control",
    "start": "591120",
    "end": "595140"
  },
  {
    "text": "flow is hard to make and might return",
    "start": "595140",
    "end": "598140"
  },
  {
    "text": "early from a method and propagate on the",
    "start": "598140",
    "end": "600240"
  },
  {
    "text": "call stack I'm pretty happy with the way",
    "start": "600240",
    "end": "602040"
  },
  {
    "text": "I've implemented them though and I'm",
    "start": "602040",
    "end": "603480"
  },
  {
    "text": "going to show you some of the relevant",
    "start": "603480",
    "end": "605160"
  },
  {
    "text": "code the first thing you know is that",
    "start": "605160",
    "end": "606660"
  },
  {
    "text": "any catch block corresponds to an entry",
    "start": "606660",
    "end": "608640"
  },
  {
    "text": "of the methods exception table each",
    "start": "608640",
    "end": "610680"
  },
  {
    "text": "entry contains a range of covered",
    "start": "610680",
    "end": "612360"
  },
  {
    "text": "program counters the address for the",
    "start": "612360",
    "end": "614399"
  },
  {
    "text": "first instruction in the catch block the",
    "start": "614399",
    "end": "616380"
  },
  {
    "text": "exceptions class name which the block",
    "start": "616380",
    "end": "618180"
  },
  {
    "text": "catches oh very interesting so the",
    "start": "618180",
    "end": "620160"
  },
  {
    "text": "signature call frame execute",
    "start": "620160",
    "end": "621360"
  },
  {
    "text": "instructions as follows okay because",
    "start": "621360",
    "end": "622980"
  },
  {
    "text": "yeah that's right because you can catch",
    "start": "622980",
    "end": "624420"
  },
  {
    "text": "only specific kind of Errors so you may",
    "start": "624420",
    "end": "626640"
  },
  {
    "text": "not like your first catch may not catch",
    "start": "626640",
    "end": "628740"
  },
  {
    "text": "everything so you may need to go to the",
    "start": "628740",
    "end": "630120"
  },
  {
    "text": "next catch",
    "start": "630120",
    "end": "631320"
  },
  {
    "text": "Wild",
    "start": "631320",
    "end": "633180"
  },
  {
    "text": "Wild",
    "start": "633180",
    "end": "634860"
  },
  {
    "text": "just absolutely wild all right this is",
    "start": "634860",
    "end": "637320"
  },
  {
    "text": "great this is great uh and the standard",
    "start": "637320",
    "end": "639360"
  },
  {
    "text": "rest result type is this perfect thus",
    "start": "639360",
    "end": "641700"
  },
  {
    "text": "let's see executing an instruction can",
    "start": "641700",
    "end": "643740"
  },
  {
    "text": "result in four possible States the",
    "start": "643740",
    "end": "645120"
  },
  {
    "text": "instruction was executed successfully in",
    "start": "645120",
    "end": "646500"
  },
  {
    "text": "the execution of the current method can",
    "start": "646500",
    "end": "647880"
  },
  {
    "text": "continue the ins the instruction was",
    "start": "647880",
    "end": "650040"
  },
  {
    "text": "executed successfully and its return",
    "start": "650040",
    "end": "651420"
  },
  {
    "text": "instruction thus the current method",
    "start": "651420",
    "end": "653040"
  },
  {
    "text": "should return with potentially a return",
    "start": "653040",
    "end": "654959"
  },
  {
    "text": "value okay instruction uh could not be",
    "start": "654959",
    "end": "657660"
  },
  {
    "text": "executed because some internal VM error",
    "start": "657660",
    "end": "660000"
  },
  {
    "text": "happened or the instruction could not",
    "start": "660000",
    "end": "661500"
  },
  {
    "text": "execute because the standard Java",
    "start": "661500",
    "end": "663120"
  },
  {
    "text": "exception was thrown",
    "start": "663120",
    "end": "664620"
  },
  {
    "text": "the code that executes a method thus",
    "start": "664620",
    "end": "667079"
  },
  {
    "text": "follows all right we got a call frame do",
    "start": "667079",
    "end": "669660"
  },
  {
    "text": "this Loop let instruction okay there's",
    "start": "669660",
    "end": "672000"
  },
  {
    "text": "our little program counter new addresses",
    "start": "672000",
    "end": "674519"
  },
  {
    "text": "uh",
    "start": "674519",
    "end": "676680"
  },
  {
    "text": "let's see let this thing oh my goodness",
    "start": "676680",
    "end": "678600"
  },
  {
    "text": "VM error look at this beautiful look at",
    "start": "678600",
    "end": "680640"
  },
  {
    "text": "that beauty instruction new address okay",
    "start": "680640",
    "end": "682500"
  },
  {
    "text": "debug status print instruction move the",
    "start": "682500",
    "end": "685440"
  },
  {
    "text": "program counter to the next instruction",
    "start": "685440",
    "end": "686880"
  },
  {
    "text": "before executing it since we want to go",
    "start": "686880",
    "end": "688920"
  },
  {
    "text": "to to override this absolutely",
    "start": "688920",
    "end": "693180"
  },
  {
    "text": "go to would be like a break statement",
    "start": "693180",
    "end": "694980"
  },
  {
    "text": "with a name a continue something like",
    "start": "694980",
    "end": "697380"
  },
  {
    "text": "that because that's all those things are",
    "start": "697380",
    "end": "698459"
  },
  {
    "text": "they're just named go-to's uh",
    "start": "698459",
    "end": "700200"
  },
  {
    "text": "instruction result self uh oh I would do",
    "start": "700200",
    "end": "702959"
  },
  {
    "text": "this okay I mean all this looks great",
    "start": "702959",
    "end": "706860"
  },
  {
    "text": "I'm sorry or congratulations wait is",
    "start": "706860",
    "end": "708959"
  },
  {
    "text": "this Java without garbage collection no",
    "start": "708959",
    "end": "710820"
  },
  {
    "text": "this is Java with garbage collection",
    "start": "710820",
    "end": "712200"
  },
  {
    "text": "it's just that the the VM is written in",
    "start": "712200",
    "end": "714480"
  },
  {
    "text": "Rust it's actually how to get sued by",
    "start": "714480",
    "end": "716579"
  },
  {
    "text": "Oracle and rust Foundation at the same",
    "start": "716579",
    "end": "718560"
  },
  {
    "text": "time a menage a12 lawyering uh I know",
    "start": "718560",
    "end": "721440"
  },
  {
    "text": "that there are quite a few",
    "start": "721440",
    "end": "722279"
  },
  {
    "text": "implementation details in this code but",
    "start": "722279",
    "end": "723779"
  },
  {
    "text": "I hope it gives you an idea of how rust",
    "start": "723779",
    "end": "725220"
  },
  {
    "text": "result and pattern matching Maps really",
    "start": "725220",
    "end": "727260"
  },
  {
    "text": "well to the description Behavior above",
    "start": "727260",
    "end": "728700"
  },
  {
    "text": "yeah it's good code especially since",
    "start": "728700",
    "end": "730980"
  },
  {
    "text": "he's only a few hundred lines into rust",
    "start": "730980",
    "end": "732480"
  },
  {
    "text": "he must this guy must be pretty familiar",
    "start": "732480",
    "end": "734579"
  },
  {
    "text": "with pattern matching and stuff like",
    "start": "734579",
    "end": "735660"
  },
  {
    "text": "that to go this far this fast all right",
    "start": "735660",
    "end": "737519"
  },
  {
    "text": "so this is the part that I'm really",
    "start": "737519",
    "end": "738600"
  },
  {
    "text": "excited about",
    "start": "738600",
    "end": "740279"
  },
  {
    "text": "right here",
    "start": "740279",
    "end": "741720"
  },
  {
    "text": "garbage collection the final milestone",
    "start": "741720",
    "end": "743760"
  },
  {
    "text": "in rjvm has been implementing the",
    "start": "743760",
    "end": "745680"
  },
  {
    "text": "garbage collector the algorithm I have",
    "start": "745680",
    "end": "747360"
  },
  {
    "text": "chosen is a stop the world which is",
    "start": "747360",
    "end": "749160"
  },
  {
    "text": "trivially follows from not having",
    "start": "749160",
    "end": "750660"
  },
  {
    "text": "threads uh let's see",
    "start": "750660",
    "end": "753320"
  },
  {
    "text": "semi space uh copying collector I have",
    "start": "753320",
    "end": "756720"
  },
  {
    "text": "implemented a poor variant of Cheney's",
    "start": "756720",
    "end": "758940"
  },
  {
    "text": "algorithm but I really should go and",
    "start": "758940",
    "end": "760860"
  },
  {
    "text": "implement the real thing the idea is to",
    "start": "760860",
    "end": "762959"
  },
  {
    "text": "split the available memory into two",
    "start": "762959",
    "end": "764459"
  },
  {
    "text": "parts called semi-spaces one will be",
    "start": "764459",
    "end": "766800"
  },
  {
    "text": "active and used to allocate objects and",
    "start": "766800",
    "end": "768720"
  },
  {
    "text": "the other will be unused when full uh",
    "start": "768720",
    "end": "771060"
  },
  {
    "text": "when full a garbage collection will be",
    "start": "771060",
    "end": "772680"
  },
  {
    "text": "triggered all of the alive objects will",
    "start": "772680",
    "end": "774420"
  },
  {
    "text": "be copied into a another semi space okay",
    "start": "774420",
    "end": "776760"
  },
  {
    "text": "then all references to the objects will",
    "start": "776760",
    "end": "778860"
  },
  {
    "text": "be updated so that they point to new",
    "start": "778860",
    "end": "780360"
  },
  {
    "text": "copies holy cow expensive finally the",
    "start": "780360",
    "end": "782760"
  },
  {
    "text": "role of the two will be swapped similar",
    "start": "782760",
    "end": "784740"
  },
  {
    "text": "to how blue green deployments work",
    "start": "784740",
    "end": "787380"
  },
  {
    "text": "yep",
    "start": "787380",
    "end": "789000"
  },
  {
    "text": "GC root so if you don't know there's",
    "start": "789000",
    "end": "790860"
  },
  {
    "text": "these objects called GC root objects",
    "start": "790860",
    "end": "792600"
  },
  {
    "text": "that's how you start the tree and so",
    "start": "792600",
    "end": "794160"
  },
  {
    "text": "there's like a bunch of them and so it",
    "start": "794160",
    "end": "795660"
  },
  {
    "text": "has to go through all of the roots and",
    "start": "795660",
    "end": "797700"
  },
  {
    "text": "follow the tree everywhere and once it",
    "start": "797700",
    "end": "799860"
  },
  {
    "text": "finds everything that it can touch then",
    "start": "799860",
    "end": "801420"
  },
  {
    "text": "it's like great and so then those are",
    "start": "801420",
    "end": "803940"
  },
  {
    "text": "the ones that stay",
    "start": "803940",
    "end": "805860"
  },
  {
    "text": "copy pasta phase yep see there's this",
    "start": "805860",
    "end": "808380"
  },
  {
    "text": "okay get them all in there for",
    "start": "808380",
    "end": "810240"
  },
  {
    "text": "references boom and then you can get rid",
    "start": "810240",
    "end": "811740"
  },
  {
    "text": "of that swap rolls there you go",
    "start": "811740",
    "end": "815339"
  },
  {
    "text": "this algorithm has the following",
    "start": "815339",
    "end": "817200"
  },
  {
    "text": "characteristic obviously it wastes a lot",
    "start": "817200",
    "end": "819000"
  },
  {
    "text": "of memory yep allocations are super fast",
    "start": "819000",
    "end": "821160"
  },
  {
    "text": "bumping a pointer absolutely copying and",
    "start": "821160",
    "end": "823200"
  },
  {
    "text": "compacting objects means it does not",
    "start": "823200",
    "end": "824639"
  },
  {
    "text": "have to deal with memory fragmentation",
    "start": "824639",
    "end": "826500"
  },
  {
    "text": "absolutely so that's really good because",
    "start": "826500",
    "end": "828899"
  },
  {
    "text": "memory fragmentation is super hard",
    "start": "828899",
    "end": "830220"
  },
  {
    "text": "compacting objects can improve",
    "start": "830220",
    "end": "831720"
  },
  {
    "text": "performance due to better cache line",
    "start": "831720",
    "end": "833100"
  },
  {
    "text": "utilization okay real Java VMS are far",
    "start": "833100",
    "end": "835860"
  },
  {
    "text": "more sophisticated algorithms generally",
    "start": "835860",
    "end": "837480"
  },
  {
    "text": "a generational garbage collectors yep",
    "start": "837480",
    "end": "839160"
  },
  {
    "text": "such as G1 or the parallel GC which uses",
    "start": "839160",
    "end": "841980"
  },
  {
    "text": "evolutions of the copying strategy very",
    "start": "841980",
    "end": "844320"
  },
  {
    "text": "cool yeah conclusions uh writing rjvm I",
    "start": "844320",
    "end": "848760"
  },
  {
    "text": "learned a lot and I have a lot of fun I",
    "start": "848760",
    "end": "850440"
  },
  {
    "text": "can't ask for more of a from a side",
    "start": "850440",
    "end": "851760"
  },
  {
    "text": "project but maybe next time I'll pick",
    "start": "851760",
    "end": "853139"
  },
  {
    "text": "something a bit less ambitious to learn",
    "start": "853139",
    "end": "854519"
  },
  {
    "text": "new programming language",
    "start": "854519",
    "end": "856800"
  },
  {
    "text": "I'm actually shocked honestly can we all",
    "start": "856800",
    "end": "859320"
  },
  {
    "text": "agree that the real W here is that you",
    "start": "859320",
    "end": "861600"
  },
  {
    "text": "wrote an excessively complicated program",
    "start": "861600",
    "end": "864180"
  },
  {
    "text": "in Rust after just maybe a thousand two",
    "start": "864180",
    "end": "867779"
  },
  {
    "text": "thousand lines of code",
    "start": "867779",
    "end": "870300"
  },
  {
    "text": "wow",
    "start": "870300",
    "end": "871500"
  },
  {
    "text": "beautiful like that's incredible well",
    "start": "871500",
    "end": "874019"
  },
  {
    "text": "done and aside I want to say that I had",
    "start": "874019",
    "end": "875820"
  },
  {
    "text": "a lot of fun with rust I think is",
    "start": "875820",
    "end": "876839"
  },
  {
    "text": "generally a great language as I've",
    "start": "876839",
    "end": "878040"
  },
  {
    "text": "written let's see have I written before",
    "start": "878040",
    "end": "879180"
  },
  {
    "text": "I really enjoyed using it for",
    "start": "879180",
    "end": "880680"
  },
  {
    "text": "implementing my jvm if you're interested",
    "start": "880680",
    "end": "882240"
  },
  {
    "text": "in further details all right go check it",
    "start": "882240",
    "end": "883980"
  },
  {
    "text": "out he'll have some more posts coming",
    "start": "883980",
    "end": "885360"
  },
  {
    "text": "I'll make sure I link this article it is",
    "start": "885360",
    "end": "887399"
  },
  {
    "text": "fantastic well done beautiful stuff",
    "start": "887399",
    "end": "891480"
  },
  {
    "text": "he uses rust by the way his jvm uses",
    "start": "891480",
    "end": "895199"
  },
  {
    "text": "rust by the way the name",
    "start": "895199",
    "end": "899839"
  },
  {
    "text": "is jar is actually just a zip file again",
    "start": "900540",
    "end": "904940"
  }
]