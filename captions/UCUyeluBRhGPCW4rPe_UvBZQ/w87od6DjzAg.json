[
  {
    "start": "0",
    "end": "45000"
  },
  {
    "text": "all right so Java 21 apparently doesn't",
    "start": "60",
    "end": "2399"
  },
  {
    "text": "look that bad I actually have not looked",
    "start": "2399",
    "end": "4020"
  },
  {
    "text": "at Java 21 yet all right here we go",
    "start": "4020",
    "end": "6779"
  },
  {
    "text": "let's look at this uh get the bits by",
    "start": "6779",
    "end": "9900"
  },
  {
    "text": "the way anyone that's watching on",
    "start": "9900",
    "end": "11040"
  },
  {
    "text": "YouTube I'm currently getting follow",
    "start": "11040",
    "end": "12179"
  },
  {
    "text": "bought it you can kind of see it going",
    "start": "12179",
    "end": "13620"
  },
  {
    "text": "on right now I know look at how cool",
    "start": "13620",
    "end": "15420"
  },
  {
    "text": "that is how cool is that twitch do",
    "start": "15420",
    "end": "17460"
  },
  {
    "text": "something milky where are you okay",
    "start": "17460",
    "end": "20760"
  },
  {
    "text": "anyways before we get started do",
    "start": "20760",
    "end": "22680"
  },
  {
    "text": "something for me quickly if you haven't",
    "start": "22680",
    "end": "24000"
  },
  {
    "text": "go install no shut up okay you know what",
    "start": "24000",
    "end": "26580"
  },
  {
    "text": "give me the bits give me the bits hey",
    "start": "26580",
    "end": "28920"
  },
  {
    "text": "first off don't tell me how to live my",
    "start": "28920",
    "end": "30720"
  },
  {
    "text": "life okay we're moving on okay so so",
    "start": "30720",
    "end": "32940"
  },
  {
    "text": "many of the features in Java 21 build",
    "start": "32940",
    "end": "34680"
  },
  {
    "text": "upon features first introduced in Java",
    "start": "34680",
    "end": "36540"
  },
  {
    "text": "17. and in some cases earlier than that",
    "start": "36540",
    "end": "39840"
  },
  {
    "text": "let's review some of those features",
    "start": "39840",
    "end": "41340"
  },
  {
    "text": "before examining their final",
    "start": "41340",
    "end": "42480"
  },
  {
    "text": "manifestation in Java 21. anyways okay",
    "start": "42480",
    "end": "46440"
  },
  {
    "start": "45000",
    "end": "340000"
  },
  {
    "text": "so multi-line strings did you know that",
    "start": "46440",
    "end": "48180"
  },
  {
    "text": "Java supports multi-line strings holy",
    "start": "48180",
    "end": "51180"
  },
  {
    "text": "we're left in 2012 this is crazy this is",
    "start": "51180",
    "end": "54840"
  },
  {
    "text": "crazy this is crazy okay look at that",
    "start": "54840",
    "end": "56940"
  },
  {
    "text": "multi-line with triple wow I wonder",
    "start": "56940",
    "end": "59039"
  },
  {
    "text": "where they got that from Joe root root I",
    "start": "59039",
    "end": "62460"
  },
  {
    "text": "wonder where they got this from I don't",
    "start": "62460",
    "end": "63719"
  },
  {
    "text": "even know nothing too surprising easy to",
    "start": "63719",
    "end": "65338"
  },
  {
    "text": "understand triple quotes and uh and stop",
    "start": "65339",
    "end": "67500"
  },
  {
    "text": "the multi-line strings you can strip",
    "start": "67500",
    "end": "69240"
  },
  {
    "text": "leading trailing and indenting space too",
    "start": "69240",
    "end": "71760"
  },
  {
    "text": "you know what's so good okay so I hate",
    "start": "71760",
    "end": "74460"
  },
  {
    "text": "to be a rust Fanboy at this point but",
    "start": "74460",
    "end": "76320"
  },
  {
    "text": "I'm gonna rust Fanboy a little bit how",
    "start": "76320",
    "end": "78119"
  },
  {
    "text": "rust does multi-line strings is a",
    "start": "78119",
    "end": "80100"
  },
  {
    "text": "thousand times better can we all agree",
    "start": "80100",
    "end": "81479"
  },
  {
    "text": "with that can we all agree with that",
    "start": "81479",
    "end": "83100"
  },
  {
    "text": "like the fact that you can designate",
    "start": "83100",
    "end": "85979"
  },
  {
    "text": "even inner and outer versions of it Java",
    "start": "85979",
    "end": "89159"
  },
  {
    "text": "has officially after the uh 20 000 how",
    "start": "89159",
    "end": "91320"
  },
  {
    "text": "so so how it works and oh my gosh I",
    "start": "91320",
    "end": "93780"
  },
  {
    "text": "didn't even have a terminal open clearly",
    "start": "93780",
    "end": "95460"
  },
  {
    "text": "clearly posing I'm posing we're posing",
    "start": "95460",
    "end": "98280"
  },
  {
    "text": "right now uh here I'll just do Rust",
    "start": "98280",
    "end": "99780"
  },
  {
    "text": "Arduino Arduino and I'll jump in here",
    "start": "99780",
    "end": "102540"
  },
  {
    "text": "and I don't know why it's a bunch of",
    "start": "102540",
    "end": "103680"
  },
  {
    "text": "underscores I did something here uh you",
    "start": "103680",
    "end": "105659"
  },
  {
    "text": "can do something like this uh where are",
    "start": "105659",
    "end": "107700"
  },
  {
    "text": "you what is it let Foo equals uh R pound",
    "start": "107700",
    "end": "111299"
  },
  {
    "text": "me Daddy like this right did I I do that",
    "start": "111299",
    "end": "113759"
  },
  {
    "text": "correct yeah and so that means if you",
    "start": "113759",
    "end": "116340"
  },
  {
    "text": "want one on the inside you can do two",
    "start": "116340",
    "end": "118079"
  },
  {
    "text": "pounds and then that means on the inside",
    "start": "118079",
    "end": "120540"
  },
  {
    "text": "I can have a multi-line string inside so",
    "start": "120540",
    "end": "123540"
  },
  {
    "text": "you could generate multi-line strings in",
    "start": "123540",
    "end": "127140"
  },
  {
    "text": "your multi-line strings okay yo dog I",
    "start": "127140",
    "end": "130560"
  },
  {
    "text": "heard you like multi-line strings so I",
    "start": "130560",
    "end": "132840"
  },
  {
    "text": "gave you multi-line strings in your",
    "start": "132840",
    "end": "135000"
  },
  {
    "text": "multi-line strings you know what I mean",
    "start": "135000",
    "end": "136620"
  },
  {
    "text": "all right let's get going",
    "start": "136620",
    "end": "138000"
  },
  {
    "text": "all right so records are one of my",
    "start": "138000",
    "end": "139440"
  },
  {
    "text": "favorite features of java the freaking",
    "start": "139440",
    "end": "141420"
  },
  {
    "text": "fantastic why what is it with",
    "start": "141420",
    "end": "144060"
  },
  {
    "text": "exclamation points like do you really",
    "start": "144060",
    "end": "145739"
  },
  {
    "text": "need to use them do you really",
    "start": "145739",
    "end": "147480"
  },
  {
    "text": "okay what what are you doing here is",
    "start": "147480",
    "end": "149760"
  },
  {
    "text": "this what you want your writing to sound",
    "start": "149760",
    "end": "151140"
  },
  {
    "text": "like do you have a class whose identity",
    "start": "151140",
    "end": "153300"
  },
  {
    "text": "is equivalent to the fields of this",
    "start": "153300",
    "end": "154920"
  },
  {
    "text": "class I really don't know what that",
    "start": "154920",
    "end": "156360"
  },
  {
    "text": "means okay so what does this mean",
    "start": "156360",
    "end": "158700"
  },
  {
    "text": "class record test record jdk release",
    "start": "158700",
    "end": "162000"
  },
  {
    "text": "event string Name Records throw",
    "start": "162000",
    "end": "164400"
  },
  {
    "text": "exception event J would you actually",
    "start": "164400",
    "end": "166920"
  },
  {
    "text": "write this test I want to ask I want to",
    "start": "166920",
    "end": "169260"
  },
  {
    "text": "ask this question would you write this",
    "start": "169260",
    "end": "170879"
  },
  {
    "text": "test",
    "start": "170879",
    "end": "171840"
  },
  {
    "text": "I'm not gonna lie to you I refuse to",
    "start": "171840",
    "end": "174180"
  },
  {
    "text": "write this test",
    "start": "174180",
    "end": "175440"
  },
  {
    "text": "like I I will not write this test",
    "start": "175440",
    "end": "178080"
  },
  {
    "text": "I refuse this I'm not going to test that",
    "start": "178080",
    "end": "181800"
  },
  {
    "text": "a Constructor constructs",
    "start": "181800",
    "end": "184379"
  },
  {
    "text": "refute refuse",
    "start": "184379",
    "end": "186840"
  },
  {
    "text": "this concise syntax I think we Define",
    "start": "186840",
    "end": "189720"
  },
  {
    "text": "the word concise differently which is",
    "start": "189720",
    "end": "191940"
  },
  {
    "text": "okay it's okay it's okay to define words",
    "start": "191940",
    "end": "194879"
  },
  {
    "text": "differently because I mean we do it all",
    "start": "194879",
    "end": "196620"
  },
  {
    "text": "the time",
    "start": "196620",
    "end": "197819"
  },
  {
    "text": "but I mean this is just different you",
    "start": "197819",
    "end": "199440"
  },
  {
    "text": "know what I mean",
    "start": "199440",
    "end": "200700"
  },
  {
    "text": "uh let's see in a class Constructor",
    "start": "200700",
    "end": "202319"
  },
  {
    "text": "Associated Storage in a course Getters",
    "start": "202319",
    "end": "204239"
  },
  {
    "text": "get name equivalence to two string",
    "start": "204239",
    "end": "206340"
  },
  {
    "text": "implementations enhance switch let's go",
    "start": "206340",
    "end": "208260"
  },
  {
    "text": "I rarely use the existing switch",
    "start": "208260",
    "end": "210180"
  },
  {
    "text": "statement because it was clunky and",
    "start": "210180",
    "end": "211739"
  },
  {
    "text": "usually there was other patterns like",
    "start": "211739",
    "end": "213120"
  },
  {
    "text": "visitor pattern that got me most the",
    "start": "213120",
    "end": "214620"
  },
  {
    "text": "benefits you know my least favorite part",
    "start": "214620",
    "end": "216300"
  },
  {
    "text": "about the switch statement",
    "start": "216300",
    "end": "217860"
  },
  {
    "text": "is that in prettier you cannot in",
    "start": "217860",
    "end": "221340"
  },
  {
    "text": "JavaScript that is Javascript the Lord's",
    "start": "221340",
    "end": "223140"
  },
  {
    "text": "Java uh",
    "start": "223140",
    "end": "225659"
  },
  {
    "text": "the Lord that cursed the ground of",
    "start": "225659",
    "end": "228060"
  },
  {
    "text": "course and gave us JavaScript uh that",
    "start": "228060",
    "end": "231360"
  },
  {
    "text": "you cannot configure prettier to have a",
    "start": "231360",
    "end": "233940"
  },
  {
    "text": "switch and the case statements on the",
    "start": "233940",
    "end": "236280"
  },
  {
    "text": "same uh with the SIM in the indentation",
    "start": "236280",
    "end": "238799"
  },
  {
    "text": "Lord or in the days of shut up with",
    "start": "238799",
    "end": "241620"
  },
  {
    "text": "the say the Eldon Lord with the same",
    "start": "241620",
    "end": "244739"
  },
  {
    "text": "indentation so you cannot make prettier",
    "start": "244739",
    "end": "246780"
  },
  {
    "text": "simply have switch whatever I know we're",
    "start": "246780",
    "end": "249780"
  },
  {
    "text": "in Rust just deal with it and then case",
    "start": "249780",
    "end": "251519"
  },
  {
    "text": "five you can't do that like you can't do",
    "start": "251519",
    "end": "254220"
  },
  {
    "text": "that even though this just makes life",
    "start": "254220",
    "end": "255959"
  },
  {
    "text": "less sucky you all indented it has to go",
    "start": "255959",
    "end": "259739"
  },
  {
    "text": "ah",
    "start": "259739",
    "end": "261540"
  },
  {
    "text": "all right anyways okay so the new okay",
    "start": "261540",
    "end": "263280"
  },
  {
    "text": "what is this here's an example of",
    "start": "263280",
    "end": "264840"
  },
  {
    "text": "reworking class switch to use the new",
    "start": "264840",
    "end": "266520"
  },
  {
    "text": "enhanced switch okay what do we got here",
    "start": "266520",
    "end": "268620"
  },
  {
    "text": "switch okay okay",
    "start": "268620",
    "end": "271620"
  },
  {
    "text": "is enhanced switch just adding commas",
    "start": "271620",
    "end": "274740"
  },
  {
    "text": "guys I think I figured out what's",
    "start": "274740",
    "end": "276180"
  },
  {
    "text": "Happening Here",
    "start": "276180",
    "end": "277979"
  },
  {
    "text": "you know in Star Trek when Jean-Luc",
    "start": "277979",
    "end": "280680"
  },
  {
    "text": "Picard ends up going to a more primitive",
    "start": "280680",
    "end": "283020"
  },
  {
    "text": "Society",
    "start": "283020",
    "end": "284280"
  },
  {
    "text": "and they show him like their favorite",
    "start": "284280",
    "end": "286979"
  },
  {
    "text": "things and he has to act impressed I'm",
    "start": "286979",
    "end": "290040"
  },
  {
    "text": "just saying I'm acting impressed right",
    "start": "290040",
    "end": "291660"
  },
  {
    "text": "now",
    "start": "291660",
    "end": "292820"
  },
  {
    "text": "you are wrong all right this is the",
    "start": "292820",
    "end": "295979"
  },
  {
    "text": "classic implementation okay good it's",
    "start": "295979",
    "end": "297419"
  },
  {
    "text": "the classic one okay we feel better uh",
    "start": "297419",
    "end": "299639"
  },
  {
    "text": "instead uh instance of wait hold on wait",
    "start": "299639",
    "end": "302340"
  },
  {
    "text": "no never mind no no no way hold on this",
    "start": "302340",
    "end": "304740"
  },
  {
    "text": "is a classic implementation with older",
    "start": "304740",
    "end": "306479"
  },
  {
    "text": "clunkier switch statement uh this is the",
    "start": "306479",
    "end": "309000"
  },
  {
    "text": "new one oh okay so this is the new one",
    "start": "309000",
    "end": "310620"
  },
  {
    "text": "oh",
    "start": "310620",
    "end": "313400"
  },
  {
    "text": "oh that's the new one okay",
    "start": "313860",
    "end": "316139"
  },
  {
    "text": "hey it's an expression that's pretty",
    "start": "316139",
    "end": "317639"
  },
  {
    "text": "cool",
    "start": "317639",
    "end": "319820"
  },
  {
    "text": "uh okay it's like wow",
    "start": "319860",
    "end": "322919"
  },
  {
    "text": "okay that's pretty cool",
    "start": "322919",
    "end": "325259"
  },
  {
    "text": "that's totally wrong I was honestly",
    "start": "325259",
    "end": "327000"
  },
  {
    "text": "totally wrong I was totally wrong and",
    "start": "327000",
    "end": "329340"
  },
  {
    "text": "and incorrect here okay I was wrong",
    "start": "329340",
    "end": "332699"
  },
  {
    "text": "obviously this is really cool technology",
    "start": "332699",
    "end": "335940"
  },
  {
    "text": "in Java is is very impressive",
    "start": "335940",
    "end": "340160"
  },
  {
    "start": "340000",
    "end": "430000"
  },
  {
    "text": "the new instance of uh test allows you",
    "start": "341400",
    "end": "344160"
  },
  {
    "text": "to avoid the clunky check and uh cast of",
    "start": "344160",
    "end": "346860"
  },
  {
    "text": "your which looks like this",
    "start": "346860",
    "end": "350100"
  },
  {
    "text": "animal object a new dog what okay yeah",
    "start": "350100",
    "end": "353520"
  },
  {
    "text": "anyways if animal is instance of dog VAR",
    "start": "353520",
    "end": "356699"
  },
  {
    "text": "Fido dog oh they have vars they have",
    "start": "356699",
    "end": "359100"
  },
  {
    "text": "vars now oh nice is this like some sort",
    "start": "359100",
    "end": "360780"
  },
  {
    "text": "of uh you just don't it's like uh it's",
    "start": "360780",
    "end": "363660"
  },
  {
    "text": "it just does some sort of",
    "start": "363660",
    "end": "366600"
  },
  {
    "text": "what do you call it inference to kind of",
    "start": "366600",
    "end": "368699"
  },
  {
    "text": "say its thing bark yay okay and replace",
    "start": "368699",
    "end": "370919"
  },
  {
    "text": "it with this VAR this if animal instance",
    "start": "370919",
    "end": "373800"
  },
  {
    "text": "of dog Fido oh okay cool this reminds me",
    "start": "373800",
    "end": "376680"
  },
  {
    "text": "of Zig have you guys seen it uh what Zig",
    "start": "376680",
    "end": "378360"
  },
  {
    "text": "does for this thing the zig does",
    "start": "378360",
    "end": "379979"
  },
  {
    "text": "effectively the same thing so if you're",
    "start": "379979",
    "end": "381300"
  },
  {
    "text": "doing like an if check on a uh potential",
    "start": "381300",
    "end": "383819"
  },
  {
    "text": "nil you get a capture group afterwards",
    "start": "383819",
    "end": "386280"
  },
  {
    "text": "yeah so someone just had a capture group",
    "start": "386280",
    "end": "387600"
  },
  {
    "text": "we've gone full or Circle Java is now",
    "start": "387600",
    "end": "389759"
  },
  {
    "text": "copying C sharp I like the uh I like I",
    "start": "389759",
    "end": "392039"
  },
  {
    "text": "like capture groups I think they're I",
    "start": "392039",
    "end": "393419"
  },
  {
    "text": "think they're great I like the idea of",
    "start": "393419",
    "end": "394919"
  },
  {
    "text": "having scoped lifting operators that",
    "start": "394919",
    "end": "397139"
  },
  {
    "text": "make life easy I like that actually a",
    "start": "397139",
    "end": "399000"
  },
  {
    "text": "lot and so this is kind of cool I mean",
    "start": "399000",
    "end": "401220"
  },
  {
    "text": "this is nice that's a quality of life I",
    "start": "401220",
    "end": "403380"
  },
  {
    "text": "mean really shocking that you let this",
    "start": "403380",
    "end": "405060"
  },
  {
    "text": "code go with odd spacing right I'd be",
    "start": "405060",
    "end": "407400"
  },
  {
    "text": "more offended personally the fact that",
    "start": "407400",
    "end": "409080"
  },
  {
    "text": "you put a space in between a Constructor",
    "start": "409080",
    "end": "410880"
  },
  {
    "text": "call and the class",
    "start": "410880",
    "end": "413460"
  },
  {
    "text": "than just forgetting indenting I'm not",
    "start": "413460",
    "end": "415380"
  },
  {
    "text": "sure which is the worst part of this",
    "start": "415380",
    "end": "416520"
  },
  {
    "text": "white space debacle going on these both",
    "start": "416520",
    "end": "418259"
  },
  {
    "text": "these code examples makes her hate",
    "start": "418259",
    "end": "419819"
  },
  {
    "text": "people if you're writing a blog post",
    "start": "419819",
    "end": "420840"
  },
  {
    "text": "just take the three minutes to make sure",
    "start": "420840",
    "end": "422160"
  },
  {
    "text": "that you got the correct formatting on",
    "start": "422160",
    "end": "423479"
  },
  {
    "text": "okay the lack of indentations plus",
    "start": "423479",
    "end": "425460"
  },
  {
    "text": "spacing before Constructor function just",
    "start": "425460",
    "end": "427259"
  },
  {
    "text": "makes me want to you know gently jabble",
    "start": "427259",
    "end": "429720"
  },
  {
    "text": "my eyes out the smart instance of",
    "start": "429720",
    "end": "432360"
  },
  {
    "start": "430000",
    "end": "680000"
  },
  {
    "text": "automatically assigns a downcast",
    "start": "432360",
    "end": "433800"
  },
  {
    "text": "variable for this uh use in the scope of",
    "start": "433800",
    "end": "436199"
  },
  {
    "text": "the test there's no need to specify the",
    "start": "436199",
    "end": "437819"
  },
  {
    "text": "class dog twice okay beautiful sealed",
    "start": "437819",
    "end": "440520"
  },
  {
    "text": "types oh yeah let's go technically",
    "start": "440520",
    "end": "443819"
  },
  {
    "text": "sealed types are a part of java 17 2 but",
    "start": "443819",
    "end": "446639"
  },
  {
    "text": "they don't buy you much yet the basic",
    "start": "446639",
    "end": "448800"
  },
  {
    "text": "idea is that in the olden times the only",
    "start": "448800",
    "end": "450960"
  },
  {
    "text": "way to limit extensibility of a type was",
    "start": "450960",
    "end": "453240"
  },
  {
    "text": "through visible modifiers public private",
    "start": "453240",
    "end": "455400"
  },
  {
    "text": "Etc sealed keyword you can explicitly",
    "start": "455400",
    "end": "457979"
  },
  {
    "text": "permit when classes May subclass another",
    "start": "457979",
    "end": "460199"
  },
  {
    "text": "class this is fantastic Leap Forward",
    "start": "460199",
    "end": "462840"
  },
  {
    "text": "because it gives the compiler visibility",
    "start": "462840",
    "end": "464819"
  },
  {
    "text": "into which type might extend a given",
    "start": "464819",
    "end": "467099"
  },
  {
    "text": "type which allows it to do optimizations",
    "start": "467099",
    "end": "469139"
  },
  {
    "text": "and help us at compile time to",
    "start": "469139",
    "end": "470580"
  },
  {
    "text": "understand whether all possible cases",
    "start": "470580",
    "end": "473039"
  },
  {
    "text": "uh say an enhanced switch expression",
    "start": "473039",
    "end": "475199"
  },
  {
    "text": "have been covered sealed interface",
    "start": "475199",
    "end": "479460"
  },
  {
    "text": "animal",
    "start": "479460",
    "end": "481220"
  },
  {
    "text": "permits bird cat and dog",
    "start": "481220",
    "end": "484620"
  },
  {
    "text": "so when you create an interface you now",
    "start": "484620",
    "end": "488099"
  },
  {
    "text": "say which classes are allowed to",
    "start": "488099",
    "end": "490740"
  },
  {
    "text": "implement it isn't that like inverted",
    "start": "490740",
    "end": "494039"
  },
  {
    "text": "use of interfaces isn't the point of an",
    "start": "494039",
    "end": "496139"
  },
  {
    "text": "interface to use it correctly okay I I'm",
    "start": "496139",
    "end": "499080"
  },
  {
    "text": "very like in in all realness I'm going",
    "start": "499080",
    "end": "501300"
  },
  {
    "text": "to be completely real here I'm genuinely",
    "start": "501300",
    "end": "502860"
  },
  {
    "text": "confused as why you would ever want this",
    "start": "502860",
    "end": "504900"
  },
  {
    "text": "right here in the sense that an",
    "start": "504900",
    "end": "506940"
  },
  {
    "text": "interface is usually defined and you",
    "start": "506940",
    "end": "508620"
  },
  {
    "text": "don't know who's going to implement it",
    "start": "508620",
    "end": "510539"
  },
  {
    "text": "whereas in this case you're creating an",
    "start": "510539",
    "end": "513539"
  },
  {
    "text": "interface and you know who's going to",
    "start": "513539",
    "end": "517020"
  },
  {
    "text": "implement it just I I we must be reading",
    "start": "517020",
    "end": "519899"
  },
  {
    "text": "this wrong here I mean I like these I I",
    "start": "519899",
    "end": "522180"
  },
  {
    "text": "do actually okay the the switch cases",
    "start": "522180",
    "end": "523800"
  },
  {
    "text": "aren't bad can we all agree that switch",
    "start": "523800",
    "end": "525660"
  },
  {
    "text": "case ain't bad okay maybe I over made",
    "start": "525660",
    "end": "527640"
  },
  {
    "text": "fun maybe I over made fun of it I over",
    "start": "527640",
    "end": "530580"
  },
  {
    "text": "made fun of it see the reason why I",
    "start": "530580",
    "end": "532140"
  },
  {
    "text": "don't like that is that I I'm not sure",
    "start": "532140",
    "end": "534839"
  },
  {
    "text": "how you would specify these things",
    "start": "534839",
    "end": "536220"
  },
  {
    "text": "differently you know what I mean",
    "start": "536220",
    "end": "537600"
  },
  {
    "text": "actually what am I doing let's go to x",
    "start": "537600",
    "end": "538800"
  },
  {
    "text": "Cali draw I feel like xcal oh my",
    "start": "538800",
    "end": "540779"
  },
  {
    "text": "goodness I'm in light mode hey don't",
    "start": "540779",
    "end": "542399"
  },
  {
    "text": "look at this",
    "start": "542399",
    "end": "543420"
  },
  {
    "text": "don't look at this stop looking at all",
    "start": "543420",
    "end": "546300"
  },
  {
    "text": "the stuff okay don't look at Go versus",
    "start": "546300",
    "end": "547920"
  },
  {
    "text": "bun okay stop looking at Go versus bun",
    "start": "547920",
    "end": "549959"
  },
  {
    "text": "stop looking at it okay don't look at Go",
    "start": "549959",
    "end": "553800"
  },
  {
    "text": "versus bun okay it's not worth it stop",
    "start": "553800",
    "end": "556740"
  },
  {
    "text": "looking at it here let's go away okay",
    "start": "556740",
    "end": "558360"
  },
  {
    "text": "now that we that we went away",
    "start": "558360",
    "end": "561240"
  },
  {
    "text": "all right so you have your interface",
    "start": "561240",
    "end": "563519"
  },
  {
    "text": "right animal right this is great I'm",
    "start": "563519",
    "end": "565380"
  },
  {
    "text": "still using go colors right now and then",
    "start": "565380",
    "end": "567600"
  },
  {
    "text": "what makes this good is that or what I'm",
    "start": "567600",
    "end": "569880"
  },
  {
    "text": "seeing here is that I'm a little bit",
    "start": "569880",
    "end": "572580"
  },
  {
    "text": "confused by this right there's like a",
    "start": "572580",
    "end": "573779"
  },
  {
    "text": "dog there was a dog class in there the",
    "start": "573779",
    "end": "576120"
  },
  {
    "text": "animal has to know about the dog class",
    "start": "576120",
    "end": "578700"
  },
  {
    "text": "and the dog class has to like doesn't it",
    "start": "578700",
    "end": "581760"
  },
  {
    "text": "create this weird",
    "start": "581760",
    "end": "583440"
  },
  {
    "text": "like typically what you want with a with",
    "start": "583440",
    "end": "585600"
  },
  {
    "text": "like the interfaces right your eye",
    "start": "585600",
    "end": "587160"
  },
  {
    "text": "animal or whatever you want to call is",
    "start": "587160",
    "end": "588959"
  },
  {
    "text": "that you only want this to know One",
    "start": "588959",
    "end": "590760"
  },
  {
    "text": "Direction",
    "start": "590760",
    "end": "592320"
  },
  {
    "text": "dude why can I never get arrowheads to",
    "start": "592320",
    "end": "594000"
  },
  {
    "text": "work correctly",
    "start": "594000",
    "end": "595200"
  },
  {
    "text": "right",
    "start": "595200",
    "end": "596459"
  },
  {
    "text": "it dependency inversion inversion right",
    "start": "596459",
    "end": "598980"
  },
  {
    "text": "yeah it's the inverted interface it's",
    "start": "598980",
    "end": "601980"
  },
  {
    "text": "called dependency recursion",
    "start": "601980",
    "end": "604200"
  },
  {
    "text": "it's confusing to have it go both ways",
    "start": "604200",
    "end": "607200"
  },
  {
    "text": "it's for exhaustive checking",
    "start": "607200",
    "end": "610640"
  },
  {
    "text": "yeah I guess okay so so the benefit is",
    "start": "611220",
    "end": "613980"
  },
  {
    "text": "that you get to have exhaustive switch",
    "start": "613980",
    "end": "616440"
  },
  {
    "text": "cases so it's it's it's an attempt to",
    "start": "616440",
    "end": "619320"
  },
  {
    "text": "provide safety",
    "start": "619320",
    "end": "621660"
  },
  {
    "text": "in switch cases and exhaustiveness right",
    "start": "621660",
    "end": "626360"
  },
  {
    "text": "is that is that fair",
    "start": "627000",
    "end": "628680"
  },
  {
    "text": "I hate it",
    "start": "628680",
    "end": "631320"
  },
  {
    "text": "I hate this",
    "start": "631320",
    "end": "633899"
  },
  {
    "text": "okay yep we have an explicitly sealed uh",
    "start": "633899",
    "end": "636240"
  },
  {
    "text": "interactive that only allow that permits",
    "start": "636240",
    "end": "638700"
  },
  {
    "text": "three types the enhanced switch",
    "start": "638700",
    "end": "639720"
  },
  {
    "text": "statement yeah classes that implement",
    "start": "639720",
    "end": "641459"
  },
  {
    "text": "the switch there because the okay so",
    "start": "641459",
    "end": "642779"
  },
  {
    "text": "here's the problem here is that you have",
    "start": "642779",
    "end": "644519"
  },
  {
    "text": "to go here every time you want a new",
    "start": "644519",
    "end": "647459"
  },
  {
    "text": "version of animal you have to first go",
    "start": "647459",
    "end": "649440"
  },
  {
    "text": "here add it to your list of lists then",
    "start": "649440",
    "end": "651480"
  },
  {
    "text": "you have to implement it then you have",
    "start": "651480",
    "end": "653100"
  },
  {
    "text": "to update your switch statements it's",
    "start": "653100",
    "end": "656279"
  },
  {
    "text": "it just feels weird that you don't just",
    "start": "656279",
    "end": "657959"
  },
  {
    "text": "implement it and then it warns you your",
    "start": "657959",
    "end": "659760"
  },
  {
    "text": "switch statements are effed up and this",
    "start": "659760",
    "end": "661560"
  },
  {
    "text": "one right here seems also jacked up",
    "start": "661560",
    "end": "663899"
  },
  {
    "text": "right like how does it even know",
    "start": "663899",
    "end": "666420"
  },
  {
    "text": "also where's the else if It Feels Like",
    "start": "666420",
    "end": "669600"
  },
  {
    "text": "to Move It honestly just feels like a",
    "start": "669600",
    "end": "671220"
  },
  {
    "text": "really bizarre bizarre coupling there",
    "start": "671220",
    "end": "673079"
  },
  {
    "text": "must be a really good reason for this it",
    "start": "673079",
    "end": "675300"
  },
  {
    "text": "reminds me of the two-way one to one",
    "start": "675300",
    "end": "677279"
  },
  {
    "text": "it's the two I'm not sure if I like that",
    "start": "677279",
    "end": "679440"
  },
  {
    "text": "okay I'm stuck on it let's move on",
    "start": "679440",
    "end": "681000"
  },
  {
    "start": "680000",
    "end": "805000"
  },
  {
    "text": "Beyond chapter 17 all these things",
    "start": "681000",
    "end": "682800"
  },
  {
    "text": "combined we're starting to uh to Wade",
    "start": "682800",
    "end": "684420"
  },
  {
    "text": "comfortably into Java 21 land from here",
    "start": "684420",
    "end": "686579"
  },
  {
    "text": "on down we'll look at features that have",
    "start": "686579",
    "end": "688260"
  },
  {
    "text": "come out since Java 17. Next Level",
    "start": "688260",
    "end": "690839"
  },
  {
    "text": "pattern matching with record switch and",
    "start": "690839",
    "end": "692700"
  },
  {
    "text": "if okay there we go let's go enhance",
    "start": "692700",
    "end": "694800"
  },
  {
    "text": "switch expressions and pattern matching",
    "start": "694800",
    "end": "696240"
  },
  {
    "text": "are remarkable and it makes me wonder",
    "start": "696240",
    "end": "697920"
  },
  {
    "text": "how uh using akka so many years ago",
    "start": "697920",
    "end": "700800"
  },
  {
    "text": "would have felt using Java with this",
    "start": "700800",
    "end": "702180"
  },
  {
    "text": "excellent new syntax pattern matching",
    "start": "702180",
    "end": "703860"
  },
  {
    "text": "has an even nicer interaction when taken",
    "start": "703860",
    "end": "706380"
  },
  {
    "text": "together with records because records as",
    "start": "706380",
    "end": "708480"
  },
  {
    "text": "discussed earlier are the res uh resumes",
    "start": "708480",
    "end": "711540"
  },
  {
    "text": "the resumes of their components the",
    "start": "711540",
    "end": "713399"
  },
  {
    "text": "resumes of their component and the",
    "start": "713399",
    "end": "714899"
  },
  {
    "text": "compiler knows this",
    "start": "714899",
    "end": "717180"
  },
  {
    "text": "okay so can Hoist the components to a",
    "start": "717180",
    "end": "718980"
  },
  {
    "text": "new variable too okay let's see so we",
    "start": "718980",
    "end": "721260"
  },
  {
    "text": "got a bunch of Records okay hey record",
    "start": "721260",
    "end": "722940"
  },
  {
    "text": "record okay cool cool cool oh I see oh I",
    "start": "722940",
    "end": "726839"
  },
  {
    "text": "see what they mean now with records",
    "start": "726839",
    "end": "729540"
  },
  {
    "text": "The Constructor is literally the",
    "start": "729540",
    "end": "731820"
  },
  {
    "text": "entirety of all their properties and",
    "start": "731820",
    "end": "733680"
  },
  {
    "text": "they contain nothing really to them",
    "start": "733680",
    "end": "736680"
  },
  {
    "text": "so it's just like record user",
    "start": "736680",
    "end": "739320"
  },
  {
    "text": "it's just like it's just like specifying",
    "start": "739320",
    "end": "741240"
  },
  {
    "text": "a type it's a struct",
    "start": "741240",
    "end": "742920"
  },
  {
    "text": "oh okay I just didn't uh think about it",
    "start": "742920",
    "end": "745620"
  },
  {
    "text": "it's just a it's it's a struct right I",
    "start": "745620",
    "end": "747660"
  },
  {
    "text": "don't know what a dto is I don't know",
    "start": "747660",
    "end": "748920"
  },
  {
    "text": "what the equivalent",
    "start": "748920",
    "end": "750540"
  },
  {
    "text": "okay I'm stupid I'm stupid that's okay",
    "start": "750540",
    "end": "752579"
  },
  {
    "text": "my bad my bad on this one it's concise",
    "start": "752579",
    "end": "757040"
  },
  {
    "text": "it with implicit equals and uh and oh",
    "start": "758160",
    "end": "760800"
  },
  {
    "text": "really okay",
    "start": "760800",
    "end": "763380"
  },
  {
    "text": "that's kind of cool I guess all right so",
    "start": "763380",
    "end": "765899"
  },
  {
    "text": "case",
    "start": "765899",
    "end": "768060"
  },
  {
    "text": "okay okay I can like this I can hey",
    "start": "768060",
    "end": "772260"
  },
  {
    "text": "I can like this",
    "start": "772260",
    "end": "774240"
  },
  {
    "text": "this is cool",
    "start": "774240",
    "end": "775740"
  },
  {
    "text": "hold on hold on what's Happening Here I",
    "start": "775740",
    "end": "777240"
  },
  {
    "text": "want to see these one two and three look",
    "start": "777240",
    "end": "778500"
  },
  {
    "text": "at this there's an if a shutdown event",
    "start": "778500",
    "end": "780120"
  },
  {
    "text": "and then these two",
    "start": "780120",
    "end": "782760"
  },
  {
    "text": "we have a special case where if we get a",
    "start": "782760",
    "end": "784800"
  },
  {
    "text": "particular event we want to shut down",
    "start": "784800",
    "end": "786300"
  },
  {
    "text": "not produce a string so we'll use the",
    "start": "786300",
    "end": "788399"
  },
  {
    "text": "new pattern matching to support if",
    "start": "788399",
    "end": "789660"
  },
  {
    "text": "statement",
    "start": "789660",
    "end": "790860"
  },
  {
    "text": "all right so we get an if statement",
    "start": "790860",
    "end": "792120"
  },
  {
    "text": "going on here if instance of shutdown",
    "start": "792120",
    "end": "794339"
  },
  {
    "text": "grab out the instant can you I assume",
    "start": "794339",
    "end": "796920"
  },
  {
    "text": "you can also use VAR here and then you",
    "start": "796920",
    "end": "798959"
  },
  {
    "text": "can print this thing down right here",
    "start": "798959",
    "end": "801600"
  },
  {
    "text": "nice nice nice",
    "start": "801600",
    "end": "804380"
  },
  {
    "text": "I can like that all right all these",
    "start": "804380",
    "end": "807899"
  },
  {
    "start": "805000",
    "end": "950000"
  },
  {
    "text": "things uh started to take root in",
    "start": "807899",
    "end": "809459"
  },
  {
    "text": "earlier versions of java but culminated",
    "start": "809459",
    "end": "811139"
  },
  {
    "text": "here in Java 21 and what you might you",
    "start": "811139",
    "end": "813540"
  },
  {
    "text": "might call data oriented programming it",
    "start": "813540",
    "end": "815940"
  },
  {
    "text": "is not a replacement for object oriented",
    "start": "815940",
    "end": "817740"
  },
  {
    "text": "programming but a complement to it you",
    "start": "817740",
    "end": "819779"
  },
  {
    "text": "can use things like pattern matching",
    "start": "819779",
    "end": "820980"
  },
  {
    "text": "enhanced switch and the instance of",
    "start": "820980",
    "end": "823260"
  },
  {
    "text": "operator to give your code a new",
    "start": "823260",
    "end": "824760"
  },
  {
    "text": "polymorphism without exposing dispatch",
    "start": "824760",
    "end": "826560"
  },
  {
    "text": "point in your uh public API okay I love",
    "start": "826560",
    "end": "829800"
  },
  {
    "text": "how my pi and python uh cache catches",
    "start": "829800",
    "end": "832560"
  },
  {
    "text": "exhaustiveness there I'm not sure what",
    "start": "832560",
    "end": "834360"
  },
  {
    "text": "that means but okay",
    "start": "834360",
    "end": "836279"
  },
  {
    "text": "sorry I just read the first statement",
    "start": "836279",
    "end": "837720"
  },
  {
    "text": "that came that I saw there are so many",
    "start": "837720",
    "end": "839160"
  },
  {
    "text": "other features with Java 21 there's a",
    "start": "839160",
    "end": "840600"
  },
  {
    "text": "bunch of small but nice things of course",
    "start": "840600",
    "end": "842040"
  },
  {
    "text": "all right let's see improvements uh in",
    "start": "842040",
    "end": "844380"
  },
  {
    "text": "mathematics okay",
    "start": "844380",
    "end": "846660"
  },
  {
    "text": "division divide exact",
    "start": "846660",
    "end": "849360"
  },
  {
    "text": "isn't that just",
    "start": "849360",
    "end": "851399"
  },
  {
    "text": "integer",
    "start": "851399",
    "end": "852959"
  },
  {
    "text": "when I'm confused",
    "start": "852959",
    "end": "855180"
  },
  {
    "text": "Ai and algorithms efficient uh math",
    "start": "855180",
    "end": "857339"
  },
  {
    "text": "let's see mathematics is more important",
    "start": "857339",
    "end": "859320"
  },
  {
    "text": "than ever the new jdk has uh let's see",
    "start": "859320",
    "end": "861899"
  },
  {
    "text": "some nice improvements here including",
    "start": "861899",
    "end": "863399"
  },
  {
    "text": "parallel multiplication for big integers",
    "start": "863399",
    "end": "865320"
  },
  {
    "text": "oh and various overloads for division",
    "start": "865320",
    "end": "867120"
  },
  {
    "text": "that throw an exception if there's an",
    "start": "867120",
    "end": "868860"
  },
  {
    "text": "overflow not that there's let's see not",
    "start": "868860",
    "end": "871620"
  },
  {
    "text": "just if there's a divide by zero error",
    "start": "871620",
    "end": "873420"
  },
  {
    "text": "oh okay divide exactly so it throws",
    "start": "873420",
    "end": "875880"
  },
  {
    "text": "exceptions for anything that is a uh",
    "start": "875880",
    "end": "878880"
  },
  {
    "text": "over uh let's see a uh overflow",
    "start": "878880",
    "end": "881100"
  },
  {
    "text": "exception okay",
    "start": "881100",
    "end": "883380"
  },
  {
    "text": "parallel multiply big integer two",
    "start": "883380",
    "end": "888000"
  },
  {
    "text": "that's kind of cool that you can do",
    "start": "888000",
    "end": "889740"
  },
  {
    "text": "parallel multiply",
    "start": "889740",
    "end": "891779"
  },
  {
    "text": "I'm not really sure what it means to",
    "start": "891779",
    "end": "893160"
  },
  {
    "text": "tell you the truth though",
    "start": "893160",
    "end": "895079"
  },
  {
    "text": "how can division",
    "start": "895079",
    "end": "896880"
  },
  {
    "text": "overflow it can underflow can it uh",
    "start": "896880",
    "end": "899820"
  },
  {
    "text": "let's see okay uh let's see future State",
    "start": "899820",
    "end": "901500"
  },
  {
    "text": "uh if you're doing asynchronous",
    "start": "901500",
    "end": "903180"
  },
  {
    "text": "programming yes uh there is a thing even",
    "start": "903180",
    "end": "905040"
  },
  {
    "text": "with the project Luma then you can you'd",
    "start": "905040",
    "end": "907139"
  },
  {
    "text": "be pleased to know your old friend",
    "start": "907139",
    "end": "908220"
  },
  {
    "text": "future T now makes available State",
    "start": "908220",
    "end": "910019"
  },
  {
    "text": "instance that you can switch to see the",
    "start": "910019",
    "end": "912120"
  },
  {
    "text": "status of the ongoing asynchronous",
    "start": "912120",
    "end": "913560"
  },
  {
    "text": "operation",
    "start": "913560",
    "end": "914880"
  },
  {
    "text": "you handle your own future cases in Java",
    "start": "914880",
    "end": "917699"
  },
  {
    "text": "that can't be right",
    "start": "917699",
    "end": "919740"
  },
  {
    "text": "I mean this is nice to be able to say",
    "start": "919740",
    "end": "921480"
  },
  {
    "text": "hey where are you at",
    "start": "921480",
    "end": "924120"
  },
  {
    "text": "a little bit surprising that this is a",
    "start": "924120",
    "end": "927720"
  },
  {
    "text": "that this this this that this is even a",
    "start": "927720",
    "end": "931019"
  },
  {
    "text": "thing I'm a little bit confused by this",
    "start": "931019",
    "end": "932339"
  },
  {
    "text": "but okay I I wonder what I always get",
    "start": "932339",
    "end": "934380"
  },
  {
    "text": "very confused as to why you'd want to do",
    "start": "934380",
    "end": "936120"
  },
  {
    "text": "this I'm sure there's a reason that I'm",
    "start": "936120",
    "end": "938339"
  },
  {
    "text": "missing I bet you there's some low level",
    "start": "938339",
    "end": "940500"
  },
  {
    "text": "API that really just wants the super",
    "start": "940500",
    "end": "942300"
  },
  {
    "text": "fine grain control over everything",
    "start": "942300",
    "end": "944519"
  },
  {
    "text": "I'm just not sure that I understand why",
    "start": "944519",
    "end": "946260"
  },
  {
    "text": "you'd want to do that",
    "start": "946260",
    "end": "947820"
  },
  {
    "text": "the future is now old man Enterprise",
    "start": "947820",
    "end": "949740"
  },
  {
    "text": "only okay",
    "start": "949740",
    "end": "951660"
  },
  {
    "start": "950000",
    "end": "1040000"
  },
  {
    "text": "Fair auto closable HTTP client the HTTP",
    "start": "951660",
    "end": "955440"
  },
  {
    "text": "the HTTP client API is where you might",
    "start": "955440",
    "end": "958560"
  },
  {
    "text": "want to wrap async operations in the",
    "start": "958560",
    "end": "960660"
  },
  {
    "text": "future and use project again project",
    "start": "960660",
    "end": "962339"
  },
  {
    "text": "Loom is mentioned many times uh the HTTP",
    "start": "962339",
    "end": "964920"
  },
  {
    "text": "client API has existed since Java 11",
    "start": "964920",
    "end": "967680"
  },
  {
    "text": "which is now full 10 releases in the",
    "start": "967680",
    "end": "969660"
  },
  {
    "text": "distant past but now it has a spiffy new",
    "start": "969660",
    "end": "971820"
  },
  {
    "text": "auto closable API all right so we create",
    "start": "971820",
    "end": "974279"
  },
  {
    "text": "a new API we do this we do a new little",
    "start": "974279",
    "end": "977399"
  },
  {
    "text": "Builder we're gonna go to adobe.com",
    "start": "977399",
    "end": "979199"
  },
  {
    "text": "apparently we're going to send the",
    "start": "979199",
    "end": "980639"
  },
  {
    "text": "request again the spacing is just",
    "start": "980639",
    "end": "982980"
  },
  {
    "text": "murdering me can we just can we just get",
    "start": "982980",
    "end": "986160"
  },
  {
    "text": "this can we just get this spacing",
    "start": "986160",
    "end": "989339"
  },
  {
    "text": "please uh assertion equal status code",
    "start": "989339",
    "end": "992880"
  },
  {
    "text": "get the body and then it closes this we",
    "start": "992880",
    "end": "994980"
  },
  {
    "text": "want to close the HTTP client",
    "start": "994980",
    "end": "996660"
  },
  {
    "text": "automatically note that if you do launch",
    "start": "996660",
    "end": "999300"
  },
  {
    "text": "any threads and send HTTP requests in",
    "start": "999300",
    "end": "1001519"
  },
  {
    "text": "them you should not use Auto closable",
    "start": "1001519",
    "end": "1003500"
  },
  {
    "text": "unless the uh care is taken only when",
    "start": "1003500",
    "end": "1005540"
  },
  {
    "text": "you reach the end of the scope okay",
    "start": "1005540",
    "end": "1006500"
  },
  {
    "text": "let's see where's the auto closable",
    "start": "1006500",
    "end": "1008959"
  },
  {
    "text": "where do you see Auto closable in here",
    "start": "1008959",
    "end": "1011600"
  },
  {
    "text": "is there some sort of configuration that",
    "start": "1011600",
    "end": "1013339"
  },
  {
    "text": "I'm missing here the try oh the try is",
    "start": "1013339",
    "end": "1016040"
  },
  {
    "text": "auto closable oh okay okay so at the end",
    "start": "1016040",
    "end": "1019279"
  },
  {
    "text": "of the try it just Auto closes",
    "start": "1019279",
    "end": "1021139"
  },
  {
    "text": "okay",
    "start": "1021139",
    "end": "1023060"
  },
  {
    "text": "oh it's in the oh I yeah I totally",
    "start": "1023060",
    "end": "1025280"
  },
  {
    "text": "missed that Triad parentheses okay this",
    "start": "1025280",
    "end": "1028100"
  },
  {
    "text": "makes a lot of sense that's pretty cool",
    "start": "1028100",
    "end": "1030740"
  },
  {
    "text": "you must have to implement some sort of",
    "start": "1030740",
    "end": "1032178"
  },
  {
    "text": "interface and then it just automatically",
    "start": "1032179",
    "end": "1033620"
  },
  {
    "text": "works try try try stop trying you know",
    "start": "1033620",
    "end": "1037760"
  },
  {
    "text": "at first you don't succeed try try again",
    "start": "1037760",
    "end": "1040280"
  },
  {
    "start": "1040000",
    "end": "1100000"
  },
  {
    "text": "string enhancements a lot of men",
    "start": "1040280",
    "end": "1044660"
  },
  {
    "text": "need string enhancements as they get",
    "start": "1044660",
    "end": "1046459"
  },
  {
    "text": "older I used HP uh body handlers of",
    "start": "1046459",
    "end": "1048980"
  },
  {
    "text": "string to get the string response in",
    "start": "1048980",
    "end": "1050540"
  },
  {
    "text": "that example you can do all sorts of",
    "start": "1050540",
    "end": "1051860"
  },
  {
    "text": "objects back let's see you can get all",
    "start": "1051860",
    "end": "1054080"
  },
  {
    "text": "sorts of objects back not just strings",
    "start": "1054080",
    "end": "1055760"
  },
  {
    "text": "but string results are nice because",
    "start": "1055760",
    "end": "1057260"
  },
  {
    "text": "there's great segue to another fantastic",
    "start": "1057260",
    "end": "1059419"
  },
  {
    "text": "feature in Java 21 the Segways are",
    "start": "1059419",
    "end": "1061700"
  },
  {
    "text": "unstoppable the new let's see the new",
    "start": "1061700",
    "end": "1063679"
  },
  {
    "text": "support for working with string",
    "start": "1063679",
    "end": "1064940"
  },
  {
    "text": "instances this can show let's see this",
    "start": "1064940",
    "end": "1066980"
  },
  {
    "text": "class shows two of my favorite repeat",
    "start": "1066980",
    "end": "1068299"
  },
  {
    "text": "operation and string Builder okay",
    "start": "1068299",
    "end": "1070520"
  },
  {
    "text": "I mean quality of life feature okay",
    "start": "1070520",
    "end": "1072860"
  },
  {
    "text": "that's a quality of life feature I love",
    "start": "1072860",
    "end": "1076520"
  },
  {
    "text": "how everything you are saying has been",
    "start": "1076520",
    "end": "1078080"
  },
  {
    "text": "cool in C sharp for years but you hate C",
    "start": "1078080",
    "end": "1079820"
  },
  {
    "text": "sharp no bisco I think this is stupid",
    "start": "1079820",
    "end": "1081799"
  },
  {
    "text": "too okay this has been in",
    "start": "1081799",
    "end": "1085340"
  },
  {
    "text": "this is even in JavaScript for for years",
    "start": "1085340",
    "end": "1087919"
  },
  {
    "text": "at this point",
    "start": "1087919",
    "end": "1089059"
  },
  {
    "text": "Python's had it since forever",
    "start": "1089059",
    "end": "1091880"
  },
  {
    "text": "like literally forever okay uh sequence",
    "start": "1091880",
    "end": "1095179"
  },
  {
    "text": "I don't think we need any explanation",
    "start": "1095179",
    "end": "1096740"
  },
  {
    "text": "here uh let's see modern C sharp looks",
    "start": "1096740",
    "end": "1099200"
  },
  {
    "text": "sort of nice okay people love C sharp I",
    "start": "1099200",
    "end": "1100880"
  },
  {
    "start": "1100000",
    "end": "1200000"
  },
  {
    "text": "get it I get it I don't uh you'll need",
    "start": "1100880",
    "end": "1102799"
  },
  {
    "text": "an order collection uh to sort those",
    "start": "1102799",
    "end": "1104840"
  },
  {
    "text": "strings instance Java offers a few of",
    "start": "1104840",
    "end": "1107120"
  },
  {
    "text": "them linked hash map list but they don't",
    "start": "1107120",
    "end": "1109580"
  },
  {
    "text": "have common ancestor now they do welcome",
    "start": "1109580",
    "end": "1112280"
  },
  {
    "text": "to sequenced collection",
    "start": "1112280",
    "end": "1114100"
  },
  {
    "text": "hierarchy will continue",
    "start": "1114100",
    "end": "1117559"
  },
  {
    "text": "until morale improve",
    "start": "1117559",
    "end": "1121840"
  },
  {
    "text": "improve in this example we work with a",
    "start": "1122480",
    "end": "1124160"
  },
  {
    "text": "simple arraylist string and use the",
    "start": "1124160",
    "end": "1125960"
  },
  {
    "text": "fancy new Factory methods for things",
    "start": "1125960",
    "end": "1127460"
  },
  {
    "text": "like linked hash set this new Factory",
    "start": "1127460",
    "end": "1129799"
  },
  {
    "text": "method does the same math internally to",
    "start": "1129799",
    "end": "1131780"
  },
  {
    "text": "guarantee that it won't have to",
    "start": "1131780",
    "end": "1133160"
  },
  {
    "text": "rebalance and thus slowly rehash",
    "start": "1133160",
    "end": "1134720"
  },
  {
    "text": "everything before you've added as many",
    "start": "1134720",
    "end": "1136520"
  },
  {
    "text": "elements as you've stipulated in the",
    "start": "1136520",
    "end": "1138260"
  },
  {
    "text": "Constructor",
    "start": "1138260",
    "end": "1139160"
  },
  {
    "text": "let's go",
    "start": "1139160",
    "end": "1141260"
  },
  {
    "text": "this syntax is Crazy by the way this is",
    "start": "1141260",
    "end": "1144200"
  },
  {
    "text": "the craziest syntax I've ever seen",
    "start": "1144200",
    "end": "1145900"
  },
  {
    "text": "linked hash set",
    "start": "1145900",
    "end": "1148039"
  },
  {
    "text": "hmm",
    "start": "1148039",
    "end": "1149120"
  },
  {
    "text": "this is like a a micro turbo fish this",
    "start": "1149120",
    "end": "1153080"
  },
  {
    "text": "is a micro fish you slapped a fish new",
    "start": "1153080",
    "end": "1156559"
  },
  {
    "text": "linked hash set what does this go now",
    "start": "1156559",
    "end": "1158720"
  },
  {
    "text": "like what okay is this rust what does",
    "start": "1158720",
    "end": "1161419"
  },
  {
    "text": "this go like what are we doing here it's",
    "start": "1161419",
    "end": "1164000"
  },
  {
    "text": "a it's a micro fish it's a nano fish uh",
    "start": "1164000",
    "end": "1166760"
  },
  {
    "text": "also fine let's see let's see list",
    "start": "1166760",
    "end": "1169640"
  },
  {
    "text": "uh instance of sequence collection okay",
    "start": "1169640",
    "end": "1171740"
  },
  {
    "text": "okay we get the secret okay so then we",
    "start": "1171740",
    "end": "1174200"
  },
  {
    "text": "can add add first",
    "start": "1174200",
    "end": "1175700"
  },
  {
    "text": "this overrides the first place to",
    "start": "1175700",
    "end": "1177200"
  },
  {
    "text": "element okay this returns okay yeah yeah",
    "start": "1177200",
    "end": "1178700"
  },
  {
    "text": "yeah yeah yeah yeah yeah this returns to",
    "start": "1178700",
    "end": "1180260"
  },
  {
    "text": "first place element interesting wow okay",
    "start": "1180260",
    "end": "1182059"
  },
  {
    "text": "virtual threads and project Loom love",
    "start": "1182059",
    "end": "1184160"
  },
  {
    "text": "this project Loom whatever Loom is it's",
    "start": "1184160",
    "end": "1186140"
  },
  {
    "text": "looming over us finally we get to loom",
    "start": "1186140",
    "end": "1189620"
  },
  {
    "text": "finally you've no doubt heard about uh a",
    "start": "1189620",
    "end": "1193039"
  },
  {
    "text": "lot about Loom undoubtedly",
    "start": "1193039",
    "end": "1194820"
  },
  {
    "text": "[Music]",
    "start": "1194820",
    "end": "1196660"
  },
  {
    "text": "undoubtedly at this point dude comments",
    "start": "1196660",
    "end": "1198980"
  },
  {
    "text": "are on XML I told you XML is better than",
    "start": "1198980",
    "end": "1201020"
  },
  {
    "start": "1200000",
    "end": "1627000"
  },
  {
    "text": "the ammo",
    "start": "1201020",
    "end": "1202100"
  },
  {
    "text": "uh the basic idea is to make scale uh is",
    "start": "1202100",
    "end": "1204799"
  },
  {
    "text": "to make scalable the code you wrote in",
    "start": "1204799",
    "end": "1206660"
  },
  {
    "text": "college that's never been a statement",
    "start": "1206660",
    "end": "1208700"
  },
  {
    "text": "I've ever once thought of or thought was",
    "start": "1208700",
    "end": "1210860"
  },
  {
    "text": "a good idea ever in my entire lifetime",
    "start": "1210860",
    "end": "1212720"
  },
  {
    "text": "but okay let's fight let's find out",
    "start": "1212720",
    "end": "1218679"
  },
  {
    "text": "um you shouldn't take anything I wrote",
    "start": "1219020",
    "end": "1220940"
  },
  {
    "text": "in college what do I mean by that let's",
    "start": "1220940",
    "end": "1222620"
  },
  {
    "text": "write a super simple network service",
    "start": "1222620",
    "end": "1223940"
  },
  {
    "text": "that prints out whatever is given to us",
    "start": "1223940",
    "end": "1225740"
  },
  {
    "text": "we must read from the input stream and",
    "start": "1225740",
    "end": "1227600"
  },
  {
    "text": "accrue everything into a new buffer and",
    "start": "1227600",
    "end": "1229820"
  },
  {
    "text": "then uh when we the request finishes",
    "start": "1229820",
    "end": "1232280"
  },
  {
    "text": "we'll print out the contents okay yep",
    "start": "1232280",
    "end": "1234260"
  },
  {
    "text": "the problem is we might get a lot of",
    "start": "1234260",
    "end": "1235520"
  },
  {
    "text": "data simultaneously so we'll need to use",
    "start": "1235520",
    "end": "1237080"
  },
  {
    "text": "threads to handle more than one request",
    "start": "1237080",
    "end": "1238340"
  },
  {
    "text": "at a time okay",
    "start": "1238340",
    "end": "1239960"
  },
  {
    "text": "try execute oh this is the new try thing",
    "start": "1239960",
    "end": "1242260"
  },
  {
    "text": "try uh server socket new server socket",
    "start": "1242260",
    "end": "1245299"
  },
  {
    "text": "9000 while true okay we get we get the",
    "start": "1245299",
    "end": "1247700"
  },
  {
    "text": "new we get to do a little except little",
    "start": "1247700",
    "end": "1249320"
  },
  {
    "text": "Berkeley sockets uh submit okay try",
    "start": "1249320",
    "end": "1252919"
  },
  {
    "text": "handle request yeah yeah yeah yeah yeah",
    "start": "1252919",
    "end": "1255160"
  },
  {
    "text": "handle request uh I don't know what",
    "start": "1255160",
    "end": "1257780"
  },
  {
    "text": "about bow is bows byte array output",
    "start": "1257780",
    "end": "1260900"
  },
  {
    "text": "stream give me that bowels baby try",
    "start": "1260900",
    "end": "1263320"
  },
  {
    "text": "input string while next read put it in",
    "start": "1263320",
    "end": "1266000"
  },
  {
    "text": "there okay string it print it let's go",
    "start": "1266000",
    "end": "1268940"
  },
  {
    "text": "okay that makes sense bowels",
    "start": "1268940",
    "end": "1271780"
  },
  {
    "text": "bowels that's pretty trivial networking",
    "start": "1271780",
    "end": "1275120"
  },
  {
    "text": "101 stuff create a server socket wait",
    "start": "1275120",
    "end": "1277220"
  },
  {
    "text": "for new clients represented by the",
    "start": "1277220",
    "end": "1278480"
  },
  {
    "text": "instance of socket to appear as each one",
    "start": "1278480",
    "end": "1279980"
  },
  {
    "text": "arrives hand it off to a thread from a",
    "start": "1279980",
    "end": "1281660"
  },
  {
    "text": "thread pool each thread reads out the",
    "start": "1281660",
    "end": "1283520"
  },
  {
    "text": "data on the client socket instance input",
    "start": "1283520",
    "end": "1285140"
  },
  {
    "text": "stream references client might",
    "start": "1285140",
    "end": "1286340"
  },
  {
    "text": "disconnect uh experience latency or have",
    "start": "1286340",
    "end": "1288380"
  },
  {
    "text": "large chunks of data to send all of",
    "start": "1288380",
    "end": "1290179"
  },
  {
    "text": "which is a problem because there are",
    "start": "1290179",
    "end": "1291200"
  },
  {
    "text": "only so many threads available and we",
    "start": "1291200",
    "end": "1292940"
  },
  {
    "text": "must choose not to waste our little time",
    "start": "1292940",
    "end": "1294200"
  },
  {
    "text": "on them we uh we're using threads to",
    "start": "1294200",
    "end": "1296419"
  },
  {
    "text": "avoid pileup of requests that can't",
    "start": "1296419",
    "end": "1298039"
  },
  {
    "text": "handle fast enough absolutely but here",
    "start": "1298039",
    "end": "1300200"
  },
  {
    "text": "again we are defeated because before",
    "start": "1300200",
    "end": "1301820"
  },
  {
    "text": "Java 21 threads were expensive",
    "start": "1301820",
    "end": "1304340"
  },
  {
    "text": "ah this is the old green thread argument",
    "start": "1304340",
    "end": "1306679"
  },
  {
    "text": "here uh they cost about two megabytes of",
    "start": "1306679",
    "end": "1309559"
  },
  {
    "text": "ram each uh and let's see so we'd pull",
    "start": "1309559",
    "end": "1312679"
  },
  {
    "text": "them in a thread pool and reuse them",
    "start": "1312679",
    "end": "1314720"
  },
  {
    "text": "but even here if we have too many",
    "start": "1314720",
    "end": "1316400"
  },
  {
    "text": "requests we'll end up in a situation",
    "start": "1316400",
    "end": "1317840"
  },
  {
    "text": "where none of the threads in the pool",
    "start": "1317840",
    "end": "1319100"
  },
  {
    "text": "are available they're stuck waiting on",
    "start": "1319100",
    "end": "1320840"
  },
  {
    "text": "some request or another to finish well",
    "start": "1320840",
    "end": "1322640"
  },
  {
    "text": "sort of maybe we're just sitting there",
    "start": "1322640",
    "end": "1324440"
  },
  {
    "text": "maybe for the next bite from the input",
    "start": "1324440",
    "end": "1326419"
  },
  {
    "text": "stream but they're unavailable for use",
    "start": "1326419",
    "end": "1327860"
  },
  {
    "text": "the threads are blocked they're probably",
    "start": "1327860",
    "end": "1329960"
  },
  {
    "text": "waiting for data from the client the",
    "start": "1329960",
    "end": "1331700"
  },
  {
    "text": "unfortunate state of things is that the",
    "start": "1331700",
    "end": "1333080"
  },
  {
    "text": "server waiting on data has no choice but",
    "start": "1333080",
    "end": "1334820"
  },
  {
    "text": "to sit there parked on a thread nobody",
    "start": "1334820",
    "end": "1337100"
  },
  {
    "text": "allowing or not allowing anybody to even",
    "start": "1337100",
    "end": "1339679"
  },
  {
    "text": "use it wow this is beautiful now Java 21",
    "start": "1339679",
    "end": "1343340"
  },
  {
    "text": "introduces a new sort of thread a",
    "start": "1343340",
    "end": "1345980"
  },
  {
    "text": "virtual thread this must be a brand new",
    "start": "1345980",
    "end": "1348620"
  },
  {
    "text": "concept now we can create millions of",
    "start": "1348620",
    "end": "1351440"
  },
  {
    "text": "threads for the Heap it's easy but",
    "start": "1351440",
    "end": "1353539"
  },
  {
    "text": "fundamentally the facts on the ground",
    "start": "1353539",
    "end": "1354919"
  },
  {
    "text": "are that the actual threads on which",
    "start": "1354919",
    "end": "1357020"
  },
  {
    "text": "virtual threads execute are expensive so",
    "start": "1357020",
    "end": "1359299"
  },
  {
    "text": "how can the JRE let us have millions of",
    "start": "1359299",
    "end": "1361159"
  },
  {
    "text": "threads for actual work it has vastly",
    "start": "1361159",
    "end": "1362960"
  },
  {
    "text": "improved the runtime that now notices",
    "start": "1362960",
    "end": "1364700"
  },
  {
    "text": "when we block and suspend execution on",
    "start": "1364700",
    "end": "1367520"
  },
  {
    "text": "that thread until the thing we are",
    "start": "1367520",
    "end": "1369860"
  },
  {
    "text": "waiting for arrives then it quietly puts",
    "start": "1369860",
    "end": "1372260"
  },
  {
    "text": "us back in another thread the actual",
    "start": "1372260",
    "end": "1374840"
  },
  {
    "text": "threads act as carriers for virtual",
    "start": "1374840",
    "end": "1377120"
  },
  {
    "text": "threads allowing us to start millions of",
    "start": "1377120",
    "end": "1378919"
  },
  {
    "text": "them",
    "start": "1378919",
    "end": "1380780"
  },
  {
    "text": "introducing at least a decade ago",
    "start": "1380780",
    "end": "1383360"
  },
  {
    "text": "standard features introducing set",
    "start": "1383360",
    "end": "1386780"
  },
  {
    "text": "timeout from JavaScript Circa 1995.",
    "start": "1386780",
    "end": "1392059"
  },
  {
    "text": "um",
    "start": "1392059",
    "end": "1392840"
  },
  {
    "text": "okay that's pretty cool well I mean that",
    "start": "1392840",
    "end": "1396740"
  },
  {
    "text": "that's pretty cool",
    "start": "1396740",
    "end": "1398419"
  },
  {
    "text": "wow what year is it 2005 yeah yeah I",
    "start": "1398419",
    "end": "1401299"
  },
  {
    "text": "still don't know what Loom is they",
    "start": "1401299",
    "end": "1402740"
  },
  {
    "text": "really they really debated us on this",
    "start": "1402740",
    "end": "1405320"
  },
  {
    "text": "whole Loom thing okay Loom test oh yeah",
    "start": "1405320",
    "end": "1408080"
  },
  {
    "text": "concurrent skip list oh Java's",
    "start": "1408080",
    "end": "1410840"
  },
  {
    "text": "concurrent data structures are pretty",
    "start": "1410840",
    "end": "1412820"
  },
  {
    "text": "they're pretty badass okay I must say",
    "start": "1412820",
    "end": "1414500"
  },
  {
    "text": "that the concurrent",
    "start": "1414500",
    "end": "1416539"
  },
  {
    "text": "the the concurrent",
    "start": "1416539",
    "end": "1418640"
  },
  {
    "text": "data structures are badass in Java you",
    "start": "1418640",
    "end": "1421100"
  },
  {
    "text": "they are they are badass",
    "start": "1421100",
    "end": "1423559"
  },
  {
    "text": "um",
    "start": "1423559",
    "end": "1424340"
  },
  {
    "text": "you don't have to worry about mutexes at",
    "start": "1424340",
    "end": "1426380"
  },
  {
    "text": "all and they're just like one of the",
    "start": "1426380",
    "end": "1428179"
  },
  {
    "text": "fastest out there is on the market uh",
    "start": "1428179",
    "end": "1429799"
  },
  {
    "text": "this is really the code I run College",
    "start": "1429799",
    "end": "1431120"
  },
  {
    "text": "this is legitimately the code I wrote in",
    "start": "1431120",
    "end": "1432860"
  },
  {
    "text": "college it's true at least this is yeah",
    "start": "1432860",
    "end": "1435679"
  },
  {
    "text": "no it really is amazing indentation the",
    "start": "1435679",
    "end": "1439100"
  },
  {
    "text": "indentation",
    "start": "1439100",
    "end": "1441140"
  },
  {
    "text": "yo dog I heard you like four space",
    "start": "1441140",
    "end": "1443780"
  },
  {
    "text": "annotation shut up I like eight yeah",
    "start": "1443780",
    "end": "1446659"
  },
  {
    "text": "right I like eight yeah right back to",
    "start": "1446659",
    "end": "1449000"
  },
  {
    "text": "four uh we're using a new Factory method",
    "start": "1449000",
    "end": "1450919"
  },
  {
    "text": "in Java 21 to create virtual threads",
    "start": "1450919",
    "end": "1452600"
  },
  {
    "text": "okay this is great I don't honestly I",
    "start": "1452600",
    "end": "1454760"
  },
  {
    "text": "that's you know I want to love Java",
    "start": "1454760",
    "end": "1458539"
  },
  {
    "text": "okay I don't actually I don't actually",
    "start": "1458539",
    "end": "1460460"
  },
  {
    "text": "care about loving Java",
    "start": "1460460",
    "end": "1462280"
  },
  {
    "text": "I don't care",
    "start": "1462280",
    "end": "1464480"
  },
  {
    "text": "um loving Java but if I did want to love",
    "start": "1464480",
    "end": "1466520"
  },
  {
    "text": "Java you know if I wanted to love Java I",
    "start": "1466520",
    "end": "1470360"
  },
  {
    "text": "feel like",
    "start": "1470360",
    "end": "1471860"
  },
  {
    "text": "I'm happy to see that Java's making",
    "start": "1471860",
    "end": "1475400"
  },
  {
    "text": "forward progress into catching up into",
    "start": "1475400",
    "end": "1477559"
  },
  {
    "text": "the past",
    "start": "1477559",
    "end": "1479000"
  },
  {
    "text": "that's a good thing and I'm sure this",
    "start": "1479000",
    "end": "1481039"
  },
  {
    "text": "makes a lot of lives a lot of people's",
    "start": "1481039",
    "end": "1482780"
  },
  {
    "text": "lives better because remember can we be",
    "start": "1482780",
    "end": "1484400"
  },
  {
    "text": "can we be a can we just like a quick",
    "start": "1484400",
    "end": "1486200"
  },
  {
    "text": "second here",
    "start": "1486200",
    "end": "1487280"
  },
  {
    "text": "remember",
    "start": "1487280",
    "end": "1488659"
  },
  {
    "text": "Java is still like the most used",
    "start": "1488659",
    "end": "1491120"
  },
  {
    "text": "Enterprise backend language you know",
    "start": "1491120",
    "end": "1494240"
  },
  {
    "text": "it's like used everywhere and so",
    "start": "1494240",
    "end": "1498200"
  },
  {
    "text": "defense Obama",
    "start": "1498200",
    "end": "1500299"
  },
  {
    "text": "um but hopefully this is gonna make some",
    "start": "1500299",
    "end": "1502520"
  },
  {
    "text": "people's lives better so but we're all",
    "start": "1502520",
    "end": "1504740"
  },
  {
    "text": "still using Java 8.",
    "start": "1504740",
    "end": "1506900"
  },
  {
    "text": "fair I started in 1.6 and then touched",
    "start": "1506900",
    "end": "1510500"
  },
  {
    "text": "Java 6.",
    "start": "1510500",
    "end": "1512120"
  },
  {
    "text": "and cried and groovy so I don't know",
    "start": "1512120",
    "end": "1514159"
  },
  {
    "text": "what happens Beyond Java 6.",
    "start": "1514159",
    "end": "1516740"
  },
  {
    "text": "other than in groovy you can add lists",
    "start": "1516740",
    "end": "1519320"
  },
  {
    "text": "together with the plus operator okay",
    "start": "1519320",
    "end": "1522620"
  },
  {
    "text": "the plus operator okay that's all you",
    "start": "1522620",
    "end": "1524360"
  },
  {
    "text": "need to know you got a list you got a",
    "start": "1524360",
    "end": "1525860"
  },
  {
    "text": "list just",
    "start": "1525860",
    "end": "1527299"
  },
  {
    "text": "add that just add it together",
    "start": "1527299",
    "end": "1530419"
  },
  {
    "text": "you guys have Java 8. we're still a Java",
    "start": "1530419",
    "end": "1532640"
  },
  {
    "text": "four is Java 4 even real Java 6 is",
    "start": "1532640",
    "end": "1534980"
  },
  {
    "text": "practically another language these days",
    "start": "1534980",
    "end": "1536240"
  },
  {
    "text": "yeah so it's you know I hope that a",
    "start": "1536240",
    "end": "1538880"
  },
  {
    "text": "bunch of people get to enjoy these",
    "start": "1538880",
    "end": "1540440"
  },
  {
    "text": "really great developer improvements and",
    "start": "1540440",
    "end": "1542419"
  },
  {
    "text": "I do know that these new Javas I mean",
    "start": "1542419",
    "end": "1543919"
  },
  {
    "text": "Java is fast for a",
    "start": "1543919",
    "end": "1547299"
  },
  {
    "text": "compiled bytecode garbage collected",
    "start": "1547299",
    "end": "1549919"
  },
  {
    "text": "language it is shockingly fast language",
    "start": "1549919",
    "end": "1553700"
  },
  {
    "text": "they've done an amazing job with a lot",
    "start": "1553700",
    "end": "1555980"
  },
  {
    "text": "of parts of it",
    "start": "1555980",
    "end": "1557539"
  },
  {
    "text": "um so I ca it's hard for me to",
    "start": "1557539",
    "end": "1558860"
  },
  {
    "text": "completely knock it down",
    "start": "1558860",
    "end": "1560659"
  },
  {
    "text": "it's partially interpreted it's wild",
    "start": "1560659",
    "end": "1563299"
  },
  {
    "text": "right uh to me what Java is",
    "start": "1563299",
    "end": "1566539"
  },
  {
    "text": "is that it shows that you can you can",
    "start": "1566539",
    "end": "1569120"
  },
  {
    "text": "write things that shouldn't be fast",
    "start": "1569120",
    "end": "1572419"
  },
  {
    "text": "pretty dang fast",
    "start": "1572419",
    "end": "1574520"
  },
  {
    "text": "it's impressive okay it's impressive",
    "start": "1574520",
    "end": "1576799"
  },
  {
    "text": "it's impressive that it can happen",
    "start": "1576799",
    "end": "1578960"
  },
  {
    "text": "but at the end of the day I would never",
    "start": "1578960",
    "end": "1580580"
  },
  {
    "text": "want to write Java much rather I go and",
    "start": "1580580",
    "end": "1583640"
  },
  {
    "text": "uh another thing I think something",
    "start": "1583640",
    "end": "1585440"
  },
  {
    "text": "that's really cool about Java or at",
    "start": "1585440",
    "end": "1586880"
  },
  {
    "text": "least to think about with Java is I",
    "start": "1586880",
    "end": "1588799"
  },
  {
    "text": "wonder if the Hermes engine for",
    "start": "1588799",
    "end": "1590539"
  },
  {
    "text": "JavaScript",
    "start": "1590539",
    "end": "1592159"
  },
  {
    "text": "is trying to take over",
    "start": "1592159",
    "end": "1594200"
  },
  {
    "text": "this Java this Java hold you know what I",
    "start": "1594200",
    "end": "1597260"
  },
  {
    "text": "mean kotlin these nuts absolutely do you",
    "start": "1597260",
    "end": "1599600"
  },
  {
    "text": "know what I mean like Hermes",
    "start": "1599600",
    "end": "1602120"
  },
  {
    "text": "there's something kind of exciting about",
    "start": "1602120",
    "end": "1604279"
  },
  {
    "text": "Hermes and what it's doing",
    "start": "1604279",
    "end": "1606080"
  },
  {
    "text": "I'm just throwing it out there just",
    "start": "1606080",
    "end": "1607940"
  },
  {
    "text": "throwing it out there the Java hole that",
    "start": "1607940",
    "end": "1610159"
  },
  {
    "text": "it left in my heart",
    "start": "1610159",
    "end": "1611539"
  },
  {
    "text": "also in my emotional capacity it left a",
    "start": "1611539",
    "end": "1614659"
  },
  {
    "text": "couple holes in me okay Java left more",
    "start": "1614659",
    "end": "1616340"
  },
  {
    "text": "than one hole in me but it filled a",
    "start": "1616340",
    "end": "1618559"
  },
  {
    "text": "couple holes at me you know what I'm",
    "start": "1618559",
    "end": "1619700"
  },
  {
    "text": "talking about",
    "start": "1619700",
    "end": "1620840"
  },
  {
    "text": "you know what I'm talking about the name",
    "start": "1620840",
    "end": "1625580"
  },
  {
    "text": "this is the Java Jen",
    "start": "1625580",
    "end": "1629200"
  }
]