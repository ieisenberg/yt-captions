[
  {
    "text": "EI EO games the guy that brought you a million checkboxes wrote down every",
    "start": "40",
    "end": "5359"
  },
  {
    "text": "single U ID my guess is that uh I mean I love I like the joke I've been struggling to remember all the uu IDs",
    "start": "5359",
    "end": "10960"
  },
  {
    "text": "there's a lot of them so I wrote them all down and I've never actually I I've seen this thing pop up like nine, times",
    "start": "10960",
    "end": "17000"
  },
  {
    "text": "on Twitter I haven't actually looked at it and so here it is it's just an in ordered list I assume it feels",
    "start": "17000",
    "end": "25000"
  },
  {
    "text": "very very good I like how it says well only the V4 ones that's also very funny",
    "start": "25000",
    "end": "30880"
  },
  {
    "text": "uh okay hold on is there like a lot of elements here or is it or are is he doing some fancy I assume he's doing",
    "start": "30880",
    "end": "37640"
  },
  {
    "text": "some fancy footwork because it just looks it was obviously too smooth yeah",
    "start": "37640",
    "end": "43200"
  },
  {
    "text": "okay and so it's just JavaScript scrolling and the scroll bar up here is just that way and it's just it's just updating them really really fast okay",
    "start": "43200",
    "end": "49640"
  },
  {
    "text": "that's what I figured it was doing that's fantastic this is beautiful absolutely beautiful I found my government uu ID is there a website that",
    "start": "49640",
    "end": "56359"
  },
  {
    "text": "leaked uh all the CV C CVV codes oh my gosh just is Unstoppable I Betty vers yeah",
    "start": "56359",
    "end": "62840"
  },
  {
    "text": "it's just it's just a nice little list this is really really good you'll notice that there's no Dom updates right the",
    "start": "62840",
    "end": "68280"
  },
  {
    "text": "dumb updates exist right in here I assume there you go I wonder how he did this where it's it looks randomized this",
    "start": "68280",
    "end": "76080"
  },
  {
    "text": "way but then it's counted right here I wonder how that algorithm worked because like you know there's you could do",
    "start": "76080",
    "end": "81880"
  },
  {
    "text": "search I feel like I understand how the search works that feels like it's pretty simple",
    "start": "81880",
    "end": "87000"
  },
  {
    "text": "to to understand how the search works oh that's not how I would have done it interesting how many occurrences are",
    "start": "87000",
    "end": "93840"
  },
  {
    "text": "there crazy okay anyways uh this is good okay so let's I I want to know how this",
    "start": "93840",
    "end": "99000"
  },
  {
    "text": "thing works okay I I guess it's a it's finite like IP addresses of course it's finite it's 128 bits uh I've been",
    "start": "99000",
    "end": "105360"
  },
  {
    "text": "struggling to remember all the uu IDs there's a lot of them so I this week I wrote them all down you can see my list",
    "start": "105360",
    "end": "111000"
  },
  {
    "text": "at every uu id.com the site looks like this U uu IDs are displayed in a randomish but consistent order so you",
    "start": "111000",
    "end": "117759"
  },
  {
    "text": "can quickly search for the ones you like that's absolutely beautiful that's what I've always wanted in life you know I do",
    "start": "117759",
    "end": "123320"
  },
  {
    "text": "agree it is very hard to remember them all I mean it starts at zero and it goes all it goes It goes for a long time all",
    "start": "123320",
    "end": "130160"
  },
  {
    "text": "right uh but having all is it really that much is that 128 bits is 128 bits this is it really that long that's a big",
    "start": "130160",
    "end": "136480"
  },
  {
    "text": "ass number uh possible values made it way harder right yeah has 128 bits uh uu",
    "start": "136480",
    "end": "142959"
  },
  {
    "text": "ID fors have four reserved bits for the version and two or three bits for variant uh I chose the two bit two bit",
    "start": "142959",
    "end": "149200"
  },
  {
    "text": "variant which me with 122 bits of entropy okay that's a lot of bits so I think the final implementation here is",
    "start": "149200",
    "end": "154920"
  },
  {
    "text": "pretty interesting let me tell you about it the challenges the problem had a few major challenges browsers do not want to",
    "start": "154920",
    "end": "160000"
  },
  {
    "text": "renter a window with uh that is over a trillion trillion pixels high so I needed to handle scrolling a uh and",
    "start": "160000",
    "end": "165920"
  },
  {
    "text": "rendering on my [Laughter] own you know who would have guessed who",
    "start": "165920",
    "end": "172280"
  },
  {
    "text": "would have honestly guessed that browsers would not want to handle a trillion trillion pixel landscape I",
    "start": "172280",
    "end": "178319"
  },
  {
    "text": "think this makes sense I didn't want to generate uu IDs in order from first to last we all know the good uu IDs are in",
    "start": "178319",
    "end": "183519"
  },
  {
    "text": "the middle and so I needed a way to generate uu IDs that ensured that I generate them all uh once yeah there's",
    "start": "183519",
    "end": "189440"
  },
  {
    "text": "some sort of seed effectively as a seed to walk through all this I was handling scrolling and rendering on my own",
    "start": "189440",
    "end": "195000"
  },
  {
    "text": "control left didn't really work for search I wanted to search through every uu ID not just the ones I could see so I",
    "start": "195000",
    "end": "200319"
  },
  {
    "text": "had implemented that too well the thing is is he he must not have technically implemented it that well because when I",
    "start": "200319",
    "end": "206879"
  },
  {
    "text": "go like this look we can actually go you'll notice that I'm going through the whole list right now if I hold",
    "start": "206879",
    "end": "212560"
  },
  {
    "text": "it I just went through the whole list now I went back up to the top and I'm still back through the whole list cuz if you really think about it a uuid can end",
    "start": "212560",
    "end": "220200"
  },
  {
    "text": "with a a BB and then the amount of variations right here would",
    "start": "220200",
    "end": "226680"
  },
  {
    "text": "just be an enormous amount right because if you had 122 bits of entropy with AABB you were effectively using uh what is",
    "start": "226680",
    "end": "233760"
  },
  {
    "text": "that that's 16 bits so do a little quick 16 minus that thing so you have 104 bits left I mean that number is infinitely",
    "start": "233760",
    "end": "240280"
  },
  {
    "text": "large right so this one single spot would have an infinitely large amount of of them they're just random though right",
    "start": "240280",
    "end": "247000"
  },
  {
    "text": "what do you mean they're just random they're randomly ordered but I can go through the whole list right see you can",
    "start": "247000",
    "end": "252200"
  },
  {
    "text": "see it go through the whole list right here see now it's back up at the top like I should never be able I mean",
    "start": "252200",
    "end": "257840"
  },
  {
    "text": "technically I should never be able to do that okay hey I'm just saying technically there'd be too many uh I",
    "start": "257840",
    "end": "263560"
  },
  {
    "text": "originally figured I'd make a very very tall div only render The UU IDs that I could see this is the approach that I",
    "start": "263560",
    "end": "269840"
  },
  {
    "text": "took with 1 million checkboxes and it worked great there the idea is creating a trillion of trillions of Dom nodes is",
    "start": "269840",
    "end": "275560"
  },
  {
    "text": "expensive I like how that's just said so casually yeah doing a trillion of anything just felt really expensive so I",
    "start": "275560",
    "end": "282039"
  },
  {
    "text": "just I didn't want to do it that way but having a very high scroll position isn't uh it's still a single number so you you",
    "start": "282039",
    "end": "288919"
  },
  {
    "text": "make a div that is tall enough to contain all your elements and then just render the ones that are close along",
    "start": "288919",
    "end": "294320"
  },
  {
    "text": "with the buffer but unfortunately browsers have a maximum scroll position I'm not entirely sure what that is Ross",
    "start": "294320",
    "end": "300039"
  },
  {
    "text": "all browsers now but it seems like it's probably stored as a 32-bit INT in at least some browsers and even if it was",
    "start": "300039",
    "end": "306880"
  },
  {
    "text": "64-bit int and we're displaying All The UU IDs with a height of one pixel we'd still need an order of magnitude more",
    "start": "306880",
    "end": "312520"
  },
  {
    "text": "scroll space interesting that is a problem I did not see coming like out of all things to think about this is just",
    "start": "312520",
    "end": "319600"
  },
  {
    "text": "just it's just not the one I thought what are the limitations regarding height in pixels but ah HTML page if so",
    "start": "319600",
    "end": "324759"
  },
  {
    "text": "what are the factors affecting the maximum is it browser specific especially i7 that's a crazy question",
    "start": "324759",
    "end": "330800"
  },
  {
    "text": "this is such an old how old is this closed this thing got closed 12 years ago still being worried about ie7 in",
    "start": "330800",
    "end": "337360"
  },
  {
    "text": "2012 that is just nuts oh that is just nuts 2012 still thinking about ie7 just",
    "start": "337360",
    "end": "344960"
  },
  {
    "text": "Insanity my solution was a bit finicky to implement but conceptually pretty simple uh don't do any real scrolling uh",
    "start": "344960",
    "end": "351960"
  },
  {
    "text": "fix the height of the page to the height of the browser store the virtual scroll position in a big int update it whenever",
    "start": "351960",
    "end": "357600"
  },
  {
    "text": "the user performs a scroll like action render uu IDs based on the scroll position if we're at position 1,000 then",
    "start": "357600",
    "end": "363560"
  },
  {
    "text": "R render uh uu ID 1000 Etc yeah this makes sense okay this was Ain finically",
    "start": "363560",
    "end": "368880"
  },
  {
    "text": "large because there's a a lot of stuff that browsers do for you when it comes to scrolling so if you want a good user",
    "start": "368880",
    "end": "374680"
  },
  {
    "text": "experience that's a uh there's a lot of stuff that you need to remember and to reimplement yes scrolling sucks uh you",
    "start": "374680",
    "end": "380720"
  },
  {
    "text": "need to handle Mouse wheel and touch events yourself you need to find all the platform specific hotkeys for scrolling and add those you need to add your own",
    "start": "380720",
    "end": "387280"
  },
  {
    "text": "scroll bar and if you want uh nice scrolling animation you have to add that to yourself none of that is hard there's",
    "start": "387280",
    "end": "393400"
  },
  {
    "text": "just a lot of it yes yes yes oh man I had to do my own scrolling one time and",
    "start": "393400",
    "end": "399680"
  },
  {
    "text": "it's exceptionally it it there's just so many things that go wrong when you do your own scrolling it's shocking how",
    "start": "399680",
    "end": "406639"
  },
  {
    "text": "many like little fun facts you will end up discovering along the way it ain't worth it it's not worth it for example",
    "start": "406639",
    "end": "412800"
  },
  {
    "text": "here's my hockey for handling code I'm sure you've missed plenty of stuff hoty for handling code switch true handle key",
    "start": "412800",
    "end": "419080"
  },
  {
    "text": "and prevent arrow down animation with Delta handle let's see Arrow e up",
    "start": "419080",
    "end": "425440"
  },
  {
    "text": "space space without shift key page down with command key page up no no home end",
    "start": "425440",
    "end": "432319"
  },
  {
    "text": "Arrow up arrow down what were the other ones oh Arrow up arrow down with command key why don't you at least put them near",
    "start": "432319",
    "end": "438240"
  },
  {
    "text": "each other hey uh code Ral hey knit knit um Arrow key down should be near Arrow",
    "start": "438240",
    "end": "445199"
  },
  {
    "text": "key down up top okay that's nit I'd like to see that moved up to the tippity top buddy no vimium",
    "start": "445199",
    "end": "452199"
  },
  {
    "text": "sag uh the only thing I ended up using vimium for was really just came down to",
    "start": "452199",
    "end": "458599"
  },
  {
    "text": "me effectively just pressing uh G GG D and U and I was just like is that really",
    "start": "458599",
    "end": "464960"
  },
  {
    "text": "am I really getting anything out of this because I'm still using a lot of that because even when I press F you know like when everything lights up as",
    "start": "464960",
    "end": "470440"
  },
  {
    "text": "clickable it's just like that's not that great you know what I mean they already implemented Vim motions in a PR good",
    "start": "470440",
    "end": "476840"
  },
  {
    "text": "good that's what we're talking about uh so this got me to a list uu IDs I add some other important functionality for",
    "start": "476840",
    "end": "482319"
  },
  {
    "text": "example if I see a uu ID that I wanted to be able to uh favorite it to come back to later to or to copy it to my",
    "start": "482319",
    "end": "488240"
  },
  {
    "text": "clipboard and that gave me something like this dude favorite of uu ID is actually unhinged behavior that is the",
    "start": "488240",
    "end": "494400"
  },
  {
    "text": "most I know there's a cat there is a black cat did you see the black cat right it was a black cat uh this is the",
    "start": "494400",
    "end": "499440"
  },
  {
    "text": "most unhinged behavior is is favoring a uu ID that's crazy that's crazy talk uh",
    "start": "499440",
    "end": "505599"
  },
  {
    "text": "that works but The UU IDs are displayed in super obvious order scrolling through the list should be exciting I want to",
    "start": "505599",
    "end": "510840"
  },
  {
    "text": "see this and not that exactly we can do better ordering I assumed they use",
    "start": "510840",
    "end": "516360"
  },
  {
    "text": "malberry 32 some sort of they I mean there has to be a random order that eventually you can walk through the whole list showcat oh the black one you",
    "start": "516360",
    "end": "523640"
  },
  {
    "text": "can't just grab the black one okay the black one's all slanky and Slinky and slunks right out of the door uh",
    "start": "523640",
    "end": "528800"
  },
  {
    "text": "challenge two ordering I want to display The UU IDs in an interesting order so I came up with the following constraints",
    "start": "528800",
    "end": "534640"
  },
  {
    "text": "there should be no distinguishable pattern to the uuid uids displayed we should display every every uuid exactly",
    "start": "534640",
    "end": "540800"
  },
  {
    "text": "once uu IDs should be displayed in a consistent order after all it'd be",
    "start": "540800",
    "end": "545959"
  },
  {
    "text": "disappointing if you scrolled through every uu ID and realize that you hadn't seen one and it'd be very hard to show",
    "start": "545959",
    "end": "551160"
  },
  {
    "text": "someone a uu ID that you found if you couldn't scroll back to the same spot to find it yeah so we need to Major let's",
    "start": "551160",
    "end": "557160"
  },
  {
    "text": "see so we need to map our integer indices to U IDs in an interesting way how do we do that welcome to",
    "start": "557160",
    "end": "562240"
  },
  {
    "text": "Costco I forgot to turn off alerts um sorry I I I I will do better thank you",
    "start": "562240",
    "end": "568000"
  },
  {
    "text": "pitac uh appreciate that I'm curious what the is first idea was the linear uh",
    "start": "568000",
    "end": "573320"
  },
  {
    "text": "congruential generator I've never even heard of a linear congruential generator is it to generate an",
    "start": "573320",
    "end": "580079"
  },
  {
    "text": "interesting path is that what this is okay it's to let's see is an algorithm",
    "start": "580079",
    "end": "585440"
  },
  {
    "text": "that yields a sequence of pseudo randomized numbers calculated with a a discontinuous piece-wise linear equation",
    "start": "585440",
    "end": "591480"
  },
  {
    "text": "the method represents one of the oldest and best known pseudo pseudo random number generators huh well that's kind",
    "start": "591480",
    "end": "597959"
  },
  {
    "text": "of neat lcg generates random pseudo numbers using the following formula x +",
    "start": "597959",
    "end": "603000"
  },
  {
    "text": "1 = a * xn + C Mod M uh that is to go to the next term you need to take the",
    "start": "603000",
    "end": "608760"
  },
  {
    "text": "previous term multiply it by a and add C and take uh take that to the mod M for reasons that are Beyond me if m is a",
    "start": "608760",
    "end": "615240"
  },
  {
    "text": "power of two M and C share no common factors a minus one is divisible by all prime factors of M and A1 is divisible",
    "start": "615240",
    "end": "621800"
  },
  {
    "text": "by four if m is divisible by four you will generate all values below M before you get any repeats I would just like to",
    "start": "621800",
    "end": "628760"
  },
  {
    "text": "say Prime mentioned I knew it I knew it we are in we're so in we are so in right",
    "start": "628760",
    "end": "634320"
  },
  {
    "text": "now you don't have to understand any of it you just got to understand that there it is right there let's go let's go",
    "start": "634320",
    "end": "640399"
  },
  {
    "text": "we're in we are so in pre-read pre-reacted to so this seemed uh like a good fit we can set M to that number and",
    "start": "640399",
    "end": "647639"
  },
  {
    "text": "choose any odd number for C and easily pick an a that is above uh or that is one above the number divisible by four",
    "start": "647639",
    "end": "654440"
  },
  {
    "text": "but I quickly ran into a problems oh those are not those are not beautiful that is not beautiful this is not",
    "start": "654440",
    "end": "660240"
  },
  {
    "text": "beautiful right here yeah because oh I can to okay okay okay because yeah because even if you jump",
    "start": "660240",
    "end": "666360"
  },
  {
    "text": "forward a little bit even by a lot it's still very similar in the grand scheme of things oh no uh there's a table of U",
    "start": "666360",
    "end": "673800"
  },
  {
    "text": "IDs generated uh using nine for a five for C the uids sure don't look random",
    "start": "673800",
    "end": "679480"
  },
  {
    "text": "and that makes sense if we wanted to see anything but zeros for the High bits uh of the second uuid that we generated we",
    "start": "679480",
    "end": "685560"
  },
  {
    "text": "need a * C to approach to that number so I needed to let's see so they need to",
    "start": "685560",
    "end": "690800"
  },
  {
    "text": "each be close to that number right there those are big numbers to multiply together but computers are fast these",
    "start": "690800",
    "end": "696399"
  },
  {
    "text": "days but that gets tricky when generating later terms while there are many or there are ways to skip steps",
    "start": "696399",
    "end": "702240"
  },
  {
    "text": "with lcgs that is to generate the lcg for uh a million inputs without generating 999999 prior calculations I",
    "start": "702240",
    "end": "709160"
  },
  {
    "text": "found it hard to get the math working consistently with large constants because the intermediate steps were so",
    "start": "709160",
    "end": "714320"
  },
  {
    "text": "big oh yeah that makes sense that makes perfect sense because that that's the",
    "start": "714320",
    "end": "719399"
  },
  {
    "text": "whole problem is you can't have a you cannot have a formula that relies on the past version cuz then if you had a if",
    "start": "719399",
    "end": "725800"
  },
  {
    "text": "you tried to do any sort of scrolling it just be like nah not going to work out in an environment such as a video game",
    "start": "725800",
    "end": "731079"
  },
  {
    "text": "console taking a small number of high-ordered bits of an lcg May well",
    "start": "731079",
    "end": "736399"
  },
  {
    "text": "suffice the low order bits of lcgs when m is a power of two should never be relied on for any degree of Randomness",
    "start": "736399",
    "end": "742399"
  },
  {
    "text": "whatsoever as I was working through the problem I noticed that the Wikipedia said the low number of uh bits in lcgs",
    "start": "742399",
    "end": "747760"
  },
  {
    "text": "when m is a power of two should never be relied on for any degree of Randomness whatsoever so I decided to Pivot this is",
    "start": "747760",
    "end": "753800"
  },
  {
    "text": "this is math I don't ever I don't ever do this kind of math so I wanted to add more entropy to display uh to the",
    "start": "753800",
    "end": "760240"
  },
  {
    "text": "displayed uu IDs but to display each uu ID exactly once mathematicians would say I wanted a bjective mapping that is for",
    "start": "760240",
    "end": "768320"
  },
  {
    "text": "each index to be mapped to exactly one uu ID and vice versa I find I find a b",
    "start": "768320",
    "end": "773920"
  },
  {
    "text": "activity hard to reason about facts",
    "start": "773920",
    "end": "780040"
  },
  {
    "text": "dude the guy the guy is correct I knew my original mapping was bjective it's clear that index zero maps to uuid this",
    "start": "780040",
    "end": "787040"
  },
  {
    "text": "right here and vice versa but how could I tell whether I was preserving the bctiv when adding entropy could I take",
    "start": "787040",
    "end": "794040"
  },
  {
    "text": "my index and add a constant to it could I multiply each index by a thousand a",
    "start": "794040",
    "end": "799320"
  },
  {
    "text": "bijection bje function or one to one correspondence between two mathematical",
    "start": "799320",
    "end": "804399"
  },
  {
    "text": "sets is a function such that each element of the second set the",
    "start": "804399",
    "end": "809920"
  },
  {
    "text": "codomain is the image of exactly one element in the first set the domain",
    "start": "809920",
    "end": "815240"
  },
  {
    "text": "equivalently a bje is a relation between two sets such that each element of either set is paired with exactly one",
    "start": "815240",
    "end": "821959"
  },
  {
    "text": "element in the other set you know I haven't read things like this in a long time okay it's been a long it's been",
    "start": "821959",
    "end": "828800"
  },
  {
    "text": "it's been it's been a long time since I've been reading about BS all a sudden we went into domain math I know that's",
    "start": "828800",
    "end": "834759"
  },
  {
    "text": "just not math I'm used to a function is bjective if and only if it is invertible classic invertible function uh that is a",
    "start": "834759",
    "end": "842040"
  },
  {
    "text": "function uh X to Y is bjective if and only if the uh there is a function g y",
    "start": "842040",
    "end": "848040"
  },
  {
    "text": "tox classic that makes sense right if it's a onetoone one mapping if one can map to the other then therefore the",
    "start": "848040",
    "end": "853920"
  },
  {
    "text": "other should be able to map back to it if you think about it that makes perfect sense you just lost 20 had 200 viewers",
    "start": "853920",
    "end": "859320"
  },
  {
    "text": "absolutely this is getting way too intense uh that's fine though uh but eventually I stumbled on an observation",
    "start": "859320",
    "end": "865839"
  },
  {
    "text": "that is probably obvious to many of you but blew my mind mind as long as I could always reverse the steps that I took I",
    "start": "865839",
    "end": "872759"
  },
  {
    "text": "had preserved bctiv type one in the chat if it's uh if that was obvious you know",
    "start": "872759",
    "end": "878079"
  },
  {
    "text": "what I see right now I see a lot of people lying right now okay I see a lot of people lying right now it's kind of",
    "start": "878079",
    "end": "885120"
  },
  {
    "text": "crazy kind of crazy here uh the way I think about it is uh I have a function it takes an index and returns exactly",
    "start": "885120",
    "end": "891480"
  },
  {
    "text": "one uuid it always returns the same U ID for the same input the way that I add",
    "start": "891480",
    "end": "896639"
  },
  {
    "text": "entropy is reversible which means that I can take take a uid reverse the steps that I took and recover the index that I",
    "start": "896639",
    "end": "902320"
  },
  {
    "text": "generated it having a a duplicate would require two indices to have the same uu",
    "start": "902320",
    "end": "907839"
  },
  {
    "text": "ID which would mean that I could never that's weird to have a bullet point right here which uh would mean that I",
    "start": "907839",
    "end": "912880"
  },
  {
    "text": "could never or I could let's see I couldn't recover one of those two indices by reversing the steps that I took but we said we could always do that",
    "start": "912880",
    "end": "920160"
  },
  {
    "text": "maybe this is silly but framing the problem as come up with a function that looks like it adds entropy but is",
    "start": "920160",
    "end": "925720"
  },
  {
    "text": "reversible was a lot easier for me to think about than preserving ectivity between these two",
    "start": "925720",
    "end": "931079"
  },
  {
    "text": "sets yeah yeah that sounds it's I mean it sounds easier so this gave me a new approach uh",
    "start": "931079",
    "end": "937199"
  },
  {
    "text": "to try to write down uh with some Precision we're given 122 uh bits of input for index zero all of those bits",
    "start": "937199",
    "end": "944399"
  },
  {
    "text": "happen to be zero but they're uh but they're there we can do anything we want with those bits to add entropy as long",
    "start": "944399",
    "end": "950560"
  },
  {
    "text": "as we end up with exactly 122 bits we need to create uu ID we can take our final 122 bits and recover the original",
    "start": "950560",
    "end": "957160"
  },
  {
    "text": "122 bits so by multiplying a large number let's see so multiplying by a large number was out and since that",
    "start": "957160",
    "end": "963120"
  },
  {
    "text": "would increase the number of bits but exor was very much alive and since you can exor a number with some other number",
    "start": "963120",
    "end": "968800"
  },
  {
    "text": "twice and you get back the original number yes yes I love this I except for you can't exor yourself if you exor",
    "start": "968800",
    "end": "975079"
  },
  {
    "text": "yourself you can never recover that number because then it's all zeros it's a sad day there's this time that I had",
    "start": "975079",
    "end": "980440"
  },
  {
    "text": "to uh I tried to race somebody a chat in fact was the somebody if I could write a",
    "start": "980440",
    "end": "987079"
  },
  {
    "text": "linked list without ever with only using exort to swap the",
    "start": "987079",
    "end": "992120"
  },
  {
    "text": "nodes and one of the nodes was like a zero node it was it was just zero and I",
    "start": "992120",
    "end": "998120"
  },
  {
    "text": "lost all the data all the data went bye-bye don't do it",
    "start": "998120",
    "end": "1003360"
  },
  {
    "text": "uh it's not worth it uh FIS fil ciphers so I wanted to preserve the number of",
    "start": "1003360",
    "end": "1009199"
  },
  {
    "text": "bits that I had and some entropy in a reversible way a cipher seems like a good approach the whole idea of a cipher is to scramble text and interesting but",
    "start": "1009199",
    "end": "1015560"
  },
  {
    "text": "totally reversible if you know how if you know you know kind of way I'm sure there's a lot of good options here but I",
    "start": "1015560",
    "end": "1021480"
  },
  {
    "text": "settled for the feistel soft Cipher because it was easy for me to see how it would satisy satisfy my constraints uh F",
    "start": "1021480",
    "end": "1027880"
  },
  {
    "text": "sty ciphers are cool and very elegant the basic idea looks like this I like ciphers ciphers are exciting this isn't",
    "start": "1027880",
    "end": "1033199"
  },
  {
    "text": "quite valid code but it's good enough okay so we have these constants big numbers here produce the cipher text left unscramble what is it what what is",
    "start": "1033199",
    "end": "1040918"
  },
  {
    "text": "this division right here why is there two divide signs is this some sort of is This python python has is that like",
    "start": "1040919",
    "end": "1048160"
  },
  {
    "text": "floor divide it's floor divide isn't it floor division yeah yeah yeah yeah okay that makes sense okay so we have this",
    "start": "1048160",
    "end": "1054200"
  },
  {
    "text": "one unscrambled unscrambled we get left we get right for constants we get a seed round function rout uh right round uh",
    "start": "1054200",
    "end": "1061640"
  },
  {
    "text": "seed is the function of the right new right equals this thing X or those two together uh left equals right new uh",
    "start": "1061640",
    "end": "1068200"
  },
  {
    "text": "left side of the old right side left equals New Right add those together I don't even know what just",
    "start": "1068200",
    "end": "1075000"
  },
  {
    "text": "happened honestly I I didn't see what happened there I uh this is why he implement this is what he's implementing",
    "start": "1075000",
    "end": "1081840"
  },
  {
    "text": "right now okay so this is the one oh it mixes it up with an exor and then swaps",
    "start": "1081840",
    "end": "1087400"
  },
  {
    "text": "the two sides and then to undo it you just re you just effectively resap the two sides and re exor is that",
    "start": "1087400",
    "end": "1093880"
  },
  {
    "text": "effectively What's Happening Here uh all right that is split your input into two chunks several times in a row feed the",
    "start": "1093880",
    "end": "1099240"
  },
  {
    "text": "right chunk into the left that produces some interesting value exor that output uh with your left chunk and make your",
    "start": "1099240",
    "end": "1104520"
  },
  {
    "text": "new right chunk make your new left chunk equal to your old right chunk and then smush the chunk back together at the end",
    "start": "1104520",
    "end": "1110159"
  },
  {
    "text": "and that's really cool let's see and what's really cool about this is that it's reversible for any round function",
    "start": "1110159",
    "end": "1115280"
  },
  {
    "text": "as long as the round function is peer I think there's probably a zero problem somewhere in there like if you're if",
    "start": "1115280",
    "end": "1121159"
  },
  {
    "text": "you're there's something in there that probably gets goofy if you accidentally hit like the same number twice and then you'll just zero yourself out uh that",
    "start": "1121159",
    "end": "1128080"
  },
  {
    "text": "was originally confusing to me why is it okay for round function to be basically anything it can do something silly like",
    "start": "1128080",
    "end": "1133919"
  },
  {
    "text": "always return run to see why that uh why that's okay we we can look at the steps to reverse the fisal cipher all right so",
    "start": "1133919",
    "end": "1141039"
  },
  {
    "text": "we get left as the old one then we undo it then we undo all these things we kind of walk it backwards right pass same as",
    "start": "1141039",
    "end": "1148039"
  },
  {
    "text": "above the trick here is that we can always recover our seed because the left chunk of our current iteration and from",
    "start": "1148039",
    "end": "1153120"
  },
  {
    "text": "what we can always recover uh our old left chunk because xoring something twice produces the original input and",
    "start": "1153120",
    "end": "1159360"
  },
  {
    "text": "that means that if our round function always returned one and something let's see equally silly our data might uh not",
    "start": "1159360",
    "end": "1166280"
  },
  {
    "text": "be mixed particularly well but it would still be recovering okay I implemented the feisol cipher and tweaked my round function until it",
    "start": "1166280",
    "end": "1172440"
  },
  {
    "text": "scrambled my uu IDs in a satisfying way that was pretty straightforward my round implementation suggested by clav is a",
    "start": "1172440",
    "end": "1178360"
  },
  {
    "text": "bunch of bits shifts and exorts with some multiplication mixed in nice that's",
    "start": "1178360",
    "end": "1184480"
  },
  {
    "text": "uh that is so many big inss big inss are just not fun to work with that's great okay hey nice job but then I need to",
    "start": "1184480",
    "end": "1191159"
  },
  {
    "text": "take my scrambled bits and turn them back into uyu IDs and that was surprisingly tricky aside bit twiddling",
    "start": "1191159",
    "end": "1196240"
  },
  {
    "text": "is hard bit twiddling can get really hard if you goof up we didn't care about generating valid uid v4s we just",
    "start": "1196240",
    "end": "1201919"
  },
  {
    "text": "generated two to the 128 yeah okay and scrambled them converting the resulting bits into a hex string and intersperse",
    "start": "1201919",
    "end": "1209280"
  },
  {
    "text": "some dashes and let's see but it'd be heartbreaking if someone found a uid on the site it only to realize that it",
    "start": "1209280",
    "end": "1215480"
  },
  {
    "text": "didn't correspond to the V4 standard a uid V4 must look like",
    "start": "1215480",
    "end": "1221120"
  },
  {
    "text": "this let's see there's the randomness right okay there's the four and there's the V the V is the",
    "start": "1221120",
    "end": "1228200"
  },
  {
    "text": "let's see the two top bits here are one Zer valid values are 8 9 A and",
    "start": "1228200",
    "end": "1233640"
  },
  {
    "text": "B so you have to do a bit of constraining right it's a little awkward to take our two chunks of 61 bits and",
    "start": "1233640",
    "end": "1239080"
  },
  {
    "text": "map uh it into an available bits here we need to do something like this yeah it can get real like bit smooshing can get",
    "start": "1239080",
    "end": "1247240"
  },
  {
    "text": "really annoying there's a lot of oing and all that fun stuff that you have to do uh let's see I'm sure that someone",
    "start": "1247240",
    "end": "1253520"
  },
  {
    "text": "more comfortable with bit twiddling would have come up with a better approach here but I couldn't think of a solution other than carefully twiddling",
    "start": "1253520",
    "end": "1258799"
  },
  {
    "text": "all the bits into place let's see left initial all right",
    "start": "1258799",
    "end": "1264400"
  },
  {
    "text": "we're going to Y okay so we just effectively this just means strip off the first 61 bits right initial is going to take the big int index we're going to",
    "start": "1264400",
    "end": "1272039"
  },
  {
    "text": "take we're going to take this one we're going to shift it into the 602nd place then we're going to minus one which makes it all into a bunch of ones all",
    "start": "1272039",
    "end": "1277559"
  },
  {
    "text": "right for those that don't know what this does that that's really really simple one uh a really easy way to",
    "start": "1277559",
    "end": "1282640"
  },
  {
    "text": "produce a whole bunch of ones is to take a power of two and minus one right so",
    "start": "1282640",
    "end": "1288120"
  },
  {
    "text": "imagine you did something like this say it said you take 8 8 - 1 equals 7 how do",
    "start": "1288120",
    "end": "1293240"
  },
  {
    "text": "you represent seven in binary well you need a one you need a two and you need a four right so if you do 16 minus one",
    "start": "1293240",
    "end": "1300880"
  },
  {
    "text": "exact same thing right so that would be or 16 minus 1 equals 15 oh I couldn't",
    "start": "1300880",
    "end": "1306000"
  },
  {
    "text": "really write that and so exact same thing 15 is just simply 7 + 8 so it's",
    "start": "1306000",
    "end": "1311279"
  },
  {
    "text": "just one more bit it's just right there it's just right there this guy twiddles oh I've",
    "start": "1311279",
    "end": "1317039"
  },
  {
    "text": "twid and so all he did split he just split the two sides right shifted everything over on the far end on the",
    "start": "1317039",
    "end": "1323039"
  },
  {
    "text": "most significant side and then effectively just masked out everything on the most significant side that's what this does masks it all out all right",
    "start": "1323039",
    "end": "1329679"
  },
  {
    "text": "left and right run feisel result big int all right we're going to or in a nice left 13 shift big right this one I",
    "start": "1329679",
    "end": "1335960"
  },
  {
    "text": "always use parentheses a lot of parentheses for these ones just so I wouldn't goof it up because this",
    "start": "1335960",
    "end": "1341240"
  },
  {
    "text": "ordering gets really tricky I don't even know what's happening First 48 bits come from the left 13 bits remaining right 61",
    "start": "1341240",
    "end": "1347440"
  },
  {
    "text": "bits remaining total 48 bits used classic just a just a classic okay so",
    "start": "1347440",
    "end": "1353400"
  },
  {
    "text": "you're going to shift off 13 yeah which makes it 48 and then shift that o over 80 this this looks so easy to scrip four",
    "start": "1353400",
    "end": "1359640"
  },
  {
    "text": "bits for version all right nice beautiful all right I think I've seen enough I've seen enough bit shifting but",
    "start": "1359640",
    "end": "1366559"
  },
  {
    "text": "we get the idea just shift each one I don't I don't know I I I don't know if I could have done it any better because I would have just had the shift each step",
    "start": "1366559",
    "end": "1373240"
  },
  {
    "text": "in I think this is completely reasonable to do uh this was a bug prone for me I am bad at bit",
    "start": "1373240",
    "end": "1378960"
  },
  {
    "text": "and my let's see and an area where llm seemed to really struggle maybe because the process is mathy I had to redraw",
    "start": "1378960",
    "end": "1384799"
  },
  {
    "text": "everything to get it working but eventually it worked and it gave me a very nice list of random looking but consistently ordered U uh uu IDs",
    "start": "1384799",
    "end": "1391840"
  },
  {
    "text": "beautiful look at that look how random that looked Challenge three search when shuffling the order uh of displayed U",
    "start": "1391840",
    "end": "1398200"
  },
  {
    "text": "IDs posed a problem how could we find the U IDs uh that I liked back when the U IDs were more ordered I could at least",
    "start": "1398200",
    "end": "1404600"
  },
  {
    "text": "try to scroll to the right area to find one but that didn't work now so I needed to add search because our mixing",
    "start": "1404600",
    "end": "1410559"
  },
  {
    "text": "function was reversible adding search was uh for a specific U uid was pretty easy we just had to take a u ID",
    "start": "1410559",
    "end": "1416919"
  },
  {
    "text": "unscramble it to retrieve the original index and then jump to that index yeah but you don't list them all okay when",
    "start": "1416919",
    "end": "1422880"
  },
  {
    "text": "you search you don't find all the uuids are you trying to sell me some snake oil here so I added a little Search widget",
    "start": "1422880",
    "end": "1429919"
  },
  {
    "text": "that I just let's see that uh did just that but that definitely wasn't enough search function should be able to search",
    "start": "1429919",
    "end": "1435520"
  },
  {
    "text": "for substrings full text search The Next Step was also pretty straight for it I let's see I knew all the U IDs in view",
    "start": "1435520",
    "end": "1441400"
  },
  {
    "text": "so I could easily add full text search over them and I could extend that buffer to include U IDs above and below where I",
    "start": "1441400",
    "end": "1446840"
  },
  {
    "text": "currently looking at to search over too okay beautiful uh but uh let's see and",
    "start": "1446840",
    "end": "1452559"
  },
  {
    "text": "this is the spot where you could wonder why the uid spec authors thought uh we needed so many uu IDs I couldn't make",
    "start": "1452559",
    "end": "1458039"
  },
  {
    "text": "those buffers trillions of items large to hold all The UU IDs that's too much RAM I need to take a different approach",
    "start": "1458039",
    "end": "1463880"
  },
  {
    "text": "what do we do with search strings I couldn't search over all the uu IDs directly but maybe could take in the",
    "start": "1463880",
    "end": "1469200"
  },
  {
    "text": "search string and then back out some uu IDs that fit it something like this take the current search string find all the",
    "start": "1469200",
    "end": "1475039"
  },
  {
    "text": "places where the search string could fit within the uu ID choose one of those places and fill the surrounding digits to make a valid uu ID",
    "start": "1475039",
    "end": "1482399"
  },
  {
    "text": "okay that's reasonable it didn't do all of them a little sad it's a little sad that",
    "start": "1482399",
    "end": "1490279"
  },
  {
    "text": "he didn't list out all all of them I would have liked I would have personally liked to see all the uu IDs but I get it",
    "start": "1490279",
    "end": "1496919"
  },
  {
    "text": "I get uh let's see for example if uh the user typed as string a it could go into 31 positions in the uuid",
    "start": "1496919",
    "end": "1503960"
  },
  {
    "text": "and there are 32 characters but let's see but one must be a four but a aa aa could only fit into a single position",
    "start": "1503960",
    "end": "1510320"
  },
  {
    "text": "since there are more than four digits so it must go into the first or last grouping and a trailing uh let's see and",
    "start": "1510320",
    "end": "1516320"
  },
  {
    "text": "a trailing Dash so it can't go in the last grouping so it must instead go in the last five characters of the first grouping followed by a dash maybe it's",
    "start": "1516320",
    "end": "1523720"
  },
  {
    "text": "just because I was tired but I massively over complicated this problem to start I thought I needed to do something like",
    "start": "1523720",
    "end": "1529960"
  },
  {
    "text": "split the search string on this into chunks analyze each chunk figuring out where it could go uh long chunks must go",
    "start": "1529960",
    "end": "1535480"
  },
  {
    "text": "first or last use that to determine which digit we still need to fill in to generate the valid uu ID I went in",
    "start": "1535480",
    "end": "1541760"
  },
  {
    "text": "circles throwing away tons of code that looked like this this is just so much code for search this is such a silly",
    "start": "1541760",
    "end": "1548720"
  },
  {
    "text": "this is such a silly problem I love how uh doing unuseful stuff like this uh you can learn so much it is it's true uh one",
    "start": "1548720",
    "end": "1556039"
  },
  {
    "text": "dude it's very very true if any takeaway from this is just you learn a ridiculous",
    "start": "1556039",
    "end": "1561200"
  },
  {
    "text": "amount of things by doing something at just completely not useful one theme of",
    "start": "1561200",
    "end": "1566720"
  },
  {
    "text": "this project was Claude really struggled with what I was asking it to do and that was certainly true here Claude was also",
    "start": "1566720",
    "end": "1572080"
  },
  {
    "text": "confused about the problem I let's see about the problem as I was I still think I haven't got it quite right I can see",
    "start": "1572080",
    "end": "1578080"
  },
  {
    "text": "some inconsistencies in my implementation versus the rules you laid out would you like me to point out what I'm still missing I'm the llm now you",
    "start": "1578080",
    "end": "1584399"
  },
  {
    "text": "are uh but at some point I took a step back and realized there was a simpler solution since we want the user search",
    "start": "1584399",
    "end": "1590559"
  },
  {
    "text": "string to appear verbatim in any uid that matched we can simply take it as their input we could ask the input",
    "start": "1590559",
    "end": "1596720"
  },
  {
    "text": "string to go at the start of The UU ID ask could this string go in the second character of the uid ETC visually it",
    "start": "1596720",
    "end": "1603440"
  },
  {
    "text": "looks something like this yeah so in my head this is what I",
    "start": "1603440",
    "end": "1609720"
  },
  {
    "text": "was this is what I was wondering about like why not just literally search",
    "start": "1609720",
    "end": "1614919"
  },
  {
    "text": "through it and just do that dashes in the current search must be the in the right spot if a character uh if a search",
    "start": "1614919",
    "end": "1621279"
  },
  {
    "text": "character overlaps with the version character it must be a four let's see let's see it must be a four and if the",
    "start": "1621279",
    "end": "1626600"
  },
  {
    "text": "search character overlaps with the variant character it must also be a 89 A or B jering U IDs the search string",
    "start": "1626600",
    "end": "1632320"
  },
  {
    "text": "processing gave me a valid uh a set of valid patterns those patterns would look for uh oh my goodness I can't read I",
    "start": "1632320",
    "end": "1639159"
  },
  {
    "text": "can't read uh search string processing gave me a valid or set of valid patterns",
    "start": "1639159",
    "end": "1644279"
  },
  {
    "text": "those patterns would look like this for the string for AA yeah beautiful what do we do with those well we want to do",
    "start": "1644279",
    "end": "1650799"
  },
  {
    "text": "something like feed those patterns into our unscrambler determine the bits we would need to set in our input index in",
    "start": "1650799",
    "end": "1656279"
  },
  {
    "text": "order to Output the pattern find the index closest to the current position that has those bits set now clearly we",
    "start": "1656279",
    "end": "1662159"
  },
  {
    "text": "can't just feed those patterns into an unscrambler as is they're not valid uu IDs but that's the idea behind what we",
    "start": "1662159",
    "end": "1668200"
  },
  {
    "text": "uh what we'd want to do I just don't understand like once you find a valid pattern there's an you know there's",
    "start": "1668200",
    "end": "1675200"
  },
  {
    "text": "effectively an infinite amount of things you could generate around it so how do you how do you choose how many",
    "start": "1675200",
    "end": "1680840"
  },
  {
    "text": "you do in one position because that's the thing because when you do the search what I thought was really interesting when you search notice that it goes all",
    "start": "1680840",
    "end": "1686399"
  },
  {
    "text": "over the place so how does how did he give like a nice like random feel to the search placement even though",
    "start": "1686399",
    "end": "1693440"
  },
  {
    "text": "it's like even though it's clearly not all of them it's not infinite though you",
    "start": "1693440",
    "end": "1700480"
  },
  {
    "text": "get the idea uh what would we do with those Well we'd want to do something like this like it's if it would take it",
    "start": "1700480",
    "end": "1706840"
  },
  {
    "text": "would take effectively an and it would take what would be a perceivable",
    "start": "1706840",
    "end": "1712240"
  },
  {
    "text": "infinite amount of time for us to generate all those possibilities well uh what we let's see",
    "start": "1712240",
    "end": "1718039"
  },
  {
    "text": "what we want to do is something like this feed those patterns into our own Scrambler determine which bits we need to set for our input index in order to",
    "start": "1718039",
    "end": "1724279"
  },
  {
    "text": "Output the pattern find an index closest to our current position that has the bit set now clearly we can't just feed those",
    "start": "1724279",
    "end": "1729960"
  },
  {
    "text": "patterns into our unscrambler as is they're not valid uu IDs I've already read this I've already read this but",
    "start": "1729960",
    "end": "1735080"
  },
  {
    "text": "that's the idea behind it and it's here that I hit a the dependency graph for any bit spit let's see bits spit out of",
    "start": "1735080",
    "end": "1742080"
  },
  {
    "text": "our Cipher was wildly complicated at first I thought I could fix it you can't fix it uh this by using a different",
    "start": "1742080",
    "end": "1747880"
  },
  {
    "text": "scrambling technique maybe I could change the semantics of my Cipher or use a known bad crypto algorithm to exploit",
    "start": "1747880",
    "end": "1753799"
  },
  {
    "text": "its breakability but those ideas were fundamentally at odds with my goals of pres uh presentation for uu IDs to",
    "start": "1753799",
    "end": "1760440"
  },
  {
    "text": "appear randomly ordered I needed each input bit to affect every output bit but to reason about the dependency graph of",
    "start": "1760440",
    "end": "1766799"
  },
  {
    "text": "a bit effectively I needed each input bit to only affect a few output bits",
    "start": "1766799",
    "end": "1771919"
  },
  {
    "text": "anything I did to improve one problem made the other problem harder I've never done any of these things and it reminds",
    "start": "1771919",
    "end": "1777760"
  },
  {
    "text": "me of like being at Defcon when we did a bunch of the gold bug problems which is just a bunch of Cipher style problem",
    "start": "1777760",
    "end": "1785159"
  },
  {
    "text": "taking apart uh I was an absolute rookie in those things but at the same time",
    "start": "1785159",
    "end": "1792200"
  },
  {
    "text": "this is super cool yeah that's why that's where I definitely did not earn the nickname Caboose okay I do not have",
    "start": "1792200",
    "end": "1798080"
  },
  {
    "text": "a nickname and it's not Caboose anything I did to improve one problem made the other problem harder here I was left",
    "start": "1798080",
    "end": "1803679"
  },
  {
    "text": "with a feeling that if I had a better understanding of uh Crypt analysis I might be able to make some Headway but",
    "start": "1803679",
    "end": "1809880"
  },
  {
    "text": "getting the MVP of this project out the door seemed too valuable to D divert into studying for that long people need",
    "start": "1809880",
    "end": "1816360"
  },
  {
    "text": "to browse uu ID so I punted the solution was pretty simple for search just take the pattern that I generate while",
    "start": "1816360",
    "end": "1822000"
  },
  {
    "text": "analyzing search strings repeatedly fill in the remaining digits to generate valid U IDs took the best ones though",
    "start": "1822000",
    "end": "1828080"
  },
  {
    "text": "one closest to the current position oh that's pretty good and this works pretty well it's not",
    "start": "1828080",
    "end": "1834600"
  },
  {
    "text": "perfect but it certainly lets you cycle through a large set of matching U IDs yep that's pretty good okay that's",
    "start": "1834600",
    "end": "1840000"
  },
  {
    "text": "pretty good just good enough I can accept it I'll accept your your your relinquishing of not showing me all of",
    "start": "1840000",
    "end": "1845640"
  },
  {
    "text": "my uu IDs that have AA BB in it uh Missing features and wrapping up flaws of the uid spec aside I'm glad I finally",
    "start": "1845640",
    "end": "1852519"
  },
  {
    "text": "have all the uids in one place there are a few things I would uh that I think the site is currently missing having uh more",
    "start": "1852519",
    "end": "1861000"
  },
  {
    "text": "social features would be really has anyone ever said that I'm shocked honestly I'm shocked he did not",
    "start": "1861000",
    "end": "1868120"
  },
  {
    "text": "say having AI would have fixed this uh maybe you could see The UU IDs your",
    "start": "1868120",
    "end": "1873480"
  },
  {
    "text": "friends have favorited so that you could use those uu IDs too or maybe the site could feature trending uu IDs that are",
    "start": "1873480",
    "end": "1879559"
  },
  {
    "text": "particularly popular across the world right now and of course I'm still very curious whether there's a cryptoanalysis",
    "start": "1879559",
    "end": "1884679"
  },
  {
    "text": "approach that I am or that lets me achieve more effective search over a randomish ordering of uu IDs I'm going",
    "start": "1884679",
    "end": "1891159"
  },
  {
    "text": "to do some more reading but with all that said I'm very happy to launch the site in its current state I hope you get",
    "start": "1891159",
    "end": "1896200"
  },
  {
    "text": "as much utility out of it as I do dude trending uu IDs just sound so cursed absolutely beautiful this is such",
    "start": "1896200",
    "end": "1903399"
  },
  {
    "text": "a funny project this is such a funny project and think about how much has been learned",
    "start": "1903399",
    "end": "1911279"
  },
  {
    "text": "and like acquired from this Ridiculousness it's a it's absolutely ridiculous uh but if we had a way to",
    "start": "1911279",
    "end": "1918600"
  },
  {
    "text": "identify all the uid so we can keep track of which ones are popular maybe each of those should have some sort of universal unique way to identify",
    "start": "1918600",
    "end": "1926000"
  },
  {
    "text": "them I like where this is going now make an nft out of all those U IDs do the greatest nft scheme of all time uu IDs I",
    "start": "1926000",
    "end": "1934480"
  },
  {
    "text": "wish I had uh this level of autism it's a level of autism that is unknown to the average person it's true it's true not",
    "start": "1934480",
    "end": "1942559"
  },
  {
    "text": "many people can not many people can achieve that level I'm trying to figure",
    "start": "1942559",
    "end": "1948000"
  },
  {
    "text": "out what he means by All The UU IDs it just means all the numbers that exist between",
    "start": "1948000",
    "end": "1954480"
  },
  {
    "text": "zero all the way up to two to the uh 128 and then there's obviously some rules",
    "start": "1954480",
    "end": "1959720"
  },
  {
    "text": "like you said there's like a version in one of the places then there's also another thing some 8 89 uh A or B in",
    "start": "1959720",
    "end": "1968240"
  },
  {
    "text": "another place and so there's like there's some there's like some basic constraints and so it ended up becoming",
    "start": "1968240",
    "end": "1973639"
  },
  {
    "text": "a 2 to the 122 as the valid set of random uu IDs so generated all those",
    "start": "1973639",
    "end": "1978880"
  },
  {
    "text": "from zero to this so he tried to make a search uh so it' go to the next closest one yeah effectively uh even to us uh",
    "start": "1978880",
    "end": "1987279"
  },
  {
    "text": "naughty uh naughty aies here is that Dan Veil what the hell does that even mean",
    "start": "1987279",
    "end": "1992440"
  },
  {
    "text": "he's a little crazy slander is not PR what does that even",
    "start": "1992440",
    "end": "1998639"
  },
  {
    "text": "mean I don't even know what that means hey the name is this",
    "start": "1998639",
    "end": "2003840"
  },
  {
    "text": "guy I wonder what he does for his job he makes funny project though he makes a",
    "start": "2003840",
    "end": "2009200"
  },
  {
    "text": "lot of funny projects his last project was really really great which was the million check boxes and that one had a whole that one I'm python got owned by",
    "start": "2009200",
    "end": "2015960"
  },
  {
    "text": "that one went to go loved his life that was fantastic it these are just bizarre projects a Jen",
    "start": "2015960",
    "end": "2024799"
  }
]