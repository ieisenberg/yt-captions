[
  {
    "text": "this was an amazing talk with Casey moratory we went deep into how the CPU Works he even got out his whiteboard and",
    "start": "160",
    "end": "6200"
  },
  {
    "text": "he was writing things down it was absolutely incredible so please enjoy",
    "start": "6200",
    "end": "11719"
  },
  {
    "text": "this thing what is this thing I don't know what you call this thing but it was amazing that's what it was so today",
    "start": "11719",
    "end": "17880"
  },
  {
    "text": "we're going to be going over why x86 needs to die and I'm going to be joined with uh joined by Casey Mortor Casey can",
    "start": "17880",
    "end": "24039"
  },
  {
    "text": "you tell us a little bit about you uh sure uh I'm I'm fairly ancient probably",
    "start": "24039",
    "end": "29080"
  },
  {
    "text": "relative to most of the people on the stream uh I've been programming since uh professionally programming since",
    "start": "29080",
    "end": "35640"
  },
  {
    "text": "1995 uh and I've been in the game industry for basically all of that why are we freezing why the original thing",
    "start": "35640",
    "end": "41480"
  },
  {
    "text": "we're going to talk about was the M2 exploit then this YX city6 needs to die is also kind of something I wanted to",
    "start": "41480",
    "end": "46800"
  },
  {
    "text": "talk about oh hold on my friend um we had a start okay so this is the second time this has happened while using ping",
    "start": "46800",
    "end": "52399"
  },
  {
    "text": "so I'm not sure if this is a ping problem or what um so I want you to try this one more time if you freeze again",
    "start": "52399",
    "end": "57680"
  },
  {
    "text": "we got to move over to Discord but effective just said I've been programming for 1995 or since 1996 and",
    "start": "57680",
    "end": "63879"
  },
  {
    "text": "I've been in the games industry and then you pretty much froze at that point just saying I've been in the game industry",
    "start": "63879",
    "end": "69200"
  },
  {
    "text": "based with that whole time and uh I'm actually currently doing a programming",
    "start": "69200",
    "end": "74560"
  },
  {
    "text": "sort of uh a performance programming course on substack that I do and that's why this sort of stuff like x86",
    "start": "74560",
    "end": "80600"
  },
  {
    "text": "architecture microarchitecture things was something that I wanted to talk about I also want to talk about the M2 exploit like I said but uh you weren't",
    "start": "80600",
    "end": "86640"
  },
  {
    "text": "around for that one because I think that was also a pretty interesting one as well uh in the news recently uh but this one",
    "start": "86640",
    "end": "93240"
  },
  {
    "text": "was also kind of making the rounds yeah this one was big enough that I saw a counter article that was like y x86",
    "start": "93240",
    "end": "98560"
  },
  {
    "text": "doesn't need to die and often you don't see like article en counter articles on the internet that's that means this",
    "start": "98560",
    "end": "104719"
  },
  {
    "text": "thing had to reach a pretty high you know it it must have ruffled enough feathers to get people this excited uh",
    "start": "104719",
    "end": "111640"
  },
  {
    "text": "yeah it was I I'm assuming you're referring to the one on chips and cheese I think so yeah I just got linked it today uh chips and cheese is actually",
    "start": "111640",
    "end": "118960"
  },
  {
    "text": "great uh if for folks who don't know chips and cheese it's a really cool blog where they basically post like",
    "start": "118960",
    "end": "124280"
  },
  {
    "text": "microarchitecture analysis stuff where they'll go over like okay you know you want to know about Qualcomm Snapdragon",
    "start": "124280",
    "end": "129920"
  },
  {
    "text": "well here's like what we've sort of been reverse engineering or what they've said in their slides or whatever about how",
    "start": "129920",
    "end": "134959"
  },
  {
    "text": "the architecture works and this and that so for people who are interested in like how the hardware works it's a really great blog and they did a complete",
    "start": "134959",
    "end": "141920"
  },
  {
    "text": "response to this shortly after it was out and it's good uh I would highly encourage people to read it um I realize",
    "start": "141920",
    "end": "148720"
  },
  {
    "text": "that that these days reading is not a thing that people do as much but if you do read That's why read that's why I",
    "start": "148720",
    "end": "155519"
  },
  {
    "text": "literally read fulltime on the internet for people you're their reader I am their reader I am their screen reader",
    "start": "155519",
    "end": "161879"
  },
  {
    "text": "and I also have dyslexia which means that sometimes I'll start reading and then I just have to like stop and just take a moment cuz I fall apart and I'm",
    "start": "161879",
    "end": "168159"
  },
  {
    "text": "like okay guys I can't read for like 3 minutes I need just like to breathe out for a second well that's even more embarrassing for them it's like he's",
    "start": "168159",
    "end": "175840"
  },
  {
    "text": "doing your reading for you and it's harder for him than it would be for you and you're not even doing your reading",
    "start": "175840",
    "end": "181159"
  },
  {
    "text": "like what is your excuse you don't have one right you don't have one well there are excuses that I do in Forum I guess",
    "start": "181159",
    "end": "186680"
  },
  {
    "text": "that's your excuses well I don't know it already is there some dyslexic guy on the internet reads it for me so I don't",
    "start": "186680",
    "end": "193080"
  },
  {
    "text": "bother what's my why would I bother yeah come on it's the day and age of productivity Casey okay all right so I'm",
    "start": "193080",
    "end": "199680"
  },
  {
    "text": "just going to start reading through this and then you can kind of like kind of take some bits and pieces and say okay let's talk about this because the",
    "start": "199680",
    "end": "204799"
  },
  {
    "text": "reality is is that I I mean I program in Lua and go sometimes in Rust like I'm not a uh I I would not put myself as any",
    "start": "204799",
    "end": "212319"
  },
  {
    "text": "form of expert in in any of these discussions I am I have no delusions of grandeur so this is just not my area so",
    "start": "212319",
    "end": "218879"
  },
  {
    "text": "it's good to have you on here that you can kind of talk about what's going on in any of the any of the places that I'm missing uh absolutely and also I don't",
    "start": "218879",
    "end": "226080"
  },
  {
    "text": "know if you uh if it's too long to do I don't know if you've got sections you want to read or what uh I don't know how",
    "start": "226080",
    "end": "231360"
  },
  {
    "text": "you do stuff on here because so I'll it looks really small it's just a bunch of comments mostly like this is I mean this",
    "start": "231360",
    "end": "237760"
  },
  {
    "text": "is like pretty typical reading here it's probably like what two pages go all right as I'm sure many of you know x86",
    "start": "237760",
    "end": "244360"
  },
  {
    "text": "architecture has been around for quite some time it has its roots in Intel's early 8086 processor the first in its family",
    "start": "244360",
    "end": "252079"
  },
  {
    "text": "indeed even the original 886 inherits a small amount of architectural structure from Intel's 8-bit predecessors dating",
    "start": "252079",
    "end": "258359"
  },
  {
    "text": "all the way back to the 8008 but the 886 evolved into the 186",
    "start": "258359",
    "end": "264280"
  },
  {
    "text": "the 286 386 486 and then got and then they got names Pentium which would have",
    "start": "264280",
    "end": "269759"
  },
  {
    "text": "have been the 586 oh man oh I I didn't even know that okay well hey guess what's kind of",
    "start": "269759",
    "end": "275080"
  },
  {
    "text": "exciting about this yeah uh this is the so far I don't think anyone would have",
    "start": "275080",
    "end": "280160"
  },
  {
    "text": "any problem with the article all of that's true and for those of you in the chat if there's any folks who ever read",
    "start": "280160",
    "end": "286720"
  },
  {
    "text": "Assembly Language this is actually the reason that the register names on x64",
    "start": "286720",
    "end": "292560"
  },
  {
    "text": "these days are so weird if you look at the register names uh if you know what that sort of stuff is in uh x64 right",
    "start": "292560",
    "end": "300039"
  },
  {
    "text": "because CPUs they have these register names which is how the lowlevel part you know how it works XA or something eax",
    "start": "300039",
    "end": "305840"
  },
  {
    "text": "that kind of stuff yeah so if you ever wonder where that comes from it's because of this lineage so the register",
    "start": "305840",
    "end": "311720"
  },
  {
    "text": "names for the uh the second eight general purpose registers the x64 makes",
    "start": "311720",
    "end": "316919"
  },
  {
    "text": "sense they're R8 R9 r10 R1 R12 r13 R14 R15 makes perfect sense that's what a",
    "start": "316919",
    "end": "323680"
  },
  {
    "text": "programmer would do right why aren't the first ones r0 R1 R2 R3 R4 right well the",
    "start": "323680",
    "end": "328759"
  },
  {
    "text": "reason is because the original uh 80 uh the original 8000 the the original 8,000",
    "start": "328759",
    "end": "335960"
  },
  {
    "text": "series they started out with four registers a b c and d that's why it's aex is it's a extended",
    "start": "335960",
    "end": "344039"
  },
  {
    "text": "yes it would went from a to ax to eax to Rax when they went from 8 to 16 to 32 to",
    "start": "344039",
    "end": "351680"
  },
  {
    "text": "64 bit so all of those first eight registers the ABC uh D ones and then the",
    "start": "351680",
    "end": "357360"
  },
  {
    "text": "like Source pointer Des pointer there's there's a SP uh SI Etc so that's where this comes from",
    "start": "357360",
    "end": "363240"
  },
  {
    "text": "anyway oh no that's that's actually super interesting okay so that's why so if you're on an 8bit one it would have been a if you're on 16 you're on Ax and",
    "start": "363240",
    "end": "371199"
  },
  {
    "text": "then if you're on 32 you're on aex being like Oh we've really we're like we're the vi we're the extensions of this all",
    "start": "371199",
    "end": "377400"
  },
  {
    "text": "we're the Viagra of this all and then it's like oh no we're on 64 so they're like Rax right is that what they did",
    "start": "377400",
    "end": "383199"
  },
  {
    "text": "just kept on going yes it was it was a a goes to ax which has two parts a and ah",
    "start": "383199",
    "end": "390759"
  },
  {
    "text": "for low and high for the high low right then ax went to eax which you could",
    "start": "390759",
    "end": "396440"
  },
  {
    "text": "still address the other one so if you typed ax you still got the bottom 16 bits but if you got eax you got all 32",
    "start": "396440",
    "end": "402680"
  },
  {
    "text": "and you got the bottom 16 bits which would be in the most significant bit position because it's little Indian",
    "start": "402680",
    "end": "408199"
  },
  {
    "text": "other way around so on little Indian the bottom bits are the least significant that the first the ones that you see on",
    "start": "408199",
    "end": "414919"
  },
  {
    "text": "the on the right side of the number sorry the the front the front 16 the first 16 bits if you had 32 bits the the",
    "start": "414919",
    "end": "421360"
  },
  {
    "text": "most significant set of bits are actually the least significant values right yeah I I guess I don't know how",
    "start": "421360",
    "end": "426800"
  },
  {
    "text": "you want to describe it but the I I'm very bad at describing Indians okay here we go in my head so if you you had a you",
    "start": "426800",
    "end": "433800"
  },
  {
    "text": "had a uh a l and ah is that what it was because this would be little Indian on this side right is that what it was",
    "start": "433800",
    "end": "440319"
  },
  {
    "text": "trying to be written traditionally we would flip them because the least significant ones are on the right side",
    "start": "440319",
    "end": "445840"
  },
  {
    "text": "and the most so so the H would be the you'd switch a an ah in that diagram",
    "start": "445840",
    "end": "450879"
  },
  {
    "text": "okay yes but this but is that how it is sorry I we're super digressing but let's just keep going because I find this",
    "start": "450879",
    "end": "455919"
  },
  {
    "text": "really interesting because Network order would be this right you have your most significant bits on this side your least",
    "start": "455919",
    "end": "461319"
  },
  {
    "text": "significant bits on this side but in Intel land this is over here and this is over here right in memory order yes yes",
    "start": "461319",
    "end": "469280"
  },
  {
    "text": "but when you write like a register out right you extend it to the 32 bits so we write it the other way but yes in memory",
    "start": "469280",
    "end": "474919"
  },
  {
    "text": "order it would be Al a exactly the way you draw it the first time which is why Ian flips them right little endian you",
    "start": "474919",
    "end": "481360"
  },
  {
    "text": "have to draw two diagrams one for the register one for memory uh bigan is the same diagram yes I I I live in big",
    "start": "481360",
    "end": "488560"
  },
  {
    "text": "Indian but I've been bitten by little Indian many of times in my life everything is little Indian now on the",
    "start": "488560",
    "end": "494560"
  },
  {
    "text": "hardware side but because a lot of stuff came from Big edian architectures like you said Network order right uh it's",
    "start": "494560",
    "end": "501400"
  },
  {
    "text": "flipped around on the wire so I only know things as Network order and so it's it's because I you know I don't go to I",
    "start": "501400",
    "end": "507680"
  },
  {
    "text": "don't go to the Machine level so everything is Network order in my brain and so it's always just super difficult",
    "start": "507680",
    "end": "512919"
  },
  {
    "text": "to map around yep they just wanted to make it hard for you I talked to an Intel guy once and he his argument was",
    "start": "512919",
    "end": "520560"
  },
  {
    "text": "that uh we just drew our Stacks from the top down and so it made more sense going this way and where other companies Drew",
    "start": "520560",
    "end": "526560"
  },
  {
    "text": "their Stacks from the bottom up and that was his argument for why little Indian existed he was some guy with like 20",
    "start": "526560",
    "end": "531720"
  },
  {
    "text": "patents and I was interviewing back there like 15 years ago and any there's a better argument if you want to hear it",
    "start": "531720",
    "end": "538360"
  },
  {
    "text": "yeah I do actually want to hear this uh suppose that you have the address of something in memory yeah so you're like",
    "start": "538360",
    "end": "544720"
  },
  {
    "text": "just this this particular bite position yeah in little Indian that address will",
    "start": "544720",
    "end": "549760"
  },
  {
    "text": "stay the same no matter how big the value was if it was eight bits it's that",
    "start": "549760",
    "end": "556040"
  },
  {
    "text": "address if it's 16 bits it's that address if it's you know etc etc in big",
    "start": "556040",
    "end": "561399"
  },
  {
    "text": "Indian you're supposed to be pointing to the most significant thing so if you make the value larger right the thing",
    "start": "561399",
    "end": "569079"
  },
  {
    "text": "goes in the other the thing grows in the other direction so if you wanted to change from going from a high one to a",
    "start": "569079",
    "end": "575959"
  },
  {
    "text": "low one you'd have to move the pointer I think I'm too stupid to understand that but I trust you I trust you at this point all right all right along the way",
    "start": "575959",
    "end": "582440"
  },
  {
    "text": "new instructions were added but the core of the x86 instruction set was retained",
    "start": "582440",
    "end": "587519"
  },
  {
    "text": "and a lot of the effort was spent making the same instructions faster and faster this has become so extreme that even",
    "start": "587519",
    "end": "593680"
  },
  {
    "text": "though the e or the 886 and modern Zeon processors can both run a command common subset of code the two CPUs",
    "start": "593680",
    "end": "600760"
  },
  {
    "text": "architecturally look about as far apart as they could possibly as they could possibly felt like there should be",
    "start": "600760",
    "end": "606600"
  },
  {
    "text": "another word there so here we are today and even the highest end x86 CPU still",
    "start": "606600",
    "end": "612120"
  },
  {
    "text": "support the archaic 8086 real mode where the CPU can address memory directly",
    "start": "612120",
    "end": "617399"
  },
  {
    "text": "without any redirection having this level of backwards compatibility can cause problems especially with respect",
    "start": "617399",
    "end": "623040"
  },
  {
    "text": "to multitasking and memory protection but it was a feature of the previous chips so it's a feature of the current",
    "start": "623040",
    "end": "628800"
  },
  {
    "text": "x86 design and there's more so i' jump in there and say I just don't really",
    "start": "628800",
    "end": "634959"
  },
  {
    "text": "know what this person is talking about here um since I can't quite tell what",
    "start": "634959",
    "end": "641040"
  },
  {
    "text": "they're trying to argue I'm I don't want to argue against it too stringently but what I would point out is uh there's",
    "start": "641040",
    "end": "647240"
  },
  {
    "text": "some weirdness there so it's true that x86 CPUs support 886 real mode uh and",
    "start": "647240",
    "end": "653800"
  },
  {
    "text": "what this means is so if you imagine back in the day uh all home computers pretty much and of course the IBM PC as",
    "start": "653800",
    "end": "660680"
  },
  {
    "text": "well and so on none of those computers even had what we would traditionally refer to nowadays as a memory management",
    "start": "660680",
    "end": "667040"
  },
  {
    "text": "unit or memory management features the idea that you have sort of virtual address spaces for processes and those",
    "start": "667040",
    "end": "673800"
  },
  {
    "text": "address spaces don't necessarily directly mapped to physical RAM and so that you can do things like swap",
    "start": "673800",
    "end": "678959"
  },
  {
    "text": "processes in and out or check to see if a particular process should read some certain memory in the old days it was",
    "start": "678959",
    "end": "684720"
  },
  {
    "text": "just like okay all processes if there even are multiple processes on this thing which you know isn't necessarily",
    "start": "684720",
    "end": "690639"
  },
  {
    "text": "even something that was supported depending on what period you're talking about they they can just read memory it's like I read memory I get that",
    "start": "690639",
    "end": "696800"
  },
  {
    "text": "physical set of bits back um so what it seems like the person saying is like oh well they still support this mode and",
    "start": "696800",
    "end": "705120"
  },
  {
    "text": "that seems like a really big burden or something but I don't know any hardware",
    "start": "705120",
    "end": "710839"
  },
  {
    "text": "company that's ever thought this was a big deal it's just some stuff that's stuck over in micro code that you only",
    "start": "710839",
    "end": "716279"
  },
  {
    "text": "ever hit if you need it and direct physical addressing to to Ram there you",
    "start": "716279",
    "end": "722320"
  },
  {
    "text": "don't have to do anything additional really for that like if you wanted to complain about this you might complain",
    "start": "722320",
    "end": "727600"
  },
  {
    "text": "about having to have more segment registers or something there are some things you could pick to complain but the fact that they chose that makes me",
    "start": "727600",
    "end": "733880"
  },
  {
    "text": "I'm worrying that this person doesn't really know what they're talking about because it doesn't make sense for example suppose you were just like oh I",
    "start": "733880",
    "end": "741079"
  },
  {
    "text": "got to emulate direct memory addressing on this machine that has indirect memory addressing well just fill the indirect",
    "start": "741079",
    "end": "746240"
  },
  {
    "text": "tables with direct addresses done like like what the pro like you didn't have to add Hardware to do that it's the",
    "start": "746240",
    "end": "752480"
  },
  {
    "text": "other way around you have to add hardware for IND Direction you have to add hardware for for direct so it just",
    "start": "752480",
    "end": "757639"
  },
  {
    "text": "it sounds weird off the bat that like that was their lead in anyway okay yeah",
    "start": "757639",
    "end": "763120"
  },
  {
    "text": "and I think that so for me me being more of a Layman I think the reason why this is a good argument is that me I'm like",
    "start": "763120",
    "end": "770560"
  },
  {
    "text": "oh man it's there's a lot of legacy and backwards you know backwards compatibility I know about software and",
    "start": "770560",
    "end": "776760"
  },
  {
    "text": "backwards compatibility makes things worse right like generally as a programmer it makes everything worse in",
    "start": "776760",
    "end": "782760"
  },
  {
    "text": "fact that was one of the big arguments why like if you remember the bun and node performance Fiasco uh one of the",
    "start": "782760",
    "end": "788800"
  },
  {
    "text": "big arguments was that node has to support all these things whereas bun comes in and just says I don't support",
    "start": "788800",
    "end": "794040"
  },
  {
    "text": "any of that crap I just do I do what's the current thing that's what I support and so they were just they you know they",
    "start": "794040",
    "end": "800160"
  },
  {
    "text": "claimed that as part of the reason why they were faster imag that's how like me as a Layman reads this is like oh it",
    "start": "800160",
    "end": "805199"
  },
  {
    "text": "could be better if they just didn't support uh backwards compatibility Hardware WI guys imagine something",
    "start": "805199",
    "end": "810360"
  },
  {
    "text": "slightly different imagine that someone just reimplemented nodejs on top of bun",
    "start": "810360",
    "end": "815399"
  },
  {
    "text": "so anytime they could just call the fast versions they did and anytime they couldn't they run some slow emulation",
    "start": "815399",
    "end": "822560"
  },
  {
    "text": "and then they just give you both of those things that's more what x64 is it's like look we've got the fast thing",
    "start": "822560",
    "end": "828800"
  },
  {
    "text": "and then we've also got this 886 real mode that's super slow but that's okay because you're only going to run applications from like 1997 on it anyway",
    "start": "828800",
    "end": "836079"
  },
  {
    "text": "so who cares right I it's not it's earlier than that like 199 right or something I don't know what the earliest time you would still be using",
    "start": "836079",
    "end": "841959"
  },
  {
    "text": "real mode is probably even the 80s really so you know it's really not like that it's not like oh it's the nodejs",
    "start": "841959",
    "end": "848600"
  },
  {
    "text": "Legacy runtime so okay okay I think it's time to put a lot of the legacy of the",
    "start": "848600",
    "end": "853639"
  },
  {
    "text": "886 to rest and let the modern processors Run free all right some key terms to understand my next arguments",
    "start": "853639",
    "end": "859880"
  },
  {
    "text": "you need to understand the very basics of a few Concepts modern x86 is to use the proper terminology a cisk super",
    "start": "859880",
    "end": "867880"
  },
  {
    "text": "scalar out of order Von Newman architecture with speculative execution what does that all mean well I do know",
    "start": "867880",
    "end": "873959"
  },
  {
    "text": "that Von Newman plays a critical role in three body problem so must be an",
    "start": "873959",
    "end": "879480"
  },
  {
    "text": "important fow you know I know that much uh he invents the Von Numan architecture have you read uh three body problem I",
    "start": "879480",
    "end": "885639"
  },
  {
    "text": "have not read the three body problem but as far as I am aware kind of in the like",
    "start": "885639",
    "end": "890759"
  },
  {
    "text": "uh secondary like the the feels sense of things yeah uh V noyman is like widely",
    "start": "890759",
    "end": "896720"
  },
  {
    "text": "considered to be sort of like the greatest soft like computer science",
    "start": "896720",
    "end": "901920"
  },
  {
    "text": "person and very multiple other things of all time he's just everyone thought the guy was like kind of just next level",
    "start": "901920",
    "end": "909040"
  },
  {
    "text": "right he probably is from the future trying to describe to us things that things that will happen there is a",
    "start": "909040",
    "end": "914360"
  },
  {
    "text": "famous biography of him called The Man from the future lit did you know that no I did not know that uh whenever",
    "start": "914360",
    "end": "920320"
  },
  {
    "text": "someone's so far ahead of things sometimes you're just like am I like witnessing a glitch here uh but uh okay",
    "start": "920320",
    "end": "925800"
  },
  {
    "text": "so if you haven't read a three body problem uh there's this you probably actually really enjoyed Midway through the book uh they describe this thing",
    "start": "925800",
    "end": "931839"
  },
  {
    "text": "where they actually take people and each person holds a flag and they actually create a computer and horses are the bus",
    "start": "931839",
    "end": "938560"
  },
  {
    "text": "speed and they bust instructions they have uh people that hold Flags in one position they're like cold storage and",
    "start": "938560",
    "end": "945279"
  },
  {
    "text": "they have like this whole like thing where they do you know like they do it all it's super super cool and then you know and then they're all soldiers and",
    "start": "945279",
    "end": "951839"
  },
  {
    "text": "if any Soldier messed up they'd get killed like it was really really cool and they actually process the three body",
    "start": "951839",
    "end": "956880"
  },
  {
    "text": "problem and then determine the future it's pretty cool it's it's it's super super cool uh anyways the Von Newman",
    "start": "956880",
    "end": "962040"
  },
  {
    "text": "architectures are CPUs where both program and data exist in the same address space this is basic basic",
    "start": "962040",
    "end": "968040"
  },
  {
    "text": "ability to run programs from the same memory in which regular data is stored there is no logical distinction between",
    "start": "968040",
    "end": "973880"
  },
  {
    "text": "program and data memory is this like a lisp argument did Von Newman accidentally make lisp arguments uh",
    "start": "973880",
    "end": "979839"
  },
  {
    "text": "that's a super nerdy joke sorry about that super scaler CPU cores are capable of running more than one instruction per",
    "start": "979839",
    "end": "985199"
  },
  {
    "text": "clock cycle this means that an x86 CPU running at 3 gws is actually running more than 3",
    "start": "985199",
    "end": "991959"
  },
  {
    "text": "billion instructions per second on average this goes hand inand with the outof order nature of modern x86 the CPU",
    "start": "991959",
    "end": "998720"
  },
  {
    "text": "can simply run an instructions in different order than they are presented if doing so would be faster can you give",
    "start": "998720",
    "end": "1003959"
  },
  {
    "text": "me like a brief this sounds like this sounds like where the M1 or the M2 bug is can you can you give us like a brief",
    "start": "1003959",
    "end": "1009639"
  },
  {
    "text": "understanding of what this what they're trying to say here I I can um so again",
    "start": "1009639",
    "end": "1014920"
  },
  {
    "text": "another paragraph that makes me nervous about like the way this guy is explaining things uh just it it scares",
    "start": "1014920",
    "end": "1020360"
  },
  {
    "text": "me a little right uh that kind of sounds a little bit like a word salad to me uh where they didn't quite get what they're",
    "start": "1020360",
    "end": "1025918"
  },
  {
    "text": "talking about so they may be trying to write it for people like me the technical person that's not technical at",
    "start": "1025919",
    "end": "1031120"
  },
  {
    "text": "this level I don't know because I feel like that explanation is only going to confuse you more right you came into",
    "start": "1031120",
    "end": "1038480"
  },
  {
    "text": "speculative fetching I don't know I have no idea so um I mean do you want me to",
    "start": "1038480",
    "end": "1043918"
  },
  {
    "text": "draw a diagram I don't know how how hardcore we should get here I I can if we want to I'm not sure how about you",
    "start": "1043919",
    "end": "1049520"
  },
  {
    "text": "start with the you start with your own word salad and if we need the meat we'll get the board out here's my word here's",
    "start": "1049520",
    "end": "1055039"
  },
  {
    "text": "my word salad so a modern CPU you can think of as there is a language and this",
    "start": "1055039",
    "end": "1060440"
  },
  {
    "text": "is really important to understand why I think this article is probably not very accurate or isn't a good representation",
    "start": "1060440",
    "end": "1066160"
  },
  {
    "text": "of if if x86 dis does need to die this is not a very good argument that they're",
    "start": "1066160",
    "end": "1071840"
  },
  {
    "text": "presenting can I AR can I can I break you for one second everyone wants to see uh the the Whiteboard if you can change",
    "start": "1071840",
    "end": "1078240"
  },
  {
    "text": "your camera if you have OBS set up and you want to go full screen here I I am I am willing to get like you're full",
    "start": "1078240",
    "end": "1084120"
  },
  {
    "text": "screen right now if you want to swap over to your desktop we can make it happen we have an actual white P we're",
    "start": "1084120",
    "end": "1089159"
  },
  {
    "text": "going so you're gonna have to tell me can you hear me from here yes yes we can that is fantastic okay can you see me",
    "start": "1089159",
    "end": "1096559"
  },
  {
    "text": "drawing oh my goodness yes we can let me turn off let me turn off that there we go let's go let's go so when you take a",
    "start": "1096559",
    "end": "1104400"
  },
  {
    "text": "program doesn't matter what it is anything you're programming in you said like you're like I program in I program in this or whatever whatever that is at",
    "start": "1104400",
    "end": "1111360"
  },
  {
    "text": "the end of the day everything gets sent down to the CPU as machine code and that machine code is fairly simple it's",
    "start": "1111360",
    "end": "1117799"
  },
  {
    "text": "basically something that can be described as like some bits that tell you what it's supposed to do in very",
    "start": "1117799",
    "end": "1124039"
  },
  {
    "text": "simple terms so like a really simple thing would be like an ad there's going to be a bit pattern that says add right",
    "start": "1124039",
    "end": "1130880"
  },
  {
    "text": "yeah then there's going to be some information that's what are the operands and there's either like one two or three",
    "start": "1130880",
    "end": "1137360"
  },
  {
    "text": "rarely four even three is somewhat rare so you'd have something like ad one of",
    "start": "1137360",
    "end": "1142799"
  },
  {
    "text": "those registers we're talking about which is like a name you know something like Rax like you said and then maybe",
    "start": "1142799",
    "end": "1148120"
  },
  {
    "text": "another register or possibly even what we call an immediate which is some values right all of these are bit",
    "start": "1148120",
    "end": "1153280"
  },
  {
    "text": "encoded they're all encoded as bits in machine code in the memory of the computer and the processor is fetching",
    "start": "1153280",
    "end": "1159880"
  },
  {
    "text": "those bit codes right yes and so just to clarify this is one of the first big",
    "start": "1159880",
    "end": "1165000"
  },
  {
    "text": "revolutions which was going from machine code to some sort of name for each one of these machine codes so I don't have",
    "start": "1165000",
    "end": "1170679"
  },
  {
    "text": "to know what Rax is I can name it something that I can remember as a human yes and so the Assembly Language was the",
    "start": "1170679",
    "end": "1177679"
  },
  {
    "text": "first step of that it's a little bit easier than toggling in actual binary codes which they used to do right yeah",
    "start": "1177679",
    "end": "1184039"
  },
  {
    "text": "and then then from there there were people like Grace Hopper was famous for this for example who advocated for like",
    "start": "1184039",
    "end": "1190559"
  },
  {
    "text": "they should be more human readable and that's sort of why we got to where we are today where it's people were like",
    "start": "1190559",
    "end": "1197600"
  },
  {
    "text": "let's stop having to actually put in every single instruction let's try to say things that are closer to what we",
    "start": "1197600",
    "end": "1203159"
  },
  {
    "text": "mean and build up higher level Primitives right and so nowadays we don't think about this as much but this is what's actually happening in the",
    "start": "1203159",
    "end": "1209039"
  },
  {
    "text": "computer no computer can execute Lua it's executing instructions that are",
    "start": "1209039",
    "end": "1214280"
  },
  {
    "text": "made to do what the Lua told you to do right yeah so just to be clear about what happens and where this uh",
    "start": "1214280",
    "end": "1221320"
  },
  {
    "text": "information kind of in the article feels a little off when they described it in that that sentence they used a bunch of",
    "start": "1221320",
    "end": "1226799"
  },
  {
    "text": "words there super scaler etc etc those all sound like aming like",
    "start": "1226799",
    "end": "1234360"
  },
  {
    "text": "science fiction terms for me I don't understand it we can talk about what those are if we want to in a little bit",
    "start": "1234360",
    "end": "1239640"
  },
  {
    "text": "let me just tell you what actually happens so what actually happens is the instruction that's going to happen it",
    "start": "1239640",
    "end": "1247120"
  },
  {
    "text": "gets decoded from that like when the CPU is is reading these instructions it gets decoded that bit pattern turns into",
    "start": "1247120",
    "end": "1255320"
  },
  {
    "text": "something we call Micro Ops so basically this ad that you are sending down as",
    "start": "1255320",
    "end": "1260720"
  },
  {
    "text": "like I want to do this it doesn't necessarily translate to just one thing the machine does this is something that",
    "start": "1260720",
    "end": "1267720"
  },
  {
    "text": "the the I I don't know if the article ever addresses but so an instruction that you encode actually can become mic",
    "start": "1267720",
    "end": "1275880"
  },
  {
    "text": "multiple what we call Micro Ops and those Micro Ops are the actual things that the CPU can do so for example let's",
    "start": "1275880",
    "end": "1283360"
  },
  {
    "text": "suppose that this ad in x86 and x64 you can do this had a memory address",
    "start": "1283360",
    "end": "1289080"
  },
  {
    "text": "there was some memory address here that it was going to fetch and what this ad was going to encode is fetch this memory",
    "start": "1289080",
    "end": "1294799"
  },
  {
    "text": "address like go out get this from a cach or from memory right get this address add it to Rax and write it back to Rax",
    "start": "1294799",
    "end": "1302360"
  },
  {
    "text": "that's what this thing is doing right and I to spare your viewers hours of content here I won't explain what this",
    "start": "1302360",
    "end": "1309000"
  },
  {
    "text": "means like we won't go into what registers are necessarily right but um if it wants to do that it's got multiple",
    "start": "1309000",
    "end": "1316200"
  },
  {
    "text": "things it has to do for at a minimum it's got go fetch this memory and then it's got to perform an ad so that might",
    "start": "1316200",
    "end": "1322880"
  },
  {
    "text": "become multiple Micro Ops like one of the Micro Ops might be to fetch something for memory another one might be to do the ad the actual addition so a",
    "start": "1322880",
    "end": "1331080"
  },
  {
    "text": "single instruction doesn't mean I'm just going to do this this one thing it actually means potentially do multiple",
    "start": "1331080",
    "end": "1337720"
  },
  {
    "text": "things does that make sense so far yeah that makes perfect sense because whenever you have to it's I mean it's just like if you're programming if if",
    "start": "1337720",
    "end": "1343919"
  },
  {
    "text": "some expression do this like you know that there's actually a go-to in there there's going to be a jump if it's not like there's a lot of things that happen",
    "start": "1343919",
    "end": "1349520"
  },
  {
    "text": "when we write so this is not this is completely reasonable that we just continue to abstract and make more",
    "start": "1349520",
    "end": "1355440"
  },
  {
    "text": "concise things yes and people think oh well this makes x86 like this just to",
    "start": "1355440",
    "end": "1361480"
  },
  {
    "text": "forecast some of the arguments they're like well that's ridiculous okay you're already breaking things out into smaller",
    "start": "1361480",
    "end": "1367159"
  },
  {
    "text": "pieces obviously x86 is stupid because Why didn't it just encode the little pieces this was true from the very first",
    "start": "1367159",
    "end": "1375039"
  },
  {
    "text": "x86 the very first x86 had Micro Ops this isn't new they didn't",
    "start": "1375039",
    "end": "1382080"
  },
  {
    "text": "accidentally screw this up that's been true forever and also Not only was that true forever but all modern processors",
    "start": "1382080",
    "end": "1389919"
  },
  {
    "text": "do this even things like arm have exactly this thing SI risk things people",
    "start": "1389919",
    "end": "1395039"
  },
  {
    "text": "call risk they all have internal Ops they do and instructions that are more",
    "start": "1395039",
    "end": "1400120"
  },
  {
    "text": "complicated than those Ops potentially not always right like sometimes they map one to one other times they take more",
    "start": "1400120",
    "end": "1406480"
  },
  {
    "text": "the reason for that and again I'm kind of jumping ahead here but it's just coming up as we're talking about it the reason for this makes perfect sense what",
    "start": "1406480",
    "end": "1413279"
  },
  {
    "text": "are you trying to do with this program you're trying to as compactly as possible to take the least am amount of",
    "start": "1413279",
    "end": "1419240"
  },
  {
    "text": "memory and the least about of amount of bus bandwidth and cash space to transfer that memory into the CPU and use it",
    "start": "1419240",
    "end": "1425840"
  },
  {
    "text": "you're trying to represent your intentions as compactly as possible so this is not and never was supposed to be",
    "start": "1425840",
    "end": "1434360"
  },
  {
    "text": "a one-o-one mapping between what is in the instruction set and what goes on in the computer it's supposed to be the",
    "start": "1434360",
    "end": "1441559"
  },
  {
    "text": "most compact representation we could think of for that and that is where this",
    "start": "1441559",
    "end": "1447200"
  },
  {
    "text": "article gets yeah that's where this article I think really falls apart is that it's not supposed to map one to one",
    "start": "1447200",
    "end": "1454159"
  },
  {
    "text": "and even risk people don't think that anymore that's not how they're going to implement a chip so there are some",
    "start": "1454159",
    "end": "1459400"
  },
  {
    "text": "things we can talk about we'll talk about those maybe towards the end about why there are x86 things that maybe",
    "start": "1459400",
    "end": "1465399"
  },
  {
    "text": "aren't great that it would be nice if we fixed but I feel like the article proceeds from the incorrect premise",
    "start": "1465399",
    "end": "1471000"
  },
  {
    "text": "anyway now just to finish up what we why we came to the board they said a bunch of other things super scaler out of",
    "start": "1471000",
    "end": "1476080"
  },
  {
    "text": "order Etc well if you think about how these things actually end up happening in uh the the CPU one of the things they",
    "start": "1476080",
    "end": "1482600"
  },
  {
    "text": "mentioned was pipelining and pipelining is when you want to start doing these Micro Ops I mean we've already had pip",
    "start": "1482600",
    "end": "1489080"
  },
  {
    "text": "pipelining even before then because the act of turning this into Micro Ops so getting it decoding it turning it into",
    "start": "1489080",
    "end": "1496039"
  },
  {
    "text": "which Micro Ops are supposed to happen all of that happens in stages because they're trying to crank the clock rate",
    "start": "1496039",
    "end": "1502159"
  },
  {
    "text": "really high they want to run these things at really high clock rates and there's a limit to how much they can do",
    "start": "1502159",
    "end": "1507760"
  },
  {
    "text": "inside one of those clocks right yeah so they're trying to crank that clock really high and so what they do is they",
    "start": "1507760",
    "end": "1514200"
  },
  {
    "text": "overlap they take and they say well if we had to do an ad instruction in one",
    "start": "1514200",
    "end": "1520000"
  },
  {
    "text": "clock cycle it we'd have to clock this machine pretty low so instead what we're going to do is we're going to overlap",
    "start": "1520000",
    "end": "1526200"
  },
  {
    "text": "the stages of fetching it decod coding it turning it into those you know Micro Ops executing doing the ad on the Micro",
    "start": "1526200",
    "end": "1532799"
  },
  {
    "text": "Ops getting the values writing them back we do each of those in stages so instead of one clock cycle it maybe takes a",
    "start": "1532799",
    "end": "1539279"
  },
  {
    "text": "total of n clock Cycles where I don't actually know the total pipeline depth maybe 14 clock Cycles or something like",
    "start": "1539279",
    "end": "1545000"
  },
  {
    "text": "that to do an instruction even though it appears to the user that it only takes",
    "start": "1545000",
    "end": "1551440"
  },
  {
    "text": "one why because they're pipeline so let's say this is 14 Cycles worth of length I start my ad and it has to go",
    "start": "1551440",
    "end": "1559000"
  },
  {
    "text": "through 14 Cycles to complete let's say right yeah well when it goes in on clock cycle one right here it starts it starts",
    "start": "1559000",
    "end": "1565919"
  },
  {
    "text": "being fetched or decoded or whatever it goes to the next clock cycle it starts the next piece of work it has to do on the ad when it moves out of that first",
    "start": "1565919",
    "end": "1573880"
  },
  {
    "text": "bucket another ad can be put in so the ads are moving through this long",
    "start": "1573880",
    "end": "1579120"
  },
  {
    "text": "pipeline all together so if I put one ad in every clock cycle I'll get one ad out",
    "start": "1579120",
    "end": "1585919"
  },
  {
    "text": "every clock cycle so it appears to the user of the machine that it only takes one cycle to do an ad even though it",
    "start": "1585919",
    "end": "1591880"
  },
  {
    "text": "took many cycles to do one of those particular ads does that make sense this makes a lot of sense so this is just a way because we've hit an upper limit on",
    "start": "1591880",
    "end": "1598799"
  },
  {
    "text": "how we can effectively shove things through so we have to just get more clever so if we can have a wider Highway",
    "start": "1598799",
    "end": "1604360"
  },
  {
    "text": "if you will we can get more cars through that is that a very Layman way to say it",
    "start": "1604360",
    "end": "1609600"
  },
  {
    "text": "the most Layman way I could think of it is uh i' I've said this before your washer and dryer if any of you have a washer and dryer at home that like",
    "start": "1609600",
    "end": "1615880"
  },
  {
    "text": "washes and dries clothes I I yeah well we have a washer and then a dryer we have several of them okay think of it",
    "start": "1615880",
    "end": "1622279"
  },
  {
    "text": "this way if you didn't have a washer and dryer suppose you just had a unit that washed and dried clothes right a washer",
    "start": "1622279",
    "end": "1629480"
  },
  {
    "text": "dryer you have a wd right Mass washing",
    "start": "1629480",
    "end": "1635039"
  },
  {
    "text": "it took two hours to do a load of laundry right takes two hours takes two hours to do a load of laundry washes and",
    "start": "1635039",
    "end": "1641000"
  },
  {
    "text": "dries it for you now I have a washer and a dryer two separate ones like you have",
    "start": "1641000",
    "end": "1647320"
  },
  {
    "text": "takes one hour to wash one hour to dry right which one of these is faster at doing laundry well naively you might say",
    "start": "1647320",
    "end": "1655080"
  },
  {
    "text": "it doesn't matter uh like I put it in the washer dryer it takes two hours I put it in the washer wait an hour put it in the dryer 1 hour same time two hours",
    "start": "1655080",
    "end": "1662360"
  },
  {
    "text": "right mhm wrong if I use the washer dryer I put a load into the wash at 1",
    "start": "1662360",
    "end": "1668159"
  },
  {
    "text": "hour after that hour is up I put it into the dryer how long did that load Take 2 hours but while that load was in the",
    "start": "1668159",
    "end": "1673600"
  },
  {
    "text": "dryer and you know this intuitively because I know you've done this you put a second load into the washer yeah so to",
    "start": "1673600",
    "end": "1679600"
  },
  {
    "text": "do two loads of laundry it won't take four hours it'll take three right we all",
    "start": "1679600",
    "end": "1684960"
  },
  {
    "text": "know this intuitively why pipelining that's pipelining okay pipelining is you",
    "start": "1684960",
    "end": "1690279"
  },
  {
    "text": "break up the stages of the work into smaller chunks because once the first chunk is done you can start a new load",
    "start": "1690279",
    "end": "1696799"
  },
  {
    "text": "going in okay this makes perfect sense that's what this diagram is so that's pipeline okay okay pipelining or the",
    "start": "1696799",
    "end": "1704200"
  },
  {
    "text": "other two out of order out of order just means well we take all these Micro Ops and we look at which ones we can do at",
    "start": "1704200",
    "end": "1709399"
  },
  {
    "text": "any given time we don't do them in order if they don't depend on each other that's all out of order means so the",
    "start": "1709399",
    "end": "1714919"
  },
  {
    "text": "processor looks at a bunch at a time and finally super scaler just means it's trying to execute more than one of these at a time okay if it can that's it very",
    "start": "1714919",
    "end": "1721799"
  },
  {
    "text": "fancy terms this makes a lot of sense all right should I say I guess I stay up here but I come back you can sit down",
    "start": "1721799",
    "end": "1728799"
  },
  {
    "text": "you can sit down you can do whatever you want I can make you small again um if you can make it so that you can kind of go in and out easily you may want to do",
    "start": "1728799",
    "end": "1735039"
  },
  {
    "text": "that okay all right it's just right behind me now yeah that's that's okay I think I think people are just fine with",
    "start": "1735039",
    "end": "1741360"
  },
  {
    "text": "the bright because uh cuz that was awesome and everyone's very happy about that everyone feels like they just got",
    "start": "1741360",
    "end": "1746960"
  },
  {
    "text": "smarter none of us are actually smarter in chat we just feel we all feel like we got smarter you don't give yourself enough credit Prime I don't know about",
    "start": "1746960",
    "end": "1754000"
  },
  {
    "text": "that uh you you don't worry you got enough credit okay you got the street cred we'll give that to you um all right",
    "start": "1754000",
    "end": "1759880"
  },
  {
    "text": "this was awesome okay so let's keep on going let me let me pull this back up really quickly there we go all right uh finally there's a speculative keyword",
    "start": "1759880",
    "end": "1766840"
  },
  {
    "text": "causing all this trouble speculative execution is to run instructions in a branching path despite it not being",
    "start": "1766840",
    "end": "1773120"
  },
  {
    "text": "clear whether set instruction should be run in the first place think of it as running the code in an if statement",
    "start": "1773120",
    "end": "1779600"
  },
  {
    "text": "before knowing whether the condition for said if statement is true and reverting the state of the world if the condition",
    "start": "1779600",
    "end": "1786200"
  },
  {
    "text": "turns out to be false this is inherently risky territory because of side Channel attacks so this is like the fundamental",
    "start": "1786200",
    "end": "1792640"
  },
  {
    "text": "uh thing that that is how uh the M2 attack worked right you'd speculatively load some bits of your crypto stuff and",
    "start": "1792640",
    "end": "1799200"
  },
  {
    "text": "with enough xoring you could kind of eventually steal someone's private keys right um it's it's actually more closely",
    "start": "1799200",
    "end": "1806200"
  },
  {
    "text": "what he's describing here is it's um more like Spectre and meltdown the M2 bug is actually part of the prefetcher",
    "start": "1806200",
    "end": "1812919"
  },
  {
    "text": "which is a memory act up we're losing you again hold on we lost you again dang it we lost you again hold on hold on I",
    "start": "1812919",
    "end": "1820519"
  },
  {
    "text": "feel like I know if I if I leave you up if I it seems like if I leave you running and I have your video on and I",
    "start": "1820519",
    "end": "1826960"
  },
  {
    "text": "actually keep it in pin on then you run better so I I almost feel like I have to keep you running in both places it might",
    "start": "1826960",
    "end": "1833279"
  },
  {
    "text": "be yeah there might be some sort of optimization some would say going on yeah or prioritization of in the browser",
    "start": "1833279",
    "end": "1839120"
  },
  {
    "text": "or something right like where it's yeah this is technically an embedded browser right now I'm watching on it just seems",
    "start": "1839120",
    "end": "1844679"
  },
  {
    "text": "like whatever's happening if you're not on there it breaks down elsewhere well uh all I was saying is that it uh just",
    "start": "1844679",
    "end": "1849919"
  },
  {
    "text": "to distinguish between the two Spectre and meltdown are are were more more about speculative execution paths like",
    "start": "1849919",
    "end": "1855960"
  },
  {
    "text": "if statements the M2 bug it doesn't have anything to do with an if statement that one's just in the memory prefetcher so",
    "start": "1855960",
    "end": "1862200"
  },
  {
    "text": "that was why it was so novel is because it's like doesn't actually matter whether you have speculative whether you",
    "start": "1862200",
    "end": "1867360"
  },
  {
    "text": "have branches Branch free code will still be hit by the M2 okay you can talk about that sometime too if you want but",
    "start": "1867360",
    "end": "1873080"
  },
  {
    "text": "yes okay because that's what they were talking about with that constant time programming or whatever it is is it Y is that what this is and all the fetching",
    "start": "1873080",
    "end": "1879279"
  },
  {
    "text": "and all that I understood the exor part and that's about it so okay got xor is really cool the fact that it has memory",
    "start": "1879279",
    "end": "1885360"
  },
  {
    "text": "is mind-blowing all right what is x86 really here you can see a block diagram",
    "start": "1885360",
    "end": "1890679"
  },
  {
    "text": "of the microarchitectures of two seemingly completely unrelated CPUs don't let the looks deceive you the Zen",
    "start": "1890679",
    "end": "1896279"
  },
  {
    "text": "4 CPU still supports real mode it can still run 8086 programs the 8086 is much",
    "start": "1896279",
    "end": "1902840"
  },
  {
    "text": "simpler CPU it takes multiple clock Cycles to run instructions there's an x-ray there uh anywhere from 2 to over",
    "start": "1902840",
    "end": "1908559"
  },
  {
    "text": "80 one cycle is required per bite of instruction and one or more cycles for the calculations there is also no",
    "start": "1908559",
    "end": "1915000"
  },
  {
    "text": "concept of super scaler or out of order here everything takes a predetermined amount of time and happens strictly in",
    "start": "1915000",
    "end": "1920559"
  },
  {
    "text": "order okay so these must be the two different ones this is the old one going on right here I don't really I mean I'm",
    "start": "1920559",
    "end": "1925639"
  },
  {
    "text": "not really sure what I'm looking at going on here but okay this is probably not easy to look at I think they cut and",
    "start": "1925639",
    "end": "1930799"
  },
  {
    "text": "pasted from the 886 manual uh that diagram from the 886 manual yeah yeah",
    "start": "1930799",
    "end": "1936080"
  },
  {
    "text": "there's just some arrows and it looks like there's probably text here let me turn off uh let me turn off it might help me to turn off dark readers for a",
    "start": "1936080",
    "end": "1941919"
  },
  {
    "text": "second well the bottom those are just it's just there's the segment registers in the upper left there's the reg the bottom right there's the prefetch uh",
    "start": "1941919",
    "end": "1948360"
  },
  {
    "text": "okay sorry uh yeah there's there's a probably a prefetch queue I think in the I can't actually see but it doesn't that",
    "start": "1948360",
    "end": "1954720"
  },
  {
    "text": "diagram is useless it's it's a useless diagram I don't know why it's on there okay I have no idea what's happening",
    "start": "1954720",
    "end": "1959799"
  },
  {
    "text": "here and this also I have no idea what's like this just says a lot of stuff SK the bottom right again this is just why",
    "start": "1959799",
    "end": "1966039"
  },
  {
    "text": "I don't understand why like I I get nervous about whoever wrote this article the upper left is not a diagram that",
    "start": "1966039",
    "end": "1973360"
  },
  {
    "text": "actually shows the execution method of the 8086 it's not the same as the",
    "start": "1973360",
    "end": "1979559"
  },
  {
    "text": "diagram in the lower right which is showing basically like how the execution the front end and the back end FR front",
    "start": "1979559",
    "end": "1985720"
  },
  {
    "text": "end on the top back end on the bottom for the Zen 4 so it's like again",
    "start": "1985720",
    "end": "1991039"
  },
  {
    "text": "like Highly Questionable article but continue okay okay by contrast zen4 is a",
    "start": "1991039",
    "end": "1996080"
  },
  {
    "text": "monster not only does it have all four alus it has three agus as well agu",
    "start": "1996080",
    "end": "2001720"
  },
  {
    "text": "what's that address generation unit so it's basically a thing that is um how",
    "start": "2001720",
    "end": "2008000"
  },
  {
    "text": "should I put this so when you need to access memory uh the you need to be able to figure out where you're getting the",
    "start": "2008000",
    "end": "2014960"
  },
  {
    "text": "memory from and that typically is a like there's a thing called an effective address calculation where it's basically",
    "start": "2014960",
    "end": "2020000"
  },
  {
    "text": "like take this pointer and add this much to it and then figure out where that actually is in you know in memory and so",
    "start": "2020000",
    "end": "2025760"
  },
  {
    "text": "on that so the number of agus you have determines how many memory fetches you could issue per cycle right okay so if",
    "start": "2025760",
    "end": "2033000"
  },
  {
    "text": "you have three agus you could fetch you could do three reads in one cycle you could issue them they don't NE complete",
    "start": "2033000",
    "end": "2038039"
  },
  {
    "text": "but you can issue them okay yes all right some some of you may have heard of",
    "start": "2038039",
    "end": "2043080"
  },
  {
    "text": "the arithm arithmetic and logic unit before but address generation unit is less welln I should have just let them",
    "start": "2043080",
    "end": "2048760"
  },
  {
    "text": "tell me all of this means that zen4 can under perfect conditions perform 4 ALU",
    "start": "2048760",
    "end": "2053919"
  },
  {
    "text": "operations and three load/store operations per clock cycle this makes zen4 a factor of two to 10 times faster",
    "start": "2053919",
    "end": "2061240"
  },
  {
    "text": "than the 8086 at the same clock speed if you factor in clock speed 2 it becomes",
    "start": "2061240",
    "end": "2066599"
  },
  {
    "text": "closer to roughly 5 to seven orders of magnitude despite that the zen4 CPU still support the original 8086",
    "start": "2066599",
    "end": "2073158"
  },
  {
    "text": "instructions so told me yeah so how I read this is",
    "start": "2073159",
    "end": "2078599"
  },
  {
    "text": "from what you've told me this doesn't this argument doesn't have to do with this argument you are 100% correct yes so",
    "start": "2078599",
    "end": "2087560"
  },
  {
    "text": "just so to put this in perspective right there are so many things missing from this ALU doesn't really mean anything",
    "start": "2087560",
    "end": "2095679"
  },
  {
    "text": "it's just a way of saying there's a part of the chip that can do some computations yeah it can add and such",
    "start": "2095679",
    "end": "2102240"
  },
  {
    "text": "but we don't even know which such so when we say ALU we mean ah it's this part of the thing over here that can do",
    "start": "2102240",
    "end": "2107680"
  },
  {
    "text": "a certain set of operations on Modern CPUs there's a list of which operations it can do it's like this particular one",
    "start": "2107680",
    "end": "2113920"
  },
  {
    "text": "can do a multiply an integer multiply this other one can't it can only do an exor or whatever right oh so they",
    "start": "2113920",
    "end": "2120640"
  },
  {
    "text": "actually do alus that are uh hyper optimized for specific operations yeah actually uh do you want to see uh so I",
    "start": "2120640",
    "end": "2127240"
  },
  {
    "text": "can I can show you I I don't know how far in the weeds you want to get here Prime but if I if I drive you towards a",
    "start": "2127240",
    "end": "2134160"
  },
  {
    "text": "website for a second can you open up a tab and go to a place called uops doino uops doino this ain't porn right oh it's",
    "start": "2134160",
    "end": "2142280"
  },
  {
    "text": "wicked porn it's porn for for for microarchitecture people and click on the thing that says table on the on the",
    "start": "2142280",
    "end": "2149359"
  },
  {
    "text": "button bar and then Open Table uh just click on table an Open Table I already did now open table all right yeah um so",
    "start": "2149359",
    "end": "2156000"
  },
  {
    "text": "if you type something in for for example add just type in add to the search box",
    "start": "2156000",
    "end": "2161640"
  },
  {
    "text": "in the left corner right what you will see is a list of all the permutations",
    "start": "2161640",
    "end": "2168280"
  },
  {
    "text": "the ways that ad can be so for example if you look at ad there'll be an ad uh like",
    "start": "2168280",
    "end": "2173839"
  },
  {
    "text": "R32 or something or r64 what those sorts things that'd be like 64-bit register to another like add R32 R32 would be like",
    "start": "2173839",
    "end": "2181280"
  },
  {
    "text": "add a 32bit register to another 30 bit register that one you got your pointer on just a minute ago add R32 to M32 that",
    "start": "2181280",
    "end": "2189559"
  },
  {
    "text": "3it mation memory like once you learn to read this",
    "start": "2190200",
    "end": "2196880"
  },
  {
    "text": "you can just know what these things are they're not like cryptic or anything it's like oh okay I get it right yeah yeah over in the column that says ports",
    "start": "2196880",
    "end": "2203880"
  },
  {
    "text": "you see that let just make sure let's see which one's ports it's the ports way over here on this side yep yeah it's one says like one times p blah blah blah yes",
    "start": "2203880",
    "end": "2212400"
  },
  {
    "text": "yes so the p and then the bunch of numbers p 0156",
    "start": "2212400",
    "end": "2218560"
  },
  {
    "text": "yeah the 0156 those are which numerical alus in",
    "start": "2218560",
    "end": "2224079"
  },
  {
    "text": "the system can do that operation so they're basically saying okay if you want to do like for example you have",
    "start": "2224079",
    "end": "2230800"
  },
  {
    "text": "your mouse uh Mouse over one now at m64 plus an I8 which means 64-bit memory",
    "start": "2230800",
    "end": "2236440"
  },
  {
    "text": "location added to an 8 bit immediate value so I want to take this address and I want to add this number between 0 and",
    "start": "2236440",
    "end": "2243079"
  },
  {
    "text": "255 to it right yeah but that string of gobble GS says is we're going to do one",
    "start": "2243079",
    "end": "2249520"
  },
  {
    "text": "micro op on one of those ports 0 one five or six one micro op on the next",
    "start": "2249520",
    "end": "2255160"
  },
  {
    "text": "Port which is two or three one micro op on four or nine and one micro op on seven or eight so what that's telling",
    "start": "2255160",
    "end": "2262599"
  },
  {
    "text": "you is which of the quote unquote alus ports is a more generic term that could",
    "start": "2262599",
    "end": "2268480"
  },
  {
    "text": "include also the agu so the address generation unit part the two different kinds it's telling you which of those",
    "start": "2268480",
    "end": "2276119"
  },
  {
    "text": "can handle each of the Micro Ops generated from this instruction so like I said instructions generate multiple",
    "start": "2276119",
    "end": "2281359"
  },
  {
    "text": "Micro Ops those Micro Ops can only execute on certain ports quote unquote which is some kind of unit in the",
    "start": "2281359",
    "end": "2287920"
  },
  {
    "text": "processor and these are them so if you can't just say ALU now let me show you why the ad that's doing a pure register",
    "start": "2287920",
    "end": "2295520"
  },
  {
    "text": "to memory uh register to uh register or register to uh value so you look at add",
    "start": "2295520",
    "end": "2300760"
  },
  {
    "text": "R16 to I6 just below you there that's adding a 16bit register to a 16bit immediate it just says it can be on Port",
    "start": "2300760",
    "end": "2307839"
  },
  {
    "text": "01 five or six and it's one micro op so just one thing any of those four ports can do it so that means right I'm sorry",
    "start": "2307839",
    "end": "2315160"
  },
  {
    "text": "I'm going through this stuff so fast can I can I interrupt you for a quick second just so I can kind of speak from like my my experience here so what that says to",
    "start": "2315160",
    "end": "2321760"
  },
  {
    "text": "me is that each one of these operations is effectively operating over a 16bit range because if you have a 64 and a 64",
    "start": "2321760",
    "end": "2327280"
  },
  {
    "text": "you have four operations right that'd be 64 bits so it'd be four * 16 that's why this thing can operate in a single place",
    "start": "2327280",
    "end": "2334119"
  },
  {
    "text": "and 0156 these must operate in a specific specific memory bucket range uh no so uh",
    "start": "2334119",
    "end": "2341000"
  },
  {
    "text": "you know what I'm going to just pop back to the board real quick okay sorry this is very interesting but I you know this is again way out of my depth but that's",
    "start": "2341000",
    "end": "2346599"
  },
  {
    "text": "kind of how I read it I could see that these things each are operating on 16 bits but I don't quite understand I'm sorry I'm going so fast uh I just don't",
    "start": "2346599",
    "end": "2353599"
  },
  {
    "text": "want to I don't know how much time you've got so just that's all we'll do we could do one more board",
    "start": "2353599",
    "end": "2360119"
  },
  {
    "text": "time I think everybody enjoys board time so no one's going to be upset at you for doing board time okay",
    "start": "2360119",
    "end": "2366160"
  },
  {
    "text": "okay um so you'll just have to forgive me not knowing what's happening no no one knows",
    "start": "2366160",
    "end": "2373000"
  },
  {
    "text": "this stuff it's it's like it's it's uh it's just not known these days right so that's not you that's everybody uh so",
    "start": "2373000",
    "end": "2379920"
  },
  {
    "text": "one of the reasons that I teach this stuff or try to is because it's like good to know because it's like demystifying it's like oh I I get it",
    "start": "2379920",
    "end": "2386480"
  },
  {
    "text": "like I know how the computer actually does this stuff now right so those Micro Ops like I said there was like an ad or",
    "start": "2386480",
    "end": "2392520"
  },
  {
    "text": "something like that and let's take the the case that we were looking at before where it said the ad was Port like what was 1056 or something like that yep one",
    "start": "2392520",
    "end": "2400040"
  },
  {
    "text": "z56 B what that means what that's telling you is there's only one of them in that list right you there was others",
    "start": "2400040",
    "end": "2405680"
  },
  {
    "text": "that had plus dot dot dot dot each thing separated by a plus is a",
    "start": "2405680",
    "end": "2410800"
  },
  {
    "text": "micro op so okay if there were four of them it just needed it meant it needed four",
    "start": "2410800",
    "end": "2416520"
  },
  {
    "text": "Micro Ops so there were four things the CPU would have to do this ad the one that I think we were R16 I6 that was",
    "start": "2416520",
    "end": "2423839"
  },
  {
    "text": "what we said yep that means that means a 16 bit register plus an a 16bit",
    "start": "2423839",
    "end": "2429480"
  },
  {
    "text": "immediate that would be something of the form add um ax we talked about that before so",
    "start": "2429480",
    "end": "2435680"
  },
  {
    "text": "a 16bit register Y and then a 16bit value like 1,25 let's say right six you can encode",
    "start": "2435680",
    "end": "2442680"
  },
  {
    "text": "that in 16bits this is a 16bit register that could be an ad R16 i16 it only",
    "start": "2442680",
    "end": "2448000"
  },
  {
    "text": "needs one micro op it can go on any of these four ports what does that mean well Micro Ops all pile into a thing",
    "start": "2448000",
    "end": "2456760"
  },
  {
    "text": "that's a and there can be multiple of these on a chip but they pound a thing called a schedule and the has all of those things",
    "start": "2456760",
    "end": "2463520"
  },
  {
    "text": "we were talking about alus and agus different ports that we call them P for Port that can do",
    "start": "2463520",
    "end": "2470680"
  },
  {
    "text": "stuff this is telling you that ports Z one five and six all have an ad unit on",
    "start": "2470680",
    "end": "2476400"
  },
  {
    "text": "them a integer ad unit so 0 one two 3",
    "start": "2476400",
    "end": "2482040"
  },
  {
    "text": "four five and six all of these have ad units these",
    "start": "2482040",
    "end": "2488079"
  },
  {
    "text": "two three and four do not so when the computer is trying to execute your ad",
    "start": "2488079",
    "end": "2493240"
  },
  {
    "text": "instruction it has On Any Given cycle four places it can put it which means it",
    "start": "2493240",
    "end": "2498800"
  },
  {
    "text": "can do up to four ads per cycle because if it had four of those to do it has four things that can do it if you want",
    "start": "2498800",
    "end": "2504560"
  },
  {
    "text": "to do a fifth ad on that cycle you can't the fifth ad stalls waiting for the",
    "start": "2504560",
    "end": "2510480"
  },
  {
    "text": "other four because they have to go in here first then on the next cycle once Those ads are moving through it can put",
    "start": "2510480",
    "end": "2516599"
  },
  {
    "text": "it in one of those port reports does that make more sense yeah so Micro Ops pour into the Schuler they sit there",
    "start": "2516599",
    "end": "2522119"
  },
  {
    "text": "they wait this is the out of order part right they wait until there's available execution resources to execute them and",
    "start": "2522119",
    "end": "2528839"
  },
  {
    "text": "their dependencies have been satisfied like You' imagine if this register was still getting produced by some other",
    "start": "2528839",
    "end": "2534000"
  },
  {
    "text": "instruction it would have to wait till it was finished they all Pile in here then they",
    "start": "2534000",
    "end": "2539319"
  },
  {
    "text": "all execute out uh when you know when there's ports available for them to be executed I assume the Schuler is just",
    "start": "2539319",
    "end": "2546359"
  },
  {
    "text": "literally just a series of x amount of cues where each instruction can fall into these cues and it hopefully does",
    "start": "2546359",
    "end": "2552640"
  },
  {
    "text": "the best ordering possible and that's that it it never is going to do the best Ting possible like you're try you're",
    "start": "2552640",
    "end": "2559000"
  },
  {
    "text": "trying like you said but it's you know it's a lot of times it doesn't matter that much because they're simple but",
    "start": "2559000",
    "end": "2564359"
  },
  {
    "text": "yeah if you give it something tricky it's not it doesn't there's not room on the chip in such a high performance part",
    "start": "2564359",
    "end": "2570640"
  },
  {
    "text": "to have some incredibly complex like tree analysis right so it's just doing its best like with some heuristics yeah",
    "start": "2570640",
    "end": "2578559"
  },
  {
    "text": "nice yes okay and Q Q management is extremely hard for anyone that's never attempted to do Q management it's like a",
    "start": "2578559",
    "end": "2584440"
  },
  {
    "text": "virtually impossible problem and it has all these dependencies like I said like oh I can't schedule this instruction",
    "start": "2584440",
    "end": "2589680"
  },
  {
    "text": "until it's ready and all that until the the inputs for it are ready and uh so anyway that's it and then the the if you",
    "start": "2589680",
    "end": "2595760"
  },
  {
    "text": "have more P's it doesn't mean it's doing more bits what it means is that it's doing more things so the reason that you",
    "start": "2595760",
    "end": "2602240"
  },
  {
    "text": "saw more ports on that other ad is because it involved a memory location so it needed to use other ports to generate",
    "start": "2602240",
    "end": "2608599"
  },
  {
    "text": "the address and do the fetch so that's why you get more Micro Ops sometimes is there's more parts to the instruction",
    "start": "2608599",
    "end": "2614960"
  },
  {
    "text": "that makes sense that makes sense because a register is already a it's like an already specified kind of named",
    "start": "2614960",
    "end": "2620000"
  },
  {
    "text": "location and an i16 is a constant so that makes sense that I can kind of just do it once versus a read load from",
    "start": "2620000",
    "end": "2626440"
  },
  {
    "text": "memory then get those things and then write it back out to memory yep yep so anyway back to our article the reason",
    "start": "2626440",
    "end": "2633079"
  },
  {
    "text": "that I you have your old camera on you got to swap swap scenes thank you for reminding me yeah I would have gone all",
    "start": "2633079",
    "end": "2639440"
  },
  {
    "text": "day with that okay um so going back to the article the reason that I was like it's kind of weird is because like alus",
    "start": "2639440",
    "end": "2645920"
  },
  {
    "text": "are not directly comparable like you know a a modern ALU is way more powerful",
    "start": "2645920",
    "end": "2651480"
  },
  {
    "text": "than the 86's ALU was right yeah so it's like it doesn't make sense to compare them in the way they're comparing them",
    "start": "2651480",
    "end": "2657359"
  },
  {
    "text": "and they're they're this is in a section where the person's trying to make a uh comparison to show a large multiple well",
    "start": "2657359",
    "end": "2663839"
  },
  {
    "text": "why didn't you use the fact that like the the integer mul multiply in x86 was like a series of ALU Ops that ran one",
    "start": "2663839",
    "end": "2670720"
  },
  {
    "text": "after the other it took like 80 Cycles or more like we can do those now in like",
    "start": "2670720",
    "end": "2676040"
  },
  {
    "text": "four Cycles or something on a on a or less on um depending on what you're",
    "start": "2676040",
    "end": "2681079"
  },
  {
    "text": "talking about through per latency on a on an x64 right so it's yeah it's just weird yeah okay that that's very good",
    "start": "2681079",
    "end": "2688000"
  },
  {
    "text": "okay so this is some good context to be able to understand why this is a uh an unusual argument shall we say for this",
    "start": "2688000",
    "end": "2694000"
  },
  {
    "text": "type of thing it's weird yeah yeah so the 8086 instr instruction set is not the only instruction set that modern x86",
    "start": "2694000",
    "end": "2700240"
  },
  {
    "text": "supports there are dozens of instruction sets from the well-known floating Point SS AVX and other Vector extensions to",
    "start": "2700240",
    "end": "2706480"
  },
  {
    "text": "the Obscure pae for 32-bit x86 to have wider addresses and vgf or is a gif vjf",
    "start": "2706480",
    "end": "2714079"
  },
  {
    "text": "for interruptions in virtualizations according to Stefan uh huel there may be",
    "start": "2714079",
    "end": "2719240"
  },
  {
    "text": "as many as 3,600 instructions that's more than 20 times as many instructions",
    "start": "2719240",
    "end": "2724760"
  },
  {
    "text": "as risk 5 has uh even if you count all the most common risk five extensions uh",
    "start": "2724760",
    "end": "2730319"
  },
  {
    "text": "quick question um in my head my normal thought would be that the amount of instructions matter do they matter at",
    "start": "2730319",
    "end": "2737559"
  },
  {
    "text": "all uh they M matter very little uh which is I think again why this heading",
    "start": "2737559",
    "end": "2744480"
  },
  {
    "text": "your section where the problem lies and then talking about something that really isn't a problem uh or isn't the M",
    "start": "2744480",
    "end": "2750480"
  },
  {
    "text": "problem if for this type of argument is weird so the first of all CPUs are",
    "start": "2750480",
    "end": "2757040"
  },
  {
    "text": "divided uh into two parts now well there many parts and the part that does the",
    "start": "2757040",
    "end": "2762400"
  },
  {
    "text": "instruction Fetch and decode right that generates those Micro Ops is basically completely independent of the back end",
    "start": "2762400",
    "end": "2768319"
  },
  {
    "text": "to the extent that it matters so when you talk about adding more instructions you're not talking about anything that",
    "start": "2768319",
    "end": "2773720"
  },
  {
    "text": "affects the actual execution engine of the CPU you're really not talking at all you're just talking about how many",
    "start": "2773720",
    "end": "2779599"
  },
  {
    "text": "different permutations of input bit patterns you plan to turn into Micro Ops that's all you're talking about right",
    "start": "2779599",
    "end": "2786480"
  },
  {
    "text": "okay okay does it matter a little bit yes because uh if you have lots of",
    "start": "2786480",
    "end": "2792400"
  },
  {
    "text": "instructions the decoder has to be able to process all of those but if that's",
    "start": "2792400",
    "end": "2797480"
  },
  {
    "text": "your concern what you're really concerned about is not the number of instructions it's how specific are their",
    "start": "2797480",
    "end": "2804680"
  },
  {
    "text": "permutations because like if you just had a very simple bit pattern that you have to decode right then it's trivial",
    "start": "2804680",
    "end": "2811760"
  },
  {
    "text": "to support lots of instructions you just go like okay it just does these little things and that says which uops to do",
    "start": "2811760",
    "end": "2817119"
  },
  {
    "text": "and I'm done right and that part of the chip is Tiny even if it supports lots of different instruction permutations now",
    "start": "2817119",
    "end": "2822559"
  },
  {
    "text": "he will mention that in the article in a second here but it's weird to not lead with that the number of instructions just isn't that big a deal anyway",
    "start": "2822559",
    "end": "2828400"
  },
  {
    "text": "continue these instructions come at a cost take for example one of uh x86 Oddball instructions mpsa DBW this",
    "start": "2828400",
    "end": "2837280"
  },
  {
    "text": "instruction is 6 to seven bytes long and Compares how different a 4 byte sequence is in multiple positions of an 11 by",
    "start": "2837280",
    "end": "2845200"
  },
  {
    "text": "sequence okay it's a feel oddly specific there must have been a problem there doing so takes at least 19 additions but",
    "start": "2845200",
    "end": "2851520"
  },
  {
    "text": "the CPU runs it in just two clock Cycles the first problem is the length the combination of the 6 to 11 byte",
    "start": "2851520",
    "end": "2857640"
  },
  {
    "text": "instruction length and no alignment required makes fetching the instruction a lot more expensive to do this",
    "start": "2857640",
    "end": "2862880"
  },
  {
    "text": "instruction also comes in a variant that accesses memory which complicates decoding of the instruction finally this",
    "start": "2862880",
    "end": "2868800"
  },
  {
    "text": "instruction is still supported by modern CPUs despite how rare it is to see it being used all that uses up valuable",
    "start": "2868800",
    "end": "2875480"
  },
  {
    "text": "space in Cutting Edge X 86 CPUs which it doesn't right like yeah we kind of learned that there's like the separate",
    "start": "2875480",
    "end": "2881559"
  },
  {
    "text": "decoder which just I assume has that it's just like you get this and it comes out with the Micro Ops so x86 and x64",
    "start": "2881559",
    "end": "2888720"
  },
  {
    "text": "both support memory operands that's the thing where I said like okay you can do an ad and you can specify memory",
    "start": "2888720",
    "end": "2894559"
  },
  {
    "text": "location right M 64s m364 is and m8s and 256s if you're talking about bigger",
    "start": "2894559",
    "end": "2900960"
  },
  {
    "text": "registers whatever it is right you can do those Ops and you can support a memory address so the fact that this one",
    "start": "2900960",
    "end": "2907359"
  },
  {
    "text": "instruction has that is irrelevant to the architecture because all the instructions have that so you wouldn't",
    "start": "2907359",
    "end": "2912800"
  },
  {
    "text": "go like oh let me talk about that in the conscious instruction as far as the instruction being an oddball instruction",
    "start": "2912800",
    "end": "2918839"
  },
  {
    "text": "the reason these instructions exist is because they were trying to accelerate certain critical features like video",
    "start": "2918839",
    "end": "2925920"
  },
  {
    "text": "decompression or compression or AI processing Intel doesn't throw instructions into the instruction set",
    "start": "2925920",
    "end": "2931480"
  },
  {
    "text": "for their health they do it because they have specific customers who benefit greatly from having these instruction",
    "start": "2931480",
    "end": "2937160"
  },
  {
    "text": "and that's why they're there it's also why risk 5 doesn't have these instructions because hey news flash",
    "start": "2937160",
    "end": "2943400"
  },
  {
    "text": "nobody used risk 5 for high performance applications so they haven't had to deal with all of these specific cases where",
    "start": "2943400",
    "end": "2949680"
  },
  {
    "text": "they need to be the fastest person on this Benchmark if they had you better believe they would have some extension",
    "start": "2949680",
    "end": "2955599"
  },
  {
    "text": "called risk five video decompression or whatever where they add this exact",
    "start": "2955599",
    "end": "2960799"
  },
  {
    "text": "instruction or something like that right so it's like again it's just it's a mess of an argument in my opinion okay okay",
    "start": "2960799",
    "end": "2967480"
  },
  {
    "text": "okay that actually does make a lot of sense in Risk architectures like myips arm and risk 5 the implementation of instructions is all Hardware there are",
    "start": "2967480",
    "end": "2974680"
  },
  {
    "text": "dedicated logic gates for running certain instructions the 8086 is also also started this way which would be an",
    "start": "2974680",
    "end": "2981240"
  },
  {
    "text": "expensive joke if that was still the case that's where micro code comes in you see okay stop let me stop you're",
    "start": "2981240",
    "end": "2988040"
  },
  {
    "text": "right there okay so this is just the person just doesn't know because you discussed that earlier",
    "start": "2988040",
    "end": "2993359"
  },
  {
    "text": "about like ads being multiple instructions and micro codes and all that that they just don't know there are",
    "start": "2993359",
    "end": "2999680"
  },
  {
    "text": "only a very small and they're not the ones you think uh set of instructions on",
    "start": "2999680",
    "end": "3004760"
  },
  {
    "text": "the 886 that aren't micro coded nearly every instruction nearly every single instruction is micro coded on an 886 so",
    "start": "3004760",
    "end": "3013480"
  },
  {
    "text": "common misconception that the 886 was simple and what nope it was micro coded",
    "start": "3013480",
    "end": "3018520"
  },
  {
    "text": "and every instruction was micro coded and if someday you want to do that on stream Prime I can walk you through the",
    "start": "3018520",
    "end": "3024040"
  },
  {
    "text": "micro code because we know what it is now they reverse engineered from die shots and we now know exactly what the",
    "start": "3024040",
    "end": "3030119"
  },
  {
    "text": "micro code is for every 8 8086 instruction to be real I'm I'm just G",
    "start": "3030119",
    "end": "3035480"
  },
  {
    "text": "I'm just going to say something I I don't want you to judge me I won't I still don't understand why they",
    "start": "3035480",
    "end": "3041920"
  },
  {
    "text": "use the term die okay I don't know what that means and like my brain can't make sense of it I've never even done I've",
    "start": "3041920",
    "end": "3047760"
  },
  {
    "text": "never done anything beyond microprocessors and so I've never got into that level of Hardware engineering",
    "start": "3047760",
    "end": "3053160"
  },
  {
    "text": "and so I don't know what it means I know what memory maps are don't know what that is so uh when I say you don't give",
    "start": "3053160",
    "end": "3058599"
  },
  {
    "text": "yourself enough credit Prime I'm just going to say it right now I have no idea why it's called a die let's go I really",
    "start": "3058599",
    "end": "3064680"
  },
  {
    "text": "don't I can tell you what it is I can tell you what it is I don't know why",
    "start": "3064680",
    "end": "3069920"
  },
  {
    "text": "they call it a d I've never thought about that so when you manufacture chips right they're made using this",
    "start": "3069920",
    "end": "3078160"
  },
  {
    "text": "lithographic process where you shoot photons at a piece of a wafer of silicon",
    "start": "3078160",
    "end": "3083440"
  },
  {
    "text": "right classic yeah it's this big circle of silicon if you could probably find an image of someone holding there's always",
    "start": "3083440",
    "end": "3089559"
  },
  {
    "text": "a circle someone's holding it with like like gloves on in every single AI article trying to bait you into clicking",
    "start": "3089559",
    "end": "3095119"
  },
  {
    "text": "on this rainbow sheet of circle yeah and that giant disc has tons of little",
    "start": "3095119",
    "end": "3101559"
  },
  {
    "text": "squares stamped on it which are the CPUs right and when you cut one of those out that's the die that's what you call the",
    "start": "3101559",
    "end": "3108359"
  },
  {
    "text": "D like that piece right there is called to die I guess and now that you're",
    "start": "3108359",
    "end": "3114079"
  },
  {
    "text": "you're making me self-conscious cuz I'm like why the heck is it called a die I have no idea now I'm going to have to go",
    "start": "3114079",
    "end": "3120400"
  },
  {
    "text": "ask a hardware guy I'm going to be like dude like why is it called a die I'm so ignorant people are saying die casting",
    "start": "3120400",
    "end": "3125920"
  },
  {
    "text": "it's die casting yeah I know it's just in my head I'm just like man there's some crazy liquid that they're spraying on on Wafers and I have no idea what's",
    "start": "3125920",
    "end": "3132880"
  },
  {
    "text": "happening it's making making Electronics this is crazy so yeah I'm sorry I don't know is it is it because it's diecast is",
    "start": "3132880",
    "end": "3139520"
  },
  {
    "text": "it from the word diecast is that it's from the word d it must be from the word diecast I have no idea I only know about",
    "start": "3139520",
    "end": "3144839"
  },
  {
    "text": "the ancient the ancient uh uh molding process using clay and iron so I have no",
    "start": "3144839",
    "end": "3150040"
  },
  {
    "text": "I I can't go any further than that all right CPUs those were fortunately it can get worse let's get back to those pesky",
    "start": "3150040",
    "end": "3156599"
  },
  {
    "text": "keywords speculative and out of order modern x86 runs instructions out of order too for example to do math while",
    "start": "3156599",
    "end": "3163119"
  },
  {
    "text": "waiting for a memory access sounds good let's assume for a moment that's all there is to it when faced with a divide",
    "start": "3163119",
    "end": "3169640"
  },
  {
    "text": "that uses the value of racks followed by the way racks 64-bit register right followed by a multiple or a mult mully",
    "start": "3169640",
    "end": "3176880"
  },
  {
    "text": "that overwrites racks the multiply must logically run after the Divide even though the result of the multiply does",
    "start": "3176880",
    "end": "3182880"
  },
  {
    "text": "not depend on the Divide that's where register renaming comes in when a register renaming both can run",
    "start": "3182880",
    "end": "3189520"
  },
  {
    "text": "simultaneously because the racks that the Divide sees in the different physical registers than the racks that",
    "start": "3189520",
    "end": "3195520"
  },
  {
    "text": "is multiply that the multiplier writes to I kind of read that poorly my I'm kicking in with the dyslexia here for a",
    "start": "3195520",
    "end": "3201400"
  },
  {
    "text": "second but okay so this s like I mean everything that's currently described sounds good like okay going to optimize",
    "start": "3201400",
    "end": "3207119"
  },
  {
    "text": "it because we know that you don't overlap okay this sounds good y this acceleration leaves us with two problems",
    "start": "3207119",
    "end": "3212440"
  },
  {
    "text": "determining which instructions depend on which others and scheduling them optimally to run the code as fast as",
    "start": "3212440",
    "end": "3217960"
  },
  {
    "text": "possible these problems depend on the particular instructions being run and their solution logic gets more complicated the more instructions exist",
    "start": "3217960",
    "end": "3224960"
  },
  {
    "text": "the x86 oh no okay go on why why not because there it's just Micro Ops so",
    "start": "3224960",
    "end": "3231160"
  },
  {
    "text": "those complex instructions like what an instruction does can be entirely boiled",
    "start": "3231160",
    "end": "3236200"
  },
  {
    "text": "down to which registers does it modify as far as the concerned the doesn't care",
    "start": "3236200",
    "end": "3241799"
  },
  {
    "text": "it could it could be doing the world's most it could be calculating all the digits of pi and you know going to",
    "start": "3241799",
    "end": "3247559"
  },
  {
    "text": "Infinity the infinite digit of pi which will take the depth of the universe and it will grab the last digit of pi when",
    "start": "3247559",
    "end": "3254920"
  },
  {
    "text": "we finally figure out it's not really infinite after all and putting that in register we don't even know anything about that operation to know which",
    "start": "3254920",
    "end": "3260960"
  },
  {
    "text": "registers are affected so the schuer doesn't care how complex the instruction is it just needs to know does this",
    "start": "3260960",
    "end": "3266760"
  },
  {
    "text": "overwrite the destination or not that's all it needs to know that makes perfect sense because if you're scheduling a bunch of you don't care how the the the",
    "start": "3266760",
    "end": "3274440"
  },
  {
    "text": "food is made you just need to know that you have enough pots you can put it into right and that's all you really care about okay so I have no idea what you're",
    "start": "3274440",
    "end": "3280559"
  },
  {
    "text": "talking about here I have no idea okay okay that that makes a ton of sense the x86 instruction and coding format is so",
    "start": "3280559",
    "end": "3287359"
  },
  {
    "text": "complex an entire wikip page wikipage oh my goodness Wiki page is needed to serve as a tldr meanwhile risk 5 needs only",
    "start": "3287359",
    "end": "3295480"
  },
  {
    "text": "two tables to describe the encoding of all standard instructions needless to say this puts x86 at an advantage in",
    "start": "3295480",
    "end": "3302160"
  },
  {
    "text": "terms of decoding logic complexity I I guess you could somewhat argue that if there's more things that there is some",
    "start": "3302160",
    "end": "3308559"
  },
  {
    "text": "level of decoding logic logic complexity that's more than risk five but it sounds like it's not really mattering in the",
    "start": "3308559",
    "end": "3315079"
  },
  {
    "text": "end it it's true like so again this is why I say like this I I really question the person who wrote it and whether they",
    "start": "3315079",
    "end": "3321200"
  },
  {
    "text": "understood exactly what was going on here because that part is correct the decode Logic on x86 and x64 is more",
    "start": "3321200",
    "end": "3328319"
  },
  {
    "text": "complicated but it has nothing to do with whether the instructions themselves are harder to schedule or have their",
    "start": "3328319",
    "end": "3335039"
  },
  {
    "text": "dependencies figured out those are completely separate and completely unrelated like they wouldn't even affect",
    "start": "3335039",
    "end": "3340640"
  },
  {
    "text": "each other like to even make the argument that those affected each other you have to get kind of nuts right",
    "start": "3340640",
    "end": "3346680"
  },
  {
    "text": "because the thing thats can I interrupt with the argument for it being slower or Worse would that",
    "start": "3346680",
    "end": "3352160"
  },
  {
    "text": "come from the fact that decoding takes longer than the actual execution is that like kind of like this principal",
    "start": "3352160",
    "end": "3357200"
  },
  {
    "text": "argument that's really coming behind this because if the decoder can always run faster right like this is just like video if your decoder can run faster",
    "start": "3357200",
    "end": "3363960"
  },
  {
    "text": "than your actual renderer you'll never worry but if your decoder runs slower than your renderer you'll always have dropped frames and so is that kind of",
    "start": "3363960",
    "end": "3370200"
  },
  {
    "text": "like this idea that the decoding logic is so complex that it's actually slowing everything down because the decoding is slower than the",
    "start": "3370200",
    "end": "3376440"
  },
  {
    "text": "execution um so the this is why like because we're at the end here I don't know if you want to pause one second",
    "start": "3376440",
    "end": "3382520"
  },
  {
    "text": "just read the end because I'm not sure that the end makes sense but that is what I was going to say is the the the",
    "start": "3382520",
    "end": "3387599"
  },
  {
    "text": "one thing that is worth talking about is decoding complexity and so we should just do that at the end as our final",
    "start": "3387599",
    "end": "3392799"
  },
  {
    "text": "thing because that that is a valid point that is not made well in this article and it's and they don't explain to you",
    "start": "3392799",
    "end": "3398680"
  },
  {
    "text": "the actual thing that matters anyway okay okay over time the other in let's see other instruction sets like arm have",
    "start": "3398680",
    "end": "3405039"
  },
  {
    "text": "been eating at x86 market share arm is completely dominant in smartphones and single board computers it is growing in",
    "start": "3405039",
    "end": "3411720"
  },
  {
    "text": "the server market and it even become the B primary CPU architecture in Apple's devices since 2020 risk 5 is also",
    "start": "3411720",
    "end": "3419440"
  },
  {
    "text": "progressively getting more popular becoming the most widely adopted royalty-free instruction set to date",
    "start": "3419440",
    "end": "3424920"
  },
  {
    "text": "risk 5 is currently most used in microcontrollers but is slowly growing towards higher powered platforms like",
    "start": "3424920",
    "end": "3430599"
  },
  {
    "text": "single board computers and even desktop computers RIS 5 being as free as it is it is also becoming the architecture of",
    "start": "3430599",
    "end": "3437559"
  },
  {
    "text": "choice for today's computer science classes and this will only make it more popular over time why because of its",
    "start": "3437559",
    "end": "3444039"
  },
  {
    "text": "Simplicity uh but it's not right that's it's not why it's popular it's popular cuz it's free full St yes well also just",
    "start": "3444039",
    "end": "3449520"
  },
  {
    "text": "because you know one doesn't mean you can't learn another I don't think there's any risk to Intel in this like let's pretend Intel never would want to",
    "start": "3449520",
    "end": "3455359"
  },
  {
    "text": "change for whatever reason I don't I I obviously don't understand that but I don't think that that's like somehow an inherent wall Garden that is big enough",
    "start": "3455359",
    "end": "3461839"
  },
  {
    "text": "for them to have to change and also arm would be a better comparator to risk five and it's like look arm is is",
    "start": "3461839",
    "end": "3467480"
  },
  {
    "text": "equally simple more or less like when you actually if you actually extended risk five out to be able to do all the things that arm does they wouldn't look",
    "start": "3467480",
    "end": "3474359"
  },
  {
    "text": "all that different right so it's like where's the argument like I don't the argument for risk five adoption is",
    "start": "3474359",
    "end": "3479440"
  },
  {
    "text": "pretty much just that it's free there's your argument okay yeah I mean that can be a good that can be a good argument",
    "start": "3479440",
    "end": "3485480"
  },
  {
    "text": "yeah it certainly can be I'm not suggesting that it won't get a lot of adoption specifically because of that",
    "start": "3485480",
    "end": "3490640"
  },
  {
    "text": "but that's the argument it has nothing to do with its Simplicity all right conclusion the x86 architecture has been",
    "start": "3490640",
    "end": "3496200"
  },
  {
    "text": "around for a long time a 46 year long time in this time it's grown from the simple days of early microprocessors to",
    "start": "3496200",
    "end": "3502400"
  },
  {
    "text": "the incredibly complex monolith of computing we have today this this Evol Evolution has taken its toll though by",
    "start": "3502400",
    "end": "3509119"
  },
  {
    "text": "restricting one of the biggest CPU platforms to the roots of a relatively ancient instruction set which doesn't",
    "start": "3509119",
    "end": "3515039"
  },
  {
    "text": "even benefit from small code size like it did 46 years ago the complexities of super scaler speculative and outof Order",
    "start": "3515039",
    "end": "3521880"
  },
  {
    "text": "execution are heavy burdens on an instruction set that is already very complex by definition and the risk 5",
    "start": "3521880",
    "end": "3527000"
  },
  {
    "text": "shaped grim reapers named arm and risk five are slowly catching up I'm trying to read this as dramatically as possible",
    "start": "3527000",
    "end": "3533520"
  },
  {
    "text": "don't get me wrong I don't hate x86 and I'm not saying it has to die today but",
    "start": "3533520",
    "end": "3538640"
  },
  {
    "text": "one thing is clear the days of x86 are numbered so in that conclusion before we",
    "start": "3538640",
    "end": "3545720"
  },
  {
    "text": "go on to the thing about the decoding which I do want to talk about which I think makes a good closing so you can",
    "start": "3545720",
    "end": "3550960"
  },
  {
    "text": "see why I'm nervous about the person who wrote this article in this conclusion it sounds like and maybe I'm",
    "start": "3550960",
    "end": "3557400"
  },
  {
    "text": "mischaracterizing them but just when you read that paragraph I'm just saying what it sounds like they're saying it sounds",
    "start": "3557400",
    "end": "3562799"
  },
  {
    "text": "like they're saying that the x64 instruction set somehow is the only one",
    "start": "3562799",
    "end": "3568240"
  },
  {
    "text": "that requires super scaler pipelined out of order execution right I mean am I",
    "start": "3568240",
    "end": "3573359"
  },
  {
    "text": "wrong Prime I mean that's how I would read it this is precisely is that these things come with this more complex one",
    "start": "3573359",
    "end": "3580200"
  },
  {
    "text": "oras these ones are much more simple all but all of these architectures use that",
    "start": "3580200",
    "end": "3585400"
  },
  {
    "text": "there are no modern chips that aren't this thing except for like really crappy like little super low power devices no",
    "start": "3585400",
    "end": "3592000"
  },
  {
    "text": "one is talking about no phone on the planet that anyone uses or cares about",
    "start": "3592000",
    "end": "3598400"
  },
  {
    "text": "isn't already on arm and doing all three of those things out of order super",
    "start": "3598400",
    "end": "3604119"
  },
  {
    "text": "scaler pipeline next to they're all doing it so it just it sounds like the person just has no idea what they're talking about when they say stuff like",
    "start": "3604119",
    "end": "3610280"
  },
  {
    "text": "that I'm like what do you mean like what's going on so that's why it's really frustrating you see this art I",
    "start": "3610280",
    "end": "3615799"
  },
  {
    "text": "think that's why also chips and cheese wrote the thing right after like what is this person saying it doesn't make any",
    "start": "3615799",
    "end": "3620839"
  },
  {
    "text": "sense right um so anyway that I I'm going to be real with you I I like I",
    "start": "3620839",
    "end": "3626200"
  },
  {
    "text": "said from the very beginning I think this article is directed towards normies like me where like when I read this I",
    "start": "3626200",
    "end": "3633799"
  },
  {
    "text": "Come Away with a conclusion and it it may be completely wrong or right it it doesn't matter because I I can't",
    "start": "3633799",
    "end": "3640799"
  },
  {
    "text": "technically argue against it but I understand a lot of the underlying things like Legacy typically makes",
    "start": "3640799",
    "end": "3646480"
  },
  {
    "text": "things really hard more is typically more hard than less when you don't do a",
    "start": "3646480",
    "end": "3652039"
  },
  {
    "text": "bunch of these really complicated things you can do really simple things right like all of that sounds very reasonable",
    "start": "3652039",
    "end": "3657880"
  },
  {
    "text": "to me uh and you know like I said unfortunately at least for the uh the",
    "start": "3657880",
    "end": "3664440"
  },
  {
    "text": "thrust of the article is it's just really not that true but let's talk about the one part of it that is true yeah theing complexity logic that was",
    "start": "3664440",
    "end": "3671400"
  },
  {
    "text": "right here let's talk about that so a lot of people I think mistakenly think",
    "start": "3671400",
    "end": "3676599"
  },
  {
    "text": "of decoding complexity as being something that's like cisk versus risk right but really they're sort of",
    "start": "3676599",
    "end": "3683160"
  },
  {
    "text": "separate you could imagine taking cuz risk is reduced instruction set computer just means not very many instructions",
    "start": "3683160",
    "end": "3689400"
  },
  {
    "text": "right the instructions do simple things and you're supposed to do multiple of them to do a complex thing okay makes",
    "start": "3689400",
    "end": "3695960"
  },
  {
    "text": "sense well I could create the world's worst encoding for your 32 instruction",
    "start": "3695960",
    "end": "3702240"
  },
  {
    "text": "computer that would take hours to decode instructions right yes yes I see I see",
    "start": "3702240",
    "end": "3707440"
  },
  {
    "text": "the argument yes they're two separate things there's how well did you structure the decode bit patterns to be",
    "start": "3707440",
    "end": "3715160"
  },
  {
    "text": "friendly to modern CPUs and then there's how simple is the thing and this person is conflating",
    "start": "3715160",
    "end": "3721599"
  },
  {
    "text": "those two things which often does happen but it's important to separate them because the actual thing that's not so",
    "start": "3721599",
    "end": "3727599"
  },
  {
    "text": "great about x86 or x64 now is that there are a few",
    "start": "3727599",
    "end": "3732760"
  },
  {
    "text": "inherited aspects of how things are encoded that make them less desirable",
    "start": "3732760",
    "end": "3739160"
  },
  {
    "text": "from a decode standpoint and when I say from a decode standpoint what I mean is",
    "start": "3739160",
    "end": "3744760"
  },
  {
    "text": "as you correctly surm earlier Prime if I want to execute seven instructions per",
    "start": "3744760",
    "end": "3751319"
  },
  {
    "text": "clock cycle in my total throughput when I measure it I'd better be able to decode seven instructions per clock",
    "start": "3751319",
    "end": "3757480"
  },
  {
    "text": "cycle yeah so if actually it's very hard for me to make a chip front end that can",
    "start": "3757480",
    "end": "3764720"
  },
  {
    "text": "hit that sustained rate because I've chosen poorly how my instructions are encoded um you could imagine and this is",
    "start": "3764720",
    "end": "3772799"
  },
  {
    "text": "not that far from the actual problems in x86 imagine if I sent my instruction",
    "start": "3772799",
    "end": "3777960"
  },
  {
    "text": "stream down zipped it's a zip file right now I have to decompress the instruction",
    "start": "3777960",
    "end": "3784680"
  },
  {
    "text": "set and as I decompress it I can't figure out what like the next three instructions are all at once I have to",
    "start": "3784680",
    "end": "3792079"
  },
  {
    "text": "like decompress each bit like first to find it out and then I can look at what they are right modern things would much",
    "start": "3792079",
    "end": "3799279"
  },
  {
    "text": "prefer to be able to decode all like several instructions at one time right they wanted to code seven at a time",
    "start": "3799279",
    "end": "3805400"
  },
  {
    "text": "eight at time later it'll be more and so making bad decisions about that can put",
    "start": "3805400",
    "end": "3811359"
  },
  {
    "text": "a lot more stress because now they have to be like okay we're going have to have two stages one that like decodes blocks and unzips them and then there's another",
    "start": "3811359",
    "end": "3817079"
  },
  {
    "text": "stage that does eight at a time and we'll try to have the unzipper be on this really fast like separate thick right and you hit these bottlenecks of",
    "start": "3817079",
    "end": "3824359"
  },
  {
    "text": "like we can't just make this thing wider we can't just do more at a time because it's all dependent on each other x86 has",
    "start": "3824359",
    "end": "3831119"
  },
  {
    "text": "some nasty elements like that and that is the thing you would actually want to fix you could keep the exact same",
    "start": "3831119",
    "end": "3836680"
  },
  {
    "text": "instruction set there are some other things like Flags you might want to change but and whether shifts modify",
    "start": "3836680",
    "end": "3841960"
  },
  {
    "text": "Flags there's all these like minutia we could change to fix things a little but you could keep the exact same instruction set and fix the in that",
    "start": "3841960",
    "end": "3848039"
  },
  {
    "text": "decoding aspect and then all of the problems we're talking about the article pretty much go away so again there is a",
    "start": "3848039",
    "end": "3854680"
  },
  {
    "text": "problem there that would be nice to fix it's not any of the things they're really talking about okay okay and and",
    "start": "3854680",
    "end": "3861160"
  },
  {
    "text": "that last one actually makes the most amount of sense which is really like you have a drive force and whatever is the",
    "start": "3861160",
    "end": "3866839"
  },
  {
    "text": "slowest part of this sequence will always be the slowest part of the entire thing and so if decoding logic truly is",
    "start": "3866839",
    "end": "3873319"
  },
  {
    "text": "the driving force then that is going to be the slowest thing and then that's going to cause your that's where your bottlenecks at but that doesn't sound",
    "start": "3873319",
    "end": "3879599"
  },
  {
    "text": "like it it technically is the case today so therefore we're we're safe but does that does that come to a point where it",
    "start": "3879599",
    "end": "3885599"
  },
  {
    "text": "can be it it like I said the article there is an another article you could",
    "start": "3885599",
    "end": "3892079"
  },
  {
    "text": "write that is right about this right and that article would basically be like look we could be decoding a lot more",
    "start": "3892079",
    "end": "3898359"
  },
  {
    "text": "instructions per second uh for x64 with a lot less silicon if we made these",
    "start": "3898359",
    "end": "3904160"
  },
  {
    "text": "changes and by the way I believe Intel has proposed some things like this like they it's not like people know that this",
    "start": "3904160",
    "end": "3910039"
  },
  {
    "text": "is a thing like they know that there are some encoding screw-ups that are due to Legacy and so there are some things you",
    "start": "3910039",
    "end": "3915920"
  },
  {
    "text": "would want to fix there where it's like here's a way we could redo this encoding to just be a little friendlier on decode",
    "start": "3915920",
    "end": "3921599"
  },
  {
    "text": "and then these problems go away so as it is right now they're spending more dice space to use your favorite term again",
    "start": "3921599",
    "end": "3927559"
  },
  {
    "text": "that neither of us knows what it means shooting photons shooting shooting light at a dis at a disc uh more of the space",
    "start": "3927559",
    "end": "3934680"
  },
  {
    "text": "on that CPU is taken up by decode logic than probably should be yes that's",
    "start": "3934680",
    "end": "3940480"
  },
  {
    "text": "probably true right now and it creates more of a struggle for x64 vendors uh",
    "start": "3940480",
    "end": "3945839"
  },
  {
    "text": "AMD and Intel it creates more of a struggle for them they have SP matters",
    "start": "3945839",
    "end": "3951079"
  },
  {
    "text": "an incredible amount a micrometer makes like a huge difference when it comes to this stuff because you can put something",
    "start": "3951079",
    "end": "3957160"
  },
  {
    "text": "else in there yeah we we use that space for more you whatever else more cash more whatever we you know and so it does",
    "start": "3957160",
    "end": "3964079"
  },
  {
    "text": "matter and it does create practical problems where you know there and re engineering time there's a bunch of",
    "start": "3964079",
    "end": "3969279"
  },
  {
    "text": "Engineers who are spending their time figuring out how to decode instructions faster if it was simpler they could have been spending their time operting",
    "start": "3969279",
    "end": "3974760"
  },
  {
    "text": "something else right so it all it there is a germ of truth to it is I guess what I want to get at and that it's not so",
    "start": "3974760",
    "end": "3979880"
  },
  {
    "text": "it's not totally uh there is there isn't a good article there there is a good article you could have WR written about",
    "start": "3979880",
    "end": "3985960"
  },
  {
    "text": "this topic okay so it is there is a really good nugget of Truth within this because I don't like that like entirely",
    "start": "3985960",
    "end": "3991559"
  },
  {
    "text": "just on something there is a very good point which is that this is a serious problem but the framing and",
    "start": "3991559",
    "end": "3996960"
  },
  {
    "text": "everything about it they they missed most of the time they have a worse batting average than your Hall of Fame",
    "start": "3996960",
    "end": "4003279"
  },
  {
    "text": "uh batter for baseball right which is like what. three right so yeah not that high yeah yeah not that high you're not",
    "start": "4003279",
    "end": "4009920"
  },
  {
    "text": "you're not winning out there okay no okay so they win about the same rate as I win in the stock market so good job",
    "start": "4009920",
    "end": "4016079"
  },
  {
    "text": "they did it all right well hey this is this was a great time thanks Casey for being on here this was super informative",
    "start": "4016079",
    "end": "4021440"
  },
  {
    "text": "and people I mean I don't think I've seen uh people this excited about uh uh CPUs in a while CPU minutia yeah CPU",
    "start": "4021440",
    "end": "4030279"
  },
  {
    "text": "minutia sounds actually very very exciting can we get a bunch of claps here yeah and also go follow Casey on Twitter chips and thank you very much",
    "start": "4030279",
    "end": "4036760"
  },
  {
    "text": "everyone yeah I love talking about CPUs so it's my pleasure well let's let's do another thing maybe I'll try to find",
    "start": "4036760",
    "end": "4043240"
  },
  {
    "text": "some time maybe uh cuz I don't know if you know this I'm now full full time uh maybe I'll try to find uh or when I say",
    "start": "4043240",
    "end": "4048480"
  },
  {
    "text": "fulltime I'm now funemployed I no longer have a job uh but maybe I'll try to find some time to uh create that 8bit uh",
    "start": "4048480",
    "end": "4054880"
  },
  {
    "text": "there's like an 8bit computer tutorial maybe I'll try to go through that and then we can kind of talk about some of like how does the next steps happen how",
    "start": "4054880",
    "end": "4061480"
  },
  {
    "text": "did people go through something more advanced maybe or maybe there's something we can kind of come together with with that makes a lot of sense yeah",
    "start": "4061480",
    "end": "4067160"
  },
  {
    "text": "anything you want I you know I love the show that's why I always say anytime yeah yeah no we I think everyone loves",
    "start": "4067160",
    "end": "4072480"
  },
  {
    "text": "you more than me so you can most certainly come on any day of the week you just let me know you pick an article",
    "start": "4072480",
    "end": "4078240"
  },
  {
    "text": "you pick something get on in here all right well and ask the chat tell if if the chat likes this they can tell you",
    "start": "4078240",
    "end": "4084640"
  },
  {
    "text": "what they want us to talk about I'm happy to talk about whatever obviously I only really know microarchitecture performance kinds of stuff so you game",
    "start": "4084640",
    "end": "4091760"
  },
  {
    "text": "engine stuff you can always talk about I do I know some game engine stuff too there's SpaceTime DB coming up there's there's a lot there's a lot of cool",
    "start": "4091760",
    "end": "4098560"
  },
  {
    "text": "stuff right any anytime Prime I love the love the show uh like I said and so",
    "start": "4098560",
    "end": "4103758"
  },
  {
    "text": "anytime all right awesome go follow him on Twitter and then you also have some uh you you release some some videos and stuff like that too well where where can",
    "start": "4103759",
    "end": "4110480"
  },
  {
    "text": "people find that oh well I there is a like a paid thing I do that's this kind of stuff it's computer enhance",
    "start": "4110480",
    "end": "4118920"
  },
  {
    "text": "docomo when whe they're like enhance that quadrant like that kind of thing yeah",
    "start": "4119679",
    "end": "4125520"
  },
  {
    "text": "all right let me let me make sure okay cool there we go that's it let's go all right I'll make sure I I'll I I should",
    "start": "4125520",
    "end": "4131318"
  },
  {
    "text": "make sure this happens sometimes you know I don't actually I don't actually end up putting the links in my in my videos sometimes so I will try to",
    "start": "4131319",
    "end": "4137400"
  },
  {
    "text": "remember to put the links but for those that are still watching computer enhanced. I'm just happy to be on the stream Prime I don't it's totally fine",
    "start": "4137400",
    "end": "4145640"
  },
  {
    "text": "yeah I just like I just like doing it I like doing the stream so thanks so much for having me and thanks everyone for",
    "start": "4145640",
    "end": "4150920"
  },
  {
    "text": "watching and I will see you guys next time yeah yeah",
    "start": "4150920",
    "end": "4156120"
  }
]