[
  {
    "text": "what's your favorite language I don't",
    "start": "0",
    "end": "1380"
  },
  {
    "text": "have a favorite language I'm too old for",
    "start": "1380",
    "end": "3000"
  },
  {
    "text": "that I think at this point in my",
    "start": "3000",
    "end": "4980"
  },
  {
    "text": "life if I were to start a startup I",
    "start": "4980",
    "end": "7379"
  },
  {
    "text": "would say go is my favorite language now",
    "start": "7379",
    "end": "9000"
  },
  {
    "text": "let me clarify why I think go ultimately",
    "start": "9000",
    "end": "11880"
  },
  {
    "text": "is better than rust uh for being",
    "start": "11880",
    "end": "14219"
  },
  {
    "text": "productive and making software where I I",
    "start": "14219",
    "end": "16980"
  },
  {
    "text": "think that there's two different places",
    "start": "16980",
    "end": "18119"
  },
  {
    "text": "where rust and go shine I think where",
    "start": "18119",
    "end": "20400"
  },
  {
    "text": "rust really shines and it really does a",
    "start": "20400",
    "end": "22680"
  },
  {
    "text": "better job than go is when you have a",
    "start": "22680",
    "end": "25800"
  },
  {
    "text": "defined structure input either",
    "start": "25800",
    "end": "28019"
  },
  {
    "text": "synchronous or asynchronous calls all",
    "start": "28019",
    "end": "30480"
  },
  {
    "text": "flowing in and you can do a series of",
    "start": "30480",
    "end": "33420"
  },
  {
    "text": "pretty much pure functions like really",
    "start": "33420",
    "end": "35100"
  },
  {
    "text": "treat it like a functional transform",
    "start": "35100",
    "end": "37100"
  },
  {
    "text": "really great iterator support like Best",
    "start": "37100",
    "end": "41340"
  },
  {
    "text": "in Class string handling and parsing",
    "start": "41340",
    "end": "44219"
  },
  {
    "text": "everything this is where rust shines",
    "start": "44219",
    "end": "47820"
  },
  {
    "text": "and then out the other side right this",
    "start": "47820",
    "end": "50160"
  },
  {
    "text": "is where I think it shines but all of",
    "start": "50160",
    "end": "52140"
  },
  {
    "text": "these things are extremely when I say",
    "start": "52140",
    "end": "54059"
  },
  {
    "text": "Pier I mean like you you really don't",
    "start": "54059",
    "end": "55680"
  },
  {
    "text": "have state in your application it's all",
    "start": "55680",
    "end": "57840"
  },
  {
    "text": "held in any state you have you can just",
    "start": "57840",
    "end": "59460"
  },
  {
    "text": "make it straight up static in a one cell",
    "start": "59460",
    "end": "61260"
  },
  {
    "text": "or something like that do you do you see",
    "start": "61260",
    "end": "63660"
  },
  {
    "text": "what I'm saying and so it's like very",
    "start": "63660",
    "end": "65280"
  },
  {
    "text": "very very very simple now where I think",
    "start": "65280",
    "end": "67979"
  },
  {
    "text": "go shines it's gonna be it's gonna be a",
    "start": "67979",
    "end": "69960"
  },
  {
    "text": "little bit hard to understand this one",
    "start": "69960",
    "end": "71580"
  },
  {
    "text": "um I think it shines for everything else",
    "start": "71580",
    "end": "73860"
  },
  {
    "text": "you need some Global State not a problem",
    "start": "73860",
    "end": "76320"
  },
  {
    "text": "you you don't want Global State not a",
    "start": "76320",
    "end": "78960"
  },
  {
    "text": "problem they both do the things right",
    "start": "78960",
    "end": "80700"
  },
  {
    "text": "which is one no inheritance no",
    "start": "80700",
    "end": "83580"
  },
  {
    "text": "inheritance not allowed right not",
    "start": "83580",
    "end": "85740"
  },
  {
    "text": "allowed We're not gonna allow that okay",
    "start": "85740",
    "end": "87180"
  },
  {
    "text": "this is great you know they both have a",
    "start": "87180",
    "end": "89460"
  },
  {
    "text": "very sim a similar feel with traits",
    "start": "89460",
    "end": "91799"
  },
  {
    "text": "versus interfaces",
    "start": "91799",
    "end": "93299"
  },
  {
    "text": "right they're very very similar it's",
    "start": "93299",
    "end": "95820"
  },
  {
    "text": "just that the thing I don't like the one",
    "start": "95820",
    "end": "97799"
  },
  {
    "text": "thing I'd knock against go if I had one",
    "start": "97799",
    "end": "99540"
  },
  {
    "text": "thing that I I could change about go",
    "start": "99540",
    "end": "100979"
  },
  {
    "text": "it's that they need an option type",
    "start": "100979",
    "end": "102720"
  },
  {
    "text": "honestly they need an option type and",
    "start": "102720",
    "end": "105360"
  },
  {
    "text": "then of course the corresponding result",
    "start": "105360",
    "end": "106740"
  },
  {
    "text": "type right that's pretty much all my big",
    "start": "106740",
    "end": "109020"
  },
  {
    "text": "gripes against go is option type and I",
    "start": "109020",
    "end": "111659"
  },
  {
    "text": "want uh syntax to handle errors right",
    "start": "111659",
    "end": "113759"
  },
  {
    "text": "like I want the very simple case of try",
    "start": "113759",
    "end": "117119"
  },
  {
    "text": "function and that's that pattern",
    "start": "117119",
    "end": "119100"
  },
  {
    "text": "matching I don't even think that is that",
    "start": "119100",
    "end": "120600"
  },
  {
    "text": "is that amazing honestly I think pattern",
    "start": "120600",
    "end": "122460"
  },
  {
    "text": "matching is really really good if you",
    "start": "122460",
    "end": "124020"
  },
  {
    "text": "have the right utilities for it I don't",
    "start": "124020",
    "end": "125820"
  },
  {
    "text": "think it'd be amazing and go honestly I",
    "start": "125820",
    "end": "127799"
  },
  {
    "text": "just don't think it'd be amazing and go",
    "start": "127799",
    "end": "129060"
  },
  {
    "text": "I don't think you'd get something out of",
    "start": "129060",
    "end": "131280"
  },
  {
    "text": "it it would make it go dramatically",
    "start": "131280",
    "end": "133140"
  },
  {
    "text": "better because it's not really for go I",
    "start": "133140",
    "end": "135360"
  },
  {
    "text": "think pattern matching works much much",
    "start": "135360",
    "end": "136560"
  },
  {
    "text": "better in Rust than it wouldn't go uh",
    "start": "136560",
    "end": "138720"
  },
  {
    "text": "for rust on the other hand I'm like 50",
    "start": "138720",
    "end": "140580"
  },
  {
    "text": "50 on the borrow Checker there's a lot",
    "start": "140580",
    "end": "142379"
  },
  {
    "text": "of great things with the borrow Checker",
    "start": "142379",
    "end": "143879"
  },
  {
    "text": "but there's also a huge amount of pain",
    "start": "143879",
    "end": "145319"
  },
  {
    "text": "in the asses with the borrow Checker and",
    "start": "145319",
    "end": "147180"
  },
  {
    "text": "so I'm like 50 50 on it uh there's like",
    "start": "147180",
    "end": "149580"
  },
  {
    "text": "obviously there's like little tricks and",
    "start": "149580",
    "end": "150959"
  },
  {
    "text": "rules you have to learn about go like",
    "start": "150959",
    "end": "152400"
  },
  {
    "text": "interfaces are always pointers uh you",
    "start": "152400",
    "end": "155280"
  },
  {
    "text": "know",
    "start": "155280",
    "end": "155959"
  },
  {
    "text": "you get the idea it's not a big deal",
    "start": "155959",
    "end": "158400"
  },
  {
    "text": "they're all pretty simple to kind of get",
    "start": "158400",
    "end": "160140"
  },
  {
    "text": "over just like any language has its set",
    "start": "160140",
    "end": "161940"
  },
  {
    "text": "of rules you just have to learn so",
    "start": "161940",
    "end": "163140"
  },
  {
    "text": "anyone that complains about those kind",
    "start": "163140",
    "end": "164340"
  },
  {
    "text": "of things they're just being weak right",
    "start": "164340",
    "end": "166200"
  },
  {
    "text": "they're just being stupid and weak",
    "start": "166200",
    "end": "167640"
  },
  {
    "text": "borrow Checker just copy it exactly I",
    "start": "167640",
    "end": "169980"
  },
  {
    "text": "find that if you're doing this you'll",
    "start": "169980",
    "end": "171180"
  },
  {
    "text": "you'll see just a lot of clones uh",
    "start": "171180",
    "end": "173819"
  },
  {
    "text": "because of that now here I'm gonna give",
    "start": "173819",
    "end": "175019"
  },
  {
    "text": "you a downside rust type system I think",
    "start": "175019",
    "end": "177360"
  },
  {
    "text": "is inferior to O camel so with o camel",
    "start": "177360",
    "end": "180840"
  },
  {
    "text": "and their new lifetimes that they're",
    "start": "180840",
    "end": "182700"
  },
  {
    "text": "that they're uh that they're putting in",
    "start": "182700",
    "end": "184379"
  },
  {
    "text": "oh camel doesn't tie lifetimes",
    "start": "184379",
    "end": "188819"
  },
  {
    "text": "two types",
    "start": "188819",
    "end": "190440"
  },
  {
    "text": "and I think that this is the way",
    "start": "190440",
    "end": "194159"
  },
  {
    "text": "whereas rust a lifetime is a part of the",
    "start": "194159",
    "end": "197400"
  },
  {
    "text": "type and that is completely broken and",
    "start": "197400",
    "end": "200700"
  },
  {
    "text": "why I mean that's completely broken is",
    "start": "200700",
    "end": "202140"
  },
  {
    "text": "that anytime you go and do something you",
    "start": "202140",
    "end": "204659"
  },
  {
    "text": "you know you built this program it's",
    "start": "204659",
    "end": "206519"
  },
  {
    "text": "getting big you're enjoying the program",
    "start": "206519",
    "end": "208200"
  },
  {
    "text": "you've made some good stuff but now you",
    "start": "208200",
    "end": "210420"
  },
  {
    "text": "have a part that's a bit performance",
    "start": "210420",
    "end": "211920"
  },
  {
    "text": "sensitive and you're like wow you know",
    "start": "211920",
    "end": "213180"
  },
  {
    "text": "we if we increase this we dramatically",
    "start": "213180",
    "end": "214980"
  },
  {
    "text": "improve our overall program's",
    "start": "214980",
    "end": "216840"
  },
  {
    "text": "performance this will be great so you",
    "start": "216840",
    "end": "218700"
  },
  {
    "text": "just toss on a little tick a what",
    "start": "218700",
    "end": "221280"
  },
  {
    "text": "happens",
    "start": "221280",
    "end": "222299"
  },
  {
    "text": "oh boy everything Eerie thing's just",
    "start": "222299",
    "end": "226319"
  },
  {
    "text": "about to get a ticket from function",
    "start": "226319",
    "end": "228120"
  },
  {
    "text": "calls to other definitions to call like",
    "start": "228120",
    "end": "232080"
  },
  {
    "text": "it just your whole program gets",
    "start": "232080",
    "end": "234180"
  },
  {
    "text": "destroyed by a ticket and so how do I",
    "start": "234180",
    "end": "236700"
  },
  {
    "text": "feel about rust I think it's okay I",
    "start": "236700",
    "end": "238980"
  },
  {
    "text": "think there's really great things for",
    "start": "238980",
    "end": "240299"
  },
  {
    "text": "rust and I still will write all my basic",
    "start": "240299",
    "end": "242040"
  },
  {
    "text": "command line utilities I also think LSPs",
    "start": "242040",
    "end": "244620"
  },
  {
    "text": "are fantastic to write and rust I really",
    "start": "244620",
    "end": "246540"
  },
  {
    "text": "think it's the right abstraction for a",
    "start": "246540",
    "end": "248340"
  },
  {
    "text": "lot of things but it's not a peer",
    "start": "248340",
    "end": "250200"
  },
  {
    "text": "abstraction always so there you go",
    "start": "250200",
    "end": "251819"
  },
  {
    "text": "that's why I would write Go versus rust",
    "start": "251819",
    "end": "253739"
  },
  {
    "text": "like I think a server is just simpler",
    "start": "253739",
    "end": "255420"
  },
  {
    "text": "and go it will always be simpler and go",
    "start": "255420",
    "end": "257639"
  },
  {
    "text": "you create a database connection you",
    "start": "257639",
    "end": "260220"
  },
  {
    "text": "don't need to like line up your entire",
    "start": "260220",
    "end": "261780"
  },
  {
    "text": "server you don't need to use wet like",
    "start": "261780",
    "end": "263220"
  },
  {
    "text": "app data you don't need to do anything",
    "start": "263220",
    "end": "264360"
  },
  {
    "text": "you can just have a database connection",
    "start": "264360",
    "end": "266160"
  },
  {
    "text": "you could interface that thing out so",
    "start": "266160",
    "end": "268440"
  },
  {
    "text": "you never have to do it if you want to",
    "start": "268440",
    "end": "269759"
  },
  {
    "text": "test you can test with some non some",
    "start": "269759",
    "end": "272880"
  },
  {
    "text": "non-database thing and just have a",
    "start": "272880",
    "end": "274259"
  },
  {
    "text": "simple interface simple mock you build",
    "start": "274259",
    "end": "275699"
  },
  {
    "text": "whatever you want to do like everything",
    "start": "275699",
    "end": "277259"
  },
  {
    "text": "about the language is really designed",
    "start": "277259",
    "end": "279120"
  },
  {
    "text": "and developed very well for just",
    "start": "279120",
    "end": "281460"
  },
  {
    "text": "handling some simple operations along",
    "start": "281460",
    "end": "283440"
  },
  {
    "text": "with defer also the rust Foundation is",
    "start": "283440",
    "end": "285960"
  },
  {
    "text": "just due to garbage am I the I",
    "start": "285960",
    "end": "288120"
  },
  {
    "text": "think I could be the but",
    "start": "288120",
    "end": "289320"
  },
  {
    "text": "generally this is what I want and so",
    "start": "289320",
    "end": "290880"
  },
  {
    "text": "just a quick explanation about one thing",
    "start": "290880",
    "end": "292560"
  },
  {
    "text": "why do I want options I hate nil I think",
    "start": "292560",
    "end": "295560"
  },
  {
    "text": "that Nils should be handled at the",
    "start": "295560",
    "end": "297360"
  },
  {
    "text": "compiler level I think Nils should be",
    "start": "297360",
    "end": "299340"
  },
  {
    "text": "like hey halt there hot hot Satan did",
    "start": "299340",
    "end": "302100"
  },
  {
    "text": "you know this could be possibly nil you",
    "start": "302100",
    "end": "304080"
  },
  {
    "text": "should have to handle it uh which also",
    "start": "304080",
    "end": "306300"
  },
  {
    "text": "means I think Maps should have always",
    "start": "306300",
    "end": "307979"
  },
  {
    "text": "been a zero value of an empty map I do",
    "start": "307979",
    "end": "311220"
  },
  {
    "text": "not see why you would ever want a map",
    "start": "311220",
    "end": "312720"
  },
  {
    "text": "that's not zero valued I think it's",
    "start": "312720",
    "end": "314460"
  },
  {
    "text": "completely I think it's a completeness",
    "start": "314460",
    "end": "316020"
  },
  {
    "text": "in the language it's just a source of",
    "start": "316020",
    "end": "318300"
  },
  {
    "text": "easy bugs get the hell out of there and",
    "start": "318300",
    "end": "321120"
  },
  {
    "text": "syntax to handle errors I think that",
    "start": "321120",
    "end": "322500"
  },
  {
    "text": "one's obvious right now you have not",
    "start": "322500",
    "end": "323639"
  },
  {
    "text": "equals uh or not equals nil I think we",
    "start": "323639",
    "end": "326280"
  },
  {
    "text": "could get rid of that right unless if",
    "start": "326280",
    "end": "328320"
  },
  {
    "text": "you want specific handling just like",
    "start": "328320",
    "end": "329880"
  },
  {
    "text": "rust Russ has the question mark but also",
    "start": "329880",
    "end": "332039"
  },
  {
    "text": "you have the whole match Foo and then",
    "start": "332039",
    "end": "333960"
  },
  {
    "text": "you have the Earth thing right like you",
    "start": "333960",
    "end": "335580"
  },
  {
    "text": "do have you you do have to manage stuff",
    "start": "335580",
    "end": "337740"
  },
  {
    "text": "it's fine uh have you seen the iterator",
    "start": "337740",
    "end": "340139"
  },
  {
    "text": "proposal for go no I haven't but that",
    "start": "340139",
    "end": "341699"
  },
  {
    "text": "sounds exciting uh rust lifetimes color",
    "start": "341699",
    "end": "343800"
  },
  {
    "text": "your types like async functions color",
    "start": "343800",
    "end": "345539"
  },
  {
    "text": "your functions this is a really good way",
    "start": "345539",
    "end": "347039"
  },
  {
    "text": "to put it this is an incredibly good way",
    "start": "347039",
    "end": "349440"
  },
  {
    "text": "to put it I love I love how you're",
    "start": "349440",
    "end": "351060"
  },
  {
    "text": "saying this which is now rust has a",
    "start": "351060",
    "end": "353280"
  },
  {
    "text": "problem because not only does it have",
    "start": "353280",
    "end": "354419"
  },
  {
    "text": "colored functions it has colored types I",
    "start": "354419",
    "end": "356699"
  },
  {
    "text": "think that that is really really clever",
    "start": "356699",
    "end": "358199"
  },
  {
    "text": "way of saying it uh I love that yes and",
    "start": "358199",
    "end": "361080"
  },
  {
    "text": "all safety is its biggest is is truly",
    "start": "361080",
    "end": "363240"
  },
  {
    "text": "its biggest mistake because it's garbage",
    "start": "363240",
    "end": "365039"
  },
  {
    "text": "collected I would have much rather seen",
    "start": "365039",
    "end": "367199"
  },
  {
    "text": "something like uh like because you know",
    "start": "367199",
    "end": "369360"
  },
  {
    "text": "pointer receivers they work right",
    "start": "369360",
    "end": "371220"
  },
  {
    "text": "um the you already know the pointers",
    "start": "371220",
    "end": "372960"
  },
  {
    "text": "there but receiving a pointer to",
    "start": "372960",
    "end": "375300"
  },
  {
    "text": "something receiving an interface to",
    "start": "375300",
    "end": "376800"
  },
  {
    "text": "something shouldn't contain the risk of",
    "start": "376800",
    "end": "378479"
  },
  {
    "text": "it being null it should simply uh say I",
    "start": "378479",
    "end": "381120"
  },
  {
    "text": "agree that nil values are probably my",
    "start": "381120",
    "end": "382680"
  },
  {
    "text": "least favorite thing about go but there",
    "start": "382680",
    "end": "384600"
  },
  {
    "text": "is a weird sort of argument for it in",
    "start": "384600",
    "end": "386699"
  },
  {
    "text": "that uh it's very familiar to see",
    "start": "386699",
    "end": "388979"
  },
  {
    "text": "programmers yeah uh and there is perhaps",
    "start": "388979",
    "end": "391199"
  },
  {
    "text": "mistaken assumption that every fresh",
    "start": "391199",
    "end": "392460"
  },
  {
    "text": "developer will know at least see I would",
    "start": "392460",
    "end": "394680"
  },
  {
    "text": "say well I mean that's the thing is that",
    "start": "394680",
    "end": "396180"
  },
  {
    "text": "I would argue the difference which is if",
    "start": "396180",
    "end": "398460"
  },
  {
    "text": "something can be nil you should have",
    "start": "398460",
    "end": "400860"
  },
  {
    "text": "specific compile color checking for it",
    "start": "400860",
    "end": "403380"
  },
  {
    "text": "and you could just never make the",
    "start": "403380",
    "end": "404580"
  },
  {
    "text": "mistake so it's not even about loving",
    "start": "404580",
    "end": "406800"
  },
  {
    "text": "hating or knowing see",
    "start": "406800",
    "end": "409080"
  },
  {
    "text": "it's just that you cannot",
    "start": "409080",
    "end": "411479"
  },
  {
    "text": "oopsie Daisy that one operation just",
    "start": "411479",
    "end": "413340"
  },
  {
    "text": "take it out because it's such a simple",
    "start": "413340",
    "end": "414660"
  },
  {
    "text": "thing to goof up right that's my whole",
    "start": "414660",
    "end": "417419"
  },
  {
    "text": "thing about it and I and and I'm hoping",
    "start": "417419",
    "end": "419819"
  },
  {
    "text": "generics as they make generics better",
    "start": "419819",
    "end": "421800"
  },
  {
    "text": "and better I'm hoping that it makes it",
    "start": "421800",
    "end": "423360"
  },
  {
    "text": "into the language right and that you",
    "start": "423360",
    "end": "424860"
  },
  {
    "text": "could actually have a option level",
    "start": "424860",
    "end": "426840"
  },
  {
    "text": "interface something that just enforces",
    "start": "426840",
    "end": "429120"
  },
  {
    "text": "some checks and I'd be very happy and",
    "start": "429120",
    "end": "431100"
  },
  {
    "text": "here's the deal options with garbage",
    "start": "431100",
    "end": "433319"
  },
  {
    "text": "collection can we all agree with that",
    "start": "433319",
    "end": "435240"
  },
  {
    "text": "super simple handling super simple",
    "start": "435240",
    "end": "438620"
  },
  {
    "text": "handling right uh nil turns every type",
    "start": "438620",
    "end": "442020"
  },
  {
    "text": "into a hidden some type oh interesting",
    "start": "442020",
    "end": "443699"
  },
  {
    "text": "yeah you can say that",
    "start": "443699",
    "end": "445979"
  },
  {
    "text": "uh I think it's just uh with pointers",
    "start": "445979",
    "end": "447960"
  },
  {
    "text": "it's just a pointer dog it's just a zero",
    "start": "447960",
    "end": "450240"
  },
  {
    "text": "why is it simple because it's beautiful",
    "start": "450240",
    "end": "452400"
  },
  {
    "text": "I thought you hated garbage collection I",
    "start": "452400",
    "end": "453960"
  },
  {
    "text": "do and don't hate garbage collection I",
    "start": "453960",
    "end": "455880"
  },
  {
    "text": "hate languages that make tons of garbage",
    "start": "455880",
    "end": "458699"
  },
  {
    "text": "right so that's why I like that's why I",
    "start": "458699",
    "end": "460380"
  },
  {
    "text": "get so frustrated with JavaScript",
    "start": "460380",
    "end": "461460"
  },
  {
    "text": "JavaScript makes a ton of garbage all",
    "start": "461460",
    "end": "463860"
  },
  {
    "text": "the time I know let's see but your",
    "start": "463860",
    "end": "465840"
  },
  {
    "text": "utterly subjective data point uh with a",
    "start": "465840",
    "end": "468000"
  },
  {
    "text": "sample size of one is not only invalid",
    "start": "468000",
    "end": "469620"
  },
  {
    "text": "but it also is completely impossible to",
    "start": "469620",
    "end": "471060"
  },
  {
    "text": "quantify yes but the ghost syntax is",
    "start": "471060",
    "end": "473580"
  },
  {
    "text": "absolute garbage it's really not ghost",
    "start": "473580",
    "end": "475740"
  },
  {
    "text": "syntax is not garbage",
    "start": "475740",
    "end": "477539"
  },
  {
    "text": "ghost syntax is clearly not garbage",
    "start": "477539",
    "end": "480000"
  },
  {
    "text": "there's nothing garbage about it it is",
    "start": "480000",
    "end": "481919"
  },
  {
    "text": "one of the simplest easy to understand",
    "start": "481919",
    "end": "483720"
  },
  {
    "text": "syntaxes of all time in fact it may",
    "start": "483720",
    "end": "486780"
  },
  {
    "text": "actually be better than JavaScript",
    "start": "486780",
    "end": "488520"
  },
  {
    "text": "syntax at this point because of how",
    "start": "488520",
    "end": "490860"
  },
  {
    "text": "simple it is anybody can learn it right",
    "start": "490860",
    "end": "493860"
  },
  {
    "text": "it is like that simple ghost syntax is",
    "start": "493860",
    "end": "496560"
  },
  {
    "text": "great the thing is you should measure",
    "start": "496560",
    "end": "498720"
  },
  {
    "text": "syntax on a semantic meaning",
    "start": "498720",
    "end": "502080"
  },
  {
    "text": "per symbol right it's it's it's very",
    "start": "502080",
    "end": "504240"
  },
  {
    "text": "small whereas rust is it's very high",
    "start": "504240",
    "end": "506039"
  },
  {
    "text": "right there's a lot more things you have",
    "start": "506039",
    "end": "507960"
  },
  {
    "text": "to process you know what I mean there's",
    "start": "507960",
    "end": "509580"
  },
  {
    "text": "a lot more things going on just some",
    "start": "509580",
    "end": "511500"
  },
  {
    "text": "thoughts on mine okay there you go",
    "start": "511500",
    "end": "512640"
  },
  {
    "text": "that's why I think I would use go over",
    "start": "512640",
    "end": "515159"
  },
  {
    "text": "rust if I was starting a project uh it's",
    "start": "515159",
    "end": "518279"
  },
  {
    "text": "very very simple I think it just for the",
    "start": "518279",
    "end": "520140"
  },
  {
    "text": "most part it does what I need now now",
    "start": "520140",
    "end": "521640"
  },
  {
    "text": "recently I did just build the htmx LSP",
    "start": "521640",
    "end": "523800"
  },
  {
    "text": "which is almost feature complete at this",
    "start": "523800",
    "end": "525600"
  },
  {
    "text": "point and there's like a small bug and",
    "start": "525600",
    "end": "527700"
  },
  {
    "text": "then it's literally featured complete",
    "start": "527700",
    "end": "529260"
  },
  {
    "text": "and we got to get it into Mason and all",
    "start": "529260",
    "end": "530700"
  },
  {
    "text": "these other places to do that but with",
    "start": "530700",
    "end": "533040"
  },
  {
    "text": "that said the LSP written in Rust was",
    "start": "533040",
    "end": "535380"
  },
  {
    "text": "the right choice it just simply was the",
    "start": "535380",
    "end": "537240"
  },
  {
    "text": "right choice all the tools are there",
    "start": "537240",
    "end": "538620"
  },
  {
    "text": "there's good string handling and tree",
    "start": "538620",
    "end": "540360"
  },
  {
    "text": "sitter is natively bound and easy to use",
    "start": "540360",
    "end": "542519"
  },
  {
    "text": "in Rust it was just the right choice for",
    "start": "542519",
    "end": "544620"
  },
  {
    "text": "the time I think that that was truly the",
    "start": "544620",
    "end": "546720"
  },
  {
    "text": "way to do it is that rust was the better",
    "start": "546720",
    "end": "548820"
  },
  {
    "text": "choice so if I'm going to build an LSP",
    "start": "548820",
    "end": "550620"
  },
  {
    "text": "I'll choose the right tool if I'm going",
    "start": "550620",
    "end": "552540"
  },
  {
    "text": "to build a web server I'm going to",
    "start": "552540",
    "end": "553920"
  },
  {
    "text": "choose probably the right tool which is",
    "start": "553920",
    "end": "555360"
  },
  {
    "text": "likely go over rust now there's some",
    "start": "555360",
    "end": "557820"
  },
  {
    "text": "arguments why you could use rust overgo",
    "start": "557820",
    "end": "559680"
  },
  {
    "text": "for certain web services I'm on your",
    "start": "559680",
    "end": "561779"
  },
  {
    "text": "team but I'm going to say this that most",
    "start": "561779",
    "end": "564620"
  },
  {
    "text": "semi-experienced rust developers will",
    "start": "564620",
    "end": "567060"
  },
  {
    "text": "write a server that performs worse than",
    "start": "567060",
    "end": "568980"
  },
  {
    "text": "a go server written by a newbie because",
    "start": "568980",
    "end": "570959"
  },
  {
    "text": "I think it's extremely hard to write",
    "start": "570959",
    "end": "574100"
  },
  {
    "text": "very well performing rust right it takes",
    "start": "574100",
    "end": "579540"
  },
  {
    "text": "a very few people can write really good",
    "start": "579540",
    "end": "582180"
  },
  {
    "text": "rust so it's just something to think",
    "start": "582180",
    "end": "583860"
  },
  {
    "text": "about and so that's kind of how I think",
    "start": "583860",
    "end": "585839"
  },
  {
    "text": "about it is that is 99 good enough for",
    "start": "585839",
    "end": "588540"
  },
  {
    "text": "net for most Services yes if you have a",
    "start": "588540",
    "end": "590760"
  },
  {
    "text": "very intense data handling service an",
    "start": "590760",
    "end": "592860"
  },
  {
    "text": "adapter to a database whatever yeah",
    "start": "592860",
    "end": "594839"
  },
  {
    "text": "maybe you should rust it and you need to",
    "start": "594839",
    "end": "596339"
  },
  {
    "text": "get really really good you need to hire",
    "start": "596339",
    "end": "597779"
  },
  {
    "text": "that one guy that slightly levitates",
    "start": "597779",
    "end": "599519"
  },
  {
    "text": "while he walks yeah you could even like",
    "start": "599519",
    "end": "601200"
  },
  {
    "text": "pre-screen your candidates hey what",
    "start": "601200",
    "end": "603180"
  },
  {
    "text": "color is your hair ah non-traditional",
    "start": "603180",
    "end": "605100"
  },
  {
    "text": "well come on in there rust expert you've",
    "start": "605100",
    "end": "607320"
  },
  {
    "text": "been sufficiently scarred by rust that",
    "start": "607320",
    "end": "608880"
  },
  {
    "text": "you dye your hair colors come on in",
    "start": "608880",
    "end": "610560"
  },
  {
    "text": "that's what I think happens I think",
    "start": "610560",
    "end": "612000"
  },
  {
    "text": "that's why they dye their hair colors is",
    "start": "612000",
    "end": "613440"
  },
  {
    "text": "that once you've done enough rust it's",
    "start": "613440",
    "end": "615600"
  },
  {
    "text": "so emotionally damaging that you",
    "start": "615600",
    "end": "617640"
  },
  {
    "text": "actually start dyeing your hair",
    "start": "617640",
    "end": "618660"
  },
  {
    "text": "different colors that's how I think it",
    "start": "618660",
    "end": "620519"
  },
  {
    "text": "happens I don't have a one I'm not one",
    "start": "620519",
    "end": "622200"
  },
  {
    "text": "100 yes but I think I think there's",
    "start": "622200",
    "end": "624420"
  },
  {
    "text": "something there yeah your ass going to",
    "start": "624420",
    "end": "626040"
  },
  {
    "text": "be canceled again good because this is",
    "start": "626040",
    "end": "627720"
  },
  {
    "text": "now a YouTube video the name is the",
    "start": "627720",
    "end": "630779"
  },
  {
    "text": "private gym",
    "start": "630779",
    "end": "633260"
  }
]