[
  {
    "text": "hey mixing react and htmx let's do this",
    "start": "0",
    "end": "3600"
  },
  {
    "text": "this is actually from a little bit ago",
    "start": "3600",
    "end": "5400"
  },
  {
    "text": "almost a year ago so this will be",
    "start": "5400",
    "end": "6720"
  },
  {
    "text": "interesting to see this was before",
    "start": "6720",
    "end": "7919"
  },
  {
    "text": "server components happened I'd love to",
    "start": "7919",
    "end": "10559"
  },
  {
    "text": "hear the uh like a like an update to",
    "start": "10559",
    "end": "12420"
  },
  {
    "text": "this but this is very exciting a recent",
    "start": "12420",
    "end": "14040"
  },
  {
    "text": "project required a complex HTML user",
    "start": "14040",
    "end": "16080"
  },
  {
    "text": "interface with multiple interdependent",
    "start": "16080",
    "end": "17699"
  },
  {
    "text": "elements with the goal of using hmax I",
    "start": "17699",
    "end": "20279"
  },
  {
    "text": "implemented the initial prototype using",
    "start": "20279",
    "end": "21960"
  },
  {
    "text": "custom elements but a grew and",
    "start": "21960",
    "end": "23580"
  },
  {
    "text": "complexity quite fast in the end I found",
    "start": "23580",
    "end": "25740"
  },
  {
    "text": "this to be an occasion in which react",
    "start": "25740",
    "end": "27599"
  },
  {
    "text": "provides a clean and elegant way to",
    "start": "27599",
    "end": "29400"
  },
  {
    "text": "structure code and data flow not content",
    "start": "29400",
    "end": "32160"
  },
  {
    "text": "with not content with giving up on Ace",
    "start": "32160",
    "end": "34320"
  },
  {
    "text": "Max for the rest of the application I",
    "start": "34320",
    "end": "35760"
  },
  {
    "text": "set out to combine both libraries in",
    "start": "35760",
    "end": "37920"
  },
  {
    "text": "this blog post I'd like to walk you",
    "start": "37920",
    "end": "39420"
  },
  {
    "text": "through the resulting setup so there you",
    "start": "39420",
    "end": "41219"
  },
  {
    "text": "go are you ready we're going to be",
    "start": "41219",
    "end": "42960"
  },
  {
    "text": "mixing a little of every World here okay",
    "start": "42960",
    "end": "46219"
  },
  {
    "text": "every world will be included in this",
    "start": "46219",
    "end": "48660"
  },
  {
    "text": "world libraries will continue to be",
    "start": "48660",
    "end": "51120"
  },
  {
    "text": "combined until morale and proofs all",
    "start": "51120",
    "end": "53579"
  },
  {
    "text": "right the basic idea is to use a custom",
    "start": "53579",
    "end": "56039"
  },
  {
    "text": "element that wraps the react root in the",
    "start": "56039",
    "end": "58620"
  },
  {
    "text": "spirit of hypermedia driven applications",
    "start": "58620",
    "end": "60420"
  },
  {
    "text": "the goal is to let the regular Dom",
    "start": "60420",
    "end": "62520"
  },
  {
    "text": "always reflect the application State and",
    "start": "62520",
    "end": "64559"
  },
  {
    "text": "to let react render the shadow Dom of",
    "start": "64559",
    "end": "67020"
  },
  {
    "text": "the current uh of the custom element",
    "start": "67020",
    "end": "68580"
  },
  {
    "text": "using a mutation Observer the element",
    "start": "68580",
    "end": "70979"
  },
  {
    "text": "updates the shadow Dom as the regular",
    "start": "70979",
    "end": "72900"
  },
  {
    "text": "Dom changes either driven by htmx or",
    "start": "72900",
    "end": "75900"
  },
  {
    "text": "react",
    "start": "75900",
    "end": "77960"
  },
  {
    "text": "it's funny that we're just talking about",
    "start": "77960",
    "end": "80220"
  },
  {
    "text": "Simplicity versus complexity this feels",
    "start": "80220",
    "end": "84180"
  },
  {
    "text": "like we've just hit",
    "start": "84180",
    "end": "87060"
  },
  {
    "text": "something that feels complex anyways the",
    "start": "87060",
    "end": "89220"
  },
  {
    "text": "running example for this post will be a",
    "start": "89220",
    "end": "91080"
  },
  {
    "text": "simple react component that displays a",
    "start": "91080",
    "end": "92700"
  },
  {
    "text": "message react root react element type my",
    "start": "92700",
    "end": "95100"
  },
  {
    "text": "app props equals this all right",
    "start": "95100",
    "end": "97140"
  },
  {
    "text": "here the react root element is our",
    "start": "97140",
    "end": "99000"
  },
  {
    "text": "wrapper and the react element specifies",
    "start": "99000",
    "end": "100680"
  },
  {
    "text": "the type and props of the root component",
    "start": "100680",
    "end": "103380"
  },
  {
    "text": "oh man you got like a",
    "start": "103380",
    "end": "106880"
  },
  {
    "text": "hmm that looks just encouragingly",
    "start": "107000",
    "end": "109860"
  },
  {
    "text": "difficult there's no such thing as",
    "start": "109860",
    "end": "111780"
  },
  {
    "text": "simple react component I know this",
    "start": "111780",
    "end": "113520"
  },
  {
    "text": "simple react component comes with 250",
    "start": "113520",
    "end": "116100"
  },
  {
    "text": "000 characters",
    "start": "116100",
    "end": "117540"
  },
  {
    "text": "um it is the equivalent of jsx and my",
    "start": "117540",
    "end": "119759"
  },
  {
    "text": "app hello yes this would be the",
    "start": "119759",
    "end": "121020"
  },
  {
    "text": "equivalent to Define it react root",
    "start": "121020",
    "end": "123119"
  },
  {
    "text": "element we start with an autonomous",
    "start": "123119",
    "end": "125040"
  },
  {
    "text": "custom element that extends the HTML",
    "start": "125040",
    "end": "127020"
  },
  {
    "text": "element and then fills out the details",
    "start": "127020",
    "end": "129239"
  },
  {
    "text": "step by step yep okay there we go",
    "start": "129239",
    "end": "131160"
  },
  {
    "text": "nothing nothing feels better than an",
    "start": "131160",
    "end": "133560"
  },
  {
    "text": "anonymous class I feel like you've hit",
    "start": "133560",
    "end": "136040"
  },
  {
    "text": "Peak JavaScript when you're throwing",
    "start": "136040",
    "end": "139260"
  },
  {
    "text": "down Anonymous classes by the way this",
    "start": "139260",
    "end": "141060"
  },
  {
    "text": "is just how you do custom elements",
    "start": "141060",
    "end": "142560"
  },
  {
    "text": "they're just creating a web component",
    "start": "142560",
    "end": "143819"
  },
  {
    "text": "here that the web component uses react I",
    "start": "143819",
    "end": "146340"
  },
  {
    "text": "mean",
    "start": "146340",
    "end": "147239"
  },
  {
    "text": "we got it we all got to be pretty proud",
    "start": "147239",
    "end": "149040"
  },
  {
    "text": "of this moment okay the Constructor",
    "start": "149040",
    "end": "150480"
  },
  {
    "text": "attaches the shadow Dom and sets up the",
    "start": "150480",
    "end": "152340"
  },
  {
    "text": "Observer uh Observer for any changes to",
    "start": "152340",
    "end": "154440"
  },
  {
    "text": "the children or their attributes there",
    "start": "154440",
    "end": "156239"
  },
  {
    "text": "you go we have a Constructor Road equals",
    "start": "156239",
    "end": "158160"
  },
  {
    "text": "null attached Shadow mode open mutation",
    "start": "158160",
    "end": "160140"
  },
  {
    "text": "Observer I'm not even sure what a",
    "start": "160140",
    "end": "161760"
  },
  {
    "text": "mutation Observer is at this point other",
    "start": "161760",
    "end": "163560"
  },
  {
    "text": "than something that sounds like some",
    "start": "163560",
    "end": "164940"
  },
  {
    "text": "sort of rxjs does this have rxjs as well",
    "start": "164940",
    "end": "168180"
  },
  {
    "text": "or is this like knockout what is this",
    "start": "168180",
    "end": "170280"
  },
  {
    "text": "what is going on here how is this the",
    "start": "170280",
    "end": "173099"
  },
  {
    "text": "third Library we've spotted so far in",
    "start": "173099",
    "end": "174780"
  },
  {
    "text": "this project",
    "start": "174780",
    "end": "176000"
  },
  {
    "text": "uh every time the children are updated",
    "start": "176000",
    "end": "178440"
  },
  {
    "text": "the render method is called which",
    "start": "178440",
    "end": "180060"
  },
  {
    "text": "updates the react route by re-rendering",
    "start": "180060",
    "end": "181860"
  },
  {
    "text": "it with the current type and current",
    "start": "181860",
    "end": "183300"
  },
  {
    "text": "props",
    "start": "183300",
    "end": "184739"
  },
  {
    "text": "uh is this driven by a use effect hook",
    "start": "184739",
    "end": "187440"
  },
  {
    "text": "I'm not even sure knockout I don't know",
    "start": "187440",
    "end": "190019"
  },
  {
    "text": "that's vanilla JS classic it really is",
    "start": "190019",
    "end": "192120"
  },
  {
    "text": "it actually vanilla JS mutation Observer",
    "start": "192120",
    "end": "196019"
  },
  {
    "text": "JavaScript is that oh I think I spelled",
    "start": "196019",
    "end": "198659"
  },
  {
    "text": "it with an N I need to keep up with",
    "start": "198659",
    "end": "200220"
  },
  {
    "text": "stuff I didn't even know there was a",
    "start": "200220",
    "end": "201420"
  },
  {
    "text": "mutation Observer just just hanging out",
    "start": "201420",
    "end": "203099"
  },
  {
    "text": "there well I'm dumb look at that",
    "start": "203099",
    "end": "205700"
  },
  {
    "text": "oh I see what they're doing oh that's",
    "start": "205700",
    "end": "209760"
  },
  {
    "text": "cool",
    "start": "209760",
    "end": "211140"
  },
  {
    "text": "so they're using a mutation Observer to",
    "start": "211140",
    "end": "213480"
  },
  {
    "text": "observe when htmx changes the Dom is my",
    "start": "213480",
    "end": "217140"
  },
  {
    "text": "assumptions here and then react and then",
    "start": "217140",
    "end": "219300"
  },
  {
    "text": "send in stuff to make react respond to",
    "start": "219300",
    "end": "221760"
  },
  {
    "text": "it is that am I am I catching that",
    "start": "221760",
    "end": "223500"
  },
  {
    "text": "correct they are super modern",
    "start": "223500",
    "end": "225780"
  },
  {
    "text": "can we say postmodern uh all right",
    "start": "225780",
    "end": "229140"
  },
  {
    "text": "root render this dot root dot render",
    "start": "229140",
    "end": "231299"
  },
  {
    "text": "create element all of this stuff right",
    "start": "231299",
    "end": "233220"
  },
  {
    "text": "here oh nothing like taking in an object",
    "start": "233220",
    "end": "236519"
  },
  {
    "text": "and creating a copy of it inside of here",
    "start": "236519",
    "end": "239519"
  },
  {
    "text": "oh",
    "start": "239519",
    "end": "241440"
  },
  {
    "text": "love it",
    "start": "241440",
    "end": "242580"
  },
  {
    "text": "um all right",
    "start": "242580",
    "end": "243599"
  },
  {
    "text": "note how the root element injects itself",
    "start": "243599",
    "end": "246000"
  },
  {
    "text": "as the root prop this way the element",
    "start": "246000",
    "end": "248040"
  },
  {
    "text": "can be accessed from within react for",
    "start": "248040",
    "end": "249840"
  },
  {
    "text": "example to send events to the rest of",
    "start": "249840",
    "end": "251280"
  },
  {
    "text": "the page or to update props the current",
    "start": "251280",
    "end": "253019"
  },
  {
    "text": "type and the current props are",
    "start": "253019",
    "end": "254340"
  },
  {
    "text": "reflections of the corresponding",
    "start": "254340",
    "end": "255540"
  },
  {
    "text": "properties of the first react element",
    "start": "255540",
    "end": "257160"
  },
  {
    "text": "contained within our custom element this",
    "start": "257160",
    "end": "259019"
  },
  {
    "text": "can be accomplished with the Getters",
    "start": "259019",
    "end": "260579"
  },
  {
    "text": "okay beautiful beautiful do a little",
    "start": "260579",
    "end": "263580"
  },
  {
    "text": "query selecting do a little Json parse",
    "start": "263580",
    "end": "265620"
  },
  {
    "text": "element attribute props love it love it",
    "start": "265620",
    "end": "268800"
  },
  {
    "text": "string to object to object copy of",
    "start": "268800",
    "end": "271199"
  },
  {
    "text": "object rendering beautiful similar",
    "start": "271199",
    "end": "274259"
  },
  {
    "text": "similarly the custom element also",
    "start": "274259",
    "end": "276780"
  },
  {
    "text": "implements the corresponding Setters and",
    "start": "276780",
    "end": "278280"
  },
  {
    "text": "those properties can easily be modified",
    "start": "278280",
    "end": "279919"
  },
  {
    "text": "programmatically in addition the custom",
    "start": "279919",
    "end": "282600"
  },
  {
    "text": "element also cleans up the react root",
    "start": "282600",
    "end": "284520"
  },
  {
    "text": "once it's disconnected from the Dom see",
    "start": "284520",
    "end": "286199"
  },
  {
    "text": "the full source for details okay we",
    "start": "286199",
    "end": "287580"
  },
  {
    "text": "won't but very very cool",
    "start": "287580",
    "end": "289800"
  },
  {
    "text": "new event bubbles true dispatch this",
    "start": "289800",
    "end": "293100"
  },
  {
    "text": "event are they just just doing non-jsx",
    "start": "293100",
    "end": "295800"
  },
  {
    "text": "here right am I am I reading this",
    "start": "295800",
    "end": "297600"
  },
  {
    "text": "correctly this is the this is the",
    "start": "297600",
    "end": "299400"
  },
  {
    "text": "imperative version of the declarative",
    "start": "299400",
    "end": "300780"
  },
  {
    "text": "jsx right this is what you compile down",
    "start": "300780",
    "end": "302639"
  },
  {
    "text": "to just a bunch of create elements yeah",
    "start": "302639",
    "end": "304259"
  },
  {
    "text": "yeah and people would do anything but",
    "start": "304259",
    "end": "306180"
  },
  {
    "text": "remove react I know there's a few things",
    "start": "306180",
    "end": "307919"
  },
  {
    "text": "you should never do in the world you",
    "start": "307919",
    "end": "309479"
  },
  {
    "text": "should never ask a woman if she's",
    "start": "309479",
    "end": "311759"
  },
  {
    "text": "pregnant okay you just never make that",
    "start": "311759",
    "end": "313680"
  },
  {
    "text": "mistake when's that baby due right never",
    "start": "313680",
    "end": "316919"
  },
  {
    "text": "do that okay just the worst possible",
    "start": "316919",
    "end": "319080"
  },
  {
    "text": "thing you can do the second less known",
    "start": "319080",
    "end": "321660"
  },
  {
    "text": "worst possible thing you can do is",
    "start": "321660",
    "end": "324120"
  },
  {
    "text": "remove react everybody knows this uh the",
    "start": "324120",
    "end": "327300"
  },
  {
    "text": "display let's see",
    "start": "327300",
    "end": "329360"
  },
  {
    "text": "uh the div displays the message that is",
    "start": "329360",
    "end": "332280"
  },
  {
    "text": "set in the props the button triggers the",
    "start": "332280",
    "end": "334020"
  },
  {
    "text": "custom event now we can instantiate the",
    "start": "334020",
    "end": "336000"
  },
  {
    "text": "app and HTML and connect it with htmax",
    "start": "336000",
    "end": "337800"
  },
  {
    "text": "okay this actually kind of this this is",
    "start": "337800",
    "end": "339360"
  },
  {
    "text": "very interesting look at this oh what",
    "start": "339360",
    "end": "342479"
  },
  {
    "text": "you have your server producing",
    "start": "342479",
    "end": "344820"
  },
  {
    "text": "man this is",
    "start": "344820",
    "end": "346680"
  },
  {
    "text": "this literally react server components",
    "start": "346680",
    "end": "349620"
  },
  {
    "text": "before they were invented is that what",
    "start": "349620",
    "end": "351419"
  },
  {
    "text": "we're looking at right now react root ID",
    "start": "351419",
    "end": "353940"
  },
  {
    "text": "root ACX update trigger uh my react",
    "start": "353940",
    "end": "356940"
  },
  {
    "text": "event oh",
    "start": "356940",
    "end": "358440"
  },
  {
    "text": "that's that's pretty clever",
    "start": "358440",
    "end": "360960"
  },
  {
    "text": "foreign oh I never even thought about",
    "start": "360960",
    "end": "363419"
  },
  {
    "text": "doing that I never thought about",
    "start": "363419",
    "end": "366060"
  },
  {
    "text": "containing an element and the places",
    "start": "366060",
    "end": "368699"
  },
  {
    "text": "where I do custom JavaScript such as uh",
    "start": "368699",
    "end": "370800"
  },
  {
    "text": "this thing with with uh this little fun",
    "start": "370800",
    "end": "373199"
  },
  {
    "text": "thing I'm working on I never once",
    "start": "373199",
    "end": "374880"
  },
  {
    "text": "thought about the idea that I could",
    "start": "374880",
    "end": "376080"
  },
  {
    "text": "actually emit custom events from here",
    "start": "376080",
    "end": "377759"
  },
  {
    "text": "and have htmx react to the custom events",
    "start": "377759",
    "end": "381240"
  },
  {
    "text": "ah what this is actually a really clever",
    "start": "381240",
    "end": "383400"
  },
  {
    "text": "idea I think this is awesome yeah no",
    "start": "383400",
    "end": "385199"
  },
  {
    "text": "there's a lot of really good takeaways",
    "start": "385199",
    "end": "386759"
  },
  {
    "text": "here I love making fun of react don't",
    "start": "386759",
    "end": "388979"
  },
  {
    "text": "get me wrong I'll make fun of it but",
    "start": "388979",
    "end": "390780"
  },
  {
    "text": "there's a lot of really good ideas here",
    "start": "390780",
    "end": "392340"
  },
  {
    "text": "right there's a lot of really good ideas",
    "start": "392340",
    "end": "393780"
  },
  {
    "text": "and you shouldn't shouldn't sleep on",
    "start": "393780",
    "end": "395699"
  },
  {
    "text": "that all right",
    "start": "395699",
    "end": "396900"
  },
  {
    "text": "button update Target root okay update so",
    "start": "396900",
    "end": "401400"
  },
  {
    "text": "you have a button on the outside that",
    "start": "401400",
    "end": "403740"
  },
  {
    "text": "will replace the stuff here and then you",
    "start": "403740",
    "end": "405720"
  },
  {
    "text": "also have something within here that",
    "start": "405720",
    "end": "407940"
  },
  {
    "text": "will cause it to replace itself via the",
    "start": "407940",
    "end": "410699"
  },
  {
    "text": "custom event very cool this is very very",
    "start": "410699",
    "end": "413699"
  },
  {
    "text": "cool this is super actually this is",
    "start": "413699",
    "end": "415979"
  },
  {
    "text": "actually super cool the updates via hmx",
    "start": "415979",
    "end": "417720"
  },
  {
    "text": "can either be triggered from the outside",
    "start": "417720",
    "end": "418800"
  },
  {
    "text": "or react via the update button which we",
    "start": "418800",
    "end": "420720"
  },
  {
    "text": "just saw or from inside react via the",
    "start": "420720",
    "end": "422699"
  },
  {
    "text": "custom my react event in both cases hmx",
    "start": "422699",
    "end": "425460"
  },
  {
    "text": "will replace the react element inside",
    "start": "425460",
    "end": "427020"
  },
  {
    "text": "the react root with the server response",
    "start": "427020",
    "end": "429000"
  },
  {
    "text": "this uh the react root element then",
    "start": "429000",
    "end": "430740"
  },
  {
    "text": "notices the change and triggers a",
    "start": "430740",
    "end": "432960"
  },
  {
    "text": "re-render importantly that's that's what",
    "start": "432960",
    "end": "435180"
  },
  {
    "text": "so that's what the mutation observers",
    "start": "435180",
    "end": "436680"
  },
  {
    "text": "for importantly react applies here it's",
    "start": "436680",
    "end": "439259"
  },
  {
    "text": "a diffing logic and updates the Dom only",
    "start": "439259",
    "end": "441539"
  },
  {
    "text": "for modified parts of the tree for",
    "start": "441539",
    "end": "443759"
  },
  {
    "text": "example the button in the component will",
    "start": "443759",
    "end": "445560"
  },
  {
    "text": "never be updated",
    "start": "445560",
    "end": "447060"
  },
  {
    "text": "okay another option uh is to set props",
    "start": "447060",
    "end": "450360"
  },
  {
    "text": "on the react root element itself from",
    "start": "450360",
    "end": "452220"
  },
  {
    "text": "JavaScript again this will change the",
    "start": "452220",
    "end": "453900"
  },
  {
    "text": "attributes on react element and then",
    "start": "453900",
    "end": "455639"
  },
  {
    "text": "trigger a re-render my app component for",
    "start": "455639",
    "end": "457800"
  },
  {
    "text": "the setup reads okay my app on click do",
    "start": "457800",
    "end": "460500"
  },
  {
    "text": "this thing set the props right here and",
    "start": "460500",
    "end": "462419"
  },
  {
    "text": "then it does all this and oh it's funny",
    "start": "462419",
    "end": "464160"
  },
  {
    "text": "that I didn't use the little ease here",
    "start": "464160",
    "end": "466139"
  },
  {
    "text": "right and this must be from the mutation",
    "start": "466139",
    "end": "468180"
  },
  {
    "text": "Observer right",
    "start": "468180",
    "end": "469560"
  },
  {
    "text": "run this render function",
    "start": "469560",
    "end": "471960"
  },
  {
    "text": "and observe it on this element and its",
    "start": "471960",
    "end": "475259"
  },
  {
    "text": "subtree its children list its attributes",
    "start": "475259",
    "end": "477120"
  },
  {
    "text": "uh and and filter on props and type",
    "start": "477120",
    "end": "480300"
  },
  {
    "text": "very cool I did not know about mutation",
    "start": "480300",
    "end": "482340"
  },
  {
    "text": "Observer what a super cool thing what a",
    "start": "482340",
    "end": "485400"
  },
  {
    "text": "super cool thing I did not know about",
    "start": "485400",
    "end": "486840"
  },
  {
    "text": "that you can find the complete demo here",
    "start": "486840",
    "end": "488699"
  },
  {
    "text": "it showcases the different update",
    "start": "488699",
    "end": "489960"
  },
  {
    "text": "modalities and also in a multiple",
    "start": "489960",
    "end": "492120"
  },
  {
    "text": "independent react Roots use a show",
    "start": "492120",
    "end": "494880"
  },
  {
    "text": "source to look at the implementation as",
    "start": "494880",
    "end": "497280"
  },
  {
    "text": "always feel free to reach out to me on",
    "start": "497280",
    "end": "498720"
  },
  {
    "text": "Twitter Hey thank you cprom hey you know",
    "start": "498720",
    "end": "501360"
  },
  {
    "text": "what I'm gonna go over here I'm going to",
    "start": "501360",
    "end": "502860"
  },
  {
    "text": "follow this person right here I'm gonna",
    "start": "502860",
    "end": "504180"
  },
  {
    "text": "give this guy a little follow what a",
    "start": "504180",
    "end": "506340"
  },
  {
    "text": "cool little thing that he built that is",
    "start": "506340",
    "end": "509160"
  },
  {
    "text": "super cool",
    "start": "509160",
    "end": "510660"
  },
  {
    "text": "there's a lot of really good ideas in",
    "start": "510660",
    "end": "512459"
  },
  {
    "text": "here I'm not the reacts part but I mean",
    "start": "512459",
    "end": "515640"
  },
  {
    "text": "everything else is really really cool",
    "start": "515640",
    "end": "516899"
  },
  {
    "text": "it's actually a really good way to kind",
    "start": "516899",
    "end": "518339"
  },
  {
    "text": "of look at because",
    "start": "518339",
    "end": "521159"
  },
  {
    "text": "there's something because at some point",
    "start": "521159",
    "end": "522899"
  },
  {
    "text": "with hdmax if you're building something",
    "start": "522899",
    "end": "524520"
  },
  {
    "text": "that that just requires client-side",
    "start": "524520",
    "end": "527100"
  },
  {
    "text": "interactivity that makes no sense to be",
    "start": "527100",
    "end": "528779"
  },
  {
    "text": "server driven again Conway's Game of",
    "start": "528779",
    "end": "530339"
  },
  {
    "text": "Life why would you ever have the server",
    "start": "530339",
    "end": "532320"
  },
  {
    "text": "render each click right this is not a",
    "start": "532320",
    "end": "534600"
  },
  {
    "text": "live produced video game okay we're not",
    "start": "534600",
    "end": "536220"
  },
  {
    "text": "doing rtmp there is no point in having",
    "start": "536220",
    "end": "538680"
  },
  {
    "text": "this thing being rendered out right and",
    "start": "538680",
    "end": "541019"
  },
  {
    "text": "so",
    "start": "541019",
    "end": "541800"
  },
  {
    "text": "this makes perfect sense",
    "start": "541800",
    "end": "544740"
  },
  {
    "text": "to be purely client-side and so I can",
    "start": "544740",
    "end": "547140"
  },
  {
    "text": "really see a cool use case using",
    "start": "547140",
    "end": "548940"
  },
  {
    "text": "something a little bit more clever here",
    "start": "548940",
    "end": "550320"
  },
  {
    "text": "with start and enter and all that",
    "start": "550320",
    "end": "552720"
  },
  {
    "text": "there's a lot of cool tricks right here",
    "start": "552720",
    "end": "554459"
  },
  {
    "text": "I really like that yeah what a good",
    "start": "554459",
    "end": "556260"
  },
  {
    "text": "coding trick lets uh our ad or 100 or a",
    "start": "556260",
    "end": "559200"
  },
  {
    "text": "thousandth react trick well this one's",
    "start": "559200",
    "end": "561000"
  },
  {
    "text": "not a react trick it's just a way for me",
    "start": "561000",
    "end": "563100"
  },
  {
    "text": "to look at and try to understand better",
    "start": "563100",
    "end": "565860"
  },
  {
    "text": "how to create more Rich games or more",
    "start": "565860",
    "end": "568800"
  },
  {
    "text": "Rich applications with htmx without the",
    "start": "568800",
    "end": "572040"
  },
  {
    "text": "need for react right the first time you",
    "start": "572040",
    "end": "575339"
  },
  {
    "text": "have a chance at the top is the second",
    "start": "575339",
    "end": "577200"
  },
  {
    "text": "uh one you get a free pass I'm not sure",
    "start": "577200",
    "end": "579000"
  },
  {
    "text": "what that means but I like that just",
    "start": "579000",
    "end": "580500"
  },
  {
    "text": "trigger the state to saving when needed",
    "start": "580500",
    "end": "582180"
  },
  {
    "text": "exactly",
    "start": "582180",
    "end": "583320"
  },
  {
    "text": "but it's cool uh feels like you should",
    "start": "583320",
    "end": "585180"
  },
  {
    "text": "just use web components using lit or",
    "start": "585180",
    "end": "586800"
  },
  {
    "text": "something yeah I have never looked into",
    "start": "586800",
    "end": "587940"
  },
  {
    "text": "lit it's something I really do want to",
    "start": "587940",
    "end": "589980"
  },
  {
    "text": "look into because I feel like that's",
    "start": "589980",
    "end": "591060"
  },
  {
    "text": "like a really useful",
    "start": "591060",
    "end": "593160"
  },
  {
    "text": "item",
    "start": "593160",
    "end": "594540"
  },
  {
    "text": "um I want to play with but I need",
    "start": "594540",
    "end": "595920"
  },
  {
    "text": "something that works well with go uh so",
    "start": "595920",
    "end": "598560"
  },
  {
    "text": "I'm gonna play",
    "start": "598560",
    "end": "600240"
  },
  {
    "text": "I'm gonna play with it you know what I",
    "start": "600240",
    "end": "602100"
  },
  {
    "text": "mean I'm gonna play I'm gonna play we're",
    "start": "602100",
    "end": "603660"
  },
  {
    "text": "gonna find it out lit is lit okay",
    "start": "603660",
    "end": "606480"
  },
  {
    "text": "anyways the name",
    "start": "606480",
    "end": "609620"
  },
  {
    "text": "is the primogen",
    "start": "611040",
    "end": "613940"
  }
]