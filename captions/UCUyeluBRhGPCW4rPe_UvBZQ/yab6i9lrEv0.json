[
  {
    "start": "0",
    "end": "50000"
  },
  {
    "text": "all right migrating Netflix to graphql",
    "start": "0",
    "end": "3740"
  },
  {
    "text": "safely please the algorithm loves it",
    "start": "3740",
    "end": "6899"
  },
  {
    "text": "just make a comment I need you to in",
    "start": "6899",
    "end": "9540"
  },
  {
    "text": "2022 a major change was made at",
    "start": "9540",
    "end": "11700"
  },
  {
    "text": "Netflix's IOS and Android applications",
    "start": "11700",
    "end": "13860"
  },
  {
    "text": "we migrated Netflix's mobile apps to",
    "start": "13860",
    "end": "16020"
  },
  {
    "text": "graphql with zero downtime which",
    "start": "16020",
    "end": "17940"
  },
  {
    "text": "involved a total overhaul of the clients",
    "start": "17940",
    "end": "20039"
  },
  {
    "text": "to the API layer I wrote Falcor for iOS",
    "start": "20039",
    "end": "25880"
  },
  {
    "text": "my code finally got deprecated six years",
    "start": "25880",
    "end": "30000"
  },
  {
    "text": "after I wrote it",
    "start": "30000",
    "end": "33059"
  },
  {
    "text": "oh",
    "start": "33059",
    "end": "35160"
  },
  {
    "text": "until recently an internal API framework",
    "start": "35160",
    "end": "37860"
  },
  {
    "text": "fell Gore let's go falgar",
    "start": "37860",
    "end": "41460"
  },
  {
    "text": "look at that look at that look at that",
    "start": "41460",
    "end": "43020"
  },
  {
    "text": "falcore look at all them Falcons I wrote",
    "start": "43020",
    "end": "45120"
  },
  {
    "text": "that look at that fair car",
    "start": "45120",
    "end": "47280"
  },
  {
    "text": "look at that look at that Falcons right",
    "start": "47280",
    "end": "49320"
  },
  {
    "text": "there uh let's see powered our mobile",
    "start": "49320",
    "end": "51899"
  },
  {
    "start": "50000",
    "end": "90000"
  },
  {
    "text": "apps they are now backed by Federated",
    "start": "51899",
    "end": "53760"
  },
  {
    "text": "graphql a distributed approach to apis",
    "start": "53760",
    "end": "56579"
  },
  {
    "text": "where domain teams can independently",
    "start": "56579",
    "end": "58800"
  },
  {
    "text": "manage and own specific sections of the",
    "start": "58800",
    "end": "62039"
  },
  {
    "text": "API doing this safely for hundreds of",
    "start": "62039",
    "end": "65158"
  },
  {
    "text": "millions of customers without disruption",
    "start": "65159",
    "end": "67740"
  },
  {
    "text": "is exceptionally challenging especially",
    "start": "67740",
    "end": "69840"
  },
  {
    "text": "considering the many dimensions of",
    "start": "69840",
    "end": "71400"
  },
  {
    "text": "changed involved this blog post will",
    "start": "71400",
    "end": "73619"
  },
  {
    "text": "share broadly applicable techniques",
    "start": "73619",
    "end": "75240"
  },
  {
    "text": "Beyond graphql we used to perform this",
    "start": "75240",
    "end": "78299"
  },
  {
    "text": "migration the three stages we'll discuss",
    "start": "78299",
    "end": "80520"
  },
  {
    "text": "today are a b testing replay testing and",
    "start": "80520",
    "end": "83100"
  },
  {
    "text": "sticky canaries",
    "start": "83100",
    "end": "85938"
  },
  {
    "text": "dude by the way all great stuff in here",
    "start": "86220",
    "end": "88439"
  },
  {
    "text": "okay",
    "start": "88439",
    "end": "90600"
  },
  {
    "start": "90000",
    "end": "360000"
  },
  {
    "text": "all right migration details before",
    "start": "90600",
    "end": "92159"
  },
  {
    "text": "diving into these techniques let's",
    "start": "92159",
    "end": "93420"
  },
  {
    "text": "briefly examine the migration Plan",
    "start": "93420",
    "end": "94979"
  },
  {
    "text": "before graphql monolithic falcore API",
    "start": "94979",
    "end": "97380"
  },
  {
    "text": "implemented and maintained uh by the API",
    "start": "97380",
    "end": "99900"
  },
  {
    "text": "team yes",
    "start": "99900",
    "end": "101759"
  },
  {
    "text": "Legacy API monolith I like how we use",
    "start": "101759",
    "end": "104159"
  },
  {
    "text": "the term monolith always in negative",
    "start": "104159",
    "end": "106079"
  },
  {
    "text": "terms I mean like even The Witcher",
    "start": "106079",
    "end": "107579"
  },
  {
    "text": "they're all upset about these monoliths",
    "start": "107579",
    "end": "109140"
  },
  {
    "text": "what the hell is going on okay by the",
    "start": "109140",
    "end": "111299"
  },
  {
    "text": "way I'm only on a couple episodes in so",
    "start": "111299",
    "end": "113040"
  },
  {
    "text": "no spoiler alerts I still have no idea",
    "start": "113040",
    "end": "115380"
  },
  {
    "text": "what's going on I feel like Charlie Day",
    "start": "115380",
    "end": "117119"
  },
  {
    "text": "and Always Sunny in Philadelphia with",
    "start": "117119",
    "end": "119700"
  },
  {
    "text": "all the red",
    "start": "119700",
    "end": "121200"
  },
  {
    "text": "things trying to figure out what the",
    "start": "121200",
    "end": "123240"
  },
  {
    "text": "hell is happening in Witcher I have no",
    "start": "123240",
    "end": "124680"
  },
  {
    "text": "clue what's happening",
    "start": "124680",
    "end": "126119"
  },
  {
    "text": "um okay so I basically get this I don't",
    "start": "126119",
    "end": "127799"
  },
  {
    "text": "really understand this graph in here but",
    "start": "127799",
    "end": "130080"
  },
  {
    "text": "okay",
    "start": "130080",
    "end": "131520"
  },
  {
    "text": "uh see before moving to graphql our API",
    "start": "131520",
    "end": "134160"
  },
  {
    "text": "layer consisted of a monolithic server",
    "start": "134160",
    "end": "136080"
  },
  {
    "text": "built with Falcor a single API team",
    "start": "136080",
    "end": "138180"
  },
  {
    "text": "maintained both the Java implementation",
    "start": "138180",
    "end": "139920"
  },
  {
    "text": "of falcore framework and the API server",
    "start": "139920",
    "end": "141959"
  },
  {
    "text": "yeah yeah yeah I mean I wrote a lot of",
    "start": "141959",
    "end": "144239"
  },
  {
    "text": "the initial Java stuff",
    "start": "144239",
    "end": "146099"
  },
  {
    "text": "um created a graphql shim service on top",
    "start": "146099",
    "end": "148620"
  },
  {
    "text": "of our existing monolith and by the",
    "start": "148620",
    "end": "151200"
  },
  {
    "text": "summer of 2020 many UI Engineers were",
    "start": "151200",
    "end": "153180"
  },
  {
    "text": "ready to move to graphql uh graph wheel",
    "start": "153180",
    "end": "155700"
  },
  {
    "text": "instead of embarking on a full-fledged",
    "start": "155700",
    "end": "157980"
  },
  {
    "text": "migration top to bottom we created a",
    "start": "157980",
    "end": "160379"
  },
  {
    "text": "graphql shim on top of our existing",
    "start": "160379",
    "end": "162599"
  },
  {
    "text": "falcore uh appy the graphql shim enabled",
    "start": "162599",
    "end": "166019"
  },
  {
    "text": "client Engineers to move quickly onto",
    "start": "166019",
    "end": "168120"
  },
  {
    "text": "graphql figure uh figure out client-side",
    "start": "168120",
    "end": "170640"
  },
  {
    "text": "concerns like cache normalization",
    "start": "170640",
    "end": "172200"
  },
  {
    "text": "experiment with different graphql",
    "start": "172200",
    "end": "173760"
  },
  {
    "text": "clients and investigate client",
    "start": "173760",
    "end": "175620"
  },
  {
    "text": "performance without being blocked by",
    "start": "175620",
    "end": "177060"
  },
  {
    "text": "server migrations to launch phase is one",
    "start": "177060",
    "end": "179879"
  },
  {
    "text": "safely we used a b testing",
    "start": "179879",
    "end": "182879"
  },
  {
    "text": "who here is familiar with a B testing I",
    "start": "182879",
    "end": "184800"
  },
  {
    "text": "assume everybody is that's like a hot",
    "start": "184800",
    "end": "186120"
  },
  {
    "text": "button word from like 2009 is everybody",
    "start": "186120",
    "end": "188700"
  },
  {
    "text": "familiar at this point I mean is there",
    "start": "188700",
    "end": "190860"
  },
  {
    "text": "anyone here that's like what the hell is",
    "start": "190860",
    "end": "192120"
  },
  {
    "text": "a b testing",
    "start": "192120",
    "end": "194220"
  },
  {
    "text": "why is steals card in the description",
    "start": "194220",
    "end": "196379"
  },
  {
    "text": "what the hell are we talking about",
    "start": "196379",
    "end": "199560"
  },
  {
    "text": "what the hell are you talking about uh",
    "start": "199560",
    "end": "201959"
  },
  {
    "text": "all right",
    "start": "201959",
    "end": "203879"
  },
  {
    "text": "uh okay",
    "start": "203879",
    "end": "205379"
  },
  {
    "text": "what about uh C testing you know you",
    "start": "205379",
    "end": "208019"
  },
  {
    "text": "know okay deprecate the graphql graph",
    "start": "208019",
    "end": "211019"
  },
  {
    "text": "wheel shim service and Legacy uh appy",
    "start": "211019",
    "end": "213480"
  },
  {
    "text": "monolith in favor of graphql services",
    "start": "213480",
    "end": "216120"
  },
  {
    "text": "owned by domain teams",
    "start": "216120",
    "end": "218220"
  },
  {
    "text": "okay",
    "start": "218220",
    "end": "220500"
  },
  {
    "text": "look at that we're slowly getting them",
    "start": "220500",
    "end": "222599"
  },
  {
    "text": "out we didn't want Legacy falcore API to",
    "start": "222599",
    "end": "225000"
  },
  {
    "text": "linger forever so we leaned into",
    "start": "225000",
    "end": "226739"
  },
  {
    "text": "Federated graph wheel to power a single",
    "start": "226739",
    "end": "229319"
  },
  {
    "text": "graph wheel uh API with multiple graphql",
    "start": "229319",
    "end": "232080"
  },
  {
    "text": "servers we could also swap out",
    "start": "232080",
    "end": "233819"
  },
  {
    "text": "implementations of a field from graphql",
    "start": "233819",
    "end": "236220"
  },
  {
    "text": "shim to video API with Federated",
    "start": "236220",
    "end": "238080"
  },
  {
    "text": "directives to launch Phase 2 safely we",
    "start": "238080",
    "end": "240540"
  },
  {
    "text": "used replay testing and sticky canaries",
    "start": "240540",
    "end": "242459"
  },
  {
    "text": "testing strategies a summary two key",
    "start": "242459",
    "end": "244200"
  },
  {
    "text": "factors determined our strategies",
    "start": "244200",
    "end": "245580"
  },
  {
    "text": "functional versus non-functional",
    "start": "245580",
    "end": "246720"
  },
  {
    "text": "requirement I did I item potency",
    "start": "246720",
    "end": "250739"
  },
  {
    "text": "or I dependency I dependency I can't",
    "start": "250739",
    "end": "253680"
  },
  {
    "text": "tell are you Canadian or not that's",
    "start": "253680",
    "end": "255060"
  },
  {
    "text": "really the test here is how you say this",
    "start": "255060",
    "end": "256620"
  },
  {
    "text": "is your Canadian level okay so if you're",
    "start": "256620",
    "end": "259019"
  },
  {
    "text": "really Canadian it's I I dependency",
    "start": "259019",
    "end": "261900"
  },
  {
    "text": "right",
    "start": "261900",
    "end": "263520"
  },
  {
    "text": "but then if you're not it's item potent",
    "start": "263520",
    "end": "265199"
  },
  {
    "text": "but I don't know how to say it with this",
    "start": "265199",
    "end": "268080"
  },
  {
    "text": "you know what I mean",
    "start": "268080",
    "end": "270240"
  },
  {
    "text": "so uh so what this effectively means is",
    "start": "270240",
    "end": "274380"
  },
  {
    "text": "that",
    "start": "274380",
    "end": "276000"
  },
  {
    "text": "if you call a you get B back and if you",
    "start": "276000",
    "end": "279900"
  },
  {
    "text": "call a again you get B back and if you",
    "start": "279900",
    "end": "282720"
  },
  {
    "text": "call a again you get B back",
    "start": "282720",
    "end": "285479"
  },
  {
    "text": "right",
    "start": "285479",
    "end": "287160"
  },
  {
    "text": "item ponies I and Them Ponies uh that's",
    "start": "287160",
    "end": "291360"
  },
  {
    "text": "all it means is if you pass in something",
    "start": "291360",
    "end": "293820"
  },
  {
    "text": "you should get the same thing out just",
    "start": "293820",
    "end": "295680"
  },
  {
    "text": "think about like a map right a map if",
    "start": "295680",
    "end": "297540"
  },
  {
    "text": "you if you store x with some key and you",
    "start": "297540",
    "end": "300479"
  },
  {
    "text": "pass in some key you always get x x out",
    "start": "300479",
    "end": "302960"
  },
  {
    "text": "at some point",
    "start": "302960",
    "end": "304919"
  },
  {
    "text": "like until until you change the key you",
    "start": "304919",
    "end": "307620"
  },
  {
    "text": "will always get x out right uh so that's",
    "start": "307620",
    "end": "310740"
  },
  {
    "text": "what that means item potent right it's",
    "start": "310740",
    "end": "312720"
  },
  {
    "text": "just a big ass fancy word",
    "start": "312720",
    "end": "314699"
  },
  {
    "text": "um okay let's see we could replay the",
    "start": "314699",
    "end": "316560"
  },
  {
    "text": "graph wheel queries or mutations that",
    "start": "316560",
    "end": "318660"
  },
  {
    "text": "requested non-ident Fields true this is",
    "start": "318660",
    "end": "321240"
  },
  {
    "text": "fact right so so what they're saying is",
    "start": "321240",
    "end": "323160"
  },
  {
    "text": "that you can't actually test this if",
    "start": "323160",
    "end": "325080"
  },
  {
    "text": "what you pass in requires big changes so",
    "start": "325080",
    "end": "327300"
  },
  {
    "text": "if I ask for say just a video ID I",
    "start": "327300",
    "end": "329880"
  },
  {
    "text": "should always get the same thing out",
    "start": "329880",
    "end": "332280"
  },
  {
    "text": "maybe right I mean you should but you",
    "start": "332280",
    "end": "335220"
  },
  {
    "text": "know things happen underneath the hood",
    "start": "335220",
    "end": "336840"
  },
  {
    "text": "and and stuff changes underneath your",
    "start": "336840",
    "end": "338520"
  },
  {
    "text": "you know underneath the hoodwear when",
    "start": "338520",
    "end": "339900"
  },
  {
    "text": "you're doing these tests it can actually",
    "start": "339900",
    "end": "341400"
  },
  {
    "text": "like come back to bite you it's a little",
    "start": "341400",
    "end": "343440"
  },
  {
    "text": "tricky it's a little tricksy so replay",
    "start": "343440",
    "end": "345300"
  },
  {
    "text": "testing I think you get a lot of like",
    "start": "345300",
    "end": "346740"
  },
  {
    "text": "you can get you can kind of sneak away",
    "start": "346740",
    "end": "348060"
  },
  {
    "text": "with this we definitely couldn't replay",
    "start": "348060",
    "end": "349380"
  },
  {
    "text": "a test non-functional requirements like",
    "start": "349380",
    "end": "351720"
  },
  {
    "text": "caching and logging user interactions in",
    "start": "351720",
    "end": "353580"
  },
  {
    "text": "such cases we were not testing for",
    "start": "353580",
    "end": "355320"
  },
  {
    "text": "response data but overall Behavior so we",
    "start": "355320",
    "end": "357600"
  },
  {
    "text": "relied on higher level metrics uh based",
    "start": "357600",
    "end": "360240"
  },
  {
    "start": "360000",
    "end": "610000"
  },
  {
    "text": "testing a b testing and sticky canaries",
    "start": "360240",
    "end": "362220"
  },
  {
    "text": "so a b testing would be your best",
    "start": "362220",
    "end": "363840"
  },
  {
    "text": "possible way to really tell if things",
    "start": "363840",
    "end": "365160"
  },
  {
    "text": "are going good right so even if you use",
    "start": "365160",
    "end": "366900"
  },
  {
    "text": "core metrics",
    "start": "366900",
    "end": "368340"
  },
  {
    "text": "what happens is if you just use like",
    "start": "368340",
    "end": "370259"
  },
  {
    "text": "just basic core metrics and you're both",
    "start": "370259",
    "end": "372120"
  },
  {
    "text": "and you're going",
    "start": "372120",
    "end": "373620"
  },
  {
    "text": "if streaming starts to dip in one and",
    "start": "373620",
    "end": "376979"
  },
  {
    "text": "not the other you probably effed up",
    "start": "376979",
    "end": "378900"
  },
  {
    "text": "right long as you have a sufficient",
    "start": "378900",
    "end": "381000"
  },
  {
    "text": "sample size yeah f'd up right and so",
    "start": "381000",
    "end": "383280"
  },
  {
    "text": "that's why they do this and sticky",
    "start": "383280",
    "end": "384360"
  },
  {
    "text": "canaries just mean uh a canary that",
    "start": "384360",
    "end": "386520"
  },
  {
    "text": "sticks around for a long it's a feature",
    "start": "386520",
    "end": "387780"
  },
  {
    "text": "Branch it's just a long ass feature",
    "start": "387780",
    "end": "389400"
  },
  {
    "text": "Branch right tool a b testing Netflix",
    "start": "389400",
    "end": "390720"
  },
  {
    "text": "traditionally uses a B test to evaluate",
    "start": "390720",
    "end": "392400"
  },
  {
    "text": "whether a new product features resonate",
    "start": "392400",
    "end": "393840"
  },
  {
    "text": "with customers this is not this is not",
    "start": "393840",
    "end": "395520"
  },
  {
    "text": "actually true this is not a good uh",
    "start": "395520",
    "end": "396720"
  },
  {
    "text": "statement sorry Netflix blog uh in 2016",
    "start": "396720",
    "end": "399300"
  },
  {
    "text": "I was using a b testing to test all",
    "start": "399300",
    "end": "402300"
  },
  {
    "text": "sorts of stuff 2017 I was using a B test",
    "start": "402300",
    "end": "404400"
  },
  {
    "text": "to test we use a b testing I bet you",
    "start": "404400",
    "end": "407160"
  },
  {
    "text": "more a b tests are used to test whether",
    "start": "407160",
    "end": "410220"
  },
  {
    "text": "or not",
    "start": "410220",
    "end": "412020"
  },
  {
    "text": "uh what you're releasing Works versus",
    "start": "412020",
    "end": "415500"
  },
  {
    "text": "not right we do it all the time I do it",
    "start": "415500",
    "end": "418259"
  },
  {
    "text": "all the time",
    "start": "418259",
    "end": "420479"
  },
  {
    "text": "phase one we leveraged the a b testing",
    "start": "420479",
    "end": "422340"
  },
  {
    "text": "framework to isolate user segment into",
    "start": "422340",
    "end": "423840"
  },
  {
    "text": "two groups totaling one million users",
    "start": "423840",
    "end": "425340"
  },
  {
    "text": "the control group's traffic utilizes the",
    "start": "425340",
    "end": "427259"
  },
  {
    "text": "Legacy Falcor stack while the",
    "start": "427259",
    "end": "428819"
  },
  {
    "text": "experimental or experiment population",
    "start": "428819",
    "end": "430560"
  },
  {
    "text": "leveraged the new graph coil client and",
    "start": "430560",
    "end": "432960"
  },
  {
    "text": "was directed to the graphql shim",
    "start": "432960",
    "end": "435479"
  },
  {
    "text": "uh to determine customer impact we could",
    "start": "435479",
    "end": "438180"
  },
  {
    "text": "compare various metrics such as air",
    "start": "438180",
    "end": "439620"
  },
  {
    "text": "rates latencies and time to render great",
    "start": "439620",
    "end": "441660"
  },
  {
    "text": "so now we can get uh what is called",
    "start": "441660",
    "end": "443340"
  },
  {
    "text": "appqe qoe quality of experience metrics",
    "start": "443340",
    "end": "446280"
  },
  {
    "text": "out we can see and we can kind of debate",
    "start": "446280",
    "end": "448620"
  },
  {
    "text": "between the two which one's faster which",
    "start": "448620",
    "end": "450300"
  },
  {
    "text": "one's worse is there anything because",
    "start": "450300",
    "end": "451860"
  },
  {
    "text": "making users wait having higher error",
    "start": "451860",
    "end": "454800"
  },
  {
    "text": "rates will cause a lowering in uh like",
    "start": "454800",
    "end": "458759"
  },
  {
    "text": "they you know qualified plays or stuff",
    "start": "458759",
    "end": "461580"
  },
  {
    "text": "like that we set up an A B Let's see we",
    "start": "461580",
    "end": "463380"
  },
  {
    "text": "set up client-side a b experiment that",
    "start": "463380",
    "end": "465120"
  },
  {
    "text": "tests falcore versus graphql and",
    "start": "465120",
    "end": "466860"
  },
  {
    "text": "reported coarse grain quality of",
    "start": "466860",
    "end": "468660"
  },
  {
    "text": "experienced metrics see quality of",
    "start": "468660",
    "end": "470099"
  },
  {
    "text": "experience and the ab experiment results",
    "start": "470099",
    "end": "471960"
  },
  {
    "text": "hinted that graphql correctness was not",
    "start": "471960",
    "end": "474419"
  },
  {
    "text": "up to par with the Legacy system we",
    "start": "474419",
    "end": "476639"
  },
  {
    "text": "spent the next few months diving into",
    "start": "476639",
    "end": "478080"
  },
  {
    "text": "these high level metrics and fixing such",
    "start": "478080",
    "end": "479639"
  },
  {
    "text": "issues such as TTL flaws or Cash Time To",
    "start": "479639",
    "end": "482340"
  },
  {
    "text": "Live uh time to live flawed client",
    "start": "482340",
    "end": "484620"
  },
  {
    "text": "assumptions Etc this would have been a",
    "start": "484620",
    "end": "486720"
  },
  {
    "text": "horrible experiment or a horrible",
    "start": "486720",
    "end": "488639"
  },
  {
    "text": "experience right like imagine combing",
    "start": "488639",
    "end": "492960"
  },
  {
    "text": "through that you are experiencing 0.05",
    "start": "492960",
    "end": "496500"
  },
  {
    "text": "percent increased error rates across",
    "start": "496500",
    "end": "499500"
  },
  {
    "text": "millions of people and now you have to",
    "start": "499500",
    "end": "501900"
  },
  {
    "text": "go through and just like comb it out",
    "start": "501900",
    "end": "506060"
  },
  {
    "text": "it's just the worst I hate those kind of",
    "start": "506060",
    "end": "509400"
  },
  {
    "text": "errors that only exist in production due",
    "start": "509400",
    "end": "511259"
  },
  {
    "text": "to the grand scheme of of what's it",
    "start": "511259",
    "end": "513719"
  },
  {
    "text": "called of or the the grand amount of",
    "start": "513719",
    "end": "516180"
  },
  {
    "text": "usage nature it is just the worst I've",
    "start": "516180",
    "end": "518640"
  },
  {
    "text": "had to do it a couple times oh hold on",
    "start": "518640",
    "end": "520860"
  },
  {
    "text": "one second",
    "start": "520860",
    "end": "523020"
  },
  {
    "text": "one of the times that I had to do it",
    "start": "523020",
    "end": "524520"
  },
  {
    "text": "that was just really awful was when we",
    "start": "524520",
    "end": "527100"
  },
  {
    "text": "were doing this thing called Always",
    "start": "527100",
    "end": "528180"
  },
  {
    "text": "fresh where like I'm constantly trying",
    "start": "528180",
    "end": "530279"
  },
  {
    "text": "to keep the UI into like a fresh state",
    "start": "530279",
    "end": "532800"
  },
  {
    "text": "so when you turn on Netflix you are",
    "start": "532800",
    "end": "535260"
  },
  {
    "text": "always up to date you have updated",
    "start": "535260",
    "end": "536760"
  },
  {
    "text": "information everything's really really",
    "start": "536760",
    "end": "538320"
  },
  {
    "text": "good but there was like four different",
    "start": "538320",
    "end": "541200"
  },
  {
    "text": "TVs that just didn't work in production",
    "start": "541200",
    "end": "544380"
  },
  {
    "text": "and I didn't know why so now I'm like",
    "start": "544380",
    "end": "546300"
  },
  {
    "text": "sitting there going okay how do I debug",
    "start": "546300",
    "end": "548760"
  },
  {
    "text": "a production running specific TV I used",
    "start": "548760",
    "end": "553320"
  },
  {
    "text": "a b testing of course uh but it was just",
    "start": "553320",
    "end": "555600"
  },
  {
    "text": "so annoying because now I'm like okay so",
    "start": "555600",
    "end": "557880"
  },
  {
    "text": "I gotta I gotta go in here",
    "start": "557880",
    "end": "560339"
  },
  {
    "text": "and I gotta go and try to figure out why",
    "start": "560339",
    "end": "563339"
  },
  {
    "text": "is this Philips TV not working and of",
    "start": "563339",
    "end": "566760"
  },
  {
    "text": "course the answer was uh the answer was",
    "start": "566760",
    "end": "569760"
  },
  {
    "text": "it was actually pretty straightforward",
    "start": "569760",
    "end": "571320"
  },
  {
    "text": "which is",
    "start": "571320",
    "end": "572940"
  },
  {
    "text": "effectively how I could tell if",
    "start": "572940",
    "end": "575700"
  },
  {
    "text": "something was",
    "start": "575700",
    "end": "577200"
  },
  {
    "text": "on or off",
    "start": "577200",
    "end": "580740"
  },
  {
    "text": "was buy these we have like these",
    "start": "580740",
    "end": "582480"
  },
  {
    "text": "resource metrics like is there",
    "start": "582480",
    "end": "583860"
  },
  {
    "text": "networking uh are we rendering do we",
    "start": "583860",
    "end": "586680"
  },
  {
    "text": "have CP do we have memory like what what",
    "start": "586680",
    "end": "588660"
  },
  {
    "text": "part of the systems are on and off",
    "start": "588660",
    "end": "591600"
  },
  {
    "text": "and",
    "start": "591600",
    "end": "592740"
  },
  {
    "text": "this TV I was working with",
    "start": "592740",
    "end": "595080"
  },
  {
    "text": "either they were all on or all off so",
    "start": "595080",
    "end": "597839"
  },
  {
    "text": "when I do like this like background",
    "start": "597839",
    "end": "599220"
  },
  {
    "text": "refreshing attempt",
    "start": "599220",
    "end": "600660"
  },
  {
    "text": "they were all on so I'm like Oh we must",
    "start": "600660",
    "end": "602580"
  },
  {
    "text": "be in the foreground therefore I will",
    "start": "602580",
    "end": "604560"
  },
  {
    "text": "never refresh and so it's just like uh",
    "start": "604560",
    "end": "609380"
  },
  {
    "start": "610000",
    "end": "940000"
  },
  {
    "text": "sucks huh yeah it sucked anyways uh high",
    "start": "610200",
    "end": "613019"
  },
  {
    "text": "level uh High Level Health metrics a b",
    "start": "613019",
    "end": "614940"
  },
  {
    "text": "testing provides the Assurance we needed",
    "start": "614940",
    "end": "616440"
  },
  {
    "text": "an overall client side graph wheel",
    "start": "616440",
    "end": "618420"
  },
  {
    "text": "implementation this helped us",
    "start": "618420",
    "end": "619740"
  },
  {
    "text": "successfully migrate 100 of the traffic",
    "start": "619740",
    "end": "621420"
  },
  {
    "text": "on the Mobile homepage canvas to graphql",
    "start": "621420",
    "end": "624060"
  },
  {
    "text": "in six months so I think what they mean",
    "start": "624060",
    "end": "626459"
  },
  {
    "text": "by high level metrics of course is that",
    "start": "626459",
    "end": "628260"
  },
  {
    "text": "people are continuing to play stream",
    "start": "628260",
    "end": "630060"
  },
  {
    "text": "starts uh aren't statistically different",
    "start": "630060",
    "end": "633120"
  },
  {
    "text": "between the two groups of millions of",
    "start": "633120",
    "end": "635040"
  },
  {
    "text": "people right and so long as they're not",
    "start": "635040",
    "end": "636720"
  },
  {
    "text": "different then we should be able to say",
    "start": "636720",
    "end": "638580"
  },
  {
    "text": "hey okay so they're able to continue to",
    "start": "638580",
    "end": "641040"
  },
  {
    "text": "use the app identically therefore we're",
    "start": "641040",
    "end": "644220"
  },
  {
    "text": "probably doing the same thing",
    "start": "644220",
    "end": "646920"
  },
  {
    "text": "um",
    "start": "646920",
    "end": "647760"
  },
  {
    "text": "gotchas error diagnosis with an A B test",
    "start": "647760",
    "end": "650100"
  },
  {
    "text": "we could see coarse grain metrics which",
    "start": "650100",
    "end": "651720"
  },
  {
    "text": "uh pointed to potential issues but it",
    "start": "651720",
    "end": "653880"
  },
  {
    "text": "was challenging to diagnose the exact",
    "start": "653880",
    "end": "655560"
  },
  {
    "text": "issue absolutely tool replay testing",
    "start": "655560",
    "end": "657600"
  },
  {
    "text": "validation at scale the next phase in",
    "start": "657600",
    "end": "659640"
  },
  {
    "text": "the migration was to implement uh",
    "start": "659640",
    "end": "661560"
  },
  {
    "text": "re-implement our existing file core API",
    "start": "661560",
    "end": "663360"
  },
  {
    "text": "and graphql first uh server video API",
    "start": "663360",
    "end": "666060"
  },
  {
    "text": "service the file core API had become a",
    "start": "666060",
    "end": "668339"
  },
  {
    "text": "logic heavy monolith with over a decade",
    "start": "668339",
    "end": "670740"
  },
  {
    "text": "of tech debt okay okay",
    "start": "670740",
    "end": "674040"
  },
  {
    "text": "why why you gotta be like that first off",
    "start": "674040",
    "end": "676820"
  },
  {
    "text": "a lot of the stuff that was written was",
    "start": "676820",
    "end": "679200"
  },
  {
    "text": "written in 2016 so that's like not a",
    "start": "679200",
    "end": "681180"
  },
  {
    "text": "that's not a decade okay buddy it's not",
    "start": "681180",
    "end": "684120"
  },
  {
    "text": "a decade second off second off",
    "start": "684120",
    "end": "688019"
  },
  {
    "text": "I don't even think the",
    "start": "688019",
    "end": "690300"
  },
  {
    "text": "I don't even think the iOS application",
    "start": "690300",
    "end": "692519"
  },
  {
    "text": "is a decade old okay you're hurting my",
    "start": "692519",
    "end": "695700"
  },
  {
    "text": "feelings right now you're hurting my",
    "start": "695700",
    "end": "697620"
  },
  {
    "text": "feelings right now okay I wrote I wrote",
    "start": "697620",
    "end": "700680"
  },
  {
    "text": "the iOS Falcor implementation in 2016 or",
    "start": "700680",
    "end": "703980"
  },
  {
    "text": "2017 or 2015. one of the two either way",
    "start": "703980",
    "end": "706320"
  },
  {
    "text": "that's not a decade so come on why are",
    "start": "706320",
    "end": "708720"
  },
  {
    "text": "you doing that why are you doing that to",
    "start": "708720",
    "end": "709800"
  },
  {
    "text": "me uh so we had to ensure their",
    "start": "709800",
    "end": "711839"
  },
  {
    "text": "implementation uh our implemented video",
    "start": "711839",
    "end": "713640"
  },
  {
    "text": "API server was bug free and identical to",
    "start": "713640",
    "end": "715740"
  },
  {
    "text": "the already productionized shim service",
    "start": "715740",
    "end": "717120"
  },
  {
    "text": "we developed a replay testing tool to",
    "start": "717120",
    "end": "719040"
  },
  {
    "text": "verify that item potent apis I love dude",
    "start": "719040",
    "end": "722880"
  },
  {
    "text": "nothing makes you feel smarter than",
    "start": "722880",
    "end": "724920"
  },
  {
    "text": "using big words but nothing makes you",
    "start": "724920",
    "end": "727079"
  },
  {
    "text": "look more dumb than using big words but",
    "start": "727079",
    "end": "729600"
  },
  {
    "text": "highlighting them I swear you can't do",
    "start": "729600",
    "end": "732300"
  },
  {
    "text": "that you can't point out that it's a big",
    "start": "732300",
    "end": "734640"
  },
  {
    "text": "ass word you know what I mean you can't",
    "start": "734640",
    "end": "736440"
  },
  {
    "text": "do that you can't point this out you",
    "start": "736440",
    "end": "738360"
  },
  {
    "text": "can't point that out you got to be like",
    "start": "738360",
    "end": "740100"
  },
  {
    "text": "oh you know you gotta casually use it",
    "start": "740100",
    "end": "741899"
  },
  {
    "text": "you got cash you know you don't want",
    "start": "741899",
    "end": "743459"
  },
  {
    "text": "people to realize you're doing that you",
    "start": "743459",
    "end": "745260"
  },
  {
    "text": "know because I'm up here a very",
    "start": "745260",
    "end": "747180"
  },
  {
    "text": "loquacious individual up here talking to",
    "start": "747180",
    "end": "750180"
  },
  {
    "text": "you guys about the specific the",
    "start": "750180",
    "end": "752279"
  },
  {
    "text": "specificities of these things and you",
    "start": "752279",
    "end": "754079"
  },
  {
    "text": "know you don't see me going like oh look",
    "start": "754079",
    "end": "755940"
  },
  {
    "text": "who is this right you can't do that you",
    "start": "755940",
    "end": "758220"
  },
  {
    "text": "got to get in there you know you know",
    "start": "758220",
    "end": "760260"
  },
  {
    "text": "what I mean uh okay anyways how does it",
    "start": "760260",
    "end": "762420"
  },
  {
    "text": "work replay testing framework leverages",
    "start": "762420",
    "end": "763920"
  },
  {
    "text": "the override",
    "start": "763920",
    "end": "766940"
  },
  {
    "text": "directive available in graphql",
    "start": "768000",
    "end": "769860"
  },
  {
    "text": "Federation by the way overrides dirty uh",
    "start": "769860",
    "end": "772079"
  },
  {
    "text": "this directive I every time I see",
    "start": "772079",
    "end": "773579"
  },
  {
    "text": "override it just makes me Java 1.5",
    "start": "773579",
    "end": "775620"
  },
  {
    "text": "myself I like I I can't even help it I",
    "start": "775620",
    "end": "778019"
  },
  {
    "text": "like shake and I 1.5 right there it's",
    "start": "778019",
    "end": "781680"
  },
  {
    "text": "crazy uh directive available in graphql",
    "start": "781680",
    "end": "784079"
  },
  {
    "text": "Federation this directive tells the",
    "start": "784079",
    "end": "785700"
  },
  {
    "text": "graphql gateway to route the one graphql",
    "start": "785700",
    "end": "788399"
  },
  {
    "text": "server to another take for instance the",
    "start": "788399",
    "end": "790800"
  },
  {
    "text": "following two graphql scheme is defined",
    "start": "790800",
    "end": "793019"
  },
  {
    "text": "by the shim service and the video",
    "start": "793019",
    "end": "794279"
  },
  {
    "text": "Service uh here we go so we got one we",
    "start": "794279",
    "end": "796740"
  },
  {
    "text": "got over oh override this one yeah baby",
    "start": "796740",
    "end": "799200"
  },
  {
    "text": "you know what I mean",
    "start": "799200",
    "end": "801000"
  },
  {
    "text": "I did just say Java 1.5 yeah I know the",
    "start": "801000",
    "end": "804600"
  },
  {
    "text": "graphql shim first defined the uh",
    "start": "804600",
    "end": "806839"
  },
  {
    "text": "certification rating field like the r or",
    "start": "806839",
    "end": "810360"
  },
  {
    "text": "PG and phase one then phase two we stood",
    "start": "810360",
    "end": "812399"
  },
  {
    "text": "up the video service and defined the",
    "start": "812399",
    "end": "813779"
  },
  {
    "text": "same certification rating field marked",
    "start": "813779",
    "end": "815519"
  },
  {
    "text": "with the override directive the presence",
    "start": "815519",
    "end": "817139"
  },
  {
    "text": "of the identical field with the override",
    "start": "817139",
    "end": "818519"
  },
  {
    "text": "directive and form the graphql gateway",
    "start": "818519",
    "end": "820200"
  },
  {
    "text": "to route the resolution of this field to",
    "start": "820200",
    "end": "821940"
  },
  {
    "text": "the new video service rather than the",
    "start": "821940",
    "end": "823560"
  },
  {
    "text": "old gym service",
    "start": "823560",
    "end": "825360"
  },
  {
    "text": "nice the replay testing tool samples uh",
    "start": "825360",
    "end": "828420"
  },
  {
    "text": "raw traffic streams from mantis okay so",
    "start": "828420",
    "end": "830220"
  },
  {
    "text": "if you don't know what mantis is uh just",
    "start": "830220",
    "end": "831899"
  },
  {
    "text": "think of mantis like Kafka easiest way",
    "start": "831899",
    "end": "834300"
  },
  {
    "text": "to think of mantis is just like big ass",
    "start": "834300",
    "end": "835800"
  },
  {
    "text": "Kafka except for you get like this",
    "start": "835800",
    "end": "837839"
  },
  {
    "text": "squeal like we call it mql mequel uh or",
    "start": "837839",
    "end": "841440"
  },
  {
    "text": "uh I can't make it into squeal and queel",
    "start": "841440",
    "end": "844860"
  },
  {
    "text": "right uh",
    "start": "844860",
    "end": "846839"
  },
  {
    "text": "anyways so mql and it's like a sequel",
    "start": "846839",
    "end": "849660"
  },
  {
    "text": "light query language such that you can",
    "start": "849660",
    "end": "852300"
  },
  {
    "text": "select out out of all the events coming",
    "start": "852300",
    "end": "854579"
  },
  {
    "text": "down the pipeline you can actually",
    "start": "854579",
    "end": "855899"
  },
  {
    "text": "select information out right and so by",
    "start": "855899",
    "end": "858899"
  },
  {
    "text": "taking that you can take all this",
    "start": "858899",
    "end": "860700"
  },
  {
    "text": "information coming in and out and you",
    "start": "860700",
    "end": "862320"
  },
  {
    "text": "can build like alerts off of it by",
    "start": "862320",
    "end": "863940"
  },
  {
    "text": "uploading any of those things off to",
    "start": "863940",
    "end": "865560"
  },
  {
    "text": "Atlas Atlas is like a real-time counter",
    "start": "865560",
    "end": "868200"
  },
  {
    "text": "right",
    "start": "868200",
    "end": "869639"
  },
  {
    "text": "mclell",
    "start": "869639",
    "end": "872040"
  },
  {
    "text": "ebquil",
    "start": "872040",
    "end": "874440"
  },
  {
    "text": "M quill",
    "start": "874440",
    "end": "877320"
  },
  {
    "text": "the names mql",
    "start": "877320",
    "end": "879839"
  },
  {
    "text": "if one of y'all",
    "start": "879839",
    "end": "881639"
  },
  {
    "text": "says",
    "start": "881639",
    "end": "883320"
  },
  {
    "text": "silly ass name again",
    "start": "883320",
    "end": "885480"
  },
  {
    "text": "um anyways uh here we go with uh these",
    "start": "885480",
    "end": "887699"
  },
  {
    "text": "sampled events the tool can capture a",
    "start": "887699",
    "end": "889380"
  },
  {
    "text": "live request from production and run an",
    "start": "889380",
    "end": "891000"
  },
  {
    "text": "identical graphql query uh against both",
    "start": "891000",
    "end": "893940"
  },
  {
    "text": "the graph wheel shim and the new AP",
    "start": "893940",
    "end": "895620"
  },
  {
    "text": "video appy Service uh the tool then",
    "start": "895620",
    "end": "898199"
  },
  {
    "text": "compares the results and outputs any",
    "start": "898199",
    "end": "899820"
  },
  {
    "text": "difference differences in response",
    "start": "899820",
    "end": "901380"
  },
  {
    "text": "payload this is beautiful this is great",
    "start": "901380",
    "end": "903060"
  },
  {
    "text": "I think this is a great little thing",
    "start": "903060",
    "end": "904380"
  },
  {
    "text": "right here right",
    "start": "904380",
    "end": "907560"
  },
  {
    "text": "McClellan",
    "start": "907560",
    "end": "909420"
  },
  {
    "text": "I think this is beautiful right this is",
    "start": "909420",
    "end": "911399"
  },
  {
    "text": "beautiful right here I I like these kind",
    "start": "911399",
    "end": "913199"
  },
  {
    "text": "of things I I love this kind of stuff",
    "start": "913199",
    "end": "914579"
  },
  {
    "text": "right here where you can actually like a",
    "start": "914579",
    "end": "917579"
  },
  {
    "text": "lot of times I hear something uh another",
    "start": "917579",
    "end": "919920"
  },
  {
    "text": "version of this which might be",
    "start": "919920",
    "end": "922320"
  },
  {
    "text": "in some sense easier is called Shadow",
    "start": "922320",
    "end": "924300"
  },
  {
    "text": "trafficking right so you can you can",
    "start": "924300",
    "end": "925920"
  },
  {
    "text": "make a request and then underneath the",
    "start": "925920",
    "end": "927300"
  },
  {
    "text": "hood it actually splits into two",
    "start": "927300",
    "end": "928800"
  },
  {
    "text": "requests the two requests go in and then",
    "start": "928800",
    "end": "931320"
  },
  {
    "text": "the two requests come out and then you",
    "start": "931320",
    "end": "932940"
  },
  {
    "text": "compare the results of the two requests",
    "start": "932940",
    "end": "934560"
  },
  {
    "text": "and there you go you got yourself like",
    "start": "934560",
    "end": "937800"
  },
  {
    "text": "is it good is it bad are we actually",
    "start": "937800",
    "end": "939779"
  },
  {
    "text": "doing it so Shadow traffic is kind of",
    "start": "939779",
    "end": "941279"
  },
  {
    "start": "940000",
    "end": "1202000"
  },
  {
    "text": "like another little uh way people do",
    "start": "941279",
    "end": "942660"
  },
  {
    "text": "this kind of stuff",
    "start": "942660",
    "end": "944160"
  },
  {
    "text": "um we do not replay test personal",
    "start": "944160",
    "end": "945779"
  },
  {
    "text": "identifiable information better say that",
    "start": "945779",
    "end": "947880"
  },
  {
    "text": "legally uh it is used only for",
    "start": "947880",
    "end": "949680"
  },
  {
    "text": "non-sensitive product uh features on the",
    "start": "949680",
    "end": "951839"
  },
  {
    "text": "Netflix oeue uh once the test is",
    "start": "951839",
    "end": "954420"
  },
  {
    "text": "completed the engineer can view diffs",
    "start": "954420",
    "end": "955980"
  },
  {
    "text": "displayed as flat and just on node you",
    "start": "955980",
    "end": "958260"
  },
  {
    "text": "can see the control value on the left",
    "start": "958260",
    "end": "959579"
  },
  {
    "text": "hand side commas and parentheses and the",
    "start": "959579",
    "end": "961680"
  },
  {
    "text": "experiment values on the right hand side",
    "start": "961680",
    "end": "964199"
  },
  {
    "text": "nice look at that",
    "start": "964199",
    "end": "967160"
  },
  {
    "text": "not really sure what's going on here but",
    "start": "968760",
    "end": "970620"
  },
  {
    "text": "fantastic we captured uh two diffs above",
    "start": "970620",
    "end": "972899"
  },
  {
    "text": "the first had missing data for the ID",
    "start": "972899",
    "end": "974760"
  },
  {
    "text": "field in the experiment oh okay okay",
    "start": "974760",
    "end": "977820"
  },
  {
    "text": "oh yeah there it is missing it right",
    "start": "977820",
    "end": "979980"
  },
  {
    "text": "there",
    "start": "979980",
    "end": "981480"
  },
  {
    "text": "I don't know what's going on here oh",
    "start": "981480",
    "end": "983459"
  },
  {
    "text": "that must be the encoded difference",
    "start": "983459",
    "end": "984779"
  },
  {
    "text": "right is that like an encoded difference",
    "start": "984779",
    "end": "986100"
  },
  {
    "text": "and the second had an encoding",
    "start": "986100",
    "end": "987779"
  },
  {
    "text": "difference yeah should have just read on",
    "start": "987779",
    "end": "990300"
  },
  {
    "text": "uh we also saw differences in",
    "start": "990300",
    "end": "992279"
  },
  {
    "text": "localization data precisions and",
    "start": "992279",
    "end": "993660"
  },
  {
    "text": "floating point accuracies",
    "start": "993660",
    "end": "996160"
  },
  {
    "text": "[Music]",
    "start": "996160",
    "end": "997740"
  },
  {
    "text": "oh my goodness",
    "start": "997740",
    "end": "999540"
  },
  {
    "text": "that sounds awful that sounds so bad uh",
    "start": "999540",
    "end": "1004519"
  },
  {
    "text": "it gave us confidence in a replicated",
    "start": "1004519",
    "end": "1006259"
  },
  {
    "text": "business logic where subscriber plans",
    "start": "1006259",
    "end": "1007940"
  },
  {
    "text": "and user geographic location determine",
    "start": "1007940",
    "end": "1010160"
  },
  {
    "text": "the customers catalog availability wins",
    "start": "1010160",
    "end": "1013220"
  },
  {
    "text": "confidence and parity between the two",
    "start": "1013220",
    "end": "1014600"
  },
  {
    "text": "graphql implementations enable a tuning",
    "start": "1014600",
    "end": "1017420"
  },
  {
    "text": "config in this case where data was",
    "start": "1017420",
    "end": "1018920"
  },
  {
    "text": "missing due to overeager timeouts tested",
    "start": "1018920",
    "end": "1021560"
  },
  {
    "text": "business logic that required many",
    "start": "1021560",
    "end": "1023600"
  },
  {
    "text": "unknown inputs and where correctness can",
    "start": "1023600",
    "end": "1025520"
  },
  {
    "text": "be hard to eyeball yeah gotchas uh",
    "start": "1025520",
    "end": "1028579"
  },
  {
    "text": "personal identifiable information and",
    "start": "1028579",
    "end": "1030380"
  },
  {
    "text": "non-item potent apis should not be",
    "start": "1030380",
    "end": "1032480"
  },
  {
    "text": "tested using replay tests it would be",
    "start": "1032480",
    "end": "1034459"
  },
  {
    "text": "valuable to have a mechanism to prevent",
    "start": "1034459",
    "end": "1036020"
  },
  {
    "text": "that yeah that's the hard part I mean",
    "start": "1036020",
    "end": "1038418"
  },
  {
    "text": "usually so unfortunately with something",
    "start": "1038419",
    "end": "1040760"
  },
  {
    "text": "like graphql and all that I don't think",
    "start": "1040760",
    "end": "1042918"
  },
  {
    "text": "it uses it doesn't use HTTP in a",
    "start": "1042919",
    "end": "1045620"
  },
  {
    "text": "standard way and so typically how this",
    "start": "1045620",
    "end": "1047540"
  },
  {
    "text": "would work is that an item potent",
    "start": "1047540",
    "end": "1049040"
  },
  {
    "text": "request should be a git request if you",
    "start": "1049040",
    "end": "1051620"
  },
  {
    "text": "go to google.com",
    "start": "1051620",
    "end": "1052960"
  },
  {
    "text": "theoretically you should always be",
    "start": "1052960",
    "end": "1054980"
  },
  {
    "text": "getting the same result back out if you",
    "start": "1054980",
    "end": "1057140"
  },
  {
    "text": "have the same input so long as your user",
    "start": "1057140",
    "end": "1059480"
  },
  {
    "text": "time all the things they rank go in your",
    "start": "1059480",
    "end": "1062240"
  },
  {
    "text": "get request comes back out the same",
    "start": "1062240",
    "end": "1063980"
  },
  {
    "text": "thing a post request does some form of",
    "start": "1063980",
    "end": "1066679"
  },
  {
    "text": "mutation so therefore you can't do",
    "start": "1066679",
    "end": "1069380"
  },
  {
    "text": "testing against a post request would be",
    "start": "1069380",
    "end": "1071419"
  },
  {
    "text": "like the",
    "start": "1071419",
    "end": "1073760"
  },
  {
    "text": "the standard way you know what I mean",
    "start": "1073760",
    "end": "1074960"
  },
  {
    "text": "manually constructing queries about",
    "start": "1074960",
    "end": "1076520"
  },
  {
    "text": "graphql since they bastard uh since they",
    "start": "1076520",
    "end": "1078919"
  },
  {
    "text": "they're like a bastard of HTTP you get",
    "start": "1078919",
    "end": "1081200"
  },
  {
    "text": "this untenable behavior that you have to",
    "start": "1081200",
    "end": "1083600"
  },
  {
    "text": "kind of like",
    "start": "1083600",
    "end": "1085460"
  },
  {
    "text": "get request gets requests okay shut up",
    "start": "1085460",
    "end": "1087980"
  },
  {
    "text": "you know what I mean manually",
    "start": "1087980",
    "end": "1089480"
  },
  {
    "text": "constructed queries are only as good as",
    "start": "1089480",
    "end": "1091880"
  },
  {
    "text": "the features uh the developer remembers",
    "start": "1091880",
    "end": "1093620"
  },
  {
    "text": "to test we ended up with untested Fields",
    "start": "1093620",
    "end": "1095840"
  },
  {
    "text": "simply because we forgot about them you",
    "start": "1095840",
    "end": "1097520"
  },
  {
    "text": "know correctness the idea of correctness",
    "start": "1097520",
    "end": "1099440"
  },
  {
    "text": "can be confusing too for example is it",
    "start": "1099440",
    "end": "1101900"
  },
  {
    "text": "more correct for an array to be empty or",
    "start": "1101900",
    "end": "1103700"
  },
  {
    "text": "null",
    "start": "1103700",
    "end": "1106059"
  },
  {
    "text": "it's a good call uh or is it just noise",
    "start": "1107539",
    "end": "1110179"
  },
  {
    "text": "ultimately we match the existing",
    "start": "1110179",
    "end": "1111740"
  },
  {
    "text": "Behavior as much as possible because",
    "start": "1111740",
    "end": "1113539"
  },
  {
    "text": "verifying the robustness of the client's",
    "start": "1113539",
    "end": "1115340"
  },
  {
    "text": "error handling was difficult yeah I'm",
    "start": "1115340",
    "end": "1117380"
  },
  {
    "text": "more on the empty array plan even if it",
    "start": "1117380",
    "end": "1119419"
  },
  {
    "text": "takes memory just because it's such a",
    "start": "1119419",
    "end": "1121700"
  },
  {
    "text": "pain in the ass to do it the other way",
    "start": "1121700",
    "end": "1123679"
  },
  {
    "text": "around uh despite these shortcomings",
    "start": "1123679",
    "end": "1125840"
  },
  {
    "text": "replay testing was the key indicator",
    "start": "1125840",
    "end": "1127280"
  },
  {
    "text": "that we had achieved functional",
    "start": "1127280",
    "end": "1128600"
  },
  {
    "text": "correctness of the most item potent",
    "start": "1128600",
    "end": "1130340"
  },
  {
    "text": "queries",
    "start": "1130340",
    "end": "1131299"
  },
  {
    "text": "the most item potent queries wait of",
    "start": "1131299",
    "end": "1134960"
  },
  {
    "text": "most",
    "start": "1134960",
    "end": "1135860"
  },
  {
    "text": "I've put a gun there tool sticky",
    "start": "1135860",
    "end": "1138320"
  },
  {
    "text": "canaries while replay testing validates",
    "start": "1138320",
    "end": "1140240"
  },
  {
    "text": "the functional correctness of the new",
    "start": "1140240",
    "end": "1141320"
  },
  {
    "text": "graphql APS uh it does not provide any",
    "start": "1141320",
    "end": "1143900"
  },
  {
    "text": "performance or business metric insights",
    "start": "1143900",
    "end": "1145520"
  },
  {
    "text": "such as overall perceived health of user",
    "start": "1145520",
    "end": "1147620"
  },
  {
    "text": "interaction are users clicking play at",
    "start": "1147620",
    "end": "1149600"
  },
  {
    "text": "the same rates are things loading into",
    "start": "1149600",
    "end": "1151220"
  },
  {
    "text": "uh in time before the user loses",
    "start": "1151220",
    "end": "1152960"
  },
  {
    "text": "interest replay testing cannot be used",
    "start": "1152960",
    "end": "1154880"
  },
  {
    "text": "for non-ident appy validation we reached",
    "start": "1154880",
    "end": "1158120"
  },
  {
    "text": "for a Netflix tool called sticky Canary",
    "start": "1158120",
    "end": "1159679"
  },
  {
    "text": "to build confidence feature long-lived",
    "start": "1159679",
    "end": "1161660"
  },
  {
    "text": "production feature branch",
    "start": "1161660",
    "end": "1163340"
  },
  {
    "text": "that's all that means that's all that",
    "start": "1163340",
    "end": "1164900"
  },
  {
    "text": "all that means sticky Canary is an",
    "start": "1164900",
    "end": "1166520"
  },
  {
    "text": "infrastructure experiment where",
    "start": "1166520",
    "end": "1167660"
  },
  {
    "text": "customers are assigned either to a",
    "start": "1167660",
    "end": "1169220"
  },
  {
    "text": "canary or a baseline host for the entire",
    "start": "1169220",
    "end": "1171080"
  },
  {
    "text": "duration of an experiment all incoming",
    "start": "1171080",
    "end": "1173179"
  },
  {
    "text": "traffic is allocated to an experimental",
    "start": "1173179",
    "end": "1175460"
  },
  {
    "text": "or Baseline host uh based on their",
    "start": "1175460",
    "end": "1177740"
  },
  {
    "text": "device and profile similar to a bucket",
    "start": "1177740",
    "end": "1180200"
  },
  {
    "text": "hash uh a bucket hash effectively are",
    "start": "1180200",
    "end": "1183140"
  },
  {
    "text": "always routed to the same place",
    "start": "1183140",
    "end": "1185059"
  },
  {
    "text": "right uh the experimental host",
    "start": "1185059",
    "end": "1187820"
  },
  {
    "text": "deployment serves all the customers",
    "start": "1187820",
    "end": "1189799"
  },
  {
    "text": "assigned to the experiment watch our",
    "start": "1189799",
    "end": "1192140"
  },
  {
    "text": "chaos engineering talk from AWS reinvent",
    "start": "1192140",
    "end": "1194360"
  },
  {
    "text": "to learn more about sticky canaries",
    "start": "1194360",
    "end": "1195799"
  },
  {
    "text": "beautiful Zuul is like our uh routing",
    "start": "1195799",
    "end": "1199880"
  },
  {
    "text": "Gateway thing",
    "start": "1199880",
    "end": "1202220"
  },
  {
    "start": "1202000",
    "end": "1468000"
  },
  {
    "text": "makes make stuff happen uh and the two",
    "start": "1202220",
    "end": "1204919"
  },
  {
    "text": "cases of graphql apis we used a sticky",
    "start": "1204919",
    "end": "1207080"
  },
  {
    "text": "Canary experiment to run two instances",
    "start": "1207080",
    "end": "1208760"
  },
  {
    "text": "of our graphql Gateway the Baseline",
    "start": "1208760",
    "end": "1210980"
  },
  {
    "text": "Gateway used the existing schema which",
    "start": "1210980",
    "end": "1212780"
  },
  {
    "text": "routes all traffic to the graphql shim",
    "start": "1212780",
    "end": "1214760"
  },
  {
    "text": "the experimental Gateway used the new",
    "start": "1214760",
    "end": "1216980"
  },
  {
    "text": "proposed schema which routes traffic to",
    "start": "1216980",
    "end": "1218960"
  },
  {
    "text": "the latest video API service zul our",
    "start": "1218960",
    "end": "1221660"
  },
  {
    "text": "primary age Edge Gateway assigns traffic",
    "start": "1221660",
    "end": "1223760"
  },
  {
    "text": "to either cluster based on the",
    "start": "1223760",
    "end": "1225260"
  },
  {
    "text": "experiment parameters okay then we",
    "start": "1225260",
    "end": "1228080"
  },
  {
    "text": "collect and analyze performance of the",
    "start": "1228080",
    "end": "1229280"
  },
  {
    "text": "two clusters okay medium and tail",
    "start": "1229280",
    "end": "1230840"
  },
  {
    "text": "latencies air rates logs resource",
    "start": "1230840",
    "end": "1233000"
  },
  {
    "text": "utilization device qoe streaming Health",
    "start": "1233000",
    "end": "1235820"
  },
  {
    "text": "metrics perfect",
    "start": "1235820",
    "end": "1237440"
  },
  {
    "text": "look at that uh oh I don't know what's",
    "start": "1237440",
    "end": "1239720"
  },
  {
    "text": "going on there but average latency",
    "start": "1239720",
    "end": "1241580"
  },
  {
    "text": "something seems a little goofy right",
    "start": "1241580",
    "end": "1243320"
  },
  {
    "text": "here look at that that doesn't look good",
    "start": "1243320",
    "end": "1245720"
  },
  {
    "text": "CPU utilization oh oh no that does look",
    "start": "1245720",
    "end": "1249799"
  },
  {
    "text": "good experiment look at that it's way",
    "start": "1249799",
    "end": "1251299"
  },
  {
    "text": "lower what the what the hell we don't",
    "start": "1251299",
    "end": "1253220"
  },
  {
    "text": "actually see what the numbers are but",
    "start": "1253220",
    "end": "1254419"
  },
  {
    "text": "you can imagine it looks different we",
    "start": "1254419",
    "end": "1255980"
  },
  {
    "text": "started small with tiny customer",
    "start": "1255980",
    "end": "1257179"
  },
  {
    "text": "allocation for hour-long experiments",
    "start": "1257179",
    "end": "1258740"
  },
  {
    "text": "after validating performance we slowly",
    "start": "1258740",
    "end": "1260360"
  },
  {
    "text": "built up scope we increased percentage",
    "start": "1260360",
    "end": "1261679"
  },
  {
    "text": "of our customer allocations introduce",
    "start": "1261679",
    "end": "1263059"
  },
  {
    "text": "multi-region tests and eventually 12",
    "start": "1263059",
    "end": "1264860"
  },
  {
    "text": "hour or day-long experiments validating",
    "start": "1264860",
    "end": "1266720"
  },
  {
    "text": "along the way is essentially a sticky",
    "start": "1266720",
    "end": "1268580"
  },
  {
    "text": "canaries impact live production traffic",
    "start": "1268580",
    "end": "1270320"
  },
  {
    "text": "and are assigned persistently to a",
    "start": "1270320",
    "end": "1272600"
  },
  {
    "text": "customer",
    "start": "1272600",
    "end": "1273919"
  },
  {
    "text": "kind of exciting right",
    "start": "1273919",
    "end": "1276260"
  },
  {
    "text": "I like that hi YouTube stream it is a",
    "start": "1276260",
    "end": "1278299"
  },
  {
    "text": "YouTube stream you can tell you can tell",
    "start": "1278299",
    "end": "1279740"
  },
  {
    "text": "it's a YouTube stream see see we'll do",
    "start": "1279740",
    "end": "1281660"
  },
  {
    "text": "that every now and then when sticky",
    "start": "1281660",
    "end": "1283520"
  },
  {
    "text": "canaries was essential to build",
    "start": "1283520",
    "end": "1284720"
  },
  {
    "text": "confidence in our new graph wheel",
    "start": "1284720",
    "end": "1286039"
  },
  {
    "text": "service non-ident apis these tests are",
    "start": "1286039",
    "end": "1288559"
  },
  {
    "text": "uh compatible with mutating or non-ide",
    "start": "1288559",
    "end": "1290960"
  },
  {
    "text": "ident apis",
    "start": "1290960",
    "end": "1294100"
  },
  {
    "text": "if I see the word independent one more",
    "start": "1297020",
    "end": "1299419"
  },
  {
    "text": "ident I'm gonna I'm gonna lose it uh",
    "start": "1299419",
    "end": "1302419"
  },
  {
    "text": "business metric sticky canaries",
    "start": "1302419",
    "end": "1303740"
  },
  {
    "text": "validated our core Netflix business",
    "start": "1303740",
    "end": "1305480"
  },
  {
    "text": "metrics had improved after the migration",
    "start": "1305480",
    "end": "1308000"
  },
  {
    "text": "system performance insights into latency",
    "start": "1308000",
    "end": "1310159"
  },
  {
    "text": "and resource usage helped us understand",
    "start": "1310159",
    "end": "1311780"
  },
  {
    "text": "how scaling profile changes after",
    "start": "1311780",
    "end": "1313760"
  },
  {
    "text": "migration gotchas negative customer",
    "start": "1313760",
    "end": "1315860"
  },
  {
    "text": "impact sticky canaries can impact real",
    "start": "1315860",
    "end": "1317840"
  },
  {
    "text": "users yep we needed confidence in our",
    "start": "1317840",
    "end": "1320000"
  },
  {
    "text": "new service before persisting route uh",
    "start": "1320000",
    "end": "1321799"
  },
  {
    "text": "persistently routing some customers to",
    "start": "1321799",
    "end": "1323900"
  },
  {
    "text": "them this is partial migrated by",
    "start": "1323900",
    "end": "1326240"
  },
  {
    "text": "real-time impact detection which will",
    "start": "1326240",
    "end": "1328340"
  },
  {
    "text": "automatically cancel the experiment yep",
    "start": "1328340",
    "end": "1329960"
  },
  {
    "text": "that's good yeah there's like we have",
    "start": "1329960",
    "end": "1331820"
  },
  {
    "text": "automated Canary analysis so we have a",
    "start": "1331820",
    "end": "1334039"
  },
  {
    "text": "bunch of incoming real-time metrics and",
    "start": "1334039",
    "end": "1335840"
  },
  {
    "text": "it can make some sweet real-time math",
    "start": "1335840",
    "end": "1338000"
  },
  {
    "text": "decisions and shut things off and stuff",
    "start": "1338000",
    "end": "1340460"
  },
  {
    "text": "like that short-lived sticky canaries",
    "start": "1340460",
    "end": "1342260"
  },
  {
    "text": "are meant for short-lived experiments",
    "start": "1342260",
    "end": "1343580"
  },
  {
    "text": "for longer live tests full-blown a B",
    "start": "1343580",
    "end": "1345080"
  },
  {
    "text": "test should be used yep in summary",
    "start": "1345080",
    "end": "1346280"
  },
  {
    "text": "technology is consistently changing and",
    "start": "1346280",
    "end": "1348260"
  },
  {
    "text": "we as Engineers spend a large part of",
    "start": "1348260",
    "end": "1349880"
  },
  {
    "text": "our career performing migrations the",
    "start": "1349880",
    "end": "1351380"
  },
  {
    "text": "question is not whether we are migrating",
    "start": "1351380",
    "end": "1352940"
  },
  {
    "text": "but whether we are migrating safely with",
    "start": "1352940",
    "end": "1354740"
  },
  {
    "text": "zero downtime in a timely manner at",
    "start": "1354740",
    "end": "1356659"
  },
  {
    "text": "Netflix we developed tools that ensure",
    "start": "1356659",
    "end": "1358640"
  },
  {
    "text": "confidence in these migrations targeted",
    "start": "1358640",
    "end": "1360559"
  },
  {
    "text": "towards each specific use case being",
    "start": "1360559",
    "end": "1362720"
  },
  {
    "text": "tested we covered three tools a b",
    "start": "1362720",
    "end": "1364220"
  },
  {
    "text": "testing replay testing and sticky",
    "start": "1364220",
    "end": "1365600"
  },
  {
    "text": "canaries that we have used for graphql",
    "start": "1365600",
    "end": "1367580"
  },
  {
    "text": "migration this blog post of our",
    "start": "1367580",
    "end": "1369440"
  },
  {
    "text": "migrating critical traffic series also",
    "start": "1369440",
    "end": "1371600"
  },
  {
    "text": "check out my grading critical traffic at",
    "start": "1371600",
    "end": "1373340"
  },
  {
    "text": "scale part one part two and ensuring",
    "start": "1373340",
    "end": "1374900"
  },
  {
    "text": "successful launches great job look at",
    "start": "1374900",
    "end": "1377600"
  },
  {
    "text": "the clappies 708 clappies okay imagine",
    "start": "1377600",
    "end": "1381500"
  },
  {
    "text": "the level of clappies you could have on",
    "start": "1381500",
    "end": "1383720"
  },
  {
    "text": "a post",
    "start": "1383720",
    "end": "1385159"
  },
  {
    "text": "that's Global clappies right there well",
    "start": "1385159",
    "end": "1388039"
  },
  {
    "text": "hey that was pretty good I you know the",
    "start": "1388039",
    "end": "1389659"
  },
  {
    "text": "fun part is being able to know so much",
    "start": "1389659",
    "end": "1392720"
  },
  {
    "text": "of these things right like I know all",
    "start": "1392720",
    "end": "1395059"
  },
  {
    "text": "those",
    "start": "1395059",
    "end": "1396200"
  },
  {
    "text": "things you know and so it's kind of fun",
    "start": "1396200",
    "end": "1397820"
  },
  {
    "text": "reading these articles and going oh yeah",
    "start": "1397820",
    "end": "1399440"
  },
  {
    "text": "okay okay",
    "start": "1399440",
    "end": "1401260"
  },
  {
    "text": "in this case uh Prime is the biggest",
    "start": "1401260",
    "end": "1403760"
  },
  {
    "text": "tool hi I'm the biggest tool how long",
    "start": "1403760",
    "end": "1405679"
  },
  {
    "text": "does it take for Netflix to ship",
    "start": "1405679",
    "end": "1406820"
  },
  {
    "text": "something like this uh from the start of",
    "start": "1406820",
    "end": "1408260"
  },
  {
    "text": "the effort so this one was a multi-year",
    "start": "1408260",
    "end": "1409580"
  },
  {
    "text": "effort uh not all not all efforts are",
    "start": "1409580",
    "end": "1413539"
  },
  {
    "text": "multi-year like when I when I talked",
    "start": "1413539",
    "end": "1414919"
  },
  {
    "text": "about that always fresh thing that I did",
    "start": "1414919",
    "end": "1416360"
  },
  {
    "text": "earlier where I'm keeping cash is up to",
    "start": "1416360",
    "end": "1418280"
  },
  {
    "text": "date that took",
    "start": "1418280",
    "end": "1420559"
  },
  {
    "text": "two months",
    "start": "1420559",
    "end": "1423200"
  },
  {
    "text": "right",
    "start": "1423200",
    "end": "1424760"
  },
  {
    "text": "it's not huge right testing like testing",
    "start": "1424760",
    "end": "1427039"
  },
  {
    "text": "and making sure as correct was the",
    "start": "1427039",
    "end": "1428360"
  },
  {
    "text": "hardest part just because of the",
    "start": "1428360",
    "end": "1429679"
  },
  {
    "text": "difference because I had the ship on TVs",
    "start": "1429679",
    "end": "1431360"
  },
  {
    "text": "and TVs are notorious for being like all",
    "start": "1431360",
    "end": "1435980"
  },
  {
    "text": "different right and so creating a really",
    "start": "1435980",
    "end": "1438080"
  },
  {
    "text": "good abstraction layer has been very",
    "start": "1438080",
    "end": "1439460"
  },
  {
    "text": "very hard",
    "start": "1439460",
    "end": "1441380"
  },
  {
    "text": "I I don't know I I wasn't working on the",
    "start": "1441380",
    "end": "1443659"
  },
  {
    "text": "team that did this and plus we are using",
    "start": "1443659",
    "end": "1445580"
  },
  {
    "text": "Falcor so there was no rest we have not",
    "start": "1445580",
    "end": "1447200"
  },
  {
    "text": "we haven't done rest in",
    "start": "1447200",
    "end": "1449179"
  },
  {
    "text": "12 years",
    "start": "1449179",
    "end": "1451840"
  },
  {
    "text": "do you really have beef with Java Java",
    "start": "1453200",
    "end": "1455299"
  },
  {
    "text": "is not great",
    "start": "1455299",
    "end": "1456620"
  },
  {
    "text": "Falcor post mortem when uh no I'm too",
    "start": "1456620",
    "end": "1459380"
  },
  {
    "text": "dead to do a falcon mortem the name",
    "start": "1459380",
    "end": "1463940"
  },
  {
    "text": "is the falcorigen",
    "start": "1463940",
    "end": "1467200"
  }
]