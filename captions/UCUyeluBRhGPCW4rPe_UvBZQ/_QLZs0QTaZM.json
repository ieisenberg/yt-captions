[
  {
    "text": "how we saved $5,000 a month with a single graphon query this feels so",
    "start": "240",
    "end": "6040"
  },
  {
    "text": "untrue to be true like true right this just feels it feels untrue to be true I want to tell you a story of how we saved",
    "start": "6040",
    "end": "12360"
  },
  {
    "text": "300 milliseconds from every pod startup on uh checkle and made every check run",
    "start": "12360",
    "end": "17960"
  },
  {
    "text": "more efficiently or more efficient if you don't know checkle is a synthetic monitoring tool that lets teams monitor",
    "start": "17960",
    "end": "23519"
  },
  {
    "text": "their apis and sites continually and find problems faster with some users sending millions of requests a day that",
    "start": "23519",
    "end": "29359"
  },
  {
    "text": "300 Mill seconds added up to a massive overall compute savings the story of how we saved the time takes us through",
    "start": "29359",
    "end": "35079"
  },
  {
    "text": "application performance monitoring to lowlevel inst uh instrumentation to one weird trick that saves a ton of startup",
    "start": "35079",
    "end": "41480"
  },
  {
    "text": "time all the way to coding practices that most would call anti- pattern but nonetheless improve performance significantly okay hey anytime you can",
    "start": "41480",
    "end": "49079"
  },
  {
    "text": "sell me on an anti pattern let's go let's go I'm excited I want the one",
    "start": "49079",
    "end": "54239"
  },
  {
    "text": "weird trick in an anti pattern and I am pumped up in 2024 hour p platform team",
    "start": "54239",
    "end": "60079"
  },
  {
    "text": "had finops as a goal uh what is finops it sounds like Financial operations that's what I would assume dude I don't",
    "start": "60079",
    "end": "66680"
  },
  {
    "text": "know ftech Financial operations blockchain automated invoicing okay okay",
    "start": "66680",
    "end": "72880"
  },
  {
    "text": "okay that makes sense that's good okay I like that I like that term so in 200 or 2024 platform had a finops as a goal I",
    "start": "72880",
    "end": "79119"
  },
  {
    "text": "think this is great A lot of people don't know where they spend money until they really they I mean finops okay then",
    "start": "79119",
    "end": "84520"
  },
  {
    "text": "I I'm on team finops finops is a good thing yes trying to find Savings in our cost per use user we pursued the total",
    "start": "84520",
    "end": "91280"
  },
  {
    "text": "compute time as one of the ways we could save time and money the the Journey Begins on AWS ECS it's always EAS as uh",
    "start": "91280",
    "end": "99520"
  },
  {
    "text": "the setup from large scale services to Foss like pods I'm not what what is Foss",
    "start": "99520",
    "end": "104880"
  },
  {
    "text": "Finance as a surface when I when I started the this optimization Journey function as a",
    "start": "104880",
    "end": "111360"
  },
  {
    "text": "surface oh okay function as a surface yeah du okay when I started this optimization Journey last year check",
    "start": "111360",
    "end": "116560"
  },
  {
    "text": "runs were uh were run from a service like Amazon ECS container this large",
    "start": "116560",
    "end": "121759"
  },
  {
    "text": "service received checks from sqs Qs and continuously ran new checks runs as",
    "start": "121759",
    "end": "127039"
  },
  {
    "text": "needed continuously ran new check runs as needed this approach had its advantages among them that startup time",
    "start": "127039",
    "end": "132640"
  },
  {
    "text": "wasn't a concern since startups of these containers were rare sqs baby you know",
    "start": "132640",
    "end": "137840"
  },
  {
    "text": "everybody wants a freaking Q freaking freaking Q you're not supposed to curse within the first few minutes of a",
    "start": "137840",
    "end": "144000"
  },
  {
    "text": "YouTube video but everybody wants a queue when they can just use postrest and they just refuse dude what people",
    "start": "144000",
    "end": "150599"
  },
  {
    "text": "will do you know uh there's that Meme like what PE what like what developers will do to avoid coding there's",
    "start": "150599",
    "end": "157000"
  },
  {
    "text": "definitely like what coders will do to avoid postgress and it's just you know",
    "start": "157000",
    "end": "162720"
  },
  {
    "text": "SNS sqs functions you know like set up like this whole Amazon Super complicated",
    "start": "162720",
    "end": "170040"
  },
  {
    "text": "architecture and then instead it's just like postgress on the other side like it's always this there were two",
    "start": "170040",
    "end": "176519"
  },
  {
    "text": "significant downsides to our ECS architecture with large containers running many checks Auto scaling wasn't",
    "start": "176519",
    "end": "181800"
  },
  {
    "text": "very flexible the fact that one container was handling requests from many clients meant we had to do work or we had to work hard to clean up all the",
    "start": "181800",
    "end": "188159"
  },
  {
    "text": "data between runs this added a lot of complexity to the code base we're now running our checks on ephemeral pods in",
    "start": "188159",
    "end": "193799"
  },
  {
    "text": "kubernetes cluster containers being spun up after the check meant we didn't have",
    "start": "193799",
    "end": "198959"
  },
  {
    "text": "any extra work to clean up our user data between runs similar to the fast setup our compute was only to uh in use as the",
    "start": "198959",
    "end": "207280"
  },
  {
    "text": "check was running this meant our Auto scaling was now extremely fine grained shocking you start up a program every",
    "start": "207280",
    "end": "213599"
  },
  {
    "text": "single time to avoid data cleanup and it's somehow slower and startup times matter absolutely shocking and that's",
    "start": "213599",
    "end": "219799"
  },
  {
    "text": "how I read this which is just like duh like this is a natural this is this seems like a very natural consequence",
    "start": "219799",
    "end": "225159"
  },
  {
    "text": "please tell me you're not using node if they say the word node I'm going to throw my computer right out the",
    "start": "225159",
    "end": "230360"
  },
  {
    "text": "window okay I swear to goodness major skill issue uh with this new Arrangement",
    "start": "230360",
    "end": "236400"
  },
  {
    "text": "pods startup Times Really Matter the ephemeral pod starting up for each check run uh startup times represent compute",
    "start": "236400",
    "end": "242040"
  },
  {
    "text": "time and platform cost since we'll scale up directly with our B with with business growth we had to get in control",
    "start": "242040",
    "end": "248040"
  },
  {
    "text": "of startup times to grow efficiently yeah okay Prime will drop kick you if",
    "start": "248040",
    "end": "253400"
  },
  {
    "text": "you use node I will drop kick you if you I will pile drive you if you use node the the problem is is that when when",
    "start": "253400",
    "end": "259239"
  },
  {
    "text": "startup times a really big concern you should use a language that compiles to a binary right you just want something",
    "start": "259239",
    "end": "265560"
  },
  {
    "text": "that just runs that's it so and plus go there's a lot of great like there's a lot of great functions as a service that",
    "start": "265560",
    "end": "272160"
  },
  {
    "text": "can use things like go go nice and fast go real fast go Burr you know and",
    "start": "272160",
    "end": "277919"
  },
  {
    "text": "just nice and fast startup times real real small that's it uh the first fix",
    "start": "277919",
    "end": "283320"
  },
  {
    "text": "the chunky AWS SDK when we started optimizing container startup times we knew the standard advice the smaller the",
    "start": "283320",
    "end": "289360"
  },
  {
    "text": "container image the faster container will start fair in early optimization we identified was one of the Amazon's sdks",
    "start": "289360",
    "end": "296400"
  },
  {
    "text": "adding about 70 megabytes to the package size it's a lot of bikes uh the the AWS SDK for JavaScript I knew",
    "start": "296400",
    "end": "303000"
  },
  {
    "text": "it I knew it I knew it I just could just feel it uh I mean the",
    "start": "303000",
    "end": "311840"
  },
  {
    "text": "hard part is like I know it's not slow right I mean I mean I know it's fast it's fast in human standards when you're",
    "start": "311840",
    "end": "319360"
  },
  {
    "text": "comparing this over like millions of requests the startup of node is very",
    "start": "319360",
    "end": "325840"
  },
  {
    "text": "slow let's in fact let's just do a little Quick Test okay we're just going to do a quick little test okay let's just do quickie I'm going to",
    "start": "325840",
    "end": "331800"
  },
  {
    "text": "just go like this Vim test.js so this is loading nothing okay it's literally not loading nothing const I equals z that's",
    "start": "331800",
    "end": "339039"
  },
  {
    "text": "it I'm not even going to print I'm just going to go time no test.js like you'll notice it's just",
    "start": "339039",
    "end": "345880"
  },
  {
    "text": "time right that's just time it didn't load anything I loaded nothing that's",
    "start": "345880",
    "end": "351919"
  },
  {
    "text": "still a lot of time and you have to remember that when it comes to doing this Millions upon bajillions of times",
    "start": "351919",
    "end": "359039"
  },
  {
    "text": "it just takes time bun I don't even think do I have bun I don't have bun run it again run it again run it",
    "start": "359039",
    "end": "365280"
  },
  {
    "text": "again run it again run it again run it again run it again it just takes time right and that can that can be that can",
    "start": "365280",
    "end": "371639"
  },
  {
    "text": "be difficult right and so let's do the same thing and go here we'll go to personal make dur go test uh go test uh",
    "start": "371639",
    "end": "379960"
  },
  {
    "text": "go go mod anit there we go um",
    "start": "379960",
    "end": "388919"
  },
  {
    "text": "I think that's effectively what I just did in the other one right I effectively have done the same thing twice now the",
    "start": "399639",
    "end": "405560"
  },
  {
    "text": "hard part is that I don't have I don't know how to build go I don't know how to build I know there's like some rules you have to build for release mode I don't",
    "start": "405560",
    "end": "411919"
  },
  {
    "text": "even I don't even know how to do that all right so this is obviously debug mode",
    "start": "411919",
    "end": "420120"
  },
  {
    "text": "like it just I mean you got to remember like this is in release mode and all that good stuff it just it just takes it",
    "start": "420599",
    "end": "428120"
  },
  {
    "text": "just takes time you know what I mean there's a big difference in time it was go remember that's nothing there's a big",
    "start": "428120",
    "end": "434639"
  },
  {
    "text": "difference now go load in megabyte like literally a megabyte worth of JavaScript",
    "start": "434639",
    "end": "440319"
  },
  {
    "text": "just makes a big difference overall I'm not even saying using go I'm just saying when you use an interpreted language",
    "start": "440319",
    "end": "445840"
  },
  {
    "text": "startup times become like proportional to the amount of code you have to go load up and code size makes a big",
    "start": "445840",
    "end": "452520"
  },
  {
    "text": "difference and when you start running code it starts jitting right away it starts doing a lot of jit and jit can be",
    "start": "452520",
    "end": "459360"
  },
  {
    "text": "very very uh tricky yeah so just leave it running well that's the problem when",
    "start": "459360",
    "end": "464960"
  },
  {
    "text": "you are starting and you're and you're literally are doing ephemeral runs per item you lose the power of jit and you",
    "start": "464960",
    "end": "472560"
  },
  {
    "text": "do it and you call just enough JavaScript to actually call all the jits to happen but you don't actually get any",
    "start": "472560",
    "end": "478280"
  },
  {
    "text": "of the long running wins of the jit right and for those that don't know jit stands for Jus in time compiling there's",
    "start": "478280",
    "end": "484319"
  },
  {
    "text": "there's there's a real problem here I'm not saying don't use node I'm just saying you have to understand what you're doing right the problem is is",
    "start": "484319",
    "end": "490599"
  },
  {
    "text": "that when you got to remember that when JavaScript is loaded it takes in it has to first run the V8 engine it has to",
    "start": "490599",
    "end": "498360"
  },
  {
    "text": "initialize the environment then it has to read in the code remember that code gets all loaded",
    "start": "498360",
    "end": "504879"
  },
  {
    "text": "into V8 V8 creates all the memory it needs to hold all the different values because remember every fun fun needs to",
    "start": "504879",
    "end": "510120"
  },
  {
    "text": "be created none of the functions are parsed right they're all kind of free floating things and then as you use",
    "start": "510120",
    "end": "516399"
  },
  {
    "text": "JavaScript it parses it then it attempts to jit it and it goes through all this code and so that means the first time you run is like literally the worst",
    "start": "516399",
    "end": "522959"
  },
  {
    "text": "possible run and then in these ephemeral environments you're just doing the first",
    "start": "522959",
    "end": "528120"
  },
  {
    "text": "run over and over and over again right there's a lot of there's a lot of problems here is V8 and engine analogy",
    "start": "528120",
    "end": "534600"
  },
  {
    "text": "no V8 is literally what you're running when you're when you're using node you're running something called V8 which is which is you come on guys you know",
    "start": "534600",
    "end": "541519"
  },
  {
    "text": "what V8 is yeah like yeah ah no B code buffer like PHP uh interpret is no good for",
    "start": "541519",
    "end": "548160"
  },
  {
    "text": "Emeral yeah interpreted is no good for Emeral Chrome V8 it's like it's the it's the it's the JavaScript engine all right",
    "start": "548160",
    "end": "554880"
  },
  {
    "text": "when we started optimizing container startup times we knew standard advice the smaller the container images the faster your container will start an",
    "start": "554880",
    "end": "561000"
  },
  {
    "text": "early optimization we identified was the AWS SDK adding about 70 megabytes to the package size the AWS SDK for JavaScript",
    "start": "561000",
    "end": "567480"
  },
  {
    "text": "includes clients for every AWS service under the Sun the bigger the container images we ship the slower we are or they",
    "start": "567480",
    "end": "573200"
  },
  {
    "text": "are to download and start the Pod yep that makes a lot of sense on top of the container size issue uh remember that",
    "start": "573200",
    "end": "578880"
  },
  {
    "text": "JavaScript is interpreted parsing all the code is expensive and takes longer okay maybe I should have just",
    "start": "578880",
    "end": "584839"
  },
  {
    "text": "read what they had to say as opposed to putting in my own opinion because I feel like maybe I just did a tight a small",
    "start": "584839",
    "end": "591279"
  },
  {
    "text": "disservice there all right pre-read I know like a strong pread there sorry not a JS Dev sorry my bad but enter Amazon",
    "start": "591279",
    "end": "598519"
  },
  {
    "text": "AWS version three this new SDK was modular allowing you to import only the chunks you need this is the first lesson",
    "start": "598519",
    "end": "604320"
  },
  {
    "text": "of our optimization Journey lesson number one don't use node all",
    "start": "604320",
    "end": "609399"
  },
  {
    "text": "right uh do not require things you don't need uh with a V3 a AWS SDK you don't",
    "start": "609399",
    "end": "615440"
  },
  {
    "text": "have to bring in the whole SDK there's a nice clear readable format for bringing in subm modules all right beautiful some",
    "start": "615440",
    "end": "622880"
  },
  {
    "text": "code re uh rewrite was required for this setup but not much I mean that's good I mean this is at least a very good way to",
    "start": "622880",
    "end": "628760"
  },
  {
    "text": "kind of get started Ed right a bit this is fully a skill issue this is fully a skill issue right here uh yes is that",
    "start": "628760",
    "end": "636480"
  },
  {
    "text": "you just putting too much code in The Interpreter some code rewrite was required for this step but not much it",
    "start": "636480",
    "end": "642160"
  },
  {
    "text": "was mainly a one forone replacement to bring the eight the five AWS subm modules that we actually use rather than",
    "start": "642160",
    "end": "647560"
  },
  {
    "text": "one whole SDK however switching to this a more optimized required process didn't",
    "start": "647560",
    "end": "652839"
  },
  {
    "text": "improve start times as much as we'd hoped and CPU times were still higher than expected it was time to go deeper",
    "start": "652839",
    "end": "660160"
  },
  {
    "text": "let's go deeper boys Drilling in finding the exact source of CPU time trying to",
    "start": "660160",
    "end": "665959"
  },
  {
    "text": "find the exact let's see find the source of our increased CPU time we went with the simplest observable technique log",
    "start": "665959",
    "end": "671720"
  },
  {
    "text": "lines when our ephemeral pods start up there's a specific amount of time uh or there's a specific moment",
    "start": "671720",
    "end": "678279"
  },
  {
    "text": "when they report themselves as ready to receive a task from Amazon sqs by adding",
    "start": "678279",
    "end": "684480"
  },
  {
    "text": "a single log line we could see the time it took for each pod to be ready oh that's I mean that's at least a",
    "start": "684480",
    "end": "689519"
  },
  {
    "text": "interesting first step I I like I like this as a first step it's very very simple because you know profiling",
    "start": "689519",
    "end": "695279"
  },
  {
    "text": "various parts of your uh system can be very lengthy and difficult and so just having a very simple just like log lines",
    "start": "695279",
    "end": "701760"
  },
  {
    "text": "which one takes the longest to get ready it could be a good place to start checking uh the time it took for the Pod",
    "start": "701760",
    "end": "707760"
  },
  {
    "text": "to be ready wasn't done with some cool kubernetes call or ECS magic instead just three lines of application code",
    "start": "707760",
    "end": "713959"
  },
  {
    "text": "within a runner check okay interesting but this is all in JavaScript so you're already running at this point so",
    "start": "713959",
    "end": "719800"
  },
  {
    "text": "all the startup pre- JavaScript isn't there this brings us to our second lesson about pursuing slow starts High",
    "start": "719800",
    "end": "725880"
  },
  {
    "text": "CPU or other lowlevel performance issues the second lesson profilers and APM are cool and all but sometimes to find a",
    "start": "725880",
    "end": "732079"
  },
  {
    "text": "problem you just need to get your hands dirty in your application code yeah I mean there's a lot of pre-application code that is going to be very difficult",
    "start": "732079",
    "end": "737800"
  },
  {
    "text": "right so just like they just said which is how long do it take like you don't get the full holistic knowledge how long",
    "start": "737800",
    "end": "744440"
  },
  {
    "text": "did it take for your uh for you to download your your image how long did the docker image take to start up how",
    "start": "744440",
    "end": "750880"
  },
  {
    "text": "you know like each one of those little individual steps you have to find another logger unless if those are being logged somewhere else and then you have to relate them all together and do all",
    "start": "750880",
    "end": "757440"
  },
  {
    "text": "that stuff seems like a job for cloud watch it's nice to have shiny tools that lets you analyze your code performance",
    "start": "757440",
    "end": "763240"
  },
  {
    "text": "without modifying your application code that's true when you're dealing with runaway logging or noisy alerts or private data being sent to the wrong",
    "start": "763240",
    "end": "769680"
  },
  {
    "text": "logging system but when you need to know why your code is performing poorly it makes sense to empower developers to",
    "start": "769680",
    "end": "774720"
  },
  {
    "text": "just add direct measurement to the application code one of the biggest improvements I ever did at Netflix was exactly this I created something which I",
    "start": "774720",
    "end": "781399"
  },
  {
    "text": "called perf logging that used uh Google Trace events and I just used this thing and",
    "start": "781399",
    "end": "787959"
  },
  {
    "text": "put it in and measured the website and in doing so what I found is that the website upon loading requests a giant",
    "start": "787959",
    "end": "794760"
  },
  {
    "text": "blob of JavaScript and then request a second blob of JavaScript right afterwards like",
    "start": "794760",
    "end": "801079"
  },
  {
    "text": "that and then we started rendering and doing stuff and there was just this period of time in which we didn't have",
    "start": "801079",
    "end": "807320"
  },
  {
    "text": "to do like we could have waited for that like this didn't necessarily matter and this was just a ton of time taken just",
    "start": "807320",
    "end": "814480"
  },
  {
    "text": "an absolute huge amount of time taken and all you had to do was just simply make this in parallel it was just like",
    "start": "814480",
    "end": "821519"
  },
  {
    "text": "hey this is literally going to save us one second on Startup and all we had to do was just load a little bit of code to",
    "start": "821519",
    "end": "827920"
  },
  {
    "text": "see what was slow you know sometimes just the ability to load a little bit of code and do a little bit of logging can",
    "start": "827920",
    "end": "833519"
  },
  {
    "text": "make a huge difference in where you find these slow uh these slowdowns because dumb stuff like this happens all the",
    "start": "833519",
    "end": "838720"
  },
  {
    "text": "time right isn't that part of chrome Dev tools it can be but it was a little bit",
    "start": "838720",
    "end": "844440"
  },
  {
    "text": "different because it was uh it was is part of this application because I was trying to find out when am I going to",
    "start": "844440",
    "end": "849839"
  },
  {
    "text": "get the billboard to do stuff and so for me to find out this I had to kind of do different sets",
    "start": "849839",
    "end": "856320"
  },
  {
    "text": "of profiling and plus the hard part is is that you can't I mean Chrome Dev tools are great and all but I also want",
    "start": "856320",
    "end": "862680"
  },
  {
    "text": "to see what does it look like in production does that make sense like how long on my machine it takes some amount",
    "start": "862680",
    "end": "870160"
  },
  {
    "text": "of time and maybe this is some small amount of time maybe this is only 200 milliseconds and you've just never cared",
    "start": "870160",
    "end": "877120"
  },
  {
    "text": "but then all a sudden you look at it out in the real world and it's 2 seconds and you're like oh I really do want to care",
    "start": "877120",
    "end": "883079"
  },
  {
    "text": "real world measurements will always make you realize what is slow and fast and the things that sometimes are really",
    "start": "883079",
    "end": "888639"
  },
  {
    "text": "slow on your computer because you happen to have some M4 MacBook Pro it's not",
    "start": "888639",
    "end": "894880"
  },
  {
    "text": "even the network that slow it's actually like the CPU and you'll find that you just have these just giant CPU",
    "start": "894880",
    "end": "900040"
  },
  {
    "text": "bottlenecks where you just didn't think they existed you know like and it's not even the 99% it could be like 95% just",
    "start": "900040",
    "end": "906560"
  },
  {
    "text": "get a horrible experience or maybe even 90% And so this is again why it's always",
    "start": "906560",
    "end": "912040"
  },
  {
    "text": "good to just measure these seconds these things because you just don't know always always always build with a little",
    "start": "912040",
    "end": "919480"
  },
  {
    "text": "bit of extra information being logged and this is simple information right it's just a few integers there's no harm",
    "start": "919480",
    "end": "925480"
  },
  {
    "text": "in using boring simple methods if the results are right after all the fix is going to be in the application code uh",
    "start": "925480",
    "end": "932160"
  },
  {
    "text": "anyways also the good old trial and error method of modifying the code and seeing how the performance changes goes",
    "start": "932160",
    "end": "937240"
  },
  {
    "text": "a long way when all else fails you can always start the application with half the code commented out then switch to",
    "start": "937240",
    "end": "942680"
  },
  {
    "text": "the active code and binary binary search your way through the problem area I mean there is I mean this is why this is",
    "start": "942680",
    "end": "949759"
  },
  {
    "text": "why performance does make a lot of sense um you should be able to do a lot of",
    "start": "949759",
    "end": "955120"
  },
  {
    "text": "performance testing you shouldn't have to binary search your way around it there is there is V8 timings in which you can grab there are V8 Trace events",
    "start": "955120",
    "end": "962480"
  },
  {
    "text": "in which you can grab there's a open Telemetry is really really nice you can figure out some ways to like automate",
    "start": "962480",
    "end": "968120"
  },
  {
    "text": "this process a little bit more than than this I mean if you absolutely have no",
    "start": "968120",
    "end": "973360"
  },
  {
    "text": "idea what you're doing this is a very Scrappy and great way to go so I'm happy about that good job but there's usually",
    "start": "973360",
    "end": "981639"
  },
  {
    "text": "some tools to help you out okay usually some tools to help you out uh in this situation above adding this log line was",
    "start": "981639",
    "end": "987360"
  },
  {
    "text": "much more accurate and efficient way to finding the uh time to ready than trying to filter existing logs by the way I",
    "start": "987360",
    "end": "993279"
  },
  {
    "text": "also would suggest instead of logging at these different times I would suggest aggregating your times and then logging",
    "start": "993279",
    "end": "999519"
  },
  {
    "text": "one aggregation at the end and then accumulating your aggregations uh reason being is that a single log line does",
    "start": "999519",
    "end": "1006079"
  },
  {
    "text": "lock your whole system it adds startup time it adds a lot more noise than a post loading and everything's done log",
    "start": "1006079",
    "end": "1014079"
  },
  {
    "text": "event so i' i' prefer the aggregation over the inline logging and then trying",
    "start": "1014079",
    "end": "1019160"
  },
  {
    "text": "to parse that out plus inline logging also is just a lot harder to log out you know a single aggregation log to a",
    "start": "1019160",
    "end": "1025720"
  },
  {
    "text": "logging service and then just doing a select star you know select star all logs is a",
    "start": "1025720",
    "end": "1032280"
  },
  {
    "text": "lot easier is that true for console. time well anytime you're doing anything that involves the console and printing",
    "start": "1032280",
    "end": "1038160"
  },
  {
    "text": "you are you're you're hitting a mutex yes generally your log should collect and send and batch exactly",
    "start": "1038160",
    "end": "1044400"
  },
  {
    "text": "anytime you touch the out you're going to be hitting some level of a mutex",
    "start": "1044400",
    "end": "1050520"
  },
  {
    "text": "somewhere that's why like that's why uh console.log is slow it's not",
    "start": "1050520",
    "end": "1057080"
  },
  {
    "text": "fast it's never been fast it's never you don't even try to make it fast it's it's",
    "start": "1057080",
    "end": "1062440"
  },
  {
    "text": "slow right uh and it's okay that it's slow IO is slow it's always been slow",
    "start": "1062440",
    "end": "1067960"
  },
  {
    "text": "it's great to have cool dashboards and profilers but when you want a very specific answer sometimes adding logging is the way to go agree uh generally",
    "start": "1067960",
    "end": "1075880"
  },
  {
    "text": "agree uh generally what you want is you want your dashboards and your logging and everything to already contain this answer you shouldn't really want to be",
    "start": "1075880",
    "end": "1082799"
  },
  {
    "text": "in the place where you actually have to do handrolled logging to get out answers",
    "start": "1082799",
    "end": "1089039"
  },
  {
    "text": "instead you want to be able to do like dashboarding to where you can look at it week over week because here's because",
    "start": "1089039",
    "end": "1096039"
  },
  {
    "text": "here's something that happens that a lot of people don't know about is that or a lot of people I'm sure you know about it",
    "start": "1096039",
    "end": "1101080"
  },
  {
    "text": "you just don't realize it is that you end up having really bad performance so you fix it it drops down here and then",
    "start": "1101080",
    "end": "1106919"
  },
  {
    "text": "over the next 6 months of develop you're just doing this right it's slowly going up it's",
    "start": "1106919",
    "end": "1115080"
  },
  {
    "text": "slowly getting worse and worse and worse and you just don't realize this and so long-term monitoring of all of your",
    "start": "1115080",
    "end": "1121400"
  },
  {
    "text": "logging is really important if you find a log that allows you to improve your",
    "start": "1121400",
    "end": "1126480"
  },
  {
    "text": "startup time and you and you classify it as a Core Business metric get that into",
    "start": "1126480",
    "end": "1132320"
  },
  {
    "text": "a dashboard just so that way you can look at things if you put in a bunch of",
    "start": "1132320",
    "end": "1137600"
  },
  {
    "text": "logs and you realize it's not that important then don't put them in a dashboard right put the stuff you find important immediately into a dashboard",
    "start": "1137600",
    "end": "1144159"
  },
  {
    "text": "so you can review it a while later uh it's true that you shouldn't uh",
    "start": "1144159",
    "end": "1149360"
  },
  {
    "text": "be adding hundreds of log lines for every request handled so good rule of thumb is am I loging something I am",
    "start": "1149360",
    "end": "1155039"
  },
  {
    "text": "likely to care about next month facts in my case the startup times of our pods was always something we would care about",
    "start": "1155039",
    "end": "1161080"
  },
  {
    "text": "so is it easy yes I added above let's see I added the above login code and we uh and we dove",
    "start": "1161080",
    "end": "1166880"
  },
  {
    "text": "in treating LS as metrics with grafana Loki now every production check run was logging its time to receive but of",
    "start": "1166880",
    "end": "1173919"
  },
  {
    "text": "course a single measurement even dozens wouldn't give a clear pattern despite my simple unstructured log message I wanted",
    "start": "1173919",
    "end": "1179640"
  },
  {
    "text": "to be able to treat the report data as a metric that's where gra graphon Loki came in with graan Loki Lo log format",
    "start": "1179640",
    "end": "1186679"
  },
  {
    "text": "method I could use real log ql Expressions similar to promql to query the unstructured data and treat it as a",
    "start": "1186679",
    "end": "1192760"
  },
  {
    "text": "metric ah beautiful graa and beautiful that",
    "start": "1192760",
    "end": "1199360"
  },
  {
    "text": "uh the team absolutely love this since it means you don't have to be a regular expression genius to Lo uh to query your",
    "start": "1199360",
    "end": "1204559"
  },
  {
    "text": "logs and chart the results another hidden bonus of log for you can always put many values in a single log line",
    "start": "1204559",
    "end": "1211159"
  },
  {
    "text": "these are all true pre-read a lot of pre- RADS going on here lot of pre RADS for this article uh with this new",
    "start": "1211159",
    "end": "1216760"
  },
  {
    "text": "measurement in place we found startup times of about 3 seconds this this seemed extremely high 3 seconds feels",
    "start": "1216760",
    "end": "1223440"
  },
  {
    "text": "like it's a long time if that's especially since that's not considering download time right this is only",
    "start": "1223440",
    "end": "1229720"
  },
  {
    "text": "application execution time I had estimated that JavaScript",
    "start": "1229720",
    "end": "1235360"
  },
  {
    "text": "pods would take about 1 seconds to be ready I wonder how you estimated that at this point I started to get concerned",
    "start": "1235360",
    "end": "1240919"
  },
  {
    "text": "about the experience for new users of checkle while the vast majority of checkle monitor checks uh runs happen on",
    "start": "1240919",
    "end": "1248120"
  },
  {
    "text": "a schedule when a new users are setting up checks or developers are experimenting uh experimenting checks",
    "start": "1248120",
    "end": "1253280"
  },
  {
    "text": "the user is waiting for the moment they schedule a check to the moment they have results we called this scheduling day",
    "start": "1253280",
    "end": "1258760"
  },
  {
    "text": "and it's critical that our uh for our user experience I didn't really need motivation to solve this problem but",
    "start": "1258760",
    "end": "1264679"
  },
  {
    "text": "this was another reason this delay had to be resolved okay I mean I like this graphon",
    "start": "1264679",
    "end": "1270400"
  },
  {
    "text": "plus Prometheus equals a love in my case I don't I haven't used Prometheus all right fix two changing",
    "start": "1270400",
    "end": "1276559"
  },
  {
    "text": "the order of operations we shifted our order of operations to optimize performance rather than having a message in the queue to be triggered to start",
    "start": "1276559",
    "end": "1282880"
  },
  {
    "text": "the container instead we had a container start internally then take a message from the queue this meant that the over",
    "start": "1282880",
    "end": "1288880"
  },
  {
    "text": "or the overlong startup time no longer affected the user experience directly up hold on just one second all right sorry",
    "start": "1288880",
    "end": "1295039"
  },
  {
    "text": "I had to do some yapping all right so this by the way this is a great this is a great way to do this this is like",
    "start": "1295039",
    "end": "1301720"
  },
  {
    "text": "right away this is much much better instead of starting your like instead of having the process start due to an",
    "start": "1301720",
    "end": "1307880"
  },
  {
    "text": "incoming message have this have something start and wait for a message to become available to me this is like",
    "start": "1307880",
    "end": "1314279"
  },
  {
    "text": "obviously a significantly better way of doing things I mean you you literally",
    "start": "1314279",
    "end": "1319880"
  },
  {
    "text": "remove all the download time you remove like all of the stuff right this meant that the over long startup time but I",
    "start": "1319880",
    "end": "1326480"
  },
  {
    "text": "assume that also scaling and stuff becomes a little bit more tricky this meant that the overlong startup time no",
    "start": "1326480",
    "end": "1332880"
  },
  {
    "text": "longer affected the user experience directly however it didn't actually solve the suspiciously long startup time",
    "start": "1332880",
    "end": "1338279"
  },
  {
    "text": "uh excess time to prepare the Pod was no longer affecting users but it still affected our AWS Bill finding the time",
    "start": "1338279",
    "end": "1344200"
  },
  {
    "text": "of uh slow let's see Finding uh time to find the cause of slow starts monkey",
    "start": "1344200",
    "end": "1349720"
  },
  {
    "text": "patching require when when the guy told us that he was going to do something that people say is an anti- pattern I",
    "start": "1349720",
    "end": "1355960"
  },
  {
    "text": "didn't disagree with him now I'm fully agreeing with him if you're munchy if you're monkey patching require I feel",
    "start": "1355960",
    "end": "1361840"
  },
  {
    "text": "like you're done you're done effed up when a pod starts and takes a while to get ready required packages are usually",
    "start": "1361840",
    "end": "1367159"
  },
  {
    "text": "the culprit one teammate suggested using a bundler to remove unnecessary components but that had its own technical lift you know one funny thing",
    "start": "1367159",
    "end": "1373760"
  },
  {
    "text": "you can also do you can also wrap all of your functions if you really need to do",
    "start": "1373760",
    "end": "1379000"
  },
  {
    "text": "that you can always have a function that you export right that then if you really want to get disgusting that then require",
    "start": "1379000",
    "end": "1386640"
  },
  {
    "text": "in or Imports in your stuff I know that's like super disgusting okay I'm not saying it's great but I'm just",
    "start": "1386640",
    "end": "1393000"
  },
  {
    "text": "saying you can do quite a bit of things here you can get you can get real crazy",
    "start": "1393000",
    "end": "1399039"
  },
  {
    "text": "you can get real real real crazy out there uh literally compile cach you're I",
    "start": "1399039",
    "end": "1405720"
  },
  {
    "text": "know doesn't the compiler do this uh for optimization already yo this is",
    "start": "1405720",
    "end": "1411720"
  },
  {
    "text": "Javascript there is no compiler okay is the compiler in the room with you right now there",
    "start": "1411720",
    "end": "1418799"
  },
  {
    "text": "isn't there's no compiler the compiler's not in the room because the compiler",
    "start": "1418799",
    "end": "1424480"
  },
  {
    "text": "doesn't exist okay Borland is the only real compilers let's go g it exists in",
    "start": "1424480",
    "end": "1430480"
  },
  {
    "text": "my heart that's very that's beautiful there is no compil there is no compil whoa",
    "start": "1430480",
    "end": "1436080"
  },
  {
    "text": "there is no compiler uh without a clear path forward I tried something straightforward to see what might be",
    "start": "1436080",
    "end": "1441279"
  },
  {
    "text": "causing delays in the startup this is where profiling like node literally has a profiler for this you're going to have",
    "start": "1441279",
    "end": "1446799"
  },
  {
    "text": "to mock out a couple things it totally sucks not great but this is also just a great time to realize that if you can't",
    "start": "1446799",
    "end": "1452440"
  },
  {
    "text": "run your stuff in isolation or as like a performance test or as a simulation you know you should be building things that",
    "start": "1452440",
    "end": "1458360"
  },
  {
    "text": "you can test easily I would always I'm not a big fan of tdd but I'm a big fan of setting up a project to be testable",
    "start": "1458360",
    "end": "1466520"
  },
  {
    "text": "right as one of the very first things I do is I really try to think of where and how I'm going to test this project as I",
    "start": "1466520",
    "end": "1472640"
  },
  {
    "text": "build it cuz if I don't I know eventually I'm going to regret it not a tdd guy not a titty guy okay no not just",
    "start": "1472640",
    "end": "1481240"
  },
  {
    "text": "not no titties for me but tdd TD t t tdd tdd gosh now you guys I can't stop",
    "start": "1481240",
    "end": "1488360"
  },
  {
    "text": "saying titty you guys got titties on my brain now okay I tdd is not great I",
    "start": "1488360",
    "end": "1493919"
  },
  {
    "text": "don't think but I do love setting things up to run okay so like for those that",
    "start": "1493919",
    "end": "1500960"
  },
  {
    "text": "have been with me as I've been doing um the Vim with me uh you know like that's why we have this whole Zig a build Sim",
    "start": "1500960",
    "end": "1508000"
  },
  {
    "text": "and that's simply so that I can take it and we've built this this entire way to be able to build out all of our entire",
    "start": "1508000",
    "end": "1514799"
  },
  {
    "text": "Zig program right now I'm doing a release fast one and so I can run simulations of the Tower Defense over and over and over again right and so the",
    "start": "1514799",
    "end": "1521559"
  },
  {
    "text": "Tower Defense can be simulated constantly which I think is really the way to go which is to pursue non stop",
    "start": "1521559",
    "end": "1529760"
  },
  {
    "text": "the ability to test look at that see the time it's going up see it's going up to 7 Seconds",
    "start": "1529760",
    "end": "1535640"
  },
  {
    "text": "all that and for me I was really happy about this because that means that I built something that's actually really really good you know I built something",
    "start": "1535640",
    "end": "1542000"
  },
  {
    "text": "that I know for a fact that if there's some sort of uh assertion that I I have goofed up some sort of problem that I've",
    "start": "1542000",
    "end": "1548440"
  },
  {
    "text": "done then I know I can catch it with asserts uh and I mean technically I can do a genetic algorithm I actually think",
    "start": "1548440",
    "end": "1554279"
  },
  {
    "text": "genetic algorithm is actually a pretty interesting approach to solving this problem I am conf I I am considering doing a",
    "start": "1554279",
    "end": "1560720"
  },
  {
    "text": "genetic algorithm even though it's totally Overkill and it's probably the wrong thing to do I love the idea of",
    "start": "1560720",
    "end": "1566760"
  },
  {
    "text": "doing of treating my config as just a pure blob of",
    "start": "1566760",
    "end": "1571880"
  },
  {
    "text": "binary and then do a genetic search across the binary a search are greater than unit test yes but you have to have",
    "start": "1571880",
    "end": "1579399"
  },
  {
    "text": "you have to have simulations then right you have to be able to like go nuts you have to be able to like do optimization",
    "start": "1579399",
    "end": "1585000"
  },
  {
    "text": "runs right and so that's what we're going to be doing is I'm going to be doing a lot of optimization runs on this to make it so it's really good yeah it's",
    "start": "1585000",
    "end": "1591159"
  },
  {
    "text": "hard but I mean that's the thing is if you done if you've done enough building you will always build a program that is",
    "start": "1591159",
    "end": "1598360"
  },
  {
    "text": "ready to be tested and then there's some things that you know are very hard to test like purely front-end visualization",
    "start": "1598360",
    "end": "1604320"
  },
  {
    "text": "is really really hard to test it just is that's why this little food. Json thing that we have running right here if I",
    "start": "1604320",
    "end": "1610320"
  },
  {
    "text": "jump in here I only made the visualization of it as like you know just something I can look at so I can",
    "start": "1610320",
    "end": "1615880"
  },
  {
    "text": "literally go uh false and then then it's not it's it's not even it's not even uh",
    "start": "1615880",
    "end": "1622080"
  },
  {
    "text": "what's it called visualized at all and so that way I'm just running the logic of the game area right and so you can",
    "start": "1622080",
    "end": "1628520"
  },
  {
    "text": "see this is all the different timings it took to run everything there you go those are all the different uh what's it",
    "start": "1628520",
    "end": "1633880"
  },
  {
    "text": "called milliseconds to run each game right so nice and fast I still think I can go a lot faster but it's because I",
    "start": "1633880",
    "end": "1639640"
  },
  {
    "text": "know for a fact that the UI is really really hard so I never made the UI something that would be something I want",
    "start": "1639640",
    "end": "1645320"
  },
  {
    "text": "I just bolted it on if I needed it our frontend test web dev just with Ed yeah yeah front end I mean the thing the",
    "start": "1645320",
    "end": "1650840"
  },
  {
    "text": "hardest part about front-end testing is that with front end testing you have to be able to set up an actual front end right you have to have an actual browser",
    "start": "1650840",
    "end": "1657080"
  },
  {
    "text": "run which makes it super super hard the nice part about building a game though is that there's there's this idea of",
    "start": "1657080",
    "end": "1663000"
  },
  {
    "text": "game State and then game rendering and those are two completely separate things so it actually becomes excessively easy",
    "start": "1663000",
    "end": "1669240"
  },
  {
    "text": "to do or when I say excessively easy what I mean by that is that it's very easy to build and run a simulation",
    "start": "1669240",
    "end": "1676720"
  },
  {
    "text": "without a UI whereas with JavaScript and especially like I mean this is one of those things",
    "start": "1676720",
    "end": "1682000"
  },
  {
    "text": "that I've always hated about uh what I've always hated about about react is",
    "start": "1682000",
    "end": "1688240"
  },
  {
    "text": "that with react you tie in effectively your game State into your rendering your",
    "start": "1688240",
    "end": "1694480"
  },
  {
    "text": "rendering is also the place that you do all your business logic together there's not this kind of like dual state which",
    "start": "1694480",
    "end": "1699919"
  },
  {
    "text": "personally I find easier like me the engineer I find a lot easier to have",
    "start": "1699919",
    "end": "1705440"
  },
  {
    "text": "state change rendering change and that's kind of like the the whole idea of react",
    "start": "1705440",
    "end": "1710480"
  },
  {
    "text": "was to actually have this right like you can see the game development or the elm styled architecture uh in react you can",
    "start": "1710480",
    "end": "1717000"
  },
  {
    "text": "see exactly where it came from which I mean the goal of react was to be like that right you have your data it",
    "start": "1717000",
    "end": "1724279"
  },
  {
    "text": "performs a change and then react can then render and like this is the whole point of should component update and all",
    "start": "1724279",
    "end": "1729600"
  },
  {
    "text": "that was I mean that literally was the entirety of it is that you can actually have this nice feel to everything so you",
    "start": "1729600",
    "end": "1735200"
  },
  {
    "text": "could do these really simple changes and so I'm not saying it's bad uh I",
    "start": "1735200",
    "end": "1740279"
  },
  {
    "text": "never the idea of react is not bad it's just that the implementation ends up you just mixing",
    "start": "1740279",
    "end": "1746440"
  },
  {
    "text": "so intense these two things that you can no longer test your code without running your",
    "start": "1746440",
    "end": "1753279"
  },
  {
    "text": "UI and then testing that becomes excessively hard and then you just don't",
    "start": "1753279",
    "end": "1758840"
  },
  {
    "text": "test it right you just don't test it that's what I know a lot of people I know it's skill issues oh it's certainly",
    "start": "1758840",
    "end": "1764440"
  },
  {
    "text": "skill issues everything is skill issues all things come boiled down to skill issues I'm just saying some of them are",
    "start": "1764440",
    "end": "1771760"
  },
  {
    "text": "just easier to avoid than others there's this whole idea of what is called the pit of success and some programs have a",
    "start": "1771760",
    "end": "1779320"
  },
  {
    "text": "large pit of success some programs have a little pit of",
    "start": "1779320",
    "end": "1785039"
  },
  {
    "text": "success you know what I mean it's confusing it's just something you should know okay so let's talk about this whole",
    "start": "1785039",
    "end": "1791640"
  },
  {
    "text": "monkey patching require because this is uh this is very interesting when a pod starts and takes a while to get ready",
    "start": "1791640",
    "end": "1796919"
  },
  {
    "text": "requir packages are usually the culprit one teammate suggested using a bundler to remove unnecessary components but",
    "start": "1796919",
    "end": "1802399"
  },
  {
    "text": "that had its own technical lift without a clear path forward by the way if you Minify your server code your server code",
    "start": "1802399",
    "end": "1809720"
  },
  {
    "text": "will start faster welcome to interpreted languages people uh without a clear path",
    "start": "1809720",
    "end": "1815519"
  },
  {
    "text": "forward I tried something straightforward to see what might be causing the delays in startup the first thing that I suspected was external",
    "start": "1815519",
    "end": "1822200"
  },
  {
    "text": "modules as the culprit so I added the following snippet with a DOT prefix filter okay okay interesting again",
    "start": "1822200",
    "end": "1829760"
  },
  {
    "text": "aggregate your times always good to aggregate because that way you can actually run this test in um you can",
    "start": "1829760",
    "end": "1835600"
  },
  {
    "text": "actually run this test in production get a bunch of it and then do something with it you know what",
    "start": "1835600",
    "end": "1842440"
  },
  {
    "text": "I mean uh for some trial and a I found that the source of the longest required times were the AWS SDK that's right the",
    "start": "1842440",
    "end": "1848440"
  },
  {
    "text": "same SDK that we optimized previously we already done our best what could possibly cause bloated required times",
    "start": "1848440",
    "end": "1855279"
  },
  {
    "text": "here we go the one weird trick with required to off your pod startups by the way I I just assume this is not going to",
    "start": "1855279",
    "end": "1860639"
  },
  {
    "text": "be good advice it's going to be awesome we're going to read it and we're going to love",
    "start": "1860639",
    "end": "1865720"
  },
  {
    "text": "the scrappy nature of it and I'm going to be super happy that they're doing it but I think that it's not going to be an",
    "start": "1865720",
    "end": "1872320"
  },
  {
    "text": "overall good thing uh when you run an npm install command while working with code npm automatically grabs the current",
    "start": "1872320",
    "end": "1877799"
  },
  {
    "text": "version of the package and adds it to the uh module package.json file as modules uh have been added throughout",
    "start": "1877799",
    "end": "1884000"
  },
  {
    "text": "your development process there were a large variety of a AWS SDK versions",
    "start": "1884000",
    "end": "1889039"
  },
  {
    "text": "required in different package.json files oh this must be some sort of monoo issue as we moved uh to only requiring subm",
    "start": "1889039",
    "end": "1896080"
  },
  {
    "text": "modules there were a large variety of versions referenced then before this innocuous code uh in one of our",
    "start": "1896080",
    "end": "1903320"
  },
  {
    "text": "files oh dang yeah yeah yeah yeah yeah yeah yeah yeah yeah yeah yeah yeah so I",
    "start": "1903320",
    "end": "1909760"
  },
  {
    "text": "guarantee you this AWS each one of these little sub so I I think I can guess what's happening right",
    "start": "1909760",
    "end": "1915360"
  },
  {
    "text": "now is what's happening right now like before we go on I bet I can guess is that each one of these there's like a",
    "start": "1915360",
    "end": "1922200"
  },
  {
    "text": "core of AWS SDK that exists for all of these and they all requireing some amount of common code so when you have a",
    "start": "1922200",
    "end": "1929679"
  },
  {
    "text": "whole bunch of these different little subm modules and they're all at different versions you're going to require the same code in over and over",
    "start": "1929679",
    "end": "1938600"
  },
  {
    "text": "and over and over again for every different little sub package it's like",
    "start": "1938600",
    "end": "1944120"
  },
  {
    "text": "the classic burn right this is this is the classic Oopsy",
    "start": "1944120",
    "end": "1950200"
  },
  {
    "text": "Daisy dating all the way back to like Bower days you remember good old fashion",
    "start": "1950200",
    "end": "1956240"
  },
  {
    "text": "Bower days have you ever had low Dash Oopsy Daisy from npm and from Bower this guy did this guy did so esm uh have",
    "start": "1956240",
    "end": "1964960"
  },
  {
    "text": "import caching no it does you're you're just un you're you're misunderstanding the problem you this version and this",
    "start": "1964960",
    "end": "1971080"
  },
  {
    "text": "version are two different versions of the code right you cannot cash that you",
    "start": "1971080",
    "end": "1976600"
  },
  {
    "text": "cannot cash that because each one could be slightly different low Dash oopsi a lot low Dash",
    "start": "1976600",
    "end": "1983320"
  },
  {
    "text": "was the source of a third of the internet traffic uh at one point so long gab B dude that's actually",
    "start": "1983320",
    "end": "1990760"
  },
  {
    "text": "pretty funny to this day I'm pretty sure that's what Mario says um let's see is",
    "start": "1990760",
    "end": "1996679"
  },
  {
    "text": "actually requesting four different versions of the SDK from Amazon or AWS internals the AWS SDK V3 is modularized",
    "start": "1996679",
    "end": "2003600"
  },
  {
    "text": "also internally it consists of many smaller package for utilities like retries authentication marshalling Etc",
    "start": "2003600",
    "end": "2009320"
  },
  {
    "text": "using four different versions of the AWS SDK clients meant that internally they couldn't reuse their own dependencies a",
    "start": "2009320",
    "end": "2016240"
  },
  {
    "text": "later call to a different version means that AWS can't reuse the internal package they had already been fetched it",
    "start": "2016240",
    "end": "2021880"
  },
  {
    "text": "turns out that setting all these variations to the same version significantly reduced our startup times to go back to the beginning",
    "start": "2021880",
    "end": "2028279"
  },
  {
    "text": "interpretation is a very expensive activity if you wish to have fast startup times I would suggest a language",
    "start": "2028279",
    "end": "2034440"
  },
  {
    "text": "that compiles cuz remember jitting is a natur natural part of an interpreted language engine parsing text is a",
    "start": "2034440",
    "end": "2042279"
  },
  {
    "text": "natural part of an interpreted language engine taking text and turning it into bite code and then executing the bite",
    "start": "2042279",
    "end": "2048878"
  },
  {
    "text": "code is a natural part of an interpreted engine so if you're going to be doing",
    "start": "2048879",
    "end": "2054878"
  },
  {
    "text": "this just remember you choose JavaScript because your team thinks it's easy and you feel like you can move fast but it",
    "start": "2054879",
    "end": "2061919"
  },
  {
    "text": "comes at a cost and it will always come at a cost ease in one area means difficulty in another area if you choose",
    "start": "2061919",
    "end": "2069000"
  },
  {
    "text": "to have Simplicity and not having to think about any of your types and being able to adjust any anything that you",
    "start": "2069000",
    "end": "2074200"
  },
  {
    "text": "want to or just simply as user all you want that's fine it just comes out a",
    "start": "2074200",
    "end": "2079800"
  },
  {
    "text": "cost I think that it will come like Zod Zod is not free Zod is not free you want",
    "start": "2079800",
    "end": "2086118"
  },
  {
    "text": "to just absolutely Screech your server to a halt as far as request per second",
    "start": "2086119",
    "end": "2091919"
  },
  {
    "text": "go use Zod problem is you kind of have to use Zod because you don't get parsing when you Jon uh parse you don't or you",
    "start": "2091919",
    "end": "2099119"
  },
  {
    "text": "don't get validation when you Json parse like these things all cost somewhere they just cost somewhere else now what",
    "start": "2099119",
    "end": "2106720"
  },
  {
    "text": "you get with go is go you actually have to you have to think about your types ahead of time and you have to handle",
    "start": "2106720",
    "end": "2112880"
  },
  {
    "text": "errors when you can't parse into the shape you expect like that's a real",
    "start": "2112880",
    "end": "2118400"
  },
  {
    "text": "problem uh heterogeneous lists are extremely difficult in something like go",
    "start": "2118400",
    "end": "2123560"
  },
  {
    "text": "very easy in something like rust but very difficult in go you have to pay the price and you have to understand how to",
    "start": "2123560",
    "end": "2129920"
  },
  {
    "text": "pay them they're just going to be different this simplistic update drastically reduced our startup times",
    "start": "2129920",
    "end": "2134960"
  },
  {
    "text": "300 millisecs equals a whole lot of cost savings the average changes were deployed we had this beautiful graph to",
    "start": "2134960",
    "end": "2140280"
  },
  {
    "text": "look at that's beautiful now imagine if you could drop this by another 500 millisecond 700 milliseconds could save",
    "start": "2140280",
    "end": "2147560"
  },
  {
    "text": "also a lot more money can I pay $100 so these problems off you C you do you pay $100 and sometimes you pay that $100",
    "start": "2147560",
    "end": "2154880"
  },
  {
    "text": "50 to 500 times a month it's just what happens it's just a trade-off right this like when people",
    "start": "2154880",
    "end": "2161520"
  },
  {
    "text": "talk about trade-offs this is actual engineering tradeoffs see these other trade-offs where people talk about oh",
    "start": "2161520",
    "end": "2167520"
  },
  {
    "text": "choose the best tool for the job and all this it's just when people people say that they just want to use",
    "start": "2167520",
    "end": "2172680"
  },
  {
    "text": "the tool they want to use and that's that okay it's not even an argument it's not even a discussion it's not even a",
    "start": "2172680",
    "end": "2177800"
  },
  {
    "text": "theoretical thing it's just simply I want to use what I want to use and that's that this on the other hand is",
    "start": "2177800",
    "end": "2183200"
  },
  {
    "text": "you could put a number to it you could actually say if we just use go we will save this amount of dollars per month is",
    "start": "2183200",
    "end": "2190079"
  },
  {
    "text": "this worth it is $12,000 $155,000 a month Worth US using go oh you like go",
    "start": "2190079",
    "end": "2197119"
  },
  {
    "text": "and you're okay with it oh you like rust and you're okay with it well we could use rust that could also save us the same amount of money I want to learn",
    "start": "2197119",
    "end": "2203240"
  },
  {
    "text": "rust let's use rust together instead of go everyone can clap they're all happy or maybe they use go or use Zig or use",
    "start": "2203240",
    "end": "2210119"
  },
  {
    "text": "anything else and blot a blah blah blah these optimization stories are so addictive they're so addictive because",
    "start": "2210119",
    "end": "2215760"
  },
  {
    "text": "we can all see ourselves making discovering this and realizing how silly this all is right like we all can see",
    "start": "2215760",
    "end": "2221880"
  },
  {
    "text": "this right away how silly these things are they're just simple additives problems right uh go is always worth",
    "start": "2221880",
    "end": "2229200"
  },
  {
    "text": "using yeah I generally love go a whole bunch I find go to be a very great language much better than I thought it was I actually thought I would think a",
    "start": "2229200",
    "end": "2235480"
  },
  {
    "text": "go is super boring and I actually wouldn't like using it I could just use it to prove to myself that I like it",
    "start": "2235480",
    "end": "2240560"
  },
  {
    "text": "instead I found that I actually like go and once you get done using it for a few months you find these ways of using go",
    "start": "2240560",
    "end": "2247119"
  },
  {
    "text": "that feel easier now not all goes easy right pods were ready to receive in about half the time they took before",
    "start": "2247119",
    "end": "2253960"
  },
  {
    "text": "saving let's see uh before saving about 300 milliseconds at startup what effect did this change have on our bottom line",
    "start": "2253960",
    "end": "2259800"
  },
  {
    "text": "when pods aren't ready to receive requests we start up more ephemeral pods to handle workload the shortened startup",
    "start": "2259800",
    "end": "2265240"
  },
  {
    "text": "time added up quickly and soon we were running at about 25% fewer pods than before the change nice the result",
    "start": "2265240",
    "end": "2271200"
  },
  {
    "text": "savings were about $55,000 per month okay I mean that's a lot and if you expect your business to double like that",
    "start": "2271200",
    "end": "2277520"
  },
  {
    "text": "number will linearly grow with your business likely or at least some form of linear I assume it wouldn't super",
    "start": "2277520",
    "end": "2282960"
  },
  {
    "text": "linearly grow it would just probably be some X you know C ofx it is truly outstanding how changing a few version",
    "start": "2282960",
    "end": "2289119"
  },
  {
    "text": "numbers in a package. Json could save thousands of dollars every month but the real story is how combination of",
    "start": "2289119",
    "end": "2294319"
  },
  {
    "text": "observability techniques can reveal root causes in surprising places if you take your time to engage your curiosity",
    "start": "2294319",
    "end": "2300200"
  },
  {
    "text": "you'll find efficiencies in surprising places even the way you require sdks um",
    "start": "2300200",
    "end": "2305599"
  },
  {
    "text": "I I would actually be I would still will be very very interesting or interested in if if instead of using like console",
    "start": "2305599",
    "end": "2312200"
  },
  {
    "text": "logging just to be able to run this program offline attach um the profiler right because you can get like the",
    "start": "2312200",
    "end": "2318079"
  },
  {
    "text": "performance profiler if you could have seen the same things with already built-in tools and there's a part twoo",
    "start": "2318079",
    "end": "2323599"
  },
  {
    "text": "apparently coming at some point anyways great article I I I mean I like I like the scrappiness of it I like that I like",
    "start": "2323599",
    "end": "2329640"
  },
  {
    "text": "that he solved a real problem even without using tools that I think an average person might have used like he",
    "start": "2329640",
    "end": "2336480"
  },
  {
    "text": "still figured it out and for me this is a great example of the ability to solve",
    "start": "2336480",
    "end": "2342480"
  },
  {
    "text": "hard problems even when you don't have the skill set to solve the hard problems I think yeah peretto uh or the",
    "start": "2342480",
    "end": "2348960"
  },
  {
    "text": "performance tab or any of that would have probably told you all of this information right away but the fact that",
    "start": "2348960",
    "end": "2354400"
  },
  {
    "text": "he solved it not knowing any of those like not knowing any of those tools to me is just like a just this is what I",
    "start": "2354400",
    "end": "2361560"
  },
  {
    "text": "this is what I consider a great engineer right you can solve hard problems no matter what okay even if",
    "start": "2361560",
    "end": "2369359"
  },
  {
    "text": "you're ill equipped you still solve the problems very impressive very very impressive Yan like",
    "start": "2369359",
    "end": "2375560"
  },
  {
    "text": "it a lot all right hey the name the name is I like this I like these articles they're always so great they are addicting because it's great to to hear",
    "start": "2375560",
    "end": "2382040"
  },
  {
    "text": "kind of people's opinions uh and it also shows why finops has value as a starting point fops has a value at starting point",
    "start": "2382040",
    "end": "2389160"
  },
  {
    "text": "every single time know how much money you spend is never a bad problem to have",
    "start": "2389160",
    "end": "2394800"
  },
  {
    "text": "it also likely money you spend is also probably correlated to things your customers will enjoy so if you start",
    "start": "2394800",
    "end": "2400640"
  },
  {
    "text": "spending less money you'll probably also find that your customers get faster creamier smoother",
    "start": "2400640",
    "end": "2406760"
  },
  {
    "text": "experiences or no experience if you just don't serve them if you just serve them nothing you'll also have lower bills I",
    "start": "2406760",
    "end": "2413000"
  },
  {
    "text": "wouldn't suggest that one but typically the better your you know the better your finops are probably the better your",
    "start": "2413000",
    "end": "2419200"
  },
  {
    "text": "customer experiences are so not a bad idea to relate those two things together",
    "start": "2419200",
    "end": "2424760"
  },
  {
    "text": "I don't know if I said my last part of my name but aen",
    "start": "2424760",
    "end": "2429000"
  }
]