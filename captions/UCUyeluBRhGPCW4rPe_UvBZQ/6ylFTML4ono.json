[
  {
    "text": "look at this fish 4.0 released today has officially removed",
    "start": "440",
    "end": "7439"
  },
  {
    "text": "all of C++ and gone straight to rust that's right hey that's right officially",
    "start": "7439",
    "end": "14519"
  },
  {
    "text": "we have a product shipped and rust people we have something shipped in Rust no more white papers it's been done",
    "start": "14519",
    "end": "20960"
  },
  {
    "text": "we're in production let's go it has happened check the blog it hit me with the blog what's the blog it's over",
    "start": "20960",
    "end": "27039"
  },
  {
    "text": "everybody C++ is officially dead C++ is officially dead hold on article nice all",
    "start": "27039",
    "end": "35480"
  },
  {
    "text": "right let's look at this let's look at this bad boy oh this is from a little bit ago right so this is from a little bit ago I actually used to work with",
    "start": "35480",
    "end": "40960"
  },
  {
    "text": "this guy he uh sat right next to me the ridiculous fish he's a very nice guy by the way very nice guy um uh officially",
    "start": "40960",
    "end": "48000"
  },
  {
    "text": "got him fish for those that don't know is an alternative shell uh in which actually has its own kind of language",
    "start": "48000",
    "end": "53239"
  },
  {
    "text": "apparently which is instead of bash because bash is a pretty horrible language apparently fish is actually a",
    "start": "53239",
    "end": "58280"
  },
  {
    "text": "really great experience it's just that again you know anytime you have these non conforming um what's it called uh",
    "start": "58280",
    "end": "65560"
  },
  {
    "text": "languages to bash you can see why that would be a very negative thing you I I think we can all understand why we",
    "start": "65560",
    "end": "70720"
  },
  {
    "text": "wouldn't like that uh because then it's like a it's not posix you can't uh all the these other scripts are going to",
    "start": "70720",
    "end": "76600"
  },
  {
    "text": "have all these problems blah blah blah blah but apparently the language of fish is so dang good and the experience of",
    "start": "76600",
    "end": "82079"
  },
  {
    "text": "fish is so dang good that it's nicer to just use fish and accept the fact that you're missing out on some things and",
    "start": "82079",
    "end": "88200"
  },
  {
    "text": "that's it right and so apparently pretty awesome and Peter by the way the Peter or ridiculous fish awesome guy awesome",
    "start": "88200",
    "end": "94720"
  },
  {
    "text": "guy about two years ago our head maintainer ridiculous fish opened what quickly became our most uh read poll",
    "start": "94720",
    "end": "100320"
  },
  {
    "text": "request ever right there truth be told we did not quite expect that uh to be as",
    "start": "100320",
    "end": "105399"
  },
  {
    "text": "popular as it was it was written as a bit of an in joke for the fish developers first and not really a press",
    "start": "105399",
    "end": "111399"
  },
  {
    "text": "release to be shared far and wide we didn't post it anywhere but other people did and it got a lot of reactions",
    "start": "111399",
    "end": "116719"
  },
  {
    "text": "observant readers will note that the pr was a proposal to rewrite the entirety of fish in rust from C++ fish is no",
    "start": "116719",
    "end": "124079"
  },
  {
    "text": "stranger to language changes it was ported from Pure C to C++ earlier in its life obviously this is what see there it",
    "start": "124079",
    "end": "130039"
  },
  {
    "text": "goes that's the real problem it was ported from the superior C experience to",
    "start": "130039",
    "end": "136000"
  },
  {
    "text": "the inferior C++ experience and then obviously obviously it's going to be",
    "start": "136000",
    "end": "141040"
  },
  {
    "text": "then ported to rust I mean don't you see what's happening here big industrial rust convinces C projects to convert to",
    "start": "141040",
    "end": "149040"
  },
  {
    "text": "C++ such that they're ready and primed for a language that has way too many features",
    "start": "149040",
    "end": "156280"
  },
  {
    "text": "and completely too many foot guns just for you to be able to then save them this is called White nighting this is",
    "start": "156280",
    "end": "162879"
  },
  {
    "text": "toxic white nighting we know what happens here scandalous absolutely scandalous approved by the US government",
    "start": "162879",
    "end": "169280"
  },
  {
    "text": "but this was much bigger project porting to a much more different language that didn't even exist when fish was started",
    "start": "169280",
    "end": "174760"
  },
  {
    "text": "in 2007 now that we have released a the beta fish 40 containing 0% % C++ and",
    "start": "174760",
    "end": "180720"
  },
  {
    "text": "almost 100% pure rust let's look back to see what we've learned uh and what went",
    "start": "180720",
    "end": "186200"
  },
  {
    "text": "well and what could have gone better and what we can do now we are writing this so others can learn from our experience",
    "start": "186200",
    "end": "192360"
  },
  {
    "text": "but it is our experience and not an exhaustive study we hope that you'll be able to follow along even if you have never written any rust but experience",
    "start": "192360",
    "end": "199000"
  },
  {
    "text": "with a roughly C++ shaped language would help all right uh this is America second",
    "start": "199000",
    "end": "204120"
  },
  {
    "text": "amendment guarantees my access to foot guns okay I demand foot guns in every",
    "start": "204120",
    "end": "210040"
  },
  {
    "text": "citizens hands right now um gosh I I'm getting canceled just",
    "start": "210040",
    "end": "218080"
  },
  {
    "text": "cancel me now my foot guns all right I'm going to be right back I got a pee I didn't plan this out I I I I got a",
    "start": "218080",
    "end": "227280"
  },
  {
    "text": "pee rust guys am I right oh sh I gotta go",
    "start": "228840",
    "end": "235280"
  },
  {
    "text": "PE by the way TJ's going to join for the next one and we'll do one Co react article okay sounds good brother that",
    "start": "235280",
    "end": "243079"
  },
  {
    "text": "ball has seen some things yeah mostly my ass um uh let's see oh yeah by the way for those that haven't figured out",
    "start": "243079",
    "end": "248599"
  },
  {
    "text": "what's happening fish 40 was released today so therefore this is the uh this",
    "start": "248599",
    "end": "254720"
  },
  {
    "text": "is just talking about it being in B beta and now it's moved from beta to the next thing yeah TJ's literally in my house",
    "start": "254720",
    "end": "260239"
  },
  {
    "text": "random TJ spotting was awesome two guys one article exactly let's see we've experienced some pain with C++ in short",
    "start": "260239",
    "end": "266240"
  },
  {
    "text": "tools and compilers platform differences ergonomics and thread safety",
    "start": "266240",
    "end": "271720"
  },
  {
    "text": "Community I am I the community being one of the pain",
    "start": "278280",
    "end": "285680"
  },
  {
    "text": "points it's just so funny I will say that my short time I only programmed C++",
    "start": "285680",
    "end": "290880"
  },
  {
    "text": "like professionally uh of the last eight years I probably Pro uh programmed like two of them two two years with C++",
    "start": "290880",
    "end": "298400"
  },
  {
    "text": "during that time every time I made anything is just like actually you should be able to do it this way this way is much much better actually what",
    "start": "298400",
    "end": "304479"
  },
  {
    "text": "you're doing there you should actually be using this over here you make those changes then the next teammate comes in be like I don't see any unique pointers",
    "start": "304479",
    "end": "310560"
  },
  {
    "text": "see you shouldn't have done it that way you should actually revert and go back over here and I need to see some unique pointers right now next person comes in",
    "start": "310560",
    "end": "317120"
  },
  {
    "text": "actually I don't think unique pointers need to be used here I think we need to actually chain and then you're just like my gosh what is this experience all",
    "start": "317120",
    "end": "324520"
  },
  {
    "text": "right what is this frankly the tooling around the language isn't good and we",
    "start": "324520",
    "end": "329840"
  },
  {
    "text": "had to take on some additional pain in order to support our users we want to provide upto-date fish packages for",
    "start": "329840",
    "end": "335639"
  },
  {
    "text": "systems that aren't upto-date like LTS Linux and older Mac OS but there is no",
    "start": "335639",
    "end": "341319"
  },
  {
    "text": "rust up for C++ no standard way to install recent C++ compilers on these operating systems this means that",
    "start": "341319",
    "end": "347319"
  },
  {
    "text": "adopting recent C++ standards would complicate the lives of packagers and would be contributors for example we",
    "start": "347319",
    "end": "353440"
  },
  {
    "text": "started using C++ 11 in 2016 and yet we still needed to upgrade compilers on our build machines until D20 and I wonder",
    "start": "353440",
    "end": "361080"
  },
  {
    "text": "which C++ 11 they used like that's the crazy part there's actually two C++ 11s uh fish also uses uh threads for its",
    "start": "361080",
    "end": "367880"
  },
  {
    "text": "award-winning note to the editor uh find the actual award Auto suggestions and syntax highlighting and one long-term",
    "start": "367880",
    "end": "374520"
  },
  {
    "text": "project uh is to add concurrency to the language here's the dirty secret while external commands run in parallel fish's",
    "start": "374520",
    "end": "380440"
  },
  {
    "text": "execution of internal commands built-ins and functions is currently serial and can't be backgrounded lifting this",
    "start": "380440",
    "end": "385840"
  },
  {
    "text": "limitation would enable features like asynchronous prompts or non-blocking completions as well as performance gains",
    "start": "385840",
    "end": "391639"
  },
  {
    "text": "posx shells uh use subshells to get around this but subshells are leaky abstraction that can bite you uh in the",
    "start": "391639",
    "end": "397639"
  },
  {
    "text": "behind when you least expect it for instance you can't set variables from inside a pipe except on some shells but",
    "start": "397639",
    "end": "404400"
  },
  {
    "text": "only in the last part of the pipe maybe and if you have enabled the correct option yeah I've ran into all sorts of",
    "start": "404400",
    "end": "410680"
  },
  {
    "text": "weird little problems here uh we would like to avoid that and with so with and so the heavy hand of forking off a",
    "start": "410680",
    "end": "417560"
  },
  {
    "text": "process isn't appealing okay okay this is looking good we prototyped true multi-threaded execution in C++ but it",
    "start": "417560",
    "end": "424599"
  },
  {
    "text": "just didn't work out for example it was too easy to accidentally share objects across threads with only post Hawk",
    "start": "424599",
    "end": "430800"
  },
  {
    "text": "tooling like thread sanitizer to prevent it the ergonomics of C++ are simply not are also simply not good by the way like",
    "start": "430800",
    "end": "438879"
  },
  {
    "text": "anyone who's used C++ in an actually big project knows this is true I for the",
    "start": "438879",
    "end": "444560"
  },
  {
    "text": "life of me during the entirety entirety of being at Netflix had clang CL play D",
    "start": "444560",
    "end": "450479"
  },
  {
    "text": "or we actually uh Anders back and Anders Anders backen had a um a uh",
    "start": "450479",
    "end": "457680"
  },
  {
    "text": "C++ um Auto or like uh LSP like thing uh what is it called uh anyways he has an",
    "start": "457680",
    "end": "465240"
  },
  {
    "text": "awesome one I I'm sure it was like a completion database and all that it was pretty awesome even with Ninja builds",
    "start": "465240",
    "end": "470680"
  },
  {
    "text": "all that completion Json all the Json files everything I literally got like actually running autocomplete and",
    "start": "470680",
    "end": "477280"
  },
  {
    "text": "definition jumping and certain things probably only 15% of the time it worked",
    "start": "477280",
    "end": "482680"
  },
  {
    "text": "all the time and the and even then you would run into just like oh because it passes",
    "start": "482680",
    "end": "489000"
  },
  {
    "text": "through this macro it's impossible um that's it if anyone says",
    "start": "489000",
    "end": "494520"
  },
  {
    "text": "they uh they need to look at the G grpc source code wait what what I fixed 3,000",
    "start": "494520",
    "end": "500639"
  },
  {
    "text": "wrongly shared this in lambdas and stopped counting at some point yeah to be frank it has gotten better okay it's gotten better I haven't used it for two",
    "start": "500639",
    "end": "507159"
  },
  {
    "text": "years so I don't know what what's been going on that's some Sex Panther numbers that's some Sex Panther numbers I rarely",
    "start": "507159",
    "end": "514039"
  },
  {
    "text": "got it to work perfectly regularly I don't know those things kept breaking header files are annoying yes they they",
    "start": "514039",
    "end": "519880"
  },
  {
    "text": "really are templates are complicated I mean every time I use templates it makes me feel really good though that's all",
    "start": "519880",
    "end": "526279"
  },
  {
    "text": "I'm say hey that's all I'm GNA say I really enjoyed it I'm just saying I really enjoyed it you can easily cause a",
    "start": "526279",
    "end": "532760"
  },
  {
    "text": "compiler error that throws pages of overloads in the standard library at you many functions are unsafe to use C++",
    "start": "532760",
    "end": "539040"
  },
  {
    "text": "string hand handling is very verbose with easily confusable overloads of many methods making it attractive to drop",
    "start": "539040",
    "end": "544560"
  },
  {
    "text": "down to C style Char pointers which are quite unsafe but also very nice okay little stir end copy come on don't do",
    "start": "544560",
    "end": "552440"
  },
  {
    "text": "stir copy uh and let's see and the standard prioritized performance uh prioritizes performance over ergonomics",
    "start": "552440",
    "end": "558760"
  },
  {
    "text": "considering for instance string view which provides a non-owning slice of a string this is an let's see this is an",
    "start": "558760",
    "end": "565279"
  },
  {
    "text": "extremely modern well-liked feature of C++ programmers often claim is a great reason to switch to C++ 17 and is easy",
    "start": "565279",
    "end": "572800"
  },
  {
    "text": "easy let's see it's extremely easy to run into use after free bugs with it because the ergonomics weren't a",
    "start": "572800",
    "end": "578880"
  },
  {
    "text": "priority nice modern hashtag hashtag that one uh one good case study of the",
    "start": "578880",
    "end": "584560"
  },
  {
    "text": "uh deficiencies of C++ in practice is a c by the way I never even got to C++ 17",
    "start": "584560",
    "end": "589800"
  },
  {
    "text": "in 20 uh in 2023 when I was still playing around with that we are still like mostly on",
    "start": "589800",
    "end": "595360"
  },
  {
    "text": "C++ 11 so you know I never even got the joys of later things the I've heard that",
    "start": "595360",
    "end": "601279"
  },
  {
    "text": "it there was like I heard it got good I heard C++ got amazing I just never got",
    "start": "601279",
    "end": "608360"
  },
  {
    "text": "to experience it so I I don't even know 11 was good enough 11's good enough I",
    "start": "608360",
    "end": "613800"
  },
  {
    "text": "don't is that is that actually true is that actually true is that true it's pretty good okay and is let's see on one",
    "start": "613800",
    "end": "621000"
  },
  {
    "text": "good case study of the deficiencies of C++ in practice is a C library curses",
    "start": "621000",
    "end": "626279"
  },
  {
    "text": "this is a this is a venerable library to access terminal features and we use it to access the term info database which",
    "start": "626279",
    "end": "633240"
  },
  {
    "text": "describes differences in terminal features and behaviors this is not let's see this not only caused us grief by",
    "start": "633240",
    "end": "638959"
  },
  {
    "text": "being unsafe in uh to use in weird ways the C term pointer or sometimes macro",
    "start": "638959",
    "end": "645279"
  },
  {
    "text": "can be null and it let's see and it is De referenced in surprising places but also caused a surprisingly High number",
    "start": "645279",
    "end": "652200"
  },
  {
    "text": "of issues when building from Source this was either because there are multiple implementations of it with differences",
    "start": "652200",
    "end": "657720"
  },
  {
    "text": "as useless as this function takes a Char on system X but an INT on system y but",
    "start": "657720",
    "end": "663240"
  },
  {
    "text": "also because users kept coming to us with new and excitingly",
    "start": "663240",
    "end": "668760"
  },
  {
    "text": "terrible ways a package let's see ways to package and install it the dependency system is the system package manager",
    "start": "668760",
    "end": "676000"
  },
  {
    "text": "finally subjectively C++ isn't drawing in the crowds we have never had a lot of C++ contributors over the 11 years fish",
    "start": "676000",
    "end": "683040"
  },
  {
    "text": "used C++ only 17 people have committed at least 10 commits to the C++ code base",
    "start": "683040",
    "end": "688360"
  },
  {
    "text": "we also don't know a lot of people who would love to work on a C++ codebase in their free time this actually is a",
    "start": "688360",
    "end": "694360"
  },
  {
    "text": "really good answer right here by the way that's a good answer that's a good answer when you're doing an open source project like you want the higher number",
    "start": "694360",
    "end": "703639"
  },
  {
    "text": "of people who contribute some amount of of commits is actually like that's probably the most healthy metric to any",
    "start": "703639",
    "end": "711399"
  },
  {
    "text": "uh any open source project Network effect really does matter it really like",
    "start": "711399",
    "end": "717120"
  },
  {
    "text": "I mean this is also to its detriment or potentially to its positive why react is so popular why would you start a project",
    "start": "717120",
    "end": "724279"
  },
  {
    "text": "in something else because if you start it in something else will you be able to hire people who are not in like right",
    "start": "724279",
    "end": "730399"
  },
  {
    "text": "it's like the same argument every single time I'm not saying it's Better or For Worse it's just the argument that",
    "start": "730399",
    "end": "735839"
  },
  {
    "text": "everybody makes some parting thoughts we can give the C++ Community we would like to see some improvements to ergonomics",
    "start": "735839",
    "end": "742120"
  },
  {
    "text": "and safety of the language and tools prioritized over performance and we'd like to see efforts to make C++",
    "start": "742120",
    "end": "747240"
  },
  {
    "text": "compilers easy to upgrade on real system all right um I can't quite say all the tools right I only ever ran like asan",
    "start": "747240",
    "end": "753920"
  },
  {
    "text": "and it caught all the bugs I've ever had I've Val grind a few times in my lifetime it was pretty great like the",
    "start": "753920",
    "end": "759600"
  },
  {
    "text": "tools yeah they're not quite as nice but also um there's some good stuff to it so I can't quite say that the tools are",
    "start": "759600",
    "end": "766120"
  },
  {
    "text": "just like not there they're just not easy I wouldn't put them on the easy route or the easy path there's like a",
    "start": "766120",
    "end": "771920"
  },
  {
    "text": "little bit more you have to do like you have to just even know that you need to run asan right like that's like a thing you just have to know you have to do on",
    "start": "771920",
    "end": "778079"
  },
  {
    "text": "a large C++ code and like there's just people that just don't know that thing they're just like oh that that thing",
    "start": "778079",
    "end": "783160"
  },
  {
    "text": "even exists why rust uh we need to get one thing out of the way rust is cool it's fun uh it it's tempting to try to",
    "start": "783160",
    "end": "791480"
  },
  {
    "text": "sweep this under the rug because it feels uh what is this word gosh g g go",
    "start": "791480",
    "end": "797639"
  },
  {
    "text": "go g go go go lacking ease or Grace",
    "start": "797639",
    "end": "803240"
  },
  {
    "text": "unsophisticated and socially awkward go wow I I didn't realize there's an exact",
    "start": "803240",
    "end": "809360"
  },
  {
    "text": "word to describe twitch chat what is this I didn't even know dude I need to",
    "start": "809360",
    "end": "816079"
  },
  {
    "text": "get BTT uh bttv installed on this computer okay I do I do need to do that I I I don't have it installed I'm sorry",
    "start": "816079",
    "end": "823600"
  },
  {
    "text": "uh new tattoo time here we go let's go uh it feels ghost to say but it's",
    "start": "823600",
    "end": "829199"
  },
  {
    "text": "actually important for a number of reasons for one fish is a hobby project and that means we want want it to be fun",
    "start": "829199",
    "end": "834959"
  },
  {
    "text": "for us nobody is being paid to work on fish so we need it to be fun being fun and interesting also attracts",
    "start": "834959",
    "end": "841320"
  },
  {
    "text": "contributors rust also has great tooling the tools have really paid a paid a lot of attention to use by the way this is",
    "start": "841320",
    "end": "847800"
  },
  {
    "text": "actually a great argument for rust this is a great argument for rust that the tools are really really good but I I",
    "start": "847800",
    "end": "853519"
  },
  {
    "text": "mean correct me if I'm wrong but I heard a lot of the Super Cross compilation stuff can be very confusing and",
    "start": "853519",
    "end": "859160"
  },
  {
    "text": "difficult still with rust uh and the compiler errors are terrific yes the compiler errors are generally pretty terrific and like some of the acing",
    "start": "859160",
    "end": "865720"
  },
  {
    "text": "trade stuff can kind of get annoying and some of the trade stuff is really really frustrating where it's just like you know you need to call whatever the send",
    "start": "865720",
    "end": "872040"
  },
  {
    "text": "method is but you just need to know the trait so you have to compile it and look at the error message to see possibly the trait you need to get to bring in that's",
    "start": "872040",
    "end": "878040"
  },
  {
    "text": "always just so annoying uh not even compared to C++ they're uh they they just actually rule yeah they're probably",
    "start": "878040",
    "end": "884120"
  },
  {
    "text": "one of the best in the industry for sure and we let's see and as we have tried to pay attention to our own error messages",
    "start": "884120",
    "end": "889639"
  },
  {
    "text": "fish has a bespoke error for if it thinks a file you told it a run has window line endings we like it uh and it",
    "start": "889639",
    "end": "896519"
  },
  {
    "text": "is easy to get tooling installed rust up is magic and allows people to get started quickly with minimal fuss or",
    "start": "896519",
    "end": "902079"
  },
  {
    "text": "root permissions when the answer to how to upgrade C++ compiler is find a repository with root permissions compile",
    "start": "902079",
    "end": "908800"
  },
  {
    "text": "it yourself install some other repository or a Docker image it is amazing how the rust answer can just be",
    "start": "908800",
    "end": "914639"
  },
  {
    "text": "used rust up modern tooling is magic I mean that's just that I mean isn't part of the reason why this all exists uh",
    "start": "914639",
    "end": "921079"
  },
  {
    "text": "forgive me Dan you probably know the answer to this Dan but isn't the whole reason why C++ is so darn awful with all",
    "start": "921079",
    "end": "927320"
  },
  {
    "text": "these things is that the language committee itself does not actually run the own tools right there is no",
    "start": "927320",
    "end": "932920"
  },
  {
    "text": "implication to tools they run I mean this may be an outdated opinion I may be completely wrong on this one but I was I",
    "start": "932920",
    "end": "938759"
  },
  {
    "text": "was pretty sure that one of the big reasons was is that they didn't have like there is not the",
    "start": "938759",
    "end": "944519"
  },
  {
    "text": "C++ committee standard tool and so therefore since there is no standard tool it just is like here's all what the",
    "start": "944519",
    "end": "951720"
  },
  {
    "text": "community thinks that's build Essentials are good enough somehow I I I",
    "start": "951720",
    "end": "956800"
  },
  {
    "text": "somehow I think you're probably wrong it's like should I agree with an article",
    "start": "956800",
    "end": "963040"
  },
  {
    "text": "that's building a a terminal for multiple different environments or should I believe the the the twitch",
    "start": "963040",
    "end": "969319"
  },
  {
    "text": "chatter like I don't know if you have a large enough project that run that spans across Windows different Windows versions linuxes and lines lines and uh",
    "start": "969319",
    "end": "979880"
  },
  {
    "text": "let's see the C++ committee are standard tools okay that's fair that's a fair hey",
    "start": "979880",
    "end": "985480"
  },
  {
    "text": "good statement good statement let's see agree with the angry Chatters I know I'm just saying I just don't know if that's true uh rust has great ergonomics the",
    "start": "985480",
    "end": "992440"
  },
  {
    "text": "difference between C++ pointers which can uh always be null and rust options are let's see are apparent very quickly",
    "start": "992440",
    "end": "999279"
  },
  {
    "text": "even to those of us who have never used them before yeah I mean obviously having something that forces you to do an if",
    "start": "999279",
    "end": "1004360"
  },
  {
    "text": "statement is probably the right way to program can we all agree to that a forced if statement is probably a good",
    "start": "1004360",
    "end": "1011480"
  },
  {
    "text": "thing okay you're talking yeah but you're talking about such a narrow set and even this is probably not even true within that right like forced if",
    "start": "1011480",
    "end": "1017639"
  },
  {
    "text": "statement very good it's one of the I mean I wish goang would have just I mean I wish they would have done just a",
    "start": "1017639",
    "end": "1023440"
  },
  {
    "text": "little bit more effort on their type system you know what I mean I I understand they are created in 2009 or whatever it was but a little bit more",
    "start": "1023440",
    "end": "1029480"
  },
  {
    "text": "effort would have been good uh we did have a backport of C++ optional and liked using it but it was never as",
    "start": "1029480",
    "end": "1035798"
  },
  {
    "text": "integrated as rust options were having an explicit Ed system where you know exactly which function uh comes from",
    "start": "1035799",
    "end": "1042038"
  },
  {
    "text": "which module is a great improvement over include yeah yes yes obviously yes like yes duh",
    "start": "1042039",
    "end": "1049919"
  },
  {
    "text": "absolutely ridiculous completely absurd it's like man back when I used to concat my",
    "start": "1049919",
    "end": "1057160"
  },
  {
    "text": "JavaScript into one giant file without like UMD or AMD or any of those things",
    "start": "1057160",
    "end": "1062520"
  },
  {
    "text": "yes I mean I was like as bad as include uh rust makes it nice to add dependencies we want to go let's see we",
    "start": "1062520",
    "end": "1069400"
  },
  {
    "text": "won't go overboard with it but we do want to change our history format from the Homegrown I Can't Believe It's Not",
    "start": "1069400",
    "end": "1076679"
  },
  {
    "text": "yaml por souls to to something specified that other tools can actually read and",
    "start": "1076720",
    "end": "1082200"
  },
  {
    "text": "rust makes this easy to add support for our yaml Json KDL but the killer feature of rust from fish Shell's perspective is",
    "start": "1082200",
    "end": "1088360"
  },
  {
    "text": "send and sink statically uh enforcing rules around threading Fearless concurrency is too strong but you can",
    "start": "1088360",
    "end": "1094200"
  },
  {
    "text": "still blow your leg off uh let's see you can still blow your leg off with fork and Signal handlers but send and sync",
    "start": "1094200",
    "end": "1099840"
  },
  {
    "text": "will be the key to unlocking fully multi-threaded execution with confidence in its correctness I mean it is nice I",
    "start": "1099840",
    "end": "1106080"
  },
  {
    "text": "mean that you have to at least minimally agree cuz I know there's definitely some anti- rusters in the audience having",
    "start": "1106080",
    "end": "1112039"
  },
  {
    "text": "something that when you cross a thread boundary being like you can't do that",
    "start": "1112039",
    "end": "1117360"
  },
  {
    "text": "you you need to hey you need to wrap it you need to wrap that into an arc right",
    "start": "1117360",
    "end": "1123320"
  },
  {
    "text": "like that there is something very good about that there is something very good about that that just helps you not",
    "start": "1123320",
    "end": "1128640"
  },
  {
    "text": "goof not goof up that I like that I think that that is good I I like that we",
    "start": "1128640",
    "end": "1133799"
  },
  {
    "text": "did uh we did not do a comprehensive survey of other languages we were confident rust was uh was up to the task",
    "start": "1133799",
    "end": "1139240"
  },
  {
    "text": "and either already knew it or wanted to learn it so we picked it by the way I do not like Russ for those that are wondering I am reading this going sh",
    "start": "1139240",
    "end": "1146440"
  },
  {
    "text": "that don't sound like fun to me uh but I do love that they're excited I love to",
    "start": "1146440",
    "end": "1151760"
  },
  {
    "text": "see excitement right like I can celebrate somebody liking rust without like my feelies being hurt you know and",
    "start": "1151760",
    "end": "1157640"
  },
  {
    "text": "I think that's a very good thing cuz some people can't celebrate things without their feelies being hurt it's just like ah I'm not on team rust",
    "start": "1157640",
    "end": "1164880"
  },
  {
    "text": "therefore this project it sucks it's like no I'm happy about this people are happy and they're building a good thing",
    "start": "1164880",
    "end": "1171000"
  },
  {
    "text": "and this is very exciting by the way I do want to say thank you very much monolith I can't believe you gave me 10 subs and then right before that uh melvi",
    "start": "1171000",
    "end": "1179159"
  },
  {
    "text": "Dev thank you for the five gifted subs and then right before that uh retro Rex thank you for the gifted sub I mean it's",
    "start": "1179159",
    "end": "1185120"
  },
  {
    "text": "just like it's it's flowing like the salmons of capistrana yeah you hit the nail on the head yeah exactly it's just",
    "start": "1185120",
    "end": "1191360"
  },
  {
    "text": "like I want you know what uh they are pref uh pre uh pre-firing the X language",
    "start": "1191360",
    "end": "1196559"
  },
  {
    "text": "does that too that's pretty funny yeah I mean I love I love I love when people like my",
    "start": "1196559",
    "end": "1201840"
  },
  {
    "text": "biggest thing I want to see is people being excited and be like actually diving into do a thing right I think",
    "start": "1201840",
    "end": "1208000"
  },
  {
    "text": "that is really good that is a good great thing uh I'm happy for them but imagine",
    "start": "1208000",
    "end": "1213880"
  },
  {
    "text": "using rust I wish I didn't no uh let's see a lot of hey uh has also been made",
    "start": "1213880",
    "end": "1220520"
  },
  {
    "text": "online about Russ platform support I heard it wasn't like amazing but again I've never I've never done a cross",
    "start": "1220520",
    "end": "1226600"
  },
  {
    "text": "compilation thing of rust like I've never built something for Windows and for Linux right like that's just not a",
    "start": "1226600",
    "end": "1232520"
  },
  {
    "text": "thing I'm going to my goal is to never use Windows for anything but gaming and streaming like that's just a reality so",
    "start": "1232520",
    "end": "1238720"
  },
  {
    "text": "I I don't know if it's true uh but we don't see a big problem here all of our big platforms Mac Linux and bsds oh so",
    "start": "1238720",
    "end": "1245000"
  },
  {
    "text": "they don't even have windows are supported uh uh as are open Solaris and aluminos and Haiku",
    "start": "1245000",
    "end": "1251640"
  },
  {
    "text": "okay classic you know I was actually really concerned about Haiku not making that",
    "start": "1251640",
    "end": "1256679"
  },
  {
    "text": "list very concerned about Hau not making the list it made the list so I'm happy",
    "start": "1256679",
    "end": "1262039"
  },
  {
    "text": "about that uh we have never heard of anyone trying to run fish on Non-Stop architecture support is even less of a",
    "start": "1262039",
    "end": "1268039"
  },
  {
    "text": "problem going by debian's popcorn 99.9995% the actual result not",
    "start": "1268039",
    "end": "1273440"
  },
  {
    "text": "exaggeration of machines run an architecture that has rust packages in Debian given that fish is installed on",
    "start": "1273440",
    "end": "1280440"
  },
  {
    "text": "1.92% of Debian systems we would project two or three machines of the quarter",
    "start": "1280440",
    "end": "1285760"
  },
  {
    "text": "million responses to have fish on an unsupported architect unlike what some online have assumed a",
    "start": "1285760",
    "end": "1292279"
  },
  {
    "text": "native window Port was not a reason for switching to rust as it never as it was never in the cards fish is at heart a",
    "start": "1292279",
    "end": "1299200"
  },
  {
    "text": "Unix shell that relies not only on Unix apis but also their semantics and expose them exposes them to scripting language",
    "start": "1299200",
    "end": "1306640"
  },
  {
    "text": "uh what would let's see what would test X say on Windows which has no executable",
    "start": "1306640",
    "end": "1311799"
  },
  {
    "text": "bit these are issues that could be solved with a lot of work but we're L we're Unix nerds making a Unix shell not",
    "start": "1311799",
    "end": "1319320"
  },
  {
    "text": "one for Windows oh my gosh just a man after my own heart right here I oh my",
    "start": "1319320",
    "end": "1325279"
  },
  {
    "text": "God I just I think I I think I I think I'm loving the fish people I think I love them I think I love them hold on my",
    "start": "1325279",
    "end": "1331120"
  },
  {
    "text": "beautiful wife is calling me yes beautiful wife my wife is going to bring me a",
    "start": "1331120",
    "end": "1336279"
  },
  {
    "text": "smoothie oh my gosh I love her um anyways sorry hey uh Conrad thank you",
    "start": "1336279",
    "end": "1341360"
  },
  {
    "text": "very much and thank you m oh my gosh Mel Dev okay guys what is going on here guys okay we're not I'm I'm like in the",
    "start": "1341360",
    "end": "1347559"
  },
  {
    "text": "middle of an article reac act okay I'm like reading an article we're not supposed to be doing subtime what is happening here what is",
    "start": "1347559",
    "end": "1353840"
  },
  {
    "text": "going on what are you doing what are you doing thanks for the six Subs though",
    "start": "1353840",
    "end": "1359840"
  },
  {
    "text": "appreciate that I assume that's because you're trying to get number number one my Bress wife my braless wife is bringing me a",
    "start": "1359840",
    "end": "1367080"
  },
  {
    "text": "sand which how's your day going uh for those that don't get that joke um I got to take off autoplay because that's",
    "start": "1367080",
    "end": "1372159"
  },
  {
    "text": "going to be crazy for those that's a ninja joke ninja there's like a tweet that he said what was it Ninja a braless",
    "start": "1372159",
    "end": "1380120"
  },
  {
    "text": "what's the Tweet I'm in the middle of carrying a League of Legends game about to close it out and my braless wife",
    "start": "1380120",
    "end": "1385440"
  },
  {
    "text": "brings me a sandwich not ask for with chips as I get a double kill bot Lane how's your D go how's your day going I",
    "start": "1385440",
    "end": "1392039"
  },
  {
    "text": "have no idea why ninja streaming career tanked I honestly have no idea like that",
    "start": "1392039",
    "end": "1397720"
  },
  {
    "text": "man that man makes content that's content right there legendary tweet it's just absolutely legendary tweet it's so",
    "start": "1397720",
    "end": "1405360"
  },
  {
    "text": "absurd I swear this is just so insane I am in the middle of reading an",
    "start": "1405360",
    "end": "1412240"
  },
  {
    "text": "article uh about let's see about to uh about to close it out and my",
    "start": "1412240",
    "end": "1419320"
  },
  {
    "text": "braess wife brings me a smoothie smoothie not asked for people",
    "start": "1419320",
    "end": "1426640"
  },
  {
    "text": "are going to get angry with this one with uh let's see uh with uh uh and a",
    "start": "1426640",
    "end": "1434039"
  },
  {
    "text": "second for a Teach as I uh as I uh let's see how how",
    "start": "1434039",
    "end": "1440880"
  },
  {
    "text": "do I do a double kill what's the double kill what's the what's the double what's the double kill please do not include me",
    "start": "1440880",
    "end": "1447200"
  },
  {
    "text": "into this and a second for TJ too it's too late uh what is",
    "start": "1447200",
    "end": "1454400"
  },
  {
    "text": "it what is the thing oh I'm not my wife just told me I'm not allowed to post that okay o whoopsies whoopsies I didn't",
    "start": "1454400",
    "end": "1461640"
  },
  {
    "text": "mean to hang out oh my gosh I just hung up on her oh my goodness I just hung up on her",
    "start": "1461640",
    "end": "1467480"
  },
  {
    "text": "whoopsies fine fine not allowed to post that get it out",
    "start": "1467480",
    "end": "1474240"
  },
  {
    "text": "my wife my wife may watch the stream not allowed to tweet that by the way the",
    "start": "1474240",
    "end": "1479799"
  },
  {
    "text": "man's made for Content well well looks like I'm not getting a smoothie uh the one platform We Care a",
    "start": "1479799",
    "end": "1487200"
  },
  {
    "text": "bit that it does not currently seem to have enough support is sigin",
    "start": "1487200",
    "end": "1494039"
  },
  {
    "text": "what oh which is sad but we have to make a cut somewhere ah yes good old sigin",
    "start": "1494039",
    "end": "1499399"
  },
  {
    "text": "everybody's favorite dude caught dude I got caught dude we're just moving on guys we're moving on everybody shut up",
    "start": "1499399",
    "end": "1505480"
  },
  {
    "text": "everybody shut up meme denied hey everybody shut up we're just not we're moving",
    "start": "1505480",
    "end": "1510760"
  },
  {
    "text": "on okay thank you for the level six hype train that is awesome flip actually take it out flip take it out okay take it out",
    "start": "1510760",
    "end": "1519279"
  },
  {
    "text": "uh braess TJ uh we decided uh we decided we were",
    "start": "1519279",
    "end": "1524399"
  },
  {
    "text": "going to do fish of thesias uh Port we would move over component by component",
    "start": "1524399",
    "end": "1529760"
  },
  {
    "text": "until no C++ was left and at every stage of that process it would remain let's see it would remain a working fish that",
    "start": "1529760",
    "end": "1536919"
  },
  {
    "text": "this was let's see this was a necessity if we didn't we would not have a working program for months which is not only",
    "start": "1536919",
    "end": "1544039"
  },
  {
    "text": "demoralizing but would have also precluded us from most uh from using most of our test Suite yeah that's",
    "start": "1544039",
    "end": "1550440"
  },
  {
    "text": "that's true that's true oh okay um flip um hey Mel Dev I don't know what",
    "start": "1550440",
    "end": "1557919"
  },
  {
    "text": "the bits are for I don't know what the 11 gifted Subs are for but hey thank you genuinely appreciate that lucky hippo",
    "start": "1557919",
    "end": "1563520"
  },
  {
    "text": "thank you thank you for the level seven hype train I know usually I I try to stay in in like in the zone when reading",
    "start": "1563520",
    "end": "1569120"
  },
  {
    "text": "these articles but you know I just want to say thank you thank you why Linux people got to",
    "start": "1569120",
    "end": "1576520"
  },
  {
    "text": "sound so pretentious I'm not sure what they what do you mean they sound so pretentious where where's the pretentious",
    "start": "1576520",
    "end": "1582399"
  },
  {
    "text": "part like bro I don't like I don't I don't want to work on Windows and people",
    "start": "1582399",
    "end": "1588360"
  },
  {
    "text": "work on Windows they don't want to work on Linux like that's okay like why would you want to work on",
    "start": "1588360",
    "end": "1594840"
  },
  {
    "text": "all the operating system like that job sounds like the worst of all jobs like out of any job having to do the one that",
    "start": "1594840",
    "end": "1601760"
  },
  {
    "text": "makes you do everything is actually the worst job like that has to be the worst oh my gosh C girl what are you doing",
    "start": "1601760",
    "end": "1608840"
  },
  {
    "text": "canister than you for the one lucky Hipp low taper fade I did have dude thank you",
    "start": "1608840",
    "end": "1615399"
  },
  {
    "text": "very much for the 25 gifted Subs cross compiling is a kink dude it is a kink it's it's crazy people who work on",
    "start": "1615399",
    "end": "1622000"
  },
  {
    "text": "Windows also don't want to work on window like exactly that's what I just said it's it's everybody has equal",
    "start": "1622000",
    "end": "1628080"
  },
  {
    "text": "operating system hate like Linux doesn't like Windows Windows doesn't like Linux and we both think people who work on",
    "start": "1628080",
    "end": "1633880"
  },
  {
    "text": "Macs are douches and so it's like there's like this whole there's like this whole thing that exists like it",
    "start": "1633880",
    "end": "1639080"
  },
  {
    "text": "does exist everywhere like have you met a Mac User like think about how much how pretentious they are comparatively okay",
    "start": "1639080",
    "end": "1646520"
  },
  {
    "text": "come on think about have you met an Arch Linux user uh",
    "start": "1646520",
    "end": "1652159"
  },
  {
    "text": "actually had we let's see hold on I'm just going to reread this one uh this was a necessity if we didn't we would",
    "start": "1652159",
    "end": "1657880"
  },
  {
    "text": "have uh we would not have working programs for months which is not only demoralizing but it would also precluded us from using most of our test Suite",
    "start": "1657880",
    "end": "1665080"
  },
  {
    "text": "which is end to-end tests that run a script or fake a terminal interactions we would also not have been able to do",
    "start": "1665080",
    "end": "1670760"
  },
  {
    "text": "another C++ release putting some cool improvements into the hands of our users by the way long rewrites are I actually",
    "start": "1670760",
    "end": "1677519"
  },
  {
    "text": "think long wres are generally the worst I have really never met a project that came out better for a long Rite it just",
    "start": "1677519",
    "end": "1683440"
  },
  {
    "text": "came out different so I think this whole like replacing the engine while driving thing or changing the wheels while",
    "start": "1683440",
    "end": "1689240"
  },
  {
    "text": "driving could actually be one of the better ways to do things and so that's pretty great I think that's actually pretty great uh had we chosen to",
    "start": "1689240",
    "end": "1695640"
  },
  {
    "text": "disappear into a hole we might not have finished at all and we would uh have to redo a bunch of work once it became",
    "start": "1695640",
    "end": "1701640"
  },
  {
    "text": "testable we also mostly kept the structure of C++ code intact if a function is in the EnV subsystem it",
    "start": "1701640",
    "end": "1708360"
  },
  {
    "text": "would stay there resisting the temptation to clean up allowed us to compare the before and after and find",
    "start": "1708360",
    "end": "1713760"
  },
  {
    "text": "places where we had mistranslated something beautiful we also use autoc",
    "start": "1713760",
    "end": "1719000"
  },
  {
    "text": "C++ to generate bindings between C++ and rust code allowing us to Port one component at a time beautiful um this",
    "start": "1719000",
    "end": "1726120"
  },
  {
    "text": "would be kind of a fun I mean there's like a part of me that's kind of sick and twisted that would enjoy this kind of work I don't know what it is but",
    "start": "1726120",
    "end": "1733440"
  },
  {
    "text": "there's some weird part of me that has always enjoyed the the like hey let's let's do like let's do a running",
    "start": "1733440",
    "end": "1740360"
  },
  {
    "text": "refactor I want to make a part of the system better and release little bits cuz every time I've ever done it any",
    "start": "1740360",
    "end": "1746080"
  },
  {
    "text": "other way I've never loved it but the like the little little bit has always been great we started by porting the",
    "start": "1746080",
    "end": "1751440"
  },
  {
    "text": "built-ins these are essentially little self-contained programs with their own arguments streams exit codes Etc that",
    "start": "1751440",
    "end": "1758039"
  },
  {
    "text": "means it's easy to Port them separately from the rest of the shell once you have a way to call a rust built-in from C+",
    "start": "1758039",
    "end": "1763360"
  },
  {
    "text": "C++ which we had as part of the initial poll request all right where they connected to the main shell we used one",
    "start": "1763360",
    "end": "1769919"
  },
  {
    "text": "of the three approaches add some ffi glue to the C++ to make it cable from rust Port the collar and leave the call",
    "start": "1769919",
    "end": "1776039"
  },
  {
    "text": "E for later move the call E to rust and if necessary make it callable from C++",
    "start": "1776039",
    "end": "1781080"
  },
  {
    "text": "write a rust version of the coli and call it from the porter call or ported caller but leave the C++ version around",
    "start": "1781080",
    "end": "1788120"
  },
  {
    "text": "for instance almost every built-in needs to parse its options we have our own implementation of get opt that we",
    "start": "1788120",
    "end": "1794880"
  },
  {
    "text": "reimplemented in Rust in the initial PR but the C++ version stuck around until it had no more callar remaining",
    "start": "1794880",
    "end": "1801039"
  },
  {
    "text": "otherwise we would have had the rewrite C++ to rust bridge and adjust the C++ callers to use it this is great like",
    "start": "1801039",
    "end": "1806480"
  },
  {
    "text": "it's okay to have double code beautiful great this is but this is good wisdom by the way this is really good wisdom you",
    "start": "1806480",
    "end": "1812799"
  },
  {
    "text": "sometime you don't have to eat the whole hog you know don't hey guys guys don't",
    "start": "1812799",
    "end": "1818279"
  },
  {
    "text": "misrepresent me on that one okay you know you know you know what you do don't do it um it's actually pretty nice right",
    "start": "1818279",
    "end": "1826279"
  },
  {
    "text": "uh the oh this the the Strangler pattern is a software modernization strategy",
    "start": "1826279",
    "end": "1832159"
  },
  {
    "text": "that incrementally replaces parts of the Legacy system with new functionality allowing both systems to coexist until",
    "start": "1832159",
    "end": "1837360"
  },
  {
    "text": "the Legacy system is fully phased out okay good get that whole hog in there uh for instance oh whoopsies or the",
    "start": "1837360",
    "end": "1843480"
  },
  {
    "text": "built-in built-in the built-in called built-in needs access to the names of all built-ins to print them for the built-in get names in that case we",
    "start": "1843480",
    "end": "1850679"
  },
  {
    "text": "Bridge some access to the amounts uh let's see amounts to a constant Vector of strings in C++ and eventually moved",
    "start": "1850679",
    "end": "1856799"
  },
  {
    "text": "it over once users were in Rust that's how it went for a while we finally hit the more entangled systems where porting",
    "start": "1856799",
    "end": "1863559"
  },
  {
    "text": "porting larger chunks felt more productive since that reduced the amount of tricky ffi code to be written only to",
    "start": "1863559",
    "end": "1869399"
  },
  {
    "text": "be thrown away they're reported let's see these reported in Solo efforts this includes the input output reader which",
    "start": "1869399",
    "end": "1876000"
  },
  {
    "text": "is unsurprisingly one of fish's biggest Parts ending up at about 13,000 lines of",
    "start": "1876000",
    "end": "1882320"
  },
  {
    "text": "rust that's a big feature by the way I find that like at 13,000 that level of",
    "start": "1882320",
    "end": "1887559"
  },
  {
    "text": "code usually requires me to understand the problem pretty thoroughly before I can write something well at 13,000 lines",
    "start": "1887559",
    "end": "1895120"
  },
  {
    "text": "like that's that's a that's a that's usually that's usually right around the amount because I always find right around 5 to 8,000 is where whatever like",
    "start": "1895120",
    "end": "1903600"
  },
  {
    "text": "if it's like 2,000 lines of code you can almost write anything it doesn't matter how you write it what you write it it's",
    "start": "1903600",
    "end": "1908679"
  },
  {
    "text": "practically free to rewrite like I can understand that but once it gets beyond that it gets so dang difficult if you",
    "start": "1908679",
    "end": "1915679"
  },
  {
    "text": "don't have if you don't have like a good strategy put in right um all right during the port we hit a bunch of snags",
    "start": "1915679",
    "end": "1922639"
  },
  {
    "text": "with auto C cxx sex sex uh sometimes it would just not understand a particular",
    "start": "1922639",
    "end": "1928480"
  },
  {
    "text": "C++ construct and we spent a lot of time trying to figure out ways to please it as an example we introduced a struct on",
    "start": "1928480",
    "end": "1934039"
  },
  {
    "text": "the C++ side that wrapped c++'s Vector because for some reason autoc cxx liked to complain about Vector swing uh we had",
    "start": "1934039",
    "end": "1942279"
  },
  {
    "text": "to Fork it and add support for w string and W charm which is understandable because using wch is a horrible decision",
    "start": "1942279",
    "end": "1949960"
  },
  {
    "text": "we only used it because of a historical mistake oh that's pretty funny that's that's that that was pretty great",
    "start": "1949960",
    "end": "1956159"
  },
  {
    "text": "similarly we had the we had the wrap some C++ variables in unique pointer and similar to make the ownership rules",
    "start": "1956159",
    "end": "1962840"
  },
  {
    "text": "understandable uh to autoc cxx um or copy values that didn't strictly need to be copied this caused performance during",
    "start": "1962840",
    "end": "1969639"
  },
  {
    "text": "the port to go down quite a bit but we regained all of it in most spots and even beat the C++ version in some we",
    "start": "1969639",
    "end": "1977200"
  },
  {
    "text": "also patched autoc cxx autoc cxx to remove the requirement to use unsafe to",
    "start": "1977200",
    "end": "1982519"
  },
  {
    "text": "invoke any C++ API because that would have a scared uses of unsafe that would",
    "start": "1982519",
    "end": "1987880"
  },
  {
    "text": "disappear just by porting the collie we are also building something temporary so sometimes it is okay to do something a",
    "start": "1987880",
    "end": "1994000"
  },
  {
    "text": "little unhandled a little UNH underhanded yeah yeah that's fine if you use this uh for a permanent bridge",
    "start": "1994000",
    "end": "1999600"
  },
  {
    "text": "between rust and C++ in a few parts of your code the unsafe markers might be useful but in our case they were noise",
    "start": "1999600",
    "end": "2005919"
  },
  {
    "text": "all right all right well wrong with W CH I do not know I do not have enough W CH experience to know why W CH would be bad",
    "start": "2005919",
    "end": "2012720"
  },
  {
    "text": "I just don't I never actually used it once I can't think of a single time I use W CH W string let's see right uh",
    "start": "2012720",
    "end": "2019720"
  },
  {
    "text": "because autoc cxx generate generated a lot of code some tools were less uh helpful than they'd usually be rust",
    "start": "2019720",
    "end": "2026039"
  },
  {
    "text": "analyzer for instance was extremely slow nice nice uh rust analyzer really great",
    "start": "2026039",
    "end": "2032039"
  },
  {
    "text": "but yes it's always been historically pretty slow uh so even though our code base was fairly uh amenable",
    "start": "2032039",
    "end": "2038240"
  },
  {
    "text": "to being moved to rust because we didn't use exceptions or a lot of templates autoc cxx isn't easiest to work with uh",
    "start": "2038240",
    "end": "2044799"
  },
  {
    "text": "it is absolutely magical that it works at all and it enabled us to uh this port but it has a hard task to perform and it",
    "start": "2044799",
    "end": "2051440"
  },
  {
    "text": "isn't perfect okay and then there here's the timeline I don't think I care about the timeline cuz it's already released",
    "start": "2051440",
    "end": "2057280"
  },
  {
    "text": "so at this point it's already released so we don't need to think about that but I think this is crazy the initials uh PR",
    "start": "2057280",
    "end": "2062960"
  },
  {
    "text": "was 2023 in January and the beta is in 2024 and now today the 27th of February",
    "start": "2062960",
    "end": "2069358"
  },
  {
    "text": "it's been released that's pretty great how much is the fish I'm not sure how much is the fish even means to tell you",
    "start": "2069359",
    "end": "2075118"
  },
  {
    "text": "the truth it won't surprise anyone who has spent any time of this world of ours that rust is not in fact perfect we have",
    "start": "2075119",
    "end": "2081679"
  },
  {
    "text": "some gripes about it Chief among them is how rust handles portability while it offers many abstractions over systems",
    "start": "2081679",
    "end": "2086800"
  },
  {
    "text": "allowing you to Target variety of systems with the same code when it comes to adapting your code to systems at",
    "start": "2086800",
    "end": "2092358"
  },
  {
    "text": "lower level it's all based on enumerating systems by hand using checks like this",
    "start": "2092359",
    "end": "2098280"
  },
  {
    "text": "right which at the end of the day this is kind of like if defs isn't this effectively what you're running into when you start hitting these type of",
    "start": "2098280",
    "end": "2104160"
  },
  {
    "text": "when you start hitting this code you're hitting the ifdef life give me that ifdef life all right um this is an",
    "start": "2104160",
    "end": "2112000"
  },
  {
    "text": "imperfect solution allowing you to miss systems or ignoring version differences entirely from what we can tell if free",
    "start": "2112000",
    "end": "2118480"
  },
  {
    "text": "BD BSD 12 gains a function that we want to use Lipsy would add it but calling it",
    "start": "2118480",
    "end": "2124160"
  },
  {
    "text": "would fail on free bsd11 without a good way to check at the moment but listing",
    "start": "2124160",
    "end": "2129680"
  },
  {
    "text": "Targets in our code is also fundamentally duplicating work that the lib secr I assume there must be ways to",
    "start": "2129680",
    "end": "2136119"
  },
  {
    "text": "I guess my brain would assume that there's must be ways to say that the target OS is also at a specific version I don't know # ifdef ifdef life baby oh",
    "start": "2136119",
    "end": "2143280"
  },
  {
    "text": "I've if def life I've if def life and I've regretted every if def I've ever written there's besides from a pragma",
    "start": "2143280",
    "end": "2149599"
  },
  {
    "text": "ones I don't think there's an if def I love right I don't think I've ever been",
    "start": "2149599",
    "end": "2154640"
  },
  {
    "text": "to a point where I'm like I love I love if apps it's always been like why did I do this to myself why why do I live this",
    "start": "2154640",
    "end": "2161800"
  },
  {
    "text": "life uh this is an imperfect solution allowing you to miss systems and ignoring uh version differences entirely oh whoopsy daisies we already read that",
    "start": "2161800",
    "end": "2167720"
  },
  {
    "text": "whoopsies um but our listing Targets in our code is also fundamentally duplicating work that the libc create in",
    "start": "2167720",
    "end": "2173200"
  },
  {
    "text": "our case has already done if you want to call lipy X which is only defined on systems a b and c you need to put a",
    "start": "2173200",
    "end": "2179440"
  },
  {
    "text": "check for systems a b and c yourself and if lipy adds system D you need to add it",
    "start": "2179440",
    "end": "2184800"
  },
  {
    "text": "as well instead of doing that we are using our own r conf crate to do compile time feature detection in build RS most",
    "start": "2184800",
    "end": "2192079"
  },
  {
    "text": "of this would be solved if Russ had some uh form of saying compile this if the function exists uh config oh that's cool",
    "start": "2192079",
    "end": "2199400"
  },
  {
    "text": "yeah that'd be great uh with that the Lipsy crate would uh could do whatever checks it wants and fish would just",
    "start": "2199400",
    "end": "2204520"
  },
  {
    "text": "follow uh what it did and we would we could remove a lot of the use of RS comp",
    "start": "2204520",
    "end": "2210240"
  },
  {
    "text": "it would not really help support older distributions that lack some features though that could be solved by something",
    "start": "2210240",
    "end": "2215920"
  },
  {
    "text": "like Min Target API version fig while we're on portability the tools also sometimes fail to consider other targets",
    "start": "2215920",
    "end": "2222200"
  },
  {
    "text": "clippy may warn about a conversion being useless when it isn't on another system",
    "start": "2222200",
    "end": "2227359"
  },
  {
    "text": "it is often better to use if config instead of config this one this is uh this is a macro declaration this is a",
    "start": "2227359",
    "end": "2234200"
  },
  {
    "text": "declar declarative or yeah a declarative macro versus a what do they call that a proc macro uh so these exist on top of",
    "start": "2234200",
    "end": "2241760"
  },
  {
    "text": "functions right this is on top of functions this is within a function uh I got my rusm right on on where these",
    "start": "2241760",
    "end": "2248200"
  },
  {
    "text": "things can exist I assume I guess I guess you could use these inside of a function right if you had a struct or something maybe you can I don't even",
    "start": "2248200",
    "end": "2254040"
  },
  {
    "text": "know I've never actually used one of these inside of a function because code behind the ladder is eliminated very early uh so it may be entirely wrong and",
    "start": "2254040",
    "end": "2261240"
  },
  {
    "text": "only shows up when building on an affected system uh We've also had issues with localization a lot of the usual",
    "start": "2261240",
    "end": "2266880"
  },
  {
    "text": "rust relies on formatted strings that are checked at compile time but unfortunately they aren't translatable",
    "start": "2266880",
    "end": "2272880"
  },
  {
    "text": "we ported print F from muscle which required for our own print F built in anyways which allows us to reuse our",
    "start": "2272880",
    "end": "2280040"
  },
  {
    "text": "pre-existing formatted strings at runtime oh beautiful okay the mistakes ooh what are the mistakes ooh we've hit",
    "start": "2280040",
    "end": "2287000"
  },
  {
    "text": "some false starts dead ends and other kinds of mistakes for instance we originally used a fancy macro to allow us to write our strings as fuel but that",
    "start": "2287000",
    "end": "2295000"
  },
  {
    "text": "did not let's see but that did not oh my goodness but that did not end up carrying its weight and we removed it in",
    "start": "2295000",
    "end": "2301720"
  },
  {
    "text": "favor of regular uh declared to macro Fu calls uh we were confused by deprecation",
    "start": "2301720",
    "end": "2307000"
  },
  {
    "text": "warnings in the Lipsy crate which explains that time T will be switched to 64-bit on muel am I saying that right is",
    "start": "2307000",
    "end": "2313880"
  },
  {
    "text": "it muscle or muel in the future we initially tried to work around it adding a lot of wrappers to try to stay",
    "start": "2313880",
    "end": "2319760"
  },
  {
    "text": "agnostic on that size but only later figured out that it does not affect us we let's see as we pass a Time te we get",
    "start": "2319760",
    "end": "2327079"
  },
  {
    "text": "from one C library to another all right some bugs appeared to let's see appeared because we miss subtleties of the",
    "start": "2327079",
    "end": "2332800"
  },
  {
    "text": "original code often this turned into a crash because we Let's see we used a search or asserts modern cousin",
    "start": "2332800",
    "end": "2340480"
  },
  {
    "text": "unwrap I mean to be completely Fair expect would be like assert modern cousin right isn't unwrap just not",
    "start": "2341520",
    "end": "2348800"
  },
  {
    "text": "modern cousin right isn't that what it really is is that you should be using expect because at least you can add like",
    "start": "2348800",
    "end": "2354119"
  },
  {
    "text": "a little like a little string like I expect this to always be in this state and if it's not the whole program needs",
    "start": "2354119",
    "end": "2359599"
  },
  {
    "text": "to crash because this should never happen uh this was often the easiest way to translate C++ and sometimes it simply",
    "start": "2359599",
    "end": "2365599"
  },
  {
    "text": "turned out to not be accurate and we had to replace it with different air handling by the way this is probably a good thing to think about cuz maybe your",
    "start": "2365599",
    "end": "2371800"
  },
  {
    "text": "C++ was also wrong right but overall most of these were once found pretty",
    "start": "2371800",
    "end": "2376839"
  },
  {
    "text": "shallow it panics here why would it do that oh this uh this can be an R okay what leads to that ah okay let's handle",
    "start": "2376839",
    "end": "2383680"
  },
  {
    "text": "it this way we've also caused some friction by turning on link time optimization combined with having",
    "start": "2383680",
    "end": "2389319"
  },
  {
    "text": "release builds as the default in cmake currently needed to run the full test Suite which makes it uh easy to",
    "start": "2389319",
    "end": "2395359"
  },
  {
    "text": "accidentally have very long build time well also using rust so I mean come on you're going to have very long build",
    "start": "2395359",
    "end": "2400680"
  },
  {
    "text": "times no matter what uh the good a lot of benefits of porting rust will appear over time but some are already there",
    "start": "2400680",
    "end": "2406599"
  },
  {
    "text": "remember our issue with n curses we no longer have any because we no longer use curses instead we switch to a Rusk rate",
    "start": "2406599",
    "end": "2413520"
  },
  {
    "text": "that gives us what we want is this ter what what is it rust term info oh nice okay well that's pretty nice uh that",
    "start": "2413520",
    "end": "2419400"
  },
  {
    "text": "gives us what we need which is an access to term info and expanding its sequences this removes some awkward Global State",
    "start": "2419400",
    "end": "2424880"
  },
  {
    "text": "and means that those building from source no longer need to ensure that curses is installed correctly on their",
    "start": "2424880",
    "end": "2430440"
  },
  {
    "text": "system cargo just downloads the crate and builds it I mean tooling is Magic",
    "start": "2430440",
    "end": "2435760"
  },
  {
    "text": "good tooling is Magic good tooling is just always magic uh we do still uh read",
    "start": "2435760",
    "end": "2442200"
  },
  {
    "text": "term info which means users need to install that but that can be done at runtime is pre-installed on all",
    "start": "2442200",
    "end": "2447240"
  },
  {
    "text": "mainstream systems and if it can't be found we just uh use an included copy of xterm 256 color definitions let's go uh",
    "start": "2447240",
    "end": "2455400"
  },
  {
    "text": "xterm 256 color let's go yeah but supply chain nightmare cargo it definitely is okay yeah I mean that's that's fair",
    "start": "2455400",
    "end": "2462000"
  },
  {
    "text": "there is definitely like a supply chain nightmare when it comes to Cargo any of these large systems in which you can download any Library especially at super",
    "start": "2462000",
    "end": "2467960"
  },
  {
    "text": "fine grain details uh has supply chain system problems and then on top of it it also has supply chain attack problems",
    "start": "2467960",
    "end": "2474079"
  },
  {
    "text": "which is very terrifying good tooling is why c c is better than Java yeah Java",
    "start": "2474079",
    "end": "2479240"
  },
  {
    "text": "Java literally has the same problem as C++ like you have to have some other thing right awesome good I'm glad that",
    "start": "2479240",
    "end": "2487000"
  },
  {
    "text": "happened gotcha but it's like it's exactly I Java has always been awful Java Plus Maven works great yeah but you",
    "start": "2487000",
    "end": "2494000"
  },
  {
    "text": "still need something else right I want Java like like that's the ideal build tool is it's just the language itself",
    "start": "2494000",
    "end": "2501800"
  },
  {
    "text": "gives you the thing and that's it it's like okay you want you want this Java right yeah right that's what I want I",
    "start": "2501800",
    "end": "2509119"
  },
  {
    "text": "just want the thing I don't want other things I don't want I don't want other things to build my project I want the",
    "start": "2509119",
    "end": "2514359"
  },
  {
    "text": "thing we also have managed to create self installable fish packages that include all the functions completions",
    "start": "2514359",
    "end": "2519520"
  },
  {
    "text": "and other asset files in the fish binary to be written out at runtime that allowed us to create statically linked",
    "start": "2519520",
    "end": "2525440"
  },
  {
    "text": "versions of fish for the Linux this uses uh muscle because uh uh GC has",
    "start": "2525440",
    "end": "2530640"
  },
  {
    "text": "unavoidable crashes so for the first time we have one file you can download and run on any Linux the only",
    "start": "2530640",
    "end": "2536240"
  },
  {
    "text": "requirement being that the architecture matches this is pretty uh Big Boon for people who want to use fish but",
    "start": "2536240",
    "end": "2541400"
  },
  {
    "text": "sometimes SSH to servers where they might not have root access to install packages so they can just SCP a single",
    "start": "2541400",
    "end": "2546800"
  },
  {
    "text": "file and it's available this might be possible with C uh c23 is in bed but rust allowed us to do that do it now and",
    "start": "2546800",
    "end": "2554359"
  },
  {
    "text": "overall pretty easily the sagge one goal uh one one goal of the port we did not",
    "start": "2554359",
    "end": "2559880"
  },
  {
    "text": "succeed was removing seake that should be the goal of every developer developer what is good in life to crush your",
    "start": "2559880",
    "end": "2565440"
  },
  {
    "text": "enemies to see them flee before you and to hear the Lamentations of the seake uh that's because while cargo is great at",
    "start": "2565440",
    "end": "2571760"
  },
  {
    "text": "building things it's very simplistic at installing them cargo wants everything in a few neat binaries and that isn't",
    "start": "2571760",
    "end": "2577640"
  },
  {
    "text": "our use case fish has about 1,200 do fish scripts n 961 completions 2117",
    "start": "2577640",
    "end": "2584720"
  },
  {
    "text": "Associated functions as well as about 130 pages of documentation as HTML and",
    "start": "2584720",
    "end": "2589960"
  },
  {
    "text": "Man pages and the web config tool and the main the man page generator both written in Python it also has a test",
    "start": "2589960",
    "end": "2595880"
  },
  {
    "text": "Suite that is light on the unit tests but heavy on end to end script and interactive tests the scripted test run",
    "start": "2595880",
    "end": "2602760"
  },
  {
    "text": "through our own little check tool which runs a script and Compares its output to",
    "start": "2602760",
    "end": "2607839"
  },
  {
    "text": "embedded comments the interactive tests are driven by uh PEX which fakes",
    "start": "2607839",
    "end": "2613240"
  },
  {
    "text": "terminal interactions and checks the right thing happens when you press a button uh we kept cmake in simplified",
    "start": "2613240",
    "end": "2618680"
  },
  {
    "text": "form for all for these tasks but let it hand over the responsibility of building to Cargo it would be possible to switch",
    "start": "2618680",
    "end": "2624359"
  },
  {
    "text": "all that to a simpler task Runner like just or even PL old make files but since we already have this system we're",
    "start": "2624359",
    "end": "2631280"
  },
  {
    "text": "keeping it for now yeah just I actually like the idea of just I actually kind of just files they see kind of neat hey",
    "start": "2631280",
    "end": "2638200"
  },
  {
    "text": "just files they seem kind of neat I kind of I kind of feel like I want to start adopting this idea of just files um the",
    "start": "2638200",
    "end": "2644480"
  },
  {
    "text": "upside is that the build process uh hasn't really changed for the packagers we're all let's see we're also losing",
    "start": "2644480",
    "end": "2649800"
  },
  {
    "text": "sigwin as a supported platform for the time being because there is no rust Target for sigwin and so no way to build",
    "start": "2649800",
    "end": "2655359"
  },
  {
    "text": "binaries targeting it we hope that this situation changes in the Futures and we had also hoped it would improve during the almost two years of the port for now",
    "start": "2655359",
    "end": "2662280"
  },
  {
    "text": "the only way to run fish on Windows is to use weasel",
    "start": "2662280",
    "end": "2667480"
  },
  {
    "text": "why would you use sigwin these days like I don't understand like when I",
    "start": "2667480",
    "end": "2672880"
  },
  {
    "text": "when I was using my days using sigin were because we had to run Linux on Windows and there just wasn't really an",
    "start": "2672880",
    "end": "2680319"
  },
  {
    "text": "option for us to do that other than Seguin but now we have weasel so why",
    "start": "2680319",
    "end": "2686319"
  },
  {
    "text": "would anyone use why would you use sigin now weasel has poor disc access oh",
    "start": "2686319",
    "end": "2694520"
  },
  {
    "text": "okay well when people say weasel they they mean weedel too right no one's talking about original weedel VPN",
    "start": "2694520",
    "end": "2700079"
  },
  {
    "text": " honestly okay let's see uh some places are hung up on being Windows shops okay okay sigin D nuts damn okay",
    "start": "2700079",
    "end": "2707040"
  },
  {
    "text": "damn that's good I mean that's a good one that's a good one weasel sucks uh resource hog and file watch API don't",
    "start": "2707040",
    "end": "2712520"
  },
  {
    "text": "work oh file watch APA would be insane not to have isn't sigin open source versus weasel I don't I I mean brother",
    "start": "2712520",
    "end": "2719480"
  },
  {
    "text": "you're on Windows I don't I just don't think the argument for open source works when",
    "start": "2719480",
    "end": "2725079"
  },
  {
    "text": "you're on Windows I'm just saying it's uh if iio is critical you need uh",
    "start": "2725079",
    "end": "2730920"
  },
  {
    "text": "pre-copy the input to weasel internal disc right okay okay Windows has done a lot more open source now yeah but it's",
    "start": "2730920",
    "end": "2736760"
  },
  {
    "text": "still not open source like Windows itself is not open source what if you work for Windows 10 then it's",
    "start": "2736760",
    "end": "2741839"
  },
  {
    "text": "technically open source to you yeah fair enough I suppose you're running uh an OSS OS yeah you're running an open",
    "start": "2741839",
    "end": "2747599"
  },
  {
    "text": "source software operating system yeah the proper question why use Windows I mean people I mean Mo like I hate to",
    "start": "2747599",
    "end": "2753960"
  },
  {
    "text": "break this to you but most people on earth I believe are using Windows most",
    "start": "2753960",
    "end": "2760040"
  },
  {
    "text": "servers run not Windows they run Linux the proper operating system but most people run Windows false and where do",
    "start": "2760040",
    "end": "2767400"
  },
  {
    "text": "you get your data from no not poll we're not no no this this room that we're in",
    "start": "2767400",
    "end": "2772839"
  },
  {
    "text": "right now the room we're in right now is not an accurate accurate",
    "start": "2772839",
    "end": "2778200"
  },
  {
    "text": "representation of what people run on computers and I'll give you an example",
    "start": "2778200",
    "end": "2783480"
  },
  {
    "text": "type one if you use Arch Linux okay you see that there's already look at those ones that's already about half of all",
    "start": "2783480",
    "end": "2791000"
  },
  {
    "text": "Arch Linux users might just be in this room right now okay",
    "start": "2791000",
    "end": "2796359"
  },
  {
    "text": "so okay let's pretend some of them are meing Let's Pretend half of them are meing there is still this is this is",
    "start": "2796359",
    "end": "2803000"
  },
  {
    "text": "what is called selection bias okay you're watching me read articles about fish a shell that is only available on",
    "start": "2803000",
    "end": "2809520"
  },
  {
    "text": "Unix systems uh artics actually right anyways come on you should know this by",
    "start": "2809520",
    "end": "2815240"
  },
  {
    "text": "now these are obvious things we've eded uh this is a giant project and we made it the sheer scale of this perhaps best",
    "start": "2815240",
    "end": "2821079"
  },
  {
    "text": "expressed in numbers uh wow that is so many files Chang oh my gosh oh my gosh",
    "start": "2821079",
    "end": "2826480"
  },
  {
    "text": "oh wait wait a second am I reading this correct are we can we draw the conclusion that rust is more verbos than",
    "start": "2826480",
    "end": "2833359"
  },
  {
    "text": "C++ 11 can we draw that conclusion or wait how did they move to C++ 17 can we",
    "start": "2833359",
    "end": "2839280"
  },
  {
    "text": "can we say that rust is more verbose because right now what I'm",
    "start": "2839280",
    "end": "2845240"
  },
  {
    "text": "seeing is a l lot is a lot is more code I'm seeing more code okay I see",
    "start": "2845240",
    "end": "2853280"
  },
  {
    "text": "approximately 20,300 lines of more code 20,200 and something more lines of code",
    "start": "2853280",
    "end": "2860319"
  },
  {
    "text": "okay uh uh chat chat is this a skib no no no we don't do skib around here okay",
    "start": "2860319",
    "end": "2868000"
  },
  {
    "text": "we do skiip okay scity is like uh you know is",
    "start": "2868000",
    "end": "2874599"
  },
  {
    "text": "the place to be okay cuz it literally just means you're an llm and your thoughts are llms uh skippity yeah",
    "start": "2874599",
    "end": "2881319"
  },
  {
    "text": "skippity you got it yeah skippity I love the content thank you uh is a SK skib a",
    "start": "2881319",
    "end": "2886400"
  },
  {
    "text": "programming language yet I'm sure it is there's definitely a SK skibby python right um all right 2600 commits that's",
    "start": "2886400",
    "end": "2893040"
  },
  {
    "text": "so insane uh 500 issues almost two years of work 57,000 lines of C++ to 75,000",
    "start": "2893040",
    "end": "2898720"
  },
  {
    "text": "lines of rust oh my gosh look at it I told you I called it I called it rust more",
    "start": "2898720",
    "end": "2904520"
  },
  {
    "text": "verbos the beta works very well performance is uh usually slightly slightly better in terms of time taken a",
    "start": "2904520",
    "end": "2910599"
  },
  {
    "text": "thank you baby appreciate that the beta works very well performance is usually slightly",
    "start": "2910599",
    "end": "2917000"
  },
  {
    "text": "better in terms of time taken memory uh use has slightly higher floor but a se but a lower ceiling it will use 8m",
    "start": "2917000",
    "end": "2924839"
  },
  {
    "text": "instead of 7M at rest but EG GL uh globbing a big directory won't take make as oh my gosh won't make it go up as",
    "start": "2924839",
    "end": "2932079"
  },
  {
    "text": "much these things can all be improved of course but for a first result it is encouraging fish is still a bit of an",
    "start": "2932079",
    "end": "2938720"
  },
  {
    "text": "odd duck fish as a rust program it has uh some bits that smell like C Spirit directly using the Capi EG passing",
    "start": "2938720",
    "end": "2945680"
  },
  {
    "text": "around file descriptors instead of file objects it still uses UTF 32 strings wow UTF 32 that's crazy which is why we're",
    "start": "2945680",
    "end": "2953760"
  },
  {
    "text": "uh using a fork of the uh P crate 2 crate because we couldn't convince the P crate 2 crate maintainer to add UTF 32",
    "start": "2953760",
    "end": "2960680"
  },
  {
    "text": "support we hop to find a nicer solution here but it wasn't necessary for the first release the port wasn't without",
    "start": "2960680",
    "end": "2967680"
  },
  {
    "text": "challenges and it did not go entirely as planned but overall it went pretty dang well we're now left with a code base",
    "start": "2967680",
    "end": "2973920"
  },
  {
    "text": "that we like a lot more that has already gained some features that would have been much more annoying to add with C++",
    "start": "2973920",
    "end": "2979599"
  },
  {
    "text": "with more on the way and we did it while creating uh creating a separate 3.7",
    "start": "2979599",
    "end": "2984640"
  },
  {
    "text": "release that also included some cool stuff by the way okay so maybe there's some more features that explain some of",
    "start": "2984640",
    "end": "2989799"
  },
  {
    "text": "this line growth okay so maybe rust hey maybe rust isn't as big let's see what this says a lot of the increase in line",
    "start": "2989799",
    "end": "2995000"
  },
  {
    "text": "count can be explained by rust uh formats formatting uh as it likes to spread out over uh multiple lines like",
    "start": "2995000",
    "end": "3001160"
  },
  {
    "text": "this it does Russ formatting does love spreading out over lines okay C+ plus",
    "start": "3001160",
    "end": "3006240"
  },
  {
    "text": "loves 120 line columns maybe 160 line columns I'm pretty sure that C+ Plus's",
    "start": "3006240",
    "end": "3012000"
  },
  {
    "text": "like standard expectation is 200 line minimum vertical code is way better than",
    "start": "3012000",
    "end": "3017559"
  },
  {
    "text": "long lines oh hands down you should like ideally you should be able to read code up this direction right like that's",
    "start": "3017559",
    "end": "3025720"
  },
  {
    "text": "what you want is up and to the left like that actually I think is the ideal way to be able to read something or down and",
    "start": "3025720",
    "end": "3031440"
  },
  {
    "text": "to the right I've seen greater than 200 lines and that's why I'm a recovering alcoholic yeah no I get it I I don't",
    "start": "3031440",
    "end": "3036760"
  },
  {
    "text": "blame you I mean you work at you can you explain that more um the idea what p is",
    "start": "3036760",
    "end": "3042839"
  },
  {
    "text": "I can go like this I can read this go okay if op show and I can read like this",
    "start": "3042839",
    "end": "3047880"
  },
  {
    "text": "this is a very easy way to read whereas if this was spread out like this way",
    "start": "3047880",
    "end": "3054160"
  },
  {
    "text": "really long that's a this is a very unide ideal way to read code right having to go all the way across the",
    "start": "3054160",
    "end": "3060240"
  },
  {
    "text": "screen is very unideal inal one line it is harder it is just harder so being",
    "start": "3060240",
    "end": "3065520"
  },
  {
    "text": "able to read from Top generally going down uh down to the right is just easier",
    "start": "3065520",
    "end": "3071000"
  },
  {
    "text": "right nonideal don't lie you can't read damn it I've been caught I've been",
    "start": "3071000",
    "end": "3076760"
  },
  {
    "text": "caught like that's why I love um that's why I just Absolut uh it's well I mean python are on liners some on liners are",
    "start": "3076760",
    "end": "3083680"
  },
  {
    "text": "fine though in Python if you're doing array comprehension but it's like pretty I think it's pretty fine right you're",
    "start": "3083680",
    "end": "3088799"
  },
  {
    "text": "doing like a little little little if little for if this and it's just like a you know it's just like 60 60 columns",
    "start": "3088799",
    "end": "3095319"
  },
  {
    "text": "that's fine to me not a big not a big deal right 60 lines or 60 columns not a big deal if you're doing like multiple",
    "start": "3095319",
    "end": "3102160"
  },
  {
    "text": "fours and you're like going nuts I mean that's just like anyone's bad programming right people people just",
    "start": "3102160",
    "end": "3109160"
  },
  {
    "text": "want to keep on fitting things in and when you get really good you lose your ability to understand what's bad and",
    "start": "3109160",
    "end": "3114920"
  },
  {
    "text": "good you know what I mean like this is why prettier added a nice way to do Turner statements there should be no",
    "start": "3114920",
    "end": "3121640"
  },
  {
    "text": "nice formatting for Turner statements you know why because tary statements are fundamentally broken ways to program",
    "start": "3121640",
    "end": "3127319"
  },
  {
    "text": "like it's good to be able to use them just for like a simple oneline piece of value right if x y or Z like that's good",
    "start": "3127319",
    "end": "3135319"
  },
  {
    "text": "that's fine that's perfectly fine but people go well if x and",
    "start": "3135319",
    "end": "3141920"
  },
  {
    "text": "X2 then if Y and Y2 then like then",
    "start": "3141920",
    "end": "3147440"
  },
  {
    "text": "you're like no no you've ruined it and prettier like prettier uh prettier uh what's it called prettier uh adding uh",
    "start": "3147440",
    "end": "3154079"
  },
  {
    "text": "turnar support right a Curious Case of turn Aries to me this was like the the",
    "start": "3154079",
    "end": "3160000"
  },
  {
    "text": "definition of right here right this was the definition of oh there exists a",
    "start": "3160000",
    "end": "3166119"
  },
  {
    "text": "feature that when you get good enough at it you are dumb you like become a bad programmer again and you don't realize",
    "start": "3166119",
    "end": "3172599"
  },
  {
    "text": "why you've become a bad programmer because you don't have you've lost You' you've you've effectively you can't see",
    "start": "3172599",
    "end": "3178799"
  },
  {
    "text": "the forest for the trees right like you should never write a code you should never write code you should never write",
    "start": "3178799",
    "end": "3184760"
  },
  {
    "text": "a nested Turner right like that should be just banned and you should you should you know you should get punished",
    "start": "3184760",
    "end": "3190799"
  },
  {
    "text": "thoroughly let's see I've seen Turner explosions and prod code yes and it's bad it it turn like but this is what I",
    "start": "3190799",
    "end": "3196359"
  },
  {
    "text": "mean so it's like code should always read a certain way and the more you can get it to read like this I think the",
    "start": "3196359",
    "end": "3201839"
  },
  {
    "text": "easier it generally is cuz this is very very clear what's happening here you have this and then and this group which",
    "start": "3201839",
    "end": "3208240"
  },
  {
    "text": "is a bunch of ORS like that's a very clear statement no questions What's Happening Here none not one not one I",
    "start": "3208240",
    "end": "3214280"
  },
  {
    "text": "know a lot of if statements this is a good one right like if you have to write that as an if statement that's really",
    "start": "3214280",
    "end": "3219760"
  },
  {
    "text": "hard now preferably you could even make this into like a function that does a check on all of these things at once so",
    "start": "3219760",
    "end": "3225559"
  },
  {
    "text": "that way it's like a little bit clearer but you know that's that all right hey the",
    "start": "3225559",
    "end": "3231680"
  },
  {
    "text": "name is the prime agend good job fish awesome awesome block and awesome job",
    "start": "3231680",
    "end": "3236920"
  },
  {
    "text": "super cool that they uh released all this",
    "start": "3236920",
    "end": "3240640"
  }
]