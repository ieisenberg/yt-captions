[
  {
    "start": "0",
    "end": "90000"
  },
  {
    "text": "typescript 5.3 let's do this are you",
    "start": "160",
    "end": "2520"
  },
  {
    "text": "guys excited are you guys excited man I",
    "start": "2520",
    "end": "4799"
  },
  {
    "text": "have never been more excited to continue",
    "start": "4799",
    "end": "8160"
  },
  {
    "text": "to not like something in my entire",
    "start": "8160",
    "end": "9960"
  },
  {
    "text": "lifetime let's see what's new okay",
    "start": "9960",
    "end": "11679"
  },
  {
    "text": "here's the quick list of it import",
    "start": "11679",
    "end": "13200"
  },
  {
    "text": "attributes stable support resolution",
    "start": "13200",
    "end": "15080"
  },
  {
    "text": "mode on in import type switch true",
    "start": "15080",
    "end": "17160"
  },
  {
    "text": "narrowing narrowing on comparison switch",
    "start": "17160",
    "end": "20000"
  },
  {
    "text": "true I feel like if I saw the term",
    "start": "20000",
    "end": "22279"
  },
  {
    "text": "switch true I would want to punch",
    "start": "22279",
    "end": "24000"
  },
  {
    "text": "somebody in the face uh narrowing on",
    "start": "24000",
    "end": "26199"
  },
  {
    "text": "comparisons to booing in uh instance of",
    "start": "26199",
    "end": "29359"
  },
  {
    "text": "narrowing through symbol has instance",
    "start": "29359",
    "end": "31039"
  },
  {
    "text": "checks of super uh interactivity inlay",
    "start": "31039",
    "end": "33680"
  },
  {
    "text": "hints okay interesting I like I like",
    "start": "33680",
    "end": "35760"
  },
  {
    "text": "inlay hints optimizations by skipping JS",
    "start": "35760",
    "end": "38399"
  },
  {
    "text": "do parsing what happened if I want JS do",
    "start": "38399",
    "end": "40480"
  },
  {
    "text": "parsing by the way I wrote my first",
    "start": "40480",
    "end": "42440"
  },
  {
    "text": "JavaScript plug-in yesterday and it used",
    "start": "42440",
    "end": "45239"
  },
  {
    "text": "JS do and guess what it was great dude I",
    "start": "45239",
    "end": "49120"
  },
  {
    "text": "was sitting there trying to figure out",
    "start": "49120",
    "end": "50199"
  },
  {
    "text": "how to run this and then I had to like",
    "start": "50199",
    "end": "51680"
  },
  {
    "text": "run this entire thing and then I had to",
    "start": "51680",
    "end": "53640"
  },
  {
    "text": "figure out how am I going to run this",
    "start": "53640",
    "end": "54920"
  },
  {
    "text": "thing in JavaScript I had to created an",
    "start": "54920",
    "end": "56480"
  },
  {
    "text": "entire build system just for this stupid",
    "start": "56480",
    "end": "58440"
  },
  {
    "text": "file I don't want to deal with any of it",
    "start": "58440",
    "end": "60440"
  },
  {
    "text": "so instead of doing with any of it I",
    "start": "60440",
    "end": "62320"
  },
  {
    "text": "just used JS Doc and called it a day I",
    "start": "62320",
    "end": "64600"
  },
  {
    "text": "defined like two variables bada bing",
    "start": "64600",
    "end": "67159"
  },
  {
    "text": "bada boom it was more than enough called",
    "start": "67159",
    "end": "69680"
  },
  {
    "text": "it a day it was so effing awesome I",
    "start": "69680",
    "end": "73159"
  },
  {
    "text": "literally wrote a script I can call in",
    "start": "73159",
    "end": "74720"
  },
  {
    "text": "node in three seconds with virtually no",
    "start": "74720",
    "end": "78000"
  },
  {
    "text": "effort sorry anyways optimizations by",
    "start": "78000",
    "end": "80079"
  },
  {
    "text": "comparing non-normalized intersections",
    "start": "80079",
    "end": "81720"
  },
  {
    "text": "CU I don't know what that means oh who",
    "start": "81720",
    "end": "83479"
  },
  {
    "text": "whose intersections aren't normalized",
    "start": "83479",
    "end": "85280"
  },
  {
    "text": "consolidation between TS server Library",
    "start": "85280",
    "end": "87000"
  },
  {
    "text": "JS and typescript JS breaking changes",
    "start": "87000",
    "end": "88680"
  },
  {
    "text": "and correctness improvements okay what",
    "start": "88680",
    "end": "90200"
  },
  {
    "start": "90000",
    "end": "265000"
  },
  {
    "text": "is import attributes I don't know what",
    "start": "90200",
    "end": "91680"
  },
  {
    "text": "this means um oh great does this I can",
    "start": "91680",
    "end": "95119"
  },
  {
    "text": "can you guys hear it right now can you",
    "start": "95119",
    "end": "97079"
  },
  {
    "text": "guys hey guys can you hear that right",
    "start": "97079",
    "end": "98799"
  },
  {
    "text": "now I can hear it that's bun crying a",
    "start": "98799",
    "end": "102240"
  },
  {
    "text": "little bit why do we got to support",
    "start": "102240",
    "end": "104560"
  },
  {
    "text": "another thing why why don't they just",
    "start": "104560",
    "end": "108079"
  },
  {
    "text": "now dude we got so many sweet standards",
    "start": "108079",
    "end": "110240"
  },
  {
    "text": "for importing stuff I love it I love it",
    "start": "110240",
    "end": "112719"
  },
  {
    "text": "I'm so excited I'm so excited for more",
    "start": "112719",
    "end": "115799"
  },
  {
    "text": "stuff uh we only want this to be",
    "start": "115799",
    "end": "117520"
  },
  {
    "text": "interpreted as Json not runnable",
    "start": "117520",
    "end": "119079"
  },
  {
    "text": "malicious Javas script file with a Json",
    "start": "119079",
    "end": "122240"
  },
  {
    "text": "extension the thing malicious about",
    "start": "122240",
    "end": "124520"
  },
  {
    "text": "JavaScript is how much memory and CPU it",
    "start": "124520",
    "end": "126680"
  },
  {
    "text": "uses all right anyways I mean I guess I",
    "start": "126680",
    "end": "129440"
  },
  {
    "text": "get this but I just don't understand",
    "start": "129440",
    "end": "131120"
  },
  {
    "text": "this uh put it in your browser probably",
    "start": "131120",
    "end": "133080"
  },
  {
    "text": "not typescript is fine with this put it",
    "start": "133080",
    "end": "134560"
  },
  {
    "text": "in your browser probably not let's see",
    "start": "134560",
    "end": "136040"
  },
  {
    "text": "the contents of these uh attributes are",
    "start": "136040",
    "end": "138080"
  },
  {
    "text": "not checked by typescript since the uh",
    "start": "138080",
    "end": "139800"
  },
  {
    "text": "they are host specific and are simply",
    "start": "139800",
    "end": "141920"
  },
  {
    "text": "left alone so that the browser and",
    "start": "141920",
    "end": "143200"
  },
  {
    "text": "runtimes can handle uh them possibly",
    "start": "143200",
    "end": "145400"
  },
  {
    "text": "error Dynamic import calls uh calls can",
    "start": "145400",
    "end": "148599"
  },
  {
    "text": "also use import through a second",
    "start": "148599",
    "end": "150760"
  },
  {
    "text": "argument okay uh the expected type of",
    "start": "150760",
    "end": "153080"
  },
  {
    "text": "the second argument is defined by the",
    "start": "153080",
    "end": "154920"
  },
  {
    "text": "type called import call options which by",
    "start": "154920",
    "end": "158040"
  },
  {
    "text": "default just expects a property uh",
    "start": "158040",
    "end": "160680"
  },
  {
    "text": "called with",
    "start": "160680",
    "end": "162200"
  },
  {
    "text": "Note uh the import uh attributes are an",
    "start": "162200",
    "end": "165000"
  },
  {
    "text": "evolution of an earlier proposal called",
    "start": "165000",
    "end": "166680"
  },
  {
    "text": "import assertions which are implemented",
    "start": "166680",
    "end": "168280"
  },
  {
    "text": "in typescript 4.5 the most obvious",
    "start": "168280",
    "end": "170360"
  },
  {
    "text": "difference is uh the use of the wi",
    "start": "170360",
    "end": "172319"
  },
  {
    "text": "keyword which by the way the word the",
    "start": "172319",
    "end": "174040"
  },
  {
    "text": "with keyword uh wi is already a keyword",
    "start": "174040",
    "end": "177159"
  },
  {
    "text": "in typescript and with is the devil with",
    "start": "177159",
    "end": "180040"
  },
  {
    "text": "is single-handedly the worst keyword and",
    "start": "180040",
    "end": "183080"
  },
  {
    "text": "idea ever created in any language and if",
    "start": "183080",
    "end": "185920"
  },
  {
    "text": "you don't know what JavaScript with is",
    "start": "185920",
    "end": "188159"
  },
  {
    "text": "go take a moment go check it out I okay",
    "start": "188159",
    "end": "190920"
  },
  {
    "text": "so my big worry here is just like I",
    "start": "190920",
    "end": "193120"
  },
  {
    "text": "don't want more stuff right first off",
    "start": "193120",
    "end": "195879"
  },
  {
    "text": "who something has to say I I assume Json",
    "start": "195879",
    "end": "199360"
  },
  {
    "text": "is like a known one so it treats it like",
    "start": "199360",
    "end": "201159"
  },
  {
    "text": "Json but how do you extend this what",
    "start": "201159",
    "end": "202959"
  },
  {
    "text": "does this mean what is fluffy bunny can",
    "start": "202959",
    "end": "204959"
  },
  {
    "text": "you define fluffy bunny is it purely up",
    "start": "204959",
    "end": "207239"
  },
  {
    "text": "to the vendors or are there going to be",
    "start": "207239",
    "end": "208400"
  },
  {
    "text": "client side things are we going to now",
    "start": "208400",
    "end": "209840"
  },
  {
    "text": "get typescript interacting with bundlers",
    "start": "209840",
    "end": "211920"
  },
  {
    "text": "what's going to happen with this I don't",
    "start": "211920",
    "end": "213840"
  },
  {
    "text": "know interesting stable support",
    "start": "213840",
    "end": "215680"
  },
  {
    "text": "resolution mode in import types I'm not",
    "start": "215680",
    "end": "217360"
  },
  {
    "text": "sure what that means all right 47 uh",
    "start": "217360",
    "end": "219439"
  },
  {
    "text": "typescript added support for resolution",
    "start": "219439",
    "end": "221319"
  },
  {
    "text": "mode I honestly never use these let's",
    "start": "221319",
    "end": "224519"
  },
  {
    "text": "see resolve package as if we are",
    "start": "224519",
    "end": "226319"
  },
  {
    "text": "importing with",
    "start": "226319",
    "end": "227959"
  },
  {
    "text": "require bun is so screwed bun is so",
    "start": "227959",
    "end": "232840"
  },
  {
    "text": "screwed how were you ever going to",
    "start": "232840",
    "end": "235079"
  },
  {
    "text": "support this imagine how many different",
    "start": "235079",
    "end": "237680"
  },
  {
    "text": "versions of s like stuff you have to dud",
    "start": "237680",
    "end": "240000"
  },
  {
    "text": "dude this is insane I don't know how I",
    "start": "240000",
    "end": "242599"
  },
  {
    "text": "feel about this one okay so you import",
    "start": "242599",
    "end": "244920"
  },
  {
    "text": "from package but using the resolution of",
    "start": "244920",
    "end": "248400"
  },
  {
    "text": "uh of require this one you do use it but",
    "start": "248400",
    "end": "250920"
  },
  {
    "text": "you're using it with the resolution mode",
    "start": "250920",
    "end": "253000"
  },
  {
    "text": "of import uh those import attributes can",
    "start": "253000",
    "end": "255959"
  },
  {
    "text": "also be used with import types okay so",
    "start": "255959",
    "end": "257600"
  },
  {
    "text": "you can still do the with resolution",
    "start": "257600",
    "end": "259280"
  },
  {
    "text": "mode ah I mean again I'm not I just",
    "start": "259280",
    "end": "263160"
  },
  {
    "text": "maybe I don't understand okay so so",
    "start": "263160",
    "end": "265120"
  },
  {
    "start": "265000",
    "end": "315000"
  },
  {
    "text": "completely Fair statement is that I can",
    "start": "265120",
    "end": "267040"
  },
  {
    "text": "see why this is nice but can I also just",
    "start": "267040",
    "end": "269960"
  },
  {
    "text": "argue that maybe if it ends with Json",
    "start": "269960",
    "end": "272639"
  },
  {
    "text": "you just force it to parse it as Json",
    "start": "272639",
    "end": "274960"
  },
  {
    "text": "and you don't allow runnable malicious",
    "start": "274960",
    "end": "276759"
  },
  {
    "text": "JavaScript files hiding themselves as",
    "start": "276759",
    "end": "278680"
  },
  {
    "text": "Json right I mean is that fair just have",
    "start": "278680",
    "end": "281560"
  },
  {
    "text": "the extension be the thing that denotes",
    "start": "281560",
    "end": "284240"
  },
  {
    "text": "how you treat it uh because something.",
    "start": "284240",
    "end": "286759"
  },
  {
    "text": "Json oh I guess you could because",
    "start": "286759",
    "end": "288759"
  },
  {
    "text": "because of how import works you have",
    "start": "288759",
    "end": "290199"
  },
  {
    "text": "something. json. JavaScript right and so",
    "start": "290199",
    "end": "293360"
  },
  {
    "text": "you've been lied to and they don't they",
    "start": "293360",
    "end": "295039"
  },
  {
    "text": "they're none the they're none the wiser",
    "start": "295039",
    "end": "297280"
  },
  {
    "text": "I mean I understand I guess I do",
    "start": "297280",
    "end": "299080"
  },
  {
    "text": "understand this but but I guess I have a",
    "start": "299080",
    "end": "300039"
  },
  {
    "text": "couple follow-up questions which is a",
    "start": "300039",
    "end": "301520"
  },
  {
    "text": "how did you get this malicious",
    "start": "301520",
    "end": "302520"
  },
  {
    "text": "JavaScript on your stuff at all I mean",
    "start": "302520",
    "end": "304320"
  },
  {
    "text": "this is a local file import right here",
    "start": "304320",
    "end": "306880"
  },
  {
    "text": "like how did you even get this okay how",
    "start": "306880",
    "end": "309320"
  },
  {
    "text": "how did you even get this this local",
    "start": "309320",
    "end": "311039"
  },
  {
    "text": "maliciousness on your but anyways I get",
    "start": "311039",
    "end": "313280"
  },
  {
    "text": "the idea but still it just feels all",
    "start": "313280",
    "end": "315880"
  },
  {
    "start": "315000",
    "end": "570000"
  },
  {
    "text": "upsetting if you program like this I",
    "start": "315880",
    "end": "318000"
  },
  {
    "text": "think you deserve to be fired we're just",
    "start": "318000",
    "end": "319560"
  },
  {
    "text": "going to move on we're just going to get",
    "start": "319560",
    "end": "320919"
  },
  {
    "text": "moved on if I see this if I see this",
    "start": "320919",
    "end": "322840"
  },
  {
    "text": "code I'm firing you okay use a gosh darn",
    "start": "322840",
    "end": "326319"
  },
  {
    "text": "if statement for this who would do that",
    "start": "326319",
    "end": "328000"
  },
  {
    "text": "would you really do this straight to",
    "start": "328000",
    "end": "331360"
  },
  {
    "text": "jail that's crazy all right narrowing on",
    "start": "331360",
    "end": "334759"
  },
  {
    "text": "comparisons to boings occasionally you",
    "start": "334759",
    "end": "336960"
  },
  {
    "text": "may find yourself performing a direct",
    "start": "336960",
    "end": "338520"
  },
  {
    "text": "comparison with true or false",
    "start": "338520",
    "end": "340199"
  },
  {
    "text": "occasionally that's like 80% of",
    "start": "340199",
    "end": "342199"
  },
  {
    "text": "programming is just if statements I mean",
    "start": "342199",
    "end": "344400"
  },
  {
    "text": "a for Loop is just that uh in a",
    "start": "344400",
    "end": "346600"
  },
  {
    "text": "condition let's see usually uh these are",
    "start": "346600",
    "end": "348360"
  },
  {
    "text": "unnecessary comparisons but you might",
    "start": "348360",
    "end": "350080"
  },
  {
    "text": "prefer it uh as a point of style or to",
    "start": "350080",
    "end": "352720"
  },
  {
    "text": "avoid certain issues around JavaScript",
    "start": "352720",
    "end": "354600"
  },
  {
    "text": "truthiness regardless previous uh type",
    "start": "354600",
    "end": "357400"
  },
  {
    "text": "oh they just mean literally having true",
    "start": "357400",
    "end": "359520"
  },
  {
    "text": "or false yeah I don't mind that it",
    "start": "359520",
    "end": "361000"
  },
  {
    "text": "happens um all right so what's the deal",
    "start": "361000",
    "end": "363360"
  },
  {
    "text": "let's see JavaScript or typescript 53",
    "start": "363360",
    "end": "365680"
  },
  {
    "text": "now keeps up and understands uh these",
    "start": "365680",
    "end": "368120"
  },
  {
    "text": "expressions in narrowing variables all",
    "start": "368120",
    "end": "370639"
  },
  {
    "text": "right function is a x my type X is a a",
    "start": "370639",
    "end": "377120"
  },
  {
    "text": "in x if x is true it works oh nice I'm",
    "start": "377120",
    "end": "383280"
  },
  {
    "text": "happy about that is there a deer Prime",
    "start": "383280",
    "end": "384680"
  },
  {
    "text": "engine no not in this one this is vs",
    "start": "384680",
    "end": "386520"
  },
  {
    "text": "this is Microsoft Microsoft do not like",
    "start": "386520",
    "end": "388599"
  },
  {
    "text": "me that's that's good okay hey that's",
    "start": "388599",
    "end": "390680"
  },
  {
    "text": "good good job I I'm happy I'm happy with",
    "start": "390680",
    "end": "393199"
  },
  {
    "text": "this uh instance of uh narrowing through",
    "start": "393199",
    "end": "395800"
  },
  {
    "text": "symbol has instance new thing instance",
    "start": "395800",
    "end": "398520"
  },
  {
    "text": "of weirdo undefined instance of weirdo",
    "start": "398520",
    "end": "401919"
  },
  {
    "text": "true oh interesting okay so you can do",
    "start": "401919",
    "end": "404880"
  },
  {
    "text": "type narrowing through has instance by",
    "start": "404880",
    "end": "407120"
  },
  {
    "text": "the way this is such a weird example",
    "start": "407120",
    "end": "408440"
  },
  {
    "text": "that they're doing like why would you do",
    "start": "408440",
    "end": "409720"
  },
  {
    "text": "this this is just like painful to even",
    "start": "409720",
    "end": "411720"
  },
  {
    "text": "look at okay but why would you do this",
    "start": "411720",
    "end": "413599"
  },
  {
    "text": "give me like an example of where this is",
    "start": "413599",
    "end": "414919"
  },
  {
    "text": "very nice all right static simple",
    "start": "414919",
    "end": "417160"
  },
  {
    "text": "instance has instance vow is Point like",
    "start": "417160",
    "end": "420120"
  },
  {
    "text": "Point like has X and Y okay so if it has",
    "start": "420120",
    "end": "423039"
  },
  {
    "text": "these two",
    "start": "423039",
    "end": "423960"
  },
  {
    "text": "things all right wow that is such a deep",
    "start": "423960",
    "end": "428039"
  },
  {
    "text": "dude look at this has",
    "start": "428039",
    "end": "430759"
  },
  {
    "text": "instance it's crazy if in if value",
    "start": "430759",
    "end": "434120"
  },
  {
    "text": "instance of point we can get X and Y we",
    "start": "434120",
    "end": "436919"
  },
  {
    "text": "don't have access to this because we",
    "start": "436919",
    "end": "438599"
  },
  {
    "text": "have a point like but we don't actually",
    "start": "438599",
    "end": "441560"
  },
  {
    "text": "have a point why would you ever want to",
    "start": "441560",
    "end": "445360"
  },
  {
    "text": "programmatically override has instance",
    "start": "445360",
    "end": "447919"
  },
  {
    "text": "of a class that has functions such as",
    "start": "447919",
    "end": "450199"
  },
  {
    "text": "distance from origin and then only allow",
    "start": "450199",
    "end": "453360"
  },
  {
    "text": "access to the variables at this point",
    "start": "453360",
    "end": "456280"
  },
  {
    "text": "this is the only time an abstract class",
    "start": "456280",
    "end": "458039"
  },
  {
    "text": "makes any sense you'd have to have an",
    "start": "458039",
    "end": "459400"
  },
  {
    "text": "abstract class with these two things",
    "start": "459400",
    "end": "460800"
  },
  {
    "text": "then you're going to have to extend",
    "start": "460800",
    "end": "462000"
  },
  {
    "text": "because there's no reason in the world",
    "start": "462000",
    "end": "463400"
  },
  {
    "text": "why you want to have Point resolved to a",
    "start": "463400",
    "end": "465639"
  },
  {
    "text": "point like whereas you should be able to",
    "start": "465639",
    "end": "467759"
  },
  {
    "text": "use Point like as an instance of check",
    "start": "467759",
    "end": "471159"
  },
  {
    "text": "it just it just feels kind of cray okay",
    "start": "471159",
    "end": "474199"
  },
  {
    "text": "it just feels kind of cray can we extend",
    "start": "474199",
    "end": "476720"
  },
  {
    "text": "car into a cow type Maybe we could yes",
    "start": "476720",
    "end": "480759"
  },
  {
    "text": "that means you could you could do",
    "start": "480759",
    "end": "481800"
  },
  {
    "text": "whatever you want here oh yeah",
    "start": "481800",
    "end": "483599"
  },
  {
    "text": "let's try that right now pick pick good",
    "start": "483599",
    "end": "485800"
  },
  {
    "text": "all oh crap we don't we don't quite have",
    "start": "485800",
    "end": "488159"
  },
  {
    "text": "it I don't have I I'd have to install",
    "start": "488159",
    "end": "489800"
  },
  {
    "text": "this I actually do want to try that can",
    "start": "489800",
    "end": "491680"
  },
  {
    "text": "we do that let's find out okay uh let's",
    "start": "491680",
    "end": "494960"
  },
  {
    "text": "go like this uh let's back it up let's",
    "start": "494960",
    "end": "497240"
  },
  {
    "text": "go like this makeer uh Fufu uh Fufu npm",
    "start": "497240",
    "end": "502039"
  },
  {
    "text": "uhit y uh let's in let's get the",
    "start": "502039",
    "end": "505120"
  },
  {
    "text": "typescript beta just in here just strong",
    "start": "505120",
    "end": "507800"
  },
  {
    "text": "beta mail Vibes going on right here uh",
    "start": "507800",
    "end": "510199"
  },
  {
    "text": "let's go TSC a nit all right Vim uh test",
    "start": "510199",
    "end": "514560"
  },
  {
    "text": "TS and uh dddd give me the D give me the",
    "start": "514560",
    "end": "517880"
  },
  {
    "text": "D give me the D let's just grab this",
    "start": "517880",
    "end": "519839"
  },
  {
    "text": "thing really quickly let's yank this",
    "start": "519839",
    "end": "522000"
  },
  {
    "text": "thing uh let's put this in here and then",
    "start": "522000",
    "end": "525040"
  },
  {
    "text": "let's go like this uh let's have a cow",
    "start": "525040",
    "end": "527040"
  },
  {
    "text": "return a point like uh return true right",
    "start": "527040",
    "end": "530519"
  },
  {
    "text": "close enough right so that means I",
    "start": "530519",
    "end": "532480"
  },
  {
    "text": "should be able to go like",
    "start": "532480",
    "end": "534680"
  },
  {
    "text": "this uh function let's see hold on oh F",
    "start": "534680",
    "end": "538279"
  },
  {
    "text": "uh F let's see see a new",
    "start": "538279",
    "end": "542000"
  },
  {
    "text": "cow all right there we go",
    "start": "542279",
    "end": "546120"
  },
  {
    "text": "beautiful you you can just return",
    "start": "553480",
    "end": "556760"
  },
  {
    "text": "whatever the hell you want who cares I",
    "start": "556760",
    "end": "559920"
  },
  {
    "text": "don't even I don't even inherit from",
    "start": "559920",
    "end": "561600"
  },
  {
    "text": "point like I don't even have an X or a",
    "start": "561600",
    "end": "564760"
  },
  {
    "text": "y I can just make it whatever the hell I",
    "start": "564760",
    "end": "568120"
  },
  {
    "text": "want type",
    "start": "568120",
    "end": "570120"
  },
  {
    "start": "570000",
    "end": "994000"
  },
  {
    "text": "safety uh anyways okay checks from the",
    "start": "570120",
    "end": "572440"
  },
  {
    "text": "super property access on instance field",
    "start": "572440",
    "end": "574399"
  },
  {
    "text": "okay let's see super method uh base call",
    "start": "574399",
    "end": "577480"
  },
  {
    "text": "um derived method call Su method there",
    "start": "577480",
    "end": "579640"
  },
  {
    "text": "we go derived see this is the diff let's",
    "start": "579640",
    "end": "582399"
  },
  {
    "text": "see this is different from writing",
    "start": "582399",
    "end": "583399"
  },
  {
    "text": "something like this. Su method uh since",
    "start": "583399",
    "end": "586040"
  },
  {
    "text": "it could invoke an overridden uh method",
    "start": "586040",
    "end": "588279"
  },
  {
    "text": "okay I'm confused a little bit here okay",
    "start": "588279",
    "end": "590320"
  },
  {
    "text": "hold on JavaScript it's possible to",
    "start": "590320",
    "end": "591959"
  },
  {
    "text": "access declaration in a base class",
    "start": "591959",
    "end": "594000"
  },
  {
    "text": "through the super keyword okay fair this",
    "start": "594000",
    "end": "596440"
  },
  {
    "text": "is different from writing something like",
    "start": "596440",
    "end": "597760"
  },
  {
    "text": "this. meth uh some method me since it",
    "start": "597760",
    "end": "599800"
  },
  {
    "text": "could invoke an overridden method this",
    "start": "599800",
    "end": "601560"
  },
  {
    "text": "is a subtle distinction made more subtle",
    "start": "601560",
    "end": "603560"
  },
  {
    "text": "by the fact that often the two can be",
    "start": "603560",
    "end": "606040"
  },
  {
    "text": "interchangeable if the Declaration is",
    "start": "606040",
    "end": "607640"
  },
  {
    "text": "never overwritten at all okay yes okay",
    "start": "607640",
    "end": "610720"
  },
  {
    "text": "that makes sense this since there is no",
    "start": "610720",
    "end": "612720"
  },
  {
    "text": "this here it goes all the way up to the",
    "start": "612720",
    "end": "614160"
  },
  {
    "text": "base yeah okay the problem with using",
    "start": "614160",
    "end": "616519"
  },
  {
    "text": "them interchangeably is that super only",
    "start": "616519",
    "end": "618200"
  },
  {
    "text": "works on members declared on the",
    "start": "618200",
    "end": "619800"
  },
  {
    "text": "Prototype not instance properties that",
    "start": "619800",
    "end": "622279"
  },
  {
    "text": "means if you wrote something like super",
    "start": "622279",
    "end": "623880"
  },
  {
    "text": "uh Super SU method but some method was",
    "start": "623880",
    "end": "626160"
  },
  {
    "text": "defined as a field you'd get a runtime",
    "start": "626160",
    "end": "628519"
  },
  {
    "text": "error",
    "start": "628519",
    "end": "629560"
  },
  {
    "text": "if you wrote a field that is a function",
    "start": "629560",
    "end": "631839"
  },
  {
    "text": "again the neck punching should just like",
    "start": "631839",
    "end": "634200"
  },
  {
    "text": "you deserve you deserve the neck punch",
    "start": "634200",
    "end": "637079"
  },
  {
    "text": "okay why why are you writing why are you",
    "start": "637079",
    "end": "640639"
  },
  {
    "text": "writing a a field as a function okay it",
    "start": "640639",
    "end": "644920"
  },
  {
    "text": "makes no sense what the hell's happening",
    "start": "644920",
    "end": "647800"
  },
  {
    "text": "what the hell's happening in JavaScript",
    "start": "647800",
    "end": "649760"
  },
  {
    "text": "every time I see this I just it just is",
    "start": "649760",
    "end": "652399"
  },
  {
    "text": "emotionally painful tesp 53 now uh more",
    "start": "652399",
    "end": "655519"
  },
  {
    "text": "closely inspects super property access",
    "start": "655519",
    "end": "657360"
  },
  {
    "text": "methods calls to see if they are",
    "start": "657360",
    "end": "658639"
  },
  {
    "text": "corresponding responding to a class",
    "start": "658639",
    "end": "659720"
  },
  {
    "text": "Fields if they do we'll now get a type",
    "start": "659720",
    "end": "662000"
  },
  {
    "text": "checked there oh okay well I mean that's",
    "start": "662000",
    "end": "664320"
  },
  {
    "text": "neat but still interesting all right",
    "start": "664320",
    "end": "667560"
  },
  {
    "text": "interactive inlay hints for types by the",
    "start": "667560",
    "end": "669519"
  },
  {
    "text": "way I hate inlay hints in the code I",
    "start": "669519",
    "end": "672600"
  },
  {
    "text": "think neovim does it right they put the",
    "start": "672600",
    "end": "674160"
  },
  {
    "text": "inlay hints on the outside I honestly",
    "start": "674160",
    "end": "676240"
  },
  {
    "text": "think that's way better and it it's",
    "start": "676240",
    "end": "678920"
  },
  {
    "text": "really great in Rust my strategy is to",
    "start": "678920",
    "end": "680519"
  },
  {
    "text": "be blind to all of these it helps me a",
    "start": "680519",
    "end": "682360"
  },
  {
    "text": "little yeah these are all these all seem",
    "start": "682360",
    "end": "685000"
  },
  {
    "text": "really kind of",
    "start": "685000",
    "end": "686600"
  },
  {
    "text": "wild I'm a little bit confused I think",
    "start": "686600",
    "end": "689160"
  },
  {
    "text": "right I think you should just never ever",
    "start": "689160",
    "end": "692160"
  },
  {
    "text": "rely on any of anything that's been said",
    "start": "692160",
    "end": "694760"
  },
  {
    "text": "up until this",
    "start": "694760",
    "end": "696279"
  },
  {
    "text": "point all of these just seem like crazy",
    "start": "696279",
    "end": "698880"
  },
  {
    "text": "features to me things that I I I mean",
    "start": "698880",
    "end": "701240"
  },
  {
    "text": "the import one maybe I just don't",
    "start": "701240",
    "end": "702639"
  },
  {
    "text": "understand fair fair but everything else",
    "start": "702639",
    "end": "704800"
  },
  {
    "text": "seems a little wild typescript now",
    "start": "704800",
    "end": "706880"
  },
  {
    "text": "supports inlay uh now supports jumping",
    "start": "706880",
    "end": "709040"
  },
  {
    "text": "to definition of types",
    "start": "709040",
    "end": "711760"
  },
  {
    "text": "oh cool I mean except for the whole",
    "start": "711760",
    "end": "714959"
  },
  {
    "text": "Mouse thing loser um everything else",
    "start": "714959",
    "end": "718000"
  },
  {
    "text": "pretty cool op optimizations by skipping",
    "start": "718000",
    "end": "720079"
  },
  {
    "text": "JS deck parsing when uh when running",
    "start": "720079",
    "end": "722320"
  },
  {
    "text": "typescript via TSC the compiler will now",
    "start": "722320",
    "end": "724720"
  },
  {
    "text": "avoid parsing JS docs this drops parsing",
    "start": "724720",
    "end": "727600"
  },
  {
    "text": "time on its own but also reduces memory",
    "start": "727600",
    "end": "730000"
  },
  {
    "text": "usage to store comments along with time",
    "start": "730000",
    "end": "731920"
  },
  {
    "text": "spent in garbage collection I would make",
    "start": "731920",
    "end": "734480"
  },
  {
    "text": "an alternative which is you could always",
    "start": "734480",
    "end": "737600"
  },
  {
    "text": "just write it in not JavaScript right",
    "start": "737600",
    "end": "740360"
  },
  {
    "text": "like if you just wrote TSC and just not",
    "start": "740360",
    "end": "742240"
  },
  {
    "text": "using JavaScript it would just be fast",
    "start": "742240",
    "end": "745760"
  },
  {
    "text": "you know what I mean it would just be",
    "start": "745760",
    "end": "747079"
  },
  {
    "text": "really fast and and everyone's life",
    "start": "747079",
    "end": "748920"
  },
  {
    "text": "would be better um instead of having es",
    "start": "748920",
    "end": "751360"
  },
  {
    "text": "build and S swc and having hundreds of",
    "start": "751360",
    "end": "754279"
  },
  {
    "text": "different new ones coming out I swear",
    "start": "754279",
    "end": "756279"
  },
  {
    "text": "there's going to be another one there's",
    "start": "756279",
    "end": "757600"
  },
  {
    "text": "going to be another one there's going to",
    "start": "757600",
    "end": "758959"
  },
  {
    "text": "be another one after the another one",
    "start": "758959",
    "end": "760600"
  },
  {
    "text": "just it's a Non-Stop fever dream of",
    "start": "760600",
    "end": "762199"
  },
  {
    "text": "creating new JavaScript tools why don't",
    "start": "762199",
    "end": "763920"
  },
  {
    "text": "you just make the one tool that",
    "start": "763920",
    "end": "765079"
  },
  {
    "text": "everybody's relying on just make it",
    "start": "765079",
    "end": "766680"
  },
  {
    "text": "correctly just make the effing thing in",
    "start": "766680",
    "end": "768000"
  },
  {
    "text": "the correct thing okay just just write",
    "start": "768000",
    "end": "770240"
  },
  {
    "text": "it in Rust and then this is just not a",
    "start": "770240",
    "end": "773040"
  },
  {
    "text": "problem write it and see write it in go",
    "start": "773040",
    "end": "775399"
  },
  {
    "text": "write it in any write it in PHP just",
    "start": "775399",
    "end": "778480"
  },
  {
    "text": "write it in",
    "start": "778480",
    "end": "780320"
  },
  {
    "text": "anything but the language it's currently",
    "start": "780320",
    "end": "782360"
  },
  {
    "text": "written in cuz it's crazy it's just not",
    "start": "782360",
    "end": "784880"
  },
  {
    "text": "what javascript's good at that's all it",
    "start": "784880",
    "end": "786639"
  },
  {
    "text": "is like javascript's graded a lot of",
    "start": "786639",
    "end": "788920"
  },
  {
    "text": "things being fast is just not one of",
    "start": "788920",
    "end": "791480"
  },
  {
    "text": "them every day a new JJs framework is",
    "start": "791480",
    "end": "794320"
  },
  {
    "text": "born yes well there's also every day a",
    "start": "794320",
    "end": "796279"
  },
  {
    "text": "new tool is uh written in JavaScript and",
    "start": "796279",
    "end": "799760"
  },
  {
    "text": "it's coraly which is that tool will",
    "start": "799760",
    "end": "802279"
  },
  {
    "text": "eventually be Rewritten two times once",
    "start": "802279",
    "end": "804920"
  },
  {
    "text": "in go and then once in Rust it's part of",
    "start": "804920",
    "end": "807279"
  },
  {
    "text": "the JavaScript rule set you just got to",
    "start": "807279",
    "end": "809320"
  },
  {
    "text": "know let's see optimization by comparing",
    "start": "809320",
    "end": "811480"
  },
  {
    "text": "non-normalized intersections in",
    "start": "811480",
    "end": "813079"
  },
  {
    "text": "typescript unions and intersections",
    "start": "813079",
    "end": "814480"
  },
  {
    "text": "always follow a specific form uh where",
    "start": "814480",
    "end": "817040"
  },
  {
    "text": "intersections can contain uh Union types",
    "start": "817040",
    "end": "819680"
  },
  {
    "text": "this means we can create intersections",
    "start": "819680",
    "end": "821360"
  },
  {
    "text": "uh like this okay a uh a is a union or",
    "start": "821360",
    "end": "825279"
  },
  {
    "text": "it's a a union B or C that will be the",
    "start": "825279",
    "end": "828240"
  },
  {
    "text": "intersection type of this okay fair",
    "start": "828240",
    "end": "830000"
  },
  {
    "text": "still in some cases the type systems",
    "start": "830000",
    "end": "831440"
  },
  {
    "text": "maintain the original form for display",
    "start": "831440",
    "end": "833120"
  },
  {
    "text": "purposes it turns out that the original",
    "start": "833120",
    "end": "835000"
  },
  {
    "text": "form can be used for some clever fast-",
    "start": "835000",
    "end": "836639"
  },
  {
    "text": "path comparisons between types for",
    "start": "836639",
    "end": "838160"
  },
  {
    "text": "example some type and type one to the",
    "start": "838160",
    "end": "840160"
  },
  {
    "text": "99th bajillion you want to see if it's",
    "start": "840160",
    "end": "841880"
  },
  {
    "text": "assignable to some type recall that we",
    "start": "841880",
    "end": "843279"
  },
  {
    "text": "don't really have an intersection uh oh",
    "start": "843279",
    "end": "845440"
  },
  {
    "text": "I see why this is a fast type because",
    "start": "845440",
    "end": "846959"
  },
  {
    "text": "you have some type off the rip uh we",
    "start": "846959",
    "end": "849920"
  },
  {
    "text": "have unions that look like some type one",
    "start": "849920",
    "end": "851440"
  },
  {
    "text": "some type two some type three some type",
    "start": "851440",
    "end": "853040"
  },
  {
    "text": "all the way up to the 99 when checking",
    "start": "853040",
    "end": "854639"
  },
  {
    "text": "if a union is assignable to the Target",
    "start": "854639",
    "end": "856199"
  },
  {
    "text": "type we have to check every member of",
    "start": "856199",
    "end": "858639"
  },
  {
    "text": "the Union yep okay that's I mean clever",
    "start": "858639",
    "end": "862279"
  },
  {
    "text": "clever keep it in its original form",
    "start": "862279",
    "end": "863839"
  },
  {
    "text": "because then you only have one check for",
    "start": "863839",
    "end": "865920"
  },
  {
    "text": "the sum type if it's at least a sum type",
    "start": "865920",
    "end": "868079"
  },
  {
    "text": "we know that then all we have to do is",
    "start": "868079",
    "end": "869759"
  },
  {
    "text": "check these ones right in typescript 53",
    "start": "869759",
    "end": "873199"
  },
  {
    "text": "we Peak at the original intersection",
    "start": "873199",
    "end": "874800"
  },
  {
    "text": "form uh that we were able to tuck away",
    "start": "874800",
    "end": "876759"
  },
  {
    "text": "when we compare these types we okay",
    "start": "876759",
    "end": "878320"
  },
  {
    "text": "that's good like that Consolidated uh",
    "start": "878320",
    "end": "880560"
  },
  {
    "text": "between these two I don't think this one",
    "start": "880560",
    "end": "881800"
  },
  {
    "text": "will be very useful I don't think types",
    "start": "881800",
    "end": "883560"
  },
  {
    "text": "script itself ships to uh Library files",
    "start": "883560",
    "end": "885759"
  },
  {
    "text": "uh TS server library and typescript JS",
    "start": "885759",
    "end": "888399"
  },
  {
    "text": "there are certain apis available only in",
    "start": "888399",
    "end": "890199"
  },
  {
    "text": "TS uh Library okay okay so this is just",
    "start": "890199",
    "end": "893720"
  },
  {
    "text": "a bunch of internal stuff not really for",
    "start": "893720",
    "end": "895399"
  },
  {
    "text": "me all right breaking changes and",
    "start": "895399",
    "end": "897040"
  },
  {
    "text": "correctness improvements uh lib DTS I",
    "start": "897040",
    "end": "899839"
  },
  {
    "text": "still can't ever get DTS files to work",
    "start": "899839",
    "end": "901639"
  },
  {
    "text": "the way I want them to uh types",
    "start": "901639",
    "end": "903160"
  },
  {
    "text": "generated for Dom may have an impact on",
    "start": "903160",
    "end": "905000"
  },
  {
    "text": "your code base okay checks for super",
    "start": "905000",
    "end": "907920"
  },
  {
    "text": "access okay so just a bunch of little",
    "start": "907920",
    "end": "910320"
  },
  {
    "text": "bit and what's next at this point",
    "start": "910320",
    "end": "912360"
  },
  {
    "text": "typescript 53 is what we'd call feature",
    "start": "912360",
    "end": "914000"
  },
  {
    "text": "stable the focus on 53 will be bug fixes",
    "start": "914000",
    "end": "916480"
  },
  {
    "text": "and polish and certain lowrisk editor",
    "start": "916480",
    "end": "918600"
  },
  {
    "text": "features okay cool well uh I'm not going",
    "start": "918600",
    "end": "921800"
  },
  {
    "text": "to lie to you everything that they've",
    "start": "921800",
    "end": "923600"
  },
  {
    "text": "they've made better also seems crazy uh",
    "start": "923600",
    "end": "926920"
  },
  {
    "text": "this just is crazy I I don't know why",
    "start": "926920",
    "end": "928920"
  },
  {
    "text": "anyone would do this I'm still",
    "start": "928920",
    "end": "930319"
  },
  {
    "text": "completely confused why anyone would",
    "start": "930319",
    "end": "931759"
  },
  {
    "text": "want to write code like this um",
    "start": "931759",
    "end": "934800"
  },
  {
    "text": "this I'm I'm emotionally in pain why",
    "start": "934800",
    "end": "937199"
  },
  {
    "text": "you'd want two different import systems",
    "start": "937199",
    "end": "939000"
  },
  {
    "text": "going on I just don't get it I I guess",
    "start": "939000",
    "end": "942040"
  },
  {
    "text": "uh also this I I really am not too sure",
    "start": "942040",
    "end": "943959"
  },
  {
    "text": "about this in conclusion to write type",
    "start": "943959",
    "end": "946040"
  },
  {
    "text": "JS we write rescript uh at the",
    "start": "946040",
    "end": "949880"
  },
  {
    "text": "end I I guess I I mean I I'm glad that",
    "start": "949880",
    "end": "952639"
  },
  {
    "text": "they're making typescript better in the",
    "start": "952639",
    "end": "954040"
  },
  {
    "text": "sense that this now has better type",
    "start": "954040",
    "end": "955480"
  },
  {
    "text": "narrowing okay awesome I like to see",
    "start": "955480",
    "end": "958240"
  },
  {
    "text": "that I'm just struggling you know what I",
    "start": "958240",
    "end": "960120"
  },
  {
    "text": "mean I'm just struggling struggling to",
    "start": "960120",
    "end": "962480"
  },
  {
    "text": "see why struggling to understand why",
    "start": "962480",
    "end": "964360"
  },
  {
    "text": "this would why you'd want this um type",
    "start": "964360",
    "end": "966800"
  },
  {
    "text": "getting better we're trying to say it's",
    "start": "966800",
    "end": "967959"
  },
  {
    "text": "better anyways uh I guess this La this",
    "start": "967959",
    "end": "970639"
  },
  {
    "text": "one's really cool I'd say that if you",
    "start": "970639",
    "end": "972480"
  },
  {
    "text": "use your mouse as in your editor then",
    "start": "972480",
    "end": "975720"
  },
  {
    "text": "this is a really cool feature I can",
    "start": "975720",
    "end": "977880"
  },
  {
    "text": "completely agree with this that's a",
    "start": "977880",
    "end": "979880"
  },
  {
    "text": "super cool feature inside of your um",
    "start": "979880",
    "end": "984480"
  },
  {
    "text": "your mouse based editor right that seems",
    "start": "984480",
    "end": "986560"
  },
  {
    "text": "pretty cool all right hey I guess the",
    "start": "986560",
    "end": "989399"
  },
  {
    "text": "name",
    "start": "989399",
    "end": "990480"
  },
  {
    "text": "is I'm still use I'm still gonna use",
    "start": "990480",
    "end": "992839"
  },
  {
    "text": "goer rust a Jen",
    "start": "992839",
    "end": "996639"
  }
]