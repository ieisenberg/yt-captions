[
  {
    "text": "C's biggest mistake written by Walter",
    "start": "40",
    "end": "2960"
  },
  {
    "text": "brigh hey Walter brgh December 22 2009",
    "start": "2960",
    "end": "6919"
  },
  {
    "text": "remember C hasn't changed a lot in the",
    "start": "6919",
    "end": "8800"
  },
  {
    "text": "last little bit okay they've added some",
    "start": "8800",
    "end": "10040"
  },
  {
    "text": "nice little thread apis but that's about",
    "start": "10040",
    "end": "12639"
  },
  {
    "text": "it okay C is arguably the world's most",
    "start": "12639",
    "end": "14639"
  },
  {
    "text": "successful programming language I",
    "start": "14639",
    "end": "16320"
  },
  {
    "text": "already take offense to this okay I know",
    "start": "16320",
    "end": "18400"
  },
  {
    "text": "this was written before rust came out",
    "start": "18400",
    "end": "20400"
  },
  {
    "text": "but just think about how much you get to",
    "start": "20400",
    "end": "23080"
  },
  {
    "text": "tell people about the fact you use rust",
    "start": "23080",
    "end": "25880"
  },
  {
    "text": "right like what is success in a",
    "start": "25880",
    "end": "27560"
  },
  {
    "text": "programming language is it a language",
    "start": "27560",
    "end": "30000"
  },
  {
    "text": "doing something that's useful or is it",
    "start": "30000",
    "end": "32238"
  },
  {
    "text": "the ability to tell people you use the",
    "start": "32239",
    "end": "34079"
  },
  {
    "text": "language because like really in my head",
    "start": "34079",
    "end": "36840"
  },
  {
    "text": "hasc's the most successful language ever",
    "start": "36840",
    "end": "40160"
  },
  {
    "text": "written because you are able to look",
    "start": "40160",
    "end": "42559"
  },
  {
    "text": "down on every other person on earth like",
    "start": "42559",
    "end": "46039"
  },
  {
    "text": "hascal is really the Pinnacle of all",
    "start": "46039",
    "end": "47680"
  },
  {
    "text": "programming languages then you know rust",
    "start": "47680",
    "end": "49879"
  },
  {
    "text": "is a really good second you know uh",
    "start": "49879",
    "end": "53079"
  },
  {
    "text": "maybe lisp and rust are kind of tied",
    "start": "53079",
    "end": "55320"
  },
  {
    "text": "because in Lis you can be like data is",
    "start": "55320",
    "end": "57840"
  },
  {
    "text": "code and code is data and nobody even",
    "start": "57840",
    "end": "60399"
  },
  {
    "text": "knows what that means unless if you're",
    "start": "60399",
    "end": "62000"
  },
  {
    "text": "already so deep into lisp that makes",
    "start": "62000",
    "end": "64239"
  },
  {
    "text": "sense doesn't make any sense for me I",
    "start": "64239",
    "end": "66479"
  },
  {
    "text": "don't even know what it means right and",
    "start": "66479",
    "end": "68799"
  },
  {
    "text": "so just a thought just a thought okay",
    "start": "68799",
    "end": "71960"
  },
  {
    "text": "just a thought I'm thinking right now",
    "start": "71960",
    "end": "74200"
  },
  {
    "text": "all",
    "start": "74200",
    "end": "75280"
  },
  {
    "text": "right its success has of course endless",
    "start": "75280",
    "end": "78119"
  },
  {
    "text": "tempted people to improve upon it Lord",
    "start": "78119",
    "end": "81560"
  },
  {
    "text": "he doesn't even know about Zig yet uh",
    "start": "81560",
    "end": "83759"
  },
  {
    "text": "thus C is probably the uh patriarch of",
    "start": "83759",
    "end": "86600"
  },
  {
    "text": "the longest list of languages notable",
    "start": "86600",
    "end": "89280"
  },
  {
    "text": "among these are C++ the D programming",
    "start": "89280",
    "end": "91640"
  },
  {
    "text": "language everyone loves a little bit of",
    "start": "91640",
    "end": "93000"
  },
  {
    "text": "D in their life and most recently go go",
    "start": "93000",
    "end": "95799"
  },
  {
    "text": "was in",
    "start": "95799",
    "end": "97840"
  },
  {
    "text": "2009 damn there are endless discussion",
    "start": "97840",
    "end": "101640"
  },
  {
    "text": "uh discussion threads on how to fix SE",
    "start": "101640",
    "end": "103560"
  },
  {
    "text": "going back to the 80s so this is a well",
    "start": "103560",
    "end": "105600"
  },
  {
    "text": "trod ground what could possibly be added",
    "start": "105600",
    "end": "107920"
  },
  {
    "text": "to this soup I posit that most such",
    "start": "107920",
    "end": "111240"
  },
  {
    "text": "discussions centered around detail most",
    "start": "111240",
    "end": "113320"
  },
  {
    "text": "interesting is what is the largest",
    "start": "113320",
    "end": "115159"
  },
  {
    "text": "fundamental",
    "start": "115159",
    "end": "118079"
  },
  {
    "text": "mistake we should take into count the",
    "start": "118079",
    "end": "120240"
  },
  {
    "text": "context of the times that spawn C the",
    "start": "120240",
    "end": "122520"
  },
  {
    "text": "problems it was trying to solve in the",
    "start": "122520",
    "end": "123840"
  },
  {
    "text": "environment in which it was intended to",
    "start": "123840",
    "end": "125360"
  },
  {
    "text": "be used keep in mind it was developed",
    "start": "125360",
    "end": "127880"
  },
  {
    "text": "for 16bit machine with extremely limited",
    "start": "127880",
    "end": "131520"
  },
  {
    "text": "resources available it's a different",
    "start": "131520",
    "end": "133520"
  },
  {
    "text": "world right okay y'all y'all run in vs",
    "start": "133520",
    "end": "136239"
  },
  {
    "text": "code you don't even get to you don't",
    "start": "136239",
    "end": "138120"
  },
  {
    "text": "even you don't even have an opinion okay",
    "start": "138120",
    "end": "141280"
  },
  {
    "text": "you don't even get an opinion on this",
    "start": "141280",
    "end": "143239"
  },
  {
    "text": "okay and I did I just see cotlin in the",
    "start": "143239",
    "end": "145680"
  },
  {
    "text": "chat when I'm reading a c article okay",
    "start": "145680",
    "end": "147160"
  },
  {
    "text": "hey you can cotlin these nuts okay you",
    "start": "147160",
    "end": "150000"
  },
  {
    "text": "can cotland these nuts if you keep that",
    "start": "150000",
    "end": "151800"
  },
  {
    "text": "up buddy uh all right let's see I'd like",
    "start": "151800",
    "end": "155120"
  },
  {
    "text": "to dismiss thing dismiss things uh like",
    "start": "155120",
    "end": "157519"
  },
  {
    "text": "it doesn't do garbage collection",
    "start": "157519",
    "end": "159080"
  },
  {
    "text": "functional programming Dynamic typing or",
    "start": "159080",
    "end": "160879"
  },
  {
    "text": "oop those aren't problems see attempted",
    "start": "160879",
    "end": "163400"
  },
  {
    "text": "to address so the lack of them are not",
    "start": "163400",
    "end": "165120"
  },
  {
    "text": "mistakes beautifully written I love that",
    "start": "165120",
    "end": "167800"
  },
  {
    "text": "what mistakes has caused more grief more",
    "start": "167800",
    "end": "169800"
  },
  {
    "text": "bugs more workarounds more endless hours",
    "start": "169800",
    "end": "171920"
  },
  {
    "text": "consumed Etc than any other many people",
    "start": "171920",
    "end": "173760"
  },
  {
    "text": "would like to say null pointers I don't",
    "start": "173760",
    "end": "176120"
  },
  {
    "text": "agree okay he does not think the billion",
    "start": "176120",
    "end": "178720"
  },
  {
    "text": "dollar mistake is a null pointer",
    "start": "178720",
    "end": "180840"
  },
  {
    "text": "conflating pointers with",
    "start": "180840",
    "end": "182920"
  },
  {
    "text": "arrays all right let the man cook would",
    "start": "182920",
    "end": "186040"
  },
  {
    "text": "you just just let it let them cook I",
    "start": "186040",
    "end": "188920"
  },
  {
    "text": "don't mean them using the same syntax or",
    "start": "188920",
    "end": "191400"
  },
  {
    "text": "the implicit conversion of arrays to",
    "start": "191400",
    "end": "193080"
  },
  {
    "text": "pointers I mean the inability to pass an",
    "start": "193080",
    "end": "195599"
  },
  {
    "text": "array to a function as an array even if",
    "start": "195599",
    "end": "198720"
  },
  {
    "text": "it is declared to be an array c will",
    "start": "198720",
    "end": "201440"
  },
  {
    "text": "silently convert the array to be a",
    "start": "201440",
    "end": "203120"
  },
  {
    "text": "pointer and will rewrite the function",
    "start": "203120",
    "end": "204799"
  },
  {
    "text": "declaration so it is semantically a",
    "start": "204799",
    "end": "207360"
  },
  {
    "text": "pointer void fuar is equivalent to void",
    "start": "207360",
    "end": "211519"
  },
  {
    "text": "Char Carstar people call it Carstar I",
    "start": "211519",
    "end": "214360"
  },
  {
    "text": "still call a charar okay",
    "start": "214360",
    "end": "217720"
  },
  {
    "text": "why why do I have such stupid opinions",
    "start": "217720",
    "end": "220280"
  },
  {
    "text": "in my life why do I think mute mut",
    "start": "220280",
    "end": "223200"
  },
  {
    "text": "should be pronounced mute but because",
    "start": "223200",
    "end": "225360"
  },
  {
    "text": "it's mutable but Char should be",
    "start": "225360",
    "end": "228080"
  },
  {
    "text": "pronounced Char because it's character",
    "start": "228080",
    "end": "231879"
  },
  {
    "text": "why am I wrong why am I right I am right",
    "start": "231879",
    "end": "235760"
  },
  {
    "text": "or wrong I'm not sure I think I'm right",
    "start": "235760",
    "end": "238360"
  },
  {
    "text": "I think I'm right uh I think I'm right",
    "start": "238360",
    "end": "240599"
  },
  {
    "text": "uh is it is it gif or GIF it's GIF",
    "start": "240599",
    "end": "243319"
  },
  {
    "text": "everyone knows",
    "start": "243319",
    "end": "244560"
  },
  {
    "text": "that okay hypocrite I know I'm just a",
    "start": "244560",
    "end": "247519"
  },
  {
    "text": "hypocrite this seemingly innocuous",
    "start": "247519",
    "end": "249640"
  },
  {
    "text": "convenience feature is the root of",
    "start": "249640",
    "end": "251280"
  },
  {
    "text": "endless evil it means that once arrays",
    "start": "251280",
    "end": "253760"
  },
  {
    "text": "leave the scope in which they are",
    "start": "253760",
    "end": "255200"
  },
  {
    "text": "defined they become pointers and lose",
    "start": "255200",
    "end": "257359"
  },
  {
    "text": "the information which gives the extent",
    "start": "257359",
    "end": "259239"
  },
  {
    "text": "of the array the array Dimensions what",
    "start": "259239",
    "end": "261320"
  },
  {
    "text": "are the consequence of losing this",
    "start": "261320",
    "end": "262919"
  },
  {
    "text": "information an alternative must be used",
    "start": "262919",
    "end": "265080"
  },
  {
    "text": "for Strings the whole reason the zero",
    "start": "265080",
    "end": "267080"
  },
  {
    "text": "Terminator let's see let's see for an",
    "start": "267080",
    "end": "269720"
  },
  {
    "text": "alternative let's see an Al oh my",
    "start": "269720",
    "end": "271560"
  },
  {
    "text": "goodness an alternative must be used for",
    "start": "271560",
    "end": "273320"
  },
  {
    "text": "Strings it's the whole reason the null",
    "start": "273320",
    "end": "275440"
  },
  {
    "text": "Terminator for uh for the null",
    "start": "275440",
    "end": "277720"
  },
  {
    "text": "Terminator wow I keep thinking there",
    "start": "277720",
    "end": "278880"
  },
  {
    "text": "should be more for whatever reason I my",
    "start": "278880",
    "end": "281160"
  },
  {
    "text": "brain wants more sentence when it gets",
    "start": "281160",
    "end": "283199"
  },
  {
    "text": "to this point and it can't have it it",
    "start": "283199",
    "end": "284919"
  },
  {
    "text": "just can't have it uh for other arrays",
    "start": "284919",
    "end": "287560"
  },
  {
    "text": "it is inferred programmatically from the",
    "start": "287560",
    "end": "289400"
  },
  {
    "text": "context naturally every situation is",
    "start": "289400",
    "end": "291919"
  },
  {
    "text": "different and so an endless array of",
    "start": "291919",
    "end": "294560"
  },
  {
    "text": "bugs and Su beautiful pun and I agree",
    "start": "294560",
    "end": "297720"
  },
  {
    "text": "with this the train wreck just unfolds",
    "start": "297720",
    "end": "299240"
  },
  {
    "text": "and slow motion from there the Galaxy of",
    "start": "299240",
    "end": "301560"
  },
  {
    "text": "C string functions from the unsafe stir",
    "start": "301560",
    "end": "304280"
  },
  {
    "text": "copy to Sprint F",
    "start": "304280",
    "end": "307360"
  },
  {
    "text": "onwards uh Sprint F who doesn't love a",
    "start": "307360",
    "end": "311039"
  },
  {
    "text": "good Sprint effing uh is a direct result",
    "start": "311039",
    "end": "313639"
  },
  {
    "text": "there is obvious attempts at at fixing",
    "start": "313639",
    "end": "315560"
  },
  {
    "text": "this such as safy library then there are",
    "start": "315560",
    "end": "318039"
  },
  {
    "text": "all the buffer overflows because",
    "start": "318039",
    "end": "319759"
  },
  {
    "text": "function handles uh handed a pointer uh",
    "start": "319759",
    "end": "323280"
  },
  {
    "text": "have no idea what the limits are and no",
    "start": "323280",
    "end": "325319"
  },
  {
    "text": "array Browns checking is possible I feel",
    "start": "325319",
    "end": "328039"
  },
  {
    "text": "like I totally agree with this",
    "start": "328039",
    "end": "330680"
  },
  {
    "text": "real talk I first off real talk I feel",
    "start": "330680",
    "end": "332800"
  },
  {
    "text": "like I cannot read today like my",
    "start": "332800",
    "end": "334280"
  },
  {
    "text": "dyslexia is at the highest it's been in",
    "start": "334280",
    "end": "336000"
  },
  {
    "text": "a long time I didn't get great sleep",
    "start": "336000",
    "end": "337319"
  },
  {
    "text": "last night because I was up too late and",
    "start": "337319",
    "end": "339199"
  },
  {
    "text": "now I feel like I cannot read because I",
    "start": "339199",
    "end": "340800"
  },
  {
    "text": "don't know what happens whenever I I",
    "start": "340800",
    "end": "342039"
  },
  {
    "text": "don't get good sleep my reading just",
    "start": "342039",
    "end": "344000"
  },
  {
    "text": "goes way out the window and my dyslexia",
    "start": "344000",
    "end": "345880"
  },
  {
    "text": "just just gets horrifying uh either way",
    "start": "345880",
    "end": "349560"
  },
  {
    "text": "uh I I actually completely agree with",
    "start": "349560",
    "end": "351440"
  },
  {
    "text": "this because this was the hardest jump",
    "start": "351440",
    "end": "352960"
  },
  {
    "text": "for me going from java to C so at my",
    "start": "352960",
    "end": "356400"
  },
  {
    "text": "school when I got when I became a",
    "start": "356400",
    "end": "358080"
  },
  {
    "text": "learned man right um we started with",
    "start": "358080",
    "end": "361720"
  },
  {
    "text": "Java programming one and then after that",
    "start": "361720",
    "end": "364960"
  },
  {
    "text": "for programming in c the one thing that",
    "start": "364960",
    "end": "368039"
  },
  {
    "text": "tripped me up more than anything else",
    "start": "368039",
    "end": "369680"
  },
  {
    "text": "wasn't arrays as pointers it was the",
    "start": "369680",
    "end": "372199"
  },
  {
    "text": "fact that you couldn't contain the",
    "start": "372199",
    "end": "373720"
  },
  {
    "text": "length right you couldn't disambiguate a",
    "start": "373720",
    "end": "376880"
  },
  {
    "text": "string from an array even though I mean",
    "start": "376880",
    "end": "380160"
  },
  {
    "text": "one can argue that a string is an array",
    "start": "380160",
    "end": "382880"
  },
  {
    "text": "I get it not arguing it but it's still",
    "start": "382880",
    "end": "386080"
  },
  {
    "text": "it's like one of those but the bound",
    "start": "386080",
    "end": "387360"
  },
  {
    "text": "checking I found to be such a disaster",
    "start": "387360",
    "end": "391120"
  },
  {
    "text": "and that was always the hardest part",
    "start": "391120",
    "end": "393759"
  },
  {
    "text": "other than all the SE fults I got",
    "start": "393759",
    "end": "395160"
  },
  {
    "text": "constantly and continuously like I got",
    "start": "395160",
    "end": "396800"
  },
  {
    "text": "SE fault after seal uh like con",
    "start": "396800",
    "end": "400000"
  },
  {
    "text": "constantly and so that for me that was",
    "start": "400000",
    "end": "401919"
  },
  {
    "text": "one of the hardest parts that was one of",
    "start": "401919",
    "end": "404280"
  },
  {
    "text": "the hardest parts this problem was",
    "start": "404280",
    "end": "406039"
  },
  {
    "text": "inherit uh inherited uh in Toto by C++",
    "start": "406039",
    "end": "409759"
  },
  {
    "text": "which consequently spawned 10 years of",
    "start": "409759",
    "end": "411199"
  },
  {
    "text": "attempts to create a usable string",
    "start": "411199",
    "end": "414319"
  },
  {
    "text": "class classic C++ eventually the",
    "start": "414319",
    "end": "417440"
  },
  {
    "text": "standard string result is uh comprised",
    "start": "417440",
    "end": "419759"
  },
  {
    "text": "by its needs to be compatible with czo",
    "start": "419759",
    "end": "422160"
  },
  {
    "text": "terminated strings uh C++ addressed the",
    "start": "422160",
    "end": "424800"
  },
  {
    "text": "more General array Problem by inventing",
    "start": "424800",
    "end": "427000"
  },
  {
    "text": "standard vector and many programming",
    "start": "427000",
    "end": "429120"
  },
  {
    "text": "guidelines isue the uh the generic T",
    "start": "429120",
    "end": "432599"
  },
  {
    "text": "style arrays but the legacy of C arrays",
    "start": "432599",
    "end": "435639"
  },
  {
    "text": "continues in C++ with unsafe iterator",
    "start": "435639",
    "end": "439280"
  },
  {
    "text": "design c99 attempted to fix this problem",
    "start": "439280",
    "end": "441800"
  },
  {
    "text": "but the fatal error it made was still",
    "start": "441800",
    "end": "443400"
  },
  {
    "text": "not combining the array Dimensions with",
    "start": "443400",
    "end": "445120"
  },
  {
    "text": "the array pointer into one type yes the",
    "start": "445120",
    "end": "447120"
  },
  {
    "text": "fat pointer was a very good idea which",
    "start": "447120",
    "end": "450160"
  },
  {
    "text": "is also like you can use the same",
    "start": "450160",
    "end": "451639"
  },
  {
    "text": "concept for typing nums which I really",
    "start": "451639",
    "end": "453560"
  },
  {
    "text": "really like like I love the idea of a",
    "start": "453560",
    "end": "455360"
  },
  {
    "text": "language to be able to U not a typing",
    "start": "455360",
    "end": "457400"
  },
  {
    "text": "num but like a type A type Union a tag",
    "start": "457400",
    "end": "459720"
  },
  {
    "text": "Union like I love the idea of being able",
    "start": "459720",
    "end": "461599"
  },
  {
    "text": "to use fat pointers as more of a first",
    "start": "461599",
    "end": "463199"
  },
  {
    "text": "class citizen to solve a lot of problems",
    "start": "463199",
    "end": "464919"
  },
  {
    "text": "right that's how you can solve the whole",
    "start": "464919",
    "end": "466400"
  },
  {
    "text": "length problem on array that's how you",
    "start": "466400",
    "end": "468280"
  },
  {
    "text": "can solve also like a tag Union you just",
    "start": "468280",
    "end": "470599"
  },
  {
    "text": "have it kind of built into a language in",
    "start": "470599",
    "end": "472360"
  },
  {
    "text": "a nicer way and it doesn't suck nearly",
    "start": "472360",
    "end": "475159"
  },
  {
    "text": "as much it like takes all the dumb",
    "start": "475159",
    "end": "476840"
  },
  {
    "text": "things that I do out of it but let's see",
    "start": "476840",
    "end": "479280"
  },
  {
    "text": "but all isn't lost C can still be fixed",
    "start": "479280",
    "end": "481360"
  },
  {
    "text": "it just needs a little uh new syntax oh",
    "start": "481360",
    "end": "483960"
  },
  {
    "text": "damn this was suggested in 2009 no way",
    "start": "483960",
    "end": "487000"
  },
  {
    "text": "it's actually going to happen um meaning",
    "start": "487000",
    "end": "490199"
  },
  {
    "text": "an array is passed as a so-called fat",
    "start": "490199",
    "end": "492919"
  },
  {
    "text": "pointer I.E a pair of consisting of a",
    "start": "492919",
    "end": "495000"
  },
  {
    "text": "pointer to the start of the array and a",
    "start": "495000",
    "end": "496919"
  },
  {
    "text": "size T of the array dimension of course",
    "start": "496919",
    "end": "499520"
  },
  {
    "text": "this won't fix any existing code but",
    "start": "499520",
    "end": "500960"
  },
  {
    "text": "it'll enable new code to be written",
    "start": "500960",
    "end": "502120"
  },
  {
    "text": "correctly I love that I would literally",
    "start": "502120",
    "end": "504960"
  },
  {
    "text": "love this made by 2109 yeah uh can now",
    "start": "504960",
    "end": "509599"
  },
  {
    "text": "be deprecated by convention and",
    "start": "509599",
    "end": "510800"
  },
  {
    "text": "compilers even better transitioning to",
    "start": "510800",
    "end": "512760"
  },
  {
    "text": "the new way can be done by making DEC uh",
    "start": "512760",
    "end": "514760"
  },
  {
    "text": "declaration binary compatible with older",
    "start": "514760",
    "end": "517560"
  },
  {
    "text": "code okay suggesting pre-compiler macros",
    "start": "517560",
    "end": "521440"
  },
  {
    "text": "is never like a",
    "start": "521440",
    "end": "523719"
  },
  {
    "text": "better this never makes me happy I've",
    "start": "523720",
    "end": "527200"
  },
  {
    "text": "never once said hey you know what I want",
    "start": "527200",
    "end": "530080"
  },
  {
    "text": "I want more pre-compiler",
    "start": "530080",
    "end": "532320"
  },
  {
    "text": "macros you know what I",
    "start": "532320",
    "end": "534600"
  },
  {
    "text": "want I would like to be able to",
    "start": "534600",
    "end": "536959"
  },
  {
    "text": "conditionally think about my code so",
    "start": "536959",
    "end": "539440"
  },
  {
    "text": "said nobody ever okay nobody wants to",
    "start": "539440",
    "end": "542560"
  },
  {
    "text": "say that uh this change isn't going to",
    "start": "542560",
    "end": "545440"
  },
  {
    "text": "be trans uh going to transform C into a",
    "start": "545440",
    "end": "547320"
  },
  {
    "text": "modern language with all the shining",
    "start": "547320",
    "end": "548519"
  },
  {
    "text": "bells and whistles it'll still be C in",
    "start": "548519",
    "end": "550720"
  },
  {
    "text": "spirit as well as practice it will just",
    "start": "550720",
    "end": "552480"
  },
  {
    "text": "relieve C programmers of dealing with",
    "start": "552480",
    "end": "554120"
  },
  {
    "text": "the one particular constant percious",
    "start": "554120",
    "end": "555880"
  },
  {
    "text": "source of bugs I love this pernicious",
    "start": "555880",
    "end": "558079"
  },
  {
    "text": "percious I said naous it's nious uh",
    "start": "558079",
    "end": "560920"
  },
  {
    "text": "references all this kind of stuff nice",
    "start": "560920",
    "end": "562800"
  },
  {
    "text": "acknowledgements maros",
    "start": "562800",
    "end": "565760"
  },
  {
    "text": "malas Mali uh for reviewing the draft",
    "start": "565760",
    "end": "568680"
  },
  {
    "text": "for this all all right this is actually",
    "start": "568680",
    "end": "570519"
  },
  {
    "text": "I I would this does actually seem super",
    "start": "570519",
    "end": "572839"
  },
  {
    "text": "cool I'm not going to lie to you if C",
    "start": "572839",
    "end": "575000"
  },
  {
    "text": "got this this would this would really",
    "start": "575000",
    "end": "577000"
  },
  {
    "text": "alleviate a huge set of bugs that you",
    "start": "577000",
    "end": "579399"
  },
  {
    "text": "just don't need to have because it",
    "start": "579399",
    "end": "581839"
  },
  {
    "text": "actually disambiguates the types because",
    "start": "581839",
    "end": "583480"
  },
  {
    "text": "in some fundamental way I know we like",
    "start": "583480",
    "end": "586200"
  },
  {
    "text": "to treat strings as arrays I mean really",
    "start": "586200",
    "end": "588480"
  },
  {
    "text": "they're just memory they're just buffers",
    "start": "588480",
    "end": "590279"
  },
  {
    "text": "underneath I get it but there is like",
    "start": "590279",
    "end": "592279"
  },
  {
    "text": "this there is a difference between them",
    "start": "592279",
    "end": "594760"
  },
  {
    "text": "because they're they just are different",
    "start": "594760",
    "end": "597839"
  },
  {
    "text": "so I don't know I love this article I",
    "start": "597839",
    "end": "600040"
  },
  {
    "text": "think it's a great article",
    "start": "600040",
    "end": "602320"
  },
  {
    "text": "uh I always want to love see but every",
    "start": "602320",
    "end": "606079"
  },
  {
    "text": "time I use it I don't think I love C but",
    "start": "606079",
    "end": "608320"
  },
  {
    "text": "I want to love C like C feels so",
    "start": "608320",
    "end": "610560"
  },
  {
    "text": "academically beautiful you know what I",
    "start": "610560",
    "end": "612959"
  },
  {
    "text": "mean but practically every time I use it",
    "start": "612959",
    "end": "615480"
  },
  {
    "text": "I go I don't like",
    "start": "615480",
    "end": "618279"
  },
  {
    "text": "this why am I doing it this way you know",
    "start": "618279",
    "end": "621120"
  },
  {
    "text": "what I mean you know what I mean I love",
    "start": "621120",
    "end": "624360"
  },
  {
    "text": "C it's a toxic relationship it's abusive",
    "start": "624360",
    "end": "628079"
  },
  {
    "text": "every single time I get lured back in by",
    "start": "628079",
    "end": "630600"
  },
  {
    "text": "its Simplicity and",
    "start": "630600",
    "end": "633120"
  },
  {
    "text": "Bam hit it with the restraining order",
    "start": "633120",
    "end": "635360"
  },
  {
    "text": "quickly afterwards but you know what I",
    "start": "635360",
    "end": "636800"
  },
  {
    "text": "will say one thing that's very very",
    "start": "636800",
    "end": "640120"
  },
  {
    "text": "important I think I'm coming around to",
    "start": "640120",
    "end": "644120"
  },
  {
    "text": "go I think I'm coming around a go I",
    "start": "644560",
    "end": "647040"
  },
  {
    "text": "think I am the name is maybe I do love",
    "start": "647040",
    "end": "652440"
  },
  {
    "text": "C but Jen",
    "start": "652440",
    "end": "656240"
  }
]