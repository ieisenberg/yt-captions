[
  {
    "text": "I recently took a JavaScript quiz and I",
    "start": "120",
    "end": "3000"
  },
  {
    "text": "myself did not get them right so let's",
    "start": "3000",
    "end": "5160"
  },
  {
    "text": "see this new quiz here by an xfang",
    "start": "5160",
    "end": "7680"
  },
  {
    "text": "developer I am currently a Fang",
    "start": "7680",
    "end": "9440"
  },
  {
    "text": "developer at this moment few of you sent",
    "start": "9440",
    "end": "11320"
  },
  {
    "text": "me this JavaScript quiz and said it's",
    "start": "11320",
    "end": "13440"
  },
  {
    "text": "absolutely impossible to get all the",
    "start": "13440",
    "end": "15040"
  },
  {
    "text": "questions right so let's try it out see",
    "start": "15040",
    "end": "17320"
  },
  {
    "text": "what I already know the answer to this",
    "start": "17320",
    "end": "18880"
  },
  {
    "text": "one man this is the Classic octal this",
    "start": "18880",
    "end": "21240"
  },
  {
    "text": "is the classic octal bamboozle going on",
    "start": "21240",
    "end": "23599"
  },
  {
    "text": "right here okay so I don't I think this",
    "start": "23599",
    "end": "26000"
  },
  {
    "text": "is 18 minus 15 in octal which is 13 this",
    "start": "26000",
    "end": "31359"
  },
  {
    "text": "is five is my guess we can get correct",
    "start": "31359",
    "end": "34000"
  },
  {
    "text": "and if we can learn something new along",
    "start": "34000",
    "end": "35719"
  },
  {
    "text": "the way as well so the first question do",
    "start": "35719",
    "end": "38480"
  },
  {
    "text": "you know what will be the output of this",
    "start": "38480",
    "end": "40120"
  },
  {
    "text": "code console log 018 minus",
    "start": "40120",
    "end": "43800"
  },
  {
    "text": "015 okay so I believe if you start with",
    "start": "43800",
    "end": "46520"
  },
  {
    "text": "a zero the number becomes base eight",
    "start": "46520",
    "end": "49879"
  },
  {
    "text": "what is that I guess octal is probably",
    "start": "49879",
    "end": "51680"
  },
  {
    "text": "what that's called go",
    "start": "51680",
    "end": "54000"
  },
  {
    "text": "number 18 but the digits that are valid",
    "start": "54000",
    "end": "58239"
  },
  {
    "text": "in octal I think are just",
    "start": "58239",
    "end": "60879"
  },
  {
    "text": "right in the same like 10 is 09 the",
    "start": "60879",
    "end": "64799"
  },
  {
    "text": "valid digit is the B knew so I don't",
    "start": "64799",
    "end": "67479"
  },
  {
    "text": "know what it's going to do if it's I",
    "start": "67479",
    "end": "69280"
  },
  {
    "text": "just knew this was but why octal but why",
    "start": "69280",
    "end": "72560"
  },
  {
    "text": "male models this is a JavaScript",
    "start": "72560",
    "end": "77560"
  },
  {
    "text": "[Laughter]",
    "start": "79050",
    "end": "81759"
  },
  {
    "text": "challenge pre-experience it's not a",
    "start": "81759",
    "end": "84960"
  },
  {
    "text": "valid number by the way this is this",
    "start": "84960",
    "end": "86880"
  },
  {
    "text": "would exist in like any language that",
    "start": "86880",
    "end": "88240"
  },
  {
    "text": "allows you to do this I don't think this",
    "start": "88240",
    "end": "90520"
  },
  {
    "text": "is specifically a JavaScript problem I",
    "start": "90520",
    "end": "93000"
  },
  {
    "text": "would assume it's either na in or it",
    "start": "93000",
    "end": "94840"
  },
  {
    "text": "just converts it back to decimal and it",
    "start": "94840",
    "end": "96520"
  },
  {
    "text": "just becomes 18 so this is either an or",
    "start": "96520",
    "end": "99280"
  },
  {
    "text": "18 then we have minus 015 so this is",
    "start": "99280",
    "end": "102360"
  },
  {
    "text": "going to be an actual valid octal number",
    "start": "102360",
    "end": "104719"
  },
  {
    "text": "so we have five eight",
    "start": "104719",
    "end": "107040"
  },
  {
    "text": "essentially job one in the e place and",
    "start": "107040",
    "end": "110880"
  },
  {
    "text": "in the one place so 8 + 5 is 13 so this",
    "start": "110880",
    "end": "114240"
  },
  {
    "text": "is 13 this is either 18 or na my guess",
    "start": "114240",
    "end": "117920"
  },
  {
    "text": "would be it's probably 18 because n is",
    "start": "117920",
    "end": "120840"
  },
  {
    "text": "sort of a last resort and there's",
    "start": "120840",
    "end": "122399"
  },
  {
    "text": "something else that sort of makes sense",
    "start": "122399",
    "end": "124320"
  },
  {
    "text": "here so I would assume JavaScript makes",
    "start": "124320",
    "end": "125759"
  },
  {
    "text": "this eight by the way calling it n",
    "start": "125759",
    "end": "127600"
  },
  {
    "text": "that's a little weird okay we just call",
    "start": "127600",
    "end": "128840"
  },
  {
    "text": "it Nan okay not a number Nan okay either",
    "start": "128840",
    "end": "132400"
  },
  {
    "text": "call it that or trip iple",
    "start": "132400",
    "end": "135080"
  },
  {
    "text": "e754 okay 18 1",
    "start": "135080",
    "end": "139840"
  },
  {
    "text": "1985 so let's go with 18 minus 13 which",
    "start": "139920",
    "end": "142720"
  },
  {
    "text": "would be five cool let's go I'm a genius",
    "start": "142720",
    "end": "146360"
  },
  {
    "text": "we look at this yep blah blah blah blah",
    "start": "146360",
    "end": "148800"
  },
  {
    "text": "leading zero is octal number we were",
    "start": "148800",
    "end": "150840"
  },
  {
    "text": "correct about that and let's",
    "start": "150840",
    "end": "154319"
  },
  {
    "text": "see number can't actually be an octal",
    "start": "154319",
    "end": "156680"
  },
  {
    "text": "number quick question I'm actually now",
    "start": "156680",
    "end": "158400"
  },
  {
    "text": "I'm actually now I'm actually curious",
    "start": "158400",
    "end": "160000"
  },
  {
    "text": "can you do",
    "start": "160000",
    "end": "161720"
  },
  {
    "text": "08 or does",
    "start": "161720",
    "end": "163720"
  },
  {
    "text": "that that's right that's right but you",
    "start": "163720",
    "end": "166720"
  },
  {
    "text": "can do 07 so Z will actually cause a",
    "start": "166720",
    "end": "169120"
  },
  {
    "text": "syntax error because this is a nonv",
    "start": "169120",
    "end": "170879"
  },
  {
    "text": "valid octal okay awesome kids always use",
    "start": "170879",
    "end": "174239"
  },
  {
    "text": "Z when doing octal never forget about",
    "start": "174239",
    "end": "177720"
  },
  {
    "text": "that so it does this and it just treats",
    "start": "177720",
    "end": "180120"
  },
  {
    "text": "it as 18 and",
    "start": "180120",
    "end": "181720"
  },
  {
    "text": "then so 18us 13 is 5 awesome okay next",
    "start": "181720",
    "end": "186840"
  },
  {
    "text": "type",
    "start": "186840",
    "end": "187920"
  },
  {
    "text": "of string type of one okay so I think",
    "start": "187920",
    "end": "191920"
  },
  {
    "text": "we're going to essentially go right to",
    "start": "191920",
    "end": "193400"
  },
  {
    "text": "left here and we have type of one which",
    "start": "193400",
    "end": "195200"
  },
  {
    "text": "is going to be number but like as a",
    "start": "195200",
    "end": "197879"
  },
  {
    "text": "string and then we have type of the",
    "start": "197879",
    "end": "200519"
  },
  {
    "text": "string number which is going to be a",
    "start": "200519",
    "end": "203400"
  },
  {
    "text": "string so it's going to return the",
    "start": "203400",
    "end": "205120"
  },
  {
    "text": "string of string I hope it's true I hope",
    "start": "205120",
    "end": "208760"
  },
  {
    "text": "like we're all wrong and it's true and I",
    "start": "208760",
    "end": "210599"
  },
  {
    "text": "hate my life so I guess they want string",
    "start": "210599",
    "end": "213599"
  },
  {
    "text": "here I that looks to be correct too so I",
    "start": "213599",
    "end": "217120"
  },
  {
    "text": "knew it yeah the string of string and",
    "start": "217120",
    "end": "219439"
  },
  {
    "text": "it's right to left type of one is going",
    "start": "219439",
    "end": "221439"
  },
  {
    "text": "to be string of number type of number is",
    "start": "221439",
    "end": "223640"
  },
  {
    "text": "string yeah yeah yeah yeah yeah okay",
    "start": "223640",
    "end": "225599"
  },
  {
    "text": "okay next",
    "start": "225599",
    "end": "228200"
  },
  {
    "text": "up 2 338 numbers 33 28 sort the numbers",
    "start": "228400",
    "end": "233400"
  },
  {
    "text": "return numbers at one which is the",
    "start": "233400",
    "end": "235000"
  },
  {
    "text": "middle number so the middle of these",
    "start": "235000",
    "end": "236959"
  },
  {
    "text": "sorted as eight although",
    "start": "236959",
    "end": "240439"
  },
  {
    "text": "s although this is a JavaScript",
    "start": "240439",
    "end": "242599"
  },
  {
    "text": "challenge so you better put your stupid",
    "start": "242599",
    "end": "244400"
  },
  {
    "text": "cap on and think what's the worst way",
    "start": "244400",
    "end": "246159"
  },
  {
    "text": "this could be sorted bada bing bada",
    "start": "246159",
    "end": "248519"
  },
  {
    "text": "numbers using the default sort or when",
    "start": "248519",
    "end": "251040"
  },
  {
    "text": "you sort anything with default sort it's",
    "start": "251040",
    "end": "252840"
  },
  {
    "text": "going to I think convert it to a string",
    "start": "252840",
    "end": "255239"
  },
  {
    "text": "first so we're actually sorting strings",
    "start": "255239",
    "end": "258199"
  },
  {
    "text": "and the string of 33 is less than the",
    "start": "258199",
    "end": "261280"
  },
  {
    "text": "string of eight so I think 33 is",
    "start": "261280",
    "end": "263520"
  },
  {
    "text": "actually the middle most number here and",
    "start": "263520",
    "end": "265960"
  },
  {
    "text": "it is I do love that chat right now is",
    "start": "265960",
    "end": "268840"
  },
  {
    "text": "an absolute sh exles where was this one",
    "start": "268840",
    "end": "272240"
  },
  {
    "text": "this one is so good why theck is it why",
    "start": "272240",
    "end": "275320"
  },
  {
    "text": "the [ __ ] is it in eight well you",
    "start": "275320",
    "end": "277800"
  },
  {
    "text": "know Marcus by the way could see but",
    "start": "277800",
    "end": "280280"
  },
  {
    "text": "fantastic absolutely one of the best see",
    "start": "280280",
    "end": "282120"
  },
  {
    "text": "the",
    "start": "282120",
    "end": "283160"
  },
  {
    "text": "explanation so this is a valid array sh",
    "start": "283160",
    "end": "286919"
  },
  {
    "text": "aray sort needs to make a decision on",
    "start": "286919",
    "end": "289600"
  },
  {
    "text": "how to handle the scenarios and it",
    "start": "289600",
    "end": "292039"
  },
  {
    "text": "decides to convert all values to Strings",
    "start": "292039",
    "end": "294440"
  },
  {
    "text": "okay so we were correct about this we",
    "start": "294440",
    "end": "296120"
  },
  {
    "text": "have this beautiful array string and we",
    "start": "296120",
    "end": "298520"
  },
  {
    "text": "end up with two 33 create as strings",
    "start": "298520",
    "end": "302000"
  },
  {
    "text": "okay next up false is Loosely equal to",
    "start": "302000",
    "end": "306840"
  },
  {
    "text": "the string",
    "start": "306840",
    "end": "309520"
  },
  {
    "text": "of",
    "start": "309720",
    "end": "312199"
  },
  {
    "text": "okay so if it if if false gets converted",
    "start": "312199",
    "end": "316600"
  },
  {
    "text": "to a",
    "start": "316600",
    "end": "317680"
  },
  {
    "text": "number that would get converted to a",
    "start": "317680",
    "end": "320080"
  },
  {
    "text": "string to be equal but if false just",
    "start": "320080",
    "end": "322800"
  },
  {
    "text": "gets converted to a string then it would",
    "start": "322800",
    "end": "324560"
  },
  {
    "text": "be not equal my guess is that false is",
    "start": "324560",
    "end": "328000"
  },
  {
    "text": "converted to a string and skips the",
    "start": "328000",
    "end": "331280"
  },
  {
    "text": "numeric type conversion",
    "start": "331280",
    "end": "334160"
  },
  {
    "text": "first that's how I would assume it",
    "start": "334160",
    "end": "337759"
  },
  {
    "text": "does how it does it right because string",
    "start": "337759",
    "end": "341400"
  },
  {
    "text": "zero string is true in in all aspects of",
    "start": "341400",
    "end": "345880"
  },
  {
    "text": "it now if false was first converted to a",
    "start": "345880",
    "end": "349600"
  },
  {
    "text": "number which would be zero then",
    "start": "349600",
    "end": "351520"
  },
  {
    "text": "converted to a string this would be the",
    "start": "351520",
    "end": "353800"
  },
  {
    "text": "stupidest thing of all time if it's true",
    "start": "353800",
    "end": "357360"
  },
  {
    "text": "I'm going to commit",
    "start": "357360",
    "end": "358639"
  },
  {
    "text": "soku zero okay so I believe what going",
    "start": "358639",
    "end": "363479"
  },
  {
    "text": "to do here is coarse both of these",
    "start": "363479",
    "end": "365280"
  },
  {
    "text": "values into numbers so false as a number",
    "start": "365280",
    "end": "368000"
  },
  {
    "text": "is zero and zero so it doesn't actually",
    "start": "368000",
    "end": "370919"
  },
  {
    "text": "ever coers things into numbers it it",
    "start": "370919",
    "end": "373080"
  },
  {
    "text": "coerces them up the type chain so it' Be",
    "start": "373080",
    "end": "375360"
  },
  {
    "text": "Strings as a number is also zero which",
    "start": "375360",
    "end": "377840"
  },
  {
    "text": "would give us zero but if this doesn't",
    "start": "377840",
    "end": "379240"
  },
  {
    "text": "happen I'm confused true if I'm wrong oh",
    "start": "379240",
    "end": "381960"
  },
  {
    "text": "my goodness first off I'm wrong on it if",
    "start": "381960",
    "end": "383599"
  },
  {
    "text": "it I cannot okay maybe May",
    "start": "383599",
    "end": "387400"
  },
  {
    "text": "okay what okay",
    "start": "387400",
    "end": "390639"
  },
  {
    "text": "got me time to commit some sedus we're",
    "start": "390639",
    "end": "392720"
  },
  {
    "text": "gonna do it it's soku time that is",
    "start": "392720",
    "end": "395639"
  },
  {
    "text": "correct so let's see false equals zero",
    "start": "395639",
    "end": "398479"
  },
  {
    "text": "and it does take it to a number oh my",
    "start": "398479",
    "end": "401240"
  },
  {
    "text": "goodness it takes it to a",
    "start": "401240",
    "end": "403599"
  },
  {
    "text": "number no but it also doesn't convert",
    "start": "403599",
    "end": "406080"
  },
  {
    "text": "this to a number it converts it converts",
    "start": "406080",
    "end": "407680"
  },
  {
    "text": "zero to a",
    "start": "407680",
    "end": "409479"
  },
  {
    "text": "string into a number so zero is zero",
    "start": "409479",
    "end": "412960"
  },
  {
    "text": "then we have this converted to a number",
    "start": "412960",
    "end": "415360"
  },
  {
    "text": "as well I think the third step is",
    "start": "415360",
    "end": "416560"
  },
  {
    "text": "actually incorrect which is true I'm",
    "start": "416560",
    "end": "419160"
  },
  {
    "text": "quite positive string is the highest",
    "start": "419160",
    "end": "420720"
  },
  {
    "text": "type not",
    "start": "420720",
    "end": "422000"
  },
  {
    "text": "number or like the leest the loosest",
    "start": "422000",
    "end": "424879"
  },
  {
    "text": "type it's the type that all things can",
    "start": "424879",
    "end": "426680"
  },
  {
    "text": "go into is a string what about triple",
    "start": "426680",
    "end": "428680"
  },
  {
    "text": "equals of course Triple equals is",
    "start": "428680",
    "end": "429919"
  },
  {
    "text": "different because triple equals does not",
    "start": "429919",
    "end": "431199"
  },
  {
    "text": "do type coercion I don't know how to",
    "start": "431199",
    "end": "433440"
  },
  {
    "text": "test it does that make sense try gun",
    "start": "433440",
    "end": "435160"
  },
  {
    "text": "like I I you'd have to go read up on the",
    "start": "435160",
    "end": "437199"
  },
  {
    "text": "specification engine what the f is",
    "start": "437199",
    "end": "439360"
  },
  {
    "text": "triple equal trip in JavaScript for",
    "start": "439360",
    "end": "441360"
  },
  {
    "text": "those that don't know if you do this it",
    "start": "441360",
    "end": "444520"
  },
  {
    "text": "will convert this to a",
    "start": "444520",
    "end": "447039"
  },
  {
    "text": "string so if I go",
    "start": "447039",
    "end": "451520"
  },
  {
    "text": "okay this is why I believe that I am",
    "start": "455520",
    "end": "457840"
  },
  {
    "text": "correct wait what you don't because it",
    "start": "457840",
    "end": "460479"
  },
  {
    "text": "converts it to a string it doesn't",
    "start": "460479",
    "end": "462319"
  },
  {
    "text": "convert it to a number it converts it to",
    "start": "462319",
    "end": "463879"
  },
  {
    "text": "a",
    "start": "463879",
    "end": "465680"
  },
  {
    "text": "string just JS things if you don't if",
    "start": "465680",
    "end": "468080"
  },
  {
    "text": "you don't get it you don't get it all",
    "start": "468080",
    "end": "471918"
  },
  {
    "text": "right oh",
    "start": "472560",
    "end": "475520"
  },
  {
    "text": "no oh no I don't know if I can do this",
    "start": "475520",
    "end": "478440"
  },
  {
    "text": "one I'm going to go with",
    "start": "478440",
    "end": "480680"
  },
  {
    "text": "false I'm going to go with false because",
    "start": "480680",
    "end": "482919"
  },
  {
    "text": "the classic one 0.1 plus. 2 is",
    "start": "482919",
    "end": "487560"
  },
  {
    "text": "3 n right and but if you literally",
    "start": "487560",
    "end": "492120"
  },
  {
    "text": "represent three it must work so this",
    "start": "492120",
    "end": "494840"
  },
  {
    "text": "must be",
    "start": "494840",
    "end": "495840"
  },
  {
    "text": "false .1 plus 2 equal. 3 okay so this is",
    "start": "495840",
    "end": "500599"
  },
  {
    "text": "one of those fun questions that people",
    "start": "500599",
    "end": "502400"
  },
  {
    "text": "talk about a lot as like a quirk of",
    "start": "502400",
    "end": "504080"
  },
  {
    "text": "JavaScript like a lot of people will",
    "start": "504080",
    "end": "505759"
  },
  {
    "text": "point to this exact example as to why",
    "start": "505759",
    "end": "508319"
  },
  {
    "text": "JavaScript is such a bad language but",
    "start": "508319",
    "end": "510319"
  },
  {
    "text": "actually this has nothing to do with",
    "start": "510319",
    "end": "511919"
  },
  {
    "text": "JavaScript at all it's actually a quirk",
    "start": "511919",
    "end": "513839"
  },
  {
    "text": "of arithmetic and you'll see the exact",
    "start": "513839",
    "end": "516320"
  },
  {
    "text": "same result in a ton of different",
    "start": "516320",
    "end": "518000"
  },
  {
    "text": "languages but essentially the issue here",
    "start": "518000",
    "end": "520080"
  },
  {
    "text": "is that floating Point arithmetic is not",
    "start": "520080",
    "end": "522560"
  },
  {
    "text": "super precise so 0.1 plus 2 is going to",
    "start": "522560",
    "end": "525399"
  },
  {
    "text": "be like",
    "start": "525399",
    "end": "527279"
  },
  {
    "text": "300 a bunch of zeros and then like one",
    "start": "527279",
    "end": "530279"
  },
  {
    "text": "2 so these numbers aren't exactly the",
    "start": "530279",
    "end": "532720"
  },
  {
    "text": "same so this is going to be false and it",
    "start": "532720",
    "end": "535440"
  },
  {
    "text": "is yep that's why he's right this is",
    "start": "535440",
    "end": "537640"
  },
  {
    "text": "this this this is this is in many",
    "start": "537640",
    "end": "539959"
  },
  {
    "text": "languages I believe we reproduced it in",
    "start": "539959",
    "end": "541959"
  },
  {
    "text": "go before so false and we can see yep1",
    "start": "541959",
    "end": "545760"
  },
  {
    "text": "plus 2 is O someone is saying that um",
    "start": "545760",
    "end": "548959"
  },
  {
    "text": "false",
    "start": "548959",
    "end": "550120"
  },
  {
    "text": "equals is true",
    "start": "550120",
    "end": "554320"
  },
  {
    "text": "okay is there a point where sometimes",
    "start": "554519",
    "end": "556760"
  },
  {
    "text": "these things break at longer lines okay",
    "start": "556760",
    "end": "558680"
  },
  {
    "text": "so it does convert to a number now",
    "start": "558680",
    "end": "560560"
  },
  {
    "text": "that's not what I was expecting I was",
    "start": "560560",
    "end": "562360"
  },
  {
    "text": "not expecting that okay I'm",
    "start": "562360",
    "end": "566399"
  },
  {
    "text": "wrong okay",
    "start": "567560",
    "end": "570040"
  },
  {
    "text": "I was wrong this number here with a four",
    "start": "570040",
    "end": "572320"
  },
  {
    "text": "at the",
    "start": "572320",
    "end": "574560"
  },
  {
    "text": "end it is it does converted to a number",
    "start": "583560",
    "end": "586320"
  },
  {
    "text": "okay I was wrong I'm the wrong one wow",
    "start": "586320",
    "end": "589040"
  },
  {
    "text": "that's a very confusing conversion",
    "start": "589040",
    "end": "591240"
  },
  {
    "text": "system so they are not actually equal",
    "start": "591240",
    "end": "594519"
  },
  {
    "text": "and yes so it's not a JavaScript Quirk",
    "start": "594519",
    "end": "596279"
  },
  {
    "text": "it has to do with floating Point",
    "start": "596279",
    "end": "597680"
  },
  {
    "text": "arithmetic exactly so that means okay so",
    "start": "597680",
    "end": "601000"
  },
  {
    "text": "that means that the false is technically",
    "start": "601000",
    "end": "603120"
  },
  {
    "text": "a a zero underneath the hood it a false",
    "start": "603120",
    "end": "606200"
  },
  {
    "text": "is always a number because I don't think",
    "start": "606200",
    "end": "608079"
  },
  {
    "text": "a false is converted into a number in my",
    "start": "608079",
    "end": "610880"
  },
  {
    "text": "head it just it must be a zero therefore",
    "start": "610880",
    "end": "614480"
  },
  {
    "text": "the string it doesn't go to the loosest",
    "start": "614480",
    "end": "616640"
  },
  {
    "text": "type it goes to the strictest type maybe",
    "start": "616640",
    "end": "619440"
  },
  {
    "text": "we said I don't even know okay whatever",
    "start": "619440",
    "end": "621560"
  },
  {
    "text": "next up what would be the output of this",
    "start": "621560",
    "end": "623680"
  },
  {
    "text": "code array one two I know what it is do",
    "start": "623680",
    "end": "626839"
  },
  {
    "text": "you know what it is undefined",
    "start": "626839",
    "end": "630240"
  },
  {
    "text": "array at six is nine log array at five",
    "start": "630240",
    "end": "634480"
  },
  {
    "text": "okay so this is like out of bounds for",
    "start": "634480",
    "end": "636240"
  },
  {
    "text": "the array but unlike Java where you get",
    "start": "636240",
    "end": "638160"
  },
  {
    "text": "like an index out of bounds error in",
    "start": "638160",
    "end": "640360"
  },
  {
    "text": "JavaScript all we do is just extend the",
    "start": "640360",
    "end": "643160"
  },
  {
    "text": "array and add that value in and we get",
    "start": "643160",
    "end": "644959"
  },
  {
    "text": "these sort of like empty slots show it",
    "start": "644959",
    "end": "647399"
  },
  {
    "text": "if you like log it out in the Chrome Dev",
    "start": "647399",
    "end": "649040"
  },
  {
    "text": "tools so we just have a bunch of empty",
    "start": "649040",
    "end": "650959"
  },
  {
    "text": "slots and we're logging out one of those",
    "start": "650959",
    "end": "652600"
  },
  {
    "text": "empty slots which I assume just gives",
    "start": "652600",
    "end": "654440"
  },
  {
    "text": "you undefined so let's go with undefined",
    "start": "654440",
    "end": "657360"
  },
  {
    "text": "yeah so it does give you undefined I",
    "start": "657360",
    "end": "659760"
  },
  {
    "text": "think what's even more exciting is when",
    "start": "659760",
    "end": "661480"
  },
  {
    "text": "you go like this when you go uh when you",
    "start": "661480",
    "end": "663880"
  },
  {
    "text": "go const a equals new array",
    "start": "663880",
    "end": "667360"
  },
  {
    "text": "5 you actually have five empty items",
    "start": "667360",
    "end": "670200"
  },
  {
    "text": "which is a very special I this this is a",
    "start": "670200",
    "end": "673320"
  },
  {
    "text": "special special one okay you know why",
    "start": "673320",
    "end": "676320"
  },
  {
    "text": "it's special do you know why it's",
    "start": "676320",
    "end": "678160"
  },
  {
    "text": "special because if you go like this a",
    "start": "678160",
    "end": "681959"
  },
  {
    "text": "map we'll go like this underscore and go",
    "start": "681959",
    "end": "684839"
  },
  {
    "text": "like",
    "start": "684839",
    "end": "686320"
  },
  {
    "text": "69 it didn't it didn't work out",
    "start": "686320",
    "end": "690399"
  },
  {
    "text": "how great is that how great is that five",
    "start": "690399",
    "end": "693920"
  },
  {
    "text": "special",
    "start": "693920",
    "end": "695560"
  },
  {
    "text": "items a do uh length is five a z is",
    "start": "695560",
    "end": "699880"
  },
  {
    "text": "undefined A3 is undefined but it's a",
    "start": "699880",
    "end": "703079"
  },
  {
    "text": "special type of undefined called The",
    "start": "703079",
    "end": "704600"
  },
  {
    "text": "Empty item special it's the empty items",
    "start": "704600",
    "end": "707440"
  },
  {
    "text": "it only exists here and then if you do",
    "start": "707440",
    "end": "709440"
  },
  {
    "text": "something like this 3 equal 69 and then",
    "start": "709440",
    "end": "712600"
  },
  {
    "text": "you hit them with the old map look at",
    "start": "712600",
    "end": "714519"
  },
  {
    "text": "that now it kind of works out like this",
    "start": "714519",
    "end": "717079"
  },
  {
    "text": "is one of those this is one of those",
    "start": "717079",
    "end": "718360"
  },
  {
    "text": "special places that",
    "start": "718360",
    "end": "721240"
  },
  {
    "text": "has screwed me more times than anything",
    "start": "779399",
    "end": "782760"
  },
  {
    "text": "else equals z is going to be false and",
    "start": "782760",
    "end": "786839"
  },
  {
    "text": "then we have true equals not array so",
    "start": "786839",
    "end": "792079"
  },
  {
    "text": "first we do not array so this is going",
    "start": "792079",
    "end": "795399"
  },
  {
    "text": "to convert it to a bolean and then",
    "start": "795399",
    "end": "797079"
  },
  {
    "text": "invert it so I would assume I think an",
    "start": "797079",
    "end": "799480"
  },
  {
    "text": "empty array is going to be truthy I",
    "start": "799480",
    "end": "801959"
  },
  {
    "text": "would imagine although it's empty which",
    "start": "801959",
    "end": "804440"
  },
  {
    "text": "could make it falsey but I'm pretty sure",
    "start": "804440",
    "end": "806040"
  },
  {
    "text": "all arrays are truthy so TR true and",
    "start": "806040",
    "end": "810360"
  },
  {
    "text": "then it becomes false when you invert it",
    "start": "810360",
    "end": "812160"
  },
  {
    "text": "so now we have true I false which is I",
    "start": "812160",
    "end": "816240"
  },
  {
    "text": "don't know what the bang believe array",
    "start": "816240",
    "end": "817959"
  },
  {
    "text": "does this is false and I don't know what",
    "start": "817959",
    "end": "820800"
  },
  {
    "text": "bang array does this is also false so",
    "start": "820800",
    "end": "822880"
  },
  {
    "text": "now we have false plus false which would",
    "start": "822880",
    "end": "825880"
  },
  {
    "text": "be0 plus Z essentially so we have zero",
    "start": "825880",
    "end": "830000"
  },
  {
    "text": "damn okay let's see did we actually do",
    "start": "830000",
    "end": "831959"
  },
  {
    "text": "that correctly or did we just get lucky",
    "start": "831959",
    "end": "835079"
  },
  {
    "text": "so we",
    "start": "835079",
    "end": "836160"
  },
  {
    "text": "have the first parameter is a Boolean",
    "start": "836160",
    "end": "838800"
  },
  {
    "text": "the follow rule applies if Type X is a",
    "start": "838800",
    "end": "841600"
  },
  {
    "text": "Boolean return the result of the",
    "start": "841600",
    "end": "843079"
  },
  {
    "text": "comparison damn uh oh yeah I know why",
    "start": "843079",
    "end": "847040"
  },
  {
    "text": "okay okay yeah when you bang an array",
    "start": "847040",
    "end": "850000"
  },
  {
    "text": "because it's an object it's true",
    "start": "850000",
    "end": "851920"
  },
  {
    "text": "therefore it's false but if you let the",
    "start": "851920",
    "end": "855000"
  },
  {
    "text": "type converter convert on a Boolean",
    "start": "855000",
    "end": "858120"
  },
  {
    "text": "expression it becomes the emptiest",
    "start": "858120",
    "end": "860360"
  },
  {
    "text": "string because it does a join operation",
    "start": "860360",
    "end": "862279"
  },
  {
    "text": "so it does an array. join the",
    "start": "862279",
    "end": "864519"
  },
  {
    "text": "oldfashioned banging arrays problem two",
    "start": "864519",
    "end": "866759"
  },
  {
    "text": "number equals y so yeah we are",
    "start": "866759",
    "end": "869120"
  },
  {
    "text": "converting to numbers essential so",
    "start": "869120",
    "end": "870720"
  },
  {
    "text": "number true equals number array and we",
    "start": "870720",
    "end": "873720"
  },
  {
    "text": "end up with uh obviously I'm so stupid",
    "start": "873720",
    "end": "877320"
  },
  {
    "text": "Loosely equals dang it zero which is",
    "start": "877320",
    "end": "880440"
  },
  {
    "text": "going to be P pain and then we",
    "start": "880440",
    "end": "883199"
  },
  {
    "text": "have this one down here an empty array",
    "start": "883199",
    "end": "886560"
  },
  {
    "text": "is truthy so we convert it and negate it",
    "start": "886560",
    "end": "889240"
  },
  {
    "text": "and it becomes false so true equals",
    "start": "889240",
    "end": "891279"
  },
  {
    "text": "false so the it's so funny that empty",
    "start": "891279",
    "end": "893759"
  },
  {
    "text": "array is truthy sort of it depends on",
    "start": "893759",
    "end": "897560"
  },
  {
    "text": "how you use it you know it's not the",
    "start": "897560",
    "end": "899279"
  },
  {
    "text": "size of your empty array that",
    "start": "899279",
    "end": "901279"
  },
  {
    "text": "matters it's how you use it okay because",
    "start": "901279",
    "end": "904800"
  },
  {
    "text": "sometimes it is true and sometimes it's",
    "start": "904800",
    "end": "908720"
  },
  {
    "text": "not true you know what I mean way too",
    "start": "908720",
    "end": "911600"
  },
  {
    "text": "dank yeah yeah like real talk because",
    "start": "911600",
    "end": "913519"
  },
  {
    "text": "like like let's pretend I have an empty",
    "start": "913519",
    "end": "915160"
  },
  {
    "text": "array like this size that's huge right",
    "start": "915160",
    "end": "918519"
  },
  {
    "text": "that's like huge",
    "start": "918519",
    "end": "921320"
  },
  {
    "text": "so can I do that no I can't but I can do",
    "start": "921320",
    "end": "923959"
  },
  {
    "text": "this true right boom got him right I can",
    "start": "923959",
    "end": "927360"
  },
  {
    "text": "do false true so there you go",
    "start": "927360",
    "end": "929600"
  },
  {
    "text": "so an empty array is",
    "start": "929600",
    "end": "933360"
  },
  {
    "text": "falsy a very big empty array very it's",
    "start": "933360",
    "end": "936880"
  },
  {
    "text": "very falsy see it depends on how you use",
    "start": "936880",
    "end": "940519"
  },
  {
    "text": "it both false then false plus false we",
    "start": "940519",
    "end": "943480"
  },
  {
    "text": "convert both to numbers which are both",
    "start": "943480",
    "end": "945120"
  },
  {
    "text": "zero and we get zero okay that was a",
    "start": "945120",
    "end": "948560"
  },
  {
    "text": "difficult one next up we have one plus",
    "start": "948560",
    "end": "951959"
  },
  {
    "text": "the string of two plus the string of two",
    "start": "951959",
    "end": "953959"
  },
  {
    "text": "okay so I would imagine this is just 12",
    "start": "953959",
    "end": "956480"
  },
  {
    "text": "+ 2 is 122 as a string what are the",
    "start": "956480",
    "end": "959399"
  },
  {
    "text": "other answers we're definitely not",
    "start": "959399",
    "end": "960680"
  },
  {
    "text": "getting na in because we're either just",
    "start": "960680",
    "end": "962600"
  },
  {
    "text": "doing addition or concatenation I assume",
    "start": "962600",
    "end": "964839"
  },
  {
    "text": "that it's it's we're going to op we're",
    "start": "964839",
    "end": "967319"
  },
  {
    "text": "going to we're going to execute in this",
    "start": "967319",
    "end": "969240"
  },
  {
    "text": "order I want to say it's",
    "start": "969240",
    "end": "971680"
  },
  {
    "text": "122 because I can't think about how you",
    "start": "971680",
    "end": "973959"
  },
  {
    "text": "get 32 32 is the only one that wouldn't",
    "start": "973959",
    "end": "976639"
  },
  {
    "text": "make any sense right because then 1 plus",
    "start": "976639",
    "end": "978279"
  },
  {
    "text": "2 would have been three which is a",
    "start": "978279",
    "end": "980360"
  },
  {
    "text": "number thus then it would have been five",
    "start": "980360",
    "end": "982680"
  },
  {
    "text": "right so you can't make 32 if you just",
    "start": "982680",
    "end": "985000"
  },
  {
    "text": "apply any sort of logic I think 23 would",
    "start": "985000",
    "end": "988360"
  },
  {
    "text": "have been a good one right cuz then you",
    "start": "988360",
    "end": "990040"
  },
  {
    "text": "could have Bamboozled people by thinking",
    "start": "990040",
    "end": "991639"
  },
  {
    "text": "that it would have executed the",
    "start": "991639",
    "end": "993240"
  },
  {
    "text": "stringing due to Crazy operator",
    "start": "993240",
    "end": "996240"
  },
  {
    "text": "precedence but no that would make that",
    "start": "996240",
    "end": "998319"
  },
  {
    "text": "would also not make any sense right it",
    "start": "998319",
    "end": "1000199"
  },
  {
    "text": "has to be 122 and I don't think there's",
    "start": "1000199",
    "end": "1002360"
  },
  {
    "text": "a way to get in I bet it's 32 it can't",
    "start": "1002360",
    "end": "1003880"
  },
  {
    "text": "be 32 32 I guess would be if we treated",
    "start": "1003880",
    "end": "1006120"
  },
  {
    "text": "this as numbers so this would be three",
    "start": "1006120",
    "end": "1008079"
  },
  {
    "text": "and then we concatenate three two but I",
    "start": "1008079",
    "end": "1011519"
  },
  {
    "text": "I don't understand why that would be",
    "start": "1011519",
    "end": "1013759"
  },
  {
    "text": "case I think if there's a string in it",
    "start": "1013759",
    "end": "1015519"
  },
  {
    "text": "we just do string concatenation so this",
    "start": "1015519",
    "end": "1017600"
  },
  {
    "text": "is going to be so you're saying it's",
    "start": "1017600",
    "end": "1020360"
  },
  {
    "text": "y 122 yeah the has tot is defined for",
    "start": "1020360",
    "end": "1024600"
  },
  {
    "text": "numbers and strings and the expression",
    "start": "1024600",
    "end": "1026038"
  },
  {
    "text": "is evaluated from left to right so it's",
    "start": "1026039",
    "end": "1030120"
  },
  {
    "text": "that' be the other possible answer five",
    "start": "1030120",
    "end": "1031640"
  },
  {
    "text": "would have been a better answer to put",
    "start": "1031640",
    "end": "1032600"
  },
  {
    "text": "it in the better answer to put in would",
    "start": "1032600",
    "end": "1034839"
  },
  {
    "text": "have been 122 or five either treat it as",
    "start": "1034839",
    "end": "1038438"
  },
  {
    "text": "all numbers or treat it as all string",
    "start": "1038439",
    "end": "1041360"
  },
  {
    "text": "right that's that's the two options you",
    "start": "1041360",
    "end": "1042760"
  },
  {
    "text": "have right side contains a string",
    "start": "1042760",
    "end": "1044760"
  },
  {
    "text": "concatenation will be made which results",
    "start": "1044760",
    "end": "1046640"
  },
  {
    "text": "in 12 and then we do 12",
    "start": "1046640",
    "end": "1050919"
  },
  {
    "text": "does I feel like I've seen this before",
    "start": "1109440",
    "end": "1113080"
  },
  {
    "text": "but I yeah I don't actually know these",
    "start": "1113080",
    "end": "1115440"
  },
  {
    "text": "other two made no sense right like how",
    "start": "1115440",
    "end": "1116640"
  },
  {
    "text": "would it insert a space between hello",
    "start": "1116640",
    "end": "1118240"
  },
  {
    "text": "and Twitter that's crazy okay so this is",
    "start": "1118240",
    "end": "1121000"
  },
  {
    "text": "the same thing as just what's already in",
    "start": "1121000",
    "end": "1122720"
  },
  {
    "text": "there which would make sense it's raw",
    "start": "1122720",
    "end": "1124559"
  },
  {
    "text": "we're raw in which is the new line",
    "start": "1124559",
    "end": "1127000"
  },
  {
    "text": "character being used as a new line and",
    "start": "1127000",
    "end": "1129559"
  },
  {
    "text": "then we have hello Twitter space world",
    "start": "1129559",
    "end": "1132520"
  },
  {
    "text": "so new line converting to a space for",
    "start": "1132520",
    "end": "1134919"
  },
  {
    "text": "some reason which maybe is the answer",
    "start": "1134919",
    "end": "1136600"
  },
  {
    "text": "maybe it ends up sort of like HTML R too",
    "start": "1136600",
    "end": "1138640"
  },
  {
    "text": "crazy all spaces get condensed into a",
    "start": "1138640",
    "end": "1140559"
  },
  {
    "text": "single space no matter how much but it's",
    "start": "1140559",
    "end": "1142799"
  },
  {
    "text": "called raw we already know that when",
    "start": "1142799",
    "end": "1144080"
  },
  {
    "text": "you're raw dogging it it's either",
    "start": "1144080",
    "end": "1145559"
  },
  {
    "text": "completely letting it go straight",
    "start": "1145559",
    "end": "1147000"
  },
  {
    "text": "through and you get the new line or it's",
    "start": "1147000",
    "end": "1149240"
  },
  {
    "text": "saying that the string will be treated",
    "start": "1149240",
    "end": "1151440"
  },
  {
    "text": "as like literally what it is thus it",
    "start": "1151440",
    "end": "1154039"
  },
  {
    "text": "will get escaped which space it is like",
    "start": "1154039",
    "end": "1156520"
  },
  {
    "text": "new lines and things and then we have",
    "start": "1156520",
    "end": "1158480"
  },
  {
    "text": "hello space Twitter unforunately raw has",
    "start": "1158480",
    "end": "1161200"
  },
  {
    "text": "two possibly be a space here think of",
    "start": "1161200",
    "end": "1164760"
  },
  {
    "text": "any way that string. raw would know to",
    "start": "1164760",
    "end": "1166280"
  },
  {
    "text": "do that so I think this is wrong so it's",
    "start": "1166280",
    "end": "1169320"
  },
  {
    "text": "one of these three this one feels too",
    "start": "1169320",
    "end": "1171559"
  },
  {
    "text": "easy like hello Twitter new line world",
    "start": "1171559",
    "end": "1174440"
  },
  {
    "text": "is like what you would expect and I know",
    "start": "1174440",
    "end": "1175960"
  },
  {
    "text": "this quiz is supposed to be hard so I",
    "start": "1175960",
    "end": "1177760"
  },
  {
    "text": "feel like it's either this one or this",
    "start": "1177760",
    "end": "1179400"
  },
  {
    "text": "one raw feels like it could go by like",
    "start": "1179400",
    "end": "1181919"
  },
  {
    "text": "HTML rules so let's go with this one",
    "start": "1181919",
    "end": "1184440"
  },
  {
    "text": "okay so that was wrong it was the first",
    "start": "1184440",
    "end": "1186520"
  },
  {
    "text": "one so let's see what this actually does",
    "start": "1186520",
    "end": "1188200"
  },
  {
    "text": "yeah it just raw dogs do so it takes a",
    "start": "1188200",
    "end": "1189880"
  },
  {
    "text": "template literal and processes",
    "start": "1189880",
    "end": "1191640"
  },
  {
    "text": "substitutions but it ignores well-known",
    "start": "1191640",
    "end": "1194320"
  },
  {
    "text": "Escape sequences okay so it ignores the",
    "start": "1194320",
    "end": "1197799"
  },
  {
    "text": "by the way that sounds awful well-known",
    "start": "1197799",
    "end": "1199600"
  },
  {
    "text": "Escape sequences like what does that",
    "start": "1199600",
    "end": "1201400"
  },
  {
    "text": "even mean to what level are what is",
    "start": "1201400",
    "end": "1203919"
  },
  {
    "text": "wellknown",
    "start": "1203919",
    "end": "1205640"
  },
  {
    "text": "what who who voted on what's welln I",
    "start": "1205640",
    "end": "1209039"
  },
  {
    "text": "would have loved to been okay actually I",
    "start": "1209039",
    "end": "1210600"
  },
  {
    "text": "would have hated to been in the meeting",
    "start": "1210600",
    "end": "1211679"
  },
  {
    "text": "but I would have loved to just see a",
    "start": "1211679",
    "end": "1213320"
  },
  {
    "text": "condensed version of what went on in",
    "start": "1213320",
    "end": "1215440"
  },
  {
    "text": "tc39 for being like you know what we",
    "start": "1215440",
    "end": "1218159"
  },
  {
    "text": "need we need to be Rod doing all of our",
    "start": "1218159",
    "end": "1222440"
  },
  {
    "text": "strengths right and and they're like",
    "start": "1222440",
    "end": "1225200"
  },
  {
    "text": "well we can't Rod Dog all the escapes",
    "start": "1225200",
    "end": "1227240"
  },
  {
    "text": "there's no way we could know them all we",
    "start": "1227240",
    "end": "1229039"
  },
  {
    "text": "will only Escape wellknown",
    "start": "1229039",
    "end": "1231159"
  },
  {
    "text": "ones yikes welln okay um in my head",
    "start": "1231159",
    "end": "1235880"
  },
  {
    "text": "wellknown is of course sln slash",
    "start": "1235880",
    "end": "1241120"
  },
  {
    "text": "SLT",
    "start": "1241120",
    "end": "1243360"
  },
  {
    "text": "SLB who used this",
    "start": "1243360",
    "end": "1246520"
  },
  {
    "text": "SLB",
    "start": "1246520",
    "end": "1249520"
  },
  {
    "text": "SLV yeah well by the way for those that",
    "start": "1249520",
    "end": "1251559"
  },
  {
    "text": "don't know if you're ever doing HTML uh",
    "start": "1251559",
    "end": "1253960"
  },
  {
    "text": "the new line separators /rn which stands",
    "start": "1253960",
    "end": "1257039"
  },
  {
    "text": "for registered nurse",
    "start": "1257039",
    "end": "1259440"
  },
  {
    "text": "uh I I I would imagine it doesn't do",
    "start": "1259440",
    "end": "1261440"
  },
  {
    "text": "tick it wouldn't do this because that",
    "start": "1261440",
    "end": "1263360"
  },
  {
    "text": "makes no sense right this makes no this",
    "start": "1263360",
    "end": "1266600"
  },
  {
    "text": "is what you would put in the string",
    "start": "1266600",
    "end": "1267760"
  },
  {
    "text": "itself",
    "start": "1267760",
    "end": "1270200"
  },
  {
    "text": "right I never remembered as crlf I",
    "start": "1270559",
    "end": "1274600"
  },
  {
    "text": "remembered as registered",
    "start": "1274600",
    "end": "1276400"
  },
  {
    "text": "nurse if you want a registered nurse you",
    "start": "1276400",
    "end": "1278640"
  },
  {
    "text": "got to you got to toss it on down okay",
    "start": "1278640",
    "end": "1280159"
  },
  {
    "text": "it's the only way to remember it I use",
    "start": "1280159",
    "end": "1282039"
  },
  {
    "text": "slf all the time what the hell",
    "start": "1282039",
    "end": "1284200"
  },
  {
    "text": "slf what in the heavens is slf hit me",
    "start": "1284200",
    "end": "1287080"
  },
  {
    "text": "with the slf somehow I actually",
    "start": "1287080",
    "end": "1289679"
  },
  {
    "text": "understand it in so it just prints out",
    "start": "1289679",
    "end": "1292120"
  },
  {
    "text": "what we gave",
    "start": "1292120",
    "end": "1293760"
  },
  {
    "text": "it okay so here's an example string. raw",
    "start": "1293760",
    "end": "1296919"
  },
  {
    "text": "VAR one is hey VAR 2 is there so we",
    "start": "1296919",
    "end": "1300799"
  },
  {
    "text": "include hey there but the back slash T",
    "start": "1300799",
    "end": "1303240"
  },
  {
    "text": "and back slash in which is Tab and new",
    "start": "1303240",
    "end": "1305320"
  },
  {
    "text": "line just get left in interesting I",
    "start": "1305320",
    "end": "1308480"
  },
  {
    "text": "don't think I've ever seen this actually",
    "start": "1308480",
    "end": "1310720"
  },
  {
    "text": "used like I think I've seen it in like",
    "start": "1310720",
    "end": "1312120"
  },
  {
    "text": "documentation somewhere but I'm curious",
    "start": "1312120",
    "end": "1314240"
  },
  {
    "text": "if anybody's actually used this before",
    "start": "1314240",
    "end": "1315840"
  },
  {
    "text": "like if you I have no idea how to use",
    "start": "1315840",
    "end": "1317960"
  },
  {
    "text": "this real talk I have no idea how to use",
    "start": "1317960",
    "end": "1323200"
  },
  {
    "text": "this I have none like I I I don't think",
    "start": "1323559",
    "end": "1327080"
  },
  {
    "text": "I could use it bro you do you doing",
    "start": "1327080",
    "end": "1330080"
  },
  {
    "text": "JavaScript with serial ports I don't",
    "start": "1330080",
    "end": "1333080"
  },
  {
    "text": "know about this what is JS doing in",
    "start": "1333080",
    "end": "1334960"
  },
  {
    "text": "serial communication okay I got a lot of",
    "start": "1334960",
    "end": "1338000"
  },
  {
    "text": "questions like I",
    "start": "1338000",
    "end": "1340320"
  },
  {
    "text": "feel are you serial right now is is Cal",
    "start": "1340320",
    "end": "1343320"
  },
  {
    "text": "in the house right now form feeding",
    "start": "1343320",
    "end": "1347440"
  },
  {
    "text": "cereal",
    "start": "1347640",
    "end": "1350640"
  },
  {
    "text": "we got it's it's 2024 we got USB access",
    "start": "1352279",
    "end": "1355960"
  },
  {
    "text": "now oh [ __ ] me have a use case what it",
    "start": "1355960",
    "end": "1359919"
  },
  {
    "text": "is because I can't think of why I would",
    "start": "1359919",
    "end": "1361840"
  },
  {
    "text": "need this but either way kind of",
    "start": "1361840",
    "end": "1363559"
  },
  {
    "text": "interesting learned something new today",
    "start": "1363559",
    "end": "1366200"
  },
  {
    "text": "and final question what's going to be",
    "start": "1366200",
    "end": "1367760"
  },
  {
    "text": "the output I want so bad in my heart",
    "start": "1367760",
    "end": "1371400"
  },
  {
    "text": "that a string is not an instance of a",
    "start": "1371400",
    "end": "1373600"
  },
  {
    "text": "capital S string so I am personally",
    "start": "1373600",
    "end": "1376200"
  },
  {
    "text": "going to go with false I want it so bad",
    "start": "1376200",
    "end": "1378360"
  },
  {
    "text": "my heart heart just to be true I want it",
    "start": "1378360",
    "end": "1379880"
  },
  {
    "text": "to be true this is a string instance of",
    "start": "1379880",
    "end": "1383039"
  },
  {
    "text": "string yes come on it is it's so true",
    "start": "1383039",
    "end": "1385520"
  },
  {
    "text": "yes because a capital B",
    "start": "1385520",
    "end": "1388120"
  },
  {
    "text": "Boolean",
    "start": "1388120",
    "end": "1390200"
  },
  {
    "text": "booon is not the same as a Boolean right",
    "start": "1390200",
    "end": "1394200"
  },
  {
    "text": "yeah so a string which makes me want to",
    "start": "1394200",
    "end": "1396120"
  },
  {
    "text": "put true but let's see instance of",
    "start": "1396120",
    "end": "1399919"
  },
  {
    "text": "string so instance of what it actually",
    "start": "1399919",
    "end": "1402919"
  },
  {
    "text": "does is it looks up the Prototype chain",
    "start": "1402919",
    "end": "1405279"
  },
  {
    "text": "can we take a quick second and realize",
    "start": "1405279",
    "end": "1406720"
  },
  {
    "text": "that this is a product of the day from",
    "start": "1406720",
    "end": "1408600"
  },
  {
    "text": "product hunt got second place",
    "start": "1408600",
    "end": "1410480"
  },
  {
    "text": "congratulations whoever got second place",
    "start": "1410480",
    "end": "1411919"
  },
  {
    "text": "but I do have to like a quick question",
    "start": "1411919",
    "end": "1413600"
  },
  {
    "text": "which is what's the",
    "start": "1413600",
    "end": "1416320"
  },
  {
    "text": "product emotional abuse so it looks to",
    "start": "1416320",
    "end": "1420559"
  },
  {
    "text": "see is this",
    "start": "1420559",
    "end": "1423400"
  },
  {
    "text": "object like above whatever this value is",
    "start": "1423400",
    "end": "1427039"
  },
  {
    "text": "in the Prototype chain but this is a",
    "start": "1427039",
    "end": "1429320"
  },
  {
    "text": "string literal shut up and take that but",
    "start": "1429320",
    "end": "1432159"
  },
  {
    "text": "I don't think you can actually like do",
    "start": "1432159",
    "end": "1434400"
  },
  {
    "text": "that like I don't think it's going to be",
    "start": "1434400",
    "end": "1436080"
  },
  {
    "text": "an instance of the string object CU",
    "start": "1436080",
    "end": "1439400"
  },
  {
    "text": "it's here you actually have to use like",
    "start": "1439400",
    "end": "1441520"
  },
  {
    "text": "the string Constructor but when you just",
    "start": "1441520",
    "end": "1443520"
  },
  {
    "text": "use a literal like this I think you",
    "start": "1443520",
    "end": "1445679"
  },
  {
    "text": "might actually get false we prefer to",
    "start": "1445679",
    "end": "1447919"
  },
  {
    "text": "call it raw dogging going to go with",
    "start": "1447919",
    "end": "1449640"
  },
  {
    "text": "false although I'm not 100% sure okay",
    "start": "1449640",
    "end": "1452279"
  },
  {
    "text": "yeah it is false let's see okay yeah so",
    "start": "1452279",
    "end": "1454760"
  },
  {
    "text": "if it was a string literal you would get",
    "start": "1454760",
    "end": "1457919"
  },
  {
    "text": "the result you expected at the beginning",
    "start": "1457919",
    "end": "1459600"
  },
  {
    "text": "which I guess I want to see a piece of",
    "start": "1459600",
    "end": "1463000"
  },
  {
    "text": "code that uses a string literal or a",
    "start": "1463000",
    "end": "1465720"
  },
  {
    "text": "string Constructor is there any reason",
    "start": "1465720",
    "end": "1467399"
  },
  {
    "text": "to use a string Constructor at any point",
    "start": "1467399",
    "end": "1469360"
  },
  {
    "text": "ever for any reason like what am I",
    "start": "1469360",
    "end": "1474320"
  },
  {
    "text": "missing I use string Constructor for fun",
    "start": "1474320",
    "end": "1477520"
  },
  {
    "text": "a job interview to write that",
    "start": "1477520",
    "end": "1481679"
  },
  {
    "text": "example to make it an instance",
    "start": "1481919",
    "end": "1486200"
  },
  {
    "text": "of did I just ask why did the chicken",
    "start": "1489159",
    "end": "1491760"
  },
  {
    "text": "cross the",
    "start": "1491760",
    "end": "1494159"
  },
  {
    "text": "road Dr instructors for real Enterprise",
    "start": "1494720",
    "end": "1497840"
  },
  {
    "text": "why the chicken cross the road to get to",
    "start": "1497840",
    "end": "1499559"
  },
  {
    "text": "the other side dummy just like ah yeah",
    "start": "1499559",
    "end": "1501960"
  },
  {
    "text": "you're right we use string Constructors",
    "start": "1501960",
    "end": "1503679"
  },
  {
    "text": "because we wanted a string a constructed",
    "start": "1503679",
    "end": "1506520"
  },
  {
    "text": "string okay he's",
    "start": "1506520",
    "end": "1508279"
  },
  {
    "text": "right the fact that you have coded JS a",
    "start": "1508279",
    "end": "1510760"
  },
  {
    "text": "lot explains some things I have coded a",
    "start": "1510760",
    "end": "1512760"
  },
  {
    "text": "lot of JS and I have no idea what I have",
    "start": "1512760",
    "end": "1514919"
  },
  {
    "text": "never once used a capital ass string",
    "start": "1514919",
    "end": "1517039"
  },
  {
    "text": "Constructor like ever for any reason",
    "start": "1517039",
    "end": "1518840"
  },
  {
    "text": "assuming you expected it to be true but",
    "start": "1518840",
    "end": "1521080"
  },
  {
    "text": "what it does is it checks if the string",
    "start": "1521080",
    "end": "1522760"
  },
  {
    "text": "Constructor is nested within the",
    "start": "1522760",
    "end": "1524279"
  },
  {
    "text": "Prototype chain of the value provided in",
    "start": "1524279",
    "end": "1526360"
  },
  {
    "text": "this case it isn't okay yep so that's",
    "start": "1526360",
    "end": "1529000"
  },
  {
    "text": "sort of so string doesn't have string",
    "start": "1529000",
    "end": "1531080"
  },
  {
    "text": "Methods well it's funny you should say",
    "start": "1531080",
    "end": "1534679"
  },
  {
    "text": "that because I'm pretty sure they do",
    "start": "1534679",
    "end": "1538000"
  },
  {
    "text": "they do is it uh isn't it uh Java that",
    "start": "1538000",
    "end": "1541360"
  },
  {
    "text": "forces you to check string equality with",
    "start": "1541360",
    "end": "1542880"
  },
  {
    "text": "some method yes uh Java required oh",
    "start": "1542880",
    "end": "1545919"
  },
  {
    "text": "which is not wrong so Java's actually",
    "start": "1545919",
    "end": "1547559"
  },
  {
    "text": "not wrong with that the reason why",
    "start": "1547559",
    "end": "1549360"
  },
  {
    "text": "they're not wrong with it you have to do",
    "start": "1549360",
    "end": "1551039"
  },
  {
    "text": "uh string. two equal some string right",
    "start": "1551039",
    "end": "1554480"
  },
  {
    "text": "right is equal right you know you have",
    "start": "1554480",
    "end": "1556760"
  },
  {
    "text": "to do you know Fu which is a capital S",
    "start": "1556760",
    "end": "1558880"
  },
  {
    "text": "string is equal you have to do that the",
    "start": "1558880",
    "end": "1560720"
  },
  {
    "text": "reason why you have to do that is",
    "start": "1560720",
    "end": "1565200"
  },
  {
    "text": "because it treats strings as",
    "start": "1565200",
    "end": "1569159"
  },
  {
    "text": "objects and so objects when you do a",
    "start": "1569159",
    "end": "1571679"
  },
  {
    "text": "check or is it equals yeah it's equals",
    "start": "1571679",
    "end": "1574080"
  },
  {
    "text": "or is equals I can't",
    "start": "1574080",
    "end": "1575440"
  },
  {
    "text": "remember it doesn't walk the string to",
    "start": "1575440",
    "end": "1578279"
  },
  {
    "text": "see if it is right it just checks to see",
    "start": "1578279",
    "end": "1580640"
  },
  {
    "text": "is it the same ref it doesn't has the",
    "start": "1580640",
    "end": "1582760"
  },
  {
    "text": "same referential value and if it does",
    "start": "1582760",
    "end": "1585440"
  },
  {
    "text": "then yeah then it's like okay these are",
    "start": "1585440",
    "end": "1587080"
  },
  {
    "text": "equal at a referential level",
    "start": "1587080",
    "end": "1590080"
  },
  {
    "text": "I still hate it regardless of it's",
    "start": "1590080",
    "end": "1591520"
  },
  {
    "text": "technically correct oh I'm on your team",
    "start": "1591520",
    "end": "1593520"
  },
  {
    "text": "I me and all my homies hate Java but I",
    "start": "1593520",
    "end": "1596760"
  },
  {
    "text": "totally get it at least the rules",
    "start": "1596760",
    "end": "1600799"
  },
  {
    "text": "consistent what we thought so we got it",
    "start": "1600799",
    "end": "1603480"
  },
  {
    "text": "right all right so overall got a nine",
    "start": "1603480",
    "end": "1604919"
  },
  {
    "text": "out of 10 got one question wrong and we",
    "start": "1604919",
    "end": "1606520"
  },
  {
    "text": "learned some new stuff so I would call",
    "start": "1606520",
    "end": "1607840"
  },
  {
    "text": "this a success let me know if you want",
    "start": "1607840",
    "end": "1609399"
  },
  {
    "text": "to see more videos like this and how you",
    "start": "1609399",
    "end": "1611120"
  },
  {
    "text": "did on this quiz as well otherwise I",
    "start": "1611120",
    "end": "1613000"
  },
  {
    "text": "will see you in the next",
    "start": "1613000",
    "end": "1614840"
  },
  {
    "text": "video I got them all right and got",
    "start": "1614840",
    "end": "1619080"
  },
  {
    "text": "immediately hired by a Fang company and",
    "start": "1619080",
    "end": "1623799"
  },
  {
    "text": "comment that was great that was great I",
    "start": "1623799",
    "end": "1626000"
  },
  {
    "text": "going to subscribe to you too that was",
    "start": "1626000",
    "end": "1627919"
  },
  {
    "text": "fantastic absolutely nice video",
    "start": "1627919",
    "end": "1630799"
  },
  {
    "text": "fantastic fantastic fantastic go give",
    "start": "1630799",
    "end": "1634080"
  },
  {
    "text": "that guy like this isn't Twitter this",
    "start": "1634080",
    "end": "1636760"
  },
  {
    "text": "isn't Twitter what do you mean of course",
    "start": "1636760",
    "end": "1638880"
  },
  {
    "text": "this is",
    "start": "1638880",
    "end": "1640200"
  },
  {
    "text": "Twitter you got a [ __ ] post everywhere",
    "start": "1640200",
    "end": "1642960"
  },
  {
    "text": "[ __ ] posting is a way of life okay I",
    "start": "1642960",
    "end": "1646760"
  },
  {
    "text": "think that this my friends is the",
    "start": "1646760",
    "end": "1649120"
  },
  {
    "text": "perfect example of Twitter [ __ ] posting",
    "start": "1649120",
    "end": "1652240"
  },
  {
    "text": "right here it's beautiful people are",
    "start": "1652240",
    "end": "1655440"
  },
  {
    "text": "liking it let's Circle back on this so",
    "start": "1655440",
    "end": "1658440"
  },
  {
    "text": "you work with",
    "start": "1658440",
    "end": "1661080"
  },
  {
    "text": "everyone oh my goodness it just means I",
    "start": "1667559",
    "end": "1670440"
  },
  {
    "text": "don't like to work with so",
    "start": "1670440",
    "end": "1674410"
  },
  {
    "text": "[Laughter]",
    "start": "1674410",
    "end": "1677240"
  },
  {
    "text": "iconic got him all right the name the",
    "start": "1677240",
    "end": "1680600"
  },
  {
    "text": "name the",
    "start": "1680600",
    "end": "1682240"
  },
  {
    "text": "name it's taking down soy chaotic one",
    "start": "1682240",
    "end": "1685240"
  },
  {
    "text": "tweet at a time a Jen",
    "start": "1685240",
    "end": "1688840"
  }
]