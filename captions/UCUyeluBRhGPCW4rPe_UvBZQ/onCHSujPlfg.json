[
  {
    "text": "all right so js0 versus JS sugar or js0 and JS sugar the tooling will continue",
    "start": "80",
    "end": "5240"
  },
  {
    "text": "until morale improves there's a bit of a feta verse drama last week when tc39 added a discussion to their agenda The",
    "start": "5240",
    "end": "12000"
  },
  {
    "text": "Proposal from Google was to split the standard into JSO or js0 the language implemented by engines and JS sugar the",
    "start": "12000",
    "end": "18400"
  },
  {
    "text": "extended syntax that tools like webpack will compile to js0 okay before everyw",
    "start": "18400",
    "end": "24240"
  },
  {
    "text": "throws the like the towel out this is literally what it is already okay we",
    "start": "24240",
    "end": "30039"
  },
  {
    "text": "already compile our JavaScript Yes you heard that correctly you take typescript plus some extra operators that don't",
    "start": "30039",
    "end": "37399"
  },
  {
    "text": "don't currently exist in the spec of JavaScript and you build your JavaScript",
    "start": "37399",
    "end": "42640"
  },
  {
    "text": "you build an interpreted language that is downloaded as plain text across the internet and interpreted by an engine",
    "start": "42640",
    "end": "48920"
  },
  {
    "text": "yes you you do that they argue that new features are placing a perform performance and security burden on JS",
    "start": "48920",
    "end": "55079"
  },
  {
    "text": "engine which puts the implementer at odds with JavaScript developers who are demanding new IC sugar",
    "start": "55079",
    "end": "61519"
  },
  {
    "text": "apparently apparently is this all over match statements is this matching pipes is",
    "start": "61519",
    "end": "67759"
  },
  {
    "text": "somebody finally getting just that they're like that's it matching pipes are too much we have to feel at least a",
    "start": "67759",
    "end": "74520"
  },
  {
    "text": "little bit bad for these for for V8 specifically V8 and the reason why I say",
    "start": "74520",
    "end": "80000"
  },
  {
    "text": "we should feel bad for V8 and pour one out for the old V8 is that they took",
    "start": "80000",
    "end": "85040"
  },
  {
    "text": "JavaScript and got the most talented Engineers possible",
    "start": "85040",
    "end": "91000"
  },
  {
    "text": "and they made it kind of fast that's impressive so is it surprising that",
    "start": "91000",
    "end": "97119"
  },
  {
    "text": "people want more no uh you know JavaScript does not have matching and people want matching uh pattern matching",
    "start": "97119",
    "end": "103200"
  },
  {
    "text": "is super super cool dude how much do you want to bet we're going to start having function overloading with pattern matching like the licks are being",
    "start": "103200",
    "end": "108560"
  },
  {
    "text": "proposed in no time short right but it's funny that uh these implementations of these various new features are actually",
    "start": "108560",
    "end": "114520"
  },
  {
    "text": "causing performance and security issues which I can imagine the every time you add one of these new these especially",
    "start": "114520",
    "end": "120799"
  },
  {
    "text": "these new syntax like like matching or something else like you have to rethink about how you even represent the",
    "start": "120799",
    "end": "127640"
  },
  {
    "text": "JavaScript data to begin with to be able to do this properly uh all right anyways",
    "start": "127640",
    "end": "133120"
  },
  {
    "text": "by splitting the standard Google hopes that JS sugar can continue to evolve quickly while JS gr uh zero grows more",
    "start": "133120",
    "end": "138599"
  },
  {
    "text": "gradually this makes sense uh sort of makes sense the problem is is that again",
    "start": "138599",
    "end": "143959"
  },
  {
    "text": "okay my goodness my goodness okay so the we already have a pretty hard time with JavaScript tooling as it is",
    "start": "143959",
    "end": "150400"
  },
  {
    "text": "I just don't think we need more change in the JavaScript ecosystem right now I think JavaScript has plenty of of great",
    "start": "150400",
    "end": "157280"
  },
  {
    "text": "stuff it already has more than it needs to just to do everything we just got done even reading about how void zero is",
    "start": "157280",
    "end": "163720"
  },
  {
    "text": "now first the first venture-backed JavaScript build system we actually have venture capitalist build systems going",
    "start": "163720",
    "end": "169440"
  },
  {
    "text": "on right now in the JavaScript world like it's that crazy so I'm not sure how this makes anything better again just",
    "start": "169440",
    "end": "176720"
  },
  {
    "text": "one has to wonder what what is going on how does how does this happen with a language how is there a group of people",
    "start": "176720",
    "end": "183159"
  },
  {
    "text": "that decide what the language should do there's a group of people that have to implement how the language should be interpreted in run in a runtime yet",
    "start": "183159",
    "end": "190360"
  },
  {
    "text": "there's just not like a someone just make a effing tool in the middle how is",
    "start": "190360",
    "end": "196120"
  },
  {
    "text": "how does Google not just have the JavaScript build tool don't worry it works this is just how it works they",
    "start": "196120",
    "end": "202519"
  },
  {
    "text": "have closure I know they have closure they actually did do it a long time ago and they never did it and many JavaScript developers myself included",
    "start": "202519",
    "end": "208319"
  },
  {
    "text": "would like to rely Less on these tools uh there are a huge number of use cases that with es modules and HTT P3 oh my",
    "start": "208319",
    "end": "215599"
  },
  {
    "text": "gosh wait hold on oh hold on was this article pre-read did I just",
    "start": "215599",
    "end": "222959"
  },
  {
    "text": "pre-read this article I just pre-read this article let's go casually mentioning HT H Tity P3 I mean yes uh",
    "start": "222959",
    "end": "230799"
  },
  {
    "text": "could be built without pre-m compilation JavaScript might finally be accessible to newcomers and fund once more one",
    "start": "230799",
    "end": "235879"
  },
  {
    "text": "thing that's really amazing and I think dhh actually points out something that's awesome is that one thing that made",
    "start": "235879",
    "end": "241519"
  },
  {
    "text": "JavaScript so cool is that you could just inspect source and people that are",
    "start": "241519",
    "end": "246920"
  },
  {
    "text": "new could see how something is done and understand it and there's just something so cool about that that it does make",
    "start": "246920",
    "end": "253519"
  },
  {
    "text": "learning and education a lot more accessible and as things have just become these compiled uh messes it is",
    "start": "253519",
    "end": "259799"
  },
  {
    "text": "it's much more difficult to be you know that I learned go the same way yeah uh",
    "start": "259799",
    "end": "267000"
  },
  {
    "text": "Creator HTP 3 uh fights the need to bundling since TCP connections can be reused well fun fact griffing uh HTTP 3",
    "start": "267000",
    "end": "273880"
  },
  {
    "text": "in fact does not even use TCP so a big problem about TCP is how uh packets are sent so I'm just going to give you like",
    "start": "273880",
    "end": "279800"
  },
  {
    "text": "a quick breakdown of how everything works so the difference between H2 and H3 is really the transport mechanism and",
    "start": "279800",
    "end": "285000"
  },
  {
    "text": "some other but just let's just keep it pretty simple right now H2 uses a binary header as opposed to just like",
    "start": "285000",
    "end": "291400"
  },
  {
    "text": "stringified whatever nonsense that that it was using so it says Hey like here's how long my length like here's how many",
    "start": "291400",
    "end": "297199"
  },
  {
    "text": "bytes you have to read here's how much this one having that information becomes very very uh becomes very very useful if",
    "start": "297199",
    "end": "304039"
  },
  {
    "text": "you want to go fast right if you know how big if you know where the missile is you also know where it isn't right so it's very very nice to be able to have",
    "start": "304039",
    "end": "310280"
  },
  {
    "text": "these kind of things so a binary type information and all that is just way better than having some sort of string encoding so fantastic I know strings are",
    "start": "310280",
    "end": "316479"
  },
  {
    "text": "B there too but doing just having to go through and look for new lines until you",
    "start": "316479",
    "end": "321560"
  },
  {
    "text": "get to the end of your headers is not necessarily a great way when I could tell you hey here's how many btes you",
    "start": "321560",
    "end": "327039"
  },
  {
    "text": "need for headers and you could just allocate that up front and boom you got headers into this bucket right like that is really really nice uh so hb2 just has",
    "start": "327039",
    "end": "334680"
  },
  {
    "text": "some like basic fancy things about that and it also has something called hpack which how hpack effectively Works which",
    "start": "334680",
    "end": "339840"
  },
  {
    "text": "is really really simple is that every time you see a header you can uh you can compact a header or a uh header end",
    "start": "339840",
    "end": "346680"
  },
  {
    "text": "value and I think you might be able to do as value as well I can't remember if that's true don't quote me on that last",
    "start": "346680",
    "end": "352280"
  },
  {
    "text": "one and so what it does is that header now becomes one bite it's like I'm",
    "start": "352280",
    "end": "357319"
  },
  {
    "text": "number one or not one bite it could be two bytes or four Byes I can't remember its exact representation but it's just like hey use value one for the header",
    "start": "357319",
    "end": "364840"
  },
  {
    "text": "key name use value one for the header end value key name right and so you can",
    "start": "364840",
    "end": "369880"
  },
  {
    "text": "get both of them key value I mean so you can get them both and so a huge giant one say your cookies that don't ever",
    "start": "369880",
    "end": "375000"
  },
  {
    "text": "change can be sent up as like a single one like hey it's number one so very very cool but one thing that hp2 uses is",
    "start": "375000",
    "end": "382440"
  },
  {
    "text": "TCP and a big problem about TCP is when you want to send a packet say you want to send a payload that up I got a fly on me hya that requires uh say five packets",
    "start": "382440",
    "end": "391400"
  },
  {
    "text": "to send because it's a big piece of information every time TCP that's four you get the idea every time TCP send",
    "start": "391400",
    "end": "397759"
  },
  {
    "text": "something over there has to be an acknowledgement that comes back to the client that says like say this is say",
    "start": "397759",
    "end": "404479"
  },
  {
    "text": "this one had sequence uh 69 you'd then act 70 meaning that 70 is",
    "start": "404479",
    "end": "411639"
  },
  {
    "text": "now valid to be sent and there's something called the sliding window which has like some amount of available things that need to be sent and you can",
    "start": "411639",
    "end": "418759"
  },
  {
    "text": "slowly slide down this window and so you could be you could imagine that if you send all of these things and you're",
    "start": "418759",
    "end": "424160"
  },
  {
    "text": "waiting on the ACT for 69 to happen it's the window can't slide like there's all",
    "start": "424160",
    "end": "429360"
  },
  {
    "text": "these kind of problems that happen that that involved whereas with UDP long as you have a proper framing algorithm",
    "start": "429360",
    "end": "435080"
  },
  {
    "text": "underneath it you can continue to just send packets as fast as possible and",
    "start": "435080",
    "end": "440400"
  },
  {
    "text": "then the server may say hey Knack negative acknowledgement I didn't get packet 69 and so then this thing can go",
    "start": "440400",
    "end": "447280"
  },
  {
    "text": "okay I'm going to go into my little handy bag here's pack at 69 here you go so there's no acing back you don't need",
    "start": "447280",
    "end": "454639"
  },
  {
    "text": "to you don't need to tell it you got information you tell it when you don't",
    "start": "454639",
    "end": "459759"
  },
  {
    "text": "get information so there you go that's that's like the big win with h uh H3",
    "start": "459759",
    "end": "464919"
  },
  {
    "text": "even H2 is much is much awesome because H2 allows for multi uh multiplexing over",
    "start": "464919",
    "end": "470240"
  },
  {
    "text": "a connection so that means you can actually send different bits of information so if you're downloading say 50 files at once H2 can send bits of all",
    "start": "470240",
    "end": "478120"
  },
  {
    "text": "50 files at once and so obviously UDP is fantastic a big",
    "start": "478120",
    "end": "483199"
  },
  {
    "text": "problem about UDP is there was packet loss there's no reliability built into uh UDP it's a stateless connection",
    "start": "483199",
    "end": "488560"
  },
  {
    "text": "there's no handshake there's no three-way handshake it's just like there's some packets right and you just",
    "start": "488560",
    "end": "493879"
  },
  {
    "text": "have to like do something with the packets it's like a guy running by you and throwing a deck of cards at your face and you have to get those deck of",
    "start": "493879",
    "end": "500800"
  },
  {
    "text": "cards it's just an interesting thing so there you go all right I imagine if you work for let's see hold on could be",
    "start": "500800",
    "end": "507000"
  },
  {
    "text": "built without pre-compilation JavaScript might finally be accessible the newcomers and fund once more no evidence suggesting tooling would uh decrease in",
    "start": "507000",
    "end": "513880"
  },
  {
    "text": "the future okay well this is not what I want this is not",
    "start": "513880",
    "end": "519200"
  },
  {
    "text": "the state okay the statement should not be the tools should decrease in the future I think the tools should decrease",
    "start": "519200",
    "end": "525160"
  },
  {
    "text": "and dude this guy is definitely dhh pilled you can just feel the dhh pilling going on hard right now UDP is great and",
    "start": "525160",
    "end": "531800"
  },
  {
    "text": "no one cares if you actually got the packet except you so deal with your own problems yeah no that's what makes UDP so good that's actually what makes UDP",
    "start": "531800",
    "end": "538000"
  },
  {
    "text": "so good is that exact thing I imagine if you work for Google that is true but I suspect most developers are not",
    "start": "538000",
    "end": "543200"
  },
  {
    "text": "professional working uh at a tech a giant but hobbyists doing their best in a conf confounding ecosystem of tooling",
    "start": "543200",
    "end": "549760"
  },
  {
    "text": "if we give up on shipping on their simple code directly to the browser what hope have they of putting down those",
    "start": "549760",
    "end": "554920"
  },
  {
    "text": "tools in the future it is pretty wild that there's that that this is the place we've we've gotten to so here we go okay",
    "start": "554920",
    "end": "561240"
  },
  {
    "text": "the large language model or the the large language model the language Evolution problems and what we can do about it who why how when blah blah blah",
    "start": "561240",
    "end": "568760"
  },
  {
    "text": "blah blah okay okay who's involved in language Evolution cool picture dog cool picture",
    "start": "568760",
    "end": "575959"
  },
  {
    "text": "you know what AI can't create this kind of beautiful art all right now this is a art only a human can create there we go",
    "start": "575959",
    "end": "582839"
  },
  {
    "text": "nice yeah best slide all right stakeholders developers front end yeah blah blah implementers spider monkey JSC",
    "start": "582839",
    "end": "589640"
  },
  {
    "text": "V8 yeah yeah yeah yeah yeah Babel yep okay there we go devs JavaScript",
    "start": "589640",
    "end": "595160"
  },
  {
    "text": "typescript Babel JavaScript engines users yep",
    "start": "595160",
    "end": "601200"
  },
  {
    "text": "yes let's see JS a special outsid everything tens of millions 25 millions of developers billions of users yep",
    "start": "601200",
    "end": "607880"
  },
  {
    "text": "billions billions I know all the users billions of them maintained uh independent implementations yep I just",
    "start": "607880",
    "end": "614320"
  },
  {
    "text": "want you to know these are the official slides that are going to make more tools",
    "start": "614320",
    "end": "619959"
  },
  {
    "text": "for your future okay we evolved the language to help developers we want developers to be",
    "start": "619959",
    "end": "625519"
  },
  {
    "text": "more productive by better matching their mental models FP oop type system enabling them to Simply Express new",
    "start": "625519",
    "end": "631079"
  },
  {
    "text": "domains ml Finance scientific Computing okay guys I personally think you can",
    "start": "631079",
    "end": "637639"
  },
  {
    "text": "drop almost all of that now internationalization I understand that could be a great this could be great in",
    "start": "637639",
    "end": "643560"
  },
  {
    "text": "the JavaScript world but maybe we don't need to do ml in JavaScript or Finance",
    "start": "643560",
    "end": "648920"
  },
  {
    "text": "in JavaScript scientific Computing in a ja in JavaScript like maybe we just don't need to do that maybe it's fair uh",
    "start": "648920",
    "end": "656760"
  },
  {
    "text": "let's say enable a new build uh let's see build new class of app with new capabilities weak ref shared",
    "start": "656760",
    "end": "662920"
  },
  {
    "text": "[Applause] memory that's all I got to say about JavaScript doing that letting them uh",
    "start": "663350",
    "end": "669279"
  },
  {
    "text": "use new interfaces wasm uh reifying common programming patterns they use uh simplifying their lives by removing",
    "start": "669279",
    "end": "675440"
  },
  {
    "text": "dependencies and build tools yes this last one there you go that's what you're supposed to do I'm pretty sure they just told us to",
    "start": "675440",
    "end": "682120"
  },
  {
    "text": "use rust yeah uh specifically how do we help developers by abstracting away complexity mental models new domains by",
    "start": "682120",
    "end": "688720"
  },
  {
    "text": "introducing new abilities explicit coord uh coordination abstracting let's see Han complexity moves is there anything",
    "start": "688720",
    "end": "694560"
  },
  {
    "text": "in here that's actually good what about the users uh security uh",
    "start": "694560",
    "end": "700920"
  },
  {
    "text": "prosaic as a shopper I want a securely shop and I don't want my money stolen scary as a person I don't let's see I",
    "start": "700920",
    "end": "708160"
  },
  {
    "text": "want to not be disappeared so that I'm so that I go on living my life wait what",
    "start": "708160",
    "end": "714240"
  },
  {
    "text": "is this saying that you're going to get murdered what does that even mean I want not I want to not be disappeared",
    "start": "714240",
    "end": "721200"
  },
  {
    "text": "appeared what it this was a real this was a real presentation bro gonna get",
    "start": "721200",
    "end": "728399"
  },
  {
    "text": "kidnapped by JavaScript I'm just saying it's",
    "start": "728399",
    "end": "733760"
  },
  {
    "text": "possible this came from Google by the way Google it's so if anyone ever feels like they have to you know that they",
    "start": "733760",
    "end": "739880"
  },
  {
    "text": "don't quite have what it takes to make it in the real world now we know you in",
    "start": "739880",
    "end": "747279"
  },
  {
    "text": "fact do cuz you probably wouldn't have said this uh yes Griffin you're right",
    "start": "747279",
    "end": "752639"
  },
  {
    "text": "that the tc39 does require a tinfoil hat as part of its uniform uh let's see performance as an impatient person I",
    "start": "752639",
    "end": "758399"
  },
  {
    "text": "want my apps to be fast so I don't have to reflect on my impatience as a character flaw this is a great sentence",
    "start": "758399",
    "end": "764680"
  },
  {
    "text": "that's fantastic stability uh as a user I want my apps to keep working so I can keep using them yeah app features yep oh",
    "start": "764680",
    "end": "771839"
  },
  {
    "text": "my goodness security almost always negatively impacted performance",
    "start": "771839",
    "end": "777480"
  },
  {
    "text": "generally neutral to negatively impacted stability sometimes negatively impactive app features positively impactive if",
    "start": "777480",
    "end": "782720"
  },
  {
    "text": "developers use the language features well",
    "start": "782720",
    "end": "788920"
  },
  {
    "text": "sometimes sometimes right you all of a sudden the next thing you know you got decorators available so you start using",
    "start": "788920",
    "end": "794760"
  },
  {
    "text": "decorators and then what happens well then you got decorators what happens",
    "start": "794760",
    "end": "801680"
  },
  {
    "text": "then then you have an app that's in incredible to debug screw decorators",
    "start": "801680",
    "end": "809519"
  },
  {
    "text": "got decorated new Legacy D decorators let's go I'll show you my decorator please",
    "start": "810079",
    "end": "817800"
  },
  {
    "text": "respond yeah dude nothing wrong with intermediate layers I love it I love proxy and",
    "start": "817920",
    "end": "825199"
  },
  {
    "text": "decorators you know what I want even every property to invoke functions which have functions which wrap functions okay",
    "start": "825199",
    "end": "832399"
  },
  {
    "text": "that's what I want I want the python experience cuz you know what it's not fun to have a language in which doesn't",
    "start": "832399",
    "end": "839920"
  },
  {
    "text": "have the python experience all right all right so a bunch of SV uh cves okay",
    "start": "839920",
    "end": "845839"
  },
  {
    "text": "security let's see security General complexity VMS are already very complex because of pressure to be fast yep feels",
    "start": "845839",
    "end": "853279"
  },
  {
    "text": "especially bad when complex features don't get adoption species big inss I used a lot of bigs I've Big Ed I've I've",
    "start": "853279",
    "end": "861360"
  },
  {
    "text": "big ined quite a few times okay big are a requirement new features",
    "start": "861360",
    "end": "869160"
  },
  {
    "text": "have guard rails that can't be optimized away design inherently slows for Network too many allocations are hard to",
    "start": "869160",
    "end": "875199"
  },
  {
    "text": "alide the iterator the the iterator implementation in JavaScript is",
    "start": "875199",
    "end": "881279"
  },
  {
    "text": "unfun why okay I'm going to admit something and I want you guys not to be upset can I say something and no one's",
    "start": "881279",
    "end": "886920"
  },
  {
    "text": "going to be upset here a lot of languages allow you to implement iterators but not all languages do it",
    "start": "886920",
    "end": "893600"
  },
  {
    "text": "equally go has the single-handed worst iterator pattern I have ever ever seen",
    "start": "893600",
    "end": "900000"
  },
  {
    "text": "it is groy okay their little range operations so you can iterate over a list is insanity then JavaScript is not",
    "start": "900000",
    "end": "908040"
  },
  {
    "text": "good either JavaScript not good not a big fan I don't love it but it's still better than go but",
    "start": "908040",
    "end": "917600"
  },
  {
    "text": "rust it's just so good I hate that rust does it the",
    "start": "919759",
    "end": "925720"
  },
  {
    "text": "best and I don't know anything about Elixir but I'm reliably told that Elixir is actually",
    "start": "925720",
    "end": "931440"
  },
  {
    "text": "awesome can you do some examples oh yeah yeah yeah yeah yeah",
    "start": "931440",
    "end": "937560"
  },
  {
    "text": "yeah so there we go this is how go does it this is an",
    "start": "937560",
    "end": "942880"
  },
  {
    "text": "inline one which is actually not all that bad now notice they use the word yield as a variable name so yield I is",
    "start": "942880",
    "end": "951800"
  },
  {
    "text": "actually invoking the function inbou but this would be a nicer version of that same function in case you want",
    "start": "951800",
    "end": "957680"
  },
  {
    "text": "to be a touch generic wait no this is not even any generics there's no generics in here it's just",
    "start": "957680",
    "end": "963959"
  },
  {
    "text": "confusing never mind there's no generics in this bad boy this just",
    "start": "963959",
    "end": "969000"
  },
  {
    "text": "sucks Funk Funk Funk Funk yield Funk",
    "start": "969000",
    "end": "974240"
  },
  {
    "text": "Funk Funk Funk Funk y five funks one",
    "start": "974240",
    "end": "981880"
  },
  {
    "text": "iteration yeah anyways go go just has it has it awful this isn't necessarily evil",
    "start": "981880",
    "end": "988000"
  },
  {
    "text": "of course it's bad do you know why it's bad it's because it turns your for Loops not into for Loops",
    "start": "988000",
    "end": "993959"
  },
  {
    "text": "but there's like function invocations and stuff like that it actually changes your code quite a bit whereas like with",
    "start": "993959",
    "end": "1000399"
  },
  {
    "text": "rust it doesn't do that this is It's there's actually like there's potent potential performance",
    "start": "1000399",
    "end": "1006519"
  },
  {
    "text": "issues issues that are going on here go as simple except for iterators",
    "start": "1006519",
    "end": "1012440"
  },
  {
    "text": "yes do I like Zig yes I do I do like Zig I actually like Zig a",
    "start": "1012440",
    "end": "1017560"
  },
  {
    "text": "lot all right let's keep on going poor",
    "start": "1017560",
    "end": "1023240"
  },
  {
    "text": "iterator uh we're very good with backwards compat uh yep that's actually one thing that's super awesome about",
    "start": "1023240",
    "end": "1028360"
  },
  {
    "text": "JavaScript JavaScript just keeps working it just keeps working uh new app",
    "start": "1028360",
    "end": "1033558"
  },
  {
    "text": "features let's see okay so they're just making the case that hey if we can go faster we'll be",
    "start": "1033559",
    "end": "1040199"
  },
  {
    "text": "able to ship more features aren't these negatives to the user offset by the benefit of the developers",
    "start": "1040199",
    "end": "1046798"
  },
  {
    "text": "no I mean clearly it's uh a polarity this is a saying not all wins for devs",
    "start": "1046799",
    "end": "1053320"
  },
  {
    "text": "are necessarily wins for users okay fair okay so I see I I think I see I",
    "start": "1053320",
    "end": "1059360"
  },
  {
    "text": "think I see what's happening here they're saying that hey uh security flaws it's complex okay so I get the",
    "start": "1059360",
    "end": "1065799"
  },
  {
    "text": "idea that we kind of feel their presentation their presentation is hey we build a bunch of stuff and then devs",
    "start": "1065799",
    "end": "1071720"
  },
  {
    "text": "sometimes don't even use the news features and so that's super disappointing it it causes security problems it makes us have to redo a",
    "start": "1071720",
    "end": "1078080"
  },
  {
    "text": "bunch of stuff it's making engines progressively more and more complex all the time and it doesn't benefit users",
    "start": "1078080",
    "end": "1085400"
  },
  {
    "text": "necessarily not all Dev benefits are user benefits not all user benefits are",
    "start": "1085400",
    "end": "1091159"
  },
  {
    "text": "Dev benefits okay so we get we get the idea right and so then I think the idea",
    "start": "1091159",
    "end": "1096520"
  },
  {
    "text": "oh dude look at that hell yeah hell yeah hell yeah where I think we are today where I think we should go doing the",
    "start": "1096520",
    "end": "1102600"
  },
  {
    "text": "right doing right by users oh that's interesting that's kind of an interesting way they put it oh I was",
    "start": "1102600",
    "end": "1109240"
  },
  {
    "text": "wondering if I could edit that is that they're indexing into trying to make",
    "start": "1109240",
    "end": "1114840"
  },
  {
    "text": "developers more productive but instead they want to make doing right by the users all right so",
    "start": "1114840",
    "end": "1121280"
  },
  {
    "text": "how do we get there so this is where let's talk about the Future stons Turn Around what engines want engines want to",
    "start": "1121280",
    "end": "1127919"
  },
  {
    "text": "ensure security performance and stability all right let's see now proposing a new process uh not proposing",
    "start": "1127919",
    "end": "1134080"
  },
  {
    "text": "we demote any features all right taxonomy of new language features synx okay where's the",
    "start": "1134080",
    "end": "1139520"
  },
  {
    "text": "where's the part where they do the third part where we get that niess right all right so here's the possib let's see",
    "start": "1139520",
    "end": "1145159"
  },
  {
    "text": "possible solution for syntax features developers embraced tooling another JS",
    "start": "1145159",
    "end": "1150400"
  },
  {
    "text": "let's see authoring JS is uh is now primarily iMed uh intermediated by tools typescript continues to grow in",
    "start": "1150400",
    "end": "1156360"
  },
  {
    "text": "popularity bable has 50 million downloads a week typescript use usage outweighs JavaScript in the state of the",
    "start": "1156360",
    "end": "1162080"
  },
  {
    "text": "survey yep survey data shows 55 to 99% of developers use",
    "start": "1162080",
    "end": "1167200"
  },
  {
    "text": "Frameworks all right there we go it's a win-win let's standardize the GS let's",
    "start": "1167200",
    "end": "1172880"
  },
  {
    "text": "see okay so JS zero is the language implemented by the engines JS sugar are the features that are most let's see",
    "start": "1172880",
    "end": "1178039"
  },
  {
    "text": "that must be compiled by tools to uh to js0 for developers JS equals js0 plus JS",
    "start": "1178039",
    "end": "1185480"
  },
  {
    "text": "sugar the naming sucks don't worry he already says yes the names could be better indulge them for now happy to bike shed later they'll bike shade bike",
    "start": "1185480",
    "end": "1192840"
  },
  {
    "text": "shed later don't worry about it don't worry we already have J we already have ES 2016 es 2017 es next",
    "start": "1192840",
    "end": "1203640"
  },
  {
    "text": "es5 don't worry we JavaScript already sucks at naming conventions anyways so",
    "start": "1203640",
    "end": "1209960"
  },
  {
    "text": "JS zero and JS sugar are disjoint so my guess is what it means by this is that there's a core set of features that the",
    "start": "1209960",
    "end": "1215919"
  },
  {
    "text": "engine runs on and this would be JS Zer and then there's going to be a set of features that are going to be like JS",
    "start": "1215919",
    "end": "1223760"
  },
  {
    "text": "sugar and this is just saying that if you this is effectively St that to be a",
    "start": "1223760",
    "end": "1230559"
  },
  {
    "text": "transpiler I can't believe I'm saying this phrase uh to transpile uh one",
    "start": "1230559",
    "end": "1236320"
  },
  {
    "text": "language into another language JS sugar into JS zero you must have these set of",
    "start": "1236320",
    "end": "1245480"
  },
  {
    "text": "features we're going to take your interpreted language and change your interpreted language there we go I can't believe I'm",
    "start": "1245480",
    "end": "1252799"
  },
  {
    "text": "saying that here we are here we are we're at this point we're at this point of the life right where's TS TS is",
    "start": "1252799",
    "end": "1260000"
  },
  {
    "text": "TS is even outside of this so TS will require you to probably be uh transported into JS uh JS sugar and then",
    "start": "1260000",
    "end": "1267880"
  },
  {
    "text": "JS sugar will then require you to go to JS zero uh that's what I assume unfortunately typescript tends to do",
    "start": "1267880",
    "end": "1274960"
  },
  {
    "text": "things not always the same way that uh is eventually used by the main by like the",
    "start": "1274960",
    "end": "1281880"
  },
  {
    "text": "main world so there probably will also be something called TS sugar",
    "start": "1281880",
    "end": "1287440"
  },
  {
    "text": "and ts0 so what we'll have is you'll have",
    "start": "1289200",
    "end": "1295520"
  },
  {
    "text": "actually the TS sugar to",
    "start": "1295520",
    "end": "1301400"
  },
  {
    "text": "ts0 to JS",
    "start": "1301400",
    "end": "1306320"
  },
  {
    "text": "sugar to js0 pipeline this is why Evan U Got",
    "start": "1307039",
    "end": "1315919"
  },
  {
    "text": "Paid $4 million $4.6 million to build a pipeline he",
    "start": "1315919",
    "end": "1323640"
  },
  {
    "text": "obviously he's a little privy he's a little privy to the in to to the inner workings and so they actually had the",
    "start": "1323640",
    "end": "1330120"
  },
  {
    "text": "higher private they had to they had to get the help of VCS and everything to",
    "start": "1330120",
    "end": "1335200"
  },
  {
    "text": "make this even remotely possible and at the end of all this TS sugar and Tso and",
    "start": "1335200",
    "end": "1340279"
  },
  {
    "text": "JS sugar and JSO you get diabetes your mom's so fast she probably has tries now",
    "start": "1340279",
    "end": "1347320"
  },
  {
    "text": "what's going to actually happen to be completely fair is that right now one thing that actually happens quite",
    "start": "1347320",
    "end": "1353440"
  },
  {
    "text": "frequently is there's actually something that there's experimental features these are going to be stage one and stage two",
    "start": "1353440",
    "end": "1360520"
  },
  {
    "text": "uh proposed proposal type items for the for uh tc39 so there's actually going to",
    "start": "1360520",
    "end": "1366120"
  },
  {
    "text": "probably be a place where TSO actually also includes stage one stage two which",
    "start": "1366120",
    "end": "1371960"
  },
  {
    "text": "will then be brought into this now my personal opinion is that",
    "start": "1371960",
    "end": "1377880"
  },
  {
    "text": "where this is going to break down a lot of things is that JS sugar",
    "start": "1377880",
    "end": "1383840"
  },
  {
    "text": "features are going to appear and they're going to be the transpilation to ajs Z is going to cause",
    "start": "1383840",
    "end": "1392600"
  },
  {
    "text": "either significant code bloat oh I just did that from the top",
    "start": "1392600",
    "end": "1398720"
  },
  {
    "text": "for you guys did you see that I wrote the B from the top that was pretty good A significant code bloat or two it's",
    "start": "1398720",
    "end": "1405200"
  },
  {
    "text": "going to be like a huge performance sync because it's just like there's just not",
    "start": "1405200",
    "end": "1410559"
  },
  {
    "text": "going to be a good way to be able to change it right there's just not going to be a good way or it's going to have a",
    "start": "1410559",
    "end": "1417080"
  },
  {
    "text": "really really hard time debugging because sometimes debugging can just be it I know there's",
    "start": "1417080",
    "end": "1423679"
  },
  {
    "text": "Source maps and I know all these things exist but like especially in the future of JS sugar versus JS zero you could",
    "start": "1423679",
    "end": "1431120"
  },
  {
    "text": "imagine that your Source map a single JS sugar operation could break down into 10",
    "start": "1431120",
    "end": "1436799"
  },
  {
    "text": "15 20 5 52 JSO operations and so then",
    "start": "1436799",
    "end": "1442320"
  },
  {
    "text": "all of a sudden you need to figure out okay when I'm stepping through this",
    "start": "1442320",
    "end": "1447760"
  },
  {
    "text": "particular JS sugar operation actually represents 15 and maybe the air is somewhere within this 15 why is this",
    "start": "1447760",
    "end": "1454600"
  },
  {
    "text": "thing airing in the middle of this operation I think there's going to be this whole",
    "start": "1454600",
    "end": "1460440"
  },
  {
    "text": "like difficulty why not run typescript directly in a browser this should be a TC 39's main proposal I don't think",
    "start": "1460440",
    "end": "1467279"
  },
  {
    "text": "they're going to do it I think there some reasons why not so then we just need godbolt for JS we're going to need godbolt for JS Griffin you are 100%",
    "start": "1467279",
    "end": "1474320"
  },
  {
    "text": "correct we just need godbolt for JavaScript I think that's that's actually the only reasonable answer",
    "start": "1474320",
    "end": "1479960"
  },
  {
    "text": "right now is we're going to need to know how these things break down into stuff right",
    "start": "1479960",
    "end": "1485880"
  },
  {
    "text": "this is g to be a crazy anti pattern where simple JS sugar produces gigantic outputs there that will exist at some point there's no way you can tell me",
    "start": "1485880",
    "end": "1493200"
  },
  {
    "text": "that won't exist especially when something like cuz you could imagine this is that cuz right now there's like",
    "start": "1493200",
    "end": "1498559"
  },
  {
    "text": "match statements right match statements aren't in The Proposal but you could imagine that now that they have these kind of multi-layered kind of items",
    "start": "1498559",
    "end": "1505720"
  },
  {
    "text": "perhaps the the staging and how features get accepted maybe that time to acceptance goes down a touch maybe",
    "start": "1505720",
    "end": "1512600"
  },
  {
    "text": "something kind of changes because they know that the engines don't get affected nearly as much by it so you could",
    "start": "1512600",
    "end": "1518320"
  },
  {
    "text": "imagine a world where you have a match statement and to be able to do your three matches right whatever I forget",
    "start": "1518320",
    "end": "1523600"
  },
  {
    "text": "what the syntax looks like right I forget how the the the syntax",
    "start": "1523600",
    "end": "1528840"
  },
  {
    "text": "looks like and all this when it comes to uh the JavaScript proposal you could imagine that this actually like this",
    "start": "1528840",
    "end": "1535080"
  },
  {
    "text": "just first thing right here could be a massive amount of if statements because if you're just like okay well I want",
    "start": "1535080",
    "end": "1541000"
  },
  {
    "text": "when x equals zero and Y is undefined right like it's going to be this whole",
    "start": "1541000",
    "end": "1546880"
  },
  {
    "text": "thing going on here that has to do a bunch of if checks and all that like there's like a lot there's like a lot",
    "start": "1546880",
    "end": "1552760"
  },
  {
    "text": "that could go on here and so you may not realize what you're transpiling",
    "start": "1552760",
    "end": "1559840"
  },
  {
    "text": "and so perhaps per and by the way perhaps this isn't a good example I'm just throwing I'm just throwing something out there so js0 is the new",
    "start": "1560279",
    "end": "1567399"
  },
  {
    "text": "assembly js0 my assumption is JS Z is just going to be JavaScript of a",
    "start": "1567399",
    "end": "1573720"
  },
  {
    "text": "specific flavor I my guess is what it means is that we don't want to implement things like",
    "start": "1573720",
    "end": "1579960"
  },
  {
    "text": "this therefore if we can call this ajs sugar you can you can reasonably",
    "start": "1579960",
    "end": "1585480"
  },
  {
    "text": "transform a match statement into job",
    "start": "1585480",
    "end": "1590240"
  },
  {
    "text": "script therefore why not just have the accepted JS sugar",
    "start": "1590600",
    "end": "1597960"
  },
  {
    "text": "set into like 100 lines of JS it could be 100 lines of JS uh JS zero would just be JS B code I I somehow don't think",
    "start": "1597960",
    "end": "1604520"
  },
  {
    "text": "it'll be JS SP code unless if that's uh somehow that",
    "start": "1604520",
    "end": "1610840"
  },
  {
    "text": "doesn't seem that doesn't seem like it that that's what's going to happen because B code B code",
    "start": "1610840",
    "end": "1615960"
  },
  {
    "text": "is if I'm not mistaken pretty inefficient to send across the wire maybe I'm incorrect on that one but I'm",
    "start": "1615960",
    "end": "1621799"
  },
  {
    "text": "pretty sure you generate a lot more buy code than you do JavaScript and so I I I",
    "start": "1621799",
    "end": "1627600"
  },
  {
    "text": "doubt that it'd be sending down a b code though that would be great because if you did send down so this would be this",
    "start": "1627600",
    "end": "1632919"
  },
  {
    "text": "is more like Hermes so if you've never looked into Hermes Hermes has this idea of static JavaScript where you actually do create the bik code for it and then",
    "start": "1632919",
    "end": "1639640"
  },
  {
    "text": "it can run optimizers it's actually one of the reasons why go is so much faster than than JavaScript is that you can do",
    "start": "1639640",
    "end": "1646000"
  },
  {
    "text": "a bunch of offline optimiz to everything how JavaScript you actually have to call",
    "start": "1646000",
    "end": "1651200"
  },
  {
    "text": "things multiple times before it even attempts to jit certain functions and if you also on top of that do extra stuff",
    "start": "1651200",
    "end": "1658640"
  },
  {
    "text": "if you change the arguments your function's too long there's all these reasons why it actually goes it takes",
    "start": "1658640",
    "end": "1664240"
  },
  {
    "text": "longer or it doesn't happen or you get unoptimized all sorts of things so yeah",
    "start": "1664240",
    "end": "1670200"
  },
  {
    "text": "this will be interesting this is I mean I I I am going to be real here for a second though I actually think this is pretty interesting thing I think this so",
    "start": "1670200",
    "end": "1677960"
  },
  {
    "text": "yeah Dax you say you don't you don't know how you feel about it the reality is we already live in this world now",
    "start": "1677960",
    "end": "1683279"
  },
  {
    "text": "right typescript decorators God knows what else people are using these days I'm not sure if proxies are officially a",
    "start": "1683279",
    "end": "1689679"
  },
  {
    "text": "part of the JavaScript API or not so it's like people already use a lot of these things to begin with so is it is",
    "start": "1689679",
    "end": "1696000"
  },
  {
    "text": "it even real or not real I don't know yeah I agree that's why I feel like this is just organizing the mess we've we're",
    "start": "1696000",
    "end": "1701760"
  },
  {
    "text": "already in yeah this is attempting to put to take the mess and draw draw these",
    "start": "1701760",
    "end": "1706880"
  },
  {
    "text": "things in yeah proxies are there okay yeah I just don't use proxies cuz proxies are effectively the devil I",
    "start": "1706880",
    "end": "1714519"
  },
  {
    "text": "understand that you want proxies to be useful but damn they are just a foot gun like I get there's there's plenty of",
    "start": "1714519",
    "end": "1719720"
  },
  {
    "text": "there's plenty of great programming language features that are like go-to is not bad go-to is not a bad thing and",
    "start": "1719720",
    "end": "1726840"
  },
  {
    "text": "there are times in which a go-to can be very fantastic generally speaking you should never use it because the 99% of",
    "start": "1726840",
    "end": "1733519"
  },
  {
    "text": "the time it's absolutely awful right it's like the the 99.999% of the time it's the terrible thing to use but there",
    "start": "1733519",
    "end": "1740000"
  },
  {
    "text": "is that one use case where goto is actually a pretty good uh little item why oh I've seen it used in interpret",
    "start": "1740000",
    "end": "1745039"
  },
  {
    "text": "interpreters and stuff like that a go-to is great for cleanups yep so if you're doing if you're if you're working with c",
    "start": "1745039",
    "end": "1750640"
  },
  {
    "text": "and you need to be able to do um some stuff with cleaning up memory it's really really great I mean what do you",
    "start": "1750640",
    "end": "1756279"
  },
  {
    "text": "think defer is defer is just a named go-to you know that right that's all defer that's all defer is is just a",
    "start": "1756279",
    "end": "1762200"
  },
  {
    "text": "named go-to when you go defer Funk like this is just pretty much just a",
    "start": "1762200",
    "end": "1768600"
  },
  {
    "text": "goto here we are I hope everybody uh is excited about the new proposal it sounds",
    "start": "1768600",
    "end": "1774679"
  },
  {
    "text": "like we got a lot of good things going on here you know JavaScript is winning every day uh JavaScript is just like the",
    "start": "1774679",
    "end": "1782080"
  },
  {
    "text": "stock market like if you go to like Netflix Netflix stock you'll see that Netflix stock is also up today just like",
    "start": "1782080",
    "end": "1788840"
  },
  {
    "text": "JavaScript tools you know every day is a winin day",
    "start": "1788840",
    "end": "1794240"
  },
  {
    "text": "when it comes to the ston market and JavaScript tools",
    "start": "1794240",
    "end": "1799440"
  },
  {
    "text": "a Jen",
    "start": "1799440",
    "end": "1802000"
  }
]