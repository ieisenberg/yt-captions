[
  {
    "text": "all right so let's watch the Jeremy",
    "start": "520",
    "end": "2520"
  },
  {
    "text": "Howard demo and then we're going to",
    "start": "2520",
    "end": "4200"
  },
  {
    "text": "watch the fireship version of it but",
    "start": "4200",
    "end": "7240"
  },
  {
    "text": "instead of tell all right by the way",
    "start": "7240",
    "end": "8320"
  },
  {
    "text": "we're learning about Mojo the brand new",
    "start": "8320",
    "end": "11120"
  },
  {
    "text": "super sexy very exciting programming",
    "start": "11120",
    "end": "13320"
  },
  {
    "text": "language that apparently is like 900,000",
    "start": "13320",
    "end": "15559"
  },
  {
    "text": "times faster than python what kind of",
    "start": "15559",
    "end": "17480"
  },
  {
    "text": " measurement are they doing how",
    "start": "17480",
    "end": "19600"
  },
  {
    "text": "much do you want to bet they're just",
    "start": "19600",
    "end": "20640"
  },
  {
    "text": "like sitting in a for Loop for one and",
    "start": "20640",
    "end": "22160"
  },
  {
    "text": "for Loop for the other and be like look",
    "start": "22160",
    "end": "24199"
  },
  {
    "text": "see python was terrible at Loops of",
    "start": "24199",
    "end": "26320"
  },
  {
    "text": "course Python's terrible at Loops",
    "start": "26320",
    "end": "27599"
  },
  {
    "text": "everybody knows Python's terrible at",
    "start": "27599",
    "end": "29000"
  },
  {
    "text": "loops you all this now I'd love to",
    "start": "29000",
    "end": "31359"
  },
  {
    "text": "introduce Jeremy Howard who will show",
    "start": "31359",
    "end": "33040"
  },
  {
    "text": "you how Mojo Works in practice all right",
    "start": "33040",
    "end": "35360"
  },
  {
    "text": "show me",
    "start": "35360",
    "end": "36719"
  },
  {
    "text": "Jeremy wow bad person thanks Chris you",
    "start": "36719",
    "end": "39760"
  },
  {
    "text": "know I realized it's been 30 years since",
    "start": "39760",
    "end": "42719"
  },
  {
    "text": "I first trained a neural network and to",
    "start": "42719",
    "end": "45280"
  },
  {
    "text": "be honest I haven't been that satisfied",
    "start": "45280",
    "end": "47320"
  },
  {
    "text": "with any of the languages that I've been",
    "start": "47320",
    "end": "49520"
  },
  {
    "text": "able to use throughout that time I don't",
    "start": "49520",
    "end": "52559"
  },
  {
    "text": "think this guy realizes okay so he's",
    "start": "52559",
    "end": "54640"
  },
  {
    "text": "over there not being satisfied but what",
    "start": "54640",
    "end": "57000"
  },
  {
    "text": "he little does he even know if you go to",
    "start": "57000",
    "end": "59480"
  },
  {
    "text": "GitHub",
    "start": "59480",
    "end": "60440"
  },
  {
    "text": "the primagen you will see the beginning",
    "start": "60440",
    "end": "63079"
  },
  {
    "text": "of my masters okay years ago back when I",
    "start": "63079",
    "end": "65840"
  },
  {
    "text": "was the shittiest programmer in the",
    "start": "65840",
    "end": "67320"
  },
  {
    "text": "world if you go there and you look at my",
    "start": "67320",
    "end": "69640"
  },
  {
    "text": "suppositories you will be able to find",
    "start": "69640",
    "end": "71840"
  },
  {
    "text": "everyone's favorite uh is it neural",
    "start": "71840",
    "end": "75119"
  },
  {
    "text": "neural JS yeah I created a trainable",
    "start": "75119",
    "end": "80240"
  },
  {
    "text": "Network okay look at that okay you see",
    "start": "80240",
    "end": "82400"
  },
  {
    "text": "Anis in there do you not see that look",
    "start": "82400",
    "end": "84799"
  },
  {
    "text": "at that look at that we got Anis",
    "start": "84799",
    "end": "86600"
  },
  {
    "text": "adaptive neural fuzzy inference systems",
    "start": "86600",
    "end": "88840"
  },
  {
    "text": "okay particle swarm optimizations and",
    "start": "88840",
    "end": "92040"
  },
  {
    "text": "Colony optimizations competitive",
    "start": "92040",
    "end": "94320"
  },
  {
    "text": "clustering okay we got probably got some",
    "start": "94320",
    "end": "96560"
  },
  {
    "text": "rbfs in there radial basis",
    "start": "96560",
    "end": "99759"
  },
  {
    "text": "functions see I didn't even know see",
    "start": "99759",
    "end": "102000"
  },
  {
    "text": "here's the deal I did this a decade ago",
    "start": "102000",
    "end": "104439"
  },
  {
    "text": "and I didn't know that JavaScript was",
    "start": "104439",
    "end": "106560"
  },
  {
    "text": "going to be used for everything think if",
    "start": "106560",
    "end": "108520"
  },
  {
    "text": "I would have known that the world was",
    "start": "108520",
    "end": "110000"
  },
  {
    "text": "being re Rewritten",
    "start": "110000",
    "end": "112439"
  },
  {
    "text": "in okay I didn't know okay I was brand",
    "start": "112439",
    "end": "115960"
  },
  {
    "text": "new I was a baby let me be a baby okay I",
    "start": "115960",
    "end": "119520"
  },
  {
    "text": "was a baby and Jeremy would have been",
    "start": "119520",
    "end": "121759"
  },
  {
    "text": "proud of me in fact I complained to",
    "start": "121759",
    "end": "124560"
  },
  {
    "text": "Chris about this when I first met him",
    "start": "124560",
    "end": "126759"
  },
  {
    "text": "years ago and Chris has been telling me",
    "start": "126759",
    "end": "129080"
  },
  {
    "text": "ever since don't worry Jeremy one day we",
    "start": "129080",
    "end": "132239"
  },
  {
    "text": "are going to fix this the thing that I",
    "start": "132239",
    "end": "134720"
  },
  {
    "text": "really want to fix is to see a language",
    "start": "134720",
    "end": "138200"
  },
  {
    "text": "where I can write performant flexible",
    "start": "138200",
    "end": "142400"
  },
  {
    "text": "hardcore code but it should also be",
    "start": "142400",
    "end": "145440"
  },
  {
    "text": "concise a lot of lot of young men all",
    "start": "145440",
    "end": "148160"
  },
  {
    "text": "about that hard cord coding okay I've",
    "start": "148160",
    "end": "150040"
  },
  {
    "text": "heard about it I've seen it on this okay",
    "start": "150040",
    "end": "152360"
  },
  {
    "text": "I've I've seen this I've seen this on",
    "start": "152360",
    "end": "155560"
  },
  {
    "text": "the internet there's some posts and it",
    "start": "155560",
    "end": "157280"
  },
  {
    "text": "makes me feel really uncomfortable I",
    "start": "157280",
    "end": "159560"
  },
  {
    "text": "don't like it I don't like it I don't",
    "start": "159560",
    "end": "161959"
  },
  {
    "text": "like it okay can we just go back to",
    "start": "161959",
    "end": "164560"
  },
  {
    "text": "standard softcore JavaScript programming",
    "start": "164560",
    "end": "167319"
  },
  {
    "text": "that's all I want to see okay this is",
    "start": "167319",
    "end": "169319"
  },
  {
    "text": "inappropriate all",
    "start": "169319",
    "end": "171599"
  },
  {
    "text": "right readable understandable code and I",
    "start": "171599",
    "end": "174760"
  },
  {
    "text": "think that actually Chris and his team",
    "start": "174760",
    "end": "177159"
  },
  {
    "text": "here have done it with this new language",
    "start": "177159",
    "end": "179120"
  },
  {
    "text": "called Mojo Mojo is actually AET of",
    "start": "179120",
    "end": "181680"
  },
  {
    "text": "python so I can use my python code",
    "start": "181680",
    "end": "185599"
  },
  {
    "text": "here did you just hear",
    "start": "185599",
    "end": "187879"
  },
  {
    "text": "that okay so I didn't I didn't see that",
    "start": "187879",
    "end": "190200"
  },
  {
    "text": "one coming the fact that you can just",
    "start": "190200",
    "end": "192519"
  },
  {
    "text": "use your python this",
    "start": "192519",
    "end": "195760"
  },
  {
    "text": "W uh that might that might actually make",
    "start": "195760",
    "end": "199200"
  },
  {
    "text": "this a very sellable language then right",
    "start": "199200",
    "end": "200959"
  },
  {
    "text": "if you could like theoretically if you",
    "start": "200959",
    "end": "202920"
  },
  {
    "text": "could instantaneously have your code be",
    "start": "202920",
    "end": "205599"
  },
  {
    "text": "faster and just write",
    "start": "205599",
    "end": "208760"
  },
  {
    "text": "python that's a lie okay that is a lie",
    "start": "208760",
    "end": "211799"
  },
  {
    "text": "okay just check check this out I'll show",
    "start": "211799",
    "end": "213519"
  },
  {
    "text": "you what I mean so here is a notebook",
    "start": "213519",
    "end": "215760"
  },
  {
    "text": "right this notebook is no normal",
    "start": "215760",
    "end": "217120"
  },
  {
    "text": "notebook this is a yeah I can see",
    "start": "217120",
    "end": "218640"
  },
  {
    "text": "because there's a percent sign then the",
    "start": "218640",
    "end": "219840"
  },
  {
    "text": "word python which makes me feel strange",
    "start": "219840",
    "end": "221239"
  },
  {
    "text": "on the inside mjo notebook",
    "start": "221239",
    "end": "223480"
  },
  {
    "text": "Ando by the way does anyone think of",
    "start": "223480",
    "end": "225760"
  },
  {
    "text": "Austin Powers like right now that's all",
    "start": "225760",
    "end": "228360"
  },
  {
    "text": "I keep hearing is Austin Powers in my",
    "start": "228360",
    "end": "230360"
  },
  {
    "text": "head and I like I can't get it out",
    "start": "230360",
    "end": "234439"
  },
  {
    "text": "demonstration because this is the most",
    "start": "234439",
    "end": "235799"
  },
  {
    "text": "fundamental foundational algorithm in",
    "start": "235799",
    "end": "237840"
  },
  {
    "text": "deep learning we're going to look at",
    "start": "237840",
    "end": "238799"
  },
  {
    "text": "matrix multiplication of course Mojo's",
    "start": "238799",
    "end": "240519"
  },
  {
    "text": "got its own we don't need to write our",
    "start": "240519",
    "end": "241720"
  },
  {
    "text": "own but we're just showing you we can",
    "start": "241720",
    "end": "242959"
  },
  {
    "text": "actually write our own high performance",
    "start": "242959",
    "end": "244720"
  },
  {
    "text": "matrix",
    "start": "244720",
    "end": "245799"
  },
  {
    "text": "multiplication isn't there like a better",
    "start": "245799",
    "end": "247760"
  },
  {
    "text": "version of matrix",
    "start": "247760",
    "end": "249879"
  },
  {
    "text": "multiplication right isn't there some",
    "start": "249879",
    "end": "251680"
  },
  {
    "text": "new one that's come out that's not like",
    "start": "251680",
    "end": "254040"
  },
  {
    "text": "this isn't there some sort of sweet",
    "start": "254040",
    "end": "256239"
  },
  {
    "text": "algorithm that somebody made anyways I",
    "start": "256239",
    "end": "259519"
  },
  {
    "text": "start by comparing to python that's very",
    "start": "259519",
    "end": "260880"
  },
  {
    "text": "easy to do because just type Python and",
    "start": "260880",
    "end": "263040"
  },
  {
    "text": "also I assume there must be is there",
    "start": "263040",
    "end": "265600"
  },
  {
    "text": "some sweet sweet simd operations that",
    "start": "265600",
    "end": "268400"
  },
  {
    "text": "can be done with reading a bunch of of",
    "start": "268400",
    "end": "270440"
  },
  {
    "text": "data and then making only a singular",
    "start": "270440",
    "end": "272039"
  },
  {
    "text": "multiplication I don't know how any of",
    "start": "272039",
    "end": "273360"
  },
  {
    "text": "this stuff I don't know how this stuff",
    "start": "273360",
    "end": "274520"
  },
  {
    "text": "works I have no idea I you know I'm not",
    "start": "274520",
    "end": "276160"
  },
  {
    "text": "a machine level Enthusiast I'm too",
    "start": "276160",
    "end": "278280"
  },
  {
    "text": "stupid for and then it actually going to",
    "start": "278280",
    "end": "279800"
  },
  {
    "text": "run it on the C python interpreter so",
    "start": "279800",
    "end": "281639"
  },
  {
    "text": "here's our basic Matrix mation go across",
    "start": "281639",
    "end": "283759"
  },
  {
    "text": "the rows and the columns multiply",
    "start": "283759",
    "end": "285120"
  },
  {
    "text": "together add it up let's write a little",
    "start": "285120",
    "end": "287120"
  },
  {
    "text": "Matrix and a little Benchmark and try it",
    "start": "287120",
    "end": "289240"
  },
  {
    "text": "out and oh dear 0.005 gig flops that's",
    "start": "289240",
    "end": "292600"
  },
  {
    "text": "not great how do we speed it up well",
    "start": "292600",
    "end": "294560"
  },
  {
    "text": "actually believe it or not we just take",
    "start": "294560",
    "end": "295800"
  },
  {
    "text": "that code we copy and paste it into a",
    "start": "295800",
    "end": "297440"
  },
  {
    "text": "new cell without the percent python and",
    "start": "297440",
    "end": "299960"
  },
  {
    "text": "because moo is a superet of",
    "start": "299960",
    "end": "303520"
  },
  {
    "text": "python oh the percent python literally",
    "start": "303680",
    "end": "307120"
  },
  {
    "text": "runs",
    "start": "307120",
    "end": "308960"
  },
  {
    "text": "python he did say gigaflops Okay",
    "start": "308960",
    "end": "311560"
  },
  {
    "text": "personally I prefer the Suma flops but",
    "start": "311560",
    "end": "314199"
  },
  {
    "text": "some people you know they're honestly",
    "start": "314199",
    "end": "316960"
  },
  {
    "text": "not as you know they're not really into",
    "start": "316960",
    "end": "318840"
  },
  {
    "text": "the flops so they don't know about that",
    "start": "318840",
    "end": "321800"
  },
  {
    "text": "this runs too but this times it runs in",
    "start": "321800",
    "end": "323680"
  },
  {
    "text": "Mojo not in Python and immediately we",
    "start": "323680",
    "end": "326520"
  },
  {
    "text": "get an 8 and a half time speed up now",
    "start": "326520",
    "end": "329479"
  },
  {
    "text": "the a lot of performance left on the",
    "start": "329479",
    "end": "331199"
  },
  {
    "text": "table here and to go faster we're going",
    "start": "331199",
    "end": "332960"
  },
  {
    "text": "to want a nice fast compact Matrix Tye",
    "start": "332960",
    "end": "335960"
  },
  {
    "text": "okay of course we can use the one that",
    "start": "335960",
    "end": "337240"
  },
  {
    "text": "Mo provides for us but just to show you",
    "start": "337240",
    "end": "339000"
  },
  {
    "text": "that we can here we've implemented it",
    "start": "339000",
    "end": "340560"
  },
  {
    "text": "from scratch so we're actually creating",
    "start": "340560",
    "end": "342000"
  },
  {
    "text": "a stract here this is nice compact in",
    "start": "342000",
    "end": "343800"
  },
  {
    "text": "memory and it's got the normal things we",
    "start": "343800",
    "end": "345360"
  },
  {
    "text": "used to float 32s okay probably should",
    "start": "345360",
    "end": "348120"
  },
  {
    "text": "have chosen a better float huh right",
    "start": "348120",
    "end": "351160"
  },
  {
    "text": "isn't it if you choose a float 32 what",
    "start": "351160",
    "end": "353280"
  },
  {
    "text": "actually happens underneath the hood",
    "start": "353280",
    "end": "354479"
  },
  {
    "text": "isn't it like more instructions if",
    "start": "354479",
    "end": "355919"
  },
  {
    "text": "you're running on a 64-bit I forgive me",
    "start": "355919",
    "end": "358360"
  },
  {
    "text": "if I'm ignorant on this one but in my",
    "start": "358360",
    "end": "360160"
  },
  {
    "text": "head to do a 32-bit operation you have",
    "start": "360160",
    "end": "363080"
  },
  {
    "text": "to take your read line right and and",
    "start": "363080",
    "end": "366400"
  },
  {
    "text": "actually like bit mask out your",
    "start": "366400",
    "end": "370000"
  },
  {
    "text": "data if I'm correct I don't know I've",
    "start": "370000",
    "end": "372319"
  },
  {
    "text": "only theorized it in my head I haven't",
    "start": "372319",
    "end": "375479"
  },
  {
    "text": "actually you",
    "start": "375479",
    "end": "377280"
  },
  {
    "text": "know I haven't actually tried is that",
    "start": "377280",
    "end": "380680"
  },
  {
    "text": "true with floats I don't even know by",
    "start": "380680",
    "end": "382400"
  },
  {
    "text": "the way this text is unreadable it's",
    "start": "382400",
    "end": "384560"
  },
  {
    "text": "unreadable and I have no idea what",
    "start": "384560",
    "end": "385800"
  },
  {
    "text": "you're saying other than yeah I do look",
    "start": "385800",
    "end": "387360"
  },
  {
    "text": "good I agree dude I totally age",
    "start": "387360",
    "end": "390280"
  },
  {
    "text": "this mustache is wonderful stuff you",
    "start": "390280",
    "end": "392080"
  },
  {
    "text": "don't expect to see in Python like",
    "start": "392080",
    "end": "394400"
  },
  {
    "text": "Alec and as you can see the whole thing",
    "start": "394400",
    "end": "396240"
  },
  {
    "text": "fits in about a page of code a screen of",
    "start": "396240",
    "end": "398160"
  },
  {
    "text": "code so that's our Matrix and so to use",
    "start": "398160",
    "end": "400759"
  },
  {
    "text": "it we take copy and paste the code again",
    "start": "400759",
    "end": "402440"
  },
  {
    "text": "but this time just added type annotation",
    "start": "402440",
    "end": "404039"
  },
  {
    "text": "these are matrices and now it's a 300",
    "start": "404039",
    "end": "406479"
  },
  {
    "text": "times speed up Suddenly things are",
    "start": "406479",
    "end": "408000"
  },
  {
    "text": "looking pretty amazing but there's a lot",
    "start": "408000",
    "end": "409560"
  },
  {
    "text": "more we can do we can look at doing if",
    "start": "409560",
    "end": "412080"
  },
  {
    "text": "our CPU supports it say eight oh damn",
    "start": "412080",
    "end": "414440"
  },
  {
    "text": "we're oh damn we're about to go full Sim",
    "start": "414440",
    "end": "417080"
  },
  {
    "text": "these nuts on them um elements at a time",
    "start": "417080",
    "end": "419879"
  },
  {
    "text": "using simd instructions it's a bit of a",
    "start": "419879",
    "end": "422440"
  },
  {
    "text": "mess to do that manually there's quite a",
    "start": "422440",
    "end": "423720"
  },
  {
    "text": "bit of code but we can do it manually",
    "start": "423720",
    "end": "425599"
  },
  {
    "text": "I've always I've always wanted to play",
    "start": "425599",
    "end": "427479"
  },
  {
    "text": "with Sim D's Nuts you know what I mean",
    "start": "427479",
    "end": "428960"
  },
  {
    "text": "like I've always wanted to play with",
    "start": "428960",
    "end": "430080"
  },
  {
    "text": "them I've never actually got my hands",
    "start": "430080",
    "end": "431680"
  },
  {
    "text": "around them and I've never tried to do",
    "start": "431680",
    "end": "433520"
  },
  {
    "text": "something you know what I mean have any",
    "start": "433520",
    "end": "435639"
  },
  {
    "text": "of you tried to play with",
    "start": "435639",
    "end": "439039"
  },
  {
    "text": "them because that'd be great that's like",
    "start": "439800",
    "end": "442599"
  },
  {
    "text": "that is like what I want in life right",
    "start": "442599",
    "end": "444919"
  },
  {
    "text": "now",
    "start": "444919",
    "end": "447919"
  },
  {
    "text": "maybe that's something we can do in Zig",
    "start": "449800",
    "end": "451919"
  },
  {
    "text": "a 570 time speed up but better still we",
    "start": "451919",
    "end": "454560"
  },
  {
    "text": "can just call vectorize so just write a",
    "start": "454560",
    "end": "456520"
  },
  {
    "text": "product operation cor vectorize and",
    "start": "456520",
    "end": "458400"
  },
  {
    "text": "it'll automatically handle it on simd",
    "start": "458400",
    "end": "460039"
  },
  {
    "text": "for us with the same performance beat up",
    "start": "460039",
    "end": "462400"
  },
  {
    "text": "so that's going to be happening in the",
    "start": "462400",
    "end": "463440"
  },
  {
    "text": "innermost we're going to be using simd",
    "start": "463440",
    "end": "465199"
  },
  {
    "text": "and in the out um what if we just call",
    "start": "465199",
    "end": "467759"
  },
  {
    "text": "paralyze this is something we can do and",
    "start": "467759",
    "end": "469360"
  },
  {
    "text": "now suddenly the rows are going to be",
    "start": "469360",
    "end": "470479"
  },
  {
    "text": "done on separate cores for a 2,000 time",
    "start": "470479",
    "end": "472919"
  },
  {
    "text": "speed up so we've only got four calls",
    "start": "472919",
    "end": "474360"
  },
  {
    "text": "going on here so it's not",
    "start": "474360",
    "end": "476120"
  },
  {
    "text": "huge how does parallel eyes work is this",
    "start": "476120",
    "end": "478599"
  },
  {
    "text": "some sort of is this some sort of like",
    "start": "478599",
    "end": "480960"
  },
  {
    "text": "lightweight green thread that just",
    "start": "480960",
    "end": "482639"
  },
  {
    "text": "happens that does something that rust",
    "start": "482639",
    "end": "485159"
  },
  {
    "text": "literally could never do is this what",
    "start": "485159",
    "end": "486919"
  },
  {
    "text": "rust cannot",
    "start": "486919",
    "end": "489680"
  },
  {
    "text": "do",
    "start": "491879",
    "end": "493639"
  },
  {
    "text": "no",
    "start": "493639",
    "end": "496639"
  },
  {
    "text": "okay no okay well rust really sucks that",
    "start": "499000",
    "end": "502319"
  },
  {
    "text": "like if you have one place if you have",
    "start": "502319",
    "end": "503759"
  },
  {
    "text": "one buffer of memory and you want to",
    "start": "503759",
    "end": "505039"
  },
  {
    "text": "write to it with a bunch of threads",
    "start": "505039",
    "end": "506280"
  },
  {
    "text": "going super duper fast but you know that",
    "start": "506280",
    "end": "508240"
  },
  {
    "text": "your threads aren't going to stomp on it",
    "start": "508240",
    "end": "509520"
  },
  {
    "text": "each other like you can't really do that",
    "start": "509520",
    "end": "511080"
  },
  {
    "text": "in",
    "start": "511080",
    "end": "512360"
  },
  {
    "text": "Rust easily if you got morees it'll be",
    "start": "512360",
    "end": "515560"
  },
  {
    "text": "much bigger this is something okay hold",
    "start": "515560",
    "end": "517159"
  },
  {
    "text": "on you tell me hold on then then how",
    "start": "517159",
    "end": "518518"
  },
  {
    "text": "does this run you just told me this",
    "start": "518519",
    "end": "520440"
  },
  {
    "text": "wasn't green threads but it says it's",
    "start": "520440",
    "end": "521680"
  },
  {
    "text": "running on these different chords what",
    "start": "521680",
    "end": "523000"
  },
  {
    "text": "kind what kind of what is it running on",
    "start": "523000",
    "end": "524760"
  },
  {
    "text": "what is it doing here I assume it's not",
    "start": "524760",
    "end": "526040"
  },
  {
    "text": "spawning actual processes because actual",
    "start": "526040",
    "end": "528040"
  },
  {
    "text": "processes are probably too big",
    "start": "528040",
    "end": "531639"
  },
  {
    "text": "right you can do with lifetimes in Rust",
    "start": "532000",
    "end": "534560"
  },
  {
    "text": "no you cannot can you do that in Rust",
    "start": "534560",
    "end": "536640"
  },
  {
    "text": "can you actually split really I should",
    "start": "536640",
    "end": "539480"
  },
  {
    "text": "should try that huh an actual OS",
    "start": "539480",
    "end": "544040"
  },
  {
    "text": "thread oh okay abely can't do with",
    "start": "544040",
    "end": "547760"
  },
  {
    "text": "python you can do some very very basic",
    "start": "547760",
    "end": "549920"
  },
  {
    "text": "parallel processing glad creating",
    "start": "549920",
    "end": "552839"
  },
  {
    "text": "separate processes and having to move",
    "start": "552839",
    "end": "554360"
  },
  {
    "text": "memory around and it's pretty nasty",
    "start": "554360",
    "end": "556240"
  },
  {
    "text": "there's all kinds of complexities around",
    "start": "556240",
    "end": "557480"
  },
  {
    "text": "the global interpreter lock and so forth",
    "start": "557480",
    "end": "558920"
  },
  {
    "text": "as well this is how easy it is in Mojo",
    "start": "558920",
    "end": "561000"
  },
  {
    "text": "and so suddenly we've got a 2,000 times",
    "start": "561000",
    "end": "562519"
  },
  {
    "text": "faster matrix multiplication written",
    "start": "562519",
    "end": "563959"
  },
  {
    "text": "from scratch we can also make sure that",
    "start": "563959",
    "end": "566480"
  },
  {
    "text": "we're using the cache really effectively",
    "start": "566480",
    "end": "568240"
  },
  {
    "text": "by doing tiling so doing a few bits of",
    "start": "568240",
    "end": "570079"
  },
  {
    "text": "memory that's close to each other at a",
    "start": "570079",
    "end": "571399"
  },
  {
    "text": "time and reusing them tiling is as easy",
    "start": "571399",
    "end": "573519"
  },
  {
    "text": "as creating this little tiling function",
    "start": "573519",
    "end": "575240"
  },
  {
    "text": "and then calling it to tile our function",
    "start": "575240",
    "end": "578839"
  },
  {
    "text": "so now we've got something that is",
    "start": "578839",
    "end": "579800"
  },
  {
    "text": "paralyzed tiled and vectorized for 2,170",
    "start": "579800",
    "end": "583399"
  },
  {
    "text": "times beat up over python T tiling is",
    "start": "583399",
    "end": "585600"
  },
  {
    "text": "new to me okay I understand two out of",
    "start": "585600",
    "end": "587760"
  },
  {
    "text": "three of those words which I feel pretty",
    "start": "587760",
    "end": "589240"
  },
  {
    "text": "good about because if you understand two",
    "start": "589240",
    "end": "590920"
  },
  {
    "text": "out of three like you can pass a lot of",
    "start": "590920",
    "end": "592920"
  },
  {
    "text": "colleges you know D's earn degrees in",
    "start": "592920",
    "end": "594880"
  },
  {
    "text": "some states and so that's like there's",
    "start": "594880",
    "end": "596519"
  },
  {
    "text": "definitely a w there somewhere you know",
    "start": "596519",
    "end": "598040"
  },
  {
    "text": "what I mean we can also add unrolling um",
    "start": "598040",
    "end": "601200"
  },
  {
    "text": "for 2200 speed up so vectorize unroll is",
    "start": "601200",
    "end": "604200"
  },
  {
    "text": "already built into Mojo so we don't even",
    "start": "604200",
    "end": "605920"
  },
  {
    "text": "have to write that now there's a lot of",
    "start": "605920",
    "end": "608360"
  },
  {
    "text": "complexity here though like what tile",
    "start": "608360",
    "end": "609920"
  },
  {
    "text": "size do we use how many processors what",
    "start": "609920",
    "end": "612360"
  },
  {
    "text": "Cindy size all this mess to worry about",
    "start": "612360",
    "end": "615399"
  },
  {
    "text": "a lot of people struggle with their simd",
    "start": "615399",
    "end": "617680"
  },
  {
    "text": "size I get it you know a lot of Us wish",
    "start": "617680",
    "end": "619839"
  },
  {
    "text": "it was we could go bigger but you know",
    "start": "619839",
    "end": "622560"
  },
  {
    "text": "there's limits to Nature and each",
    "start": "622560",
    "end": "624600"
  },
  {
    "text": "different person you deploy to is going",
    "start": "624600",
    "end": "626079"
  },
  {
    "text": "to have different versions of these",
    "start": "626079",
    "end": "627040"
  },
  {
    "text": "they'll have different memory they're",
    "start": "627040",
    "end": "628160"
  },
  {
    "text": "going to have different CPU use and so",
    "start": "628160",
    "end": "630160"
  },
  {
    "text": "forth no worries look at what you can do",
    "start": "630160",
    "end": "632880"
  },
  {
    "text": "we can create an autotuned version by",
    "start": "632880",
    "end": "634720"
  },
  {
    "text": "simply calling autotune so if we want an",
    "start": "634720",
    "end": "636560"
  },
  {
    "text": "autotune tile size we just say hey Mojo",
    "start": "636560",
    "end": "638800"
  },
  {
    "text": "try these different tile sizes for us",
    "start": "638800",
    "end": "640480"
  },
  {
    "text": "figure out which one's the fastest",
    "start": "640480",
    "end": "642040"
  },
  {
    "text": "compile the fastest version for us cach",
    "start": "642040",
    "end": "644200"
  },
  {
    "text": "it for this individual computer and then",
    "start": "644200",
    "end": "646279"
  },
  {
    "text": "use that paralyzed tiled unrolled",
    "start": "646279",
    "end": "649880"
  },
  {
    "text": "vectorized for a 4,164 times speed up so",
    "start": "649880",
    "end": "653440"
  },
  {
    "text": "this is pretty remarkable right now it's",
    "start": "653440",
    "end": "655680"
  },
  {
    "text": "not just linear algebra stuff we can do",
    "start": "655680",
    "end": "657800"
  },
  {
    "text": "really iterative stuff did my man Kanye",
    "start": "657800",
    "end": "659839"
  },
  {
    "text": "West just get into this what the hell",
    "start": "659839",
    "end": "661839"
  },
  {
    "text": "just happened right there oh my goodness",
    "start": "661839",
    "end": "665680"
  },
  {
    "text": "like calculating mandle BR so we could",
    "start": "665680",
    "end": "667760"
  },
  {
    "text": "create our own complex number type and",
    "start": "667760",
    "end": "669279"
  },
  {
    "text": "it's going to be a stract so again it's",
    "start": "669279",
    "end": "670360"
  },
  {
    "text": "going to be compact in memory it looks",
    "start": "670360",
    "end": "672040"
  },
  {
    "text": "like absolutely standard python as you",
    "start": "672040",
    "end": "674279"
  },
  {
    "text": "can see multiplying subtracting using",
    "start": "674279",
    "end": "676079"
  },
  {
    "text": "the operations and to create the mandle",
    "start": "676079",
    "end": "678639"
  },
  {
    "text": "Brock kernel we just take the classic",
    "start": "678639",
    "end": "680360"
  },
  {
    "text": "mandle set equation knows about that um",
    "start": "680360",
    "end": "683680"
  },
  {
    "text": "pop it in Python here and then we can",
    "start": "683680",
    "end": "685880"
  },
  {
    "text": "call it a bunch of times in a loop um",
    "start": "685880",
    "end": "688480"
  },
  {
    "text": "returning it the time compute the mandle",
    "start": "688480",
    "end": "690720"
  },
  {
    "text": "BR set that's all very well and good did",
    "start": "690720",
    "end": "692880"
  },
  {
    "text": "it work be nice to look at it so how",
    "start": "692880",
    "end": "695040"
  },
  {
    "text": "would you look at it would be nice to",
    "start": "695040",
    "end": "696160"
  },
  {
    "text": "use M plot lib yeah oh no worries every",
    "start": "696160",
    "end": "698800"
  },
  {
    "text": "single python Library Works in Mojo and",
    "start": "698800",
    "end": "701880"
  },
  {
    "text": "you can import it check this out plot is",
    "start": "701880",
    "end": "703720"
  },
  {
    "text": "import the python module map plot Li NP",
    "start": "703720",
    "end": "706399"
  },
  {
    "text": "is import the module nump and the rest",
    "start": "706399",
    "end": "708560"
  },
  {
    "text": "of it this is actually Mojo code but",
    "start": "708560",
    "end": "711440"
  },
  {
    "text": "it's also python code and it works and I",
    "start": "711440",
    "end": "716160"
  },
  {
    "text": "always hated rust anyways honestly to",
    "start": "716160",
    "end": "718560"
  },
  {
    "text": "tell you the truth I never liked rust um",
    "start": "718560",
    "end": "721040"
  },
  {
    "text": "I think I've always thought python was",
    "start": "721040",
    "end": "722839"
  },
  {
    "text": "the best you know python really is just",
    "start": "722839",
    "end": "725560"
  },
  {
    "text": "the best huh you know I think so too",
    "start": "725560",
    "end": "728920"
  },
  {
    "text": "I've always felt that way and this",
    "start": "728920",
    "end": "730519"
  },
  {
    "text": "obviously just confirms all the things",
    "start": "730519",
    "end": "732200"
  },
  {
    "text": "I've been telling you guys for years at",
    "start": "732200",
    "end": "734040"
  },
  {
    "text": "this point and so really happy about",
    "start": "734040",
    "end": "737360"
  },
  {
    "text": "this really happy I don't know if you",
    "start": "737360",
    "end": "739959"
  },
  {
    "text": "remember but Chris actually said the",
    "start": "739959",
    "end": "741079"
  },
  {
    "text": "Mander BR set is 35,000 times faster",
    "start": "741079",
    "end": "743279"
  },
  {
    "text": "than Python and that's because we can",
    "start": "743279",
    "end": "744800"
  },
  {
    "text": "also do an even faster version where",
    "start": "744800",
    "end": "746600"
  },
  {
    "text": "we're handling it with simy and we can",
    "start": "746600",
    "end": "748519"
  },
  {
    "text": "actually create the kind of iterative",
    "start": "748519",
    "end": "750399"
  },
  {
    "text": "algorithm that you just can aune this",
    "start": "750399",
    "end": "753800"
  },
  {
    "text": "even with the help of stuff like num",
    "start": "753800",
    "end": "756160"
  },
  {
    "text": "this is something which is really unique",
    "start": "756160",
    "end": "757880"
  },
  {
    "text": "to Mojo so we now have something here",
    "start": "757880",
    "end": "760880"
  },
  {
    "text": "which is incredibly flexible incredibly",
    "start": "760880",
    "end": "763079"
  },
  {
    "text": "fast can utilize the hardware you have",
    "start": "763079",
    "end": "764880"
  },
  {
    "text": "no matter what it is and is really",
    "start": "764880",
    "end": "767440"
  },
  {
    "text": "understandable to python programmers",
    "start": "767440",
    "end": "769079"
  },
  {
    "text": "like you and me I think finally we're at",
    "start": "769079",
    "end": "771040"
  },
  {
    "text": "a point where we are going to have",
    "start": "771040",
    "end": "772320"
  },
  {
    "text": "something where I actually hey real talk",
    "start": "772320",
    "end": "775800"
  },
  {
    "text": "though that was very incredible watching",
    "start": "775800",
    "end": "778880"
  },
  {
    "text": "that",
    "start": "778880",
    "end": "780639"
  },
  {
    "text": "right like that was really really",
    "start": "780639",
    "end": "783040"
  },
  {
    "text": "incredible",
    "start": "783040",
    "end": "786040"
  },
  {
    "text": "um it was really incredible you know I I",
    "start": "786240",
    "end": "789920"
  },
  {
    "text": "like to dog you know you know me me and",
    "start": "789920",
    "end": "792920"
  },
  {
    "text": "the all me and all my homies hate python",
    "start": "792920",
    "end": "795079"
  },
  {
    "text": "I get that but that was really",
    "start": "795079",
    "end": "796320"
  },
  {
    "text": "incredible like that the fact that you",
    "start": "796320",
    "end": "799079"
  },
  {
    "text": "can use all of the libraries that you",
    "start": "799079",
    "end": "801720"
  },
  {
    "text": "normally can use with python or at least",
    "start": "801720",
    "end": "804160"
  },
  {
    "text": "the ones that they showed now whether",
    "start": "804160",
    "end": "805639"
  },
  {
    "text": "it's true universally whether some",
    "start": "805639",
    "end": "807160"
  },
  {
    "text": "things that really suck about it whether",
    "start": "807160",
    "end": "808639"
  },
  {
    "text": "the blah blah blah blah blah blah I get",
    "start": "808639",
    "end": "810360"
  },
  {
    "text": "that and it's relatively a fresh",
    "start": "810360",
    "end": "811959"
  },
  {
    "text": "language if they come up with a good",
    "start": "811959",
    "end": "813279"
  },
  {
    "text": "package manager a good build Tool uh",
    "start": "813279",
    "end": "815519"
  },
  {
    "text": "some good linting and then even some I",
    "start": "815519",
    "end": "817279"
  },
  {
    "text": "saw some type definitions in there like",
    "start": "817279",
    "end": "819199"
  },
  {
    "text": "long as you can throw all those things",
    "start": "819199",
    "end": "820639"
  },
  {
    "text": "in there and you can really focus on",
    "start": "820639",
    "end": "822639"
  },
  {
    "text": "that kind of like that developer",
    "start": "822639",
    "end": "824040"
  },
  {
    "text": "integration notice I don't use the terb",
    "start": "824040",
    "end": "825760"
  },
  {
    "text": "developer experience uh long as you can",
    "start": "825760",
    "end": "828079"
  },
  {
    "text": "have those things and you go really hard",
    "start": "828079",
    "end": "830160"
  },
  {
    "text": "on the LSP you can make an exceptionally",
    "start": "830160",
    "end": "833160"
  },
  {
    "text": "successful language I think I think that",
    "start": "833160",
    "end": "834920"
  },
  {
    "text": "this has a lot of opportunity but again",
    "start": "834920",
    "end": "837639"
  },
  {
    "text": "you know what opportunity does it have",
    "start": "837639",
    "end": "840800"
  },
  {
    "text": "Beyond just machine",
    "start": "840800",
    "end": "842880"
  },
  {
    "text": "learning I don't know again I don't know",
    "start": "842880",
    "end": "846519"
  },
  {
    "text": "uh I I could see myself using this for",
    "start": "846519",
    "end": "848160"
  },
  {
    "text": "all my visualizations right because I",
    "start": "848160",
    "end": "849600"
  },
  {
    "text": "have to do a lot of visualizations I",
    "start": "849600",
    "end": "850880"
  },
  {
    "text": "have to do a lot of that crap you know",
    "start": "850880",
    "end": "852399"
  },
  {
    "text": "and it's really annoying to do all that",
    "start": "852399",
    "end": "853839"
  },
  {
    "text": "crap uh it would be really sweet if this",
    "start": "853839",
    "end": "856199"
  },
  {
    "text": "just works it' also be sweet does this",
    "start": "856199",
    "end": "858000"
  },
  {
    "text": "thing does this does mojo produce an",
    "start": "858000",
    "end": "860399"
  },
  {
    "text": "executable does it have a lot of cross",
    "start": "860399",
    "end": "862560"
  },
  {
    "text": "compilation stuff is it is it easy to",
    "start": "862560",
    "end": "865320"
  },
  {
    "text": "use or is it still more like python like",
    "start": "865320",
    "end": "868560"
  },
  {
    "text": "is it more interpretting I don't know I",
    "start": "868560",
    "end": "871240"
  },
  {
    "text": "would just like a faster python",
    "start": "871240",
    "end": "872399"
  },
  {
    "text": "apparently this is just a faster",
    "start": "872399",
    "end": "874360"
  },
  {
    "text": "python anyways this is super cool rock",
    "start": "874360",
    "end": "877079"
  },
  {
    "text": "on I like this and now the fireship",
    "start": "877079",
    "end": "879519"
  },
  {
    "text": "version it is May 4th 2023 and you",
    "start": "879519",
    "end": "882880"
  },
  {
    "text": "watching the code report python is a",
    "start": "882880",
    "end": "884800"
  },
  {
    "text": "wonderful language for productive",
    "start": "884800",
    "end": "886440"
  },
  {
    "text": "programming but it has there a good meme",
    "start": "886440",
    "end": "888639"
  },
  {
    "text": "right there one big problem it's too",
    "start": "888639",
    "end": "890759"
  },
  {
    "text": "slow and going slow means you'll get",
    "start": "890759",
    "end": "892399"
  },
  {
    "text": "made fun of by the rust and C++ Chads of",
    "start": "892399",
    "end": "894759"
  },
  {
    "text": "the world but the tables are about to",
    "start": "894759",
    "end": "896199"
  },
  {
    "text": "turn thanks to a brand new programming",
    "start": "896199",
    "end": "897959"
  },
  {
    "text": "language called Mojo a super set of",
    "start": "897959",
    "end": "899959"
  },
  {
    "text": "python that's not just two times faster",
    "start": "899959",
    "end": "902160"
  },
  {
    "text": "not 10 times faster but up to 35,000",
    "start": "902160",
    "end": "905000"
  },
  {
    "text": "times faster than you're we okay well I",
    "start": "905000",
    "end": "908120"
  },
  {
    "text": "didn't mean to pause it right here",
    "start": "908120",
    "end": "911320"
  },
  {
    "text": "but that number should just hurt us a",
    "start": "911480",
    "end": "913720"
  },
  {
    "text": "little bit right this should just hurt",
    "start": "913720",
    "end": "916079"
  },
  {
    "text": "us a little bit and now we do know that",
    "start": "916079",
    "end": "917680"
  },
  {
    "text": "it's not a it is a super set but it",
    "start": "917680",
    "end": "919560"
  },
  {
    "text": "doesn't work with all the pythons yet",
    "start": "919560",
    "end": "921759"
  },
  {
    "text": "but that should just hurt us a little",
    "start": "921759",
    "end": "922880"
  },
  {
    "text": "bit that this could even exist that this",
    "start": "922880",
    "end": "924720"
  },
  {
    "text": "is a real thing that happens in a real",
    "start": "924720",
    "end": "926759"
  },
  {
    "text": "language then your grandpa's python and",
    "start": "926759",
    "end": "929120"
  },
  {
    "text": "that's a huge deal because Python's the",
    "start": "929120",
    "end": "930880"
  },
  {
    "text": "dominant language for artificial",
    "start": "930880",
    "end": "932399"
  },
  {
    "text": "intelligence but behind the curtain whoa",
    "start": "932399",
    "end": "934800"
  },
  {
    "text": "whoa go back there why are those",
    "start": "934800",
    "end": "937120"
  },
  {
    "text": "machines looking at the keyboard okay",
    "start": "937120",
    "end": "939199"
  },
  {
    "text": "you would expect the machines to not",
    "start": "939199",
    "end": "941360"
  },
  {
    "text": "look at keyboards look at this because",
    "start": "941360",
    "end": "942480"
  },
  {
    "text": "Python's the dominant language for",
    "start": "942480",
    "end": "944000"
  },
  {
    "text": "artificial intelligence we just looked",
    "start": "944000",
    "end": "945639"
  },
  {
    "text": "at the keyboard no no way people no way",
    "start": "945639",
    "end": "950880"
  },
  {
    "text": "no this is okay you know what Skynet",
    "start": "950880",
    "end": "952600"
  },
  {
    "text": "can't happen if they have to look at a",
    "start": "952600",
    "end": "953720"
  },
  {
    "text": "keyboard okay if robots literally come",
    "start": "953720",
    "end": "956160"
  },
  {
    "text": "out and and they go like this you know I",
    "start": "956160",
    "end": "959160"
  },
  {
    "text": "spend more time thinking than actually",
    "start": "959160",
    "end": "961440"
  },
  {
    "text": "typing so being a good typer doesn't",
    "start": "961440",
    "end": "963759"
  },
  {
    "text": "actually influence my programmer",
    "start": "963759",
    "end": "967279"
  },
  {
    "text": "speed I would I would literally realize",
    "start": "968680",
    "end": "971079"
  },
  {
    "text": "that there's no possible way Skynet",
    "start": "971079",
    "end": "972759"
  },
  {
    "text": "can't actually exist robots are just as",
    "start": "972759",
    "end": "975360"
  },
  {
    "text": "stupid as people but behind the curtain",
    "start": "975360",
    "end": "977920"
  },
  {
    "text": "anything that needs to go fast is",
    "start": "977920",
    "end": "979199"
  },
  {
    "text": "written in C or C++ in today's video",
    "start": "979199",
    "end": "981600"
  },
  {
    "text": "we'll take Mojo for a spin but first",
    "start": "981600",
    "end": "983639"
  },
  {
    "text": "here are five things that you need to",
    "start": "983639",
    "end": "984920"
  },
  {
    "text": "know about it one this is not some",
    "start": "984920",
    "end": "986839"
  },
  {
    "text": "random guy side project on GitHub but",
    "start": "986839",
    "end": "989000"
  },
  {
    "text": "rather it comes from a company founded",
    "start": "989000",
    "end": "990440"
  },
  {
    "text": "by chrris lner the guy who created the",
    "start": "990440",
    "end": "992199"
  },
  {
    "text": "Swift programming language and the llvm",
    "start": "992199",
    "end": "994319"
  },
  {
    "text": "compiler tool chain if anybody could fix",
    "start": "994319",
    "end": "996240"
  },
  {
    "text": "Python's problems it's him and if you",
    "start": "996240",
    "end": "997959"
  },
  {
    "text": "have no idea what llbm is check out this",
    "start": "997959",
    "end": "1000079"
  },
  {
    "text": "video two it's a language designed for",
    "start": "1000079",
    "end": "1002040"
  },
  {
    "text": "programming on AI Hardware like gpus",
    "start": "1002040",
    "end": "1004279"
  },
  {
    "text": "running Cuda and other accelerators it",
    "start": "1004279",
    "end": "1006480"
  },
  {
    "text": "achieves this by leveraging multi-level",
    "start": "1006480",
    "end": "1008279"
  },
  {
    "text": "intermediate representation to scale to",
    "start": "1008279",
    "end": "1010319"
  },
  {
    "text": "Exotic Hardware types without a those",
    "start": "1010319",
    "end": "1013360"
  },
  {
    "text": "are a lot of words and when he says a",
    "start": "1013360",
    "end": "1015839"
  },
  {
    "text": "lot of words at me like that it makes me",
    "start": "1015839",
    "end": "1018560"
  },
  {
    "text": "feel stupid and when I feel stupid I",
    "start": "1018560",
    "end": "1020519"
  },
  {
    "text": "just feel like attacking him so Fire",
    "start": "1020519",
    "end": "1023079"
  },
  {
    "text": "Ship um you know here's the deal Fire",
    "start": "1023079",
    "end": "1025720"
  },
  {
    "text": "Ship okay first off Fire Ship you know",
    "start": "1025720",
    "end": "1029839"
  },
  {
    "text": "earlier earlier on Twitter when you",
    "start": "1029839",
    "end": "1032199"
  },
  {
    "text": "asked what should my next video be I",
    "start": "1032199",
    "end": "1034160"
  },
  {
    "text": "kindly reported a video and you said the",
    "start": "1034160",
    "end": "1037558"
  },
  {
    "text": "top liked one will win well guess what I",
    "start": "1037559",
    "end": "1039760"
  },
  {
    "text": "did that and you didn't make a video so",
    "start": "1039760",
    "end": "1042720"
  },
  {
    "text": "now I'm giving you an another response",
    "start": "1042720",
    "end": "1045918"
  },
  {
    "text": "right here again for you to make it",
    "start": "1045919",
    "end": "1049200"
  },
  {
    "text": "please make a WinRAR video okay I'm",
    "start": "1049200",
    "end": "1051919"
  },
  {
    "text": "still waiting on WinRAR I want you to",
    "start": "1051919",
    "end": "1054919"
  },
  {
    "text": "make WinRAR and",
    "start": "1054919",
    "end": "1057600"
  },
  {
    "text": "second I'm G to be back in Arizona if",
    "start": "1057600",
    "end": "1059760"
  },
  {
    "text": "you want to you know grab dinner again",
    "start": "1059760",
    "end": "1061640"
  },
  {
    "text": "just just",
    "start": "1061640",
    "end": "1062710"
  },
  {
    "text": "[Laughter]",
    "start": "1062710",
    "end": "1066429"
  },
  {
    "text": "wondering ton of complexity and it even",
    "start": "1067080",
    "end": "1069520"
  },
  {
    "text": "has built-in autotuning to optimize your",
    "start": "1069520",
    "end": "1071520"
  },
  {
    "text": "code for your Target Hardware three it's",
    "start": "1071520",
    "end": "1073640"
  },
  {
    "text": "designed yeah that autotune thing was",
    "start": "1073640",
    "end": "1075600"
  },
  {
    "text": "crazy it was the craziest thing I've",
    "start": "1075600",
    "end": "1078039"
  },
  {
    "text": "ever seen in my life time that you can",
    "start": "1078039",
    "end": "1079360"
  },
  {
    "text": "just be like autotune and how does it",
    "start": "1079360",
    "end": "1081320"
  },
  {
    "text": "make that decision at compile time is",
    "start": "1081320",
    "end": "1083120"
  },
  {
    "text": "that is there some sort of like reading",
    "start": "1083120",
    "end": "1084919"
  },
  {
    "text": "speed that's related to the hardware",
    "start": "1084919",
    "end": "1086440"
  },
  {
    "text": "you're on so thus it's able to make a",
    "start": "1086440",
    "end": "1088080"
  },
  {
    "text": "good decision why do you even have to",
    "start": "1088080",
    "end": "1091679"
  },
  {
    "text": "uh why do you even have",
    "start": "1091679",
    "end": "1095159"
  },
  {
    "text": "to you know put what sizes you",
    "start": "1095159",
    "end": "1100240"
  },
  {
    "text": "want as a superet of python in the same",
    "start": "1100240",
    "end": "1103000"
  },
  {
    "text": "way typescript is a super set of",
    "start": "1103000",
    "end": "1104520"
  },
  {
    "text": "JavaScript so you don't need to I am",
    "start": "1104520",
    "end": "1106200"
  },
  {
    "text": "almost ratioing dhh yeah he respond",
    "start": "1106200",
    "end": "1109440"
  },
  {
    "text": "because he is a coward you know here's",
    "start": "1109440",
    "end": "1112039"
  },
  {
    "text": "the deal if you make a tweet and it gets",
    "start": "1112039",
    "end": "1113960"
  },
  {
    "text": "a th likes and someone asks you a",
    "start": "1113960",
    "end": "1115720"
  },
  {
    "text": "question and gets one like you're",
    "start": "1115720",
    "end": "1116960"
  },
  {
    "text": "probably not going to see it real talk",
    "start": "1116960",
    "end": "1118320"
  },
  {
    "text": "not trying to be mean that's just how it",
    "start": "1118320",
    "end": "1119559"
  },
  {
    "text": "works but if you make a tweet that gets",
    "start": "1119559",
    "end": "1121200"
  },
  {
    "text": "a th likes and someone's reply to you",
    "start": "1121200",
    "end": "1123200"
  },
  {
    "text": "gets 800 likes you s you read it and you",
    "start": "1123200",
    "end": "1126200"
  },
  {
    "text": "didn't respond cuz you're a coward learn",
    "start": "1126200",
    "end": "1128000"
  },
  {
    "text": "another language to take advantage of it",
    "start": "1128000",
    "end": "1129799"
  },
  {
    "text": "and this is unique compared to other",
    "start": "1129799",
    "end": "1131320"
  },
  {
    "text": "modern systems languages like rust Zig",
    "start": "1131320",
    "end": "1133960"
  },
  {
    "text": "Nim and so on which would have a higher",
    "start": "1133960",
    "end": "1135640"
  },
  {
    "text": "learning curve for existing python",
    "start": "1135640",
    "end": "1137320"
  },
  {
    "text": "programmers it does have a bunch of",
    "start": "1137320",
    "end": "1138840"
  },
  {
    "text": "features on top of python like VAR and",
    "start": "1138840",
    "end": "1140799"
  },
  {
    "text": "let declarations and strs but the base",
    "start": "1140799",
    "end": "1143000"
  },
  {
    "text": "language is fully compatible with python",
    "start": "1143000",
    "end": "1145000"
  },
  {
    "text": "and it can also is that how it does the",
    "start": "1145000",
    "end": "1146280"
  },
  {
    "text": "speeda I didn't see that I didn't see",
    "start": "1146280",
    "end": "1147640"
  },
  {
    "text": "the struct part is that how they're",
    "start": "1147640",
    "end": "1149280"
  },
  {
    "text": "doing part of the speed up is that",
    "start": "1149280",
    "end": "1150400"
  },
  {
    "text": "they're not doing python crazy classes",
    "start": "1150400",
    "end": "1152080"
  },
  {
    "text": "but instead they're just doing like",
    "start": "1152080",
    "end": "1155559"
  },
  {
    "text": "uh strs underneath the hood uh and yes I",
    "start": "1155559",
    "end": "1159600"
  },
  {
    "text": "believe Mojo will finally be able to",
    "start": "1159600",
    "end": "1162080"
  },
  {
    "text": "tell me how big my dick is in btes in",
    "start": "1162080",
    "end": "1165159"
  },
  {
    "text": "Python I believe it I truly believe it",
    "start": "1165159",
    "end": "1168400"
  },
  {
    "text": "with the python ecosystem which means",
    "start": "1168400",
    "end": "1170120"
  },
  {
    "text": "you can still use your favorite",
    "start": "1170120",
    "end": "1171159"
  },
  {
    "text": "libraries like numpy pandas Etc four it",
    "start": "1171159",
    "end": "1174320"
  },
  {
    "text": "adds strong type checking to the",
    "start": "1174320",
    "end": "1175640"
  },
  {
    "text": "language you can still use Dynamic types",
    "start": "1175640",
    "end": "1177640"
  },
  {
    "text": "if you prefer but static types are",
    "start": "1177640",
    "end": "1179320"
  },
  {
    "text": "essential for optimized performance and",
    "start": "1179320",
    "end": "1181559"
  },
  {
    "text": "checking for memory management I",
    "start": "1181559",
    "end": "1183080"
  },
  {
    "text": "actually think that's one of the coolest",
    "start": "1183080",
    "end": "1184159"
  },
  {
    "text": "things ever to me that's like what makes",
    "start": "1184159",
    "end": "1186400"
  },
  {
    "text": "this so you know because I I I don't I'm",
    "start": "1186400",
    "end": "1188400"
  },
  {
    "text": "not going to learn Mojo real talk I'm",
    "start": "1188400",
    "end": "1189679"
  },
  {
    "text": "not going to learn Mojo but something",
    "start": "1189679",
    "end": "1191720"
  },
  {
    "text": "that makes me really excited about Mojo",
    "start": "1191720",
    "end": "1193520"
  },
  {
    "text": "is the fact that types have implications",
    "start": "1193520",
    "end": "1196280"
  },
  {
    "text": "in how the thing runs where",
    "start": "1196280",
    "end": "1199240"
  },
  {
    "text": "as in typescript it doesn't the only",
    "start": "1199240",
    "end": "1203039"
  },
  {
    "text": "thing it accidentally gives you is uh",
    "start": "1203039",
    "end": "1205840"
  },
  {
    "text": "you know monomorphic optimizations right",
    "start": "1205840",
    "end": "1208200"
  },
  {
    "text": "you define your in you know you define",
    "start": "1208200",
    "end": "1210400"
  },
  {
    "text": "your in type by putting Types on it and",
    "start": "1210400",
    "end": "1212919"
  },
  {
    "text": "you'll accidentally only call a function",
    "start": "1212919",
    "end": "1215159"
  },
  {
    "text": "with a specific uh set of types right so",
    "start": "1215159",
    "end": "1218159"
  },
  {
    "text": "you'll accidentally jit it but this",
    "start": "1218159",
    "end": "1221120"
  },
  {
    "text": "thing actually being able to be like oh",
    "start": "1221120",
    "end": "1222559"
  },
  {
    "text": "it only takes in this one type or we can",
    "start": "1222559",
    "end": "1224440"
  },
  {
    "text": "make it special for this that's super",
    "start": "1224440",
    "end": "1225880"
  },
  {
    "text": "cool it has an ownership system and",
    "start": "1225880",
    "end": "1228760"
  },
  {
    "text": "cheer similar to rust and also supports",
    "start": "1228760",
    "end": "1231080"
  },
  {
    "text": "manual memory management with pointer it",
    "start": "1231080",
    "end": "1232799"
  },
  {
    "text": "has a borrow Checker and ownership but",
    "start": "1232799",
    "end": "1234559"
  },
  {
    "text": "is it shitty like rust or is it actually",
    "start": "1234559",
    "end": "1236440"
  },
  {
    "text": "like super fast is like C++ it's a",
    "start": "1236440",
    "end": "1239360"
  },
  {
    "text": "pragmatic language that gives you safety",
    "start": "1239360",
    "end": "1241240"
  },
  {
    "text": "but also the flexibility to be unsafe",
    "start": "1241240",
    "end": "1243120"
  },
  {
    "text": "when needed now the final thing to know",
    "start": "1243120",
    "end": "1244960"
  },
  {
    "text": "is that currently it's not available to",
    "start": "1244960",
    "end": "1246440"
  },
  {
    "text": "the public it's still in very",
    "start": "1246440",
    "end": "1248760"
  },
  {
    "text": "early wait hold on are you telling me we",
    "start": "1248760",
    "end": "1250919"
  },
  {
    "text": "just got done watching multiple videos",
    "start": "1250919",
    "end": "1252480"
  },
  {
    "text": "about a language I can't even use all",
    "start": "1252480",
    "end": "1254960"
  },
  {
    "text": "right Mr latner with your big your big",
    "start": "1254960",
    "end": "1258640"
  },
  {
    "text": "big claims on performance your big",
    "start": "1258640",
    "end": "1260480"
  },
  {
    "text": "claims on all these things and yet you",
    "start": "1260480",
    "end": "1263159"
  },
  {
    "text": "showed us a for Loop which we all know",
    "start": "1263159",
    "end": "1265880"
  },
  {
    "text": "is the slowest in Python you make these",
    "start": "1265880",
    "end": "1268000"
  },
  {
    "text": "claims of millions of percents faster",
    "start": "1268000",
    "end": "1270960"
  },
  {
    "text": "yet we can't even look at",
    "start": "1270960",
    "end": "1273480"
  },
  {
    "text": "it right",
    "start": "1273480",
    "end": "1275480"
  },
  {
    "text": "now Mojo is kind of like Vare to me okay",
    "start": "1275480",
    "end": "1279840"
  },
  {
    "text": "I want you to know that right now",
    "start": "1279840",
    "end": "1281320"
  },
  {
    "text": "development it will be open sourced in",
    "start": "1281320",
    "end": "1283000"
  },
  {
    "text": "the future but currently there's a weit",
    "start": "1283000",
    "end": "1284640"
  },
  {
    "text": "list to try it out I was lucky enough to",
    "start": "1284640",
    "end": "1286279"
  },
  {
    "text": "get Early Access so let's fire it up you",
    "start": "1286279",
    "end": "1288840"
  },
  {
    "text": "can create a file ending in moojo orire",
    "start": "1288840",
    "end": "1291559"
  },
  {
    "text": "emoji that's a huge advantage over",
    "start": "1291559",
    "end": "1293200"
  },
  {
    "text": "python which doesn't allow you to name",
    "start": "1293200",
    "end": "1294600"
  },
  {
    "text": "your files in snake but we can also run",
    "start": "1294600",
    "end": "1296760"
  },
  {
    "text": "the code in a Jupiter notebook where it",
    "start": "1296760",
    "end": "1298480"
  },
  {
    "text": "behaves like an interpreted language",
    "start": "1298480",
    "end": "1300159"
  },
  {
    "text": "here we have a matrix multiplication",
    "start": "1300159",
    "end": "1301720"
  },
  {
    "text": "demo that computes a DOT product to",
    "start": "1301720",
    "end": "1303559"
  },
  {
    "text": "demonstrate the crazy performance gains",
    "start": "1303559",
    "end": "1305080"
  },
  {
    "text": "we get with Mojo first it benchmarks a",
    "start": "1305080",
    "end": "1307159"
  },
  {
    "text": "basic function in Python I I do say that",
    "start": "1307159",
    "end": "1309039"
  },
  {
    "text": "this feels like a cheating version you",
    "start": "1309039",
    "end": "1310919"
  },
  {
    "text": "found the worst case thing that python",
    "start": "1310919",
    "end": "1313039"
  },
  {
    "text": "do does which is loops and then by",
    "start": "1313039",
    "end": "1316279"
  },
  {
    "text": "literally choosing the worst possible",
    "start": "1316279",
    "end": "1318120"
  },
  {
    "text": "answer which is",
    "start": "1318120",
    "end": "1319799"
  },
  {
    "text": "Loops you I I do feel like it's a little",
    "start": "1319799",
    "end": "1323960"
  },
  {
    "text": "like this test is a little weak python",
    "start": "1323960",
    "end": "1327360"
  },
  {
    "text": "then by simply importing that code into",
    "start": "1327360",
    "end": "1329120"
  },
  {
    "text": "Mojo it's executed 14 times faster with",
    "start": "1329120",
    "end": "1331799"
  },
  {
    "text": "no modifications to the code it was",
    "start": "1331799",
    "end": "1333520"
  },
  {
    "text": "actually eight times faster if you",
    "start": "1333520",
    "end": "1334840"
  },
  {
    "text": "remember the previous video Fire Ship",
    "start": "1334840",
    "end": "1336559"
  },
  {
    "text": "which you didn't remember the previous",
    "start": "1336559",
    "end": "1338120"
  },
  {
    "text": "video okay okay we all remember this",
    "start": "1338120",
    "end": "1340600"
  },
  {
    "text": "part where he jumps in here instead of",
    "start": "1340600",
    "end": "1342159"
  },
  {
    "text": "telling you but this notebook is no",
    "start": "1342159",
    "end": "1343400"
  },
  {
    "text": "normal notebook this",
    "start": "1343400",
    "end": "1345760"
  },
  {
    "text": "is without the percent nice fast",
    "start": "1345760",
    "end": "1349360"
  },
  {
    "text": "8.59 times faster okay some of us were",
    "start": "1349360",
    "end": "1352240"
  },
  {
    "text": "paying attention to Mr lner or whoever",
    "start": "1352240",
    "end": "1354080"
  },
  {
    "text": "that person was that was speaking Jeremy",
    "start": "1354080",
    "end": "1356039"
  },
  {
    "text": "Howard all",
    "start": "1356039",
    "end": "1358799"
  },
  {
    "text": "right Mr fireship but we're only just",
    "start": "1358799",
    "end": "1362039"
  },
  {
    "text": "getting started we can further optimize",
    "start": "1362039",
    "end": "1363960"
  },
  {
    "text": "this code by adding types to the python",
    "start": "1363960",
    "end": "1365840"
  },
  {
    "text": "implementation Mojo allows us to do that",
    "start": "1365840",
    "end": "1368120"
  },
  {
    "text": "with its buil-in struct keyword a struct",
    "start": "1368120",
    "end": "1370400"
  },
  {
    "text": "is very similar to a python class but",
    "start": "1370400",
    "end": "1372559"
  },
  {
    "text": "strs are static unlike classes which are",
    "start": "1372559",
    "end": "1374600"
  },
  {
    "text": "Dynamic inside the stru we also have",
    "start": "1374600",
    "end": "1376559"
  },
  {
    "text": "keywords like VAR and let which def find",
    "start": "1376559",
    "end": "1378960"
  },
  {
    "text": "mutable and immutable variables and",
    "start": "1378960",
    "end": "1381320"
  },
  {
    "text": "death is",
    "start": "1381320",
    "end": "1382360"
  },
  {
    "text": "replaced can we just",
    "start": "1382360",
    "end": "1384880"
  },
  {
    "text": "stop with VAR let and const being",
    "start": "1384880",
    "end": "1388400"
  },
  {
    "text": "different in every language",
    "start": "1388400",
    "end": "1390919"
  },
  {
    "text": "like this language VAR obviously means",
    "start": "1390919",
    "end": "1394320"
  },
  {
    "text": "change let means no change in typescript",
    "start": "1394320",
    "end": "1398760"
  },
  {
    "text": "let means change and con means you can",
    "start": "1398760",
    "end": "1403240"
  },
  {
    "text": "still change it it's okay we're",
    "start": "1403240",
    "end": "1405440"
  },
  {
    "text": "typescript we love you very much go",
    "start": "1405440",
    "end": "1407120"
  },
  {
    "text": "ahead and do it and in Rust you got let",
    "start": "1407120",
    "end": "1409919"
  },
  {
    "text": "and let mute",
    "start": "1409919",
    "end": "1413519"
  },
  {
    "text": "very this whole thing is just really",
    "start": "1413760",
    "end": "1416279"
  },
  {
    "text": "it's really frustrating with FN which is",
    "start": "1416279",
    "end": "1418720"
  },
  {
    "text": "a stricter type of function also notice",
    "start": "1418720",
    "end": "1420679"
  },
  {
    "text": "single instruction multiple data which",
    "start": "1420679",
    "end": "1422360"
  },
  {
    "text": "is a built-in type that represents a",
    "start": "1422360",
    "end": "1424039"
  },
  {
    "text": "vector where a single instruction can be",
    "start": "1424039",
    "end": "1425880"
  },
  {
    "text": "executed across multiple elements in",
    "start": "1425880",
    "end": "1427840"
  },
  {
    "text": "parallel on the underlying Hardware once",
    "start": "1427840",
    "end": "1429760"
  },
  {
    "text": "we have this struct we can use it as a",
    "start": "1429760",
    "end": "1431720"
  },
  {
    "text": "type in the python implementation then",
    "start": "1431720",
    "end": "1433679"
  },
  {
    "text": "when we Benchmark the code again we get",
    "start": "1433679",
    "end": "1435200"
  },
  {
    "text": "a ridiculous 500x performance boost but",
    "start": "1435200",
    "end": "1437760"
  },
  {
    "text": "we're still not happy yet in the Inner",
    "start": "1437760",
    "end": "1439640"
  },
  {
    "text": "Loop we can query the vector width",
    "start": "1439640",
    "end": "1441200"
  },
  {
    "text": "instead of hardcoding it and that gives",
    "start": "1441200",
    "end": "1442880"
  },
  {
    "text": "us a THX game that's nothing compared to",
    "start": "1442880",
    "end": "1445360"
  },
  {
    "text": "what we're about to do linear algebra is",
    "start": "1445360",
    "end": "1447480"
  },
  {
    "text": "perfect for parallel Computing and we",
    "start": "1447480",
    "end": "1449279"
  },
  {
    "text": "can easily make our code multi-threaded",
    "start": "1449279",
    "end": "1451080"
  },
  {
    "text": "with the built-in parallelized function",
    "start": "1451080",
    "end": "1452960"
  },
  {
    "text": "increasing our speed buff I'm not going",
    "start": "1452960",
    "end": "1454400"
  },
  {
    "text": "to lie to you this version of this code",
    "start": "1454400",
    "end": "1455960"
  },
  {
    "text": "is like 10 times better than the",
    "start": "1455960",
    "end": "1457520"
  },
  {
    "text": "previous version the previous one he",
    "start": "1457520",
    "end": "1459000"
  },
  {
    "text": "went really into detail this is this is",
    "start": "1459000",
    "end": "1461279"
  },
  {
    "text": "the speed in which I want to get hit",
    "start": "1461279",
    "end": "1462600"
  },
  {
    "text": "with information okay I wanted High 200x",
    "start": "1462600",
    "end": "1465080"
  },
  {
    "text": "but now I've got a fever and the only",
    "start": "1465080",
    "end": "1466720"
  },
  {
    "text": "prescription is more performance Mojo",
    "start": "1466720",
    "end": "1469080"
  },
  {
    "text": "has built-in tiling utilities that",
    "start": "1469080",
    "end": "1471159"
  },
  {
    "text": "basically allow us to cash and reuse",
    "start": "1471159",
    "end": "1473000"
  },
  {
    "text": "data more efficiently and we can even",
    "start": "1473000",
    "end": "1474799"
  },
  {
    "text": "autotune it to find the optimal",
    "start": "1474799",
    "end": "1476440"
  },
  {
    "text": "parameters for our Hardware the end",
    "start": "1476440",
    "end": "1478279"
  },
  {
    "text": "result is over 4,000 times faster",
    "start": "1478279",
    "end": "1480440"
  },
  {
    "text": "execution compared to the original",
    "start": "1480440",
    "end": "1482120"
  },
  {
    "text": "python code that's pretty crazy and if",
    "start": "1482120",
    "end": "1484039"
  },
  {
    "text": "you want to see this code broken down in",
    "start": "1484039",
    "end": "1485399"
  },
  {
    "text": "Greater detail I'd highly recommend this",
    "start": "1485399",
    "end": "1487120"
  },
  {
    "text": "video from Jeremy Howard but I'm curious",
    "start": "1487120",
    "end": "1489240"
  },
  {
    "text": "what you guys think do you really think",
    "start": "1489240",
    "end": "1490480"
  },
  {
    "text": "Mojo could kill Python and C++ at the",
    "start": "1490480",
    "end": "1492679"
  },
  {
    "text": "same time I'm a bit skeptical but",
    "start": "1492679",
    "end": "1494440"
  },
  {
    "text": "employers are already hiring Mojo",
    "start": "1494440",
    "end": "1495960"
  },
  {
    "text": "developers with 10 years of experience",
    "start": "1495960",
    "end": "1497880"
  },
  {
    "text": "this has been the code report thanks for",
    "start": "1497880",
    "end": "1499480"
  },
  {
    "text": "watching and I will see you in the next",
    "start": "1499480",
    "end": "1502640"
  },
  {
    "text": "one like And subscribe please like And",
    "start": "1502640",
    "end": "1505320"
  },
  {
    "text": "subscribe like I'm subscribe to my other",
    "start": "1505320",
    "end": "1507200"
  },
  {
    "text": "channel hey look at that hey that's me",
    "start": "1507200",
    "end": "1510799"
  },
  {
    "text": "they I feel like",
    "start": "1510799",
    "end": "1514039"
  },
  {
    "text": "this got him",
    "start": "1514039",
    "end": "1518200"
  }
]