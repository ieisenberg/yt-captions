[
  {
    "text": "hey guys welcome back to another low",
    "start": "880",
    "end": "2399"
  },
  {
    "text": "level learning tutorial um in today's",
    "start": "2399",
    "end": "4080"
  },
  {
    "text": "tutorial we're going to be doing one of",
    "start": "4080",
    "end": "5440"
  },
  {
    "text": "my favorite things when learning a new",
    "start": "5440",
    "end": "7600"
  },
  {
    "text": "assembly language which is going to be",
    "start": "7600",
    "end": "9440"
  },
  {
    "text": "on the left we're going to write some c",
    "start": "9440",
    "end": "11360"
  },
  {
    "text": "some very simple c right and we're going",
    "start": "11360",
    "end": "13120"
  },
  {
    "text": "to do some basic things in c",
    "start": "13120",
    "end": "14639"
  },
  {
    "text": "like set some variables set some string",
    "start": "14639",
    "end": "17039"
  },
  {
    "text": "pointers do some array assignments",
    "start": "17039",
    "end": "18720"
  },
  {
    "text": "function calls",
    "start": "18720",
    "end": "19520"
  },
  {
    "text": "stuff like that then we're going to",
    "start": "19520",
    "end": "21279"
  },
  {
    "text": "compile it on the left",
    "start": "21279",
    "end": "23279"
  },
  {
    "text": "and then on the right see how it",
    "start": "23279",
    "end": "25119"
  },
  {
    "text": "translates into assembly",
    "start": "25119",
    "end": "27119"
  },
  {
    "text": "and use that process to learn the",
    "start": "27119",
    "end": "30000"
  },
  {
    "text": "assembly language",
    "start": "30000",
    "end": "31119"
  },
  {
    "text": "that it creates so this is the output of",
    "start": "31119",
    "end": "33680"
  },
  {
    "text": "binary and there's a lot of code here",
    "start": "33680",
    "end": "36320"
  },
  {
    "text": "that for the purposes of this video to",
    "start": "36320",
    "end": "38640"
  },
  {
    "text": "learn the assembly we really don't care",
    "start": "38640",
    "end": "40480"
  },
  {
    "text": "about all we need to do",
    "start": "40480",
    "end": "41520"
  },
  {
    "text": "is type slash for search unless look for",
    "start": "41520",
    "end": "44879"
  },
  {
    "text": "main and it's going to be the first",
    "start": "44879",
    "end": "46960"
  },
  {
    "text": "second third fourth entry",
    "start": "46960",
    "end": "50000"
  },
  {
    "text": "okay so this is the object dump output",
    "start": "50000",
    "end": "53039"
  },
  {
    "text": "saying",
    "start": "53039",
    "end": "53760"
  },
  {
    "text": "this is the address of the binary where",
    "start": "53760",
    "end": "56879"
  },
  {
    "text": "main the function exists and then",
    "start": "56879",
    "end": "58480"
  },
  {
    "text": "everything south of that",
    "start": "58480",
    "end": "60000"
  },
  {
    "text": "is the assembly language for the",
    "start": "60000",
    "end": "62480"
  },
  {
    "text": "function main",
    "start": "62480",
    "end": "63600"
  },
  {
    "text": "right so there's a lot that has to go on",
    "start": "63600",
    "end": "67119"
  },
  {
    "text": "for a function to happen in assembly",
    "start": "67119",
    "end": "68720"
  },
  {
    "text": "we're not going to talk about all of it",
    "start": "68720",
    "end": "70320"
  },
  {
    "text": "we're going to talk mainly about what's",
    "start": "70320",
    "end": "72320"
  },
  {
    "text": "going on to make",
    "start": "72320",
    "end": "73680"
  },
  {
    "text": "these variable declarations happen right",
    "start": "73680",
    "end": "76400"
  },
  {
    "text": "so",
    "start": "76400",
    "end": "77200"
  },
  {
    "text": "when we're doing this what i like to do",
    "start": "77200",
    "end": "79200"
  },
  {
    "text": "is look for things that i call",
    "start": "79200",
    "end": "80880"
  },
  {
    "text": "reality anchors right and a reality",
    "start": "80880",
    "end": "82720"
  },
  {
    "text": "anchor is",
    "start": "82720",
    "end": "84159"
  },
  {
    "text": "something that we have this chaos right",
    "start": "84159",
    "end": "86720"
  },
  {
    "text": "this this assembly language that we're",
    "start": "86720",
    "end": "88400"
  },
  {
    "text": "not really sure where to even start if",
    "start": "88400",
    "end": "90240"
  },
  {
    "text": "you're new to assembly",
    "start": "90240",
    "end": "91520"
  },
  {
    "text": "this looks completely foreign to you a",
    "start": "91520",
    "end": "94000"
  },
  {
    "text": "reality anchor",
    "start": "94000",
    "end": "95200"
  },
  {
    "text": "is a thing in our code that we know",
    "start": "95200",
    "end": "98400"
  },
  {
    "text": "has to exist in the assembly for example",
    "start": "98400",
    "end": "101360"
  },
  {
    "text": "we set the variable x equal to one three",
    "start": "101360",
    "end": "103520"
  },
  {
    "text": "three seven right",
    "start": "103520",
    "end": "105119"
  },
  {
    "text": "to me i know that the number one three",
    "start": "105119",
    "end": "108159"
  },
  {
    "text": "three seven",
    "start": "108159",
    "end": "108880"
  },
  {
    "text": "has to occur in my code it is impossible",
    "start": "108880",
    "end": "111840"
  },
  {
    "text": "for it not to otherwise the code",
    "start": "111840",
    "end": "114000"
  },
  {
    "text": "wouldn't be doing what i told it to do",
    "start": "114000",
    "end": "115439"
  },
  {
    "text": "we're going to look for 1337 to give us",
    "start": "115439",
    "end": "117600"
  },
  {
    "text": "kind of a starting point to figure out",
    "start": "117600",
    "end": "119200"
  },
  {
    "text": "where",
    "start": "119200",
    "end": "119600"
  },
  {
    "text": "we should start to care about the",
    "start": "119600",
    "end": "121600"
  },
  {
    "text": "assembly and pretty quickly",
    "start": "121600",
    "end": "123759"
  },
  {
    "text": "we see this 13337 pop-up right this is",
    "start": "123759",
    "end": "126880"
  },
  {
    "text": "object i'm telling us that hex 539",
    "start": "126880",
    "end": "130160"
  },
  {
    "text": "is decimal one through three seven so",
    "start": "130160",
    "end": "132160"
  },
  {
    "text": "then we're gonna walk",
    "start": "132160",
    "end": "133520"
  },
  {
    "text": "through this code and figure out where",
    "start": "133520",
    "end": "135920"
  },
  {
    "text": "the thing that we've created",
    "start": "135920",
    "end": "137760"
  },
  {
    "text": "goes right so okay so we look at it",
    "start": "137760",
    "end": "141040"
  },
  {
    "text": "and we see okay it puts our number 539",
    "start": "141040",
    "end": "144800"
  },
  {
    "text": "into w0 and if you've watched my",
    "start": "144800",
    "end": "146800"
  },
  {
    "text": "previous arc 64 tutorial you remember",
    "start": "146800",
    "end": "148800"
  },
  {
    "text": "that w0",
    "start": "148800",
    "end": "150400"
  },
  {
    "text": "is the lower 32-bit half of",
    "start": "150400",
    "end": "153440"
  },
  {
    "text": "x0 which is just a working register in",
    "start": "153440",
    "end": "156239"
  },
  {
    "text": "arc64 right it's just a register where",
    "start": "156239",
    "end": "158480"
  },
  {
    "text": "you can do math in",
    "start": "158480",
    "end": "160480"
  },
  {
    "text": "and then it stores w0",
    "start": "160480",
    "end": "164080"
  },
  {
    "text": "at x29 plus 20. and remember when you",
    "start": "164080",
    "end": "167360"
  },
  {
    "text": "see these curly",
    "start": "167360",
    "end": "168239"
  },
  {
    "text": "or these hard braces in assembly that's",
    "start": "168239",
    "end": "170400"
  },
  {
    "text": "a memory operation right you're saying",
    "start": "170400",
    "end": "173280"
  },
  {
    "text": "treat x29 as an address",
    "start": "173280",
    "end": "176480"
  },
  {
    "text": "and add 20 to it and then put w0",
    "start": "176480",
    "end": "180000"
  },
  {
    "text": "at that location so what that says to me",
    "start": "180000",
    "end": "183120"
  },
  {
    "text": "is that x29 is being treated as some",
    "start": "183120",
    "end": "186159"
  },
  {
    "text": "kind of",
    "start": "186159",
    "end": "186800"
  },
  {
    "text": "stack pointer right um and you're like",
    "start": "186800",
    "end": "190080"
  },
  {
    "text": "okay no the stack pointer is actually a",
    "start": "190080",
    "end": "192560"
  },
  {
    "text": "separate variable",
    "start": "192560",
    "end": "193680"
  },
  {
    "text": "and that's true in an rx-64 they have",
    "start": "193680",
    "end": "196400"
  },
  {
    "text": "two",
    "start": "196400",
    "end": "196959"
  },
  {
    "text": "stack variables or stack registers um",
    "start": "196959",
    "end": "199760"
  },
  {
    "text": "one is called",
    "start": "199760",
    "end": "200480"
  },
  {
    "text": "sp and one is called fp or the frame",
    "start": "200480",
    "end": "203280"
  },
  {
    "text": "pointer and that's x29",
    "start": "203280",
    "end": "205519"
  },
  {
    "text": "and what's happening here is it's saying",
    "start": "205519",
    "end": "208159"
  },
  {
    "text": "treat the 20th",
    "start": "208159",
    "end": "209440"
  },
  {
    "text": "index on the stack as the variable x",
    "start": "209440",
    "end": "213599"
  },
  {
    "text": "okay so we've we've figured out now how",
    "start": "213599",
    "end": "216239"
  },
  {
    "text": "does arc 64",
    "start": "216239",
    "end": "217599"
  },
  {
    "text": "do decimal variable integer assignments",
    "start": "217599",
    "end": "221360"
  },
  {
    "text": "right here it takes the variable it puts",
    "start": "221360",
    "end": "223920"
  },
  {
    "text": "it in a working register",
    "start": "223920",
    "end": "225200"
  },
  {
    "text": "and then it puts that working register",
    "start": "225200",
    "end": "226879"
  },
  {
    "text": "on the stack pretty cool right so",
    "start": "226879",
    "end": "229120"
  },
  {
    "text": "we're kind of starting to figure out how",
    "start": "229120",
    "end": "231680"
  },
  {
    "text": "the first line of assembly",
    "start": "231680",
    "end": "233360"
  },
  {
    "text": "or the first line of c rather translates",
    "start": "233360",
    "end": "235680"
  },
  {
    "text": "to assembly awesome so let's move on to",
    "start": "235680",
    "end": "237439"
  },
  {
    "text": "our next uh",
    "start": "237439",
    "end": "238400"
  },
  {
    "text": "our next assignment so we say that we",
    "start": "238400",
    "end": "240080"
  },
  {
    "text": "have this pointer s",
    "start": "240080",
    "end": "242000"
  },
  {
    "text": "and this pointer s points to a string",
    "start": "242000",
    "end": "244000"
  },
  {
    "text": "called hello world",
    "start": "244000",
    "end": "245280"
  },
  {
    "text": "okay let's see how this works so we've",
    "start": "245280",
    "end": "248560"
  },
  {
    "text": "already done the",
    "start": "248560",
    "end": "249519"
  },
  {
    "text": "storing of one through three seven next",
    "start": "249519",
    "end": "252080"
  },
  {
    "text": "we do",
    "start": "252080",
    "end": "253200"
  },
  {
    "text": "this little number here right so we move",
    "start": "253200",
    "end": "255760"
  },
  {
    "text": "zero",
    "start": "255760",
    "end": "256639"
  },
  {
    "text": "into x zero so that means that x zero is",
    "start": "256639",
    "end": "259680"
  },
  {
    "text": "zero at this point",
    "start": "259680",
    "end": "261120"
  },
  {
    "text": "we add this number here interesting to x",
    "start": "261120",
    "end": "264800"
  },
  {
    "text": "zero",
    "start": "264800",
    "end": "265520"
  },
  {
    "text": "and store that in x zero and typically",
    "start": "265520",
    "end": "267919"
  },
  {
    "text": "if you're not used to this right when",
    "start": "267919",
    "end": "269120"
  },
  {
    "text": "you see",
    "start": "269120",
    "end": "269759"
  },
  {
    "text": "three operands in um",
    "start": "269759",
    "end": "273120"
  },
  {
    "text": "in assembly it means perform the",
    "start": "273120",
    "end": "276240"
  },
  {
    "text": "operation between these two",
    "start": "276240",
    "end": "278639"
  },
  {
    "text": "and store it in the third right so we're",
    "start": "278639",
    "end": "280320"
  },
  {
    "text": "saying this number",
    "start": "280320",
    "end": "282240"
  },
  {
    "text": "plus x0 stored in x0",
    "start": "282240",
    "end": "285360"
  },
  {
    "text": "right so that means that at this point",
    "start": "285360",
    "end": "286639"
  },
  {
    "text": "because this was set to zero before",
    "start": "286639",
    "end": "288639"
  },
  {
    "text": "x0 is equal to this value and then",
    "start": "288639",
    "end": "292080"
  },
  {
    "text": "just like up here with our 1337 we're",
    "start": "292080",
    "end": "294960"
  },
  {
    "text": "storing x0",
    "start": "294960",
    "end": "296720"
  },
  {
    "text": "onto the 24th index of the stack",
    "start": "296720",
    "end": "300720"
  },
  {
    "text": "and you may not you may be confused you",
    "start": "300720",
    "end": "303039"
  },
  {
    "text": "may be like where is hello world the",
    "start": "303039",
    "end": "305039"
  },
  {
    "text": "string occurring here",
    "start": "305039",
    "end": "306960"
  },
  {
    "text": "well when you actually write hard",
    "start": "306960",
    "end": "309360"
  },
  {
    "text": "strings like this and see what happens",
    "start": "309360",
    "end": "311280"
  },
  {
    "text": "is",
    "start": "311280",
    "end": "312000"
  },
  {
    "text": "that string gets put in the data section",
    "start": "312000",
    "end": "314320"
  },
  {
    "text": "of the binary",
    "start": "314320",
    "end": "315520"
  },
  {
    "text": "at compile time and every reference to",
    "start": "315520",
    "end": "318160"
  },
  {
    "text": "it is actually treated as a pointer so",
    "start": "318160",
    "end": "320160"
  },
  {
    "text": "this",
    "start": "320160",
    "end": "320560"
  },
  {
    "text": "pointer 98a is the pointer into the",
    "start": "320560",
    "end": "324400"
  },
  {
    "text": "binary where hello world lives so now",
    "start": "324400",
    "end": "327440"
  },
  {
    "text": "at the 24th index on the stack the",
    "start": "327440",
    "end": "329840"
  },
  {
    "text": "variable",
    "start": "329840",
    "end": "330479"
  },
  {
    "text": "s points to our string right pretty cool",
    "start": "330479",
    "end": "333039"
  },
  {
    "text": "so we're",
    "start": "333039",
    "end": "333759"
  },
  {
    "text": "we've figured out now how uh pointer",
    "start": "333759",
    "end": "337039"
  },
  {
    "text": "assignments work in arc64 it's very",
    "start": "337039",
    "end": "338960"
  },
  {
    "text": "similar to integer assignments",
    "start": "338960",
    "end": "340720"
  },
  {
    "text": "it's just instead of the hard integer",
    "start": "340720",
    "end": "342479"
  },
  {
    "text": "value we get the pointer value instead",
    "start": "342479",
    "end": "344720"
  },
  {
    "text": "right",
    "start": "344720",
    "end": "345199"
  },
  {
    "text": "working through it so next in",
    "start": "345199",
    "end": "348240"
  },
  {
    "text": "c what i've done is i've made a variable",
    "start": "348240",
    "end": "350880"
  },
  {
    "text": "called",
    "start": "350880",
    "end": "351360"
  },
  {
    "text": "buff it's a character array of four",
    "start": "351360",
    "end": "354160"
  },
  {
    "text": "characters",
    "start": "354160",
    "end": "355120"
  },
  {
    "text": "and i set the character array equal to a",
    "start": "355120",
    "end": "358319"
  },
  {
    "text": "b c and d so if we go back to our",
    "start": "358319",
    "end": "361600"
  },
  {
    "text": "process",
    "start": "361600",
    "end": "362240"
  },
  {
    "text": "right we need to figure out how does a",
    "start": "362240",
    "end": "365280"
  },
  {
    "text": "b c and d appear in the binary well the",
    "start": "365280",
    "end": "368000"
  },
  {
    "text": "way that i would look for",
    "start": "368000",
    "end": "369199"
  },
  {
    "text": "a in the binary is by looking for its",
    "start": "369199",
    "end": "372080"
  },
  {
    "text": "decimal value",
    "start": "372080",
    "end": "373199"
  },
  {
    "text": "which is 97 right or hex 61.",
    "start": "373199",
    "end": "376319"
  },
  {
    "text": "and you can see pretty quickly here hex",
    "start": "376319",
    "end": "378960"
  },
  {
    "text": "61 appears",
    "start": "378960",
    "end": "380400"
  },
  {
    "text": "97 appears and it's stored onto the",
    "start": "380400",
    "end": "382720"
  },
  {
    "text": "stack",
    "start": "382720",
    "end": "383440"
  },
  {
    "text": "the exact same way that our 1337 was",
    "start": "383440",
    "end": "386240"
  },
  {
    "text": "right",
    "start": "386240",
    "end": "386800"
  },
  {
    "text": "we move it into a working register and",
    "start": "386800",
    "end": "388960"
  },
  {
    "text": "then we store that working register",
    "start": "388960",
    "end": "390960"
  },
  {
    "text": "onto the stack and now we know that the",
    "start": "390960",
    "end": "393280"
  },
  {
    "text": "base of our",
    "start": "393280",
    "end": "394080"
  },
  {
    "text": "buff buffer is at index 32 on the stack",
    "start": "394080",
    "end": "398160"
  },
  {
    "text": "and so we put a at 32",
    "start": "398160",
    "end": "401440"
  },
  {
    "text": "b at 33 c at 34",
    "start": "401440",
    "end": "405520"
  },
  {
    "text": "and d at 35 right so we we just did that",
    "start": "405520",
    "end": "408400"
  },
  {
    "text": "entire",
    "start": "408400",
    "end": "409840"
  },
  {
    "text": "array assignment in a matter of like",
    "start": "409840",
    "end": "413039"
  },
  {
    "text": "eight instructions right that's pretty",
    "start": "413039",
    "end": "414800"
  },
  {
    "text": "awesome",
    "start": "414800",
    "end": "416479"
  },
  {
    "text": "so now it's gonna get a little more",
    "start": "416479",
    "end": "418240"
  },
  {
    "text": "complicated because we're gonna do",
    "start": "418240",
    "end": "420000"
  },
  {
    "text": "this loop and what this loop does it's",
    "start": "420000",
    "end": "422240"
  },
  {
    "text": "really straightforward in c",
    "start": "422240",
    "end": "423759"
  },
  {
    "text": "it's just we have some counter i set it",
    "start": "423759",
    "end": "425759"
  },
  {
    "text": "to zero and",
    "start": "425759",
    "end": "427039"
  },
  {
    "text": "wall i is less than four printf",
    "start": "427039",
    "end": "430960"
  },
  {
    "text": "the hexadecimal value of buff i plus",
    "start": "430960",
    "end": "434479"
  },
  {
    "text": "plus",
    "start": "434479",
    "end": "435199"
  },
  {
    "text": "right and all that's doing is it's",
    "start": "435199",
    "end": "436639"
  },
  {
    "text": "printing hex 61",
    "start": "436639",
    "end": "438720"
  },
  {
    "text": "hex 62 pex 63 and hex 64. right",
    "start": "438720",
    "end": "443280"
  },
  {
    "text": "so we need to figure out how does it set",
    "start": "443280",
    "end": "445599"
  },
  {
    "text": "up that counter",
    "start": "445599",
    "end": "446800"
  },
  {
    "text": "and how does the function call get set",
    "start": "446800",
    "end": "448720"
  },
  {
    "text": "up for this loop to occur",
    "start": "448720",
    "end": "450880"
  },
  {
    "text": "in the way that we told it to in c um",
    "start": "450880",
    "end": "454080"
  },
  {
    "text": "and we can see pretty quickly that",
    "start": "454080",
    "end": "455520"
  },
  {
    "text": "after we do our last assignment of buff",
    "start": "455520",
    "end": "458400"
  },
  {
    "text": "which is d",
    "start": "458400",
    "end": "459919"
  },
  {
    "text": "right we set up this",
    "start": "459919",
    "end": "463120"
  },
  {
    "text": "line here and so when you are reading",
    "start": "463120",
    "end": "466639"
  },
  {
    "text": "assembly",
    "start": "466639",
    "end": "467280"
  },
  {
    "text": "and if a register ever has a zero in the",
    "start": "467280",
    "end": "470160"
  },
  {
    "text": "or sorry a z",
    "start": "470160",
    "end": "471599"
  },
  {
    "text": "in the name you typically can assume",
    "start": "471599",
    "end": "473840"
  },
  {
    "text": "that that is some kind of",
    "start": "473840",
    "end": "475280"
  },
  {
    "text": "zero register that will always contain",
    "start": "475280",
    "end": "478560"
  },
  {
    "text": "the value zero and in arc 64",
    "start": "478560",
    "end": "481840"
  },
  {
    "text": "wzr is the working zero register which",
    "start": "481840",
    "end": "485120"
  },
  {
    "text": "means that it will always contain a zero",
    "start": "485120",
    "end": "487039"
  },
  {
    "text": "value",
    "start": "487039",
    "end": "487840"
  },
  {
    "text": "so we store the working zero register",
    "start": "487840",
    "end": "491039"
  },
  {
    "text": "at x29 at offset 16",
    "start": "491039",
    "end": "494319"
  },
  {
    "text": "okay and that means that variable i",
    "start": "494319",
    "end": "498000"
  },
  {
    "text": "which we set to be 0 is at location",
    "start": "498000",
    "end": "501199"
  },
  {
    "text": "16 on the stack so keep that in mind",
    "start": "501199",
    "end": "503840"
  },
  {
    "text": "right when we're talking about our",
    "start": "503840",
    "end": "504960"
  },
  {
    "text": "counter i",
    "start": "504960",
    "end": "506080"
  },
  {
    "text": "we're talking about index 16 on the",
    "start": "506080",
    "end": "508400"
  },
  {
    "text": "stack that's where i",
    "start": "508400",
    "end": "509520"
  },
  {
    "text": "lives okay so we set its initial value",
    "start": "509520",
    "end": "513120"
  },
  {
    "text": "onto the stack then we branch it's not",
    "start": "513120",
    "end": "515839"
  },
  {
    "text": "conditional there's no conditions here",
    "start": "515839",
    "end": "517279"
  },
  {
    "text": "we always branch so we branch",
    "start": "517279",
    "end": "519360"
  },
  {
    "text": "ac4 which is main plus 80. so let's go",
    "start": "519360",
    "end": "521919"
  },
  {
    "text": "to ac4",
    "start": "521919",
    "end": "523279"
  },
  {
    "text": "this line we'll scroll down a little bit",
    "start": "523279",
    "end": "526880"
  },
  {
    "text": "okay so we load register",
    "start": "526880",
    "end": "530560"
  },
  {
    "text": "located at x29 plus 16",
    "start": "530560",
    "end": "533600"
  },
  {
    "text": "so what is that think about it for a",
    "start": "533600",
    "end": "535440"
  },
  {
    "text": "second that's our variable i",
    "start": "535440",
    "end": "537760"
  },
  {
    "text": "we put i into w0 compare",
    "start": "537760",
    "end": "540880"
  },
  {
    "text": "i to 3 interesting",
    "start": "540880",
    "end": "544959"
  },
  {
    "text": "and then branch if it's less than or",
    "start": "544959",
    "end": "547279"
  },
  {
    "text": "equal to 3",
    "start": "547279",
    "end": "548959"
  },
  {
    "text": "to a9c okay cool so what we've actually",
    "start": "548959",
    "end": "551360"
  },
  {
    "text": "just executed",
    "start": "551360",
    "end": "552720"
  },
  {
    "text": "is our our while loop here right this is",
    "start": "552720",
    "end": "555279"
  },
  {
    "text": "the condition that we've set for it to",
    "start": "555279",
    "end": "556880"
  },
  {
    "text": "iterate over",
    "start": "556880",
    "end": "557839"
  },
  {
    "text": "so we said while i is less than 4 the",
    "start": "557839",
    "end": "561200"
  },
  {
    "text": "assembler did a little bit of",
    "start": "561200",
    "end": "562720"
  },
  {
    "text": "optimization for us and instead of",
    "start": "562720",
    "end": "564560"
  },
  {
    "text": "i is less than 4 it says i is less than",
    "start": "564560",
    "end": "567839"
  },
  {
    "text": "or equal to 3. it's the same logic",
    "start": "567839",
    "end": "569920"
  },
  {
    "text": "you know it's just they made it probably",
    "start": "569920",
    "end": "571519"
  },
  {
    "text": "a little faster at the machine level",
    "start": "571519",
    "end": "573600"
  },
  {
    "text": "um so if it's less than or equal to",
    "start": "573600",
    "end": "575519"
  },
  {
    "text": "three which in this case at our first",
    "start": "575519",
    "end": "577279"
  },
  {
    "text": "iteration it is",
    "start": "577279",
    "end": "578240"
  },
  {
    "text": "we go to a9c which is here",
    "start": "578240",
    "end": "581680"
  },
  {
    "text": "so then we load i into w zero",
    "start": "581680",
    "end": "584959"
  },
  {
    "text": "again right so w zero is i which is",
    "start": "584959",
    "end": "587519"
  },
  {
    "text": "still",
    "start": "587519",
    "end": "588240"
  },
  {
    "text": "zero at this point we add 1 to i",
    "start": "588240",
    "end": "593040"
  },
  {
    "text": "and store it into w1 and then",
    "start": "593040",
    "end": "596080"
  },
  {
    "text": "store that into i's location okay so",
    "start": "596080",
    "end": "600000"
  },
  {
    "text": "this is where we do",
    "start": "600000",
    "end": "601360"
  },
  {
    "text": "i plus plus right i plus plus is",
    "start": "601360",
    "end": "603120"
  },
  {
    "text": "happening right here",
    "start": "603120",
    "end": "605120"
  },
  {
    "text": "so then we do sxtw",
    "start": "605120",
    "end": "608640"
  },
  {
    "text": "okay another assembly trick when you see",
    "start": "608640",
    "end": "612399"
  },
  {
    "text": "an x in an operation typically what",
    "start": "612399",
    "end": "615600"
  },
  {
    "text": "that's going to be doing is called",
    "start": "615600",
    "end": "617120"
  },
  {
    "text": "sign extending and the reason why we're",
    "start": "617120",
    "end": "619680"
  },
  {
    "text": "doing a sign extension here is because",
    "start": "619680",
    "end": "621200"
  },
  {
    "text": "we said that i",
    "start": "621200",
    "end": "622720"
  },
  {
    "text": "is an integer and we didn't say it was",
    "start": "622720",
    "end": "624640"
  },
  {
    "text": "an unsigned integer",
    "start": "624640",
    "end": "626000"
  },
  {
    "text": "we said it was a signed integer so what",
    "start": "626000",
    "end": "628480"
  },
  {
    "text": "it's doing is it's expanding i",
    "start": "628480",
    "end": "630240"
  },
  {
    "text": "which lives in the 32-bit w0 register",
    "start": "630240",
    "end": "633839"
  },
  {
    "text": "and it's expanding it by its sign all",
    "start": "633839",
    "end": "636959"
  },
  {
    "text": "the way out",
    "start": "636959",
    "end": "637839"
  },
  {
    "text": "to x0 and then",
    "start": "637839",
    "end": "641200"
  },
  {
    "text": "what do we do we add 1",
    "start": "641200",
    "end": "645839"
  },
  {
    "text": "oh i'm sorry we add 20",
    "start": "645839",
    "end": "650160"
  },
  {
    "text": "hex note that that's important 20 hex to",
    "start": "650160",
    "end": "653120"
  },
  {
    "text": "x29",
    "start": "653120",
    "end": "654399"
  },
  {
    "text": "and store that into x1 okay so this is",
    "start": "654399",
    "end": "656480"
  },
  {
    "text": "going to be a little bit of a trivia",
    "start": "656480",
    "end": "657600"
  },
  {
    "text": "thing i don't like how object dump",
    "start": "657600",
    "end": "659120"
  },
  {
    "text": "displayed this",
    "start": "659120",
    "end": "660320"
  },
  {
    "text": "but what is hex 20 in decimal",
    "start": "660320",
    "end": "663920"
  },
  {
    "text": "hex 20 in decimal is 32 and where does",
    "start": "663920",
    "end": "667360"
  },
  {
    "text": "32 appear in our code",
    "start": "667360",
    "end": "670160"
  },
  {
    "text": "32 is the base",
    "start": "670160",
    "end": "673440"
  },
  {
    "text": "of buff remember that that's where a",
    "start": "673440",
    "end": "675279"
  },
  {
    "text": "lives right so this right here at this",
    "start": "675279",
    "end": "677680"
  },
  {
    "text": "point",
    "start": "677680",
    "end": "678079"
  },
  {
    "text": "x1 will contain",
    "start": "678079",
    "end": "681120"
  },
  {
    "text": "the base address of buffer right",
    "start": "681120",
    "end": "684560"
  },
  {
    "text": "okay stay with me here so x1 is the base",
    "start": "684560",
    "end": "687839"
  },
  {
    "text": "address of buffer",
    "start": "687839",
    "end": "689519"
  },
  {
    "text": "we add the value of i",
    "start": "689519",
    "end": "692880"
  },
  {
    "text": "before it's increment it's we",
    "start": "692880",
    "end": "696160"
  },
  {
    "text": "add the value of i before it gets",
    "start": "696160",
    "end": "699040"
  },
  {
    "text": "incremented",
    "start": "699040",
    "end": "700160"
  },
  {
    "text": "to x1 so it's buff plus i minus 1 at",
    "start": "700160",
    "end": "703680"
  },
  {
    "text": "this point",
    "start": "703680",
    "end": "705440"
  },
  {
    "text": "into w0 move w0 into w1 so at this point",
    "start": "705440",
    "end": "711120"
  },
  {
    "text": "w1 is going to contain whatever",
    "start": "711120",
    "end": "714800"
  },
  {
    "text": "character we're on right",
    "start": "714800",
    "end": "718160"
  },
  {
    "text": "and then eventually we you know we set",
    "start": "718160",
    "end": "720720"
  },
  {
    "text": "up the the format string which is",
    "start": "720720",
    "end": "722320"
  },
  {
    "text": "another string pointer in the binary for",
    "start": "722320",
    "end": "724320"
  },
  {
    "text": "this string",
    "start": "724320",
    "end": "725120"
  },
  {
    "text": "right and we put the um the character",
    "start": "725120",
    "end": "728560"
  },
  {
    "text": "into w1",
    "start": "728560",
    "end": "729760"
  },
  {
    "text": "and then we call printf",
    "start": "729760",
    "end": "732959"
  },
  {
    "text": "once that's done we do the loop all over",
    "start": "734079",
    "end": "736560"
  },
  {
    "text": "again we load",
    "start": "736560",
    "end": "737519"
  },
  {
    "text": "i off the stack we compare it to three",
    "start": "737519",
    "end": "740639"
  },
  {
    "text": "and if it's less than or equal we go all",
    "start": "740639",
    "end": "742959"
  },
  {
    "text": "around again",
    "start": "742959",
    "end": "743839"
  },
  {
    "text": "right it's kind of cool how you can take",
    "start": "743839",
    "end": "747519"
  },
  {
    "text": "what you know is supposed to happen in c",
    "start": "747519",
    "end": "750560"
  },
  {
    "text": "and read it in assembly to figure out",
    "start": "750560",
    "end": "753040"
  },
  {
    "text": "how",
    "start": "753040",
    "end": "753760"
  },
  {
    "text": "the assembly language works at a very",
    "start": "753760",
    "end": "756240"
  },
  {
    "text": "very low level right so then finally",
    "start": "756240",
    "end": "758560"
  },
  {
    "text": "once we've done this",
    "start": "758560",
    "end": "760000"
  },
  {
    "text": "four times we go to this",
    "start": "760000",
    "end": "763279"
  },
  {
    "text": "compare again i is no longer less than",
    "start": "763279",
    "end": "766560"
  },
  {
    "text": "or equal to three",
    "start": "766560",
    "end": "767760"
  },
  {
    "text": "so we move on we move zero a",
    "start": "767760",
    "end": "770959"
  },
  {
    "text": "or 0xa rather into w0 and call put care",
    "start": "770959",
    "end": "774240"
  },
  {
    "text": "which is happening here in our last line",
    "start": "774240",
    "end": "776480"
  },
  {
    "text": "and then finally we move the return",
    "start": "776480",
    "end": "779839"
  },
  {
    "text": "value into w0",
    "start": "779839",
    "end": "781279"
  },
  {
    "text": "which is where in arc64 the value is",
    "start": "781279",
    "end": "783279"
  },
  {
    "text": "returned it's an x or w0 you know and",
    "start": "783279",
    "end": "785279"
  },
  {
    "text": "they're both the same",
    "start": "785279",
    "end": "786000"
  },
  {
    "text": "register um and then eventually this is",
    "start": "786000",
    "end": "789519"
  },
  {
    "text": "all some voodoo where we're",
    "start": "789519",
    "end": "790959"
  },
  {
    "text": "we're checking the um the stack cookie",
    "start": "790959",
    "end": "793519"
  },
  {
    "text": "on the stack to make sure it wasn't",
    "start": "793519",
    "end": "794720"
  },
  {
    "text": "corrupted which is",
    "start": "794720",
    "end": "795600"
  },
  {
    "text": "protecting from buffer overflows and",
    "start": "795600",
    "end": "797360"
  },
  {
    "text": "then we return right",
    "start": "797360",
    "end": "800079"
  },
  {
    "text": "so what we've done here is we've taken",
    "start": "800079",
    "end": "802959"
  },
  {
    "text": "what we know is supposed to happen in c",
    "start": "802959",
    "end": "805200"
  },
  {
    "text": "and figure out how that happens in",
    "start": "805200",
    "end": "807040"
  },
  {
    "text": "assembly after the compiler has done its",
    "start": "807040",
    "end": "809600"
  },
  {
    "text": "job",
    "start": "809600",
    "end": "810160"
  },
  {
    "text": "i hope you've learned something from",
    "start": "810160",
    "end": "811360"
  },
  {
    "text": "this if you want to see me do this with",
    "start": "811360",
    "end": "812959"
  },
  {
    "text": "other c",
    "start": "812959",
    "end": "813680"
  },
  {
    "text": "constructs or other assembly languages",
    "start": "813680",
    "end": "816959"
  },
  {
    "text": "drop a comment",
    "start": "816959",
    "end": "817920"
  },
  {
    "text": "leave a like subscribe let me know",
    "start": "817920",
    "end": "820000"
  },
  {
    "text": "anyway i hope you guys learned something",
    "start": "820000",
    "end": "821839"
  },
  {
    "text": "and enjoy the rest of your day have a",
    "start": "821839",
    "end": "825040"
  },
  {
    "text": "good night bye",
    "start": "825040",
    "end": "828480"
  }
]