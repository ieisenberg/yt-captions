[
  {
    "text": "this malware is crazy it's called esxi",
    "start": "0",
    "end": "2879"
  },
  {
    "text": "args and it's encrypted the VMS",
    "start": "2879",
    "end": "4860"
  },
  {
    "text": "maliciously of 500 hosts in France",
    "start": "4860",
    "end": "7740"
  },
  {
    "text": "Germany the UK and the US in this video",
    "start": "7740",
    "end": "10260"
  },
  {
    "text": "we're doing a malware Deep dive we're",
    "start": "10260",
    "end": "11880"
  },
  {
    "text": "gonna kind of walk through here what's",
    "start": "11880",
    "end": "12900"
  },
  {
    "text": "going on I'm seeing that they're doing",
    "start": "12900",
    "end": "14400"
  },
  {
    "text": "something with the config file they're",
    "start": "14400",
    "end": "15839"
  },
  {
    "text": "editing the config to change the vmdk",
    "start": "15839",
    "end": "18539"
  },
  {
    "text": "file to a vmdk.swap so nothing really",
    "start": "18539",
    "end": "20760"
  },
  {
    "text": "crazy going on here they're killing the",
    "start": "20760",
    "end": "22439"
  },
  {
    "text": "vmx process you kill vmx your VMS die so",
    "start": "22439",
    "end": "25380"
  },
  {
    "text": "that means you're turning off the VMS",
    "start": "25380",
    "end": "26699"
  },
  {
    "text": "before they encrypt ah and here is the",
    "start": "26699",
    "end": "29039"
  },
  {
    "text": "meat and potatoes of this malware so",
    "start": "29039",
    "end": "31380"
  },
  {
    "text": "essentially what it's doing is it looks",
    "start": "31380",
    "end": "32578"
  },
  {
    "text": "like it's going through every volume in",
    "start": "32579",
    "end": "35280"
  },
  {
    "text": "the vmfs volumes directory it's trying",
    "start": "35280",
    "end": "37980"
  },
  {
    "text": "to see if those volumes have any known",
    "start": "37980",
    "end": "40620"
  },
  {
    "text": "file extension for a file they'd want to",
    "start": "40620",
    "end": "43260"
  },
  {
    "text": "encrypt so vmdk vmx vmxf swap files vmem",
    "start": "43260",
    "end": "47340"
  },
  {
    "text": "and vram Etc and then okay here's where",
    "start": "47340",
    "end": "49800"
  },
  {
    "text": "the evil begins it's running start",
    "start": "49800",
    "end": "51600"
  },
  {
    "text": "encrypt with the size step and all this",
    "start": "51600",
    "end": "54960"
  },
  {
    "text": "good stuff using this encrypt binary the",
    "start": "54960",
    "end": "56879"
  },
  {
    "text": "reason why I'm looking for this encrypt",
    "start": "56879",
    "end": "58020"
  },
  {
    "text": "binary is because I saw this encrypt",
    "start": "58020",
    "end": "59579"
  },
  {
    "text": "binary on malware Bazaar associated with",
    "start": "59579",
    "end": "62219"
  },
  {
    "text": "esxi RX I was trying to figure out how",
    "start": "62219",
    "end": "64080"
  },
  {
    "text": "did it get invoked what do the malware",
    "start": "64080",
    "end": "65700"
  },
  {
    "text": "author do to run this script so we're",
    "start": "65700",
    "end": "68100"
  },
  {
    "text": "going to take a look today at the",
    "start": "68100",
    "end": "69299"
  },
  {
    "text": "encrypt binary and see what it's doing",
    "start": "69299",
    "end": "71100"
  },
  {
    "text": "on the inside so let's look at the",
    "start": "71100",
    "end": "72299"
  },
  {
    "text": "command line here running the encrypt",
    "start": "72299",
    "end": "74460"
  },
  {
    "text": "binary with a public key okay so it's",
    "start": "74460",
    "end": "77640"
  },
  {
    "text": "probably some kind of SSH generated",
    "start": "77640",
    "end": "78840"
  },
  {
    "text": "public key on the file so the file is",
    "start": "78840",
    "end": "81720"
  },
  {
    "text": "coming from our for Loop here for every",
    "start": "81720",
    "end": "83520"
  },
  {
    "text": "file in the volumes",
    "start": "83520",
    "end": "85560"
  },
  {
    "text": "and then we're getting some kind of size",
    "start": "85560",
    "end": "87180"
  },
  {
    "text": "of the file and then the size of the",
    "start": "87180",
    "end": "89220"
  },
  {
    "text": "file in looks like pages so 1024 bytes",
    "start": "89220",
    "end": "92580"
  },
  {
    "text": "okay and we pump all that out to death",
    "start": "92580",
    "end": "94020"
  },
  {
    "text": "null and suppress the output to the",
    "start": "94020",
    "end": "95820"
  },
  {
    "text": "command line okay so let's let's open up",
    "start": "95820",
    "end": "97500"
  },
  {
    "text": "the encrypt binary and see what encrypt",
    "start": "97500",
    "end": "99900"
  },
  {
    "text": "is doing",
    "start": "99900",
    "end": "101400"
  },
  {
    "text": "so when I start any project where I'm",
    "start": "101400",
    "end": "102960"
  },
  {
    "text": "doing malware analysis I kind of do some",
    "start": "102960",
    "end": "104520"
  },
  {
    "text": "very basic uh triage of the file to see",
    "start": "104520",
    "end": "108000"
  },
  {
    "text": "what's going on to get to get me an idea",
    "start": "108000",
    "end": "109860"
  },
  {
    "text": "of how much work I have to do or what",
    "start": "109860",
    "end": "111180"
  },
  {
    "text": "I'm in for uh so we have two files here",
    "start": "111180",
    "end": "113220"
  },
  {
    "text": "one is encrypt and one is decrypt so on",
    "start": "113220",
    "end": "116340"
  },
  {
    "text": "malware Bazaar there are actually two",
    "start": "116340",
    "end": "118020"
  },
  {
    "text": "copies of the encrypt file but one of",
    "start": "118020",
    "end": "120479"
  },
  {
    "text": "them did an encryption one of them did a",
    "start": "120479",
    "end": "122220"
  },
  {
    "text": "decryption essentially What's Happening",
    "start": "122220",
    "end": "123720"
  },
  {
    "text": "Here is the malware author will leave",
    "start": "123720",
    "end": "125759"
  },
  {
    "text": "you the decrypt binary which depends on",
    "start": "125759",
    "end": "127740"
  },
  {
    "text": "a private key that you have to buy from",
    "start": "127740",
    "end": "129239"
  },
  {
    "text": "them right they say give me 20 Bitcoin",
    "start": "129239",
    "end": "131340"
  },
  {
    "text": "or I won't give you the file to decrypt",
    "start": "131340",
    "end": "133200"
  },
  {
    "text": "your stuff so they leave you with this",
    "start": "133200",
    "end": "134459"
  },
  {
    "text": "but no key so the file we're actually",
    "start": "134459",
    "end": "136020"
  },
  {
    "text": "interested in is the encrypt file this",
    "start": "136020",
    "end": "138480"
  },
  {
    "text": "is the ransomware itself that gets ran",
    "start": "138480",
    "end": "140520"
  },
  {
    "text": "by the Run sh script so we're gonna do",
    "start": "140520",
    "end": "142319"
  },
  {
    "text": "file on this and see what's going on",
    "start": "142319",
    "end": "144360"
  },
  {
    "text": "here so we have a",
    "start": "144360",
    "end": "146280"
  },
  {
    "text": "64-bit elf that makes sense esxi is",
    "start": "146280",
    "end": "148920"
  },
  {
    "text": "typically ran on 64-bit Intel processors",
    "start": "148920",
    "end": "150959"
  },
  {
    "text": "nothing going on that's crazy there",
    "start": "150959",
    "end": "152220"
  },
  {
    "text": "dynamically linked meaning it was Ram",
    "start": "152220",
    "end": "154140"
  },
  {
    "text": "with standard GCC no crazy Flags uh for",
    "start": "154140",
    "end": "157440"
  },
  {
    "text": "Linux 268 that's a very old version of",
    "start": "157440",
    "end": "159660"
  },
  {
    "text": "Linux compile too",
    "start": "159660",
    "end": "161519"
  },
  {
    "text": "um",
    "start": "161519",
    "end": "162319"
  },
  {
    "text": "with the debug info not stripped okay so",
    "start": "162319",
    "end": "167340"
  },
  {
    "text": "typically if you were a malware author",
    "start": "167340",
    "end": "169500"
  },
  {
    "text": "you don't want people to reverse",
    "start": "169500",
    "end": "171239"
  },
  {
    "text": "engineer your malware probably the",
    "start": "171239",
    "end": "172800"
  },
  {
    "text": "authors of esxi args are mad that I'm",
    "start": "172800",
    "end": "175080"
  },
  {
    "text": "doing this but what you would do is you",
    "start": "175080",
    "end": "177180"
  },
  {
    "text": "would strip the binary so that there was",
    "start": "177180",
    "end": "178980"
  },
  {
    "text": "no information about what the binary did",
    "start": "178980",
    "end": "180959"
  },
  {
    "text": "so that a reverse engineer like me",
    "start": "180959",
    "end": "183300"
  },
  {
    "text": "couldn't figure out what your binary",
    "start": "183300",
    "end": "185280"
  },
  {
    "text": "does",
    "start": "185280",
    "end": "186120"
  },
  {
    "text": "not only did they not strip the binary",
    "start": "186120",
    "end": "188099"
  },
  {
    "text": "they left it with debug info which means",
    "start": "188099",
    "end": "190620"
  },
  {
    "text": "that all of the functions still have",
    "start": "190620",
    "end": "192840"
  },
  {
    "text": "symbols and there's still information",
    "start": "192840",
    "end": "194519"
  },
  {
    "text": "from GCC about how this program got",
    "start": "194519",
    "end": "198000"
  },
  {
    "text": "compiled so",
    "start": "198000",
    "end": "200519"
  },
  {
    "text": "Jesus Christ we're gonna run strings on",
    "start": "200519",
    "end": "203220"
  },
  {
    "text": "this is like the next step of our triage",
    "start": "203220",
    "end": "204840"
  },
  {
    "text": "to see what we got ourselves into by",
    "start": "204840",
    "end": "207120"
  },
  {
    "text": "looking at the functions here and the",
    "start": "207120",
    "end": "209040"
  },
  {
    "text": "strings list we can kind of see get an",
    "start": "209040",
    "end": "211019"
  },
  {
    "text": "idea for what the binary does just from",
    "start": "211019",
    "end": "212819"
  },
  {
    "text": "Reading off some strings right so we",
    "start": "212819",
    "end": "214140"
  },
  {
    "text": "have Malik mem copy I'm looking for",
    "start": "214140",
    "end": "216120"
  },
  {
    "text": "things that are more related to",
    "start": "216120",
    "end": "217200"
  },
  {
    "text": "encryption decryption so here we have",
    "start": "217200",
    "end": "219360"
  },
  {
    "text": "symbols that come in from openssl so",
    "start": "219360",
    "end": "222299"
  },
  {
    "text": "it's going to read some file as a public",
    "start": "222299",
    "end": "225120"
  },
  {
    "text": "key some file as a private key it's",
    "start": "225120",
    "end": "227879"
  },
  {
    "text": "going to use some kind of pseudo RNG",
    "start": "227879",
    "end": "229799"
  },
  {
    "text": "probably to generate key information for",
    "start": "229799",
    "end": "231780"
  },
  {
    "text": "the later encryption and then we have",
    "start": "231780",
    "end": "233760"
  },
  {
    "text": "public encrypt or private decrypt so",
    "start": "233760",
    "end": "236220"
  },
  {
    "text": "that's",
    "start": "236220",
    "end": "237000"
  },
  {
    "text": "if you don't know the difference between",
    "start": "237000",
    "end": "238620"
  },
  {
    "text": "asymmetric and symmetric key encryption",
    "start": "238620",
    "end": "240599"
  },
  {
    "text": "we'll talk about that here in a minute",
    "start": "240599",
    "end": "242459"
  },
  {
    "text": "um but essentially",
    "start": "242459",
    "end": "244500"
  },
  {
    "text": "looks like we encrypt the thing using",
    "start": "244500",
    "end": "246659"
  },
  {
    "text": "the private key let's dump this binary",
    "start": "246659",
    "end": "248159"
  },
  {
    "text": "into our disassembler our analyzer and",
    "start": "248159",
    "end": "250560"
  },
  {
    "text": "see what trouble we can get into okay I",
    "start": "250560",
    "end": "252180"
  },
  {
    "text": "want to say an important caveat real",
    "start": "252180",
    "end": "253500"
  },
  {
    "text": "quick normally ghidra does not look this",
    "start": "253500",
    "end": "256019"
  },
  {
    "text": "cursed okay but I made the font size",
    "start": "256019",
    "end": "258359"
  },
  {
    "text": "like 64 for my mobile users so if you're",
    "start": "258359",
    "end": "261479"
  },
  {
    "text": "a mobile user early anybody just type uh",
    "start": "261479",
    "end": "263520"
  },
  {
    "text": "thank you Triple L in the comments just",
    "start": "263520",
    "end": "265020"
  },
  {
    "text": "just go do it it's fine don't worry",
    "start": "265020",
    "end": "266520"
  },
  {
    "text": "about it like it's okay you're welcome",
    "start": "266520",
    "end": "268320"
  },
  {
    "text": "okay so uh we have the binary open here",
    "start": "268320",
    "end": "272220"
  },
  {
    "text": "in ghidra guidra put us into the main",
    "start": "272220",
    "end": "274740"
  },
  {
    "text": "function and again the only reason I",
    "start": "274740",
    "end": "276300"
  },
  {
    "text": "know it's the main function is because",
    "start": "276300",
    "end": "277680"
  },
  {
    "text": "the malware author left their symbols",
    "start": "277680",
    "end": "280139"
  },
  {
    "text": "and their debug information in the",
    "start": "280139",
    "end": "281520"
  },
  {
    "text": "binary so cool we're at Main let's",
    "start": "281520",
    "end": "283320"
  },
  {
    "text": "figure out what's going on here",
    "start": "283320",
    "end": "284820"
  },
  {
    "text": "uh we got a pretty robust usage screens",
    "start": "284820",
    "end": "287639"
  },
  {
    "text": "if we were to run this program but not",
    "start": "287639",
    "end": "289800"
  },
  {
    "text": "give it three arguments uh we would have",
    "start": "289800",
    "end": "291900"
  },
  {
    "text": "the prompt to put in a public key and",
    "start": "291900",
    "end": "294120"
  },
  {
    "text": "the path to a file to encrypt let's go",
    "start": "294120",
    "end": "295680"
  },
  {
    "text": "ahead and rename this bad boy name this",
    "start": "295680",
    "end": "298139"
  },
  {
    "text": "rxc because that's what it is and we can",
    "start": "298139",
    "end": "300240"
  },
  {
    "text": "also rename this parameter it's going to",
    "start": "300240",
    "end": "302220"
  },
  {
    "text": "be renamed",
    "start": "302220",
    "end": "304040"
  },
  {
    "text": "arc V and we're going to retype it we're",
    "start": "304040",
    "end": "307080"
  },
  {
    "text": "going to retype it to be a care star",
    "start": "307080",
    "end": "309000"
  },
  {
    "text": "star and then guidra will make the the",
    "start": "309000",
    "end": "310979"
  },
  {
    "text": "code look really pretty uh we give it",
    "start": "310979",
    "end": "313020"
  },
  {
    "text": "the path to the binary to run a public",
    "start": "313020",
    "end": "316139"
  },
  {
    "text": "key and then the file to encrypt and",
    "start": "316139",
    "end": "317940"
  },
  {
    "text": "then it does something with that so",
    "start": "317940",
    "end": "319020"
  },
  {
    "text": "let's walk through and see what it's",
    "start": "319020",
    "end": "321240"
  },
  {
    "text": "doing okay cool so we get some very",
    "start": "321240",
    "end": "323759"
  },
  {
    "text": "robust information here again guidra is",
    "start": "323759",
    "end": "326100"
  },
  {
    "text": "cool but leaving debug symbols in your",
    "start": "326100",
    "end": "328320"
  },
  {
    "text": "binary is cooler so we run through these",
    "start": "328320",
    "end": "330600"
  },
  {
    "text": "functions here and this is kind of the",
    "start": "330600",
    "end": "332100"
  },
  {
    "text": "order of operations for what this",
    "start": "332100",
    "end": "333539"
  },
  {
    "text": "ransomware does and again we're in the",
    "start": "333539",
    "end": "335160"
  },
  {
    "text": "encrypt part of the ransomware so we do",
    "start": "335160",
    "end": "337259"
  },
  {
    "text": "init lib SSL let's see what that bad boy",
    "start": "337259",
    "end": "339180"
  },
  {
    "text": "does",
    "start": "339180",
    "end": "340620"
  },
  {
    "text": "um let's see here",
    "start": "340620",
    "end": "341900"
  },
  {
    "text": "we use DL open which uses the Linker to",
    "start": "341900",
    "end": "346259"
  },
  {
    "text": "open an elf so if it's opening libssl.so",
    "start": "346259",
    "end": "350880"
  },
  {
    "text": "and then it looks like if that fails",
    "start": "350880",
    "end": "353039"
  },
  {
    "text": "okay so it's it's trying to find some",
    "start": "353039",
    "end": "355919"
  },
  {
    "text": "version of webssl be it a DOT so1 a DOT",
    "start": "355919",
    "end": "359280"
  },
  {
    "text": "so6 whatever it's just looking for any",
    "start": "359280",
    "end": "361320"
  },
  {
    "text": "version and then once it gets through",
    "start": "361320",
    "end": "363180"
  },
  {
    "text": "and it eventually finds a valid of SSL",
    "start": "363180",
    "end": "365940"
  },
  {
    "text": "it's using Dil Sim to run time linking",
    "start": "365940",
    "end": "369780"
  },
  {
    "text": "it's looking for these symbols in a",
    "start": "369780",
    "end": "372479"
  },
  {
    "text": "library and then it's putting them into",
    "start": "372479",
    "end": "374220"
  },
  {
    "text": "some Global structure to call them later",
    "start": "374220",
    "end": "375960"
  },
  {
    "text": "again this would be kind of complicated",
    "start": "375960",
    "end": "378000"
  },
  {
    "text": "to debug if they didn't leave their",
    "start": "378000",
    "end": "379800"
  },
  {
    "text": "symbols in the binary but they did so",
    "start": "379800",
    "end": "382440"
  },
  {
    "text": "that's fine and even then even if they",
    "start": "382440",
    "end": "384180"
  },
  {
    "text": "hadn't we have the strings right here",
    "start": "384180",
    "end": "385740"
  },
  {
    "text": "that it's looking for so we could have",
    "start": "385740",
    "end": "387000"
  },
  {
    "text": "easily just renamed this pointer this",
    "start": "387000",
    "end": "389520"
  },
  {
    "text": "name and then there you go so it's",
    "start": "389520",
    "end": "391560"
  },
  {
    "text": "populating this table of function",
    "start": "391560",
    "end": "393240"
  },
  {
    "text": "pointers to call later for the binary",
    "start": "393240",
    "end": "395880"
  },
  {
    "text": "and again kind of like the strings call",
    "start": "395880",
    "end": "397860"
  },
  {
    "text": "did before this gives us a good idea of",
    "start": "397860",
    "end": "400199"
  },
  {
    "text": "what the binary is going to do so it's",
    "start": "400199",
    "end": "401580"
  },
  {
    "text": "looking for some function to read in an",
    "start": "401580",
    "end": "403560"
  },
  {
    "text": "RSA public key some function to read in",
    "start": "403560",
    "end": "405900"
  },
  {
    "text": "an RSA private key it's going to use an",
    "start": "405900",
    "end": "408419"
  },
  {
    "text": "RNG to generate bytes",
    "start": "408419",
    "end": "410460"
  },
  {
    "text": "and move my fat head out of the way all",
    "start": "410460",
    "end": "412139"
  },
  {
    "text": "right cool and then uh it's going to do",
    "start": "412139",
    "end": "414240"
  },
  {
    "text": "a public encrypt or a private decrypt so",
    "start": "414240",
    "end": "416400"
  },
  {
    "text": "that's that's all we're looking for here",
    "start": "416400",
    "end": "418139"
  },
  {
    "text": "so we're gonna go back and see now that",
    "start": "418139",
    "end": "419880"
  },
  {
    "text": "we've loaded all these functions into",
    "start": "419880",
    "end": "421139"
  },
  {
    "text": "the into the binary what do we do with",
    "start": "421139",
    "end": "422639"
  },
  {
    "text": "them so we get PK data I'm assuming that",
    "start": "422639",
    "end": "425520"
  },
  {
    "text": "means we're getting the public key data",
    "start": "425520",
    "end": "427560"
  },
  {
    "text": "because again we're in the encrypt",
    "start": "427560",
    "end": "429419"
  },
  {
    "text": "function and if you're maliciously",
    "start": "429419",
    "end": "431160"
  },
  {
    "text": "encrypting you encrypt with your public",
    "start": "431160",
    "end": "433080"
  },
  {
    "text": "key so what do we do here we open a file",
    "start": "433080",
    "end": "435360"
  },
  {
    "text": "to read we seek to the end to make sure",
    "start": "435360",
    "end": "438900"
  },
  {
    "text": "that the file length is not zero okay",
    "start": "438900",
    "end": "441599"
  },
  {
    "text": "and again it would throw an error if",
    "start": "441599",
    "end": "443160"
  },
  {
    "text": "your file key is zero pretty sweet",
    "start": "443160",
    "end": "445620"
  },
  {
    "text": "um we Malik that many bytes plus one we",
    "start": "445620",
    "end": "448500"
  },
  {
    "text": "read from that file into this buffer and",
    "start": "448500",
    "end": "450900"
  },
  {
    "text": "then we return so essentially all we're",
    "start": "450900",
    "end": "452400"
  },
  {
    "text": "doing here is we're reading a public key",
    "start": "452400",
    "end": "455880"
  },
  {
    "text": "into this buffer so we can rename this",
    "start": "455880",
    "end": "458120"
  },
  {
    "text": "PK buff",
    "start": "458120",
    "end": "460139"
  },
  {
    "text": "there we go so then now we're creating",
    "start": "460139",
    "end": "463259"
  },
  {
    "text": "an RSA object using PK buff and",
    "start": "463259",
    "end": "466139"
  },
  {
    "text": "something else so it's probably take",
    "start": "466139",
    "end": "468360"
  },
  {
    "text": "Text data in from PK buff and then",
    "start": "468360",
    "end": "470699"
  },
  {
    "text": "output a pointer to an RSA object so",
    "start": "470699",
    "end": "473880"
  },
  {
    "text": "we're going to go ahead and read this",
    "start": "473880",
    "end": "474900"
  },
  {
    "text": "real quick",
    "start": "474900",
    "end": "475860"
  },
  {
    "text": "um yep so it creates a new basic in and",
    "start": "475860",
    "end": "478139"
  },
  {
    "text": "out memory buffer which is an open SSL",
    "start": "478139",
    "end": "480000"
  },
  {
    "text": "concept and then we read from that basic",
    "start": "480000",
    "end": "483300"
  },
  {
    "text": "in and out buffer which is the data from",
    "start": "483300",
    "end": "485520"
  },
  {
    "text": "our file our key file and we create a",
    "start": "485520",
    "end": "488940"
  },
  {
    "text": "public key object and then we output",
    "start": "488940",
    "end": "491280"
  },
  {
    "text": "that to param two and then there we go",
    "start": "491280",
    "end": "493979"
  },
  {
    "text": "okay awesome so now we have our key",
    "start": "493979",
    "end": "497160"
  },
  {
    "text": "object our key information to do some",
    "start": "497160",
    "end": "499020"
  },
  {
    "text": "kind of RSA encryption so we're going to",
    "start": "499020",
    "end": "500639"
  },
  {
    "text": "say RSA key object",
    "start": "500639",
    "end": "503460"
  },
  {
    "text": "and then we're kind of getting close to",
    "start": "503460",
    "end": "505199"
  },
  {
    "text": "the end here so now all we have to do is",
    "start": "505199",
    "end": "506879"
  },
  {
    "text": "do encrypt file and I'm assuming that",
    "start": "506879",
    "end": "509460"
  },
  {
    "text": "yep so again Arc V2 contains the file",
    "start": "509460",
    "end": "511800"
  },
  {
    "text": "we're going to encrypt we have our RSA",
    "start": "511800",
    "end": "513839"
  },
  {
    "text": "key object and then some other variables",
    "start": "513839",
    "end": "515459"
  },
  {
    "text": "we're not sure what they do yet so let's",
    "start": "515459",
    "end": "516839"
  },
  {
    "text": "go ahead and open up the encrypt file",
    "start": "516839",
    "end": "518520"
  },
  {
    "text": "function so we open a file to read write",
    "start": "518520",
    "end": "520380"
  },
  {
    "text": "this is our Target file",
    "start": "520380",
    "end": "523200"
  },
  {
    "text": "it's the file we want to encrypt the",
    "start": "523200",
    "end": "524700"
  },
  {
    "text": "thing maliciously we're holding for",
    "start": "524700",
    "end": "526260"
  },
  {
    "text": "ransom",
    "start": "526260",
    "end": "527279"
  },
  {
    "text": "and then we get generate a stream key",
    "start": "527279",
    "end": "530100"
  },
  {
    "text": "interesting so this is probably our",
    "start": "530100",
    "end": "533519"
  },
  {
    "text": "um symmetric key buffer",
    "start": "533519",
    "end": "536339"
  },
  {
    "text": "foreign",
    "start": "536339",
    "end": "537420"
  },
  {
    "text": "now we're going to RSA encrypt RSA",
    "start": "537420",
    "end": "540480"
  },
  {
    "text": "object",
    "start": "540480",
    "end": "541680"
  },
  {
    "text": "so essentially what it looks like we're",
    "start": "541680",
    "end": "542940"
  },
  {
    "text": "doing is we are creating a symmetric key",
    "start": "542940",
    "end": "545220"
  },
  {
    "text": "because again if you're seeing this hex",
    "start": "545220",
    "end": "546660"
  },
  {
    "text": "20 any multiple of 16 or 128 bits is",
    "start": "546660",
    "end": "549899"
  },
  {
    "text": "going to be a symmetric uh stream key so",
    "start": "549899",
    "end": "552959"
  },
  {
    "text": "we are encrypting that symmetric key",
    "start": "552959",
    "end": "557480"
  },
  {
    "text": "and then we're using it to encrypt the",
    "start": "557880",
    "end": "559860"
  },
  {
    "text": "file okay so essentially What's",
    "start": "559860",
    "end": "562380"
  },
  {
    "text": "Happening Here is we are generating a",
    "start": "562380",
    "end": "565740"
  },
  {
    "text": "stream key to use for symmetric",
    "start": "565740",
    "end": "567959"
  },
  {
    "text": "encryption we are going to encrypt that",
    "start": "567959",
    "end": "570420"
  },
  {
    "text": "symmetric key with an asymmetric Keys",
    "start": "570420",
    "end": "572880"
  },
  {
    "text": "that's our RSA public key and then we're",
    "start": "572880",
    "end": "574860"
  },
  {
    "text": "going to encrypt that vmdk which is the",
    "start": "574860",
    "end": "577380"
  },
  {
    "text": "thing we're holding Ransom and then it",
    "start": "577380",
    "end": "579240"
  },
  {
    "text": "looks like we are slapping that",
    "start": "579240",
    "end": "581279"
  },
  {
    "text": "encrypted key onto the end of the file",
    "start": "581279",
    "end": "583800"
  },
  {
    "text": "and then that's it that's all the",
    "start": "583800",
    "end": "585420"
  },
  {
    "text": "ransomware does so it takes random well",
    "start": "585420",
    "end": "587880"
  },
  {
    "text": "actually let's generate let's see how it",
    "start": "587880",
    "end": "589080"
  },
  {
    "text": "generates a stream key",
    "start": "589080",
    "end": "590640"
  },
  {
    "text": "it uses lran pseudobites so there could",
    "start": "590640",
    "end": "593339"
  },
  {
    "text": "have been a vulnerability in this",
    "start": "593339",
    "end": "594540"
  },
  {
    "text": "ransomware where maybe they don't use",
    "start": "594540",
    "end": "596459"
  },
  {
    "text": "random information for the keys or maybe",
    "start": "596459",
    "end": "598620"
  },
  {
    "text": "they you know they don't see to their",
    "start": "598620",
    "end": "600839"
  },
  {
    "text": "RNG properly maybe they seat it with a",
    "start": "600839",
    "end": "602519"
  },
  {
    "text": "static number but the fact that they're",
    "start": "602519",
    "end": "604200"
  },
  {
    "text": "using the open SSL pseudo RNG means it's",
    "start": "604200",
    "end": "607140"
  },
  {
    "text": "likely cryptographically secure right so",
    "start": "607140",
    "end": "609420"
  },
  {
    "text": "I guess to confirm our assumptions about",
    "start": "609420",
    "end": "610860"
  },
  {
    "text": "how this thing is working let's go",
    "start": "610860",
    "end": "612240"
  },
  {
    "text": "through",
    "start": "612240",
    "end": "613260"
  },
  {
    "text": "to the the decrypt malware or the",
    "start": "613260",
    "end": "615660"
  },
  {
    "text": "decrypt piece again that is the binary",
    "start": "615660",
    "end": "617760"
  },
  {
    "text": "that the victim is given and see what it",
    "start": "617760",
    "end": "620519"
  },
  {
    "text": "does in theory it should do this in the",
    "start": "620519",
    "end": "622740"
  },
  {
    "text": "exact opposite order right you should",
    "start": "622740",
    "end": "624480"
  },
  {
    "text": "give it a private key as input it should",
    "start": "624480",
    "end": "626820"
  },
  {
    "text": "pull the encrypted stream key off the",
    "start": "626820",
    "end": "628920"
  },
  {
    "text": "end and then use that stream key to",
    "start": "628920",
    "end": "630959"
  },
  {
    "text": "decrypt your files let's go ahead and",
    "start": "630959",
    "end": "632399"
  },
  {
    "text": "import that to guidra and see if we are",
    "start": "632399",
    "end": "635459"
  },
  {
    "text": "correct guys I'm gonna freak out I can't",
    "start": "635459",
    "end": "638940"
  },
  {
    "text": "look at this [ __ ] all right okay so",
    "start": "638940",
    "end": "641880"
  },
  {
    "text": "after fighting with 64 Point font ghidra",
    "start": "641880",
    "end": "644579"
  },
  {
    "text": "uh we are in the main function of the",
    "start": "644579",
    "end": "646500"
  },
  {
    "text": "decrypt binary so again this is a binary",
    "start": "646500",
    "end": "648180"
  },
  {
    "text": "that the victim is likely given to",
    "start": "648180",
    "end": "649680"
  },
  {
    "text": "decrypt their malware or to decrypt",
    "start": "649680",
    "end": "651360"
  },
  {
    "text": "their files",
    "start": "651360",
    "end": "652860"
  },
  {
    "text": "um yeah so you are you instead of giving",
    "start": "652860",
    "end": "655140"
  },
  {
    "text": "it a public key you give it now the",
    "start": "655140",
    "end": "657300"
  },
  {
    "text": "private key that you bought from the",
    "start": "657300",
    "end": "658800"
  },
  {
    "text": "ransomware author and you point it at",
    "start": "658800",
    "end": "660720"
  },
  {
    "text": "the file you would like to decrypt",
    "start": "660720",
    "end": "661860"
  },
  {
    "text": "something something something so get PK",
    "start": "661860",
    "end": "664440"
  },
  {
    "text": "data this should now be open up a well",
    "start": "664440",
    "end": "667380"
  },
  {
    "text": "first we're just going to open the file",
    "start": "667380",
    "end": "668459"
  },
  {
    "text": "but then we're going to create an RSA",
    "start": "668459",
    "end": "670920"
  },
  {
    "text": "object with RSA private key yeah yes",
    "start": "670920",
    "end": "673560"
  },
  {
    "text": "exactly so RSA you have a key pair and",
    "start": "673560",
    "end": "676260"
  },
  {
    "text": "the one that you want to sell or you're",
    "start": "676260",
    "end": "677880"
  },
  {
    "text": "for a ransomware author you want to give",
    "start": "677880",
    "end": "679440"
  },
  {
    "text": "to your victim is the private key it's",
    "start": "679440",
    "end": "681360"
  },
  {
    "text": "the one that you only have one copy of",
    "start": "681360",
    "end": "682620"
  },
  {
    "text": "you don't distribute that freely because",
    "start": "682620",
    "end": "683760"
  },
  {
    "text": "it's private",
    "start": "683760",
    "end": "685079"
  },
  {
    "text": "all right so we read in that private key",
    "start": "685079",
    "end": "687660"
  },
  {
    "text": "we create the object and now this is the",
    "start": "687660",
    "end": "689279"
  },
  {
    "text": "part where we actually decrypt our files",
    "start": "689279",
    "end": "690540"
  },
  {
    "text": "so again what it should do is it should",
    "start": "690540",
    "end": "693740"
  },
  {
    "text": "extract the encryption key right which",
    "start": "693740",
    "end": "696360"
  },
  {
    "text": "is done right so it takes the RSA object",
    "start": "696360",
    "end": "699480"
  },
  {
    "text": "as input and then what this function",
    "start": "699480",
    "end": "702060"
  },
  {
    "text": "does is it says what is the size of a",
    "start": "702060",
    "end": "705120"
  },
  {
    "text": "thing encrypted by this key right what",
    "start": "705120",
    "end": "707820"
  },
  {
    "text": "that's going to do is it's going to look",
    "start": "707820",
    "end": "709440"
  },
  {
    "text": "at the end of the file",
    "start": "709440",
    "end": "712079"
  },
  {
    "text": "and probably extract the encrypted key",
    "start": "712079",
    "end": "714120"
  },
  {
    "text": "blob and then yes you RSA decrypt that",
    "start": "714120",
    "end": "716640"
  },
  {
    "text": "key blob and then you cut that key off",
    "start": "716640",
    "end": "719399"
  },
  {
    "text": "the end of the file you truncate it and",
    "start": "719399",
    "end": "721800"
  },
  {
    "text": "then you encrypt and again it's",
    "start": "721800",
    "end": "723300"
  },
  {
    "text": "symmetric symmetric key so it could just",
    "start": "723300",
    "end": "725519"
  },
  {
    "text": "be",
    "start": "725519",
    "end": "726420"
  },
  {
    "text": "it's the same algorithm you just use the",
    "start": "726420",
    "end": "728339"
  },
  {
    "text": "same key that you've now decrypted and",
    "start": "728339",
    "end": "729660"
  },
  {
    "text": "you close it and then you have your file",
    "start": "729660",
    "end": "731100"
  },
  {
    "text": "back ta-da so there we go",
    "start": "731100",
    "end": "733320"
  },
  {
    "text": "um pretty simple malware honestly the",
    "start": "733320",
    "end": "735240"
  },
  {
    "text": "fact that they did a good job of like",
    "start": "735240",
    "end": "737519"
  },
  {
    "text": "not compromising their encryption scheme",
    "start": "737519",
    "end": "739380"
  },
  {
    "text": "with like a decent cryptography but like",
    "start": "739380",
    "end": "741420"
  },
  {
    "text": "left their binaries with [ __ ] symbols",
    "start": "741420",
    "end": "744240"
  },
  {
    "text": "is insane to me",
    "start": "744240",
    "end": "745740"
  },
  {
    "text": "um but so be it anyway guys I do these",
    "start": "745740",
    "end": "748079"
  },
  {
    "text": "videos all the time I'm getting more",
    "start": "748079",
    "end": "749279"
  },
  {
    "text": "into cyber security this channel goes on",
    "start": "749279",
    "end": "750600"
  },
  {
    "text": "so if you like this video do me a favor",
    "start": "750600",
    "end": "751620"
  },
  {
    "text": "hit like hit subscribe and then go watch",
    "start": "751620",
    "end": "753300"
  },
  {
    "text": "this video right here about a thing I",
    "start": "753300",
    "end": "756120"
  },
  {
    "text": "did with the thing it's really cool",
    "start": "756120",
    "end": "758220"
  },
  {
    "text": "go keep go go click it",
    "start": "758220",
    "end": "762199"
  }
]