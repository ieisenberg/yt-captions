[
  {
    "start": "0",
    "end": "60000"
  },
  {
    "text": "there's a new bug sweeping the world of",
    "start": "0",
    "end": "2200"
  },
  {
    "text": "offensive Security in the Apple computer",
    "start": "2200",
    "end": "5279"
  },
  {
    "text": "now specifically this bug is in the",
    "start": "5279",
    "end": "7200"
  },
  {
    "text": "Apple M1 M2 and M3 chipset it is a bug",
    "start": "7200",
    "end": "11280"
  },
  {
    "text": "in the Silicon design of the CPU which",
    "start": "11280",
    "end": "14559"
  },
  {
    "text": "means it is unpatchable unless you",
    "start": "14559",
    "end": "16520"
  },
  {
    "text": "literally go to the store and get a",
    "start": "16520",
    "end": "18800"
  },
  {
    "text": "different CPU that you then replace your",
    "start": "18800",
    "end": "21240"
  },
  {
    "text": "current CPU with before you get all",
    "start": "21240",
    "end": "22800"
  },
  {
    "text": "crazy and freak out and think that",
    "start": "22800",
    "end": "24359"
  },
  {
    "text": "someone's going to hack into your",
    "start": "24359",
    "end": "25279"
  },
  {
    "text": "computer rest assured this is a local",
    "start": "25279",
    "end": "27599"
  },
  {
    "text": "bug meaning that someone has to already",
    "start": "27599",
    "end": "29119"
  },
  {
    "text": "have access to your computer to exploit",
    "start": "29119",
    "end": "30880"
  },
  {
    "text": "this but this bug is a really really",
    "start": "30880",
    "end": "33200"
  },
  {
    "text": "interesting deep dive into the world of",
    "start": "33200",
    "end": "35320"
  },
  {
    "text": "side Channel cash-based memory attacks",
    "start": "35320",
    "end": "38000"
  },
  {
    "text": "and the way that cash has been an attack",
    "start": "38000",
    "end": "40480"
  },
  {
    "text": "surface for hackers for the last 10",
    "start": "40480",
    "end": "43480"
  },
  {
    "text": "years also if you're new here hi my name",
    "start": "43480",
    "end": "45640"
  },
  {
    "text": "is Ol learning uh I'm a security",
    "start": "45640",
    "end": "47360"
  },
  {
    "text": "researcher so during the day I look at",
    "start": "47360",
    "end": "49239"
  },
  {
    "text": "code I find bugs not like this one but",
    "start": "49239",
    "end": "51640"
  },
  {
    "text": "similar and I write reports and uh and",
    "start": "51640",
    "end": "53600"
  },
  {
    "text": "talk about vulnerabilities so if you're",
    "start": "53600",
    "end": "55160"
  },
  {
    "text": "interested in that if you want to learn",
    "start": "55160",
    "end": "56320"
  },
  {
    "text": "how to code if you just want to hang out",
    "start": "56320",
    "end": "58039"
  },
  {
    "text": "with me hit that sub button and we'll",
    "start": "58039",
    "end": "59719"
  },
  {
    "text": "see in the next few videos now this bug",
    "start": "59719",
    "end": "61519"
  },
  {
    "start": "60000",
    "end": "110000"
  },
  {
    "text": "is the output of the research of a bunch",
    "start": "61519",
    "end": "63199"
  },
  {
    "text": "of different universities of a bunch of",
    "start": "63199",
    "end": "64640"
  },
  {
    "text": "different researchers and all of the",
    "start": "64640",
    "end": "66520"
  },
  {
    "text": "research has come together in a white",
    "start": "66520",
    "end": "68119"
  },
  {
    "text": "paper a proof of concept and a",
    "start": "68119",
    "end": "69680"
  },
  {
    "text": "vulnerability all referred to as go",
    "start": "69680",
    "end": "72040"
  },
  {
    "text": "fetch now what is the bug so if you read",
    "start": "72040",
    "end": "73880"
  },
  {
    "text": "the articles about the bug the bug is a",
    "start": "73880",
    "end": "75960"
  },
  {
    "text": "vulnerability in the CPU that allows one",
    "start": "75960",
    "end": "79200"
  },
  {
    "text": "process an unprivileged process just",
    "start": "79200",
    "end": "81320"
  },
  {
    "text": "code running as any user to read the",
    "start": "81320",
    "end": "84479"
  },
  {
    "text": "data out of another process and leak",
    "start": "84479",
    "end": "86759"
  },
  {
    "text": "cryptographic key information so for",
    "start": "86759",
    "end": "88640"
  },
  {
    "text": "example if you have a process process a",
    "start": "88640",
    "end": "90759"
  },
  {
    "text": "who is an attacker it can read the RSA",
    "start": "90759",
    "end": "93720"
  },
  {
    "text": "keys or the AAS keys out of process B",
    "start": "93720",
    "end": "96759"
  },
  {
    "text": "the victim doing some sort of",
    "start": "96759",
    "end": "98439"
  },
  {
    "text": "cryptographic authentication right it",
    "start": "98439",
    "end": "100399"
  },
  {
    "text": "uses really really novel techniques that",
    "start": "100399",
    "end": "102520"
  },
  {
    "text": "have been developing over the course of",
    "start": "102520",
    "end": "103840"
  },
  {
    "text": "the last 10 years or so let's talk about",
    "start": "103840",
    "end": "105920"
  },
  {
    "text": "what those are the bug uses what is",
    "start": "105920",
    "end": "107399"
  },
  {
    "text": "known as a side Channel attack and if",
    "start": "107399",
    "end": "109520"
  },
  {
    "text": "you don't know what a side Channel",
    "start": "109520",
    "end": "110439"
  },
  {
    "start": "110000",
    "end": "160000"
  },
  {
    "text": "attack is consider we have a password",
    "start": "110439",
    "end": "112680"
  },
  {
    "text": "checking algorithm password checking",
    "start": "112680",
    "end": "114320"
  },
  {
    "text": "algorithm will iterate over every",
    "start": "114320",
    "end": "116280"
  },
  {
    "text": "character in the password that you've",
    "start": "116280",
    "end": "117799"
  },
  {
    "text": "provided and compare it against the",
    "start": "117799",
    "end": "119920"
  },
  {
    "text": "known good password now let's say for",
    "start": "119920",
    "end": "122200"
  },
  {
    "text": "example that if you give it the wrong",
    "start": "122200",
    "end": "123640"
  },
  {
    "text": "password it still tells you no that's",
    "start": "123640",
    "end": "125600"
  },
  {
    "text": "the wrong password but for every",
    "start": "125600",
    "end": "127520"
  },
  {
    "text": "character when it's checking if the",
    "start": "127520",
    "end": "129560"
  },
  {
    "text": "character is correct it waits 1 second",
    "start": "129560",
    "end": "132640"
  },
  {
    "text": "but if it's incorrect it has some kind",
    "start": "132640",
    "end": "134959"
  },
  {
    "text": "of processing it has to do so it takes 3",
    "start": "134959",
    "end": "137160"
  },
  {
    "text": "seconds to run well the program did tell",
    "start": "137160",
    "end": "139120"
  },
  {
    "text": "you that your password was incorrect you",
    "start": "139120",
    "end": "140800"
  },
  {
    "text": "were able to deduce by the amount of",
    "start": "140800",
    "end": "142400"
  },
  {
    "text": "time your attack took to figure out what",
    "start": "142400",
    "end": "144319"
  },
  {
    "text": "the correct password is based on the",
    "start": "144319",
    "end": "146120"
  },
  {
    "text": "latency of the operation this is known",
    "start": "146120",
    "end": "148840"
  },
  {
    "text": "as a side Channel attack where the",
    "start": "148840",
    "end": "150959"
  },
  {
    "text": "operation itself is correct but the",
    "start": "150959",
    "end": "153519"
  },
  {
    "text": "details of the operation or the",
    "start": "153519",
    "end": "154959"
  },
  {
    "text": "implementation leak out information from",
    "start": "154959",
    "end": "157319"
  },
  {
    "text": "other channels like time heat sound that",
    "start": "157319",
    "end": "160680"
  },
  {
    "start": "160000",
    "end": "210000"
  },
  {
    "text": "allow you to gather other information",
    "start": "160680",
    "end": "163480"
  },
  {
    "text": "now this applies to computers in a",
    "start": "163480",
    "end": "164879"
  },
  {
    "text": "really interesting way computers use",
    "start": "164879",
    "end": "166840"
  },
  {
    "text": "this thing called cache I'm sure you've",
    "start": "166840",
    "end": "168360"
  },
  {
    "text": "heard of it cache is this piece of",
    "start": "168360",
    "end": "170480"
  },
  {
    "text": "memory that sits in between the really",
    "start": "170480",
    "end": "172560"
  },
  {
    "text": "really fast CPU and the Noto fast Ram",
    "start": "172560",
    "end": "176480"
  },
  {
    "text": "now Ram is extremely fast but cache",
    "start": "176480",
    "end": "178640"
  },
  {
    "text": "memory is even faster F so every time",
    "start": "178640",
    "end": "180840"
  },
  {
    "text": "you go and you read a memory address you",
    "start": "180840",
    "end": "182840"
  },
  {
    "text": "may think that you're actually going",
    "start": "182840",
    "end": "184080"
  },
  {
    "text": "into virtual memory and then hitting a",
    "start": "184080",
    "end": "185760"
  },
  {
    "text": "ram chip to get that data but a lot of",
    "start": "185760",
    "end": "187799"
  },
  {
    "text": "the time you're actually hitting the",
    "start": "187799",
    "end": "189239"
  },
  {
    "text": "intermediate cache memory now this",
    "start": "189239",
    "end": "191280"
  },
  {
    "text": "applies to side Channel attacks because",
    "start": "191280",
    "end": "193560"
  },
  {
    "text": "every process shares the same cache now",
    "start": "193560",
    "end": "197680"
  },
  {
    "text": "again the features of the cache whether",
    "start": "197680",
    "end": "199720"
  },
  {
    "text": "the cache hits meaning it has your data",
    "start": "199720",
    "end": "201760"
  },
  {
    "text": "or it misses where it does not have your",
    "start": "201760",
    "end": "203480"
  },
  {
    "text": "data is the correct feature of cache but",
    "start": "203480",
    "end": "207120"
  },
  {
    "text": "the amount of time it takes for the",
    "start": "207120",
    "end": "208599"
  },
  {
    "text": "memory to get access to via the hit or",
    "start": "208599",
    "end": "210560"
  },
  {
    "start": "210000",
    "end": "330000"
  },
  {
    "text": "the Miss is something that reveals",
    "start": "210560",
    "end": "212480"
  },
  {
    "text": "through a side Channel information about",
    "start": "212480",
    "end": "215439"
  },
  {
    "text": "other processes that are using that cash",
    "start": "215439",
    "end": "217920"
  },
  {
    "text": "line so if the cach hits and takes some",
    "start": "217920",
    "end": "220080"
  },
  {
    "text": "time but misses and takes more time that",
    "start": "220080",
    "end": "222720"
  },
  {
    "text": "reveals information about the access",
    "start": "222720",
    "end": "224480"
  },
  {
    "text": "patterns of processes that are using the",
    "start": "224480",
    "end": "226439"
  },
  {
    "text": "me the same memory as you and we saw",
    "start": "226439",
    "end": "228120"
  },
  {
    "text": "this in the Spectre in meltdown bugs in",
    "start": "228120",
    "end": "230080"
  },
  {
    "text": "2016 what those bugs were were literally",
    "start": "230080",
    "end": "232760"
  },
  {
    "text": "through caching and speculative",
    "start": "232760",
    "end": "234879"
  },
  {
    "text": "execution where the processor is moving",
    "start": "234879",
    "end": "236560"
  },
  {
    "text": "forward into the future and trying to",
    "start": "236560",
    "end": "238239"
  },
  {
    "text": "figure out what branches your processes",
    "start": "238239",
    "end": "239840"
  },
  {
    "text": "going to take and load that memory ahead",
    "start": "239840",
    "end": "241599"
  },
  {
    "text": "of time a researcher found that you",
    "start": "241599",
    "end": "243799"
  },
  {
    "text": "could read all of the memory arbitrarily",
    "start": "243799",
    "end": "247079"
  },
  {
    "text": "on the CPU through speculative execution",
    "start": "247079",
    "end": "250400"
  },
  {
    "text": "by timing the cash misses it is truly",
    "start": "250400",
    "end": "253040"
  },
  {
    "text": "amazing I still to this day don't fully",
    "start": "253040",
    "end": "255959"
  },
  {
    "text": "understand it but I'll link the paper to",
    "start": "255959",
    "end": "257079"
  },
  {
    "text": "it down or I'll link the paper to it",
    "start": "257079",
    "end": "258639"
  },
  {
    "text": "down here below go check that out but",
    "start": "258639",
    "end": "261079"
  },
  {
    "text": "that exploit that vulnerability kind of",
    "start": "261079",
    "end": "264040"
  },
  {
    "text": "broke ground for the future of cash side",
    "start": "264040",
    "end": "267680"
  },
  {
    "text": "Channel research right they effectively",
    "start": "267680",
    "end": "269320"
  },
  {
    "text": "proved oh the fact that you as a process",
    "start": "269320",
    "end": "273240"
  },
  {
    "text": "share cash between other processes is",
    "start": "273240",
    "end": "276240"
  },
  {
    "text": "bad right and there are there are",
    "start": "276240",
    "end": "278680"
  },
  {
    "text": "features within the CPU that are trying",
    "start": "278680",
    "end": "281560"
  },
  {
    "text": "to optimize execution like speculative",
    "start": "281560",
    "end": "283759"
  },
  {
    "text": "execution for example that allow you to",
    "start": "283759",
    "end": "286919"
  },
  {
    "text": "take advantage of the cash side Channel",
    "start": "286919",
    "end": "289840"
  },
  {
    "text": "and so while all this sounds very you",
    "start": "289840",
    "end": "291720"
  },
  {
    "text": "know Doom and Gloom we've found ways to",
    "start": "291720",
    "end": "293800"
  },
  {
    "text": "get around this right new CPU",
    "start": "293800",
    "end": "295320"
  },
  {
    "text": "architecture implements this idea of",
    "start": "295320",
    "end": "297560"
  },
  {
    "text": "constant time programming the idea being",
    "start": "297560",
    "end": "300080"
  },
  {
    "text": "if I run an operation let's say that I I",
    "start": "300080",
    "end": "302440"
  },
  {
    "text": "I run a move operation where I move data",
    "start": "302440",
    "end": "304479"
  },
  {
    "text": "out of memory constant time programming",
    "start": "304479",
    "end": "306800"
  },
  {
    "text": "is a way of Designing the CPU",
    "start": "306800",
    "end": "309000"
  },
  {
    "text": "architecture that no matter if the cache",
    "start": "309000",
    "end": "311199"
  },
  {
    "text": "hits or misses that result takes the",
    "start": "311199",
    "end": "314360"
  },
  {
    "text": "same amount of time every time so I",
    "start": "314360",
    "end": "316919"
  },
  {
    "text": "don't get a side channel the timing is",
    "start": "316919",
    "end": "319080"
  },
  {
    "text": "always the same the problem with this is",
    "start": "319080",
    "end": "321600"
  },
  {
    "text": "that if every operation in the CPU every",
    "start": "321600",
    "end": "324880"
  },
  {
    "text": "single one to include the optimizers",
    "start": "324880",
    "end": "327039"
  },
  {
    "text": "running in the background and the micro",
    "start": "327039",
    "end": "328440"
  },
  {
    "text": "code of the CPU if those all ran at",
    "start": "328440",
    "end": "332120"
  },
  {
    "start": "330000",
    "end": "440000"
  },
  {
    "text": "constant time you would have an",
    "start": "332120",
    "end": "333639"
  },
  {
    "text": "extremely slow CPU so most parts of the",
    "start": "333639",
    "end": "337440"
  },
  {
    "text": "CPU are ran in constant time programming",
    "start": "337440",
    "end": "339960"
  },
  {
    "text": "but certain parts bypass this and this",
    "start": "339960",
    "end": "343000"
  },
  {
    "text": "is where the Apple bug comes in things",
    "start": "343000",
    "end": "345759"
  },
  {
    "text": "get extremely hairy in what are called",
    "start": "345759",
    "end": "347759"
  },
  {
    "text": "the data memory dependent prefetchers in",
    "start": "347759",
    "end": "351840"
  },
  {
    "text": "the Apple silicon so the dmps is what",
    "start": "351840",
    "end": "354759"
  },
  {
    "text": "they're called are used in the Apple",
    "start": "354759",
    "end": "356720"
  },
  {
    "text": "silicon to effectively read all the",
    "start": "356720",
    "end": "359880"
  },
  {
    "text": "memory that is in Cache all the memory",
    "start": "359880",
    "end": "362400"
  },
  {
    "text": "that you're accessing and inside of the",
    "start": "362400",
    "end": "365240"
  },
  {
    "text": "memory what it's doing is it's looking",
    "start": "365240",
    "end": "367199"
  },
  {
    "text": "for things that look like memory",
    "start": "367199",
    "end": "369400"
  },
  {
    "text": "addresses and the DMP the P being",
    "start": "369400",
    "end": "371720"
  },
  {
    "text": "prefetch is looking into that memory and",
    "start": "371720",
    "end": "374080"
  },
  {
    "text": "seeing are there pointers that we may",
    "start": "374080",
    "end": "377199"
  },
  {
    "text": "need in the future and if those pointers",
    "start": "377199",
    "end": "379440"
  },
  {
    "text": "exist it's going out and it's reaching",
    "start": "379440",
    "end": "381199"
  },
  {
    "text": "into memory and pulling in other memory",
    "start": "381199",
    "end": "384720"
  },
  {
    "text": "so that makes sense right we're going",
    "start": "384720",
    "end": "386160"
  },
  {
    "text": "out or we're saying like oh eventually",
    "start": "386160",
    "end": "387880"
  },
  {
    "text": "somewhere in this program they may",
    "start": "387880",
    "end": "389639"
  },
  {
    "text": "access you know hex 8000 I'm going to go",
    "start": "389639",
    "end": "392160"
  },
  {
    "text": "get hex 8000 for them load it into Cash",
    "start": "392160",
    "end": "394319"
  },
  {
    "text": "just in case the problem is the",
    "start": "394319",
    "end": "397080"
  },
  {
    "text": "vulnerability is that they didn't",
    "start": "397080",
    "end": "399160"
  },
  {
    "text": "validate if a if a number if a thing is",
    "start": "399160",
    "end": "403360"
  },
  {
    "text": "actually a pointer or not basically",
    "start": "403360",
    "end": "405680"
  },
  {
    "text": "there's a function in the Apple silicon",
    "start": "405680",
    "end": "407400"
  },
  {
    "text": "that says if it looks like a pointer",
    "start": "407400",
    "end": "409880"
  },
  {
    "text": "we're going to go out and get it and",
    "start": "409880",
    "end": "412199"
  },
  {
    "text": "that act that that access of loading in",
    "start": "412199",
    "end": "415680"
  },
  {
    "text": "the thing that looks like a pointer does",
    "start": "415680",
    "end": "417919"
  },
  {
    "text": "not adhere to constant time programming",
    "start": "417919",
    "end": "420440"
  },
  {
    "text": "which is the findings of the go fetch",
    "start": "420440",
    "end": "421840"
  },
  {
    "text": "paper so because of that you can put",
    "start": "421840",
    "end": "424800"
  },
  {
    "text": "arbitrary memory addresses into a blob",
    "start": "424800",
    "end": "427240"
  },
  {
    "text": "in apple silicon and the DMP the data",
    "start": "427240",
    "end": "429560"
  },
  {
    "text": "memory prefetcher will go and try to",
    "start": "429560",
    "end": "432000"
  },
  {
    "text": "prefetch it and put it into cache",
    "start": "432000",
    "end": "434080"
  },
  {
    "text": "without adhering to constant time",
    "start": "434080",
    "end": "435479"
  },
  {
    "text": "programming thus revealing a cache",
    "start": "435479",
    "end": "437919"
  },
  {
    "text": "timing based side Channel attack truly",
    "start": "437919",
    "end": "441680"
  },
  {
    "start": "440000",
    "end": "511000"
  },
  {
    "text": "amazing so the end result is a process",
    "start": "441680",
    "end": "444479"
  },
  {
    "text": "that is able to listen in to another",
    "start": "444479",
    "end": "447400"
  },
  {
    "text": "process and Via these timing attacks",
    "start": "447400",
    "end": "449759"
  },
  {
    "text": "figure out what the nature what the",
    "start": "449759",
    "end": "451560"
  },
  {
    "text": "memory in that process is and to leak",
    "start": "451560",
    "end": "453919"
  },
  {
    "text": "out any of the cryptographic keys of any",
    "start": "453919",
    "end": "456479"
  },
  {
    "text": "of the libraries that are that are being",
    "start": "456479",
    "end": "458240"
  },
  {
    "text": "used so they used op SSL I think crystal",
    "start": "458240",
    "end": "461120"
  },
  {
    "text": "and a bunch of other uh crypto libraries",
    "start": "461120",
    "end": "463680"
  },
  {
    "text": "so really really interesting and here",
    "start": "463680",
    "end": "465479"
  },
  {
    "text": "we're watching it happen on unfolds on",
    "start": "465479",
    "end": "467319"
  },
  {
    "text": "the left you have the attacker process",
    "start": "467319",
    "end": "469840"
  },
  {
    "text": "that is filling up the cache and",
    "start": "469840",
    "end": "471639"
  },
  {
    "text": "watching memory get evicted and using",
    "start": "471639",
    "end": "473479"
  },
  {
    "text": "that timing to reveal information about",
    "start": "473479",
    "end": "475039"
  },
  {
    "text": "the CPU and on the right is just a",
    "start": "475039",
    "end": "477120"
  },
  {
    "text": "server that is executing the RSA",
    "start": "477120",
    "end": "478800"
  },
  {
    "text": "algorithm now they do say that on",
    "start": "478800",
    "end": "480440"
  },
  {
    "text": "certain CPUs it takes more time than",
    "start": "480440",
    "end": "481919"
  },
  {
    "text": "others like here you'll see this video",
    "start": "481919",
    "end": "483240"
  },
  {
    "text": "is 2 minutes 59 seconds long um and",
    "start": "483240",
    "end": "487039"
  },
  {
    "text": "again like I don't fully understand the",
    "start": "487039",
    "end": "488800"
  },
  {
    "text": "nature of the attack right they're doing",
    "start": "488800",
    "end": "490000"
  },
  {
    "text": "a lot of crazy math that has to do with",
    "start": "490000",
    "end": "492319"
  },
  {
    "text": "how like RSA is implemented for example",
    "start": "492319",
    "end": "495039"
  },
  {
    "text": "um but really really cool bug the fact",
    "start": "495039",
    "end": "497159"
  },
  {
    "text": "that you're able to the fact that people",
    "start": "497159",
    "end": "499199"
  },
  {
    "text": "on this planet exist that know this much",
    "start": "499199",
    "end": "502319"
  },
  {
    "text": "about the iners of CPU architecture is",
    "start": "502319",
    "end": "504599"
  },
  {
    "text": "really cool to me um yeah so that that's",
    "start": "504599",
    "end": "508159"
  },
  {
    "text": "about it I just wanted to show you guys",
    "start": "508159",
    "end": "509199"
  },
  {
    "text": "this I could talk about it and uh yeah",
    "start": "509199",
    "end": "510919"
  },
  {
    "text": "it's pretty neat",
    "start": "510919",
    "end": "513400"
  }
]