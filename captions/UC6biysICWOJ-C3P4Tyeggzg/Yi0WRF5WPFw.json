[
  {
    "start": "0",
    "end": "146000"
  },
  {
    "text": "fellow low-level rust stations welcome",
    "start": "40",
    "end": "1920"
  },
  {
    "text": "back today our adventure continues into",
    "start": "1920",
    "end": "4040"
  },
  {
    "text": "the deep dark recesses of rust if you",
    "start": "4040",
    "end": "6319"
  },
  {
    "text": "aren't already subscribed hit the",
    "start": "6319",
    "end": "7520"
  },
  {
    "text": "Subscribe button to follow along on our",
    "start": "7520",
    "end": "8840"
  },
  {
    "text": "embedded rust journey in this series",
    "start": "8840",
    "end": "10840"
  },
  {
    "text": "I'll document my Adventures into",
    "start": "10840",
    "end": "12000"
  },
  {
    "text": "embedded rust and today as promised",
    "start": "12000",
    "end": "13960"
  },
  {
    "text": "we'll be learning how to write rust that",
    "start": "13960",
    "end": "15719"
  },
  {
    "text": "compiles down to a flat binary and runs",
    "start": "15719",
    "end": "17720"
  },
  {
    "text": "on the Raspberry Pi Pico or the",
    "start": "17720",
    "end": "19880"
  },
  {
    "text": "rp240 now if you aren't already familiar",
    "start": "19880",
    "end": "22199"
  },
  {
    "text": "with this board the Raspberry Pi Pico is",
    "start": "22199",
    "end": "24199"
  },
  {
    "text": "a small arm cortex m0 Plus board made by",
    "start": "24199",
    "end": "27160"
  },
  {
    "text": "Raspberry Pi meant to compete in the",
    "start": "27160",
    "end": "29119"
  },
  {
    "text": "same space as smaller maker boards like",
    "start": "29119",
    "end": "31039"
  },
  {
    "text": "the Arduino the Raspberry Pi Pico is",
    "start": "31039",
    "end": "33879"
  },
  {
    "text": "closer to a microcontroller than a micr",
    "start": "33879",
    "end": "36160"
  },
  {
    "text": "processor board and as a result is not",
    "start": "36160",
    "end": "38160"
  },
  {
    "text": "designed to run an entire operating",
    "start": "38160",
    "end": "40120"
  },
  {
    "text": "system like Linux luckily for us the",
    "start": "40120",
    "end": "42360"
  },
  {
    "text": "rust embedded ecosystem is extremely",
    "start": "42360",
    "end": "44920"
  },
  {
    "text": "well documented and actively supported",
    "start": "44920",
    "end": "46879"
  },
  {
    "text": "meaning that tool chains exist within",
    "start": "46879",
    "end": "48840"
  },
  {
    "text": "rust that will allow us to compile our",
    "start": "48840",
    "end": "50640"
  },
  {
    "text": "code down to a format runnable on the",
    "start": "50640",
    "end": "52800"
  },
  {
    "text": "Raspberry Pi Pico most of what I'll be",
    "start": "52800",
    "end": "54879"
  },
  {
    "text": "talking about today here is can be found",
    "start": "54879",
    "end": "56680"
  },
  {
    "text": "on the embedded rust documentation page",
    "start": "56680",
    "end": "58800"
  },
  {
    "text": "and I'll link that down in the",
    "start": "58800",
    "end": "60079"
  },
  {
    "text": "description below first to talk about",
    "start": "60079",
    "end": "62120"
  },
  {
    "text": "embedded rust we first need to talk",
    "start": "62120",
    "end": "63960"
  },
  {
    "text": "about the embedded rust abstraction",
    "start": "63960",
    "end": "66040"
  },
  {
    "text": "model now to be clear there are two ways",
    "start": "66040",
    "end": "68479"
  },
  {
    "text": "we could do this tutorial the first",
    "start": "68479",
    "end": "70439"
  },
  {
    "text": "would be to write rust that uses the",
    "start": "70439",
    "end": "72200"
  },
  {
    "text": "unsafe mode to directly access a memory",
    "start": "72200",
    "end": "74840"
  },
  {
    "text": "address kind of like what I did in my",
    "start": "74840",
    "end": "76360"
  },
  {
    "text": "first rust video and then use that to",
    "start": "76360",
    "end": "78640"
  },
  {
    "text": "directly access our peripherals this of",
    "start": "78640",
    "end": "80960"
  },
  {
    "text": "course is not only unsafe as the unsafe",
    "start": "80960",
    "end": "83200"
  },
  {
    "text": "keyword describes but also is not",
    "start": "83200",
    "end": "85400"
  },
  {
    "text": "scalable it wouldn't make our code",
    "start": "85400",
    "end": "86880"
  },
  {
    "text": "portable as we added additional featur",
    "start": "86880",
    "end": "88759"
  },
  {
    "text": "we wanted to access more more",
    "start": "88759",
    "end": "90240"
  },
  {
    "text": "peripherals so instead we'll use the",
    "start": "90240",
    "end": "92720"
  },
  {
    "text": "second and arguably correct way to do",
    "start": "92720",
    "end": "95200"
  },
  {
    "text": "this video which is through the use of",
    "start": "95200",
    "end": "96720"
  },
  {
    "text": "what is known as a hardware abstraction",
    "start": "96720",
    "end": "98799"
  },
  {
    "text": "layer or a hall a hardware abstraction",
    "start": "98799",
    "end": "101680"
  },
  {
    "text": "layer does just what its name implies it",
    "start": "101680",
    "end": "104079"
  },
  {
    "text": "provides an API for the programmer to",
    "start": "104079",
    "end": "106680"
  },
  {
    "text": "interact with the hardware without",
    "start": "106680",
    "end": "108560"
  },
  {
    "text": "directly accessing it instead it",
    "start": "108560",
    "end": "110799"
  },
  {
    "text": "provides a simpler easier to ous",
    "start": "110799",
    "end": "113119"
  },
  {
    "text": "interface and abstraction as the name",
    "start": "113119",
    "end": "114920"
  },
  {
    "text": "implies to take the burden off of the",
    "start": "114920",
    "end": "116920"
  },
  {
    "text": "higher level programmer when they write",
    "start": "116920",
    "end": "118840"
  },
  {
    "text": "applications for the low level device",
    "start": "118840",
    "end": "121159"
  },
  {
    "text": "the structure of how a rust Hall crate",
    "start": "121159",
    "end": "122960"
  },
  {
    "text": "is actually designed is a bit more",
    "start": "122960",
    "end": "124240"
  },
  {
    "text": "nuanced and complicated but we don't",
    "start": "124240",
    "end": "125600"
  },
  {
    "text": "need to worry about that for right now",
    "start": "125600",
    "end": "127320"
  },
  {
    "text": "luckily for us the embedded rust",
    "start": "127320",
    "end": "129440"
  },
  {
    "text": "Community has already designed a haul",
    "start": "129440",
    "end": "131440"
  },
  {
    "text": "for the RP 2040 we could in theory write",
    "start": "131440",
    "end": "134519"
  },
  {
    "text": "our own haul however and I do and plan",
    "start": "134519",
    "end": "136440"
  },
  {
    "text": "on doing that in a future video but",
    "start": "136440",
    "end": "138160"
  },
  {
    "text": "right now I'm still actually learning",
    "start": "138160",
    "end": "139599"
  },
  {
    "text": "rust fundamentals and I figured this",
    "start": "139599",
    "end": "141160"
  },
  {
    "text": "would be more educational and less",
    "start": "141160",
    "end": "143239"
  },
  {
    "text": "dangerous to use one that already",
    "start": "143239",
    "end": "145560"
  },
  {
    "text": "exists now I know in my previous video",
    "start": "145560",
    "end": "148000"
  },
  {
    "start": "146000",
    "end": "267000"
  },
  {
    "text": "when I showed you guys how to actually",
    "start": "148000",
    "end": "149200"
  },
  {
    "text": "install rust to run rust code um I said",
    "start": "149200",
    "end": "151959"
  },
  {
    "text": "pseudo AP install rust C I said to do",
    "start": "151959",
    "end": "154080"
  },
  {
    "text": "literally just this pseudo AP install",
    "start": "154080",
    "end": "156599"
  },
  {
    "text": "rust c um I realized looking back at it",
    "start": "156599",
    "end": "159000"
  },
  {
    "text": "that this is actually the wrong way to",
    "start": "159000",
    "end": "160400"
  },
  {
    "text": "install rust so if you did watch my",
    "start": "160400",
    "end": "162120"
  },
  {
    "text": "video and partake in that horrific",
    "start": "162120",
    "end": "164040"
  },
  {
    "text": "action I would do pseudo apt remove rust",
    "start": "164040",
    "end": "166760"
  },
  {
    "text": "C uh the reason for that is to get",
    "start": "166760",
    "end": "168959"
  },
  {
    "text": "actually um better control over your",
    "start": "168959",
    "end": "171000"
  },
  {
    "text": "rust environment you want to use the",
    "start": "171000",
    "end": "172440"
  },
  {
    "text": "rust installer that the rust language",
    "start": "172440",
    "end": "174280"
  },
  {
    "text": "provides on Rust slang. org by running",
    "start": "174280",
    "end": "176599"
  },
  {
    "text": "this line of code here basically that",
    "start": "176599",
    "end": "178040"
  },
  {
    "text": "just downloads a rust downloads and",
    "start": "178040",
    "end": "180440"
  },
  {
    "text": "startup script and pumps it into your",
    "start": "180440",
    "end": "181840"
  },
  {
    "text": "shell and then that'll actually like",
    "start": "181840",
    "end": "183760"
  },
  {
    "text": "install the most recent version of rust",
    "start": "183760",
    "end": "185879"
  },
  {
    "text": "as notated by the rust maintainers so",
    "start": "185879",
    "end": "189159"
  },
  {
    "text": "remove your rust run this piece of code",
    "start": "189159",
    "end": "192080"
  },
  {
    "text": "um it'll actually yell at me because",
    "start": "192080",
    "end": "193239"
  },
  {
    "text": "it's going to say hey man you've already",
    "start": "193239",
    "end": "194560"
  },
  {
    "text": "got um rust on your computer but what's",
    "start": "194560",
    "end": "196519"
  },
  {
    "text": "going on here uh we'll just you know run",
    "start": "196519",
    "end": "198760"
  },
  {
    "text": "through this and let it kind of override",
    "start": "198760",
    "end": "200000"
  },
  {
    "text": "it once we have that we want to do",
    "start": "200000",
    "end": "202400"
  },
  {
    "text": "Source home user cargo M there's a bunch",
    "start": "202400",
    "end": "206879"
  },
  {
    "text": "of environment variables that rust needs",
    "start": "206879",
    "end": "209239"
  },
  {
    "text": "loaded up to run like I you just update",
    "start": "209239",
    "end": "211120"
  },
  {
    "text": "your path to include additional rust",
    "start": "211120",
    "end": "212640"
  },
  {
    "text": "binary so that when you're doing all",
    "start": "212640",
    "end": "214159"
  },
  {
    "text": "this package management through this",
    "start": "214159",
    "end": "215480"
  },
  {
    "text": "through the use of crates um that your",
    "start": "215480",
    "end": "218000"
  },
  {
    "text": "code actually runs on the programs and",
    "start": "218000",
    "end": "219480"
  },
  {
    "text": "know what to do so once you've installed",
    "start": "219480",
    "end": "221400"
  },
  {
    "text": "cargo and installed the rust running",
    "start": "221400",
    "end": "223640"
  },
  {
    "text": "environment like this um you want to",
    "start": "223640",
    "end": "225519"
  },
  {
    "text": "actually go to this link here I'll put",
    "start": "225519",
    "end": "226799"
  },
  {
    "text": "it in the description box and download",
    "start": "226799",
    "end": "228360"
  },
  {
    "text": "the",
    "start": "228360",
    "end": "229360"
  },
  {
    "text": "rp240 hardware abstraction layer right",
    "start": "229360",
    "end": "232560"
  },
  {
    "text": "so you're going to go ahead and get",
    "start": "232560",
    "end": "234280"
  },
  {
    "text": "clone that repo I'm actually already in",
    "start": "234280",
    "end": "236360"
  },
  {
    "text": "it so I'm not going to do that but if",
    "start": "236360",
    "end": "237760"
  },
  {
    "text": "you open that repo up you'll see you",
    "start": "237760",
    "end": "239040"
  },
  {
    "text": "have a bunch of cargo files and a bunch",
    "start": "239040",
    "end": "241680"
  },
  {
    "text": "of you know additional folders where the",
    "start": "241680",
    "end": "243840"
  },
  {
    "text": "actual harder abstraction layer for the",
    "start": "243840",
    "end": "245959"
  },
  {
    "text": "rp240 lives and we're not going to go",
    "start": "245959",
    "end": "247599"
  },
  {
    "text": "deep into all this code but there's a",
    "start": "247599",
    "end": "248840"
  },
  {
    "text": "lot of good stuff here that allows you",
    "start": "248840",
    "end": "250239"
  },
  {
    "text": "to do anything from use the timer",
    "start": "250239",
    "end": "252959"
  },
  {
    "text": "interfaces to the USB interface Etc um",
    "start": "252959",
    "end": "255799"
  },
  {
    "text": "what we do want to actually go into",
    "start": "255799",
    "end": "257040"
  },
  {
    "text": "we're going to go into the rp240 hall",
    "start": "257040",
    "end": "259560"
  },
  {
    "text": "and then go to the examples okay so",
    "start": "259560",
    "end": "261400"
  },
  {
    "text": "we're going to be basing this tutorial",
    "start": "261400",
    "end": "262720"
  },
  {
    "text": "off of the Blinky example we'll pull",
    "start": "262720",
    "end": "265320"
  },
  {
    "text": "that up in Sublime real quick also want",
    "start": "265320",
    "end": "267880"
  },
  {
    "text": "to point out real quick that before I go",
    "start": "267880",
    "end": "269520"
  },
  {
    "text": "into into this if at any time I'm not",
    "start": "269520",
    "end": "271280"
  },
  {
    "text": "properly describing something or I do it",
    "start": "271280",
    "end": "272800"
  },
  {
    "text": "in a way that you don't understand a",
    "start": "272800",
    "end": "274160"
  },
  {
    "text": "leave a comment let me know but also uh",
    "start": "274160",
    "end": "276160"
  },
  {
    "text": "the documentation for the rp240 hall is",
    "start": "276160",
    "end": "278400"
  },
  {
    "text": "really really good the link is here I'll",
    "start": "278400",
    "end": "279880"
  },
  {
    "text": "put in the description box um all of the",
    "start": "279880",
    "end": "282720"
  },
  {
    "text": "structures and functions of those",
    "start": "282720",
    "end": "284280"
  },
  {
    "text": "structures are well defined in a way",
    "start": "284280",
    "end": "285919"
  },
  {
    "text": "that you can go into these documents",
    "start": "285919",
    "end": "287520"
  },
  {
    "text": "here and figure out what does this",
    "start": "287520",
    "end": "289199"
  },
  {
    "text": "argument do why does this argument have",
    "start": "289199",
    "end": "291000"
  },
  {
    "text": "to be in this place for this function",
    "start": "291000",
    "end": "292600"
  },
  {
    "text": "Etc so here we go we have the code up in",
    "start": "292600",
    "end": "295840"
  },
  {
    "text": "uh Sublime we are going to walk through",
    "start": "295840",
    "end": "298360"
  },
  {
    "text": "line by line to figure out what all this",
    "start": "298360",
    "end": "299720"
  },
  {
    "text": "code does so on line one uh no STD is no",
    "start": "299720",
    "end": "303880"
  },
  {
    "text": "standard which means it actually puts",
    "start": "303880",
    "end": "305320"
  },
  {
    "text": "the uh rust runtime from lib standard",
    "start": "305320",
    "end": "308400"
  },
  {
    "text": "which is a standard runtime that rust",
    "start": "308400",
    "end": "309960"
  },
  {
    "text": "runs with all the time and links into",
    "start": "309960",
    "end": "311560"
  },
  {
    "text": "your binaries it puts it into lib core",
    "start": "311560",
    "end": "314360"
  },
  {
    "text": "which is a smaller condensed version of",
    "start": "314360",
    "end": "316600"
  },
  {
    "text": "the rust runtime with less features that",
    "start": "316600",
    "end": "318639"
  },
  {
    "text": "allows you to do smaller application",
    "start": "318639",
    "end": "320479"
  },
  {
    "text": "writing like for you know writing",
    "start": "320479",
    "end": "322080"
  },
  {
    "text": "kernels firmware Etc um here we have no",
    "start": "322080",
    "end": "325240"
  },
  {
    "text": "main that basically tells the compiler",
    "start": "325240",
    "end": "326840"
  },
  {
    "text": "to not emit the main symbol and then",
    "start": "326840",
    "end": "329319"
  },
  {
    "text": "also don't cry when we don't have a main",
    "start": "329319",
    "end": "331479"
  },
  {
    "text": "symbol it just means that we're not",
    "start": "331479",
    "end": "332680"
  },
  {
    "text": "going to call the standard you know uh",
    "start": "332680",
    "end": "335199"
  },
  {
    "text": "call the main function to run our",
    "start": "335199",
    "end": "336600"
  },
  {
    "text": "program we're just going to go somewhere",
    "start": "336600",
    "end": "338199"
  },
  {
    "text": "else uh the other place we're going to",
    "start": "338199",
    "end": "339880"
  },
  {
    "text": "go to is actually the uh cortex M entry",
    "start": "339880",
    "end": "342880"
  },
  {
    "text": "point so we use this part of our",
    "start": "342880",
    "end": "345520"
  },
  {
    "text": "Hardware abstraction layer to expose the",
    "start": "345520",
    "end": "347600"
  },
  {
    "text": "idea of the entry point for the board",
    "start": "347600",
    "end": "349680"
  },
  {
    "text": "and we can actually describe functions",
    "start": "349680",
    "end": "351800"
  },
  {
    "text": "with this label and use that to tell the",
    "start": "351800",
    "end": "354120"
  },
  {
    "text": "compiler hey where does your code start",
    "start": "354120",
    "end": "355840"
  },
  {
    "text": "oh it starts here at the entry point um",
    "start": "355840",
    "end": "358919"
  },
  {
    "text": "basically this line here just allows us",
    "start": "358919",
    "end": "360600"
  },
  {
    "text": "to properly let the board Panic if",
    "start": "360600",
    "end": "362680"
  },
  {
    "text": "things don't go right we need to mention",
    "start": "362680",
    "end": "364280"
  },
  {
    "text": "this otherwise the uh Linker will",
    "start": "364280",
    "end": "365880"
  },
  {
    "text": "complain about not knowing where Panic",
    "start": "365880",
    "end": "367520"
  },
  {
    "text": "halt is um here we actually pull out the",
    "start": "367520",
    "end": "370199"
  },
  {
    "text": "hardware abstraction layer from our",
    "start": "370199",
    "end": "371880"
  },
  {
    "text": "crate and then call it something else",
    "start": "371880",
    "end": "373800"
  },
  {
    "text": "call it h just to make it easier to work",
    "start": "373800",
    "end": "375440"
  },
  {
    "text": "with um within H's within Hardware",
    "start": "375440",
    "end": "378240"
  },
  {
    "text": "abstraction layers in Rust you have the",
    "start": "378240",
    "end": "379960"
  },
  {
    "text": "idea of a peripheral access crate so",
    "start": "379960",
    "end": "382800"
  },
  {
    "text": "I'll pull the image up here but Hardware",
    "start": "382800",
    "end": "384560"
  },
  {
    "text": "abstraction layers and rust have two",
    "start": "384560",
    "end": "386400"
  },
  {
    "text": "components they have the microcontroller",
    "start": "386400",
    "end": "389000"
  },
  {
    "text": "abstraction layer which is for the just",
    "start": "389000",
    "end": "391360"
  },
  {
    "text": "cortex arm zero itself and then you have",
    "start": "391360",
    "end": "394440"
  },
  {
    "text": "the peripheral access crate which is for",
    "start": "394440",
    "end": "396360"
  },
  {
    "text": "the things that are specific to the",
    "start": "396360",
    "end": "398720"
  },
  {
    "text": "rp240 so we'll expose the peripheral",
    "start": "398720",
    "end": "402520"
  },
  {
    "text": "axis crate so that we can use that later",
    "start": "402520",
    "end": "404080"
  },
  {
    "text": "down in the code um this some more B",
    "start": "404080",
    "end": "406160"
  },
  {
    "text": "plate stuff basically we're just saying",
    "start": "406160",
    "end": "407440"
  },
  {
    "text": "we're going to use basic structures that",
    "start": "407440",
    "end": "409120"
  },
  {
    "text": "are you know native to all Hardware",
    "start": "409120",
    "end": "411080"
  },
  {
    "text": "abstraction layers like an output pin a",
    "start": "411080",
    "end": "413240"
  },
  {
    "text": "fix point in time Etc also we're going",
    "start": "413240",
    "end": "415800"
  },
  {
    "text": "to pull out the clock structure from a",
    "start": "415800",
    "end": "418199"
  },
  {
    "text": "hardware abstraction layer as well",
    "start": "418199",
    "end": "420080"
  },
  {
    "text": "um a really important set of lines we",
    "start": "420080",
    "end": "421840"
  },
  {
    "text": "can't skip here is that we are going to",
    "start": "421840",
    "end": "423960"
  },
  {
    "text": "actually like just openly declare the",
    "start": "423960",
    "end": "426240"
  },
  {
    "text": "bootloader we're going to say make sure",
    "start": "426240",
    "end": "428039"
  },
  {
    "text": "you put the things that are you know",
    "start": "428039",
    "end": "429639"
  },
  {
    "text": "denoted below line 33 into the boot 2",
    "start": "429639",
    "end": "432440"
  },
  {
    "text": "section and that thing we're putting in",
    "start": "432440",
    "end": "434039"
  },
  {
    "text": "there is actually the boot two boot",
    "start": "434039",
    "end": "435720"
  },
  {
    "text": "loader right so we're saying this",
    "start": "435720",
    "end": "437280"
  },
  {
    "text": "structure boot two this variable boot",
    "start": "437280",
    "end": "439280"
  },
  {
    "text": "two is the rp240 boot 2 boot loader it's",
    "start": "439280",
    "end": "442479"
  },
  {
    "text": "of this type right if we don't do this",
    "start": "442479",
    "end": "444879"
  },
  {
    "text": "line and we don't do that it's in this",
    "start": "444879",
    "end": "446599"
  },
  {
    "text": "linked section that it's used we",
    "start": "446599",
    "end": "448400"
  },
  {
    "text": "literally will not produce the boot",
    "start": "448400",
    "end": "449879"
  },
  {
    "text": "loader to load our binary and nothing",
    "start": "449879",
    "end": "451479"
  },
  {
    "text": "will happen so we can't we can't skip",
    "start": "451479",
    "end": "453360"
  },
  {
    "text": "this right uh moving on Line 39 pretty",
    "start": "453360",
    "end": "456520"
  },
  {
    "text": "straightforward we're just telling the",
    "start": "456520",
    "end": "458039"
  },
  {
    "text": "you know global environment hey by the",
    "start": "458039",
    "end": "459560"
  },
  {
    "text": "way your Crystal frequency in hertz is",
    "start": "459560",
    "end": "461759"
  },
  {
    "text": "12 mahz subtype u32 we need this because",
    "start": "461759",
    "end": "464960"
  },
  {
    "text": "we're going to put it into our clock",
    "start": "464960",
    "end": "466400"
  },
  {
    "text": "initialization later later so that we",
    "start": "466400",
    "end": "468479"
  },
  {
    "text": "can do things like properly delay you",
    "start": "468479",
    "end": "470560"
  },
  {
    "text": "know set up pulsewidth modulation",
    "start": "470560",
    "end": "472280"
  },
  {
    "text": "properly Etc um so again like I said",
    "start": "472280",
    "end": "475159"
  },
  {
    "text": "before this entry symbol here tells the",
    "start": "475159",
    "end": "478080"
  },
  {
    "text": "compiler and the assembler that this",
    "start": "478080",
    "end": "480360"
  },
  {
    "text": "function is going to be located at the",
    "start": "480360",
    "end": "482199"
  },
  {
    "text": "point where the cortex m0 processor",
    "start": "482199",
    "end": "484520"
  },
  {
    "text": "expects it to be starting right um so",
    "start": "484520",
    "end": "486960"
  },
  {
    "text": "then we have this function we've",
    "start": "486960",
    "end": "488080"
  },
  {
    "text": "declared we're going to declare two",
    "start": "488080",
    "end": "491039"
  },
  {
    "text": "parts of the peripheral access crate",
    "start": "491039",
    "end": "493080"
  },
  {
    "text": "that will give us access into the actual",
    "start": "493080",
    "end": "495039"
  },
  {
    "text": "peripherals that we need to use um we",
    "start": "495039",
    "end": "497400"
  },
  {
    "text": "call unwrap on these things by the way",
    "start": "497400",
    "end": "500080"
  },
  {
    "text": "to act as an error check right so in",
    "start": "500080",
    "end": "502280"
  },
  {
    "text": "Rust if you unwrap something and it",
    "start": "502280",
    "end": "504479"
  },
  {
    "text": "returns none the board will panic and",
    "start": "504479",
    "end": "506680"
  },
  {
    "text": "that's actually good because we don't",
    "start": "506680",
    "end": "507639"
  },
  {
    "text": "want to get any further in this code if",
    "start": "507639",
    "end": "509599"
  },
  {
    "text": "we go to unwrap our peripheral access",
    "start": "509599",
    "end": "511360"
  },
  {
    "text": "crate and set up all of our stuff and it",
    "start": "511360",
    "end": "513000"
  },
  {
    "text": "breaks we need to literally kill the",
    "start": "513000",
    "end": "514320"
  },
  {
    "text": "board right there um next we actually",
    "start": "514320",
    "end": "516760"
  },
  {
    "text": "create what's known as a watchdog a",
    "start": "516760",
    "end": "518560"
  },
  {
    "text": "watchdog is a structure this idea in",
    "start": "518560",
    "end": "520399"
  },
  {
    "text": "embedded systems where it's literally a",
    "start": "520399",
    "end": "522440"
  },
  {
    "text": "dog that if you don't wake it up every",
    "start": "522440",
    "end": "524839"
  },
  {
    "text": "some set amount of time the board will",
    "start": "524839",
    "end": "526880"
  },
  {
    "text": "reset itself we do that to avoid things",
    "start": "526880",
    "end": "528720"
  },
  {
    "text": "like infinite Loops um edge cases and",
    "start": "528720",
    "end": "531160"
  },
  {
    "text": "logic we haven't thought of and we want",
    "start": "531160",
    "end": "532560"
  },
  {
    "text": "to make sure that we have code written",
    "start": "532560",
    "end": "534120"
  },
  {
    "text": "that at every set interval we feed what",
    "start": "534120",
    "end": "536760"
  },
  {
    "text": "it's called the Watchdog we actually",
    "start": "536760",
    "end": "538600"
  },
  {
    "text": "don't do that in this example but we do",
    "start": "538600",
    "end": "540360"
  },
  {
    "text": "need the Watchdog object to configure",
    "start": "540360",
    "end": "543279"
  },
  {
    "text": "our clocks so here we actually set up",
    "start": "543279",
    "end": "545959"
  },
  {
    "text": "the clocks all of this is actually B",
    "start": "545959",
    "end": "548000"
  },
  {
    "text": "plate this will never change we only",
    "start": "548000",
    "end": "549920"
  },
  {
    "text": "need to make sure we're specifying the",
    "start": "549920",
    "end": "551480"
  },
  {
    "text": "correct Crystal frequency so we can",
    "start": "551480",
    "end": "553440"
  },
  {
    "text": "configure the clocks to do things like",
    "start": "553440",
    "end": "555399"
  },
  {
    "text": "delay and we uh again unwrap this to",
    "start": "555399",
    "end": "558320"
  },
  {
    "text": "make sure that if this structure does",
    "start": "558320",
    "end": "560040"
  },
  {
    "text": "not return something it freaks out",
    "start": "560040",
    "end": "562079"
  },
  {
    "text": "because we we need to have clocks we",
    "start": "562079",
    "end": "565079"
  },
  {
    "text": "then uh create this mutable object of",
    "start": "565079",
    "end": "567920"
  },
  {
    "text": "it's a delay and again it's it's not",
    "start": "567920",
    "end": "569680"
  },
  {
    "text": "that we're doing a delay it's just an",
    "start": "569680",
    "end": "571959"
  },
  {
    "text": "object we're going to use to actually",
    "start": "571959",
    "end": "574000"
  },
  {
    "text": "conduct a delay action so the way this",
    "start": "574000",
    "end": "576880"
  },
  {
    "text": "works is we say okay from the cortex M",
    "start": "576880",
    "end": "579200"
  },
  {
    "text": "microarchitecture package there is a",
    "start": "579200",
    "end": "581000"
  },
  {
    "text": "delay type and then we pull out a new",
    "start": "581000",
    "end": "583200"
  },
  {
    "text": "instantiation of it and we just give it",
    "start": "583200",
    "end": "585360"
  },
  {
    "text": "basically again the system frequency as",
    "start": "585360",
    "end": "587680"
  },
  {
    "text": "an integer to that so that we can delay",
    "start": "587680",
    "end": "589760"
  },
  {
    "text": "in the future and we'll do that down",
    "start": "589760",
    "end": "590880"
  },
  {
    "text": "here later in the",
    "start": "590880",
    "end": "592200"
  },
  {
    "text": "loop uh this isn't really important we",
    "start": "592200",
    "end": "594200"
  },
  {
    "text": "just create a single cycle IO block that",
    "start": "594200",
    "end": "595800"
  },
  {
    "text": "controls for GPO pins this is just the",
    "start": "595800",
    "end": "597760"
  },
  {
    "text": "another structure we use to gpio um and",
    "start": "597760",
    "end": "600920"
  },
  {
    "text": "then finally kind of like the most",
    "start": "600920",
    "end": "602240"
  },
  {
    "text": "important thing out of all this this is",
    "start": "602240",
    "end": "603680"
  },
  {
    "text": "where the true like control layer comes",
    "start": "603680",
    "end": "606399"
  },
  {
    "text": "from the hardware abstraction layer we",
    "start": "606399",
    "end": "608160"
  },
  {
    "text": "reach into the Hall we reach into the",
    "start": "608160",
    "end": "609800"
  },
  {
    "text": "gpio layer and we pull out this",
    "start": "609800",
    "end": "611600"
  },
  {
    "text": "structure called pins we make a new one",
    "start": "611600",
    "end": "614120"
  },
  {
    "text": "and the idea here is that this is what",
    "start": "614120",
    "end": "616240"
  },
  {
    "text": "gives us the fine grain control over the",
    "start": "616240",
    "end": "619399"
  },
  {
    "text": "pins without doing unsafe accesses and",
    "start": "619399",
    "end": "622480"
  },
  {
    "text": "unsafe code right so here we say you",
    "start": "622480",
    "end": "625360"
  },
  {
    "text": "know we're going to use the peripheral",
    "start": "625360",
    "end": "626560"
  },
  {
    "text": "access code of iio bank0 and the pads",
    "start": "626560",
    "end": "628920"
  },
  {
    "text": "bank0 and GPI Bank Z there's only one",
    "start": "628920",
    "end": "630880"
  },
  {
    "text": "Bank in the rp240 this doesn't matter um",
    "start": "630880",
    "end": "633040"
  },
  {
    "text": "again we can reach into the",
    "start": "633040",
    "end": "633880"
  },
  {
    "text": "documentation to figure out what all",
    "start": "633880",
    "end": "635079"
  },
  {
    "text": "this does but basically we get a set of",
    "start": "635079",
    "end": "637399"
  },
  {
    "text": "pins from this call and then finally",
    "start": "637399",
    "end": "641600"
  },
  {
    "text": "like arguably the most important set of",
    "start": "641600",
    "end": "643680"
  },
  {
    "text": "lines is lines 84 through 90 in terms of",
    "start": "643680",
    "end": "646040"
  },
  {
    "text": "what this code actually does and again",
    "start": "646040",
    "end": "647360"
  },
  {
    "text": "the fact that we've been doing this in",
    "start": "647360",
    "end": "648399"
  },
  {
    "text": "Russ is pretty sweet um we are going to",
    "start": "648399",
    "end": "650959"
  },
  {
    "text": "pull the LED pin which is a type pin and",
    "start": "650959",
    "end": "653959"
  },
  {
    "text": "it's mutable it's mutable because you",
    "start": "653959",
    "end": "655160"
  },
  {
    "text": "want to be able to write to it right by",
    "start": "655160",
    "end": "656440"
  },
  {
    "text": "default if you didn't know this rust",
    "start": "656440",
    "end": "658519"
  },
  {
    "text": "variables are not writable or changeable",
    "start": "658519",
    "end": "660440"
  },
  {
    "text": "by default you have to allow them to be",
    "start": "660440",
    "end": "662040"
  },
  {
    "text": "mutable so that you can actually change",
    "start": "662040",
    "end": "663519"
  },
  {
    "text": "them and give them to people or you know",
    "start": "663519",
    "end": "665160"
  },
  {
    "text": "let them be borrowed um we say that LED",
    "start": "665160",
    "end": "667639"
  },
  {
    "text": "pin is equal to of all the pins I want",
    "start": "667639",
    "end": "670079"
  },
  {
    "text": "gpio pin 25 also I want that to be",
    "start": "670079",
    "end": "672920"
  },
  {
    "text": "converted to a push or pull output pin",
    "start": "672920",
    "end": "675440"
  },
  {
    "text": "basically that means can I push a single",
    "start": "675440",
    "end": "677880"
  },
  {
    "text": "high digital value to it to turn it on",
    "start": "677880",
    "end": "680040"
  },
  {
    "text": "and can I pull a value from it to read",
    "start": "680040",
    "end": "682680"
  },
  {
    "text": "from it but it's an output so we're not",
    "start": "682680",
    "end": "683920"
  },
  {
    "text": "going to actually worry about the the",
    "start": "683920",
    "end": "684839"
  },
  {
    "text": "pulling it's just the pushing and then",
    "start": "684839",
    "end": "686760"
  },
  {
    "text": "yeah so now that we've gotten through",
    "start": "686760",
    "end": "688079"
  },
  {
    "text": "that part we do this Loop and we say hey",
    "start": "688079",
    "end": "689880"
  },
  {
    "text": "in the loop just like we would in Python",
    "start": "689880",
    "end": "691880"
  },
  {
    "text": "right it feels pretty simple at this",
    "start": "691880",
    "end": "693120"
  },
  {
    "text": "point LED pin set high and then unwrap",
    "start": "693120",
    "end": "696399"
  },
  {
    "text": "unwrap being if it fails let us know",
    "start": "696399",
    "end": "698959"
  },
  {
    "text": "delay delay Ms we're going to delay for",
    "start": "698959",
    "end": "701279"
  },
  {
    "text": "half a second for 500 and then set it",
    "start": "701279",
    "end": "703240"
  },
  {
    "text": "low on wrap and then do it again and",
    "start": "703240",
    "end": "704839"
  },
  {
    "text": "this will run forever again we did",
    "start": "704839",
    "end": "707000"
  },
  {
    "text": "mention the Watchdog before if we had",
    "start": "707000",
    "end": "709320"
  },
  {
    "text": "activated the Watchdog we' want to do a",
    "start": "709320",
    "end": "712120"
  },
  {
    "text": "watchdog do feed in this",
    "start": "712120",
    "end": "715279"
  },
  {
    "text": "loot that would actually prevent the",
    "start": "715279",
    "end": "717360"
  },
  {
    "text": "Watchdog from freaking out because if we",
    "start": "717360",
    "end": "718720"
  },
  {
    "text": "have activ activated the Watchdog and we",
    "start": "718720",
    "end": "720279"
  },
  {
    "text": "do go into an infinite Loop it would",
    "start": "720279",
    "end": "722240"
  },
  {
    "text": "actually activate the Watchdog every",
    "start": "722240",
    "end": "724120"
  },
  {
    "text": "some set amount of time and it would",
    "start": "724120",
    "end": "725800"
  },
  {
    "text": "kill the board but I'm not sure if this",
    "start": "725800",
    "end": "727639"
  },
  {
    "text": "is actually correct I don't want to mess",
    "start": "727639",
    "end": "728800"
  },
  {
    "text": "up the code so I'm going to remove this",
    "start": "728800",
    "end": "731560"
  },
  {
    "text": "we're able to write code that compiles",
    "start": "731560",
    "end": "733160"
  },
  {
    "text": "down to a rp240 compatible set of code",
    "start": "733160",
    "end": "736639"
  },
  {
    "text": "so the question is how do we actually",
    "start": "736639",
    "end": "738000"
  },
  {
    "text": "compile it right the way we do that is",
    "start": "738000",
    "end": "740839"
  },
  {
    "start": "740000",
    "end": "868000"
  },
  {
    "text": "we can just go here we can do uh cargo",
    "start": "740839",
    "end": "743639"
  },
  {
    "text": "build tac tac release tac tac example",
    "start": "743639",
    "end": "747360"
  },
  {
    "text": "Blinky",
    "start": "747360",
    "end": "749480"
  },
  {
    "text": "so this would actually take a lot more",
    "start": "749480",
    "end": "751000"
  },
  {
    "text": "time for you to run uh for me it",
    "start": "751000",
    "end": "753600"
  },
  {
    "text": "actually took not that long that much",
    "start": "753600",
    "end": "754959"
  },
  {
    "text": "time at all because I already built the",
    "start": "754959",
    "end": "756720"
  },
  {
    "text": "entire board support package in the",
    "start": "756720",
    "end": "758040"
  },
  {
    "text": "background and then it recompiled the",
    "start": "758040",
    "end": "759440"
  },
  {
    "text": "code based on the changes that I made so",
    "start": "759440",
    "end": "761519"
  },
  {
    "text": "once you plug in your rp240 as a you",
    "start": "761519",
    "end": "765279"
  },
  {
    "text": "know bootable device you can flash code",
    "start": "765279",
    "end": "767199"
  },
  {
    "text": "into and again you do that by holding",
    "start": "767199",
    "end": "768519"
  },
  {
    "text": "the boot select button and plugging in",
    "start": "768519",
    "end": "770120"
  },
  {
    "text": "the USB uh we should be able to see it",
    "start": "770120",
    "end": "772560"
  },
  {
    "text": "show up in my VM here and I'll pull up",
    "start": "772560",
    "end": "774360"
  },
  {
    "text": "Nautilus real",
    "start": "774360",
    "end": "776279"
  },
  {
    "text": "quick yep and we have the rp240 here",
    "start": "776279",
    "end": "779839"
  },
  {
    "text": "what's cool about rust is there's this",
    "start": "779839",
    "end": "781079"
  },
  {
    "text": "idea of Runners where you know first we",
    "start": "781079",
    "end": "783079"
  },
  {
    "text": "did cargo build to create our project",
    "start": "783079",
    "end": "785800"
  },
  {
    "text": "you know compile it into the format that",
    "start": "785800",
    "end": "787600"
  },
  {
    "text": "we want and now we can do cargo run",
    "start": "787600",
    "end": "790240"
  },
  {
    "text": "which will actually execute what's",
    "start": "790240",
    "end": "791519"
  },
  {
    "text": "called a runner by default in the",
    "start": "791519",
    "end": "793399"
  },
  {
    "text": "background and put and do something with",
    "start": "793399",
    "end": "795279"
  },
  {
    "text": "our code so what we can actually do is",
    "start": "795279",
    "end": "797120"
  },
  {
    "text": "do cargo run hit enter and uh we want to",
    "start": "797120",
    "end": "800639"
  },
  {
    "text": "actually specify the example we're going",
    "start": "800639",
    "end": "802079"
  },
  {
    "text": "to run we're going you know do the cargo",
    "start": "802079",
    "end": "803800"
  },
  {
    "text": "Run for the Blinky example and this will",
    "start": "803800",
    "end": "805880"
  },
  {
    "text": "actually take the uf2 file that gets",
    "start": "805880",
    "end": "807600"
  },
  {
    "text": "created from the cargo build and put put",
    "start": "807600",
    "end": "809240"
  },
  {
    "text": "it directly onto our board oh it",
    "start": "809240",
    "end": "811480"
  },
  {
    "text": "actually we need to give it uh TCT Tac",
    "start": "811480",
    "end": "813440"
  },
  {
    "text": "release that's why it's not working cuz",
    "start": "813440",
    "end": "814760"
  },
  {
    "text": "it's going into de bug mode by default",
    "start": "814760",
    "end": "817079"
  },
  {
    "text": "there we go so we did Tac run or run tac",
    "start": "817079",
    "end": "819639"
  },
  {
    "text": "tac release the example Blinky it was",
    "start": "819639",
    "end": "821519"
  },
  {
    "text": "already built from our cargo build",
    "start": "821519",
    "end": "822800"
  },
  {
    "text": "before and then it found the uf2 uh at",
    "start": "822800",
    "end": "825760"
  },
  {
    "text": "my list location here and it put it onto",
    "start": "825760",
    "end": "827760"
  },
  {
    "text": "the board and now I'll show you guys",
    "start": "827760",
    "end": "828959"
  },
  {
    "text": "with my webcam that it is in fact",
    "start": "828959",
    "end": "830839"
  },
  {
    "text": "blinking guys I hope we learned a little",
    "start": "830839",
    "end": "832720"
  },
  {
    "text": "bit about kind of the environment that",
    "start": "832720",
    "end": "834440"
  },
  {
    "text": "we have to use when doing embedded",
    "start": "834440",
    "end": "836880"
  },
  {
    "text": "programming with rust right we got to",
    "start": "836880",
    "end": "838079"
  },
  {
    "text": "find our Hardware rtion layer we got to",
    "start": "838079",
    "end": "840120"
  },
  {
    "text": "set up our code in a way that produces",
    "start": "840120",
    "end": "842120"
  },
  {
    "text": "embedded compatible code and then use",
    "start": "842120",
    "end": "844600"
  },
  {
    "text": "that Hardware abstraction layer to set",
    "start": "844600",
    "end": "846120"
  },
  {
    "text": "up all our peripherals and then do basic",
    "start": "846120",
    "end": "847680"
  },
  {
    "text": "stuff we do in other languages you know",
    "start": "847680",
    "end": "849000"
  },
  {
    "text": "set up your Loop and blink your LED as",
    "start": "849000",
    "end": "851800"
  },
  {
    "text": "if you like this video and you want to",
    "start": "851800",
    "end": "853079"
  },
  {
    "text": "learn more do me a favor hit subscribe",
    "start": "853079",
    "end": "854639"
  },
  {
    "text": "hit like leave a comment down below and",
    "start": "854639",
    "end": "856480"
  },
  {
    "text": "I'll see you guys in the next video who",
    "start": "856480",
    "end": "858880"
  },
  {
    "text": "knows what board we'll try next take",
    "start": "858880",
    "end": "861000"
  },
  {
    "text": "care guys",
    "start": "861000",
    "end": "863880"
  },
  {
    "text": "[Music]",
    "start": "863880",
    "end": "870660"
  }
]