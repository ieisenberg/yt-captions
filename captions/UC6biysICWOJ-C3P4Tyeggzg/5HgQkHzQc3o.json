[
  {
    "text": "low level gang what is up in this video",
    "start": "160",
    "end": "3040"
  },
  {
    "text": "we're going to talk about interrupts and",
    "start": "3040",
    "end": "4560"
  },
  {
    "text": "by the end of the video you'll be able",
    "start": "4560",
    "end": "6240"
  },
  {
    "text": "to write an interrupt service routine or",
    "start": "6240",
    "end": "8160"
  },
  {
    "text": "isr for the",
    "start": "8160",
    "end": "9880"
  },
  {
    "text": "atmega328p bare metal without using the",
    "start": "9880",
    "end": "13040"
  },
  {
    "text": "arduino ide or associated libraries if",
    "start": "13040",
    "end": "16080"
  },
  {
    "text": "you haven't already hit that subscribe",
    "start": "16080",
    "end": "17680"
  },
  {
    "text": "button and go follow me on twitch i'll",
    "start": "17680",
    "end": "19439"
  },
  {
    "text": "be doing short form tutorials here and",
    "start": "19439",
    "end": "21600"
  },
  {
    "text": "longer form projects and some gaming",
    "start": "21600",
    "end": "24080"
  },
  {
    "text": "over there",
    "start": "24080",
    "end": "25199"
  },
  {
    "text": "interrupts are an effective way of",
    "start": "25199",
    "end": "26640"
  },
  {
    "text": "getting code to execute out of band from",
    "start": "26640",
    "end": "29199"
  },
  {
    "text": "your main program when certain events",
    "start": "29199",
    "end": "31279"
  },
  {
    "text": "happen instead of sleeping the cpu for a",
    "start": "31279",
    "end": "34399"
  },
  {
    "text": "thousand milliseconds or pulling for a",
    "start": "34399",
    "end": "36559"
  },
  {
    "text": "sensor to go off using interrupts you",
    "start": "36559",
    "end": "38879"
  },
  {
    "text": "can as the name implies interrupt the",
    "start": "38879",
    "end": "41360"
  },
  {
    "text": "code flow of the cpu to handle something",
    "start": "41360",
    "end": "43680"
  },
  {
    "text": "important in this video we'll use the",
    "start": "43680",
    "end": "46399"
  },
  {
    "text": "interrupt for timers on the atmega328p",
    "start": "46399",
    "end": "49840"
  },
  {
    "text": "to blink an led on and off every second",
    "start": "49840",
    "end": "52640"
  },
  {
    "text": "without using sleep okay so let's get",
    "start": "52640",
    "end": "56320"
  },
  {
    "text": "coding here you see i have a basic",
    "start": "56320",
    "end": "58239"
  },
  {
    "text": "main.c shell file no important code",
    "start": "58239",
    "end": "60719"
  },
  {
    "text": "there that'll be the code file that we",
    "start": "60719",
    "end": "62719"
  },
  {
    "text": "actually write our program into so get",
    "start": "62719",
    "end": "64559"
  },
  {
    "text": "that ready and then also i have a make",
    "start": "64559",
    "end": "66400"
  },
  {
    "text": "file here i've done this in previous",
    "start": "66400",
    "end": "68000"
  },
  {
    "text": "arduino bare metal tutorials before but",
    "start": "68000",
    "end": "70240"
  },
  {
    "text": "i'll kind of go over at a high level",
    "start": "70240",
    "end": "71520"
  },
  {
    "text": "what this makefile does essentially you",
    "start": "71520",
    "end": "73600"
  },
  {
    "text": "use the",
    "start": "73600",
    "end": "74680"
  },
  {
    "text": "avrgcc program to build your c file into",
    "start": "74680",
    "end": "78320"
  },
  {
    "text": "an avr compliant you know binary format",
    "start": "78320",
    "end": "81360"
  },
  {
    "text": "for this chip",
    "start": "81360",
    "end": "83200"
  },
  {
    "text": "and then you have to use the avr obs",
    "start": "83200",
    "end": "85759"
  },
  {
    "text": "copy tool to convert that elf that it",
    "start": "85759",
    "end": "88240"
  },
  {
    "text": "creates into an ihex file we're going to",
    "start": "88240",
    "end": "90079"
  },
  {
    "text": "call that ihex file main.hex and then",
    "start": "90079",
    "end": "92799"
  },
  {
    "text": "finally we use the avrdude avr flash",
    "start": "92799",
    "end": "96240"
  },
  {
    "text": "burning tool to use the arduino",
    "start": "96240",
    "end": "98799"
  },
  {
    "text": "bootloader spec and write our main.hex",
    "start": "98799",
    "end": "101520"
  },
  {
    "text": "file to the flash pointed to by the",
    "start": "101520",
    "end": "104320"
  },
  {
    "text": "device that lives at this path right so",
    "start": "104320",
    "end": "106320"
  },
  {
    "text": "this is the usb port that happens when i",
    "start": "106320",
    "end": "108240"
  },
  {
    "text": "plug my arduino into my computer right",
    "start": "108240",
    "end": "110560"
  },
  {
    "text": "and just this is the default but it's",
    "start": "110560",
    "end": "111840"
  },
  {
    "text": "good to specify it the baud rate is uh",
    "start": "111840",
    "end": "114000"
  },
  {
    "text": "115 200. so pretty standard stuff",
    "start": "114000",
    "end": "116719"
  },
  {
    "text": "and just to test it it all works i can",
    "start": "116719",
    "end": "118079"
  },
  {
    "text": "say make",
    "start": "118079",
    "end": "119119"
  },
  {
    "text": "builds and i can say make burn and it",
    "start": "119119",
    "end": "121439"
  },
  {
    "text": "converts that binary to an ihex file",
    "start": "121439",
    "end": "123840"
  },
  {
    "text": "uses avr dude and then we get prompted",
    "start": "123840",
    "end": "126000"
  },
  {
    "text": "with the the burn of the file and i'll",
    "start": "126000",
    "end": "127759"
  },
  {
    "text": "put my camera show you guys real quick",
    "start": "127759",
    "end": "129440"
  },
  {
    "text": "that now i've burned that flash file to",
    "start": "129440",
    "end": "132080"
  },
  {
    "text": "my device and there's nothing happening",
    "start": "132080",
    "end": "133680"
  },
  {
    "text": "there's no leds blinking there's nothing",
    "start": "133680",
    "end": "135360"
  },
  {
    "text": "happening so we're good we're at a good",
    "start": "135360",
    "end": "137040"
  },
  {
    "text": "default state so in this file like i",
    "start": "137040",
    "end": "139760"
  },
  {
    "text": "said in the previous part of the video",
    "start": "139760",
    "end": "141280"
  },
  {
    "text": "we're going to be making a timer",
    "start": "141280",
    "end": "143360"
  },
  {
    "text": "interrupt happen at a one second",
    "start": "143360",
    "end": "145280"
  },
  {
    "text": "interval to blink an led this is",
    "start": "145280",
    "end": "147440"
  },
  {
    "text": "different than the normal way you do",
    "start": "147440",
    "end": "148640"
  },
  {
    "text": "this where you use a loop and sleep",
    "start": "148640",
    "end": "150560"
  },
  {
    "text": "right an interrupt completely",
    "start": "150560",
    "end": "153280"
  },
  {
    "text": "preempts the instruction counter of the",
    "start": "153280",
    "end": "155920"
  },
  {
    "text": "arduino and says hey this is more",
    "start": "155920",
    "end": "157920"
  },
  {
    "text": "important so we're going to set that up",
    "start": "157920",
    "end": "159680"
  },
  {
    "text": "in the following way",
    "start": "159680",
    "end": "161360"
  },
  {
    "text": "when doing any kind of avr programming",
    "start": "161360",
    "end": "163200"
  },
  {
    "text": "you first want to include the avr.io or",
    "start": "163200",
    "end": "165760"
  },
  {
    "text": "the io.h header that'll explain to the",
    "start": "165760",
    "end": "168400"
  },
  {
    "text": "compiler where all of the ports and data",
    "start": "168400",
    "end": "171360"
  },
  {
    "text": "direction register stuff is so we can",
    "start": "171360",
    "end": "172879"
  },
  {
    "text": "actually turn the led on and off and",
    "start": "172879",
    "end": "175120"
  },
  {
    "text": "then obviously we're doing a an",
    "start": "175120",
    "end": "176720"
  },
  {
    "text": "interrupt tutorial so we need to include",
    "start": "176720",
    "end": "178560"
  },
  {
    "text": "the interrupt dot h header that",
    "start": "178560",
    "end": "180800"
  },
  {
    "text": "describes the compiler where to find",
    "start": "180800",
    "end": "182319"
  },
  {
    "text": "files for interrupt service routines",
    "start": "182319",
    "end": "184959"
  },
  {
    "text": "right so if we do an interrupt we need",
    "start": "184959",
    "end": "186879"
  },
  {
    "text": "to tell",
    "start": "186879",
    "end": "187840"
  },
  {
    "text": "the board what to do during that",
    "start": "187840",
    "end": "190000"
  },
  {
    "text": "interrupt and that is called an isr or",
    "start": "190000",
    "end": "192159"
  },
  {
    "text": "an interrupt service routine",
    "start": "192159",
    "end": "194080"
  },
  {
    "text": "okay so now in our main file you know we",
    "start": "194080",
    "end": "196319"
  },
  {
    "text": "need to first enable the led to be",
    "start": "196319",
    "end": "199120"
  },
  {
    "text": "turned on and the way we do that is we",
    "start": "199120",
    "end": "200959"
  },
  {
    "text": "say that the data direction register for",
    "start": "200959",
    "end": "202879"
  },
  {
    "text": "port b",
    "start": "202879",
    "end": "204319"
  },
  {
    "text": "turn on the bit",
    "start": "204319",
    "end": "206400"
  },
  {
    "text": "uh bv",
    "start": "206400",
    "end": "208120"
  },
  {
    "text": "ddb5 so you know pin 13 which is the pin",
    "start": "208120",
    "end": "211599"
  },
  {
    "text": "on the arduino that the the led lives is",
    "start": "211599",
    "end": "214319"
  },
  {
    "text": "actually on uh port b",
    "start": "214319",
    "end": "217120"
  },
  {
    "text": "port five and we're going to turn that",
    "start": "217120",
    "end": "218799"
  },
  {
    "text": "bit on so now it's known as an output",
    "start": "218799",
    "end": "221120"
  },
  {
    "text": "right so this enables pin 13 to be",
    "start": "221120",
    "end": "223599"
  },
  {
    "text": "written to",
    "start": "223599",
    "end": "225280"
  },
  {
    "text": "okay so now gets to the actual timer",
    "start": "225280",
    "end": "227920"
  },
  {
    "text": "part right so when you're setting up",
    "start": "227920",
    "end": "229360"
  },
  {
    "text": "timers there are various registers",
    "start": "229360",
    "end": "231360"
  },
  {
    "text": "inside the arduino that describe to you",
    "start": "231360",
    "end": "234159"
  },
  {
    "text": "bits you can set to make the timer",
    "start": "234159",
    "end": "236400"
  },
  {
    "text": "operate in a certain kind of way we're",
    "start": "236400",
    "end": "238400"
  },
  {
    "text": "going to be using an overflow timer that",
    "start": "238400",
    "end": "241519"
  },
  {
    "text": "will flip in isr every time a certain",
    "start": "241519",
    "end": "244959"
  },
  {
    "text": "internal value is overflowed right and",
    "start": "244959",
    "end": "247840"
  },
  {
    "text": "that overflow value is called t counter",
    "start": "247840",
    "end": "250159"
  },
  {
    "text": "one we're gonna set it to zero right now",
    "start": "250159",
    "end": "252080"
  },
  {
    "text": "this is actually the wrong value we're",
    "start": "252080",
    "end": "253519"
  },
  {
    "text": "going to change that and i'll show you",
    "start": "253519",
    "end": "255040"
  },
  {
    "text": "the math on how to change that in a",
    "start": "255040",
    "end": "256560"
  },
  {
    "text": "minute but for right now we're going to",
    "start": "256560",
    "end": "258400"
  },
  {
    "text": "set the default overflow value to zero",
    "start": "258400",
    "end": "261359"
  },
  {
    "text": "so basically what's happening is every",
    "start": "261359",
    "end": "264000"
  },
  {
    "text": "predetermined interval the computer is",
    "start": "264000",
    "end": "267840"
  },
  {
    "text": "incrementing this value by one right",
    "start": "267840",
    "end": "270720"
  },
  {
    "text": "right now the chip's processor is",
    "start": "270720",
    "end": "272960"
  },
  {
    "text": "operating at 16 megahertz we don't want",
    "start": "272960",
    "end": "275919"
  },
  {
    "text": "to count this up every 16 megahertz",
    "start": "275919",
    "end": "278160"
  },
  {
    "text": "because that's actually way too fast we",
    "start": "278160",
    "end": "279840"
  },
  {
    "text": "can't get the granularity of time that",
    "start": "279840",
    "end": "281919"
  },
  {
    "text": "we want to one second using 16 megahertz",
    "start": "281919",
    "end": "285120"
  },
  {
    "text": "so we need to actually down scale that",
    "start": "285120",
    "end": "287120"
  },
  {
    "text": "by what's called a prescaler so we'll",
    "start": "287120",
    "end": "290000"
  },
  {
    "text": "enable the prescaler on the timer",
    "start": "290000",
    "end": "292639"
  },
  {
    "text": "by using the timer control register for",
    "start": "292639",
    "end": "296160"
  },
  {
    "text": "timer 1 part b and i'll show you the",
    "start": "296160",
    "end": "298880"
  },
  {
    "text": "data sheet and have the data sheet in",
    "start": "298880",
    "end": "300160"
  },
  {
    "text": "the description below and basically what",
    "start": "300160",
    "end": "302160"
  },
  {
    "text": "we can do is we can set a prescaler",
    "start": "302160",
    "end": "304960"
  },
  {
    "text": "value and i'll show you what that means",
    "start": "304960",
    "end": "306240"
  },
  {
    "text": "in a second using this line of code",
    "start": "306240",
    "end": "310720"
  },
  {
    "text": "cs10 and cs12",
    "start": "310720",
    "end": "312960"
  },
  {
    "text": "so what this does is it sets the",
    "start": "312960",
    "end": "315680"
  },
  {
    "text": "prescaler",
    "start": "315680",
    "end": "317199"
  },
  {
    "text": "to 1024 so basically instead of the",
    "start": "317199",
    "end": "320560"
  },
  {
    "text": "counter ticking every 16 megahertz it",
    "start": "320560",
    "end": "324160"
  },
  {
    "text": "ticks 16 megahertz divided by 1024 so we",
    "start": "324160",
    "end": "327919"
  },
  {
    "text": "have to count to 1024 before we actually",
    "start": "327919",
    "end": "331440"
  },
  {
    "text": "tick up right so now our effective clock",
    "start": "331440",
    "end": "334080"
  },
  {
    "text": "rate is 16 megahertz over 1024 which is",
    "start": "334080",
    "end": "337600"
  },
  {
    "text": "about 15625 and that that number is very",
    "start": "337600",
    "end": "340400"
  },
  {
    "text": "important we got to hold on to this and",
    "start": "340400",
    "end": "341600"
  },
  {
    "text": "keep that in our head for a little bit",
    "start": "341600",
    "end": "342720"
  },
  {
    "text": "okay so 1565",
    "start": "342720",
    "end": "345280"
  },
  {
    "text": "hertz is our new effective clock rate",
    "start": "345280",
    "end": "348160"
  },
  {
    "text": "okay so now that we've pre-scaled the",
    "start": "348160",
    "end": "350320"
  },
  {
    "text": "timer to get it into a granular time",
    "start": "350320",
    "end": "352160"
  },
  {
    "text": "control that we want we now need to set",
    "start": "352160",
    "end": "354479"
  },
  {
    "text": "another part of the timer control",
    "start": "354479",
    "end": "356319"
  },
  {
    "text": "register to make sure that we're only",
    "start": "356319",
    "end": "358000"
  },
  {
    "text": "doing overflow operations you can",
    "start": "358000",
    "end": "359680"
  },
  {
    "text": "actually do a lot of cool stuff",
    "start": "359680",
    "end": "361680"
  },
  {
    "text": "with timers you can do comparison timers",
    "start": "361680",
    "end": "364000"
  },
  {
    "text": "and like uptick down tick timers all",
    "start": "364000",
    "end": "365919"
  },
  {
    "text": "we're gonna do is an overflow timer so",
    "start": "365919",
    "end": "368160"
  },
  {
    "text": "we need to disable all other features of",
    "start": "368160",
    "end": "370639"
  },
  {
    "text": "the timer with this line here this sets",
    "start": "370639",
    "end": "372960"
  },
  {
    "text": "basically hey don't enable any other",
    "start": "372960",
    "end": "374960"
  },
  {
    "text": "features",
    "start": "374960",
    "end": "376319"
  },
  {
    "text": "and then all we have to do now is the",
    "start": "376319",
    "end": "379680"
  },
  {
    "text": "timer control register one we need to",
    "start": "379680",
    "end": "382800"
  },
  {
    "text": "enable",
    "start": "382800",
    "end": "384160"
  },
  {
    "text": "the overflow interrupt so timer overflow",
    "start": "384160",
    "end": "387280"
  },
  {
    "text": "interrupt enable one right this allows",
    "start": "387280",
    "end": "390639"
  },
  {
    "text": "the cpu to be interrupted by the",
    "start": "390639",
    "end": "393840"
  },
  {
    "text": "overflow condition of this counter and",
    "start": "393840",
    "end": "396080"
  },
  {
    "text": "then finally now that we've enabled that",
    "start": "396080",
    "end": "397919"
  },
  {
    "text": "interrupt in our controller we need to",
    "start": "397919",
    "end": "399919"
  },
  {
    "text": "say sei",
    "start": "399919",
    "end": "402479"
  },
  {
    "text": "or set interrupts enabled before or set",
    "start": "402479",
    "end": "406400"
  },
  {
    "text": "enable interrupts rather before we ran",
    "start": "406400",
    "end": "408400"
  },
  {
    "text": "this line of code we enabled the timer",
    "start": "408400",
    "end": "410560"
  },
  {
    "text": "interrupt but the entire cpu wasn't able",
    "start": "410560",
    "end": "414000"
  },
  {
    "text": "to be interrupted it would not have",
    "start": "414000",
    "end": "415199"
  },
  {
    "text": "responded to a single isr now at this",
    "start": "415199",
    "end": "418400"
  },
  {
    "text": "point after this line it is able to be",
    "start": "418400",
    "end": "421039"
  },
  {
    "text": "interrupted",
    "start": "421039",
    "end": "422400"
  },
  {
    "text": "and now we're going to say an infinite",
    "start": "422400",
    "end": "423759"
  },
  {
    "text": "loop",
    "start": "423759",
    "end": "425280"
  },
  {
    "text": "where nothing happens right",
    "start": "425280",
    "end": "427120"
  },
  {
    "text": "so essentially this is going to run",
    "start": "427120",
    "end": "429440"
  },
  {
    "text": "infinitely and do nothing there will be",
    "start": "429440",
    "end": "431360"
  },
  {
    "text": "knobs in here and all it will respond to",
    "start": "431360",
    "end": "434400"
  },
  {
    "text": "is this",
    "start": "434400",
    "end": "435520"
  },
  {
    "text": "interrupt triggering the cpu to do",
    "start": "435520",
    "end": "437680"
  },
  {
    "text": "something so the question is what does",
    "start": "437680",
    "end": "439840"
  },
  {
    "text": "it do right where do we actually send",
    "start": "439840",
    "end": "441840"
  },
  {
    "text": "the processor to go so what we have to",
    "start": "441840",
    "end": "443840"
  },
  {
    "text": "do actually is describe an isr or an",
    "start": "443840",
    "end": "446479"
  },
  {
    "text": "interrupt service routine",
    "start": "446479",
    "end": "448720"
  },
  {
    "text": "that is the isr for the timer 1",
    "start": "448720",
    "end": "451440"
  },
  {
    "text": "overflow",
    "start": "451440",
    "end": "452800"
  },
  {
    "text": "vector",
    "start": "452800",
    "end": "454720"
  },
  {
    "text": "oh not prescaler so this function is",
    "start": "454720",
    "end": "457759"
  },
  {
    "text": "what's going to get ran when this",
    "start": "457759",
    "end": "460400"
  },
  {
    "text": "counter gets overflowed to",
    "start": "460400",
    "end": "463039"
  },
  {
    "text": "five three six right so i'll describe",
    "start": "463039",
    "end": "464800"
  },
  {
    "text": "that here this has a max value of six",
    "start": "464800",
    "end": "469360"
  },
  {
    "text": "five five three oh three six or a three",
    "start": "469360",
    "end": "472560"
  },
  {
    "text": "five rather so when it gets to six five",
    "start": "472560",
    "end": "474160"
  },
  {
    "text": "five three six it will actually overflow",
    "start": "474160",
    "end": "476720"
  },
  {
    "text": "and trigger our isr",
    "start": "476720",
    "end": "478400"
  },
  {
    "text": "and this is the point in the code where",
    "start": "478400",
    "end": "479759"
  },
  {
    "text": "we're going to actually flip the bit",
    "start": "479759",
    "end": "481759"
  },
  {
    "text": "that changes the led right so port b",
    "start": "481759",
    "end": "486639"
  },
  {
    "text": "is equal to",
    "start": "486639",
    "end": "488479"
  },
  {
    "text": "our x4 equals so we're going to flip it",
    "start": "488479",
    "end": "490240"
  },
  {
    "text": "right we're going to go 1 to zero or",
    "start": "490240",
    "end": "491599"
  },
  {
    "text": "zero to one the bit for",
    "start": "491599",
    "end": "493919"
  },
  {
    "text": "uh port b",
    "start": "493919",
    "end": "495440"
  },
  {
    "text": "five",
    "start": "495440",
    "end": "496319"
  },
  {
    "text": "right",
    "start": "496319",
    "end": "497120"
  },
  {
    "text": "and then we have to reset our counter to",
    "start": "497120",
    "end": "499039"
  },
  {
    "text": "some value and again zero is the wrong",
    "start": "499039",
    "end": "500960"
  },
  {
    "text": "value we just need to set it we need to",
    "start": "500960",
    "end": "502479"
  },
  {
    "text": "set it back so we don't set it back the",
    "start": "502479",
    "end": "504240"
  },
  {
    "text": "timing will be off okay so in theory if",
    "start": "504240",
    "end": "507120"
  },
  {
    "text": "i flash this to the board it will make",
    "start": "507120",
    "end": "509440"
  },
  {
    "text": "the led flip on and off at some rate the",
    "start": "509440",
    "end": "512320"
  },
  {
    "text": "problem is our goal here",
    "start": "512320",
    "end": "515120"
  },
  {
    "text": "goal is to",
    "start": "515120",
    "end": "516800"
  },
  {
    "text": "flip led every second",
    "start": "516800",
    "end": "519360"
  },
  {
    "text": "this is not going to be every second",
    "start": "519360",
    "end": "521599"
  },
  {
    "text": "right because if i said the effective",
    "start": "521599",
    "end": "523680"
  },
  {
    "text": "clock rate is this times a second",
    "start": "523680",
    "end": "527160"
  },
  {
    "text": "1565 hertz right but we want to go and",
    "start": "527160",
    "end": "530800"
  },
  {
    "text": "make it a second that's not how the math",
    "start": "530800",
    "end": "533200"
  },
  {
    "text": "is going to play out the way the math",
    "start": "533200",
    "end": "534800"
  },
  {
    "text": "actually plays out to get it to be a",
    "start": "534800",
    "end": "536399"
  },
  {
    "text": "second is the max value of the counter",
    "start": "536399",
    "end": "539440"
  },
  {
    "text": "six five five three five",
    "start": "539440",
    "end": "541920"
  },
  {
    "text": "minus the effective clock rate",
    "start": "541920",
    "end": "545040"
  },
  {
    "text": "divided by the prescaler",
    "start": "545040",
    "end": "547680"
  },
  {
    "text": "i'll take this and i'll copy it down",
    "start": "547680",
    "end": "549200"
  },
  {
    "text": "here too",
    "start": "549200",
    "end": "551680"
  },
  {
    "text": "i'm going to pound to find the clock",
    "start": "551920",
    "end": "553760"
  },
  {
    "text": "rate as well cpu is 16.",
    "start": "553760",
    "end": "557760"
  },
  {
    "text": "because what's happening is we need to",
    "start": "557760",
    "end": "560160"
  },
  {
    "text": "pre-empt the timer to only have",
    "start": "560160",
    "end": "563519"
  },
  {
    "text": "this many clock rate left to go right if",
    "start": "563519",
    "end": "566480"
  },
  {
    "text": "that's the clock rate per second we only",
    "start": "566480",
    "end": "568240"
  },
  {
    "text": "want to count that many times before the",
    "start": "568240",
    "end": "570880"
  },
  {
    "text": "clock goes off before the timer goes off",
    "start": "570880",
    "end": "572959"
  },
  {
    "text": "so we say",
    "start": "572959",
    "end": "574080"
  },
  {
    "text": "max value minus the clock rate divided",
    "start": "574080",
    "end": "577279"
  },
  {
    "text": "by the prescaler and again the",
    "start": "577279",
    "end": "578480"
  },
  {
    "text": "pre-schedule right now is 1024. so this",
    "start": "578480",
    "end": "580720"
  },
  {
    "text": "effectively this gets us a number around",
    "start": "580720",
    "end": "582800"
  },
  {
    "text": "49 000 that is the default timer for the",
    "start": "582800",
    "end": "586800"
  },
  {
    "text": "chip to take so essentially set the",
    "start": "586800",
    "end": "588720"
  },
  {
    "text": "timer to some default value enable an",
    "start": "588720",
    "end": "591279"
  },
  {
    "text": "overflow interrupt let the interop run",
    "start": "591279",
    "end": "593920"
  },
  {
    "text": "put the board into an infinite loop and",
    "start": "593920",
    "end": "595440"
  },
  {
    "text": "then once that interrupt gets triggered",
    "start": "595440",
    "end": "598000"
  },
  {
    "text": "we go here to the isr and xor the led",
    "start": "598000",
    "end": "600959"
  },
  {
    "text": "and set that bit either on or off so",
    "start": "600959",
    "end": "602800"
  },
  {
    "text": "we're gonna make it real quick and test",
    "start": "602800",
    "end": "604399"
  },
  {
    "text": "it out",
    "start": "604399",
    "end": "606720"
  },
  {
    "text": "and boom there we go our led is now",
    "start": "607760",
    "end": "609920"
  },
  {
    "text": "blinking on and off using an isr or an",
    "start": "609920",
    "end": "613040"
  },
  {
    "text": "interrupt service routine to handle the",
    "start": "613040",
    "end": "615440"
  },
  {
    "text": "overflow of a timer in the cpu on the",
    "start": "615440",
    "end": "618399"
  },
  {
    "text": "arduino guys if you liked that video if",
    "start": "618399",
    "end": "620720"
  },
  {
    "text": "you learned something or if you just you",
    "start": "620720",
    "end": "622240"
  },
  {
    "text": "know wanna wanna help me out hit like",
    "start": "622240",
    "end": "624240"
  },
  {
    "text": "hit subscribe follow me on twitch and",
    "start": "624240",
    "end": "626000"
  },
  {
    "text": "i'll see y'all in the next video take",
    "start": "626000",
    "end": "627760"
  },
  {
    "text": "care",
    "start": "627760",
    "end": "630760"
  },
  {
    "text": "[Music]",
    "start": "631200",
    "end": "638079"
  },
  {
    "text": "you",
    "start": "638079",
    "end": "640160"
  }
]