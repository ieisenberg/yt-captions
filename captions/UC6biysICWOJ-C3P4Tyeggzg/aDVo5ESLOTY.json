[
  {
    "text": "what happens when an arm processor",
    "start": "160",
    "end": "2000"
  },
  {
    "text": "starts",
    "start": "2000",
    "end": "2960"
  },
  {
    "text": "if the device has an unrecoverable fault",
    "start": "2960",
    "end": "5200"
  },
  {
    "text": "how does it know what to do if the board",
    "start": "5200",
    "end": "7279"
  },
  {
    "text": "receives a timer or a cystic interrupt",
    "start": "7279",
    "end": "9840"
  },
  {
    "text": "what code does it run we'll be talking",
    "start": "9840",
    "end": "11440"
  },
  {
    "text": "about this and more today on low level",
    "start": "11440",
    "end": "14080"
  },
  {
    "text": "learning",
    "start": "14080",
    "end": "15040"
  },
  {
    "text": "what is up guys welcome back topic",
    "start": "15040",
    "end": "16480"
  },
  {
    "text": "today's video is the interrupt vector",
    "start": "16480",
    "end": "18240"
  },
  {
    "text": "table if you're new to the channel i've",
    "start": "18240",
    "end": "19760"
  },
  {
    "text": "been working on a custom rtos on twitch",
    "start": "19760",
    "end": "22320"
  },
  {
    "text": "link in the description below the rtos",
    "start": "22320",
    "end": "24080"
  },
  {
    "text": "is designed to work on the stm32 blue",
    "start": "24080",
    "end": "26640"
  },
  {
    "text": "pill which is based off of the arm",
    "start": "26640",
    "end": "28720"
  },
  {
    "text": "cortex m3 processor",
    "start": "28720",
    "end": "30960"
  },
  {
    "text": "this project has led me to some pretty",
    "start": "30960",
    "end": "32480"
  },
  {
    "text": "interesting discoveries about how the",
    "start": "32480",
    "end": "34000"
  },
  {
    "text": "cortex m3 works specifically regarding",
    "start": "34000",
    "end": "36559"
  },
  {
    "text": "the interrupt vector table and there's",
    "start": "36559",
    "end": "38160"
  },
  {
    "text": "an interesting twist at the end of the",
    "start": "38160",
    "end": "39440"
  },
  {
    "text": "video so make sure you stick around",
    "start": "39440",
    "end": "41440"
  },
  {
    "text": "the inner vector table is like it sounds",
    "start": "41440",
    "end": "43920"
  },
  {
    "text": "a table of vectors for the processor to",
    "start": "43920",
    "end": "46079"
  },
  {
    "text": "execute when it encounters an interrupt",
    "start": "46079",
    "end": "48480"
  },
  {
    "text": "well what does that mean",
    "start": "48480",
    "end": "50079"
  },
  {
    "text": "the interrupt vector table is literally",
    "start": "50079",
    "end": "52000"
  },
  {
    "text": "just an array of pointers that point to",
    "start": "52000",
    "end": "54559"
  },
  {
    "text": "code that gets ran when specific events",
    "start": "54559",
    "end": "57280"
  },
  {
    "text": "on the board happen the purpose of each",
    "start": "57280",
    "end": "59680"
  },
  {
    "text": "vector is predetermined by the",
    "start": "59680",
    "end": "61520"
  },
  {
    "text": "developers of the cortex m3 spec and is",
    "start": "61520",
    "end": "64478"
  },
  {
    "text": "explained in the cortex m3 developer",
    "start": "64479",
    "end": "66720"
  },
  {
    "text": "guide which i'll put a link to right",
    "start": "66720",
    "end": "68799"
  },
  {
    "text": "here and also in the description below",
    "start": "68799",
    "end": "71119"
  },
  {
    "text": "by default the location of the ivt is",
    "start": "71119",
    "end": "73840"
  },
  {
    "text": "the location zero on the board this",
    "start": "73840",
    "end": "76320"
  },
  {
    "text": "location can be changed by updating the",
    "start": "76320",
    "end": "78560"
  },
  {
    "text": "vtor register or vector table offset",
    "start": "78560",
    "end": "81200"
  },
  {
    "text": "register to give the board a new",
    "start": "81200",
    "end": "83280"
  },
  {
    "text": "location to look for its set of vectors",
    "start": "83280",
    "end": "85759"
  },
  {
    "text": "so looking at this chart here for",
    "start": "85759",
    "end": "87360"
  },
  {
    "text": "example the reset vector is the pointer",
    "start": "87360",
    "end": "90079"
  },
  {
    "text": "to code that the board will execute when",
    "start": "90079",
    "end": "92320"
  },
  {
    "text": "the cortex m3 is powered on so when you",
    "start": "92320",
    "end": "95119"
  },
  {
    "text": "compile the program to be flashed to the",
    "start": "95119",
    "end": "97040"
  },
  {
    "text": "blue pill for example the output binary",
    "start": "97040",
    "end": "99520"
  },
  {
    "text": "contains a reset vector pointing to code",
    "start": "99520",
    "end": "102320"
  },
  {
    "text": "that initializes the board and then",
    "start": "102320",
    "end": "104159"
  },
  {
    "text": "eventually calls your code or for",
    "start": "104159",
    "end": "106720"
  },
  {
    "text": "another example the memory management",
    "start": "106720",
    "end": "108560"
  },
  {
    "text": "fault handler is code that the board",
    "start": "108560",
    "end": "110560"
  },
  {
    "text": "will execute when it makes a memory",
    "start": "110560",
    "end": "112399"
  },
  {
    "text": "access error okay so now that we have",
    "start": "112399",
    "end": "114320"
  },
  {
    "text": "the idea laid out let me show you guys",
    "start": "114320",
    "end": "115920"
  },
  {
    "text": "how to code up a simple arm cortex m3",
    "start": "115920",
    "end": "119520"
  },
  {
    "text": "interrupt vector table using the bare",
    "start": "119520",
    "end": "121280"
  },
  {
    "text": "metal arm gcc build chain all right so",
    "start": "121280",
    "end": "124079"
  },
  {
    "text": "to make this interrupt vector table work",
    "start": "124079",
    "end": "126079"
  },
  {
    "text": "we have to do a few things step one we",
    "start": "126079",
    "end": "128399"
  },
  {
    "text": "are in our vector.s file right now this",
    "start": "128399",
    "end": "130640"
  },
  {
    "text": "is the assembly code that will contain",
    "start": "130640",
    "end": "132480"
  },
  {
    "text": "the code that contains both our",
    "start": "132480",
    "end": "134480"
  },
  {
    "text": "interrupt vector table and our main",
    "start": "134480",
    "end": "136560"
  },
  {
    "text": "routine so step one we have to tell the",
    "start": "136560",
    "end": "138720"
  },
  {
    "text": "assembler we're in the vectors section",
    "start": "138720",
    "end": "140720"
  },
  {
    "text": "by saying we're in the vector section",
    "start": "140720",
    "end": "142160"
  },
  {
    "text": "that'll tell the linker where to put the",
    "start": "142160",
    "end": "144480"
  },
  {
    "text": "rest of the section below it at the",
    "start": "144480",
    "end": "146480"
  },
  {
    "text": "right location on the board so it knows",
    "start": "146480",
    "end": "148400"
  },
  {
    "text": "where the reset vector lives",
    "start": "148400",
    "end": "150800"
  },
  {
    "text": "next we'll say that this is the sp",
    "start": "150800",
    "end": "153440"
  },
  {
    "text": "vector right so if you look at the chart",
    "start": "153440",
    "end": "154959"
  },
  {
    "text": "here that'll pull it from the",
    "start": "154959",
    "end": "156000"
  },
  {
    "text": "developer's manual the first entry in",
    "start": "156000",
    "end": "158400"
  },
  {
    "text": "the ivt is going to be the default value",
    "start": "158400",
    "end": "160640"
  },
  {
    "text": "of sp and we'll make that the word zero",
    "start": "160640",
    "end": "162959"
  },
  {
    "text": "this should be a proper address in ram",
    "start": "162959",
    "end": "164720"
  },
  {
    "text": "i'm just not going to solve that problem",
    "start": "164720",
    "end": "166080"
  },
  {
    "text": "right now",
    "start": "166080",
    "end": "166959"
  },
  {
    "text": "so next is going to be the reset vector",
    "start": "166959",
    "end": "169200"
  },
  {
    "text": "right again we're using the document",
    "start": "169200",
    "end": "171360"
  },
  {
    "text": "from the developer manual to figure that",
    "start": "171360",
    "end": "173120"
  },
  {
    "text": "out but the next one is reset so this",
    "start": "173120",
    "end": "174720"
  },
  {
    "text": "will contain the address of the function",
    "start": "174720",
    "end": "177840"
  },
  {
    "text": "that our board goes to when it resets",
    "start": "177840",
    "end": "180000"
  },
  {
    "text": "we're going to go to",
    "start": "180000",
    "end": "181599"
  },
  {
    "text": "the address of main right you know the",
    "start": "181599",
    "end": "183680"
  },
  {
    "text": "function we want to call when the board",
    "start": "183680",
    "end": "185599"
  },
  {
    "text": "turns on so now that we've gotten done",
    "start": "185599",
    "end": "187760"
  },
  {
    "text": "with all of our vectors and again you",
    "start": "187760",
    "end": "188959"
  },
  {
    "text": "can go down the whole list and do your",
    "start": "188959",
    "end": "190560"
  },
  {
    "text": "you know your non-mask will interrupt",
    "start": "190560",
    "end": "192000"
  },
  {
    "text": "your hard fault your bus fault and go",
    "start": "192000",
    "end": "193599"
  },
  {
    "text": "down the list and do them i'm just not",
    "start": "193599",
    "end": "195280"
  },
  {
    "text": "going to solve that right now because it",
    "start": "195280",
    "end": "196480"
  },
  {
    "text": "doesn't really matter um next so this is",
    "start": "196480",
    "end": "198800"
  },
  {
    "text": "the section for vectors this lives at",
    "start": "198800",
    "end": "200800"
  },
  {
    "text": "one location the location is address",
    "start": "200800",
    "end": "202959"
  },
  {
    "text": "zero on the cortex m3 uh here on line",
    "start": "202959",
    "end": "205599"
  },
  {
    "text": "eight",
    "start": "205599",
    "end": "206560"
  },
  {
    "text": "we're making a new section for text text",
    "start": "206560",
    "end": "208480"
  },
  {
    "text": "is the code that actually gets ran on",
    "start": "208480",
    "end": "210239"
  },
  {
    "text": "our board and that lives at a different",
    "start": "210239",
    "end": "212159"
  },
  {
    "text": "location in memory what we're gonna do",
    "start": "212159",
    "end": "214080"
  },
  {
    "text": "is we're gonna put it into thumb mode",
    "start": "214080",
    "end": "215440"
  },
  {
    "text": "because the cortex m3 does run in a",
    "start": "215440",
    "end": "217680"
  },
  {
    "text": "thumb state check out the video linked",
    "start": "217680",
    "end": "219280"
  },
  {
    "text": "here for the idea of what thumb does um",
    "start": "219280",
    "end": "221840"
  },
  {
    "text": "and after we set it up to be thumb mode",
    "start": "221840",
    "end": "223519"
  },
  {
    "text": "we're gonna define our function right",
    "start": "223519",
    "end": "224879"
  },
  {
    "text": "function main and for now we're just",
    "start": "224879",
    "end": "226319"
  },
  {
    "text": "going to infinitely loop back to main i",
    "start": "226319",
    "end": "227920"
  },
  {
    "text": "just want to show you guys the idea here",
    "start": "227920",
    "end": "229760"
  },
  {
    "text": "right and then so because we are in",
    "start": "229760",
    "end": "231599"
  },
  {
    "text": "thumb mode one thing we need to check",
    "start": "231599",
    "end": "233360"
  },
  {
    "text": "out actually if i were to compile this",
    "start": "233360",
    "end": "237040"
  },
  {
    "text": "you know we get an error don't worry",
    "start": "237040",
    "end": "238159"
  },
  {
    "text": "about that that's just a little warning",
    "start": "238159",
    "end": "239519"
  },
  {
    "text": "that we didn't define the start symbol",
    "start": "239519",
    "end": "240799"
  },
  {
    "text": "it's not a big deal if we object dump",
    "start": "240799",
    "end": "243280"
  },
  {
    "text": "this you see we get a few things right",
    "start": "243280",
    "end": "245519"
  },
  {
    "text": "so our code lives at hex address 8000",
    "start": "245519",
    "end": "248560"
  },
  {
    "text": "and our vector table is correct our",
    "start": "248560",
    "end": "250080"
  },
  {
    "text": "vector table lives at address zero and",
    "start": "250080",
    "end": "252159"
  },
  {
    "text": "the reset vector is also eight thousand",
    "start": "252159",
    "end": "255519"
  },
  {
    "text": "now that's actually problematic because",
    "start": "255519",
    "end": "257919"
  },
  {
    "text": "this is a thumb mode address notice the",
    "start": "257919",
    "end": "260320"
  },
  {
    "text": "two bytes for instructions and not the",
    "start": "260320",
    "end": "262000"
  },
  {
    "text": "four but this is not a thumb mode",
    "start": "262000",
    "end": "264720"
  },
  {
    "text": "address so to actually fix that and make",
    "start": "264720",
    "end": "266320"
  },
  {
    "text": "it so that our our vector table doesn't",
    "start": "266320",
    "end": "268240"
  },
  {
    "text": "crash as well we need to increase main",
    "start": "268240",
    "end": "271440"
  },
  {
    "text": "to one so by now making it eight",
    "start": "271440",
    "end": "273520"
  },
  {
    "text": "thousand and one we'll do that real",
    "start": "273520",
    "end": "274960"
  },
  {
    "text": "quick and i'll show you guys",
    "start": "274960",
    "end": "277520"
  },
  {
    "text": "by making it eight thousand and one that",
    "start": "277520",
    "end": "279680"
  },
  {
    "text": "tells the reset vector that the vector",
    "start": "279680",
    "end": "281600"
  },
  {
    "text": "is going to be a thumb address and",
    "start": "281600",
    "end": "283840"
  },
  {
    "text": "that's actually a requirement in the",
    "start": "283840",
    "end": "285520"
  },
  {
    "text": "cortex m3 manual that all ivt entries",
    "start": "285520",
    "end": "289360"
  },
  {
    "text": "for the core m3 are set to thumb",
    "start": "289360",
    "end": "291759"
  },
  {
    "text": "addresses the exception being obviously",
    "start": "291759",
    "end": "293360"
  },
  {
    "text": "the",
    "start": "293360",
    "end": "294160"
  },
  {
    "text": "stack pointer because the stack pointer",
    "start": "294160",
    "end": "295840"
  },
  {
    "text": "is not code right it's it's data so",
    "start": "295840",
    "end": "297919"
  },
  {
    "text": "that's all well and good but one problem",
    "start": "297919",
    "end": "299680"
  },
  {
    "text": "with this is that this project doesn't",
    "start": "299680",
    "end": "301199"
  },
  {
    "text": "scale very well you're kind of manually",
    "start": "301199",
    "end": "303120"
  },
  {
    "text": "hand jamming every aspect of the vector",
    "start": "303120",
    "end": "304960"
  },
  {
    "text": "table um i wouldn't suggest doing this",
    "start": "304960",
    "end": "307039"
  },
  {
    "text": "if you're doing a big project and",
    "start": "307039",
    "end": "309120"
  },
  {
    "text": "actually for my rtos i'm not doing it",
    "start": "309120",
    "end": "310800"
  },
  {
    "text": "this way at all i'm actually using the",
    "start": "310800",
    "end": "313440"
  },
  {
    "text": "lib open cortex m3 library that has some",
    "start": "313440",
    "end": "316639"
  },
  {
    "text": "pretty cool tricks to make the interrupt",
    "start": "316639",
    "end": "318800"
  },
  {
    "text": "vector table happen almost seamlessly so",
    "start": "318800",
    "end": "321039"
  },
  {
    "text": "you can kind of see here in vector.h",
    "start": "321039",
    "end": "322720"
  },
  {
    "text": "they create a structure to actually",
    "start": "322720",
    "end": "324320"
  },
  {
    "text": "represent the table itself you know the",
    "start": "324320",
    "end": "326479"
  },
  {
    "text": "top being that sp value we're talking",
    "start": "326479",
    "end": "328479"
  },
  {
    "text": "about and eventually your reset vector",
    "start": "328479",
    "end": "330400"
  },
  {
    "text": "your nmi etc",
    "start": "330400",
    "end": "332720"
  },
  {
    "text": "and they have some pretty cool pragmas",
    "start": "332720",
    "end": "334320"
  },
  {
    "text": "that actually set it up so they globally",
    "start": "334320",
    "end": "336400"
  },
  {
    "text": "define that structure in their linker",
    "start": "336400",
    "end": "338080"
  },
  {
    "text": "table and then if you don't set these",
    "start": "338080",
    "end": "341520"
  },
  {
    "text": "symbols so like if you don't have a",
    "start": "341520",
    "end": "343280"
  },
  {
    "text": "function called nmi if you don't have a",
    "start": "343280",
    "end": "345199"
  },
  {
    "text": "function called heart fault handler they",
    "start": "345199",
    "end": "347199"
  },
  {
    "text": "set it to a either null or blocking",
    "start": "347199",
    "end": "349600"
  },
  {
    "text": "handler which are these two functions",
    "start": "349600",
    "end": "350960"
  },
  {
    "text": "here that either do nothing like let the",
    "start": "350960",
    "end": "353039"
  },
  {
    "text": "processor go back into a regular state",
    "start": "353039",
    "end": "354960"
  },
  {
    "text": "or in the case that you have a hard",
    "start": "354960",
    "end": "356400"
  },
  {
    "text": "fault that happens for example you just",
    "start": "356400",
    "end": "358000"
  },
  {
    "text": "infinitely loop right so what that",
    "start": "358000",
    "end": "359759"
  },
  {
    "text": "allows you to do actually is it allows",
    "start": "359759",
    "end": "361600"
  },
  {
    "text": "you to",
    "start": "361600",
    "end": "362479"
  },
  {
    "text": "just declare functions called systick",
    "start": "362479",
    "end": "365120"
  },
  {
    "text": "handler or hard fault handler that could",
    "start": "365120",
    "end": "367759"
  },
  {
    "text": "automatically put into the interrupt",
    "start": "367759",
    "end": "369600"
  },
  {
    "text": "vector table so actually pretty cool",
    "start": "369600",
    "end": "372160"
  },
  {
    "text": "so for example here in my rtos i have to",
    "start": "372160",
    "end": "374720"
  },
  {
    "text": "run a scheduler every set amount of time",
    "start": "374720",
    "end": "377360"
  },
  {
    "text": "to allow the rtos to change what task is",
    "start": "377360",
    "end": "380000"
  },
  {
    "text": "running i do that by creating a systick",
    "start": "380000",
    "end": "382319"
  },
  {
    "text": "that runs at a thousand times a second",
    "start": "382319",
    "end": "384800"
  },
  {
    "text": "the cystic handler is created by you",
    "start": "384800",
    "end": "386960"
  },
  {
    "text": "know enabling the systick but then all i",
    "start": "386960",
    "end": "388960"
  },
  {
    "text": "have to do is define that systick",
    "start": "388960",
    "end": "391759"
  },
  {
    "text": "handler function and that overwrites the",
    "start": "391759",
    "end": "394080"
  },
  {
    "text": "weak pragma of the null handler with my",
    "start": "394080",
    "end": "396880"
  },
  {
    "text": "function that i have right here and then",
    "start": "396880",
    "end": "398720"
  },
  {
    "text": "inside of that cistic handler i do the",
    "start": "398720",
    "end": "400639"
  },
  {
    "text": "code that actually executes the",
    "start": "400639",
    "end": "402319"
  },
  {
    "text": "scheduler and changes out the task it's",
    "start": "402319",
    "end": "404240"
  },
  {
    "text": "not complete yet that'll probably happen",
    "start": "404240",
    "end": "406240"
  },
  {
    "text": "on stream this sunday well guys that's",
    "start": "406240",
    "end": "408400"
  },
  {
    "text": "all i have for you today i hope you",
    "start": "408400",
    "end": "409360"
  },
  {
    "text": "enjoyed that video pretty short but i",
    "start": "409360",
    "end": "410800"
  },
  {
    "text": "wanted to give you an idea of what the",
    "start": "410800",
    "end": "412720"
  },
  {
    "text": "ivt did and how it could help you and",
    "start": "412720",
    "end": "414560"
  },
  {
    "text": "your future arm embedded endeavor so if",
    "start": "414560",
    "end": "416479"
  },
  {
    "text": "you liked that video do me a favor hit",
    "start": "416479",
    "end": "418160"
  },
  {
    "text": "like hit subscribe and we'll see you",
    "start": "418160",
    "end": "419759"
  },
  {
    "text": "guys in the next video take care",
    "start": "419759",
    "end": "423840"
  },
  {
    "text": "[Music]",
    "start": "426600",
    "end": "430790"
  }
]