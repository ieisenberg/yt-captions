[
  {
    "start": "0",
    "end": "108000"
  },
  {
    "text": "if you've ever programmed anything in c",
    "start": "80",
    "end": "2000"
  },
  {
    "text": "or c plus plus you know that it's very",
    "start": "2000",
    "end": "4160"
  },
  {
    "text": "easy to make mistakes and leave behind",
    "start": "4160",
    "end": "6319"
  },
  {
    "text": "bugs in your code languages like c give",
    "start": "6319",
    "end": "8960"
  },
  {
    "text": "programmers precise control over their",
    "start": "8960",
    "end": "10960"
  },
  {
    "text": "code but with great power comes great",
    "start": "10960",
    "end": "12960"
  },
  {
    "text": "responsibility",
    "start": "12960",
    "end": "14400"
  },
  {
    "text": "languages that give the programmer such",
    "start": "14400",
    "end": "16000"
  },
  {
    "text": "granular low level control are known",
    "start": "16000",
    "end": "18000"
  },
  {
    "text": "historically for allowing them to make",
    "start": "18000",
    "end": "19920"
  },
  {
    "text": "catastrophic mistakes which can leave",
    "start": "19920",
    "end": "21760"
  },
  {
    "text": "their code full of memory corruption",
    "start": "21760",
    "end": "23760"
  },
  {
    "text": "vulnerabilities and memory leaks",
    "start": "23760",
    "end": "26080"
  },
  {
    "text": "c is now 50 years old but unfortunately",
    "start": "26080",
    "end": "28800"
  },
  {
    "text": "still a pivotal part of every major",
    "start": "28800",
    "end": "31679"
  },
  {
    "text": "operating system linux for example is",
    "start": "31679",
    "end": "34000"
  },
  {
    "text": "the world's most widely used operating",
    "start": "34000",
    "end": "35760"
  },
  {
    "text": "system may be seconded by windows and is",
    "start": "35760",
    "end": "38000"
  },
  {
    "text": "written entirely in c",
    "start": "38000",
    "end": "40320"
  },
  {
    "text": "now given that this year is the 50th",
    "start": "40320",
    "end": "42480"
  },
  {
    "text": "anniversary of the appearance of c",
    "start": "42480",
    "end": "44399"
  },
  {
    "text": "i've decided to learn a new safer",
    "start": "44399",
    "end": "46239"
  },
  {
    "text": "language that is taking the world by",
    "start": "46239",
    "end": "47920"
  },
  {
    "text": "storm rust",
    "start": "47920",
    "end": "50559"
  },
  {
    "text": "rust is a programming language written",
    "start": "50559",
    "end": "52160"
  },
  {
    "text": "by mozilla that puts an emphasis on the",
    "start": "52160",
    "end": "54239"
  },
  {
    "text": "two factors transparent performance to",
    "start": "54239",
    "end": "56480"
  },
  {
    "text": "the user and most importantly memory",
    "start": "56480",
    "end": "59039"
  },
  {
    "text": "safety unlike c rust is designed to",
    "start": "59039",
    "end": "61680"
  },
  {
    "text": "ensure that memory accesses are quote",
    "start": "61680",
    "end": "63840"
  },
  {
    "text": "unquote safe in today's video i'll be",
    "start": "63840",
    "end": "66240"
  },
  {
    "text": "starting my adventure of learning rust",
    "start": "66240",
    "end": "68240"
  },
  {
    "text": "and eventually we'll take a rust to the",
    "start": "68240",
    "end": "69920"
  },
  {
    "text": "raspberry pi and the raspberry pi pico",
    "start": "69920",
    "end": "72400"
  },
  {
    "text": "so hit subscribe to follow along with us",
    "start": "72400",
    "end": "74799"
  },
  {
    "text": "also hit that like button and leave a",
    "start": "74799",
    "end": "76400"
  },
  {
    "text": "comment about what platform we should",
    "start": "76400",
    "end": "77920"
  },
  {
    "text": "try rust on next",
    "start": "77920",
    "end": "80960"
  },
  {
    "text": "now to get started in rust we have to do",
    "start": "82479",
    "end": "84240"
  },
  {
    "text": "something pretty simple which is to",
    "start": "84240",
    "end": "85680"
  },
  {
    "text": "install the rust compiler that is done",
    "start": "85680",
    "end": "88000"
  },
  {
    "text": "by running sudo apt install rust c i",
    "start": "88000",
    "end": "90720"
  },
  {
    "text": "already have this done so i don't have",
    "start": "90720",
    "end": "92159"
  },
  {
    "text": "to but you do it will take a few minutes",
    "start": "92159",
    "end": "93840"
  },
  {
    "text": "to install it actually installs the",
    "start": "93840",
    "end": "95280"
  },
  {
    "text": "entire llvm back end as well as the rust",
    "start": "95280",
    "end": "97920"
  },
  {
    "text": "runtime environment as a library it",
    "start": "97920",
    "end": "99840"
  },
  {
    "text": "takes a little bit of time but once you",
    "start": "99840",
    "end": "100880"
  },
  {
    "text": "let that run you should be able to run",
    "start": "100880",
    "end": "102479"
  },
  {
    "text": "rust c and it'll output some file for",
    "start": "102479",
    "end": "105119"
  },
  {
    "text": "you when you give it uh rust code to",
    "start": "105119",
    "end": "106880"
  },
  {
    "text": "compile",
    "start": "106880",
    "end": "109280"
  },
  {
    "start": "108000",
    "end": "163000"
  },
  {
    "text": "so over here we're going to write our",
    "start": "109360",
    "end": "110640"
  },
  {
    "text": "hello world this will literally be three",
    "start": "110640",
    "end": "112240"
  },
  {
    "text": "or four lines of rust it's actually",
    "start": "112240",
    "end": "114159"
  },
  {
    "text": "fairly simple",
    "start": "114159",
    "end": "115600"
  },
  {
    "text": "it feels like c as you're typing it but",
    "start": "115600",
    "end": "117600"
  },
  {
    "text": "it reads like python it's actually very",
    "start": "117600",
    "end": "119200"
  },
  {
    "text": "very nice so similar to c every rust",
    "start": "119200",
    "end": "122000"
  },
  {
    "text": "program starts with a function main and",
    "start": "122000",
    "end": "124240"
  },
  {
    "text": "is opened and closed by braces similar",
    "start": "124240",
    "end": "126159"
  },
  {
    "text": "to the c syntax if main had arguments",
    "start": "126159",
    "end": "128160"
  },
  {
    "text": "which will in the future for us they",
    "start": "128160",
    "end": "129440"
  },
  {
    "text": "would actually go here",
    "start": "129440",
    "end": "130959"
  },
  {
    "text": "and we'll do our hello world pretty",
    "start": "130959",
    "end": "132239"
  },
  {
    "text": "simply right where we type uh print ln",
    "start": "132239",
    "end": "135440"
  },
  {
    "text": "exclamation point the exclamation point",
    "start": "135440",
    "end": "137520"
  },
  {
    "text": "here makes it a macro right so print",
    "start": "137520",
    "end": "139599"
  },
  {
    "text": "line is not actually a function in rust",
    "start": "139599",
    "end": "141599"
  },
  {
    "text": "it's just a macro and to this macro we",
    "start": "141599",
    "end": "144000"
  },
  {
    "text": "can provide the arguments we want to",
    "start": "144000",
    "end": "145520"
  },
  {
    "text": "print we'll say hello world exclamation",
    "start": "145520",
    "end": "148319"
  },
  {
    "text": "point and a",
    "start": "148319",
    "end": "149599"
  },
  {
    "text": "semicolon and then we'll type return",
    "start": "149599",
    "end": "152800"
  },
  {
    "text": "and we'll be good to go",
    "start": "152800",
    "end": "154560"
  },
  {
    "text": "from here we can type russc on main dot",
    "start": "154560",
    "end": "158080"
  },
  {
    "text": "rs",
    "start": "158080",
    "end": "159120"
  },
  {
    "text": "it'll produce our binary main that we",
    "start": "159120",
    "end": "161200"
  },
  {
    "text": "can just run and it works",
    "start": "161200",
    "end": "164480"
  },
  {
    "start": "163000",
    "end": "212000"
  },
  {
    "text": "a few points i want to make about the",
    "start": "164480",
    "end": "166000"
  },
  {
    "text": "rust binary before we actually get",
    "start": "166000",
    "end": "167440"
  },
  {
    "text": "moving on to other functionality in the",
    "start": "167440",
    "end": "169040"
  },
  {
    "text": "rush programming language",
    "start": "169040",
    "end": "170640"
  },
  {
    "text": "notice that the binary is actually",
    "start": "170640",
    "end": "172640"
  },
  {
    "text": "pretty huge to do a basic hello world we",
    "start": "172640",
    "end": "175280"
  },
  {
    "text": "actually get up to about 10 megabytes in",
    "start": "175280",
    "end": "177200"
  },
  {
    "text": "that binary the reason for that is that",
    "start": "177200",
    "end": "179519"
  },
  {
    "text": "the rust runtime environment actually",
    "start": "179519",
    "end": "181920"
  },
  {
    "text": "gets cooked into this binary so in here",
    "start": "181920",
    "end": "184800"
  },
  {
    "text": "we actually have an entire thread safe",
    "start": "184800",
    "end": "187760"
  },
  {
    "text": "memory safe runtime environment that is",
    "start": "187760",
    "end": "190159"
  },
  {
    "text": "completely portable to any system as",
    "start": "190159",
    "end": "192159"
  },
  {
    "text": "long as lid p thread is there notice",
    "start": "192159",
    "end": "193680"
  },
  {
    "text": "that there are no lib rust or lib big",
    "start": "193680",
    "end": "197280"
  },
  {
    "text": "library that get baked into here that",
    "start": "197280",
    "end": "199120"
  },
  {
    "text": "are a requirement everything we need",
    "start": "199120",
    "end": "200800"
  },
  {
    "text": "goes right into main that's pretty cool",
    "start": "200800",
    "end": "203840"
  },
  {
    "text": "um yeah and also notice that we can just",
    "start": "203840",
    "end": "205440"
  },
  {
    "text": "dot slash the program and it runs as if",
    "start": "205440",
    "end": "207440"
  },
  {
    "text": "it were a flat c program gets up pretty",
    "start": "207440",
    "end": "209200"
  },
  {
    "text": "quickly okay so that's pretty awesome",
    "start": "209200",
    "end": "213040"
  },
  {
    "start": "212000",
    "end": "320000"
  },
  {
    "text": "you may be looking at this and be",
    "start": "213040",
    "end": "214239"
  },
  {
    "text": "thinking why does this matter why do i",
    "start": "214239",
    "end": "217280"
  },
  {
    "text": "care about this new language well",
    "start": "217280",
    "end": "219280"
  },
  {
    "text": "there's actually a pretty big dynamic",
    "start": "219280",
    "end": "220720"
  },
  {
    "text": "that goes on in rust that other",
    "start": "220720",
    "end": "222000"
  },
  {
    "text": "languages do not have so we'll do",
    "start": "222000",
    "end": "223760"
  },
  {
    "text": "something like this we'll say",
    "start": "223760",
    "end": "225440"
  },
  {
    "text": "let x which is a u32 equal four okay and",
    "start": "225440",
    "end": "229760"
  },
  {
    "text": "i'm going to compile this and it's going",
    "start": "229760",
    "end": "230799"
  },
  {
    "text": "to get mad at me because i'm not going",
    "start": "230799",
    "end": "231920"
  },
  {
    "text": "to use that variable but it will",
    "start": "231920",
    "end": "233760"
  },
  {
    "text": "actually run still and there will be no",
    "start": "233760",
    "end": "235360"
  },
  {
    "text": "issues right",
    "start": "235360",
    "end": "236400"
  },
  {
    "text": "a big part of rust is that",
    "start": "236400",
    "end": "238720"
  },
  {
    "text": "if i were to access rust and say hello",
    "start": "238720",
    "end": "241439"
  },
  {
    "text": "world and i'm going to say comma",
    "start": "241439",
    "end": "243599"
  },
  {
    "text": "x",
    "start": "243599",
    "end": "245840"
  },
  {
    "text": "and this is four here pretty important",
    "start": "246400",
    "end": "248319"
  },
  {
    "text": "right",
    "start": "248319",
    "end": "249280"
  },
  {
    "text": "good this works uh in access to x",
    "start": "249280",
    "end": "252879"
  },
  {
    "text": "every time we do any kind of memory",
    "start": "252879",
    "end": "254799"
  },
  {
    "text": "access it's reading into our memory",
    "start": "254799",
    "end": "257199"
  },
  {
    "text": "access to make sure that we're only",
    "start": "257199",
    "end": "258799"
  },
  {
    "text": "accessing a u32",
    "start": "258799",
    "end": "261440"
  },
  {
    "text": "type in rust what's different than this",
    "start": "261440",
    "end": "264080"
  },
  {
    "text": "as compared to c is that nc a valid",
    "start": "264080",
    "end": "266880"
  },
  {
    "text": "access that we actually could do is we",
    "start": "266880",
    "end": "268320"
  },
  {
    "text": "could say the address of x offset by one",
    "start": "268320",
    "end": "272479"
  },
  {
    "text": "or by four or you know we can keep going",
    "start": "272479",
    "end": "275040"
  },
  {
    "text": "this is an illegal memory access that",
    "start": "275040",
    "end": "276800"
  },
  {
    "text": "would read us into uninitialized or even",
    "start": "276800",
    "end": "279040"
  },
  {
    "text": "like unallocated memory that could crash",
    "start": "279040",
    "end": "280800"
  },
  {
    "text": "the program but here in rust i can't do",
    "start": "280800",
    "end": "283199"
  },
  {
    "text": "an access like this now",
    "start": "283199",
    "end": "285759"
  },
  {
    "text": "the one big thing about rust that c does",
    "start": "285759",
    "end": "288160"
  },
  {
    "text": "not have is this idea of safe and unsafe",
    "start": "288160",
    "end": "290720"
  },
  {
    "text": "code here in this code by default we are",
    "start": "290720",
    "end": "293040"
  },
  {
    "text": "in a safe operating mode i couldn't do",
    "start": "293040",
    "end": "295199"
  },
  {
    "text": "that access into x because the code is",
    "start": "295199",
    "end": "296960"
  },
  {
    "text": "thought to be safe there is a mode in",
    "start": "296960",
    "end": "299680"
  },
  {
    "text": "rust called unsafe where basically the",
    "start": "299680",
    "end": "302800"
  },
  {
    "text": "rust runtime and the rust compiler put",
    "start": "302800",
    "end": "305600"
  },
  {
    "text": "on its blinders and let you do whatever",
    "start": "305600",
    "end": "308080"
  },
  {
    "text": "you want to do in that code things that",
    "start": "308080",
    "end": "309680"
  },
  {
    "text": "you can do in an unsafe mode that you",
    "start": "309680",
    "end": "311280"
  },
  {
    "text": "cannot do in the rest of rust are things",
    "start": "311280",
    "end": "313360"
  },
  {
    "text": "like dereferencing a pointer breaking",
    "start": "313360",
    "end": "316000"
  },
  {
    "text": "pointer allotation rules producing",
    "start": "316000",
    "end": "318000"
  },
  {
    "text": "invalid types things like that",
    "start": "318000",
    "end": "321520"
  },
  {
    "start": "320000",
    "end": "409000"
  },
  {
    "text": "so here's a little example program i",
    "start": "321840",
    "end": "323280"
  },
  {
    "text": "want to have and just kind of prove to",
    "start": "323280",
    "end": "324400"
  },
  {
    "text": "you that there is a possibility that",
    "start": "324400",
    "end": "326800"
  },
  {
    "text": "russ code can have bugs you can crash",
    "start": "326800",
    "end": "329440"
  },
  {
    "text": "rust it just you need to explicitly",
    "start": "329440",
    "end": "331120"
  },
  {
    "text": "write out the code that does that in an",
    "start": "331120",
    "end": "332639"
  },
  {
    "text": "unsafe mode so here you have the",
    "start": "332639",
    "end": "334880"
  },
  {
    "text": "function made i create a variable called",
    "start": "334880",
    "end": "337120"
  },
  {
    "text": "address that is a number one two three",
    "start": "337120",
    "end": "339759"
  },
  {
    "text": "four five and it points to an undefined",
    "start": "339759",
    "end": "341840"
  },
  {
    "text": "size this is totally normal rust no one",
    "start": "341840",
    "end": "343840"
  },
  {
    "text": "cares about this this is not unsafe",
    "start": "343840",
    "end": "346160"
  },
  {
    "text": "then i say hey take that that number",
    "start": "346160",
    "end": "348479"
  },
  {
    "text": "address and call it r1 and treat it as a",
    "start": "348479",
    "end": "351600"
  },
  {
    "text": "pointer to an integer 32 and it's a",
    "start": "351600",
    "end": "353600"
  },
  {
    "text": "constant pointer okay then what we do is",
    "start": "353600",
    "end": "356160"
  },
  {
    "text": "we do something that we're not allowed",
    "start": "356160",
    "end": "357600"
  },
  {
    "text": "to do in safe rust and it dereferenced",
    "start": "357600",
    "end": "360319"
  },
  {
    "text": "that pointer in r1 here is a line that",
    "start": "360319",
    "end": "363440"
  },
  {
    "text": "basically the rust compiler and the rust",
    "start": "363440",
    "end": "365440"
  },
  {
    "text": "runtime are saying i'm just going to",
    "start": "365440",
    "end": "367039"
  },
  {
    "text": "close my eyes and let you do what you",
    "start": "367039",
    "end": "368240"
  },
  {
    "text": "want",
    "start": "368240",
    "end": "369120"
  },
  {
    "text": "go ahead and have at it and here we",
    "start": "369120",
    "end": "370720"
  },
  {
    "text": "dereference this pointer this pointer is",
    "start": "370720",
    "end": "372880"
  },
  {
    "text": "a bad allocation there's no memory here",
    "start": "372880",
    "end": "375600"
  },
  {
    "text": "and this will actually crash the program",
    "start": "375600",
    "end": "378080"
  },
  {
    "text": "so we'll do rust c unsafe.rs and notice",
    "start": "378080",
    "end": "381360"
  },
  {
    "text": "that the compiler actually makes no",
    "start": "381360",
    "end": "383039"
  },
  {
    "text": "warning that you've used unsafe it",
    "start": "383039",
    "end": "384400"
  },
  {
    "text": "doesn't even let you know like hey man",
    "start": "384400",
    "end": "386000"
  },
  {
    "text": "you know you're using unsafe right it",
    "start": "386000",
    "end": "387360"
  },
  {
    "text": "just lets you go ahead and do it and if",
    "start": "387360",
    "end": "388800"
  },
  {
    "text": "we run this program we actually get a",
    "start": "388800",
    "end": "390639"
  },
  {
    "text": "cord dump segfulting on the lookup at",
    "start": "390639",
    "end": "393120"
  },
  {
    "text": "address one two three four five so",
    "start": "393120",
    "end": "395360"
  },
  {
    "text": "that's kind of the big difference here",
    "start": "395360",
    "end": "396560"
  },
  {
    "text": "between c and rust and that rust is",
    "start": "396560",
    "end": "398800"
  },
  {
    "text": "constantly operating in this checking",
    "start": "398800",
    "end": "401039"
  },
  {
    "text": "your access to make sure you're not",
    "start": "401039",
    "end": "402319"
  },
  {
    "text": "crazy mode whereas it does give you the",
    "start": "402319",
    "end": "404400"
  },
  {
    "text": "opportunity to do an unsafe access to",
    "start": "404400",
    "end": "406560"
  },
  {
    "text": "addresses you maybe shouldn't even have",
    "start": "406560",
    "end": "408000"
  },
  {
    "text": "to touch",
    "start": "408000",
    "end": "410400"
  },
  {
    "start": "409000",
    "end": "494000"
  },
  {
    "text": "and as we progress in this video series",
    "start": "410560",
    "end": "412560"
  },
  {
    "text": "all of the accesses that we do",
    "start": "412560",
    "end": "414479"
  },
  {
    "text": "into peripherals on a chip for example",
    "start": "414479",
    "end": "416560"
  },
  {
    "text": "like if i want to access the peripheral",
    "start": "416560",
    "end": "418800"
  },
  {
    "text": "bus on an arm cortex you know m3 i have",
    "start": "418800",
    "end": "421759"
  },
  {
    "text": "to eventually go out and touch",
    "start": "421759",
    "end": "424080"
  },
  {
    "text": "completely by hand this address",
    "start": "424080",
    "end": "427120"
  },
  {
    "text": "and then i'll do it in an unsafe way",
    "start": "427120",
    "end": "428960"
  },
  {
    "text": "what you're allowed to do then is make",
    "start": "428960",
    "end": "430400"
  },
  {
    "text": "these peripheral accesses happen in",
    "start": "430400",
    "end": "432400"
  },
  {
    "text": "unsafe ways and then wrap them in safe",
    "start": "432400",
    "end": "434240"
  },
  {
    "text": "functions so that the only time the code",
    "start": "434240",
    "end": "435919"
  },
  {
    "text": "is unsafe is during the memory access so",
    "start": "435919",
    "end": "438319"
  },
  {
    "text": "that's pretty interesting um all that",
    "start": "438319",
    "end": "440479"
  },
  {
    "text": "being said rust is a fairly powerful and",
    "start": "440479",
    "end": "443840"
  },
  {
    "text": "robust",
    "start": "443840",
    "end": "445039"
  },
  {
    "text": "programming language that i'm really",
    "start": "445039",
    "end": "446080"
  },
  {
    "text": "excited to learn more about it reads and",
    "start": "446080",
    "end": "448319"
  },
  {
    "text": "feels just like python and c put",
    "start": "448319",
    "end": "450080"
  },
  {
    "text": "together with a little different syntax",
    "start": "450080",
    "end": "451520"
  },
  {
    "text": "in the variable assignment um we'll",
    "start": "451520",
    "end": "453199"
  },
  {
    "text": "continue in this series about doing",
    "start": "453199",
    "end": "454639"
  },
  {
    "text": "basic things like arrays memory accesses",
    "start": "454639",
    "end": "457759"
  },
  {
    "text": "how to do structures classes and all",
    "start": "457759",
    "end": "459360"
  },
  {
    "text": "that stuff and then push the limits on",
    "start": "459360",
    "end": "461120"
  },
  {
    "text": "it and bring it eventually that we're",
    "start": "461120",
    "end": "462240"
  },
  {
    "text": "running rust bare metal on an arm",
    "start": "462240",
    "end": "464879"
  },
  {
    "text": "environment and use that to kind of",
    "start": "464879",
    "end": "466560"
  },
  {
    "text": "figure out how to use the unsafe safely",
    "start": "466560",
    "end": "469039"
  },
  {
    "text": "um guys if you enjoyed this video do me",
    "start": "469039",
    "end": "470639"
  },
  {
    "text": "a favor hit like hit subscribe we'll see",
    "start": "470639",
    "end": "472160"
  },
  {
    "text": "you next time when we dive deep on rust",
    "start": "472160",
    "end": "474800"
  },
  {
    "text": "on an embedded platform i'll see you",
    "start": "474800",
    "end": "476720"
  },
  {
    "text": "guys then take care",
    "start": "476720",
    "end": "479840"
  },
  {
    "text": "[Music]",
    "start": "480120",
    "end": "493470"
  },
  {
    "text": "you",
    "start": "493680",
    "end": "495759"
  }
]