[
  {
    "text": "this is the number four and this is some",
    "start": "0",
    "end": "2760"
  },
  {
    "text": "code that I've written to send that",
    "start": "2760",
    "end": "4319"
  },
  {
    "text": "number four between a client and a",
    "start": "4319",
    "end": "6839"
  },
  {
    "text": "server sounds pretty simple right well",
    "start": "6839",
    "end": "9360"
  },
  {
    "text": "actually in this code there is a bug",
    "start": "9360",
    "end": "11400"
  },
  {
    "text": "that not everyone may see you see the",
    "start": "11400",
    "end": "14040"
  },
  {
    "text": "number four is an integer type in this",
    "start": "14040",
    "end": "16560"
  },
  {
    "text": "example which means that it takes",
    "start": "16560",
    "end": "18000"
  },
  {
    "text": "anywhere from four to eight bytes of",
    "start": "18000",
    "end": "20279"
  },
  {
    "text": "memory to store the number four a",
    "start": "20279",
    "end": "22859"
  },
  {
    "text": "commonly overlooked problem for a lot of",
    "start": "22859",
    "end": "24840"
  },
  {
    "text": "new programmers is the idea of",
    "start": "24840",
    "end": "26580"
  },
  {
    "text": "endian-ness which means in what order",
    "start": "26580",
    "end": "29340"
  },
  {
    "text": "are these bytes stored in the case of a",
    "start": "29340",
    "end": "32099"
  },
  {
    "text": "little endian system the least",
    "start": "32099",
    "end": "34440"
  },
  {
    "text": "significant byte will be stored first",
    "start": "34440",
    "end": "36120"
  },
  {
    "text": "which in the case of our number four the",
    "start": "36120",
    "end": "37920"
  },
  {
    "text": "number four is put into memory first in",
    "start": "37920",
    "end": "40320"
  },
  {
    "text": "the case of a big endian system the most",
    "start": "40320",
    "end": "43559"
  },
  {
    "text": "significant bite is stored first which",
    "start": "43559",
    "end": "45840"
  },
  {
    "text": "means the zero will be stored first so",
    "start": "45840",
    "end": "48120"
  },
  {
    "text": "you may be asking wait how does this",
    "start": "48120",
    "end": "49860"
  },
  {
    "text": "create a bug in our code well consider",
    "start": "49860",
    "end": "52200"
  },
  {
    "text": "the example here of my client server",
    "start": "52200",
    "end": "54239"
  },
  {
    "text": "software what if we sent the number four",
    "start": "54239",
    "end": "56100"
  },
  {
    "text": "from a server that was little endian to",
    "start": "56100",
    "end": "59280"
  },
  {
    "text": "a client that was big Indian because of",
    "start": "59280",
    "end": "61920"
  },
  {
    "text": "the order that the systems expect the",
    "start": "61920",
    "end": "63960"
  },
  {
    "text": "bytes to come in this will create some",
    "start": "63960",
    "end": "65939"
  },
  {
    "text": "weird bugs where the number four will be",
    "start": "65939",
    "end": "68220"
  },
  {
    "text": "interpreted in a different way between",
    "start": "68220",
    "end": "70320"
  },
  {
    "text": "each system let's go check that bug out",
    "start": "70320",
    "end": "72420"
  },
  {
    "text": "okay so we're going to walk through our",
    "start": "72420",
    "end": "73860"
  },
  {
    "text": "code and kind of describe where that bug",
    "start": "73860",
    "end": "75360"
  },
  {
    "text": "is if you're new to C not a big deal",
    "start": "75360",
    "end": "77159"
  },
  {
    "text": "this code looks kind of complicated but",
    "start": "77159",
    "end": "78780"
  },
  {
    "text": "there's actually not that much going on",
    "start": "78780",
    "end": "80220"
  },
  {
    "text": "what we do here in the server is we have",
    "start": "80220",
    "end": "82259"
  },
  {
    "text": "our socket we create the socket and then",
    "start": "82259",
    "end": "83880"
  },
  {
    "text": "we bind that socket to a port we listen",
    "start": "83880",
    "end": "86520"
  },
  {
    "text": "for clients and when we accept a client",
    "start": "86520",
    "end": "88380"
  },
  {
    "text": "we then send them our numbers here's",
    "start": "88380",
    "end": "90360"
  },
  {
    "text": "kind of like where the core code of the",
    "start": "90360",
    "end": "91799"
  },
  {
    "text": "program is right we have a number four",
    "start": "91799",
    "end": "93900"
  },
  {
    "text": "in memory we send the number we tell the",
    "start": "93900",
    "end": "96240"
  },
  {
    "text": "user we're going to send it and then we",
    "start": "96240",
    "end": "97500"
  },
  {
    "text": "send the my number variable and we send",
    "start": "97500",
    "end": "99720"
  },
  {
    "text": "four bytes okay so pretty",
    "start": "99720",
    "end": "101640"
  },
  {
    "text": "straightforward and then in our client",
    "start": "101640",
    "end": "103560"
  },
  {
    "text": "software exact same thing we create a",
    "start": "103560",
    "end": "105600"
  },
  {
    "text": "socket we connect to that server and",
    "start": "105600",
    "end": "107700"
  },
  {
    "text": "then we receive from the server the mine",
    "start": "107700",
    "end": "110340"
  },
  {
    "text": "number variable my number four let me",
    "start": "110340",
    "end": "112140"
  },
  {
    "text": "print that number right so what we can",
    "start": "112140",
    "end": "113880"
  },
  {
    "text": "do here is we can actually run the",
    "start": "113880",
    "end": "115920"
  },
  {
    "text": "server",
    "start": "115920",
    "end": "117360"
  },
  {
    "text": "wait for a connection and then in the",
    "start": "117360",
    "end": "119520"
  },
  {
    "text": "terminal here we're going to run the",
    "start": "119520",
    "end": "121200"
  },
  {
    "text": "client",
    "start": "121200",
    "end": "122520"
  },
  {
    "text": "we're going to say reading a number my",
    "start": "122520",
    "end": "124259"
  },
  {
    "text": "number is 4. so the reason why this",
    "start": "124259",
    "end": "126360"
  },
  {
    "text": "works and why there is not a bug in this",
    "start": "126360",
    "end": "128459"
  },
  {
    "text": "case is because both systems are little",
    "start": "128459",
    "end": "131340"
  },
  {
    "text": "endians if we actually go into our",
    "start": "131340",
    "end": "132720"
  },
  {
    "text": "server here",
    "start": "132720",
    "end": "134760"
  },
  {
    "text": "and we cat proc CPU info you will see",
    "start": "134760",
    "end": "138300"
  },
  {
    "text": "that we are running an Intel processor",
    "start": "138300",
    "end": "140400"
  },
  {
    "text": "an Intel Core this is my processor for",
    "start": "140400",
    "end": "142440"
  },
  {
    "text": "my computer pretty cool but Intel is a",
    "start": "142440",
    "end": "145140"
  },
  {
    "text": "little Indian architecture which means",
    "start": "145140",
    "end": "146879"
  },
  {
    "text": "that it expects the least significant",
    "start": "146879",
    "end": "149040"
  },
  {
    "text": "byte to come across first so an issue",
    "start": "149040",
    "end": "152040"
  },
  {
    "text": "will arise if we change one of the",
    "start": "152040",
    "end": "154020"
  },
  {
    "text": "systems to another endedness or a big",
    "start": "154020",
    "end": "156599"
  },
  {
    "text": "ending architecture so what I've",
    "start": "156599",
    "end": "157920"
  },
  {
    "text": "actually done here is I've compiled my",
    "start": "157920",
    "end": "160140"
  },
  {
    "text": "client software to be used with mips",
    "start": "160140",
    "end": "162480"
  },
  {
    "text": "mips if you don't already know is a big",
    "start": "162480",
    "end": "164400"
  },
  {
    "text": "ending architecture so I can take this",
    "start": "164400",
    "end": "166920"
  },
  {
    "text": "and produce the mips client binary and",
    "start": "166920",
    "end": "170640"
  },
  {
    "text": "that mips client is going to run in Kimu",
    "start": "170640",
    "end": "173340"
  },
  {
    "text": "as a big ending system and that'll",
    "start": "173340",
    "end": "175319"
  },
  {
    "text": "create a couple issues with our program",
    "start": "175319",
    "end": "176640"
  },
  {
    "text": "here right if I go back and I run our",
    "start": "176640",
    "end": "179340"
  },
  {
    "text": "server awaiting a connection remember",
    "start": "179340",
    "end": "181200"
  },
  {
    "text": "the server is going to send our client",
    "start": "181200",
    "end": "183780"
  },
  {
    "text": "the number four in little ndn",
    "start": "183780",
    "end": "186599"
  },
  {
    "text": "architecture in little ending order",
    "start": "186599",
    "end": "188220"
  },
  {
    "text": "which is going to be weird for mips so",
    "start": "188220",
    "end": "190620"
  },
  {
    "text": "if I run the mips client it reads the",
    "start": "190620",
    "end": "193620"
  },
  {
    "text": "number and then it reads this large",
    "start": "193620",
    "end": "195659"
  },
  {
    "text": "number that is not the number that we",
    "start": "195659",
    "end": "197340"
  },
  {
    "text": "sent it but the reason that happened is",
    "start": "197340",
    "end": "199500"
  },
  {
    "text": "because we mixed little endian in big",
    "start": "199500",
    "end": "202140"
  },
  {
    "text": "endian so let's go into the code and fix",
    "start": "202140",
    "end": "204599"
  },
  {
    "text": "that",
    "start": "204599",
    "end": "205800"
  },
  {
    "text": "the way that we have to do this is we",
    "start": "205800",
    "end": "207239"
  },
  {
    "text": "have to do what's called pack the number",
    "start": "207239",
    "end": "209220"
  },
  {
    "text": "into Network order so Network order is",
    "start": "209220",
    "end": "212580"
  },
  {
    "text": "largely accepted to be the big ending",
    "start": "212580",
    "end": "214500"
  },
  {
    "text": "order which means that for to make this",
    "start": "214500",
    "end": "216840"
  },
  {
    "text": "number correct we need to convert it",
    "start": "216840",
    "end": "218760"
  },
  {
    "text": "into the network order before we send it",
    "start": "218760",
    "end": "220980"
  },
  {
    "text": "the way we're going to do that is we're",
    "start": "220980",
    "end": "222120"
  },
  {
    "text": "going to say that my number is equal to",
    "start": "222120",
    "end": "223920"
  },
  {
    "text": "host to network long",
    "start": "223920",
    "end": "227220"
  },
  {
    "text": "of my number",
    "start": "227220",
    "end": "229680"
  },
  {
    "text": "so by doing this we will prepare it to",
    "start": "229680",
    "end": "231840"
  },
  {
    "text": "be sent in the network order and then",
    "start": "231840",
    "end": "234599"
  },
  {
    "text": "what we can do in our client software is",
    "start": "234599",
    "end": "236459"
  },
  {
    "text": "we receive the number off of the buffer",
    "start": "236459",
    "end": "238500"
  },
  {
    "text": "and then we say that",
    "start": "238500",
    "end": "240599"
  },
  {
    "text": "my number is equal to network to host",
    "start": "240599",
    "end": "244739"
  },
  {
    "text": "long of my number",
    "start": "244739",
    "end": "247379"
  },
  {
    "text": "if you don't understand what those lines",
    "start": "247379",
    "end": "248640"
  },
  {
    "text": "do don't worry about it we're going to",
    "start": "248640",
    "end": "249720"
  },
  {
    "text": "talk about it right now so what this",
    "start": "249720",
    "end": "251879"
  },
  {
    "text": "does it takes a long size value and it",
    "start": "251879",
    "end": "255360"
  },
  {
    "text": "converts it from the host endian-ness to",
    "start": "255360",
    "end": "258419"
  },
  {
    "text": "the network endedness order so in this",
    "start": "258419",
    "end": "260820"
  },
  {
    "text": "case on the Intel side it'll take my",
    "start": "260820",
    "end": "263340"
  },
  {
    "text": "number and convert it from Little to big",
    "start": "263340",
    "end": "265800"
  },
  {
    "text": "or network endings on the client side",
    "start": "265800",
    "end": "268199"
  },
  {
    "text": "what this does is it says take a long",
    "start": "268199",
    "end": "271320"
  },
  {
    "text": "type and then convert it from the",
    "start": "271320",
    "end": "273120"
  },
  {
    "text": "network order to the host order so now",
    "start": "273120",
    "end": "276360"
  },
  {
    "text": "we have two programs that regardless of",
    "start": "276360",
    "end": "278639"
  },
  {
    "text": "what endedness they are they convert all",
    "start": "278639",
    "end": "281040"
  },
  {
    "text": "of their data to network order send it",
    "start": "281040",
    "end": "283680"
  },
  {
    "text": "and then deconvert it so let's watch",
    "start": "283680",
    "end": "285419"
  },
  {
    "text": "that happen real quick so we're gonna go",
    "start": "285419",
    "end": "287280"
  },
  {
    "text": "ahead and we're going to GCC compile",
    "start": "287280",
    "end": "289560"
  },
  {
    "text": "server again real quick",
    "start": "289560",
    "end": "291780"
  },
  {
    "text": "couple warnings don't worry about that",
    "start": "291780",
    "end": "293280"
  },
  {
    "text": "and then we're gonna mix convert and",
    "start": "293280",
    "end": "295080"
  },
  {
    "text": "recompile all of our stuff so if we run",
    "start": "295080",
    "end": "296820"
  },
  {
    "text": "the server here",
    "start": "296820",
    "end": "298500"
  },
  {
    "text": "on the mips client we get the number",
    "start": "298500",
    "end": "300720"
  },
  {
    "text": "four backed correctly so By Doing",
    "start": "300720",
    "end": "303000"
  },
  {
    "text": "Network order as opposed to host order",
    "start": "303000",
    "end": "305220"
  },
  {
    "text": "we can actually ignore the differences",
    "start": "305220",
    "end": "307680"
  },
  {
    "text": "in end in this that a program may have",
    "start": "307680",
    "end": "310440"
  },
  {
    "text": "anyway guys as usual thanks for watching",
    "start": "310440",
    "end": "312240"
  },
  {
    "text": "I hope you learned something if you did",
    "start": "312240",
    "end": "313440"
  },
  {
    "text": "hit that sub button and then also go",
    "start": "313440",
    "end": "314880"
  },
  {
    "text": "watch this video on how negative numbers",
    "start": "314880",
    "end": "316800"
  },
  {
    "text": "work in binary if there's no negative",
    "start": "316800",
    "end": "318720"
  },
  {
    "text": "sign in binary how does that happen",
    "start": "318720",
    "end": "321540"
  },
  {
    "text": "go click go",
    "start": "321540",
    "end": "325400"
  }
]