[
  {
    "start": "0",
    "end": "34000"
  },
  {
    "text": "this is the at tiny 45",
    "start": "1040",
    "end": "3120"
  },
  {
    "text": "an avr microcontroller from the at tiny",
    "start": "3120",
    "end": "5440"
  },
  {
    "text": "series of eight pin",
    "start": "5440",
    "end": "6560"
  },
  {
    "text": "avr microcontrollers if you have a small",
    "start": "6560",
    "end": "8559"
  },
  {
    "text": "arduino or avr",
    "start": "8559",
    "end": "9599"
  },
  {
    "text": "project using a small chip like the tiny",
    "start": "9599",
    "end": "11519"
  },
  {
    "text": "45 is an easy way to reduce the size",
    "start": "11519",
    "end": "13840"
  },
  {
    "text": "cost and power consumption of your",
    "start": "13840",
    "end": "15280"
  },
  {
    "text": "project also working on small chips is",
    "start": "15280",
    "end": "17680"
  },
  {
    "text": "just fun",
    "start": "17680",
    "end": "18960"
  },
  {
    "text": "today we'll be riding bare metal c onto",
    "start": "18960",
    "end": "21199"
  },
  {
    "text": "the tiny 45",
    "start": "21199",
    "end": "22160"
  },
  {
    "text": "using the avr gcc tool chain it's way",
    "start": "22160",
    "end": "24480"
  },
  {
    "text": "easier than you think i promise",
    "start": "24480",
    "end": "25920"
  },
  {
    "text": "if you don't have the tiny 45 but you",
    "start": "25920",
    "end": "27840"
  },
  {
    "text": "have another 80 tiny chip",
    "start": "27840",
    "end": "29439"
  },
  {
    "text": "like the 85 or the 35 this tutorial will",
    "start": "29439",
    "end": "31920"
  },
  {
    "text": "work for you as well",
    "start": "31920",
    "end": "34000"
  },
  {
    "start": "34000",
    "end": "63000"
  },
  {
    "text": "to program the tiny 45 we'll need two",
    "start": "34000",
    "end": "36160"
  },
  {
    "text": "things the tiny 45 itself the target",
    "start": "36160",
    "end": "38800"
  },
  {
    "text": "and a programmer in this video i'll be",
    "start": "38800",
    "end": "41280"
  },
  {
    "text": "using an arduino uno as a programmer",
    "start": "41280",
    "end": "43600"
  },
  {
    "text": "to set up the uno as a programmer open",
    "start": "43600",
    "end": "45440"
  },
  {
    "text": "your arduino ide",
    "start": "45440",
    "end": "47039"
  },
  {
    "text": "go to examples and arduino isp",
    "start": "47039",
    "end": "50320"
  },
  {
    "text": "choose the right board for me it's the",
    "start": "50320",
    "end": "51840"
  },
  {
    "text": "uno",
    "start": "51840",
    "end": "53680"
  },
  {
    "text": "choose the right com port choose the avr",
    "start": "53680",
    "end": "56800"
  },
  {
    "text": "isp as a programmer and hit upload",
    "start": "56800",
    "end": "59359"
  },
  {
    "text": "once that's done your arduino is ready",
    "start": "59359",
    "end": "61199"
  },
  {
    "text": "to be used as an arduino programmer",
    "start": "61199",
    "end": "62960"
  },
  {
    "text": "the tiny45 is programmed over isp or in",
    "start": "62960",
    "end": "66080"
  },
  {
    "start": "63000",
    "end": "121000"
  },
  {
    "text": "system programming over its spi bus",
    "start": "66080",
    "end": "68720"
  },
  {
    "text": "to program the tiny45 we'll have to",
    "start": "68720",
    "end": "70720"
  },
  {
    "text": "connect two systems of the chip to the",
    "start": "70720",
    "end": "72560"
  },
  {
    "text": "programmer",
    "start": "72560",
    "end": "73439"
  },
  {
    "text": "the first being power so pins 4 and 8",
    "start": "73439",
    "end": "76479"
  },
  {
    "text": "and the second being the spi bus so pins",
    "start": "76479",
    "end": "78799"
  },
  {
    "text": "5 through 7 for data",
    "start": "78799",
    "end": "80479"
  },
  {
    "text": "and pin 1 for the reset control during",
    "start": "80479",
    "end": "82560"
  },
  {
    "text": "the programming process",
    "start": "82560",
    "end": "85520"
  },
  {
    "text": "here i'm connecting the programmer's",
    "start": "85759",
    "end": "87200"
  },
  {
    "text": "ground to pin 4 on the tiny 45",
    "start": "87200",
    "end": "90079"
  },
  {
    "text": "now 5 volts on the arduino to the",
    "start": "90079",
    "end": "92079"
  },
  {
    "text": "tiniest pin 8",
    "start": "92079",
    "end": "94079"
  },
  {
    "text": "arduino pin 10 to the tiniest pin 1 for",
    "start": "94079",
    "end": "96799"
  },
  {
    "text": "reset control",
    "start": "96799",
    "end": "98880"
  },
  {
    "text": "arduino pin 13 to tiny pin 7 for the",
    "start": "98880",
    "end": "102000"
  },
  {
    "text": "programming serial clock",
    "start": "102000",
    "end": "104320"
  },
  {
    "text": "arduino pin 12 to tiny pin 6. this is",
    "start": "104320",
    "end": "107200"
  },
  {
    "text": "programming data going in one direction",
    "start": "107200",
    "end": "109360"
  },
  {
    "text": "and then arduino pin 11 the tiny pin 5.",
    "start": "109360",
    "end": "112079"
  },
  {
    "text": "this is programming data going in the",
    "start": "112079",
    "end": "113520"
  },
  {
    "text": "other direction",
    "start": "113520",
    "end": "114799"
  },
  {
    "text": "okay great now we have our programmer",
    "start": "114799",
    "end": "116799"
  },
  {
    "text": "the arduino ready to program our target",
    "start": "116799",
    "end": "118640"
  },
  {
    "text": "the attorney 45",
    "start": "118640",
    "end": "119920"
  },
  {
    "text": "now we need to write something to",
    "start": "119920",
    "end": "121200"
  },
  {
    "start": "121000",
    "end": "328000"
  },
  {
    "text": "program to do this we'll first need a",
    "start": "121200",
    "end": "123119"
  },
  {
    "text": "few app packages",
    "start": "123119",
    "end": "124799"
  },
  {
    "text": "the first is gcc avr which contains a",
    "start": "124799",
    "end": "127360"
  },
  {
    "text": "compiler to produce avr binaries",
    "start": "127360",
    "end": "129840"
  },
  {
    "text": "the second is avrlibc which contains the",
    "start": "129840",
    "end": "132560"
  },
  {
    "text": "libraries required to write avr code",
    "start": "132560",
    "end": "135680"
  },
  {
    "text": "and the third is avrdude which is a",
    "start": "135680",
    "end": "137840"
  },
  {
    "text": "program used to program flash files to",
    "start": "137840",
    "end": "140319"
  },
  {
    "text": "avr chips for this bare metal example",
    "start": "140319",
    "end": "143120"
  },
  {
    "text": "we're going to write the blink led",
    "start": "143120",
    "end": "144879"
  },
  {
    "text": "example in",
    "start": "144879",
    "end": "145599"
  },
  {
    "text": "c and make an led on port b3",
    "start": "145599",
    "end": "149520"
  },
  {
    "text": "flash four times a second to start",
    "start": "149520",
    "end": "152560"
  },
  {
    "text": "we'll need to include avr slash io.h and",
    "start": "152560",
    "end": "155280"
  },
  {
    "text": "delay utilities",
    "start": "155280",
    "end": "156480"
  },
  {
    "text": "these are both header files for",
    "start": "156480",
    "end": "158000"
  },
  {
    "text": "libraries that gcc avr will reference",
    "start": "158000",
    "end": "160400"
  },
  {
    "text": "when compiling our program",
    "start": "160400",
    "end": "162319"
  },
  {
    "text": "next we need to set the direction of",
    "start": "162319",
    "end": "163920"
  },
  {
    "text": "port b3 to be an output",
    "start": "163920",
    "end": "166160"
  },
  {
    "text": "this is done by setting a bit in ddrb or",
    "start": "166160",
    "end": "169280"
  },
  {
    "text": "data direction register for port b to",
    "start": "169280",
    "end": "172160"
  },
  {
    "text": "say that port b3",
    "start": "172160",
    "end": "173760"
  },
  {
    "text": "is an output port the underscore bv",
    "start": "173760",
    "end": "176640"
  },
  {
    "text": "macro",
    "start": "176640",
    "end": "177360"
  },
  {
    "text": "is just a macro that converts a decimal",
    "start": "177360",
    "end": "179680"
  },
  {
    "text": "value to the appropriate flag mask in",
    "start": "179680",
    "end": "182080"
  },
  {
    "text": "binary hence bv for bit value",
    "start": "182080",
    "end": "184959"
  },
  {
    "text": "if you don't understand what that means",
    "start": "184959",
    "end": "186239"
  },
  {
    "text": "that's okay that's why we have",
    "start": "186239",
    "end": "187440"
  },
  {
    "text": "abstraction it's just understand that",
    "start": "187440",
    "end": "189200"
  },
  {
    "text": "the bv on dd b3",
    "start": "189200",
    "end": "192239"
  },
  {
    "text": "sets it to the correct value for",
    "start": "192239",
    "end": "193680"
  },
  {
    "text": "programming next with a for loop we",
    "start": "193680",
    "end": "196080"
  },
  {
    "text": "start an infinite loop where we enable",
    "start": "196080",
    "end": "198000"
  },
  {
    "text": "port b3 by setting a bit in port b",
    "start": "198000",
    "end": "201360"
  },
  {
    "text": "this will turn the led on next we sleep",
    "start": "201360",
    "end": "204560"
  },
  {
    "text": "for 250 milliseconds or one quarter",
    "start": "204560",
    "end": "206799"
  },
  {
    "text": "second",
    "start": "206799",
    "end": "208080"
  },
  {
    "text": "next we unset port b3 by unmasking the",
    "start": "208080",
    "end": "211280"
  },
  {
    "text": "bit again if the syntax here doesn't",
    "start": "211280",
    "end": "213519"
  },
  {
    "text": "make sense with the ampersand and the",
    "start": "213519",
    "end": "215040"
  },
  {
    "text": "equal sign",
    "start": "215040",
    "end": "215599"
  },
  {
    "text": "and the not sign that's totally okay",
    "start": "215599",
    "end": "217599"
  },
  {
    "text": "just blindly trust me",
    "start": "217599",
    "end": "219040"
  },
  {
    "text": "don't actually do that but just take the",
    "start": "219040",
    "end": "221200"
  },
  {
    "text": "code",
    "start": "221200",
    "end": "223120"
  },
  {
    "text": "now we have to compile our program and",
    "start": "223120",
    "end": "224640"
  },
  {
    "text": "convert it to a format that avrdude",
    "start": "224640",
    "end": "226560"
  },
  {
    "text": "understands",
    "start": "226560",
    "end": "227920"
  },
  {
    "text": "to do this we first need to compile the",
    "start": "227920",
    "end": "230080"
  },
  {
    "text": "c into binary",
    "start": "230080",
    "end": "231680"
  },
  {
    "text": "do this using avrgcc the tac os flag",
    "start": "231680",
    "end": "235040"
  },
  {
    "text": "optimizes a program for size reducing",
    "start": "235040",
    "end": "237120"
  },
  {
    "text": "its size as small as possible given the",
    "start": "237120",
    "end": "238720"
  },
  {
    "text": "limited size of the at2045",
    "start": "238720",
    "end": "241280"
  },
  {
    "text": "the tac fcpu flag is to tell the",
    "start": "241280",
    "end": "243920"
  },
  {
    "text": "compiler",
    "start": "243920",
    "end": "244720"
  },
  {
    "text": "how fast the clock is running in this",
    "start": "244720",
    "end": "246560"
  },
  {
    "text": "case our clock is one megahertz",
    "start": "246560",
    "end": "248720"
  },
  {
    "text": "this is done so that things like delays",
    "start": "248720",
    "end": "250640"
  },
  {
    "text": "sleeps and other clock based timers are",
    "start": "250640",
    "end": "252840"
  },
  {
    "text": "accurate",
    "start": "252840",
    "end": "254080"
  },
  {
    "text": "we tell it to output a file called blink",
    "start": "254080",
    "end": "256639"
  },
  {
    "text": "by default",
    "start": "256639",
    "end": "257359"
  },
  {
    "text": "avr gcc creates l files now we need to",
    "start": "257359",
    "end": "260799"
  },
  {
    "text": "convert that outputted elf which avrdude",
    "start": "260799",
    "end": "263120"
  },
  {
    "text": "does not understand",
    "start": "263120",
    "end": "264320"
  },
  {
    "text": "into an ihex or intel hex file which it",
    "start": "264320",
    "end": "267040"
  },
  {
    "text": "does",
    "start": "267040",
    "end": "268000"
  },
  {
    "text": "we do this with object copy the tac r",
    "start": "268000",
    "end": "270400"
  },
  {
    "text": "flag removes the eeprom section of the",
    "start": "270400",
    "end": "272400"
  },
  {
    "text": "elf",
    "start": "272400",
    "end": "272800"
  },
  {
    "text": "because we can't write rom hence read",
    "start": "272800",
    "end": "274960"
  },
  {
    "text": "only memory",
    "start": "274960",
    "end": "276000"
  },
  {
    "text": "the rest of the command specifies to",
    "start": "276000",
    "end": "277600"
  },
  {
    "text": "output an ihex format so it'll take the",
    "start": "277600",
    "end": "279600"
  },
  {
    "text": "elf which is an elf format",
    "start": "279600",
    "end": "281199"
  },
  {
    "text": "and output an ihex file",
    "start": "281199",
    "end": "284240"
  },
  {
    "text": "next we finally get to flash the at tiny",
    "start": "284240",
    "end": "287120"
  },
  {
    "text": "with avr dude",
    "start": "287120",
    "end": "288160"
  },
  {
    "text": "the flags here that are really important",
    "start": "288160",
    "end": "289680"
  },
  {
    "text": "there's a lot of them but the ones to",
    "start": "289680",
    "end": "290880"
  },
  {
    "text": "pay attention to",
    "start": "290880",
    "end": "292000"
  },
  {
    "text": "are tax c stk 500 v1 which tells avr",
    "start": "292000",
    "end": "295520"
  },
  {
    "text": "dude that we're using the arduino as an",
    "start": "295520",
    "end": "297120"
  },
  {
    "text": "isp or in-system programmer",
    "start": "297120",
    "end": "299280"
  },
  {
    "text": "the tac u flash w blink hex tells avr",
    "start": "299280",
    "end": "302400"
  },
  {
    "text": "that we're writing the blink hex file",
    "start": "302400",
    "end": "304400"
  },
  {
    "text": "to flash tac p slash dev ttyacm0",
    "start": "304400",
    "end": "308960"
  },
  {
    "text": "is the device path of the arduino this",
    "start": "308960",
    "end": "311360"
  },
  {
    "text": "may vary for you it could be tty usb 0",
    "start": "311360",
    "end": "313600"
  },
  {
    "text": "or ttyacm1 for example",
    "start": "313600",
    "end": "315919"
  },
  {
    "text": "and finally tak b 19200 is the baud rate",
    "start": "315919",
    "end": "319120"
  },
  {
    "text": "of the arduino isp",
    "start": "319120",
    "end": "320639"
  },
  {
    "text": "this may vary for you but in most cases",
    "start": "320639",
    "end": "322720"
  },
  {
    "text": "it's either 19200",
    "start": "322720",
    "end": "324720"
  },
  {
    "text": "115 200 or 38400",
    "start": "324720",
    "end": "328000"
  },
  {
    "start": "328000",
    "end": "334000"
  },
  {
    "text": "while the previous command was running",
    "start": "328000",
    "end": "329440"
  },
  {
    "text": "you should have seen the rx and tx",
    "start": "329440",
    "end": "331520"
  },
  {
    "text": "lights on your programmer go crazy",
    "start": "331520",
    "end": "334160"
  },
  {
    "start": "334000",
    "end": "360000"
  },
  {
    "text": "to hook up the led take your led and",
    "start": "334160",
    "end": "336400"
  },
  {
    "text": "find which of the two leads",
    "start": "336400",
    "end": "338000"
  },
  {
    "text": "is the positive lead the positive lead",
    "start": "338000",
    "end": "339840"
  },
  {
    "text": "is the longer of the two",
    "start": "339840",
    "end": "342000"
  },
  {
    "text": "put the positive end of your led into",
    "start": "342000",
    "end": "344560"
  },
  {
    "text": "pb3",
    "start": "344560",
    "end": "345360"
  },
  {
    "text": "on the 80 tiny 45 then using a resistor",
    "start": "345360",
    "end": "348880"
  },
  {
    "text": "something small like 470 ohms",
    "start": "348880",
    "end": "351199"
  },
  {
    "text": "ground the negative side of the lead to",
    "start": "351199",
    "end": "353600"
  },
  {
    "text": "ground",
    "start": "353600",
    "end": "354960"
  },
  {
    "text": "now you should see that my led is",
    "start": "354960",
    "end": "356560"
  },
  {
    "text": "blinking four times a second as intended",
    "start": "356560",
    "end": "360560"
  },
  {
    "start": "360000",
    "end": "372000"
  },
  {
    "text": "well guys that about wraps up this",
    "start": "360560",
    "end": "362080"
  },
  {
    "text": "tutorial if you learned something or if",
    "start": "362080",
    "end": "363440"
  },
  {
    "text": "you enjoyed this video do me a favor hit",
    "start": "363440",
    "end": "365039"
  },
  {
    "text": "like hit subscribe",
    "start": "365039",
    "end": "366000"
  },
  {
    "text": "for more little content like this and i",
    "start": "366000",
    "end": "367840"
  },
  {
    "text": "will see you guys next week have a good",
    "start": "367840",
    "end": "369919"
  },
  {
    "text": "one",
    "start": "369919",
    "end": "372880"
  }
]