[
  {
    "text": "the best way to learn how to write safer",
    "start": "280",
    "end": "2320"
  },
  {
    "text": "code is to break bad code if you're a",
    "start": "2320",
    "end": "5279"
  },
  {
    "text": "developer a manager or a student you",
    "start": "5279",
    "end": "7720"
  },
  {
    "text": "should try out what we're about to do in",
    "start": "7720",
    "end": "9160"
  },
  {
    "text": "this video in this video we're going to",
    "start": "9160",
    "end": "11080"
  },
  {
    "text": "take the code that I wrote from my last",
    "start": "11080",
    "end": "12920"
  },
  {
    "text": "video about how strings are getting",
    "start": "12920",
    "end": "14719"
  },
  {
    "text": "people hacked and use a buffer overflow",
    "start": "14719",
    "end": "17520"
  },
  {
    "text": "attack to hack into it let's get into it",
    "start": "17520",
    "end": "19600"
  },
  {
    "text": "here we have the code from the video",
    "start": "19600",
    "end": "21480"
  },
  {
    "text": "that I made so pretty simple piece of",
    "start": "21480",
    "end": "22960"
  },
  {
    "text": "code all it does is it prints hello",
    "start": "22960",
    "end": "24960"
  },
  {
    "text": "welcome to the secure server and then it",
    "start": "24960",
    "end": "26920"
  },
  {
    "text": "checks your password and if it checks",
    "start": "26920",
    "end": "28640"
  },
  {
    "text": "the password correctly you you get to",
    "start": "28640",
    "end": "30279"
  },
  {
    "text": "run the debug function which all that",
    "start": "30279",
    "end": "31960"
  },
  {
    "text": "does is give you a shell so if you know",
    "start": "31960",
    "end": "33760"
  },
  {
    "text": "the password well easy money you can",
    "start": "33760",
    "end": "35480"
  },
  {
    "text": "just use the password to get in um",
    "start": "35480",
    "end": "37239"
  },
  {
    "text": "unfortunately the is valid password",
    "start": "37239",
    "end": "39280"
  },
  {
    "text": "function is a piece of code that we did",
    "start": "39280",
    "end": "41200"
  },
  {
    "text": "not get it's actually in my secrets. C",
    "start": "41200",
    "end": "44120"
  },
  {
    "text": "here all it does is it opens a file",
    "start": "44120",
    "end": "45960"
  },
  {
    "text": "password on the computer checks your",
    "start": "45960",
    "end": "47680"
  },
  {
    "text": "input against that and if it's right you",
    "start": "47680",
    "end": "49360"
  },
  {
    "text": "get in but unfortunately you don't know",
    "start": "49360",
    "end": "51719"
  },
  {
    "text": "the password yet there is actually a",
    "start": "51719",
    "end": "53120"
  },
  {
    "text": "vulnerability in this function where",
    "start": "53120",
    "end": "55160"
  },
  {
    "text": "like I described in my previous video",
    "start": "55160",
    "end": "57160"
  },
  {
    "text": "the gets function is what is being used",
    "start": "57160",
    "end": "59280"
  },
  {
    "text": "to read the user input gets is an",
    "start": "59280",
    "end": "61800"
  },
  {
    "text": "inherently vulnerable function and",
    "start": "61800",
    "end": "63160"
  },
  {
    "text": "actually when I compile this program the",
    "start": "63160",
    "end": "64720"
  },
  {
    "text": "Linker yells at me and says hey like why",
    "start": "64720",
    "end": "66680"
  },
  {
    "text": "are you using gets so what we're going",
    "start": "66680",
    "end": "68040"
  },
  {
    "text": "to do here is we're going to play around",
    "start": "68040",
    "end": "69320"
  },
  {
    "text": "with the program and see if we can find",
    "start": "69320",
    "end": "71119"
  },
  {
    "text": "a way to break into it using the gets",
    "start": "71119",
    "end": "74040"
  },
  {
    "text": "function step one we're going to go",
    "start": "74040",
    "end": "75520"
  },
  {
    "text": "ahead and we're going to run the program",
    "start": "75520",
    "end": "76600"
  },
  {
    "text": "right and just make sure that it works",
    "start": "76600",
    "end": "77799"
  },
  {
    "text": "as intended so welcome to the secure",
    "start": "77799",
    "end": "79320"
  },
  {
    "text": "server what is our password uh we can",
    "start": "79320",
    "end": "81280"
  },
  {
    "text": "test out some basic stuff password admin",
    "start": "81280",
    "end": "84759"
  },
  {
    "text": "okay so obviously we don't know the",
    "start": "84759",
    "end": "86360"
  },
  {
    "text": "password we're not going to get in this",
    "start": "86360",
    "end": "87680"
  },
  {
    "text": "way but like we said before gets is a",
    "start": "87680",
    "end": "90759"
  },
  {
    "text": "vulnerable function and we can actually",
    "start": "90759",
    "end": "92320"
  },
  {
    "text": "see if we give it too much input at a",
    "start": "92320",
    "end": "94560"
  },
  {
    "text": "certain point it starts to break so",
    "start": "94560",
    "end": "96399"
  },
  {
    "text": "we'll give it a lot of these guys wrong",
    "start": "96399",
    "end": "98200"
  },
  {
    "text": "password but if we keep going eventually",
    "start": "98200",
    "end": "101320"
  },
  {
    "text": "we put the program into a weird State",
    "start": "101320",
    "end": "103399"
  },
  {
    "text": "the program segmentation faults and then",
    "start": "103399",
    "end": "105360"
  },
  {
    "text": "it core dumps and we can actually look",
    "start": "105360",
    "end": "107520"
  },
  {
    "text": "at this command here D message pipe into",
    "start": "107520",
    "end": "110119"
  },
  {
    "text": "tail Tech N2 a few things are happening",
    "start": "110119",
    "end": "112960"
  },
  {
    "text": "here so we see that the program hacked",
    "start": "112960",
    "end": "115640"
  },
  {
    "text": "the name of our program our server",
    "start": "115640",
    "end": "117439"
  },
  {
    "text": "crashed it was a segmentation fall at",
    "start": "117439",
    "end": "119920"
  },
  {
    "text": "trying to access this address here",
    "start": "119920",
    "end": "122280"
  },
  {
    "text": "interesting we'll talk about that in a",
    "start": "122280",
    "end": "123520"
  },
  {
    "text": "second while trying to return to the",
    "start": "123520",
    "end": "125360"
  },
  {
    "text": "instruction pointer 4141 4141 so if we",
    "start": "125360",
    "end": "129520"
  },
  {
    "text": "go into Python 3 and we actually take",
    "start": "129520",
    "end": "132400"
  },
  {
    "text": "these 41 41s we'll see an interesting",
    "start": "132400",
    "end": "135040"
  },
  {
    "text": "concept happens we say",
    "start": "135040",
    "end": "136760"
  },
  {
    "text": "bytes. from heex and give it this string",
    "start": "136760",
    "end": "140160"
  },
  {
    "text": "as",
    "start": "140160",
    "end": "141680"
  },
  {
    "text": "hex interesting so 4141 4141 is quad a",
    "start": "141680",
    "end": "146959"
  },
  {
    "text": "what actually happened here is we gave",
    "start": "146959",
    "end": "148599"
  },
  {
    "text": "it so much input that the buffer",
    "start": "148599",
    "end": "150239"
  },
  {
    "text": "overflow took control of the instruction",
    "start": "150239",
    "end": "153160"
  },
  {
    "text": "pointer on the stack when it tried to",
    "start": "153160",
    "end": "155360"
  },
  {
    "text": "return from our password function pretty",
    "start": "155360",
    "end": "158000"
  },
  {
    "text": "interesting so can we put a number here",
    "start": "158000",
    "end": "161440"
  },
  {
    "text": "that is important to us to give us",
    "start": "161440",
    "end": "163519"
  },
  {
    "text": "access to this system answer is yes we",
    "start": "163519",
    "end": "166319"
  },
  {
    "text": "actually can put the address of the",
    "start": "166319",
    "end": "168760"
  },
  {
    "text": "debug function onto the stack where the",
    "start": "168760",
    "end": "171120"
  },
  {
    "text": "instruction pointer used to be and use",
    "start": "171120",
    "end": "173360"
  },
  {
    "text": "that to run this function even though we",
    "start": "173360",
    "end": "175840"
  },
  {
    "text": "don't know the password very interesting",
    "start": "175840",
    "end": "178480"
  },
  {
    "text": "how do we figure out the address of the",
    "start": "178480",
    "end": "180400"
  },
  {
    "text": "debug function well you can look at the",
    "start": "180400",
    "end": "182280"
  },
  {
    "text": "source code but the source code doesn't",
    "start": "182280",
    "end": "183920"
  },
  {
    "text": "actually have the address of the",
    "start": "183920",
    "end": "185920"
  },
  {
    "text": "functions the address of the functions",
    "start": "185920",
    "end": "187560"
  },
  {
    "text": "is going to be determined at compile",
    "start": "187560",
    "end": "189440"
  },
  {
    "text": "time so we will have to look at the",
    "start": "189440",
    "end": "191280"
  },
  {
    "text": "actual compiled binary we do that by",
    "start": "191280",
    "end": "194000"
  },
  {
    "text": "going to object dump type in object dump",
    "start": "194000",
    "end": "196480"
  },
  {
    "text": "pack D and then do it on our program",
    "start": "196480",
    "end": "198920"
  },
  {
    "text": "pipe that into less and we're going to",
    "start": "198920",
    "end": "200440"
  },
  {
    "text": "search for the debug function the debug",
    "start": "200440",
    "end": "203560"
  },
  {
    "text": "function here is at this address so it's",
    "start": "203560",
    "end": "205560"
  },
  {
    "text": "going to be",
    "start": "205560",
    "end": "206440"
  },
  {
    "text": "0804",
    "start": "206440",
    "end": "208280"
  },
  {
    "text": "9296 we're going to keep that and stow",
    "start": "208280",
    "end": "210720"
  },
  {
    "text": "it away for later in our exploit. py",
    "start": "210720",
    "end": "214000"
  },
  {
    "text": "file so what we're going to do in",
    "start": "214000",
    "end": "215080"
  },
  {
    "text": "exploit. is write a python exploit that",
    "start": "215080",
    "end": "218120"
  },
  {
    "text": "gets us control of that program using a",
    "start": "218120",
    "end": "220640"
  },
  {
    "text": "specially crafted input right so we're",
    "start": "220640",
    "end": "222400"
  },
  {
    "text": "just going to save this as a comment and",
    "start": "222400",
    "end": "224519"
  },
  {
    "text": "say this is the debug address okay so",
    "start": "224519",
    "end": "228200"
  },
  {
    "text": "now that we know the debug address in",
    "start": "228200",
    "end": "229560"
  },
  {
    "text": "theory if we control the stack at this",
    "start": "229560",
    "end": "233400"
  },
  {
    "text": "location where 4141 4141 happens then we",
    "start": "233400",
    "end": "237079"
  },
  {
    "text": "can put our own address in there and",
    "start": "237079",
    "end": "239079"
  },
  {
    "text": "then R to to debug so we need to figure",
    "start": "239079",
    "end": "241480"
  },
  {
    "text": "out how many A's do we put in to start",
    "start": "241480",
    "end": "244079"
  },
  {
    "text": "controlling our program because you know",
    "start": "244079",
    "end": "246360"
  },
  {
    "text": "we put bunch of A's here but the",
    "start": "246360",
    "end": "248439"
  },
  {
    "text": "question is how many A's are our A's",
    "start": "248439",
    "end": "251239"
  },
  {
    "text": "right which what point do we start to",
    "start": "251239",
    "end": "252920"
  },
  {
    "text": "control the buffer so we're going to",
    "start": "252920",
    "end": "254640"
  },
  {
    "text": "figure that out by kind of guessing uh",
    "start": "254640",
    "end": "256680"
  },
  {
    "text": "we can start the guess with the number",
    "start": "256680",
    "end": "258560"
  },
  {
    "text": "of bytes in our buffer we know that our",
    "start": "258560",
    "end": "260239"
  },
  {
    "text": "buffer length is 64 bytes so we're going",
    "start": "260239",
    "end": "263199"
  },
  {
    "text": "to ask Python 3 hey do me a favor and",
    "start": "263199",
    "end": "265320"
  },
  {
    "text": "just print a * 64 and we can take that a",
    "start": "265320",
    "end": "269919"
  },
  {
    "text": "* 64 and use that as our initial guess",
    "start": "269919",
    "end": "273160"
  },
  {
    "text": "at how long we need to make our buffer",
    "start": "273160",
    "end": "275000"
  },
  {
    "text": "to get control of the instruction",
    "start": "275000",
    "end": "276320"
  },
  {
    "text": "pointer so we run the Hacked we'll put",
    "start": "276320",
    "end": "278080"
  },
  {
    "text": "in the 64 bytes okay nothing's going to",
    "start": "278080",
    "end": "279880"
  },
  {
    "text": "happen there what we can do is we can",
    "start": "279880",
    "end": "281960"
  },
  {
    "text": "put in a series of unique 4 byte",
    "start": "281960",
    "end": "284600"
  },
  {
    "text": "characters to figure out where our",
    "start": "284600",
    "end": "286360"
  },
  {
    "text": "control actually happens we'll go after",
    "start": "286360",
    "end": "288280"
  },
  {
    "text": "that 64 bytes we'll go bbbb cccc and so",
    "start": "288280",
    "end": "292360"
  },
  {
    "text": "on we'll go all the way out until F and",
    "start": "292360",
    "end": "294759"
  },
  {
    "text": "this will crash the server what we can",
    "start": "294759",
    "end": "296520"
  },
  {
    "text": "do now is we can take this chain we're",
    "start": "296520",
    "end": "298639"
  },
  {
    "text": "going to copy that contr C we're going",
    "start": "298639",
    "end": "301240"
  },
  {
    "text": "to say d message pipe detail TN 2 so we",
    "start": "301240",
    "end": "304199"
  },
  {
    "text": "got control at 4545 4545 which Python 3",
    "start": "304199",
    "end": "309120"
  },
  {
    "text": "will tell",
    "start": "309120",
    "end": "311400"
  },
  {
    "text": "us",
    "start": "311400",
    "end": "313560"
  },
  {
    "text": "was quad e so we'll take that and we'll",
    "start": "313560",
    "end": "316479"
  },
  {
    "text": "put it into our exploit here and say our",
    "start": "316479",
    "end": "317960"
  },
  {
    "text": "initial payload is equal to all of these",
    "start": "317960",
    "end": "321000"
  },
  {
    "text": "up until but not including quad e so now",
    "start": "321000",
    "end": "324240"
  },
  {
    "text": "that we have that that means that the",
    "start": "324240",
    "end": "325800"
  },
  {
    "text": "next four bytes are going to be our",
    "start": "325800",
    "end": "328080"
  },
  {
    "text": "instruction pointers we'll say that the",
    "start": "328080",
    "end": "329360"
  },
  {
    "text": "payLo load plus equals the bytes of",
    "start": "329360",
    "end": "333759"
  },
  {
    "text": "08 04 92 96 which is the address we got",
    "start": "333759",
    "end": "338759"
  },
  {
    "text": "here which is the debug address we're",
    "start": "338759",
    "end": "340479"
  },
  {
    "text": "going to return to debug and don't",
    "start": "340479",
    "end": "342720"
  },
  {
    "text": "forget we have to use the um python",
    "start": "342720",
    "end": "345039"
  },
  {
    "text": "reverse notation to flip that because",
    "start": "345039",
    "end": "346919"
  },
  {
    "text": "it's 32-bit Intel which is little endian",
    "start": "346919",
    "end": "349319"
  },
  {
    "text": "so we'll take that okay so now that we",
    "start": "349319",
    "end": "351000"
  },
  {
    "text": "have that we have to first make sure we",
    "start": "351000",
    "end": "352360"
  },
  {
    "text": "make this a bite string as well so that",
    "start": "352360",
    "end": "354160"
  },
  {
    "text": "python doesn't get mad at us for",
    "start": "354160",
    "end": "355319"
  },
  {
    "text": "concatenating a bite string to a string",
    "start": "355319",
    "end": "357800"
  },
  {
    "text": "uh then also we have to add some",
    "start": "357800",
    "end": "358720"
  },
  {
    "text": "additional borderer plate code code to",
    "start": "358720",
    "end": "359919"
  },
  {
    "text": "make sure that python properly outputs",
    "start": "359919",
    "end": "362319"
  },
  {
    "text": "um B uh by strings so we'll do cy.",
    "start": "362319",
    "end": "365000"
  },
  {
    "text": "standard out. buffer. WR and we're going",
    "start": "365000",
    "end": "367120"
  },
  {
    "text": "to write our payload to the screen so",
    "start": "367120",
    "end": "369560"
  },
  {
    "text": "this will actually print out our payload",
    "start": "369560",
    "end": "371759"
  },
  {
    "text": "in asy so we take that and we can use",
    "start": "371759",
    "end": "374199"
  },
  {
    "text": "this script to test out if our exploit",
    "start": "374199",
    "end": "376800"
  },
  {
    "text": "works we'll do this and you see okay",
    "start": "376800",
    "end": "379360"
  },
  {
    "text": "cool we put in our password and we're",
    "start": "379360",
    "end": "381199"
  },
  {
    "text": "entering to bug mode but it crashes the",
    "start": "381199",
    "end": "384160"
  },
  {
    "text": "problem with this is that when we write",
    "start": "384160",
    "end": "385639"
  },
  {
    "text": "our exploit this actually closes the",
    "start": "385639",
    "end": "388120"
  },
  {
    "text": "file descriptors um of the shell before",
    "start": "388120",
    "end": "390759"
  },
  {
    "text": "we can actually use the shell to do",
    "start": "390759",
    "end": "392199"
  },
  {
    "text": "anything cool so what we have to do is",
    "start": "392199",
    "end": "393759"
  },
  {
    "text": "we have to say bracket our actual",
    "start": "393759",
    "end": "397199"
  },
  {
    "text": "exploit so Python 3 exploit. pi and then",
    "start": "397199",
    "end": "399720"
  },
  {
    "text": "a semicolon and then cat that'll",
    "start": "399720",
    "end": "401720"
  },
  {
    "text": "actually keep the file descriptors up",
    "start": "401720",
    "end": "403120"
  },
  {
    "text": "and we pipe all of that into hacked so",
    "start": "403120",
    "end": "406199"
  },
  {
    "text": "now we are in debug mode and we have a",
    "start": "406199",
    "end": "408639"
  },
  {
    "text": "full shell on the system so we're not",
    "start": "408639",
    "end": "411440"
  },
  {
    "text": "root obviously uh but we are we do have",
    "start": "411440",
    "end": "413639"
  },
  {
    "text": "a shell we bypass the user",
    "start": "413639",
    "end": "414919"
  },
  {
    "text": "authentication and we can use this to",
    "start": "414919",
    "end": "417800"
  },
  {
    "text": "cat the password and boom what is that",
    "start": "417800",
    "end": "420720"
  },
  {
    "text": "password is too cool for school all",
    "start": "420720",
    "end": "423520"
  },
  {
    "text": "right guys that is it I've left the",
    "start": "423520",
    "end": "424919"
  },
  {
    "text": "source code and the compiled binaries",
    "start": "424919",
    "end": "426919"
  },
  {
    "text": "down in the description below uh I would",
    "start": "426919",
    "end": "429000"
  },
  {
    "text": "highly suggest go and try this out on",
    "start": "429000",
    "end": "431400"
  },
  {
    "text": "your own and uh whoa whoa what what's",
    "start": "431400",
    "end": "434599"
  },
  {
    "text": "going",
    "start": "434599",
    "end": "435800"
  },
  {
    "text": "on mhm mhm and then and then by the",
    "start": "435800",
    "end": "439000"
  },
  {
    "text": "transit of",
    "start": "439000",
    "end": "440800"
  },
  {
    "text": "property stalks only go up good okay oh",
    "start": "440800",
    "end": "444720"
  },
  {
    "text": "hey I didn't see you guys there sorry",
    "start": "444720",
    "end": "446759"
  },
  {
    "text": "don't mind me just a scientist Tri L",
    "start": "446759",
    "end": "449160"
  },
  {
    "text": "trying to figure out the best way for",
    "start": "449160",
    "end": "451160"
  },
  {
    "text": "you guys to all learn new topics um if",
    "start": "451160",
    "end": "453000"
  },
  {
    "text": "you're interested in that which you're",
    "start": "453000",
    "end": "454240"
  },
  {
    "text": "here so I'm sure you are uh check out",
    "start": "454240",
    "end": "456000"
  },
  {
    "text": "this message from our sponsor brilliant",
    "start": "456000",
    "end": "457639"
  },
  {
    "text": "brilliant is an amazing platform for",
    "start": "457639",
    "end": "459360"
  },
  {
    "text": "interactively learning stem topics with",
    "start": "459360",
    "end": "461199"
  },
  {
    "text": "over 70 courses ranging from geometry to",
    "start": "461199",
    "end": "463599"
  },
  {
    "text": "Scientific thinking that are all updated",
    "start": "463599",
    "end": "465560"
  },
  {
    "text": "monthly whether you're a computer",
    "start": "465560",
    "end": "467159"
  },
  {
    "text": "scientist an artist or an economist",
    "start": "467159",
    "end": "469360"
  },
  {
    "text": "brilliant has something cool for you to",
    "start": "469360",
    "end": "471159"
  },
  {
    "text": "discover my favorite part about",
    "start": "471159",
    "end": "472599"
  },
  {
    "text": "brilliant is their interactive examples",
    "start": "472599",
    "end": "474599"
  },
  {
    "text": "instead of giving you a wall of text to",
    "start": "474599",
    "end": "476120"
  },
  {
    "text": "read every brilliant lesson is filled",
    "start": "476120",
    "end": "477879"
  },
  {
    "text": "with Hands-On problems you can use to",
    "start": "477879",
    "end": "479800"
  },
  {
    "text": "test your understanding as you go I",
    "start": "479800",
    "end": "481840"
  },
  {
    "text": "personally am taking their introduction",
    "start": "481840",
    "end": "483440"
  },
  {
    "text": "to neural networks course right now",
    "start": "483440",
    "end": "485599"
  },
  {
    "text": "check out this lesson where I learn how",
    "start": "485599",
    "end": "487280"
  },
  {
    "text": "nural Nets work and allow for the",
    "start": "487280",
    "end": "488919"
  },
  {
    "text": "computer to interpret my personal",
    "start": "488919",
    "end": "490680"
  },
  {
    "text": "handwriting it's pretty awesome you can",
    "start": "490680",
    "end": "492319"
  },
  {
    "text": "try brilliant right now for free and",
    "start": "492319",
    "end": "494240"
  },
  {
    "text": "using my link www. brilliant.org lowl",
    "start": "494240",
    "end": "497800"
  },
  {
    "text": "learning the first 200 of you to try it",
    "start": "497800",
    "end": "500039"
  },
  {
    "text": "get 20% off an annual subscription",
    "start": "500039",
    "end": "502479"
  },
  {
    "text": "thanks again brilliant for sponsoring",
    "start": "502479",
    "end": "503879"
  },
  {
    "text": "this video",
    "start": "503879",
    "end": "506319"
  }
]