[
  {
    "text": "I changed my mind about Zig originally",
    "start": "40",
    "end": "2200"
  },
  {
    "text": "when I started the coding it about a",
    "start": "2200",
    "end": "3520"
  },
  {
    "text": "year ago I wasn't sure if it actually",
    "start": "3520",
    "end": "5640"
  },
  {
    "text": "had a meaningful place in the developer",
    "start": "5640",
    "end": "8000"
  },
  {
    "text": "ecosystem and as I've been using it and",
    "start": "8000",
    "end": "10280"
  },
  {
    "text": "being asked more and more questions",
    "start": "10280",
    "end": "11719"
  },
  {
    "text": "about it I think I've come to a better",
    "start": "11719",
    "end": "13799"
  },
  {
    "text": "conclusion in this video we're going to",
    "start": "13799",
    "end": "15320"
  },
  {
    "text": "talk about what ziglang is where it",
    "start": "15320",
    "end": "18320"
  },
  {
    "text": "lives in the developer ecosystem and my",
    "start": "18320",
    "end": "20880"
  },
  {
    "text": "thoughts on the syntax and the features",
    "start": "20880",
    "end": "22840"
  },
  {
    "text": "of the language now if you're new here",
    "start": "22840",
    "end": "24920"
  },
  {
    "text": "hi I'm lval learning I make videos about",
    "start": "24920",
    "end": "26960"
  },
  {
    "text": "software security programming and cyber",
    "start": "26960",
    "end": "29119"
  },
  {
    "text": "security in general so if you like that",
    "start": "29119",
    "end": "30599"
  },
  {
    "text": "stuff or just want to hang out with me",
    "start": "30599",
    "end": "31800"
  },
  {
    "text": "hit that sub button I really appreciate",
    "start": "31800",
    "end": "33000"
  },
  {
    "text": "it now a lot of new programmers ask me",
    "start": "33000",
    "end": "34960"
  },
  {
    "text": "uh what language should I learn should I",
    "start": "34960",
    "end": "36600"
  },
  {
    "text": "learn C or C unsafe or should I learn",
    "start": "36600",
    "end": "39040"
  },
  {
    "text": "rust or is rust too hard or should I",
    "start": "39040",
    "end": "40960"
  },
  {
    "text": "learn Zig and I think for a long time I",
    "start": "40960",
    "end": "43680"
  },
  {
    "text": "had a good answer about C and rust but I",
    "start": "43680",
    "end": "46760"
  },
  {
    "text": "didn't really know how to answer when it",
    "start": "46760",
    "end": "48160"
  },
  {
    "text": "came to Zig Zig had this weird aura",
    "start": "48160",
    "end": "50760"
  },
  {
    "text": "about it where I wasn't sure what",
    "start": "50760",
    "end": "52120"
  },
  {
    "text": "problem it solved but I think I'm going",
    "start": "52120",
    "end": "53239"
  },
  {
    "text": "to be able to answer that for you today",
    "start": "53239",
    "end": "54719"
  },
  {
    "text": "if you consider the ecosystem of systems",
    "start": "54719",
    "end": "56920"
  },
  {
    "text": "programming you have the C language and",
    "start": "56920",
    "end": "59280"
  },
  {
    "text": "you have Russ now those are the two main",
    "start": "59280",
    "end": "61239"
  },
  {
    "text": "ones that stick out in my head when it",
    "start": "61239",
    "end": "62840"
  },
  {
    "text": "comes to systems level languages and",
    "start": "62840",
    "end": "64838"
  },
  {
    "text": "we're not going to talk about C++ by the",
    "start": "64839",
    "end": "67000"
  },
  {
    "text": "way now there is go go is another",
    "start": "67000",
    "end": "69040"
  },
  {
    "text": "compiled language that is very very good",
    "start": "69040",
    "end": "70600"
  },
  {
    "text": "and getting more and more speed but go",
    "start": "70600",
    "end": "72680"
  },
  {
    "text": "is a garbage collected language and some",
    "start": "72680",
    "end": "74680"
  },
  {
    "text": "systems some platforms and some projects",
    "start": "74680",
    "end": "77280"
  },
  {
    "text": "require that you don't use garbage",
    "start": "77280",
    "end": "78880"
  },
  {
    "text": "collection for one reason or another",
    "start": "78880",
    "end": "80640"
  },
  {
    "text": "garbage collection is inherently",
    "start": "80640",
    "end": "82520"
  },
  {
    "text": "non-deterministic so a lot of the times",
    "start": "82520",
    "end": "84439"
  },
  {
    "text": "people will just choose to not use a",
    "start": "84439",
    "end": "86159"
  },
  {
    "text": "garbage collected language now you're",
    "start": "86159",
    "end": "87799"
  },
  {
    "text": "left with the basic two you have have C",
    "start": "87799",
    "end": "90880"
  },
  {
    "text": "and rust now each of them have their",
    "start": "90880",
    "end": "93600"
  },
  {
    "text": "pros and their cons their shortcomings",
    "start": "93600",
    "end": "95439"
  },
  {
    "text": "and their power right C on the one hand",
    "start": "95439",
    "end": "98320"
  },
  {
    "text": "is the OG language it's been around",
    "start": "98320",
    "end": "100560"
  },
  {
    "text": "since like 1972 or whatever and it's",
    "start": "100560",
    "end": "102920"
  },
  {
    "text": "it's one of the best languages that",
    "start": "102920",
    "end": "105040"
  },
  {
    "text": "exists in terms of the power that it",
    "start": "105040",
    "end": "107439"
  },
  {
    "text": "gives the programmer I mean the entire",
    "start": "107439",
    "end": "109560"
  },
  {
    "text": "world to include every embedded device",
    "start": "109560",
    "end": "112000"
  },
  {
    "text": "that exists your router your fridge or",
    "start": "112000",
    "end": "114640"
  },
  {
    "text": "microwave is probably written in C and",
    "start": "114640",
    "end": "117039"
  },
  {
    "text": "that is because C is an incredibly",
    "start": "117039",
    "end": "119119"
  },
  {
    "text": "powerful language",
    "start": "119119",
    "end": "120560"
  },
  {
    "text": "the programmer is able to do literally",
    "start": "120560",
    "end": "121960"
  },
  {
    "text": "whatever they want as long as it's",
    "start": "121960",
    "end": "123159"
  },
  {
    "text": "within the scope of like what the OS the",
    "start": "123159",
    "end": "125079"
  },
  {
    "text": "kernel allows it's able to be done in C",
    "start": "125079",
    "end": "127880"
  },
  {
    "text": "now that is what I'm considering on like",
    "start": "127880",
    "end": "129599"
  },
  {
    "text": "the far left of the spectrum right you",
    "start": "129599",
    "end": "131440"
  },
  {
    "text": "have like powerful but do whatever you",
    "start": "131440",
    "end": "133200"
  },
  {
    "text": "want to give it like chaotic evil",
    "start": "133200",
    "end": "134760"
  },
  {
    "text": "language right on the other hand you",
    "start": "134760",
    "end": "136599"
  },
  {
    "text": "have rust now rust is designed with so",
    "start": "136599",
    "end": "138720"
  },
  {
    "text": "many of the failures of C in mind C for",
    "start": "138720",
    "end": "141319"
  },
  {
    "text": "example is not a memory safe language",
    "start": "141319",
    "end": "143519"
  },
  {
    "text": "you can exit outside of the bounds of an",
    "start": "143519",
    "end": "145519"
  },
  {
    "text": "array you can do arbitrary use after",
    "start": "145519",
    "end": "147640"
  },
  {
    "text": "freeze and it's on the developer to",
    "start": "147640",
    "end": "149920"
  },
  {
    "text": "catch them at compile time or the",
    "start": "149920",
    "end": "151920"
  },
  {
    "text": "program to enforce that you can't do",
    "start": "151920",
    "end": "153800"
  },
  {
    "text": "those things at runtime but you can very",
    "start": "153800",
    "end": "155920"
  },
  {
    "text": "easily write code that just allows you",
    "start": "155920",
    "end": "158200"
  },
  {
    "text": "to do whatever you want and have it go",
    "start": "158200",
    "end": "159840"
  },
  {
    "text": "out into the ether and become a security",
    "start": "159840",
    "end": "161440"
  },
  {
    "text": "vulnerability that eventually gets",
    "start": "161440",
    "end": "162879"
  },
  {
    "text": "hacked by hackers but if you consider",
    "start": "162879",
    "end": "165120"
  },
  {
    "text": "the new programmer who's trying to get",
    "start": "165120",
    "end": "167040"
  },
  {
    "text": "into the space who wants to learn a",
    "start": "167040",
    "end": "169360"
  },
  {
    "text": "language that is for systems programming",
    "start": "169360",
    "end": "172080"
  },
  {
    "text": "but doesn't want to do Russ cuz Russ is",
    "start": "172080",
    "end": "174360"
  },
  {
    "text": "too hard but doesn't want to do c",
    "start": "174360",
    "end": "176400"
  },
  {
    "text": "because C is unsafe where do they go",
    "start": "176400",
    "end": "178599"
  },
  {
    "text": "this is where I think Zig fits in very",
    "start": "178599",
    "end": "181159"
  },
  {
    "text": "very well now what you're looking at",
    "start": "181159",
    "end": "182879"
  },
  {
    "text": "here is a project I've been working on",
    "start": "182879",
    "end": "184640"
  },
  {
    "text": "on Twitch I've been basically trying to",
    "start": "184640",
    "end": "187040"
  },
  {
    "text": "reproduce the xxd binary if you don't",
    "start": "187040",
    "end": "189599"
  },
  {
    "text": "know what xxd is it's a basic hex dumper",
    "start": "189599",
    "end": "191560"
  },
  {
    "text": "right you can specify the size of the",
    "start": "191560",
    "end": "193400"
  },
  {
    "text": "columns and the size of the groups and",
    "start": "193400",
    "end": "195120"
  },
  {
    "text": "what you do is you pump in arbitrary",
    "start": "195120",
    "end": "196599"
  },
  {
    "text": "data into there and it hex dumps it",
    "start": "196599",
    "end": "198200"
  },
  {
    "text": "right pretty straightforward I use this",
    "start": "198200",
    "end": "199640"
  },
  {
    "text": "project as a way to learn new languages",
    "start": "199640",
    "end": "201440"
  },
  {
    "text": "cuz the project itself is very simple",
    "start": "201440",
    "end": "203239"
  },
  {
    "text": "but it forces you to learn a few things",
    "start": "203239",
    "end": "204799"
  },
  {
    "text": "about the language you have to do like",
    "start": "204799",
    "end": "206159"
  },
  {
    "text": "basic Loops memory views into binary",
    "start": "206159",
    "end": "208640"
  },
  {
    "text": "data how to open files you have to use",
    "start": "208640",
    "end": "210280"
  },
  {
    "text": "the parts of the API that may be like",
    "start": "210280",
    "end": "211879"
  },
  {
    "text": "non-standard and then also like it's",
    "start": "211879",
    "end": "213640"
  },
  {
    "text": "just a cool tool to have I think it's I",
    "start": "213640",
    "end": "215040"
  },
  {
    "text": "think it's pretty neat so anyway what",
    "start": "215040",
    "end": "216480"
  },
  {
    "text": "I'm doing in this project is reproducing",
    "start": "216480",
    "end": "218680"
  },
  {
    "text": "xxd and this is the current status of it",
    "start": "218680",
    "end": "220879"
  },
  {
    "text": "and I'm calling it zcd so pretty neat in",
    "start": "220879",
    "end": "222959"
  },
  {
    "text": "doing this project I learned a few",
    "start": "222959",
    "end": "224680"
  },
  {
    "text": "things about the language that I want to",
    "start": "224680",
    "end": "226280"
  },
  {
    "text": "talk about that I really really enjoy",
    "start": "226280",
    "end": "228560"
  },
  {
    "text": "the first is the main feature that kind",
    "start": "228560",
    "end": "230680"
  },
  {
    "text": "of separates Zig from C so if you have",
    "start": "230680",
    "end": "233760"
  },
  {
    "text": "written C recently right C Used to Be",
    "start": "233760",
    "end": "237200"
  },
  {
    "text": "basically it was literally an",
    "start": "237200",
    "end": "238799"
  },
  {
    "text": "abstraction for a assembly instead of",
    "start": "238799",
    "end": "240480"
  },
  {
    "text": "writing assembly you would write C and",
    "start": "240480",
    "end": "242680"
  },
  {
    "text": "the C would just turn into assembly",
    "start": "242680",
    "end": "244040"
  },
  {
    "text": "that' be it there' be like no extra",
    "start": "244040",
    "end": "246360"
  },
  {
    "text": "things added there was no allocators",
    "start": "246360",
    "end": "248280"
  },
  {
    "text": "that were created you had to write all",
    "start": "248280",
    "end": "249680"
  },
  {
    "text": "that stuff yourself as C got older as C",
    "start": "249680",
    "end": "252319"
  },
  {
    "text": "matured we now have like the GBC library",
    "start": "252319",
    "end": "254720"
  },
  {
    "text": "that does a lot of stuff for us use",
    "start": "254720",
    "end": "256040"
  },
  {
    "text": "print F you use scan F and all of that",
    "start": "256040",
    "end": "257959"
  },
  {
    "text": "stuff that when you use it gets buffered",
    "start": "257959",
    "end": "259959"
  },
  {
    "text": "in the Heap so zigg is trying to prevent",
    "start": "259959",
    "end": "262639"
  },
  {
    "text": "these things that they call ghost",
    "start": "262639",
    "end": "264360"
  },
  {
    "text": "allocations where when you run code in",
    "start": "264360",
    "end": "267199"
  },
  {
    "text": "Zig all the allocations will be ones",
    "start": "267199",
    "end": "270080"
  },
  {
    "text": "that you ask it to do it will not do any",
    "start": "270080",
    "end": "272960"
  },
  {
    "text": "allocations for you and because of that",
    "start": "272960",
    "end": "274919"
  },
  {
    "text": "they've given you very explicit access",
    "start": "274919",
    "end": "277039"
  },
  {
    "text": "to these things called allocators so you",
    "start": "277039",
    "end": "278960"
  },
  {
    "text": "can write your own memory allocators",
    "start": "278960",
    "end": "281120"
  },
  {
    "text": "that allocate memory in the way that you",
    "start": "281120",
    "end": "283199"
  },
  {
    "text": "would like it to be allocated you could",
    "start": "283199",
    "end": "284440"
  },
  {
    "text": "write your own kind of Heap you could",
    "start": "284440",
    "end": "285759"
  },
  {
    "text": "write a basic stack allocator you can",
    "start": "285759",
    "end": "287560"
  },
  {
    "text": "basically do whatever you want which is",
    "start": "287560",
    "end": "288960"
  },
  {
    "text": "really really cool another thing is this",
    "start": "288960",
    "end": "290759"
  },
  {
    "text": "defer macro right when you're doing",
    "start": "290759",
    "end": "292680"
  },
  {
    "text": "allocations every application when you",
    "start": "292680",
    "end": "294680"
  },
  {
    "text": "do an Alec must be met with a",
    "start": "294680",
    "end": "297199"
  },
  {
    "text": "corresponding free right if you don't do",
    "start": "297199",
    "end": "298680"
  },
  {
    "text": "that you have a memory leak and you're",
    "start": "298680",
    "end": "299759"
  },
  {
    "text": "your program is buggy uh this defer",
    "start": "299759",
    "end": "301639"
  },
  {
    "text": "keyword allows us to do the associated",
    "start": "301639",
    "end": "304240"
  },
  {
    "text": "free for that piece of memory and it",
    "start": "304240",
    "end": "306880"
  },
  {
    "text": "makes them close together in code so",
    "start": "306880",
    "end": "308840"
  },
  {
    "text": "when I'm doing a code audit I can look",
    "start": "308840",
    "end": "310560"
  },
  {
    "text": "at it and I can be like okay cool I have",
    "start": "310560",
    "end": "312440"
  },
  {
    "text": "my Alec here where do I free this",
    "start": "312440",
    "end": "314720"
  },
  {
    "text": "variable I literally like on the next",
    "start": "314720",
    "end": "316320"
  },
  {
    "text": "line I do it the defer keyword allows",
    "start": "316320",
    "end": "318479"
  },
  {
    "text": "this piece of code to be ran when the",
    "start": "318479",
    "end": "320479"
  },
  {
    "text": "function scope is about to go out so",
    "start": "320479",
    "end": "322479"
  },
  {
    "text": "when i r when I run defer this actually",
    "start": "322479",
    "end": "324880"
  },
  {
    "text": "effectively puts this line of code at",
    "start": "324880",
    "end": "326319"
  },
  {
    "text": "the bottom of the code but it puts it up",
    "start": "326319",
    "end": "328120"
  },
  {
    "text": "here so I can mentally associate",
    "start": "328120",
    "end": "330319"
  },
  {
    "text": "that this is tied to this which I like a",
    "start": "330319",
    "end": "332600"
  },
  {
    "text": "lot the next big thing that I was a",
    "start": "332600",
    "end": "334120"
  },
  {
    "text": "really big fan of is the errors as",
    "start": "334120",
    "end": "336600"
  },
  {
    "text": "values feature of Zig now if you've",
    "start": "336600",
    "end": "338280"
  },
  {
    "text": "written any rust you have the result",
    "start": "338280",
    "end": "340000"
  },
  {
    "text": "type the okay type and the error type",
    "start": "340000",
    "end": "341639"
  },
  {
    "text": "right where the result is a en that",
    "start": "341639",
    "end": "344600"
  },
  {
    "text": "allows you to basically return either an",
    "start": "344600",
    "end": "347400"
  },
  {
    "text": "okay which is good value or an error",
    "start": "347400",
    "end": "349759"
  },
  {
    "text": "which is bad value and then handle the",
    "start": "349759",
    "end": "351840"
  },
  {
    "text": "output via pattern matching Zig is a",
    "start": "351840",
    "end": "354240"
  },
  {
    "text": "very verbose language where you are",
    "start": "354240",
    "end": "357280"
  },
  {
    "text": "required to not only use all the",
    "start": "357280",
    "end": "359680"
  },
  {
    "text": "variables that you uh you you name but",
    "start": "359680",
    "end": "361919"
  },
  {
    "text": "also you're required to handle all the",
    "start": "361919",
    "end": "364080"
  },
  {
    "text": "errors that you get right so effectively",
    "start": "364080",
    "end": "366000"
  },
  {
    "text": "this open file function has this return",
    "start": "366000",
    "end": "368599"
  },
  {
    "text": "type what this return type actually",
    "start": "368599",
    "end": "369919"
  },
  {
    "text": "means is pretty interesting and I I love",
    "start": "369919",
    "end": "371960"
  },
  {
    "text": "the notation of this on the right of",
    "start": "371960",
    "end": "373639"
  },
  {
    "text": "this exclamation point you have the",
    "start": "373639",
    "end": "375479"
  },
  {
    "text": "return type when it's a good value so",
    "start": "375479",
    "end": "377759"
  },
  {
    "text": "the correct return type is this if there",
    "start": "377759",
    "end": "380160"
  },
  {
    "text": "is a return error to be returned this is",
    "start": "380160",
    "end": "383039"
  },
  {
    "text": "the error type right and so what we're",
    "start": "383039",
    "end": "384960"
  },
  {
    "text": "able to do is we're able to run the open",
    "start": "384960",
    "end": "387120"
  },
  {
    "text": "file function and effectively think of",
    "start": "387120",
    "end": "388880"
  },
  {
    "text": "it like we go left or we go right in the",
    "start": "388880",
    "end": "391199"
  },
  {
    "text": "case that we go left the open file good",
    "start": "391199",
    "end": "394599"
  },
  {
    "text": "value the standard FS file is put into F",
    "start": "394599",
    "end": "398319"
  },
  {
    "text": "easy that's awesome if you go to the",
    "start": "398319",
    "end": "399680"
  },
  {
    "text": "right we're able to check to see okay",
    "start": "399680",
    "end": "401639"
  },
  {
    "text": "we've caught that we're in a file open",
    "start": "401639",
    "end": "404080"
  },
  {
    "text": "error error and that type has different",
    "start": "404080",
    "end": "406440"
  },
  {
    "text": "subtypes and we're able to print them",
    "start": "406440",
    "end": "407960"
  },
  {
    "text": "out via basic pattern matching I think",
    "start": "407960",
    "end": "409919"
  },
  {
    "text": "it's really cool I think it's a way for",
    "start": "409919",
    "end": "411680"
  },
  {
    "text": "you to be forced to handle every error",
    "start": "411680",
    "end": "415080"
  },
  {
    "text": "case of your program which in languages",
    "start": "415080",
    "end": "416800"
  },
  {
    "text": "like C for example like a lot of the",
    "start": "416800",
    "end": "418639"
  },
  {
    "text": "times you don't even have to check the",
    "start": "418639",
    "end": "420000"
  },
  {
    "text": "return value you can just say like open",
    "start": "420000",
    "end": "421879"
  },
  {
    "text": "and then if it's good it's good but if",
    "start": "421879",
    "end": "423360"
  },
  {
    "text": "not it can crash like it doesn't like no",
    "start": "423360",
    "end": "424800"
  },
  {
    "text": "one cares uh so I like this a lot and",
    "start": "424800",
    "end": "426759"
  },
  {
    "text": "this last part I think is really",
    "start": "426759",
    "end": "427840"
  },
  {
    "text": "interesting you know zigg is not",
    "start": "427840",
    "end": "429759"
  },
  {
    "text": "explicitly a memory safe language like",
    "start": "429759",
    "end": "432000"
  },
  {
    "text": "you can do the traditional thing where",
    "start": "432000",
    "end": "434160"
  },
  {
    "text": "in one function you create an object and",
    "start": "434160",
    "end": "436479"
  },
  {
    "text": "then you return a reference to that",
    "start": "436479",
    "end": "438039"
  },
  {
    "text": "object and then when the stack goes out",
    "start": "438039",
    "end": "439400"
  },
  {
    "text": "of scope you have a reference to a",
    "start": "439400",
    "end": "441120"
  },
  {
    "text": "dangling pointer right like that that",
    "start": "441120",
    "end": "442720"
  },
  {
    "text": "kind of thing is allowed in Zig but what",
    "start": "442720",
    "end": "444800"
  },
  {
    "text": "I do like about Zig is that it gives you",
    "start": "444800",
    "end": "446879"
  },
  {
    "text": "things that smell or like taste like",
    "start": "446879",
    "end": "449240"
  },
  {
    "text": "memory safety uh that prevent a lot of",
    "start": "449240",
    "end": "451479"
  },
  {
    "text": "very simple bugs like for example I have",
    "start": "451479",
    "end": "453280"
  },
  {
    "text": "the the dump hex function which is doing",
    "start": "453280",
    "end": "454759"
  },
  {
    "text": "the basic you know print out the data as",
    "start": "454759",
    "end": "456960"
  },
  {
    "text": "as hex and what I'm doing is right now I",
    "start": "456960",
    "end": "459639"
  },
  {
    "text": "create a chunk and the chunk is always",
    "start": "459639",
    "end": "462039"
  },
  {
    "text": "the same size right right now the chunk",
    "start": "462039",
    "end": "463680"
  },
  {
    "text": "size is two and I have a little bit of",
    "start": "463680",
    "end": "465479"
  },
  {
    "text": "an edge case where basically I'm able to",
    "start": "465479",
    "end": "467319"
  },
  {
    "text": "index outside of a chunk where the value",
    "start": "467319",
    "end": "469720"
  },
  {
    "text": "is undefined if the size of the file is",
    "start": "469720",
    "end": "472599"
  },
  {
    "text": "odd right so if I have a file that is 51",
    "start": "472599",
    "end": "475319"
  },
  {
    "text": "bytes on that last iteration I've only",
    "start": "475319",
    "end": "477360"
  },
  {
    "text": "read in one bite of data and I can",
    "start": "477360",
    "end": "479840"
  },
  {
    "text": "iterate into the second bite so",
    "start": "479840",
    "end": "481360"
  },
  {
    "text": "basically I have a very basic out of",
    "start": "481360",
    "end": "482879"
  },
  {
    "text": "bounds uh array access now in a language",
    "start": "482879",
    "end": "485560"
  },
  {
    "text": "like C this would just be okay we'd just",
    "start": "485560",
    "end": "487759"
  },
  {
    "text": "be all right with this happening there'd",
    "start": "487759",
    "end": "489000"
  },
  {
    "text": "be really no I mean there's a way to",
    "start": "489000",
    "end": "490199"
  },
  {
    "text": "check it we could we can make sure that",
    "start": "490199",
    "end": "491360"
  },
  {
    "text": "we do the math and and do the",
    "start": "491360",
    "end": "492680"
  },
  {
    "text": "calculations to determine if we're",
    "start": "492680",
    "end": "494000"
  },
  {
    "text": "outside of the array bounds but in Zig",
    "start": "494000",
    "end": "495800"
  },
  {
    "text": "when I run this code there is a runtime",
    "start": "495800",
    "end": "497599"
  },
  {
    "text": "Panic it can see despite not being",
    "start": "497599",
    "end": "499919"
  },
  {
    "text": "explicitly memory safe that I am",
    "start": "499919",
    "end": "501759"
  },
  {
    "text": "indexing one the value one so I have",
    "start": "501759",
    "end": "504520"
  },
  {
    "text": "line of one into a slice that is length",
    "start": "504520",
    "end": "507599"
  },
  {
    "text": "one right and so instead of giving me",
    "start": "507599",
    "end": "509720"
  },
  {
    "text": "some weird seg faults where it's doing",
    "start": "509720",
    "end": "511479"
  },
  {
    "text": "an array access that the OS can see it's",
    "start": "511479",
    "end": "513839"
  },
  {
    "text": "going to throw an error at this level",
    "start": "513839",
    "end": "516159"
  },
  {
    "text": "and you know this is a much I think",
    "start": "516159",
    "end": "518159"
  },
  {
    "text": "safer way to crash right than you know",
    "start": "518159",
    "end": "520839"
  },
  {
    "text": "potentially going outside of the array",
    "start": "520839",
    "end": "522279"
  },
  {
    "text": "bounds like like C would let you do now",
    "start": "522279",
    "end": "524360"
  },
  {
    "text": "what I'm not saying is that you",
    "start": "524360",
    "end": "525640"
  },
  {
    "text": "shouldn't learn C what I'm not saying is",
    "start": "525640",
    "end": "527920"
  },
  {
    "text": "that you shouldn't learn rust you should",
    "start": "527920",
    "end": "529560"
  },
  {
    "text": "learn C you should learn rust and you",
    "start": "529560",
    "end": "531120"
  },
  {
    "text": "should learn Zig like I think everyone",
    "start": "531120",
    "end": "532680"
  },
  {
    "text": "should learn all the things I think",
    "start": "532680",
    "end": "534080"
  },
  {
    "text": "learning is the way that you become a",
    "start": "534080",
    "end": "536279"
  },
  {
    "text": "better not only developer but a better",
    "start": "536279",
    "end": "537760"
  },
  {
    "text": "person in general now that being said if",
    "start": "537760",
    "end": "539600"
  },
  {
    "text": "you have limited time I think obviously",
    "start": "539600",
    "end": "541160"
  },
  {
    "text": "you should be picking one and that",
    "start": "541160",
    "end": "543279"
  },
  {
    "text": "choice you make just depends on what you",
    "start": "543279",
    "end": "545040"
  },
  {
    "text": "want to do if you want to be a systems",
    "start": "545040",
    "end": "547560"
  },
  {
    "text": "level programmer You know despite the",
    "start": "547560",
    "end": "549200"
  },
  {
    "text": "movement towards rust things are still",
    "start": "549200",
    "end": "551040"
  },
  {
    "text": "written in C and if you want to get a",
    "start": "551040",
    "end": "553120"
  },
  {
    "text": "little bit of a taste of what I think",
    "start": "553120",
    "end": "554360"
  },
  {
    "text": "the future of coding looks like and what",
    "start": "554360",
    "end": "555839"
  },
  {
    "text": "safer software looks like try Zig and",
    "start": "555839",
    "end": "558040"
  },
  {
    "text": "try rust I do have courses at low lev.",
    "start": "558040",
    "end": "559920"
  },
  {
    "text": "Academy go check that out Link in the",
    "start": "559920",
    "end": "561200"
  },
  {
    "text": "description below if you want to follow",
    "start": "561200",
    "end": "562440"
  },
  {
    "text": "along with me on my journey and figuring",
    "start": "562440",
    "end": "563959"
  },
  {
    "text": "out my thoughts my additional thoughts",
    "start": "563959",
    "end": "565519"
  },
  {
    "text": "on Zig go follow me on Twitch I stream",
    "start": "565519",
    "end": "567720"
  },
  {
    "text": "there like once a week if you like this",
    "start": "567720",
    "end": "569120"
  },
  {
    "text": "video do me a favor hit like hit",
    "start": "569120",
    "end": "570399"
  },
  {
    "text": "subscribe and then go check out this",
    "start": "570399",
    "end": "571720"
  },
  {
    "text": "video we'll see you next time guys I",
    "start": "571720",
    "end": "572920"
  },
  {
    "text": "appreciate it bye-bye",
    "start": "572920",
    "end": "575720"
  }
]