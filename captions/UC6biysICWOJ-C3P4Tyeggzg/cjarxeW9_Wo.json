[
  {
    "text": "today we are doing a code review for a",
    "start": "0",
    "end": "2220"
  },
  {
    "text": "piece of code that one of my viewers",
    "start": "2220",
    "end": "3480"
  },
  {
    "text": "submitted oh God",
    "start": "3480",
    "end": "5960"
  },
  {
    "text": "why the viewer submitted a program that",
    "start": "5960",
    "end": "8639"
  },
  {
    "text": "they wrote called random character",
    "start": "8639",
    "end": "10260"
  },
  {
    "text": "generator it's basically a program that",
    "start": "10260",
    "end": "12059"
  },
  {
    "text": "you give it a number and a character set",
    "start": "12059",
    "end": "14040"
  },
  {
    "text": "and it'll generate a random string for",
    "start": "14040",
    "end": "16020"
  },
  {
    "text": "you you can think kind of like a",
    "start": "16020",
    "end": "17699"
  },
  {
    "text": "password generator today we're going to",
    "start": "17699",
    "end": "18960"
  },
  {
    "text": "be grading this code on four primary",
    "start": "18960",
    "end": "21300"
  },
  {
    "text": "categories so functional meaning does",
    "start": "21300",
    "end": "23160"
  },
  {
    "text": "the code actually function is the code",
    "start": "23160",
    "end": "25199"
  },
  {
    "text": "understandable meaning when I read the",
    "start": "25199",
    "end": "26939"
  },
  {
    "text": "code can I easily interpret what the",
    "start": "26939",
    "end": "28920"
  },
  {
    "text": "code does does it have good comments",
    "start": "28920",
    "end": "30420"
  },
  {
    "text": "does it have good function names and",
    "start": "30420",
    "end": "31800"
  },
  {
    "text": "variable names is the code maintainable",
    "start": "31800",
    "end": "33360"
  },
  {
    "text": "meaning that if this code were given to",
    "start": "33360",
    "end": "35040"
  },
  {
    "text": "somebody else could they keep it alive",
    "start": "35040",
    "end": "36719"
  },
  {
    "text": "is there a lot of technical debt in the",
    "start": "36719",
    "end": "38399"
  },
  {
    "text": "code and then finally is the code",
    "start": "38399",
    "end": "40200"
  },
  {
    "text": "expandable is there an obvious API via a",
    "start": "40200",
    "end": "43200"
  },
  {
    "text": "header file or something else that",
    "start": "43200",
    "end": "44820"
  },
  {
    "text": "allows me to add features to this code",
    "start": "44820",
    "end": "46739"
  },
  {
    "text": "or is it just messy spaghetti code so",
    "start": "46739",
    "end": "48600"
  },
  {
    "text": "let's get into the first part and see is",
    "start": "48600",
    "end": "50760"
  },
  {
    "text": "the code function now when I get a piece",
    "start": "50760",
    "end": "52559"
  },
  {
    "text": "of code I'm looking at basic things like",
    "start": "52559",
    "end": "55020"
  },
  {
    "text": "the structure of the repo to give me an",
    "start": "55020",
    "end": "57239"
  },
  {
    "text": "idea of code smell if they actually",
    "start": "57239",
    "end": "59100"
  },
  {
    "text": "organize their code into multiple files",
    "start": "59100",
    "end": "61860"
  },
  {
    "text": "and they put that inside of a directory",
    "start": "61860",
    "end": "63539"
  },
  {
    "text": "and it has a make file I'm already",
    "start": "63539",
    "end": "65400"
  },
  {
    "text": "getting a good good feeling that this",
    "start": "65400",
    "end": "66840"
  },
  {
    "text": "may be a well-structured project when",
    "start": "66840",
    "end": "68640"
  },
  {
    "text": "you're writing code in C you want all of",
    "start": "68640",
    "end": "70860"
  },
  {
    "text": "your different items that have a purpose",
    "start": "70860",
    "end": "72659"
  },
  {
    "text": "to have their own C file so the",
    "start": "72659",
    "end": "74580"
  },
  {
    "text": "functionality is obviously separated so",
    "start": "74580",
    "end": "76740"
  },
  {
    "text": "someone else reading the code can",
    "start": "76740",
    "end": "78360"
  },
  {
    "text": "generally guess what's going to happen",
    "start": "78360",
    "end": "79740"
  },
  {
    "text": "in these files but before we actually",
    "start": "79740",
    "end": "81299"
  },
  {
    "text": "look at those files I want to see will",
    "start": "81299",
    "end": "83040"
  },
  {
    "text": "this code compile the viewer did a",
    "start": "83040",
    "end": "84780"
  },
  {
    "text": "really good job of specifying in the",
    "start": "84780",
    "end": "86460"
  },
  {
    "text": "readme how to actually go about",
    "start": "86460",
    "end": "88080"
  },
  {
    "text": "compiling this so you have the pseudo",
    "start": "88080",
    "end": "89939"
  },
  {
    "text": "apt install lib n curses Dev and then",
    "start": "89939",
    "end": "92939"
  },
  {
    "text": "you get to just go ahead and make the",
    "start": "92939",
    "end": "94680"
  },
  {
    "text": "program via make install project is good",
    "start": "94680",
    "end": "97920"
  },
  {
    "text": "so far and again we get no errors we get",
    "start": "97920",
    "end": "99840"
  },
  {
    "text": "no warnings I put W all which is another",
    "start": "99840",
    "end": "102000"
  },
  {
    "text": "good indicator that they maybe tested",
    "start": "102000",
    "end": "103560"
  },
  {
    "text": "their code as well so they create all of",
    "start": "103560",
    "end": "105479"
  },
  {
    "text": "the output files by either C files and",
    "start": "105479",
    "end": "107820"
  },
  {
    "text": "then they compile that together to",
    "start": "107820",
    "end": "109259"
  },
  {
    "text": "create rcg so from a building standpoint",
    "start": "109259",
    "end": "111840"
  },
  {
    "text": "I didn't have to do anything special to",
    "start": "111840",
    "end": "113520"
  },
  {
    "text": "build it it just built on its own",
    "start": "113520",
    "end": "114899"
  },
  {
    "text": "awesome let's go ahead and run it and",
    "start": "114899",
    "end": "116759"
  },
  {
    "text": "see if it actually behaves as intended",
    "start": "116759",
    "end": "118740"
  },
  {
    "text": "so enter the length desired let's",
    "start": "118740",
    "end": "121079"
  },
  {
    "text": "generate an eight character string uh",
    "start": "121079",
    "end": "123540"
  },
  {
    "text": "let's see select the option specified",
    "start": "123540",
    "end": "125399"
  },
  {
    "text": "below generate lower upper and numbers",
    "start": "125399",
    "end": "129420"
  },
  {
    "text": "Okay cool so I got lower and upper do I",
    "start": "129420",
    "end": "132420"
  },
  {
    "text": "get a number okay cool I got lower upper",
    "start": "132420",
    "end": "134459"
  },
  {
    "text": "and numbers so I can recreate it again",
    "start": "134459",
    "end": "138860"
  },
  {
    "text": "interesting so I don't think the r",
    "start": "138959",
    "end": "142099"
  },
  {
    "text": "functionality is working in this",
    "start": "142099",
    "end": "143879"
  },
  {
    "text": "programs I'll take that as a note repeat",
    "start": "143879",
    "end": "146220"
  },
  {
    "text": "only works once question mark and we'll",
    "start": "146220",
    "end": "149819"
  },
  {
    "text": "ask them about that later other than",
    "start": "149819",
    "end": "151680"
  },
  {
    "text": "that it seems pretty good so if I do I",
    "start": "151680",
    "end": "153239"
  },
  {
    "text": "want to do 10 characters that are only",
    "start": "153239",
    "end": "155520"
  },
  {
    "text": "symbols and I'm getting only symbols",
    "start": "155520",
    "end": "158340"
  },
  {
    "text": "here so okay from a functionality",
    "start": "158340",
    "end": "159900"
  },
  {
    "text": "standpoint minus the the multiple",
    "start": "159900",
    "end": "161819"
  },
  {
    "text": "repeats so the multiple recreates it",
    "start": "161819",
    "end": "164220"
  },
  {
    "text": "seems like it's pretty functional so I'm",
    "start": "164220",
    "end": "166080"
  },
  {
    "text": "going to grade this 8 out of 10.",
    "start": "166080",
    "end": "168780"
  },
  {
    "text": "seems good to me it does function so",
    "start": "168780",
    "end": "171900"
  },
  {
    "text": "let's actually get into the code review",
    "start": "171900",
    "end": "173340"
  },
  {
    "text": "now and figure out is this code",
    "start": "173340",
    "end": "175319"
  },
  {
    "text": "understandable because someone else who",
    "start": "175319",
    "end": "176879"
  },
  {
    "text": "has to look at this code know what it",
    "start": "176879",
    "end": "178980"
  },
  {
    "text": "does I didn't get a huge sense of",
    "start": "178980",
    "end": "181140"
  },
  {
    "text": "Confidence from the code",
    "start": "181140",
    "end": "182360"
  },
  {
    "text": "understandability if it's understandable",
    "start": "182360",
    "end": "184500"
  },
  {
    "text": "based off of this the the the the naming",
    "start": "184500",
    "end": "187620"
  },
  {
    "text": "of the functions array size array type",
    "start": "187620",
    "end": "190319"
  },
  {
    "text": "array cases array output it kind of",
    "start": "190319",
    "end": "193560"
  },
  {
    "text": "tells me what's going to happen based",
    "start": "193560",
    "end": "195599"
  },
  {
    "text": "off of me running the program but if I",
    "start": "195599",
    "end": "197819"
  },
  {
    "text": "hadn't ran the program and I had to read",
    "start": "197819",
    "end": "199920"
  },
  {
    "text": "this I wouldn't really know what's going",
    "start": "199920",
    "end": "201900"
  },
  {
    "text": "on also there's not a lot of comments",
    "start": "201900",
    "end": "203819"
  },
  {
    "text": "here so I'm losing Hope on the the",
    "start": "203819",
    "end": "205860"
  },
  {
    "text": "understandability piece let's check this",
    "start": "205860",
    "end": "208140"
  },
  {
    "text": "out so let's figure out where array size",
    "start": "208140",
    "end": "210659"
  },
  {
    "text": "is uh declared probably in Array array",
    "start": "210659",
    "end": "214200"
  },
  {
    "text": "size here we go take a look at this code",
    "start": "214200",
    "end": "215640"
  },
  {
    "text": "here",
    "start": "215640",
    "end": "216599"
  },
  {
    "text": "um I'm not seeing a ton of comments",
    "start": "216599",
    "end": "218400"
  },
  {
    "text": "that's my only complaint so far other",
    "start": "218400",
    "end": "220620"
  },
  {
    "text": "than the naming so what you want to do",
    "start": "220620",
    "end": "221879"
  },
  {
    "text": "here is typically like function array",
    "start": "221879",
    "end": "225239"
  },
  {
    "text": "size",
    "start": "225239",
    "end": "226400"
  },
  {
    "text": "pointer which is a you know a pointer to",
    "start": "226400",
    "end": "230580"
  },
  {
    "text": "the array object the reason I want to do",
    "start": "230580",
    "end": "233040"
  },
  {
    "text": "these formats is it gives the reader a",
    "start": "233040",
    "end": "235379"
  },
  {
    "text": "very obvious indication of what they can",
    "start": "235379",
    "end": "237120"
  },
  {
    "text": "expect from the code they wouldn't have",
    "start": "237120",
    "end": "238560"
  },
  {
    "text": "to go line by line and figure out what",
    "start": "238560",
    "end": "240120"
  },
  {
    "text": "the function does they can just read",
    "start": "240120",
    "end": "241799"
  },
  {
    "text": "this here and get an idea of what this",
    "start": "241799",
    "end": "243840"
  },
  {
    "text": "function's API is right what the input",
    "start": "243840",
    "end": "245879"
  },
  {
    "text": "is supposed to be what the output is",
    "start": "245879",
    "end": "247560"
  },
  {
    "text": "supposed to be if you don't have this",
    "start": "247560",
    "end": "249540"
  },
  {
    "text": "there are two problems one I now have to",
    "start": "249540",
    "end": "251159"
  },
  {
    "text": "go through every single line and figure",
    "start": "251159",
    "end": "253200"
  },
  {
    "text": "out what's going on here and also",
    "start": "253200",
    "end": "255420"
  },
  {
    "text": "without these headers like this writing",
    "start": "255420",
    "end": "257459"
  },
  {
    "text": "documentation for this code is pretty",
    "start": "257459",
    "end": "259199"
  },
  {
    "text": "hard right if you format your comments",
    "start": "259199",
    "end": "261479"
  },
  {
    "text": "in the right format there are programs",
    "start": "261479",
    "end": "263580"
  },
  {
    "text": "like the oxygen for example that will",
    "start": "263580",
    "end": "265199"
  },
  {
    "text": "automatically create docs for you just",
    "start": "265199",
    "end": "267120"
  },
  {
    "text": "based off of comments now a lot of",
    "start": "267120",
    "end": "268800"
  },
  {
    "text": "comments are happening inside the code",
    "start": "268800",
    "end": "270240"
  },
  {
    "text": "either like I want to have a comment",
    "start": "270240",
    "end": "271979"
  },
  {
    "text": "here that says you know what is the case",
    "start": "271979",
    "end": "273900"
  },
  {
    "text": "I'm handling for here if the user",
    "start": "273900",
    "end": "276300"
  },
  {
    "text": "supplies zero or something like that and",
    "start": "276300",
    "end": "279540"
  },
  {
    "text": "again you may be able to infer this",
    "start": "279540",
    "end": "280919"
  },
  {
    "text": "comment from the code itself but just",
    "start": "280919",
    "end": "282960"
  },
  {
    "text": "something to think about we print W",
    "start": "282960",
    "end": "285060"
  },
  {
    "text": "value unknown and we do this while",
    "start": "285060",
    "end": "287639"
  },
  {
    "text": "pointer length is less than one okay so",
    "start": "287639",
    "end": "289680"
  },
  {
    "text": "they're making sure that we get out of",
    "start": "289680",
    "end": "290880"
  },
  {
    "text": "this function with the array pointer set",
    "start": "290880",
    "end": "293040"
  },
  {
    "text": "to greater than one which is a decent",
    "start": "293040",
    "end": "295259"
  },
  {
    "text": "way to do it so we go what we do array",
    "start": "295259",
    "end": "297600"
  },
  {
    "text": "size and then array type array type so",
    "start": "297600",
    "end": "300840"
  },
  {
    "text": "This Is Us querying the input from the",
    "start": "300840",
    "end": "303840"
  },
  {
    "text": "user for the size and then we did the",
    "start": "303840",
    "end": "305400"
  },
  {
    "text": "same thing for the type right so we read",
    "start": "305400",
    "end": "307680"
  },
  {
    "text": "in a half word pointer type and I know",
    "start": "307680",
    "end": "310199"
  },
  {
    "text": "I'm clicking with Vim just don't uh just",
    "start": "310199",
    "end": "312479"
  },
  {
    "text": "just ignore me I'm trying to get this",
    "start": "312479",
    "end": "313860"
  },
  {
    "text": "code review done uh array type select",
    "start": "313860",
    "end": "316860"
  },
  {
    "text": "the option specified below to generate",
    "start": "316860",
    "end": "318180"
  },
  {
    "text": "an ascending order yeah okay so it just",
    "start": "318180",
    "end": "320280"
  },
  {
    "text": "takes the type from the user as a number",
    "start": "320280",
    "end": "323460"
  },
  {
    "text": "so",
    "start": "323460",
    "end": "325080"
  },
  {
    "text": "um",
    "start": "325080",
    "end": "325620"
  },
  {
    "text": "this depends very heavily on the user",
    "start": "325620",
    "end": "328440"
  },
  {
    "text": "putting the number in the right order",
    "start": "328440",
    "end": "330240"
  },
  {
    "text": "right so it says specify it in ascending",
    "start": "330240",
    "end": "333180"
  },
  {
    "text": "order and then if I put for example if I",
    "start": "333180",
    "end": "335400"
  },
  {
    "text": "wanted to have a lower and a numbers but",
    "start": "335400",
    "end": "337860"
  },
  {
    "text": "I put 3 1 it likely wouldn't work and",
    "start": "337860",
    "end": "340080"
  },
  {
    "text": "we're going to figure out how that works",
    "start": "340080",
    "end": "341220"
  },
  {
    "text": "here in a second okay so we go through",
    "start": "341220",
    "end": "343380"
  },
  {
    "text": "that we do type and in cases",
    "start": "343380",
    "end": "346680"
  },
  {
    "text": "yeah oh God",
    "start": "346680",
    "end": "349320"
  },
  {
    "text": "okay so this piece of code is where I",
    "start": "349320",
    "end": "352259"
  },
  {
    "text": "start to have",
    "start": "352259",
    "end": "353520"
  },
  {
    "text": "a little bit of issues right so the",
    "start": "353520",
    "end": "355680"
  },
  {
    "text": "problem here is that there are a lot of",
    "start": "355680",
    "end": "359820"
  },
  {
    "text": "magic numbers so for for a couple a",
    "start": "359820",
    "end": "363600"
  },
  {
    "text": "couple of reasons I don't like this and",
    "start": "363600",
    "end": "365699"
  },
  {
    "text": "I'll explain why",
    "start": "365699",
    "end": "367259"
  },
  {
    "text": "the first reason is as a reader of this",
    "start": "367259",
    "end": "370500"
  },
  {
    "text": "code I don't really know what any of",
    "start": "370500",
    "end": "373979"
  },
  {
    "text": "these cases are for and I'm aware that",
    "start": "373979",
    "end": "376259"
  },
  {
    "text": "they come from array.c I'm aware now",
    "start": "376259",
    "end": "378360"
  },
  {
    "text": "after reading the code and using it a",
    "start": "378360",
    "end": "380340"
  },
  {
    "text": "lot that it has to do with the one two",
    "start": "380340",
    "end": "383340"
  },
  {
    "text": "three or maybe one and three and they",
    "start": "383340",
    "end": "385500"
  },
  {
    "text": "use that to switch what type of pointer",
    "start": "385500",
    "end": "387600"
  },
  {
    "text": "we have and then use that to create our",
    "start": "387600",
    "end": "390120"
  },
  {
    "text": "array the problem with this is that if I",
    "start": "390120",
    "end": "392759"
  },
  {
    "text": "were to change the specification or the",
    "start": "392759",
    "end": "395100"
  },
  {
    "text": "API where I want to change how the type",
    "start": "395100",
    "end": "398460"
  },
  {
    "text": "variable is handled if I want to change",
    "start": "398460",
    "end": "400979"
  },
  {
    "text": "what type number the array needs to",
    "start": "400979",
    "end": "404400"
  },
  {
    "text": "function doing it like this with these",
    "start": "404400",
    "end": "406139"
  },
  {
    "text": "magic numbers makes it very hard to",
    "start": "406139",
    "end": "407940"
  },
  {
    "text": "update this code and then also too more",
    "start": "407940",
    "end": "409979"
  },
  {
    "text": "magic numbers right so this 26 is 52 I",
    "start": "409979",
    "end": "413759"
  },
  {
    "text": "don't know what they're doing here I",
    "start": "413759",
    "end": "416340"
  },
  {
    "text": "think I know from some backhand",
    "start": "416340",
    "end": "418500"
  },
  {
    "text": "knowledge like about what this program",
    "start": "418500",
    "end": "420360"
  },
  {
    "text": "does this is probably the lower and",
    "start": "420360",
    "end": "423419"
  },
  {
    "text": "upper range of like some ASCII",
    "start": "423419",
    "end": "425520"
  },
  {
    "text": "characters right but again this makes it",
    "start": "425520",
    "end": "427620"
  },
  {
    "text": "very difficult to add functionality",
    "start": "427620",
    "end": "429300"
  },
  {
    "text": "because if for whatever reason we had to",
    "start": "429300",
    "end": "431160"
  },
  {
    "text": "change these numbers the rest of the",
    "start": "431160",
    "end": "432780"
  },
  {
    "text": "code would not be correct yeah so",
    "start": "432780",
    "end": "435180"
  },
  {
    "text": "another issue with the understandability",
    "start": "435180",
    "end": "436440"
  },
  {
    "text": "piece too is I wouldn't be so glued to",
    "start": "436440",
    "end": "438300"
  },
  {
    "text": "this array uppercase notation like in",
    "start": "438300",
    "end": "440460"
  },
  {
    "text": "your naming I would do like a rage and",
    "start": "440460",
    "end": "443220"
  },
  {
    "text": "random character pointer this whole um",
    "start": "443220",
    "end": "447960"
  },
  {
    "text": "this whole array uppercase word thing it",
    "start": "447960",
    "end": "450720"
  },
  {
    "text": "doesn't do a lot for me in describing",
    "start": "450720",
    "end": "452340"
  },
  {
    "text": "like what actually is going on with the",
    "start": "452340",
    "end": "454319"
  },
  {
    "text": "code let's keep going so we call array",
    "start": "454319",
    "end": "456240"
  },
  {
    "text": "creation which I'm assuming is in",
    "start": "456240",
    "end": "457740"
  },
  {
    "text": "creation.c and then array creation has",
    "start": "457740",
    "end": "460860"
  },
  {
    "text": "right exactly it's you have your range",
    "start": "460860",
    "end": "463319"
  },
  {
    "text": "which is the inputs subtracted from each",
    "start": "463319",
    "end": "465660"
  },
  {
    "text": "other and that's probably selecting the",
    "start": "465660",
    "end": "467580"
  },
  {
    "text": "ASCII range of the values you're allowed",
    "start": "467580",
    "end": "470099"
  },
  {
    "text": "to select from",
    "start": "470099",
    "end": "471539"
  },
  {
    "text": "so we generate an array that is equal to",
    "start": "471539",
    "end": "474000"
  },
  {
    "text": "the range minus plus one yeah okay so",
    "start": "474000",
    "end": "476400"
  },
  {
    "text": "they're generating a range of characters",
    "start": "476400",
    "end": "478319"
  },
  {
    "text": "that you can choose from",
    "start": "478319",
    "end": "480780"
  },
  {
    "text": "and then putting that into a array that",
    "start": "480780",
    "end": "484139"
  },
  {
    "text": "we can select from and then we use that",
    "start": "484139",
    "end": "486660"
  },
  {
    "text": "to actually randomly get a character",
    "start": "486660",
    "end": "489060"
  },
  {
    "text": "yeah okay this makes sense",
    "start": "489060",
    "end": "491639"
  },
  {
    "text": "so we use array creation to create our",
    "start": "491639",
    "end": "493800"
  },
  {
    "text": "selectable array and then from there we",
    "start": "493800",
    "end": "495960"
  },
  {
    "text": "do erase size and the right output so",
    "start": "495960",
    "end": "498120"
  },
  {
    "text": "that's probably the final function in",
    "start": "498120",
    "end": "499620"
  },
  {
    "text": "here all right output yeah so we do",
    "start": "499620",
    "end": "503639"
  },
  {
    "text": "oh wait no array output is last array",
    "start": "503639",
    "end": "505919"
  },
  {
    "text": "cases",
    "start": "505919",
    "end": "508080"
  },
  {
    "text": "all right creation",
    "start": "508080",
    "end": "511159"
  },
  {
    "text": "um interesting",
    "start": "511680",
    "end": "514279"
  },
  {
    "text": "all right random array sort",
    "start": "516240",
    "end": "519740"
  },
  {
    "text": "from an understandable perspective",
    "start": "521399",
    "end": "524459"
  },
  {
    "text": "you need to use more comments just",
    "start": "524459",
    "end": "526740"
  },
  {
    "text": "comment your code please uh comments and",
    "start": "526740",
    "end": "529620"
  },
  {
    "text": "then also stop using magic numbers I'll",
    "start": "529620",
    "end": "533279"
  },
  {
    "text": "give this a 6 out of ten you do a decent",
    "start": "533279",
    "end": "535440"
  },
  {
    "text": "job of naming your functions and your",
    "start": "535440",
    "end": "538380"
  },
  {
    "text": "types but there's just no comments in",
    "start": "538380",
    "end": "541800"
  },
  {
    "text": "this code and there's no documentation",
    "start": "541800",
    "end": "543480"
  },
  {
    "text": "on the functions and then also the the",
    "start": "543480",
    "end": "546540"
  },
  {
    "text": "use of magic numbers is pretty bad so",
    "start": "546540",
    "end": "548279"
  },
  {
    "text": "that's just that's the major issue I",
    "start": "548279",
    "end": "549660"
  },
  {
    "text": "have with the understandable I know",
    "start": "549660",
    "end": "551220"
  },
  {
    "text": "there's one piece they wanted me to",
    "start": "551220",
    "end": "553200"
  },
  {
    "text": "comment on uh they wanted me to see if",
    "start": "553200",
    "end": "555540"
  },
  {
    "text": "their source of Randomness their s Rand",
    "start": "555540",
    "end": "557580"
  },
  {
    "text": "was Secure so the srand pointer size",
    "start": "557580",
    "end": "562440"
  },
  {
    "text": "and they say that pointer size equals TS",
    "start": "562440",
    "end": "566160"
  },
  {
    "text": "TV insect times pulling your count minus",
    "start": "566160",
    "end": "569040"
  },
  {
    "text": "pointer count",
    "start": "569040",
    "end": "571639"
  },
  {
    "text": "why yeah man I think you were better off",
    "start": "572480",
    "end": "575459"
  },
  {
    "text": "as doing this if you want to make your",
    "start": "575459",
    "end": "576720"
  },
  {
    "text": "your thing random",
    "start": "576720",
    "end": "578640"
  },
  {
    "text": "just do",
    "start": "578640",
    "end": "580339"
  },
  {
    "text": "ts.tv and SEC right because now what's",
    "start": "580339",
    "end": "582839"
  },
  {
    "text": "happening is regardless of whatever this",
    "start": "582839",
    "end": "584220"
  },
  {
    "text": "math turns into you're seeding your",
    "start": "584220",
    "end": "586200"
  },
  {
    "text": "Randomness off of the nanosecond time",
    "start": "586200",
    "end": "588300"
  },
  {
    "text": "which I think is the right answer",
    "start": "588300",
    "end": "589680"
  },
  {
    "text": "because you can't predict the nanosecond",
    "start": "589680",
    "end": "592320"
  },
  {
    "text": "time of the processor right whereas if",
    "start": "592320",
    "end": "594180"
  },
  {
    "text": "you like for example s Rand time right",
    "start": "594180",
    "end": "597839"
  },
  {
    "text": "like this is I know if I could figure",
    "start": "597839",
    "end": "599940"
  },
  {
    "text": "out what time you made the string I know",
    "start": "599940",
    "end": "601920"
  },
  {
    "text": "what the string is but then also there's",
    "start": "601920",
    "end": "603839"
  },
  {
    "text": "an issue where like if you're doing any",
    "start": "603839",
    "end": "605279"
  },
  {
    "text": "math on the nanosecond time",
    "start": "605279",
    "end": "608060"
  },
  {
    "text": "you're adding additional information to",
    "start": "608060",
    "end": "611279"
  },
  {
    "text": "that number that is predictable by the",
    "start": "611279",
    "end": "613260"
  },
  {
    "text": "user right like if I know how long your",
    "start": "613260",
    "end": "614760"
  },
  {
    "text": "string is I can predict a like I could I",
    "start": "614760",
    "end": "618120"
  },
  {
    "text": "know information about your seed and can",
    "start": "618120",
    "end": "620040"
  },
  {
    "text": "possibly reverse the the randomness so",
    "start": "620040",
    "end": "621779"
  },
  {
    "text": "you want to always keep this s Rand to a",
    "start": "621779",
    "end": "624360"
  },
  {
    "text": "number that's as random as possible so",
    "start": "624360",
    "end": "626519"
  },
  {
    "text": "if you can get entropy off of the CPU",
    "start": "626519",
    "end": "628500"
  },
  {
    "text": "via W random",
    "start": "628500",
    "end": "630240"
  },
  {
    "text": "if you can read the nanosecond time of",
    "start": "630240",
    "end": "631800"
  },
  {
    "text": "the processor if you can create the",
    "start": "631800",
    "end": "632760"
  },
  {
    "text": "Jiffy to the kernel all that good stuff",
    "start": "632760",
    "end": "634560"
  },
  {
    "text": "I would say use that so you were almost",
    "start": "634560",
    "end": "636360"
  },
  {
    "text": "on the money there I would just say keep",
    "start": "636360",
    "end": "637800"
  },
  {
    "text": "it simple and use the nsac time",
    "start": "637800",
    "end": "640160"
  },
  {
    "text": "maintainable yeah I mean so I think",
    "start": "640160",
    "end": "642899"
  },
  {
    "text": "based off of the number of magic numbers",
    "start": "642899",
    "end": "645720"
  },
  {
    "text": "that I saw me adding additional features",
    "start": "645720",
    "end": "648240"
  },
  {
    "text": "to this I would know how to do it like I",
    "start": "648240",
    "end": "650339"
  },
  {
    "text": "could do it in this function I could add",
    "start": "650339",
    "end": "651839"
  },
  {
    "text": "maybe a case you know where I say case",
    "start": "651839",
    "end": "654360"
  },
  {
    "text": "two or you know one two three five or",
    "start": "654360",
    "end": "656700"
  },
  {
    "text": "maybe five is an additional feature that",
    "start": "656700",
    "end": "658380"
  },
  {
    "text": "I added but the magic numbers make it",
    "start": "658380",
    "end": "660480"
  },
  {
    "text": "very hard to keep this like a smooth",
    "start": "660480",
    "end": "662279"
  },
  {
    "text": "code base what I would want to do",
    "start": "662279",
    "end": "664260"
  },
  {
    "text": "instead of this is instead of treating",
    "start": "664260",
    "end": "666660"
  },
  {
    "text": "each input as a character and then using",
    "start": "666660",
    "end": "670560"
  },
  {
    "text": "that as like an integer you could do",
    "start": "670560",
    "end": "672000"
  },
  {
    "text": "create an enum type def",
    "start": "672000",
    "end": "674940"
  },
  {
    "text": "enum type T and we'll do lower is one",
    "start": "674940",
    "end": "681000"
  },
  {
    "text": "and we'll say type upper",
    "start": "681000",
    "end": "683880"
  },
  {
    "text": "is lifted by two right and then so you",
    "start": "683880",
    "end": "686040"
  },
  {
    "text": "take this put in your header file and",
    "start": "686040",
    "end": "688019"
  },
  {
    "text": "then in the array.c you convert this",
    "start": "688019",
    "end": "691740"
  },
  {
    "text": "number here the number that they give",
    "start": "691740",
    "end": "693360"
  },
  {
    "text": "you",
    "start": "693360",
    "end": "694920"
  },
  {
    "text": "to your type T right so let's say like",
    "start": "694920",
    "end": "697500"
  },
  {
    "text": "type t",
    "start": "697500",
    "end": "699899"
  },
  {
    "text": "user input and then you you figure you",
    "start": "699899",
    "end": "702120"
  },
  {
    "text": "write a function that parses this input",
    "start": "702120",
    "end": "703800"
  },
  {
    "text": "into this and then from there all you",
    "start": "703800",
    "end": "705899"
  },
  {
    "text": "have to do is check all of the flags in",
    "start": "705899",
    "end": "708959"
  },
  {
    "text": "this thing and then add it to your your",
    "start": "708959",
    "end": "710519"
  },
  {
    "text": "range right so just a way of making it",
    "start": "710519",
    "end": "712200"
  },
  {
    "text": "so that instead of having like case one",
    "start": "712200",
    "end": "713940"
  },
  {
    "text": "you would say pointer type",
    "start": "713940",
    "end": "718100"
  },
  {
    "text": "and type lower",
    "start": "718100",
    "end": "720779"
  },
  {
    "text": "right and then so now what's happening",
    "start": "720779",
    "end": "722940"
  },
  {
    "text": "is I'm writing code that isn't using",
    "start": "722940",
    "end": "725459"
  },
  {
    "text": "magic numbers if I want to change the",
    "start": "725459",
    "end": "727620"
  },
  {
    "text": "type lower to do something else I could",
    "start": "727620",
    "end": "729360"
  },
  {
    "text": "just change the number here I create one",
    "start": "729360",
    "end": "731940"
  },
  {
    "text": "single location for the type to be",
    "start": "731940",
    "end": "734820"
  },
  {
    "text": "defined as opposed to here where if for",
    "start": "734820",
    "end": "737100"
  },
  {
    "text": "some reason the number 26 in your code",
    "start": "737100",
    "end": "739140"
  },
  {
    "text": "changes it Cascades down to the rest of",
    "start": "739140",
    "end": "741779"
  },
  {
    "text": "your code it makes this very hard and",
    "start": "741779",
    "end": "743220"
  },
  {
    "text": "again if and if there were multiple",
    "start": "743220",
    "end": "745079"
  },
  {
    "text": "source files that depend on this code",
    "start": "745079",
    "end": "747180"
  },
  {
    "text": "like you are just up a creek because you",
    "start": "747180",
    "end": "749339"
  },
  {
    "text": "have to go through and find all of them",
    "start": "749339",
    "end": "750839"
  },
  {
    "text": "and change them and figure out which",
    "start": "750839",
    "end": "752279"
  },
  {
    "text": "ones depend on each other it's just a",
    "start": "752279",
    "end": "753839"
  },
  {
    "text": "huge pain in the ass I would go to a",
    "start": "753839",
    "end": "755399"
  },
  {
    "text": "place where you're either converting",
    "start": "755399",
    "end": "757200"
  },
  {
    "text": "your numbers into an enum or you're",
    "start": "757200",
    "end": "759360"
  },
  {
    "text": "converting your numbers into a Define",
    "start": "759360",
    "end": "760980"
  },
  {
    "text": "right so Define type lower five so",
    "start": "760980",
    "end": "764399"
  },
  {
    "text": "maintainable same thing six out of ten",
    "start": "764399",
    "end": "767519"
  },
  {
    "text": "um use less magic numbers",
    "start": "767519",
    "end": "770720"
  },
  {
    "text": "create enums to represent values",
    "start": "770720",
    "end": "777000"
  },
  {
    "text": "and then expandable right so this is",
    "start": "777000",
    "end": "779639"
  },
  {
    "text": "again is the code in a place where I can",
    "start": "779639",
    "end": "782040"
  },
  {
    "text": "take the API that it exposes and add",
    "start": "782040",
    "end": "784920"
  },
  {
    "text": "something to it so let's go look at the",
    "start": "784920",
    "end": "786480"
  },
  {
    "text": "the array C or the array.h",
    "start": "786480",
    "end": "789139"
  },
  {
    "text": "include or H and figure out is there a",
    "start": "789139",
    "end": "792899"
  },
  {
    "text": "way that I can add something to this",
    "start": "792899",
    "end": "794220"
  },
  {
    "text": "right so again they use comments here",
    "start": "794220",
    "end": "796079"
  },
  {
    "text": "which is really really cool maybe I",
    "start": "796079",
    "end": "797700"
  },
  {
    "text": "should have read this before",
    "start": "797700",
    "end": "799139"
  },
  {
    "text": "reading the rest of the code I would",
    "start": "799139",
    "end": "800940"
  },
  {
    "text": "prefer though that the documentation for",
    "start": "800940",
    "end": "802680"
  },
  {
    "text": "the functions was done in the actual",
    "start": "802680",
    "end": "804180"
  },
  {
    "text": "declaration though this is more that's",
    "start": "804180",
    "end": "805860"
  },
  {
    "text": "more likely to be a place where",
    "start": "805860",
    "end": "807120"
  },
  {
    "text": "someone's going to audit as opposed to",
    "start": "807120",
    "end": "808740"
  },
  {
    "text": "the the dot h file but this is a pretty",
    "start": "808740",
    "end": "811019"
  },
  {
    "text": "good job so I'll actually add one point",
    "start": "811019",
    "end": "812700"
  },
  {
    "text": "to the understandable there are comments",
    "start": "812700",
    "end": "814260"
  },
  {
    "text": "just not where I expected them",
    "start": "814260",
    "end": "817399"
  },
  {
    "text": "um yeah awesome okay so based on this I",
    "start": "817920",
    "end": "821100"
  },
  {
    "text": "would find I could probably add",
    "start": "821100",
    "end": "822600"
  },
  {
    "text": "functionality to this pretty clearly",
    "start": "822600",
    "end": "823920"
  },
  {
    "text": "they'd have a pretty robust structure",
    "start": "823920",
    "end": "825839"
  },
  {
    "text": "and the functionality that tells me what",
    "start": "825839",
    "end": "827940"
  },
  {
    "text": "you know each function does so I can go",
    "start": "827940",
    "end": "829680"
  },
  {
    "text": "back through and figure out how to add",
    "start": "829680",
    "end": "831180"
  },
  {
    "text": "my own function to this I would say this",
    "start": "831180",
    "end": "832560"
  },
  {
    "text": "code is expandable",
    "start": "832560",
    "end": "835160"
  },
  {
    "text": "so what do we got we got eight six seven",
    "start": "835440",
    "end": "837899"
  },
  {
    "text": "eight so it's 27 27 and 40 not bad",
    "start": "837899",
    "end": "841320"
  },
  {
    "text": "that's not bad at all 40 out of 40 is",
    "start": "841320",
    "end": "842880"
  },
  {
    "text": "perfect code and 0 out of 40 isn't code",
    "start": "842880",
    "end": "844620"
  },
  {
    "text": "so 27 or 40 is not bad at all I would",
    "start": "844620",
    "end": "846720"
  },
  {
    "text": "say my Mage issues were functionality",
    "start": "846720",
    "end": "849180"
  },
  {
    "text": "that repeat didn't really work that well",
    "start": "849180",
    "end": "851459"
  },
  {
    "text": "um it wasn't understandable we need more",
    "start": "851459",
    "end": "853440"
  },
  {
    "text": "comments in your code was it",
    "start": "853440",
    "end": "855300"
  },
  {
    "text": "maintainable kind of but again the magic",
    "start": "855300",
    "end": "858060"
  },
  {
    "text": "numbers up here made it very hard to",
    "start": "858060",
    "end": "859620"
  },
  {
    "text": "maintain this code base and it's",
    "start": "859620",
    "end": "861300"
  },
  {
    "text": "expandable I think you did a pretty good",
    "start": "861300",
    "end": "862860"
  },
  {
    "text": "job defining your API so that's my first",
    "start": "862860",
    "end": "864779"
  },
  {
    "text": "code review if you guys like that do me",
    "start": "864779",
    "end": "866040"
  },
  {
    "text": "a favor and go watch this other code",
    "start": "866040",
    "end": "867240"
  },
  {
    "text": "review that I did it's over there",
    "start": "867240",
    "end": "868800"
  },
  {
    "text": "somewhere and uh yeah we'll see you guys",
    "start": "868800",
    "end": "871139"
  },
  {
    "text": "in the next one",
    "start": "871139",
    "end": "873620"
  }
]