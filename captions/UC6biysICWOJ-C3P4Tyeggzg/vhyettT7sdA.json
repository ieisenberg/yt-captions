[
  {
    "text": "I've been saying this since day one",
    "start": "0",
    "end": "2280"
  },
  {
    "text": "learning to write assembly is one of the",
    "start": "2280",
    "end": "4200"
  },
  {
    "text": "easiest ways to get better at",
    "start": "4200",
    "end": "5880"
  },
  {
    "text": "programming to learn how computers work",
    "start": "5880",
    "end": "8040"
  },
  {
    "text": "at a low level and write better and",
    "start": "8040",
    "end": "10500"
  },
  {
    "text": "safer code and the best part is learning",
    "start": "10500",
    "end": "13019"
  },
  {
    "text": "to code an assembly makes you feel like",
    "start": "13019",
    "end": "14759"
  },
  {
    "text": "a wizard the problem is that assembly is",
    "start": "14759",
    "end": "17520"
  },
  {
    "text": "hard to learn and for a lot of assembly",
    "start": "17520",
    "end": "19800"
  },
  {
    "text": "variants there aren't a lot of good",
    "start": "19800",
    "end": "21480"
  },
  {
    "text": "resources out on the internet that teach",
    "start": "21480",
    "end": "23400"
  },
  {
    "text": "you how to learn them quickly now",
    "start": "23400",
    "end": "24840"
  },
  {
    "text": "whether you're a student a senior Dev a",
    "start": "24840",
    "end": "27840"
  },
  {
    "text": "pen tester or just somebody who likes to",
    "start": "27840",
    "end": "29820"
  },
  {
    "text": "Tinker around with code the technique",
    "start": "29820",
    "end": "31560"
  },
  {
    "text": "I'm about to teach you is going to save",
    "start": "31560",
    "end": "32880"
  },
  {
    "text": "you tons of time honestly when I was a",
    "start": "32880",
    "end": "35280"
  },
  {
    "text": "student trying to learn assembly I wish",
    "start": "35280",
    "end": "36660"
  },
  {
    "text": "someone had taught me like this back",
    "start": "36660",
    "end": "38640"
  },
  {
    "text": "then this would have saved me hours my",
    "start": "38640",
    "end": "40500"
  },
  {
    "text": "technique is called the assembly Rosetta",
    "start": "40500",
    "end": "42780"
  },
  {
    "text": "Stone it's a bit of C code that if you",
    "start": "42780",
    "end": "45180"
  },
  {
    "text": "compile it and view it in the assembly",
    "start": "45180",
    "end": "47520"
  },
  {
    "text": "that you're trying to learn you can",
    "start": "47520",
    "end": "49260"
  },
  {
    "text": "learn all of the basics everything from",
    "start": "49260",
    "end": "51660"
  },
  {
    "text": "what the registers are called how wide",
    "start": "51660",
    "end": "53579"
  },
  {
    "text": "they are how the stack is used the",
    "start": "53579",
    "end": "55620"
  },
  {
    "text": "common Convention of that architecture",
    "start": "55620",
    "end": "57239"
  },
  {
    "text": "and a bunch of other really important",
    "start": "57239",
    "end": "59160"
  },
  {
    "text": "things in this video we're are going to",
    "start": "59160",
    "end": "60539"
  },
  {
    "text": "use the Rosetta Stone of assembly to",
    "start": "60539",
    "end": "63120"
  },
  {
    "text": "re-teach myself armed 64-bit",
    "start": "63120",
    "end": "65220"
  },
  {
    "text": "architecture now I want to highlight I'm",
    "start": "65220",
    "end": "67260"
  },
  {
    "text": "not the first one to come up with this",
    "start": "67260",
    "end": "68760"
  },
  {
    "text": "idea here is the author Tim ferriss's",
    "start": "68760",
    "end": "70920"
  },
  {
    "text": "blog and he has an article called how to",
    "start": "70920",
    "end": "73320"
  },
  {
    "text": "learn but not master any language in one",
    "start": "73320",
    "end": "76020"
  },
  {
    "text": "hour he essentially says that any",
    "start": "76020",
    "end": "78000"
  },
  {
    "text": "language can be broken down into a",
    "start": "78000",
    "end": "80220"
  },
  {
    "text": "series of sentences that if you can",
    "start": "80220",
    "end": "81840"
  },
  {
    "text": "learn to speak those sentences in the",
    "start": "81840",
    "end": "83700"
  },
  {
    "text": "language you will be able to understand",
    "start": "83700",
    "end": "85500"
  },
  {
    "text": "the grammatical structure of the",
    "start": "85500",
    "end": "87299"
  },
  {
    "text": "language entirely so in this example",
    "start": "87299",
    "end": "89400"
  },
  {
    "text": "today you can think of all these",
    "start": "89400",
    "end": "91200"
  },
  {
    "text": "different Clauses in C as sentences",
    "start": "91200",
    "end": "93960"
  },
  {
    "text": "knowing how these sentences work in C",
    "start": "93960",
    "end": "95820"
  },
  {
    "text": "and then learning how they work in",
    "start": "95820",
    "end": "97680"
  },
  {
    "text": "assembly is the fast track to learning",
    "start": "97680",
    "end": "99780"
  },
  {
    "text": "the new assembly variant now when we",
    "start": "99780",
    "end": "101340"
  },
  {
    "text": "start learning any Assembly Language we",
    "start": "101340",
    "end": "103079"
  },
  {
    "text": "need to learn the basics of the",
    "start": "103079",
    "end": "104460"
  },
  {
    "text": "registers what are the variables in the",
    "start": "104460",
    "end": "106500"
  },
  {
    "text": "CPU the hyper fast memory that contained",
    "start": "106500",
    "end": "109200"
  },
  {
    "text": "the data that we're moving around so",
    "start": "109200",
    "end": "111000"
  },
  {
    "text": "let's get into the Rosetta Stone and see",
    "start": "111000",
    "end": "113040"
  },
  {
    "text": "how we're going to learn that I've",
    "start": "113040",
    "end": "114659"
  },
  {
    "text": "created three separate values this is 64",
    "start": "114659",
    "end": "117720"
  },
  {
    "text": "bits long this is 32 bits long and this",
    "start": "117720",
    "end": "119700"
  },
  {
    "text": "is 32 bits long I want to see what",
    "start": "119700",
    "end": "122759"
  },
  {
    "text": "registers that they get stored in in the",
    "start": "122759",
    "end": "124799"
  },
  {
    "text": "assembly and how do they get put onto",
    "start": "124799",
    "end": "126600"
  },
  {
    "text": "the stack so with the Rosetta Stone",
    "start": "126600",
    "end": "128520"
  },
  {
    "text": "compiled into our Target architecture",
    "start": "128520",
    "end": "130259"
  },
  {
    "text": "arm 64. we can then object dump it and",
    "start": "130259",
    "end": "133140"
  },
  {
    "text": "then look for our main function to get",
    "start": "133140",
    "end": "134819"
  },
  {
    "text": "our feet dirty so here we see babe Cafe",
    "start": "134819",
    "end": "137280"
  },
  {
    "text": "food face and a couple other Sentinel",
    "start": "137280",
    "end": "139020"
  },
  {
    "text": "values appearing in the assembly it",
    "start": "139020",
    "end": "141300"
  },
  {
    "text": "loads the Babe Cafe food face in reverse",
    "start": "141300",
    "end": "143940"
  },
  {
    "text": "order into what looks like the x0",
    "start": "143940",
    "end": "146700"
  },
  {
    "text": "register let's write that down and take",
    "start": "146700",
    "end": "148500"
  },
  {
    "text": "that for note I made a weird X I",
    "start": "148500",
    "end": "151080"
  },
  {
    "text": "apologize babe Cafe food face and put it",
    "start": "151080",
    "end": "154260"
  },
  {
    "text": "into x0 in four different parts and then",
    "start": "154260",
    "end": "156959"
  },
  {
    "text": "we run this other operation called store",
    "start": "156959",
    "end": "158940"
  },
  {
    "text": "where we move x0 into what looks like SP",
    "start": "158940",
    "end": "162480"
  },
  {
    "text": "comma so probably plus 56. what have we",
    "start": "162480",
    "end": "166260"
  },
  {
    "text": "just done we actually learned two very",
    "start": "166260",
    "end": "168239"
  },
  {
    "text": "important assembly ideas in arm 64 in",
    "start": "168239",
    "end": "171480"
  },
  {
    "text": "just a matter of seconds learn not only",
    "start": "171480",
    "end": "172860"
  },
  {
    "text": "that x0 is a 64-bit register we also",
    "start": "172860",
    "end": "176940"
  },
  {
    "text": "learned how store operations work to",
    "start": "176940",
    "end": "179459"
  },
  {
    "text": "store values onto the stack so now we",
    "start": "179459",
    "end": "181920"
  },
  {
    "text": "know that our babe Cafe food face value",
    "start": "181920",
    "end": "183599"
  },
  {
    "text": "lives at position 56 on the stack we'll",
    "start": "183599",
    "end": "186540"
  },
  {
    "text": "take that down for note as well so we",
    "start": "186540",
    "end": "187680"
  },
  {
    "text": "did learn about the 64-bit value but",
    "start": "187680",
    "end": "189180"
  },
  {
    "text": "what about this 32-bit value how does",
    "start": "189180",
    "end": "191099"
  },
  {
    "text": "that differ we see our dead food value a",
    "start": "191099",
    "end": "193920"
  },
  {
    "text": "32-bit value get moved into not x0 but",
    "start": "193920",
    "end": "197220"
  },
  {
    "text": "w0 what does that tell us about the",
    "start": "197220",
    "end": "199379"
  },
  {
    "text": "architecture it's actually very common",
    "start": "199379",
    "end": "200940"
  },
  {
    "text": "in architectures that have multiple",
    "start": "200940",
    "end": "202920"
  },
  {
    "text": "width registers to contain them within",
    "start": "202920",
    "end": "205379"
  },
  {
    "text": "each other you have the larger one x0",
    "start": "205379",
    "end": "208260"
  },
  {
    "text": "that is the 64-bit variant and then",
    "start": "208260",
    "end": "211620"
  },
  {
    "text": "inside of that the lower half is now",
    "start": "211620",
    "end": "214260"
  },
  {
    "text": "your w0 which is 32. this is the same",
    "start": "214260",
    "end": "217260"
  },
  {
    "text": "for Intel too where Intel has the Rax",
    "start": "217260",
    "end": "220319"
  },
  {
    "text": "which contains the eax which contains",
    "start": "220319",
    "end": "223920"
  },
  {
    "text": "the ax which is just a concatenation of",
    "start": "223920",
    "end": "226620"
  },
  {
    "text": "Al and ah I have that backwards ah and a",
    "start": "226620",
    "end": "230159"
  },
  {
    "text": "l but you see the idea so here we have",
    "start": "230159",
    "end": "232319"
  },
  {
    "text": "now learned not only the names of the",
    "start": "232319",
    "end": "234659"
  },
  {
    "text": "registers it's x0 through whatever the",
    "start": "234659",
    "end": "236640"
  },
  {
    "text": "max value is but also that there are two",
    "start": "236640",
    "end": "238920"
  },
  {
    "text": "sets of registers that are different",
    "start": "238920",
    "end": "240420"
  },
  {
    "text": "sizes awesome so we learned the names",
    "start": "240420",
    "end": "242640"
  },
  {
    "text": "and the width of the registers and then",
    "start": "242640",
    "end": "244739"
  },
  {
    "text": "how they get used next we're going to go",
    "start": "244739",
    "end": "246480"
  },
  {
    "text": "into the calling conventions fish break",
    "start": "246480",
    "end": "248519"
  },
  {
    "text": "so what is a call-in convention this is",
    "start": "248519",
    "end": "250319"
  },
  {
    "text": "a fundamental piece of computer science",
    "start": "250319",
    "end": "252120"
  },
  {
    "text": "and computer engineering if you have two",
    "start": "252120",
    "end": "254400"
  },
  {
    "text": "functions let's say function a called",
    "start": "254400",
    "end": "256560"
  },
  {
    "text": "Funk a and we have Funk B",
    "start": "256560",
    "end": "260280"
  },
  {
    "text": "and we have function a call func B",
    "start": "260280",
    "end": "263040"
  },
  {
    "text": "function a and function B need to agree",
    "start": "263040",
    "end": "265800"
  },
  {
    "text": "upon between each other where the",
    "start": "265800",
    "end": "268380"
  },
  {
    "text": "arguments go for that function call and",
    "start": "268380",
    "end": "271560"
  },
  {
    "text": "also where the return value goes for",
    "start": "271560",
    "end": "273900"
  },
  {
    "text": "that function call also they need to",
    "start": "273900",
    "end": "275880"
  },
  {
    "text": "agree upon who is in charge of cleaning",
    "start": "275880",
    "end": "278160"
  },
  {
    "text": "up the stack is it the caller or the",
    "start": "278160",
    "end": "280680"
  },
  {
    "text": "Kali that set of agreements that that",
    "start": "280680",
    "end": "282900"
  },
  {
    "text": "convention that they all adhere to is",
    "start": "282900",
    "end": "284699"
  },
  {
    "text": "what is known as the calling convention",
    "start": "284699",
    "end": "287100"
  },
  {
    "text": "and for you to be able to code in any",
    "start": "287100",
    "end": "290100"
  },
  {
    "text": "assembly variant you need to know the",
    "start": "290100",
    "end": "292139"
  },
  {
    "text": "calling convention that is used by",
    "start": "292139",
    "end": "293639"
  },
  {
    "text": "default in that architecture so let's go",
    "start": "293639",
    "end": "295620"
  },
  {
    "text": "learn the arc 64 calling invention right",
    "start": "295620",
    "end": "298500"
  },
  {
    "text": "now using our magical C code so what",
    "start": "298500",
    "end": "301139"
  },
  {
    "text": "I've done here is I made a function",
    "start": "301139",
    "end": "302580"
  },
  {
    "text": "called returnifunk that takes a series",
    "start": "302580",
    "end": "305040"
  },
  {
    "text": "of values that we can use to identify",
    "start": "305040",
    "end": "307259"
  },
  {
    "text": "the column convention before we do this",
    "start": "307259",
    "end": "309360"
  },
  {
    "text": "though we need to figure out where our",
    "start": "309360",
    "end": "310979"
  },
  {
    "text": "value I lives so we know how the",
    "start": "310979",
    "end": "312900"
  },
  {
    "text": "reference is made in assembly so this",
    "start": "312900",
    "end": "315360"
  },
  {
    "text": "value here one three three seven is",
    "start": "315360",
    "end": "316800"
  },
  {
    "text": "actually 539 in HEX so just so you know",
    "start": "316800",
    "end": "319320"
  },
  {
    "text": "that's how it's going to appear in the",
    "start": "319320",
    "end": "320820"
  },
  {
    "text": "object dump using our Sentinel value 539",
    "start": "320820",
    "end": "323220"
  },
  {
    "text": "we see that 539 gets put into w0 and",
    "start": "323220",
    "end": "326400"
  },
  {
    "text": "then w0 gets put into stack location 44",
    "start": "326400",
    "end": "329100"
  },
  {
    "text": "so let's write that down our variable I",
    "start": "329100",
    "end": "331199"
  },
  {
    "text": "lives at location",
    "start": "331199",
    "end": "332479"
  },
  {
    "text": "44. and then note this is decimal two",
    "start": "332479",
    "end": "334680"
  },
  {
    "text": "this will probably confuse you here in a",
    "start": "334680",
    "end": "336300"
  },
  {
    "text": "second so again we're looking for the",
    "start": "336300",
    "end": "338340"
  },
  {
    "text": "setup for returny func so we've just",
    "start": "338340",
    "end": "340320"
  },
  {
    "text": "learned actually a few things by just",
    "start": "340320",
    "end": "342120"
  },
  {
    "text": "looking at this piece of code first of",
    "start": "342120",
    "end": "344100"
  },
  {
    "text": "all we've learned that the BL",
    "start": "344100",
    "end": "345660"
  },
  {
    "text": "instruction which is most likely going",
    "start": "345660",
    "end": "347160"
  },
  {
    "text": "to be branch and Link is how the",
    "start": "347160",
    "end": "349020"
  },
  {
    "text": "computer is doing the function call it's",
    "start": "349020",
    "end": "350880"
  },
  {
    "text": "going to be branching to returny Funk",
    "start": "350880",
    "end": "353160"
  },
  {
    "text": "and then putting into likely a link",
    "start": "353160",
    "end": "354960"
  },
  {
    "text": "register the address it has to go back",
    "start": "354960",
    "end": "357300"
  },
  {
    "text": "to that's part number one part number",
    "start": "357300",
    "end": "358919"
  },
  {
    "text": "two is we are seeing it set up the",
    "start": "358919",
    "end": "361560"
  },
  {
    "text": "function call by putting the address of",
    "start": "361560",
    "end": "364139"
  },
  {
    "text": "our variable I into a particular",
    "start": "364139",
    "end": "366300"
  },
  {
    "text": "register again don't forget in our",
    "start": "366300",
    "end": "367800"
  },
  {
    "text": "returning func function call we take the",
    "start": "367800",
    "end": "369720"
  },
  {
    "text": "address of I and then some other magic",
    "start": "369720",
    "end": "372120"
  },
  {
    "text": "values and don't forget I lives at",
    "start": "372120",
    "end": "374340"
  },
  {
    "text": "position 44 on the stack so here it's",
    "start": "374340",
    "end": "377160"
  },
  {
    "text": "putting into x0 the address of SP plus",
    "start": "377160",
    "end": "381240"
  },
  {
    "text": "2C which for some reason they mixed hex",
    "start": "381240",
    "end": "384060"
  },
  {
    "text": "and assembly but you'll see that 2C is",
    "start": "384060",
    "end": "385979"
  },
  {
    "text": "44. so this is actually the address of I",
    "start": "385979",
    "end": "388319"
  },
  {
    "text": "going into x0 awesome okay so we see",
    "start": "388319",
    "end": "391199"
  },
  {
    "text": "that x0 is getting the address of I",
    "start": "391199",
    "end": "393660"
  },
  {
    "text": "you'll see that W1 is getting 42 W2 is",
    "start": "393660",
    "end": "397199"
  },
  {
    "text": "getting 69 and then W3 is getting 3 1",
    "start": "397199",
    "end": "400500"
  },
  {
    "text": "through 3 7 which are all the values we",
    "start": "400500",
    "end": "402479"
  },
  {
    "text": "put into our assembly code and then",
    "start": "402479",
    "end": "404280"
  },
  {
    "text": "we're doing that final branch and Link",
    "start": "404280",
    "end": "405720"
  },
  {
    "text": "so we just learned the calling",
    "start": "405720",
    "end": "407639"
  },
  {
    "text": "Convention of how Arc 64 passes",
    "start": "407639",
    "end": "410220"
  },
  {
    "text": "arguments into function calls to call",
    "start": "410220",
    "end": "412319"
  },
  {
    "text": "other functions that's really important",
    "start": "412319",
    "end": "414000"
  },
  {
    "text": "we need to know that to write functions",
    "start": "414000",
    "end": "415800"
  },
  {
    "text": "in Arc 64 assembly we got the arguments",
    "start": "415800",
    "end": "418020"
  },
  {
    "text": "down how do we get the return value",
    "start": "418020",
    "end": "419759"
  },
  {
    "text": "let's check that out maybe we can check",
    "start": "419759",
    "end": "421259"
  },
  {
    "text": "out the return values actually by going",
    "start": "421259",
    "end": "423120"
  },
  {
    "text": "to returnifunk which is right here",
    "start": "423120",
    "end": "424740"
  },
  {
    "text": "typically the last move that we get is",
    "start": "424740",
    "end": "426360"
  },
  {
    "text": "going to be the return values remember",
    "start": "426360",
    "end": "427680"
  },
  {
    "text": "it takes in a character b and a short C",
    "start": "427680",
    "end": "430199"
  },
  {
    "text": "so it's loading the byte into W1 it's",
    "start": "430199",
    "end": "433440"
  },
  {
    "text": "loading the short into W2 and then it's",
    "start": "433440",
    "end": "436080"
  },
  {
    "text": "adding those two together and then it's",
    "start": "436080",
    "end": "438240"
  },
  {
    "text": "putting that into w0 so so now we know",
    "start": "438240",
    "end": "441180"
  },
  {
    "text": "that the return value for functions in",
    "start": "441180",
    "end": "443099"
  },
  {
    "text": "Arc 64 goes into w0 that is awesome and",
    "start": "443099",
    "end": "447180"
  },
  {
    "text": "again by learning the branch and Link",
    "start": "447180",
    "end": "448860"
  },
  {
    "text": "instruction we learned that the value",
    "start": "448860",
    "end": "450479"
  },
  {
    "text": "for the return address goes into a link",
    "start": "450479",
    "end": "452759"
  },
  {
    "text": "register which is pretty common for all",
    "start": "452759",
    "end": "454560"
  },
  {
    "text": "arm architectures okay so let's go into",
    "start": "454560",
    "end": "456479"
  },
  {
    "text": "branching and conditional branches so to",
    "start": "456479",
    "end": "458460"
  },
  {
    "text": "learn that from our C code I've made",
    "start": "458460",
    "end": "460800"
  },
  {
    "text": "this control flow here where I say int I",
    "start": "460800",
    "end": "463740"
  },
  {
    "text": "equals some value while I is not zero",
    "start": "463740",
    "end": "466319"
  },
  {
    "text": "subtract from I so let's go into our C",
    "start": "466319",
    "end": "468360"
  },
  {
    "text": "and see how that plays out",
    "start": "468360",
    "end": "471740"
  },
  {
    "text": "we move 539 into w0 and we store that",
    "start": "474199",
    "end": "477900"
  },
  {
    "text": "onto our stack we Branch to 74c",
    "start": "477900",
    "end": "481560"
  },
  {
    "text": "which is right here we then load the",
    "start": "481560",
    "end": "484080"
  },
  {
    "text": "value into w0 and compare that value to",
    "start": "484080",
    "end": "487919"
  },
  {
    "text": "zero and then we take a branch not equal",
    "start": "487919",
    "end": "490699"
  },
  {
    "text": "to 740 which is our loop again and then",
    "start": "490699",
    "end": "494400"
  },
  {
    "text": "the loop loads that out subtracts one",
    "start": "494400",
    "end": "497160"
  },
  {
    "text": "stores it back and then loads it and",
    "start": "497160",
    "end": "500580"
  },
  {
    "text": "then we do that all over again okay so",
    "start": "500580",
    "end": "502080"
  },
  {
    "text": "we actually just learned a very valuable",
    "start": "502080",
    "end": "504060"
  },
  {
    "text": "piece of information how do conditional",
    "start": "504060",
    "end": "506160"
  },
  {
    "text": "branches work how do the fundamentals of",
    "start": "506160",
    "end": "508740"
  },
  {
    "text": "if statements for statements and while",
    "start": "508740",
    "end": "510539"
  },
  {
    "text": "statements work in Arc 64 assembly you",
    "start": "510539",
    "end": "513659"
  },
  {
    "text": "load a value to a register you can pair",
    "start": "513659",
    "end": "515820"
  },
  {
    "text": "that value to some number and then you",
    "start": "515820",
    "end": "517860"
  },
  {
    "text": "do a conditional Branch so a branch if",
    "start": "517860",
    "end": "520260"
  },
  {
    "text": "not equal and I'm sure there is Branch",
    "start": "520260",
    "end": "522719"
  },
  {
    "text": "greater than Branch less than Etc that",
    "start": "522719",
    "end": "525720"
  },
  {
    "text": "can all be used to do this functionality",
    "start": "525720",
    "end": "528240"
  },
  {
    "text": "what do we just learn we learned not",
    "start": "528240",
    "end": "529440"
  },
  {
    "text": "only branching we learned conditional",
    "start": "529440",
    "end": "531360"
  },
  {
    "text": "branches and dude we already learned",
    "start": "531360",
    "end": "533279"
  },
  {
    "text": "calls from our previous return statement",
    "start": "533279",
    "end": "535019"
  },
  {
    "text": "stuff so we're almost done learning the",
    "start": "535019",
    "end": "537540"
  },
  {
    "text": "majority of Arc 64 in a matter of 10 or",
    "start": "537540",
    "end": "540300"
  },
  {
    "text": "so minutes insane what this can do for",
    "start": "540300",
    "end": "542339"
  },
  {
    "text": "you finally the last Behemoth we have to",
    "start": "542339",
    "end": "544140"
  },
  {
    "text": "tackle is the syscall interface so all",
    "start": "544140",
    "end": "546480"
  },
  {
    "text": "of this code is welding good we can move",
    "start": "546480",
    "end": "548459"
  },
  {
    "text": "data from here to there we can do loops",
    "start": "548459",
    "end": "550320"
  },
  {
    "text": "we can do function calls all that stuff",
    "start": "550320",
    "end": "552660"
  },
  {
    "text": "but none of it matters if we can't talk",
    "start": "552660",
    "end": "555060"
  },
  {
    "text": "to the kernel the kernel is ultimately",
    "start": "555060",
    "end": "557040"
  },
  {
    "text": "the Beast that interfaces with the",
    "start": "557040",
    "end": "558660"
  },
  {
    "text": "hardware below us and print things to",
    "start": "558660",
    "end": "561000"
  },
  {
    "text": "the screen does Network calls file",
    "start": "561000",
    "end": "562920"
  },
  {
    "text": "operations all that stuff so we are",
    "start": "562920",
    "end": "565200"
  },
  {
    "text": "going to figure out how we do a syscall",
    "start": "565200",
    "end": "567480"
  },
  {
    "text": "by calling by going to the syscall",
    "start": "567480",
    "end": "570360"
  },
  {
    "text": "function in the architecture if you",
    "start": "570360",
    "end": "572339"
  },
  {
    "text": "remember NRC what we do is we call a",
    "start": "572339",
    "end": "574560"
  },
  {
    "text": "syscall function again we have not",
    "start": "574560",
    "end": "576600"
  },
  {
    "text": "actually invoked a sys call yet this is",
    "start": "576600",
    "end": "578940"
  },
  {
    "text": "a c function that wraps the syscall",
    "start": "578940",
    "end": "581279"
  },
  {
    "text": "interface of the kernel we pass the",
    "start": "581279",
    "end": "584279"
  },
  {
    "text": "sysrite value the operation we want to",
    "start": "584279",
    "end": "586740"
  },
  {
    "text": "do into the first argument of our",
    "start": "586740",
    "end": "588899"
  },
  {
    "text": "function so at this point in the code",
    "start": "588899",
    "end": "590399"
  },
  {
    "text": "this lives in x0 X1 X2 Etc remember that",
    "start": "590399",
    "end": "595140"
  },
  {
    "text": "for the the assembly breakdown so here",
    "start": "595140",
    "end": "597120"
  },
  {
    "text": "after we get to this location and again",
    "start": "597120",
    "end": "599100"
  },
  {
    "text": "w0 and x0 are interchangeable one is",
    "start": "599100",
    "end": "601500"
  },
  {
    "text": "32-bit 1 is 64-bit we move w0 the sys",
    "start": "601500",
    "end": "605760"
  },
  {
    "text": "call number into W8 and then eventually",
    "start": "605760",
    "end": "608640"
  },
  {
    "text": "invoke service zero which is the syscall",
    "start": "608640",
    "end": "611040"
  },
  {
    "text": "instruction for Arc 64. what did we just",
    "start": "611040",
    "end": "614040"
  },
  {
    "text": "learn what we learned is that to do a",
    "start": "614040",
    "end": "617040"
  },
  {
    "text": "syscall in 64-bit arm assembly we put",
    "start": "617040",
    "end": "619740"
  },
  {
    "text": "the this call number into W8 and then",
    "start": "619740",
    "end": "622920"
  },
  {
    "text": "put the rest of the arguments into that",
    "start": "622920",
    "end": "625440"
  },
  {
    "text": "register plus one so if it came from X1",
    "start": "625440",
    "end": "628320"
  },
  {
    "text": "it goes into x0 if it came from X2 it",
    "start": "628320",
    "end": "631200"
  },
  {
    "text": "goes into X1 all of these things are how",
    "start": "631200",
    "end": "633899"
  },
  {
    "text": "we set up assist call and we just",
    "start": "633899",
    "end": "635760"
  },
  {
    "text": "learned that in a matter of two or so",
    "start": "635760",
    "end": "637320"
  },
  {
    "text": "minutes now okay remember how I said",
    "start": "637320",
    "end": "639959"
  },
  {
    "text": "that this technique will teach you the",
    "start": "639959",
    "end": "641880"
  },
  {
    "text": "basics of a language but just like",
    "start": "641880",
    "end": "643680"
  },
  {
    "text": "learning Japanese for example this",
    "start": "643680",
    "end": "645660"
  },
  {
    "text": "technique may teach you the basic",
    "start": "645660",
    "end": "647339"
  },
  {
    "text": "grammatical structure but it's not going",
    "start": "647339",
    "end": "649440"
  },
  {
    "text": "to teach you extreme conversational",
    "start": "649440",
    "end": "651240"
  },
  {
    "text": "nuances and things you would use with",
    "start": "651240",
    "end": "653220"
  },
  {
    "text": "your family and friends the prologue and",
    "start": "653220",
    "end": "655079"
  },
  {
    "text": "epilogue and Arc assembly is kind of",
    "start": "655079",
    "end": "657240"
  },
  {
    "text": "like that and let me show you why now",
    "start": "657240",
    "end": "659279"
  },
  {
    "text": "normally the prologue and epilogue and",
    "start": "659279",
    "end": "661620"
  },
  {
    "text": "assembly is extremely simple and Intel",
    "start": "661620",
    "end": "663779"
  },
  {
    "text": "for example you do a push you do a",
    "start": "663779",
    "end": "665940"
  },
  {
    "text": "subtract you're done here it's a little",
    "start": "665940",
    "end": "668700"
  },
  {
    "text": "more complicated",
    "start": "668700",
    "end": "671279"
  },
  {
    "text": "yeah",
    "start": "671279",
    "end": "673820"
  },
  {
    "text": "yeah so so normally it's not this",
    "start": "673920",
    "end": "676019"
  },
  {
    "text": "complicated but this is an extremely",
    "start": "676019",
    "end": "678779"
  },
  {
    "text": "complex armor structure that",
    "start": "678779",
    "end": "680100"
  },
  {
    "text": "unfortunately this technique won't teach",
    "start": "680100",
    "end": "681660"
  },
  {
    "text": "you there are just going to be some of",
    "start": "681660",
    "end": "683339"
  },
  {
    "text": "those techniques go Google it but in",
    "start": "683339",
    "end": "685320"
  },
  {
    "text": "this case this is called a store a pair",
    "start": "685320",
    "end": "687959"
  },
  {
    "text": "of registers operation and it's also a",
    "start": "687959",
    "end": "690540"
  },
  {
    "text": "post indexing operation so what this",
    "start": "690540",
    "end": "692880"
  },
  {
    "text": "does is it stores x29 and x30 at the",
    "start": "692880",
    "end": "698339"
  },
  {
    "text": "value of SP at the time and then updates",
    "start": "698339",
    "end": "701700"
  },
  {
    "text": "SP minus 80. what that does is it stores",
    "start": "701700",
    "end": "705000"
  },
  {
    "text": "the link register at the time the",
    "start": "705000",
    "end": "707279"
  },
  {
    "text": "register that's going to contain the",
    "start": "707279",
    "end": "708899"
  },
  {
    "text": "return address and the current base",
    "start": "708899",
    "end": "711360"
  },
  {
    "text": "pointer at the time onto the stack then",
    "start": "711360",
    "end": "714899"
  },
  {
    "text": "from there it's going to decrement SP",
    "start": "714899",
    "end": "717300"
  },
  {
    "text": "minus 80 make room for our variables",
    "start": "717300",
    "end": "719940"
  },
  {
    "text": "again fairly complicated not super",
    "start": "719940",
    "end": "722279"
  },
  {
    "text": "important but I want to make sure you",
    "start": "722279",
    "end": "724320"
  },
  {
    "text": "guys saw that and recognize that this",
    "start": "724320",
    "end": "725820"
  },
  {
    "text": "technique works for certain things but",
    "start": "725820",
    "end": "727740"
  },
  {
    "text": "not all the things and again the",
    "start": "727740",
    "end": "729839"
  },
  {
    "text": "function epilogue is similarly",
    "start": "729839",
    "end": "731339"
  },
  {
    "text": "complicated it loads two register users",
    "start": "731339",
    "end": "734399"
  },
  {
    "text": "from SP plus 80 and then decrements sp80",
    "start": "734399",
    "end": "738000"
  },
  {
    "text": "and then returns by jumping back to",
    "start": "738000",
    "end": "740519"
  },
  {
    "text": "where the link register is well guys",
    "start": "740519",
    "end": "742320"
  },
  {
    "text": "that's it thanks for watching hit that",
    "start": "742320",
    "end": "743519"
  },
  {
    "text": "sub button and then go watch one of",
    "start": "743519",
    "end": "744839"
  },
  {
    "text": "these videos where I'm sure you'll learn",
    "start": "744839",
    "end": "746220"
  },
  {
    "text": "something just as cool",
    "start": "746220",
    "end": "748200"
  },
  {
    "text": "all right you're still here",
    "start": "748200",
    "end": "751320"
  },
  {
    "text": "click click a video just pick one it's",
    "start": "751320",
    "end": "754800"
  },
  {
    "text": "right there what are you doing okay",
    "start": "754800",
    "end": "758420"
  }
]