[
  {
    "start": "0",
    "end": "120000"
  },
  {
    "text": "hey there youtube welcome back to",
    "start": "1199",
    "end": "2399"
  },
  {
    "text": "another uh",
    "start": "2399",
    "end": "3040"
  },
  {
    "text": "low level learning video uh by the end",
    "start": "3040",
    "end": "4880"
  },
  {
    "text": "of this video today you should be able",
    "start": "4880",
    "end": "6319"
  },
  {
    "text": "to write",
    "start": "6319",
    "end": "7040"
  },
  {
    "text": "a hello world program that outputs hello",
    "start": "7040",
    "end": "9599"
  },
  {
    "text": "world to the screen",
    "start": "9599",
    "end": "10800"
  },
  {
    "text": "in purely x86 assembly so let's uh let's",
    "start": "10800",
    "end": "13519"
  },
  {
    "text": "dive right in",
    "start": "13519",
    "end": "14559"
  },
  {
    "text": "my assumptions here is that you have a",
    "start": "14559",
    "end": "15839"
  },
  {
    "text": "little bit of programming experience you",
    "start": "15839",
    "end": "17359"
  },
  {
    "text": "know how to use linux all that good",
    "start": "17359",
    "end": "18640"
  },
  {
    "text": "stuff",
    "start": "18640",
    "end": "19600"
  },
  {
    "text": "and you're working in either some kind",
    "start": "19600",
    "end": "21199"
  },
  {
    "text": "of intel",
    "start": "21199",
    "end": "22720"
  },
  {
    "text": "linux environment be it a vm or bare",
    "start": "22720",
    "end": "25039"
  },
  {
    "text": "metal on a laptop",
    "start": "25039",
    "end": "27039"
  },
  {
    "text": "and with that being said let's dive",
    "start": "27039",
    "end": "28080"
  },
  {
    "text": "right into it so before you get started",
    "start": "28080",
    "end": "30080"
  },
  {
    "text": "make sure you install this one package",
    "start": "30080",
    "end": "31439"
  },
  {
    "text": "we will be running um",
    "start": "31439",
    "end": "34559"
  },
  {
    "text": "writing 32-bit assembly so if you don't",
    "start": "34559",
    "end": "36640"
  },
  {
    "text": "have",
    "start": "36640",
    "end": "37840"
  },
  {
    "text": "lib c6 dev i386 installed you'll have",
    "start": "37840",
    "end": "41440"
  },
  {
    "text": "issues at run time",
    "start": "41440",
    "end": "42879"
  },
  {
    "text": "with the loader once you have that",
    "start": "42879",
    "end": "45360"
  },
  {
    "text": "installed",
    "start": "45360",
    "end": "46399"
  },
  {
    "text": "go ahead and copy down this template",
    "start": "46399",
    "end": "49120"
  },
  {
    "text": "into a file",
    "start": "49120",
    "end": "50399"
  },
  {
    "text": "i call it 001.asm",
    "start": "50399",
    "end": "53520"
  },
  {
    "text": "and i'll walk through the template here",
    "start": "53520",
    "end": "54960"
  },
  {
    "text": "right so everything with a",
    "start": "54960",
    "end": "56719"
  },
  {
    "text": "hashtag as a kids would say or a pound",
    "start": "56719",
    "end": "58480"
  },
  {
    "text": "sign is a comment",
    "start": "58480",
    "end": "60800"
  },
  {
    "text": "the title and this is our goal right to",
    "start": "60800",
    "end": "63199"
  },
  {
    "text": "write a string to standard out",
    "start": "63199",
    "end": "65840"
  },
  {
    "text": "on the next line here we have global",
    "start": "65840",
    "end": "67280"
  },
  {
    "text": "start global start just gives the",
    "start": "67280",
    "end": "69920"
  },
  {
    "text": "assembler the directive that start is a",
    "start": "69920",
    "end": "72400"
  },
  {
    "text": "global symbol",
    "start": "72400",
    "end": "73439"
  },
  {
    "text": "that is exported to any other interested",
    "start": "73439",
    "end": "76880"
  },
  {
    "text": "party that wants to look at it",
    "start": "76880",
    "end": "79040"
  },
  {
    "text": "intel syntax means that we're going to",
    "start": "79040",
    "end": "80320"
  },
  {
    "text": "be writing our intel assembly and intel",
    "start": "80320",
    "end": "82799"
  },
  {
    "text": "syntax i know the",
    "start": "82799",
    "end": "84320"
  },
  {
    "text": "intel versus 18t syntax war is kind of a",
    "start": "84320",
    "end": "87280"
  },
  {
    "text": "holy one so i won't take a formal stance",
    "start": "87280",
    "end": "89200"
  },
  {
    "text": "but we're gonna be writing an intel",
    "start": "89200",
    "end": "90240"
  },
  {
    "text": "syntax",
    "start": "90240",
    "end": "91040"
  },
  {
    "text": "um and then these two lines here the",
    "start": "91040",
    "end": "93840"
  },
  {
    "text": "section text and the section data",
    "start": "93840",
    "end": "95759"
  },
  {
    "text": "that tells the assembler that anything",
    "start": "95759",
    "end": "98720"
  },
  {
    "text": "south of this line",
    "start": "98720",
    "end": "100240"
  },
  {
    "text": "is to be interpreted as text that means",
    "start": "100240",
    "end": "102159"
  },
  {
    "text": "that it is readable",
    "start": "102159",
    "end": "103360"
  },
  {
    "text": "and it is executable it is not writable",
    "start": "103360",
    "end": "106479"
  },
  {
    "text": "and the opposite is the same for section",
    "start": "106479",
    "end": "109040"
  },
  {
    "text": "data so it is",
    "start": "109040",
    "end": "110079"
  },
  {
    "text": "readable and writable it is not",
    "start": "110079",
    "end": "112399"
  },
  {
    "text": "executable right you don't want any part",
    "start": "112399",
    "end": "114079"
  },
  {
    "text": "of your program to be read write",
    "start": "114079",
    "end": "115680"
  },
  {
    "text": "executable",
    "start": "115680",
    "end": "116479"
  },
  {
    "text": "and we'll get into that in a later video",
    "start": "116479",
    "end": "119600"
  },
  {
    "text": "so all assembly ends up being",
    "start": "119600",
    "end": "123680"
  },
  {
    "text": "is a series of instructions that either",
    "start": "123680",
    "end": "126799"
  },
  {
    "text": "have to deal with registers or memory",
    "start": "126799",
    "end": "129119"
  },
  {
    "text": "and i know that's a gross over",
    "start": "129119",
    "end": "130319"
  },
  {
    "text": "simplification of the problem but that's",
    "start": "130319",
    "end": "131920"
  },
  {
    "text": "honestly what it ends up being",
    "start": "131920",
    "end": "133680"
  },
  {
    "text": "so if you look at this instruction right",
    "start": "133680",
    "end": "138319"
  },
  {
    "text": "move ex4 cool right so",
    "start": "140800",
    "end": "144239"
  },
  {
    "text": "that means that we're moving the number",
    "start": "144239",
    "end": "146959"
  },
  {
    "text": "four",
    "start": "146959",
    "end": "147920"
  },
  {
    "text": "into the register eax you may be asking",
    "start": "147920",
    "end": "150480"
  },
  {
    "text": "what are registers",
    "start": "150480",
    "end": "151599"
  },
  {
    "text": "okay well let's take a look at um",
    "start": "151599",
    "end": "155360"
  },
  {
    "text": "and this my beautiful art here",
    "start": "155360",
    "end": "158400"
  },
  {
    "text": "so registers are um a part of the",
    "start": "158400",
    "end": "161120"
  },
  {
    "text": "processor",
    "start": "161120",
    "end": "162000"
  },
  {
    "text": "that are hyper fast physical pages of",
    "start": "162000",
    "end": "164400"
  },
  {
    "text": "memory",
    "start": "164400",
    "end": "165120"
  },
  {
    "text": "that exist to transfer data um between",
    "start": "165120",
    "end": "168879"
  },
  {
    "text": "themselves or between memory each",
    "start": "168879",
    "end": "171280"
  },
  {
    "text": "register",
    "start": "171280",
    "end": "172720"
  },
  {
    "text": "has a purpose we won't go over all of",
    "start": "172720",
    "end": "174480"
  },
  {
    "text": "them today um basically understand that",
    "start": "174480",
    "end": "176560"
  },
  {
    "text": "you have your",
    "start": "176560",
    "end": "177840"
  },
  {
    "text": "general purpose registers here so eax",
    "start": "177840",
    "end": "180319"
  },
  {
    "text": "ebx",
    "start": "180319",
    "end": "181040"
  },
  {
    "text": "ecx edx etc there are some others",
    "start": "181040",
    "end": "184720"
  },
  {
    "text": "and then your non-general purpose",
    "start": "184720",
    "end": "187120"
  },
  {
    "text": "registers so this is esp",
    "start": "187120",
    "end": "189280"
  },
  {
    "text": "this points to the top of your stack in",
    "start": "189280",
    "end": "191120"
  },
  {
    "text": "memory and again if you don't understand",
    "start": "191120",
    "end": "192560"
  },
  {
    "text": "this it's totally okay this is for a",
    "start": "192560",
    "end": "193920"
  },
  {
    "text": "later video",
    "start": "193920",
    "end": "195440"
  },
  {
    "text": "ebp points to the base of your stack in",
    "start": "195440",
    "end": "198000"
  },
  {
    "text": "memory",
    "start": "198000",
    "end": "198800"
  },
  {
    "text": "and eip or pc we're commonly referred to",
    "start": "198800",
    "end": "202800"
  },
  {
    "text": "is the address of the next instruction",
    "start": "202800",
    "end": "205519"
  },
  {
    "text": "to be executed but again",
    "start": "205519",
    "end": "207120"
  },
  {
    "text": "none of these are particularly important",
    "start": "207120",
    "end": "208799"
  },
  {
    "text": "just understand that",
    "start": "208799",
    "end": "210640"
  },
  {
    "text": "assembly happens at the register level",
    "start": "210640",
    "end": "214159"
  },
  {
    "text": "cool so now that we know that registers",
    "start": "214159",
    "end": "215920"
  },
  {
    "text": "do we can write some code right we can",
    "start": "215920",
    "end": "217760"
  },
  {
    "text": "say",
    "start": "217760",
    "end": "218879"
  },
  {
    "text": "move eax 4 or move",
    "start": "218879",
    "end": "222879"
  },
  {
    "text": "ebx 5 and that's all well and good and",
    "start": "222879",
    "end": "226159"
  },
  {
    "text": "we can do this all day with moving",
    "start": "226159",
    "end": "228000"
  },
  {
    "text": "stuff in and out of registers and in and",
    "start": "228000",
    "end": "230159"
  },
  {
    "text": "out of memory",
    "start": "230159",
    "end": "231360"
  },
  {
    "text": "but the question then becomes how do we",
    "start": "231360",
    "end": "232959"
  },
  {
    "text": "make the computer actually do something",
    "start": "232959",
    "end": "234560"
  },
  {
    "text": "that we can",
    "start": "234560",
    "end": "235200"
  },
  {
    "text": "physically see or you know a process",
    "start": "235200",
    "end": "237200"
  },
  {
    "text": "crashes or something",
    "start": "237200",
    "end": "239760"
  },
  {
    "text": "and the way we do that is with what's",
    "start": "239760",
    "end": "241280"
  },
  {
    "text": "called a a system call",
    "start": "241280",
    "end": "243519"
  },
  {
    "text": "and a system call in intel 32-bit",
    "start": "243519",
    "end": "247200"
  },
  {
    "text": "is executed by interrupt hex 80. so this",
    "start": "247200",
    "end": "251200"
  },
  {
    "text": "basically asks the kernel hey colonel",
    "start": "251200",
    "end": "253840"
  },
  {
    "text": "i've set up my registers a certain way",
    "start": "253840",
    "end": "256479"
  },
  {
    "text": "can you make the computer do something",
    "start": "256479",
    "end": "258639"
  },
  {
    "text": "for me and",
    "start": "258639",
    "end": "259840"
  },
  {
    "text": "the protocol or i guess the the",
    "start": "259840",
    "end": "264240"
  },
  {
    "text": "spec that we've set up to do this is",
    "start": "264240",
    "end": "266479"
  },
  {
    "text": "accessible",
    "start": "266479",
    "end": "267520"
  },
  {
    "text": "through what's called a system call",
    "start": "267520",
    "end": "268800"
  },
  {
    "text": "table right so if you google system call",
    "start": "268800",
    "end": "271199"
  },
  {
    "text": "table",
    "start": "271199",
    "end": "271680"
  },
  {
    "text": "32-bit",
    "start": "271680",
    "end": "274400"
  },
  {
    "text": "you'll get this nice document from",
    "start": "274800",
    "end": "276960"
  },
  {
    "text": "google",
    "start": "276960",
    "end": "278080"
  },
  {
    "text": "that chromium puts out and you can look",
    "start": "278080",
    "end": "280320"
  },
  {
    "text": "at the x86 32-bit",
    "start": "280320",
    "end": "282720"
  },
  {
    "text": "it's just call table and basically you",
    "start": "282720",
    "end": "284880"
  },
  {
    "text": "get a list of functions that you can ask",
    "start": "284880",
    "end": "287280"
  },
  {
    "text": "the kernel to perform",
    "start": "287280",
    "end": "289360"
  },
  {
    "text": "for you so for example if we wanted to",
    "start": "289360",
    "end": "292160"
  },
  {
    "text": "exit our program we can't do it",
    "start": "292160",
    "end": "293840"
  },
  {
    "text": "ourselves we have to ask the kernel",
    "start": "293840",
    "end": "295520"
  },
  {
    "text": "so the way we ask the kernel to exit our",
    "start": "295520",
    "end": "297280"
  },
  {
    "text": "process is to put",
    "start": "297280",
    "end": "299600"
  },
  {
    "text": "one into the eax register",
    "start": "299600",
    "end": "302800"
  },
  {
    "start": "300000",
    "end": "600000"
  },
  {
    "text": "and then we put the error code we want",
    "start": "302800",
    "end": "304800"
  },
  {
    "text": "the process to return",
    "start": "304800",
    "end": "306800"
  },
  {
    "text": "in our zero or in this case ebx right",
    "start": "306800",
    "end": "309360"
  },
  {
    "text": "and then we",
    "start": "309360",
    "end": "310000"
  },
  {
    "text": "invoke that that in 80 and the kernel",
    "start": "310000",
    "end": "313360"
  },
  {
    "text": "takes an action so let's let's try that",
    "start": "313360",
    "end": "315280"
  },
  {
    "text": "out",
    "start": "315280",
    "end": "316479"
  },
  {
    "text": "so we said that to get an exit syscall",
    "start": "316479",
    "end": "321840"
  },
  {
    "text": "we have to say eax is one right because",
    "start": "323600",
    "end": "326400"
  },
  {
    "text": "that's what this table says",
    "start": "326400",
    "end": "328479"
  },
  {
    "text": "exit is happened by ex is one",
    "start": "328479",
    "end": "331600"
  },
  {
    "text": "and then the error code is through",
    "start": "331600",
    "end": "334639"
  },
  {
    "text": "ebx i want to return 65 and we invoke",
    "start": "334639",
    "end": "338479"
  },
  {
    "text": "uh the system call by typing int",
    "start": "338479",
    "end": "341919"
  },
  {
    "text": "x80 as the uh the next instruction cool",
    "start": "341919",
    "end": "345520"
  },
  {
    "text": "so we write that",
    "start": "345520",
    "end": "346960"
  },
  {
    "text": "and we've got to compile our code and",
    "start": "346960",
    "end": "348080"
  },
  {
    "text": "run it right so the way that we are",
    "start": "348080",
    "end": "349680"
  },
  {
    "text": "going to assemble",
    "start": "349680",
    "end": "350960"
  },
  {
    "text": "assemble our assembly and then compile",
    "start": "350960",
    "end": "353440"
  },
  {
    "text": "it into a valid elf",
    "start": "353440",
    "end": "355360"
  },
  {
    "text": "is through this series of commands so we",
    "start": "355360",
    "end": "358160"
  },
  {
    "text": "have",
    "start": "358160",
    "end": "359039"
  },
  {
    "text": "we invoke the assembler on our code",
    "start": "359039",
    "end": "362240"
  },
  {
    "text": "we're specifying it's in 32-bit because",
    "start": "362240",
    "end": "364240"
  },
  {
    "text": "we're doing 32-bit x86 assembly right",
    "start": "364240",
    "end": "366400"
  },
  {
    "text": "now",
    "start": "366400",
    "end": "366960"
  },
  {
    "text": "and we are going to output an object",
    "start": "366960",
    "end": "369520"
  },
  {
    "text": "file",
    "start": "369520",
    "end": "370080"
  },
  {
    "text": "so an object file is an intermediate",
    "start": "370080",
    "end": "373039"
  },
  {
    "text": "artifact",
    "start": "373039",
    "end": "373840"
  },
  {
    "text": "of the compilation process if this is",
    "start": "373840",
    "end": "376000"
  },
  {
    "text": "over your head don't worry about it but",
    "start": "376000",
    "end": "377199"
  },
  {
    "text": "basically it's not executable in this",
    "start": "377199",
    "end": "378880"
  },
  {
    "text": "format",
    "start": "378880",
    "end": "380080"
  },
  {
    "text": "if we produce this with no assembler",
    "start": "380080",
    "end": "382000"
  },
  {
    "text": "errors that's good",
    "start": "382000",
    "end": "383120"
  },
  {
    "text": "and now we say hey gcc we would like to",
    "start": "383120",
    "end": "386319"
  },
  {
    "text": "produce an executable elf in 32-bit mode",
    "start": "386319",
    "end": "390639"
  },
  {
    "text": "from our original object that we produce",
    "start": "390639",
    "end": "393360"
  },
  {
    "text": "from the assembler",
    "start": "393360",
    "end": "394560"
  },
  {
    "text": "and also please don't link in standard",
    "start": "394560",
    "end": "397280"
  },
  {
    "text": "or",
    "start": "397280",
    "end": "397680"
  },
  {
    "text": "libc because we don't care about live c",
    "start": "397680",
    "end": "399680"
  },
  {
    "text": "it will create",
    "start": "399680",
    "end": "400800"
  },
  {
    "text": "uh compiler errors if we don't do this",
    "start": "400800",
    "end": "402720"
  },
  {
    "text": "so we run this",
    "start": "402720",
    "end": "405039"
  },
  {
    "text": "can't find oh",
    "start": "405039",
    "end": "408160"
  },
  {
    "text": "i deleted the start tag so what happened",
    "start": "408160",
    "end": "410720"
  },
  {
    "text": "here is",
    "start": "410720",
    "end": "411919"
  },
  {
    "text": "i said a global label start exists",
    "start": "411919",
    "end": "415599"
  },
  {
    "text": "the compiler depends on start existing",
    "start": "415599",
    "end": "418160"
  },
  {
    "text": "otherwise it has no idea where to begin",
    "start": "418160",
    "end": "419680"
  },
  {
    "text": "the code",
    "start": "419680",
    "end": "420400"
  },
  {
    "text": "and i failed to declare it so we have to",
    "start": "420400",
    "end": "421919"
  },
  {
    "text": "add start to our code",
    "start": "421919",
    "end": "424880"
  },
  {
    "text": "so we'll run the assembler again because",
    "start": "424880",
    "end": "426800"
  },
  {
    "text": "the assembler has to put that symbol",
    "start": "426800",
    "end": "428479"
  },
  {
    "text": "into the object file",
    "start": "428479",
    "end": "430479"
  },
  {
    "text": "we will invoke the compiler because the",
    "start": "430479",
    "end": "432080"
  },
  {
    "text": "compiler needs to then look into the new",
    "start": "432080",
    "end": "433759"
  },
  {
    "text": "object file",
    "start": "433759",
    "end": "435039"
  },
  {
    "text": "and we'll get no errors great and in",
    "start": "435039",
    "end": "438319"
  },
  {
    "text": "theory if we run this it should just",
    "start": "438319",
    "end": "440080"
  },
  {
    "text": "exit",
    "start": "440080",
    "end": "441360"
  },
  {
    "text": "okay and now we want to check the return",
    "start": "441360",
    "end": "443680"
  },
  {
    "text": "value of that process",
    "start": "443680",
    "end": "445199"
  },
  {
    "text": "which was 65 perfect okay great so that",
    "start": "445199",
    "end": "447680"
  },
  {
    "text": "worked out exactly as we thought it",
    "start": "447680",
    "end": "448880"
  },
  {
    "text": "would",
    "start": "448880",
    "end": "449520"
  },
  {
    "text": "um so now that we know how to write uh",
    "start": "449520",
    "end": "452800"
  },
  {
    "text": "syscalls to do something via the kernel",
    "start": "452800",
    "end": "455440"
  },
  {
    "text": "uh the question is now how do we",
    "start": "455440",
    "end": "457919"
  },
  {
    "text": "output a string to this screen",
    "start": "457919",
    "end": "461039"
  },
  {
    "text": "and the way we do that is just like any",
    "start": "461039",
    "end": "462479"
  },
  {
    "text": "other syscall right",
    "start": "462479",
    "end": "464240"
  },
  {
    "text": "instead of exiting the process we're",
    "start": "464240",
    "end": "466400"
  },
  {
    "text": "going to have the process",
    "start": "466400",
    "end": "467680"
  },
  {
    "text": "write something um and how do we do that",
    "start": "467680",
    "end": "471039"
  },
  {
    "text": "so",
    "start": "471039",
    "end": "471759"
  },
  {
    "text": "in linux when you start a process there",
    "start": "471759",
    "end": "473440"
  },
  {
    "text": "are three file descriptors that are open",
    "start": "473440",
    "end": "475440"
  },
  {
    "text": "by default",
    "start": "475440",
    "end": "476160"
  },
  {
    "text": "standard in which is zero standard out",
    "start": "476160",
    "end": "478720"
  },
  {
    "text": "which is one",
    "start": "478720",
    "end": "479759"
  },
  {
    "text": "and standard error which is two so we're",
    "start": "479759",
    "end": "482240"
  },
  {
    "text": "going to write to the file descriptor",
    "start": "482240",
    "end": "484319"
  },
  {
    "text": "standard out which is one so ebx will be",
    "start": "484319",
    "end": "487280"
  },
  {
    "text": "one",
    "start": "487280",
    "end": "488639"
  },
  {
    "text": "we're going to point ecx to the thing we",
    "start": "488639",
    "end": "491759"
  },
  {
    "text": "want",
    "start": "491759",
    "end": "492000"
  },
  {
    "text": "to print and we're going to put into edx",
    "start": "492000",
    "end": "495120"
  },
  {
    "text": "the length of the thing we're printing",
    "start": "495120",
    "end": "498080"
  },
  {
    "text": "it sounds a little complicated but it's",
    "start": "498080",
    "end": "499440"
  },
  {
    "text": "really not that bad",
    "start": "499440",
    "end": "500240"
  },
  {
    "text": "let's dive right into it right so",
    "start": "500240",
    "end": "502080"
  },
  {
    "text": "syscall 4.",
    "start": "502080",
    "end": "507520"
  },
  {
    "text": "and we're going to actually leave this",
    "start": "507520",
    "end": "508879"
  },
  {
    "text": "exit syscall because at the end of",
    "start": "508879",
    "end": "510400"
  },
  {
    "text": "printing we want to",
    "start": "510400",
    "end": "511919"
  },
  {
    "text": "you know exit our program if we didn't",
    "start": "511919",
    "end": "514800"
  },
  {
    "text": "do that it would crash",
    "start": "514800",
    "end": "517599"
  },
  {
    "text": "of so we said um eax needed to be four",
    "start": "518800",
    "end": "521839"
  },
  {
    "text": "to pull this off ebx is equal to",
    "start": "521839",
    "end": "526880"
  },
  {
    "text": "one right which is standard out",
    "start": "526880",
    "end": "530720"
  },
  {
    "text": "in out error zero one two standard out",
    "start": "530720",
    "end": "533279"
  },
  {
    "text": "so we're going to write 2.",
    "start": "533279",
    "end": "536160"
  },
  {
    "text": "and then e c x is equal to the address",
    "start": "536800",
    "end": "540560"
  },
  {
    "text": "of the thing that we're trying to print",
    "start": "540560",
    "end": "543680"
  },
  {
    "text": "so in this case when we're dealing with",
    "start": "543680",
    "end": "546160"
  },
  {
    "text": "memory operations in",
    "start": "546160",
    "end": "547360"
  },
  {
    "text": "intel we actually don't use the move",
    "start": "547360",
    "end": "549360"
  },
  {
    "text": "instruction instead we use this new",
    "start": "549360",
    "end": "550720"
  },
  {
    "text": "instruction called lea",
    "start": "550720",
    "end": "552480"
  },
  {
    "text": "load effective address we are saying we",
    "start": "552480",
    "end": "554880"
  },
  {
    "text": "are loading",
    "start": "554880",
    "end": "555760"
  },
  {
    "text": "into ecx the effective address of",
    "start": "555760",
    "end": "559839"
  },
  {
    "text": "message right because we want ecx to",
    "start": "559839",
    "end": "562720"
  },
  {
    "text": "point",
    "start": "562720",
    "end": "563360"
  },
  {
    "text": "here before we invoke the system call",
    "start": "563360",
    "end": "567279"
  },
  {
    "text": "and then finally move edx",
    "start": "567279",
    "end": "570720"
  },
  {
    "text": "the length of the thing we want to print",
    "start": "570720",
    "end": "572640"
  },
  {
    "text": "so it's going to be",
    "start": "572640",
    "end": "574080"
  },
  {
    "text": "5 ten eleven twelve",
    "start": "574080",
    "end": "577600"
  },
  {
    "text": "thirteen and then and",
    "start": "577600",
    "end": "580800"
  },
  {
    "text": "eighty let's try to compile this and see",
    "start": "580800",
    "end": "583839"
  },
  {
    "text": "if uh",
    "start": "583839",
    "end": "584320"
  },
  {
    "text": "i messed it up no worked well so we",
    "start": "584320",
    "end": "588839"
  },
  {
    "text": "assemble we compile",
    "start": "588839",
    "end": "592560"
  },
  {
    "text": "we run the program great so what have we",
    "start": "592560",
    "end": "595279"
  },
  {
    "text": "done we've written a program",
    "start": "595279",
    "end": "596640"
  },
  {
    "text": "that sets up and invokes a write system",
    "start": "596640",
    "end": "600160"
  },
  {
    "start": "600000",
    "end": "890000"
  },
  {
    "text": "call",
    "start": "600160",
    "end": "601120"
  },
  {
    "text": "sets up and evokes a exit system call",
    "start": "601120",
    "end": "603360"
  },
  {
    "text": "exits to prop",
    "start": "603360",
    "end": "604240"
  },
  {
    "text": "the process and we get back the 65 error",
    "start": "604240",
    "end": "607279"
  },
  {
    "text": "code",
    "start": "607279",
    "end": "608000"
  },
  {
    "text": "all right guys i hope you enjoyed that",
    "start": "608000",
    "end": "609440"
  },
  {
    "text": "if you did drop a like hit subscribe i",
    "start": "609440",
    "end": "611600"
  },
  {
    "text": "drop these kinds of videos all the time",
    "start": "611600",
    "end": "613200"
  },
  {
    "text": "and",
    "start": "613200",
    "end": "613519"
  },
  {
    "text": "let me know in a comment what video you",
    "start": "613519",
    "end": "615440"
  },
  {
    "text": "want to see next on this channel so",
    "start": "615440",
    "end": "617120"
  },
  {
    "text": "thanks for your time i appreciate it",
    "start": "617120",
    "end": "618320"
  },
  {
    "text": "keep learning bye",
    "start": "618320",
    "end": "622240"
  }
]