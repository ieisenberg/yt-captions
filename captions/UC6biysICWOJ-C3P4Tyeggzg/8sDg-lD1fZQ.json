[
  {
    "start": "0",
    "end": "281000"
  },
  {
    "text": "break out your 30 90s boys because today",
    "start": "399",
    "end": "2480"
  },
  {
    "text": "we're mining some bitcoin",
    "start": "2480",
    "end": "4160"
  },
  {
    "text": "now just kidding uh today we're talking",
    "start": "4160",
    "end": "6080"
  },
  {
    "text": "about nvidia cuda core programming",
    "start": "6080",
    "end": "8000"
  },
  {
    "text": "the reason why i want to talk about this",
    "start": "8000",
    "end": "9200"
  },
  {
    "text": "is because i think it's a really",
    "start": "9200",
    "end": "10719"
  },
  {
    "text": "interesting topic of discussion when it",
    "start": "10719",
    "end": "12320"
  },
  {
    "text": "comes to how to use",
    "start": "12320",
    "end": "13360"
  },
  {
    "text": "different parts of your computer to do",
    "start": "13360",
    "end": "14719"
  },
  {
    "text": "different things so why would we do gpu",
    "start": "14719",
    "end": "16720"
  },
  {
    "text": "programming right",
    "start": "16720",
    "end": "17520"
  },
  {
    "text": "so gpus are able to do extremely high",
    "start": "17520",
    "end": "20720"
  },
  {
    "text": "throughput",
    "start": "20720",
    "end": "21600"
  },
  {
    "text": "paralyzed processing this is in",
    "start": "21600",
    "end": "23519"
  },
  {
    "text": "comparison to your cpu which is designed",
    "start": "23519",
    "end": "25439"
  },
  {
    "text": "for serialized execution",
    "start": "25439",
    "end": "27279"
  },
  {
    "text": "in a low latency fault tolerant kind of",
    "start": "27279",
    "end": "29679"
  },
  {
    "text": "way and",
    "start": "29679",
    "end": "30560"
  },
  {
    "text": "the reason this happens is because of",
    "start": "30560",
    "end": "31840"
  },
  {
    "text": "the way that the cpu and gpu are",
    "start": "31840",
    "end": "33760"
  },
  {
    "text": "designed",
    "start": "33760",
    "end": "34399"
  },
  {
    "text": "if you look here on the left you have a",
    "start": "34399",
    "end": "35840"
  },
  {
    "text": "cpu and it has maybe",
    "start": "35840",
    "end": "37600"
  },
  {
    "text": "eight to 16 cores and a core consists of",
    "start": "37600",
    "end": "40480"
  },
  {
    "text": "a control unit",
    "start": "40480",
    "end": "41520"
  },
  {
    "text": "and an alu right the control unit does",
    "start": "41520",
    "end": "43760"
  },
  {
    "text": "the logic control",
    "start": "43760",
    "end": "45120"
  },
  {
    "text": "and the alu does the math and it has",
    "start": "45120",
    "end": "47360"
  },
  {
    "text": "cache where it can very quickly look up",
    "start": "47360",
    "end": "49440"
  },
  {
    "text": "memory and data as it needs it's meant",
    "start": "49440",
    "end": "51680"
  },
  {
    "text": "to be serialized and very",
    "start": "51680",
    "end": "53360"
  },
  {
    "text": "fault tolerant a gpu on the other hand",
    "start": "53360",
    "end": "56239"
  },
  {
    "text": "is meant to do things",
    "start": "56239",
    "end": "57440"
  },
  {
    "text": "extremely fast and extremely paralyzed",
    "start": "57440",
    "end": "60559"
  },
  {
    "text": "they're designed",
    "start": "60559",
    "end": "61440"
  },
  {
    "text": "with parallelization in mind and that",
    "start": "61440",
    "end": "63199"
  },
  {
    "text": "being said the modern gpu i think the",
    "start": "63199",
    "end": "65119"
  },
  {
    "text": "3090 has",
    "start": "65119",
    "end": "66320"
  },
  {
    "text": "11 000 cores right so if you are able to",
    "start": "66320",
    "end": "69439"
  },
  {
    "text": "do",
    "start": "69439",
    "end": "69840"
  },
  {
    "text": "data processing in a paralyzed way you",
    "start": "69840",
    "end": "72479"
  },
  {
    "text": "want to be using a gpu and you'll get",
    "start": "72479",
    "end": "74320"
  },
  {
    "text": "way faster results out of it so with",
    "start": "74320",
    "end": "76159"
  },
  {
    "text": "that being said what problems are",
    "start": "76159",
    "end": "78400"
  },
  {
    "text": "good for a gpu well like i said before",
    "start": "78400",
    "end": "80960"
  },
  {
    "text": "any problem that can benefit from mass",
    "start": "80960",
    "end": "82799"
  },
  {
    "text": "parallelization is good for a gpu so for",
    "start": "82799",
    "end": "85600"
  },
  {
    "text": "example",
    "start": "85600",
    "end": "86320"
  },
  {
    "text": "the common example you use when talking",
    "start": "86320",
    "end": "87680"
  },
  {
    "text": "about cuda core programming is",
    "start": "87680",
    "end": "89759"
  },
  {
    "text": "scalarize a large set of vectors right",
    "start": "89759",
    "end": "92640"
  },
  {
    "text": "so we're gonna run through this example",
    "start": "92640",
    "end": "94159"
  },
  {
    "text": "using the cpu model so we have the",
    "start": "94159",
    "end": "96320"
  },
  {
    "text": "vectors over here",
    "start": "96320",
    "end": "97439"
  },
  {
    "text": "one comma two is our first vector the",
    "start": "97439",
    "end": "99520"
  },
  {
    "text": "left column is",
    "start": "99520",
    "end": "100479"
  },
  {
    "text": "a and the middle column is b and then",
    "start": "100479",
    "end": "102880"
  },
  {
    "text": "the destination is going to go into c",
    "start": "102880",
    "end": "104880"
  },
  {
    "text": "and we have up to n number of vectors",
    "start": "104880",
    "end": "107520"
  },
  {
    "text": "how would we do this on a cpu",
    "start": "107520",
    "end": "109280"
  },
  {
    "text": "on the cpu we would say 4 in i equals 0",
    "start": "109280",
    "end": "112000"
  },
  {
    "text": "we would just iterate",
    "start": "112000",
    "end": "113200"
  },
  {
    "text": "over this loop and we just add them up",
    "start": "113200",
    "end": "115200"
  },
  {
    "text": "right until we get to the very end",
    "start": "115200",
    "end": "116799"
  },
  {
    "text": "and what would actually happen in",
    "start": "116799",
    "end": "118240"
  },
  {
    "text": "execution is we would have a very linear",
    "start": "118240",
    "end": "120640"
  },
  {
    "text": "lookup vector element a look at vector",
    "start": "120640",
    "end": "122960"
  },
  {
    "text": "element b",
    "start": "122960",
    "end": "123920"
  },
  {
    "text": "add it into c and do that for the first",
    "start": "123920",
    "end": "125920"
  },
  {
    "text": "second and up to nth",
    "start": "125920",
    "end": "127759"
  },
  {
    "text": "execution but what we actually over time",
    "start": "127759",
    "end": "130000"
  },
  {
    "text": "get is we incur",
    "start": "130000",
    "end": "131120"
  },
  {
    "text": "a cost in looking up and running the",
    "start": "131120",
    "end": "134160"
  },
  {
    "text": "actual",
    "start": "134160",
    "end": "134720"
  },
  {
    "text": "program that has to do this data lookup",
    "start": "134720",
    "end": "137200"
  },
  {
    "text": "and and",
    "start": "137200",
    "end": "137760"
  },
  {
    "text": "mathematics and over time it becomes",
    "start": "137760",
    "end": "140239"
  },
  {
    "text": "less efficient to do this serialized",
    "start": "140239",
    "end": "142319"
  },
  {
    "text": "as opposed to using multiple cores and",
    "start": "142319",
    "end": "144160"
  },
  {
    "text": "that's where the gpu comes in",
    "start": "144160",
    "end": "145440"
  },
  {
    "text": "way we do this on a gpu is instead of",
    "start": "145440",
    "end": "147599"
  },
  {
    "text": "serializing it and doing it",
    "start": "147599",
    "end": "149280"
  },
  {
    "text": "you know one by one by one we could",
    "start": "149280",
    "end": "151440"
  },
  {
    "text": "write a function",
    "start": "151440",
    "end": "152560"
  },
  {
    "text": "that is meant to be used in a paralyzed",
    "start": "152560",
    "end": "154480"
  },
  {
    "text": "fashion and we would assign",
    "start": "154480",
    "end": "156800"
  },
  {
    "text": "that function in index for every",
    "start": "156800",
    "end": "160319"
  },
  {
    "text": "vector that we have and we'll figure out",
    "start": "160319",
    "end": "162239"
  },
  {
    "text": "where that index comes from in a second",
    "start": "162239",
    "end": "163920"
  },
  {
    "text": "it's a",
    "start": "163920",
    "end": "164400"
  },
  {
    "text": "pretty cool way that the cuda framework",
    "start": "164400",
    "end": "166000"
  },
  {
    "text": "set this up but basically we would",
    "start": "166000",
    "end": "167760"
  },
  {
    "text": "create this function",
    "start": "167760",
    "end": "169040"
  },
  {
    "text": "and we would execute this function in",
    "start": "169040",
    "end": "171440"
  },
  {
    "text": "parallel",
    "start": "171440",
    "end": "172319"
  },
  {
    "text": "for every vector and again that i the",
    "start": "172319",
    "end": "174959"
  },
  {
    "text": "index we used to index",
    "start": "174959",
    "end": "176239"
  },
  {
    "text": "into our vectors would come from the",
    "start": "176239",
    "end": "178560"
  },
  {
    "text": "cuda framework",
    "start": "178560",
    "end": "179519"
  },
  {
    "text": "and then as you can see here our",
    "start": "179519",
    "end": "180879"
  },
  {
    "text": "execution timeline right how long it",
    "start": "180879",
    "end": "182720"
  },
  {
    "text": "takes to do this gets cut by",
    "start": "182720",
    "end": "184720"
  },
  {
    "text": "in this case three your gains would go",
    "start": "184720",
    "end": "187120"
  },
  {
    "text": "up per the size of your n",
    "start": "187120",
    "end": "188800"
  },
  {
    "text": "right so if your n is serialized out to",
    "start": "188800",
    "end": "191040"
  },
  {
    "text": "10 24 elements",
    "start": "191040",
    "end": "192400"
  },
  {
    "text": "if you could do this in complete perfect",
    "start": "192400",
    "end": "194560"
  },
  {
    "text": "parallelization so 10",
    "start": "194560",
    "end": "195920"
  },
  {
    "text": "24 cores you would have a speed up of",
    "start": "195920",
    "end": "198560"
  },
  {
    "text": "1024x",
    "start": "198560",
    "end": "199680"
  },
  {
    "text": "right so how do we determine where this",
    "start": "199680",
    "end": "202800"
  },
  {
    "text": "eye comes from i know this graphic's a",
    "start": "202800",
    "end": "204400"
  },
  {
    "text": "little complicated but it's actually not",
    "start": "204400",
    "end": "206159"
  },
  {
    "text": "that bad",
    "start": "206159",
    "end": "206879"
  },
  {
    "text": "so the way the cuda framework is",
    "start": "206879",
    "end": "208400"
  },
  {
    "text": "designed it's meant to take away the",
    "start": "208400",
    "end": "210239"
  },
  {
    "text": "complexity",
    "start": "210239",
    "end": "211280"
  },
  {
    "text": "of parallelization so the abstract away",
    "start": "211280",
    "end": "214560"
  },
  {
    "text": "from the cpu to the gpu is what's known",
    "start": "214560",
    "end": "216879"
  },
  {
    "text": "as a kernel right",
    "start": "216879",
    "end": "218400"
  },
  {
    "text": "and a kernel consists of these things",
    "start": "218400",
    "end": "220560"
  },
  {
    "text": "called grids",
    "start": "220560",
    "end": "221920"
  },
  {
    "text": "and then grids consist of blocks and",
    "start": "221920",
    "end": "224640"
  },
  {
    "text": "then blocks consist",
    "start": "224640",
    "end": "226000"
  },
  {
    "text": "of threads and what actually happens is",
    "start": "226000",
    "end": "228000"
  },
  {
    "text": "when we execute a kernel",
    "start": "228000",
    "end": "229920"
  },
  {
    "text": "we tell the gpu how many grids and",
    "start": "229920",
    "end": "232959"
  },
  {
    "text": "blocks",
    "start": "232959",
    "end": "233760"
  },
  {
    "text": "and threads we want to have in our",
    "start": "233760",
    "end": "236480"
  },
  {
    "text": "program",
    "start": "236480",
    "end": "237200"
  },
  {
    "text": "so for the case before where we have",
    "start": "237200",
    "end": "239439"
  },
  {
    "text": "this n value",
    "start": "239439",
    "end": "240879"
  },
  {
    "text": "we can tell the gpu hey instantiate",
    "start": "240879",
    "end": "244159"
  },
  {
    "text": "n number of blocks for this program",
    "start": "244159",
    "end": "247840"
  },
  {
    "text": "and within that function we will",
    "start": "247840",
    "end": "250000"
  },
  {
    "text": "actually get",
    "start": "250000",
    "end": "251040"
  },
  {
    "text": "an index value that will represent the",
    "start": "251040",
    "end": "253439"
  },
  {
    "text": "number of the block that we're in",
    "start": "253439",
    "end": "255760"
  },
  {
    "text": "when this program executes with that",
    "start": "255760",
    "end": "258000"
  },
  {
    "text": "number we can",
    "start": "258000",
    "end": "259040"
  },
  {
    "text": "index into the array and the block will",
    "start": "259040",
    "end": "262079"
  },
  {
    "text": "know",
    "start": "262079",
    "end": "262560"
  },
  {
    "text": "which index to go into and do the math",
    "start": "262560",
    "end": "265120"
  },
  {
    "text": "for you like so what we're going to do",
    "start": "265120",
    "end": "266240"
  },
  {
    "text": "now is we're going to actually go into",
    "start": "266240",
    "end": "267360"
  },
  {
    "text": "visual studio i'm going to show you guys",
    "start": "267360",
    "end": "268880"
  },
  {
    "text": "how to set up",
    "start": "268880",
    "end": "269840"
  },
  {
    "text": "the cuda core framework and i'm going to",
    "start": "269840",
    "end": "271440"
  },
  {
    "text": "run you through this very example",
    "start": "271440",
    "end": "273840"
  },
  {
    "text": "and we're going to do it in a way where",
    "start": "273840",
    "end": "275680"
  },
  {
    "text": "nvidia parallelizes the problem for us",
    "start": "275680",
    "end": "278479"
  },
  {
    "text": "and does it way faster than a cpu could",
    "start": "278479",
    "end": "280639"
  },
  {
    "text": "let's get into it right now okay so i'm",
    "start": "280639",
    "end": "282320"
  },
  {
    "start": "281000",
    "end": "337000"
  },
  {
    "text": "going to assume that you guys already",
    "start": "282320",
    "end": "283520"
  },
  {
    "text": "have visual studio 19 installed",
    "start": "283520",
    "end": "285520"
  },
  {
    "text": "if you don't go ahead pause the video",
    "start": "285520",
    "end": "287199"
  },
  {
    "text": "also like the video uh and install",
    "start": "287199",
    "end": "289440"
  },
  {
    "text": "visual studio 2019 um then what we'll do",
    "start": "289440",
    "end": "292560"
  },
  {
    "text": "is we'll go to this url right here so",
    "start": "292560",
    "end": "294880"
  },
  {
    "text": "developer.net cuda downloads",
    "start": "294880",
    "end": "298240"
  },
  {
    "text": "and then you just download whatever os",
    "start": "298240",
    "end": "300479"
  },
  {
    "text": "you have so i have windows x86 64 and i",
    "start": "300479",
    "end": "303120"
  },
  {
    "text": "have windows 10 and i would like the",
    "start": "303120",
    "end": "305600"
  },
  {
    "text": "local version uh and you go ahead and",
    "start": "305600",
    "end": "307440"
  },
  {
    "text": "hit download",
    "start": "307440",
    "end": "308720"
  },
  {
    "text": "and i'm going to cancel this because i",
    "start": "308720",
    "end": "310960"
  },
  {
    "text": "already have it",
    "start": "310960",
    "end": "312880"
  },
  {
    "text": "once that executable gets downloaded you",
    "start": "312880",
    "end": "315600"
  },
  {
    "text": "just go ahead and",
    "start": "315600",
    "end": "316639"
  },
  {
    "text": "run it and i'll make sure i show you",
    "start": "316639",
    "end": "318160"
  },
  {
    "text": "guys how that works real quick let me",
    "start": "318160",
    "end": "319360"
  },
  {
    "text": "pull it up okay great we have the",
    "start": "319360",
    "end": "320639"
  },
  {
    "text": "installer right there",
    "start": "320639",
    "end": "321600"
  },
  {
    "text": "boom it's going to go ahead and",
    "start": "321600",
    "end": "323680"
  },
  {
    "text": "self-extract and run",
    "start": "323680",
    "end": "325280"
  },
  {
    "text": "um and it should give you the option to",
    "start": "325280",
    "end": "326800"
  },
  {
    "text": "just do a full install i'm not gonna",
    "start": "326800",
    "end": "328479"
  },
  {
    "text": "walk you through how to do the install",
    "start": "328479",
    "end": "329600"
  },
  {
    "text": "i'm sure you guys can figure that out",
    "start": "329600",
    "end": "330639"
  },
  {
    "text": "but it's very painless um",
    "start": "330639",
    "end": "332639"
  },
  {
    "text": "once you get that thing installed you",
    "start": "332639",
    "end": "334720"
  },
  {
    "text": "should be able to just open up visual",
    "start": "334720",
    "end": "336960"
  },
  {
    "text": "studio",
    "start": "336960",
    "end": "337680"
  },
  {
    "start": "337000",
    "end": "440000"
  },
  {
    "text": "and then that new project you should",
    "start": "337680",
    "end": "339199"
  },
  {
    "text": "have the option way at the bottom to do",
    "start": "339199",
    "end": "340960"
  },
  {
    "text": "a cuda 11.3 runtime project",
    "start": "340960",
    "end": "343919"
  },
  {
    "text": "hit next a few times blah blah blah",
    "start": "343919",
    "end": "347680"
  },
  {
    "text": "we'll do my vector project that will",
    "start": "347680",
    "end": "352160"
  },
  {
    "text": "actually give you a lot of code that you",
    "start": "352160",
    "end": "353600"
  },
  {
    "text": "don't need i get open that project and i",
    "start": "353600",
    "end": "355440"
  },
  {
    "text": "delete all of it",
    "start": "355440",
    "end": "356560"
  },
  {
    "text": "except for the include lines for the",
    "start": "356560",
    "end": "359280"
  },
  {
    "text": "cuda runtime header files",
    "start": "359280",
    "end": "361120"
  },
  {
    "text": "uh the obviously standard io and then i",
    "start": "361120",
    "end": "363520"
  },
  {
    "text": "leave my blank",
    "start": "363520",
    "end": "364720"
  },
  {
    "text": "main function right so once we have that",
    "start": "364720",
    "end": "367680"
  },
  {
    "text": "we need to start writing some code so to",
    "start": "367680",
    "end": "369360"
  },
  {
    "text": "go back to our example we're going to",
    "start": "369360",
    "end": "370800"
  },
  {
    "text": "create",
    "start": "370800",
    "end": "371600"
  },
  {
    "text": "three arrays to represent our vectors",
    "start": "371600",
    "end": "375360"
  },
  {
    "text": "so 1 2 3 is our a and remember that's",
    "start": "375360",
    "end": "378319"
  },
  {
    "text": "the left hand column of those arrays",
    "start": "378319",
    "end": "381440"
  },
  {
    "text": "or of those vectors rather and we'll do",
    "start": "381440",
    "end": "383360"
  },
  {
    "text": "four five six",
    "start": "383360",
    "end": "385600"
  },
  {
    "text": "and we want to have our destination uh",
    "start": "385600",
    "end": "388560"
  },
  {
    "text": "our destination array and that's going",
    "start": "388560",
    "end": "390160"
  },
  {
    "text": "to be of size",
    "start": "390160",
    "end": "391680"
  },
  {
    "text": "size of a divided by size of",
    "start": "391680",
    "end": "394800"
  },
  {
    "text": "int and we'll set it all to zero",
    "start": "394800",
    "end": "398960"
  },
  {
    "text": "okay great so now i'm just gonna write",
    "start": "398960",
    "end": "402080"
  },
  {
    "text": "the cpu example",
    "start": "402080",
    "end": "403360"
  },
  {
    "text": "which is really simple right 4i equals",
    "start": "403360",
    "end": "406000"
  },
  {
    "text": "zero",
    "start": "406000",
    "end": "406639"
  },
  {
    "text": "i less than size of c",
    "start": "406639",
    "end": "410560"
  },
  {
    "text": "over size of int i",
    "start": "410560",
    "end": "413680"
  },
  {
    "text": "plus plus c of i equals a of i",
    "start": "413680",
    "end": "417280"
  },
  {
    "text": "plus b of i",
    "start": "417280",
    "end": "420240"
  },
  {
    "text": "and we'll say uh return and we're gonna",
    "start": "421599",
    "end": "424720"
  },
  {
    "text": "want to break",
    "start": "424720",
    "end": "425680"
  },
  {
    "text": "right here to prove that c actually got",
    "start": "425680",
    "end": "427840"
  },
  {
    "text": "set so it should be right",
    "start": "427840",
    "end": "429199"
  },
  {
    "text": "five seven nine we'll run that real",
    "start": "429199",
    "end": "431680"
  },
  {
    "text": "quick",
    "start": "431680",
    "end": "432560"
  },
  {
    "text": "yep let me see here we got five oh i'll",
    "start": "432560",
    "end": "434800"
  },
  {
    "text": "zoom in for you guys actually it's",
    "start": "434800",
    "end": "435919"
  },
  {
    "text": "pretty small",
    "start": "435919",
    "end": "436800"
  },
  {
    "text": "um five seven and nine in our vector",
    "start": "436800",
    "end": "439919"
  },
  {
    "text": "right very very cool okay well that's",
    "start": "439919",
    "end": "441759"
  },
  {
    "text": "boring that's the cpu example",
    "start": "441759",
    "end": "443759"
  },
  {
    "text": "we wanna use the gpu to do this right",
    "start": "443759",
    "end": "446160"
  },
  {
    "text": "how do we do that",
    "start": "446160",
    "end": "447199"
  },
  {
    "text": "um there's a couple things we have to do",
    "start": "447199",
    "end": "448400"
  },
  {
    "text": "right so first we need to have",
    "start": "448400",
    "end": "451039"
  },
  {
    "text": "a pointer that points into memory that",
    "start": "451039",
    "end": "453440"
  },
  {
    "text": "is controlled",
    "start": "453440",
    "end": "454400"
  },
  {
    "text": "by the gpu so we're going to have int",
    "start": "454400",
    "end": "457039"
  },
  {
    "text": "star",
    "start": "457039",
    "end": "458319"
  },
  {
    "text": "cuda a equals zero this is going to be a",
    "start": "458319",
    "end": "461840"
  },
  {
    "text": "pointer",
    "start": "461840",
    "end": "463039"
  },
  {
    "text": "to the gpu's memory we're gonna do that",
    "start": "463039",
    "end": "464879"
  },
  {
    "text": "actually three times",
    "start": "464879",
    "end": "467440"
  },
  {
    "text": "and that'll be cuda b and cuda c",
    "start": "467440",
    "end": "471520"
  },
  {
    "text": "what we wanna do is we wanna actually",
    "start": "473440",
    "end": "475759"
  },
  {
    "text": "allocate memory",
    "start": "475759",
    "end": "477039"
  },
  {
    "text": "in the gpu to copy our data out to the",
    "start": "477039",
    "end": "480080"
  },
  {
    "text": "way we do that is with",
    "start": "480080",
    "end": "481199"
  },
  {
    "text": "cuda malik and kudamalik takes a",
    "start": "481199",
    "end": "484400"
  },
  {
    "text": "pointer pointer so we're going to",
    "start": "484400",
    "end": "485919"
  },
  {
    "text": "actually overwrite cuda a",
    "start": "485919",
    "end": "487840"
  },
  {
    "text": "on the stack with this value right so",
    "start": "487840",
    "end": "489680"
  },
  {
    "text": "it's going to be the address of cuda a",
    "start": "489680",
    "end": "491599"
  },
  {
    "text": "and how much do we allocate we're going",
    "start": "491599",
    "end": "493199"
  },
  {
    "text": "to allocate size of a",
    "start": "493199",
    "end": "496319"
  },
  {
    "text": "bytes and that's correct because this is",
    "start": "496319",
    "end": "498319"
  },
  {
    "text": "the the size of a",
    "start": "498319",
    "end": "500720"
  },
  {
    "text": "and we can just copy this and do it",
    "start": "500720",
    "end": "502000"
  },
  {
    "text": "three times so we're going to allocate",
    "start": "502000",
    "end": "504479"
  },
  {
    "text": "good b",
    "start": "504479",
    "end": "506960"
  },
  {
    "text": "and then a b and c okay great so if this",
    "start": "508319",
    "end": "510479"
  },
  {
    "text": "all happens correctly which we should",
    "start": "510479",
    "end": "512240"
  },
  {
    "text": "check",
    "start": "512240",
    "end": "512560"
  },
  {
    "text": "for return values but today we're being",
    "start": "512560",
    "end": "514080"
  },
  {
    "text": "bad programmers um",
    "start": "514080",
    "end": "515760"
  },
  {
    "text": "we should get pointers into the gpu that",
    "start": "515760",
    "end": "519039"
  },
  {
    "text": "have enough room to hold all of our",
    "start": "519039",
    "end": "521279"
  },
  {
    "text": "vectors",
    "start": "521279",
    "end": "522080"
  },
  {
    "text": "okay so now that we have all the room to",
    "start": "522080",
    "end": "523839"
  },
  {
    "text": "hold our vectors we need to put",
    "start": "523839",
    "end": "526080"
  },
  {
    "text": "the vectors into the gpu for processing",
    "start": "526080",
    "end": "528240"
  },
  {
    "text": "right so we use cuda mem copy to do this",
    "start": "528240",
    "end": "530959"
  },
  {
    "text": "and the destination is going to be",
    "start": "530959",
    "end": "533200"
  },
  {
    "text": "cuda a the source is going to be from",
    "start": "533200",
    "end": "536720"
  },
  {
    "text": "a and the count is the size of a this is",
    "start": "536720",
    "end": "539760"
  },
  {
    "text": "your standard mem copy right you have",
    "start": "539760",
    "end": "541279"
  },
  {
    "text": "destination",
    "start": "541279",
    "end": "542080"
  },
  {
    "text": "source and size the final thing you have",
    "start": "542080",
    "end": "543760"
  },
  {
    "text": "to do is you have to actually tell the",
    "start": "543760",
    "end": "544959"
  },
  {
    "text": "cuda framework",
    "start": "544959",
    "end": "546000"
  },
  {
    "text": "what direction is the data going is it",
    "start": "546000",
    "end": "547839"
  },
  {
    "text": "going from the host to the device",
    "start": "547839",
    "end": "549519"
  },
  {
    "text": "or the device to the host so the host in",
    "start": "549519",
    "end": "551200"
  },
  {
    "text": "this case the cpu the device the gpu and",
    "start": "551200",
    "end": "553680"
  },
  {
    "text": "in this case we're going from",
    "start": "553680",
    "end": "555600"
  },
  {
    "text": "uh cuda mem copy host to device",
    "start": "555600",
    "end": "559440"
  },
  {
    "text": "and we can again copy this three times",
    "start": "559440",
    "end": "562000"
  },
  {
    "text": "boom boom boom",
    "start": "562000",
    "end": "564560"
  },
  {
    "text": "go to b go to c b c b",
    "start": "564560",
    "end": "568560"
  },
  {
    "text": "and c okay we're going to start",
    "start": "568560",
    "end": "570240"
  },
  {
    "text": "commenting to make this a little easier",
    "start": "570240",
    "end": "571519"
  },
  {
    "text": "so",
    "start": "571519",
    "end": "572160"
  },
  {
    "text": "create pointers into the gpu",
    "start": "572160",
    "end": "576240"
  },
  {
    "text": "allocate memory in the gpu",
    "start": "576240",
    "end": "579680"
  },
  {
    "text": "and then copy the vectors into the gpu",
    "start": "579680",
    "end": "583839"
  },
  {
    "text": "okay pretty straightforward right create",
    "start": "583839",
    "end": "585519"
  },
  {
    "text": "these pointers malloc memory to them",
    "start": "585519",
    "end": "587920"
  },
  {
    "text": "and then copy into them great and we're",
    "start": "587920",
    "end": "590240"
  },
  {
    "text": "gonna get rid of our cpu example because",
    "start": "590240",
    "end": "591600"
  },
  {
    "text": "again that's like hyper boring no one",
    "start": "591600",
    "end": "593040"
  },
  {
    "text": "cares about",
    "start": "593040",
    "end": "593839"
  },
  {
    "text": "cpu vectors um great so",
    "start": "593839",
    "end": "597200"
  },
  {
    "text": "now we have our memory put into actually",
    "start": "597200",
    "end": "600160"
  },
  {
    "text": "we can just skip this line because it's",
    "start": "600160",
    "end": "601680"
  },
  {
    "text": "zero at this point so we don't have to",
    "start": "601680",
    "end": "602720"
  },
  {
    "text": "do that",
    "start": "602720",
    "end": "603360"
  },
  {
    "text": "um now we want to run our code",
    "start": "603360",
    "end": "606399"
  },
  {
    "text": "that adds these vectors together okay so",
    "start": "606399",
    "end": "608640"
  },
  {
    "text": "how do we do that well first we have to",
    "start": "608640",
    "end": "610079"
  },
  {
    "text": "write our program",
    "start": "610079",
    "end": "611360"
  },
  {
    "text": "that gets ran in the gpu or write our",
    "start": "611360",
    "end": "613440"
  },
  {
    "text": "function so",
    "start": "613440",
    "end": "614800"
  },
  {
    "text": "the way you do that is what's called a",
    "start": "614800",
    "end": "617440"
  },
  {
    "text": "double double",
    "start": "617440",
    "end": "618480"
  },
  {
    "text": "global this double double global tells",
    "start": "618480",
    "end": "620800"
  },
  {
    "text": "the compiler that this is going to be a",
    "start": "620800",
    "end": "622640"
  },
  {
    "text": "function that actually gets",
    "start": "622640",
    "end": "624000"
  },
  {
    "text": "ran in the gpu so it prepares it that",
    "start": "624000",
    "end": "626240"
  },
  {
    "text": "way and it creates the memory map so",
    "start": "626240",
    "end": "627760"
  },
  {
    "text": "that the gpu knows how to pick it up",
    "start": "627760",
    "end": "629680"
  },
  {
    "text": "okay so then we say void because we",
    "start": "629680",
    "end": "632399"
  },
  {
    "text": "don't want to return anything and then",
    "start": "632399",
    "end": "633519"
  },
  {
    "text": "we say",
    "start": "633519",
    "end": "633920"
  },
  {
    "text": "vector add and it's going to take three",
    "start": "633920",
    "end": "636079"
  },
  {
    "text": "parameters",
    "start": "636079",
    "end": "637120"
  },
  {
    "text": "a b and c and note these are all",
    "start": "637120",
    "end": "640560"
  },
  {
    "text": "pointers right because we're giving a",
    "start": "640560",
    "end": "642240"
  },
  {
    "text": "function",
    "start": "642240",
    "end": "642880"
  },
  {
    "text": "that is able to be parallelized to the",
    "start": "642880",
    "end": "645279"
  },
  {
    "text": "gpu",
    "start": "645279",
    "end": "646160"
  },
  {
    "text": "and then the gpu is going to handle it",
    "start": "646160",
    "end": "648000"
  },
  {
    "text": "using the cuda",
    "start": "648000",
    "end": "649519"
  },
  {
    "text": "block grid thread framework right and",
    "start": "649519",
    "end": "652560"
  },
  {
    "text": "then",
    "start": "652560",
    "end": "653040"
  },
  {
    "text": "what we're going to do is we need to",
    "start": "653040",
    "end": "654959"
  },
  {
    "text": "access the elements",
    "start": "654959",
    "end": "656399"
  },
  {
    "text": "based on the index of the thread",
    "start": "656399",
    "end": "659440"
  },
  {
    "text": "that we are the way that works is we say",
    "start": "659440",
    "end": "662160"
  },
  {
    "text": "that int i which is our index we're",
    "start": "662160",
    "end": "663839"
  },
  {
    "text": "going to use to",
    "start": "663839",
    "end": "664800"
  },
  {
    "text": "index into the arrays is equal to",
    "start": "664800",
    "end": "668000"
  },
  {
    "text": "thread idx dot x",
    "start": "668000",
    "end": "671680"
  },
  {
    "text": "so what this means is that we are going",
    "start": "671680",
    "end": "673360"
  },
  {
    "text": "to create a",
    "start": "673360",
    "end": "674959"
  },
  {
    "text": "list of threads and this will get called",
    "start": "674959",
    "end": "677600"
  },
  {
    "text": "on",
    "start": "677600",
    "end": "678000"
  },
  {
    "text": "every vector in the list",
    "start": "678000",
    "end": "681120"
  },
  {
    "text": "this x value is going to represent the",
    "start": "681120",
    "end": "683200"
  },
  {
    "text": "number of the vector that we",
    "start": "683200",
    "end": "684959"
  },
  {
    "text": "are and we're going to use that to index",
    "start": "684959",
    "end": "687680"
  },
  {
    "text": "into these arrays",
    "start": "687680",
    "end": "690560"
  },
  {
    "text": "and add them up",
    "start": "690560",
    "end": "693279"
  },
  {
    "text": "boom there we go and then return but",
    "start": "694000",
    "end": "695760"
  },
  {
    "text": "it's avoid so",
    "start": "695760",
    "end": "697200"
  },
  {
    "text": "it'll automatically return um okay great",
    "start": "697200",
    "end": "699600"
  },
  {
    "text": "so now we need to instantiate this we",
    "start": "699600",
    "end": "701279"
  },
  {
    "text": "need to run this right",
    "start": "701279",
    "end": "702640"
  },
  {
    "text": "how do we do that the way we do it is we",
    "start": "702640",
    "end": "705279"
  },
  {
    "text": "say the name of our function",
    "start": "705279",
    "end": "707040"
  },
  {
    "text": "vector add but then we have to add the",
    "start": "707040",
    "end": "710480"
  },
  {
    "text": "special syntax which is one two three",
    "start": "710480",
    "end": "712800"
  },
  {
    "text": "carrots",
    "start": "712800",
    "end": "713600"
  },
  {
    "text": "and the syntax that we use here is grid",
    "start": "713600",
    "end": "715839"
  },
  {
    "text": "size",
    "start": "715839",
    "end": "718000"
  },
  {
    "text": "block size we're not actually going to",
    "start": "718000",
    "end": "719519"
  },
  {
    "text": "leave this here i want to kind of",
    "start": "719519",
    "end": "720480"
  },
  {
    "text": "explain this",
    "start": "720480",
    "end": "721440"
  },
  {
    "text": "so the grid size is the size of the grid",
    "start": "721440",
    "end": "724160"
  },
  {
    "text": "which means it is the number of",
    "start": "724160",
    "end": "725839"
  },
  {
    "text": "blocks that we have and then we say the",
    "start": "725839",
    "end": "728639"
  },
  {
    "text": "block",
    "start": "728639",
    "end": "729040"
  },
  {
    "text": "size so per amount of blocks in here",
    "start": "729040",
    "end": "732480"
  },
  {
    "text": "this says how many threads exist per",
    "start": "732480",
    "end": "735120"
  },
  {
    "text": "block",
    "start": "735120",
    "end": "736079"
  },
  {
    "text": "so i'm going to say we only want one",
    "start": "736079",
    "end": "739200"
  },
  {
    "text": "block",
    "start": "739200",
    "end": "740000"
  },
  {
    "text": "because it's not a very big program i",
    "start": "740000",
    "end": "741440"
  },
  {
    "text": "don't want to over parallelize it and",
    "start": "741440",
    "end": "742880"
  },
  {
    "text": "that will actually cause issues here if",
    "start": "742880",
    "end": "744240"
  },
  {
    "text": "i do anything outside of",
    "start": "744240",
    "end": "746000"
  },
  {
    "text": "one block and then the block size is",
    "start": "746000",
    "end": "748959"
  },
  {
    "text": "actually going to be",
    "start": "748959",
    "end": "749920"
  },
  {
    "text": "the number of vectors and what is the",
    "start": "749920",
    "end": "751920"
  },
  {
    "text": "number of vectors it's size of a over",
    "start": "751920",
    "end": "753760"
  },
  {
    "text": "size of n",
    "start": "753760",
    "end": "756079"
  },
  {
    "text": "and then i call it with the parameters",
    "start": "756079",
    "end": "757920"
  },
  {
    "text": "cuda a",
    "start": "757920",
    "end": "759279"
  },
  {
    "text": "cuda b cuda c",
    "start": "759279",
    "end": "762639"
  },
  {
    "text": "so at this point and again there's gonna",
    "start": "762639",
    "end": "764240"
  },
  {
    "text": "be an error here it will actually",
    "start": "764240",
    "end": "765279"
  },
  {
    "text": "compile just fine",
    "start": "765279",
    "end": "766240"
  },
  {
    "text": "you can just ignore this um so what will",
    "start": "766240",
    "end": "768800"
  },
  {
    "text": "happen here is the cpu will tell the gpu",
    "start": "768800",
    "end": "770959"
  },
  {
    "text": "hey",
    "start": "770959",
    "end": "771600"
  },
  {
    "text": "run this function vector add in a cuda",
    "start": "771600",
    "end": "774800"
  },
  {
    "text": "kernel with a grid that has one block",
    "start": "774800",
    "end": "777279"
  },
  {
    "text": "and that block has this many threads and",
    "start": "777279",
    "end": "779920"
  },
  {
    "text": "call it with these parameters",
    "start": "779920",
    "end": "781920"
  },
  {
    "text": "that will get ran here and then for",
    "start": "781920",
    "end": "783440"
  },
  {
    "text": "every thread we do our thing and we add",
    "start": "783440",
    "end": "785519"
  },
  {
    "text": "the values",
    "start": "785519",
    "end": "786000"
  },
  {
    "text": "together right and then finally once",
    "start": "786000",
    "end": "788480"
  },
  {
    "text": "that happens",
    "start": "788480",
    "end": "789279"
  },
  {
    "text": "i'm going to delete the cpu part first",
    "start": "789279",
    "end": "790880"
  },
  {
    "text": "because i want to confirm to you guys",
    "start": "790880",
    "end": "792560"
  },
  {
    "text": "that you know this actually happens so",
    "start": "792560",
    "end": "795120"
  },
  {
    "text": "then once we have that we want to",
    "start": "795120",
    "end": "797440"
  },
  {
    "text": "cuda mem copy the result out of cuda c",
    "start": "797440",
    "end": "801200"
  },
  {
    "text": "so the destination is going to be c the",
    "start": "801200",
    "end": "803680"
  },
  {
    "text": "source is going to be",
    "start": "803680",
    "end": "804639"
  },
  {
    "text": "cuda c and then the size is going to be",
    "start": "804639",
    "end": "807920"
  },
  {
    "text": "size of c and instead of being a hosted",
    "start": "807920",
    "end": "811519"
  },
  {
    "text": "device this is going to be a device to",
    "start": "811519",
    "end": "813519"
  },
  {
    "text": "host",
    "start": "813519",
    "end": "814880"
  },
  {
    "text": "and again we're going to break right",
    "start": "814880",
    "end": "816160"
  },
  {
    "text": "here and just prove to you guys that",
    "start": "816160",
    "end": "817440"
  },
  {
    "text": "happened so we'll go ahead and run this",
    "start": "817440",
    "end": "819199"
  },
  {
    "text": "so we're at the return here so here is c",
    "start": "819199",
    "end": "821279"
  },
  {
    "text": "you can see that c579",
    "start": "821279",
    "end": "823680"
  },
  {
    "text": "got parallelized and it actually added",
    "start": "823680",
    "end": "825760"
  },
  {
    "text": "them in the gpu",
    "start": "825760",
    "end": "827360"
  },
  {
    "text": "and then it brought them out so we can",
    "start": "827360",
    "end": "829519"
  },
  {
    "text": "do is we can actually make our",
    "start": "829519",
    "end": "831360"
  },
  {
    "text": "vector a little bit bigger here so i'll",
    "start": "831360",
    "end": "833519"
  },
  {
    "text": "just go ahead and",
    "start": "833519",
    "end": "836240"
  },
  {
    "text": "copy this bad boy",
    "start": "837279",
    "end": "840320"
  },
  {
    "text": "i'll make b the same way",
    "start": "841519",
    "end": "845199"
  },
  {
    "text": "and then c will grow dynamically with",
    "start": "849040",
    "end": "850800"
  },
  {
    "text": "that these things will all be the same",
    "start": "850800",
    "end": "853120"
  },
  {
    "text": "yep so you can actually stop and run",
    "start": "853120",
    "end": "854480"
  },
  {
    "text": "this again i'll show you guys how it",
    "start": "854480",
    "end": "856000"
  },
  {
    "text": "works it should",
    "start": "856000",
    "end": "857839"
  },
  {
    "text": "based on this number properly",
    "start": "857839",
    "end": "860000"
  },
  {
    "text": "instantiate and",
    "start": "860000",
    "end": "861040"
  },
  {
    "text": "add our vector together yep boom so you",
    "start": "861040",
    "end": "863839"
  },
  {
    "text": "see that what happened in c",
    "start": "863839",
    "end": "865040"
  },
  {
    "text": "is it just added all these together so",
    "start": "865040",
    "end": "866959"
  },
  {
    "text": "again pretty cool right what's happening",
    "start": "866959",
    "end": "868480"
  },
  {
    "text": "we're creating these vectors locally on",
    "start": "868480",
    "end": "870880"
  },
  {
    "text": "our computer",
    "start": "870880",
    "end": "871760"
  },
  {
    "text": "we're creating a destination register on",
    "start": "871760",
    "end": "873519"
  },
  {
    "text": "our computer we're saying these are",
    "start": "873519",
    "end": "875199"
  },
  {
    "text": "going to be pointers into the gpu",
    "start": "875199",
    "end": "877279"
  },
  {
    "text": "we allocate memory in the gpu and",
    "start": "877279",
    "end": "879600"
  },
  {
    "text": "overwrite those pointers",
    "start": "879600",
    "end": "880959"
  },
  {
    "text": "we then mem copy from our computer to",
    "start": "880959",
    "end": "883360"
  },
  {
    "text": "the gpu",
    "start": "883360",
    "end": "884079"
  },
  {
    "text": "using this flag here and then we say run",
    "start": "884079",
    "end": "887360"
  },
  {
    "text": "this function this many times in",
    "start": "887360",
    "end": "890399"
  },
  {
    "text": "parallel",
    "start": "890399",
    "end": "891199"
  },
  {
    "text": "with these parameters and then once",
    "start": "891199",
    "end": "893440"
  },
  {
    "text": "that's been executed",
    "start": "893440",
    "end": "894639"
  },
  {
    "text": "copy that memory out of the gpu and then",
    "start": "894639",
    "end": "897519"
  },
  {
    "text": "we display",
    "start": "897519",
    "end": "898000"
  },
  {
    "text": "it here guys i hope that was useful i",
    "start": "898000",
    "end": "900560"
  },
  {
    "text": "hope you guys learned something the",
    "start": "900560",
    "end": "901680"
  },
  {
    "text": "power of the gpu is",
    "start": "901680",
    "end": "903279"
  },
  {
    "text": "you know very very high you just need to",
    "start": "903279",
    "end": "905360"
  },
  {
    "text": "learn how to write a program",
    "start": "905360",
    "end": "907199"
  },
  {
    "text": "that can parallelize in a way that can",
    "start": "907199",
    "end": "909440"
  },
  {
    "text": "be useful",
    "start": "909440",
    "end": "910320"
  },
  {
    "text": "when you're doing cuda core programming",
    "start": "910320",
    "end": "911839"
  },
  {
    "text": "if you guys enjoyed this video do me a",
    "start": "911839",
    "end": "912959"
  },
  {
    "text": "favor hit",
    "start": "912959",
    "end": "913519"
  },
  {
    "text": "like hit subscribe and i'll see you guys",
    "start": "913519",
    "end": "916000"
  },
  {
    "text": "in the next video",
    "start": "916000",
    "end": "927839"
  },
  {
    "text": "you",
    "start": "931759",
    "end": "933839"
  }
]