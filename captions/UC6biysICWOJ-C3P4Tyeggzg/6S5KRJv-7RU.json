[
  {
    "text": "Assembly Language is the language that",
    "start": "179",
    "end": "2159"
  },
  {
    "text": "computers speak it's not C it's not",
    "start": "2159",
    "end": "4500"
  },
  {
    "text": "python it's not JavaScript and before",
    "start": "4500",
    "end": "7020"
  },
  {
    "text": "you say well actually Triple L computers",
    "start": "7020",
    "end": "9540"
  },
  {
    "text": "speak machine code we all know that",
    "start": "9540",
    "end": "11820"
  },
  {
    "text": "assembly is the human readable version",
    "start": "11820",
    "end": "13740"
  },
  {
    "text": "of machine code",
    "start": "13740",
    "end": "16580"
  },
  {
    "text": "and while assembly may seem like an",
    "start": "16580",
    "end": "19320"
  },
  {
    "text": "alien language it's actually really easy",
    "start": "19320",
    "end": "21480"
  },
  {
    "text": "to learn",
    "start": "21480",
    "end": "23340"
  },
  {
    "text": "once you know how to do it you can show",
    "start": "23340",
    "end": "25080"
  },
  {
    "text": "off to your friends on how big your",
    "start": "25080",
    "end": "26640"
  },
  {
    "text": "brain is and how cool your programming",
    "start": "26640",
    "end": "28500"
  },
  {
    "text": "knowledge is today we'll be writing",
    "start": "28500",
    "end": "29760"
  },
  {
    "text": "baby's first 64-bit assembly program",
    "start": "29760",
    "end": "32340"
  },
  {
    "text": "it'll only take us 10 minutes and please",
    "start": "32340",
    "end": "35040"
  },
  {
    "text": "follow along because you can do it too",
    "start": "35040",
    "end": "36660"
  },
  {
    "text": "now before we actually get started",
    "start": "36660",
    "end": "37920"
  },
  {
    "text": "coding in assembly we have to talk about",
    "start": "37920",
    "end": "39480"
  },
  {
    "text": "a few things that are important to know",
    "start": "39480",
    "end": "41040"
  },
  {
    "text": "about the CPU so if this little square",
    "start": "41040",
    "end": "43500"
  },
  {
    "text": "here is your CPU it will say CPU inside",
    "start": "43500",
    "end": "46800"
  },
  {
    "text": "of the CPU are a bunch of variables that",
    "start": "46800",
    "end": "49379"
  },
  {
    "text": "are called registers they're just super",
    "start": "49379",
    "end": "51180"
  },
  {
    "text": "fast memory that your computer uses to",
    "start": "51180",
    "end": "53700"
  },
  {
    "text": "do operations with the registers are the",
    "start": "53700",
    "end": "56640"
  },
  {
    "text": "width of the instruction set so today",
    "start": "56640",
    "end": "58199"
  },
  {
    "text": "we're doing a 64-bit assembly so every",
    "start": "58199",
    "end": "60539"
  },
  {
    "text": "register is 64 bits wide they have",
    "start": "60539",
    "end": "63600"
  },
  {
    "text": "different names like RDI and RSI and",
    "start": "63600",
    "end": "67680"
  },
  {
    "text": "maybe R8 for example all of these are",
    "start": "67680",
    "end": "70020"
  },
  {
    "text": "64-bit registers and this are here I",
    "start": "70020",
    "end": "72840"
  },
  {
    "text": "think of it meaning really big meaning",
    "start": "72840",
    "end": "74520"
  },
  {
    "text": "that it's a 64-bit register and also",
    "start": "74520",
    "end": "76680"
  },
  {
    "text": "before you ask yes I did lose my voice",
    "start": "76680",
    "end": "78780"
  },
  {
    "text": "this weekend and yes I did shave my",
    "start": "78780",
    "end": "80700"
  },
  {
    "text": "beard off this weekend it's been a",
    "start": "80700",
    "end": "81960"
  },
  {
    "text": "weekend full of events I think you for",
    "start": "81960",
    "end": "83820"
  },
  {
    "text": "asking so with these registers we can do",
    "start": "83820",
    "end": "86220"
  },
  {
    "text": "a series of operations on them one of",
    "start": "86220",
    "end": "88140"
  },
  {
    "text": "them being move for example so we'll say",
    "start": "88140",
    "end": "90420"
  },
  {
    "text": "move RDI the number eight that means",
    "start": "90420",
    "end": "93479"
  },
  {
    "text": "move the number eight the constant value",
    "start": "93479",
    "end": "95640"
  },
  {
    "text": "into RDI we can also move registers",
    "start": "95640",
    "end": "98520"
  },
  {
    "text": "between each other so we can say move",
    "start": "98520",
    "end": "100200"
  },
  {
    "text": "into RDI the value in RSI so these are",
    "start": "100200",
    "end": "104159"
  },
  {
    "text": "both movements in and out of registers",
    "start": "104159",
    "end": "106500"
  },
  {
    "text": "those are pretty simple and then one of",
    "start": "106500",
    "end": "108000"
  },
  {
    "text": "the more important ones we can do are",
    "start": "108000",
    "end": "109320"
  },
  {
    "text": "called memory operations we can move",
    "start": "109320",
    "end": "111659"
  },
  {
    "text": "into RDI",
    "start": "111659",
    "end": "114479"
  },
  {
    "text": "the value at we call it the quad word",
    "start": "114479",
    "end": "117479"
  },
  {
    "text": "pointer",
    "start": "117479",
    "end": "120020"
  },
  {
    "text": "of RSI for example what that means is it",
    "start": "120420",
    "end": "123540"
  },
  {
    "text": "says treat the value in RSI as a pointer",
    "start": "123540",
    "end": "127020"
  },
  {
    "text": "and then remove the quad word length",
    "start": "127020",
    "end": "129239"
  },
  {
    "text": "that's 8 bytes or 64 bits remove eight",
    "start": "129239",
    "end": "132540"
  },
  {
    "text": "bytes from memory and put it into RDI",
    "start": "132540",
    "end": "135000"
  },
  {
    "text": "and then we can do the opposite we can",
    "start": "135000",
    "end": "136560"
  },
  {
    "text": "do the same thing in Reverse we can say",
    "start": "136560",
    "end": "138680"
  },
  {
    "text": "move to the quad word pointer",
    "start": "138680",
    "end": "144079"
  },
  {
    "text": "in RSI",
    "start": "144480",
    "end": "147739"
  },
  {
    "text": "the value in RDI so the first one was a",
    "start": "149940",
    "end": "152940"
  },
  {
    "text": "load we took values from memory and put",
    "start": "152940",
    "end": "155040"
  },
  {
    "text": "them into registers now we can take",
    "start": "155040",
    "end": "157080"
  },
  {
    "text": "values that are in registers and put",
    "start": "157080",
    "end": "159000"
  },
  {
    "text": "them into memory so this is a store",
    "start": "159000",
    "end": "160800"
  },
  {
    "text": "operation so with the basics out of the",
    "start": "160800",
    "end": "162900"
  },
  {
    "text": "way and again if you're a little lost",
    "start": "162900",
    "end": "163860"
  },
  {
    "text": "it's okay we're going to write some code",
    "start": "163860",
    "end": "165239"
  },
  {
    "text": "now to kind of clear it all up let's get",
    "start": "165239",
    "end": "166800"
  },
  {
    "text": "into our virtual machine and write some",
    "start": "166800",
    "end": "168180"
  },
  {
    "text": "code okay so to get started we have to",
    "start": "168180",
    "end": "169739"
  },
  {
    "text": "install the assembler and the Linker",
    "start": "169739",
    "end": "171480"
  },
  {
    "text": "that will allow us to compile our",
    "start": "171480",
    "end": "173160"
  },
  {
    "text": "assembly code into machine code that",
    "start": "173160",
    "end": "174720"
  },
  {
    "text": "runs on the computer so do that we have",
    "start": "174720",
    "end": "176519"
  },
  {
    "text": "to run a sudo app install GCC by running",
    "start": "176519",
    "end": "179280"
  },
  {
    "text": "this we'll actually get the assembler as",
    "start": "179280",
    "end": "181319"
  },
  {
    "text": "and the loader LD I already have it so",
    "start": "181319",
    "end": "183420"
  },
  {
    "text": "nothing happened here but just to test",
    "start": "183420",
    "end": "184620"
  },
  {
    "text": "you have it if you type as assembler",
    "start": "184620",
    "end": "186599"
  },
  {
    "text": "that should hang meaning it's looking",
    "start": "186599",
    "end": "187920"
  },
  {
    "text": "for an input of the file to assemble so",
    "start": "187920",
    "end": "190319"
  },
  {
    "text": "we're good there and also LD it should",
    "start": "190319",
    "end": "191700"
  },
  {
    "text": "say no input files if you have both of",
    "start": "191700",
    "end": "193319"
  },
  {
    "text": "those that run you should be able to",
    "start": "193319",
    "end": "195420"
  },
  {
    "text": "follow along as well so now let's",
    "start": "195420",
    "end": "197040"
  },
  {
    "text": "actually write some code that we're",
    "start": "197040",
    "end": "198540"
  },
  {
    "text": "going to assemble in our program so in",
    "start": "198540",
    "end": "201060"
  },
  {
    "text": "my folder assembly tutorial what we're",
    "start": "201060",
    "end": "202260"
  },
  {
    "text": "going to do is we're going to open up",
    "start": "202260",
    "end": "203159"
  },
  {
    "text": "our file we're going to say Vim assem.s",
    "start": "203159",
    "end": "205860"
  },
  {
    "text": "so you can name this file whatever you",
    "start": "205860",
    "end": "207180"
  },
  {
    "text": "want and here we are we're in a file",
    "start": "207180",
    "end": "209099"
  },
  {
    "text": "that we're going to actually write our",
    "start": "209099",
    "end": "210300"
  },
  {
    "text": "machine code now before we write our",
    "start": "210300",
    "end": "211920"
  },
  {
    "text": "machine code we have to start the file",
    "start": "211920",
    "end": "213659"
  },
  {
    "text": "off with some boilerplate code that",
    "start": "213659",
    "end": "215640"
  },
  {
    "text": "tells the assembler what to do so the",
    "start": "215640",
    "end": "217920"
  },
  {
    "text": "first one is global start that exposes a",
    "start": "217920",
    "end": "221040"
  },
  {
    "text": "symbol called start to the Linker so it",
    "start": "221040",
    "end": "222959"
  },
  {
    "text": "knows where our code starts and also",
    "start": "222959",
    "end": "224819"
  },
  {
    "text": "we're going to say Intel syntax no",
    "start": "224819",
    "end": "227519"
  },
  {
    "text": "prefix",
    "start": "227519",
    "end": "228840"
  },
  {
    "text": "that makes our code a little easier to",
    "start": "228840",
    "end": "230819"
  },
  {
    "text": "read and write for an average human",
    "start": "230819",
    "end": "232319"
  },
  {
    "text": "being so then we can say underscore",
    "start": "232319",
    "end": "234239"
  },
  {
    "text": "start and then a colon and that is where",
    "start": "234239",
    "end": "236040"
  },
  {
    "text": "our code is going to start so if we",
    "start": "236040",
    "end": "238019"
  },
  {
    "text": "write this and we get out of here we're",
    "start": "238019",
    "end": "239940"
  },
  {
    "text": "now going to try to assemble our code",
    "start": "239940",
    "end": "241739"
  },
  {
    "text": "using the assemblers we'll say as on our",
    "start": "241739",
    "end": "245120"
  },
  {
    "text": "code.s we're going to say",
    "start": "245120",
    "end": "247519"
  },
  {
    "text": "assem.o and there we go so now we have a",
    "start": "247519",
    "end": "250379"
  },
  {
    "text": "file called a sem.o now we need to",
    "start": "250379",
    "end": "252360"
  },
  {
    "text": "invoke the Linker to actually convert",
    "start": "252360",
    "end": "254340"
  },
  {
    "text": "that into an executable elf because",
    "start": "254340",
    "end": "255659"
  },
  {
    "text": "right now this is an intermediate object",
    "start": "255659",
    "end": "257699"
  },
  {
    "text": "we can't actually run this we have to",
    "start": "257699",
    "end": "259199"
  },
  {
    "text": "use the Linker to make it a full Elf",
    "start": "259199",
    "end": "261060"
  },
  {
    "text": "that runs we can use the Linker itself",
    "start": "261060",
    "end": "262560"
  },
  {
    "text": "or we can use GCC we're going to use GCC",
    "start": "262560",
    "end": "264360"
  },
  {
    "text": "and say GCC Tac o assem do that on a",
    "start": "264360",
    "end": "267600"
  },
  {
    "text": "sem.o we're also going to say no",
    "start": "267600",
    "end": "270060"
  },
  {
    "text": "standard lib and tax static that makes",
    "start": "270060",
    "end": "272460"
  },
  {
    "text": "it so that the binary doesn't get any",
    "start": "272460",
    "end": "274080"
  },
  {
    "text": "additional stuff in there from lib C and",
    "start": "274080",
    "end": "276180"
  },
  {
    "text": "makes it easier to run so if we run this",
    "start": "276180",
    "end": "278580"
  },
  {
    "text": "file we are going to get a crash and",
    "start": "278580",
    "end": "280979"
  },
  {
    "text": "there's a reason for that we haven't",
    "start": "280979",
    "end": "282300"
  },
  {
    "text": "told the binary how to properly exit so",
    "start": "282300",
    "end": "284699"
  },
  {
    "text": "we can go back into our file here and we",
    "start": "284699",
    "end": "286080"
  },
  {
    "text": "can do some operations that we talked",
    "start": "286080",
    "end": "287580"
  },
  {
    "text": "about in our previous example when I was",
    "start": "287580",
    "end": "288780"
  },
  {
    "text": "talking about the registers right we can",
    "start": "288780",
    "end": "290400"
  },
  {
    "text": "say things like move RDI the number",
    "start": "290400",
    "end": "292800"
  },
  {
    "text": "eight and we can say move into RSI the",
    "start": "292800",
    "end": "295800"
  },
  {
    "text": "value of RDI so at the end of this code",
    "start": "295800",
    "end": "297479"
  },
  {
    "text": "both RDI and RSI the registers will have",
    "start": "297479",
    "end": "300479"
  },
  {
    "text": "the value 8 in them so that's pretty",
    "start": "300479",
    "end": "301979"
  },
  {
    "text": "cool let's go back and rerun our Command",
    "start": "301979",
    "end": "304560"
  },
  {
    "text": "so again we use as to assemble it we use",
    "start": "304560",
    "end": "306780"
  },
  {
    "text": "GCC to compile it and then we can use",
    "start": "306780",
    "end": "309300"
  },
  {
    "text": "that and run the programs and you're",
    "start": "309300",
    "end": "310860"
  },
  {
    "text": "going to see we get a crash again so",
    "start": "310860",
    "end": "312540"
  },
  {
    "text": "those operations actually did happen",
    "start": "312540",
    "end": "313979"
  },
  {
    "text": "under the hood when it got to the end of",
    "start": "313979",
    "end": "315900"
  },
  {
    "text": "our code it didn't know how to exit our",
    "start": "315900",
    "end": "317940"
  },
  {
    "text": "program you may be asking you know we",
    "start": "317940",
    "end": "319740"
  },
  {
    "text": "have these operations to move values in",
    "start": "319740",
    "end": "322080"
  },
  {
    "text": "and out of registers in and out of",
    "start": "322080",
    "end": "324000"
  },
  {
    "text": "memory but how do we make the computer",
    "start": "324000",
    "end": "325919"
  },
  {
    "text": "do something how do we make it print",
    "start": "325919",
    "end": "327419"
  },
  {
    "text": "data or properly exit our process or do",
    "start": "327419",
    "end": "330060"
  },
  {
    "text": "something that matters to us as human",
    "start": "330060",
    "end": "331620"
  },
  {
    "text": "beings to do that we have to invoke what",
    "start": "331620",
    "end": "333479"
  },
  {
    "text": "is called a syscall and the actual",
    "start": "333479",
    "end": "335160"
  },
  {
    "text": "instruction in assembly to do that is",
    "start": "335160",
    "end": "336539"
  },
  {
    "text": "called a syscall now it's a little more",
    "start": "336539",
    "end": "339240"
  },
  {
    "text": "complicated than just typing the word",
    "start": "339240",
    "end": "340919"
  },
  {
    "text": "syscall we have to set up the registers",
    "start": "340919",
    "end": "343080"
  },
  {
    "text": "in a particular way that the kernel",
    "start": "343080",
    "end": "345419"
  },
  {
    "text": "beneath us understands what to do what",
    "start": "345419",
    "end": "347940"
  },
  {
    "text": "is the question that we're asking the",
    "start": "347940",
    "end": "349680"
  },
  {
    "text": "kernel to do for us so what I'm looking",
    "start": "349680",
    "end": "351300"
  },
  {
    "text": "at here is what is called a syscall",
    "start": "351300",
    "end": "353280"
  },
  {
    "text": "table this is a list of all the",
    "start": "353280",
    "end": "355320"
  },
  {
    "text": "operations the kernel is able to do for",
    "start": "355320",
    "end": "357360"
  },
  {
    "text": "us when we invoke a syscall and as you",
    "start": "357360",
    "end": "359759"
  },
  {
    "text": "can see here we have things like sys",
    "start": "359759",
    "end": "361380"
  },
  {
    "text": "read sys right we have Assist exit in",
    "start": "361380",
    "end": "363780"
  },
  {
    "text": "here somewhere let's see if we can find",
    "start": "363780",
    "end": "364800"
  },
  {
    "text": "it I'm pretty sure it's like syscall 62",
    "start": "364800",
    "end": "366720"
  },
  {
    "text": "or something",
    "start": "366720",
    "end": "369180"
  },
  {
    "text": "16 there we go so you'll see that we",
    "start": "369180",
    "end": "371400"
  },
  {
    "text": "have all these things we can ask the",
    "start": "371400",
    "end": "372539"
  },
  {
    "text": "kernel to do for us the way we ask the",
    "start": "372539",
    "end": "374699"
  },
  {
    "text": "kernel to do them is before we invoke",
    "start": "374699",
    "end": "376440"
  },
  {
    "text": "the syscall we have to set up the",
    "start": "376440",
    "end": "378240"
  },
  {
    "text": "registers in a way that the kernel",
    "start": "378240",
    "end": "379919"
  },
  {
    "text": "recognizes our Command so here we have",
    "start": "379919",
    "end": "382680"
  },
  {
    "text": "register Rax that means for example to",
    "start": "382680",
    "end": "384660"
  },
  {
    "text": "do the sysread operation we put the zero",
    "start": "384660",
    "end": "387419"
  },
  {
    "text": "into the Rax register we also put the",
    "start": "387419",
    "end": "390180"
  },
  {
    "text": "file description number we want to read",
    "start": "390180",
    "end": "391919"
  },
  {
    "text": "the buffer we want to read into Etc so",
    "start": "391919",
    "end": "394020"
  },
  {
    "text": "let's test this out with the exit",
    "start": "394020",
    "end": "396960"
  },
  {
    "text": "syscall again it's going to be just",
    "start": "396960",
    "end": "398280"
  },
  {
    "text": "called number 60 here so we put into Rax",
    "start": "398280",
    "end": "402000"
  },
  {
    "text": "the number 60 and then into RDI we put",
    "start": "402000",
    "end": "405240"
  },
  {
    "text": "the error code we want our process to",
    "start": "405240",
    "end": "407160"
  },
  {
    "text": "return with so let's let's try this out",
    "start": "407160",
    "end": "408960"
  },
  {
    "text": "so we said we wanted to put the number",
    "start": "408960",
    "end": "411300"
  },
  {
    "text": "60 into Rax and then into RDI we wanted",
    "start": "411300",
    "end": "414479"
  },
  {
    "text": "the error code and I'll show you how to",
    "start": "414479",
    "end": "415740"
  },
  {
    "text": "check that at the end of this run",
    "start": "415740",
    "end": "417360"
  },
  {
    "text": "we're gonna try the number 69 real quick",
    "start": "417360",
    "end": "419340"
  },
  {
    "text": "so let's do that and we're going to",
    "start": "419340",
    "end": "421319"
  },
  {
    "text": "re-assemble our program we're going to",
    "start": "421319",
    "end": "423180"
  },
  {
    "text": "run GCC on it and then if we run our",
    "start": "423180",
    "end": "425520"
  },
  {
    "text": "code our program didn't crash and the",
    "start": "425520",
    "end": "427560"
  },
  {
    "text": "reason for that is we told it how to",
    "start": "427560",
    "end": "429600"
  },
  {
    "text": "exit we gave it the instruction from the",
    "start": "429600",
    "end": "431580"
  },
  {
    "text": "kernel to exit and now we're going to",
    "start": "431580",
    "end": "433259"
  },
  {
    "text": "check the exit code to see if it's",
    "start": "433259",
    "end": "434639"
  },
  {
    "text": "actually doing what we asked it to do or",
    "start": "434639",
    "end": "436680"
  },
  {
    "text": "something else so we'll do Echo oh",
    "start": "436680",
    "end": "438419"
  },
  {
    "text": "dollar sign question mark and boom the",
    "start": "438419",
    "end": "440880"
  },
  {
    "text": "return code is 69 which means that this",
    "start": "440880",
    "end": "442860"
  },
  {
    "text": "is the code that we ran so let's level",
    "start": "442860",
    "end": "445440"
  },
  {
    "text": "this up let's add another layer to this",
    "start": "445440",
    "end": "447539"
  },
  {
    "text": "let's make the program print the string",
    "start": "447539",
    "end": "449880"
  },
  {
    "text": "hello world the way we do the Hello",
    "start": "449880",
    "end": "451380"
  },
  {
    "text": "World operation is we're going to invoke",
    "start": "451380",
    "end": "452880"
  },
  {
    "text": "a syscall called sys right we're going",
    "start": "452880",
    "end": "455460"
  },
  {
    "text": "to put 1 into RX to do that we're going",
    "start": "455460",
    "end": "457740"
  },
  {
    "text": "to write out to the standard out file",
    "start": "457740",
    "end": "459900"
  },
  {
    "text": "descriptor which is file descriptor",
    "start": "459900",
    "end": "461220"
  },
  {
    "text": "number one in out an error zero one two",
    "start": "461220",
    "end": "463680"
  },
  {
    "text": "and we're going to write out a buffer",
    "start": "463680",
    "end": "465900"
  },
  {
    "text": "that contains our hello world string and",
    "start": "465900",
    "end": "468479"
  },
  {
    "text": "also we're going to be put into RDX the",
    "start": "468479",
    "end": "470280"
  },
  {
    "text": "number of bytes to write so let's add",
    "start": "470280",
    "end": "471840"
  },
  {
    "text": "that into our program real quick so",
    "start": "471840",
    "end": "473340"
  },
  {
    "text": "we're going to leave this in here",
    "start": "473340",
    "end": "474479"
  },
  {
    "text": "because this is actually just us exiting",
    "start": "474479",
    "end": "475860"
  },
  {
    "text": "so we'll add a little comment here we'll",
    "start": "475860",
    "end": "477000"
  },
  {
    "text": "say this is the sys exit call",
    "start": "477000",
    "end": "479699"
  },
  {
    "text": "and then we're going to do the sys right",
    "start": "479699",
    "end": "481139"
  },
  {
    "text": "call to do the sysrite syscall we have",
    "start": "481139",
    "end": "483240"
  },
  {
    "text": "to do a few things again first we have",
    "start": "483240",
    "end": "484500"
  },
  {
    "text": "to tell Rax what is this call we're",
    "start": "484500",
    "end": "486660"
  },
  {
    "text": "doing so we move 1 into Rax we need to",
    "start": "486660",
    "end": "489300"
  },
  {
    "text": "put the file descriptor into rdis",
    "start": "489300",
    "end": "491520"
  },
  {
    "text": "remember standard out is file descript",
    "start": "491520",
    "end": "493139"
  },
  {
    "text": "number one so we'll also put one here",
    "start": "493139",
    "end": "494940"
  },
  {
    "text": "and we're going to move into our SI the",
    "start": "494940",
    "end": "497880"
  },
  {
    "text": "address of the buffer that contains our",
    "start": "497880",
    "end": "499919"
  },
  {
    "text": "string so this is actually going to be a",
    "start": "499919",
    "end": "501300"
  },
  {
    "text": "new operation called load effective",
    "start": "501300",
    "end": "503099"
  },
  {
    "text": "address we're going to load the",
    "start": "503099",
    "end": "504419"
  },
  {
    "text": "effective address into RSI of our hello",
    "start": "504419",
    "end": "507180"
  },
  {
    "text": "world buffer and we're going to Define",
    "start": "507180",
    "end": "508860"
  },
  {
    "text": "that here in a second",
    "start": "508860",
    "end": "510300"
  },
  {
    "text": "and then finally we move into our DX the",
    "start": "510300",
    "end": "513240"
  },
  {
    "text": "length of our buffer which is just going",
    "start": "513240",
    "end": "515039"
  },
  {
    "text": "to be 13. we can hardly code that into",
    "start": "515039",
    "end": "516539"
  },
  {
    "text": "our code right there and then we'll",
    "start": "516539",
    "end": "518039"
  },
  {
    "text": "invoke the syscall and then we'll go",
    "start": "518039",
    "end": "520440"
  },
  {
    "text": "from there",
    "start": "520440",
    "end": "521880"
  },
  {
    "text": "now we can do it on here is we can",
    "start": "521880",
    "end": "523500"
  },
  {
    "text": "create a new symbol called hello world",
    "start": "523500",
    "end": "525300"
  },
  {
    "text": "with a colon we're going to say it's an",
    "start": "525300",
    "end": "527399"
  },
  {
    "text": "ASCII string zero delimited that'll be",
    "start": "527399",
    "end": "530100"
  },
  {
    "text": "hello world",
    "start": "530100",
    "end": "532140"
  },
  {
    "text": "exclamation point new line and then a",
    "start": "532140",
    "end": "534660"
  },
  {
    "text": "zero will come at the end of that like C",
    "start": "534660",
    "end": "536279"
  },
  {
    "text": "is supposed to have so we can do that we",
    "start": "536279",
    "end": "538320"
  },
  {
    "text": "can save it we can quit and now we'll do",
    "start": "538320",
    "end": "540480"
  },
  {
    "text": "the same thing as before we can type as",
    "start": "540480",
    "end": "542040"
  },
  {
    "text": "to assemble our program",
    "start": "542040",
    "end": "545360"
  },
  {
    "text": "oh it didn't like my comments hold on",
    "start": "546540",
    "end": "550339"
  },
  {
    "text": "I think it's a double backslash here",
    "start": "551160",
    "end": "552779"
  },
  {
    "text": "yeah let's try that",
    "start": "552779",
    "end": "554459"
  },
  {
    "text": "it's either double backslash or a pound",
    "start": "554459",
    "end": "556560"
  },
  {
    "text": "sign",
    "start": "556560",
    "end": "558860"
  },
  {
    "text": "okay double backslash is good GCC and",
    "start": "559920",
    "end": "562440"
  },
  {
    "text": "then we're gonna run our program",
    "start": "562440",
    "end": "564899"
  },
  {
    "text": "hello world uh we missed a new line so",
    "start": "564899",
    "end": "566940"
  },
  {
    "text": "it's actually gonna be 14 characters",
    "start": "566940",
    "end": "568080"
  },
  {
    "text": "let's fix that real quick instead of 13",
    "start": "568080",
    "end": "569700"
  },
  {
    "text": "it's 14.",
    "start": "569700",
    "end": "572760"
  },
  {
    "text": "we'll do as we'll do GCC and we'll run",
    "start": "572760",
    "end": "575940"
  },
  {
    "text": "it again hello world all done at",
    "start": "575940",
    "end": "578339"
  },
  {
    "text": "assembly assembly isn't that hard I hope",
    "start": "578339",
    "end": "580140"
  },
  {
    "text": "you learned something today if you did",
    "start": "580140",
    "end": "581100"
  },
  {
    "text": "do me a favor hit that like button hit",
    "start": "581100",
    "end": "582839"
  },
  {
    "text": "subscribe and we'll see you in the next",
    "start": "582839",
    "end": "584640"
  },
  {
    "text": "low level tutorial talk to you then",
    "start": "584640",
    "end": "588860"
  }
]