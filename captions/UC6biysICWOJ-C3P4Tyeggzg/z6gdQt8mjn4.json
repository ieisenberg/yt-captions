[
  {
    "text": "here I've written some C code that's",
    "start": "0",
    "end": "1800"
  },
  {
    "text": "vulnerable to a buffer overflow the",
    "start": "1800",
    "end": "3899"
  },
  {
    "text": "fgets function reads in HEX 100 more",
    "start": "3899",
    "end": "6060"
  },
  {
    "text": "bytes than the buffer has room for",
    "start": "6060",
    "end": "7859"
  },
  {
    "text": "obviously this bug is fairly trivial but",
    "start": "7859",
    "end": "10260"
  },
  {
    "text": "this scenario is very easy to recreate",
    "start": "10260",
    "end": "12599"
  },
  {
    "text": "in the real world when you're",
    "start": "12599",
    "end": "13860"
  },
  {
    "text": "calculating things like buffer space",
    "start": "13860",
    "end": "15599"
  },
  {
    "text": "remaining in a operation that requires",
    "start": "15599",
    "end": "17940"
  },
  {
    "text": "multiple reads this code is vulnerable",
    "start": "17940",
    "end": "19980"
  },
  {
    "text": "to a buffer overflow but I have stack",
    "start": "19980",
    "end": "22859"
  },
  {
    "text": "canaries enabled which is a default",
    "start": "22859",
    "end": "25019"
  },
  {
    "text": "feature in GCC and if I give the program",
    "start": "25019",
    "end": "27359"
  },
  {
    "text": "more data than it has room for the",
    "start": "27359",
    "end": "29699"
  },
  {
    "text": "program will gracefully fail with a",
    "start": "29699",
    "end": "31800"
  },
  {
    "text": "stack Overflow detected so here the file",
    "start": "31800",
    "end": "34140"
  },
  {
    "text": "or input file is twice the size of the",
    "start": "34140",
    "end": "36840"
  },
  {
    "text": "buffer which does overflow the stack but",
    "start": "36840",
    "end": "39180"
  },
  {
    "text": "when I run the program I don't get a",
    "start": "39180",
    "end": "40980"
  },
  {
    "text": "full crash I get a semi-graceful fail",
    "start": "40980",
    "end": "43140"
  },
  {
    "text": "that a hacker could not take over the",
    "start": "43140",
    "end": "45059"
  },
  {
    "text": "way this works is actually pretty cool",
    "start": "45059",
    "end": "46500"
  },
  {
    "text": "so every time a process is created the",
    "start": "46500",
    "end": "49200"
  },
  {
    "text": "kernel creates a random number that will",
    "start": "49200",
    "end": "51239"
  },
  {
    "text": "be the stack can narrative that random",
    "start": "51239",
    "end": "52920"
  },
  {
    "text": "number is meant to be a complete secret",
    "start": "52920",
    "end": "54600"
  },
  {
    "text": "to the user so the user cannot replay it",
    "start": "54600",
    "end": "57239"
  },
  {
    "text": "when they do a buffer overflow attack",
    "start": "57239",
    "end": "58739"
  },
  {
    "text": "that number is put into a special memory",
    "start": "58739",
    "end": "60780"
  },
  {
    "text": "segment at offset hex 28 and we move",
    "start": "60780",
    "end": "63300"
  },
  {
    "text": "that into Rax then we store that Rax on",
    "start": "63300",
    "end": "66840"
  },
  {
    "text": "the stack very very very close to the",
    "start": "66840",
    "end": "69240"
  },
  {
    "text": "bottom here near RBP and again remember",
    "start": "69240",
    "end": "71760"
  },
  {
    "text": "the RBP is the base pointer that's the",
    "start": "71760",
    "end": "74700"
  },
  {
    "text": "bottom of our Stacks anything above it",
    "start": "74700",
    "end": "76799"
  },
  {
    "text": "is going to be negative to it so it's",
    "start": "76799",
    "end": "78420"
  },
  {
    "text": "right at the bottom of our stack just",
    "start": "78420",
    "end": "80340"
  },
  {
    "text": "above the base so this is a function",
    "start": "80340",
    "end": "82020"
  },
  {
    "text": "prologue the beginning and this happens",
    "start": "82020",
    "end": "83520"
  },
  {
    "text": "before any of my code gets ran so here",
    "start": "83520",
    "end": "86580"
  },
  {
    "text": "is where my code begins here's a little",
    "start": "86580",
    "end": "88680"
  },
  {
    "text": "snippet that actually reveals the",
    "start": "88680",
    "end": "90299"
  },
  {
    "text": "stacking area for a future example but",
    "start": "90299",
    "end": "92340"
  },
  {
    "text": "eventually I print it out and I open up",
    "start": "92340",
    "end": "94020"
  },
  {
    "text": "the file and I call fgets all of this is",
    "start": "94020",
    "end": "96299"
  },
  {
    "text": "code that I wrote and during this time",
    "start": "96299",
    "end": "98280"
  },
  {
    "text": "the stat Canary sitting there he's",
    "start": "98280",
    "end": "99540"
  },
  {
    "text": "looking all cute he's on the stack he's",
    "start": "99540",
    "end": "101159"
  },
  {
    "text": "ready to die for us respect the canary",
    "start": "101159",
    "end": "104340"
  },
  {
    "text": "comment after that we begin What's",
    "start": "104340",
    "end": "106439"
  },
  {
    "text": "called the function prologue and where",
    "start": "106439",
    "end": "108240"
  },
  {
    "text": "the stack Canary actually gets its use",
    "start": "108240",
    "end": "110399"
  },
  {
    "text": "so what we do is we move the canary at",
    "start": "110399",
    "end": "113000"
  },
  {
    "text": "rbp-8 into rcx and then we xor it with",
    "start": "113000",
    "end": "117060"
  },
  {
    "text": "that magic value again and if the result",
    "start": "117060",
    "end": "118979"
  },
  {
    "text": "is zero that means our Canary was not",
    "start": "118979",
    "end": "121079"
  },
  {
    "text": "corrupted nothing to worry about but if",
    "start": "121079",
    "end": "123659"
  },
  {
    "text": "we don't take this jump we will call the",
    "start": "123659",
    "end": "126360"
  },
  {
    "text": "stack check fail function which means",
    "start": "126360",
    "end": "128340"
  },
  {
    "text": "our Canary has died and our program is",
    "start": "128340",
    "end": "130679"
  },
  {
    "text": "full of carbon monoxide pretty cool so",
    "start": "130679",
    "end": "133379"
  },
  {
    "text": "what does the canary actually look like",
    "start": "133379",
    "end": "134940"
  },
  {
    "text": "what does it do how does it smell how",
    "start": "134940",
    "end": "137099"
  },
  {
    "text": "does it taste here I've ran the program",
    "start": "137099",
    "end": "138840"
  },
  {
    "text": "three times each time I've added a",
    "start": "138840",
    "end": "141420"
  },
  {
    "text": "little snippet of code to show you the",
    "start": "141420",
    "end": "143700"
  },
  {
    "text": "secret Canary it's not actually a secret",
    "start": "143700",
    "end": "145379"
  },
  {
    "text": "you know you could check it out yourself",
    "start": "145379",
    "end": "146640"
  },
  {
    "text": "the kernel doesn't care if you know the",
    "start": "146640",
    "end": "148680"
  },
  {
    "text": "reason for that is that every time you",
    "start": "148680",
    "end": "150660"
  },
  {
    "text": "run a program you get a new canary from",
    "start": "150660",
    "end": "152940"
  },
  {
    "text": "the kernel and just C's and K's in there",
    "start": "152940",
    "end": "154680"
  },
  {
    "text": "notice a few things one each time it",
    "start": "154680",
    "end": "156540"
  },
  {
    "text": "runs it is random and unique pretty cool",
    "start": "156540",
    "end": "158760"
  },
  {
    "text": "extremely hard to guess nigh impossible",
    "start": "158760",
    "end": "161400"
  },
  {
    "text": "unless your RNG is bad and you'll notice",
    "start": "161400",
    "end": "163319"
  },
  {
    "text": "this last little character here is zero",
    "start": "163319",
    "end": "165660"
  },
  {
    "text": "why is that why would a random value a",
    "start": "165660",
    "end": "168120"
  },
  {
    "text": "value that's supposed to be",
    "start": "168120",
    "end": "168900"
  },
  {
    "text": "non-predictable have a predictable value",
    "start": "168900",
    "end": "171540"
  },
  {
    "text": "a lot of operations that lead to a",
    "start": "171540",
    "end": "173700"
  },
  {
    "text": "buffer overflow are typically related to",
    "start": "173700",
    "end": "175739"
  },
  {
    "text": "Strings and how are strings terminated",
    "start": "175739",
    "end": "177660"
  },
  {
    "text": "they're terminated with a null byte",
    "start": "177660",
    "end": "179340"
  },
  {
    "text": "which means if you filled up a string",
    "start": "179340",
    "end": "181260"
  },
  {
    "text": "buffer right up to the end of a canary",
    "start": "181260",
    "end": "183239"
  },
  {
    "text": "and didn't have a zero as the least",
    "start": "183239",
    "end": "185400"
  },
  {
    "text": "significant bit you could actually just",
    "start": "185400",
    "end": "187140"
  },
  {
    "text": "print out your string and the canary",
    "start": "187140",
    "end": "189120"
  },
  {
    "text": "would be revealed and again that's",
    "start": "189120",
    "end": "190440"
  },
  {
    "text": "supposed to be a secret so by putting a",
    "start": "190440",
    "end": "193200"
  },
  {
    "text": "zero at the front of the canary it",
    "start": "193200",
    "end": "195060"
  },
  {
    "text": "basically gets rid of the possibility of",
    "start": "195060",
    "end": "197040"
  },
  {
    "text": "you being able to leak out the canary",
    "start": "197040",
    "end": "198720"
  },
  {
    "text": "via a string operation there may be",
    "start": "198720",
    "end": "200879"
  },
  {
    "text": "other ways to leak it maybe with a hard",
    "start": "200879",
    "end": "202860"
  },
  {
    "text": "read or a hard memory copy now I know",
    "start": "202860",
    "end": "205260"
  },
  {
    "text": "hold on this sounds crazy I know hold on",
    "start": "205260",
    "end": "206879"
  },
  {
    "text": "hear me out hear me out let's disable",
    "start": "206879",
    "end": "209760"
  },
  {
    "text": "the stack Canary let's try it let's see",
    "start": "209760",
    "end": "211739"
  },
  {
    "text": "what happens now we gotta try some new",
    "start": "211739",
    "end": "213540"
  },
  {
    "text": "things in life and this is going to be",
    "start": "213540",
    "end": "214980"
  },
  {
    "text": "one of them disable the stacking area",
    "start": "214980",
    "end": "216120"
  },
  {
    "text": "we're gonna do GCC tech oh all the",
    "start": "216120",
    "end": "218159"
  },
  {
    "text": "regular stuff canary.c we're gonna say",
    "start": "218159",
    "end": "220260"
  },
  {
    "text": "attack f for function or feature I don't",
    "start": "220260",
    "end": "223200"
  },
  {
    "text": "know what the [ __ ] it stands for but",
    "start": "223200",
    "end": "224400"
  },
  {
    "text": "attack F no stack protector boom so now",
    "start": "224400",
    "end": "229200"
  },
  {
    "text": "the binary is there and if we run check",
    "start": "229200",
    "end": "231659"
  },
  {
    "text": "SEC on it again you'll see that there is",
    "start": "231659",
    "end": "234480"
  },
  {
    "text": "no Canary found so what does that mean",
    "start": "234480",
    "end": "236819"
  },
  {
    "text": "for us what does that change about our",
    "start": "236819",
    "end": "238680"
  },
  {
    "text": "functionality remember before we ran the",
    "start": "238680",
    "end": "241080"
  },
  {
    "text": "program we ran it on the file instead of",
    "start": "241080",
    "end": "244080"
  },
  {
    "text": "it being a stacked check failed buffer",
    "start": "244080",
    "end": "246780"
  },
  {
    "text": "overflow detected we got a segmentation",
    "start": "246780",
    "end": "249360"
  },
  {
    "text": "fault core dumped that is a very",
    "start": "249360",
    "end": "251879"
  },
  {
    "text": "different error and the most important",
    "start": "251879",
    "end": "253799"
  },
  {
    "text": "reason that it's different is because of",
    "start": "253799",
    "end": "255720"
  },
  {
    "text": "what happened to our program in Wyatt",
    "start": "255720",
    "end": "257459"
  },
  {
    "text": "craft if we do we can run this in GDB",
    "start": "257459",
    "end": "259440"
  },
  {
    "text": "real quick and just see what's going on",
    "start": "259440",
    "end": "260820"
  },
  {
    "text": "so we'll GDB the canary program and then",
    "start": "260820",
    "end": "263520"
  },
  {
    "text": "we'll say that we're going to run it",
    "start": "263520",
    "end": "265380"
  },
  {
    "text": "with the the file as the argument and",
    "start": "265380",
    "end": "268800"
  },
  {
    "text": "then we're going to see that our program",
    "start": "268800",
    "end": "270840"
  },
  {
    "text": "crashed trying to execute instructions",
    "start": "270840",
    "end": "273780"
  },
  {
    "text": "at hex 414141",
    "start": "273780",
    "end": "277160"
  },
  {
    "text": "4141414141414 there's a reason why this",
    "start": "277160",
    "end": "279360"
  },
  {
    "text": "is extremely dangerous now if you're not",
    "start": "279360",
    "end": "281220"
  },
  {
    "text": "sure what these four ones mean let's go",
    "start": "281220",
    "end": "283740"
  },
  {
    "text": "ahead and Cat our the file all of these",
    "start": "283740",
    "end": "287040"
  },
  {
    "text": "A's are hex four one if you don't",
    "start": "287040",
    "end": "289320"
  },
  {
    "text": "believe me we can do in Python 3s we can",
    "start": "289320",
    "end": "292080"
  },
  {
    "text": "do bytes Dot from hex four one four one",
    "start": "292080",
    "end": "296100"
  },
  {
    "text": "four one four one",
    "start": "296100",
    "end": "297600"
  },
  {
    "text": "quad a boom by not putting a stack",
    "start": "297600",
    "end": "300720"
  },
  {
    "text": "protector or a snack canary on our",
    "start": "300720",
    "end": "303000"
  },
  {
    "text": "function we gave the file the ability to",
    "start": "303000",
    "end": "306060"
  },
  {
    "text": "determine where the program returned to",
    "start": "306060",
    "end": "308820"
  },
  {
    "text": "and ultimately what instructions got ran",
    "start": "308820",
    "end": "311400"
  },
  {
    "text": "by the program this is the classic",
    "start": "311400",
    "end": "313560"
  },
  {
    "text": "buffer overflow scenario for a hacker",
    "start": "313560",
    "end": "316020"
  },
  {
    "text": "that wants to do evil stuff so in",
    "start": "316020",
    "end": "319020"
  },
  {
    "text": "summary don't disable you damn Canary",
    "start": "319020",
    "end": "321540"
  },
  {
    "text": "now let's Circle back to all you damn",
    "start": "321540",
    "end": "322860"
  },
  {
    "text": "heat people okay I know there are some",
    "start": "322860",
    "end": "324300"
  },
  {
    "text": "of you probably the minute you saw this",
    "start": "324300",
    "end": "325500"
  },
  {
    "text": "video you're like oh my God just",
    "start": "325500",
    "end": "327120"
  },
  {
    "text": "allocated in the Heap all right fine",
    "start": "327120",
    "end": "328979"
  },
  {
    "text": "fine you want to play that game okay I",
    "start": "328979",
    "end": "330539"
  },
  {
    "text": "made the data buffer a pointer into the",
    "start": "330539",
    "end": "332639"
  },
  {
    "text": "Heap where we call Malik X100 you had a",
    "start": "332639",
    "end": "335280"
  },
  {
    "text": "notation to make sure that we actually",
    "start": "335280",
    "end": "336660"
  },
  {
    "text": "get a variable back from Malik and then",
    "start": "336660",
    "end": "339479"
  },
  {
    "text": "we're going to do is we're just gonna",
    "start": "339479",
    "end": "340380"
  },
  {
    "text": "load that file same thing and we're",
    "start": "340380",
    "end": "341759"
  },
  {
    "text": "gonna also read in double the size of",
    "start": "341759",
    "end": "344820"
  },
  {
    "text": "the buffer again you can buffer overflow",
    "start": "344820",
    "end": "347039"
  },
  {
    "text": "on the stack you can buffer overflow on",
    "start": "347039",
    "end": "349500"
  },
  {
    "text": "the Heap and I'm not even going to",
    "start": "349500",
    "end": "350880"
  },
  {
    "text": "disable it I'm going to use the default",
    "start": "350880",
    "end": "352139"
  },
  {
    "text": "flags on the compiler boom we do get one",
    "start": "352139",
    "end": "354660"
  },
  {
    "text": "little error about not including",
    "start": "354660",
    "end": "355740"
  },
  {
    "text": "standard lib for Malik but that's not a",
    "start": "355740",
    "end": "357360"
  },
  {
    "text": "big deal get rid of that run the canary",
    "start": "357360",
    "end": "359280"
  },
  {
    "text": "on the file why are there not canaries",
    "start": "359280",
    "end": "363060"
  },
  {
    "text": "in the Heap I'm looking at you libc",
    "start": "363060",
    "end": "365280"
  },
  {
    "text": "maintainers obviously I'm joking I'm not",
    "start": "365280",
    "end": "367080"
  },
  {
    "text": "making any real assertion that any kind",
    "start": "367080",
    "end": "369000"
  },
  {
    "text": "of memory is more safe than the other",
    "start": "369000",
    "end": "370440"
  },
  {
    "text": "obviously the Heap contains data the",
    "start": "370440",
    "end": "373080"
  },
  {
    "text": "stack contains control flow information",
    "start": "373080",
    "end": "374639"
  },
  {
    "text": "so completely different and before you",
    "start": "374639",
    "end": "376320"
  },
  {
    "text": "go I want to talk about a long time",
    "start": "376320",
    "end": "377940"
  },
  {
    "text": "supporter of this channel that allows me",
    "start": "377940",
    "end": "379800"
  },
  {
    "text": "to keep making videos like this",
    "start": "379800",
    "end": "381240"
  },
  {
    "text": "improving the equipment and keeping the",
    "start": "381240",
    "end": "383340"
  },
  {
    "text": "low level learning going this video is",
    "start": "383340",
    "end": "385500"
  },
  {
    "text": "sponsored by brilliant.org the best way",
    "start": "385500",
    "end": "387419"
  },
  {
    "text": "to learn something thing is to get your",
    "start": "387419",
    "end": "389280"
  },
  {
    "text": "hands dirty and try it out and",
    "start": "389280",
    "end": "391139"
  },
  {
    "text": "brilliant.org knows this their Hands-On",
    "start": "391139",
    "end": "393360"
  },
  {
    "text": "visual approach is an effective and easy",
    "start": "393360",
    "end": "395520"
  },
  {
    "text": "way to make daily learning a habit in",
    "start": "395520",
    "end": "398039"
  },
  {
    "text": "your life they have thousands of lessons",
    "start": "398039",
    "end": "399960"
  },
  {
    "text": "that go from foundational to Advanced",
    "start": "399960",
    "end": "402120"
  },
  {
    "text": "and topics like math AI computer science",
    "start": "402120",
    "end": "404759"
  },
  {
    "text": "and neural networks instead of just",
    "start": "404759",
    "end": "406560"
  },
  {
    "text": "staring at presentations or slides all",
    "start": "406560",
    "end": "409259"
  },
  {
    "text": "day you'll learn something new and then",
    "start": "409259",
    "end": "411000"
  },
  {
    "text": "immediately be able to go in and try it",
    "start": "411000",
    "end": "413220"
  },
  {
    "text": "for yourself and the best part is you",
    "start": "413220",
    "end": "414900"
  },
  {
    "text": "can try brilliant for free right now if",
    "start": "414900",
    "end": "417000"
  },
  {
    "text": "you use my link brilliant.org level",
    "start": "417000",
    "end": "419039"
  },
  {
    "text": "learning you get a free 30-day trial and",
    "start": "419039",
    "end": "422220"
  },
  {
    "text": "the first 200 of you to sign up get 20",
    "start": "422220",
    "end": "424380"
  },
  {
    "text": "off an annual subscription thank you",
    "start": "424380",
    "end": "426900"
  },
  {
    "text": "again brilliant for sponsoring this",
    "start": "426900",
    "end": "428039"
  },
  {
    "text": "video",
    "start": "428039",
    "end": "430100"
  }
]