[
  {
    "start": "0",
    "end": "18000"
  },
  {
    "text": "this little bash one liner can crash",
    "start": "399",
    "end": "2000"
  },
  {
    "text": "your computer yep i'm not kidding 14",
    "start": "2000",
    "end": "4400"
  },
  {
    "text": "characters and boom you need to restart",
    "start": "4400",
    "end": "6399"
  },
  {
    "text": "your system so what is the script doing",
    "start": "6399",
    "end": "9040"
  },
  {
    "text": "how does it work and how can we make it",
    "start": "9040",
    "end": "10880"
  },
  {
    "text": "happen in assembly all this today and",
    "start": "10880",
    "end": "13280"
  },
  {
    "text": "more on the level learning security",
    "start": "13280",
    "end": "14960"
  },
  {
    "text": "edition",
    "start": "14960",
    "end": "17920"
  },
  {
    "start": "18000",
    "end": "38000"
  },
  {
    "text": "the code here is referred to as a fork",
    "start": "18560",
    "end": "20800"
  },
  {
    "text": "bomb a fork bomb is a program that when",
    "start": "20800",
    "end": "22880"
  },
  {
    "text": "ran creates two copies of itself every",
    "start": "22880",
    "end": "25599"
  },
  {
    "text": "copy creates two more copies and this",
    "start": "25599",
    "end": "28000"
  },
  {
    "text": "copying happens infinitely it eats up",
    "start": "28000",
    "end": "30480"
  },
  {
    "text": "all of your ram and puts your computer",
    "start": "30480",
    "end": "31840"
  },
  {
    "text": "into an unusable state no more memory",
    "start": "31840",
    "end": "34320"
  },
  {
    "text": "means no more processes and no more",
    "start": "34320",
    "end": "35920"
  },
  {
    "text": "processors means no more computer",
    "start": "35920",
    "end": "38320"
  },
  {
    "start": "38000",
    "end": "77000"
  },
  {
    "text": "so how does a fork bomb work",
    "start": "38320",
    "end": "40320"
  },
  {
    "text": "the first three characters here define a",
    "start": "40320",
    "end": "42079"
  },
  {
    "text": "function with the name colon and then",
    "start": "42079",
    "end": "44160"
  },
  {
    "text": "next we define the contents of that",
    "start": "44160",
    "end": "46239"
  },
  {
    "text": "colon function",
    "start": "46239",
    "end": "47600"
  },
  {
    "text": "inside of that function we call the",
    "start": "47600",
    "end": "49760"
  },
  {
    "text": "colon function again creating function",
    "start": "49760",
    "end": "52239"
  },
  {
    "text": "copy number one",
    "start": "52239",
    "end": "54000"
  },
  {
    "text": "copy number two is created by piping the",
    "start": "54000",
    "end": "56399"
  },
  {
    "text": "results of copy one into another call of",
    "start": "56399",
    "end": "59359"
  },
  {
    "text": "the colon function which is backgrounded",
    "start": "59359",
    "end": "61199"
  },
  {
    "text": "by the ampersand by creating two copies",
    "start": "61199",
    "end": "63840"
  },
  {
    "text": "of this function we've forked and this",
    "start": "63840",
    "end": "66000"
  },
  {
    "text": "forking happens forever as every call is",
    "start": "66000",
    "end": "68640"
  },
  {
    "text": "infinitely recursive with no backstop",
    "start": "68640",
    "end": "71680"
  },
  {
    "text": "we close the colon function off end the",
    "start": "71680",
    "end": "73439"
  },
  {
    "text": "line with a semicolon and then start the",
    "start": "73439",
    "end": "75360"
  },
  {
    "text": "chaos by calling colon",
    "start": "75360",
    "end": "77439"
  },
  {
    "start": "77000",
    "end": "137000"
  },
  {
    "text": "all right guys and to show the fork bomb",
    "start": "77439",
    "end": "78960"
  },
  {
    "text": "in action i've got it spooled up ready",
    "start": "78960",
    "end": "80640"
  },
  {
    "text": "to roll here on the left i have top",
    "start": "80640",
    "end": "82400"
  },
  {
    "text": "running you have your percent cpu",
    "start": "82400",
    "end": "83840"
  },
  {
    "text": "utilization 15 doing user stuff five",
    "start": "83840",
    "end": "86400"
  },
  {
    "text": "percent doing system stuff and then",
    "start": "86400",
    "end": "87759"
  },
  {
    "text": "about ninety five percent of the time",
    "start": "87759",
    "end": "89200"
  },
  {
    "text": "doing idle stuff so before i actually",
    "start": "89200",
    "end": "91759"
  },
  {
    "text": "run this read the disclaimer two things",
    "start": "91759",
    "end": "93759"
  },
  {
    "text": "one do not run this if you don't plan to",
    "start": "93759",
    "end": "96159"
  },
  {
    "text": "crash your computer this will take down",
    "start": "96159",
    "end": "98000"
  },
  {
    "text": "your computer so be careful and then two",
    "start": "98000",
    "end": "100560"
  },
  {
    "text": "only do this on a computer that is yours",
    "start": "100560",
    "end": "102799"
  },
  {
    "text": "and yours alone don't do it on your",
    "start": "102799",
    "end": "104399"
  },
  {
    "text": "friend's computer your mom's computer",
    "start": "104399",
    "end": "105840"
  },
  {
    "text": "whatever alright so here we go",
    "start": "105840",
    "end": "109438"
  },
  {
    "text": "and you can see my computer is not very",
    "start": "111840",
    "end": "114000"
  },
  {
    "text": "happy taking a long time to do a lot of",
    "start": "114000",
    "end": "115680"
  },
  {
    "text": "stuff uh 88 in system time doing context",
    "start": "115680",
    "end": "119119"
  },
  {
    "text": "switching here this will run forever and",
    "start": "119119",
    "end": "121119"
  },
  {
    "text": "i could still do stuff actually but if",
    "start": "121119",
    "end": "122960"
  },
  {
    "text": "you can tell like",
    "start": "122960",
    "end": "124560"
  },
  {
    "text": "actually rendering the results of this",
    "start": "124560",
    "end": "126719"
  },
  {
    "text": "function that doesn't exist is now like",
    "start": "126719",
    "end": "128959"
  },
  {
    "text": "i can't use my computer so yes resource",
    "start": "128959",
    "end": "131440"
  },
  {
    "text": "is temporarily unavailable um i am out",
    "start": "131440",
    "end": "133920"
  },
  {
    "text": "of process memory so this will go on",
    "start": "133920",
    "end": "135599"
  },
  {
    "text": "forever okay guys and as promised i",
    "start": "135599",
    "end": "137920"
  },
  {
    "start": "137000",
    "end": "188000"
  },
  {
    "text": "think bash is a little too easy so to",
    "start": "137920",
    "end": "139520"
  },
  {
    "text": "wrap this video up we're gonna show you",
    "start": "139520",
    "end": "140959"
  },
  {
    "text": "how to do the fork bomb in assembly so",
    "start": "140959",
    "end": "143599"
  },
  {
    "text": "if you haven't seen my assembly",
    "start": "143599",
    "end": "144560"
  },
  {
    "text": "tutorials in the past go check them out",
    "start": "144560",
    "end": "146000"
  },
  {
    "text": "but we'll get started just like we do in",
    "start": "146000",
    "end": "147360"
  },
  {
    "text": "all those videos uh step one is we",
    "start": "147360",
    "end": "149360"
  },
  {
    "text": "expose the start symbol that's where our",
    "start": "149360",
    "end": "151120"
  },
  {
    "text": "program is going to enter uh the goal of",
    "start": "151120",
    "end": "153280"
  },
  {
    "text": "this program is to do a fork bombs to do",
    "start": "153280",
    "end": "155519"
  },
  {
    "text": "a fork bomb we have to actually call the",
    "start": "155519",
    "end": "157120"
  },
  {
    "text": "fork syscall to get there we invoke",
    "start": "157120",
    "end": "159120"
  },
  {
    "text": "syscall number 57 or hex three nine uh",
    "start": "159120",
    "end": "162080"
  },
  {
    "text": "we do that by moving the literal",
    "start": "162080",
    "end": "165599"
  },
  {
    "text": "uh hex three nine into the register rax",
    "start": "165599",
    "end": "168959"
  },
  {
    "text": "and then calling syscall and once this",
    "start": "168959",
    "end": "170879"
  },
  {
    "text": "call gets ran uh there will be two",
    "start": "170879",
    "end": "172720"
  },
  {
    "text": "copies of this you know process open and",
    "start": "172720",
    "end": "175440"
  },
  {
    "text": "we will have that process set jump to",
    "start": "175440",
    "end": "177760"
  },
  {
    "text": "start again and do this infinitely that",
    "start": "177760",
    "end": "179599"
  },
  {
    "text": "will do the same thing that our bash one",
    "start": "179599",
    "end": "181519"
  },
  {
    "text": "liner did so we'll go ahead and uh start",
    "start": "181519",
    "end": "183519"
  },
  {
    "text": "this real quick and",
    "start": "183519",
    "end": "184910"
  },
  {
    "text": "[Music]",
    "start": "184910",
    "end": "186080"
  },
  {
    "text": "my computer has now completely locked up",
    "start": "186080",
    "end": "188319"
  },
  {
    "start": "188000",
    "end": "203000"
  },
  {
    "text": "i hope you guys enjoyed that one if you",
    "start": "188319",
    "end": "189680"
  },
  {
    "text": "did make sure hit like hit subscribe and",
    "start": "189680",
    "end": "191360"
  },
  {
    "text": "we'll see you in the next video i don't",
    "start": "191360",
    "end": "193519"
  },
  {
    "text": "like recursion at all go watch this",
    "start": "193519",
    "end": "196159"
  },
  {
    "text": "video here we'll see you guys there bye",
    "start": "196159",
    "end": "201000"
  }
]