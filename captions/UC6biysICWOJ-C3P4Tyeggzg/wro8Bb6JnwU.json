[
  {
    "start": "0",
    "end": "20000"
  },
  {
    "text": "if you didn't already think that",
    "start": "880",
    "end": "2320"
  },
  {
    "text": "pointers and c were confusing well then",
    "start": "2320",
    "end": "4160"
  },
  {
    "text": "boy do i have a treat for you and don't",
    "start": "4160",
    "end": "6080"
  },
  {
    "text": "worry i'm going to explain everything",
    "start": "6080",
    "end": "7839"
  },
  {
    "text": "and it may end up making your",
    "start": "7839",
    "end": "9040"
  },
  {
    "text": "programming career a little easier",
    "start": "9040",
    "end": "11519"
  },
  {
    "text": "c plus a language like c but designed",
    "start": "11519",
    "end": "14639"
  },
  {
    "text": "for people that like to spend hours",
    "start": "14639",
    "end": "16000"
  },
  {
    "text": "debugging spaghetti code but object",
    "start": "16000",
    "end": "18720"
  },
  {
    "text": "oriented uses references in place of",
    "start": "18720",
    "end": "21680"
  },
  {
    "start": "20000",
    "end": "44000"
  },
  {
    "text": "pointers in certain areas",
    "start": "21680",
    "end": "23600"
  },
  {
    "text": "references are like pointers but there",
    "start": "23600",
    "end": "25840"
  },
  {
    "text": "are some confusing nuances that get",
    "start": "25840",
    "end": "27519"
  },
  {
    "text": "people in trouble so in this video we'll",
    "start": "27519",
    "end": "29599"
  },
  {
    "text": "be discussing what a reference is how",
    "start": "29599",
    "end": "32078"
  },
  {
    "text": "they are different from pointers and",
    "start": "32079",
    "end": "33760"
  },
  {
    "text": "what they are good at and how they work",
    "start": "33760",
    "end": "36000"
  },
  {
    "text": "under the hood",
    "start": "36000",
    "end": "37200"
  },
  {
    "text": "if you're new here stick around hit that",
    "start": "37200",
    "end": "38719"
  },
  {
    "text": "sub button i put out new videos every",
    "start": "38719",
    "end": "40640"
  },
  {
    "text": "week on programming topics like this and",
    "start": "40640",
    "end": "42719"
  },
  {
    "text": "much much more so what exactly is a",
    "start": "42719",
    "end": "46079"
  },
  {
    "text": "reference what does it mean to reference",
    "start": "46079",
    "end": "48480"
  },
  {
    "text": "a variable in c plus a reference can be",
    "start": "48480",
    "end": "51440"
  },
  {
    "text": "thought of like an alias or another name",
    "start": "51440",
    "end": "54000"
  },
  {
    "text": "for a variable that already exists to",
    "start": "54000",
    "end": "56239"
  },
  {
    "text": "make a variable that is a reference in c",
    "start": "56239",
    "end": "58000"
  },
  {
    "text": "plus plus you use the ampersand in the",
    "start": "58000",
    "end": "60640"
  },
  {
    "text": "variable definition and set it equal to",
    "start": "60640",
    "end": "62960"
  },
  {
    "text": "the variable you want it to reference so",
    "start": "62960",
    "end": "65198"
  },
  {
    "text": "here for example i create an integer i",
    "start": "65199",
    "end": "68479"
  },
  {
    "text": "set it to a value and then a reference",
    "start": "68479",
    "end": "70960"
  },
  {
    "text": "variable ri which at definition is set",
    "start": "70960",
    "end": "74400"
  },
  {
    "text": "up to be a reference to the variable i",
    "start": "74400",
    "end": "77759"
  },
  {
    "text": "now whenever i change the value of ri",
    "start": "77759",
    "end": "81040"
  },
  {
    "text": "the value of i is also updated",
    "start": "81040",
    "end": "84799"
  },
  {
    "text": "i can also pass the variable i by",
    "start": "84799",
    "end": "87759"
  },
  {
    "text": "reference by passing ri in its place so",
    "start": "87759",
    "end": "91520"
  },
  {
    "text": "here i create a function that takes an",
    "start": "91520",
    "end": "93520"
  },
  {
    "text": "integer reference as input the reference",
    "start": "93520",
    "end": "96400"
  },
  {
    "text": "variable is updated which then updates",
    "start": "96400",
    "end": "98799"
  },
  {
    "text": "the original variable that it displaced",
    "start": "98799",
    "end": "100960"
  },
  {
    "text": "is out of scope of that function",
    "start": "100960",
    "end": "103759"
  },
  {
    "text": "if you print the value of the reference",
    "start": "103759",
    "end": "105840"
  },
  {
    "text": "you actually get the value of the",
    "start": "105840",
    "end": "107759"
  },
  {
    "text": "original variable",
    "start": "107759",
    "end": "109360"
  },
  {
    "text": "here we print the i variable and then",
    "start": "109360",
    "end": "111360"
  },
  {
    "text": "the reference before and after the call",
    "start": "111360",
    "end": "113200"
  },
  {
    "text": "to that function",
    "start": "113200",
    "end": "114399"
  },
  {
    "text": "both values for i are presented in those",
    "start": "114399",
    "end": "116880"
  },
  {
    "text": "cases",
    "start": "116880",
    "end": "118479"
  },
  {
    "start": "118000",
    "end": "198000"
  },
  {
    "text": "you may be thinking this sounds exactly",
    "start": "118479",
    "end": "120960"
  },
  {
    "text": "like a pointer how are references",
    "start": "120960",
    "end": "123280"
  },
  {
    "text": "different than pointers and that's",
    "start": "123280",
    "end": "125040"
  },
  {
    "text": "exactly what i thought when i first",
    "start": "125040",
    "end": "127200"
  },
  {
    "text": "learned about references so there are",
    "start": "127200",
    "end": "129200"
  },
  {
    "text": "some unique differences though that you",
    "start": "129200",
    "end": "130560"
  },
  {
    "text": "should be aware of number one references",
    "start": "130560",
    "end": "133040"
  },
  {
    "text": "cannot be null a reference must always",
    "start": "133040",
    "end": "135520"
  },
  {
    "text": "be tied to a variable that exists",
    "start": "135520",
    "end": "138239"
  },
  {
    "text": "number two you cannot change the",
    "start": "138239",
    "end": "140879"
  },
  {
    "text": "variable that is referenced by a",
    "start": "140879",
    "end": "142879"
  },
  {
    "text": "reference once the reference is",
    "start": "142879",
    "end": "144800"
  },
  {
    "text": "associated to a variable it is that way",
    "start": "144800",
    "end": "147200"
  },
  {
    "text": "forever",
    "start": "147200",
    "end": "148239"
  },
  {
    "text": "number three you cannot do math on",
    "start": "148239",
    "end": "151120"
  },
  {
    "text": "references a reference cannot be indexed",
    "start": "151120",
    "end": "154000"
  },
  {
    "text": "added to subtracted from etc like a",
    "start": "154000",
    "end": "156879"
  },
  {
    "text": "pointer can",
    "start": "156879",
    "end": "158160"
  },
  {
    "text": "and then lastly number four you can have",
    "start": "158160",
    "end": "160560"
  },
  {
    "text": "pointers to pointers you cannot have",
    "start": "160560",
    "end": "163040"
  },
  {
    "text": "references to references so the question",
    "start": "163040",
    "end": "165760"
  },
  {
    "text": "is then what are the point what what do",
    "start": "165760",
    "end": "167599"
  },
  {
    "text": "you do with a reference the pro of using",
    "start": "167599",
    "end": "170000"
  },
  {
    "text": "a reference is that there's less",
    "start": "170000",
    "end": "171599"
  },
  {
    "text": "overhead to use them once they're",
    "start": "171599",
    "end": "173599"
  },
  {
    "text": "properly set up in c for example using",
    "start": "173599",
    "end": "176239"
  },
  {
    "text": "pointers to change the value of a",
    "start": "176239",
    "end": "178159"
  },
  {
    "text": "variable through a pointer i have to use",
    "start": "178159",
    "end": "180159"
  },
  {
    "text": "this syntax here and what this reads out",
    "start": "180159",
    "end": "182319"
  },
  {
    "text": "to is the thing pointed to by px is 5.",
    "start": "182319",
    "end": "186400"
  },
  {
    "text": "with references i don't have to even",
    "start": "186400",
    "end": "188480"
  },
  {
    "text": "think about it i can just update that",
    "start": "188480",
    "end": "190400"
  },
  {
    "text": "variable through an assignment and the",
    "start": "190400",
    "end": "192080"
  },
  {
    "text": "compiler knows what i mean so here ri is",
    "start": "192080",
    "end": "195519"
  },
  {
    "text": "5 which updates i without me thinking",
    "start": "195519",
    "end": "198159"
  },
  {
    "start": "198000",
    "end": "343000"
  },
  {
    "text": "about it",
    "start": "198159",
    "end": "199200"
  },
  {
    "text": "when i realized that references and",
    "start": "199200",
    "end": "200720"
  },
  {
    "text": "pointers were actually in the same",
    "start": "200720",
    "end": "202159"
  },
  {
    "text": "family they kind of did the same",
    "start": "202159",
    "end": "203360"
  },
  {
    "text": "function my next question was how do",
    "start": "203360",
    "end": "205040"
  },
  {
    "text": "they work under the hood it actually",
    "start": "205040",
    "end": "207040"
  },
  {
    "text": "turns out hey guess what c plus plus",
    "start": "207040",
    "end": "209120"
  },
  {
    "text": "people you're not that special all a",
    "start": "209120",
    "end": "211440"
  },
  {
    "text": "reference is under the hood is a pointer",
    "start": "211440",
    "end": "214640"
  },
  {
    "text": "and let me show you here",
    "start": "214640",
    "end": "216239"
  },
  {
    "text": "all right guys so what i have brewing",
    "start": "216239",
    "end": "217760"
  },
  {
    "text": "here is a simple little program i want",
    "start": "217760",
    "end": "219360"
  },
  {
    "text": "to kind of show you the difference",
    "start": "219360",
    "end": "220319"
  },
  {
    "text": "between a pointer implementation of",
    "start": "220319",
    "end": "222640"
  },
  {
    "text": "updating a variable and the reference",
    "start": "222640",
    "end": "225040"
  },
  {
    "text": "implementation so here we have an intex",
    "start": "225040",
    "end": "227519"
  },
  {
    "text": "i set a pointer equal to the address of",
    "start": "227519",
    "end": "229840"
  },
  {
    "text": "x i also create a reference to x and",
    "start": "229840",
    "end": "232640"
  },
  {
    "text": "then using the pointer implementation",
    "start": "232640",
    "end": "235120"
  },
  {
    "text": "and the reference implementation i",
    "start": "235120",
    "end": "236879"
  },
  {
    "text": "increment them by one and then i print",
    "start": "236879",
    "end": "238959"
  },
  {
    "text": "it right so if our program is sane and",
    "start": "238959",
    "end": "240640"
  },
  {
    "text": "it works it should yield three which it",
    "start": "240640",
    "end": "242560"
  },
  {
    "text": "does so",
    "start": "242560",
    "end": "243920"
  },
  {
    "text": "we're gonna break it down we're gonna",
    "start": "243920",
    "end": "245519"
  },
  {
    "text": "use object dump to disassemble this",
    "start": "245519",
    "end": "247599"
  },
  {
    "text": "program and i wanna show you what's",
    "start": "247599",
    "end": "249040"
  },
  {
    "text": "going on under the hood it's actually",
    "start": "249040",
    "end": "250560"
  },
  {
    "text": "pretty cool so we go to main here um if",
    "start": "250560",
    "end": "253439"
  },
  {
    "text": "you're not familiar with assembly a",
    "start": "253439",
    "end": "255040"
  },
  {
    "text": "watch my other videos hit subscribe",
    "start": "255040",
    "end": "258239"
  },
  {
    "text": "but after that um in in this program",
    "start": "258239",
    "end": "261759"
  },
  {
    "text": "essentially what we have is a couple",
    "start": "261759",
    "end": "262960"
  },
  {
    "text": "blocks of code happening so the first",
    "start": "262960",
    "end": "264560"
  },
  {
    "text": "part here is this is the program setting",
    "start": "264560",
    "end": "267280"
  },
  {
    "text": "our variable x right it's just the",
    "start": "267280",
    "end": "269040"
  },
  {
    "text": "number one so one goes to the one c slot",
    "start": "269040",
    "end": "271919"
  },
  {
    "text": "right",
    "start": "271919",
    "end": "272720"
  },
  {
    "text": "and then after that it loads the",
    "start": "272720",
    "end": "274800"
  },
  {
    "text": "effective address of one c puts it into",
    "start": "274800",
    "end": "277759"
  },
  {
    "text": "rax and then stores it onto the stack so",
    "start": "277759",
    "end": "280400"
  },
  {
    "text": "that's actually going to be our px",
    "start": "280400",
    "end": "282400"
  },
  {
    "text": "that's our pointer 2x if you look",
    "start": "282400",
    "end": "284880"
  },
  {
    "text": "immediately below that it actually runs",
    "start": "284880",
    "end": "287199"
  },
  {
    "text": "the exact same code it loads the address",
    "start": "287199",
    "end": "290160"
  },
  {
    "text": "of 1c into rax and then puts that on the",
    "start": "290160",
    "end": "293199"
  },
  {
    "text": "stack that is our rx",
    "start": "293199",
    "end": "295919"
  },
  {
    "text": "implementation so what that means is",
    "start": "295919",
    "end": "298479"
  },
  {
    "text": "that a reference is literally just a",
    "start": "298479",
    "end": "301680"
  },
  {
    "text": "pointer",
    "start": "301680",
    "end": "302960"
  },
  {
    "text": "so again what is the difference between",
    "start": "302960",
    "end": "305280"
  },
  {
    "text": "a pointer and a reference all that's",
    "start": "305280",
    "end": "306880"
  },
  {
    "text": "happening under the hood is that there",
    "start": "306880",
    "end": "309039"
  },
  {
    "text": "is a pointer that references the",
    "start": "309039",
    "end": "310479"
  },
  {
    "text": "variable all of the protections that go",
    "start": "310479",
    "end": "313520"
  },
  {
    "text": "on are happening at the compiler level",
    "start": "313520",
    "end": "316080"
  },
  {
    "text": "where the compiler is aware that you",
    "start": "316080",
    "end": "318000"
  },
  {
    "text": "can't change a reference and the",
    "start": "318000",
    "end": "319440"
  },
  {
    "text": "compiler is aware of how to use the",
    "start": "319440",
    "end": "321840"
  },
  {
    "text": "reference in this manner so i think",
    "start": "321840",
    "end": "324240"
  },
  {
    "text": "that's pretty cool references or just",
    "start": "324240",
    "end": "326240"
  },
  {
    "text": "spicy pointers i wanted to show you guys",
    "start": "326240",
    "end": "328000"
  },
  {
    "text": "that before we uh wrap this video up",
    "start": "328000",
    "end": "329919"
  },
  {
    "text": "alright guys that's all for now i really",
    "start": "329919",
    "end": "331199"
  },
  {
    "text": "appreciate it thanks for watching if",
    "start": "331199",
    "end": "332400"
  },
  {
    "text": "you're new here hit that sub button and",
    "start": "332400",
    "end": "334000"
  },
  {
    "text": "then go check out one of these videos i",
    "start": "334000",
    "end": "335280"
  },
  {
    "text": "got one on pointers it's pretty sweet",
    "start": "335280",
    "end": "337360"
  },
  {
    "text": "and then also i hacked my coffee machine",
    "start": "337360",
    "end": "339440"
  },
  {
    "text": "see how that went in this video down",
    "start": "339440",
    "end": "340880"
  },
  {
    "text": "here we'll see you next time",
    "start": "340880",
    "end": "344600"
  }
]