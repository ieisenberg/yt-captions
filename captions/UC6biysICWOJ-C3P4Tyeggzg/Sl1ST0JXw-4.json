[
  {
    "start": "0",
    "end": "10000"
  },
  {
    "text": "wait so how do I take it off now ah",
    "start": "1079",
    "end": "4860"
  },
  {
    "text": "I've been in the market for a new",
    "start": "4860",
    "end": "6480"
  },
  {
    "text": "smartwatch recently because the one that",
    "start": "6480",
    "end": "8400"
  },
  {
    "text": "I have makes me look way too cool",
    "start": "8400",
    "end": "10440"
  },
  {
    "start": "10000",
    "end": "117000"
  },
  {
    "text": "instead of buying a new 700 smart watch",
    "start": "10440",
    "end": "13200"
  },
  {
    "text": "I decided to use an Arduino I had laying",
    "start": "13200",
    "end": "15420"
  },
  {
    "text": "around the house which cost me about 20",
    "start": "15420",
    "end": "16980"
  },
  {
    "text": "bucks I figured I could use the array of",
    "start": "16980",
    "end": "19260"
  },
  {
    "text": "8 by 12 LEDs to display the time which I",
    "start": "19260",
    "end": "22500"
  },
  {
    "text": "could pull off the internet using the",
    "start": "22500",
    "end": "24619"
  },
  {
    "text": "esp32 over Wi-Fi to power it I could use",
    "start": "24619",
    "end": "28199"
  },
  {
    "text": "an external power supply like a battery",
    "start": "28199",
    "end": "30119"
  },
  {
    "text": "and uh yeah we should be good to go to",
    "start": "30119",
    "end": "32520"
  },
  {
    "text": "get started we'll need a source of time",
    "start": "32520",
    "end": "35040"
  },
  {
    "text": "and preferably one with less ads luckily",
    "start": "35040",
    "end": "38280"
  },
  {
    "text": "we can do that pretty easily using the",
    "start": "38280",
    "end": "40260"
  },
  {
    "text": "esp32 that's on the Arduino this board",
    "start": "40260",
    "end": "43440"
  },
  {
    "text": "has a full IP stack and an SDK that",
    "start": "43440",
    "end": "46320"
  },
  {
    "text": "allows us to create",
    "start": "46320",
    "end": "47760"
  },
  {
    "text": "UDP packets so we can send an ntp",
    "start": "47760",
    "end": "50160"
  },
  {
    "text": "request ntp being a network time",
    "start": "50160",
    "end": "52920"
  },
  {
    "text": "protocol not nacho time protocol which",
    "start": "52920",
    "end": "55500"
  },
  {
    "text": "got me laughed out of the DMV anyway the",
    "start": "55500",
    "end": "58559"
  },
  {
    "text": "esp32 STK for Arduino makes this really",
    "start": "58559",
    "end": "61199"
  },
  {
    "text": "easy so all I have to do is initialize a",
    "start": "61199",
    "end": "63300"
  },
  {
    "text": "buffer for our packet data and free a",
    "start": "63300",
    "end": "65640"
  },
  {
    "text": "UDP packet in that packet we'll set it",
    "start": "65640",
    "end": "68040"
  },
  {
    "text": "all to zero and set some ntp specific",
    "start": "68040",
    "end": "70680"
  },
  {
    "text": "data like what stratum we need the",
    "start": "70680",
    "end": "72960"
  },
  {
    "text": "polling interval of our clock and then",
    "start": "72960",
    "end": "74939"
  },
  {
    "text": "set up that packet to go to our ntp",
    "start": "74939",
    "end": "77340"
  },
  {
    "text": "server on Port 123.",
    "start": "77340",
    "end": "79680"
  },
  {
    "text": "we'll send the packet to the server and",
    "start": "79680",
    "end": "81600"
  },
  {
    "text": "wait for a response for a second and if",
    "start": "81600",
    "end": "83400"
  },
  {
    "text": "we get one we'll clear out our LED frame",
    "start": "83400",
    "end": "85979"
  },
  {
    "text": "space and read the UDP data now I'm",
    "start": "85979",
    "end": "88439"
  },
  {
    "text": "going to be honest I stole this",
    "start": "88439",
    "end": "89520"
  },
  {
    "text": "algorithm off the internet all it does",
    "start": "89520",
    "end": "90960"
  },
  {
    "text": "is it converts the data from our",
    "start": "90960",
    "end": "92640"
  },
  {
    "text": "response into Unix epic time or the",
    "start": "92640",
    "end": "95880"
  },
  {
    "text": "amount of seconds that have occurred",
    "start": "95880",
    "end": "97380"
  },
  {
    "text": "since 1970 January 1st which I'm pretty",
    "start": "97380",
    "end": "100680"
  },
  {
    "text": "sure is the day that Linus torvald rose",
    "start": "100680",
    "end": "102900"
  },
  {
    "text": "from the dead anyway using the Arduino",
    "start": "102900",
    "end": "105540"
  },
  {
    "text": "serial monitor we can print those out",
    "start": "105540",
    "end": "107400"
  },
  {
    "text": "and see okay cool it's 723 but now we",
    "start": "107400",
    "end": "110700"
  },
  {
    "text": "have another problem how do we convert",
    "start": "110700",
    "end": "112619"
  },
  {
    "text": "that hour and minute into a format that",
    "start": "112619",
    "end": "114780"
  },
  {
    "text": "we can use and display on the LED Matrix",
    "start": "114780",
    "end": "117840"
  },
  {
    "start": "117000",
    "end": "342000"
  },
  {
    "text": "now the Arduino LED Matrix has a really",
    "start": "117840",
    "end": "120299"
  },
  {
    "text": "nice API where you can draw predefined",
    "start": "120299",
    "end": "122520"
  },
  {
    "text": "pictures but we have to put numbers on",
    "start": "122520",
    "end": "124860"
  },
  {
    "text": "this display and manually bit banging",
    "start": "124860",
    "end": "127560"
  },
  {
    "text": "numbers is kind of complicated it took",
    "start": "127560",
    "end": "129780"
  },
  {
    "text": "me a while to figure these out but",
    "start": "129780",
    "end": "131400"
  },
  {
    "text": "luckily the Arduino IDE has an LED",
    "start": "131400",
    "end": "134520"
  },
  {
    "text": "editor online where you can create cool",
    "start": "134520",
    "end": "137340"
  },
  {
    "text": "animations like this and actually output",
    "start": "137340",
    "end": "140340"
  },
  {
    "text": "them as code this sequence of numbers is",
    "start": "140340",
    "end": "143340"
  },
  {
    "text": "the numerical representation of an",
    "start": "143340",
    "end": "145800"
  },
  {
    "text": "animation that I'm going to use to show",
    "start": "145800",
    "end": "147720"
  },
  {
    "text": "when we're waiting for our ntp response",
    "start": "147720",
    "end": "150000"
  },
  {
    "text": "and here it is kind of cool just three",
    "start": "150000",
    "end": "152160"
  },
  {
    "text": "dots going across the screen now for the",
    "start": "152160",
    "end": "154800"
  },
  {
    "text": "clock itself I wanted to do what is",
    "start": "154800",
    "end": "156540"
  },
  {
    "text": "called a bitmap or a literal map of",
    "start": "156540",
    "end": "159060"
  },
  {
    "text": "single bits that represent the pixels on",
    "start": "159060",
    "end": "162120"
  },
  {
    "text": "the LED screen this gives me more",
    "start": "162120",
    "end": "164040"
  },
  {
    "text": "granular control that I can use to draw",
    "start": "164040",
    "end": "166500"
  },
  {
    "text": "exactly what I want on the screen I use",
    "start": "166500",
    "end": "169080"
  },
  {
    "text": "the LED Matrix Editor to kind of help me",
    "start": "169080",
    "end": "171300"
  },
  {
    "text": "out and figure out what pixels I need to",
    "start": "171300",
    "end": "173220"
  },
  {
    "text": "illuminate but eventually wrote",
    "start": "173220",
    "end": "175319"
  },
  {
    "text": "functions that account for creating a",
    "start": "175319",
    "end": "177840"
  },
  {
    "text": "single number on the screen here for",
    "start": "177840",
    "end": "180120"
  },
  {
    "text": "example my set one function sets the",
    "start": "180120",
    "end": "182519"
  },
  {
    "text": "specific values that need to be turned",
    "start": "182519",
    "end": "184739"
  },
  {
    "text": "on for the number one to appear in the",
    "start": "184739",
    "end": "187080"
  },
  {
    "text": "bitmap and so when I render this bitmap",
    "start": "187080",
    "end": "189360"
  },
  {
    "text": "the one does appear but I have to be",
    "start": "189360",
    "end": "191940"
  },
  {
    "text": "able to display four digits so how do I",
    "start": "191940",
    "end": "194819"
  },
  {
    "text": "do that in a way that is good modular",
    "start": "194819",
    "end": "197099"
  },
  {
    "text": "code now I could write code where I have",
    "start": "197099",
    "end": "199560"
  },
  {
    "text": "have multiple functions per digit like",
    "start": "199560",
    "end": "201780"
  },
  {
    "text": "set one at one set two at two",
    "start": "201780",
    "end": "205620"
  },
  {
    "text": "Etc but this code absolutely sucks it",
    "start": "205620",
    "end": "208920"
  },
  {
    "text": "would become extremely hard to maintain",
    "start": "208920",
    "end": "211080"
  },
  {
    "text": "there's got to be a better way well by",
    "start": "211080",
    "end": "213360"
  },
  {
    "text": "adding a position variable into my",
    "start": "213360",
    "end": "215700"
  },
  {
    "text": "function I can have the x value be",
    "start": "215700",
    "end": "218700"
  },
  {
    "text": "offset by three to account for the four",
    "start": "218700",
    "end": "221459"
  },
  {
    "text": "possible digits on the LED display by",
    "start": "221459",
    "end": "224159"
  },
  {
    "text": "doing this I can use the same code in",
    "start": "224159",
    "end": "226140"
  },
  {
    "text": "positions 0 1 2 and 3 to display four",
    "start": "226140",
    "end": "229860"
  },
  {
    "text": "ones",
    "start": "229860",
    "end": "230940"
  },
  {
    "text": "using that same logic I created 10",
    "start": "230940",
    "end": "233280"
  },
  {
    "text": "functions that are able to display the",
    "start": "233280",
    "end": "235379"
  },
  {
    "text": "digits 0 through 9 on the LED display at",
    "start": "235379",
    "end": "238860"
  },
  {
    "text": "positions 0 through 3. so now I can",
    "start": "238860",
    "end": "241799"
  },
  {
    "text": "display an arbitrary time on the LED",
    "start": "241799",
    "end": "244799"
  },
  {
    "text": "Matrix great we're making progress so",
    "start": "244799",
    "end": "247379"
  },
  {
    "text": "here we go 1719 a random time that I",
    "start": "247379",
    "end": "250260"
  },
  {
    "text": "chose to prove that I could render",
    "start": "250260",
    "end": "251760"
  },
  {
    "text": "arbitrary digits on The Matrix but now",
    "start": "251760",
    "end": "254400"
  },
  {
    "text": "comes the hard part actually writing",
    "start": "254400",
    "end": "256919"
  },
  {
    "text": "good code I have to take the hours and",
    "start": "256919",
    "end": "259680"
  },
  {
    "text": "minutes from the ntp server and use that",
    "start": "259680",
    "end": "262320"
  },
  {
    "text": "to determine what function to call to",
    "start": "262320",
    "end": "264600"
  },
  {
    "text": "display our digits on the LED Matrix now",
    "start": "264600",
    "end": "267300"
  },
  {
    "text": "I could do it this way where I make an",
    "start": "267300",
    "end": "269400"
  },
  {
    "text": "infinitely long list of if statements",
    "start": "269400",
    "end": "271380"
  },
  {
    "text": "where I say if hour equals zero do this",
    "start": "271380",
    "end": "273900"
  },
  {
    "text": "else if R equals one and but God I hate",
    "start": "273900",
    "end": "276720"
  },
  {
    "text": "this kind of code so I'm going to do it",
    "start": "276720",
    "end": "278880"
  },
  {
    "text": "a different way I decided to organize",
    "start": "278880",
    "end": "280680"
  },
  {
    "text": "all the functions responsible for",
    "start": "280680",
    "end": "282600"
  },
  {
    "text": "rendering digits on the display into a",
    "start": "282600",
    "end": "285000"
  },
  {
    "text": "function pointer table where if you call",
    "start": "285000",
    "end": "287340"
  },
  {
    "text": "the zero with function it renders a zero",
    "start": "287340",
    "end": "290220"
  },
  {
    "text": "the first function A1 Etc",
    "start": "290220",
    "end": "293639"
  },
  {
    "text": "with this logic we can use some basic",
    "start": "293639",
    "end": "295800"
  },
  {
    "text": "modulo math in index into our function",
    "start": "295800",
    "end": "298380"
  },
  {
    "text": "pointer table by the hours one place the",
    "start": "298380",
    "end": "301199"
  },
  {
    "text": "hours 10 place and then do the same",
    "start": "301199",
    "end": "302940"
  },
  {
    "text": "thing for the minutes",
    "start": "302940",
    "end": "305720"
  },
  {
    "text": "we'll render that bitmap to the screen",
    "start": "310560",
    "end": "312900"
  },
  {
    "text": "and then wait 10 seconds and do it all",
    "start": "312900",
    "end": "315300"
  },
  {
    "text": "over again set another ntp packet render",
    "start": "315300",
    "end": "317759"
  },
  {
    "text": "the packet Etc now there is a problem",
    "start": "317759",
    "end": "319860"
  },
  {
    "text": "that if I leave my house and my Wi-Fi",
    "start": "319860",
    "end": "321900"
  },
  {
    "text": "disconnects this watch will not work but",
    "start": "321900",
    "end": "323880"
  },
  {
    "text": "luckily that won't be a problem because",
    "start": "323880",
    "end": "325560"
  },
  {
    "text": "I have a good solution no I just don't",
    "start": "325560",
    "end": "327900"
  },
  {
    "text": "leave my house at this point we have a",
    "start": "327900",
    "end": "329880"
  },
  {
    "text": "pretty cool watch we turn it on and it",
    "start": "329880",
    "end": "331620"
  },
  {
    "text": "shows us the I'm loading animation and",
    "start": "331620",
    "end": "333660"
  },
  {
    "text": "then it renders the time and it'll",
    "start": "333660",
    "end": "335580"
  },
  {
    "text": "automatically update every minute on the",
    "start": "335580",
    "end": "337620"
  },
  {
    "text": "minute but this isn't really a smart",
    "start": "337620",
    "end": "340199"
  },
  {
    "text": "watch this is a watch so I wanted to add",
    "start": "340199",
    "end": "343740"
  },
  {
    "start": "342000",
    "end": "487000"
  },
  {
    "text": "additional features to kind of spruce it",
    "start": "343740",
    "end": "345780"
  },
  {
    "text": "up and make it the real smart watch that",
    "start": "345780",
    "end": "347759"
  },
  {
    "text": "I know it could be so I bought a 20",
    "start": "347759",
    "end": "350520"
  },
  {
    "text": "heart rate monitor off Amazon and wanted",
    "start": "350520",
    "end": "352979"
  },
  {
    "text": "to see if I could integrate it into the",
    "start": "352979",
    "end": "354600"
  },
  {
    "text": "watch the monitor is pretty simple it",
    "start": "354600",
    "end": "356699"
  },
  {
    "text": "has three wires ground power and Signal",
    "start": "356699",
    "end": "359340"
  },
  {
    "text": "it will output how much light it sees",
    "start": "359340",
    "end": "361500"
  },
  {
    "text": "when this green light is bounced off",
    "start": "361500",
    "end": "363360"
  },
  {
    "text": "your skin it uses the color green",
    "start": "363360",
    "end": "365160"
  },
  {
    "text": "because obviously that's the opposite of",
    "start": "365160",
    "end": "366840"
  },
  {
    "text": "blood and it can figure out how much",
    "start": "366840",
    "end": "368520"
  },
  {
    "text": "light gets absorbed by your blood and",
    "start": "368520",
    "end": "370380"
  },
  {
    "text": "you use that to figure out your heart",
    "start": "370380",
    "end": "371820"
  },
  {
    "text": "rate the end result is when I put this",
    "start": "371820",
    "end": "373860"
  },
  {
    "text": "on my wrist the device outputs an analog",
    "start": "373860",
    "end": "376620"
  },
  {
    "text": "value that I can read with the Arduino",
    "start": "376620",
    "end": "378479"
  },
  {
    "text": "to get a sense of how fast my heart is",
    "start": "378479",
    "end": "380759"
  },
  {
    "text": "beating now because all the sensor is",
    "start": "380759",
    "end": "383340"
  },
  {
    "text": "doing is reporting the amount of light",
    "start": "383340",
    "end": "385440"
  },
  {
    "text": "that it sees I have to implement a",
    "start": "385440",
    "end": "387539"
  },
  {
    "text": "little bit of logic to actually convert",
    "start": "387539",
    "end": "389340"
  },
  {
    "text": "that to beats per minute so we start out",
    "start": "389340",
    "end": "391500"
  },
  {
    "text": "by measuring the time currently on the",
    "start": "391500",
    "end": "393960"
  },
  {
    "text": "device before we measure 500 cycles for",
    "start": "393960",
    "end": "397020"
  },
  {
    "text": "every cycle we measure the current",
    "start": "397020",
    "end": "398759"
  },
  {
    "text": "amount that the sensor sees and if it",
    "start": "398759",
    "end": "401280"
  },
  {
    "text": "goes over some threshold and we haven't",
    "start": "401280",
    "end": "403500"
  },
  {
    "text": "seen a beat yet we consider that one",
    "start": "403500",
    "end": "405900"
  },
  {
    "text": "beat and then say that a beat has been",
    "start": "405900",
    "end": "407699"
  },
  {
    "text": "seen and then if it goes below that",
    "start": "407699",
    "end": "409860"
  },
  {
    "text": "threshold and we have seen a beat we",
    "start": "409860",
    "end": "411960"
  },
  {
    "text": "turn that trigger off basically this",
    "start": "411960",
    "end": "413940"
  },
  {
    "text": "allows us to see the top and bottom of a",
    "start": "413940",
    "end": "416280"
  },
  {
    "text": "heartbeat graph",
    "start": "416280",
    "end": "417720"
  },
  {
    "text": "from there we measure how much time has",
    "start": "417720",
    "end": "419639"
  },
  {
    "text": "passed and how many beats that we've",
    "start": "419639",
    "end": "421740"
  },
  {
    "text": "seen over the course of that duration",
    "start": "421740",
    "end": "423419"
  },
  {
    "text": "and convert that to a beats per minute",
    "start": "423419",
    "end": "425340"
  },
  {
    "text": "value",
    "start": "425340",
    "end": "426300"
  },
  {
    "text": "from there we convert our float beats",
    "start": "426300",
    "end": "428039"
  },
  {
    "text": "per minute to an INT beats per minute",
    "start": "428039",
    "end": "429539"
  },
  {
    "text": "and then render it on the device just",
    "start": "429539",
    "end": "431819"
  },
  {
    "text": "like we did with the clock we'll do this",
    "start": "431819",
    "end": "433800"
  },
  {
    "text": "every five seconds while the ntp packet",
    "start": "433800",
    "end": "436440"
  },
  {
    "text": "comes back from the server and of course",
    "start": "436440",
    "end": "438600"
  },
  {
    "text": "this wouldn't be a fun project without",
    "start": "438600",
    "end": "440340"
  },
  {
    "text": "setting a heart",
    "start": "440340",
    "end": "442319"
  },
  {
    "text": "and finally the build begins",
    "start": "442319",
    "end": "445139"
  },
  {
    "text": "found this strap that I put through the",
    "start": "445139",
    "end": "446639"
  },
  {
    "text": "Arduino case and I can use that to",
    "start": "446639",
    "end": "448319"
  },
  {
    "text": "actually pretty cleanly put it on my",
    "start": "448319",
    "end": "449759"
  },
  {
    "text": "wrist",
    "start": "449759",
    "end": "451380"
  },
  {
    "text": "now I need to put the battery somewhere",
    "start": "451380",
    "end": "453960"
  },
  {
    "text": "so duct tape should probably work",
    "start": "453960",
    "end": "456900"
  },
  {
    "text": "pretty good",
    "start": "456900",
    "end": "458099"
  },
  {
    "text": "if you plug it in we wait for it to",
    "start": "458099",
    "end": "459840"
  },
  {
    "text": "connect and there we go 1256 is the time",
    "start": "459840",
    "end": "462720"
  },
  {
    "text": "and I get 57 beats per minute I'm",
    "start": "462720",
    "end": "465360"
  },
  {
    "text": "actually really surprised how accurate",
    "start": "465360",
    "end": "466979"
  },
  {
    "text": "this heart rate monitor is now all we",
    "start": "466979",
    "end": "468840"
  },
  {
    "text": "have left to do is go try it outside",
    "start": "468840",
    "end": "473180"
  },
  {
    "text": "oh yeah right there's no Wi-fi okay",
    "start": "474300",
    "end": "478199"
  },
  {
    "text": "anyway guys I had a blast making this",
    "start": "478199",
    "end": "479819"
  },
  {
    "text": "video If you enjoyed this and want to",
    "start": "479819",
    "end": "481440"
  },
  {
    "text": "see more builder videos leave a comment",
    "start": "481440",
    "end": "482940"
  },
  {
    "text": "and let me know then go watch this other",
    "start": "482940",
    "end": "484500"
  },
  {
    "text": "video where I built something wacky all",
    "start": "484500",
    "end": "487199"
  },
  {
    "text": "right",
    "start": "487199",
    "end": "489380"
  }
]