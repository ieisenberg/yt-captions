[
  {
    "text": "in today's tutorial we're going to be",
    "start": "1520",
    "end": "3280"
  },
  {
    "text": "talking about arrays",
    "start": "3280",
    "end": "4560"
  },
  {
    "text": "what is an array you ask well according",
    "start": "4560",
    "end": "6720"
  },
  {
    "text": "to the internet",
    "start": "6720",
    "end": "7600"
  },
  {
    "text": "an array is a data structure consisting",
    "start": "7600",
    "end": "9440"
  },
  {
    "text": "of a collection of elements",
    "start": "9440",
    "end": "10800"
  },
  {
    "text": "it's not very descriptive so we're going",
    "start": "10800",
    "end": "12559"
  },
  {
    "text": "to go a little deeper into it",
    "start": "12559",
    "end": "14080"
  },
  {
    "text": "an array in c is used to store a",
    "start": "14080",
    "end": "16400"
  },
  {
    "text": "contiguous grouping",
    "start": "16400",
    "end": "17840"
  },
  {
    "text": "of variables that are the same size and",
    "start": "17840",
    "end": "20400"
  },
  {
    "text": "the same type",
    "start": "20400",
    "end": "21520"
  },
  {
    "text": "so the best way to think about an array",
    "start": "21520",
    "end": "23760"
  },
  {
    "text": "and see",
    "start": "23760",
    "end": "24880"
  },
  {
    "text": "is a group of boxes like this um the",
    "start": "24880",
    "end": "27519"
  },
  {
    "text": "boxes are contiguous which means",
    "start": "27519",
    "end": "29359"
  },
  {
    "text": "there's no gaps in between them you know",
    "start": "29359",
    "end": "30800"
  },
  {
    "text": "they're all next to each other with no",
    "start": "30800",
    "end": "32238"
  },
  {
    "text": "holes",
    "start": "32239",
    "end": "33360"
  },
  {
    "text": "and the boxes are all the same size and",
    "start": "33360",
    "end": "35520"
  },
  {
    "text": "the same type so the first one",
    "start": "35520",
    "end": "37520"
  },
  {
    "text": "is the same size as the last one so for",
    "start": "37520",
    "end": "40559"
  },
  {
    "text": "example if i",
    "start": "40559",
    "end": "41360"
  },
  {
    "text": "needed to make a variable in c to track",
    "start": "41360",
    "end": "44239"
  },
  {
    "text": "a long list of",
    "start": "44239",
    "end": "45360"
  },
  {
    "text": "integers the way that i would do this is",
    "start": "45360",
    "end": "47520"
  },
  {
    "text": "to make an integer",
    "start": "47520",
    "end": "48800"
  },
  {
    "text": "array so the way that i would do this is",
    "start": "48800",
    "end": "51199"
  },
  {
    "text": "i would type",
    "start": "51199",
    "end": "52079"
  },
  {
    "text": "int which is the type held by the array",
    "start": "52079",
    "end": "55039"
  },
  {
    "text": "then the name of the array as",
    "start": "55039",
    "end": "56719"
  },
  {
    "text": "tracked by the compiler and then a hard",
    "start": "56719",
    "end": "59199"
  },
  {
    "text": "open parenthesis and that notation with",
    "start": "59199",
    "end": "60960"
  },
  {
    "text": "the hard parentheses means that we're",
    "start": "60960",
    "end": "62399"
  },
  {
    "text": "dealing with an array type",
    "start": "62399",
    "end": "64320"
  },
  {
    "text": "and then inside of that parentheses is",
    "start": "64320",
    "end": "66720"
  },
  {
    "text": "the number of",
    "start": "66720",
    "end": "67760"
  },
  {
    "text": "elements you want in your array right",
    "start": "67760",
    "end": "70799"
  },
  {
    "text": "and this is when you're doing statically",
    "start": "70799",
    "end": "72400"
  },
  {
    "text": "sized allocations",
    "start": "72400",
    "end": "73600"
  },
  {
    "text": "you finish with a card close parentheses",
    "start": "73600",
    "end": "76240"
  },
  {
    "text": "and then a semicolon",
    "start": "76240",
    "end": "77439"
  },
  {
    "text": "and what the compiler does with that is",
    "start": "77439",
    "end": "79119"
  },
  {
    "text": "it creates room on the stack",
    "start": "79119",
    "end": "81439"
  },
  {
    "text": "for six integers so that's gonna be",
    "start": "81439",
    "end": "84479"
  },
  {
    "text": "four per integer times 6 so 24 bytes",
    "start": "84479",
    "end": "87920"
  },
  {
    "text": "to hold whatever numbers you want so in",
    "start": "87920",
    "end": "90079"
  },
  {
    "text": "this case i did 66 44 etc",
    "start": "90079",
    "end": "93280"
  },
  {
    "text": "so let's actually get into the code and",
    "start": "93280",
    "end": "95439"
  },
  {
    "text": "write some code that",
    "start": "95439",
    "end": "96720"
  },
  {
    "text": "creates statically and dynamically sized",
    "start": "96720",
    "end": "99759"
  },
  {
    "text": "arrays in c let's get into it right now",
    "start": "99759",
    "end": "103520"
  },
  {
    "text": "all right so we're in linux we got our",
    "start": "103520",
    "end": "104880"
  },
  {
    "text": "coding environment all set up here",
    "start": "104880",
    "end": "106560"
  },
  {
    "text": "um if you haven't seen my tutorials on",
    "start": "106560",
    "end": "108720"
  },
  {
    "text": "writing your first hello world program",
    "start": "108720",
    "end": "110479"
  },
  {
    "text": "in c",
    "start": "110479",
    "end": "110960"
  },
  {
    "text": "or the pointer tutorial that i didn't",
    "start": "110960",
    "end": "112640"
  },
  {
    "text": "see you're going to be a little lost in",
    "start": "112640",
    "end": "114240"
  },
  {
    "text": "the syntax here but if you have seen",
    "start": "114240",
    "end": "115680"
  },
  {
    "text": "those or you're a little",
    "start": "115680",
    "end": "116960"
  },
  {
    "text": "experienced and see stick around we're",
    "start": "116960",
    "end": "119360"
  },
  {
    "text": "going to dive into arrays right now",
    "start": "119360",
    "end": "121200"
  },
  {
    "text": "so we're going to talk about two",
    "start": "121200",
    "end": "123680"
  },
  {
    "text": "different kinds of array",
    "start": "123680",
    "end": "125840"
  },
  {
    "text": "allocations the first we're going to do",
    "start": "125840",
    "end": "128239"
  },
  {
    "text": "is a statically",
    "start": "128239",
    "end": "129679"
  },
  {
    "text": "sized array allocation and statically",
    "start": "129679",
    "end": "132160"
  },
  {
    "text": "sized means",
    "start": "132160",
    "end": "133280"
  },
  {
    "text": "you say how big the array is going to be",
    "start": "133280",
    "end": "136480"
  },
  {
    "text": "in your code directly and that gets",
    "start": "136480",
    "end": "139040"
  },
  {
    "text": "determined at compile time which means",
    "start": "139040",
    "end": "141360"
  },
  {
    "text": "every time your program runs the array",
    "start": "141360",
    "end": "143840"
  },
  {
    "text": "is that big there's no way to change it",
    "start": "143840",
    "end": "147520"
  },
  {
    "text": "the way we do that is just like what we",
    "start": "147520",
    "end": "149280"
  },
  {
    "text": "saw before where we say",
    "start": "149280",
    "end": "151120"
  },
  {
    "text": "int my array a hard parenthesis",
    "start": "151120",
    "end": "154480"
  },
  {
    "text": "the number of elements you want in it",
    "start": "154480",
    "end": "156400"
  },
  {
    "text": "and a closed parenthesis",
    "start": "156400",
    "end": "158160"
  },
  {
    "text": "semicolon and that's it we can actually",
    "start": "158160",
    "end": "161760"
  },
  {
    "text": "compile our code here",
    "start": "161760",
    "end": "163280"
  },
  {
    "text": "uh we'll do gcc gcc",
    "start": "163280",
    "end": "166879"
  },
  {
    "text": "tac o arrays and i named my code",
    "start": "166879",
    "end": "169599"
  },
  {
    "text": "arrays.c",
    "start": "169599",
    "end": "170879"
  },
  {
    "text": "then we can run our code and we get no",
    "start": "170879",
    "end": "173200"
  },
  {
    "text": "compile errors",
    "start": "173200",
    "end": "174239"
  },
  {
    "text": "that's not very cool right we allocated",
    "start": "174239",
    "end": "176319"
  },
  {
    "text": "to some array we don't do anything with",
    "start": "176319",
    "end": "177599"
  },
  {
    "text": "it so let's actually print off our array",
    "start": "177599",
    "end": "180400"
  },
  {
    "text": "the way we're going to do that is with a",
    "start": "180400",
    "end": "181519"
  },
  {
    "text": "for loop so we'll create a for loop",
    "start": "181519",
    "end": "184000"
  },
  {
    "text": "by doing the following syntax we'll",
    "start": "184000",
    "end": "185920"
  },
  {
    "text": "declare a counter variable",
    "start": "185920",
    "end": "187760"
  },
  {
    "text": "with i and we'll start our four syntax",
    "start": "187760",
    "end": "190879"
  },
  {
    "text": "so four",
    "start": "190879",
    "end": "192000"
  },
  {
    "text": "i is equal to zero while i is less than",
    "start": "192000",
    "end": "195599"
  },
  {
    "text": "five and five is the number of elements",
    "start": "195599",
    "end": "197599"
  },
  {
    "text": "in our array right",
    "start": "197599",
    "end": "199360"
  },
  {
    "text": "uh i plus plus and then for every",
    "start": "199360",
    "end": "202879"
  },
  {
    "text": "iteration of that loop we're going to",
    "start": "202879",
    "end": "204799"
  },
  {
    "text": "print something",
    "start": "204799",
    "end": "206720"
  },
  {
    "text": "uh we're gonna do percent d colon",
    "start": "206720",
    "end": "210400"
  },
  {
    "text": "percent d backslash n that first d",
    "start": "210400",
    "end": "214480"
  },
  {
    "text": "is going to be our counter just so we",
    "start": "214480",
    "end": "215920"
  },
  {
    "text": "know where in the array we are",
    "start": "215920",
    "end": "218000"
  },
  {
    "text": "and then we're going to introduce some",
    "start": "218000",
    "end": "219200"
  },
  {
    "text": "new syntax here which is called an array",
    "start": "219200",
    "end": "221519"
  },
  {
    "text": "access when we want to access into our",
    "start": "221519",
    "end": "224080"
  },
  {
    "text": "array",
    "start": "224080",
    "end": "224879"
  },
  {
    "text": "we type the name of the array and then",
    "start": "224879",
    "end": "226879"
  },
  {
    "text": "similar to the declaration",
    "start": "226879",
    "end": "228560"
  },
  {
    "text": "we access with hard parentheses and then",
    "start": "228560",
    "end": "231040"
  },
  {
    "text": "the element number we want to access and",
    "start": "231040",
    "end": "233200"
  },
  {
    "text": "in this case we want to access the",
    "start": "233200",
    "end": "235120"
  },
  {
    "text": "i-th element",
    "start": "235120",
    "end": "238159"
  },
  {
    "text": "and what that'll do is as i increases",
    "start": "238159",
    "end": "240879"
  },
  {
    "text": "right i starts at zero",
    "start": "240879",
    "end": "242319"
  },
  {
    "text": "access to zero with element i goes up to",
    "start": "242319",
    "end": "244560"
  },
  {
    "text": "one two three",
    "start": "244560",
    "end": "245439"
  },
  {
    "text": "four you access the first second third",
    "start": "245439",
    "end": "247200"
  },
  {
    "text": "fourth element and so on",
    "start": "247200",
    "end": "248879"
  },
  {
    "text": "and you close your your uh your",
    "start": "248879",
    "end": "251200"
  },
  {
    "text": "statement here",
    "start": "251200",
    "end": "252319"
  },
  {
    "text": "and then you end your your for loop then",
    "start": "252319",
    "end": "255439"
  },
  {
    "text": "if we compile this and we run it",
    "start": "255439",
    "end": "258079"
  },
  {
    "text": "we should get so the first two makes",
    "start": "258079",
    "end": "260639"
  },
  {
    "text": "sense",
    "start": "260639",
    "end": "261519"
  },
  {
    "text": "but the second two or the second three i",
    "start": "261519",
    "end": "263680"
  },
  {
    "text": "guess are actually",
    "start": "263680",
    "end": "265440"
  },
  {
    "text": "kind of a uh a programming mistake we",
    "start": "265440",
    "end": "268960"
  },
  {
    "text": "didn't specify a default value",
    "start": "268960",
    "end": "272400"
  },
  {
    "text": "for our array what actually happens here",
    "start": "272400",
    "end": "274160"
  },
  {
    "text": "is we get somewhat of a memory leak",
    "start": "274160",
    "end": "276479"
  },
  {
    "text": "we can actually change this value to",
    "start": "276479",
    "end": "278320"
  },
  {
    "text": "percent p for pointer",
    "start": "278320",
    "end": "280240"
  },
  {
    "text": "recompile it and run it and these values",
    "start": "280240",
    "end": "284320"
  },
  {
    "text": "are",
    "start": "284320",
    "end": "285120"
  },
  {
    "text": "actually i'm not sure what they are",
    "start": "285120",
    "end": "286320"
  },
  {
    "text": "either way the memory that we aren't",
    "start": "286320",
    "end": "287840"
  },
  {
    "text": "supposed to see",
    "start": "287840",
    "end": "289120"
  },
  {
    "text": "we the user weren't meant to be uh",
    "start": "289120",
    "end": "291759"
  },
  {
    "text": "revealed to in our program we'll put",
    "start": "291759",
    "end": "293600"
  },
  {
    "text": "this back to a d but the way that we",
    "start": "293600",
    "end": "296560"
  },
  {
    "text": "clean this up",
    "start": "296560",
    "end": "297680"
  },
  {
    "text": "is we can specify a default value for",
    "start": "297680",
    "end": "300560"
  },
  {
    "text": "our array with the following syntax we",
    "start": "300560",
    "end": "302160"
  },
  {
    "text": "say int",
    "start": "302160",
    "end": "303280"
  },
  {
    "text": "my array of 5 is equal to curly bracket",
    "start": "303280",
    "end": "307360"
  },
  {
    "text": "the default value which you always want",
    "start": "307360",
    "end": "308800"
  },
  {
    "text": "to set yourself to zero unless you have",
    "start": "308800",
    "end": "310720"
  },
  {
    "text": "another",
    "start": "310720",
    "end": "311440"
  },
  {
    "text": "predetermined default value and then you",
    "start": "311440",
    "end": "313600"
  },
  {
    "text": "close your parentheses",
    "start": "313600",
    "end": "315440"
  },
  {
    "text": "we're gonna save it and run it good",
    "start": "315440",
    "end": "318800"
  },
  {
    "text": "now instead of getting memory leaked uh",
    "start": "318800",
    "end": "321440"
  },
  {
    "text": "so we shouldn't have seen in the first",
    "start": "321440",
    "end": "322720"
  },
  {
    "text": "place",
    "start": "322720",
    "end": "323440"
  },
  {
    "text": "we get all this clean zero values for",
    "start": "323440",
    "end": "326880"
  },
  {
    "text": "our",
    "start": "326880",
    "end": "327280"
  },
  {
    "text": "brand new variable right",
    "start": "327280",
    "end": "331199"
  },
  {
    "text": "now to set the variable to things we can",
    "start": "331199",
    "end": "333199"
  },
  {
    "text": "do my array",
    "start": "333199",
    "end": "334720"
  },
  {
    "text": "of one is equal to um let's see",
    "start": "334720",
    "end": "338240"
  },
  {
    "text": "one three three seven we could do my",
    "start": "338240",
    "end": "340400"
  },
  {
    "text": "array",
    "start": "340400",
    "end": "341280"
  },
  {
    "text": "of four is equal to 4096",
    "start": "341280",
    "end": "345160"
  },
  {
    "text": "4096. we're just going to copy this code",
    "start": "345160",
    "end": "349840"
  },
  {
    "text": "and put it back here remember not to",
    "start": "349840",
    "end": "351600"
  },
  {
    "text": "grab the declaration of i",
    "start": "351600",
    "end": "352880"
  },
  {
    "text": "because you don't want to declare it",
    "start": "352880",
    "end": "353919"
  },
  {
    "text": "twice the compiler will yell at you",
    "start": "353919",
    "end": "356319"
  },
  {
    "text": "and then we're going to compile and run",
    "start": "356319",
    "end": "358000"
  },
  {
    "text": "our code so this is the first iteration",
    "start": "358000",
    "end": "359919"
  },
  {
    "text": "right we set",
    "start": "359919",
    "end": "360880"
  },
  {
    "text": "the variable equal to zero or we set the",
    "start": "360880",
    "end": "362880"
  },
  {
    "text": "array equal to zero",
    "start": "362880",
    "end": "364720"
  },
  {
    "text": "and then in the second iteration we set",
    "start": "364720",
    "end": "366400"
  },
  {
    "text": "some variables equal to some stuff",
    "start": "366400",
    "end": "368080"
  },
  {
    "text": "and we printed them pretty cool right",
    "start": "368080",
    "end": "370000"
  },
  {
    "text": "not that hard",
    "start": "370000",
    "end": "371680"
  },
  {
    "text": "so like i said before this is a",
    "start": "371680",
    "end": "373199"
  },
  {
    "text": "statically sized array allocation",
    "start": "373199",
    "end": "375919"
  },
  {
    "text": "every time you run this program know",
    "start": "375919",
    "end": "377199"
  },
  {
    "text": "what no matter what the array",
    "start": "377199",
    "end": "379280"
  },
  {
    "text": "will always be five no matter what you",
    "start": "379280",
    "end": "381680"
  },
  {
    "text": "do you can't change it at",
    "start": "381680",
    "end": "383600"
  },
  {
    "text": "runtime because it happens in the",
    "start": "383600",
    "end": "386400"
  },
  {
    "text": "creation of the stack for the program",
    "start": "386400",
    "end": "388479"
  },
  {
    "text": "another way to do array allocations will",
    "start": "388479",
    "end": "391120"
  },
  {
    "text": "delete everything but",
    "start": "391120",
    "end": "392400"
  },
  {
    "text": "us viewing the array is with this syntax",
    "start": "392400",
    "end": "395919"
  },
  {
    "text": "so instead of this where you use your",
    "start": "395919",
    "end": "399199"
  },
  {
    "text": "hard parentheses",
    "start": "399199",
    "end": "400240"
  },
  {
    "text": "and that sets the size we're going to",
    "start": "400240",
    "end": "402000"
  },
  {
    "text": "set the size of the array a different",
    "start": "402000",
    "end": "403680"
  },
  {
    "text": "way",
    "start": "403680",
    "end": "404880"
  },
  {
    "text": "we're going to make an int pointer",
    "start": "404880",
    "end": "407919"
  },
  {
    "text": "called my",
    "start": "407919",
    "end": "409280"
  },
  {
    "text": "array and it's going to be equal to and",
    "start": "409280",
    "end": "412080"
  },
  {
    "text": "this brick is a little different",
    "start": "412080",
    "end": "413520"
  },
  {
    "text": "instead of pulling memory from the stack",
    "start": "413520",
    "end": "416000"
  },
  {
    "text": "which is what our previous allocation",
    "start": "416000",
    "end": "417520"
  },
  {
    "text": "did",
    "start": "417520",
    "end": "418160"
  },
  {
    "text": "we're going to pull memory from the heap",
    "start": "418160",
    "end": "420160"
  },
  {
    "text": "and the heap allows us to do things",
    "start": "420160",
    "end": "421759"
  },
  {
    "text": "dynamically",
    "start": "421759",
    "end": "422800"
  },
  {
    "text": "where we can change the number of",
    "start": "422800",
    "end": "424400"
  },
  {
    "text": "elements we have in our array at a given",
    "start": "424400",
    "end": "426240"
  },
  {
    "text": "time",
    "start": "426240",
    "end": "426560"
  },
  {
    "text": "during run time as composed to at",
    "start": "426560",
    "end": "428560"
  },
  {
    "text": "compile time",
    "start": "428560",
    "end": "431280"
  },
  {
    "text": "malik so what malloc does and we have to",
    "start": "432160",
    "end": "434800"
  },
  {
    "text": "make sure we include",
    "start": "434800",
    "end": "436160"
  },
  {
    "text": "standard lib.h which is where mala comes",
    "start": "436160",
    "end": "438720"
  },
  {
    "text": "from",
    "start": "438720",
    "end": "439440"
  },
  {
    "text": "malik is memory alec and this is",
    "start": "439440",
    "end": "442319"
  },
  {
    "text": "actually the function in lib c",
    "start": "442319",
    "end": "444560"
  },
  {
    "text": "that asks the memory allocator hey can",
    "start": "444560",
    "end": "447120"
  },
  {
    "text": "we have some memory we need to do things",
    "start": "447120",
    "end": "448960"
  },
  {
    "text": "with it and",
    "start": "448960",
    "end": "450160"
  },
  {
    "text": "the argument to malik is the amount of",
    "start": "450160",
    "end": "452319"
  },
  {
    "text": "memory you would like to allocate right",
    "start": "452319",
    "end": "455199"
  },
  {
    "text": "and the amount of member we want to",
    "start": "455199",
    "end": "456639"
  },
  {
    "text": "allocate when we let's let's make this",
    "start": "456639",
    "end": "459120"
  },
  {
    "text": "a five element",
    "start": "459120",
    "end": "462240"
  },
  {
    "text": "int array the amount of memory",
    "start": "462240",
    "end": "465680"
  },
  {
    "text": "you need to allocate you need to specify",
    "start": "465680",
    "end": "467840"
  },
  {
    "text": "in bytes",
    "start": "467840",
    "end": "468800"
  },
  {
    "text": "the question then becomes how many bytes",
    "start": "468800",
    "end": "471440"
  },
  {
    "text": "is a",
    "start": "471440",
    "end": "471919"
  },
  {
    "text": "five element integer array well some",
    "start": "471919",
    "end": "474319"
  },
  {
    "text": "basic math will tell us that it's",
    "start": "474319",
    "end": "476400"
  },
  {
    "text": "the size of and that's actually a macro",
    "start": "476400",
    "end": "478960"
  },
  {
    "text": "in c",
    "start": "478960",
    "end": "479759"
  },
  {
    "text": "size of an int times",
    "start": "479759",
    "end": "483919"
  },
  {
    "text": "the number of elements we want right",
    "start": "483919",
    "end": "485440"
  },
  {
    "text": "because if int has some size",
    "start": "485440",
    "end": "487440"
  },
  {
    "text": "and in this case it's actually four four",
    "start": "487440",
    "end": "490319"
  },
  {
    "text": "times five so",
    "start": "490319",
    "end": "491520"
  },
  {
    "text": "20 bytes is the amount of bytes we need",
    "start": "491520",
    "end": "493680"
  },
  {
    "text": "to ask",
    "start": "493680",
    "end": "494560"
  },
  {
    "text": "from the allocator to create our array",
    "start": "494560",
    "end": "498800"
  },
  {
    "text": "and so this will work and give us back",
    "start": "498879",
    "end": "501840"
  },
  {
    "text": "memory",
    "start": "501840",
    "end": "503360"
  },
  {
    "text": "and then the access and the setting and",
    "start": "503360",
    "end": "505840"
  },
  {
    "text": "the reading of the array is actually the",
    "start": "505840",
    "end": "507520"
  },
  {
    "text": "exact same syntax this is actually an",
    "start": "507520",
    "end": "510080"
  },
  {
    "text": "array d reference of a pointer but you",
    "start": "510080",
    "end": "512479"
  },
  {
    "text": "can do that on pointers the same way you",
    "start": "512479",
    "end": "514159"
  },
  {
    "text": "can do it on arrays",
    "start": "514159",
    "end": "515279"
  },
  {
    "text": "so this will have the exact same effect",
    "start": "515279",
    "end": "517518"
  },
  {
    "text": "and we can compile it and run it oh",
    "start": "517519",
    "end": "520399"
  },
  {
    "text": "i forgot to declare i unfortunate",
    "start": "520399",
    "end": "524480"
  },
  {
    "text": "so we'll clear this",
    "start": "524480",
    "end": "527360"
  },
  {
    "text": "cool so we have allocated some memory",
    "start": "527680",
    "end": "530240"
  },
  {
    "text": "from the heap",
    "start": "530240",
    "end": "531360"
  },
  {
    "text": "how we have a pointer to it and then we",
    "start": "531360",
    "end": "532959"
  },
  {
    "text": "treat that pointer like an array",
    "start": "532959",
    "end": "535040"
  },
  {
    "text": "and now we're reading the memory that",
    "start": "535040",
    "end": "537120"
  },
  {
    "text": "lives in the heap which is actually set",
    "start": "537120",
    "end": "539440"
  },
  {
    "text": "by default well at this point in our",
    "start": "539440",
    "end": "541920"
  },
  {
    "text": "program",
    "start": "541920",
    "end": "542640"
  },
  {
    "text": "to zero right pretty cool and we'll do",
    "start": "542640",
    "end": "545279"
  },
  {
    "text": "the same thing as before",
    "start": "545279",
    "end": "546640"
  },
  {
    "text": "just prove to you that accesses and sets",
    "start": "546640",
    "end": "549680"
  },
  {
    "text": "are the same",
    "start": "549680",
    "end": "550959"
  },
  {
    "text": "with dynamically allocated arrays",
    "start": "550959",
    "end": "554000"
  },
  {
    "text": "all right so we'll set some values copy",
    "start": "554000",
    "end": "556880"
  },
  {
    "text": "the code and we'll",
    "start": "556880",
    "end": "559519"
  },
  {
    "text": "compile and run and we'll view it like",
    "start": "559519",
    "end": "561680"
  },
  {
    "text": "that",
    "start": "561680",
    "end": "563120"
  },
  {
    "text": "anyway guys that's about all i have for",
    "start": "563120",
    "end": "565040"
  },
  {
    "text": "a raise thanks for watching i hope you",
    "start": "565040",
    "end": "566640"
  },
  {
    "text": "learned something if you did",
    "start": "566640",
    "end": "567760"
  },
  {
    "text": "drop a like hit subscribe i put out",
    "start": "567760",
    "end": "569519"
  },
  {
    "text": "content like this every week",
    "start": "569519",
    "end": "571040"
  },
  {
    "text": "and uh keep on learning have a good",
    "start": "571040",
    "end": "572720"
  },
  {
    "text": "night bye",
    "start": "572720",
    "end": "576079"
  }
]