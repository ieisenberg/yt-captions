[
  {
    "text": "[Music]",
    "start": "20",
    "end": "1280"
  },
  {
    "text": "repleni scazib a string of letters that",
    "start": "1280",
    "end": "3679"
  },
  {
    "text": "sounds like it comes from an alien",
    "start": "3679",
    "end": "5040"
  },
  {
    "text": "language but actually it's something",
    "start": "5040",
    "end": "6960"
  },
  {
    "text": "much much simpler the intel processor",
    "start": "6960",
    "end": "9440"
  },
  {
    "text": "likely in your computer right now is a",
    "start": "9440",
    "end": "11360"
  },
  {
    "text": "beast and its assembly is so powerful",
    "start": "11360",
    "end": "13440"
  },
  {
    "text": "that some even refer to it as an",
    "start": "13440",
    "end": "14880"
  },
  {
    "text": "interpreted language repany scasb is an",
    "start": "14880",
    "end": "17440"
  },
  {
    "text": "x86 instruction and what it does under",
    "start": "17440",
    "end": "19840"
  },
  {
    "text": "the hood is actually pretty astonishing",
    "start": "19840",
    "end": "22000"
  },
  {
    "text": "the stir len function a c subroutine",
    "start": "22000",
    "end": "24480"
  },
  {
    "text": "used to calculate the length of a string",
    "start": "24480",
    "end": "26640"
  },
  {
    "text": "can be executed almost entirely with",
    "start": "26640",
    "end": "28720"
  },
  {
    "text": "this instruction alone but how does it",
    "start": "28720",
    "end": "31359"
  },
  {
    "text": "all work refni stands for repeat while",
    "start": "31359",
    "end": "34160"
  },
  {
    "text": "not equal and skasib stands for scan the",
    "start": "34160",
    "end": "37600"
  },
  {
    "text": "string byte to set up the processor for",
    "start": "37600",
    "end": "39680"
  },
  {
    "text": "this instruction register esi must point",
    "start": "39680",
    "end": "42480"
  },
  {
    "text": "to a string to be measured and eax and",
    "start": "42480",
    "end": "45039"
  },
  {
    "text": "ecx must both be zero now run the",
    "start": "45039",
    "end": "48239"
  },
  {
    "text": "instruction and let the magic begin in",
    "start": "48239",
    "end": "50320"
  },
  {
    "text": "one instruction under the hood while the",
    "start": "50320",
    "end": "52320"
  },
  {
    "text": "byte pointed to by esi is not a null",
    "start": "52320",
    "end": "54800"
  },
  {
    "text": "byte ecx is decremented and then eci",
    "start": "54800",
    "end": "58000"
  },
  {
    "text": "moves to the next character at the end",
    "start": "58000",
    "end": "60320"
  },
  {
    "text": "of the instructions executed ecx",
    "start": "60320",
    "end": "62320"
  },
  {
    "text": "contains the negative length of the",
    "start": "62320",
    "end": "63840"
  },
  {
    "text": "string negate the ecx value and boom",
    "start": "63840",
    "end": "66560"
  },
  {
    "text": "that's your string length subscribe for",
    "start": "66560",
    "end": "68880"
  },
  {
    "text": "more crazy intel instructions and i'll",
    "start": "68880",
    "end": "70479"
  },
  {
    "text": "see you in the next video",
    "start": "70479",
    "end": "73840"
  }
]