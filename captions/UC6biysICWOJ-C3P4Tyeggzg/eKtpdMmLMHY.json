[
  {
    "start": "0",
    "end": "29000"
  },
  {
    "text": "the year is 2025 and yes there are still",
    "start": "40",
    "end": "3040"
  },
  {
    "text": "basic buffer overflows happening in",
    "start": "3040",
    "end": "4720"
  },
  {
    "text": "software a 9.8 severity cve just got",
    "start": "4720",
    "end": "7680"
  },
  {
    "text": "released for rsync a widely loved piece",
    "start": "7680",
    "end": "9920"
  },
  {
    "text": "of software that we'll talk about in",
    "start": "9920",
    "end": "11599"
  },
  {
    "text": "this video now if you don't know who I",
    "start": "11599",
    "end": "13400"
  },
  {
    "text": "am hi my name is Ed I am an offensive",
    "start": "13400",
    "end": "16320"
  },
  {
    "text": "security specialist I'm a security",
    "start": "16320",
    "end": "17800"
  },
  {
    "text": "engineer tldr I'm a hacker I've been",
    "start": "17800",
    "end": "20240"
  },
  {
    "text": "looking for bugs and mitigating bugs and",
    "start": "20240",
    "end": "21960"
  },
  {
    "text": "software for about 10 years now this bug",
    "start": "21960",
    "end": "24119"
  },
  {
    "text": "is super interesting to me because of",
    "start": "24119",
    "end": "25400"
  },
  {
    "text": "how widely used the software is and how",
    "start": "25400",
    "end": "27960"
  },
  {
    "text": "simple the bug is the name sync comes",
    "start": "27960",
    "end": "30679"
  },
  {
    "start": "29000",
    "end": "97000"
  },
  {
    "text": "from remote sync where you're able to",
    "start": "30679",
    "end": "32680"
  },
  {
    "text": "specify between a client and a server",
    "start": "32680",
    "end": "34520"
  },
  {
    "text": "that you want to have a particular",
    "start": "34520",
    "end": "35879"
  },
  {
    "text": "folder on your computer synced across",
    "start": "35879",
    "end": "38280"
  },
  {
    "text": "two locations now when I look at any bug",
    "start": "38280",
    "end": "40079"
  },
  {
    "text": "or I want to root cause any",
    "start": "40079",
    "end": "41160"
  },
  {
    "text": "vulnerability step one is you got to",
    "start": "41160",
    "end": "42719"
  },
  {
    "text": "figure out how the protocol works I did",
    "start": "42719",
    "end": "44399"
  },
  {
    "text": "some research on the protocol the way",
    "start": "44399",
    "end": "46360"
  },
  {
    "text": "that this works is that walks the entire",
    "start": "46360",
    "end": "48559"
  },
  {
    "text": "file system and creates a list of files",
    "start": "48559",
    "end": "50680"
  },
  {
    "text": "that exist on both locations it iterates",
    "start": "50680",
    "end": "53399"
  },
  {
    "text": "over every file and creates a list of",
    "start": "53399",
    "end": "55399"
  },
  {
    "text": "check sums now what those check sums",
    "start": "55399",
    "end": "56960"
  },
  {
    "text": "allow you to do is they give you the",
    "start": "56960",
    "end": "58960"
  },
  {
    "text": "speed that sync is known for instead of",
    "start": "58960",
    "end": "61359"
  },
  {
    "text": "sending the entirety of every file",
    "start": "61359",
    "end": "64080"
  },
  {
    "text": "inside the folder that you want to sync",
    "start": "64080",
    "end": "65799"
  },
  {
    "text": "it runs these things called rolling sums",
    "start": "65799",
    "end": "67600"
  },
  {
    "text": "it breaks the file into these individual",
    "start": "67600",
    "end": "69960"
  },
  {
    "text": "chunks these chunks are being used to",
    "start": "69960",
    "end": "71960"
  },
  {
    "text": "determine if that part of the file has",
    "start": "71960",
    "end": "74040"
  },
  {
    "text": "changed on the remote server you verify",
    "start": "74040",
    "end": "76479"
  },
  {
    "text": "that the rolling sum and the check sum",
    "start": "76479",
    "end": "78400"
  },
  {
    "text": "if they have changed it then transmits",
    "start": "78400",
    "end": "80799"
  },
  {
    "text": "only the chunk of that file to the other",
    "start": "80799",
    "end": "83040"
  },
  {
    "text": "end of the process and doing this",
    "start": "83040",
    "end": "84680"
  },
  {
    "text": "actually makes the rsync process",
    "start": "84680",
    "end": "86680"
  },
  {
    "text": "extremely fast and extremely efficient",
    "start": "86680",
    "end": "89040"
  },
  {
    "text": "and this is why rsync is has been loved",
    "start": "89040",
    "end": "90520"
  },
  {
    "text": "so much over the years is that it is a",
    "start": "90520",
    "end": "92600"
  },
  {
    "text": "protocol that only sends the necessary",
    "start": "92600",
    "end": "95000"
  },
  {
    "text": "data with very minimal overhead the",
    "start": "95000",
    "end": "97720"
  },
  {
    "start": "97000",
    "end": "448000"
  },
  {
    "text": "vulnerability we're talking about today",
    "start": "97720",
    "end": "99240"
  },
  {
    "text": "is actually due to an explicit issue in",
    "start": "99240",
    "end": "103079"
  },
  {
    "text": "that check some length handling a heat",
    "start": "103079",
    "end": "104840"
  },
  {
    "text": "buffer overflow flaw that is found that",
    "start": "104840",
    "end": "106799"
  },
  {
    "text": "allows a remote attacker to overflow the",
    "start": "106799",
    "end": "109119"
  },
  {
    "text": "contents of the Heap and they can use",
    "start": "109119",
    "end": "110840"
  },
  {
    "text": "that to get remote code execution this",
    "start": "110840",
    "end": "112640"
  },
  {
    "text": "bug is a uh very funny kind of comical",
    "start": "112640",
    "end": "115719"
  },
  {
    "text": "mistake as I was going through the code",
    "start": "115719",
    "end": "117719"
  },
  {
    "text": "trying to figure out the bug here and I",
    "start": "117719",
    "end": "119000"
  },
  {
    "text": "was looking at the report open wall I",
    "start": "119000",
    "end": "120600"
  },
  {
    "text": "saw this line of code and I'm like",
    "start": "120600",
    "end": "122600"
  },
  {
    "text": "surely they're not doing this right when",
    "start": "122600",
    "end": "125320"
  },
  {
    "text": "the server is reading up the check sums",
    "start": "125320",
    "end": "128319"
  },
  {
    "text": "from the client arsing protocol is",
    "start": "128319",
    "end": "129920"
  },
  {
    "text": "designed to not send entire files to",
    "start": "129920",
    "end": "132000"
  },
  {
    "text": "only send chunks of files and the way",
    "start": "132000",
    "end": "134200"
  },
  {
    "text": "that works is it sends up a check sum",
    "start": "134200",
    "end": "136040"
  },
  {
    "text": "and Compares that against the actual",
    "start": "136040",
    "end": "137560"
  },
  {
    "text": "check sum of the file if they don't",
    "start": "137560",
    "end": "138920"
  },
  {
    "text": "match it sends that chunk What's",
    "start": "138920",
    "end": "140760"
  },
  {
    "text": "Happening Here is the server is reading",
    "start": "140760",
    "end": "142720"
  },
  {
    "text": "up all the check sums from the client",
    "start": "142720",
    "end": "144920"
  },
  {
    "text": "and this read buff function is reading",
    "start": "144920",
    "end": "147040"
  },
  {
    "text": "S2 length the length of the buffer in",
    "start": "147040",
    "end": "149959"
  },
  {
    "text": "into some too if you're in the world of",
    "start": "149959",
    "end": "151920"
  },
  {
    "text": "hacking if this is not news to you",
    "start": "151920",
    "end": "153200"
  },
  {
    "text": "you're probably thinking oh reading into",
    "start": "153200",
    "end": "155319"
  },
  {
    "text": "a buffer that means that the length has",
    "start": "155319",
    "end": "157239"
  },
  {
    "text": "to be controlled by the attacker case",
    "start": "157239",
    "end": "159080"
  },
  {
    "text": "Clos that's the vulnerability and that",
    "start": "159080",
    "end": "160959"
  },
  {
    "text": "that's exactly what I thought when I",
    "start": "160959",
    "end": "162120"
  },
  {
    "text": "read this I was like oh okay that has to",
    "start": "162120",
    "end": "163840"
  },
  {
    "text": "mean that S2 is a hacker controlled",
    "start": "163840",
    "end": "166360"
  },
  {
    "text": "value but something weird happened S2",
    "start": "166360",
    "end": "168519"
  },
  {
    "text": "length actually does come off of the",
    "start": "168519",
    "end": "170239"
  },
  {
    "text": "network and you'll see it happened right",
    "start": "170239",
    "end": "171599"
  },
  {
    "text": "here um S2 length is being set in this",
    "start": "171599",
    "end": "174920"
  },
  {
    "text": "read sum head function it's the check",
    "start": "174920",
    "end": "177760"
  },
  {
    "text": "sum head right the header of the check",
    "start": "177760",
    "end": "179080"
  },
  {
    "text": "sum data type sum of S2 length is equal",
    "start": "179080",
    "end": "181680"
  },
  {
    "text": "to either a default value or if the",
    "start": "181680",
    "end": "184360"
  },
  {
    "text": "protocol version is after protocol 27",
    "start": "184360",
    "end": "187040"
  },
  {
    "text": "we're going to read an INT off the wire",
    "start": "187040",
    "end": "188959"
  },
  {
    "text": "but you'll see here that we are",
    "start": "188959",
    "end": "190360"
  },
  {
    "text": "validating that S2 length is not less",
    "start": "190360",
    "end": "193159"
  },
  {
    "text": "than zero and that S2 length is not",
    "start": "193159",
    "end": "195799"
  },
  {
    "text": "greater than some Max digest length",
    "start": "195799",
    "end": "198120"
  },
  {
    "text": "value right and that Max digest length",
    "start": "198120",
    "end": "200599"
  },
  {
    "text": "value is actually set in uh this file",
    "start": "200599",
    "end": "203360"
  },
  {
    "text": "here it's being set to the maximum",
    "start": "203360",
    "end": "205760"
  },
  {
    "text": "length of a digest so if we're using",
    "start": "205760",
    "end": "207680"
  },
  {
    "text": "shot 256s to do our check sums is going",
    "start": "207680",
    "end": "209959"
  },
  {
    "text": "to set the max Gest length to that value",
    "start": "209959",
    "end": "212239"
  },
  {
    "text": "when I tell you that I literally sat",
    "start": "212239",
    "end": "213720"
  },
  {
    "text": "here and I just stared at this line for",
    "start": "213720",
    "end": "216560"
  },
  {
    "text": "I was just like I'm sitting here and I'm",
    "start": "216560",
    "end": "218280"
  },
  {
    "text": "like what like for I was here for 30",
    "start": "218280",
    "end": "220879"
  },
  {
    "text": "minutes and I'm just like they're",
    "start": "220879",
    "end": "222040"
  },
  {
    "text": "checking the value how is this a",
    "start": "222040",
    "end": "223959"
  },
  {
    "text": "vulnerability but if you go back and you",
    "start": "223959",
    "end": "226720"
  },
  {
    "text": "read the open wall report when Max",
    "start": "226720",
    "end": "228920"
  },
  {
    "text": "digest length exceeds the fixed sum",
    "start": "228920",
    "end": "231799"
  },
  {
    "text": "length value 16 bytes and that's when",
    "start": "231799",
    "end": "234439"
  },
  {
    "text": "the light bulb went off so what is the",
    "start": "234439",
    "end": "236040"
  },
  {
    "text": "problem if we're if we're doing some",
    "start": "236040",
    "end": "237439"
  },
  {
    "text": "validation on the length we're checking",
    "start": "237439",
    "end": "238680"
  },
  {
    "text": "for Less Than Zero we're checking for",
    "start": "238680",
    "end": "239959"
  },
  {
    "text": "greater than some max value what is the",
    "start": "239959",
    "end": "241680"
  },
  {
    "text": "issue here the issue is somewhat",
    "start": "241680",
    "end": "245319"
  },
  {
    "text": "hilariously that the actual length of",
    "start": "245319",
    "end": "248040"
  },
  {
    "text": "the buffer is not dynamically allocated",
    "start": "248040",
    "end": "251079"
  },
  {
    "text": "it is statically sized to a wrong value",
    "start": "251079",
    "end": "253959"
  },
  {
    "text": "you'll see that the sum length value",
    "start": "253959",
    "end": "255519"
  },
  {
    "text": "here is actually just a hard pound toine",
    "start": "255519",
    "end": "258479"
  },
  {
    "text": "of it's just a hard pound toine of 16 so",
    "start": "258479",
    "end": "261600"
  },
  {
    "text": "the bug is if you're using a check sum",
    "start": "261600",
    "end": "264080"
  },
  {
    "text": "that is larger than 16 you are going to",
    "start": "264080",
    "end": "266600"
  },
  {
    "text": "overflow a heat buffer now the question",
    "start": "266600",
    "end": "268880"
  },
  {
    "text": "arises How would was this not caught how",
    "start": "268880",
    "end": "270800"
  },
  {
    "text": "have we not seen this before I think the",
    "start": "270800",
    "end": "272400"
  },
  {
    "text": "issue is because the sum buff structure",
    "start": "272400",
    "end": "274759"
  },
  {
    "text": "is so small over time the sum buff",
    "start": "274759",
    "end": "277520"
  },
  {
    "text": "structure probably got padded out by the",
    "start": "277520",
    "end": "279039"
  },
  {
    "text": "Heap probably added some padding bites",
    "start": "279039",
    "end": "280479"
  },
  {
    "text": "to the front of the Heap to make it more",
    "start": "280479",
    "end": "281520"
  },
  {
    "text": "efficient and then as a result like when",
    "start": "281520",
    "end": "283520"
  },
  {
    "text": "this overflowed you know at most 48",
    "start": "283520",
    "end": "286199"
  },
  {
    "text": "bytes greater than it should have no one",
    "start": "286199",
    "end": "288000"
  },
  {
    "text": "really caught it no one really cared",
    "start": "288000",
    "end": "289720"
  },
  {
    "text": "maybe there were other structures in",
    "start": "289720",
    "end": "290919"
  },
  {
    "text": "front of it that were string based maybe",
    "start": "290919",
    "end": "292479"
  },
  {
    "text": "like there's a bunch of reasons why this",
    "start": "292479",
    "end": "294160"
  },
  {
    "text": "could have gone unnoticed now what is",
    "start": "294160",
    "end": "296520"
  },
  {
    "text": "interesting about this bug is I've seen",
    "start": "296520",
    "end": "298560"
  },
  {
    "text": "a lot of bugs in my time right a single",
    "start": "298560",
    "end": "301280"
  },
  {
    "text": "buffer overflow is rarely enough to be",
    "start": "301280",
    "end": "303880"
  },
  {
    "text": "able to actually knock a server over",
    "start": "303880",
    "end": "305840"
  },
  {
    "text": "entirely right now don't forget this is",
    "start": "305840",
    "end": "307960"
  },
  {
    "text": "one of six cves that were found the",
    "start": "307960",
    "end": "311160"
  },
  {
    "text": "reason why a heat buffer overflow can't",
    "start": "311160",
    "end": "312960"
  },
  {
    "text": "just be exploited on its own is you need",
    "start": "312960",
    "end": "315000"
  },
  {
    "text": "to know a lot of other information about",
    "start": "315000",
    "end": "316919"
  },
  {
    "text": "the system or have very fine grain",
    "start": "316919",
    "end": "319039"
  },
  {
    "text": "control to do a bunch of corrupted",
    "start": "319039",
    "end": "320560"
  },
  {
    "text": "rights and then do some reads to leak",
    "start": "320560",
    "end": "322160"
  },
  {
    "text": "information out ah but what if I told",
    "start": "322160",
    "end": "324000"
  },
  {
    "text": "you that there was another vulnerability",
    "start": "324000",
    "end": "325960"
  },
  {
    "text": "an info leak via uninitialized stack",
    "start": "325960",
    "end": "328600"
  },
  {
    "text": "contents so a flaw was found in the",
    "start": "328600",
    "end": "330479"
  },
  {
    "text": "rsync Damon that can be triggered",
    "start": "330479",
    "end": "331720"
  },
  {
    "text": "remotely when comparing file check sums",
    "start": "331720",
    "end": "334360"
  },
  {
    "text": "another classic example of not bad",
    "start": "334360",
    "end": "336360"
  },
  {
    "text": "coding but just bad practice when it",
    "start": "336360",
    "end": "337720"
  },
  {
    "text": "comes to variables on the stack",
    "start": "337720",
    "end": "339319"
  },
  {
    "text": "especially variables on the stack that",
    "start": "339319",
    "end": "341319"
  },
  {
    "text": "will later be checked to do some kind of",
    "start": "341319",
    "end": "343120"
  },
  {
    "text": "like very me memory critical operation",
    "start": "343120",
    "end": "345919"
  },
  {
    "text": "um if you guys aren't aware if you're",
    "start": "345919",
    "end": "347120"
  },
  {
    "text": "not coders when you make a variable on",
    "start": "347120",
    "end": "349120"
  },
  {
    "text": "the stack in C like this if another",
    "start": "349120",
    "end": "351520"
  },
  {
    "text": "function has already occupied that space",
    "start": "351520",
    "end": "354000"
  },
  {
    "text": "on the stack right so for example we",
    "start": "354000",
    "end": "355600"
  },
  {
    "text": "call function Fu in Main and Main",
    "start": "355600",
    "end": "358120"
  },
  {
    "text": "returns back to Main and then we call",
    "start": "358120",
    "end": "359639"
  },
  {
    "text": "function bar from Main and then we go",
    "start": "359639",
    "end": "361160"
  },
  {
    "text": "back to main right while bar is",
    "start": "361160",
    "end": "362720"
  },
  {
    "text": "executing variables like this will",
    "start": "362720",
    "end": "365360"
  },
  {
    "text": "maintain the value that they used to",
    "start": "365360",
    "end": "367400"
  },
  {
    "text": "have in the same location in Fu now if",
    "start": "367400",
    "end": "369319"
  },
  {
    "text": "that confus the crap out of you what",
    "start": "369319",
    "end": "370759"
  },
  {
    "text": "this effectively means is that this is",
    "start": "370759",
    "end": "372080"
  },
  {
    "text": "going to have a random value now random",
    "start": "372080",
    "end": "374400"
  },
  {
    "text": "is an air quotes it just means a value",
    "start": "374400",
    "end": "375919"
  },
  {
    "text": "that was previously there and attacker",
    "start": "375919",
    "end": "378120"
  },
  {
    "text": "can use this value to leak information",
    "start": "378120",
    "end": "381720"
  },
  {
    "text": "out of the stack effect there's a memory",
    "start": "381720",
    "end": "383240"
  },
  {
    "text": "leak here that allows you to reveal",
    "start": "383240",
    "end": "385080"
  },
  {
    "text": "information about the process the",
    "start": "385080",
    "end": "386840"
  },
  {
    "text": "problem with this is this bypasses a",
    "start": "386840",
    "end": "388840"
  },
  {
    "text": "core mitigation in software called aslr",
    "start": "388840",
    "end": "392880"
  },
  {
    "text": "address space layout randomization if I",
    "start": "392880",
    "end": "395000"
  },
  {
    "text": "have a program bsh right what's",
    "start": "395000",
    "end": "397680"
  },
  {
    "text": "happening in bsh is the program has been",
    "start": "397680",
    "end": "400560"
  },
  {
    "text": "randomized to sit at a random memory",
    "start": "400560",
    "end": "402720"
  },
  {
    "text": "address if I go to Pro uh cat proc self",
    "start": "402720",
    "end": "406199"
  },
  {
    "text": "Maps right the location of all of the",
    "start": "406199",
    "end": "410599"
  },
  {
    "text": "binaries of all the libraries in my",
    "start": "410599",
    "end": "413000"
  },
  {
    "text": "program have been set to a generally",
    "start": "413000",
    "end": "415199"
  },
  {
    "text": "random location so that if there was a",
    "start": "415199",
    "end": "416960"
  },
  {
    "text": "vulnerability in Ben that's a bad",
    "start": "416960",
    "end": "418599"
  },
  {
    "text": "example but if there's a vulnerability",
    "start": "418599",
    "end": "419680"
  },
  {
    "text": "in the process I wouldn't know where my",
    "start": "419680",
    "end": "421840"
  },
  {
    "text": "code lives so I couldn't return and do",
    "start": "421840",
    "end": "424080"
  },
  {
    "text": "something malicious Now by having a leak",
    "start": "424080",
    "end": "426680"
  },
  {
    "text": "in generator. C what this allows us to",
    "start": "426680",
    "end": "429319"
  },
  {
    "text": "do is take information that was on the",
    "start": "429319",
    "end": "431680"
  },
  {
    "text": "stack which could be a pointer to the",
    "start": "431680",
    "end": "433479"
  },
  {
    "text": "Heap which could be a pointer to a",
    "start": "433479",
    "end": "435280"
  },
  {
    "text": "library which could be a pointer to the",
    "start": "435280",
    "end": "437039"
  },
  {
    "text": "stack elsewhere and then construct an",
    "start": "437039",
    "end": "439560"
  },
  {
    "text": "image of what the process image looks",
    "start": "439560",
    "end": "441400"
  },
  {
    "text": "like and then use that to exploit the",
    "start": "441400",
    "end": "443360"
  },
  {
    "text": "Heap overflow right to overflow that",
    "start": "443360",
    "end": "445120"
  },
  {
    "text": "data with pointers to other things that",
    "start": "445120",
    "end": "447080"
  },
  {
    "text": "could be put in there maliciously by a",
    "start": "447080",
    "end": "448560"
  },
  {
    "start": "448000",
    "end": "661000"
  },
  {
    "text": "hacker now there are again again four",
    "start": "448560",
    "end": "449919"
  },
  {
    "text": "other vulnerabilities so a server leaks",
    "start": "449919",
    "end": "451919"
  },
  {
    "text": "arbitrary client files by using",
    "start": "451919",
    "end": "453680"
  },
  {
    "text": "specially constructed checkm values for",
    "start": "453680",
    "end": "455599"
  },
  {
    "text": "arbitrary what this one effectively is",
    "start": "455599",
    "end": "457720"
  },
  {
    "text": "is you are able to leak files out of the",
    "start": "457720",
    "end": "460080"
  },
  {
    "text": "server by creating a check sum for every",
    "start": "460080",
    "end": "463000"
  },
  {
    "text": "bite like all two five six potential",
    "start": "463000",
    "end": "464800"
  },
  {
    "text": "bytes and then comparing the index of",
    "start": "464800",
    "end": "467159"
  },
  {
    "text": "the file against that check sum and",
    "start": "467159",
    "end": "469120"
  },
  {
    "text": "using that to leak the contents it's a",
    "start": "469120",
    "end": "470639"
  },
  {
    "text": "very interesting side Channel analysis",
    "start": "470639",
    "end": "472919"
  },
  {
    "text": "thing that isn't very practical unlike",
    "start": "472919",
    "end": "474599"
  },
  {
    "text": "the other two but it is a vulnerability",
    "start": "474599",
    "end": "476400"
  },
  {
    "text": "nonetheless right uh traditional path",
    "start": "476400",
    "end": "478159"
  },
  {
    "text": "reversal basically there's an issue with",
    "start": "478159",
    "end": "480319"
  },
  {
    "text": "their recursive option that I won't go",
    "start": "480319",
    "end": "481800"
  },
  {
    "text": "into too deep and then a time of check",
    "start": "481800",
    "end": "484400"
  },
  {
    "text": "time of use race condition in the way",
    "start": "484400",
    "end": "486400"
  },
  {
    "text": "that it handles symbolic links's",
    "start": "486400",
    "end": "487720"
  },
  {
    "text": "interesting it's called the time of",
    "start": "487720",
    "end": "488800"
  },
  {
    "text": "check time of use when you have a",
    "start": "488800",
    "end": "490199"
  },
  {
    "text": "vulnerability that's a race condition",
    "start": "490199",
    "end": "491520"
  },
  {
    "text": "what this effectively means that there",
    "start": "491520",
    "end": "492720"
  },
  {
    "text": "is a Time Delta between you when you are",
    "start": "492720",
    "end": "494960"
  },
  {
    "text": "checking a a certain condition and when",
    "start": "494960",
    "end": "497319"
  },
  {
    "text": "you're acting on it right so by default",
    "start": "497319",
    "end": "499479"
  },
  {
    "text": "rsync will not handle symbolic links",
    "start": "499479",
    "end": "501919"
  },
  {
    "text": "right you will you are not able to",
    "start": "501919",
    "end": "503720"
  },
  {
    "text": "either upload or download symbolic link",
    "start": "503720",
    "end": "505599"
  },
  {
    "text": "files what that means is that when it",
    "start": "505599",
    "end": "507319"
  },
  {
    "text": "checks for a certain file it's saying",
    "start": "507319",
    "end": "509080"
  },
  {
    "text": "are you symbolic link yes okay back off",
    "start": "509080",
    "end": "511879"
  },
  {
    "text": "is if you check for a file and you see",
    "start": "511879",
    "end": "514039"
  },
  {
    "text": "that it is a regular file there's some",
    "start": "514039",
    "end": "515839"
  },
  {
    "text": "amount of time Delta between that check",
    "start": "515839",
    "end": "517680"
  },
  {
    "text": "and actually acting on it and because of",
    "start": "517680",
    "end": "519719"
  },
  {
    "text": "that you can actually replace the file",
    "start": "519719",
    "end": "521518"
  },
  {
    "text": "in that time with a symbolic link and",
    "start": "521519",
    "end": "523919"
  },
  {
    "text": "then use that to leak other files off",
    "start": "523919",
    "end": "526080"
  },
  {
    "text": "the computer and then finally this fifth",
    "start": "526080",
    "end": "527880"
  },
  {
    "text": "one uh another issue with symbolic link",
    "start": "527880",
    "end": "529760"
  },
  {
    "text": "reversal not super important but I just",
    "start": "529760",
    "end": "531720"
  },
  {
    "text": "want to say you know bugs happen we are",
    "start": "531720",
    "end": "533640"
  },
  {
    "text": "in 2025 and uh basic buffer overflows",
    "start": "533640",
    "end": "536839"
  },
  {
    "text": "continue to be an issue now the Heap",
    "start": "536839",
    "end": "539160"
  },
  {
    "text": "espe especially in GBC the GBC PT Malik",
    "start": "539160",
    "end": "542360"
  },
  {
    "text": "Heap is one of the highly the most",
    "start": "542360",
    "end": "544560"
  },
  {
    "text": "protected heaps that is out there",
    "start": "544560",
    "end": "546600"
  },
  {
    "text": "obviously there's a bipass for every",
    "start": "546600",
    "end": "547959"
  },
  {
    "text": "protection almost um but you know it's",
    "start": "547959",
    "end": "550079"
  },
  {
    "text": "just it is crazy we still have to deal",
    "start": "550079",
    "end": "551560"
  },
  {
    "text": "with this now the question on everyone's",
    "start": "551560",
    "end": "554040"
  },
  {
    "text": "mind would rust have caught this the",
    "start": "554040",
    "end": "556240"
  },
  {
    "text": "answer is yes yes uh this is one of the",
    "start": "556240",
    "end": "557880"
  },
  {
    "text": "cases where a simple runtime uh bounds",
    "start": "557880",
    "end": "560920"
  },
  {
    "text": "check on on an array would have caught",
    "start": "560920",
    "end": "562880"
  },
  {
    "text": "this now it still turns the condition",
    "start": "562880",
    "end": "564320"
  },
  {
    "text": "into a Doss right it is still a denial",
    "start": "564320",
    "end": "566120"
  },
  {
    "text": "of service so it's not like just a",
    "start": "566120",
    "end": "567760"
  },
  {
    "text": "Panacea where you know suddenly there",
    "start": "567760",
    "end": "569880"
  },
  {
    "text": "are no issues with it software it still",
    "start": "569880",
    "end": "571600"
  },
  {
    "text": "could Doss it um but it would not allow",
    "start": "571600",
    "end": "573800"
  },
  {
    "text": "this to be a condition that is remotely",
    "start": "573800",
    "end": "575720"
  },
  {
    "text": "exploitable by a hacker and then same",
    "start": "575720",
    "end": "578560"
  },
  {
    "text": "thing with the info leak uh rust will",
    "start": "578560",
    "end": "580519"
  },
  {
    "text": "always rust has Ri so basically like the",
    "start": "580519",
    "end": "582800"
  },
  {
    "text": "access is initialization um the ability",
    "start": "582800",
    "end": "586120"
  },
  {
    "text": "for you to put a variable on the stack",
    "start": "586120",
    "end": "588120"
  },
  {
    "text": "and it have the contents of the previous",
    "start": "588120",
    "end": "590120"
  },
  {
    "text": "location on the stack is not a thing in",
    "start": "590120",
    "end": "591880"
  },
  {
    "text": "Rust so so these two bugs would have",
    "start": "591880",
    "end": "594360"
  },
  {
    "text": "gone away um this is a side Channel",
    "start": "594360",
    "end": "597800"
  },
  {
    "text": "based on the implementation of the",
    "start": "597800",
    "end": "599399"
  },
  {
    "text": "protocol so no actually this would not",
    "start": "599399",
    "end": "601000"
  },
  {
    "text": "have been solved by rust um this would",
    "start": "601000",
    "end": "603360"
  },
  {
    "text": "not have been solved by rust this is a",
    "start": "603360",
    "end": "604680"
  },
  {
    "text": "logic issue in their implementation of",
    "start": "604680",
    "end": "606560"
  },
  {
    "text": "recursion same thing with the safe links",
    "start": "606560",
    "end": "608920"
  },
  {
    "text": "uh this is not going to be solved by",
    "start": "608920",
    "end": "610000"
  },
  {
    "text": "rust and then time of check time of use",
    "start": "610000",
    "end": "612000"
  },
  {
    "text": "this actually you could argue could be",
    "start": "612000",
    "end": "613600"
  },
  {
    "text": "exacerbated by rust what's critical",
    "start": "613600",
    "end": "615640"
  },
  {
    "text": "about time of check time of use",
    "start": "615640",
    "end": "617000"
  },
  {
    "text": "vulnerabilities is the time between when",
    "start": "617000",
    "end": "619079"
  },
  {
    "text": "you check and the time between when you",
    "start": "619079",
    "end": "620279"
  },
  {
    "text": "use it the longer that gets the easier",
    "start": "620279",
    "end": "622279"
  },
  {
    "text": "it is to actually do something evil in",
    "start": "622279",
    "end": "624279"
  },
  {
    "text": "between there and because of the",
    "start": "624279",
    "end": "626279"
  },
  {
    "text": "overhead that rust does add not a ton",
    "start": "626279",
    "end": "628279"
  },
  {
    "text": "but it is there um um this would",
    "start": "628279",
    "end": "630079"
  },
  {
    "text": "definitely be easier to do easier to",
    "start": "630079",
    "end": "632279"
  },
  {
    "text": "exploit if this program were written in",
    "start": "632279",
    "end": "634079"
  },
  {
    "text": "Rust anyway guys I hope you like these",
    "start": "634079",
    "end": "635880"
  },
  {
    "text": "kinds of videos I've been doing this",
    "start": "635880",
    "end": "637120"
  },
  {
    "text": "like reactionary cve react uh content",
    "start": "637120",
    "end": "640320"
  },
  {
    "text": "for a while if you like this stuff",
    "start": "640320",
    "end": "641959"
  },
  {
    "text": "please let me know in the comments I I",
    "start": "641959",
    "end": "643480"
  },
  {
    "text": "want to make sure I'm making videos that",
    "start": "643480",
    "end": "644920"
  },
  {
    "text": "you guys actually enjoy if you're new",
    "start": "644920",
    "end": "646560"
  },
  {
    "text": "here hit subscribe and then I did a",
    "start": "646560",
    "end": "648279"
  },
  {
    "text": "similar breakdown on the seven zip",
    "start": "648279",
    "end": "650079"
  },
  {
    "text": "vulnerabilities from a few months ago",
    "start": "650079",
    "end": "651720"
  },
  {
    "text": "that I had a really good time uh hacking",
    "start": "651720",
    "end": "653279"
  },
  {
    "text": "we did a lot of fuzzing and uh we found",
    "start": "653279",
    "end": "655040"
  },
  {
    "text": "the nature of the bug and wrote a little",
    "start": "655040",
    "end": "656600"
  },
  {
    "text": "write up on it so that's it for now guys",
    "start": "656600",
    "end": "658160"
  },
  {
    "text": "I'll see you in the next one take care",
    "start": "658160",
    "end": "662680"
  }
]