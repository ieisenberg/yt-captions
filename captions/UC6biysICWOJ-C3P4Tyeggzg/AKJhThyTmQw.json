[
  {
    "start": "0",
    "end": "20000"
  },
  {
    "text": "are go-tos illegal you've probably heard",
    "start": "120",
    "end": "2399"
  },
  {
    "text": "the argument that go-tos make your code",
    "start": "2399",
    "end": "4200"
  },
  {
    "text": "unreadable but this code is unreadable",
    "start": "4200",
    "end": "7000"
  },
  {
    "text": "and there's not a go-to in sight so",
    "start": "7000",
    "end": "9760"
  },
  {
    "text": "what's the deal with go-tos in this",
    "start": "9760",
    "end": "11280"
  },
  {
    "text": "video we'll talk about what a go-to is",
    "start": "11280",
    "end": "12920"
  },
  {
    "text": "under the hood how you can use go-tos",
    "start": "12920",
    "end": "15080"
  },
  {
    "text": "incorrectly and how to correctly use",
    "start": "15080",
    "end": "16800"
  },
  {
    "text": "them to make your code not only more",
    "start": "16800",
    "end": "18199"
  },
  {
    "text": "readable but more efficient let's Dive",
    "start": "18199",
    "end": "20119"
  },
  {
    "start": "20000",
    "end": "88000"
  },
  {
    "text": "Right In to discuss go-tos we need to",
    "start": "20119",
    "end": "21640"
  },
  {
    "text": "First understand what a go-to actually",
    "start": "21640",
    "end": "23599"
  },
  {
    "text": "is here I'm looking at some code and in",
    "start": "23599",
    "end": "25640"
  },
  {
    "text": "the code we do some pretty",
    "start": "25640",
    "end": "26640"
  },
  {
    "text": "straightforward stuff if argc is equal",
    "start": "26640",
    "end": "29359"
  },
  {
    "text": "to two which means that we gave it two",
    "start": "29359",
    "end": "30880"
  },
  {
    "text": "command line arguments we invoke the",
    "start": "30880",
    "end": "33000"
  },
  {
    "text": "goto statement that tells the compiler",
    "start": "33000",
    "end": "35120"
  },
  {
    "text": "to insert code that will make the code",
    "start": "35120",
    "end": "37120"
  },
  {
    "text": "run at the print label we Define a label",
    "start": "37120",
    "end": "40280"
  },
  {
    "text": "which is different from a function",
    "start": "40280",
    "end": "41440"
  },
  {
    "text": "that's just an area of code inside of a",
    "start": "41440",
    "end": "43600"
  },
  {
    "text": "function with the name of the label and",
    "start": "43600",
    "end": "45760"
  },
  {
    "text": "then a colon and then code after that so",
    "start": "45760",
    "end": "47719"
  },
  {
    "text": "if we give it to arguments we go to the",
    "start": "47719",
    "end": "50199"
  },
  {
    "text": "print label and then we go there and we",
    "start": "50199",
    "end": "52559"
  },
  {
    "text": "print that we got two arguments awesome",
    "start": "52559",
    "end": "54359"
  },
  {
    "text": "otherwise if this didn't happen we go to",
    "start": "54359",
    "end": "56719"
  },
  {
    "text": "leave and then from there we return zero",
    "start": "56719",
    "end": "59160"
  },
  {
    "text": "and we can see under the the H it's",
    "start": "59160",
    "end": "60359"
  },
  {
    "text": "actually going on in our program by just",
    "start": "60359",
    "end": "61719"
  },
  {
    "text": "doing an object dump tacd Mel on what is",
    "start": "61719",
    "end": "65560"
  },
  {
    "text": "and then in main you'll actually see the",
    "start": "65560",
    "end": "67200"
  },
  {
    "text": "exact logic here that we wrote in C in",
    "start": "67200",
    "end": "69680"
  },
  {
    "text": "assembly if you don't fully understand",
    "start": "69680",
    "end": "71159"
  },
  {
    "text": "assembly that's okay all we're doing",
    "start": "71159",
    "end": "72759"
  },
  {
    "text": "here is we're comparing the variable ARG",
    "start": "72759",
    "end": "74840"
  },
  {
    "text": "C to two and if it's not equal we go to",
    "start": "74840",
    "end": "78320"
  },
  {
    "text": "one label but if it is equal we go to",
    "start": "78320",
    "end": "81400"
  },
  {
    "text": "another label what a go to literally is",
    "start": "81400",
    "end": "84560"
  },
  {
    "text": "it inserts a jump instruction in our",
    "start": "84560",
    "end": "87079"
  },
  {
    "text": "code in assembly now you're probably",
    "start": "87079",
    "end": "89560"
  },
  {
    "start": "88000",
    "end": "199000"
  },
  {
    "text": "wonder ing what does this do for us why",
    "start": "89560",
    "end": "91320"
  },
  {
    "text": "would we actually use this and that's",
    "start": "91320",
    "end": "92920"
  },
  {
    "text": "actually a great question because if you",
    "start": "92920",
    "end": "94079"
  },
  {
    "text": "look at this code already we've began to",
    "start": "94079",
    "end": "96399"
  },
  {
    "text": "very heavily obfuscate what the code",
    "start": "96399",
    "end": "98880"
  },
  {
    "text": "does and make it very difficult to read",
    "start": "98880",
    "end": "100840"
  },
  {
    "text": "I'm already just looking at this code",
    "start": "100840",
    "end": "102759"
  },
  {
    "text": "having a hard time understanding what's",
    "start": "102759",
    "end": "104360"
  },
  {
    "text": "going on so this is a bad example of",
    "start": "104360",
    "end": "106439"
  },
  {
    "text": "when go-tos are good and I would argue",
    "start": "106439",
    "end": "108680"
  },
  {
    "text": "using logic like this to use go-tos is",
    "start": "108680",
    "end": "111240"
  },
  {
    "text": "actually really bad but let's go to a",
    "start": "111240",
    "end": "113680"
  },
  {
    "text": "good example pun intended here I have",
    "start": "113680",
    "end": "116159"
  },
  {
    "text": "some basic server functionality and",
    "start": "116159",
    "end": "117880"
  },
  {
    "text": "obviously this is not broken out into",
    "start": "117880",
    "end": "119520"
  },
  {
    "text": "same functions that all do one thing",
    "start": "119520",
    "end": "121439"
  },
  {
    "text": "this is all happening in one function",
    "start": "121439",
    "end": "123079"
  },
  {
    "text": "but this demonstrates the point that I'm",
    "start": "123079",
    "end": "124439"
  },
  {
    "text": "trying to make so to run the server we",
    "start": "124439",
    "end": "126719"
  },
  {
    "text": "open a file and like good C programmers",
    "start": "126719",
    "end": "129239"
  },
  {
    "text": "we check that the return value of that",
    "start": "129239",
    "end": "131520"
  },
  {
    "text": "open call is a good value and if it's",
    "start": "131520",
    "end": "133760"
  },
  {
    "text": "not we print the error for open we leave",
    "start": "133760",
    "end": "135920"
  },
  {
    "text": "our program if we don't fail if we",
    "start": "135920",
    "end": "138200"
  },
  {
    "text": "succeed we move forward and then we",
    "start": "138200",
    "end": "140200"
  },
  {
    "text": "maloc room on the Heap to readin data",
    "start": "140200",
    "end": "142800"
  },
  {
    "text": "from that file if that Malo buffer",
    "start": "142800",
    "end": "145319"
  },
  {
    "text": "returns null a bad value and again we're",
    "start": "145319",
    "end": "147120"
  },
  {
    "text": "checking for that every time because",
    "start": "147120",
    "end": "148280"
  },
  {
    "text": "we're good SE programmers we have to go",
    "start": "148280",
    "end": "150360"
  },
  {
    "text": "and close that file descriptor then go",
    "start": "150360",
    "end": "153040"
  },
  {
    "text": "to print the error for Malik then return",
    "start": "153040",
    "end": "155040"
  },
  {
    "text": "negative 1 and then if that succeeds we",
    "start": "155040",
    "end": "158160"
  },
  {
    "text": "call socket check for a bad value and",
    "start": "158160",
    "end": "161040"
  },
  {
    "text": "then we have to free the previous buffer",
    "start": "161040",
    "end": "162879"
  },
  {
    "text": "we got before we have to close the file",
    "start": "162879",
    "end": "165080"
  },
  {
    "text": "that we opened before and what's",
    "start": "165080",
    "end": "166760"
  },
  {
    "text": "Happening Here is we are increasing",
    "start": "166760",
    "end": "168879"
  },
  {
    "text": "every time there's a possible failure",
    "start": "168879",
    "end": "171000"
  },
  {
    "text": "the amount of duplicative code that we",
    "start": "171000",
    "end": "172879"
  },
  {
    "text": "have to insert right because we already",
    "start": "172879",
    "end": "174879"
  },
  {
    "text": "have close written here and written here",
    "start": "174879",
    "end": "177519"
  },
  {
    "text": "now we have to add free if we have more",
    "start": "177519",
    "end": "180000"
  },
  {
    "text": "conditionally failable code that we",
    "start": "180000",
    "end": "181519"
  },
  {
    "text": "insert this gets very very ugly to",
    "start": "181519",
    "end": "183760"
  },
  {
    "text": "maintain and then even if it succeeds as",
    "start": "183760",
    "end": "186720"
  },
  {
    "text": "good programmers we have to close our",
    "start": "186720",
    "end": "188159"
  },
  {
    "text": "file descriptors and free our memory so",
    "start": "188159",
    "end": "190120"
  },
  {
    "text": "we have to duplicate this code again",
    "start": "190120",
    "end": "192760"
  },
  {
    "text": "this is where go-tos get really magical",
    "start": "192760",
    "end": "195599"
  },
  {
    "text": "I'm going to insert goto into this code",
    "start": "195599",
    "end": "197360"
  },
  {
    "text": "and show you how you can make it a",
    "start": "197360",
    "end": "198480"
  },
  {
    "text": "little bit cleaner so here I've",
    "start": "198480",
    "end": "200280"
  },
  {
    "start": "199000",
    "end": "322000"
  },
  {
    "text": "Rewritten the code but I'm using goto",
    "start": "200280",
    "end": "202200"
  },
  {
    "text": "statements and you should immediately",
    "start": "202200",
    "end": "203879"
  },
  {
    "text": "see that the code is not only more",
    "start": "203879",
    "end": "206360"
  },
  {
    "text": "legible it's less chaotic and every",
    "start": "206360",
    "end": "208799"
  },
  {
    "text": "error State as a Cascade down in the",
    "start": "208799",
    "end": "210799"
  },
  {
    "text": "code doesn't get longer with the",
    "start": "210799",
    "end": "212560"
  },
  {
    "text": "duplicate of code like close FD and free",
    "start": "212560",
    "end": "214599"
  },
  {
    "text": "Malik for example and by the way if any",
    "start": "214599",
    "end": "216640"
  },
  {
    "text": "of the syntax is confusing to you I am",
    "start": "216640",
    "end": "218120"
  },
  {
    "text": "running a course right now called Zero",
    "start": "218120",
    "end": "219519"
  },
  {
    "text": "to Hero C programmer Link in the",
    "start": "219519",
    "end": "220879"
  },
  {
    "text": "description below go check it out if you",
    "start": "220879",
    "end": "222319"
  },
  {
    "text": "want to learn more about the C language",
    "start": "222319",
    "end": "223640"
  },
  {
    "text": "the C syntax really anything C or",
    "start": "223640",
    "end": "226000"
  },
  {
    "text": "assembly related so the major change to",
    "start": "226000",
    "end": "227840"
  },
  {
    "text": "the structure is that I've put a return",
    "start": "227840",
    "end": "229640"
  },
  {
    "text": "value variable at the top of the code",
    "start": "229640",
    "end": "231799"
  },
  {
    "text": "that will use to store our return value",
    "start": "231799",
    "end": "234159"
  },
  {
    "text": "right it's zero success and if we return",
    "start": "234159",
    "end": "236000"
  },
  {
    "text": "anything other than zero we have a",
    "start": "236000",
    "end": "237439"
  },
  {
    "text": "non-success state right and then later",
    "start": "237439",
    "end": "239760"
  },
  {
    "text": "on in the code like for example when our",
    "start": "239760",
    "end": "242120"
  },
  {
    "text": "socket fails right instead of the socket",
    "start": "242120",
    "end": "244239"
  },
  {
    "text": "failing and us having to close a file",
    "start": "244239",
    "end": "246079"
  },
  {
    "text": "descriptor free Malik and that same code",
    "start": "246079",
    "end": "248319"
  },
  {
    "text": "appears all over the place we just do",
    "start": "248319",
    "end": "250680"
  },
  {
    "text": "one go to that goto is a label that will",
    "start": "250680",
    "end": "254760"
  },
  {
    "text": "then fall through and run all those",
    "start": "254760",
    "end": "257160"
  },
  {
    "text": "pieces of code that we had in the",
    "start": "257160",
    "end": "258799"
  },
  {
    "text": "previous example so instead of having to",
    "start": "258799",
    "end": "260680"
  },
  {
    "text": "do free here and close here we can put",
    "start": "260680",
    "end": "263160"
  },
  {
    "text": "free at this label and then the next",
    "start": "263160",
    "end": "265440"
  },
  {
    "text": "line of code will run it'll close the FD",
    "start": "265440",
    "end": "267600"
  },
  {
    "text": "after that and then return the return",
    "start": "267600",
    "end": "269400"
  },
  {
    "text": "value Val which is set to1 and in the",
    "start": "269400",
    "end": "271960"
  },
  {
    "text": "success case where none of this actually",
    "start": "271960",
    "end": "273680"
  },
  {
    "text": "happens and everything succeeds we set",
    "start": "273680",
    "end": "275600"
  },
  {
    "text": "the return value equal to zero and after",
    "start": "275600",
    "end": "277320"
  },
  {
    "text": "our code runs we close the socket file",
    "start": "277320",
    "end": "279639"
  },
  {
    "text": "descriptor we free the file buff we",
    "start": "279639",
    "end": "281840"
  },
  {
    "text": "close the FD and we return the success",
    "start": "281840",
    "end": "284240"
  },
  {
    "text": "value and you can see the structure is",
    "start": "284240",
    "end": "286320"
  },
  {
    "text": "that the lowest function the one that's",
    "start": "286320",
    "end": "288120"
  },
  {
    "text": "further on in the code goes to the top",
    "start": "288120",
    "end": "290560"
  },
  {
    "text": "level error Handler because it has to",
    "start": "290560",
    "end": "291960"
  },
  {
    "text": "handle the most things that has to do it",
    "start": "291960",
    "end": "294240"
  },
  {
    "text": "has to free the buffer it has to close",
    "start": "294240",
    "end": "296039"
  },
  {
    "text": "the file the scriptor ETC while go-to in",
    "start": "296039",
    "end": "297919"
  },
  {
    "text": "a lot of other cases make code a lot",
    "start": "297919",
    "end": "299360"
  },
  {
    "text": "harder harder to read using goto to",
    "start": "299360",
    "end": "301960"
  },
  {
    "text": "handle error cases allows you to write",
    "start": "301960",
    "end": "304360"
  },
  {
    "text": "the same code one time in your error",
    "start": "304360",
    "end": "306680"
  },
  {
    "text": "Handler and then use the go-tos to jump",
    "start": "306680",
    "end": "308800"
  },
  {
    "text": "to what layer of error handling you're",
    "start": "308800",
    "end": "310639"
  },
  {
    "text": "at now another cool thing about C is",
    "start": "310639",
    "end": "312720"
  },
  {
    "text": "that the switch statement is actually",
    "start": "312720",
    "end": "314680"
  },
  {
    "text": "way faster than the if statement and the",
    "start": "314680",
    "end": "316440"
  },
  {
    "text": "reason behind it is really interesting",
    "start": "316440",
    "end": "318120"
  },
  {
    "text": "you'll find out about that in this video",
    "start": "318120",
    "end": "320440"
  },
  {
    "text": "go go click goodbye",
    "start": "320440",
    "end": "324360"
  }
]