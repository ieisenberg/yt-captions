[
  {
    "text": "in my previous tutorial i demonstrated",
    "start": "0",
    "end": "1920"
  },
  {
    "text": "how to write arm assembly to perform",
    "start": "1920",
    "end": "3760"
  },
  {
    "text": "direct to register programming on a",
    "start": "3760",
    "end": "5440"
  },
  {
    "text": "raspberry pi by directly controlling the",
    "start": "5440",
    "end": "7680"
  },
  {
    "text": "gpio registers on the arm processor we",
    "start": "7680",
    "end": "9840"
  },
  {
    "text": "were able to get an led to blink on and",
    "start": "9840",
    "end": "11840"
  },
  {
    "text": "off the problem however was that we",
    "start": "11840",
    "end": "13920"
  },
  {
    "text": "wrote that tutorial all on assembly the",
    "start": "13920",
    "end": "16080"
  },
  {
    "text": "problem with programming and assembly is",
    "start": "16080",
    "end": "17520"
  },
  {
    "text": "that assembly isn't a very scalable",
    "start": "17520",
    "end": "19359"
  },
  {
    "text": "language and as you add more features to",
    "start": "19359",
    "end": "21359"
  },
  {
    "text": "your code the code gets hard to manage",
    "start": "21359",
    "end": "23439"
  },
  {
    "text": "hard to understand and is often not",
    "start": "23439",
    "end": "25199"
  },
  {
    "text": "maintainable by other programmers",
    "start": "25199",
    "end": "26720"
  },
  {
    "text": "unfamiliar with your code base the",
    "start": "26720",
    "end": "28640"
  },
  {
    "text": "correct way to do this instead is to use",
    "start": "28640",
    "end": "30240"
  },
  {
    "text": "a compiled language so in this video",
    "start": "30240",
    "end": "32800"
  },
  {
    "text": "i'll be showing you guys how to make a",
    "start": "32800",
    "end": "34000"
  },
  {
    "text": "project and write code in c that will",
    "start": "34000",
    "end": "36480"
  },
  {
    "text": "perform the same direct register",
    "start": "36480",
    "end": "38160"
  },
  {
    "text": "functionality all without the hassle of",
    "start": "38160",
    "end": "40239"
  },
  {
    "text": "writing an assembly also to be alerted",
    "start": "40239",
    "end": "42480"
  },
  {
    "text": "when i put up videos on the raspberry pi",
    "start": "42480",
    "end": "44879"
  },
  {
    "text": "bare metal programming and other",
    "start": "44879",
    "end": "46079"
  },
  {
    "text": "low-level topics hit that subscribe",
    "start": "46079",
    "end": "47840"
  },
  {
    "text": "button and hit the notification bell",
    "start": "47840",
    "end": "50000"
  },
  {
    "text": "now the way we'll do those will be",
    "start": "50000",
    "end": "51199"
  },
  {
    "text": "pretty similar to the first video um at",
    "start": "51199",
    "end": "53199"
  },
  {
    "text": "the risk of being hypocritical there",
    "start": "53199",
    "end": "54559"
  },
  {
    "text": "actually is a little bit of assembly",
    "start": "54559",
    "end": "56000"
  },
  {
    "text": "that we have to use this assembly will",
    "start": "56000",
    "end": "57760"
  },
  {
    "text": "be called start.s and that'll be the",
    "start": "57760",
    "end": "59520"
  },
  {
    "text": "glue code that gets the code control",
    "start": "59520",
    "end": "61359"
  },
  {
    "text": "from assembly into our c code once we've",
    "start": "61359",
    "end": "64080"
  },
  {
    "text": "compiled and assembled our assembly we",
    "start": "64080",
    "end": "66320"
  },
  {
    "text": "will then begin writing our code in c",
    "start": "66320",
    "end": "68560"
  },
  {
    "text": "now here what we're going to do is",
    "start": "68560",
    "end": "69600"
  },
  {
    "text": "compile our c code into an object file",
    "start": "69600",
    "end": "72240"
  },
  {
    "text": "what we have to do after that is take",
    "start": "72240",
    "end": "73760"
  },
  {
    "text": "all of our object files we've created so",
    "start": "73760",
    "end": "75439"
  },
  {
    "text": "main.o and start.o and use a linker",
    "start": "75439",
    "end": "78720"
  },
  {
    "text": "script to assemble them in the correct",
    "start": "78720",
    "end": "80479"
  },
  {
    "text": "order and produce our kernel 7l that the",
    "start": "80479",
    "end": "82880"
  },
  {
    "text": "raspberry pi will boot now what a script",
    "start": "82880",
    "end": "85439"
  },
  {
    "text": "does is it actually pretty cleanly just",
    "start": "85439",
    "end": "87439"
  },
  {
    "text": "lays out the layout of an elf image that",
    "start": "87439",
    "end": "91200"
  },
  {
    "text": "you create at compile time and you can",
    "start": "91200",
    "end": "93200"
  },
  {
    "text": "actually put what order the symbols",
    "start": "93200",
    "end": "95759"
  },
  {
    "text": "appear in and what segments and sections",
    "start": "95759",
    "end": "98000"
  },
  {
    "text": "appear in what order the reason we want",
    "start": "98000",
    "end": "100159"
  },
  {
    "text": "to do this is we want the start symbol",
    "start": "100159",
    "end": "102320"
  },
  {
    "text": "so you know the beginning of our code",
    "start": "102320",
    "end": "103600"
  },
  {
    "text": "our start.s here to appear first in the",
    "start": "103600",
    "end": "106320"
  },
  {
    "text": "image so that when the assembler creates",
    "start": "106320",
    "end": "108240"
  },
  {
    "text": "the assembly and the compiler creates",
    "start": "108240",
    "end": "109680"
  },
  {
    "text": "the elf we don't accidentally have",
    "start": "109680",
    "end": "111759"
  },
  {
    "text": "main.c appearing first without the",
    "start": "111759",
    "end": "113840"
  },
  {
    "text": "startup code happening doing this in the",
    "start": "113840",
    "end": "115360"
  },
  {
    "text": "linker script allows us to confirm that",
    "start": "115360",
    "end": "117759"
  },
  {
    "text": "our elf is assembled in the correct",
    "start": "117759",
    "end": "120000"
  },
  {
    "text": "order and another thing we'll introduce",
    "start": "120000",
    "end": "121840"
  },
  {
    "text": "in this video is the idea of a board",
    "start": "121840",
    "end": "124320"
  },
  {
    "text": "support package header file so in this",
    "start": "124320",
    "end": "126640"
  },
  {
    "text": "case we have the bcm 2837 header file",
    "start": "126640",
    "end": "130080"
  },
  {
    "text": "looks like written by apple i found this",
    "start": "130080",
    "end": "131599"
  },
  {
    "text": "online but basically if you remember",
    "start": "131599",
    "end": "133120"
  },
  {
    "text": "from our previous video we were going",
    "start": "133120",
    "end": "134480"
  },
  {
    "text": "through and we were pulling out all",
    "start": "134480",
    "end": "135760"
  },
  {
    "text": "these addresses from the data sheet",
    "start": "135760",
    "end": "137040"
  },
  {
    "text": "manually and putting them into our code",
    "start": "137040",
    "end": "138640"
  },
  {
    "text": "by hand as you begin to interface with",
    "start": "138640",
    "end": "140560"
  },
  {
    "text": "more peripherals on the chip this gets",
    "start": "140560",
    "end": "142319"
  },
  {
    "text": "very hard to maintain and honestly",
    "start": "142319",
    "end": "144239"
  },
  {
    "text": "annoying to do",
    "start": "144239",
    "end": "145599"
  },
  {
    "text": "people that produce chips often publish",
    "start": "145599",
    "end": "147680"
  },
  {
    "text": "header files that have all of these",
    "start": "147680",
    "end": "149120"
  },
  {
    "text": "addresses extracted and they define",
    "start": "149120",
    "end": "151040"
  },
  {
    "text": "named for them so instead of us having",
    "start": "151040",
    "end": "152560"
  },
  {
    "text": "to manually define constants that we'll",
    "start": "152560",
    "end": "154400"
  },
  {
    "text": "use we can just use the values specified",
    "start": "154400",
    "end": "156560"
  },
  {
    "text": "in this header file so for example for",
    "start": "156560",
    "end": "158239"
  },
  {
    "text": "the function select zero we can just use",
    "start": "158239",
    "end": "160080"
  },
  {
    "text": "this word as opposed to this address for",
    "start": "160080",
    "end": "162080"
  },
  {
    "text": "the uh gp set zero we can just use this",
    "start": "162080",
    "end": "164640"
  },
  {
    "text": "constant instead of this address etc so",
    "start": "164640",
    "end": "166800"
  },
  {
    "text": "currently we're in a spot where we have",
    "start": "166800",
    "end": "168160"
  },
  {
    "text": "this assembly written i'll kind of just",
    "start": "168160",
    "end": "169840"
  },
  {
    "text": "walk through what this does um line one",
    "start": "169840",
    "end": "171840"
  },
  {
    "text": "we're saying",
    "start": "171840",
    "end": "172760"
  },
  {
    "text": "section.txt.boot the reason why we have",
    "start": "172760",
    "end": "174480"
  },
  {
    "text": "a dot text.boot section is we want to",
    "start": "174480",
    "end": "176400"
  },
  {
    "text": "specify in our linker file that this",
    "start": "176400",
    "end": "178720"
  },
  {
    "text": "part of the code starts first right so",
    "start": "178720",
    "end": "180560"
  },
  {
    "text": "we have this part happening in front of",
    "start": "180560",
    "end": "182720"
  },
  {
    "text": "the dot text so when the arm processor",
    "start": "182720",
    "end": "184400"
  },
  {
    "text": "gets to execution it goes to run start",
    "start": "184400",
    "end": "187120"
  },
  {
    "text": "code first and then after that all we do",
    "start": "187120",
    "end": "189040"
  },
  {
    "text": "is we have our start symbol which loads",
    "start": "189040",
    "end": "191680"
  },
  {
    "text": "the address of main our actual c code",
    "start": "191680",
    "end": "194239"
  },
  {
    "text": "address into register three and then we",
    "start": "194239",
    "end": "196319"
  },
  {
    "text": "jump to that address this should never",
    "start": "196319",
    "end": "198480"
  },
  {
    "text": "return we should never get back to this",
    "start": "198480",
    "end": "200000"
  },
  {
    "text": "point um but when main does return if it",
    "start": "200000",
    "end": "202319"
  },
  {
    "text": "ever does we'll eventually get to the",
    "start": "202319",
    "end": "203840"
  },
  {
    "text": "halt symbol which just branches to",
    "start": "203840",
    "end": "206159"
  },
  {
    "text": "itself and kind of infinitely loops",
    "start": "206159",
    "end": "208799"
  },
  {
    "text": "so yeah now we can actually go into the",
    "start": "208799",
    "end": "210640"
  },
  {
    "text": "c part of the code and begin to write",
    "start": "210640",
    "end": "212640"
  },
  {
    "text": "code that will get ran on the processor",
    "start": "212640",
    "end": "214640"
  },
  {
    "text": "not an assembly so now that we're",
    "start": "214640",
    "end": "216239"
  },
  {
    "text": "actually executing code in main we want",
    "start": "216239",
    "end": "218400"
  },
  {
    "text": "to write two functions that will make",
    "start": "218400",
    "end": "219680"
  },
  {
    "text": "our life a little easier when doing",
    "start": "219680",
    "end": "221040"
  },
  {
    "text": "direct transcript programming the first",
    "start": "221040",
    "end": "223040"
  },
  {
    "text": "function is going to be a write 32",
    "start": "223040",
    "end": "225440"
  },
  {
    "text": "function that's going to take a address",
    "start": "225440",
    "end": "227360"
  },
  {
    "text": "as input and write a value there we'll",
    "start": "227360",
    "end": "229440"
  },
  {
    "text": "be able to use this function and plug in",
    "start": "229440",
    "end": "231760"
  },
  {
    "text": "these addresses from the header file",
    "start": "231760",
    "end": "233599"
  },
  {
    "text": "write data to those addresses so the",
    "start": "233599",
    "end": "235200"
  },
  {
    "text": "right 32 function will take a void star",
    "start": "235200",
    "end": "238239"
  },
  {
    "text": "of dest and a uint",
    "start": "238239",
    "end": "240400"
  },
  {
    "text": "value we need to do a type def",
    "start": "240400",
    "end": "244239"
  },
  {
    "text": "unsigned int as uint just so it doesn't",
    "start": "244239",
    "end": "246799"
  },
  {
    "text": "yellow does something compile and what",
    "start": "246799",
    "end": "248720"
  },
  {
    "text": "this function will do is it will cast",
    "start": "248720",
    "end": "250799"
  },
  {
    "text": "the",
    "start": "250799",
    "end": "252799"
  },
  {
    "text": "destination pointer into a destination u",
    "start": "252799",
    "end": "255439"
  },
  {
    "text": "pointer",
    "start": "255439",
    "end": "257840"
  },
  {
    "text": "and we're going to write",
    "start": "258479",
    "end": "260479"
  },
  {
    "text": "the value",
    "start": "260479",
    "end": "261919"
  },
  {
    "text": "to that pointer",
    "start": "261919",
    "end": "264080"
  },
  {
    "text": "this is our right functionality and this",
    "start": "264080",
    "end": "265280"
  },
  {
    "text": "will return nothing and then we're gonna",
    "start": "265280",
    "end": "266479"
  },
  {
    "text": "do the same thing but we're gonna have a",
    "start": "266479",
    "end": "268479"
  },
  {
    "text": "read instead so read 32 is going to have",
    "start": "268479",
    "end": "271440"
  },
  {
    "text": "a source",
    "start": "271440",
    "end": "272800"
  },
  {
    "text": "and it's going to only take in that",
    "start": "272800",
    "end": "274080"
  },
  {
    "text": "source",
    "start": "274080",
    "end": "276160"
  },
  {
    "text": "we could do source view equals source",
    "start": "276160",
    "end": "278240"
  },
  {
    "text": "and then we're just going to return",
    "start": "278240",
    "end": "281440"
  },
  {
    "text": "source",
    "start": "281440",
    "end": "282639"
  },
  {
    "text": "delete all this and make sure it returns",
    "start": "282639",
    "end": "284320"
  },
  {
    "text": "to you in",
    "start": "284320",
    "end": "285520"
  },
  {
    "text": "cool so now we have two basic functions",
    "start": "285520",
    "end": "288160"
  },
  {
    "text": "that we can write and read to these",
    "start": "288160",
    "end": "290240"
  },
  {
    "text": "peripheral addresses very cool so now",
    "start": "290240",
    "end": "292479"
  },
  {
    "text": "that we have those written we need to do",
    "start": "292479",
    "end": "293680"
  },
  {
    "text": "a few more things all right so in our",
    "start": "293680",
    "end": "295120"
  },
  {
    "text": "previous video we needed to set the",
    "start": "295120",
    "end": "297199"
  },
  {
    "text": "function of pin 21 to be an output right",
    "start": "297199",
    "end": "300479"
  },
  {
    "text": "so we had to write to gpf select two",
    "start": "300479",
    "end": "304400"
  },
  {
    "text": "these are actually not spelled out in",
    "start": "304400",
    "end": "305759"
  },
  {
    "text": "the datasheet in the header file but we",
    "start": "305759",
    "end": "308080"
  },
  {
    "text": "can add those in pretty quickly so the",
    "start": "308080",
    "end": "309680"
  },
  {
    "text": "offsets are going to be plus four and",
    "start": "309680",
    "end": "311919"
  },
  {
    "text": "plus eight for gpio function select one",
    "start": "311919",
    "end": "314400"
  },
  {
    "text": "and for two so we're gonna take this",
    "start": "314400",
    "end": "315840"
  },
  {
    "text": "here",
    "start": "315840",
    "end": "317919"
  },
  {
    "text": "and then we are going to",
    "start": "317919",
    "end": "320080"
  },
  {
    "text": "take a register a uint and it's gonna be",
    "start": "320080",
    "end": "323039"
  },
  {
    "text": "the gpf cell 2 and we're going to say",
    "start": "323039",
    "end": "325759"
  },
  {
    "text": "that it's equal to read",
    "start": "325759",
    "end": "327919"
  },
  {
    "text": "32",
    "start": "327919",
    "end": "329440"
  },
  {
    "text": "this address",
    "start": "329440",
    "end": "331039"
  },
  {
    "text": "this will read from this address the",
    "start": "331039",
    "end": "333280"
  },
  {
    "text": "chip and give us the current value in",
    "start": "333280",
    "end": "335039"
  },
  {
    "text": "that register then we need to do is we",
    "start": "335039",
    "end": "337280"
  },
  {
    "text": "need to make sure that pin 21 is set to",
    "start": "337280",
    "end": "339840"
  },
  {
    "text": "be a output just like our previous video",
    "start": "339840",
    "end": "341919"
  },
  {
    "text": "right so we're gonna say that that value",
    "start": "341919",
    "end": "343600"
  },
  {
    "text": "or equals one left shifted by three",
    "start": "343600",
    "end": "346639"
  },
  {
    "text": "which is going to turn pin 21 into an",
    "start": "346639",
    "end": "348960"
  },
  {
    "text": "output",
    "start": "348960",
    "end": "351360"
  },
  {
    "text": "that's the same as before right but then",
    "start": "351440",
    "end": "352800"
  },
  {
    "text": "now that we have done this in ram right",
    "start": "352800",
    "end": "354560"
  },
  {
    "text": "this is currently on the chip in ram we",
    "start": "354560",
    "end": "356960"
  },
  {
    "text": "need to actually put it back into this",
    "start": "356960",
    "end": "358880"
  },
  {
    "text": "address here from the data sheet so just",
    "start": "358880",
    "end": "360400"
  },
  {
    "text": "like before we'll do a write 32 we're",
    "start": "360400",
    "end": "362960"
  },
  {
    "text": "going to write to this address",
    "start": "362960",
    "end": "366639"
  },
  {
    "text": "this value and after that gets ran we",
    "start": "366639",
    "end": "369280"
  },
  {
    "text": "have turned pin 21 into an output pretty",
    "start": "369280",
    "end": "371600"
  },
  {
    "text": "straightforward now we're gonna do like",
    "start": "371600",
    "end": "373680"
  },
  {
    "text": "we did before in our previous video",
    "start": "373680",
    "end": "375199"
  },
  {
    "text": "we're going to have an infinite loop",
    "start": "375199",
    "end": "376479"
  },
  {
    "text": "where we are going to set the output to",
    "start": "376479",
    "end": "379840"
  },
  {
    "text": "be turned on right so we need to turn",
    "start": "379840",
    "end": "382560"
  },
  {
    "text": "on pin 21",
    "start": "382560",
    "end": "384400"
  },
  {
    "text": "and turn",
    "start": "384400",
    "end": "386400"
  },
  {
    "text": "off pin 21.",
    "start": "386400",
    "end": "388560"
  },
  {
    "text": "in between there we need to have sleeps",
    "start": "388560",
    "end": "390240"
  },
  {
    "text": "right so",
    "start": "390240",
    "end": "391360"
  },
  {
    "text": "delay",
    "start": "391360",
    "end": "393440"
  },
  {
    "text": "and delay",
    "start": "393440",
    "end": "396639"
  },
  {
    "text": "so the way we do that just look at it",
    "start": "396720",
    "end": "397919"
  },
  {
    "text": "before we need to",
    "start": "397919",
    "end": "400720"
  },
  {
    "text": "write 32",
    "start": "400720",
    "end": "402400"
  },
  {
    "text": "to the",
    "start": "402400",
    "end": "403030"
  },
  {
    "text": "[Music]",
    "start": "403030",
    "end": "404400"
  },
  {
    "text": "gpio set functionality from the header",
    "start": "404400",
    "end": "406400"
  },
  {
    "text": "sheet from the data sheet right so the",
    "start": "406400",
    "end": "408080"
  },
  {
    "text": "set",
    "start": "408080",
    "end": "409120"
  },
  {
    "text": "and what are we gonna write there we are",
    "start": "409120",
    "end": "410560"
  },
  {
    "text": "going to write one left shifted by 21",
    "start": "410560",
    "end": "414479"
  },
  {
    "text": "and then we are going to the same thing",
    "start": "414479",
    "end": "415919"
  },
  {
    "text": "but instead of the gpio set we're going",
    "start": "415919",
    "end": "417919"
  },
  {
    "text": "to have the gpio clear",
    "start": "417919",
    "end": "419840"
  },
  {
    "text": "just like before so this is turning on",
    "start": "419840",
    "end": "422639"
  },
  {
    "text": "pin 21 this is turning off pin 21 and",
    "start": "422639",
    "end": "426160"
  },
  {
    "text": "then here we're going to do a very lazy",
    "start": "426160",
    "end": "428720"
  },
  {
    "text": "loop um just to make sure that the chip",
    "start": "428720",
    "end": "430880"
  },
  {
    "text": "actually actually sleeps for a certain",
    "start": "430880",
    "end": "432319"
  },
  {
    "text": "number of cycles so we can actually see",
    "start": "432319",
    "end": "433759"
  },
  {
    "text": "an observable delay",
    "start": "433759",
    "end": "435599"
  },
  {
    "text": "so what will happen here is we will do",
    "start": "435599",
    "end": "438720"
  },
  {
    "text": "um i equals zero",
    "start": "438720",
    "end": "440720"
  },
  {
    "text": "while i is less than we'll do ox eighty",
    "start": "440720",
    "end": "444000"
  },
  {
    "text": "thousand well we'll do eight hundred",
    "start": "444000",
    "end": "445520"
  },
  {
    "text": "thousand just to be safe if we don't",
    "start": "445520",
    "end": "447360"
  },
  {
    "text": "make that number high enough what will",
    "start": "447360",
    "end": "448479"
  },
  {
    "text": "actually happen is the led will blink so",
    "start": "448479",
    "end": "450880"
  },
  {
    "text": "fast the human eye can't observe it and",
    "start": "450880",
    "end": "453199"
  },
  {
    "text": "as a result it'll appear like our code",
    "start": "453199",
    "end": "454720"
  },
  {
    "text": "isn't working it's just permanently on",
    "start": "454720",
    "end": "456000"
  },
  {
    "text": "but that's that's not going to be the",
    "start": "456000",
    "end": "456960"
  },
  {
    "text": "case right um so we'll do that and we'll",
    "start": "456960",
    "end": "458800"
  },
  {
    "text": "say i plus plus and then we'll do the",
    "start": "458800",
    "end": "460400"
  },
  {
    "text": "same thing we'll copy this code and put",
    "start": "460400",
    "end": "461919"
  },
  {
    "text": "it down here",
    "start": "461919",
    "end": "464800"
  },
  {
    "text": "all right let's zoom out a little bit",
    "start": "464800",
    "end": "465759"
  },
  {
    "text": "just kind of talk about it so",
    "start": "465759",
    "end": "467759"
  },
  {
    "text": "what have we done right we've created",
    "start": "467759",
    "end": "468960"
  },
  {
    "text": "two functions a right 32 to write to a",
    "start": "468960",
    "end": "471520"
  },
  {
    "text": "location and a read 32 to read from a",
    "start": "471520",
    "end": "473440"
  },
  {
    "text": "location to return it we use that read",
    "start": "473440",
    "end": "475440"
  },
  {
    "text": "32 to pull out the current state of the",
    "start": "475440",
    "end": "477360"
  },
  {
    "text": "gpio function selector for bus two and",
    "start": "477360",
    "end": "479919"
  },
  {
    "text": "save that in a variable uh we're then",
    "start": "479919",
    "end": "482080"
  },
  {
    "text": "adding some information right we're",
    "start": "482080",
    "end": "483360"
  },
  {
    "text": "using the or",
    "start": "483360",
    "end": "484639"
  },
  {
    "text": "flag here the or operation to add",
    "start": "484639",
    "end": "486800"
  },
  {
    "text": "information so we're turning pin 21 into",
    "start": "486800",
    "end": "488879"
  },
  {
    "text": "an output and this",
    "start": "488879",
    "end": "490560"
  },
  {
    "text": "bit selector here is you know comes out",
    "start": "490560",
    "end": "492639"
  },
  {
    "text": "of the data sheet just like our previous",
    "start": "492639",
    "end": "493759"
  },
  {
    "text": "tutorial um and then we're taking that",
    "start": "493759",
    "end": "495759"
  },
  {
    "text": "value and writing it back into this",
    "start": "495759",
    "end": "498080"
  },
  {
    "text": "function selector here and then we are",
    "start": "498080",
    "end": "500319"
  },
  {
    "text": "creating a counter for infinite loop",
    "start": "500319",
    "end": "502160"
  },
  {
    "text": "where within the infinite loop we write",
    "start": "502160",
    "end": "504400"
  },
  {
    "text": "to the gpio set for pin 21 and we'll",
    "start": "504400",
    "end": "507120"
  },
  {
    "text": "turn that pin on and that's where our",
    "start": "507120",
    "end": "508319"
  },
  {
    "text": "led is going to live",
    "start": "508319",
    "end": "510000"
  },
  {
    "text": "and then from there we take another",
    "start": "510000",
    "end": "512080"
  },
  {
    "text": "counter and we",
    "start": "512080",
    "end": "513440"
  },
  {
    "text": "iterate over it to create a delay so",
    "start": "513440",
    "end": "515039"
  },
  {
    "text": "nothing should happen here it should",
    "start": "515039",
    "end": "516080"
  },
  {
    "text": "just hang for some number of actual",
    "start": "516080",
    "end": "518080"
  },
  {
    "text": "human observable time",
    "start": "518080",
    "end": "519919"
  },
  {
    "text": "and then we do the same thing where we",
    "start": "519919",
    "end": "521200"
  },
  {
    "text": "write 32 to gpio clear and we do that to",
    "start": "521200",
    "end": "524399"
  },
  {
    "text": "set",
    "start": "524399",
    "end": "525120"
  },
  {
    "text": "uh pin 21 to be off and then sleep and",
    "start": "525120",
    "end": "528160"
  },
  {
    "text": "then this should run infinitely so we'll",
    "start": "528160",
    "end": "530240"
  },
  {
    "text": "pull up our terminal here i never",
    "start": "530240",
    "end": "532480"
  },
  {
    "text": "actually included the uh header file",
    "start": "532480",
    "end": "534320"
  },
  {
    "text": "make sure you uh actually include your",
    "start": "534320",
    "end": "536320"
  },
  {
    "text": "header files otherwise they'll be very",
    "start": "536320",
    "end": "538000"
  },
  {
    "text": "upset",
    "start": "538000",
    "end": "538920"
  },
  {
    "text": "2837.h try this again one thing we",
    "start": "538920",
    "end": "541600"
  },
  {
    "text": "forgot to do is this needs to be a",
    "start": "541600",
    "end": "543519"
  },
  {
    "text": "source you not the source if you try to",
    "start": "543519",
    "end": "545440"
  },
  {
    "text": "do reference of void pointer the",
    "start": "545440",
    "end": "546399"
  },
  {
    "text": "compiler will get mad um after we",
    "start": "546399",
    "end": "547839"
  },
  {
    "text": "figured that out",
    "start": "547839",
    "end": "549120"
  },
  {
    "text": "let's type make and now the kernel 7 elf",
    "start": "549120",
    "end": "551760"
  },
  {
    "text": "is created and we can put the kernel 7",
    "start": "551760",
    "end": "554000"
  },
  {
    "text": "image onto our sd card and put it into",
    "start": "554000",
    "end": "555760"
  },
  {
    "text": "our raspberry pi and see what happens",
    "start": "555760",
    "end": "556959"
  },
  {
    "text": "let's do that right now",
    "start": "556959",
    "end": "558320"
  },
  {
    "text": "boom and there you go you can see here",
    "start": "558320",
    "end": "559920"
  },
  {
    "text": "that the led is blinking on and off um",
    "start": "559920",
    "end": "561920"
  },
  {
    "text": "our delay timer is a little long it's",
    "start": "561920",
    "end": "563680"
  },
  {
    "text": "closer to like five or six seconds and",
    "start": "563680",
    "end": "565279"
  },
  {
    "text": "it is one second but that's okay um",
    "start": "565279",
    "end": "567200"
  },
  {
    "text": "anyway guys i hope you learned something",
    "start": "567200",
    "end": "568240"
  },
  {
    "text": "in this video uh getting your code to be",
    "start": "568240",
    "end": "570560"
  },
  {
    "text": "the same functionality in c as it is in",
    "start": "570560",
    "end": "572880"
  },
  {
    "text": "assembly is not that hard so if you like",
    "start": "572880",
    "end": "574480"
  },
  {
    "text": "this video do me a favor hit like hit",
    "start": "574480",
    "end": "576000"
  },
  {
    "text": "subscribe and i'll see you guys next",
    "start": "576000",
    "end": "577440"
  },
  {
    "text": "time take care",
    "start": "577440",
    "end": "580839"
  },
  {
    "text": "[Music]",
    "start": "582270",
    "end": "589469"
  }
]