[
  {
    "text": "hey guys what's going on and welcome",
    "start": "1360",
    "end": "2800"
  },
  {
    "text": "back to another low level learning",
    "start": "2800",
    "end": "4080"
  },
  {
    "text": "tutorial",
    "start": "4080",
    "end": "4880"
  },
  {
    "text": "uh today we're gonna go over arc64 or",
    "start": "4880",
    "end": "6960"
  },
  {
    "text": "arm64 assembly and by the end of this",
    "start": "6960",
    "end": "8800"
  },
  {
    "text": "you should be able to write a hello",
    "start": "8800",
    "end": "10320"
  },
  {
    "text": "world program so let's dive into it",
    "start": "10320",
    "end": "13040"
  },
  {
    "text": "um if you haven't already seen my other",
    "start": "13040",
    "end": "14320"
  },
  {
    "text": "video on arm assembly go ahead and check",
    "start": "14320",
    "end": "16000"
  },
  {
    "text": "that out i'll put it in the description",
    "start": "16000",
    "end": "17279"
  },
  {
    "text": "uh we",
    "start": "17279",
    "end": "17920"
  },
  {
    "text": "go over this slide a little more in",
    "start": "17920",
    "end": "19439"
  },
  {
    "text": "depth but basically",
    "start": "19439",
    "end": "21039"
  },
  {
    "text": "uh writing assembly which is the layer",
    "start": "21039",
    "end": "23519"
  },
  {
    "text": "below",
    "start": "23519",
    "end": "24320"
  },
  {
    "text": "the high level language in a form that",
    "start": "24320",
    "end": "26720"
  },
  {
    "text": "is not yet understandable by the",
    "start": "26720",
    "end": "28000"
  },
  {
    "text": "computer",
    "start": "28000",
    "end": "28720"
  },
  {
    "text": "and we put that assembly into an",
    "start": "28720",
    "end": "30640"
  },
  {
    "text": "assembler",
    "start": "30640",
    "end": "31760"
  },
  {
    "text": "that puts it to machine code that the",
    "start": "31760",
    "end": "34320"
  },
  {
    "text": "computer can then",
    "start": "34320",
    "end": "35760"
  },
  {
    "text": "execute so like i said before today",
    "start": "35760",
    "end": "38239"
  },
  {
    "text": "we're going to go over",
    "start": "38239",
    "end": "39520"
  },
  {
    "text": "arc64 arc64 is the 64-bit version of the",
    "start": "39520",
    "end": "43520"
  },
  {
    "text": "arm architecture because of that it's",
    "start": "43520",
    "end": "45360"
  },
  {
    "text": "still a risk instruction set it's a",
    "start": "45360",
    "end": "47120"
  },
  {
    "text": "reduced instruction set compiler",
    "start": "47120",
    "end": "49039"
  },
  {
    "text": "which basically just means that it has",
    "start": "49039",
    "end": "50480"
  },
  {
    "text": "you know fewer instructions than your",
    "start": "50480",
    "end": "51920"
  },
  {
    "text": "typical like intel",
    "start": "51920",
    "end": "53600"
  },
  {
    "text": "um yep and it's a it's a 64-bit",
    "start": "53600",
    "end": "56559"
  },
  {
    "text": "architecture which means that",
    "start": "56559",
    "end": "58160"
  },
  {
    "text": "it is 64-bit addressable meaning it can",
    "start": "58160",
    "end": "60800"
  },
  {
    "text": "address a",
    "start": "60800",
    "end": "62039"
  },
  {
    "text": "64-bit wide space",
    "start": "62039",
    "end": "64960"
  },
  {
    "text": "and in this case the instructions are",
    "start": "64960",
    "end": "66640"
  },
  {
    "text": "also 64-bits",
    "start": "66640",
    "end": "68400"
  },
  {
    "text": "normally the biggest change that you'll",
    "start": "68400",
    "end": "71600"
  },
  {
    "text": "notice",
    "start": "71600",
    "end": "72080"
  },
  {
    "text": "between this and arm 32 is that the",
    "start": "72080",
    "end": "74799"
  },
  {
    "text": "registers are now referred to as",
    "start": "74799",
    "end": "76560"
  },
  {
    "text": "x0 and x30 um so you can actually",
    "start": "76560",
    "end": "79920"
  },
  {
    "text": "address the registers",
    "start": "79920",
    "end": "81280"
  },
  {
    "text": "two ways so you can look at them as x0",
    "start": "81280",
    "end": "84000"
  },
  {
    "text": "for example",
    "start": "84000",
    "end": "84880"
  },
  {
    "text": "that will get you the 64-bit register",
    "start": "84880",
    "end": "88640"
  },
  {
    "text": "you can also refer to x0 as w0 which",
    "start": "88640",
    "end": "91600"
  },
  {
    "text": "gets the",
    "start": "91600",
    "end": "92640"
  },
  {
    "text": "32-bit lower half of that same register",
    "start": "92640",
    "end": "95040"
  },
  {
    "text": "so right here",
    "start": "95040",
    "end": "96320"
  },
  {
    "text": "and then if i say r0 at all um you can",
    "start": "96320",
    "end": "98799"
  },
  {
    "text": "still call",
    "start": "98799",
    "end": "100159"
  },
  {
    "text": "the registers r0r1 r2 um and that's just",
    "start": "100159",
    "end": "103680"
  },
  {
    "text": "a",
    "start": "103680",
    "end": "104320"
  },
  {
    "text": "you know a reference to x0 for that",
    "start": "104320",
    "end": "106799"
  },
  {
    "text": "example",
    "start": "106799",
    "end": "107680"
  },
  {
    "text": "um the architecture is still bit",
    "start": "107680",
    "end": "109360"
  },
  {
    "text": "addressable which means that you can",
    "start": "109360",
    "end": "110479"
  },
  {
    "text": "address a single byte in memory you",
    "start": "110479",
    "end": "112399"
  },
  {
    "text": "don't have to address an entire word",
    "start": "112399",
    "end": "113840"
  },
  {
    "text": "like mips",
    "start": "113840",
    "end": "114799"
  },
  {
    "text": "for example um and similarly to how",
    "start": "114799",
    "end": "118159"
  },
  {
    "text": "uh arm 32 had thumb mode",
    "start": "118159",
    "end": "121520"
  },
  {
    "text": "and arm mode this architecture has",
    "start": "121520",
    "end": "124399"
  },
  {
    "text": "64-bit mode",
    "start": "124399",
    "end": "126000"
  },
  {
    "text": "and 32-bit mode and both of those modes",
    "start": "126000",
    "end": "128959"
  },
  {
    "text": "have a user",
    "start": "128959",
    "end": "130319"
  },
  {
    "text": "in supervisor mode uh similar to arm",
    "start": "130319",
    "end": "134160"
  },
  {
    "text": "right arm 32 64-bit arm is the same way",
    "start": "134160",
    "end": "137200"
  },
  {
    "text": "to do an assembly instruction you have",
    "start": "137200",
    "end": "139599"
  },
  {
    "text": "your operator",
    "start": "139599",
    "end": "140959"
  },
  {
    "text": "you have your destination and you have",
    "start": "140959",
    "end": "142800"
  },
  {
    "text": "your source so for example",
    "start": "142800",
    "end": "144959"
  },
  {
    "text": "to move the value 4 into x0 the",
    "start": "144959",
    "end": "148239"
  },
  {
    "text": "instruction is move into x0",
    "start": "148239",
    "end": "151440"
  },
  {
    "text": "the decimal or the hexadecimal value for",
    "start": "151440",
    "end": "153920"
  },
  {
    "text": "right",
    "start": "153920",
    "end": "155200"
  },
  {
    "text": "pretty straightforward and then similar",
    "start": "155200",
    "end": "158239"
  },
  {
    "text": "to the previous tutorial right to do",
    "start": "158239",
    "end": "159920"
  },
  {
    "text": "anything",
    "start": "159920",
    "end": "160800"
  },
  {
    "text": "you know our process the user mode area",
    "start": "160800",
    "end": "163920"
  },
  {
    "text": "needs to request a service from the",
    "start": "163920",
    "end": "165840"
  },
  {
    "text": "kernel and the way we do this is using a",
    "start": "165840",
    "end": "168319"
  },
  {
    "text": "system call",
    "start": "168319",
    "end": "169280"
  },
  {
    "text": "which in arc64 is this instruction it's",
    "start": "169280",
    "end": "171920"
  },
  {
    "text": "service",
    "start": "171920",
    "end": "172400"
  },
  {
    "text": "zero or system service zero um",
    "start": "172400",
    "end": "175440"
  },
  {
    "text": "and then when that instruction gets ran",
    "start": "175440",
    "end": "177280"
  },
  {
    "text": "the kernel takes action",
    "start": "177280",
    "end": "179360"
  },
  {
    "text": "uh the action that it performs the",
    "start": "179360",
    "end": "181120"
  },
  {
    "text": "syscall number is stored into",
    "start": "181120",
    "end": "183760"
  },
  {
    "text": "x8 and x0 through four to determine how",
    "start": "183760",
    "end": "187200"
  },
  {
    "text": "we do it very similar to how uh",
    "start": "187200",
    "end": "189519"
  },
  {
    "text": "rm32 did uh system calls",
    "start": "189519",
    "end": "192720"
  },
  {
    "text": "so let's pull open our vm here we go to",
    "start": "192720",
    "end": "195599"
  },
  {
    "text": "some of the answers that i have",
    "start": "195599",
    "end": "198000"
  },
  {
    "text": "already written boom boom all right",
    "start": "198000",
    "end": "202400"
  },
  {
    "text": "so here's our vm we're doing a little",
    "start": "203040",
    "end": "204560"
  },
  {
    "text": "bit of work in this um so if you haven't",
    "start": "204560",
    "end": "206080"
  },
  {
    "text": "already go ahead and make sure you",
    "start": "206080",
    "end": "207440"
  },
  {
    "text": "install",
    "start": "207440",
    "end": "209040"
  },
  {
    "text": "not pseudo wireshark sudo",
    "start": "209040",
    "end": "212640"
  },
  {
    "text": "uh it's gcc7",
    "start": "213120",
    "end": "216640"
  },
  {
    "text": "arc so if you type that in",
    "start": "216640",
    "end": "220080"
  },
  {
    "text": "i already have this um you should",
    "start": "221920",
    "end": "223519"
  },
  {
    "text": "install this and then also sudo",
    "start": "223519",
    "end": "225200"
  },
  {
    "text": "apt-install",
    "start": "225200",
    "end": "226640"
  },
  {
    "text": "kimu right so similar to the previous",
    "start": "226640",
    "end": "229840"
  },
  {
    "text": "tutorial",
    "start": "229840",
    "end": "231200"
  },
  {
    "text": "i'm using an intel architecture vm but",
    "start": "231200",
    "end": "234159"
  },
  {
    "text": "i'm able to test my code",
    "start": "234159",
    "end": "235599"
  },
  {
    "text": "using kimu kimu is the emulator suite",
    "start": "235599",
    "end": "238799"
  },
  {
    "text": "that allows you to run",
    "start": "238799",
    "end": "240319"
  },
  {
    "text": "cross-compiled code in a not",
    "start": "240319",
    "end": "242720"
  },
  {
    "text": "cross-compiled environment it's pretty",
    "start": "242720",
    "end": "244239"
  },
  {
    "text": "cool",
    "start": "244239",
    "end": "245200"
  },
  {
    "text": "um cool so let's write some assembly",
    "start": "245200",
    "end": "247519"
  },
  {
    "text": "right",
    "start": "247519",
    "end": "248560"
  },
  {
    "text": "i think like last time step one we",
    "start": "248560",
    "end": "250480"
  },
  {
    "text": "should um",
    "start": "250480",
    "end": "251920"
  },
  {
    "text": "figure out how to implement the exit",
    "start": "251920",
    "end": "253840"
  },
  {
    "text": "system call okay cool how do we do that",
    "start": "253840",
    "end": "256160"
  },
  {
    "text": "um we need to first identify what the",
    "start": "256160",
    "end": "258160"
  },
  {
    "text": "system call number is for exit right",
    "start": "258160",
    "end": "260079"
  },
  {
    "text": "because",
    "start": "260079",
    "end": "261040"
  },
  {
    "text": "all because exit was system call 1 in",
    "start": "261040",
    "end": "264160"
  },
  {
    "text": "arm 32 does not mean it's system call 1",
    "start": "264160",
    "end": "266320"
  },
  {
    "text": "and arm 64 right that",
    "start": "266320",
    "end": "268160"
  },
  {
    "text": "if they change the kernel at all if they",
    "start": "268160",
    "end": "270400"
  },
  {
    "text": "change the",
    "start": "270400",
    "end": "271360"
  },
  {
    "text": "binary abi right the way that the binary",
    "start": "271360",
    "end": "274560"
  },
  {
    "text": "talks to the kernel",
    "start": "274560",
    "end": "275840"
  },
  {
    "text": "that system call number could change so",
    "start": "275840",
    "end": "277520"
  },
  {
    "text": "we've got to look it up in a table",
    "start": "277520",
    "end": "279600"
  },
  {
    "text": "and the way we do that is by if you go",
    "start": "279600",
    "end": "282720"
  },
  {
    "text": "to google",
    "start": "282720",
    "end": "283680"
  },
  {
    "text": "you type in uh rf64 syscall table",
    "start": "283680",
    "end": "287360"
  },
  {
    "text": "chromium just like last time provides",
    "start": "287360",
    "end": "289600"
  },
  {
    "text": "really good documents on the system call",
    "start": "289600",
    "end": "291840"
  },
  {
    "text": "table",
    "start": "291840",
    "end": "292720"
  },
  {
    "text": "um for arm 64. cool so we have arm64",
    "start": "292720",
    "end": "298160"
  },
  {
    "text": "they are a little different the uh more",
    "start": "298160",
    "end": "300720"
  },
  {
    "text": "standard like posix compliant system",
    "start": "300720",
    "end": "302800"
  },
  {
    "text": "calls",
    "start": "302800",
    "end": "303360"
  },
  {
    "text": "are handled in the like 64 to 90 range",
    "start": "303360",
    "end": "307680"
  },
  {
    "text": "it's kind of weird right so you have",
    "start": "307680",
    "end": "308880"
  },
  {
    "text": "like right here",
    "start": "308880",
    "end": "310400"
  },
  {
    "text": "um we'll find exit",
    "start": "310400",
    "end": "313919"
  },
  {
    "text": "is system call 93 or ox 5d",
    "start": "313919",
    "end": "317120"
  },
  {
    "text": "okay great so let's extract this number",
    "start": "317120",
    "end": "320800"
  },
  {
    "text": "so how do we set up a system call right",
    "start": "320800",
    "end": "322560"
  },
  {
    "text": "so what did i say before",
    "start": "322560",
    "end": "324240"
  },
  {
    "text": "the system call number gets put into x8",
    "start": "324240",
    "end": "327840"
  },
  {
    "text": "so move into x8 the value",
    "start": "327840",
    "end": "331680"
  },
  {
    "text": "of x5d and then what are the arguments",
    "start": "331680",
    "end": "335280"
  },
  {
    "text": "to our system call",
    "start": "335280",
    "end": "339840"
  },
  {
    "text": "well the error code right what it",
    "start": "340000",
    "end": "342479"
  },
  {
    "text": "returns and that goes into",
    "start": "342479",
    "end": "345919"
  },
  {
    "text": "x0 great",
    "start": "347840",
    "end": "353840"
  },
  {
    "text": "so we'll put that into",
    "start": "354240",
    "end": "357599"
  },
  {
    "text": "we'll return uh ox41 and then how do we",
    "start": "359360",
    "end": "362639"
  },
  {
    "text": "invoke the kernel",
    "start": "362639",
    "end": "363840"
  },
  {
    "text": "how do we ask it for help we say service",
    "start": "363840",
    "end": "365759"
  },
  {
    "text": "zero boom",
    "start": "365759",
    "end": "367199"
  },
  {
    "text": "so we're gonna write that and just like",
    "start": "367199",
    "end": "368880"
  },
  {
    "text": "last time the way we're gonna compile",
    "start": "368880",
    "end": "370000"
  },
  {
    "text": "this is we're gonna uh",
    "start": "370000",
    "end": "371120"
  },
  {
    "text": "first call the assembler right so it's",
    "start": "371120",
    "end": "373280"
  },
  {
    "text": "gonna be",
    "start": "373280",
    "end": "374560"
  },
  {
    "text": "arc linux new as",
    "start": "374560",
    "end": "377840"
  },
  {
    "text": "uh we're going to assemble our file",
    "start": "377840",
    "end": "381039"
  },
  {
    "text": "which is a001.asm for me it could be",
    "start": "381039",
    "end": "383600"
  },
  {
    "text": "anything for you guys",
    "start": "383600",
    "end": "384800"
  },
  {
    "text": "and we're going to output an object file",
    "start": "384800",
    "end": "387919"
  },
  {
    "text": "cool no compiler or no assembler errors",
    "start": "387919",
    "end": "389840"
  },
  {
    "text": "rather and and the object file is the",
    "start": "389840",
    "end": "392080"
  },
  {
    "text": "intermediate elf",
    "start": "392080",
    "end": "394800"
  },
  {
    "text": "it's not executable in its current",
    "start": "394800",
    "end": "396160"
  },
  {
    "text": "format because it's not fully compiled",
    "start": "396160",
    "end": "398240"
  },
  {
    "text": "into an elf it just contains symbol",
    "start": "398240",
    "end": "400000"
  },
  {
    "text": "information and code information that we",
    "start": "400000",
    "end": "402319"
  },
  {
    "text": "we care about the way we get it to the",
    "start": "402319",
    "end": "404639"
  },
  {
    "text": "final",
    "start": "404639",
    "end": "405440"
  },
  {
    "text": "executable format because we invoke gcc",
    "start": "405440",
    "end": "409120"
  },
  {
    "text": "on it and we say we want to compile our",
    "start": "409120",
    "end": "411919"
  },
  {
    "text": "object file",
    "start": "411919",
    "end": "413039"
  },
  {
    "text": "and output an executable okay we're",
    "start": "413039",
    "end": "416400"
  },
  {
    "text": "gonna get this error at first and that's",
    "start": "416400",
    "end": "417840"
  },
  {
    "text": "because we're trying to compile it",
    "start": "417840",
    "end": "419680"
  },
  {
    "text": "against lib c we don't want to do that",
    "start": "419680",
    "end": "421759"
  },
  {
    "text": "so we say",
    "start": "421759",
    "end": "422800"
  },
  {
    "text": "no standard lib and for the purposes of",
    "start": "422800",
    "end": "425199"
  },
  {
    "text": "this tutorial we're also going to say",
    "start": "425199",
    "end": "426479"
  },
  {
    "text": "check static because there's",
    "start": "426479",
    "end": "428080"
  },
  {
    "text": "issues with the arc 64 build environment",
    "start": "428080",
    "end": "431120"
  },
  {
    "text": "on ubuntu16 so great no",
    "start": "431120",
    "end": "434639"
  },
  {
    "text": "no compiler errors after we add those",
    "start": "434639",
    "end": "436080"
  },
  {
    "text": "two flags and then to test our code",
    "start": "436080",
    "end": "438720"
  },
  {
    "text": "we do kimu arc64",
    "start": "438720",
    "end": "442960"
  },
  {
    "text": "our code awesome and if we did this",
    "start": "443039",
    "end": "445120"
  },
  {
    "text": "correctly we should get the",
    "start": "445120",
    "end": "447280"
  },
  {
    "text": "error code for one or 65 as the output",
    "start": "447280",
    "end": "451440"
  },
  {
    "text": "and we do cool all right so now we've",
    "start": "451440",
    "end": "454000"
  },
  {
    "text": "written some basic assembly",
    "start": "454000",
    "end": "455520"
  },
  {
    "text": "let's get to that hello world right so",
    "start": "455520",
    "end": "457360"
  },
  {
    "text": "just like last time",
    "start": "457360",
    "end": "459199"
  },
  {
    "text": "we have to define a label called message",
    "start": "459199",
    "end": "462160"
  },
  {
    "text": "again",
    "start": "462160",
    "end": "462960"
  },
  {
    "text": "and the message is type ascii and it's",
    "start": "462960",
    "end": "466000"
  },
  {
    "text": "hello world new line",
    "start": "466000",
    "end": "469520"
  },
  {
    "text": "awesome so we've added that and then we",
    "start": "469520",
    "end": "471759"
  },
  {
    "text": "need to set up",
    "start": "471759",
    "end": "472639"
  },
  {
    "text": "our system call we need to add one right",
    "start": "472639",
    "end": "475440"
  },
  {
    "text": "because right here we have a",
    "start": "475440",
    "end": "478800"
  },
  {
    "text": "exit system call to get us out of the",
    "start": "478800",
    "end": "480479"
  },
  {
    "text": "program the out of the program",
    "start": "480479",
    "end": "482720"
  },
  {
    "text": "now we need to do a right system call",
    "start": "482720",
    "end": "485919"
  },
  {
    "text": "to put data to the screen so what are",
    "start": "485919",
    "end": "488560"
  },
  {
    "text": "the arguments for right let's see",
    "start": "488560",
    "end": "494319"
  },
  {
    "text": "so right is system call 64",
    "start": "494319",
    "end": "497440"
  },
  {
    "text": "and it takes argument r or x0 as",
    "start": "497440",
    "end": "500560"
  },
  {
    "text": "fd so the descriptor we're going to",
    "start": "500560",
    "end": "502160"
  },
  {
    "text": "write to remember in linux we have",
    "start": "502160",
    "end": "503919"
  },
  {
    "text": "file descriptor standard in out in zero",
    "start": "503919",
    "end": "506960"
  },
  {
    "text": "as",
    "start": "506960",
    "end": "507440"
  },
  {
    "text": "zero one and two sorry standard",
    "start": "507440",
    "end": "511039"
  },
  {
    "text": "in out error as file descriptor",
    "start": "511039",
    "end": "514240"
  },
  {
    "text": "zero one and two so after you'll be set",
    "start": "514240",
    "end": "516640"
  },
  {
    "text": "to one",
    "start": "516640",
    "end": "517518"
  },
  {
    "text": "the standard out file descriptor that",
    "start": "517519",
    "end": "519200"
  },
  {
    "text": "represents the data that goes to the",
    "start": "519200",
    "end": "520479"
  },
  {
    "text": "screen",
    "start": "520479",
    "end": "522800"
  },
  {
    "text": "x1 will be a pointer to the buffer we're",
    "start": "523200",
    "end": "525200"
  },
  {
    "text": "writing",
    "start": "525200",
    "end": "526240"
  },
  {
    "text": "and x2 will contain the length of that",
    "start": "526240",
    "end": "529600"
  },
  {
    "text": "buffer",
    "start": "529600",
    "end": "530480"
  },
  {
    "text": "great so let's do that",
    "start": "530480",
    "end": "534320"
  },
  {
    "text": "move x8 the system call number which i",
    "start": "534320",
    "end": "537279"
  },
  {
    "text": "said was",
    "start": "537279",
    "end": "537920"
  },
  {
    "text": "64. x0",
    "start": "537920",
    "end": "541040"
  },
  {
    "text": "is the file descriptor so it's going to",
    "start": "541040",
    "end": "542720"
  },
  {
    "text": "be 1 which is standard out",
    "start": "542720",
    "end": "546160"
  },
  {
    "text": "x1 okay so this is where it gets a",
    "start": "546160",
    "end": "548000"
  },
  {
    "text": "little different right we're dealing",
    "start": "548000",
    "end": "549120"
  },
  {
    "text": "with",
    "start": "549120",
    "end": "550399"
  },
  {
    "text": "um memory operations so instead of move",
    "start": "550399",
    "end": "553120"
  },
  {
    "text": "we need to",
    "start": "553120",
    "end": "553839"
  },
  {
    "text": "load into x1 so we're loading into x1",
    "start": "553839",
    "end": "557920"
  },
  {
    "text": "the address what the equal sign does of",
    "start": "557920",
    "end": "561040"
  },
  {
    "text": "the message label okay and then finally",
    "start": "561040",
    "end": "564640"
  },
  {
    "text": "move into x2 the length of the thing",
    "start": "564640",
    "end": "568000"
  },
  {
    "text": "we're writing so what is it it's going",
    "start": "568000",
    "end": "569440"
  },
  {
    "text": "to be",
    "start": "569440",
    "end": "570399"
  },
  {
    "text": "5 10 11 12",
    "start": "570399",
    "end": "574839"
  },
  {
    "text": "13. and then we invoke",
    "start": "574839",
    "end": "577519"
  },
  {
    "text": "a system call cool so what are we doing",
    "start": "577519",
    "end": "581040"
  },
  {
    "text": "here we are",
    "start": "581040",
    "end": "582640"
  },
  {
    "text": "setting up the system call number",
    "start": "582640",
    "end": "584560"
  },
  {
    "text": "telling it to write to standard out",
    "start": "584560",
    "end": "587920"
  },
  {
    "text": "loading the address of our message into",
    "start": "587920",
    "end": "591040"
  },
  {
    "text": "x1 the pointer to our buffer",
    "start": "591040",
    "end": "593120"
  },
  {
    "text": "and setting 13 as the length of our",
    "start": "593120",
    "end": "595120"
  },
  {
    "text": "buffer writing it to the screen",
    "start": "595120",
    "end": "597279"
  },
  {
    "text": "and then getting out of the program",
    "start": "597279",
    "end": "598560"
  },
  {
    "text": "safely all right let's try it out",
    "start": "598560",
    "end": "602080"
  },
  {
    "text": "symbol",
    "start": "602959",
    "end": "605839"
  },
  {
    "text": "compile run it",
    "start": "606240",
    "end": "609519"
  },
  {
    "text": "great so we ran our little world guys i",
    "start": "609519",
    "end": "612079"
  },
  {
    "text": "hope you learned something if you did",
    "start": "612079",
    "end": "613680"
  },
  {
    "text": "please drop a comment and uh give me",
    "start": "613680",
    "end": "616000"
  },
  {
    "text": "some ideas what you want to learn next",
    "start": "616000",
    "end": "617120"
  },
  {
    "text": "time thanks for watching",
    "start": "617120",
    "end": "618000"
  },
  {
    "text": "i hope you tune in again bye",
    "start": "618000",
    "end": "622640"
  }
]