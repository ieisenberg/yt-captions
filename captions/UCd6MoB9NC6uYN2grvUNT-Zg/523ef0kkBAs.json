[
  {
    "text": "[Music]",
    "start": "0",
    "end": "2960"
  },
  {
    "text": "hello",
    "start": "2960",
    "end": "3520"
  },
  {
    "text": "and thank you for watching this video on",
    "start": "3520",
    "end": "5920"
  },
  {
    "text": "how to iterate through all aws accounts",
    "start": "5920",
    "end": "8320"
  },
  {
    "text": "in an aws",
    "start": "8320",
    "end": "9280"
  },
  {
    "text": "organization with net my name is carlos",
    "start": "9280",
    "end": "12480"
  },
  {
    "text": "santos and i'm a microsoft specialist",
    "start": "12480",
    "end": "14559"
  },
  {
    "text": "solutions architect here at aws",
    "start": "14559",
    "end": "17600"
  },
  {
    "text": "many customers have found themselves",
    "start": "17600",
    "end": "19199"
  },
  {
    "text": "managing multiple aws accounts",
    "start": "19199",
    "end": "21279"
  },
  {
    "text": "as they have scaled up their use of aws",
    "start": "21279",
    "end": "25039"
  },
  {
    "text": "aws organizations is a service that",
    "start": "25039",
    "end": "27599"
  },
  {
    "text": "helps you centrally govern your",
    "start": "27599",
    "end": "29039"
  },
  {
    "text": "environment",
    "start": "29039",
    "end": "30080"
  },
  {
    "text": "as you grow and scale your workloads on",
    "start": "30080",
    "end": "32640"
  },
  {
    "text": "aws",
    "start": "32640",
    "end": "34239"
  },
  {
    "text": "whether you are growing startup or large",
    "start": "34239",
    "end": "36079"
  },
  {
    "text": "enterprise organizations helps you",
    "start": "36079",
    "end": "38399"
  },
  {
    "text": "control access",
    "start": "38399",
    "end": "39760"
  },
  {
    "text": "compliance and security and share",
    "start": "39760",
    "end": "42480"
  },
  {
    "text": "resources across your aws accounts",
    "start": "42480",
    "end": "44719"
  },
  {
    "text": "and centrally manage billing using aws",
    "start": "44719",
    "end": "48480"
  },
  {
    "text": "organizations you can automate account",
    "start": "48480",
    "end": "50719"
  },
  {
    "text": "creation",
    "start": "50719",
    "end": "51760"
  },
  {
    "text": "create groups of accounts that reflect",
    "start": "51760",
    "end": "53680"
  },
  {
    "text": "your business needs",
    "start": "53680",
    "end": "54879"
  },
  {
    "text": "and apply policies to these groups for",
    "start": "54879",
    "end": "56960"
  },
  {
    "text": "governance",
    "start": "56960",
    "end": "58399"
  },
  {
    "text": "these policies centrally control the use",
    "start": "58399",
    "end": "60480"
  },
  {
    "text": "of aws services",
    "start": "60480",
    "end": "62000"
  },
  {
    "text": "down to the api level across multiple",
    "start": "62000",
    "end": "64640"
  },
  {
    "text": "accounts",
    "start": "64640",
    "end": "66000"
  },
  {
    "text": "additionally you can configure central",
    "start": "66000",
    "end": "68159"
  },
  {
    "text": "logging of all actions performed across",
    "start": "68159",
    "end": "70400"
  },
  {
    "text": "your organization",
    "start": "70400",
    "end": "71760"
  },
  {
    "text": "using aws cloudtrail and centrally",
    "start": "71760",
    "end": "74880"
  },
  {
    "text": "aggregate data",
    "start": "74880",
    "end": "76000"
  },
  {
    "text": "for rules that you've defined using aws",
    "start": "76000",
    "end": "78240"
  },
  {
    "text": "config",
    "start": "78240",
    "end": "79600"
  },
  {
    "text": "enabling you to audit your environment",
    "start": "79600",
    "end": "81680"
  },
  {
    "text": "for compliance",
    "start": "81680",
    "end": "82880"
  },
  {
    "text": "and react quickly the changes",
    "start": "82880",
    "end": "86240"
  },
  {
    "text": "through integrations with other aws",
    "start": "86240",
    "end": "88000"
  },
  {
    "text": "services you can use organizations to",
    "start": "88000",
    "end": "90560"
  },
  {
    "text": "define central configurations",
    "start": "90560",
    "end": "92320"
  },
  {
    "text": "and resource sharing across accounts in",
    "start": "92320",
    "end": "94240"
  },
  {
    "text": "your organization",
    "start": "94240",
    "end": "96240"
  },
  {
    "text": "you can also simplify billing by setting",
    "start": "96240",
    "end": "98560"
  },
  {
    "text": "up a single payment method",
    "start": "98560",
    "end": "100159"
  },
  {
    "text": "for all of your aws accounts aws",
    "start": "100159",
    "end": "103600"
  },
  {
    "text": "organizations is available to all aws",
    "start": "103600",
    "end": "106079"
  },
  {
    "text": "customers",
    "start": "106079",
    "end": "106880"
  },
  {
    "text": "at no additional charge here we see the",
    "start": "106880",
    "end": "110320"
  },
  {
    "text": "aws organization structure",
    "start": "110320",
    "end": "112240"
  },
  {
    "text": "they will be working with in this",
    "start": "112240",
    "end": "113439"
  },
  {
    "text": "example it is based off of the best",
    "start": "113439",
    "end": "116079"
  },
  {
    "text": "practices for organizational units with",
    "start": "116079",
    "end": "118399"
  },
  {
    "text": "aws organizations blog post",
    "start": "118399",
    "end": "120799"
  },
  {
    "text": "which was published on july 2020.",
    "start": "120799",
    "end": "124719"
  },
  {
    "text": "the aws organization's route has four",
    "start": "125200",
    "end": "127840"
  },
  {
    "text": "child",
    "start": "127840",
    "end": "128239"
  },
  {
    "text": "organizational units oral use for short",
    "start": "128239",
    "end": "131680"
  },
  {
    "text": "nou is a container for accounts with a",
    "start": "131680",
    "end": "133920"
  },
  {
    "text": "root",
    "start": "133920",
    "end": "135120"
  },
  {
    "text": "and can contain other ou's this enables",
    "start": "135120",
    "end": "138239"
  },
  {
    "text": "you to create a hierarchy that",
    "start": "138239",
    "end": "139440"
  },
  {
    "text": "represents an",
    "start": "139440",
    "end": "140239"
  },
  {
    "text": "upside down tree with a root at the top",
    "start": "140239",
    "end": "143360"
  },
  {
    "text": "and branches of a views that reach down",
    "start": "143360",
    "end": "145920"
  },
  {
    "text": "ending in accounts",
    "start": "145920",
    "end": "147280"
  },
  {
    "text": "that are the leaves of the tree and you",
    "start": "147280",
    "end": "150400"
  },
  {
    "text": "can have exactly one parent",
    "start": "150400",
    "end": "152080"
  },
  {
    "text": "and currently each account can be a",
    "start": "152080",
    "end": "154000"
  },
  {
    "text": "member of exactly",
    "start": "154000",
    "end": "155120"
  },
  {
    "text": "one ou two of the child we use depicted",
    "start": "155120",
    "end": "160000"
  },
  {
    "text": "security and infrastructure are ones",
    "start": "160000",
    "end": "162319"
  },
  {
    "text": "that we recommend",
    "start": "162319",
    "end": "163519"
  },
  {
    "text": "and what you see categorized as",
    "start": "163519",
    "end": "165440"
  },
  {
    "text": "foundational organizational units",
    "start": "165440",
    "end": "169040"
  },
  {
    "text": "the others are additional oius we",
    "start": "169040",
    "end": "170800"
  },
  {
    "text": "typically see customers use",
    "start": "170800",
    "end": "174480"
  },
  {
    "text": "the workloads ou also has two child ou's",
    "start": "175280",
    "end": "178319"
  },
  {
    "text": "sdlc and prod which are used to separate",
    "start": "178319",
    "end": "181680"
  },
  {
    "text": "non-production and production accounts",
    "start": "181680",
    "end": "183760"
  },
  {
    "text": "respectively",
    "start": "183760",
    "end": "185519"
  },
  {
    "text": "all of the us in this hierarchy have at",
    "start": "185519",
    "end": "187599"
  },
  {
    "text": "least one account",
    "start": "187599",
    "end": "189519"
  },
  {
    "text": "while this is the structure we'll be",
    "start": "189519",
    "end": "190879"
  },
  {
    "text": "using today you should create or use",
    "start": "190879",
    "end": "193280"
  },
  {
    "text": "only when the difference in policies",
    "start": "193280",
    "end": "195040"
  },
  {
    "text": "that need to be applied to accounts",
    "start": "195040",
    "end": "197040"
  },
  {
    "text": "dictate their need let's take a look at",
    "start": "197040",
    "end": "200400"
  },
  {
    "text": "how to iterate through",
    "start": "200400",
    "end": "201440"
  },
  {
    "text": "all of the aws accounts in this",
    "start": "201440",
    "end": "203360"
  },
  {
    "text": "organization",
    "start": "203360",
    "end": "206000"
  },
  {
    "text": "you have a couple of options to get the",
    "start": "206640",
    "end": "208239"
  },
  {
    "text": "list of accounts in an aws organization",
    "start": "208239",
    "end": "211280"
  },
  {
    "text": "list accounts gets you a list of all",
    "start": "211280",
    "end": "213440"
  },
  {
    "text": "accounts without the ou structure",
    "start": "213440",
    "end": "217440"
  },
  {
    "text": "if you need the full graph you can do",
    "start": "217440",
    "end": "219280"
  },
  {
    "text": "this with a combination of the list",
    "start": "219280",
    "end": "221200"
  },
  {
    "text": "roots",
    "start": "221200",
    "end": "222319"
  },
  {
    "text": "list accounts for parent and list",
    "start": "222319",
    "end": "224560"
  },
  {
    "text": "organizational units for parent",
    "start": "224560",
    "end": "226319"
  },
  {
    "text": "apis to start the traversal",
    "start": "226319",
    "end": "229440"
  },
  {
    "text": "use the list roots api once you have the",
    "start": "229440",
    "end": "232720"
  },
  {
    "text": "roots id",
    "start": "232720",
    "end": "233840"
  },
  {
    "text": "you can begin to walk the hierarchy one",
    "start": "233840",
    "end": "236159"
  },
  {
    "text": "level at a time",
    "start": "236159",
    "end": "237360"
  },
  {
    "text": "using the list accounts for parent and",
    "start": "237360",
    "end": "239360"
  },
  {
    "text": "list organizational units for parent",
    "start": "239360",
    "end": "241599"
  },
  {
    "text": "apis one item to keep in mind",
    "start": "241599",
    "end": "244879"
  },
  {
    "text": "is that these apis can only be called",
    "start": "244879",
    "end": "247040"
  },
  {
    "text": "from the organization's master account",
    "start": "247040",
    "end": "249439"
  },
  {
    "text": "or by a member account that is a",
    "start": "249439",
    "end": "251439"
  },
  {
    "text": "delegated administrator",
    "start": "251439",
    "end": "253599"
  },
  {
    "text": "let's see this in action here i have a",
    "start": "253599",
    "end": "256320"
  },
  {
    "text": "net core console application",
    "start": "256320",
    "end": "258239"
  },
  {
    "text": "that will use to make the api calls",
    "start": "258239",
    "end": "261359"
  },
  {
    "text": "the first thing we'll do is add the",
    "start": "261359",
    "end": "262880"
  },
  {
    "text": "nuget package for aws",
    "start": "262880",
    "end": "264560"
  },
  {
    "text": "organizations the name of the package is",
    "start": "264560",
    "end": "268800"
  },
  {
    "text": "aws",
    "start": "268800",
    "end": "269440"
  },
  {
    "text": "sdk dot organizations",
    "start": "269440",
    "end": "273600"
  },
  {
    "text": "we'll click the install button and add",
    "start": "273919",
    "end": "275840"
  },
  {
    "text": "the package to our project",
    "start": "275840",
    "end": "279040"
  },
  {
    "text": "as you can see we get prompted to also",
    "start": "279440",
    "end": "281840"
  },
  {
    "text": "add the aws sdk.core",
    "start": "281840",
    "end": "284560"
  },
  {
    "text": "nuget package we need this package",
    "start": "284560",
    "end": "286720"
  },
  {
    "text": "because it's a dependency",
    "start": "286720",
    "end": "290000"
  },
  {
    "text": "now that we've added the packages we",
    "start": "292080",
    "end": "293600"
  },
  {
    "text": "need let's run the application and get",
    "start": "293600",
    "end": "295520"
  },
  {
    "text": "an idea",
    "start": "295520",
    "end": "296080"
  },
  {
    "text": "of what the output is before we walk",
    "start": "296080",
    "end": "298080"
  },
  {
    "text": "through the code",
    "start": "298080",
    "end": "300240"
  },
  {
    "text": "the first output is a flattened list of",
    "start": "300240",
    "end": "302160"
  },
  {
    "text": "aws accounts",
    "start": "302160",
    "end": "303600"
  },
  {
    "text": "without the aws organization structure",
    "start": "303600",
    "end": "307199"
  },
  {
    "text": "in the second output we can see the",
    "start": "307199",
    "end": "308800"
  },
  {
    "text": "organizational units denoted by the ou",
    "start": "308800",
    "end": "310960"
  },
  {
    "text": "prefix",
    "start": "310960",
    "end": "311840"
  },
  {
    "text": "and the accounts which have the a prefix",
    "start": "311840",
    "end": "315199"
  },
  {
    "text": "alright let's take a closer look",
    "start": "315199",
    "end": "318800"
  },
  {
    "text": "in the main method we can see that how",
    "start": "320400",
    "end": "322240"
  },
  {
    "text": "the output is created is abstracted into",
    "start": "322240",
    "end": "324400"
  },
  {
    "text": "two methods",
    "start": "324400",
    "end": "325440"
  },
  {
    "text": "the print flat account list method and",
    "start": "325440",
    "end": "327680"
  },
  {
    "text": "the print hierarchy method",
    "start": "327680",
    "end": "330320"
  },
  {
    "text": "looking at print flat account list we",
    "start": "330320",
    "end": "332000"
  },
  {
    "text": "can see that the fallback credentials",
    "start": "332000",
    "end": "333520"
  },
  {
    "text": "factory",
    "start": "333520",
    "end": "334160"
  },
  {
    "text": "is used to get the credentials those",
    "start": "334160",
    "end": "336479"
  },
  {
    "text": "credentials are then provided to the",
    "start": "336479",
    "end": "338080"
  },
  {
    "text": "amazon organization's client",
    "start": "338080",
    "end": "339680"
  },
  {
    "text": "classes constructor",
    "start": "339680",
    "end": "342639"
  },
  {
    "text": "once the client is instantiated we can",
    "start": "343919",
    "end": "346240"
  },
  {
    "text": "make the call to the list accounts api",
    "start": "346240",
    "end": "349280"
  },
  {
    "text": "one item to know is that the aws sdk",
    "start": "349280",
    "end": "351759"
  },
  {
    "text": "methods follow a pretty consistent",
    "start": "351759",
    "end": "353360"
  },
  {
    "text": "pattern",
    "start": "353360",
    "end": "354000"
  },
  {
    "text": "of using classes to represent requests",
    "start": "354000",
    "end": "356639"
  },
  {
    "text": "and responses",
    "start": "356639",
    "end": "357919"
  },
  {
    "text": "even when an api doesn't take any",
    "start": "357919",
    "end": "359840"
  },
  {
    "text": "parameters as",
    "start": "359840",
    "end": "361199"
  },
  {
    "text": "is the case with the list accounts api",
    "start": "361199",
    "end": "364800"
  },
  {
    "text": "let's run the code and see it in action",
    "start": "364800",
    "end": "368560"
  },
  {
    "text": "as you can see the response class",
    "start": "368960",
    "end": "370800"
  },
  {
    "text": "contains a list of accounts",
    "start": "370800",
    "end": "372960"
  },
  {
    "text": "we use this list to iterate through all",
    "start": "372960",
    "end": "374800"
  },
  {
    "text": "of the accounts in the organization",
    "start": "374800",
    "end": "376800"
  },
  {
    "text": "and print them to the console",
    "start": "376800",
    "end": "380240"
  },
  {
    "text": "if we use the object browser to see the",
    "start": "380240",
    "end": "382000"
  },
  {
    "text": "account classes members",
    "start": "382000",
    "end": "383520"
  },
  {
    "text": "you can spot that there are no members",
    "start": "383520",
    "end": "385440"
  },
  {
    "text": "related to organizations",
    "start": "385440",
    "end": "387360"
  },
  {
    "text": "that is why we can't get the",
    "start": "387360",
    "end": "388479"
  },
  {
    "text": "organization structure when we use the",
    "start": "388479",
    "end": "390720"
  },
  {
    "text": "list accounts method",
    "start": "390720",
    "end": "393039"
  },
  {
    "text": "okay let's move on to the print",
    "start": "393039",
    "end": "394880"
  },
  {
    "text": "hierarchy method",
    "start": "394880",
    "end": "397120"
  },
  {
    "text": "because we're walking a tree structure",
    "start": "397120",
    "end": "398800"
  },
  {
    "text": "we're going to use a little bit of",
    "start": "398800",
    "end": "399919"
  },
  {
    "text": "recursion",
    "start": "399919",
    "end": "401440"
  },
  {
    "text": "the pattern is very similar to what we",
    "start": "401440",
    "end": "403120"
  },
  {
    "text": "saw in the print flat account list",
    "start": "403120",
    "end": "404720"
  },
  {
    "text": "method",
    "start": "404720",
    "end": "405840"
  },
  {
    "text": "we get the credentials and we use them",
    "start": "405840",
    "end": "409120"
  },
  {
    "text": "to create the client",
    "start": "409120",
    "end": "412000"
  },
  {
    "text": "one difference is that in this case we",
    "start": "412000",
    "end": "414479"
  },
  {
    "text": "use the listroots method to get the",
    "start": "414479",
    "end": "416160"
  },
  {
    "text": "organization's route",
    "start": "416160",
    "end": "419199"
  },
  {
    "text": "currently an organization can only have",
    "start": "419199",
    "end": "421039"
  },
  {
    "text": "one root and so we use the first or",
    "start": "421039",
    "end": "423199"
  },
  {
    "text": "default method",
    "start": "423199",
    "end": "424240"
  },
  {
    "text": "to get that root once we have the root",
    "start": "424240",
    "end": "428240"
  },
  {
    "text": "we use that to start walking the",
    "start": "428240",
    "end": "429680"
  },
  {
    "text": "structure using the print organizational",
    "start": "429680",
    "end": "431919"
  },
  {
    "text": "unit method",
    "start": "431919",
    "end": "434479"
  },
  {
    "text": "we print out the accounts first",
    "start": "434800",
    "end": "438400"
  },
  {
    "text": "this time the request class does have a",
    "start": "439440",
    "end": "441280"
  },
  {
    "text": "parameter named parent id",
    "start": "441280",
    "end": "443120"
  },
  {
    "text": "which in this case represents the id of",
    "start": "443120",
    "end": "445280"
  },
  {
    "text": "the ou",
    "start": "445280",
    "end": "447840"
  },
  {
    "text": "we use the list accounts for parent api",
    "start": "448000",
    "end": "450720"
  },
  {
    "text": "to get the list of accounts in that ou",
    "start": "450720",
    "end": "453840"
  },
  {
    "text": "the accounts model return is the same",
    "start": "453840",
    "end": "455520"
  },
  {
    "text": "one we saw earlier with the list",
    "start": "455520",
    "end": "456960"
  },
  {
    "text": "accounts method",
    "start": "456960",
    "end": "459680"
  },
  {
    "text": "and just like last time we iterate to",
    "start": "459680",
    "end": "461840"
  },
  {
    "text": "print the list of accounts",
    "start": "461840",
    "end": "465840"
  },
  {
    "text": "once we're done printing the account",
    "start": "469680",
    "end": "471120"
  },
  {
    "text": "information we again create a request",
    "start": "471120",
    "end": "473199"
  },
  {
    "text": "class with the parent id parameter",
    "start": "473199",
    "end": "478160"
  },
  {
    "text": "this time we use the list organizational",
    "start": "478160",
    "end": "480240"
  },
  {
    "text": "units for parent api",
    "start": "480240",
    "end": "481840"
  },
  {
    "text": "to get the ou's that we'll continue to",
    "start": "481840",
    "end": "483840"
  },
  {
    "text": "walk through",
    "start": "483840",
    "end": "485280"
  },
  {
    "text": "we pass each ou's id and recursively",
    "start": "485280",
    "end": "488000"
  },
  {
    "text": "call the print",
    "start": "488000",
    "end": "488800"
  },
  {
    "text": "organizational unit method i'll let the",
    "start": "488800",
    "end": "491919"
  },
  {
    "text": "program continue so they can print the",
    "start": "491919",
    "end": "493759"
  },
  {
    "text": "aws accounts",
    "start": "493759",
    "end": "495039"
  },
  {
    "text": "and the ou structure",
    "start": "495039",
    "end": "498240"
  },
  {
    "text": "as you can see the aws sdk dot",
    "start": "499280",
    "end": "502080"
  },
  {
    "text": "organization's nuget package",
    "start": "502080",
    "end": "503919"
  },
  {
    "text": "makes it easy to retrieve information",
    "start": "503919",
    "end": "506080"
  },
  {
    "text": "about your aws organization",
    "start": "506080",
    "end": "509440"
  },
  {
    "text": "in this video we saw how we can use the",
    "start": "509440",
    "end": "511360"
  },
  {
    "text": "aws sdk",
    "start": "511360",
    "end": "512959"
  },
  {
    "text": "to get the list of aws accounts within",
    "start": "512959",
    "end": "515120"
  },
  {
    "text": "an organization",
    "start": "515120",
    "end": "516399"
  },
  {
    "text": "either as a flat list or maintaining the",
    "start": "516399",
    "end": "518800"
  },
  {
    "text": "ou structure",
    "start": "518800",
    "end": "520240"
  },
  {
    "text": "i hope you enjoyed this video and found",
    "start": "520240",
    "end": "522000"
  },
  {
    "text": "it informative",
    "start": "522000",
    "end": "523360"
  },
  {
    "text": "thank you for watching",
    "start": "523360",
    "end": "532160"
  }
]