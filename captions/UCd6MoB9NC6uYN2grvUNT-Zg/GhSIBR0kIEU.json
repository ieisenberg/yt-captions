[
  {
    "start": "0",
    "end": "20000"
  },
  {
    "text": "[Applause] hello everyone this is hit Alessa thank you so much for tuning in twitch",
    "start": "1440",
    "end": "8130"
  },
  {
    "text": "today this is another episode of Bute on surveillance but this time we have Jason",
    "start": "8130",
    "end": "13980"
  },
  {
    "text": "Bartow once again but now he's the one leaving it I'm not closing today which is awesome too so Jason tell us what",
    "start": "13980",
    "end": "22080"
  },
  {
    "start": "20000",
    "end": "155000"
  },
  {
    "text": "we're gonna do today sure so a lot of the customers that we work with are starting to do more and",
    "start": "22080",
    "end": "28230"
  },
  {
    "text": "more in the area of machine learning and machine learning is notoriously data hungry so a lot of customers are looking",
    "start": "28230",
    "end": "34829"
  },
  {
    "text": "at how to not only just feed data to their machine learning models into their training processes but also how to keep",
    "start": "34829",
    "end": "41340"
  },
  {
    "text": "that data fracture how to keep it up to date in rows and as a result to that keep their models as accurate and as",
    "start": "41340",
    "end": "46860"
  },
  {
    "text": "up-to-date as possible so today what we're gonna walk throughs how to use some of the server list capabilities",
    "start": "46860",
    "end": "51989"
  },
  {
    "text": "within AWS some of which have been discussed before in previous sessions and some which I don't think we've",
    "start": "51989",
    "end": "57300"
  },
  {
    "text": "touched them yet to walk through how we can automate that process how we can capture data from a source modify it",
    "start": "57300",
    "end": "63809"
  },
  {
    "text": "engineer our feature set publish it back out to s3 and then initiate a training",
    "start": "63809",
    "end": "68909"
  },
  {
    "text": "job with using Amazon sage maker and then after that training job will have a model on the other side of it that we",
    "start": "68909",
    "end": "74460"
  },
  {
    "text": "can then test and evaluate after the fact awesome so counsel that we're gonna use that function shortest read the whole piece",
    "start": "74460",
    "end": "81270"
  },
  {
    "text": "and limb that you do some of the compute pieces yeah absolutely and one of my favorite services at the moment is AWS",
    "start": "81270",
    "end": "88170"
  },
  {
    "text": "blue so a lot of customers are using EMR and Hadoop to run spark gels today it's",
    "start": "88170",
    "end": "93780"
  },
  {
    "text": "a great way to in a distributed fashion process your data sets and AWS blue",
    "start": "93780",
    "end": "99780"
  },
  {
    "text": "offers customers the opportunity to run with basically a service spark environment so it allows customers throw",
    "start": "99780",
    "end": "106350"
  },
  {
    "text": "in spark jobs spark ml so you can do your ml workloads on there as well if you wanted to and so we're gonna be",
    "start": "106350",
    "end": "112229"
  },
  {
    "text": "using that today as a way to scale out our feature engineering the data set that are we working with today isn't",
    "start": "112229",
    "end": "118469"
  },
  {
    "text": "that large it's I think the total size from you know I think it's like 365 plus",
    "start": "118469",
    "end": "123840"
  },
  {
    "text": "days of data we're not gonna be using a little bit today but even end-to-end it's about eight billion rows of data a",
    "start": "123840",
    "end": "129479"
  },
  {
    "text": "lot which yeah I mean if you talk about petabyte scale there's a lot of customers working in",
    "start": "129479",
    "end": "134670"
  },
  {
    "text": "petabyte scale you know having a single machine try to crunch through all those numbers and do it in a timely fashion",
    "start": "134670",
    "end": "140160"
  },
  {
    "text": "it's just not going to work so glue and Hadoop and EMR are great ways to again",
    "start": "140160",
    "end": "145620"
  },
  {
    "text": "distribute that workload its distribute that processing and prepare that data for training so we're gonna use glue as",
    "start": "145620",
    "end": "151620"
  },
  {
    "text": "a part of that as part of that overall step functions workflow today ok perfect and what have you seen customers using",
    "start": "151620",
    "end": "157080"
  },
  {
    "start": "155000",
    "end": "190000"
  },
  {
    "text": "glue recently sorry well have you seen customers using glue for a lot of it is",
    "start": "157080",
    "end": "163530"
  },
  {
    "text": "for that transformation so that extract transformation in load or even extract load transformation depending on which",
    "start": "163530",
    "end": "169590"
  },
  {
    "text": "what you like to do it in and again they're going to take the spark jobs that they probably have running on Prem",
    "start": "169590",
    "end": "175380"
  },
  {
    "text": "either written in Python or written in Scala and they can just hand that over to glue and run it without having to",
    "start": "175380",
    "end": "181290"
  },
  {
    "text": "operate the EMR environments that they previously would have been spinning up running just the spark job and then",
    "start": "181290",
    "end": "186990"
  },
  {
    "text": "turning them back down so hopefully it's a the customers both on down money ok awesome ends we have a picture CH you have a quick look on what exactly we're",
    "start": "186990",
    "end": "193950"
  },
  {
    "text": "gonna be oh absolutely yeah let's have a look so put together a few charts just kind of walk through the process of what",
    "start": "193950",
    "end": "200400"
  },
  {
    "text": "we're gonna build step by step we're going to start with a data set which is hosted in s3 today and we'll talk a",
    "start": "200400",
    "end": "206610"
  },
  {
    "text": "little bit more about what that data set is in a moment and we're going to create a very very simple glue job that is",
    "start": "206610",
    "end": "213120"
  },
  {
    "text": "going to take those CSV objects that are being published and convert them over to park' and write them into a local bucket",
    "start": "213120",
    "end": "219720"
  },
  {
    "text": "so we're going to copy from that source put them into a local bucket and then after we've done that first step we'll",
    "start": "219720",
    "end": "225660"
  },
  {
    "text": "then take those park' objects and kind of plus up our glue job - then do feature engineering so in between those",
    "start": "225660",
    "end": "232440"
  },
  {
    "text": "two steps the reason we're not going to write it all at once is we don't necessarily know what feature engineering steps we need to",
    "start": "232440",
    "end": "238110"
  },
  {
    "text": "take it with spark so we're gonna spin up the stage maker notebook dive into that use that as a way to explore the",
    "start": "238110",
    "end": "245070"
  },
  {
    "text": "data figure out how we want to modify it what make changes we need to make the data and prepare it for training after",
    "start": "245070",
    "end": "252180"
  },
  {
    "text": "we've done that in a sage maker Jupiter notebook we'll incorporate that back into the glue job so we can start to",
    "start": "252180",
    "end": "257549"
  },
  {
    "text": "productionize that flow next times once we've got that up and running the next thing in a census start to begin to automate",
    "start": "257549",
    "end": "264199"
  },
  {
    "text": "that so well we're out a couple of lambda functions around that that are going to do simple tasks like starting",
    "start": "264199",
    "end": "270229"
  },
  {
    "text": "the job and then monitoring the job and this is said we can then ultimately wrap that entire process in step functions",
    "start": "270229",
    "end": "277160"
  },
  {
    "text": "that make sense so after step function this is going to do for us is this going to start the execution of that job and",
    "start": "277160",
    "end": "283490"
  },
  {
    "text": "then it's gonna monitor the health of that job and if it fails or offender when it succeeds it'll notify us of that",
    "start": "283490",
    "end": "289820"
  },
  {
    "text": "that's why step function so you can orchestrate when something goes wrong we don't having to do everything in their code exactly exactly",
    "start": "289820",
    "end": "295910"
  },
  {
    "text": "and then the next natural flow on from that again we're doing this herd for training purposes is to have a couple of",
    "start": "295910",
    "end": "303530"
  },
  {
    "text": "lambda functions start a training job when I was in Sage makers so by doing that Amazon sage maker will deploy",
    "start": "303530",
    "end": "309800"
  },
  {
    "text": "algorithms and create infrastructure that will then take that training data train the model on it and then we can",
    "start": "309800",
    "end": "316729"
  },
  {
    "text": "even do additional steps we're not going to do them today but we can do additional steps to then test the performance of that model using that",
    "start": "316729",
    "end": "322490"
  },
  {
    "text": "same data set in s3 so those two lambda functions that we see hanging off of Alice's age make are going to start that",
    "start": "322490",
    "end": "328580"
  },
  {
    "text": "training job and then they're also going to monitor the health of that training job just like they're doing with AWS glue and again all of this is going to",
    "start": "328580",
    "end": "335389"
  },
  {
    "text": "be orchestrated by step functions by a single state machine so that when it concludes when the state machine",
    "start": "335389",
    "end": "341870"
  },
  {
    "text": "finishes executing we should have a training model and the other side of it that we can then begin to work with and poke and prod at see how it performs",
    "start": "341870",
    "end": "348020"
  },
  {
    "text": "versus maybe what we have in production today that's also okay then the last thing to do so is that's great we've got",
    "start": "348020",
    "end": "355099"
  },
  {
    "text": "step functions is going to do all of that work for us we now have a kind of complex workflow built down but we still",
    "start": "355099",
    "end": "363229"
  },
  {
    "text": "need to execute that we need still need someone to kind of push the button on that and that's where step sorry clog",
    "start": "363229",
    "end": "369229"
  },
  {
    "text": "watch scheduled events comes in so we will schedule that to execute nightly as a job and what that is meant to reflect",
    "start": "369229",
    "end": "375710"
  },
  {
    "text": "is that every time new data gets published that source database that source s3 bucket we can rerun step",
    "start": "375710",
    "end": "382250"
  },
  {
    "text": "functions in an automated fashion it'll automatically pull that data in again engineer that data set and then retrain",
    "start": "382250",
    "end": "388759"
  },
  {
    "text": "the model so that every morning when we come the office we've got a fresh new model waiting for us and we can again pay",
    "start": "388759",
    "end": "394880"
  },
  {
    "text": "additional automation off the back of that so that we can test that model if it's more performant maybe do something",
    "start": "394880",
    "end": "400850"
  },
  {
    "text": "like promoted automatically into production cool and how does this tape machine look like ah here you go so this",
    "start": "400850",
    "end": "409700"
  },
  {
    "text": "is not I'm sure the most complex step function state machine that anybody's ever seen but the key thing I want to",
    "start": "409700",
    "end": "416030"
  },
  {
    "text": "highlight here is that we've got primarily two activities as we saw in the previous chart we've got the glue",
    "start": "416030",
    "end": "421760"
  },
  {
    "text": "job that we need to have run in order to do the feature engineering and then we've got the sage maker training job",
    "start": "421760",
    "end": "427010"
  },
  {
    "text": "that we need to have run in order to produce the model the main pattern that",
    "start": "427010",
    "end": "432350"
  },
  {
    "text": "we're adopting here as far as step functions is concerned is this start weight check and then revisit process",
    "start": "432350",
    "end": "441410"
  },
  {
    "text": "that you see over here on the right hand side so we're going to start an activity we're going to execute a lambda function and then we're going to just wait a",
    "start": "441410",
    "end": "447980"
  },
  {
    "text": "period of time blue jobs you know I think the one that we're running with today takes about 60 seconds to process",
    "start": "447980",
    "end": "453560"
  },
  {
    "text": "through all that data equally the the sage maker training job I think takes about five minutes so we've incorporated",
    "start": "453560",
    "end": "459979"
  },
  {
    "text": "a wait time into that so we're not just constantly thinking that API right so we're gonna wait about sixty seconds",
    "start": "459979",
    "end": "465590"
  },
  {
    "text": "check the status of the glue job find out if it has failed succeeded maybe",
    "start": "465590",
    "end": "470630"
  },
  {
    "text": "it's still running and then kind of keep going in that cyclical method until the",
    "start": "470630",
    "end": "475940"
  },
  {
    "text": "job is either completed or failed and then we'll pop out of that neither move into training or we'll just error out",
    "start": "475940",
    "end": "482150"
  },
  {
    "text": "report what I like about this approach is as many customers were asking even before an SQL integration with lambda",
    "start": "482150",
    "end": "488090"
  },
  {
    "text": "that they were doing something async or actually some process something someone",
    "start": "488090",
    "end": "493550"
  },
  {
    "text": "would actually take probably a minute sometimes two minutes or even sometimes at then which is actually observable you",
    "start": "493550",
    "end": "500120"
  },
  {
    "text": "could take a day for something and they wouldn't once you wait for them inside it on the functions because well we were",
    "start": "500120",
    "end": "506090"
  },
  {
    "text": "paying for that wait yeah and that's that functions perfect for this when you're doing a white are you injecting a",
    "start": "506090",
    "end": "512210"
  },
  {
    "text": "white time step or you're we are waiting for a particular let's say 12 hours an hour so we've not got a hard-coded into",
    "start": "512210",
    "end": "519620"
  },
  {
    "text": "step function set functions has fantastic capability for taking parameters and taking inputs and",
    "start": "519620",
    "end": "525710"
  },
  {
    "text": "allowing you to modify those inputs as part of the flow what we've got is that in this source event in the basically",
    "start": "525710",
    "end": "532070"
  },
  {
    "text": "the state machine definition the input to that we put a wait time for each one of those steps so we've got that in our",
    "start": "532070",
    "end": "538460"
  },
  {
    "text": "parameters file if we wanted to do this in a more advanced fashion we could actually have that check transformation",
    "start": "538460",
    "end": "544940"
  },
  {
    "text": "status keep track of how many times it's checked in the past by putting that back into the state and then modifying that",
    "start": "544940",
    "end": "551600"
  },
  {
    "text": "wait time and then we can reference that and you'll see how we're doing that in the same state machine declaration when",
    "start": "551600",
    "end": "556970"
  },
  {
    "text": "we get to it perfectly okay what do they do next do we start yeah let's go ahead",
    "start": "556970",
    "end": "562760"
  },
  {
    "text": "and get started first things first let's introduce the data set that we're going to be working with today so I'm a",
    "start": "562760",
    "end": "569170"
  },
  {
    "text": "Solutions Architect for anybody did enjoy this originally and I work with a",
    "start": "569170",
    "end": "574340"
  },
  {
    "text": "lot of financial services customers so I'm very happy to be playing today with the Deutsche börse ax dataset which is",
    "start": "574340",
    "end": "580070"
  },
  {
    "text": "available in the AWS registry of open data this is intraday data intraday trading",
    "start": "580070",
    "end": "586850"
  },
  {
    "text": "data that Deutsche börse publicly published into an s3 bucket and",
    "start": "586850",
    "end": "592040"
  },
  {
    "text": "you can see here I think haters gonna be sending out the link here in a moment but you can visit the website get links",
    "start": "592040",
    "end": "599090"
  },
  {
    "text": "to the s3 bucket that they run an operating that they publish this data to and then begin to do exactly what we're",
    "start": "599090",
    "end": "604730"
  },
  {
    "text": "going to do today which is copied over to the local bucket and start to explore it awesome I just send the link to",
    "start": "604730",
    "end": "610190"
  },
  {
    "text": "everyone else whatever actually what everyone who'd just joined the chat I just kind of said it again just in case",
    "start": "610190",
    "end": "616160"
  },
  {
    "text": "and if you actually take the register that open data that AWS you can actually find even more datasets so this is the",
    "start": "616160",
    "end": "624140"
  },
  {
    "text": "one we're gonna be using today but feel free to actually take a stab and everybody else everything else cool",
    "start": "624140",
    "end": "631010"
  },
  {
    "text": "so with that groundwork laid down let's go ahead and get started any other things that we should mention before we get in no I think we're pretty good I",
    "start": "631010",
    "end": "637790"
  },
  {
    "text": "think we got a quick overview of the services if you just joined right now or just actually sent you a text message on",
    "start": "637790",
    "end": "644420"
  },
  {
    "text": "the chat expending while we're going to be doing we will revisit is in about 10 to 15 minutes oh cool that's that's Kiko",
    "start": "644420",
    "end": "651230"
  },
  {
    "text": "so let's get started with some of the there's not the whole lot of ground work to do but in the interests of best",
    "start": "651230",
    "end": "656600"
  },
  {
    "text": "practices we are going to do things like creating a couple of eye Emeril's giving ourselves permissions and creating an",
    "start": "656600",
    "end": "662000"
  },
  {
    "text": "Escalade bucket so let's start there let's start with our s3 bucket we're",
    "start": "662000",
    "end": "667730"
  },
  {
    "text": "going to create our very first data Lake in the form of a single s3 bucket so I'm",
    "start": "667730",
    "end": "672740"
  },
  {
    "text": "going to call this Ireland data Lake and actually let's",
    "start": "672740",
    "end": "678710"
  },
  {
    "text": "make that a little bit more specific to us auto trainer ok Ireland big lake",
    "start": "678710",
    "end": "684080"
  },
  {
    "text": "unless we get the name clash alright now we've got our data Lake if you will",
    "start": "684080",
    "end": "690890"
  },
  {
    "text": "let's create some I am permissions so that's glue lambda sage maker so they",
    "start": "690890",
    "end": "697100"
  },
  {
    "text": "can start to read and write to that to that bucket I'm gonna create a role",
    "start": "697100",
    "end": "703780"
  },
  {
    "text": "let's give it to glue to start with okay and let's call it let's see we want to",
    "start": "705490",
    "end": "714770"
  },
  {
    "text": "give it the glue service role well",
    "start": "714770",
    "end": "719990"
  },
  {
    "text": "actually no sorry let me back up so go to previous or you might create everything from scratch okay yeah",
    "start": "719990",
    "end": "727370"
  },
  {
    "text": "actually now I'm just going to create a policy so the policy that I want to create is for that s3 bucket and I want",
    "start": "727370",
    "end": "734900"
  },
  {
    "text": "to give all actions to just that bucket make sense so for those of you who are",
    "start": "734900",
    "end": "742880"
  },
  {
    "text": "just tuning right now what the reason we're doing all this piece is if the whole groundwork is to make sure that",
    "start": "742880",
    "end": "747890"
  },
  {
    "text": "the glue can access that s3 bucket we're just created and every file every data set the whole data set we're going to be",
    "start": "747890",
    "end": "754400"
  },
  {
    "text": "using the glue as a service connection acts of that different from actually giving that role permission to a single",
    "start": "754400",
    "end": "760970"
  },
  {
    "text": "item user we're giving that actually true I need a bus service alright so I'm",
    "start": "760970",
    "end": "767510"
  },
  {
    "text": "gonna call this data label access and that policy is gonna grant anybody who",
    "start": "767510",
    "end": "773210"
  },
  {
    "text": "has it attached to them the ability to read write and do anything they need to leave that s3 maybe a little bit too permissive but at",
    "start": "773210",
    "end": "780220"
  },
  {
    "text": "least it's locked down to that bucket for today's purposes cool all right now",
    "start": "780220",
    "end": "787180"
  },
  {
    "text": "the first thing to do after that is to create the glue job so let's give that glue job that we're going to create is a",
    "start": "787180",
    "end": "793750"
  },
  {
    "text": "neat permission it's like everything else so let's go ahead and create that roll that we started to create a moment",
    "start": "793750",
    "end": "799360"
  },
  {
    "text": "ago just for glue if any time you continue to go as you is replenishing if",
    "start": "799360",
    "end": "807700"
  },
  {
    "text": "I remember correctly glue can need permission to access x3 resources and I",
    "start": "807700",
    "end": "813190"
  },
  {
    "text": "also can invoke along the function shoot or I could be wrong on the second one so",
    "start": "813190",
    "end": "819430"
  },
  {
    "start": "818000",
    "end": "1455000"
  },
  {
    "text": "it's a fair question what can you or can't you do with a glue job so the glue job is Python code or",
    "start": "819430",
    "end": "827470"
  },
  {
    "text": "Scala code and with some exceptions you can do pretty much anything that you can",
    "start": "827470",
    "end": "833170"
  },
  {
    "text": "do with say a lambda function you've got network connectivity you've got ability to access the API you can",
    "start": "833170",
    "end": "839530"
  },
  {
    "text": "attach it to a V PC if you need to so you've got a lot of flexibility there what I've done in the past is to make",
    "start": "839530",
    "end": "846790"
  },
  {
    "text": "calls I'll test three I've not yet attached myself to say an RDS instance",
    "start": "846790",
    "end": "852010"
  },
  {
    "text": "but you could do that I thought about doing that for today about I gave it a Miss in the end but yeah there's not yet",
    "start": "852010",
    "end": "857950"
  },
  {
    "text": "too many restrictions in terms of blacks and one restriction versus lambda functions if you try to bring say pandas",
    "start": "857950",
    "end": "865360"
  },
  {
    "text": "to a glue job glue today does not support Python modules that are sea",
    "start": "865360",
    "end": "870640"
  },
  {
    "text": "based so you can provide your own custom modules you can even provide third-party modules as dependencies to your code but",
    "start": "870640",
    "end": "877630"
  },
  {
    "text": "if they've got a sea library on the backend of them that's not supported currently today right ok ok cool let's",
    "start": "877630",
    "end": "884830"
  },
  {
    "text": "go so next review give it a name yeah and then we can kick off on the clothing",
    "start": "884830",
    "end": "891370"
  },
  {
    "text": "piece auto trainer glue service alright",
    "start": "891370",
    "end": "899830"
  },
  {
    "text": "and that's got permission sooner operate with glue it's got permissions to read to s3 and actually I forgot to attach",
    "start": "899830",
    "end": "906280"
  },
  {
    "text": "our new data Lake policy to it so let's do",
    "start": "906280",
    "end": "911460"
  },
  {
    "text": "attached policy search for data lake",
    "start": "911500",
    "end": "917110"
  },
  {
    "text": "every our data Lake full access and attach that policy can can everybody see",
    "start": "917110",
    "end": "924380"
  },
  {
    "text": "this well enough is the zoom level about right yeah I'm just looking at on the feet screen right now so he looks wither",
    "start": "924380",
    "end": "929960"
  },
  {
    "text": "to me okay to me so I would I will be fine okay as as we go to step functions and everything else then we can definitely",
    "start": "929960",
    "end": "935930"
  },
  {
    "text": "zoom in okay so we now have the beginnings we've we've created some",
    "start": "935930",
    "end": "942440"
  },
  {
    "text": "permissions we've created some roles we've created an s3 data an s3 bucket",
    "start": "942440",
    "end": "947720"
  },
  {
    "text": "that we can now copy that Deutsche börse of data into let's not create the glue job to do just that",
    "start": "947720",
    "end": "953000"
  },
  {
    "text": "so I'm going to go to the glue console now in actual production environment I",
    "start": "953000",
    "end": "958580"
  },
  {
    "text": "mean today we're just kind of doing some development in just some experimentation so I'm going to be doing a lot of work",
    "start": "958580",
    "end": "963590"
  },
  {
    "text": "with the console a little bit of work with my IDE in actual fact you probably want to use",
    "start": "963590",
    "end": "968600"
  },
  {
    "text": "Sam with CloudFormation for actually pushing changes into the environment as you start to develop into Baltus to talk",
    "start": "968600",
    "end": "976910"
  },
  {
    "text": "about glue a little bit in terms of how it operates you've got three key sections the databases are you can have",
    "start": "976910",
    "end": "983990"
  },
  {
    "text": "more than one database and two that you're going to add tables tables are one or more objects that you've got in",
    "start": "983990",
    "end": "989360"
  },
  {
    "text": "s3 and those can be discovered by crawlers in your environment those crawlers can either be customized by",
    "start": "989360",
    "end": "996260"
  },
  {
    "text": "yourself in terms of what they look for and how they perform or you can do what we're going to do today which is just",
    "start": "996260",
    "end": "1001600"
  },
  {
    "text": "use one of the ones out of the box and it'll recognize things like CSV documents park' documents Avro I think",
    "start": "1001600",
    "end": "1008230"
  },
  {
    "text": "as well a lot of the common popular data formats that are out there today and we'll publish those into the hive Metis",
    "start": "1008230",
    "end": "1015490"
  },
  {
    "text": "storage is on the back end of glue and make them available in addition to",
    "start": "1015490",
    "end": "1020650"
  },
  {
    "text": "objects in s3 it can also scan databases that you've got in your environments RDS instances an example so you've got the ability to",
    "start": "1020650",
    "end": "1027130"
  },
  {
    "text": "catalogue those as well in addition to crawlers in the databases where we're",
    "start": "1027130",
    "end": "1032380"
  },
  {
    "text": "going to be focusing on at the moment are nuggie of jobs and jobs again are the spark jobs that you want to run in",
    "start": "1032380",
    "end": "1038230"
  },
  {
    "text": "your environment to capture data and manipulate data so we're going to be leaning on that pretty heavily today and",
    "start": "1038230",
    "end": "1044650"
  },
  {
    "text": "then after those jobs have completed we want to rerun the crawler so that re scans the environment and detects any",
    "start": "1044650",
    "end": "1050620"
  },
  {
    "text": "new data that's been put into it so let's get started first I want to create",
    "start": "1050620",
    "end": "1058120"
  },
  {
    "text": "the color as we were just mentioning a moment ago and that crawler we want to point it at our data leg but they don't",
    "start": "1058120",
    "end": "1065200"
  },
  {
    "text": "like you mean that extra bucket we created before and exactly we're gonna",
    "start": "1065200",
    "end": "1075070"
  },
  {
    "text": "go with the default settings we're gonna point it at our de Lake and it's left",
    "start": "1075070",
    "end": "1083970"
  },
  {
    "text": "okay so it's just going to scan everything in that bucket regardless of",
    "start": "1083970",
    "end": "1089410"
  },
  {
    "text": "the prefix and those prefixes will have meaning though in terms of the overall tables that get produced as a part of",
    "start": "1089410",
    "end": "1096430"
  },
  {
    "text": "that and we'll see that represented as we get a little bit further into this no we're",
    "start": "1096430",
    "end": "1102220"
  },
  {
    "text": "not an additional data store yes we're gonna provide an existing I am broken",
    "start": "1102220",
    "end": "1108130"
  },
  {
    "text": "policy they were done I am role which is interesting because he also creates one",
    "start": "1108130",
    "end": "1113590"
  },
  {
    "text": "I am role makes things easier mmm we're gonna go with run on demand equally we",
    "start": "1113590",
    "end": "1120370"
  },
  {
    "text": "can have that run in a sort of automated fashion similar to what we're gonna settle with clock wash events later on",
    "start": "1120370",
    "end": "1126790"
  },
  {
    "text": "we're gonna have it right that data to a new database",
    "start": "1126790",
    "end": "1132840"
  },
  {
    "text": "and next this is a summary of everything that we just configured again taking a",
    "start": "1137240",
    "end": "1143790"
  },
  {
    "text": "lot of the defaults here and click finish one thing I liked about that when you can you zoom in a little bit just a",
    "start": "1143790",
    "end": "1149640"
  },
  {
    "text": "good one thing I liked about the eye eyes it just probably just one zoom",
    "start": "1149640",
    "end": "1155160"
  },
  {
    "text": "should be fine here we go awesome one thing I quite liked when you",
    "start": "1155160",
    "end": "1160800"
  },
  {
    "text": "are creating at the crawler which I don't think is obvious for the first time forever for people who are seeing that now you can select an extra bucket",
    "start": "1160800",
    "end": "1167190"
  },
  {
    "text": "in your account the one that we are using right now but you could also scan or crawl as your buckets and your other",
    "start": "1167190",
    "end": "1173610"
  },
  {
    "text": "accounts then that makes life so much easier in many ways yeah especially because you've likely once you have that",
    "start": "1173610",
    "end": "1178710"
  },
  {
    "text": "day that makes somewhere else yeah absolutely and one of the things to note is that one of the gotchas if you start",
    "start": "1178710",
    "end": "1186840"
  },
  {
    "text": "to explore say that deutsche börse the data set is that they will publish data to the recipe bucket even if it's only",
    "start": "1186840",
    "end": "1193200"
  },
  {
    "text": "the header that thing is going to be the CSV format so every record in there will at the very least have a header if",
    "start": "1193200",
    "end": "1199410"
  },
  {
    "text": "there's no rows of data to it though the glue crawler will get confused so one of",
    "start": "1199410",
    "end": "1205350"
  },
  {
    "text": "the things we're going to be doing is a part of that glue jump we're not gonna have glue scanning that Deutsche börse and data set directly we're instead",
    "start": "1205350",
    "end": "1212640"
  },
  {
    "text": "going to have it scan our local bucket and we'll have the glue job first capture the data do a bit of process and",
    "start": "1212640",
    "end": "1217950"
  },
  {
    "text": "do a bit of sanity checking if it's an empty record we're not going to copy it over if there's data there then let's",
    "start": "1217950",
    "end": "1223350"
  },
  {
    "text": "bring it in and then we'll crawl them nice ok so what's next in that week we create the jump",
    "start": "1223350",
    "end": "1228960"
  },
  {
    "text": "yep so we've got a crawler we've got our database the next thing to do is to create our job so let's say add jump",
    "start": "1228960",
    "end": "1237530"
  },
  {
    "text": "trainer coming up with names is so hard",
    "start": "1239180",
    "end": "1245640"
  },
  {
    "text": "every every session we do no matter how even actually doing live demos on on",
    "start": "1245640",
    "end": "1251580"
  },
  {
    "text": "stage is actually always a struggle not",
    "start": "1251580",
    "end": "1256980"
  },
  {
    "text": "rent for sure we're gonna give it that same glue service we're gonna tell it that we are",
    "start": "1256980",
    "end": "1264420"
  },
  {
    "text": "gonna offer the script by hand and my I am session is just timed out oh wow okay",
    "start": "1264420",
    "end": "1271800"
  },
  {
    "text": "it is a lot of demo folks so that's the way it goes Auto trainer transformation",
    "start": "1271800",
    "end": "1279380"
  },
  {
    "text": "job whoo-hoo servants you script we're",
    "start": "1279380",
    "end": "1285960"
  },
  {
    "text": "gonna use Python on Scala it's going to create whatever it is that we feed into the editor into s3 and store that in s3",
    "start": "1285960",
    "end": "1293160"
  },
  {
    "text": "store our script in s3 we're also going to find a couple of parameters so as",
    "start": "1293160",
    "end": "1299250"
  },
  {
    "text": "part of the execution of this we don't want a hard code excuse me values like",
    "start": "1299250",
    "end": "1304980"
  },
  {
    "text": "the date if you take a look at the Deutsche börse the data set the bucket that they're using is partitioned by",
    "start": "1304980",
    "end": "1311820"
  },
  {
    "text": "year month and date and so we want to copy particular dates because when it",
    "start": "1311820",
    "end": "1318180"
  },
  {
    "text": "becomes tomorrow we don't want to copy the entire data set we don't to modify the entire dataset before any done that",
    "start": "1318180",
    "end": "1323490"
  },
  {
    "text": "work so we just want to copy the most recent date so we're gonna have a parameter that gets sent to our new job",
    "start": "1323490",
    "end": "1329760"
  },
  {
    "text": "of date and we're gonna just set that as a default value of the 15th of August",
    "start": "1329760",
    "end": "1337350"
  },
  {
    "text": "just because but on a day-by-day basis and we'll see this in the cloud watch event definition later on we're gonna",
    "start": "1337350",
    "end": "1344550"
  },
  {
    "text": "provide it with the most recent date obviously this is just a default value we're also going to put in source bucket",
    "start": "1344550",
    "end": "1352770"
  },
  {
    "text": "and that's where we want to put the year X what is the name of that bucket again",
    "start": "1352770",
    "end": "1362120"
  },
  {
    "text": "target bucket called it the trainer",
    "start": "1371200",
    "end": "1378730"
  },
  {
    "text": "higher than table Lake and then finally",
    "start": "1378730",
    "end": "1386200"
  },
  {
    "text": "crowing that - - is that something as more of a preference or is this something else needed it's needed it's",
    "start": "1386200",
    "end": "1393590"
  },
  {
    "text": "because of the way that the way that blue executes these essentially get turned into command-line parameters right and so the - dashes are required",
    "start": "1393590",
    "end": "1400700"
  },
  {
    "text": "okay once if we call our crawler auto trainer daily crawler I think trainer",
    "start": "1400700",
    "end": "1409040"
  },
  {
    "text": "Ireland a lake yes all right now no connections at the",
    "start": "1409040",
    "end": "1417440"
  },
  {
    "text": "moments these connections are glued it does its best to provide you with a bit",
    "start": "1417440",
    "end": "1422510"
  },
  {
    "text": "of a point-and-click interface for some of the transformations and so if we're able to provide it with a source schema",
    "start": "1422510",
    "end": "1427700"
  },
  {
    "text": "again maybe that Deutsche börse the data set if we've had it scan it as well as a target schema it can start to do a lot",
    "start": "1427700",
    "end": "1434150"
  },
  {
    "text": "of the mappings for us in a rather intelligent way we don't have any of that information for it yet we're just",
    "start": "1434150",
    "end": "1439880"
  },
  {
    "text": "going to go blindly I'm not actually let glue help us okay so we're gonna save",
    "start": "1439880",
    "end": "1446480"
  },
  {
    "text": "that job and edit the script it looks",
    "start": "1446480",
    "end": "1453500"
  },
  {
    "text": "like as I'm just a normal plan item I don't accept that we have a de Bresse",
    "start": "1453500",
    "end": "1458660"
  },
  {
    "start": "1455000",
    "end": "1515000"
  },
  {
    "text": "glue library in there we do yes you've got access to both EWS glue libraries",
    "start": "1458660",
    "end": "1464900"
  },
  {
    "text": "and their transformations we can see kind of buttons for the templates for those up here you've also got access to",
    "start": "1464900",
    "end": "1473210"
  },
  {
    "text": "just the raw PI spark as well so we're going to be using some of the we're gonna be using a bit of a mix during the",
    "start": "1473210",
    "end": "1479960"
  },
  {
    "text": "feature engineering because in the notebook we're going to have access to PI spark that's what we're going to incorporate back for now we're going to",
    "start": "1479960",
    "end": "1486560"
  },
  {
    "text": "be putting into this glue job is just to copy and read the data using the glue",
    "start": "1486560",
    "end": "1491930"
  },
  {
    "text": "library is from Deutsch forces s3 bucket into memory as the data and then we write that data frame back",
    "start": "1491930",
    "end": "1498870"
  },
  {
    "text": "out again via those glue libraries as parquet so Susan just before you",
    "start": "1498870",
    "end": "1503909"
  },
  {
    "text": "continue sounds like we got a typo I'm just trying to find out where people are saying there's a typo on auto trainer",
    "start": "1503909",
    "end": "1509220"
  },
  {
    "text": "you left out a tee ah but I couldn't see in there maybe it was the crawler where if any PSU or yeah okay let's have a",
    "start": "1509220",
    "end": "1519179"
  },
  {
    "start": "1515000",
    "end": "1555000"
  },
  {
    "text": "look in the target bucket okay so let's",
    "start": "1519179",
    "end": "1526440"
  },
  {
    "text": "go in there the job thanks for helping up hair programming it works okay so yeah",
    "start": "1526440",
    "end": "1538679"
  },
  {
    "text": "here we go awesome the target bucket will spot it perfect yep",
    "start": "1538679",
    "end": "1543710"
  },
  {
    "text": "send in the t-shirt all right no I've",
    "start": "1543710",
    "end": "1557549"
  },
  {
    "text": "got to admit that PI spark and even glue jobs are not my first language so if you",
    "start": "1557549",
    "end": "1564299"
  },
  {
    "text": "don't mind I'm going to pull a bit of a ripcord here and copy and paste some code but I will explain exactly what",
    "start": "1564299",
    "end": "1569490"
  },
  {
    "text": "that code is doing so the first thing we need to do is to copy over the data from",
    "start": "1569490",
    "end": "1583769"
  },
  {
    "text": "s3 and before we even do that you'll see this pram section of there",
    "start": "1583769",
    "end": "1589139"
  },
  {
    "start": "1585000",
    "end": "1615000"
  },
  {
    "text": "get resolved options get resolved options is a part of the glue libraries",
    "start": "1589139",
    "end": "1594510"
  },
  {
    "text": "new module that gets incorporated into a glue job so where we were specifying the source bucket target bucket date etc",
    "start": "1594510",
    "end": "1601590"
  },
  {
    "text": "we've got to put those in here just like you would if you're say using OS dot environ or similar so let's put in date",
    "start": "1601590",
    "end": "1611450"
  },
  {
    "text": "and by the way one of those you are watching this live and by the way thanks for the heads up",
    "start": "1611450",
    "end": "1617870"
  },
  {
    "start": "1615000",
    "end": "1705000"
  },
  {
    "text": "[Music] just to make sure people understand that this is live it is not pre-recorded mmm",
    "start": "1617870",
    "end": "1626730"
  },
  {
    "text": "okay so happy with that and then let's clean",
    "start": "1626730",
    "end": "1633130"
  },
  {
    "text": "this up so it's maybe a little bit more readable what we're gonna be doing is using the glue context this is very",
    "start": "1633130",
    "end": "1640270"
  },
  {
    "text": "similar to a spark session or spark context and it's gonna provide us with",
    "start": "1640270",
    "end": "1645790"
  },
  {
    "text": "the way to read what's called a dynamic frame if you don't have background in",
    "start": "1645790",
    "end": "1651730"
  },
  {
    "text": "other spark or pandas or even more really dynamic frames are very very",
    "start": "1651730",
    "end": "1656950"
  },
  {
    "text": "similar to data frames and it's a way of putting into rows and columns any data",
    "start": "1656950",
    "end": "1662950"
  },
  {
    "text": "set that you can read with one of those libraries and it provides us with a way",
    "start": "1662950",
    "end": "1668020"
  },
  {
    "text": "to easily manipulate the kind of two-dimensional fashion those data sets so we're today what we have is a",
    "start": "1668020",
    "end": "1674260"
  },
  {
    "text": "collection of CSV files in the Deutsche börse and Abel s3 bucket we're gonna",
    "start": "1674260",
    "end": "1679690"
  },
  {
    "text": "read those into a dynamic frame which is slightly different from a data frame in terms of how it infers data types and",
    "start": "1679690",
    "end": "1686710"
  },
  {
    "text": "how static those data types are for the individual columns there's some great documentation on the glue homepage about",
    "start": "1686710",
    "end": "1692920"
  },
  {
    "text": "what exactly dynamic frame is in comparison with data frames and how when you might want to use them what we're",
    "start": "1692920",
    "end": "1699790"
  },
  {
    "text": "going to be doing today is leaving it as is for the simplicity and convenience and having basically two lines of code",
    "start": "1699790",
    "end": "1705880"
  },
  {
    "start": "1705000",
    "end": "1765000"
  },
  {
    "text": "for copying and then writing back out the data the important thing here with this create dynamic frame is we need to",
    "start": "1705880",
    "end": "1713050"
  },
  {
    "text": "tell it to communicate with us three and then we need to tell it where that s3 bucket is this is going to be our source",
    "start": "1713050",
    "end": "1724750"
  },
  {
    "text": "bucket make sense enough that - - and I",
    "start": "1724750",
    "end": "1730450"
  },
  {
    "text": "think we better turn that into a source you are",
    "start": "1730450",
    "end": "1735300"
  },
  {
    "text": "okay",
    "start": "1756150",
    "end": "1759150"
  },
  {
    "start": "1765000",
    "end": "1855000"
  },
  {
    "text": "okay so let me just send yeah so just",
    "start": "1766149",
    "end": "1771279"
  },
  {
    "text": "ps2 people apologize from now Assad for auto moderation safe something else done",
    "start": "1771279",
    "end": "1777249"
  },
  {
    "text": "you don't need to worry about Jason we accidentally just muted someone in the message there was actually our or fall",
    "start": "1777249",
    "end": "1785099"
  },
  {
    "text": "and yeah local rule thanks for joining by the way looks right that's going to",
    "start": "1785099",
    "end": "1806259"
  },
  {
    "text": "basically create it pads something along the lines that's three your ex yes get",
    "start": "1806259",
    "end": "1815349"
  },
  {
    "text": "the full name of the dick bucket and then it'll be two zero one eight zero eight - super five and what glue will do",
    "start": "1815349",
    "end": "1824559"
  },
  {
    "text": "on our behalf as in scan every object my liver that prefix ok so just just to put check one thing here so I'm looking at",
    "start": "1824559",
    "end": "1830679"
  },
  {
    "text": "the diet diaphragm create dynamic frame options there's a path key and then arts",
    "start": "1830679",
    "end": "1836279"
  },
  {
    "text": "source as three URI is that is that right if you go back in there you see",
    "start": "1836279",
    "end": "1842439"
  },
  {
    "text": "that the past key at line 22 line 22 yeah yeah so the arts and source s3 you",
    "start": "1842439",
    "end": "1849369"
  },
  {
    "text": "alright but actually that seems to be different yeah yeah go also got let's",
    "start": "1849369",
    "end": "1857769"
  },
  {
    "start": "1855000",
    "end": "1885000"
  },
  {
    "text": "just double click on my browser there if",
    "start": "1857769",
    "end": "1863349"
  },
  {
    "text": "you also have to bring this up to your visual studio code or in other IDE or it's all that free to do it I think it's",
    "start": "1863349",
    "end": "1869679"
  },
  {
    "text": "easier to spot some of those pieces we definitely have people who are willing to help but there's this is lots",
    "start": "1869679",
    "end": "1876969"
  },
  {
    "text": "definitely something was gonna go wrong all right here we go",
    "start": "1876969",
    "end": "1883179"
  },
  {
    "text": "can you increase can you do so I mean zoom just one level awesome perfect okay",
    "start": "1883179",
    "end": "1889599"
  },
  {
    "text": "if you feature high that piece yes alright so we've got our primers being",
    "start": "1889599",
    "end": "1895449"
  },
  {
    "text": "read in we've got our source you are being crafted equally where I need a target your eye to be crafted by",
    "start": "1895449",
    "end": "1903150"
  },
  {
    "text": "the way that's less lashes on a heightened comment so that's gonna fail thank you this is the issue winner I",
    "start": "1903150",
    "end": "1910350"
  },
  {
    "text": "keep switching switching between languages all the time I do that when",
    "start": "1910350",
    "end": "1915750"
  },
  {
    "text": "I'm doing typescript or JavaScript or the top and we've captured the crawler",
    "start": "1915750",
    "end": "1926430"
  },
  {
    "text": "we've got the date where we want it so I think we are okay again when we read",
    "start": "1926430",
    "end": "1932700"
  },
  {
    "text": "that data from s3 we're specifying that it has a format of CSV and that there is",
    "start": "1932700",
    "end": "1939090"
  },
  {
    "text": "a header there so that it knows to strip that out and not try to treat that first line like it is a record of data all",
    "start": "1939090",
    "end": "1950910"
  },
  {
    "text": "right now next thing to do is to write it back out to s3",
    "start": "1950910",
    "end": "1957680"
  },
  {
    "text": "okay so we're before we were doing a create dynamic frame we're now doing a",
    "start": "1965260",
    "end": "1971000"
  },
  {
    "text": "write dynamic frame from we're going to pass it that dynamic frame this is going",
    "start": "1971000",
    "end": "1976730"
  },
  {
    "text": "to become more prevalent in the next stage where after we've explored the data we're going to need to manipulate",
    "start": "1976730",
    "end": "1982010"
  },
  {
    "text": "that a dynamic frame at the moment it's just a memory reference so we're going to be passing that back into glue so",
    "start": "1982010",
    "end": "1988250"
  },
  {
    "text": "they can write it to our target s3 you are not or accomplish this for your honor yeah I was going to say that I",
    "start": "1988250",
    "end": "1993770"
  },
  {
    "text": "guys like whoops that seems to be yeah and we want to write it out as a format",
    "start": "1993770",
    "end": "1999590"
  },
  {
    "text": "of park' okay so hang on there's there's",
    "start": "1999590",
    "end": "2007330"
  },
  {
    "text": "an indirect glue context is red line number 30 so let me see yeah so line",
    "start": "2007330",
    "end": "2018640"
  },
  {
    "text": "number 30 haha I see it they're gonna go haha right now in a very uncool way",
    "start": "2018640",
    "end": "2029679"
  },
  {
    "text": "we're gonna know this copy paste this back in and click saved I think it's",
    "start": "2029679",
    "end": "2035350"
  },
  {
    "start": "2035000",
    "end": "2095000"
  },
  {
    "text": "fine there's no shame with that we are very professional now just to trial this",
    "start": "2035350",
    "end": "2041679"
  },
  {
    "text": "out I should mention too that while we're doing kind of this cut and pasting back and forth between the web console",
    "start": "2041679",
    "end": "2047020"
  },
  {
    "text": "and our IDE again in the real life environment well you probably want to do is take advantage of developer endpoints",
    "start": "2047020",
    "end": "2053070"
  },
  {
    "text": "developer endpoints is something that glue the glue service makes available that you can connect something like a",
    "start": "2053070",
    "end": "2058780"
  },
  {
    "text": "Zeppelin notebook up to or you can even SSH into them and get an interactive rep with glue so you can do this in a much",
    "start": "2058780",
    "end": "2065888"
  },
  {
    "text": "more interactive fashion and experiment quite online with glue we're just not",
    "start": "2065889",
    "end": "2071530"
  },
  {
    "text": "doing that today so we're we may have pasted this into a Zeppelin notebook or",
    "start": "2071530",
    "end": "2077020"
  },
  {
    "text": "even developed it in a Zeppelin notebook and kind of execute iterate on it interactively today the interest of",
    "start": "2077020",
    "end": "2082990"
  },
  {
    "text": "speeding time we're just kind of chugging along putting the code in and now what we're gonna do is test it by",
    "start": "2082990",
    "end": "2088210"
  },
  {
    "text": "cooking code or rather run job what that's going to do is it takes those default",
    "start": "2088210",
    "end": "2093358"
  },
  {
    "text": "parameters that we specified earlier and keeps those in but also gives us the opportunity to change those we just what",
    "start": "2093359",
    "end": "2099390"
  },
  {
    "start": "2095000",
    "end": "2125000"
  },
  {
    "text": "we're gonna Leonard later on when we start to script this so let's click 1 job and while that's running what we'll",
    "start": "2099390",
    "end": "2107369"
  },
  {
    "text": "do is we will you can see here and that's actually not that easy to see",
    "start": "2107369",
    "end": "2112530"
  },
  {
    "text": "with the zoom so that's that's going to",
    "start": "2112530",
    "end": "2117780"
  },
  {
    "text": "take probably about 60 seconds or so to run while it's doing that let's talk about the next step so once this exceeds",
    "start": "2117780",
    "end": "2125250"
  },
  {
    "start": "2125000",
    "end": "2155000"
  },
  {
    "text": "the next thing to do is to go into Athena and start to query the data that",
    "start": "2125250",
    "end": "2131550"
  },
  {
    "text": "we've copied into our local data bucket our local data Lake if ul our s3 bucket",
    "start": "2131550",
    "end": "2136619"
  },
  {
    "text": "and the reason for that is because we want to get a copy of the data out not all of it but a sample so we can then",
    "start": "2136619",
    "end": "2143010"
  },
  {
    "text": "drop that into our jupiter notebook and begin to explore it using pandas and even pi spark and figure out what our",
    "start": "2143010",
    "end": "2148890"
  },
  {
    "text": "transformation logic needs to look like awesome interesting I saw that you you",
    "start": "2148890",
    "end": "2154950"
  },
  {
    "text": "can't even have metrics on top of that I'm looking at details script and metrics absolutely yeah so we're kind of",
    "start": "2154950",
    "end": "2164670"
  },
  {
    "start": "2155000",
    "end": "2185000"
  },
  {
    "text": "using this as a bit of a toy today it's a learning mechanism if we were using in",
    "start": "2164670",
    "end": "2169680"
  },
  {
    "text": "a tank and we probably be doing very large distributed jobs and so we would want to have information about the",
    "start": "2169680",
    "end": "2175470"
  },
  {
    "text": "underlying instances that are running this similar to you would with lambda you want to know what your execution",
    "start": "2175470",
    "end": "2180690"
  },
  {
    "text": "time is what your ram consumption is and we've got that kind of information here using complex metrics like with all",
    "start": "2180690",
    "end": "2187920"
  },
  {
    "start": "2185000",
    "end": "2215000"
  },
  {
    "text": "things with AWS right that gives us a chance to kind of optimize because the way that glue is build you are actually built by data",
    "start": "2187920",
    "end": "2194970"
  },
  {
    "text": "processing units essentially so similar to lambda not quite you know wonderful",
    "start": "2194970",
    "end": "2200309"
  },
  {
    "text": "one lightness but it is very similar in terms of the more distribution you want",
    "start": "2200309",
    "end": "2205410"
  },
  {
    "text": "for your glue job that's what we're gonna that's what AWS is going to do you buy and so if you can optimize that get",
    "start": "2205410",
    "end": "2211619"
  },
  {
    "text": "as much power out of each one of those sussing units you're gonna pay less and get more capability awesome okay we can",
    "start": "2211619",
    "end": "2218369"
  },
  {
    "start": "2215000",
    "end": "2245000"
  },
  {
    "text": "also preview the script if we wanted to just to quickly check something we can then edit the script if we see a",
    "start": "2218369",
    "end": "2224119"
  },
  {
    "text": "misspelling or something similar we can see the execution details for it let me",
    "start": "2224119",
    "end": "2229619"
  },
  {
    "text": "bring this up a little bit let's great so it has succeeded the next",
    "start": "2229619",
    "end": "2236520"
  },
  {
    "text": "thing to do is to actually add the crawler so they haven't put that into",
    "start": "2236520",
    "end": "2243720"
  },
  {
    "text": "our code yet let's just go ahead and run the crawler manually so I'm going to click the chroma that we created and I'm",
    "start": "2243720",
    "end": "2249930"
  },
  {
    "start": "2245000",
    "end": "2335000"
  },
  {
    "text": "gonna start it running and that's running on the month can I schedule apolar absolutely okay they can run in",
    "start": "2249930",
    "end": "2257670"
  },
  {
    "text": "an on-demand fashion using things like lambda functions or triggers equally you can have them run periodically every",
    "start": "2257670",
    "end": "2264420"
  },
  {
    "text": "night or what have you every hour if you wanted to there's also with the jobs today what",
    "start": "2264420",
    "end": "2270570"
  },
  {
    "text": "we're going to be doing is using step functions to work a straight if we have little jobs that would be orchestrating multiple jobs right and actually there's",
    "start": "2270570",
    "end": "2277650"
  },
  {
    "text": "a much larger more robust social code base that it's available on github today",
    "start": "2277650",
    "end": "2283080"
  },
  {
    "text": "I'm sure hater will share that link with you later on if he hasn't already and",
    "start": "2283080",
    "end": "2289050"
  },
  {
    "text": "that is going to demonstrate the ability to orchestrate multiple jobs using stat functions equally if you didn't want to",
    "start": "2289050",
    "end": "2295830"
  },
  {
    "text": "bring step functions into the fray you could also take advantage of triggers as part of the ETL and what triggers will",
    "start": "2295830",
    "end": "2302280"
  },
  {
    "text": "do is allow you to has one job concludes another one will start automatically off the back of that provided it was",
    "start": "2302280",
    "end": "2307740"
  },
  {
    "text": "successful so our crawler has now finished running we can see that it took",
    "start": "2307740",
    "end": "2312900"
  },
  {
    "text": "about 30 seconds to run and it has added a table to our database so let's have a quick look at tables that it has added",
    "start": "2312900",
    "end": "2319290"
  },
  {
    "text": "we've got auto trainer Ireland data Lake and annotation what's up Ron okay yeah",
    "start": "2319290",
    "end": "2326280"
  },
  {
    "text": "it's important to take a look at so we can open it up it'll tell us what the schema is for what classes were used to",
    "start": "2326280",
    "end": "2333359"
  },
  {
    "text": "read that data and write that data out and then we can see here that it's not it's done a lot of inference about the",
    "start": "2333359",
    "end": "2340410"
  },
  {
    "start": "2335000",
    "end": "2395000"
  },
  {
    "text": "datatypes well it's done some first off the data types and I think a lot of this is due to the way that we've",
    "start": "2340410",
    "end": "2347730"
  },
  {
    "text": "kind of just rapidly read the data in and then dropped it back out as park'",
    "start": "2347730",
    "end": "2353180"
  },
  {
    "text": "when we read it in it defaulted to reading all of those fields as strings",
    "start": "2353180",
    "end": "2359250"
  },
  {
    "text": "or as objects from the CSV in a real world and you know if this were an actual test what it would have done is",
    "start": "2359250",
    "end": "2366240"
  },
  {
    "text": "also then to cast those different values as different color data types",
    "start": "2366240",
    "end": "2372359"
  },
  {
    "text": "we're not that worried about it at the moment cuz when we do the feature engineering that's kind of what we're gonna take on so we'll leave that for",
    "start": "2372359",
    "end": "2379320"
  },
  {
    "text": "now this is maybe basically just giving us a raw copy in park' format instead of CSV the reason for doing Parque if",
    "start": "2379320",
    "end": "2387090"
  },
  {
    "text": "you're not familiar with glue and Athena they are going to be much more performant and you're going to get too",
    "start": "2387090",
    "end": "2392640"
  },
  {
    "text": "much lower costs in s3 by storing data in parque especially compressed Park a",
    "start": "2392640",
    "end": "2398160"
  },
  {
    "text": "park a being a columnar data format means that when you go looking for particular columns or particular fields",
    "start": "2398160",
    "end": "2404400"
  },
  {
    "text": "using Athena will do this in a moment it knows exactly which s3 objects to go to",
    "start": "2404400",
    "end": "2409740"
  },
  {
    "text": "and it's also indexed and a range sort of fashion so that it needs to query",
    "start": "2409740",
    "end": "2415080"
  },
  {
    "text": "much less data in s3 so you hitting s3 much less unequally because it's",
    "start": "2415080",
    "end": "2420869"
  },
  {
    "text": "compressed you have you're taking up much less storage on s3 so you're gonna",
    "start": "2420869",
    "end": "2425970"
  },
  {
    "text": "get faster query times in Athena and you're going to get less storage costs in s3 so that's really what it would win",
    "start": "2425970",
    "end": "2431820"
  },
  {
    "text": "by keeping data in part back perfect alright so let's go back to our list of",
    "start": "2431820",
    "end": "2439380"
  },
  {
    "text": "tables and go to action and say whew data this is gonna pop us into Athena",
    "start": "2439380",
    "end": "2445050"
  },
  {
    "text": "and we'll be able to get a feel for just what data is in this table that it's",
    "start": "2445050",
    "end": "2452339"
  },
  {
    "text": "awesome by the way its first time I'm seeing this so please just have a closer look so we've got 10 rows of data here",
    "start": "2452339",
    "end": "2460170"
  },
  {
    "text": "and again these were copied over just a moment ago from the deutsche börse s3 bucket so we can see a lot of good data",
    "start": "2460170",
    "end": "2467430"
  },
  {
    "text": "here for machine learning it's gonna require some cleansing you know machine aren't necessarily bothered about",
    "start": "2467430",
    "end": "2474160"
  },
  {
    "text": "something as textual as EU are in terms of currency but we're going to do a bit",
    "start": "2474160",
    "end": "2479210"
  },
  {
    "text": "of transmogrification if you will a bit of feature engineering on this and prep it for linear regression I think it's",
    "start": "2479210",
    "end": "2485240"
  },
  {
    "text": "what we're going to be doing today so what I want to do is take a copy of that",
    "start": "2485240",
    "end": "2490610"
  },
  {
    "text": "and drop it into our sage maker notebook in order to do that I want a lot more than ten rows of data so I'm going to",
    "start": "2490610",
    "end": "2496940"
  },
  {
    "text": "ask it for ten thousand and hit run query on that but I find about",
    "start": "2496940",
    "end": "2503030"
  },
  {
    "text": "interesting about this as people sometimes don't realize most of the work in the machine learning pieces is at the",
    "start": "2503030",
    "end": "2509030"
  },
  {
    "text": "beginning it's all about filtering the data cleaning up the data and only after that you actually started doing some of",
    "start": "2509030",
    "end": "2515360"
  },
  {
    "start": "2515000",
    "end": "2545000"
  },
  {
    "text": "those meaty kappa things absolutely absolutely so and that's really if you",
    "start": "2515360",
    "end": "2522140"
  },
  {
    "text": "talk to a lot of people on kaggle or professors who work in machine learning",
    "start": "2522140",
    "end": "2527300"
  },
  {
    "text": "and data science most if not all of them will say that the bulk of the work is",
    "start": "2527300",
    "end": "2532430"
  },
  {
    "text": "actually in the feature engineering unless you're doing really Hardy work in terms of developing you know",
    "start": "2532430",
    "end": "2537590"
  },
  {
    "text": "convolutional neural networks that have never been seen before or developing new algorithms or an ensemble of models",
    "start": "2537590",
    "end": "2544580"
  },
  {
    "text": "that's never been constructed before unless you're doing that kind of advanced machine learning work in the algorithm space really the most value is",
    "start": "2544580",
    "end": "2551180"
  },
  {
    "start": "2545000",
    "end": "2575000"
  },
  {
    "text": "in doing the feature engineering and getting the most the highest quality the most refinement out of your data for",
    "start": "2551180",
    "end": "2557840"
  },
  {
    "text": "maybe a bog-standard machine learning now working like linear regression and it's kind of that old",
    "start": "2557840",
    "end": "2564950"
  },
  {
    "text": "garbage in garbage out you from it added right in that if your data is not cleansed if it's not of a high quality",
    "start": "2564950",
    "end": "2571460"
  },
  {
    "text": "no matter how smart your algo is you're just not going to get good predictions on the back down exactly okay so here we",
    "start": "2571460",
    "end": "2578570"
  },
  {
    "start": "2575000",
    "end": "2605000"
  },
  {
    "text": "are on the stage maker console and you guys create a notebook from scratch are you going to use an existing one",
    "start": "2578570",
    "end": "2584150"
  },
  {
    "text": "I've got existing server I'm going to access that in a moment and then create a notebook off the back of that and I'll",
    "start": "2584150",
    "end": "2590270"
  },
  {
    "text": "upload that CSV data that we just downloaded from Adina right wanted to get super fancy with it we could",
    "start": "2590270",
    "end": "2595910"
  },
  {
    "text": "actually launch photo three in our notebook and query Athena directly I just don't want to write that much good",
    "start": "2595910",
    "end": "2601310"
  },
  {
    "text": "right now so that's fun for those who aren't aware the notebook instances that are",
    "start": "2601310",
    "end": "2606950"
  },
  {
    "start": "2605000",
    "end": "2635000"
  },
  {
    "text": "available on safe maker are hosted Jupiter notebooks and this is you know your standard-issue jupiter notebook",
    "start": "2606950",
    "end": "2613400"
  },
  {
    "text": "you've got the ability to it already has installed things like tensorflow and Max net pipe torch a lot of those",
    "start": "2613400",
    "end": "2619910"
  },
  {
    "text": "common frameworks and you've got the ability to easily spin up and create different environments like our spark",
    "start": "2619910",
    "end": "2626360"
  },
  {
    "text": "and PI spark what we're going to be doing today is just creating a condom Python to don't say it notebook in order",
    "start": "2626360",
    "end": "2634550"
  },
  {
    "text": "to use pandas and you spark to explore the data set that we just downloaded from Athena I will actually let the",
    "start": "2634550",
    "end": "2640730"
  },
  {
    "text": "audience I'm sure someone watching Lusail if nobody says it and then I can",
    "start": "2640730",
    "end": "2646310"
  },
  {
    "text": "actually you know say the next five minutes so let's copy our data set and",
    "start": "2646310",
    "end": "2651800"
  },
  {
    "text": "Kim Yuna can you increase that a little bit yes assuming like probably twice okay nice all right so let's rename this",
    "start": "2651800",
    "end": "2659840"
  },
  {
    "text": "so George Forsyth data CSV cool and",
    "start": "2659840",
    "end": "2668960"
  },
  {
    "text": "we'll go back to here so from PI spark import",
    "start": "2668960",
    "end": "2676030"
  },
  {
    "text": "there we go",
    "start": "2696990",
    "end": "2700040"
  },
  {
    "text": "let me just send a few things for people in the meantime Nick internship we",
    "start": "2705539",
    "end": "2713579"
  },
  {
    "text": "actually have a page Nick for jobs I just want to have a look quick look if you have one particularly for internship",
    "start": "2713579",
    "end": "2720319"
  },
  {
    "text": "we shoot but I could go wrong it every",
    "start": "2720319",
    "end": "2726779"
  },
  {
    "text": "was here we go let me send that over to",
    "start": "2726779",
    "end": "2737999"
  },
  {
    "text": "you Nick we have a few",
    "start": "2737999",
    "end": "2742189"
  },
  {
    "start": "2755000",
    "end": "2785000"
  },
  {
    "text": "yes it is live we're just a little bit quiet today where is actually trying to",
    "start": "2755359",
    "end": "2760859"
  },
  {
    "text": "type in trying to get this pieces well right so what we've done is just to load",
    "start": "2760859",
    "end": "2767670"
  },
  {
    "text": "that CSV object up into a spark data frame this is slightly different from a",
    "start": "2767670",
    "end": "2773730"
  },
  {
    "text": "panda's data frame so what I'm going to do in order for the purposes of demonstration is actually have spark",
    "start": "2773730",
    "end": "2779130"
  },
  {
    "text": "convert that over to a panda's data frame and then let's get a sample of the",
    "start": "2779130",
    "end": "2789300"
  },
  {
    "start": "2785000",
    "end": "2815000"
  },
  {
    "text": "data if it never seemed data faint before if it never worked if pandas",
    "start": "2789300",
    "end": "2794760"
  },
  {
    "text": "dataframe here's the link for you I'm just sending out over this chat chat shut and have a quick he's actually very",
    "start": "2794760",
    "end": "2803250"
  },
  {
    "text": "powerful I actually loved uh that the frames and the first time I saw it was actually quite efficient I should do a",
    "start": "2803250",
    "end": "2809280"
  },
  {
    "text": "lot of actually you know map the future in pieces in Piketon and then when I saw condors like wow can I simply clean the",
    "start": "2809280",
    "end": "2815579"
  },
  {
    "start": "2815000",
    "end": "2845000"
  },
  {
    "text": "data like this yeah and especially 3d data I was actually brought quite personally performance yeah it's I mean we were",
    "start": "2815579",
    "end": "2822089"
  },
  {
    "text": "talking earlier about running blue jobs and not being able to upload the pandas library along with it to be quite honest",
    "start": "2822089",
    "end": "2828839"
  },
  {
    "text": "I think that's actually a good thing and the reason for that is I mean I and a lot of other data scientists have gone a",
    "start": "2828839",
    "end": "2834630"
  },
  {
    "text": "lot of familiarity with pandas and as you've mentioned it has a lot of power a lot of great capabilities which is why everybody such fans of it but in terms",
    "start": "2834630",
    "end": "2842040"
  },
  {
    "text": "of operating in a distributed capacity it's not built for that so it's almost you know I kind of feel like it could be",
    "start": "2842040",
    "end": "2847890"
  },
  {
    "start": "2845000",
    "end": "2875000"
  },
  {
    "text": "a bit of a crutch if we tried to use it in the wrong environment because we've got familiarity with it so by almost forcing if you will if",
    "start": "2847890",
    "end": "2854910"
  },
  {
    "text": "anybody's not familiar with languages like Haskell and kind of functional programming languages literally pulling some of those capabilities that we know",
    "start": "2854910",
    "end": "2861270"
  },
  {
    "text": "in love and have been like raised on and forcing us to kind of do things in a more distributed fashion can actually be",
    "start": "2861270",
    "end": "2867119"
  },
  {
    "text": "a painful thing at first but a good thing in the end hmm so we've now got a",
    "start": "2867119",
    "end": "2873420"
  },
  {
    "text": "sample if the data set that we've loaded up in the CSV it was just like a quick look at exactly how big that is and",
    "start": "2873420",
    "end": "2879660"
  },
  {
    "text": "before we keep doing too Canada's let's just do PVDF equals spark yeah to pendous and let's move on and",
    "start": "2879660",
    "end": "2888390"
  },
  {
    "text": "the PDF dot shape actual astute info so",
    "start": "2888390",
    "end": "2903480"
  },
  {
    "text": "we can see that we've got ten thousand records they've got 20 different columns",
    "start": "2903480",
    "end": "2908579"
  },
  {
    "start": "2905000",
    "end": "2935000"
  },
  {
    "text": "here's the name of the columns they've all been detected as object and what we",
    "start": "2908579",
    "end": "2913980"
  },
  {
    "text": "need to now do is to start to transform those so let's get into that okay all",
    "start": "2913980",
    "end": "2932130"
  },
  {
    "text": "right okay make a it that's kind of an interesting question I would say there will be a bit",
    "start": "2932130",
    "end": "2937650"
  },
  {
    "start": "2935000",
    "end": "2965000"
  },
  {
    "text": "of an unfairly water candidates that's something else you don't need you don't need you worrying so much about there's",
    "start": "2937650",
    "end": "2943140"
  },
  {
    "text": "a few free to carry on with your bit of programming like I would recommend you to you have to check have actually a",
    "start": "2943140",
    "end": "2949799"
  },
  {
    "text": "portfolio on I don't get hub in one of those open-source pieces that we we do get a bit of an experience with open",
    "start": "2949799",
    "end": "2957210"
  },
  {
    "text": "source as well helps a lot on the programming sides and again an experience before you drive any",
    "start": "2957210",
    "end": "2962609"
  },
  {
    "text": "companies in general if you can and well if you have any friends or any",
    "start": "2962609",
    "end": "2967859"
  },
  {
    "start": "2965000",
    "end": "2995000"
  },
  {
    "text": "portfolios in place you shouldn't have much of an issue in there so I wouldn't I wouldn't see that as a something",
    "start": "2967859",
    "end": "2973589"
  },
  {
    "text": "crucial all right so we're selecting pieces yes and we're we've got 20",
    "start": "2973589",
    "end": "2981089"
  },
  {
    "text": "different columns at the moment I want to pare that back a little bit so if we take a look at how many columns we've",
    "start": "2981089",
    "end": "2987599"
  },
  {
    "text": "got and what exactly sort of values we've got in there some of them were not necessarily concerned with for today's",
    "start": "2987599",
    "end": "2993329"
  },
  {
    "text": "purposes so by running a select statement it's kind of the inverse of dropping so we're not going to delete",
    "start": "2993329",
    "end": "2998609"
  },
  {
    "start": "2995000",
    "end": "3025000"
  },
  {
    "text": "them from the dataset we're just telling spark that we only care about these six of these seven and then we can have a",
    "start": "2998609",
    "end": "3004430"
  },
  {
    "text": "data frame that just references those where that's important is that when we put this back in the glue",
    "start": "3004430",
    "end": "3010090"
  },
  {
    "text": "want to write that out as a very particular order in order for the linear learner algorithm that we're going to",
    "start": "3010090",
    "end": "3015550"
  },
  {
    "text": "pass this on to the sage maker okay so",
    "start": "3015550",
    "end": "3022330"
  },
  {
    "text": "we've done select on that let's now start to transform this and what we need to do is to craft some new columns so",
    "start": "3022330",
    "end": "3030190"
  },
  {
    "start": "3025000",
    "end": "3055000"
  },
  {
    "text": "where we've got things like max price min price what we want to actually track and try to predict is what the",
    "start": "3030190",
    "end": "3036490"
  },
  {
    "text": "percentage of change is in the next trading event so for any one particular",
    "start": "3036490",
    "end": "3044020"
  },
  {
    "text": "stock or similar security we know that has we've observed it at time zero what",
    "start": "3044020",
    "end": "3052210"
  },
  {
    "text": "is it going to do at time zero plus one so we're going to capture those columns",
    "start": "3052210",
    "end": "3057250"
  },
  {
    "start": "3055000",
    "end": "3085000"
  },
  {
    "text": "that we've got there in terms of strain and number of date columns and then we're going to manipulate that convert",
    "start": "3057250",
    "end": "3062680"
  },
  {
    "text": "it over to a percentage and then line up that percentage in that observation with",
    "start": "3062680",
    "end": "3068320"
  },
  {
    "text": "the next observation in the order the time word for that symbol so let's do",
    "start": "3068320",
    "end": "3074620"
  },
  {
    "text": "that now and then that will produce the overall training set both the label and the observations that we want to train",
    "start": "3074620",
    "end": "3080980"
  },
  {
    "text": "them also",
    "start": "3080980",
    "end": "3084270"
  },
  {
    "start": "3085000",
    "end": "3115000"
  },
  {
    "text": "yeah I was about to say that subtract",
    "start": "3103360",
    "end": "3109010"
  },
  {
    "text": "from Matt's price and this is what I really love about data Frances you know we're gonna put in a very simple",
    "start": "3109010",
    "end": "3114680"
  },
  {
    "text": "mathematical expression here and it is when it executes is going to you know",
    "start": "3114680",
    "end": "3119990"
  },
  {
    "start": "3115000",
    "end": "3145000"
  },
  {
    "text": "operate over those eight billions of rows of data if we ask it to without even breaking a sweat which is just",
    "start": "3119990",
    "end": "3125690"
  },
  {
    "text": "awesome",
    "start": "3125690",
    "end": "3127900"
  },
  {
    "text": "okay so we've just created a new column",
    "start": "3131470",
    "end": "3136880"
  },
  {
    "text": "called percent change and the next thing we want to do is like I said we're at time zero it has this value and then at",
    "start": "3136880",
    "end": "3144110"
  },
  {
    "text": "time zero it's got time zero plus one it's got another value we wanted to take a copy of that next value and bring it",
    "start": "3144110",
    "end": "3150950"
  },
  {
    "start": "3145000",
    "end": "3175000"
  },
  {
    "text": "up to time zero create the label column for all of our observations in order to",
    "start": "3150950",
    "end": "3156230"
  },
  {
    "text": "do that we've got to give a date/time stamp every one of these we've got a date and time as you can see here with",
    "start": "3156230",
    "end": "3163400"
  },
  {
    "text": "these two columns it's just detecting it as an object right now which is not really useful for",
    "start": "3163400",
    "end": "3168650"
  },
  {
    "text": "comparison purposes so let's do a bit of modification on that so in order to do",
    "start": "3168650",
    "end": "3176540"
  },
  {
    "text": "that we're going to need a couple of extra modules so let's go into here and say from pond spark in pork",
    "start": "3176540",
    "end": "3186710"
  },
  {
    "text": "we're gonna want to the EPC understand we're gonna want to leave date format",
    "start": "3186710",
    "end": "3197500"
  },
  {
    "text": "okay we're also gonna need from spark emmelda",
    "start": "3197500",
    "end": "3203780"
  },
  {
    "text": "feature or extraneous expert the string",
    "start": "3203780",
    "end": "3212630"
  },
  {
    "start": "3205000",
    "end": "3235000"
  },
  {
    "text": "index search so if you're familiar with machine learning they machine learning algorithms don't",
    "start": "3212630",
    "end": "3218810"
  },
  {
    "text": "generally understand strings - well at least not for things like classification so we're gonna categorize them and the",
    "start": "3218810",
    "end": "3225110"
  },
  {
    "text": "string index there is a class of the spark that's gonna do that for us in the",
    "start": "3225110",
    "end": "3232970"
  },
  {
    "text": "meantime I just kind of replace you one comments born to be reborn other",
    "start": "3232970",
    "end": "3238520"
  },
  {
    "text": "questions about jobs in general luck with anything I don't know your definition about old and I wouldn't",
    "start": "3238520",
    "end": "3245810"
  },
  {
    "text": "actually question that in any shape or form if you find something that suits your profile please by any means do",
    "start": "3245810",
    "end": "3253010"
  },
  {
    "text": "apply I will be more than happy to actually review that and actually schedule a phone screen obviously if we",
    "start": "3253010",
    "end": "3260240"
  },
  {
    "text": "have you seen it could work but I don't think I'd like as people are actually",
    "start": "3260240",
    "end": "3266870"
  },
  {
    "text": "say on the comments I don't think it has anything to do with proficiency or actually efficiency in",
    "start": "3266870",
    "end": "3273200"
  },
  {
    "text": "that particular in general we can definitely have that discussion if you like happy feel free to hit me up on",
    "start": "3273200",
    "end": "3279440"
  },
  {
    "text": "Twitter we can have that discussion my DMS are open but I wouldn't I wouldn't",
    "start": "3279440",
    "end": "3284690"
  },
  {
    "text": "try to have that conversation right here especially because I'll just actually come up with this live coding episodes",
    "start": "3284690",
    "end": "3292280"
  },
  {
    "text": "or search engine for cause a little bit more on that",
    "start": "3292280",
    "end": "3296080"
  },
  {
    "text": "I don't know if it's just me but continue to go I sometimes I got confused and ripped their notebooks you",
    "start": "3306100",
    "end": "3311740"
  },
  {
    "text": "can't get it can get quite not easily readable after a while after a few lines",
    "start": "3311740",
    "end": "3318160"
  },
  {
    "text": "yeah you're not wrong it's got markdown support in terms of",
    "start": "3318160",
    "end": "3324520"
  },
  {
    "text": "some of the cells that you can put in but really could do it kind of some highlighting and color coding of some of the cells down break it up a little bit",
    "start": "3324520",
    "end": "3331180"
  },
  {
    "start": "3325000",
    "end": "3355000"
  },
  {
    "text": "I've often thought that myself having the ability to turn collapse sections would be handy as well mm-hmm I think",
    "start": "3331180",
    "end": "3339460"
  },
  {
    "text": "the main benefits for me and is Jupiter if you're watching this please do stream in everything you have 34 drifted",
    "start": "3339460",
    "end": "3345610"
  },
  {
    "text": "notebooks is when you're dealing with data and you want to see how that data looks like when I manipulate data and",
    "start": "3345610",
    "end": "3351340"
  },
  {
    "text": "see do the things before you actually do when you're writing your script in an IDE or something you'd normally write",
    "start": "3351340",
    "end": "3357130"
  },
  {
    "start": "3355000",
    "end": "3385000"
  },
  {
    "text": "everything and you run it and you see it and then maybe that doesn't look like the way you want and in Duplin notebook",
    "start": "3357130",
    "end": "3363130"
  },
  {
    "text": "looks like quite interesting on that sense it's visual enough for you to not only make codes and run that particular",
    "start": "3363130",
    "end": "3369910"
  },
  {
    "text": "line only but also for you to add markdown that's exactly what someone if",
    "start": "3369910",
    "end": "3375130"
  },
  {
    "text": "not the slides actually find it helpful have something that anyone can run that particular code using what we call core",
    "start": "3375130",
    "end": "3381670"
  },
  {
    "text": "or kernel and Jupiter terminologies and that's actually quite interesting for",
    "start": "3381670",
    "end": "3387700"
  },
  {
    "text": "actually sharing certain codes that are repeatable pieces of engineering from a data",
    "start": "3387700",
    "end": "3394180"
  },
  {
    "text": "science perspective hello single okay so just a quick bit of",
    "start": "3394180",
    "end": "3401470"
  },
  {
    "text": "explanation about what we've just done here so with this window class what",
    "start": "3401470",
    "end": "3406630"
  },
  {
    "text": "we've done is to define basically a select statement this is you know the",
    "start": "3406630",
    "end": "3411880"
  },
  {
    "text": "idea of Windows is not uncommon to those who are familiar with SQL what we're saying is that examine the data set",
    "start": "3411880",
    "end": "3418960"
  },
  {
    "text": "based on the icing or the stock symbol we want to order everything within a",
    "start": "3418960",
    "end": "3424780"
  },
  {
    "text": "stock symbol by that date time stamp that we've just crafted so there the",
    "start": "3424780",
    "end": "3429910"
  },
  {
    "text": "sequence or in an order but in an order by security or livestock symbol then",
    "start": "3429910",
    "end": "3435220"
  },
  {
    "text": "what we want to do in the next line is want to create a new column this is that label that we were talking about",
    "start": "3435220",
    "end": "3440749"
  },
  {
    "text": "and we want to use the lead function to pull the next one in that sequence in",
    "start": "3440749",
    "end": "3445799"
  },
  {
    "text": "that date time sequence by security and pull it forward so that that's all we're",
    "start": "3445799",
    "end": "3451470"
  },
  {
    "text": "doing here it's a bit of kind of it's probably not an often use function maybe but it's very very powerful in terms of",
    "start": "3451470",
    "end": "3458789"
  },
  {
    "text": "helping you to create both the training set not just crafting the training set for training but also creating that",
    "start": "3458789",
    "end": "3463980"
  },
  {
    "text": "supervised trainings that were you need to engineer the label itself right okay",
    "start": "3463980",
    "end": "3470940"
  },
  {
    "text": "so that's that let's if we just take a quick look at what that looks like now and you head okay there we go so if",
    "start": "3470940",
    "end": "3488549"
  },
  {
    "text": "everything is going according to plan then we should see percent change and next percent change which is not a",
    "start": "3488549",
    "end": "3496109"
  },
  {
    "text": "number so that's not good it's worth noting that if you've got five rows of",
    "start": "3496109",
    "end": "3502769"
  },
  {
    "text": "data and another and you then take a copy of those and shift them you're gonna have a not a not a number in some",
    "start": "3502769",
    "end": "3509940"
  },
  {
    "text": "spaces later on when we use the linear learner algorithm it doesn't like null",
    "start": "3509940",
    "end": "3515579"
  },
  {
    "text": "values so we're gonna want to drop those let's do that now interesting so anytime",
    "start": "3515579",
    "end": "3521940"
  },
  {
    "text": "you're doing the does it break the whole algorithm or or actually continues but",
    "start": "3521940",
    "end": "3526950"
  },
  {
    "text": "you probably doesn't train it and doesn't try to make an assumption about what it is that you would like it to do",
    "start": "3526950",
    "end": "3532079"
  },
  {
    "text": "when it hits a null value and so it just does gotcha Vladek hasn't just died but",
    "start": "3532079",
    "end": "3537210"
  },
  {
    "text": "it doesn't complete successfully either okay I'm not such precautions about time",
    "start": "3537210",
    "end": "3542880"
  },
  {
    "text": "we have about 45 minutes okay all right let's try to accelerate a bit then so let's do features yeah those",
    "start": "3542880",
    "end": "3549989"
  },
  {
    "text": "features dot drop an egg in order to get",
    "start": "3549989",
    "end": "3556140"
  },
  {
    "text": "rid of those n/a values and then let's",
    "start": "3556140",
    "end": "3561329"
  },
  {
    "text": "also do features yeah yeah dot select and what we want to do",
    "start": "3561329",
    "end": "3569910"
  },
  {
    "text": "here is the select is not only going to choose the columns that we want but also make order that we want them in when",
    "start": "3569910",
    "end": "3575789"
  },
  {
    "text": "linear learner reads data in from s3 we're gonna store it as CSV s and it",
    "start": "3575789",
    "end": "3581099"
  },
  {
    "text": "expects the first column to be the label for all of the additional observations okay so all of all of the columns in the",
    "start": "3581099",
    "end": "3588270"
  },
  {
    "text": "data the zero or the first column needs to be the label and then everything else is the data that is meant to be used to",
    "start": "3588270",
    "end": "3594210"
  },
  {
    "text": "predict that label so we got to bring that next percent change forward and make it the very first column in that",
    "start": "3594210",
    "end": "3600390"
  },
  {
    "text": "list so that's gonna be X percentage",
    "start": "3600390",
    "end": "3606470"
  },
  {
    "text": "yeah so one next percent exchanged and",
    "start": "3606470",
    "end": "3611609"
  },
  {
    "text": "percent change and we also want us",
    "start": "3611609",
    "end": "3618359"
  },
  {
    "text": "number of columns plus all we've got to do the categorization alright so we will",
    "start": "3618359",
    "end": "3626150"
  },
  {
    "text": "I like that comprehension right there right on a list comprehension alive you",
    "start": "3640290",
    "end": "3647610"
  },
  {
    "text": "can't get more like that that's that's for sure now that is going to break so",
    "start": "3647610",
    "end": "3654570"
  },
  {
    "text": "let's go in here you're gonna swap that piece yeah so let's convert this four",
    "start": "3654570",
    "end": "3660810"
  },
  {
    "text": "column okay so let me send another link",
    "start": "3660810",
    "end": "3685170"
  },
  {
    "text": "to everyone in case people couldn't join it because links if you judge this now",
    "start": "3685170",
    "end": "3699150"
  },
  {
    "text": "and you miss some of the previous links I'm just sharing those on the chat right now I'm sharing one safety record",
    "start": "3699150",
    "end": "3705840"
  },
  {
    "text": "orchestration that does very similar to what we're doing right now except that you automates most of these pieces using",
    "start": "3705840",
    "end": "3711810"
  },
  {
    "text": "confirmation Sam and a bunch of other scripts and also share with you the data",
    "start": "3711810",
    "end": "3717690"
  },
  {
    "text": "set that we are actually using and trying to manipulate right now as actually we're trying to filter that",
    "start": "3717690",
    "end": "3722970"
  },
  {
    "text": "data out so we can go ahead and work with step functions orchestrate the whole piece so let me share that with",
    "start": "3722970",
    "end": "3730020"
  },
  {
    "text": "you for now so here is the link for the",
    "start": "3730020",
    "end": "3737070"
  },
  {
    "text": "whole project not this one is another one with some more robust and actually even uses Lac to actually notify people",
    "start": "3737070",
    "end": "3744450"
  },
  {
    "text": "that training has just begun and you can actually go ahead and modify those as well so how okay so I can see that",
    "start": "3744450",
    "end": "3751860"
  },
  {
    "text": "forward now so we've got that next percent change that's the first column now we've also the line of code that I",
    "start": "3751860",
    "end": "3757920"
  },
  {
    "text": "forgot to put in was this categorization mentioned about the things like the Ison",
    "start": "3757920",
    "end": "3763069"
  },
  {
    "text": "which if you remember the Ison originally is this very long string which means something to a trading",
    "start": "3763069",
    "end": "3768920"
  },
  {
    "text": "system but very little to a machine learning algorithm so we use the string index where they basically turn that",
    "start": "3768920",
    "end": "3773930"
  },
  {
    "text": "into a number which is something that the the algorithm can work with yeah all right so we've now explored our data set",
    "start": "3773930",
    "end": "3781069"
  },
  {
    "text": "we figured out what sort of spark commands a spark code we need to have in order for our feature engineering let's",
    "start": "3781069",
    "end": "3787250"
  },
  {
    "text": "now incorporate that back into our glue job and in the interest of time since",
    "start": "3787250",
    "end": "3798770"
  },
  {
    "text": "we've just covered all of this code what I'd like to do is more or less just copy and paste in here so hopefully everybody",
    "start": "3798770",
    "end": "3804950"
  },
  {
    "text": "will forgive me for that that's fine the only thing I don't forgive is actually the fact are using fight 22.7 there uh",
    "start": "3804950",
    "end": "3814250"
  },
  {
    "text": "I've been waiting for that so everything else looks fine what we've just added is we've added a",
    "start": "3814250",
    "end": "3821329"
  },
  {
    "text": "longer just because that's good practice we still have our source bucket our target bucket you'll see here that we've",
    "start": "3821329",
    "end": "3828470"
  },
  {
    "text": "also your outs will also hard-coding a friend for line 33 thank you you West",
    "start": "3828470",
    "end": "3837760"
  },
  {
    "text": "ideally that should be automatically picked up right yeah and I'm not exactly sure what's going on there when you",
    "start": "3837760",
    "end": "3844309"
  },
  {
    "text": "instantiate the boat so glue klein esli works just fine when you instantiate the boat to loop line inside of glue for",
    "start": "3844309",
    "end": "3850309"
  },
  {
    "text": "some reason region doesn't get passed to it oh they must be because actually the way we picked that up is actually by",
    "start": "3850309",
    "end": "3856069"
  },
  {
    "text": "looking at the address configuration or the environment variables so it has to be a default region if just none then",
    "start": "3856069",
    "end": "3861619"
  },
  {
    "text": "make sense ok again a lot of this code we've seen before",
    "start": "3861619",
    "end": "3867650"
  },
  {
    "text": "glue contexts for reading the data writing the data out and then this is the code that we had in our Jupiter",
    "start": "3867650",
    "end": "3874760"
  },
  {
    "text": "notebook where we're doing the feature engineering adding percent change creating the next percent change doing",
    "start": "3874760",
    "end": "3881329"
  },
  {
    "text": "the string columns converting those over the categories and then doing a feature selection what we didn't see in the",
    "start": "3881329",
    "end": "3887420"
  },
  {
    "text": "Jupiter notebook just now is this breaking out of the data so it's very common practice within",
    "start": "3887420",
    "end": "3892859"
  },
  {
    "text": "machine learning to take the entirety of your data set use some portion of it for training use another portion of a TRADOC",
    "start": "3892859",
    "end": "3899220"
  },
  {
    "text": "validation and the last portion for testing what we're going to do is we're going to take 60% of our data set and",
    "start": "3899220",
    "end": "3906499"
  },
  {
    "text": "store that out as training data that's what the model will train upon the validation the during the training phase",
    "start": "3906499",
    "end": "3913650"
  },
  {
    "text": "with sage maker it'll use that validation set to test that model after",
    "start": "3913650",
    "end": "3919049"
  },
  {
    "text": "it's been performed after it's been trained sorry and measure how well it's performing and see if it needs to",
    "start": "3919049",
    "end": "3924690"
  },
  {
    "text": "revisit the training and we iterate over that training then that last 20% of the data we're gonna store out separately",
    "start": "3924690",
    "end": "3931049"
  },
  {
    "text": "because as I mentioned earlier if as a part of our set function state machine we wanted to evaluate that model and",
    "start": "3931049",
    "end": "3938700"
  },
  {
    "text": "compare it with the old production model that static training test data set would allow us to do that so once we've got",
    "start": "3938700",
    "end": "3946950"
  },
  {
    "text": "those stored out we're gonna write each one of those out to us three we've got",
    "start": "3946950",
    "end": "3952470"
  },
  {
    "text": "additional prefixes for the s3 bucket that we've put in here so we're writing",
    "start": "3952470",
    "end": "3957660"
  },
  {
    "text": "out to year X raw is where our data was going from the Deutsche börse ax s3",
    "start": "3957660",
    "end": "3963930"
  },
  {
    "text": "bucket and then we've got the transformed data which is being given a your X data prefix right this is",
    "start": "3963930",
    "end": "3970319"
  },
  {
    "text": "important because later on when we see the crawler operate it's going to create",
    "start": "3970319",
    "end": "3975650"
  },
  {
    "text": "tables with names like data and raw okay",
    "start": "3975650",
    "end": "3980759"
  },
  {
    "text": "code one other thing to mention is coalesce if you're familiar with SPARC what",
    "start": "3980759",
    "end": "3986039"
  },
  {
    "text": "that's going to do is reduce the number of jobs that can write data out without",
    "start": "3986039",
    "end": "3991829"
  },
  {
    "text": "this what you might see in it might matter it might not depending on your use case is you might see 0 by objects",
    "start": "3991829",
    "end": "3998249"
  },
  {
    "text": "in s3 and that's just the the nature of the beast when it comes to spark essentially when 8x keeps the job it may",
    "start": "3998249",
    "end": "4005569"
  },
  {
    "text": "or may not have data to work with but this code still is telling it to write its data frame or its dynamic frame out",
    "start": "4005569",
    "end": "4011660"
  },
  {
    "text": "to ask 3 so that's what it's going to do even if empty you could put logic in to work around that what I've done is to use the",
    "start": "4011660",
    "end": "4018339"
  },
  {
    "text": "coalesce function just to reduce the number of files that I get down to a maximum of 100 and that gives me a",
    "start": "4018339",
    "end": "4025780"
  },
  {
    "text": "pretty good guarantee that all of them are gonna have data in them ok interesting and then we've got this line",
    "start": "4025780",
    "end": "4032109"
  },
  {
    "text": "here to again run our crawler when we're done so let's take a copy of that let's",
    "start": "4032109",
    "end": "4037660"
  },
  {
    "text": "go back to our glue console let's modify",
    "start": "4037660",
    "end": "4044829"
  },
  {
    "text": "our job by the way before you ask",
    "start": "4044829",
    "end": "4053740"
  },
  {
    "text": "anything on the chat or if you were actually watching this live with us as well you will see that most of these",
    "start": "4053740",
    "end": "4060609"
  },
  {
    "text": "pieces are using the console for now the reason for this is you make sure you can see that visually it's not an easy",
    "start": "4060609",
    "end": "4066670"
  },
  {
    "text": "concept to grasp at first and that should at least help on some of those pieces using the automation would",
    "start": "4066670",
    "end": "4072400"
  },
  {
    "text": "actually take us take the focus actually someplace else",
    "start": "4072400",
    "end": "4077650"
  },
  {
    "text": "so once we finish this episode to be gonna be still working on cleaning up some of those remote and then we will be",
    "start": "4077650",
    "end": "4083500"
  },
  {
    "text": "open sourcing this right so the jobs already running ok cool yep so while",
    "start": "4083500",
    "end": "4090040"
  },
  {
    "text": "that's running let's go ahead and in the interest of time get started on those lambda functions so glad the functions",
    "start": "4090040",
    "end": "4097238"
  },
  {
    "text": "are pretty basic most them we're about 40 odd lines of code and most of that is just for formatting purposes in space",
    "start": "4097239",
    "end": "4103450"
  },
  {
    "text": "let's jump over to lambda console and",
    "start": "4103450",
    "end": "4109000"
  },
  {
    "text": "we're going to need for lambda functions",
    "start": "4109000",
    "end": "4113580"
  },
  {
    "text": "avert your eyes while I specify 2.7 this one that's fine start new job so just to",
    "start": "4115140",
    "end": "4126100"
  },
  {
    "text": "let you know in the interest of time if you actually need to copy and paste for an existing one and then we can walk",
    "start": "4126100",
    "end": "4131620"
  },
  {
    "text": "through the code feel free to do it we're actually now about 25 minutes ok a",
    "start": "4131620",
    "end": "4139630"
  },
  {
    "text": "little attic create a new role for me from a 10 you don't need any provisions apart from",
    "start": "4139630",
    "end": "4147020"
  },
  {
    "text": "just executing right just roaming the data you don't make any calls someplace else",
    "start": "4147020",
    "end": "4152330"
  },
  {
    "text": "so the land the functions that we're going to create here need the ability to start the good glue jobs can start the same manner training job so there's",
    "start": "4152330",
    "end": "4158810"
  },
  {
    "text": "gonna I would create a rule for me give it the permissions to write out the cloud watch and then I'll add the sage",
    "start": "4158810",
    "end": "4163940"
  },
  {
    "text": "maker and the glute permission just do it okay just use the microservice one",
    "start": "4163940",
    "end": "4181219"
  },
  {
    "text": "here",
    "start": "4181219",
    "end": "4183549"
  },
  {
    "text": "now while it's doing that let's go back",
    "start": "4194550",
    "end": "4199690"
  },
  {
    "text": "to glue you have glue already open all you didn't okay I thought you did so",
    "start": "4199690",
    "end": "4206350"
  },
  {
    "text": "just go ahead and open up any lon so",
    "start": "4206350",
    "end": "4215110"
  },
  {
    "text": "jobs right I got succeeded now what's",
    "start": "4215110",
    "end": "4223750"
  },
  {
    "text": "going on here some funky data let's show what's up with that and then",
    "start": "4223750",
    "end": "4229989"
  },
  {
    "text": "we've got data here and actually I think I know what's what's going on there so",
    "start": "4229989",
    "end": "4236969"
  },
  {
    "text": "we've got our data there and that is the CSV files that we have written back out",
    "start": "4236969",
    "end": "4242830"
  },
  {
    "text": "after you've done our transformation because that seems to be running okay that seems to be doing what we want let's go to I am and let's revisit that",
    "start": "4242830",
    "end": "4249190"
  },
  {
    "text": "lambda or all that we've just created",
    "start": "4249190",
    "end": "4253380"
  },
  {
    "text": "all right and let's attach a couple of policies to this if I remember correctly",
    "start": "4259920",
    "end": "4265500"
  },
  {
    "text": "you need said your maker policy and you also needed glue yeah okay I'm gonna get",
    "start": "4265500",
    "end": "4270960"
  },
  {
    "text": "a little bit woolly with this and just get overly permissive yeah but for the",
    "start": "4270960",
    "end": "4276990"
  },
  {
    "text": "prototyping the time constraints we have that's fine and we'll leave it at that",
    "start": "4276990",
    "end": "4288620"
  },
  {
    "text": "okay okay so let's go back to lambda and",
    "start": "4288620",
    "end": "4294390"
  },
  {
    "text": "we'll do our smart glue job here we go we have as we've got wait what magicians",
    "start": "4294390",
    "end": "4300600"
  },
  {
    "text": "in what we need you didn't interesting Wow way more permissions than what we",
    "start": "4300600",
    "end": "4305700"
  },
  {
    "text": "need right so over here my code and what",
    "start": "4305700",
    "end": "4314910"
  },
  {
    "text": "we need to do is to",
    "start": "4314910",
    "end": "4318740"
  },
  {
    "text": "okay",
    "start": "4329520",
    "end": "4332520"
  },
  {
    "text": "hey what should we skip over this part yeah outside don't worry yeah so let's",
    "start": "4338690",
    "end": "4350429"
  },
  {
    "text": "explore this in the console here so what",
    "start": "4350429",
    "end": "4356010"
  },
  {
    "text": "this lambda function is going to do is",
    "start": "4356010",
    "end": "4361489"
  },
  {
    "text": "very very simple it's going to receive the event that ultimately will come from step functions",
    "start": "4361489",
    "end": "4367170"
  },
  {
    "text": "and that step functions is going to specify the name of the glue job that we want it to execute it's also going to",
    "start": "4367170",
    "end": "4374340"
  },
  {
    "text": "specify this parameter value so wherever you're doing - - 8 - - sort bucket etc",
    "start": "4374340",
    "end": "4379500"
  },
  {
    "text": "we're going to specify those in step functions our handler here is going to strip those out of the event and pass",
    "start": "4379500",
    "end": "4385440"
  },
  {
    "text": "them to our start glue job function which if we take a look at it it's very very simple it's a simple wrapper around",
    "start": "4385440",
    "end": "4391350"
  },
  {
    "text": "start job run a function out of the glue client from boto 3 and to that we're",
    "start": "4391350",
    "end": "4397230"
  },
  {
    "text": "going to pass the arguments that we got from the event and the name of the job be very very straightforward what we're",
    "start": "4397230",
    "end": "4402870"
  },
  {
    "text": "going to do is capture the run ID of that job and pass it back the step functions and step functions we'll use",
    "start": "4402870",
    "end": "4408900"
  },
  {
    "text": "that after waiting a period to check on the status that glue job gotcha now",
    "start": "4408900",
    "end": "4413909"
  },
  {
    "text": "things are making sense for me yeah ok ok so that's the first time the function",
    "start": "4413909",
    "end": "4419699"
  },
  {
    "text": "should be saving kick up the new one or do you want to test that let's do a quick test of it we can let that run",
    "start": "4419699",
    "end": "4425880"
  },
  {
    "text": "while we do other things so a little bit",
    "start": "4425880",
    "end": "4430610"
  },
  {
    "text": "all right no not there so this is",
    "start": "4433440",
    "end": "4450810"
  },
  {
    "text": "actually a copy and paste from the state that we're going to be initiating our step functions with and again it has the",
    "start": "4450810",
    "end": "4456840"
  },
  {
    "text": "job name which we need to set to be I think we set it to auto trainer data",
    "start": "4456840",
    "end": "4463050"
  },
  {
    "text": "Lake just check that real quick Auto",
    "start": "4463050",
    "end": "4477300"
  },
  {
    "text": "Trader transformation job ok the meantime we're doing so done that's",
    "start": "4477300",
    "end": "4482550"
  },
  {
    "text": "what the reason we're using Titan is because all of the libraries that we are using like pandas and a bunch of others",
    "start": "4482550",
    "end": "4489090"
  },
  {
    "text": "actually our Python based and we also using Jupiter as well which is actually common process you use Python it is not",
    "start": "4489090",
    "end": "4496290"
  },
  {
    "text": "necessarily a strict requirement you could also write this in sales color if",
    "start": "4496290",
    "end": "4501810"
  },
  {
    "text": "you wish the london functions themselves because they're acting more of a tooling",
    "start": "4501810",
    "end": "4508470"
  },
  {
    "text": "around what you we need to orchestrate that job or start that job or clean up something very quickly some data",
    "start": "4508470",
    "end": "4514710"
  },
  {
    "text": "transformation if we actually need in fact you can do that in any language all I need to do is if you actually look",
    "start": "4514710",
    "end": "4520680"
  },
  {
    "text": "closely at the code that we just wrote it's actually primarily using in the Browse SDK so you don't actually have to",
    "start": "4520680",
    "end": "4527520"
  },
  {
    "text": "be constrained on the runtime that we are running for glue on the other hand",
    "start": "4527520",
    "end": "4532530"
  },
  {
    "text": "then yes you will need either python or a scalar lambda like I said you have Python you have no js' golang java.net",
    "start": "4532530",
    "end": "4541470"
  },
  {
    "text": "and more recently powershell no problem",
    "start": "4541470",
    "end": "4546890"
  },
  {
    "text": "yeah the powershell is a good addition yeah if you actually if you actually",
    "start": "4546890",
    "end": "4552120"
  },
  {
    "text": "feel I mean let me say this thread if you're an optical challenge as soon as we open source all these pieces with the",
    "start": "4552120",
    "end": "4559470"
  },
  {
    "text": "code already cleaned up and actually more robust including the confirmation",
    "start": "4559470",
    "end": "4564530"
  },
  {
    "text": "the whole automation around these pieces ii just launched a new stack we would welcome a contribution any other",
    "start": "4564530",
    "end": "4570800"
  },
  {
    "text": "language so it could just make up PR and we're happy to review contribute and have a discussion of that cool so what",
    "start": "4570800",
    "end": "4579530"
  },
  {
    "text": "i've done is we've executed the initial job the initial end of function which is running the glue job on what we now need",
    "start": "4579530",
    "end": "4586550"
  },
  {
    "text": "is a land function to periodically check the status of that so this is going to be very very similar to the previous one",
    "start": "4586550",
    "end": "4591920"
  },
  {
    "text": "you can even make them the same lambda function if you wish what it's going to do again is to parse out the incoming",
    "start": "4591920",
    "end": "4598670"
  },
  {
    "text": "event and pass that off to a worker function and that worker function is pretty much a simple wrapper around the",
    "start": "4598670",
    "end": "4605270"
  },
  {
    "text": "boat so three clients we're in the boat code three client we're going to use get job run off of the glue client we're",
    "start": "4605270",
    "end": "4612080"
  },
  {
    "text": "going to pass it the name of the job the run ID that the first lambda function",
    "start": "4612080",
    "end": "4617930"
  },
  {
    "text": "passed back and then we're going to interpret the results of thats and what we want to interpret is you know",
    "start": "4617930",
    "end": "4623840"
  },
  {
    "text": "different services have got different ways of describing their state some of them are going to say running in all",
    "start": "4623840",
    "end": "4629480"
  },
  {
    "text": "capital letters some other areas they running with a capitalized are some of them might say not fail you know it's",
    "start": "4629480",
    "end": "4635720"
  },
  {
    "text": "not there's no standard way of describing their state but in terms of the step function state machine that we want to create i don't want to be trying",
    "start": "4635720",
    "end": "4642500"
  },
  {
    "text": "to figure out you know is this one they are they doing all capitals for their running or are they are they using just",
    "start": "4642500",
    "end": "4648080"
  },
  {
    "text": "capital r and everything lowercase so i'm going to do that standardization here my lambda function have it",
    "start": "4648080",
    "end": "4653480"
  },
  {
    "text": "interpret the service that it's communicating with and then provide that back to something like step functions in the language that i've defined so here",
    "start": "4653480",
    "end": "4661130"
  },
  {
    "text": "you can see that i'm looking for all capitals for fail stop succeeded and then i'm transforming that into failed",
    "start": "4661130",
    "end": "4667220"
  },
  {
    "text": "with just a kind of left or completed with a capital C and passing that back as a dictionary right okay looks pretty",
    "start": "4667220",
    "end": "4675590"
  },
  {
    "text": "straightforward to me okay so you want a step or happy to continue over so I'm",
    "start": "4675590",
    "end": "4682790"
  },
  {
    "text": "gonna yeah I'm happy to leave that as is I trusted it'll work the way we expect it to let's now get into step functions",
    "start": "4682790",
    "end": "4689930"
  },
  {
    "text": "so what we've done is we've created a glue job and that glue job will copy data from the",
    "start": "4689930",
    "end": "4696130"
  },
  {
    "text": "Corsa s3 bucket it will modify using spark it'll engineer the data set and",
    "start": "4696130",
    "end": "4702460"
  },
  {
    "text": "then write that data set back out as CSV into basically our training bucket the",
    "start": "4702460",
    "end": "4709420"
  },
  {
    "text": "bucket that we want to have all of our training test and validation validation data in and the reason for that is",
    "start": "4709420",
    "end": "4716650"
  },
  {
    "text": "because one passed that CSV data to Sage Maker for training later on now that",
    "start": "4716650",
    "end": "4721719"
  },
  {
    "text": "we've got the glue job we've created a couple of lambda functions one for starting that glue job and another one",
    "start": "4721719",
    "end": "4727239"
  },
  {
    "text": "for evaluating the state of that glue job and the reason for that is today",
    "start": "4727239",
    "end": "4732870"
  },
  {
    "text": "step functions doesn't have the ability to invoke glue jobs directly so really",
    "start": "4732870",
    "end": "4738070"
  },
  {
    "text": "pretty much the assignment functions are thin wrappers around glue that make them callable by step functions okay but",
    "start": "4738070",
    "end": "4744790"
  },
  {
    "text": "don't continue to go i actually one thing I have to say about step functions which is actually it's actually very",
    "start": "4744790",
    "end": "4751179"
  },
  {
    "text": "important if you actually watch the previous sessions that we actually had on on step functions step functions not",
    "start": "4751179",
    "end": "4758500"
  },
  {
    "text": "only actually will actually evoke a particular than the function but actually can do a lot more than that all",
    "start": "4758500",
    "end": "4763690"
  },
  {
    "text": "all the norm all they actually the execution and control flow around has",
    "start": "4763690",
    "end": "4768820"
  },
  {
    "text": "that execution completed successfully has he failed perhaps was a transit issue should I run that again should I",
    "start": "4768820",
    "end": "4775739"
  },
  {
    "text": "maybe catch an exception equals to a exception X if you will and you could",
    "start": "4775739",
    "end": "4782350"
  },
  {
    "text": "actually try to back off algorithm in there actually I've got a problem let's",
    "start": "4782350",
    "end": "4788020"
  },
  {
    "text": "say I sleep two seconds or something you could actually control all of this just",
    "start": "4788020",
    "end": "4793030"
  },
  {
    "text": "by using Jason or effect it's a code for a state machine in step functions but",
    "start": "4793030",
    "end": "4799210"
  },
  {
    "text": "essentially it's very powerful for orchestrating pretty much everything and it's actually very commonly used around",
    "start": "4799210",
    "end": "4805679"
  },
  {
    "text": "microservices those who are doing saga patent or or pretty much anything that",
    "start": "4805679",
    "end": "4811330"
  },
  {
    "text": "you need the orchestration piece the not ever unless you are have really good",
    "start": "4811330",
    "end": "4816880"
  },
  {
    "text": "reasons for it don't try to do all the whole orchestration just by using a single than the function I actually do",
    "start": "4816880",
    "end": "4823239"
  },
  {
    "text": "rely on a powerful orchestra to like step functions because you have a lot more control to for it and you",
    "start": "4823239",
    "end": "4830410"
  },
  {
    "text": "also have the whole execution history you have all the pieces that I can do all the things to see who executed when",
    "start": "4830410",
    "end": "4837550"
  },
  {
    "text": "was executed what was the input and output of each of those tabs and a lot",
    "start": "4837550",
    "end": "4842650"
  },
  {
    "text": "more that even though you can do some of that in lambda functions is not going to be actually 100% right so if you recall",
    "start": "4842650",
    "end": "4854230"
  },
  {
    "text": "we had this pattern that we were going to use to start the transformation wait",
    "start": "4854230",
    "end": "4859960"
  },
  {
    "text": "for that transformation execute and get the status of that and then check that status I'm just writing that out now",
    "start": "4859960",
    "end": "4865720"
  },
  {
    "text": "real quickly as a definition of the state machine okay do we have time for",
    "start": "4865720",
    "end": "4874360"
  },
  {
    "text": "this or should we copy and paste as well I'd say we have 20 minutes let's go penance rings well for now just copy and",
    "start": "4874360",
    "end": "4880000"
  },
  {
    "text": "paste and then we can explain that off first and again as they here had mentioned all of this is available as a",
    "start": "4880000",
    "end": "4885640"
  },
  {
    "text": "github repo online so feel free to visit it it's a lot more complex than what we're building here today but it's a",
    "start": "4885640",
    "end": "4891490"
  },
  {
    "text": "great example of what can be done all without creating a single server and I'm gonna send that link at once again in",
    "start": "4891490",
    "end": "4897820"
  },
  {
    "text": "case people just joined up recently and here's the link with a more robust",
    "start": "4897820",
    "end": "4903300"
  },
  {
    "text": "continuous learning and including slack notifications and all that all that jazz including the state machines as well if",
    "start": "4903300",
    "end": "4910240"
  },
  {
    "text": "you want to take a big edit a few features user so just to quickly brief what exactly it is that I've pasted in",
    "start": "4910240",
    "end": "4916870"
  },
  {
    "text": "here we've got this initial task the the first step in our state machine which is",
    "start": "4916870",
    "end": "4922960"
  },
  {
    "text": "going to invoke a lambda function this isn't pointed at the right one at the moment but it's going to be much easier to change that once I've got it in the",
    "start": "4922960",
    "end": "4929950"
  },
  {
    "text": "editor force step functions we're defining an input path and the result path where we want to capture the output",
    "start": "4929950",
    "end": "4936580"
  },
  {
    "text": "of that bottom two function you'll recall that lambda function is going to pass back the Java run ID from",
    "start": "4936580",
    "end": "4941740"
  },
  {
    "text": "AWS glue we then want to have our step functions wait for a little bit and that",
    "start": "4941740",
    "end": "4946840"
  },
  {
    "text": "time is going to be defined by our input doctors we're gonna feed to staff functions that's exactly the question",
    "start": "4946840",
    "end": "4952100"
  },
  {
    "text": "actually before actually injecting that dynamically exactly yeah it's that wait time is it could be the output of a",
    "start": "4952100",
    "end": "4958940"
  },
  {
    "text": "previous task maybe the one that we just called or we could even modify it periodically over time so what the where",
    "start": "4958940",
    "end": "4966050"
  },
  {
    "text": "that gives us capabilities right now it's essentially a static value in terms of what we start the state machine",
    "start": "4966050",
    "end": "4971239"
  },
  {
    "text": "running with but again that's something that could be modified by one of those tasks so if we've checked it twice",
    "start": "4971239",
    "end": "4976489"
  },
  {
    "text": "already and we want to kind of exponentially back off we've got that ability to do that okay perfect then we",
    "start": "4976489",
    "end": "4983659"
  },
  {
    "text": "want to do that both oh three call into getting the status and do that translation of running succeeded failed",
    "start": "4983659",
    "end": "4989600"
  },
  {
    "text": "etc and we're going to look for a status in the next step of either failed or",
    "start": "4989600",
    "end": "4994790"
  },
  {
    "text": "completed and if neither one of those has come through if it has another passing or failed then we're going to go",
    "start": "4994790",
    "end": "5000400"
  },
  {
    "text": "back to waiting and then when that's done we're going to mark thing as succeeded okay just give it a name and",
    "start": "5000400",
    "end": "5020159"
  },
  {
    "text": "just here yeah I'd say let's fix quickly oops",
    "start": "5020159",
    "end": "5027360"
  },
  {
    "text": "yeah we just need to fix those resources and those little errors that's something I really like about step functions on",
    "start": "5027540",
    "end": "5033159"
  },
  {
    "text": "the console he actually is actually still causing a problem there that's why we'll come back to it if you click you",
    "start": "5033159",
    "end": "5039429"
  },
  {
    "text": "should be able to see a list right here we go there we go so here we want to",
    "start": "5039429",
    "end": "5044560"
  },
  {
    "text": "check the job and have you resolved yet ah there is no error I'll save it that's",
    "start": "5044560",
    "end": "5050679"
  },
  {
    "text": "why it's angry go back to that and then that one should and then we want to start a new job cool",
    "start": "5050679",
    "end": "5060250"
  },
  {
    "text": "no we need that error at all so let's add that",
    "start": "5060250",
    "end": "5064380"
  },
  {
    "text": "and by the way if you haven't used up functions at all on the YouTube for the",
    "start": "5067830",
    "end": "5073330"
  },
  {
    "text": "list we have one last one called breaking the monolith which we basically do we get a monolith and we break into",
    "start": "5073330",
    "end": "5080710"
  },
  {
    "text": "multiple functions and we use step functions workers trigger all of that okay so just before I played a step",
    "start": "5080710",
    "end": "5087070"
  },
  {
    "text": "mister didn't have to do a refresh yes this is something in case you don't know you could actually prop that's something I also leave as a tip you can prototype",
    "start": "5087070",
    "end": "5094780"
  },
  {
    "text": "using success and fail and choices and step functions and you can visually see",
    "start": "5094780",
    "end": "5099850"
  },
  {
    "text": "if what you're trying to make actually makes sense and then later you can swap those success by having actually coding",
    "start": "5099850",
    "end": "5106690"
  },
  {
    "text": "a lot of the function or there's something else yeah cool okay my favorite thing about step functions is",
    "start": "5106690",
    "end": "5111969"
  },
  {
    "text": "you get a lot of great orchestration a lot of great capability and the ability to execute any one state machine for up",
    "start": "5111969",
    "end": "5117400"
  },
  {
    "text": "to a year and you only pay for what it transitions from one state to another and I don't have that price memorized",
    "start": "5117400",
    "end": "5123219"
  },
  {
    "text": "but I remember it being miniscule like you know gigabits per second with a lambda function where it's like zero",
    "start": "5123219",
    "end": "5128680"
  },
  {
    "text": "zero zero zero one six six seven or something along those lines so it's really really cost effect yeah",
    "start": "5128680",
    "end": "5134620"
  },
  {
    "text": "just be careful to you for watching this don't even those type functions allows you to wait for up to a year",
    "start": "5134620",
    "end": "5140200"
  },
  {
    "text": "not everyone actually likes you where the page you load up for a year so just just get that in mind so alright let's",
    "start": "5140200",
    "end": "5148110"
  },
  {
    "text": "start an execution of this and just kind of observe how it goes okay we're going actually just before I do it didn't this",
    "start": "5148110",
    "end": "5154870"
  },
  {
    "text": "I am rolled that this step functions has yeah does that I enroll have permission show you vocal under functions that's a",
    "start": "5154870",
    "end": "5161980"
  },
  {
    "text": "good question we can check it but let's just find out okay so that I am a tester",
    "start": "5161980",
    "end": "5169930"
  },
  {
    "text": "a bucket isn't that right so I turn",
    "start": "5169930",
    "end": "5176890"
  },
  {
    "text": "around alike this looks fun to me s3",
    "start": "5176890",
    "end": "5183430"
  },
  {
    "text": "train URL is also different yes",
    "start": "5183430",
    "end": "5188580"
  },
  {
    "text": "okay this guy is probably not accurate we'll come back to that one it's not",
    "start": "5188580",
    "end": "5194680"
  },
  {
    "text": "actually going to use that train job data set just yet you have to target bucket this well and",
    "start": "5194680",
    "end": "5200380"
  },
  {
    "text": "the crawler and the source bucket source",
    "start": "5200380",
    "end": "5210050"
  },
  {
    "text": "buckets fine dates fine this guy needs to change all the trainer that's fish",
    "start": "5210050",
    "end": "5219158"
  },
  {
    "text": "all right so let's try that out invalid Jason so let's see what we're",
    "start": "5219429",
    "end": "5224869"
  },
  {
    "text": "missing do you want to copy that quickly to you an editor it doesn't up of course oh it's always a",
    "start": "5224869",
    "end": "5233030"
  },
  {
    "text": "lot I mean yes you see some live coding not hitting the mark on white spaces",
    "start": "5233030",
    "end": "5240760"
  },
  {
    "text": "commas and not closing a function or or Jason or identity in yellow these are",
    "start": "5240760",
    "end": "5247790"
  },
  {
    "text": "something that hits us mice is actually quite bad the worst is the the blending whitespace in Python where your",
    "start": "5247790",
    "end": "5254090"
  },
  {
    "text": "indentation isn't quite what you know everything else all right actually I use I use black most actually I changed to",
    "start": "5254090",
    "end": "5261260"
  },
  {
    "text": "black recently and I definitely don't want to go back so there's a plugin if you're using quite suddenly for",
    "start": "5261260",
    "end": "5267469"
  },
  {
    "text": "developing Python there's a linter called black that's my personal opinion by the way you could actually even have",
    "start": "5267469",
    "end": "5274130"
  },
  {
    "text": "as a as a linter on your visual studio code or any other ID you have every time to save it he automatically fix all the",
    "start": "5274130",
    "end": "5280849"
  },
  {
    "text": "annotations or any other pieces that you have now while this is executing one of",
    "start": "5280849",
    "end": "5286520"
  },
  {
    "text": "the things that I really like about step functions is that you can not just graphically monitor what state it's in",
    "start": "5286520",
    "end": "5292250"
  },
  {
    "text": "but you can also look at what the input to that state was so you kind of track as your JSON document as your state",
    "start": "5292250",
    "end": "5297949"
  },
  {
    "text": "document it's mom's fine can you do me a favor of Jason can you actually close that on the left hand side there let's",
    "start": "5297949",
    "end": "5303230"
  },
  {
    "text": "just zoom in a little bit on the text document yes yeah just effects a little",
    "start": "5303230",
    "end": "5309380"
  },
  {
    "text": "bit okay here we go so and this is all custom defined by you right so whatever",
    "start": "5309380",
    "end": "5315889"
  },
  {
    "text": "your stuff function needs in terms of state whatever values it needs it's completely up to you how that document",
    "start": "5315889",
    "end": "5321079"
  },
  {
    "text": "gets structured and you can manipulate modify as the as the system executes says state as the",
    "start": "5321079",
    "end": "5327510"
  },
  {
    "text": "state machine executes using some of those input and result paths so you've",
    "start": "5327510",
    "end": "5333300"
  },
  {
    "text": "got the ability to pass not all of this document just a subset and capture",
    "start": "5333300",
    "end": "5338310"
  },
  {
    "text": "different elements that document from the resulting executions than they did for tasks that execute what I found",
    "start": "5338310",
    "end": "5344790"
  },
  {
    "text": "interesting about your your state machine and does something that don't necessarily see all the time people doing especially in live demos is if you",
    "start": "5344790",
    "end": "5352110"
  },
  {
    "text": "go to your definition of your code you had something about input path and output path and that's something that",
    "start": "5352110",
    "end": "5358170"
  },
  {
    "text": "stuff pumps is actually quite powerful that as well on the definition yes you see that on the top the input path and",
    "start": "5358170",
    "end": "5366300"
  },
  {
    "text": "result path it's something that you can do that since that functions by easily and that's something very powerful yeah",
    "start": "5366300",
    "end": "5371760"
  },
  {
    "text": "even if you X the state machine the host stop functions execution receive the entire JSON blog you don't necessarily",
    "start": "5371760",
    "end": "5379470"
  },
  {
    "text": "need to say the entire nation block every single step out of the way and that's a really neat way to actually do",
    "start": "5379470",
    "end": "5385110"
  },
  {
    "text": "some manipulation while it's doing that let's quickly create similar lambda functions like we've done for glue but",
    "start": "5385110",
    "end": "5391890"
  },
  {
    "text": "now let's do the same thing for sage maker okay in the interest of time we're",
    "start": "5391890",
    "end": "5399300"
  },
  {
    "text": "going to interact with sage maker in the same way that we interacted with glue we're going to use the bowtie library to",
    "start": "5399300",
    "end": "5405060"
  },
  {
    "text": "do a start train jump and then to check the status is that training job",
    "start": "5405060",
    "end": "5411140"
  },
  {
    "text": "okay so let me let me send you a one you see here if you're also interested in",
    "start": "5416360",
    "end": "5422160"
  },
  {
    "text": "studying beginning side of you stop functions and you never use that before even though works because there are time constraint we only have about five",
    "start": "5422160",
    "end": "5428310"
  },
  {
    "text": "fifteen minutes left we were to kind of a rush in there for now but I will send",
    "start": "5428310",
    "end": "5433830"
  },
  {
    "text": "you a link right now that is very helpful for if you're beginning with step functions and we actually posted",
    "start": "5433830",
    "end": "5440220"
  },
  {
    "text": "that quite recently I think is about a month old if that where it's that function gives you a few tutorials that",
    "start": "5440220",
    "end": "5446760"
  },
  {
    "text": "you can play with so you can get a hold you know keep kind of a learn how the state machine syntax works because we're",
    "start": "5446760",
    "end": "5453240"
  },
  {
    "text": "primarily just copy pasting for now but that's actually quite interesting especially using choices understanding",
    "start": "5453240",
    "end": "5459840"
  },
  {
    "text": "how to do the back off dealing with exceptional stuff it back yeah you've got people need to do complex and or",
    "start": "5459840",
    "end": "5465600"
  },
  {
    "text": "type combinations as well as not so you don't love the traditional logic gates at your disposal now just to explain",
    "start": "5465600",
    "end": "5472320"
  },
  {
    "text": "very quickly about the pattern that I've just pasted into this lambda function again we're following that same pattern",
    "start": "5472320",
    "end": "5477780"
  },
  {
    "text": "that we've done with glue we're in our handler we're gonna break out that event object extract from that the data that",
    "start": "5477780",
    "end": "5483540"
  },
  {
    "text": "we need and then pass that off to a worker function so we're pulling out the training role that we want our training",
    "start": "5483540",
    "end": "5489750"
  },
  {
    "text": "to be conducted under what permissions we want stage maker and a half while it's training our model we're gonna pass",
    "start": "5489750",
    "end": "5495660"
  },
  {
    "text": "it the me zoom in on these we're gonna pass it the training you right where our",
    "start": "5495660",
    "end": "5500880"
  },
  {
    "text": "s3 data has the training data we're also gonna pass it the validation your eye for where s restoring our validation",
    "start": "5500880",
    "end": "5507810"
  },
  {
    "text": "data then we're going to pass it in s3 UI where we want it to write its output when saved makers performing training",
    "start": "5507810",
    "end": "5514800"
  },
  {
    "text": "it's going to produce primarily two outputs the first is going to be a log and that log is going to be the",
    "start": "5514800",
    "end": "5521220"
  },
  {
    "text": "traditional kind of log debug type statements that you might see whether using tensorflow your custom code or even the linear",
    "start": "5521220",
    "end": "5527520"
  },
  {
    "text": "learner or the algorithms that happens on stage making products for you it's going to produce log entries and if you",
    "start": "5527520",
    "end": "5533400"
  },
  {
    "text": "need to start to troubleshoot or understand maybe how the weights and the coefficients developed over the a box",
    "start": "5533400",
    "end": "5539430"
  },
  {
    "text": "and the training you can do that by digging into those logs and those are written out three is a part of the standard output",
    "start": "5539430",
    "end": "5545280"
  },
  {
    "text": "of a training job in addition to that perhaps more importantly all of the",
    "start": "5545280",
    "end": "5550300"
  },
  {
    "text": "weights and the coefficients and the the trained model that results the network",
    "start": "5550300",
    "end": "5555610"
  },
  {
    "text": "that results from that training is also going to be written out test three if you've seen any presentations on Amazon",
    "start": "5555610",
    "end": "5561850"
  },
  {
    "text": "sage maker it's worth noting that sage maker is a lot of individual services one of them is training one of them is",
    "start": "5561850",
    "end": "5568600"
  },
  {
    "text": "hosting you've already seen Jupiter notebooks and they can be used either all together or individually based on",
    "start": "5568600",
    "end": "5574330"
  },
  {
    "text": "what you use case and what your requirements is so the reason that that training job is going to write that data back to s3 is maybe we want to take that",
    "start": "5574330",
    "end": "5581380"
  },
  {
    "text": "Network we want to train take that training model and may be running out as part of a smartphone or a mobile application or maybe run it as a lab",
    "start": "5581380",
    "end": "5588190"
  },
  {
    "text": "into function or maybe you just run it on premise or even with a Hadoop cluster we've got that option available to us",
    "start": "5588190",
    "end": "5593500"
  },
  {
    "text": "there's no locking with that as in sage maker after you've extracted those",
    "start": "5593500",
    "end": "5598989"
  },
  {
    "text": "features from the event or rather those parameters from the event we're going to pass that off to our worker function and",
    "start": "5598989",
    "end": "5604719"
  },
  {
    "text": "that worker function looks more complicated than it is it's going to create a name for our training job it's",
    "start": "5604719",
    "end": "5612160"
  },
  {
    "text": "going to specify the container that we want Sage Maker to use for training this",
    "start": "5612160",
    "end": "5617680"
  },
  {
    "text": "is how Sage Maker is able to support not just things like tensor flow and pipe torch as well as the sage maker",
    "start": "5617680",
    "end": "5623020"
  },
  {
    "text": "algorithms but also can support any docker container that you can provide to it so if you've got completely custom",
    "start": "5623020",
    "end": "5628810"
  },
  {
    "text": "code that you want to train or even host on Amazon safe maker you've got that option to do that as long as you can",
    "start": "5628810",
    "end": "5634870"
  },
  {
    "text": "wrap it up into a docker container just before I go is that region correct you're gonna use out you see is an",
    "start": "5634870",
    "end": "5640210"
  },
  {
    "text": "absolutely incorrect thank you very much so where did we get that from we didn't actually load that up let's do that now",
    "start": "5640210",
    "end": "5650369"
  },
  {
    "text": "interesting and then that was actually available cool so what I'm looking at",
    "start": "5655080",
    "end": "5666790"
  },
  {
    "text": "you're looking for for the doctor easier okay yes so there is here we go this is",
    "start": "5666790",
    "end": "5673840"
  },
  {
    "text": "the only one so all of there's 14 different Amazon sage maker algorithms that are provided out of the",
    "start": "5673840",
    "end": "5680350"
  },
  {
    "text": "box these are what customers tell us they use most often and again they are docker containers now we can",
    "start": "5680350",
    "end": "5687850"
  },
  {
    "text": "there is the SDK for Sage maker which makes this a single API call or a single function call I didn't take the easy",
    "start": "5687850",
    "end": "5694210"
  },
  {
    "text": "route on this so what I need to do is to take for the linear learner algorithm",
    "start": "5694210",
    "end": "5699550"
  },
  {
    "text": "which is what we're using take the path for us one which is right here right and",
    "start": "5699550",
    "end": "5706450"
  },
  {
    "text": "paste that into my code again if you're doing this in anger you probably create",
    "start": "5706450",
    "end": "5711640"
  },
  {
    "text": "a map or something similar for for doing this do it a little bit smarter than what I've done right here all right so",
    "start": "5711640",
    "end": "5720010"
  },
  {
    "text": "that's now accurate now this long list of parameters this kind of bit of code that makes it look so confusing is",
    "start": "5720010",
    "end": "5726190"
  },
  {
    "text": "pretty much copy and pasted from the boto 3 home page so if you got to bow to 3 and lookup sage maker I think I've got",
    "start": "5726190",
    "end": "5732700"
  },
  {
    "text": "that here you're gonna see that same request here trust me copy it paste it and then tailor it to",
    "start": "5732700",
    "end": "5738970"
  },
  {
    "text": "your use case don't try to create a scratch okay so that should be oh good",
    "start": "5738970",
    "end": "5745900"
  },
  {
    "text": "what this is specifying just to walk through very very quickly is we're specifying that container our algorithm",
    "start": "5745900",
    "end": "5752110"
  },
  {
    "text": "we're specifying the I am role that we wanted to execute wherever you wanted to output the data to what instance type we",
    "start": "5752110",
    "end": "5759550"
  },
  {
    "text": "want it to run on that can be an m4 can be a t2 give me a p2 or p3 so we've got",
    "start": "5759550",
    "end": "5765310"
  },
  {
    "text": "access to GPUs if we want them how many of those we want to train on I mean how much disk",
    "start": "5765310",
    "end": "5771160"
  },
  {
    "text": "they're gonna need that's gonna be important for the data set then we're going to specify the location of our",
    "start": "5771160",
    "end": "5776650"
  },
  {
    "text": "training data which again we passed in this parameters those are the CSVs that we wrote out into s3 using blue",
    "start": "5776650",
    "end": "5783620"
  },
  {
    "text": "and that's as a CSD and then equally for the validation the URI for the",
    "start": "5783620",
    "end": "5789740"
  },
  {
    "text": "validation data and then after that we're just going to do create training job and pass it those training parameters and read the job name that",
    "start": "5789740",
    "end": "5797930"
  },
  {
    "text": "comes back and the job Aaron and then we're going to pass that back to step function so I'm going to click Save on",
    "start": "5797930",
    "end": "5802970"
  },
  {
    "text": "that hmm okay all right and then we need to",
    "start": "5802970",
    "end": "5809030"
  },
  {
    "text": "create one more which is going to just check on the status of that job once it's running go one one piece I have to",
    "start": "5809030",
    "end": "5816350"
  },
  {
    "text": "ask you Jason so if you just copy based on that one and we we skip the explanation about the code itself on the",
    "start": "5816350",
    "end": "5822620"
  },
  {
    "text": "check training job all right I just want to check on this on this state machine just to make sure we can finish on time",
    "start": "5822620",
    "end": "5828350"
  },
  {
    "text": "and then we if your time allows that can we just go back and expand the check on training yeah absolutely",
    "start": "5828350",
    "end": "5835900"
  },
  {
    "text": "handler",
    "start": "5836560",
    "end": "5839560"
  },
  {
    "text": "okay also said let's revisit step functions",
    "start": "5847119",
    "end": "5853550"
  },
  {
    "text": "and now we need to plus up our step functions Oh fail that's good isn't it",
    "start": "5853550",
    "end": "5860989"
  },
  {
    "text": "because the functions weren't ready yet or I'll show you now something else that's how the liquidity or what it is outputs",
    "start": "5860989",
    "end": "5866980"
  },
  {
    "text": "what was the altitude of death exception Oh call us because landed you know human",
    "start": "5866980",
    "end": "5874909"
  },
  {
    "text": "error type interesting okay we actually have access to the club watch log straight down as well but if you integrate I knew is a new one for now",
    "start": "5874909",
    "end": "5881960"
  },
  {
    "text": "and just to see if though that works okay yeah so let's go to definition",
    "start": "5881960",
    "end": "5887199"
  },
  {
    "text": "let's edit this and then we can go back and try to troubleshoot that quickly",
    "start": "5887199",
    "end": "5894850"
  },
  {
    "text": "alright so I mean the meantime let me send let me send something to people",
    "start": "5899860",
    "end": "5904940"
  },
  {
    "text": "because that I found really interesting the exception that we just found we",
    "start": "5904940",
    "end": "5910730"
  },
  {
    "text": "found now the constable still need to troubleshoot that why I sent you a link on the chat that's something I found out",
    "start": "5910730",
    "end": "5916699"
  },
  {
    "text": "recently on staff functions as I was doing another demo on that link you find",
    "start": "5916699",
    "end": "5922610"
  },
  {
    "text": "something not only the states but all type of exception that you can do in step functions which means if any sort",
    "start": "5922610",
    "end": "5929000"
  },
  {
    "text": "of exception happens you can actually catch that and do something else to say next retry or something sometimes",
    "start": "5929000",
    "end": "5936469"
  },
  {
    "text": "lunda or any other interval service or any other distributed systems could also have transit issues that could be",
    "start": "5936469",
    "end": "5943280"
  },
  {
    "text": "networking hiccups or it could be anything in general the link has sinks you there's one is particularly for",
    "start": "5943280",
    "end": "5948949"
  },
  {
    "text": "lunda which can be quite helpful so if you're number climbs out or whatever else happens that's something that",
    "start": "5948949",
    "end": "5955460"
  },
  {
    "text": "you're not expecting at all you could actually also catch that particularly to your code or to the particular execution",
    "start": "5955460",
    "end": "5962230"
  },
  {
    "text": "context of lambda so have a look at that link that's something that should be a best practice for you to oblige you",
    "start": "5962230",
    "end": "5970030"
  },
  {
    "text": "write so how are you going that one so I saw you've got a new definition for step",
    "start": "5970179",
    "end": "5975560"
  },
  {
    "text": "functions yeah so we've got a new we've got a new state machine I'm now just going to create my input",
    "start": "5975560",
    "end": "5982230"
  },
  {
    "text": "document and then we will get this launched so let's take a look at the",
    "start": "5982230",
    "end": "5989040"
  },
  {
    "text": "previous job where we already pasted our child definition okay so do you want to",
    "start": "5989040",
    "end": "5994800"
  },
  {
    "text": "copy all that and then okay easy",
    "start": "5994800",
    "end": "5998570"
  },
  {
    "text": "okay let's get a nice job going mm-hmm",
    "start": "6001960",
    "end": "6009730"
  },
  {
    "text": "now the one thing I'm going to fix is this guy right here true actually have",
    "start": "6012760",
    "end": "6018410"
  },
  {
    "text": "forgotten about this okay we should be",
    "start": "6018410",
    "end": "6028310"
  },
  {
    "text": "is that the right account yes it is yeah okay right so have a look at that",
    "start": "6028310",
    "end": "6034040"
  },
  {
    "text": "oh wow that's much bigger than before can you I think you can go fullscreen on",
    "start": "6034040",
    "end": "6039710"
  },
  {
    "text": "that one oh yeah there's a button in there yeah yeah then he can just zoom in",
    "start": "6039710",
    "end": "6045230"
  },
  {
    "text": "a little bit here we go so if for those of you who are just we only have four minutes left but in the mid maybe we're",
    "start": "6045230",
    "end": "6051890"
  },
  {
    "text": "gonna be able to finish every single step every green that you see it's something that's exceeded the blue one",
    "start": "6051890",
    "end": "6057830"
  },
  {
    "text": "is due in progress obviously and that white for transformation and the whole check and wait again we set up actually",
    "start": "6057830",
    "end": "6064040"
  },
  {
    "text": "a hard coating the white state we're actually injecting that dynamically so that's something you can do too and then",
    "start": "6064040",
    "end": "6070370"
  },
  {
    "text": "let's start training for instance all that gap training styles all of these are individual lambda functions that",
    "start": "6070370",
    "end": "6076040"
  },
  {
    "text": "Jason actually wrote about previously including the gap transformation styles one of the nice pieces about all of",
    "start": "6076040",
    "end": "6081980"
  },
  {
    "text": "these arrows that you see in circle coming back in this is actually when you're trying to capture this output and",
    "start": "6081980",
    "end": "6088310"
  },
  {
    "text": "say it and say well we're not ready to proceed that's actually back up again so think about something that you're",
    "start": "6088310",
    "end": "6093710"
  },
  {
    "text": "working with a the best batch or something that's long-running and you want to go back and forth to say well",
    "start": "6093710",
    "end": "6099170"
  },
  {
    "text": "it's not really the job yet let's go back wait a little bit more and so forth so that white is actually waiting on",
    "start": "6099170",
    "end": "6106070"
  },
  {
    "text": "step functions and not London so you saw that we failed again let's have a look at quickly or do you think I",
    "start": "6106070",
    "end": "6113099"
  },
  {
    "text": "we've got four minutes left so we'll just note that my demos are subjective",
    "start": "6113099",
    "end": "6118349"
  },
  {
    "text": "elyar Murphy is alive and well but let's highlight just as you as you walk away from today's session first thank you",
    "start": "6118349",
    "end": "6124349"
  },
  {
    "text": "very much for joining us I would invite you to all this code is an open source yet it will be shortly",
    "start": "6124349",
    "end": "6129749"
  },
  {
    "text": "in the meantime available on github today is this code which again haters sent out the link for me in the chat and",
    "start": "6129749",
    "end": "6136739"
  },
  {
    "text": "it's going to have a very very similar flow where it's going to be doing pulling data from s3 running a trading",
    "start": "6136739",
    "end": "6144419"
  },
  {
    "text": "job in sage maker making that notification into slack so you've got that two-way communication going back",
    "start": "6144419",
    "end": "6149849"
  },
  {
    "text": "and forth so I would invite you to go ahead and deploy this into your account or at least have a look at the source",
    "start": "6149849",
    "end": "6155099"
  },
  {
    "text": "code and get a feel for how its operating and see if you can't use it for your own purposes awesome and by the",
    "start": "6155099",
    "end": "6161699"
  },
  {
    "text": "way if you can see you at actually 15 minutes time we also have Nicky and am",
    "start": "6161699",
    "end": "6167189"
  },
  {
    "text": "talking about the front-end development on AWS using single page applications in fact it's actually a pretty cool",
    "start": "6167189",
    "end": "6173039"
  },
  {
    "text": "workshop I just had a quick look about an hour ago and I would definitely recommend for you if you can stay watch",
    "start": "6173039",
    "end": "6179879"
  },
  {
    "text": "that and it will be awesome learn some few new takes result Jason thanks thanks so much yeah and as soon as we actually",
    "start": "6179879",
    "end": "6187229"
  },
  {
    "text": "have the link open source with the whole automation piece and something you can reproduce yourself will be actually",
    "start": "6187229",
    "end": "6193590"
  },
  {
    "text": "sharing there either on YouTube as a comment or actually on twitch as a comment as well cool perfect if you need",
    "start": "6193590",
    "end": "6200550"
  },
  {
    "text": "to catch us or do something or want to catch up anything you like future hit us",
    "start": "6200550",
    "end": "6205919"
  },
  {
    "text": "on on Twitter and I'll get your twitter handler because I think we did include that first on the other hand the lower",
    "start": "6205919",
    "end": "6211979"
  },
  {
    "text": "charts but that's something else thanks for watching and I see you soon thank you very much",
    "start": "6211979",
    "end": "6218118"
  },
  {
    "text": "you",
    "start": "6225500",
    "end": "6227560"
  }
]