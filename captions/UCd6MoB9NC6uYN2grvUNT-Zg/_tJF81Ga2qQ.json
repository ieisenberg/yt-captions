[
  {
    "text": "In this video, you'll see how you can get\nstarted with Amazon CloudWatch Evidently.",
    "start": "497",
    "end": "4228"
  },
  {
    "text": "With this capability, you can reduce the risk\nof application disruption through controlled",
    "start": "4607",
    "end": "8200"
  },
  {
    "text": "launches and conduct experiments to validate\nnew features before rolling them out for general use.",
    "start": "8200",
    "end": "12709"
  },
  {
    "text": "In this demonstration, we'll be adding a new \nmodule to the landing page of a fictional e-commerce",
    "start": "14939",
    "end": "19028"
  },
  {
    "text": "bookstore application to recommend books to \nusers based on purchases their friends have made.",
    "start": "19028",
    "end": "22650"
  },
  {
    "text": "To get started, let's navigate to \nAmazon CloudWatch Evidently.",
    "start": "24000",
    "end": "27006"
  },
  {
    "text": "First, we'll need to create a project, which\nwill be the container for the features we",
    "start": "30200",
    "end": "33480"
  },
  {
    "text": "want to launch or the experiment we want to\nconduct for the bookstore application.",
    "start": "33480",
    "end": "36836"
  },
  {
    "text": "We'll name the project “Bookstore.”",
    "start": "37899",
    "end": "39369"
  },
  {
    "text": "Next, we'll decide whether to have our \nevaluation events stored and, if so, where.",
    "start": "43157",
    "end": "47281"
  },
  {
    "text": "For this example, we’ll use an Amazon CloudWatch\nlog group where we’re already storing Evidently metrics.",
    "start": "48381",
    "end": "53151"
  },
  {
    "text": "We can optionally assign tags.",
    "start": "58889",
    "end": "60653"
  },
  {
    "text": "Let's proceed and create the project.",
    "start": "61594",
    "end": "63311"
  },
  {
    "text": "Now we can add our feature to the Bookstore project.",
    "start": "64680",
    "end": "66962"
  },
  {
    "text": "We'll name the feature \"Recommendations.\"",
    "start": "69455",
    "end": "71196"
  },
  {
    "text": "Next, we’ll define feature variations to expose \ndifferent numbers of book recommendations",
    "start": "75000",
    "end": "79140"
  },
  {
    "text": "to subsets of users so we can compare the response.",
    "start": "79140",
    "end": "81898"
  },
  {
    "text": "First, we’ll need to select the variation type.",
    "start": "84097",
    "end": "85962"
  },
  {
    "text": "Boolean returns true or false depending on\nif the user is assigned to the variation or not.",
    "start": "86549",
    "end": "90835"
  },
  {
    "text": "Long and Double are numerical variation types,\nand String dynamically includes a string value.",
    "start": "91420",
    "end": "96484"
  },
  {
    "text": "Because we’re basing the experience of our application \non the value of the variation, we’ll select Double.",
    "start": "97621",
    "end": "102224"
  },
  {
    "text": "Variation1, the default, will \nproduce 5 book recommendations.",
    "start": "104147",
    "end": "107552"
  },
  {
    "text": "Variation2 will produce 10.",
    "start": "107809",
    "end": "109475"
  },
  {
    "text": "To set up the feature evaluation,",
    "start": "113092",
    "end": "114735"
  },
  {
    "text": "we need to allow Evidently's control and \nvariation logic to hook into our application.",
    "start": "114735",
    "end": "118532"
  },
  {
    "text": "Sample code is provided in JavaScript, Java,\nand Python and can be leveraged in our application",
    "start": "119412",
    "end": "124085"
  },
  {
    "text": "to check the variation that’s assigned \nto the user at runtime by Evidently.",
    "start": "124085",
    "end": "127535"
  },
  {
    "text": "Here’s the code that evaluates the feature variation.",
    "start": "129711",
    "end": "131893"
  },
  {
    "text": "This code calls the EvaluateFeature method.",
    "start": "132968",
    "end": "135321"
  },
  {
    "text": "This is how the API response will appear in our application.",
    "start": "138303",
    "end": "141168"
  },
  {
    "text": "\"Reason\" states whether the feature was \nevaluated as a launch, experiment, or override.",
    "start": "141596",
    "end": "145930"
  },
  {
    "text": "We’ll be able to see which variation was\nassigned and the value associated with it.",
    "start": "146431",
    "end": "150000"
  },
  {
    "text": "We can use this response to code the \napplication feature behavior for this variation.",
    "start": "150420",
    "end": "154235"
  },
  {
    "text": "We'll review the full application code later in this video.",
    "start": "155787",
    "end": "158368"
  },
  {
    "text": "We can also use overrides to specify that\ncertain users always see a certain variation.",
    "start": "159554",
    "end": "163603"
  },
  {
    "text": "Overrides are useful for testing and beta releases.",
    "start": "164042",
    "end": "166692"
  },
  {
    "text": "Let's add an override now.",
    "start": "168000",
    "end": "169402"
  },
  {
    "text": "Now we can add this feature.",
    "start": "171968",
    "end": "173307"
  },
  {
    "text": "Let's quickly review the feature's evaluation rules.",
    "start": "174846",
    "end": "177250"
  },
  {
    "text": "Here we can see the overrides added for this feature.",
    "start": "179317",
    "end": "181476"
  },
  {
    "text": "This shows if the feature is part \nof any launch or experiment.",
    "start": "184629",
    "end": "187437"
  },
  {
    "text": "In our case, the feature is not yet part of either.",
    "start": "187852",
    "end": "190066"
  },
  {
    "text": "Now we’re ready to create a launch \nfor the Recommendations feature.",
    "start": "192559",
    "end": "195199"
  },
  {
    "text": "Let’s return to the \"Bookstore\" \nproject and create the launch.",
    "start": "196653",
    "end": "199242"
  },
  {
    "text": "We'll name the launch.",
    "start": "201858",
    "end": "202898"
  },
  {
    "text": "We can select an existing feature or add a new one.",
    "start": "208299",
    "end": "210612"
  },
  {
    "text": "We’ll select our \"Recommendations\" feature.",
    "start": "210870",
    "end": "212769"
  },
  {
    "text": "Next, we'll set up the launch configuration,",
    "start": "213589",
    "end": "215766"
  },
  {
    "text": "where we can choose to introduce the feature \nto customers immediately or incrementally.",
    "start": "215766",
    "end": "219354"
  },
  {
    "text": "We'll schedule the launch to incrementally\nintroduce the feature to users.",
    "start": "221627",
    "end": "224858"
  },
  {
    "text": "We can select the amount or percentage of\ntraffic to which we want to introduce this feature.",
    "start": "230650",
    "end": "234327"
  },
  {
    "text": "Let’s start with 10% of users seeing one\nvariation, and 10% seeing the other.",
    "start": "234826",
    "end": "238876"
  },
  {
    "text": "We can add steps to this schedule and roll out the \nfeature to a larger percentage of traffic over time.",
    "start": "240195",
    "end": "244634"
  },
  {
    "text": "Let’s raise the traffic percentages \nto 25% per variation the next day.",
    "start": "246000",
    "end": "249795"
  },
  {
    "text": "In a final step, we'll allow 50% of users\nto see each variation on the third day.",
    "start": "256651",
    "end": "260872"
  },
  {
    "text": "We have the option to add and \nmonitor metrics that evaluate how our",
    "start": "268987",
    "end": "271890"
  },
  {
    "text": "Recommendations feature performs for customers.",
    "start": "271890",
    "end": "274088"
  },
  {
    "text": "We can define our own metrics that we will\nemit from our application or use standard",
    "start": "275017",
    "end": "278729"
  },
  {
    "text": "Real-User Monitoring (RUM) metrics if our\napplication uses the CloudWatch RUM feature.",
    "start": "278729",
    "end": "283573"
  },
  {
    "text": "Let's set up a custom metric to measure how long \nit takes to load the \"Recommendations\" feature.",
    "start": "285797",
    "end": "289655"
  },
  {
    "text": "First, we’ll name the metric.",
    "start": "289983",
    "end": "291226"
  },
  {
    "text": "Next, we’ll add a rule that will be applied to data \nevents emitted by our application to generate this metric.",
    "start": "293720",
    "end": "298551"
  },
  {
    "text": "We can copy and paste this code into our application\nat the appropriate place to emit a metrics event.",
    "start": "299902",
    "end": "304400"
  },
  {
    "text": "We can add up to three metrics.",
    "start": "305388",
    "end": "306914"
  },
  {
    "text": "Let's add a metric to measure the load \ntime of our application's homepage.",
    "start": "307243",
    "end": "310394"
  },
  {
    "text": "We can also implement a CloudWatch alarm that will \nnotify us if the metrics deviate from our expectations.",
    "start": "317100",
    "end": "321837"
  },
  {
    "text": "We won't use an alarm for this launch.",
    "start": "323167",
    "end": "324858"
  },
  {
    "text": "Now we're ready to create the launch.",
    "start": "326900",
    "end": "328557"
  },
  {
    "text": "When the launch is initiated, let's review the code we've prepared for our e-commerce bookstore application.",
    "start": "331971",
    "end": "336528"
  },
  {
    "text": "In our \"Home\" component, we use AWS Security\nToken Service (AWS STS) and Amazon Cognito",
    "start": "339411",
    "end": "345441"
  },
  {
    "text": "to return the credentials needed to call the\nEvidently API and initialize the Evidently event.",
    "start": "345441",
    "end": "350195"
  },
  {
    "text": "This is where we check to see whether or not a client exists.",
    "start": "351452",
    "end": "354230"
  },
  {
    "text": "Here, we create the Evidently client and define its endpoint, ",
    "start": "354719",
    "end": "357647"
  },
  {
    "text": "region, and credentials so that we can pass \nit on to our \"FriendsBought\" component.",
    "start": "357647",
    "end": "361655"
  },
  {
    "text": "Here's where we’ll evaluate our feature flag for Evidently.",
    "start": "363146",
    "end": "365768"
  },
  {
    "text": "With this code, we've defined the request\nand called for the \"Recommendations\" feature.",
    "start": "366354",
    "end": "370018"
  },
  {
    "text": "We're using a randomly assigned ID for each user session.",
    "start": "370714",
    "end": "373362"
  },
  {
    "text": "Then we call the Evidently client prepared in the \n\"Home\" component and wait for a response.",
    "start": "374366",
    "end": "378207"
  },
  {
    "text": "We also save the feature state, \nvariation name, and variation value.",
    "start": "378659",
    "end": "381983"
  },
  {
    "text": "Another set of code checks whether the \n\"Recommendations\" feature is being used for any",
    "start": "382888",
    "end": "386206"
  },
  {
    "text": " launches or experiments; if it's not, the \n\"Recommendations\" API won't be called.",
    "start": "386206",
    "end": "390496"
  },
  {
    "text": "Here, we see code for the Recommendations\nload time metric we established.",
    "start": "393625",
    "end": "396868"
  },
  {
    "text": "The post-event API we added from the \nsample code emits the metrics to Evidently.",
    "start": "397406",
    "end": "401314"
  },
  {
    "text": "Finally, we define the circumstances in which\nto render the feature, and then build and",
    "start": "403831",
    "end": "407499"
  },
  {
    "text": "deploy our application code into production.",
    "start": "407499",
    "end": "409669"
  },
  {
    "text": "Now that our feature launch has been active for some time,\n let's see how the application appears to various users.",
    "start": "411979",
    "end": "416733"
  },
  {
    "text": "Here we can see the module that \nrecommends books purchased by our friends.",
    "start": "417429",
    "end": "420533"
  },
  {
    "text": "When we refresh the page, we'll see the feature\nvariation for the 10 recommended books.",
    "start": "421559",
    "end": "425494"
  },
  {
    "text": "Let's return to the CloudWatch Management\nConsole and review the launch's performance.",
    "start": "428194",
    "end": "431679"
  },
  {
    "text": "We'll select our launch and view the Monitoring tab.",
    "start": "433793",
    "end": "436239"
  },
  {
    "text": "The first graphic shows how many times each\nvariation was assigned to the application's users.",
    "start": "438781",
    "end": "442857"
  },
  {
    "text": "The next two graphics display our custom metrics.",
    "start": "446950",
    "end": "449479"
  },
  {
    "text": "In this case, there’s little difference between \nVariation1 and Variation2 and the metrics are satisfactory.",
    "start": "450457",
    "end": "455159"
  },
  {
    "text": "If the feature had a bug or created a poor\ncustomer experience, we could reduce traffic",
    "start": "455800",
    "end": "459789"
  },
  {
    "text": "or even cancel the launch while \nwe worked to improve the feature.",
    "start": "459789",
    "end": "462367"
  },
  {
    "text": "If we want to launch the better-performing\nfeature variation earlier to all customers,",
    "start": "465891",
    "end": "469682"
  },
  {
    "text": "we can do so easily by updating the launch\ntraffic to 100% for our chosen variation.",
    "start": "469683",
    "end": "474312"
  },
  {
    "text": "You've just seen how you can get started with\nAmazon CloudWatch Evidently, and launch a",
    "start": "477269",
    "end": "480650"
  },
  {
    "text": "feature with different variations \nincrementally to customers.",
    "start": "480650",
    "end": "483050"
  },
  {
    "text": "You can learn more about this topic in \nthe description and links for this video.",
    "start": "484492",
    "end": "487665"
  },
  {
    "text": "Thanks for watching. Now it's your turn to try.",
    "start": "487665",
    "end": "489675"
  }
]