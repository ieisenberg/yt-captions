[
  {
    "start": "0",
    "end": "61000"
  },
  {
    "text": "all right let's go ahead and get started I'd like to start off by congratulating everybody for making it to the final day",
    "start": "399",
    "end": "5799"
  },
  {
    "text": "of reinvent and today we're going to be discussing how to manage inventory",
    "start": "5799",
    "end": "11000"
  },
  {
    "text": "patching and system images for your hybrid Cloud environment with AWS management capabilities my name is",
    "start": "11000",
    "end": "17800"
  },
  {
    "text": "Taylor Anderson I'm a product manager with ec2 and joining me today is amjad Hussein who's a senior manager also with",
    "start": "17800",
    "end": "28119"
  },
  {
    "text": "ec2 all right so what should you expect what should you look to get out of today's session well by the end of the",
    "start": "28119",
    "end": "33200"
  },
  {
    "text": "session or during today you'll learn how to automate Ami building and deployment you'll also learn how to monitor your",
    "start": "33200",
    "end": "40200"
  },
  {
    "text": "Fleet configuration and gather software inventory and then finally you'll also",
    "start": "40200",
    "end": "45280"
  },
  {
    "text": "be able to ensure that your instances are patch compliant so in creating these",
    "start": "45280",
    "end": "51120"
  },
  {
    "text": "capabilities all these were really driven off of customer feedback and customer paino that related to managing",
    "start": "51120",
    "end": "56800"
  },
  {
    "text": "large number of instances in a hybrid cloud environment more specifically we",
    "start": "56800",
    "end": "62280"
  },
  {
    "start": "61000",
    "end": "61000"
  },
  {
    "text": "heard from customers that managing cloud and hybrid environments using traditional tools can be really quite",
    "start": "62280",
    "end": "67400"
  },
  {
    "text": "complex and costly and there were four key areas for supporting that one of which being that traditional it tools",
    "start": "67400",
    "end": "74080"
  },
  {
    "text": "really were not necessarily built for the cloud so if you're an organization started off on Prem using a set of tools",
    "start": "74080",
    "end": "80119"
  },
  {
    "text": "for management now you're expanding into the cloud if you're using those same management tools they aren't always a",
    "start": "80119",
    "end": "85280"
  },
  {
    "text": "great fit for that cloud environment particularly when you're working with the cloud with the elasticity that comes",
    "start": "85280",
    "end": "91200"
  },
  {
    "text": "particularly with AWS where you can change the amount of resources that you need on demand also we heard universally that",
    "start": "91200",
    "end": "98960"
  },
  {
    "text": "customers wanted a better Vis better visibility better picture into the state",
    "start": "98960",
    "end": "104240"
  },
  {
    "text": "of the instances that they were running and then finally we also heard that for a number of customers uh they may have",
    "start": "104240",
    "end": "110280"
  },
  {
    "text": "created really what was a best of breed solution using management tools from different vendors but that created their",
    "start": "110280",
    "end": "116000"
  },
  {
    "text": "own complexities specifically when it comes to licensing so yesterday uh during verner's keynote",
    "start": "116000",
    "end": "123640"
  },
  {
    "start": "122000",
    "end": "122000"
  },
  {
    "text": "you may have heard that we announced Amazon ec2 systems manager and we also",
    "start": "123640",
    "end": "129080"
  },
  {
    "text": "discussed the capabilities within systems manager yesterday in a couple of presentations uh what is systems manager",
    "start": "129080",
    "end": "135160"
  },
  {
    "text": "it's really a set of capabilities that enable automated configuration and ongoing management of systems at scale",
    "start": "135160",
    "end": "143080"
  },
  {
    "text": "across all of your windows and Linux workloads regardless of whether those instances are running on premise or in e",
    "start": "143080",
    "end": "151239"
  },
  {
    "text": "2 all right so let's look at the specific capabilities within systems manager and I'm just going to throw them",
    "start": "151239",
    "end": "157000"
  },
  {
    "start": "152000",
    "end": "152000"
  },
  {
    "text": "all up here on the screen and then talk through them uh and so in the leftmost column two of these capabilities relate",
    "start": "157000",
    "end": "163840"
  },
  {
    "text": "to configuration and administration so the first one being run command how many folks here have heard of run",
    "start": "163840",
    "end": "170120"
  },
  {
    "text": "command okay pretty good number of people we launched run command in October of last year run command allows",
    "start": "170120",
    "end": "176680"
  },
  {
    "text": "you to execute commands remotely at scale the rest of the capabilities here were released as part of uh systems",
    "start": "176680",
    "end": "183840"
  },
  {
    "text": "manager yesterday which include State manager which allows you to persist a",
    "start": "183840",
    "end": "189000"
  },
  {
    "text": "state or consistently apply a state or configuration to an instance specifically allowing you to deal with",
    "start": "189000",
    "end": "195920"
  },
  {
    "text": "things like configuration drift in the middle column we have two more capabilities which we're calling shared",
    "start": "195920",
    "end": "202440"
  },
  {
    "text": "capabilities these are resources that can actually be used by the other capabilities within systems manager so",
    "start": "202440",
    "end": "207840"
  },
  {
    "text": "for example maintenance window allow you to schedule and manage what are",
    "start": "207840",
    "end": "213200"
  },
  {
    "text": "otherwise disruptive activities for example patching so with maintenance Windows you can define a schedule uh you",
    "start": "213200",
    "end": "219799"
  },
  {
    "text": "can find a cut off time within that period that maintenance window and then you can also Define the actual tasks or",
    "start": "219799",
    "end": "226519"
  },
  {
    "text": "activities that you would like the maintenance window to execute another shared capability is",
    "start": "226519",
    "end": "232079"
  },
  {
    "text": "parameter store so if you have usernames passwords connection strings uh other",
    "start": "232079",
    "end": "237840"
  },
  {
    "text": "attributes that you want to manage in optionally even uh encrypt using your own KMS keys and then manage access to",
    "start": "237840",
    "end": "245599"
  },
  {
    "text": "those parameters on a granular basis as far as other users then parameter store is a great fit for you so for example",
    "start": "245599",
    "end": "251760"
  },
  {
    "text": "you may want to use parameters when you execute a run command or if you want to use parameters when you're executing",
    "start": "251760",
    "end": "258160"
  },
  {
    "text": "automation which takes us to the final category of capabilities here and really",
    "start": "258160",
    "end": "263240"
  },
  {
    "text": "the focus of this talk this morning so today we're going to talk about Automation and more specifically our",
    "start": "263240",
    "end": "269440"
  },
  {
    "text": "initial primary use case which is Ami building or Amazon machine image uh",
    "start": "269440",
    "end": "274759"
  },
  {
    "text": "building or creation we're also going to talk about how to collect inventory from all your instances and then finally the",
    "start": "274759",
    "end": "281400"
  },
  {
    "text": "last topic will be patch manager so this is really the suite of capabilities within system manager today if you",
    "start": "281400",
    "end": "286800"
  },
  {
    "text": "caught om jud's presentation yesterday he touched on run command State manager and parameter store all right so let's",
    "start": "286800",
    "end": "293720"
  },
  {
    "text": "go ahead and jump into automation here okay so when we reached out to",
    "start": "293720",
    "end": "300800"
  },
  {
    "start": "299000",
    "end": "299000"
  },
  {
    "text": "customers to identify pain points and is also understand what areas would really",
    "start": "300800",
    "end": "306360"
  },
  {
    "text": "be great for an automation solution uh we heard that the the task of building",
    "start": "306360",
    "end": "313320"
  },
  {
    "text": "Ami there was certainly some pain there it's it's a task that goes on for a lot of folks that are fairly regular Cadence",
    "start": "313320",
    "end": "319960"
  },
  {
    "text": "and there are several different triggers so for example Amazon releases uh new amies fairly regularly and for Windows",
    "start": "319960",
    "end": "326600"
  },
  {
    "text": "released on a monthly basis a lot of customers out actually take those stock ec2 amies and then Harden them or",
    "start": "326600",
    "end": "333600"
  },
  {
    "text": "customize them but that's a monthly event so that's a monthly uh update cycle other customers actually have",
    "start": "333600",
    "end": "340280"
  },
  {
    "text": "taken ownership of their amies and have taken ownership of the patching so we do that in Amazon ec2 of the amies we",
    "start": "340280",
    "end": "347360"
  },
  {
    "text": "produce but some customers have actually taken that ownership themselves and so now they're patching their own amies and",
    "start": "347360",
    "end": "352720"
  },
  {
    "text": "that can be triggered if it's a Windows ony that's going to be a monthly Cadence following Patch Tuesday while other",
    "start": "352720",
    "end": "358759"
  },
  {
    "text": "customers prefer to bake applications into the Yi which gives them a much faster start time when they're launching",
    "start": "358759",
    "end": "365160"
  },
  {
    "text": "especially from autoscaling groups and of course applications are changing so these are regular uh automation build",
    "start": "365160",
    "end": "371440"
  },
  {
    "text": "Cycles how many how many people here actually are regularly building their own machine",
    "start": "371440",
    "end": "376639"
  },
  {
    "text": "images okay lot of folks okay so I would assume some of you feel the pain here so",
    "start": "376639",
    "end": "382440"
  },
  {
    "text": "kind of a never-ending process so we saw there was a huge opportunity here to really simplify this regular occurrence",
    "start": "382440",
    "end": "388240"
  },
  {
    "text": "and build automation around it and so of course we're introducing",
    "start": "388240",
    "end": "393440"
  },
  {
    "text": "automation today and one of the first things we wanted to do is make the service very easy to use with a shallow",
    "start": "393440",
    "end": "399160"
  },
  {
    "text": "learning curve so uh within a short amount of time you'll be able to actually take a source Ami customize it",
    "start": "399160",
    "end": "406720"
  },
  {
    "text": "in some fashion and then create a new Ami out of that we're going to go through an example today of how you can do that using",
    "start": "406720",
    "end": "413800"
  },
  {
    "text": "automation you don't necessarily have to use automation exclusively for AMI creation but that certainly is big use",
    "start": "413800",
    "end": "420039"
  },
  {
    "text": "case for it and one of the nice things about how we've built automation is that it provides proactive event notification",
    "start": "420039",
    "end": "425960"
  },
  {
    "text": "for every one of your automation steps that was another big customer uh feed feedback point is that I want to know",
    "start": "425960",
    "end": "431479"
  },
  {
    "text": "immediately if I run into an automation step that is not successful and of course being an AWS service it's",
    "start": "431479",
    "end": "436919"
  },
  {
    "text": "optimized to work with a variety of other services including run command Lambda cloud trail Imam and cloudwatch",
    "start": "436919",
    "end": "444599"
  },
  {
    "text": "events so you may ask yourself okay well this sounds cool how do I get started",
    "start": "444599",
    "end": "450479"
  },
  {
    "text": "Three core steps here the first one is to create an automation document the",
    "start": "450479",
    "end": "455639"
  },
  {
    "text": "second is to actually run that automation or execute that document and then the third is actually monitor your",
    "start": "455639",
    "end": "461199"
  },
  {
    "text": "automation so let's jump in and look at what that looks like here I'm going to",
    "start": "461199",
    "end": "466759"
  },
  {
    "text": "jump over to My Demo machine here and I'm going to switch",
    "start": "466759",
    "end": "475240"
  },
  {
    "text": "over okay so now I'm in the ec2 console and here's left nav and you can see as",
    "start": "475240",
    "end": "481080"
  },
  {
    "text": "of yesterday we've added several new elements on the left one of which has",
    "start": "481080",
    "end": "486159"
  },
  {
    "text": "been around for a while is actually documents so the first thing I'm going to do is I'm going to create an automation document and by the way",
    "start": "486159",
    "end": "492560"
  },
  {
    "text": "everything that I show here in the console of course is supported on the CLI or or through sdks as well so I'm",
    "start": "492560",
    "end": "499000"
  },
  {
    "text": "going to create I'm going to create the document by pressing the create document button and I'm going to call this patch",
    "start": "499000",
    "end": "507440"
  },
  {
    "text": "Windows Ami and I have a choice of document types now as you can imagine we're going to",
    "start": "507440",
    "end": "513080"
  },
  {
    "text": "select an automation document and I'm going to go ahead and paste in a Json",
    "start": "513080",
    "end": "519000"
  },
  {
    "text": "object so this is something I grabbed before the presentation but this is basically a Json document that comes",
    "start": "519000",
    "end": "524320"
  },
  {
    "text": "directly out of the walkthrough in our Tech docs online so I'm basically going to follow the walkthrough that you can",
    "start": "524320",
    "end": "529720"
  },
  {
    "text": "follow online I'm going to run down I'm going to click create document all right my",
    "start": "529720",
    "end": "534959"
  },
  {
    "text": "document's been created great so let's go ahead I'm going to go to I'm going to",
    "start": "534959",
    "end": "540000"
  },
  {
    "text": "filter by uh documents owned by me and there's my patch Windows Ami document",
    "start": "540000",
    "end": "545959"
  },
  {
    "text": "and let's check that out a little bit here uh here's a description all right so systems manager automation damma",
    "start": "545959",
    "end": "551959"
  },
  {
    "text": "we're going to patch and create and I'm going to click on parameters here so we can see that the way this document has",
    "start": "551959",
    "end": "558440"
  },
  {
    "text": "been created we're actually passing in two parameters the first of which is the",
    "start": "558440",
    "end": "563640"
  },
  {
    "text": "source Ami ID okay what are we going to start off what are we going to launch this instance with and then the second",
    "start": "563640",
    "end": "570279"
  },
  {
    "text": "parameter is what we're going to call the new Ami that we generate from this automation process uh so here the types",
    "start": "570279",
    "end": "578000"
  },
  {
    "text": "it's going to be a string and then the description Amy to patch as we just discussed and then the second one is",
    "start": "578000",
    "end": "583880"
  },
  {
    "text": "going to be the name of the new Ami now I got a little fancy for this demo here I could have just put in uh hard-coded",
    "start": "583880",
    "end": "589480"
  },
  {
    "text": "strings for things like the source Amy ID but I wanted to show a couple of cool features within",
    "start": "589480",
    "end": "595120"
  },
  {
    "text": "automation so if we look at this first element here we can see that we have a",
    "start": "595120",
    "end": "600880"
  },
  {
    "text": "delimiter SSM so what we're doing here is we're actually pulling a parameter from parameter store okay so the actual",
    "start": "600880",
    "end": "608600"
  },
  {
    "text": "value for the source Ami ID say Ami 1 2 3 4 5 6 that's actually defined over in",
    "start": "608600",
    "end": "614640"
  },
  {
    "text": "parameter store for the second item here what I've done is uh I've concatenated",
    "start": "614640",
    "end": "620320"
  },
  {
    "text": "two items here so the first is the actual patch Ami patched Amy so that's what we're going to call it and then the",
    "start": "620320",
    "end": "626200"
  },
  {
    "text": "second half of the name of the new Amy will actually be a time stamp okay so we're using a global variable from uh",
    "start": "626200",
    "end": "632440"
  },
  {
    "text": "the automation service itself if we want to we can go ahead and actually browse the document right here",
    "start": "632440",
    "end": "638720"
  },
  {
    "text": "so we'll see some of the things we just mentioned here's our description here's the assume role here",
    "start": "638720",
    "end": "644240"
  },
  {
    "text": "so what we did here is we created a service Ro that gives automation the authority",
    "start": "644240",
    "end": "650320"
  },
  {
    "text": "to execute actions in our account here so that's the uh role we're providing",
    "start": "650320",
    "end": "655800"
  },
  {
    "text": "here are the parameters we just talked about Source Ami ID Target Ami ID name",
    "start": "655800",
    "end": "661720"
  },
  {
    "text": "and then here we get into the meat of the workflow here so here are the main steps and the first step here is going",
    "start": "661720",
    "end": "667920"
  },
  {
    "text": "to be to start instance and we're calling one of the defined action types that's supported with automation which",
    "start": "667920",
    "end": "674480"
  },
  {
    "text": "is run instance and you can see we've got some flow control elements here so our timeout in seconds is going to be",
    "start": "674480",
    "end": "680680"
  },
  {
    "text": "1,200 that's the maximum amount of time we're going to wait for the step to complete uh we're going to have a",
    "start": "680680",
    "end": "686519"
  },
  {
    "text": "maximum number of attempts of one and also what happens if we do have a step failure here so in this case here we're",
    "start": "686519",
    "end": "692800"
  },
  {
    "text": "going to abort and quit the entire workflow so some other steps here we have here's really the core of the",
    "start": "692800",
    "end": "699200"
  },
  {
    "text": "automation workflow install missing Windows updates uh and that's going to be based",
    "start": "699200",
    "end": "704320"
  },
  {
    "text": "on run command so this is actually going to execute a run command document call",
    "start": "704320",
    "end": "709680"
  },
  {
    "text": "install missing Windows updates uh and then we're going to stop the instance create the image and then terminate the",
    "start": "709680",
    "end": "716760"
  },
  {
    "text": "instance so let's go ahead and actually execute this document so we do that by going over to the automation section in",
    "start": "716760",
    "end": "723200"
  },
  {
    "text": "the console here you can see I've run several uh automation executions previously and I'm going to go ahead and",
    "start": "723200",
    "end": "729320"
  },
  {
    "text": "do run Automation and here's my patch Windows Ami document and I'm going to",
    "start": "729320",
    "end": "734920"
  },
  {
    "text": "select version one so we do support versioning with uh systems manager",
    "start": "734920",
    "end": "740000"
  },
  {
    "text": "documents so if I'm doing a lot of iterating I can pick whatever version I want to execute and you can see here",
    "start": "740000",
    "end": "745079"
  },
  {
    "text": "here are the parameters and here are the default values prepopulated so I'm just going to click run Automation and our",
    "start": "745079",
    "end": "750839"
  },
  {
    "text": "automation is started so I can go ahead and click on that new automation workflow here and we can see all the",
    "start": "750839",
    "end": "757440"
  },
  {
    "text": "metadata associated with it where it really gets interesting is if we click on steps okay so here are the steps that",
    "start": "757440",
    "end": "764000"
  },
  {
    "text": "we just saw in the Json itself let me move over the column here just a little",
    "start": "764000",
    "end": "770360"
  },
  {
    "text": "bit uh oh there we go there we go all right so we can see",
    "start": "770360",
    "end": "776639"
  },
  {
    "text": "here that we have five steps in this workflow first one is going to be start instances again install missing Windows",
    "start": "776639",
    "end": "782760"
  },
  {
    "text": "updates stop instance create image and terminate and so what I'm going to do a",
    "start": "782760",
    "end": "788720"
  },
  {
    "text": "little bit like a cooking show here is I'm going to jump to a completed workflow to see what that looks like here here's an example of uh execution I",
    "start": "788720",
    "end": "797440"
  },
  {
    "text": "ran before the presentation today and I can go ahead and click on any one of these steps and look at the output so",
    "start": "797440",
    "end": "802600"
  },
  {
    "text": "for example the output for the very first step here of launching the instance was the instance excuse me me",
    "start": "802600",
    "end": "809320"
  },
  {
    "text": "the instance ID that I created so let me go ahead and close that out this second step here again is a run",
    "start": "809320",
    "end": "815839"
  },
  {
    "text": "command execution and so if I click on that I'm actually going to see the output of run command here and so we can",
    "start": "815839",
    "end": "822760"
  },
  {
    "text": "see that since we are executing a document called install missing Windows updates we can see here in summary that",
    "start": "822760",
    "end": "829560"
  },
  {
    "text": "we installed two important updates okay so let me go ahead and close this out",
    "start": "829560",
    "end": "835519"
  },
  {
    "text": "close and then one of the other items here is again I mentioned can Define outputs for our workflow so here if I",
    "start": "835519",
    "end": "842160"
  },
  {
    "text": "click on output we can see that the output for this workflow is the ID of the new Ami that was",
    "start": "842160",
    "end": "848279"
  },
  {
    "text": "created okay I'm going to jump out of the demo here and go back",
    "start": "848279",
    "end": "853839"
  },
  {
    "text": "to the presentation and just kind of highlight a couple of Concepts that we just had in that",
    "start": "853839",
    "end": "861160"
  },
  {
    "start": "855000",
    "end": "855000"
  },
  {
    "text": "demo so again for automation documents you can Define input parameters and output parameters you can Define",
    "start": "861160",
    "end": "867759"
  },
  {
    "start": "862000",
    "end": "862000"
  },
  {
    "text": "defaults and again we support the ability for you to reference parameter store parameters as well as utilize",
    "start": "867759",
    "end": "874199"
  },
  {
    "text": "system variables for the automation steps that we currently support the first three",
    "start": "874199",
    "end": "880800"
  },
  {
    "text": "here are a lot like they sound right so run instances change instance State",
    "start": "880800",
    "end": "886399"
  },
  {
    "text": "create Ami fairly fundamental the real power of automation comes from run",
    "start": "886399",
    "end": "891959"
  },
  {
    "text": "command and invoke Lambda function this is where you really have the ability to",
    "start": "891959",
    "end": "897040"
  },
  {
    "text": "execute commands remotely conf figure instances or leverage the power of serverless",
    "start": "897040",
    "end": "903320"
  },
  {
    "text": "computing going forward we will be offering some public documents for your",
    "start": "903320",
    "end": "909040"
  },
  {
    "text": "reference those will include AWS update Windows Ami and AWS update Linux Ami",
    "start": "909040",
    "end": "915959"
  },
  {
    "text": "those will be more powerful versions of what we just saw today uh which is also referenced uh in the technical",
    "start": "915959",
    "end": "922360"
  },
  {
    "text": "documentation online as far as a setup for IAM you do",
    "start": "922360",
    "end": "927560"
  },
  {
    "start": "924000",
    "end": "924000"
  },
  {
    "text": "need to take a couple of steps to automation up and working you will need to create a service role like we saw in",
    "start": "927560",
    "end": "933079"
  },
  {
    "text": "the document and again that role gives the automation service the ability to execute within your account the one",
    "start": "933079",
    "end": "940480"
  },
  {
    "text": "other item you're going to need to do is set up what's called a pass roll for the user that's actually executing the",
    "start": "940480",
    "end": "947319"
  },
  {
    "text": "automation what pass roll does is it gives that user the authority to provide",
    "start": "947319",
    "end": "952600"
  },
  {
    "text": "the service role to automation finally the last item here if you do indeed use use run command",
    "start": "952600",
    "end": "960199"
  },
  {
    "text": "against any of the instances you launched you go you want to go ahead and launch those instances with an SSM roll",
    "start": "960199",
    "end": "966279"
  },
  {
    "text": "which you've likely been doing already if you've been using run command uh and again as far as",
    "start": "966279",
    "end": "971639"
  },
  {
    "start": "970000",
    "end": "970000"
  },
  {
    "text": "monitoring is concerned cloudwatch events this was based on a lot of feedback we got from customers where you know if I have automation flow and it",
    "start": "971639",
    "end": "978720"
  },
  {
    "text": "breaks halfway through and I come back to my desk two hours later I really wish i' known immediately that something went",
    "start": "978720",
    "end": "984639"
  },
  {
    "text": "wrong and so with our cloudwatch events integration here you can set it up so you can get a not notification for each",
    "start": "984639",
    "end": "990120"
  },
  {
    "text": "step in that automation flow either success or fail and then separately you can also get a notification for the",
    "start": "990120",
    "end": "995360"
  },
  {
    "text": "overall execution of the workflow all right let's move on to our second feature for today which is",
    "start": "995360",
    "end": "1004079"
  },
  {
    "text": "inventory okay so what do we hear from customers regarding inventory we heard a lot but we certainly heard consensus",
    "start": "1004079",
    "end": "1010759"
  },
  {
    "text": "around the fact that it's important to have an a crisp accurate picture of the",
    "start": "1010759",
    "end": "1016560"
  },
  {
    "text": "software inventory and configuration of your instances and this is important for a number of reasons including just",
    "start": "1016560",
    "end": "1022880"
  },
  {
    "text": "maintaining a security posture uh understanding what the patch level is on your instances or even understanding how",
    "start": "1022880",
    "end": "1029400"
  },
  {
    "text": "many uh copies of a particular uh software package you're using and measuring that against what you're",
    "start": "1029400",
    "end": "1035160"
  },
  {
    "text": "licensed to use um and again we also heard in a lot of cases uh some of the",
    "start": "1035160",
    "end": "1040400"
  },
  {
    "text": "Legacy Solutions out there aren't necessarily optimized for cloud and scalability uh as well as a lot of those",
    "start": "1040400",
    "end": "1046760"
  },
  {
    "text": "Solutions may require self-hosting uh and so there's a lot of interest in having a hosted service from",
    "start": "1046760",
    "end": "1053160"
  },
  {
    "text": "AWS all right so announcing inventory and again this ties into several of the",
    "start": "1053160",
    "end": "1058520"
  },
  {
    "text": "recurring themes around systems manager this supports endtoend inventory",
    "start": "1058520",
    "end": "1063760"
  },
  {
    "text": "collection so whether your instances are ec2 instances or they're on Prem or even",
    "start": "1063760",
    "end": "1069360"
  },
  {
    "text": "workspaces instances that was a big request to be able to track inventory on workspaces how many people are using",
    "start": "1069360",
    "end": "1075000"
  },
  {
    "text": "workspaces great okay so you can use this with workspaces as well works for both Linux and windows and of course uh",
    "start": "1075000",
    "end": "1082880"
  },
  {
    "text": "supports a powerful query which we're going to look at in the demo today it also includes an extensible inventory",
    "start": "1082880",
    "end": "1088799"
  },
  {
    "text": "schema this was another big piece of feedback from customers is you really need to let us be able to collect",
    "start": "1088799",
    "end": "1094280"
  },
  {
    "text": "whatever kind of inventory data we want from an instance or really append any metadata that's important to us whether",
    "start": "1094280",
    "end": "1100240"
  },
  {
    "text": "it resides on that instance or not so we included that capability as well and finally like everything else inventory",
    "start": "1100240",
    "end": "1106679"
  },
  {
    "text": "works with other AWS services so uh we have a diagram here that kind",
    "start": "1106679",
    "end": "1111840"
  },
  {
    "start": "1110000",
    "end": "1110000"
  },
  {
    "text": "of explains how inventory is gathered from instances and you'll see in the",
    "start": "1111840",
    "end": "1117039"
  },
  {
    "text": "center of this diagram here we have something called AWS SSM service so for those of you that work with CLI quite a",
    "start": "1117039",
    "end": "1122799"
  },
  {
    "text": "bit that's really the name space for the services particularly for run command and so the way inventory works is we",
    "start": "1122799",
    "end": "1129480"
  },
  {
    "text": "start off by creating effectively a document remember we just looked at creating an automation document",
    "start": "1129480",
    "end": "1135400"
  },
  {
    "text": "similarly we'll create a document for inventory and that document States what types of",
    "start": "1135400",
    "end": "1142280"
  },
  {
    "text": "inventory we would like to collect from an instance do we want Network information do we want application information do we want to know",
    "start": "1142280",
    "end": "1148360"
  },
  {
    "text": "information about AWS components Etc and then that document is actually sent out through what's called",
    "start": "1148360",
    "end": "1155640"
  },
  {
    "text": "an association so if you're in state manager with amjad yesterday you heard about associations basically what we do",
    "start": "1155640",
    "end": "1161240"
  },
  {
    "text": "is we select the type of inventory we want to collect we select the target instances we would like to collect",
    "start": "1161240",
    "end": "1167400"
  },
  {
    "text": "inventory from and then we select the update frequency that we would like to gather that that information do we want",
    "start": "1167400",
    "end": "1173880"
  },
  {
    "text": "it once an hour do we want it once a week so that document gets pushed out to these various instances here and that's",
    "start": "1173880",
    "end": "1182240"
  },
  {
    "text": "effectively handled by the SSM agent so we have one agent that's used for all the system manager capabilities uh and",
    "start": "1182240",
    "end": "1189039"
  },
  {
    "text": "that agent then responds back with inventory detail agent behaves in a very lightweight very efficient fashion uh",
    "start": "1189039",
    "end": "1196400"
  },
  {
    "text": "and really only reports diffs going forward over time time so there's a very very small amount of information that goes back to the store and then that",
    "start": "1196400",
    "end": "1203960"
  },
  {
    "text": "represents a snapshot a point in time picture of the inventory across your",
    "start": "1203960",
    "end": "1210120"
  },
  {
    "text": "instances now another piece of feedback we got from customers is yes I want a",
    "start": "1210120",
    "end": "1215159"
  },
  {
    "text": "point in time snapshot of the inventory of my instances but I also want a historical record I want to know how",
    "start": "1215159",
    "end": "1220679"
  },
  {
    "text": "things change over time and so this is why we built an integration with AWS",
    "start": "1220679",
    "end": "1225880"
  },
  {
    "text": "config any AWS config users out there great okay so if you're using AWS config",
    "start": "1225880",
    "end": "1232440"
  },
  {
    "text": "you can optionally select inventory as yet another resource type to track over",
    "start": "1232440",
    "end": "1238200"
  },
  {
    "text": "time uh the beauty about AWS config is that you can go back historically it's kind of like a tape recorder for a",
    "start": "1238200",
    "end": "1244159"
  },
  {
    "text": "resource type you can go back in time and see what happened when and you can",
    "start": "1244159",
    "end": "1249240"
  },
  {
    "text": "also optionally set up what are called config rules that proactively notify you",
    "start": "1249240",
    "end": "1254440"
  },
  {
    "text": "based on some kind of state that that doesn't match your intended state",
    "start": "1254440",
    "end": "1260200"
  },
  {
    "text": "all right so how do we get started with inventory this probably looks similar to how we get started with automation the",
    "start": "1260200",
    "end": "1265600"
  },
  {
    "text": "first step is we configure an inventory policy okay and then next we're going to",
    "start": "1265600",
    "end": "1270960"
  },
  {
    "text": "apply the inventory policy and finally the fun part is querying inventory so let's jump back into demo",
    "start": "1270960",
    "end": "1278400"
  },
  {
    "text": "here let me get all set up on the demo machine and switch over to",
    "start": "1278400",
    "end": "1287200"
  },
  {
    "text": "three okay so uh what I've done and let me space things out a little bit here is",
    "start": "1287200",
    "end": "1293880"
  },
  {
    "text": "we're in the managed instances view which is kind of like the dashboard for systems manager and what I'm going to do",
    "start": "1293880",
    "end": "1301000"
  },
  {
    "text": "is I'm going to set up to collect inventory from an instance I'm already collecting inventory from several other",
    "start": "1301000",
    "end": "1306880"
  },
  {
    "text": "instances so we've got this great button here we tried to make this as intuitive as possible called setup inventory so",
    "start": "1306880",
    "end": "1313559"
  },
  {
    "text": "we're going to click setup inventory and we're going to scroll down and the first selection we have is to select the",
    "start": "1313559",
    "end": "1319200"
  },
  {
    "text": "targets or instances we would like to collect inventory from and we can do that either by using a tag or by",
    "start": "1319200",
    "end": "1326880"
  },
  {
    "text": "specifying the instances individually using tags is really quite powerful because even if we were to set up this",
    "start": "1326880",
    "end": "1334320"
  },
  {
    "text": "Association now and begin collecting inventory from instances next week if I",
    "start": "1334320",
    "end": "1340000"
  },
  {
    "text": "launch a new instance with the tag I've referenced here sometime in the future",
    "start": "1340000",
    "end": "1345559"
  },
  {
    "text": "then that instance will also start reporting inventory automatically for the for the sake of",
    "start": "1345559",
    "end": "1351360"
  },
  {
    "text": "our demo today I'm going to go ahead and use an individual instance I'm going to set up inventory collection from an",
    "start": "1351360",
    "end": "1357760"
  },
  {
    "text": "instance I'm calling WS 2016 and my schedule I'm going to set up to be every",
    "start": "1357760",
    "end": "1362799"
  },
  {
    "text": "30 minutes um and then at the end here we have a variety of parameters so these parameters represent the different",
    "start": "1362799",
    "end": "1369120"
  },
  {
    "text": "inventory types I can collect so I'm going to collect applications AWS",
    "start": "1369120",
    "end": "1374480"
  },
  {
    "text": "components I'm also going to gather the network configuration detail uh this is a Windows instance so Windows",
    "start": "1374480",
    "end": "1382039"
  },
  {
    "text": "updates and then a final item called custom inventory which we're going to go into a bit more detailed in a second all",
    "start": "1382039",
    "end": "1388640"
  },
  {
    "text": "right so that looks good I can optionally have the results written to S3 if I want and I'm going to click set",
    "start": "1388640",
    "end": "1393679"
  },
  {
    "text": "up inventory so that's going to take about five minutes to get going so I'm going to fast forward to some other",
    "start": "1393679",
    "end": "1400000"
  },
  {
    "text": "instances that have already been reporting inventory so let's go ahead and look at those so I'm going to jump down I'm going to click on this instance",
    "start": "1400000",
    "end": "1406000"
  },
  {
    "text": "called AWS Linux and here we go again uh and I'm going to",
    "start": "1406000",
    "end": "1411679"
  },
  {
    "text": "click on inventory and I can see I have some inventory data here so here",
    "start": "1411679",
    "end": "1418159"
  },
  {
    "text": "are dictionary quit that's okay because I don't need the dictionary all right so I have different inventory types I can",
    "start": "1418159",
    "end": "1425039"
  },
  {
    "text": "filter by right now I'm filtering by application so let's say I want to know if this instance is running python or",
    "start": "1425039",
    "end": "1431039"
  },
  {
    "text": "not I can go in here I can select the application name and I can say begins",
    "start": "1431039",
    "end": "1436760"
  },
  {
    "text": "with and I'm going to type in py and I can see in fact that this instance is running Python",
    "start": "1436760",
    "end": "1443880"
  },
  {
    "text": "2.7 so right now I'm doing in I'm doing searches at the instance level um I",
    "start": "1443880",
    "end": "1450600"
  },
  {
    "text": "decided I wanted to have a little bit of fun here today to illustrate custom information and so uh before the session",
    "start": "1450600",
    "end": "1459600"
  },
  {
    "text": "here uh where did I put it uh must be on the wrong instance okay so I'm going to keep moving here I'm going to scroll",
    "start": "1459600",
    "end": "1465480"
  },
  {
    "text": "down to my next instance here which I have haven't labeled but this instance happens to",
    "start": "1465480",
    "end": "1471919"
  },
  {
    "text": "be oh I'm sorry you know what I need to clear out my",
    "start": "1471919",
    "end": "1477320"
  },
  {
    "text": "filter there we go all right thank you I've now cleared the filter I was clear I was filtering by python earlier so in",
    "start": "1481320",
    "end": "1488480"
  },
  {
    "text": "this case here I'm looking at an instance that is a workspaces instance",
    "start": "1488480",
    "end": "1494000"
  },
  {
    "text": "okay so now I'm looking at the application on that workspaces instance the way I set it up up is I used an",
    "start": "1494000",
    "end": "1501080"
  },
  {
    "text": "activation so the same process by which I would activate an on premise instance I used to uh activate this workspaces",
    "start": "1501080",
    "end": "1508200"
  },
  {
    "text": "instance I'm going to go back to my Linux instance here and see if I can filter by other inventory types here and",
    "start": "1508200",
    "end": "1513480"
  },
  {
    "text": "see if I can pull up speaker rating ah okay there it is so this is an example here with",
    "start": "1513480",
    "end": "1519679"
  },
  {
    "text": "speaker rating I decid to have a little fun and just create an arbitrary inventory attribute here and the way",
    "start": "1519679",
    "end": "1525360"
  },
  {
    "text": "that I did this is I basically used the put inventory API and I uploaded a Json",
    "start": "1525360",
    "end": "1531480"
  },
  {
    "text": "object in this case here uh I gave omj and myself a speaker rating so uh rated",
    "start": "1531480",
    "end": "1537520"
  },
  {
    "text": "this as the best session ever uh with a rating of Excellence so I hope you agree yeah there we go thanks all right",
    "start": "1537520",
    "end": "1545600"
  },
  {
    "text": "so let's keep searching here and expand our query Beyond just the instance level to all the instances that are in our",
    "start": "1545600",
    "end": "1552600"
  },
  {
    "text": "managed instance list here so I'm going to unclick this and I'm going to go up here and I'm going to do a search by",
    "start": "1552600",
    "end": "1558960"
  },
  {
    "text": "name for all instances let's say that have uh I don't know",
    "start": "1558960",
    "end": "1566399"
  },
  {
    "text": "microsoft.net on them okay so it turns out that three of my instances have",
    "start": "1566399",
    "end": "1571559"
  },
  {
    "text": "microsoft.net on them and if I wanted to I could go ahead and click on any one of those um but let's say my organization",
    "start": "1571559",
    "end": "1577960"
  },
  {
    "text": "has decided that we wanted to move uh we wanted to move uh microsoft.net we want to standardize on",
    "start": "1577960",
    "end": "1583960"
  },
  {
    "text": "4.6 so we want to go out and find all instances that are running something less than 4.6 so I can continue to uh",
    "start": "1583960",
    "end": "1590559"
  },
  {
    "text": "build out my query here and I can jump into uh well application version and I",
    "start": "1590559",
    "end": "1597399"
  },
  {
    "text": "want to see all instances that are less than 4.6 and I'm going to run my query it turns out it's the same lot of instances",
    "start": "1597399",
    "end": "1604039"
  },
  {
    "text": "so let's go ahead and click on one of these instances and I'm going to go to the application view",
    "start": "1604039",
    "end": "1611000"
  },
  {
    "text": "here uh excuse me and I'm going to scroll down and I can see yes here it is microsoft.net framework is running 4.5",
    "start": "1611000",
    "end": "1618760"
  },
  {
    "text": "so effectively what we've done is we've used inventory to go out and identify a set of instances that are that need some",
    "start": "1618760",
    "end": "1625200"
  },
  {
    "text": "form of remediation and then the ensuing step would us would be for us to go ahead and use run command we could use",
    "start": "1625200",
    "end": "1631279"
  },
  {
    "text": "the upstate update application document or we could use State manager to go ahead and bump these to",
    "start": "1631279",
    "end": "1638760"
  },
  {
    "text": "4.6 one other thing I'd like to show really quickly here and I'm struggling",
    "start": "1638760",
    "end": "1645840"
  },
  {
    "text": "please hold your Mac MacBook jokes I'm going to go back to my Linux",
    "start": "1645840",
    "end": "1651760"
  },
  {
    "text": "instance here over in the right hand column is a cool icon which is our AWS",
    "start": "1651760",
    "end": "1656840"
  },
  {
    "text": "config timeline icon so I'm going to go ahead and click on that and this is going to take me over to AWS config",
    "start": "1656840",
    "end": "1663600"
  },
  {
    "text": "remember we had some folks who are using this right now the reason we're looking at AWS config is because we're interested in historical record of",
    "start": "1663600",
    "end": "1670480"
  },
  {
    "text": "what's happened to this instance here and remember we're feeding AWS config inventory data so we can see on November",
    "start": "1670480",
    "end": "1677159"
  },
  {
    "text": "22nd there were actually seven changes to this instance that related to inventory",
    "start": "1677159",
    "end": "1683760"
  },
  {
    "text": "so if I click on those I can actually see on this date I happen to uh install",
    "start": "1683760",
    "end": "1688799"
  },
  {
    "text": "MySQL and engine X on this instance here so not only do we have a snapshot point",
    "start": "1688799",
    "end": "1694600"
  },
  {
    "text": "in time when it comes to inventory but we can also look at a historical record as well all right I'm going to jump back",
    "start": "1694600",
    "end": "1701519"
  },
  {
    "text": "into the presentation here grab my Clicker",
    "start": "1701519",
    "end": "1708880"
  },
  {
    "start": "1708000",
    "end": "1708000"
  },
  {
    "text": "okay so just to summarize what we saw in the demo here we want to create an inventory Association Three core",
    "start": "1708880",
    "end": "1715200"
  },
  {
    "text": "elements we got to select our T our targets we're going to select the frequency that we would like to gather",
    "start": "1715200",
    "end": "1720799"
  },
  {
    "text": "inventory at and then finally the inventory types including applications thats components network configuration",
    "start": "1720799",
    "end": "1727519"
  },
  {
    "text": "Windows updates and custom inventory and again when it comes to custom inventory you can record whatever",
    "start": "1727519",
    "end": "1734000"
  },
  {
    "start": "1729000",
    "end": "1729000"
  },
  {
    "text": "you want whether these are attributes that are on the instance that you would like to extract things like bios or",
    "start": "1734000",
    "end": "1739960"
  },
  {
    "text": "firewall settings or if there are things that you've been maintaining in a spreadsheet so for example if you have on premise instances and you've been",
    "start": "1739960",
    "end": "1746600"
  },
  {
    "text": "maintaining rack location or in service date or whatever you can also push those to the inventory store so the two",
    "start": "1746600",
    "end": "1752799"
  },
  {
    "text": "methods for adding items to inventory either include directly from the instance itself what's going to happen",
    "start": "1752799",
    "end": "1759919"
  },
  {
    "text": "is that the agent is going to look in a predefined directory it's going to look in a specific path it's going to look",
    "start": "1759919",
    "end": "1766360"
  },
  {
    "text": "for Json files there and if it finds them it's going to upload them to the",
    "start": "1766360",
    "end": "1771399"
  },
  {
    "text": "inventory records for that instance so uh the way you could do that for example is you could write some kind of",
    "start": "1771399",
    "end": "1776960"
  },
  {
    "text": "scheduled task or a Cron job if these are attributes that are changing that",
    "start": "1776960",
    "end": "1782080"
  },
  {
    "text": "would continuously update those Json files in that directory and that's then going to get passed on by the agent to",
    "start": "1782080",
    "end": "1787720"
  },
  {
    "text": "the inventory store alternately if you want to you can use the put inventory API to go ahead and upload that detail",
    "start": "1787720",
    "end": "1795039"
  },
  {
    "text": "as well queries we just look at you can query by inventory attribute you can do",
    "start": "1795039",
    "end": "1800679"
  },
  {
    "start": "1796000",
    "end": "1796000"
  },
  {
    "text": "partial and inverse searches and you can do uh more elaborate filters if you want to you can string them together so for",
    "start": "1800679",
    "end": "1806519"
  },
  {
    "text": "example if you wanted to look for all instances running 2012 Windows 2012 R2",
    "start": "1806519",
    "end": "1811799"
  },
  {
    "text": "that also featured SQL Server 2016 that were missing a particular Windows update",
    "start": "1811799",
    "end": "1817559"
  },
  {
    "text": "KB 1123 42 you could actually build out a fe a filter like that and then",
    "start": "1817559",
    "end": "1823360"
  },
  {
    "text": "identify instances in needed some form of remediation and then finally to summarize when when it comes to our",
    "start": "1823360",
    "end": "1828519"
  },
  {
    "text": "integration with AWS config allowing you to record inventory changes over time",
    "start": "1828519",
    "end": "1834240"
  },
  {
    "text": "you can use AWS config rules to monitor changes and proactively notify you really helping you to meet compliance",
    "start": "1834240",
    "end": "1840760"
  },
  {
    "text": "and government mandates all right with that I'm going to turn it over to amjad Hussein to cover patch manager thank you thank you",
    "start": "1840760",
    "end": "1848679"
  },
  {
    "text": "Taylor just give me one second all right so Taylor walked us",
    "start": "1848679",
    "end": "1856240"
  },
  {
    "text": "through automation and uh inventory and you saw how you can use some of these",
    "start": "1856240",
    "end": "1861919"
  },
  {
    "text": "new capabilities in systems manager to uh automate your Amy creation or Amy buildout process uh and you can use",
    "start": "1861919",
    "end": "1868960"
  },
  {
    "text": "inventory to collect software information and do querying and all that kind of stuff the the thing I wanted to",
    "start": "1868960",
    "end": "1874039"
  },
  {
    "text": "spend some time on was patch manager and specifically Windows patching so one of",
    "start": "1874039",
    "end": "1879399"
  },
  {
    "text": "the things that you know we talk to a lot of customers who are using Windows workloads and windows Enterprise workloads and one of the common themes",
    "start": "1879399",
    "end": "1885880"
  },
  {
    "text": "that we keep hearing is that patching windows at scale is um you know is a",
    "start": "1885880",
    "end": "1892399"
  },
  {
    "text": "manual process it's Error prone and there there and it's a critical part",
    "start": "1892399",
    "end": "1897760"
  },
  {
    "text": "right because getting uh getting security updates on time is a key part of keeping your instances and your Fleet",
    "start": "1897760",
    "end": "1905120"
  },
  {
    "text": "in a healthy state so like I said not just from a security perspective but",
    "start": "1905120",
    "end": "1910960"
  },
  {
    "text": "from a compliance and uh and from a um compliance and downtime perspective",
    "start": "1910960",
    "end": "1916360"
  },
  {
    "text": "having systems be patched is is important and that is why we are announcing as part of systems manager uh",
    "start": "1916360",
    "end": "1923559"
  },
  {
    "text": "P patch manager what what with patch manager what you can do is you can simplify endtoend patching of your",
    "start": "1923559",
    "end": "1929840"
  },
  {
    "text": "windows um instances it it's easy to automate because it uses a lot of the",
    "start": "1929840",
    "end": "1934880"
  },
  {
    "text": "same building blocks that we've been talking about so far in terms of systems manager and just like inventory in",
    "start": "1934880",
    "end": "1941200"
  },
  {
    "text": "Automation and run command and state manager uh patch manager is also integrated with other AWS services cloud",
    "start": "1941200",
    "end": "1948360"
  },
  {
    "text": "trail Cloud watch events and things that we've talked about in the past the one sort of point of clarification so so far",
    "start": "1948360",
    "end": "1954799"
  },
  {
    "text": "everything we've talked about works on uh windows and Linux run command",
    "start": "1954799",
    "end": "1960440"
  },
  {
    "text": "inventory automation the the uh patch manager itself is a Windows only release",
    "start": "1960440",
    "end": "1967639"
  },
  {
    "text": "this is our first release and we're going to focus on Windows uh however it does work across ec2 and on-prem",
    "start": "1967639",
    "end": "1974519"
  },
  {
    "text": "instances so that's patch manager introduction to get started",
    "start": "1974519",
    "end": "1980200"
  },
  {
    "start": "1977000",
    "end": "1977000"
  },
  {
    "text": "the um you can sort of mentally break it down into three phases if you will the",
    "start": "1980200",
    "end": "1985600"
  },
  {
    "text": "first thing you want to do is you create a patch Baseline and really the point the the the the thinking behind a",
    "start": "1985600",
    "end": "1991600"
  },
  {
    "text": "baseline is that it's how you get to Define your selection criteria right so",
    "start": "1991600",
    "end": "1996919"
  },
  {
    "text": "you figure out what are the patches that you want in this Baseline once you've created baseline or Bas lines what you",
    "start": "1996919",
    "end": "2003120"
  },
  {
    "text": "can then do is you can use maintenance window which we'll talk about in a bit to schedule uh to schedule the patching",
    "start": "2003120",
    "end": "2010480"
  },
  {
    "text": "on a regular or on on some Cadence that you want to patch your systems in and then once you have scheduled the the",
    "start": "2010480",
    "end": "2017639"
  },
  {
    "text": "Baseline with a maintenance window the last step is to actually execute and then view the results and that's where",
    "start": "2017639",
    "end": "2023559"
  },
  {
    "text": "we have the patch compliance set of apis that will let you view the results of your patching so for example using patch",
    "start": "2023559",
    "end": "2030440"
  },
  {
    "text": "compliance you can do things like what percentage or how many uh instances from",
    "start": "2030440",
    "end": "2035480"
  },
  {
    "text": "from my fleet do not have this are not in compliance with this Baseline so",
    "start": "2035480",
    "end": "2040679"
  },
  {
    "text": "that's a quick introduction or how do you get started with patch manager the next slide it just it's just",
    "start": "2040679",
    "end": "2046519"
  },
  {
    "start": "2045000",
    "end": "2045000"
  },
  {
    "text": "a more sort of a UI uh way of representing the same information really you start out with a baseline so on the",
    "start": "2046519",
    "end": "2052320"
  },
  {
    "text": "top of the on the top of the slide there's a Baseline and you can see here I'm saying include everything that is",
    "start": "2052320",
    "end": "2058200"
  },
  {
    "text": "critical or high priority from a classification from a patch classification perspective and then you",
    "start": "2058200",
    "end": "2063839"
  },
  {
    "text": "can also do a Time based filter you know because sometimes you might want patches that have already been out there for a",
    "start": "2063839",
    "end": "2069679"
  },
  {
    "text": "while so you can say only pick up patches that meet meet that criteria after they've been published for 5 days",
    "start": "2069679",
    "end": "2076240"
  },
  {
    "text": "so that's a baseline the next step is scheduling the action or the task in a maintenance window maintenance window as",
    "start": "2076240",
    "end": "2083200"
  },
  {
    "text": "you'd expect is essentially a recurring schedule so you can say every Sunday or every Saturday between 12: to 3:00 a.m.",
    "start": "2083200",
    "end": "2090118"
  },
  {
    "text": "I want to schedule my patches and you get to Define how long that duration is",
    "start": "2090119",
    "end": "2095599"
  },
  {
    "text": "as well as how how long after after the duration starts or that period time period starts you want to stop uh",
    "start": "2095599",
    "end": "2102280"
  },
  {
    "text": "scheduling more actions so that's a maintenance window and then the last part like I said before is the",
    "start": "2102280",
    "end": "2108359"
  },
  {
    "text": "compliance where you can get some this sort of Consolidated view around how many uh instances are up to date how",
    "start": "2108359",
    "end": "2113839"
  },
  {
    "text": "many are missing uh patches and what are the specific instances that are missing so that you can take remediation steps",
    "start": "2113839",
    "end": "2120480"
  },
  {
    "text": "such as maybe taking it out of load balancer or something else okay so let's go into let's spend a",
    "start": "2120480",
    "end": "2128160"
  },
  {
    "start": "2125000",
    "end": "2125000"
  },
  {
    "text": "little more time going into the details of each of these Concepts a baseline a maintenance window and the compliance side of things so with a baseline like I",
    "start": "2128160",
    "end": "2135480"
  },
  {
    "text": "said before essentially a rules criteria so you can do things like this is only applicable for Windows",
    "start": "2135480",
    "end": "2142160"
  },
  {
    "text": "Server 2012 R2 and the classification is critical or severe or whatever the",
    "start": "2142160",
    "end": "2148760"
  },
  {
    "text": "classification that you want and there's a Time approval process so some companies and some customers that we",
    "start": "2148760",
    "end": "2155119"
  },
  {
    "text": "talk to say that look sometimes you want to vet or test the stability of a patch before we actually roll it out",
    "start": "2155119",
    "end": "2160880"
  },
  {
    "text": "especially to our production servers so you could have uh a baseline that says something like you know wait 15 days or",
    "start": "2160880",
    "end": "2168319"
  },
  {
    "text": "30 days after would that be too long but yeah you could pick some time period after um after it's been uh published to",
    "start": "2168319",
    "end": "2174960"
  },
  {
    "text": "have it included in the Baseline so that's your selection criteria uh you also have explicit approved or reject",
    "start": "2174960",
    "end": "2182400"
  },
  {
    "text": "lists so you can say that these are my rules but then in addition to that I",
    "start": "2182400",
    "end": "2187640"
  },
  {
    "text": "want to make sure that this specific KB or this specific list of uh patches are always included similarly if there is a",
    "start": "2187640",
    "end": "2194720"
  },
  {
    "text": "patch that you know does not work or you have not tested the compatibility of you can reject it so that's the re reject or",
    "start": "2194720",
    "end": "2201680"
  },
  {
    "text": "disallow list if you will and the last thing is that you have to register or",
    "start": "2201680",
    "end": "2207720"
  },
  {
    "text": "you have to tell us what uh groups of instances are part of that Baseline and",
    "start": "2207720",
    "end": "2213680"
  },
  {
    "text": "the way you and the way you do that is something called a patch group and a patch group is simply a tag with the key",
    "start": "2213680",
    "end": "2221680"
  },
  {
    "text": "equals patch group right so using this sort of grouping mechanism what you can do is you can prepare your instances and",
    "start": "2221680",
    "end": "2228520"
  },
  {
    "text": "everything that has a key equals patch group you can give it a specific value like my database servers or my web",
    "start": "2228520",
    "end": "2235160"
  },
  {
    "text": "servers or my pre-pro environment or something like that and that's it once you get once you",
    "start": "2235160",
    "end": "2241119"
  },
  {
    "text": "get this setup you can basically create a bunch of baselines partitioned by your Fleet so you can have a pre-pro and a",
    "start": "2241119",
    "end": "2247960"
  },
  {
    "text": "web server and a back end for example uh and you can have specific rules and filtering criteria that are defined and",
    "start": "2247960",
    "end": "2253880"
  },
  {
    "text": "captured in the Baseline let's spend some time on",
    "start": "2253880",
    "end": "2259440"
  },
  {
    "start": "2256000",
    "end": "2256000"
  },
  {
    "text": "maintenance window the first thing I want to talk about maintenance window is it's actually a a generic concept it is",
    "start": "2259440",
    "end": "2265960"
  },
  {
    "text": "heavily used by patch manager but maintenance window like Taylor was saying at the beginning of the talk is a",
    "start": "2265960",
    "end": "2271480"
  },
  {
    "text": "shared capability across systems manager so you can certainly use it for in the",
    "start": "2271480",
    "end": "2276839"
  },
  {
    "text": "in the in the cont of patching but you can also use it in the context of any other repeatable sort of task that you",
    "start": "2276839",
    "end": "2283480"
  },
  {
    "text": "want to perform and um the the way patching uses it is there is a",
    "start": "2283480",
    "end": "2290560"
  },
  {
    "text": "predefined uh run command document called an AWS D apply patch Baseline and",
    "start": "2290560",
    "end": "2296359"
  },
  {
    "text": "using this document we Trigger or we signal the fleet to say that okay please",
    "start": "2296359",
    "end": "2301560"
  },
  {
    "text": "go ahead and update yourself and here is the baseline or here are the rules that you're going to follow to update",
    "start": "2301560",
    "end": "2307079"
  },
  {
    "text": "yourself so that's a maintenance",
    "start": "2307079",
    "end": "2311800"
  },
  {
    "start": "2311000",
    "end": "2311000"
  },
  {
    "text": "window we already covered this the only new thing here is once you have set up your maintenance window when the",
    "start": "2312440",
    "end": "2318680"
  },
  {
    "text": "maintenance window period comes the maintenance window service will schedule the the action in this case is going to",
    "start": "2318680",
    "end": "2325280"
  },
  {
    "text": "apply the patches and then it's going to report back that information back to the patching service and then you can use",
    "start": "2325280",
    "end": "2330880"
  },
  {
    "text": "the compliance apis to view the results speaking of patch compliance",
    "start": "2330880",
    "end": "2338000"
  },
  {
    "start": "2335000",
    "end": "2335000"
  },
  {
    "text": "like I said before it's a fleetwide summary of your uh patch status and",
    "start": "2338000",
    "end": "2343920"
  },
  {
    "text": "there is a dashboard that shows the count of compliant and non-compliant instances okay so let's get to a",
    "start": "2343920",
    "end": "2353599"
  },
  {
    "text": "demo okay so I have a mixture of both CLI and the console Taylor already",
    "start": "2357079",
    "end": "2363720"
  },
  {
    "text": "showed you some of the key aspects of the uh of the system manager UI what I'm going to focus more on are maintenance",
    "start": "2363720",
    "end": "2371359"
  },
  {
    "text": "windows and then we'll spend some time on some of the patch related activities so let's switch first",
    "start": "2371359",
    "end": "2378280"
  },
  {
    "text": "to the CLI um all system manager apis that",
    "start": "2378280",
    "end": "2385480"
  },
  {
    "text": "we've talked about today as well as yesterday are in the SSM Nam space so the way you run a command is uh from the",
    "start": "2385480",
    "end": "2393200"
  },
  {
    "text": "AWS CLI is you would just do AWS SSM and then the API name that you want to call so in",
    "start": "2393200",
    "end": "2400520"
  },
  {
    "text": "this case I'm going to run a command or a CLI that says describe my maintenance windows in this case you can see I have",
    "start": "2400520",
    "end": "2407640"
  },
  {
    "text": "already created a maintenance window its duration is one is 2 hours and it stops",
    "start": "2407640",
    "end": "2413040"
  },
  {
    "text": "1 hour into the schedule it has a window ID so you can uniquely identify the maintenance window it is currently set",
    "start": "2413040",
    "end": "2420000"
  },
  {
    "text": "to enabled and I have given it a friendly name and here's an example of",
    "start": "2420000",
    "end": "2425280"
  },
  {
    "text": "how from a CLI you actually create a maintenance window you can see I gave it a name uh there is a schedule which can",
    "start": "2425280",
    "end": "2432200"
  },
  {
    "text": "be expressed as a cron expression or a rate expression so in this case I have selected a rate expression so it this",
    "start": "2432200",
    "end": "2440400"
  },
  {
    "text": "maintenance window fires every 1 hour there's a duration and cut off like we talked about and there is a uh par",
    "start": "2440400",
    "end": "2448720"
  },
  {
    "text": "there's another parameter to let you create the maintenance window without a patch group or a group assigned to",
    "start": "2448720",
    "end": "2455520"
  },
  {
    "text": "it you can also up update a maintenance window so you can change its schedule or",
    "start": "2455520",
    "end": "2460599"
  },
  {
    "text": "other attributes and you can delete a maintenance window let's call this get maintenance",
    "start": "2460599",
    "end": "2466960"
  },
  {
    "text": "window API that's going to show us more details about the specifics of the maintenance",
    "start": "2466960",
    "end": "2474359"
  },
  {
    "text": "window once you've created a maintenance window it that action or that act on its",
    "start": "2475280",
    "end": "2480480"
  },
  {
    "text": "own doesn't actually do anything it's just a schedule and there's nothing that you've specified around what to do when",
    "start": "2480480",
    "end": "2486720"
  },
  {
    "text": "that happens so once you've created the maintenance window you have to do two additional things you have to register a task and",
    "start": "2486720",
    "end": "2493319"
  },
  {
    "text": "you have to register a Target so the way you do that is you can see right here I",
    "start": "2493319",
    "end": "2499119"
  },
  {
    "text": "am calling register Target with maintenance window with this API what I can do is I can give the maintenance",
    "start": "2499119",
    "end": "2506160"
  },
  {
    "text": "window that I want a specific Target so that it knows where does it",
    "start": "2506160",
    "end": "2512319"
  },
  {
    "text": "need to perform that action once I've done that I can also do I also also have",
    "start": "2512319",
    "end": "2517480"
  },
  {
    "text": "to register a specific task the task is what to do so using these three concepts",
    "start": "2517480",
    "end": "2522839"
  },
  {
    "text": "the maintenance window the Target and the task it now maintenance window now has all the information it needs to",
    "start": "2522839",
    "end": "2529200"
  },
  {
    "text": "actually complete The Binding so every hour in this case what it's going to do is it's going to call run command if",
    "start": "2529200",
    "end": "2535319"
  },
  {
    "text": "I'll show you right here so you can see here every hour I'm just going to call",
    "start": "2535319",
    "end": "2542119"
  },
  {
    "text": "run Powershell script and I'm just going to run a simple ip config command that's",
    "start": "2542119",
    "end": "2548960"
  },
  {
    "text": "it so let's look at the UI and see how it looks like now so I already created the maintenance",
    "start": "2548960",
    "end": "2555720"
  },
  {
    "text": "window that I just showed you you can see it has a couple of tasks that I've",
    "start": "2555720",
    "end": "2561240"
  },
  {
    "text": "registered and it has a Target so it always binds to this or Targets this",
    "start": "2561240",
    "end": "2567200"
  },
  {
    "text": "instance and if you look at the history you'll see that ever since I created this maintenance window every hour it",
    "start": "2567200",
    "end": "2573160"
  },
  {
    "text": "has been running and executing the same Command right let's pick one of them",
    "start": "2573160",
    "end": "2579119"
  },
  {
    "text": "once you drill down into the execution history of a particular run you can then see what tasks were performed during",
    "start": "2580040",
    "end": "2586960"
  },
  {
    "text": "that maintenance window you can click on one of them and you can see even more information like it in this case because",
    "start": "2586960",
    "end": "2595200"
  },
  {
    "text": "it was a run Command action it actually kicks you off to the Run command console where you can go ahead and get all sorts",
    "start": "2595200",
    "end": "2601559"
  },
  {
    "text": "of information like what exactly happened you know in this case I ran ip config so it gives give me that",
    "start": "2601559",
    "end": "2606839"
  },
  {
    "text": "information okay so that's a simple uh demo of how",
    "start": "2606839",
    "end": "2613000"
  },
  {
    "text": "do you just get started with a maintenance window the second thing I wanted to show you is how do I how do I",
    "start": "2613000",
    "end": "2619720"
  },
  {
    "text": "Stitch all this together with uh with patching right how do I how do I bring",
    "start": "2619720",
    "end": "2624800"
  },
  {
    "text": "the scenario together and the way you do that is you start by creating a baseline",
    "start": "2624800",
    "end": "2630280"
  },
  {
    "text": "so right here I'm going to create a simple Baseline and let's just walk through it",
    "start": "2630280",
    "end": "2637160"
  },
  {
    "text": "just so we understand what we're doing here we're creating a patch Baseline and I'm giving it a name my important",
    "start": "2637160",
    "end": "2642839"
  },
  {
    "text": "patches and I'm giving it a bunch of approval rules these are the selection",
    "start": "2642839",
    "end": "2647920"
  },
  {
    "text": "criteria that we talked about before and in this case you can see that I want everything that is classified as",
    "start": "2647920",
    "end": "2653599"
  },
  {
    "text": "important or critical where the product is Windows Server 2012 R2 and I want to approve it",
    "start": "2653599",
    "end": "2661240"
  },
  {
    "text": "after 5 days after 5 days of the patch being published and I give it some friendly",
    "start": "2661240",
    "end": "2668520"
  },
  {
    "text": "description uh and now I can go ahead and describe my patch Bas lines so you",
    "start": "2668520",
    "end": "2673640"
  },
  {
    "text": "can see here that Amazon publishes a default patch Baseline just so you can get",
    "start": "2673640",
    "end": "2679920"
  },
  {
    "text": "started very quickly and uh for the default patch Baseline we have a set of",
    "start": "2679920",
    "end": "2684960"
  },
  {
    "text": "selection criteria that we've already picked for you like critical and important and things like that",
    "start": "2684960",
    "end": "2691839"
  },
  {
    "text": "um once you once you've set up your baseline or you're re you are re using",
    "start": "2691839",
    "end": "2697319"
  },
  {
    "text": "our existing Baseline you can register",
    "start": "2697319",
    "end": "2703318"
  },
  {
    "text": "the you can register the Baseline with a maintenance window and you do that by",
    "start": "2703400",
    "end": "2708760"
  },
  {
    "text": "using the same way that I just showed you where I was running the IP config command you run a command that says",
    "start": "2708760",
    "end": "2714400"
  },
  {
    "text": "register task with maintenance window give it the maintenance window and you give it the uh patch Baseline document",
    "start": "2714400",
    "end": "2723520"
  },
  {
    "text": "remember the AWS patch Baseline that we talked about once you've done that you can do a describe call on the",
    "start": "2723520",
    "end": "2729920"
  },
  {
    "text": "maintenance window task and you will see what are the specifics of the",
    "start": "2729920",
    "end": "2734960"
  },
  {
    "text": "maintenance window so for example let's just go through",
    "start": "2734960",
    "end": "2739200"
  },
  {
    "text": "this this main uh this maintenance window task has IP config which we just",
    "start": "2742280",
    "end": "2748480"
  },
  {
    "text": "set up and it has another task registered which is your patch Baseline",
    "start": "2748480",
    "end": "2753839"
  },
  {
    "text": "right here so you can see I'm applying my patch Baseline and uh the target is the same instance",
    "start": "2753839",
    "end": "2761359"
  },
  {
    "text": "that I had selected before and that's it once you do this once you have a baseline once you've set up your",
    "start": "2761359",
    "end": "2766400"
  },
  {
    "text": "maintenance window uh we're just going to go ahead and update your instances when the recurring uh schedule happens",
    "start": "2766400",
    "end": "2773680"
  },
  {
    "text": "to find out what the results were from a compliance perspective or a results perspective you can use the patch",
    "start": "2773680",
    "end": "2781319"
  },
  {
    "text": "compliance apis that I talked about so for example let's run through a few of them this this one says describe in inst",
    "start": "2781319",
    "end": "2787359"
  },
  {
    "text": "patches so for a given instance tells tell me what are all the patches that",
    "start": "2787359",
    "end": "2792520"
  },
  {
    "text": "were not applicable so I can even do things like were there any patches that I should have installed that I maybe",
    "start": "2792520",
    "end": "2798480"
  },
  {
    "text": "missed because my rule selection criteria was uh not correctly tuned so you can see here that yes there were a",
    "start": "2798480",
    "end": "2804520"
  },
  {
    "text": "bunch of patches on this instance that were deemed to be uh not comp uh",
    "start": "2804520",
    "end": "2810280"
  },
  {
    "text": "applicable similarly you can run another one that says show me all the ones that",
    "start": "2810280",
    "end": "2815480"
  },
  {
    "text": "were installed on this uh instance and it'll actually show you all the specific updates that have been applied you can",
    "start": "2815480",
    "end": "2821640"
  },
  {
    "text": "get more information on this these as well I can also run a query that says what are all the patches that are",
    "start": "2821640",
    "end": "2826680"
  },
  {
    "text": "missing so you can do something like describe instance patches with Filter as",
    "start": "2826680",
    "end": "2832000"
  },
  {
    "text": "patches that are missing in this case you can see that I actually have a critical update that's missing on this instance and then I can take some",
    "start": "2832000",
    "end": "2837920"
  },
  {
    "text": "remediation steps like either update my baseline or use run command to do an ad",
    "start": "2837920",
    "end": "2843000"
  },
  {
    "text": "hoc uh patch on that instance and with that I will we're almost done",
    "start": "2843000",
    "end": "2849960"
  },
  {
    "text": "let me just switch back to the UI and the last thing I wanted to show you was",
    "start": "2849960",
    "end": "2855160"
  },
  {
    "text": "if you look at the maintenance window history and let's go back to one",
    "start": "2855160",
    "end": "2862960"
  },
  {
    "text": "of the runs that we did you remember how there were two of these and I didn't actually go and expand this let's just go ahead and expand this and you can see",
    "start": "2862960",
    "end": "2869559"
  },
  {
    "text": "that right here it shows up right so for this maintenance window I have registered both the Run Command action",
    "start": "2869559",
    "end": "2876319"
  },
  {
    "text": "which was just running an arbitrary Powershell script as well as my patch Baseline so with this uh so just to",
    "start": "2876319",
    "end": "2884559"
  },
  {
    "text": "recap patch manager is uh an endtoend automated way for you to patch your",
    "start": "2884559",
    "end": "2890359"
  },
  {
    "text": "windows instances it uses a baseline concept that lets you define your rules and selection criteria there's a",
    "start": "2890359",
    "end": "2896800"
  },
  {
    "text": "reusable maintenance window that helps you schedule things and then there is the compliance side of things where you",
    "start": "2896800",
    "end": "2902480"
  },
  {
    "text": "can view and report on patches that are installed or missing uh patch manager will be",
    "start": "2902480",
    "end": "2908640"
  },
  {
    "text": "available soon system the rest of system manager that we talked about is already GA so you can use it automation",
    "start": "2908640",
    "end": "2915240"
  },
  {
    "text": "inventory run command all that uh patch manager for Windows is coming very soon",
    "start": "2915240",
    "end": "2920359"
  },
  {
    "text": "all right so with that thank you and what we'll do is we will uh you know people who have questions or want to",
    "start": "2920359",
    "end": "2926319"
  },
  {
    "text": "have deeper discussions just come on over we have another person from the product team as well uh so we'll be happy to get feedback and have deeper",
    "start": "2926319",
    "end": "2933760"
  },
  {
    "text": "discussions thank you [Applause]",
    "start": "2933760",
    "end": "2941119"
  },
  {
    "text": "hi",
    "start": "2941119",
    "end": "2943279"
  }
]