[
  {
    "start": "0",
    "end": "52000"
  },
  {
    "text": "my name's James Bezeq I'm a senior",
    "start": "0",
    "end": "2310"
  },
  {
    "text": "developer advocate here at AWS service",
    "start": "2310",
    "end": "4770"
  },
  {
    "text": "this series is about the s3 2 lambda",
    "start": "4770",
    "end": "7290"
  },
  {
    "text": "serverless design pattern and how can",
    "start": "7290",
    "end": "9630"
  },
  {
    "text": "become a flexible core for your service",
    "start": "9630",
    "end": "11670"
  },
  {
    "text": "applications this video shows how you",
    "start": "11670",
    "end": "14309"
  },
  {
    "text": "can bring automated natural language",
    "start": "14309",
    "end": "16170"
  },
  {
    "text": "translation into your applications with",
    "start": "16170",
    "end": "18539"
  },
  {
    "text": "minimal code this solution uses Amazon",
    "start": "18539",
    "end": "21410"
  },
  {
    "text": "Translate to automatically convert",
    "start": "21410",
    "end": "23609"
  },
  {
    "text": "between dozens of different languages",
    "start": "23609",
    "end": "25640"
  },
  {
    "text": "this can be useful for many applications",
    "start": "25640",
    "end": "27840"
  },
  {
    "text": "for example for public websites you",
    "start": "27840",
    "end": "30660"
  },
  {
    "text": "could translate dynamic content like",
    "start": "30660",
    "end": "32398"
  },
  {
    "text": "product pages for international visitors",
    "start": "32399",
    "end": "34190"
  },
  {
    "text": "or if you build mobile applications you",
    "start": "34190",
    "end": "37230"
  },
  {
    "text": "could translate resource files when new",
    "start": "37230",
    "end": "39149"
  },
  {
    "text": "builds of your software are available if",
    "start": "39149",
    "end": "41040"
  },
  {
    "text": "you have customer support channels",
    "start": "41040",
    "end": "43020"
  },
  {
    "text": "across different languages you could use",
    "start": "43020",
    "end": "45030"
  },
  {
    "text": "this approach to translate back to a",
    "start": "45030",
    "end": "46980"
  },
  {
    "text": "common language let's look at how this",
    "start": "46980",
    "end": "49350"
  },
  {
    "text": "works so the first thing I'm going to do",
    "start": "49350",
    "end": "54480"
  },
  {
    "start": "52000",
    "end": "352000"
  },
  {
    "text": "is get clone my code repository when a",
    "start": "54480",
    "end": "57780"
  },
  {
    "text": "CD into the directory and then we'll",
    "start": "57780",
    "end": "61829"
  },
  {
    "text": "just look in the first example",
    "start": "61829",
    "end": "63180"
  },
  {
    "text": "translation here we've got two template",
    "start": "63180",
    "end": "66570"
  },
  {
    "text": "llamo files I'm going to deploy the",
    "start": "66570",
    "end": "70049"
  },
  {
    "text": "first one it's a while that's deploying",
    "start": "70049",
    "end": "71880"
  },
  {
    "text": "I can talk about the code I just run the",
    "start": "71880",
    "end": "75930"
  },
  {
    "text": "Sam deploy and use the new guided",
    "start": "75930",
    "end": "78060"
  },
  {
    "text": "deployment for the stack claim I'll call",
    "start": "78060",
    "end": "81540"
  },
  {
    "text": "it translation v1 I'm in uswest",
    "start": "81540",
    "end": "85229"
  },
  {
    "text": "- it takes a list of parameters for",
    "start": "85229",
    "end": "88170"
  },
  {
    "text": "languages we'll leave those to be the",
    "start": "88170",
    "end": "89369"
  },
  {
    "text": "same and then the bucket name offset as",
    "start": "89369",
    "end": "91460"
  },
  {
    "text": "jay-bez word translation 1 and then I'll",
    "start": "91460",
    "end": "95790"
  },
  {
    "text": "just accept these defaults ok that's now",
    "start": "95790",
    "end": "99479"
  },
  {
    "text": "deploying so if we take a look at the",
    "start": "99479",
    "end": "103200"
  },
  {
    "text": "code you'll see there's two functions",
    "start": "103200",
    "end": "105570"
  },
  {
    "text": "here the batching function and",
    "start": "105570",
    "end": "107130"
  },
  {
    "text": "translation function and in the Sam",
    "start": "107130",
    "end": "109740"
  },
  {
    "text": "template this is what we have first in",
    "start": "109740",
    "end": "113220"
  },
  {
    "text": "the parameters part at the top there's a",
    "start": "113220",
    "end": "115110"
  },
  {
    "text": "target language for our translation",
    "start": "115110",
    "end": "116700"
  },
  {
    "text": "we've got French Spanish and Italian",
    "start": "116700",
    "end": "117930"
  },
  {
    "text": "here along with a bucket name there's a",
    "start": "117930",
    "end": "121380"
  },
  {
    "text": "default further down we can see there's",
    "start": "121380",
    "end": "124890"
  },
  {
    "text": "the translation bucket using that bucket",
    "start": "124890",
    "end": "126719"
  },
  {
    "text": "name and then there's a translation",
    "start": "126719",
    "end": "129509"
  },
  {
    "text": "function that specifies where the code",
    "start": "129509",
    "end": "131849"
  },
  {
    "text": "lives in",
    "start": "131849",
    "end": "132640"
  },
  {
    "text": "directory there and it's a node.js",
    "start": "132640",
    "end": "135180"
  },
  {
    "text": "application found in app dot handler he",
    "start": "135180",
    "end": "139660"
  },
  {
    "text": "uses 128 megabytes megabytes of RAM and",
    "start": "139660",
    "end": "142450"
  },
  {
    "text": "takes an environment variable at the",
    "start": "142450",
    "end": "144250"
  },
  {
    "text": "target list of languages caret also",
    "start": "144250",
    "end": "146620"
  },
  {
    "text": "specifies the I M policy that the",
    "start": "146620",
    "end": "148690"
  },
  {
    "text": "function has and also how it responds to",
    "start": "148690",
    "end": "151240"
  },
  {
    "text": "the event in the bucket looking for dot",
    "start": "151240",
    "end": "153610"
  },
  {
    "text": "txt files to perform the translation",
    "start": "153610",
    "end": "157500"
  },
  {
    "text": "okay so app door handle is where the",
    "start": "160620",
    "end": "162790"
  },
  {
    "text": "code lists let's take a quick look at",
    "start": "162790",
    "end": "164200"
  },
  {
    "text": "this this is a standard lambda handler",
    "start": "164200",
    "end": "166690"
  },
  {
    "text": "we have a list of supported languages at",
    "start": "166690",
    "end": "168370"
  },
  {
    "text": "the top just for ease of use then when",
    "start": "168370",
    "end": "171850"
  },
  {
    "text": "the handler starts it can be handed an",
    "start": "171850",
    "end": "173470"
  },
  {
    "text": "event with multiple objects so the first",
    "start": "173470",
    "end": "176440"
  },
  {
    "text": "thing it does is goes through and",
    "start": "176440",
    "end": "178060"
  },
  {
    "text": "iterates through a list of all of the",
    "start": "178060",
    "end": "179920"
  },
  {
    "text": "different files that are handed in it",
    "start": "179920",
    "end": "182260"
  },
  {
    "text": "then cause calls do translation which",
    "start": "182260",
    "end": "185800"
  },
  {
    "text": "further down do translation looks in the",
    "start": "185800",
    "end": "189040"
  },
  {
    "text": "s3 object and retrieves the list of text",
    "start": "189040",
    "end": "192780"
  },
  {
    "text": "it then calls translate text which is",
    "start": "192780",
    "end": "195730"
  },
  {
    "text": "really just a wrapper and then it puts",
    "start": "195730",
    "end": "199180"
  },
  {
    "text": "the object back in s3 in the translation",
    "start": "199180",
    "end": "201940"
  },
  {
    "text": "subfolder",
    "start": "201940",
    "end": "203160"
  },
  {
    "text": "ok so let's test this now we'll go to",
    "start": "203160",
    "end": "205330"
  },
  {
    "text": "the bucket and I'll look in the",
    "start": "205330",
    "end": "209410"
  },
  {
    "text": "translation one bucket there's nothing",
    "start": "209410",
    "end": "212320"
  },
  {
    "text": "in there right now but I'm gonna upload",
    "start": "212320",
    "end": "213640"
  },
  {
    "text": "a simple text file coffee text it just",
    "start": "213640",
    "end": "217600"
  },
  {
    "text": "has one line of English in there saying",
    "start": "217600",
    "end": "219430"
  },
  {
    "text": "I like coffee so I'll drop that in there",
    "start": "219430",
    "end": "222519"
  },
  {
    "text": "and upload this object that's now",
    "start": "222519",
    "end": "227500"
  },
  {
    "text": "uploaded and if I now refresh the",
    "start": "227500",
    "end": "229989"
  },
  {
    "text": "contents of the bucket you'll see",
    "start": "229989",
    "end": "231250"
  },
  {
    "text": "there's now a translations folder that's",
    "start": "231250",
    "end": "232989"
  },
  {
    "text": "appeared and it has these three",
    "start": "232989",
    "end": "234730"
  },
  {
    "text": "different translations for English",
    "start": "234730",
    "end": "236200"
  },
  {
    "text": "French and Italian I'm just gonna make",
    "start": "236200",
    "end": "239440"
  },
  {
    "text": "these public so we can take a look I'll",
    "start": "239440",
    "end": "241239"
  },
  {
    "text": "open the French translation and you can",
    "start": "241239",
    "end": "244480"
  },
  {
    "text": "see Bonjour is your back pal James",
    "start": "244480",
    "end": "246519"
  },
  {
    "text": "it's my comment in French and you can",
    "start": "246519",
    "end": "252790"
  },
  {
    "text": "see the other translations there",
    "start": "252790",
    "end": "255950"
  },
  {
    "text": "now back to the main bucket if I upload",
    "start": "255950",
    "end": "259200"
  },
  {
    "text": "more than one file at once I've got",
    "start": "259200",
    "end": "261180"
  },
  {
    "text": "several different text files I can use",
    "start": "261180",
    "end": "263070"
  },
  {
    "text": "some with some longer examples I'm going",
    "start": "263070",
    "end": "266669"
  },
  {
    "text": "to upload those all now okay those are",
    "start": "266669",
    "end": "272550"
  },
  {
    "text": "uploaded if I look in the translations",
    "start": "272550",
    "end": "274710"
  },
  {
    "text": "folder and just refresh the contents you",
    "start": "274710",
    "end": "276780"
  },
  {
    "text": "can now see all of these other",
    "start": "276780",
    "end": "278460"
  },
  {
    "text": "translations of Appeal appeared in",
    "start": "278460",
    "end": "280410"
  },
  {
    "text": "French Spanish and Italian for all those",
    "start": "280410",
    "end": "282419"
  },
  {
    "text": "different files and again I'll just make",
    "start": "282419",
    "end": "286200"
  },
  {
    "text": "one of these public so we can look at",
    "start": "286200",
    "end": "287490"
  },
  {
    "text": "the Las Vegas one in French there you",
    "start": "287490",
    "end": "292380"
  },
  {
    "text": "can see that TextEdit has been",
    "start": "292380",
    "end": "294030"
  },
  {
    "text": "translated by Amazon translate in this",
    "start": "294030",
    "end": "296580"
  },
  {
    "text": "example you can see how this application",
    "start": "296580",
    "end": "298560"
  },
  {
    "text": "can process large numbers of files in",
    "start": "298560",
    "end": "300479"
  },
  {
    "text": "parallel regardless of how many text",
    "start": "300479",
    "end": "302970"
  },
  {
    "text": "files are put into the s3 bucket lambda",
    "start": "302970",
    "end": "305460"
  },
  {
    "text": "will scale up the function to do the",
    "start": "305460",
    "end": "306870"
  },
  {
    "text": "translation the whole application is",
    "start": "306870",
    "end": "309360"
  },
  {
    "text": "under a hundred lines of code but can",
    "start": "309360",
    "end": "311580"
  },
  {
    "text": "already handle an enterprise-level",
    "start": "311580",
    "end": "312900"
  },
  {
    "text": "amount of data this example shows how to",
    "start": "312900",
    "end": "315960"
  },
  {
    "text": "translate smaller snippets of text up to",
    "start": "315960",
    "end": "318210"
  },
  {
    "text": "five thousand characters and size which",
    "start": "318210",
    "end": "320400"
  },
  {
    "text": "is the limit on the single request",
    "start": "320400",
    "end": "321810"
  },
  {
    "text": "Amazon translate but what if you need to",
    "start": "321810",
    "end": "324630"
  },
  {
    "text": "translate much longer pieces well",
    "start": "324630",
    "end": "326880"
  },
  {
    "text": "fortunately that's fairly simple too I",
    "start": "326880",
    "end": "328710"
  },
  {
    "text": "don't need to change the first",
    "start": "328710",
    "end": "330210"
  },
  {
    "text": "application at all I can create a second",
    "start": "330210",
    "end": "332580"
  },
  {
    "text": "bucket to receive a larger text object",
    "start": "332580",
    "end": "334560"
  },
  {
    "text": "and then create another lambda function",
    "start": "334560",
    "end": "336479"
  },
  {
    "text": "to break it into smaller pieces and",
    "start": "336479",
    "end": "338100"
  },
  {
    "text": "store in the original bucket this",
    "start": "338100",
    "end": "340410"
  },
  {
    "text": "demonstrates how you can chain the",
    "start": "340410",
    "end": "341820"
  },
  {
    "text": "output of one function to the input of",
    "start": "341820",
    "end": "343710"
  },
  {
    "text": "another function using an s3 bucket as",
    "start": "343710",
    "end": "346200"
  },
  {
    "text": "an intermediary step let's take a look",
    "start": "346200",
    "end": "348900"
  },
  {
    "text": "at the code so the first thing I do is",
    "start": "348900",
    "end": "355350"
  },
  {
    "start": "352000",
    "end": "564000"
  },
  {
    "text": "build this second template for this",
    "start": "355350",
    "end": "357330"
  },
  {
    "text": "second application using the Sam build",
    "start": "357330",
    "end": "359220"
  },
  {
    "text": "command this just runs NPM install on",
    "start": "359220",
    "end": "361919"
  },
  {
    "text": "all of the functions once we have this",
    "start": "361919",
    "end": "365370"
  },
  {
    "text": "we can now run Sam deploy on this second",
    "start": "365370",
    "end": "368850"
  },
  {
    "text": "template but template v2 using the same",
    "start": "368850",
    "end": "374300"
  },
  {
    "text": "guided approach as last time I'm gonna",
    "start": "374300",
    "end": "378750"
  },
  {
    "text": "use the stack name and the region is",
    "start": "378750",
    "end": "380340"
  },
  {
    "text": "provided and also the target language",
    "start": "380340",
    "end": "381900"
  },
  {
    "text": "would stay the same but I'll give it a",
    "start": "381900",
    "end": "383550"
  },
  {
    "text": "bucket name of jay-bez no translation",
    "start": "383550",
    "end": "386470"
  },
  {
    "text": "and the batching bucket will use as J",
    "start": "386470",
    "end": "388570"
  },
  {
    "text": "buzzer Bosworth batching and I'll accept",
    "start": "388570",
    "end": "391210"
  },
  {
    "text": "these defaults for the rest of the",
    "start": "391210",
    "end": "392560"
  },
  {
    "text": "deployment",
    "start": "392560",
    "end": "393720"
  },
  {
    "text": "okay that's now deploying so let's take",
    "start": "393720",
    "end": "397510"
  },
  {
    "text": "a look at this second template this is",
    "start": "397510",
    "end": "399580"
  },
  {
    "text": "very similar to the first one you still",
    "start": "399580",
    "end": "401230"
  },
  {
    "text": "have the target language and the bucket",
    "start": "401230",
    "end": "403240"
  },
  {
    "text": "names but now there's a batching bucket",
    "start": "403240",
    "end": "404890"
  },
  {
    "text": "we'll be using and you can see it's",
    "start": "404890",
    "end": "406660"
  },
  {
    "text": "specified there in the resources now the",
    "start": "406660",
    "end": "409510"
  },
  {
    "text": "translation function is identical to how",
    "start": "409510",
    "end": "411670"
  },
  {
    "text": "it was before and then further down",
    "start": "411670",
    "end": "414580"
  },
  {
    "text": "there's now a batching function and it's",
    "start": "414580",
    "end": "417640"
  },
  {
    "text": "getting the code from batching function",
    "start": "417640",
    "end": "419320"
  },
  {
    "text": "subfolder and it's going to fire when it",
    "start": "419320",
    "end": "422770"
  },
  {
    "text": "receives txt file in that bucket let's",
    "start": "422770",
    "end": "426040"
  },
  {
    "text": "take a look at the lambda handler in app",
    "start": "426040",
    "end": "428260"
  },
  {
    "text": "KS so this is a standard lambda handler",
    "start": "428260",
    "end": "432600"
  },
  {
    "text": "again it will receive an event with all",
    "start": "432600",
    "end": "434710"
  },
  {
    "text": "of the different objects will iterate",
    "start": "434710",
    "end": "436000"
  },
  {
    "text": "through those objects and then call do",
    "start": "436000",
    "end": "437980"
  },
  {
    "text": "batching on each one do batching is",
    "start": "437980",
    "end": "440800"
  },
  {
    "text": "really write a wrapper for an NPM",
    "start": "440800",
    "end": "442450"
  },
  {
    "text": "package that can split up chunks of text",
    "start": "442450",
    "end": "444700"
  },
  {
    "text": "using sentences we're just using that to",
    "start": "444700",
    "end": "446590"
  },
  {
    "text": "pick up ten sentences at a time and then",
    "start": "446590",
    "end": "449980"
  },
  {
    "text": "what it's finished batching those up we",
    "start": "449980",
    "end": "451510"
  },
  {
    "text": "put those back into s3 using the s3 put",
    "start": "451510",
    "end": "455080"
  },
  {
    "text": "s3 object function",
    "start": "455080",
    "end": "459030"
  },
  {
    "text": "okay that deployment is now completed so",
    "start": "462279",
    "end": "465129"
  },
  {
    "text": "let's take a look at how this works I'll",
    "start": "465129",
    "end": "468639"
  },
  {
    "text": "look for that second batching function",
    "start": "468639",
    "end": "470979"
  },
  {
    "text": "back batching bucket that we've created",
    "start": "470979",
    "end": "472239"
  },
  {
    "text": "I'm gonna upload a larger example I've",
    "start": "472239",
    "end": "475809"
  },
  {
    "text": "got an example from war and peace fairly",
    "start": "475809",
    "end": "478239"
  },
  {
    "text": "long novel I'm gonna bring this in and",
    "start": "478239",
    "end": "480879"
  },
  {
    "text": "upload that okay so that's uploaded that",
    "start": "480879",
    "end": "483699"
  },
  {
    "text": "sections if we go back to the",
    "start": "483699",
    "end": "486149"
  },
  {
    "text": "translation bucket I'll just refresh the",
    "start": "486149",
    "end": "490869"
  },
  {
    "text": "contents you'll see this broken up war",
    "start": "490869",
    "end": "493419"
  },
  {
    "text": "and peace into all of these different",
    "start": "493419",
    "end": "494649"
  },
  {
    "text": "sections for is in the batching process",
    "start": "494649",
    "end": "496529"
  },
  {
    "text": "and now in the translations part you can",
    "start": "496529",
    "end": "499149"
  },
  {
    "text": "see there's a english french spanish and",
    "start": "499149",
    "end": "502599"
  },
  {
    "text": "italian also appearing there for each",
    "start": "502599",
    "end": "504309"
  },
  {
    "text": "one of those sections and if i just open",
    "start": "504309",
    "end": "506110"
  },
  {
    "text": "up one of these is an example there you",
    "start": "506110",
    "end": "512709"
  },
  {
    "text": "can see ten sentences of war and peace",
    "start": "512709",
    "end": "514328"
  },
  {
    "text": "in french combining the s3 tool and a",
    "start": "514329",
    "end": "518649"
  },
  {
    "text": "design pattern with other AWS services",
    "start": "518649",
    "end": "520809"
  },
  {
    "text": "can open the door to really innovative",
    "start": "520809",
    "end": "523120"
  },
  {
    "text": "solutions in this case I used Amazon",
    "start": "523120",
    "end": "525759"
  },
  {
    "text": "Translate to convert text into",
    "start": "525759",
    "end": "527800"
  },
  {
    "text": "potentially dozens of different",
    "start": "527800",
    "end": "529120"
  },
  {
    "text": "languages since the service handles the",
    "start": "529120",
    "end": "531759"
  },
  {
    "text": "scaling it can process hundreds or",
    "start": "531759",
    "end": "533860"
  },
  {
    "text": "thousands of lines of text in parallel",
    "start": "533860",
    "end": "536079"
  },
  {
    "text": "our lambda function contains only the",
    "start": "536079",
    "end": "538389"
  },
  {
    "text": "minimal business logic to connect the",
    "start": "538389",
    "end": "539920"
  },
  {
    "text": "services using the server this",
    "start": "539920",
    "end": "542170"
  },
  {
    "text": "application model setting up a",
    "start": "542170",
    "end": "543970"
  },
  {
    "text": "deployment package with AWS resources",
    "start": "543970",
    "end": "545620"
  },
  {
    "text": "now code is very straightforward to",
    "start": "545620",
    "end": "548040"
  },
  {
    "text": "download the examples from this video",
    "start": "548040",
    "end": "550360"
  },
  {
    "text": "and others in the series visit this URL",
    "start": "550360",
    "end": "553980"
  },
  {
    "text": "thanks for joining me for this",
    "start": "553980",
    "end": "555819"
  },
  {
    "text": "walkthrough I hope to see you in the",
    "start": "555819",
    "end": "557529"
  },
  {
    "text": "next video happy coding",
    "start": "557529",
    "end": "560850"
  }
]