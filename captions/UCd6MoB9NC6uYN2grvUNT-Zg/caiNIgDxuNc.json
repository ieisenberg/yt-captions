[
  {
    "text": "Welcome to 'Back to Basics'.",
    "start": "6531",
    "end": "8332"
  },
  {
    "text": "Today, we're going to talk about\ndatabase replication.",
    "start": "8384",
    "end": "11940"
  },
  {
    "text": "In the simplest use case,\nthis can be between two AWS accounts",
    "start": "12463",
    "end": "16373"
  },
  {
    "text": "in the same organization.",
    "start": "16818",
    "end": "18381"
  },
  {
    "text": "A common requirement is to copy data\nbetween two different environments,",
    "start": "18877",
    "end": "22599"
  },
  {
    "text": "for example, between production\nand UAT to support testing,",
    "start": "22792",
    "end": "26968"
  },
  {
    "text": "and to share data\nbetween two separate teams",
    "start": "26968",
    "end": "29293"
  },
  {
    "text": "that manage their own databases.",
    "start": "29293",
    "end": "31185"
  },
  {
    "text": "Another use case is\nto support hybrid architectures",
    "start": "31699",
    "end": "34763"
  },
  {
    "text": "where an application\nand the corresponding database",
    "start": "34763",
    "end": "37434"
  },
  {
    "text": "is moved to AWS,",
    "start": "37434",
    "end": "39171"
  },
  {
    "text": "and an on-premise database\nneeds to be kept in sync",
    "start": "39207",
    "end": "42014"
  },
  {
    "text": "to support on-premise applications\nthat haven't migrated yet.",
    "start": "42014",
    "end": "45419"
  },
  {
    "text": "Today, more frequently,\ndata is also stored in",
    "start": "46124",
    "end": "48652"
  },
  {
    "text": "third-party applications\nor SaaS solutions that are host on AWS.",
    "start": "48652",
    "end": "52975"
  },
  {
    "text": "In this situation,\nwe still need to have the capability to ",
    "start": "53340",
    "end": "55962"
  },
  {
    "text": "combine all our data\nfor various analytics use cases.",
    "start": "55962",
    "end": "59555"
  },
  {
    "text": "So, as you can imagine now,\nit becomes more challenging",
    "start": "59555",
    "end": "62405"
  },
  {
    "text": "to implement a secure\nand scalable pattern",
    "start": "62405",
    "end": "65135"
  },
  {
    "text": "for all of these use cases.",
    "start": "65135",
    "end": "66695"
  },
  {
    "text": "In this episode,\nwe're going to walk you through the steps",
    "start": "66695",
    "end": "69670"
  },
  {
    "text": "for setting up the secure\nand scalable pattern",
    "start": "69670",
    "end": "72719"
  },
  {
    "text": "for database replication between\ntwo AWS accounts.",
    "start": "72719",
    "end": "76272"
  },
  {
    "text": "In our example,\nwe have a consumer web application",
    "start": "76272",
    "end": "79352"
  },
  {
    "text": "running in a private VPC\nacross two AZs.",
    "start": "79352",
    "end": "82237"
  },
  {
    "text": "This application wants to\nrun advanced analytics",
    "start": "82628",
    "end": "85416"
  },
  {
    "text": "on all of the portfolio holdings.",
    "start": "85416",
    "end": "87416"
  },
  {
    "text": "In order to do this,\nthis application needs to",
    "start": "87431",
    "end": "90042"
  },
  {
    "text": "have access to the portfolio data\nthat is available in a SaaS application",
    "start": "90042",
    "end": "94544"
  },
  {
    "text": "that is used by their business\nto manage all portfolio holdings.",
    "start": "94544",
    "end": "97847"
  },
  {
    "text": "The SaaS provider runs\nand maintains an isolated collation",
    "start": "99011",
    "end": "102126"
  },
  {
    "text": "and SQL server database\nfor each customer.",
    "start": "102126",
    "end": "104538"
  },
  {
    "text": "Things you want to consider\nfor this architecture are the following:",
    "start": "104538",
    "end": "108158"
  },
  {
    "text": "first, from a security perspective,",
    "start": "108504",
    "end": "110849"
  },
  {
    "text": "no communication should occur\nover the internet.",
    "start": "111295",
    "end": "113929"
  },
  {
    "text": "And that we can lock down \ningress-egress traffic",
    "start": "113929",
    "end": "117136"
  },
  {
    "text": "to dedicated private IPs\nform into the third party.",
    "start": "117359",
    "end": "121266"
  },
  {
    "text": "Second, from a flexibility perspective,\nthat we might want to use",
    "start": "121266",
    "end": "125565"
  },
  {
    "text": "a different database engine\nlike Amazon Aurora,",
    "start": "125565",
    "end": "128547"
  },
  {
    "text": "on the consumer side,\nto reduce costs down the road.",
    "start": "128547",
    "end": "132092"
  },
  {
    "text": "Third, from a scalability perspective,\nthat we might require",
    "start": "132092",
    "end": "136159"
  },
  {
    "text": "dozens or hundreds of\nsimilar network connections",
    "start": "136160",
    "end": "138915"
  },
  {
    "text": "with other AWS accounts in the future.",
    "start": "138915",
    "end": "141428"
  },
  {
    "text": "These requirements lead us to \nuse PrivateLink for network connectivity",
    "start": "141428",
    "end": "145722"
  },
  {
    "text": "as VPC PI won’t be scalable.",
    "start": "145723",
    "end": "148116"
  },
  {
    "text": "And to use Database Migration Service\n(DMS) for database replication",
    "start": "148116",
    "end": "152930"
  },
  {
    "text": "as it provides cost engine replications.",
    "start": "152930",
    "end": "155900"
  },
  {
    "text": "In our example,\nwe want to replicate the database",
    "start": "155901",
    "end": "159023"
  },
  {
    "text": "in the SaaS application VPC,\nto a SQL server instance",
    "start": "159023",
    "end": "163208"
  },
  {
    "text": "in the customer VPC.",
    "start": "163208",
    "end": "165027"
  },
  {
    "text": "VPC endpoints make it easy to create\na private connection between two VPCs",
    "start": "165276",
    "end": "170189"
  },
  {
    "text": "of different AWS accounts\nin the same region.",
    "start": "170189",
    "end": "172993"
  },
  {
    "text": "Traffic between both VPCs don't have-\ndon’t leave the Amazon network",
    "start": "172993",
    "end": "176631"
  },
  {
    "text": "and don't require public,\nIP addresses.",
    "start": "176770",
    "end": "179524"
  },
  {
    "text": "For cost regional use cases,\nwe can extend this pattern via VPC PI",
    "start": "179603",
    "end": "184481"
  },
  {
    "text": "to other VPCs in other regions.",
    "start": "184481",
    "end": "186911"
  },
  {
    "text": "To expose this database to\nother consumers,",
    "start": "186911",
    "end": "189515"
  },
  {
    "text": "we need to front end the database\nwith a network load balancer.",
    "start": "189516",
    "end": "193009"
  },
  {
    "text": "In the network load balancer,\nwe register as a private IP",
    "start": "193511",
    "end": "197303"
  },
  {
    "text": "and the part of the database instances\nas a target group",
    "start": "197303",
    "end": "200952"
  },
  {
    "text": "and adjust the security groups\n of the database",
    "start": "200953",
    "end": "204300"
  },
  {
    "text": "to only allow traffic from\na network load balancer.",
    "start": "204300",
    "end": "207300"
  },
  {
    "text": "Finally, we can set up\nthe VPC endpoint services",
    "start": "209217",
    "end": "212448"
  },
  {
    "text": "by creating a service configuration\nand associate it with",
    "start": "212448",
    "end": "216574"
  },
  {
    "text": "the network load balancer.",
    "start": "216574",
    "end": "218380"
  },
  {
    "text": "For security reasons,\nwe require manual approval",
    "start": "219266",
    "end": "222722"
  },
  {
    "text": "for all connections.",
    "start": "222722",
    "end": "224222"
  },
  {
    "text": "The third party can now request\nan interface endpoint",
    "start": "224222",
    "end": "227021"
  },
  {
    "text": "for the previously-configured\nAWS PrivateLink service in the VPC.",
    "start": "227021",
    "end": "231506"
  },
  {
    "text": "The interface endpoint can span\none or two availability zones,",
    "start": "232040",
    "end": "235745"
  },
  {
    "text": "it’s redundant and scales horizontally.",
    "start": "235746",
    "end": "238174"
  },
  {
    "text": "After the service provider\napproves request,",
    "start": "238978",
    "end": "242056"
  },
  {
    "text": "the endpoint is available as an ENI\nin the third party VPC.",
    "start": "242057",
    "end": "246362"
  },
  {
    "text": "As previously mentioned,\nwe use AWS DMS,",
    "start": "246537",
    "end": "250177"
  },
  {
    "text": "database migration service,\nfor the database application.",
    "start": "250177",
    "end": "253244"
  },
  {
    "text": "And as a first step,\nwe set up a DMS instance",
    "start": "253244",
    "end": "256204"
  },
  {
    "text": "in the third-party VPC.",
    "start": "256204",
    "end": "257886"
  },
  {
    "text": "The DMS instance requires connectivity\nto the source and the target database.",
    "start": "258652",
    "end": "263904"
  },
  {
    "text": "We configure the security group of\nthe source database",
    "start": "264726",
    "end": "268382"
  },
  {
    "text": "to allow access from the DMS instance.",
    "start": "268382",
    "end": "271167"
  },
  {
    "text": "Access to the interface endpoints\ncan be controlled by endpoint policies.",
    "start": "271646",
    "end": "275462"
  },
  {
    "text": "So, by default, \nendpoint policies allow full access",
    "start": "276268",
    "end": "279482"
  },
  {
    "text": "to the service.",
    "start": "279482",
    "end": "281078"
  },
  {
    "text": "So, in this case,\nwe need to tighten up the security",
    "start": "281112",
    "end": "283637"
  },
  {
    "text": "and define an endpoint policy\nthat allows only access",
    "start": "283637",
    "end": "286703"
  },
  {
    "text": "from the DMS instance.",
    "start": "286703",
    "end": "288527"
  },
  {
    "text": "So now, we have everything in place\nfrom a security and networking perspective",
    "start": "288527",
    "end": "292700"
  },
  {
    "text": "to continue with the setup of\nthe database replication.",
    "start": "292700",
    "end": "295862"
  },
  {
    "text": "As a best practice,\nyou wouldn't put in line any firewall",
    "start": "295862",
    "end": "299510"
  },
  {
    "text": "or network inspection device \nbetween the PrivateLink endpoint",
    "start": "299510",
    "end": "303170"
  },
  {
    "text": "and the database.",
    "start": "303170",
    "end": "304671"
  },
  {
    "text": "In our example,\nwe want to configure",
    "start": "304806",
    "end": "306904"
  },
  {
    "text": "the SQL server instance\nin the third-party VPC",
    "start": "306904",
    "end": "310087"
  },
  {
    "text": "as the source database in DMS.",
    "start": "310087",
    "end": "312676"
  },
  {
    "text": "For the target database,\nwe configure in DMS the private IP",
    "start": "313080",
    "end": "317147"
  },
  {
    "text": "of the VPC interface endpoint,\nand the SQL part of the database",
    "start": "317148",
    "end": "321412"
  },
  {
    "text": "in the customer VPC.",
    "start": "321412",
    "end": "323030"
  },
  {
    "text": "Alternatively,\nyou can also use private DNS names",
    "start": "323765",
    "end": "327324"
  },
  {
    "text": "for VPC interface endpoints.",
    "start": "327324",
    "end": "329735"
  },
  {
    "text": "We have chosen to set up DMS \nin the SaaS provider or third-party VPC",
    "start": "329735",
    "end": "334387"
  },
  {
    "text": "as this gives control of\nfuture DMS changes",
    "start": "334387",
    "end": "337346"
  },
  {
    "text": "for sample frequency of\nreplication tasks to the third party.",
    "start": "337346",
    "end": "341336"
  },
  {
    "text": "Depending on the needs of your setup,\nthis pattern can be also set up",
    "start": "341649",
    "end": "345526"
  },
  {
    "text": "the other way around.",
    "start": "345527",
    "end": "347084"
  },
  {
    "text": "DMS can continue to replicate data\nwith high availability",
    "start": "347221",
    "end": "350581"
  },
  {
    "text": "between two data stores",
    "start": "350581",
    "end": "352106"
  },
  {
    "text": "Tasks defined in DMS\ncan perform a full load,",
    "start": "352261",
    "end": "355322"
  },
  {
    "text": "catch changes or ongoing application\nbetween two data stores.",
    "start": "355322",
    "end": "359530"
  },
  {
    "text": "I've used this pattern more than once,\nespecially for ",
    "start": "359530",
    "end": "362394"
  },
  {
    "text": "security-concerned organizations.",
    "start": "362394",
    "end": "364475"
  },
  {
    "text": "Now, you can use it too.",
    "start": "364779",
    "end": "366435"
  },
  {
    "text": "Check out the links below\nfor more details.",
    "start": "366435",
    "end": "368984"
  },
  {
    "text": "See you next time.",
    "start": "368984",
    "end": "370470"
  }
]