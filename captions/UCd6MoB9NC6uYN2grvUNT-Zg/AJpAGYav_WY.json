[
  {
    "text": "all right we'll get started good morning everybody thank you all for joining us",
    "start": "30",
    "end": "5040"
  },
  {
    "text": "here welcome to reinvent it's really a pleasure to have you all here so my name",
    "start": "5040",
    "end": "10679"
  },
  {
    "text": "is Dean Carr parabola I'm a software deaf man adjourn at AWS IOT in with an",
    "start": "10679",
    "end": "16619"
  },
  {
    "text": "AW xiety I specifically lead the message broker services we also have been a",
    "start": "16619",
    "end": "22050"
  },
  {
    "text": "bundle from Amazon music Vinay is going to step on here and talk towards the",
    "start": "22050",
    "end": "27210"
  },
  {
    "text": "later part of this session and he's gonna be talking about the Amazon music story on how they built a pretty cool",
    "start": "27210",
    "end": "34230"
  },
  {
    "text": "application using a w's IOT so before we",
    "start": "34230",
    "end": "39239"
  },
  {
    "text": "get started a quick show of hands here how many of you thought of building applications or built applications using",
    "start": "39239",
    "end": "45510"
  },
  {
    "text": "a doubles IOT oh that's quite a lot that's good all right so amongst you guys I'm sure you",
    "start": "45510",
    "end": "53789"
  },
  {
    "text": "have one of those ideas an IOT idea that probably is gonna change how we live in",
    "start": "53789",
    "end": "58859"
  },
  {
    "text": "this world and what if that idea was a revolutionary one in the sense that it drives massive adoption from your",
    "start": "58859",
    "end": "65790"
  },
  {
    "text": "customers or users or devices and now that you've built your application or",
    "start": "65790",
    "end": "71580"
  },
  {
    "text": "thinking about building it how many of you have actually thought about scaling your application for millions and",
    "start": "71580",
    "end": "77070"
  },
  {
    "text": "millions of devices or customers or users yeah some hands so that's good so",
    "start": "77070",
    "end": "84060"
  },
  {
    "text": "for the next 45 minutes to one hour we are going to be basically focusing on",
    "start": "84060",
    "end": "89759"
  },
  {
    "text": "what are the things that you can do to build your applications on top of AWS IOT in a way in which you can actually",
    "start": "89759",
    "end": "96630"
  },
  {
    "text": "scale for those millions of customers or millions of users and devices and by the end of the one hour you will go back and",
    "start": "96630",
    "end": "104490"
  },
  {
    "text": "take some key takeaways in terms of the scaling best practices that you can apply for your applications I'm gonna",
    "start": "104490",
    "end": "113100"
  },
  {
    "text": "have just one slide to kind of give like an overview of AWS IOT I'm I know most",
    "start": "113100",
    "end": "118680"
  },
  {
    "text": "of you have already used it but this is for folks who've never used a SS IOT I'm gonna just spend one slide giving a",
    "start": "118680",
    "end": "125729"
  },
  {
    "text": "glance of all the components that we're going to touch base as part of this session so it'll miss IOT for those who",
    "start": "125729",
    "end": "132120"
  },
  {
    "text": "don't know about it it's a fully service that allows for devices to securely connect and also communicate",
    "start": "132120",
    "end": "139680"
  },
  {
    "text": "over a pops-up messaging model pops up basically stands for publish/subscribe a",
    "start": "139680",
    "end": "144810"
  },
  {
    "text": "bunch of devices can subscribe to topics and the publisher can publish messages",
    "start": "144810",
    "end": "150000"
  },
  {
    "text": "on those topics and then a SS IOT will deliver those messages to the subscribers who are subscribed to those",
    "start": "150000",
    "end": "156060"
  },
  {
    "text": "topics in terms of protocol support their support for MQTT protocol HTTP and",
    "start": "156060",
    "end": "163159"
  },
  {
    "text": "mqtt over WebSockets we'll also talk about rules engine somewhere in the middle of the talk rules engine is",
    "start": "163159",
    "end": "169950"
  },
  {
    "text": "essentially a component within EWS IOT it allows for customers to integrate a",
    "start": "169950",
    "end": "175890"
  },
  {
    "text": "tablet IOT with other alw services be it in the analytics wall or databases or",
    "start": "175890",
    "end": "181859"
  },
  {
    "text": "storage there's a whole list of aw services that edibles IOT integrates with on our public documentation and",
    "start": "181859",
    "end": "188269"
  },
  {
    "text": "then there is things shadows we will also talk about think Chad o somewhere in the talk and I think shadows is",
    "start": "188269",
    "end": "194190"
  },
  {
    "text": "essentially a virtual representation of the state or the content of the device",
    "start": "194190",
    "end": "200190"
  },
  {
    "text": "in the cloud so if the device keeps going online and offline the device can keep itself in sync with the state or",
    "start": "200190",
    "end": "207900"
  },
  {
    "text": "the content that has been stored in that corresponding thing shadow all right so",
    "start": "207900",
    "end": "216030"
  },
  {
    "text": "in order to talk about the theme of our talk which is to scale for you know millions of devices I'm going to",
    "start": "216030",
    "end": "221400"
  },
  {
    "text": "actually pick four different customer examples these are real customer examples where customers out there are",
    "start": "221400",
    "end": "227700"
  },
  {
    "text": "actually building these applications on top of a doubles IOT and the reason why I chose these four different examples is",
    "start": "227700",
    "end": "236389"
  },
  {
    "text": "together with a combination of these four examples we will cover a majority",
    "start": "236389",
    "end": "241560"
  },
  {
    "text": "of use cases or majority of messaging patterns that we see our customers use with a SS IOT I'll get started right at",
    "start": "241560",
    "end": "250199"
  },
  {
    "text": "the bat with the first example I'm going to be using the example of home automation and here the customer use",
    "start": "250199",
    "end": "255959"
  },
  {
    "text": "case is connected TV so I'm sure most of you have TVs in your living rooms and",
    "start": "255959",
    "end": "261209"
  },
  {
    "text": "bedrooms or wherever you prefer to have them and you possibly also have an Alexa or a mobile phone in that same",
    "start": "261209",
    "end": "267400"
  },
  {
    "text": "well who wouldn't want to control the TV with your Alexa and not having to worry",
    "start": "267400",
    "end": "273070"
  },
  {
    "text": "about that always lost remote under the cushions right I would love to do that",
    "start": "273070",
    "end": "279070"
  },
  {
    "text": "so the way you would want to do it is basically there is a control device which is the TV itself and then there is",
    "start": "279070",
    "end": "285070"
  },
  {
    "text": "a controlling device the Alexa or the mobile phone which you can give instructions to to basically get the TV",
    "start": "285070",
    "end": "291100"
  },
  {
    "text": "to do whatever you want it to do so there is some sort of a connection or some sort of communication that needs to",
    "start": "291100",
    "end": "297370"
  },
  {
    "text": "happen between these two sets of devices and you could use the a SS IO T to bridge that communication between the",
    "start": "297370",
    "end": "303910"
  },
  {
    "text": "controlled device and then the controlling device so for the in this",
    "start": "303910",
    "end": "310930"
  },
  {
    "text": "case the way this would work is basically mmm the TV can subscribe to a bunch of",
    "start": "310930",
    "end": "316720"
  },
  {
    "text": "topics and excuse me so the TV can",
    "start": "316720",
    "end": "326889"
  },
  {
    "text": "subscribe to a bunch of topics and these topics basically a map to whatever the",
    "start": "326889",
    "end": "332380"
  },
  {
    "text": "commands that the TV supports so in this case I had an example of switch her on switch off volume up volume down and so",
    "start": "332380",
    "end": "339460"
  },
  {
    "text": "on and when you spell out the instruction to your Alexa or when you",
    "start": "339460",
    "end": "344680"
  },
  {
    "text": "hit the button on your mobile phone you can have your Alexa mobile phone publish that message for that corresponding",
    "start": "344680",
    "end": "351010"
  },
  {
    "text": "command on - aw IOT topic and a dubs IOT will deliver that message to the TV and",
    "start": "351010",
    "end": "357039"
  },
  {
    "text": "then the TV can act upon it pretty simple pretty straightforward right there's a slight optimization here now",
    "start": "357039",
    "end": "365729"
  },
  {
    "text": "let's say the TV supports many commands and many features and this is pretty",
    "start": "365729",
    "end": "371590"
  },
  {
    "text": "common and TVs that come in today's wall so let's say the TV actually supported 100 different commands that you could",
    "start": "371590",
    "end": "377470"
  },
  {
    "text": "control with your Alexa or your mobile phone so in this case the TV would have",
    "start": "377470",
    "end": "382960"
  },
  {
    "text": "to subscribe to all those hundred different topics works but it's kind of inconvenient right one the TV has to",
    "start": "382960",
    "end": "391180"
  },
  {
    "text": "remember all those subscriptions and every time the TV connects it needs to make sure that it's subscribing to all",
    "start": "391180",
    "end": "396940"
  },
  {
    "text": "those different topics and even if it misses out on one single topic that c'mon might not work and the second",
    "start": "396940",
    "end": "404530"
  },
  {
    "text": "aspect to it is there is cost implication so again every time when the",
    "start": "404530",
    "end": "410050"
  },
  {
    "text": "TV connects as part of that connection it needs to go subscribe to all these 100 different topics and each",
    "start": "410050",
    "end": "415570"
  },
  {
    "text": "subscription or each subscribe request is a message to AWS IOT and it incurs some sort of cost so a slight",
    "start": "415570",
    "end": "423220"
  },
  {
    "text": "optimisation for this would be to use wild card subscriptions a double-sided I suppose the wild card subscriptions that",
    "start": "423220",
    "end": "429540"
  },
  {
    "text": "MQTT protocol has so the equivalent of subscribing to all those 100 different",
    "start": "429540",
    "end": "435040"
  },
  {
    "text": "topics is you could just have one subscription called command slash plus and plus here basically acts like a",
    "start": "435040",
    "end": "441940"
  },
  {
    "text": "regex and you can use that plus instead of all the other commands that that you would have to list down against a simple",
    "start": "441940",
    "end": "448270"
  },
  {
    "text": "easy optimization right now in the new world basically this is going to be the",
    "start": "448270",
    "end": "455410"
  },
  {
    "text": "TV instead of subscribing to all those topics it just subscribed to a single subscription and no matter what the",
    "start": "455410",
    "end": "461170"
  },
  {
    "text": "command you give from your Alexa or your mobile phone the corresponding published can happen on the topic but the TV is",
    "start": "461170",
    "end": "467470"
  },
  {
    "text": "still going to receive those messages and it can act upon it but wait what if",
    "start": "467470",
    "end": "475030"
  },
  {
    "text": "we had millions of TVs in fact a million TVs is not a big deal for a successful TV company right if he were a successful",
    "start": "475030",
    "end": "482980"
  },
  {
    "text": "company we'd probably be selling millions millions of TVs like if you know some of those successful companies now if he had lots of such TVs what",
    "start": "482980",
    "end": "490120"
  },
  {
    "text": "would we do sure we can think of some sort of a device ID for each of our TVs and plug",
    "start": "490120",
    "end": "498820"
  },
  {
    "text": "that device ID somewhere in the topic and that helps in kind of identifying which TV that the command is being",
    "start": "498820",
    "end": "505180"
  },
  {
    "text": "issued for and that's all it's a problem but the key question here is that we",
    "start": "505180",
    "end": "512140"
  },
  {
    "text": "need to add this device ID somewhere in the topic and some very rare either it",
    "start": "512140",
    "end": "517360"
  },
  {
    "text": "needs you could probably add it to the prefix of the original topic that we had",
    "start": "517360",
    "end": "522640"
  },
  {
    "text": "or you could put it in the middle between the command and the wild-card or you can actually put it the suffix after",
    "start": "522640",
    "end": "528520"
  },
  {
    "text": "the wild-card now why is this really important like does it really matter where I put my device ID",
    "start": "528520",
    "end": "535150"
  },
  {
    "text": "it kind of does and in order to be able to answer the question on this slide here we need to kind of understand a",
    "start": "535150",
    "end": "541330"
  },
  {
    "text": "little bit about what aw IOT does to your device subscriptions so in my",
    "start": "541330",
    "end": "547840"
  },
  {
    "text": "example like when we have this TV when it issues a subscribe request on a subscription including wild card",
    "start": "547840",
    "end": "554500"
  },
  {
    "text": "subscriptions entree SS IOT behind-the-scenes that subscription is being stored somewhere right it's being",
    "start": "554500",
    "end": "561160"
  },
  {
    "text": "stored in some sort of a datastore it's not relevant for this conversation what that datastore is and what that looks",
    "start": "561160",
    "end": "567070"
  },
  {
    "text": "like but the point is that this subscription has to be stored somewhere and then when the publish request comes",
    "start": "567070",
    "end": "574120"
  },
  {
    "text": "on a particular topic a SS IO T has to fetch all those subscriptions including",
    "start": "574120",
    "end": "580480"
  },
  {
    "text": "the wild card subscriptions and then find out who the subscribers are and then deliver that message to those subscribers so the key here is that when",
    "start": "580480",
    "end": "587890"
  },
  {
    "text": "a subscriber request is issued to Edoras IOT it's a write operation and when our",
    "start": "587890",
    "end": "593620"
  },
  {
    "text": "publish request is issued it's a read operation in that the topic now has to",
    "start": "593620",
    "end": "598750"
  },
  {
    "text": "be matched to all the wild cards subscribe subscriptions as well as the normal non wild card subscriptions and",
    "start": "598750",
    "end": "604480"
  },
  {
    "text": "then that result has to be fetched from this datastore so I'll zoom in a little",
    "start": "604480",
    "end": "611980"
  },
  {
    "text": "bit into the datastore of how we were gonna store this so for 1 million TVs we",
    "start": "611980",
    "end": "618220"
  },
  {
    "text": "would need more million subscriptions presuming each TV had that wild card subscription that we talked about and",
    "start": "618220",
    "end": "624630"
  },
  {
    "text": "these subscriptions have to be stored somewhere like I said now today this is 1 million subscriptions tomorrow it",
    "start": "624630",
    "end": "631240"
  },
  {
    "text": "could be tens of millions of subscriptions so this is going to basically grow in numbers so the storage",
    "start": "631240",
    "end": "636490"
  },
  {
    "text": "would require the storage that we would require to have is some sort of a scalable storage solution that would",
    "start": "636490",
    "end": "642010"
  },
  {
    "text": "scale horizontally as more and more devices come in to the field so for this",
    "start": "642010",
    "end": "647530"
  },
  {
    "text": "example basically I've decided to say that for this million subscriptions I would need some sort of a partitioning",
    "start": "647530",
    "end": "653410"
  },
  {
    "text": "scheme for how I store these subscriptions and I said for these million subscriptions I would need 10",
    "start": "653410",
    "end": "658990"
  },
  {
    "text": "different partitions and the way these partitions are accessed or the",
    "start": "658990",
    "end": "664210"
  },
  {
    "text": "partitioning scheme for this is based on the prefix of the topic for those subscriptions now I've taken a",
    "start": "664210",
    "end": "674279"
  },
  {
    "text": "very simple partitioning scheme here we could possibly say hey the first hundred K devices would fit into the first",
    "start": "674279",
    "end": "679829"
  },
  {
    "text": "partition the next hundred K would go into the second and so on up until the last 100 K would go into the tenth",
    "start": "679829",
    "end": "685260"
  },
  {
    "text": "partition and now let's see what those three options we had and how they four play into this setup so the first topic",
    "start": "685260",
    "end": "694699"
  },
  {
    "text": "option we had which is the device ID being the prefix in this case because the device ID is and the prefix and",
    "start": "694699",
    "end": "700829"
  },
  {
    "text": "because the way the partitions are accessed is based on the prefix of the topic this is an easy simple mapping",
    "start": "700829",
    "end": "707190"
  },
  {
    "text": "into a single partition so let's say in this example that device ID was one two",
    "start": "707190",
    "end": "713639"
  },
  {
    "text": "five seven six four we know that by the prefix lookup it falls into the second partition and that's a single partition",
    "start": "713639",
    "end": "720149"
  },
  {
    "text": "right access and if you had million devices and million device IDs they",
    "start": "720149",
    "end": "726540"
  },
  {
    "text": "would uniformly distribute the workload across all those partitions that were provisioned or kept for storing all",
    "start": "726540",
    "end": "733470"
  },
  {
    "text": "these subscriptions the second option what if the device ID",
    "start": "733470",
    "end": "738870"
  },
  {
    "text": "was in the middle even in this case well the command is the prefix but it becomes a common prefix for all the partitions",
    "start": "738870",
    "end": "745019"
  },
  {
    "text": "and then the height cardinality part of the topic which is the device ID which can go into Millions that's after that so even in this case",
    "start": "745019",
    "end": "752550"
  },
  {
    "text": "you can still resolve into a single partition and for the device ID one two",
    "start": "752550",
    "end": "758790"
  },
  {
    "text": "five seven six four it still basically goes into that single partition and if you had millions of devices they would",
    "start": "758790",
    "end": "764399"
  },
  {
    "text": "still have a uniform workload of rights across the partitions so as and when you",
    "start": "764399",
    "end": "770279"
  },
  {
    "text": "add more devices it just requires more partitions but the workload will be uniformly distributed across those",
    "start": "770279",
    "end": "775920"
  },
  {
    "text": "partitions what if we had the device ID after the wild card so in this case this",
    "start": "775920",
    "end": "784920"
  },
  {
    "text": "actually creates a non-uniform workload workload across all the partitions so",
    "start": "784920",
    "end": "790670"
  },
  {
    "text": "think about a wild card subscriptions are like rejects so when a read operation comes for a topic it in order",
    "start": "790670",
    "end": "798060"
  },
  {
    "text": "to optimize for the reads the read operation needs to pull all the subscribers single partition now having the wild",
    "start": "798060",
    "end": "805020"
  },
  {
    "text": "card in front of or into the prefix of a high cardinality part of your topic creates a non-uniform workload because",
    "start": "805020",
    "end": "811380"
  },
  {
    "text": "this wildcard subscription has to be written in more than one partition so that when a read operation comes in we",
    "start": "811380",
    "end": "818100"
  },
  {
    "text": "were able to fetch all the subscribers including the regex or the wildcard subscribers from the single partition to",
    "start": "818100",
    "end": "823920"
  },
  {
    "text": "optimize for the reads so the main key takeaway here is that when you have",
    "start": "823920",
    "end": "829740"
  },
  {
    "text": "wildcard subscriptions for your devices and your devices are going to scale for millions of numbers then you want to",
    "start": "829740",
    "end": "837300"
  },
  {
    "text": "make sure that your wildcard is basically to the rightmost part of your topic or at least to the right of the",
    "start": "837300",
    "end": "843900"
  },
  {
    "text": "high cardinality part of your topic which you want to scale for in high numbers so for the three options we had",
    "start": "843900",
    "end": "852630"
  },
  {
    "text": "option one option two with both scale but the third option where we have the wildcard to the prefix of the high",
    "start": "852630",
    "end": "860820"
  },
  {
    "text": "cardinality part of the topic structure is not going to scale something to keep",
    "start": "860820",
    "end": "866280"
  },
  {
    "text": "in mind so this will be the end of the first example and I'm going to close it",
    "start": "866280",
    "end": "871650"
  },
  {
    "text": "out with a key takeaways from here so we talked about how you could use wildcard subscriptions to consolidate your",
    "start": "871650",
    "end": "878370"
  },
  {
    "text": "subscriptions it's convenient and it saves you on some sort of cost to",
    "start": "878370",
    "end": "883580"
  },
  {
    "text": "introduce device IDs to bring high cardinality for your topics especially if you have a lot of devices you could",
    "start": "883580",
    "end": "889770"
  },
  {
    "text": "easily identify each devices based on the device ID and you can plug that information into the topic and the third",
    "start": "889770",
    "end": "895770"
  },
  {
    "text": "in the main key takeaway from here is that if you have wild card subscriptions for your devices and if you want to have",
    "start": "895770",
    "end": "902760"
  },
  {
    "text": "many of those wild card subscriptions then the good practice or the scalable practice is to have the wild card",
    "start": "902760",
    "end": "909510"
  },
  {
    "text": "subscription towards the rightmost part of your topic or at least the right of the high cardinality part of your topic",
    "start": "909510",
    "end": "915210"
  },
  {
    "text": "structure",
    "start": "915210",
    "end": "917690"
  },
  {
    "text": "so I'll switch over to the next example here I'm using the example of telemetry",
    "start": "923480",
    "end": "929939"
  },
  {
    "text": "and the customer example here is connected VIN forms so let's say we are",
    "start": "929939",
    "end": "936060"
  },
  {
    "text": "a company who is responsible for opening up wind farms across the world and we",
    "start": "936060",
    "end": "941610"
  },
  {
    "text": "have to make business decisions on what are the places where we want to launch or we are open up new wind farms or what",
    "start": "941610",
    "end": "948809"
  },
  {
    "text": "are the places where we want to shut down the existing wind farms because they're not being really efficient now",
    "start": "948809",
    "end": "955439"
  },
  {
    "text": "the way we would do this is well we thought about deploying a lot of sensors",
    "start": "955439",
    "end": "960720"
  },
  {
    "text": "across the world on various locations on locations where we think we might have to open new wind farms or or the",
    "start": "960720",
    "end": "966959"
  },
  {
    "text": "locations where we already have existing wind farms and now these sensors using",
    "start": "966959",
    "end": "972329"
  },
  {
    "text": "these sensors we want to collect data from these sensors us about the wind",
    "start": "972329",
    "end": "977639"
  },
  {
    "text": "speed or any parameters that help us decide on the business decisions that we",
    "start": "977639",
    "end": "982649"
  },
  {
    "text": "need to make and now that these sensors can collect that data this data will be",
    "start": "982649",
    "end": "987899"
  },
  {
    "text": "vast depending on how many we deploy and that vast amount of data needs to be",
    "start": "987899",
    "end": "993240"
  },
  {
    "text": "ingested somewhere into some sort of back-end storage solution so that we can",
    "start": "993240",
    "end": "998459"
  },
  {
    "text": "run our analytics engine and make those intelligent business decisions that we want to do like open to new wind farms",
    "start": "998459",
    "end": "1005389"
  },
  {
    "text": "on the right side of the screen and then take one off because it's not being efficient now again edom is IOT can be",
    "start": "1005389",
    "end": "1013040"
  },
  {
    "text": "used to pump and ingest that vast amounts of data at high throughput the",
    "start": "1013040",
    "end": "1018199"
  },
  {
    "text": "way this would work is you can have your sensors publish onto a topic called sensor / wind speed this is an example",
    "start": "1018199",
    "end": "1025220"
  },
  {
    "text": "and you can have an AWS iot rules engine rule configured to listen or for all the",
    "start": "1025220",
    "end": "1032928"
  },
  {
    "text": "messages coming onto that topic and then you can also have the rule to write to",
    "start": "1032929",
    "end": "1038120"
  },
  {
    "text": "create to have an action to write all those messages into Amazon Kinesis and then from Amazon Kinesis on boots you",
    "start": "1038120",
    "end": "1044480"
  },
  {
    "text": "can then do your whole analytics engine to do those business decisions we're not going to be focusing on what that",
    "start": "1044480",
    "end": "1050210"
  },
  {
    "text": "analytics engine looks like the focus here is how are we going to make sure that all these many sensors",
    "start": "1050210",
    "end": "1056120"
  },
  {
    "text": "that we have deployed across the world which are pumping data at a fast pace and volume how do we make sure that we",
    "start": "1056120",
    "end": "1062390"
  },
  {
    "text": "were able to capture and gather all that data and reliably dump it into our back-end service or storage solution so",
    "start": "1062390",
    "end": "1072110"
  },
  {
    "text": "let's look at the AWS IOT rule and what that would be look that would look like there's a sequel section of the rule and",
    "start": "1072110",
    "end": "1078620"
  },
  {
    "text": "the sequel section essentially saying that hey select everything star stands for whatever is in the payload so select",
    "start": "1078620",
    "end": "1084799"
  },
  {
    "text": "everything in the payload that's being published on that topic sensor slash wind speed and then the rule needs to be",
    "start": "1084799",
    "end": "1090950"
  },
  {
    "text": "enabled so the rule disabled is false obvious and then the next section is the actions the actions defines what needs",
    "start": "1090950",
    "end": "1098059"
  },
  {
    "text": "to be done when a message is published on this topic and here the action is configured to write this data into",
    "start": "1098059",
    "end": "1103730"
  },
  {
    "text": "Kinesis so there's a roll define to be able to write to Kinesis and then there",
    "start": "1103730",
    "end": "1108799"
  },
  {
    "text": "was a Kinesis stream that we configured for ourselves and the goal is to write it into that stream and then there is a",
    "start": "1108799",
    "end": "1114470"
  },
  {
    "text": "partition key to write that data into that Kinesis stream and if you look at",
    "start": "1114470",
    "end": "1119929"
  },
  {
    "text": "the partition key there is a substitution function that I use that I",
    "start": "1119929",
    "end": "1125360"
  },
  {
    "text": "use there and it's topic function the topic function is basically going to substitute whatever the topic that this",
    "start": "1125360",
    "end": "1133070"
  },
  {
    "text": "message has been published to for that rule in that location so essentially we're using the topic as the partition",
    "start": "1133070",
    "end": "1139039"
  },
  {
    "text": "key in this example now I don't know how",
    "start": "1139039",
    "end": "1144620"
  },
  {
    "text": "many of you are familiar with Amazon Kinesis a quick rundown basically Amazon Kinesis is a real-time data streaming",
    "start": "1144620",
    "end": "1150500"
  },
  {
    "text": "service you can use it to write data into it and you essentially create a stream and then you write data into the",
    "start": "1150500",
    "end": "1156200"
  },
  {
    "text": "stream and in order to kind of get the throughput Amazon Kinesis allows for",
    "start": "1156200",
    "end": "1161559"
  },
  {
    "text": "what they call as shards so you can write data grouped into shards and the partition key is essentially the the key",
    "start": "1161559",
    "end": "1169669"
  },
  {
    "text": "that is used to group the data into shards within an Amazon canoe so stream this basically allows for pumping large",
    "start": "1169669",
    "end": "1177169"
  },
  {
    "text": "volumes of data through Amazon Kinesis now let's try to design this problem a",
    "start": "1177169",
    "end": "1182840"
  },
  {
    "text": "little bit let's say we are the developers in this company you were building this solution we go kind of understand the",
    "start": "1182840",
    "end": "1189350"
  },
  {
    "text": "requirements and turns out that by 2020 we got to deploy 1 million sensors and",
    "start": "1189350",
    "end": "1194890"
  },
  {
    "text": "the the sensors are required to publish real-time data and fixed intervals of 50",
    "start": "1194890",
    "end": "1201380"
  },
  {
    "text": "seconds for the sake of this example so if you calculate the total rate of",
    "start": "1201380",
    "end": "1207220"
  },
  {
    "text": "messages globally across all the sensors that's 20,000 publishers per second into eight of this IOT now Amazon Kinesis B",
    "start": "1207220",
    "end": "1217700"
  },
  {
    "text": "has like I said shards and each shard in Amazon Kinesis basically supports up to",
    "start": "1217700",
    "end": "1223550"
  },
  {
    "text": "thousand write records per second this is from their public documentation so for twenty thousand writes per second",
    "start": "1223550",
    "end": "1229790"
  },
  {
    "text": "assuming each right causes results in a right record that's about 20 shots again",
    "start": "1229790",
    "end": "1235250"
  },
  {
    "text": "simple math so what do we do well we go ahead and purchase the capacity or we go",
    "start": "1235250",
    "end": "1241790"
  },
  {
    "text": "ahead and basically provision the capacity of 20 shards and Amazon Kinesis because we know that's the amount of capacity we need to pump this data into",
    "start": "1241790",
    "end": "1248690"
  },
  {
    "text": "and then of our sensors go they go and publish on that topic sensor / wind",
    "start": "1248690",
    "end": "1254360"
  },
  {
    "text": "speed and what happens because the partition key is just the topic itself",
    "start": "1254360",
    "end": "1260180"
  },
  {
    "text": "and that's the partition key that's used to write into a particular shard increases unfortunately it all ends up",
    "start": "1260180",
    "end": "1267710"
  },
  {
    "text": "in going into one single chart so we did it all the hard work and we said how we",
    "start": "1267710",
    "end": "1273230"
  },
  {
    "text": "need to provision this much of capacity kept that in place but guess what when the sensors start publishing most of",
    "start": "1273230",
    "end": "1279020"
  },
  {
    "text": "that traffic gets throttled because all the capacity is not being used uniformly",
    "start": "1279020",
    "end": "1285370"
  },
  {
    "text": "so again how do we distribute our rights",
    "start": "1285730",
    "end": "1290799"
  },
  {
    "text": "think of high cardinality for your rights think of ways in which you can spread",
    "start": "1291730",
    "end": "1297470"
  },
  {
    "text": "that workload evenly across the shots a double is IOT rules engine supports more",
    "start": "1297470",
    "end": "1303230"
  },
  {
    "text": "functions or substitution functions which actually help you get that like you could use the client ID function",
    "start": "1303230",
    "end": "1308600"
  },
  {
    "text": "where the client ID is basically the client ID of the of the device that's publishing and if you had million",
    "start": "1308600",
    "end": "1314960"
  },
  {
    "text": "clients or a million sensors that would be million client IDs so it has a high cardinality or simple",
    "start": "1314960",
    "end": "1320990"
  },
  {
    "text": "you could also choose to use a new UID every time a message is published even in that case you would get a high",
    "start": "1320990",
    "end": "1326420"
  },
  {
    "text": "cardinality for your partition keys and once you have a high cardinality for your partition keys it allows for a",
    "start": "1326420",
    "end": "1332809"
  },
  {
    "text": "uniform workload across all the shards in your Amazon Kinesis stream so that",
    "start": "1332809",
    "end": "1339050"
  },
  {
    "text": "was a problem in our current in the current topic that we the rule sorry we configured a quick fix is change that",
    "start": "1339050",
    "end": "1346340"
  },
  {
    "text": "into client ID or new UID and that would help solve the problem so the key",
    "start": "1346340",
    "end": "1357590"
  },
  {
    "text": "takeaways from here is that basically when you have use cases where you want",
    "start": "1357590",
    "end": "1362630"
  },
  {
    "text": "to pump a large amounts of data with high true put into a back-end downstream service first of all make sure that you",
    "start": "1362630",
    "end": "1368570"
  },
  {
    "text": "have enough capacity for that service that you're writing this data into make sure you've provision that capacity too",
    "start": "1368570",
    "end": "1373940"
  },
  {
    "text": "once you've provision that capacity make sure that the access key is that you're using to write this data into that",
    "start": "1373940",
    "end": "1380360"
  },
  {
    "text": "provision capacity is evenly spread out across all the the capacity that you",
    "start": "1380360",
    "end": "1385460"
  },
  {
    "text": "have configured for that downstream service I chose the example of Amazon Kinesis here but the same principle will",
    "start": "1385460",
    "end": "1391490"
  },
  {
    "text": "apply for any downstream service like take for example Amazon DynamoDB even in that case you want to make sure that",
    "start": "1391490",
    "end": "1397370"
  },
  {
    "text": "your table that you're writing this data into has the required provision capacity to be able to take those rights and the",
    "start": "1397370",
    "end": "1405170"
  },
  {
    "text": "primary key for your table should be chosen in such a way that it has a high cardinality so that the the right",
    "start": "1405170",
    "end": "1412130"
  },
  {
    "text": "workload is evenly distributed across that table",
    "start": "1412130",
    "end": "1416470"
  },
  {
    "text": "so now we're on to the third example here I chose the example of device data",
    "start": "1425090",
    "end": "1431909"
  },
  {
    "text": "delivery and the customer use case has connected cars I'm pretty excited about",
    "start": "1431909",
    "end": "1437789"
  },
  {
    "text": "connected cars come wait to see more of them on the roads but anyway for this example the use case I have is we are",
    "start": "1437789",
    "end": "1445559"
  },
  {
    "text": "company now which make connected cars that's pretty cool and we have this requirement where there's a common set",
    "start": "1445559",
    "end": "1453149"
  },
  {
    "text": "of configuration or a common set of data that all our cars need to function correctly and we have a back-end service",
    "start": "1453149",
    "end": "1459090"
  },
  {
    "text": "which is able to bundle all the device settings or common set of files and into",
    "start": "1459090",
    "end": "1464700"
  },
  {
    "text": "some sort of a data bundle and the this back in service now needs to push this data mental to all the devices in the",
    "start": "1464700",
    "end": "1471389"
  },
  {
    "text": "field or all the cars in this case either besid comes in the picture you",
    "start": "1471389",
    "end": "1478379"
  },
  {
    "text": "could use a SS IO T to do that in the way that we work is you can have all your cars subscribe to a topic called",
    "start": "1478379",
    "end": "1484860"
  },
  {
    "text": "car / common content for example and then now you can have your back-end",
    "start": "1484860",
    "end": "1492330"
  },
  {
    "text": "service push this data into the data bundle into that topic and then a SS IO",
    "start": "1492330",
    "end": "1498690"
  },
  {
    "text": "T will basically deliver that message to all the subscribers on that topic but",
    "start": "1498690",
    "end": "1507360"
  },
  {
    "text": "there's one of the cars the dual in there is actually driving in the mountains and he's not connected to the",
    "start": "1507360",
    "end": "1514139"
  },
  {
    "text": "Internet so obviously he's not connected to a Wi-Fi and he's not subscribed to",
    "start": "1514139",
    "end": "1519360"
  },
  {
    "text": "that topic in that case the car would not get that message and it won't be",
    "start": "1519360",
    "end": "1524610"
  },
  {
    "text": "able to function correctly until it actually gets that data bundle that it needs to get so how does that offline",
    "start": "1524610",
    "end": "1533129"
  },
  {
    "text": "car get the data eventually obviously this data needs to be stored somewhere",
    "start": "1533129",
    "end": "1539249"
  },
  {
    "text": "so that when the car comes back online it's able to fetch that information from",
    "start": "1539249",
    "end": "1544379"
  },
  {
    "text": "that store state and be able to come up to speed with the rest of the cars in",
    "start": "1544379",
    "end": "1549389"
  },
  {
    "text": "the field thank shadows so talked about what things shadows are",
    "start": "1549389",
    "end": "1555360"
  },
  {
    "text": "it's the virtual representation of the content of the device in the cloud and this is something that we can use so",
    "start": "1555360",
    "end": "1561930"
  },
  {
    "text": "I'll change the example I mean in the same example how the setup is laid out instead of the backend server publishing",
    "start": "1561930",
    "end": "1568680"
  },
  {
    "text": "onto a topic a random topic instead it could actually store or push this data",
    "start": "1568680",
    "end": "1575070"
  },
  {
    "text": "into a common thing shadow and then the",
    "start": "1575070",
    "end": "1580620"
  },
  {
    "text": "cars which are connected online can once in a while fetch the information depending on the requirement how fast",
    "start": "1580620",
    "end": "1586980"
  },
  {
    "text": "they need that information from that thing's shadow and then get themselves up to speed with that data and this guy",
    "start": "1586980",
    "end": "1595140"
  },
  {
    "text": "in the mountains once he comes back to the real life and once it's connected back to the Internet as part of that",
    "start": "1595140",
    "end": "1601170"
  },
  {
    "text": "connection back to aw IOT it can also make sure that it fetches the latest shadow content and get itself up to",
    "start": "1601170",
    "end": "1607710"
  },
  {
    "text": "speed seems legit and seems that it will",
    "start": "1607710",
    "end": "1613470"
  },
  {
    "text": "work but there's actually a pretty big problem with the set up and the main key",
    "start": "1613470",
    "end": "1619620"
  },
  {
    "text": "takeaway here is that you don't want to be using shade shadows let's see what really happens here so all the five cars",
    "start": "1619620",
    "end": "1626700"
  },
  {
    "text": "which were connected they would subscribe to the shadow a common content / get / accepted topic that's the topic",
    "start": "1626700",
    "end": "1633960"
  },
  {
    "text": "where aw IOT will deliver the shadow documents when a device requests for one",
    "start": "1633960",
    "end": "1639440"
  },
  {
    "text": "you know the sixth car comes online it tries to fetch the shadow document and the way it would do it is it would",
    "start": "1639440",
    "end": "1645840"
  },
  {
    "text": "publish a message onto common content / get topic some of you probably already",
    "start": "1645840",
    "end": "1651480"
  },
  {
    "text": "guessed it what's going to happen is all the other cars which were also subscribe to the get accepted topic will also",
    "start": "1651480",
    "end": "1658140"
  },
  {
    "text": "receive the shadow content when you have six cars it doesn't really matter right",
    "start": "1658140",
    "end": "1663570"
  },
  {
    "text": "I mean you probably won't even notice that this was happening but what if you had million cars and what if once in a",
    "start": "1663570",
    "end": "1669600"
  },
  {
    "text": "while one of those cars is fetching or trying to fetch the shadow content all the other million cars will also get it",
    "start": "1669600",
    "end": "1675840"
  },
  {
    "text": "and if one car every few minutes is going to do it across all those million then you're causing an exponential",
    "start": "1675840",
    "end": "1683960"
  },
  {
    "text": "avalanche of messages in your system so obviously there's a not gonna scale",
    "start": "1683960",
    "end": "1689490"
  },
  {
    "text": "once you have millions of cars and two if you were expecting the volume of messages to run in your network to be X",
    "start": "1689490",
    "end": "1696540"
  },
  {
    "text": "you will actually see a million times of that volume so what's the fix again",
    "start": "1696540",
    "end": "1704700"
  },
  {
    "text": "think of high cardinality think of high carnality even for your thing shadows and the best high cardinality that you",
    "start": "1704700",
    "end": "1711210"
  },
  {
    "text": "can get for your thing shadows is have at least one thing shadow per device and",
    "start": "1711210",
    "end": "1716840"
  },
  {
    "text": "try to avoid having any shade shadows at all and the way these this would work is",
    "start": "1716840",
    "end": "1723300"
  },
  {
    "text": "now that your car has its own thing shadow it can always make sure that it keeps in sync with that thing shadow",
    "start": "1723300",
    "end": "1729030"
  },
  {
    "text": "whenever it comes online and whenever it needs to make sure that it's up to speed and then you can have the responsibility",
    "start": "1729030",
    "end": "1735600"
  },
  {
    "text": "of pushing that common data bundle to all those things shadows for your back-end service or back-end server to",
    "start": "1735600",
    "end": "1741390"
  },
  {
    "text": "do that so now your back-end server can push that bundle to all the shadows some sort of like a way in which you push",
    "start": "1741390",
    "end": "1748340"
  },
  {
    "text": "data to patil device and then the the car can occasionally fetch from the",
    "start": "1748340",
    "end": "1755640"
  },
  {
    "text": "shadow document and make sure that it's up to speed with the cloud state this",
    "start": "1755640",
    "end": "1761760"
  },
  {
    "text": "will scare for how many other cars you have in the network and your field and this will also not cause the issues",
    "start": "1761760",
    "end": "1767700"
  },
  {
    "text": "about overloaded messages that we talked about so the key takeaway here is",
    "start": "1767700",
    "end": "1773550"
  },
  {
    "text": "basically avoid using shared shadows and think of high cardinality for them at",
    "start": "1773550",
    "end": "1779490"
  },
  {
    "text": "least have one thing shadow per device that's the best I cardinality you can get I have excuse me I have now which",
    "start": "1779490",
    "end": "1790350"
  },
  {
    "text": "the last example here I'm going to use the example of broadcast notifications",
    "start": "1790350",
    "end": "1796140"
  },
  {
    "text": "and the customer use case here is mobile advertising so now let's say we're a",
    "start": "1796140",
    "end": "1805260"
  },
  {
    "text": "company which now builds mobile applications and we have a back-end",
    "start": "1805260",
    "end": "1811920"
  },
  {
    "text": "advertising platform service which is responsible for pushing real-time ads",
    "start": "1811920",
    "end": "1818390"
  },
  {
    "text": "into our mobile application for users who are using our application at that point of time and the way we",
    "start": "1818390",
    "end": "1825580"
  },
  {
    "text": "want to do this is we want to make sure that we kind of group our users who are",
    "start": "1825580",
    "end": "1831279"
  },
  {
    "text": "using our application in some sort of groups and the dimension for what those groups are can be anything and it's not",
    "start": "1831279",
    "end": "1837250"
  },
  {
    "text": "really important it could be based on geolocation could be based on something",
    "start": "1837250",
    "end": "1842559"
  },
  {
    "text": "else again not important but the goal is that we know user set groups and we want",
    "start": "1842559",
    "end": "1849970"
  },
  {
    "text": "to push targeted messages or targeted ads to those users who are using our application now the example for example",
    "start": "1849970",
    "end": "1859509"
  },
  {
    "text": "in this case let's say if we want we have a lot of users using our application in the Las Vegas area and we",
    "start": "1859509",
    "end": "1866470"
  },
  {
    "text": "want to push our targeted ad to those users almost real-time you could again",
    "start": "1866470",
    "end": "1876220"
  },
  {
    "text": "use either this IOT kind of Wobblies and the way it would work is those users",
    "start": "1876220",
    "end": "1882490"
  },
  {
    "text": "can subscribe to the topic real-time based on their location and in this case",
    "start": "1882490",
    "end": "1887919"
  },
  {
    "text": "they would subscribe to add / CD / Las Vegas and now your server can publish on",
    "start": "1887919",
    "end": "1893919"
  },
  {
    "text": "that topic and all the devices that were subscribed to that topic will receive that message so when you are using the",
    "start": "1893919",
    "end": "1900519"
  },
  {
    "text": "application online you would get that notification or that that particular ad so the pattern in which this messaging",
    "start": "1900519",
    "end": "1907179"
  },
  {
    "text": "like this whole messaging pattern works internally we call it a fan-out essentially because when a message comes",
    "start": "1907179",
    "end": "1913600"
  },
  {
    "text": "on a topic it abyss IIT has to replicate that message to all the subscribers on that topic and and it needs to kind of",
    "start": "1913600",
    "end": "1921129"
  },
  {
    "text": "fan that message out to all the subscribers so like we've done in our",
    "start": "1921129",
    "end": "1926649"
  },
  {
    "text": "previous examples let's do a quick design for this let's say the number of messages that we need to fan out or in",
    "start": "1926649",
    "end": "1933129"
  },
  {
    "text": "other words the number of messages which are subscribed to this topic or 1 million and then the second requirement",
    "start": "1933129",
    "end": "1940659"
  },
  {
    "text": "which is I think is the key requirement here is the total time that we want to",
    "start": "1940659",
    "end": "1945759"
  },
  {
    "text": "have this message delivered to all the subscribers is less than 60 seconds now",
    "start": "1945759",
    "end": "1952000"
  },
  {
    "text": "I say this is a very key requirement because this actually makes the problem really really hard today you have 1 million",
    "start": "1952000",
    "end": "1958840"
  },
  {
    "text": "users using your application tomorrow you could have 10 million users share applications very popular and then that",
    "start": "1958840",
    "end": "1965500"
  },
  {
    "text": "can go into hundreds of millions but the time to deliver this message to those",
    "start": "1965500",
    "end": "1971710"
  },
  {
    "text": "devices is not gonna increase if not it probably will even reduce so that 60",
    "start": "1971710",
    "end": "1977770"
  },
  {
    "text": "seconds SLA or delivery latency has to be kept intact but your usage of number",
    "start": "1977770",
    "end": "1984280"
  },
  {
    "text": "of devices can keep growing as you get more usage so that makes the problem",
    "start": "1984280",
    "end": "1989620"
  },
  {
    "text": "really hard how do i how do we make this work well either this iot basically fans",
    "start": "1989620",
    "end": "1996820"
  },
  {
    "text": "out your messages on a topic at roughly at a rate of 10,000 messages per second",
    "start": "1996820",
    "end": "2002010"
  },
  {
    "text": "to the subscribers so for 1 million",
    "start": "2002010",
    "end": "2007050"
  },
  {
    "text": "subscribers this is going to take 100 seconds not good we wanted this to be in",
    "start": "2007050",
    "end": "2013380"
  },
  {
    "text": "60 seconds what are you gonna do so this",
    "start": "2013380",
    "end": "2018750"
  },
  {
    "text": "was the original set up what if we had a separate set up where the further group",
    "start": "2018750",
    "end": "2026430"
  },
  {
    "text": "our users into two topics as opposed to one and then have our application",
    "start": "2026430",
    "end": "2032430"
  },
  {
    "text": "randomly pick one of the two topics to subscribe when they come online and make sure that our users are evenly",
    "start": "2032430",
    "end": "2039150"
  },
  {
    "text": "distributed across those topics now we can make our back in advertising",
    "start": "2039150",
    "end": "2045900"
  },
  {
    "text": "platform or service to publish the message on both the topics in parallel and what will happen is AWS iot will",
    "start": "2045900",
    "end": "2053490"
  },
  {
    "text": "take that message on both the topics and individually fan them out to those subscribers in parallel so going back to",
    "start": "2053490",
    "end": "2063780"
  },
  {
    "text": "the math here now you have two topics topic one will have roughly about 500,000 subscribers because assuming we",
    "start": "2063780",
    "end": "2070110"
  },
  {
    "text": "are capable of making sure that our subscribers are evenly distributed across those topics so for 500 thousand",
    "start": "2070110",
    "end": "2076260"
  },
  {
    "text": "subscribers it would take 50 seconds for the other five thousand subscribers on group 2 topic will also take 50 seconds",
    "start": "2076260",
    "end": "2082919"
  },
  {
    "text": "but since this happens in parallel this would actually finish in 50 seconds for your 1 million users",
    "start": "2082919",
    "end": "2088878"
  },
  {
    "text": "so the example I took is only for 1 million but if you had 10 million or 100 million the same principle still applies",
    "start": "2088879",
    "end": "2094679"
  },
  {
    "text": "as you grow in your user base but if your requirement is a strict requirement in terms of making sure that the message",
    "start": "2094679",
    "end": "2101519"
  },
  {
    "text": "gets delivered on a certain period of time work backwards from that number and figure out what ways in which you can",
    "start": "2101519",
    "end": "2107759"
  },
  {
    "text": "think of high cardinality for your topics to be able to distribute your subscribers on those topics to get that",
    "start": "2107759",
    "end": "2113369"
  },
  {
    "text": "desired release so the key takeaway here is basically shine your subscribers",
    "start": "2113369",
    "end": "2119400"
  },
  {
    "text": "across your topics if you had strict desire as the layers in terms of broadcast notifications to your users",
    "start": "2119400",
    "end": "2127130"
  },
  {
    "text": "with that I'm going to hand it over to Vinay to talk about Amazon music and how",
    "start": "2127640",
    "end": "2132839"
  },
  {
    "text": "they used the broadcast notification pattern in their example thank you thank",
    "start": "2132839",
    "end": "2145470"
  },
  {
    "text": "our good afternoon everybody my name is Vinay Johnson I'm a software never with",
    "start": "2145470",
    "end": "2150569"
  },
  {
    "text": "Amazon music I'm going to talk about how we leverage in a blessed IOT service",
    "start": "2150569",
    "end": "2155839"
  },
  {
    "text": "using that in a broadcast pattern that didn't get just mentioned to solve one",
    "start": "2155839",
    "end": "2161910"
  },
  {
    "text": "of our use cases earlier this year so just a little bit of background Amazon",
    "start": "2161910",
    "end": "2167099"
  },
  {
    "text": "music offers a music subscription service for Amazon Prime and Amazon",
    "start": "2167099",
    "end": "2173249"
  },
  {
    "text": "music unlimited subscribers so that they can get access to millions of tracks in our catalog earlier this year we",
    "start": "2173249",
    "end": "2185579"
  },
  {
    "text": "launched audio streaming of live soccer games from Bundesliga and other soccer",
    "start": "2185579",
    "end": "2190589"
  },
  {
    "text": "leagues on our app this presented a different challenge for us the challenge",
    "start": "2190589",
    "end": "2197339"
  },
  {
    "text": "was to be able to provide near real-time updates for all the events that are happening on the game to all the",
    "start": "2197339",
    "end": "2204299"
  },
  {
    "text": "connected users listening to the game at the same time now these events could be",
    "start": "2204299",
    "end": "2209819"
  },
  {
    "text": "a goal a red card or maybe even a substitution because the user is",
    "start": "2209819",
    "end": "2216930"
  },
  {
    "text": "listening to the audio stream you want to make sure they're able to see this live updates on their or web screens at the same time without",
    "start": "2216930",
    "end": "2223470"
  },
  {
    "text": "a lot of lag next I'm going to talk about these browse views like the",
    "start": "2223470",
    "end": "2229080"
  },
  {
    "text": "customer actually sees so first here's an example of games page we call it this",
    "start": "2229080",
    "end": "2235350"
  },
  {
    "text": "page gives you the complete schedule of all the games whether they're upcoming or whether they have already passed so",
    "start": "2235350",
    "end": "2241850"
  },
  {
    "text": "for the whole season you can go and look at all the games what their current",
    "start": "2241850",
    "end": "2247260"
  },
  {
    "text": "statuses so it won't give you the detail view but it really tell you what the current score of the game is and what",
    "start": "2247260",
    "end": "2253710"
  },
  {
    "text": "the status of time clocks are game clock is secondly is the now playing page",
    "start": "2253710",
    "end": "2260100"
  },
  {
    "text": "where you can look at the detailed view of any game it will give you the stats",
    "start": "2260100",
    "end": "2265620"
  },
  {
    "text": "it will give you all the events that have happened in the game and you can also start the audio stream for the game",
    "start": "2265620",
    "end": "2272040"
  },
  {
    "text": "now we want to make sure that all the updates that happen reach both the",
    "start": "2272040",
    "end": "2277440"
  },
  {
    "text": "Browse view for all the connected users now whatever I design goes for this",
    "start": "2277440",
    "end": "2283980"
  },
  {
    "text": "real-time update platform you wanted to make sure that from the time that an",
    "start": "2283980",
    "end": "2292080"
  },
  {
    "text": "event happens in the game to the time that the last subscriber or the last user gets that update on their phone or",
    "start": "2292080",
    "end": "2298320"
  },
  {
    "text": "on web the total elapsed time should be less than 60 seconds for the reasons",
    "start": "2298320",
    "end": "2304260"
  },
  {
    "text": "that I mentioned earlier second important criteria was obviously scalability at Amazon we build",
    "start": "2304260",
    "end": "2311160"
  },
  {
    "text": "everything at scale we want to make sure whatever platform we end up using is able to handle that traffic so we",
    "start": "2311160",
    "end": "2318420"
  },
  {
    "text": "initially our goal was to for the platform to be able to handle at least up to a million users then important",
    "start": "2318420",
    "end": "2325710"
  },
  {
    "text": "criteria number three development support so we have apps available on Android iOS web we want to make sure",
    "start": "2325710",
    "end": "2333150"
  },
  {
    "text": "whatever platform you went work could easily be integrated with all of these available platforms so I'm going to talk",
    "start": "2333150",
    "end": "2341370"
  },
  {
    "text": "about the different paradigms that we considered while looking for a solution for this problem so push was this poll",
    "start": "2341370",
    "end": "2348990"
  },
  {
    "text": "so everybody here and pretty sure knows about both of platforms both the",
    "start": "2348990",
    "end": "2354690"
  },
  {
    "text": "paradigms we're going to talk about pulses so Poole is a traditional client service",
    "start": "2354690",
    "end": "2360240"
  },
  {
    "text": "interaction model that everybody is aware of where a client initiates an",
    "start": "2360240",
    "end": "2365759"
  },
  {
    "text": "action they call RS service and the red service comes back with a response which gives you the next state of the user or",
    "start": "2365759",
    "end": "2372269"
  },
  {
    "text": "the customer right how would that solve this particular problem because in this case the client",
    "start": "2372269",
    "end": "2380819"
  },
  {
    "text": "is not aware whether an update on a game has happened or not so the only way to update to solve this",
    "start": "2380819",
    "end": "2386730"
  },
  {
    "text": "problem using this model is for the clients to be able to pull the API every",
    "start": "2386730",
    "end": "2393930"
  },
  {
    "text": "few seconds or minutes right what would this mean this would mean that I will",
    "start": "2393930",
    "end": "2402630"
  },
  {
    "text": "have to build a rest service that all of my clients will keep polling what are",
    "start": "2402630",
    "end": "2407730"
  },
  {
    "text": "the disadvantages that you can see with this model the two main disadvantages I want to talk about here one is cost so",
    "start": "2407730",
    "end": "2416670"
  },
  {
    "text": "in this model all the clients are calling your s service almost at the",
    "start": "2416670",
    "end": "2421799"
  },
  {
    "text": "same time so in the worst case scenario you have to scale up for that rest",
    "start": "2421799",
    "end": "2428130"
  },
  {
    "text": "service to be able to handle up to a million TPS and at other times it's sitting idle and nobody is calling the",
    "start": "2428130",
    "end": "2435089"
  },
  {
    "text": "service so it's unused hardware which is not ideal second latency let's say I set",
    "start": "2435089",
    "end": "2442829"
  },
  {
    "text": "up the poll mechanism to pull the rest service every 60 seconds now this has guaranteed that none of my users will",
    "start": "2442829",
    "end": "2450960"
  },
  {
    "text": "get that update before those 60 seconds are over so it ensures that all that",
    "start": "2450960",
    "end": "2456359"
  },
  {
    "text": "live updates would be delayed by at least 60 seconds again doesn't work for",
    "start": "2456359",
    "end": "2462509"
  },
  {
    "text": "us that's why we considered the push mechanism for this so with push the idea",
    "start": "2462509",
    "end": "2469680"
  },
  {
    "text": "is like clients are always connected to a back-end push service through a web",
    "start": "2469680",
    "end": "2475319"
  },
  {
    "text": "socket so a double siit supports the use of web sockets with mqtt protocol and",
    "start": "2475319",
    "end": "2483140"
  },
  {
    "text": "here the client the onus is on the post service to provide any update",
    "start": "2483140",
    "end": "2489420"
  },
  {
    "text": "it and push it down to all the subscribe users this is where we thought this",
    "start": "2489420",
    "end": "2495329"
  },
  {
    "text": "could help us this has none of the disadvantage that we talked about with Paul Martin we don't have to scale our",
    "start": "2495329",
    "end": "2501900"
  },
  {
    "text": "rest service to handle the million TPS and it just works when it's required now",
    "start": "2501900",
    "end": "2508890"
  },
  {
    "text": "I'm gonna discuss the very simplified version of the architecture that we",
    "start": "2508890",
    "end": "2515819"
  },
  {
    "text": "entered about building using the a SS IOT platform that served our city well",
    "start": "2515819",
    "end": "2521599"
  },
  {
    "text": "so we used Amazon cognitive service for authentication or authorization purposes",
    "start": "2521599",
    "end": "2528380"
  },
  {
    "text": "so that all the devices could connect to the a SS IOT service now a SS IOT is a",
    "start": "2528380",
    "end": "2537720"
  },
  {
    "text": "pub/sub model publisher subscriber model so somebody is a publisher and somebody's subscribing so here we're all",
    "start": "2537720",
    "end": "2545339"
  },
  {
    "text": "the devices would be subscribed to certain topics and my publisher would",
    "start": "2545339",
    "end": "2551520"
  },
  {
    "text": "then publish to these topics and all of my fronting I should I delegate these updates that was a very simplified view",
    "start": "2551520",
    "end": "2560160"
  },
  {
    "text": "of how we achieve this it's not what topic schemas that we considered for",
    "start": "2560160",
    "end": "2565530"
  },
  {
    "text": "this architecture now as I mentioned a SS IOT is using pub/sub IT topics are",
    "start": "2565530",
    "end": "2574230"
  },
  {
    "text": "essentially a function that defines what information each subscriber gets right",
    "start": "2574230",
    "end": "2581940"
  },
  {
    "text": "so we considered three different topic schemas for this excuse me first one one",
    "start": "2581940",
    "end": "2589230"
  },
  {
    "text": "topic for game second one topic from multiple games and third one topic for all the games I'm",
    "start": "2589230",
    "end": "2596160"
  },
  {
    "text": "gonna now briefly run through all these three scenarios and how they could be useful so first of all single topic for",
    "start": "2596160",
    "end": "2605010"
  },
  {
    "text": "game which means that I'll only publish updates for a single game on one topic",
    "start": "2605010",
    "end": "2611069"
  },
  {
    "text": "so one topics created per game so look",
    "start": "2611069",
    "end": "2616710"
  },
  {
    "text": "at it from both ends from both publisher and subscriber from publisher send the",
    "start": "2616710",
    "end": "2622170"
  },
  {
    "text": "publisher needs to know which topic doesn't need to publish the data on for that particular game so",
    "start": "2622170",
    "end": "2628380"
  },
  {
    "text": "added complexity because it needs to keep track of all the topics that it needs to use to publish data on on the",
    "start": "2628380",
    "end": "2636370"
  },
  {
    "text": "subscriber side the device which needs updates for all the games for a forum",
    "start": "2636370",
    "end": "2643090"
  },
  {
    "text": "mentioned games page would need to manage maybe up to 300 subscriptions for",
    "start": "2643090",
    "end": "2649060"
  },
  {
    "text": "topics because you know they could be up to 300 400 games in a season again added",
    "start": "2649060",
    "end": "2655690"
  },
  {
    "text": "complexity on the front end which is the subscriber side in this case let's talk",
    "start": "2655690",
    "end": "2661900"
  },
  {
    "text": "about single topic from multiple games we could we also consider pooling up",
    "start": "2661900",
    "end": "2667080"
  },
  {
    "text": "games into into pools so that updates",
    "start": "2667080",
    "end": "2673150"
  },
  {
    "text": "for multiple games could be published on one topic now this is very similar to the previous slide but the only",
    "start": "2673150",
    "end": "2680350"
  },
  {
    "text": "difference is that multiple updates are being pushed on one topic for multiple games on the publisher side the",
    "start": "2680350",
    "end": "2687220"
  },
  {
    "text": "complexity remains almost the same on the subscriber side against complexity remains the same because they need",
    "start": "2687220",
    "end": "2693970"
  },
  {
    "text": "updates for all the games now this is the scheme that we ended up using where",
    "start": "2693970",
    "end": "2699970"
  },
  {
    "text": "we just needed one topic and that would contain updates for all the games that",
    "start": "2699970",
    "end": "2705280"
  },
  {
    "text": "are happening so on the publisher side we could reduce the complexity we don't",
    "start": "2705280",
    "end": "2711400"
  },
  {
    "text": "need to keep track of all the topics that could be used publish records have to publish multiple updates put them in",
    "start": "2711400",
    "end": "2718780"
  },
  {
    "text": "one message and publish that to one IOT topic and same on the subscriber side",
    "start": "2718780",
    "end": "2723940"
  },
  {
    "text": "where subscriber does only needs to maintain one subscription for one topic",
    "start": "2723940",
    "end": "2729010"
  },
  {
    "text": "and it gets all the updates to that one topic itself so this worked out really well for us I'm going to talk about how",
    "start": "2729010",
    "end": "2737530"
  },
  {
    "text": "we going to scale so this worked out for us for the number of users that we had",
    "start": "2737530",
    "end": "2742540"
  },
  {
    "text": "at that time but this is not going to work as we scale as we grow our",
    "start": "2742540",
    "end": "2749320"
  },
  {
    "text": "application as more consumers use our platform why not because a SS IOT",
    "start": "2749320",
    "end": "2757150"
  },
  {
    "text": "as a fan-out latency / publish right which means that for each panel it takes",
    "start": "2757150",
    "end": "2766420"
  },
  {
    "text": "X amount of time now if more subscribers subscribe to that one particular topic",
    "start": "2766420",
    "end": "2772680"
  },
  {
    "text": "it would keep adding on to that latency which is not acceptable we want that latency to be within those certain",
    "start": "2772680",
    "end": "2778510"
  },
  {
    "text": "bounds I discussed earlier 60 seconds so what we can do is create multiple topics and pull devices into those topics which",
    "start": "2778510",
    "end": "2788109"
  },
  {
    "text": "means certain devices would get updates from one topic other devices would get updates from another topic so none of my",
    "start": "2788109",
    "end": "2795160"
  },
  {
    "text": "devices are creating multiple subscriptions they know what topic they need to subscribe to and but the",
    "start": "2795160",
    "end": "2800829"
  },
  {
    "text": "complexity increases on the publisher side here because now my publisher has to publish the same updates to these",
    "start": "2800829",
    "end": "2807400"
  },
  {
    "text": "multiple topics finally but this solves a problem we were able to scale now so",
    "start": "2807400",
    "end": "2815859"
  },
  {
    "text": "next I'm going to redo a recap and talk about how AWS IOT hub does solve this",
    "start": "2815859",
    "end": "2822760"
  },
  {
    "text": "problem one the most important factor was latency we were able to do this",
    "start": "2822760",
    "end": "2829900"
  },
  {
    "text": "within the sixty second constraint that we had set up for ourselves thanks so thinker and his team they worked with us",
    "start": "2829900",
    "end": "2836230"
  },
  {
    "text": "really well second message size so AWS IOT support some ssize of up to 128 828",
    "start": "2836230",
    "end": "2844510"
  },
  {
    "text": "KB's which means that we could combine multiple updates for the game and",
    "start": "2844510",
    "end": "2850510"
  },
  {
    "text": "publish them as one message this reduces the complexity on the publisher side and",
    "start": "2850510",
    "end": "2856390"
  },
  {
    "text": "also saved us on cost because there's a cost associated with each publish as well now authentication and",
    "start": "2856390",
    "end": "2864549"
  },
  {
    "text": "authorization are really important so we were able to integrate with Amazon Cognito and leverage that integration",
    "start": "2864549",
    "end": "2870940"
  },
  {
    "text": "with ad ability to support authentication the one of the most",
    "start": "2870940",
    "end": "2877240"
  },
  {
    "text": "important factors where a duplicity really wins and won for us was the",
    "start": "2877240",
    "end": "2883569"
  },
  {
    "text": "ability to do rapid prototyping because AWS IOT is a fully managed service and",
    "start": "2883569",
    "end": "2888819"
  },
  {
    "text": "it already has SDKs of for all of the platforms that I discussed earlier Android iOS web we",
    "start": "2888819",
    "end": "2895160"
  },
  {
    "text": "were able to create a prototype within three weeks which helped us do a proof",
    "start": "2895160",
    "end": "2900860"
  },
  {
    "text": "of concept and get out all the bugs that we we thought of initially in our design",
    "start": "2900860",
    "end": "2907750"
  },
  {
    "text": "so this is how we leverage a duplicity to build one of the very important",
    "start": "2907750",
    "end": "2913940"
  },
  {
    "text": "features that we launched earlier this year which is audio live streaming of soccer games on Amazon music app we're",
    "start": "2913940",
    "end": "2920000"
  },
  {
    "text": "in white then go back to talk about the key takeaways from this presentation",
    "start": "2920000",
    "end": "2926650"
  },
  {
    "text": "right so we're towards the end here I'm actually going to just do a quick recap",
    "start": "2931270",
    "end": "2936800"
  },
  {
    "text": "of all the takeaways we talked about for the examples and I'll open up for our",
    "start": "2936800",
    "end": "2942590"
  },
  {
    "text": "questions so basically we talked about four examples in the first example we talked about the connected TVs and why",
    "start": "2942590",
    "end": "2949190"
  },
  {
    "text": "it's convenient to use wild card subscriptions to consolidate your subscriptions especially if you have",
    "start": "2949190",
    "end": "2956330"
  },
  {
    "text": "like your device having to subscribe to hundreds of topics then we talked about",
    "start": "2956330",
    "end": "2961869"
  },
  {
    "text": "what is the good topic structure model especially when you have wild card subscriptions so if you have a lot",
    "start": "2961869",
    "end": "2967940"
  },
  {
    "text": "subscriptions you want to make sure that your wild card is towards the right of the high cardinality part of your topic",
    "start": "2967940",
    "end": "2973550"
  },
  {
    "text": "like the device ID in this case then we talked about the telemetry use case and",
    "start": "2973550",
    "end": "2978890"
  },
  {
    "text": "there we talked about what are the ways in which excuse me so we talked about",
    "start": "2978890",
    "end": "2984470"
  },
  {
    "text": "basically what you need to do to make sure that you have enough provision capacity for your downstream service",
    "start": "2984470",
    "end": "2991250"
  },
  {
    "text": "that you're writing this data into so the math behind that and then we talked",
    "start": "2991250",
    "end": "2996350"
  },
  {
    "text": "about what are the ways in which you can choose the access keys to write this data into the back-end service in order",
    "start": "2996350",
    "end": "3003340"
  },
  {
    "text": "to make sure that you have a uniform workload of Rights across that provision",
    "start": "3003340",
    "end": "3008470"
  },
  {
    "text": "capacity so think of high cardinality for your access keys then we talked",
    "start": "3008470",
    "end": "3015010"
  },
  {
    "text": "about think shadows and how I think shadows can be really helpful when your devices go online and offline in order",
    "start": "3015010",
    "end": "3021700"
  },
  {
    "text": "to make sure make themselves keep up to speed where what the state should be we talked about",
    "start": "3021700",
    "end": "3027230"
  },
  {
    "text": "why it is really dangerous to use shading shadows avoid it but if you want",
    "start": "3027230",
    "end": "3034340"
  },
  {
    "text": "to have your device's scale to millions and you want to use things shadows think of high cardinality for your thin",
    "start": "3034340",
    "end": "3040070"
  },
  {
    "text": "shadows as well and the best high cardinality you can get is have at least one thing shadow up a device and then",
    "start": "3040070",
    "end": "3046190"
  },
  {
    "text": "that will scale for how many other devices you need and in the last example we talked about a broadcast notification",
    "start": "3046190",
    "end": "3053390"
  },
  {
    "text": "pattern where you have a requirement to fan out your message and push to multiple and many millions of devices",
    "start": "3053390",
    "end": "3059720"
  },
  {
    "text": "with strict requirements and how fast that delivery needs to happen in those scenarios you could think about how you",
    "start": "3059720",
    "end": "3067070"
  },
  {
    "text": "can basically get high cardinality even for your topics to fan out and then have your subscribers get evenly distributed",
    "start": "3067070",
    "end": "3073970"
  },
  {
    "text": "across those topics and then have paralyzation kicking to the point where you can get the desired SLA for all the",
    "start": "3073970",
    "end": "3080810"
  },
  {
    "text": "devices to receive your notifications and lastly we talked Amazon music",
    "start": "3080810",
    "end": "3088010"
  },
  {
    "text": "actually gave their example of how they build this super cool application and utilize the broadcast notification",
    "start": "3088010",
    "end": "3094700"
  },
  {
    "text": "pattern using a tablet IOT I'm going to stop here and call it a day but we can",
    "start": "3094700",
    "end": "3101420"
  },
  {
    "text": "open up for questions we have a few more minutes and then I'll be available also in the hallways after this talk if you",
    "start": "3101420",
    "end": "3107210"
  },
  {
    "text": "want to kind of reach out and have one-on-one questions thank you",
    "start": "3107210",
    "end": "3116049"
  },
  {
    "text": "you",
    "start": "3118480",
    "end": "3120540"
  }
]