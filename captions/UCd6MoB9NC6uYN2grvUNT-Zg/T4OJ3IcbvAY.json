[
  {
    "start": "0",
    "end": "9000"
  },
  {
    "text": "hi I'm Brian so today I'm gonna talk to",
    "start": "30",
    "end": "2700"
  },
  {
    "text": "you guys a little bit around some",
    "start": "2700",
    "end": "4620"
  },
  {
    "text": "development and debugging techniques for",
    "start": "4620",
    "end": "6810"
  },
  {
    "text": "dotnet development AWS now one of the",
    "start": "6810",
    "end": "9840"
  },
  {
    "start": "9000",
    "end": "36000"
  },
  {
    "text": "common questions that customers come to",
    "start": "9840",
    "end": "12210"
  },
  {
    "text": "me with when I start talking to them",
    "start": "12210",
    "end": "13469"
  },
  {
    "text": "about running dog network loads in AWS",
    "start": "13469",
    "end": "15599"
  },
  {
    "text": "is you know I'm a Microsoft developer",
    "start": "15599",
    "end": "17850"
  },
  {
    "text": "why on earth would I consider AWS you",
    "start": "17850",
    "end": "20430"
  },
  {
    "text": "know there's Microsoft have got their",
    "start": "20430",
    "end": "22080"
  },
  {
    "text": "own cloud why would I not run it there",
    "start": "22080",
    "end": "24000"
  },
  {
    "text": "if it's a Microsoft Bob workload and I",
    "start": "24000",
    "end": "26789"
  },
  {
    "text": "want to show you guys today some of the",
    "start": "26789",
    "end": "28260"
  },
  {
    "text": "benefits that you get when you start",
    "start": "28260",
    "end": "29880"
  },
  {
    "text": "looking at running dotnet workloads in",
    "start": "29880",
    "end": "31679"
  },
  {
    "text": "their ws how we can do it how we can",
    "start": "31679",
    "end": "33690"
  },
  {
    "text": "debug and how we can operate so there",
    "start": "33690",
    "end": "36360"
  },
  {
    "start": "36000",
    "end": "73000"
  },
  {
    "text": "are three main sections of our take you",
    "start": "36360",
    "end": "38399"
  },
  {
    "text": "guys through today first I want to talk",
    "start": "38399",
    "end": "40260"
  },
  {
    "text": "about asp.net and what web applications",
    "start": "40260",
    "end": "42989"
  },
  {
    "text": "and an speed on it web apps look like",
    "start": "42989",
    "end": "44399"
  },
  {
    "text": "running them inside of AWS then we're",
    "start": "44399",
    "end": "46649"
  },
  {
    "text": "gonna go into a little bit of dotnet in",
    "start": "46649",
    "end": "47969"
  },
  {
    "text": "the service world so we're gonna talk to",
    "start": "47969",
    "end": "49739"
  },
  {
    "text": "how that can be used in lambda and we",
    "start": "49739",
    "end": "52199"
  },
  {
    "text": "can create sort of micro services and",
    "start": "52199",
    "end": "54480"
  },
  {
    "text": "those kinds of architectures on service",
    "start": "54480",
    "end": "56430"
  },
  {
    "text": "still using dotnet and lastly I want to",
    "start": "56430",
    "end": "59760"
  },
  {
    "text": "talk to some of the stuff we do in",
    "start": "59760",
    "end": "61370"
  },
  {
    "text": "logging and monitoring",
    "start": "61370",
    "end": "63090"
  },
  {
    "text": "in.net and some of the tools that we've",
    "start": "63090",
    "end": "65489"
  },
  {
    "text": "got that are specific to AWS which can",
    "start": "65489",
    "end": "67799"
  },
  {
    "text": "help you run those not Network loads and",
    "start": "67799",
    "end": "69750"
  },
  {
    "text": "gain some insight into what you're doing",
    "start": "69750",
    "end": "73100"
  },
  {
    "start": "73000",
    "end": "121000"
  },
  {
    "text": "so where can I run dotnet code in AWS if",
    "start": "73100",
    "end": "77520"
  },
  {
    "text": "I'm running full version of.net",
    "start": "77520",
    "end": "79140"
  },
  {
    "text": "I can run that on Windows servers on ec2",
    "start": "79140",
    "end": "81509"
  },
  {
    "text": "instances or I can use elastic Beanstalk",
    "start": "81509",
    "end": "84570"
  },
  {
    "text": "I can use Windows Server containers in",
    "start": "84570",
    "end": "86759"
  },
  {
    "text": "ECS so if I'm using container based",
    "start": "86759",
    "end": "88680"
  },
  {
    "text": "workloads for Windows the elastic",
    "start": "88680",
    "end": "90390"
  },
  {
    "text": "container service is an option if you're",
    "start": "90390",
    "end": "92850"
  },
  {
    "text": "looking at running dotnet core you can",
    "start": "92850",
    "end": "94890"
  },
  {
    "text": "run it pretty much anywhere because we",
    "start": "94890",
    "end": "97229"
  },
  {
    "text": "can run Linux compatible workloads more",
    "start": "97229",
    "end": "98790"
  },
  {
    "text": "or less anywhere in the stack and",
    "start": "98790",
    "end": "99960"
  },
  {
    "text": "there's a whole bunch of benefits to",
    "start": "99960",
    "end": "101070"
  },
  {
    "text": "that you know we go from hourly billing",
    "start": "101070",
    "end": "102869"
  },
  {
    "text": "down to per second so that's always cool",
    "start": "102869",
    "end": "105450"
  },
  {
    "text": "so Windows and Linux servers in ec2",
    "start": "105450",
    "end": "107909"
  },
  {
    "text": "Beanstalk we can use Fargate for",
    "start": "107909",
    "end": "110220"
  },
  {
    "text": "containers which means you can get away",
    "start": "110220",
    "end": "111509"
  },
  {
    "text": "from managing your container hosts and",
    "start": "111509",
    "end": "113670"
  },
  {
    "text": "just save run containers so that's cool",
    "start": "113670",
    "end": "116130"
  },
  {
    "text": "and lambda of course is where they can",
    "start": "116130",
    "end": "117689"
  },
  {
    "text": "run dotnet core as well and we'll go",
    "start": "117689",
    "end": "119430"
  },
  {
    "text": "through some of that in a bit some of",
    "start": "119430",
    "end": "122310"
  },
  {
    "start": "121000",
    "end": "223000"
  },
  {
    "text": "the reasons we talk to customers about",
    "start": "122310",
    "end": "123810"
  },
  {
    "text": "why you would run your dotnet apps in in",
    "start": "123810",
    "end": "126570"
  },
  {
    "text": "a DBS as well we have twice as many",
    "start": "126570",
    "end": "129209"
  },
  {
    "text": "Windows Server instances to select from",
    "start": "129209",
    "end": "131550"
  },
  {
    "text": "so you can really write size where your",
    "start": "131550",
    "end": "132989"
  },
  {
    "text": "stuff's going to run",
    "start": "132989",
    "end": "134400"
  },
  {
    "text": "which you know is moderately interesting",
    "start": "134400",
    "end": "135900"
  },
  {
    "text": "but I think there's more compelling",
    "start": "135900",
    "end": "136859"
  },
  {
    "text": "points on this slide we have doubled the",
    "start": "136859",
    "end": "138930"
  },
  {
    "text": "number of regions with availability",
    "start": "138930",
    "end": "140250"
  },
  {
    "text": "zones now this is a big one all right so",
    "start": "140250",
    "end": "142260"
  },
  {
    "text": "if you're not familiar with it our each",
    "start": "142260",
    "end": "143700"
  },
  {
    "text": "of our regions has always got two or",
    "start": "143700",
    "end": "146250"
  },
  {
    "text": "more so Sydney's got three availability",
    "start": "146250",
    "end": "148049"
  },
  {
    "text": "zones each one has at least one data",
    "start": "148049",
    "end": "149939"
  },
  {
    "text": "center in it we're all tightly connected",
    "start": "149939",
    "end": "151620"
  },
  {
    "text": "Simon Alicia talked to some of this in",
    "start": "151620",
    "end": "153120"
  },
  {
    "text": "the keynote today so that is a benefit",
    "start": "153120",
    "end": "157469"
  },
  {
    "text": "as a developer because it means I can",
    "start": "157469",
    "end": "158879"
  },
  {
    "text": "run a highly available workload within a",
    "start": "158879",
    "end": "160739"
  },
  {
    "text": "region without having to worry about",
    "start": "160739",
    "end": "161939"
  },
  {
    "text": "failing over to a different geography",
    "start": "161939",
    "end": "164629"
  },
  {
    "text": "AWS has had seven times fewer downtime",
    "start": "164629",
    "end": "167370"
  },
  {
    "text": "hours and this was independently",
    "start": "167370",
    "end": "168780"
  },
  {
    "text": "verified and published last year so the",
    "start": "168780",
    "end": "171329"
  },
  {
    "text": "stats are all out and about so in terms",
    "start": "171329",
    "end": "173609"
  },
  {
    "text": "of trusting a cloud provider to keep",
    "start": "173609",
    "end": "175169"
  },
  {
    "text": "your application available the data",
    "start": "175169",
    "end": "177299"
  },
  {
    "text": "speaks to the fact that AWS is a",
    "start": "177299",
    "end": "178799"
  },
  {
    "text": "brilliant track record based on our",
    "start": "178799",
    "end": "180329"
  },
  {
    "text": "experience operating in the cloud we've",
    "start": "180329",
    "end": "181950"
  },
  {
    "text": "been running since 2006 we on average",
    "start": "181950",
    "end": "185909"
  },
  {
    "text": "get two to three times better",
    "start": "185909",
    "end": "187200"
  },
  {
    "text": "performance of Microsoft sequel server",
    "start": "187200",
    "end": "189090"
  },
  {
    "text": "on AWS service of equivalent size",
    "start": "189090",
    "end": "191219"
  },
  {
    "text": "compared to Azure again this is data",
    "start": "191219",
    "end": "193859"
  },
  {
    "text": "that's been independently verified and",
    "start": "193859",
    "end": "195599"
  },
  {
    "text": "published it came out late last year and",
    "start": "195599",
    "end": "197760"
  },
  {
    "text": "our customers that are looking at",
    "start": "197760",
    "end": "199560"
  },
  {
    "text": "running sequel server workloads are able",
    "start": "199560",
    "end": "201209"
  },
  {
    "text": "to run on smaller instances which means",
    "start": "201209",
    "end": "203129"
  },
  {
    "text": "they could be more cost effective while",
    "start": "203129",
    "end": "204870"
  },
  {
    "text": "still maintaining an appropriate level",
    "start": "204870",
    "end": "206400"
  },
  {
    "text": "of performance and lastly we've got five",
    "start": "206400",
    "end": "209220"
  },
  {
    "text": "times the number of service offerings",
    "start": "209220",
    "end": "210840"
  },
  {
    "text": "around encryption to help maintain",
    "start": "210840",
    "end": "212459"
  },
  {
    "text": "security of your applications again",
    "start": "212459",
    "end": "214169"
  },
  {
    "text": "Simon talked to this during the keynote",
    "start": "214169",
    "end": "215459"
  },
  {
    "text": "around how easy it is to have ubiquitous",
    "start": "215459",
    "end": "217859"
  },
  {
    "text": "encryption around your applications ok",
    "start": "217859",
    "end": "221760"
  },
  {
    "text": "so let's start with asp.net now if",
    "start": "221760",
    "end": "224459"
  },
  {
    "start": "223000",
    "end": "300000"
  },
  {
    "text": "you're an asp.net developer and you want",
    "start": "224459",
    "end": "226109"
  },
  {
    "text": "to run in AWS the developer tooling is",
    "start": "226109",
    "end": "228900"
  },
  {
    "text": "pretty much wherever you've been",
    "start": "228900",
    "end": "230489"
  },
  {
    "text": "developing previously a device has",
    "start": "230489",
    "end": "232620"
  },
  {
    "text": "native extensions for visual studio and",
    "start": "232620",
    "end": "234299"
  },
  {
    "text": "visual studio code that enable a bunch",
    "start": "234299",
    "end": "236849"
  },
  {
    "text": "of different development scenarios for",
    "start": "236849",
    "end": "239129"
  },
  {
    "text": "how you want to do your done in app",
    "start": "239129",
    "end": "240750"
  },
  {
    "text": "development so if I'm doing a asp.net",
    "start": "240750",
    "end": "242129"
  },
  {
    "text": "core or if I'm doing full asp.net we",
    "start": "242129",
    "end": "245519"
  },
  {
    "text": "integrate with the tooling where you are",
    "start": "245519",
    "end": "246930"
  },
  {
    "text": "now we've got a lot of tools to help",
    "start": "246930",
    "end": "249689"
  },
  {
    "text": "automate your release pipeline so this",
    "start": "249689",
    "end": "252689"
  },
  {
    "text": "is where our code build can be used to",
    "start": "252689",
    "end": "255060"
  },
  {
    "text": "help build your dotnet apps so we've got",
    "start": "255060",
    "end": "257310"
  },
  {
    "text": "that in both Linux and windows",
    "start": "257310",
    "end": "258840"
  },
  {
    "text": "compatible build servers so we can still",
    "start": "258840",
    "end": "261329"
  },
  {
    "text": "do full versions of.net for builds code",
    "start": "261329",
    "end": "264240"
  },
  {
    "text": "pipeline helps automate the release",
    "start": "264240",
    "end": "265919"
  },
  {
    "text": "steps",
    "start": "265919",
    "end": "266790"
  },
  {
    "text": "so to do a build run some tests release",
    "start": "266790",
    "end": "269280"
  },
  {
    "text": "it to dev wait for it to be approved and",
    "start": "269280",
    "end": "271410"
  },
  {
    "text": "release it to test that sort of thing I",
    "start": "271410",
    "end": "273720"
  },
  {
    "text": "would say go and watch the session at",
    "start": "273720",
    "end": "275490"
  },
  {
    "text": "someone on that one but it's literally",
    "start": "275490",
    "end": "276780"
  },
  {
    "text": "happening at the other side of this room",
    "start": "276780",
    "end": "277980"
  },
  {
    "text": "as we speak so catch the recording when",
    "start": "277980",
    "end": "279600"
  },
  {
    "text": "we get them on YouTube and code deploy",
    "start": "279600",
    "end": "281730"
  },
  {
    "text": "helps automate releases into",
    "start": "281730",
    "end": "283110"
  },
  {
    "text": "environments so things like Bluegreen",
    "start": "283110",
    "end": "284700"
  },
  {
    "text": "deployments you know bring up new",
    "start": "284700",
    "end": "286350"
  },
  {
    "text": "instances drain the load balancer from",
    "start": "286350",
    "end": "288210"
  },
  {
    "text": "one to the other watch it for a few",
    "start": "288210",
    "end": "290160"
  },
  {
    "text": "minutes and then drain it back killed",
    "start": "290160",
    "end": "292200"
  },
  {
    "text": "the old instances off when they're done",
    "start": "292200",
    "end": "293430"
  },
  {
    "text": "so we give you a lot of tooling there",
    "start": "293430",
    "end": "295470"
  },
  {
    "text": "that you can very easily integrate with",
    "start": "295470",
    "end": "297060"
  },
  {
    "text": "around your AWS tools and services so in",
    "start": "297060",
    "end": "301620"
  },
  {
    "start": "300000",
    "end": "390000"
  },
  {
    "text": "terms of their SDK perspective so if you",
    "start": "301620",
    "end": "304230"
  },
  {
    "text": "want to interact with AWS services",
    "start": "304230",
    "end": "306150"
  },
  {
    "text": "inside your app so we have an alias SDK",
    "start": "306150",
    "end": "309180"
  },
  {
    "text": "for dotnet it is compatible with dotnet",
    "start": "309180",
    "end": "311490"
  },
  {
    "text": "core so there's there's no differences",
    "start": "311490",
    "end": "313500"
  },
  {
    "text": "in the functionality between the dotnet",
    "start": "313500",
    "end": "314760"
  },
  {
    "text": "core version and the public one but we",
    "start": "314760",
    "end": "316950"
  },
  {
    "text": "also add a number of helpers into the",
    "start": "316950",
    "end": "318960"
  },
  {
    "text": "SDK who were to help automate some of",
    "start": "318960",
    "end": "321090"
  },
  {
    "text": "that heavy lifting that's specific to",
    "start": "321090",
    "end": "322500"
  },
  {
    "text": "dotnet so our s3 transfer utility helps",
    "start": "322500",
    "end": "325680"
  },
  {
    "text": "make uploading large files into s3 but",
    "start": "325680",
    "end": "327690"
  },
  {
    "text": "not that easy we have an s3 client-side",
    "start": "327690",
    "end": "330300"
  },
  {
    "text": "encryption library so if you want to",
    "start": "330300",
    "end": "332010"
  },
  {
    "text": "handle encryption in your app before you",
    "start": "332010",
    "end": "334170"
  },
  {
    "text": "even put it to s3",
    "start": "334170",
    "end": "335220"
  },
  {
    "text": "we help make that easier to do the",
    "start": "335220",
    "end": "337680"
  },
  {
    "text": "dynamo DB object persistence framework",
    "start": "337680",
    "end": "339900"
  },
  {
    "text": "so you can use dynamo DB to track state",
    "start": "339900",
    "end": "342780"
  },
  {
    "text": "in your asp.net applications and have it",
    "start": "342780",
    "end": "344940"
  },
  {
    "text": "store things there",
    "start": "344940",
    "end": "346350"
  },
  {
    "text": "Glacia archive transfer manager for",
    "start": "346350",
    "end": "348600"
  },
  {
    "text": "working in glacier we've got support for",
    "start": "348600",
    "end": "350820"
  },
  {
    "text": "portable class libraries and xamarin so",
    "start": "350820",
    "end": "352920"
  },
  {
    "text": "if you're doing mobile development",
    "start": "352920",
    "end": "354270"
  },
  {
    "text": "across iOS and Android in dotnet if",
    "start": "354270",
    "end": "356790"
  },
  {
    "text": "you're developing Xbox apps you can go",
    "start": "356790",
    "end": "359010"
  },
  {
    "text": "and use that portable class library to",
    "start": "359010",
    "end": "360600"
  },
  {
    "text": "be able to run in there and we also have",
    "start": "360600",
    "end": "362850"
  },
  {
    "text": "a dynamo DB session state provider so if",
    "start": "362850",
    "end": "365610"
  },
  {
    "text": "you're using the native asp.net session",
    "start": "365610",
    "end": "367590"
  },
  {
    "text": "state you can point that point that",
    "start": "367590",
    "end": "369810"
  },
  {
    "text": "provider at dynamo DB and immediately it",
    "start": "369810",
    "end": "372450"
  },
  {
    "text": "can get used to persist your session",
    "start": "372450",
    "end": "374040"
  },
  {
    "text": "state instead of storing it locally in",
    "start": "374040",
    "end": "375660"
  },
  {
    "text": "memory which means suddenly I can use a",
    "start": "375660",
    "end": "377670"
  },
  {
    "text": "load balancer that doesn't rely on",
    "start": "377670",
    "end": "379050"
  },
  {
    "text": "session affinity or anything like that",
    "start": "379050",
    "end": "380520"
  },
  {
    "text": "and it frees you up from storing that on",
    "start": "380520",
    "end": "383280"
  },
  {
    "text": "the devices so rather than continue to",
    "start": "383280",
    "end": "386820"
  },
  {
    "text": "talk to it let me show you a little bit",
    "start": "386820",
    "end": "387990"
  },
  {
    "text": "around how some of this works ok so what",
    "start": "387990",
    "end": "393420"
  },
  {
    "start": "390000",
    "end": "453000"
  },
  {
    "text": "I've got here is just a stock standard",
    "start": "393420",
    "end": "395640"
  },
  {
    "text": "asp.net MVC app like I've gone new ASP",
    "start": "395640",
    "end": "398490"
  },
  {
    "text": "MVC app and I've done very",
    "start": "398490",
    "end": "400470"
  },
  {
    "text": "to it what I want to show though is how",
    "start": "400470",
    "end": "402690"
  },
  {
    "text": "I'm able to use Amazon kognito which is",
    "start": "402690",
    "end": "405330"
  },
  {
    "text": "our authentication service to act as a",
    "start": "405330",
    "end": "408030"
  },
  {
    "text": "sign-in provider and I'm also talking to",
    "start": "408030",
    "end": "410310"
  },
  {
    "text": "dynamo DB just to show what it's like to",
    "start": "410310",
    "end": "412290"
  },
  {
    "text": "use some of our SDKs to interact with",
    "start": "412290",
    "end": "413910"
  },
  {
    "text": "data sources so to up to use kognito and",
    "start": "413910",
    "end": "418500"
  },
  {
    "text": "in the first instance so the the app",
    "start": "418500",
    "end": "420120"
  },
  {
    "text": "itself is quite straightforward for just",
    "start": "420120",
    "end": "423870"
  },
  {
    "text": "copy the URL for it here",
    "start": "423870",
    "end": "427520"
  },
  {
    "text": "come on Internet",
    "start": "435559",
    "end": "438638"
  },
  {
    "text": "there we go all right so I'm already",
    "start": "438870",
    "end": "441090"
  },
  {
    "text": "signed in but you can see it's it's",
    "start": "441090",
    "end": "442710"
  },
  {
    "text": "lighted up a bunch of lists of movies",
    "start": "442710",
    "end": "444900"
  },
  {
    "text": "that's in a dynamodb table if I'd had",
    "start": "444900",
    "end": "448260"
  },
  {
    "text": "cleared my cache that one that would",
    "start": "448260",
    "end": "449970"
  },
  {
    "text": "have asked me to sign in with kognito so",
    "start": "449970",
    "end": "451380"
  },
  {
    "text": "well we'll go through and do that in",
    "start": "451380",
    "end": "453750"
  },
  {
    "start": "453000",
    "end": "500000"
  },
  {
    "text": "terms of enabling kognito we actually",
    "start": "453750",
    "end": "455580"
  },
  {
    "text": "provide a native dotnet provider for",
    "start": "455580",
    "end": "458100"
  },
  {
    "text": "asp.net core identity so if you're",
    "start": "458100",
    "end": "460530"
  },
  {
    "text": "already relying on that as a framework",
    "start": "460530",
    "end": "462060"
  },
  {
    "text": "of authentication we can use the Cognito",
    "start": "462060",
    "end": "464490"
  },
  {
    "text": "libraries so you don't need to make",
    "start": "464490",
    "end": "466139"
  },
  {
    "text": "massive code changes to enter integrate",
    "start": "466139",
    "end": "467880"
  },
  {
    "text": "with that so all that we do to start",
    "start": "467880",
    "end": "470100"
  },
  {
    "text": "with so services dot agna Cognito",
    "start": "470100",
    "end": "476550"
  },
  {
    "text": "identity this brings the libraries into",
    "start": "476550",
    "end": "478710"
  },
  {
    "text": "my app so I can rely on the Cognito",
    "start": "478710",
    "end": "480360"
  },
  {
    "text": "objects and it's establishes an initial",
    "start": "480360",
    "end": "482460"
  },
  {
    "text": "session state so in my app settings",
    "start": "482460",
    "end": "484979"
  },
  {
    "text": "Jason you can see here I've got all the",
    "start": "484979",
    "end": "488669"
  },
  {
    "text": "details like my app ID my app secret",
    "start": "488669",
    "end": "490770"
  },
  {
    "text": "might use Apple ID so this is how it's",
    "start": "490770",
    "end": "493080"
  },
  {
    "text": "connecting back to the specific kognito",
    "start": "493080",
    "end": "494880"
  },
  {
    "text": "identity pool that is going to manage my",
    "start": "494880",
    "end": "496740"
  },
  {
    "text": "usernames and passwords and those sorts",
    "start": "496740",
    "end": "498660"
  },
  {
    "text": "of things now I've got a separate",
    "start": "498660",
    "end": "502380"
  },
  {
    "text": "controller set up which is managing my",
    "start": "502380",
    "end": "504060"
  },
  {
    "text": "authentication so my user sign in my",
    "start": "504060",
    "end": "505830"
  },
  {
    "text": "password changes those kinds of things",
    "start": "505830",
    "end": "507500"
  },
  {
    "text": "for the most part it all behaves exactly",
    "start": "507500",
    "end": "509850"
  },
  {
    "text": "the same in fact so if we zoom in on",
    "start": "509850",
    "end": "512490"
  },
  {
    "text": "some of the code here you see my sign in",
    "start": "512490",
    "end": "515640"
  },
  {
    "text": "I'm actually using the stock standard",
    "start": "515640",
    "end": "517169"
  },
  {
    "text": "asp.net sign-in manager just a sign in",
    "start": "517169",
    "end": "519599"
  },
  {
    "text": "with a password now because I've",
    "start": "519599",
    "end": "521310"
  },
  {
    "text": "initialized Cognito it's it knows that",
    "start": "521310",
    "end": "523080"
  },
  {
    "text": "Cognito is my identity provider and it's",
    "start": "523080",
    "end": "525540"
  },
  {
    "text": "able to go through and and do that",
    "start": "525540",
    "end": "526980"
  },
  {
    "text": "against kognito so I can determine was",
    "start": "526980",
    "end": "528779"
  },
  {
    "text": "their success or was there not",
    "start": "528779",
    "end": "530160"
  },
  {
    "text": "but Cognito also has a couple of",
    "start": "530160",
    "end": "532560"
  },
  {
    "text": "different states to it in terms of",
    "start": "532560",
    "end": "534029"
  },
  {
    "text": "responses that aren't supported in",
    "start": "534029",
    "end": "535680"
  },
  {
    "text": "asp.net so what we can do there is I can",
    "start": "535680",
    "end": "539279"
  },
  {
    "text": "say if it didn't succeed and it is a",
    "start": "539279",
    "end": "541770"
  },
  {
    "text": "Cognito result as opposed to just the",
    "start": "541770",
    "end": "543779"
  },
  {
    "text": "stock standard result I then got the",
    "start": "543779",
    "end": "545940"
  },
  {
    "text": "ability to go through and do things like",
    "start": "545940",
    "end": "547370"
  },
  {
    "text": "is it a password change or am i forcing",
    "start": "547370",
    "end": "550020"
  },
  {
    "text": "a password reset some of those states",
    "start": "550020",
    "end": "551670"
  },
  {
    "text": "that aren't native to asp.net so but",
    "start": "551670",
    "end": "554550"
  },
  {
    "text": "that's the only Cognito specific code",
    "start": "554550",
    "end": "556230"
  },
  {
    "text": "I've had to write here everything else",
    "start": "556230",
    "end": "557880"
  },
  {
    "text": "about this it just works and signs me in",
    "start": "557880",
    "end": "560420"
  },
  {
    "start": "560000",
    "end": "620000"
  },
  {
    "text": "now in terms of leveraging our SDKs",
    "start": "560420",
    "end": "563480"
  },
  {
    "text": "you'll see here I've imported the Amazon",
    "start": "563480",
    "end": "567089"
  },
  {
    "text": "DynamoDB client so the the basic model",
    "start": "567089",
    "end": "570690"
  },
  {
    "text": "for our services is you establish a",
    "start": "570690",
    "end": "572610"
  },
  {
    "text": "client to the service we can look in a",
    "start": "572610",
    "end": "575130"
  },
  {
    "text": "number of different places for",
    "start": "575130",
    "end": "576149"
  },
  {
    "text": "credentials so if you're running on an",
    "start": "576149",
    "end": "577829"
  },
  {
    "text": "ec2 instance we can still pull those",
    "start": "577829",
    "end": "579510"
  },
  {
    "text": "credentials dynamically based on the",
    "start": "579510",
    "end": "581610"
  },
  {
    "text": "role of the instance which is cool",
    "start": "581610",
    "end": "583170"
  },
  {
    "text": "but all I've got to do is start and a",
    "start": "583170",
    "end": "586140"
  },
  {
    "text": "synchronous scan to get the objects out",
    "start": "586140",
    "end": "588570"
  },
  {
    "text": "of my movies table here and I tell it I",
    "start": "588570",
    "end": "591450"
  },
  {
    "text": "want idle here and info as the the",
    "start": "591450",
    "end": "593220"
  },
  {
    "text": "fields that it gets back and it passes",
    "start": "593220",
    "end": "595470"
  },
  {
    "text": "those down into my view to be rendered",
    "start": "595470",
    "end": "596910"
  },
  {
    "text": "on the screen now from a debugging",
    "start": "596910",
    "end": "600779"
  },
  {
    "text": "perspective this is just a dotnet app so",
    "start": "600779",
    "end": "603360"
  },
  {
    "text": "I can run it up locally it attaches the",
    "start": "603360",
    "end": "605250"
  },
  {
    "text": "debugger it's still remember that I'm",
    "start": "605250",
    "end": "608190"
  },
  {
    "text": "signed in which is super fertile it's",
    "start": "608190",
    "end": "612170"
  },
  {
    "text": "just hit the localhost from here so you",
    "start": "620170",
    "end": "623230"
  },
  {
    "text": "can see it's redirected me to my login",
    "start": "623230",
    "end": "624760"
  },
  {
    "text": "URL as exactly as an ASP it on that app",
    "start": "624760",
    "end": "626980"
  },
  {
    "text": "would do so I give it my username and",
    "start": "626980",
    "end": "633070"
  },
  {
    "text": "password for my kognito user and it",
    "start": "633070",
    "end": "636520"
  },
  {
    "text": "signs me from there we go we talked to",
    "start": "636520",
    "end": "639490"
  },
  {
    "text": "dynamo we pull some data down I've got",
    "start": "639490",
    "end": "641200"
  },
  {
    "text": "my identity I'm now using kognito as a",
    "start": "641200",
    "end": "643510"
  },
  {
    "text": "persistent identity store in dotnet with",
    "start": "643510",
    "end": "646360"
  },
  {
    "text": "very very little change to my code",
    "start": "646360",
    "end": "648190"
  },
  {
    "text": "alright so that's a really great way to",
    "start": "648190",
    "end": "649780"
  },
  {
    "text": "go about doing some of the stuff with",
    "start": "649780",
    "end": "651160"
  },
  {
    "text": "asp.net outside of that pretty much",
    "start": "651160",
    "end": "653860"
  },
  {
    "text": "everything else you've always done about",
    "start": "653860",
    "end": "655180"
  },
  {
    "text": "asp.net still applies right it's just a",
    "start": "655180",
    "end": "657670"
  },
  {
    "text": "dotnet web app so there's there's not a",
    "start": "657670",
    "end": "660340"
  },
  {
    "text": "lot else to that so let's talk service",
    "start": "660340",
    "end": "665620"
  },
  {
    "text": "because this is where things start to",
    "start": "665620",
    "end": "666820"
  },
  {
    "text": "change a little are you guys familiar",
    "start": "666820",
    "end": "668380"
  },
  {
    "text": "with the term service when I say that it",
    "start": "668380",
    "end": "669970"
  },
  {
    "text": "up yes go",
    "start": "669970",
    "end": "671250"
  },
  {
    "start": "671000",
    "end": "719000"
  },
  {
    "text": "so just for anyone who hasn't really",
    "start": "671250",
    "end": "674590"
  },
  {
    "text": "dived into it service is essentially",
    "start": "674590",
    "end": "676240"
  },
  {
    "text": "running code without running servers so",
    "start": "676240",
    "end": "678670"
  },
  {
    "text": "I've got a chunk of code just executed",
    "start": "678670",
    "end": "680470"
  },
  {
    "text": "so we do that in a service called lambda",
    "start": "680470",
    "end": "682540"
  },
  {
    "text": "we fire up micro VMs and and we build",
    "start": "682540",
    "end": "685900"
  },
  {
    "text": "those per 100 milliseconds of execution",
    "start": "685900",
    "end": "688390"
  },
  {
    "text": "time right so you really are just paying",
    "start": "688390",
    "end": "690340"
  },
  {
    "text": "for the time that your code is running",
    "start": "690340",
    "end": "692490"
  },
  {
    "text": "that makes it really great from a",
    "start": "692490",
    "end": "694690"
  },
  {
    "text": "financial perspective because if my",
    "start": "694690",
    "end": "696070"
  },
  {
    "text": "codes not running I'm not paying",
    "start": "696070",
    "end": "697180"
  },
  {
    "text": "anything but also I don't need to worry",
    "start": "697180",
    "end": "699310"
  },
  {
    "text": "about patching servers to keep them",
    "start": "699310",
    "end": "701020"
  },
  {
    "text": "alive or anything like that and the",
    "start": "701020",
    "end": "702910"
  },
  {
    "text": "scale is managed for me all right if my",
    "start": "702910",
    "end": "704500"
  },
  {
    "text": "code gets called once it'll run in one",
    "start": "704500",
    "end": "706870"
  },
  {
    "text": "micro VM if I call it a thousand times",
    "start": "706870",
    "end": "709090"
  },
  {
    "text": "at the same time it'll spin up a",
    "start": "709090",
    "end": "711070"
  },
  {
    "text": "thousand of those micro VMs for me to",
    "start": "711070",
    "end": "712750"
  },
  {
    "text": "execute my code and and handle that",
    "start": "712750",
    "end": "714790"
  },
  {
    "text": "so auto scaling and that sort of stuff",
    "start": "714790",
    "end": "716800"
  },
  {
    "text": "is just managed as part of the service",
    "start": "716800",
    "end": "719130"
  },
  {
    "start": "719000",
    "end": "836000"
  },
  {
    "text": "so dotnet in the service world we work",
    "start": "719130",
    "end": "723280"
  },
  {
    "text": "with dotnet core here so there's not an",
    "start": "723280",
    "end": "724750"
  },
  {
    "text": "option to use full net in lambda because",
    "start": "724750",
    "end": "727090"
  },
  {
    "text": "lambda is only supporting Linux based",
    "start": "727090",
    "end": "728740"
  },
  {
    "text": "runtimes but I can bring so we've got",
    "start": "728740",
    "end": "731440"
  },
  {
    "text": "native support for dotnet core 2 and 2.1",
    "start": "731440",
    "end": "734140"
  },
  {
    "text": "we also have the ability through our",
    "start": "734140",
    "end": "736690"
  },
  {
    "text": "custom runtime framework in lambda to",
    "start": "736690",
    "end": "739120"
  },
  {
    "text": "bring in net core 3 and actually we've",
    "start": "739120",
    "end": "742210"
  },
  {
    "text": "got native support for creating net core",
    "start": "742210",
    "end": "744160"
  },
  {
    "text": "3 apps in a visual studio extension so",
    "start": "744160",
    "end": "746920"
  },
  {
    "text": "you can go in say I want a new server",
    "start": "746920",
    "end": "749170"
  },
  {
    "text": "this application based off the custom",
    "start": "749170",
    "end": "751300"
  },
  {
    "text": "runtime framework and then it's as",
    "start": "751300",
    "end": "752860"
  },
  {
    "text": "simple as changing my project",
    "start": "752860",
    "end": "754160"
  },
  {
    "text": "build from 2.1 to 3.0 and off you go the",
    "start": "754160",
    "end": "757790"
  },
  {
    "text": "caveat there at the moment given the",
    "start": "757790",
    "end": "759079"
  },
  {
    "text": "dotnet core is in preview we suggest",
    "start": "759079",
    "end": "761149"
  },
  {
    "text": "running with preview 5 or higher so I",
    "start": "761149",
    "end": "763550"
  },
  {
    "text": "think my environment I've been testing",
    "start": "763550",
    "end": "765110"
  },
  {
    "text": "the 6 because there were some issues in",
    "start": "765110",
    "end": "767149"
  },
  {
    "text": "in the previous builds now in terms of",
    "start": "767149",
    "end": "770180"
  },
  {
    "text": "developer tooling again the Visual",
    "start": "770180",
    "end": "772430"
  },
  {
    "text": "Studio toolkit has some great support",
    "start": "772430",
    "end": "774019"
  },
  {
    "text": "for getting your service functions",
    "start": "774019",
    "end": "775370"
  },
  {
    "text": "started we have the adaboost toolkit for",
    "start": "775370",
    "end": "777860"
  },
  {
    "text": "visual studio code so that went",
    "start": "777860",
    "end": "780410"
  },
  {
    "text": "generally available recently and that",
    "start": "780410",
    "end": "782480"
  },
  {
    "text": "again makes it easy to integrate testing",
    "start": "782480",
    "end": "784579"
  },
  {
    "text": "and executing of lambda functions from",
    "start": "784579",
    "end": "786439"
  },
  {
    "text": "within vs code the last one I want to",
    "start": "786439",
    "end": "788810"
  },
  {
    "text": "call out is the service application",
    "start": "788810",
    "end": "790819"
  },
  {
    "text": "model Sam CLI so the Sam CLI is really",
    "start": "790819",
    "end": "795079"
  },
  {
    "text": "great for being able to generate cloud",
    "start": "795079",
    "end": "797149"
  },
  {
    "text": "formations to deploy a lambda function",
    "start": "797149",
    "end": "798589"
  },
  {
    "text": "in any number of languages dotnet core",
    "start": "798589",
    "end": "801110"
  },
  {
    "text": "is one of the ones it supports but it",
    "start": "801110",
    "end": "803000"
  },
  {
    "text": "also gives you the ability to execute",
    "start": "803000",
    "end": "804589"
  },
  {
    "text": "them locally so we leverage docker",
    "start": "804589",
    "end": "806629"
  },
  {
    "text": "containers for that so that it will",
    "start": "806629",
    "end": "808250"
  },
  {
    "text": "download a docker container that has the",
    "start": "808250",
    "end": "810259"
  },
  {
    "text": "current lambda runtime with their same",
    "start": "810259",
    "end": "812629"
  },
  {
    "text": "libraries configurations and everything",
    "start": "812629",
    "end": "814730"
  },
  {
    "text": "so that it can execute that in a local",
    "start": "814730",
    "end": "817160"
  },
  {
    "text": "docker container without you having to",
    "start": "817160",
    "end": "818720"
  },
  {
    "text": "publish it to lambda itself to be able",
    "start": "818720",
    "end": "820910"
  },
  {
    "text": "to execute so this opens up all sorts of",
    "start": "820910",
    "end": "823250"
  },
  {
    "text": "doors for like integration testing",
    "start": "823250",
    "end": "824930"
  },
  {
    "text": "scenarios and that kind of thing so let",
    "start": "824930",
    "end": "827810"
  },
  {
    "text": "me show you what some of that looks like",
    "start": "827810",
    "end": "830800"
  },
  {
    "start": "836000",
    "end": "972000"
  },
  {
    "text": "I'm gonna stop my web app there okay so",
    "start": "837330",
    "end": "843720"
  },
  {
    "text": "what I've got here is I've just gone",
    "start": "843720",
    "end": "845550"
  },
  {
    "text": "into visual studio and said give me a",
    "start": "845550",
    "end": "848399"
  },
  {
    "text": "new server last lambda and done nothing",
    "start": "848399",
    "end": "851399"
  },
  {
    "text": "else to it just want to show you what",
    "start": "851399",
    "end": "852570"
  },
  {
    "text": "the default you get out of that looks",
    "start": "852570",
    "end": "853980"
  },
  {
    "text": "like so what it's providing me here with",
    "start": "853980",
    "end": "856890"
  },
  {
    "text": "is a lambda function that is going to",
    "start": "856890",
    "end": "859500"
  },
  {
    "text": "respond to a call from API gateway so",
    "start": "859500",
    "end": "862020"
  },
  {
    "text": "you can see there I've got my API",
    "start": "862020",
    "end": "864720"
  },
  {
    "text": "gateway proxy object lambda can be",
    "start": "864720",
    "end": "867180"
  },
  {
    "text": "invoked from a few dozen different",
    "start": "867180",
    "end": "869250"
  },
  {
    "text": "places in AWS and we've got",
    "start": "869250",
    "end": "871200"
  },
  {
    "text": "corresponding objects in the dotnet SDK",
    "start": "871200",
    "end": "873420"
  },
  {
    "text": "to help you strongly type where those",
    "start": "873420",
    "end": "875430"
  },
  {
    "text": "JSON objects come out to so you can more",
    "start": "875430",
    "end": "877709"
  },
  {
    "text": "easily code to those but in the case of",
    "start": "877709",
    "end": "880680"
  },
  {
    "text": "being able to execute this the visual",
    "start": "880680",
    "end": "883800"
  },
  {
    "text": "studio tooling doesn't use the docker",
    "start": "883800",
    "end": "885690"
  },
  {
    "text": "containers we've got a thing called the",
    "start": "885690",
    "end": "887760"
  },
  {
    "text": "the mock lambda test tool what this does",
    "start": "887760",
    "end": "890250"
  },
  {
    "text": "is this is essentially runs it in as a",
    "start": "890250",
    "end": "892440"
  },
  {
    "text": "lambda app in Windows so it's worth",
    "start": "892440",
    "end": "894660"
  },
  {
    "text": "noting that you'll be running in Windows",
    "start": "894660",
    "end": "896130"
  },
  {
    "text": "here not in a wilderness based runtime",
    "start": "896130",
    "end": "899040"
  },
  {
    "text": "but what I do get is the ability to",
    "start": "899040",
    "end": "900870"
  },
  {
    "text": "attach a debugger so if I want to run",
    "start": "900870",
    "end": "903390"
  },
  {
    "text": "this locally I can literally just go up",
    "start": "903390",
    "end": "905670"
  },
  {
    "text": "here press f5 to start my application",
    "start": "905670",
    "end": "907980"
  },
  {
    "text": "and what it's gonna do is it's going to",
    "start": "907980",
    "end": "910230"
  },
  {
    "text": "bring up a a back end that will let me",
    "start": "910230",
    "end": "912510"
  },
  {
    "text": "invoke through a web interface those",
    "start": "912510",
    "end": "915149"
  },
  {
    "text": "lambda functions so you can see here I",
    "start": "915149",
    "end": "918390"
  },
  {
    "text": "can simulate different AWS regions I can",
    "start": "918390",
    "end": "920610"
  },
  {
    "text": "simulate different types of objects I",
    "start": "920610",
    "end": "923220"
  },
  {
    "text": "can use different credentials so again",
    "start": "923220",
    "end": "925529"
  },
  {
    "text": "this looks to my local credentials file",
    "start": "925529",
    "end": "927060"
  },
  {
    "text": "and it'll let me choose what credentials",
    "start": "927060",
    "end": "929160"
  },
  {
    "text": "to simulate for the I am role of that",
    "start": "929160",
    "end": "931140"
  },
  {
    "text": "lambda instance so I can then choose a",
    "start": "931140",
    "end": "933899"
  },
  {
    "text": "number of different ways that lambda",
    "start": "933899",
    "end": "936270"
  },
  {
    "text": "could be called to send some sample data",
    "start": "936270",
    "end": "938070"
  },
  {
    "text": "in it'll give me the JSON object here",
    "start": "938070",
    "end": "940020"
  },
  {
    "text": "but ultimately I can just press execute",
    "start": "940020",
    "end": "942630"
  },
  {
    "text": "function now you see my debugger has",
    "start": "942630",
    "end": "944550"
  },
  {
    "text": "caught that because that's at a",
    "start": "944550",
    "end": "945630"
  },
  {
    "text": "breakpoint so this way I can interact",
    "start": "945630",
    "end": "947640"
  },
  {
    "text": "with lambda locally to test my",
    "start": "947640",
    "end": "950010"
  },
  {
    "text": "application logic now this isn't a full",
    "start": "950010",
    "end": "952410"
  },
  {
    "text": "integration test obviously because the",
    "start": "952410",
    "end": "954000"
  },
  {
    "text": "environment doesn't match where lambdas",
    "start": "954000",
    "end": "955680"
  },
  {
    "text": "actually going to run but it's a really",
    "start": "955680",
    "end": "957720"
  },
  {
    "text": "great way to make sure that you know",
    "start": "957720",
    "end": "959520"
  },
  {
    "text": "your application flow is going the way",
    "start": "959520",
    "end": "961920"
  },
  {
    "text": "that you think it should based on",
    "start": "961920",
    "end": "963120"
  },
  {
    "text": "setting breakpoints and interrogating",
    "start": "963120",
    "end": "964500"
  },
  {
    "text": "variables",
    "start": "964500",
    "end": "966920"
  },
  {
    "text": "so I'm just gonna stop that one now if I",
    "start": "966920",
    "end": "970320"
  },
  {
    "text": "flick across to one that I've got done",
    "start": "970320",
    "end": "972570"
  },
  {
    "start": "972000",
    "end": "1113000"
  },
  {
    "text": "in Visual Studio code so this is an app",
    "start": "972570",
    "end": "975510"
  },
  {
    "text": "that I provisioned out with the service",
    "start": "975510",
    "end": "976950"
  },
  {
    "text": "application model so we can use the Sam",
    "start": "976950",
    "end": "979200"
  },
  {
    "text": "see a light to literally just go Sam new",
    "start": "979200",
    "end": "982260"
  },
  {
    "text": "service app framework net core and it",
    "start": "982260",
    "end": "985560"
  },
  {
    "text": "generates everything that's in the here",
    "start": "985560",
    "end": "987510"
  },
  {
    "text": "for me so I get a source code directory",
    "start": "987510",
    "end": "989520"
  },
  {
    "text": "I get a test folder I get the cloud",
    "start": "989520",
    "end": "991530"
  },
  {
    "text": "formation and it's all ready to go and",
    "start": "991530",
    "end": "993930"
  },
  {
    "text": "just run what I want to invoke it",
    "start": "993930",
    "end": "995340"
  },
  {
    "text": "through Sam now again with just a little",
    "start": "995340",
    "end": "998130"
  },
  {
    "text": "bit of a touch up here to the launch",
    "start": "998130",
    "end": "999960"
  },
  {
    "text": "JSON file that comes in Visual Studio",
    "start": "999960",
    "end": "1001940"
  },
  {
    "text": "code for a project I'm able to tell it",
    "start": "1001940",
    "end": "1004460"
  },
  {
    "text": "that I would like to launch the dotnet",
    "start": "1004460",
    "end": "1006680"
  },
  {
    "text": "lambdas test tool so this is the same",
    "start": "1006680",
    "end": "1008840"
  },
  {
    "text": "tool that Visual Studio uses by default",
    "start": "1008840",
    "end": "1010820"
  },
  {
    "text": "you download it as an independent",
    "start": "1010820",
    "end": "1012200"
  },
  {
    "text": "project and you get exactly the same",
    "start": "1012200",
    "end": "1014570"
  },
  {
    "text": "result so again I'm gonna set a",
    "start": "1014570",
    "end": "1016670"
  },
  {
    "text": "breakpoint here here let's go there for",
    "start": "1016670",
    "end": "1019580"
  },
  {
    "text": "argument sake and we'll go on launch so",
    "start": "1019580",
    "end": "1024829"
  },
  {
    "text": "again it's gonna spin that same back end",
    "start": "1024829",
    "end": "1026480"
  },
  {
    "text": "up and you'll see that same web",
    "start": "1026480",
    "end": "1028220"
  },
  {
    "text": "interface for me to be able to go and",
    "start": "1028220",
    "end": "1029630"
  },
  {
    "text": "execute and do my debugging there you go",
    "start": "1029630",
    "end": "1034819"
  },
  {
    "text": "so here my breakpoint I'm debugging",
    "start": "1034820",
    "end": "1036770"
  },
  {
    "text": "dotnet running locally but if you're",
    "start": "1036770",
    "end": "1042410"
  },
  {
    "text": "more interested in that Sam stuff and",
    "start": "1042410",
    "end": "1043819"
  },
  {
    "text": "actually executing locally and docker so",
    "start": "1043820",
    "end": "1050560"
  },
  {
    "text": "I'm using the Sam CLI here to actually",
    "start": "1050560",
    "end": "1053540"
  },
  {
    "text": "go and invoke that same function inside",
    "start": "1053540",
    "end": "1055640"
  },
  {
    "text": "a docker container so Sam local invoke",
    "start": "1055640",
    "end": "1058490"
  },
  {
    "text": "the name of the function so if I've got",
    "start": "1058490",
    "end": "1060470"
  },
  {
    "text": "multiple functions in my project it",
    "start": "1060470",
    "end": "1061970"
  },
  {
    "text": "knows which one I'm specifying no event",
    "start": "1061970",
    "end": "1064460"
  },
  {
    "text": "in this case because I don't have a",
    "start": "1064460",
    "end": "1066650"
  },
  {
    "text": "chunk of JSON to pass to it but again",
    "start": "1066650",
    "end": "1068720"
  },
  {
    "text": "the same CLI will help you generate",
    "start": "1068720",
    "end": "1070190"
  },
  {
    "text": "dummy Jason events that you can pass in",
    "start": "1070190",
    "end": "1072890"
  },
  {
    "text": "to your lambda function to validate that",
    "start": "1072890",
    "end": "1074360"
  },
  {
    "text": "logic based on like an API gateway call",
    "start": "1074360",
    "end": "1076490"
  },
  {
    "text": "or whatever else so I'm gonna go and",
    "start": "1076490",
    "end": "1079460"
  },
  {
    "text": "execute that you can see it's pulling",
    "start": "1079460",
    "end": "1083000"
  },
  {
    "text": "credentials from my local credentials",
    "start": "1083000",
    "end": "1084650"
  },
  {
    "text": "file again I've got the option to",
    "start": "1084650",
    "end": "1086450"
  },
  {
    "text": "specify our profile if you want to",
    "start": "1086450",
    "end": "1087770"
  },
  {
    "text": "simulate a different I am role but there",
    "start": "1087770",
    "end": "1090050"
  },
  {
    "text": "I see exactly the output that comes from",
    "start": "1090050",
    "end": "1091850"
  },
  {
    "text": "lambda I can see the JSON object",
    "start": "1091850",
    "end": "1093980"
  },
  {
    "text": "returned",
    "start": "1093980",
    "end": "1094700"
  },
  {
    "text": "I see details like the duration the",
    "start": "1094700",
    "end": "1097070"
  },
  {
    "text": "build execution time the amount of RAM",
    "start": "1097070",
    "end": "1099230"
  },
  {
    "text": "that was attached",
    "start": "1099230",
    "end": "1100010"
  },
  {
    "text": "so it simulates all of that in the",
    "start": "1100010",
    "end": "1102020"
  },
  {
    "text": "docker container for me so my job by",
    "start": "1102020",
    "end": "1105740"
  },
  {
    "text": "cloud formation template oops my cloud",
    "start": "1105740",
    "end": "1108559"
  },
  {
    "text": "formation template for this project",
    "start": "1108559",
    "end": "1109760"
  },
  {
    "text": "specifies how much ram is on that",
    "start": "1109760",
    "end": "1111410"
  },
  {
    "text": "function and and it will though then",
    "start": "1111410",
    "end": "1114140"
  },
  {
    "start": "1113000",
    "end": "1143000"
  },
  {
    "text": "honor that when I spin that up in the",
    "start": "1114140",
    "end": "1115669"
  },
  {
    "text": "docker container so that's a really",
    "start": "1115669",
    "end": "1117919"
  },
  {
    "text": "great way and we see customers automate",
    "start": "1117919",
    "end": "1119960"
  },
  {
    "text": "integration tests under that same sort",
    "start": "1119960",
    "end": "1122000"
  },
  {
    "text": "of approach so I could go through and",
    "start": "1122000",
    "end": "1123559"
  },
  {
    "text": "say go and do Sam local invokes check",
    "start": "1123559",
    "end": "1126080"
  },
  {
    "text": "the output and know that it has been run",
    "start": "1126080",
    "end": "1127910"
  },
  {
    "text": "in a Linux runtime based off the same",
    "start": "1127910",
    "end": "1130160"
  },
  {
    "text": "container that we use for dotnet core",
    "start": "1130160",
    "end": "1131780"
  },
  {
    "text": "and lambda to be able to validate that",
    "start": "1131780",
    "end": "1133370"
  },
  {
    "text": "my function does what it needs to do all",
    "start": "1133370",
    "end": "1140990"
  },
  {
    "text": "right so monitoring and logging for",
    "start": "1140990",
    "end": "1142700"
  },
  {
    "text": "dotnet now there's there's a few things",
    "start": "1142700",
    "end": "1145640"
  },
  {
    "text": "that we do in AWS that are unique",
    "start": "1145640",
    "end": "1147320"
  },
  {
    "text": "services that we've put together to",
    "start": "1147320",
    "end": "1148970"
  },
  {
    "text": "offer here around how you can go through",
    "start": "1148970",
    "end": "1151400"
  },
  {
    "text": "and gain additional insights to what",
    "start": "1151400",
    "end": "1153260"
  },
  {
    "text": "your applications are doing in AWS so",
    "start": "1153260",
    "end": "1156559"
  },
  {
    "text": "the first one is cloud watch application",
    "start": "1156559",
    "end": "1158210"
  },
  {
    "text": "insights for dotnet and sequel server",
    "start": "1158210",
    "end": "1160750"
  },
  {
    "text": "now this is cool because it's a really",
    "start": "1160750",
    "end": "1163549"
  },
  {
    "text": "great way to get some specific insights",
    "start": "1163549",
    "end": "1165559"
  },
  {
    "text": "to dotnet apps and sickled server apps",
    "start": "1165559",
    "end": "1167559"
  },
  {
    "text": "based on machine learning models that",
    "start": "1167559",
    "end": "1170000"
  },
  {
    "text": "you don't need to maintain right you",
    "start": "1170000",
    "end": "1171710"
  },
  {
    "text": "just put your log files and the data",
    "start": "1171710",
    "end": "1173270"
  },
  {
    "text": "about your instances at this this",
    "start": "1173270",
    "end": "1175549"
  },
  {
    "text": "application and we will tell you when we",
    "start": "1175549",
    "end": "1177500"
  },
  {
    "text": "see things that don't look right based",
    "start": "1177500",
    "end": "1179120"
  },
  {
    "text": "on dotnet apps we give you automatic",
    "start": "1179120",
    "end": "1181370"
  },
  {
    "text": "dashboards we give you mechanisms to",
    "start": "1181370",
    "end": "1183290"
  },
  {
    "text": "notify on the other one that we call out",
    "start": "1183290",
    "end": "1185809"
  },
  {
    "text": "is AWS x-ray so what x-ray is is tool",
    "start": "1185809",
    "end": "1189830"
  },
  {
    "text": "for end-to-end tracing firm of requests",
    "start": "1189830",
    "end": "1192350"
  },
  {
    "text": "within the AWS network so think of this",
    "start": "1192350",
    "end": "1195290"
  },
  {
    "text": "where I've got a web application that",
    "start": "1195290",
    "end": "1197510"
  },
  {
    "text": "calls out to a lambda function actually",
    "start": "1197510",
    "end": "1199760"
  },
  {
    "text": "calls out to an API gateway which calls",
    "start": "1199760",
    "end": "1201380"
  },
  {
    "text": "the lambda function which puts something",
    "start": "1201380",
    "end": "1203059"
  },
  {
    "text": "in sqs which then gets run by another",
    "start": "1203059",
    "end": "1205250"
  },
  {
    "text": "lambda function which write something in",
    "start": "1205250",
    "end": "1206660"
  },
  {
    "text": "dynamodb and you're trying to to",
    "start": "1206660",
    "end": "1208910"
  },
  {
    "text": "performance troubleshoot that most of",
    "start": "1208910",
    "end": "1211250"
  },
  {
    "text": "that is happening in an entirely server",
    "start": "1211250",
    "end": "1212690"
  },
  {
    "text": "as well that you've got no access to",
    "start": "1212690",
    "end": "1214210"
  },
  {
    "text": "x-ray can generate service maps of these",
    "start": "1214210",
    "end": "1216860"
  },
  {
    "text": "types of things can show you success and",
    "start": "1216860",
    "end": "1218660"
  },
  {
    "text": "failure rates of calls at any point in",
    "start": "1218660",
    "end": "1220790"
  },
  {
    "text": "that stack and can show you the overall",
    "start": "1220790",
    "end": "1222770"
  },
  {
    "text": "time of execution at every point through",
    "start": "1222770",
    "end": "1225080"
  },
  {
    "text": "that chain so again there's not a lot",
    "start": "1225080",
    "end": "1227929"
  },
  {
    "text": "involved in terms of enabling the",
    "start": "1227929",
    "end": "1229490"
  },
  {
    "text": "telemetry to say start capturing a",
    "start": "1229490",
    "end": "1231230"
  },
  {
    "text": "request from here so you'll have an",
    "start": "1231230",
    "end": "1233000"
  },
  {
    "text": "initial entry",
    "start": "1233000",
    "end": "1233690"
  },
  {
    "text": "point over dotnet app or a.net lambda",
    "start": "1233690",
    "end": "1236090"
  },
  {
    "text": "call as the first point of I met",
    "start": "1236090",
    "end": "1238190"
  },
  {
    "text": "capturing this request and from there it",
    "start": "1238190",
    "end": "1240379"
  },
  {
    "text": "all feeds into x-ray where you can",
    "start": "1240379",
    "end": "1241909"
  },
  {
    "text": "capture the traces visualize them and",
    "start": "1241909",
    "end": "1243860"
  },
  {
    "text": "really start doing some intelligent",
    "start": "1243860",
    "end": "1245419"
  },
  {
    "text": "analysis of youth of your applications",
    "start": "1245419",
    "end": "1247929"
  },
  {
    "text": "so again back into demo world let's just",
    "start": "1247929",
    "end": "1254000"
  },
  {
    "text": "close off some of these tabs and let's",
    "start": "1254000",
    "end": "1259190"
  },
  {
    "start": "1258000",
    "end": "1380000"
  },
  {
    "text": "have a look at x-ray so I've got x-ray",
    "start": "1259190",
    "end": "1265789"
  },
  {
    "text": "enabled in that app that we were looking",
    "start": "1265789",
    "end": "1267440"
  },
  {
    "text": "at earlier my doc may have speed on that",
    "start": "1267440",
    "end": "1269000"
  },
  {
    "text": "web application and you can see here",
    "start": "1269000",
    "end": "1270980"
  },
  {
    "text": "it's generated an automatic service map",
    "start": "1270980",
    "end": "1272690"
  },
  {
    "text": "saying that my clients come in and the",
    "start": "1272690",
    "end": "1274909"
  },
  {
    "text": "first thing they talk to is my ECS",
    "start": "1274909",
    "end": "1276679"
  },
  {
    "text": "container all right so my dotnet web",
    "start": "1276679",
    "end": "1278570"
  },
  {
    "text": "application in this case is running in",
    "start": "1278570",
    "end": "1280129"
  },
  {
    "text": "ECS inside of a container and from that",
    "start": "1280129",
    "end": "1282379"
  },
  {
    "text": "container",
    "start": "1282379",
    "end": "1282889"
  },
  {
    "text": "I see calls that go out to kognito for",
    "start": "1282889",
    "end": "1285529"
  },
  {
    "text": "authentication and I see calls that go",
    "start": "1285529",
    "end": "1287360"
  },
  {
    "text": "out to my movies table in dynamo dB",
    "start": "1287360",
    "end": "1289789"
  },
  {
    "text": "now all that's involved to actually",
    "start": "1289789",
    "end": "1291950"
  },
  {
    "text": "enable that type of integration it's",
    "start": "1291950",
    "end": "1295129"
  },
  {
    "text": "very very simple",
    "start": "1295129",
    "end": "1298000"
  },
  {
    "text": "app use x-ray and I'll give it the name",
    "start": "1302990",
    "end": "1305720"
  },
  {
    "text": "of the application so this is the thing",
    "start": "1305720",
    "end": "1307399"
  },
  {
    "text": "it's going to start capturing that",
    "start": "1307399",
    "end": "1308720"
  },
  {
    "text": "telemetry for me and and after I've got",
    "start": "1308720",
    "end": "1312649"
  },
  {
    "text": "that done register x-ray for all",
    "start": "1312649",
    "end": "1318230"
  },
  {
    "text": "services now if I'm only wanting x-ray",
    "start": "1318230",
    "end": "1320570"
  },
  {
    "text": "to capture specific services I can say",
    "start": "1320570",
    "end": "1322490"
  },
  {
    "text": "register for dynamo I can register for",
    "start": "1322490",
    "end": "1325090"
  },
  {
    "text": "SNS or whatever service you want here",
    "start": "1325090",
    "end": "1328039"
  },
  {
    "text": "I'm saying capture everything now",
    "start": "1328039",
    "end": "1329480"
  },
  {
    "text": "because I've done it at the start of my",
    "start": "1329480",
    "end": "1331010"
  },
  {
    "text": "application everything throughout will",
    "start": "1331010",
    "end": "1332870"
  },
  {
    "text": "go and do that",
    "start": "1332870",
    "end": "1333559"
  },
  {
    "text": "I could put that into individual",
    "start": "1333559",
    "end": "1335179"
  },
  {
    "text": "controllers if I only want to capture",
    "start": "1335179",
    "end": "1337010"
  },
  {
    "text": "specific methods there's also a lot of",
    "start": "1337010",
    "end": "1339289"
  },
  {
    "text": "things you can do to limit you know how",
    "start": "1339289",
    "end": "1341149"
  },
  {
    "text": "much trace data do we actually provide",
    "start": "1341149",
    "end": "1343190"
  },
  {
    "text": "to x-ray I might not want to capture",
    "start": "1343190",
    "end": "1345049"
  },
  {
    "text": "every single request cuz it's gonna be",
    "start": "1345049",
    "end": "1346640"
  },
  {
    "text": "very very verbose I might say take 40%",
    "start": "1346640",
    "end": "1349700"
  },
  {
    "text": "as the sample rate and send that into",
    "start": "1349700",
    "end": "1351649"
  },
  {
    "text": "x-ray so if your sermon does that way to",
    "start": "1351649",
    "end": "1354770"
  },
  {
    "text": "simulate the way x-ray works if I'm",
    "start": "1354770",
    "end": "1356480"
  },
  {
    "text": "doing local debugging you can run it as",
    "start": "1356480",
    "end": "1358460"
  },
  {
    "text": "a Windows service or as the standalone",
    "start": "1358460",
    "end": "1360320"
  },
  {
    "text": "application if you're in Linux or in Mac",
    "start": "1360320",
    "end": "1362690"
  },
  {
    "text": "so that way if I'm debugging locally",
    "start": "1362690",
    "end": "1365029"
  },
  {
    "text": "like I am here on my local host it'll",
    "start": "1365029",
    "end": "1366950"
  },
  {
    "text": "still send those details up into x-ray",
    "start": "1366950",
    "end": "1368720"
  },
  {
    "text": "so I don't lose that functionality by",
    "start": "1368720",
    "end": "1370760"
  },
  {
    "text": "not actually executing in AWS in fact",
    "start": "1370760",
    "end": "1374720"
  },
  {
    "text": "you'll see when I come back in here and",
    "start": "1374720",
    "end": "1375950"
  },
  {
    "text": "have a look at if I click on the",
    "start": "1375950",
    "end": "1377419"
  },
  {
    "text": "requests here and say I want to analyze",
    "start": "1377419",
    "end": "1379490"
  },
  {
    "text": "traces so it shows me over the last 30",
    "start": "1379490",
    "end": "1383179"
  },
  {
    "start": "1380000",
    "end": "1465000"
  },
  {
    "text": "minutes some of the requests that have",
    "start": "1383179",
    "end": "1384350"
  },
  {
    "text": "come in the responses but you'll see all",
    "start": "1384350",
    "end": "1387140"
  },
  {
    "text": "the URLs here in my local host URLs so",
    "start": "1387140",
    "end": "1389090"
  },
  {
    "text": "it shows me the requests that are coming",
    "start": "1389090",
    "end": "1391130"
  },
  {
    "text": "in we also see some interesting stuff",
    "start": "1391130",
    "end": "1393740"
  },
  {
    "text": "down here around the performance time",
    "start": "1393740",
    "end": "1396380"
  },
  {
    "text": "and things that are making it run slowly",
    "start": "1396380",
    "end": "1399520"
  },
  {
    "text": "and unfortunately my inefficient scan",
    "start": "1399520",
    "end": "1402590"
  },
  {
    "text": "for some reason hasn't turned up on the",
    "start": "1402590",
    "end": "1404360"
  },
  {
    "text": "list here but but we can dive deeper",
    "start": "1404360",
    "end": "1407630"
  },
  {
    "text": "into some of the requests look at trace",
    "start": "1407630",
    "end": "1412789"
  },
  {
    "text": "lists",
    "start": "1412789",
    "end": "1415179"
  },
  {
    "text": "it's gone find a trace for the homepage",
    "start": "1415410",
    "end": "1422880"
  },
  {
    "text": "so I can see all the individual traces",
    "start": "1422880",
    "end": "1425350"
  },
  {
    "text": "the responses that came out so the 200s",
    "start": "1425350",
    "end": "1427540"
  },
  {
    "text": "and 302s let's look at one of the 200s",
    "start": "1427540",
    "end": "1429910"
  },
  {
    "text": "so you can see here I'm provided a",
    "start": "1429910",
    "end": "1432400"
  },
  {
    "text": "visual representation of that request so",
    "start": "1432400",
    "end": "1435250"
  },
  {
    "text": "I can see the request itself they get",
    "start": "1435250",
    "end": "1437530"
  },
  {
    "text": "user calls to Cognito that get groups",
    "start": "1437530",
    "end": "1439960"
  },
  {
    "text": "for user call to Cognito the ludicrously",
    "start": "1439960",
    "end": "1442540"
  },
  {
    "text": "inefficient stand of my DynamoDB table",
    "start": "1442540",
    "end": "1444970"
  },
  {
    "text": "so i can see hey that's what's causing",
    "start": "1444970",
    "end": "1446320"
  },
  {
    "text": "that page to take a little bit longer to",
    "start": "1446320",
    "end": "1447820"
  },
  {
    "text": "load all that for just a couple of lines",
    "start": "1447820",
    "end": "1450400"
  },
  {
    "text": "of code to say turn on x-ray alright so",
    "start": "1450400",
    "end": "1452830"
  },
  {
    "text": "that makes it really really easy for me",
    "start": "1452830",
    "end": "1454360"
  },
  {
    "text": "to start being very specific about my",
    "start": "1454360",
    "end": "1456430"
  },
  {
    "text": "troubleshooting rather than shooting",
    "start": "1456430",
    "end": "1458260"
  },
  {
    "text": "blindly and saying oh I think it's this",
    "start": "1458260",
    "end": "1459820"
  },
  {
    "text": "let's go and optimize it I can make a",
    "start": "1459820",
    "end": "1461500"
  },
  {
    "text": "data-based decision around where to",
    "start": "1461500",
    "end": "1463630"
  },
  {
    "text": "spend my time in optimizing now the",
    "start": "1463630",
    "end": "1466840"
  },
  {
    "start": "1465000",
    "end": "1517000"
  },
  {
    "text": "other one is around application insights",
    "start": "1466840",
    "end": "1469300"
  },
  {
    "text": "for dotnet and sequel server so this is",
    "start": "1469300",
    "end": "1471040"
  },
  {
    "text": "integrated in the cloud watch so we",
    "start": "1471040",
    "end": "1473650"
  },
  {
    "text": "begin here by creating a resource group",
    "start": "1473650",
    "end": "1475810"
  },
  {
    "text": "in AWS so I can say everything tagged",
    "start": "1475810",
    "end": "1478360"
  },
  {
    "text": "with X is part of this resource group",
    "start": "1478360",
    "end": "1480790"
  },
  {
    "text": "which is really great way to live if",
    "start": "1480790",
    "end": "1482170"
  },
  {
    "text": "you're in the auto-scaling build and",
    "start": "1482170",
    "end": "1483460"
  },
  {
    "text": "servers are appearing and disappearing",
    "start": "1483460",
    "end": "1484750"
  },
  {
    "text": "and and create a dashboard from there so",
    "start": "1484750",
    "end": "1489310"
  },
  {
    "text": "what I'm able to do here is here's where",
    "start": "1489310",
    "end": "1492040"
  },
  {
    "text": "I would ordinarily see problems detected",
    "start": "1492040",
    "end": "1493510"
  },
  {
    "text": "now again my apps pretty basic there's",
    "start": "1493510",
    "end": "1495790"
  },
  {
    "text": "not a lot wrong with it but this will do",
    "start": "1495790",
    "end": "1497350"
  },
  {
    "text": "things like look for long-running sequel",
    "start": "1497350",
    "end": "1498880"
  },
  {
    "text": "connections it'll do things like looking",
    "start": "1498880",
    "end": "1500320"
  },
  {
    "text": "for you know inefficient memory using",
    "start": "1500320",
    "end": "1502930"
  },
  {
    "text": "net and it starts making some",
    "start": "1502930",
    "end": "1504490"
  },
  {
    "text": "recommendations to you specifically",
    "start": "1504490",
    "end": "1506020"
  },
  {
    "text": "around things that you should go through",
    "start": "1506020",
    "end": "1508330"
  },
  {
    "text": "and look at as the developer all of",
    "start": "1508330",
    "end": "1510310"
  },
  {
    "text": "that's based off machine learning",
    "start": "1510310",
    "end": "1511630"
  },
  {
    "text": "algorithms that we've been training to",
    "start": "1511630",
    "end": "1513460"
  },
  {
    "text": "be able to make those excuse me make",
    "start": "1513460",
    "end": "1515680"
  },
  {
    "text": "those recommendations to you just to",
    "start": "1515680",
    "end": "1518080"
  },
  {
    "start": "1517000",
    "end": "1572000"
  },
  {
    "text": "show you some of the data points that we",
    "start": "1518080",
    "end": "1519790"
  },
  {
    "text": "can collect in here so if I dive deeper",
    "start": "1519790",
    "end": "1521380"
  },
  {
    "text": "into my demo app here you'll see I've",
    "start": "1521380",
    "end": "1523330"
  },
  {
    "text": "got my one instance and if I say manage",
    "start": "1523330",
    "end": "1525640"
  },
  {
    "text": "monitoring I tell it a little bit of",
    "start": "1525640",
    "end": "1528100"
  },
  {
    "text": "detail around what am i running is this",
    "start": "1528100",
    "end": "1529870"
  },
  {
    "text": "mid tier like a worker application is it",
    "start": "1529870",
    "end": "1532390"
  },
  {
    "text": "a front-end server is it a sequel",
    "start": "1532390",
    "end": "1534400"
  },
  {
    "text": "database server again this will just",
    "start": "1534400",
    "end": "1536650"
  },
  {
    "text": "affect the types of recommendations that",
    "start": "1536650",
    "end": "1538210"
  },
  {
    "text": "we look for",
    "start": "1538210",
    "end": "1538810"
  },
  {
    "text": "I tell it this server's got iOS logs in",
    "start": "1538810",
    "end": "1541810"
  },
  {
    "text": "this directory I could say you've got",
    "start": "1541810",
    "end": "1543700"
  },
  {
    "text": "application logs or sequel logs in",
    "start": "1543700",
    "end": "1545410"
  },
  {
    "text": "another directory so again it knows that",
    "start": "1545410",
    "end": "1547710"
  },
  {
    "text": "vlog and where they are stored so we can",
    "start": "1547710",
    "end": "1549480"
  },
  {
    "text": "bring those in and use those for",
    "start": "1549480",
    "end": "1550799"
  },
  {
    "text": "recommendations and which metrics do we",
    "start": "1550799",
    "end": "1553320"
  },
  {
    "text": "care about again I can tell it to make",
    "start": "1553320",
    "end": "1555059"
  },
  {
    "text": "sure it grabs additional metrics from",
    "start": "1555059",
    "end": "1556649"
  },
  {
    "text": "the instances so that I can do alarms on",
    "start": "1556649",
    "end": "1559380"
  },
  {
    "text": "them in cloud watch again all of that",
    "start": "1559380",
    "end": "1561990"
  },
  {
    "text": "few clicks of the button you've got it",
    "start": "1561990",
    "end": "1563700"
  },
  {
    "text": "set up and you start getting these",
    "start": "1563700",
    "end": "1565080"
  },
  {
    "text": "active recommendations about how to",
    "start": "1565080",
    "end": "1566850"
  },
  {
    "text": "improve the performance of your",
    "start": "1566850",
    "end": "1568409"
  },
  {
    "text": "applications so going through all that",
    "start": "1568409",
    "end": "1574440"
  },
  {
    "start": "1572000",
    "end": "1606000"
  },
  {
    "text": "we started with the question of if I am",
    "start": "1574440",
    "end": "1576120"
  },
  {
    "text": "a Microsoft developer why would I look",
    "start": "1576120",
    "end": "1577590"
  },
  {
    "text": "at a de Bresse why wouldn't you write",
    "start": "1577590",
    "end": "1580380"
  },
  {
    "text": "between you know that yes the cool",
    "start": "1580380",
    "end": "1582149"
  },
  {
    "text": "infrastructure stuff like the",
    "start": "1582149",
    "end": "1583169"
  },
  {
    "text": "availability zones and all that but the",
    "start": "1583169",
    "end": "1585000"
  },
  {
    "text": "ability to run your dotnet apps the way",
    "start": "1585000",
    "end": "1586950"
  },
  {
    "text": "you want in all sorts of different",
    "start": "1586950",
    "end": "1588630"
  },
  {
    "text": "formats taking advantage of dotnet core",
    "start": "1588630",
    "end": "1590850"
  },
  {
    "text": "to be able to run on lambda and some of",
    "start": "1590850",
    "end": "1592830"
  },
  {
    "text": "the services like x-ray and the cloud",
    "start": "1592830",
    "end": "1594779"
  },
  {
    "text": "watch insights that we've got there it",
    "start": "1594779",
    "end": "1596730"
  },
  {
    "text": "actually makes AWS a really compelling",
    "start": "1596730",
    "end": "1598590"
  },
  {
    "text": "place to be able to run dotnet",
    "start": "1598590",
    "end": "1599909"
  },
  {
    "text": "applications which is why we've got so",
    "start": "1599909",
    "end": "1601830"
  },
  {
    "text": "many customers who are actively running",
    "start": "1601830",
    "end": "1603240"
  },
  {
    "text": "very large-scale dotnet apps on us today",
    "start": "1603240",
    "end": "1606409"
  },
  {
    "start": "1606000",
    "end": "1628000"
  },
  {
    "text": "so in summary I would say a de Bresse is",
    "start": "1606409",
    "end": "1609899"
  },
  {
    "text": "one of the best places you can run your",
    "start": "1609899",
    "end": "1611370"
  },
  {
    "text": "asp.net web applications the serverless",
    "start": "1611370",
    "end": "1614070"
  },
  {
    "text": "platform really makes things interesting",
    "start": "1614070",
    "end": "1616440"
  },
  {
    "text": "when you start looking at micro services",
    "start": "1616440",
    "end": "1618600"
  },
  {
    "text": "and how you want to run in that world",
    "start": "1618600",
    "end": "1619860"
  },
  {
    "text": "and you can get deeper insight with the",
    "start": "1619860",
    "end": "1623010"
  },
  {
    "text": "analytics that we provide through cloud",
    "start": "1623010",
    "end": "1624480"
  },
  {
    "text": "watch an x-ray as to where your",
    "start": "1624480",
    "end": "1626039"
  },
  {
    "text": "application is going wrong so in terms",
    "start": "1626039",
    "end": "1629039"
  },
  {
    "start": "1628000",
    "end": "1687000"
  },
  {
    "text": "of next steps if you haven't already",
    "start": "1629039",
    "end": "1630600"
  },
  {
    "text": "looked at a go and download the SDK for",
    "start": "1630600",
    "end": "1632460"
  },
  {
    "text": "dotnet and have a bit of a play around",
    "start": "1632460",
    "end": "1633840"
  },
  {
    "text": "with some code we've got a developer",
    "start": "1633840",
    "end": "1636600"
  },
  {
    "text": "portal for dotnet that's at the second",
    "start": "1636600",
    "end": "1638610"
  },
  {
    "text": "link there to be able to go through and",
    "start": "1638610",
    "end": "1639929"
  },
  {
    "text": "get access to training resources and",
    "start": "1639929",
    "end": "1641520"
  },
  {
    "text": "examples and and lastly if you haven't",
    "start": "1641520",
    "end": "1644159"
  },
  {
    "text": "already got a free account just play",
    "start": "1644159",
    "end": "1645360"
  },
  {
    "text": "around with Dawn sign up for one",
    "start": "1645360",
    "end": "1646890"
  },
  {
    "text": "you know developers we love getting",
    "start": "1646890",
    "end": "1648000"
  },
  {
    "text": "hands on and learning by doing the free",
    "start": "1648000",
    "end": "1650159"
  },
  {
    "text": "tier makes it really really easy to",
    "start": "1650159",
    "end": "1651510"
  },
  {
    "text": "explore running so net core apps on",
    "start": "1651510",
    "end": "1653159"
  },
  {
    "text": "Linux boxes for the first 12 months",
    "start": "1653159",
    "end": "1654720"
  },
  {
    "text": "without incurring any cost so it's a",
    "start": "1654720",
    "end": "1657299"
  },
  {
    "text": "really great way to start exploring and",
    "start": "1657299",
    "end": "1659010"
  },
  {
    "text": "learning some of those skills and",
    "start": "1659010",
    "end": "1660450"
  },
  {
    "text": "putting that putting that developer",
    "start": "1660450",
    "end": "1662820"
  },
  {
    "text": "muscle to work so thank you guys for",
    "start": "1662820",
    "end": "1666179"
  },
  {
    "text": "listening there's a couple of minutes",
    "start": "1666179",
    "end": "1667860"
  },
  {
    "text": "left but we're sort of wrapping up here",
    "start": "1667860",
    "end": "1669059"
  },
  {
    "text": "at the moment I'll be loitering around",
    "start": "1669059",
    "end": "1670320"
  },
  {
    "text": "here for a few minutes otherwise I'll be",
    "start": "1670320",
    "end": "1671850"
  },
  {
    "text": "around the ask an architect booth the",
    "start": "1671850",
    "end": "1673289"
  },
  {
    "text": "rest of the day so if you've got",
    "start": "1673289",
    "end": "1674730"
  },
  {
    "text": "questions or if you want to talk about",
    "start": "1674730",
    "end": "1675809"
  },
  {
    "text": "anything particular you guys are doing",
    "start": "1675809",
    "end": "1677460"
  },
  {
    "text": "feel free to come on over have a chat",
    "start": "1677460",
    "end": "1679500"
  },
  {
    "text": "with me otherwise enjoy the rest of",
    "start": "1679500",
    "end": "1681210"
  },
  {
    "text": "public",
    "start": "1681210",
    "end": "1681570"
  },
  {
    "text": "to summit thank you for coming",
    "start": "1681570",
    "end": "1684570"
  },
  {
    "text": "[Applause]",
    "start": "1684570",
    "end": "1688269"
  }
]