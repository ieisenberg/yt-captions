[
  {
    "start": "0",
    "end": "60000"
  },
  {
    "text": "and so our topic today is going to be building fault tolerant highly available and secure",
    "start": "599",
    "end": "5720"
  },
  {
    "text": "architectures how hard could that be easy just do it all the time this is a",
    "start": "5720",
    "end": "11559"
  },
  {
    "text": "painful painful process is it not so what I'm going to try and share with you today are some learnings some",
    "start": "11559",
    "end": "17160"
  },
  {
    "text": "understandings and some ideas about how you can do things better so why do things break there are",
    "start": "17160",
    "end": "24760"
  },
  {
    "text": "a few good reasons why things break you know facilities break there've been some world publicized string cases of data",
    "start": "24760",
    "end": "31439"
  },
  {
    "text": "centers losing power or you know I've had experiences with data centers flooding and things like that you know",
    "start": "31439",
    "end": "37480"
  },
  {
    "text": "bad things do happen to good people Hardware breaks and it breaks uh in",
    "start": "37480",
    "end": "42600"
  },
  {
    "text": "Annoying Ways I used to work at a storage vendor and we knew that if a particular hard drive broke and it was",
    "start": "42600",
    "end": "49039"
  },
  {
    "text": "part of a batch of other drives the hardware engineer knew just they're all going to fail pretty soon they're in a",
    "start": "49039",
    "end": "54120"
  },
  {
    "text": "family it was a bad day maybe it was Friday afternoon at the plant they're all going to go together networking",
    "start": "54120",
    "end": "60160"
  },
  {
    "start": "60000",
    "end": "122000"
  },
  {
    "text": "networking is one of those things where it just is there's the network we're all on the network right now and uh when it",
    "start": "60160",
    "end": "65880"
  },
  {
    "text": "breaks it breaks monumentally and spectacularly and so it can be really problematic code I was once a coder I",
    "start": "65880",
    "end": "73439"
  },
  {
    "text": "actually started off as a Mainframe coder and I know I've done many a boneheaded coding thing that I thought was the right thing at the time and",
    "start": "73439",
    "end": "79119"
  },
  {
    "text": "stuff goes wrong from that perspective but unfortunately the biggest reason that things break are people and uh I",
    "start": "79119",
    "end": "86960"
  },
  {
    "text": "wonder if many of you in this room like myself uh remember that prickly warm",
    "start": "86960",
    "end": "92000"
  },
  {
    "text": "cold feeling on the back of your neck when you're sitting there at night and you've typed something on the keyboard you've hit enter to go do something and",
    "start": "92000",
    "end": "99439"
  },
  {
    "text": "you've realized bugger that's not going to go well I've just done the wrong thing and there's no easy way back I",
    "start": "99439",
    "end": "106079"
  },
  {
    "text": "think we've all been there so how do we protect against it well fault tolerance is not a binary thing you're not fault",
    "start": "106079",
    "end": "113399"
  },
  {
    "text": "tolerant no it's a Continuum you need to work along this Continuum and you need to do this by automating process es if",
    "start": "113399",
    "end": "121119"
  },
  {
    "text": "you have a human being in the loop you cannot be fault tolerant something breaks an alert trips off eventually",
    "start": "121119",
    "end": "128319"
  },
  {
    "text": "someone wakes up rubs asleep from their eyes figures out what the hell's going on tries to make a decision or escalates",
    "start": "128319",
    "end": "134840"
  },
  {
    "text": "the decision game over you're done finished get the humans out of the loop",
    "start": "134840",
    "end": "139879"
  },
  {
    "text": "the other thing is we need to test and testing is a scary scary thing hands up here who has a highly available system",
    "start": "139879",
    "end": "146640"
  },
  {
    "text": "or a Dr plan yeah you got to put your you've got those plans I know you've got them keep",
    "start": "146640",
    "end": "152160"
  },
  {
    "text": "your hand up if you've tested it in the last 3 months that's good keep your hand up if",
    "start": "152160",
    "end": "157239"
  },
  {
    "text": "you like testing it yeah thank you you should love testing things breaking like",
    "start": "157239",
    "end": "164360"
  },
  {
    "text": "verer talked about this morning game days you should be breaking things aggressively because it shouldn't matter but I'll explain to you how that works",
    "start": "164360",
    "end": "170599"
  },
  {
    "text": "shortly because in the old school world this is how we built systems and I used to work",
    "start": "170599",
    "end": "175959"
  },
  {
    "text": "at Veritas software we sold highly available systems and clustering and this this was the process you'd go to build a brand new system and then you",
    "start": "175959",
    "end": "182680"
  },
  {
    "text": "would beg the CFO for Budget to get another one exactly the same and you'd have to make this case about how I need",
    "start": "182680",
    "end": "188799"
  },
  {
    "text": "this system because it's got to be highly available but it's not going to do any work and it's going to cost you just as much as the first one did please",
    "start": "188799",
    "end": "195159"
  },
  {
    "text": "give me some budget and you get two and something goes wrong and both of them break it just",
    "start": "195159",
    "end": "201560"
  },
  {
    "start": "201000",
    "end": "257000"
  },
  {
    "text": "happens if there's one thing you leave from today with it's this design for failure and nothing will",
    "start": "201560",
    "end": "209480"
  },
  {
    "text": "fail I going to repeat that design for failure and nothing will",
    "start": "209480",
    "end": "216959"
  },
  {
    "text": "fail this architectural pattern will change the way you design build and deliver",
    "start": "216959",
    "end": "223000"
  },
  {
    "text": "systems and it will change the experience that your end users have in using your systems because suddenly a server going",
    "start": "223000",
    "end": "230239"
  },
  {
    "text": "down won't matter a load balance or breaking won't matter a security exploit taking",
    "start": "230239",
    "end": "237159"
  },
  {
    "text": "advantage of won't matter because you can recover transparently automatically and without the end user knowing it's",
    "start": "237159",
    "end": "243640"
  },
  {
    "text": "even happening it is an incredibly powerful and gamechanging technique and",
    "start": "243640",
    "end": "249319"
  },
  {
    "text": "one of the reasons why we can do this is because we are taking advantage of some of the many benefits that we all know",
    "start": "249319",
    "end": "254360"
  },
  {
    "text": "about now about cloud and that is because we don't have to have the big upfront Capital expense to have extra",
    "start": "254360",
    "end": "261000"
  },
  {
    "start": "257000",
    "end": "286000"
  },
  {
    "text": "nodes to use when I need them I don't have to pay for my Dr unless I'm actually using it or testing it I can",
    "start": "261000",
    "end": "268120"
  },
  {
    "text": "deliver very scalable fault tolerant applications that can survive the loss of hundreds of nodes if I want to just",
    "start": "268120",
    "end": "275039"
  },
  {
    "text": "by building it in an elastic fashion and I can improve my time to recovery by",
    "start": "275039",
    "end": "280160"
  },
  {
    "text": "shielding my end user from some of the muck and processing that goes on in all that high availability",
    "start": "280160",
    "end": "285960"
  },
  {
    "text": "work so let's talk about some strategies and some building blocks so obviously there are a lot of services that we",
    "start": "285960",
    "end": "292120"
  },
  {
    "text": "provide from AWS that hopefully many of you like to use and some of them are inherently by Design fault tolerant or",
    "start": "292120",
    "end": "298400"
  },
  {
    "text": "highly available things like the simple storage service Dynamo DB Etc are already built and managed for you so you",
    "start": "298400",
    "end": "304560"
  },
  {
    "text": "don't have to worry about those point to your endpoint do correct error handling you should be good to go however on the",
    "start": "304560",
    "end": "311400"
  },
  {
    "text": "compute side ec2 and the storage side and the database side you still need to practice some processes and procedures",
    "start": "311400",
    "end": "317400"
  },
  {
    "text": "to make sure your application is highly available now when doing this in any",
    "start": "317400",
    "end": "323520"
  },
  {
    "start": "321000",
    "end": "360000"
  },
  {
    "text": "case you work through this stack it's kind of like the Star Wars thing going up there isn't it but essentially you have geographies where I going to put",
    "start": "323520",
    "end": "330319"
  },
  {
    "text": "stuff facilities what big buildings will I put my things in networking how do I",
    "start": "330319",
    "end": "335840"
  },
  {
    "text": "connect my things configuration how do I get them to actually work management how do I run my stuff deployment how do I",
    "start": "335840",
    "end": "343479"
  },
  {
    "text": "put new stuff out there and then resources what is my stuff actually doing and this all translates into",
    "start": "343479",
    "end": "349479"
  },
  {
    "text": "various Concepts within AWS we have regions we have availability zones we have alarming we have a whole",
    "start": "349479",
    "end": "355479"
  },
  {
    "text": "lot of stuff that I'll take you through step by step and we'll examine what we do at each layer",
    "start": "355479",
    "end": "361400"
  },
  {
    "start": "360000",
    "end": "416000"
  },
  {
    "text": "firstly Regional diversity there are multiple regions use them but use them",
    "start": "361400",
    "end": "366759"
  },
  {
    "text": "for the right reasons so multiple regions are used typically to provide",
    "start": "366759",
    "end": "372160"
  },
  {
    "text": "closeness to your end users and the first question I always get is we don't have a region in Australia what do",
    "start": "372160",
    "end": "377360"
  },
  {
    "text": "customers do well let me give you the answer customers typically use two regions when they're servicing customers",
    "start": "377360",
    "end": "383680"
  },
  {
    "text": "in Australia they'll use Singapore or they'll use us West they're the two that",
    "start": "383680",
    "end": "389000"
  },
  {
    "text": "they get the most success out of if you're going to Singapore you'll typically get about 100 milliseconds if",
    "start": "389000",
    "end": "394120"
  },
  {
    "text": "you're on Opus if you're going to us West you'll get about 180 on Telstra roughly speaking however we have",
    "start": "394120",
    "end": "400280"
  },
  {
    "text": "customers who are servicing Global marketplaces they have instances in EU they have instances in Us East they have",
    "start": "400280",
    "end": "406319"
  },
  {
    "text": "instances in Tokyo because they're servicing their local market so you can use this to build up a global footprint",
    "start": "406319",
    "end": "411520"
  },
  {
    "text": "where you're reducing your blast radius of if something goes wrong but the main focus is on",
    "start": "411520",
    "end": "418240"
  },
  {
    "start": "416000",
    "end": "475000"
  },
  {
    "text": "availability zones you can think of availability zones as separate logically",
    "start": "418240",
    "end": "423479"
  },
  {
    "text": "separate and physically separate constructs they have separate power feeds separate Network feeds they're in",
    "start": "423479",
    "end": "428800"
  },
  {
    "text": "separate facilities but they're only useful if you use them so when you're designing",
    "start": "428800",
    "end": "434840"
  },
  {
    "text": "your application you should be deploying across multiple availability zones in such a way that a lot of a component in",
    "start": "434840",
    "end": "441160"
  },
  {
    "text": "any availability Zone does not cause the application to fail this is very important now you",
    "start": "441160",
    "end": "447440"
  },
  {
    "text": "don't have to do this during Devon test you may look at that and say yeah that's a lot of servers going on there well you don't need them in Devon test to have",
    "start": "447440",
    "end": "454080"
  },
  {
    "text": "them don't have to buy them but once you come to a production role out you should be deploying in a diverse way across",
    "start": "454080",
    "end": "460000"
  },
  {
    "text": "availability zones and I'll show you the all singing all dancing version of that",
    "start": "460000",
    "end": "465319"
  },
  {
    "text": "shortly at the network layer there are a few things that we can do to be fault tolerant now you can see this address on",
    "start": "465319",
    "end": "471280"
  },
  {
    "text": "the left the 107 dot address it's not fault tolerant it's just an address the $50 address is fa highly fault tolerant",
    "start": "471280",
    "end": "478159"
  },
  {
    "start": "475000",
    "end": "571000"
  },
  {
    "text": "how can that be well it's an elastic IP address an elastic IP address is an IP",
    "start": "478159",
    "end": "483319"
  },
  {
    "text": "address that you can attach and detach from an instance so if that instance fails you",
    "start": "483319",
    "end": "488879"
  },
  {
    "text": "can have another one running and immediately attach it to it it takes a second to reattach it as far as your end",
    "start": "488879",
    "end": "495319"
  },
  {
    "text": "user is concerned they're hitting exactly the same endpoint but everything behind the curtain has just",
    "start": "495319",
    "end": "501560"
  },
  {
    "text": "changed if you're not familiar with the elastic load balancer please become familiar with it the elastic load",
    "start": "501560",
    "end": "507039"
  },
  {
    "text": "balancer allows you to divide load amongst multiple nodes across multiple availability",
    "start": "507039",
    "end": "512479"
  },
  {
    "text": "zones whilst also maintaining health checks amongst all those nodes for you so it knows where to send the traffic it",
    "start": "512479",
    "end": "519320"
  },
  {
    "text": "knows what's alive and many of you have said for a long time I'd love to use elb but it",
    "start": "519320",
    "end": "524360"
  },
  {
    "text": "doesn't work in VPC it now does so if you didn't know that bit of knowledge you now know it at a high level if we're",
    "start": "524360",
    "end": "531080"
  },
  {
    "text": "talking about cross site failover cross region failover we have the ability within Route 53 our DNS service to",
    "start": "531080",
    "end": "537680"
  },
  {
    "text": "programmatically make changes so you can use rules like weighted round robin and say my production site is 100",
    "start": "537680",
    "end": "545200"
  },
  {
    "text": "my Dr site is zero when I declare a failure or my sensors determine a failure I will programmatically go to",
    "start": "545200",
    "end": "551600"
  },
  {
    "text": "the API and change that waiting so now all my traffic goes to the other site no human involved you now can also use",
    "start": "551600",
    "end": "558959"
  },
  {
    "text": "latency based writing for this to have it happening all the time if you're servicing different",
    "start": "558959",
    "end": "564640"
  },
  {
    "text": "customers there's another new thing that's only available in VPC virtual private cloud which is called the",
    "start": "564680",
    "end": "570160"
  },
  {
    "text": "elastic network interface eni this is a really interesting concept",
    "start": "570160",
    "end": "575399"
  },
  {
    "start": "571000",
    "end": "635000"
  },
  {
    "text": "where what we've done is separated the life cycle of the network interface from the life cycle of the",
    "start": "575399",
    "end": "582360"
  },
  {
    "text": "instance so the instance can be terminated and the network interface maintains its state and is alive still",
    "start": "582360",
    "end": "589240"
  },
  {
    "text": "so this can be used for what we sort of call Poor Man's Dr here we have a web server in the middle there you can see",
    "start": "589240",
    "end": "594760"
  },
  {
    "text": "on the I'll just face this way on your right hand side we have management traffic going through ethernet zero it's",
    "start": "594760",
    "end": "600160"
  },
  {
    "text": "a private address and on your left hand side we have our public IP that we're driving traffic to if that node fails or",
    "start": "600160",
    "end": "608120"
  },
  {
    "text": "I wish to replace it why would I replace it my security has just been compromised I've been hacked I'm in big trouble I",
    "start": "608120",
    "end": "615160"
  },
  {
    "text": "have no idea how forensically I'm going to clean up this instance I'll give you the easiest guaranteed way to clean up",
    "start": "615160",
    "end": "620480"
  },
  {
    "text": "that instance terminate it terminate it start up a new one from a fresh Ami that you knows clean patch it as it should",
    "start": "620480",
    "end": "627560"
  },
  {
    "text": "have been patched in the first place attach attach it to the elastic network interface good to go very powerful",
    "start": "627560",
    "end": "635360"
  },
  {
    "start": "635000",
    "end": "658000"
  },
  {
    "text": "concept now what about building my stack there's Plumbing involved I got to build",
    "start": "635360",
    "end": "640800"
  },
  {
    "text": "security groups I need to attach elastic IPS I got to choose subnets I got to do which uh uh instant size I'm going to",
    "start": "640800",
    "end": "648040"
  },
  {
    "text": "use I got to create auto scaling groups I need to create alarms etc etc etc you",
    "start": "648040",
    "end": "653279"
  },
  {
    "text": "don't have to do this manually you can use cloud formation cloud formation will actually",
    "start": "653279",
    "end": "659680"
  },
  {
    "start": "658000",
    "end": "811000"
  },
  {
    "text": "let you script up using human readable script that you manage as code the entire stack that you have you can even",
    "start": "659680",
    "end": "666440"
  },
  {
    "text": "build your stack in advance and use cloud former to reverse engineer that stack and say how would I build this if",
    "start": "666440",
    "end": "671680"
  },
  {
    "text": "I had to build it again this is incredibly powerful in terms of building Dev and test environments and also",
    "start": "671680",
    "end": "678240"
  },
  {
    "text": "standing up complete new environments in a duplicate so I encourage you to look into this a bit more it's really",
    "start": "678240",
    "end": "684839"
  },
  {
    "text": "cool now the other thing is that you know you want to set the temperature not be running the furnace so what do I mean",
    "start": "684839",
    "end": "691399"
  },
  {
    "text": "by that well it's pretty obvious that the guys on the right are doing a hell of a lot more work than the machine on the left and if any of you have done",
    "start": "691399",
    "end": "697800"
  },
  {
    "text": "shoveling and sweating like that which I think many of us have in from time to time it's not fun so you don't have to",
    "start": "697800",
    "end": "703519"
  },
  {
    "text": "do that you don't have to manage how many nodes am I running how much load is going here and there what you use is a",
    "start": "703519",
    "end": "709120"
  },
  {
    "text": "combination of services cloudwatch alarms and auto scaling cloudwatch is the service that",
    "start": "709120",
    "end": "716480"
  },
  {
    "text": "works by default on most of the resources you already create in AWS Gathering statistics for free on a 5",
    "start": "716480",
    "end": "723320"
  },
  {
    "text": "minute basis cost basis it's on a one minute basis and it maintains that",
    "start": "723320",
    "end": "728560"
  },
  {
    "text": "information could be CPU utilization could be Memory could be disc could be whatever you can then set alarms around",
    "start": "728560",
    "end": "735199"
  },
  {
    "text": "those metrics when my web server Farm is running an 80% CPU utilization for more",
    "start": "735199",
    "end": "740240"
  },
  {
    "text": "than 5 minutes add two nodes that's what Auto scaling does it knows which nodes",
    "start": "740240",
    "end": "745560"
  },
  {
    "text": "to add how to build them where they need to come from now often I get the question of I can't see auto scaling in",
    "start": "745560",
    "end": "751720"
  },
  {
    "text": "the guey it's not in the guey it's command line only at the moment so just be aware if you looking for it it's not",
    "start": "751720",
    "end": "758079"
  },
  {
    "text": "going to be in the goey but it is an incredibly powerful availability technology because you can do really",
    "start": "758079",
    "end": "763519"
  },
  {
    "text": "cool things this is the I don't have to wake up at 2 in the morning rule if I have one node that I'm running that's",
    "start": "763519",
    "end": "768920"
  },
  {
    "text": "doing some sort of function I can create an autoscaling group with a minimum of one and a maximum of one one shall be",
    "start": "768920",
    "end": "776320"
  },
  {
    "text": "the number and it will only be one so if that no fails at any time it'll start right up again I'll get a new one I",
    "start": "776320",
    "end": "782720"
  },
  {
    "text": "don't get woken up the idea here is to say nodes will fail things go wrong bad",
    "start": "782720",
    "end": "788120"
  },
  {
    "text": "things happen it is much better to be fixing them and resolving the problem at",
    "start": "788120",
    "end": "793199"
  },
  {
    "text": "10:00 a.m. in the morning with all your team around you with a nice cup of coffee after a good night's sleep",
    "start": "793199",
    "end": "798480"
  },
  {
    "text": "because everything else just spun itself back up again overnight for you without having to be involved it's a lot worse",
    "start": "798480",
    "end": "804240"
  },
  {
    "text": "to be golden screwdriver something at 2 in the morning excuse me so how does this look",
    "start": "804240",
    "end": "810120"
  },
  {
    "text": "let's forklift an application let's take a traditional three- tier application we've got web instances we've got app",
    "start": "810120",
    "end": "815560"
  },
  {
    "text": "instances we've got a database and we just dump it in one availability Zone highly available and fault tolerant new",
    "start": "815560",
    "end": "823079"
  },
  {
    "text": "so what would we do well we would firstly make sure we deploy across availability zones and we would drive",
    "start": "823079",
    "end": "829839"
  },
  {
    "text": "that by using the elastic load balancer to divide the load evenly across those zones and check the health of the web",
    "start": "829839",
    "end": "836160"
  },
  {
    "text": "tier at the web tier we put in place autoscaling rules that automatically",
    "start": "836160",
    "end": "841680"
  },
  {
    "text": "know how big or how small the farm needs to be given your criteria again it doesn't go out of",
    "start": "841680",
    "end": "847240"
  },
  {
    "text": "control these are your criteria you set the minimum you set the maximum you set the desired size and you set the rules",
    "start": "847240",
    "end": "854399"
  },
  {
    "text": "as to when things change so rules can be workload based I'm struggling give me more nodes or it can be time based I",
    "start": "854399",
    "end": "861639"
  },
  {
    "text": "call this the today tonight effect today the N effect works of so and so you know you get the call from marketing we're",
    "start": "861639",
    "end": "867560"
  },
  {
    "text": "going to be on today tonight tonight it's fantastic everyone's going to be hitting the website I'm in trouble and essentially",
    "start": "867560",
    "end": "874160"
  },
  {
    "text": "what happens is you know that the tsunami wave is coming and you can't do anything about it with autoscale you can",
    "start": "874160",
    "end": "879720"
  },
  {
    "text": "set time based rules and say at 6:30 tonight spin up 40 new nodes and then at",
    "start": "879720",
    "end": "885040"
  },
  {
    "text": "8:00 p.m. shut them down that's the power of Auto scaling you're not involved you're setting that temperature",
    "start": "885040",
    "end": "890959"
  },
  {
    "text": "you're not driving the furnace then we have software load balances in play in the middle there we",
    "start": "890959",
    "end": "896480"
  },
  {
    "text": "want to decouple our application as much as possible possible so that failures in any components do not affect upstream",
    "start": "896480",
    "end": "902639"
  },
  {
    "text": "and downstream components very important then we have similar Auto scaling groups",
    "start": "902639",
    "end": "907680"
  },
  {
    "text": "at the app tier based on the rules around that that make the most sense there may be rules that you would like",
    "start": "907680",
    "end": "913519"
  },
  {
    "text": "to insert such as uh number of connected users or other types of metrics you can publish custom metrics from within your",
    "start": "913519",
    "end": "920079"
  },
  {
    "text": "instances to cloudwatch which can then trigger alarms which can then run the autoscaling",
    "start": "920079",
    "end": "925839"
  },
  {
    "text": "groups so you get this very nice inductive cycle going on that you can build exactly how your application needs",
    "start": "925839",
    "end": "931480"
  },
  {
    "text": "to work then at the database layer what have we done there well first we put some cing in front of it we've used",
    "start": "931480",
    "end": "937440"
  },
  {
    "text": "elastic cache which is hosted mcash D it's not in itself highly available per se its job is to buffer the workload of",
    "start": "937440",
    "end": "945000"
  },
  {
    "text": "the database a database that's not working so hard has less of a tendency to fail certainly in my experience but",
    "start": "945000",
    "end": "951720"
  },
  {
    "text": "at the database layer we need some robustness we need to control our single point of Truth so we use the relational",
    "start": "951720",
    "end": "957120"
  },
  {
    "text": "database service and this allows us to implement synchronous replication between the master and the secondary",
    "start": "957120",
    "end": "963639"
  },
  {
    "text": "node with a common endpoint so all the application has to do is talk to that endpoint and it will",
    "start": "963639",
    "end": "968959"
  },
  {
    "text": "get a database it doesn't care which availability Zone it's in and that synchronous replication for both my SQL",
    "start": "968959",
    "end": "976360"
  },
  {
    "text": "and for Oracle now as well we recently released RDS for SQL Server it's not",
    "start": "976360",
    "end": "981959"
  },
  {
    "text": "replicating that at the moment but you can imagine it will be over time so what if I don't want to do all",
    "start": "981959",
    "end": "988319"
  },
  {
    "start": "986000",
    "end": "1072000"
  },
  {
    "text": "that and I'm a PHP developer or I'm a Java developer or I'm a net",
    "start": "988319",
    "end": "993880"
  },
  {
    "text": "developer I can use elastic beant stalk elastic beant stalk allows you to deploy your code into some parameters and have",
    "start": "993880",
    "end": "1001040"
  },
  {
    "text": "all those Rules and Things created for you now many of you are going oh that's cool let's go um I will warn you at the",
    "start": "1001040",
    "end": "1007120"
  },
  {
    "text": "moment it's only available in Us East and in Tokyo but it is rolling out globally but it is a very interesting",
    "start": "1007120",
    "end": "1013639"
  },
  {
    "text": "option for people who wanted to have the deployment stuff taken away but still want access to all the underlying pieces",
    "start": "1013639",
    "end": "1020440"
  },
  {
    "text": "you still see all your hosts you still see your load balances you see everything but this just takes away some",
    "start": "1020440",
    "end": "1025600"
  },
  {
    "text": "of that work for you now at a fundamental level one of the key things that we use in Amazon is",
    "start": "1025600",
    "end": "1031959"
  },
  {
    "text": "the Amazon machine image these are golden images upon which you build your",
    "start": "1031959",
    "end": "1037520"
  },
  {
    "text": "instances it is very important to maintain your Amis we maintain the ones that we have in the catalog so when",
    "start": "1037520",
    "end": "1043880"
  },
  {
    "text": "there was a recent windows RDP exploit we patched all of our straight away but if you've got your own you need to be",
    "start": "1043880",
    "end": "1049240"
  },
  {
    "text": "patching as well very important there are also other Alternatives like chef and puppet and clad formation in knit",
    "start": "1049240",
    "end": "1056039"
  },
  {
    "text": "where you can build things in a dynamic fashion also when you're building your Amis by default I recommend unless your",
    "start": "1056039",
    "end": "1062679"
  },
  {
    "text": "application demands It Go 64- bit because we now have 64-bit across the fleet which we used to not have so now",
    "start": "1062679",
    "end": "1068760"
  },
  {
    "text": "you can deploy 64-bit apps anywhere you want but I want to lead you into a",
    "start": "1068760",
    "end": "1074120"
  },
  {
    "start": "1072000",
    "end": "1108000"
  },
  {
    "text": "concept that is very powerful bootstrapping who's familiar with bootstrapping a few people bootstrapping",
    "start": "1074120",
    "end": "1080320"
  },
  {
    "text": "is one of those things that some people have heard of some people do some people have never heard of it bootstrapping",
    "start": "1080320",
    "end": "1085400"
  },
  {
    "text": "lets an instance ask and answer a very simple question who am I and what do I",
    "start": "1085400",
    "end": "1091919"
  },
  {
    "text": "do now if you think about it conceptually if an instance can ask that question and answer that question I",
    "start": "1091919",
    "end": "1097400"
  },
  {
    "text": "don't have to touch it anymore I don't have to worry about deployment patching physical interaction it will come to",
    "start": "1097400",
    "end": "1103480"
  },
  {
    "text": "life and do something and be something and be useful for my application so so there are three major",
    "start": "1103480",
    "end": "1110120"
  },
  {
    "start": "1108000",
    "end": "1132000"
  },
  {
    "text": "approaches to this it's a Continuum but I want to share three major approaches and hopefully I won't make you too hungry cuz it's a bit of a pizza analogy",
    "start": "1110120",
    "end": "1116320"
  },
  {
    "text": "here that we're going to work from we can have our frozen readymade pizza that we just take out our fully",
    "start": "1116320",
    "end": "1122440"
  },
  {
    "text": "baked glob golden image we can have our frozen pizza base where we add a bit more to it or we can have our complete",
    "start": "1122440",
    "end": "1128400"
  },
  {
    "text": "customade version so let's step through those in the frozen pizza model I know",
    "start": "1128400",
    "end": "1134280"
  },
  {
    "start": "1132000",
    "end": "1280000"
  },
  {
    "text": "all the bits I'm going to need the operating systems the application binaries the additional helper modules",
    "start": "1134280",
    "end": "1140320"
  },
  {
    "text": "the libraries my code and I'm just going to stamp that sucker out and once I stamp that sucker out I'm going to be",
    "start": "1140320",
    "end": "1146240"
  },
  {
    "text": "building instances like nobody's business and it's just a complete package now you can implement this as",
    "start": "1146240",
    "end": "1151880"
  },
  {
    "text": "part of your development tool chain so that your output is a fully baked Ami this is what Netflix does they've",
    "start": "1151880",
    "end": "1157640"
  },
  {
    "text": "publicly talked about this on their blog their whole tool chain is engineered that this is the output boom fully baked",
    "start": "1157640",
    "end": "1163520"
  },
  {
    "text": "server one way of doing things benefit of this approach boots really fast has everything on it",
    "start": "1163520",
    "end": "1169320"
  },
  {
    "text": "downside of this approach more maintenance if you need to do a change you got to go through that whole cycle again don't",
    "start": "1169320",
    "end": "1174440"
  },
  {
    "text": "you let's look at the frozen pizza base model I know I need to have certain",
    "start": "1174440",
    "end": "1179480"
  },
  {
    "text": "binaries and certain applications always available I just use them all the time so I load them onto my Ami and have them",
    "start": "1179480",
    "end": "1185320"
  },
  {
    "text": "there all the time but at boot up time I'll reach out somewhere could be S3",
    "start": "1185320",
    "end": "1190760"
  },
  {
    "text": "could be somewhere else to get the additional components to download them install them run them or I may patch to",
    "start": "1190760",
    "end": "1197240"
  },
  {
    "text": "the latest versions of those particular applications so I don't have to rebuild my Ami and then I can stamp out my",
    "start": "1197240",
    "end": "1203360"
  },
  {
    "text": "instances again the third option which is the made to order pizza basically I have my",
    "start": "1203360",
    "end": "1210240"
  },
  {
    "text": "operating system and I have a client of some sort that's going to talk to some master orchestration tool could be Chef",
    "start": "1210240",
    "end": "1216760"
  },
  {
    "text": "could be puppet could be any number of tools and when I start up I go and download everything I need and I can",
    "start": "1216760",
    "end": "1222760"
  },
  {
    "text": "build myself automatically every time and then I can just stamp out more",
    "start": "1222760",
    "end": "1228360"
  },
  {
    "text": "comp ations as I go now you may say which is the right one for me there is no right",
    "start": "1228360",
    "end": "1236039"
  },
  {
    "text": "one all of them have different benefits and challenges to them and in many cases",
    "start": "1236039",
    "end": "1241600"
  },
  {
    "text": "I see customers mix and match so if you've got a database you may go with the middle version where the database is",
    "start": "1241600",
    "end": "1247360"
  },
  {
    "text": "always installed it's there you're just patching it and going going for gold if you're in a high powered quick",
    "start": "1247360",
    "end": "1252520"
  },
  {
    "text": "development environment your web servers and app servers May build themselves completely from scratch it's totally",
    "start": "1252520",
    "end": "1258240"
  },
  {
    "text": "your choice choice but you mix and match in the environment as makes",
    "start": "1258240",
    "end": "1263400"
  },
  {
    "text": "sense as I mentioned before these instances have immense power an Amazon web service instance can accept user",
    "start": "1263480",
    "end": "1270480"
  },
  {
    "text": "data can accept about 60k worth of user data on Startup and it can access it from within",
    "start": "1270480",
    "end": "1276840"
  },
  {
    "text": "itself can self- reference itself what does that mean it means I can pass instructions to the instance at",
    "start": "1276840",
    "end": "1283640"
  },
  {
    "start": "1280000",
    "end": "1377000"
  },
  {
    "text": "boot time to go and do things in this example we're saying hey go install some packages and figure yourself get on with",
    "start": "1283640",
    "end": "1290279"
  },
  {
    "text": "it I could pass parameters to say go build yourself a particular way I could",
    "start": "1290279",
    "end": "1295520"
  },
  {
    "text": "pass information to say go tag yourself a particular way in the console suddenly",
    "start": "1295520",
    "end": "1301080"
  },
  {
    "text": "I have the ability to give enough information for it to do something useful to be self-configuring so if you tie this",
    "start": "1301080",
    "end": "1307120"
  },
  {
    "text": "concept together with the autoscaling concept I have this self-managing automated Fleet that can build the",
    "start": "1307120",
    "end": "1314480"
  },
  {
    "text": "latest version of code whenever I need it to in the correct sizing that I need it to at any one",
    "start": "1314480",
    "end": "1320520"
  },
  {
    "text": "time this is a game Cher when you wrap your head around this from an architectural perspective you sit there",
    "start": "1320520",
    "end": "1326360"
  },
  {
    "text": "and say wow I can build some pretty cool stuff now and I can build it to be resilient and robust as much as I need",
    "start": "1326360",
    "end": "1332919"
  },
  {
    "text": "it to because if I lose a node I can spin 10 more up straight away and I'm totally confident it'll be built",
    "start": "1332919",
    "end": "1340919"
  },
  {
    "text": "correctly we talked a bit about the database before I want to reiterate the database make sure you use replication",
    "start": "1340919",
    "end": "1347000"
  },
  {
    "text": "make sure you're using multi-az replication very important to make sure you have that protection if you choose",
    "start": "1347000",
    "end": "1352640"
  },
  {
    "text": "to roll your own database do replication so remember in Amazon web services world you can deploy any database you like on",
    "start": "1352640",
    "end": "1359760"
  },
  {
    "text": "an ec2 instance all RDS does is takes away some of the undifferentiated heavy lifting of configuring the server laying",
    "start": "1359760",
    "end": "1366400"
  },
  {
    "text": "out the storage doing the backups doing the clustering etc etc etc so for many",
    "start": "1366400",
    "end": "1371480"
  },
  {
    "text": "people this is very appealing because it just makes life easier but please use the tools that are",
    "start": "1371480",
    "end": "1376760"
  },
  {
    "text": "available similarly you you can use read replicas Now read replicas are not by default for high availability but again",
    "start": "1376760",
    "end": "1383919"
  },
  {
    "start": "1377000",
    "end": "1512000"
  },
  {
    "text": "what they do is they alleviate load on the primary database a read replica sends data to other nodes that are used",
    "start": "1383919",
    "end": "1390919"
  },
  {
    "text": "for read type traffic so your primary database is only accepting rights so it",
    "start": "1390919",
    "end": "1396480"
  },
  {
    "text": "reduces the workload on that database and let you tune it appropriately for the traffic that it's doing so read",
    "start": "1396480",
    "end": "1402279"
  },
  {
    "text": "replicas are automatically created for MySQL with RDS and you can have up to",
    "start": "1402279",
    "end": "1407679"
  },
  {
    "text": "nine of them so that's the use case for that one so we talked about",
    "start": "1407679",
    "end": "1414600"
  },
  {
    "text": "testing test aggressively Break Stuff it's a lot of fun don't do it you know",
    "start": "1414600",
    "end": "1421080"
  },
  {
    "text": "in the middle of the day when everyone's expecting to use the system but you've got to do things in an aggressive way you should be able to remove components",
    "start": "1421080",
    "end": "1427559"
  },
  {
    "text": "from the system regularly many of you would have heard of chaos monkey which is Netflix's version of this sort of",
    "start": "1427559",
    "end": "1433400"
  },
  {
    "text": "active testing and the good news is towards the end of the year they will be open sourcing the tool so anyone can use",
    "start": "1433400",
    "end": "1439360"
  },
  {
    "text": "it now you may not use the tool as it is you may just take the concepts and ideas from it similarly to what we talk about",
    "start": "1439360",
    "end": "1445039"
  },
  {
    "text": "in terms of game days at AWS what happens if I shut down the primary database",
    "start": "1445039",
    "end": "1451520"
  },
  {
    "text": "arbitrarily do I really know am I confident well we'll find out I'm going to instrument the hell out of everything I'm going to see exactly what went wrong",
    "start": "1451520",
    "end": "1458320"
  },
  {
    "text": "but I'll fix it or I built my application such that I think that I can lose three web servers and it's still",
    "start": "1458320",
    "end": "1464120"
  },
  {
    "text": "going to work well lose those servers terminate terminate terminate let's see what happens very important to test",
    "start": "1464120",
    "end": "1471120"
  },
  {
    "text": "aggressively this should be built into what you do in general things won't break if you built them the right way",
    "start": "1471120",
    "end": "1477080"
  },
  {
    "text": "but again if you design for failure nothing will fail so you've got to assume everything's going to break everything will break how do I get",
    "start": "1477080",
    "end": "1483320"
  },
  {
    "text": "around it that thought process changes the way you design things and it also changes the way you test things too many",
    "start": "1483320",
    "end": "1489399"
  },
  {
    "text": "times in testing I've seen people say that'll never happen and many of you in the room know that's what always happens",
    "start": "1489399",
    "end": "1495120"
  },
  {
    "text": "is the thing you say will never happen it just bad stuff happens usually on about a Saturday night about 11:00 is",
    "start": "1495120",
    "end": "1502320"
  },
  {
    "text": "about the best time for that to happen so let's pivot a little bit and we'll talk a bit about security because",
    "start": "1502320",
    "end": "1508919"
  },
  {
    "text": "everyone loves to talk about security because so exciting you've seen Steve talk a lot",
    "start": "1508919",
    "end": "1515080"
  },
  {
    "start": "1512000",
    "end": "1642000"
  },
  {
    "text": "about security and I'll reiterate some of the things but I just want to share with you something that happened recently so I went through a customer",
    "start": "1515080",
    "end": "1521760"
  },
  {
    "text": "call recently where we talked about all our certifications they took me through the ringer which I invite any customer",
    "start": "1521760",
    "end": "1527240"
  },
  {
    "text": "to do so you know that I want to know about our ISO accreditation and how we secure our sites and who can access what",
    "start": "1527240",
    "end": "1533679"
  },
  {
    "text": "systems and is it true you can't access our data and what about getting into guest machines no we can't get into the guest machines and do you really Shred",
    "start": "1533679",
    "end": "1540480"
  },
  {
    "text": "the drives yep they get shredded you can't buy them from us etc etc we have management things against dos attacks",
    "start": "1540480",
    "end": "1546320"
  },
  {
    "text": "Etc we do all this really cool difficult important security stuff and then I said what about your",
    "start": "1546320",
    "end": "1555559"
  },
  {
    "text": "application how do you secure your data what are you doing with it you we you know we take orders from customers and",
    "start": "1555559",
    "end": "1561360"
  },
  {
    "text": "we send the orders out to the customers so that's interesting um and and I assume you're encrypting that that",
    "start": "1561360",
    "end": "1566480"
  },
  {
    "text": "customer data no ouch don't leave the gate open there is",
    "start": "1566480",
    "end": "1573600"
  },
  {
    "text": "no point looking at all the cool stuff that AWS can bring for you from a security perspective if you forget from",
    "start": "1573600",
    "end": "1579120"
  },
  {
    "text": "the guest operating system up security has to be built in at every single layer",
    "start": "1579120",
    "end": "1584760"
  },
  {
    "text": "all the way along and I'll challenge you right now say if you are hosting on premises it",
    "start": "1584760",
    "end": "1590840"
  },
  {
    "text": "should already be built this way don't believe in the Eminem",
    "start": "1590840",
    "end": "1597039"
  },
  {
    "text": "principle of security the Crusty bit on the outside and the sweet soft interior that's what we elude ourselves into",
    "start": "1597039",
    "end": "1603360"
  },
  {
    "text": "thinking that we have where we have oh there's my site over there I'm securing it's fine I've been in that many data",
    "start": "1603360",
    "end": "1609840"
  },
  {
    "text": "centers I live in Melbourne I've been in that many data centers in Melbourne at 2:00 in the morning unescorted able to",
    "start": "1609840",
    "end": "1615799"
  },
  {
    "text": "do whatever I want banking site government sites I've been there now I'm an honest person I don't do bad stuff",
    "start": "1615799",
    "end": "1622720"
  },
  {
    "text": "but you know what if I wanted to I could have caused havoc in there what the hell was I doing there on my own but you know",
    "start": "1622720",
    "end": "1627760"
  },
  {
    "text": "no one else wants to be there at 2: in the morning I'm there yeah I'm doing some work don't be deluded around the",
    "start": "1627760",
    "end": "1633320"
  },
  {
    "text": "security be active with your security steps so what are some of the things you can do so the first thing is to use",
    "start": "1633320",
    "end": "1640279"
  },
  {
    "text": "identity and access management this allows you within AWS to create groups and users that have specific control and",
    "start": "1640279",
    "end": "1647640"
  },
  {
    "text": "capability is in the environment now let me position what this is used for this",
    "start": "1647640",
    "end": "1653120"
  },
  {
    "text": "is used to provide permissions to the API to the control plane of AWS if you",
    "start": "1653120",
    "end": "1659559"
  },
  {
    "text": "have users who just need to log into servers and systems they don't need any access to AWS to do that you secure them",
    "start": "1659559",
    "end": "1665399"
  },
  {
    "text": "like you normally would active directory other L app tools Etc this is just for users who need to control resources",
    "start": "1665399",
    "end": "1672600"
  },
  {
    "text": "within AWS so here's another tip remember I was talking about that automation piece in",
    "start": "1672600",
    "end": "1678559"
  },
  {
    "text": "many cases the bootstrapping and automation might want to reach out to a resource in AWS it might want to go to",
    "start": "1678559",
    "end": "1684600"
  },
  {
    "text": "an S3 bucket it might want to do some tagging on a host you create a user a",
    "start": "1684600",
    "end": "1690360"
  },
  {
    "text": "system user for those tasks that are individual you can have as many of these as you like an individual user that is",
    "start": "1690360",
    "end": "1696880"
  },
  {
    "text": "locked down in terms of its security capability to only do that task it's doing so if you have a script on your",
    "start": "1696880",
    "end": "1702399"
  },
  {
    "text": "host that can tag itself with data the only API call it can make is the tagging call in ec2 too this gives you",
    "start": "1702399",
    "end": "1710600"
  },
  {
    "start": "1710000",
    "end": "1775000"
  },
  {
    "text": "security if you have users that are logging on to maintain your systems operational staff Etc use multiactor",
    "start": "1710600",
    "end": "1717399"
  },
  {
    "text": "authentication you can add this to all of your users now in the past we only allowed the physical device you had to",
    "start": "1717399",
    "end": "1723320"
  },
  {
    "text": "pay 50 bucks for not a great solution none of us like Hardware devices no longer no more you can now use Virtual",
    "start": "1723320",
    "end": "1730559"
  },
  {
    "text": "devices O type devices so Google Authenticator is one that I personally use works great you can manage it and",
    "start": "1730559",
    "end": "1735919"
  },
  {
    "text": "maintain it yourself this means that changes that are made need that multiactor authentication you can take it even a",
    "start": "1735919",
    "end": "1743000"
  },
  {
    "text": "step further which what's called S3 secure delete you can say that no one can delete an object from S3 unless they",
    "start": "1743000",
    "end": "1749240"
  },
  {
    "text": "use the multiactor authentication tool pretty cool some people take that even further and say no one can delete an",
    "start": "1749240",
    "end": "1755640"
  },
  {
    "text": "object from S3 without using the multiactor authentication and we're not allocating a multiactor authentication",
    "start": "1755640",
    "end": "1761919"
  },
  {
    "text": "device you ain't deleting it it ain't going anywhere so an Nifty way to really worm your data",
    "start": "1761919",
    "end": "1768440"
  },
  {
    "text": "when you're building firewalls it's important to have a tiered approach so here we've got a three-tier",
    "start": "1768440",
    "end": "1775000"
  },
  {
    "start": "1775000",
    "end": "1830000"
  },
  {
    "text": "application our web tier we're opening Port 80 and Port 443 HTTP htps to our",
    "start": "1775000",
    "end": "1781120"
  },
  {
    "text": "web server to the world we want everyone to access it but the only ports that can be accessed on the app tier is traffic",
    "start": "1781120",
    "end": "1787919"
  },
  {
    "text": "coming from the web tier on a specific Port if I were to manage that particular",
    "start": "1787919",
    "end": "1793320"
  },
  {
    "text": "server I can by logging in from my corporate Network CU I specif I a",
    "start": "1793320",
    "end": "1798440"
  },
  {
    "text": "particular address range that I'll accept and a particular Port that I accept or I can come from another host",
    "start": "1798440",
    "end": "1804240"
  },
  {
    "text": "which is called a Bastion host which I can log in from then finally my database tier can only accept traffic from the",
    "start": "1804240",
    "end": "1810000"
  },
  {
    "text": "application tier or can replicate from the on premises database again from a particular address no one else nothing",
    "start": "1810000",
    "end": "1816480"
  },
  {
    "text": "comes in None Shall Pass this does not mean you don't use intrusion detection or intrusion prevention it does not mean",
    "start": "1816480",
    "end": "1822679"
  },
  {
    "text": "you don't use typical good security at your guest level this is an additive level of security but very power ful do",
    "start": "1822679",
    "end": "1829000"
  },
  {
    "text": "use it there are other tools like direct connect if you don't want your data to",
    "start": "1829000",
    "end": "1834360"
  },
  {
    "start": "1830000",
    "end": "1860000"
  },
  {
    "text": "Traverse the internet for some reason the most popular one is the virtual private Cloud where you can create an",
    "start": "1834360",
    "end": "1839919"
  },
  {
    "text": "IPC tunnel between your corporate data center and the Amazon Cloud you can control things like subnets Access",
    "start": "1839919",
    "end": "1846519"
  },
  {
    "text": "Control lists and the like and of course if you don't like sharing with others some of us don't you can have dedicated",
    "start": "1846519",
    "end": "1852679"
  },
  {
    "text": "instances a dedicated instance means that your virtual machines will only go on your Hardware no one else's",
    "start": "1852679",
    "end": "1858760"
  },
  {
    "text": "they don't mix and match but in the cloud security is a shared responsibility there are three",
    "start": "1858760",
    "end": "1865960"
  },
  {
    "start": "1860000",
    "end": "1888000"
  },
  {
    "text": "main components there are the things that we provide to you and that we do we do the infrastructure security and we",
    "start": "1865960",
    "end": "1872480"
  },
  {
    "text": "secure the services but the application security is still up to you you can't Outsource risk",
    "start": "1872480",
    "end": "1878760"
  },
  {
    "text": "it's all up to you make sure you use the tools and take advantage of those that are available to you and pay attention",
    "start": "1878760",
    "end": "1884960"
  },
  {
    "text": "that's really the main thing with security is paying attention all the time so a lot of information a lot to digest",
    "start": "1884960",
    "end": "1892360"
  },
  {
    "start": "1888000",
    "end": "1934000"
  },
  {
    "text": "you might say where do I go from here how do I get some of this information we have this great micrite on the AWS site",
    "start": "1892360",
    "end": "1897559"
  },
  {
    "text": "called the architecture page and that's where there these really good blueprints of common design patterns so patterns",
    "start": "1897559",
    "end": "1903720"
  },
  {
    "text": "like web server across multiple availability zones elastic map ruce jobs pipelining jobs for doing asynchronous",
    "start": "1903720",
    "end": "1910679"
  },
  {
    "text": "processing photo sharing sites media sharing sites very high level useful",
    "start": "1910679",
    "end": "1916039"
  },
  {
    "text": "diagrams and guidance of how to build these also best practice guides about creating Loosely coupled designs and applications",
    "start": "1916039",
    "end": "1923039"
  },
  {
    "text": "about securing your application Etc so I recommend that you visit that that site so now at the point of Q&A I think Joe's",
    "start": "1923039",
    "end": "1930200"
  },
  {
    "text": "got the microphone and he's got t-shirts in hand so please invite any questions",
    "start": "1930200",
    "end": "1936600"
  }
]