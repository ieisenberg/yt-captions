[
  {
    "start": "0",
    "end": "84000"
  },
  {
    "text": "hi today I'm going to show you how you",
    "start": "480",
    "end": "2639"
  },
  {
    "text": "can use power tools for ews Lambda to",
    "start": "2639",
    "end": "5080"
  },
  {
    "text": "simplify the authoring of agents for",
    "start": "5080",
    "end": "7279"
  },
  {
    "text": "Amazon Bedrock agents for Amazon Bedrock",
    "start": "7279",
    "end": "10920"
  },
  {
    "text": "offers you the ability to build and",
    "start": "10920",
    "end": "12799"
  },
  {
    "text": "configure autonomous agents in your",
    "start": "12799",
    "end": "15480"
  },
  {
    "text": "applications for example you can create",
    "start": "15480",
    "end": "18199"
  },
  {
    "text": "an agent that helps customers process",
    "start": "18199",
    "end": "20359"
  },
  {
    "text": "insurance claims or one that helps",
    "start": "20359",
    "end": "22760"
  },
  {
    "text": "customers make travel reservations and",
    "start": "22760",
    "end": "25039"
  },
  {
    "text": "answer questions related to those tasks",
    "start": "25039",
    "end": "27760"
  },
  {
    "text": "you don't have to worry about",
    "start": "27760",
    "end": "29160"
  },
  {
    "text": "provisioning manage it infrastructure or",
    "start": "29160",
    "end": "31759"
  },
  {
    "text": "writing custom",
    "start": "31759",
    "end": "33120"
  },
  {
    "text": "code to get started with agents for",
    "start": "33120",
    "end": "35760"
  },
  {
    "text": "Amazon Bedrock you need to create action",
    "start": "35760",
    "end": "38399"
  },
  {
    "text": "groups that the agent can carry out by",
    "start": "38399",
    "end": "41000"
  },
  {
    "text": "writing Lambda functions in the",
    "start": "41000",
    "end": "42559"
  },
  {
    "text": "programming language of your choice",
    "start": "42559",
    "end": "45120"
  },
  {
    "text": "secondly you need to Define how Bedrock",
    "start": "45120",
    "end": "47600"
  },
  {
    "text": "can carry out those actions by",
    "start": "47600",
    "end": "49640"
  },
  {
    "text": "generating an open API schema that",
    "start": "49640",
    "end": "52280"
  },
  {
    "text": "defines the apis that your Action Group",
    "start": "52280",
    "end": "54480"
  },
  {
    "text": "should call and thirdly with those two",
    "start": "54480",
    "end": "57680"
  },
  {
    "text": "things in your hand you can finally",
    "start": "57680",
    "end": "59600"
  },
  {
    "text": "create create your agent and start",
    "start": "59600",
    "end": "62039"
  },
  {
    "text": "testing with power tools for AWS Lambda",
    "start": "62039",
    "end": "65880"
  },
  {
    "text": "step one and two are super easy power",
    "start": "65880",
    "end": "69840"
  },
  {
    "text": "tools for AWS Lambda is a developer",
    "start": "69840",
    "end": "72400"
  },
  {
    "text": "toolkit to implement serverless best",
    "start": "72400",
    "end": "74720"
  },
  {
    "text": "practices and increase developer",
    "start": "74720",
    "end": "77439"
  },
  {
    "text": "velocity so let's look into an example",
    "start": "77439",
    "end": "80680"
  },
  {
    "text": "and see how power tools can help in this",
    "start": "80680",
    "end": "83720"
  },
  {
    "text": "case here we have a Lambda function",
    "start": "83720",
    "end": "86479"
  },
  {
    "start": "84000",
    "end": "214000"
  },
  {
    "text": "written in Python that has two actions",
    "start": "86479",
    "end": "89960"
  },
  {
    "text": "one to get the latest power tools",
    "start": "89960",
    "end": "91720"
  },
  {
    "text": "version and it Returns the string and",
    "start": "91720",
    "end": "95000"
  },
  {
    "text": "additionally we have another action to",
    "start": "95000",
    "end": "97439"
  },
  {
    "text": "open a support request with the power",
    "start": "97439",
    "end": "99920"
  },
  {
    "text": "tools team by scheduling a meeting but",
    "start": "99920",
    "end": "103000"
  },
  {
    "text": "notice that this action requires an",
    "start": "103000",
    "end": "104880"
  },
  {
    "text": "email parameter and it also returns a",
    "start": "104880",
    "end": "107560"
  },
  {
    "text": "Boolean indicating that the operation",
    "start": "107560",
    "end": "109759"
  },
  {
    "text": "succeeded or not in the first function",
    "start": "109759",
    "end": "113520"
  },
  {
    "text": "we use the piie repository API to get",
    "start": "113520",
    "end": "116240"
  },
  {
    "text": "the latest version live and in the",
    "start": "116240",
    "end": "119159"
  },
  {
    "text": "second one we actually use a slack web",
    "start": "119159",
    "end": "121719"
  },
  {
    "text": "hook to post a message to the",
    "start": "121719",
    "end": "124159"
  },
  {
    "text": "team now remember that besides having a",
    "start": "124159",
    "end": "127200"
  },
  {
    "text": "Lambda function we said that we need to",
    "start": "127200",
    "end": "129720"
  },
  {
    "text": "Define how bedro can carry out those",
    "start": "129720",
    "end": "132200"
  },
  {
    "text": "actions by generating an open API",
    "start": "132200",
    "end": "134879"
  },
  {
    "text": "specification of your actions look at",
    "start": "134879",
    "end": "138040"
  },
  {
    "text": "the open API specification for just",
    "start": "138040",
    "end": "140720"
  },
  {
    "text": "these two actions notice here we have on",
    "start": "140720",
    "end": "144599"
  },
  {
    "text": "the path object two entries a power",
    "start": "144599",
    "end": "147640"
  },
  {
    "text": "tools version operation and a schedule",
    "start": "147640",
    "end": "150160"
  },
  {
    "text": "meeting operation one is a get request",
    "start": "150160",
    "end": "153959"
  },
  {
    "text": "the other one is a post request now you",
    "start": "153959",
    "end": "157280"
  },
  {
    "text": "notice that this is quite verbose and",
    "start": "157280",
    "end": "159879"
  },
  {
    "text": "the file is very very big because it's",
    "start": "159879",
    "end": "162480"
  },
  {
    "text": "meant to be read by computers not humans",
    "start": "162480",
    "end": "165800"
  },
  {
    "text": "but here you can recognize some things",
    "start": "165800",
    "end": "168400"
  },
  {
    "text": "you can recognize method names HTTP",
    "start": "168400",
    "end": "171519"
  },
  {
    "text": "methods you can also recognize return",
    "start": "171519",
    "end": "174080"
  },
  {
    "text": "arguments and you can also recognize",
    "start": "174080",
    "end": "176400"
  },
  {
    "text": "parameters like the email",
    "start": "176400",
    "end": "178440"
  },
  {
    "text": "parameter so with your Lambda function",
    "start": "178440",
    "end": "181640"
  },
  {
    "text": "and these open API specification agents",
    "start": "181640",
    "end": "184799"
  },
  {
    "text": "for Bedrock now knows how to carry out",
    "start": "184799",
    "end": "187720"
  },
  {
    "text": "your actions for instance Bedrock agents",
    "start": "187720",
    "end": "191319"
  },
  {
    "text": "can look into the description of this",
    "start": "191319",
    "end": "193159"
  },
  {
    "text": "API and see that this endpoint can be",
    "start": "193159",
    "end": "195959"
  },
  {
    "text": "used to schedule a meeting with the",
    "start": "195959",
    "end": "199000"
  },
  {
    "text": "team same here if you go with the first",
    "start": "199000",
    "end": "202000"
  },
  {
    "text": "one you can see that the power tools",
    "start": "202000",
    "end": "204120"
  },
  {
    "text": "version operation can be used to return",
    "start": "204120",
    "end": "206680"
  },
  {
    "text": "the latest version of power tools so",
    "start": "206680",
    "end": "209319"
  },
  {
    "text": "this gives enough information to the",
    "start": "209319",
    "end": "211360"
  },
  {
    "text": "agent to understand which operation to",
    "start": "211360",
    "end": "214280"
  },
  {
    "start": "214000",
    "end": "253000"
  },
  {
    "text": "call so the next question is how does",
    "start": "214280",
    "end": "217840"
  },
  {
    "text": "agents for Bedrock invoke your Lambda",
    "start": "217840",
    "end": "220360"
  },
  {
    "text": "function take a look into the",
    "start": "220360",
    "end": "223080"
  },
  {
    "text": "documentation agents for Bedrock will",
    "start": "223080",
    "end": "225480"
  },
  {
    "text": "invoke your Lambda function with this",
    "start": "225480",
    "end": "227599"
  },
  {
    "text": "type of",
    "start": "227599",
    "end": "228720"
  },
  {
    "text": "payload your job is to make sense of the",
    "start": "228720",
    "end": "231840"
  },
  {
    "text": "payload figure out what action Bedrock",
    "start": "231840",
    "end": "234920"
  },
  {
    "text": "wants to take extract and validate",
    "start": "234920",
    "end": "237920"
  },
  {
    "text": "necessary parameters execute your",
    "start": "237920",
    "end": "240640"
  },
  {
    "text": "business logic and return a",
    "start": "240640",
    "end": "243239"
  },
  {
    "text": "result and here is how agents for",
    "start": "243239",
    "end": "245840"
  },
  {
    "text": "Bedrock expects your Lambda function to",
    "start": "245840",
    "end": "248280"
  },
  {
    "text": "reply so how would you handle these in",
    "start": "248280",
    "end": "251159"
  },
  {
    "text": "your Lambda",
    "start": "251159",
    "end": "252959"
  },
  {
    "text": "function well take a look at these",
    "start": "252959",
    "end": "255200"
  },
  {
    "start": "253000",
    "end": "321000"
  },
  {
    "text": "Lambda Handler that are implemented",
    "start": "255200",
    "end": "259199"
  },
  {
    "text": "here you'll have to check the HTTP",
    "start": "259400",
    "end": "262280"
  },
  {
    "text": "method the API path and then compare it",
    "start": "262280",
    "end": "265759"
  },
  {
    "text": "to values that you",
    "start": "265759",
    "end": "267440"
  },
  {
    "text": "define so if the API path is latest",
    "start": "267440",
    "end": "270680"
  },
  {
    "text": "version and the method is get then you",
    "start": "270680",
    "end": "273360"
  },
  {
    "text": "call your business logic but if it's the",
    "start": "273360",
    "end": "276479"
  },
  {
    "text": "scheduled meeting and it's a post in",
    "start": "276479",
    "end": "278960"
  },
  {
    "text": "order to invoke our business logic we",
    "start": "278960",
    "end": "281360"
  },
  {
    "text": "need to get an email so we need to",
    "start": "281360",
    "end": "283800"
  },
  {
    "text": "search inside the event dictionary for a",
    "start": "283800",
    "end": "286080"
  },
  {
    "text": "parameter called email and then finally",
    "start": "286080",
    "end": "288680"
  },
  {
    "text": "pass it to our business logic and of",
    "start": "288680",
    "end": "291639"
  },
  {
    "text": "course I didn't check if the email was",
    "start": "291639",
    "end": "293400"
  },
  {
    "text": "passed in it's a required parameter but",
    "start": "293400",
    "end": "296639"
  },
  {
    "text": "I would have to implement that too and F",
    "start": "296639",
    "end": "299560"
  },
  {
    "text": "finally if bedrock calls your Lambda",
    "start": "299560",
    "end": "301680"
  },
  {
    "text": "function wiin an action that you don't",
    "start": "301680",
    "end": "303199"
  },
  {
    "text": "know you should also inform Bedrock that",
    "start": "303199",
    "end": "305639"
  },
  {
    "text": "it's not valid at the end I handled the",
    "start": "305639",
    "end": "309160"
  },
  {
    "text": "response so I had to be to build this",
    "start": "309160",
    "end": "311880"
  },
  {
    "text": "big payload with all the events that",
    "start": "311880",
    "end": "314039"
  },
  {
    "text": "were passed in together with a response",
    "start": "314039",
    "end": "316440"
  },
  {
    "text": "body from your business logic and",
    "start": "316440",
    "end": "318639"
  },
  {
    "text": "finally return it in this",
    "start": "318639",
    "end": "320960"
  },
  {
    "text": "format so you can see that this is a lot",
    "start": "320960",
    "end": "324120"
  },
  {
    "start": "321000",
    "end": "725000"
  },
  {
    "text": "of code that you have to",
    "start": "324120",
    "end": "325840"
  },
  {
    "text": "maintain as you add more and more",
    "start": "325840",
    "end": "328160"
  },
  {
    "text": "operations to your Lambda function more",
    "start": "328160",
    "end": "330639"
  },
  {
    "text": "possibilities and action groups these if",
    "start": "330639",
    "end": "333479"
  },
  {
    "text": "else conditions will only get bigger as",
    "start": "333479",
    "end": "336759"
  },
  {
    "text": "you had additional input parameters this",
    "start": "336759",
    "end": "339720"
  },
  {
    "text": "code here would also grow Additionally",
    "start": "339720",
    "end": "342360"
  },
  {
    "text": "you have to keep in mind that you always",
    "start": "342360",
    "end": "344120"
  },
  {
    "text": "have to update your open API schema as",
    "start": "344120",
    "end": "346800"
  },
  {
    "text": "you develop your API and N More",
    "start": "346800",
    "end": "348919"
  },
  {
    "text": "operations so the question is how power",
    "start": "348919",
    "end": "351639"
  },
  {
    "text": "tools can help",
    "start": "351639",
    "end": "353120"
  },
  {
    "text": "here power tools can help you in two",
    "start": "353120",
    "end": "355960"
  },
  {
    "text": "ways first of all power tools can reduce",
    "start": "355960",
    "end": "359560"
  },
  {
    "text": "all these boilerplate codes and do it",
    "start": "359560",
    "end": "361919"
  },
  {
    "text": "automatically for you and second power",
    "start": "361919",
    "end": "365240"
  },
  {
    "text": "tools can automate the generation and",
    "start": "365240",
    "end": "367440"
  },
  {
    "text": "validation of open API schemas directly",
    "start": "367440",
    "end": "370680"
  },
  {
    "text": "by inspecting your code let's look at",
    "start": "370680",
    "end": "373360"
  },
  {
    "text": "how this example can be done with power",
    "start": "373360",
    "end": "376080"
  },
  {
    "text": "tools after installing power tools you",
    "start": "376080",
    "end": "378840"
  },
  {
    "text": "can declare a Bedrock agent resolver let",
    "start": "378840",
    "end": "382400"
  },
  {
    "text": "imported from Power Tools even",
    "start": "382400",
    "end": "385440"
  },
  {
    "text": "andler a Bedrock import bedrock agent",
    "start": "385440",
    "end": "390000"
  },
  {
    "text": "resolver let's declare",
    "start": "390000",
    "end": "393199"
  },
  {
    "text": "it and then the second thing you have to",
    "start": "393199",
    "end": "395520"
  },
  {
    "text": "do you have to decorate each of your",
    "start": "395520",
    "end": "397880"
  },
  {
    "text": "actions with a little bit of metadata",
    "start": "397880",
    "end": "400599"
  },
  {
    "text": "including the HTTP method the API path",
    "start": "400599",
    "end": "403880"
  },
  {
    "text": "and a human readable description of what",
    "start": "403880",
    "end": "406319"
  },
  {
    "text": "your action is capable of let's do that",
    "start": "406319",
    "end": "409199"
  },
  {
    "text": "for each of our two",
    "start": "409199",
    "end": "411599"
  },
  {
    "text": "actions first of all on the power tools",
    "start": "411599",
    "end": "414080"
  },
  {
    "text": "version I will say and decorate that",
    "start": "414080",
    "end": "417199"
  },
  {
    "text": "this is yeah latest version why not and",
    "start": "417199",
    "end": "421319"
  },
  {
    "text": "then I need a description which actually",
    "start": "421319",
    "end": "424720"
  },
  {
    "text": "sounds good I'll just remove this to be",
    "start": "424720",
    "end": "427199"
  },
  {
    "text": "more",
    "start": "427199",
    "end": "428720"
  },
  {
    "text": "explicit so here I'm saying that this",
    "start": "428720",
    "end": "431960"
  },
  {
    "text": "method should be uh represented by a get",
    "start": "431960",
    "end": "435080"
  },
  {
    "text": "to latest version and it has some",
    "start": "435080",
    "end": "437919"
  },
  {
    "text": "additional metadata saying that this",
    "start": "437919",
    "end": "439639"
  },
  {
    "text": "method Returns the latest version of",
    "start": "439639",
    "end": "441520"
  },
  {
    "text": "power tools let's do the same for the",
    "start": "441520",
    "end": "443919"
  },
  {
    "text": "schedule meeting here so this will be a",
    "start": "443919",
    "end": "447000"
  },
  {
    "text": "post uh let's call it schedule meeting",
    "start": "447000",
    "end": "451319"
  },
  {
    "text": "and yeah schedule a meeting with the",
    "start": "452560",
    "end": "455120"
  },
  {
    "text": "team that's an option I also like",
    "start": "455120",
    "end": "458280"
  },
  {
    "text": "another option like open the support",
    "start": "458280",
    "end": "461160"
  },
  {
    "text": "request by scheduling",
    "start": "461160",
    "end": "464720"
  },
  {
    "text": "uh meeting with the",
    "start": "464720",
    "end": "468360"
  },
  {
    "text": "team all",
    "start": "468360",
    "end": "470120"
  },
  {
    "text": "right so we added a little bit of",
    "start": "470120",
    "end": "473800"
  },
  {
    "text": "metadata to our functions we should also",
    "start": "473800",
    "end": "478280"
  },
  {
    "text": "to help bedrock",
    "start": "478280",
    "end": "480520"
  },
  {
    "text": "at tell Bedrock what is email parameter",
    "start": "480520",
    "end": "483560"
  },
  {
    "text": "is sometimes it's very clever but it",
    "start": "483560",
    "end": "485639"
  },
  {
    "text": "doesn't hurt to give it more metadata to",
    "start": "485639",
    "end": "488360"
  },
  {
    "text": "do that with power tools use the",
    "start": "488360",
    "end": "490919"
  },
  {
    "text": "built-in annotated type from python you",
    "start": "490919",
    "end": "494159"
  },
  {
    "text": "say that this is a query",
    "start": "494159",
    "end": "497120"
  },
  {
    "text": "string and add a little bit more",
    "start": "497120",
    "end": "500759"
  },
  {
    "text": "description saying uh email address of",
    "start": "500759",
    "end": "505120"
  },
  {
    "text": "the",
    "start": "505120",
    "end": "506599"
  },
  {
    "text": "customer and we need to import this",
    "start": "506599",
    "end": "508560"
  },
  {
    "text": "query",
    "start": "508560",
    "end": "509879"
  },
  {
    "text": "let's see if we can do it from here",
    "start": "509879",
    "end": "512039"
  },
  {
    "text": "event handler open API parameters",
    "start": "512039",
    "end": "516399"
  },
  {
    "text": "import there you",
    "start": "516399",
    "end": "518919"
  },
  {
    "text": "go all right so now I added a little bit",
    "start": "518919",
    "end": "522159"
  },
  {
    "text": "of metadata to my",
    "start": "522159",
    "end": "524279"
  },
  {
    "text": "types maybe I could also annotate this",
    "start": "524279",
    "end": "526880"
  },
  {
    "text": "one what does the Boolean mean so let's",
    "start": "526880",
    "end": "530240"
  },
  {
    "text": "say that this is um result which is a",
    "start": "530240",
    "end": "534720"
  },
  {
    "text": "body and let's say true if the meeting",
    "start": "534720",
    "end": "537440"
  },
  {
    "text": "was scheduled there you go sounds",
    "start": "537440",
    "end": "539519"
  },
  {
    "text": "absolutely good just need to uh import",
    "start": "539519",
    "end": "545800"
  },
  {
    "text": "it there you",
    "start": "546839",
    "end": "548800"
  },
  {
    "text": "go so now that we annotated our business",
    "start": "548800",
    "end": "552480"
  },
  {
    "text": "logic with a little bit more metadata",
    "start": "552480",
    "end": "554560"
  },
  {
    "text": "including HTTP",
    "start": "554560",
    "end": "556560"
  },
  {
    "text": "endpoint um and HTTP method and",
    "start": "556560",
    "end": "559720"
  },
  {
    "text": "description we are ready for the fun",
    "start": "559720",
    "end": "563000"
  },
  {
    "text": "part because remember we had this Lambda",
    "start": "563000",
    "end": "566040"
  },
  {
    "text": "Handler here with a lot of boiler plate",
    "start": "566040",
    "end": "568920"
  },
  {
    "text": "code that we don't want to maintain so",
    "start": "568920",
    "end": "571519"
  },
  {
    "text": "how to do this with power tools this is",
    "start": "571519",
    "end": "573760"
  },
  {
    "text": "the best part you select all this code",
    "start": "573760",
    "end": "577240"
  },
  {
    "text": "and you simply return your app. resolve",
    "start": "577240",
    "end": "581399"
  },
  {
    "text": "event and",
    "start": "581399",
    "end": "583079"
  },
  {
    "text": "context there you go you delegate all",
    "start": "583079",
    "end": "586120"
  },
  {
    "text": "the resolve to power tools you can",
    "start": "586120",
    "end": "588040"
  },
  {
    "text": "forget about your Lambda Handler because",
    "start": "588040",
    "end": "590839"
  },
  {
    "text": "power tools will take care of all the",
    "start": "590839",
    "end": "592839"
  },
  {
    "text": "routing all the validation all the",
    "start": "592839",
    "end": "595720"
  },
  {
    "text": "parameters all the HTTP methods and so",
    "start": "595720",
    "end": "598560"
  },
  {
    "text": "on power tools has everything you need",
    "start": "598560",
    "end": "601959"
  },
  {
    "text": "it needs to actually pull this off so",
    "start": "601959",
    "end": "604959"
  },
  {
    "text": "this solves the first part reducing the",
    "start": "604959",
    "end": "606680"
  },
  {
    "text": "boiler plate code allowing you to",
    "start": "606680",
    "end": "609040"
  },
  {
    "text": "actually focus on your business logic",
    "start": "609040",
    "end": "611120"
  },
  {
    "text": "instead of all the plumbing but we also",
    "start": "611120",
    "end": "613720"
  },
  {
    "text": "said that power tools could help you",
    "start": "613720",
    "end": "615360"
  },
  {
    "text": "generate the open API schemas directly",
    "start": "615360",
    "end": "618079"
  },
  {
    "text": "from your",
    "start": "618079",
    "end": "619640"
  },
  {
    "text": "code one good way to do it is to add a",
    "start": "619640",
    "end": "622519"
  },
  {
    "text": "little bit of code to your Lambda",
    "start": "622519",
    "end": "624920"
  },
  {
    "text": "function and in if I execute this file",
    "start": "624920",
    "end": "628440"
  },
  {
    "text": "directly with python I can",
    "start": "628440",
    "end": "631120"
  },
  {
    "text": "print the",
    "start": "631120",
    "end": "633399"
  },
  {
    "text": "app. get open API Json",
    "start": "633399",
    "end": "637160"
  },
  {
    "text": "schema yes that's true power tools has",
    "start": "637160",
    "end": "640480"
  },
  {
    "text": "everything it needs to generate the open",
    "start": "640480",
    "end": "642360"
  },
  {
    "text": "API Json schema for you we know what",
    "start": "642360",
    "end": "645440"
  },
  {
    "text": "your uh endpoints are we know what is",
    "start": "645440",
    "end": "648920"
  },
  {
    "text": "the metadata that you should be added we",
    "start": "648920",
    "end": "651079"
  },
  {
    "text": "know all the parameters we know all the",
    "start": "651079",
    "end": "652800"
  },
  {
    "text": "types we know everything so we actually",
    "start": "652800",
    "end": "655279"
  },
  {
    "text": "can generate generate that for",
    "start": "655279",
    "end": "657680"
  },
  {
    "text": "you let's open open our",
    "start": "657680",
    "end": "661360"
  },
  {
    "text": "terminal and invoke the file that we",
    "start": "661360",
    "end": "665200"
  },
  {
    "text": "just",
    "start": "665200",
    "end": "668200"
  },
  {
    "text": "touched and notice that I get a big open",
    "start": "668519",
    "end": "672279"
  },
  {
    "text": "API specification on the output let's",
    "start": "672279",
    "end": "675000"
  },
  {
    "text": "look at it a better way let's redirect",
    "start": "675000",
    "end": "676839"
  },
  {
    "text": "this to an open API Json",
    "start": "676839",
    "end": "679079"
  },
  {
    "text": "file and then open it on our code",
    "start": "679079",
    "end": "683920"
  },
  {
    "text": "editor and here you are the open API",
    "start": "683920",
    "end": "687120"
  },
  {
    "text": "specification fully generated for you",
    "start": "687120",
    "end": "690040"
  },
  {
    "text": "you get the paths you get the HTTP",
    "start": "690040",
    "end": "692320"
  },
  {
    "text": "method you get the description you get",
    "start": "692320",
    "end": "695279"
  },
  {
    "text": "the response types uh you get some",
    "start": "695279",
    "end": "697800"
  },
  {
    "text": "validation errors too here for the",
    "start": "697800",
    "end": "700360"
  },
  {
    "text": "schedule meeting we see that it's a post",
    "start": "700360",
    "end": "702760"
  },
  {
    "text": "it requires an email string it has a",
    "start": "702760",
    "end": "705800"
  },
  {
    "text": "description and it returns a Boolean",
    "start": "705800",
    "end": "708639"
  },
  {
    "text": "that is true if the meeting was",
    "start": "708639",
    "end": "710440"
  },
  {
    "text": "scheduled and everything below all the",
    "start": "710440",
    "end": "713360"
  },
  {
    "text": "components everything that is on open",
    "start": "713360",
    "end": "715360"
  },
  {
    "text": "API 140 lines written for you",
    "start": "715360",
    "end": "718399"
  },
  {
    "text": "automatically basically generated",
    "start": "718399",
    "end": "720120"
  },
  {
    "text": "directly from your code it's awesome",
    "start": "720120",
    "end": "724240"
  },
  {
    "text": "right so now that we have a Lambda",
    "start": "724240",
    "end": "726720"
  },
  {
    "text": "function and an open API spec how do I",
    "start": "726720",
    "end": "729720"
  },
  {
    "text": "create an agent for Bedrock first I need",
    "start": "729720",
    "end": "733040"
  },
  {
    "text": "to upload my Lambda function to",
    "start": "733040",
    "end": "735320"
  },
  {
    "text": "AWS here I'm using an AWS Sam template",
    "start": "735320",
    "end": "739320"
  },
  {
    "text": "to describe my Lambda function AWS Sam",
    "start": "739320",
    "end": "742760"
  },
  {
    "text": "is an open-source developer tool that",
    "start": "742760",
    "end": "745360"
  },
  {
    "text": "simplifies and improves the experience",
    "start": "745360",
    "end": "747399"
  },
  {
    "text": "of building and running serverless",
    "start": "747399",
    "end": "749360"
  },
  {
    "text": "applications on",
    "start": "749360",
    "end": "750959"
  },
  {
    "text": "AWS you can see here that I'm declaring",
    "start": "750959",
    "end": "753720"
  },
  {
    "text": "my Lambda function as a serverless",
    "start": "753720",
    "end": "756240"
  },
  {
    "text": "function and also I add additional",
    "start": "756240",
    "end": "759240"
  },
  {
    "text": "permissions to the Lambda function that",
    "start": "759240",
    "end": "761480"
  },
  {
    "text": "allows Bedrock to actually invoke this",
    "start": "761480",
    "end": "763880"
  },
  {
    "text": "function inside my account so these are",
    "start": "763880",
    "end": "767360"
  },
  {
    "text": "the two things I need to deploy the",
    "start": "767360",
    "end": "769120"
  },
  {
    "text": "Lambda function and let's deploy",
    "start": "769120",
    "end": "771880"
  },
  {
    "text": "it to deploy it we will use the Sam CLI",
    "start": "771880",
    "end": "776279"
  },
  {
    "text": "so I will go to the terminal and type",
    "start": "776279",
    "end": "778839"
  },
  {
    "text": "Sam",
    "start": "778839",
    "end": "779959"
  },
  {
    "text": "deploy and this will upload my Lambda",
    "start": "779959",
    "end": "782519"
  },
  {
    "text": "function to AWS and deploy it on the AWS",
    "start": "782519",
    "end": "785920"
  },
  {
    "text": "region I've",
    "start": "785920",
    "end": "788560"
  },
  {
    "start": "790000",
    "end": "1039000"
  },
  {
    "text": "chosen and if I go to my AWS console and",
    "start": "790279",
    "end": "794199"
  },
  {
    "text": "I go to my lambdas I have my Lambda",
    "start": "794199",
    "end": "796639"
  },
  {
    "text": "function that I just",
    "start": "796639",
    "end": "798320"
  },
  {
    "text": "created and uh it's just a regular",
    "start": "798320",
    "end": "801160"
  },
  {
    "text": "Lambda like you are used to it so how do",
    "start": "801160",
    "end": "804120"
  },
  {
    "text": "we create a Bedrock agent now let's go",
    "start": "804120",
    "end": "807639"
  },
  {
    "text": "to the Amazon bedrock console page on",
    "start": "807639",
    "end": "810360"
  },
  {
    "text": "the menu we click",
    "start": "810360",
    "end": "811839"
  },
  {
    "text": "agents and then we click create agent",
    "start": "811839",
    "end": "815320"
  },
  {
    "text": "let's give it a name power tools agent",
    "start": "815320",
    "end": "819639"
  },
  {
    "text": "we know we don't need a description and",
    "start": "819639",
    "end": "822480"
  },
  {
    "text": "we can leave all the other permissions",
    "start": "822480",
    "end": "824320"
  },
  {
    "text": "or um values at default for the",
    "start": "824320",
    "end": "827600"
  },
  {
    "text": "permissions I'm using my existing role",
    "start": "827600",
    "end": "829399"
  },
  {
    "text": "there's no need to create another one",
    "start": "829399",
    "end": "832079"
  },
  {
    "text": "and looks good so we click",
    "start": "832079",
    "end": "834040"
  },
  {
    "text": "next now we can select the model the",
    "start": "834040",
    "end": "837040"
  },
  {
    "text": "foundation model that you will be used",
    "start": "837040",
    "end": "838560"
  },
  {
    "text": "to to",
    "start": "838560",
    "end": "839480"
  },
  {
    "text": "communicate uh and the most important",
    "start": "839480",
    "end": "841920"
  },
  {
    "text": "here is that we need to give some",
    "start": "841920",
    "end": "843680"
  },
  {
    "text": "instructions to the agent so what kind",
    "start": "843680",
    "end": "846839"
  },
  {
    "text": "of um agent should this be there you go",
    "start": "846839",
    "end": "850360"
  },
  {
    "text": "you are a power tools fors Lambda",
    "start": "850360",
    "end": "852360"
  },
  {
    "text": "customer service agent next and this we",
    "start": "852360",
    "end": "856399"
  },
  {
    "text": "can start adding action groups so um we",
    "start": "856399",
    "end": "861079"
  },
  {
    "text": "can start by saying version and support",
    "start": "861079",
    "end": "864720"
  },
  {
    "text": "it's just for you to organize your",
    "start": "864720",
    "end": "866000"
  },
  {
    "text": "Action Group and now we need to select L",
    "start": "866000",
    "end": "868959"
  },
  {
    "text": "the function so we'll pick the one that",
    "start": "868959",
    "end": "871480"
  },
  {
    "text": "we created",
    "start": "871480",
    "end": "873440"
  },
  {
    "text": "already and finally we need an API",
    "start": "873440",
    "end": "876880"
  },
  {
    "text": "schema for our Lambda function remember",
    "start": "876880",
    "end": "879639"
  },
  {
    "text": "we needed both right so I've already",
    "start": "879639",
    "end": "882199"
  },
  {
    "text": "uploaded the open API Json file to S3",
    "start": "882199",
    "end": "885680"
  },
  {
    "text": "and I'll paste the URL here and I click",
    "start": "885680",
    "end": "888759"
  },
  {
    "text": "next we don't use knowledge base here",
    "start": "888759",
    "end": "891399"
  },
  {
    "text": "today so we'll just click",
    "start": "891399",
    "end": "893839"
  },
  {
    "text": "next and finally we review our settings",
    "start": "893839",
    "end": "897040"
  },
  {
    "text": "and we create the agent",
    "start": "897040",
    "end": "900120"
  },
  {
    "text": "boom that's it so finally we can test",
    "start": "900120",
    "end": "903720"
  },
  {
    "text": "our agent let's open the test",
    "start": "903720",
    "end": "906920"
  },
  {
    "text": "panel and try to write a message for",
    "start": "906920",
    "end": "910120"
  },
  {
    "text": "instance what is the latest version of",
    "start": "910120",
    "end": "913880"
  },
  {
    "text": "power",
    "start": "913880",
    "end": "916199"
  },
  {
    "text": "tools so now Bedrock knows about our",
    "start": "916240",
    "end": "919160"
  },
  {
    "text": "Lambda function and it knows where the",
    "start": "919160",
    "end": "921320"
  },
  {
    "text": "open API specification is in notice",
    "start": "921320",
    "end": "924279"
  },
  {
    "text": "there's a function called latest version",
    "start": "924279",
    "end": "927360"
  },
  {
    "text": "it will call the Lambda function",
    "start": "927360",
    "end": "929120"
  },
  {
    "text": "retrieve the response and format the",
    "start": "929120",
    "end": "931440"
  },
  {
    "text": "answer for us let's see how it looks",
    "start": "931440",
    "end": "934079"
  },
  {
    "text": "like there you go the latest version of",
    "start": "934079",
    "end": "936959"
  },
  {
    "text": "power tools is 2.",
    "start": "936959",
    "end": "939680"
  },
  {
    "text": "32.0 and if you click show trace you can",
    "start": "939680",
    "end": "942560"
  },
  {
    "text": "see exactly the steps that agents for",
    "start": "942560",
    "end": "945120"
  },
  {
    "text": "Bedrock",
    "start": "945120",
    "end": "946639"
  },
  {
    "text": "Took so now let's go back and try to",
    "start": "946639",
    "end": "949519"
  },
  {
    "text": "write another",
    "start": "949519",
    "end": "950839"
  },
  {
    "text": "test now let's ask I still need help can",
    "start": "950839",
    "end": "955920"
  },
  {
    "text": "you please schedule a meeting with me",
    "start": "955920",
    "end": "958680"
  },
  {
    "text": "[Applause]",
    "start": "958680",
    "end": "960560"
  },
  {
    "text": "now remember that we had a function",
    "start": "960560",
    "end": "963000"
  },
  {
    "text": "saying that you can schedule a meeting",
    "start": "963000",
    "end": "966079"
  },
  {
    "text": "but T required an email parameter in",
    "start": "966079",
    "end": "969399"
  },
  {
    "text": "order to work so we cannot call that",
    "start": "969399",
    "end": "971639"
  },
  {
    "text": "function without an email parameter",
    "start": "971639",
    "end": "974000"
  },
  {
    "text": "Bedrock knows this by reading the open",
    "start": "974000",
    "end": "976160"
  },
  {
    "text": "API specification so before he was able",
    "start": "976160",
    "end": "978839"
  },
  {
    "text": "to fulfill our requests he will actually",
    "start": "978839",
    "end": "981880"
  },
  {
    "text": "ask you what is the email address that",
    "start": "981880",
    "end": "983959"
  },
  {
    "text": "we need so let's give it an email",
    "start": "983959",
    "end": "986759"
  },
  {
    "text": "address power tools",
    "start": "986759",
    "end": "990279"
  },
  {
    "text": "at example.org",
    "start": "990279",
    "end": "993759"
  },
  {
    "text": "now notice that we don't even have to",
    "start": "994839",
    "end": "997360"
  },
  {
    "text": "repeat the question because the large",
    "start": "997360",
    "end": "1000560"
  },
  {
    "text": "language model Knows by the context what",
    "start": "1000560",
    "end": "1003279"
  },
  {
    "text": "the context is what the question was but",
    "start": "1003279",
    "end": "1005800"
  },
  {
    "text": "now that it has everything to schedule",
    "start": "1005800",
    "end": "1008040"
  },
  {
    "text": "that request it can now do it please",
    "start": "1008040",
    "end": "1011399"
  },
  {
    "text": "check your inbox for the eting invite",
    "start": "1011399",
    "end": "1013319"
  },
  {
    "text": "let me know if you need any other",
    "start": "1013319",
    "end": "1015079"
  },
  {
    "text": "assistance so this is just a brief",
    "start": "1015079",
    "end": "1017399"
  },
  {
    "text": "overview of what power tools can do for",
    "start": "1017399",
    "end": "1019839"
  },
  {
    "text": "you and now it makes it so easy to",
    "start": "1019839",
    "end": "1022680"
  },
  {
    "text": "create agents for Amazon Bedrock feel",
    "start": "1022680",
    "end": "1025720"
  },
  {
    "text": "free to check out the other power tools",
    "start": "1025720",
    "end": "1027720"
  },
  {
    "text": "utilities create GitHub issues if",
    "start": "1027720",
    "end": "1030199"
  },
  {
    "text": "necessary or speak to us directly on",
    "start": "1030199",
    "end": "1032720"
  },
  {
    "text": "Discord thanks for",
    "start": "1032720",
    "end": "1036159"
  },
  {
    "text": "watching",
    "start": "1038360",
    "end": "1041360"
  }
]