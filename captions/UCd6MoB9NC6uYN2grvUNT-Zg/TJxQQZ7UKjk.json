[
  {
    "text": "hello everyone my name is Craig Simon",
    "start": "1360",
    "end": "4000"
  },
  {
    "text": "and I'm the Senior Solutions architect",
    "start": "4000",
    "end": "5600"
  },
  {
    "text": "with Amazon web services today I will",
    "start": "5600",
    "end": "8360"
  },
  {
    "text": "talk about in demo a new feature in AWS",
    "start": "8360",
    "end": "10800"
  },
  {
    "text": "Lambda called the AWS parameters and",
    "start": "10800",
    "end": "13440"
  },
  {
    "text": "secrets Lambda",
    "start": "13440",
    "end": "15160"
  },
  {
    "text": "extension with this new feature AWS",
    "start": "15160",
    "end": "18039"
  },
  {
    "text": "Lambda now supports retrieval and",
    "start": "18039",
    "end": "20080"
  },
  {
    "text": "caching parameters from aw systems",
    "start": "20080",
    "end": "22640"
  },
  {
    "text": "manager parameter store and secrets from",
    "start": "22640",
    "end": "25279"
  },
  {
    "text": "AWS Secrets manager in a much simpler",
    "start": "25279",
    "end": "27920"
  },
  {
    "text": "and cost-effective way than was possible",
    "start": "27920",
    "end": "29519"
  },
  {
    "text": "before",
    "start": "29519",
    "end": "30679"
  },
  {
    "text": "this lightweight extension caches",
    "start": "30679",
    "end": "32360"
  },
  {
    "text": "parameters and secrets and persists them",
    "start": "32360",
    "end": "34840"
  },
  {
    "text": "through the life cycle the Lambda",
    "start": "34840",
    "end": "36239"
  },
  {
    "text": "function or other configured limit",
    "start": "36239",
    "end": "39520"
  },
  {
    "text": "previous to this extension developers",
    "start": "39520",
    "end": "41800"
  },
  {
    "text": "would need to initialize either the core",
    "start": "41800",
    "end": "44480"
  },
  {
    "text": "library of a service or the entire",
    "start": "44480",
    "end": "47120"
  },
  {
    "text": "service SDK inside of their Lambda",
    "start": "47120",
    "end": "49640"
  },
  {
    "text": "functions increasing cold start times",
    "start": "49640",
    "end": "52079"
  },
  {
    "text": "and requiring the use of additional",
    "start": "52079",
    "end": "53359"
  },
  {
    "text": "service API calls to accomplish the task",
    "start": "53359",
    "end": "56520"
  },
  {
    "text": "now customers can simply use the",
    "start": "56520",
    "end": "58160"
  },
  {
    "text": "parameters and secrets Lambda extension",
    "start": "58160",
    "end": "61079"
  },
  {
    "text": "to enable the extension you simply",
    "start": "61079",
    "end": "63440"
  },
  {
    "text": "attach a new Lambda layer to a new or",
    "start": "63440",
    "end": "65720"
  },
  {
    "text": "existing Lambda function via either the",
    "start": "65720",
    "end": "68080"
  },
  {
    "text": "AWS Management console or the AWS",
    "start": "68080",
    "end": "71400"
  },
  {
    "text": "CLI just by attaching the parameters and",
    "start": "71400",
    "end": "73880"
  },
  {
    "text": "secrets Lambda extension layer to your",
    "start": "73880",
    "end": "75640"
  },
  {
    "text": "function it will start working with",
    "start": "75640",
    "end": "77759"
  },
  {
    "text": "useful default settings however those",
    "start": "77759",
    "end": "80920"
  },
  {
    "text": "settings can be altered by adding some",
    "start": "80920",
    "end": "83200"
  },
  {
    "text": "specific environment variables to your",
    "start": "83200",
    "end": "84720"
  },
  {
    "text": "Lambda function we'll be covering some",
    "start": "84720",
    "end": "87360"
  },
  {
    "text": "of those environment variables in the",
    "start": "87360",
    "end": "88880"
  },
  {
    "text": "next slide",
    "start": "88880",
    "end": "90640"
  },
  {
    "text": "the parameters and secrets Lambda",
    "start": "90640",
    "end": "92000"
  },
  {
    "text": "extension can be used by all supported",
    "start": "92000",
    "end": "93799"
  },
  {
    "text": "languages and run times that are",
    "start": "93799",
    "end": "95759"
  },
  {
    "text": "supported by a Lambda the only language",
    "start": "95759",
    "end": "98600"
  },
  {
    "text": "requirements are the ability to make",
    "start": "98600",
    "end": "99880"
  },
  {
    "text": "HTTP requests and to handle some return",
    "start": "99880",
    "end": "102880"
  },
  {
    "text": "to",
    "start": "102880",
    "end": "104200"
  },
  {
    "text": "Chason I'll quickly go over some of the",
    "start": "104200",
    "end": "106479"
  },
  {
    "text": "environment variables that control the",
    "start": "106479",
    "end": "108360"
  },
  {
    "text": "settings of the extension if you'd like",
    "start": "108360",
    "end": "110840"
  },
  {
    "text": "more details all these environment",
    "start": "110840",
    "end": "113079"
  },
  {
    "text": "variables available to developers are",
    "start": "113079",
    "end": "115240"
  },
  {
    "text": "fully explained in the extension",
    "start": "115240",
    "end": "117640"
  },
  {
    "text": "documentation the links to the",
    "start": "117640",
    "end": "119280"
  },
  {
    "text": "documentation will be in the video",
    "start": "119280",
    "end": "120960"
  },
  {
    "text": "description",
    "start": "120960",
    "end": "122880"
  },
  {
    "text": "below first we have the parameter",
    "start": "122880",
    "end": "124880"
  },
  {
    "text": "Secrets extension cache enabled this",
    "start": "124880",
    "end": "128000"
  },
  {
    "text": "determines if the extension will or will",
    "start": "128000",
    "end": "129840"
  },
  {
    "text": "not cache secrets that are retrieved",
    "start": "129840",
    "end": "132400"
  },
  {
    "text": "setting this to True will enable the",
    "start": "132400",
    "end": "134319"
  },
  {
    "text": "local cache in the extension and the",
    "start": "134319",
    "end": "136760"
  },
  {
    "text": "default setting for this value is",
    "start": "136760",
    "end": "139120"
  },
  {
    "text": "true second we have the parameters",
    "start": "139120",
    "end": "141440"
  },
  {
    "text": "Secrets extension cache",
    "start": "141440",
    "end": "143640"
  },
  {
    "text": "size this value is the maximum number of",
    "start": "143640",
    "end": "146280"
  },
  {
    "text": "Secrets and parameters that the",
    "start": "146280",
    "end": "148239"
  },
  {
    "text": "extension can cach the value must be",
    "start": "148239",
    "end": "151160"
  },
  {
    "text": "between 0 and 1,000 a value of zero will",
    "start": "151160",
    "end": "154599"
  },
  {
    "text": "disable caching the default value for",
    "start": "154599",
    "end": "157000"
  },
  {
    "text": "this parameter is",
    "start": "157000",
    "end": "159480"
  },
  {
    "text": "1,000 next we have the parameters",
    "start": "159480",
    "end": "161760"
  },
  {
    "text": "Secrets extension HTTP Port this will be",
    "start": "161760",
    "end": "165879"
  },
  {
    "text": "the port of the local HTTP listener that",
    "start": "165879",
    "end": "168599"
  },
  {
    "text": "the extension will create the default",
    "start": "168599",
    "end": "171120"
  },
  {
    "text": "value for this is",
    "start": "171120",
    "end": "173560"
  },
  {
    "text": "2773 and then finally we have the",
    "start": "173560",
    "end": "175760"
  },
  {
    "text": "parameters Secrets extension log level",
    "start": "175760",
    "end": "179120"
  },
  {
    "text": "and this will will determine the level",
    "start": "179120",
    "end": "180720"
  },
  {
    "text": "of logging that the extension provides",
    "start": "180720",
    "end": "183599"
  },
  {
    "text": "this value must be one of debug info",
    "start": "183599",
    "end": "187360"
  },
  {
    "text": "warn error or none and the default value",
    "start": "187360",
    "end": "191200"
  },
  {
    "text": "for this parameter is",
    "start": "191200",
    "end": "193599"
  },
  {
    "text": "info let's talk for a moment about the",
    "start": "193599",
    "end": "195959"
  },
  {
    "text": "changes that might need to be made to",
    "start": "195959",
    "end": "197400"
  },
  {
    "text": "your Lambda execution role depending on",
    "start": "197400",
    "end": "200080"
  },
  {
    "text": "the requests you're making you need to",
    "start": "200080",
    "end": "202120"
  },
  {
    "text": "ensure that your execution role has the",
    "start": "202120",
    "end": "203959"
  },
  {
    "text": "proper IM IM policies attached to it",
    "start": "203959",
    "end": "206720"
  },
  {
    "text": "that will allow it to successfully make",
    "start": "206720",
    "end": "208120"
  },
  {
    "text": "the necessary requests",
    "start": "208120",
    "end": "210640"
  },
  {
    "text": "to allow requests for Secrets manager",
    "start": "210640",
    "end": "213599"
  },
  {
    "text": "you need the secrets manager get secret",
    "start": "213599",
    "end": "216560"
  },
  {
    "text": "value permission for the secrets you",
    "start": "216560",
    "end": "218680"
  },
  {
    "text": "need to access as well to make parameter",
    "start": "218680",
    "end": "222000"
  },
  {
    "text": "store requests you will need the SSM get",
    "start": "222000",
    "end": "225480"
  },
  {
    "text": "parameter permission for the parameters",
    "start": "225480",
    "end": "227360"
  },
  {
    "text": "you need to access in either case if",
    "start": "227360",
    "end": "230879"
  },
  {
    "text": "you're using a customer manage key and",
    "start": "230879",
    "end": "233200"
  },
  {
    "text": "KMS you also need to Grant the kmsd",
    "start": "233200",
    "end": "235959"
  },
  {
    "text": "Crypt permission for all needed Keys",
    "start": "235959",
    "end": "239040"
  },
  {
    "text": "more details are available in the",
    "start": "239040",
    "end": "242120"
  },
  {
    "text": "documentation lastly let's address how",
    "start": "242120",
    "end": "244799"
  },
  {
    "text": "to actually make the HTTP request the",
    "start": "244799",
    "end": "248239"
  },
  {
    "text": "process is quite simple first all",
    "start": "248239",
    "end": "250680"
  },
  {
    "text": "developers need to create the",
    "start": "250680",
    "end": "251920"
  },
  {
    "text": "authentication for the request itself to",
    "start": "251920",
    "end": "255000"
  },
  {
    "text": "do that simply query the local execution",
    "start": "255000",
    "end": "257199"
  },
  {
    "text": "environment of your Lambda for an",
    "start": "257199",
    "end": "259199"
  },
  {
    "text": "operating system environment variable",
    "start": "259199",
    "end": "260919"
  },
  {
    "text": "called AWS session token that value is",
    "start": "260919",
    "end": "266280"
  },
  {
    "text": "generated for every invocation of every",
    "start": "266280",
    "end": "268400"
  },
  {
    "text": "Lambda use use the value of that",
    "start": "268400",
    "end": "270720"
  },
  {
    "text": "environment variable to create an HTTP",
    "start": "270720",
    "end": "273280"
  },
  {
    "text": "header called x- AWS DP parameters d",
    "start": "273280",
    "end": "278680"
  },
  {
    "text": "secrets D token and make sure that you",
    "start": "278680",
    "end": "281880"
  },
  {
    "text": "send that header with your HTTP request",
    "start": "281880",
    "end": "284960"
  },
  {
    "text": "if you're wondering how it's safe to use",
    "start": "284960",
    "end": "286560"
  },
  {
    "text": "HTTP and not https for this request",
    "start": "286560",
    "end": "290240"
  },
  {
    "text": "remember this request is triggering the",
    "start": "290240",
    "end": "291840"
  },
  {
    "text": "extension to safely obtain your secrets",
    "start": "291840",
    "end": "294639"
  },
  {
    "text": "no information is being exposed by using",
    "start": "294639",
    "end": "296840"
  },
  {
    "text": "HTTP for this",
    "start": "296840",
    "end": "298639"
  },
  {
    "text": "request if you however look at the URL",
    "start": "298639",
    "end": "301400"
  },
  {
    "text": "that we're accessing you'll see that",
    "start": "301400",
    "end": "303440"
  },
  {
    "text": "they're different based on the type of",
    "start": "303440",
    "end": "304840"
  },
  {
    "text": "requests we're making in the case we're",
    "start": "304840",
    "end": "307440"
  },
  {
    "text": "making a request for a secret we're",
    "start": "307440",
    "end": "310120"
  },
  {
    "text": "making it to http",
    "start": "310120",
    "end": "312639"
  },
  {
    "text": "colon localhost colon the extension Port",
    "start": "312639",
    "end": "316960"
  },
  {
    "text": "SL Secrets manager slet and we're",
    "start": "316960",
    "end": "320600"
  },
  {
    "text": "specifying a secret ID in the case of",
    "start": "320600",
    "end": "323880"
  },
  {
    "text": "parameter however we're asking HTP HTTP",
    "start": "323880",
    "end": "327919"
  },
  {
    "text": "colon localhost colon the port of the",
    "start": "327919",
    "end": "331120"
  },
  {
    "text": "extension SL systems manager SLP",
    "start": "331120",
    "end": "335039"
  },
  {
    "text": "parameters slet and we're specifying a",
    "start": "335039",
    "end": "338600"
  },
  {
    "text": "name for the parameters opposed to the",
    "start": "338600",
    "end": "340880"
  },
  {
    "text": "secret",
    "start": "340880",
    "end": "342280"
  },
  {
    "text": "ID in this demo let's look at how we",
    "start": "342280",
    "end": "345199"
  },
  {
    "text": "might store credentials and connection",
    "start": "345199",
    "end": "347000"
  },
  {
    "text": "information to a thirdparty",
    "start": "347000",
    "end": "348400"
  },
  {
    "text": "transactional email service that the",
    "start": "348400",
    "end": "350919"
  },
  {
    "text": "Lambda function will access to send",
    "start": "350919",
    "end": "353080"
  },
  {
    "text": "emails first we'll store a URL in AWS",
    "start": "353080",
    "end": "356199"
  },
  {
    "text": "systems manager parameter store and then",
    "start": "356199",
    "end": "359120"
  },
  {
    "text": "username and password in ad Secrets",
    "start": "359120",
    "end": "361960"
  },
  {
    "text": "manager first let's create the parameter",
    "start": "361960",
    "end": "364400"
  },
  {
    "text": "store entry so we click on systems",
    "start": "364400",
    "end": "368000"
  },
  {
    "text": "manager we click on parameter",
    "start": "368000",
    "end": "372160"
  },
  {
    "text": "store and then we're going to click on",
    "start": "372960",
    "end": "375080"
  },
  {
    "text": "create",
    "start": "375080",
    "end": "377000"
  },
  {
    "text": "parameter we need to give the parameter",
    "start": "377000",
    "end": "379120"
  },
  {
    "text": "a name so that we'll be used to access",
    "start": "379120",
    "end": "381960"
  },
  {
    "text": "this parameter in the future in this",
    "start": "381960",
    "end": "384199"
  },
  {
    "text": "case let's call it email",
    "start": "384199",
    "end": "388360"
  },
  {
    "text": "URL",
    "start": "388560",
    "end": "391560"
  },
  {
    "text": "we'll set it as a standard parameter the",
    "start": "394160",
    "end": "396880"
  },
  {
    "text": "type of a string and then the data type",
    "start": "396880",
    "end": "400319"
  },
  {
    "text": "will be",
    "start": "400319",
    "end": "401240"
  },
  {
    "text": "text in this case we would just give it",
    "start": "401240",
    "end": "404120"
  },
  {
    "text": "a URL",
    "start": "404120",
    "end": "407840"
  },
  {
    "text": "like we'll set it to api. example.com",
    "start": "416840",
    "end": "420960"
  },
  {
    "text": "SL API SL",
    "start": "420960",
    "end": "424360"
  },
  {
    "text": "v1.0",
    "start": "424360",
    "end": "426160"
  },
  {
    "text": "sloth this might be the URL that our",
    "start": "426160",
    "end": "429599"
  },
  {
    "text": "Lambda function needs to access to",
    "start": "429599",
    "end": "431680"
  },
  {
    "text": "authenticate to our API and then click",
    "start": "431680",
    "end": "434840"
  },
  {
    "text": "create",
    "start": "434840",
    "end": "437160"
  },
  {
    "text": "parameter now let's create our",
    "start": "437639",
    "end": "440280"
  },
  {
    "text": "secret so click on Secrets",
    "start": "440280",
    "end": "443919"
  },
  {
    "text": "manager click store a new",
    "start": "443919",
    "end": "447039"
  },
  {
    "text": "secret we're setting this up for a a",
    "start": "447039",
    "end": "450080"
  },
  {
    "text": "thirdparty transactional email service",
    "start": "450080",
    "end": "452319"
  },
  {
    "text": "we're going to go to other type of",
    "start": "452319",
    "end": "454720"
  },
  {
    "text": "secret and I'm going to store a",
    "start": "454720",
    "end": "457720"
  },
  {
    "text": "username so I might use the key of",
    "start": "457720",
    "end": "461919"
  },
  {
    "text": "username with a value and I'm going to",
    "start": "462039",
    "end": "465960"
  },
  {
    "text": "add another row I'm going to store a",
    "start": "465960",
    "end": "471120"
  },
  {
    "text": "password",
    "start": "478440",
    "end": "481440"
  },
  {
    "text": "and we'll give it a",
    "start": "483639",
    "end": "485280"
  },
  {
    "text": "password and then click",
    "start": "485280",
    "end": "488879"
  },
  {
    "text": "next we have to give the secret and",
    "start": "490240",
    "end": "494680"
  },
  {
    "text": "name we'll call it my secret a",
    "start": "496680",
    "end": "500199"
  },
  {
    "text": "description which is optional and then",
    "start": "500199",
    "end": "502360"
  },
  {
    "text": "we can apply any tags we'd like to and",
    "start": "502360",
    "end": "505120"
  },
  {
    "text": "then just click",
    "start": "505120",
    "end": "507759"
  },
  {
    "text": "next here we can configure automatic",
    "start": "508440",
    "end": "511120"
  },
  {
    "text": "rotation which we're not going to do so",
    "start": "511120",
    "end": "513279"
  },
  {
    "text": "just click on",
    "start": "513279",
    "end": "515360"
  },
  {
    "text": "next and then lastly here's all the",
    "start": "515360",
    "end": "518800"
  },
  {
    "text": "information just click on store button",
    "start": "518800",
    "end": "522279"
  },
  {
    "text": "and then that will create our",
    "start": "522279",
    "end": "524720"
  },
  {
    "text": "secret with the refresh button we can",
    "start": "524720",
    "end": "527600"
  },
  {
    "text": "now see that we have my",
    "start": "527600",
    "end": "530600"
  },
  {
    "text": "secret let's spend a few minutes looking",
    "start": "531440",
    "end": "533880"
  },
  {
    "text": "at some sample code that I've written to",
    "start": "533880",
    "end": "536080"
  },
  {
    "text": "demo how the ad these parameters and",
    "start": "536080",
    "end": "537880"
  },
  {
    "text": "secrets Lambda extension Act actually",
    "start": "537880",
    "end": "540079"
  },
  {
    "text": "functions in this case I'm using Python",
    "start": "540079",
    "end": "543079"
  },
  {
    "text": "3 but the code should be simple enough",
    "start": "543079",
    "end": "545279"
  },
  {
    "text": "for anyone familiar with coding to see",
    "start": "545279",
    "end": "547399"
  },
  {
    "text": "how this was",
    "start": "547399",
    "end": "549040"
  },
  {
    "text": "constructed from the top we have our",
    "start": "549040",
    "end": "551240"
  },
  {
    "text": "import",
    "start": "551240",
    "end": "553560"
  },
  {
    "text": "statements the only thirdparty library",
    "start": "553560",
    "end": "556399"
  },
  {
    "text": "that I'm using is called requests it's",
    "start": "556399",
    "end": "559240"
  },
  {
    "text": "an extremely common python library for",
    "start": "559240",
    "end": "561360"
  },
  {
    "text": "creating HTTP requests as the default",
    "start": "561360",
    "end": "564480"
  },
  {
    "text": "python Library URL lib can be a little",
    "start": "564480",
    "end": "567480"
  },
  {
    "text": "more difficult to work with beyond that",
    "start": "567480",
    "end": "570560"
  },
  {
    "text": "I'm importing a few more default python",
    "start": "570560",
    "end": "574760"
  },
  {
    "text": "packages and then I'm printing a little",
    "start": "575720",
    "end": "577920"
  },
  {
    "text": "bit of debug information at the top of",
    "start": "577920",
    "end": "579600"
  },
  {
    "text": "my run",
    "start": "579600",
    "end": "581320"
  },
  {
    "text": "function below that we have a few lines",
    "start": "581320",
    "end": "583880"
  },
  {
    "text": "that obtain the token necessary and set",
    "start": "583880",
    "end": "586360"
  },
  {
    "text": "up the HTP headers to be used",
    "start": "586360",
    "end": "590040"
  },
  {
    "text": "later here I'm quing the system for the",
    "start": "590279",
    "end": "592680"
  },
  {
    "text": "value of the AWS session unor token",
    "start": "592680",
    "end": "596959"
  },
  {
    "text": "environment variable and setting up my",
    "start": "596959",
    "end": "599440"
  },
  {
    "text": "header's dictionary with that retrieved",
    "start": "599440",
    "end": "601800"
  },
  {
    "text": "value I'm also logging that to ensure",
    "start": "601800",
    "end": "605120"
  },
  {
    "text": "that my code is obtaining the proper",
    "start": "605120",
    "end": "607640"
  },
  {
    "text": "value once the authentication is",
    "start": "607640",
    "end": "609839"
  },
  {
    "text": "configured I'm using that header to make",
    "start": "609839",
    "end": "611880"
  },
  {
    "text": "a request for the value from aw's",
    "start": "611880",
    "end": "614800"
  },
  {
    "text": "parameter",
    "start": "614800",
    "end": "617200"
  },
  {
    "text": "store in this case it's for a parameter",
    "start": "619200",
    "end": "622320"
  },
  {
    "text": "called email uncore",
    "start": "622320",
    "end": "624800"
  },
  {
    "text": "URL when the response is obtained I'm",
    "start": "624800",
    "end": "627800"
  },
  {
    "text": "printing out the response code",
    "start": "627800",
    "end": "630079"
  },
  {
    "text": "and the Json of the response once the",
    "start": "630079",
    "end": "633000"
  },
  {
    "text": "parameter store value is obtained then",
    "start": "633000",
    "end": "635360"
  },
  {
    "text": "we'll make a similar request for the",
    "start": "635360",
    "end": "637680"
  },
  {
    "text": "username and password to use out of aw",
    "start": "637680",
    "end": "640800"
  },
  {
    "text": "Secrets",
    "start": "640800",
    "end": "643160"
  },
  {
    "text": "manager and again I'm just printing out",
    "start": "644040",
    "end": "646880"
  },
  {
    "text": "the status code of the request and the",
    "start": "646880",
    "end": "649079"
  },
  {
    "text": "Json that is",
    "start": "649079",
    "end": "651920"
  },
  {
    "text": "returned you can see the Lambda function",
    "start": "651920",
    "end": "656079"
  },
  {
    "text": "here if we look at the bottom of this",
    "start": "656079",
    "end": "658399"
  },
  {
    "text": "page you you can see that the aw",
    "start": "658399",
    "end": "660560"
  },
  {
    "text": "parameters and secrets Lambda extension",
    "start": "660560",
    "end": "662320"
  },
  {
    "text": "layer is already attached to my",
    "start": "662320",
    "end": "666279"
  },
  {
    "text": "Lambda however if it was not I just need",
    "start": "666720",
    "end": "670160"
  },
  {
    "text": "to click the add a layer",
    "start": "670160",
    "end": "673040"
  },
  {
    "text": "button make sure that you are on AWS",
    "start": "673040",
    "end": "677240"
  },
  {
    "text": "layers select the layer from the",
    "start": "677240",
    "end": "681000"
  },
  {
    "text": "dropdown and then select the version",
    "start": "681000",
    "end": "683000"
  },
  {
    "text": "that you would like to attach at the",
    "start": "683000",
    "end": "685200"
  },
  {
    "text": "time of filming the current version is",
    "start": "685200",
    "end": "687399"
  },
  {
    "text": "version",
    "start": "687399",
    "end": "688240"
  },
  {
    "text": "four",
    "start": "688240",
    "end": "691240"
  },
  {
    "text": "the only other thing that I would like",
    "start": "693079",
    "end": "694200"
  },
  {
    "text": "to show you here is my extension",
    "start": "694200",
    "end": "697079"
  },
  {
    "text": "configuration to see that just click on",
    "start": "697079",
    "end": "699480"
  },
  {
    "text": "the configuration in the top bar and",
    "start": "699480",
    "end": "702279"
  },
  {
    "text": "then environment variables on the left",
    "start": "702279",
    "end": "704360"
  },
  {
    "text": "hand",
    "start": "704360",
    "end": "706560"
  },
  {
    "text": "side here you can see that the two",
    "start": "706560",
    "end": "708680"
  },
  {
    "text": "environment variables that I have set",
    "start": "708680",
    "end": "710839"
  },
  {
    "text": "the extension cache enabled is set to",
    "start": "710839",
    "end": "712680"
  },
  {
    "text": "true and the extension log level set to",
    "start": "712680",
    "end": "715560"
  },
  {
    "text": "debug here you can also set any other",
    "start": "715560",
    "end": "718079"
  },
  {
    "text": "variables you need to configure figure",
    "start": "718079",
    "end": "719480"
  },
  {
    "text": "your",
    "start": "719480",
    "end": "720560"
  },
  {
    "text": "extension this Lambda is already running",
    "start": "720560",
    "end": "723399"
  },
  {
    "text": "it's making the request that I have",
    "start": "723399",
    "end": "724680"
  },
  {
    "text": "coded into the Lambda every minute to",
    "start": "724680",
    "end": "727000"
  },
  {
    "text": "see the results we just need to look at",
    "start": "727000",
    "end": "728839"
  },
  {
    "text": "the logs those are stored in Cloud",
    "start": "728839",
    "end": "733079"
  },
  {
    "text": "watch so let's go to Cloud",
    "start": "734800",
    "end": "738800"
  },
  {
    "text": "watch select a log",
    "start": "740920",
    "end": "743519"
  },
  {
    "text": "groups and then select the log group",
    "start": "743519",
    "end": "746920"
  },
  {
    "text": "from the Lambda and then select any one",
    "start": "746920",
    "end": "750560"
  },
  {
    "text": "of the log",
    "start": "750560",
    "end": "753040"
  },
  {
    "text": "streams here you can see I obtained the",
    "start": "763000",
    "end": "765639"
  },
  {
    "text": "authentication token from the aore",
    "start": "765639",
    "end": "768800"
  },
  {
    "text": "session token environment variable and",
    "start": "768800",
    "end": "771320"
  },
  {
    "text": "printed it out this will be the value",
    "start": "771320",
    "end": "773760"
  },
  {
    "text": "for my x- awsp parameters sec- token",
    "start": "773760",
    "end": "778920"
  },
  {
    "text": "next next if we look at the request for",
    "start": "778920",
    "end": "780839"
  },
  {
    "text": "the URL from parameter",
    "start": "780839",
    "end": "784240"
  },
  {
    "text": "store we can see that the request was",
    "start": "786560",
    "end": "788959"
  },
  {
    "text": "successful due to the 200 status from",
    "start": "788959",
    "end": "791240"
  },
  {
    "text": "the response on the next log line we can",
    "start": "791240",
    "end": "794519"
  },
  {
    "text": "see what is returned when we make the",
    "start": "794519",
    "end": "796199"
  },
  {
    "text": "request against parameter store we have",
    "start": "796199",
    "end": "798600"
  },
  {
    "text": "things like the r that was requested the",
    "start": "798600",
    "end": "800720"
  },
  {
    "text": "data type A last modification date the",
    "start": "800720",
    "end": "803720"
  },
  {
    "text": "value itself and a value version among",
    "start": "803720",
    "end": "806600"
  },
  {
    "text": "other",
    "start": "806600",
    "end": "807600"
  },
  {
    "text": "metadata and the request for the",
    "start": "807600",
    "end": "809600"
  },
  {
    "text": "username and password against AWS",
    "start": "809600",
    "end": "811480"
  },
  {
    "text": "Secrets",
    "start": "811480",
    "end": "813839"
  },
  {
    "text": "manager we can see the same response",
    "start": "815800",
    "end": "818160"
  },
  {
    "text": "code and values we're looking for and",
    "start": "818160",
    "end": "821000"
  },
  {
    "text": "more metadata about the",
    "start": "821000",
    "end": "824199"
  },
  {
    "text": "request thank you very much for the time",
    "start": "824720",
    "end": "826920"
  },
  {
    "text": "today for more information on AWS Lambda",
    "start": "826920",
    "end": "830040"
  },
  {
    "text": "or the AWS parameters in Secrets Lambda",
    "start": "830040",
    "end": "832199"
  },
  {
    "text": "extension please visit ad.",
    "start": "832199",
    "end": "835880"
  },
  {
    "text": "amazon.com lamda thank you",
    "start": "835880",
    "end": "841040"
  }
]