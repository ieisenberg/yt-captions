[
  {
    "start": "0",
    "end": "24000"
  },
  {
    "text": "hi my name is nitin vasireddy",
    "start": "1040",
    "end": "3600"
  },
  {
    "text": "i'm a cloud support engineer at aws",
    "start": "3600",
    "end": "5600"
  },
  {
    "text": "premium support",
    "start": "5600",
    "end": "6879"
  },
  {
    "text": "i work with enterprise and business",
    "start": "6879",
    "end": "8559"
  },
  {
    "text": "customers to help troubleshoot issues",
    "start": "8559",
    "end": "10400"
  },
  {
    "text": "with amazon athena",
    "start": "10400",
    "end": "12160"
  },
  {
    "text": "aws emr and amazon glue in this session",
    "start": "12160",
    "end": "15679"
  },
  {
    "text": "i am going to show a demo on",
    "start": "15679",
    "end": "17520"
  },
  {
    "text": "generating reports and scheduling the",
    "start": "17520",
    "end": "19359"
  },
  {
    "text": "report generation",
    "start": "19359",
    "end": "20800"
  },
  {
    "text": "using aws step functions and amazon",
    "start": "20800",
    "end": "23359"
  },
  {
    "text": "athena",
    "start": "23359",
    "end": "25519"
  },
  {
    "start": "24000",
    "end": "40000"
  },
  {
    "text": "today's agenda for the session overview",
    "start": "25519",
    "end": "28320"
  },
  {
    "text": "of the services",
    "start": "28320",
    "end": "29679"
  },
  {
    "text": "amazon step function and amazon athena",
    "start": "29679",
    "end": "32880"
  },
  {
    "text": "then i will go through the orchestration",
    "start": "32880",
    "end": "34960"
  },
  {
    "text": "architecture diagram",
    "start": "34960",
    "end": "36480"
  },
  {
    "text": "and then a quick demo let's get started",
    "start": "36480",
    "end": "41760"
  },
  {
    "start": "40000",
    "end": "113000"
  },
  {
    "text": "aws step functions is a serverless",
    "start": "41760",
    "end": "43680"
  },
  {
    "text": "function orchestrator",
    "start": "43680",
    "end": "45200"
  },
  {
    "text": "that makes it easy to sequence multiple",
    "start": "45200",
    "end": "47360"
  },
  {
    "text": "aws services",
    "start": "47360",
    "end": "48879"
  },
  {
    "text": "into business critical applications",
    "start": "48879",
    "end": "51280"
  },
  {
    "text": "through its visual interface",
    "start": "51280",
    "end": "52879"
  },
  {
    "text": "you can create and run a series of check",
    "start": "52879",
    "end": "55280"
  },
  {
    "text": "pointed and even driven workflows",
    "start": "55280",
    "end": "57760"
  },
  {
    "text": "that maintain the application state the",
    "start": "57760",
    "end": "60320"
  },
  {
    "text": "output of one step",
    "start": "60320",
    "end": "61600"
  },
  {
    "text": "acts as an input to the next each step",
    "start": "61600",
    "end": "64400"
  },
  {
    "text": "in your",
    "start": "64400",
    "end": "65040"
  },
  {
    "text": "application execution in order you",
    "start": "65040",
    "end": "68240"
  },
  {
    "text": "defined by your business logic",
    "start": "68240",
    "end": "70880"
  },
  {
    "text": "amazon ethina is an interactive query",
    "start": "70880",
    "end": "73040"
  },
  {
    "text": "service that runs it",
    "start": "73040",
    "end": "74640"
  },
  {
    "text": "that makes it easy to analyze data in",
    "start": "74640",
    "end": "77119"
  },
  {
    "text": "amazon s3",
    "start": "77119",
    "end": "78400"
  },
  {
    "text": "using standard sql amazon is serverless",
    "start": "78400",
    "end": "82000"
  },
  {
    "text": "so there is no infrastructure to manage",
    "start": "82000",
    "end": "84560"
  },
  {
    "text": "and you pay only for",
    "start": "84560",
    "end": "86000"
  },
  {
    "text": "the queries you run most queries are",
    "start": "86000",
    "end": "88560"
  },
  {
    "text": "delivered within seconds",
    "start": "88560",
    "end": "90240"
  },
  {
    "text": "with amazon athena there is no need for",
    "start": "90240",
    "end": "92479"
  },
  {
    "text": "complex etl jobs",
    "start": "92479",
    "end": "94159"
  },
  {
    "text": "to prepare your data for analysis it",
    "start": "94159",
    "end": "96720"
  },
  {
    "text": "makes it easy for",
    "start": "96720",
    "end": "97759"
  },
  {
    "text": "anyone with sql skills to quickly",
    "start": "97759",
    "end": "100880"
  },
  {
    "text": "analyze large scale data sets",
    "start": "100880",
    "end": "103759"
  },
  {
    "text": "now you can integrate aws step functions",
    "start": "103759",
    "end": "107200"
  },
  {
    "text": "with amazon athena you can submit athena",
    "start": "107200",
    "end": "109759"
  },
  {
    "text": "queries from",
    "start": "109759",
    "end": "110960"
  },
  {
    "text": "step functions workflows",
    "start": "110960",
    "end": "114479"
  },
  {
    "start": "113000",
    "end": "749000"
  },
  {
    "text": "for this demo i have taken kobe data for",
    "start": "114479",
    "end": "117360"
  },
  {
    "text": "all the 50 states in united states of",
    "start": "117360",
    "end": "119439"
  },
  {
    "text": "america",
    "start": "119439",
    "end": "120719"
  },
  {
    "text": "and data analysts would like to generate",
    "start": "120719",
    "end": "123040"
  },
  {
    "text": "a report",
    "start": "123040",
    "end": "123840"
  },
  {
    "text": "on daily incoming data and get a report",
    "start": "123840",
    "end": "126880"
  },
  {
    "text": "on number of daily cases and total cases",
    "start": "126880",
    "end": "129759"
  },
  {
    "text": "till date for each state",
    "start": "129759",
    "end": "131920"
  },
  {
    "text": "aws step function workflow majorly",
    "start": "131920",
    "end": "134319"
  },
  {
    "text": "consists of three components in this",
    "start": "134319",
    "end": "136400"
  },
  {
    "text": "case",
    "start": "136400",
    "end": "137280"
  },
  {
    "text": "firstly aws lambda function to start",
    "start": "137280",
    "end": "140800"
  },
  {
    "text": "a glue crawler which will add partitions",
    "start": "140800",
    "end": "144560"
  },
  {
    "text": "to the existing table",
    "start": "144560",
    "end": "146080"
  },
  {
    "text": "in aws glue data catalog",
    "start": "146080",
    "end": "149680"
  },
  {
    "text": "and aws lambda function will wait for",
    "start": "149680",
    "end": "153040"
  },
  {
    "text": "the crawler to succeed",
    "start": "153040",
    "end": "155120"
  },
  {
    "text": "secondly aws step functions",
    "start": "155120",
    "end": "158800"
  },
  {
    "text": "will submit queries to amazon athena",
    "start": "158800",
    "end": "161840"
  },
  {
    "text": "and wait for query to get completed",
    "start": "161840",
    "end": "164959"
  },
  {
    "text": "once the query is completed awstep",
    "start": "164959",
    "end": "167840"
  },
  {
    "text": "function will get the results",
    "start": "167840",
    "end": "170160"
  },
  {
    "text": "and pass the results to amazon simple",
    "start": "170160",
    "end": "172560"
  },
  {
    "text": "notification service",
    "start": "172560",
    "end": "174800"
  },
  {
    "text": "data analysts and other team members can",
    "start": "174800",
    "end": "177200"
  },
  {
    "text": "subscribe to the amazon sns topic",
    "start": "177200",
    "end": "180159"
  },
  {
    "text": "to get the generated reports delivered",
    "start": "180159",
    "end": "184319"
  },
  {
    "text": "lastly we can schedule the step function",
    "start": "184319",
    "end": "186800"
  },
  {
    "text": "execution",
    "start": "186800",
    "end": "187840"
  },
  {
    "text": "using amazon cloud watch events",
    "start": "187840",
    "end": "191920"
  },
  {
    "text": "get into the demo i have logged into the",
    "start": "191920",
    "end": "194400"
  },
  {
    "text": "aws console as data analyst role if you",
    "start": "194400",
    "end": "197120"
  },
  {
    "text": "can see here",
    "start": "197120",
    "end": "198560"
  },
  {
    "text": "and i have created a table with name",
    "start": "198560",
    "end": "200720"
  },
  {
    "text": "kovid analysis partitioned",
    "start": "200720",
    "end": "202879"
  },
  {
    "text": "let me show the table first",
    "start": "202879",
    "end": "206319"
  },
  {
    "text": "yeah this is the create generate table",
    "start": "209599",
    "end": "211920"
  },
  {
    "text": "ddl",
    "start": "211920",
    "end": "212799"
  },
  {
    "text": "if you can see the table has state",
    "start": "212799",
    "end": "215920"
  },
  {
    "text": "fibs cases and depths as the columns",
    "start": "215920",
    "end": "219040"
  },
  {
    "text": "and it is partitioned by date let me",
    "start": "219040",
    "end": "221840"
  },
  {
    "text": "just",
    "start": "221840",
    "end": "222480"
  },
  {
    "text": "go through a quick partitions",
    "start": "222480",
    "end": "227840"
  },
  {
    "text": "[Applause]",
    "start": "237750",
    "end": "240939"
  },
  {
    "text": "these are the list of partitions that i",
    "start": "244879",
    "end": "246640"
  },
  {
    "text": "have added to the table",
    "start": "246640",
    "end": "249040"
  },
  {
    "text": "let me just run a simple command to show",
    "start": "249040",
    "end": "251519"
  },
  {
    "text": "the sample data",
    "start": "251519",
    "end": "252640"
  },
  {
    "text": "on this particular table",
    "start": "252640",
    "end": "255840"
  },
  {
    "text": "yeah if you can see here this has five",
    "start": "258560",
    "end": "261120"
  },
  {
    "text": "columns",
    "start": "261120",
    "end": "262079"
  },
  {
    "text": "which is state and fibs id for that",
    "start": "262079",
    "end": "264960"
  },
  {
    "text": "particular state",
    "start": "264960",
    "end": "266160"
  },
  {
    "text": "and the total number of cases till that",
    "start": "266160",
    "end": "268960"
  },
  {
    "text": "date",
    "start": "268960",
    "end": "269680"
  },
  {
    "text": "let us say we have 2020 july 29th",
    "start": "269680",
    "end": "273759"
  },
  {
    "text": "for alabama the total number of cases",
    "start": "273759",
    "end": "276320"
  },
  {
    "text": "are 83",
    "start": "276320",
    "end": "277639"
  },
  {
    "text": "782 and the total debts",
    "start": "277639",
    "end": "280479"
  },
  {
    "text": "till that particular date is 1538",
    "start": "280479",
    "end": "284400"
  },
  {
    "text": "similarly till today this particular",
    "start": "284400",
    "end": "287199"
  },
  {
    "text": "data has",
    "start": "287199",
    "end": "287919"
  },
  {
    "text": "how many cases and how many deaths",
    "start": "287919",
    "end": "291840"
  },
  {
    "text": "let me just walk you through the step",
    "start": "291840",
    "end": "293759"
  },
  {
    "text": "function that i have created",
    "start": "293759",
    "end": "297840"
  },
  {
    "text": "this is the definition for the step",
    "start": "301039",
    "end": "302639"
  },
  {
    "text": "functions",
    "start": "302639",
    "end": "304160"
  },
  {
    "text": "if you can see initially i have gave a",
    "start": "304160",
    "end": "307280"
  },
  {
    "text": "lambda function",
    "start": "307280",
    "end": "308800"
  },
  {
    "text": "which will start the glue crawler the",
    "start": "308800",
    "end": "311120"
  },
  {
    "text": "group crawler",
    "start": "311120",
    "end": "312240"
  },
  {
    "text": "is to add partitions as i have mentioned",
    "start": "312240",
    "end": "315199"
  },
  {
    "text": "in the architecture diagram",
    "start": "315199",
    "end": "317280"
  },
  {
    "text": "and then once the crawler is completed",
    "start": "317280",
    "end": "320800"
  },
  {
    "text": "we will be starting the athena query",
    "start": "320800",
    "end": "323280"
  },
  {
    "text": "this is the sample athena query i am",
    "start": "323280",
    "end": "325360"
  },
  {
    "text": "running",
    "start": "325360",
    "end": "326960"
  },
  {
    "text": "and then once the query is completed",
    "start": "326960",
    "end": "330880"
  },
  {
    "text": "the step function will get the results",
    "start": "330880",
    "end": "333520"
  },
  {
    "text": "for the query",
    "start": "333520",
    "end": "335120"
  },
  {
    "text": "which is query through the query",
    "start": "335120",
    "end": "337120"
  },
  {
    "text": "execution id",
    "start": "337120",
    "end": "338479"
  },
  {
    "text": "and once it gets the results it will",
    "start": "338479",
    "end": "341199"
  },
  {
    "text": "publish the results",
    "start": "341199",
    "end": "342639"
  },
  {
    "text": "to the sns topic that i have subscribed",
    "start": "342639",
    "end": "345600"
  },
  {
    "text": "to",
    "start": "345600",
    "end": "346960"
  },
  {
    "text": "let me just walk you through the glue",
    "start": "346960",
    "end": "349199"
  },
  {
    "text": "crawler that i have created",
    "start": "349199",
    "end": "352320"
  },
  {
    "text": "this is the crawler covered analysis",
    "start": "352320",
    "end": "354160"
  },
  {
    "text": "that i have created",
    "start": "354160",
    "end": "355919"
  },
  {
    "text": "and this is created on on that",
    "start": "355919",
    "end": "358400"
  },
  {
    "text": "particular table name",
    "start": "358400",
    "end": "359680"
  },
  {
    "text": "kovid analysis partitioned and this",
    "start": "359680",
    "end": "362400"
  },
  {
    "text": "particular crawler will add partitions",
    "start": "362400",
    "end": "364800"
  },
  {
    "text": "to the existing table that we have",
    "start": "364800",
    "end": "366800"
  },
  {
    "text": "already looked into",
    "start": "366800",
    "end": "368240"
  },
  {
    "text": "the in ethernet console let me just walk",
    "start": "368240",
    "end": "371520"
  },
  {
    "text": "you through",
    "start": "371520",
    "end": "372160"
  },
  {
    "text": "the lambda function this is the lambda",
    "start": "372160",
    "end": "375280"
  },
  {
    "text": "function if you can see here",
    "start": "375280",
    "end": "377440"
  },
  {
    "text": "it is just starting the glue crawler the",
    "start": "377440",
    "end": "380479"
  },
  {
    "text": "crawler name is kovid analysis",
    "start": "380479",
    "end": "383600"
  },
  {
    "text": "and it will just wait for the crawler",
    "start": "383600",
    "end": "385680"
  },
  {
    "text": "status",
    "start": "385680",
    "end": "386800"
  },
  {
    "text": "and once the crawler status is ready",
    "start": "386800",
    "end": "390319"
  },
  {
    "text": "then it will return the status code as",
    "start": "390319",
    "end": "392880"
  },
  {
    "text": "200.",
    "start": "392880",
    "end": "395840"
  },
  {
    "text": "and this is the sns topic that i have",
    "start": "398639",
    "end": "401039"
  },
  {
    "text": "subscribed",
    "start": "401039",
    "end": "401759"
  },
  {
    "text": "to if you can see here it is subscribed",
    "start": "401759",
    "end": "404080"
  },
  {
    "text": "to the email",
    "start": "404080",
    "end": "405680"
  },
  {
    "text": "so once the athena query is completed",
    "start": "405680",
    "end": "409120"
  },
  {
    "text": "the results will get pushed to my email",
    "start": "409120",
    "end": "412000"
  },
  {
    "text": "and",
    "start": "412000",
    "end": "412400"
  },
  {
    "text": "i can also see the results in s3 bucket",
    "start": "412400",
    "end": "417039"
  },
  {
    "text": "this is the cloud watch events if you",
    "start": "418319",
    "end": "420319"
  },
  {
    "text": "can see uh this is scheduled",
    "start": "420319",
    "end": "422560"
  },
  {
    "text": "per day once per day on a fixed rate",
    "start": "422560",
    "end": "425919"
  },
  {
    "text": "just for the demo purposes let me just",
    "start": "425919",
    "end": "428639"
  },
  {
    "text": "change this",
    "start": "428639",
    "end": "429840"
  },
  {
    "text": "fixed rate from one day to just five",
    "start": "429840",
    "end": "432000"
  },
  {
    "text": "minutes and then",
    "start": "432000",
    "end": "433199"
  },
  {
    "text": "show you that particular one on the demo",
    "start": "433199",
    "end": "437840"
  },
  {
    "text": "i'm just selecting minutes and then here",
    "start": "439520",
    "end": "442160"
  },
  {
    "text": "i am giving five minutes",
    "start": "442160",
    "end": "443840"
  },
  {
    "text": "this is just for the demo purposes so",
    "start": "443840",
    "end": "446160"
  },
  {
    "text": "that for every five minutes the step",
    "start": "446160",
    "end": "448000"
  },
  {
    "text": "function will get executed",
    "start": "448000",
    "end": "449759"
  },
  {
    "text": "and the step function will submit within",
    "start": "449759",
    "end": "451840"
  },
  {
    "text": "a query to athena",
    "start": "451840",
    "end": "454960"
  },
  {
    "text": "i just updated the rule",
    "start": "456720",
    "end": "464240"
  },
  {
    "text": "let us look into the step function",
    "start": "464240",
    "end": "466319"
  },
  {
    "text": "execution",
    "start": "466319",
    "end": "468960"
  },
  {
    "text": "let us just give it a couple of minutes",
    "start": "476160",
    "end": "478479"
  },
  {
    "text": "and see",
    "start": "478479",
    "end": "479520"
  },
  {
    "text": "when it gets started",
    "start": "479520",
    "end": "482638"
  },
  {
    "text": "i have waited for the step function to",
    "start": "483840",
    "end": "485599"
  },
  {
    "text": "get started if you can see",
    "start": "485599",
    "end": "487520"
  },
  {
    "text": "the step function is currently in",
    "start": "487520",
    "end": "489039"
  },
  {
    "text": "running status let us just click on this",
    "start": "489039",
    "end": "491440"
  },
  {
    "text": "particular step function",
    "start": "491440",
    "end": "492879"
  },
  {
    "text": "execution rule and then see",
    "start": "492879",
    "end": "496479"
  },
  {
    "text": "what's happening if you can see here the",
    "start": "496479",
    "end": "499680"
  },
  {
    "text": "first",
    "start": "499680",
    "end": "500080"
  },
  {
    "text": "it is running the run blue crawler i",
    "start": "500080",
    "end": "502879"
  },
  {
    "text": "just clicked on that",
    "start": "502879",
    "end": "504319"
  },
  {
    "text": "and then this is the input details for",
    "start": "504319",
    "end": "507039"
  },
  {
    "text": "that crawler",
    "start": "507039",
    "end": "508560"
  },
  {
    "text": "let me just look into the crawler",
    "start": "508560",
    "end": "512638"
  },
  {
    "text": "if you can see here the crawler has just",
    "start": "514800",
    "end": "516800"
  },
  {
    "text": "run and it is in stopping state",
    "start": "516800",
    "end": "519680"
  },
  {
    "text": "the step function will wait until it",
    "start": "519680",
    "end": "521680"
  },
  {
    "text": "gets into the ready state",
    "start": "521680",
    "end": "523360"
  },
  {
    "text": "and then it goes into the next step that",
    "start": "523360",
    "end": "526320"
  },
  {
    "text": "is",
    "start": "526320",
    "end": "526720"
  },
  {
    "text": "start a query execution",
    "start": "526720",
    "end": "530080"
  },
  {
    "text": "i will just pause the video until the",
    "start": "530080",
    "end": "532080"
  },
  {
    "text": "crawler gets completed the crawler",
    "start": "532080",
    "end": "534000"
  },
  {
    "text": "usually takes around a couple of minutes",
    "start": "534000",
    "end": "536000"
  },
  {
    "text": "to add if there are any partitions",
    "start": "536000",
    "end": "538000"
  },
  {
    "text": "new partitions and then i will continue",
    "start": "538000",
    "end": "541279"
  },
  {
    "text": "the video once",
    "start": "541279",
    "end": "542480"
  },
  {
    "text": "the query gets executed",
    "start": "542480",
    "end": "545760"
  },
  {
    "text": "yeah now the crawler is in ready state",
    "start": "545760",
    "end": "548240"
  },
  {
    "text": "let us look into the step function",
    "start": "548240",
    "end": "549760"
  },
  {
    "text": "execution now",
    "start": "549760",
    "end": "551600"
  },
  {
    "text": "if you can see here the glue crawler is",
    "start": "551600",
    "end": "554080"
  },
  {
    "text": "in green",
    "start": "554080",
    "end": "554959"
  },
  {
    "text": "which means the crawler has completed",
    "start": "554959",
    "end": "557200"
  },
  {
    "text": "and then now",
    "start": "557200",
    "end": "558320"
  },
  {
    "text": "it is executing the athena query",
    "start": "558320",
    "end": "562640"
  },
  {
    "text": "let us look into the athena console and",
    "start": "562640",
    "end": "564640"
  },
  {
    "text": "see whether the query has submitted or",
    "start": "564640",
    "end": "566560"
  },
  {
    "text": "not",
    "start": "566560",
    "end": "567680"
  },
  {
    "text": "i am just clicking on the history which",
    "start": "567680",
    "end": "570640"
  },
  {
    "text": "has",
    "start": "570640",
    "end": "571200"
  },
  {
    "text": "all the queries that we have submitted",
    "start": "571200",
    "end": "573519"
  },
  {
    "text": "and this is the particular query that",
    "start": "573519",
    "end": "576000"
  },
  {
    "text": "it just ran and it is in succeeded state",
    "start": "576000",
    "end": "580399"
  },
  {
    "text": "if you see it has got the results as",
    "start": "580399",
    "end": "582720"
  },
  {
    "text": "well",
    "start": "582720",
    "end": "584959"
  },
  {
    "text": "i am just refreshing this particular",
    "start": "585680",
    "end": "587279"
  },
  {
    "text": "screen so that",
    "start": "587279",
    "end": "589200"
  },
  {
    "text": "we can see whether the coil the step",
    "start": "589200",
    "end": "591760"
  },
  {
    "text": "function has got the query results or",
    "start": "591760",
    "end": "593519"
  },
  {
    "text": "not",
    "start": "593519",
    "end": "595120"
  },
  {
    "text": "yeah it has not gotten it just give it a",
    "start": "595120",
    "end": "598000"
  },
  {
    "text": "couple of seconds",
    "start": "598000",
    "end": "599440"
  },
  {
    "text": "i'm just refreshing that again",
    "start": "599440",
    "end": "604480"
  },
  {
    "text": "if you see the start query is completed",
    "start": "604480",
    "end": "607279"
  },
  {
    "text": "and then",
    "start": "607279",
    "end": "608079"
  },
  {
    "text": "the query results or the step function",
    "start": "608079",
    "end": "610079"
  },
  {
    "text": "has got the query results as well",
    "start": "610079",
    "end": "612160"
  },
  {
    "text": "i am just clicking on the output",
    "start": "612160",
    "end": "615920"
  },
  {
    "text": "if you see here it has got the cases",
    "start": "617440",
    "end": "622000"
  },
  {
    "text": "the value for that and all the columns",
    "start": "622000",
    "end": "625519"
  },
  {
    "text": "and for alabama how many cases are there",
    "start": "625519",
    "end": "628320"
  },
  {
    "text": "on",
    "start": "628320",
    "end": "629120"
  },
  {
    "text": "2020 11 and 09 and",
    "start": "629120",
    "end": "632560"
  },
  {
    "text": "here you see the sns notification as",
    "start": "632560",
    "end": "634800"
  },
  {
    "text": "well",
    "start": "634800",
    "end": "635600"
  },
  {
    "text": "similarly the data analyst can get an",
    "start": "635600",
    "end": "637920"
  },
  {
    "text": "email notification",
    "start": "637920",
    "end": "639200"
  },
  {
    "text": "or a message whenever the query",
    "start": "639200",
    "end": "641600"
  },
  {
    "text": "execution is completed",
    "start": "641600",
    "end": "643360"
  },
  {
    "text": "in the similar manner let us just look",
    "start": "643360",
    "end": "645600"
  },
  {
    "text": "into the query results in the s3 bucket",
    "start": "645600",
    "end": "661839"
  },
  {
    "text": "yeah if you can see here for each state",
    "start": "665360",
    "end": "668399"
  },
  {
    "text": "we got the daily cases for this",
    "start": "668399",
    "end": "670480"
  },
  {
    "text": "particular day",
    "start": "670480",
    "end": "671839"
  },
  {
    "text": "and then the number of deaths on that",
    "start": "671839",
    "end": "674000"
  },
  {
    "text": "particular day",
    "start": "674000",
    "end": "675040"
  },
  {
    "text": "and total cases till that date so",
    "start": "675040",
    "end": "678079"
  },
  {
    "text": "in the similar manner all data analysts",
    "start": "678079",
    "end": "681040"
  },
  {
    "text": "can",
    "start": "681040",
    "end": "681839"
  },
  {
    "text": "run or re generate reports using amazon",
    "start": "681839",
    "end": "685120"
  },
  {
    "text": "athena",
    "start": "685120",
    "end": "686000"
  },
  {
    "text": "and then schedule those reports using",
    "start": "686000",
    "end": "689519"
  },
  {
    "text": "aws step functions",
    "start": "689519",
    "end": "692800"
  },
  {
    "text": "let us just look into the step functions",
    "start": "692800",
    "end": "694880"
  },
  {
    "text": "once again",
    "start": "694880",
    "end": "696079"
  },
  {
    "text": "just to see that the another execution",
    "start": "696079",
    "end": "698320"
  },
  {
    "text": "gets started after five minutes",
    "start": "698320",
    "end": "700320"
  },
  {
    "text": "if you can see here the first execution",
    "start": "700320",
    "end": "703040"
  },
  {
    "text": "is at",
    "start": "703040",
    "end": "703600"
  },
  {
    "text": "239 and then after 5 minutes which is",
    "start": "703600",
    "end": "706720"
  },
  {
    "text": "244",
    "start": "706720",
    "end": "708000"
  },
  {
    "text": "another step function execution has",
    "start": "708000",
    "end": "709920"
  },
  {
    "text": "started so",
    "start": "709920",
    "end": "712320"
  },
  {
    "text": "we actually scheduled the step function",
    "start": "712320",
    "end": "714320"
  },
  {
    "text": "to run for every five minutes",
    "start": "714320",
    "end": "716240"
  },
  {
    "text": "and it is started to execute every five",
    "start": "716240",
    "end": "719519"
  },
  {
    "text": "minutes",
    "start": "719519",
    "end": "720240"
  },
  {
    "text": "so in the similar manner data analysts",
    "start": "720240",
    "end": "722959"
  },
  {
    "text": "can schedule this report generation",
    "start": "722959",
    "end": "725760"
  },
  {
    "text": "for for every one day or um",
    "start": "725760",
    "end": "728959"
  },
  {
    "text": "twice a day it depends on the incoming",
    "start": "728959",
    "end": "731600"
  },
  {
    "text": "data",
    "start": "731600",
    "end": "732399"
  },
  {
    "text": "and the business requirement for the",
    "start": "732399",
    "end": "734240"
  },
  {
    "text": "data analysts",
    "start": "734240",
    "end": "737200"
  },
  {
    "text": "i hope the session is helpful and thank",
    "start": "742000",
    "end": "744560"
  },
  {
    "text": "you so much for watching the video",
    "start": "744560",
    "end": "746480"
  },
  {
    "text": "have a great day bye",
    "start": "746480",
    "end": "751440"
  }
]