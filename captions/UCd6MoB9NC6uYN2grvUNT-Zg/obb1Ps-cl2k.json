[
  {
    "text": "- Welcome to 'Back To Basics'.",
    "start": "5940",
    "end": "7800"
  },
  {
    "text": "In this episode,",
    "start": "7800",
    "end": "8820"
  },
  {
    "text": "we will discuss modernizing\nyour frontend application",
    "start": "8820",
    "end": "11820"
  },
  {
    "text": "using a micro-frontend architecture.",
    "start": "11820",
    "end": "14519"
  },
  {
    "text": "In my past experience, I\nhave run into instances",
    "start": "14520",
    "end": "17640"
  },
  {
    "text": "where customers were\nlooking to bring scalability",
    "start": "17640",
    "end": "20460"
  },
  {
    "text": "and maintenance benefit\nof modern-frontends",
    "start": "20460",
    "end": "23009"
  },
  {
    "text": "across their organization.",
    "start": "23010",
    "end": "25140"
  },
  {
    "text": "Before we dive deep,\nlet's understand first",
    "start": "25140",
    "end": "27750"
  },
  {
    "text": "what micro-frontends are conceptually",
    "start": "27750",
    "end": "29940"
  },
  {
    "text": "and some of their benefits",
    "start": "29940",
    "end": "31410"
  },
  {
    "text": "over traditional monolith frontends.",
    "start": "31410",
    "end": "33183"
  },
  {
    "text": "Micro-frontends are the\ntechnical representation",
    "start": "34020",
    "end": "37110"
  },
  {
    "text": "of a business sub-domain,",
    "start": "37110",
    "end": "38910"
  },
  {
    "text": "which allow independent implementation",
    "start": "38910",
    "end": "41430"
  },
  {
    "text": "either with the same or\ndifferent technology.",
    "start": "41430",
    "end": "44490"
  },
  {
    "text": "They enable you to break your frontend app",
    "start": "44490",
    "end": "46950"
  },
  {
    "text": "into smaller independent parts,",
    "start": "46950",
    "end": "48960"
  },
  {
    "text": "making it more robust and efficient.",
    "start": "48960",
    "end": "51750"
  },
  {
    "text": "Unlike monolith frontends,",
    "start": "51750",
    "end": "53430"
  },
  {
    "text": "they minimize the code\nshared with other subdomains",
    "start": "53430",
    "end": "56370"
  },
  {
    "text": "and they are owned by a single team.",
    "start": "56370",
    "end": "58350"
  },
  {
    "text": "There are various micro-frontend\ncomposition patterns",
    "start": "58350",
    "end": "61649"
  },
  {
    "text": "including build-time composition,",
    "start": "61650",
    "end": "64320"
  },
  {
    "text": "which consists of all the\nmicro-frontend being compiled",
    "start": "64320",
    "end": "67440"
  },
  {
    "text": "into a single deployable\nartifact like an NPM package",
    "start": "67440",
    "end": "71040"
  },
  {
    "text": "into an application shell,\nwhich can be an entirely",
    "start": "71040",
    "end": "74520"
  },
  {
    "text": "self-contained micro-frontend in itself.",
    "start": "74520",
    "end": "77490"
  },
  {
    "text": "It is used by smaller teams",
    "start": "77490",
    "end": "79259"
  },
  {
    "text": "that don't require a high\ndegree of flexibility.",
    "start": "79260",
    "end": "81963"
  },
  {
    "text": "We have server-side composition",
    "start": "82950",
    "end": "84420"
  },
  {
    "text": "in which the user navigates to\nthe page in the application.",
    "start": "84420",
    "end": "88409"
  },
  {
    "text": "It composes micro-frontend page\nfragment at the server side",
    "start": "88410",
    "end": "91950"
  },
  {
    "text": "and returns them to the browser.",
    "start": "91950",
    "end": "94200"
  },
  {
    "text": "Each page fragment server\nis independently deployed",
    "start": "94200",
    "end": "97590"
  },
  {
    "text": "and it's ideal for search\nengine optimization purposes.",
    "start": "97590",
    "end": "101520"
  },
  {
    "text": "Runtime composition involves\nJavaScript to dynamically load",
    "start": "101520",
    "end": "105479"
  },
  {
    "text": "and assemble micro-frontend\nin the user's browser",
    "start": "105480",
    "end": "108570"
  },
  {
    "text": "from independently deployed URIs.",
    "start": "108570",
    "end": "110343"
  },
  {
    "text": "This is done through\nweb components, iFrames,",
    "start": "111270",
    "end": "114060"
  },
  {
    "text": "or even Webpack Module Federation.",
    "start": "114060",
    "end": "116132"
  },
  {
    "text": "This approach is the most flexible,",
    "start": "117000",
    "end": "119250"
  },
  {
    "text": "which enables your team\nto isolate releases",
    "start": "119250",
    "end": "122220"
  },
  {
    "text": "and deployment of\nmicro-frontends independently.",
    "start": "122220",
    "end": "125550"
  },
  {
    "text": "Let's see an example",
    "start": "125550",
    "end": "126960"
  },
  {
    "text": "of an e-commerce\nmicro-frontend application",
    "start": "126960",
    "end": "129660"
  },
  {
    "text": "where each backend service app,",
    "start": "129660",
    "end": "131430"
  },
  {
    "text": "for example, payment, account, and search,",
    "start": "131430",
    "end": "134579"
  },
  {
    "text": "have their independent frontends",
    "start": "134580",
    "end": "136140"
  },
  {
    "text": "hosted by the parent frontend app,",
    "start": "136140",
    "end": "138420"
  },
  {
    "text": "leading to a more robust\nand decoupled architecture.",
    "start": "138420",
    "end": "141990"
  },
  {
    "text": "This approach promotes team\nautonomy in DevOps pipelines,",
    "start": "141990",
    "end": "145980"
  },
  {
    "text": "provides flexibility for teams",
    "start": "145980",
    "end": "147900"
  },
  {
    "text": "to choose their own tech stack,",
    "start": "147900",
    "end": "149700"
  },
  {
    "text": "and offers better performance",
    "start": "149700",
    "end": "151140"
  },
  {
    "text": "through shared common dependency",
    "start": "151140",
    "end": "152970"
  },
  {
    "text": "across multiple micro-frontends,",
    "start": "152970",
    "end": "154860"
  },
  {
    "text": "which result in smaller bundle\nsizes to load on browsers.",
    "start": "154860",
    "end": "157923"
  },
  {
    "text": "This decoupling facilitates\neasier maintenance",
    "start": "158820",
    "end": "161760"
  },
  {
    "text": "and faster development resulting\nin quicker time to market",
    "start": "161760",
    "end": "164790"
  },
  {
    "text": "for your new features.",
    "start": "164790",
    "end": "166319"
  },
  {
    "text": "In this e-commerce website\nmicro-frontend use case,",
    "start": "166320",
    "end": "169080"
  },
  {
    "text": "we will be leveraging",
    "start": "169080",
    "end": "170310"
  },
  {
    "text": "the runtime composition\npattern previously mentioned.",
    "start": "170310",
    "end": "173730"
  },
  {
    "text": "Let's start with a user\nwho will be accessing",
    "start": "173730",
    "end": "176280"
  },
  {
    "text": "your e-commerce web\napplication hosted on AWS.",
    "start": "176280",
    "end": "179013"
  },
  {
    "text": "The web app connects to Amazon Cognito",
    "start": "180245",
    "end": "182790"
  },
  {
    "text": "for user authentication and authorization",
    "start": "182790",
    "end": "185579"
  },
  {
    "text": "to help control the access\nto your web application.",
    "start": "185580",
    "end": "189330"
  },
  {
    "text": "Now let's see how your\napplication core team",
    "start": "189330",
    "end": "192480"
  },
  {
    "text": "set up the parent\ncontainer micro-frontend,",
    "start": "192480",
    "end": "194970"
  },
  {
    "text": "which will be responsible to render",
    "start": "194970",
    "end": "196710"
  },
  {
    "text": "child micro-frontends\nfor various services.",
    "start": "196710",
    "end": "199530"
  },
  {
    "text": "The web app is being served\nthrough Amazon CloudFront,",
    "start": "199530",
    "end": "202830"
  },
  {
    "text": "providing high-speed static\nand dynamic content delivery",
    "start": "202830",
    "end": "206100"
  },
  {
    "text": "backed by Amazon S3 storage.",
    "start": "206100",
    "end": "208470"
  },
  {
    "text": "The web app is hosted\nusing Amazon Amplify,",
    "start": "208470",
    "end": "211470"
  },
  {
    "text": "which is a complete solution\nto configure, build,",
    "start": "211470",
    "end": "214380"
  },
  {
    "text": "and host web apps by your\nchoice of technology stack,",
    "start": "214380",
    "end": "218010"
  },
  {
    "text": "which in this case we\nare using React Library",
    "start": "218010",
    "end": "220590"
  },
  {
    "text": "for the frontend development",
    "start": "220590",
    "end": "222239"
  },
  {
    "text": "and Amazon AppSync to provide\na single endpoint to query",
    "start": "222240",
    "end": "225600"
  },
  {
    "text": "and update user database,",
    "start": "225600",
    "end": "227310"
  },
  {
    "text": "which is backed by a NoSQL\nAmazon DynamoDB database.",
    "start": "227310",
    "end": "230793"
  },
  {
    "text": "Next, the search app child micro-frontend",
    "start": "231660",
    "end": "234517"
  },
  {
    "text": "provides a search engine\nto analyze product data",
    "start": "234517",
    "end": "237360"
  },
  {
    "text": "coming from various sources.",
    "start": "237360",
    "end": "239490"
  },
  {
    "text": "Much like the parent container,",
    "start": "239490",
    "end": "241230"
  },
  {
    "text": "you can similarly leverage\nAmplify and AppSync APIs,",
    "start": "241230",
    "end": "244620"
  },
  {
    "text": "but rather than DynamoDB,",
    "start": "244620",
    "end": "246330"
  },
  {
    "text": "you can connect to Amazon OpenSearch",
    "start": "246330",
    "end": "248670"
  },
  {
    "text": "for real-time product search capabilities,",
    "start": "248670",
    "end": "251220"
  },
  {
    "text": "and also use Angular JS for\nyour frontend development",
    "start": "251220",
    "end": "254430"
  },
  {
    "text": "without relying on the core\nmicro-frontend tech stack.",
    "start": "254430",
    "end": "257669"
  },
  {
    "text": "With this structure, both\nparent and child applications",
    "start": "257670",
    "end": "261269"
  },
  {
    "text": "are hosted independently",
    "start": "261270",
    "end": "263039"
  },
  {
    "text": "and governed autonomously\nby different teams,",
    "start": "263040",
    "end": "265710"
  },
  {
    "text": "providing more flexibility\nfor your DevOps pipeline.",
    "start": "265710",
    "end": "269340"
  },
  {
    "text": "An important aspect of this\ndesign is that each site",
    "start": "269340",
    "end": "272550"
  },
  {
    "text": "or micro-frontend is\nhosted on its own subdomain",
    "start": "272550",
    "end": "276120"
  },
  {
    "text": "and is accessed via routing\nfrom the container application.",
    "start": "276120",
    "end": "279840"
  },
  {
    "text": "Now, let's dive into your\npayment micro-frontend,",
    "start": "279840",
    "end": "282960"
  },
  {
    "text": "which is similar to the others,",
    "start": "282960",
    "end": "284580"
  },
  {
    "text": "except this child micro-frontend",
    "start": "284580",
    "end": "286770"
  },
  {
    "text": "leverages Vue.js framework for UI",
    "start": "286770",
    "end": "289710"
  },
  {
    "text": "and an Amazon Aurora RDS instance",
    "start": "289710",
    "end": "292319"
  },
  {
    "text": "as they may require a\ntransactional database",
    "start": "292320",
    "end": "294600"
  },
  {
    "text": "for payment services.",
    "start": "294600",
    "end": "296280"
  },
  {
    "text": "This gives the flexibility\nto choose your tech stack",
    "start": "296280",
    "end": "299130"
  },
  {
    "text": "based on business critical\nfunctionality requirements.",
    "start": "299130",
    "end": "302520"
  },
  {
    "text": "Finally, each of the child micro-frontends",
    "start": "302520",
    "end": "305129"
  },
  {
    "text": "provides their package JavaScript bundle",
    "start": "305130",
    "end": "307320"
  },
  {
    "text": "to the parent container\ncore application in runtime",
    "start": "307320",
    "end": "310770"
  },
  {
    "text": "and the landing page is rendered",
    "start": "310770",
    "end": "312690"
  },
  {
    "text": "by loading parent app bundle\nJS and index.html files.",
    "start": "312690",
    "end": "317130"
  },
  {
    "text": "This architecture is scalable",
    "start": "317130",
    "end": "319230"
  },
  {
    "text": "and enables multiple teams",
    "start": "319230",
    "end": "320970"
  },
  {
    "text": "to deploy their micro-frontend",
    "start": "320970",
    "end": "322830"
  },
  {
    "text": "based on their own requirements.",
    "start": "322830",
    "end": "324960"
  },
  {
    "text": "You can also leverage AWS Amplify",
    "start": "324960",
    "end": "328199"
  },
  {
    "text": "to configure a quick end-to-end\nlifecycle of development",
    "start": "328200",
    "end": "331770"
  },
  {
    "text": "and deployment for a\nfeature-rich full stack",
    "start": "331770",
    "end": "334169"
  },
  {
    "text": "micro-frontend application.",
    "start": "334170",
    "end": "336000"
  },
  {
    "text": "This development and deployment cycle",
    "start": "336000",
    "end": "338400"
  },
  {
    "text": "leveraging AWS Amplify\nconsists of four stages.",
    "start": "338400",
    "end": "342270"
  },
  {
    "text": "First, you can configure\nyour application frontend",
    "start": "342270",
    "end": "345720"
  },
  {
    "text": "as well as backend with\nselection of key components",
    "start": "345720",
    "end": "349050"
  },
  {
    "text": "like authentication, storage, databases,",
    "start": "349050",
    "end": "352169"
  },
  {
    "text": "and APIs based on your flexibility.",
    "start": "352170",
    "end": "355230"
  },
  {
    "text": "Second, you can build your features",
    "start": "355230",
    "end": "357480"
  },
  {
    "text": "in the language of your choice",
    "start": "357480",
    "end": "359310"
  },
  {
    "text": "by using Amplify libraries\nor Amplify Studio",
    "start": "359310",
    "end": "362790"
  },
  {
    "text": "and connect your frontend application",
    "start": "362790",
    "end": "364800"
  },
  {
    "text": "to new or existing AWS backend services.",
    "start": "364800",
    "end": "368759"
  },
  {
    "text": "Third, you can easily deploy\nyour web app or website",
    "start": "368760",
    "end": "372300"
  },
  {
    "text": "through the fast, secure,",
    "start": "372300",
    "end": "373919"
  },
  {
    "text": "and reliable AWS Content Delivery Network.",
    "start": "373920",
    "end": "377280"
  },
  {
    "text": "Lastly, you can customize",
    "start": "377280",
    "end": "379350"
  },
  {
    "text": "and integrate with other AWS services",
    "start": "379350",
    "end": "382230"
  },
  {
    "text": "to scale your application",
    "start": "382230",
    "end": "383880"
  },
  {
    "text": "to support evolving business requirements.",
    "start": "383880",
    "end": "386670"
  },
  {
    "text": "In this episode, we have\nexplored the benefit",
    "start": "386670",
    "end": "389250"
  },
  {
    "text": "of the micro-frontend,\nits composition patterns,",
    "start": "389250",
    "end": "391890"
  },
  {
    "text": "and how you can leverage AWS services",
    "start": "391890",
    "end": "394428"
  },
  {
    "text": "to build micro-frontends for\nyour use case easily at scale.",
    "start": "394428",
    "end": "398160"
  },
  {
    "text": "Check out the links in the\ndescription for more details.",
    "start": "398160",
    "end": "400920"
  },
  {
    "text": "Thanks for watching 'Back to\nBasics'. See you next time.",
    "start": "400920",
    "end": "405420"
  }
]