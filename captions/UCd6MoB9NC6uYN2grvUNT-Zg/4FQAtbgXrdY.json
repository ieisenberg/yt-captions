[
  {
    "text": "greetings I'm Simone with Amazon web",
    "start": "199",
    "end": "3120"
  },
  {
    "text": "services turbocharge your apps with",
    "start": "3120",
    "end": "6759"
  },
  {
    "text": "Amazon elastic cach what is the problem",
    "start": "6759",
    "end": "10840"
  },
  {
    "text": "that we're trying to solve today my web",
    "start": "10840",
    "end": "14280"
  },
  {
    "text": "applications need to run faster this",
    "start": "14280",
    "end": "17960"
  },
  {
    "text": "usually means that my database needs",
    "start": "17960",
    "end": "20920"
  },
  {
    "text": "some help a good way to solve this is by",
    "start": "20920",
    "end": "24240"
  },
  {
    "text": "implementing a memory caching system and",
    "start": "24240",
    "end": "28000"
  },
  {
    "text": "many companies around the world as",
    "start": "28000",
    "end": "30359"
  },
  {
    "text": "LinkedIn Twitter Wikipedia and many",
    "start": "30359",
    "end": "33079"
  },
  {
    "text": "others are doing so so let me show you",
    "start": "33079",
    "end": "35960"
  },
  {
    "text": "how it works this is the life of a web",
    "start": "35960",
    "end": "39040"
  },
  {
    "text": "application you have browsers or mobile",
    "start": "39040",
    "end": "42600"
  },
  {
    "text": "phones on the left web servers and",
    "start": "42600",
    "end": "46399"
  },
  {
    "text": "database servers and on step one the",
    "start": "46399",
    "end": "50800"
  },
  {
    "text": "customers will hit your web application",
    "start": "50800",
    "end": "53760"
  },
  {
    "text": "residing on your web server then the web",
    "start": "53760",
    "end": "56760"
  },
  {
    "text": "app will query the database which will",
    "start": "56760",
    "end": "59519"
  },
  {
    "text": "crunch its data and then return the",
    "start": "59519",
    "end": "62680"
  },
  {
    "text": "result to the web server and then the",
    "start": "62680",
    "end": "65439"
  },
  {
    "text": "web app will serve the page back to the",
    "start": "65439",
    "end": "67720"
  },
  {
    "text": "customer and this is of course all fine",
    "start": "67720",
    "end": "70560"
  },
  {
    "text": "but then traffic can ramp up and when it",
    "start": "70560",
    "end": "74560"
  },
  {
    "text": "does it happens that you will need to",
    "start": "74560",
    "end": "77439"
  },
  {
    "text": "scale your web servers and database",
    "start": "77439",
    "end": "80320"
  },
  {
    "text": "servers to cope with increasing requests",
    "start": "80320",
    "end": "83520"
  },
  {
    "text": "and",
    "start": "83520",
    "end": "84520"
  },
  {
    "text": "demand but at a certain point you will",
    "start": "84520",
    "end": "87320"
  },
  {
    "text": "hit a wall for example databases are",
    "start": "87320",
    "end": "90200"
  },
  {
    "text": "very difficult to scale Beyond a certain",
    "start": "90200",
    "end": "93000"
  },
  {
    "text": "point so you will ask yourself how can I",
    "start": "93000",
    "end": "95799"
  },
  {
    "text": "improve",
    "start": "95799",
    "end": "96960"
  },
  {
    "text": "performance and if you take a look at",
    "start": "96960",
    "end": "99000"
  },
  {
    "text": "the queries that go to the databases",
    "start": "99000",
    "end": "101960"
  },
  {
    "text": "some of these queries are repetitive",
    "start": "101960",
    "end": "105240"
  },
  {
    "text": "queries and if you implement a memory",
    "start": "105240",
    "end": "107960"
  },
  {
    "text": "caching system you can essentially",
    "start": "107960",
    "end": "110680"
  },
  {
    "text": "redirect these queries to a cache system",
    "start": "110680",
    "end": "114880"
  },
  {
    "text": "cache machines will answer much faster",
    "start": "114880",
    "end": "118479"
  },
  {
    "text": "and the databases will be able to answer",
    "start": "118479",
    "end": "122079"
  },
  {
    "text": "queries much faster as well so your",
    "start": "122079",
    "end": "125039"
  },
  {
    "text": "overall architecture will be much",
    "start": "125039",
    "end": "127560"
  },
  {
    "text": "better so what is memory caching then",
    "start": "127560",
    "end": "130959"
  },
  {
    "text": "it's basically about installing a",
    "start": "130959",
    "end": "133200"
  },
  {
    "text": "component that stores data and then",
    "start": "133200",
    "end": "137319"
  },
  {
    "text": "every request for that data can be",
    "start": "137319",
    "end": "139480"
  },
  {
    "text": "served much",
    "start": "139480",
    "end": "141280"
  },
  {
    "text": "faster let me give you an example if you",
    "start": "141280",
    "end": "144239"
  },
  {
    "text": "want to query the phone number of Mr X",
    "start": "144239",
    "end": "147760"
  },
  {
    "text": "the first time you do it you try to",
    "start": "147760",
    "end": "149840"
  },
  {
    "text": "query from Cache but miss you don't find",
    "start": "149840",
    "end": "153760"
  },
  {
    "text": "the data so you query from the database",
    "start": "153760",
    "end": "156239"
  },
  {
    "text": "and then you also copy the result to",
    "start": "156239",
    "end": "158840"
  },
  {
    "text": "your cash system the second time onwards",
    "start": "158840",
    "end": "162319"
  },
  {
    "text": "every time you query the same data from",
    "start": "162319",
    "end": "165120"
  },
  {
    "text": "your cache you will hit the data and the",
    "start": "165120",
    "end": "168840"
  },
  {
    "text": "cache system will be able to answer your",
    "start": "168840",
    "end": "171159"
  },
  {
    "text": "query much faster than the",
    "start": "171159",
    "end": "174800"
  },
  {
    "text": "database so how can I implement this in",
    "start": "174800",
    "end": "178440"
  },
  {
    "text": "the traditional world",
    "start": "178440",
    "end": "180280"
  },
  {
    "text": "you can do so by installing",
    "start": "180280",
    "end": "183720"
  },
  {
    "text": "MCD which is an open- Source high",
    "start": "183720",
    "end": "186519"
  },
  {
    "text": "performance in memory key Value Store",
    "start": "186519",
    "end": "191000"
  },
  {
    "text": "ideal for small chunks of arbitrary data",
    "start": "191000",
    "end": "194599"
  },
  {
    "text": "and then you will need to configure it",
    "start": "194599",
    "end": "196680"
  },
  {
    "text": "run it manage it update it",
    "start": "196680",
    "end": "200040"
  },
  {
    "text": "Etc in the cloud computing world you can",
    "start": "200040",
    "end": "203120"
  },
  {
    "text": "run MCD on Amazon ec2 Amazon ec2 is a",
    "start": "203120",
    "end": "208120"
  },
  {
    "text": "web service that provides provides",
    "start": "208120",
    "end": "210439"
  },
  {
    "text": "virtual servers on demand you can run it",
    "start": "210439",
    "end": "213760"
  },
  {
    "text": "of course on multiple nodes if you need",
    "start": "213760",
    "end": "216640"
  },
  {
    "text": "bigger amounts of RAM and of course you",
    "start": "216640",
    "end": "219959"
  },
  {
    "text": "still need to manage these machines by",
    "start": "219959",
    "end": "222239"
  },
  {
    "text": "yourself but now there is an even better",
    "start": "222239",
    "end": "225159"
  },
  {
    "text": "way to have a caching mechanism in the",
    "start": "225159",
    "end": "229080"
  },
  {
    "text": "cloud it's called Amazon elastic cache",
    "start": "229080",
    "end": "232519"
  },
  {
    "text": "let me tell you a bit more about it it's",
    "start": "232519",
    "end": "234840"
  },
  {
    "text": "an easy to set up manage and scale cach",
    "start": "234840",
    "end": "238680"
  },
  {
    "text": "clusters",
    "start": "238680",
    "end": "240640"
  },
  {
    "text": "the way you pay for it is pay as you go",
    "start": "240640",
    "end": "243760"
  },
  {
    "text": "so you pay only for what you use and",
    "start": "243760",
    "end": "246439"
  },
  {
    "text": "it's compatible with the mcash D",
    "start": "246439",
    "end": "248680"
  },
  {
    "text": "protocol it means that it's very easy to",
    "start": "248680",
    "end": "251879"
  },
  {
    "text": "migrate from an existing mcash D system",
    "start": "251879",
    "end": "255120"
  },
  {
    "text": "to Amazon elastic cache each cluster or",
    "start": "255120",
    "end": "259359"
  },
  {
    "text": "cash cluster has one or more cash nodes",
    "start": "259359",
    "end": "263800"
  },
  {
    "text": "and this allows you to scale out the",
    "start": "263800",
    "end": "266400"
  },
  {
    "text": "capacity that you want and if you are",
    "start": "266400",
    "end": "269600"
  },
  {
    "text": "implementing this cach mechanism from",
    "start": "269600",
    "end": "272240"
  },
  {
    "text": "scratch it's of course very easy to",
    "start": "272240",
    "end": "274840"
  },
  {
    "text": "launch Amazon elastic cache but your",
    "start": "274840",
    "end": "277560"
  },
  {
    "text": "applications you need to check that they",
    "start": "277560",
    "end": "279560"
  },
  {
    "text": "are able to take advantage of this cash",
    "start": "279560",
    "end": "282280"
  },
  {
    "text": "system before being able to use it so",
    "start": "282280",
    "end": "285280"
  },
  {
    "text": "let me show you a demo now I will launch",
    "start": "285280",
    "end": "287840"
  },
  {
    "text": "one terabyte of cash on Amazon elastic",
    "start": "287840",
    "end": "291800"
  },
  {
    "text": "cache and I will do this in Just 2",
    "start": "291800",
    "end": "295600"
  },
  {
    "text": "minutes this is the Management console",
    "start": "295600",
    "end": "298240"
  },
  {
    "text": "for Amazon web service Services I want",
    "start": "298240",
    "end": "300800"
  },
  {
    "text": "to change the default Security Group for",
    "start": "300800",
    "end": "304479"
  },
  {
    "text": "my elastic cache and I want to enable my",
    "start": "304479",
    "end": "307840"
  },
  {
    "text": "web servers to be able to connect status",
    "start": "307840",
    "end": "310919"
  },
  {
    "text": "is authorizing and now authorized it",
    "start": "310919",
    "end": "313479"
  },
  {
    "text": "means that I can just launch my cash",
    "start": "313479",
    "end": "315960"
  },
  {
    "text": "cluster now I can give it a name cach",
    "start": "315960",
    "end": "318639"
  },
  {
    "text": "cluster one I can pick the biggest node",
    "start": "318639",
    "end": "322280"
  },
  {
    "text": "type which has 68 GB of RAM and I want",
    "start": "322280",
    "end": "325680"
  },
  {
    "text": "to launch 16 of them I don't need any",
    "start": "325680",
    "end": "329199"
  },
  {
    "text": "addition",
    "start": "329199",
    "end": "330039"
  },
  {
    "text": "configuration the default is enough for",
    "start": "330039",
    "end": "332639"
  },
  {
    "text": "me and once I'm satisfied with the",
    "start": "332639",
    "end": "334960"
  },
  {
    "text": "configuration I can launch",
    "start": "334960",
    "end": "337039"
  },
  {
    "text": "it the cluster will be creating and",
    "start": "337039",
    "end": "341000"
  },
  {
    "text": "after a few minutes this cluster will be",
    "start": "341000",
    "end": "344039"
  },
  {
    "text": "up and running or available if you click",
    "start": "344039",
    "end": "347120"
  },
  {
    "text": "on the cluster name you can see the",
    "start": "347120",
    "end": "349960"
  },
  {
    "text": "description of this cluster as well as",
    "start": "349960",
    "end": "352639"
  },
  {
    "text": "the multiple nodes running on this",
    "start": "352639",
    "end": "355199"
  },
  {
    "text": "cluster and of course you can get access",
    "start": "355199",
    "end": "358360"
  },
  {
    "text": "to the cloud watch metrics about every",
    "start": "358360",
    "end": "362160"
  },
  {
    "text": "machine in the cluster you can also copy",
    "start": "362160",
    "end": "365280"
  },
  {
    "text": "the node endpoint in order to allow your",
    "start": "365280",
    "end": "368479"
  },
  {
    "text": "applications to use",
    "start": "368479",
    "end": "371280"
  },
  {
    "text": "it and of course you can also take a",
    "start": "371280",
    "end": "373840"
  },
  {
    "text": "look at the parameter for this cache",
    "start": "373840",
    "end": "378199"
  },
  {
    "text": "cluster here they",
    "start": "378199",
    "end": "380479"
  },
  {
    "text": "are and of course you can also take a",
    "start": "380479",
    "end": "382840"
  },
  {
    "text": "look at the cache events in this case",
    "start": "382840",
    "end": "385960"
  },
  {
    "text": "the cache nodes that we just added you",
    "start": "385960",
    "end": "388560"
  },
  {
    "text": "can of course mod ify reboot or when",
    "start": "388560",
    "end": "391759"
  },
  {
    "text": "you're finished delete this cach cluster",
    "start": "391759",
    "end": "395639"
  },
  {
    "text": "so it's pretty easy to do it and as I",
    "start": "395639",
    "end": "397880"
  },
  {
    "text": "told you just a couple of minutes to do",
    "start": "397880",
    "end": "402280"
  },
  {
    "text": "it so this is the end of demo more",
    "start": "402280",
    "end": "406120"
  },
  {
    "text": "details of course on",
    "start": "406120",
    "end": "408160"
  },
  {
    "text": "aws.amazon.com",
    "start": "408160",
    "end": "411160"
  },
  {
    "text": "elasticache and these are my contact",
    "start": "412080",
    "end": "414280"
  },
  {
    "text": "details thank you very much for your",
    "start": "414280",
    "end": "417240"
  },
  {
    "text": "attention and of course remember",
    "start": "417240",
    "end": "419440"
  },
  {
    "text": "remember to share with your friends if",
    "start": "419440",
    "end": "421120"
  },
  {
    "text": "you likeed this presentation thank you",
    "start": "421120",
    "end": "423120"
  },
  {
    "text": "very",
    "start": "423120",
    "end": "425160"
  },
  {
    "text": "much",
    "start": "425160",
    "end": "428160"
  }
]