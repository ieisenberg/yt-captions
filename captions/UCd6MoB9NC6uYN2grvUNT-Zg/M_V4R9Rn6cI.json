[
  {
    "text": "hi uh good afternoon everyone and thanks for coming to this session",
    "start": "80",
    "end": "5200"
  },
  {
    "text": "my name is nihar bihani i'm a product a senior product manager with amazon web services and the specific",
    "start": "5200",
    "end": "12559"
  },
  {
    "text": "product that i work for is amazon cloudfront which is a content delivery service",
    "start": "12559",
    "end": "18640"
  },
  {
    "text": "and i'm here today to talk to you about whole site delivery with amazon cloudfront",
    "start": "18640",
    "end": "24400"
  },
  {
    "text": "so just a quick show of hands as we get started how many of you have heard of amazon cloudfront",
    "start": "24400",
    "end": "32160"
  },
  {
    "text": "great and keep your hands up if uh if you're using amazon cloudfront today",
    "start": "32239",
    "end": "37520"
  },
  {
    "text": "all right excellent great so now that we have got a couple of stretches out of",
    "start": "37520",
    "end": "42719"
  },
  {
    "text": "the way this afternoon let's go ahead and get started so quickly running through the agenda we'll",
    "start": "42719",
    "end": "49840"
  },
  {
    "text": "we've got four you know topics uh to cover today in the next hour first we'll talk about what is whole",
    "start": "49840",
    "end": "56239"
  },
  {
    "text": "site delivery what does that mean then why use cloudfront for whole site",
    "start": "56239",
    "end": "62160"
  },
  {
    "text": "delivery i'll also walk through a quick demo",
    "start": "62160",
    "end": "67280"
  },
  {
    "text": "just to show you how you can use cloudfront for delivering an entire website so i've got a",
    "start": "67280",
    "end": "74000"
  },
  {
    "text": "a pretty bare-bones website that has dynamic and static content i'll show you how you can fairly easily",
    "start": "74000",
    "end": "79840"
  },
  {
    "text": "configure a whole site and deliver that via cloudfront and then what i'm really excited about",
    "start": "79840",
    "end": "85200"
  },
  {
    "text": "is we have a customer here today stephen evans from toronto star newspapers and he will",
    "start": "85200",
    "end": "92560"
  },
  {
    "text": "also talk about how toronto star uses aws and specifically cloudfront and",
    "start": "92560",
    "end": "98880"
  },
  {
    "text": "cloudfont's whole site delivery features so before we dive into what is",
    "start": "98880",
    "end": "104399"
  },
  {
    "text": "whole site delivery i just want to take a quick minute and talk about what is cloudfront",
    "start": "104399",
    "end": "110320"
  },
  {
    "text": "so cloudfront is a content delivery service cloudfront has edge locations around the world and",
    "start": "110320",
    "end": "117280"
  },
  {
    "text": "integrates with other aws services like ec2 and s3 to make it easy for you to deliver",
    "start": "117280",
    "end": "124479"
  },
  {
    "text": "content with low latency and high throughput to your end users around the world",
    "start": "124479",
    "end": "131520"
  },
  {
    "text": "and whole side delivery is a specific use case or use of cloudfront where",
    "start": "131520",
    "end": "137680"
  },
  {
    "text": "we've added a number of features over the past year so let's let's talk about what is whole",
    "start": "137680",
    "end": "142959"
  },
  {
    "text": "site delivery so i have a screenshot here of the amazon.com home page",
    "start": "142959",
    "end": "148319"
  },
  {
    "text": "and what i want to highlight here is two different types of content on this page so the top left",
    "start": "148319",
    "end": "154840"
  },
  {
    "text": "circle that's marked dynamic is example of personalized content so",
    "start": "154840",
    "end": "160239"
  },
  {
    "text": "this is you know it says jared's amazon.com up there it's this page is personalized for jared if i",
    "start": "160239",
    "end": "166640"
  },
  {
    "text": "were to go to this page it'll say nihaarsamazon.com so it'd be personalized for me and then what you see towards the middle",
    "start": "166640",
    "end": "174239"
  },
  {
    "text": "of the screen the other circle is the image of martin family the show and and that's just a static image and",
    "start": "174239",
    "end": "181599"
  },
  {
    "text": "both jared and i when we go to this page we see the exact same image so the point really here is that most",
    "start": "181599",
    "end": "189680"
  },
  {
    "text": "modern websites today have a mixture of both dynamic and static content and typically",
    "start": "189680",
    "end": "197519"
  },
  {
    "text": "these websites would have an architecture that looks something like this",
    "start": "197519",
    "end": "202560"
  },
  {
    "text": "so you see the end users here making two different requests to download the",
    "start": "202560",
    "end": "208879"
  },
  {
    "text": "different types of content from their browsers so the first domain name up top www.example.com",
    "start": "208879",
    "end": "216720"
  },
  {
    "text": "is for the star.php path which represents the dynamic content on this website or on on a on a a website and",
    "start": "216720",
    "end": "225760"
  },
  {
    "text": "that request from the browser goes directly to the origin servers which in this case could",
    "start": "225760",
    "end": "231760"
  },
  {
    "text": "be an elastic load balancer with ec2 instances or it could be a custom origin server running outside of aws",
    "start": "231760",
    "end": "239280"
  },
  {
    "text": "and then the the second request uses the cdn.example.com domain name",
    "start": "239280",
    "end": "245360"
  },
  {
    "text": "and downloads the static files for this website so you can see here",
    "start": "245360",
    "end": "251280"
  },
  {
    "text": "start.jpg and this request first goes to a cloud for an edge location where the static images",
    "start": "251280",
    "end": "256799"
  },
  {
    "text": "could be cached to deliver with low latency to the browsers and if cloudfront doesn't have the image",
    "start": "256799",
    "end": "262880"
  },
  {
    "text": "at the edge location cloudfront can get it from the origin server which happens to be an e a an amazon s3 bucket or a custom origin",
    "start": "262880",
    "end": "270639"
  },
  {
    "text": "again so what you know if you look at an",
    "start": "270639",
    "end": "276560"
  },
  {
    "text": "example you know an architecture like this which is fairly typical the the issue you really run into is",
    "start": "276560",
    "end": "283680"
  },
  {
    "text": "when end users are going directly to your origin servers you have to think hard about what what",
    "start": "283680",
    "end": "290800"
  },
  {
    "text": "kind of performance will your end users around the globe see when downloading dynamic content directly from",
    "start": "290800",
    "end": "296000"
  },
  {
    "text": "your origin servers as well as the scalability uh if all of a sudden you see a spike on",
    "start": "296000",
    "end": "301600"
  },
  {
    "text": "your website will your origin are your origin origins equipped to handle that kind of a scale",
    "start": "301600",
    "end": "309520"
  },
  {
    "text": "so change that picture slightly and this can have significant impact on",
    "start": "309520",
    "end": "315199"
  },
  {
    "text": "the latency and the scalability for the dynamic portions of your website so in this picture you see the end users",
    "start": "315199",
    "end": "321840"
  },
  {
    "text": "are now going to the amazon cloudfront edge location using the www.example.com domain name",
    "start": "321840",
    "end": "329120"
  },
  {
    "text": "for all content on your website so cloudfront can then go to the",
    "start": "329120",
    "end": "335440"
  },
  {
    "text": "the same elastic load balancer and ec2 instances to download the php files your dynamic",
    "start": "335440",
    "end": "341039"
  },
  {
    "text": "content so that hasn't changed from the previous picture and cloudfront can go to",
    "start": "341039",
    "end": "347120"
  },
  {
    "text": "the amazon s3 bucket or a custom origin to download the jpeg the static files",
    "start": "347120",
    "end": "353600"
  },
  {
    "text": "but the end users are downloading everything via cloudform so cloudfront can really help",
    "start": "353600",
    "end": "358800"
  },
  {
    "text": "scale both the dynamic and the static portions of your website as well as give you latency benefits",
    "start": "358800",
    "end": "366240"
  },
  {
    "text": "and lower the latency for end users for your entire website and not just the static content",
    "start": "366240",
    "end": "372479"
  },
  {
    "text": "so when when you think about an architecture like we just saw where everything is coming we asked the cdn",
    "start": "373520",
    "end": "379360"
  },
  {
    "text": "edge there are there are some questions that come to mind and",
    "start": "379360",
    "end": "384479"
  },
  {
    "text": "you know when i talk to customers and look at websites i hear some of these questions that have turned into themes",
    "start": "384479",
    "end": "390639"
  },
  {
    "text": "and i think of some of these themes as myths the first one is none of my html pages",
    "start": "390639",
    "end": "396800"
  },
  {
    "text": "are cacheable and when i've had customers take a look more critically at",
    "start": "396800",
    "end": "403199"
  },
  {
    "text": "their website what we've discovered together is that there are several pages on the website that are actually cacheable",
    "start": "403199",
    "end": "410000"
  },
  {
    "text": "and could be cached at the edge location and that same html page could be delivered to several end users",
    "start": "410000",
    "end": "416720"
  },
  {
    "text": "so an example of this page or a page like that is the search results page so to be more specific we're in downtown",
    "start": "416720",
    "end": "423440"
  },
  {
    "text": "san francisco right now so i could go to a mobile application and search for restaurants near moscone",
    "start": "423440",
    "end": "430560"
  },
  {
    "text": "chances are there are other people around the same time of the day going to that same application and",
    "start": "430560",
    "end": "435840"
  },
  {
    "text": "searching using or searching for using the same terms and unless the",
    "start": "435840",
    "end": "441599"
  },
  {
    "text": "restaurants near moscone are really dynamic and changing for every user or on a permanent basis",
    "start": "441599",
    "end": "447199"
  },
  {
    "text": "you could cache that page for a few minutes or hours or maybe even up to a day",
    "start": "447199",
    "end": "452639"
  },
  {
    "text": "and get the benefit of low latency delivery to your end users",
    "start": "452639",
    "end": "457680"
  },
  {
    "text": "the second myth that i come across is my html pages are customized so they can't be cached and",
    "start": "457680",
    "end": "465039"
  },
  {
    "text": "cloudfront has actually added a couple of features over the past year to help cache customized pages",
    "start": "465039",
    "end": "471919"
  },
  {
    "text": "specifically cookies and query strings those are the common ways that",
    "start": "471919",
    "end": "478160"
  },
  {
    "text": "developers use to customize pages on a website and you can now have cookies or core",
    "start": "478160",
    "end": "484080"
  },
  {
    "text": "strings be a part of the cache key for your content and cache that content",
    "start": "484080",
    "end": "489120"
  },
  {
    "text": "at an edge location near your end users so a specific example of uh the type of content which is",
    "start": "489120",
    "end": "495440"
  },
  {
    "text": "customized but still could be cash is uh local weather pages",
    "start": "495440",
    "end": "500960"
  },
  {
    "text": "so again taking you know going along with the same example of downtown san francisco if you're",
    "start": "500960",
    "end": "506479"
  },
  {
    "text": "searching for weather for the zip code here in moscone versus you know weather report for a zip",
    "start": "506479",
    "end": "514240"
  },
  {
    "text": "code somewhere else within the bay area or maybe in another city um those results under the same url",
    "start": "514240",
    "end": "521760"
  },
  {
    "text": "could be cached at the edge location by you by using a cookie or a query string that",
    "start": "521760",
    "end": "528080"
  },
  {
    "text": "has the zip code in it so that you know for the five minute period let's say that you're caching",
    "start": "528080",
    "end": "533680"
  },
  {
    "text": "that that weather results page all the users that are trying to access the weather",
    "start": "533680",
    "end": "538720"
  },
  {
    "text": "for that location are getting a cached version of the page this is really helpful if you think",
    "start": "538720",
    "end": "544000"
  },
  {
    "text": "about weather alerts or situations where you may need to scale your website really quickly",
    "start": "544000",
    "end": "549440"
  },
  {
    "text": "and their cloudfront can really help you scale easily because you know for a sudden",
    "start": "549440",
    "end": "556720"
  },
  {
    "text": "increase in traffic for your weather results pages the third myth that i hear about is that",
    "start": "556720",
    "end": "563200"
  },
  {
    "text": "my pages are personalized and we saw an example of that with the amazon.com homepage so a cdn",
    "start": "563200",
    "end": "568720"
  },
  {
    "text": "won't be useful there and there are you know that that could be true but there are",
    "start": "568720",
    "end": "573760"
  },
  {
    "text": "several occasions where even personalized pages can be faster to deliver to",
    "start": "573760",
    "end": "580320"
  },
  {
    "text": "end users especially end users further away from your origin servers when the",
    "start": "580320",
    "end": "587519"
  },
  {
    "text": "when cloudfront is delivering that page so when they when the end users are connecting to a cloudfront location",
    "start": "587519",
    "end": "593600"
  },
  {
    "text": "and cloudform is getting that content from the origin server and we'll talk specifically about some of the network and path optimizations",
    "start": "593600",
    "end": "600640"
  },
  {
    "text": "uh that cloudfront has built that help deliver truly dynamic pages faster",
    "start": "600640",
    "end": "608079"
  },
  {
    "text": "so before we uh dive deep into some of those optimizations and features i wanted to talk about a few use cases",
    "start": "608480",
    "end": "616079"
  },
  {
    "text": "where we see lots of different customers uh using whole site delivery with amazon",
    "start": "616079",
    "end": "621200"
  },
  {
    "text": "cloudfront news is a popular use case and stephen is uh going to talk a little bit more about",
    "start": "621200",
    "end": "627360"
  },
  {
    "text": "that from toronto star and how toronto star is using cloudfront's whole site delivery",
    "start": "627360",
    "end": "632399"
  },
  {
    "text": "features through to deliver their entire news website",
    "start": "632399",
    "end": "637440"
  },
  {
    "text": "we also see use cases in the the weather domain you know like an example i offered or",
    "start": "637440",
    "end": "643519"
  },
  {
    "text": "stock quotes or travel updates these are all examples of dynamic data where",
    "start": "643519",
    "end": "648880"
  },
  {
    "text": "data is updated very frequently yet caching can help you scale and lower",
    "start": "648880",
    "end": "653920"
  },
  {
    "text": "latency for your end users advertising is another one with cookies and query strings you can actually",
    "start": "653920",
    "end": "660240"
  },
  {
    "text": "customize the the ads that you're serving to your end users on the publisher's website",
    "start": "660240",
    "end": "667680"
  },
  {
    "text": "so let's dive a little bit deeper into why use cloudfront for whole site delivery what are some of the benefits",
    "start": "668880",
    "end": "675839"
  },
  {
    "text": "so the key message the key point that i'd like you to take away from this slide and this part of the",
    "start": "677600",
    "end": "683440"
  },
  {
    "text": "presentation is to think of or to do not think of cloudfront as a niche",
    "start": "683440",
    "end": "689040"
  },
  {
    "text": "that can only be useful to lower the latency and scale the static portions of your",
    "start": "689040",
    "end": "695920"
  },
  {
    "text": "website cloudfront can be used to deliver your entire website",
    "start": "695920",
    "end": "701360"
  },
  {
    "text": "the static and the dynamic portions of the site and with cloudfront your applications",
    "start": "701360",
    "end": "708240"
  },
  {
    "text": "if you're delivering your entire application cloudfront can help make your applications faster",
    "start": "708240",
    "end": "713920"
  },
  {
    "text": "scale better more available easier to manage and cost less and we'll",
    "start": "713920",
    "end": "719839"
  },
  {
    "text": "walk through each of these benefits and see how cloudfront can help there",
    "start": "719839",
    "end": "726720"
  },
  {
    "text": "so glovefront can help make your applications faster the way i think about it is in terms of a simple equation",
    "start": "726800",
    "end": "732959"
  },
  {
    "text": "long distance plus poor network leads to slow load times",
    "start": "732959",
    "end": "739120"
  },
  {
    "text": "if you have a global user base some of your users will have to travel long distances over the internet",
    "start": "739519",
    "end": "746000"
  },
  {
    "text": "to get to your origin servers to download your website that in itself causes you know",
    "start": "746000",
    "end": "752720"
  },
  {
    "text": "longer round trip times just because of the fact that they are further away from",
    "start": "752720",
    "end": "757920"
  },
  {
    "text": "your origin server that combined with poor networks where networks are either not performing well",
    "start": "757920",
    "end": "763600"
  },
  {
    "text": "or there is higher amount of packet loss can really lead to slow load times for",
    "start": "763600",
    "end": "768720"
  },
  {
    "text": "for your website or your application so how cloudfront helps cloudfront helps by changing both of the",
    "start": "768720",
    "end": "776800"
  },
  {
    "text": "input variables and that helps change the output from slow to a fast",
    "start": "776800",
    "end": "782000"
  },
  {
    "text": "performing website so cloudfront helps minimize that distance that your end users need to travel and",
    "start": "782000",
    "end": "789040"
  },
  {
    "text": "it also helps optimize the network connection so that it's not a poor network but it's on",
    "start": "789040",
    "end": "796639"
  },
  {
    "text": "on the other hand it's a better higher performing network so specifically around short distance",
    "start": "796639",
    "end": "802240"
  },
  {
    "text": "platform has a global network of edge locations there are 39 edge locations around the world across five continents today",
    "start": "802240",
    "end": "809279"
  },
  {
    "text": "and we're continuously adding more edge locations so you'll see a lot more of these in other parts of the world and as a",
    "start": "809279",
    "end": "815920"
  },
  {
    "text": "result of this your end users around the globe are connecting to and terminating their tcp connections",
    "start": "815920",
    "end": "821920"
  },
  {
    "text": "and their ssl connections to an edge location near them and then cloudfront can either served",
    "start": "821920",
    "end": "827920"
  },
  {
    "text": "serve a cached copy of your content whether it's you know static content or html pages or",
    "start": "827920",
    "end": "836079"
  },
  {
    "text": "cloudfront can use an optimized network path to go to the origin servers and fetch that content for that end user",
    "start": "836079",
    "end": "843519"
  },
  {
    "text": "specifically around optimized network paths what we've done is focused on both the path from the",
    "start": "843519",
    "end": "851279"
  },
  {
    "text": "end user to the cloud front edge location as well as the path from the edge location to the origin servers so this is a",
    "start": "851279",
    "end": "859440"
  },
  {
    "text": "you know the uh just a trim down version of the the architecture diagram that you saw",
    "start": "859440",
    "end": "864959"
  },
  {
    "text": "earlier but here what i'd like to highlight is from the",
    "start": "864959",
    "end": "870480"
  },
  {
    "text": "end users to cloudflare edge locations there's low latency from the fact that end users are connecting to a nearby",
    "start": "870480",
    "end": "876480"
  },
  {
    "text": "cloudflags location as well as tcp optimizations such as windows sizing",
    "start": "876480",
    "end": "882240"
  },
  {
    "text": "that allow for fewer round trips to send more data and more packets to your end users from the edge location",
    "start": "882240",
    "end": "890320"
  },
  {
    "text": "that uh plus the the so and when you combine that with the optimizations",
    "start": "890320",
    "end": "896000"
  },
  {
    "text": "between the cloudfront edge location and the origin server where we utilize persistent connections",
    "start": "896000",
    "end": "901360"
  },
  {
    "text": "and closely monitor the network paths the end result can be a better performance",
    "start": "901360",
    "end": "907040"
  },
  {
    "text": "in downloading your dynamic content for your end users than if they were going directly to the",
    "start": "907040",
    "end": "912320"
  },
  {
    "text": "origin servers like you saw in that very first picture where they were using www.example.com to",
    "start": "912320",
    "end": "917519"
  },
  {
    "text": "go to the origin server directly cloudfront can also help your",
    "start": "917519",
    "end": "923360"
  },
  {
    "text": "applications scale better so the scalability really comes from",
    "start": "923360",
    "end": "930079"
  },
  {
    "text": "three different aspects one you can use cloudfront to easily cache your static content at the",
    "start": "930079",
    "end": "936800"
  },
  {
    "text": "edge that's a use case that has that has been uh there since day one since government was launched and that",
    "start": "936800",
    "end": "943920"
  },
  {
    "text": "helps you scale and lower scale your static content delivery and lower latency there second off loading",
    "start": "943920",
    "end": "950880"
  },
  {
    "text": "connection setup and ssl negotiation to the edge so let the cloudfront edge location handle that",
    "start": "950880",
    "end": "956639"
  },
  {
    "text": "heavy lifting and then you know use optimized connections to go",
    "start": "956639",
    "end": "961920"
  },
  {
    "text": "back to the origin and third platform uses persistent connections to the origin and also collapse forwarding where",
    "start": "961920",
    "end": "968399"
  },
  {
    "text": "if there are a number of requests coming to an edge location at the exact same time",
    "start": "968399",
    "end": "973759"
  },
  {
    "text": "for the same piece of content so in case you have a spike in demand for some content on your",
    "start": "973759",
    "end": "979759"
  },
  {
    "text": "website cloudfront will really help you offload your origin server by making by collapsing those requests",
    "start": "979759",
    "end": "986240"
  },
  {
    "text": "into a single request or you know very few requests back to the origin server",
    "start": "986240",
    "end": "991680"
  },
  {
    "text": "so you see the picture of give you a customer example here you see the picture in the top right of uh the",
    "start": "991680",
    "end": "997839"
  },
  {
    "text": "mars rover curiosity that landed on mars in august of 2012",
    "start": "997839",
    "end": "1004560"
  },
  {
    "text": "and the the nasa jpl jet propulsion laboratory guys they used aws to host the website",
    "start": "1004560",
    "end": "1012240"
  },
  {
    "text": "experience for the curiosity lander and they used cloudfront to deliver the entire website both the",
    "start": "1012240",
    "end": "1019199"
  },
  {
    "text": "dynamic and the static portions of the website via single cloudfront distribution so",
    "start": "1019199",
    "end": "1024400"
  },
  {
    "text": "that they could really scale as new images from mars arrived and were",
    "start": "1024400",
    "end": "1029600"
  },
  {
    "text": "stored in an s3 bucket cloudfront was running that bucket and was able to scale for the um the end",
    "start": "1029600",
    "end": "1035600"
  },
  {
    "text": "users that wanted to see those new images",
    "start": "1035600",
    "end": "1039839"
  },
  {
    "text": "cloudfront can also make your applications more available and the way cloudfront does that is",
    "start": "1041439",
    "end": "1048319"
  },
  {
    "text": "first platform is already architected for high availability we have 39 locations today",
    "start": "1048319",
    "end": "1054320"
  },
  {
    "text": "around the world and our architecture is designed for failure so if there is an edge location that is",
    "start": "1054320",
    "end": "1060640"
  },
  {
    "text": "out of service or not functioning correctly for whatever reason we can turn off that",
    "start": "1060640",
    "end": "1065760"
  },
  {
    "text": "location and your end users will never see the impact because your end users get routed",
    "start": "1065760",
    "end": "1071360"
  },
  {
    "text": "automatically to the next best edge location for them so from a availability perspective",
    "start": "1071360",
    "end": "1078080"
  },
  {
    "text": "clafford already offers you that just by having you know a distributed network uh of redundancy and uh you know high",
    "start": "1078080",
    "end": "1085760"
  },
  {
    "text": "availability serving uh cached content even when the origin is unavailable so this is a",
    "start": "1085760",
    "end": "1091039"
  },
  {
    "text": "lesser known feature but it really helps make your website more available by serving stale content",
    "start": "1091039",
    "end": "1099039"
  },
  {
    "text": "even when cloudfront can't contact the origin to get a newer copy of the content so if you",
    "start": "1099039",
    "end": "1105039"
  },
  {
    "text": "have set a three-hour ttl time to live on your objects and it's already been three",
    "start": "1105039",
    "end": "1110960"
  },
  {
    "text": "hours uh but glovefront for some reason can't go to the origin and the origin is unavailable platform",
    "start": "1110960",
    "end": "1116880"
  },
  {
    "text": "will still continue to serve that content even though it's expired in the cache so that at least it can keep your",
    "start": "1116880",
    "end": "1122320"
  },
  {
    "text": "website available and then we do have an availability sla that's that's up on the website that you",
    "start": "1122320",
    "end": "1128000"
  },
  {
    "text": "can look at a specific customer example here would be toronto star and i won't go into too much detail here",
    "start": "1128000",
    "end": "1134160"
  },
  {
    "text": "because stephen is here to talk to us about that but he'll talk about some of the availability benefits that",
    "start": "1134160",
    "end": "1141039"
  },
  {
    "text": "toronto star saw by using cloudfront for wholesale delivery",
    "start": "1141039",
    "end": "1145919"
  },
  {
    "text": "glovefront can help make your applications easier to manage the ease of management comes from",
    "start": "1146080",
    "end": "1152320"
  },
  {
    "text": "what's true across all of amazon web services and that's a self-service sign up easy",
    "start": "1152320",
    "end": "1157679"
  },
  {
    "text": "to get started using the apis or the management console",
    "start": "1157679",
    "end": "1162720"
  },
  {
    "text": "but in addition to that what customers have told us is they don't need to write any custom code",
    "start": "1162720",
    "end": "1168400"
  },
  {
    "text": "which they've had to do with you know other providers earth networks is an example here",
    "start": "1168400",
    "end": "1175200"
  },
  {
    "text": "where earth networks is using cloudfront to deliver their mobile desktop and website",
    "start": "1175200",
    "end": "1180480"
  },
  {
    "text": "applications their weatherbug applications and when they moved to cloudfront they said",
    "start": "1180480",
    "end": "1186000"
  },
  {
    "text": "that they didn't need to write any custom code it was super easy to get started and super easy to configure their",
    "start": "1186000",
    "end": "1192240"
  },
  {
    "text": "websites to deliver their entire website they have spent there's a great video actually out there",
    "start": "1192240",
    "end": "1198160"
  },
  {
    "text": "on the cloudfront website from andy rosenbaum uh who's the director at earth networks",
    "start": "1198160",
    "end": "1203679"
  },
  {
    "text": "and he goes into a lot more detail so i'd encourage you to take a look when you have a couple of minutes and then we have features such as",
    "start": "1203679",
    "end": "1209360"
  },
  {
    "text": "multiple origins and multiple cache behaviors and i'll show you some of that when we do the demo",
    "start": "1209360",
    "end": "1214400"
  },
  {
    "text": "that allow you to use a single domain name on your website and have all of your resources be",
    "start": "1214400",
    "end": "1219919"
  },
  {
    "text": "pointed at using that domain name that just simplifies your website architecture without you needing",
    "start": "1219919",
    "end": "1227679"
  },
  {
    "text": "to change any of your back-end architecture because you can continue to use um you know the custom origins",
    "start": "1227679",
    "end": "1235360"
  },
  {
    "text": "or the dynamic origins and the static s3 buckets or static origins that you have been using",
    "start": "1235360",
    "end": "1240480"
  },
  {
    "text": "and just configure cloudfront with different rules to go to different origins based on the url path match",
    "start": "1240480",
    "end": "1249840"
  },
  {
    "text": "finally cloudfront can help make your applications cost less and a couple of key points that i'd",
    "start": "1250000",
    "end": "1256799"
  },
  {
    "text": "really like to focus on here first cloudfront charge is the same for delivering dynamic content",
    "start": "1256799",
    "end": "1262240"
  },
  {
    "text": "as it does for delivering static content and this is a this is a really important point uh you know there are providers out",
    "start": "1262240",
    "end": "1269039"
  },
  {
    "text": "there who have uh put a premium in terms of price on a dynamic content delivery and",
    "start": "1269039",
    "end": "1275440"
  },
  {
    "text": "clawford on the other hand has a long history of making features available to you at the same price",
    "start": "1275440",
    "end": "1281600"
  },
  {
    "text": "as static http content we did that with",
    "start": "1281600",
    "end": "1286799"
  },
  {
    "text": "when we added https https was and still is available at the same price as http",
    "start": "1286799",
    "end": "1292480"
  },
  {
    "text": "delivery we also added private content which is a feature of cloudfront that",
    "start": "1292480",
    "end": "1298720"
  },
  {
    "text": "you can use to restrict who can access your content and that feature is also available at the same price as static content",
    "start": "1298720",
    "end": "1303760"
  },
  {
    "text": "delivery we added on demand and live streaming and both of those features are available",
    "start": "1303760",
    "end": "1308799"
  },
  {
    "text": "at the same price as static content delivery and finally dynamic content delivery",
    "start": "1308799",
    "end": "1314000"
  },
  {
    "text": "you get the benefit of that at the same price as a static delivery we also launched earlier this year",
    "start": "1314000",
    "end": "1321600"
  },
  {
    "text": "preferential pricing for data transfer between aws origins and cloudfront locations so if you're",
    "start": "1321600",
    "end": "1328400"
  },
  {
    "text": "using s3 or ec2 origin servers the origin fetches that cloudfront makes",
    "start": "1328400",
    "end": "1334480"
  },
  {
    "text": "that data transfer out of s3 or ec2 is priced up to 83 discount as",
    "start": "1334480",
    "end": "1342480"
  },
  {
    "text": "as as compared to any other application on the internet or",
    "start": "1342480",
    "end": "1348159"
  },
  {
    "text": "any other user making a request of s3 or ec2 so that's the preferential pricing between",
    "start": "1348159",
    "end": "1353440"
  },
  {
    "text": "aws origins and cloudfront cloudform is also less expensive than",
    "start": "1353440",
    "end": "1359360"
  },
  {
    "text": "aws data transfer out of s3 or ec2 for higher higher volumes of usage so if you compare the public",
    "start": "1359360",
    "end": "1365600"
  },
  {
    "text": "data transfer aws data transfer rates with cloud furniture rates available on our website",
    "start": "1365600",
    "end": "1371760"
  },
  {
    "text": "you'll notice that above 10 terabytes of delivery per month platform is actually less expensive to use",
    "start": "1371760",
    "end": "1377120"
  },
  {
    "text": "and finally if if you have a large volume of delivery per month and are able to",
    "start": "1377120",
    "end": "1382240"
  },
  {
    "text": "make a minimum commitment platform does offer reserve capacity pricing as well",
    "start": "1382240",
    "end": "1388640"
  },
  {
    "text": "so at this point let's switch over to the demo",
    "start": "1388640",
    "end": "1392400"
  },
  {
    "text": "all right so what you see here is the aws management console and i'm uh on the",
    "start": "1401039",
    "end": "1407840"
  },
  {
    "text": "cloud front in the cloudfront tab here and i've created a cloudfront distribution",
    "start": "1407840",
    "end": "1413679"
  },
  {
    "text": "uh which is d3957 it's just a very customer",
    "start": "1413679",
    "end": "1418960"
  },
  {
    "text": "not a very customer friendly name uh but that's a cloudfront distribution uh that i've created for the",
    "start": "1418960",
    "end": "1424559"
  },
  {
    "text": "for the purpose of delivering my entire uh sample website uh so what i've one of the first things",
    "start": "1424559",
    "end": "1430400"
  },
  {
    "text": "i did is i created a cname so summit.cloudfrienddemo.com so it's a more customer friendly name",
    "start": "1430400",
    "end": "1435679"
  },
  {
    "text": "and i've used uh one of our sister services amazon drop 53 which is an authoritative dns service to",
    "start": "1435679",
    "end": "1441679"
  },
  {
    "text": "configure that cname and let's look at some of the origin",
    "start": "1441679",
    "end": "1447279"
  },
  {
    "text": "servers that i have configured for this distribution so i talked about being able to configure multiple origins",
    "start": "1447279",
    "end": "1453360"
  },
  {
    "text": "so in this case i have three different origin servers set up here origin dot origin 2",
    "start": "1453360",
    "end": "1460320"
  },
  {
    "text": "dot and an s3 bucket for the static objects and the way i've configured these",
    "start": "1460320",
    "end": "1465840"
  },
  {
    "text": "origins is if you look at the cache behaviors tab for star.html and starter",
    "start": "1465840",
    "end": "1473200"
  },
  {
    "text": "js these assets will be downloaded from origin 2 which is basically you know an ec2",
    "start": "1473200",
    "end": "1481520"
  },
  {
    "text": "instance running in aws star.png is uh you know so any any url with the",
    "start": "1481520",
    "end": "1489360"
  },
  {
    "text": "path that matches startup png the origin is configured to be an s3 bucket",
    "start": "1489360",
    "end": "1494720"
  },
  {
    "text": "and then default is for everything else on this website and there it goes to origin dot which is",
    "start": "1494720",
    "end": "1500080"
  },
  {
    "text": "actually a bean stock application running in aws and what the website does is",
    "start": "1500080",
    "end": "1506960"
  },
  {
    "text": "if you go to summit.cloudfrontdemo.com it's a twitter application where it",
    "start": "1506960",
    "end": "1512559"
  },
  {
    "text": "pulls the top three trending twitter hashtags uh live from the",
    "start": "1512559",
    "end": "1518000"
  },
  {
    "text": "twitter api uh the example of uh static content here is simply the aws",
    "start": "1518000",
    "end": "1523760"
  },
  {
    "text": "logo that you see at the bottom of the page but in at the top you can see",
    "start": "1523760",
    "end": "1529440"
  },
  {
    "text": "69 cosas sobre mi uh as the top trending hashtag right now",
    "start": "1529440",
    "end": "1535919"
  },
  {
    "text": "on twitter uh game inside is the second and rt is the third so uh you know this is refreshing every",
    "start": "1535919",
    "end": "1543840"
  },
  {
    "text": "second and all of this content the twitter feed as well as the static",
    "start": "1543840",
    "end": "1550080"
  },
  {
    "text": "content is all coming through demo. or summit.cloudfrontdemo.com a",
    "start": "1550080",
    "end": "1555840"
  },
  {
    "text": "single domain name with multiple origin servers configured in the back end so what's really happening behind the",
    "start": "1555840",
    "end": "1562080"
  },
  {
    "text": "scenes and why this is so interesting is uh all of the tcp optimizations and the persistent connections that we",
    "start": "1562080",
    "end": "1568159"
  },
  {
    "text": "talked about that minimize the connection setup time uh that your origins have to or that",
    "start": "1568159",
    "end": "1575919"
  },
  {
    "text": "your end users really have to spend in downloading this content every second uh you know if if we just go into the",
    "start": "1575919",
    "end": "1585279"
  },
  {
    "text": "chrome developer tools here you can see that what i'm doing here is using query",
    "start": "1585279",
    "end": "1590559"
  },
  {
    "text": "strings to get the updated json file from the beanstalk application",
    "start": "1590559",
    "end": "1597279"
  },
  {
    "text": "with the top three trending hashtags and the hashtags aren't really changing right now but if there was a shift in",
    "start": "1597279",
    "end": "1602720"
  },
  {
    "text": "the top three hashtags you would see that reflected here in real time and you could just as",
    "start": "1602720",
    "end": "1608880"
  },
  {
    "text": "easily cache the results for you know one second or a few seconds at a time so that if",
    "start": "1608880",
    "end": "1615440"
  },
  {
    "text": "this were to become the most popular application uh right now on the internet",
    "start": "1615440",
    "end": "1621039"
  },
  {
    "text": "and if you really had to scale quickly cloudfront could take all of that",
    "start": "1621039",
    "end": "1626640"
  },
  {
    "text": "load from all of your end users and you wouldn't have to scale the the origin or the origin 2",
    "start": "1626640",
    "end": "1633039"
  },
  {
    "text": "resources that you have set up on ec2",
    "start": "1633039",
    "end": "1637120"
  },
  {
    "text": "so that's uh that's really the demo i wanted to show and talk about how we're you know how easy you can",
    "start": "1638799",
    "end": "1646240"
  },
  {
    "text": "how easily you can set up uh you know an entire website with both dynamic and static content",
    "start": "1646240",
    "end": "1651679"
  },
  {
    "text": "and take advantage of some of the network and path optimizations as well as some of the features",
    "start": "1651679",
    "end": "1656799"
  },
  {
    "text": "that we have built without actually changing your origin servers and just cloudfront do the work of",
    "start": "1656799",
    "end": "1663200"
  },
  {
    "text": "fetching the dynamic and static content from those origin servers so we'll switch back to the presentation",
    "start": "1663200",
    "end": "1669840"
  },
  {
    "text": "so i'll just skip through some of these screen tags and at this point i'd like to invite stephen who'll walk you through",
    "start": "1672880",
    "end": "1680320"
  },
  {
    "text": "toronto star newspapers and how they're using platform for whole site delivery",
    "start": "1680320",
    "end": "1686080"
  },
  {
    "text": "okay well thanks nihar uh it's great to be here in san",
    "start": "1687760",
    "end": "1692799"
  },
  {
    "text": "francisco beautiful san francisco i consider myself a token canadian today so uh",
    "start": "1692799",
    "end": "1698159"
  },
  {
    "text": "if i say a a lot you know why um anyways it's uh i'd really like to thank nihar and his",
    "start": "1698159",
    "end": "1703600"
  },
  {
    "text": "team for inviting me to talk about our story at the toronto star um we've been on a journey and that",
    "start": "1703600",
    "end": "1708720"
  },
  {
    "text": "journey has included aws and cloudfront so i want to start off by",
    "start": "1708720",
    "end": "1713840"
  },
  {
    "text": "giving you a little bit of background about about the toronto star who we are and what we do so we are the",
    "start": "1713840",
    "end": "1718960"
  },
  {
    "text": "largest daily newspaper in canada we're focused on the metro toronto area which is a",
    "start": "1718960",
    "end": "1725520"
  },
  {
    "text": "a population of about five and a half million people and uh our we have a circular a weekly",
    "start": "1725520",
    "end": "1730720"
  },
  {
    "text": "circulation of about two million so a lot of people in toronto uh read the uh the print product",
    "start": "1730720",
    "end": "1736799"
  },
  {
    "text": "uh the website the star.com has about 3.3 million um monthly unique visitors that's",
    "start": "1736799",
    "end": "1742240"
  },
  {
    "text": "according to comscore so it's a fairly uh large website we're serving",
    "start": "1742240",
    "end": "1747520"
  },
  {
    "text": "uh tens of millions of page views uh a month and serving many many objects through",
    "start": "1747520",
    "end": "1753840"
  },
  {
    "text": "through cloudfront um we're a fairly small group within the toronto star the toronto star is a",
    "start": "1753840",
    "end": "1759440"
  },
  {
    "text": "large newspaper but we're about 35 or so folks within the digital media group and that includes about 10 technologists on",
    "start": "1759440",
    "end": "1766240"
  },
  {
    "text": "my team so we're small and focused we really run as a startup within a larger more established",
    "start": "1766240",
    "end": "1771760"
  },
  {
    "text": "newspaper company we have a multi-technology stack so we we have a",
    "start": "1771760",
    "end": "1778159"
  },
  {
    "text": "lot of java a fair amount of php and as well as some ruby when i can get",
    "start": "1778159",
    "end": "1783279"
  },
  {
    "text": "away with it in certain niches um so ruby on rails and stuff like that uh",
    "start": "1783279",
    "end": "1789440"
  },
  {
    "text": "our big our big re-launch uh was of our flagship property the star.com on january 30th of this",
    "start": "1789440",
    "end": "1796000"
  },
  {
    "text": "year that was about a six month long project we worked very hard to hit that date which was imposed on us",
    "start": "1796000",
    "end": "1801440"
  },
  {
    "text": "like a lot of projects and you can see what the what that site looks like in this screenshot here",
    "start": "1801440",
    "end": "1806799"
  },
  {
    "text": "and we'll talk a lot more about uh about about the the relaunch of that site",
    "start": "1806799",
    "end": "1812799"
  },
  {
    "text": "so to begin with why why amazon web services broadly and then we'll get into cloud front a little bit more",
    "start": "1813120",
    "end": "1820480"
  },
  {
    "text": "i was hired in january of 2012 and i was hired as a result of a corporate",
    "start": "1820480",
    "end": "1826159"
  },
  {
    "text": "restructuring where we decided to bring technology back into the newspaper part of the media company so",
    "start": "1826159",
    "end": "1831760"
  },
  {
    "text": "i started off as the only technology person within the group and we had the mandate to not only build",
    "start": "1831760",
    "end": "1838320"
  },
  {
    "text": "a new technology team but also to rethink our um our website",
    "start": "1838320",
    "end": "1843760"
  },
  {
    "text": "our content management strategy as well as our hosting infrastructure so the the amazon web services platform",
    "start": "1843760",
    "end": "1852240"
  },
  {
    "text": "became part of a an overall evaluation process where we looked at looked at various",
    "start": "1852240",
    "end": "1858480"
  },
  {
    "text": "various options in terms of cloud hosting uh looked at people like rackspace and",
    "start": "1858480",
    "end": "1865039"
  },
  {
    "text": "others um ran a short pilot phase where we ran some things within the amazon cloud and other places and uh decided to move",
    "start": "1865039",
    "end": "1872480"
  },
  {
    "text": "forward with amazon just in terms of everything you've heard around price flexibility capability and so on and so",
    "start": "1872480",
    "end": "1878159"
  },
  {
    "text": "forth so at that point we started to migrate some of our smaller sites things like php-based wordpress sites",
    "start": "1878159",
    "end": "1886320"
  },
  {
    "text": "tested out ec2 load balancers etc etc did a little bit of work with",
    "start": "1886320",
    "end": "1891519"
  },
  {
    "text": "cloudfront but not very much but over over 2012 we really tested we scaled that up we tested different sites",
    "start": "1891519",
    "end": "1897919"
  },
  {
    "text": "tested different technologies and really got comfortable with what we could do with amazon",
    "start": "1897919",
    "end": "1902960"
  },
  {
    "text": "uh that culminated as i said in january 2013 where we relaunched the star.com within",
    "start": "1902960",
    "end": "1909440"
  },
  {
    "text": "aws i want to give you a bit of a picture of",
    "start": "1909440",
    "end": "1917440"
  },
  {
    "text": "how we're using aws overall um so as nihar said we're really cloudfront",
    "start": "1917440",
    "end": "1923360"
  },
  {
    "text": "sits in front of everything we do both static and dynamic this is an architecture based on the",
    "start": "1923360",
    "end": "1928880"
  },
  {
    "text": "adobe cq5 content management platform that's a java based platform",
    "start": "1928880",
    "end": "1934720"
  },
  {
    "text": "what's unusual about it is it does not use a relational database whatsoever so it's based on a jcr java content",
    "start": "1934720",
    "end": "1941360"
  },
  {
    "text": "repository file system based data store and it's really it's a it's a",
    "start": "1941360",
    "end": "1946640"
  },
  {
    "text": "it's a multi-tier application but not in the classic sense so we have uh uh author servers that are used by",
    "start": "1946640",
    "end": "1953519"
  },
  {
    "text": "our content editing team that replicate content out to publishers that are then cached by dispatchers",
    "start": "1953519",
    "end": "1959919"
  },
  {
    "text": "all of this is operating within the u.s east region of aws it's running within a vpc so we have",
    "start": "1959919",
    "end": "1966480"
  },
  {
    "text": "finer grain control over security we can control security at the network level as",
    "start": "1966480",
    "end": "1971840"
  },
  {
    "text": "well as at the ec2 instance level um we're using three different availability",
    "start": "1971840",
    "end": "1977840"
  },
  {
    "text": "zones so we have redundancy across zones and redundancy across published servers",
    "start": "1977840",
    "end": "1985120"
  },
  {
    "text": "all of that is behind a load balancer an elb and that's a single origin for our cloudfront configuration and later on i'll talk to",
    "start": "1985120",
    "end": "1992640"
  },
  {
    "text": "you a little bit more about certain behaviors and things that we're doing uh to control uh the caching rules around",
    "start": "1992640",
    "end": "1999519"
  },
  {
    "text": "static and dynamic content so that's a picture of our of the architecture we're talking about",
    "start": "1999519",
    "end": "2005360"
  },
  {
    "text": "here as i move forward into more detail so uh more about whole site delivery and",
    "start": "2005360",
    "end": "2011519"
  },
  {
    "text": "these are some of the things that we were keeping in mind throughout our implementation and things we learned through our",
    "start": "2011519",
    "end": "2017360"
  },
  {
    "text": "implementation and i'm going to go into a lot more detail in certain certain areas here so i'll give",
    "start": "2017360",
    "end": "2022799"
  },
  {
    "text": "you a high level view on this slide and then we'll drill into things like client-side cookies and",
    "start": "2022799",
    "end": "2028080"
  },
  {
    "text": "behaviors so the first thing is cache everything possible and as nihar has explained",
    "start": "2028080",
    "end": "2033600"
  },
  {
    "text": "you can cache just about everything and i'll i'll explain that in more detail",
    "start": "2033600",
    "end": "2039440"
  },
  {
    "text": "we made a call and this is you can use server-side cookies with cloudfront we made a call",
    "start": "2039440",
    "end": "2045039"
  },
  {
    "text": "to not use any server-side cookies and move all of the cookie processing reading and writing to the client side so that we can",
    "start": "2045039",
    "end": "2051599"
  },
  {
    "text": "maximize our caching capability and i'll show you what that looks like with some javascript",
    "start": "2051599",
    "end": "2058158"
  },
  {
    "text": "you control the various rules using these behaviors and uh by default cloudfront allows you",
    "start": "2058399",
    "end": "2064800"
  },
  {
    "text": "to define 10 different behaviors we actually asked for permission to create more behaviors we have 19 different rules",
    "start": "2064800",
    "end": "2072158"
  },
  {
    "text": "and those rules really encapsulate the business logic around what can be cached for how long and where that that content",
    "start": "2072159",
    "end": "2078398"
  },
  {
    "text": "is coming from from an origin perspective",
    "start": "2078399",
    "end": "2082158"
  },
  {
    "text": "it's always important to do load testing there are some particular considerations to look at when load testing cloudfront and",
    "start": "2084000",
    "end": "2091919"
  },
  {
    "text": "and really you should speak to amazon about the best best practices around doing distributed load testing but even",
    "start": "2091919",
    "end": "2098320"
  },
  {
    "text": "though you're using a cdn you're using cloudfront you should still make sure you have a load testing approach",
    "start": "2098320",
    "end": "2105680"
  },
  {
    "text": "um i showed you the architecture and i pointed this out but we're using a",
    "start": "2106079",
    "end": "2111280"
  },
  {
    "text": "single origin we could be using multiple origins but the way our content management system works uh it makes sense to point",
    "start": "2111280",
    "end": "2118320"
  },
  {
    "text": "everything at a single origin with different rules for different types of content the adobe cq5 platform",
    "start": "2118320",
    "end": "2124000"
  },
  {
    "text": "serves both static and dynamic content from the same place so for us this made sense in many cases you'll probably want to",
    "start": "2124000",
    "end": "2130320"
  },
  {
    "text": "use s3 for static content and you'll define a different origin a different behavior for that static content",
    "start": "2130320",
    "end": "2137760"
  },
  {
    "text": "we're uh we're in the early stages of this uh this platform we're planning to move to a",
    "start": "2137760",
    "end": "2143680"
  },
  {
    "text": "disaster recovery approach where we can replicate most of our our ec2 infrastructure and",
    "start": "2143680",
    "end": "2149200"
  },
  {
    "text": "our vpc into a different region for failover in case of disaster recovery so and that that will",
    "start": "2149200",
    "end": "2155920"
  },
  {
    "text": "also leverage cloud fronts in terms of its edge caching and its scalability and availability benefits",
    "start": "2155920",
    "end": "2163760"
  },
  {
    "text": "so i'm going to try to walk you through this this code a little bit and i'll probably alternate between",
    "start": "2164560",
    "end": "2170560"
  },
  {
    "text": "sides i think i could so i can point it out to you but what what we're doing here is actually uh allowing an end user to",
    "start": "2170560",
    "end": "2177520"
  },
  {
    "text": "control the font size that they're that they're able to see on an article page so in the in the",
    "start": "2177520",
    "end": "2183440"
  },
  {
    "text": "first area here where um we're actually uh we're setting the the font size and",
    "start": "2183440",
    "end": "2190160"
  },
  {
    "text": "setting the cookie on the client side so we're using jquery that's what this thing is i'm not sure how much people are",
    "start": "2190160",
    "end": "2195839"
  },
  {
    "text": "javascript programmers are familiar with javascript but basically what we're doing here is we're we're setting a jquery listener for an",
    "start": "2195839",
    "end": "2203359"
  },
  {
    "text": "event around a font size change and we're dynamically restyling",
    "start": "2203359",
    "end": "2208800"
  },
  {
    "text": "the content on the page using that font size setting the last thing we do is we actually set",
    "start": "2208800",
    "end": "2214079"
  },
  {
    "text": "the cookie right from the client side uh to to store that that uh that font",
    "start": "2214079",
    "end": "2219520"
  },
  {
    "text": "size now typically what we would do is we would read this on the server side and",
    "start": "2219520",
    "end": "2225839"
  },
  {
    "text": "change the the styles that we're rendering from the server side but that would bust the cache and we don't want to bust the cache so we're",
    "start": "2225839",
    "end": "2231839"
  },
  {
    "text": "really focused on doing this all on the client side now i'll switch over here uh so so so what what we're doing here",
    "start": "2231839",
    "end": "2239839"
  },
  {
    "text": "is simply reading that reading that cookie and setting the",
    "start": "2239839",
    "end": "2244880"
  },
  {
    "text": "style dynamically there are many other places where we're doing this sort of thing in order to",
    "start": "2244880",
    "end": "2250000"
  },
  {
    "text": "maximize our cache ability for instance we have a personalization on authentication services",
    "start": "2250000",
    "end": "2256240"
  },
  {
    "text": "sits next to the mainstar.com website called mystar and what that service does is it simply",
    "start": "2256240",
    "end": "2261280"
  },
  {
    "text": "writes cookies to the domain and then the the client side code on the star.com site",
    "start": "2261280",
    "end": "2267200"
  },
  {
    "text": "reads those personalization settings and render something different on the client side so that all of that code can also be",
    "start": "2267200",
    "end": "2273040"
  },
  {
    "text": "cached so yep you really need to think about how you're maximizing your the cache ability",
    "start": "2273040",
    "end": "2278240"
  },
  {
    "text": "of your pages in terms of writing cookies and dynamic content",
    "start": "2278240",
    "end": "2283280"
  },
  {
    "text": "okay next i'm going to go into behaviors and i'll i will point out that because i'm from canada i spell",
    "start": "2283280",
    "end": "2288880"
  },
  {
    "text": "behaviors differently so if you thought that was a typo that's not a typo and it doesn't agree with stuff that's",
    "start": "2288880",
    "end": "2294160"
  },
  {
    "text": "on this page uh so this is this is the all 19",
    "start": "2294160",
    "end": "2299359"
  },
  {
    "text": "behaviors that we define for the star.com and what this tries to do is it tries to capture every",
    "start": "2299359",
    "end": "2305359"
  },
  {
    "text": "different uh scenario around the type of content you would have and how you how long you might want to",
    "start": "2305359",
    "end": "2311200"
  },
  {
    "text": "cache it for and whether you want to pass query strings over and all of the various settings that you would you have",
    "start": "2311200",
    "end": "2316640"
  },
  {
    "text": "for your caching the edge caching of your content these behaviors are processed in order",
    "start": "2316640",
    "end": "2323760"
  },
  {
    "text": "so the uh really it's a it's sort of a regular expression match",
    "start": "2323760",
    "end": "2329119"
  },
  {
    "text": "and it'll start from the first behavior and move down to the bottom so the 19th behavior is the default behavior",
    "start": "2329119",
    "end": "2334560"
  },
  {
    "text": "and if you don't match any of the previous behaviors then you'll hit that default behavior so",
    "start": "2334560",
    "end": "2339920"
  },
  {
    "text": "i'll show you a few examples of of what some of those behaviors look like this is the 19th one",
    "start": "2339920",
    "end": "2347839"
  },
  {
    "text": "the default behavior and what this says is hit the i'll go over to this side",
    "start": "2347839",
    "end": "2355119"
  },
  {
    "text": "hit the hit that that single load balancer we have um via either",
    "start": "2355119",
    "end": "2362320"
  },
  {
    "text": "ssl or non-ssl cache the content you find for five",
    "start": "2362320",
    "end": "2368480"
  },
  {
    "text": "minutes and and a few other settings so our default our default caching is for five",
    "start": "2368480",
    "end": "2374560"
  },
  {
    "text": "minutes here's the example for images images",
    "start": "2374560",
    "end": "2380800"
  },
  {
    "text": "tend to be a bit more static on our site so and we have a similar pat a similar",
    "start": "2380800",
    "end": "2387040"
  },
  {
    "text": "the same rule essentially for pings and gifs and other image types and this is a 50 minute cache ttl",
    "start": "2387040",
    "end": "2397839"
  },
  {
    "text": "this is an interesting one we have our urls are structured around the date so what we",
    "start": "2398960",
    "end": "2405359"
  },
  {
    "text": "decided is to define different behaviors that match uh",
    "start": "2405359",
    "end": "2410480"
  },
  {
    "text": "by year so what we can say here although we were only cashing these for 15 minutes we could",
    "start": "2410480",
    "end": "2417440"
  },
  {
    "text": "theoretically say and we will likely do this over time anything before",
    "start": "2417440",
    "end": "2422839"
  },
  {
    "text": "2009 is not going to change so cache it for hours why not do that so you're going to",
    "start": "2422839",
    "end": "2428720"
  },
  {
    "text": "generate even less traffic back to your origin server and we've we've set this up for each",
    "start": "2428720",
    "end": "2434480"
  },
  {
    "text": "year so we could say well 2012 2011 we we want to cache a little less",
    "start": "2434480",
    "end": "2439520"
  },
  {
    "text": "long because we might want to make updates updates to those articles we may have other reasons to do that but 2008 2007 2006 will cache longer",
    "start": "2439520",
    "end": "2448400"
  },
  {
    "text": "we have that level of control oop there we go so here's a here's an",
    "start": "2448400",
    "end": "2456960"
  },
  {
    "text": "example where we're actually forwarding query strings this is our search page so",
    "start": "2456960",
    "end": "2463200"
  },
  {
    "text": "and this is this is a a great feature where um we can cache every individual query",
    "start": "2463200",
    "end": "2470480"
  },
  {
    "text": "string separately uh the ttl here is shorter because we want the search to reflect all the",
    "start": "2470480",
    "end": "2476800"
  },
  {
    "text": "content that's been updated and we update content fairly frequently so it's only a two to two minutes time to live and what what will happen",
    "start": "2476800",
    "end": "2483839"
  },
  {
    "text": "here is when a unique query string is detected the query string gets passed to the",
    "start": "2483839",
    "end": "2488880"
  },
  {
    "text": "origin server the result is that query string is cached for two minutes so you're still getting the benefits of",
    "start": "2488880",
    "end": "2495440"
  },
  {
    "text": "of that cash again that limiting the traffic to your origin server but you're also able to pass in dynamic",
    "start": "2495440",
    "end": "2504160"
  },
  {
    "text": "content so we'll move on to some of the success metrics some of the things that uh",
    "start": "2506839",
    "end": "2512400"
  },
  {
    "text": "some of the great benefits we got from from moving to uh to cloud front and using it as a cdn uh",
    "start": "2512400",
    "end": "2519040"
  },
  {
    "text": "the the first and really most important thing from a business and customer experience perspective is our response time",
    "start": "2519040",
    "end": "2525680"
  },
  {
    "text": "uh before the launch and after launch uh we reduced responsible time by about fifty percent and you can see",
    "start": "2525680",
    "end": "2532400"
  },
  {
    "text": "uh uh oop sorry about that you can see the day of launch here and",
    "start": "2532400",
    "end": "2539440"
  },
  {
    "text": "then the a large drop in response time as measured by pingdom so many benefits there the customer",
    "start": "2539440",
    "end": "2547280"
  },
  {
    "text": "experience is is greatly improved uh benefits around uh search engine optimization google",
    "start": "2547280",
    "end": "2552960"
  },
  {
    "text": "juice is impacted by uh site download site response time",
    "start": "2552960",
    "end": "2558800"
  },
  {
    "text": "so that's been a huge benefit nihar mentioned this but we've also had",
    "start": "2558800",
    "end": "2565119"
  },
  {
    "text": "a huge availability benefit we had a minor wobble on our complicated",
    "start": "2565119",
    "end": "2573040"
  },
  {
    "text": "back-end content system the day of launch after the day of launch we've had 100",
    "start": "2573040",
    "end": "2578160"
  },
  {
    "text": "uptime so i mean four nines isn't bad anyways in terms of of up time for a website but",
    "start": "2578160",
    "end": "2584000"
  },
  {
    "text": "but 100 you can't ask for much better than that so that's been great um other uh business benefits",
    "start": "2584000",
    "end": "2591599"
  },
  {
    "text": "uh we've lowered our overall hosting cost uh overall improved consumer experience",
    "start": "2591599",
    "end": "2597839"
  },
  {
    "text": "and i mentioned the benefit around uh around seo so that's been awesome",
    "start": "2597839",
    "end": "2603760"
  },
  {
    "text": "so some of the things we learned and some of the things you should keep in mind as you move into using cloudfront and using cdns in",
    "start": "2604720",
    "end": "2611680"
  },
  {
    "text": "general um there are constraints and you just need to understand some of those constraints",
    "start": "2611680",
    "end": "2617599"
  },
  {
    "text": "i've talked a little bit about the constraints around writing of cookies there are other",
    "start": "2617599",
    "end": "2624160"
  },
  {
    "text": "constraints currently cloudfront doesn't support",
    "start": "2624160",
    "end": "2630079"
  },
  {
    "text": "other http verbs than get so doing you can't do a post to",
    "start": "2630079",
    "end": "2636000"
  },
  {
    "text": "cloudfront today we've had to do some creative coding to get around that constraint in terms of",
    "start": "2636000",
    "end": "2641280"
  },
  {
    "text": "submitting forms and that sort of thing so this can have an impact cloudfront",
    "start": "2641280",
    "end": "2646400"
  },
  {
    "text": "has an aggressive product roadmap so i'm confident that at some point in the future they'll be addressing many of these constraints but",
    "start": "2646400",
    "end": "2652079"
  },
  {
    "text": "uh these are things that you need to work around you still need to make sure that your",
    "start": "2652079",
    "end": "2657359"
  },
  {
    "text": "your origin servers are scalable and reliable",
    "start": "2657359",
    "end": "2662640"
  },
  {
    "text": "the cdn can only serve content that it can can reach and can return so uh you saw our architecture we thought",
    "start": "2662640",
    "end": "2669040"
  },
  {
    "text": "we still thought long and hard about making sure we were we had a multiple availability zone configuration",
    "start": "2669040",
    "end": "2674079"
  },
  {
    "text": "we're still thinking hard about making sure we have a dr uh strategy uh the cdn will help you there",
    "start": "2674079",
    "end": "2680000"
  },
  {
    "text": "but it won't solve all your problems there you can't you can't you're not going to be able to spin up micro instances",
    "start": "2680000",
    "end": "2686240"
  },
  {
    "text": "if you have a large website and and just assume cloudfront will do all the heavy lifting for you",
    "start": "2686240",
    "end": "2692640"
  },
  {
    "text": "yeah thinking about reporting requirements i would say honestly one of cloudfront's weaknesses today is the ability to give",
    "start": "2695200",
    "end": "2701920"
  },
  {
    "text": "you a really good handle on exactly what assets are being served over time so you don't have a you know i'm sure",
    "start": "2701920",
    "end": "2708240"
  },
  {
    "text": "you have google analytics and omniture and other reporting tools in terms of consumer interaction with your website",
    "start": "2708240",
    "end": "2713599"
  },
  {
    "text": "but think about the level of detail you need in terms of reporting of",
    "start": "2713599",
    "end": "2718960"
  },
  {
    "text": "cloudfront usage and don't assume you're going to get something sophisticated from directly from cloud from at this point",
    "start": "2718960",
    "end": "2725599"
  },
  {
    "text": "you'll get the raw data but you'll need to figure out how to visualize it how to get reports on it that sort of stuff",
    "start": "2725599",
    "end": "2732560"
  },
  {
    "text": "you saw that we have we had 19 behaviors and that was a fair amount of work to sit down with the business and understand the way they thought about",
    "start": "2732560",
    "end": "2740400"
  },
  {
    "text": "how long something could be cashed and and what they what their expectations were in terms of the consumer experience",
    "start": "2740400",
    "end": "2746240"
  },
  {
    "text": "so really it's a process of talking to the business analyzing the",
    "start": "2746240",
    "end": "2752800"
  },
  {
    "text": "requirements and defining the behaviors that will map to those requirements in terms of the way consumers need to interact with your",
    "start": "2752800",
    "end": "2759040"
  },
  {
    "text": "website so i think that's it for me",
    "start": "2759040",
    "end": "2764640"
  },
  {
    "text": "thanks again for listening and i'll hand it back to nihar",
    "start": "2764640",
    "end": "2775119"
  },
  {
    "text": "well thank you very much stephen so just a couple of resources that's all",
    "start": "2775119",
    "end": "2780400"
  },
  {
    "text": "i wanted to point out at the end you can get started and learn more by going to the cloudfront website",
    "start": "2780400",
    "end": "2786000"
  },
  {
    "text": "or the platform detail page that's just aws.amazon.com cloudfront and then we do have an",
    "start": "2786000",
    "end": "2791359"
  },
  {
    "text": "upcoming office hours with our engineering team uh it's virtual office hours you can ask questions and there'll be a quite a few engineers",
    "start": "2791359",
    "end": "2797599"
  },
  {
    "text": "on the cloudfront team around to answer those so between now and then if if you have",
    "start": "2797599",
    "end": "2803200"
  },
  {
    "text": "uh you know time to try out some of these cloudfront features and then come ask us questions uh that",
    "start": "2803200",
    "end": "2808400"
  },
  {
    "text": "url is also available on the cloudfront page so you can just go to the cloudfront page and sign up there",
    "start": "2808400",
    "end": "2815040"
  },
  {
    "text": "uh and that's really it i wanted to thank you again for uh coming today and uh spending the afternoon here",
    "start": "2815040",
    "end": "2820640"
  },
  {
    "text": "learning more about whole site delivery with cloudfront and uh stephen and i and a couple of",
    "start": "2820640",
    "end": "2826000"
  },
  {
    "text": "other uh cloudfront folks will be here we'll be happy to take questions so come on up and happy to answer questions for you",
    "start": "2826000",
    "end": "2831760"
  },
  {
    "text": "thank you",
    "start": "2831760",
    "end": "2837040"
  }
]