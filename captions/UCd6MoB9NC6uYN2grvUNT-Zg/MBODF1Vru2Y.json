[
  {
    "start": "0",
    "end": "20000"
  },
  {
    "text": "hi my name is Randall hunt I'm a",
    "start": "0",
    "end": "1589"
  },
  {
    "text": "software engineer and developer",
    "start": "1589",
    "end": "2520"
  },
  {
    "text": "evangelist here dammuz on web services",
    "start": "2520",
    "end": "4200"
  },
  {
    "text": "and I'm here today with Rahul Han the",
    "start": "4200",
    "end": "6000"
  },
  {
    "text": "master of all things no sequel thanks",
    "start": "6000",
    "end": "8280"
  },
  {
    "text": "Randall I'm really glad to be here",
    "start": "8280",
    "end": "9840"
  },
  {
    "text": "thanks for coming so I wanted to let our",
    "start": "9840",
    "end": "12960"
  },
  {
    "text": "audience kind of know what exactly is",
    "start": "12960",
    "end": "15389"
  },
  {
    "text": "the difference between a relational",
    "start": "15389",
    "end": "17279"
  },
  {
    "text": "database and a non no sequel database",
    "start": "17279",
    "end": "20279"
  },
  {
    "start": "20000",
    "end": "60000"
  },
  {
    "text": "sure well and it's actually a",
    "start": "20279",
    "end": "22410"
  },
  {
    "text": "fundamental difference because we've had",
    "start": "22410",
    "end": "24210"
  },
  {
    "text": "for many years we've used the relational",
    "start": "24210",
    "end": "26039"
  },
  {
    "text": "technology and we're very familiar with",
    "start": "26039",
    "end": "27510"
  },
  {
    "text": "it and so a lot of developers out there",
    "start": "27510",
    "end": "28980"
  },
  {
    "text": "today or say why do I even want to look",
    "start": "28980",
    "end": "30240"
  },
  {
    "text": "at no SQL technology and the reality is",
    "start": "30240",
    "end": "32610"
  },
  {
    "text": "this we've kind of outgrown the",
    "start": "32610",
    "end": "33809"
  },
  {
    "text": "relational database it doesn't",
    "start": "33809",
    "end": "34920"
  },
  {
    "text": "necessarily scale the way we need to",
    "start": "34920",
    "end": "36149"
  },
  {
    "text": "scale today we're processing a lot more",
    "start": "36149",
    "end": "37860"
  },
  {
    "text": "data than we did 30 or 40 years ago and",
    "start": "37860",
    "end": "40500"
  },
  {
    "text": "so the requirements of the application",
    "start": "40500",
    "end": "41940"
  },
  {
    "text": "of the modern application are",
    "start": "41940",
    "end": "43320"
  },
  {
    "text": "fundamentally different so the way we",
    "start": "43320",
    "end": "44579"
  },
  {
    "text": "actually have to design is different so",
    "start": "44579",
    "end": "46140"
  },
  {
    "text": "we've built a new technology to do that",
    "start": "46140",
    "end": "47789"
  },
  {
    "text": "so when you talk about what we put in a",
    "start": "47789",
    "end": "51000"
  },
  {
    "text": "database what are the kinds of stuff",
    "start": "51000",
    "end": "52590"
  },
  {
    "text": "what are the kinds of things that we",
    "start": "52590",
    "end": "53879"
  },
  {
    "text": "would put in a in a traditional",
    "start": "53879",
    "end": "55829"
  },
  {
    "text": "relational database like my sequel or",
    "start": "55829",
    "end": "57539"
  },
  {
    "text": "Postgres versus the kinds of things that",
    "start": "57539",
    "end": "59730"
  },
  {
    "text": "we would put in one of these no sequel",
    "start": "59730",
    "end": "61469"
  },
  {
    "start": "60000",
    "end": "193000"
  },
  {
    "text": "data series so it's the same data right",
    "start": "61469",
    "end": "63210"
  },
  {
    "text": "we all use same data and all of our",
    "start": "63210",
    "end": "64500"
  },
  {
    "text": "applications that's how we actually work",
    "start": "64500",
    "end": "66420"
  },
  {
    "text": "with the data so probably a good idea if",
    "start": "66420",
    "end": "68340"
  },
  {
    "text": "you look at the chart here that we have",
    "start": "68340",
    "end": "69540"
  },
  {
    "text": "up in a traditional environment we kind",
    "start": "69540",
    "end": "71670"
  },
  {
    "text": "of design things relationally right we",
    "start": "71670",
    "end": "73260"
  },
  {
    "text": "use an orthonormal form this is a third",
    "start": "73260",
    "end": "75240"
  },
  {
    "text": "normal form that we can see up here it's",
    "start": "75240",
    "end": "76740"
  },
  {
    "text": "a product catalog and that's just a",
    "start": "76740",
    "end": "78299"
  },
  {
    "text": "common computer client computer people",
    "start": "78299",
    "end": "81570"
  },
  {
    "text": "who understand data basically know what",
    "start": "81570",
    "end": "82890"
  },
  {
    "text": "I'm talking about and there's kind of",
    "start": "82890",
    "end": "84270"
  },
  {
    "text": "these relationships between these tables",
    "start": "84270",
    "end": "85799"
  },
  {
    "text": "we have products table here we have",
    "start": "85799",
    "end": "87210"
  },
  {
    "text": "books and albums and tracks and/or",
    "start": "87210",
    "end": "88950"
  },
  {
    "text": "videos and and these things all have",
    "start": "88950",
    "end": "90630"
  },
  {
    "text": "relationships between each other",
    "start": "90630",
    "end": "91860"
  },
  {
    "text": "one-to-many many-to-many relationships",
    "start": "91860",
    "end": "93720"
  },
  {
    "text": "and we'll write some kind of query to go",
    "start": "93720",
    "end": "95759"
  },
  {
    "text": "ahead and reassemble the data the way we",
    "start": "95759",
    "end": "97680"
  },
  {
    "text": "need to look at it to enjoy out do a",
    "start": "97680",
    "end": "99180"
  },
  {
    "text": "join exactly and so if you can imagine",
    "start": "99180",
    "end": "101430"
  },
  {
    "text": "from just looking at this schema if I",
    "start": "101430",
    "end": "102600"
  },
  {
    "text": "wanted to write queries to get all of my",
    "start": "102600",
    "end": "104280"
  },
  {
    "text": "data there's three different queries of",
    "start": "104280",
    "end": "105689"
  },
  {
    "text": "varying levels of complexity that we're",
    "start": "105689",
    "end": "108210"
  },
  {
    "text": "gonna need if I went with a denormalized",
    "start": "108210",
    "end": "110369"
  },
  {
    "text": "approach what I really do is taking that",
    "start": "110369",
    "end": "111869"
  },
  {
    "text": "hierarchy give data and moving it into",
    "start": "111869",
    "end": "113640"
  },
  {
    "text": "documents each one of my products is now",
    "start": "113640",
    "end": "115710"
  },
  {
    "text": "represented by a document and as a",
    "start": "115710",
    "end": "117479"
  },
  {
    "text": "simple query select star from products",
    "start": "117479",
    "end": "119219"
  },
  {
    "text": "gets me everything so that's the idea we",
    "start": "119219",
    "end": "121439"
  },
  {
    "text": "want to make things simple with no SQL",
    "start": "121439",
    "end": "123329"
  },
  {
    "text": "we want to make the query patterns and",
    "start": "123329",
    "end": "124740"
  },
  {
    "text": "access patterns easy for the customer",
    "start": "124740",
    "end": "126659"
  },
  {
    "text": "and what kind of things does that gain",
    "start": "126659",
    "end": "128489"
  },
  {
    "text": "us that gains us a lot of efficiency and",
    "start": "128489",
    "end": "130739"
  },
  {
    "text": "cost you know the cost-effectiveness of",
    "start": "130739",
    "end": "132810"
  },
  {
    "text": "the solution right",
    "start": "132810",
    "end": "133590"
  },
  {
    "text": "relational databases today are very",
    "start": "133590",
    "end": "134940"
  },
  {
    "text": "expensive to scale we get beyond a",
    "start": "134940",
    "end": "136860"
  },
  {
    "text": "certain size I have to get a bigger box",
    "start": "136860",
    "end": "138390"
  },
  {
    "text": "the only way I can scale up is to get",
    "start": "138390",
    "end": "140190"
  },
  {
    "text": "bigger boxes and it becomes a nightmare",
    "start": "140190",
    "end": "142379"
  },
  {
    "text": "to try and manage the data and extremely",
    "start": "142379",
    "end": "144390"
  },
  {
    "text": "expensive with no SQL database we've got",
    "start": "144390",
    "end": "146730"
  },
  {
    "text": "a much more cost-effective solution",
    "start": "146730",
    "end": "148050"
  },
  {
    "text": "because we can scale horizontally across",
    "start": "148050",
    "end": "149819"
  },
  {
    "text": "commodity boxes and we can use a",
    "start": "149819",
    "end": "152190"
  },
  {
    "text": "denormalized data model to be able to",
    "start": "152190",
    "end": "154080"
  },
  {
    "text": "provide simple access patterns for our",
    "start": "154080",
    "end": "156239"
  },
  {
    "text": "customers so in Amazon we have Amazon",
    "start": "156239",
    "end": "158370"
  },
  {
    "text": "DynamoDB which is a really really cool",
    "start": "158370",
    "end": "160620"
  },
  {
    "text": "service could you tell us a little more",
    "start": "160620",
    "end": "161700"
  },
  {
    "text": "about that fully managed no SQL database",
    "start": "161700",
    "end": "163530"
  },
  {
    "text": "and one of the things about managing",
    "start": "163530",
    "end": "164549"
  },
  {
    "text": "distributed databases is that they cost",
    "start": "164549",
    "end": "166530"
  },
  {
    "text": "a lot from an Operations perspective so",
    "start": "166530",
    "end": "168420"
  },
  {
    "text": "this is something that we can bring to",
    "start": "168420",
    "end": "169650"
  },
  {
    "text": "the table manage that infrastructure for",
    "start": "169650",
    "end": "171360"
  },
  {
    "text": "you as a customer you don't have to",
    "start": "171360",
    "end": "172860"
  },
  {
    "text": "that's probably the biggest advantage",
    "start": "172860",
    "end": "174420"
  },
  {
    "text": "that we get from dynamo we cool so",
    "start": "174420",
    "end": "177120"
  },
  {
    "text": "customers want to get started with no",
    "start": "177120",
    "end": "178590"
  },
  {
    "text": "sequel on AWS where do they go they go",
    "start": "178590",
    "end": "180780"
  },
  {
    "text": "to aws.amazon.com slash no SQL there's a",
    "start": "180780",
    "end": "184260"
  },
  {
    "text": "full intro there it talks all about it",
    "start": "184260",
    "end": "185910"
  },
  {
    "text": "and we have best practices for DynamoDB",
    "start": "185910",
    "end": "187739"
  },
  {
    "text": "they'll get you started on design",
    "start": "187739",
    "end": "188970"
  },
  {
    "text": "patterns and how to actually implement",
    "start": "188970",
    "end": "190200"
  },
  {
    "text": "we cool all right",
    "start": "190200",
    "end": "191760"
  },
  {
    "text": "thanks thanks",
    "start": "191760",
    "end": "194629"
  }
]