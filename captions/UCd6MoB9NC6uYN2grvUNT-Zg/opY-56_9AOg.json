[
  {
    "text": "In this video, you’ll learn about data consumer \noptions for Amazon Kinesis Data Streams.",
    "start": "71",
    "end": "4659"
  },
  {
    "text": "Amazon Kinesis services enable \norganizations to easily collect, process,",
    "start": "5768",
    "end": "10090"
  },
  {
    "text": "and analyze data streams in real time.",
    "start": "10090",
    "end": "12365"
  },
  {
    "text": "Kinesis Data Streams can be used to \ncollect and store data streams from",
    "start": "13000",
    "end": "16290"
  },
  {
    "text": "data producers for analytics.",
    "start": "16290",
    "end": "18225"
  },
  {
    "text": "Data consumers such as Kinesis Data \nFirehose and Kinesis Data Analytics",
    "start": "18872",
    "end": "23144"
  },
  {
    "text": "can then retrieve and \nprocess the data as needed.",
    "start": "23144",
    "end": "25490"
  },
  {
    "text": "A consumer is an application that \nprocesses all data from a Kinesis stream.",
    "start": "26749",
    "end": "30611"
  },
  {
    "text": "By default, shards in a stream provide \n2 MB/sec of read throughput per shard.",
    "start": "31529",
    "end": "36454"
  },
  {
    "text": "This throughput gets shared across all the \nconsumers that are reading from a given shard.",
    "start": "36896",
    "end": "40792"
  },
  {
    "text": "When a consumer uses enhanced fan-out, \nit gets its own 2 MB/sec allotment of",
    "start": "41709",
    "end": "46470"
  },
  {
    "text": "read throughput, allowing multiple consumers \nto read data from the same stream in parallel,",
    "start": "46470",
    "end": "51036"
  },
  {
    "text": "without contending for read \nthroughput with other consumers.",
    "start": "51036",
    "end": "53638"
  },
  {
    "text": "With enhanced fan-out, you can \nhave latencies as low as 70ms.",
    "start": "54242",
    "end": "57890"
  },
  {
    "text": "Amazon Kinesis Data Streams provides \nthree ways to build data consumers.",
    "start": "58822",
    "end": "62685"
  },
  {
    "text": "Amazon service integrations enable \ncustomers to build streaming-data use",
    "start": "63440",
    "end": "66943"
  },
  {
    "text": "cases across a variety of data consumer types.",
    "start": "66943",
    "end": "69583"
  },
  {
    "text": "Third party applications, such as \nApache Flink, have native integrations",
    "start": "70230",
    "end": "73768"
  },
  {
    "text": "for consuming data from \nKinesis Data Streams.",
    "start": "73768",
    "end": "76077"
  },
  {
    "text": "AWS toolkits and libraries allow \ncustomers to build custom data consumers.",
    "start": "76860",
    "end": "81390"
  },
  {
    "text": "Let’s look at an example with AWS \nservice integrations as consumers.",
    "start": "82599",
    "end": "86328"
  },
  {
    "text": "One of our customers uses Amazon \nKinesis Data Streams to do near real-time",
    "start": "86769",
    "end": "90436"
  },
  {
    "text": "streaming of sports data feeds\n to a front-end application.",
    "start": "90436",
    "end": "93432"
  },
  {
    "text": "This customer uses AWS Lambda to read \nfrom the data stream because it natively",
    "start": "94086",
    "end": "98012"
  },
  {
    "text": "integrates with Kinesis Data Streams, \nabstracting the polling, checkpointing,",
    "start": "98012",
    "end": "101912"
  },
  {
    "text": "and error handling complexities, which allows \nthem to focus on the data processing logic.",
    "start": "101912",
    "end": "106298"
  },
  {
    "text": "Using this solution, they allow sports \ntrading analysts to make decisions for",
    "start": "106910",
    "end": "110556"
  },
  {
    "text": "online bookmakers based on \nthe latest sports data feeds.",
    "start": "110556",
    "end": "113495"
  },
  {
    "text": "This example highlights the ease and \npotential power of Amazon service integrations.",
    "start": "114178",
    "end": "118193"
  },
  {
    "text": "For non-AWS data consumer applications, \nsuch as Databricks, check if there's an",
    "start": "119433",
    "end": "123498"
  },
  {
    "text": "existing integration available to read \ndata from Kinesis Data Streams.",
    "start": "123498",
    "end": "127000"
  },
  {
    "text": "If not, you can build custom data consumers.",
    "start": "127270",
    "end": "129466"
  },
  {
    "text": "The recommended method for developing \ncustom Kinesis Data Streams consumers",
    "start": "130178",
    "end": "133472"
  },
  {
    "text": "with shared throughput is to use \nthe Kinesis Client Library (KCL).",
    "start": "133472",
    "end": "137265"
  },
  {
    "text": "This library helps you consume and process \ndata from a Kinesis data stream by taking",
    "start": "137941",
    "end": "141812"
  },
  {
    "text": "care of many of the complex tasks \nassociated with distributed computing.",
    "start": "141812",
    "end": "145206"
  },
  {
    "text": "You can also use API operations to \nbuild a consumer that uses enhanced",
    "start": "145860",
    "end": "149154"
  },
  {
    "text": "fan-out in Kinesis Data Streams.",
    "start": "149154",
    "end": "151050"
  },
  {
    "text": "The two APIs to focus on are \nRegisterStreamConsumer, and SubscribeToShard.",
    "start": "151391",
    "end": "155821"
  },
  {
    "text": "You can register up to 20 consumers \nper stream to use enhanced fan-out.",
    "start": "156376",
    "end": "160112"
  },
  {
    "text": "You can learn more about this topic in \nthe description and links for this video.",
    "start": "161492",
    "end": "164666"
  },
  {
    "text": "Thanks for watching. Now it’s your turn to try.",
    "start": "164951",
    "end": "166999"
  }
]