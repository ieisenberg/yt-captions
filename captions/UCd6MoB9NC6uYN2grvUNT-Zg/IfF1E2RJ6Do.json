[
  {
    "start": "0",
    "end": "18000"
  },
  {
    "text": "hello everybody my name is norm Johansson with me here Steve Roberts we are both senior software engineers at",
    "start": "30",
    "end": "6899"
  },
  {
    "text": "AWS where we focus on all the ATS developer tools so if you're writing dotnet applications on abs you are most",
    "start": "6899",
    "end": "13650"
  },
  {
    "text": "likely using some of the tools that Steve and I work on thank you very much so today what we're gonna cover is our",
    "start": "13650",
    "end": "21869"
  },
  {
    "start": "18000",
    "end": "63000"
  },
  {
    "text": "view what is the current state of dotnet and dotnet core we're gonna bring to",
    "start": "21869",
    "end": "26910"
  },
  {
    "text": "talk about some of the developer tools that Steve and I work on and then we're",
    "start": "26910",
    "end": "31980"
  },
  {
    "text": "gonna move into a book hauling is our dotnet core tooling trilogy because everybody loves a trilogy this is the",
    "start": "31980",
    "end": "38640"
  },
  {
    "text": "this tooling that we've had to make done a core work really easy for some of the services out there and the first time I",
    "start": "38640",
    "end": "45600"
  },
  {
    "text": "take a look at is done at web applications with elastic beanstalk we're gonna talk about service that in",
    "start": "45600",
    "end": "51719"
  },
  {
    "text": "the core nativist lambda and new today we just launched a container based net",
    "start": "51719",
    "end": "57390"
  },
  {
    "text": "core application support with Amazon Elastic container services so we're gonna go into that so if you've been",
    "start": "57390",
    "end": "65250"
  },
  {
    "start": "63000",
    "end": "199000"
  },
  {
    "text": "following our blog and our Twitter handle you probably seen the last year where we have been talking a lot about",
    "start": "65250",
    "end": "71010"
  },
  {
    "text": "dotnet core and the reason we've been talking about that down of course so much is we really believe that Donna",
    "start": "71010",
    "end": "76409"
  },
  {
    "text": "core is going to be the future for done a development in the cloud and in servers and the reason we see that is if",
    "start": "76409",
    "end": "83490"
  },
  {
    "text": "you look in the past year and a half since done of course Benji a it is expanded very quickly we've had three",
    "start": "83490",
    "end": "90420"
  },
  {
    "text": "large releases we had the 101 one and the tour released a couple of months ago and that toooo release really helped",
    "start": "90420",
    "end": "97350"
  },
  {
    "text": "mature the platform it has a lot more api's it solves a lot of the usability issues that were done at Carwin oh and",
    "start": "97350",
    "end": "103320"
  },
  {
    "text": "it is growing fast and they can do that because the way Dutton at core has been",
    "start": "103320",
    "end": "108420"
  },
  {
    "text": "designed it allows you to have that side-by-side install so that they can have multiple versions on the",
    "start": "108420",
    "end": "113909"
  },
  {
    "text": "applications are on the machines and not worry that this is gonna break all of",
    "start": "113909",
    "end": "119399"
  },
  {
    "text": "the done applications on the box unlike dotnet framework you always just have that one version on the machine and",
    "start": "119399",
    "end": "125520"
  },
  {
    "text": "it infects every done application running on machine so the doesn''t team has a hard time moving that forward",
    "start": "125520",
    "end": "131099"
  },
  {
    "text": "without breaking in existing you and that my core you had that side-by-side install and we could",
    "start": "131099",
    "end": "137280"
  },
  {
    "text": "develop that net core applications you're always targeting a particular major version so it gives them more",
    "start": "137280",
    "end": "142440"
  },
  {
    "text": "flexibility in involving the platform then the core so has the cross-platform",
    "start": "142440",
    "end": "147510"
  },
  {
    "text": "support which we've been taking advantage here ad bus with our lambda support and another example of how it's",
    "start": "147510",
    "end": "154290"
  },
  {
    "text": "the future is the a spec or in any framework or those frameworks have been getting a lot of improvements a lot of new features of the past year if you",
    "start": "154290",
    "end": "161220"
  },
  {
    "text": "look at their inverses of the parallels of that a spinet MVC and ending framework those have not had any",
    "start": "161220",
    "end": "167220"
  },
  {
    "text": "significant updates since early 2015 so over two years I'm not had any updates to it the ec2 windows team is",
    "start": "167220",
    "end": "174470"
  },
  {
    "text": "continually working on getting eight windows working great on a to us and the a sequel server does that even though",
    "start": "174470",
    "end": "181560"
  },
  {
    "text": "you're using Technic or that doesn't mean you're not using Windows and Donna Corwin does work really well together sandy Carter has a session tomorrow at",
    "start": "181560",
    "end": "189000"
  },
  {
    "text": "the MGM set right Steve every he's gonna give the State of the Union for enterprise workloads and she's gonna",
    "start": "189000",
    "end": "194519"
  },
  {
    "text": "talk a lot about of the new features that ec2 windows team has been working on so we crammed our talk with too much",
    "start": "194519",
    "end": "201930"
  },
  {
    "text": "stuff so we're gonna kind of skip through a lot of this top in this slide here I just really want to talk about is the last two bullets here the ADA's",
    "start": "201930",
    "end": "209100"
  },
  {
    "text": "tools for Microsoft Visual Studio Team Services this is a new tool that we launched this summer was it August August so this allows you if you're",
    "start": "209100",
    "end": "217290"
  },
  {
    "text": "already using VSDs or TFS to be able to use our tasks that we have developed to",
    "start": "217290",
    "end": "222660"
  },
  {
    "text": "be able to use your same build system but push your work to AWS Steve and I have another session on that tomorrow",
    "start": "222660",
    "end": "228630"
  },
  {
    "text": "where we're gonna dive deep in how that works so if you are VSDs or TFS user I highly recommend checking out that",
    "start": "228630",
    "end": "234299"
  },
  {
    "text": "session and new today we just push it up just a couple hours ago actually is the",
    "start": "234299",
    "end": "240000"
  },
  {
    "text": "extensions for the.net CLI now what this",
    "start": "240000",
    "end": "245010"
  },
  {
    "start": "243000",
    "end": "291000"
  },
  {
    "text": "is actually came out last year as part of our lambda release when we released lambda last year we had all the visual",
    "start": "245010",
    "end": "251700"
  },
  {
    "text": "studio plug-in work but we know this is dotnet core and there's a lot of users are gonna use down in core outside the",
    "start": "251700",
    "end": "257010"
  },
  {
    "text": "visual studios on Macs and Linux also using Visual Studio code or they want to also be able to script and automate",
    "start": "257010",
    "end": "263159"
  },
  {
    "text": "their deployment so we wanted to make sure all of that code that we put in visual studio to help deployment you",
    "start": "263159",
    "end": "268560"
  },
  {
    "text": "could easily use outside of Visual Studio so we put it in a command line extension so that you can use it as part",
    "start": "268560",
    "end": "274950"
  },
  {
    "text": "of the.net CLI so you could go just from the visual studio you can do deployment and then you can transition to the",
    "start": "274950",
    "end": "280860"
  },
  {
    "text": "command line and you could say dotnet lambda deploy function and so we just",
    "start": "280860",
    "end": "286229"
  },
  {
    "text": "released a whole repository on this expanding our support so this is our",
    "start": "286229",
    "end": "292140"
  },
  {
    "start": "291000",
    "end": "373000"
  },
  {
    "text": "github repository right here you scroll down here I'm also whether we this package we just released is being built",
    "start": "292140",
    "end": "299250"
  },
  {
    "text": "with our code build service which code bill just added a badge support so we added that on there and if we scroll",
    "start": "299250",
    "end": "305039"
  },
  {
    "text": "down to our supported services we've expanded that lambda stood now also include elastic Beanstalk and ECS",
    "start": "305039",
    "end": "312599"
  },
  {
    "text": "so that's gonna be our trilogy we're gonna be talking about today is those three services so I highly recommend checking out this game repository if you",
    "start": "312599",
    "end": "319680"
  },
  {
    "text": "have any feedback or suggestions to how we can improve it and we're gonna talk a lot more about how that works today all",
    "start": "319680",
    "end": "327539"
  },
  {
    "text": "right now on to our dotnet Court ruling trilogy and first up is Beanstalk now",
    "start": "327539",
    "end": "333030"
  },
  {
    "text": "beans like we have had support for beings like for quite a long time I think we added that in 2012 right so and",
    "start": "333030",
    "end": "340860"
  },
  {
    "text": "we've demoed this many times here at reading but in fact so we're not gonna really dive too much into it we just want to show a little bit about the new",
    "start": "340860",
    "end": "347729"
  },
  {
    "text": "things we added and how you can use that in our core applications in there and now being sly gives us that one of the easiest ways to get started with an ABS",
    "start": "347729",
    "end": "355020"
  },
  {
    "text": "because you basically just give it your package bundle and it takes care of setting up your ec2 instances auto-scaling and load balancers and it",
    "start": "355020",
    "end": "362849"
  },
  {
    "text": "also has dotnet core and dotnet framework support honor so we have on dotnet core 101 one and two oh and we",
    "start": "362849",
    "end": "368820"
  },
  {
    "text": "also have the donít framework as well towstee let's do a demo",
    "start": "368820",
    "end": "374570"
  },
  {
    "start": "373000",
    "end": "791000"
  },
  {
    "text": "my mic not on oh there we go I think can you hear me now",
    "start": "382240",
    "end": "388270"
  },
  {
    "text": "Roddy's the mic",
    "start": "388330",
    "end": "391810"
  },
  {
    "text": "a shout all right can you hear me at the back now awesome",
    "start": "393830",
    "end": "400850"
  },
  {
    "text": "okay right I'll try and show so which is it's all the toolkit for visual studio if you go to a view menu you get a gist",
    "start": "400850",
    "end": "407540"
  },
  {
    "text": "Explorer this window here with the services in I've got an application here a very simple application for Beanstalk",
    "start": "407540",
    "end": "413780"
  },
  {
    "text": "that uses there we go I was in Pali I bet you already deployed it so just gonna open up the environment",
    "start": "413780",
    "end": "419950"
  },
  {
    "text": "and we're gonna take a quick look at what this this demo application does it's very very simple and because it's",
    "start": "419950",
    "end": "426770"
  },
  {
    "text": "using Pali it's just gonna read a phrase back to us so hello I should have written can you hear me now we've had",
    "start": "426770",
    "end": "432170"
  },
  {
    "text": "all week to practice something we write",
    "start": "432170",
    "end": "439250"
  },
  {
    "text": "very simple application nothing earth-shattering but it does contain some code changes that we wanted to bring to your attention so starting with",
    "start": "439250",
    "end": "446660"
  },
  {
    "text": "the startup file you'll notice that we're now using dependency injection so",
    "start": "446660",
    "end": "454100"
  },
  {
    "text": "if you've been using ASP don't call a lot you know this is a really heavily used pattern inside ASP not core so we",
    "start": "454100",
    "end": "459350"
  },
  {
    "text": "made it really easy to use dependency injection with the dotnet the age of our net SDK service clients you get this",
    "start": "459350",
    "end": "465440"
  },
  {
    "text": "support by adding a new you get dependency and I apologize for the font size on the chloral window",
    "start": "465440",
    "end": "471650"
  },
  {
    "text": "AWS SDK dot extensions dotnet core dot setup because norm cannot get enough",
    "start": "471650",
    "end": "477530"
  },
  {
    "text": "docs in file names apparently ring is their hardest job so once you add that extension library you get the ability to",
    "start": "477530",
    "end": "483860"
  },
  {
    "text": "now add an extension method add a bit of service it takes the interface type of the client that you want in this case",
    "start": "483860",
    "end": "489830"
  },
  {
    "text": "we're using I amaz and poly and then if you look at the controller for this application it remotely receives and I",
    "start": "489830",
    "end": "496070"
  },
  {
    "text": "am as in poly client okay the other change that we want to bring to",
    "start": "496070",
    "end": "501170"
  },
  {
    "text": "attention remember oh yeah actually while I'm here I'm gonna make a change",
    "start": "501170",
    "end": "506360"
  },
  {
    "text": "to this I'm going to change the voice to do a redeploy let's change it to a me",
    "start": "506360",
    "end": "512469"
  },
  {
    "text": "save everything okay so the other change that we want to print your attention no",
    "start": "512470",
    "end": "518719"
  },
  {
    "text": "don't move thank you is configuration so I noticed norm that",
    "start": "518720",
    "end": "524090"
  },
  {
    "text": "in the demo you've commented out this line add default AWS options yeah I mean",
    "start": "524090",
    "end": "529190"
  },
  {
    "text": "so when we first released this library which was part of data core 100 convictions was just a standalone thing",
    "start": "529190",
    "end": "536480"
  },
  {
    "text": "it often you put on the startup class there was no global way to access it and so to get the configuration and the",
    "start": "536480",
    "end": "542450"
  },
  {
    "text": "dependency injection system we always had that line that said basically let's copy the ad bus configuration from your",
    "start": "542450",
    "end": "548840"
  },
  {
    "text": "configuration system and to the dependency injection so we knew how to create your service clients now the dotnet core team realized when it came",
    "start": "548840",
    "end": "555830"
  },
  {
    "text": "to - oh that everybody needs configuration so they made the project system simpler in the fact that by",
    "start": "555830",
    "end": "562010"
  },
  {
    "text": "default they add configuration into the list of services in the dependency injection system so now you no longer",
    "start": "562010",
    "end": "570110"
  },
  {
    "text": "need to call that line if you've been using this library because what we're gonna do in the code is we look to see did you pass us any options if you",
    "start": "570110",
    "end": "577070"
  },
  {
    "text": "didn't is there a configuration added to the list of services and if so pulled the information out of there so it",
    "start": "577070",
    "end": "583010"
  },
  {
    "text": "simplifies that up for you so here's our app settings file and you see in development mode we have local",
    "start": "583010",
    "end": "589550"
  },
  {
    "text": "credentials local regions sets so when we're debugging locally we get the edge credentials to the app but when we",
    "start": "589550",
    "end": "594830"
  },
  {
    "text": "deploy that drops away and it's going to get credentials from the instance and the region so that's the changes from",
    "start": "594830",
    "end": "601010"
  },
  {
    "text": "the coding side dependency injection and smoother integration with the configuration system let's take a look",
    "start": "601010",
    "end": "606050"
  },
  {
    "text": "at deployment so if you've seen us do demos on the toolkit before you'll know that we can just right-click on the project select publish to elastic",
    "start": "606050",
    "end": "612080"
  },
  {
    "text": "Beanstalk that launches the wizard I'm going to get the right region here West",
    "start": "612080",
    "end": "617140"
  },
  {
    "text": "I'm gonna stick to redeploy to Beanstalk now it's gonna skip ahead to the end of",
    "start": "617140",
    "end": "622460"
  },
  {
    "text": "the wizard your view changes here save settings to AWS Beanstalk tools defaults",
    "start": "622460",
    "end": "629480"
  },
  {
    "text": "JSON and configure the project for command line deployment so what this does is when the wizard runs it will",
    "start": "629480",
    "end": "635660"
  },
  {
    "text": "update a file with that name with the settings that you select in the wizard and you can use that with the new dotnet CLI extensions that we published today",
    "start": "635660",
    "end": "641960"
  },
  {
    "text": "to publish on the command line or your CI CD systems so I'm actually not going to deploy from the wizard I'm gonna jump",
    "start": "641960",
    "end": "647780"
  },
  {
    "text": "away to a command line and here we are inside the project folder and you can see that I already have the Beanstalk",
    "start": "647780",
    "end": "653990"
  },
  {
    "text": "defaults file there because we put did earlier on so let's see what we can do from the command line so dotnet EB is",
    "start": "653990",
    "end": "659660"
  },
  {
    "text": "the tag - - help and you see we got",
    "start": "659660",
    "end": "665300"
  },
  {
    "text": "three commands deploy environment list environment delete environment let's take a look at the options for deploy",
    "start": "665300",
    "end": "671000"
  },
  {
    "text": "environment let's hang in there and you",
    "start": "671000",
    "end": "678740"
  },
  {
    "text": "see this would look familiar to what you've seen in the wizard in years gone by in fact you can interrupt between the wizard and the CLI tool they will work",
    "start": "678740",
    "end": "685160"
  },
  {
    "text": "in sync so that being said as we have the file let's just fire off a deployment and we should update the",
    "start": "685160",
    "end": "691580"
  },
  {
    "text": "voice - aiming and so this command was gonna run dotnet publish from the CLI",
    "start": "691580",
    "end": "697820"
  },
  {
    "text": "packages up it generates the manifest file that we use to deploy it on to Beanstalk and then it's going to tell",
    "start": "697820",
    "end": "704270"
  },
  {
    "text": "being stuck hey V you have a new version and go deploy this on the environment while that deploys let's go and take a",
    "start": "704270",
    "end": "709490"
  },
  {
    "text": "quick look at the file inside Visual Studio so here is the defaults file no I don't want to move files",
    "start": "709490",
    "end": "715070"
  },
  {
    "text": "there's the defaults file you can see the settings are in there and so all those get set by the wizard so when we",
    "start": "715070",
    "end": "722000"
  },
  {
    "text": "had that checkbox set in there they got saved in there so you can go back and forth between the command line anders to",
    "start": "722000",
    "end": "727580"
  },
  {
    "text": "do see the new versions deploying out for the instance some how's it going at the command line now we got the tool",
    "start": "727580",
    "end": "734990"
  },
  {
    "text": "that done a TB extension because of the other thing that check box does is it actually edits the project the the",
    "start": "734990",
    "end": "740360"
  },
  {
    "text": "project file in there so if we open up the project file well-remembered sir mm-hmm okay so we edit the project and",
    "start": "740360",
    "end": "748670"
  },
  {
    "text": "you'll see here this new dotnet CLI tool reference so that's what the wizard did by adding that check box it installed",
    "start": "748670",
    "end": "755210"
  },
  {
    "text": "that dotnet tool in the project file and so now when you do a dotnet restore which and done that core - it doesn't",
    "start": "755210",
    "end": "762230"
  },
  {
    "text": "restore as part of bills it's gonna make that EB command automatically available for you on the command line so there's",
    "start": "762230",
    "end": "767600"
  },
  {
    "text": "nothing you need to stall install you just set up that new get reference in there and this is a tool reference so",
    "start": "767600",
    "end": "772610"
  },
  {
    "text": "it's not something that's included as part of your package bundle okay environment update completed let's go",
    "start": "772610",
    "end": "779570"
  },
  {
    "text": "and this time from stage there's a me",
    "start": "779570",
    "end": "786200"
  },
  {
    "text": "okay so deployments from the command line really simple okay okay so we took a look at some of",
    "start": "786200",
    "end": "794600"
  },
  {
    "start": "791000",
    "end": "840000"
  },
  {
    "text": "the ways you can integrate database services in your application using the extension course setup package and using",
    "start": "794600",
    "end": "800570"
  },
  {
    "text": "the dependency injection and we have that new done SEL extension for dental applications so that you can easily go",
    "start": "800570",
    "end": "806150"
  },
  {
    "text": "from the new studio and walk through how you deploy that but then once you want to start doing things on the command",
    "start": "806150",
    "end": "811280"
  },
  {
    "text": "line through scripts or you're doing things in outside bit of studio you can reuse that okay",
    "start": "811280",
    "end": "820400"
  },
  {
    "text": "service dotnet core use lemon so this has definitely been our hot topic this past year when we lease dotnet OneNote",
    "start": "820400",
    "end": "826610"
  },
  {
    "text": "we've been and we have been working very hard for two and dynacord tool is coming very soon I know everybody is very",
    "start": "826610",
    "end": "832670"
  },
  {
    "text": "anxious we are very anxious for it to it is getting very close to read the final testing stages for that now what that's",
    "start": "832670",
    "end": "841820"
  },
  {
    "text": "gonna mean is the program level actually stays the same so your existing lambda functions you will be able to run on",
    "start": "841820",
    "end": "847700"
  },
  {
    "text": "there but you will need to update the target framework you're compiling for to be net core up to oh and you might want",
    "start": "847700",
    "end": "853610"
  },
  {
    "text": "to update your dependencies to point to net standard - oh we're also going to",
    "start": "853610",
    "end": "858680"
  },
  {
    "text": "include in the net core - OH lambda runtime is the new Microsoft s expect core all package store so this",
    "start": "858680",
    "end": "866360"
  },
  {
    "text": "was a new optional thing that was added as part of dotnet core - oh where it actually is a cache of a lot of the nuga",
    "start": "866360",
    "end": "872810"
  },
  {
    "text": "packages already on the box in this case it's gonna be all of the nuga packages that you need for in a static",
    "start": "872810",
    "end": "879620"
  },
  {
    "text": "replication or using entity framework and the benefit of that is that if you have an a smoke replication that you're",
    "start": "879620",
    "end": "885530"
  },
  {
    "text": "running on lambda with our bridge library it's and you have that a smile always your dependency when you generate",
    "start": "885530",
    "end": "892280"
  },
  {
    "text": "that package bundle it doesn't include in the a spoon of corn sees because it knows it's already in the deployment",
    "start": "892280",
    "end": "898070"
  },
  {
    "text": "target and is you're gonna get a much smaller bundle to upload to lambda as well as a smaller bundle for lambda to",
    "start": "898070",
    "end": "905120"
  },
  {
    "text": "download to compute and if you haven't seen this before if you go look in your windows deployment folder here's the",
    "start": "905120",
    "end": "913910"
  },
  {
    "text": "dotnet folder under Program Files you'll see this store folder here that was an old folder that was added as part of",
    "start": "913910",
    "end": "919490"
  },
  {
    "text": "that net core - OH into here you see here are all the asp net core libraries okay so that's the",
    "start": "919490",
    "end": "926590"
  },
  {
    "text": "store and so speaking about the x mark for bridge that's the new key package we",
    "start": "926590",
    "end": "932350"
  },
  {
    "text": "release amazon lamb a smoker server that we demoed last year that showed you how you could run at a spinet core web api",
    "start": "932350",
    "end": "938290"
  },
  {
    "text": "on top of lambda and that we marked as preview and we're gonna re target that to be done at core - oh it's in the -",
    "start": "938290",
    "end": "945910"
  },
  {
    "text": "environment so we're gonna have the packaged or we can get the better package bundle size and we're also gonna be able to have razor pages working",
    "start": "945910",
    "end": "952540"
  },
  {
    "text": "there as well which is something that didn't work in the one oh solution that's why we only showed web api and then the core - oh we can do full a",
    "start": "952540",
    "end": "959560"
  },
  {
    "text": "standard core apps through there and so that's the environment we plan to GA that bridge library is on the upcoming",
    "start": "959560",
    "end": "965170"
  },
  {
    "text": "that core - o runtime now one more thing i want to",
    "start": "965170",
    "end": "970660"
  },
  {
    "start": "968000",
    "end": "1033000"
  },
  {
    "text": "talk about is discussing the current pain I know a lot of people are having with our lambda version right now which",
    "start": "970660",
    "end": "975970"
  },
  {
    "text": "is there's the versioning issue and Donna Corwin oh there was a lot of difficulty with what's called this meta",
    "start": "975970",
    "end": "982150"
  },
  {
    "text": "package net-net standard library this library is what all net standard",
    "start": "982150",
    "end": "987790"
  },
  {
    "text": "libraries in the 101 1 world take a dependency on and essentially locks which version that net standard library",
    "start": "987790",
    "end": "994750"
  },
  {
    "text": "can run on down that core and what happened is most packages moved to one",
    "start": "994750",
    "end": "999790"
  },
  {
    "text": "one but our lab environment is still 100 and it when you do down to publish it pulls in those 1:1 dependencies and your",
    "start": "999790",
    "end": "1005760"
  },
  {
    "text": "bundle which will network in lambda now the good news is is with.net core - oh",
    "start": "1005760",
    "end": "1010950"
  },
  {
    "text": "and this is showing the maturity I've done my core - oh they have removed that declaration of depending on a certain",
    "start": "1010950",
    "end": "1017580"
  },
  {
    "text": "version of that standard library which makes it much more sense really because it's in its standard library that",
    "start": "1017580",
    "end": "1022860"
  },
  {
    "text": "shouldn't recarey enough dotnet core and that's what that does now to give a",
    "start": "1022860",
    "end": "1029250"
  },
  {
    "text": "better example I'm talking about if we go look at nougat and let's go take a",
    "start": "1029250",
    "end": "1034410"
  },
  {
    "start": "1033000",
    "end": "1084000"
  },
  {
    "text": "look at one of the nougat packages ok so let's go and take a look at the sequel data client so system data dot sequel",
    "start": "1034410",
    "end": "1040620"
  },
  {
    "text": "client bring up this package and then",
    "start": "1040620",
    "end": "1045930"
  },
  {
    "text": "scroll through to the dependences if I go down to net standard 1.3 you'll see here's the dependency on that net",
    "start": "1045930",
    "end": "1051720"
  },
  {
    "text": "standard library and it's the latest version of sequels from client is depending on net standard library 161 which means it only really",
    "start": "1051720",
    "end": "1058890"
  },
  {
    "text": "works on dotnet core 1 1 so you have to go find a version of this library that",
    "start": "1058890",
    "end": "1063900"
  },
  {
    "text": "has a dependency on Dex 1 6 oh but if you look down at net standard - oh you",
    "start": "1063900",
    "end": "1068940"
  },
  {
    "text": "can see there's no longer that dependency anymore so that makes that that friction that's been happening",
    "start": "1068940",
    "end": "1074730"
  },
  {
    "text": "alone right now with the Dinoco 100 runtime go away so we're very anxious to get to that new dotnet core to runtime",
    "start": "1074730",
    "end": "1082850"
  },
  {
    "text": "and so I know everyone is very anxious and just to prove that we are really close to this not in the core - at",
    "start": "1082850",
    "end": "1088710"
  },
  {
    "start": "1084000",
    "end": "1412000"
  },
  {
    "text": "runtime we're going to show you a demo of actually using dekhna core - oh and a production in point ok so here we are",
    "start": "1088710",
    "end": "1097050"
  },
  {
    "text": "again we back in visual 17 either again another simple project asp.net core but",
    "start": "1097050",
    "end": "1102570"
  },
  {
    "text": "with raise the pages if you look you'll see that there's only a pages folder here and if I open up the index file",
    "start": "1102570",
    "end": "1109040"
  },
  {
    "text": "keep trying to move files you go find an index file you'll see this wouldn't be a",
    "start": "1109040",
    "end": "1114540"
  },
  {
    "text": "reinvent demo from us - unless we had to see Norma's family album from his lady's trip so this is gonna be numerate through a set of photos and then it's",
    "start": "1114540",
    "end": "1120750"
  },
  {
    "text": "going to use amazon recognition to apply labels to those images so very very simple let's go to the startup file and",
    "start": "1120750",
    "end": "1128330"
  },
  {
    "text": "you'll see that again we're using dependent aching advantage of the dependency injection support that we've added but I've noticed not that you've",
    "start": "1128330",
    "end": "1135810"
  },
  {
    "text": "added this add lamda lager it's just when you deploy lambda function it always has a cloud watch stream",
    "start": "1135810",
    "end": "1141930"
  },
  {
    "text": "associated with it to get all your login information and all of the rights you do with the console dot write line or if",
    "start": "1141930",
    "end": "1147630"
  },
  {
    "text": "you grab the logger from the island - context those will go into that stream that cloud watch to extremes we also",
    "start": "1147630",
    "end": "1154080"
  },
  {
    "text": "wanted to make it if you're using a cynic or a planter to get it into that cloud watch wall extreme so we can do",
    "start": "1154080",
    "end": "1160530"
  },
  {
    "text": "that by adding this log provider on there and that means all the log messages that's going through your a",
    "start": "1160530",
    "end": "1166170"
  },
  {
    "text": "spinet core framework will also go into the cloud watch log stream okay so lambda and dotnet core - OH",
    "start": "1166170",
    "end": "1173340"
  },
  {
    "text": "isn't the only thing that you guys have been asking about you been asking about x-ray support for dawn net core so we're",
    "start": "1173340",
    "end": "1178530"
  },
  {
    "text": "also going to be releasing that at the same time and that's again is a very simple task and if you don't know what",
    "start": "1178530",
    "end": "1184890"
  },
  {
    "text": "x-ray is X rating the service that was launched that enables you to instrument your application and be able to trace",
    "start": "1184890",
    "end": "1190450"
  },
  {
    "text": "what's going on and see what services you're calling and how things are running and we released the support for",
    "start": "1190450",
    "end": "1197050"
  },
  {
    "text": "dotnet framework but we hadn't had it done in a core version I mean that is coming soon with with two Oh support so",
    "start": "1197050",
    "end": "1204220"
  },
  {
    "text": "here we have two new packages Aegis x-ray dot records analyst asp net core so this one traces your asp net core",
    "start": "1204220",
    "end": "1211090"
  },
  {
    "text": "flow and install that into my project",
    "start": "1211090",
    "end": "1215820"
  },
  {
    "text": "okay and then similar one for the STK so you can trace the sdk client behavior as",
    "start": "1222960",
    "end": "1228040"
  },
  {
    "text": "well okay so the packages are added so",
    "start": "1228040",
    "end": "1238240"
  },
  {
    "text": "how do we wire this up well the first thing we want is the asp net core tracing and normally have some opinion",
    "start": "1238240",
    "end": "1244630"
  },
  {
    "text": "where this needs to go well you want to add the tracing is part of the pipeline that's handling HTTP requests and that's",
    "start": "1244630",
    "end": "1251050"
  },
  {
    "text": "that defined in your start up method or in your configure method in your startup class and a sniper applications in the",
    "start": "1251050",
    "end": "1257590"
  },
  {
    "text": "order that you declare things in there is how things are handled in the pipeline so you want to have it in there",
    "start": "1257590",
    "end": "1263200"
  },
  {
    "text": "as early as possible so you get as much of the tracing as an x-ray but you do need to be careful to",
    "start": "1263200",
    "end": "1268540"
  },
  {
    "text": "put it after the exception handling because otherwise you won't get the exception howling into x-ray so you",
    "start": "1268540",
    "end": "1275020"
  },
  {
    "text": "really want to do it like right after that in your starter follow this cunningly disguised blank line here should do it right very soon happy use",
    "start": "1275020",
    "end": "1282340"
  },
  {
    "text": "x-ray there's the new extension method which got added and I just need to give it a tag reinvent we'll look at that",
    "start": "1282340",
    "end": "1288610"
  },
  {
    "text": "later on ok so that takes care of the ASP nine core tracing into x-ray but",
    "start": "1288610",
    "end": "1294340"
  },
  {
    "text": "what about the SDK so with the current version of the x-ray client that's out there for dotnet framework basically",
    "start": "1294340",
    "end": "1300100"
  },
  {
    "text": "what you do is every time you instantiate a client you got a register with x-ray and we really wanted to make that a lot easier to do especially in a",
    "start": "1300100",
    "end": "1306700"
  },
  {
    "text": "sent of course case where you're not creating the client you're laying it on the dependency injection system to do",
    "start": "1306700",
    "end": "1312160"
  },
  {
    "text": "that so we basically just wanted to register x-ray globally for all of your service clients so I'm hearing from that",
    "start": "1312160",
    "end": "1318160"
  },
  {
    "text": "we should do it very very early on probably in the constructor right because all the service clients that are",
    "start": "1318160",
    "end": "1324549"
  },
  {
    "text": "created after the registration are the ones that will start sending the tracing information to x-ray okay so I'm gonna",
    "start": "1324549",
    "end": "1330340"
  },
  {
    "text": "add that I'm gonna invoke innate SDK handler here because see of mine you",
    "start": "1330340",
    "end": "1335950"
  },
  {
    "text": "nuga packages register x-ray that's it the SDK tracing is enabled for x-ray that's right so that's all you need to",
    "start": "1335950",
    "end": "1341559"
  },
  {
    "text": "do in the new version that's going to come out is add that line and then you were all your service clients will now start sending tracing information to",
    "start": "1341559",
    "end": "1347980"
  },
  {
    "text": "x-ray for you to get the service mess work so I think we can actually deploy this now now the toolkit has not yet",
    "start": "1347980",
    "end": "1354100"
  },
  {
    "text": "been updated to support the dotnet core 2o deployments so gonna use the command line the sharp-eyed amongst you will",
    "start": "1354100",
    "end": "1359529"
  },
  {
    "text": "have seen we already have the tools defaults file here from running previously so let's just jump away to a",
    "start": "1359529",
    "end": "1364840"
  },
  {
    "text": "command line and same command that we saw last year dotnet lambda deploy",
    "start": "1364840",
    "end": "1372460"
  },
  {
    "text": "function so this is gonna go do the",
    "start": "1372460",
    "end": "1377470"
  },
  {
    "text": "Dutton and published buildings up synodal end and create a new application version now when we demoed this last",
    "start": "1377470",
    "end": "1383289"
  },
  {
    "text": "year we showed you how to do it one second I forgot to save the project I",
    "start": "1383289",
    "end": "1390340"
  },
  {
    "text": "think you lost your references now",
    "start": "1390340",
    "end": "1394080"
  },
  {
    "text": "no no we're good there there okay",
    "start": "1396509",
    "end": "1402700"
  },
  {
    "text": "I knew those in the book doesn't another button I was supposed to press never go",
    "start": "1402700",
    "end": "1413860"
  },
  {
    "start": "1412000",
    "end": "1527000"
  },
  {
    "text": "okay so last year we showed how you would do this and you would do the deploy service command that where you would deploy via CloudFormation which",
    "start": "1413860",
    "end": "1421000"
  },
  {
    "text": "would set up the api gateway now again this is the core tool runtime is not official or released yet so",
    "start": "1421000",
    "end": "1427300"
  },
  {
    "text": "CloudFormation doesn't know anything about the new runtime so we have manually configured our api gateway to",
    "start": "1427300",
    "end": "1432310"
  },
  {
    "text": "point to this land function that we've uploaded before we go take a look at that do we want take a look at the load",
    "start": "1432310",
    "end": "1437620"
  },
  {
    "text": "code size sure okay so over here's the the application fold that we were just",
    "start": "1437620",
    "end": "1442780"
  },
  {
    "text": "in if I drill into the bin folder debug Necker up to oh you'll see that the zip file of the of the deployment is just 1",
    "start": "1442780",
    "end": "1449440"
  },
  {
    "text": "point 9 mag okay and if I drill into the publish folder you'll see that all of those asp net core references are just",
    "start": "1449440",
    "end": "1455650"
  },
  {
    "text": "not there so they're not paying that price because we have that package store already on the land environment so",
    "start": "1455650",
    "end": "1461590"
  },
  {
    "text": "you're gonna have a smaller bundle so now let's go and take a look at the application so here's API gateway on our application",
    "start": "1461590",
    "end": "1469000"
  },
  {
    "text": "so Julian to this and on the resources you'll see we've broken this apart right",
    "start": "1469000",
    "end": "1475360"
  },
  {
    "text": "we're serving the static content the CSS files and the JavaScript files from an s3 bucket it's really not that efficient",
    "start": "1475360",
    "end": "1480880"
  },
  {
    "text": "to serve that from a lambda function but our application is being served through API gateway and if I drill into the",
    "start": "1480880",
    "end": "1488950"
  },
  {
    "text": "integration request here see here's our lambda function your squares 2 etc so I",
    "start": "1488950",
    "end": "1495190"
  },
  {
    "text": "think we should just go and take a look at that application I'm gonna click on stages beta here and I'm gonna grab this",
    "start": "1495190",
    "end": "1503410"
  },
  {
    "text": "URL paste it in here and then put my",
    "start": "1503410",
    "end": "1510100"
  },
  {
    "text": "index page on the end so again what this site is doing it",
    "start": "1510100",
    "end": "1516870"
  },
  {
    "text": "basically sitting s3 lists the buckets calling detect image for each one of those images that it has and figuring",
    "start": "1516870",
    "end": "1522840"
  },
  {
    "text": "out what are all the labels on there and saying what's in the picture okay normals family labels yes humans humans",
    "start": "1522840",
    "end": "1533720"
  },
  {
    "start": "1527000",
    "end": "1621000"
  },
  {
    "text": "refresh this I love how you call your family labels I think it's awesome so yeah we're gonna refresh this a few",
    "start": "1533720",
    "end": "1539340"
  },
  {
    "text": "times just to generate some extra trace information so we can take a look at that spaghetti spaghetti for breakfast that's a winner that's what you're doing",
    "start": "1539340",
    "end": "1545549"
  },
  {
    "text": "your birthday and miserable hobbits in the rain so if you're going to New Zealand you have to go see the Shire",
    "start": "1545549",
    "end": "1551130"
  },
  {
    "text": "that's what you do and we're from Seattle we can take the rain they don't look like an okay so",
    "start": "1551130",
    "end": "1557070"
  },
  {
    "text": "let's generate you some traffic so you will notice that those f5 refreshes we're a little bit sluggish right so",
    "start": "1557070",
    "end": "1563250"
  },
  {
    "text": "let's go and drill in and see what was going on so I'm gonna switch away to x-ray it's computing the ma'am okay so",
    "start": "1563250",
    "end": "1577919"
  },
  {
    "text": "here's me here's our front end and then the lambda function the course",
    "start": "1577919",
    "end": "1583169"
  },
  {
    "text": "recognition the calls to s3 so let's drill into that front end here and view the traces and this last one let's go",
    "start": "1583169",
    "end": "1590400"
  },
  {
    "text": "for the most recent one and you'll notice that here's that tagged re-entered in the code room the reinvent tag when I added x-ray that's what it",
    "start": "1590400",
    "end": "1597240"
  },
  {
    "text": "shows up you're honest here the call to s3 to list objects and then three calls to recognition to do the labels this is",
    "start": "1597240",
    "end": "1602700"
  },
  {
    "text": "going to telling me that my application or your application notice isn't architected that well right you should probably generate the labels on s3",
    "start": "1602700",
    "end": "1608850"
  },
  {
    "text": "ingestion not when you're rendering the page each time okay so let's say you can drill into a lambda function with x-ray okay",
    "start": "1608850",
    "end": "1621929"
  },
  {
    "start": "1621000",
    "end": "1696000"
  },
  {
    "text": "so just a rig in Darnell Korb two lambda square is coming soon I know everyone is anxious we are",
    "start": "1621929",
    "end": "1627000"
  },
  {
    "text": "anxious for it we just have a little bit more work we need to do and we're also having x-ray support coming to oh and",
    "start": "1627000",
    "end": "1632039"
  },
  {
    "text": "that is gonna be only for dotnet core - oh so your existing lambic functions for one oh won't work there are ApS that we",
    "start": "1632039",
    "end": "1638130"
  },
  {
    "text": "needed for x-ray that just weren't available in donek or 102 oh is more mature has more epi s and we were able",
    "start": "1638130",
    "end": "1643380"
  },
  {
    "text": "to get that working there we also had done a lot of work to improve how you set up x-ray for the case to make it easier also we",
    "start": "1643380",
    "end": "1650400"
  },
  {
    "text": "needed a lot of work to support async operations in the x-ray SDK which was",
    "start": "1650400",
    "end": "1657030"
  },
  {
    "text": "critical for net course since most all the operations are async the bridge once again for ruining a some applications on",
    "start": "1657030",
    "end": "1663600"
  },
  {
    "text": "there that's going to be retargeted towards a net core to Oh razor pages has been an often asked",
    "start": "1663600",
    "end": "1669150"
  },
  {
    "text": "feature for that so that you saw is working but again if you're going to do a website through lambda I would highly",
    "start": "1669150",
    "end": "1674880"
  },
  {
    "text": "recommend serving your static content through s3 doing static content through and you could do it but it's just not a",
    "start": "1674880",
    "end": "1681270"
  },
  {
    "text": "very efficient use of it and just like we saw an Beanstalk we had that same CLI extension so you'll be able to go back",
    "start": "1681270",
    "end": "1687870"
  },
  {
    "text": "and forth between visual studio and a command line or dine even use the officious to do all you could just use the racino code or script it out okay",
    "start": "1687870",
    "end": "1697080"
  },
  {
    "text": "and then the third part of our trilogy the container based on the core applications and ECS so this is the new",
    "start": "1697080",
    "end": "1702420"
  },
  {
    "text": "tooling that we released just about an hour ago I think it was we got it up the door so this is gonna be allowing us to",
    "start": "1702420",
    "end": "1710490"
  },
  {
    "text": "run down the corporation's through as container instance and so when our first version of this tooling what we're",
    "start": "1710490",
    "end": "1716160"
  },
  {
    "start": "1713000",
    "end": "1776000"
  },
  {
    "text": "adding is the ability to publish dotnet core applications as docker images to ECR which then you can then push that to",
    "start": "1716160",
    "end": "1722760"
  },
  {
    "text": "other services but you can also through the chilling be able to deploy any debt in a co-op location to ECS as you know",
    "start": "1722760",
    "end": "1731460"
  },
  {
    "text": "either web applications or batch jobs or just you could run a batch job on a schedule so say you have a large batch",
    "start": "1731460",
    "end": "1737430"
  },
  {
    "text": "job you want to run on Sunday nights you can have that all set up here now these new container features that we released",
    "start": "1737430",
    "end": "1744060"
  },
  {
    "text": "are only in Visual Studio 2017 that is where that has the new CS proj file",
    "start": "1744060",
    "end": "1749370"
  },
  {
    "text": "format for dotnet core application and that's really we're going to be focusing a lot of our effort is on new tooling is",
    "start": "1749370",
    "end": "1755400"
  },
  {
    "text": "on the CH prog format the project JSON based one and 2015 we're not planning on doing any more effort other than",
    "start": "1755400",
    "end": "1760740"
  },
  {
    "text": "supporting the existing climate functions there this does require that you have darker running on your machine",
    "start": "1760740",
    "end": "1766520"
  },
  {
    "text": "as n it's up and running because basically we're chilling is going to do is its kind of emerge Visual Studio docker and abs all together to make it",
    "start": "1766520",
    "end": "1774000"
  },
  {
    "text": "easy to use now if you've never used ECS before there are a few new resource",
    "start": "1774000",
    "end": "1779790"
  },
  {
    "start": "1776000",
    "end": "1883000"
  },
  {
    "text": "types that you will come across and the first is a cluster a cluster is",
    "start": "1779790",
    "end": "1784800"
  },
  {
    "text": "just the the logical area where you want your work to happen and it is usually made up of container instances which are",
    "start": "1784800",
    "end": "1790680"
  },
  {
    "text": "just ec2 instances which will run all of your applications and then you have a test definition that defines the docker",
    "start": "1790680",
    "end": "1798120"
  },
  {
    "text": "images you want to run includes any memory settings and CPU port mappings all those things are defined in the task",
    "start": "1798120",
    "end": "1804000"
  },
  {
    "text": "definition and then the task definition you say I want to go run instances of that task definition on my in my cluster",
    "start": "1804000",
    "end": "1811710"
  },
  {
    "text": "and you would do that as more four transitory processes processes were that",
    "start": "1811710",
    "end": "1817020"
  },
  {
    "text": "the process identified in your docker file when that's complete you want those tasks to end now when those tasks start",
    "start": "1817020",
    "end": "1825510"
  },
  {
    "text": "up the first thing they need to do is they need to download their docker image from the container registry and we've",
    "start": "1825510",
    "end": "1830760"
  },
  {
    "text": "optimized our tooling for Amazon ECR you could also use docker hub as well now",
    "start": "1830760",
    "end": "1836850"
  },
  {
    "text": "the other way to run applications on ECS is as a service and this is what you do for web applications because when you",
    "start": "1836850",
    "end": "1843240"
  },
  {
    "text": "run your tasks that are social with the service the service monitors to make sure all those tasks are up and running",
    "start": "1843240",
    "end": "1849690"
  },
  {
    "text": "and if any of them die and will automatically respawn new versions of those so it's like monitoring your web",
    "start": "1849690",
    "end": "1855630"
  },
  {
    "text": "servers and if they die make sure we create new ones gives you that redundancy now here at those four or",
    "start": "1855630",
    "end": "1861180"
  },
  {
    "text": "five tests here were web servers I'd have five different endpoints so I probably ought to tie those to a load",
    "start": "1861180",
    "end": "1866760"
  },
  {
    "text": "balancer and this service would take charge of making sure all of my service tasks are registered with my load",
    "start": "1866760",
    "end": "1873960"
  },
  {
    "text": "balancer so that we'll have that one single endpoint and it will spread the load of all the requests coming across",
    "start": "1873960",
    "end": "1880320"
  },
  {
    "text": "all of my tasks now in the keynote we announced today Fargate as a new feature",
    "start": "1880320",
    "end": "1887430"
  },
  {
    "start": "1883000",
    "end": "1947000"
  },
  {
    "text": "for ECS that is the ability to now not have to manage any ec2 instances as part",
    "start": "1887430",
    "end": "1894210"
  },
  {
    "text": "of my cluster all I have to do now is just when I launch my test say I want",
    "start": "1894210",
    "end": "1899220"
  },
  {
    "text": "this much CPU power in this much memory and it'll take care of making sure you have the compute capacity needed for",
    "start": "1899220",
    "end": "1904950"
  },
  {
    "text": "them and that's how billing is done so billing is done based on how much CPU how much memory on a per second basis",
    "start": "1904950",
    "end": "1911430"
  },
  {
    "text": "with a minimum of one minute I believe and then so now when we want to create",
    "start": "1911430",
    "end": "1916600"
  },
  {
    "text": "clusters it's much simpler if we don't have to worry about ec2 instances all we have to do is just specify a name and",
    "start": "1916600",
    "end": "1922000"
  },
  {
    "text": "that's our logical cluster and then when we launch tasks we pass in our VPC configuration in any security groups and",
    "start": "1922000",
    "end": "1929710"
  },
  {
    "text": "we can also schedule tests as well as we as one our features but schedule tasks is actually handled by cloud watch",
    "start": "1929710",
    "end": "1935620"
  },
  {
    "text": "events cloud watch events has not yet been updated to support Fargate when it when it does then it'll work but right",
    "start": "1935620",
    "end": "1942070"
  },
  {
    "text": "now when you run scheduled tasks you have to run it on a culture that has ec2 instances so with Fargo that means that",
    "start": "1942070",
    "end": "1949180"
  },
  {
    "start": "1947000",
    "end": "1959000"
  },
  {
    "text": "our cluster that we just looked before those container insists go away they're not our concern our cluster is just that",
    "start": "1949180",
    "end": "1955240"
  },
  {
    "text": "black box that just takes care of running all of our tasks okay so now",
    "start": "1955240",
    "end": "1961060"
  },
  {
    "start": "1959000",
    "end": "1997000"
  },
  {
    "text": "onto the third part of our trilogy this is our time where we shamelessly plug too much over your old or asleep on that",
    "start": "1961060",
    "end": "1968500"
  },
  {
    "text": "was it your honor okay so copy feedback from you guys to see what we should be working on this is a site we often demo",
    "start": "1968500",
    "end": "1976330"
  },
  {
    "text": "where we have polls on there norm - poster comm and we're going to talk about how you actually deploy this",
    "start": "1976330",
    "end": "1982510"
  },
  {
    "text": "application so if you have your laptop's open we invite you to tell us what we",
    "start": "1982510",
    "end": "1987640"
  },
  {
    "text": "should be working on next year and I'm going to redress the balance on that there we go all right should we show",
    "start": "1987640",
    "end": "1994930"
  },
  {
    "text": "them have it so the thirty thousand for architecture",
    "start": "1994930",
    "end": "2000210"
  },
  {
    "start": "1997000",
    "end": "2030000"
  },
  {
    "text": "view upholster there's really two moving parts to pulsar there is the server list component which actually works with any",
    "start": "2000210",
    "end": "2006330"
  },
  {
    "text": "step functions to management poles are activated or deactivated and works at energy be unfortunate we don't really",
    "start": "2006330",
    "end": "2012030"
  },
  {
    "text": "have time to go into that part of the demo too much today we'll be putting out a blog on how this works shortly on our",
    "start": "2012030",
    "end": "2018540"
  },
  {
    "text": "blog site and we'll share where the code is for that but we're gonna focus on is how we run that front end on an ECS",
    "start": "2018540",
    "end": "2025140"
  },
  {
    "text": "cluster leave demo time okay okay so here we are inside the project",
    "start": "2025140",
    "end": "2031740"
  },
  {
    "text": "and his pollster regular it's peanut core application we've added a docker file and if you've not you the dock",
    "start": "2031740",
    "end": "2037920"
  },
  {
    "text": "inside Visual Studio it's really easy right-click the project select add docker support apart from that it's all",
    "start": "2037920",
    "end": "2045600"
  },
  {
    "text": "pretty right forward and what we're seeing your on let's go to the startup file and you'll see that where I dependency",
    "start": "2045600",
    "end": "2051570"
  },
  {
    "text": "injection again we have a different logging provided that so in this case",
    "start": "2051570",
    "end": "2058200"
  },
  {
    "start": "2054000",
    "end": "2087000"
  },
  {
    "text": "what we've done is we've released the fuel we release the package of libraries last year where we wanted to make cloud",
    "start": "2058200",
    "end": "2063540"
  },
  {
    "text": "watch logs very easy to use for dotnet developers so we integrated it and it was a lot of popular frameworks out",
    "start": "2063540",
    "end": "2069030"
  },
  {
    "text": "there so we integrated it with log Fernet and log ciri log as well as the logging framework for a spin at core so",
    "start": "2069030",
    "end": "2075388"
  },
  {
    "text": "in this case we just had to add the provider into the aceman of course logging system and so all of our log messages that we write to our",
    "start": "2075389",
    "end": "2081450"
  },
  {
    "text": "application will go to our cloud watch logs fact if we open up the up settings file",
    "start": "2081450",
    "end": "2087200"
  },
  {
    "start": "2087000",
    "end": "2107000"
  },
  {
    "text": "there's our log group holster web we'll take a look at that later on think",
    "start": "2087200",
    "end": "2093870"
  },
  {
    "text": "though we should just get on with your playing this let's do it so to deploy it right-click now you'll",
    "start": "2093870",
    "end": "2100140"
  },
  {
    "text": "notice because it's name speed on call web application we can still publish this to elastic Beanstalk but there's a new option published container to AWS if",
    "start": "2100140",
    "end": "2107940"
  },
  {
    "start": "2107000",
    "end": "2143000"
  },
  {
    "text": "I click that it's going to launch the new publish container wizard and we have a number of targets so we can deploy",
    "start": "2107940",
    "end": "2113610"
  },
  {
    "text": "here we can deploy as a service a task schedule task or we could just push the",
    "start": "2113610",
    "end": "2118830"
  },
  {
    "text": "image TCR so as this is a web application a service is the most appropriate type and you'll notice we",
    "start": "2118830",
    "end": "2124110"
  },
  {
    "text": "have the options again to save the settings to a defaults file and enable the project for command-line deployment we'll leave that checked so I'm going to",
    "start": "2124110",
    "end": "2132480"
  },
  {
    "text": "create a new cluster and we'll call it give it a session name dev 330 when we",
    "start": "2132480",
    "end": "2139230"
  },
  {
    "text": "launch a new cluster from inside the toolkit it becomes a Fargate cluster the tooling women in studio is only going to",
    "start": "2139230",
    "end": "2145680"
  },
  {
    "start": "2143000",
    "end": "2166000"
  },
  {
    "text": "create an empty cluster we don't have the tooling inside to do that we'll create a cluster with ec2 instances on it if you want to cluster with ec2",
    "start": "2145680",
    "end": "2151920"
  },
  {
    "text": "instance I recommend using the ECS as console that has a good CloudFormation template that they use to fill out a key",
    "start": "2151920",
    "end": "2158850"
  },
  {
    "text": "situated in there so I'd select a CPU so let's go for the middle and two gig for",
    "start": "2158850",
    "end": "2164520"
  },
  {
    "text": "memory is fine if you see subnets so I'm going to deploy it to three subnets and it's important that those subnets have",
    "start": "2164520",
    "end": "2170790"
  },
  {
    "text": "internet connectivity either through a gateway or enough it needs that gateway because it has to go reach out to go",
    "start": "2170790",
    "end": "2176760"
  },
  {
    "text": "download the docker image to be able to run and then security group objects default security good for the VPC so we're gonna",
    "start": "2176760",
    "end": "2184950"
  },
  {
    "text": "create a new service called pollster I created three subnet or I requested three subnet deployments so let's go for",
    "start": "2184950",
    "end": "2190710"
  },
  {
    "text": "three tasks so it'll spread them around believe the rest is default and we're going to configure an application load",
    "start": "2190710",
    "end": "2196650"
  },
  {
    "text": "balancer create a new one and so lb actually supports a different",
    "start": "2196650",
    "end": "2202260"
  },
  {
    "start": "2200000",
    "end": "2262000"
  },
  {
    "text": "type that has the the network based load balancers and the application load balancers the tooling we've added today is optimized for application load",
    "start": "2202260",
    "end": "2209190"
  },
  {
    "text": "balancers it has a really great feature we have the ability to reuse the same load balancer for multiple applications",
    "start": "2209190",
    "end": "2215790"
  },
  {
    "text": "and have it choose which target group to go based off of that path pattern so",
    "start": "2215790",
    "end": "2221940"
  },
  {
    "text": "we're deploying one application for the the slash path pattern but wicked in we could deploy a second application using",
    "start": "2221940",
    "end": "2229140"
  },
  {
    "text": "the same cluster in the same load balancer and just say use slash API to go to my web api one it's important if",
    "start": "2229140",
    "end": "2236550"
  },
  {
    "text": "you do that to make sure that the health check is always pointing to a valid path with inside that cluster because ELB is",
    "start": "2236550",
    "end": "2243270"
  },
  {
    "text": "using that health check to determine if that task is healthy and if it can be registered to the type you'll be ok so",
    "start": "2243270",
    "end": "2250350"
  },
  {
    "text": "we're all good this let's move on so let's create a new test definition and I",
    "start": "2250350",
    "end": "2257160"
  },
  {
    "text": "see our application is calling AWS so it's gonna be credentials so we're going to give it a role and it needs a task",
    "start": "2257160",
    "end": "2263400"
  },
  {
    "start": "2262000",
    "end": "2300000"
  },
  {
    "text": "execution role because it needs to pull the images and talk to cloud watch logs so we have a role there you'll notice in",
    "start": "2263400",
    "end": "2269400"
  },
  {
    "text": "the port mapping we're only specifying port 80 there's no container to host port map and that's because with Fargate they",
    "start": "2269400",
    "end": "2275580"
  },
  {
    "text": "always correct for every test its own elastic network interface and that means you also don't have that port conflict",
    "start": "2275580",
    "end": "2282600"
  },
  {
    "text": "that you would often have you're running multiple tests all trying to access port 80 that would cause a lot Proms ease to instance in this case they each get",
    "start": "2282600",
    "end": "2289350"
  },
  {
    "text": "their own less maker in face so every one of the tests can be just running on port 80 so I believe we are ready to",
    "start": "2289350",
    "end": "2294480"
  },
  {
    "text": "publish are you ready to keep up with the wizard output I'm ready alright publish okay so this is now going to go",
    "start": "2294480",
    "end": "2302190"
  },
  {
    "start": "2300000",
    "end": "2321000"
  },
  {
    "text": "set up our application load balancer and we're going to start building the application and after we build it then",
    "start": "2302190",
    "end": "2308700"
  },
  {
    "text": "we're gonna create the docker build the docker image and after that we log on to ECR to then",
    "start": "2308700",
    "end": "2314619"
  },
  {
    "text": "push that image from our laptop here but you probably get from a real CI system",
    "start": "2314619",
    "end": "2320170"
  },
  {
    "text": "or something to ECR and then after that it says go create that service and so since it was a beat",
    "start": "2320170",
    "end": "2326619"
  },
  {
    "start": "2321000",
    "end": "2352000"
  },
  {
    "text": "you I tried hard so since we created an application load balancer that takes",
    "start": "2326619",
    "end": "2332859"
  },
  {
    "text": "about two minutes or so to we get provisioned so why don't we go look at",
    "start": "2332859",
    "end": "2337959"
  },
  {
    "text": "the console and see what we actually did in the wizard okay so now jump to ec2 we",
    "start": "2337959",
    "end": "2344739"
  },
  {
    "text": "have to switch regions is that right hi I mean this East one and go to load balancers so here's our new load",
    "start": "2344739",
    "end": "2353769"
  },
  {
    "text": "balancers being provisioned and if we click on listeners you'll see we have a single listener taking a look at the",
    "start": "2353769",
    "end": "2360189"
  },
  {
    "text": "rules now these correspond to the path that we had inside the wizard and here's",
    "start": "2360189",
    "end": "2366400"
  },
  {
    "text": "oh just our single path default action for port 80 just wrote everything to upholster target group sorry so if we",
    "start": "2366400",
    "end": "2374259"
  },
  {
    "text": "deploy this second application or any number of applications those that each show up here as different rules to our",
    "start": "2374259",
    "end": "2379749"
  },
  {
    "text": "listener which would then target different target groups of VLB so let's",
    "start": "2379749",
    "end": "2386469"
  },
  {
    "text": "pick on the top of the target group upholster marker group is where the tasks the easiest tasks are registered",
    "start": "2386469",
    "end": "2393249"
  },
  {
    "text": "at sablée I bet you yeah we don't have any yet yeah they're still spending everything up yeah so pretty much logs",
    "start": "2393249",
    "end": "2400689"
  },
  {
    "text": "let's do the clouds logs okay so we showed you how you we integrated we turned on the logging",
    "start": "2400689",
    "end": "2406979"
  },
  {
    "text": "Steve and I've been practicing this talk so we already have some logs already set up so we'll look at that Wow things are",
    "start": "2406979",
    "end": "2413109"
  },
  {
    "text": "being proficient for us so here's the pulse to web log group that we saw in the app settings file should pick one of",
    "start": "2413109",
    "end": "2418839"
  },
  {
    "text": "these at the top you see all the output from the inside the log right so these are all the default logging you really",
    "start": "2418839",
    "end": "2425410"
  },
  {
    "start": "2422000",
    "end": "2442000"
  },
  {
    "text": "get with a subnet course so by adding that logging provider in there a spinet core is gonna give you what the pass",
    "start": "2425410",
    "end": "2431890"
  },
  {
    "text": "were called the timing of everything like that and I believe there was another log group that was interesting",
    "start": "2431890",
    "end": "2437319"
  },
  {
    "text": "in there yep there's this ACS pollster one yeah so this is the one that ECS has",
    "start": "2437319",
    "end": "2444039"
  },
  {
    "start": "2442000",
    "end": "2477000"
  },
  {
    "text": "set up so that this law this law group is basically printing it's logging all the things that get written to the console",
    "start": "2444039",
    "end": "2450580"
  },
  {
    "text": "so the the logger one we have is they're getting the other logging that's actually inside your application ACS is",
    "start": "2450580",
    "end": "2457010"
  },
  {
    "text": "trying to get the log information let's just go to console so if something dies right away and gets written to the console this is a good place to go check",
    "start": "2457010",
    "end": "2462500"
  },
  {
    "text": "to see if anything went wrong so let's jump back to ec2 and see how the provisioning is coming along actually",
    "start": "2462500",
    "end": "2471560"
  },
  {
    "text": "let me go into the target groups more so than load balancers targets there we go",
    "start": "2471560",
    "end": "2479090"
  },
  {
    "start": "2477000",
    "end": "2516000"
  },
  {
    "text": "we have our three instances split across three availability zones all this thing on port 80 so back in Visual Studio i",
    "start": "2479090",
    "end": "2486790"
  },
  {
    "text": "refresh this view the URL link to the application is now live and click that",
    "start": "2486790",
    "end": "2494619"
  },
  {
    "text": "and there's that whole stress peanut core application running where's my",
    "start": "2497020",
    "end": "2502040"
  },
  {
    "text": "favorite question on this screen there we go cool so there we go we're from",
    "start": "2502040",
    "end": "2511040"
  },
  {
    "text": "Seattle we should be boiling for Pearl Jam that's already I like the who are they that's cool so",
    "start": "2511040",
    "end": "2517010"
  },
  {
    "start": "2516000",
    "end": "2541000"
  },
  {
    "text": "let's go back to visual studio so I noticed on that you've added this pollster reporter project yes we did",
    "start": "2517010",
    "end": "2524450"
  },
  {
    "text": "because we want to see what people are voting up because I'm sure everyone is diligently voting on there to see what we're working on and this is just a",
    "start": "2524450",
    "end": "2530780"
  },
  {
    "text": "console application so this is an example how you can run just not just web application so you can run anything so this is a bit of a batch job that",
    "start": "2530780",
    "end": "2537860"
  },
  {
    "text": "goes and scans our tables and sees what's the current vote is and send a",
    "start": "2537860",
    "end": "2543380"
  },
  {
    "start": "2541000",
    "end": "2562000"
  },
  {
    "text": "message to SNS to with votes and then we've got an email associated with that topic so we can see where the votes are",
    "start": "2543380",
    "end": "2549560"
  },
  {
    "text": "should you play this let's deploy okay it's all right click you'll notice I",
    "start": "2549560",
    "end": "2555380"
  },
  {
    "text": "don't get the option to publish to elastic Beanstalk because it's a console application but I do get to be able to publish container because the project",
    "start": "2555380",
    "end": "2560900"
  },
  {
    "text": "has a docker file so this time this is gonna be a short-lived tasks crates",
    "start": "2560900",
    "end": "2566030"
  },
  {
    "text": "gonna wake up it's gonna generate the report is gonna send a notification and shut down again so a task is most",
    "start": "2566030",
    "end": "2571250"
  },
  {
    "text": "appropriate or I think should we run this on a schedule yeah you know I'm gonna it's like to save the",
    "start": "2571250",
    "end": "2577520"
  },
  {
    "text": "settings and this time I'm going to deploy to an existing cluster because again schedule tasks oh it's a testament",
    "start": "2577520",
    "end": "2585260"
  },
  {
    "text": "it needs cloud watch events which isn't yet while it with faregates so it's an easy to type we've already created the cluster click Next we can either run",
    "start": "2585260",
    "end": "2593720"
  },
  {
    "text": "this at a fixed interval in this case every 10 minutes by default or we can use a cron let's stick with a fixed",
    "start": "2593720",
    "end": "2599000"
  },
  {
    "text": "interval here's the cloud watch events roll right move on test definition new",
    "start": "2599000",
    "end": "2608180"
  },
  {
    "text": "on post a reporter memory I know 256 sounds good test role you seeis pollster",
    "start": "2608180",
    "end": "2615580"
  },
  {
    "text": "no port mapping because this is a console application and publish so in",
    "start": "2615580",
    "end": "2622550"
  },
  {
    "start": "2621000",
    "end": "2641000"
  },
  {
    "text": "this case we're again we're building it and creating the docker image I mean what we're gonna do is we're gonna go tell cloud watch events and that on this",
    "start": "2622550",
    "end": "2629540"
  },
  {
    "text": "integral of every 10 minutes go run this task definition and that's the part that will be updated eventually to support",
    "start": "2629540",
    "end": "2636170"
  },
  {
    "text": "Fargate where we can say run it with these VPC configurations those things so I've got a scheduled task",
    "start": "2636170",
    "end": "2642200"
  },
  {
    "text": "there's the post report that we just deployed but I'm a little bit impatient I don't want to wait 10 minutes to see",
    "start": "2642200",
    "end": "2648380"
  },
  {
    "text": "what's going on so we could also just run it right away ok so we saved the tables defaults file right inside the",
    "start": "2648380",
    "end": "2654230"
  },
  {
    "text": "wizard there's the new tool defaults so instead of using Visual Studio let's use",
    "start": "2654230",
    "end": "2659360"
  },
  {
    "text": "the command line so here we are inside the pollster reporter project through the files so it's you don't net ECS help",
    "start": "2659360",
    "end": "2667850"
  },
  {
    "text": "let's see what we can do so we have deploy service deploy task deploy scheduled tasks and push an image just",
    "start": "2667850",
    "end": "2674360"
  },
  {
    "text": "as we saw inside the wizard let's take a look at the options for deploy tasks",
    "start": "2674360",
    "end": "2680860"
  },
  {
    "text": "that's a lot of options norm yeah because there are a lot of things you can actually specify with container images and in the wizard resist",
    "start": "2680860",
    "end": "2687200"
  },
  {
    "text": "optimized for what are the most common things you want to set you can always add any of the other settings in that",
    "start": "2687200",
    "end": "2692720"
  },
  {
    "text": "JSON file I mean deploy through the wizard or the command-line it'll pick up those settings so it's sort of the backdoor",
    "start": "2692720",
    "end": "2698360"
  },
  {
    "text": "for the more advanced settings when you go through the wizard okay given that if we already have the file I was gonna",
    "start": "2698360",
    "end": "2703460"
  },
  {
    "text": "deploy the task",
    "start": "2703460",
    "end": "2706119"
  },
  {
    "text": "this output should begin to look familiar by now so in this time instead",
    "start": "2709420",
    "end": "2714950"
  },
  {
    "text": "of saying cloud watch events will run this task definition we're gonna go say easiest run task with this task",
    "start": "2714950",
    "end": "2720260"
  },
  {
    "text": "definition done so okay let's go back to",
    "start": "2720260",
    "end": "2725420"
  },
  {
    "text": "visual studio and if I open up cluster since cluster and we look at tasks",
    "start": "2725420",
    "end": "2736450"
  },
  {
    "text": "currently pending cool to refresh if",
    "start": "2736450",
    "end": "2743330"
  },
  {
    "text": "it's done there we go already run so if we go to our email",
    "start": "2743330",
    "end": "2749830"
  },
  {
    "text": "there's the notification there's the votes all right okay back to the slides",
    "start": "2750100",
    "end": "2759940"
  },
  {
    "text": "okay so we talked in we should we showed briefly bhai use cloud watch the logs with dotnet core or with dotnet",
    "start": "2761050",
    "end": "2767840"
  },
  {
    "text": "libraries there's some put that in framework end on the core we have a blog on our blog site that talks about those",
    "start": "2767840",
    "end": "2773240"
  },
  {
    "text": "so highly recommend checking that out we also worked on deploying it asymmetrical application to our UCS cluster with",
    "start": "2773240",
    "end": "2779750"
  },
  {
    "text": "Fargate so that took care of setting up all of our compute needs and it was easy to set the cluster of the service we did",
    "start": "2779750",
    "end": "2786020"
  },
  {
    "text": "the application load balancer we also did just a console application and this we did with cloud watch events as well",
    "start": "2786020",
    "end": "2793280"
  },
  {
    "text": "as through the command line and just like we saw with Beanstalk lambda and now this we have that CLI extension",
    "start": "2793280",
    "end": "2800090"
  },
  {
    "text": "because this is the pattern which I'm do is any of the tooling that we add to visual studio so you can go through and walk through is we want to make sure you",
    "start": "2800090",
    "end": "2806360"
  },
  {
    "text": "can take that out of visual studio into other environments like visual studio code or just in your scripts okay so",
    "start": "2806360",
    "end": "2816530"
  },
  {
    "start": "2815000",
    "end": "2873000"
  },
  {
    "text": "that's the what we wanted to cover today just to recap here we have that done extensions check out that github repository it has a lot of information",
    "start": "2816530",
    "end": "2823460"
  },
  {
    "text": "about all the available options on there how to install it if you're not using the wizard I'm to add that check box in",
    "start": "2823460",
    "end": "2829160"
  },
  {
    "text": "there we talked about how you can add database services and you're a smoke",
    "start": "2829160",
    "end": "2834170"
  },
  {
    "text": "applications with a extensions library as well as with our cloud wash loggers",
    "start": "2834170",
    "end": "2839530"
  },
  {
    "text": "Beanstalk we have of the new option to be able to set up this new CL extension lambda again done",
    "start": "2839530",
    "end": "2846970"
  },
  {
    "text": "that core tube 4 is coming soon along with x-ray support so those two highly requested features are coming soon and we showed the deployment",
    "start": "2846970",
    "end": "2854290"
  },
  {
    "text": "through the command line and ECS is the new features we just released this afternoon so you'll see new versions of Visio",
    "start": "2854290",
    "end": "2860410"
  },
  {
    "text": "toolkit on the marketplace and that you can deploy any type of application as a data core",
    "start": "2860410",
    "end": "2865480"
  },
  {
    "text": "I think gotten the core applications as containers out there as services or tasks or scheduled tasks and with that",
    "start": "2865480",
    "end": "2874240"
  },
  {
    "text": "this is finishing up visit a couple things check our Twitter handle or the our blog site this is where we have all our",
    "start": "2874240",
    "end": "2879970"
  },
  {
    "text": "information would come out especially as we come with the.net core tools coming out soon we'll have a lot more",
    "start": "2879970",
    "end": "2885010"
  },
  {
    "text": "information about that on our blog site the following github repositories are getting repositories that Steve and I",
    "start": "2885010",
    "end": "2891130"
  },
  {
    "text": "work on a lot along with the rest of the team so if you have feedback or questions good place it in github issues",
    "start": "2891130",
    "end": "2897310"
  },
  {
    "text": "or reach out to us [Applause]",
    "start": "2897310",
    "end": "2906719"
  }
]