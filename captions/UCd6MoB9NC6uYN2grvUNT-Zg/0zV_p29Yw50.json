[
  {
    "text": "yeah my name is Len Henry I'm a Solutions Architect with Amazon Web Services I work with the education and",
    "start": "30",
    "end": "5069"
  },
  {
    "text": "team you can find us out in the booth once it's open again for the education if you have questions but I mostly work with",
    "start": "5069",
    "end": "11910"
  },
  {
    "text": "educational technology companies I in a previous life I used to do a lot of DevOps consulting for a lots of public",
    "start": "11910",
    "end": "19080"
  },
  {
    "text": "and private organizations and so I've been working with containers for quite a",
    "start": "19080",
    "end": "24150"
  },
  {
    "text": "few years as well and so my talk is about leveraging as a technology we're",
    "start": "24150",
    "end": "29849"
  },
  {
    "text": "really excited about which is ECS Fargate and then using a SS developer tools to you to implement a CIC D",
    "start": "29849",
    "end": "38010"
  },
  {
    "text": "pipeline for your container based applications hosted on Fargate earlier I'm using a tab list native tools for",
    "start": "38010",
    "end": "45300"
  },
  {
    "text": "this session but earlier today I talked about using another orchestration engine in particular Jenkins so the big",
    "start": "45300",
    "end": "52050"
  },
  {
    "text": "takeaway even from this talk is that there's lots of opportunities for implementing CI cdna SS I'm showing you",
    "start": "52050",
    "end": "57629"
  },
  {
    "text": "how to use some of our native tools but there's plenty of integration points Jenkins there are several integrations between Jenkins and code pipeline code commit",
    "start": "57629",
    "end": "65338"
  },
  {
    "text": "and code build as well so I just want to make it make it clear that yes I'm showing how to use a SS tools but there",
    "start": "65339",
    "end": "70560"
  },
  {
    "text": "are many ways of getting that done as well so what can you expect from this session I'm gonna do a quick review how",
    "start": "70560",
    "end": "77850"
  },
  {
    "text": "many folks are pretty familiar with continuous integration continuous delivery all right so I'm gonna do a",
    "start": "77850",
    "end": "84150"
  },
  {
    "text": "semi quick review of CI CD I'm gonna introduce the tools that I'm gonna be",
    "start": "84150",
    "end": "89820"
  },
  {
    "text": "taught of a focus of the talk I'm going to talk about docker images because",
    "start": "89820",
    "end": "95009"
  },
  {
    "text": "that's the deployment mechanism that I'm gonna focus on for this discussion today and I'm gonna talk a little bit about",
    "start": "95009",
    "end": "102329"
  },
  {
    "text": "using code bill with docker there's a native integration for code Bill for deploying to ECS rke our container",
    "start": "102329",
    "end": "110399"
  },
  {
    "text": "service and then I'm going to focus on using code pipeline for orchestration and then some of this will come out in",
    "start": "110399",
    "end": "116130"
  },
  {
    "text": "our demo I I am gonna have a git repository for the demo I'm using for",
    "start": "116130",
    "end": "121409"
  },
  {
    "text": "this the application is a simple one it's a node.js application one of the things the only thing I would highlight",
    "start": "121409",
    "end": "127500"
  },
  {
    "text": "about that app is that it actually uses dynamo for its database and a big if",
    "start": "127500",
    "end": "133349"
  },
  {
    "text": "there's anything you get out of the session do not to try to deploy databases in containers I know theirs",
    "start": "133349",
    "end": "138540"
  },
  {
    "text": "are gonna be a huge discussion about that and there's lots of arguments but perhaps in Fargate in particular you",
    "start": "138540",
    "end": "143849"
  },
  {
    "text": "perhaps want to use some sort of server lists or something like dynamo for your storage because trying to implement",
    "start": "143849",
    "end": "149790"
  },
  {
    "text": "database and containers not always the best mix discuss amongst yourselves okay",
    "start": "149790",
    "end": "156890"
  },
  {
    "text": "so let me get into talking about CI CD continuous integration delivery and deployment so the challenge is as",
    "start": "156890",
    "end": "163880"
  },
  {
    "text": "developers you're writing your code how do you get that code out to your users right and you know the big thing is how",
    "start": "163880",
    "end": "171239"
  },
  {
    "text": "do you get to launch when I was working as a DevOps consultant that was typically not the first thing that a",
    "start": "171239",
    "end": "177239"
  },
  {
    "text": "customer would talk to me about what they would say would usually list a long list of problems with when it ever came",
    "start": "177239",
    "end": "182670"
  },
  {
    "text": "to deployment very rarely would folks say once we're launched we're really excited it would typically be okay takes",
    "start": "182670",
    "end": "189180"
  },
  {
    "text": "us three months to launch and so it's kind of interesting but the focus is on launch for this discussion and what it",
    "start": "189180",
    "end": "195060"
  },
  {
    "text": "comes down to is how can you quickly reliably deliver good ideas to our customers and it's so funny that how",
    "start": "195060",
    "end": "201209"
  },
  {
    "text": "often that gets lost because because quite frankly the tools that you use for CI CD are so complicated and also cover",
    "start": "201209",
    "end": "207660"
  },
  {
    "text": "a lot of different fields and a lot of different I would say silos of practice it always almost gets lost that you",
    "start": "207660",
    "end": "215310"
  },
  {
    "text": "really your focus is you want to do it quickly you want to do it reliably and you want to deliver the features to your customers so here's some guiding",
    "start": "215310",
    "end": "222630"
  },
  {
    "text": "principles again some of these could be up for debate but I mean for the purpose",
    "start": "222630",
    "end": "228030"
  },
  {
    "text": "of this talk I would say these are my guiding principles frequency reduces difficulty the more often you do",
    "start": "228030",
    "end": "233669"
  },
  {
    "text": "something the easier it is most basic example of this is muscle memory after a while if you keep doing a repetitive",
    "start": "233669",
    "end": "239130"
  },
  {
    "text": "action it becomes much easier latency between check-ins and production is waste and what that refers to is the",
    "start": "239130",
    "end": "246480"
  },
  {
    "text": "amount of time between once you would come up with an idea and when that idea cannot out there be tested by your end",
    "start": "246480",
    "end": "252030"
  },
  {
    "text": "user the more time that is that's basically waste on your part consistency",
    "start": "252030",
    "end": "257250"
  },
  {
    "text": "improves confidence this is especially for your developers because what it comes down to is that if you're",
    "start": "257250",
    "end": "262650"
  },
  {
    "text": "confident ability to deliver your application out to your end-users and in your you have a",
    "start": "262650",
    "end": "268090"
  },
  {
    "text": "lot of faith in your process you're gonna become you're gonna become so much more productive and that really talks",
    "start": "268090",
    "end": "273460"
  },
  {
    "text": "about the next point which is developers who are empowered by their confidence in their deployment or delivery process are",
    "start": "273460",
    "end": "280720"
  },
  {
    "text": "much happier puppet did a study a couple years ago that revealed some really interesting details you can look it up",
    "start": "280720",
    "end": "286900"
  },
  {
    "text": "on the internet but there's a happy developer is one who's confident that whatever process he's using to deploy",
    "start": "286900",
    "end": "293050"
  },
  {
    "text": "software is not going to be a drag on his day smaller batch sizes are easier to debug I mean it's just like anything",
    "start": "293050",
    "end": "299680"
  },
  {
    "text": "else in life the less you have to deal with the less complexity and faster development overall improve software",
    "start": "299680",
    "end": "306040"
  },
  {
    "text": "development practices so the typical phases in which you have for a CI CD",
    "start": "306040",
    "end": "312490"
  },
  {
    "text": "process is you start out with some sort of source the features that you're looking for when it comes to your source is some sort of version control some",
    "start": "312490",
    "end": "319810"
  },
  {
    "text": "ability to be able to specify this is the what code look like today this is what it looked like six months ago and",
    "start": "319810",
    "end": "324970"
  },
  {
    "text": "this is what it's good what this is what it's gonna look like after I commit this next build you have all sorts of features for these platforms you have",
    "start": "324970",
    "end": "331120"
  },
  {
    "text": "things like branching you have things that include integrated code reviews there's lots of different features for a",
    "start": "331120",
    "end": "336190"
  },
  {
    "text": "lot of the different source control platforms the next phase is built and what that's really about of course is",
    "start": "336190",
    "end": "342070"
  },
  {
    "text": "dependent on which type of language development kits and everything else but it really is about compilation you",
    "start": "342070",
    "end": "348190"
  },
  {
    "text": "typically also have deployment of unit tests you can do things like static analysis you know code quality tools and",
    "start": "348190",
    "end": "354610"
  },
  {
    "text": "then also you know a lot of these and also for a node example you also have packaging meaning you have package",
    "start": "354610",
    "end": "360580"
  },
  {
    "text": "things that pull down packages that are necessary for you to be able to execute the running code once it's in some sort",
    "start": "360580",
    "end": "365680"
  },
  {
    "text": "of execution container and then you have testing integration test load test",
    "start": "365680",
    "end": "371440"
  },
  {
    "text": "security tests user acceptance tests usually this happens after compilation",
    "start": "371440",
    "end": "376720"
  },
  {
    "text": "because that's at the point in which the application is ready to be tested and then you have your production which is",
    "start": "376720",
    "end": "382540"
  },
  {
    "text": "once something has now been approved it's gone through a certain amount of testing you can now have it out there",
    "start": "382540",
    "end": "388120"
  },
  {
    "text": "and now it's really about making sure it's at what's out there is what you thought was going to be out there and",
    "start": "388120",
    "end": "393520"
  },
  {
    "text": "then also measuring the make sure that it's valid once it's in production because now that something",
    "start": "393520",
    "end": "399170"
  },
  {
    "text": "is in doubt in production you may discover things that no one planned for so in turn so in terms of the CI CD",
    "start": "399170",
    "end": "406580"
  },
  {
    "text": "process continuous integration is really about moving from source to build you're trying the basic idea is that you're",
    "start": "406580",
    "end": "412580"
  },
  {
    "text": "merging code from lots of different developers into one thing continuous delivery is about being able to push",
    "start": "412580",
    "end": "417950"
  },
  {
    "text": "something out there that's what it's really about and then continuous deployment is about automating that entire process which is you have",
    "start": "417950",
    "end": "424820"
  },
  {
    "text": "something where as soon as someone is able to commit something into code it is somehow able to magically move itself",
    "start": "424820",
    "end": "430340"
  },
  {
    "text": "out into a production environment where your end-users can make use of it and then an important thing about this is",
    "start": "430340",
    "end": "437180"
  },
  {
    "text": "that there needs to be a feedback loop once you deploy something out into some sort of execution container whatever",
    "start": "437180",
    "end": "442730"
  },
  {
    "text": "that is on I'm I'm using the term container generically because you could be doing something to ec2 you could be doing something to on premise servers or",
    "start": "442730",
    "end": "449360"
  },
  {
    "text": "something to like an actual container you now have the opportunity for feedback which may it may have you do",
    "start": "449360",
    "end": "455090"
  },
  {
    "text": "changes anywhere along this continuum because you may find out that there's something you didn't accommodate in your",
    "start": "455090",
    "end": "460280"
  },
  {
    "text": "testing you may want to incorporate it into your testing there may be something about your build process that missed something or your source code there was",
    "start": "460280",
    "end": "467030"
  },
  {
    "text": "an error or something like that so you may have to go all the way back and then execute this process all over again so",
    "start": "467030",
    "end": "473810"
  },
  {
    "text": "in terms of a tubeless services the for services I'm going to spend the most of my talk talking about our code commits",
    "start": "473810",
    "end": "480260"
  },
  {
    "text": "which is our source control tool it covers the source part of the of the of the phases code build which is our build",
    "start": "480260",
    "end": "488479"
  },
  {
    "text": "tool which allows you to and this is a build managed service and it's exactly like it sounds imagine if you had a",
    "start": "488479",
    "end": "494240"
  },
  {
    "text": "Jenkins as a managed service that's a way to think about it third-party tooling for testing a lot of",
    "start": "494240",
    "end": "500600"
  },
  {
    "text": "our different tools code pipeline and code Bill have different integration points with a lot of third-party testing tools like selenium blaze meter there's",
    "start": "500600",
    "end": "508760"
  },
  {
    "text": "a bunch of different other partners that are available that integrate with our services for doing testing and then code",
    "start": "508760",
    "end": "515659"
  },
  {
    "text": "deploy is able to deploy stuff to ec2 or to on premise resources the other thing",
    "start": "515659",
    "end": "521089"
  },
  {
    "text": "about this though is a code build is also able to deploy to containers so if you want to deploy something to ECS you",
    "start": "521089",
    "end": "527089"
  },
  {
    "text": "can also use code bill for being able to deploy to production and then to orchestrate all of this is",
    "start": "527089",
    "end": "533960"
  },
  {
    "text": "code pipeline which is how you set up with the quote-unquote build job that you want executed to move your stuff",
    "start": "533960",
    "end": "539210"
  },
  {
    "text": "from source all the way out to where it's hosted so let's talk a little bit",
    "start": "539210",
    "end": "546350"
  },
  {
    "text": "about docker images since containers are the focus of my talk I'm not going to spend too much time talking about why",
    "start": "546350",
    "end": "551660"
  },
  {
    "text": "containers because everyone's here because they're very familiar and excited about containers the big thing is it's reproducible its immutable",
    "start": "551660",
    "end": "558890"
  },
  {
    "text": "meaning that once you generate an image that's it if you if you want to do a change that you're generating a new",
    "start": "558890",
    "end": "563990"
  },
  {
    "text": "image it's portable as long as you have a compatible kernel whatever is executing will work on a lots of",
    "start": "563990",
    "end": "569240"
  },
  {
    "text": "different platforms and then the idea of a container and the big benefit for is it's a packaged application code and",
    "start": "569240",
    "end": "575060"
  },
  {
    "text": "runtime dependencies so in the example of node app that I'm using I have a bunch of dependencies bug one of them",
    "start": "575060",
    "end": "581680"
  },
  {
    "text": "Express is one of them and those all get packaged into my image when it gets deployed out in the container and what",
    "start": "581680",
    "end": "589100"
  },
  {
    "text": "it does for me as a developer is that you know I'm not trying to sell containers but it makes it all my life a lot easier when it comes to moving",
    "start": "589100",
    "end": "595190"
  },
  {
    "text": "something from development into production one of the important things about containers is what's known as an",
    "start": "595190",
    "end": "601430"
  },
  {
    "text": "image layer and what that refers to is that when it comes to generating image there's multiple layers that exist in",
    "start": "601430",
    "end": "607100"
  },
  {
    "text": "any image at the most basic level when you start out with a docker image you you typically come from one of the based",
    "start": "607100",
    "end": "613100"
  },
  {
    "text": "images like Ubuntu or Express and there's lots if you go to docker hub is where you can see lots and lots of",
    "start": "613100",
    "end": "619100"
  },
  {
    "text": "different images and but in one of those images you use something like a docker file to create layers in that image to",
    "start": "619100",
    "end": "624980"
  },
  {
    "text": "be able to deploy your application one of those layers is actually going to encapsulate your custom code which is",
    "start": "624980",
    "end": "630260"
  },
  {
    "text": "the whole point of why you're using containers to begin with so this example of a docker file you see up here this is",
    "start": "630260",
    "end": "638150"
  },
  {
    "text": "one of the base image that it's used so that's one layer then you were deploying the nginx server that becomes another",
    "start": "638150",
    "end": "644810"
  },
  {
    "text": "layer and then your actual application code is another layer layers come into",
    "start": "644810",
    "end": "651080"
  },
  {
    "text": "play when it comes to actually building docker images because what ends up happening is that docker is able to cache layers and so it's a and I'll talk",
    "start": "651080",
    "end": "658430"
  },
  {
    "text": "about a little later as a best practice it's but you want to minimize the amount of change between layers to optimize your process for docker images inside of it",
    "start": "658430",
    "end": "667530"
  },
  {
    "text": "so when you create an image you can actually check that image into some sort of source control repository just like",
    "start": "667530",
    "end": "672660"
  },
  {
    "text": "you can do for your source code in this case the example of ECR you can have multiple different tag versions of yours",
    "start": "672660",
    "end": "678360"
  },
  {
    "text": "either of your image checked into some sort of code repository because the one of the big benefits of containers is",
    "start": "678360",
    "end": "683700"
  },
  {
    "text": "that it's repeatable deployment once you have all these these images available you can deploy them however many times",
    "start": "683700",
    "end": "689280"
  },
  {
    "text": "you want to and do that quickly and the reason for this is that you want",
    "start": "689280",
    "end": "694440"
  },
  {
    "text": "to be able to have similarities between your environments and that docker the docker image should be the same as its",
    "start": "694440",
    "end": "700470"
  },
  {
    "text": "deployed and there may be configuration differences between the different environments but you still want to have the same image deployed across because",
    "start": "700470",
    "end": "706620"
  },
  {
    "text": "to be able to have real continuous delivery you want to have be able to test and make sure that what's in",
    "start": "706620",
    "end": "712770"
  },
  {
    "text": "development matches what's in UAT matches what's in production is you don't want there to be any variances",
    "start": "712770",
    "end": "717960"
  },
  {
    "text": "between that because that's what's gonna be able to create a lot of rework and it's gonna be difficult for you to debug it later on so in terms of best",
    "start": "717960",
    "end": "726060"
  },
  {
    "text": "practices when it comes to docker images so in the example of a nodejs",
    "start": "726060",
    "end": "731310"
  },
  {
    "text": "application you want to have explicit external dependencies so what that means is if you're depending on express you",
    "start": "731310",
    "end": "737910"
  },
  {
    "text": "want to say Express or pug explicit version of that you don't want to say star because what that will mean is that",
    "start": "737910",
    "end": "744990"
  },
  {
    "text": "if you or C if you develop you spend a time to develop your CSD D process a year from now they're gonna have",
    "start": "744990",
    "end": "750450"
  },
  {
    "text": "different versions of the libraries that you depend on so if you say something like star or greater than it could very",
    "start": "750450",
    "end": "755940"
  },
  {
    "text": "easily break your your process because they'll introduce new functionality then when you run your CI CD process it's",
    "start": "755940",
    "end": "761820"
  },
  {
    "text": "that it's using that reference updated to the newer library and then all of a sudden all your testing fails you also",
    "start": "761820",
    "end": "768510"
  },
  {
    "text": "only want to package the runtime requirements for production this is typically for the example of machine",
    "start": "768510",
    "end": "774090"
  },
  {
    "text": "learning platforms that have a lot of code generation done as a step for them so the tools that you use for generating",
    "start": "774090",
    "end": "780690"
  },
  {
    "text": "code for your machine learning platforms for example you don't necessarily need that deployed in production because you only want the engine that's deployed so",
    "start": "780690",
    "end": "787350"
  },
  {
    "text": "you basically only want to make sure that only the things you need for executing your code in production are actually deployed in production and then",
    "start": "787350",
    "end": "794460"
  },
  {
    "text": "as a best practice you want to minimize changes in between each layers because like I mentioned docker is able to cache at the",
    "start": "794460",
    "end": "800910"
  },
  {
    "text": "layer level so you want to make sure that there's a little change between each layers possible to optimize the use of the caching and then I always",
    "start": "800910",
    "end": "807900"
  },
  {
    "text": "recommend a use of a docker ignore file because what that does is it basically gets you to exclude unneeded files they",
    "start": "807900",
    "end": "815339"
  },
  {
    "text": "are you the example of stuff that for example a machine learning platform you don't need the things that you use to generate code as a part of it so you can",
    "start": "815339",
    "end": "822180"
  },
  {
    "text": "put docker ignore so it doesn't become a part of your image so when so when I'm",
    "start": "822180",
    "end": "827670"
  },
  {
    "text": "referring to building a docker image what I'm really talking about is taking all your source code and all the things that you you have as your dependencies",
    "start": "827670",
    "end": "833790"
  },
  {
    "text": "and turning those into an image that's one of the things that code Bill is able to do for you and offer as a service it",
    "start": "833790",
    "end": "839910"
  },
  {
    "text": "allows you to build and and also test your code and as I mentioned before for ECS it's able to actually deploy a",
    "start": "839910",
    "end": "845550"
  },
  {
    "text": "service to ECS from UCR for you as well it's scale it's continuous scaling it's",
    "start": "845550",
    "end": "850980"
  },
  {
    "text": "pay-as-you-go pricing question I get frequently asked by customers is do I have to pay for this for this entire",
    "start": "850980",
    "end": "856950"
  },
  {
    "text": "build environment yes for when you're using it when you're not executing a bill there's no it's pay-as-you-go so",
    "start": "856950",
    "end": "862680"
  },
  {
    "text": "you never pay for any idle time it's fairly extensible there's hooks into it from all sorts of services and",
    "start": "862680",
    "end": "868530"
  },
  {
    "text": "third-party tools you can have Jenkins called a code build you can have code bill called Jenkins there's lots of",
    "start": "868530",
    "end": "875070"
  },
  {
    "text": "other tools like I mentioned the selenium tools as well blase meters another one for performance density testing there's all sorts of integration",
    "start": "875070",
    "end": "881580"
  },
  {
    "text": "points between code bill and third-party tools so when it comes to a docker image",
    "start": "881580",
    "end": "887220"
  },
  {
    "text": "this is what's known as a bill specification and it breaks down into what's known as phases for deploying a",
    "start": "887220",
    "end": "893250"
  },
  {
    "text": "docker application the the base phase is install and that's where you do things like packages that are needed to set up",
    "start": "893250",
    "end": "899880"
  },
  {
    "text": "your environment this bill spec is what's going to get executed as your code build so typically an install you",
    "start": "899880",
    "end": "907560"
  },
  {
    "text": "do stuff like testing frameworks pre bill is where you execute steps that you need to run before you you actually run",
    "start": "907560",
    "end": "914670"
  },
  {
    "text": "your actual build so an example of this is login to an ECR so if you or if you have some sort of a private registry you",
    "start": "914670",
    "end": "921450"
  },
  {
    "text": "can do login to that private registry in that step the bill step is where you actually execute things like your",
    "start": "921450",
    "end": "927870"
  },
  {
    "text": "compiling your code you're running your bill process whatever the billed executable it is for",
    "start": "927870",
    "end": "933000"
  },
  {
    "text": "you you can also execute testing in that phase as well or you could do the post",
    "start": "933000",
    "end": "938520"
  },
  {
    "text": "built step for testing as well and then post Bill is things that you want to run either after success or failure so an",
    "start": "938520",
    "end": "945060"
  },
  {
    "text": "example of that is post bill would be if you had testing inside of your bill step you could do post bill commit to an ECR",
    "start": "945060",
    "end": "952080"
  },
  {
    "text": "repository or build a jar file so this is an actual bill specification which is",
    "start": "952080",
    "end": "958589"
  },
  {
    "text": "remarkably similar to the one that I'm going to show in the demo and as you can see the pre bill commands include a",
    "start": "958589",
    "end": "964529"
  },
  {
    "text": "logon into a docker registry and the bill command is pretty simple it's just",
    "start": "964529",
    "end": "969959"
  },
  {
    "text": "docker build and then the post bill is the one that actually pushes the image to ECR now take a note of the artifacts",
    "start": "969959",
    "end": "977250"
  },
  {
    "text": "the images JSON because that's actually a hook into code bill that can be used for later steps in your code bill this",
    "start": "977250",
    "end": "986160"
  },
  {
    "text": "section right here so in terms of best",
    "start": "986160",
    "end": "993000"
  },
  {
    "text": "practices you want to tag output artifacts the source control revisions you want to have some meaning to what's",
    "start": "993000",
    "end": "999959"
  },
  {
    "text": "actually in your repository you don't want it to be you don't want to use like",
    "start": "999959",
    "end": "1005060"
  },
  {
    "text": "you know like references to things like that you want to be explicit the reason why is over time you want to be able to",
    "start": "1005060",
    "end": "1011720"
  },
  {
    "text": "say version X matches this version of what the code looks like and using just references to refer that it becomes",
    "start": "1011720",
    "end": "1017720"
  },
  {
    "text": "complicated over time and that and that also you use you want to avoid using things like latest or production tags as",
    "start": "1017720",
    "end": "1023690"
  },
  {
    "text": "a part of your build process because it you will suffer from the same thing again as when I mentioned before having",
    "start": "1023690",
    "end": "1028699"
  },
  {
    "text": "something like star as a dependency because you can run into a simpler issue with that and then you want to optimize your bill for speed nothing will get",
    "start": "1028699",
    "end": "1035329"
  },
  {
    "text": "your developers to stop using a CI CD process other than the fact that it takes forever so there's a lot of",
    "start": "1035329",
    "end": "1040670"
  },
  {
    "text": "different things you can do like caching image layers deploying localized docker",
    "start": "1040670",
    "end": "1047089"
  },
  {
    "text": "docker repositories in fact docker has a capability built in known as docker cache we can actually have a local cache",
    "start": "1047089",
    "end": "1054290"
  },
  {
    "text": "running on one of your boxes such that all the the image the containers that use that image can use that local",
    "start": "1054290",
    "end": "1059990"
  },
  {
    "text": "version rather than go through the network a little something the other thing is you also want to consider co-locating",
    "start": "1059990",
    "end": "1065289"
  },
  {
    "text": "your bill process with your artifact repository this really comes in for folks who are using something like",
    "start": "1065289",
    "end": "1070419"
  },
  {
    "text": "Jenkins where they may be running on Prem Jenkins and then pulling stuff from something like some third-party source",
    "start": "1070419",
    "end": "1076509"
  },
  {
    "text": "control tool that's just gonna add a lot of time and so you want to reduce those things as much as you can so when it",
    "start": "1076509",
    "end": "1084850"
  },
  {
    "text": "comes to deploying docker containers what we're referring to here is going from that single image that you've",
    "start": "1084850",
    "end": "1090279"
  },
  {
    "text": "worked spend a lot of time working on and that now it achieves everything that you need it to how do you take it from",
    "start": "1090279",
    "end": "1095320"
  },
  {
    "text": "that and get to here which is lots and lots of images deployed in lots and lots of container hosts so we launched it a",
    "start": "1095320",
    "end": "1102539"
  },
  {
    "text": "CCS Fargate back in reinvent last year and it is it is now available in general",
    "start": "1102539",
    "end": "1109870"
  },
  {
    "text": "availability and Fargate the real the real thing or Fargate is that it allows you to deploy containers with as minimal",
    "start": "1109870",
    "end": "1116590"
  },
  {
    "text": "effort on your part in terms of maintaining your cluster and in maintaining the resources that make up",
    "start": "1116590",
    "end": "1121690"
  },
  {
    "text": "your your your container deployment if you go into the console now you will",
    "start": "1121690",
    "end": "1127149"
  },
  {
    "text": "actually see two options for deploying something inside of ECS you'll see far gate and ec2 you can actually have a",
    "start": "1127149",
    "end": "1133659"
  },
  {
    "text": "cluster to consist of both ec2 resources and far gates so you could technically have services that are running on either",
    "start": "1133659",
    "end": "1139509"
  },
  {
    "text": "ec2 or ECS at the same is in the same cluster and there may be some advantages to doing that actually so in terms of",
    "start": "1139509",
    "end": "1147309"
  },
  {
    "text": "running container far get containers of ECS it's the same task definition schema for ECS at Fargate as it is for ec2 you",
    "start": "1147309",
    "end": "1154809"
  },
  {
    "text": "use ECS api's to launch Fargate containers so basically if you had scripts that worked really well for",
    "start": "1154809",
    "end": "1160649"
  },
  {
    "text": "previously with ECS they should work fairly well with Fargate as well and the idea behind this is that you should have",
    "start": "1160649",
    "end": "1166809"
  },
  {
    "text": "an easy migration from running Fargate tasks to from running ec2 tasks to",
    "start": "1166809",
    "end": "1172419"
  },
  {
    "text": "Fargate tasks and like I mentioned you could have them run in the same cluster",
    "start": "1172419",
    "end": "1177450"
  },
  {
    "text": "so in terms of best practices for Fargate we recommend use so you have what's known as a health check for a",
    "start": "1177450",
    "end": "1184210"
  },
  {
    "text": "container which is a little script you can execute to be able to test whether or not your content your container is",
    "start": "1184210",
    "end": "1189429"
  },
  {
    "text": "actually meeting what it needs to an example of this would be something like curl local host for some particular",
    "start": "1189429",
    "end": "1195790"
  },
  {
    "text": "path that could be an example of something you do for a container health check but then we would recommend also",
    "start": "1195790",
    "end": "1201880"
  },
  {
    "text": "deploying ELB health checks to prevent botched deploys because what can end up with that is that you know if your especially",
    "start": "1201880",
    "end": "1207760"
  },
  {
    "text": "from if it's an application that's serving out to a load balancer you want to make sure that it's able to respond and that that if there's any issue with",
    "start": "1207760",
    "end": "1214390"
  },
  {
    "text": "increased latency or anything like that you can have them take advantage of CSS",
    "start": "1214390",
    "end": "1219400"
  },
  {
    "text": "ability to restart something or deploy a new container task to replace something that's not responding you also want to",
    "start": "1219400",
    "end": "1226600"
  },
  {
    "text": "incorporate integrate automated testing into your C ICD pipeline the example I'm gonna demo does not include any specific",
    "start": "1226600",
    "end": "1232480"
  },
  {
    "text": "testing but it's always if you want to gain confidence be able to move towards can continuous delivery rather than just",
    "start": "1232480",
    "end": "1238180"
  },
  {
    "text": "have a manual deployment step because it's one of the first things that folks to do is that they first implement continuous integration but then have",
    "start": "1238180",
    "end": "1245470"
  },
  {
    "text": "only a manual step from moving into production to get confidence in that what you want to do is eventually have",
    "start": "1245470",
    "end": "1251920"
  },
  {
    "text": "enough testing for you to be comfortable actually having continuous delivery and what that typically involves is the",
    "start": "1251920",
    "end": "1257800"
  },
  {
    "text": "deployment of what's known as a canary so therefore instead of just deploying through a production environment first",
    "start": "1257800",
    "end": "1262960"
  },
  {
    "text": "you want to deploy it as some sort of canary environment do sufficient testing on that canary environment and have that",
    "start": "1262960",
    "end": "1268480"
  },
  {
    "text": "canary environment completely replicate your production environment so you can be confident in then having it deploy to",
    "start": "1268480",
    "end": "1274210"
  },
  {
    "text": "production automatically and then another thing we recommend is that ensure you're back in your application",
    "start": "1274210",
    "end": "1280360"
  },
  {
    "text": "back-end can function the same for adjacent releases it's just something about minimizing change because it then",
    "start": "1280360",
    "end": "1286930"
  },
  {
    "text": "becomes easier for you to recognize that oh oh my gosh type thing which is a situation where you didn't plan for it",
    "start": "1286930",
    "end": "1292210"
  },
  {
    "text": "and it's just like how do we now interpret what may have changed so this just the best practice so how do you",
    "start": "1292210",
    "end": "1299680"
  },
  {
    "text": "deploy a deployment pipeline what a deployment pipeline refers to is a process for getting your software from",
    "start": "1299680",
    "end": "1305890"
  },
  {
    "text": "version control in the hands of your customers so whatever the parts and the components that make up that for you",
    "start": "1305890",
    "end": "1311380"
  },
  {
    "text": "that's what you refer to as your deployment pipeline typical deployment pipeline will be you move from source to",
    "start": "1311380",
    "end": "1318160"
  },
  {
    "text": "build to test to production and in terms of orchestration they're meant many different options I'm going to be",
    "start": "1318160",
    "end": "1324460"
  },
  {
    "text": "talking a lot about code pipeline today and the great thing about code pipeline is it's - its it's a way to orchestrate your",
    "start": "1324460",
    "end": "1331210"
  },
  {
    "text": "build it gives you a visual workflow for determining your build and then you can also do things like not just build we",
    "start": "1331210",
    "end": "1338020"
  },
  {
    "text": "can also test and deploy the new revision based off of code changes there's very good integration between a",
    "start": "1338020",
    "end": "1343990"
  },
  {
    "text": "SS services for example code pipeline can use s3 for artifacts you can use",
    "start": "1343990",
    "end": "1349390"
  },
  {
    "text": "code pipeline to call other third party platforms you can also extend your",
    "start": "1349390",
    "end": "1355690"
  },
  {
    "text": "pipelines using things like lambda so you can do custom language lambdas or",
    "start": "1355690",
    "end": "1360700"
  },
  {
    "text": "custom actions and then you can do things like manual approver steps as well so if you don't have continuous",
    "start": "1360700",
    "end": "1366190"
  },
  {
    "text": "delivery you can still incorporate a manual approval step as a part of a code pipeline orchestration so this is",
    "start": "1366190",
    "end": "1372850"
  },
  {
    "text": "actually what you will see in the console if you were to open up the the demo application which I'll show in a second this is what it would look like",
    "start": "1372850",
    "end": "1379180"
  },
  {
    "text": "in cook this is what it looks like in code pipeline and you see the this is the whole thing is the actual pipeline",
    "start": "1379180",
    "end": "1384600"
  },
  {
    "text": "the stages are the individual blocks and then the transitions are the movements from and so you can see for this example",
    "start": "1384600",
    "end": "1391120"
  },
  {
    "text": "for source I'm using a SS code commit for build I'm using code build and then",
    "start": "1391120",
    "end": "1397450"
  },
  {
    "text": "once it's built successfully I'm using I'm using ECS to actually do staging",
    "start": "1397450",
    "end": "1403030"
  },
  {
    "text": "into a running service so the big",
    "start": "1403030",
    "end": "1408640"
  },
  {
    "text": "takeaway of your pipeline is your developers are hard at work developing the new new features that your customers",
    "start": "1408640",
    "end": "1414790"
  },
  {
    "text": "are asking for they do commit into a sub sort of source control repository in",
    "start": "1414790",
    "end": "1419950"
  },
  {
    "text": "this example code commit that triggers an orchestration for your build in this example using code pipeline that code",
    "start": "1419950",
    "end": "1427390"
  },
  {
    "text": "pipeline will trigger a build use running on a SS code build which when it's completed will push an image into e",
    "start": "1427390",
    "end": "1433720"
  },
  {
    "text": "CR and e CR and then code bill will also push that image that's now committed",
    "start": "1433720",
    "end": "1439300"
  },
  {
    "text": "into e CS and then replace it with our functioning service so this is also the",
    "start": "1439300",
    "end": "1444670"
  },
  {
    "text": "high level architecture for for the example application I'll so soon so the",
    "start": "1444670",
    "end": "1450160"
  },
  {
    "text": "thing about this is that this is this is a very basic C ICD pipeline but you can see already that using these individual",
    "start": "1450160",
    "end": "1457150"
  },
  {
    "text": "components you can actually greatly expand this to include much more functionality for example with code Bill",
    "start": "1457150",
    "end": "1462370"
  },
  {
    "text": "you can incorporate any manner of testing you can do low testing user acceptance testing integration testing run testing",
    "start": "1462370",
    "end": "1468999"
  },
  {
    "text": "frameworks like selenium visual testing tools all sorts and then we have third-party integrations in the bill for",
    "start": "1468999",
    "end": "1475029"
  },
  {
    "text": "execute executing different types of testing but you could also do something as a very basic example is if you have a",
    "start": "1475029",
    "end": "1480549"
  },
  {
    "text": "bunch of selenium tests you could have a kacheng Keynes job that's executing as a step in a code bill and then have that",
    "start": "1480549",
    "end": "1486129"
  },
  {
    "text": "be what determines your next step as a part of your pipeline so let me actually",
    "start": "1486129",
    "end": "1493239"
  },
  {
    "text": "get into the demo so in this example I'm",
    "start": "1493239",
    "end": "1501070"
  },
  {
    "text": "how many folks here have used cloud 9 how many folks love cloud 9 I'm a big",
    "start": "1501070",
    "end": "1507519"
  },
  {
    "text": "fan of cloud 9 anything that gets me to not have to worry about setting up a development environment makes me happy",
    "start": "1507519",
    "end": "1513729"
  },
  {
    "text": "so I love that so in this example this is editing cloud 9 and I'm using the",
    "start": "1513729",
    "end": "1519219"
  },
  {
    "text": "editor in cloud 9 and I'm gonna modify the source code one of the things I'm",
    "start": "1519219",
    "end": "1529599"
  },
  {
    "text": "going to do here is that cloud 9 has built-in support for previewing your application so as I so as soon as I do",
    "start": "1529599",
    "end": "1535869"
  },
  {
    "text": "the testing here I'm actually going to run a preview of it once it's saved and",
    "start": "1535869",
    "end": "1543309"
  },
  {
    "text": "you can actually run it and you can actually determine the commands inside of you enter that as a setting in cloud 9 and so now you can actually preview it",
    "start": "1543309",
    "end": "1552089"
  },
  {
    "text": "it's always a best practice to run code locally before you push it somewhere else because like I said if you're doing",
    "start": "1552929",
    "end": "1559029"
  },
  {
    "text": "a CI CD pipeline it's gonna actually trigger your bill once you do a commit",
    "start": "1559029",
    "end": "1564118"
  },
  {
    "text": "so it's actually running now and it actually if you scroll down you'll see the change that I made to the code is",
    "start": "1576960",
    "end": "1583080"
  },
  {
    "text": "not reflected to match how many folks were happy that we now have pug instead of I forget what the other engine was",
    "start": "1583080",
    "end": "1589860"
  },
  {
    "text": "before we had pug that was very common would Express how many folks have any idea what pug is okay cool so it's it's",
    "start": "1589860",
    "end": "1598680"
  },
  {
    "text": "like note is one of the things that one of the biggest jokes inside of noble developments is how many rendering",
    "start": "1598680",
    "end": "1604350"
  },
  {
    "text": "engines there are for different platforms and it's it's kind of hilarious how often this changes but",
    "start": "1604350",
    "end": "1609690"
  },
  {
    "text": "it's just it's just a detail here so I'm actually checking in and actually pushing it out into the source control",
    "start": "1609690",
    "end": "1615390"
  },
  {
    "text": "repository and since this is a CIC DPAC line that commits will actually trigger",
    "start": "1615390",
    "end": "1621870"
  },
  {
    "text": "a build and that's why the next screen I'll see is the code commit and that",
    "start": "1621870",
    "end": "1627720"
  },
  {
    "text": "Lenny advances a little bit it takes a few seconds but once the once the commit is happened it's gonna trigger a build",
    "start": "1627720",
    "end": "1633650"
  },
  {
    "text": "and the build should start about here so",
    "start": "1633650",
    "end": "1641280"
  },
  {
    "text": "now it's actually running a build and in this example the since since this pipeline is using build for both build",
    "start": "1641280",
    "end": "1648210"
  },
  {
    "text": "and staging that once this build is complete it's actually going to do staging to ECS so it actually takes",
    "start": "1648210",
    "end": "1656610"
  },
  {
    "text": "quite a few minutes to actually stage to ECS I'm going to skip forward here",
    "start": "1656610",
    "end": "1663620"
  },
  {
    "text": "okay so now that it's actually completed deploying to ECS if you go into the",
    "start": "1667780",
    "end": "1673730"
  },
  {
    "text": "deployments section you will into the tasks section you'll see the list of tasks that are running and then you'll",
    "start": "1673730",
    "end": "1679760"
  },
  {
    "text": "notice that it would when Fargate when you you see there's two different versions of the library that's deployed",
    "start": "1679760",
    "end": "1684980"
  },
  {
    "text": "that's because when you trigger the deployment I'm using a doubling for the",
    "start": "1684980",
    "end": "1690770"
  },
  {
    "text": "deployment there's lots of different options you have for how you want to do deployment you could do doubling you could just do blue green we're using",
    "start": "1690770",
    "end": "1697490"
  },
  {
    "text": "some sort of DNS there's a lot of different options you have for this example I'm using doubling and what that does is that it as it deploys a new",
    "start": "1697490",
    "end": "1704240"
  },
  {
    "text": "service and Fargate will spin up and provision your resources the real value of Fargate is that you don't have to worry about this you about allocating",
    "start": "1704240",
    "end": "1711290"
  },
  {
    "text": "resources for this all you say to Fargate is that here's my task definition here's something like a",
    "start": "1711290",
    "end": "1716600"
  },
  {
    "text": "service and then here's here's how many of those that i need deployed and Fargate will take care of provisioning",
    "start": "1716600",
    "end": "1722870"
  },
  {
    "text": "fact for you in an example of a doubling what'll end up happening is that if you have I in this example I have two",
    "start": "1722870",
    "end": "1729350"
  },
  {
    "text": "services two tasks running for the service it's going to add an additional two tasks and then the old so the the",
    "start": "1729350",
    "end": "1736010"
  },
  {
    "text": "existing service that's running with the old version will eventually connection drain and then all the new load balancer",
    "start": "1736010",
    "end": "1742340"
  },
  {
    "text": "requests will go to the new service with the new version of the library or the new version of the application and then",
    "start": "1742340",
    "end": "1750590"
  },
  {
    "text": "you can actually go into code build into",
    "start": "1750590",
    "end": "1756530"
  },
  {
    "text": "the task definition you can see the deployments itself and you can see that it's actually started up in this example",
    "start": "1756530",
    "end": "1761600"
  },
  {
    "text": "two new tasks for the for the new service and let me jump forward here it",
    "start": "1761600",
    "end": "1767300"
  },
  {
    "text": "takes a few minutes for it to actually upload but eventually you're gonna get to here where there's like I said it's",
    "start": "1767300",
    "end": "1775730"
  },
  {
    "text": "doing a doubling so there's two news new two tasks deployed for the service and two old tasks and eventually those tasks",
    "start": "1775730",
    "end": "1782690"
  },
  {
    "text": "they're gonna become running and then that's gonna be responding to your load balance of requests so it's a basic way",
    "start": "1782690",
    "end": "1787820"
  },
  {
    "text": "of doing a deployment it's a low-risk way because what you're doing is that all in-flight requests is gonna get",
    "start": "1787820",
    "end": "1792890"
  },
  {
    "text": "responded to you should not have any drop requests and especially because it's connection during so if there's any existing requests it's gonna always",
    "start": "1792890",
    "end": "1799070"
  },
  {
    "text": "respond to those and eventually you should come here to",
    "start": "1799070",
    "end": "1807080"
  },
  {
    "text": "where it updates the service so now the load balancer that's pointing at the service is now seen the new version of",
    "start": "1807080",
    "end": "1812360"
  },
  {
    "text": "the application and it's deployed so let me show a little bit of how this actually looks inside of code pipeline",
    "start": "1812360",
    "end": "1821739"
  },
  {
    "text": "so inside of code pipeline in the you have the code commit step it's like I said this is a very simple pipeline it",
    "start": "1821739",
    "end": "1827749"
  },
  {
    "text": "only has three steps the first step it looks for changes from the application from the source control repository the",
    "start": "1827749",
    "end": "1835399"
  },
  {
    "text": "next step does a build there's code pipeline supports a bunch of different bill providers in this example I'm using",
    "start": "1835399",
    "end": "1841730"
  },
  {
    "text": "a code bill provider that builds a docker image and then in turn in this",
    "start": "1841730",
    "end": "1846830"
  },
  {
    "text": "staging is another code bill step that pushes to ECS and now I specify there is",
    "start": "1846830",
    "end": "1852320"
  },
  {
    "text": "the service name and they and the cluster and that's about it a couple",
    "start": "1852320",
    "end": "1863299"
  },
  {
    "text": "other things to say too is that if you actually go into the CCS console if you",
    "start": "1863299",
    "end": "1869119"
  },
  {
    "text": "deploy your application into ECS there's actually a tab under the the deployments",
    "start": "1869119",
    "end": "1874909"
  },
  {
    "text": "tab inside of ECS where you can generate actually a code pipeline it's it's a kind of a handy accelerator that we do",
    "start": "1874909",
    "end": "1881720"
  },
  {
    "text": "for customers so what that'll do is that'll allow you to actually fill out your pipeline and it'll actually do the",
    "start": "1881720",
    "end": "1887029"
  },
  {
    "text": "bill it'll automatically fill out the bill step for you but you'll have to choose what your source control is to in",
    "start": "1887029",
    "end": "1892279"
  },
  {
    "text": "order to set up a trigger for your pipeline so it just makes it that's how I did the this example so it makes it",
    "start": "1892279",
    "end": "1897859"
  },
  {
    "text": "real easy but you can also just jump directly in code pipeline to come up with your orchestration as well so",
    "start": "1897859",
    "end": "1903769"
  },
  {
    "text": "that's all I had for a talk I have included the link for the for the the demo project it's handy-dandy note app",
    "start": "1903769",
    "end": "1910789"
  },
  {
    "text": "it uses like one of those node mappers it's kind of kind of interesting for what it does but you know the big",
    "start": "1910789",
    "end": "1915859"
  },
  {
    "text": "takeaway is like I said don't use Fargate necessarily to host a database consider using something similar server",
    "start": "1915859",
    "end": "1921409"
  },
  {
    "text": "less database and that's all I had for a talk I'm gonna be here for I have 16",
    "start": "1921409",
    "end": "1926840"
  },
  {
    "text": "minutes requesting so I can take lots of questions and since there's a break after I can take even more questions and",
    "start": "1926840",
    "end": "1932119"
  },
  {
    "text": "I've got probably another 20 30 minutes passage so for the next 35 minutes I'm just answering questions thank you so much oh",
    "start": "1932119",
    "end": "1950090"
  },
  {
    "text": "you can come up to the mic to ask questions or you can come up to sage whichever you prefer",
    "start": "1950090",
    "end": "1956059"
  },
  {
    "text": "sure",
    "start": "1956720",
    "end": "1959720"
  },
  {
    "text": "you would see that in the code commit console if you wanted to use the console so what that would do that could that",
    "start": "1972770",
    "end": "1979310"
  },
  {
    "text": "commit was writing to my local repository inside of cloud 9 and then when I did the push it was going to push",
    "start": "1979310",
    "end": "1985370"
  },
  {
    "text": "to the remote server the remote get server which in this case was a code commit server welco commit service so that it was",
    "start": "1985370",
    "end": "1992270"
  },
  {
    "text": "committing to a remote repository so that if so if you looked in the actual code commit console there's a tab called",
    "start": "1992270",
    "end": "1998210"
  },
  {
    "text": "commits if you click on that tab you would see all the commits that are made any other questions yeah I have a",
    "start": "1998210",
    "end": "2005050"
  },
  {
    "text": "question I think that guys on the mic first so sure how do you support enterprise bitbucket hooks for the code",
    "start": "2005050",
    "end": "2013210"
  },
  {
    "text": "pipeline say that again for the code pipeline how do you support Enterprise",
    "start": "2013210",
    "end": "2019330"
  },
  {
    "text": "bitbucket hooks like you have code comment right that will take the get",
    "start": "2019330",
    "end": "2025030"
  },
  {
    "text": "push notification and it will start your code pipeline but if you have to do the",
    "start": "2025030",
    "end": "2031240"
  },
  {
    "text": "same for bitbucket which is enterprise red bucket not the public one oh yeah",
    "start": "2031240",
    "end": "2037540"
  },
  {
    "text": "so in so pipeline supports Bill code code commit and github but what could",
    "start": "2037540",
    "end": "2045010"
  },
  {
    "text": "customers who do have Enterprise github and what they've used is they've done a process that basically checks out from",
    "start": "2045010",
    "end": "2052240"
  },
  {
    "text": "Enterprise github rights to an s3 bucket and then triggers their code pipeline based off of a right put to the s3",
    "start": "2052240",
    "end": "2059500"
  },
  {
    "text": "bucket and that's a general pattern you can use for any type of source control repository that we don't so we have a",
    "start": "2059500",
    "end": "2064720"
  },
  {
    "text": "push of a code from that bucket to s3 to support that kind of thing right but you could also do a lot or castrations like",
    "start": "2064720",
    "end": "2071500"
  },
  {
    "text": "lambda to do something else but the typical pattern I've seen is that they they do a check out to s3 and then so",
    "start": "2071500",
    "end": "2078730"
  },
  {
    "text": "something like you could do like a sync to an s3 bucket so that you don't write everything every time what's the",
    "start": "2078730",
    "end": "2084760"
  },
  {
    "text": "challenge that ADA bliss is not supporting that thing say that what is this challenge that we are not supporting directly on AWS for this",
    "start": "2084760",
    "end": "2092230"
  },
  {
    "text": "thing why do we have to go to way like first I push my code to bitbucket and",
    "start": "2092230",
    "end": "2098410"
  },
  {
    "text": "then from there it goes to s3 and then it takes to the pipeline why can't we go",
    "start": "2098410",
    "end": "2103990"
  },
  {
    "text": "directly from read bucket to to the court pay plane yeah because",
    "start": "2103990",
    "end": "2109840"
  },
  {
    "text": "there's not direct integration for it currently so like I said it supports code commit and github currently so it",
    "start": "2109840",
    "end": "2116440"
  },
  {
    "text": "they are I would not surprise me that they're working on integrating other source control repositories but the the",
    "start": "2116440",
    "end": "2121960"
  },
  {
    "text": "general pattern right now is to do a check out to s3 and then use the s3 put",
    "start": "2121960",
    "end": "2126970"
  },
  {
    "text": "as a trigger for your code pipeline okay thank you any other questions",
    "start": "2126970",
    "end": "2134640"
  },
  {
    "text": "yeah no I mean actually it works out pretty smoothly I mean you can use you can use any pipeline can work with any",
    "start": "2144740",
    "end": "2151910"
  },
  {
    "text": "sort of deployment mechanism you have whether it's Jenkins whether it's using something that's code build so I have",
    "start": "2151910",
    "end": "2157760"
  },
  {
    "text": "plenty of customers are using pipeline for orchestrating deployments of lambda as well one thing one pattern they use",
    "start": "2157760",
    "end": "2164300"
  },
  {
    "text": "is they deploy code from cloud formation and update dude lambda updates but there's actually from fairly",
    "start": "2164300",
    "end": "2169520"
  },
  {
    "text": "sophisticated stuff you can do for lambda I mean cloud formation is just one option but there's other things you can do to actually deploy your clout your",
    "start": "2169520",
    "end": "2176210"
  },
  {
    "text": "lambdas out there",
    "start": "2176210",
    "end": "2179080"
  },
  {
    "text": "so what type of external dependencies so",
    "start": "2192460",
    "end": "2197430"
  },
  {
    "text": "yeah I mean one of that's why it has the phases so you can do things like pull",
    "start": "2199350",
    "end": "2205840"
  },
  {
    "text": "something so you can incorporate it the best way to look at this is look at some of the things you would have to do for a",
    "start": "2205840",
    "end": "2211120"
  },
  {
    "text": "Jenkins job which is you would have to copy something into your workspace to be able to execute it you can do a similar",
    "start": "2211120",
    "end": "2216460"
  },
  {
    "text": "things with weird code build obviously the easiest thing to do is to put it in the s3 and then you can make leverage it",
    "start": "2216460",
    "end": "2222910"
  },
  {
    "text": "but there's you can do some similar things too that would code bill oh",
    "start": "2222910",
    "end": "2227910"
  },
  {
    "text": "alright sorry so I had one question on the ECS reference architecture under AWS samples",
    "start": "2231060",
    "end": "2238330"
  },
  {
    "text": "I think it is when you get up and that is when I first started using of the ec2 worked perfectly or ever and it still",
    "start": "2238330",
    "end": "2243550"
  },
  {
    "text": "works perfectly and I've been trying to transition that to Fargate and I'm having a hard time with that and I'm wondering if you have an easy to based",
    "start": "2243550",
    "end": "2249060"
  },
  {
    "text": "clustered mm-hm and creation with cloud formation and you want to switch it to Fargate you got to do more than just",
    "start": "2249060",
    "end": "2255760"
  },
  {
    "text": "change the deployment type to Fargate and I'm wondering if you would happen to know what that is and I haven't tried",
    "start": "2255760",
    "end": "2261190"
  },
  {
    "text": "this in a few weeks so I can't there was no specific error I was getting it just that the containers were",
    "start": "2261190",
    "end": "2266350"
  },
  {
    "text": "never able to I could never talk to the containers afterwards so I think it has something to do with subnets and I wasn't sure if that has anything if",
    "start": "2266350",
    "end": "2271840"
  },
  {
    "text": "that's an aspect of Fargate or what yeah because in Fargate you don't have the",
    "start": "2271840",
    "end": "2277300"
  },
  {
    "text": "the resources are not not the same as an ECG where you would actually spin up a",
    "start": "2277300",
    "end": "2282460"
  },
  {
    "text": "resource inside of your subnet so in that situation though you'd have gotten a much worse error before it's actually",
    "start": "2282460",
    "end": "2288130"
  },
  {
    "text": "got no errors yeah yeah so one of the things when you're deployed when you're debugging stuff inside of ECS is",
    "start": "2288130",
    "end": "2294700"
  },
  {
    "text": "definitely leverage the cloud watch because it'll provide you a certain amount of information there's also some",
    "start": "2294700",
    "end": "2299890"
  },
  {
    "text": "of the tabs inside of this this you can click on the task itself to actually see some debug information right and you",
    "start": "2299890",
    "end": "2306190"
  },
  {
    "text": "will typically get one on the actual task you will get some output that's a high level output which could also",
    "start": "2306190",
    "end": "2312400"
  },
  {
    "text": "include the container health check as well so if you did set up a container health check as a part of your image",
    "start": "2312400",
    "end": "2318310"
  },
  {
    "text": "specification it'll actually give you the output of that and then you can also look as on your EOB health check if it",
    "start": "2318310",
    "end": "2324970"
  },
  {
    "text": "gets that far so so yeah definitely look inside go into the console and then click on the",
    "start": "2324970",
    "end": "2331089"
  },
  {
    "text": "task and you'll see some more information on what's happening sure so regarding the code commit does",
    "start": "2331089",
    "end": "2340210"
  },
  {
    "text": "it have option to you know pre-commit hooks like I mean can I pass custom scripts where it can do the code",
    "start": "2340210",
    "end": "2347079"
  },
  {
    "text": "formatting validations and you know the general stuff so like get hooks you right yeah yeah I mean I even used one",
    "start": "2347079",
    "end": "2353380"
  },
  {
    "text": "called get secrets in my earlier talk today I showed how we I was using code commit we'd get secrets so that's just a",
    "start": "2353380",
    "end": "2359859"
  },
  {
    "text": "that's local repository though so the only question is maybe if it's something that's a git server plug-in that maybe",
    "start": "2359859",
    "end": "2366910"
  },
  {
    "text": "some question about support for that but it'll most of the stuff I've worked with that that references the local",
    "start": "2366910",
    "end": "2372190"
  },
  {
    "text": "repository seems to work fine because it's very compatible with git well like",
    "start": "2372190",
    "end": "2381700"
  },
  {
    "text": "I said the only the only caution I would give of that is things that occur on the remote repository because that the",
    "start": "2381700",
    "end": "2387760"
  },
  {
    "text": "permissions model is different for Co commit than for a regular get but the stuff inside of your local repository",
    "start": "2387760",
    "end": "2394299"
  },
  {
    "text": "like I've used plugins for local repository not had any problem that is a",
    "start": "2394299",
    "end": "2399609"
  },
  {
    "text": "question you mentioned earlier you start talking about reproducibility for certain builds version pinning and that",
    "start": "2399609",
    "end": "2406900"
  },
  {
    "text": "sort of thing I work in the DoD space so",
    "start": "2406900",
    "end": "2412180"
  },
  {
    "text": "we're talking about build reproducibility from several years ago when you start moving to a CI CD scale",
    "start": "2412180",
    "end": "2419290"
  },
  {
    "text": "of hey I'm constantly deploying things out well what does that reproducibility timeline look for you because I've seen",
    "start": "2419290",
    "end": "2427000"
  },
  {
    "text": "some other DevOps workshops where they're talking about what kind of one person mentioned pulling that pinning back so you can get more frequent",
    "start": "2427000",
    "end": "2434140"
  },
  {
    "text": "updates easier on every deployment and then having your build break should a",
    "start": "2434140",
    "end": "2439520"
  },
  {
    "text": "fail so what do you think what your opinion is on that sweet spot and why so",
    "start": "2439520",
    "end": "2445610"
  },
  {
    "text": "when you say I mean reproducibility means your bill should always work if you have to specify a different a",
    "start": "2445610",
    "end": "2451730"
  },
  {
    "text": "specific version it should work moving forward the things that break that is stuff like references so using something",
    "start": "2451730",
    "end": "2458420"
  },
  {
    "text": "like latest as a dependency or star for a dependency so reproducibility should always be moving forward now it may take",
    "start": "2458420",
    "end": "2465620"
  },
  {
    "text": "you some time to get to that because especially if you start with a large code base there may be lots of references that are old so they may take",
    "start": "2465620",
    "end": "2472190"
  },
  {
    "text": "you some time but it is a good goal to get to because it's not there's a couple of things for reproducibility one is",
    "start": "2472190",
    "end": "2478040"
  },
  {
    "text": "it's quicker to roll back so that's one thing that reproduces it gives you the other thing it gives you is that it's",
    "start": "2478040",
    "end": "2485500"
  },
  {
    "text": "imagine a situation where something nasty shows up that a lot of people knew about on the internet it would be good",
    "start": "2485500",
    "end": "2492020"
  },
  {
    "text": "for you to understand when that issue became an issue so being able to replay a build from a year ago is tear is",
    "start": "2492020",
    "end": "2497840"
  },
  {
    "text": "definitely as to your security and you know I know for your DoD space the concept of concepts is a big deal so",
    "start": "2497840",
    "end": "2504500"
  },
  {
    "text": "where you have your your compliance needs as well as these security operations need met so definitely being",
    "start": "2504500",
    "end": "2511280"
  },
  {
    "text": "able to reproduce as quickly as you can is a great goal but like I said it may take you time to get to that because of",
    "start": "2511280",
    "end": "2517370"
  },
  {
    "text": "a large code base",
    "start": "2517370",
    "end": "2520180"
  },
  {
    "text": "sure for deploying small-scale web applications have you slammed it before",
    "start": "2523550",
    "end": "2529700"
  },
  {
    "text": "why would one consider using more migrating to Fargo and do similar CICE",
    "start": "2529700",
    "end": "2535640"
  },
  {
    "text": "tools exist for lambda yeah I mean you can use code bill with lambda you could",
    "start": "2535640",
    "end": "2541340"
  },
  {
    "text": "you could deploy lambda like I mentioned before you could deploy lambda using cloud formation so if you have custom",
    "start": "2541340",
    "end": "2547790"
  },
  {
    "text": "code you can actually push it out using cloud formation so nothing stopping you from doing that why would you consider",
    "start": "2547790",
    "end": "2554960"
  },
  {
    "text": "lambda versus Fargate one of the use cases that I that I mentioned why you",
    "start": "2554960",
    "end": "2561500"
  },
  {
    "text": "would consider lambda versus Fargate is if you have some sort of process where",
    "start": "2561500",
    "end": "2566620"
  },
  {
    "text": "being able to set up your execution may take a certain amount of time you know",
    "start": "2566620",
    "end": "2572840"
  },
  {
    "text": "and then also so you have a situation where to be able to execute your particular API there may be a certain",
    "start": "2572840",
    "end": "2578120"
  },
  {
    "text": "amount of setup doing something like that would lambda it's certainly possible but then you have the lot the",
    "start": "2578120",
    "end": "2583190"
  },
  {
    "text": "lambda execution time out and then you also have you know the the overhead of actually when lambda scales something",
    "start": "2583190",
    "end": "2589070"
  },
  {
    "text": "out which is they could have lots of say you don't want to necessarily add that to your process whereas if you run it in",
    "start": "2589070",
    "end": "2594800"
  },
  {
    "text": "the container you know it's always there it's ready to be able to execute and you can actually control you can the",
    "start": "2594800",
    "end": "2600800"
  },
  {
    "text": "scalability of it so those are the reasons why you would compare to but it really hard the only hard fast I can say",
    "start": "2600800",
    "end": "2608600"
  },
  {
    "text": "is it do you need longer than five minutes execution that's one hard fast and then the other is do you want to have something",
    "start": "2608600",
    "end": "2613790"
  },
  {
    "text": "repeatable a million times without any pre-warming excuse me yep",
    "start": "2613790",
    "end": "2623619"
  },
  {
    "text": "far gate can be used in like deploying software and unpromising",
    "start": "2624770",
    "end": "2630050"
  },
  {
    "text": "VMs or something no forget is our managed service so when you can use",
    "start": "2630050",
    "end": "2635150"
  },
  {
    "text": "docker on-prem running into whichever docker engine you want but Fargate is running in a SS question sure here",
    "start": "2635150",
    "end": "2646960"
  },
  {
    "text": "no faregates only operating mode right now is networking mode is a SS V PC",
    "start": "2648480",
    "end": "2653860"
  },
  {
    "text": "which is basically TAS networking your TAS gets an e ni",
    "start": "2653860",
    "end": "2659190"
  },
  {
    "text": "you can map your tasks to a task to a to a target group for alb and then as it",
    "start": "2665999",
    "end": "2674429"
  },
  {
    "text": "scales it'll it'll just add new new rep in that your ELB will then just add",
    "start": "2674429",
    "end": "2680999"
  },
  {
    "text": "those instances to the target rep automatically one of the coolest things to do is actually go into the console",
    "start": "2680999",
    "end": "2686099"
  },
  {
    "text": "for your for your target group and if you have a if you have a tart Fargate",
    "start": "2686099",
    "end": "2691379"
  },
  {
    "text": "service tied to that target group you will see lots and lots of instances listed it's kind of cool so yep so is is",
    "start": "2691379",
    "end": "2700139"
  },
  {
    "text": "faregates similar to kubernetes and what are the differences there so I would say",
    "start": "2700139",
    "end": "2707509"
  },
  {
    "text": "the analogy between kubernetes and ECS probably exists right kubernetes is a",
    "start": "2707509",
    "end": "2715019"
  },
  {
    "text": "schedule engine and ECS is a scheduling engine for containers Fargate is the way",
    "start": "2715019",
    "end": "2722279"
  },
  {
    "text": "to think of Fargate is it's a different way in apportioning resources for your container tasks whereas with kubernetes",
    "start": "2722279",
    "end": "2729029"
  },
  {
    "text": "you're you're they're setting up pods and you're setting up worker nodes or whatever the paradigm you're using for",
    "start": "2729029",
    "end": "2735029"
  },
  {
    "text": "controlling container and nodes in Fargate all you're worrying about is your image and then you're specifying",
    "start": "2735029",
    "end": "2741539"
  },
  {
    "text": "that your image I wanted to use this much resource and then Fargate will take care of those resources for you in",
    "start": "2741539",
    "end": "2750509"
  },
  {
    "text": "previous lesson I have heard that I mean I serve this like lambda and all the stuff it could handle web apps and web",
    "start": "2750509",
    "end": "2757619"
  },
  {
    "text": "application and all that stuff I know that there's a five-minute time I'll but as the as the technology mature is to to",
    "start": "2757619",
    "end": "2767789"
  },
  {
    "text": "poi Web Apps is it better the use of less or is it better to stick with containers that's a pretty large",
    "start": "2767789",
    "end": "2775409"
  },
  {
    "text": "question I don't think I could answer that I mean there are web frameworks for",
    "start": "2775409",
    "end": "2780569"
  },
  {
    "text": "lambda and in fact if you go to server less calm there's a lot of resources",
    "start": "2780569",
    "end": "2786149"
  },
  {
    "text": "available on using servlets for a lot of different use cases so yeah that's a pretty broad question I mean it's",
    "start": "2786149",
    "end": "2792579"
  },
  {
    "text": "and in fact what you find is folks there's combinations of things there are things that fit lambda serverless really",
    "start": "2792579",
    "end": "2799209"
  },
  {
    "text": "well and they're things that fit containers even within one application I have lots of customers who are using applications and include microcircuit",
    "start": "2799209",
    "end": "2806890"
  },
  {
    "text": "lambda as well as micro services that are running on containers so the answer is that it's a pretty broad question",
    "start": "2806890",
    "end": "2814709"
  },
  {
    "text": "like update definition do we update that in code be the update task definition so",
    "start": "2819839",
    "end": "2826599"
  },
  {
    "text": "that in the example I was showing that was actually occurring as a part of the build staging so it if you looked at if",
    "start": "2826599",
    "end": "2833709"
  },
  {
    "text": "if you look at the pipeline and they'll make the video that's available so you can stop it to see but the pipeline",
    "start": "2833709",
    "end": "2839019"
  },
  {
    "text": "actually has an EC s staging step and that's actually running code build and it's actually saying deploy this this",
    "start": "2839019",
    "end": "2845519"
  },
  {
    "text": "updated image to the the service and then my bill specification gives the tag",
    "start": "2845519",
    "end": "2852819"
  },
  {
    "text": "based off of what was just built okay and then that's what makes the ECS ECS",
    "start": "2852819",
    "end": "2858729"
  },
  {
    "text": "pull that latest version and pushes it to easiest easiest more comparable to d",
    "start": "2858729",
    "end": "2869739"
  },
  {
    "text": "cos with d cos i am not familiar with",
    "start": "2869739",
    "end": "2875559"
  },
  {
    "text": "that ok i'm not familiar with that so i wouldn't be able to major sphere DCOs",
    "start": "2875559",
    "end": "2883140"
  },
  {
    "text": "data center operating system yeah no",
    "start": "2883140",
    "end": "2888969"
  },
  {
    "text": "problem second question is a is more on the how do we test cloud formation so we",
    "start": "2888969",
    "end": "2896890"
  },
  {
    "text": "have a Jenkins pipeline which does a cloud formation builds and deploys in",
    "start": "2896890",
    "end": "2905229"
  },
  {
    "text": "order to do that testing how do we do automated testing like what the customers usually yeah the talk we I had",
    "start": "2905229",
    "end": "2912819"
  },
  {
    "text": "earlier today was exactly that which is in that example what we did was we had a pipeline that generated a cloud",
    "start": "2912819",
    "end": "2918880"
  },
  {
    "text": "formation template and then deployed that template into a test environment and then had a pipeline step that then",
    "start": "2918880",
    "end": "2924820"
  },
  {
    "text": "validated that test environment so in your confirmation it covers ninety five ninety eight percent available s",
    "start": "2924820",
    "end": "2931060"
  },
  {
    "text": "Resources ec2 RDS EBS all that stuff so you can deploy an entire infrastructure",
    "start": "2931060",
    "end": "2937030"
  },
  {
    "text": "using cloud formation and then as a part of your pipeline do testing and validation on that it is exactly like",
    "start": "2937030",
    "end": "2942220"
  },
  {
    "text": "our talk so their testing is easy the Python script or how how about in that",
    "start": "2942220",
    "end": "2947680"
  },
  {
    "text": "example we did a couple of different things one was we tested using config because config control covers a lot of",
    "start": "2947680",
    "end": "2953500"
  },
  {
    "text": "our resources and then we also have config rules that do things like check if you have PEM file enabled SSH login",
    "start": "2953500",
    "end": "2960940"
  },
  {
    "text": "or password login or check if your security group is open so there's a if you look in there's actually a github",
    "start": "2960940",
    "end": "2966850"
  },
  {
    "text": "repository of a lot of these different config rules that you have that you can run and then we also use inspector in",
    "start": "2966850",
    "end": "2972640"
  },
  {
    "text": "that example we were looking at containers running on ec2 so ECS ec2 and the inspector was looking at the",
    "start": "2972640",
    "end": "2978580"
  },
  {
    "text": "container hosts for known vulnerabilities so that's an example of what you can do to test your",
    "start": "2978580",
    "end": "2983860"
  },
  {
    "text": "infrastructure using inspector config and quite frankly almost anything you can think of just and then execute that",
    "start": "2983860",
    "end": "2990250"
  },
  {
    "text": "in the context of a pipeline okay all right thank you sure",
    "start": "2990250",
    "end": "2996660"
  },
  {
    "text": "to use which functions so it's kind of",
    "start": "3016079",
    "end": "3024450"
  },
  {
    "text": "interesting that you asked that because we see a lot of different interesting use cases that customers are using",
    "start": "3024450",
    "end": "3030869"
  },
  {
    "text": "lambda for the thing with the thing with high performance computing though is",
    "start": "3030869",
    "end": "3036420"
  },
  {
    "text": "it's usually the platforms for that are so specific and so bound to hardware and specific types of operating contexts",
    "start": "3036420",
    "end": "3043049"
  },
  {
    "text": "that it's really hard to compare that because you know lambda has a five-minute timeout it has a certain amount of memory can use it has only",
    "start": "3043049",
    "end": "3049589"
  },
  {
    "text": "certain libraries that are available for running it whereas high performance computing there's dependencies for bus",
    "start": "3049589",
    "end": "3055680"
  },
  {
    "text": "speed there's dependencies for CPU it has to have a specific type of memory configuration for talking between",
    "start": "3055680",
    "end": "3061739"
  },
  {
    "text": "processors it trying to replicate that inside of a lambda environment or to leverage that I mean yeah it's it's",
    "start": "3061739",
    "end": "3069690"
  },
  {
    "text": "probably possible to take some code that's built for running on HPC and if it's compatible language like Python or",
    "start": "3069690",
    "end": "3076640"
  },
  {
    "text": "C sharp and run it as a lambda but then you're still stuck with the the issue of",
    "start": "3076640",
    "end": "3082380"
  },
  {
    "text": "the you've got five minutes of execution time you have X amount of memory available and you can dedicate X amount",
    "start": "3082380",
    "end": "3088349"
  },
  {
    "text": "of CPU for a single thread for example so I would say it's not a fair comparison that can look at lambda as a",
    "start": "3088349",
    "end": "3094559"
  },
  {
    "text": "comparison to high performance computing because it's kind of like two different worlds that being said though we have",
    "start": "3094559",
    "end": "3101579"
  },
  {
    "text": "plenty of customers that are using orchestrations using lambda to solve very complex problems especially in the",
    "start": "3101579",
    "end": "3108599"
  },
  {
    "text": "financial industry so they're using lambda as a part of a very large orchestration so fraud",
    "start": "3108599",
    "end": "3115259"
  },
  {
    "text": "detection is one that comes to mind so they're basically executing thousands of lambdas and so at a high level it is",
    "start": "3115259",
    "end": "3122309"
  },
  {
    "text": "mimicking the functionality of high performance computing using art the fabric of resources available to you via",
    "start": "3122309",
    "end": "3128039"
  },
  {
    "text": "lambda",
    "start": "3128039",
    "end": "3130699"
  },
  {
    "text": "right right yeah and I've seen some",
    "start": "3136299",
    "end": "3149329"
  },
  {
    "text": "interesting stuff I mean I would say probably if you're looking for shared storage look at s3 but I've seen folks",
    "start": "3149329",
    "end": "3155299"
  },
  {
    "text": "do all sorts of interesting things trying to access file systems inside of lambda and so yeah it's yeah that's an",
    "start": "3155299",
    "end": "3162859"
  },
  {
    "text": "interesting problem other than s3 sure",
    "start": "3162859",
    "end": "3170768"
  },
  {
    "text": "[Music]",
    "start": "3182900",
    "end": "3185989"
  },
  {
    "text": "that's exactly why we have code pipeline has a visual editor screen because manin",
    "start": "3212940",
    "end": "3220599"
  },
  {
    "text": "I used to remember when I used to do a lot of DevOps I would restrict access to Jenkins to only a few people so the so",
    "start": "3220599",
    "end": "3227619"
  },
  {
    "text": "lots and lots of developers had access to the source control repository but very few of them could see the Jenkins",
    "start": "3227619",
    "end": "3233500"
  },
  {
    "text": "job because long story short I had lots of people get very creative when bills are running so I used to restrict access",
    "start": "3233500",
    "end": "3239710"
  },
  {
    "text": "so one of the cool things about code pipeline is that it you can give permissions for someone to be able to",
    "start": "3239710",
    "end": "3245799"
  },
  {
    "text": "view the pipeline without being able to modify it so that's something that you know and then you can also similar to",
    "start": "3245799",
    "end": "3252490"
  },
  {
    "text": "Jenkins where you can pull the output of it using API you can pull the output of bill steps and Jenkins and be able to",
    "start": "3252490",
    "end": "3258400"
  },
  {
    "text": "export him to something you can do a similar thing with pipeline so you can use API to call code pipeline to see the",
    "start": "3258400",
    "end": "3264309"
  },
  {
    "text": "status of jobs and then do like a dashboard based off of those results so",
    "start": "3264309",
    "end": "3270220"
  },
  {
    "text": "yeah that's what you're saying is the exact reason why we put a visual more flow it's so that folks could see and be",
    "start": "3270220",
    "end": "3276279"
  },
  {
    "text": "able to track how their bills are doing",
    "start": "3276279",
    "end": "3280109"
  },
  {
    "text": "yeah it's exciting stuff and it's fairly exciting and like I said we have hooks",
    "start": "3284299",
    "end": "3289589"
  },
  {
    "text": "like the ECS hook to generate a pipeline based off of an actually running image",
    "start": "3289589",
    "end": "3295520"
  },
  {
    "text": "okay all right folks I'm gonna be outside for another 20 minutes and I would love to take some more questions thank you",
    "start": "3295520",
    "end": "3303230"
  }
]