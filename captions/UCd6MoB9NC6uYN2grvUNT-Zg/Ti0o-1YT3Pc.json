[
  {
    "start": "0",
    "end": "31000"
  },
  {
    "text": "Hello.",
    "start": "4867",
    "end": "5632"
  },
  {
    "text": "Welcome to 'Back To Basics'.",
    "start": "5632",
    "end": "7275"
  },
  {
    "text": "I'm Ashwini Rudra,\nand today we are going to discuss about Headless Architecture.",
    "start": "7275",
    "end": "11274"
  },
  {
    "text": "If you are hearing this terminology for the first time,",
    "start": "11670",
    "end": "14139"
  },
  {
    "text": "let's discuss the difference\nbetween decoupling and headless.",
    "start": "14139",
    "end": "18175"
  },
  {
    "text": "Many of the application architecture patterns work well",
    "start": "18175",
    "end": "21469"
  },
  {
    "text": "for a single channel, example a website.",
    "start": "21469",
    "end": "24617"
  },
  {
    "text": "But when the digital experience and user channel grows,",
    "start": "24617",
    "end": "28330"
  },
  {
    "text": "this architecture pattern becomes complex.",
    "start": "28330",
    "end": "30740"
  },
  {
    "start": "31000",
    "end": "67000"
  },
  {
    "text": "Headless architecture is not a new term,",
    "start": "31261",
    "end": "33617"
  },
  {
    "text": "it's a subset of decoupled architecture. ",
    "start": "33617",
    "end": "36260"
  },
  {
    "text": "And as you know, in decoupled architecture,\nyou separate frontend from the backend.",
    "start": "36260",
    "end": "41248"
  },
  {
    "text": "User accesses the frontend, then different tiers of backend\nare decoupled using queue",
    "start": "41249",
    "end": "46633"
  },
  {
    "text": "so that it can scale independently.",
    "start": "46633",
    "end": "49178"
  },
  {
    "text": "You might have seen this pattern multiple times.",
    "start": "49178",
    "end": "51844"
  },
  {
    "text": "Now you think about a scenario\nwhen your application can be accessed by multiple channels.",
    "start": "52122",
    "end": "57199"
  },
  {
    "text": "Example, websites, phones, tablets, IOT devices,",
    "start": "57199",
    "end": "61939"
  },
  {
    "text": "smartwatches, AI enabled voice assistance,\nand virtual reality headsets.",
    "start": "61939",
    "end": "66996"
  },
  {
    "text": "Digital content is getting more sophisticated",
    "start": "66996",
    "end": "69368"
  },
  {
    "start": "67000",
    "end": "81000"
  },
  {
    "text": "and your application user's expectations are rising.",
    "start": "69368",
    "end": "72452"
  },
  {
    "text": "To stand out, you have to build beautiful,\nresponsive and interactive content,",
    "start": "72453",
    "end": "77649"
  },
  {
    "text": "and you have to do it quickly.",
    "start": "77649",
    "end": "79299"
  },
  {
    "text": "So how to do it.",
    "start": "79299",
    "end": "80957"
  },
  {
    "start": "81000",
    "end": "202000"
  },
  {
    "text": "One pattern is independent architecture\nfor each such channels.",
    "start": "81416",
    "end": "85416"
  },
  {
    "text": "Here is a typical serverless weather application.",
    "start": "85416",
    "end": "88616"
  },
  {
    "text": "User wants to know the weather using different channels",
    "start": "88616",
    "end": "91696"
  },
  {
    "text": "and each channel has its own decoupled architecture. ",
    "start": "91696",
    "end": "94780"
  },
  {
    "text": "Each channel has API, frontend, business, and database tiers.",
    "start": "95282",
    "end": "99408"
  },
  {
    "text": "But as you can see this introduces resource duplication and complexity.",
    "start": "99570",
    "end": "104838"
  },
  {
    "text": "You can optimize the resources and simplify the architecture.",
    "start": "104960",
    "end": "108630"
  },
  {
    "text": "But how can you optimize this? ",
    "start": "108630",
    "end": "111181"
  },
  {
    "text": "The solution is headless architecture.",
    "start": "111181",
    "end": "113418"
  },
  {
    "text": "Let's work backward from the architecture point of view.",
    "start": "114037",
    "end": "117111"
  },
  {
    "text": "Let's solve database tier first.",
    "start": "117452",
    "end": "119838"
  },
  {
    "text": "For our example, which is a weather application,",
    "start": "119838",
    "end": "122904"
  },
  {
    "text": "you don't need different databases for each channel.",
    "start": "122904",
    "end": "125814"
  },
  {
    "text": "For the same content you can use the same DB,\nor you can use databases",
    "start": "125814",
    "end": "130106"
  },
  {
    "text": "such as NoSQL\nor Amazon Elasticsearch",
    "start": "130106",
    "end": "133007"
  },
  {
    "text": "based on the dataset requirement.",
    "start": "133007",
    "end": "134792"
  },
  {
    "text": "But you don't have to duplicate data\ninto different data tools until required.",
    "start": "134792",
    "end": "139907"
  },
  {
    "text": "Next is business tier.",
    "start": "139907",
    "end": "141727"
  },
  {
    "text": "This also you can simplify and reuse,",
    "start": "141727",
    "end": "144109"
  },
  {
    "text": "and with application a user need to see the data",
    "start": "144109",
    "end": "147256"
  },
  {
    "text": "either in Fahrenheit or degrees centigrade. ",
    "start": "147257",
    "end": "149711"
  },
  {
    "text": "Business logic is going to be the same\nirrespective of channels.",
    "start": "149711",
    "end": "153129"
  },
  {
    "text": "The main goal to simplify this tier",
    "start": "153129",
    "end": "155255"
  },
  {
    "text": "should be making the business tier device independent.",
    "start": "155255",
    "end": "158045"
  },
  {
    "text": "Next, let's introduce an API for scalability.",
    "start": "158354",
    "end": "161912"
  },
  {
    "text": "We need an API layer so that different channel can consume these APIs.",
    "start": "162191",
    "end": "166280"
  },
  {
    "text": "This will also reduce the complexity.",
    "start": "166280",
    "end": "168595"
  },
  {
    "text": "Now we have architected the application backend",
    "start": "168595",
    "end": "171493"
  },
  {
    "text": "that is now device and channel independent.",
    "start": "171493",
    "end": "174733"
  },
  {
    "text": "Different channels need different kind of rendering logic.",
    "start": "175663",
    "end": "178872"
  },
  {
    "text": "Some needs voice based output, ",
    "start": "178872",
    "end": "181153"
  },
  {
    "text": "and some needs different responsive web rendering.",
    "start": "181153",
    "end": "183944"
  },
  {
    "text": "Here using a Lambda function or Amazon EC2,",
    "start": "184370",
    "end": "188097"
  },
  {
    "text": "we can achieve this goal.",
    "start": "188098",
    "end": "189690"
  },
  {
    "text": "This tier can be device aware. ",
    "start": "189690",
    "end": "191892"
  },
  {
    "text": "We can again, expose rendering logic using APIs",
    "start": "191892",
    "end": "195552"
  },
  {
    "text": "so that devices can consume these.",
    "start": "195552",
    "end": "197578"
  },
  {
    "text": "Now you can see the backend\nis completely channel independent.",
    "start": "197578",
    "end": "201717"
  },
  {
    "text": "It's headless.",
    "start": "201717",
    "end": "202948"
  },
  {
    "start": "202000",
    "end": "251000"
  },
  {
    "text": "In simple language,\nheadless architecture means ",
    "start": "204209",
    "end": "207284"
  },
  {
    "text": "wrapping up all the business functionalities\nand logic in a set of APIs.",
    "start": "207284",
    "end": "211884"
  },
  {
    "text": "These APIs can be consumed\nby different applications and devices.",
    "start": "211884",
    "end": "216744"
  },
  {
    "text": "Now you must be thinking,\nwhat is the benefit of headless architecture? ",
    "start": "216744",
    "end": "220340"
  },
  {
    "text": "Headless architecture is an ideal candidate for content management system",
    "start": "220340",
    "end": "223905"
  },
  {
    "text": "publishing applications and e-commerce.",
    "start": "223906",
    "end": "226584"
  },
  {
    "text": "The first benefit is using headless architecture,",
    "start": "226584",
    "end": "229442"
  },
  {
    "text": "your developer can develop the frontend\nusing different languages. ",
    "start": "229442",
    "end": "233328"
  },
  {
    "text": "This brings flexibility to them. ",
    "start": "233328",
    "end": "235197"
  },
  {
    "text": "The second one is,\nat anytime you can introduce new channels to the users.",
    "start": "235197",
    "end": "240346"
  },
  {
    "text": "I have used this pattern multiple times,\nand you can use it too.",
    "start": "240346",
    "end": "244347"
  },
  {
    "text": "Click the links below for more details.",
    "start": "244408",
    "end": "246715"
  },
  {
    "text": "See you next time.",
    "start": "246715",
    "end": "248164"
  }
]