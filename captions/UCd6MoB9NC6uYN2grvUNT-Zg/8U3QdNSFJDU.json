[
  {
    "start": "0",
    "end": "40000"
  },
  {
    "text": "hello everyone thank you for coming today it's great to see you all I hope",
    "start": "30",
    "end": "5970"
  },
  {
    "text": "you had had a good lunch and they're all set so my name is Chaitanya",
    "start": "5970",
    "end": "12960"
  },
  {
    "text": "I'm from the Amazon CloudFront team I'll be joined by koumei and Alexander who",
    "start": "12960",
    "end": "19080"
  },
  {
    "text": "are also software development engineers in the flower 20 so you know as you can",
    "start": "19080",
    "end": "25800"
  },
  {
    "text": "see the title is clutter and flash talks so we'll be talking about a number of",
    "start": "25800",
    "end": "31470"
  },
  {
    "text": "best practices on configuring securing customizing and monitoring your",
    "start": "31470",
    "end": "37170"
  },
  {
    "text": "distribution so here's what you can expect from the session today first",
    "start": "37170",
    "end": "43860"
  },
  {
    "start": "40000",
    "end": "40000"
  },
  {
    "text": "we'll start with you know just a recap of how cloud phone delivers content many of you might be familiar with this this",
    "start": "43860",
    "end": "50430"
  },
  {
    "text": "is just setting this stage for things to come which would be starting with you",
    "start": "50430",
    "end": "57390"
  },
  {
    "text": "know we start diving into some of the cache configurations that you can set up and this is useful because depending on",
    "start": "57390",
    "end": "64948"
  },
  {
    "text": "the type of content that you are serving you can you know you can have different configurations for CloudFront and then",
    "start": "64949",
    "end": "74270"
  },
  {
    "text": "alexander will be covering some aspects about customizing content delivery and",
    "start": "74270",
    "end": "79860"
  },
  {
    "text": "this this would be you know using lambda at edge to be able to program your",
    "start": "79860",
    "end": "85200"
  },
  {
    "text": "content delivery in a powerful and flexible manner last but not the least",
    "start": "85200",
    "end": "91409"
  },
  {
    "text": "koumei will be sharing some insights into real user monitoring and how you",
    "start": "91409",
    "end": "96869"
  },
  {
    "text": "can get or record some performance metrics to be able to gauge your actual",
    "start": "96869",
    "end": "103740"
  },
  {
    "text": "user experience so with that let's jump straight in into how cloud and delivers",
    "start": "103740",
    "end": "109500"
  },
  {
    "start": "107000",
    "end": "107000"
  },
  {
    "text": "content so of course we have the viewers who are you know who have different",
    "start": "109500",
    "end": "117149"
  },
  {
    "text": "devices it could be desktops or mobile phones tablets multiple devices and",
    "start": "117149",
    "end": "122729"
  },
  {
    "text": "these user agents are so when a customer",
    "start": "122729",
    "end": "128940"
  },
  {
    "text": "needs to access a resource you know here we are talking about accessing that",
    "start": "128940",
    "end": "134590"
  },
  {
    "text": "from CloudFront so to start with there is DNS lookup and name resolution",
    "start": "134590",
    "end": "142740"
  },
  {
    "text": "without going into details about all of the steps involved so this reaches a",
    "start": "142740",
    "end": "147850"
  },
  {
    "text": "claw front edge location which returns the IP address of an edge server now",
    "start": "147850",
    "end": "153820"
  },
  {
    "text": "once this is returned to the user agent you know this now sets up a connection",
    "start": "153820",
    "end": "160030"
  },
  {
    "text": "to that edge server so in this case the connection has to be set up first before",
    "start": "160030",
    "end": "165550"
  },
  {
    "text": "a request can be made you know in in the best case where the content is cacheable",
    "start": "165550",
    "end": "172960"
  },
  {
    "text": "and this is already available at the edge location its returned right from",
    "start": "172960",
    "end": "178270"
  },
  {
    "text": "there however this does not happen when it's the first ever request made for",
    "start": "178270",
    "end": "184150"
  },
  {
    "text": "that content so in this case when the request lands at an edge location or",
    "start": "184150",
    "end": "190170"
  },
  {
    "text": "it's it's checked in the cache that if that's not available it then you know",
    "start": "190170",
    "end": "197070"
  },
  {
    "text": "goes through the next layers that are present so first it's checked in the regional edge cache so regional edge",
    "start": "197070",
    "end": "204610"
  },
  {
    "text": "cache are you know common to multiple edge locations now and these have a",
    "start": "204610",
    "end": "211690"
  },
  {
    "text": "larger cache width than any individual education so so let's say you have a",
    "start": "211690",
    "end": "218740"
  },
  {
    "text": "viewer like in New York who's accessing content and another viewer in Boston",
    "start": "218740",
    "end": "225370"
  },
  {
    "text": "who's accessing the content so they talked to the same regional edge cache because it's common to that region so",
    "start": "225370",
    "end": "232330"
  },
  {
    "text": "the content is reused and this also reduces your origin load so talking about origins so you can configure",
    "start": "232330",
    "end": "238810"
  },
  {
    "text": "CloudFront with many different origins so that could be your Amazon s3 buckets it could be your Amazon ec2 instances or",
    "start": "238810",
    "end": "246630"
  },
  {
    "text": "it could be your own custom server that you know you've posted anywhere of your",
    "start": "246630",
    "end": "251800"
  },
  {
    "text": "choice so once the content is retrieved from the origin its then cached you know",
    "start": "251800",
    "end": "257980"
  },
  {
    "text": "both of the original edge cache and the edge locations and then finally returned",
    "start": "257980",
    "end": "263380"
  },
  {
    "text": "to the viewer so that's just a quick you know run through of how clutter and delivers",
    "start": "263380",
    "end": "269349"
  },
  {
    "text": "content we'll be touching upon different aspects of this to start with is the",
    "start": "269349",
    "end": "274389"
  },
  {
    "text": "cache configuration so there are many types of content that are delivered for",
    "start": "274389",
    "end": "280629"
  },
  {
    "text": "websites and applications so you have static content dynamic content you can",
    "start": "280629",
    "end": "285849"
  },
  {
    "text": "also categorize it be you know based on like live streaming content or video on-demand there are also sites which",
    "start": "285849",
    "end": "294099"
  },
  {
    "text": "need you know authentication and authorization in some form so but common",
    "start": "294099",
    "end": "300099"
  },
  {
    "text": "to all of this is that you know we need good performance but why does performance even matter so better",
    "start": "300099",
    "end": "308259"
  },
  {
    "start": "305000",
    "end": "305000"
  },
  {
    "text": "performance brings about a lot of things so it can increase the number of page",
    "start": "308259",
    "end": "313599"
  },
  {
    "text": "views it can you know generally lead to better customer experience and",
    "start": "313599",
    "end": "318699"
  },
  {
    "text": "engagement on your website or in other web properties at least so higher",
    "start": "318699",
    "end": "323969"
  },
  {
    "text": "conversion rate which directly you can translate so revenues and also you know",
    "start": "323969",
    "end": "330310"
  },
  {
    "text": "it can help again better visibility because you know for SEO or search",
    "start": "330310",
    "end": "336460"
  },
  {
    "text": "engine optimization even site speed is considered so late in the talk comein",
    "start": "336460",
    "end": "343960"
  },
  {
    "text": "we'll be covering some more aspects about how do you measure the overall performance but to start with I'm going",
    "start": "343960",
    "end": "351940"
  },
  {
    "text": "to focus on cache performance so cache performance depends mainly on two things",
    "start": "351940",
    "end": "358750"
  },
  {
    "text": "one is whether the object is present in the edge locations cache and the other",
    "start": "358750",
    "end": "364539"
  },
  {
    "text": "is you know what's the nature of the connection both between the viewer and CloudFront and also between CloudFront",
    "start": "364539",
    "end": "372219"
  },
  {
    "text": "to your origin so I've mentioned this",
    "start": "372219",
    "end": "378699"
  },
  {
    "text": "term object a few times let's just define it a little more concretely so an",
    "start": "378699",
    "end": "386289"
  },
  {
    "text": "object is identified by some properties of the request plus some properties that",
    "start": "386289",
    "end": "393940"
  },
  {
    "text": "are determined by the configuration of your distribution so you might have said the configuration",
    "start": "393940",
    "end": "399430"
  },
  {
    "text": "through the console or through the cloud fund API but taking both of those into",
    "start": "399430",
    "end": "406360"
  },
  {
    "text": "account when a request arrives at a cloud front edge location it has a configuration and using these pieces",
    "start": "406360",
    "end": "413499"
  },
  {
    "text": "it creates an object key or a cache key which is an identifier for that object",
    "start": "413499",
    "end": "420400"
  },
  {
    "text": "so when multiple customers because same object we know what to look for now one",
    "start": "420400",
    "end": "430240"
  },
  {
    "text": "way of you know categorizing these objects is you know pertinent to how",
    "start": "430240",
    "end": "436180"
  },
  {
    "text": "long they exist in the cache is by their TTL",
    "start": "436180",
    "end": "441270"
  },
  {
    "text": "so you can have static long-lived objects these can be things such as",
    "start": "441270",
    "end": "448349"
  },
  {
    "text": "software downloads it can be images or you know other media resources which is",
    "start": "448349",
    "end": "455710"
  },
  {
    "text": "fragments of manifest so these typically have a high TTL value as the content",
    "start": "455710",
    "end": "463360"
  },
  {
    "text": "does not change too often so many times",
    "start": "463360",
    "end": "468399"
  },
  {
    "text": "when you want to update even this piece of content it you know it's just better",
    "start": "468399",
    "end": "473949"
  },
  {
    "text": "to use a worsening approach where you just upload a new version and ensure that your clients request that clever",
    "start": "473949",
    "end": "480310"
  },
  {
    "text": "and does support invalidations but you know you might not want to go through those steps the next is the static",
    "start": "480310",
    "end": "489819"
  },
  {
    "text": "short-lived content so this is or you know for example some landing pages",
    "start": "489819",
    "end": "495189"
  },
  {
    "text": "which are updated periodically it could be some news updates or weather updates and in the case of you know media",
    "start": "495189",
    "end": "502719"
  },
  {
    "text": "streaming it is for example live streaming manifest so these have you",
    "start": "502719",
    "end": "508899"
  },
  {
    "text": "know fairly low TTL and this is updated periodically so the way CloudFront works",
    "start": "508899",
    "end": "517510"
  },
  {
    "text": "with you know once the object has expired the cache it does a revalidation",
    "start": "517510",
    "end": "524078"
  },
  {
    "text": "with the origin and this this is basically an if modified since or if",
    "start": "524079",
    "end": "529420"
  },
  {
    "text": "non-mac check depending on the case and then you know if the origin says the content has",
    "start": "529420",
    "end": "535450"
  },
  {
    "text": "changed then you know it returns the new version and CloudFront catches that cash is that new version and lastly there is",
    "start": "535450",
    "end": "543610"
  },
  {
    "text": "some content which is also uncatchable or it's you know always updated always",
    "start": "543610",
    "end": "550480"
  },
  {
    "text": "needs to be the freshest freshest version so this is you know the one",
    "start": "550480",
    "end": "556120"
  },
  {
    "text": "that's updated frequently or it could be unique at a point in time based on the",
    "start": "556120",
    "end": "562480"
  },
  {
    "text": "request so these can have a very load or even a zero TTL or that you can assign",
    "start": "562480",
    "end": "568900"
  },
  {
    "text": "to it so I've mentioned this TTL a few times it's time to live but how can you",
    "start": "568900",
    "end": "575980"
  },
  {
    "start": "573000",
    "end": "573000"
  },
  {
    "text": "actually set this to start with you can set this at your origins and the bird",
    "start": "575980",
    "end": "581470"
  },
  {
    "text": "object basis using cache control headers so here's a couple of examples one for a high TTL where you've set the max age to",
    "start": "581470",
    "end": "589000"
  },
  {
    "text": "a year and the s max age to a day so",
    "start": "589000",
    "end": "595380"
  },
  {
    "text": "then you have the low TTL where you have again you know just a minute that's a",
    "start": "595380",
    "end": "604780"
  },
  {
    "text": "sign so in some cases you might not have the options to set this at your origin",
    "start": "604780",
    "end": "610800"
  },
  {
    "text": "what you do in that case is you can use the cache behavior configuration where",
    "start": "610800",
    "end": "616900"
  },
  {
    "text": "you are you have the options of setting the min Max and the default TTL values you can also use this to override you",
    "start": "616900",
    "end": "624790"
  },
  {
    "text": "know the ones that are present at your origin next what helps cache ability is",
    "start": "624790",
    "end": "632800"
  },
  {
    "text": "to have fewer variants so there are cases where you want to change the",
    "start": "632800",
    "end": "639940"
  },
  {
    "text": "content based on certain query string factors cookies and selected request headers so you know generally and the",
    "start": "639940",
    "end": "649120"
  },
  {
    "text": "default data in your CloudFront is to use none none of these factors but for",
    "start": "649120",
    "end": "654940"
  },
  {
    "text": "customization purposes you want you may want to use some some of them so in the",
    "start": "654940",
    "end": "662260"
  },
  {
    "text": "general case you know if you have less variance it helps the cash ability but you have",
    "start": "662260",
    "end": "668230"
  },
  {
    "text": "options of whitelisting certain subsets of these and you know I'm happy to talk",
    "start": "668230",
    "end": "674710"
  },
  {
    "text": "about them if you want to catch up after the session so you have choices of doing",
    "start": "674710",
    "end": "681580"
  },
  {
    "text": "that to help a cash ability just a weak note I notice a lot of folks taking",
    "start": "681580",
    "end": "687580"
  },
  {
    "text": "pictures this is going to be uploaded online and it will be available for viewing so feel free to also stop by the",
    "start": "687580",
    "end": "695410"
  },
  {
    "text": "flower front booth for any questions you might have next dynamic content so here you're also",
    "start": "695410",
    "end": "705490"
  },
  {
    "start": "700000",
    "end": "700000"
  },
  {
    "text": "looking at the requests going back to the origin frequently since it's a low TTL object so you can again set this",
    "start": "705490",
    "end": "712510"
  },
  {
    "text": "through cache control headers with you know a max is zero and no cash no store",
    "start": "712510",
    "end": "720720"
  },
  {
    "text": "so these can in fact actually be stored at the edge when you don't specify no",
    "start": "721260",
    "end": "729580"
  },
  {
    "text": "store what this helps with is your if your object hasn't changed clutter and",
    "start": "729580",
    "end": "735400"
  },
  {
    "text": "runs a light of it you know the validation against your origin and this",
    "start": "735400",
    "end": "741310"
  },
  {
    "text": "helps speed things up so but in case that you don't want a lot of front to",
    "start": "741310",
    "end": "748390"
  },
  {
    "text": "even cache this you can specify private no store and you",
    "start": "748390",
    "end": "755050"
  },
  {
    "text": "can also pick all as the value for cash based on selected headers in your CloudFront distribution configuration",
    "start": "755050",
    "end": "763350"
  },
  {
    "text": "now all of this you know serving the content is of the happy case but you can",
    "start": "763350",
    "end": "772180"
  },
  {
    "start": "771000",
    "end": "771000"
  },
  {
    "text": "see that there's you know different examples of these headers that you can set for different types of content so",
    "start": "772180",
    "end": "779410"
  },
  {
    "text": "this determines how long this is a cache that the edge cache as well as the",
    "start": "779410",
    "end": "787060"
  },
  {
    "text": "browser cache of the user agents now talking about some of the failure cases",
    "start": "787060",
    "end": "794450"
  },
  {
    "text": "that happen where you know sometimes the origin is overloaded or unreachable then",
    "start": "794450",
    "end": "803540"
  },
  {
    "start": "803000",
    "end": "803000"
  },
  {
    "text": "in that case CloudFront can still help the availability of your content and we",
    "start": "803540",
    "end": "809450"
  },
  {
    "text": "allow you to customize the error caching main TTL so flutterin can all you know",
    "start": "809450",
    "end": "816649"
  },
  {
    "text": "not only cache the content themselves but we can also cache errors so that you can manage your origin load and allow",
    "start": "816649",
    "end": "823940"
  },
  {
    "text": "the origin enough time to recover so there are various different error codes",
    "start": "823940",
    "end": "832190"
  },
  {
    "text": "that you can customize and you can customize the TTL for this as well as you know add error pages and the",
    "start": "832190",
    "end": "838550"
  },
  {
    "text": "response code so this is so depending on",
    "start": "838550",
    "end": "844880"
  },
  {
    "text": "the value that you set for the error caching within TTL clutter and also determines when to revalidate or recheck",
    "start": "844880",
    "end": "851660"
  },
  {
    "text": "with your origin so for some content that's frequently changing you might want to set this to a low value especially like take a popular video",
    "start": "851660",
    "end": "859190"
  },
  {
    "text": "goes viral and you know thousands of",
    "start": "859190",
    "end": "864350"
  },
  {
    "text": "viewers come to view that you don't want all of them getting a huge spike of errors so you want to set the arrow",
    "start": "864350",
    "end": "870080"
  },
  {
    "text": "caching minimum TTL to a low value but on the other hand if you have some",
    "start": "870080",
    "end": "876140"
  },
  {
    "text": "resource that you know is never available it's a 404 you know just cash it at the edge so that that never hits",
    "start": "876140",
    "end": "882170"
  },
  {
    "text": "your origin and your origin does not have to deal with that load so also if",
    "start": "882170",
    "end": "890029"
  },
  {
    "text": "the object is in cache and the origin is unreachable CloudFront can even deliver",
    "start": "890029",
    "end": "895490"
  },
  {
    "text": "the stale content so your viewers are left with a better experience of at least having some content that's",
    "start": "895490",
    "end": "902000"
  },
  {
    "text": "delivered to them and not just an error now I spoken a lot about the objects but",
    "start": "902000",
    "end": "909890"
  },
  {
    "start": "906000",
    "end": "906000"
  },
  {
    "text": "also what matters is the connection that exists so start to start with first of",
    "start": "909890",
    "end": "916310"
  },
  {
    "text": "the viewer connection where the connection is set up first",
    "start": "916310",
    "end": "921500"
  },
  {
    "text": "there's TCP handshake in the viewer of the user-agent and",
    "start": "921500",
    "end": "926750"
  },
  {
    "text": "CloudFront so we can see that you know there's the TCP handshake that takes place which is",
    "start": "926750",
    "end": "934100"
  },
  {
    "text": "the sense in AK and an AK and only after this is when a request and response",
    "start": "934100",
    "end": "940990"
  },
  {
    "text": "happens the HTTP part so what helps in this case is to you know reuse",
    "start": "940990",
    "end": "947870"
  },
  {
    "text": "connections using keepalive and this helps reduce the time to actually set up the connection and reduces the initial",
    "start": "947870",
    "end": "954950"
  },
  {
    "text": "date and see that the viewer sees now a lot of things are you know moving to a",
    "start": "954950",
    "end": "963380"
  },
  {
    "text": "more secure world but you want the channel between the viewer and flower trying to be secured and in that case",
    "start": "963380",
    "end": "970130"
  },
  {
    "text": "there's also a TLS handshake that comes into place where the last act also has a",
    "start": "970130",
    "end": "975709"
  },
  {
    "text": "client hello so you know I'm just going to go through this a bit quicker because the messages are exchanged and then",
    "start": "975709",
    "end": "985120"
  },
  {
    "text": "after this is when the HTTP request and response can actually occur so the key",
    "start": "985120",
    "end": "991339"
  },
  {
    "text": "takeaway here is that you know it it takes time for a few messages to be",
    "start": "991339",
    "end": "998270"
  },
  {
    "text": "exchanged before the actual request and response happens so this is important to keep keep in mind and that's why reusing",
    "start": "998270",
    "end": "1004240"
  },
  {
    "text": "connections is it important the other is you can actually reduce the amount of",
    "start": "1004240",
    "end": "1010209"
  },
  {
    "text": "data that's transmitted by using compression so you can enable gzip compression at your distribution",
    "start": "1010209",
    "end": "1017050"
  },
  {
    "text": "you know cache behaviors and that again can improve performance and user",
    "start": "1017050",
    "end": "1022930"
  },
  {
    "text": "experience next HTTP - so you know",
    "start": "1022930",
    "end": "1028178"
  },
  {
    "text": "CloudFront support for this in past year or this brings about many benefits and",
    "start": "1028179",
    "end": "1033808"
  },
  {
    "text": "HTTP 2 is a large topic so the key points that I do want to call out is",
    "start": "1033809",
    "end": "1039428"
  },
  {
    "text": "that the HTTP requests and response are multiplexed so in this case you saw that",
    "start": "1039429",
    "end": "1046449"
  },
  {
    "text": "this request made and a response minute that's kind of serialized but this can",
    "start": "1046449",
    "end": "1052900"
  },
  {
    "text": "be multiplexed in the HTTP use case where multiple disparate first responses can be in flight at the",
    "start": "1052900",
    "end": "1059570"
  },
  {
    "text": "same time so this further helps parallelism and you know you can get",
    "start": "1059570",
    "end": "1066320"
  },
  {
    "text": "different resources or the same connection in a faster manner the other one that HTTP 2 also brings is header",
    "start": "1066320",
    "end": "1074060"
  },
  {
    "text": "compression using H back so this is you",
    "start": "1074060",
    "end": "1081290"
  },
  {
    "text": "know a picture of the viewer connection next is the origin connection so you",
    "start": "1081290",
    "end": "1087740"
  },
  {
    "start": "1084000",
    "end": "1084000"
  },
  {
    "text": "know as before the disconnection again has to go through the same set process",
    "start": "1087740",
    "end": "1094600"
  },
  {
    "text": "but for the TLS what I do want to call out is that cloud friend also supports",
    "start": "1094600",
    "end": "1100970"
  },
  {
    "text": "using session tickets to resume connections which can reduce the time to set up even the HTTP connection and this",
    "start": "1100970",
    "end": "1108260"
  },
  {
    "text": "is also on the viewer side I'm just only showing it here on the origin side and",
    "start": "1108260",
    "end": "1114850"
  },
  {
    "text": "this again brings about the same request and response behavior that I just covered so board also helps you is you",
    "start": "1114850",
    "end": "1125870"
  },
  {
    "text": "know even compression at the origin helps performance between CloudFront and your origin and helps deliver the",
    "start": "1125870",
    "end": "1131180"
  },
  {
    "text": "content faster to your viewers additionally our CloudFront allows",
    "start": "1131180",
    "end": "1136450"
  },
  {
    "text": "customizing origin timeouts which is both your read timeout and the keepalive",
    "start": "1136450",
    "end": "1142340"
  },
  {
    "text": "timeout - so because depending on how",
    "start": "1142340",
    "end": "1147350"
  },
  {
    "text": "your application is set up some transactions may take longer where you might want a higher timeout in place but",
    "start": "1147350",
    "end": "1154700"
  },
  {
    "text": "in other cases you might not want to hide a nod to avoid you know excessive connections building up at the origin so",
    "start": "1154700",
    "end": "1161780"
  },
  {
    "text": "that is configurable or today in clarified so you know I would encourage you to take a look at that so with this",
    "start": "1161780",
    "end": "1170200"
  },
  {
    "start": "1168000",
    "end": "1168000"
  },
  {
    "text": "and this concludes the session a section on cache configuration so the key",
    "start": "1170200",
    "end": "1176150"
  },
  {
    "text": "takeaways are you know set TTLs based on the type of objects that are being delivered also considered errors when",
    "start": "1176150",
    "end": "1183370"
  },
  {
    "text": "the content is being delivered so that you consider the failure cases reuse",
    "start": "1183370",
    "end": "1189500"
  },
  {
    "text": "viewer connections for improved performance and you know",
    "start": "1189500",
    "end": "1195090"
  },
  {
    "text": "available compression if you can for both the viewer side and the origin side consider HTTP 2 if that works for your",
    "start": "1195090",
    "end": "1203580"
  },
  {
    "text": "application and there are a number of things to look at and test out but we",
    "start": "1203580",
    "end": "1208920"
  },
  {
    "text": "definitely that's useful for using fewer connections do you know for the request",
    "start": "1208920",
    "end": "1215280"
  },
  {
    "text": "and response and lastly you know configure timeouts based on what works",
    "start": "1215280",
    "end": "1220350"
  },
  {
    "text": "for your applications thank you I'll just hand it over to Alexander who's going to talk about how",
    "start": "1220350",
    "end": "1225720"
  },
  {
    "text": "you can further customize content delivery using lambda attached hello",
    "start": "1225720",
    "end": "1236700"
  },
  {
    "text": "everyone my name is Alexander and I'm from CloudFront Lambeth H team I see",
    "start": "1236700",
    "end": "1242370"
  },
  {
    "text": "that we have full house today nice doesn't happen often when we play poker I guess so",
    "start": "1242370",
    "end": "1255110"
  },
  {
    "start": "1251000",
    "end": "1251000"
  },
  {
    "text": "chitin has just explained the basics of how Amazon CloudFront works and how we",
    "start": "1255110",
    "end": "1260730"
  },
  {
    "text": "can configure it to serve different types of content but what if the existing set of configuration parameters",
    "start": "1260730",
    "end": "1267120"
  },
  {
    "text": "is not enough to meet the needs of your customers how do you tailor a cloud from",
    "start": "1267120",
    "end": "1272160"
  },
  {
    "text": "distribution to meet unique and maybe specific requirements of your web",
    "start": "1272160",
    "end": "1277290"
  },
  {
    "text": "application this is what long adesh is designed for so lambda with all its",
    "start": "1277290",
    "end": "1285150"
  },
  {
    "text": "benefits is a regional service and CloudFront is a global one with about hundred",
    "start": "1285150",
    "end": "1291810"
  },
  {
    "text": "locations around the world and lambeth age brings these two sources together",
    "start": "1291810",
    "end": "1297890"
  },
  {
    "text": "you write along the function once and when you configure call Trond see you",
    "start": "1297890",
    "end": "1302910"
  },
  {
    "text": "invoke it the function magically gets globally replicated so the cloud front can invoke that function at a the west",
    "start": "1302910",
    "end": "1310200"
  },
  {
    "text": "location called this to a viewer with Lambeth edge you program CloudFront not",
    "start": "1310200",
    "end": "1319350"
  },
  {
    "text": "just configure it so before we go any further and dive",
    "start": "1319350",
    "end": "1324900"
  },
  {
    "start": "1322000",
    "end": "1322000"
  },
  {
    "text": "into some of the use cases let's just see what clutter on the vans can three could be seclusion of a lambda",
    "start": "1324900",
    "end": "1330690"
  },
  {
    "text": "function here's the standard events all so first a viewer should be request",
    "start": "1330690",
    "end": "1337470"
  },
  {
    "text": "lands at the closed edge location CloudFront triggers view request amount",
    "start": "1337470",
    "end": "1344960"
  },
  {
    "text": "in the function triggered by view request amount you can modify the properties of the quest for example",
    "start": "1344960",
    "end": "1351090"
  },
  {
    "text": "those that I included in the cache key you can optimize normalize the query",
    "start": "1351090",
    "end": "1356220"
  },
  {
    "text": "string or use the agent for better cache hit ratio then close Ron checks if the",
    "start": "1356220",
    "end": "1362340"
  },
  {
    "text": "object is already in the cache and if it is it should be immediately returned back to the viewer but right before",
    "start": "1362340",
    "end": "1370140"
  },
  {
    "text": "CloudFront does so it triggers view responsive and and this gives the",
    "start": "1370140",
    "end": "1375690"
  },
  {
    "text": "opportunity to customize that response fold that particular viewer for that",
    "start": "1375690",
    "end": "1381330"
  },
  {
    "text": "particular request and these are the",
    "start": "1381330",
    "end": "1387059"
  },
  {
    "text": "only two events that the trigger for the cache hit case and given the your",
    "start": "1387059",
    "end": "1393540"
  },
  {
    "text": "content is cashable that's the majority of traffic here so let's see what",
    "start": "1393540",
    "end": "1399780"
  },
  {
    "text": "happens in case in case of cache miss view request is tribute same way as",
    "start": "1399780",
    "end": "1407100"
  },
  {
    "text": "before then close run checks whether the object is in the cache and if it's not gonna be in the cache maybe it should be",
    "start": "1407100",
    "end": "1413850"
  },
  {
    "text": "refreshed war the quest is not catchable at all for example post a put request CloudFront sends requests to your origin",
    "start": "1413850",
    "end": "1421980"
  },
  {
    "text": "but right before call from does so it triggers urge the quest event and this",
    "start": "1421980",
    "end": "1430710"
  },
  {
    "text": "is the perfect place to modify the request so that in the so that",
    "start": "1430710",
    "end": "1435870"
  },
  {
    "text": "integrates better with your origin when origin sounds back the response quadrant",
    "start": "1435870",
    "end": "1443100"
  },
  {
    "text": "triggers origin response event and here you can modify the response so that it's stored in the cache and CloudFront can",
    "start": "1443100",
    "end": "1450510"
  },
  {
    "text": "serve the modified response next time without the invoking the lambda function",
    "start": "1450510",
    "end": "1455740"
  },
  {
    "text": "and last view responses invoked exactly the same as for the cache hit case so",
    "start": "1455740",
    "end": "1465760"
  },
  {
    "start": "1465000",
    "end": "1465000"
  },
  {
    "text": "when you are about to use lambda edge the first thing you need to do is to decide what I want type to use here I'm",
    "start": "1465760",
    "end": "1473169"
  },
  {
    "text": "just summarizing what I have just said about the events side by side but I also would like to add a couple of common use",
    "start": "1473169",
    "end": "1479529"
  },
  {
    "text": "cases so for Bureau bands communist Keys include cache key optimization of",
    "start": "1479529",
    "end": "1486399"
  },
  {
    "text": "syndication and access control and pure viewer contextualization for original",
    "start": "1486399",
    "end": "1495549"
  },
  {
    "text": "facing advance the use cases are wider class content customization for example",
    "start": "1495549",
    "end": "1501690"
  },
  {
    "text": "desktop versus mobile traffic segregation but integration via the origin and constant generation you can",
    "start": "1501690",
    "end": "1510700"
  },
  {
    "text": "set up any combination of these events to be triggered for your request to meet the needs of video particularly use case",
    "start": "1510700",
    "end": "1517679"
  },
  {
    "text": "so sometimes it may be unclear which event type to use and our recommendation",
    "start": "1517679",
    "end": "1524200"
  },
  {
    "text": "in this case first to see if your use case can be solved with original facing",
    "start": "1524200",
    "end": "1529270"
  },
  {
    "text": "events because such approach allows you to leverage class from cache and minimize the number of longer",
    "start": "1529270",
    "end": "1535750"
  },
  {
    "text": "functioning vacations thus reducing both latency and cost so let's dive deeper",
    "start": "1535750",
    "end": "1542559"
  },
  {
    "text": "into some of the use cases and the first one is security and that's the oldest",
    "start": "1542559",
    "end": "1550000"
  },
  {
    "text": "the top priority in modern web many security features are implemented and",
    "start": "1550000",
    "end": "1557770"
  },
  {
    "text": "enforced by web browsers and such such",
    "start": "1557770",
    "end": "1563370"
  },
  {
    "text": "client-side security features are usually enabled and configured by response headers sent from the web",
    "start": "1563370",
    "end": "1571059"
  },
  {
    "text": "servers which of course run in the cloud so how does how can limit edge help here",
    "start": "1571059",
    "end": "1580740"
  },
  {
    "start": "1581000",
    "end": "1581000"
  },
  {
    "text": "here is the list of some security headers and what they use for maybe it",
    "start": "1581279",
    "end": "1587320"
  },
  {
    "text": "looks scary but don't worry I'm not going through this list in detail right now so what's important here that often origin servers",
    "start": "1587320",
    "end": "1594580"
  },
  {
    "text": "do not include all security headers that you may want to send to your clients in this case you need to add these security",
    "start": "1594580",
    "end": "1602350"
  },
  {
    "text": "headers yourself luckily it turns out that enable security features and adding",
    "start": "1602350",
    "end": "1607480"
  },
  {
    "text": "such headers is the simplest use case for lambda2 edge and it is the perfect",
    "start": "1607480",
    "end": "1613900"
  },
  {
    "text": "example for the origin response event trigger here is how one with edge",
    "start": "1613900",
    "end": "1623560"
  },
  {
    "text": "function may look like that as some security headers I won't go into much",
    "start": "1623560",
    "end": "1629470"
  },
  {
    "text": "details about no GS programming model which we use when you write on the function but the essence here is that we",
    "start": "1629470",
    "end": "1635740"
  },
  {
    "text": "define a handler that takes amount object as input and given this function",
    "start": "1635740",
    "end": "1641560"
  },
  {
    "text": "associated with origin response MN trigger this event will contain the",
    "start": "1641560",
    "end": "1647320"
  },
  {
    "text": "response that quadrant received from your origin and this response object has",
    "start": "1647320",
    "end": "1653440"
  },
  {
    "text": "headers and we add two more headers in this case we had strict Transport",
    "start": "1653440",
    "end": "1660430"
  },
  {
    "text": "Security header to mean force HTTPS and we get X frame options header to",
    "start": "1660430",
    "end": "1667780"
  },
  {
    "text": "disallow embedded frames so you just add headers by specifying key value pairs",
    "start": "1667780",
    "end": "1673470"
  },
  {
    "text": "you can also do these headers if you like for example in this case we can delete course headers restricting it to",
    "start": "1673470",
    "end": "1680950"
  },
  {
    "text": "the default same origin security policy and at last at the end of your along the",
    "start": "1680950",
    "end": "1686440"
  },
  {
    "text": "function you pass the modified response back to CloudFront using the callback function at this step",
    "start": "1686440",
    "end": "1696400"
  },
  {
    "text": "Caltrans will handle your modified response as if it is received from the",
    "start": "1696400",
    "end": "1701560"
  },
  {
    "text": "origin is inherent in the cache as well",
    "start": "1701560",
    "end": "1706170"
  },
  {
    "text": "next let's take a look at the contact customization scenarios say your web",
    "start": "1708480",
    "end": "1715060"
  },
  {
    "text": "application have viewers of two type two types desktop and mobile client a and",
    "start": "1715060",
    "end": "1722020"
  },
  {
    "text": "client B both types of viewers request the object",
    "start": "1722020",
    "end": "1727370"
  },
  {
    "text": "using exactly the same URI path now you want to deliver content which is",
    "start": "1727370",
    "end": "1735139"
  },
  {
    "text": "optimized for a certain client type so that customers can enjoy the best",
    "start": "1735139",
    "end": "1742340"
  },
  {
    "text": "possible experience how do you do that",
    "start": "1742340",
    "end": "1747460"
  },
  {
    "text": "normally for something like this you would handle such customization logic at",
    "start": "1747669",
    "end": "1754249"
  },
  {
    "text": "your origin or maybe some kind of the toxic lead language can help you with this case as",
    "start": "1754249",
    "end": "1760580"
  },
  {
    "text": "well with rounded edge origin can be as simple as a strip bucket so in order to",
    "start": "1760580",
    "end": "1769700"
  },
  {
    "start": "1768000",
    "end": "1768000"
  },
  {
    "text": "segregate traffic for content customization you need some sort of classification condition and generally",
    "start": "1769700",
    "end": "1775519"
  },
  {
    "text": "speaking there are two cases when the classification condition can be a part of the cache key and when it cannot so",
    "start": "1775519",
    "end": "1781759"
  },
  {
    "text": "let's start with the first case when the classification condition can be part of the cache key for example it can be a",
    "start": "1781759",
    "end": "1788929"
  },
  {
    "text": "viewer device type viewer country CloudFront can add such headers for you",
    "start": "1788929",
    "end": "1794059"
  },
  {
    "text": "it can also be query string parameter cookie or any other header or maybe you",
    "start": "1794059",
    "end": "1799159"
  },
  {
    "text": "can have some custom logic depending on the combination of these so to customize",
    "start": "1799159",
    "end": "1804320"
  },
  {
    "text": "the content you first add this classification condition to the cache key so that multiple objects will be",
    "start": "1804320",
    "end": "1813559"
  },
  {
    "text": "stored in the cache depending on the client type second you can write the",
    "start": "1813559",
    "end": "1819139"
  },
  {
    "text": "origin request function that when you files the request for example it can rewrite your i/o it can set the origin",
    "start": "1819139",
    "end": "1826639"
  },
  {
    "text": "domain name let source the optimized content after that you don't need any",
    "start": "1826639",
    "end": "1832700"
  },
  {
    "text": "extra logic on your origin side it can be just a simple three bucket that serves the optimized object in this case",
    "start": "1832700",
    "end": "1840850"
  },
  {
    "text": "depending on the path desktop or mobile and that's it so a three sends two",
    "start": "1840850",
    "end": "1850340"
  },
  {
    "text": "objects back via cache separately in cloud from cache and then delivered to the viewers which",
    "start": "1850340",
    "end": "1856220"
  },
  {
    "text": "enjoy best possible experience on their own device types there are also cases",
    "start": "1856220",
    "end": "1863690"
  },
  {
    "text": "when the classification condition cannot be part of the cache key for example you",
    "start": "1863690",
    "end": "1868909"
  },
  {
    "text": "may need to perform authorization of the request before the cache look up or the",
    "start": "1868909",
    "end": "1875000"
  },
  {
    "text": "classification condition itself can be uniquely reviewer for example depending on the user agent",
    "start": "1875000",
    "end": "1881510"
  },
  {
    "text": "or an IP address thus it's unlikely that the site request will have a cache hit",
    "start": "1881510",
    "end": "1887270"
  },
  {
    "text": "in the future in this case you can await the classification condition in the view",
    "start": "1887270",
    "end": "1893210"
  },
  {
    "text": "request function in the example diagram here we intercept the request before it",
    "start": "1893210",
    "end": "1899330"
  },
  {
    "text": "hits close from cache we make a call to remove the theorization API and then we",
    "start": "1899330",
    "end": "1905480"
  },
  {
    "text": "rewrite URI so that it's cached separately if the authorization fails we",
    "start": "1905480",
    "end": "1910940"
  },
  {
    "text": "can reject requests we can redirect it to the say login page all we can serve",
    "start": "1910940",
    "end": "1916610"
  },
  {
    "text": "some free customized the free version of the requested object and if the",
    "start": "1916610",
    "end": "1923299"
  },
  {
    "text": "ostriches authorization succeeds we can serve the full premium content so s3",
    "start": "1923299",
    "end": "1937450"
  },
  {
    "text": "returns the request for your premium object it's stored in the cache",
    "start": "1937450",
    "end": "1943039"
  },
  {
    "text": "typically in 12 front and then you receives the content that they have paid for here in this kind of setup I would",
    "start": "1943039",
    "end": "1951020"
  },
  {
    "text": "like to note that with the call to remote API takes time and while you're",
    "start": "1951020",
    "end": "1956539"
  },
  {
    "text": "calling remote API the processing of the request by CloudFront is blocked so in",
    "start": "1956539",
    "end": "1961909"
  },
  {
    "text": "this case you may want to consider replicating your API to multiple regions to minimize the overall latency now",
    "start": "1961909",
    "end": "1974090"
  },
  {
    "text": "let's talk about whole group of use cases see your web application has a",
    "start": "1974090",
    "end": "1979610"
  },
  {
    "text": "global presence and origins in multiple regions you may want in this case to",
    "start": "1979610",
    "end": "1985640"
  },
  {
    "text": "minimize the latency by going to the origin which is close to your viewer or on the other hand you may have some",
    "start": "1985640",
    "end": "1993919"
  },
  {
    "text": "sort of data sovereignty requirements and you may want like your opinion clients to go to your opinion origin",
    "start": "1993919",
    "end": "2001630"
  },
  {
    "text": "even if they send such requests from outside of Europe you may have multiple",
    "start": "2001630",
    "end": "2007900"
  },
  {
    "text": "origins and each one source optimized content and you want to route the",
    "start": "2007900",
    "end": "2014529"
  },
  {
    "text": "request to the right origin you may also need to perform controlled audition",
    "start": "2014529",
    "end": "2020320"
  },
  {
    "text": "deployments a be testing or migration from one version to another while",
    "start": "2020320",
    "end": "2026230"
  },
  {
    "text": "preserving sticky sessions all these cases and many other are covered now we",
    "start": "2026230",
    "end": "2033070"
  },
  {
    "text": "found that edge origin selection feature in lambda function delivered by origin",
    "start": "2033070",
    "end": "2038620"
  },
  {
    "text": "request event you can select the origin CloudFront force the request to and here",
    "start": "2038620",
    "end": "2044919"
  },
  {
    "start": "2044000",
    "end": "2044000"
  },
  {
    "text": "is how the london function code may look like so in this example assume you have",
    "start": "2044919",
    "end": "2051190"
  },
  {
    "text": "multiple origins and their domain names have region name in it so with some",
    "start": "2051190",
    "end": "2057220"
  },
  {
    "text": "custom illogic that i walked out of this constable you can select the region say depending on the viewer of viewer",
    "start": "2057220",
    "end": "2065020"
  },
  {
    "text": "country / clueless AWS region was maybe some other properties of the request",
    "start": "2065020",
    "end": "2070750"
  },
  {
    "text": "next we define origin domain name say my origin in this particular region calm",
    "start": "2070750",
    "end": "2077138"
  },
  {
    "text": "and next we update the request origin the main name for cold front and we also",
    "start": "2077139",
    "end": "2083138"
  },
  {
    "text": "did the host header to match that domain name and that's it so you passed the modified request back to quadrant and",
    "start": "2083139",
    "end": "2089349"
  },
  {
    "text": "CloudFront will send this request to the origin that you have specified so we are",
    "start": "2089349",
    "end": "2096908"
  },
  {
    "text": "excited about this feature and who like to hear back from you how you use this kind of flexibility in your web",
    "start": "2096909",
    "end": "2103089"
  },
  {
    "text": "applications so choosing the closest origin with",
    "start": "2103089",
    "end": "2111789"
  },
  {
    "start": "2106000",
    "end": "2106000"
  },
  {
    "text": "dynamic origin selection feature is great but it requires multiple origins",
    "start": "2111789",
    "end": "2116859"
  },
  {
    "text": "to be there so that you can choose one in the first place so it requires a",
    "start": "2116859",
    "end": "2122559"
  },
  {
    "text": "replicating original infrastructure to multiple regions with laminate edge",
    "start": "2122559",
    "end": "2129400"
  },
  {
    "text": "using view request or written request functions you can generate responses and",
    "start": "2129400",
    "end": "2134969"
  },
  {
    "text": "content from a diverse location causes to a viewer without the burden of replicating original sense",
    "start": "2134969",
    "end": "2141039"
  },
  {
    "text": "infrastructure or even without any origins at all for that matter",
    "start": "2141039",
    "end": "2146999"
  },
  {
    "text": "so here is the list of use cases solved by lambda edge response generation",
    "start": "2146999",
    "end": "2153880"
  },
  {
    "text": "functionality you can respond with HP redirects for example your clients send",
    "start": "2153880",
    "end": "2161109"
  },
  {
    "text": "requests to all the URI which is no longer available and in this case you may want to rather let them to the new",
    "start": "2161109",
    "end": "2167349"
  },
  {
    "text": "location you can generate dynamic content by fetching the state from",
    "start": "2167349",
    "end": "2173789"
  },
  {
    "text": "Amazon CloudFront cache or maybe from some other replicated AWS the resource",
    "start": "2173789",
    "end": "2179709"
  },
  {
    "text": "for example s3 bucket will replicate a DynamoDB table you can generate content",
    "start": "2179709",
    "end": "2186839"
  },
  {
    "text": "by aggregating from multiple sources you can generate customized content that",
    "start": "2186839",
    "end": "2192609"
  },
  {
    "text": "depends on the properties of the request such as cookies country device type use the agent you name it so and here's the",
    "start": "2192609",
    "end": "2201069"
  },
  {
    "text": "cool part for each single request you can choose whether you generate response immediately or you pass it back to",
    "start": "2201069",
    "end": "2207940"
  },
  {
    "text": "Claude front for the cache new tab and maybe moving to the origins so I would",
    "start": "2207940",
    "end": "2216099"
  },
  {
    "text": "like to mention that there is a breakout session called building service websites",
    "start": "2216099",
    "end": "2221650"
  },
  {
    "text": "with rounded edge this Friday dedicated to this topic alone and I encourage you either to attend it or",
    "start": "2221650",
    "end": "2228430"
  },
  {
    "text": "watch YouTube video if you are interested more in this topic but I",
    "start": "2228430",
    "end": "2233440"
  },
  {
    "text": "would like to just show you two code examples how you can use this feature so the first one",
    "start": "2233440",
    "end": "2240470"
  },
  {
    "start": "2238000",
    "end": "2238000"
  },
  {
    "text": "is the example that you must raise how",
    "start": "2240470",
    "end": "2245660"
  },
  {
    "text": "you can either pass the request further to CloudFront for the cache look up and go into the origin or return response",
    "start": "2245660",
    "end": "2251930"
  },
  {
    "text": "immediately this use case is similar to the one that I mentioned before so here",
    "start": "2251930",
    "end": "2258140"
  },
  {
    "text": "you perform some kind of customer authorization with perform custom oath",
    "start": "2258140",
    "end": "2263470"
  },
  {
    "text": "function which is up to you to implement and it has the pants on your web application but for example if the",
    "start": "2263470",
    "end": "2270740"
  },
  {
    "text": "authorization fails and returns an error we can log it and then build the",
    "start": "2270740",
    "end": "2276109"
  },
  {
    "text": "response object in this case 302 redirect and we can redirect the user to the login page so we pass in this case",
    "start": "2276109",
    "end": "2284000"
  },
  {
    "text": "we pass the response back to plot round otherwise if fertilization succeeded we",
    "start": "2284000",
    "end": "2290960"
  },
  {
    "text": "can just pass the unchanged request object back well Frank so that coffin",
    "start": "2290960",
    "end": "2297530"
  },
  {
    "text": "can make the castle cup or reach out to your origin pretty simple and the last",
    "start": "2297530",
    "end": "2307580"
  },
  {
    "text": "one that age code snippet for today is the example of origin request function",
    "start": "2307580",
    "end": "2313280"
  },
  {
    "text": "that generates HTML page by aggregating content from multiple sources first we",
    "start": "2313280",
    "end": "2320599"
  },
  {
    "text": "fetch HTML template and some data from the dynami table notice that here we do",
    "start": "2320599",
    "end": "2326839"
  },
  {
    "text": "it as synchronously in parallel using the I sink and ogs module again I'm",
    "start": "2326839",
    "end": "2334880"
  },
  {
    "text": "leaving out this get HTML template and get data from dinah maybe functions",
    "start": "2334880",
    "end": "2341390"
  },
  {
    "text": "implementations out of this Cosima to make it like fit in one slide but it's pretty easy to implement this functions",
    "start": "2341390",
    "end": "2347089"
  },
  {
    "text": "as well like to get data from quadrant you just send the HTTP request applause and cache or to get data from the enemy",
    "start": "2347089",
    "end": "2354619"
  },
  {
    "text": "to be table you can use either way as no GS SDK so when both these pieces a fish",
    "start": "2354619",
    "end": "2360530"
  },
  {
    "text": "successfully we fall to this last block of this function in this case we build",
    "start": "2360530",
    "end": "2369260"
  },
  {
    "text": "HTTP 200 responds with HTML payload based on the",
    "start": "2369260",
    "end": "2374950"
  },
  {
    "text": "request properties HT multi-plate that we fished and later from DynamoDB table",
    "start": "2374950",
    "end": "2382960"
  },
  {
    "text": "and at last we pass this response with",
    "start": "2382960",
    "end": "2389240"
  },
  {
    "text": "HTML body back to close from Houston the callback function very powerful and",
    "start": "2389240",
    "end": "2394640"
  },
  {
    "text": "flexible on the edge feature all right",
    "start": "2394640",
    "end": "2400750"
  },
  {
    "start": "2399000",
    "end": "2399000"
  },
  {
    "text": "so let's summarize all of this one that",
    "start": "2400750",
    "end": "2406100"
  },
  {
    "text": "edge makes quadrant a true programmable CDM we encourage you to go beyond static",
    "start": "2406100",
    "end": "2412850"
  },
  {
    "text": "configurations problem CloudFront to meet the specific needs of your publication with Vantage functions",
    "start": "2412850",
    "end": "2421930"
  },
  {
    "text": "select the event type carefully think about the Associated trade-offs first",
    "start": "2422080",
    "end": "2427790"
  },
  {
    "text": "see if your use case can be solved its origin facing functions to leverage call from cache and if you are doing it in",
    "start": "2427790",
    "end": "2434840"
  },
  {
    "text": "viewer facing functions try to minimize overall function execution time generate",
    "start": "2434840",
    "end": "2443360"
  },
  {
    "text": "content with lambda edge simplify I will",
    "start": "2443360",
    "end": "2448430"
  },
  {
    "text": "replace your origins with rounded edge functions think Cyril s in our case becomes think original s okay I hope",
    "start": "2448430",
    "end": "2459500"
  },
  {
    "text": "that wasn't too much for a flash talk and next come I will talk about really",
    "start": "2459500",
    "end": "2465020"
  },
  {
    "text": "user monitoring thank you [Applause]",
    "start": "2465020",
    "end": "2475558"
  },
  {
    "text": "hi everyone I'm coming from a developer from Coughlin team Alexander just gave",
    "start": "2475670",
    "end": "2482430"
  },
  {
    "text": "us many example how we can expand our application no matter what types",
    "start": "2482430",
    "end": "2488670"
  },
  {
    "text": "application we have we care about the performance of our application more",
    "start": "2488670",
    "end": "2493800"
  },
  {
    "text": "precisely we care about our customer experience so today in the last section",
    "start": "2493800",
    "end": "2499770"
  },
  {
    "text": "of this session I would like to talk about how you major application performance with real user monitoring",
    "start": "2499770",
    "end": "2507829"
  },
  {
    "text": "specifically I will cover synthetic monitoring as opposed to real user monitoring and different uses cases of",
    "start": "2508040",
    "end": "2515520"
  },
  {
    "text": "different monitoring including when to use one over the other and also I will",
    "start": "2515520",
    "end": "2521069"
  },
  {
    "text": "cover what to measure when you measure in the content downloading for different cases so what is synthetic monitoring",
    "start": "2521069",
    "end": "2530160"
  },
  {
    "start": "2527000",
    "end": "2527000"
  },
  {
    "text": "you can think of sensors monitoring us you artificially generating some traffic",
    "start": "2530160",
    "end": "2535319"
  },
  {
    "text": "to either your origin or CDN to determine if your application is",
    "start": "2535319",
    "end": "2540630"
  },
  {
    "text": "available or if their performance is good enough so this goes to the",
    "start": "2540630",
    "end": "2546510"
  },
  {
    "text": "different paths as your usual users going through a simple example of synthetic monitoring is that you spin up",
    "start": "2546510",
    "end": "2553770"
  },
  {
    "text": "hitting instances in different regions then configure a cron job to Puri make",
    "start": "2553770",
    "end": "2559440"
  },
  {
    "text": "requests to application then aggregating those data to determine your performance",
    "start": "2559440",
    "end": "2566069"
  },
  {
    "text": "and availability of your application so",
    "start": "2566069",
    "end": "2571319"
  },
  {
    "start": "2571000",
    "end": "2571000"
  },
  {
    "text": "what are use is gives for such a monitoring you can get consistent health status of a application that's first one",
    "start": "2571319",
    "end": "2578069"
  },
  {
    "text": "and also you can get baseline performance about your application before you launch a new feature or your",
    "start": "2578069",
    "end": "2584579"
  },
  {
    "text": "launch application your new region when you're launching a new feature or in a new region you don't have your user data",
    "start": "2584579",
    "end": "2591150"
  },
  {
    "text": "available in such a case the synthetic monitoring will be very helpful to provide you a baseline performance or",
    "start": "2591150",
    "end": "2598319"
  },
  {
    "text": "baseline data for your application another example about",
    "start": "2598319",
    "end": "2604210"
  },
  {
    "text": "is you can configure the request to test a specific path of the application so",
    "start": "2604210",
    "end": "2610540"
  },
  {
    "text": "that you can monitor a critical feature of a application in that case when you",
    "start": "2610540",
    "end": "2615760"
  },
  {
    "text": "have anything wrong with the application you can determine where exactly things going wrong when that critical feature",
    "start": "2615760",
    "end": "2622030"
  },
  {
    "text": "is not functional in chrome phone we use cinnamon as well to monitor health and performance of our",
    "start": "2622030",
    "end": "2629290"
  },
  {
    "text": "edge locations this provides us a great visibility when we bring when we have a",
    "start": "2629290",
    "end": "2636099"
  },
  {
    "text": "new edge locations so that we know if that new edge locations is available or",
    "start": "2636099",
    "end": "2641950"
  },
  {
    "text": "have expected performance for to serve customer traffic though we can use",
    "start": "2641950",
    "end": "2649420"
  },
  {
    "start": "2648000",
    "end": "2648000"
  },
  {
    "text": "sender monitoring to improve our service there is cases that since the monitoring will fail so now let's talk about",
    "start": "2649420",
    "end": "2656200"
  },
  {
    "text": "typical failure cases when standard monitoring goes wrong in this example",
    "start": "2656200",
    "end": "2662500"
  },
  {
    "text": "I'm describing here we have five endpoints that we are setting the sensitive monitoring from two major",
    "start": "2662500",
    "end": "2669130"
  },
  {
    "text": "application availability now the problem with this is you are only testing what",
    "start": "2669130",
    "end": "2676450"
  },
  {
    "text": "you are know about your application there is no way that you can intimate every cases that your user is actually",
    "start": "2676450",
    "end": "2682480"
  },
  {
    "text": "using your application so if you look at the user here he is reaching to your",
    "start": "2682480",
    "end": "2687730"
  },
  {
    "text": "application from South America and your monitoring from around the world is showing that your application is 100%",
    "start": "2687730",
    "end": "2694809"
  },
  {
    "text": "available however in reality he has no",
    "start": "2694809",
    "end": "2701049"
  },
  {
    "text": "connectivity to reach out to your application you are not going to detect this because you have nothing running in",
    "start": "2701049",
    "end": "2707530"
  },
  {
    "text": "the same location as your user is reaching from your application so some",
    "start": "2707530",
    "end": "2713049"
  },
  {
    "text": "of the failure cases we can see here is that forced entry monitoring is that the network pass your user is experiencing",
    "start": "2713049",
    "end": "2720609"
  },
  {
    "text": "is completely different from the monitoring service you have to address",
    "start": "2720609",
    "end": "2727180"
  },
  {
    "start": "2726000",
    "end": "2726000"
  },
  {
    "text": "what is in the monitor fails we can use rum in Crofton we really rely on the",
    "start": "2727180",
    "end": "2732809"
  },
  {
    "text": "real user monitoring because that's the real indication how customer is using cruffin and how what",
    "start": "2732809",
    "end": "2740339"
  },
  {
    "text": "our performance and availability they are dealing with rom you generally have",
    "start": "2740339",
    "end": "2745800"
  },
  {
    "text": "a script injecting and web pages that majors or timing various stages will",
    "start": "2745800",
    "end": "2751500"
  },
  {
    "text": "request then those information about decision will be sent back to some aggregation layer to provide a status",
    "start": "2751500",
    "end": "2760140"
  },
  {
    "text": "for you to analyze with rom you can measure all aspects of your request and",
    "start": "2760140",
    "end": "2767240"
  },
  {
    "start": "2763000",
    "end": "2763000"
  },
  {
    "text": "all aspects about your customer experience with those data you can have better understandings where your",
    "start": "2767240",
    "end": "2774150"
  },
  {
    "text": "bottleneck is for your application or we are whether you have a pivot row for",
    "start": "2774150",
    "end": "2779190"
  },
  {
    "text": "partial customers that share some common attributes one use cases of rum at",
    "start": "2779190",
    "end": "2785490"
  },
  {
    "text": "Crafton is that in Crofton we major a latency between our end users network to",
    "start": "2785490",
    "end": "2791130"
  },
  {
    "text": "our edge locations then we use that data to route our end user to base edge",
    "start": "2791130",
    "end": "2796320"
  },
  {
    "text": "location so and this process is done in a real-time fashion so say we have an",
    "start": "2796320",
    "end": "2803700"
  },
  {
    "text": "end user reach into our edge location from Australia and that there is a some",
    "start": "2803700",
    "end": "2810540"
  },
  {
    "text": "network congestion that affects the latency between this end user to our edge location in that case our system we",
    "start": "2810540",
    "end": "2818070"
  },
  {
    "text": "were to take this and then fund up route this end user to another edge location",
    "start": "2818070",
    "end": "2823890"
  },
  {
    "text": "that has better latency or better network connectivity so there's another station talking about how Carphone do",
    "start": "2823890",
    "end": "2831510"
  },
  {
    "text": "this in real time and in more details so if you have if you have interested in that I suggest you go to that station as",
    "start": "2831510",
    "end": "2838170"
  },
  {
    "text": "well let's go back to our topic so far I've talked about what are the",
    "start": "2838170",
    "end": "2844560"
  },
  {
    "start": "2840000",
    "end": "2840000"
  },
  {
    "text": "difference between certain monitoring and run and there are different use cases now let's talk about how if you",
    "start": "2844560",
    "end": "2852030"
  },
  {
    "text": "are implemented yourself what are the metrics that you can look at or what are the metrics are important or what",
    "start": "2852030",
    "end": "2859619"
  },
  {
    "text": "measures are not important so let's take a look at this example here so this is a random request",
    "start": "2859619",
    "end": "2866780"
  },
  {
    "text": "connection program on a request made from a browser and if you look at here the queueing",
    "start": "2866780",
    "end": "2873839"
  },
  {
    "text": "store often times January our tracking time for a proxy requests and it's very",
    "start": "2873839",
    "end": "2879329"
  },
  {
    "text": "low here so probably not much to optimize here the same as DNS lookup 1",
    "start": "2879329",
    "end": "2885180"
  },
  {
    "text": "milliseconds really low which means the client most likely already have the result cache in their local resolver the",
    "start": "2885180",
    "end": "2892619"
  },
  {
    "text": "interesting thing here is if we look at the initial connection time the initial",
    "start": "2892619",
    "end": "2898380"
  },
  {
    "text": "connection time including TCP handshake and essays and negotiation associations is taking more than 90% of the",
    "start": "2898380",
    "end": "2904799"
  },
  {
    "text": "connection time now let's look further into the entire request here we have the",
    "start": "2904799",
    "end": "2911999"
  },
  {
    "text": "request stand time which is the time it takes for a browser to send a request and also we have time to first byte and",
    "start": "2911999",
    "end": "2920329"
  },
  {
    "text": "content download time which essentially is time to last byte so the small value",
    "start": "2920329",
    "end": "2925859"
  },
  {
    "text": "here for the content down time indicates that this is requested for smaller object the findings here is that initial",
    "start": "2925859",
    "end": "2935819"
  },
  {
    "text": "connection time including inserts and negotiations are taking 60% of the total download time and time to first byte",
    "start": "2935819",
    "end": "2943470"
  },
  {
    "text": "which is our DTS makes up 30% of total occurs time this means most of the",
    "start": "2943470",
    "end": "2950099"
  },
  {
    "text": "request time is spent on connection and our kiti's so what this tells us is for",
    "start": "2950099",
    "end": "2956460"
  },
  {
    "text": "small objects it is important it is important to look at the connection time and the RTT is value so if you have a",
    "start": "2956460",
    "end": "2963329"
  },
  {
    "start": "2962000",
    "end": "2962000"
  },
  {
    "text": "application that's served in many small objects like index pages you want to",
    "start": "2963329",
    "end": "2968730"
  },
  {
    "text": "optimize a cheap connection and improve our titties how do you do it at satiny",
    "start": "2968730",
    "end": "2974130"
  },
  {
    "text": "explained earlier we can reuse the HTTP connection by either keep longer keep a",
    "start": "2974130",
    "end": "2980220"
  },
  {
    "text": "live time to send a sequential request over single connection or we can use",
    "start": "2980220",
    "end": "2985700"
  },
  {
    "text": "HTTP to to send the parallel request over single connection also to improve",
    "start": "2985700",
    "end": "2993119"
  },
  {
    "text": "our TTS it is important for you to know that where your user is so that you can serve",
    "start": "2993119",
    "end": "2999239"
  },
  {
    "text": "your content as close as to your end user now let's look at a different example",
    "start": "2999239",
    "end": "3006080"
  },
  {
    "text": "this is a measurements for downloading fragment of video streaming as you can",
    "start": "3006080",
    "end": "3012690"
  },
  {
    "text": "see it almost didn't spend time on connection because the content was sent",
    "start": "3012690",
    "end": "3017970"
  },
  {
    "text": "over are already established connection instead more than 90% of the request",
    "start": "3017970",
    "end": "3023670"
  },
  {
    "text": "time is spent on content downloading so",
    "start": "3023670",
    "end": "3029850"
  },
  {
    "text": "what we can get from here is for streaming object SS on negotiations are",
    "start": "3029850",
    "end": "3035280"
  },
  {
    "start": "3030000",
    "end": "3030000"
  },
  {
    "text": "not that important instead it is important to look at content download time which translates",
    "start": "3035280",
    "end": "3041520"
  },
  {
    "text": "into circle the circle has most important impact on the coati of the",
    "start": "3041520",
    "end": "3047070"
  },
  {
    "text": "video your customer is the same and also if you cannot fill the buffer fast",
    "start": "3047070",
    "end": "3052290"
  },
  {
    "text": "enough your customers will see rebuffering so as optimization for the",
    "start": "3052290",
    "end": "3058710"
  },
  {
    "text": "video streaming you probably want to look at the congestion window setup or the server circuit setup lastly here are",
    "start": "3058710",
    "end": "3068970"
  },
  {
    "start": "3067000",
    "end": "3067000"
  },
  {
    "text": "a few best practices for monitoring your applications first of all used posts intelligent",
    "start": "3068970",
    "end": "3076050"
  },
  {
    "text": "monitoring and real user merging if possible because they have different pros and cons while synthetic monitoring",
    "start": "3076050",
    "end": "3083220"
  },
  {
    "text": "provides you a change of view over your application the ROM will provide you by",
    "start": "3083220",
    "end": "3088380"
  },
  {
    "text": "the coverage over your customer experience then when measuring the",
    "start": "3088380",
    "end": "3094020"
  },
  {
    "text": "metrics make sure you measure the 90s percentile values because for most",
    "start": "3094020",
    "end": "3099810"
  },
  {
    "text": "applications the average or 50 percentile values are not much different",
    "start": "3099810",
    "end": "3105210"
  },
  {
    "text": "so that your users or customers are not realized the difference between different services instead the 1990s",
    "start": "3105210",
    "end": "3113100"
  },
  {
    "text": "percentile values are the what makes your application different from others when metering availability make sure you",
    "start": "3113100",
    "end": "3121080"
  },
  {
    "text": "test your critical resources for in the case of the website make sure you test monitoring your index page or the user",
    "start": "3121080",
    "end": "3128280"
  },
  {
    "text": "sign function if that's important in the case of video streaming make sure you monitor the video manifest file because",
    "start": "3128280",
    "end": "3135300"
  },
  {
    "text": "without the manifest file you cannot get know where the Fremen is to serve your video content when meter the performance",
    "start": "3135300",
    "end": "3143960"
  },
  {
    "text": "make sure you know that where your users or your users tests so so that you know",
    "start": "3143960",
    "end": "3150510"
  },
  {
    "text": "you can serve your content from the crosses praise that to your end-user",
    "start": "3150510",
    "end": "3157520"
  },
  {
    "text": "also your know your tailor as we've seen the example of the video streaming it is",
    "start": "3157520",
    "end": "3163680"
  },
  {
    "text": "not always important that you have a better assess of connective a set of",
    "start": "3163680",
    "end": "3168720"
  },
  {
    "text": "negotiations time or the first by latency is not always the most important thing",
    "start": "3168720",
    "end": "3174319"
  },
  {
    "text": "lastly use car from viewer CDN we are global we can measure the latency",
    "start": "3174319",
    "end": "3181619"
  },
  {
    "text": "between the end-users to application and route users to the best 80 locations and improve performance for you that's it",
    "start": "3181619",
    "end": "3191160"
  },
  {
    "start": "3191000",
    "end": "3191000"
  },
  {
    "text": "for the user monitoring so a summary for today's session we have talked about how",
    "start": "3191160",
    "end": "3197790"
  },
  {
    "text": "to configure your caching based on different use cases also alexander covers we can use lambda edge to expand",
    "start": "3197790",
    "end": "3206970"
  },
  {
    "text": "your application for different uses for different use cases as well and lastly",
    "start": "3206970",
    "end": "3212819"
  },
  {
    "text": "we covered how you measure your user real user experience for different use",
    "start": "3212819",
    "end": "3220589"
  },
  {
    "text": "case as well and thank you for coming [Applause]",
    "start": "3220589",
    "end": "3228390"
  }
]