[
  {
    "start": "0",
    "end": "60000"
  },
  {
    "text": "hello I hope you enjoy the keynotes I hope you are enthusiastic this session",
    "start": "2959",
    "end": "12420"
  },
  {
    "text": "is gonna be about automating security and compliance testing for infrastructure is code for devstack ops",
    "start": "12420",
    "end": "19260"
  },
  {
    "text": "this is pretty long name that combines a lots of different methodologies in this",
    "start": "19260",
    "end": "25470"
  },
  {
    "text": "session we're going to build dev psych ops pipeline actually we are actually",
    "start": "25470",
    "end": "30570"
  },
  {
    "text": "going to build to different depths a code pipelines and we're going to talk",
    "start": "30570",
    "end": "36300"
  },
  {
    "text": "from high level conceptual stuff to drill down to the code level I hope it",
    "start": "36300",
    "end": "42450"
  },
  {
    "text": "will be an interesting ride for all of us my name is Roy fainted I'm the",
    "start": "42450",
    "end": "47730"
  },
  {
    "text": "co-founder and CTO of dome 9 security an Amazon advance partner with security",
    "start": "47730",
    "end": "54000"
  },
  {
    "text": "competency and as of yesterday also networking competency ok so to summarize",
    "start": "54000",
    "end": "63960"
  },
  {
    "text": "what we are trying to achieve in one word the goal is agility agility is now a key",
    "start": "63960",
    "end": "70080"
  },
  {
    "text": "to to have better performance than our competitors from security standpoint in",
    "start": "70080",
    "end": "77460"
  },
  {
    "text": "order to achieve that we want to push security and compliance as early as we",
    "start": "77460",
    "end": "83520"
  },
  {
    "text": "can into the developer lifecycle right",
    "start": "83520",
    "end": "89240"
  },
  {
    "text": "so this is kind of different from traditional model which is usually kind",
    "start": "89240",
    "end": "97020"
  },
  {
    "start": "95000",
    "end": "155000"
  },
  {
    "text": "of stuck way back in the pipeline so we build our software test it deploy to",
    "start": "97020",
    "end": "105570"
  },
  {
    "text": "some environment then run all our testing unit test application acceptance",
    "start": "105570",
    "end": "112680"
  },
  {
    "text": "tests and then come security at the end where an issue here sends this entire",
    "start": "112680",
    "end": "119790"
  },
  {
    "text": "process back to the beginning another kind of side effect of that is that it",
    "start": "119790",
    "end": "126299"
  },
  {
    "text": "puts too much pressure on the security team so now all the business the application owners the business owners",
    "start": "126299",
    "end": "133400"
  },
  {
    "text": "kind of and enthusiastic to push their application into production but putting",
    "start": "133400",
    "end": "140000"
  },
  {
    "text": "a lot of pressure on security that now are kind of a choke point for this entire organization so a new application",
    "start": "140000",
    "end": "147230"
  },
  {
    "text": "changes to existing application all falls under this into this bottleneck so",
    "start": "147230",
    "end": "156290"
  },
  {
    "start": "155000",
    "end": "246000"
  },
  {
    "text": "the idea is now that we have our infrastructure in the public cloud",
    "start": "156290",
    "end": "162730"
  },
  {
    "text": "infrastructure is code so just before I continue I want to synchronize on the terminology when I say infrastructure as",
    "start": "162730",
    "end": "170030"
  },
  {
    "text": "code I mean that one percent of our infrastructure is codified and not only that we're using kind of standard",
    "start": "170030",
    "end": "178280"
  },
  {
    "text": "templating to our infrastructure to put it in perspective I will be I will be",
    "start": "178280",
    "end": "185180"
  },
  {
    "text": "addressing cloud formation templates if you are a terraform shop you can take",
    "start": "185180",
    "end": "191060"
  },
  {
    "text": "those same concepts with your terraform deployments so so our infrastructure",
    "start": "191060",
    "end": "197840"
  },
  {
    "text": "finally is code is a template so the idea is to apply coding best practices",
    "start": "197840",
    "end": "204169"
  },
  {
    "text": "to our infrastructure as code right so because it's a code I can test it as",
    "start": "204169",
    "end": "209239"
  },
  {
    "text": "code I I do not need to deploy these environments into production into",
    "start": "209239",
    "end": "214879"
  },
  {
    "text": "another environment I can test the code as code in order to get to gain stick",
    "start": "214879",
    "end": "220519"
  },
  {
    "text": "security and compliance findings now we've done that in the application realm",
    "start": "220519",
    "end": "227659"
  },
  {
    "text": "application development round for for many years we have you know unit tests and we have static static source source",
    "start": "227659",
    "end": "237139"
  },
  {
    "text": "control tools but this ecosystem for",
    "start": "237139",
    "end": "242540"
  },
  {
    "text": "infrastructure code is kind of written in its infancy okay so let's have a plan",
    "start": "242540",
    "end": "249370"
  },
  {
    "start": "246000",
    "end": "336000"
  },
  {
    "text": "our plan is a multi-stage approach to tackle these these challenges so first",
    "start": "249370",
    "end": "255379"
  },
  {
    "text": "we want to prepare right so on the preparation stage we are defining a core",
    "start": "255379",
    "end": "261919"
  },
  {
    "text": "set of industry best practices all our regulatory compliance",
    "start": "261919",
    "end": "267440"
  },
  {
    "text": "compliance regulations security controls and our own kind of internal core policies this is usually something that",
    "start": "267440",
    "end": "274850"
  },
  {
    "text": "probably most of you have already in some kind of forms Word documents Excel",
    "start": "274850",
    "end": "280310"
  },
  {
    "text": "spreadsheets so that's the preparation stage now from now at the commit stage",
    "start": "280310",
    "end": "287180"
  },
  {
    "text": "we are talking about what happens after someone developer DevOps committed and",
    "start": "287180",
    "end": "292390"
  },
  {
    "text": "infrastructure code a CFD template and the idea is to treat it again just like",
    "start": "292390",
    "end": "297710"
  },
  {
    "text": "any other application code so we will test the CFT itself without any need to provision any any environment at the",
    "start": "297710",
    "end": "306260"
  },
  {
    "text": "live stage we are going to deploy a live testing environment and and perform our",
    "start": "306260",
    "end": "312410"
  },
  {
    "text": "test over there so this is the power of the cloud I can spin up new environments in matter of seconds or minutes most of",
    "start": "312410",
    "end": "319820"
  },
  {
    "text": "the time and and then do our testing over there at the end of the at the end",
    "start": "319820",
    "end": "325550"
  },
  {
    "text": "of this pipeline we are talking about about the production system so there we are gonna have this continuous security",
    "start": "325550",
    "end": "331940"
  },
  {
    "text": "and compliance assessment for our production environment from",
    "start": "331940",
    "end": "337930"
  },
  {
    "start": "336000",
    "end": "377000"
  },
  {
    "text": "responsibility standpoint we are talking about two different cycles or two different Cadence's for this we've got",
    "start": "337930",
    "end": "344810"
  },
  {
    "text": "first we've got this dev sack ops pipeline right which is this sanitized",
    "start": "344810",
    "end": "350390"
  },
  {
    "text": "clean pipeline to push good quality code into production so the commit stage all",
    "start": "350390",
    "end": "357260"
  },
  {
    "text": "the testing there the live stage and even the deployment to production stage but then there is another cycle of the",
    "start": "357260",
    "end": "363530"
  },
  {
    "text": "production the production system monitoring and and then we want to we",
    "start": "363530",
    "end": "368960"
  },
  {
    "text": "want to have an always-on an always-on monitoring that operates in it's in its own cadence continuously so let's drill",
    "start": "368960",
    "end": "379010"
  },
  {
    "start": "377000",
    "end": "449000"
  },
  {
    "text": "down into those different stages and some pros and cons so doing some tests",
    "start": "379010",
    "end": "387080"
  },
  {
    "text": "at the commit stage infrastructure unit test or the CFT static validation well",
    "start": "387080",
    "end": "392630"
  },
  {
    "text": "from pro's perspective this is the fastest and cheapest way to do it right",
    "start": "392630",
    "end": "398390"
  },
  {
    "text": "this is something that is measured in seconds and theoretically and not theoretically",
    "start": "398390",
    "end": "404750"
  },
  {
    "text": "practically this is the closest it can get to the developer and again we said",
    "start": "404750",
    "end": "410120"
  },
  {
    "text": "we want to push security and compliance as close as possible to the people that",
    "start": "410120",
    "end": "415340"
  },
  {
    "text": "write the code so so it can be integrated again as part of our pipeline",
    "start": "415340",
    "end": "423350"
  },
  {
    "text": "it can even be integrated as a git commit that will operate on the developer workstation and even even as a",
    "start": "423350",
    "end": "429950"
  },
  {
    "text": "IDE linter plugin okay theoretically you cannot get as as",
    "start": "429950",
    "end": "437360"
  },
  {
    "text": "closer to the developer as an ideal ideal plug-in on the con side it's pretty difficult to do it right now with",
    "start": "437360",
    "end": "444230"
  },
  {
    "text": "the existing tools and maybe not everything can be statically written about on the live test we're talking",
    "start": "444230",
    "end": "452090"
  },
  {
    "start": "449000",
    "end": "558000"
  },
  {
    "text": "about again deploying a temporary environment and and running tests over",
    "start": "452090",
    "end": "458000"
  },
  {
    "text": "there so it's a live system we can do every test right but on the con side it's it's it is low it is measured in",
    "start": "458000",
    "end": "466430"
  },
  {
    "text": "minutes and if you have experience with deploying cloud large cloud formation templates with the lots of maybe",
    "start": "466430",
    "end": "471890"
  },
  {
    "text": "bootstrapping it could be many dozens of minutes and also there are a lots of",
    "start": "471890",
    "end": "478160"
  },
  {
    "text": "mechanics and moving parts especially if you want to integrate other third-party tools that needs to synchronize with",
    "start": "478160",
    "end": "484280"
  },
  {
    "text": "that environment it's just adding much more moving parts so yeah at the",
    "start": "484280",
    "end": "492140"
  },
  {
    "text": "production stage this is the ultimate resource that we are trying to protect right so every tool third-party library",
    "start": "492140",
    "end": "499670"
  },
  {
    "text": "project you'll find is designed to assist you with tackling these challenges and and the idea and the",
    "start": "499670",
    "end": "507830"
  },
  {
    "text": "importance of this stage is that it covers everything right not-not-not we cannot guarantee that",
    "start": "507830",
    "end": "515930"
  },
  {
    "text": "every change of production will come from our sanitized pipeline right if",
    "start": "515930",
    "end": "521960"
  },
  {
    "text": "someone enters this Amazon console or someone with the root user or whatever",
    "start": "521960",
    "end": "528380"
  },
  {
    "text": "or an API a devil script that someone by mistake oh I didn't mean it I didn't",
    "start": "528380",
    "end": "533960"
  },
  {
    "text": "meant it to to go to production so so this is why we have this extra or different mechanism",
    "start": "533960",
    "end": "542030"
  },
  {
    "text": "to to guard our production system on the con side it's again another suit of technologies that we need to master and",
    "start": "542030",
    "end": "549290"
  },
  {
    "text": "most of Li mo mostly these tools cater for the operations GRC folks and not",
    "start": "549290",
    "end": "555950"
  },
  {
    "text": "necessarily for developers and now a professional-looking graph that",
    "start": "555950",
    "end": "561950"
  },
  {
    "text": "represents my view regarding the future viability of those technologies so",
    "start": "561950",
    "end": "568760"
  },
  {
    "text": "production monitoring was important in the past and will be important in the future but I think that as we as the",
    "start": "568760",
    "end": "576970"
  },
  {
    "text": "ecosystem will mature in in harnessing this static code testing of our",
    "start": "576970",
    "end": "583760"
  },
  {
    "text": "infrastructure this will reduce the need to do this kind of complex machinery of",
    "start": "583760",
    "end": "588980"
  },
  {
    "text": "spinning up new environments running those tests and we can get much better",
    "start": "588980",
    "end": "594080"
  },
  {
    "text": "agility and and again reducing the complexity ok enough talking now it's",
    "start": "594080",
    "end": "603350"
  },
  {
    "start": "599000",
    "end": "727000"
  },
  {
    "text": "time to build something so our first dev psycho pipeline is gonna be based on on",
    "start": "603350",
    "end": "610130"
  },
  {
    "text": "a blog post by an amazonian named Ramesh a dibala Sharif is in the audience he",
    "start": "610130",
    "end": "617300"
  },
  {
    "text": "might be and so the idea if the idea of",
    "start": "617300",
    "end": "623330"
  },
  {
    "text": "this of this implementation is that it is 1% native Amazon implementations so",
    "start": "623330",
    "end": "631220"
  },
  {
    "text": "it's it using only a ss- tools at the core of it there is this code pipeline",
    "start": "631220",
    "end": "638890"
  },
  {
    "text": "but again if you are using something else like Jenkins all of these concepts are transferable so we have this code",
    "start": "638890",
    "end": "647210"
  },
  {
    "text": "pipeline as the as the mastermind of this thing the input the input for that",
    "start": "647210",
    "end": "654670"
  },
  {
    "text": "for this pipeline is an s3 bucket in your environment it might be a github",
    "start": "654670",
    "end": "660610"
  },
  {
    "text": "repository in this example it's an s3 bucket that our developers are pushing",
    "start": "660610",
    "end": "666260"
  },
  {
    "text": "this code this infrastructure code is see if these files into it the code pipeline picks it up and then and then",
    "start": "666260",
    "end": "673339"
  },
  {
    "text": "forms three different steps in the commit stage we're gonna run a lambda function that will do static code",
    "start": "673339",
    "end": "680149"
  },
  {
    "text": "analysis for the CFT template again not deploying anything reading the CFDs file",
    "start": "680149",
    "end": "685850"
  },
  {
    "text": "trying to get insight from them if we are happy we'll continue with the flow and move to this testing stage in this",
    "start": "685850",
    "end": "693980"
  },
  {
    "text": "stage we're gonna deploy a new test environment a temporary environment we're gonna perform now live testing",
    "start": "693980",
    "end": "700839"
  },
  {
    "text": "over that environment there is an optional manual approval phase embedded",
    "start": "700839",
    "end": "706399"
  },
  {
    "text": "in this solution and at the end of that will delete the stack clean up those",
    "start": "706399",
    "end": "711560"
  },
  {
    "text": "temporary resources and and push it to production we'll create a change set and",
    "start": "711560",
    "end": "716810"
  },
  {
    "text": "then execute it so that's the plan now",
    "start": "716810",
    "end": "727070"
  },
  {
    "start": "727000",
    "end": "775000"
  },
  {
    "text": "let's eat and say looking okay so this is the the",
    "start": "727070",
    "end": "737520"
  },
  {
    "text": "blog post and again it's linked in the in the presentation I recommend you to read about it we've also provided a",
    "start": "737520",
    "end": "745470"
  },
  {
    "text": "repository of that is kind of stripped",
    "start": "745470",
    "end": "750779"
  },
  {
    "text": "down and clean a version of that of that post so you can you can it's the address",
    "start": "750779",
    "end": "757380"
  },
  {
    "text": "is also the link is is there so let's",
    "start": "757380",
    "end": "762420"
  },
  {
    "text": "review what we have here in this in this repository we'll have these two examples the v1 which we are doing now and the v2",
    "start": "762420",
    "end": "770790"
  },
  {
    "text": "so let's read the instructions so",
    "start": "770790",
    "end": "776100"
  },
  {
    "start": "775000",
    "end": "1057000"
  },
  {
    "text": "basically where we're going to create two V pieces in that account and will",
    "start": "776100",
    "end": "782850"
  },
  {
    "text": "create an s3 bucket and you know let's start let's start doing me so I've",
    "start": "782850",
    "end": "788070"
  },
  {
    "text": "created a I already created two V pieces in my account I've created an s3 bucket named reinvent Assaidi three-one-seven",
    "start": "788070",
    "end": "796910"
  },
  {
    "text": "okay and Adam okay so let's let's review",
    "start": "796910",
    "end": "803430"
  },
  {
    "text": "that the source code here so in v1 we have we have two folders the code line a",
    "start": "803430",
    "end": "809190"
  },
  {
    "text": "code Python in lambda which contains which contains our our code so we have this CFD validation for phase 1 and the",
    "start": "809190",
    "end": "818220"
  },
  {
    "text": "stat stack validate lambda for this second live test and we've got my",
    "start": "818220",
    "end": "825540"
  },
  {
    "text": "application itself so you see my app which for this sake of the demo it's the",
    "start": "825540",
    "end": "831390"
  },
  {
    "text": "most simplistic one it's my app contains one security group with an SSH rule and",
    "start": "831390",
    "end": "836690"
  },
  {
    "text": "and two configuration files which provides the needed V PC name of V PC ID",
    "start": "836690",
    "end": "843060"
  },
  {
    "text": "parameter so back to the instruction so I have updated those two configuration",
    "start": "843060",
    "end": "851579"
  },
  {
    "text": "files to match the V PC IDs that I've just created okay next is we're going to",
    "start": "851579",
    "end": "860699"
  },
  {
    "text": "review the push scripts and update RS the bucket name I've done it for you as",
    "start": "860699",
    "end": "866229"
  },
  {
    "text": "we reinvent and as we reinvent okay now that we did is we are ready to go we're",
    "start": "866229",
    "end": "873069"
  },
  {
    "text": "gonna use those two scripts in order to push first our pipeline code this is something that we need to do once unless",
    "start": "873069",
    "end": "881169"
  },
  {
    "text": "we change our validation code and then deploy our application so let's do it",
    "start": "881169",
    "end": "888419"
  },
  {
    "text": "okay okay we're in v1 push validation",
    "start": "888419",
    "end": "897429"
  },
  {
    "text": "lambda now this script zips everything and put it in s3 we're gonna do similar",
    "start": "897429",
    "end": "904569"
  },
  {
    "text": "thing to to push our application code",
    "start": "904569",
    "end": "908728"
  },
  {
    "text": "Bank so we've created two zip files they were already uploaded now to s3 and now",
    "start": "909989",
    "end": "917769"
  },
  {
    "text": "it's now it's the time to it's a time to create a new cloud formation stack using",
    "start": "917769",
    "end": "926979"
  },
  {
    "text": "this the pipeline that is provided you so this is a lot this is pretty a pretty",
    "start": "926979",
    "end": "933399"
  },
  {
    "text": "long CFT that provides our entire our entire pipeline implementation so if you",
    "start": "933399",
    "end": "940089"
  },
  {
    "text": "if you remember in the past our build servers where such a snowflake a unique",
    "start": "940089",
    "end": "945970"
  },
  {
    "text": "system now the fact that I can I can share this code with you and and and all",
    "start": "945970",
    "end": "951129"
  },
  {
    "text": "of you can can can have the same pipeline that I have this is I think this is pretty amazing",
    "start": "951129",
    "end": "957220"
  },
  {
    "text": "great times so this is this stack formation is everything it creates s3",
    "start": "957220",
    "end": "964899"
  },
  {
    "text": "buckets and rolls and lambda functions and and DynamoDB and whatever you need",
    "start": "964899",
    "end": "971259"
  },
  {
    "text": "to run this thing so let's go to this cloud formation and let's create stack",
    "start": "971259",
    "end": "978479"
  },
  {
    "text": "I'll use v1 code web pipeline safety",
    "start": "978479",
    "end": "986049"
  },
  {
    "text": "okay so the only thing I need to do here is provide a meaningful name I can do",
    "start": "986049",
    "end": "994689"
  },
  {
    "text": "something like that okay provide at the bucket that I have",
    "start": "994689",
    "end": "1003060"
  },
  {
    "text": "I've already prepared reinvent and my",
    "start": "1003060",
    "end": "1009300"
  },
  {
    "text": "email this stack also create SNS topic and sends you a notification and communicates with you so that's pretty",
    "start": "1009300",
    "end": "1014670"
  },
  {
    "text": "cool this is my email please don't spam me okay that was it",
    "start": "1014670",
    "end": "1023430"
  },
  {
    "text": "next next next and Bank I'll acknowledge that and create I will not create it",
    "start": "1023430",
    "end": "1029939"
  },
  {
    "text": "right now with you because for the sake of time but it takes about two minutes to provision this entire thing which is",
    "start": "1029940",
    "end": "1036360"
  },
  {
    "text": "pretty nothing so let's see what let's see this this stack that I have already",
    "start": "1036360",
    "end": "1042290"
  },
  {
    "text": "provisioned again it it creates a lots of interesting resources pipeline",
    "start": "1042290",
    "end": "1050190"
  },
  {
    "text": "functions DynamoDB tables all sorts of thing let's drill down into the actual",
    "start": "1050190",
    "end": "1055470"
  },
  {
    "text": "pipeline that it creates okay so you see",
    "start": "1055470",
    "end": "1061850"
  },
  {
    "text": "the pipeline was already created but I created that before but it created and",
    "start": "1061850",
    "end": "1066900"
  },
  {
    "text": "then starts starts to work immediately so we see we see the commit stage the",
    "start": "1066900",
    "end": "1074760"
  },
  {
    "text": "scanning of those s3 buckets so whenever I put something in to push something",
    "start": "1074760",
    "end": "1079860"
  },
  {
    "text": "into this s3 bucket this pipeline will pick it up then will do this static cloud cloud formation testing if okay",
    "start": "1079860",
    "end": "1088050"
  },
  {
    "text": "continuing with this test deployment phase right now as you see we are progressing I've just upload remember",
    "start": "1088050",
    "end": "1094260"
  },
  {
    "text": "when I uploaded the gap so this pipeline pick that up so now we've passed this",
    "start": "1094260",
    "end": "1099530"
  },
  {
    "text": "CFN CloudFormation template parsing now we are deploying a live statement we're",
    "start": "1099530",
    "end": "1107640"
  },
  {
    "text": "going to test it in in a minute or so and and once approved we'll we'll go",
    "start": "1107640",
    "end": "1114140"
  },
  {
    "text": "we'll go to deploy to production all automatically I want to review those two",
    "start": "1114140",
    "end": "1119550"
  },
  {
    "text": "lambda functions this stack validation and this safety parsing so let's get",
    "start": "1119550",
    "end": "1124920"
  },
  {
    "text": "back to my my coat remember the lambdas the validation lambdas are here so I won't",
    "start": "1124920",
    "end": "1133380"
  },
  {
    "text": "do everything we know will not do review every line let's just get the the basic",
    "start": "1133380",
    "end": "1139140"
  },
  {
    "text": "gist of it so the lambda this is the lambda handler you see it's a Python Python and lambda function let's review",
    "start": "1139140",
    "end": "1147240"
  },
  {
    "text": "it quickly so just extracting some parameters okay boring boring boring still boring",
    "start": "1147240",
    "end": "1154230"
  },
  {
    "text": "okay now we are setting an s3 client in order to get this CFD template so",
    "start": "1154230",
    "end": "1160320"
  },
  {
    "text": "eventually that function is gonna gonna get to this Python function this CFT",
    "start": "1160320",
    "end": "1165390"
  },
  {
    "text": "that we're about to test the next step is get rules which provides the list of",
    "start": "1165390",
    "end": "1173250"
  },
  {
    "text": "rules that we're gonna evaluate against where these rules come from good question",
    "start": "1173250",
    "end": "1179090"
  },
  {
    "text": "the outer of this of this project is",
    "start": "1179090",
    "end": "1184110"
  },
  {
    "text": "separated the validation logic into DynamoDB so now you don't need to maintain those rules inside that",
    "start": "1184110",
    "end": "1190440"
  },
  {
    "text": "function you can maintain them in DynamoDB add and remove our rules as needed so this is this is pretty cool so",
    "start": "1190440",
    "end": "1197370"
  },
  {
    "text": "as we see I hope that you see here it looks fine so basically equal loads the",
    "start": "1197370",
    "end": "1207120"
  },
  {
    "text": "these rules from these rules from DynamoDB thankfully provided some some",
    "start": "1207120",
    "end": "1213870"
  },
  {
    "text": "kind of starter rules for us let's take a look for example this SSH open to the",
    "start": "1213870",
    "end": "1220620"
  },
  {
    "text": "world rule again it's from category security group right now in that in that demo there are a security group and ec2",
    "start": "1220620",
    "end": "1227730"
  },
  {
    "text": "instance rules you can of course add more types and the rule data itself this",
    "start": "1227730",
    "end": "1232890"
  },
  {
    "text": "is the main kind of security compliance content so again ingress from port to",
    "start": "1232890",
    "end": "1238050"
  },
  {
    "text": "port blah blah blah 22 blah blah blah 0 0 0 so that's 0",
    "start": "1238050",
    "end": "1244110"
  },
  {
    "text": "and lots of other stuff ok so that was that was the rule so we've",
    "start": "1244110",
    "end": "1251880"
  },
  {
    "text": "got our rules and the the last function is this value template which basically just loads",
    "start": "1251880",
    "end": "1260510"
  },
  {
    "text": "those resources from this from this template and for each rule for each sorry for each resource grouped by type",
    "start": "1260510",
    "end": "1268269"
  },
  {
    "text": "we're gonna we're gonna do so now for the security group resources we're gonna",
    "start": "1268269",
    "end": "1273409"
  },
  {
    "text": "match them with the rules with the s3 rules so the main the main thing is this regular expression match and we're gonna",
    "start": "1273409",
    "end": "1280370"
  },
  {
    "text": "do the same for ec2 resources so if you're gonna adopt this I recommend to",
    "start": "1280370",
    "end": "1285799"
  },
  {
    "text": "just refactor that a little bit I've I feel that it can be generalized a little bit I don't like code application and so but",
    "start": "1285799",
    "end": "1294049"
  },
  {
    "text": "I guess it can be more generalized and operate on mal on many kind of resource",
    "start": "1294049",
    "end": "1300320"
  },
  {
    "text": "types okay so that's that's pretty cool and the last step is is again next step where",
    "start": "1300320",
    "end": "1307669"
  },
  {
    "text": "where this is the decision making if to if to continue if to continue to",
    "start": "1307669",
    "end": "1312850"
  },
  {
    "text": "continue or fail this the built or this this pipeline so there is a nice concept",
    "start": "1312850",
    "end": "1319399"
  },
  {
    "text": "of risk so if it's a low risk I will put success job basically it's signaling the pipeline to continue or or we're going",
    "start": "1319399",
    "end": "1328010"
  },
  {
    "text": "to signal the the pipeline to to quit okay so that's that's the CFT validation",
    "start": "1328010",
    "end": "1336889"
  },
  {
    "text": "now moving to a completely different wall which is the stack validation so in",
    "start": "1336889",
    "end": "1343100"
  },
  {
    "text": "that in that this is now again the function that doing live validation of an environment so here we're gonna kind",
    "start": "1343100",
    "end": "1350539"
  },
  {
    "text": "of implemented an interesting concept so it's got kind of a controls array and",
    "start": "1350539",
    "end": "1355570"
  },
  {
    "text": "they got numbers and control 4.1 which again basically just a Python function",
    "start": "1355570",
    "end": "1362809"
  },
  {
    "text": "so let's see how our rule is implemented there so now we are using completely",
    "start": "1362809",
    "end": "1368600"
  },
  {
    "text": "different technology right we're using the Amazon SDKs Bato library and now we're going to describe",
    "start": "1368600",
    "end": "1374659"
  },
  {
    "text": "all the security groups we're gonna filter only the ones that are relevant to our stack and we're gonna we're going",
    "start": "1374659",
    "end": "1381620"
  },
  {
    "text": "to implement the rule in that case the rule object is to make sure that security group is on SSH rule is only",
    "start": "1381620",
    "end": "1386750"
  },
  {
    "text": "open to this our NOC CIDR so that's that's that's the concept",
    "start": "1386750",
    "end": "1393410"
  },
  {
    "text": "of this this implementation so let's switch back to our pipeline so we've",
    "start": "1393410",
    "end": "1399140"
  },
  {
    "text": "we've we finished with those two tests we've by the way we passed those tests",
    "start": "1399140",
    "end": "1404270"
  },
  {
    "text": "and now is this manual approval phase again optional for you I can now review the stack and look into",
    "start": "1404270",
    "end": "1412130"
  },
  {
    "text": "the resources and say this is looking great and approve that so so now I've",
    "start": "1412130",
    "end": "1420170"
  },
  {
    "text": "already have this test my app and which is the test environment it will be very",
    "start": "1420170",
    "end": "1425780"
  },
  {
    "text": "soon it's gonna be deleted okay let me",
    "start": "1425780",
    "end": "1431990"
  },
  {
    "text": "switch back to my presentation",
    "start": "1431990",
    "end": "1434770"
  },
  {
    "text": "okay so we've been able to complete level one we've got a fully working",
    "start": "1441170",
    "end": "1447550"
  },
  {
    "text": "pipeline that received this CloudFormation testing it",
    "start": "1447550",
    "end": "1453380"
  },
  {
    "text": "static codes that live code tests and then deploy it to production so we should be we should appreciate those and",
    "start": "1453380",
    "end": "1460220"
  },
  {
    "text": "celebrate those little wings so that's a let's have it and thank Ramesh okay but now it's time",
    "start": "1460220",
    "end": "1470360"
  },
  {
    "text": "to take the red pill I know it looks easy right it took us 15 minutes to get",
    "start": "1470360",
    "end": "1477650"
  },
  {
    "text": "to this to this place but reality is much hardly ER right this super easy",
    "start": "1477650",
    "end": "1484940"
  },
  {
    "text": "cloud formation stack is not one of what we're gonna experience in in real world",
    "start": "1484940",
    "end": "1490910"
  },
  {
    "text": "so now we're going to actually see the downsides and the complexities of that",
    "start": "1490910",
    "end": "1496130"
  },
  {
    "text": "solution the first thing I want to talk is reg X reg X or reg X I don't know reg",
    "start": "1496130",
    "end": "1505640"
  },
  {
    "start": "1497000",
    "end": "1590000"
  },
  {
    "text": "X I'd say so this is this this is the",
    "start": "1505640",
    "end": "1510860"
  },
  {
    "text": "rule that match the SSH is open to the entire world I find it pretty difficult",
    "start": "1510860",
    "end": "1517580"
  },
  {
    "text": "to read it and even if I wrote it you know a regular expression is considered",
    "start": "1517580",
    "end": "1524000"
  },
  {
    "text": "as a hashing function you can write it but you can never read it back so so I",
    "start": "1524000",
    "end": "1529100"
  },
  {
    "text": "cannot read it and by the way I've injected five errors into this rule",
    "start": "1529100",
    "end": "1536120"
  },
  {
    "text": "which I cannot find what which are they so so the suggestion here is actually",
    "start": "1536120",
    "end": "1545990"
  },
  {
    "text": "it's multiple suggestion don't use regular expression for this kind of JSON to reason about JSON you know that's",
    "start": "1545990",
    "end": "1552920"
  },
  {
    "text": "that's nice on paper this is not maintainable thing so either use a general-purpose computing language",
    "start": "1552920",
    "end": "1560260"
  },
  {
    "text": "JavaScript or Python or even use some there are now some community project I",
    "start": "1560260",
    "end": "1565790"
  },
  {
    "text": "hear some some companies using CFN not if you are familiar with that or if you",
    "start": "1565790",
    "end": "1572150"
  },
  {
    "text": "are a terraform shop then there is from Sentinel which allows you to reason",
    "start": "1572150",
    "end": "1578299"
  },
  {
    "text": "about your terraform templates and put kind of and put rules into that so these",
    "start": "1578299",
    "end": "1585260"
  },
  {
    "text": "are much more oriented technologies to do than doing this thing",
    "start": "1585260",
    "end": "1591280"
  },
  {
    "text": "the next challenge with CFDs are the dynamic templates right safety",
    "start": "1591280",
    "end": "1597200"
  },
  {
    "text": "is not static safety is a flexible and dynamic it's almost like a programming",
    "start": "1597200",
    "end": "1603350"
  },
  {
    "text": "language we've got parameters either user-defined or injected by the runtime",
    "start": "1603350",
    "end": "1609230"
  },
  {
    "text": "system we've got functions intrinsic functions we've got conditions branching",
    "start": "1609230",
    "end": "1615740"
  },
  {
    "text": "again I don't think it's during complete but it's very close to it so let's see",
    "start": "1615740",
    "end": "1622010"
  },
  {
    "start": "1620000",
    "end": "1683000"
  },
  {
    "text": "that in action this is difficult to read the rest of the ones are smaller in this",
    "start": "1622010",
    "end": "1628010"
  },
  {
    "text": "in this example well it works for you",
    "start": "1628010",
    "end": "1633290"
  },
  {
    "text": "guys for you guys so in this example we have I need to get closer to we've got",
    "start": "1633290",
    "end": "1641419"
  },
  {
    "text": "this bad sg1 which which the witch the",
    "start": "1641419",
    "end": "1647210"
  },
  {
    "text": "front port and the two port are are not are not static number like 22 these are",
    "start": "1647210",
    "end": "1654350"
  },
  {
    "text": "actually finding map function that that search in a kind of in this hash table",
    "start": "1654350",
    "end": "1659929"
  },
  {
    "text": "or in this mapping and what's the key for to search for is also named app is",
    "start": "1659929",
    "end": "1667130"
  },
  {
    "text": "also a user configurable parameter so in that case if the user has selected the",
    "start": "1667130",
    "end": "1673910"
  },
  {
    "text": "Bastiaan parameter then it will resolve to port 22 so it's try to use your regular",
    "start": "1673910",
    "end": "1681200"
  },
  {
    "text": "expression against this thing another form of dynamic templates is the",
    "start": "1681200",
    "end": "1687950"
  },
  {
    "start": "1683000",
    "end": "1716000"
  },
  {
    "text": "condition so here you can probably read that so we have this condition creates dev resources so in this case our",
    "start": "1687950",
    "end": "1696799"
  },
  {
    "text": "regular expression will fail this rule even though it's never going to get to production so that might be a desired",
    "start": "1696799",
    "end": "1702980"
  },
  {
    "text": "thing to open SSH to the developer although I do not believe in but but still it might be desirable and",
    "start": "1702980",
    "end": "1710660"
  },
  {
    "text": "in this case we'll get false positive by our regular expression test okay help",
    "start": "1710660",
    "end": "1719000"
  },
  {
    "start": "1716000",
    "end": "1766000"
  },
  {
    "text": "you with this solution there is a little a little gift or a little thing you",
    "start": "1719000",
    "end": "1724430"
  },
  {
    "text": "should be aware of we have created that for our internal news about a year ago called a project called the safety",
    "start": "1724430",
    "end": "1731090"
  },
  {
    "text": "simulator which allows you to take this highly prioritized condition eyes the",
    "start": "1731090",
    "end": "1738410"
  },
  {
    "text": "template provide parameters and then thus this simulator will evaluate",
    "start": "1738410",
    "end": "1745550"
  },
  {
    "text": "parameters evaluate those increasing function and follow the conditions and",
    "start": "1745550",
    "end": "1750920"
  },
  {
    "text": "then output the resolved the resolved template without any flags or everything",
    "start": "1750920",
    "end": "1757130"
  },
  {
    "text": "a concrete template so now you can take this template and fit it to whatever testing logic that you want to have so",
    "start": "1757130",
    "end": "1763640"
  },
  {
    "text": "this is an idea for you the next thing I'm going to talk is multiple representations of the same the",
    "start": "1763640",
    "end": "1772490"
  },
  {
    "start": "1766000",
    "end": "1915000"
  },
  {
    "text": "same outcome so the same endgame the same outcome can be modeled in different ways using safety why because",
    "start": "1772490",
    "end": "1780830"
  },
  {
    "text": "the syntax permeate and also because we have some default implicit behavior of",
    "start": "1780830",
    "end": "1786650"
  },
  {
    "text": "the runtime itself when I'm not defining stuff still there is some default",
    "start": "1786650",
    "end": "1791660"
  },
  {
    "text": "behavior that happens so let's let's see that in action I'm not going to read it to you",
    "start": "1791660",
    "end": "1796700"
  },
  {
    "text": "you can review that but this shows how many ways to control the IP address of",
    "start": "1796700",
    "end": "1802310"
  },
  {
    "text": "an instance so we can we can have an instance resource with an embedded",
    "start": "1802310",
    "end": "1809120"
  },
  {
    "text": "network interface resource we can have an instance resource with another root",
    "start": "1809120",
    "end": "1814730"
  },
  {
    "text": "level network interface resource that is referencing this instance we can have an",
    "start": "1814730",
    "end": "1820640"
  },
  {
    "text": "instance a network interface and another network attachment entity and other",
    "start": "1820640",
    "end": "1826250"
  },
  {
    "text": "network attachment resource that will tie those two together so now that we had all those ways to connect this",
    "start": "1826250",
    "end": "1832250"
  },
  {
    "text": "network interface to the to the instance now how do we determine the IP address",
    "start": "1832250",
    "end": "1837620"
  },
  {
    "text": "of that network interface so again it could it could use would be part of the network interface with the associate public IP address or",
    "start": "1837620",
    "end": "1844879"
  },
  {
    "text": "we could have an elastic IP resource that is then referencing or an elastic IP address that is using another",
    "start": "1844879",
    "end": "1852019"
  },
  {
    "text": "resource like elastic IP association to connect that to much and on top of that",
    "start": "1852019",
    "end": "1857809"
  },
  {
    "text": "we can we can have something that is not even defined on the instance or Nick level which is a subnet property which",
    "start": "1857809",
    "end": "1865849"
  },
  {
    "text": "is called map IP on launch so again trying to if you want to reason about",
    "start": "1865849",
    "end": "1872599"
  },
  {
    "text": "cloud formation you need to be aware of these things and search for all these kind of patterns you need also to be",
    "start": "1872599",
    "end": "1880099"
  },
  {
    "text": "aware of the things that you don't see which are attributed to the default behavior of the of the runtime the cloud",
    "start": "1880099",
    "end": "1886580"
  },
  {
    "text": "formation runtime so in this example I'm gonna show you this bed sg4 and this",
    "start": "1886580",
    "end": "1896539"
  },
  {
    "text": "security group actually has zero properties besides the description the bad stuff",
    "start": "1896539",
    "end": "1902359"
  },
  {
    "text": "comes from from external security group increase rule that opens SSH to the",
    "start": "1902359",
    "end": "1908149"
  },
  {
    "text": "entire universe and then is referencing that security group okay the last thing",
    "start": "1908149",
    "end": "1918289"
  },
  {
    "start": "1915000",
    "end": "1959000"
  },
  {
    "text": "I want to talk about is actually understanding the domain that we want to reason about so in that case this is two",
    "start": "1918289",
    "end": "1924830"
  },
  {
    "text": "very common misconfigurations that we see at the first example you know",
    "start": "1924830",
    "end": "1931519"
  },
  {
    "text": "someone has copied our our NOC cid r12",
    "start": "1931519",
    "end": "1936820"
  },
  {
    "text": "1.2.3.4 but then edit this less zero where effectively this is as good as",
    "start": "1936820",
    "end": "1943639"
  },
  {
    "text": "opening it to the entire internet on that example someone is opened the",
    "start": "1943639",
    "end": "1951039"
  },
  {
    "text": "security group to a port range from Port 22 port 30 now now try this regular",
    "start": "1951039",
    "end": "1957229"
  },
  {
    "text": "expression on that security group the last challenge that I'm going to talk",
    "start": "1957229",
    "end": "1963169"
  },
  {
    "start": "1959000",
    "end": "1969000"
  },
  {
    "text": "about is this multiple technologies challenge where we are having again I'm",
    "start": "1963169",
    "end": "1969320"
  },
  {
    "start": "1969000",
    "end": "2026000"
  },
  {
    "text": "going to use this one I like it better so you're gonna we're going to have this word or",
    "start": "1969320",
    "end": "1974899"
  },
  {
    "text": "Excel spreadsheet for the human beings where we define our policies we're going",
    "start": "1974899",
    "end": "1980269"
  },
  {
    "text": "to have the technology that we reason about our our safety our static code in this case it's the regular expression",
    "start": "1980269",
    "end": "1986589"
  },
  {
    "text": "we're gonna have this live Amazon SDK code with Java JavaScript net Python",
    "start": "1986589",
    "end": "1994339"
  },
  {
    "text": "that we're going to reason about our live environment and we're going to have a plethora of tools to help us protect",
    "start": "1994339",
    "end": "2001690"
  },
  {
    "text": "this production system again that's its clout real cloud watch watch events",
    "start": "2001690",
    "end": "2010229"
  },
  {
    "text": "config rules our sim systems our security configuration monitoring",
    "start": "2010229",
    "end": "2015460"
  },
  {
    "text": "systems all this a huge array of of tools that will help us guard the system",
    "start": "2015460",
    "end": "2021539"
  },
  {
    "text": "so that's pretty much babylon tower so",
    "start": "2021539",
    "end": "2027759"
  },
  {
    "start": "2026000",
    "end": "2126000"
  },
  {
    "text": "let me now introduce you to GSL governance specification language this",
    "start": "2027759",
    "end": "2033099"
  },
  {
    "text": "is a purpose-built language to reason about cloud security and compliance we have developed that atom 9 in order to",
    "start": "2033099",
    "end": "2039580"
  },
  {
    "text": "assist with tackling this this complex challenge at the core of it there is a",
    "start": "2039580",
    "end": "2046089"
  },
  {
    "text": "domain model a cloud domain model that pretty much is very similar to the",
    "start": "2046089",
    "end": "2052299"
  },
  {
    "text": "Amazon model but it is oriented for read oriented to reason about the security so",
    "start": "2052299",
    "end": "2059710"
  },
  {
    "text": "this is why we can add all sorts of properties helper things and re",
    "start": "2059710",
    "end": "2065319"
  },
  {
    "text": "restructure it in order to make it efficient to be queried on top of that",
    "start": "2065319",
    "end": "2070779"
  },
  {
    "text": "there is the GSL the language and the runtime the policy the rule engine that allows you to write these rules that",
    "start": "2070779",
    "end": "2077408"
  },
  {
    "text": "then reason about this this model a few example of those rules are security",
    "start": "2077409",
    "end": "2084700"
  },
  {
    "text": "group where name is default should not have inbound rules instance should have tags with key an equals owner security",
    "start": "2084700",
    "end": "2092648"
  },
  {
    "text": "group should not have inbound rules with the port 22 in the scope zero zero zero I don't need to tell you what what these",
    "start": "2092649",
    "end": "2098980"
  },
  {
    "text": "rules do I think you can you can you can guess it by now so this this this",
    "start": "2098980",
    "end": "2104380"
  },
  {
    "text": "concept of a concise human readable policies eliminate all those so all those errors",
    "start": "2104380",
    "end": "2111630"
  },
  {
    "text": "and this kind of mismatch between the security and compliance Falls and the developers because now many more people",
    "start": "2111630",
    "end": "2118750"
  },
  {
    "text": "can join into this very new world of Software Defined security and compliance",
    "start": "2118750",
    "end": "2127020"
  },
  {
    "start": "2126000",
    "end": "2202000"
  },
  {
    "text": "so the next implementation of our pipeline v2 is gonna be based on that",
    "start": "2127020",
    "end": "2133950"
  },
  {
    "text": "technology so we're gonna utilize the few key capabilities of the system so",
    "start": "2133950",
    "end": "2140920"
  },
  {
    "text": "first keep a bit it's actually number two is the capability to run assessment on a live environment so going to use",
    "start": "2140920",
    "end": "2147369"
  },
  {
    "text": "that via API in order to reason about our live environment but before that",
    "start": "2147369",
    "end": "2152740"
  },
  {
    "text": "we're gonna do static code analysis using the same compliance engine so",
    "start": "2152740",
    "end": "2158320"
  },
  {
    "text": "what's happening behind the scene is pretty it's pretty clever because of this intermediary model so now we can",
    "start": "2158320",
    "end": "2167080"
  },
  {
    "text": "take this cloud formation running through all the simulators build this unified cloud security model and then",
    "start": "2167080",
    "end": "2175660"
  },
  {
    "text": "allow you to reason about about it just like a live environment so it pretty",
    "start": "2175660",
    "end": "2184089"
  },
  {
    "text": "much mimics most of the implementation that goes inside cloud formation but the",
    "start": "2184089",
    "end": "2189250"
  },
  {
    "text": "engine does it for you and then on top of that we've got this always-on continuous monitoring for the production",
    "start": "2189250",
    "end": "2195430"
  },
  {
    "text": "end now all these are driven from the same GSL policy file all these three",
    "start": "2195430",
    "end": "2201310"
  },
  {
    "text": "different technologies so to understand that this this pipeline it's based on",
    "start": "2201310",
    "end": "2209020"
  },
  {
    "text": "the same pipeline that we've seen but now we're gutting all the dynamodb and",
    "start": "2209020",
    "end": "2214900"
  },
  {
    "text": "the rules and the regular expressions and those and those bottle tests and replace them with a single API test a",
    "start": "2214900",
    "end": "2223359"
  },
  {
    "text": "single API call to this compliance engine so we're going to have this safety validator that will use this",
    "start": "2223359",
    "end": "2229000"
  },
  {
    "text": "cloud formation assessment API we're gonna have the live assessment that is gonna be using the live assessment API",
    "start": "2229000",
    "end": "2236530"
  },
  {
    "text": "and on the side we're going to have a continuous compliance policy that will",
    "start": "2236530",
    "end": "2242230"
  },
  {
    "text": "always can the production system so",
    "start": "2242230",
    "end": "2248400"
  },
  {
    "text": "we'll see that in action so I'm switching to to the veto part and let's",
    "start": "2248400",
    "end": "2259750"
  },
  {
    "text": "let's follow up the instruction so first I'll skip this create a create an",
    "start": "2259750",
    "end": "2265900"
  },
  {
    "text": "account oops it will it will be better if you'll see it so yeah so I will skip the",
    "start": "2265900",
    "end": "2274660"
  },
  {
    "text": "creating an account but now we are going to create our first policy so we can",
    "start": "2274660",
    "end": "2279760"
  },
  {
    "text": "create a new a new policy which I'm not going to do because I've already created",
    "start": "2279760",
    "end": "2284830"
  },
  {
    "text": "one reinvent session and now we are gonna create rules for this we're gonna",
    "start": "2284830",
    "end": "2290590"
  },
  {
    "text": "create rules for this policy so I can type in the rules but I can use the rule",
    "start": "2290590",
    "end": "2295720"
  },
  {
    "text": "builder so in that case I'll create a rule like security group should not have",
    "start": "2295720",
    "end": "2302609"
  },
  {
    "text": "inbound rules with you know the port 22",
    "start": "2302609",
    "end": "2308170"
  },
  {
    "text": "and and the scope scope is zero zero",
    "start": "2308170",
    "end": "2315640"
  },
  {
    "text": "zero you know what but we are we are smarter than that we know that it's it's",
    "start": "2315640",
    "end": "2321910"
  },
  {
    "text": "not the most robust thing so we'll do even something we'll do something even better so we'll do that the inman rules",
    "start": "2321910",
    "end": "2328750"
  },
  {
    "text": "do not contain the port now we'll do less than a week well 22 and port larger",
    "start": "2328750",
    "end": "2340600"
  },
  {
    "text": "or equal than 22 that will catch all those port ranges scenarios now in",
    "start": "2340600",
    "end": "2346330"
  },
  {
    "text": "addition remember all those misconfigured caed ours i'm not going to string match it to 0 0",
    "start": "2346330",
    "end": "2351820"
  },
  {
    "text": "0 0 so we're gonna do port and use some some reasoning about it so so the port",
    "start": "2351820",
    "end": "2358570"
  },
  {
    "text": "is public and the port and the port number of hosts that are exposed by that",
    "start": "2358570",
    "end": "2366930"
  },
  {
    "text": "sorry the scope",
    "start": "2366930",
    "end": "2370589"
  },
  {
    "text": "number first larger than 256 this sounds",
    "start": "2372210",
    "end": "2379210"
  },
  {
    "text": "like a large number if it's more than that I consider this as publicly exposed okay so now I can so now I can name it",
    "start": "2379210",
    "end": "2387070"
  },
  {
    "text": "at the description remediation and that's it so we are done with our first rule I've already created that and we",
    "start": "2387070",
    "end": "2394930"
  },
  {
    "text": "are done I will just note the idea of that bundle so now we're going to deploy",
    "start": "2394930",
    "end": "2400690"
  },
  {
    "text": "the same thing the same process we're going to deploy this cloud for a",
    "start": "2400690",
    "end": "2407230"
  },
  {
    "text": "discount formation of this pipeline in JSON I've already done that for you so let's let's review that the only thing",
    "start": "2407230",
    "end": "2413500"
  },
  {
    "text": "that I want to show you is that it's it's basically the same thing that we've",
    "start": "2413500",
    "end": "2419320"
  },
  {
    "text": "just added one more parameter which is the bundle ID okay and now I want to I",
    "start": "2419320",
    "end": "2425619"
  },
  {
    "text": "want to I want to run my my new cloud formation template so I'm gonna test my",
    "start": "2425619",
    "end": "2432580"
  },
  {
    "text": "real real world application so this is the ugly one right with all those with",
    "start": "2432580",
    "end": "2438700"
  },
  {
    "text": "all those problematic security group these security groups again sg1 with the",
    "start": "2438700",
    "end": "2446710"
  },
  {
    "text": "mapping and better Street you with the misconfigured CIDR so that's so that is",
    "start": "2446710",
    "end": "2452500"
  },
  {
    "text": "the okay let's push that",
    "start": "2452500",
    "end": "2459570"
  },
  {
    "text": "okay so now I'm pushing this new problematic up to production from code",
    "start": "2463099",
    "end": "2473010"
  },
  {
    "text": "perspective from code perspective of I've kind of covered that so it's very similar the lambda tests are pretty",
    "start": "2473010",
    "end": "2480119"
  },
  {
    "text": "pretty much like those previous lambda tests just the fact that we've removed all the need we remove the need to to do",
    "start": "2480119",
    "end": "2489240"
  },
  {
    "text": "all these regular expression and instead instead with just an instead we just",
    "start": "2489240",
    "end": "2495470"
  },
  {
    "text": "validate it we just we just validated",
    "start": "2495470",
    "end": "2501420"
  },
  {
    "text": "against the the Dom nine the domain API another interesting thing here is that",
    "start": "2501420",
    "end": "2507869"
  },
  {
    "text": "now we are using we are adding getting another parameter which this production",
    "start": "2507869",
    "end": "2513240"
  },
  {
    "text": "CloudFormation parameters we want to simulate the real production workload so",
    "start": "2513240",
    "end": "2518790"
  },
  {
    "text": "we're taking this cloud formation we're taking the production parameters and",
    "start": "2518790",
    "end": "2523890"
  },
  {
    "text": "then feeding the engine with the without data because we want to reason about the CFT that will will be deployed to will",
    "start": "2523890",
    "end": "2532020"
  },
  {
    "text": "be deployed to production so that's that's that's basically basically the",
    "start": "2532020",
    "end": "2537119"
  },
  {
    "text": "thing so now let's take a look at that at our pipeline okay so we've seen that",
    "start": "2537119",
    "end": "2546240"
  },
  {
    "text": "the the s3 who already got this this",
    "start": "2546240",
    "end": "2552329"
  },
  {
    "text": "cloud formation and now is feeding that to our new to our new function the CFT",
    "start": "2552329",
    "end": "2557790"
  },
  {
    "text": "parsing function we see that it's in progress sometimes it takes some time for this code pipeline to to do UI to",
    "start": "2557790",
    "end": "2567030"
  },
  {
    "text": "refresh so now I see this little details link which sends me to this cloud watch",
    "start": "2567030",
    "end": "2573900"
  },
  {
    "text": "logs which is tied to this lambda function so I can I can review here the",
    "start": "2573900",
    "end": "2579210"
  },
  {
    "text": "lambda function and and actually it took it three seconds to to do this entire",
    "start": "2579210",
    "end": "2584490"
  },
  {
    "text": "test it might take the cloud the cloud sorry the pipeline a few seconds to",
    "start": "2584490",
    "end": "2590760"
  },
  {
    "text": "detect and now we've detected a failure so let's let's click on these details so CFD validation failed high-risk",
    "start": "2590760",
    "end": "2599200"
  },
  {
    "text": "detected and I've got the failed rules that we just created never exposed ssh",
    "start": "2599200",
    "end": "2604240"
  },
  {
    "text": "to a large public scope and also in order to assist us we have this link to",
    "start": "2604240",
    "end": "2611410"
  },
  {
    "text": "the assessment itself so it's much easier to read it like that so let's",
    "start": "2611410",
    "end": "2617710"
  },
  {
    "text": "review that so I see I've got one failed",
    "start": "2617710",
    "end": "2623079"
  },
  {
    "text": "rule because we had one rule in this template and let me expand that and we see this bad SG 1 2 3 & 4 as being",
    "start": "2623079",
    "end": "2631000"
  },
  {
    "text": "highlighted to me so let's review that so remember the first SG with the with",
    "start": "2631000",
    "end": "2636910"
  },
  {
    "text": "the port found in the map eventually got transformed it can't respond to the same",
    "start": "2636910",
    "end": "2643810"
  },
  {
    "text": "normalized model in one rule with TCP 20 to open to 0 0 0 and it got failed the",
    "start": "2643810",
    "end": "2651550"
  },
  {
    "text": "second one was misconfigured CIDR whitelist so remember that 1 1 2 3 4",
    "start": "2651550",
    "end": "2660579"
  },
  {
    "text": "stays zero well it exposes more than 256 addresses so this is why this rule",
    "start": "2660579",
    "end": "2666069"
  },
  {
    "text": "failed the third rule was a port range issue right so we had we had port from",
    "start": "2666069",
    "end": "2674500"
  },
  {
    "text": "20 to 30 and it was also it was also detected because we planned against it",
    "start": "2674500",
    "end": "2681060"
  },
  {
    "text": "the last one is inbound rule that was defined externally so again they say at",
    "start": "2681060",
    "end": "2689290"
  },
  {
    "text": "the same end it is transformed to this same unified model so you don't care that it was defined in a different way",
    "start": "2689290",
    "end": "2694810"
  },
  {
    "text": "in the cloud formation at the end game looks just just the same and this rule failed what you don't see here is the",
    "start": "2694810",
    "end": "2703030"
  },
  {
    "text": "bear sorry the good SG because it was not applied to prod so this is why we do",
    "start": "2703030",
    "end": "2708550"
  },
  {
    "text": "not get we do not get this alert so yes",
    "start": "2708550",
    "end": "2714099"
  },
  {
    "text": "so I'm pretty happy that the demo went well and we can celebrate this this next this next success",
    "start": "2714099",
    "end": "2720580"
  },
  {
    "text": "[Applause] yeah",
    "start": "2720580",
    "end": "2725960"
  },
  {
    "start": "2721000",
    "end": "2756000"
  },
  {
    "text": "so yeah so I'm first I would like to",
    "start": "2725960",
    "end": "2731150"
  },
  {
    "text": "thank you for for attending this session we still have time for Q&A if you'd like",
    "start": "2731150",
    "end": "2736400"
  },
  {
    "text": "to stay and talk about a little bit about that and you are also more than welcome to the dome 9 booth yes the code",
    "start": "2736400",
    "end": "2745789"
  },
  {
    "text": "repo is private I will open it just after this session thank you thank you",
    "start": "2745789",
    "end": "2755600"
  },
  {
    "text": "[Applause]",
    "start": "2755600",
    "end": "2758330"
  }
]