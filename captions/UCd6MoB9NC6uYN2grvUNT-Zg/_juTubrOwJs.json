[
  {
    "start": "0",
    "end": "45000"
  },
  {
    "text": "hello everyone thank you all for coming to this session today we have a session",
    "start": "1429",
    "end": "8130"
  },
  {
    "text": "on building server less websites with land at the edge we really appreciate",
    "start": "8130",
    "end": "13650"
  },
  {
    "text": "you all being here especially considering that yesterday night we had the Rainman replay party thank you all",
    "start": "13650",
    "end": "19680"
  },
  {
    "text": "again my name is doris dawn I'm a product manager in the lambda DHT and with me I have money radhakrishnan in a",
    "start": "19680",
    "end": "27599"
  },
  {
    "text": "senior software engineer in the cloud and lambda DHT before we get started I",
    "start": "27599",
    "end": "34020"
  },
  {
    "text": "just want to get an housekeeping item out of the way both myself and money will be hanging out here after the",
    "start": "34020",
    "end": "40020"
  },
  {
    "text": "session so feel free to stop by if you have any questions so over the next 60",
    "start": "40020",
    "end": "46920"
  },
  {
    "start": "45000",
    "end": "92000"
  },
  {
    "text": "minutes or so we want to walk you through a scenario where we start off with a fully hosted website we'll",
    "start": "46920",
    "end": "54149"
  },
  {
    "text": "deconstruct it as we go along and finally get to a state where the same site is now hosted in a serverless",
    "start": "54149",
    "end": "60059"
  },
  {
    "text": "manner at net location and as we go through the evolution we'll discuss why",
    "start": "60059",
    "end": "67140"
  },
  {
    "text": "it is beneficial to run websites at the edge we'll take a look at some of the",
    "start": "67140",
    "end": "73350"
  },
  {
    "text": "key functionalities and capabilities of lambda at the edge and we'll discuss various use cases will share some code",
    "start": "73350",
    "end": "80070"
  },
  {
    "text": "samples in terms of how you could build functionalities that are part of any typical website how you could do or how",
    "start": "80070",
    "end": "86250"
  },
  {
    "text": "you could run that in a server list manner on the edge locations so just",
    "start": "86250",
    "end": "93240"
  },
  {
    "start": "92000",
    "end": "125000"
  },
  {
    "text": "imagine that you had a great breakthrough idea now it could be",
    "start": "93240",
    "end": "98310"
  },
  {
    "text": "anything it could be that you found a new way to curate news real versus fake or you had an idea of how to do social",
    "start": "98310",
    "end": "105990"
  },
  {
    "text": "media in a different way or do some predictive analytics I think for the purposes of our presentation our goal is",
    "start": "105990",
    "end": "112649"
  },
  {
    "text": "to like look at some of the common functionality that any website might need and let's see how we can implement",
    "start": "112649",
    "end": "119310"
  },
  {
    "text": "that in a server less passion with lambda at the edge so the next logical",
    "start": "119310",
    "end": "126750"
  },
  {
    "start": "125000",
    "end": "270000"
  },
  {
    "text": "step or so you have this idea now you want to go build it right typically you want to try it out you want to validate",
    "start": "126750",
    "end": "132090"
  },
  {
    "text": "it you decide to build him a minimal Viable Product and you want to make sure you are able to I trade fast",
    "start": "132090",
    "end": "139690"
  },
  {
    "text": "be agile go we'll something or take something to the market pretty fast and",
    "start": "139690",
    "end": "145780"
  },
  {
    "text": "you want to be cost effective and you choose AWS as the platform so this is the scenario and we'll see how we can",
    "start": "145780",
    "end": "151920"
  },
  {
    "text": "evolve this again we just chose a news aggregator as an example it could pretty",
    "start": "151920",
    "end": "158050"
  },
  {
    "text": "much be anything you want because the functionalities we're gonna discuss applies to multiple sites typically if",
    "start": "158050",
    "end": "164380"
  },
  {
    "text": "you look at any website there's gonna be some content that is static that doesn't change that can be cached so things like",
    "start": "164380",
    "end": "171610"
  },
  {
    "text": "the images or media the client-side JavaScript the HTML the CSS all these",
    "start": "171610",
    "end": "178150"
  },
  {
    "text": "don't change that off frequently and those can be cached pretty well then you",
    "start": "178150",
    "end": "183760"
  },
  {
    "text": "have the dynamic content right so in this particular example it would be the top news or feed that that's pretty",
    "start": "183760",
    "end": "189970"
  },
  {
    "text": "dynamic that keeps changing then you have another type of dynamic content",
    "start": "189970",
    "end": "196150"
  },
  {
    "text": "which is very customized to the viewer right so depending on where the viewer is trying to access in this particular",
    "start": "196150",
    "end": "202210"
  },
  {
    "text": "example a news aggregator site depending on where the viewer is you want to show maybe the local weather maybe in the",
    "start": "202210",
    "end": "209890"
  },
  {
    "text": "local news you want to show very Vegas specific so let's say the viewer is coming in from Las Vegas you want to",
    "start": "209890",
    "end": "215260"
  },
  {
    "text": "show him news which is very customized to that particular viewer so this is an",
    "start": "215260",
    "end": "222490"
  },
  {
    "text": "example of customizing and based on the location of the viewer it could be customized based on the device the viewer is coming in from so",
    "start": "222490",
    "end": "229060"
  },
  {
    "text": "if the viewer is coming in from a mobile phone you might want to crop the images or have the images appear in a different",
    "start": "229060",
    "end": "236740"
  },
  {
    "text": "resolution as opposed to the viewer coming in from a desktop and then typically if you look at any site there",
    "start": "236740",
    "end": "242770"
  },
  {
    "text": "is some sort of hip or some sort of way for the your end-users to sign up to",
    "start": "242770",
    "end": "248890"
  },
  {
    "text": "provide their preferences in this particular example it could be that you know the user is only interested in",
    "start": "248890",
    "end": "254770"
  },
  {
    "text": "let's say sports or business or certain type of news or topics he could make all",
    "start": "254770",
    "end": "259989"
  },
  {
    "text": "those selection in his as part of his profile once he logs in and he could also make selection like a what language",
    "start": "259989",
    "end": "266350"
  },
  {
    "text": "do I want to see my Seiden all right so we're not going into",
    "start": "266350",
    "end": "272650"
  },
  {
    "start": "270000",
    "end": "315000"
  },
  {
    "text": "the nitty-gritty details of how the different components are connected but typically when you talk about any side",
    "start": "272650",
    "end": "278980"
  },
  {
    "text": "or application you have a compute component it could be an easy-to instance it could be containers there's",
    "start": "278980",
    "end": "287200"
  },
  {
    "text": "a storage so in this particular example your website you have a lot of static content so your images your CSS all",
    "start": "287200",
    "end": "294460"
  },
  {
    "text": "these can be stored in a storage it could be an s3 bucket then you need some sort of data store it could be a",
    "start": "294460",
    "end": "300760"
  },
  {
    "text": "relational or non relational database and in the new your particular going",
    "start": "300760",
    "end": "306310"
  },
  {
    "text": "back to the previous example your user sign up what are their credentials what are the selections all those information",
    "start": "306310",
    "end": "311980"
  },
  {
    "text": "can be stored in the in the data store and now zooming out a little bit let's",
    "start": "311980",
    "end": "318040"
  },
  {
    "start": "315000",
    "end": "345000"
  },
  {
    "text": "say you chose us East one or not Virginia region as your region and you",
    "start": "318040",
    "end": "324220"
  },
  {
    "text": "can see that you know all the compute the storage the database are they are all located in that origin and that",
    "start": "324220",
    "end": "330490"
  },
  {
    "text": "works fine right when you are like very early on in your in your product",
    "start": "330490",
    "end": "336730"
  },
  {
    "text": "development phase you have a couple of users maybe your friends families maybe a few people who are interested and",
    "start": "336730",
    "end": "342730"
  },
  {
    "text": "everything is okay at this point your real goal is to validate your idea I trading over it you're coming up you are",
    "start": "342730",
    "end": "349150"
  },
  {
    "start": "345000",
    "end": "356000"
  },
  {
    "text": "trying to find the right market fit and then let's imagine that you are successful ready or you hit the growth",
    "start": "349150",
    "end": "354940"
  },
  {
    "text": "phase now you have users not just from us you have users from across the globe",
    "start": "354940",
    "end": "360670"
  },
  {
    "text": "who's trying to access the same or you're trying to access your website and",
    "start": "360670",
    "end": "367710"
  },
  {
    "text": "soon you would find that you know the performance is not great a user for example who's coming in from Australia",
    "start": "367710",
    "end": "373540"
  },
  {
    "text": "now has to go all the way across to hear your origin which is in US and the kind",
    "start": "373540",
    "end": "378970"
  },
  {
    "text": "of page load times or the kind of responses he sees he or she sees could be quite different from a user who's",
    "start": "378970",
    "end": "384850"
  },
  {
    "text": "very low close close to your origin in US and you have a new set of challenges",
    "start": "384850",
    "end": "390190"
  },
  {
    "start": "388000",
    "end": "438000"
  },
  {
    "text": "to now worry about one of them is you need to scale your infrastructure to",
    "start": "390190",
    "end": "396669"
  },
  {
    "text": "meet the increased demand scaling scaling infrastructure and you want to scale in such a way that",
    "start": "396669",
    "end": "403090"
  },
  {
    "text": "you can still manage the operation overhead of complexity remember that you are still a small pretty small shop so",
    "start": "403090",
    "end": "409600"
  },
  {
    "text": "it's you don't have a lot of people so you want to be able to manage the the infrastructure but the same thing you",
    "start": "409600",
    "end": "415330"
  },
  {
    "text": "want to scale to the limits you want and you still want to provide the same good user experience irrespective of where",
    "start": "415330",
    "end": "421900"
  },
  {
    "text": "your users are coming in from you cannot discriminate a user who's far off from your origin was a user who's pretty",
    "start": "421900",
    "end": "427600"
  },
  {
    "text": "close to where your origin is located and you want to provide the same set of",
    "start": "427600",
    "end": "433690"
  },
  {
    "text": "same rich set of capabilities to all users and the good thing is that AWS",
    "start": "433690",
    "end": "440410"
  },
  {
    "start": "438000",
    "end": "487000"
  },
  {
    "text": "today has services that can help with these so Amazon CloudFront is a CDN a",
    "start": "440410",
    "end": "447100"
  },
  {
    "text": "content distribution service from AWS so you can use cloud friend to essentially",
    "start": "447100",
    "end": "453520"
  },
  {
    "text": "cache a lot of the static content and we'll talk more about that in a bit and then you have a SS lambda so lambda can",
    "start": "453520",
    "end": "459910"
  },
  {
    "text": "help address the scaling challenge we talked about before it can help the operational overhead challenge because",
    "start": "459910",
    "end": "466630"
  },
  {
    "text": "lambda so let's compute and at last mean when we really announced I'm sorry we",
    "start": "466630",
    "end": "472240"
  },
  {
    "text": "announced service lambda at the edge which is pretty much an amalgamation of the capabilities of both cloud phone and",
    "start": "472240",
    "end": "478180"
  },
  {
    "text": "lambda and that's lambda at the edge it wasn't preview at last reinvent it when",
    "start": "478180",
    "end": "483760"
  },
  {
    "text": "GA early this year so quick look at",
    "start": "483760",
    "end": "489280"
  },
  {
    "text": "cloud friend so cloud fitness CDN like I said it's got 107 points of presence of",
    "start": "489280",
    "end": "495040"
  },
  {
    "text": "pops and we keep adding on to the list based on customer feedback we get and based on where the users are coming from",
    "start": "495040",
    "end": "501960"
  },
  {
    "text": "so here in the map you can see all the locations we have and a pop can be a",
    "start": "501960",
    "end": "507970"
  },
  {
    "text": "edge location or it can be a regional edge cache now edge locations are a",
    "start": "507970",
    "end": "514330"
  },
  {
    "text": "global network of data senders that twelve phone uses to cache and distribute the content to viewers",
    "start": "514330",
    "end": "521110"
  },
  {
    "text": "wherever in the globe they may be and then the the other thing we have here is regional edge caches these are mid tier",
    "start": "521110",
    "end": "528670"
  },
  {
    "text": "caches that sits between an edge location and origin and these are available to you at no additional charge you do not need a change",
    "start": "528670",
    "end": "535540"
  },
  {
    "text": "application to make use of them and if you look at the map here you can see the regional edge caches are located in AWS",
    "start": "535540",
    "end": "542920"
  },
  {
    "text": "regions meaning that we have a lot more capacity available to us which translates to a CloudFront customer",
    "start": "542920",
    "end": "549279"
  },
  {
    "text": "having more cache width and better cache hit ratios now going back to the",
    "start": "549279",
    "end": "557709"
  },
  {
    "start": "556000",
    "end": "649000"
  },
  {
    "text": "architecture right introducing cloud front of the mix is pretty straightforward you do not have to make any changes to the application",
    "start": "557709",
    "end": "563680"
  },
  {
    "text": "so now CloudFront comes within the mix this is not the full set of locations we",
    "start": "563680",
    "end": "569709"
  },
  {
    "text": "have for simplicity I just selected a few and then now when the viewers the",
    "start": "569709",
    "end": "575019"
  },
  {
    "text": "same viewers who are trying to access your site they are now not going directly to the origin instead",
    "start": "575019",
    "end": "580630"
  },
  {
    "text": "CloudFront would redirect or route the request HTTP request to a location",
    "start": "580630",
    "end": "586060"
  },
  {
    "text": "that's closest to them from a latency standpoint so we have latency based algorithm we are constantly looking at",
    "start": "586060",
    "end": "591819"
  },
  {
    "text": "how the internet is behaving we have they're building all these metrics which we can use to send the request to the",
    "start": "591819",
    "end": "598360"
  },
  {
    "text": "best most ideal location from a latency standpoint and the other thing is that",
    "start": "598360",
    "end": "604089"
  },
  {
    "text": "if you look at the origin we had the three icons there can be at the compute the storage and data space and now with",
    "start": "604089",
    "end": "611680"
  },
  {
    "text": "cloud phone in the mix you can extend your storage to the edge so going back",
    "start": "611680",
    "end": "617380"
  },
  {
    "text": "to your site all your static content can now be located closer to the viewers so what is the benefit to you why do we",
    "start": "617380",
    "end": "623889"
  },
  {
    "text": "want to do that so if you look at the you let's say going back to the scenario you have a user in Australia who's trying to access the origin now cloud",
    "start": "623889",
    "end": "630819"
  },
  {
    "text": "friend would automatically route the request to a location that's closest to him so let's say somewhere in Australia",
    "start": "630819",
    "end": "636250"
  },
  {
    "text": "and since the content is very cacheable it's not dynamic the request can be merely served from that location instead",
    "start": "636250",
    "end": "644170"
  },
  {
    "text": "of backhauling and all the way back to the origin in us just moving on to what",
    "start": "644170",
    "end": "651730"
  },
  {
    "start": "649000",
    "end": "733000"
  },
  {
    "text": "we had so the Saudi content now it's it's also through cloud friend so the",
    "start": "651730",
    "end": "658389"
  },
  {
    "text": "color scheme is it was red initially if you were paying if you notice that but now I change the green because all these",
    "start": "658389",
    "end": "664660"
  },
  {
    "text": "shadi corners are now being cached at cloud from there closer to the you viewer meaning that when they try to lower",
    "start": "664660",
    "end": "670640"
  },
  {
    "text": "their sight those requests can be served pretty pretty fast from a location",
    "start": "670640",
    "end": "675860"
  },
  {
    "text": "closest to the user now the dynamic content it's not green yet it's not red",
    "start": "675860",
    "end": "681740"
  },
  {
    "text": "it's better than where we're before just by introducing CloudFront in the mix because CloudFront over the last several",
    "start": "681740",
    "end": "688520"
  },
  {
    "text": "years it has been in existence has been adding capabilities not only for accelerating static content but also for",
    "start": "688520",
    "end": "695420"
  },
  {
    "text": "dynamic content so we do things like various Network optimizations whether it's a TCP level at the TCP level if the",
    "start": "695420",
    "end": "703100"
  },
  {
    "text": "origin is in AWS we leverage Amazon backbone Network we use persistent DCP",
    "start": "703100",
    "end": "708860"
  },
  {
    "text": "connections your SSL termination from the viewers can now terminate at a location closest to them",
    "start": "708860",
    "end": "714470"
  },
  {
    "text": "so all these helps with accelerating the delivery of dynamic content so you know",
    "start": "714470",
    "end": "720050"
  },
  {
    "text": "later on we can see how we can change those yellow in the green but this is where we are right now just by",
    "start": "720050",
    "end": "726260"
  },
  {
    "text": "introducing cloud friends so you have kind of moved some of these functionalities to the edge mainly the storage a cuke look at lambda so lambda",
    "start": "726260",
    "end": "737030"
  },
  {
    "start": "733000",
    "end": "819000"
  },
  {
    "text": "is server let's compute essentially you can run a piece of code without the need",
    "start": "737030",
    "end": "744890"
  },
  {
    "text": "to provision configure or manage servers it's even driven compute model meaning",
    "start": "744890",
    "end": "750920"
  },
  {
    "text": "you provide a piece of code you want to run you provide or you specify when it",
    "start": "750920",
    "end": "755930"
  },
  {
    "text": "should be executed so you specify the trigger or even point and lambda takes care of running it on e on your behalf",
    "start": "755930",
    "end": "763120"
  },
  {
    "text": "it scales automatically with usage so now you do not have to ask questions",
    "start": "763120",
    "end": "768410"
  },
  {
    "text": "like hey do I have enough capacity for the next six months because going back to our scenario you're the scaling phase",
    "start": "768410",
    "end": "774650"
  },
  {
    "text": "right so one of the good things about having lambda in the mix here is that it can help with the with scaling because",
    "start": "774650",
    "end": "781580"
  },
  {
    "text": "that's something kind of abstracted away from you with lambda you don't pay for cold idle servers especially when you",
    "start": "781580",
    "end": "788930"
  },
  {
    "text": "are you know you're a small company or going back to a scenario he doesn't have a lot of resources so he wants to make",
    "start": "788930",
    "end": "794390"
  },
  {
    "text": "sure he's paying only for the resources consuming with lambda you don't pay for cold idle servers you only pay when the",
    "start": "794390",
    "end": "801180"
  },
  {
    "text": "pure is being executed and with lambda there's building availability and fault",
    "start": "801180",
    "end": "806430"
  },
  {
    "text": "tolerance so now you do not have to be a distribution systems expert because all that is kind of abstract away from you",
    "start": "806430",
    "end": "811980"
  },
  {
    "text": "lambda does does the high availability and fault tolerance for your website so",
    "start": "811980",
    "end": "819750"
  },
  {
    "start": "819000",
    "end": "863000"
  },
  {
    "text": "now lambda at the edge lambda the edge isn't really an extension of lambda so all the capabilities all the benefits we",
    "start": "819750",
    "end": "826080"
  },
  {
    "text": "talked about with lambda is also applicable here but in addition to that a key benefit is the global distribution",
    "start": "826080",
    "end": "833660"
  },
  {
    "text": "so lambda functions that are not part of lambda at the edge today run in a single",
    "start": "833660",
    "end": "839880"
  },
  {
    "text": "database region you know lambda is available in all AWS regions so you as a customer you can choose a region you",
    "start": "839880",
    "end": "845400"
  },
  {
    "text": "want and that works perfectly fine for a lot of the use cases but with lambda at",
    "start": "845400",
    "end": "851250"
  },
  {
    "text": "the edge these functions are not just running in a region but we make it available in multiple locations worldwide no that is cool that is that",
    "start": "851250",
    "end": "858570"
  },
  {
    "text": "is good but what what is the real benefit to you as a customer of lambda at the ADEs let's take a little bit",
    "start": "858570",
    "end": "864840"
  },
  {
    "text": "let's take a deeper look into that today lambda functions that are part of lambda at the edge needs to be ordered in US",
    "start": "864840",
    "end": "873900"
  },
  {
    "text": "east one which is not Virginia you have the same experience as a debase lambda there's nothing different the only",
    "start": "873900",
    "end": "879480"
  },
  {
    "text": "difference is that the hook or the trigger for your function is CloudFront",
    "start": "879480",
    "end": "885140"
  },
  {
    "text": "so once you click Submit what happens is the functions are automatically replicated across multiple locations",
    "start": "885140",
    "end": "892170"
  },
  {
    "text": "worldwide so this means that the same way Klout Fionn was able to move the storage to the edge locations lambda is",
    "start": "892170",
    "end": "899880"
  },
  {
    "text": "able to move the computer the edge locations so now let's go back to the scenario let's say you had a user from",
    "start": "899880",
    "end": "905610"
  },
  {
    "text": "Australia and let's say he's making a request that requires some sort of computer happens it's not a really a",
    "start": "905610",
    "end": "911040"
  },
  {
    "text": "static content prior to lambda at the edge the request had to travel all the way back to the origin and then the",
    "start": "911040",
    "end": "917040"
  },
  {
    "text": "response had to be served but now since the compute can run at location closer to the user the request can be served",
    "start": "917040",
    "end": "923670"
  },
  {
    "text": "immediately so now let's take a look at a deeper look into lambda at the end",
    "start": "923670",
    "end": "930390"
  },
  {
    "text": "let's take a look at some of the code samples and take a look at how you can implement the rest of the functionality with lambda at the edge for that let me",
    "start": "930390",
    "end": "937240"
  },
  {
    "text": "invite money on stage here thank you",
    "start": "937240",
    "end": "944020"
  },
  {
    "text": "George hope hope you guys can hear me clearly",
    "start": "944020",
    "end": "948930"
  },
  {
    "text": "my name is money radhakrishnan I'm a software engineer with CloudFront and lambda at the edge and I'm here to talk",
    "start": "949570",
    "end": "956650"
  },
  {
    "text": "to you a little bit more detail about how some of the stuff that George",
    "start": "956650",
    "end": "962140"
  },
  {
    "text": "pointed out as part of the website there are not quite being done at the edge can",
    "start": "962140",
    "end": "968110"
  },
  {
    "text": "now be done with lambda at the edge before we dive deeper let's take a look",
    "start": "968110",
    "end": "974110"
  },
  {
    "start": "970000",
    "end": "1109000"
  },
  {
    "text": "at what happens in an edge location when CloudFront gets a request so what you see here is you know request lands at a",
    "start": "974110",
    "end": "983740"
  },
  {
    "text": "call from cash cloten cash is kind of a big Bob in this picture it's a little bit more evolved",
    "start": "983740",
    "end": "990520"
  },
  {
    "text": "than that but for our purposes we'll just treat it as a giant cash so we look it up in cash if it's in cash we serve",
    "start": "990520",
    "end": "997839"
  },
  {
    "text": "it from there there's a white line there that's not quite visible but that's the",
    "start": "997839",
    "end": "1003150"
  },
  {
    "text": "traversal through the cash and viewers get their response but if it's not in cash then we reach out to the origin we",
    "start": "1003150",
    "end": "1011820"
  },
  {
    "text": "know which origin it is because you have configured it a certain way and then we get the content from there may be cash",
    "start": "1011820",
    "end": "1018420"
  },
  {
    "text": "yet if it's cashable and serve the response what we've done that lambda the",
    "start": "1018420",
    "end": "1023640"
  },
  {
    "text": "edge is introduced a few points at which customers can customize the request",
    "start": "1023640",
    "end": "1031079"
  },
  {
    "text": "processing in some ways what that means is say for example we've introduced a",
    "start": "1031079",
    "end": "1036630"
  },
  {
    "text": "viewer-request event but what this allows what does a lot of customers to",
    "start": "1036630",
    "end": "1041699"
  },
  {
    "text": "do is take a look at the request as they come in the door even before we start",
    "start": "1041699",
    "end": "1047040"
  },
  {
    "text": "processing it meaning looking in the cache or whatever and modify properties of the request if they so choose",
    "start": "1047040",
    "end": "1053570"
  },
  {
    "text": "similarly you know there's an origin request event what this allows customers",
    "start": "1053570",
    "end": "1058620"
  },
  {
    "text": "to do is modify a origin request meaning it's a Miss in the claw front cache and",
    "start": "1058620",
    "end": "1064290"
  },
  {
    "text": "we are about to reach out to the origin and you want to change some think about this request and yes you can",
    "start": "1064290",
    "end": "1071760"
  },
  {
    "text": "do that now similarly as we receive a response back from the origin we can",
    "start": "1071760",
    "end": "1077760"
  },
  {
    "text": "modify that before that gets in the cache and final one right before it",
    "start": "1077760",
    "end": "1084570"
  },
  {
    "text": "leaves CloudFront to go back to the viewer you can change properties of that response so essentially four points at",
    "start": "1084570",
    "end": "1091260"
  },
  {
    "text": "which you can modify and based on your use case you can decide which is the",
    "start": "1091260",
    "end": "1097380"
  },
  {
    "text": "best place to implement the logic that you want to implement and we will look and look at examples that hopefully will",
    "start": "1097380",
    "end": "1105120"
  },
  {
    "text": "give you some ideas of when to do what so a little bit of a deeper dive into",
    "start": "1105120",
    "end": "1112650"
  },
  {
    "start": "1109000",
    "end": "1269000"
  },
  {
    "text": "the programming model the lambda at the edge programming model is very similar to lambdas it's event-driven what that",
    "start": "1112650",
    "end": "1119280"
  },
  {
    "text": "means is functions are associated with events event these functions are",
    "start": "1119280",
    "end": "1125250"
  },
  {
    "text": "obviously invoked when these events happen the functions are invoked with",
    "start": "1125250",
    "end": "1131040"
  },
  {
    "text": "the details of the event as input and optionally functions can return a",
    "start": "1131040",
    "end": "1138650"
  },
  {
    "text": "processed result back to the caller for lambda at the edge let's take the",
    "start": "1138650",
    "end": "1144600"
  },
  {
    "text": "example of the viewer request that we saw before so we would associate a viewer request with some function that",
    "start": "1144600",
    "end": "1151200"
  },
  {
    "text": "you have in you know my function : the colon one is actually a version lambda",
    "start": "1151200",
    "end": "1157290"
  },
  {
    "text": "the edge expects that you always associate a version of a function and if if and when CloudFront receives a",
    "start": "1157290",
    "end": "1164070"
  },
  {
    "text": "request it would invoke this function and this function would be invoked with",
    "start": "1164070",
    "end": "1170580"
  },
  {
    "text": "the details of that request say you want to modify or say you want to add a header in there now you add this header",
    "start": "1170580",
    "end": "1176250"
  },
  {
    "text": "and then you return this modified request back to CloudFront and CloudFront will continue processing this",
    "start": "1176250",
    "end": "1183059"
  },
  {
    "text": "request as though it got its that it's the request that got from the viewer",
    "start": "1183059",
    "end": "1188250"
  },
  {
    "text": "nothing changes and what CloudFront does you just get the peak into the request change something and let it proceed this",
    "start": "1188250",
    "end": "1197250"
  },
  {
    "text": "is probably how it would look in code the top line there is the way it gets",
    "start": "1197250",
    "end": "1204590"
  },
  {
    "text": "invoked it the function typically takes three parameters an event a context in a",
    "start": "1204590",
    "end": "1210050"
  },
  {
    "text": "callback the event that's the one that has the details of the event for for",
    "start": "1210050",
    "end": "1215750"
  },
  {
    "text": "CloudFront for example if this is a viewer-request event then the request object is present as part of event dot",
    "start": "1215750",
    "end": "1224660"
  },
  {
    "text": "records of zero because we always only invoke with one request at a time dot CF",
    "start": "1224660",
    "end": "1231080"
  },
  {
    "text": "standing for CloudFront dot request if it happened to be a response event it would be similar",
    "start": "1231080",
    "end": "1238010"
  },
  {
    "text": "except that it would the event records 0 CF response and so you could access the",
    "start": "1238010",
    "end": "1244790"
  },
  {
    "text": "request or response that way and then once you've done processing whatever it",
    "start": "1244790",
    "end": "1249860"
  },
  {
    "text": "is that you want to do then you callback with either the request or the response",
    "start": "1249860",
    "end": "1255440"
  },
  {
    "text": "and depending on your use case and then calls from will take the object that you returned the callback is the way the",
    "start": "1255440",
    "end": "1261800"
  },
  {
    "text": "mechanism for you to return a result back to CloudFront buffman will take that thing and continue processing cool",
    "start": "1261800",
    "end": "1269510"
  },
  {
    "start": "1269000",
    "end": "1279000"
  },
  {
    "text": "so pulling back George alluded to you know how land at",
    "start": "1269510",
    "end": "1275180"
  },
  {
    "text": "the edge can help with this customization and that's what we'll continue looking broadly I've classified",
    "start": "1275180",
    "end": "1281950"
  },
  {
    "start": "1279000",
    "end": "1385000"
  },
  {
    "text": "mostly for the purposes of this presentation the customizations into two",
    "start": "1281950",
    "end": "1287870"
  },
  {
    "text": "broad categories one that's not personal to the user in the sense that you are",
    "start": "1287870",
    "end": "1294470"
  },
  {
    "text": "looking at attributes that are not just that user but something about them the",
    "start": "1294470",
    "end": "1300890"
  },
  {
    "text": "place that they may be in or the device that they may be using or the user agent that they may be using and all of these",
    "start": "1300890",
    "end": "1307640"
  },
  {
    "text": "are good reasons to customize right so you want to give them some local updates",
    "start": "1307640",
    "end": "1313430"
  },
  {
    "text": "or maybe you know change the layout of your website based on the device type or",
    "start": "1313430",
    "end": "1320150"
  },
  {
    "text": "like George mentioned the images could be provided at a different resolution or",
    "start": "1320150",
    "end": "1327020"
  },
  {
    "text": "crop differently all of those are good reasons to customize that are not quite",
    "start": "1327020",
    "end": "1332030"
  },
  {
    "text": "personal to the user and obviously the second category is personalization based on who that user",
    "start": "1332030",
    "end": "1337940"
  },
  {
    "text": "is well you know something about that user hey you know who that user is and be you know something about that user",
    "start": "1337940",
    "end": "1344420"
  },
  {
    "text": "and you combine these two things to create something that's more meaningful richer for them and another dimension on",
    "start": "1344420",
    "end": "1354200"
  },
  {
    "text": "which things may vary is your particular setup say for example you are an",
    "start": "1354200",
    "end": "1359660"
  },
  {
    "text": "existing CloudFront customer and you all are you're already using a CDN and you already have a set up where there is a",
    "start": "1359660",
    "end": "1366530"
  },
  {
    "text": "CDN plus an origin and for for now you want to do things but you don't want to",
    "start": "1366530",
    "end": "1372740"
  },
  {
    "text": "disrupt this as much and that's great which is fine so lambda the edge can",
    "start": "1372740",
    "end": "1378050"
  },
  {
    "text": "help with you know an origin based set up just as much as it can help with the",
    "start": "1378050",
    "end": "1384080"
  },
  {
    "text": "server less set up and so if you look at it the first kind of customizations that",
    "start": "1384080",
    "end": "1390910"
  },
  {
    "start": "1385000",
    "end": "1509000"
  },
  {
    "text": "publishers often look to do is using the cloud front cache meaning you have",
    "start": "1390910",
    "end": "1397670"
  },
  {
    "text": "content that's highly cacheable so if you have to if you have the same image",
    "start": "1397670",
    "end": "1403040"
  },
  {
    "text": "at different resolutions both images are equally cashable it's just that you want",
    "start": "1403040",
    "end": "1408440"
  },
  {
    "text": "to serve one image to a mobile device and a bigger larger higher resolution",
    "start": "1408440",
    "end": "1414830"
  },
  {
    "text": "image to a desktop device so you you you typically want to use the cloth on cache and in these cases this applies to both",
    "start": "1414830",
    "end": "1421330"
  },
  {
    "text": "origin with origin and several a set up because it doesn't matter where the",
    "start": "1421330",
    "end": "1426410"
  },
  {
    "text": "response is produced it's in cloud from cache and as the request comes in the door you want to decide which of these",
    "start": "1426410",
    "end": "1433820"
  },
  {
    "text": "two to serve or which of these and ones to serve in there's many ways you can do",
    "start": "1433820",
    "end": "1439070"
  },
  {
    "text": "it one of the common ones by modifying the URL but you can just as well achieve",
    "start": "1439070",
    "end": "1444230"
  },
  {
    "text": "the same result by changing a header or query strings the second one applies a",
    "start": "1444230",
    "end": "1451220"
  },
  {
    "text": "lot more to people or publishers with origins this is the origin selection",
    "start": "1451220",
    "end": "1457160"
  },
  {
    "text": "logic which we introduced like two weeks ago what this allows you to do and it's",
    "start": "1457160",
    "end": "1462200"
  },
  {
    "text": "mostly applicable to the origin request event where right before the request gets out or is",
    "start": "1462200",
    "end": "1468470"
  },
  {
    "text": "is called out to the origin you get to select which origin the center and you can dynamically change this logic this",
    "start": "1468470",
    "end": "1475880"
  },
  {
    "text": "will we'll see examples of why this may be beneficial but this applies this is a facility that mostly applies to setup",
    "start": "1475880",
    "end": "1483710"
  },
  {
    "text": "with origin and the third one is generating content at the edge this is",
    "start": "1483710",
    "end": "1490130"
  },
  {
    "text": "mostly a server less use case mostly because here you're generating the",
    "start": "1490130",
    "end": "1497419"
  },
  {
    "text": "entire response in one of the events that we have typically a viewer-request event or an origin request event and you",
    "start": "1497419",
    "end": "1504890"
  },
  {
    "text": "don't reach out to the origin at all cool with that let's start off with the",
    "start": "1504890",
    "end": "1512260"
  },
  {
    "start": "1509000",
    "end": "1637000"
  },
  {
    "text": "CloudFront cash-based examples so this I I just wanted to",
    "start": "1512260",
    "end": "1517370"
  },
  {
    "text": "mention that for a variety of reasons publishers may not have access to some",
    "start": "1517370",
    "end": "1525980"
  },
  {
    "text": "of their client-side customizations so I've picked examples where or it may be",
    "start": "1525980",
    "end": "1531020"
  },
  {
    "text": "beneficial sometimes to make one call from the client do a few things on the",
    "start": "1531020",
    "end": "1536419"
  },
  {
    "text": "server side and then send that response back so in my examples have specifically picked use cases where all the clients",
    "start": "1536419",
    "end": "1543740"
  },
  {
    "text": "call out to the same object say in this case index dot HTML and then internally",
    "start": "1543740",
    "end": "1550130"
  },
  {
    "text": "on the server side which includes both lambda at the edge and your origin you decide which combination to serve to",
    "start": "1550130",
    "end": "1557570"
  },
  {
    "text": "that particular viewer so for example so if you want to vary based on viewer",
    "start": "1557570",
    "end": "1564770"
  },
  {
    "text": "country one way to do that is you inspect the property of the request and",
    "start": "1564770",
    "end": "1569929"
  },
  {
    "text": "then change the URL so you could include a path prefix that you know the country",
    "start": "1569929",
    "end": "1578890"
  },
  {
    "text": "au or UK or the whichever way you want",
    "start": "1578890",
    "end": "1584150"
  },
  {
    "text": "to set it up and then that internally would redirect so let's say you do it in the viewer request event you change the",
    "start": "1584150",
    "end": "1589789"
  },
  {
    "text": "URL now you look it up in cloud from cache with that modified URL and then you serve that you know either it's if",
    "start": "1589789",
    "end": "1598909"
  },
  {
    "text": "it's a customer from Australia they get da used index.html customer from UK gets the",
    "start": "1598909",
    "end": "1604380"
  },
  {
    "text": "UK's slash index dot HTML similarly if you have a use case where you have multiple domains also from the same",
    "start": "1604380",
    "end": "1611010"
  },
  {
    "text": "distribution but the content varies you can do that by looking at the host",
    "start": "1611010",
    "end": "1616770"
  },
  {
    "text": "header or maybe include that as part of your URL the third way to do it is based",
    "start": "1616770",
    "end": "1622620"
  },
  {
    "text": "on device type you can take a look at the CloudFront is mobile viewer or cloud",
    "start": "1622620",
    "end": "1628650"
  },
  {
    "text": "fund is desktop you know those headers and then modify",
    "start": "1628650",
    "end": "1633990"
  },
  {
    "text": "your URL accordingly these customizations not just for the request",
    "start": "1633990",
    "end": "1640290"
  },
  {
    "start": "1637000",
    "end": "1685000"
  },
  {
    "text": "side it can be done quite as well for the response side here are some examples",
    "start": "1640290",
    "end": "1645810"
  },
  {
    "text": "where you can include security headers right before the response gets generated",
    "start": "1645810",
    "end": "1650850"
  },
  {
    "text": "like HSTs or course you can modify the cache control headers this this is one",
    "start": "1650850",
    "end": "1657840"
  },
  {
    "text": "use case where if you have a lot of objects already in cache and for whatever reason you want to control",
    "start": "1657840",
    "end": "1663540"
  },
  {
    "text": "their cache control you can do that a fewer response right before they go out this is an exposed true client IP is yet",
    "start": "1663540",
    "end": "1672210"
  },
  {
    "text": "another one that we've heard from customers where you look at the x-forwarded-for and include that as a",
    "start": "1672210",
    "end": "1678510"
  },
  {
    "text": "header that the origin understands in the origin request right before it goes",
    "start": "1678510",
    "end": "1683730"
  },
  {
    "text": "to the origin so these are some examples of how you could use the cloud from",
    "start": "1683730",
    "end": "1688800"
  },
  {
    "text": "cache and let's take a look at a deeper deeper look at a particular one which is",
    "start": "1688800",
    "end": "1694290"
  },
  {
    "text": "using the device or modifying it based on the device type in this case I'm",
    "start": "1694290",
    "end": "1700440"
  },
  {
    "text": "choosing to run this logic in the origin request event here that means that I've",
    "start": "1700440",
    "end": "1709230"
  },
  {
    "text": "already looked in cache it's not there in cache I look at the request and then",
    "start": "1709230",
    "end": "1715050"
  },
  {
    "text": "decide ok so this one's a mobile viewer and then add the slash mobile into the",
    "start": "1715050",
    "end": "1722130"
  },
  {
    "text": "URL and then send that request out to the origin because my content is highly",
    "start": "1722130",
    "end": "1727590"
  },
  {
    "text": "cashable I'm doing it this way if that's not the case you can just as well do this in the viewer",
    "start": "1727590",
    "end": "1733049"
  },
  {
    "text": "first event one thing of note is that if you do it in the origin request event is",
    "start": "1733049",
    "end": "1738659"
  },
  {
    "text": "that you want to make sure that whatever headers that you're looking at are also",
    "start": "1738659",
    "end": "1743940"
  },
  {
    "text": "part of the cache key CloudFront has facilities to do that it's called forward headers make sure",
    "start": "1743940",
    "end": "1749399"
  },
  {
    "text": "that part of the cache key and forward headers will get you there so looking at",
    "start": "1749399",
    "end": "1755730"
  },
  {
    "text": "the code the ones in blue are mostly",
    "start": "1755730",
    "end": "1760889"
  },
  {
    "text": "things that we've talked about before like how the function gets invoked what it gets invoked with how to look at the",
    "start": "1760889",
    "end": "1767399"
  },
  {
    "text": "request and how to return stuff back the stuff in orange is the one that's more",
    "start": "1767399",
    "end": "1772710"
  },
  {
    "text": "interesting to us in this case I am looking at the CloudFront ace desktop",
    "start": "1772710",
    "end": "1779369"
  },
  {
    "text": "viewer or CloudFront it's mobile viewer and I am appending or inserting the",
    "start": "1779369",
    "end": "1784499"
  },
  {
    "text": "right prefix or right desktop or mobile keyword in there and that gets me to",
    "start": "1784499",
    "end": "1792379"
  },
  {
    "text": "redirect and fetch the right not really like just go straight to the origin with",
    "start": "1792379",
    "end": "1797609"
  },
  {
    "text": "different URLs and fetch the right content for so now let's switch back a",
    "start": "1797609",
    "end": "1806460"
  },
  {
    "start": "1803000",
    "end": "1891000"
  },
  {
    "text": "little bit and see how origin selection can help so in this case your",
    "start": "1806460",
    "end": "1812639"
  },
  {
    "text": "customizations still mostly happening at the origin but for a variety of reasons",
    "start": "1812639",
    "end": "1819899"
  },
  {
    "text": "you want to select which origin you want to send to dynamically sometimes it's",
    "start": "1819899",
    "end": "1825389"
  },
  {
    "text": "because you have many origins that probably are identical but but or",
    "start": "1825389",
    "end": "1832200"
  },
  {
    "text": "geographically distributed or maybe that you want they have multiple origins for redundancy and you want a load balance",
    "start": "1832200",
    "end": "1838109"
  },
  {
    "text": "across them it's doable with this origin selection logic sometimes it's a",
    "start": "1838109",
    "end": "1843509"
  },
  {
    "text": "controlled rollout so you want to introduce a new feature but you just don't want to go deploy it all over the place you want to do it in a more",
    "start": "1843509",
    "end": "1849840"
  },
  {
    "text": "controlled fashion where you have parts of your origins updated the others have",
    "start": "1849840",
    "end": "1854850"
  },
  {
    "text": "there haven't been it could be blue green this deploys or a be testing that's doable",
    "start": "1854850",
    "end": "1860700"
  },
  {
    "text": "sometimes it's migration across origins sometimes you know including on-prem too",
    "start": "1860700",
    "end": "1866190"
  },
  {
    "text": "the cloud that can be done with origin selection and we've heard this from",
    "start": "1866190",
    "end": "1873000"
  },
  {
    "text": "customers where sometimes crawlers are not good at following or doing",
    "start": "1873000",
    "end": "1878550"
  },
  {
    "text": "JavaScript so you may prefer to just give them a pre-rendered version and so you can detect whether it's a crawler or",
    "start": "1878550",
    "end": "1885360"
  },
  {
    "text": "a real you human being and then send them to an origin accordingly the way",
    "start": "1885360",
    "end": "1892500"
  },
  {
    "start": "1891000",
    "end": "1948000"
  },
  {
    "text": "you do that is this logic only runs in the origin request event you in this",
    "start": "1892500",
    "end": "1899010"
  },
  {
    "text": "example you have origins a and B and as the request comes in let's say one of",
    "start": "1899010",
    "end": "1906210"
  },
  {
    "text": "the things that you want to do or make sure that you do is if you know if a user starts being sent to origin a then",
    "start": "1906210",
    "end": "1915090"
  },
  {
    "text": "for the duration of that session they probably want to continue going to that same origin so a common way that people",
    "start": "1915090",
    "end": "1921690"
  },
  {
    "text": "achieve this is using some form of cookies so you start off by looking for the presence of the cookie if it's there",
    "start": "1921690",
    "end": "1928140"
  },
  {
    "text": "then you know that the selections already been made then you just decode the cookie to find out what that origin",
    "start": "1928140",
    "end": "1934770"
  },
  {
    "text": "is and just send them there if a cookie is not present then you look to see which of these two origins you want to",
    "start": "1934770",
    "end": "1940890"
  },
  {
    "text": "send them to and probably send them there either the origin sets the cookie or you can do it in the origin response which all works for you",
    "start": "1940890",
    "end": "1949250"
  },
  {
    "start": "1948000",
    "end": "1999000"
  },
  {
    "text": "this is typically so the way you do that in the origin request event is by",
    "start": "1949260",
    "end": "1954930"
  },
  {
    "text": "modifying the origin that was originally like it's the way it's set up and you can fake so in CloudFront config you",
    "start": "1954930",
    "end": "1961710"
  },
  {
    "text": "always have to provide an origin that origin will be passed to the function as",
    "start": "1961710",
    "end": "1967410"
  },
  {
    "text": "part of the request object so in the request object if you see request the origin is where you would have the",
    "start": "1967410",
    "end": "1973650"
  },
  {
    "text": "details of the origin and you can modify all properties of their origin and you can even move from an s3 origin to a",
    "start": "1973650",
    "end": "1981090"
  },
  {
    "text": "custom origin if you so choose and this modified origin should be returned as part of the request that you hand back",
    "start": "1981090",
    "end": "1989520"
  },
  {
    "text": "the quad front and then CloudFront will know what to do with it it will now make a connection or use an existing connection to this new origin and we'll",
    "start": "1989520",
    "end": "1996780"
  },
  {
    "text": "just continue with that request so in like we talked about using a",
    "start": "1996780",
    "end": "2003590"
  },
  {
    "start": "1999000",
    "end": "2090000"
  },
  {
    "text": "cookie I'm just showing an example of a a be testing we want to hold off",
    "start": "2003590",
    "end": "2010230"
  },
  {
    "text": "questions till the very end if you don't mind thank you so in this case what we have here is on",
    "start": "2010230",
    "end": "2020850"
  },
  {
    "text": "the right we have the decide logic which is pretty pretty straightforward it looks for the presence of the cookie if",
    "start": "2020850",
    "end": "2026340"
  },
  {
    "text": "it's there user said if it's not there decides on a new origin and then",
    "start": "2026340",
    "end": "2031800"
  },
  {
    "text": "whatever it it returns back is the desired origin that you want to send this request to and then in in this",
    "start": "2031800",
    "end": "2038970"
  },
  {
    "text": "example we go then update the domain name because that's the only property we are changing because all origins in our",
    "start": "2038970",
    "end": "2045090"
  },
  {
    "text": "for our example look identical so we update the design desired origin",
    "start": "2045090",
    "end": "2052020"
  },
  {
    "text": "as the domain that we want to go to the one thing of note is that if you",
    "start": "2052020",
    "end": "2057409"
  },
  {
    "text": "sometimes most times it's preferable that the host header be the same as the",
    "start": "2057410",
    "end": "2063810"
  },
  {
    "text": "domain that you're reaching out to but there are use cases where that's where",
    "start": "2063810",
    "end": "2069540"
  },
  {
    "text": "customers desire sometimes to for them to be different for variety of reasons so it's both are possible it's",
    "start": "2069540",
    "end": "2075510"
  },
  {
    "text": "preferable if your origin expects it to be the same then make sure to update that as well",
    "start": "2075510",
    "end": "2080780"
  },
  {
    "text": "once you do that and return back then it's like any other request that came in",
    "start": "2080780",
    "end": "2086159"
  },
  {
    "text": "the door for CloudFront it continues processing it just the way it used to now it's come to the third topic that we",
    "start": "2086160",
    "end": "2094919"
  },
  {
    "start": "2090000",
    "end": "2212000"
  },
  {
    "text": "talked about which is the response generation at the edge this can be done",
    "start": "2094920",
    "end": "2102660"
  },
  {
    "text": "both in the viewer request and the origin request event the big difference",
    "start": "2102660",
    "end": "2108720"
  },
  {
    "text": "between the two is that whatever generated in the origin requests event is is cashable because it will go",
    "start": "2108720",
    "end": "2116700"
  },
  {
    "text": "through the claw front cache before it gets to the viewer but the viewer whatever you generate in the viewer request event is not it goes directly",
    "start": "2116700",
    "end": "2123540"
  },
  {
    "text": "back to the viewer and that's how it would look",
    "start": "2123540",
    "end": "2128840"
  },
  {
    "text": "actually if I extend this picture a little bit this really origin in this case because all of the",
    "start": "2128840",
    "end": "2135280"
  },
  {
    "text": "responses are being generated at the edge cool just just read reading what we",
    "start": "2135280",
    "end": "2144290"
  },
  {
    "text": "talked about the it can be done in both places what you generate is a complete",
    "start": "2144290",
    "end": "2150800"
  },
  {
    "text": "HTTP response including the status and",
    "start": "2150800",
    "end": "2155900"
  },
  {
    "text": "all of those and we will see examples how to do that and then you in the",
    "start": "2155900",
    "end": "2161030"
  },
  {
    "text": "request up to this point we've been calling back or returning the CloudFront",
    "start": "2161030",
    "end": "2168020"
  },
  {
    "text": "the modified request so if you guys remember in the origin request in the viewer request we always had callbacks",
    "start": "2168020",
    "end": "2174560"
  },
  {
    "text": "no comma requests that one changes here if you are generating a response at the",
    "start": "2174560",
    "end": "2181250"
  },
  {
    "text": "edge then you generate that response which is full HTTP response and you return that generated response and",
    "start": "2181250",
    "end": "2187400"
  },
  {
    "text": "that's the signal for CloudFront to know that okay this one's actually generated",
    "start": "2187400",
    "end": "2192920"
  },
  {
    "text": "response in the request event and then it knows that it doesn't have to reach",
    "start": "2192920",
    "end": "2198410"
  },
  {
    "text": "out to the origin or even look in cache and just serve this generated response",
    "start": "2198410",
    "end": "2204370"
  },
  {
    "text": "that that's that's one key difference between what we were doing up till this",
    "start": "2204370",
    "end": "2209870"
  },
  {
    "text": "point and what this allows you to do cool so when you are generating",
    "start": "2209870",
    "end": "2216520"
  },
  {
    "start": "2212000",
    "end": "2291000"
  },
  {
    "text": "responses they this - - are I mean I wouldn't say these are categories is",
    "start": "2216520",
    "end": "2222530"
  },
  {
    "text": "just how they how the how the cookie crumbles in some ways so you you may",
    "start": "2222530",
    "end": "2228590"
  },
  {
    "text": "have cases where you don't have the generator body where this mostly applies to redirects where if you get in a",
    "start": "2228590",
    "end": "2236270"
  },
  {
    "text": "request and you know you need to send this request out to a different domain or whatever your setup is and then you",
    "start": "2236270",
    "end": "2243770"
  },
  {
    "text": "just generate that 302 right away and send it off and these are three orders of cashable so you can do it in both",
    "start": "2243770",
    "end": "2249140"
  },
  {
    "text": "your request an origin request where it gets exciting is when you are actually",
    "start": "2249140",
    "end": "2255050"
  },
  {
    "text": "generating a response with body and it's possible there's many ways you can approach this",
    "start": "2255050",
    "end": "2262300"
  },
  {
    "text": "one is where you are taking a collection",
    "start": "2262300",
    "end": "2267430"
  },
  {
    "text": "of highly cashable items and you are now composing them together a bit unique",
    "start": "2267430",
    "end": "2272890"
  },
  {
    "text": "which is unique to this particular viewer or sometimes it is also possible",
    "start": "2272890",
    "end": "2277960"
  },
  {
    "text": "that you go look it up in a database and you know who that user is you get something about that user used that to",
    "start": "2277960",
    "end": "2284020"
  },
  {
    "text": "generate your response and all of these are possible from both viewer requests",
    "start": "2284020",
    "end": "2289300"
  },
  {
    "text": "and origin requests so let's take a quick look at redirects it's doable from",
    "start": "2289300",
    "end": "2298170"
  },
  {
    "start": "2291000",
    "end": "2305000"
  },
  {
    "text": "both these events like we talked about there's no origin in this case I forgot",
    "start": "2298170",
    "end": "2303400"
  },
  {
    "text": "to delete it from this picture and this gets sent out so this is an example of",
    "start": "2303400",
    "end": "2309610"
  },
  {
    "start": "2305000",
    "end": "2337000"
  },
  {
    "text": "how a fully generated response looks like hit you set the status code you set",
    "start": "2309610",
    "end": "2316060"
  },
  {
    "text": "the description you said whatever headers you want to set in in redirect there's really no body so you know you",
    "start": "2316060",
    "end": "2324940"
  },
  {
    "text": "don't set a body and then you would return this response back to CloudFront",
    "start": "2324940",
    "end": "2330580"
  },
  {
    "text": "and that's the signal for CloudFront to know that it's a generated response which it takes and sends out let's look",
    "start": "2330580",
    "end": "2339340"
  },
  {
    "text": "at a little bit more involved use case where you want to aggregate some content",
    "start": "2339340",
    "end": "2345160"
  },
  {
    "text": "the particular example that I have picked is something we have a some sample code for as a blueprint for a",
    "start": "2345160",
    "end": "2352060"
  },
  {
    "text": "function what we are doing in this example is the user let's say this is",
    "start": "2352060",
    "end": "2357880"
  },
  {
    "text": "the landing page for your weather app where you have a list of cities that you are interested in all it displaces a",
    "start": "2357880",
    "end": "2363550"
  },
  {
    "text": "summary of the weather for that day and the list of cities for you may be different from the list of cities for me",
    "start": "2363550",
    "end": "2369670"
  },
  {
    "text": "and it varies right so the client would make a request with the list of cities",
    "start": "2369670",
    "end": "2375190"
  },
  {
    "text": "in the URL and each city's weather is highly cashable at least for the next 15",
    "start": "2375190",
    "end": "2380800"
  },
  {
    "text": "minutes it's probably not going to change but the particular combination may still be unique so you could",
    "start": "2380800",
    "end": "2387430"
  },
  {
    "text": "potentially pull these highly cashable items from the cloud front cache",
    "start": "2387430",
    "end": "2393069"
  },
  {
    "text": "from inside your function compose a response and send it back out to this",
    "start": "2393069",
    "end": "2398319"
  },
  {
    "text": "particular viewer and that's that's the example you're gonna look at there's two parts to it one is how you fetch the",
    "start": "2398319",
    "end": "2405579"
  },
  {
    "start": "2402000",
    "end": "2469000"
  },
  {
    "text": "content it's not not a whole lot that's interesting here all that if you see in",
    "start": "2405579",
    "end": "2412029"
  },
  {
    "text": "the middle there's a couple of splits that's to split the URI to get the list of cities that you care about and the",
    "start": "2412029",
    "end": "2418449"
  },
  {
    "text": "promise is a node.js framework for you to make some asynchronous calls in",
    "start": "2418449",
    "end": "2423819"
  },
  {
    "text": "parallel and this code now sends off a",
    "start": "2423819",
    "end": "2429519"
  },
  {
    "text": "bunch of queries essentially to CloudFront objects to fetch some content",
    "start": "2429519",
    "end": "2434859"
  },
  {
    "text": "and here's where we put that stuff together so for all the ones that we got a successful response we would just",
    "start": "2434859",
    "end": "2442150"
  },
  {
    "text": "create a body in my case I'm just collecting them all SA it's a JSON which I assume the client",
    "start": "2442150",
    "end": "2449679"
  },
  {
    "text": "knows how to interpret there's nothing stopping us from generating a full-blown HTML in here which I'll show in a later",
    "start": "2449679",
    "end": "2457900"
  },
  {
    "text": "example and then once you generate this response you would return that back like",
    "start": "2457900",
    "end": "2463359"
  },
  {
    "text": "we've been talking about and that gets served oh cool so coming back to our the",
    "start": "2463359",
    "end": "2473739"
  },
  {
    "start": "2469000",
    "end": "2534000"
  },
  {
    "text": "example that we've been using now we can see how somebody's dynamic content have",
    "start": "2473739",
    "end": "2481239"
  },
  {
    "text": "been or it's possible that some of these dynamic content can be generated at the",
    "start": "2481239",
    "end": "2486459"
  },
  {
    "text": "edge we've seen examples of how you can probably use a combination of highly",
    "start": "2486459",
    "end": "2492130"
  },
  {
    "text": "cashable items to generate something that's unique to that user now let's get",
    "start": "2492130",
    "end": "2497439"
  },
  {
    "text": "into how can we take advantage of knowing who that user is or knowing",
    "start": "2497439",
    "end": "2503439"
  },
  {
    "text": "something about that user and how that could help essentially this is",
    "start": "2503439",
    "end": "2508719"
  },
  {
    "text": "reiterating the message that we moved compute closer to the user and this has",
    "start": "2508719",
    "end": "2515469"
  },
  {
    "text": "helped us with stateless compute up to this point all the examples up to this",
    "start": "2515469",
    "end": "2520630"
  },
  {
    "text": "point or sort of stateless in the sense that you route you look at a request it tells you something interesting in",
    "start": "2520630",
    "end": "2526779"
  },
  {
    "text": "and you use that information to do some customization you have not really paid",
    "start": "2526779",
    "end": "2532119"
  },
  {
    "text": "attention to who that user may be so let's jump right into it personalization",
    "start": "2532119",
    "end": "2538539"
  },
  {
    "start": "2534000",
    "end": "2563000"
  },
  {
    "text": "is what I'm calling it it involves knowing two things one who the user is",
    "start": "2538539",
    "end": "2544209"
  },
  {
    "text": "that's the authentication part and then the information that that user carries with them which is something interesting",
    "start": "2544209",
    "end": "2550419"
  },
  {
    "text": "about that user some sometimes it could be preferences browsing history buying history you combine these two to provide",
    "start": "2550419",
    "end": "2558189"
  },
  {
    "text": "a richer experience for that customer",
    "start": "2558189",
    "end": "2563969"
  },
  {
    "text": "the authentication mechanisms not so the three that I can think of one is what",
    "start": "2563969",
    "end": "2571449"
  },
  {
    "text": "CloudFront natively supports you're not taking a look at that one for lambda at the edge we're focusing on the other",
    "start": "2571449",
    "end": "2579279"
  },
  {
    "text": "next two one is authentication at the edge where you can actually do the",
    "start": "2579279",
    "end": "2584439"
  },
  {
    "text": "validation in the function typically it's done with cookies where the code",
    "start": "2584439",
    "end": "2590650"
  },
  {
    "text": "knows how to interpret the cookie and then decide if this is still a valid cookie and whether to serve the request",
    "start": "2590650",
    "end": "2596259"
  },
  {
    "text": "or not the other option is the secret always resides in some place that you trust and you can call out to these",
    "start": "2596259",
    "end": "2604359"
  },
  {
    "text": "places from the viewer request or the origin request function so as before you",
    "start": "2604359",
    "end": "2609669"
  },
  {
    "text": "serve any content you can decide whether to serve by calling out to one of your",
    "start": "2609669",
    "end": "2614979"
  },
  {
    "text": "service so the way you do that is by making a network call and this is",
    "start": "2614979",
    "end": "2620769"
  },
  {
    "text": "supported from both these events the accessing data for functions is a little",
    "start": "2620769",
    "end": "2627939"
  },
  {
    "text": "bit more interesting I'd say it's still evolving and that's probably why you're",
    "start": "2627939",
    "end": "2633249"
  },
  {
    "text": "seeing many options here and some use cases benefit from some of these options better than others",
    "start": "2633249",
    "end": "2639909"
  },
  {
    "text": "one option is obviously to bundle it with the code but it's a it's a fairly limiting one even though it's easy to",
    "start": "2639909",
    "end": "2646900"
  },
  {
    "text": "access and fast it's probably requires you to deploy every time you change it",
    "start": "2646900",
    "end": "2653079"
  },
  {
    "text": "and it's probably limited by the size of the deploy package and this is",
    "start": "2653079",
    "end": "2658299"
  },
  {
    "text": "definitely read you could can you could go a little bit further and maybe use CloudFront cash as",
    "start": "2658299",
    "end": "2664930"
  },
  {
    "text": "a way of storing some read-only data that again is you know obviously one of",
    "start": "2664930",
    "end": "2671560"
  },
  {
    "text": "the advantages is that it pushes the data closer to the functions but on the flip side it's read-only the benefit you",
    "start": "2671560",
    "end": "2680320"
  },
  {
    "text": "get I guess I'm going back and forth so on the plus side it's closer to the function and it can be refreshed",
    "start": "2680320",
    "end": "2686140"
  },
  {
    "text": "periodically on the flip side it's read-only this brings us to the database",
    "start": "2686140",
    "end": "2692560"
  },
  {
    "text": "offerings which are which is where you truly start to get the read right that a",
    "start": "2692560",
    "end": "2698410"
  },
  {
    "text": "lot of people want and want to be able to do from these functions and here we",
    "start": "2698410",
    "end": "2704770"
  },
  {
    "text": "have wide I'd say a wide variety of choices if you pick regional databases",
    "start": "2704770",
    "end": "2710430"
  },
  {
    "text": "then you get both sequel and no sequel but they tend to be regional meaning",
    "start": "2710430",
    "end": "2718210"
  },
  {
    "text": "it's further away from the function especially for global execution but the",
    "start": "2718210",
    "end": "2723880"
  },
  {
    "text": "global tables being introduced maybe that gap is starting to bridge where you",
    "start": "2723880",
    "end": "2729910"
  },
  {
    "text": "start to have replicated data that multi-master that's available closer and",
    "start": "2729910",
    "end": "2735010"
  },
  {
    "text": "closer to these functions so I'd say the options here are good in the sense that",
    "start": "2735010",
    "end": "2742570"
  },
  {
    "text": "it gives you choice to decide based on your use case what would be the right",
    "start": "2742570",
    "end": "2749160"
  },
  {
    "text": "set up for your turn need and as things evolve hopefully but this time next year",
    "start": "2749160",
    "end": "2756250"
  },
  {
    "text": "we'd be able to give a much better answer of hey you can do all of these from this function we'll watch and see",
    "start": "2756250",
    "end": "2762700"
  },
  {
    "text": "how that goes cool so let me dive a little bit deeper into just doing content generation and",
    "start": "2762700",
    "end": "2771100"
  },
  {
    "start": "2763000",
    "end": "2780000"
  },
  {
    "text": "in this case I'm gonna just access dynamodb from one of these functions and get something about the user use that to",
    "start": "2771100",
    "end": "2778120"
  },
  {
    "text": "construct a response and send it back out the code is you know there's nothing different if you use dynamo then you",
    "start": "2778120",
    "end": "2785890"
  },
  {
    "text": "already know what what I'm doing there there's nothing exciting other than that it's all happening within the",
    "start": "2785890",
    "end": "2792580"
  },
  {
    "text": "the function the one key thing that I would point out is that since these",
    "start": "2792580",
    "end": "2798220"
  },
  {
    "text": "functions can run anywhere in the world you need to be specific about the end",
    "start": "2798220",
    "end": "2803650"
  },
  {
    "text": "point that you're getting to if you do not specify the region then lambda tends to pick the local region and tries to",
    "start": "2803650",
    "end": "2811060"
  },
  {
    "text": "contact the Dynamo on that one so if you don't have dynamo replicated everywhere then you probably need to specify which",
    "start": "2811060",
    "end": "2817750"
  },
  {
    "text": "region it is in but otherwise you know you you go get the item and then based",
    "start": "2817750",
    "end": "2823900"
  },
  {
    "text": "on that you generate a response pretty straightforward and then once you've generated it you would again do the callback for response and CloudFront",
    "start": "2823900",
    "end": "2831040"
  },
  {
    "text": "then continues processing it cool I guess with this hopefully be motivated",
    "start": "2831040",
    "end": "2839950"
  },
  {
    "start": "2833000",
    "end": "2852000"
  },
  {
    "text": "you guys that lambda at the edge can help with accelerating content closer to",
    "start": "2839950",
    "end": "2848560"
  },
  {
    "text": "the user and maybe producing this content closer to the user let's take a",
    "start": "2848560",
    "end": "2853930"
  },
  {
    "start": "2852000",
    "end": "2874000"
  },
  {
    "text": "quick look at something that I put together as a way of showing how this",
    "start": "2853930",
    "end": "2858940"
  },
  {
    "text": "can be done all right give me a second while I get set up",
    "start": "2858940",
    "end": "2865710"
  },
  {
    "start": "2874000",
    "end": "2895000"
  },
  {
    "text": "so what I have here is nothing special I was gonna call it the simple sharing",
    "start": "2874810",
    "end": "2881510"
  },
  {
    "text": "service what I want what I have is a way for people to share some photos I'd",
    "start": "2881510",
    "end": "2890660"
  },
  {
    "text": "rather not answer cool so this is",
    "start": "2890660",
    "end": "2897200"
  },
  {
    "start": "2895000",
    "end": "2915000"
  },
  {
    "text": "something I took one a hike near Seattle from there this index dot HTML is rendered from an",
    "start": "2897200",
    "end": "2905329"
  },
  {
    "text": "origin request event it it is a completely server list website all I'm using is s3 CloudFront lambda at the",
    "start": "2905329",
    "end": "2913670"
  },
  {
    "text": "edge and DynamoDB let's make this a little bit more interesting let's upload",
    "start": "2913670",
    "end": "2920420"
  },
  {
    "start": "2915000",
    "end": "2945000"
  },
  {
    "text": "a few more pictures that I have see what happens I hope it all works alright",
    "start": "2920420",
    "end": "2928460"
  },
  {
    "text": "seems like the first one went through the second one went through ok cool it uploader all three then I go to fresh",
    "start": "2928460",
    "end": "2935420"
  },
  {
    "text": "the page it's going over my VPN so now these guys all showed up on my web page",
    "start": "2935420",
    "end": "2941599"
  },
  {
    "text": "they are the the recent ones if we peer into this a little bit let me see",
    "start": "2941599",
    "end": "2951730"
  },
  {
    "start": "2945000",
    "end": "3004000"
  },
  {
    "text": "so this is what my CloudFront distribution looks like it's got what we call three cache",
    "start": "2951730",
    "end": "2959359"
  },
  {
    "text": "behaviors so I have one for index dot HTML one for the uploads which is the",
    "start": "2959359",
    "end": "2964640"
  },
  {
    "text": "API that I'm using to upload content in and another one that's default but there are mostly using to serve scary content",
    "start": "2964640",
    "end": "2971270"
  },
  {
    "text": "so if we look at index dot HTML and I have it associated with a lambda",
    "start": "2971270",
    "end": "2979040"
  },
  {
    "text": "function for the origin request and that's how that page is being rendered right now let's go look at what that",
    "start": "2979040",
    "end": "2985670"
  },
  {
    "text": "function does",
    "start": "2985670",
    "end": "2988328"
  },
  {
    "text": "oh cool so what this code does is a few",
    "start": "2994309",
    "end": "3008589"
  },
  {
    "start": "3004000",
    "end": "3057000"
  },
  {
    "text": "things one is it's looking at a dynamo table called reinvent 2017 pictures and",
    "start": "3008589",
    "end": "3014739"
  },
  {
    "text": "it's just scanning it for the top six items or the most recent six items and",
    "start": "3014739",
    "end": "3020289"
  },
  {
    "text": "then uses that to populate a HTML page I",
    "start": "3020289",
    "end": "3025539"
  },
  {
    "text": "mean I don't know if the fullness of time I probably wouldn't have done it this way I would have picked up a template I would have populated that",
    "start": "3025539",
    "end": "3032049"
  },
  {
    "text": "template and sent it out because I was hacking it together I just said okay screw this let's put it all in here and",
    "start": "3032049",
    "end": "3037920"
  },
  {
    "text": "that's what this does so there's a header there's a footer and this is the place where I'm constructing the list of",
    "start": "3037920",
    "end": "3047009"
  },
  {
    "text": "references and then I send it back out once it's done with the header and set",
    "start": "3047009",
    "end": "3053890"
  },
  {
    "text": "in some header values here so this is",
    "start": "3053890",
    "end": "3061029"
  },
  {
    "start": "3057000",
    "end": "3115000"
  },
  {
    "text": "the index dot HTML what what's interesting about the upload part is that there's two things that",
    "start": "3061029",
    "end": "3067089"
  },
  {
    "text": "happen on the upload path one is that I a write a file into s3 and B create an",
    "start": "3067089",
    "end": "3073660"
  },
  {
    "text": "entry for this in dynamo dB that's what this index dot HTML is",
    "start": "3073660",
    "end": "3078849"
  },
  {
    "text": "reading it's reading the DynamoDB so for every successful s3 upload I want to",
    "start": "3078849",
    "end": "3083920"
  },
  {
    "text": "create an entry in dynamo and if you guys if i refresh this you'll probably see the entries that is created on the",
    "start": "3083920",
    "end": "3091170"
  },
  {
    "text": "upload side there's two things I do one is that I change the name that I",
    "start": "3091170",
    "end": "3097719"
  },
  {
    "text": "uploaded it but if you if you look here the the file name or maybe I should go",
    "start": "3097719",
    "end": "3103239"
  },
  {
    "text": "to the s3 page so upload there are no",
    "start": "3103239",
    "end": "3111519"
  },
  {
    "text": "objects under this path refresh it alright so if you look at it",
    "start": "3111519",
    "end": "3117640"
  },
  {
    "start": "3115000",
    "end": "3144000"
  },
  {
    "text": "I changed the names to some good and this I do in my origin request event let",
    "start": "3117640",
    "end": "3127570"
  },
  {
    "text": "me see if I can show you that function",
    "start": "3127570",
    "end": "3131460"
  },
  {
    "text": "alright so this is the origin request",
    "start": "3136140",
    "end": "3141210"
  },
  {
    "text": "and in here I generated good and then I",
    "start": "3144270",
    "end": "3149380"
  },
  {
    "text": "set that as the URI in the in this part here I said that as the URI I select",
    "start": "3149380",
    "end": "3157540"
  },
  {
    "text": "this one and then once I've said it I reset the request and they also include",
    "start": "3157540",
    "end": "3162730"
  },
  {
    "text": "the metadata that I want stored in the object for future reference and then I",
    "start": "3162730",
    "end": "3170260"
  },
  {
    "text": "now send this request out to s3 and similarly in the origin response I do",
    "start": "3170260",
    "end": "3178450"
  },
  {
    "start": "3174000",
    "end": "3188000"
  },
  {
    "text": "something very similar where I look at for every successful response that comes",
    "start": "3178450",
    "end": "3183820"
  },
  {
    "text": "through I look to see I look to see what",
    "start": "3183820",
    "end": "3191140"
  },
  {
    "start": "3188000",
    "end": "3206000"
  },
  {
    "text": "that metadata was if it was set so I used this metadata and then I add an",
    "start": "3191140",
    "end": "3196870"
  },
  {
    "text": "entry in dynamo which is the code that we saw before so I ain't initialize my dynamo and then I call this table to",
    "start": "3196870",
    "end": "3204220"
  },
  {
    "text": "update and include this entry so once I do this update then the index dot HTML will whenever it refreshes wall rescan",
    "start": "3204220",
    "end": "3213340"
  },
  {
    "start": "3206000",
    "end": "3224000"
  },
  {
    "text": "and produce an new page this is pretty",
    "start": "3213340",
    "end": "3218500"
  },
  {
    "text": "much all I had for the demo this is",
    "start": "3218500",
    "end": "3225190"
  },
  {
    "start": "3224000",
    "end": "3348000"
  },
  {
    "text": "mostly to illustrate that something as simple as this which I hacked together",
    "start": "3225190",
    "end": "3231820"
  },
  {
    "text": "in a day can be done all with land at the edge this even though this looks",
    "start": "3231820",
    "end": "3237790"
  },
  {
    "text": "like a very tight example it's got some you know serious underpinnings where you're you're able to produce more what",
    "start": "3237790",
    "end": "3245530"
  },
  {
    "text": "looks more like an API and support it all from the edge and similarly you know basically look at",
    "start": "3245530",
    "end": "3254080"
  },
  {
    "text": "databases and use that to produce content that's specific to that",
    "start": "3254080",
    "end": "3259630"
  },
  {
    "text": "particular user and this can be quickly extended to include per user and you",
    "start": "3259630",
    "end": "3265480"
  },
  {
    "text": "know private and public and all of that stuff coming back to our where we",
    "start": "3265480",
    "end": "3272110"
  },
  {
    "text": "started you know we started out by adding CloudFront which helped move",
    "start": "3272110",
    "end": "3277230"
  },
  {
    "text": "highly cacheable content to the edge and then we showed you how we've moved",
    "start": "3277230",
    "end": "3284140"
  },
  {
    "text": "compute with lambda at the edge to the two location that's closer to the viewer",
    "start": "3284140",
    "end": "3290380"
  },
  {
    "text": "and how that helps with stateless compute where you look at the request and are able to decide the list of",
    "start": "3290380",
    "end": "3296020"
  },
  {
    "text": "things that you want to do and then we have showed that how data can be moved",
    "start": "3296020",
    "end": "3302020"
  },
  {
    "text": "closer to these functions it is still an evolution it's it's ongoing and more",
    "start": "3302020",
    "end": "3307300"
  },
  {
    "text": "exciting things are to come but it's still possible today to do some",
    "start": "3307300",
    "end": "3312490"
  },
  {
    "text": "interesting things and we believe that the combination of these three things moving closer to the user to say say",
    "start": "3312490",
    "end": "3320470"
  },
  {
    "text": "it's a it's a big change in how we used to things you used to do things and",
    "start": "3320470",
    "end": "3325480"
  },
  {
    "text": "hopefully that motivates people to build on using lambda at the edge that pretty",
    "start": "3325480",
    "end": "3333130"
  },
  {
    "text": "much brings us to the end of our talk we would be happy to hang out here if you",
    "start": "3333130",
    "end": "3339880"
  },
  {
    "text": "guys have any questions feel free to come up and thank you very much for",
    "start": "3339880",
    "end": "3344980"
  },
  {
    "text": "taking the time out",
    "start": "3344980",
    "end": "3347700"
  }
]