[
  {
    "start": "0",
    "end": "0"
  },
  {
    "text": "welcome to today's webinar on hold site delivery with amazon cloud print",
    "start": "320",
    "end": "5520"
  },
  {
    "text": "first let me introduce today's presenters today's presenters will be me harvey",
    "start": "5520",
    "end": "11040"
  },
  {
    "text": "honey senior product manager of choirfront iraqi natarashvili director of",
    "start": "11040",
    "end": "17600"
  },
  {
    "text": "engineering at npr and stephen evans head of digital",
    "start": "17600",
    "end": "22960"
  },
  {
    "text": "technology at toronto star i'm going to hand this over to nihar now",
    "start": "22960",
    "end": "29039"
  },
  {
    "text": "to begin the presentation great thank you jared so as jared said",
    "start": "29039",
    "end": "36480"
  },
  {
    "text": "my name is mihar vihani i'm a senior product manager with amazon cloudfront and myself and stephen and directly",
    "start": "36480",
    "end": "44559"
  },
  {
    "text": "would like to talk to you today about whole site delivery using amazon cloudfront",
    "start": "44559",
    "end": "50399"
  },
  {
    "start": "48000",
    "end": "48000"
  },
  {
    "text": "so to in terms of the agenda for today i'll first uh i'll be presenting first",
    "start": "50399",
    "end": "57680"
  },
  {
    "text": "and talk about you know what is whole site delivery and how should we think about whole site delivery",
    "start": "57680",
    "end": "63680"
  },
  {
    "text": "why use cloudfront for whole site delivery and i'll also do a demo",
    "start": "63680",
    "end": "68960"
  },
  {
    "text": "and show you how you can easily configure a platform distribution and set up uh",
    "start": "68960",
    "end": "76720"
  },
  {
    "text": "set up a distribution to deliver your entire website using cloudfront and then",
    "start": "76720",
    "end": "83200"
  },
  {
    "text": "we'll leave a good amount of time for both of our customer presenters who are really",
    "start": "83200",
    "end": "88320"
  },
  {
    "text": "excited to have us join here today uh both stephen and iraqi to talk about their use cases and how they are using",
    "start": "88320",
    "end": "94720"
  },
  {
    "text": "cloudfront to deliver their entire website so what is whole site delivery uh before",
    "start": "94720",
    "end": "101119"
  },
  {
    "text": "we uh before we start uh sort of thinking about whole site delivery i just wanted to take a quick minute and",
    "start": "101119",
    "end": "106479"
  },
  {
    "text": "talk about what is cloudfront platform is a content delivery service",
    "start": "106479",
    "end": "112240"
  },
  {
    "text": "we have global edge locations and platform also integrates with other",
    "start": "112240",
    "end": "117360"
  },
  {
    "text": "aws services to make it really easy for you to deliver your",
    "start": "117360",
    "end": "124320"
  },
  {
    "text": "content to end users around the world with low latency and high throughput",
    "start": "124320",
    "end": "129679"
  },
  {
    "text": "and whole site delivery is is really an uh you know an example use case of cloudfront where you can deliver both",
    "start": "129679",
    "end": "135760"
  },
  {
    "text": "static and dynamic content on your website uh using a single platform",
    "start": "135760",
    "end": "140840"
  },
  {
    "start": "140000",
    "end": "140000"
  },
  {
    "text": "distribution so let's look at an example of a personalized website so this is the amazon.com uh",
    "start": "140840",
    "end": "147760"
  },
  {
    "text": "homepage a screenshot and if you look at the top left at the first circle there it says",
    "start": "147760",
    "end": "152879"
  },
  {
    "text": "jared's amazon.com so that's example of personalized content or dynamic content uh if i go to this page it will say",
    "start": "152879",
    "end": "159760"
  },
  {
    "text": "nihaarsamazon.com so each viewer or each visitor to this page gets a",
    "start": "159760",
    "end": "164959"
  },
  {
    "text": "personalized experience and then if you look at the the modern family picture in the middle",
    "start": "164959",
    "end": "170400"
  },
  {
    "text": "of the page that uh that bigger circle that's example of static content so both",
    "start": "170400",
    "end": "175519"
  },
  {
    "text": "jared and i when we go to this page we get to see the exact same exact same static image",
    "start": "175519",
    "end": "182560"
  },
  {
    "text": "so the the point really uh you know the point of this slide really is that most modern websites today",
    "start": "182560",
    "end": "189680"
  },
  {
    "text": "are a mixture of dynamic and static content and typically you'll see these websites have",
    "start": "189680",
    "end": "196400"
  },
  {
    "text": "an architecture that looks something like this so in this in this architecture diagram",
    "start": "196400",
    "end": "202560"
  },
  {
    "text": "you see the end users or the viewers are using their browsers to get to",
    "start": "202560",
    "end": "208480"
  },
  {
    "text": "two different uh to download two different types of content",
    "start": "208480",
    "end": "213840"
  },
  {
    "text": "so they use up top you see www.example.com as the first domain name",
    "start": "213840",
    "end": "219120"
  },
  {
    "text": "that points to the start.php path and that request from the browser goes directly to the dynamic origin servers",
    "start": "219120",
    "end": "225760"
  },
  {
    "text": "which in this case happen to be an elastic load balancer with ec2 instances or it could be even a custom origin",
    "start": "225760",
    "end": "231599"
  },
  {
    "text": "running outside of aws and then from the browsers these viewers make a second request",
    "start": "231599",
    "end": "237920"
  },
  {
    "text": "or the browser makes a second request to cdn.example.com uh which downloads content for the",
    "start": "237920",
    "end": "243200"
  },
  {
    "text": "start.jpg pack which are static images on this website and this request goes",
    "start": "243200",
    "end": "248239"
  },
  {
    "text": "first to a cloudfront distribution and the platform distribution can serve those images if they're already in this",
    "start": "248239",
    "end": "253680"
  },
  {
    "text": "cache or go to the amazon s3 bucket or again a custom origin",
    "start": "253680",
    "end": "258959"
  },
  {
    "text": "if the if their objects are not already in cache so",
    "start": "258959",
    "end": "264479"
  },
  {
    "text": "what's what's happening here is while this website is getting you know is getting the advantage of cloudfront as a",
    "start": "264479",
    "end": "270880"
  },
  {
    "text": "cdn for the static content for dynamic content these viewers are having to go directly to the origin servers so as a",
    "start": "270880",
    "end": "277600"
  },
  {
    "text": "result you know there are both performance as well as scalability considerations that you as the website",
    "start": "277600",
    "end": "284320"
  },
  {
    "text": "owner have to keep in mind from a performance perspective if you have a global set of viewers who are",
    "start": "284320",
    "end": "290800"
  },
  {
    "text": "downloading who are going directly to the origin servers then some of some of your viewers will be further away from",
    "start": "290800",
    "end": "296240"
  },
  {
    "text": "the origin and will need to travel a long distance to download that dynamic content and from a scalability perspective if",
    "start": "296240",
    "end": "303440"
  },
  {
    "text": "this website or this application gets really popular",
    "start": "303440",
    "end": "308479"
  },
  {
    "text": "you would also have to think hard about how you can scale your uh or have your origin server set up so that it can",
    "start": "308479",
    "end": "314000"
  },
  {
    "text": "scale uh for that demand so if you change it if you change this",
    "start": "314000",
    "end": "319759"
  },
  {
    "text": "picture slightly um what i've done here is now the end users are going",
    "start": "319759",
    "end": "326400"
  },
  {
    "text": "to the cloud for an edge location first with the www.example.com domain name to download",
    "start": "326400",
    "end": "332479"
  },
  {
    "text": "all content on this website both dynamic and static content and the and the clock",
    "start": "332479",
    "end": "338000"
  },
  {
    "text": "and their platform distribution is configured to go to that same dynamic origin servers",
    "start": "338000",
    "end": "344400"
  },
  {
    "text": "for the start.php path and the same static origin servers for the start.jpg path",
    "start": "344400",
    "end": "351280"
  },
  {
    "text": "a from an end user's perspective they are downloading everything from the cdn",
    "start": "351280",
    "end": "356319"
  },
  {
    "text": "and getting the benefits of low performance and scalability when this application does",
    "start": "356319",
    "end": "362800"
  },
  {
    "text": "become popular so when you think about an architecture",
    "start": "362800",
    "end": "368319"
  },
  {
    "start": "364000",
    "end": "364000"
  },
  {
    "text": "like that um there are some questions that come to mind and when i've talked to customers and",
    "start": "368319",
    "end": "374400"
  },
  {
    "text": "looked at websites along with customers some of these questions have turned into themes",
    "start": "374400",
    "end": "380560"
  },
  {
    "text": "and i think of uh you know some of these themes as myths so the first thing that comes up quite a",
    "start": "380560",
    "end": "386319"
  },
  {
    "text": "bit the first myth is none of my html pages are cacheable so",
    "start": "386319",
    "end": "392240"
  },
  {
    "text": "there when i when i you know sit down with the customer and look at their website architectures we often discover",
    "start": "392240",
    "end": "398319"
  },
  {
    "text": "that many pages on the website are cacheable a good example here is searches all stages",
    "start": "398319",
    "end": "403840"
  },
  {
    "text": "uh so specifically right now i'm in seattle so let's say i go to a mobile application i'm searching for",
    "start": "403840",
    "end": "410400"
  },
  {
    "text": "during lunch time i'm searching for restaurants in downtown seattle now chances are there are other folks",
    "start": "410400",
    "end": "416479"
  },
  {
    "text": "going to that same application and searching for searching you know for the same key uh",
    "start": "416479",
    "end": "423120"
  },
  {
    "text": "keywords um so unless the uh the set of restaurants of the set of",
    "start": "423120",
    "end": "428720"
  },
  {
    "text": "results changing dynamically or for every user uh that page can be cached so",
    "start": "428720",
    "end": "434319"
  },
  {
    "text": "you can get the benefit of low low performance delivery as well as scalability for your end users",
    "start": "434319",
    "end": "441120"
  },
  {
    "text": "the second myth uh that i hear about is my html pages are customized so they so",
    "start": "441120",
    "end": "447440"
  },
  {
    "text": "those cannot be cached and here cloudfront has released a couple of features uh you know over the",
    "start": "447440",
    "end": "454000"
  },
  {
    "text": "past few months specifically cookies and query string parameters that can be used",
    "start": "454000",
    "end": "459039"
  },
  {
    "text": "to customize web pages to customize web pages and",
    "start": "459039",
    "end": "464639"
  },
  {
    "text": "still get the benefits of caching at the edge location a specific example is local local",
    "start": "464639",
    "end": "470400"
  },
  {
    "text": "weather pages so again going along with the same theme i'm in downtown seattle",
    "start": "470400",
    "end": "476400"
  },
  {
    "text": "i'm checking the weather for the downtown seattle area and i put in the zip code and uh you know someone",
    "start": "476400",
    "end": "484400"
  },
  {
    "text": "else could be in one of our nearby cities for instance bellevue and",
    "start": "484400",
    "end": "490400"
  },
  {
    "text": "checking the weather there and both the users are going to the exact same web page but based on the zip code that they",
    "start": "490400",
    "end": "496639"
  },
  {
    "text": "have as part of their cookie or query string they could get a customized version of that page which is cached for",
    "start": "496639",
    "end": "502960"
  },
  {
    "text": "a few seconds or a few minutes at a time you know if you think about the specific",
    "start": "502960",
    "end": "508639"
  },
  {
    "text": "use case the local weather pages a great uh example of scalability here is when there are weather alerts and your",
    "start": "508639",
    "end": "515039"
  },
  {
    "text": "website or your application starts to get you know a lot of traffic because everyone wants to view those weather",
    "start": "515039",
    "end": "521120"
  },
  {
    "text": "alerts and that's where uh having these pages cached at the cdn edge can really help offload uh",
    "start": "521120",
    "end": "529040"
  },
  {
    "text": "you know help you handle that scale and offload that traffic from your origin and the the last thing that i hear about",
    "start": "529040",
    "end": "535600"
  },
  {
    "text": "is my per my pages are personalized and unique for each user so a cdn won't be useful there",
    "start": "535600",
    "end": "542640"
  },
  {
    "text": "and while that may be the case in some instances there are there are a lot of use cases where",
    "start": "542640",
    "end": "548959"
  },
  {
    "text": "the network and path optimization features that cloudfront has built into our network",
    "start": "548959",
    "end": "554399"
  },
  {
    "text": "can help speed up the delivery of truly dynamic pages or personalized pages like the example",
    "start": "554399",
    "end": "560000"
  },
  {
    "text": "we saw for the amazon.com homepage and we'll talk about some of these network and path optimizations later on",
    "start": "560000",
    "end": "565600"
  },
  {
    "text": "as we discuss platform features so before diving into why use cloudfront",
    "start": "565600",
    "end": "572399"
  },
  {
    "start": "567000",
    "end": "567000"
  },
  {
    "text": "for whole site delivery i wanted to highlight a few whole site delivery use cases what we see customers",
    "start": "572399",
    "end": "578399"
  },
  {
    "text": "do today with cloudfront and and you know when delivering their entire websites via cloudfront so news",
    "start": "578399",
    "end": "584880"
  },
  {
    "text": "is a popular example and we have uh stephen from toronto star newspapers who will be uh speaking with",
    "start": "584880",
    "end": "591120"
  },
  {
    "text": "you later today uh in this session about their use case as well as directly and and what they",
    "start": "591120",
    "end": "596880"
  },
  {
    "text": "did uh you know when they were delivering the entire website uh weather is an example i already",
    "start": "596880",
    "end": "602480"
  },
  {
    "text": "mentioned there are sports scores travel updates stock quotes these are",
    "start": "602480",
    "end": "607519"
  },
  {
    "text": "all examples of dynamic content where the content is being updated very frequently",
    "start": "607519",
    "end": "614160"
  },
  {
    "text": "yet you can get the benefits of low latency as well as scalability when",
    "start": "614160",
    "end": "619360"
  },
  {
    "text": "using a cdn like cloudfront to cache those results",
    "start": "619360",
    "end": "624480"
  },
  {
    "text": "advertising is another example where using cookies and query strings you can customize the ads that you serve to your",
    "start": "624480",
    "end": "631760"
  },
  {
    "text": "end users on the publisher's websites",
    "start": "631760",
    "end": "635600"
  },
  {
    "text": "so why use cloudfront for whole site delivery so",
    "start": "637120",
    "end": "643200"
  },
  {
    "start": "640000",
    "end": "640000"
  },
  {
    "text": "the key point that i'd like to make here is to not think of cloudframe as a mesh",
    "start": "643200",
    "end": "648240"
  },
  {
    "text": "product that can only help your static objects or the static portions of",
    "start": "648240",
    "end": "653279"
  },
  {
    "text": "your website if you look at this list cloudfront can help",
    "start": "653279",
    "end": "658640"
  },
  {
    "text": "make your web applications if you're delivering your entire application via cloudfront faster scale better more",
    "start": "658640",
    "end": "664959"
  },
  {
    "text": "available easier to manage and cost less and these are by no means niche benefits",
    "start": "664959",
    "end": "671360"
  },
  {
    "text": "or niche properties uh you know you can these apply to both the dynamic and the",
    "start": "671360",
    "end": "677760"
  },
  {
    "text": "static portions of your website so let's let's dive uh deeper into each",
    "start": "677760",
    "end": "683920"
  },
  {
    "text": "one of these so platform can help make your applications faster the way i think about this is in terms",
    "start": "683920",
    "end": "690000"
  },
  {
    "start": "687000",
    "end": "687000"
  },
  {
    "text": "of a simple equation long distance plus poor network leads to",
    "start": "690000",
    "end": "695680"
  },
  {
    "text": "slow load times so let me talk a little bit more about what i mean there if you have a global user base some of your users will be",
    "start": "695680",
    "end": "704240"
  },
  {
    "text": "connecting to your origin servers over a long network path that in itself results in",
    "start": "704240",
    "end": "710800"
  },
  {
    "text": "long round trip times just because the sheer distance that they are away from the origin servers",
    "start": "710800",
    "end": "716560"
  },
  {
    "text": "when you combine that with a poor performing network with high packet loss",
    "start": "716560",
    "end": "721920"
  },
  {
    "text": "that can really result in slow load times for your for your dynamic content",
    "start": "721920",
    "end": "727440"
  },
  {
    "text": "or your pages that you're serving directly from your origin servers",
    "start": "727440",
    "end": "732880"
  },
  {
    "start": "732000",
    "end": "732000"
  },
  {
    "text": "the way cloudfront helps here is by changing both of the input variables of this equation",
    "start": "732880",
    "end": "738880"
  },
  {
    "text": "cloudfront turns the long distance into a short distance and the poor network path into an",
    "start": "738880",
    "end": "744079"
  },
  {
    "text": "optimized network which leads to as a result fast load times for your for",
    "start": "744079",
    "end": "749200"
  },
  {
    "text": "your website and a better experience for your users so specifically on short distances that",
    "start": "749200",
    "end": "754959"
  },
  {
    "start": "753000",
    "end": "753000"
  },
  {
    "text": "comes from cloudfront's global network of edge locations we have 40 edge locations around the globe today",
    "start": "754959",
    "end": "761040"
  },
  {
    "text": "including seoul which we very recently added within the last few weeks and",
    "start": "761040",
    "end": "766800"
  },
  {
    "text": "this network helps offload the uh",
    "start": "766800",
    "end": "773040"
  },
  {
    "text": "you know terminate your end users connections uh at one of these edge locations",
    "start": "773040",
    "end": "778399"
  },
  {
    "text": "and help you um help your end users connect over a shorter distance or a shorter network",
    "start": "778399",
    "end": "784800"
  },
  {
    "text": "path to a cloud for an edge location and then cloudfront manages the connection",
    "start": "784800",
    "end": "789839"
  },
  {
    "text": "back to the origin servers which is the longer hall depending on where your end users are",
    "start": "789839",
    "end": "796800"
  },
  {
    "start": "796000",
    "end": "796000"
  },
  {
    "text": "and and on the optimized network paths improving the network connectivity classroom has",
    "start": "797200",
    "end": "802720"
  },
  {
    "text": "focused on both the network paths here from the end users to the cloud for an edge location as well as",
    "start": "802720",
    "end": "809440"
  },
  {
    "text": "from the edge location back to the origin surface so you see this image it's just a stripped down version of the",
    "start": "809440",
    "end": "815360"
  },
  {
    "text": "the architecture diagram you saw earlier um but specifically from the end users to cloud for edge locations",
    "start": "815360",
    "end": "822880"
  },
  {
    "text": "the low latency comes from the fact that the edge locations are close to the end users as well as cloudfront has",
    "start": "822880",
    "end": "830399"
  },
  {
    "text": "implemented several tcp windows sizing and other optimizations that allow",
    "start": "830399",
    "end": "835519"
  },
  {
    "text": "delivery of data faster between the edge location and the end users",
    "start": "835519",
    "end": "840800"
  },
  {
    "text": "that combined with the persistent connections as well as the monitored network paths uh that cloudfront uses to",
    "start": "840800",
    "end": "847199"
  },
  {
    "text": "connect back to the origin servers can result in your dynamic pages being delivered",
    "start": "847199",
    "end": "852399"
  },
  {
    "text": "faster to your end users then we are going via cloudfront then going to the",
    "start": "852399",
    "end": "858560"
  },
  {
    "text": "origin servers directly platform can also make your web",
    "start": "858560",
    "end": "864000"
  },
  {
    "text": "applications scale better and the scalability comes from three factors",
    "start": "864000",
    "end": "869120"
  },
  {
    "start": "865000",
    "end": "865000"
  },
  {
    "text": "first you can you know continue to cache your static content at the edge that's a use case that has been there since the",
    "start": "869120",
    "end": "875600"
  },
  {
    "text": "beginning of cloudfront since we launched the service in addition platform utilizes persistent",
    "start": "875600",
    "end": "882160"
  },
  {
    "text": "connections and collapses multiple requests for a particular object coming at the same time",
    "start": "882160",
    "end": "889600"
  },
  {
    "text": "back to a single or a few requests back to the origin so this really helps you offload the",
    "start": "889600",
    "end": "895199"
  },
  {
    "text": "load from your origin to the edge and let the edge location network that cloudfront has",
    "start": "895199",
    "end": "901440"
  },
  {
    "text": "handle the scale when your applications become popular",
    "start": "901440",
    "end": "907040"
  },
  {
    "text": "a specific example here you see the image at the top right of the mars",
    "start": "908800",
    "end": "914240"
  },
  {
    "text": "rover curiosity that landed on mars in in august of",
    "start": "914240",
    "end": "920160"
  },
  {
    "text": "2012. the the nasa jet propulsion laboratory jpl guys",
    "start": "920160",
    "end": "926639"
  },
  {
    "text": "they used aws to host the website experience for uh for the mars lander and use",
    "start": "926639",
    "end": "933199"
  },
  {
    "text": "cloudfront to deliver their entire website to their end users and they really you know needed a",
    "start": "933199",
    "end": "939440"
  },
  {
    "text": "solution that could help scale for them because as new images from mars arrived",
    "start": "939440",
    "end": "944800"
  },
  {
    "text": "and were stored in an f3 bucket which was the origin for cloudfront those images were they needed a scalable",
    "start": "944800",
    "end": "951199"
  },
  {
    "text": "system to deliver those images to the end users to be able to handle the traffic that that came in to view those images so",
    "start": "951199",
    "end": "958079"
  },
  {
    "text": "they decided to deliver their entire website both dynamic and static image portions of the site",
    "start": "958079",
    "end": "963920"
  },
  {
    "text": "via cloudfront platform can make your applications more",
    "start": "963920",
    "end": "970480"
  },
  {
    "text": "available so an example here is toronto star newspapers and i won't go into too much",
    "start": "970480",
    "end": "976240"
  },
  {
    "start": "971000",
    "end": "971000"
  },
  {
    "text": "detail but because stephen will talk to you about the availability benefits that they",
    "start": "976240",
    "end": "981680"
  },
  {
    "text": "that they got when they started using cloudfront but these benefits really come from the fact",
    "start": "981680",
    "end": "988160"
  },
  {
    "text": "that platform is architected for high availability platform has a location of",
    "start": "988160",
    "end": "994320"
  },
  {
    "text": "a network of locations around the globe and we're architected in a way that even",
    "start": "994320",
    "end": "1000079"
  },
  {
    "text": "if one location is either out of service or needs to be turned off for some reason",
    "start": "1000079",
    "end": "1007839"
  },
  {
    "text": "you know your end users don't see any impact because they get routed to other edge locations uh or the edge",
    "start": "1008240",
    "end": "1014240"
  },
  {
    "text": "location that's the next best location for them um automatically so a high availability and that level of",
    "start": "1014240",
    "end": "1021360"
  },
  {
    "text": "redundancy is already built into the cloudfront network in addition and",
    "start": "1021360",
    "end": "1026640"
  },
  {
    "text": "cloudfront can serve your content even when your origin is unavailable and this is a lesser known feature of",
    "start": "1026640",
    "end": "1032240"
  },
  {
    "text": "cloudfront but it's really beneficial from an availability perspective because let's",
    "start": "1032240",
    "end": "1038079"
  },
  {
    "text": "say you have an object tasked at one of the cloudfront edge locations for three hours and after the three hours have passed",
    "start": "1038079",
    "end": "1046000"
  },
  {
    "text": "cloudfront is unable to reach your origin servers because the origin is unavailable platform will continue to",
    "start": "1046000",
    "end": "1051120"
  },
  {
    "text": "serve the sale content so that the end users at least get uh to download that content uh and to keep your website",
    "start": "1051120",
    "end": "1057679"
  },
  {
    "text": "available cloudflare also has an availability sla that's available uh that's",
    "start": "1057679",
    "end": "1063600"
  },
  {
    "text": "up on our website that you can take a look at",
    "start": "1063600",
    "end": "1067840"
  },
  {
    "text": "platform can make your applications easier to manage the ease of management comes from",
    "start": "1069039",
    "end": "1075520"
  },
  {
    "start": "1072000",
    "end": "1072000"
  },
  {
    "text": "what's true across all amazon web services and that's the self-service sign up and easy configuration via the",
    "start": "1075520",
    "end": "1082720"
  },
  {
    "text": "apis or the management console but in addition to that",
    "start": "1082720",
    "end": "1088000"
  },
  {
    "text": "what customers have also told us that is that they don't need to write any custom code to use cloudfront a specific",
    "start": "1088000",
    "end": "1094400"
  },
  {
    "text": "customer there is earth networks who delivers their their desktop web and mobile",
    "start": "1094400",
    "end": "1100720"
  },
  {
    "text": "applications their weatherbug application via cloudfront and they use",
    "start": "1100720",
    "end": "1106799"
  },
  {
    "text": "a lot of platforms whole site delivery features and what they've said what they've told",
    "start": "1106799",
    "end": "1112000"
  },
  {
    "text": "us is they found it really easy to configure cloudfront to deliver these applications without needing to write",
    "start": "1112000",
    "end": "1117600"
  },
  {
    "text": "any custom code which they had to do with other cdn providers",
    "start": "1117600",
    "end": "1123240"
  },
  {
    "text": "in addition platform also has features such as multiple origin servers and",
    "start": "1123600",
    "end": "1128960"
  },
  {
    "text": "cache behaviors which we'll look into a little bit more detail when we look at the demo that make it easy for you to",
    "start": "1128960",
    "end": "1135840"
  },
  {
    "text": "put together an architecture that we saw earlier where you have a single domain name www.example.com",
    "start": "1135840",
    "end": "1142160"
  },
  {
    "text": "pointing to both your dynamic and static origin servers",
    "start": "1142160",
    "end": "1147840"
  },
  {
    "text": "by using by defining multiple rules within cloudfront to go to specific origin servers for different",
    "start": "1147840",
    "end": "1154000"
  },
  {
    "text": "types of content and finally cloudfront can help make",
    "start": "1154000",
    "end": "1159440"
  },
  {
    "text": "your applications cost less the there are a couple of points that",
    "start": "1159440",
    "end": "1165679"
  },
  {
    "start": "1161000",
    "end": "1161000"
  },
  {
    "text": "i'd like to uh zoom in on here first cloudfront charge is the same for dynamic content as it does for static",
    "start": "1165679",
    "end": "1172960"
  },
  {
    "text": "content delivery and this is a really important point because you'll find that a lot of the other",
    "start": "1172960",
    "end": "1178960"
  },
  {
    "text": "providers will put a premium in terms of price when you want to deliver dynamic content",
    "start": "1178960",
    "end": "1185679"
  },
  {
    "text": "cloudfront from a pricing perspective creates dynamic and static content the same",
    "start": "1185679",
    "end": "1191600"
  },
  {
    "text": "second earlier this year we announced preferential pricing between",
    "start": "1191600",
    "end": "1196960"
  },
  {
    "text": "uh aws origin servers and cloudfront edge locations so when cloudfront makes origin fetches",
    "start": "1196960",
    "end": "1203840"
  },
  {
    "text": "and goes to either an amazon ec2 instance or an amazon s3 bucket",
    "start": "1203840",
    "end": "1209760"
  },
  {
    "text": "ec2 and s3 will charge a rate that is lower than the regular internet data",
    "start": "1209760",
    "end": "1216400"
  },
  {
    "text": "transfer rates when the request is coming from cloudfront this rate can be as low as uh",
    "start": "1216400",
    "end": "1222400"
  },
  {
    "text": "you know up to 33 to 83 discount than the internet data transfer rates",
    "start": "1222400",
    "end": "1230080"
  },
  {
    "text": "uh glover is also less expensive than the aws data transfer rates for",
    "start": "1230080",
    "end": "1235120"
  },
  {
    "text": "delivery over 10 terabytes per month so if you look at the public rates uh listed on the aws data transfer",
    "start": "1235120",
    "end": "1241600"
  },
  {
    "text": "page and on the cloudfront page you'll notice that cloudflare is less expensive than",
    "start": "1241600",
    "end": "1247280"
  },
  {
    "text": "data transfer of ec2 and s3 to the internet uh when you're delivering over 10 terabytes each month and cloudfront",
    "start": "1247280",
    "end": "1253679"
  },
  {
    "text": "does offer reserve capacity pricing if you have large volumes of delivery each",
    "start": "1253679",
    "end": "1259280"
  },
  {
    "text": "month that you are able to make a minimum commitment for so at this point let's switch",
    "start": "1259280",
    "end": "1265600"
  },
  {
    "text": "to to do a quick demo so what i what i have here is a very",
    "start": "1265600",
    "end": "1272640"
  },
  {
    "text": "bare-bones simple application it's it's a twitter application that is that pulls the top three or top five uh",
    "start": "1272640",
    "end": "1281039"
  },
  {
    "text": "trending hashtags uh uh that are trending uh at the top on twitter right now uses the twitter api",
    "start": "1281039",
    "end": "1287520"
  },
  {
    "text": "to do that and so that's the example uh the chart you see is the example of dynamic content on this page and the static",
    "start": "1287520",
    "end": "1294559"
  },
  {
    "text": "content is simply the aws logo that you see towards the bottom of the page",
    "start": "1294559",
    "end": "1301120"
  },
  {
    "text": "so switching over to the aws management console i wanted to show you what's going on behind the scenes",
    "start": "1301120",
    "end": "1307039"
  },
  {
    "text": "so here i have a cloudfront distribution that i've created",
    "start": "1307039",
    "end": "1312640"
  },
  {
    "text": "the domain name is d3957 it's a long and not a very customer friendly name so the first thing i did",
    "start": "1312640",
    "end": "1318720"
  },
  {
    "text": "is created a cname to this distribution called summit.cloudfromdemo.com",
    "start": "1318720",
    "end": "1325120"
  },
  {
    "text": "this is the same demo that i did at an aws summit earlier this month",
    "start": "1325120",
    "end": "1330880"
  },
  {
    "text": "and what's and for this distribution what i've done is i've created uh multiple origin",
    "start": "1330880",
    "end": "1337440"
  },
  {
    "text": "servers so i have three different origin servers configured here origin dot origin 2 dot",
    "start": "1337440",
    "end": "1343200"
  },
  {
    "text": "and an s3 bucket and let's see how cloudframe is pointing to these different origin servers so if you look",
    "start": "1343200",
    "end": "1348320"
  },
  {
    "text": "at the cache behaviors you'll see that star.html and star.jpg cloudfront is being instructed to go to",
    "start": "1348320",
    "end": "1355200"
  },
  {
    "text": "origin 2 dot to fetch these files and cloudfront will go to the s3 folder",
    "start": "1355200",
    "end": "1361120"
  },
  {
    "text": "or as three bucket to to fetch the star.png or the images",
    "start": "1361120",
    "end": "1366640"
  },
  {
    "text": "and then for everything else platform is instructed to go to origin dot and that",
    "start": "1366640",
    "end": "1371679"
  },
  {
    "text": "everything else in this case is the the live twitter feed data that you see",
    "start": "1371679",
    "end": "1377039"
  },
  {
    "text": "um which is uh you know a bean stock application running on an ec2 instance",
    "start": "1377039",
    "end": "1384000"
  },
  {
    "text": "and that is responding with json files with the top trending hashtags every second",
    "start": "1384000",
    "end": "1389360"
  },
  {
    "text": "and to quickly uh you know you know what's going on behind the scenes and why this is so interesting is",
    "start": "1389360",
    "end": "1396159"
  },
  {
    "text": "some of the things that we talked about in terms of the network and path optimizations",
    "start": "1396159",
    "end": "1403120"
  },
  {
    "text": "that clawfront has built are really coming into play here in fetching this dynamic content every",
    "start": "1403120",
    "end": "1408799"
  },
  {
    "text": "second because the end users are not needing to you know make new tcp connections every time because uh the",
    "start": "1408799",
    "end": "1415520"
  },
  {
    "text": "cloud for next location already has persistent connections it's utilizing with the origin servers the origin dot",
    "start": "1415520",
    "end": "1422000"
  },
  {
    "text": "and the origin two dots as well as the f3 bucket in addition if this happens",
    "start": "1422000",
    "end": "1427520"
  },
  {
    "text": "if this all of a sudden becomes the most popular application on the internet uh to handle the scale since all of this",
    "start": "1427520",
    "end": "1433760"
  },
  {
    "text": "data is coming from a cloud for extrication it's the edge locations that will handle uh",
    "start": "1433760",
    "end": "1439440"
  },
  {
    "text": "you know the scale and send very few requests back to the origin server so you don't need to worry about scaling",
    "start": "1439440",
    "end": "1444480"
  },
  {
    "text": "those origin servers that you've configured here so that's uh the quick demo that i",
    "start": "1444480",
    "end": "1449760"
  },
  {
    "text": "wanted to give and at this point let's switch back to the presentation",
    "start": "1449760",
    "end": "1456000"
  },
  {
    "text": "and i'd like to uh hand over to stephen who will walk you through",
    "start": "1456480",
    "end": "1461679"
  },
  {
    "text": "how toronto star uses cloudfront for whole site delivery",
    "start": "1461679",
    "end": "1466640"
  },
  {
    "text": "well thanks new hearts uh it's great to be uh be with everybody uh this afternoon or this morning depending on what part of the content or world you're",
    "start": "1467919",
    "end": "1474480"
  },
  {
    "text": "you're in um i wanted to give you a quick uh quick overview of some of the things we've been doing",
    "start": "1474480",
    "end": "1479520"
  },
  {
    "text": "at the toronto star with cloudfront and whole site delivery so if you want to go to the next slide",
    "start": "1479520",
    "end": "1486520"
  },
  {
    "start": "1484000",
    "end": "1484000"
  },
  {
    "text": "so i want to provide everyone with a little bit of context around around what who the toronto star are and what we're doing so we are the largest",
    "start": "1486640",
    "end": "1493760"
  },
  {
    "text": "daily newspaper in canada our focus is on the metro toronto area um to give you some context there uh toronto is about",
    "start": "1493760",
    "end": "1500880"
  },
  {
    "text": "five and a half million people in the metro area and our weekly uh circulation is over two million uh",
    "start": "1500880",
    "end": "1506880"
  },
  {
    "text": "print copies of the newspaper so we have a big impact in the toronto area um in terms of our website uh according",
    "start": "1506880",
    "end": "1513760"
  },
  {
    "text": "to comscore we have about 3.3 million monthly unique visitors so a fairly large",
    "start": "1513760",
    "end": "1519520"
  },
  {
    "text": "website uh in terms of the our organization i'm part of a small in-house digital group",
    "start": "1519520",
    "end": "1525440"
  },
  {
    "text": "within the toronto star the larger print print organization there are about 30 of us",
    "start": "1525440",
    "end": "1531279"
  },
  {
    "text": "in the digital group and we have a small digital technology group of about 10 people and we're",
    "start": "1531279",
    "end": "1538000"
  },
  {
    "text": "supported by both external vendors and our corporate it folks as well",
    "start": "1538000",
    "end": "1543360"
  },
  {
    "text": "um we really try to run as a startup so we're we're quite agile and we uh our main focus is trying to",
    "start": "1543360",
    "end": "1550159"
  },
  {
    "text": "deliver value as opposed to putting process in the way of building cool websites and getting stuff done",
    "start": "1550159",
    "end": "1557039"
  },
  {
    "text": "um our tech stack is is a mixed stack we have a lot of java quite a lot of php",
    "start": "1557039",
    "end": "1562240"
  },
  {
    "text": "and a little bit of ruby and that's an evolving process and",
    "start": "1562240",
    "end": "1567760"
  },
  {
    "text": "we relaunched recently relaunched the our flagship site the star.com",
    "start": "1567760",
    "end": "1572960"
  },
  {
    "text": "on uh on aws in general and cloudfront in particular at the end of january of this year",
    "start": "1572960",
    "end": "1579600"
  },
  {
    "text": "thanks a lot please so a little bit about uh how we selected",
    "start": "1579600",
    "end": "1585360"
  },
  {
    "start": "1580000",
    "end": "1580000"
  },
  {
    "text": "uh aws um i was hired by the star.com or by the star in uh in january of 2012 uh",
    "start": "1585360",
    "end": "1592720"
  },
  {
    "text": "as a result of uh internal restructuring and i had a mandate to not only uh",
    "start": "1592720",
    "end": "1599120"
  },
  {
    "text": "evaluate hosting infrastructure technology content management technology but also to build out a new technology",
    "start": "1599120",
    "end": "1605520"
  },
  {
    "text": "team so when i joined it was myself and one developer and as i said we're we're about 10 folks now and that's been an",
    "start": "1605520",
    "end": "1611679"
  },
  {
    "text": "evolving process so one of my first uh jobs responsibilities was to",
    "start": "1611679",
    "end": "1618960"
  },
  {
    "text": "look at uh cloud hosting options so we did we went through an evaluation process including aws rackspace and others",
    "start": "1618960",
    "end": "1626400"
  },
  {
    "text": "looking at uh capabilities and cost and other benefits uh and then we ran a short pilot pilot",
    "start": "1626400",
    "end": "1632320"
  },
  {
    "text": "phase where we ran some smaller websites on various hosting providers but it was quite clear to us pretty",
    "start": "1632320",
    "end": "1638240"
  },
  {
    "text": "quickly that that amazon web services was the best choice in terms of uh both",
    "start": "1638240",
    "end": "1643760"
  },
  {
    "text": "uh value and capability and flexibility so we we began a migration into the",
    "start": "1643760",
    "end": "1649039"
  },
  {
    "text": "amazon cloud so that that process started in the spring of 2012. we began with a very",
    "start": "1649039",
    "end": "1655520"
  },
  {
    "text": "small uh blog site we had running on wordpress but we were able to test things like ec2",
    "start": "1655520",
    "end": "1663039"
  },
  {
    "text": "and load balancing and rds and even a cloud fund at that time but",
    "start": "1663039",
    "end": "1668080"
  },
  {
    "text": "really we were focused on static assets at that time over the over 2012 we",
    "start": "1668080",
    "end": "1673600"
  },
  {
    "text": "migrated our larger sites one at a time uh on to amazon our automotive vertical our local",
    "start": "1673600",
    "end": "1680799"
  },
  {
    "text": "directory vertical these sites have increasing amounts of traffic so we're able to test scalability and our ability",
    "start": "1680799",
    "end": "1686240"
  },
  {
    "text": "to operate within the amazon cloud this whole process really culminated when we migrated the",
    "start": "1686240",
    "end": "1691840"
  },
  {
    "text": "star.com in in january of this year and that's uh quite a different infrastructure and",
    "start": "1691840",
    "end": "1698080"
  },
  {
    "text": "architecture so there were there was a lot of interesting engineering decisions to be made there one of which was to",
    "start": "1698080",
    "end": "1703840"
  },
  {
    "text": "move forward with a whole site delivery using cloudfront approach which i'll talk to you in a lot more detail about in the coming",
    "start": "1703840",
    "end": "1710720"
  },
  {
    "text": "slides next slide please so a little bit about the uh the choice",
    "start": "1710720",
    "end": "1716960"
  },
  {
    "text": "of cloudfront as i mentioned we had already made a decision to use amazon web services so",
    "start": "1716960",
    "end": "1722840"
  },
  {
    "text": "um so we knew about cloudfront and we knew it was an option but when we were launching the star.com we really wanted",
    "start": "1722840",
    "end": "1729279"
  },
  {
    "text": "to take a harder look at at the various options so we did uh take a take a hard look at akamai as a potential uh option",
    "start": "1729279",
    "end": "1737279"
  },
  {
    "text": "um and we did we did some evaluation there but given uh the cloudfront model where",
    "start": "1737279",
    "end": "1742640"
  },
  {
    "text": "there's really no risk to to trying the service we're really paying as we go we were able to run a",
    "start": "1742640",
    "end": "1748720"
  },
  {
    "text": "pretty detailed um proof of concept within cloudfront and what we discovered through that proof of concept is that",
    "start": "1748720",
    "end": "1754799"
  },
  {
    "text": "cloudfront really met all of our our future uh our priority feature requirements um so",
    "start": "1754799",
    "end": "1761760"
  },
  {
    "text": "uh we did some uh performance evaluation as well using load testing",
    "start": "1761760",
    "end": "1767200"
  },
  {
    "text": "and uh and decide to move forward with cloud front one of the one of the things we like the",
    "start": "1767200",
    "end": "1772799"
  },
  {
    "text": "most about cloud front is ease of configuration and i'll show you that in quite a lot of detail as niharas",
    "start": "1772799",
    "end": "1778799"
  },
  {
    "text": "has shown you that you can use custom behaviors and they're very easy to configure",
    "start": "1778799",
    "end": "1784159"
  },
  {
    "text": "um as well cloudfront have demonstrated that they have an aggressive roadmap and they continue to add functionality so",
    "start": "1784159",
    "end": "1790559"
  },
  {
    "text": "we're pretty confident that some of the some of the new things that we need will be delivered uh in the future so that's",
    "start": "1790559",
    "end": "1796320"
  },
  {
    "text": "uh that gives us a vote of confidence there uh and finally uh i i mentioned this in terms of pricing flexibility but uh you",
    "start": "1796320",
    "end": "1803279"
  },
  {
    "text": "know the from a cost perspective and from a pay-as-you-go perspective cloud fund has clearly got advantages over",
    "start": "1803279",
    "end": "1808720"
  },
  {
    "text": "some of its competitors next slide please so i wanted to give you a little bit",
    "start": "1808720",
    "end": "1814559"
  },
  {
    "start": "1811000",
    "end": "1811000"
  },
  {
    "text": "about the overall architecture of the star.com uh so you can see that cloudfront is in front of of this entire",
    "start": "1814559",
    "end": "1821600"
  },
  {
    "text": "architecture and that is for both static and dynamic content but the origin",
    "start": "1821600",
    "end": "1828080"
  },
  {
    "text": "server and the origin infrastructure is a pretty important piece of this so this is our uh our star.com content management system",
    "start": "1828080",
    "end": "1835679"
  },
  {
    "text": "it's a platform called adobe cq5 and it's really a multi-tier architecture",
    "start": "1835679",
    "end": "1840720"
  },
  {
    "text": "but without a relational database behind it so that's a bit unique in terms of the tiers i'll start from",
    "start": "1840720",
    "end": "1846880"
  },
  {
    "text": "the bottom of your screen we have the the author tier and this is really where",
    "start": "1846880",
    "end": "1852240"
  },
  {
    "text": "our editorial team does their work in terms of managing both the the content of the star.com as well as the content",
    "start": "1852240",
    "end": "1859120"
  },
  {
    "text": "workflow and layout of the star.com in terms of sections and other parts of the hierarchy",
    "start": "1859120",
    "end": "1865200"
  },
  {
    "text": "we have a a redundant infrastructure there so we have a standby author server in a",
    "start": "1865200",
    "end": "1870640"
  },
  {
    "text": "different availability zone and then those off those two author servers will",
    "start": "1870640",
    "end": "1876240"
  },
  {
    "text": "publish content out to six publisher servers that span three different availability zones in a vpc the",
    "start": "1876240",
    "end": "1881519"
  },
  {
    "text": "published servers are really responsible for serving requests uh assembling content",
    "start": "1881519",
    "end": "1886640"
  },
  {
    "text": "um and uh and synchronizing between what the end user sees and what the editors",
    "start": "1886640",
    "end": "1892799"
  },
  {
    "text": "are working on then we have the dispatcher tier which is really a reverse proxy caching tier",
    "start": "1892799",
    "end": "1898799"
  },
  {
    "text": "much like like something like varnish or aj proxy that is",
    "start": "1898799",
    "end": "1904000"
  },
  {
    "text": "sort of customized to the adobe cq5 environment to to manage caching rules on the origin",
    "start": "1904000",
    "end": "1910159"
  },
  {
    "text": "side and all of that is behind an elastic load balancer so we have both um both great edge caching with cloudfront",
    "start": "1910159",
    "end": "1916720"
  },
  {
    "text": "as well as a highly redundant fault-tolerant origin server using adobe cq5",
    "start": "1916720",
    "end": "1923039"
  },
  {
    "text": "next slide please so uh uh this slide is really uh to take",
    "start": "1923039",
    "end": "1930799"
  },
  {
    "text": "you through some of the some of our approaches are some of the things we discovered in terms of best practices",
    "start": "1930799",
    "end": "1935840"
  },
  {
    "text": "for whole site delivery using cloudfront so the first a really important bullet point is",
    "start": "1935840",
    "end": "1941519"
  },
  {
    "text": "is cache everything possible and there's a few things you can do uh to avoid invalidating that edge cache",
    "start": "1941519",
    "end": "1948480"
  },
  {
    "text": "as much as possible now cloudfront will serve dynamic content so it's it's not verboten to create dynamic",
    "start": "1948480",
    "end": "1956000"
  },
  {
    "text": "content and have dynamic content served by the server but what our approach is really to try to make sure things are",
    "start": "1956000",
    "end": "1961039"
  },
  {
    "text": "cachable and take take take the load off of that dynamic capability and push it down to the",
    "start": "1961039",
    "end": "1966080"
  },
  {
    "text": "client side so the first rule to enable that is is to try to avoid writing any",
    "start": "1966080",
    "end": "1971120"
  },
  {
    "text": "server-side cookies this allows us to actually make sure all",
    "start": "1971120",
    "end": "1976399"
  },
  {
    "text": "of the core pages are cached and then on the client side you can do new things to",
    "start": "1976399",
    "end": "1981919"
  },
  {
    "text": "uh read and write cookies and i'll give you uh a more detailed example of that in",
    "start": "1981919",
    "end": "1987440"
  },
  {
    "text": "the next slide or one of the next slides um the other thing is we try to avoid passing query strings where they're not absolutely necessary um",
    "start": "1987440",
    "end": "1994559"
  },
  {
    "text": "in the case of things like search they are necessary and they can be cached but we try to avoid that when we can",
    "start": "1994559",
    "end": "2000240"
  },
  {
    "text": "um i mentioned this but cloudfront gives you a very fine-grained control over",
    "start": "2000240",
    "end": "2005519"
  },
  {
    "text": "your caching rules so we we have a set of 19 different behaviors that dictate which parts of the star.com",
    "start": "2005519",
    "end": "2012640"
  },
  {
    "text": "site are cached using which rules and what time to live and i'll show you that in some detail in the coming slides",
    "start": "2012640",
    "end": "2020240"
  },
  {
    "text": "we used distributed load testing to validate uh performance against the multiple edge locations there are some",
    "start": "2020240",
    "end": "2026480"
  },
  {
    "text": "complexities in doing this based on the way dns works with cloudfront and if you are",
    "start": "2026480",
    "end": "2031519"
  },
  {
    "text": "looking to do load testing against cloudfront i encourage you to speak directly to the folks at amazon about the best practices for doing that",
    "start": "2031519",
    "end": "2037600"
  },
  {
    "text": "because it's it's not you can't assume that things work the way you would expect them to work when you're not using a cdn",
    "start": "2037600",
    "end": "2045039"
  },
  {
    "text": "as i mentioned we we use a single origin as opposed to um nihar's example where",
    "start": "2045039",
    "end": "2050240"
  },
  {
    "text": "you can have separate origins for things like static and dynamic content and you can even assemble different many origins",
    "start": "2050240",
    "end": "2055599"
  },
  {
    "text": "into one cloudfront edge location or cloudfront distribution we have a single origin that serves both",
    "start": "2055599",
    "end": "2061440"
  },
  {
    "text": "dynamic and status static content but it's uh it's scaled out and uh and fault",
    "start": "2061440",
    "end": "2066878"
  },
  {
    "text": "tolerant we're also planning a disaster recovery architecture that will",
    "start": "2066879",
    "end": "2072079"
  },
  {
    "text": "leverage cloudfront which will then take us take our our origin into a different amazon region in",
    "start": "2072079",
    "end": "2078079"
  },
  {
    "text": "case of uh dr needs okay next slide please",
    "start": "2078079",
    "end": "2084079"
  },
  {
    "start": "2083000",
    "end": "2083000"
  },
  {
    "text": "so now we're into a bit of javascript javascript code i'll assume that you know people are",
    "start": "2084079",
    "end": "2089200"
  },
  {
    "text": "vaguely at least vaguely familiar with javascript but this what we're really trying to demonstrate here is how we are",
    "start": "2089200",
    "end": "2094800"
  },
  {
    "text": "pushing um the processing of cookies from the server side to the client side so",
    "start": "2094800",
    "end": "2100480"
  },
  {
    "text": "this is a these are a couple of jquery functions and the first one is basically uh",
    "start": "2100480",
    "end": "2107520"
  },
  {
    "text": "setting a cookie that's around font size so when a user goes to an article on the store.com there's a button they can",
    "start": "2107520",
    "end": "2113520"
  },
  {
    "text": "press to increase or decrease the size of the fonts on that page so when they click either of those",
    "start": "2113520",
    "end": "2118880"
  },
  {
    "text": "buttons it fires an event that's caught by this first jquery function that will",
    "start": "2118880",
    "end": "2124720"
  },
  {
    "text": "dynamically change the css as well as in this the last line of this function we'll write a cookie",
    "start": "2124720",
    "end": "2131359"
  },
  {
    "text": "with that font size on from the client side into the browser thus avoiding us having to do any",
    "start": "2131359",
    "end": "2137599"
  },
  {
    "text": "dynamic resizing on the server side through reading that cookie and then the second function just shows",
    "start": "2137599",
    "end": "2142839"
  },
  {
    "text": "uh how that cookie gets read on load and renders the correct font size for that",
    "start": "2142839",
    "end": "2149440"
  },
  {
    "text": "user based on that cookie that was written on the client side so that we have many other examples of places where",
    "start": "2149440",
    "end": "2154560"
  },
  {
    "text": "we're using client-side cookies in order to maximize our ability to cache those",
    "start": "2154560",
    "end": "2159839"
  },
  {
    "text": "pages in cloudfront next slide please",
    "start": "2159839",
    "end": "2165440"
  },
  {
    "start": "2165000",
    "end": "2165000"
  },
  {
    "text": "okay so now we're into behaviors and really behaviors are a set of rules that dictate what content on your site gets",
    "start": "2166000",
    "end": "2171599"
  },
  {
    "text": "cached using what rules so as i mentioned we have 19 different behaviors and this is all of them as we define them",
    "start": "2171599",
    "end": "2178880"
  },
  {
    "text": "the definition of behaviors is really a conversation you need to have with your business stakeholders and i'll talk a",
    "start": "2178880",
    "end": "2184720"
  },
  {
    "text": "bit a bit more about that later uh a thing to keep in mind with the behaviors is they're processed in order",
    "start": "2184720",
    "end": "2190240"
  },
  {
    "text": "so really what what happens is a given url gets parsed it gets matched against the first",
    "start": "2190240",
    "end": "2195440"
  },
  {
    "text": "attempted to match against the first rule it doesn't match the first rule it was the second rule and so on so it's",
    "start": "2195440",
    "end": "2200800"
  },
  {
    "text": "really uh regular expressions in this order and then if you get through all of these different uh patterns and you",
    "start": "2200800",
    "end": "2206160"
  },
  {
    "text": "don't match them you hit your default behavior which in this case is the default behavior is number 19. so we go",
    "start": "2206160",
    "end": "2211280"
  },
  {
    "text": "to the next slide you'll see what that default behavior looks like so we have the map the matching pattern",
    "start": "2211280",
    "end": "2218320"
  },
  {
    "text": "we have the origin which we can set to uh to either a uh",
    "start": "2218320",
    "end": "2223599"
  },
  {
    "text": "an amazon load balancer an s3 bucket or a custom origin that could be anywhere we define what protocols we want to",
    "start": "2223599",
    "end": "2229280"
  },
  {
    "text": "support we define how we're going to handle",
    "start": "2229280",
    "end": "2234400"
  },
  {
    "text": "object caching either using the origins cache headers or a custom cache header in this case it's custom our time to",
    "start": "2234400",
    "end": "2240560"
  },
  {
    "text": "live which uh our default time to live is five minutes uh whether to forward cookies so if you",
    "start": "2240560",
    "end": "2246240"
  },
  {
    "text": "do not forward cookies then you're going to have uh fewer uh cookie scenarios to cash so this this uh this makes it",
    "start": "2246240",
    "end": "2253200"
  },
  {
    "text": "easier to cash these things and this is why we're writing cookies client side um you you can define whether to forward",
    "start": "2253200",
    "end": "2259520"
  },
  {
    "text": "query strings so again you can forward query strings but each of those query strings will be cached separately so you",
    "start": "2259520",
    "end": "2265359"
  },
  {
    "text": "more quickly invalidate your cache but in many cases this is a requirement and i'll show you an example of this later",
    "start": "2265359",
    "end": "2271119"
  },
  {
    "text": "on etc okay so we'll move to the next behavior",
    "start": "2271119",
    "end": "2276160"
  },
  {
    "text": "uh so this is our behavior this is the behavior rule we use for all of our images we set up different uh different",
    "start": "2276160",
    "end": "2282720"
  },
  {
    "text": "behaviors for each image type jpeg gif and ping but essentially we're using similar rules for these different types",
    "start": "2282720",
    "end": "2288880"
  },
  {
    "text": "uh the same origin as i mentioned uh the the key differential notice here is we have a longer time to live it's a 15",
    "start": "2288880",
    "end": "2294800"
  },
  {
    "text": "minute time to live because our images are not updated as frequently we could even potentially for certain classes of images uh define a",
    "start": "2294800",
    "end": "2301680"
  },
  {
    "text": "much longer time to live and that's going to dramatically improve the cachability of those images",
    "start": "2301680",
    "end": "2308480"
  },
  {
    "text": "next slide please okay so this is an example of uh of of",
    "start": "2308720",
    "end": "2314160"
  },
  {
    "text": "matching a path based on the date and so what this allows us to do is to customize the time to live that the time",
    "start": "2314160",
    "end": "2321280"
  },
  {
    "text": "that each that a page is cached for our archives based on um basically the date in the in the url so in this case we're",
    "start": "2321280",
    "end": "2328880"
  },
  {
    "text": "caching uh any content from 2010 for 15 minutes we could potentially",
    "start": "2328880",
    "end": "2334960"
  },
  {
    "text": "we haven't done this yet but we could potentially say if if content is from 2008 or 2007 cache it for two hours",
    "start": "2334960",
    "end": "2341119"
  },
  {
    "text": "because it's very unlikely to have been updated uh over a long period of time that would",
    "start": "2341119",
    "end": "2346800"
  },
  {
    "text": "again improve uh the performance of our site as well as the reduce the load on the origin servers",
    "start": "2346800",
    "end": "2354720"
  },
  {
    "text": "okay next slide so this uh this is the final example and",
    "start": "2354720",
    "end": "2359839"
  },
  {
    "text": "what we're what i'm showing you here is an example of where we are forwarding the query string so this is our search",
    "start": "2359839",
    "end": "2364960"
  },
  {
    "text": "page as neharm mentioned you can you can cache uh search results pages and it works",
    "start": "2364960",
    "end": "2371599"
  },
  {
    "text": "perfectly well you're forwarding the query string and the query string is really a key into the caching of that",
    "start": "2371599",
    "end": "2376880"
  },
  {
    "text": "page so in this case our time to live is shorter it's only two minutes long because we want our search results to be",
    "start": "2376880",
    "end": "2382720"
  },
  {
    "text": "refreshed fairly frequently but it does allow us to cache what is seemingly",
    "start": "2382720",
    "end": "2387839"
  },
  {
    "text": "dynamic uh what with it what is dynamic content and what in the past may have been considered uncacheable",
    "start": "2387839",
    "end": "2393680"
  },
  {
    "text": "content so that's i think that's the run-through of all the behaviors we go to the next",
    "start": "2393680",
    "end": "2398720"
  },
  {
    "start": "2398000",
    "end": "2398000"
  },
  {
    "text": "slide i'll talk a little bit about uh the success we that uh the cloudfront has helped us deliver since we",
    "start": "2398720",
    "end": "2404800"
  },
  {
    "text": "relaunched the star.com so um the the graphic here is showing you our",
    "start": "2404800",
    "end": "2410480"
  },
  {
    "text": "uh our performance from the edge using pingdom so this is a",
    "start": "2410480",
    "end": "2416079"
  },
  {
    "text": "an end user experience response time so you can see before uh we relaunched using cloudfront in aws our response",
    "start": "2416079",
    "end": "2422960"
  },
  {
    "text": "time was was uh was in the 600 millisecond range and",
    "start": "2422960",
    "end": "2428160"
  },
  {
    "text": "and uh we basically have that after we relaunched on using cloudfront using aws and using",
    "start": "2428160",
    "end": "2434560"
  },
  {
    "text": "adobe cq5 so that's the performance side of things in terms of the uh reliability uh",
    "start": "2434560",
    "end": "2442160"
  },
  {
    "text": "and fault tolerance uh we uh we had a little bit of a wobble on the day of launch so that took us down",
    "start": "2442160",
    "end": "2449280"
  },
  {
    "text": "to 99.99 percent of time since we relaunched if you take that that day and a half that",
    "start": "2449280",
    "end": "2455440"
  },
  {
    "text": "first day and a half out of our uh our metrics we've been we've had a hundred percent of time since we",
    "start": "2455440",
    "end": "2460560"
  },
  {
    "text": "launched so that's uh that's uh a combination of factors but cloudfront plays a large role in",
    "start": "2460560",
    "end": "2465680"
  },
  {
    "text": "that performance and in terms of business impact we've lowered our hosting costs our",
    "start": "2465680",
    "end": "2471359"
  },
  {
    "text": "lowered our hosting costs we've got an improved customer experience clearly from a more performant more available site and",
    "start": "2471359",
    "end": "2477680"
  },
  {
    "text": "there are clear seo benefits uh in terms of google and bing uh through a higher faster response time",
    "start": "2477680",
    "end": "2486560"
  },
  {
    "start": "2486000",
    "end": "2486000"
  },
  {
    "text": "so uh so this is my last my last content slide i just want to leave you with some lessons learned some things to think",
    "start": "2486560",
    "end": "2492560"
  },
  {
    "text": "about as you're looking at deploying your own cloud front whole site delivery scenario",
    "start": "2492560",
    "end": "2498079"
  },
  {
    "text": "there's some constraints you need to be aware of in terms of using a cdn and using cloud front specifically so for",
    "start": "2498079",
    "end": "2504560"
  },
  {
    "text": "instance if you if you need a custom ssl domain today that",
    "start": "2504560",
    "end": "2510319"
  },
  {
    "text": "that isn't available through cloudfront um i expect it will be available at some point in the future uh that is a",
    "start": "2510319",
    "end": "2516000"
  },
  {
    "text": "constraint um if you do if you have scenarios where you need to post forms you need to think about working around that currently",
    "start": "2516000",
    "end": "2523280"
  },
  {
    "text": "cloudfront supports get requests but not post put delete requests so um there is there are work array",
    "start": "2523280",
    "end": "2530480"
  },
  {
    "text": "rounds for that but you want to be thinking about that and as i mentioned think hard and fast about",
    "start": "2530480",
    "end": "2536720"
  },
  {
    "text": "writing servers writing and reading server-side cookies",
    "start": "2536720",
    "end": "2541200"
  },
  {
    "text": "another thing to think about is as i mentioned we we put a lot of time and effort into making sure our origin",
    "start": "2543599",
    "end": "2549359"
  },
  {
    "text": "is scalable and has its own caching tiers so so cloudfront is great and is a great added",
    "start": "2549359",
    "end": "2556240"
  },
  {
    "text": "cache and improves performance but it doesn't remove the need for for the standard web scale",
    "start": "2556240",
    "end": "2562560"
  },
  {
    "text": "caching stuff and scalability of your origin server i'm thinking about reporting requirements",
    "start": "2562560",
    "end": "2568960"
  },
  {
    "text": "the uh the ability to get detailed reporting on cloud fund is",
    "start": "2568960",
    "end": "2574319"
  },
  {
    "text": "there but there isn't a lot in terms of beautiful user interfaces and and handy charts and graphs so you may want to",
    "start": "2574319",
    "end": "2580960"
  },
  {
    "text": "think about uh what you're going to do about that and there are some options there that are available you can talk to amazon",
    "start": "2580960",
    "end": "2586960"
  },
  {
    "text": "about that and finally you know i mentioned the 19 behaviors so",
    "start": "2586960",
    "end": "2592720"
  },
  {
    "text": "uh really this is a business conversation about uh how do your site work what are the",
    "start": "2592720",
    "end": "2598319"
  },
  {
    "text": "expectations of your product owners of your business folks what what is an acceptable uh",
    "start": "2598319",
    "end": "2605440"
  },
  {
    "text": "delay in terms of updating content all of those things need to be encapsulated in the behaviors that you build as you",
    "start": "2605440",
    "end": "2610720"
  },
  {
    "text": "deploy your uh your cloudfront solution so with that i think i'm done",
    "start": "2610720",
    "end": "2616640"
  },
  {
    "text": "and thanks for listening feel free to ping me on email or on twitter and i'll hand it over to rockley",
    "start": "2616640",
    "end": "2623040"
  },
  {
    "text": "from npr thank you very much",
    "start": "2623040",
    "end": "2626480"
  },
  {
    "text": "thank you stephen uh hello everybody my name is rockley i lead the technology team at national public radio",
    "start": "2629119",
    "end": "2635760"
  },
  {
    "text": "npr is a mission driven multimedia news organization and radio program producer with a headquarters in washington dc",
    "start": "2635760",
    "end": "2643839"
  },
  {
    "text": "and almost 900 stations all around the united states today i would like to share with you the",
    "start": "2643839",
    "end": "2649119"
  },
  {
    "text": "story of how we successfully scaled our main website npr.org to almost 10 times the usual traffic and consequently were",
    "start": "2649119",
    "end": "2656640"
  },
  {
    "text": "named the fastest news website by an independent study next slide please",
    "start": "2656640",
    "end": "2663280"
  },
  {
    "text": "so every four years the best athletes in the world get their biggest event that would be the olympics likewise we the",
    "start": "2663280",
    "end": "2670480"
  },
  {
    "text": "taxes at the news organizations around the united states get our biggest event every four years but it's called the",
    "start": "2670480",
    "end": "2676720"
  },
  {
    "text": "presidential election night this is the night of the most intense news coverage it's also when the dials",
    "start": "2676720",
    "end": "2683440"
  },
  {
    "text": "on the gauges on our traffic go in the red zones and the typical news",
    "start": "2683440",
    "end": "2688560"
  },
  {
    "text": "website can get up to 10 times the normal traffic on an election night for a news for a major news website",
    "start": "2688560",
    "end": "2695760"
  },
  {
    "text": "which gets a lot of traffic even on a normal day like npr. that means a lot of traffic",
    "start": "2695760",
    "end": "2702240"
  },
  {
    "text": "next slide please so to give you a sense of what traffic looks like and this is not the actual",
    "start": "2702240",
    "end": "2709200"
  },
  {
    "start": "2703000",
    "end": "2703000"
  },
  {
    "text": "data this is just a depiction of the shape uh traffic is pretty much normal all day",
    "start": "2709200",
    "end": "2715680"
  },
  {
    "text": "on an election day may be slightly higher due to the coverage then it rapidly starts growing around 6",
    "start": "2715680",
    "end": "2722000"
  },
  {
    "text": "pm eastern time as the first results from the closing polling stations start rolling in",
    "start": "2722000",
    "end": "2728400"
  },
  {
    "text": "then coverage intensifies traffic keeps high as the polling stations close through the country",
    "start": "2728400",
    "end": "2733680"
  },
  {
    "text": "until the winner is announced usually happens around midnight next slide please",
    "start": "2733680",
    "end": "2741440"
  },
  {
    "text": "so in any scaling effort the key is to obtain reliable data",
    "start": "2742160",
    "end": "2747200"
  },
  {
    "text": "simply put if you do not measure you do not know any kind of assumptions no matter how",
    "start": "2747200",
    "end": "2753119"
  },
  {
    "text": "common sense or truthy looking are to be assumed false until they are proven by empirical data",
    "start": "2753119",
    "end": "2760640"
  },
  {
    "text": "so from the past experience we knew that npr.org was going to get a significant traffic spike on the election night",
    "start": "2760640",
    "end": "2767599"
  },
  {
    "text": "we started preparations early about a month and a half earlier we put together a cross-functional team of developers",
    "start": "2767599",
    "end": "2774720"
  },
  {
    "text": "and system administrators they were charged with the sole task of repairing our system for the traffic spike we",
    "start": "2774720",
    "end": "2781040"
  },
  {
    "text": "expected on the election night next slide please",
    "start": "2781040",
    "end": "2786400"
  },
  {
    "text": "so in order to measure how much traffic our systems could take we needed tools to generate large amounts of traffic",
    "start": "2786640",
    "end": "2794079"
  },
  {
    "text": "we did have an outside firm on retainer that can generate a lot of traffic",
    "start": "2794079",
    "end": "2799359"
  },
  {
    "text": "professionally and the benefit is that they can really deeply analyze",
    "start": "2799359",
    "end": "2805040"
  },
  {
    "text": "the traffic and generate loads in a creative way but there are two problems with an outside firm doing load testing",
    "start": "2805040",
    "end": "2811599"
  },
  {
    "text": "for you number one such services can be quite expensive and number two setup and",
    "start": "2811599",
    "end": "2817760"
  },
  {
    "text": "reporting usually takes some time can take several days so bottom line",
    "start": "2817760",
    "end": "2824319"
  },
  {
    "text": "while third-party load testing is very useful you also need some way to learn to run a massive distributed load test",
    "start": "2824319",
    "end": "2831760"
  },
  {
    "text": "on your own frequently and on a short notice in reality we ended up using the third",
    "start": "2831760",
    "end": "2838800"
  },
  {
    "text": "part our third party firm twice for the baseline test and after all the optimizations were",
    "start": "2838800",
    "end": "2844880"
  },
  {
    "text": "done but we also built an in-house tool to build such tool",
    "start": "2844880",
    "end": "2851200"
  },
  {
    "text": "we used an open source project as the starting point it's called ec2 fleet",
    "start": "2851200",
    "end": "2857119"
  },
  {
    "text": "and then we made some modifications to customize it for our needs added some improvements the end result of our",
    "start": "2857119",
    "end": "2864400"
  },
  {
    "text": "effort distributed a load testing tool that runs on ec2s on a bunch of ec2",
    "start": "2864400",
    "end": "2871200"
  },
  {
    "text": "servers is now published on github and it's licensed under under open source mit license",
    "start": "2871200",
    "end": "2877839"
  },
  {
    "text": "next slide please so running the test we quickly found out",
    "start": "2877839",
    "end": "2883920"
  },
  {
    "text": "that when pointing traffic that was about 10 times larger than our normal traffic we had two major bottlenecks",
    "start": "2883920",
    "end": "2892319"
  },
  {
    "text": "and keep in mind that as a major news organization we get a lot of traffic even uh normally",
    "start": "2892319",
    "end": "2898000"
  },
  {
    "text": "so the bottlenecks with 10 times the trafficwear one physical bandwidth",
    "start": "2898000",
    "end": "2903680"
  },
  {
    "text": "of the pipeline that connects our servers to the internet was getting exhausted",
    "start": "2903680",
    "end": "2909440"
  },
  {
    "text": "and two our primary data center is on the east coast and performance uh of the low test run",
    "start": "2909440",
    "end": "2917119"
  },
  {
    "text": "from the west coast of the united states were significantly well relatively but significantly worse than the ones run",
    "start": "2917119",
    "end": "2924160"
  },
  {
    "text": "from the east coast so geography also played role what's interesting is that neither of",
    "start": "2924160",
    "end": "2929839"
  },
  {
    "text": "these findings were necessarily obvious without empirical data typically when",
    "start": "2929839",
    "end": "2935440"
  },
  {
    "text": "developers software engineers optimize for scalability we tune sql queries",
    "start": "2935440",
    "end": "2940800"
  },
  {
    "text": "speed code up install more servers do the obvious things and as you can",
    "start": "2940800",
    "end": "2946319"
  },
  {
    "text": "guess for the bottlenecks that we had none of these techniques would work",
    "start": "2946319",
    "end": "2951359"
  },
  {
    "text": "adding more servers will not increase the pipeline and tuning the sql queries would not fix the geography problem",
    "start": "2951359",
    "end": "2957920"
  },
  {
    "text": "next slide please so our solution to the problems we",
    "start": "2957920",
    "end": "2964480"
  },
  {
    "text": "identified was what amazon calls whole site delivery serving page html",
    "start": "2964480",
    "end": "2970400"
  },
  {
    "text": "and assets through content delivery networks aka cdns",
    "start": "2970400",
    "end": "2975839"
  },
  {
    "text": "content delivery networks are geographically distributed so they could both serve content from the location",
    "start": "2975839",
    "end": "2981760"
  },
  {
    "text": "nearest to our user fixing the geography problem as well as provide a much broader pipeline than what our single data",
    "start": "2981760",
    "end": "2989200"
  },
  {
    "text": "center can handle at most high traffic news websites too",
    "start": "2989200",
    "end": "2994480"
  },
  {
    "text": "we had been serving static assets such as audio images css and javascript through cdn for years now",
    "start": "2994480",
    "end": "3001280"
  },
  {
    "text": "but this time we wanted to serve dynamic content such as html through cdn as well",
    "start": "3001280",
    "end": "3008240"
  },
  {
    "text": "while static assets changing frequently we can cache them for longer times but",
    "start": "3008240",
    "end": "3014000"
  },
  {
    "text": "the content on election coverage pages of npr were changing very often obviously",
    "start": "3014000",
    "end": "3020319"
  },
  {
    "text": "so we couldn't use the fixed urls so how will how were we going to cache",
    "start": "3020319",
    "end": "3026800"
  },
  {
    "text": "something like that was the big question next slide please",
    "start": "3026800",
    "end": "3031760"
  },
  {
    "text": "well the thing is that we were talking about scalability here being able to handle large numbers of requests per",
    "start": "3032960",
    "end": "3039599"
  },
  {
    "text": "second when you're dealing with scalability caching things even for very short time",
    "start": "3039599",
    "end": "3044960"
  },
  {
    "text": "helps a lot if you cache the html of your pages even for 30 seconds how many requests will",
    "start": "3044960",
    "end": "3051440"
  },
  {
    "text": "cdn serve those 30 seconds that do not go back to your origin",
    "start": "3051440",
    "end": "3057040"
  },
  {
    "text": "well the answer is more higher the traffic so it becomes very",
    "start": "3057040",
    "end": "3063200"
  },
  {
    "text": "very effective to cache your dynamic content image for very short periods of time when you have a lot of traffic and",
    "start": "3063200",
    "end": "3069920"
  },
  {
    "text": "that's exactly what we wanted to achieve so we worked with our editorial team and",
    "start": "3069920",
    "end": "3075359"
  },
  {
    "text": "got them to agree that 30 second latency was acceptable even on election night even for news content",
    "start": "3075359",
    "end": "3082960"
  },
  {
    "text": "and caching for 30 seconds gave us huge scalability boost as well as geographic",
    "start": "3082960",
    "end": "3088400"
  },
  {
    "text": "redundancy and uptime next slide please",
    "start": "3088400",
    "end": "3093520"
  },
  {
    "text": "so as we put our dynamic content uh html on cdn we ran into some pitfalls that i",
    "start": "3094880",
    "end": "3100960"
  },
  {
    "text": "would like to share with you they're very similar to the ones that stephen described",
    "start": "3100960",
    "end": "3106480"
  },
  {
    "text": "so for a news website like npr.org the most effective cdn cache is logic less",
    "start": "3106480",
    "end": "3112240"
  },
  {
    "text": "allowing html of the rendered pages to be the same for all users maximizes the",
    "start": "3112240",
    "end": "3117680"
  },
  {
    "text": "catch cache effectiveness especially considering that we only cache for very short times 30 seconds to one minute",
    "start": "3117680",
    "end": "3125520"
  },
  {
    "text": "one practical drawback of this however is that your back-end code cannot be trusted to make any user-specific",
    "start": "3125520",
    "end": "3131520"
  },
  {
    "text": "customizations if you want to maximize your cache effectiveness if you do need user specific content all",
    "start": "3131520",
    "end": "3138960"
  },
  {
    "text": "that logic needs to be put on the client-side code typically in javascript",
    "start": "3138960",
    "end": "3147200"
  },
  {
    "text": "so the second problem was that our api uses https and as steven mentioned",
    "start": "3147200",
    "end": "3153440"
  },
  {
    "text": "you cannot assign a custom domain for now with uh uh with cloudfront uh to",
    "start": "3153440",
    "end": "3159280"
  },
  {
    "text": "your https uh request as well as pause put and uh you cannot make post put and",
    "start": "3159280",
    "end": "3164480"
  },
  {
    "text": "delete a request but the capacity that we were able to free from our origin",
    "start": "3164480",
    "end": "3171599"
  },
  {
    "text": "because we because cdn was serving so much content actually gave us enough capacity to scale the api so we had no",
    "start": "3171599",
    "end": "3179440"
  },
  {
    "text": "problems there as well and third cdns are highly geographically",
    "start": "3179440",
    "end": "3185599"
  },
  {
    "text": "distributed systems when using local caches such as varnish common strategies to expire stale content from cash on",
    "start": "3185599",
    "end": "3193119"
  },
  {
    "text": "demand so your you implement all kinds of rules if you update your content you",
    "start": "3193119",
    "end": "3198640"
  },
  {
    "text": "just send the request to a varnish or similar system to expire cache while cloudfront does have an api that",
    "start": "3198640",
    "end": "3206079"
  },
  {
    "text": "allows you to do that because cloudfront or any other cdn is geographically",
    "start": "3206079",
    "end": "3212079"
  },
  {
    "text": "distributed the propagation of that api request and subsequently",
    "start": "3212079",
    "end": "3217520"
  },
  {
    "text": "clearing of cache actually takes takes long time typically in our experience it can take",
    "start": "3217520",
    "end": "3223440"
  },
  {
    "text": "more than 15 minutes which is obviously unacceptable so you cannot when using a",
    "start": "3223440",
    "end": "3228800"
  },
  {
    "text": "cdn one thing to keep in mind is that you cannot rely on the same techniques",
    "start": "3228800",
    "end": "3234000"
  },
  {
    "text": "that you would use with local caches like varnish or any other reverse proxy",
    "start": "3234000",
    "end": "3240480"
  },
  {
    "text": "next slide please so typically cdns are some of the most",
    "start": "3240480",
    "end": "3246640"
  },
  {
    "text": "reliable technology systems that you would employ because they are by definition geographically redundant and",
    "start": "3246640",
    "end": "3254000"
  },
  {
    "text": "highly available that said no technology is bulletproof and if you do care about reliability you",
    "start": "3254000",
    "end": "3261040"
  },
  {
    "text": "should avoid any single point of failure even cdns on the election night we used two cdm",
    "start": "3261040",
    "end": "3267680"
  },
  {
    "text": "providers concurrently amazon cloudfront and akamai each one of them served approximately 50",
    "start": "3267680",
    "end": "3274240"
  },
  {
    "text": "of our traffic and we had them configured so that if there was any downtime whatsoever we could flip the ns",
    "start": "3274240",
    "end": "3280799"
  },
  {
    "text": "switch and point all traffic to the cdn that was up in reality neither of the cities had any",
    "start": "3280799",
    "end": "3287280"
  },
  {
    "text": "downtime on the election night but having a redundant system gave us great peace of mind which is exactly what you",
    "start": "3287280",
    "end": "3294559"
  },
  {
    "text": "want when you expect huge traffic spike during the most important news event of four years",
    "start": "3294559",
    "end": "3300960"
  },
  {
    "text": "next slide please so in summary election night was a",
    "start": "3300960",
    "end": "3306240"
  },
  {
    "text": "significant success for npr it went without a single glitch and we got a lot",
    "start": "3306240",
    "end": "3311440"
  },
  {
    "text": "of positive feedback regarding how fast and scalable npr.org felt",
    "start": "3311440",
    "end": "3316720"
  },
  {
    "text": "from the user user point of view we kept the whole site delivery system that",
    "start": "3316720",
    "end": "3323040"
  },
  {
    "text": "was built for election even after the election night and this among other optimizations that",
    "start": "3323040",
    "end": "3328640"
  },
  {
    "text": "we used played significant role in npr being named the fastest news website in",
    "start": "3328640",
    "end": "3334000"
  },
  {
    "text": "a recent independent study well if you look at the list of the",
    "start": "3334000",
    "end": "3339119"
  },
  {
    "text": "organizations on this chart these are major news organizations",
    "start": "3339119",
    "end": "3344640"
  },
  {
    "text": "none of their websites are slow so this was very prestigious and we were really stoked to be able to achieve it which",
    "start": "3344640",
    "end": "3352720"
  },
  {
    "text": "amazon cloudfront alongside that might played a huge role in allowing us to do that",
    "start": "3352720",
    "end": "3359359"
  },
  {
    "text": "so it then should be no surprise that we think whole site delivery through cdn is a great technique if and when used",
    "start": "3359839",
    "end": "3366400"
  },
  {
    "text": "appropriately thank you very much and back to amazon",
    "start": "3366400",
    "end": "3371440"
  },
  {
    "text": "guys for some q a great uh thank you very much uh both",
    "start": "3371440",
    "end": "3378720"
  },
  {
    "text": "stephen and iraqi uh for taking the time and presenting today with us",
    "start": "3378720",
    "end": "3383760"
  },
  {
    "start": "3380000",
    "end": "3380000"
  },
  {
    "text": "um just a couple of resources that i that i wanted to point out um",
    "start": "3383760",
    "end": "3389200"
  },
  {
    "text": "you know you can there's a lot of great information and documentation available on uh the cloudfront uh webpage so if",
    "start": "3389200",
    "end": "3395920"
  },
  {
    "text": "you just go to aws.amazon.com cloudfront and i also wanted to point out we are running short on time today",
    "start": "3395920",
    "end": "3402160"
  },
  {
    "text": "for uh for questions so we do have office hours coming up",
    "start": "3402160",
    "end": "3407440"
  },
  {
    "text": "in about a month on june 19th at 10 a.m pacific and you can sign up for those office",
    "start": "3407440",
    "end": "3412720"
  },
  {
    "text": "hours there's a link available on the cloudfront website the webpage so just go to aws.amazon.com",
    "start": "3412720",
    "end": "3419359"
  },
  {
    "text": "cloudfront to sign up for the office hours",
    "start": "3419359",
    "end": "3424559"
  },
  {
    "text": "yep and i'll hand it back over to jared thank you nihar and thank you stephen",
    "start": "3424559",
    "end": "3430559"
  },
  {
    "text": "and iraqi and thank you all for attending today's webinar i encourage you to continuously check",
    "start": "3430559",
    "end": "3438319"
  },
  {
    "text": "the webinar section of aws to see listings of other upcoming webinars",
    "start": "3438319",
    "end": "3443680"
  },
  {
    "text": "as well as recordings of this webinar which which which should be posted in the next two weeks",
    "start": "3443680",
    "end": "3450480"
  },
  {
    "text": "on behalf of amazon web services and our presenters nihar stephen and iraqi i",
    "start": "3450480",
    "end": "3456559"
  },
  {
    "text": "thank you for joining us for our whole site delivery with amazon cloudfront webinar",
    "start": "3456559",
    "end": "3463880"
  }
]