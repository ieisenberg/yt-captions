[
  {
    "text": "[Music]",
    "start": "410",
    "end": "6519"
  },
  {
    "text": "[Music]",
    "start": "8630",
    "end": "11999"
  },
  {
    "text": "hello",
    "start": "12639",
    "end": "13200"
  },
  {
    "text": "i am vikrant a cloud support engineer",
    "start": "13200",
    "end": "15280"
  },
  {
    "text": "here at the aws office in dallas",
    "start": "15280",
    "end": "17680"
  },
  {
    "text": "sometimes customers ask me how to",
    "start": "17680",
    "end": "19600"
  },
  {
    "text": "automate http proxy config",
    "start": "19600",
    "end": "21920"
  },
  {
    "text": "for eks worker nodes using user data so",
    "start": "21920",
    "end": "24560"
  },
  {
    "text": "let's get started",
    "start": "24560",
    "end": "26320"
  },
  {
    "text": "in order to automate http proxy config",
    "start": "26320",
    "end": "28800"
  },
  {
    "text": "for eks worker",
    "start": "28800",
    "end": "30000"
  },
  {
    "text": "nodes necessary components of an eks",
    "start": "30000",
    "end": "32719"
  },
  {
    "text": "cluster",
    "start": "32719",
    "end": "33360"
  },
  {
    "text": "need to be configured to communicate via",
    "start": "33360",
    "end": "35600"
  },
  {
    "text": "the proxy",
    "start": "35600",
    "end": "36559"
  },
  {
    "text": "using ec2 user data these components are",
    "start": "36559",
    "end": "40640"
  },
  {
    "text": "and may not be limited to the cubelet",
    "start": "40640",
    "end": "43280"
  },
  {
    "text": "systemd",
    "start": "43280",
    "end": "43920"
  },
  {
    "text": "service the cubeproxy",
    "start": "43920",
    "end": "47120"
  },
  {
    "text": "aws notepods and game update",
    "start": "47120",
    "end": "50559"
  },
  {
    "text": "first determine the cidr block of your",
    "start": "50559",
    "end": "53120"
  },
  {
    "text": "cluster",
    "start": "53120",
    "end": "54399"
  },
  {
    "text": "it is important to ensure the no proxy",
    "start": "54399",
    "end": "56800"
  },
  {
    "text": "variable",
    "start": "56800",
    "end": "57520"
  },
  {
    "text": "in the proxy environment variable config",
    "start": "57520",
    "end": "60079"
  },
  {
    "text": "map",
    "start": "60079",
    "end": "60800"
  },
  {
    "text": "used by the cube proxy aws node spots",
    "start": "60800",
    "end": "63920"
  },
  {
    "text": "include the kubernetes cluster ip",
    "start": "63920",
    "end": "66240"
  },
  {
    "text": "address space",
    "start": "66240",
    "end": "67840"
  },
  {
    "text": "to determine the cidr block of your",
    "start": "67840",
    "end": "70080"
  },
  {
    "text": "cluster you can get this from kubernetes",
    "start": "70080",
    "end": "72880"
  },
  {
    "text": "service",
    "start": "72880",
    "end": "73439"
  },
  {
    "text": "cubelet get service kubernetes",
    "start": "73439",
    "end": "76560"
  },
  {
    "text": "dash o jsonpath equal to spec dot",
    "start": "76560",
    "end": "79840"
  },
  {
    "text": "cluster ip semicolon echo",
    "start": "79840",
    "end": "81840"
  },
  {
    "text": "i will run this command from the",
    "start": "81840",
    "end": "83439"
  },
  {
    "text": "terminal",
    "start": "83439",
    "end": "85360"
  },
  {
    "text": "this will return either 10.100.0.1",
    "start": "85360",
    "end": "88720"
  },
  {
    "text": "which means that your cluster ipc idr",
    "start": "88720",
    "end": "91040"
  },
  {
    "text": "block is 10.100.0.0.16",
    "start": "91040",
    "end": "94560"
  },
  {
    "text": "or return 172.20.0.1",
    "start": "94560",
    "end": "97759"
  },
  {
    "text": "which means that your class cidr block",
    "start": "97759",
    "end": "100000"
  },
  {
    "text": "is 172.20.0.1.16",
    "start": "100000",
    "end": "104799"
  },
  {
    "text": "now let's create the yaml file with the",
    "start": "104799",
    "end": "107200"
  },
  {
    "text": "following content and create a config",
    "start": "107200",
    "end": "109119"
  },
  {
    "text": "map",
    "start": "109119",
    "end": "109520"
  },
  {
    "text": "and update the vpccidr range which we",
    "start": "109520",
    "end": "112399"
  },
  {
    "text": "got",
    "start": "112399",
    "end": "112799"
  },
  {
    "text": "from the previous command output which",
    "start": "112799",
    "end": "114960"
  },
  {
    "text": "is 10.100.0.0.16.",
    "start": "114960",
    "end": "119360"
  },
  {
    "text": "we need to apply the config map that we",
    "start": "119360",
    "end": "121920"
  },
  {
    "text": "just created",
    "start": "121920",
    "end": "123520"
  },
  {
    "text": "to do that i will run the following",
    "start": "123520",
    "end": "125119"
  },
  {
    "text": "command from the terminal",
    "start": "125119",
    "end": "127439"
  },
  {
    "text": "cube ctl apply and my yaml file",
    "start": "127439",
    "end": "131760"
  },
  {
    "text": "now we will need to configure the docker",
    "start": "131760",
    "end": "134080"
  },
  {
    "text": "daemon and cubelet in user data",
    "start": "134080",
    "end": "136560"
  },
  {
    "text": "as a cloudbooth hook this guide assumes",
    "start": "136560",
    "end": "139840"
  },
  {
    "text": "that",
    "start": "139840",
    "end": "140160"
  },
  {
    "text": "you are using unmanaged nodes in a cloud",
    "start": "140160",
    "end": "142640"
  },
  {
    "text": "formation stack using the template",
    "start": "142640",
    "end": "144800"
  },
  {
    "text": "provided by aws",
    "start": "144800",
    "end": "147440"
  },
  {
    "text": "now i will go ahead and add this lens to",
    "start": "147440",
    "end": "149920"
  },
  {
    "text": "the cloudformation stack",
    "start": "149920",
    "end": "151120"
  },
  {
    "text": "created using amazon eks node group yaml",
    "start": "151120",
    "end": "154080"
  },
  {
    "text": "file",
    "start": "154080",
    "end": "155680"
  },
  {
    "text": "when i logged into aws management",
    "start": "155680",
    "end": "157280"
  },
  {
    "text": "console navigate",
    "start": "157280",
    "end": "158800"
  },
  {
    "text": "to the cloudformation console",
    "start": "158800",
    "end": "161840"
  },
  {
    "text": "we will start by selecting the worker",
    "start": "161840",
    "end": "163599"
  },
  {
    "text": "nodes dot formation stack",
    "start": "163599",
    "end": "165599"
  },
  {
    "text": "once the stack has been selected we'll",
    "start": "165599",
    "end": "167680"
  },
  {
    "text": "click on update",
    "start": "167680",
    "end": "170239"
  },
  {
    "text": "choose edit template in designer",
    "start": "170239",
    "end": "173920"
  },
  {
    "text": "view in designer choose template",
    "start": "173920",
    "end": "177280"
  },
  {
    "text": "language yaml",
    "start": "177280",
    "end": "179599"
  },
  {
    "text": "go to node launch config aws colon colon",
    "start": "179599",
    "end": "182720"
  },
  {
    "text": "auto scaling colon current launch",
    "start": "182720",
    "end": "184159"
  },
  {
    "text": "configuration",
    "start": "184159",
    "end": "185120"
  },
  {
    "text": "resource and replace the existing user",
    "start": "185120",
    "end": "187440"
  },
  {
    "text": "data with the following",
    "start": "187440",
    "end": "188800"
  },
  {
    "text": "and be sure to replace the proxy local",
    "start": "188800",
    "end": "191840"
  },
  {
    "text": "with your proxy ip address",
    "start": "191840",
    "end": "195360"
  },
  {
    "text": "update the stack by clicking on create",
    "start": "196319",
    "end": "198159"
  },
  {
    "text": "the stack button on",
    "start": "198159",
    "end": "199440"
  },
  {
    "text": "top left of the designer next",
    "start": "199440",
    "end": "204319"
  },
  {
    "text": "next next",
    "start": "204319",
    "end": "208000"
  },
  {
    "text": "acknowledge that aws cloud formation",
    "start": "208000",
    "end": "210000"
  },
  {
    "text": "might create imdb resource",
    "start": "210000",
    "end": "212959"
  },
  {
    "text": "click on update stack button",
    "start": "212959",
    "end": "216319"
  },
  {
    "text": "once the user data has been updated and",
    "start": "217040",
    "end": "219519"
  },
  {
    "text": "the stack has completed",
    "start": "219519",
    "end": "221040"
  },
  {
    "text": "updating",
    "start": "221040",
    "end": "223599"
  },
  {
    "text": "we are now going to update the pod spec",
    "start": "224239",
    "end": "226959"
  },
  {
    "text": "for aws node",
    "start": "226959",
    "end": "229519"
  },
  {
    "text": "and kubernetes daemon set",
    "start": "229519",
    "end": "233440"
  },
  {
    "text": "thank you for watching and happy cloud",
    "start": "234560",
    "end": "236480"
  },
  {
    "text": "computing from all of us here at aws",
    "start": "236480",
    "end": "241840"
  },
  {
    "text": "[Music]",
    "start": "244680",
    "end": "247109"
  }
]