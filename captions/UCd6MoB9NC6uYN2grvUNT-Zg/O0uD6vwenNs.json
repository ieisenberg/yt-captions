[
  {
    "text": "okay thank you uh thank you everybody for being here uh welcome to this session with uh Yan stoa from from the",
    "start": "359",
    "end": "6680"
  },
  {
    "text": "the rice lab my name is Jed Sall you may have been here for the last session uh I run the open data program at Amazon web",
    "start": "6680",
    "end": "13040"
  },
  {
    "text": "services and work really closely with uh a lot of researchers and people who work with really large volumes of data uh in",
    "start": "13040",
    "end": "18760"
  },
  {
    "text": "the cloud uh Yan has been a a Visionary for really long time researching how",
    "start": "18760",
    "end": "25320"
  },
  {
    "text": "distributed systems and Cloud systems can be used to enable uh more sop fisticated and much faster uh science um",
    "start": "25320",
    "end": "34160"
  },
  {
    "text": "and and and better better made decisions and So based on his work at UC Berkeley",
    "start": "34160",
    "end": "39559"
  },
  {
    "text": "now at the rice lab and and building on the Legacy from the amp lab uh he's here to to talk about how the rice lab is",
    "start": "39559",
    "end": "46320"
  },
  {
    "text": "using the cloud to enable intelligent real-time decisions uh it's it's really spectacular work and it's actually it's",
    "start": "46320",
    "end": "52520"
  },
  {
    "text": "really an honor to have y on here to speak with us today so without further Ado please welcome Yan Stoka from Rice",
    "start": "52520",
    "end": "58359"
  },
  {
    "text": "lab thank",
    "start": "58359",
    "end": "62760"
  },
  {
    "text": "you hello everybody it's a pleasure to be here and thanks for coming to attend",
    "start": "63600",
    "end": "69479"
  },
  {
    "text": "the talk so today we I'm going to talk about this new lab we are starting at",
    "start": "69479",
    "end": "75320"
  },
  {
    "text": "berlay called rice lab uh but before let me tell you a few more things about me",
    "start": "75320",
    "end": "81240"
  },
  {
    "text": "so I am rice lab director I am a faculty at UC Berkley and I've been also",
    "start": "81240",
    "end": "86640"
  },
  {
    "text": "co-director of am laab um in the other life I am also co-founder and executive",
    "start": "86640",
    "end": "92280"
  },
  {
    "text": "chairman of the data bricks which is providing a unified analytics platform",
    "start": "92280",
    "end": "98240"
  },
  {
    "text": "on AWS around Apache spark and I'm also confounded the CTO of conviva video",
    "start": "98240",
    "end": "105880"
  },
  {
    "text": "analytics company so first let me tell you a few words about the",
    "start": "105880",
    "end": "110920"
  },
  {
    "text": "amlab the am laab was a previous Lab at berlay or",
    "start": "110920",
    "end": "117039"
  },
  {
    "text": "project and it was the duration is between 2011 and 2016 at Bera Labs",
    "start": "117039",
    "end": "123960"
  },
  {
    "text": "typically have a duration around 5 years each lab has a particular vision and a",
    "start": "123960",
    "end": "129239"
  },
  {
    "text": "particular goal in the case of the amlab the mission was to make sense of the big",
    "start": "129239",
    "end": "134560"
  },
  {
    "text": "data and um the approach was to use a holistic",
    "start": "134560",
    "end": "140440"
  },
  {
    "text": "solution um consisting of algorithms like machine learning machines that is",
    "start": "140440",
    "end": "147840"
  },
  {
    "text": "systems and people or crowdsourcing it included over eight faculties and",
    "start": "147840",
    "end": "153400"
  },
  {
    "text": "over 60 students and it has a broad government and Industry support including uh Amazon",
    "start": "153400",
    "end": "161080"
  },
  {
    "text": "AWS and we are lucky we had quite a bit of impact uh with amlab in the on",
    "start": "161080",
    "end": "169000"
  },
  {
    "text": "industry we uh pushed out we created and pushed out",
    "start": "169000",
    "end": "174560"
  },
  {
    "text": "Apachi spark how many of you use or know about Apachi Spark",
    "start": "174560",
    "end": "179959"
  },
  {
    "text": "okay thank you so today there are over 1,000 customers or thousands of",
    "start": "179959",
    "end": "185080"
  },
  {
    "text": "customers is a de facto big data processing engine today",
    "start": "185080",
    "end": "191640"
  },
  {
    "text": "and around the globe in terms of the meta members has close to 400,000",
    "start": "191640",
    "end": "197879"
  },
  {
    "text": "today besides Apache spark we we release Apache mesos hundreds of customers we",
    "start": "197879",
    "end": "204720"
  },
  {
    "text": "have with on Apache mesos and alio in memory storage engine Apache mees it's a",
    "start": "204720",
    "end": "211799"
  },
  {
    "text": "cluster management allows you to run multiple Frameworks and share the same",
    "start": "211799",
    "end": "217959"
  },
  {
    "text": "cluster um out of those projects um we've been created three",
    "start": "217959",
    "end": "225000"
  },
  {
    "text": "startups um they raised on aggregate well over $200 millions doar and also we",
    "start": "225000",
    "end": "232680"
  },
  {
    "text": "are well a university so also we are very",
    "start": "232680",
    "end": "238480"
  },
  {
    "text": "proud about our mic impact alumni from rise from am laab went to become",
    "start": "238480",
    "end": "244480"
  },
  {
    "text": "faculties at MIT Stanford kenning melon coronal University of Michigan and so",
    "start": "244480",
    "end": "249799"
  },
  {
    "text": "forth uh we also won among the Alam ni three ACM dissertation Awards which is a",
    "start": "249799",
    "end": "255879"
  },
  {
    "text": "highest distinctions for thesis across the world every",
    "start": "255879",
    "end": "261519"
  },
  {
    "text": "year okay so with with amlab uh we leverage AWS s",
    "start": "262160",
    "end": "270000"
  },
  {
    "text": "from day one we we started again in around 2011 AWS was still kind of at the",
    "start": "270000",
    "end": "275120"
  },
  {
    "text": "beginning but we went all in and actually AWS was the first Cloud to host",
    "start": "275120",
    "end": "281120"
  },
  {
    "text": "Apachi spark starting 2013 um we also um use",
    "start": "281120",
    "end": "292039"
  },
  {
    "text": "iws uh to to beat the terasort terasort record",
    "start": "292039",
    "end": "299840"
  },
  {
    "text": "in 2014 the terasort record it's a terasort benchmark it's a benchmark uh",
    "start": "299840",
    "end": "306320"
  },
  {
    "text": "to sort U 100 tabt of or of data and",
    "start": "306320",
    "end": "312000"
  },
  {
    "text": "it's for Big Data Frameworks and in 2014 again we use uh",
    "start": "312000",
    "end": "317880"
  },
  {
    "text": "AWS and the preview just to give you a sense a previous record was in",
    "start": "317880",
    "end": "323759"
  },
  {
    "text": "2013 was Hadoop and run on 2000 machines",
    "start": "323759",
    "end": "329000"
  },
  {
    "text": "at it was uh it was a Yahoo cluster and it took 72 minutes in 2014 on spark and",
    "start": "329000",
    "end": "337240"
  },
  {
    "text": "it's again there are kind of different machines but still um we used only 200",
    "start": "337240",
    "end": "343039"
  },
  {
    "text": "machines in Amazon pretty Bey machines I should say and it took only 23",
    "start": "343039",
    "end": "349639"
  },
  {
    "text": "minutes actually it was linearly scalable because when we went to un petabyte it took us only 4 hours so the",
    "start": "349639",
    "end": "356639"
  },
  {
    "text": "difference between one petabyte and 100 terabytes is of course a factor of 10 so",
    "start": "356639",
    "end": "361880"
  },
  {
    "text": "if you multip and so if you multiply the 23 minutes by 10 you get 230 minutes so",
    "start": "361880",
    "end": "367639"
  },
  {
    "text": "it's approximately 4 hours okay and we are capped actually by the network capacity of 10 GBS per",
    "start": "367639",
    "end": "375759"
  },
  {
    "text": "second so it's again a lot of work in the area of Big Data a lot of work we done on",
    "start": "375759",
    "end": "381479"
  },
  {
    "text": "AWS so now amlab is done so the next Lab we've started is rice lab now to put",
    "start": "381479",
    "end": "387599"
  },
  {
    "text": "them in context think about embl of building analytics tools and systems to perform",
    "start": "387599",
    "end": "397199"
  },
  {
    "text": "Advanced analytics on batch data in contrast rice lab is",
    "start": "397199",
    "end": "405960"
  },
  {
    "text": "about providing realtime decisions on live data and I'm going to give a",
    "start": "405960",
    "end": "411520"
  },
  {
    "text": "motivations why we are excited about this but before rise lab includes an assemble of",
    "start": "411520",
    "end": "419280"
  },
  {
    "text": "fact faculties across systems security",
    "start": "419280",
    "end": "426400"
  },
  {
    "text": "Ai and AR and system architectures and it's also funded by 11",
    "start": "426599",
    "end": "433759"
  },
  {
    "text": "funding sponsors including AWS so why we are excited about the new",
    "start": "433759",
    "end": "442400"
  },
  {
    "text": "lab if you think about you know every company today collects data and the date",
    "start": "442400",
    "end": "448319"
  },
  {
    "text": "you collect the data because you want to get some value out of the",
    "start": "448319",
    "end": "453479"
  },
  {
    "text": "data and more and more that value takes a form of a decision of an action you",
    "start": "453479",
    "end": "460280"
  },
  {
    "text": "can make based on the data whether to improve your business process whether to",
    "start": "460280",
    "end": "465759"
  },
  {
    "text": "improve your product and so forth and there are many",
    "start": "465759",
    "end": "471479"
  },
  {
    "text": "many examples and you hear more and more this phrase that data is only as a",
    "start": "471479",
    "end": "477199"
  },
  {
    "text": "valuable as a decision it enables and everything now is around decisions",
    "start": "477199",
    "end": "483800"
  },
  {
    "text": "and action you can take on the data starting with",
    "start": "483800",
    "end": "488840"
  },
  {
    "text": "iot let me just see financial application high frequency",
    "start": "488919",
    "end": "496120"
  },
  {
    "text": "trading manufacturing unmade um vehicles or you know virtual",
    "start": "496120",
    "end": "503800"
  },
  {
    "text": "assistants like Alexa or Siri so many many such applications so",
    "start": "503800",
    "end": "511280"
  },
  {
    "text": "now if you buy that that the data is only as valuable as the decision it enables the next logical question is",
    "start": "511280",
    "end": "517599"
  },
  {
    "text": "what is a good decision well that's not hard to",
    "start": "517599",
    "end": "523800"
  },
  {
    "text": "answer a good decision is a fast decision because faster decision are typically better than slower",
    "start": "523800",
    "end": "530880"
  },
  {
    "text": "decisions a good decision it's or decision on the fresh data on the most recent data rather than on just on",
    "start": "530880",
    "end": "538000"
  },
  {
    "text": "historical data on yesterday data or the last week's data and a good decision is",
    "start": "538000",
    "end": "543880"
  },
  {
    "text": "on personalized information of the users right that's what it is rather than on",
    "start": "543880",
    "end": "550600"
  },
  {
    "text": "aggregate generic data so as such what we want to support this kind of",
    "start": "550600",
    "end": "557399"
  },
  {
    "text": "decisions we want tools which support realtime decisions or live data with",
    "start": "557399",
    "end": "563160"
  },
  {
    "text": "strong security by real time we are meaning about trying to decide in milliseconds",
    "start": "563160",
    "end": "569760"
  },
  {
    "text": "live data is means that we want to decide based on the current state of the",
    "start": "569760",
    "end": "576560"
  },
  {
    "text": "environment rather than historical State and strong security we want to",
    "start": "576560",
    "end": "582440"
  },
  {
    "text": "achieve to provide privacy confidentiality and integrity and this is very important",
    "start": "582440",
    "end": "588560"
  },
  {
    "text": "because it's not only in many cases security is required but can lead to",
    "start": "588560",
    "end": "594480"
  },
  {
    "text": "better Services because it can lead to better decisions and the reason is quite simple",
    "start": "594480",
    "end": "599920"
  },
  {
    "text": "if I guarantee the privacy of your information if I guarantee that to you",
    "start": "599920",
    "end": "606720"
  },
  {
    "text": "you are going probably to be more likely to share information with me and if you share that information with me I can use",
    "start": "606720",
    "end": "613160"
  },
  {
    "text": "to make better decision so now this is how a typical",
    "start": "613160",
    "end": "620440"
  },
  {
    "text": "decision systems look like at least a a system we have in mind uh during this",
    "start": "620440",
    "end": "626040"
  },
  {
    "text": "talk so on the right hand side you have environment it's a bunch of sensors",
    "start": "626040",
    "end": "632040"
  },
  {
    "text": "activators and so forth right so it can be video games uh robots uh sell driving",
    "start": "632040",
    "end": "641480"
  },
  {
    "text": "cars or um you know virtual assistants and then what you what the",
    "start": "641480",
    "end": "649880"
  },
  {
    "text": "decision system basically gets queries from this environment or these devices",
    "start": "649880",
    "end": "656639"
  },
  {
    "text": "and then renders back decisions right and there are many examples I'm",
    "start": "656639",
    "end": "662920"
  },
  {
    "text": "going to talk a bit but you know one is to give a get an recommendation right what movie to watch uh what things to",
    "start": "662920",
    "end": "670040"
  },
  {
    "text": "buy right that's what it is um now the decision system is consist of",
    "start": "670040",
    "end": "677839"
  },
  {
    "text": "two parts one which takes the observation and the feedback the log from these devices and processes them in",
    "start": "677839",
    "end": "685720"
  },
  {
    "text": "some intermediate data so for instance this can be a machine learning model which perform",
    "start": "685720",
    "end": "691959"
  },
  {
    "text": "recommendations and then it's a second part which is a actually is a decision engine which US intermediate data to",
    "start": "691959",
    "end": "698720"
  },
  {
    "text": "render the decisions right that's what it",
    "start": "698720",
    "end": "704440"
  },
  {
    "text": "is again when we are talking about latency here we have two feedback loops",
    "start": "705399",
    "end": "711079"
  },
  {
    "text": "one is in order of seconds or maybe tens of seconds which updates a model updates",
    "start": "711079",
    "end": "717920"
  },
  {
    "text": "the intermediate data right this me this is how fresh is a",
    "start": "717920",
    "end": "723160"
  },
  {
    "text": "data on which you are going to make the decision and then is a real time Loop",
    "start": "723160",
    "end": "730519"
  },
  {
    "text": "which is making the decisions based on this intermediate data and here we are talking about t of milliseconds or even",
    "start": "730519",
    "end": "738279"
  },
  {
    "text": "milliseconds here are two examples of decision systems the first is alluded to",
    "start": "738279",
    "end": "745000"
  },
  {
    "text": "and in this classic machine learning pipeline you collect logs from user logs",
    "start": "745000",
    "end": "751480"
  },
  {
    "text": "or device logs you do you do you know you use kind of machine learning algorithms do training you build a model",
    "start": "751480",
    "end": "758920"
  },
  {
    "text": "and then you push this model to a model serving system and this model serving",
    "start": "758920",
    "end": "764519"
  },
  {
    "text": "system is going to render the decisions to the query it",
    "start": "764519",
    "end": "769600"
  },
  {
    "text": "gets another example which I'm going to talk later in this talk is reinforcement",
    "start": "769600",
    "end": "775800"
  },
  {
    "text": "learning systems and um this is a pretty hot uh area in AI these days um but uh this",
    "start": "775800",
    "end": "785279"
  },
  {
    "text": "reinforcement learning was at the basis for instance of um was a key technology used by Google's alphao which as you",
    "start": "785279",
    "end": "793160"
  },
  {
    "text": "know beat the go Champion world champion last year and basically what uh reinforcement",
    "start": "793160",
    "end": "802079"
  },
  {
    "text": "learning system is doing is uh constantly observing and interacting with the",
    "start": "802079",
    "end": "807760"
  },
  {
    "text": "environment it gets and you know it gets a state of the environment this observation and based on this state it",
    "start": "807760",
    "end": "814000"
  },
  {
    "text": "renders of act an action like playing a game you see at the the observation",
    "start": "814000",
    "end": "819440"
  },
  {
    "text": "gives you the the position of the pieces on the board and then the action is moving a piece okay and this mapping",
    "start": "819440",
    "end": "829519"
  },
  {
    "text": "between the observation of the environment and the action is called policy so the main goal of this",
    "start": "829519",
    "end": "835480"
  },
  {
    "text": "reinforcement learning is to comput a policy and this comput is based on the reward if you made some moves in the",
    "start": "835480",
    "end": "842600"
  },
  {
    "text": "game and you win you have a positive reward on the moves you you made if you lose it's a negative reward okay that's",
    "start": "842600",
    "end": "850920"
  },
  {
    "text": "in a in a Nal now I just told you that we want",
    "start": "850920",
    "end": "857560"
  },
  {
    "text": "decisions which are real time our on live data are secure but actually this is not",
    "start": "857560",
    "end": "863240"
  },
  {
    "text": "enough um we want a few other things from decisions first we want to to be intelligent",
    "start": "863240",
    "end": "869600"
  },
  {
    "text": "right we are talking here about complex decisions in uncertain environment right we are talking about fraud detections",
    "start": "869600",
    "end": "876279"
  },
  {
    "text": "detecting a Cyber attack uh medical diagnosis these are the kind of decisions you are talking",
    "start": "876279",
    "end": "882959"
  },
  {
    "text": "about second we want the decisions to be robust you know think about the robots",
    "start": "882959",
    "end": "889240"
  },
  {
    "text": "self-driving cars and robustness has different axes you want to be robust we",
    "start": "889240",
    "end": "894880"
  },
  {
    "text": "want to be robust a system to complex noise this is a input you know uh sorry",
    "start": "894880",
    "end": "901959"
  },
  {
    "text": "from for a car dash",
    "start": "901959",
    "end": "907680"
  },
  {
    "text": "cam um and you know this is raining snowing and this is actually a s",
    "start": "907680",
    "end": "913560"
  },
  {
    "text": "Sandstorm okay it's pretty noisy data you want to be robust when some parts of",
    "start": "913560",
    "end": "919920"
  },
  {
    "text": "the system fails and also you want to be robust in the presence of unforeseen",
    "start": "919920",
    "end": "926279"
  },
  {
    "text": "inputs all these algorithms are trained on a bunch of inputs to render certain",
    "start": "926279",
    "end": "932360"
  },
  {
    "text": "decisions but what happens if you present the system an input they never",
    "start": "932360",
    "end": "938040"
  },
  {
    "text": "seen before okay what do you want the system to do in that",
    "start": "938040",
    "end": "945439"
  },
  {
    "text": "case right basically you want the system to recognize that it never seen that",
    "start": "947000",
    "end": "954319"
  },
  {
    "text": "input and take a conservative fa safe action like",
    "start": "954319",
    "end": "960759"
  },
  {
    "text": "for a car that will be slow down and",
    "start": "960759",
    "end": "965800"
  },
  {
    "text": "stop okay and finally as the decisions",
    "start": "965800",
    "end": "972440"
  },
  {
    "text": "augment the human's ability to make decisions or make decisions on behalf of",
    "start": "972440",
    "end": "979079"
  },
  {
    "text": "the humans you want the decisions to be explainable and that's kind of pretty",
    "start": "979079",
    "end": "987680"
  },
  {
    "text": "natural right see think about even human interaction if your friend or spouse",
    "start": "987680",
    "end": "995319"
  },
  {
    "text": "makes a decision or take an action um which maybe you know is not",
    "start": "995319",
    "end": "1002560"
  },
  {
    "text": "what you expected what is the first thing you do you ask why did you do it you ask for",
    "start": "1002560",
    "end": "1010199"
  },
  {
    "text": "an explanation right like for instance you know like if",
    "start": "1010199",
    "end": "1016959"
  },
  {
    "text": "you have a machine learning algorithms looking at your X-ray and giving your diagnosis",
    "start": "1016959",
    "end": "1024480"
  },
  {
    "text": "typically this is not enough why because if you go to your doctor and the do",
    "start": "1024480",
    "end": "1030600"
  },
  {
    "text": "doctor is giving you the diagnosis the doctor is going to take your x-rays going to point on the X-ray and",
    "start": "1030600",
    "end": "1036400"
  },
  {
    "text": "basically say you see that's what I'm going to this diagnosis because maybe this organ it's a little bit you",
    "start": "1036400",
    "end": "1044558"
  },
  {
    "text": "know different size different position and and things like that",
    "start": "1044559",
    "end": "1050840"
  },
  {
    "text": "right if your mortgage application is rejected you want to understand know why and obviously if a self-driving car gets",
    "start": "1051520",
    "end": "1059320"
  },
  {
    "text": "you into an accident you want to understand why so that's again a very important",
    "start": "1059320",
    "end": "1065559"
  },
  {
    "text": "aspect so now the rise lab goal I told you that all Labs that Bally have a particular goal so rise lab goal is to",
    "start": "1065559",
    "end": "1073160"
  },
  {
    "text": "develop open-source platforms tools and algorithms for intelligent realtime decisions on live dat",
    "start": "1073160",
    "end": "1080640"
  },
  {
    "text": "that's what we",
    "start": "1080640",
    "end": "1083240"
  },
  {
    "text": "do next I'm going to go talk a little bit about the systems artifact we are",
    "start": "1085720",
    "end": "1091000"
  },
  {
    "text": "planning to um to build again we are at the very beginning the lab started at",
    "start": "1091000",
    "end": "1098080"
  },
  {
    "text": "the beginning of this year so we are just few months",
    "start": "1098080",
    "end": "1103159"
  },
  {
    "text": "World um but the center Central software",
    "start": "1103159",
    "end": "1108360"
  },
  {
    "text": "art in fact is a secure realtime decision stack of srds for a lack of a better name which is this open- Source",
    "start": "1108360",
    "end": "1115679"
  },
  {
    "text": "platform to develop rise rise like applications and targets emerging a",
    "start": "1115679",
    "end": "1122000"
  },
  {
    "text": "applications like hyperparameter search reinforcement learning and is secure from ground up now this is the",
    "start": "1122000",
    "end": "1130760"
  },
  {
    "text": "architecture we have so far and this will change so take it with a grain of",
    "start": "1130760",
    "end": "1136799"
  },
  {
    "text": "salt I'm going to briefly talk you about the components and then I'm going to zoom zoom in on two systems we are which",
    "start": "1136799",
    "end": "1145480"
  },
  {
    "text": "are more advanced Ray and Pyon anyhow so um one Central component",
    "start": "1145480",
    "end": "1153960"
  },
  {
    "text": "of the architecture is is what it call the rice micro kernel and this is a minimalist execution engine which is",
    "start": "1153960",
    "end": "1160200"
  },
  {
    "text": "super fast super scalable and very flexible in terms of the computation",
    "start": "1160200",
    "end": "1167039"
  },
  {
    "text": "model and basically the need for that is to factor in factor out all the",
    "start": "1167039",
    "end": "1172559"
  },
  {
    "text": "functionality which is implemented by many Big Data Frameworks right they have",
    "start": "1172559",
    "end": "1177679"
  },
  {
    "text": "some scheduler um some in memory Object Store some Optimizer for uh their uh",
    "start": "1177679",
    "end": "1185679"
  },
  {
    "text": "execution plan and so forth and the second component is",
    "start": "1185679",
    "end": "1193200"
  },
  {
    "text": "ground and ground is a central repository for models apis and has the",
    "start": "1193200",
    "end": "1199000"
  },
  {
    "text": "API to capture the context in which the data gets used and produced and this is very important because today the data",
    "start": "1199000",
    "end": "1207120"
  },
  {
    "text": "comes in many different forms is stored in many different story systems is",
    "start": "1207120",
    "end": "1212799"
  },
  {
    "text": "processed by many uh tools and it access by many people so you want to track all",
    "start": "1212799",
    "end": "1221240"
  },
  {
    "text": "the everything what happens right you want to know who created a piece of data",
    "start": "1221240",
    "end": "1226600"
  },
  {
    "text": "when the data was changed how is it change the same thing about the models",
    "start": "1226600",
    "end": "1233520"
  },
  {
    "text": "okay the next thing is what we call the time machine and this is um a cross",
    "start": "1233520",
    "end": "1239039"
  },
  {
    "text": "layer component which is supposed to allow you to replace the application",
    "start": "1239039",
    "end": "1245880"
  },
  {
    "text": "what happened uh at fine arity so why is that",
    "start": "1245880",
    "end": "1252120"
  },
  {
    "text": "if you have the ability to replay what happened then many things it can enable",
    "start": "1252120",
    "end": "1258360"
  },
  {
    "text": "many any desirable things one it simplifies the development and debugging",
    "start": "1258360",
    "end": "1264919"
  },
  {
    "text": "if you have a problem you just replay it and to find the bug right to find the",
    "start": "1264919",
    "end": "1270960"
  },
  {
    "text": "problem it also help with robustness because I can replace the algorithms",
    "start": "1270960",
    "end": "1276320"
  },
  {
    "text": "again per perturbed inputs noisy inputs I can add some noise to the inputs I can",
    "start": "1276320",
    "end": "1282880"
  },
  {
    "text": "replace the algorithms and I see how robust it is if it can help with explainability",
    "start": "1282880",
    "end": "1290400"
  },
  {
    "text": "explainability really means what is in the input has generated a particular",
    "start": "1290400",
    "end": "1297480"
  },
  {
    "text": "decision right so if I have a lot of examples about the inputs and decisions",
    "start": "1297480",
    "end": "1304799"
  },
  {
    "text": "I can look about what is the difference the minimal difference between the inputs who generated one decision versus",
    "start": "1304799",
    "end": "1310880"
  },
  {
    "text": "the inputs who generated other decisions right the decisions like the mortgage",
    "start": "1310880",
    "end": "1316240"
  },
  {
    "text": "application was approved versus was not approved and based on that I can see what factors in the input are determin were",
    "start": "1316240",
    "end": "1322919"
  },
  {
    "text": "determinant in rendering that decision and security you can confirm",
    "start": "1322919",
    "end": "1328559"
  },
  {
    "text": "vulnerabilities you can replay it to confirm vulnerability um you can pass",
    "start": "1328559",
    "end": "1333640"
  },
  {
    "text": "the system and then you can replay to test for patches and you can do compliance",
    "start": "1333640",
    "end": "1339120"
  },
  {
    "text": "auditing right and finally we have a bunch of application Frameworks to make",
    "start": "1339120",
    "end": "1344440"
  },
  {
    "text": "it easy to support different workloads to support different kind of applications and here we have Ray py and Clipper and",
    "start": "1344440",
    "end": "1351720"
  },
  {
    "text": "opaque Clipper is a model serving layer and opaque is providing uh additional",
    "start": "1351720",
    "end": "1358960"
  },
  {
    "text": "security for uh spark SQL even when the operating system or the hypervisor are",
    "start": "1358960",
    "end": "1368000"
  },
  {
    "text": "compromised okay so next I'm going to focus on these two systems first is",
    "start": "1368000",
    "end": "1373799"
  },
  {
    "text": "Pyon um which we build and we actually release very first the their very",
    "start": "1373799",
    "end": "1379760"
  },
  {
    "text": "initial versions so what is Pyon pyn it's parallel computer",
    "start": "1379760",
    "end": "1387880"
  },
  {
    "text": "Computing for nons people look AWS makes things much easier",
    "start": "1387880",
    "end": "1396120"
  },
  {
    "text": "than operating your own cluster okay however you still need to",
    "start": "1396120",
    "end": "1401640"
  },
  {
    "text": "decide in most of the cases um what type of instance you are going to use how",
    "start": "1401640",
    "end": "1408120"
  },
  {
    "text": "many instances you are going what is the price are are they going to be spot instances or not spot instances and and",
    "start": "1408120",
    "end": "1416360"
  },
  {
    "text": "so Force right so in many cases actually you still need you know you need de devel devops to to do it",
    "start": "1416360",
    "end": "1424919"
  },
  {
    "text": "right and you know everyone recognizes this Challenge and actually Amazon have",
    "start": "1424919",
    "end": "1430200"
  },
  {
    "text": "released this kind of serverless systems like Athena which is targeted for SQL um",
    "start": "1430200",
    "end": "1437880"
  },
  {
    "text": "which which fundamentally um you don't need to configure anything magically under the hood when you run the query",
    "start": "1437880",
    "end": "1445000"
  },
  {
    "text": "it's is going to resize the number of machines you are going to run the query",
    "start": "1445000",
    "end": "1450440"
  },
  {
    "text": "on so that you get a good response time now PN targets machine learning",
    "start": "1450440",
    "end": "1458039"
  },
  {
    "text": "workloads okay and the requirements is minimal set",
    "start": "1458039",
    "end": "1463279"
  },
  {
    "text": "of overhead minimal learning curve so we want that everyone who who can write a",
    "start": "1463279",
    "end": "1470080"
  },
  {
    "text": "Python program he should be able to use Pyon why python because it turns out",
    "start": "1470080",
    "end": "1476799"
  },
  {
    "text": "that machine machine learning python is a lingua franka you know all the most of",
    "start": "1476799",
    "end": "1483159"
  },
  {
    "text": "the algorithms are in Python okay so and this is not real time",
    "start": "1483159",
    "end": "1490559"
  },
  {
    "text": "yet you know it's we target minut minutes long jobs um but it's again it's",
    "start": "1490559",
    "end": "1496919"
  },
  {
    "text": "our first try is based on AWS Lambda and this python",
    "start": "1496919",
    "end": "1502720"
  },
  {
    "text": "Anaconda as a distribution and Pyon it's a you know small short winged song",
    "start": "1502720",
    "end": "1510080"
  },
  {
    "text": "bird chiefly found in the New World",
    "start": "1510080",
    "end": "1516120"
  },
  {
    "text": "um so how many of you knows about um",
    "start": "1516919",
    "end": "1523000"
  },
  {
    "text": "lambdas okay so let me this is actually an Amazon U let me before going there so",
    "start": "1523000",
    "end": "1529520"
  },
  {
    "text": "what is lambdas so Lambda it's again it's an effort to make it much easier to",
    "start": "1529520",
    "end": "1537159"
  },
  {
    "text": "manage your computation resources the target applic so Lambda is like a micro instance it's a micro",
    "start": "1537159",
    "end": "1544480"
  },
  {
    "text": "instance you have 300 seconds at at most 5 minutes up to 5 minutes you can use it",
    "start": "1544480",
    "end": "1552159"
  },
  {
    "text": "um you can is you have up to 1.5 gab of RAM and you are buil at increments of",
    "start": "1552159",
    "end": "1559279"
  },
  {
    "text": "100 milliseconds so it's pretty cool so the goal of the you know the the workload",
    "start": "1559279",
    "end": "1566159"
  },
  {
    "text": "that Target it is that when you get push data into Amazon you want to process it",
    "start": "1566159",
    "end": "1573240"
  },
  {
    "text": "right so that's what it is it's like you P the data in Amazon and when you get new data you spin one of these lambdas",
    "start": "1573240",
    "end": "1581360"
  },
  {
    "text": "with your program to process that new data right doing some ETL or something",
    "start": "1581360",
    "end": "1588000"
  },
  {
    "text": "like that so that's kind of the idea",
    "start": "1588000",
    "end": "1594000"
  },
  {
    "text": "okay he's going to be happy",
    "start": "1594760",
    "end": "1601240"
  },
  {
    "text": "okay so it's a pretty nice construct",
    "start": "1601240",
    "end": "1607000"
  },
  {
    "text": "okay so we take that",
    "start": "1607360",
    "end": "1613200"
  },
  {
    "text": "engine and on top of it we provide a easy to use API actually it's very easy",
    "start": "1613200",
    "end": "1621559"
  },
  {
    "text": "to use API this is python code which basically",
    "start": "1621559",
    "end": "1627200"
  },
  {
    "text": "it's here you have an array of 10 elements and then you are going to add",
    "start": "1627200",
    "end": "1633600"
  },
  {
    "text": "one to each of the element and you do that in parallel the map here take this",
    "start": "1633600",
    "end": "1639320"
  },
  {
    "text": "add add one function and apply to each element in the list so the output is 1",
    "start": "1639320",
    "end": "1646200"
  },
  {
    "text": "to 3 to 10 right initially 0 1 2 3 to 9 you add one",
    "start": "1646200",
    "end": "1653440"
  },
  {
    "text": "it's 1 2 3 4 5 to 10 okay so it's very",
    "start": "1653440",
    "end": "1659159"
  },
  {
    "text": "easy okay so now what is behind uh you know under the hood so",
    "start": "1659159",
    "end": "1667240"
  },
  {
    "text": "here how it works on the left hand side your laptop on the laptop you are going to run this",
    "start": "1667240",
    "end": "1674559"
  },
  {
    "text": "program so what happens in under the hood is that when you are",
    "start": "1674559",
    "end": "1681240"
  },
  {
    "text": "going to have this map you are going to send to serialize a",
    "start": "1681240",
    "end": "1686399"
  },
  {
    "text": "function and the data and send them to Amazon store them to",
    "start": "1686399",
    "end": "1693360"
  },
  {
    "text": "S3 then you invoke a Lambda the Amazon Lambda this micro",
    "start": "1693919",
    "end": "1700679"
  },
  {
    "text": "server which is 5 minutes long up to 5 minutes long 1.5 GB Ram",
    "start": "1700679",
    "end": "1706240"
  },
  {
    "text": "or and this slam Lambda reads the functions and the data",
    "start": "1706240",
    "end": "1713480"
  },
  {
    "text": "from S3 download the Anaconda runtime the",
    "start": "1713480",
    "end": "1718960"
  },
  {
    "text": "python runtime run the",
    "start": "1718960",
    "end": "1724440"
  },
  {
    "text": "code now while this is running actually turns out that the program can proceed",
    "start": "1724440",
    "end": "1731600"
  },
  {
    "text": "on the this is what is called Futures Futures means that you start a functions",
    "start": "1731600",
    "end": "1737080"
  },
  {
    "text": "you don't wa from the result you get a handle to that function and then you can use later that handle to retrieve the",
    "start": "1737080",
    "end": "1742679"
  },
  {
    "text": "results when it's ready so you can do other things in the meantime you are not",
    "start": "1742679",
    "end": "1749039"
  },
  {
    "text": "blocked okay so this is what you have the this results and then you pull as three under the hood this is future",
    "start": "1749039",
    "end": "1756480"
  },
  {
    "text": "results when you say future results this is what you write to get the results and",
    "start": "1756480",
    "end": "1762320"
  },
  {
    "text": "under the hood this function pulls S3 to see when the results are ready the",
    "start": "1762320",
    "end": "1769159"
  },
  {
    "text": "results produced by Lambda when the results are ready you are going to serialize",
    "start": "1769159",
    "end": "1776360"
  },
  {
    "text": "them and put in S3 and then send back to the",
    "start": "1776360",
    "end": "1782720"
  },
  {
    "text": "client okay this what happens",
    "start": "1782720",
    "end": "1789320"
  },
  {
    "text": "now how well is working well surprisingly well you know it's like we",
    "start": "1789320",
    "end": "1794880"
  },
  {
    "text": "tried quite a few um machine learning application is true",
    "start": "1794880",
    "end": "1800559"
  },
  {
    "text": "most of them are embarrassingly parallel but still one surprising thing is",
    "start": "1800559",
    "end": "1806240"
  },
  {
    "text": "that both in terms of compute and data IO how much you read and write scale",
    "start": "1806240",
    "end": "1812919"
  },
  {
    "text": "almost linearly up to 3,000 lambdas now we are trying with 12,000 lambdas and",
    "start": "1812919",
    "end": "1820200"
  },
  {
    "text": "I'll let you know the results we are still working on it but this is pretty cool right you get actually Four 5 Tera",
    "start": "1820200",
    "end": "1828840"
  },
  {
    "text": "flops out of 33,000 workers okay and the r right you know 80",
    "start": "1828840",
    "end": "1838279"
  },
  {
    "text": "gb per second you know actually so it's near linear scalability so it's very",
    "start": "1838279",
    "end": "1845840"
  },
  {
    "text": "cool actually even wner fogles was impressed about that so he tweeted about",
    "start": "1845840",
    "end": "1852519"
  },
  {
    "text": "um okay also showing some of the early graphs",
    "start": "1852519",
    "end": "1859000"
  },
  {
    "text": "so this is Pyon right Pyon machine learning workloads but they are course great",
    "start": "1859519",
    "end": "1867799"
  },
  {
    "text": "right they are still not real time yes this is 22 February so it's",
    "start": "1867799",
    "end": "1874399"
  },
  {
    "text": "quite a bit we improved since then so now let me talk about Ray which is one",
    "start": "1874399",
    "end": "1879519"
  },
  {
    "text": "of the main projects and what I'm talking Ray is not only the framework but it's also includes for now also this",
    "start": "1879519",
    "end": "1886519"
  },
  {
    "text": "micro kernel as a part of",
    "start": "1886519",
    "end": "1890840"
  },
  {
    "text": "it so Ray targets the reinforcement learning applications and I mentioned to you this",
    "start": "1891600",
    "end": "1900000"
  },
  {
    "text": "one of this example right so basically this reinforcement learnings again what",
    "start": "1900000",
    "end": "1906919"
  },
  {
    "text": "they do they interact you have an agent which observes and get feedback from the",
    "start": "1906919",
    "end": "1912960"
  },
  {
    "text": "environment and based on that is going to take some actions to maximize some reward",
    "start": "1912960",
    "end": "1919039"
  },
  {
    "text": "in the case of a game the reward is winning or losing okay the actions is moving the",
    "start": "1919039",
    "end": "1926639"
  },
  {
    "text": "piece on the board the observe state is a board",
    "start": "1926639",
    "end": "1932480"
  },
  {
    "text": "State okay now why is this a new kind of algorithms they are what in in AI",
    "start": "1932480",
    "end": "1940279"
  },
  {
    "text": "classical AI you have what and you have supervised learning and supervised learning now this is closer to",
    "start": "1940279",
    "end": "1946559"
  },
  {
    "text": "supervised learning we super device learning you have an input and an output for each input you have a",
    "start": "1946559",
    "end": "1952760"
  },
  {
    "text": "label right input label with reinforcement learning you",
    "start": "1952760",
    "end": "1958840"
  },
  {
    "text": "don't have for each input a label which is like an action is equivalent of an",
    "start": "1958840",
    "end": "1965039"
  },
  {
    "text": "action so you get the feedback is delayed so the inputs kind of are spy",
    "start": "1965840",
    "end": "1972720"
  },
  {
    "text": "labeled why is that when you move a when you play a game of chess or go",
    "start": "1972720",
    "end": "1978360"
  },
  {
    "text": "when you move a piece what is your reward you don't know as a reward until after at the end you won whether you win",
    "start": "1978360",
    "end": "1985919"
  },
  {
    "text": "or lose so actually in practice when you do a task You' make mult you do multiple",
    "start": "1985919",
    "end": "1993320"
  },
  {
    "text": "take multiple actions before you know whether the task is successful or not",
    "start": "1993320",
    "end": "1999720"
  },
  {
    "text": "okay so that's a difference right isse labels and delayed feedback",
    "start": "1999720",
    "end": "2008080"
  },
  {
    "text": "or re sparse rewards so let me give you an example here so here it's a",
    "start": "2008080",
    "end": "2014279"
  },
  {
    "text": "robot and we use reinforcement learning to learn Rob this robot which is in a",
    "start": "2014279",
    "end": "2020679"
  },
  {
    "text": "simulator to walk or to",
    "start": "2020679",
    "end": "2025559"
  },
  {
    "text": "run so in this particular case the environment the observation in",
    "start": "2026200",
    "end": "2033240"
  },
  {
    "text": "the environment is a position and different of of all the joints of the",
    "start": "2033240",
    "end": "2039279"
  },
  {
    "text": "robot and limbs the action is actuating these",
    "start": "2039279",
    "end": "2044760"
  },
  {
    "text": "joints and moving these joints um the reward in this case what",
    "start": "2044760",
    "end": "2050200"
  },
  {
    "text": "you want to accomplish is again you want to run but how you describe that to a program or you want to walk so here the",
    "start": "2050200",
    "end": "2057679"
  },
  {
    "text": "the reward has two components one do I move in One Direction do I make progress",
    "start": "2057679",
    "end": "2062919"
  },
  {
    "text": "in One Direction the second one it's about the",
    "start": "2062919",
    "end": "2069200"
  },
  {
    "text": "level of the head the level of the head Cannot drop under certain",
    "start": "2069200",
    "end": "2076320"
  },
  {
    "text": "threshold why is that it turns that if you don't put that constraints one",
    "start": "2076560",
    "end": "2081760"
  },
  {
    "text": "solution to this problem is for the robot to roll over okay so here it's about you see",
    "start": "2081760",
    "end": "2089800"
  },
  {
    "text": "there is a iteration so it's iteration zero so let me show you um",
    "start": "2089800",
    "end": "2097839"
  },
  {
    "text": "how it lears so look at the iteration so you see every time you stop it because the head when you stop it the head drops",
    "start": "2097839",
    "end": "2103839"
  },
  {
    "text": "under that threshold you see you know it starts to move a bit in",
    "start": "2103839",
    "end": "2109839"
  },
  {
    "text": "One Direction okay",
    "start": "2109839",
    "end": "2116880"
  },
  {
    "text": "okay so now learn he learned so it's again in this case you don't know anything about you only have a simulator",
    "start": "2129240",
    "end": "2136400"
  },
  {
    "text": "a physical simulator and you just you don't know what are you know what are",
    "start": "2136400",
    "end": "2143760"
  },
  {
    "text": "the action you need to take in order to for the robot to run so you don't know anything at the beginning but you learn",
    "start": "2143760",
    "end": "2150400"
  },
  {
    "text": "so it's a very powerful uh method this is also it's used for Atari games you",
    "start": "2150400",
    "end": "2155800"
  },
  {
    "text": "heard about that right deep mind at at Google right to learn to play Atari",
    "start": "2155800",
    "end": "2163560"
  },
  {
    "text": "games expert capability expert",
    "start": "2163560",
    "end": "2168720"
  },
  {
    "text": "level okay so um I have only 12 more minutes so let me go into a deeper in in",
    "start": "2168720",
    "end": "2176280"
  },
  {
    "text": "R so let's first start with what are the reinforcement learning requirements",
    "start": "2176280",
    "end": "2181400"
  },
  {
    "text": "first you need to process and you need to observe to get the state of the",
    "start": "2181400",
    "end": "2186839"
  },
  {
    "text": "environment how you do that through sensors right and you have a bunch of sensors you have uh video you can have",
    "start": "2186839",
    "end": "2195720"
  },
  {
    "text": "liar you can have um microphones and so forth",
    "start": "2195720",
    "end": "2201599"
  },
  {
    "text": "right so then you need to process each of them in parallel and in real",
    "start": "2201599",
    "end": "2209040"
  },
  {
    "text": "time then typically how these algorithms are working is that you do a lot of",
    "start": "2209480",
    "end": "2216160"
  },
  {
    "text": "simulations until you are successful think about the game how I'm going to learn to play the game how right one way",
    "start": "2216160",
    "end": "2223160"
  },
  {
    "text": "it's best just do random moves and if you do uh you know uh large number you",
    "start": "2223160",
    "end": "2230359"
  },
  {
    "text": "know if you play a large number of games large enough you are going to win some",
    "start": "2230359",
    "end": "2236720"
  },
  {
    "text": "games just by chance so now you are going to learn what moves you made which",
    "start": "2236720",
    "end": "2243560"
  },
  {
    "text": "led to you winning the game okay so so you need to do huge number of simulations so you need to do",
    "start": "2243560",
    "end": "2251040"
  },
  {
    "text": "that um then when you do simulation we call roll outs then when some simulation",
    "start": "2251040",
    "end": "2258240"
  },
  {
    "text": "finish you take their results and you update the policy and you want to update",
    "start": "2258240",
    "end": "2263280"
  },
  {
    "text": "this kind of asynchronously you don't want to wait for all simulations to to complete because some of the simulation",
    "start": "2263280",
    "end": "2269040"
  },
  {
    "text": "can be very long like for instance I can lose a game in three moves or it may",
    "start": "2269040",
    "end": "2274440"
  },
  {
    "text": "take forever to win or you know it may end up in a tie okay so it's a",
    "start": "2274440",
    "end": "2281960"
  },
  {
    "text": "pretty asynchronous and then often this policy updates HD stochastic radiant descent",
    "start": "2281960",
    "end": "2290079"
  },
  {
    "text": "are implemented using deep neural network DNN stands for deep neural networks right which typically you",
    "start": "2290079",
    "end": "2297640"
  },
  {
    "text": "execute on gpus and CPUs so really what you need you need flexibility you need",
    "start": "2297640",
    "end": "2304079"
  },
  {
    "text": "to combine neural network planning search",
    "start": "2304079",
    "end": "2309440"
  },
  {
    "text": "simulations we need to support heterogeneous task task which run on CPUs and gpus they have different",
    "start": "2309960",
    "end": "2317480"
  },
  {
    "text": "durations Implement different computations in parallel and you need to have fine grain",
    "start": "2317480",
    "end": "2323480"
  },
  {
    "text": "support fine grain data and task dependencies performance we want to support millions of task per second or",
    "start": "2323480",
    "end": "2331240"
  },
  {
    "text": "each task can take just a few milliseconds so now we are talking about",
    "start": "2331240",
    "end": "2336839"
  },
  {
    "text": "real time and we want to use to Bey to use minimal",
    "start": "2336839",
    "end": "2342000"
  },
  {
    "text": "changes to paralyze existing python serial code so you want to be able to run a to take a python code which",
    "start": "2342000",
    "end": "2349800"
  },
  {
    "text": "implements a machine learning algorithms and to just paralyze it with very little",
    "start": "2349800",
    "end": "2356160"
  },
  {
    "text": "changes very few changes here is a ray architecture like many other system it has a driver and a",
    "start": "2356160",
    "end": "2363800"
  },
  {
    "text": "bunch of workers which run tasks it has also an object store which is in memory Object",
    "start": "2363800",
    "end": "2373000"
  },
  {
    "text": "Store it's implemented in share memory so all the workers and drivers on the",
    "start": "2373000",
    "end": "2378319"
  },
  {
    "text": "same machines can share the object and on each note you have a local",
    "start": "2378319",
    "end": "2386720"
  },
  {
    "text": "Schuler and this is because the scalability of the schuer is critical",
    "start": "2386720",
    "end": "2391839"
  },
  {
    "text": "because remember you want to schedule millions of Tas per second",
    "start": "2391839",
    "end": "2397760"
  },
  {
    "text": "so when the driver instantiate a task the local",
    "start": "2398079",
    "end": "2403560"
  },
  {
    "text": "Schuler tries to schedu it locally also workers themselves can",
    "start": "2403560",
    "end": "2409240"
  },
  {
    "text": "instantiate other task so you can have recursive task if the local Schuler cannot",
    "start": "2409240",
    "end": "2415440"
  },
  {
    "text": "schedule the task locally because the load the node is overloaded or maybe",
    "start": "2415440",
    "end": "2421200"
  },
  {
    "text": "because a task access is a very large object which is stored at a different node is",
    "start": "2421200",
    "end": "2428400"
  },
  {
    "text": "send that task to a global Schuler we send it to a which picks a node sends to",
    "start": "2428400",
    "end": "2434160"
  },
  {
    "text": "the local SCH of that node and which are going to execute the task also uh one particular um",
    "start": "2434160",
    "end": "2445880"
  },
  {
    "text": "design of of the rare architecture is This Global control",
    "start": "2448160",
    "end": "2455160"
  },
  {
    "text": "store so what we do we take all the control state from the system and we put in a database that's what we do",
    "start": "2455160",
    "end": "2461079"
  },
  {
    "text": "basically everything where the objects are located which task have been executed what is their dependency which",
    "start": "2461079",
    "end": "2468400"
  },
  {
    "text": "task which task are in Flight okay so this means this makes the rest",
    "start": "2468400",
    "end": "2475040"
  },
  {
    "text": "of the system very simple because all the other component components do not maintain state which means the fall",
    "start": "2475040",
    "end": "2481480"
  },
  {
    "text": "tolerance is easy if any of this uh you know colored components fails it's okay",
    "start": "2481480",
    "end": "2488160"
  },
  {
    "text": "because you start them again and they go to the global control State uh store to",
    "start": "2488160",
    "end": "2494480"
  },
  {
    "text": "get the state to get their state okay and also is make it easy to",
    "start": "2494480",
    "end": "2503280"
  },
  {
    "text": "build on top because again the entire State it's in the database it's much easier to build the wave UI debugging",
    "start": "2503280",
    "end": "2510520"
  },
  {
    "text": "tools aror diagnosis and so forth okay so that's the system",
    "start": "2510520",
    "end": "2517720"
  },
  {
    "text": "how well is working first of all it's developed and Deploy on",
    "start": "2517720",
    "end": "2524880"
  },
  {
    "text": "AWS local task execution a simple task doesn't do much is 300 microc remote",
    "start": "2525119",
    "end": "2533160"
  },
  {
    "text": "class execution is around 1 millisecond the object store red R through put 6",
    "start": "2533160",
    "end": "2539319"
  },
  {
    "text": "gabes per second how is",
    "start": "2539319",
    "end": "2544920"
  },
  {
    "text": "scales this is basically how is scales on the x axis is the number of nodes on",
    "start": "2544920",
    "end": "2550920"
  },
  {
    "text": "the y axis you have the number of test per second being scheduled so you can see for 50 no you have 1 million Tas per",
    "start": "2550920",
    "end": "2558000"
  },
  {
    "text": "second and the scale is basically",
    "start": "2558000",
    "end": "2562680"
  },
  {
    "text": "linearly how robust it is this plot tries to answer that",
    "start": "2564280",
    "end": "2571720"
  },
  {
    "text": "question so on the x axis you have the number of nodes you see this dashed line",
    "start": "2571720",
    "end": "2580640"
  },
  {
    "text": "so um you start with 20 nodes and then you go to 90 noes at time 20 seconds and",
    "start": "2580640",
    "end": "2587160"
  },
  {
    "text": "you go to I don't know 40 seconds or some at 50 seconds you go to uh 10 notes",
    "start": "2587160",
    "end": "2594520"
  },
  {
    "text": "and then you go back to 20 notes and what you see here with blue is",
    "start": "2594520",
    "end": "2600440"
  },
  {
    "text": "a stup the number of Tas per second in this experiment so as you can see you know once you you have failures is the",
    "start": "2600440",
    "end": "2608839"
  },
  {
    "text": "number of task is dropping and then when you get more notes it's increasing the reason that number of task who execute",
    "start": "2608839",
    "end": "2615680"
  },
  {
    "text": "drops so much after the failures is that some noes have failed the results of",
    "start": "2615680",
    "end": "2622520"
  },
  {
    "text": "those task on the no who have failed have been lost so now we have to",
    "start": "2622520",
    "end": "2627839"
  },
  {
    "text": "rebuild those results to rerun this uh the task who",
    "start": "2627839",
    "end": "2634680"
  },
  {
    "text": "created the results on the notes which which which failed okay but that happens",
    "start": "2634680",
    "end": "2642040"
  },
  {
    "text": "transparently under the hood similar to spark",
    "start": "2642040",
    "end": "2648640"
  },
  {
    "text": "okay and this is also useful to support St spot instances right the spot instances will",
    "start": "2648839",
    "end": "2655920"
  },
  {
    "text": "be taken away from you you know depending of what what is your",
    "start": "2655920",
    "end": "2663440"
  },
  {
    "text": "bit um it speeds Ray also speeds up roll outs for policy gradient the policy",
    "start": "2663440",
    "end": "2669200"
  },
  {
    "text": "gradient it's one of the main techniques used by reinforcement learning and",
    "start": "2669200",
    "end": "2674920"
  },
  {
    "text": "rollouts remember it's it's basically you simulate this is what you do you",
    "start": "2674920",
    "end": "2680280"
  },
  {
    "text": "simulate then you evaluate simulate the environment you evaluate the policy so play the game you",
    "start": "2680280",
    "end": "2687760"
  },
  {
    "text": "get the results you simulate and so forth and this is doing this in parallel",
    "start": "2687760",
    "end": "2692960"
  },
  {
    "text": "for CPUs so the speed up is one so this is a Baseline",
    "start": "2692960",
    "end": "2698480"
  },
  {
    "text": "now the evaluation of the policy if you remember is can be this kind of can be a",
    "start": "2698480",
    "end": "2703839"
  },
  {
    "text": "complex uh it's typically done using neural networks so you can do that in gpus and",
    "start": "2703839",
    "end": "2711800"
  },
  {
    "text": "if you do that in gpus you get an improvement but not as much as you'd expect you get 1.3x Improvement why",
    "start": "2711800",
    "end": "2720079"
  },
  {
    "text": "because actually the simulation the CPU simulation simulation of the game is a bottleneck here so it doesn't matter how",
    "start": "2720079",
    "end": "2726760"
  },
  {
    "text": "much much how faster you are going to be here the gpus because the simulation is a dominant",
    "start": "2726760",
    "end": "2733280"
  },
  {
    "text": "Factor so in order to do that what you do you are going to paralyze the simulations and then you are going to",
    "start": "2733280",
    "end": "2739640"
  },
  {
    "text": "update the policy from multiple simulations you are going to aggregate that and by that you are going to at",
    "start": "2739640",
    "end": "2746079"
  },
  {
    "text": "least in this example you get a 4X Improvement okay so this again",
    "start": "2746079",
    "end": "2752319"
  },
  {
    "text": "demonstrates how Ray not only gets a Improvement uh and it's",
    "start": "2752319",
    "end": "2757640"
  },
  {
    "text": "flexible um but also can handle both CPUs and gpus out of the",
    "start": "2757640",
    "end": "2765480"
  },
  {
    "text": "box okay and here we leverage P2 instances P2 GPU",
    "start": "2765480",
    "end": "2771160"
  },
  {
    "text": "instances so in summary rise laab goal is to develop open- Source platforms",
    "start": "2771160",
    "end": "2777200"
  },
  {
    "text": "tools and algorithms for realtime decisions on live data with strong",
    "start": "2777200",
    "end": "2783280"
  },
  {
    "text": "security there are many challenges across AI system security architectures",
    "start": "2783280",
    "end": "2789400"
  },
  {
    "text": "and of course as a researcher this is something we are very excited about and we already started to release",
    "start": "2789400",
    "end": "2797319"
  },
  {
    "text": "some software it's still very early stage but you know if you want to play",
    "start": "2797319",
    "end": "2804480"
  },
  {
    "text": "um we'll be delighted just send us comments and feedback uh but both pyan",
    "start": "2804480",
    "end": "2811359"
  },
  {
    "text": "and Ray are now open source and are available",
    "start": "2811359",
    "end": "2817480"
  },
  {
    "text": "so thank",
    "start": "2819000",
    "end": "2821720"
  },
  {
    "text": "you do you want to try to take uh one minute we have a yeah does yeah you want",
    "start": "2827480",
    "end": "2834599"
  },
  {
    "text": "to fit one question in or ah we're good thank you for",
    "start": "2834599",
    "end": "2841079"
  },
  {
    "text": "everybody I'm I'm here oh you are here okay any any questions one minute all here we go",
    "start": "2841079",
    "end": "2848839"
  },
  {
    "text": "DNN deep neeral networks so you are asking what kind of",
    "start": "2857400",
    "end": "2862520"
  },
  {
    "text": "other policies yeah how how do you model the policy oh how do you how do you",
    "start": "2862520",
    "end": "2867920"
  },
  {
    "text": "model a policy um so a policy it's again the policy is a mapping between the",
    "start": "2867920",
    "end": "2874800"
  },
  {
    "text": "input and an action and an output so it's like a function and in in many cases to model",
    "start": "2874800",
    "end": "2884599"
  },
  {
    "text": "that you use a neural network right deep neural network okay so and you can try with",
    "start": "2884599",
    "end": "2893680"
  },
  {
    "text": "different structure of neural networks for different kind of policies but that's a high level idea",
    "start": "2893680",
    "end": "2901040"
  },
  {
    "text": "yeah so the the question is that you know I'm talking about doing a lot of simulations but what you are but in some",
    "start": "2916880",
    "end": "2922480"
  },
  {
    "text": "cases you may not be able to do some simulation to do simulations like in financial",
    "start": "2922480",
    "end": "2927680"
  },
  {
    "text": "markets um I think that's fine actually there are reinforcement learning algorithm for the cas the robotics you",
    "start": "2927680",
    "end": "2934640"
  },
  {
    "text": "know which they don't um um are not based on simulations are based on the",
    "start": "2934640",
    "end": "2940000"
  },
  {
    "text": "experimentations right what I can simulate you are also going try to do it in real world the rate of learning of",
    "start": "2940000",
    "end": "2947480"
  },
  {
    "text": "course will be slower um but this is again is not constrainted to the simulation but",
    "start": "2947480",
    "end": "2952839"
  },
  {
    "text": "whatever whatever you can whenever you can simulate you should simulate that's the",
    "start": "2952839",
    "end": "2959480"
  },
  {
    "text": "idea thank you very much John thank you oh",
    "start": "2962400",
    "end": "2968920"
  }
]