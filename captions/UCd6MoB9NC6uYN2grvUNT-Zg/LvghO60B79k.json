[
  {
    "start": "0",
    "end": "15000"
  },
  {
    "text": "- [Mike] Hi, my name is Mike Havey,",
    "start": "180",
    "end": "1650"
  },
  {
    "text": "I'm a Senior Specialist\nSolutions Architect with AWS.",
    "start": "1650",
    "end": "4300"
  },
  {
    "text": "And in today's Snackables, I\nwanna discuss graph modeling.",
    "start": "5340",
    "end": "9320"
  },
  {
    "text": "In particular, how you\ncan discover a graph model",
    "start": "9320",
    "end": "12540"
  },
  {
    "text": "using generative AI and diagram as code.",
    "start": "12540",
    "end": "15753"
  },
  {
    "start": "15000",
    "end": "157000"
  },
  {
    "text": "So what draws you to\ngraph in the first place",
    "start": "16590",
    "end": "18870"
  },
  {
    "text": "is the promise of graph.",
    "start": "18870",
    "end": "20700"
  },
  {
    "text": "And even if you're new to graph,",
    "start": "20700",
    "end": "22350"
  },
  {
    "text": "you know that the basic\nbuilding blocks of a graph",
    "start": "22350",
    "end": "26370"
  },
  {
    "text": "are nodes and edges.",
    "start": "26370",
    "end": "28198"
  },
  {
    "text": "Nodes, shown here as circles,\nrepresent real-world objects",
    "start": "28198",
    "end": "31542"
  },
  {
    "text": "and edges, shown here as arrows,",
    "start": "31542",
    "end": "34170"
  },
  {
    "text": "represent relationships between objects,",
    "start": "34170",
    "end": "36695"
  },
  {
    "text": "and that a graph",
    "start": "36695",
    "end": "38070"
  },
  {
    "text": "is basically about\nmodeling data in this form",
    "start": "38070",
    "end": "40860"
  },
  {
    "text": "so that you can navigate\nthose relationships.",
    "start": "40860",
    "end": "43473"
  },
  {
    "text": "And from those building blocks,",
    "start": "45439",
    "end": "47460"
  },
  {
    "text": "you can overcome some\nimportant technical challenges.",
    "start": "47460",
    "end": "51720"
  },
  {
    "text": "You can combine data across silos.",
    "start": "51720",
    "end": "53772"
  },
  {
    "text": "You can find connections or\npaths through complex data.",
    "start": "53772",
    "end": "58772"
  },
  {
    "text": "You can work with heterogeneous data",
    "start": "59550",
    "end": "61260"
  },
  {
    "text": "that has complex relationships.",
    "start": "61260",
    "end": "63149"
  },
  {
    "text": "And indeed, your data",
    "start": "63150",
    "end": "64350"
  },
  {
    "text": "can be full of many-to-many relationships.",
    "start": "64350",
    "end": "66693"
  },
  {
    "text": "And you can build some\nimportant use cases,",
    "start": "67680",
    "end": "70210"
  },
  {
    "text": "social networking,\nrecommendations, knowledge graphs,",
    "start": "70210",
    "end": "74303"
  },
  {
    "text": "fraud detection, life sciences,\nnetwork and IT operations,",
    "start": "74303",
    "end": "79303"
  },
  {
    "text": "among many other use cases",
    "start": "80170",
    "end": "81936"
  },
  {
    "text": "can be built on a graph database.",
    "start": "81936",
    "end": "85140"
  },
  {
    "text": "And what all of these\nuse cases have in common",
    "start": "85140",
    "end": "87804"
  },
  {
    "text": "is that they have a\nhighly connected data set",
    "start": "87804",
    "end": "90807"
  },
  {
    "text": "and you can navigate that structure",
    "start": "90807",
    "end": "93150"
  },
  {
    "text": "and indeed that you can\nfollow relationships",
    "start": "93150",
    "end": "95760"
  },
  {
    "text": "based on strength of relationship.",
    "start": "95760",
    "end": "97653"
  },
  {
    "text": "Now Amazon Neptune is a\npurpose-built database",
    "start": "99270",
    "end": "102250"
  },
  {
    "text": "within AWS that implements graph",
    "start": "103110",
    "end": "106847"
  },
  {
    "text": "and has some important features.",
    "start": "106847",
    "end": "109230"
  },
  {
    "text": "First of all, it is open,",
    "start": "109230",
    "end": "110940"
  },
  {
    "text": "it supports the two main\nrepresentations of graph",
    "start": "110940",
    "end": "114060"
  },
  {
    "text": "that are available today,",
    "start": "114060",
    "end": "115529"
  },
  {
    "text": "labeled property graph\non Apache TinkerPop,",
    "start": "115529",
    "end": "120529"
  },
  {
    "text": "and the World Wide Web Consortium",
    "start": "120563",
    "end": "123720"
  },
  {
    "text": "Resource Description\nFramework or RDF model.",
    "start": "123720",
    "end": "126363"
  },
  {
    "text": "And using these representations,",
    "start": "127830",
    "end": "130085"
  },
  {
    "text": "you can achieve fast speeds",
    "start": "130085",
    "end": "132540"
  },
  {
    "text": "of query billions of relationships",
    "start": "132540",
    "end": "134129"
  },
  {
    "text": "with millisecond latency.",
    "start": "134130",
    "end": "137160"
  },
  {
    "text": "Architecturally, Neptune\nhas an architecture",
    "start": "137160",
    "end": "140650"
  },
  {
    "text": "where six replicas of your data",
    "start": "141690",
    "end": "143520"
  },
  {
    "text": "are maintained across\nthree availability zones.",
    "start": "143520",
    "end": "146400"
  },
  {
    "text": "And there's some important durability",
    "start": "146400",
    "end": "148019"
  },
  {
    "text": "and high availability built\ninto Neptune as a service.",
    "start": "148020",
    "end": "151560"
  },
  {
    "text": "And it's flexible",
    "start": "151560",
    "end": "152610"
  },
  {
    "text": "in supporting the three\nmain query languages",
    "start": "152610",
    "end": "154740"
  },
  {
    "text": "available today, Gremlin,\nOpenCypher and SPARQL.",
    "start": "154740",
    "end": "158430"
  },
  {
    "start": "157000",
    "end": "660000"
  },
  {
    "text": "So with graph then we no\ndoubt have lofty ambitions,",
    "start": "158430",
    "end": "161519"
  },
  {
    "text": "but we need to start somewhere.",
    "start": "161520",
    "end": "162750"
  },
  {
    "text": "We need to start relatively simply.",
    "start": "162750",
    "end": "165033"
  },
  {
    "text": "And so the proposal is to\nstart with an easy graph model",
    "start": "166200",
    "end": "171200"
  },
  {
    "text": "at the beginning of your graph journey.",
    "start": "171412",
    "end": "174570"
  },
  {
    "text": "And the reason you would wanna start easy",
    "start": "174570",
    "end": "176940"
  },
  {
    "text": "is that graph modeling is unfamiliar",
    "start": "176940",
    "end": "179970"
  },
  {
    "text": "even to experienced data architects,",
    "start": "179970",
    "end": "182700"
  },
  {
    "text": "it's just hard to get the\ninitial elements on paper.",
    "start": "182700",
    "end": "185403"
  },
  {
    "text": "And a lesson we've\nlearned from past projects",
    "start": "186240",
    "end": "188970"
  },
  {
    "text": "is to avoid big modeling",
    "start": "188970",
    "end": "191310"
  },
  {
    "text": "where you build a very\nlarge model upfront,",
    "start": "191310",
    "end": "195989"
  },
  {
    "text": "rather you wanna start with\nsomething rather simple,",
    "start": "195990",
    "end": "198470"
  },
  {
    "text": "but something that the\nteam can rally around.",
    "start": "198470",
    "end": "203070"
  },
  {
    "text": "So an initial easy model\nneeds to be something",
    "start": "203070",
    "end": "205775"
  },
  {
    "text": "that is not a throwaway artifact,",
    "start": "205775",
    "end": "208560"
  },
  {
    "text": "but rather something\nthat you would build on.",
    "start": "208560",
    "end": "210810"
  },
  {
    "text": "So what we propose that you need then",
    "start": "211830",
    "end": "214509"
  },
  {
    "text": "is to produce an easy step-one model",
    "start": "214509",
    "end": "217410"
  },
  {
    "text": "that you can run now and\nask questions of now.",
    "start": "217410",
    "end": "220503"
  },
  {
    "text": "So let's consider the exit\ncriteria for this easy model.",
    "start": "221791",
    "end": "225840"
  },
  {
    "text": "It needs to be researched.",
    "start": "225840",
    "end": "227550"
  },
  {
    "text": "In other words, it needs to demonstrate",
    "start": "227550",
    "end": "229690"
  },
  {
    "text": "an understanding of the problem\ndomain through research.",
    "start": "229690",
    "end": "233430"
  },
  {
    "text": "It obviously needs to capture",
    "start": "233430",
    "end": "234959"
  },
  {
    "text": "the essential business objects\nand their relationships,",
    "start": "234960",
    "end": "238320"
  },
  {
    "text": "but you need to be able to\ndeliver it fast, with low skill,",
    "start": "238320",
    "end": "241980"
  },
  {
    "text": "and with simple tooling.",
    "start": "241980",
    "end": "243303"
  },
  {
    "text": "Otherwise it's not easy.",
    "start": "244230",
    "end": "245733"
  },
  {
    "text": "But additionally, you need to be able",
    "start": "247350",
    "end": "249270"
  },
  {
    "text": "to answer questions during a test drive.",
    "start": "249270",
    "end": "252423"
  },
  {
    "text": "So a model is really only as good",
    "start": "253260",
    "end": "255360"
  },
  {
    "text": "as its ability to answer the questions",
    "start": "255360",
    "end": "257970"
  },
  {
    "text": "that you will have efficiently.",
    "start": "257970",
    "end": "260190"
  },
  {
    "text": "You need to test that out",
    "start": "260190",
    "end": "261359"
  },
  {
    "text": "and validate it during this easy phase.",
    "start": "261360",
    "end": "265133"
  },
  {
    "text": "You want to avoid lock-in.",
    "start": "265133",
    "end": "267510"
  },
  {
    "text": "As mentioned,",
    "start": "267510",
    "end": "268343"
  },
  {
    "text": "Neptune supports the two\ndominant graph representations",
    "start": "268343",
    "end": "271680"
  },
  {
    "text": "of RDF and labeled property graph.",
    "start": "271680",
    "end": "274076"
  },
  {
    "text": "And in the early stages of the project,",
    "start": "274076",
    "end": "276270"
  },
  {
    "text": "you may not have committed\none way or the other",
    "start": "276270",
    "end": "278639"
  },
  {
    "text": "so your model needs to avoid locking in,",
    "start": "278640",
    "end": "280683"
  },
  {
    "text": "but it needs to be a rallying picture",
    "start": "281640",
    "end": "283288"
  },
  {
    "text": "that the team can rally around\nand that you can build on.",
    "start": "283288",
    "end": "286263"
  },
  {
    "text": "So the approach we'll take",
    "start": "287520",
    "end": "288599"
  },
  {
    "text": "is to use two basic tools\nto build your easy model.",
    "start": "288600",
    "end": "292538"
  },
  {
    "text": "One is generative AI.",
    "start": "292538",
    "end": "294780"
  },
  {
    "text": "In particular, we'll use\nthe Chat Playground offered",
    "start": "294780",
    "end": "297570"
  },
  {
    "text": "by the Amazon Bedrock service,",
    "start": "297570",
    "end": "300453"
  },
  {
    "text": "which gives you a chat interface\nto a large language model.",
    "start": "301410",
    "end": "305490"
  },
  {
    "text": "We'll use the Anthropic Claude v2 model",
    "start": "305490",
    "end": "308560"
  },
  {
    "text": "and the model is trained on\na vast corpus of knowledge.",
    "start": "309960",
    "end": "314960"
  },
  {
    "text": "We can ask it questions like,",
    "start": "315180",
    "end": "316919"
  },
  {
    "text": "what would a model for our\nproblem domain look like?",
    "start": "316920",
    "end": "319740"
  },
  {
    "text": "And it will give you plausible answers.",
    "start": "319740",
    "end": "321783"
  },
  {
    "text": "Now Chat Playgrounds tend\nto render text as answers,",
    "start": "323040",
    "end": "328040"
  },
  {
    "text": "but we can ask it to render\nthat text in the form of markup",
    "start": "328290",
    "end": "332790"
  },
  {
    "text": "for diagram as code tools.",
    "start": "332790",
    "end": "335100"
  },
  {
    "text": "In particular, we're\ngonna leverage PlantUML,",
    "start": "335100",
    "end": "337522"
  },
  {
    "text": "which can produce diagrams\nfrom simple text markup",
    "start": "337522",
    "end": "341734"
  },
  {
    "text": "and large language models know\nhow to generate such markup.",
    "start": "341734",
    "end": "345780"
  },
  {
    "text": "This will allow us to see visually",
    "start": "345780",
    "end": "348360"
  },
  {
    "text": "what the model looks like.",
    "start": "348360",
    "end": "350129"
  },
  {
    "text": "And then from there we can iterate,",
    "start": "350130",
    "end": "351690"
  },
  {
    "text": "make improvements to it",
    "start": "351690",
    "end": "352800"
  },
  {
    "text": "until it ends up looking the way we wish.",
    "start": "352800",
    "end": "355203"
  },
  {
    "text": "So let's consider an example.",
    "start": "358470",
    "end": "360000"
  },
  {
    "text": "Suppose you are a data architect\nfor a public works company",
    "start": "360000",
    "end": "363750"
  },
  {
    "text": "and your company contracts\nconstruction companies,",
    "start": "363750",
    "end": "367590"
  },
  {
    "text": "and you wanna understand\nthese construction companies",
    "start": "367590",
    "end": "369900"
  },
  {
    "text": "so you want to build a\nknowledge graph of the companies",
    "start": "369900",
    "end": "372626"
  },
  {
    "text": "and how they're related to each other",
    "start": "372627",
    "end": "374632"
  },
  {
    "text": "and also whether one of these companies",
    "start": "374632",
    "end": "376919"
  },
  {
    "text": "happens to appear on a\nlegal exclusion list.",
    "start": "376920",
    "end": "379533"
  },
  {
    "text": "Alright, to show this,",
    "start": "381870",
    "end": "383430"
  },
  {
    "text": "I'm going to use Amazon Bedrock,",
    "start": "383430",
    "end": "387121"
  },
  {
    "text": "which has a Chat Playground.",
    "start": "387122",
    "end": "390300"
  },
  {
    "text": "It allows me to have a conversation",
    "start": "390300",
    "end": "392400"
  },
  {
    "text": "with a large language model.",
    "start": "392400",
    "end": "394380"
  },
  {
    "text": "In this case, my model is\nAnthropic Claude version 2.1.",
    "start": "394380",
    "end": "398077"
  },
  {
    "text": "It's a very simple interface.",
    "start": "399139",
    "end": "400947"
  },
  {
    "text": "I write a prompt, I click on\nRun, it gives me an answer.",
    "start": "400947",
    "end": "405947"
  },
  {
    "text": "This can be conversational,",
    "start": "406620",
    "end": "408690"
  },
  {
    "text": "I can keep asking it follow on questions",
    "start": "408690",
    "end": "410760"
  },
  {
    "text": "and it will add to its previous answer.",
    "start": "410760",
    "end": "412743"
  },
  {
    "text": "I've already asked it some questions.",
    "start": "414210",
    "end": "416103"
  },
  {
    "text": "So I asked it to describe\na logical data model",
    "start": "417240",
    "end": "419880"
  },
  {
    "text": "for a company exclusion list.",
    "start": "419880",
    "end": "422220"
  },
  {
    "text": "And I wanna be able to see companies,",
    "start": "422220",
    "end": "423720"
  },
  {
    "text": "their relationships, and\nwhether they have exclusions.",
    "start": "423720",
    "end": "426420"
  },
  {
    "text": "It gave me a nice answer, which is here.",
    "start": "427290",
    "end": "430503"
  },
  {
    "text": "So it described what such\na model would look like,",
    "start": "431370",
    "end": "434460"
  },
  {
    "text": "its entities, its relationships,",
    "start": "434460",
    "end": "437580"
  },
  {
    "text": "and gave me some further explanation.",
    "start": "437580",
    "end": "440253"
  },
  {
    "text": "We're off to a good start.",
    "start": "441360",
    "end": "443310"
  },
  {
    "text": "Remember, the tooling needs to be simple.",
    "start": "443310",
    "end": "445350"
  },
  {
    "text": "The effort needs to be simple,",
    "start": "445350",
    "end": "447148"
  },
  {
    "text": "the model needs to be researched.",
    "start": "447148",
    "end": "449760"
  },
  {
    "text": "And indeed, the LLM",
    "start": "449760",
    "end": "450990"
  },
  {
    "text": "is drawing on its vast\ncorpus of knowledge here.",
    "start": "450990",
    "end": "454289"
  },
  {
    "text": "Now I want to check what it's given me,",
    "start": "454290",
    "end": "456570"
  },
  {
    "text": "and I wanna see this visually.",
    "start": "456570",
    "end": "458103"
  },
  {
    "text": "So I ask it to draw it as a\nPlantUML, UML class diagram.",
    "start": "459390",
    "end": "464390"
  },
  {
    "text": "It responds with a code block of PlantUML.",
    "start": "465960",
    "end": "470699"
  },
  {
    "text": "Now PlantUML is a diagram as code tool.",
    "start": "470700",
    "end": "473790"
  },
  {
    "text": "The idea is I can draw complex\ndiagrams with simple markup",
    "start": "473790",
    "end": "478198"
  },
  {
    "text": "and the unified modeling\nlanguage has been around",
    "start": "478198",
    "end": "480930"
  },
  {
    "text": "for some time and is known\nfor very intricate tooling.",
    "start": "480930",
    "end": "484740"
  },
  {
    "text": "This is simple tooling,",
    "start": "484740",
    "end": "485940"
  },
  {
    "text": "which passes the simplicity\nexit criterion that I had.",
    "start": "485940",
    "end": "489603"
  },
  {
    "text": "And large language models\nknow how to generate it.",
    "start": "491730",
    "end": "494760"
  },
  {
    "text": "So I'm gonna take this code block",
    "start": "494760",
    "end": "496420"
  },
  {
    "text": "and paste it into a PlantText,",
    "start": "497760",
    "end": "500007"
  },
  {
    "text": "the PlantText editor,\nwhich is a PlantUML editor.",
    "start": "503338",
    "end": "507060"
  },
  {
    "text": "I paste it in here on the left",
    "start": "507060",
    "end": "509070"
  },
  {
    "text": "and it renders the diagram on the right.",
    "start": "509070",
    "end": "511548"
  },
  {
    "text": "So I can see this is what I have so far",
    "start": "511548",
    "end": "515099"
  },
  {
    "text": "from the large language model.",
    "start": "515100",
    "end": "517139"
  },
  {
    "text": "It has the makings of a data\nmodel for company exclusions.",
    "start": "517140",
    "end": "521190"
  },
  {
    "text": "So I like what I have so far,\nbut I'd like to add to it.",
    "start": "521190",
    "end": "524490"
  },
  {
    "text": "I would like this model to\nshow company relationships.",
    "start": "524490",
    "end": "527370"
  },
  {
    "text": "It doesn't do so currently.",
    "start": "527370",
    "end": "528873"
  },
  {
    "text": "So back in the playground,",
    "start": "531300",
    "end": "532893"
  },
  {
    "text": "my next prompt will be to instruct the LLM",
    "start": "535290",
    "end": "538230"
  },
  {
    "text": "that the model should\nindicate relationships",
    "start": "538230",
    "end": "540750"
  },
  {
    "text": "between companies.",
    "start": "540750",
    "end": "542103"
  },
  {
    "text": "And knowing the state of our conversation,",
    "start": "544050",
    "end": "546720"
  },
  {
    "text": "it's able to generate",
    "start": "546720",
    "end": "547829"
  },
  {
    "text": "an updated block of code for PlantUML.",
    "start": "547830",
    "end": "552830"
  },
  {
    "text": "I can take this,",
    "start": "554850",
    "end": "556053"
  },
  {
    "text": "paste it into my editor,",
    "start": "557280",
    "end": "558813"
  },
  {
    "text": "and we can see now that\ncompany relationships",
    "start": "561630",
    "end": "563880"
  },
  {
    "text": "have been added.",
    "start": "563880",
    "end": "564843"
  },
  {
    "text": "Great.",
    "start": "567840",
    "end": "568673"
  },
  {
    "text": "So I would at this point like",
    "start": "568673",
    "end": "572370"
  },
  {
    "text": "to just embellish this\ndiagram a little bit.",
    "start": "572370",
    "end": "575490"
  },
  {
    "text": "So what I'm gonna do is\nreshape it a little bit",
    "start": "575490",
    "end": "580490"
  },
  {
    "text": "into a form that I think\nfits my purpose very well.",
    "start": "580530",
    "end": "584730"
  },
  {
    "text": "I will have a company class,",
    "start": "584730",
    "end": "586260"
  },
  {
    "text": "an exclusion class, an\nexclusion criteria class.",
    "start": "586260",
    "end": "590632"
  },
  {
    "text": "Companies will have names,\nindustries, locations,",
    "start": "590632",
    "end": "594480"
  },
  {
    "text": "and a company can have\nzero or more exclusions",
    "start": "594480",
    "end": "598290"
  },
  {
    "text": "and can have zero or\none current exclusions.",
    "start": "598290",
    "end": "601233"
  },
  {
    "text": "Exclusions have a start date and end date.",
    "start": "602340",
    "end": "604530"
  },
  {
    "text": "And also can refer to exclusion criteria.",
    "start": "604530",
    "end": "608790"
  },
  {
    "text": "So there's a certain set",
    "start": "608790",
    "end": "610019"
  },
  {
    "text": "of known exclusion types\nthat I represent this way.",
    "start": "610020",
    "end": "614550"
  },
  {
    "text": "I also represent customer relationships",
    "start": "614550",
    "end": "616470"
  },
  {
    "text": "by having an association between companies",
    "start": "616470",
    "end": "619774"
  },
  {
    "text": "whose properties include relationship type",
    "start": "619774",
    "end": "623760"
  },
  {
    "text": "and established date.",
    "start": "623760",
    "end": "625113"
  },
  {
    "text": "Now this is a UML class diagram,",
    "start": "627150",
    "end": "630150"
  },
  {
    "text": "but it maps well to graph.",
    "start": "630150",
    "end": "632400"
  },
  {
    "text": "In particular,",
    "start": "632400",
    "end": "633233"
  },
  {
    "text": "my convention is that classes\nrepresent types of nodes,",
    "start": "633233",
    "end": "638180"
  },
  {
    "text": "its attributes represent node properties.",
    "start": "639660",
    "end": "641972"
  },
  {
    "text": "Associations or the links",
    "start": "643500",
    "end": "646050"
  },
  {
    "text": "that connect classes represent edges.",
    "start": "646050",
    "end": "649284"
  },
  {
    "text": "Their label represents edge labels.",
    "start": "649284",
    "end": "653160"
  },
  {
    "text": "And when I have an\nassociation like related to",
    "start": "653160",
    "end": "655860"
  },
  {
    "text": "that has its own attributes,",
    "start": "655861",
    "end": "657990"
  },
  {
    "text": "these represent edge properties.",
    "start": "657990",
    "end": "660959"
  },
  {
    "start": "660000",
    "end": "731000"
  },
  {
    "text": "Now let's test drive the\nmodel to validate it.",
    "start": "660960",
    "end": "663393"
  },
  {
    "text": "We wanna perform three steps.",
    "start": "665850",
    "end": "667350"
  },
  {
    "text": "We want to generate some test data,",
    "start": "667350",
    "end": "669899"
  },
  {
    "text": "we wanna load that data\ninto an Neptune database",
    "start": "669900",
    "end": "673080"
  },
  {
    "text": "and we wanna query it.",
    "start": "673080",
    "end": "675090"
  },
  {
    "text": "And significantly, the\nlarge language model",
    "start": "675090",
    "end": "677280"
  },
  {
    "text": "can help us with all three steps.",
    "start": "677280",
    "end": "679950"
  },
  {
    "text": "From our model, it can\ngenerate plausible test data,",
    "start": "679950",
    "end": "682710"
  },
  {
    "text": "it can even provide\nOpenCypher create statements,",
    "start": "682710",
    "end": "687540"
  },
  {
    "text": "allowing us to\ntransactionally load this data",
    "start": "687540",
    "end": "690870"
  },
  {
    "text": "into the Neptune database",
    "start": "690870",
    "end": "692580"
  },
  {
    "text": "and it can help us write the queries.",
    "start": "692580",
    "end": "695167"
  },
  {
    "text": "And we provide a notebook",
    "start": "695167",
    "end": "697800"
  },
  {
    "text": "demonstrating this concept\nof the links shown here.",
    "start": "697800",
    "end": "700472"
  },
  {
    "text": "So we can, for example, ask questions,",
    "start": "703170",
    "end": "705570"
  },
  {
    "text": "natural language questions",
    "start": "705570",
    "end": "706860"
  },
  {
    "text": "like which companies located\nin Texas have an exclusion",
    "start": "706860",
    "end": "710250"
  },
  {
    "text": "or are directly related to\na company with an exclusion?",
    "start": "710250",
    "end": "713223"
  },
  {
    "text": "Behind the scenes, the\nlarge language model",
    "start": "715304",
    "end": "719280"
  },
  {
    "text": "is able to generate a\ngraph query based on this",
    "start": "719280",
    "end": "722910"
  },
  {
    "text": "and answer the question,",
    "start": "722910",
    "end": "724323"
  },
  {
    "text": "the company located in Texas is company C.",
    "start": "725160",
    "end": "729392"
  },
  {
    "start": "731000",
    "end": "829000"
  },
  {
    "text": "Now, after you've had this\ninitial win with the easy model,",
    "start": "734521",
    "end": "739440"
  },
  {
    "text": "as the development process progresses,",
    "start": "739440",
    "end": "742620"
  },
  {
    "text": "you need to evolve the\nmodel by adding detail to it",
    "start": "742620",
    "end": "747240"
  },
  {
    "text": "and to potentially reshape it.",
    "start": "747240",
    "end": "749670"
  },
  {
    "text": "There are all sorts of\nmodeling considerations",
    "start": "749670",
    "end": "752130"
  },
  {
    "text": "for performance in a graph.",
    "start": "752130",
    "end": "754500"
  },
  {
    "text": "Considerations such as edge direction,",
    "start": "754500",
    "end": "756630"
  },
  {
    "text": "whether something should\nbe a node or property,",
    "start": "756630",
    "end": "758490"
  },
  {
    "text": "generic versus specific edges,",
    "start": "758490",
    "end": "761070"
  },
  {
    "text": "whether something should\nbe a node or edge.",
    "start": "761070",
    "end": "762900"
  },
  {
    "text": "These are important considerations",
    "start": "762900",
    "end": "764520"
  },
  {
    "text": "that you may not have\nconsidered in the easy stage,",
    "start": "764520",
    "end": "767910"
  },
  {
    "text": "but you want to consider them later on.",
    "start": "767910",
    "end": "770430"
  },
  {
    "text": "We have an excellent\nskills builder course,",
    "start": "770430",
    "end": "772470"
  },
  {
    "text": "Data Modeling for Amazon Neptune,",
    "start": "772470",
    "end": "774389"
  },
  {
    "text": "that walks you through\nthese considerations.",
    "start": "774390",
    "end": "777873"
  },
  {
    "text": "But beyond this, you want to think big.",
    "start": "779040",
    "end": "781740"
  },
  {
    "text": "A knowledge graph is a central piece",
    "start": "781740",
    "end": "783570"
  },
  {
    "text": "of an enterprise architecture.",
    "start": "783570",
    "end": "785490"
  },
  {
    "text": "So think beyond company exclusions.",
    "start": "785490",
    "end": "788160"
  },
  {
    "text": "You're not just building\na company occlusion graph,",
    "start": "788160",
    "end": "790379"
  },
  {
    "text": "you're building a knowledge graph",
    "start": "790380",
    "end": "791760"
  },
  {
    "text": "which may include many\nother types of data.",
    "start": "791760",
    "end": "794970"
  },
  {
    "text": "And think of what you've delivered",
    "start": "794970",
    "end": "796425"
  },
  {
    "text": "with the company exclusions\nas a data product,",
    "start": "796426",
    "end": "800220"
  },
  {
    "text": "not just a narrow component\nthat addresses a requirement,",
    "start": "800220",
    "end": "804000"
  },
  {
    "text": "but think of it as a product",
    "start": "804000",
    "end": "806310"
  },
  {
    "text": "that a consumer of a data mesh marketplace",
    "start": "806310",
    "end": "808470"
  },
  {
    "text": "could actually understand",
    "start": "808470",
    "end": "810120"
  },
  {
    "text": "and consume and put to use.",
    "start": "810120",
    "end": "812193"
  },
  {
    "text": "And really think of your graph",
    "start": "813450",
    "end": "814830"
  },
  {
    "text": "as a central place to bring data together.",
    "start": "814830",
    "end": "817337"
  },
  {
    "text": "Assume that your knowledge\ngraph compliments a mesh,",
    "start": "817337",
    "end": "822337"
  },
  {
    "text": "that it is in fact a mesh scale",
    "start": "823200",
    "end": "825060"
  },
  {
    "text": "meaning place for numerous data products.",
    "start": "825060",
    "end": "828453"
  },
  {
    "start": "829000",
    "end": "859000"
  },
  {
    "text": "So in summary then, we\nshowed that a great way",
    "start": "831000",
    "end": "834420"
  },
  {
    "text": "to get started with graph",
    "start": "834420",
    "end": "835889"
  },
  {
    "text": "is to produce that initial easy model",
    "start": "835890",
    "end": "838950"
  },
  {
    "text": "and that we can use generative\nAI and diagram as code",
    "start": "838950",
    "end": "842105"
  },
  {
    "text": "to make the effort of\ncreating that easy model,",
    "start": "842105",
    "end": "844949"
  },
  {
    "text": "straightforward.",
    "start": "844950",
    "end": "846233"
  },
  {
    "text": "We were even able to generate sample data",
    "start": "846233",
    "end": "849269"
  },
  {
    "text": "and to test it out,",
    "start": "849270",
    "end": "850473"
  },
  {
    "text": "but that later on we have considerations",
    "start": "851310",
    "end": "853560"
  },
  {
    "text": "such as adding detail,\nreshaping for performance,",
    "start": "853560",
    "end": "856260"
  },
  {
    "text": "and just generally thinking\nbig about our endeavor.",
    "start": "856260",
    "end": "858933"
  },
  {
    "start": "859000",
    "end": "920000"
  },
  {
    "text": "Some additional resources,\nwe have a blog post",
    "start": "860580",
    "end": "862948"
  },
  {
    "text": "demonstrating this easy modeling\napproach at the link shown.",
    "start": "862948",
    "end": "867450"
  },
  {
    "text": "And there's an accompanying\nnotebook at the link shown.",
    "start": "867450",
    "end": "870393"
  },
  {
    "text": "A related tool that goes\nthe opposite direction",
    "start": "872700",
    "end": "876690"
  },
  {
    "text": "and reverse engineers the data",
    "start": "876690",
    "end": "878370"
  },
  {
    "text": "that's already in your Neptune database,",
    "start": "878370",
    "end": "880479"
  },
  {
    "text": "draws it using PlantUML, is\navailable at the first link.",
    "start": "880479",
    "end": "885300"
  },
  {
    "text": "And then our Neptune Demos\nHub is a great resource",
    "start": "885300",
    "end": "888839"
  },
  {
    "text": "for demonstrations of\ncommon graph use cases.",
    "start": "888840",
    "end": "892710"
  },
  {
    "text": "That's the second link.",
    "start": "892710",
    "end": "893943"
  },
  {
    "text": "You can deploy a Neptune\ncluster in your own AWS account",
    "start": "895230",
    "end": "898170"
  },
  {
    "text": "within minutes at the link shown here.",
    "start": "898170",
    "end": "900782"
  },
  {
    "text": "And our team would love to\ndiscuss further with you.",
    "start": "902070",
    "end": "904590"
  },
  {
    "text": "Please contact us.",
    "start": "904590",
    "end": "905550"
  },
  {
    "text": "Our email address is\nwwso-neptune-ssa@amazon.com.",
    "start": "905550",
    "end": "910550"
  },
  {
    "text": "Really appreciate your time today.",
    "start": "911402",
    "end": "914070"
  },
  {
    "text": "Thank you very much.",
    "start": "914070",
    "end": "915093"
  }
]