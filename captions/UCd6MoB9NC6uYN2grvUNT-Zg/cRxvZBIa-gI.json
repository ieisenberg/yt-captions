[
  {
    "text": "Hi and welcome to,\n‘This is My Architecture.’",
    "start": "6677",
    "end": "9038"
  },
  {
    "text": "I'm Don and I'm joined\nby Charlie with Equifax.",
    "start": "9269",
    "end": "12775"
  },
  {
    "text": "Hi Don.\nHey Charlie.",
    "start": "12775",
    "end": "14775"
  },
  {
    "text": "Why do you tell us a little\nabout Equifax?",
    "start": "15443",
    "end": "17443"
  },
  {
    "text": "Sure, so Equifax is a rebuilt company\nfrom the ground up with an emphasis ",
    "start": "17443",
    "end": "21527"
  },
  {
    "text": "in enablement in the cloud.",
    "start": "21527",
    "end": "23634"
  },
  {
    "text": "Excellent, so tell us\nabout the application that we're going",
    "start": "24507",
    "end": "26962"
  },
  {
    "text": " to walk through today.\nSo the application we're going",
    "start": "26962",
    "end": "28962"
  },
  {
    "text": "to talk about is myequifax.com,\nit's our primary asset for consumers ",
    "start": "28962",
    "end": "32279"
  },
  {
    "text": "to manage and monitor their credit.",
    "start": "32280",
    "end": "35531"
  },
  {
    "text": "Okay, so you will walk us through\nfrom the consumer, their mobile device,",
    "start": "35793",
    "end": "39531"
  },
  {
    "text": "through the architecture?\nSure, so from the top down,",
    "start": "39532",
    "end": "42361"
  },
  {
    "text": "they can come in over web or mobile.",
    "start": "42747",
    "end": "44748"
  },
  {
    "text": "They will come in through\nan application load balancer",
    "start": "45009",
    "end": "47162"
  },
  {
    "text": "which will lead into an EKS cluster,\nwhich is a composition",
    "start": "47746",
    "end": "52865"
  },
  {
    "text": "of EC2 on-demand instances\nand spot instances",
    "start": "52866",
    "end": "56940"
  },
  {
    "text": "from the spot instance marketplace\nin AWS.",
    "start": "57360",
    "end": "59973"
  },
  {
    "text": "Following that, the multiple applications\nthat are deployed on that cluster",
    "start": "60507",
    "end": "63589"
  },
  {
    "text": "will actually make database connections\nto Aurora Global,",
    "start": "63589",
    "end": "66953"
  },
  {
    "text": "and then also to document storage engine\nfor different, you know,",
    "start": "67335",
    "end": "71190"
  },
  {
    "text": "no SQL implementations\nor storage documents.",
    "start": "71190",
    "end": "75639"
  },
  {
    "text": "And so, with respect to Aurora Global,",
    "start": "75639",
    "end": "78039"
  },
  {
    "text": "what we're talking about here\nis acid compliance transactions, right?",
    "start": "78039",
    "end": "81504"
  },
  {
    "text": "And then of course,\nover on the document storage",
    "start": "81504",
    "end": "83595"
  },
  {
    "text": "we're talking no SQL.\nOkay.",
    "start": "83595",
    "end": "85771"
  },
  {
    "text": "So things like credit reports,\ninformation about the individual ",
    "start": "85771",
    "end": "89267"
  },
  {
    "text": "are stored in the data storage\nthat you have?",
    "start": "89267",
    "end": "91931"
  },
  {
    "text": "So why don't we do this,\nwhy don't we break this down",
    "start": "92489",
    "end": "93931"
  },
  {
    "text": "and go through it piece by piece.",
    "start": "93931",
    "end": "95687"
  },
  {
    "text": "So with respect to EKS here,\nso I see the on-demand instances",
    "start": "95687",
    "end": "99911"
  },
  {
    "text": "and I see spot instances,\nso the first things that comes ",
    "start": "99912",
    "end": "102073"
  },
  {
    "text": "to mind is you know, reliability.\nThat's right, that's right.",
    "start": "102073",
    "end": "105026"
  },
  {
    "text": "And so Kubernetes gives\nus a lot of those constructs,",
    "start": "105026",
    "end": "107439"
  },
  {
    "text": "and really where it boils\ndown to is in liveness ",
    "start": "107439",
    "end": "110072"
  },
  {
    "text": "and readiness probes\nwith respect to EKS.",
    "start": "110072",
    "end": "112715"
  },
  {
    "text": "And what those do is they tell\nEKS the control plane ",
    "start": "113103",
    "end": "117218"
  },
  {
    "text": "that those applications are ready\nto receive traffic.",
    "start": "117614",
    "end": "121966"
  },
  {
    "text": "Okay,\nso from a cost optimization standpoint,",
    "start": "122132",
    "end": "125020"
  },
  {
    "text": "it sounds like you can blend\ndifferent instance families ",
    "start": "125020",
    "end": "128198"
  },
  {
    "text": "across different AZs\nto tap into different capacity pools?",
    "start": "128198",
    "end": "131252"
  },
  {
    "text": "Absolutely, yeah.\nSo when we talk about spot instances",
    "start": "131253",
    "end": "134671"
  },
  {
    "text": "in the AWS marketplace,\nand so just to take it from the hut, ",
    "start": "134671",
    "end": "137661"
  },
  {
    "text": "you know, from the top down.",
    "start": "137661",
    "end": "139222"
  },
  {
    "text": "What we're talking\nabout here is really a 60/40 split ",
    "start": "139573",
    "end": "143925"
  },
  {
    "text": "in respect to spot instances,\nand 40% on-demand instances.",
    "start": "144150",
    "end": "148792"
  },
  {
    "text": "So we've got spot on this side,\nand we've got on-demand on this side.",
    "start": "149593",
    "end": "153513"
  },
  {
    "text": "And when we talk\nabout the different architectures ",
    "start": "153923",
    "end": "155923"
  },
  {
    "text": "and the different capacity pools\nthat are available",
    "start": "155923",
    "end": "157923"
  },
  {
    "text": "across different regions,\nthat's really where, you know,",
    "start": "157923",
    "end": "160418"
  },
  {
    "text": "the Graviton2 processors,\nECR with manifest list",
    "start": "160418",
    "end": "163755"
  },
  {
    "text": "building those docker images\nfrom multiple architectures ",
    "start": "163996",
    "end": "167058"
  },
  {
    "text": "with Docker X.\nOkay, so I have to imagine",
    "start": "167540",
    "end": "170027"
  },
  {
    "text": "you have quite a few consumers\nthat are hitting this.",
    "start": "170027",
    "end": "172027"
  },
  {
    "text": "So again, back to reliability.\nYou mentioned Graviton2,",
    "start": "172027",
    "end": "175543"
  },
  {
    "text": "so you know, we have ECR.\nCan you talk about you know,",
    "start": "175543",
    "end": "179255"
  },
  {
    "text": "kind of how your pipeline,\nwhat it looks like to deploy?",
    "start": "179255",
    "end": "182038"
  },
  {
    "text": "Absolutely, yeah.\nSo we have a global pipeline",
    "start": "182038",
    "end": "184267"
  },
  {
    "text": "that actually,\nso I'll write this out here.",
    "start": "184267",
    "end": "186267"
  },
  {
    "text": "We've got a global pipeline,\nbuild pipeline",
    "start": "186267",
    "end": "189118"
  },
  {
    "text": "that actually runs all of our SDLC,\nour unit test, integration test.",
    "start": "189451",
    "end": "194343"
  },
  {
    "text": "Also deploys across multiple regions\nand multiple accounts",
    "start": "194343",
    "end": "197626"
  },
  {
    "text": "into this exact same architecture\nacross multiple regions.",
    "start": "198237",
    "end": "201633"
  },
  {
    "text": "Okay, alright.\nSo why don't we move ",
    "start": "201633",
    "end": "204760"
  },
  {
    "text": "down to the persistence here.\nSo we have Aurora Global,",
    "start": "204760",
    "end": "207700"
  },
  {
    "text": "so I assume we're talking\nmulti-region, right?",
    "start": "207700",
    "end": "210095"
  },
  {
    "text": "That's clearly going to have an impact\non your applications.",
    "start": "210095",
    "end": "213263"
  },
  {
    "text": "Can you talk about what you had to do\nto actually enable that?",
    "start": "213441",
    "end": "216103"
  },
  {
    "text": "Absolutely, yeah.\nSo Aurora Global is",
    "start": "216104",
    "end": "218104"
  },
  {
    "text": "a multi-region replicating\ntransactional database, SQL database.",
    "start": "218104",
    "end": "223328"
  },
  {
    "text": "The particular flavor\nthat we're using is Postgres.",
    "start": "223928",
    "end": "226051"
  },
  {
    "text": "And so, it's Postgres over the wire\nfrom a driver compliance standpoint.",
    "start": "226745",
    "end": "231034"
  },
  {
    "text": "So you can imagine, we've got\nour applications running on EKS.",
    "start": "231405",
    "end": "233856"
  },
  {
    "text": "Those are actually talking\nto Aurora Global instance over Postgres.",
    "start": "234556",
    "end": "238436"
  },
  {
    "text": "And then that data\nis actually replicated ",
    "start": "239305",
    "end": "242045"
  },
  {
    "text": "on the AWS backbone\nbetween the Aurora Global writers",
    "start": "242246",
    "end": "246804"
  },
  {
    "text": "and readers.\nAnd so to answer your question,",
    "start": "246804",
    "end": "249877"
  },
  {
    "text": "the applications actually implement\na dynamic data source.",
    "start": "250272",
    "end": "254204"
  },
  {
    "text": "And so we drive those configurations\nfrom a configuration server.",
    "start": "254865",
    "end": "259375"
  },
  {
    "text": "And so really what happens is,",
    "start": "259576",
    "end": "261191"
  },
  {
    "text": "let's imagine that we're\nin the West Coast,",
    "start": "261192",
    "end": "263194"
  },
  {
    "text": "and there's a failure on the writer.",
    "start": "263421",
    "end": "265177"
  },
  {
    "text": "The property that served\nfrom the configuration server",
    "start": "265618",
    "end": "269868"
  },
  {
    "text": "to the application is the only thing\nthat has to change.",
    "start": "269868",
    "end": "272859"
  },
  {
    "text": "And then through dynamic refreshing\nin the application context it will fail over",
    "start": "273337",
    "end": "277468"
  },
  {
    "text": "and start talking to the writer\nin the different region.",
    "start": "277468",
    "end": "280319"
  },
  {
    "text": "Interesting, so I think what I'm seeing\nhere is a combination ",
    "start": "280320",
    "end": "282872"
  },
  {
    "text": "of an event driven configuration,\nan event driven notification ",
    "start": "282872",
    "end": "286924"
  },
  {
    "text": "likely because spot instances are going\nto have a termination notification.",
    "start": "286924",
    "end": "290304"
  },
  {
    "text": "Can you talk kind of,\nhow those pieces come together ",
    "start": "290382",
    "end": "292694"
  },
  {
    "text": "to create this highly reliable database?",
    "start": "292695",
    "end": "294395"
  },
  {
    "text": "Absolutely.\nSo AWS actually gives",
    "start": "294395",
    "end": "296440"
  },
  {
    "text": "us something they call\nthe node-termination-handler.",
    "start": "296440",
    "end": "299500"
  },
  {
    "text": "And what that is, that's just a pod\nthat actually runs on our clusters",
    "start": "299731",
    "end": "302956"
  },
  {
    "text": "or a number of pods.\nAnd what that pod does,",
    "start": "303291",
    "end": "305830"
  },
  {
    "text": "and we'll call\nthis the node-termination-handler.",
    "start": "305830",
    "end": "308232"
  },
  {
    "text": "What that does is it listens to events\nfrom AWS across the control plane",
    "start": "308736",
    "end": "314037"
  },
  {
    "text": "on when one of these spots instances\nwill actually be reclaimed.",
    "start": "314392",
    "end": "317535"
  },
  {
    "text": "And you only get a two-minute warning.",
    "start": "317806",
    "end": "319338"
  },
  {
    "text": "Okay, so you're able to,\nwith your architecture you're able ",
    "start": "319338",
    "end": "322477"
  },
  {
    "text": "to react quickly enough?\nAbsolutely.",
    "start": "322477",
    "end": "324577"
  },
  {
    "text": "So when that event occurs,\nthe pods that are actually running",
    "start": "324577",
    "end": "329337"
  },
  {
    "text": "on these spot instances,\nand we'll just throw out some pods",
    "start": "329337",
    "end": "331908"
  },
  {
    "text": "out here with these applications.\nAnd remember those liveness ",
    "start": "331908",
    "end": "334418"
  },
  {
    "text": "and readiness probes\nare actually configured as well.",
    "start": "334419",
    "end": "337186"
  },
  {
    "text": "There's a two minute warning,\nthat node gets reclaimed",
    "start": "337609",
    "end": "340595"
  },
  {
    "text": "and those pods,\nthe node-termination-handler",
    "start": "340595",
    "end": "342595"
  },
  {
    "text": "will reshuffle those pods\nover to a running node",
    "start": "342595",
    "end": "345898"
  },
  {
    "text": "as that node gets replaced.",
    "start": "346021",
    "end": "347891"
  },
  {
    "text": "Interesting,\nso what's next for the architecture?",
    "start": "347891",
    "end": "351018"
  },
  {
    "text": "So we're going\nto replicate this globally.",
    "start": "351018",
    "end": "353018"
  },
  {
    "text": "And we're going to take this,\nso we're in the UK and Australia,",
    "start": "353412",
    "end": "355944"
  },
  {
    "text": "and of course in the US,\nand even Canada.",
    "start": "355944",
    "end": "358038"
  },
  {
    "text": "And the savings that we actually see\nhere is about a 60%, 70%, ",
    "start": "358773",
    "end": "362201"
  },
  {
    "text": "even upwards of 80% savings\nby going with the spot instance model",
    "start": "362201",
    "end": "366854"
  },
  {
    "text": "with a combination\nof the EC2 on-demand instances.",
    "start": "367283",
    "end": "370879"
  },
  {
    "text": "And so what we're really playing\nwith here is this ratio.",
    "start": "370880",
    "end": "374296"
  },
  {
    "text": "How many spot instances can we use\nversus how many on-demand instances",
    "start": "374602",
    "end": "380000"
  },
  {
    "text": "can we use to optimize\nthat cost savings.",
    "start": "380624",
    "end": "383320"
  },
  {
    "text": "Alright, well thank you very much\nfor sharing this innovative architecture.",
    "start": "383321",
    "end": "386005"
  },
  {
    "text": "Taps into a lot of the well architected \nframework pillars that we emphasize,",
    "start": "386266",
    "end": "390173"
  },
  {
    "text": "so we have cost optimization,\nwe have reliability.",
    "start": "390173",
    "end": "392696"
  },
  {
    "text": "And this is really an interesting\napproach to having both",
    "start": "393650",
    "end": "396410"
  },
  {
    "text": "from a compute standpoint\nand a persistence standpoint,",
    "start": "397575",
    "end": "400529"
  },
  {
    "text": "how you've handled that.\nThanks for your time today.",
    "start": "400529",
    "end": "402668"
  },
  {
    "text": "Sure.\nAnd thank you for watching.",
    "start": "402668",
    "end": "404677"
  }
]