[
  {
    "start": "0",
    "end": "38000"
  },
  {
    "text": "- Hi, I'm Gerardo from AWS.",
    "start": "450",
    "end": "2850"
  },
  {
    "text": "- I'm Muqi from Grab.",
    "start": "2850",
    "end": "4410"
  },
  {
    "text": "And \"This is My Architecture.\"",
    "start": "4410",
    "end": "6266"
  },
  {
    "text": "(upbeat music)",
    "start": "7141",
    "end": "9724"
  },
  {
    "text": "- Today we're gonna talk about",
    "start": "15630",
    "end": "16590"
  },
  {
    "text": "the architecture of GrabDefence.",
    "start": "16590",
    "end": "18750"
  },
  {
    "text": "What can you tell me about this platform?",
    "start": "18750",
    "end": "20490"
  },
  {
    "text": "- Yes.",
    "start": "20490",
    "end": "21323"
  },
  {
    "text": "GrabDefence is a B2B\nservice built by Grab.",
    "start": "21323",
    "end": "24240"
  },
  {
    "text": "We at Grab, we used to handle\na lot of fraud attacks,",
    "start": "24240",
    "end": "27210"
  },
  {
    "text": "and we did a decent job to prevent them.",
    "start": "27210",
    "end": "29490"
  },
  {
    "text": "So we believe this kind of service",
    "start": "29490",
    "end": "31260"
  },
  {
    "text": "is also needed in the market by others.",
    "start": "31260",
    "end": "33630"
  },
  {
    "text": "So we make this a B2B\nservice in the AWS platform,",
    "start": "33630",
    "end": "37260"
  },
  {
    "text": "which can be used by others.",
    "start": "37260",
    "end": "38550"
  },
  {
    "start": "38000",
    "end": "117000"
  },
  {
    "text": "- Brilliant, let's dive in.",
    "start": "38550",
    "end": "40140"
  },
  {
    "text": "So what can you tell me about",
    "start": "40140",
    "end": "41309"
  },
  {
    "text": "the main components of the architecture?",
    "start": "41310",
    "end": "43650"
  },
  {
    "text": "- Yes, so let me start\nfrom this user device here.",
    "start": "43650",
    "end": "46770"
  },
  {
    "text": "So GrabDefence has SDK,",
    "start": "46770",
    "end": "48608"
  },
  {
    "text": "which essentially collect a lot of signals",
    "start": "48608",
    "end": "51630"
  },
  {
    "text": "from user devices.",
    "start": "51630",
    "end": "53070"
  },
  {
    "text": "Wifi, IP address,",
    "start": "53070",
    "end": "54360"
  },
  {
    "text": "whether this device has\nbeen emulated, spoofed,",
    "start": "54360",
    "end": "57360"
  },
  {
    "text": "and then we can send this events",
    "start": "57360",
    "end": "60480"
  },
  {
    "text": "to collect signals all the way",
    "start": "60480",
    "end": "62370"
  },
  {
    "text": "to databases manager service for Kafka",
    "start": "62370",
    "end": "65760"
  },
  {
    "text": "and all the way to Neptune here",
    "start": "65760",
    "end": "69930"
  },
  {
    "text": "where we can collect all the information,",
    "start": "69930",
    "end": "72930"
  },
  {
    "text": "put this into a graph network database,",
    "start": "72930",
    "end": "75120"
  },
  {
    "text": "and it will later processing.",
    "start": "75120",
    "end": "76860"
  },
  {
    "text": "- So you're streaming data into Kafka.",
    "start": "76860",
    "end": "79170"
  },
  {
    "text": "Why have you chosen Kafka\nspecifically for this?",
    "start": "79170",
    "end": "81659"
  },
  {
    "text": "- Yeah, Kafka is an excellent way for us",
    "start": "81660",
    "end": "83400"
  },
  {
    "text": "to distribute different kind of signals",
    "start": "83400",
    "end": "87120"
  },
  {
    "text": "and analyze which can be later consumed",
    "start": "87120",
    "end": "89040"
  },
  {
    "text": "by different consumers\nlike the service here",
    "start": "89040",
    "end": "92850"
  },
  {
    "text": "where we gonna build a central future bank",
    "start": "92850",
    "end": "95580"
  },
  {
    "text": "and they need different signals",
    "start": "95580",
    "end": "97050"
  },
  {
    "text": "and intelligence from the Kafka",
    "start": "97050",
    "end": "99600"
  },
  {
    "text": "to further consume and also\nbuild MM model for this.",
    "start": "99600",
    "end": "102510"
  },
  {
    "text": "- And how much frequency\nare we talking about?",
    "start": "102510",
    "end": "104640"
  },
  {
    "text": "How frequently are the\ndevices pushing the...",
    "start": "104640",
    "end": "107100"
  },
  {
    "text": "Or streaming the data?",
    "start": "107100",
    "end": "108330"
  },
  {
    "text": "- Yeah, so it's super high frequency.",
    "start": "108330",
    "end": "110370"
  },
  {
    "text": "We are pretty much processing like",
    "start": "110370",
    "end": "111900"
  },
  {
    "text": "a couple hundreds events per second",
    "start": "111900",
    "end": "115140"
  },
  {
    "text": "and all the way to this service.",
    "start": "115140",
    "end": "117720"
  },
  {
    "start": "117000",
    "end": "162000"
  },
  {
    "text": "- Let's talk about Neptune for now.",
    "start": "117720",
    "end": "118920"
  },
  {
    "text": "Why did you choose a graph database?",
    "start": "118920",
    "end": "121770"
  },
  {
    "text": "- Yeah, graph database is\nexcellent database for us",
    "start": "121770",
    "end": "125100"
  },
  {
    "text": "to be able to capture a\nlot of hidden patterns",
    "start": "125100",
    "end": "128039"
  },
  {
    "text": "of the fraudster 'cause it's\nby nature, it's a graph.",
    "start": "128040",
    "end": "131280"
  },
  {
    "text": "So let's essentially we can capture,",
    "start": "131280",
    "end": "133170"
  },
  {
    "text": "let's say if there's two users,",
    "start": "133170",
    "end": "134370"
  },
  {
    "text": "yeah, looks totally independent,",
    "start": "134370",
    "end": "136230"
  },
  {
    "text": "irrelevant, but if they share the wifi,",
    "start": "136230",
    "end": "138269"
  },
  {
    "text": "they share the IP address\nor share something,",
    "start": "138270",
    "end": "140190"
  },
  {
    "text": "and we're able to essentially capture this",
    "start": "140190",
    "end": "142562"
  },
  {
    "text": "through the AWS Neptune.",
    "start": "142562",
    "end": "143916"
  },
  {
    "text": "- Okay, so what sort of queries\ndo you make against Neptune?",
    "start": "143916",
    "end": "147660"
  },
  {
    "text": "- Yeah, so for example, I also say,",
    "start": "147660",
    "end": "148987"
  },
  {
    "text": "\"Hey, between you and me,\nare we sharing any devices",
    "start": "148987",
    "end": "152310"
  },
  {
    "text": "or are we sharing any\nkind of credit card?\"",
    "start": "152310",
    "end": "154110"
  },
  {
    "text": "All this kind of thing.",
    "start": "154110",
    "end": "155010"
  },
  {
    "text": "It's usually super hard\nthrough some regular query,",
    "start": "155010",
    "end": "157980"
  },
  {
    "text": "but it's super, super easy",
    "start": "157980",
    "end": "159150"
  },
  {
    "text": "to be captured on the graph database.",
    "start": "159150",
    "end": "161040"
  },
  {
    "text": "- That makes sense, that makes sense.",
    "start": "161040",
    "end": "163230"
  },
  {
    "start": "162000",
    "end": "215000"
  },
  {
    "text": "So can you tell me about\nthese other databases?",
    "start": "163230",
    "end": "166050"
  },
  {
    "text": "So you've got Redis, DynamoDB and RDS.",
    "start": "166050",
    "end": "169980"
  },
  {
    "text": "What are you using them for?",
    "start": "169980",
    "end": "171300"
  },
  {
    "text": "- Yeah, so we have\ndifferent type of database.",
    "start": "171300",
    "end": "173400"
  },
  {
    "text": "It's mostly try to address\nneeds for different data type",
    "start": "173400",
    "end": "176310"
  },
  {
    "text": "and later query patterns.",
    "start": "176310",
    "end": "177959"
  },
  {
    "text": "For example, DynamoDB is a good way for us",
    "start": "177960",
    "end": "180870"
  },
  {
    "text": "to store all the user profiles,",
    "start": "180870",
    "end": "182310"
  },
  {
    "text": "and if we need to fetch some\nattributes of the users,",
    "start": "182310",
    "end": "185940"
  },
  {
    "text": "we can use DynamoDB to fetch it quickly.",
    "start": "185940",
    "end": "188070"
  },
  {
    "text": "And also RDS,",
    "start": "188070",
    "end": "189570"
  },
  {
    "text": "so we have different type\nof events from the user",
    "start": "189570",
    "end": "192570"
  },
  {
    "text": "and we want to make sure that if we need",
    "start": "192570",
    "end": "193890"
  },
  {
    "text": "to join different events for this user",
    "start": "193890",
    "end": "196230"
  },
  {
    "text": "to make sure we can get some\nkind of comprehensive view",
    "start": "196230",
    "end": "198269"
  },
  {
    "text": "for user activities in say past X hour",
    "start": "198270",
    "end": "201150"
  },
  {
    "text": "or something like this.",
    "start": "201150",
    "end": "202319"
  },
  {
    "text": "So we can use RDS to fetch data.",
    "start": "202320",
    "end": "204510"
  },
  {
    "text": "And last but not least, Redis,",
    "start": "204510",
    "end": "207599"
  },
  {
    "text": "'cause all the things I mentioned before,",
    "start": "207600",
    "end": "209400"
  },
  {
    "text": "they are super complete computations",
    "start": "209400",
    "end": "211260"
  },
  {
    "text": "and we use Redis for the cache purpose",
    "start": "211260",
    "end": "213569"
  },
  {
    "text": "so we can retrieve data\nin a super fast way.",
    "start": "213570",
    "end": "216000"
  },
  {
    "start": "215000",
    "end": "262000"
  },
  {
    "text": "- Awesome, that makes sense.",
    "start": "216000",
    "end": "218070"
  },
  {
    "text": "So how are you exposing all\nthis system to your customers?",
    "start": "218070",
    "end": "221430"
  },
  {
    "text": "So how can they ask questions about fraud?",
    "start": "221430",
    "end": "224099"
  },
  {
    "text": "- Yeah, so it's pretty much here, right?",
    "start": "224100",
    "end": "226290"
  },
  {
    "text": "Our clients is here.",
    "start": "226290",
    "end": "228269"
  },
  {
    "text": "So later say they have a user\nthey want to do a transaction,",
    "start": "228270",
    "end": "232320"
  },
  {
    "text": "how do we do the prediction here?",
    "start": "232320",
    "end": "233940"
  },
  {
    "text": "So our clients send events to us",
    "start": "233940",
    "end": "236850"
  },
  {
    "text": "and all the computational service",
    "start": "236850",
    "end": "239160"
  },
  {
    "text": "intelligence prediction\nservice over AWS EKS,",
    "start": "239160",
    "end": "241833"
  },
  {
    "text": "and then I saw the EKS service",
    "start": "242730",
    "end": "244620"
  },
  {
    "text": "can also try to fetch all the data",
    "start": "244620",
    "end": "247319"
  },
  {
    "text": "from all the central future\nbanks here along here,",
    "start": "247320",
    "end": "250440"
  },
  {
    "text": "and we collect all the signals together",
    "start": "250440",
    "end": "252600"
  },
  {
    "text": "along with the engine we\nhave to make a comprehensive",
    "start": "252600",
    "end": "256530"
  },
  {
    "text": "and non-biased decision\nfor this particular events",
    "start": "256530",
    "end": "259739"
  },
  {
    "text": "and then send the decision\nback to our customer.",
    "start": "259740",
    "end": "263400"
  },
  {
    "text": "- Okay.",
    "start": "263400",
    "end": "264233"
  },
  {
    "text": "So how much of this platform\nis actually multi-tenant",
    "start": "264233",
    "end": "268170"
  },
  {
    "text": "versus isolated or dedicated\nto specific customers?",
    "start": "268170",
    "end": "270910"
  },
  {
    "text": "- Yeah, so we spend a lot\nof effort to make sure like,",
    "start": "270910",
    "end": "273840"
  },
  {
    "text": "so there are no such kind\nof noisy neighbor issue",
    "start": "273840",
    "end": "276660"
  },
  {
    "text": "for our customer.",
    "start": "276660",
    "end": "278160"
  },
  {
    "text": "So every customer we onboard,",
    "start": "278160",
    "end": "280650"
  },
  {
    "text": "so they essentially have their own",
    "start": "280650",
    "end": "282570"
  },
  {
    "text": "dedicated database\ninstance or DynamoDB here",
    "start": "282570",
    "end": "285720"
  },
  {
    "text": "is dedicated table to make sure,",
    "start": "285720",
    "end": "287790"
  },
  {
    "text": "hey, everything like, so every customer,",
    "start": "287790",
    "end": "290310"
  },
  {
    "text": "if they are running super high traffic,",
    "start": "290310",
    "end": "292500"
  },
  {
    "text": "the other customer wouldn't be impacted",
    "start": "292500",
    "end": "294510"
  },
  {
    "text": "along with the EKS here\nwhere it can be easily 10X",
    "start": "294510",
    "end": "298290"
  },
  {
    "text": "within minutes of certain clients,",
    "start": "298290",
    "end": "300150"
  },
  {
    "text": "they are running certain promotion",
    "start": "300150",
    "end": "301259"
  },
  {
    "text": "and they want to 10X their traffic.",
    "start": "301260",
    "end": "304140"
  },
  {
    "text": "No other client's gonna be impacted.",
    "start": "304140",
    "end": "306060"
  },
  {
    "text": "- That makes sense.",
    "start": "306060",
    "end": "307440"
  },
  {
    "text": "What sort of scale have you\nachieved with this architecture?",
    "start": "307440",
    "end": "310110"
  },
  {
    "text": "- Yeah, so we are essentially like,",
    "start": "310110",
    "end": "312599"
  },
  {
    "text": "so at GrabDefence, we're helping like,",
    "start": "312600",
    "end": "315420"
  },
  {
    "text": "so we're doing the prediction\nfor millions of users",
    "start": "315420",
    "end": "318930"
  },
  {
    "text": "and see their day-to-day\nrisk events there.",
    "start": "318930",
    "end": "322350"
  },
  {
    "text": "And also like, so the daily log,",
    "start": "322350",
    "end": "324450"
  },
  {
    "text": "like so we are at terabyte level log size.",
    "start": "324450",
    "end": "327450"
  },
  {
    "text": "- Every day.\n- Yes.",
    "start": "327450",
    "end": "328410"
  },
  {
    "text": "- That's a lot. (laughs)",
    "start": "328410",
    "end": "330150"
  },
  {
    "text": "So Muqi, thanks a lot for sharing\nthis architecture with us.",
    "start": "330150",
    "end": "332850"
  },
  {
    "text": "- Thank you.",
    "start": "332850",
    "end": "333930"
  },
  {
    "text": "- And thank you for watching\n\"This is My Architecture.\"",
    "start": "333930",
    "end": "336150"
  },
  {
    "text": "See you next time.",
    "start": "336150",
    "end": "337638"
  },
  {
    "text": "(smooth music)",
    "start": "337638",
    "end": "340221"
  }
]