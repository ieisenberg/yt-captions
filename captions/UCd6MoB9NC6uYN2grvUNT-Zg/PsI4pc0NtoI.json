[
  {
    "start": "0",
    "end": "145000"
  },
  {
    "text": "all right hello hello hello Thursday afternoon are you still awake",
    "start": "620",
    "end": "8059"
  },
  {
    "text": "alright let's prove this please stand up and you can plane this gentleman in the",
    "start": "8059",
    "end": "14759"
  },
  {
    "text": "front row because we just talked about this said I have to turn it up everybody stand up come on so it's good to stretch",
    "start": "14759",
    "end": "20420"
  },
  {
    "text": "get your blood flow in here you go very",
    "start": "20420",
    "end": "25500"
  },
  {
    "text": "good for those two the water keep standing keep standing make some new friends behind you the rest we can you",
    "start": "25500",
    "end": "31320"
  },
  {
    "text": "can sit down it's okay yeah there we go next thing you will see me walking on the stage a little bit for multiple",
    "start": "31320",
    "end": "37590"
  },
  {
    "text": "reasons I'd like to walk but also I have a challenge with my wife every day who else does step challenges with the",
    "start": "37590",
    "end": "44399"
  },
  {
    "text": "partner there you go she's already in bed because it's your teachers she lives in Europe",
    "start": "44399",
    "end": "49620"
  },
  {
    "text": "I am from Europe in case you wonder where the name comes from and this strange accent anybody from Austria here by any chance",
    "start": "49620",
    "end": "56399"
  },
  {
    "text": "any Austrians Christi no no perfect so yeah i'll i have my",
    "start": "56399",
    "end": "64710"
  },
  {
    "text": "challenge my daily challenge with my wife and I think today I'll beat her because she was sitting in the office",
    "start": "64710",
    "end": "69900"
  },
  {
    "text": "all day and couldn't make that many steps now that today I want to talk about self-healing with AWS lambda I",
    "start": "69900",
    "end": "75750"
  },
  {
    "text": "want to have a quick show of hands who is coding on a day-to-day basis who is who is developing perfect who is on the",
    "start": "75750",
    "end": "83009"
  },
  {
    "text": "operation side who is writing config configuration on a regular basis who is",
    "start": "83009",
    "end": "89820"
  },
  {
    "text": "here because sre is just a hot thing these days it's pretty cool who actually",
    "start": "89820",
    "end": "97380"
  },
  {
    "text": "has sre in the title ok cool perfect I",
    "start": "97380",
    "end": "103140"
  },
  {
    "text": "have to disappoint you I'm neither an SRE engineer need an Operations I do",
    "start": "103140",
    "end": "108659"
  },
  {
    "text": "code what you will see from me today is lambda code maybe not the prettiest but",
    "start": "108659",
    "end": "114090"
  },
  {
    "text": "you see lambda code that I wrote it's actually hook up a SS code pipeline with",
    "start": "114090",
    "end": "119790"
  },
  {
    "text": "my monitoring system to stop bad code changes from flowing through a pipeline I'm also using lambda functions to",
    "start": "119790",
    "end": "126509"
  },
  {
    "text": "trigger self-healing or self outer remedy agent actions and I'm automating a couple of things that I've seen out",
    "start": "126509",
    "end": "132480"
  },
  {
    "text": "there in our own organization the way we do s eries the way we do self-healing and",
    "start": "132480",
    "end": "139709"
  },
  {
    "text": "also with a lot of the larger organizations that we are working with on a day to day basis the agenda",
    "start": "139709",
    "end": "146540"
  },
  {
    "start": "145000",
    "end": "246000"
  },
  {
    "text": "remediation use cases I want to talk a little bit about the things we see out there to get you and a little idea on",
    "start": "146540",
    "end": "151620"
  },
  {
    "text": "what I believe we can kind of remediate in a more automated way we talked about",
    "start": "151620",
    "end": "158220"
  },
  {
    "text": "this what's your name by the way Glenn right we talked about this you were you're doing this already for many many",
    "start": "158220",
    "end": "163620"
  },
  {
    "text": "years on your database side now you got bored of it and now you try to do this in the cloud so you say it's",
    "start": "163620",
    "end": "168630"
  },
  {
    "text": "self-healing is definitely possible right not only on the database side on the application the cloud I agree with",
    "start": "168630",
    "end": "174569"
  },
  {
    "text": "you and I'm sure there's many more use cases that we can automate that just give you a handful I am a strong",
    "start": "174569",
    "end": "181290"
  },
  {
    "text": "believer though that self-healing and hopefully glad you agree with me should not be done only in production we want",
    "start": "181290",
    "end": "187140"
  },
  {
    "text": "to prevent as many things as possible so prevent versus repair is much better I want to show your auto remediation is",
    "start": "187140",
    "end": "193290"
  },
  {
    "text": "code a concept that I believe we should all teach and mentor every developer so",
    "start": "193290",
    "end": "199590"
  },
  {
    "text": "if I am a developer I should not only write code I should also obviously write you know code s code test is called configuration",
    "start": "199590",
    "end": "205829"
  },
  {
    "text": "s code all the remediation is code that should also write what should be happening in case something is wrong and",
    "start": "205829",
    "end": "211290"
  },
  {
    "text": "then at the end I wanna introduce you to something that's called the unbreakable delivery pipeline they are dear actually",
    "start": "211290",
    "end": "216959"
  },
  {
    "text": "the the idea of that came to me last year at reinvent I watched a session",
    "start": "216959",
    "end": "222510"
  },
  {
    "text": "from Curtis Bray who showed me a SS coke pipeline and some advanced concepts and",
    "start": "222510",
    "end": "228389"
  },
  {
    "text": "then I came up with the idea of extending his concept and making sure that if you build a pipeline like this",
    "start": "228389",
    "end": "235440"
  },
  {
    "text": "you cannot push any code or configuration changes through a pipeline that in the end impact users or impact",
    "start": "235440",
    "end": "242160"
  },
  {
    "text": "the restless that's the whole idea all right good so Rama Nation use cases",
    "start": "242160",
    "end": "247829"
  },
  {
    "start": "246000",
    "end": "510000"
  },
  {
    "text": "I picked a couple use cases that I have seen out there in the field who has seen",
    "start": "247829",
    "end": "254250"
  },
  {
    "text": "processes crashing see processes crashing all the time if a process crash what can we do we start we can write",
    "start": "254250",
    "end": "261750"
  },
  {
    "text": "scripts for that obviously very simple use case another one follows flow disk",
    "start": "261750",
    "end": "266760"
  },
  {
    "text": "us full of slow disks slowing down things question things read we've seen this so we can do a lot of things to make these",
    "start": "266760",
    "end": "273510"
  },
  {
    "text": "problems go away we can either you know do it through vet chops and run on a",
    "start": "273510",
    "end": "279780"
  },
  {
    "text": "continuous basis and and scrape things and clean things up we can trigger it hopefully not too late another thing bad",
    "start": "279780",
    "end": "286650"
  },
  {
    "text": "configuration changes who has made a who has made a configuration change and",
    "start": "286650",
    "end": "291840"
  },
  {
    "text": "thought if everything is safe and afterwards it turned out it was a disaster yeah exactly we've been there and like",
    "start": "291840",
    "end": "299520"
  },
  {
    "text": "in this case you can see a deployment of a new war file a new java application",
    "start": "299520",
    "end": "304770"
  },
  {
    "text": "and at the deployment time we immediately see the response time going through the roof obviously some developers thought the code changes are",
    "start": "304770",
    "end": "311250"
  },
  {
    "text": "really smart and fast but it turned out to be not the case what else do we have another bad configuration change changing the DNS",
    "start": "311250",
    "end": "319920"
  },
  {
    "text": "routes incorrectly unfortunately website no longer accessible right that's a configuration change it has a huge",
    "start": "319920",
    "end": "326220"
  },
  {
    "text": "impact a very visible impact is anybody run into this problem yeah never ever we",
    "start": "326220",
    "end": "335850"
  },
  {
    "text": "can also say I am Andy and I am betting configuration changes next thing who has",
    "start": "335850",
    "end": "343950"
  },
  {
    "text": "low on resources so what you see here on the left side on the top a service that",
    "start": "343950",
    "end": "349320"
  },
  {
    "text": "currently runs on to processes or to containers and then you know if with",
    "start": "349320",
    "end": "354720"
  },
  {
    "text": "increased load or whatever else happens on the system when you run low on resources having the ability to scale up",
    "start": "354720",
    "end": "360990"
  },
  {
    "text": "now obviously we have auto scaling groups but all those killing groups I believe cannot handle every single",
    "start": "360990",
    "end": "366660"
  },
  {
    "text": "instance or every single use case why you want to scale up your resources but a very easy one that can be",
    "start": "366660",
    "end": "372060"
  },
  {
    "text": "obviously done with all the scaling group is CPU but hopefully you don't scale endlessly because if a developer",
    "start": "372060",
    "end": "377880"
  },
  {
    "text": "and I know that's developers in the room I'm also a developer so I kind of bash myself if you are checking in code that",
    "start": "377880",
    "end": "384360"
  },
  {
    "text": "is very CPU or memory aggressive and you just have auto scaling groups right AWS",
    "start": "384360",
    "end": "392760"
  },
  {
    "text": "will be very happy about it obviously because they sell a lot of more resources but this auto scaling should only go that far and then eventually you",
    "start": "392760",
    "end": "398790"
  },
  {
    "text": "want to do something else and fix the problem another is the opposite I have if you're over",
    "start": "398790",
    "end": "403990"
  },
  {
    "text": "provisioned after dropping traffic you want to scale down properly what else",
    "start": "403990",
    "end": "411130"
  },
  {
    "text": "you have blue green who is doing blue green deployments perfect by the way can",
    "start": "411130",
    "end": "417670"
  },
  {
    "text": "you show me this again blue grain deployments so in case you sit - in case you sit next to somebody that just",
    "start": "417670",
    "end": "423790"
  },
  {
    "text": "raised your hand and you always want it I want to do it - but I haven't done it just you know after the talk turn around",
    "start": "423790",
    "end": "430090"
  },
  {
    "text": "the other yeah so you raised your hands the people that didn't raise your hands maybe you want to say hey shall I tell",
    "start": "430090",
    "end": "437560"
  },
  {
    "text": "you a little bit how it's done but we can do obviously is you know figure out",
    "start": "437560",
    "end": "442660"
  },
  {
    "text": "blue versus screen what's better and basically you know faster move over or reverse the",
    "start": "442660",
    "end": "449500"
  },
  {
    "text": "trafficking case the new version doesn't work as expected what else do we have another way of figuring out if blue",
    "start": "449500",
    "end": "455620"
  },
  {
    "text": "green deployments are actually good and in this case again similar situation as earlier where the deployment of a new",
    "start": "455620",
    "end": "462640"
  },
  {
    "text": "version cost a complete dropping conversion rate if you think about an e-commerce store obviously not a good",
    "start": "462640",
    "end": "469540"
  },
  {
    "text": "version now these were a couple of lists it's a small list right Glenn I'm sure",
    "start": "469540",
    "end": "474760"
  },
  {
    "text": "you have many many more in your life especially on the database side and I'm sure if I ask the room what are the",
    "start": "474760",
    "end": "480760"
  },
  {
    "text": "typical actions that you can remediate then the list goes on and on and on just a couple what I've seen and I know some",
    "start": "480760",
    "end": "488410"
  },
  {
    "text": "of you in the room here are more advanced if they look at you that just raised your hand with the blue green deployment right you obviously not the",
    "start": "488410",
    "end": "494650"
  },
  {
    "text": "one that is doing things manually you already have automated everything yeah some may not right or some may don't",
    "start": "494650",
    "end": "500650"
  },
  {
    "text": "wanna admit it in the room next to others but I've seen companies and organizations that have not yet",
    "start": "500650",
    "end": "506140"
  },
  {
    "text": "automated everything would just maybe say me automated now what I want to talk",
    "start": "506140",
    "end": "512500"
  },
  {
    "start": "510000",
    "end": "610000"
  },
  {
    "text": "first off instead of telling you how we can fix these problems in production using lambda functions I first want to",
    "start": "512500",
    "end": "517900"
  },
  {
    "text": "talk about prevention and when I talk about prevention I want to start with the coding configuration change that is",
    "start": "517900",
    "end": "524620"
  },
  {
    "text": "made by the developer or whoever makes coding configuration changes and if you deploy a change into a staging",
    "start": "524620",
    "end": "530290"
  },
  {
    "text": "environment or whatever environment you have hopefully have some quality gates most quality gates I think are around",
    "start": "530290",
    "end": "537790"
  },
  {
    "text": "security your unit test your functional tests you may end up pushing this code",
    "start": "537790",
    "end": "544630"
  },
  {
    "text": "change into production and then you have your end users that are hopefully happy right but if something happens later",
    "start": "544630",
    "end": "550270"
  },
  {
    "text": "down the line like what I saw earlier bad code change results in high CPU",
    "start": "550270",
    "end": "556240"
  },
  {
    "text": "consumption results in the websites get slower people are getting not so easy you can see the frowning face now then I",
    "start": "556240",
    "end": "562360"
  },
  {
    "text": "wonder what can we learn from this besides trying to figure out how to fix this in production but what can we take",
    "start": "562360",
    "end": "568450"
  },
  {
    "text": "out of this how can we figure out how we can add this particular use case into an",
    "start": "568450",
    "end": "576070"
  },
  {
    "text": "automated pipeline into a quality gate right with your database experience again I'm sure you've seen that sequel",
    "start": "576070",
    "end": "581920"
  },
  {
    "text": "called index is missing and all that stuff right so I'm sure if you see a problem in production then you want to figure",
    "start": "581920",
    "end": "588850"
  },
  {
    "text": "out okay how can i how did I how did you figure this out how can i replicate this problem in a pre prod environment so the",
    "start": "588850",
    "end": "596020"
  },
  {
    "text": "next time the developer makes the same mistake it is automatically blocked by the pipeline that's what I try to get to",
    "start": "596020",
    "end": "602740"
  },
  {
    "text": "so a couple of examples your use cases and I am and metrics that I believe we should shift left so one of the things",
    "start": "602740",
    "end": "611020"
  },
  {
    "start": "610000",
    "end": "720000"
  },
  {
    "text": "that I see very often especially when talking with or working with application developers is bad log behavior right who",
    "start": "611020",
    "end": "620020"
  },
  {
    "text": "has seen this being filled up by huge log files okay keep your hands up who of",
    "start": "620020",
    "end": "627130"
  },
  {
    "text": "you actually went to the developer and show them the log file and ask them how much of that is actually useful",
    "start": "627130",
    "end": "633100"
  },
  {
    "text": "information okay most of you and then what did you get back every log message that was in there was",
    "start": "633100",
    "end": "638920"
  },
  {
    "text": "valid in the cheap and very informational not always we'll get back",
    "start": "638920",
    "end": "643930"
  },
  {
    "text": "to yeah yeah so turned on debug verbose logging something like that right and",
    "start": "643930",
    "end": "650170"
  },
  {
    "text": "forgot to turn it off in production so what I am proposing is if you see these",
    "start": "650170",
    "end": "655960"
  },
  {
    "text": "cases in production then become mentors to whoever is responsible for your",
    "start": "655960",
    "end": "662890"
  },
  {
    "text": "development teams for your CI CD pipelines and figure out a way how we",
    "start": "662890",
    "end": "668470"
  },
  {
    "text": "can the number of log messages the amount of log size overall in your CI CD in your",
    "start": "668470",
    "end": "675860"
  },
  {
    "text": "tests and measure the size from build to build to build and if a developer makes",
    "start": "675860",
    "end": "681139"
  },
  {
    "text": "a code change like the debug lock changing it to debug lock and all of a sudden the log volume for a test goes",
    "start": "681139",
    "end": "689029"
  },
  {
    "text": "from one megabyte to 10 megabytes you want to say I'm sure your code is awesome but something is wrong unless",
    "start": "689029",
    "end": "695449"
  },
  {
    "text": "these additional nine megabytes are legit and you need it right so and you",
    "start": "695449",
    "end": "700730"
  },
  {
    "text": "know there's a lot of things that we can do what I try to do here with the better bit of slides I believe I share and the",
    "start": "700730",
    "end": "706249"
  },
  {
    "text": "recording is online I see people taking pictures that's great but I always try it with my use cases the use case the",
    "start": "706249",
    "end": "712519"
  },
  {
    "text": "metrics how to query it has different ways I just gave you an example but try to figure out how to bake this into a",
    "start": "712519",
    "end": "718429"
  },
  {
    "text": "pipeline next example detecting change in resource consumption the classical",
    "start": "718429",
    "end": "723860"
  },
  {
    "start": "720000",
    "end": "770000"
  },
  {
    "text": "what I brought the earlier CPU or maybe also memory same scenario if Blythewood",
    "start": "723860",
    "end": "731149"
  },
  {
    "text": "we've seen in our organization upgrading to a new log framework aptly updating to",
    "start": "731149",
    "end": "736249"
  },
  {
    "text": "a new alarm a per write a new version we actually had the case where the vendor told us we have to update the library",
    "start": "736249",
    "end": "743749"
  },
  {
    "text": "because our version right now has a security hole so we upgraded it",
    "start": "743749",
    "end": "749350"
  },
  {
    "text": "unfortunately dead version will be upgraded to had a memory leak right and",
    "start": "749350",
    "end": "754879"
  },
  {
    "text": "we blindly followed the rule without having an eye on the memory usage of this library now if you bake this into",
    "start": "754879",
    "end": "760579"
  },
  {
    "text": "your pipeline you can detect these problems early before they kill your production man so a lot of ways to query",
    "start": "760579",
    "end": "768079"
  },
  {
    "text": "this information detecting detect changes in dependencies another another",
    "start": "768079",
    "end": "775490"
  },
  {
    "start": "770000",
    "end": "832000"
  },
  {
    "text": "example that I see more and more now as we're moving to more smaller services what do you call the micro services or I",
    "start": "775490",
    "end": "781579"
  },
  {
    "text": "don't care what you call them but the idea is if you are building componentize",
    "start": "781579",
    "end": "789470"
  },
  {
    "text": "in your systems your building micro services and then you think hey there's a new service out there I'll just call",
    "start": "789470",
    "end": "795679"
  },
  {
    "text": "it and there's another one here and I call it and make a code change or configuration change that introduces new",
    "start": "795679",
    "end": "800749"
  },
  {
    "text": "dependencies then often it happens consciously but it doesn't often happen consciously",
    "start": "800749",
    "end": "807040"
  },
  {
    "text": "sometimes it happens because you are making a configuration change that has an unintentional dish brings in an",
    "start": "807040",
    "end": "812860"
  },
  {
    "text": "addition and intentional additional dependencies so what I'm saying what you",
    "start": "812860",
    "end": "818410"
  },
  {
    "text": "should do is try to figure out how you can validate the number of incoming and",
    "start": "818410",
    "end": "823839"
  },
  {
    "text": "outgoing dependencies when you are pushing your code changes to the pipeline all right what else do we have",
    "start": "823839",
    "end": "832450"
  },
  {
    "start": "832000",
    "end": "921000"
  },
  {
    "text": "here oh and I wanted a lava lots exceptions who loves exceptions being",
    "start": "832450",
    "end": "839620"
  },
  {
    "text": "logged stack traces endless very useful in cases but not always what we are",
    "start": "839620",
    "end": "848140"
  },
  {
    "text": "always looking out for is how many exceptions are thrown in the application and not necessarily locked we talked",
    "start": "848140",
    "end": "854950"
  },
  {
    "text": "about logging earlier not every exception in a Java when adult net application actually sees the light of a",
    "start": "854950",
    "end": "861370"
  },
  {
    "text": "log most exceptions are thrown are catched who ever what they do with it",
    "start": "861370",
    "end": "867220"
  },
  {
    "text": "most exceptions that we see happen in frameworks thousands and millions of",
    "start": "867220",
    "end": "873310"
  },
  {
    "text": "them never seen the light of a log file but consuming a lot of resources every exception and much where their Java",
    "start": "873310",
    "end": "879790"
  },
  {
    "text": "developers in the room internet developers any Java developers come on here we go every time you create an",
    "start": "879790",
    "end": "885820"
  },
  {
    "text": "exception object the JVM fills the stack trace and it's a lot of memory that also",
    "start": "885820",
    "end": "891880"
  },
  {
    "text": "needs to be garbage collected later on and therefore what we are always looking",
    "start": "891880",
    "end": "897610"
  },
  {
    "text": "for our JMX metrics or any metrics that your runtime exposes or your monitoring",
    "start": "897610",
    "end": "902740"
  },
  {
    "text": "tool exposes that tells you how many exception objects were actually created and fraud not necessarily which exceptions made it to the log file very",
    "start": "902740",
    "end": "910120"
  },
  {
    "text": "important make sense a little bit cool",
    "start": "910120",
    "end": "915820"
  },
  {
    "text": "maybe I need to make you stand up again to get your blood flowing all right",
    "start": "915820",
    "end": "920920"
  },
  {
    "text": "what's the next one change in performance behavior right again bad",
    "start": "920920",
    "end": "929529"
  },
  {
    "start": "921000",
    "end": "975000"
  },
  {
    "text": "code change maybe change in performance behavior what we are looking at here is obviously response times but also",
    "start": "929529",
    "end": "935140"
  },
  {
    "text": "throughput and performance for instance who is doing Kenny re-releases right so but we",
    "start": "935140",
    "end": "941180"
  },
  {
    "text": "are monitoring with what we try to do is actually figure out and it's a little hard to see maybe here but every line",
    "start": "941180",
    "end": "947330"
  },
  {
    "text": "here represents a maybe an a container instance one is blue green canary one",
    "start": "947330",
    "end": "952730"
  },
  {
    "text": "canary two and try to figure out if you get the same throughput through canary a",
    "start": "952730",
    "end": "958610"
  },
  {
    "text": "versus canary B or CPU a memory consumption all right you do not only",
    "start": "958610",
    "end": "964400"
  },
  {
    "text": "wanna you wanna you do not only want to test or look for performance but also resource consumption per canary and then",
    "start": "964400",
    "end": "970490"
  },
  {
    "text": "immediately alert in case something is wrong something is abnormal detecting",
    "start": "970490",
    "end": "977120"
  },
  {
    "text": "change in error behavior and either your classical HTTP failure rate analysis",
    "start": "977120",
    "end": "983000"
  },
  {
    "text": "JavaScript error rate analysis I hope all of you that are building and working",
    "start": "983000",
    "end": "989600"
  },
  {
    "text": "on any applications that an end user can access through a browser or a mobile phone are using functional tests yes no yeah",
    "start": "989600",
    "end": "999770"
  },
  {
    "text": "make sure if you're using tools like selenium or any other tools that drive a mobile device there do you also figure",
    "start": "999770",
    "end": "1007960"
  },
  {
    "text": "out are there any hidden JavaScript errors that maybe are not visible to the end-user but still if they are thrown it",
    "start": "1007960",
    "end": "1015160"
  },
  {
    "text": "means some part of the application might not be functional even though maybe your test doesn't see it because maybe you're",
    "start": "1015160",
    "end": "1021520"
  },
  {
    "text": "not testing this particular piece but we are always looking at number of child JavaScript errors that come in as well",
    "start": "1021520",
    "end": "1027600"
  },
  {
    "text": "what else do we have changed detecting change in users in the errors that's a",
    "start": "1027600",
    "end": "1032620"
  },
  {
    "start": "1028000",
    "end": "1094000"
  },
  {
    "text": "big one the the first day figuring out how many interactions does it take to",
    "start": "1032620",
    "end": "1038650"
  },
  {
    "text": "fulfill a certain use case and if you think of Amazon if you buy something on",
    "start": "1038650",
    "end": "1044050"
  },
  {
    "text": "ms and you go to the website you log on you put your or your hopefully automatically logged on but you you you",
    "start": "1044050",
    "end": "1049870"
  },
  {
    "text": "search your products you put it into the carton there's a one-click checkout if they change something in this workflow",
    "start": "1049870",
    "end": "1055390"
  },
  {
    "text": "and now you have one or two additional steps that means you have to spend more resources per end-user",
    "start": "1055390",
    "end": "1061540"
  },
  {
    "text": "flow interaction which means you know at first of all I think it's not not nice for the end user if things take longer",
    "start": "1061540",
    "end": "1068110"
  },
  {
    "text": "if unless it's really intentional but it really means more resource consumption only on on your service side more",
    "start": "1068110",
    "end": "1075429"
  },
  {
    "text": "interactions were images that they download so therefore what we always look for is when you run your functional",
    "start": "1075429",
    "end": "1081970"
  },
  {
    "text": "tests look at things like total page size number of resources number of of requests being sent back and forth also",
    "start": "1081970",
    "end": "1089260"
  },
  {
    "text": "check if your images are compressed if all of these things are taken care of all right so show you a list of metrics again the",
    "start": "1089260",
    "end": "1096789"
  },
  {
    "start": "1094000",
    "end": "1130000"
  },
  {
    "text": "number is by far not not or they the list is performing a complete claim I'm sure there's a lot of metrics that are",
    "start": "1096789",
    "end": "1102220"
  },
  {
    "text": "missed here especially on the database side for instance the number of interactions with the database the classical behavior where a developer",
    "start": "1102220",
    "end": "1108669"
  },
  {
    "text": "makes a code change maybe uses a noir mapper that is kind of shield in the database interaction but then through",
    "start": "1108669",
    "end": "1115000"
  },
  {
    "text": "configuration change changes from lazy to eager loading making too many round trips to the database the classical N+ 1",
    "start": "1115000",
    "end": "1120970"
  },
  {
    "text": "query problem where the same curry gets executed hundreds and thousands of times right these are things we can detect in",
    "start": "1120970",
    "end": "1127659"
  },
  {
    "text": "the pipeline automatically alright so how can we add this to the pipeline so",
    "start": "1127659",
    "end": "1133480"
  },
  {
    "start": "1130000",
    "end": "1180000"
  },
  {
    "text": "basically what I just showed you I can take these use cases and I gave you a handful I hope when you find problems in",
    "start": "1133480",
    "end": "1140260"
  },
  {
    "text": "production and you know how to detail how you detect it what you looked at that you can automate that into the",
    "start": "1140260",
    "end": "1146889"
  },
  {
    "text": "pipeline so figure out how you can grab these metrics this piece of information and then tell and ask the folks in the",
    "start": "1146889",
    "end": "1155799"
  },
  {
    "text": "organization that are responsible for the pipeline to bake it in into the quality gates and for AWS is anybody",
    "start": "1155799",
    "end": "1165070"
  },
  {
    "text": "using code pipeline hit a place called pipeline yeah who's using Jenkins in here all right perfect",
    "start": "1165070",
    "end": "1171309"
  },
  {
    "text": "whether it's Jenkins code pipeline bamboo conquers we have the concept of",
    "start": "1171309",
    "end": "1176620"
  },
  {
    "text": "quality gates so make sure you capture these metrics and validate them so now to my part what I've implemented this is",
    "start": "1176620",
    "end": "1183549"
  },
  {
    "start": "1180000",
    "end": "1227000"
  },
  {
    "text": "the inspiration I got last year from Curtis Bray the session is online",
    "start": "1183549",
    "end": "1188590"
  },
  {
    "text": "obviously and he basically introduced me to the concept of how I can actually use",
    "start": "1188590",
    "end": "1194649"
  },
  {
    "text": "lambda functions in a SS code pipeline so while the pipeline runs reach out to",
    "start": "1194649",
    "end": "1200289"
  },
  {
    "text": "other tools to figure out are we meeting certain you know quality criterias he was actually",
    "start": "1200289",
    "end": "1206789"
  },
  {
    "text": "showing it by running a functional script he was using a belief selenium and then as the pipeline ran and",
    "start": "1206789",
    "end": "1213539"
  },
  {
    "text": "selenium started running on the behind-the-scenes he was actually interrupting the pipeline at the time",
    "start": "1213539",
    "end": "1220169"
  },
  {
    "text": "when selenium said something is wrong right and he introduced me to that concept on how we can do this and what",
    "start": "1220169",
    "end": "1227519"
  },
  {
    "start": "1227000",
    "end": "1310000"
  },
  {
    "text": "I've also done I have looked at how much time bhava is one of my colleagues and",
    "start": "1227519",
    "end": "1232769"
  },
  {
    "text": "also somebody that I look up for or up to he work is the chief performance architect at dynaTrace and what he does",
    "start": "1232769",
    "end": "1241009"
  },
  {
    "text": "he has we are using Jenkins internally so what he does every day he runs a set",
    "start": "1241009",
    "end": "1248700"
  },
  {
    "text": "of load against the system in staging and as you can see here on what's the",
    "start": "1248700",
    "end": "1254669"
  },
  {
    "text": "dates here it is November 16 and 17 right he always runs load against the system and he says Andy when I look at",
    "start": "1254669",
    "end": "1264029"
  },
  {
    "text": "my data well first of all I stopped looking at it manually I automated it but when I look at at these metrics the",
    "start": "1264029",
    "end": "1270899"
  },
  {
    "text": "number of log messages written the number of database interactions the performance the throughput then I",
    "start": "1270899",
    "end": "1276539"
  },
  {
    "text": "typically have a set of metrics that I'm analyzing for a particular piece of our",
    "start": "1276539",
    "end": "1282359"
  },
  {
    "text": "software architecture and it's different metrics for some it's more response time and resource related for some it might",
    "start": "1282359",
    "end": "1288869"
  },
  {
    "text": "be something else but he said the set of metrics is what I call the performance signature and what I what I would he",
    "start": "1288869",
    "end": "1295320"
  },
  {
    "text": "does he says I basically look at key metrics from build to build that I",
    "start": "1295320",
    "end": "1301230"
  },
  {
    "text": "always push to the pipeline where I always execute the same time and same amount of load and in case I see a",
    "start": "1301230",
    "end": "1306330"
  },
  {
    "text": "regression I know something is wrong and the way he actually does it he has he's",
    "start": "1306330",
    "end": "1313259"
  },
  {
    "start": "1310000",
    "end": "1410000"
  },
  {
    "text": "evaluating the performance signature for every built so the the line here or the",
    "start": "1313259",
    "end": "1319049"
  },
  {
    "text": "column is basically a build the one highlighted is the one from January 13",
    "start": "1319049",
    "end": "1324269"
  },
  {
    "text": "so he evaluates the performance signature of every build he has multiple metrics that he's validating for every",
    "start": "1324269",
    "end": "1331139"
  },
  {
    "text": "build and in case there is a regression to the previous P so for instance the number of log",
    "start": "1331139",
    "end": "1336480"
  },
  {
    "text": "messages goes up or the number of database interactions goes up then he in",
    "start": "1336480",
    "end": "1342570"
  },
  {
    "text": "this table here me obviously displays the valley but he has like a little heat field very simple but he can look at",
    "start": "1342570",
    "end": "1349560"
  },
  {
    "text": "this dashboard and immediately sees if there is more red than there should be",
    "start": "1349560",
    "end": "1355560"
  },
  {
    "text": "and then immediately notifies the developers now he's not looking at this anymore every day he automated that as well so",
    "start": "1355560",
    "end": "1362250"
  },
  {
    "text": "what he actually does when there's a certain percentage of metrics that fell over he's automatically creating a tea",
    "start": "1362250",
    "end": "1369660"
  },
  {
    "text": "reticular using JIRA internally and assigns it to those developers that made code changes in the last 24 hours on the",
    "start": "1369660",
    "end": "1376590"
  },
  {
    "text": "component that he's testing and is then adding a link to this dashboard so developer comes in in the morning knows",
    "start": "1376590",
    "end": "1382980"
  },
  {
    "text": "his compose code that he changed yesterday was just battled as the battle tested overnight and he sees that you",
    "start": "1382980",
    "end": "1389940"
  },
  {
    "text": "know 20% CPU increased 50% more logging interactions 50 percent maybe more database interactions and then they get",
    "start": "1389940",
    "end": "1396630"
  },
  {
    "text": "a cheer a ticket now I like this concept he implemented this several years ago and I thought how can i replicate this",
    "start": "1396630",
    "end": "1404190"
  },
  {
    "text": "in a way that we can easily use this for instance in an AWS environment so first",
    "start": "1404190",
    "end": "1410400"
  },
  {
    "start": "1410000",
    "end": "1500000"
  },
  {
    "text": "of all what I did I came up with a at",
    "start": "1410400",
    "end": "1415590"
  },
  {
    "text": "the notion of the term monitoring his code so I said it's it's great if I have",
    "start": "1415590",
    "end": "1421050"
  },
  {
    "text": "somebody like Thomas that knows which metrics to look at but Thomas if he like in our organizations we have we have 700",
    "start": "1421050",
    "end": "1428970"
  },
  {
    "text": "developers and we have a lot of different development teams he cannot go to every individual developers and sit",
    "start": "1428970",
    "end": "1434040"
  },
  {
    "text": "down with them and say what metrics do we want to validate what he can do he can mentor them and say hey get hey I",
    "start": "1434040",
    "end": "1441300"
  },
  {
    "text": "need to do some same pick somebody else now what's your name Andrew hey Andrew you know best which component you",
    "start": "1441300",
    "end": "1449490"
  },
  {
    "text": "develop in you probably know best if you have any isolation requirements for response time memory dependencies Andrew",
    "start": "1449490",
    "end": "1457020"
  },
  {
    "text": "you just try to change a JSON file a UML file and just list which metrics important for you well your isolates are",
    "start": "1457020",
    "end": "1463740"
  },
  {
    "text": "how you want to compare it do you want to fail if your 10% over a certain limit",
    "start": "1463740",
    "end": "1469130"
  },
  {
    "text": "so I took the same concept basically I call this month spec monitoring specification is code you can see a",
    "start": "1469130",
    "end": "1476220"
  },
  {
    "text": "performance signature time series which aggregates average min max 90th percentile and also what I have on the",
    "start": "1476220",
    "end": "1483480"
  },
  {
    "text": "bottom is dependency metrics now these are metrics that I get from my monitoring tool and again the way that I",
    "start": "1483480",
    "end": "1490350"
  },
  {
    "text": "implemented it as a first use cases with dynaTrace but you can I'm sure whatever tools you have you can do something",
    "start": "1490350",
    "end": "1496170"
  },
  {
    "text": "similar but the idea is put it into a config file all right what do I do with this config file the way I've",
    "start": "1496170",
    "end": "1502530"
  },
  {
    "start": "1500000",
    "end": "1605000"
  },
  {
    "text": "implemented it I'm using code pipeline and then in my code pipeline after I",
    "start": "1502530",
    "end": "1509130"
  },
  {
    "text": "deploy my build after I deploy or start",
    "start": "1509130",
    "end": "1514200"
  },
  {
    "text": "my tests I have a lambda function that I called that is called register build",
    "start": "1514200",
    "end": "1520590"
  },
  {
    "text": "validation register dynaTrace build variation in this case and what this",
    "start": "1520590",
    "end": "1525870"
  },
  {
    "text": "does andr red or andrey andrew okay",
    "start": "1525870",
    "end": "1531390"
  },
  {
    "text": "perfect what this does is basically when you are pushing this pipeline you say my build",
    "start": "1531390",
    "end": "1538020"
  },
  {
    "text": "just got deployed we're starting some tests that may run a minute maybe five minutes maybe an hour I want to register",
    "start": "1538020",
    "end": "1544380"
  },
  {
    "text": "this bill to be validated against my performance signature okay I have a",
    "start": "1544380",
    "end": "1550080"
  },
  {
    "text": "question for you that for those that already wrote lambda functions and that",
    "start": "1550080",
    "end": "1555300"
  },
  {
    "text": "I've seen hopefully coal pipeline will have an understanding of a pipeline if this pipeline runs through I deployed my I built I start my tests and then I say",
    "start": "1555300",
    "end": "1563430"
  },
  {
    "text": "register build validation if these tests let's say run for an hour and then I say",
    "start": "1563430",
    "end": "1569640"
  },
  {
    "text": "I wanna I want to do some validation if I call this lambda function a lambda",
    "start": "1569640",
    "end": "1576600"
  },
  {
    "text": "function is probably not people not or lambda functions are not intended to run for like an hour right - wait agree or",
    "start": "1576600",
    "end": "1583650"
  },
  {
    "text": "not I agree so this is why this is",
    "start": "1583650",
    "end": "1588900"
  },
  {
    "text": "actually the concept that Curtis brain both me - but this is why I called the lambda function register so I basically",
    "start": "1588900",
    "end": "1594420"
  },
  {
    "text": "say I have a built that is currently being tested and I want something else somebody to have a look at it maybe it's",
    "start": "1594420",
    "end": "1600420"
  },
  {
    "text": "somebody main well the look the dashboards were I build some automation around it so this is what I built this is again thanks to to Curtis",
    "start": "1600420",
    "end": "1609330"
  },
  {
    "start": "1605000",
    "end": "1795000"
  },
  {
    "text": "what actually happens I call my lambda function that says this is the code from you with your Mon spec file with all the",
    "start": "1609330",
    "end": "1618179"
  },
  {
    "text": "information what is actually the build you know which microservice and what I did I write all of this information into",
    "start": "1618179",
    "end": "1626250"
  },
  {
    "text": "at the name of the be table so this is my request in the old days maybe I send",
    "start": "1626250",
    "end": "1631620"
  },
  {
    "text": "an email to Thomas right my colleague and I say Thomas I just started my pipeline ever look at these dashboards",
    "start": "1631620",
    "end": "1638040"
  },
  {
    "text": "and tell me what you think now I basically write this into the name of the B table with the Mon spec file the",
    "start": "1638040",
    "end": "1645900"
  },
  {
    "text": "current time frame also what I want to kind of compare and what I should do in",
    "start": "1645900",
    "end": "1651900"
  },
  {
    "text": "case I eventually or whoever is taking care of it approves or rejects it so I",
    "start": "1651900",
    "end": "1657030"
  },
  {
    "text": "write this into a table and then I'm using CloudWatch events because in this case I'm automating Thomas away I'm",
    "start": "1657030",
    "end": "1663840"
  },
  {
    "text": "using cloud I'll call watch events I'm using cloud watch events to call every minute another lambda function that does",
    "start": "1663840",
    "end": "1672240"
  },
  {
    "text": "the following thing it goes up and pulls information from that the name of the B table and says did somebody like Andrew",
    "start": "1672240",
    "end": "1678660"
  },
  {
    "text": "put in a request yes did enough time passed because what you can also say",
    "start": "1678660",
    "end": "1685130"
  },
  {
    "text": "right you cannot event you cannot barely start validating right after the first minute if you're man especially low the",
    "start": "1685130",
    "end": "1690809"
  },
  {
    "text": "performance tests you wanna at least go through the first 10-15 minutes so I'm pulling it down and I say has enough",
    "start": "1690809",
    "end": "1696450"
  },
  {
    "text": "time passed so they can start my evaluation that's great Andrew say it wait for five minutes and then start",
    "start": "1696450",
    "end": "1701610"
  },
  {
    "text": "evaluating if time is right the lambda function parses your config file pulls",
    "start": "1701610",
    "end": "1710700"
  },
  {
    "text": "down pulls in all the metrics and the data from the underlying tools it might be just want to let might be many tools and then writes back the results and",
    "start": "1710700",
    "end": "1718290"
  },
  {
    "text": "what it also does in case there's something wrong one of the metrics goes",
    "start": "1718290",
    "end": "1724200"
  },
  {
    "text": "all the way I call back to the pipeline that is actually sitting here in the",
    "start": "1724200",
    "end": "1729270"
  },
  {
    "text": "approval stage because the pipeline starts running I deploy the app I start my tests I register my build and the",
    "start": "1729270",
    "end": "1735600"
  },
  {
    "text": "pipe keep staying here in the approval stage and this is normally a manual step but now that automated it because this is my",
    "start": "1735600",
    "end": "1742540"
  },
  {
    "text": "build validation function yeah and I think why this is cool it's for multiple",
    "start": "1742540",
    "end": "1747580"
  },
  {
    "text": "reasons first of all I just automate it a manual step but if I if you if you",
    "start": "1747580",
    "end": "1753460"
  },
  {
    "text": "think about a longer running test suite let's say your tests run for an hour or",
    "start": "1753460",
    "end": "1758530"
  },
  {
    "text": "five hours what this lambda function can do we can say hey and row",
    "start": "1758530",
    "end": "1763690"
  },
  {
    "text": "he wants to validate my build he says wait at least 15 minutes he also told me oh I know from history that the builds",
    "start": "1763690",
    "end": "1769720"
  },
  {
    "text": "that the tests typically run an hour but you know what I do I'm smart because already after 15 minutes I start looking",
    "start": "1769720",
    "end": "1776290"
  },
  {
    "text": "at all the metrics and if I see after after 20 minutes that the disks already getting full I already have a regression",
    "start": "1776290",
    "end": "1782620"
  },
  {
    "text": "I immediately stopped the pipeline because there's no need to keep the pipeline running until all the tests are",
    "start": "1782620",
    "end": "1788470"
  },
  {
    "text": "complete does it make sense it speeds up also your pipeline execution alright so",
    "start": "1788470",
    "end": "1796390"
  },
  {
    "start": "1795000",
    "end": "2206000"
  },
  {
    "text": "this is how it looks like in how I implemented it and I'll show you a lifetime in a second so in case everything is great",
    "start": "1796390",
    "end": "1802510"
  },
  {
    "text": "I approve the step and in case it's not good I reject it and then I put a link",
    "start": "1802510",
    "end": "1807700"
  },
  {
    "text": "in there that actually brings me to a a",
    "start": "1807700",
    "end": "1813100"
  },
  {
    "text": "dashboard that I also built so the name ODB table that I was talking about we're putting the request and also sent back",
    "start": "1813100",
    "end": "1819550"
  },
  {
    "text": "the results I basically built another lambda function that is ten just visualizing the data so that means I",
    "start": "1819550",
    "end": "1825880"
  },
  {
    "text": "actually see every row here is a metric right and every column is a built so I",
    "start": "1825880",
    "end": "1832270"
  },
  {
    "text": "see my individual builds and I also see in case one of my metrics goes out of",
    "start": "1832270",
    "end": "1837960"
  },
  {
    "text": "what I want there's also a nice visualization nice history now the",
    "start": "1837960",
    "end": "1844600"
  },
  {
    "text": "reason why I had to build this also like why I'm doing this like like this I really like code pipeline I have however",
    "start": "1844600",
    "end": "1852280"
  },
  {
    "text": "personally have other favors and when it comes to the ICD tools I would wish that we can get something in cope I plan",
    "start": "1852280",
    "end": "1859600"
  },
  {
    "text": "where this is kind of like natively built into the pipeline where we have build artifacts or build results that can be visualized that I don't have to",
    "start": "1859600",
    "end": "1865870"
  },
  {
    "text": "build my own thing but it works actually pretty easy all right so let's say a quick demo flipped over here to to to",
    "start": "1865870",
    "end": "1877960"
  },
  {
    "text": "let me duplicate this year all right so I got my pipeline and actually let it I",
    "start": "1877960",
    "end": "1884950"
  },
  {
    "text": "uploaded a new build earlier sure so I let it run while while I'm talking so the pipeline as I said",
    "start": "1884950",
    "end": "1892030"
  },
  {
    "text": "earlier is really really simple it's in there it's a micro service it's a noches micro service I'm deploying my my my",
    "start": "1892030",
    "end": "1898929"
  },
  {
    "text": "build now then I'm running my tests then I have my register build validation and",
    "start": "1898929",
    "end": "1904630"
  },
  {
    "text": "in the back what happens I should show you a couple of things that I mentioned earlier let me quickly go to my demo DB",
    "start": "1904630",
    "end": "1914160"
  },
  {
    "text": "so every time the pipeline runs and let me see if just go in here bigger right",
    "start": "1914160",
    "end": "1920500"
  },
  {
    "text": "here's my build validation requests this is my table I got my items in here that",
    "start": "1920500",
    "end": "1925650"
  },
  {
    "text": "means every time around my pipeline I have an entry in my table that says this pipeline at this particular time stamp",
    "start": "1925650",
    "end": "1932500"
  },
  {
    "text": "has asked me to approve staging or a production so these are different stages in my pipeline",
    "start": "1932500",
    "end": "1938590"
  },
  {
    "text": "what else do I have you I have my Mon spec file I'll show you that in a better editor later on and these I think",
    "start": "1938590",
    "end": "1946630"
  },
  {
    "text": "they're most important things now the Mon spec file this is what I what I talked about earlier just zoom in here a",
    "start": "1946630",
    "end": "1954220"
  },
  {
    "text": "little bit right this is basically my file it says I want to validate the average response time I wanna have the",
    "start": "1954220",
    "end": "1960400"
  },
  {
    "text": "90th percentile I wanna have to have failure rate requests per minute and then this is a favorite from me this is",
    "start": "1960400",
    "end": "1966820"
  },
  {
    "text": "the to and from relationships so my monitoring tool automatically detects",
    "start": "1966820",
    "end": "1972549"
  },
  {
    "text": "all violet when I deploy my app and I run my into intest it understands how many calls are coming in from this",
    "start": "1972549",
    "end": "1978640"
  },
  {
    "text": "service maybe from the front end from your from the front end component the front end services how many calls does",
    "start": "1978640",
    "end": "1983830"
  },
  {
    "text": "it make to other services like a database and also how many containers for instance does it run at a particular",
    "start": "1983830",
    "end": "1989260"
  },
  {
    "text": "load level so I can I can actually use this information for for dynamic",
    "start": "1989260",
    "end": "1995200"
  },
  {
    "text": "architecture validation as I call it and I can not only do this overall for my service I can also do this for my",
    "start": "1995200",
    "end": "2001260"
  },
  {
    "text": "individual endpoints right for my individual service methods like API such invoke",
    "start": "2001260",
    "end": "2006470"
  },
  {
    "text": "maybe I have different performance criteria different metrics I want to evaluate for many divisional end points",
    "start": "2006470",
    "end": "2011960"
  },
  {
    "text": "so the Mon spec file that lives in my source code repo and then let's see how my pipeline is running my pipeline",
    "start": "2011960",
    "end": "2020679"
  },
  {
    "text": "deploying here we go see my pipeline deploy it it started my SS deployed testing staging deploy test sound",
    "start": "2020679",
    "end": "2026960"
  },
  {
    "text": "strange started my tests I actually started tested runs for in for a couple of minutes and then I have my register",
    "start": "2026960",
    "end": "2033559"
  },
  {
    "text": "staging validation so this is the lambda function that I'm calling and by the way",
    "start": "2033559",
    "end": "2039260"
  },
  {
    "text": "all of this code is also on github and I'll give you the link later on and I just noticed that obviously the screen",
    "start": "2039260",
    "end": "2045350"
  },
  {
    "text": "resolution might be see how fast it works sometimes you've gotta be patient",
    "start": "2045350",
    "end": "2053480"
  },
  {
    "text": "and sometimes I'm not all right sometimes you just have to close the",
    "start": "2053480",
    "end": "2059570"
  },
  {
    "text": "window and open it again right so here's the lambda code that is actually figuring I can call my lambda function from different sources if it is called",
    "start": "2059570",
    "end": "2066560"
  },
  {
    "text": "from the cold pipeline then I kept traditional information which code pipeline is it which particular step is",
    "start": "2066560",
    "end": "2071840"
  },
  {
    "text": "it and I push all of this information into my into my database right into my",
    "start": "2071840",
    "end": "2077270"
  },
  {
    "text": "name would he be so I want to go through all the source code everything is here feel free to to let",
    "start": "2077270",
    "end": "2083658"
  },
  {
    "text": "them to just use the same thing and I give you the link in a second so this is the lambda function that was called for",
    "start": "2083659",
    "end": "2089898"
  },
  {
    "text": "register staging validation now you can see here now my pipeline is waiting for approval I can either manually approve",
    "start": "2089899",
    "end": "2096648"
  },
  {
    "text": "it or behind the scenes I'm using CloudWatch events and it calls another",
    "start": "2096649",
    "end": "2103760"
  },
  {
    "text": "lambda function and it is the they go back well this is really hard to navigate now if I go to my services and",
    "start": "2103760",
    "end": "2116380"
  },
  {
    "text": "I have my validate damages built worker so this is the one function that gets",
    "start": "2117070",
    "end": "2122390"
  },
  {
    "text": "executed on a regular basis and basically what it does it says is their",
    "start": "2122390",
    "end": "2128030"
  },
  {
    "text": "basic it starts off with Eastern any built right now that needs to be validated has enough time passed and if",
    "start": "2128030",
    "end": "2134839"
  },
  {
    "text": "so then doing all of my validations I'm reaching out to all the different tools that you told me based on your config file ok and",
    "start": "2134839",
    "end": "2144049"
  },
  {
    "text": "last but not least I have this overview here right this is not what you saw earlier in my in my screenshot this is",
    "start": "2144049",
    "end": "2153480"
  },
  {
    "text": "nothing else and I'm calling another lambda function that is giving me a visual representation of the data that",
    "start": "2153480",
    "end": "2160140"
  },
  {
    "text": "is in my dynamodb table every build requests from from from the past I know",
    "start": "2160140",
    "end": "2167069"
  },
  {
    "text": "it doesn't look sexy I'm not a front-end developer that I at least you know it's it's good enough for me alright then I",
    "start": "2167069",
    "end": "2173730"
  },
  {
    "text": "saw I had a bad build here earlier and what I should see because the pipe ladder I'm running right now is actually",
    "start": "2173730",
    "end": "2179789"
  },
  {
    "text": "a build that has a little performance problem and it should actually stop the build but I let I told my lambda",
    "start": "2179789",
    "end": "2186509"
  },
  {
    "text": "function at least wait for five minutes until enough load has been generated so we'll come back to this in a second",
    "start": "2186509",
    "end": "2191940"
  },
  {
    "text": "because I know we have about 20 minutes left by the way questions happy later on just",
    "start": "2191940",
    "end": "2200130"
  },
  {
    "text": "extend this for you again all right but the idea is that the pipeline will stop",
    "start": "2200130",
    "end": "2205890"
  },
  {
    "text": "so next thing if we I believe unfortunate link land you can probably",
    "start": "2205890",
    "end": "2212460"
  },
  {
    "start": "2206000",
    "end": "2301000"
  },
  {
    "text": "agree with me we cannot stop every bad code or sequel statement change in pre prod we try to but we can't",
    "start": "2212460",
    "end": "2218670"
  },
  {
    "text": "certain things flip through get rid of",
    "start": "2218670",
    "end": "2223710"
  },
  {
    "text": "people okay I think we should talk later",
    "start": "2223710",
    "end": "2230279"
  },
  {
    "text": "on alright one of the things that are",
    "start": "2230279",
    "end": "2235980"
  },
  {
    "text": "another one of our customers where I got inspired from was Eric from Beachbody I",
    "start": "2235980",
    "end": "2242140"
  },
  {
    "text": "met him last year and we talked about how we can self remediate and what we can actually do in case things go into",
    "start": "2242140",
    "end": "2248590"
  },
  {
    "text": "production and he said well there when he started at Beachbody I think it was",
    "start": "2248590",
    "end": "2253870"
  },
  {
    "text": "like not three years ago he was signed up as the head of head of operations and",
    "start": "2253870",
    "end": "2260250"
  },
  {
    "text": "he had two people and they were all watching it they had all I could lose money towards in the room they were all",
    "start": "2260250",
    "end": "2266650"
  },
  {
    "text": "red not what they were cared because they said we don't even know what this means because we didn't build it and we",
    "start": "2266650",
    "end": "2272080"
  },
  {
    "text": "have to do two we have to spend too much time to actually deal with the 10,000 emails of alerts that we getting every",
    "start": "2272080",
    "end": "2278200"
  },
  {
    "text": "day so he said he wanted to convert that operations team into an SRE team and he",
    "start": "2278200",
    "end": "2283990"
  },
  {
    "text": "wanted to get completely rid of any dashboard of anything that is red he said we should be able to automate it",
    "start": "2283990",
    "end": "2289690"
  },
  {
    "text": "so the first thing that he obviously started with his jet ops because he still want to be notified of things especially these new problems that come",
    "start": "2289690",
    "end": "2295540"
  },
  {
    "text": "in that they need to first fix then learn and then figure out how we can order remediate",
    "start": "2295540",
    "end": "2301210"
  },
  {
    "start": "2301000",
    "end": "2352000"
  },
  {
    "text": "I want to show you a use case that I kind of walked through with him and I",
    "start": "2301210",
    "end": "2307660"
  },
  {
    "text": "understand now if I look at it this is really small but what you see here is modern monitoring tools and alerting",
    "start": "2307660",
    "end": "2315310"
  },
  {
    "text": "tools they give you alerts they tell you something like here is the application that is impacted it also tells you in my",
    "start": "2315310",
    "end": "2322420"
  },
  {
    "text": "case this is actually we were monitoring our own web site it says dynaTrace comm is currently experiencing JavaScript and",
    "start": "2322420",
    "end": "2329530"
  },
  {
    "text": "JavaScript ever rate increase in production it only impacts users that",
    "start": "2329530",
    "end": "2334780"
  },
  {
    "text": "are using a desktop browser on Windows 7 so the monitoring tool is smart enough",
    "start": "2334780",
    "end": "2339790"
  },
  {
    "text": "to tells me it only impacts Windows users and I know that how many people care about Windows uses but we care but",
    "start": "2339790",
    "end": "2347710"
  },
  {
    "text": "at least I know what the kind of blast radius is so if you get a problem like this the first thing we can do in I was",
    "start": "2347710",
    "end": "2355690"
  },
  {
    "start": "2352000",
    "end": "2494000"
  },
  {
    "text": "a classical operations in incident management we can inform the web team",
    "start": "2355690",
    "end": "2360730"
  },
  {
    "text": "there's obviously something wrong with JavaScript on IE maybe they deployed something maybe they made it bro",
    "start": "2360730",
    "end": "2365970"
  },
  {
    "text": "a new library and it didn't run any of the functional tests on I you can push a",
    "start": "2365970",
    "end": "2372750"
  },
  {
    "text": "status update information to inform the customers that something is right is not right right now and maybe also inform",
    "start": "2372750",
    "end": "2377970"
  },
  {
    "text": "our support about potential incoming calls but more importantly and what you see on the left here is we can look at a",
    "start": "2377970",
    "end": "2384900"
  },
  {
    "text": "lot of more evidence that goes into that problem so for instance what was the last deployment and configuration change",
    "start": "2384900",
    "end": "2391440"
  },
  {
    "text": "that was made what else have been in the system maybe the configuration change actually caused this to become full",
    "start": "2391440",
    "end": "2399599"
  },
  {
    "text": "because the configuration change changed the log level to to debug or verbose and so we have all this information in there",
    "start": "2399599",
    "end": "2406260"
  },
  {
    "text": "and therefore what I've been working with with with Eric from Beachbody and others trying to figure out how can we",
    "start": "2406260",
    "end": "2412080"
  },
  {
    "text": "now call not people at two o'clock in the morning but call with for instance",
    "start": "2412080",
    "end": "2418260"
  },
  {
    "text": "lambda functions or chef scripts and simple scripts whatever you want or even at a pipeline to then address the real",
    "start": "2418260",
    "end": "2426510"
  },
  {
    "text": "problem right so for instance CPU is exhausted because at the same time we",
    "start": "2426510",
    "end": "2432030"
  },
  {
    "text": "had a spike in load so maybe we just add a couple of additional instances maybe",
    "start": "2432030",
    "end": "2437550"
  },
  {
    "text": "there wasn't exhausted connection pool to your database because they added a new feature and this feature is not as",
    "start": "2437550",
    "end": "2444240"
  },
  {
    "text": "good with the database connections as the other features they had before so maybe we need to increase the connection pools we can do this on the fly",
    "start": "2444240",
    "end": "2450060"
  },
  {
    "text": "automatically yeah this two weeks ago you wouldn't have this problem obviously",
    "start": "2450060",
    "end": "2456570"
  },
  {
    "text": "if we wouldn't have people write to come back to what I said earlier with our people we wouldn't have this problem but",
    "start": "2456570",
    "end": "2461940"
  },
  {
    "text": "without people we wouldn't have innovation they would be a little boring on this planet or maybe there was a",
    "start": "2461940",
    "end": "2467430"
  },
  {
    "text": "canary that was an issue it's just happening on the canary release well let's redirect traffic fully automatically and if this problem",
    "start": "2467430",
    "end": "2474990"
  },
  {
    "text": "mitigates the impact we can obviously again update our teams right tell them",
    "start": "2474990",
    "end": "2480089"
  },
  {
    "text": "that everything is it's been taken care of if it's still ongoing obviously you",
    "start": "2480089",
    "end": "2485130"
  },
  {
    "text": "can still escalate if this is really a big issue but this is kind of a thing that we that means kind of kind of use",
    "start": "2485130",
    "end": "2491010"
  },
  {
    "text": "cases to them that I've been promoting and the way I've implemented this in the",
    "start": "2491010",
    "end": "2497550"
  },
  {
    "start": "2494000",
    "end": "2562000"
  },
  {
    "text": "pipeline what you haven't seen earlier is one additional step that I had in my",
    "start": "2497550",
    "end": "2502910"
  },
  {
    "text": "pipeline that is called push dynaTrace deployment or push deployment information to my monitoring tool that",
    "start": "2502910",
    "end": "2509090"
  },
  {
    "text": "means I tell the monitoring tool additional context I say it was Andrew he deployed that built or maybe your",
    "start": "2509090",
    "end": "2516890"
  },
  {
    "text": "boss signed up for it but Andrew is a good guy he's a good developer because he was he's reading tests in his writing",
    "start": "2516890",
    "end": "2524600"
  },
  {
    "text": "Mon spec but he's also writing all the remediation scripts so he actually has",
    "start": "2524600",
    "end": "2529970"
  },
  {
    "text": "written a lambda function for instance that we should call in case something is",
    "start": "2529970",
    "end": "2535940"
  },
  {
    "text": "wrong with his deployment so that means what I am pushing over here is actually",
    "start": "2535940",
    "end": "2541010"
  },
  {
    "text": "another lambda linked to a lambda function would in a web book basically that the monitoring tool should call in",
    "start": "2541010",
    "end": "2547730"
  },
  {
    "text": "case there's a problem with your deployment okay so code is code test this code monitoring is code or the",
    "start": "2547730",
    "end": "2554060"
  },
  {
    "text": "remediation is called everything lives in your kit or a tablet code commit or",
    "start": "2554060",
    "end": "2559370"
  },
  {
    "text": "wherever it is and we push it over so that means in case a problem is detected so this is now a screenshot from our",
    "start": "2559370",
    "end": "2566180"
  },
  {
    "start": "2562000",
    "end": "2654000"
  },
  {
    "text": "product problem is detected we are actually not just sending emails but",
    "start": "2566180",
    "end": "2572960"
  },
  {
    "text": "we're calling a lambda function and then the lambda function in my case is pulling down additional information from",
    "start": "2572960",
    "end": "2581990"
  },
  {
    "text": "the additional context that we sent over to the monitoring tool and then it's executing for instance a roll back a",
    "start": "2581990",
    "end": "2587750"
  },
  {
    "text": "scale up and scale down whatever it is and then also sends back information to the monitoring tool or to your internet",
    "start": "2587750",
    "end": "2594350"
  },
  {
    "text": "management tool that you actually took course correcting actions fully automatically all right so here's a",
    "start": "2594350",
    "end": "2605030"
  },
  {
    "text": "screenshot that I just took really this morning but basically this kind of shows",
    "start": "2605030",
    "end": "2610370"
  },
  {
    "text": "it nicely I have my noches service that",
    "start": "2610370",
    "end": "2617000"
  },
  {
    "text": "had a failure rate increase it exceeded my threshold of zero percent failure rate dynaTrace immediately detected that",
    "start": "2617000",
    "end": "2626750"
  },
  {
    "text": "the root cause was actually a deployment on that deployment they have my remediation action the remediation actions are automatically call",
    "start": "2626750",
    "end": "2632630"
  },
  {
    "text": "and the remediation action also commented hey I just created the new deployment so I kept the impact rather",
    "start": "2632630",
    "end": "2640340"
  },
  {
    "text": "contain contained all right so let's quick demo and see how this looks like",
    "start": "2640340",
    "end": "2648110"
  },
  {
    "text": "here so by the way first of all before I",
    "start": "2648110",
    "end": "2655100"
  },
  {
    "start": "2654000",
    "end": "2744000"
  },
  {
    "text": "show you that demo my pipeline failed earlier right I mean I ran the build actually pushed a bill through that",
    "start": "2655100",
    "end": "2661250"
  },
  {
    "text": "actually had a an issue now it failed the build I can click on details and it",
    "start": "2661250",
    "end": "2667130"
  },
  {
    "text": "says hey one performance signature violation found please check the results in the name of the B or simply go to",
    "start": "2667130",
    "end": "2673310"
  },
  {
    "text": "that link this is what my my initial lambda function push back so I can open",
    "start": "2673310",
    "end": "2680210"
  },
  {
    "text": "this up and then here we go red is the latest build I can see that the failure",
    "start": "2680210",
    "end": "2686360"
  },
  {
    "text": "rate increased like crazy and this is the reason why my pipeline was automatically stopped and this build was not promoted further in production and",
    "start": "2686360",
    "end": "2695840"
  },
  {
    "text": "if we look at this production problem that I showed you earlier so this is the problem I had open in my screenshot as",
    "start": "2695840",
    "end": "2700850"
  },
  {
    "text": "well this is the information where it's part of the deployment when my pipeline",
    "start": "2700850",
    "end": "2706190"
  },
  {
    "text": "actually deploys the build go back to the pipeline it's this lambda function",
    "start": "2706190",
    "end": "2711680"
  },
  {
    "text": "here push deployment event to dynaTrace in this case it's just another lambda function that also knows which lambda",
    "start": "2711680",
    "end": "2718190"
  },
  {
    "text": "function to call in case something is wrong all right cool",
    "start": "2718190",
    "end": "2725060"
  },
  {
    "text": "all the source code is also available by the way EWS DevOps tutorial is available",
    "start": "2725060",
    "end": "2735920"
  },
  {
    "text": "here it's called a SS DevOps tutorial including a CloudFormation template it's a sample app that contained that it's",
    "start": "2735920",
    "end": "2744620"
  },
  {
    "text": "actually I made it available in multiple builds and you can play around with it but I understand that you obviously have",
    "start": "2744620",
    "end": "2751520"
  },
  {
    "text": "your own environment your own apps your own problems whatever tools you use to capture these",
    "start": "2751520",
    "end": "2758090"
  },
  {
    "text": "metrics I don't care what I care about this that I believe we should all change right we should not just think that we",
    "start": "2758090",
    "end": "2766100"
  },
  {
    "text": "if you're on the operation side should stay on the operation side forever and just talk bad about the developers we",
    "start": "2766100",
    "end": "2772430"
  },
  {
    "text": "should figure out how we can change our engineers rather than I'm also an engineer red we need to enable them to",
    "start": "2772430",
    "end": "2779990"
  },
  {
    "text": "start writing proper tests monitoring definitions what is relevant for them also all the remediation baking it into",
    "start": "2779990",
    "end": "2788300"
  },
  {
    "text": "a pipeline that make sure no bad code changes can ever impact a business right",
    "start": "2788300",
    "end": "2794720"
  },
  {
    "text": "so nonetheless to kind of finish it up here and let me just go yeah",
    "start": "2794720",
    "end": "2801370"
  },
  {
    "text": "so non-fancy talking about how can be the non-functional requirement to think before yeah yeah yeah so that means if",
    "start": "2823430",
    "end": "2839970"
  },
  {
    "text": "it's an intentional change in this mon spec file that i was really educating and drawn on writing you can also",
    "start": "2839970",
    "end": "2846210"
  },
  {
    "text": "specify with a new build that this metric is allowed to change because you know you're adding a new functionality",
    "start": "2846210",
    "end": "2853170"
  },
  {
    "text": "so you say i I understand that we have to give a new dependency and the way by",
    "start": "2853170",
    "end": "2859589"
  },
  {
    "text": "this and the reason why this works is because this mon spec file lives in your source code repo it get version so with",
    "start": "2859589",
    "end": "2865529"
  },
  {
    "text": "every version you build you also update just as you update your tests you update your monitoring specification file as",
    "start": "2865529",
    "end": "2871859"
  },
  {
    "text": "well and you say i want to validate that i'm actually connecting to this database but only to that not the one in",
    "start": "2871859",
    "end": "2878130"
  },
  {
    "text": "production maybe just here right alright so let me finish it off i see people are",
    "start": "2878130",
    "end": "2883829"
  },
  {
    "text": "before people even lee and miss the best part my aunt might choke in the end which by the way i'm austrian we don't",
    "start": "2883829",
    "end": "2890759"
  },
  {
    "text": "joke around so in the end the unbreakable delivery pipeline this is",
    "start": "2890759",
    "end": "2896519"
  },
  {
    "text": "kind of bringing it bringing it home and kind of showing the end-to-end use case what i just showed you i am a strong believer that we have",
    "start": "2896519",
    "end": "2905039"
  },
  {
    "text": "great monitoring tools out there great diagnostic tools out there great security tools out there just make sure",
    "start": "2905039",
    "end": "2912509"
  },
  {
    "text": "that you leverage them and leverage them in a way that they actually solve a real",
    "start": "2912509",
    "end": "2918240"
  },
  {
    "text": "problem that you potentially have in production and if for those of you that are in operations and Glan I look at you",
    "start": "2918240",
    "end": "2924960"
  },
  {
    "text": "again and all with your with your with your with the color of your beard understand you have a lot of experience right that means you are the perfect",
    "start": "2924960",
    "end": "2933589"
  },
  {
    "text": "person to teach and mentor the next generation of software engineers on what",
    "start": "2933589",
    "end": "2940559"
  },
  {
    "text": "to take care of and help them to build this into the fabric into the pipeline",
    "start": "2940559",
    "end": "2947569"
  },
  {
    "text": "so that means every time I deploy a new built figure out how you can compare",
    "start": "2947569",
    "end": "2953880"
  },
  {
    "text": "these key metrics from built to build an egg this equality gate if we deploy into production",
    "start": "2953880",
    "end": "2960080"
  },
  {
    "text": "validate that your production you know",
    "start": "2960080",
    "end": "2965400"
  },
  {
    "text": "also it runs as expected what I also say here I think this is also a perfect spot",
    "start": "2965400",
    "end": "2972120"
  },
  {
    "text": "to do your to validate actually your auto your all the remediation functions",
    "start": "2972120",
    "end": "2977550"
  },
  {
    "text": "or your self-healing functions right if you deploy into an environment like a pre prod environment where you can run",
    "start": "2977550",
    "end": "2982880"
  },
  {
    "text": "we can simulate production ready load you can also then do chaos monkey you do",
    "start": "2982880",
    "end": "2990450"
  },
  {
    "text": "some chaos monkey testing and actually validate that's the remediation function from end were actually work in case something blows up thread I think it",
    "start": "2990450",
    "end": "2997890"
  },
  {
    "text": "should not be tested the first time in production and if you do this and then in the end you have happy users right as",
    "start": "2997890",
    "end": "3003500"
  },
  {
    "text": "you saw them earlier and then something happens and they're unhappy then we can",
    "start": "3003500",
    "end": "3008630"
  },
  {
    "text": "call the scripts that have already been battle tested in our chaos monkey",
    "start": "3008630",
    "end": "3015020"
  },
  {
    "text": "environment and we know that you don't break anybody out there any experience",
    "start": "3015020",
    "end": "3020630"
  },
  {
    "text": "right so with this I want to say thank you I hope I sparked some new ideas on",
    "start": "3020630",
    "end": "3027220"
  },
  {
    "text": "how we can not only solve a problem in production by by building a lot of",
    "start": "3027220",
    "end": "3033740"
  },
  {
    "text": "automation scripts that fix production problems but first starting to prevent them and whether you do use lambda for",
    "start": "3033740",
    "end": "3041510"
  },
  {
    "text": "the glue code in between your pipeline between your pipeline and use in your",
    "start": "3041510",
    "end": "3046850"
  },
  {
    "text": "systems where deploy or something else that's up to you I believe lambda especially the breast environment is a pretty is a pretty natural logical",
    "start": "3046850",
    "end": "3053780"
  },
  {
    "text": "decision it's really cool really flexible alright that's it I'll give you Tim nine minutes actually nine more",
    "start": "3053780",
    "end": "3059750"
  },
  {
    "text": "minutes but okay I will stay here for those people that want to leave you're free to go for those people that have",
    "start": "3059750",
    "end": "3065240"
  },
  {
    "text": "questions I think I still have nine minutes for questions [Applause]",
    "start": "3065240",
    "end": "3076329"
  }
]