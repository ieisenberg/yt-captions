[
  {
    "start": "0",
    "end": "33000"
  },
  {
    "text": "Welcome to 'This is My Architecture.'",
    "start": "7155",
    "end": "9248"
  },
  {
    "text": "I'm Lana from AWS, and today\nwe're talking to Frank from Dow Jones.",
    "start": "9248",
    "end": "13037"
  },
  {
    "text": "Welcome, Frank.\n- Thanks for having me.",
    "start": "13037",
    "end": "14813"
  },
  {
    "text": "Awesome having you here.\nWould you mind telling us",
    "start": "14814",
    "end": "17051"
  },
  {
    "text": "a little bit more about Dow Jones\nand the work you do there",
    "start": "17051",
    "end": "19566"
  },
  {
    "text": "with The Wall Street Journal?\nSure.",
    "start": "19566",
    "end": "21357"
  },
  {
    "text": "So I'm a distinguished\nsoftware engineer at Dow Jones.",
    "start": "21357",
    "end": "23834"
  },
  {
    "text": "Dow Jones is a global publisher\nof news and financial information.",
    "start": "23834",
    "end": "28381"
  },
  {
    "text": "And it produces publications in products",
    "start": "28381",
    "end": "30334"
  },
  {
    "text": "like The Wall Street Journal, Barron's \nMagazine, and Market Watch, and Factiva.",
    "start": "30334",
    "end": "33562"
  },
  {
    "start": "33000",
    "end": "115000"
  },
  {
    "text": "I would imagine that it's really\nimportant to make sure that you have",
    "start": "34544",
    "end": "37217"
  },
  {
    "text": "your newsrooms and your\npublishers have the information",
    "start": "37217",
    "end": "40276"
  },
  {
    "text": "they need at the right time.",
    "start": "40276",
    "end": "41916"
  },
  {
    "text": "So would you mind\ntelling us a little bit more",
    "start": "41916",
    "end": "43163"
  },
  {
    "text": "about NewsGrid and\nthe platform that you've built on AWS?",
    "start": "43163",
    "end": "46424"
  },
  {
    "text": "Sure. So the application\nthat we built is called NewsGrid.",
    "start": "46424",
    "end": "49184"
  },
  {
    "text": "And the users that are running\neither in mobile or on desktop",
    "start": "49184",
    "end": "53293"
  },
  {
    "text": "access the application\nfrom all around the world.",
    "start": "53293",
    "end": "55218"
  },
  {
    "text": "We have news bureaus\nin countries globally.",
    "start": "55218",
    "end": "58753"
  },
  {
    "text": "So what we do is in order\nto provide disaster recovery,",
    "start": "58753",
    "end": "62829"
  },
  {
    "text": "the users will first access Route 53.",
    "start": "62829",
    "end": "66066"
  },
  {
    "text": "The application will\ndetermine where we're live,",
    "start": "66066",
    "end": "67741"
  },
  {
    "text": "whether it's in our\nprimary region, like Virginia,",
    "start": "67741",
    "end": "69870"
  },
  {
    "text": "or in a backup region, like Oregon.",
    "start": "69871",
    "end": "72695"
  },
  {
    "text": "After we have resolved that,\nthen the user gets redirected",
    "start": "72695",
    "end": "75288"
  },
  {
    "text": "to our load balancer,",
    "start": "75288",
    "end": "77045"
  },
  {
    "text": "and the load balancer\nthen will enforce authentication",
    "start": "77045",
    "end": "80205"
  },
  {
    "text": "using Cognito and Okta\nas a identity provider.",
    "start": "80205",
    "end": "84566"
  },
  {
    "text": "Once the load balancer has\nensured that the user has a session,",
    "start": "84566",
    "end": "88490"
  },
  {
    "text": "the request is forwarded to one\nof our availability zones running EC2s.",
    "start": "88490",
    "end": "92826"
  },
  {
    "text": "And the EC2s serve the purpose\nof providing the application",
    "start": "92827",
    "end": "96958"
  },
  {
    "text": "to the client, or to the browser,",
    "start": "96958",
    "end": "99032"
  },
  {
    "text": "and also proxying to some\ninternal services on our VPC.",
    "start": "99032",
    "end": "102302"
  },
  {
    "text": "That makes sense.\nSo I'm assuming you're using",
    "start": "102303",
    "end": "103625"
  },
  {
    "text": "a couple of availability zones here.",
    "start": "103625",
    "end": "105428"
  },
  {
    "text": "Yes. Yes.",
    "start": "105428",
    "end": "107896"
  },
  {
    "text": "So the availability zones give us the",
    "start": "107896",
    "end": "110397"
  },
  {
    "text": "redundancy and the ability to recover\nin case one of them is not available.",
    "start": "110397",
    "end": "115381"
  },
  {
    "start": "115000",
    "end": "186000"
  },
  {
    "text": "- Sounds great. So now I'm seeing\nthat we're moving on from EC2s.",
    "start": "115381",
    "end": "117632"
  },
  {
    "text": "So we have some business logic and\nsome processes that are running here.",
    "start": "117632",
    "end": "120386"
  },
  {
    "text": "And this is the fun part-- AppSync.\n- Yes.",
    "start": "120386",
    "end": "123931"
  },
  {
    "text": "So would you mind telling us a little\nbit more of how you're using AppSync",
    "start": "123931",
    "end": "126211"
  },
  {
    "text": "as a part of the solution?\n- Right.",
    "start": "126211",
    "end": "128252"
  },
  {
    "text": "So AppSync is core to our application.",
    "start": "128252",
    "end": "130412"
  },
  {
    "text": "The EC2s forward requests to AppSync,",
    "start": "130412",
    "end": "133655"
  },
  {
    "text": "whether they are mutations or queries.",
    "start": "133655",
    "end": "138235"
  },
  {
    "text": "And AppSync is the API that we provide.",
    "start": "138235",
    "end": "141477"
  },
  {
    "text": "We used AppSync\ninstead of REST API because,",
    "start": "141477",
    "end": "144147"
  },
  {
    "text": "like I mentioned before,\nour users are located globally.",
    "start": "144147",
    "end": "146796"
  },
  {
    "text": "They're not always in an\noffice with great bandwidth.",
    "start": "146796",
    "end": "148833"
  },
  {
    "text": "So we want to make sure that the\ndata that we're sending to the client,",
    "start": "148833",
    "end": "151784"
  },
  {
    "text": "we can shape that payload\nand make it as small as possible.",
    "start": "151784",
    "end": "154088"
  },
  {
    "text": "AppSync provides a way for us to also",
    "start": "154089",
    "end": "157528"
  },
  {
    "text": "reach out to multiple\ndifferent types of data sources.",
    "start": "157528",
    "end": "160269"
  },
  {
    "text": "So, whether it's DynamoDB,\nwhich is our primary data source,",
    "start": "160269",
    "end": "165881"
  },
  {
    "text": "or Elasticsearch,\nwhich we leverage for doing",
    "start": "165881",
    "end": "169519"
  },
  {
    "text": "searching, sorting,\nand advanced filtering,",
    "start": "169520",
    "end": "171862"
  },
  {
    "text": "or Lambda, which provides\nsome offload of more complicated--",
    "start": "171862",
    "end": "177347"
  },
  {
    "text": "more complicated jobs\nand tasks that the client,",
    "start": "180256",
    "end": "183696"
  },
  {
    "text": "we want to move away\nfrom the client onto the server.",
    "start": "183696",
    "end": "186402"
  },
  {
    "text": "And I'm also seeing here that\nwe're using Elasticsearch and DynamoDB.",
    "start": "186402",
    "end": "190359"
  },
  {
    "text": "So would you mind\ntelling me a little bit more of",
    "start": "190360",
    "end": "192843"
  },
  {
    "text": "the different ways\nyou're using these data stores?",
    "start": "192843",
    "end": "195892"
  },
  {
    "text": "Sure. So like I mentioned before,\nDynamoDB is our primary data source.",
    "start": "195892",
    "end": "199208"
  },
  {
    "text": "But we replicate\nour data from DynamoDB",
    "start": "199208",
    "end": "201506"
  },
  {
    "text": "through streams using Lambdas,",
    "start": "201507",
    "end": "203637"
  },
  {
    "text": "which then send the data\nto Elasticsearch to keep it synchronized",
    "start": "203637",
    "end": "206107"
  },
  {
    "text": "with DynamoDB, so that we have\nthe same view of data when we search",
    "start": "206108",
    "end": "209077"
  },
  {
    "text": "that we do when we get or put an item.",
    "start": "209077",
    "end": "211653"
  },
  {
    "text": "- So I would imagine that\nwould perform a much more",
    "start": "211653",
    "end": "214339"
  },
  {
    "text": "perform and querying functionality for your users.",
    "start": "214339",
    "end": "216843"
  },
  {
    "text": "Yes, and that was a critical component.",
    "start": "216843",
    "end": "218725"
  },
  {
    "text": "Initially, we didn't have\nsearch in our application.",
    "start": "218725",
    "end": "220467"
  },
  {
    "text": "And then when it was\ndetermined that we needed it,",
    "start": "220467",
    "end": "222153"
  },
  {
    "text": "we were able to stand up\nan Elasticsearch cluster pretty quickly.",
    "start": "222153",
    "end": "225373"
  },
  {
    "start": "225000",
    "end": "271000"
  },
  {
    "text": "- Sounds great. So AppSync\nhas a lot of very interesting features,",
    "start": "225373",
    "end": "228077"
  },
  {
    "text": "like subscriptions. Have you utilized\nthat as a part of this architecture?",
    "start": "228119",
    "end": "232119"
  },
  {
    "text": "Yes, absolutely. And that's critical\nbecause our news department",
    "start": "232119",
    "end": "235135"
  },
  {
    "text": "wants to make sure that they\nhave the most up-to-date data",
    "start": "235135",
    "end": "237392"
  },
  {
    "text": "about articles that they're writing\nin the NewsGrid application",
    "start": "237392",
    "end": "239908"
  },
  {
    "text": "for The Wall Street Journal.\nSo AppSync will actually send us",
    "start": "239908",
    "end": "242832"
  },
  {
    "text": "updates to all the stories,\nand plans, and subscriptions",
    "start": "242832",
    "end": "247420"
  },
  {
    "text": "that the users require in the browser,",
    "start": "247420",
    "end": "250220"
  },
  {
    "text": "and it uses the MQTT protocol to do that.",
    "start": "250220",
    "end": "254423"
  },
  {
    "text": "And what kind of clients do you\nusually have that users leverage?",
    "start": "254423",
    "end": "258359"
  },
  {
    "text": "So our clients are\nboth mobile and desktop. Yeah.",
    "start": "258360",
    "end": "261457"
  },
  {
    "text": "And so someone could be in Afghanistan",
    "start": "261458",
    "end": "263768"
  },
  {
    "text": "writing an article and use their phone,",
    "start": "263768",
    "end": "265397"
  },
  {
    "text": "or they could be sitting in an office\nor a bureau somewhere else,",
    "start": "265397",
    "end": "268567"
  },
  {
    "text": "like in London or Australia.",
    "start": "268567",
    "end": "271500"
  },
  {
    "start": "271000",
    "end": "337000"
  },
  {
    "text": "That makes sense.\nAnother question I had is that",
    "start": "271501",
    "end": "273558"
  },
  {
    "text": "you mentioned that\nyou have multiple regions",
    "start": "273558",
    "end": "275808"
  },
  {
    "text": "as a part of your  DR and HA approach.",
    "start": "275808",
    "end": "278916"
  },
  {
    "text": "So how are you replicating\nthis data between multiple regions",
    "start": "278916",
    "end": "281970"
  },
  {
    "text": "and replicating this infrastructure?",
    "start": "281971",
    "end": "283854"
  },
  {
    "text": "Right. So this is a critical application\nwe want to make sure that it",
    "start": "283854",
    "end": "286124"
  },
  {
    "text": "can recover from disaster.",
    "start": "286124",
    "end": "287932"
  },
  {
    "text": "So we have this entire infrastructure,",
    "start": "287932",
    "end": "289495"
  },
  {
    "text": "deployed both in Virginia and Oregon.",
    "start": "289495",
    "end": "291426"
  },
  {
    "text": "We replicate our data\nusing DynamoDB global tables.",
    "start": "291426",
    "end": "294501"
  },
  {
    "text": "The data that's sent\nfrom DynamoDB in Virginia,",
    "start": "294501",
    "end": "297725"
  },
  {
    "text": "where we're potentially primary,\nwill get sent to Oregon.",
    "start": "297725",
    "end": "301198"
  },
  {
    "text": "Once it's received, a stream\nwill do the same sort of replication,",
    "start": "301198",
    "end": "304014"
  },
  {
    "text": "or export of the data,\nfrom DynamoDB through a Lambda",
    "start": "304015",
    "end": "307263"
  },
  {
    "text": "and into the Elasticsearch\ncluster in the replicated region.",
    "start": "307263",
    "end": "310486"
  },
  {
    "text": "That's great. So largely, we have,\nlike, an async environment",
    "start": "310486",
    "end": "314181"
  },
  {
    "text": "with just the stateless data being\nreplicated by the global tables.",
    "start": "314181",
    "end": "317628"
  },
  {
    "text": "- That's right. Yeah.\n- Sounds great.",
    "start": "317628",
    "end": "319395"
  },
  {
    "text": "Well, Frank, thank you so much for coming today",
    "start": "319395",
    "end": "321270"
  },
  {
    "text": "and telling us a little bit more of how",
    "start": "321270",
    "end": "323296"
  },
  {
    "text": "The Wall Street Journal leverages\nAWS Services for their newsrooms.",
    "start": "323296",
    "end": "327134"
  },
  {
    "text": "- My pleasure.\nThanks very much.",
    "start": "327135",
    "end": "328891"
  },
  {
    "text": "- And thank you for watching\n'This is My Architecture.'",
    "start": "328891",
    "end": "332496"
  }
]