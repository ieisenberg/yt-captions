[
  {
    "start": "0",
    "end": "69000"
  },
  {
    "text": "welcome everybody welcome to Vegas everyone surviving Vegas so far",
    "start": "30",
    "end": "5930"
  },
  {
    "text": "everyone go to the keynote this morning wasn't that pretty cool lots of cool stuff being announced so thanks for",
    "start": "5930",
    "end": "12150"
  },
  {
    "text": "coming to our session this is a session on migrating and migrating enterprise messaging to the cloud my name is Trevor",
    "start": "12150",
    "end": "18119"
  },
  {
    "text": "dykes I'm a product manager at AWS with me today is Quinn Easterbrook who's a senior director of platform engineering",
    "start": "18119",
    "end": "24359"
  },
  {
    "text": "at Capital One so let's get into it so first I'm going",
    "start": "24359",
    "end": "30570"
  },
  {
    "text": "to spend the the beginning part of the session just giving a basic introduction to enterprise messaging probably most of you are familiar with",
    "start": "30570",
    "end": "36930"
  },
  {
    "text": "that but we're gonna go through that as a refresher then I'm gonna talk about some of the advantages of moving to a hosted messaging service in particular",
    "start": "36930",
    "end": "43320"
  },
  {
    "text": "I'm going to talk about AWS messaging services sqs and SNS then I'm going to",
    "start": "43320",
    "end": "49260"
  },
  {
    "text": "talk about an exciting new feature we announced a couple of weeks ago maybe some of you saw that a FIFO queues which",
    "start": "49260",
    "end": "54329"
  },
  {
    "text": "is a new type of queue that we now support for sqs after that Quinn's going",
    "start": "54329",
    "end": "59370"
  },
  {
    "text": "to talk about a really interesting use case that Capital One is undertaken to",
    "start": "59370",
    "end": "64530"
  },
  {
    "text": "migrate their enterprise messaging middleware to the cloud so let's start with the basics most of",
    "start": "64530",
    "end": "71580"
  },
  {
    "start": "69000",
    "end": "69000"
  },
  {
    "text": "you already know this but let's just start with these fundamentals what are the drivers for enterprise messaging so",
    "start": "71580",
    "end": "77100"
  },
  {
    "text": "really historically messaging has been used for two things communication between applications for example your",
    "start": "77100",
    "end": "83360"
  },
  {
    "text": "inventory application to talk to your ordering application modern modern applications are broken",
    "start": "83360",
    "end": "90450"
  },
  {
    "text": "into smaller components and taking it to the extreme this is known as micro services in both cases those apps or",
    "start": "90450",
    "end": "97320"
  },
  {
    "text": "components need to communicate and that's where messaging comes into play traditionally this has been through",
    "start": "97320",
    "end": "102960"
  },
  {
    "text": "message oriented middleware so many are familiar with some of these products MQ",
    "start": "102960",
    "end": "109020"
  },
  {
    "text": "type of products IBM MQ ActiveMQ and you know some of the open source",
    "start": "109020",
    "end": "115439"
  },
  {
    "text": "ones like rabbitmq so just as a question show of hands how many people in the audience are using",
    "start": "115439",
    "end": "122280"
  },
  {
    "text": "message oriented middleware today in their company Wow even more than I",
    "start": "122280",
    "end": "127829"
  },
  {
    "text": "expected that's amazing and of those people that said yes how many really",
    "start": "127829",
    "end": "132989"
  },
  {
    "text": "love managed and managing that that that software oh hey there's one guy okay hey",
    "start": "132989",
    "end": "139740"
  },
  {
    "text": "you can leave no I'm kidding great okay so again sticking with the",
    "start": "139740",
    "end": "145560"
  },
  {
    "start": "144000",
    "end": "144000"
  },
  {
    "text": "basics there's two common patterns used in enterprise messaging message queuing and pub/sub or publish/subscribe",
    "start": "145560",
    "end": "154370"
  },
  {
    "start": "155000",
    "end": "155000"
  },
  {
    "text": "so first of all in queueing so in queueing messages are sent from producers to consumers using message",
    "start": "155240",
    "end": "161460"
  },
  {
    "text": "queues it's an asynchronous model that provides buffering so this is for",
    "start": "161460",
    "end": "166710"
  },
  {
    "text": "messaging from point A to point B where you have multiple and you can have multiple producers and consumers but",
    "start": "166710",
    "end": "171930"
  },
  {
    "text": "every consumer only gets one message or you know each message is only consumed by one consumer",
    "start": "171930",
    "end": "178700"
  },
  {
    "text": "in the pub/sub model the messages are broadcast or fanned out to",
    "start": "178700",
    "end": "183800"
  },
  {
    "text": "multiple subscribers using a construct called a topic so it's a",
    "start": "183800",
    "end": "189330"
  },
  {
    "text": "point-to-multipoint model the classic example here is the stock ticker where you have a stream of stock prices and",
    "start": "189330",
    "end": "195959"
  },
  {
    "text": "you have multiple readers that want to access that stream of information those stock prices",
    "start": "195959",
    "end": "202070"
  },
  {
    "start": "202000",
    "end": "202000"
  },
  {
    "text": "so today we're going to be focusing mainly on the message queuing pattern",
    "start": "202070",
    "end": "207180"
  },
  {
    "text": "for messaging so what are some common use cases of message queues so",
    "start": "207180",
    "end": "212510"
  },
  {
    "start": "212000",
    "end": "212000"
  },
  {
    "text": "first of all very basic one is just decoupling of application components or",
    "start": "212510",
    "end": "217769"
  },
  {
    "text": "microservices so a typical example here is where you have a front-end or a web tier that's creating work like the",
    "start": "217769",
    "end": "224100"
  },
  {
    "text": "ordering application I was speaking about and you have worker instances that are completing the work so message",
    "start": "224100",
    "end": "229350"
  },
  {
    "text": "queues are a great way to decouple those components it isolates them you can scale and manage those tiers separately",
    "start": "229350",
    "end": "235110"
  },
  {
    "text": "it makes it more resilient to failure versus direct restful communication",
    "start": "235110",
    "end": "241970"
  },
  {
    "start": "244000",
    "end": "244000"
  },
  {
    "text": "second use case is application integration so very similar but where",
    "start": "245269",
    "end": "251130"
  },
  {
    "text": "you have actually separate applications not components of an application that are exchanging information",
    "start": "251130",
    "end": "256200"
  },
  {
    "text": "asynchronously so queues allow the applications to be independent and fault tolerant and other advantages it allows",
    "start": "256200",
    "end": "263280"
  },
  {
    "text": "those apps to be potentially in different environments so you might have one application that's a java application running on a linux server",
    "start": "263280",
    "end": "270300"
  },
  {
    "text": "you might have another application that's a dotnet application running on a Windows server a",
    "start": "270300",
    "end": "275900"
  },
  {
    "text": "third use case is batch and burst processing so an example here is one of",
    "start": "275900",
    "end": "281219"
  },
  {
    "start": "276000",
    "end": "276000"
  },
  {
    "text": "our customers Shutterfly uses sqs to process images so in batch and burst",
    "start": "281219",
    "end": "286860"
  },
  {
    "text": "processing queues let you be resilient to spikes in traffic to perform work only as fast as",
    "start": "286860",
    "end": "293580"
  },
  {
    "text": "necessary to lower costs and with queues you have resilient save data so you're never going to lose any data when you're",
    "start": "293580",
    "end": "299819"
  },
  {
    "text": "passing between applications okay so those are some of the use cases",
    "start": "299819",
    "end": "305419"
  },
  {
    "start": "301000",
    "end": "301000"
  },
  {
    "text": "we've got a refresher on what messaging is why we need it what are some of the common challenges with message oriented",
    "start": "305419",
    "end": "311789"
  },
  {
    "text": "middleware and and from the show of hands earlier it sounds like I don't need to highlight many of those challenges to you but firstly",
    "start": "311789",
    "end": "318500"
  },
  {
    "text": "operational overhead so like any software there's a lot of overhead to maintain managing it maintaining it",
    "start": "318500",
    "end": "324839"
  },
  {
    "text": "installing it maintenance for example when you need to upgrade software install a patch you might have to take",
    "start": "324839",
    "end": "331349"
  },
  {
    "text": "down your messaging service for a period of time maybe during a low traffic period but you know it's a time you have",
    "start": "331349",
    "end": "338370"
  },
  {
    "text": "to take down your operations or your business secondly capacity planning so many",
    "start": "338370",
    "end": "345029"
  },
  {
    "text": "businesses have peak periods for example the Black Friday we just had last weekend I'm sure many of you bought many",
    "start": "345029",
    "end": "351680"
  },
  {
    "text": "products on Black Friday I sure did but that's a peak and you have to scale your messaging system",
    "start": "351680",
    "end": "358589"
  },
  {
    "text": "for that peak if that's an on-prem messaging system or a system that you've deployed",
    "start": "358589",
    "end": "365089"
  },
  {
    "text": "using message oriented middleware you have to actually plan for that peak you",
    "start": "365089",
    "end": "370259"
  },
  {
    "text": "might have that peak capacity provisioned for the whole year even for a peak that only occurs once or twice a",
    "start": "370259",
    "end": "376289"
  },
  {
    "text": "year thirdly reliability turns out it's actually quite challenging to manage a",
    "start": "376289",
    "end": "383399"
  },
  {
    "text": "messaging cluster with high availability and durability so you need to have that expertise in-house you need to have a",
    "start": "383399",
    "end": "390060"
  },
  {
    "text": "team of messaging experts to run your messaging servers and fourthly cost so I",
    "start": "390060",
    "end": "395909"
  },
  {
    "text": "already mentioned you have to provision those servers there's also going to be load balancers other infrastructure you",
    "start": "395909",
    "end": "401460"
  },
  {
    "text": "need to have in place that's an added cost and especially if some of its not being used all the time there's also in",
    "start": "401460",
    "end": "408120"
  },
  {
    "text": "some cases the cost to license software the licensing might be for two or three",
    "start": "408120",
    "end": "413130"
  },
  {
    "text": "years and you have to to pay that upfront so finally with cost there's that team you",
    "start": "413130",
    "end": "420600"
  },
  {
    "text": "need to manage a messaging platform and if that's not a core competency of your company that might not be you know a",
    "start": "420600",
    "end": "426930"
  },
  {
    "text": "team that you could be using to do more interesting things so what does AWS provide so we provide",
    "start": "426930",
    "end": "433440"
  },
  {
    "text": "some managed messaging services sqs and SNS we provide a cue service and a",
    "start": "433440",
    "end": "439470"
  },
  {
    "text": "pub/sub service so Amazon simple cue service is a fast reliable scalable fully managed",
    "start": "439470",
    "end": "446250"
  },
  {
    "start": "441000",
    "end": "441000"
  },
  {
    "text": "messaging service it's actually one of the oldest AWS services we just and we just celebrated our ten-year anniversary",
    "start": "446250",
    "end": "452640"
  },
  {
    "text": "of sqs this year so 2006 it was around the same time as s3 came out",
    "start": "452640",
    "end": "459470"
  },
  {
    "text": "and like most web AWS services it's it's accessible through a web api as well as",
    "start": "459470",
    "end": "466040"
  },
  {
    "text": "through SDKs in most languages as well as through an API called JMS or Java",
    "start": "466040",
    "end": "471930"
  },
  {
    "text": "Message Service which is a very common API you'll see in message oriented middleware",
    "start": "471930",
    "end": "477830"
  },
  {
    "start": "477000",
    "end": "477000"
  },
  {
    "text": "ample Amazon simple notification service is likewise a fast reliable scalable",
    "start": "478010",
    "end": "484770"
  },
  {
    "text": "fully managed pub/sub service so SNS allows you to use the topic constructs I",
    "start": "484770",
    "end": "491130"
  },
  {
    "text": "talked about earlier to fan out messages to sqs queues as well as to http",
    "start": "491130",
    "end": "496680"
  },
  {
    "text": "endpoints lambda functions and the same service is actually used to send",
    "start": "496680",
    "end": "501870"
  },
  {
    "text": "messages to to users through mobile push notifications SMS or email",
    "start": "501870",
    "end": "508460"
  },
  {
    "text": "so as I mentioned today we're focusing on sqs so what are some of the key features of sqs",
    "start": "509990",
    "end": "515659"
  },
  {
    "start": "510000",
    "end": "510000"
  },
  {
    "text": "so SGS gives you a very persistent message queue very high availability and durability it's distributed across",
    "start": "515660",
    "end": "522810"
  },
  {
    "text": "multiple availability zones it's available in every region globally so as you know we have 14 regions globally of",
    "start": "522810",
    "end": "528300"
  },
  {
    "text": "38 availability zones it's available in all those locations and messages are",
    "start": "528300",
    "end": "534120"
  },
  {
    "text": "stored across multiple availability zones so you'll never lose a message we have multiple redundant copies of every",
    "start": "534120",
    "end": "539820"
  },
  {
    "text": "message alright your messages in your queues are retained up to 14 days that's a",
    "start": "539820",
    "end": "545250"
  },
  {
    "text": "configurable option you can decide how long you want to retain your messages for in each queue and it provides nearly",
    "start": "545250",
    "end": "551490"
  },
  {
    "text": "unlimited throughput so it'll just scale as you need you send us more traffic we'll scale up and when you reduce your",
    "start": "551490",
    "end": "557880"
  },
  {
    "text": "traffic will scale down a couple other interesting features so we",
    "start": "557880",
    "end": "563910"
  },
  {
    "text": "have cloud watch metrics and alerts so things like the age of the oldest message in the queue and your queue",
    "start": "563910",
    "end": "570540"
  },
  {
    "text": "depth one of the very interesting uses for this is you can use those cloud watch metrics to scale your consumer",
    "start": "570540",
    "end": "576690"
  },
  {
    "text": "fleet so you can use that in combination with auto scaling and you can have auto scaling policies that will scale up your",
    "start": "576690",
    "end": "583110"
  },
  {
    "text": "consumer fleet as your queue gets gets filled up",
    "start": "583110",
    "end": "588440"
  },
  {
    "text": "we also provide the ability to send natively message payloads of up to 256",
    "start": "588440",
    "end": "594180"
  },
  {
    "text": "kilobytes and actually using s3 we we see customers using this pattern where",
    "start": "594180",
    "end": "599820"
  },
  {
    "text": "they send basically a pointer to the message payload in sqs and use s3 to store it and doing that you can store up",
    "start": "599820",
    "end": "606180"
  },
  {
    "text": "to five terabytes anything larger than that we recommend that large truck that you might have seen on the on the stage this morning",
    "start": "606180",
    "end": "613880"
  },
  {
    "text": "so in terms of message payloads we also do have a extended client we released",
    "start": "613880",
    "end": "619440"
  },
  {
    "text": "last year a Java extended client it actually facilitates sending larger messages through s3 basically just",
    "start": "619440",
    "end": "626310"
  },
  {
    "text": "replicates the API you just pass the message and if its larger than 256 cable",
    "start": "626310",
    "end": "631410"
  },
  {
    "text": "stored in s3 for you another way to increase throughput and",
    "start": "631410",
    "end": "637140"
  },
  {
    "text": "reduce cost is to use message batching so sqs supports up to 10 messages at a",
    "start": "637140",
    "end": "642269"
  },
  {
    "text": "time in one batch and that's actually the same cost of sending one message so if you need to reduce cost that's a good",
    "start": "642269",
    "end": "648750"
  },
  {
    "text": "way to do that and of course last but not least it's very highly secure uses the AWS Identity",
    "start": "648750",
    "end": "656699"
  },
  {
    "text": "and Access Management features or I am for authentication and security and we use HTTPS or TLS for connectivity for",
    "start": "656699",
    "end": "665760"
  },
  {
    "text": "secure connectivity so now another question for the audience",
    "start": "665760",
    "end": "672730"
  },
  {
    "text": "who still wants to manage their own message-oriented middleware",
    "start": "672730",
    "end": "678040"
  },
  {
    "text": "so with things like sqs and SQS as sqs and",
    "start": "678040",
    "end": "683450"
  },
  {
    "text": "SNS the real advantage and it's really the advantage of AWS cloud services in",
    "start": "683450",
    "end": "688700"
  },
  {
    "text": "general is it allows you to really just focus on your business logic and not on infrastructure you just write your code",
    "start": "688700",
    "end": "694460"
  },
  {
    "text": "and Emmas on SQL handles all the dirty work for you handles capacity scaling deployment fault tolerance logging",
    "start": "694460",
    "end": "702910"
  },
  {
    "text": "monitoring and security okay so that's that's a basic overview",
    "start": "702910",
    "end": "708500"
  },
  {
    "text": "of messaging I'm sure many of you are familiar with with sqs and SNS already so let's talk about something new the",
    "start": "708500",
    "end": "715250"
  },
  {
    "text": "FIFO queue that we just our FIFO keys that we just announced last week or two weeks ago sorry so if you're familiar",
    "start": "715250",
    "end": "722660"
  },
  {
    "text": "with sqs you'll know that it's really highly scaleable you can you can scale it to many thousands tens of thousands",
    "start": "722660",
    "end": "729230"
  },
  {
    "text": "of transactions per second one of the trade-offs for that is ordering and and exactly once delivery are not guaranteed",
    "start": "729230",
    "end": "736370"
  },
  {
    "text": "you might actually get duplicates sometimes because we've really distributed that queue across many many many servers so with FIFO queues you",
    "start": "736370",
    "end": "744260"
  },
  {
    "text": "don't have to make that trade-off we provide strict message ordering every",
    "start": "744260",
    "end": "749600"
  },
  {
    "text": "message is processed exactly once and there's a construct within these queues called message groups that allows",
    "start": "749600",
    "end": "755870"
  },
  {
    "text": "multiple ordered streams within a single queue it's essentially the same API as the",
    "start": "755870",
    "end": "761750"
  },
  {
    "text": "standard sqs queues that that we know and love there's a couple little nuances and",
    "start": "761750",
    "end": "767420"
  },
  {
    "text": "changes that I'll go through in a minute one important thing to note is the currently the FIFO queues are limited to",
    "start": "767420",
    "end": "773480"
  },
  {
    "text": "300 transactions per second so and from talking to customers as we were defining",
    "start": "773480",
    "end": "778670"
  },
  {
    "text": "this product we found that most use cases for ordered queues actually have a",
    "start": "778670",
    "end": "783860"
  },
  {
    "text": "lower transaction rate so so we feel that that's acceptable so how does this work let's go into some",
    "start": "783860",
    "end": "790220"
  },
  {
    "start": "788000",
    "end": "788000"
  },
  {
    "text": "of the details let's start with a very simple case so it's an ordered queue your producer sends a message to the",
    "start": "790220",
    "end": "795890"
  },
  {
    "text": "queue let's say it sends message a waits for acknowledgment sends message B waits for an acknowledgment since message C",
    "start": "795890",
    "end": "802640"
  },
  {
    "text": "you're guaranteed that the consumer will get those messages in order that's kind of obvious very simple case gets more",
    "start": "802640",
    "end": "809360"
  },
  {
    "text": "interesting when we talk about message groups so message groups are multiple ordered",
    "start": "809360",
    "end": "814910"
  },
  {
    "text": "streams of messages within a queue so with five folk use the the send",
    "start": "814910",
    "end": "820670"
  },
  {
    "text": "message API call that we have with sqs has an additional parameter which is a message group ID",
    "start": "820670",
    "end": "826750"
  },
  {
    "text": "so when you send a message you pass that message group ID it's a string it can be an empty string if you like anything you",
    "start": "826750",
    "end": "833660"
  },
  {
    "text": "want whatever you define will recognize that as a group ID so let's say oh",
    "start": "833660",
    "end": "840160"
  },
  {
    "text": "there we go sorry so let's say we send message a on Group",
    "start": "840160",
    "end": "845450"
  },
  {
    "start": "841000",
    "end": "841000"
  },
  {
    "text": "one then I send message X on group 2",
    "start": "845450",
    "end": "851560"
  },
  {
    "text": "followed by message Y on group 2 and then message be on Group 1 so now I've",
    "start": "851560",
    "end": "856910"
  },
  {
    "text": "got four messages in my queue so what happens on the receive side what's gonna happen is the first consumer is going to",
    "start": "856910",
    "end": "863720"
  },
  {
    "text": "call make that receive message call it's gonna actually get message a message a is then going to be invisible",
    "start": "863720",
    "end": "870200"
  },
  {
    "text": "to any other consumers likewise I've got a second consumer that's that's calling receive message",
    "start": "870200",
    "end": "875930"
  },
  {
    "text": "it's gonna get message X is the next available message in the queue from group two",
    "start": "875930",
    "end": "881200"
  },
  {
    "text": "now neither consumer or no other consumers can get message B or message Y",
    "start": "881200",
    "end": "887200"
  },
  {
    "text": "until those messages are finished processing so that's the ordering capability",
    "start": "887200",
    "end": "893800"
  },
  {
    "text": "so now my first consumer has finished processing message a so what happens",
    "start": "893800",
    "end": "901329"
  },
  {
    "text": "well the consumer that was processing message a gets message Y from group two",
    "start": "901900",
    "end": "908560"
  },
  {
    "text": "okay so there's actually no affinity between consumers and message groups the",
    "start": "908560",
    "end": "914000"
  },
  {
    "text": "reason for that is allows you to scale your consumers independently and not have to worry",
    "start": "914000",
    "end": "919700"
  },
  {
    "text": "about tying consumers to a specific message group and strict ordering is always maintained within a group",
    "start": "919700",
    "end": "927520"
  },
  {
    "text": "so likewise the consumer that was originally originally processing",
    "start": "927520",
    "end": "933190"
  },
  {
    "text": "message axé gets message be from group two",
    "start": "933190",
    "end": "939579"
  },
  {
    "text": "does that make sense yeah okay good so that's ordering it's relatively simple",
    "start": "940330",
    "end": "946790"
  },
  {
    "start": "944000",
    "end": "944000"
  },
  {
    "text": "but you know a few the nuances to it what about deduplication so it's another another great feature a lot of customers",
    "start": "946790",
    "end": "954110"
  },
  {
    "text": "are very excited about this as well so with 500 queues we prevent duplicate",
    "start": "954110",
    "end": "959720"
  },
  {
    "text": "messages so there's a couple of scenarios so first of all when you're sending there's sometimes the case where",
    "start": "959720",
    "end": "965720"
  },
  {
    "text": "you might send a message and maybe you don't know if SQS gaudiya you didn't get an acknowledgment back and in that",
    "start": "965720",
    "end": "972740"
  },
  {
    "text": "scenario we want to avoid a duplicate so what we let you do is we let you retry that message as many times as you want",
    "start": "972740",
    "end": "978470"
  },
  {
    "text": "and there's actually two different options we provide to avoid duplicates and I'll talk about those in the next",
    "start": "978470",
    "end": "985400"
  },
  {
    "text": "couple slides and how those work but basically there's a message deduplication ID you can use or there's content based e duplication and either",
    "start": "985400",
    "end": "992630"
  },
  {
    "text": "one is useful depending on your use case",
    "start": "992630",
    "end": "997030"
  },
  {
    "text": "okay so first of all let's go through an example of D DuPont's n so let's say I'm",
    "start": "998290",
    "end": "1003640"
  },
  {
    "text": "sending message a so what I'm gonna do with MIT when I send message a house I'm gonna send an",
    "start": "1003640",
    "end": "1009490"
  },
  {
    "text": "additional parameter with that API call and it's a message deduplication ID I can set that to whatever I want it could",
    "start": "1009490",
    "end": "1015970"
  },
  {
    "text": "be a you that you UID or something like that let's say in this case I pass a d dupe idea of foo",
    "start": "1015970",
    "end": "1023280"
  },
  {
    "text": "okay so let's say the consumer is waiting it's got a receive message call pending on the queue and it gets that",
    "start": "1024240",
    "end": "1030670"
  },
  {
    "text": "message immediately what happens is we have this deduplication buffer it's not",
    "start": "1030670",
    "end": "1035829"
  },
  {
    "text": "visible to you it's just something that happens behind the scenes so we keep basically a the D dupe ID of that",
    "start": "1035830",
    "end": "1042579"
  },
  {
    "text": "message a in that deduplication buffer so now if something goes wrong for",
    "start": "1042580",
    "end": "1047800"
  },
  {
    "text": "example that producer never got the okay back from sqs because you know there's a",
    "start": "1047800",
    "end": "1053350"
  },
  {
    "text": "network fault or something like that so we can retry so we can retry we can resend that message same D dupe I do you",
    "start": "1053350",
    "end": "1058810"
  },
  {
    "text": "use DP by D foo sqs recognizes that that message has already been processed and",
    "start": "1058810",
    "end": "1065080"
  },
  {
    "text": "ready sent off to a consumer so it won't create the duplicate so that's the basic",
    "start": "1065080",
    "end": "1070180"
  },
  {
    "text": "sin deduplication there's also content-based e duplication so you can also turn on a feature where you don't",
    "start": "1070180",
    "end": "1075730"
  },
  {
    "text": "have to send the D dupe ID we actually look at the content your payload we create a sha-256 hash of that payload",
    "start": "1075730",
    "end": "1082510"
  },
  {
    "text": "and then if there's any duplicate of that hash then we won't we won't create a duplicate so there's two different",
    "start": "1082510",
    "end": "1089290"
  },
  {
    "text": "options there different options are useful for different use cases there are some use cases where you might want to",
    "start": "1089290",
    "end": "1095800"
  },
  {
    "text": "have the same payload in different messages so you might not want to use content-based deduplication for those use cases",
    "start": "1095800",
    "end": "1102870"
  },
  {
    "text": "okay so how about receive deduplication so and",
    "start": "1104490",
    "end": "1110440"
  },
  {
    "start": "1107000",
    "end": "1107000"
  },
  {
    "text": "you know we call this exactly once processing so it's not exactly exact not",
    "start": "1110440",
    "end": "1115630"
  },
  {
    "text": "not exactly once delivery you don't always want that because let's say your consumer gets a message and fails and",
    "start": "1115630",
    "end": "1122020"
  },
  {
    "text": "the message is never processed you want to make sure another consumer can get that message process it so sqs will make",
    "start": "1122020",
    "end": "1129190"
  },
  {
    "text": "that vet message available to another consumer if it isn't completely processed and the consumer can actually retry on",
    "start": "1129190",
    "end": "1136360"
  },
  {
    "text": "receive as well just kind of very similar to what I just talked about with retrying on send so let's talk about how",
    "start": "1136360",
    "end": "1142180"
  },
  {
    "text": "that works okay so let's say in this example I've",
    "start": "1142180",
    "end": "1148240"
  },
  {
    "text": "got three messages in my queue a B and C the consumer sends a receive message request to sqs and there's an additional",
    "start": "1148240",
    "end": "1156280"
  },
  {
    "text": "parameter that can be sent which is an attempt ID so it's my receive attempt ID so in this case let's say it's attempt",
    "start": "1156280",
    "end": "1162700"
  },
  {
    "text": "ID equal to bar so what happens is I request a message I get message a and",
    "start": "1162700",
    "end": "1168910"
  },
  {
    "text": "the way sqs works is that message a stays in the queue but it's invisible to",
    "start": "1168910",
    "end": "1174010"
  },
  {
    "text": "other consumers so indicated by the gray shading there but let's say now we have a network failure and",
    "start": "1174010",
    "end": "1180450"
  },
  {
    "text": "SQS thinks it sent message a to the consumer but the consumer didn't get the",
    "start": "1180450",
    "end": "1186820"
  },
  {
    "text": "message because there was a network failure so what happens in this case",
    "start": "1186820",
    "end": "1191700"
  },
  {
    "text": "let's say the network now comes back online so the consumer with these FIFO queues the consumer can do is call",
    "start": "1191940",
    "end": "1199060"
  },
  {
    "text": "receive message again with the same tidy so attempt ID equal to bar and it",
    "start": "1199060",
    "end": "1204940"
  },
  {
    "text": "actually can receive another copy of that message from SQS so basically kind of cuts the",
    "start": "1204940",
    "end": "1212080"
  },
  {
    "text": "visibility time out short and gives gives sqs are it gives the consumer another copy of that message the other",
    "start": "1212080",
    "end": "1217840"
  },
  {
    "text": "option that's available which is is standard SKS feature is just to wait for the visibility visibility time out on",
    "start": "1217840",
    "end": "1223570"
  },
  {
    "text": "that message to expire and then it will be available for another consumer so there's a few different options there",
    "start": "1223570",
    "end": "1229150"
  },
  {
    "text": "for for dealing with failure and for dealing with duplicates okay",
    "start": "1229150",
    "end": "1235559"
  },
  {
    "start": "1234000",
    "end": "1234000"
  },
  {
    "text": "so let's talk a bit about pricing so FIFO queues",
    "start": "1235559",
    "end": "1242820"
  },
  {
    "text": "just like sqs as always as always being is pay-as-you-go pricing so there it's a",
    "start": "1242820",
    "end": "1248470"
  },
  {
    "text": "low cot a low / low cost per API request pricing you pay only for what you use there's no",
    "start": "1248470",
    "end": "1254740"
  },
  {
    "text": "upfront costs so FIFO queues are priced at $0.50 per million API requests it's",
    "start": "1254740",
    "end": "1261130"
  },
  {
    "text": "the same price as sqs standard queues were before we launched why fill queues and in conjunction we've lowered the",
    "start": "1261130",
    "end": "1268299"
  },
  {
    "text": "price of the SQL standard queues to 40 cents per million requests and as as",
    "start": "1268299",
    "end": "1274450"
  },
  {
    "text": "previously the first million sq s requests per month are free whether they're FIFO or standard queue requests",
    "start": "1274450",
    "end": "1281730"
  },
  {
    "text": "obviously this is implied but we will continue to support standard queues they're very useful for for many use",
    "start": "1281730",
    "end": "1287799"
  },
  {
    "text": "cases and FIFO queues are useful for for many use cases so we'll keep supporting both of those queue types",
    "start": "1287799",
    "end": "1295620"
  },
  {
    "text": "so one of the most fundamental benefits of the cloud is the ability to to shed",
    "start": "1296850",
    "end": "1302140"
  },
  {
    "start": "1297000",
    "end": "1297000"
  },
  {
    "text": "the low value undifferentiated tasks and really increase the speed of your operations and hosted messaging is",
    "start": "1302140",
    "end": "1308230"
  },
  {
    "text": "something that will help you do that you can move from you know upfront expense to variable expense you can stop",
    "start": "1308230",
    "end": "1315340"
  },
  {
    "text": "guessing at capacity planning just scales as you need more capacity you can",
    "start": "1315340",
    "end": "1320770"
  },
  {
    "text": "remove that complicated infrastructure management and you can go global in minutes as I mentioned sqs is available",
    "start": "1320770",
    "end": "1327399"
  },
  {
    "text": "in in every region that we support globally there's many enterprises already taking",
    "start": "1327399",
    "end": "1334990"
  },
  {
    "start": "1332000",
    "end": "1332000"
  },
  {
    "text": "advantage of AWS messaging services both sqs and SNS some of them are on this",
    "start": "1334990",
    "end": "1340900"
  },
  {
    "text": "slide one of them is our good friends at Capital One one of the largest banks in",
    "start": "1340900",
    "end": "1346000"
  },
  {
    "text": "the US and I'd like to introduce Quinn Easterbrook from Capital One who's going to talk about some of his experiences",
    "start": "1346000",
    "end": "1352210"
  },
  {
    "text": "migrating from an on-prem message oriented middleware serve solution to hosted messaging services on AWS take it",
    "start": "1352210",
    "end": "1360430"
  },
  {
    "text": "away Quinn thanks Trevor so as Trevor as a lot of people are doing",
    "start": "1360430",
    "end": "1367990"
  },
  {
    "text": "right now we're going through a very large migration we're taking an approach to really modernize a lot of our systems",
    "start": "1367990",
    "end": "1375520"
  },
  {
    "text": "and utilizing AWS where it provides a benefit for us we've worked with our teams internally",
    "start": "1375520",
    "end": "1381940"
  },
  {
    "text": "we've gone through a lot of different solutions across the board and we've looked at the opportunity to integrate",
    "start": "1381940",
    "end": "1387310"
  },
  {
    "text": "the systems using more modern components and technology services from AWS I think it's pretty much a no-brainer for",
    "start": "1387310",
    "end": "1393430"
  },
  {
    "text": "everybody here but it's it's it's something to be stated that you know we're obviously a large bank and having",
    "start": "1393430",
    "end": "1399850"
  },
  {
    "text": "and utilizing cloud-based services has really been a big lift for us so AWS is our predominant cloud provider",
    "start": "1399850",
    "end": "1407790"
  },
  {
    "text": "we're using a combination of the basic services such as compute and storage as",
    "start": "1407790",
    "end": "1413200"
  },
  {
    "text": "well as a lot of the platform services like it like sqs and RDS lamda redshift across the board",
    "start": "1413200",
    "end": "1421960"
  },
  {
    "text": "we're basically using them all and we're going through and we're reducing our overall datacenter footprint with the",
    "start": "1421960",
    "end": "1429010"
  },
  {
    "text": "support of the AWS migration services and some of the key partners that we work with on a daily basis",
    "start": "1429010",
    "end": "1436140"
  },
  {
    "text": "so a little background on Capital One I I know this is a it's a little bit of an",
    "start": "1436140",
    "end": "1442450"
  },
  {
    "start": "1437000",
    "end": "1437000"
  },
  {
    "text": "eye chart and a robo slide but I do want to highlight a couple things so most",
    "start": "1442450",
    "end": "1447820"
  },
  {
    "text": "people think cards when you think about Capital One our ads are everywhere for cards but the bank gets lost in the",
    "start": "1447820",
    "end": "1453610"
  },
  {
    "text": "shuffle a lot we are the 8th largest US bank based on deposits we've got major",
    "start": "1453610",
    "end": "1460150"
  },
  {
    "text": "operations in 15 US cities as well as Canada in the UK and then we've got 65",
    "start": "1460150",
    "end": "1467140"
  },
  {
    "text": "million customer accounts across all of our individual individual lines of business",
    "start": "1467140",
    "end": "1473650"
  },
  {
    "text": "and we've got 45,000 associates we're also ranked number 112 on a",
    "start": "1473650",
    "end": "1478660"
  },
  {
    "text": "fortune 500 list so focusing on the retail efforts we're",
    "start": "1478660",
    "end": "1485650"
  },
  {
    "start": "1481000",
    "end": "1481000"
  },
  {
    "text": "taking an approach to really go through an iterative improvement as we're going through the migration the biggest",
    "start": "1485650",
    "end": "1491560"
  },
  {
    "text": "challenge I think a lot of people see is you know there's lots of shiny new things that are in AWS there's lots of",
    "start": "1491560",
    "end": "1497230"
  },
  {
    "text": "there's lots of great services that really provide a lot of benefit but you have to take a narrative approach or do",
    "start": "1497230",
    "end": "1503020"
  },
  {
    "text": "a migration can't go through the Big Bang you can't go and change everything all at once it just makes it too",
    "start": "1503020",
    "end": "1508120"
  },
  {
    "text": "difficult so so we're going through and integrating modern components while",
    "start": "1508120",
    "end": "1513250"
  },
  {
    "text": "being able to still maintain our existing architecture we've spent a lot of many years building out the",
    "start": "1513250",
    "end": "1518680"
  },
  {
    "text": "architecture and and and we're pretty happy with most of it so it's something that you know as we're pushing in the",
    "start": "1518680",
    "end": "1524740"
  },
  {
    "text": "different components you want to make sure that we're utilizing as much as possible with maintaining the existing architecture",
    "start": "1524740",
    "end": "1531450"
  },
  {
    "text": "obviously providing access to existing applications is paramount when",
    "start": "1531450",
    "end": "1536860"
  },
  {
    "text": "you're going through any kind of a transition like this and we want to modernize as much as possible without",
    "start": "1536860",
    "end": "1542230"
  },
  {
    "text": "really burdening our application development teams as I go through this you're gonna you're gonna think that",
    "start": "1542230",
    "end": "1547420"
  },
  {
    "text": "Trevor and I spent a good amount of time going back and forth on this because it's it's a lot of things that I'm gonna say here are gonna ring true from what",
    "start": "1547420",
    "end": "1553480"
  },
  {
    "text": "he said as well so when we're looking at the areas of upgrade using the using AWS specific",
    "start": "1553480",
    "end": "1561280"
  },
  {
    "text": "services like SQS and moving away from self managing systems I know there's",
    "start": "1561280",
    "end": "1567610"
  },
  {
    "text": "still one guy that still wants to manage their systems but J bar but our Q system is not what we're looking to continue to",
    "start": "1567610",
    "end": "1573550"
  },
  {
    "text": "manage so as well as as well as you know being able to focus on the delivery and",
    "start": "1573550",
    "end": "1578740"
  },
  {
    "text": "reliability of the systems we're also looking at compute services",
    "start": "1578740",
    "end": "1584080"
  },
  {
    "text": "so as we as we move some of our legacy applications we're moving to more modern computer is's and then being a bank a",
    "start": "1584080",
    "end": "1593680"
  },
  {
    "text": "big focus on resiliency and reliability for us so leveraging things like auto scaling the multi data center",
    "start": "1593680",
    "end": "1600760"
  },
  {
    "text": "environments that are inherent AWS really make it a pretty simple simple task for us",
    "start": "1600760",
    "end": "1607140"
  },
  {
    "text": "so in our current queue system we use JBoss as it is right now",
    "start": "1608700",
    "end": "1614820"
  },
  {
    "text": "we migrated the JBoss a few years back so we're definitely no stranger to",
    "start": "1614820",
    "end": "1620290"
  },
  {
    "text": "migrations in general and it specifically migrations with queuing so with any JBoss has been fairly stable",
    "start": "1620290",
    "end": "1629530"
  },
  {
    "text": "for us but with anything that says that's a lynchpin and a pivotal system like queueing you always have some kind",
    "start": "1629530",
    "end": "1634810"
  },
  {
    "text": "of challenges go with it one of the biggest challenges for us is maintenance whether it's on the software the systems",
    "start": "1634810",
    "end": "1641350"
  },
  {
    "text": "related to it the database is when maintenance is required for you routinely have to take downtime on the",
    "start": "1641350",
    "end": "1647620"
  },
  {
    "text": "applications and making and it would either be in a",
    "start": "1647620",
    "end": "1652660"
  },
  {
    "text": "rolling fashion or in a full outage so it really depended on how we went through and did the art had our architecture some systems we were able",
    "start": "1652660",
    "end": "1660220"
  },
  {
    "text": "to do do it rolling we're we're able to swing the queues over to one of the other systems take down half the cluster",
    "start": "1660220",
    "end": "1666010"
  },
  {
    "text": "and then and then move it over but there's others it's it's definitely it was definitely a full outage",
    "start": "1666010",
    "end": "1672090"
  },
  {
    "text": "so and and when you look at you look at maintenance you know can range from things like hung cues high error",
    "start": "1672090",
    "end": "1679360"
  },
  {
    "text": "accounts in your message viability patching in the operating system of database software upgrades and",
    "start": "1679360",
    "end": "1685630"
  },
  {
    "text": "maintenance one thing that I found pretty funny that that was advantageous that I received it",
    "start": "1685630",
    "end": "1691330"
  },
  {
    "text": "literally 10 minutes for a walk in the door was that we got an end-of-life notice from Jay Boston on the current",
    "start": "1691330",
    "end": "1698320"
  },
  {
    "text": "version that we're using which is 5'4 so it literally and at the end of life date forth is today so",
    "start": "1698320",
    "end": "1705960"
  },
  {
    "text": "another pressure that we have is pushing a lot to our development teams whenever we have to do an upgrade to that JMS",
    "start": "1705960",
    "end": "1713170"
  },
  {
    "text": "interaction the client it's it that changes can range from a small change",
    "start": "1713170",
    "end": "1718660"
  },
  {
    "text": "but there's a lot of times that we've had to do some pretty heavy recode xand how the interaction goes",
    "start": "1718660",
    "end": "1725070"
  },
  {
    "text": "accounting for because we've got physical servers and databases it causes a lot of challenges when we're",
    "start": "1725670",
    "end": "1732700"
  },
  {
    "text": "accounting for growth as well as aging hardware and software with with having things that are in a",
    "start": "1732700",
    "end": "1738430"
  },
  {
    "text": "managed service perspective we get it we get out of all of that which which is obviously a big a big lift for us",
    "start": "1738430",
    "end": "1745470"
  },
  {
    "text": "the other part is really having to administer multiple servers to account for resiliency when you go through and",
    "start": "1745470",
    "end": "1752770"
  },
  {
    "text": "have to build queue systems you it's one of those systems where you really want to you put it in place and then and then",
    "start": "1752770",
    "end": "1758590"
  },
  {
    "text": "you walk away from it you know it's a it's it's you try not to think about it as much as possible you try to touch it as little as possible because it is so",
    "start": "1758590",
    "end": "1765570"
  },
  {
    "text": "pivotal to a lot of the interactions as it sits right now we've got 10 servers",
    "start": "1765570",
    "end": "1772150"
  },
  {
    "text": "in production they're individual clusters for each for each individual instance so it accounts for five",
    "start": "1772150",
    "end": "1778780"
  },
  {
    "text": "clusters that's improv we've got an additional ten in dr for the exact sizing and then we've got",
    "start": "1778780",
    "end": "1784860"
  },
  {
    "text": "upwards of thirty five lower environments that all have individual JBoss instances in them so it's a it's a",
    "start": "1784860",
    "end": "1791320"
  },
  {
    "text": "significant amount of effort to really maintain the systems the other thing you get when you've got",
    "start": "1791320",
    "end": "1797530"
  },
  {
    "text": "individual clusters like that is you lose a visibility so when you're accounting for having to individually",
    "start": "1797530",
    "end": "1804040"
  },
  {
    "text": "monitor and then account for the growth of those applications it's it requires",
    "start": "1804040",
    "end": "1809230"
  },
  {
    "text": "constant constant care and feeding and it's really something we want to take off our operations staff",
    "start": "1809230",
    "end": "1814560"
  },
  {
    "start": "1814000",
    "end": "1814000"
  },
  {
    "text": "so I want to walk through our existing application integration to a high level",
    "start": "1814560",
    "end": "1820260"
  },
  {
    "text": "this is a consistent it's a consistent model that we have for",
    "start": "1820260",
    "end": "1825730"
  },
  {
    "text": "any of the systems that we have that are utilize and queuing we obviously have a lot of other systems that utilize utilize HTTP endpoints so this is that",
    "start": "1825730",
    "end": "1833680"
  },
  {
    "text": "but this is traditionally talking about what we use from a queueing perspective so if we walk through from left to right",
    "start": "1833680",
    "end": "1840460"
  },
  {
    "text": "if you start at number bullet number one that's basically where the users interact with the front end web app",
    "start": "1840460",
    "end": "1846520"
  },
  {
    "text": "generally these are front ended with a an EOB an AWS or their or their front",
    "start": "1846520",
    "end": "1851830"
  },
  {
    "text": "end with that five on-prem and then those users then either they're either",
    "start": "1851830",
    "end": "1856960"
  },
  {
    "text": "going to be internal external customers and they're going to interact with the web front end they will go through the",
    "start": "1856960",
    "end": "1862600"
  },
  {
    "text": "process of one of our flows to submit the request to the front end and then whether it's an update or a read",
    "start": "1862600",
    "end": "1869140"
  },
  {
    "text": "then puts a message on to the queue the request queue which is that step to the customers requests can be multi-part",
    "start": "1869140",
    "end": "1876550"
  },
  {
    "text": "or singular we've got use cases for both so if it's if it's something where we have to fill multiple pieces of a form",
    "start": "1876550",
    "end": "1883150"
  },
  {
    "text": "there are multiple pieces of a flow then there's the know they'll go through as multiple messages and then those",
    "start": "1883150",
    "end": "1888670"
  },
  {
    "text": "messages are returned sequentially asynchronously depending on how the front-end is really putting them back",
    "start": "1888670",
    "end": "1894010"
  },
  {
    "text": "together the message goes to the general queue which is and that's stamped with an",
    "start": "1894010",
    "end": "1899380"
  },
  {
    "text": "individual message ID and that's and that's help for processing for the middleware servers and then it's step",
    "start": "1899380",
    "end": "1905140"
  },
  {
    "text": "three the middleware of servers and pick up the message process it downstream to either the customer databases third",
    "start": "1905140",
    "end": "1910780"
  },
  {
    "text": "party applications other services and then they once processing is complete then they put it back on the reply queue",
    "start": "1910780",
    "end": "1917260"
  },
  {
    "text": "which is at Step five the front-end web server then then queries the rope Rikuo",
    "start": "1917260",
    "end": "1922530"
  },
  {
    "text": "the reply Q queries are based on the message ID that was stamped as part of",
    "start": "1922530",
    "end": "1927550"
  },
  {
    "text": "the initial request and then and then once that's then queried and then pulled back and then it's and then it's then",
    "start": "1927550",
    "end": "1933760"
  },
  {
    "text": "presented back to the customer in the web front-end and if it's an individual request it comes back immediately if",
    "start": "1933760",
    "end": "1940540"
  },
  {
    "text": "it's a combined request or sometimes we have to basically hold those messages in in queue and then allow for them to then",
    "start": "1940540",
    "end": "1946930"
  },
  {
    "text": "process and process sequentially to give a little more detail around the",
    "start": "1946930",
    "end": "1953140"
  },
  {
    "start": "1950000",
    "end": "1950000"
  },
  {
    "text": "complexity to the queue system you could see the volume of Q's is you look down that down that that picture on the",
    "start": "1953140",
    "end": "1959560"
  },
  {
    "text": "right-hand side this is this is literally one of our this is one single app one single JBoss",
    "start": "1959560",
    "end": "1966040"
  },
  {
    "text": "server and one application that has this amount of queues we've got a lot of inter inter queue inner server",
    "start": "1966040",
    "end": "1972520"
  },
  {
    "text": "communication as well as interest server communication but you can really see the distinctness distinct distinctness and complexity of",
    "start": "1972520",
    "end": "1979270"
  },
  {
    "text": "the queues and really why we have challenges visibility I really this is this is a pretty standard representation",
    "start": "1979270",
    "end": "1985960"
  },
  {
    "text": "so I don't think it's gonna be really really unique to a lot of situations or need to us but it is but it's definitely",
    "start": "1985960",
    "end": "1992560"
  },
  {
    "text": "something that we want to we're looking to move away from because the sizing of the queues and the",
    "start": "1992560",
    "end": "1999730"
  },
  {
    "text": "servers are static for each individual application generally when we look at how we sized",
    "start": "1999730",
    "end": "2005610"
  },
  {
    "text": "them we've had to go on based on what we've done previously we're standing up individual clusters we're hoping that",
    "start": "2005610",
    "end": "2010890"
  },
  {
    "text": "that it's it's enough to be able to handle the volume but not having any dynamic value a dynamic ability to be",
    "start": "2010890",
    "end": "2017310"
  },
  {
    "text": "able to scale out it gives it makes it a challenge that you know when we've got low low yield it's a low low utilized",
    "start": "2017310",
    "end": "2024810"
  },
  {
    "text": "systems then we don't ever scale them in when we've got high utilized systems or we've got any type of a time when we get",
    "start": "2024810",
    "end": "2031890"
  },
  {
    "text": "a surge then they don't then we don't get any kind of a scale up on them either and then because you can see all of",
    "start": "2031890",
    "end": "2041340"
  },
  {
    "text": "these queues all the way down here this is something that's hat that we have to do manually so every one of these queues",
    "start": "2041340",
    "end": "2046560"
  },
  {
    "text": "is built out manually we put it out we leave it as is there's individual static property files that go along with it for",
    "start": "2046560",
    "end": "2053490"
  },
  {
    "text": "every one of these for every one of these and then if you look at our dr scenario for these applications that are",
    "start": "2053490",
    "end": "2059610"
  },
  {
    "text": "integrating with the queues generally it's a slide in and another another set of property files recycle tomcat and",
    "start": "2059610",
    "end": "2066330"
  },
  {
    "text": "then and then it'll swing over to the other to the other side but that does take a a down time on the on the front",
    "start": "2066330",
    "end": "2072120"
  },
  {
    "text": "end applications that are there working through it and then obviously something as small as",
    "start": "2072120",
    "end": "2077220"
  },
  {
    "text": "a as a as a miss type in the naming then it's going to cause issues that you don't that you don't necessarily see",
    "start": "2077220",
    "end": "2082710"
  },
  {
    "text": "when you first stand it up you may it may be something that you that you're chasing around for a while",
    "start": "2082710",
    "end": "2088580"
  },
  {
    "text": "so and then the other the other thing that we have to is that you know with the volume accused like this and the",
    "start": "2088580",
    "end": "2095730"
  },
  {
    "text": "number of applications that all have this exact same scenario we use a lot of similar back-end systems",
    "start": "2095730",
    "end": "2101730"
  },
  {
    "text": "so one challenge we have with visibility is that if there's a if we see a spike",
    "start": "2101730",
    "end": "2107010"
  },
  {
    "text": "in messages jumping up and we see we see errors error counts driving up on an individual application it it's a lot of",
    "start": "2107010",
    "end": "2115290"
  },
  {
    "text": "times you can lead you down the path of thinking that there's an individual there's an application issue with that server or that instance or the",
    "start": "2115290",
    "end": "2120900"
  },
  {
    "text": "application itself but not actually digging downstream which is where a lot of times you'll find find a problem but",
    "start": "2120900",
    "end": "2126540"
  },
  {
    "text": "you can't correlate that together with all the individual clusters",
    "start": "2126540",
    "end": "2130790"
  },
  {
    "start": "2131000",
    "end": "2131000"
  },
  {
    "text": "so we went through the selection criteria we looked at several options obviously",
    "start": "2132990",
    "end": "2138930"
  },
  {
    "text": "one was upgrading JBoss and putting that into putting that into AWS we've also",
    "start": "2138930",
    "end": "2144030"
  },
  {
    "text": "looked at other open-source vendors and and other canned and cloud-based solution we had a we had many immutable",
    "start": "2144030",
    "end": "2151380"
  },
  {
    "text": "conditions that we had to be ahead to meet to make sure that we went through a seamless migration top of the list was",
    "start": "2151380",
    "end": "2157530"
  },
  {
    "text": "paid it was it was really the simplified administration with some of the challenges we've had in the past we're really looking for a",
    "start": "2157530",
    "end": "2164160"
  },
  {
    "text": "system that was easy to use as well as as well as having the features built in",
    "start": "2164160",
    "end": "2169349"
  },
  {
    "text": "that we've had to cobble together in the past we've we've had to custom write monitoring for for a lot of the JMS cues",
    "start": "2169349",
    "end": "2176099"
  },
  {
    "text": "as they said now we've we've used you know some of the some of the other systems in the past that have their own",
    "start": "2176099",
    "end": "2182280"
  },
  {
    "text": "monitoring built-in but there's never really a good good solution look at everything",
    "start": "2182280",
    "end": "2187609"
  },
  {
    "text": "the other part with sqs is that's that's a great features dynamic queue creation so when we've had to do this in the past",
    "start": "2187609",
    "end": "2195030"
  },
  {
    "text": "as I said we go through and we have to basically build everything by hand and when you're building it by hand there's",
    "start": "2195030",
    "end": "2201150"
  },
  {
    "text": "always gonna be challenges to come in even if it's something that's a repeatable portion of it it's still you're still having to build the initial",
    "start": "2201150",
    "end": "2206640"
  },
  {
    "text": "infrastructure by hand with dynamic queue creation obviously that simplifies a lot of the initial build-out",
    "start": "2206640",
    "end": "2213799"
  },
  {
    "text": "patching and updating of the systems is removed at this point gives us the ability to basically hand that time back",
    "start": "2213799",
    "end": "2220020"
  },
  {
    "text": "to our operations staff to focus on other things besides besides the queue administration and and really",
    "start": "2220020",
    "end": "2225030"
  },
  {
    "text": "maintaining the system's sizing the queues based on the usage pattern is huge we've got we've got some",
    "start": "2225030",
    "end": "2231569"
  },
  {
    "text": "of our call center applications that aren't used at all so they they're done at 11 o'clock at night they're not used",
    "start": "2231569",
    "end": "2237000"
  },
  {
    "text": "those 7:00 in the morning but we've got we've got infrastructure and sits there I - all the time and and it's waiting for requests but there's nothing going",
    "start": "2237000",
    "end": "2243030"
  },
  {
    "text": "through it and as well as things like being able to have surges Black Friday's",
    "start": "2243030",
    "end": "2248220"
  },
  {
    "text": "a good one that that we get it we get a good amount of surges payday Fridays we get it surges and and we don't have the",
    "start": "2248220",
    "end": "2254430"
  },
  {
    "text": "the ability to be able to scale those up right now we also need to make sure that we have",
    "start": "2254430",
    "end": "2260280"
  },
  {
    "text": "full encryption and to end obviously you its bank we need to make sure that we have",
    "start": "2260280",
    "end": "2266119"
  },
  {
    "text": "full full in motion encryption and with TLS 1/2 a sqs meets the bill on that as",
    "start": "2266119",
    "end": "2272900"
  },
  {
    "text": "well flexibility in the queue types is something that we always want to have the ability to be able to have be",
    "start": "2272900",
    "end": "2278869"
  },
  {
    "text": "flexible you don't ever want to put something out there that you're never gonna be able to have any changes on so",
    "start": "2278869",
    "end": "2284510"
  },
  {
    "text": "it's Trevor stated earlier FIFO is a new feature that you know that can be utilized for",
    "start": "2284510",
    "end": "2290390"
  },
  {
    "text": "either for many different types of scenarios we're in our and our",
    "start": "2290390",
    "end": "2295670"
  },
  {
    "text": "integrations we're utilizing both classic and FIFO FIFO for the send classic for the further receive mainly",
    "start": "2295670",
    "end": "2303109"
  },
  {
    "text": "that's because we've got applications down string with variable timings and we want to be able to pick those messages",
    "start": "2303109",
    "end": "2308210"
  },
  {
    "text": "out of order so if we want to be able to do something like load a load a customer balance up before before",
    "start": "2308210",
    "end": "2314630"
  },
  {
    "text": "it goes into showing the last 50 transactions then those are that we want to make sure that",
    "start": "2314630",
    "end": "2320030"
  },
  {
    "text": "we start to load those parts out of order so continuing on with the selection",
    "start": "2320030",
    "end": "2326869"
  },
  {
    "text": "criteria we need to ensure there was an easy integration with our application code",
    "start": "2326869",
    "end": "2332109"
  },
  {
    "text": "it's small with small changes in the in art and our Java code now we were able to update the client application so it",
    "start": "2332109",
    "end": "2338210"
  },
  {
    "text": "could use the legacy JMS calls being a bank and a large enterprise that",
    "start": "2338210",
    "end": "2345109"
  },
  {
    "text": "focus on resiliency is huge for us the multi a-z deploys that you get with that",
    "start": "2345109",
    "end": "2350630"
  },
  {
    "text": "are inherent AWS is a is a big is it really is a really big big piece for us",
    "start": "2350630",
    "end": "2356839"
  },
  {
    "text": "it gets us the ability to be able to have resiliency without having to pre build it and moving to a server list solution and",
    "start": "2356839",
    "end": "2364280"
  },
  {
    "text": "greatly simplifies the overall administration allows our teams to really focus on the infrastructure and feature builds and",
    "start": "2364280",
    "end": "2370820"
  },
  {
    "text": "not having to do queue administration so I wanted to briefly touch on the",
    "start": "2370820",
    "end": "2376700"
  },
  {
    "start": "2373000",
    "end": "2373000"
  },
  {
    "text": "positive interactions we have with Trevor and the sqs team as well as a pro serve teams that we've been working with",
    "start": "2376700",
    "end": "2382450"
  },
  {
    "text": "because we were participating the private beta program it gave us the ability to really work work side by side",
    "start": "2382450",
    "end": "2388670"
  },
  {
    "text": "with with Trevor on the team we were able to help develop some of the solutions and features that really not",
    "start": "2388670",
    "end": "2394640"
  },
  {
    "text": "only suit our needs as well as benefit our infrastructure but also providing input to other customers that",
    "start": "2394640",
    "end": "2401180"
  },
  {
    "text": "that other customers will benefit from as well we were also able to work with them to",
    "start": "2401180",
    "end": "2407660"
  },
  {
    "text": "be able to solve some of our complex issues one of our one of our challenges is as I stated we go through and we",
    "start": "2407660",
    "end": "2414470"
  },
  {
    "text": "query the message queues so when an application makes a call it goes and puts the the message on the queue we",
    "start": "2414470",
    "end": "2420410"
  },
  {
    "text": "then we then query for it that's based on a time it's time based on the application side if we've got if we",
    "start": "2420410",
    "end": "2426950"
  },
  {
    "text": "believe that the calls all downstream to a particular stored procedure are always going to take you know four seconds to",
    "start": "2426950",
    "end": "2433820"
  },
  {
    "text": "make that call and we query ad and we've query for that message add ten seconds because we want to give a buffer time",
    "start": "2433820",
    "end": "2439960"
  },
  {
    "text": "those individual queries then add in a considerable amount of time to be able to to be able to then pull that that",
    "start": "2439960",
    "end": "2445970"
  },
  {
    "text": "message back so one of the things that we worked out was going to a thread based model where we basically have a",
    "start": "2445970",
    "end": "2454390"
  },
  {
    "text": "an individual thread worker thread that's waiting with the application and you get a one-to-one pairing with with",
    "start": "2454390",
    "end": "2460730"
  },
  {
    "text": "the response on the queue so it's not it's it's the response back from sqs that then triggers they triggers the the",
    "start": "2460730",
    "end": "2468590"
  },
  {
    "text": "next flow as opposed to having to do a query on the queue but overall it's an extremely positive interaction and I",
    "start": "2468590",
    "end": "2476360"
  },
  {
    "text": "really do appreciate Trevor and team four for how much they've been working with us side-by-side",
    "start": "2476360",
    "end": "2482500"
  },
  {
    "start": "2482000",
    "end": "2482000"
  },
  {
    "text": "so when I walk through the comparison of the existing queues versus a new queue",
    "start": "2482830",
    "end": "2488540"
  },
  {
    "text": "integration looking at the existing queues even though this is this is a high level",
    "start": "2488540",
    "end": "2495260"
  },
  {
    "text": "representation I still think you can see the complexity here this is three separate application so this isn't one",
    "start": "2495260",
    "end": "2501830"
  },
  {
    "text": "contiguous application this would be three separate applications where we've got a web front-end down the left-hand side we've got middleware down that down",
    "start": "2501830",
    "end": "2507890"
  },
  {
    "text": "the other side and then you can see the JBoss queues throughout the middle we have to build those individual clusters",
    "start": "2507890",
    "end": "2513500"
  },
  {
    "text": "and maintain that infrastructure then to be able to be able to have that interaction",
    "start": "2513500",
    "end": "2518830"
  },
  {
    "text": "going on to the new you could say it's a little bit a little",
    "start": "2518830",
    "end": "2524090"
  },
  {
    "text": "bit simple more simplified with having sqs as being the service",
    "start": "2524090",
    "end": "2529220"
  },
  {
    "text": "layer in between it now gives us the ability to be able to utilize that service without having to we have the",
    "start": "2529220",
    "end": "2534670"
  },
  {
    "text": "same exact you know three web apps down the side we had the same exact middleware clusters and now they just",
    "start": "2534670",
    "end": "2540160"
  },
  {
    "text": "talk with the service as opposed to having to have this individual JBoss clusters one thing that's not depicted",
    "start": "2540160",
    "end": "2545590"
  },
  {
    "text": "here is is the queues which I'll get into in the next slide but that's really irrelevant to to a contextual diagram",
    "start": "2545590",
    "end": "2552610"
  },
  {
    "text": "it's it's already complex enough when you look at when you look at the Middle's in the middle of the middle section of it so",
    "start": "2552610",
    "end": "2560099"
  },
  {
    "text": "so let's talk through a detail view this is basically an expansion upon the",
    "start": "2560310",
    "end": "2566530"
  },
  {
    "text": "previous diagram similar to the armed prem depiction and you could see that we take the path from",
    "start": "2566530",
    "end": "2571720"
  },
  {
    "text": "the customer at step one to the web front-end at step two and then instead of putting the messaging the messaging",
    "start": "2571720",
    "end": "2578290"
  },
  {
    "text": "into the messages to the to JBoss are putting it to sqs at step",
    "start": "2578290",
    "end": "2584200"
  },
  {
    "text": "three the middleware processes and messages downstream on the databases as",
    "start": "2584200",
    "end": "2589420"
  },
  {
    "text": "well as the other systems and then there's also inter server interaction that you could see is the those",
    "start": "2589420",
    "end": "2594820"
  },
  {
    "text": "call-outs in step four and five so if you look at that you can see the middleware oh one two and three queue as",
    "start": "2594820",
    "end": "2602260"
  },
  {
    "text": "well as the the individual queues all the way down the pattern is intentionally similar to",
    "start": "2602260",
    "end": "2608680"
  },
  {
    "text": "the previous diagram with one large stipulation we've kept the application code reliability application code in the",
    "start": "2608680",
    "end": "2616060"
  },
  {
    "text": "interaction models but added in a benefit from having the moving to ask us and getting a lot of the reliability",
    "start": "2616060",
    "end": "2621670"
  },
  {
    "text": "scalability and the and easing the overall administration you can see the call out infer FIFO in",
    "start": "2621670",
    "end": "2628900"
  },
  {
    "text": "the send queue and their reply queues and the inner server communication or classic on the reply there's a",
    "start": "2628900",
    "end": "2635020"
  },
  {
    "text": "one-to-one correlation with the with the front-end server so that's the reasoning for having the individual the three",
    "start": "2635020",
    "end": "2641170"
  },
  {
    "text": "individual queues going down they're still built dynamically so it's",
    "start": "2641170",
    "end": "2646810"
  },
  {
    "text": "but it's it's something that we build on startup of the of the the front-end server and this gives it a much smaller",
    "start": "2646810",
    "end": "2653700"
  },
  {
    "text": "path for them to have to go through and deal with as well as having the keeping",
    "start": "2653700",
    "end": "2659620"
  },
  {
    "text": "the messages segmented back to the front-end server and then in the previous",
    "start": "2659620",
    "end": "2666460"
  },
  {
    "text": "example of standing up static use all these wood had rebuilt by hand but have being able to go through and do it as a",
    "start": "2666460",
    "end": "2673170"
  },
  {
    "text": "as a as a part of the the scale up it's it's definitely a huge benefit and then",
    "start": "2673170",
    "end": "2679960"
  },
  {
    "text": "the flexibility in the applications that use queueing you know it's it you don't",
    "start": "2679960",
    "end": "2686230"
  },
  {
    "text": "get it or you you can't get this kind of flexibility without having to go without going to a service it really gives you",
    "start": "2686230",
    "end": "2691359"
  },
  {
    "text": "the ability to dynamically build things out",
    "start": "2691359",
    "end": "2695130"
  },
  {
    "start": "2696000",
    "end": "2696000"
  },
  {
    "text": "so as a wrap up I want to highlight a few key themes that we talk through my",
    "start": "2696960",
    "end": "2703869"
  },
  {
    "text": "grain desk us and we target the key benefits and moving to a more modern cue system with limited application",
    "start": "2703869",
    "end": "2710980"
  },
  {
    "text": "development to do so it one of the biggest challenges you have with a lot of this migration has",
    "start": "2710980",
    "end": "2716410"
  },
  {
    "text": "really been getting the development teams on board it's I don't think it's another gets",
    "start": "2716410",
    "end": "2721720"
  },
  {
    "text": "anything that anybody's not gonna run into a challenge with yeah there's always there's always there's always",
    "start": "2721720",
    "end": "2726970"
  },
  {
    "text": "time constraints that come in with any kind of a development effort and you know making",
    "start": "2726970",
    "end": "2732099"
  },
  {
    "text": "it as easy as possible was one of it was one of the big pieces to it so that's why looking at sqs and being able to",
    "start": "2732099",
    "end": "2738160"
  },
  {
    "text": "leverage there's a lot of the same code without having a lot of complex development was was huge for us",
    "start": "2738160",
    "end": "2744869"
  },
  {
    "text": "being able to utilize the cue systems similar to our other other existing",
    "start": "2744869",
    "end": "2750099"
  },
  {
    "text": "implementation it gives us a lot of seamless migration we're going down a path of building everything site in parallel side-by-side",
    "start": "2750099",
    "end": "2756849"
  },
  {
    "text": "so every every piece of infrastructure every application that we have that's on prem that's gonna be moving to AWS we're",
    "start": "2756849",
    "end": "2762490"
  },
  {
    "text": "building it side-by-side and having that infrastructure on the other on there on the AWS side as well gives us a huge lift in resiliency and",
    "start": "2762490",
    "end": "2770109"
  },
  {
    "text": "visibility it's it's built into sqs you don't have to go through and do the work that it",
    "start": "2770109",
    "end": "2775720"
  },
  {
    "text": "takes to really get the resiliency as well as being able to have things like cloud watch to pull to pull a lot of the",
    "start": "2775720",
    "end": "2781839"
  },
  {
    "text": "metrics look at the queues be able to compare things and then and then get a global view of it as well as having a lot of learning built into",
    "start": "2781839",
    "end": "2788640"
  },
  {
    "text": "and then really delivers a solution that we that that's consistently maintained",
    "start": "2788640",
    "end": "2793930"
  },
  {
    "text": "for us without having to really do the sizing the upgrading or having the administration of it so",
    "start": "2793930",
    "end": "2800110"
  },
  {
    "text": "I think that's that's all I got so thank you and and I'll hand it back to Trevor to finish up a couple of final thoughts",
    "start": "2800110",
    "end": "2807000"
  },
  {
    "text": "great thanks very much Quinn that's pretty exciting project and we really",
    "start": "2807000",
    "end": "2812380"
  },
  {
    "start": "2808000",
    "end": "2808000"
  },
  {
    "text": "enjoyed working with you on that so just as a summary and to wrap up and then we have a few minutes for questions so just",
    "start": "2812380",
    "end": "2819970"
  },
  {
    "text": "to close messaging is a very common requirement to enterprise architectures and that was pretty obvious with how",
    "start": "2819970",
    "end": "2825550"
  },
  {
    "text": "many people put up their hands when I asked that question earlier and it's becoming I think even more common as we",
    "start": "2825550",
    "end": "2831400"
  },
  {
    "text": "see more and more services moving to like a micro services model there's much more intercommunication needed between",
    "start": "2831400",
    "end": "2837340"
  },
  {
    "text": "components the managed messaging messaging services as as you saw from Quinn's talk really",
    "start": "2837340",
    "end": "2845080"
  },
  {
    "text": "helped you remove that overhead and administrative pain so it's really something that that that customers love",
    "start": "2845080",
    "end": "2852370"
  },
  {
    "text": "and and we see more and more customers looking at moving from on-prem middleware to to the cloud and",
    "start": "2852370",
    "end": "2859570"
  },
  {
    "text": "particularly with the new FIFO queues we talked to so many customers that they were they were stuck with on prime",
    "start": "2859570",
    "end": "2865600"
  },
  {
    "text": "middleware just because they didn't have those ordered queues available in sqs so we're pretty excited about the FIFO",
    "start": "2865600",
    "end": "2870820"
  },
  {
    "text": "queues and we think that's really going to enable a lot more use cases to to move to to manage messaging services",
    "start": "2870820",
    "end": "2877230"
  },
  {
    "text": "and you know last we are investing in in more key enterprise messaging features",
    "start": "2877230",
    "end": "2883510"
  },
  {
    "text": "can't tell you just yet what those are but stay tuned we're gonna have lots of things coming out in the next few months",
    "start": "2883510",
    "end": "2890050"
  },
  {
    "text": "and and the next year and hopefully we will be up here at reinvent next year telling you about some of those as well",
    "start": "2890050",
    "end": "2895200"
  },
  {
    "text": "so with that thanks everyone for coming and Quinn and I are open to any",
    "start": "2895200",
    "end": "2901120"
  },
  {
    "text": "questions you might have",
    "start": "2901120",
    "end": "2904290"
  }
]