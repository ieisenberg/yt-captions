[
  {
    "text": "is on all right thank you all for coming um we're here to talk about the Netflix",
    "start": "5240",
    "end": "11320"
  },
  {
    "text": "front door uh and what it takes to run it we're going to give a couple examples uh both in terms of slides and um Ben's",
    "start": "11320",
    "end": "18000"
  },
  {
    "text": "going to do a demo of a range of these things so about us uh both Ben and I um",
    "start": "18000",
    "end": "24840"
  },
  {
    "text": "we operate the engineering Edge engineering team which basically is the front door what it means is if the if",
    "start": "24840",
    "end": "31840"
  },
  {
    "text": "there's no one there to answer the front door then nobody gets a stream Netflix and it's our job to make sure someone's always there to answer it um so if you",
    "start": "31840",
    "end": "39719"
  },
  {
    "text": "want to follow us on Twitter that's our stuff um how this really translates is",
    "start": "39719",
    "end": "45320"
  },
  {
    "text": "Netflix is responsible for about a third of the internet traffic in North America and you know various other spots",
    "start": "45320",
    "end": "51320"
  },
  {
    "text": "throughout the world where a massive amount of traffic um it's incumbent on us to make sure that we can sustain",
    "start": "51320",
    "end": "58039"
  },
  {
    "text": "these levels um both in terms of the downstream traffic the 33 or 34 a half%",
    "start": "58039",
    "end": "64000"
  },
  {
    "text": "um but also in terms of Upstream which is more uh less commonly reported on uh as a metric so we're responsible for",
    "start": "64000",
    "end": "70720"
  },
  {
    "text": "about 6 and a half% of the Upstream traffic as well so more specifically",
    "start": "70720",
    "end": "76080"
  },
  {
    "text": "what do we do as an edge engineering team first and this is probably our",
    "start": "76080",
    "end": "81560"
  },
  {
    "text": "Prime responsibility is to broker data between devices and servers and uh that comes in different forms both in terms",
    "start": "81560",
    "end": "88079"
  },
  {
    "text": "of Rights things like uh adding things to your queue or um rating titles but",
    "start": "88079",
    "end": "93479"
  },
  {
    "text": "also in terms of U reads creating the discovery experience as you're browsing around watch uh looking for titles to",
    "start": "93479",
    "end": "99479"
  },
  {
    "text": "watch um we're also responsible for the the playback flow so when you actually",
    "start": "99479",
    "end": "104799"
  },
  {
    "text": "press the play button um it triggers a series of events that will start the stream of the video so um that also",
    "start": "104799",
    "end": "112159"
  },
  {
    "text": "falls on this team resiliency comes in a couple",
    "start": "112159",
    "end": "117680"
  },
  {
    "text": "different forms and that is hugely important for us it comes both in the form of Netflix um or sorry the edge",
    "start": "117680",
    "end": "124439"
  },
  {
    "text": "engineering team needs to be responsible for ensuring that we don't fall over um but because we're at the front door",
    "start": "124439",
    "end": "130200"
  },
  {
    "text": "right at the edge before we deliver to clients we're also responsible for protecting the customer from a range of",
    "start": "130200",
    "end": "135280"
  },
  {
    "text": "other failures that could happen underneath us and we'll talk about that throughout this presentation and demo scaling the systems that comes in",
    "start": "135280",
    "end": "142519"
  },
  {
    "text": "different forms as well both in terms of the breadth of things that we need to deal with uh you know we're on a",
    "start": "142519",
    "end": "147640"
  },
  {
    "text": "thousand different device types dealing with the card it of that and scaling horizontally as well as throughput and",
    "start": "147640",
    "end": "153680"
  },
  {
    "text": "you know scaling the systems to handle many regions more users things like",
    "start": "153680",
    "end": "159120"
  },
  {
    "text": "that because we're in between all the servers and all the service teams and",
    "start": "159120",
    "end": "164360"
  },
  {
    "text": "all the devices we need to be keen on velocity we need to make sure that we as a team can deliver our responsibilities",
    "start": "164360",
    "end": "172000"
  },
  {
    "text": "as quickly as possible so we spend a lot of time in energy on things like continuous delivery and um making sure",
    "start": "172000",
    "end": "177519"
  },
  {
    "text": "that we can uh get code into production daily multiple times a day and then we",
    "start": "177519",
    "end": "183200"
  },
  {
    "text": "also provide real-time Health metrics um basically we're we're at the we're the umbrella on top of the rest of the",
    "start": "183200",
    "end": "189519"
  },
  {
    "text": "service organization so we can actually have a purview a unique view into the health of the system and so it's",
    "start": "189519",
    "end": "195040"
  },
  {
    "text": "incumbent on us to share that so today we're going to talk primarily about resiliency and scaling the systems if",
    "start": "195040",
    "end": "202200"
  },
  {
    "text": "you want to learn more about uh insights uh someone on the team Sharma Padia is speaking on Friday about uh scheduling",
    "start": "202200",
    "end": "209840"
  },
  {
    "text": "within um the MOs environment so uh you can learn learn about that 9:00 on",
    "start": "209840",
    "end": "215400"
  },
  {
    "text": "Friday so a high level view of our architecture is basically a thousand different devices device types um they",
    "start": "215400",
    "end": "222560"
  },
  {
    "text": "have to call into our service they're going to cross the HTTP border and hit first the elbs which is basically",
    "start": "222560",
    "end": "229000"
  },
  {
    "text": "reconciling the DNS then they're going to call into Zuul and we'll talk a bunch about Zuul today um Zuul then handles",
    "start": "229000",
    "end": "236239"
  },
  {
    "text": "the routing to origin servers in this case or origin servers uh I'm representing that as apis there are",
    "start": "236239",
    "end": "242799"
  },
  {
    "text": "others I'll show you in a second but that routing to An Origin server is basically controlling where the",
    "start": "242799",
    "end": "248079"
  },
  {
    "text": "traffic's going to flow so that An Origin server can uh do the processing and actually handle whatever the request",
    "start": "248079",
    "end": "254079"
  },
  {
    "text": "is get the data um you know do the right event whatever it might be and then each of those origin servers",
    "start": "254079",
    "end": "260720"
  },
  {
    "text": "are going to call out to a breadth of different uh dependent services that are actually doing the computations or uh",
    "start": "260720",
    "end": "267040"
  },
  {
    "text": "handling the data other examples of origin servers include",
    "start": "267040",
    "end": "272120"
  },
  {
    "text": "playback website logging um Zuul fronts all of those uh but for today we're",
    "start": "272120",
    "end": "278800"
  },
  {
    "text": "really going to focus in on the interaction between Zuul and the API",
    "start": "278800",
    "end": "284039"
  },
  {
    "text": "backend so routing traffic Zuul again this is a a",
    "start": "284160",
    "end": "289960"
  },
  {
    "text": "fundamental part of the system it truly is our front door it does a wide range of things for us including things like",
    "start": "289960",
    "end": "297199"
  },
  {
    "text": "multi- region resiliency load shedding insights uh squeeze testing it's hugely",
    "start": "297199",
    "end": "302880"
  },
  {
    "text": "helpful in basically controlling the flow of traffic and having it separated out from the origin gives us great",
    "start": "302880",
    "end": "308680"
  },
  {
    "text": "flexibility in how we can handle that without compromising the computations that we need to",
    "start": "308680",
    "end": "314199"
  },
  {
    "text": "do so going back to this diagram a request basically routes as follows it",
    "start": "314199",
    "end": "319800"
  },
  {
    "text": "goes from a device hits an elb that elb is going to uh send the traffic onto a",
    "start": "319800",
    "end": "326039"
  },
  {
    "text": "corresponding cluster of z um Z going to send it on to An Origin server in this",
    "start": "326039",
    "end": "331639"
  },
  {
    "text": "case the API and then the API is going to fetch or process data with a dependent service or multiple dependent",
    "start": "331639",
    "end": "338560"
  },
  {
    "text": "services and in fact the ratio of dependent services for an incoming request from a device is somewhere",
    "start": "338560",
    "end": "343639"
  },
  {
    "text": "around seven or 8 to one so generally one request coming in is calling out and processing many with many different",
    "start": "343639",
    "end": "350360"
  },
  {
    "text": "dependent services so that's the happy path for Zuul that's the typical path um there",
    "start": "350360",
    "end": "355880"
  },
  {
    "text": "are other ways in which we're going to control traffic so one such example is if we we have a device calling in say",
    "start": "355880",
    "end": "361600"
  },
  {
    "text": "the Nintendo calling in from Zuul it's going to hit a prod instance um but let's say there's a bug or some other um",
    "start": "361600",
    "end": "368319"
  },
  {
    "text": "issue that we want to debug we'll basically set up another cluster or instance that is a debug instance it's",
    "start": "368319",
    "end": "375080"
  },
  {
    "text": "got uh you know some sort of special code or debugging that we want to have access to that we don't want to apply to",
    "start": "375080",
    "end": "380800"
  },
  {
    "text": "all of production so we'll create a single instance as an example and then have zul take the same request and in",
    "start": "380800",
    "end": "388039"
  },
  {
    "text": "certain scenarios say this specific device or this specific user route that um route that request to that um extra",
    "start": "388039",
    "end": "396720"
  },
  {
    "text": "the debug instance um where the majority of it's going to go to prod these spe special cases will get routed to the",
    "start": "396720",
    "end": "403560"
  },
  {
    "text": "debug another way in which we use Zol is for squeeze testing so if we want to check the throughput and make sure that",
    "start": "403560",
    "end": "409280"
  },
  {
    "text": "the throughput is not getting compromised or we want to evaluate what our uh Peak throughput could be for our",
    "start": "409280",
    "end": "416080"
  },
  {
    "text": "build um we can basically have General prod traffic go the prod instance isolate a single squeeze instance off to",
    "start": "416080",
    "end": "423000"
  },
  {
    "text": "the side and ratch it up you know from 50 RPS to 60 to 70 and see what the",
    "start": "423000",
    "end": "428560"
  },
  {
    "text": "breaking point is um or if we think that a specific build is flawed um we can um",
    "start": "428560",
    "end": "434800"
  },
  {
    "text": "compare where that point is if PR is at 50 and this one's breaking at 40 is it",
    "start": "434800",
    "end": "440039"
  },
  {
    "text": "43 is it 46 where's the breaking point how can we learn from that what kind of code changes do we need to uh make to",
    "start": "440039",
    "end": "445840"
  },
  {
    "text": "the system so another example where where we use is cross region failover so in this",
    "start": "445840",
    "end": "453400"
  },
  {
    "text": "scenario we have us East US West where we have um prod in both of those in West",
    "start": "453400",
    "end": "460720"
  },
  {
    "text": "we basically have traffic coming from the western part of the country going to that uh region and we have East going to",
    "start": "460720",
    "end": "468240"
  },
  {
    "text": "East if for some reason oh and at this point systems are healthy if for some reason uh the east region has a failure",
    "start": "468240",
    "end": "475280"
  },
  {
    "text": "and we're not able to really sustain traffic or it's not healthy um we will use zul to basically handle requests and",
    "start": "475280",
    "end": "482000"
  },
  {
    "text": "Route it onto the west region now of course we need to ramp up capacity on West as well and so there's a dynamic",
    "start": "482000",
    "end": "489479"
  },
  {
    "text": "there but while we're waiting for DNS to resolve Zuul is able to control that traffic flow and make sure that um we",
    "start": "489479",
    "end": "496039"
  },
  {
    "text": "can get the right amount of traffic funneling over and protect us uh in the Eastern region while we're trying to",
    "start": "496039",
    "end": "501360"
  },
  {
    "text": "reconcile it So eventually DNS will get resolved and all traffic will then go to",
    "start": "501360",
    "end": "506720"
  },
  {
    "text": "the west region that insulates the east region we don't have to worry as much about prod uh and worrying about",
    "start": "506720",
    "end": "512560"
  },
  {
    "text": "customers we can just focus on recovery of whatever is happening on East while West is handling all the",
    "start": "512560",
    "end": "519880"
  },
  {
    "text": "traffic eventually DNS we'll fix the problem and then we'll set DNS to uh",
    "start": "519880",
    "end": "525040"
  },
  {
    "text": "resolve and then traffic will continue as normal so that's one way or a set of",
    "start": "525040",
    "end": "531080"
  },
  {
    "text": "ways in which Zuul can help us um want to talk a little bit about resiliency and by the way Ben in a little bit is",
    "start": "531080",
    "end": "536880"
  },
  {
    "text": "going to demonstrate uh a couple of those scenarios inzo and he's also going to demo uh some of these resiliency",
    "start": "536880",
    "end": "543079"
  },
  {
    "text": "techniques as well um so I love this quote from Leslie Lamport which is a",
    "start": "543079",
    "end": "548800"
  },
  {
    "text": "distributed system is one in which the failure of a computer you didn't even know exists can bring down your system",
    "start": "548800",
    "end": "555079"
  },
  {
    "text": "um this is a snapshot a portion of the view of our dependency chain um it's",
    "start": "555079",
    "end": "560600"
  },
  {
    "text": "quite complicated it's quite messy and um nobody knows all the nuances in which",
    "start": "560600",
    "end": "566200"
  },
  {
    "text": "this uh in which this can fail Edge being at the umbrella on the outer edge",
    "start": "566200",
    "end": "572079"
  },
  {
    "text": "of the system we're basically representing this mess um which means that we are prone to failures in ways",
    "start": "572079",
    "end": "578480"
  },
  {
    "text": "that we could never imagine so as the edge and the API today we're doing about",
    "start": "578480",
    "end": "584240"
  },
  {
    "text": "5 billion requests per second or per day rather um not second that's a lot uh per",
    "start": "584240",
    "end": "589959"
  },
  {
    "text": "day we have about 30 direct dependent services and many other transitive uh",
    "start": "589959",
    "end": "595279"
  },
  {
    "text": "dependent Services we're slurping in dependent jars from a wide range of sources about 600 of these and again I",
    "start": "595279",
    "end": "602560"
  },
  {
    "text": "mentioned about 8 to1 incoming to outbound ratio of calls so about 40 billion outbound calls per day it's a",
    "start": "602560",
    "end": "610440"
  },
  {
    "text": "lot of interactions across a lot of different Services one thing is common amongst all of this and that is that",
    "start": "610440",
    "end": "616760"
  },
  {
    "text": "none of these dependent Services have an SLA of 100% so if we were to play this",
    "start": "616760",
    "end": "621920"
  },
  {
    "text": "out with zero at 100% let's presume that all of these Services services are at 49",
    "start": "621920",
    "end": "628519"
  },
  {
    "text": "of availability and you Cascade that out it's roughly about 99.7% which is about two hours of",
    "start": "628519",
    "end": "635240"
  },
  {
    "text": "downtime a month which is not great um that's assuming everybody's at",
    "start": "635240",
    "end": "640839"
  },
  {
    "text": "49 um if they're really at 39 it's more like 20 hours and if it's three and a",
    "start": "640839",
    "end": "647279"
  },
  {
    "text": "half nines it's about 10 hours none of these scenarios are good so it's incumbent on us as the edge to make sure",
    "start": "647279",
    "end": "653399"
  },
  {
    "text": "that any of these failures or as many of them as possible we can mitigate and we can protect against so if we go back to",
    "start": "653399",
    "end": "660480"
  },
  {
    "text": "this diagram this is the happy path right let's say one of these dependent Services fails um doesn't matter which",
    "start": "660480",
    "end": "667040"
  },
  {
    "text": "one but uh if that fails it has the potential or used to have the potential",
    "start": "667040",
    "end": "672079"
  },
  {
    "text": "to Cascade that up and create a failure across the API layer which then will",
    "start": "672079",
    "end": "677160"
  },
  {
    "text": "Cascade all the way up to all the devices which means that all of you uh I presume you're all Netflix subscribers",
    "start": "677160",
    "end": "683639"
  },
  {
    "text": "none of you can stream um hisis was our solution to this right",
    "start": "683639",
    "end": "689760"
  },
  {
    "text": "so we needed a way to get out of the the critical path when a service fails and",
    "start": "689760",
    "end": "695279"
  },
  {
    "text": "uh so we developed this uh tool called histrix it's open source if you want to get it it's on our GitHub site and",
    "start": "695279",
    "end": "702079"
  },
  {
    "text": "coming with that is a corresponding dashboard and what this is is this is a view into all of our dependent services",
    "start": "702079",
    "end": "708240"
  },
  {
    "text": "and the health of each of them so we have an understanding of how they operate along with a circuit breaker",
    "start": "708240",
    "end": "714279"
  },
  {
    "text": "technology which allows us to toggle on and off uh our interaction with them so I'm going to going to step through that",
    "start": "714279",
    "end": "720120"
  },
  {
    "text": "in a minute here um this is a view into just one of those services and this view",
    "start": "720120",
    "end": "726760"
  },
  {
    "text": "is uh first and foremost it's showing a general view into the health of the system so that Green Dot is basically um",
    "start": "726760",
    "end": "733600"
  },
  {
    "text": "the current health and it's uh it's showing you both in terms of size and color how healthy it is um so the bigger",
    "start": "733600",
    "end": "740560"
  },
  {
    "text": "the dot the more traffic it's getting and if it's green it's healthy if it's red it's unhealthy and this is",
    "start": "740560",
    "end": "746560"
  },
  {
    "text": "refreshing every 10 seconds um the blue line is an ongoing chart of the last 2",
    "start": "746560",
    "end": "751600"
  },
  {
    "text": "minutes so we can see radical spikes or dips in traffic so we can understand what's going on over the last two",
    "start": "751600",
    "end": "758160"
  },
  {
    "text": "minutes and then all these other numbers and colors basically represent um errors",
    "start": "758160",
    "end": "764079"
  },
  {
    "text": "timeouts other kinds of things that can um trigger failure of a service and all",
    "start": "764079",
    "end": "769639"
  },
  {
    "text": "of these culminate into a ratio that ratio is basically the error rate so we're calculating through all of those",
    "start": "769639",
    "end": "775720"
  },
  {
    "text": "numbers a percentage of health and that percent is um tied to a circuit breaker so if it",
    "start": "775720",
    "end": "782399"
  },
  {
    "text": "toggles past a certain percentage and each service has its own percentage then it will close that it will open that",
    "start": "782399",
    "end": "789160"
  },
  {
    "text": "circuit I mean an opening of the circuit basically is saying no longer call into that service call into some fallback",
    "start": "789160",
    "end": "795320"
  },
  {
    "text": "mechanism and there are many ways in which we'll handle the callbacks uh we could basically do a fast 500 and just",
    "start": "795320",
    "end": "800720"
  },
  {
    "text": "deliver an error uh in some cases like um uh our rating service which Ben will",
    "start": "800720",
    "end": "805839"
  },
  {
    "text": "talk about later if the rating service is down the fallback might be be here's an average rating for the title rather",
    "start": "805839",
    "end": "811440"
  },
  {
    "text": "than a predicted or your personalized rating for it so um that error rate when",
    "start": "811440",
    "end": "816920"
  },
  {
    "text": "it tips go to fallback when it recovers the service you know we ping it every once in a while when we know the service",
    "start": "816920",
    "end": "823160"
  },
  {
    "text": "recovers then we'll automatically toggle it back on and everything will flow as normal so going back to this if we have",
    "start": "823160",
    "end": "831399"
  },
  {
    "text": "that error in that dependent service again now it looks more like this and hopefully we can maintain a healthy",
    "start": "831399",
    "end": "837279"
  },
  {
    "text": "state so I want to turn over to Ben who's going to talk a bit about uh both of those and",
    "start": "837279",
    "end": "843440"
  },
  {
    "text": "demo zul and his right okay that's right um me just make sure I'm U good here so",
    "start": "843440",
    "end": "850480"
  },
  {
    "text": "like Daniel said I'm gonna um show you guys uh Zuul and historics in action and",
    "start": "850480",
    "end": "857120"
  },
  {
    "text": "give you um a Hands-On view of these Technologies",
    "start": "857120",
    "end": "862160"
  },
  {
    "text": "so let's see here yep sorry swi over here right is",
    "start": "862160",
    "end": "869560"
  },
  {
    "text": "that uh all right for um font size is that can you guys read",
    "start": "869560",
    "end": "876839"
  },
  {
    "text": "the text basically okay great okay so the first thing that I'm going to demonstrate here is um a technology we",
    "start": "876839",
    "end": "883759"
  },
  {
    "text": "have called uh gripzilla and you can think of this as real time distributed",
    "start": "883759",
    "end": "889399"
  },
  {
    "text": "tail and GP and so this is a tool that we use to get insight into traffic",
    "start": "889399",
    "end": "895920"
  },
  {
    "text": "flowing into and out of the zo air and so it it gives us a lot of flexibility",
    "start": "895920",
    "end": "901839"
  },
  {
    "text": "um uh in terms of like inspecting traffic so for example if we wanted to see you know uh traffic from PS3s in",
    "start": "901839",
    "end": "909759"
  },
  {
    "text": "Mexico where the HTTP status code was a 500 we could use grapsa to accomplish that um and so what I'm going to do",
    "start": "909759",
    "end": "917199"
  },
  {
    "text": "today is I've got um our tvui reference application running on my laptop so this",
    "start": "917199",
    "end": "923440"
  },
  {
    "text": "is basically a tool that we use at Netflix to run the same UI that would run on a smart TV on a laptop",
    "start": "923440",
    "end": "929600"
  },
  {
    "text": "and I'm going to set up tracing um for the UI on my laptop and what I'm going",
    "start": "929600",
    "end": "935399"
  },
  {
    "text": "to do is I'm going to do a query by ESN which is an electronic serial number",
    "start": "935399",
    "end": "941839"
  },
  {
    "text": "this is um a unique device identifier so over here you can see I've",
    "start": "941839",
    "end": "947000"
  },
  {
    "text": "got this simple stream these are all Python scripts and so we've got this CLI",
    "start": "947000",
    "end": "952240"
  },
  {
    "text": "interface into gripzilla um and this is going to give me a patchy access log style output",
    "start": "952240",
    "end": "959880"
  },
  {
    "text": "so I'm going to go ahead and submit that and so what happens is we have a broker server um that my python uh program",
    "start": "959880",
    "end": "967639"
  },
  {
    "text": "connects to which then sends that query out to all of our zul instances um and they're going to start looking for",
    "start": "967639",
    "end": "973319"
  },
  {
    "text": "requests that come from a device with this particular ESN and as they find matches they're going to start streaming",
    "start": "973319",
    "end": "979240"
  },
  {
    "text": "those events down to the broker which will then aggregate them and stream them down to my terminal so that I can see",
    "start": "979240",
    "end": "984720"
  },
  {
    "text": "them so I've got one up here and I'm going to run another one which is just going to give us information about all",
    "start": "984720",
    "end": "990680"
  },
  {
    "text": "of the hiss commands that are executed for a particular request and and it show",
    "start": "990680",
    "end": "996399"
  },
  {
    "text": "so it'll tell us the um the names of the commands and whether they were successful or uh want to fall back how",
    "start": "996399",
    "end": "1002240"
  },
  {
    "text": "many times they were executed the amount of time they took so now I'm just going to run a quick um curl command to the API and I",
    "start": "1002240",
    "end": "1012079"
  },
  {
    "text": "just want to see that we're actually getting getting some uh results here so",
    "start": "1012079",
    "end": "1019160"
  },
  {
    "text": "there you go so you can see in the terminal on the back here um two lines showed up and so here we see um you know",
    "start": "1019160",
    "end": "1027199"
  },
  {
    "text": "time stamp you see the country from which the request originated HTTP status code the Amazon availability Zone um of",
    "start": "1027199",
    "end": "1035360"
  },
  {
    "text": "the Zu instance it handled the request this is the ec2 instance ID of the the Zuul instance that the request hit um",
    "start": "1035360",
    "end": "1043600"
  },
  {
    "text": "you know from Daniel's pictures um API we've got a cluster of API servers that sit behind zul",
    "start": "1043600",
    "end": "1049440"
  },
  {
    "text": "this instance ID that I've highlighted here is the API instance that handled a request um you've got the environment so",
    "start": "1049440",
    "end": "1056120"
  },
  {
    "text": "production environment the um ESN for my curl got a",
    "start": "1056120",
    "end": "1062240"
  },
  {
    "text": "customer ID uh response time and actually let me just pull this over a",
    "start": "1062240",
    "end": "1067840"
  },
  {
    "text": "little bit I think some stuff is kind of missing here there we go so customer ID",
    "start": "1067840",
    "end": "1073400"
  },
  {
    "text": "uh response time and some other stuff uh bouncing",
    "start": "1073400",
    "end": "1078720"
  },
  {
    "text": "down down to our histri stream you can see I this the request I executed was a search request you can see there are a",
    "start": "1078720",
    "end": "1083880"
  },
  {
    "text": "bunch of things that also get executed here but here's the um the the search",
    "start": "1083880",
    "end": "1089520"
  },
  {
    "text": "command Okay um so I'm going to leave those running um in the terminal here",
    "start": "1089520",
    "end": "1096120"
  },
  {
    "text": "and now I'm going to bounce over to Gibbon kit which is um sort of like a",
    "start": "1096120",
    "end": "1102000"
  },
  {
    "text": "specialized build of of the webkit browser that we run on uh TVs and CD devices and so this is going to um",
    "start": "1102000",
    "end": "1109080"
  },
  {
    "text": "launch our TV UI so as this thing launches we should start seeing um some events show up in",
    "start": "1109080",
    "end": "1117039"
  },
  {
    "text": "my terminal and so this is showing you all of the requests that the device is making to bootstrap the user",
    "start": "1117039",
    "end": "1124400"
  },
  {
    "text": "interface um and so if we let me just scroll up and we can look at some of these things so what what you notice",
    "start": "1124400",
    "end": "1129919"
  },
  {
    "text": "here is notice that all of these instance IDs are different so these requests from the my tvui here they're",
    "start": "1129919",
    "end": "1137200"
  },
  {
    "text": "hitting different Zool instances and they're all basically looking to see what queries um you know Trace queries",
    "start": "1137200",
    "end": "1143080"
  },
  {
    "text": "are on the um are on the instance and does this request match and since the",
    "start": "1143080",
    "end": "1148200"
  },
  {
    "text": "ESN does match they stream down so you can see that we've got a bunch of different um Zool instances that are",
    "start": "1148200",
    "end": "1155320"
  },
  {
    "text": "handling these uh these requests okay so here's our the profile",
    "start": "1155320",
    "end": "1162280"
  },
  {
    "text": "gate um for you know those of you that um are Netflix subscribers this is probably familiar to you so I've got a test user and I'm just going going to go",
    "start": "1162280",
    "end": "1169039"
  },
  {
    "text": "ahead and pull up um the the main interface here so you can see at the top",
    "start": "1169039",
    "end": "1174200"
  },
  {
    "text": "of the screen we've got our billboard area and what I'd like you to notice",
    "start": "1174200",
    "end": "1179320"
  },
  {
    "text": "here is this yellow star rating and so these are um ratings I",
    "start": "1179320",
    "end": "1185400"
  },
  {
    "text": "I've actually went in and um provided ratings for these titles and so you can",
    "start": "1185400",
    "end": "1190520"
  },
  {
    "text": "see that you know I've done Dango and Hunger Games here I didn't do the Avengers but let me just go ahead and do",
    "start": "1190520",
    "end": "1196520"
  },
  {
    "text": "the Avengers and just for the um I probably like it but let's just say that I I don't like it I'll make it different",
    "start": "1196520",
    "end": "1203240"
  },
  {
    "text": "hate it um and so what's doing that is you",
    "start": "1203240",
    "end": "1209159"
  },
  {
    "text": "can see there's a command here called cinematch get movie ratings and that's what's actually um displaying that star",
    "start": "1209159",
    "end": "1217200"
  },
  {
    "text": "um bar that you see in the user interface um and for titles that you",
    "start": "1217200",
    "end": "1225000"
  },
  {
    "text": "know I haven't rated I'm just getting sort of a default um um Red starb Bar",
    "start": "1225000",
    "end": "1231480"
  },
  {
    "text": "okay so that shows you some of the tvui you now know where the the ratings show up and you can see how the the tracing",
    "start": "1231480",
    "end": "1239159"
  },
  {
    "text": "uh technology works now I'm going to configure um some custom routing for",
    "start": "1239159",
    "end": "1244679"
  },
  {
    "text": "this tvui device and so I'm going to go over into my browser and we have a tool here that lets us configure routing by",
    "start": "1244679",
    "end": "1252480"
  },
  {
    "text": "ESN or customer ID or some other um request variables and so I don't have anything",
    "start": "1252480",
    "end": "1258600"
  },
  {
    "text": "set up so I'm going to click through here and so what I'm going to do is I'm going to Route API traffic and so I",
    "start": "1258600",
    "end": "1264760"
  },
  {
    "text": "specify an application and then a VIP this is sort of like an internal host name that we use to Route traffic from",
    "start": "1264760",
    "end": "1270679"
  },
  {
    "text": "one service to another and um I set up a cluster just for reinvent and so I've",
    "start": "1270679",
    "end": "1277480"
  },
  {
    "text": "got an API reinvent cluster running a single uh server so I'm going to go ahead and",
    "start": "1277480",
    "end": "1284559"
  },
  {
    "text": "create that and so let me save that and so what's happening now is um that",
    "start": "1284559",
    "end": "1291799"
  },
  {
    "text": "configuration is getting stored in Cassandra and all of our Zool instances are in the background polling for",
    "start": "1291799",
    "end": "1297360"
  },
  {
    "text": "routing changes and so they're going to going to find this um routing rule that I just added and they're going to pull",
    "start": "1297360",
    "end": "1303200"
  },
  {
    "text": "it down to their you know local memory of the instance and as requests come in from the tvui running on my laptop",
    "start": "1303200",
    "end": "1309480"
  },
  {
    "text": "they're going to see there's a routing override and instead of um the request being forwarded to our main API Farm",
    "start": "1309480",
    "end": "1316159"
  },
  {
    "text": "it's going to be the the request be forwarded to our our reinvent instance and so let me show you guys that so here",
    "start": "1316159",
    "end": "1324200"
  },
  {
    "text": "this is a tool called Spiner and this is a sort of a new tool that we're developing to manage our AWS Cloud",
    "start": "1324200",
    "end": "1331480"
  },
  {
    "text": "infrastructure and so this is sort of um you know will become the kind of Base platform for uh Netflix Engineers to",
    "start": "1331480",
    "end": "1339120"
  },
  {
    "text": "manage uh AWS infrastructure in the cloud and so you can see I've got this",
    "start": "1339120",
    "end": "1344400"
  },
  {
    "text": "um this reinvent cluster I've got one autoscaling group and I've got a single",
    "start": "1344400",
    "end": "1351600"
  },
  {
    "text": "instance and so what I want you to to look at here is this instance identifier",
    "start": "1351600",
    "end": "1356720"
  },
  {
    "text": "um it's got a lot of C's and a lot of fives and so let me go back over to the",
    "start": "1356720",
    "end": "1362200"
  },
  {
    "text": "terminal here and just pop up here and just kind of",
    "start": "1362200",
    "end": "1368760"
  },
  {
    "text": "run a couple of curl commands and um Okay cool so you can see",
    "start": "1368760",
    "end": "1376880"
  },
  {
    "text": "that rather than um being load balanced across a bunch of instances in our main API F all of the requests they're",
    "start": "1376880",
    "end": "1383840"
  },
  {
    "text": "hitting different Zool instances you can see these IDs are different but each Zuul instance knows to Route requests",
    "start": "1383840",
    "end": "1390240"
  },
  {
    "text": "from um my device to our debug cluster and the setup that I have on the",
    "start": "1390240",
    "end": "1395919"
  },
  {
    "text": "debug cluster and let me just uh I can click over here so this is pretty cool this is",
    "start": "1395919",
    "end": "1402320"
  },
  {
    "text": "um our base server page so every uh app server at Netflix has this page and so",
    "start": "1402320",
    "end": "1408520"
  },
  {
    "text": "you can see all of the properties on uh on the instance the they're used for the",
    "start": "1408520",
    "end": "1413679"
  },
  {
    "text": "jvm you can see a bunch of metrics you can see you know the jar versions that are on the instance and so what I did is",
    "start": "1413679",
    "end": "1420039"
  },
  {
    "text": "I went into this one instance and I added a property um cinematch get movie",
    "start": "1420039",
    "end": "1425600"
  },
  {
    "text": "ratings here we go and so uh you can see here I've got this",
    "start": "1425600",
    "end": "1432240"
  },
  {
    "text": "historics um property set to force the circuit open so what that means is",
    "start": "1432240",
    "end": "1437640"
  },
  {
    "text": "whenever um um that particular API instance in our reinvent cluster when it um when any code invokes the cinematch",
    "start": "1437640",
    "end": "1445640"
  },
  {
    "text": "command rather than trying to go out and get you know personalized um ratings it's just going to execute the fallback",
    "start": "1445640",
    "end": "1451720"
  },
  {
    "text": "which is to return just the average rating for the title um so now what I'm going to do is",
    "start": "1451720",
    "end": "1457760"
  },
  {
    "text": "I'm going to just rerun the application and so you remember we've got the the the star",
    "start": "1457760",
    "end": "1463799"
  },
  {
    "text": "ratings here so if I",
    "start": "1463799",
    "end": "1469840"
  },
  {
    "text": "relaunch the app all of those yellow star ratings should go away and they",
    "start": "1469840",
    "end": "1475960"
  },
  {
    "text": "should be replaced with the red fallback um so here you go so you've got",
    "start": "1475960",
    "end": "1484159"
  },
  {
    "text": "red we did The Avengers so rather than my one yellow star we should see the the",
    "start": "1484159",
    "end": "1489240"
  },
  {
    "text": "average rating and if I pull up our our historic stream Trace here you can see",
    "start": "1489240",
    "end": "1497520"
  },
  {
    "text": "that the cinemat get movies get movie ratings command was executed and it was short circuited and the fallback was",
    "start": "1497520",
    "end": "1504399"
  },
  {
    "text": "successful so um you can kind of see how this tracing tool gives you a lot of insight into what's happening with",
    "start": "1504399",
    "end": "1510200"
  },
  {
    "text": "real-time traffic flowing through the system and the routing tool gives us the ability to kind of shift things around",
    "start": "1510200",
    "end": "1516200"
  },
  {
    "text": "at a very fine grain level you know down to even a single device um so now I'll just uh I'm going",
    "start": "1516200",
    "end": "1523960"
  },
  {
    "text": "to remove the routing rule so go here we'll get rid of it and",
    "start": "1523960",
    "end": "1530919"
  },
  {
    "text": "um again in the background our zo instances are looking for changes to routing rules um they should pick up the",
    "start": "1530919",
    "end": "1537320"
  },
  {
    "text": "fact that this um custom routing rule has been removed and so we should see",
    "start": "1537320",
    "end": "1543080"
  },
  {
    "text": "traffic start to then get load balance back to our main API uh farm and then we",
    "start": "1543080",
    "end": "1549919"
  },
  {
    "text": "should see those I I'll relaunch the app here the tvui and we should see all of",
    "start": "1549919",
    "end": "1555679"
  },
  {
    "text": "the the personal user ratings uh come",
    "start": "1555679",
    "end": "1561039"
  },
  {
    "text": "back uh so let's just do a quick test here and it looks like looks",
    "start": "1561320",
    "end": "1569000"
  },
  {
    "text": "pretty",
    "start": "1569000",
    "end": "1571360"
  },
  {
    "text": "good all right so that one did hit the debug instance still this one hit another instance",
    "start": "1575159",
    "end": "1583080"
  },
  {
    "text": "just okay so it looks like I think I think we're good so I think the the",
    "start": "1584799",
    "end": "1590279"
  },
  {
    "text": "routing rule the removal of that routing view um the removal of the routing rule has been picked up by probably enough of",
    "start": "1590279",
    "end": "1596679"
  },
  {
    "text": "ourz instances so let me go ahead and relaunch the tvui one",
    "start": "1596679",
    "end": "1604120"
  },
  {
    "text": "more",
    "start": "1604120",
    "end": "1606480"
  },
  {
    "text": "time and we should see the yellow star ratings come back into the UI because",
    "start": "1610399",
    "end": "1616200"
  },
  {
    "text": "we've restored routing to to our main API farm so here you go so uh that's all",
    "start": "1616200",
    "end": "1623320"
  },
  {
    "text": "I had to show you guys I'm going to turn it back over to Daniel uh to talk about um some technology that we use to",
    "start": "1623320",
    "end": "1630240"
  },
  {
    "text": "predictively autoscale our uh our API",
    "start": "1630240",
    "end": "1637640"
  },
  {
    "text": "cool yeah we're all thrilled that the uh the demo gods were with us on that one um okay so uh you know now that we're",
    "start": "1641799",
    "end": "1649159"
  },
  {
    "text": "able to um control the traffic flow um protect our systems from failures",
    "start": "1649159",
    "end": "1655399"
  },
  {
    "text": "elsewhere another way in which we can fail is just not having enough capacity or not having the right allocation or",
    "start": "1655399",
    "end": "1661000"
  },
  {
    "text": "provisioning of resources so what I wanted to talk about now is uh how we scale our systems and I love this quote",
    "start": "1661000",
    "end": "1667440"
  },
  {
    "text": "um I think it reflects our mindset on this which is the possibilities are numerous once we decide to act and not",
    "start": "1667440",
    "end": "1673640"
  },
  {
    "text": "react and um i' like to make a distinction between reactive and predictive autoscaling so reactive",
    "start": "1673640",
    "end": "1679919"
  },
  {
    "text": "autoscaling is the autoscaling that maybe some of you use through Amazon uh",
    "start": "1679919",
    "end": "1685200"
  },
  {
    "text": "we use it a lot too it's still critical to our process so I don't want to suggest that we're not using it um and",
    "start": "1685200",
    "end": "1691880"
  },
  {
    "text": "basically what reactive autoscaling does is it reacts to real-time conditions um kind of responds to things like um load",
    "start": "1691880",
    "end": "1699519"
  },
  {
    "text": "average RPS maybe some other metrics and then based on that it's going to you",
    "start": "1699519",
    "end": "1705039"
  },
  {
    "text": "know figure out are you adding servers are you removing servers and it's actually excellent for many scaling",
    "start": "1705039",
    "end": "1711320"
  },
  {
    "text": "scenarios and it's clearly much better than static cluster sizing um we have found that there are",
    "start": "1711320",
    "end": "1718480"
  },
  {
    "text": "some challenges for us uh maybe for others as well um we still use uh the Amazon autoscaling of course but now",
    "start": "1718480",
    "end": "1725360"
  },
  {
    "text": "we've added another component to it to rectify some of these challenges the challenges uh for example policies may",
    "start": "1725360",
    "end": "1732360"
  },
  {
    "text": "be inefficient um there are traffic patterns that range from day to day uh week to week and um basically we're",
    "start": "1732360",
    "end": "1739159"
  },
  {
    "text": "setting policies that are static across the week or the you know whatever period of time so it can be inefficient at",
    "start": "1739159",
    "end": "1745440"
  },
  {
    "text": "times of the day um performance degradation during inst instant startup so you're responding to real time needs",
    "start": "1745440",
    "end": "1752679"
  },
  {
    "text": "and then whatever the duration in order to get the instances up is a time that you're vulnerable so if it takes 15",
    "start": "1752679",
    "end": "1758200"
  },
  {
    "text": "minutes for a server to um to be available for traffic that's a long time",
    "start": "1758200",
    "end": "1763519"
  },
  {
    "text": "a lot of bad things can happen outages can trigger downscales um so basically if you are experiencing an",
    "start": "1763519",
    "end": "1770919"
  },
  {
    "text": "outage and An Origin server is not seeing the traffic because well Zuul is doing something else with it uh then you",
    "start": "1770919",
    "end": "1777320"
  },
  {
    "text": "might downscale the size of the API back end in which case when it recovers you could be in uh for a world of",
    "start": "1777320",
    "end": "1784360"
  },
  {
    "text": "hurt um and then um you're ultimately at times going to be in excess capacity at",
    "start": "1784360",
    "end": "1789840"
  },
  {
    "text": "various times of the day so in response to some of these challenges we created a",
    "start": "1789840",
    "end": "1794919"
  },
  {
    "text": "system called scrier which is a predictive autoscaling engine and I'm going to talk a bit about how it works",
    "start": "1794919",
    "end": "1800080"
  },
  {
    "text": "and why how it's effective so the way it came to be is we looked at these patterns and said you",
    "start": "1800080",
    "end": "1806919"
  },
  {
    "text": "know what this is pretty consistent on a week-over-week basis uh we as humans can see this um so if we as humans can see",
    "start": "1806919",
    "end": "1814080"
  },
  {
    "text": "it probably a computer can see it too if we make the computer smart enough so that's what we did we set out to say you",
    "start": "1814080",
    "end": "1820480"
  },
  {
    "text": "know let's build an algorithm that will evaluate those patterns and predict what the next moment is going to look like",
    "start": "1820480",
    "end": "1828480"
  },
  {
    "text": "and this is ultimately where we arrived so the blue line is um actual traffic and then we started developing the",
    "start": "1828480",
    "end": "1834880"
  },
  {
    "text": "algorithm and I think the predicted looks pretty good um So based on that",
    "start": "1834880",
    "end": "1840080"
  },
  {
    "text": "and just kind of scouting out what that would look like we started to experiment with actually toggling the um the",
    "start": "1840080",
    "end": "1846880"
  },
  {
    "text": "scaling events so we took predicted workload for a given day and then we started to modify the scaling and",
    "start": "1846880",
    "end": "1853679"
  },
  {
    "text": "started to step up the scaling Step Down based on the predictions and that started to look really good too and so",
    "start": "1853679",
    "end": "1860200"
  },
  {
    "text": "now actually many of our systems are operating on scrier so what's it doing",
    "start": "1860200",
    "end": "1866080"
  },
  {
    "text": "it's evaluating historical data week over week day over day month over month um I don't think we're doing much year",
    "start": "1866080",
    "end": "1872600"
  },
  {
    "text": "over-ear but um we're taking these metrics and using that to prompt what do",
    "start": "1872600",
    "end": "1877679"
  },
  {
    "text": "we think the next one's going to look like and when we're scaling we're really",
    "start": "1877679",
    "end": "1882760"
  },
  {
    "text": "just adjusting the minimums so we're saying we're expecting that uh at this time no fewer than this number of",
    "start": "1882760",
    "end": "1888760"
  },
  {
    "text": "servers is needed um and then we are relying on reactive autoscaling to handle anything above that that we",
    "start": "1888760",
    "end": "1895159"
  },
  {
    "text": "didn't anticipate so the results of scryer um",
    "start": "1895159",
    "end": "1900840"
  },
  {
    "text": "quite favorable um if you look at load average uh we saw a lot spikier load",
    "start": "1900840",
    "end": "1906000"
  },
  {
    "text": "average with reactive autoscaling only um with the two of them working in concert with each other uh we're seeing",
    "start": "1906000",
    "end": "1912120"
  },
  {
    "text": "a lot thinner uh range between the spikes and the",
    "start": "1912120",
    "end": "1917240"
  },
  {
    "text": "troughs of load average that actually translates pretty well to response",
    "start": "1917240",
    "end": "1922320"
  },
  {
    "text": "latencies so um if load average is uh less spiky then boxes are healthier and",
    "start": "1922320",
    "end": "1928080"
  },
  {
    "text": "able to re respond more appropriately or um more timely to requests and so what",
    "start": "1928080",
    "end": "1933880"
  },
  {
    "text": "we're seeing here is our response times are much better or much more consistent talked a bit about the outage",
    "start": "1933880",
    "end": "1941000"
  },
  {
    "text": "recovery and this is actually a big deal for us because what used to happen for us or you know generally the pattern",
    "start": "1941000",
    "end": "1948399"
  },
  {
    "text": "that we would see around outages is something would happen we would start plummeting in terms of our traffic we",
    "start": "1948399",
    "end": "1954159"
  },
  {
    "text": "would eventually recover and then we'd get a retry storm or a request Thundering Herd storm back into the",
    "start": "1954159",
    "end": "1960600"
  },
  {
    "text": "system and we were under provision for that and um the under provisioning actually extended our outages for some",
    "start": "1960600",
    "end": "1967480"
  },
  {
    "text": "period of time um so it might actually double the duration of the outage what's happening here though with scrier is",
    "start": "1967480",
    "end": "1973600"
  },
  {
    "text": "that we're maintaining that minimum instance count based on the prediction so even if it drops down due to um uh",
    "start": "1973600",
    "end": "1981279"
  },
  {
    "text": "due to um an outage when it recovers we're correctly provisioned for what the traffic should actually look like so",
    "start": "1981279",
    "end": "1987639"
  },
  {
    "text": "we're actually cutting off that secondary part of the outage and then of course aw AWS costs",
    "start": "1987639",
    "end": "1995919"
  },
  {
    "text": "because we are um much tighter in our provisioning needs and we're not dealing",
    "start": "1995919",
    "end": "2001120"
  },
  {
    "text": "with those inefficiencies of the varying traffic patterns we're able to keep the costs a little tighter which is good for",
    "start": "2001120",
    "end": "2007399"
  },
  {
    "text": "us anyway way um so key takeaways from everything",
    "start": "2007399",
    "end": "2012840"
  },
  {
    "text": "that we're talking about here one routing is important and uh I",
    "start": "2012840",
    "end": "2018279"
  },
  {
    "text": "would emphasize that not only is routing important but it's key to separate out the routing function from the processing",
    "start": "2018279",
    "end": "2025919"
  },
  {
    "text": "function and that's what we've done we've had Zuul do the routing hands off to An Origin server some cases API",
    "start": "2025919",
    "end": "2032840"
  },
  {
    "text": "playback website wherever it's going to go and that allows the website to be protected Ed from other issues by zul um",
    "start": "2032840",
    "end": "2041840"
  },
  {
    "text": "so that's quite important resiliency is also important um so can we prevent our systems from",
    "start": "2041840",
    "end": "2049040"
  },
  {
    "text": "failing can we prevent or protect the customers from the failures of others um",
    "start": "2049040",
    "end": "2054079"
  },
  {
    "text": "another key component to this is drift is going to happen systems are constantly getting more and more complicated they're evolving new things",
    "start": "2054079",
    "end": "2061040"
  },
  {
    "text": "are happening and like that Leslie Lamport quote says more things are going",
    "start": "2061040",
    "end": "2067200"
  },
  {
    "text": "that we don't even even know exists are able to take down our system so um it's important for us to constantly be",
    "start": "2067200",
    "end": "2072280"
  },
  {
    "text": "evaluating this and you know modifying the historics configurations checking out timeouts and retries and things like",
    "start": "2072280",
    "end": "2078760"
  },
  {
    "text": "that to make sure that we're not going to end up in this uh scenario where we don't know that uh something can take us",
    "start": "2078760",
    "end": "2084520"
  },
  {
    "text": "out and fallbacks is a key component to this um if we can actually do something",
    "start": "2084520",
    "end": "2089720"
  },
  {
    "text": "like uh the ratings The cin match scenario and offer some other less optimal um output that is uh you know",
    "start": "2089720",
    "end": "2097960"
  },
  {
    "text": "it's a great way to go scaling is important um and I believe",
    "start": "2097960",
    "end": "2104480"
  },
  {
    "text": "pretty wholeheartedly that being proactive on your scaling needs both in terms of capacity planning or using",
    "start": "2104480",
    "end": "2110280"
  },
  {
    "text": "something like scryer rather than just reacting is optimal then finally open source um we",
    "start": "2110280",
    "end": "2118480"
  },
  {
    "text": "take from the community we give back to the community I talked today about or we talked about his in zul and scrier his",
    "start": "2118480",
    "end": "2125720"
  },
  {
    "text": "and Zuul are open- sourced scryer maybe someday um but they're out there uh",
    "start": "2125720",
    "end": "2131400"
  },
  {
    "text": "along with I I don't know what's our count 50 60 uh projects out there on the GitHub site so if you want to check",
    "start": "2131400",
    "end": "2137880"
  },
  {
    "text": "those out um again I mentioned uh sharma's talk on",
    "start": "2137880",
    "end": "2143680"
  },
  {
    "text": "Friday so if you want to check that out and then we also had a range of other speakers um I think we're going to have a range of office hours tomorrow and",
    "start": "2143680",
    "end": "2150440"
  },
  {
    "text": "Friday so if you want to come talk to us about any of these sessions or check out the slides they're all there Ben and I",
    "start": "2150440",
    "end": "2155880"
  },
  {
    "text": "will be at our booth in the expo hall at um uh between 1: and 3 tomorrow so if",
    "start": "2155880",
    "end": "2161359"
  },
  {
    "text": "you want to come talk to us about any of that and uh those are our slides so",
    "start": "2161359",
    "end": "2167960"
  },
  {
    "text": "[Applause]",
    "start": "2167960",
    "end": "2176839"
  },
  {
    "text": "questions any questions",
    "start": "2176839",
    "end": "2181079"
  },
  {
    "text": "I did did you hear uh yeah the qu the question was um yeah if um if elbs",
    "start": "2198040",
    "end": "2203319"
  },
  {
    "text": "supported all of the routing functionality that we wanted would we use Zu um not really sure if probably",
    "start": "2203319",
    "end": "2211760"
  },
  {
    "text": "not um but they they don't and um you know they probably wouldn't support the",
    "start": "2211760",
    "end": "2217640"
  },
  {
    "text": "same level of programmatic you know programability you know um programming",
    "start": "2217640",
    "end": "2222960"
  },
  {
    "text": "support that we would want so you know I think um if anything we might actually move away from EB's and just have Zu be",
    "start": "2222960",
    "end": "2229839"
  },
  {
    "text": "the the actual entry point for all of our uh our",
    "start": "2229839",
    "end": "2235160"
  },
  {
    "text": "traffic what was the question again for what how do you guys use",
    "start": "2242680",
    "end": "2249480"
  },
  {
    "text": "right um so the question is how do we use zul for like intrusion detection and security um and so uh Zu You know",
    "start": "2251599",
    "end": "2260400"
  },
  {
    "text": "different origin applications have different requirements and we we do have um like our website team has some code",
    "start": "2260400",
    "end": "2267520"
  },
  {
    "text": "that they write for Zuul that you know does some of those things and they have their own kind of custom code that does",
    "start": "2267520",
    "end": "2273960"
  },
  {
    "text": "you know rate limiting for example if you see too much traffic from like a particular IP address or something like",
    "start": "2273960",
    "end": "2279720"
  },
  {
    "text": "that so so you do do that on z um but different people programmed it sounds",
    "start": "2279720",
    "end": "2286960"
  },
  {
    "text": "like different different teams programmed differently for it and and put it into the configuration or yeah",
    "start": "2286960",
    "end": "2292480"
  },
  {
    "text": "that's right so we have a security team who specializes in figuring out where the intrusions are likely to happen or what's actually happening and then we",
    "start": "2292480",
    "end": "2299359"
  },
  {
    "text": "expose um mechanisms for them to inject in what they want to have happen and that all happens at the Z layer",
    "start": "2299359",
    "end": "2307680"
  },
  {
    "text": "the on the on the gzilla stuff that you showed",
    "start": "2312240",
    "end": "2318000"
  },
  {
    "text": "how are you getting the like the it looked like you were showing like the classes that were being used through the",
    "start": "2318000",
    "end": "2324000"
  },
  {
    "text": "request in your Java application so how are you pulling that data out are you running like sidecar agents on your",
    "start": "2324000",
    "end": "2331200"
  },
  {
    "text": "application servers or are you querying them directly through jmx ports or something along those lines to get that",
    "start": "2331200",
    "end": "2336440"
  },
  {
    "text": "data no it's actually it's simpler than than any of those things um so um",
    "start": "2336440",
    "end": "2342359"
  },
  {
    "text": "basically uh in when an API server gets a request we just track the the hiss",
    "start": "2342359",
    "end": "2348200"
  },
  {
    "text": "commands that execute in the context of that request and it just gets stored in memory for that particular request and",
    "start": "2348200",
    "end": "2354520"
  },
  {
    "text": "then there's a filter that basically writes all that stuff into a response header that gets sent back to Zu and Zu can then just stream that",
    "start": "2354520",
    "end": "2362318"
  },
  {
    "text": "down um maybe missing something but in an earlier slide you mentioned using um Zoo to redirect traffic to another",
    "start": "2365680",
    "end": "2372119"
  },
  {
    "text": "region that was having an outage how do you do that if the regions have an outage uh yeah good uh good good",
    "start": "2372119",
    "end": "2379440"
  },
  {
    "text": "observation uh if if if the outage is like affecting Z then then we can't and",
    "start": "2379440",
    "end": "2384520"
  },
  {
    "text": "you just have to move DNS yeah it depends on the nature of the audit so in this example that I showed it was a",
    "start": "2384520",
    "end": "2390640"
  },
  {
    "text": "Netflix service problem you know maybe a deployment or a bug not an AWS Regional",
    "start": "2390640",
    "end": "2396160"
  },
  {
    "text": "outage or anything like that it's also worth pointing out that the region that you're failing into even if you need to just kind of update DNS and you can't",
    "start": "2396160",
    "end": "2402640"
  },
  {
    "text": "have one Zool you know cross region proxy to another one that Zool in the region where all the large influx of",
    "start": "2402640",
    "end": "2408920"
  },
  {
    "text": "traffic is is coming into it um we throttle there and we gradually kind of let traffic come in as the backends",
    "start": "2408920",
    "end": "2415560"
  },
  {
    "text": "start scaling up so it plays a role in the the failover process regardless of whether or not you're cross region",
    "start": "2415560",
    "end": "2421200"
  },
  {
    "text": "proxying from a failed region no wait",
    "start": "2421200",
    "end": "2427839"
  },
  {
    "text": "right um can you speak to more I guess I come from more of a",
    "start": "2427839",
    "end": "2433240"
  },
  {
    "text": "traditional website background can you speak to resiliency on the website part",
    "start": "2433240",
    "end": "2439280"
  },
  {
    "text": "of uh your service take it okay so um For Us",
    "start": "2439280",
    "end": "2444319"
  },
  {
    "text": "website is basically I mean we're in a hybrid state right now right so historically there is a legacy component",
    "start": "2444319",
    "end": "2451040"
  },
  {
    "text": "to the website we're moving on to basically fitting on top of the model that I described today in which case the",
    "start": "2451040",
    "end": "2456560"
  },
  {
    "text": "website is just another presentation layer so that's the that is where we're moving to and we're partway through that",
    "start": "2456560",
    "end": "2463280"
  },
  {
    "text": "um historically the we the website basically had its own infrastructure layer underneath that and they were",
    "start": "2463280",
    "end": "2469480"
  },
  {
    "text": "using similar techniques so they had their own cluster for Zuul uh they Incorporated hiss for all their",
    "start": "2469480",
    "end": "2475400"
  },
  {
    "text": "dependency calls it was basically the same pattern it's just uh separated out we're now consolidating that into one",
    "start": "2475400",
    "end": "2482240"
  },
  {
    "text": "pattern and one flow since you since you do so much",
    "start": "2482240",
    "end": "2487760"
  },
  {
    "text": "testing and production I guess how do you manage it with developers like does a developer have the ability to route a",
    "start": "2487760",
    "end": "2493520"
  },
  {
    "text": "particular traffic for a particular device to a new place and then forget about it or something like that yeah um",
    "start": "2493520",
    "end": "2499280"
  },
  {
    "text": "yeah so that that tool that I was showing you guys where I did the routing by ESN um by default those routing rules",
    "start": "2499280",
    "end": "2505520"
  },
  {
    "text": "have a TTL and so they expire after 30 minutes um so if you want it to last",
    "start": "2505520",
    "end": "2510800"
  },
  {
    "text": "around longer you have to like just increase the TTL everyone does have the uh ability",
    "start": "2510800",
    "end": "2517319"
  },
  {
    "text": "and the right to go and do those things and we just trust that people will do the right thing",
    "start": "2517319",
    "end": "2523839"
  },
  {
    "text": "yeah yeah yeah simple question uh what's the ratio for for Zuul instances to API",
    "start": "2526680",
    "end": "2533280"
  },
  {
    "text": "instances um we don't have you know nearly as many Zool instances um and like Daniel mentioned you know one",
    "start": "2533280",
    "end": "2540280"
  },
  {
    "text": "request into Zool is one request out um at the API tier that's where all the",
    "start": "2540280",
    "end": "2545760"
  },
  {
    "text": "work is happening so I don't know what the ratio is off the top of my head but it's you know half as many instances",
    "start": "2545760",
    "end": "2551720"
  },
  {
    "text": "maybe maybe fewer and it's not even always one incoming Zool goes to An",
    "start": "2551720",
    "end": "2556800"
  },
  {
    "text": "Origin either so there could be fail you know fast 500s or something like that so",
    "start": "2556800",
    "end": "2562760"
  },
  {
    "text": "any number things can happen do you guys use a c I know you",
    "start": "2562760",
    "end": "2570440"
  },
  {
    "text": "guys have your own open connect um probably use cloudfront uh to serve up",
    "start": "2570440",
    "end": "2575960"
  },
  {
    "text": "static assets Beyond just Media or and how does that work with routing with Zuul um just a different uh different",
    "start": "2575960",
    "end": "2583440"
  },
  {
    "text": "domain name something like that how does that work yeah so we don't um like all of the UI assets they're um they're",
    "start": "2583440",
    "end": "2590680"
  },
  {
    "text": "hosted on a CDN and we don't use zo for for any of those things um so yeah just",
    "start": "2590680",
    "end": "2597040"
  },
  {
    "text": "just really depends most of our um non-streaming functionality is uh",
    "start": "2597040",
    "end": "2602800"
  },
  {
    "text": "basically all of our adws functionality is front and by um and a lot of the the",
    "start": "2602800",
    "end": "2608160"
  },
  {
    "text": "kind of you know Chrome Assets in our UI in like JavaScript that's all CDN hosted and not controlled vul yep okay last",
    "start": "2608160",
    "end": "2615480"
  },
  {
    "text": "question where was it um so when a new instance comes up presumably it has to",
    "start": "2615480",
    "end": "2620760"
  },
  {
    "text": "let zo know of its existence um does that happen through zookeeper or something like that or does it just",
    "start": "2620760",
    "end": "2626960"
  },
  {
    "text": "notify an API point that hey I'm alive and then now the rooting rules apply to",
    "start": "2626960",
    "end": "2632160"
  },
  {
    "text": "me yeah so um Z uses Eureka",
    "start": "2632160",
    "end": "2637599"
  },
  {
    "text": "like everything else at Netflix and so um yeah we just have it configured by like a VIP address for like our API farm",
    "start": "2637599",
    "end": "2645319"
  },
  {
    "text": "and as zo instances come up they they know the VIPs that they're routing to and it's all you know we're using the same stuff that um that's open",
    "start": "2645319",
    "end": "2653319"
  },
  {
    "text": "sourced cool so we have to wrap up the room here um if you want to talk to us we'll be around here for a little while",
    "start": "2653319",
    "end": "2659720"
  },
  {
    "text": "but we'll also be at office hours um at our booth one to three thanks a lot for",
    "start": "2659720",
    "end": "2664839"
  },
  {
    "text": "coming",
    "start": "2664839",
    "end": "2667839"
  }
]