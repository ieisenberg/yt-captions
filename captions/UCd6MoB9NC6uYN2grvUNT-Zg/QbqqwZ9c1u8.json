[
  {
    "start": "0",
    "end": "30000"
  },
  {
    "text": "[Music]",
    "start": "400",
    "end": "6480"
  },
  {
    "text": "[Music]",
    "start": "8620",
    "end": "11969"
  },
  {
    "text": "hello i'm anshutta a cloud support",
    "start": "12320",
    "end": "14400"
  },
  {
    "text": "engineer here at the aws office in",
    "start": "14400",
    "end": "16400"
  },
  {
    "text": "northern virginia",
    "start": "16400",
    "end": "18240"
  },
  {
    "text": "today i'm going to show you how to give",
    "start": "18240",
    "end": "20240"
  },
  {
    "text": "permissions to your aws lambda function",
    "start": "20240",
    "end": "22800"
  },
  {
    "text": "by using policies and roles in the aws",
    "start": "22800",
    "end": "25519"
  },
  {
    "text": "serverless application model template",
    "start": "25519",
    "end": "28240"
  },
  {
    "text": "let's get started in the aws sam",
    "start": "28240",
    "end": "30880"
  },
  {
    "start": "30000",
    "end": "45000"
  },
  {
    "text": "template we will use aws serverless",
    "start": "30880",
    "end": "33360"
  },
  {
    "text": "function resource to define our lambda",
    "start": "33360",
    "end": "36079"
  },
  {
    "text": "function",
    "start": "36079",
    "end": "37440"
  },
  {
    "text": "within this resource we can use the",
    "start": "37440",
    "end": "39440"
  },
  {
    "text": "policies or role property to define and",
    "start": "39440",
    "end": "42320"
  },
  {
    "text": "configure the lambda functions execution",
    "start": "42320",
    "end": "44399"
  },
  {
    "text": "role",
    "start": "44399",
    "end": "45280"
  },
  {
    "start": "45000",
    "end": "114000"
  },
  {
    "text": "let's walk through how to use each of",
    "start": "45280",
    "end": "47760"
  },
  {
    "text": "these properties",
    "start": "47760",
    "end": "49120"
  },
  {
    "text": "to create a new aws im role for the",
    "start": "49120",
    "end": "52079"
  },
  {
    "text": "lambda functions execution role we'll",
    "start": "52079",
    "end": "54480"
  },
  {
    "text": "use the policies property as shown here",
    "start": "54480",
    "end": "57520"
  },
  {
    "text": "the value for the policies property can",
    "start": "57520",
    "end": "59840"
  },
  {
    "text": "be a combination of the name of an aws",
    "start": "59840",
    "end": "62160"
  },
  {
    "text": "managed policy an awsom policy template",
    "start": "62160",
    "end": "65600"
  },
  {
    "text": "or an inline policy",
    "start": "65600",
    "end": "68080"
  },
  {
    "text": "here's an example where policies is",
    "start": "68080",
    "end": "70240"
  },
  {
    "text": "defined by using an aws managed policy",
    "start": "70240",
    "end": "74080"
  },
  {
    "text": "let us use the aws lambda basic",
    "start": "74080",
    "end": "76159"
  },
  {
    "text": "execution role managed policy in this",
    "start": "76159",
    "end": "78479"
  },
  {
    "text": "example",
    "start": "78479",
    "end": "79600"
  },
  {
    "text": "we can identify any aws managed policies",
    "start": "79600",
    "end": "82400"
  },
  {
    "text": "that we want to attach to the role and",
    "start": "82400",
    "end": "84479"
  },
  {
    "text": "set the policies value to the managed",
    "start": "84479",
    "end": "86560"
  },
  {
    "text": "policies name",
    "start": "86560",
    "end": "88159"
  },
  {
    "text": "we can then add multiple managed",
    "start": "88159",
    "end": "90159"
  },
  {
    "text": "policies to the role if needed",
    "start": "90159",
    "end": "92960"
  },
  {
    "text": "we can also attach one or more awscm",
    "start": "92960",
    "end": "95680"
  },
  {
    "text": "policy templates",
    "start": "95680",
    "end": "97280"
  },
  {
    "text": "aws sam provides a list of policy",
    "start": "97280",
    "end": "99600"
  },
  {
    "text": "templates to choose from each policy",
    "start": "99600",
    "end": "102079"
  },
  {
    "text": "template has predefined actions",
    "start": "102079",
    "end": "105600"
  },
  {
    "text": "you can look at the attached aws",
    "start": "105600",
    "end": "107520"
  },
  {
    "text": "documentation and the article attached",
    "start": "107520",
    "end": "109920"
  },
  {
    "text": "to this video to see the available sam",
    "start": "109920",
    "end": "111920"
  },
  {
    "text": "policy templates",
    "start": "111920",
    "end": "114000"
  },
  {
    "start": "114000",
    "end": "139000"
  },
  {
    "text": "here we can see an example of the",
    "start": "114000",
    "end": "115920"
  },
  {
    "text": "policies property that uses sqs polar",
    "start": "115920",
    "end": "119280"
  },
  {
    "text": "policy policy template",
    "start": "119280",
    "end": "121600"
  },
  {
    "text": "the sqs polar policy template in this",
    "start": "121600",
    "end": "124320"
  },
  {
    "text": "example expects a queue name as a",
    "start": "124320",
    "end": "126640"
  },
  {
    "text": "resource",
    "start": "126640",
    "end": "127759"
  },
  {
    "text": "this means that we must provide this",
    "start": "127759",
    "end": "129520"
  },
  {
    "text": "resource name as a key and value pair",
    "start": "129520",
    "end": "132319"
  },
  {
    "text": "with the key as the queue name and the",
    "start": "132319",
    "end": "134560"
  },
  {
    "text": "value from what's extracted from the sqs",
    "start": "134560",
    "end": "137200"
  },
  {
    "text": "resource in the template",
    "start": "137200",
    "end": "139680"
  },
  {
    "start": "139000",
    "end": "186000"
  },
  {
    "text": "if none of the managed policies or the",
    "start": "139680",
    "end": "142080"
  },
  {
    "text": "policy templates fit the use case",
    "start": "142080",
    "end": "144800"
  },
  {
    "text": "then we can even define the inline",
    "start": "144800",
    "end": "146640"
  },
  {
    "text": "policy as we see in this example",
    "start": "146640",
    "end": "149280"
  },
  {
    "text": "here we can see that we are using the",
    "start": "149280",
    "end": "151200"
  },
  {
    "text": "statement property to define the inline",
    "start": "151200",
    "end": "154000"
  },
  {
    "text": "policy",
    "start": "154000",
    "end": "155120"
  },
  {
    "text": "we can use any combinations of the aws",
    "start": "155120",
    "end": "157760"
  },
  {
    "text": "managed policy awscm policy template or",
    "start": "157760",
    "end": "161599"
  },
  {
    "text": "inline policy to define our new iam role",
    "start": "161599",
    "end": "165519"
  },
  {
    "text": "with the use of policies parameter",
    "start": "165519",
    "end": "168480"
  },
  {
    "text": "to define the maximum permissions",
    "start": "168480",
    "end": "170560"
  },
  {
    "text": "allowed for lambda's execution role we",
    "start": "170560",
    "end": "173120"
  },
  {
    "text": "can use the permissions boundary",
    "start": "173120",
    "end": "174879"
  },
  {
    "text": "property",
    "start": "174879",
    "end": "176239"
  },
  {
    "text": "this property takes a policy rn which",
    "start": "176239",
    "end": "179200"
  },
  {
    "text": "will then be set as the permissions",
    "start": "179200",
    "end": "181200"
  },
  {
    "text": "boundary on the im role that we created",
    "start": "181200",
    "end": "184400"
  },
  {
    "text": "with the policies property",
    "start": "184400",
    "end": "186480"
  },
  {
    "text": "if you don't want to create a new",
    "start": "186480",
    "end": "188159"
  },
  {
    "text": "execution role but rather want to use an",
    "start": "188159",
    "end": "190959"
  },
  {
    "text": "existing role then we can use the role",
    "start": "190959",
    "end": "193519"
  },
  {
    "text": "property as we can see here",
    "start": "193519",
    "end": "196319"
  },
  {
    "text": "the role property will take an arn of an",
    "start": "196319",
    "end": "199200"
  },
  {
    "text": "iam role which can be assumed by the",
    "start": "199200",
    "end": "201599"
  },
  {
    "text": "lambda function",
    "start": "201599",
    "end": "203120"
  },
  {
    "text": "note that we cannot use the permissions",
    "start": "203120",
    "end": "204879"
  },
  {
    "text": "boundary property with the role property",
    "start": "204879",
    "end": "207920"
  },
  {
    "text": "as this role is a predefined role",
    "start": "207920",
    "end": "210879"
  },
  {
    "text": "the permissions boundary can be applied",
    "start": "210879",
    "end": "212959"
  },
  {
    "text": "only with policies property",
    "start": "212959",
    "end": "216239"
  },
  {
    "text": "if you set both the role and the",
    "start": "216239",
    "end": "218319"
  },
  {
    "text": "policies property then the role property",
    "start": "218319",
    "end": "220959"
  },
  {
    "text": "will be given precedence and the",
    "start": "220959",
    "end": "222879"
  },
  {
    "text": "policies property will be ignored for",
    "start": "222879",
    "end": "225280"
  },
  {
    "text": "the purposes of deploying my template",
    "start": "225280",
    "end": "227680"
  },
  {
    "text": "i'll go ahead and use the policies",
    "start": "227680",
    "end": "229680"
  },
  {
    "text": "property instead of the role",
    "start": "229680",
    "end": "231840"
  },
  {
    "start": "231000",
    "end": "275000"
  },
  {
    "text": "now that our template is ready we can",
    "start": "231840",
    "end": "234319"
  },
  {
    "text": "use sam build in our terminal to build",
    "start": "234319",
    "end": "237439"
  },
  {
    "text": "and package our application we will now",
    "start": "237439",
    "end": "240239"
  },
  {
    "text": "use sam deploy to deploy our awsm",
    "start": "240239",
    "end": "243120"
  },
  {
    "text": "application",
    "start": "243120",
    "end": "244959"
  },
  {
    "text": "if i go to my aws cloudformation console",
    "start": "244959",
    "end": "248319"
  },
  {
    "text": "i can see the aws sam template deployed",
    "start": "248319",
    "end": "251760"
  },
  {
    "text": "and i can see the resources that i",
    "start": "251760",
    "end": "253840"
  },
  {
    "text": "created including the lambda's execution",
    "start": "253840",
    "end": "256079"
  },
  {
    "text": "role now you know how to give",
    "start": "256079",
    "end": "258000"
  },
  {
    "text": "permissions to your lambda functions by",
    "start": "258000",
    "end": "260239"
  },
  {
    "text": "using policies and roles in aws sam",
    "start": "260239",
    "end": "263199"
  },
  {
    "text": "template",
    "start": "263199",
    "end": "264240"
  },
  {
    "text": "thanks for watching and happy cloud",
    "start": "264240",
    "end": "266400"
  },
  {
    "text": "computing from all of us here at aws",
    "start": "266400",
    "end": "270160"
  },
  {
    "text": "[Music]",
    "start": "270160",
    "end": "276369"
  }
]