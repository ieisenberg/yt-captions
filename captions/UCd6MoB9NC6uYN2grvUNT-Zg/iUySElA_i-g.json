[
  {
    "text": "hello my name is nate i i'm a software development manager on the AWS wife team",
    "start": "30",
    "end": "6000"
  },
  {
    "text": "which is part of a bigger AWS edge services team that includes some of the",
    "start": "6000",
    "end": "11670"
  },
  {
    "text": "security services that i work with plus throughout 53 and cloud front a",
    "start": "11670",
    "end": "17060"
  },
  {
    "text": "cloud front is a service that's designed to run in front of your websites and api",
    "start": "17060",
    "end": "22260"
  },
  {
    "text": "to improve the availability and performance of your websites over the Internet in addition to that cloud front",
    "start": "22260",
    "end": "29519"
  },
  {
    "text": "comes with a number of security features that can actually improve the security stance of your websites and api's",
    "start": "29519",
    "end": "36680"
  },
  {
    "text": "today's talk covers a broad number of best practices in the area of security",
    "start": "40550",
    "end": "45660"
  },
  {
    "text": "for websites running on cloud front it's a 200 level class so we're not gonna go",
    "start": "45660",
    "end": "51690"
  },
  {
    "text": "deep on looking at code samples or anything like that but the to nerd level",
    "start": "51690",
    "end": "58020"
  },
  {
    "text": "just suggests that if you have some familiarity with with website setup or if you're already using cloud front then",
    "start": "58020",
    "end": "63090"
  },
  {
    "text": "you'll get a little bit more out of this talk of course security matters I'm sure",
    "start": "63090",
    "end": "70770"
  },
  {
    "text": "all of you have seen news headlines that seem to be a regular occurrence about the next company that's had some sort of",
    "start": "70770",
    "end": "76290"
  },
  {
    "text": "security event and data leak it's really important it's important that when you're implementing your web",
    "start": "76290",
    "end": "81869"
  },
  {
    "text": "applications on the Internet that you're following security best practice is a part of earning customer trust it's also",
    "start": "81869",
    "end": "88770"
  },
  {
    "text": "an important part for those of you that are operating web applications that may be subject to regulatory compliance",
    "start": "88770",
    "end": "94259"
  },
  {
    "text": "there are standards that are set forth and many of these which require use of security best practice and then finally",
    "start": "94259",
    "end": "100079"
  },
  {
    "text": "most importantly when you're taking the responsibility of handling customers private information or credit card",
    "start": "100079",
    "end": "106590"
  },
  {
    "text": "details it's very important that you're following security best practice to make sure that yours isn't the next website",
    "start": "106590",
    "end": "113040"
  },
  {
    "text": "that shows up in one of those data leak web articles so when talking about",
    "start": "113040",
    "end": "120840"
  },
  {
    "text": "security AWS will often refer to this shared security model and if you're not",
    "start": "120840",
    "end": "126540"
  },
  {
    "text": "familiar with it that I name I'd encourage you to go to this web link and read up on it it's a model for talking",
    "start": "126540",
    "end": "132120"
  },
  {
    "text": "about the types of security response abilities that fall to us as your infrastructure provider and the kinds of",
    "start": "132120",
    "end": "140150"
  },
  {
    "text": "responsibilities that fall to you as users of AWS services and as as someone that's configuring applications to run",
    "start": "140150",
    "end": "146579"
  },
  {
    "text": "an AWS the model follows along three main categories so there's",
    "start": "146579",
    "end": "152150"
  },
  {
    "text": "infrastructure and this by and large falls to us as the infrastructure provider the services layer which are",
    "start": "152150",
    "end": "159150"
  },
  {
    "text": "for services like cloud front or route 53 we offer a number of features that",
    "start": "159150",
    "end": "164430"
  },
  {
    "text": "are relevant to security in some cases there may be some built in services features and other cases you may need to",
    "start": "164430",
    "end": "170609"
  },
  {
    "text": "configure the options properly for appropriate to whatever environment you're working in and finally",
    "start": "170609",
    "end": "176579"
  },
  {
    "text": "application security so this is the actual software that you're running in the cloud the web server software and how you configure it and it tends mostly",
    "start": "176579",
    "end": "183569"
  },
  {
    "text": "default to your responsibility in a cloud front world these same three areas",
    "start": "183569",
    "end": "188819"
  },
  {
    "text": "apply and we'll be talking about each of these three areas throughout the talk as",
    "start": "188819",
    "end": "195419"
  },
  {
    "text": "we go through the talk you'll see certain best practices and recommendations will be marked with a little DNA symbol over on the far end",
    "start": "195419",
    "end": "202650"
  },
  {
    "text": "there which indicates that this is a built-in capability so you don't need to worry about it it's just an inherent",
    "start": "202650",
    "end": "209159"
  },
  {
    "text": "capability and if you're using the service then you get it automatically there are other things that are denoted",
    "start": "209159",
    "end": "215010"
  },
  {
    "text": "here with a little person and that's you which means that you need to take some",
    "start": "215010",
    "end": "220949"
  },
  {
    "text": "action make a choice and configure a particular option related to security in this case so we'll start briefly talking",
    "start": "220949",
    "end": "231900"
  },
  {
    "text": "about infrastructure security as it relates to cloud front infrastructure",
    "start": "231900",
    "end": "237239"
  },
  {
    "text": "security refers to the actual physical Hardware the servers that we use to power the cloud front service that's",
    "start": "237239",
    "end": "244229"
  },
  {
    "text": "sitting in front of your websites and in accelerating and increasing the availability it also refers to the",
    "start": "244229",
    "end": "249479"
  },
  {
    "text": "network infrastructure that's connecting our servers together and then into the internet all of the Amazon facilities",
    "start": "249479",
    "end": "256130"
  },
  {
    "text": "follow a strict regimen of physical security to make sure that physical",
    "start": "256130",
    "end": "261329"
  },
  {
    "text": "access is limited to only authorized personnel and every site has professional serve",
    "start": "261329",
    "end": "267360"
  },
  {
    "text": "is a professional security staff available to make sure that that authorized access is limited we use",
    "start": "267360",
    "end": "274020"
  },
  {
    "text": "nondescript data centers to make sure that we're not broadcasting that these are Amazon facilities and another",
    "start": "274020",
    "end": "285389"
  },
  {
    "text": "important note here is the way that our operators access our infrastructure is also tightly controlled so for any",
    "start": "285389",
    "end": "291870"
  },
  {
    "text": "access our operators make as part of doing deployments or maintenance is controlled through Bastion hosts so",
    "start": "291870",
    "end": "299280"
  },
  {
    "text": "these Bastion host separate our production network and our servers that are running customer workloads from you",
    "start": "299280",
    "end": "305879"
  },
  {
    "text": "know the laptop that I use to do my daily work we also use two-factor authentication everywhere so in order to",
    "start": "305879",
    "end": "313169"
  },
  {
    "text": "access any production systems I need both a password and some physical device to confirm my identity and we use",
    "start": "313169",
    "end": "321539"
  },
  {
    "text": "encryption at many levels so everywhere we have important secrets like my operator credentials or maybe user",
    "start": "321539",
    "end": "327930"
  },
  {
    "text": "identities or other other important secrets are encrypted at rest and in",
    "start": "327930",
    "end": "333270"
  },
  {
    "text": "some cases we use multiple layers of encryption we also use a strategy to",
    "start": "333270",
    "end": "338520"
  },
  {
    "text": "with ours our credentials to ensure that we don't create a one credential to rule",
    "start": "338520",
    "end": "345060"
  },
  {
    "text": "them all kind of situation we're very conscientious about making sure that the credentials are partitioned and only",
    "start": "345060",
    "end": "352409"
  },
  {
    "text": "support give access to a certain specific part of the infrastructure and not broadly across everything we use",
    "start": "352409",
    "end": "358409"
  },
  {
    "text": "that same kind of principle of least privilege when it applies to our operators to so they only get access to",
    "start": "358409",
    "end": "363569"
  },
  {
    "text": "do just what they need to do on their servers if they're responsible for initiating some software deployments and",
    "start": "363569",
    "end": "369089"
  },
  {
    "text": "that's all they do then that's the only permission they have also our systems",
    "start": "369089",
    "end": "374099"
  },
  {
    "text": "are fully instrumented we have monitoring and metrics on everything and the most relevant thing to security is",
    "start": "374099",
    "end": "380009"
  },
  {
    "text": "that all of the interactions to our servers are logged so anytime an operator takes an action on the server",
    "start": "380009",
    "end": "385199"
  },
  {
    "text": "those events are logged and stored any time we make a deployment or software",
    "start": "385199",
    "end": "390419"
  },
  {
    "text": "change those are also logged and stored and as a result of that following those",
    "start": "390419",
    "end": "396209"
  },
  {
    "text": "best practices AWS does participate in regular audence audits and year CloudFront was included in that",
    "start": "396209",
    "end": "403310"
  },
  {
    "text": "audit process as well and in q3 we had a cloud frontal list of services on our",
    "start": "403310",
    "end": "408470"
  },
  {
    "text": "PCI page we have more recently achieved",
    "start": "408470",
    "end": "414080"
  },
  {
    "text": "a number of ISO standards including 9000 0:01 and a few others which relate to",
    "start": "414080",
    "end": "420520"
  },
  {
    "text": "security best practice and handling of PII information and you can check the",
    "start": "420520",
    "end": "427220"
  },
  {
    "text": "AWS website for those certifications to see where cloud fense listed so that",
    "start": "427220",
    "end": "436220"
  },
  {
    "text": "takes care of the infrastructure part the things that are just built inherently into the the underlying services that power cloud front now",
    "start": "436220",
    "end": "442700"
  },
  {
    "text": "let's flip over and talk about some the next layer up this is the services layer these are features built in and",
    "start": "442700",
    "end": "448400"
  },
  {
    "text": "available to cloud front in some cases they're just automatic and something that are available to you in other cases",
    "start": "448400",
    "end": "453500"
  },
  {
    "text": "you will need to configure cloud front specific to your environments needs and",
    "start": "453500",
    "end": "460870"
  },
  {
    "text": "as you see we will talk a little bit about some of those built-in features like the types of ciphers that we use",
    "start": "460870",
    "end": "466490"
  },
  {
    "text": "which are the built-ins as opposed to some of the configuration options around how you can make use of",
    "start": "466490",
    "end": "471950"
  },
  {
    "text": "SSL and TLS on cloud front and together both of these will ensure that you use",
    "start": "471950",
    "end": "477320"
  },
  {
    "text": "cloud front and a secure way to deliver content for your websites and api's so",
    "start": "477320",
    "end": "485300"
  },
  {
    "text": "the big feature that CloudFront offers again is that improving the availability",
    "start": "485300",
    "end": "490820"
  },
  {
    "text": "and performance of your website to all of your viewers across the internet so a",
    "start": "490820",
    "end": "495890"
  },
  {
    "text": "big part of what we're do do is we're moving bits from your origin locations to your customers wherever they are on",
    "start": "495890",
    "end": "503660"
  },
  {
    "text": "the Internet and as part of that a big part of what we do in the security space",
    "start": "503660",
    "end": "508820"
  },
  {
    "text": "is making sure that that data and transit is protected with cloud front",
    "start": "508820",
    "end": "514789"
  },
  {
    "text": "there are two legs to this there's an encrypted channel or an option for an",
    "start": "514789",
    "end": "520099"
  },
  {
    "text": "encrypted channel that occurs from the cloud front edge servers to your viewers",
    "start": "520099",
    "end": "525500"
  },
  {
    "text": "out on the Internet and then there's separate options and separate encrypted channel from cloud front back to your",
    "start": "525500",
    "end": "532760"
  },
  {
    "text": "origin web servers whether those web servers are running on ec2 in AWS or s3 or may be running in your own",
    "start": "532760",
    "end": "539510"
  },
  {
    "text": "data center facility somewhere else",
    "start": "539510",
    "end": "542860"
  },
  {
    "text": "what's nice is that for that that forward-facing channel out to the Internet if you use cloud front then you",
    "start": "545890",
    "end": "552620"
  },
  {
    "text": "automatically get the advanced SSL and TLS features that are built into the",
    "start": "552620",
    "end": "558110"
  },
  {
    "text": "cloud front web server layer and more specifically you get the benefit of the",
    "start": "558110",
    "end": "563240"
  },
  {
    "text": "high security ciphers that we're constantly curating and updating and some performance tuning that we've done",
    "start": "563240",
    "end": "569870"
  },
  {
    "text": "to make sure that you don't you actually can improve your performance when it comes to using encrypted channels as",
    "start": "569870",
    "end": "575480"
  },
  {
    "text": "opposed to losing performance so cloud",
    "start": "575480",
    "end": "582560"
  },
  {
    "text": "front is constantly reviewing the security best practices for TLS and SSL",
    "start": "582560",
    "end": "589360"
  },
  {
    "text": "security ciphers it's kind of a it's a it's an always-on thing the standards",
    "start": "589360",
    "end": "595340"
  },
  {
    "text": "are often shifting or new new security protocols are bubbling up the stack and",
    "start": "595340",
    "end": "601160"
  },
  {
    "text": "becoming more favorable and when those changes occur our engineering team is looking at at the latest best practice",
    "start": "601160",
    "end": "608840"
  },
  {
    "text": "will implement some of these and we'll do benchmark testing and what we're looking for here is the right balance of",
    "start": "608840",
    "end": "614120"
  },
  {
    "text": "providing customers with a good level of security selecting those cipher suites that offer good security and and and",
    "start": "614120",
    "end": "620900"
  },
  {
    "text": "moving off the ones that don't but also selecting ones and moving toward the top of our preference list those that that",
    "start": "620900",
    "end": "628010"
  },
  {
    "text": "are most performant as well to make sure that that performance experience is good for you and CloudFront does enforce a server",
    "start": "628010",
    "end": "635870"
  },
  {
    "text": "cipher preference list that means that our servers take our curated list that",
    "start": "635870",
    "end": "641780"
  },
  {
    "text": "of cipher suites that we've tested and selected and it pushes it on to the client as part of the TLS handshake and",
    "start": "641780",
    "end": "648320"
  },
  {
    "text": "then the client gets to choose from that list but we prioritized it so in a lot of cases we're asking them to pick that",
    "start": "648320",
    "end": "654080"
  },
  {
    "text": "number one and those top cipher suites that are in our preference set take",
    "start": "654080",
    "end": "661220"
  },
  {
    "text": "advantage of some of the latest TLS features for example cloud front",
    "start": "661220",
    "end": "667040"
  },
  {
    "text": "supports the use of ephemeral key exchange which means that every time an accession is negotiated",
    "start": "667040",
    "end": "674270"
  },
  {
    "text": "between the cloud front servers and the viewers cloud front is generating an ephemeral key that's unique to that",
    "start": "674270",
    "end": "680060"
  },
  {
    "text": "session and the advantage here is that if ever your certificates public private",
    "start": "680060",
    "end": "685459"
  },
  {
    "text": "key pair becomes compromised if somebody gets the the keys to to your SSL cert",
    "start": "685459",
    "end": "692089"
  },
  {
    "text": "then that they can't use those keys to",
    "start": "692089",
    "end": "697310"
  },
  {
    "text": "decrypt past traffic they may have recorded with CloudFront because of this this ephemeral key exchange and that's",
    "start": "697310",
    "end": "702680"
  },
  {
    "text": "an important part of perfect forward secrecy to support that in addition to",
    "start": "702680",
    "end": "710750"
  },
  {
    "text": "providing good security we're also enabling many features that support better and improve performance",
    "start": "710750",
    "end": "716930"
  },
  {
    "text": "for your viewers on the Internet when using TLS so one of the first features",
    "start": "716930",
    "end": "723260"
  },
  {
    "text": "we use is something called session tickets now the way session tickets work is once there's there's a number of",
    "start": "723260",
    "end": "730459"
  },
  {
    "text": "round trips and back and forth communication that has to go on between the viewer and CloudFront as part of negotiating a secure encrypted Channel",
    "start": "730459",
    "end": "738250"
  },
  {
    "text": "once that's done CloudFront will create an encrypted session ticket and hand",
    "start": "738250",
    "end": "743720"
  },
  {
    "text": "that back to the client and now if the client ever reconnects to request",
    "start": "743720",
    "end": "748790"
  },
  {
    "text": "another object subsequently it can pass that session ticket back to the cloud front servers and we can save a round-trip in that ssl negotiation which",
    "start": "748790",
    "end": "757160"
  },
  {
    "text": "improves the connect time and the customer experience we also support OCSP",
    "start": "757160",
    "end": "766010"
  },
  {
    "text": "stapling so OCSP is a process by which a",
    "start": "766010",
    "end": "771320"
  },
  {
    "text": "client as as part of the SSL TLS handshake will look at a certificate and",
    "start": "771320",
    "end": "778070"
  },
  {
    "text": "and then all of the certificates in the certificate chain all the way up to the root authority and it will verify and",
    "start": "778070",
    "end": "785959"
  },
  {
    "text": "make a call out to see that none of the certificates have been revoked this",
    "start": "785959",
    "end": "791930"
  },
  {
    "text": "process when it's done directly from the client can be pretty slow because the client has to for every single",
    "start": "791930",
    "end": "798050"
  },
  {
    "text": "certificate in the chain it's got to do a DNS lookup here the TCP connection make a connection out to some",
    "start": "798050",
    "end": "803850"
  },
  {
    "text": "certificate authorities somewhere out on the internet and say what's the status of this ticket has it been revoked and",
    "start": "803850",
    "end": "809160"
  },
  {
    "text": "it keeps going through that OCSP",
    "start": "809160",
    "end": "814170"
  },
  {
    "text": "stapling is a newer extension to TLS that allows a service provider like us",
    "start": "814170",
    "end": "819390"
  },
  {
    "text": "to do some of that heavy lifting work so now instead of the client going and making a bunch of connections directly",
    "start": "819390",
    "end": "825450"
  },
  {
    "text": "to the CAS behind the scenes CloudFront is regularly taking a look at all the certificates that we have in our",
    "start": "825450",
    "end": "831360"
  },
  {
    "text": "inventory and looking at the certificate chain and making calls out to all those certificate authorities in gathering up",
    "start": "831360",
    "end": "836970"
  },
  {
    "text": "the revocation status and that status is signed by those certificate authorities",
    "start": "836970",
    "end": "842400"
  },
  {
    "text": "and allows us to just ship back a little packet we can staple on the revocation",
    "start": "842400",
    "end": "847620"
  },
  {
    "text": "status as part of the TLS negotiation process so then the client doesn't have to and a practice that can save quite a",
    "start": "847620",
    "end": "854520"
  },
  {
    "text": "lot of time so some of our engineers ran some checks to compare what the client-side OCSP looked like compared to",
    "start": "854520",
    "end": "861540"
  },
  {
    "text": "a version that uses cloud fronts OCSP stapling and what we found was a pretty",
    "start": "861540",
    "end": "868080"
  },
  {
    "text": "dramatic improvement in their performance there in fact we were able to the version that used the OCSP",
    "start": "868080",
    "end": "876180"
  },
  {
    "text": "stapling from the cloud front side was 30% faster has saved a total of 20 milliseconds on that initial connection",
    "start": "876180",
    "end": "883470"
  },
  {
    "text": "between a client and server so these are things that you just get for free as",
    "start": "883470",
    "end": "889770"
  },
  {
    "text": "part of cloud front when you're using that service clients to support OCSP stapling will make that request to our",
    "start": "889770",
    "end": "895470"
  },
  {
    "text": "servers and then we'll we'll put that revocation status on the response",
    "start": "895470",
    "end": "901370"
  },
  {
    "text": "so now we'll talk about the encrypted channel that exists between the cloud",
    "start": "903340",
    "end": "908560"
  },
  {
    "text": "front and your origin web servers so as part of the default configuration when",
    "start": "908560",
    "end": "914410"
  },
  {
    "text": "CloudFront establishes a secure channel with your web server it's using the web servers configured SSL certificate but",
    "start": "914410",
    "end": "920890"
  },
  {
    "text": "cloud front will do some of the standard checks that you'd expect to make sure that certificates valid so we check that",
    "start": "920890",
    "end": "926770"
  },
  {
    "text": "the domain name is configured in cloud front matches the certificate that we receive from whatever it is we connect",
    "start": "926770",
    "end": "932950"
  },
  {
    "text": "to we also validate that that certificates issued by a trusted CA so",
    "start": "932950",
    "end": "939460"
  },
  {
    "text": "this is important because by default you can't use a self-signed cert when for",
    "start": "939460",
    "end": "944620"
  },
  {
    "text": "your cloud front origin we use the mozilla CA list which contains that it's pretty",
    "start": "944620",
    "end": "950650"
  },
  {
    "text": "comprehensive it covers all of the reputable CAS that are out there and then finally we also verify that the",
    "start": "950650",
    "end": "956140"
  },
  {
    "text": "certificate isn't expired and if all those things are true then we can create a secure connection between the cloud",
    "start": "956140",
    "end": "961570"
  },
  {
    "text": "front servers and your origin our intent",
    "start": "961570",
    "end": "969760"
  },
  {
    "text": "with cloud front is to make SSL really easy just right out of the box",
    "start": "969760",
    "end": "974950"
  },
  {
    "text": "not a whole lot of complicated setup so when you create CloudFront distribution you're already ready to go and you have",
    "start": "974950",
    "end": "982330"
  },
  {
    "text": "a lot of options available you can choose to use non encrypted channels or encrypted channels however if you're",
    "start": "982330",
    "end": "990910"
  },
  {
    "text": "dealing with secure data and secure information you do need to make some explicit choices about how you configure",
    "start": "990910",
    "end": "996910"
  },
  {
    "text": "cloud Front and specifically you need to make intentional decisions about whether or not you should be using completely",
    "start": "996910",
    "end": "1002940"
  },
  {
    "text": "strict HTTPS or whether a mixed content mode and using someone encrypted channels is okay there are options that",
    "start": "1002940",
    "end": "1009870"
  },
  {
    "text": "are configurable that we support like the use of strict HTTPS it's possible to",
    "start": "1009870",
    "end": "1014880"
  },
  {
    "text": "to not use unencrypted channels ever and we also have a new feature that makes it",
    "start": "1014880",
    "end": "1021540"
  },
  {
    "text": "possible that if a customer ever connects to your distribution over a non secure Channel we can automatically",
    "start": "1021540",
    "end": "1026970"
  },
  {
    "text": "issue a redirect and push them over to the SSL Channel",
    "start": "1026970",
    "end": "1031790"
  },
  {
    "text": "by default when you create a cloud front distribution we generate a oh I'm not so",
    "start": "1033390",
    "end": "1042928"
  },
  {
    "text": "pretty domain name here it'll look like D one two three four five six cloud front net it's a uniquely generated",
    "start": "1042929",
    "end": "1050750"
  },
  {
    "text": "identifier that's specific to that distribution and it comes with the cloud front net cert so if you connect",
    "start": "1050750",
    "end": "1057630"
  },
  {
    "text": "directly to that name there's a cloud front down that's certain dit and you",
    "start": "1057630",
    "end": "1063150"
  },
  {
    "text": "can do SSL that way this is appropriate mostly for customers that don't mind that it's kind of an ugly domain name it",
    "start": "1063150",
    "end": "1069570"
  },
  {
    "text": "may be may be that this URLs used behind the scenes as part of a web page to load resources or it's embedded in a mobile",
    "start": "1069570",
    "end": "1076500"
  },
  {
    "text": "application so it's not something your customers see there are a lot of customers however that want to use their",
    "start": "1076500",
    "end": "1082590"
  },
  {
    "text": "domain name with cloud front and for that they need to bring their own SSL certificate and we support two different",
    "start": "1082590",
    "end": "1088080"
  },
  {
    "text": "modes of operation in that world the first makes use of a TLS extension",
    "start": "1088080",
    "end": "1093179"
  },
  {
    "text": "called S&I which basically means that the client sends along that domain name",
    "start": "1093179",
    "end": "1098490"
  },
  {
    "text": "information as part of the SSL handshake which allows cloud front servers to look up the appropriate cert and use that as",
    "start": "1098490",
    "end": "1104760"
  },
  {
    "text": "part of that that encryption negotiation the benefit of using this is that it's",
    "start": "1104760",
    "end": "1111360"
  },
  {
    "text": "totally free we don't charge extra for the use of S&I certs on top of cloud front the downside is that not all",
    "start": "1111360",
    "end": "1118410"
  },
  {
    "text": "clients support it there are some older clients out there that no longer that",
    "start": "1118410",
    "end": "1124460"
  },
  {
    "text": "like Windows XP and iu6 for example that aren't capable of sending along that",
    "start": "1124460",
    "end": "1130470"
  },
  {
    "text": "that sni information so if you if you don't have any legacy clients and this",
    "start": "1130470",
    "end": "1135660"
  },
  {
    "text": "is a really great option can save some money if you do have legacy clients that you need to support then we offer an",
    "start": "1135660",
    "end": "1142020"
  },
  {
    "text": "option that provides your distribution with dedicated IPS which means that well based on whatever the clients connecting",
    "start": "1142020",
    "end": "1149160"
  },
  {
    "text": "to we can look up the cert and serve it appropriately there is a monthly fee associated with that because we do have",
    "start": "1149160",
    "end": "1154950"
  },
  {
    "text": "to allocate from our IP pool in order to support it but again it means that you can work with any clients even legacy",
    "start": "1154950",
    "end": "1163559"
  },
  {
    "text": "ones",
    "start": "1163559",
    "end": "1165740"
  },
  {
    "text": "CloudFront also supports AWS certificate manager have any of you guys had a chance to learn about certificate",
    "start": "1171850",
    "end": "1178120"
  },
  {
    "text": "manager I see a couple of nodding heads okay I think this is actually a pretty",
    "start": "1178120",
    "end": "1183820"
  },
  {
    "text": "cool service so any old world over here if you wanted an SSL certificate you",
    "start": "1183820",
    "end": "1189940"
  },
  {
    "text": "went to one of the CAS you filled out some forms and paid a few hundred",
    "start": "1189940",
    "end": "1195580"
  },
  {
    "text": "dollars and then three to five days days later you get your SSL certificate and now you can use it in your website",
    "start": "1195580",
    "end": "1203309"
  },
  {
    "text": "Amazon AWS certificate managers intent is to stream light enough that entire process make it a lot simpler and easy",
    "start": "1204450",
    "end": "1211240"
  },
  {
    "text": "to do it's built right within the AWS management console and you can go there and create your own SSL certificates",
    "start": "1211240",
    "end": "1217929"
  },
  {
    "text": "there's no cost it's free to create SSL certificates there and they can be used",
    "start": "1217929",
    "end": "1223390"
  },
  {
    "text": "with AWS services like ELB and cloud front another really cool feature is",
    "start": "1223390",
    "end": "1229030"
  },
  {
    "text": "that it's one of its goals is to automate most of the processes around managing certificates and I think that's",
    "start": "1229030",
    "end": "1235450"
  },
  {
    "text": "particularly useful if any of you have ever had the unfortunate experience of forgetting to renew your SSL certificate",
    "start": "1235450",
    "end": "1241929"
  },
  {
    "text": "and having a lot of your traffic on your website go down as a result basically an availability impact then you might want",
    "start": "1241929",
    "end": "1248559"
  },
  {
    "text": "to look at this service because it can totally automate that process it will it will keep track of your cert expiry",
    "start": "1248559",
    "end": "1256150"
  },
  {
    "text": "dates and will automatically initiate a renewal process and can even deploy that certificate out to cloud front",
    "start": "1256150",
    "end": "1262780"
  },
  {
    "text": "automatically so you don't have to worry about a certificate expiry catching you off-guard again",
    "start": "1262780",
    "end": "1269370"
  },
  {
    "text": "so that's that lays the foundation for some of the options that you can configure to talk about the next phase",
    "start": "1272740",
    "end": "1278919"
  },
  {
    "text": "and and what kind of mix-and-match of secure versus non secure content I want to use a customer case study so Matt box",
    "start": "1278919",
    "end": "1285490"
  },
  {
    "text": "is a customer that uses cloud front to serve their mapping tile applications so",
    "start": "1285490",
    "end": "1292000"
  },
  {
    "text": "they've got online maps that are available and their customers will embed these maps into mobile applications and",
    "start": "1292000",
    "end": "1297850"
  },
  {
    "text": "web sites and overlay extra cool features like maybe help help me locate where my friends are let me see on the",
    "start": "1297850",
    "end": "1303700"
  },
  {
    "text": "map or provide me with directions and when Matt Bock started using cloud front",
    "start": "1303700",
    "end": "1310570"
  },
  {
    "text": "they knew right out of the gate that they didn't want to use our ugly distribution names they wanted to use",
    "start": "1310570",
    "end": "1316120"
  },
  {
    "text": "their own map box domain names you know as an example something something matte box com and they also know that all of",
    "start": "1316120",
    "end": "1323950"
  },
  {
    "text": "their clients are modern browsers they're modern mobile devices and modern browsers so they had the data that said",
    "start": "1323950",
    "end": "1330720"
  },
  {
    "text": "all of their clients were supporting TLS we're not worried about supporting that legacy and they opted to save a few",
    "start": "1330720",
    "end": "1337960"
  },
  {
    "text": "bucks and go with the sni option the",
    "start": "1337960",
    "end": "1345100"
  },
  {
    "text": "next decision they had to make was how much of their content do they want to encrypt excuse me and we talked about",
    "start": "1345100",
    "end": "1352809"
  },
  {
    "text": "two patterns I'm going to share two patterns with you about how you can encrypt traffic there's a notion of a",
    "start": "1352809",
    "end": "1359500"
  },
  {
    "text": "half bridge TLS termination mode and in a half bridge mode all of the customer",
    "start": "1359500",
    "end": "1365230"
  },
  {
    "text": "to cloud front channels are SSL encrypted but the cloud front back to",
    "start": "1365230",
    "end": "1371049"
  },
  {
    "text": "the origin channel is non SSL encrypted now this kind of configuration is one",
    "start": "1371049",
    "end": "1376600"
  },
  {
    "text": "that Matt box actually liked a bit because they were able to save some costs on their back-end they were able",
    "start": "1376600",
    "end": "1383020"
  },
  {
    "text": "to not have to pay the extra processing cost of negotiating and keeping track of",
    "start": "1383020",
    "end": "1388149"
  },
  {
    "text": "SSL sessions but it's important to note that this is only appropriate for content that that isn't inherently",
    "start": "1388149",
    "end": "1393960"
  },
  {
    "text": "secure it doesn't have any necessary need for encryption and transit so for example it's okay for their website",
    "start": "1393960",
    "end": "1402460"
  },
  {
    "text": "image logo to go over an unencrypted channel it's point and then the HTTP on the front",
    "start": "1402460",
    "end": "1410090"
  },
  {
    "text": "really just serves to make sure that the client doesn't have a mixed mode content in their browser right but for other",
    "start": "1410090",
    "end": "1419210"
  },
  {
    "text": "content stuff that does contain personal customer information or data that is sensitive in some way it needs to be",
    "start": "1419210",
    "end": "1425720"
  },
  {
    "text": "encrypted all the way back we call this a full bridge mode and in cloud front when you're setting up your origin you",
    "start": "1425720",
    "end": "1431870"
  },
  {
    "text": "configure a full bridge mode one of two ways there's an option that says match",
    "start": "1431870",
    "end": "1438049"
  },
  {
    "text": "viewer and what that means is that when you when cloud front makes an origin connection it's just going to mirror",
    "start": "1438049",
    "end": "1444440"
  },
  {
    "text": "whatever the viewer came in at so if the viewer connected with HTTP it'll make a non-secure connection back to the origin",
    "start": "1444440",
    "end": "1449990"
  },
  {
    "text": "if they came in with HTTP it'll make the secure connection back to the origin if you pair that with something that",
    "start": "1449990",
    "end": "1455899"
  },
  {
    "text": "restricts to HTTP only on the front end then you will always be in a full bridge",
    "start": "1455899",
    "end": "1460970"
  },
  {
    "text": "mode we have another option we added just this year called HTTPS only which",
    "start": "1460970",
    "end": "1467120"
  },
  {
    "text": "means regardless of how the viewer connected I always want to use a secure connection back to my origin and map box",
    "start": "1467120",
    "end": "1478460"
  },
  {
    "text": "runs in both modes as a way to as a cost control measure primarily they have a",
    "start": "1478460",
    "end": "1484669"
  },
  {
    "text": "couple origins set up one that's configured to support the the non",
    "start": "1484669",
    "end": "1490130"
  },
  {
    "text": "sensitive data the image and some of the static content that doesn't have any customer information and then the rest",
    "start": "1490130",
    "end": "1495950"
  },
  {
    "text": "of their site is running in a full bridge mode where everything is encrypted end-to-end I want to take a",
    "start": "1495950",
    "end": "1504500"
  },
  {
    "text": "brief switch over to the demos and I'll",
    "start": "1504500",
    "end": "1509630"
  },
  {
    "text": "just walk you through some of the configuration settings we talked about just to hopefully bring it all together because we covered a lot of area so the",
    "start": "1509630",
    "end": "1518240"
  },
  {
    "text": "first stop our origin configurations these are these control all the security",
    "start": "1518240",
    "end": "1524659"
  },
  {
    "text": "parameters from cloud front back to the origin location so anytime we don't have the content in cache or for non",
    "start": "1524659",
    "end": "1530720"
  },
  {
    "text": "cacheable content will use these configuration options to connect your web servers",
    "start": "1530720",
    "end": "1536740"
  },
  {
    "text": "so going into this custom origin example I'll call out that these are the origin",
    "start": "1538620",
    "end": "1545100"
  },
  {
    "text": "protocol policies I mentioned before and you have the option to do the match viewer option which we match whoever",
    "start": "1545100",
    "end": "1551460"
  },
  {
    "text": "however the viewer connects or if you want to guarantee that you're always using SSL there's the HTTPS option here",
    "start": "1551460",
    "end": "1557360"
  },
  {
    "text": "while we're in here you can also see that we support the ability to restrict",
    "start": "1557360",
    "end": "1562860"
  },
  {
    "text": "the SSL protocols that we'll use to talk to your origin so if you're dealing with",
    "start": "1562860",
    "end": "1568919"
  },
  {
    "text": "the bleeding edge of sensitive and security data secure data then and your origin supports the the very latest klx",
    "start": "1568919",
    "end": "1576059"
  },
  {
    "text": "technologies it can actually opt in and only use TLS 1.2 and nothing older than",
    "start": "1576059",
    "end": "1581580"
  },
  {
    "text": "that in order to connect back to your origin",
    "start": "1581580",
    "end": "1585169"
  },
  {
    "text": "and then much of the many of the SSL configuration options between CloudFront and the viewer are controlled by our",
    "start": "1588720",
    "end": "1595440"
  },
  {
    "text": "cache behavior options now these are these these cache behaviors are created by path pattern matches so you can say",
    "start": "1595440",
    "end": "1604800"
  },
  {
    "text": "for this section of my website anything that matches this URL use this set of options or default to using another set",
    "start": "1604800",
    "end": "1612960"
  },
  {
    "text": "of options and this is where you control how the the front-end policies work with the customer you can support a mode here",
    "start": "1612960",
    "end": "1621000"
  },
  {
    "text": "where it's HTTP only in which case if a customer view were ever tries to connect on to not HTTP I'll just get an error",
    "start": "1621000",
    "end": "1627050"
  },
  {
    "text": "you can support both HTTP and HTTPS or",
    "start": "1627050",
    "end": "1632300"
  },
  {
    "text": "what's become a what a lot more popular is the the redirect option so if a customer connects on HTTP they'll get",
    "start": "1632300",
    "end": "1639210"
  },
  {
    "text": "redirected with a standard HTTP redirect over to the secure channel alright let's",
    "start": "1639210",
    "end": "1644280"
  },
  {
    "text": "go back to the slides so that takes care",
    "start": "1644280",
    "end": "1649680"
  },
  {
    "text": "of our SSL TLS configuration options but what if you're serving content that you",
    "start": "1649680",
    "end": "1656760"
  },
  {
    "text": "want to restrict access to through cloud front we have a couple of features that that will help with this there's one set",
    "start": "1656760",
    "end": "1663390"
  },
  {
    "text": "of features that's geared around authorizing access to specific files and another set of features in AWS laugh",
    "start": "1663390",
    "end": "1670080"
  },
  {
    "text": "which is kind of geared toward identifying a blocking malicious request that may be coming at your website or",
    "start": "1670080",
    "end": "1675750"
  },
  {
    "text": "your content well first talk about securing content to files a common use",
    "start": "1675750",
    "end": "1682800"
  },
  {
    "text": "cases here are customers that may have video content or pay for video content or pay for document downloads academic",
    "start": "1682800",
    "end": "1692340"
  },
  {
    "text": "papers so on and so forth and for those we we have a feature called private content and private content allows you",
    "start": "1692340",
    "end": "1699120"
  },
  {
    "text": "to create these little policy files that are signed that that give CloudFront",
    "start": "1699120",
    "end": "1705600"
  },
  {
    "text": "some instructions about whether to allow or not allow a particular viewer request to access a file the original version",
    "start": "1705600",
    "end": "1713130"
  },
  {
    "text": "used something called signed URLs where that policy and signature was attached as a query string parameter and it",
    "start": "1713130",
    "end": "1719580"
  },
  {
    "text": "worked pretty well for individual files you can generate these URLs that had the policy file attached and then customers would call in to us",
    "start": "1719580",
    "end": "1725890"
  },
  {
    "text": "it also supports our legacy rtmp video streaming service but we found was that",
    "start": "1725890",
    "end": "1731830"
  },
  {
    "text": "many customers are starting to migrate toward more modern web video streaming protocols that uses segmented files so",
    "start": "1731830",
    "end": "1738670"
  },
  {
    "text": "instead of serving one giant big file through one URL a file gets chopped up into a hundred little chunks each with",
    "start": "1738670",
    "end": "1745690"
  },
  {
    "text": "their own URL and customers were telling us is a real pain in the butt to have to try to figure out how to inject this",
    "start": "1745690",
    "end": "1751870"
  },
  {
    "text": "query string parameter to every single one of those file calls and so we built a sine cookie version so now you have",
    "start": "1751870",
    "end": "1758260"
  },
  {
    "text": "the option instead of attaching a query string parameter with the policy you can set a cookie in your viewers browser",
    "start": "1758260",
    "end": "1764200"
  },
  {
    "text": "that specifies what they're allowed to access and any subsequent requests to",
    "start": "1764200",
    "end": "1769900"
  },
  {
    "text": "CloudFront will include that cookie detail and we can use it to validate the request whew that is not readable I'll",
    "start": "1769900",
    "end": "1782230"
  },
  {
    "text": "walk you through it though so this is this is a snippet of the JSON policy file that I was talking about one of the",
    "start": "1782230",
    "end": "1790179"
  },
  {
    "text": "first lines is something called that's supposed to say resource and it's the",
    "start": "1790179",
    "end": "1796150"
  },
  {
    "text": "URL or a wild-card URL of the files that you want to define the policy for so it",
    "start": "1796150",
    "end": "1804220"
  },
  {
    "text": "could be slash all my video segments star and then we've got a condition a",
    "start": "1804220",
    "end": "1810190"
  },
  {
    "text": "set of conditions here that specify a",
    "start": "1810190",
    "end": "1815730"
  },
  {
    "text": "date less than and a date greater than which basically means you can create a very constrained time range that says",
    "start": "1815730",
    "end": "1821679"
  },
  {
    "text": "this is the time window that the content is accessible and then the last section",
    "start": "1821679",
    "end": "1827200"
  },
  {
    "text": "here is the IP address so you could set this to the source IP or range of IPs for the customer that you're authorizing",
    "start": "1827200",
    "end": "1834010"
  },
  {
    "text": "to download that give it a content and CloudFront we'll look at this file read it and follow the instructions you tell it to a lot of times customers will make",
    "start": "1834010",
    "end": "1843010"
  },
  {
    "text": "use of that API the API can IP condition as a way to restrict access to an under",
    "start": "1843010",
    "end": "1850630"
  },
  {
    "text": "development web site or API so they would put their development teams IP address range",
    "start": "1850630",
    "end": "1856570"
  },
  {
    "text": "in that policy file and then restrict access to to just that team until the",
    "start": "1856570",
    "end": "1862059"
  },
  {
    "text": "site's ready to go public and then they can remove the private content policy file but this didn't cover all use cases",
    "start": "1862059",
    "end": "1872699"
  },
  {
    "text": "we had customers that would also tell us like there's a lot of bad guys on the internet that are causing trouble for me",
    "start": "1872699",
    "end": "1878889"
  },
  {
    "text": "they're trying to explain my website with sequel injection or what's cross-site scripting or they're just",
    "start": "1878889",
    "end": "1884559"
  },
  {
    "text": "being bad behaved they may be like trying to take all my content and they're they're using too much too many",
    "start": "1884559",
    "end": "1890589"
  },
  {
    "text": "of my resources and I need tools to be able to identify and block them and for that we created and launched the AWS",
    "start": "1890589",
    "end": "1896259"
  },
  {
    "text": "laugh which integrates seamlessly with cloud front the software runs actually",
    "start": "1896259",
    "end": "1903009"
  },
  {
    "text": "on the same hardware that cloud front uses to serve the content so that we minimize impact and a lot of cases we're",
    "start": "1903009",
    "end": "1909729"
  },
  {
    "text": "able to do this processing in less than a millisecond and it gives customers a",
    "start": "1909729",
    "end": "1915099"
  },
  {
    "text": "set of very flexible rules to define additional criteria to allow or block web requests based on parameters that",
    "start": "1915099",
    "end": "1923349"
  },
  {
    "text": "get passed in so you could say well I know that there's a user agent out there that's just bad news it's conveniently",
    "start": "1923349",
    "end": "1929979"
  },
  {
    "text": "the bad guys to find their user agent string is bad bot and we can use Raph to find that and block it that's just one",
    "start": "1929979",
    "end": "1936579"
  },
  {
    "text": "example",
    "start": "1936579",
    "end": "1938609"
  },
  {
    "text": "and mapbox has need for this exact use case remember that they're serving up a bunch of mapping tiles but their utility",
    "start": "1942530",
    "end": "1950990"
  },
  {
    "text": "is really designed for an individual user that's looking at you know in Chicago directions to their favorite",
    "start": "1950990",
    "end": "1956750"
  },
  {
    "text": "restaurant they're just gonna get a smaller set of tiles it's not designed for bulk downloads for some other person",
    "start": "1956750",
    "end": "1963800"
  },
  {
    "text": "to take those Maps and post them up on some other website but that happens occasionally and when it does matte box",
    "start": "1963800",
    "end": "1972080"
  },
  {
    "text": "sees that in the log data they can call out specific bad behaviors by how they're interacting with their website",
    "start": "1972080",
    "end": "1977390"
  },
  {
    "text": "and just doing some quick analysis on there and then you can usually identify either a source IP address or some",
    "start": "1977390",
    "end": "1984650"
  },
  {
    "text": "signature in the request headers that makes it clear that there's there's a bot out there that needs to be blocked",
    "start": "1984650",
    "end": "1990590"
  },
  {
    "text": "and now with the AWS laughs they can configure a rule to block based on that IP address or some condition in the HTTP",
    "start": "1990590",
    "end": "1998240"
  },
  {
    "text": "headers so we took this idea and built",
    "start": "1998240",
    "end": "2005560"
  },
  {
    "text": "something more around that so like that's kind of interesting can we do a little bit better than the manual process can we",
    "start": "2005560",
    "end": "2011590"
  },
  {
    "text": "try to automate some of this and so some of our essays and engineers work together to create a bad lot blocking",
    "start": "2011590",
    "end": "2019090"
  },
  {
    "text": "system so for this whole and end system to work we need a few things for me to",
    "start": "2019090",
    "end": "2024340"
  },
  {
    "text": "be us laughs first we need an IP set this IP set will contain the list of IP",
    "start": "2024340",
    "end": "2029620"
  },
  {
    "text": "addresses that identify bad BOTS then we'll use a rule together with the web",
    "start": "2029620",
    "end": "2035410"
  },
  {
    "text": "Akal to specify that if you ever see a request coming from this IP address then",
    "start": "2035410",
    "end": "2040450"
  },
  {
    "text": "block it so that's the first part of the equation the blocking part but before we can do the blocking we need some method",
    "start": "2040450",
    "end": "2046840"
  },
  {
    "text": "to detect those bad BOTS and then we need another bit of magic to take that",
    "start": "2046840",
    "end": "2053050"
  },
  {
    "text": "detected IP address and update the EWS laughs so to do the detection part we",
    "start": "2053050",
    "end": "2059770"
  },
  {
    "text": "made use of a standard standard policy file that robots are supposed to use and",
    "start": "2059770",
    "end": "2065500"
  },
  {
    "text": "follow the robots.txt this is a file you can put in the root directory of your website which gives instructions to well",
    "start": "2065500",
    "end": "2072730"
  },
  {
    "text": "behaving bots about which parts of their website they should index in which part they shouldn't and how vigorously they",
    "start": "2072730",
    "end": "2078370"
  },
  {
    "text": "should do it and in our example we created a disallow that said don't ever look at this URL this honeypot URL and",
    "start": "2078370",
    "end": "2086020"
  },
  {
    "text": "we paired that with a bit of a trap for BOTS so on the main page we added a",
    "start": "2086020",
    "end": "2091600"
  },
  {
    "text": "hidden link that references that same honeypot URL now good bots are gonna",
    "start": "2091600",
    "end": "2096820"
  },
  {
    "text": "look at this this file and they're never going to follow this link",
    "start": "2096820",
    "end": "2102010"
  },
  {
    "text": "but bots that aren't working well or aren't obeying the robots.txt policy may",
    "start": "2102010",
    "end": "2108570"
  },
  {
    "text": "and we can use that as a signal for some bad behavior so once we have that then",
    "start": "2108570",
    "end": "2116770"
  },
  {
    "text": "what we've actually implemented was a mechanism that uses the API gateway as a",
    "start": "2116770",
    "end": "2122320"
  },
  {
    "text": "listener for the honeypot URL and cloud",
    "start": "2122320",
    "end": "2127630"
  },
  {
    "text": "fronts configured to make a call into that and that API gateway is then tied to a lambda script the länder script",
    "start": "2127630",
    "end": "2133480"
  },
  {
    "text": "looks at the web request grabs the IP address and then will make a call out to the AWS wife ooh I can I'll show you",
    "start": "2133480",
    "end": "2143890"
  },
  {
    "text": "just give you a quick overview and the demos and show you how some of this gets stitched together and then I've got a",
    "start": "2143890",
    "end": "2150460"
  },
  {
    "text": "live demo for you yeah",
    "start": "2150460",
    "end": "2154589"
  },
  {
    "text": "first we'll do just a really quick breeze through of my API gateway configuration by the way I just I'm",
    "start": "2159210",
    "end": "2167079"
  },
  {
    "text": "going quickly through this because this is available at cloud formation scripts and a complete walkthrough is available",
    "start": "2167079",
    "end": "2172780"
  },
  {
    "text": "if you're interested I can you'll see some links later on so you'll see my API",
    "start": "2172780",
    "end": "2179380"
  },
  {
    "text": "gateway is configured with our honeypot listener and if we look at the get verb then it's hooked into a lambda function",
    "start": "2179380",
    "end": "2186550"
  },
  {
    "text": "and that lambda function contains all the magic to pull out the IP address and make a call to the AWS laugh",
    "start": "2186550",
    "end": "2192730"
  },
  {
    "text": "configuration and then on the cloud",
    "start": "2192730",
    "end": "2198790"
  },
  {
    "text": "front side I need a way to I need a way",
    "start": "2198790",
    "end": "2206859"
  },
  {
    "text": "to take all of the requests to slash honeypot and make sure they go back into my API gateway and to do that first I'll",
    "start": "2206859",
    "end": "2214119"
  },
  {
    "text": "need an Origin configuration for my API gateway which is here and then I need a",
    "start": "2214119",
    "end": "2220810"
  },
  {
    "text": "behavior that links that URL this last honeypot URL and routes it to my API",
    "start": "2220810",
    "end": "2227470"
  },
  {
    "text": "gateway and so that's the that's the stitching that works together and then",
    "start": "2227470",
    "end": "2232480"
  },
  {
    "text": "in practice the way it works is I've got a quick test so this this quacky nature",
    "start": "2232480",
    "end": "2238900"
  },
  {
    "text": "page was set up to show a couple of working examples about how to configure the AWS laugh and that bad bot trapping",
    "start": "2238900",
    "end": "2246970"
  },
  {
    "text": "example is set up right here so if we click on this test procedure then I've",
    "start": "2246970",
    "end": "2255310"
  },
  {
    "text": "just gone to the honeypot directory it just logged my IP address this is just",
    "start": "2255310",
    "end": "2261430"
  },
  {
    "text": "kind of Diagnostics information for purposes of the demo and behind the scenes it's triggered that lambda script",
    "start": "2261430",
    "end": "2266500"
  },
  {
    "text": "it's updating EWS laughs and now if I go try to go back to the website",
    "start": "2266500",
    "end": "2272880"
  },
  {
    "text": "there is there's a little bit of latency sometimes in that update process usually",
    "start": "2276310",
    "end": "2282349"
  },
  {
    "text": "updating EWS laughs goes worldwide and right around a minute or two minutes a",
    "start": "2282349",
    "end": "2295089"
  },
  {
    "text": "case of tinnitus",
    "start": "2295089",
    "end": "2298690"
  },
  {
    "text": "okay well I'm not sure what the delay is",
    "start": "2301640",
    "end": "2310230"
  },
  {
    "text": "there but we'll move on okay let's switch over to so that takes care of the",
    "start": "2310230",
    "end": "2320220"
  },
  {
    "text": "services security now let's talk about some of the applications security these are the things that you need to configure in your origin it includes",
    "start": "2320220",
    "end": "2329250"
  },
  {
    "text": "setting up the proper security channels for configuring environment like I am policies and also setting up your origin",
    "start": "2329250",
    "end": "2336120"
  },
  {
    "text": "and making sure it's configured with following the best security best practices so first thing to cover is",
    "start": "2336120",
    "end": "2344370"
  },
  {
    "text": "that even though you may have set up your CloudFront distribution properly you've got your dynamic content configuration you got your AWS laugh all",
    "start": "2344370",
    "end": "2351360"
  },
  {
    "text": "that's for naught if customers just go around cloud front if they somehow would discover your origins URL information",
    "start": "2351360",
    "end": "2357270"
  },
  {
    "text": "they can go directly to it there are a few ways that you can prevent that access if you're using s3 we have a",
    "start": "2357270",
    "end": "2365310"
  },
  {
    "text": "built-in feature called origin access identity which allows you to generate an identifier using the AWS console and",
    "start": "2365310",
    "end": "2371550"
  },
  {
    "text": "associate that with specific CloudFront distributions and from there you can use that identity to configure permissions",
    "start": "2371550",
    "end": "2377640"
  },
  {
    "text": "on your s3 bucket so you can give read-only access only to that identity",
    "start": "2377640",
    "end": "2383610"
  },
  {
    "text": "and subsequently to cloud front and to no one else that'll prevent any direct access to that bucket for custom origins",
    "start": "2383610",
    "end": "2390960"
  },
  {
    "text": "for websites or api's we have two different options for securing access",
    "start": "2390960",
    "end": "2396480"
  },
  {
    "text": "first you can block by IP address this",
    "start": "2396480",
    "end": "2401910"
  },
  {
    "text": "is the example of the s3 bucket so first is the white listing of an IP range so all of the cloud front server IP ranges",
    "start": "2401910",
    "end": "2409140"
  },
  {
    "text": "are published and updated well before we put them into production they're published to a JSON file and an s3",
    "start": "2409140",
    "end": "2415440"
  },
  {
    "text": "bucket and customers use that file to configure firewall rules or in the case of AWS security groups that just limit",
    "start": "2415440",
    "end": "2423690"
  },
  {
    "text": "access to those specific set of IP addresses so doing that will ensure that",
    "start": "2423690",
    "end": "2430110"
  },
  {
    "text": "only CloudFront IP addresses can connect to your ec2 or elby's but we had some customers that that",
    "start": "2430110",
    "end": "2437319"
  },
  {
    "text": "thought that was good but they wanted something better they were worried about the potential for a malicious seizure to",
    "start": "2437319",
    "end": "2443410"
  },
  {
    "text": "create their own CloudFront distribution and use that as a way to get directly to their origin so we added a new feature",
    "start": "2443410",
    "end": "2450450"
  },
  {
    "text": "to allow customers to whitelist using a pre-shared secret there's now a new",
    "start": "2450450",
    "end": "2456309"
  },
  {
    "text": "configuration option in Origins that lets you inject a header before CloudFront makes a request your origin",
    "start": "2456309",
    "end": "2462119"
  },
  {
    "text": "and now customers can put a header in there that says my secret key and and",
    "start": "2462119",
    "end": "2467890"
  },
  {
    "text": "then configure their web servers on the other side to look for that header and look for that key and only allow",
    "start": "2467890",
    "end": "2474069"
  },
  {
    "text": "requests that have that so if anybody comes around cloud front and they don't know about that pretty shirt secret and they're not ejecting the header you can",
    "start": "2474069",
    "end": "2480430"
  },
  {
    "text": "just block the request immediately you know they're trying to bypass cloud front then we get our protection there",
    "start": "2480430",
    "end": "2488130"
  },
  {
    "text": "for those that are looking for a nice quick way to get some origin shield",
    "start": "2488130",
    "end": "2493420"
  },
  {
    "text": "protection the IP method actually we published some Lander scripts to make this pretty easy they're available on",
    "start": "2493420",
    "end": "2500859"
  },
  {
    "text": "our AWS lab site and the lamda script just monitors for changes to that published file and is linked to the",
    "start": "2500859",
    "end": "2508269"
  },
  {
    "text": "security groups you specify and that way if we whenever CloudFront makes an update and adds a new set of ranges",
    "start": "2508269",
    "end": "2513640"
  },
  {
    "text": "it'll automatically trigger that lamda and update all of your security groups so you don't really have to mess with it",
    "start": "2513640",
    "end": "2519190"
  },
  {
    "text": "and you can get up and running with origin shield right away",
    "start": "2519190",
    "end": "2524880"
  },
  {
    "text": "so when you've configured cloud front if",
    "start": "2527769",
    "end": "2534049"
  },
  {
    "text": "you're relying on cloud front for a lot of these important security policies like private content or SSL",
    "start": "2534049",
    "end": "2539180"
  },
  {
    "text": "configuration it's also important to remember to limit access to who has control to make those modifications and",
    "start": "2539180",
    "end": "2545420"
  },
  {
    "text": "use iam policies in order to do that so",
    "start": "2545420",
    "end": "2554239"
  },
  {
    "text": "for instance if you have a operator on your team that may be doing the publish operations on your content management",
    "start": "2554239",
    "end": "2560299"
  },
  {
    "text": "service that's updating and refreshing your marketing page you may want to give them permissions to do in validations",
    "start": "2560299",
    "end": "2565749"
  },
  {
    "text": "but they shouldn't necessarily have permissions to make configuration changes on the distribution itself and",
    "start": "2565749",
    "end": "2571579"
  },
  {
    "text": "the ioan policies allow you to do just that",
    "start": "2571579",
    "end": "2576009"
  },
  {
    "text": "when it comes to the origin your itself there are things that you need to do on your website whether you're using ELB or",
    "start": "2579109",
    "end": "2584449"
  },
  {
    "text": "your own direct web servers so here's a few things for you to consider I already",
    "start": "2584449",
    "end": "2591769"
  },
  {
    "text": "showed you the configuration option on the cloud front side to enable TLS 1.1 or 1.2 it's strongly recommended that",
    "start": "2591769",
    "end": "2598099"
  },
  {
    "text": "you stay on the most recent version of TLS these things are kind of always a moving target but that means you have to",
    "start": "2598099",
    "end": "2604549"
  },
  {
    "text": "upgrade your web servers to support and keep up with those latest versions if",
    "start": "2604549",
    "end": "2609799"
  },
  {
    "text": "you do that then you can continually update cloud front to make sure it's only allowing those highest versions to",
    "start": "2609799",
    "end": "2616009"
  },
  {
    "text": "connect back to your origin we also recommend if you're in doubt",
    "start": "2616009",
    "end": "2621079"
  },
  {
    "text": "about whether or not you're storing sensitive content or you know for sure then just run in a fully British mode",
    "start": "2621079",
    "end": "2626089"
  },
  {
    "text": "always use HTTPS make sure you configured your origin to support SSL negotiation and that you're using a",
    "start": "2626089",
    "end": "2632119"
  },
  {
    "text": "valid external cert that is following the best practice including the use of",
    "start": "2632119",
    "end": "2638799"
  },
  {
    "text": "sha-256 make sure your certificates are making use of that standard we've already covered the restricting access",
    "start": "2638799",
    "end": "2645289"
  },
  {
    "text": "to security groups use or using a shared secret and again this will make sure that all the requests funneled through cloud front and don't go directly to",
    "start": "2645289",
    "end": "2651529"
  },
  {
    "text": "your origin but this this this does require some setup on your web server",
    "start": "2651529",
    "end": "2657049"
  },
  {
    "text": "side in order to actually enforce that policy",
    "start": "2657049",
    "end": "2661359"
  },
  {
    "text": "in order to support TLS between CloudFront and in origin you need to configure an SSL certificate if you're",
    "start": "2664079",
    "end": "2671609"
  },
  {
    "text": "using ELB that becomes an easier process you can leverage ACM to generate a cert",
    "start": "2671609",
    "end": "2677339"
  },
  {
    "text": "for free and then bind that to your ELB and there you go you're all set up to do",
    "start": "2677339",
    "end": "2682619"
  },
  {
    "text": "fully bridged secure communication between your viewers and your origin",
    "start": "2682619",
    "end": "2688400"
  },
  {
    "text": "there's also some great predefined policies that you should make use of these will configure the proper ciphers",
    "start": "2688400",
    "end": "2694319"
  },
  {
    "text": "and TLS version for your ELB and finally something to consider this again is",
    "start": "2694319",
    "end": "2699419"
  },
  {
    "text": "another thing that you'd have to build into your web server itself but there's a standard out there modern browsers support this HSTs header this is an",
    "start": "2699419",
    "end": "2708059"
  },
  {
    "text": "extra bit of security safeguard if you're a fully bridged mode you should always be using SSL for all",
    "start": "2708059",
    "end": "2714569"
  },
  {
    "text": "communication you can tell modern browsers that with this header and they will enforce it as well so if anything",
    "start": "2714569",
    "end": "2721049"
  },
  {
    "text": "any client-side code manages to get in there and tries to make a non secure",
    "start": "2721049",
    "end": "2726449"
  },
  {
    "text": "communication channel to another site or to your own then the browser will",
    "start": "2726449",
    "end": "2731549"
  },
  {
    "text": "enforce this policy and prevent it and again this is something you need to configure to inject on your server side",
    "start": "2731549",
    "end": "2739699"
  },
  {
    "text": "with your properly configured I am policies the other best practice is to",
    "start": "2743950",
    "end": "2750310"
  },
  {
    "text": "make sure you're auditing not access and you can use cloud trail to do that so cloud trail supports the cloud for an",
    "start": "2750310",
    "end": "2758440"
  },
  {
    "text": "API so anytime anybody makes a creating validation or create distribution or update distribution call you can",
    "start": "2758440",
    "end": "2763869"
  },
  {
    "text": "configure cloud trail to log all of that tell you which user account which I am user account made that change and log it",
    "start": "2763869",
    "end": "2769900"
  },
  {
    "text": "all to s3 for your analysis later that way if anything ever happened if one of your security policies on cloud front",
    "start": "2769900",
    "end": "2776050"
  },
  {
    "text": "was reverted or misconfigured you have you have that cloud trail to figure out exactly what happened and whether it was",
    "start": "2776050",
    "end": "2782050"
  },
  {
    "text": "accidental or malicious and finally if",
    "start": "2782050",
    "end": "2787839"
  },
  {
    "text": "your follow all those security best practices there's a tool out there that you can use to continually monitor your",
    "start": "2787839",
    "end": "2794650"
  },
  {
    "text": "website configuration called SSL labs as of the first time we gave this talk last",
    "start": "2794650",
    "end": "2800349"
  },
  {
    "text": "year when you follow all those security best practices then you'll get an A+ rating what's also great about this tool",
    "start": "2800349",
    "end": "2807609"
  },
  {
    "text": "it's a great double check and audit for the configuration options it'll give you a lot of details about why you got a",
    "start": "2807609",
    "end": "2813670"
  },
  {
    "text": "particular rating okay and with that so",
    "start": "2813670",
    "end": "2819180"
  },
  {
    "text": "in closing I'll say that cloud front again is built and designed to work in",
    "start": "2819180",
    "end": "2824410"
  },
  {
    "text": "front of any website or API and it's always been it built for improving",
    "start": "2824410",
    "end": "2830589"
  },
  {
    "text": "availability and performance of your website but now I think you've seen that there are a lot of ways that you can leverage cloud front also to uplevel the",
    "start": "2830589",
    "end": "2837579"
  },
  {
    "text": "security of your websites and api's thank you",
    "start": "2837579",
    "end": "2843180"
  }
]