[
  {
    "start": "0",
    "end": "16000"
  },
  {
    "text": "hello in this video we will look at",
    "start": "1040",
    "end": "3959"
  },
  {
    "text": "Amazon cloudwatch natural language query",
    "start": "3959",
    "end": "7639"
  },
  {
    "text": "generation powered by generative",
    "start": "7639",
    "end": "11080"
  },
  {
    "text": "AI this capability is currently in",
    "start": "11080",
    "end": "14000"
  },
  {
    "text": "preview in the North Virginia Oregon",
    "start": "14000",
    "end": "16600"
  },
  {
    "start": "16000",
    "end": "49000"
  },
  {
    "text": "regions it supports cloudwatch log",
    "start": "16600",
    "end": "19320"
  },
  {
    "text": "insights and Metric insights it allows",
    "start": "19320",
    "end": "22920"
  },
  {
    "text": "you to generate quees by asking",
    "start": "22920",
    "end": "25720"
  },
  {
    "text": "questions in natural language about your",
    "start": "25720",
    "end": "28199"
  },
  {
    "text": "data to help you easily get started you",
    "start": "28199",
    "end": "31960"
  },
  {
    "text": "can also refine existing queries for",
    "start": "31960",
    "end": "34600"
  },
  {
    "text": "Rapid guided",
    "start": "34600",
    "end": "37280"
  },
  {
    "text": "iteration you also get an intuitive",
    "start": "37280",
    "end": "40079"
  },
  {
    "text": "step-by-step query explanation to help",
    "start": "40079",
    "end": "43079"
  },
  {
    "text": "you learn cloudwatch query",
    "start": "43079",
    "end": "45440"
  },
  {
    "text": "languages let's see it in",
    "start": "45440",
    "end": "48239"
  },
  {
    "text": "action I am now in my cloudwatch log",
    "start": "48239",
    "end": "51840"
  },
  {
    "start": "49000",
    "end": "173000"
  },
  {
    "text": "insights console I've selected the VPC",
    "start": "51840",
    "end": "55320"
  },
  {
    "text": "flow logs log group and I have the",
    "start": "55320",
    "end": "59079"
  },
  {
    "text": "option to select queee",
    "start": "59079",
    "end": "62039"
  },
  {
    "text": "generator I'm just going to change the",
    "start": "62039",
    "end": "64720"
  },
  {
    "text": "preferences here to include the",
    "start": "64720",
    "end": "67119"
  },
  {
    "text": "explanation of the generated quy and I'm",
    "start": "67119",
    "end": "70479"
  },
  {
    "text": "going to ask quy generator to show me",
    "start": "70479",
    "end": "74240"
  },
  {
    "text": "the Enis and sld them by the most",
    "start": "74240",
    "end": "77479"
  },
  {
    "text": "frequently used one",
    "start": "77479",
    "end": "80400"
  },
  {
    "text": "first and here is the query that it has",
    "start": "80400",
    "end": "85600"
  },
  {
    "text": "generated so let's run this",
    "start": "85600",
    "end": "88840"
  },
  {
    "text": "quey",
    "start": "88840",
    "end": "91840"
  },
  {
    "text": "and here are those Eis coming up",
    "start": "92200",
    "end": "96439"
  },
  {
    "text": "including the count for",
    "start": "96439",
    "end": "100560"
  },
  {
    "text": "them I can also update existing qu so",
    "start": "101280",
    "end": "105200"
  },
  {
    "text": "I'm just going to use one of the sample",
    "start": "105200",
    "end": "107040"
  },
  {
    "text": "queries from here let's select this",
    "start": "107040",
    "end": "110920"
  },
  {
    "text": "one and let's just say I just want to",
    "start": "110920",
    "end": "113880"
  },
  {
    "text": "add a time",
    "start": "113880",
    "end": "116758"
  },
  {
    "text": "stamp and let's select update query",
    "start": "118280",
    "end": "123118"
  },
  {
    "text": "here here you go the quby has",
    "start": "127479",
    "end": "132640"
  },
  {
    "text": "updated I can also use Query generator",
    "start": "133319",
    "end": "137160"
  },
  {
    "text": "in the metric insights",
    "start": "137160",
    "end": "140200"
  },
  {
    "text": "queries here is one that I generated",
    "start": "140200",
    "end": "143680"
  },
  {
    "text": "earlier so I asked to show me the",
    "start": "143680",
    "end": "146959"
  },
  {
    "text": "busiest log group based on incoming data",
    "start": "146959",
    "end": "149400"
  },
  {
    "text": "volume",
    "start": "149400",
    "end": "151080"
  },
  {
    "text": "here is the quey that was",
    "start": "151080",
    "end": "153959"
  },
  {
    "text": "generated and here is the output of this",
    "start": "153959",
    "end": "158560"
  },
  {
    "text": "quey please don't forget to check out",
    "start": "158560",
    "end": "161200"
  },
  {
    "text": "additional",
    "start": "161200",
    "end": "162560"
  },
  {
    "text": "documentation for this capability and",
    "start": "162560",
    "end": "165879"
  },
  {
    "text": "thank you for",
    "start": "165879",
    "end": "168400"
  },
  {
    "text": "watching",
    "start": "172879",
    "end": "175879"
  }
]