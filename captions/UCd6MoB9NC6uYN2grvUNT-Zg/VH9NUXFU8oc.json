[
  {
    "text": "all right well hello everyone thanks for coming we'll try to keep that echo down",
    "start": "1310",
    "end": "6509"
  },
  {
    "text": "a little bit so my name is Brian Kraus and I'm a solutions engineer with github",
    "start": "6509",
    "end": "13799"
  },
  {
    "text": "may have heard of github how many people use github either professionally or personally awesome I know you do Toby",
    "start": "13799",
    "end": "22590"
  },
  {
    "text": "all right so github just recently celebrated our 10th anniversary as an",
    "start": "22590",
    "end": "28109"
  },
  {
    "text": "independent company and as we do every year around this time we release what we call the state of the october's report I",
    "start": "28109",
    "end": "34920"
  },
  {
    "text": "thought it might be fun to just kind of bring everyone up to speed on exactly how big github in the world of",
    "start": "34920",
    "end": "40739"
  },
  {
    "text": "open-source software has become over that decade so this year we noted 1.1",
    "start": "40739",
    "end": "48090"
  },
  {
    "text": "billion contributions to get up this year whether that's they see use pull request comments or commit 1.1 billion",
    "start": "48090",
    "end": "54960"
  },
  {
    "text": "from a population of over 31 million developers on the platform and this has",
    "start": "54960",
    "end": "60420"
  },
  {
    "text": "been growing by leaps and bounds every year since since we started we crossed the 100 million repository milestone at",
    "start": "60420",
    "end": "68460"
  },
  {
    "text": "some point in the last couple of months we are now north of 100 million individual repositories of source code",
    "start": "68460",
    "end": "74310"
  },
  {
    "text": "and 8 million new developers joining the platform in the last year which is",
    "start": "74310",
    "end": "80520"
  },
  {
    "text": "actually more developers than joined github over the first six years of the platform's existence so growth in every",
    "start": "80520",
    "end": "87990"
  },
  {
    "text": "respect in terms of the number of users the people participating the number of repositories the amount of source code",
    "start": "87990",
    "end": "94979"
  },
  {
    "text": "and knowledge on the github platform is growing really almost exponentially 80%",
    "start": "94979",
    "end": "101130"
  },
  {
    "text": "of our users are from outside the United States and we see this trend continuing in our growth patterns as well so we",
    "start": "101130",
    "end": "106799"
  },
  {
    "text": "have begun to do a lot of work in places like Latin America obviously we've been working for a while in Europe Australia",
    "start": "106799",
    "end": "114390"
  },
  {
    "text": "and Asia but github and the world of inner source software is truly an international community and we are very",
    "start": "114390",
    "end": "120000"
  },
  {
    "text": "excited to see these growth numbers and the international community as well so",
    "start": "120000",
    "end": "126530"
  },
  {
    "text": "before we get started just some fun if you guys have all seen this since there's so few of you you can just raise your hand but I always like to start off",
    "start": "126530",
    "end": "132780"
  },
  {
    "text": "with what's a good people ask me what's github what do you mean what are you talking about so it all goes back to",
    "start": "132780",
    "end": "138210"
  },
  {
    "text": "this guy who is named lenez Torvalds anybody not know who Linda's Torvalds is",
    "start": "138210",
    "end": "143520"
  },
  {
    "text": "we all know who when this Torvalds is so Lynette's arguably is responsible for two of the greatest software innovations",
    "start": "143520",
    "end": "150150"
  },
  {
    "text": "of the last 3040 years or maybe even ever obviously he wrote the Linux operating system which he then",
    "start": "150150",
    "end": "156860"
  },
  {
    "text": "egomaniacal II named after himself but he got tired of the way that the source",
    "start": "156860",
    "end": "163080"
  },
  {
    "text": "code control system he was using to manage the Linux project actually worked it wasn't good for distributed teams it",
    "start": "163080",
    "end": "168390"
  },
  {
    "text": "wasn't good for folks that were working at different times it wasn't good for asynchronous communication etc etc etc so he sat down over a weekend and came",
    "start": "168390",
    "end": "175680"
  },
  {
    "text": "up with a solution a new version control system that he called git which again he",
    "start": "175680",
    "end": "181470"
  },
  {
    "text": "named after himself since in British slang a git is an unpleasant or contemptible person so if you want to",
    "start": "181470",
    "end": "187620"
  },
  {
    "text": "use it in the sentence for example you can say if you can't figure out who the get on your team is it's probably you so",
    "start": "187620",
    "end": "193830"
  },
  {
    "text": "a little bit more about lineThe it's performance evaluation season is coming up I know we are all looking forward to",
    "start": "193830",
    "end": "199500"
  },
  {
    "text": "that so this year in limits is going to be able to point to over forty one and a half billion dollars of direct",
    "start": "199500",
    "end": "206640"
  },
  {
    "text": "shareholder equity value created from companies based on technologies that he's pretty much single-handedly",
    "start": "206640",
    "end": "212190"
  },
  {
    "text": "responsible for so it's very likely that his performance review will be better than any of ours all right so as I",
    "start": "212190",
    "end": "219300"
  },
  {
    "text": "mentioned I work for github get up it's been traditionally sort of viewed as the home of open source software and it",
    "start": "219300",
    "end": "225990"
  },
  {
    "text": "certainly is that but we are also very serious about providing an effective platform for folks to use at work in the",
    "start": "225990",
    "end": "233430"
  },
  {
    "text": "enterprise actually in the enterprise the small business the medium business any concern we're creating and managing",
    "start": "233430",
    "end": "239280"
  },
  {
    "text": "the software development process is what you do for work and of course our flagship product is github business",
    "start": "239280",
    "end": "246330"
  },
  {
    "text": "cloud this is our software as a service offering the github comm that we all",
    "start": "246330",
    "end": "251730"
  },
  {
    "text": "know and love github business cloud has been enhanced and fortified with features for the enterprise like sam'l SSO single sign-on",
    "start": "251730",
    "end": "260450"
  },
  {
    "text": "the actions beta that has been so well received over the last couple of months since we",
    "start": "260450",
    "end": "266430"
  },
  {
    "text": "announced it at universe and many more features coming in the future to really make github business cloud the premier online",
    "start": "266430",
    "end": "274550"
  },
  {
    "text": "source code development and management platform but what many folks are still",
    "start": "274550",
    "end": "279810"
  },
  {
    "text": "unaware of even after all these years is the fact that we also have a self hosted solution which we call get AB enterprise",
    "start": "279810",
    "end": "287310"
  },
  {
    "text": "so what does this mean this means that if for whatever reason you're not as comfortable with putting your valuable",
    "start": "287310",
    "end": "293190"
  },
  {
    "text": "IP in the cloud you can have the same github user experience in your own environment whether that's on your own",
    "start": "293190",
    "end": "299610"
  },
  {
    "text": "data center or in a cloud provider like AWS so from the developer desktop point",
    "start": "299610",
    "end": "307500"
  },
  {
    "text": "of view it's almost impossible to tell the difference we have the same user experience on github enterprise as we do",
    "start": "307500",
    "end": "312540"
  },
  {
    "text": "with github com the platform is extremely scalable we have many customers that are running over 10,000",
    "start": "312540",
    "end": "318930"
  },
  {
    "text": "customers on a single instance it's easy to manage an upgrade typically just a few commands you can hot patch and hot",
    "start": "318930",
    "end": "325590"
  },
  {
    "text": "fix in most cases it's very easy to add in critical enterprise features like high availability and disaster recovery",
    "start": "325590",
    "end": "332450"
  },
  {
    "text": "and it's just as much a true platform for software development and DevOps as",
    "start": "332450",
    "end": "337919"
  },
  {
    "text": "our cloud solution github business cloud so let me talk a little bit about my",
    "start": "337919",
    "end": "345600"
  },
  {
    "text": "role in these proceedings here so that's me my role principle solutions engineer at github and what this means is that I",
    "start": "345600",
    "end": "353070"
  },
  {
    "text": "am part of a team charged with doing what I'm doing right now which is telling you about github and then",
    "start": "353070",
    "end": "358950"
  },
  {
    "text": "helping working with you working with customers working with users both before and after the sale to understand how",
    "start": "358950",
    "end": "365370"
  },
  {
    "text": "best to utilize the power of the platform and also to make sure that our customers are getting the maximum value",
    "start": "365370",
    "end": "371910"
  },
  {
    "text": "for their investment in whichever of our platforms that that they've decided to purchase so I work with a team of",
    "start": "371910",
    "end": "378690"
  },
  {
    "text": "dedicated very hardworking and very ethical folks and we all very much",
    "start": "378690",
    "end": "383760"
  },
  {
    "text": "believe in the mission of github now having said that it's also true that I'm just a sales guy so maybe or maybe not",
    "start": "383760",
    "end": "389490"
  },
  {
    "text": "you can't trust anything that comes out of my mouth so we're going to see in",
    "start": "389490",
    "end": "394830"
  },
  {
    "text": "this presentation so when my friends from Cox automotive were interested in implementing git",
    "start": "394830",
    "end": "400560"
  },
  {
    "text": "enterprise they told me that they wanted to run it on AWS and I said that's fantastic all you have to do is find an",
    "start": "400560",
    "end": "407010"
  },
  {
    "text": "ami which is simple enough to do click the blue button and you're good to go you're ready to to",
    "start": "407010",
    "end": "413340"
  },
  {
    "text": "run get up Enterprise on AWS so that was the sales guy in me talking and I guess",
    "start": "413340",
    "end": "418470"
  },
  {
    "text": "we're gonna find out in a moment whether or not what I said was true or if there's more to the story as there",
    "start": "418470",
    "end": "423750"
  },
  {
    "text": "typically is so without further ado I will hand it over to the guy who actually does the work that makes all",
    "start": "423750",
    "end": "429780"
  },
  {
    "text": "this happen my friend Felipe Ramirez from Cox automotive alright thanks Brian",
    "start": "429780",
    "end": "439760"
  },
  {
    "text": "so my name is felipe ramirez senior systems engineer at Cox automotive I",
    "start": "439760",
    "end": "446040"
  },
  {
    "text": "work on the commercial off-the-shelf tools team and we're responsible for",
    "start": "446040",
    "end": "451770"
  },
  {
    "text": "providing our software engineers with development tools like github enterprise today I'm gonna talk to you about how we",
    "start": "451770",
    "end": "459330"
  },
  {
    "text": "run github enterprise on AWS but specifically around why and how we use",
    "start": "459330",
    "end": "465720"
  },
  {
    "text": "code to define our github enterprise environments so a bit about me I started",
    "start": "465720",
    "end": "473010"
  },
  {
    "text": "my career as a sysadmin primarily focused on infrastructure and operations",
    "start": "473010",
    "end": "478140"
  },
  {
    "text": "a few years ago a company that I was with was in the middle of transitioning",
    "start": "478140",
    "end": "484050"
  },
  {
    "text": "from a traditional IT organization to more of a DevOps practice and that was a",
    "start": "484050",
    "end": "489600"
  },
  {
    "text": "huge game-changer for me by that time I had been an IT for over a decade and I",
    "start": "489600",
    "end": "496289"
  },
  {
    "text": "was just starting to get burnt out with the reactive nature of being a sysadmin and operations in general so the idea of",
    "start": "496289",
    "end": "505910"
  },
  {
    "text": "taking a proactive approach in my role as an engineer and doing things like",
    "start": "505910",
    "end": "511080"
  },
  {
    "text": "infrastructure is code and continuous improvement really appealed to me and that's been my focus ever since so I",
    "start": "511080",
    "end": "520409"
  },
  {
    "text": "joined Cox Automotive a little bit over a year ago at the time I didn't realize it but",
    "start": "520409",
    "end": "527279"
  },
  {
    "text": "we're actually a pretty large organization we have about 34,000 employees worldwide",
    "start": "527279",
    "end": "533880"
  },
  {
    "text": "spread across 27 different brands some of which include some well-known companies like Auto Trader Kelly Blue",
    "start": "533880",
    "end": "541410"
  },
  {
    "text": "Book and Manheim we recently acquired two car subscription services clutch and",
    "start": "541410",
    "end": "547800"
  },
  {
    "text": "Flex Drive which i think is super exciting it's it's just been a really",
    "start": "547800",
    "end": "553350"
  },
  {
    "text": "amazing it's been really amazing to be a part of our vision to transform the way the world buys cells and owns cars so a",
    "start": "553350",
    "end": "563700"
  },
  {
    "text": "quick note about this session all of the code that we're going over will be available at this repo here also the",
    "start": "563700",
    "end": "570870"
  },
  {
    "text": "slides that we're going through are also available there as well so if you miss",
    "start": "570870",
    "end": "576330"
  },
  {
    "text": "something you can go through that at your leisure there so let's take a look",
    "start": "576330",
    "end": "582690"
  },
  {
    "text": "at what we're gonna cover we're going to start off by taking a look at what",
    "start": "582690",
    "end": "587790"
  },
  {
    "text": "github Enterprise high-availability on AWS looks like then we're going to walk",
    "start": "587790",
    "end": "595680"
  },
  {
    "text": "through some example code of how we stand up our github enterprise infrastructure with terraform next we'll",
    "start": "595680",
    "end": "604560"
  },
  {
    "text": "look at using the management console API to apply a configuration from an",
    "start": "604560",
    "end": "610620"
  },
  {
    "text": "existing github Enterprise appliance to a new one and then how we use terraform",
    "start": "610620",
    "end": "616200"
  },
  {
    "text": "to automate that and then last we'll take a look at some some ideas we've got",
    "start": "616200",
    "end": "623550"
  },
  {
    "text": "about making this whole process better and do a little bit more for us down the road so let's take a look at what github",
    "start": "623550",
    "end": "632340"
  },
  {
    "text": "Enterprise high-availability looks like on AWS high availability or h.a consists",
    "start": "632340",
    "end": "639360"
  },
  {
    "text": "of two github enterprise appliances in an active/passive arrangement so in this",
    "start": "639360",
    "end": "645450"
  },
  {
    "text": "type of configuration you have a primary appliance that actively serves your",
    "start": "645450",
    "end": "650460"
  },
  {
    "text": "users with all things github and every change that gets made to that appliance",
    "start": "650460",
    "end": "656000"
  },
  {
    "text": "is synced over to the replica appliance in real time so in the event that",
    "start": "656000",
    "end": "663260"
  },
  {
    "text": "primary appliance experiences a failure you would initiate a failover on the",
    "start": "663260",
    "end": "668960"
  },
  {
    "text": "replica with just a few simple commands and then update your DNS to point to the",
    "start": "668960",
    "end": "674900"
  },
  {
    "text": "IP address of the promoted replica so",
    "start": "674900",
    "end": "680240"
  },
  {
    "text": "obviously these appliances should be in isolated environments each with their own power and connectivity the nice",
    "start": "680240",
    "end": "687710"
  },
  {
    "text": "thing here is that you easily get that with AWS availability zones so before we",
    "start": "687710",
    "end": "694550"
  },
  {
    "text": "move on I do want to mention that high availability does not replace backups there's still the potential for data",
    "start": "694550",
    "end": "702530"
  },
  {
    "text": "loss or corruption to occur if the you know if that happens on the primary",
    "start": "702530",
    "end": "707660"
  },
  {
    "text": "appliance that's going to get immediately synced over to the replicas so if that happens your only option to",
    "start": "707660",
    "end": "714680"
  },
  {
    "text": "recover any data is really to do that from a backup the nice thing here is",
    "start": "714680",
    "end": "722240"
  },
  {
    "text": "that github provides a perfect tool called github Enterprise backup utilities it runs on a dedicated host",
    "start": "722240",
    "end": "729320"
  },
  {
    "text": "and performs snapshots of your git data with very little overhead to your primary appliance so I definitely",
    "start": "729320",
    "end": "736520"
  },
  {
    "text": "recommend doing that in addition to having a che in production in your",
    "start": "736520",
    "end": "743390"
  },
  {
    "text": "environment all right so let's talk about creating the underlying github",
    "start": "743390",
    "end": "750140"
  },
  {
    "text": "enterprise infrastructure with code before you get started though you might",
    "start": "750140",
    "end": "755330"
  },
  {
    "text": "be asking well why do this as Brian mentioned setting up github Enterprise is pretty simple and even more so on AWS",
    "start": "755330",
    "end": "762820"
  },
  {
    "text": "well there are a few reasons you might consider this code is documentation a",
    "start": "762820",
    "end": "769400"
  },
  {
    "text": "common problem that we have you know maintaining systems is that more often",
    "start": "769400",
    "end": "776090"
  },
  {
    "text": "than not documentation of how we got all this to work is the last thing on",
    "start": "776090",
    "end": "781640"
  },
  {
    "text": "anyone's mind and it's the last thing it gets done if it gets done at all so by defining",
    "start": "781640",
    "end": "787970"
  },
  {
    "text": "all of this in code up front the code itself essentially essentially becomes",
    "start": "787970",
    "end": "794180"
  },
  {
    "text": "your documentation so you know anyone from your team you happen to be out on",
    "start": "794180",
    "end": "799610"
  },
  {
    "text": "vacation they refer to your to your infrastructure code and kind of get an idea of how",
    "start": "799610",
    "end": "804829"
  },
  {
    "text": "things were set up consistency and speed in my case when I started a Cox",
    "start": "804829",
    "end": "811459"
  },
  {
    "text": "Automotive I had never worked with github Enterprise before so the first thing on my agenda was to stand up an",
    "start": "811459",
    "end": "819410"
  },
  {
    "text": "environment of my own to tinker with so defining this in code gave me and anyone",
    "start": "819410",
    "end": "827180"
  },
  {
    "text": "else just the ability to stand up these environments identical to production",
    "start": "827180",
    "end": "832819"
  },
  {
    "text": "quickly and and more reliably than doing it by hand so this is subjective I know",
    "start": "832819",
    "end": "840290"
  },
  {
    "text": "but I actually had a lot of fun doing this this was my first foray in a",
    "start": "840290",
    "end": "845629"
  },
  {
    "text": "terraform and the fact that there's so much so many examples out there and",
    "start": "845629",
    "end": "851810"
  },
  {
    "text": "documentation on terraform I was able to make progress really quickly and ended",
    "start": "851810",
    "end": "857569"
  },
  {
    "text": "up learning a lot not just about terraform but also about AWS and github Enterprise obviously so what is",
    "start": "857569",
    "end": "867050"
  },
  {
    "text": "terraform simply put it's an open-source tool that allows you to describe things",
    "start": "867050",
    "end": "872689"
  },
  {
    "text": "like your ec2 instances storage DNS pretty much anything related to the",
    "start": "872689",
    "end": "878839"
  },
  {
    "text": "infrastructure using version configuration files the nice thing too",
    "start": "878839",
    "end": "885139"
  },
  {
    "text": "is that it also gives you the option of writing your infrastructure code as",
    "start": "885139",
    "end": "890319"
  },
  {
    "text": "reusable templates or modules as they're called and this helps to avoid things",
    "start": "890319",
    "end": "896959"
  },
  {
    "text": "like code duplication and just allows for basic code organization and it's how",
    "start": "896959",
    "end": "902750"
  },
  {
    "text": "we're going to be defining the our github enterprise environment in the examples we're going to see all right so",
    "start": "902750",
    "end": "911089"
  },
  {
    "text": "let's take a look at our first piece of code github enterprise is distributed as",
    "start": "911089",
    "end": "916610"
  },
  {
    "text": "a virtual appliance image as Brian mentioned so the first thing that we need to do in our terraform code is",
    "start": "916610",
    "end": "923059"
  },
  {
    "text": "search for this ami terraform has what are called data sources and what that",
    "start": "923059",
    "end": "929779"
  },
  {
    "text": "allows is data to be fetched and used elsewhere in your terraform",
    "start": "929779",
    "end": "934930"
  },
  {
    "text": "configuration so here we're using the AWS ami data source to provide us with",
    "start": "934930",
    "end": "940990"
  },
  {
    "text": "the ID of the ami that we're looking for just using a couple of values to narrow",
    "start": "940990",
    "end": "946749"
  },
  {
    "text": "down our search so if you look down at",
    "start": "946749",
    "end": "951819"
  },
  {
    "text": "the bottom you'll see that we're specifying an owner ID all this does is ensure that any ami is that we pull in",
    "start": "951819",
    "end": "959290"
  },
  {
    "text": "are going to be those published by github then we're searching for a string",
    "start": "959290",
    "end": "965619"
  },
  {
    "text": "matching the name of the ami along with a version number but the version number",
    "start": "965619",
    "end": "970689"
  },
  {
    "text": "is going to be is being supplied as an input variable completely separate well",
    "start": "970689",
    "end": "976929"
  },
  {
    "text": "it's going to be supplied in a completely separate piece of code that we're gonna look at towards the end but",
    "start": "976929",
    "end": "982660"
  },
  {
    "text": "essentially what you have here are the makings of a module so let's move on to",
    "start": "982660",
    "end": "988899"
  },
  {
    "text": "creating the actual appliances themselves here we're specifying our instance settings our storage options",
    "start": "988899",
    "end": "995800"
  },
  {
    "text": "and then a name tag down at the bottom here we're pulling in that ami ID from",
    "start": "995800",
    "end": "1002459"
  },
  {
    "text": "the data source that we saw in the previous slide and then we're also",
    "start": "1002459",
    "end": "1007559"
  },
  {
    "text": "telling terraform to create two identically configured instances with a single block of code so a side note when",
    "start": "1007559",
    "end": "1016139"
  },
  {
    "text": "I was doing this manually I had actually configured the primary and replica",
    "start": "1016139",
    "end": "1022529"
  },
  {
    "text": "appliance different from each other and github actually recommends that those two appliances be configured identically",
    "start": "1022529",
    "end": "1030839"
  },
  {
    "text": "in terms of CPU memory and RAM so doing this in code mitigates those little",
    "start": "1030839",
    "end": "1036899"
  },
  {
    "text": "silly mistakes next we're specifying the",
    "start": "1036899",
    "end": "1041970"
  },
  {
    "text": "subnet IDs to put these instances and we're gonna specify this as a list of",
    "start": "1041970",
    "end": "1048000"
  },
  {
    "text": "two subnet IDs later on but the nice thing here is that we could use tear forms built in element function to",
    "start": "1048000",
    "end": "1055799"
  },
  {
    "text": "distribute each instance one per subnet and that makes sure that we're following",
    "start": "1055799",
    "end": "1060929"
  },
  {
    "text": "best practice by keeping each appliance in separate availability zones",
    "start": "1060929",
    "end": "1066059"
  },
  {
    "text": "so another side note when I was doing this manually in our staging environment",
    "start": "1066059",
    "end": "1072640"
  },
  {
    "text": "I actually put both appliances in the same availability zone by mistake",
    "start": "1072640",
    "end": "1077890"
  },
  {
    "text": "so it was staging so it wasn't a big deal but again silly mistakes could have",
    "start": "1077890",
    "end": "1083890"
  },
  {
    "text": "been avoided you know using code so",
    "start": "1083890",
    "end": "1089260"
  },
  {
    "text": "let's talk about this name tag here at the bottom we want to differentiate between our primary and replica",
    "start": "1089260",
    "end": "1095559"
  },
  {
    "text": "appliances and between any other github enterprise instances running on our AWS",
    "start": "1095559",
    "end": "1100960"
  },
  {
    "text": "account there are four engineers on our team and we could have you know anywhere",
    "start": "1100960",
    "end": "1106179"
  },
  {
    "text": "from six or eight instances running at any one time so we need to differentiate between all those something that's",
    "start": "1106179",
    "end": "1113890"
  },
  {
    "text": "worked for us is using this naming convention where we take the first part",
    "start": "1113890",
    "end": "1119049"
  },
  {
    "text": "of our github enterprise hostname and use that as an environment tag so for",
    "start": "1119049",
    "end": "1124510"
  },
  {
    "text": "example if my test environment has a host name of my github example.com I",
    "start": "1124510",
    "end": "1129820"
  },
  {
    "text": "would use the environment tag of my github for my instances and any other",
    "start": "1129820",
    "end": "1135220"
  },
  {
    "text": "AWS resources related to that environment so we can actually take that",
    "start": "1135220",
    "end": "1142750"
  },
  {
    "text": "out using Tara forms built-in split function against our host name that",
    "start": "1142750",
    "end": "1150760"
  },
  {
    "text": "we're going to be providing later on so since we're going to be using this tag",
    "start": "1150760",
    "end": "1156450"
  },
  {
    "text": "throughout our code down the road we're gonna add this expression as a local",
    "start": "1156450",
    "end": "1161890"
  },
  {
    "text": "variable in Tara form so that we can refer to it using that short name of E&V",
    "start": "1161890",
    "end": "1166990"
  },
  {
    "text": "tag so if we go back to the tag assignment you can see that we're",
    "start": "1166990",
    "end": "1174399"
  },
  {
    "text": "calling that expression using that local variable that we just saw and then we're using the format function in Tara form",
    "start": "1174399",
    "end": "1182080"
  },
  {
    "text": "to add a number suffix to each instance starting with the number 0 so that we",
    "start": "1182080",
    "end": "1187179"
  },
  {
    "text": "end up with a couple instances named my github 1 and might yet have my github 0",
    "start": "1187179",
    "end": "1195390"
  },
  {
    "text": "next let's take a look at how we're defining our security and rules we're starting off by defining",
    "start": "1195750",
    "end": "1203559"
  },
  {
    "text": "our security group resourcing one block and then our security group rules as",
    "start": "1203559",
    "end": "1209280"
  },
  {
    "text": "separate blocks so we could have gone ahead and defined this as one giant",
    "start": "1209280",
    "end": "1215320"
  },
  {
    "text": "block together and that's called those",
    "start": "1215320",
    "end": "1221049"
  },
  {
    "text": "are called inline blocks but you want to avoid doing that when you're creating",
    "start": "1221049",
    "end": "1226390"
  },
  {
    "text": "modules because there have been issues that come up when you mix the use of",
    "start": "1226390",
    "end": "1231640"
  },
  {
    "text": "inline blocks and separate resources like we're doing here in the same configuration",
    "start": "1231640",
    "end": "1238440"
  },
  {
    "text": "so next github x' recommendation is to use elastic IPS with our instances so we",
    "start": "1239850",
    "end": "1246790"
  },
  {
    "text": "can use terraform splat syntax to automatically assign those in that one",
    "start": "1246790",
    "end": "1252340"
  },
  {
    "text": "block of code when those instances get created so let's move on to DNS here",
    "start": "1252340",
    "end": "1260559"
  },
  {
    "text": "we're creating a zone for our github enterprise environment based off the hostname we're creating an a record for",
    "start": "1260559",
    "end": "1268390"
  },
  {
    "text": "that hostname along with a wild card entry and both of these are going to point to our instance ending in - 0 the",
    "start": "1268390",
    "end": "1277690"
  },
  {
    "text": "nice thing here is that we could switch these DNS records to point to our second appliance if we end up promoting it as",
    "start": "1277690",
    "end": "1285910"
  },
  {
    "text": "primary right within terraform via that records line so let's take a closer look",
    "start": "1285910",
    "end": "1291549"
  },
  {
    "text": "at that line you can see here that we can control whether this points to the 0",
    "start": "1291549",
    "end": "1297640"
  },
  {
    "text": "or 1 instance depending on this VAR dot primary variable so if that's set to 0",
    "start": "1297640",
    "end": "1304679"
  },
  {
    "text": "then it uses the true value and if it's set to anything else other than 0 it",
    "start": "1304679",
    "end": "1311440"
  },
  {
    "text": "uses the value on the other side of that colon the false value so at this point",
    "start": "1311440",
    "end": "1318820"
  },
  {
    "text": "we're done with the module code used to define our infrastructure so now let's",
    "start": "1318820",
    "end": "1325390"
  },
  {
    "text": "take a look at how we configure a new appliance what's it once it's created using the management console API",
    "start": "1325390",
    "end": "1332770"
  },
  {
    "text": "let's start though by quickly walking through the setup of a brand-new out-of-the-box appliance so accessing a",
    "start": "1332770",
    "end": "1340390"
  },
  {
    "text": "new appliance via browser immediately drops you into the setup of the management console so you're asked to",
    "start": "1340390",
    "end": "1347500"
  },
  {
    "text": "provide a license file and then set the console password next you'll be asked to",
    "start": "1347500",
    "end": "1355120"
  },
  {
    "text": "choose the type of install we'll choose new install here and then we're redirected to the settings portion in",
    "start": "1355120",
    "end": "1362650"
  },
  {
    "text": "order to customize our appliance so the last step is to click save settings to apply this kicks off a configuration",
    "start": "1362650",
    "end": "1370570"
  },
  {
    "text": "process takes a few minutes but once it's finished you've got a working appliance so pretty simple but if I",
    "start": "1370570",
    "end": "1378280"
  },
  {
    "text": "wanted to duplicate these settings onto a new appliance I could do this much quicker by exporting this configuration",
    "start": "1378280",
    "end": "1384520"
  },
  {
    "text": "and applying it to my new appliance with the management console API so I can use",
    "start": "1384520",
    "end": "1393520"
  },
  {
    "text": "the retrieve settings endpoint to pull an existing appliances settings and",
    "start": "1393520",
    "end": "1399520"
  },
  {
    "text": "export it to a file we just need to supply the existing appliances management console password",
    "start": "1399520",
    "end": "1404740"
  },
  {
    "text": "as the API key shown here and then redirect that output to a file and what",
    "start": "1404740",
    "end": "1413290"
  },
  {
    "text": "you end up getting is this long JSON string of settings like the ones that you see here so now that we've got the",
    "start": "1413290",
    "end": "1420100"
  },
  {
    "text": "settings file for our existing appliance let's take a look at how we apply this configuration to our new appliance the",
    "start": "1420100",
    "end": "1429610"
  },
  {
    "text": "first thing that we need to do is to make sure that our new appliances up and",
    "start": "1429610",
    "end": "1434710"
  },
  {
    "text": "ready to take API requests the easiest way to do this is by checking the string",
    "start": "1434710",
    "end": "1441000"
  },
  {
    "text": "checking for the string set setup github enterprise against the management",
    "start": "1441000",
    "end": "1446170"
  },
  {
    "text": "console URL and you could do that using curl one thing to note here is that a",
    "start": "1446170",
    "end": "1454060"
  },
  {
    "text": "github Enterprise appliance out-of-the-box is configured with a self-signed certificate so in order for",
    "start": "1454060",
    "end": "1462250"
  },
  {
    "text": "curl to ignore this certificate and to proceed you have to apply it with this kay option otherwise",
    "start": "1462250",
    "end": "1468290"
  },
  {
    "text": "this command just fails so like we saw",
    "start": "1468290",
    "end": "1473480"
  },
  {
    "text": "in the browser earlier the first thing that we need to do is upload our license file and set a password and we could do",
    "start": "1473480",
    "end": "1480380"
  },
  {
    "text": "that using this endpoint with a post method next we'll upload our settings",
    "start": "1480380",
    "end": "1490850"
  },
  {
    "text": "based off the file that we captured from our existing appliance the nice thing here is that we can pass in a modified",
    "start": "1490850",
    "end": "1498500"
  },
  {
    "text": "version of this file with only the settings that we want to carry over to the new appliance finally we apply these",
    "start": "1498500",
    "end": "1507260"
  },
  {
    "text": "settings with a post method to this endpoint which kicks off that configuration process which is similar",
    "start": "1507260",
    "end": "1513500"
  },
  {
    "text": "to what we saw when we click Save Settings in the browser so this is great",
    "start": "1513500",
    "end": "1521180"
  },
  {
    "text": "it's a lot more efficient than specifying config settings by hands but let's take it a step further by",
    "start": "1521180",
    "end": "1526990"
  },
  {
    "text": "executing all these commands automatically within terraform so we're",
    "start": "1526990",
    "end": "1533360"
  },
  {
    "text": "gonna need to supply an initial management console password then use that same password to access our API",
    "start": "1533360",
    "end": "1539540"
  },
  {
    "text": "endpoints we could store this in AWS Systems Manager parameters store as a",
    "start": "1539540",
    "end": "1546800"
  },
  {
    "text": "secure string and then pull that into our configuration using a terraform data source so we'll stick with our naming",
    "start": "1546800",
    "end": "1555770"
  },
  {
    "text": "convention and store it under the path my github for our environment tag and",
    "start": "1555770",
    "end": "1561170"
  },
  {
    "text": "then give it the parameter name ghe password one thing that's worth noting",
    "start": "1561170",
    "end": "1568970"
  },
  {
    "text": "here is that terraform by default keeps changes that it makes within a state",
    "start": "1568970",
    "end": "1575390"
  },
  {
    "text": "file locally on your machine so sensitive strings like passwords also get stored in that state file but in",
    "start": "1575390",
    "end": "1581600"
  },
  {
    "text": "plain text so as the best practice you should be storing your state in a remote back-end like s3 with encryption at rest",
    "start": "1581600",
    "end": "1589700"
  },
  {
    "text": "turned on we won't be diving into that here but it's something to keep in mind if you are going to use terraform so now",
    "start": "1589700",
    "end": "1598850"
  },
  {
    "text": "we can use this data source the AWS SSM parameter datasource to pull",
    "start": "1598850",
    "end": "1604470"
  },
  {
    "text": "our password value from parameter store since we're going to be using this value",
    "start": "1604470",
    "end": "1611399"
  },
  {
    "text": "multiple times we'll add it to our locals block with a short name ghe",
    "start": "1611399",
    "end": "1617639"
  },
  {
    "text": "password so now we're ready to add the",
    "start": "1617639",
    "end": "1622649"
  },
  {
    "text": "execution of these API commands to terraform so I know there's a lot going on here but what the point I want to get",
    "start": "1622649",
    "end": "1630239"
  },
  {
    "text": "across is that we're using what's called a local exec provisioner in terraform",
    "start": "1630239",
    "end": "1635970"
  },
  {
    "text": "and what this does is invoke those curl commands that we saw earlier from the",
    "start": "1635970",
    "end": "1641220"
  },
  {
    "text": "local workstation as part of a terraform apply that gets run since we only need",
    "start": "1641220",
    "end": "1649109"
  },
  {
    "text": "the first appliance to be configured with our exported settings we'll add",
    "start": "1649109",
    "end": "1654389"
  },
  {
    "text": "these local exec commands to a null resource block so this just allows us to",
    "start": "1654389",
    "end": "1661440"
  },
  {
    "text": "create a resource that behaves like any other but is completely independent from any other existing resources in the",
    "start": "1661440",
    "end": "1668340"
  },
  {
    "text": "config so all that makes up our final working module which looks like this now",
    "start": "1668340",
    "end": "1675809"
  },
  {
    "text": "we need to specify all of those variable values specific to our environment and we do this completely outside of our",
    "start": "1675809",
    "end": "1683340"
  },
  {
    "text": "module repo in what we call our live environment repo this one's a lot",
    "start": "1683340",
    "end": "1689129"
  },
  {
    "text": "simpler it just contains our license and settings file and main TF file so let's",
    "start": "1689129",
    "end": "1694950"
  },
  {
    "text": "take a look at that main TF file now so we start off by specifying our provider",
    "start": "1694950",
    "end": "1701940"
  },
  {
    "text": "and region at the top then a module block that contains our specific values",
    "start": "1701940",
    "end": "1708259"
  },
  {
    "text": "the source line here tells terraform where to fetch this module from in this",
    "start": "1708259",
    "end": "1713820"
  },
  {
    "text": "case it's our Rhian reinvent a teen repo this is automatically cloned down to the",
    "start": "1713820",
    "end": "1719399"
  },
  {
    "text": "workstation running terraform so there's no need for this module code to be on the on your workstation ahead of time so",
    "start": "1719399",
    "end": "1728749"
  },
  {
    "text": "we're also using the ref argument to specify a specific release of our",
    "start": "1728809",
    "end": "1734300"
  },
  {
    "text": "jool we use that quite a bit because it allows us to test against specifics",
    "start": "1734300",
    "end": "1740330"
  },
  {
    "text": "feature branches and versions without affecting other environments that are using the same module next we have our",
    "start": "1740330",
    "end": "1749540"
  },
  {
    "text": "github Enterprise settings where we specify our version hostname and our",
    "start": "1749540",
    "end": "1756590"
  },
  {
    "text": "license and settings file names then we've got our variable that designates",
    "start": "1756590",
    "end": "1762770"
  },
  {
    "text": "which of our appliances is considered primary for our DNS records and then we",
    "start": "1762770",
    "end": "1769070"
  },
  {
    "text": "specify a V PC with two subnets that we want each appliance to reside in and",
    "start": "1769070",
    "end": "1775510"
  },
  {
    "text": "then we wrap it up with our instance type and volume size that we want to use and that's it",
    "start": "1775510",
    "end": "1781760"
  },
  {
    "text": "as long as we have our settings in license file residing in that same directory along with our password up in",
    "start": "1781760",
    "end": "1788780"
  },
  {
    "text": "parameters store we can run terraform apply to create our new environment so",
    "start": "1788780",
    "end": "1794560"
  },
  {
    "text": "this is a lot quicker than launching and configuring our environment by hand but",
    "start": "1794560",
    "end": "1800180"
  },
  {
    "text": "what else could we do here how could we extend this even further so one thing",
    "start": "1800180",
    "end": "1805430"
  },
  {
    "text": "that we were thinking was to automate the h8 configuration on the replica",
    "start": "1805430",
    "end": "1810860"
  },
  {
    "text": "appliance while this code creates both appliances used in a high availability",
    "start": "1810860",
    "end": "1817240"
  },
  {
    "text": "configuration it only creates or it only configures the primary appliance and it",
    "start": "1817240",
    "end": "1822350"
  },
  {
    "text": "leaves the replicas untouched setting up replication is pretty simple it only",
    "start": "1822350",
    "end": "1827420"
  },
  {
    "text": "takes a few steps on the replica appliance but it would be nice to have that automated as part of this as well",
    "start": "1827420",
    "end": "1835990"
  },
  {
    "text": "we've also thought about using about executing this terraform code within AWS",
    "start": "1835990",
    "end": "1842300"
  },
  {
    "text": "code pipeline so this would remove the dependency of having a workstation necessary to run terraform apply and",
    "start": "1842300",
    "end": "1849530"
  },
  {
    "text": "would also give us the ability to run things like smoke test and other post",
    "start": "1849530",
    "end": "1854690"
  },
  {
    "text": "install scripts after any changes are applied and have that done automatically",
    "start": "1854690",
    "end": "1861760"
  },
  {
    "text": "so everyone here already knows that your data restores are only as good as your backups and we should be testing our",
    "start": "1862620",
    "end": "1869760"
  },
  {
    "text": "backups on some kind of a regular basis so I'd really love to see the ability to",
    "start": "1869760",
    "end": "1875370"
  },
  {
    "text": "test my backups on a daily basis basically have an automated process that",
    "start": "1875370",
    "end": "1880530"
  },
  {
    "text": "pulls the most recent backup from production restores it to a spot instance run some verification tests and",
    "start": "1880530",
    "end": "1887610"
  },
  {
    "text": "then notifies us of the result so that's",
    "start": "1887610",
    "end": "1893160"
  },
  {
    "text": "it that about does it before we wrap up though I want to remind everyone that",
    "start": "1893160",
    "end": "1898550"
  },
  {
    "text": "all of our code examples are up on this repo here so you could take a look at",
    "start": "1898550",
    "end": "1904380"
  },
  {
    "text": "those at your leisure and we have plenty of time for questions if anybody has any",
    "start": "1904380",
    "end": "1912470"
  },
  {
    "text": "if not then oh you do okay cool yep",
    "start": "1912620",
    "end": "1920690"
  },
  {
    "text": "I'm having a little bit of trouble hearing you yeah I don't think that's turned on",
    "start": "1929160",
    "end": "1942350"
  },
  {
    "text": "there we go and when you deploy in the enterprise field Habano providers really",
    "start": "1943790",
    "end": "1949410"
  },
  {
    "text": "depends how your internal user for example your develop team access state",
    "start": "1949410",
    "end": "1955470"
  },
  {
    "text": "by the public IP or by the internal IP know by public IP I about inconvenient",
    "start": "1955470",
    "end": "1964230"
  },
  {
    "text": "yeah well there's a public dns name that maps to the elastic IP address of our",
    "start": "1964230",
    "end": "1970500"
  },
  {
    "text": "github Enterprise appliance can I know the user distribution in the world it's",
    "start": "1970500",
    "end": "1976050"
  },
  {
    "text": "only in the US oh you chain in a different country I'd say that again I didn't quite get",
    "start": "1976050",
    "end": "1982650"
  },
  {
    "text": "that full internal user easy eveything the only one location or the",
    "start": "1982650",
    "end": "1988140"
  },
  {
    "text": "whole in a different location no there so yeah are you talking about like",
    "start": "1988140",
    "end": "1993540"
  },
  {
    "text": "having like multi-region type github",
    "start": "1993540",
    "end": "1998850"
  },
  {
    "text": "instances or yes yeah we're not so that's actually another thing that we we",
    "start": "1998850",
    "end": "2003890"
  },
  {
    "text": "want to look into as well I know that came out quite a bit ago but it isn't",
    "start": "2003890",
    "end": "2010370"
  },
  {
    "text": "anything that we have implemented today okay thank you yep anybody else primary and so say",
    "start": "2010370",
    "end": "2020450"
  },
  {
    "text": "you'd have two primaries right and put it in the pool yeah so github Enterprise isn't configured that way it's it's",
    "start": "2020450",
    "end": "2027650"
  },
  {
    "text": "that's just the way that it's set up and Brian you might have a better answer for",
    "start": "2027650",
    "end": "2033230"
  },
  {
    "text": "this but you know that's the way it comes out of the box is it's in an active/passive configuration",
    "start": "2033230",
    "end": "2041590"
  },
  {
    "text": "can you hear me okay yeah so we find that you know we have customers that run",
    "start": "2048889",
    "end": "2055099"
  },
  {
    "text": "20,000 or more users on a single instance we don't find that load balancing or they need to have multiple",
    "start": "2055099",
    "end": "2061108"
  },
  {
    "text": "nodes to handle loads is really a thing yet having said that that is how we run",
    "start": "2061109",
    "end": "2066690"
  },
  {
    "text": "github.com at the very large loads that that it experiences so that may change",
    "start": "2066690",
    "end": "2072720"
  },
  {
    "text": "at some point in the future but for now a single instance will cover just about every conceivable population of",
    "start": "2072720",
    "end": "2079908"
  },
  {
    "text": "developers and automated loads coming in from DevOps tooling so it's not really a",
    "start": "2079909",
    "end": "2086700"
  },
  {
    "text": "thing the active passive works very well and in fact customers rarely fail over so even that is rarely exercised does",
    "start": "2086700",
    "end": "2095099"
  },
  {
    "text": "that make sense yeah that makes perfect sense I was like a single tier database where it's on the same node the database",
    "start": "2095099",
    "end": "2102390"
  },
  {
    "text": "so with github the SAS what does it use for a back-end database with all the",
    "start": "2102390",
    "end": "2107520"
  },
  {
    "text": "nodes communicating is it are they all communicating is one centralized database or are they also no it's it's a",
    "start": "2107520",
    "end": "2113339"
  },
  {
    "text": "very heavily started my sequel database on github.com and there's a lot of magic with edge networks that honestly I don't",
    "start": "2113339",
    "end": "2119700"
  },
  {
    "text": "know how that works to tell you the truth but with github Enterprise we find again you know 20 22 thousand users a",
    "start": "2119700",
    "end": "2127440"
  },
  {
    "text": "single appliance is still plenty and it's pretty robust thank you how do you",
    "start": "2127440",
    "end": "2135210"
  },
  {
    "text": "handle if you have a AWS has a regional issue and you have your terraform code on there how do you get back service so",
    "start": "2135210",
    "end": "2143910"
  },
  {
    "text": "one thing that we do is we actually have a lambda function that takes a snapshot",
    "start": "2143910",
    "end": "2153990"
  },
  {
    "text": "an EBS volume snapshot of the data volume of our github enterprise backup",
    "start": "2153990",
    "end": "2160619"
  },
  {
    "text": "utilities instance and ships that off over to a different region and you know",
    "start": "2160619",
    "end": "2168960"
  },
  {
    "text": "in the event that we do have a regional failure we would basically",
    "start": "2168960",
    "end": "2175520"
  },
  {
    "text": "point our terraform code to that new region created use it to create our",
    "start": "2175520",
    "end": "2180590"
  },
  {
    "text": "instances and then restore from that backup that exists in that region so I",
    "start": "2180590",
    "end": "2188540"
  },
  {
    "text": "mean it isn't something that's instantaneous it would take long as it takes to restore from a backup but yeah",
    "start": "2188540",
    "end": "2196490"
  },
  {
    "text": "it's that's what we do today to address that anyone else",
    "start": "2196490",
    "end": "2204490"
  },
  {
    "text": "because your user is access your feet have Enterprise versions by the public IP don't do deploy any protection before",
    "start": "2211050",
    "end": "2219410"
  },
  {
    "text": "before the key to have a easy tool so we have been actively looking into that",
    "start": "2219410",
    "end": "2228110"
  },
  {
    "text": "there are some built-in protections with AWS that we've been reviewing but to",
    "start": "2228110",
    "end": "2236730"
  },
  {
    "text": "date it's it's something that's still kind of in flux so we're just still looking at that as you already deploy I",
    "start": "2236730",
    "end": "2246840"
  },
  {
    "text": "think I think for the license particles I think that github.com cost is similar",
    "start": "2246840",
    "end": "2254940"
  },
  {
    "text": "okay to enterprise version as you already choose to use a public IP to",
    "start": "2254940",
    "end": "2261960"
  },
  {
    "text": "provide a service mm-hmm what he's different between the use of github.com",
    "start": "2261960",
    "end": "2267860"
  },
  {
    "text": "directly yep that's a good question so at the time when this decision was made by you",
    "start": "2267860",
    "end": "2276450"
  },
  {
    "text": "know the higher-ups at the time one of the things that really was important to",
    "start": "2276450",
    "end": "2282240"
  },
  {
    "text": "us was sam'l authentication and from what I understand I don't believe that",
    "start": "2282240",
    "end": "2288120"
  },
  {
    "text": "github.com had that capability so we made the jump and went to github",
    "start": "2288120",
    "end": "2294840"
  },
  {
    "text": "Enterprise but today that's not the case github comm does have right so Gabe comm",
    "start": "2294840",
    "end": "2301410"
  },
  {
    "text": "does offer sam'l authentication SSO and a bunch of other features that are making it a more robust business /",
    "start": "2301410",
    "end": "2308010"
  },
  {
    "text": "enterprise platform the primary reasons now that people go with github enterprise are there's three they have",
    "start": "2308010",
    "end": "2317040"
  },
  {
    "text": "specific concerns about where their data are physically stored and there are many countries legal and regulatory",
    "start": "2317040",
    "end": "2323430"
  },
  {
    "text": "frameworks around the world that have something to say about that or a variation on that they're concerned",
    "start": "2323430",
    "end": "2328740"
  },
  {
    "text": "about what type of data they're storing and they want control over that for like actual physical control if they're",
    "start": "2328740",
    "end": "2335070"
  },
  {
    "text": "storing PII or sensitive information for government agencies or things like that and then frankly the the third reason",
    "start": "2335070",
    "end": "2341820"
  },
  {
    "text": "that people choose our self hosted solution is not every shop is at the same point in",
    "start": "2341820",
    "end": "2347610"
  },
  {
    "text": "their journey to the cloud right I think we all sort of realize we're all going there eventually some of us are going faster than others",
    "start": "2347610",
    "end": "2354330"
  },
  {
    "text": "and it's very important I think to be able to meet the needs of customers who aren't ready to put their crown jewels",
    "start": "2354330",
    "end": "2360720"
  },
  {
    "text": "you know the IP that drives their value in a publicly hosted service so in fact on AWS you have you know the",
    "start": "2360720",
    "end": "2368820"
  },
  {
    "text": "same capabilities you'd have with any other application you host there to protect your github Enterprise instance",
    "start": "2368820",
    "end": "2375840"
  },
  {
    "text": "that you're running on AWS so there's nothing specific to AWS that makes it more or less secure obviously from",
    "start": "2375840",
    "end": "2381360"
  },
  {
    "text": "running it in your own datacenter you have plenty of options around how to how to manage access and also frankly how to",
    "start": "2381360",
    "end": "2387930"
  },
  {
    "text": "harden that installation okay thank you",
    "start": "2387930",
    "end": "2392809"
  },
  {
    "text": "all right well I think that I think everybody asked a question that's great",
    "start": "2394310",
    "end": "2400050"
  },
  {
    "text": "a hundred percent coverage callosum thanks you all yes thank you enjoyed the rest of reinvent",
    "start": "2400050",
    "end": "2407840"
  }
]