[
  {
    "text": "good afternoon everybody hope you guys",
    "start": "719",
    "end": "2429"
  },
  {
    "text": "are enjoying reinvent my name is Tilly",
    "start": "2429",
    "end": "5009"
  },
  {
    "text": "Nagar nursing huh uh I got from a dance",
    "start": "5009",
    "end": "6870"
  },
  {
    "text": "corporation so we are here to talk about",
    "start": "6870",
    "end": "9660"
  },
  {
    "text": "a weird McDonald's UCCS to massively",
    "start": "9660",
    "end": "12840"
  },
  {
    "text": "scalar home delivery platform right",
    "start": "12840",
    "end": "15540"
  },
  {
    "text": "let's get right to it so we'll talk a",
    "start": "15540",
    "end": "17940"
  },
  {
    "text": "bit about McDonald's and a home delivery",
    "start": "17940",
    "end": "20010"
  },
  {
    "text": "solution but most of the time today will",
    "start": "20010",
    "end": "22800"
  },
  {
    "text": "be spent on really how we achieved these",
    "start": "22800",
    "end": "25289"
  },
  {
    "text": "things like scalability speed to market",
    "start": "25289",
    "end": "27840"
  },
  {
    "text": "security DevOps",
    "start": "27840",
    "end": "29699"
  },
  {
    "text": "and monitoring so here's some",
    "start": "29699",
    "end": "33480"
  },
  {
    "text": "interesting facts about McDonald's um we",
    "start": "33480",
    "end": "36329"
  },
  {
    "text": "have 37,000 restaurants",
    "start": "36329",
    "end": "38879"
  },
  {
    "text": "spread across 120 countries globally and",
    "start": "38879",
    "end": "42809"
  },
  {
    "text": "we proudly serve about 64 million",
    "start": "42809",
    "end": "45000"
  },
  {
    "text": "customers every day right",
    "start": "45000",
    "end": "47370"
  },
  {
    "text": "as you know scalability is a difficult",
    "start": "47370",
    "end": "50129"
  },
  {
    "text": "problem but scalability with a",
    "start": "50129",
    "end": "52110"
  },
  {
    "text": "distributed network like this as well as",
    "start": "52110",
    "end": "54570"
  },
  {
    "text": "this level of volumes in terms of scale",
    "start": "54570",
    "end": "57719"
  },
  {
    "text": "is even a tougher problem for us to",
    "start": "57719",
    "end": "59460"
  },
  {
    "text": "solve right we'll talk a bit about that",
    "start": "59460",
    "end": "61230"
  },
  {
    "text": "as we go on here's some of the velocity",
    "start": "61230",
    "end": "64290"
  },
  {
    "text": "accelerators that v8 models use number",
    "start": "64290",
    "end": "67200"
  },
  {
    "text": "one being our digital transformation the",
    "start": "67200",
    "end": "69840"
  },
  {
    "text": "whole premise of our digital",
    "start": "69840",
    "end": "71070"
  },
  {
    "text": "transformation is to make it more",
    "start": "71070",
    "end": "73350"
  },
  {
    "text": "convenient as well as personalized for",
    "start": "73350",
    "end": "76470"
  },
  {
    "text": "our customers to make the whole",
    "start": "76470",
    "end": "77610"
  },
  {
    "text": "experience personalized the second",
    "start": "77610",
    "end": "80250"
  },
  {
    "text": "pillar is delivery again drawing on that",
    "start": "80250",
    "end": "82439"
  },
  {
    "text": "convenience team how would we deliver",
    "start": "82439",
    "end": "85110"
  },
  {
    "text": "our food to you when you want to have",
    "start": "85110",
    "end": "87180"
  },
  {
    "text": "our food and then the third aspect is",
    "start": "87180",
    "end": "89909"
  },
  {
    "text": "the experience of the future this is to",
    "start": "89909",
    "end": "91950"
  },
  {
    "text": "actually elevate the restaurant",
    "start": "91950",
    "end": "93840"
  },
  {
    "text": "experience and modernize the restaurant",
    "start": "93840",
    "end": "95880"
  },
  {
    "text": "experience for our customers right so",
    "start": "95880",
    "end": "98310"
  },
  {
    "text": "let's get to the home delivery solution",
    "start": "98310",
    "end": "100560"
  },
  {
    "text": "this is where we use DCs to really scale",
    "start": "100560",
    "end": "103850"
  },
  {
    "text": "we think of this as you as a customer",
    "start": "103850",
    "end": "107460"
  },
  {
    "text": "going to something like uber eats and",
    "start": "107460",
    "end": "109560"
  },
  {
    "text": "ordering McDonald's food for delivery",
    "start": "109560",
    "end": "111329"
  },
  {
    "text": "right so that's kind of the business",
    "start": "111329",
    "end": "113520"
  },
  {
    "text": "problem and use case as we work with",
    "start": "113520",
    "end": "117329"
  },
  {
    "text": "multiple delivery partners in the world",
    "start": "117329",
    "end": "119549"
  },
  {
    "text": "here in the States we use uber uber eats",
    "start": "119549",
    "end": "123810"
  },
  {
    "text": "and in European countries we have other",
    "start": "123810",
    "end": "126030"
  },
  {
    "text": "partners Asia countries we have",
    "start": "126030",
    "end": "127829"
  },
  {
    "text": "furthermore partners right we've used a",
    "start": "127829",
    "end": "130229"
  },
  {
    "text": "generic experience flow for you to walk",
    "start": "130229",
    "end": "132450"
  },
  {
    "text": "through",
    "start": "132450",
    "end": "132750"
  },
  {
    "text": "the user experience it starts by",
    "start": "132750",
    "end": "135810"
  },
  {
    "text": "basically you were picking up a",
    "start": "135810",
    "end": "137730"
  },
  {
    "text": "restaurant of to order from then you",
    "start": "137730",
    "end": "141180"
  },
  {
    "text": "obviously browse through the menu right",
    "start": "141180",
    "end": "142890"
  },
  {
    "text": "and I've used our signature crafted",
    "start": "142890",
    "end": "145890"
  },
  {
    "text": "sandwiches here to illustrate and then",
    "start": "145890",
    "end": "148080"
  },
  {
    "text": "you basically complete your order build",
    "start": "148080",
    "end": "151230"
  },
  {
    "text": "your order basket and complete your",
    "start": "151230",
    "end": "152459"
  },
  {
    "text": "order right at this point and the order",
    "start": "152459",
    "end": "155640"
  },
  {
    "text": "is compete and then then the delivery",
    "start": "155640",
    "end": "158820"
  },
  {
    "text": "Rider or driver is close to one of our",
    "start": "158820",
    "end": "161550"
  },
  {
    "text": "restaurants the order gets released to",
    "start": "161550",
    "end": "164250"
  },
  {
    "text": "the restaurant which we believe in",
    "start": "164250",
    "end": "165959"
  },
  {
    "text": "making our food fresh as much as",
    "start": "165959",
    "end": "168750"
  },
  {
    "text": "possible as well as giving it to them to",
    "start": "168750",
    "end": "171600"
  },
  {
    "text": "the driver to be delivered to you so",
    "start": "171600",
    "end": "173730"
  },
  {
    "text": "that's kind of the whole business",
    "start": "173730",
    "end": "174690"
  },
  {
    "text": "problem that we're going to talk about",
    "start": "174690",
    "end": "176540"
  },
  {
    "text": "so what were some of the critical",
    "start": "176540",
    "end": "178680"
  },
  {
    "text": "business requirements for this right so",
    "start": "178680",
    "end": "180450"
  },
  {
    "text": "um author I mentioned about speed to",
    "start": "180450",
    "end": "183120"
  },
  {
    "text": "market right so this was actually a four",
    "start": "183120",
    "end": "186000"
  },
  {
    "text": "month duration for us and that's from",
    "start": "186000",
    "end": "187950"
  },
  {
    "text": "going from a idea to a concept to",
    "start": "187950",
    "end": "190800"
  },
  {
    "text": "development to massive scale right and",
    "start": "190800",
    "end": "193080"
  },
  {
    "text": "that's kind of the new norm that we see",
    "start": "193080",
    "end": "195390"
  },
  {
    "text": "every day right scalability and",
    "start": "195390",
    "end": "197459"
  },
  {
    "text": "reliability are 250 to 500 thousand",
    "start": "197459",
    "end": "200580"
  },
  {
    "text": "transactions and the notion of peak hour",
    "start": "200580",
    "end": "202860"
  },
  {
    "text": "for us happens three times a day every",
    "start": "202860",
    "end": "205500"
  },
  {
    "text": "day right because you got to eat with",
    "start": "205500",
    "end": "207299"
  },
  {
    "text": "this breakfast lunch and dinner right",
    "start": "207299",
    "end": "209120"
  },
  {
    "text": "and to put this in perspective this 250",
    "start": "209120",
    "end": "213120"
  },
  {
    "text": "to 500 thousand transactions per hour",
    "start": "213120",
    "end": "214940"
  },
  {
    "text": "translates to about twenty thousand",
    "start": "214940",
    "end": "217230"
  },
  {
    "text": "transactions per second right so that's",
    "start": "217230",
    "end": "220049"
  },
  {
    "text": "kind of the scale that we're talking",
    "start": "220049",
    "end": "221100"
  },
  {
    "text": "about here multiple countries support um",
    "start": "221100",
    "end": "223890"
  },
  {
    "text": "as I said there's different countries",
    "start": "223890",
    "end": "225540"
  },
  {
    "text": "have different business requirements",
    "start": "225540",
    "end": "226829"
  },
  {
    "text": "business rules and then also different",
    "start": "226829",
    "end": "228690"
  },
  {
    "text": "delivery partners such as uber eats",
    "start": "228690",
    "end": "230459"
  },
  {
    "text": "right to work with so the platform had",
    "start": "230459",
    "end": "232260"
  },
  {
    "text": "to do that and then finally the cost",
    "start": "232260",
    "end": "234600"
  },
  {
    "text": "sensitivity right so again we are not",
    "start": "234600",
    "end": "237000"
  },
  {
    "text": "talking about selling big screen TVs",
    "start": "237000",
    "end": "239190"
  },
  {
    "text": "here you're talking about an average",
    "start": "239190",
    "end": "240360"
  },
  {
    "text": "cheque size of about three to five",
    "start": "240360",
    "end": "242489"
  },
  {
    "text": "dollars as low as that right so cost",
    "start": "242489",
    "end": "244620"
  },
  {
    "text": "sensitivity is a pretty big thing for us",
    "start": "244620",
    "end": "246900"
  },
  {
    "text": "as well so we can spend a bit of time on",
    "start": "246900",
    "end": "249600"
  },
  {
    "text": "our architecture so this is a under the",
    "start": "249600",
    "end": "251579"
  },
  {
    "text": "covers look of our architecture we see",
    "start": "251579",
    "end": "254370"
  },
  {
    "text": "here so the experience that we went",
    "start": "254370",
    "end": "256560"
  },
  {
    "text": "through starts here which is the third",
    "start": "256560",
    "end": "258750"
  },
  {
    "text": "party delivery platform right so think",
    "start": "258750",
    "end": "262440"
  },
  {
    "text": "of this like uber eats right then all",
    "start": "262440",
    "end": "265169"
  },
  {
    "text": "our API",
    "start": "265169",
    "end": "266450"
  },
  {
    "text": "are hosted through what's called API",
    "start": "266450",
    "end": "268790"
  },
  {
    "text": "middleware 8 this is consistently using",
    "start": "268790",
    "end": "271730"
  },
  {
    "text": "the API gateway pattern right these are",
    "start": "271730",
    "end": "275030"
  },
  {
    "text": "all REST API that's then wired through",
    "start": "275030",
    "end": "278630"
  },
  {
    "text": "lbs to easiest right and as you can see",
    "start": "278630",
    "end": "282020"
  },
  {
    "text": "ECS is the heart of the solution within",
    "start": "282020",
    "end": "285170"
  },
  {
    "text": "acs we have multiple micro services for",
    "start": "285170",
    "end": "288200"
  },
  {
    "text": "illustration purposes we've used to",
    "start": "288200",
    "end": "289790"
  },
  {
    "text": "write but it's important to understand",
    "start": "289790",
    "end": "292850"
  },
  {
    "text": "that these micro services also have",
    "start": "292850",
    "end": "295160"
  },
  {
    "text": "different scale and runtime profiles",
    "start": "295160",
    "end": "297080"
  },
  {
    "text": "right so for example some services that",
    "start": "297080",
    "end": "299300"
  },
  {
    "text": "are customer facing will have tremendous",
    "start": "299300",
    "end": "302390"
  },
  {
    "text": "scale tremendous reliability tremendous",
    "start": "302390",
    "end": "306290"
  },
  {
    "text": "performance requirements right because",
    "start": "306290",
    "end": "307880"
  },
  {
    "text": "its front facing you're hitting that",
    "start": "307880",
    "end": "309920"
  },
  {
    "text": "20,000 TPS all day long right some",
    "start": "309920",
    "end": "314150"
  },
  {
    "text": "services could be more like about",
    "start": "314150",
    "end": "317270"
  },
  {
    "text": "complex event processing type scenarios",
    "start": "317270",
    "end": "319730"
  },
  {
    "text": "where workload optimization is what's",
    "start": "319730",
    "end": "322160"
  },
  {
    "text": "important as Laura mentioned arm you",
    "start": "322160",
    "end": "324770"
  },
  {
    "text": "could use different scale profiles using",
    "start": "324770",
    "end": "327560"
  },
  {
    "text": "the auto scale policies and cloud watch",
    "start": "327560",
    "end": "329780"
  },
  {
    "text": "alarms to trigger data scale policy as",
    "start": "329780",
    "end": "331700"
  },
  {
    "text": "well as you could use things like task",
    "start": "331700",
    "end": "334220"
  },
  {
    "text": "placement strategy to further optimize",
    "start": "334220",
    "end": "335960"
  },
  {
    "text": "right and we will go into a bit more",
    "start": "335960",
    "end": "337730"
  },
  {
    "text": "detail about how we did that to achieve",
    "start": "337730",
    "end": "340100"
  },
  {
    "text": "that scale obviously the order goes to",
    "start": "340100",
    "end": "342590"
  },
  {
    "text": "the restaurant right and then behind the",
    "start": "342590",
    "end": "344750"
  },
  {
    "text": "scenes for eventing we use sqs right so",
    "start": "344750",
    "end": "347720"
  },
  {
    "text": "think of this as one service wanting to",
    "start": "347720",
    "end": "349910"
  },
  {
    "text": "talk to the next service rate through a",
    "start": "349910",
    "end": "351860"
  },
  {
    "text": "asynchronous pattern we use eventing",
    "start": "351860",
    "end": "354170"
  },
  {
    "text": "exclusively for that right and it's not",
    "start": "354170",
    "end": "357230"
  },
  {
    "text": "just about scale it's also to be highly",
    "start": "357230",
    "end": "360080"
  },
  {
    "text": "responsive and performant right to do",
    "start": "360080",
    "end": "362930"
  },
  {
    "text": "that you need to have a lot of things in",
    "start": "362930",
    "end": "364880"
  },
  {
    "text": "memory right so we use Redis as are",
    "start": "364880",
    "end": "367430"
  },
  {
    "text": "distributed the caching platform right",
    "start": "367430",
    "end": "369460"
  },
  {
    "text": "and it's actually hosted through",
    "start": "369460",
    "end": "371960"
  },
  {
    "text": "ElastiCache right so that's how we",
    "start": "371960",
    "end": "375230"
  },
  {
    "text": "really hit those transaction volumes at",
    "start": "375230",
    "end": "378380"
  },
  {
    "text": "about 100 milliseconds or lower right",
    "start": "378380",
    "end": "380960"
  },
  {
    "text": "for each call and then obviously it",
    "start": "380960",
    "end": "384440"
  },
  {
    "text": "cannot only be on memory so you have RDS",
    "start": "384440",
    "end": "386560"
  },
  {
    "text": "backing readies up as well as s3 for",
    "start": "386560",
    "end": "389510"
  },
  {
    "text": "some of the most unstructured data all",
    "start": "389510",
    "end": "392870"
  },
  {
    "text": "right so that hopefully gives you an",
    "start": "392870",
    "end": "394430"
  },
  {
    "text": "idea about our architecture and how we",
    "start": "394430",
    "end": "396380"
  },
  {
    "text": "achieved some of these big volumes such",
    "start": "396380",
    "end": "399050"
  },
  {
    "text": "as 20,000 TPS",
    "start": "399050",
    "end": "401080"
  },
  {
    "text": "so what were some of the principles that",
    "start": "401080",
    "end": "403610"
  },
  {
    "text": "we use right um",
    "start": "403610",
    "end": "405050"
  },
  {
    "text": "again microservices some is this is not",
    "start": "405050",
    "end": "408620"
  },
  {
    "text": "going to be a talk about microservices",
    "start": "408620",
    "end": "410120"
  },
  {
    "text": "but here's some principles that we use",
    "start": "410120",
    "end": "411949"
  },
  {
    "text": "right",
    "start": "411949",
    "end": "412550"
  },
  {
    "text": "having your clean api's right was number",
    "start": "412550",
    "end": "415400"
  },
  {
    "text": "one then having a good service model",
    "start": "415400",
    "end": "418130"
  },
  {
    "text": "behind that API or was number two right",
    "start": "418130",
    "end": "420740"
  },
  {
    "text": "and then then it depends on what level",
    "start": "420740",
    "end": "424639"
  },
  {
    "text": "of isolation you require right so you",
    "start": "424639",
    "end": "427280"
  },
  {
    "text": "date a model to be isolated as well as",
    "start": "427280",
    "end": "429889"
  },
  {
    "text": "you have deployments to be isolated so",
    "start": "429889",
    "end": "431870"
  },
  {
    "text": "that each micro service can be deployed",
    "start": "431870",
    "end": "434030"
  },
  {
    "text": "independently right so getting your",
    "start": "434030",
    "end": "435889"
  },
  {
    "text": "micro service strategy is critical for",
    "start": "435889",
    "end": "438100"
  },
  {
    "text": "containerization right and then once you",
    "start": "438100",
    "end": "441290"
  },
  {
    "text": "get the containerization right",
    "start": "441290",
    "end": "443440"
  },
  {
    "text": "orchestration of that containerization",
    "start": "443440",
    "end": "445729"
  },
  {
    "text": "is very important to massively scale",
    "start": "445729",
    "end": "448760"
  },
  {
    "text": "right and this is where a platform like",
    "start": "448760",
    "end": "452419"
  },
  {
    "text": "easiest shines because you get most of",
    "start": "452419",
    "end": "455479"
  },
  {
    "text": "them out of the box we also made a",
    "start": "455479",
    "end": "458990"
  },
  {
    "text": "conscious decision to use most of our",
    "start": "458990",
    "end": "461710"
  },
  {
    "text": "platform services from AWS this is",
    "start": "461710",
    "end": "464720"
  },
  {
    "text": "rather than you maintaining your own",
    "start": "464720",
    "end": "466130"
  },
  {
    "text": "database cluster or you maintaining your",
    "start": "466130",
    "end": "468620"
  },
  {
    "text": "own caching cluster right use these",
    "start": "468620",
    "end": "470960"
  },
  {
    "text": "services because they are scalable",
    "start": "470960",
    "end": "472190"
  },
  {
    "text": "out-of-the-box right so that was a",
    "start": "472190",
    "end": "474020"
  },
  {
    "text": "conscious decision that we made and",
    "start": "474020",
    "end": "475490"
  },
  {
    "text": "finally for the developers and software",
    "start": "475490",
    "end": "477320"
  },
  {
    "text": "engineers in the room right on your",
    "start": "477320",
    "end": "479360"
  },
  {
    "text": "programming model right if you are again",
    "start": "479360",
    "end": "482150"
  },
  {
    "text": "having a highly critical customer facing",
    "start": "482150",
    "end": "484180"
  },
  {
    "text": "micro service use a synchronous",
    "start": "484180",
    "end": "486470"
  },
  {
    "text": "programming model right if you are",
    "start": "486470",
    "end": "488450"
  },
  {
    "text": "having a complex event processing type",
    "start": "488450",
    "end": "490880"
  },
  {
    "text": "scenario use an async programming model",
    "start": "490880",
    "end": "493160"
  },
  {
    "text": "use that programming model to build your",
    "start": "493160",
    "end": "495410"
  },
  {
    "text": "micro service and then containerize",
    "start": "495410",
    "end": "496849"
  },
  {
    "text": "right that will save you a lot of time",
    "start": "496849",
    "end": "500169"
  },
  {
    "text": "all right",
    "start": "500169",
    "end": "501349"
  },
  {
    "text": "so let's go on to the covers and really",
    "start": "501349",
    "end": "504200"
  },
  {
    "text": "hit some of these things right so we're",
    "start": "504200",
    "end": "506030"
  },
  {
    "text": "talking going to talk about speed to",
    "start": "506030",
    "end": "507710"
  },
  {
    "text": "market right how we achieved that",
    "start": "507710",
    "end": "509270"
  },
  {
    "text": "scalability and reliability what type of",
    "start": "509270",
    "end": "511729"
  },
  {
    "text": "task placement strategies or auto",
    "start": "511729",
    "end": "513529"
  },
  {
    "text": "scaling policies did we use right I'm",
    "start": "513529",
    "end": "515330"
  },
  {
    "text": "going to get into the meat of that",
    "start": "515330",
    "end": "516440"
  },
  {
    "text": "security is all about you know reducing",
    "start": "516440",
    "end": "520070"
  },
  {
    "text": "your blast radius and attack vectors",
    "start": "520070",
    "end": "522409"
  },
  {
    "text": "right so how did we do that at the",
    "start": "522409",
    "end": "524060"
  },
  {
    "text": "container level as well as at the",
    "start": "524060",
    "end": "525350"
  },
  {
    "text": "service level right finally we'll talk",
    "start": "525350",
    "end": "527570"
  },
  {
    "text": "about DevOps how did we integrate our",
    "start": "527570",
    "end": "530660"
  },
  {
    "text": "DevOps pipeline I would just based out",
    "start": "530660",
    "end": "532610"
  },
  {
    "text": "of Jenkins",
    "start": "532610",
    "end": "533810"
  },
  {
    "text": "and then also monitoring once you take",
    "start": "533810",
    "end": "536000"
  },
  {
    "text": "it to production how do you monitor",
    "start": "536000",
    "end": "537410"
  },
  {
    "text": "significantly so let's get right to",
    "start": "537410",
    "end": "540790"
  },
  {
    "text": "speed to market right we talked about",
    "start": "540790",
    "end": "543200"
  },
  {
    "text": "the four month it's not just about the",
    "start": "543200",
    "end": "545029"
  },
  {
    "text": "four months though right it's about also",
    "start": "545029",
    "end": "546920"
  },
  {
    "text": "showing progress to back to your",
    "start": "546920",
    "end": "548450"
  },
  {
    "text": "business right in this case how do we",
    "start": "548450",
    "end": "550670"
  },
  {
    "text": "build this continuously and show",
    "start": "550670",
    "end": "552380"
  },
  {
    "text": "progress and we had like two week dev",
    "start": "552380",
    "end": "555110"
  },
  {
    "text": "iterations for this rate what we're",
    "start": "555110",
    "end": "557690"
  },
  {
    "text": "easiest and containers really help is",
    "start": "557690",
    "end": "559670"
  },
  {
    "text": "you could really have your dev",
    "start": "559670",
    "end": "560839"
  },
  {
    "text": "containers then go to staging show",
    "start": "560839",
    "end": "563300"
  },
  {
    "text": "progress to your business uses very",
    "start": "563300",
    "end": "565820"
  },
  {
    "text": "rapidly right so that was one of the big",
    "start": "565820",
    "end": "568279"
  },
  {
    "text": "premises of this right then the second",
    "start": "568279",
    "end": "570680"
  },
  {
    "text": "thing is the poly got tech stack right",
    "start": "570680",
    "end": "573020"
  },
  {
    "text": "so you're bound to have board that's",
    "start": "573020",
    "end": "575210"
  },
  {
    "text": "written in different languages right so",
    "start": "575210",
    "end": "576860"
  },
  {
    "text": "in our case we have some code in dotted",
    "start": "576860",
    "end": "579290"
  },
  {
    "text": "and some code in Java right some of this",
    "start": "579290",
    "end": "581870"
  },
  {
    "text": "might be legacy code that you need to",
    "start": "581870",
    "end": "583490"
  },
  {
    "text": "port over right some of this might be",
    "start": "583490",
    "end": "586040"
  },
  {
    "text": "like Java is better than dotnet for",
    "start": "586040",
    "end": "588020"
  },
  {
    "text": "certain things right but if the good ol",
    "start": "588020",
    "end": "590900"
  },
  {
    "text": "days you have to like do native",
    "start": "590900",
    "end": "594260"
  },
  {
    "text": "integration from dotnet to Java right",
    "start": "594260",
    "end": "596480"
  },
  {
    "text": "but the beauty of something like",
    "start": "596480",
    "end": "599200"
  },
  {
    "text": "containerization as well as ECS is now",
    "start": "599200",
    "end": "601910"
  },
  {
    "text": "you could host it in two different",
    "start": "601910",
    "end": "603530"
  },
  {
    "text": "containers right and make the true",
    "start": "603530",
    "end": "605360"
  },
  {
    "text": "containers talk to each other through an",
    "start": "605360",
    "end": "606740"
  },
  {
    "text": "API right so that was also pretty big",
    "start": "606740",
    "end": "609020"
  },
  {
    "text": "benefit to achieve speed the simplified",
    "start": "609020",
    "end": "612170"
  },
  {
    "text": "easiest deployment model or throbbin",
    "start": "612170",
    "end": "614120"
  },
  {
    "text": "through that in detail so I'll skip that",
    "start": "614120",
    "end": "615950"
  },
  {
    "text": "point here's another important thing",
    "start": "615950",
    "end": "618440"
  },
  {
    "text": "right so typically you as good",
    "start": "618440",
    "end": "620360"
  },
  {
    "text": "developers we all write code right and",
    "start": "620360",
    "end": "622790"
  },
  {
    "text": "then we basically do a level of testing",
    "start": "622790",
    "end": "626300"
  },
  {
    "text": "do a level of performance testing right",
    "start": "626300",
    "end": "628400"
  },
  {
    "text": "and then take this massive cycle of",
    "start": "628400",
    "end": "632410"
  },
  {
    "text": "integration and scaling right so to hit",
    "start": "632410",
    "end": "635720"
  },
  {
    "text": "these volumes normally takes a long time",
    "start": "635720",
    "end": "638180"
  },
  {
    "text": "right but the good news is if you",
    "start": "638180",
    "end": "640010"
  },
  {
    "text": "containerize this right and use ECS and",
    "start": "640010",
    "end": "642200"
  },
  {
    "text": "the correct auto scaling and task",
    "start": "642200",
    "end": "644570"
  },
  {
    "text": "placement strategies we almost got this",
    "start": "644570",
    "end": "647030"
  },
  {
    "text": "out of the box right so it was a pretty",
    "start": "647030",
    "end": "649490"
  },
  {
    "text": "significant point for us and then",
    "start": "649490",
    "end": "651140"
  },
  {
    "text": "finally the devops integration is yes",
    "start": "651140",
    "end": "654740"
  },
  {
    "text": "integrating with our DevOps tool chain",
    "start": "654740",
    "end": "656390"
  },
  {
    "text": "very easily really helped us right so",
    "start": "656390",
    "end": "658490"
  },
  {
    "text": "that speed to market next we'll talk",
    "start": "658490",
    "end": "661279"
  },
  {
    "text": "about scalability and reliability so I'm",
    "start": "661279",
    "end": "663620"
  },
  {
    "text": "going to introduce one of my solutions",
    "start": "663620",
    "end": "665240"
  },
  {
    "text": "architect",
    "start": "665240",
    "end": "666690"
  },
  {
    "text": "Sylva he's going to talk about not only",
    "start": "666690",
    "end": "669560"
  },
  {
    "text": "scalability and reliability but also",
    "start": "669560",
    "end": "671970"
  },
  {
    "text": "security and also DevOps as well as",
    "start": "671970",
    "end": "674730"
  },
  {
    "text": "he'll end with some real-world container",
    "start": "674730",
    "end": "677610"
  },
  {
    "text": "problems that we had to face and",
    "start": "677610",
    "end": "679290"
  },
  {
    "text": "overcome right to scale to this level",
    "start": "679290",
    "end": "681480"
  },
  {
    "text": "won't you come on Joe Silva so let me",
    "start": "681480",
    "end": "689220"
  },
  {
    "text": "for the next few slides what I will do",
    "start": "689220",
    "end": "691530"
  },
  {
    "text": "is I'm good to run through how we use",
    "start": "691530",
    "end": "694440"
  },
  {
    "text": "ecs as well as other AWS features to",
    "start": "694440",
    "end": "698250"
  },
  {
    "text": "achieve the non-functional requirements",
    "start": "698250",
    "end": "699990"
  },
  {
    "text": "right so let's start with the",
    "start": "699990",
    "end": "701550"
  },
  {
    "text": "scalability and reliability so as still",
    "start": "701550",
    "end": "703830"
  },
  {
    "text": "dimension we got the we got the scale",
    "start": "703830",
    "end": "706290"
  },
  {
    "text": "targets to achieve 250 to 500 thousand",
    "start": "706290",
    "end": "709320"
  },
  {
    "text": "orders per hour with about 100",
    "start": "709320",
    "end": "711420"
  },
  {
    "text": "millisecond response time so how we",
    "start": "711420",
    "end": "714060"
  },
  {
    "text": "achieve this by using auto scaling with",
    "start": "714060",
    "end": "717720"
  },
  {
    "text": "which ECS provides out-of-the-box right",
    "start": "717720",
    "end": "720000"
  },
  {
    "text": "as ultra mentioned right you just have",
    "start": "720000",
    "end": "721710"
  },
  {
    "text": "to configure the the policies for the",
    "start": "721710",
    "end": "725160"
  },
  {
    "text": "auto scaling and it will work so SES",
    "start": "725160",
    "end": "728130"
  },
  {
    "text": "auto scaling will provide two levels of",
    "start": "728130",
    "end": "729900"
  },
  {
    "text": "auto scale one is for the ECS the ec2",
    "start": "729900",
    "end": "734010"
  },
  {
    "text": "layer which will scale your EC tools and",
    "start": "734010",
    "end": "736500"
  },
  {
    "text": "the second layer is to scale your tasks",
    "start": "736500",
    "end": "740690"
  },
  {
    "text": "so how we approach this was we initially",
    "start": "740690",
    "end": "744210"
  },
  {
    "text": "did some performance tests to run some",
    "start": "744210",
    "end": "746850"
  },
  {
    "text": "load to mimic cover production to",
    "start": "746850",
    "end": "749850"
  },
  {
    "text": "identify what is our production load is",
    "start": "749850",
    "end": "753000"
  },
  {
    "text": "going to look like because this is",
    "start": "753000",
    "end": "754650"
  },
  {
    "text": "really important you need to know how is",
    "start": "754650",
    "end": "756570"
  },
  {
    "text": "your load is going to look like in the",
    "start": "756570",
    "end": "759750"
  },
  {
    "text": "production so with that we were able to",
    "start": "759750",
    "end": "762000"
  },
  {
    "text": "derive the attributes or the thresholds",
    "start": "762000",
    "end": "765540"
  },
  {
    "text": "for those our auto scaling policies so",
    "start": "765540",
    "end": "768330"
  },
  {
    "text": "then we configure the ec2 auto scaling",
    "start": "768330",
    "end": "770910"
  },
  {
    "text": "policies as well as the content auto",
    "start": "770910",
    "end": "772650"
  },
  {
    "text": "scaling policies and also it's very",
    "start": "772650",
    "end": "775470"
  },
  {
    "text": "critical to get this values corrected",
    "start": "775470",
    "end": "778800"
  },
  {
    "text": "because otherwise you will have some",
    "start": "778800",
    "end": "780720"
  },
  {
    "text": "issues when you are scaling out as well",
    "start": "780720",
    "end": "782430"
  },
  {
    "text": "and scaling it so it's pretty important",
    "start": "782430",
    "end": "784560"
  },
  {
    "text": "to get that corrected at the first time",
    "start": "784560",
    "end": "787400"
  },
  {
    "text": "so once we done read that you know we",
    "start": "787400",
    "end": "789960"
  },
  {
    "text": "were able to achieve the targets right",
    "start": "789960",
    "end": "792060"
  },
  {
    "text": "to 250 to find a thousand orders per",
    "start": "792060",
    "end": "795810"
  },
  {
    "text": "hour and the next task was to kind of",
    "start": "795810",
    "end": "799620"
  },
  {
    "text": "fine-tune this",
    "start": "799620",
    "end": "800579"
  },
  {
    "text": "right so we got two more requirements as",
    "start": "800579",
    "end": "803279"
  },
  {
    "text": "still I mentioned before the two",
    "start": "803279",
    "end": "805230"
  },
  {
    "text": "requirements that we got was to make",
    "start": "805230",
    "end": "807149"
  },
  {
    "text": "sure some of the containers should run",
    "start": "807149",
    "end": "809579"
  },
  {
    "text": "in isolation all right so we have some",
    "start": "809579",
    "end": "812009"
  },
  {
    "text": "requirements say that for instance you",
    "start": "812009",
    "end": "814290"
  },
  {
    "text": "know certain country we need to run",
    "start": "814290",
    "end": "817319"
  },
  {
    "text": "those containers in isolation from the",
    "start": "817319",
    "end": "818999"
  },
  {
    "text": "others right so that wasn't one of the",
    "start": "818999",
    "end": "820470"
  },
  {
    "text": "requirements the second requirement",
    "start": "820470",
    "end": "822179"
  },
  {
    "text": "swastikas cost sensitivity which that",
    "start": "822179",
    "end": "824790"
  },
  {
    "text": "you need to optimize your cost right so",
    "start": "824790",
    "end": "827699"
  },
  {
    "text": "those two requirements we were able to",
    "start": "827699",
    "end": "829470"
  },
  {
    "text": "achieve by using the task placement",
    "start": "829470",
    "end": "832499"
  },
  {
    "text": "strategies and the constraints so you",
    "start": "832499",
    "end": "835019"
  },
  {
    "text": "just want to show how we use the task",
    "start": "835019",
    "end": "837360"
  },
  {
    "text": "placement strategies and the constraints",
    "start": "837360",
    "end": "839279"
  },
  {
    "text": "I I have given like three examples here",
    "start": "839279",
    "end": "842279"
  },
  {
    "text": "by three services and these three",
    "start": "842279",
    "end": "845279"
  },
  {
    "text": "services will have different",
    "start": "845279",
    "end": "846600"
  },
  {
    "text": "requirements in terms of scalability and",
    "start": "846600",
    "end": "849420"
  },
  {
    "text": "our reliable right so let's take the",
    "start": "849420",
    "end": "852569"
  },
  {
    "text": "first service so the first service will",
    "start": "852569",
    "end": "854879"
  },
  {
    "text": "require a high availability and also",
    "start": "854879",
    "end": "857519"
  },
  {
    "text": "reliability and the second service we",
    "start": "857519",
    "end": "861239"
  },
  {
    "text": "would like to it suggests a batch mode",
    "start": "861239",
    "end": "863610"
  },
  {
    "text": "match processing mode but that requires",
    "start": "863610",
    "end": "867929"
  },
  {
    "text": "two we need to optimize the load on the",
    "start": "867929",
    "end": "870569"
  },
  {
    "text": "cluster so that's the requirements for",
    "start": "870569",
    "end": "873029"
  },
  {
    "text": "the second service the third service",
    "start": "873029",
    "end": "875459"
  },
  {
    "text": "which I was talking earlier which",
    "start": "875459",
    "end": "878100"
  },
  {
    "text": "requires some kind of isolation from the",
    "start": "878100",
    "end": "880290"
  },
  {
    "text": "other containers so let's go back and",
    "start": "880290",
    "end": "884369"
  },
  {
    "text": "see how we use this placement strategies",
    "start": "884369",
    "end": "887369"
  },
  {
    "text": "and constraints to achieve these right",
    "start": "887369",
    "end": "889889"
  },
  {
    "text": "so I just want to fit to this diagram so",
    "start": "889889",
    "end": "893129"
  },
  {
    "text": "the diagram shows you right on the top",
    "start": "893129",
    "end": "894809"
  },
  {
    "text": "you can see the tasks or the containers",
    "start": "894809",
    "end": "897419"
  },
  {
    "text": "get auto scale using the policies that",
    "start": "897419",
    "end": "899790"
  },
  {
    "text": "you have configured right and the bottom",
    "start": "899790",
    "end": "902249"
  },
  {
    "text": "you can see the easy tools are getting",
    "start": "902249",
    "end": "904350"
  },
  {
    "text": "auto scale again using the auto scaling",
    "start": "904350",
    "end": "906689"
  },
  {
    "text": "policies that you have and in the middle",
    "start": "906689",
    "end": "909419"
  },
  {
    "text": "you can see the task placement",
    "start": "909419",
    "end": "911669"
  },
  {
    "text": "strategies and the constraints are",
    "start": "911669",
    "end": "913350"
  },
  {
    "text": "applied so that the we the easiest can",
    "start": "913350",
    "end": "917549"
  },
  {
    "text": "decide exactly where the tasks has to be",
    "start": "917549",
    "end": "920429"
  },
  {
    "text": "placed into the which a c2 has to be",
    "start": "920429",
    "end": "923999"
  },
  {
    "text": "placed right okay let's go back to the",
    "start": "923999",
    "end": "926639"
  },
  {
    "text": "those example three examples that I had",
    "start": "926639",
    "end": "929449"
  },
  {
    "text": "first service one service one know if",
    "start": "929449",
    "end": "932339"
  },
  {
    "text": "you can remember it require",
    "start": "932339",
    "end": "933949"
  },
  {
    "text": "high availability which means that we",
    "start": "933949",
    "end": "937429"
  },
  {
    "text": "need to have that tasks across all our",
    "start": "937429",
    "end": "940069"
  },
  {
    "text": "availabilities milestones so for that we",
    "start": "940069",
    "end": "943369"
  },
  {
    "text": "use the spaceman strategy called spread",
    "start": "943369",
    "end": "945619"
  },
  {
    "text": "and the attribute here we have specified",
    "start": "945619",
    "end": "948079"
  },
  {
    "text": "as availability zone which means that",
    "start": "948079",
    "end": "950929"
  },
  {
    "text": "when the easiest place in those tasks it",
    "start": "950929",
    "end": "954019"
  },
  {
    "text": "will make sure that it will place all",
    "start": "954019",
    "end": "956600"
  },
  {
    "text": "the tasks across all the availability",
    "start": "956600",
    "end": "958609"
  },
  {
    "text": "zones that we have in our cluster right",
    "start": "958609",
    "end": "961160"
  },
  {
    "text": "but as dimension you can have different",
    "start": "961160",
    "end": "964309"
  },
  {
    "text": "attributes like you can have instance",
    "start": "964309",
    "end": "965959"
  },
  {
    "text": "type or in certain IDs depends on your",
    "start": "965959",
    "end": "968059"
  },
  {
    "text": "use case but for us it's the ability so",
    "start": "968059",
    "end": "971019"
  },
  {
    "text": "ok let's go to the service to service to",
    "start": "971019",
    "end": "974119"
  },
  {
    "text": "was a batch processing service so we",
    "start": "974119",
    "end": "979549"
  },
  {
    "text": "want to make sure that process runs in a",
    "start": "979549",
    "end": "981949"
  },
  {
    "text": "more efficient way right so that will",
    "start": "981949",
    "end": "983600"
  },
  {
    "text": "kind of goes to our cost optimization so",
    "start": "983600",
    "end": "987529"
  },
  {
    "text": "for that what we selected was to beam",
    "start": "987529",
    "end": "990199"
  },
  {
    "text": "back on the memory so with that",
    "start": "990199",
    "end": "993679"
  },
  {
    "text": "ECS will make sure that all this wins a",
    "start": "993679",
    "end": "995929"
  },
  {
    "text": "place in the new containers or the new",
    "start": "995929",
    "end": "998119"
  },
  {
    "text": "tasks you'll make sure that it'll",
    "start": "998119",
    "end": "999889"
  },
  {
    "text": "optimize the memory on the cluster right",
    "start": "999889",
    "end": "1002439"
  },
  {
    "text": "and then we get a cosmetic you out of it",
    "start": "1002439",
    "end": "1005579"
  },
  {
    "text": "the task 3",
    "start": "1005579",
    "end": "1007299"
  },
  {
    "text": "so task 3 requires some kind of",
    "start": "1007299",
    "end": "1009009"
  },
  {
    "text": "isolation so for that we we what we do",
    "start": "1009009",
    "end": "1013749"
  },
  {
    "text": "is we create a task group right and then",
    "start": "1013749",
    "end": "1016989"
  },
  {
    "text": "we when you are placing the dis",
    "start": "1016989",
    "end": "1019029"
  },
  {
    "text": "containers we say that ok place these",
    "start": "1019029",
    "end": "1022569"
  },
  {
    "text": "containers with this task group so also",
    "start": "1022569",
    "end": "1025058"
  },
  {
    "text": "when we are when we configure the other",
    "start": "1025059",
    "end": "1027970"
  },
  {
    "text": "rules we can say not to place these",
    "start": "1027970",
    "end": "1030610"
  },
  {
    "text": "other containers if there's a container",
    "start": "1030610",
    "end": "1033339"
  },
  {
    "text": "that is tagged with this particular",
    "start": "1033339",
    "end": "1035438"
  },
  {
    "text": "trash group it's ok so let's move to",
    "start": "1035439",
    "end": "1040389"
  },
  {
    "text": "security so this again a big thing on",
    "start": "1040389",
    "end": "1043178"
  },
  {
    "text": "the these days right security especially",
    "start": "1043179",
    "end": "1046389"
  },
  {
    "text": "when you are running containers on a",
    "start": "1046389",
    "end": "1048308"
  },
  {
    "text": "cluster so just want to touch up two",
    "start": "1048309",
    "end": "1050529"
  },
  {
    "text": "things one is the container security",
    "start": "1050529",
    "end": "1052510"
  },
  {
    "text": "another one is the ECS instance security",
    "start": "1052510",
    "end": "1055149"
  },
  {
    "text": "ECS instance is basically the easy to",
    "start": "1055149",
    "end": "1057220"
  },
  {
    "text": "see the whole security right that's a",
    "start": "1057220",
    "end": "1059169"
  },
  {
    "text": "term that aw says so let's go to the",
    "start": "1059169",
    "end": "1062139"
  },
  {
    "text": "container security this container",
    "start": "1062139",
    "end": "1064389"
  },
  {
    "text": "security wiII not be controlled by using",
    "start": "1064389",
    "end": "1067029"
  },
  {
    "text": "I",
    "start": "1067029",
    "end": "1067240"
  },
  {
    "text": "policies we'll make sure that we have we",
    "start": "1067240",
    "end": "1070090"
  },
  {
    "text": "give only the permission that is",
    "start": "1070090",
    "end": "1071710"
  },
  {
    "text": "required for the others therefore that",
    "start": "1071710",
    "end": "1074080"
  },
  {
    "text": "container so you can control all your",
    "start": "1074080",
    "end": "1077550"
  },
  {
    "text": "AWS resource access through the IM",
    "start": "1077550",
    "end": "1080380"
  },
  {
    "text": "policies so you don't want to give like",
    "start": "1080380",
    "end": "1082300"
  },
  {
    "text": "for instance if the containers does not",
    "start": "1082300",
    "end": "1084309"
  },
  {
    "text": "require any elastic cache access you",
    "start": "1084309",
    "end": "1086679"
  },
  {
    "text": "don't want to specify that right in your",
    "start": "1086679",
    "end": "1088059"
  },
  {
    "text": "policy just specify what is just the",
    "start": "1088059",
    "end": "1091270"
  },
  {
    "text": "minimum security of any access you need",
    "start": "1091270",
    "end": "1094360"
  },
  {
    "text": "all to the container the second point is",
    "start": "1094360",
    "end": "1097840"
  },
  {
    "text": "kind of inherited from our architecture",
    "start": "1097840",
    "end": "1100390"
  },
  {
    "text": "as Tina mentioned we were lot of the",
    "start": "1100390",
    "end": "1103450"
  },
  {
    "text": "inter-service communication is happening",
    "start": "1103450",
    "end": "1105309"
  },
  {
    "text": "through the eventing patent because of",
    "start": "1105309",
    "end": "1108400"
  },
  {
    "text": "that we don't have lot of API exposed to",
    "start": "1108400",
    "end": "1111010"
  },
  {
    "text": "between the services that we reduced our",
    "start": "1111010",
    "end": "1113620"
  },
  {
    "text": "attack footprint the second point is ACS",
    "start": "1113620",
    "end": "1117640"
  },
  {
    "text": "instance security so this is important",
    "start": "1117640",
    "end": "1120760"
  },
  {
    "text": "because all these containers will run on",
    "start": "1120760",
    "end": "1122860"
  },
  {
    "text": "these these ec tools right you have to",
    "start": "1122860",
    "end": "1125500"
  },
  {
    "text": "make sure the CC tools are patched and",
    "start": "1125500",
    "end": "1127300"
  },
  {
    "text": "hardened so that there's no anyone",
    "start": "1127300",
    "end": "1130360"
  },
  {
    "text": "abilities on the custom so for this we",
    "start": "1130360",
    "end": "1134290"
  },
  {
    "text": "use our we have an automated process we",
    "start": "1134290",
    "end": "1136900"
  },
  {
    "text": "that we get the latest AWS pcs optimized",
    "start": "1136900",
    "end": "1142600"
  },
  {
    "text": "ami and then we apply our own hardening",
    "start": "1142600",
    "end": "1145330"
  },
  {
    "text": "and we install our own security clients",
    "start": "1145330",
    "end": "1147790"
  },
  {
    "text": "on that and they need to spit out the",
    "start": "1147790",
    "end": "1150120"
  },
  {
    "text": "application specific ami so we call this",
    "start": "1150120",
    "end": "1153670"
  },
  {
    "text": "process our a my factory is automated",
    "start": "1153670",
    "end": "1157090"
  },
  {
    "text": "and also a WCS ASNs topic even they were",
    "start": "1157090",
    "end": "1161830"
  },
  {
    "text": "they publish a new ami they will publish",
    "start": "1161830",
    "end": "1165550"
  },
  {
    "text": "a notification to their tetanus pop",
    "start": "1165550",
    "end": "1167470"
  },
  {
    "text": "topic so we we kind of subscribe to the",
    "start": "1167470",
    "end": "1170620"
  },
  {
    "text": "topic automatically the pipeline will",
    "start": "1170620",
    "end": "1173020"
  },
  {
    "text": "run that and we get the latest a in mind",
    "start": "1173020",
    "end": "1175059"
  },
  {
    "text": "and let's get hooked into our DevOps",
    "start": "1175059",
    "end": "1178179"
  },
  {
    "text": "pipeline so that's which I'm going to",
    "start": "1178179",
    "end": "1180429"
  },
  {
    "text": "talk about next",
    "start": "1180429",
    "end": "1181960"
  },
  {
    "text": "so DevOps and CIC so this is was really",
    "start": "1181960",
    "end": "1185950"
  },
  {
    "text": "critical for us since you know we have",
    "start": "1185950",
    "end": "1188740"
  },
  {
    "text": "to deliver this within a very short time",
    "start": "1188740",
    "end": "1190450"
  },
  {
    "text": "right so we need to get this from the",
    "start": "1190450",
    "end": "1193300"
  },
  {
    "text": "day one we know it cannot do DevOps",
    "start": "1193300",
    "end": "1196600"
  },
  {
    "text": "at the end of the development right so",
    "start": "1196600",
    "end": "1198550"
  },
  {
    "text": "it has to start with the",
    "start": "1198550",
    "end": "1200210"
  },
  {
    "text": "development when we start this so the",
    "start": "1200210",
    "end": "1202850"
  },
  {
    "text": "the base of the Abydos pipeline is",
    "start": "1202850",
    "end": "1205399"
  },
  {
    "text": "having two components main components",
    "start": "1205399",
    "end": "1207320"
  },
  {
    "text": "one is a Jenkins and the one is a",
    "start": "1207320",
    "end": "1209210"
  },
  {
    "text": "terraform so Genk is basically does the",
    "start": "1209210",
    "end": "1211999"
  },
  {
    "text": "orchestration of the pipeline right",
    "start": "1211999",
    "end": "1214610"
  },
  {
    "text": "getting everything compile and download",
    "start": "1214610",
    "end": "1217129"
  },
  {
    "text": "and terraform we're taking take care of",
    "start": "1217129",
    "end": "1220519"
  },
  {
    "text": "the deployment of the containers to the",
    "start": "1220519",
    "end": "1222799"
  },
  {
    "text": "cluster as well as the other a doublet",
    "start": "1222799",
    "end": "1224809"
  },
  {
    "text": "resources so just want to walk you",
    "start": "1224809",
    "end": "1227779"
  },
  {
    "text": "through with the the pipeline very high",
    "start": "1227779",
    "end": "1229970"
  },
  {
    "text": "over so you start with as you dimension",
    "start": "1229970",
    "end": "1233509"
  },
  {
    "text": "right you compile the order image and we",
    "start": "1233509",
    "end": "1236600"
  },
  {
    "text": "have some validation script which will",
    "start": "1236600",
    "end": "1240169"
  },
  {
    "text": "validate the integrity of these images",
    "start": "1240169",
    "end": "1245059"
  },
  {
    "text": "to whether they are using the correct",
    "start": "1245059",
    "end": "1246710"
  },
  {
    "text": "base a doctoral image and all the",
    "start": "1246710",
    "end": "1249470"
  },
  {
    "text": "configuration is correct",
    "start": "1249470",
    "end": "1250850"
  },
  {
    "text": "and once that's done it gets uploaded",
    "start": "1250850",
    "end": "1253340"
  },
  {
    "text": "into s3 bucket and then from there the",
    "start": "1253340",
    "end": "1256580"
  },
  {
    "text": "Jenkins pipeline will get triggered and",
    "start": "1256580",
    "end": "1258320"
  },
  {
    "text": "the Jenkins will get the docker images",
    "start": "1258320",
    "end": "1261350"
  },
  {
    "text": "again it will run some integrations test",
    "start": "1261350",
    "end": "1264889"
  },
  {
    "text": "to make sure all the integration tests",
    "start": "1264889",
    "end": "1266960"
  },
  {
    "text": "are passed and that is good it gets",
    "start": "1266960",
    "end": "1269600"
  },
  {
    "text": "uploaded to the easier which is the",
    "start": "1269600",
    "end": "1272679"
  },
  {
    "text": "repository for the images and from there",
    "start": "1272679",
    "end": "1276350"
  },
  {
    "text": "onwards it will the terraform will take",
    "start": "1276350",
    "end": "1278360"
  },
  {
    "text": "over download those images and then it",
    "start": "1278360",
    "end": "1281389"
  },
  {
    "text": "gets deployed into the cluster right",
    "start": "1281389",
    "end": "1285619"
  },
  {
    "text": "okay so next is a monitoring so we use",
    "start": "1285619",
    "end": "1292039"
  },
  {
    "text": "two components for monitoring of the",
    "start": "1292039",
    "end": "1295669"
  },
  {
    "text": "platform the first one is nearly the",
    "start": "1295669",
    "end": "1298490"
  },
  {
    "text": "second is the elf stack right so near",
    "start": "1298490",
    "end": "1300769"
  },
  {
    "text": "Alec we use to get all the telemetry",
    "start": "1300769",
    "end": "1302450"
  },
  {
    "text": "data of the ec2 instances containers as",
    "start": "1302450",
    "end": "1306049"
  },
  {
    "text": "well as the aw pass compose slice SQS",
    "start": "1306049",
    "end": "1309610"
  },
  {
    "text": "ElastiCache and all that so we get all",
    "start": "1309610",
    "end": "1312919"
  },
  {
    "text": "that element to data into a dashboard so",
    "start": "1312919",
    "end": "1315499"
  },
  {
    "text": "we can see you know in one dashboard",
    "start": "1315499",
    "end": "1318230"
  },
  {
    "text": "everything about the ec tools of the",
    "start": "1318230",
    "end": "1321619"
  },
  {
    "text": "containers as well as some of the AWS",
    "start": "1321619",
    "end": "1324169"
  },
  {
    "text": "path components so for the application",
    "start": "1324169",
    "end": "1328309"
  },
  {
    "text": "login we use elf stack right that's the",
    "start": "1328309",
    "end": "1330740"
  },
  {
    "text": "typical",
    "start": "1330740",
    "end": "1332299"
  },
  {
    "text": "implementation but for the log driver",
    "start": "1332299",
    "end": "1335160"
  },
  {
    "text": "which with dimension right ECS supports",
    "start": "1335160",
    "end": "1338400"
  },
  {
    "text": "many of the log drivers we here we are",
    "start": "1338400",
    "end": "1341490"
  },
  {
    "text": "using syslog which it will stream all",
    "start": "1341490",
    "end": "1344460"
  },
  {
    "text": "the logs of the containers to logs - and",
    "start": "1344460",
    "end": "1347400"
  },
  {
    "text": "the dogs - will forward that to the",
    "start": "1347400",
    "end": "1349799"
  },
  {
    "text": "elastic search and the Cabana we use for",
    "start": "1349799",
    "end": "1352530"
  },
  {
    "text": "the visualization since we are not in",
    "start": "1352530",
    "end": "1355980"
  },
  {
    "text": "our containers we don't store",
    "start": "1355980",
    "end": "1357600"
  },
  {
    "text": "there's no persistent layer right so we",
    "start": "1357600",
    "end": "1359280"
  },
  {
    "text": "don't persist anything on the containers",
    "start": "1359280",
    "end": "1361200"
  },
  {
    "text": "or the EC tools so everything gets still",
    "start": "1361200",
    "end": "1363419"
  },
  {
    "text": "stream out to logs - ok so finally I",
    "start": "1363419",
    "end": "1369179"
  },
  {
    "text": "just want to touch up two points that",
    "start": "1369179",
    "end": "1371580"
  },
  {
    "text": "these are the challenges that few of the",
    "start": "1371580",
    "end": "1374010"
  },
  {
    "text": "challenges we had right during our this",
    "start": "1374010",
    "end": "1377070"
  },
  {
    "text": "4 month the development the first one",
    "start": "1377070",
    "end": "1380039"
  },
  {
    "text": "was it was due to a we are get we were",
    "start": "1380039",
    "end": "1383640"
  },
  {
    "text": "getting out of memory errors of the",
    "start": "1383640",
    "end": "1386880"
  },
  {
    "text": "containers so this was a known issue",
    "start": "1386880",
    "end": "1389159"
  },
  {
    "text": "between even the doctor and the Linux",
    "start": "1389159",
    "end": "1391980"
  },
  {
    "text": "community the issue here is the",
    "start": "1391980",
    "end": "1394770"
  },
  {
    "text": "application run time which runs inside",
    "start": "1394770",
    "end": "1397289"
  },
  {
    "text": "the container it's not seeing is the",
    "start": "1397289",
    "end": "1399929"
  },
  {
    "text": "container memory limits so it will see",
    "start": "1399929",
    "end": "1402510"
  },
  {
    "text": "the host memory limits because you know",
    "start": "1402510",
    "end": "1405030"
  },
  {
    "text": "because of that the gee garbage",
    "start": "1405030",
    "end": "1407190"
  },
  {
    "text": "collection is not triggering properly",
    "start": "1407190",
    "end": "1408840"
  },
  {
    "text": "and the certeza out of memory exception",
    "start": "1408840",
    "end": "1411710"
  },
  {
    "text": "the the root cause for this is the C",
    "start": "1411710",
    "end": "1415230"
  },
  {
    "text": "groups are not I would say contain a",
    "start": "1415230",
    "end": "1417870"
  },
  {
    "text": "friendly or containerized because of",
    "start": "1417870",
    "end": "1420330"
  },
  {
    "text": "that the application runtime will not",
    "start": "1420330",
    "end": "1422640"
  },
  {
    "text": "see those memory limits right there are",
    "start": "1422640",
    "end": "1425700"
  },
  {
    "text": "few workarounds to go work for this the",
    "start": "1425700",
    "end": "1429299"
  },
  {
    "text": "one is that if it is Java Runtime you",
    "start": "1429299",
    "end": "1431970"
  },
  {
    "text": "can set the heap size to the so a",
    "start": "1431970",
    "end": "1434220"
  },
  {
    "text": "certain limit unfortunately at this time",
    "start": "1434220",
    "end": "1437610"
  },
  {
    "text": "we were running at dotnet 4 with that",
    "start": "1437610",
    "end": "1441030"
  },
  {
    "text": "version did not have that feature but I",
    "start": "1441030",
    "end": "1444179"
  },
  {
    "text": "think the latest top net coercion have",
    "start": "1444179",
    "end": "1446429"
  },
  {
    "text": "the same feature as the Java heap size",
    "start": "1446429",
    "end": "1449030"
  },
  {
    "text": "but at that time we decided to use this",
    "start": "1449030",
    "end": "1452240"
  },
  {
    "text": "LS CFS filesystem which will kind of",
    "start": "1452240",
    "end": "1455940"
  },
  {
    "text": "virtualize all the C groups into the",
    "start": "1455940",
    "end": "1458549"
  },
  {
    "text": "runtime so the runtime count now see the",
    "start": "1458549",
    "end": "1461309"
  },
  {
    "text": "memory limits which the container has",
    "start": "1461309",
    "end": "1465390"
  },
  {
    "text": "the second is related to a network so by",
    "start": "1465390",
    "end": "1470340"
  },
  {
    "text": "default",
    "start": "1470340",
    "end": "1471600"
  },
  {
    "text": "ECS provide different to actually now is",
    "start": "1471600",
    "end": "1474809"
  },
  {
    "text": "three but initially it was two network",
    "start": "1474809",
    "end": "1477660"
  },
  {
    "text": "modes one is the bridge another one is",
    "start": "1477660",
    "end": "1480240"
  },
  {
    "text": "the direct indirect network connection",
    "start": "1480240",
    "end": "1486299"
  },
  {
    "text": "so as the default we are using the",
    "start": "1486299",
    "end": "1488370"
  },
  {
    "text": "bridge network which means that all the",
    "start": "1488370",
    "end": "1491790"
  },
  {
    "text": "containers are placed behind a docker",
    "start": "1491790",
    "end": "1493980"
  },
  {
    "text": "bridge so the docker bridge gets",
    "start": "1493980",
    "end": "1496650"
  },
  {
    "text": "connected to the host elastic interface",
    "start": "1496650",
    "end": "1501480"
  },
  {
    "text": "a network interface but we had a",
    "start": "1501480",
    "end": "1504360"
  },
  {
    "text": "different requirement from our security",
    "start": "1504360",
    "end": "1506280"
  },
  {
    "text": "group to have to route all our container",
    "start": "1506280",
    "end": "1509700"
  },
  {
    "text": "traffic through a different elastic like",
    "start": "1509700",
    "end": "1513090"
  },
  {
    "text": "a secondary interface that we have in",
    "start": "1513090",
    "end": "1515040"
  },
  {
    "text": "our host but the the issue here was the",
    "start": "1515040",
    "end": "1519480"
  },
  {
    "text": "docker bridge was not honoring that",
    "start": "1519480",
    "end": "1521490"
  },
  {
    "text": "routing rule does always hardwired to",
    "start": "1521490",
    "end": "1525120"
  },
  {
    "text": "the primary interface of the the ec2 so",
    "start": "1525120",
    "end": "1530429"
  },
  {
    "text": "because of that we were not able to give",
    "start": "1530429",
    "end": "1533070"
  },
  {
    "text": "that makes use of that feature so what",
    "start": "1533070",
    "end": "1537210"
  },
  {
    "text": "we did was we have to do some custom",
    "start": "1537210",
    "end": "1539370"
  },
  {
    "text": "implementation on the darker bridge to",
    "start": "1539370",
    "end": "1541380"
  },
  {
    "text": "make sure that all the traffic that gets",
    "start": "1541380",
    "end": "1543630"
  },
  {
    "text": "routed to the the secondary interface so",
    "start": "1543630",
    "end": "1548549"
  },
  {
    "text": "that was a custom information that we",
    "start": "1548549",
    "end": "1550590"
  },
  {
    "text": "did at that time but I think now few",
    "start": "1550590",
    "end": "1552780"
  },
  {
    "text": "weeks ago ECS team have released exactly",
    "start": "1552780",
    "end": "1556740"
  },
  {
    "text": "the solution that we wanted right it's",
    "start": "1556740",
    "end": "1559230"
  },
  {
    "text": "called the AWS VPC which will allow you",
    "start": "1559230",
    "end": "1563220"
  },
  {
    "text": "to directly bind your elastic interface",
    "start": "1563220",
    "end": "1566250"
  },
  {
    "text": "to a docker container or a caste so now",
    "start": "1566250",
    "end": "1569790"
  },
  {
    "text": "you can have one to one IP a mapping of",
    "start": "1569790",
    "end": "1573000"
  },
  {
    "text": "all your tests to your network interface",
    "start": "1573000",
    "end": "1575630"
  },
  {
    "text": "which will give you a lot of capability",
    "start": "1575630",
    "end": "1578580"
  },
  {
    "text": "of you know granular capability of",
    "start": "1578580",
    "end": "1580830"
  },
  {
    "text": "controlling your network as well as",
    "start": "1580830",
    "end": "1583049"
  },
  {
    "text": "implementing security on top of that",
    "start": "1583049",
    "end": "1585120"
  },
  {
    "text": "okay just to wrap up I will hand over to",
    "start": "1585120",
    "end": "1587760"
  },
  {
    "text": "Selina just to yeah thanks man Jeeva so",
    "start": "1587760",
    "end": "1593720"
  },
  {
    "text": "some final takeaways and thoughts for",
    "start": "1593720",
    "end": "1596460"
  },
  {
    "text": "you guys right",
    "start": "1596460",
    "end": "1598500"
  },
  {
    "text": "one is you need good microservices to",
    "start": "1598500",
    "end": "1601380"
  },
  {
    "text": "continue race right so that's published",
    "start": "1601380",
    "end": "1603690"
  },
  {
    "text": "stating the obvious at this point but",
    "start": "1603690",
    "end": "1605159"
  },
  {
    "text": "having a good micro-service strategy",
    "start": "1605159",
    "end": "1607409"
  },
  {
    "text": "will enable scalability reliability and",
    "start": "1607409",
    "end": "1610080"
  },
  {
    "text": "good containerization once you have a",
    "start": "1610080",
    "end": "1612870"
  },
  {
    "text": "good container containerization and a",
    "start": "1612870",
    "end": "1615809"
  },
  {
    "text": "microservice strategy massive scale is",
    "start": "1615809",
    "end": "1618150"
  },
  {
    "text": "really achievable through ECS right so a",
    "start": "1618150",
    "end": "1620070"
  },
  {
    "text": "big kudos to the easiest team for making",
    "start": "1620070",
    "end": "1622919"
  },
  {
    "text": "this available out of the box right so",
    "start": "1622919",
    "end": "1624929"
  },
  {
    "text": "the auto scaling policies that Mareva",
    "start": "1624929",
    "end": "1627570"
  },
  {
    "text": "mentioned as well as the task placement",
    "start": "1627570",
    "end": "1629760"
  },
  {
    "text": "strategies really helped us go achieve",
    "start": "1629760",
    "end": "1632580"
  },
  {
    "text": "this 20,000 TPS within 100 milliseconds",
    "start": "1632580",
    "end": "1635220"
  },
  {
    "text": "for each call right and we've tried to",
    "start": "1635220",
    "end": "1637620"
  },
  {
    "text": "break this as well it didn't break so it",
    "start": "1637620",
    "end": "1640620"
  },
  {
    "text": "was awesome to see moving to containers",
    "start": "1640620",
    "end": "1644610"
  },
  {
    "text": "if you haven't done it do it that will",
    "start": "1644610",
    "end": "1646679"
  },
  {
    "text": "simplify your life so much right if all",
    "start": "1646679",
    "end": "1650880"
  },
  {
    "text": "the way from development to go to",
    "start": "1650880",
    "end": "1652679"
  },
  {
    "text": "production right that's been awesome",
    "start": "1652679",
    "end": "1654659"
  },
  {
    "text": "right",
    "start": "1654659",
    "end": "1655020"
  },
  {
    "text": "and then easy is out-of-the-box",
    "start": "1655020",
    "end": "1657320"
  },
  {
    "text": "capabilities such as alb integration",
    "start": "1657320",
    "end": "1660000"
  },
  {
    "text": "from dev on right to ECS really helped",
    "start": "1660000",
    "end": "1662580"
  },
  {
    "text": "us right again cutting down your",
    "start": "1662580",
    "end": "1664169"
  },
  {
    "text": "development time and maybe also",
    "start": "1664169",
    "end": "1666860"
  },
  {
    "text": "simplifying things and reducing",
    "start": "1666860",
    "end": "1669000"
  },
  {
    "text": "complexity right so these were some of",
    "start": "1669000",
    "end": "1670830"
  },
  {
    "text": "the big learnings for us big kudos to",
    "start": "1670830",
    "end": "1674070"
  },
  {
    "text": "our development teams and partners as",
    "start": "1674070",
    "end": "1675690"
  },
  {
    "text": "well the main development team was based",
    "start": "1675690",
    "end": "1677580"
  },
  {
    "text": "out of Hungary right so big kudos for",
    "start": "1677580",
    "end": "1679830"
  },
  {
    "text": "them and hope you guys enjoyed our",
    "start": "1679830",
    "end": "1682559"
  },
  {
    "text": "learnings and the talk in general we'll",
    "start": "1682559",
    "end": "1685440"
  },
  {
    "text": "be around for another 15 minutes or so",
    "start": "1685440",
    "end": "1687510"
  },
  {
    "text": "thank you very much",
    "start": "1687510",
    "end": "1688730"
  },
  {
    "text": "[Applause]",
    "start": "1688730",
    "end": "1691589"
  }
]