[
  {
    "text": "hello everyone my name is Rafia tepia",
    "start": "0",
    "end": "2040"
  },
  {
    "text": "and I'm a blockchain baptism architect",
    "start": "2040",
    "end": "4140"
  },
  {
    "text": "here at AWS",
    "start": "4140",
    "end": "5819"
  },
  {
    "text": "the focus of today's video is to talk",
    "start": "5819",
    "end": "8099"
  },
  {
    "text": "about various access methods to connect",
    "start": "8099",
    "end": "10620"
  },
  {
    "text": "to Amazon managed blockchain service",
    "start": "10620",
    "end": "14280"
  },
  {
    "text": "I will start by giving an overview of",
    "start": "14280",
    "end": "16680"
  },
  {
    "text": "Amazon managed blockchain service that I",
    "start": "16680",
    "end": "19320"
  },
  {
    "text": "will briefly talk about different",
    "start": "19320",
    "end": "20580"
  },
  {
    "text": "security methods to access AWS resources",
    "start": "20580",
    "end": "23820"
  },
  {
    "text": "in general I will spend a considerable",
    "start": "23820",
    "end": "26880"
  },
  {
    "text": "amount of time in talking about",
    "start": "26880",
    "end": "28740"
  },
  {
    "text": "signature 4 and token based access",
    "start": "28740",
    "end": "31140"
  },
  {
    "text": "method which is used to connect to",
    "start": "31140",
    "end": "33360"
  },
  {
    "text": "Amazon managed blockchain service and",
    "start": "33360",
    "end": "35760"
  },
  {
    "text": "then finally I will conclude this video",
    "start": "35760",
    "end": "37980"
  },
  {
    "text": "by doing a comparison of signature 4",
    "start": "37980",
    "end": "41219"
  },
  {
    "text": "with token based access method",
    "start": "41219",
    "end": "45320"
  },
  {
    "text": "fully man",
    "start": "47940",
    "end": "50538"
  },
  {
    "text": "ual create and manage blockchain Network",
    "start": "50640",
    "end": "52879"
  },
  {
    "text": "currently we support hyperledger fabric",
    "start": "52879",
    "end": "55559"
  },
  {
    "text": "for Enterprise blockchain Network and",
    "start": "55559",
    "end": "58079"
  },
  {
    "text": "ethereum for public blockchain network",
    "start": "58079",
    "end": "61440"
  },
  {
    "text": "Amazon match blockchain service allows",
    "start": "61440",
    "end": "63480"
  },
  {
    "text": "you to deploy a dedicated full ethereum",
    "start": "63480",
    "end": "66479"
  },
  {
    "text": "node that can be used to query and send",
    "start": "66479",
    "end": "69060"
  },
  {
    "text": "transaction to blockchain network",
    "start": "69060",
    "end": "71220"
  },
  {
    "text": "beside uh supporting ethereum mainnet we",
    "start": "71220",
    "end": "74280"
  },
  {
    "text": "also support many popular test Nets like",
    "start": "74280",
    "end": "76619"
  },
  {
    "text": "Gurley so",
    "start": "76619",
    "end": "78060"
  },
  {
    "text": "sometime looking at security and how AWS",
    "start": "78060",
    "end": "81780"
  },
  {
    "text": "resources are accessed",
    "start": "81780",
    "end": "83880"
  },
  {
    "text": "identity and access management service",
    "start": "83880",
    "end": "85799"
  },
  {
    "text": "in short IAM is a key security related",
    "start": "85799",
    "end": "89880"
  },
  {
    "text": "service in AWS",
    "start": "89880",
    "end": "91680"
  },
  {
    "text": "in IAM we Define users group role and",
    "start": "91680",
    "end": "95880"
  },
  {
    "text": "policies to give or deny access to AWS",
    "start": "95880",
    "end": "99479"
  },
  {
    "text": "resources",
    "start": "99479",
    "end": "101159"
  },
  {
    "text": "access rule defined in policies can be",
    "start": "101159",
    "end": "104159"
  },
  {
    "text": "attached to users group and roles to",
    "start": "104159",
    "end": "107280"
  },
  {
    "text": "give appropriate access to the AWS",
    "start": "107280",
    "end": "109619"
  },
  {
    "text": "resources",
    "start": "109619",
    "end": "110939"
  },
  {
    "text": "Federated users can assume role with",
    "start": "110939",
    "end": "113880"
  },
  {
    "text": "appropriate policies attached to the",
    "start": "113880",
    "end": "115920"
  },
  {
    "text": "role to give access to the AWS resources",
    "start": "115920",
    "end": "121079"
  },
  {
    "text": "a common way to access AWS resources is",
    "start": "121079",
    "end": "124079"
  },
  {
    "text": "via CLI or SDK",
    "start": "124079",
    "end": "126540"
  },
  {
    "text": "now there are SDK available for many",
    "start": "126540",
    "end": "129420"
  },
  {
    "text": "common programming languages like Java",
    "start": "129420",
    "end": "133040"
  },
  {
    "text": "javascript.net",
    "start": "133040",
    "end": "134780"
  },
  {
    "text": "go python",
    "start": "134780",
    "end": "136980"
  },
  {
    "text": "and both the CLI and SDK uses access ID",
    "start": "136980",
    "end": "141720"
  },
  {
    "text": "and secret access key combination to",
    "start": "141720",
    "end": "144300"
  },
  {
    "text": "gain access to the AWS resources",
    "start": "144300",
    "end": "147060"
  },
  {
    "text": "access ID and secret access key",
    "start": "147060",
    "end": "149340"
  },
  {
    "text": "combination is associated with an IEM",
    "start": "149340",
    "end": "151920"
  },
  {
    "text": "user and thus when a CLI or the SDK uses",
    "start": "151920",
    "end": "156120"
  },
  {
    "text": "the combination of access ID and secret",
    "start": "156120",
    "end": "158580"
  },
  {
    "text": "key access key it gained access to all",
    "start": "158580",
    "end": "162660"
  },
  {
    "text": "those AWS resources which are permitted",
    "start": "162660",
    "end": "165420"
  },
  {
    "text": "for that particular AWS user",
    "start": "165420",
    "end": "168540"
  },
  {
    "text": "there are two ways to store the access",
    "start": "168540",
    "end": "171599"
  },
  {
    "text": "ID secret key combination",
    "start": "171599",
    "end": "174060"
  },
  {
    "text": "one is via the credential file and the",
    "start": "174060",
    "end": "177599"
  },
  {
    "text": "other we are the environmental variables",
    "start": "177599",
    "end": "180060"
  },
  {
    "text": "so when you run the command AWS space",
    "start": "180060",
    "end": "183060"
  },
  {
    "text": "configure",
    "start": "183060",
    "end": "184500"
  },
  {
    "text": "the commander asks you for two pieces of",
    "start": "184500",
    "end": "187319"
  },
  {
    "text": "information which is xsid and secret",
    "start": "187319",
    "end": "189780"
  },
  {
    "text": "access key and then it stores that in a",
    "start": "189780",
    "end": "192300"
  },
  {
    "text": "credential file which usually is in the",
    "start": "192300",
    "end": "195840"
  },
  {
    "text": "profile directory of the user",
    "start": "195840",
    "end": "197940"
  },
  {
    "text": "the other way to store these uh two",
    "start": "197940",
    "end": "202260"
  },
  {
    "text": "pieces of information is in the",
    "start": "202260",
    "end": "203879"
  },
  {
    "text": "environmental variable AWS access key ID",
    "start": "203879",
    "end": "207659"
  },
  {
    "text": "and AWS secret access key and both the",
    "start": "207659",
    "end": "211080"
  },
  {
    "text": "CLI and the SDK",
    "start": "211080",
    "end": "214319"
  },
  {
    "text": "by default they know to look into these",
    "start": "214319",
    "end": "218280"
  },
  {
    "text": "two areas to gain access to the ID and",
    "start": "218280",
    "end": "220980"
  },
  {
    "text": "the secret key",
    "start": "220980",
    "end": "222659"
  },
  {
    "text": "foreign",
    "start": "222659",
    "end": "224540"
  },
  {
    "text": "CLI and the SDK it uses access ID and",
    "start": "224540",
    "end": "229620"
  },
  {
    "text": "secret key and it signs the request",
    "start": "229620",
    "end": "233099"
  },
  {
    "text": "which you're sending to AWS resources on",
    "start": "233099",
    "end": "236280"
  },
  {
    "text": "on your behalf so as long as you have",
    "start": "236280",
    "end": "238620"
  },
  {
    "text": "configured the xsid and secret key you",
    "start": "238620",
    "end": "241560"
  },
  {
    "text": "really don't need to do anything from uh",
    "start": "241560",
    "end": "244620"
  },
  {
    "text": "from you know signing that that request",
    "start": "244620",
    "end": "247200"
  },
  {
    "text": "to the AWS resource but what about if",
    "start": "247200",
    "end": "251099"
  },
  {
    "text": "you don't want to use CLI or maybe you",
    "start": "251099",
    "end": "254340"
  },
  {
    "text": "are writing your code in a programming",
    "start": "254340",
    "end": "256500"
  },
  {
    "text": "language for which there is no SDK",
    "start": "256500",
    "end": "258780"
  },
  {
    "text": "available then how do you how do you",
    "start": "258780",
    "end": "262440"
  },
  {
    "text": "call the you know the different AWS",
    "start": "262440",
    "end": "265680"
  },
  {
    "text": "resources the API for different AWS",
    "start": "265680",
    "end": "268500"
  },
  {
    "text": "resources",
    "start": "268500",
    "end": "269880"
  },
  {
    "text": "for that particular scenario AWS do",
    "start": "269880",
    "end": "273360"
  },
  {
    "text": "provide you with another mechanism of",
    "start": "273360",
    "end": "276840"
  },
  {
    "text": "gaining access to the AWS resources and",
    "start": "276840",
    "end": "279900"
  },
  {
    "text": "that",
    "start": "279900",
    "end": "280820"
  },
  {
    "text": "procedure or that access method is",
    "start": "280820",
    "end": "283259"
  },
  {
    "text": "called Signature V4 access method in",
    "start": "283259",
    "end": "287580"
  },
  {
    "text": "short Sig V4",
    "start": "287580",
    "end": "290220"
  },
  {
    "text": "in this video we will spend a",
    "start": "290220",
    "end": "292320"
  },
  {
    "text": "considerable amount of time looking at",
    "start": "292320",
    "end": "294060"
  },
  {
    "text": "signature V4 method because it is one of",
    "start": "294060",
    "end": "297419"
  },
  {
    "text": "the ways to access ethereum node on",
    "start": "297419",
    "end": "301500"
  },
  {
    "text": "Amazon manage blockchain service",
    "start": "301500",
    "end": "304620"
  },
  {
    "text": "when you want to send Json RPC",
    "start": "304620",
    "end": "306960"
  },
  {
    "text": "transaction to ethereum node running on",
    "start": "306960",
    "end": "309180"
  },
  {
    "text": "Amazon managed blockchain you need to",
    "start": "309180",
    "end": "311460"
  },
  {
    "text": "authenticate with the manage blockchain",
    "start": "311460",
    "end": "313440"
  },
  {
    "text": "service",
    "start": "313440",
    "end": "314520"
  },
  {
    "text": "one way of gaining this access is via",
    "start": "314520",
    "end": "317520"
  },
  {
    "text": "signature V4 and the other way is we are",
    "start": "317520",
    "end": "320880"
  },
  {
    "text": "token based access or TBA for short",
    "start": "320880",
    "end": "325139"
  },
  {
    "text": "now let's look at signature V4 more",
    "start": "325139",
    "end": "327360"
  },
  {
    "text": "closely",
    "start": "327360",
    "end": "328440"
  },
  {
    "text": "the detailed steps of generating a",
    "start": "328440",
    "end": "330660"
  },
  {
    "text": "security key using Sig V4 is documented",
    "start": "330660",
    "end": "333419"
  },
  {
    "text": "at this URL",
    "start": "333419",
    "end": "336360"
  },
  {
    "text": "so let's look into these detailed steps",
    "start": "336360",
    "end": "339000"
  },
  {
    "text": "to see how signature 4 is calculated",
    "start": "339000",
    "end": "343460"
  },
  {
    "text": "the first step to uh in the creation of",
    "start": "345139",
    "end": "348720"
  },
  {
    "text": "signature 4 is to calculate what we call",
    "start": "348720",
    "end": "351419"
  },
  {
    "text": "canonical request there are a few",
    "start": "351419",
    "end": "354060"
  },
  {
    "text": "parameters which this request will",
    "start": "354060",
    "end": "356940"
  },
  {
    "text": "um that you need to provide it uh some",
    "start": "356940",
    "end": "359520"
  },
  {
    "text": "of them are very obvious like HTTP",
    "start": "359520",
    "end": "361380"
  },
  {
    "text": "method uh that would be either they get",
    "start": "361380",
    "end": "363720"
  },
  {
    "text": "opposed uh of the API method which you",
    "start": "363720",
    "end": "367320"
  },
  {
    "text": "will be calling",
    "start": "367320",
    "end": "368940"
  },
  {
    "text": "um then there are certain parameters",
    "start": "368940",
    "end": "370919"
  },
  {
    "text": "which are related to the request URL the",
    "start": "370919",
    "end": "374400"
  },
  {
    "text": "URI the UR the URI the query string",
    "start": "374400",
    "end": "377820"
  },
  {
    "text": "which which is part of the your request",
    "start": "377820",
    "end": "379699"
  },
  {
    "text": "and also the payload of your request you",
    "start": "379699",
    "end": "384000"
  },
  {
    "text": "you will take the hash value of the",
    "start": "384000",
    "end": "386400"
  },
  {
    "text": "payload this is the example of the",
    "start": "386400",
    "end": "389220"
  },
  {
    "text": "different parameters which are provided",
    "start": "389220",
    "end": "391319"
  },
  {
    "text": "to",
    "start": "391319",
    "end": "392400"
  },
  {
    "text": "um to calculate the canonical request",
    "start": "392400",
    "end": "395360"
  },
  {
    "text": "once you have that request you will take",
    "start": "395360",
    "end": "397740"
  },
  {
    "text": "the hash of that request and then",
    "start": "397740",
    "end": "399660"
  },
  {
    "text": "concatenate with some other additional",
    "start": "399660",
    "end": "402300"
  },
  {
    "text": "parameters like algorithm request date",
    "start": "402300",
    "end": "404639"
  },
  {
    "text": "time and credential scope",
    "start": "404639",
    "end": "407340"
  },
  {
    "text": "after the step 3 you will calculate the",
    "start": "407340",
    "end": "410759"
  },
  {
    "text": "signature now the signature is a series",
    "start": "410759",
    "end": "413940"
  },
  {
    "text": "of hashes where each hash step takes a",
    "start": "413940",
    "end": "419100"
  },
  {
    "text": "value which was calculated in a step",
    "start": "419100",
    "end": "421500"
  },
  {
    "text": "before it again here there is a detailed",
    "start": "421500",
    "end": "424620"
  },
  {
    "text": "example of what these different hashes",
    "start": "424620",
    "end": "427199"
  },
  {
    "text": "will calculate so for instance the the K",
    "start": "427199",
    "end": "430979"
  },
  {
    "text": "region is taking the date parameter uh",
    "start": "430979",
    "end": "435720"
  },
  {
    "text": "or or k date hash which was computed in",
    "start": "435720",
    "end": "438479"
  },
  {
    "text": "the step above it and then and then",
    "start": "438479",
    "end": "441300"
  },
  {
    "text": "concatenating it with the region which",
    "start": "441300",
    "end": "444479"
  },
  {
    "text": "uh you know where your AWS resource",
    "start": "444479",
    "end": "446580"
  },
  {
    "text": "exists and finally the last step would",
    "start": "446580",
    "end": "450180"
  },
  {
    "text": "be to get the calculated signature from",
    "start": "450180",
    "end": "454080"
  },
  {
    "text": "the first four step and Associate that",
    "start": "454080",
    "end": "457259"
  },
  {
    "text": "signature with one of the authorization",
    "start": "457259",
    "end": "460199"
  },
  {
    "text": "header of the request you're trying to",
    "start": "460199",
    "end": "462720"
  },
  {
    "text": "send to the AWS Service as you can see",
    "start": "462720",
    "end": "465300"
  },
  {
    "text": "from these steps creating signal feature",
    "start": "465300",
    "end": "468060"
  },
  {
    "text": "4 is quite a cumbersome task",
    "start": "468060",
    "end": "472199"
  },
  {
    "text": "um and you know you really need a very",
    "start": "472199",
    "end": "475979"
  },
  {
    "text": "good understanding of",
    "start": "475979",
    "end": "478400"
  },
  {
    "text": "cryptography to be able to calculate the",
    "start": "478400",
    "end": "481740"
  },
  {
    "text": "signature four fortunately there are",
    "start": "481740",
    "end": "484639"
  },
  {
    "text": "resources available VR AWS SDK which",
    "start": "484639",
    "end": "488880"
  },
  {
    "text": "helps in generating the signature of V4",
    "start": "488880",
    "end": "492740"
  },
  {
    "text": "and the next step we will look into one",
    "start": "492740",
    "end": "496979"
  },
  {
    "text": "of such coding examples to see how AWS",
    "start": "496979",
    "end": "500699"
  },
  {
    "text": "SDK can be utilized to calculate",
    "start": "500699",
    "end": "503759"
  },
  {
    "text": "signature V4 now I'm going to walk you",
    "start": "503759",
    "end": "506759"
  },
  {
    "text": "through a complete example of showing",
    "start": "506759",
    "end": "509759"
  },
  {
    "text": "you how signature V4 will be calculated",
    "start": "509759",
    "end": "512180"
  },
  {
    "text": "and how we can use",
    "start": "512180",
    "end": "515399"
  },
  {
    "text": "um popular tools like truffle to make a",
    "start": "515399",
    "end": "518940"
  },
  {
    "text": "connection to the ethereum node on the",
    "start": "518940",
    "end": "521820"
  },
  {
    "text": "Amazon manage blockchain service now",
    "start": "521820",
    "end": "524219"
  },
  {
    "text": "before I show you the um the code I just",
    "start": "524219",
    "end": "527100"
  },
  {
    "text": "want you to point out that the code is",
    "start": "527100",
    "end": "529140"
  },
  {
    "text": "using JavaScript SDK version 3.0 and",
    "start": "529140",
    "end": "534779"
  },
  {
    "text": "these the modules in the JavaScript SDK",
    "start": "534779",
    "end": "538800"
  },
  {
    "text": "which we will be using it is a signature",
    "start": "538800",
    "end": "542399"
  },
  {
    "text": "V4 signature Dash V4 so the uh in in",
    "start": "542399",
    "end": "545820"
  },
  {
    "text": "order for you to use this you have to do",
    "start": "545820",
    "end": "547920"
  },
  {
    "text": "a npm install and the this is the uh the",
    "start": "547920",
    "end": "552420"
  },
  {
    "text": "full name name of the npm package which",
    "start": "552420",
    "end": "554339"
  },
  {
    "text": "you will be using so I've prepared some",
    "start": "554339",
    "end": "556200"
  },
  {
    "text": "sample code to show the different access",
    "start": "556200",
    "end": "557940"
  },
  {
    "text": "method to Amazon manage blockchain",
    "start": "557940",
    "end": "560100"
  },
  {
    "text": "service",
    "start": "560100",
    "end": "561000"
  },
  {
    "text": "now there are few um",
    "start": "561000",
    "end": "563160"
  },
  {
    "text": "if you",
    "start": "563160",
    "end": "564480"
  },
  {
    "text": "key Concepts which I want you to",
    "start": "564480",
    "end": "566640"
  },
  {
    "text": "understand the first thing is the",
    "start": "566640",
    "end": "569700"
  },
  {
    "text": "contract provider so the way this code",
    "start": "569700",
    "end": "572399"
  },
  {
    "text": "works it acquires the provider from",
    "start": "572399",
    "end": "576560"
  },
  {
    "text": "web3.js API and uses that provider to",
    "start": "576560",
    "end": "580800"
  },
  {
    "text": "make connection to the goalie Network on",
    "start": "580800",
    "end": "584100"
  },
  {
    "text": "Amazon managed blockchain as well as the",
    "start": "584100",
    "end": "587279"
  },
  {
    "text": "mainnet network on using the Amazon",
    "start": "587279",
    "end": "590040"
  },
  {
    "text": "managed blockchain service now",
    "start": "590040",
    "end": "593600"
  },
  {
    "text": "it will uh depending on the parameter I",
    "start": "593600",
    "end": "597480"
  },
  {
    "text": "said in this particular file so right",
    "start": "597480",
    "end": "600540"
  },
  {
    "text": "now the parameter I've said is amb TBA",
    "start": "600540",
    "end": "603440"
  },
  {
    "text": "if if the parameter is a and b TBA it",
    "start": "603440",
    "end": "607440"
  },
  {
    "text": "will use the token based method of",
    "start": "607440",
    "end": "610800"
  },
  {
    "text": "connecting to Amazon managed blockchain",
    "start": "610800",
    "end": "613019"
  },
  {
    "text": "and if the parameter is amb uh four it",
    "start": "613019",
    "end": "617459"
  },
  {
    "text": "will use the signature for",
    "start": "617459",
    "end": "619440"
  },
  {
    "text": "if none of these are provided then it",
    "start": "619440",
    "end": "622440"
  },
  {
    "text": "will assume that I want to connect to a",
    "start": "622440",
    "end": "624420"
  },
  {
    "text": "local development Network running",
    "start": "624420",
    "end": "627120"
  },
  {
    "text": "ganache and that's what it will use",
    "start": "627120",
    "end": "629519"
  },
  {
    "text": "the second important file to understand",
    "start": "629519",
    "end": "631500"
  },
  {
    "text": "is this network connect.js file",
    "start": "631500",
    "end": "634700"
  },
  {
    "text": "this file what it does actually when I",
    "start": "634700",
    "end": "637620"
  },
  {
    "text": "will run the application I will be",
    "start": "637620",
    "end": "639540"
  },
  {
    "text": "running this this code in this file and",
    "start": "639540",
    "end": "642839"
  },
  {
    "text": "all it does it",
    "start": "642839",
    "end": "644760"
  },
  {
    "text": "um gets the web3 provider web3 uh JS",
    "start": "644760",
    "end": "649339"
  },
  {
    "text": "network provider for the blockchain",
    "start": "649339",
    "end": "652800"
  },
  {
    "text": "network and then it will query the",
    "start": "652800",
    "end": "655440"
  },
  {
    "text": "network for its network ID as well as it",
    "start": "655440",
    "end": "658620"
  },
  {
    "text": "will query the network for a particular",
    "start": "658620",
    "end": "661620"
  },
  {
    "text": "um you know address for a particular",
    "start": "661620",
    "end": "663540"
  },
  {
    "text": "um a balance for a particular address",
    "start": "663540",
    "end": "665040"
  },
  {
    "text": "and I do have some uh um author",
    "start": "665040",
    "end": "669420"
  },
  {
    "text": "associated with this address in Gorly",
    "start": "669420",
    "end": "671820"
  },
  {
    "text": "network but I don't have anything",
    "start": "671820",
    "end": "674399"
  },
  {
    "text": "associated with this address in the",
    "start": "674399",
    "end": "676620"
  },
  {
    "text": "mainnet network",
    "start": "676620",
    "end": "677880"
  },
  {
    "text": "the third important file and this is the",
    "start": "677880",
    "end": "680519"
  },
  {
    "text": "file which I will be going in a lot more",
    "start": "680519",
    "end": "682380"
  },
  {
    "text": "details uh later in this video is the",
    "start": "682380",
    "end": "686279"
  },
  {
    "text": "AWS HTTP Sig V4",
    "start": "686279",
    "end": "689760"
  },
  {
    "text": "the way um the signature V4 works that",
    "start": "689760",
    "end": "692940"
  },
  {
    "text": "it will extend the default HTTP provider",
    "start": "692940",
    "end": "697380"
  },
  {
    "text": "of the web3.js so that it can inject the",
    "start": "697380",
    "end": "701940"
  },
  {
    "text": "appropriate",
    "start": "701940",
    "end": "703100"
  },
  {
    "text": "authentication headers required to make",
    "start": "703100",
    "end": "706740"
  },
  {
    "text": "connection to the amb network and we'll",
    "start": "706740",
    "end": "709380"
  },
  {
    "text": "go into this uh this particular file in",
    "start": "709380",
    "end": "711420"
  },
  {
    "text": "more details and the last uh file which",
    "start": "711420",
    "end": "714360"
  },
  {
    "text": "I would like you to have a look at is",
    "start": "714360",
    "end": "716820"
  },
  {
    "text": "the environment um you know is a bash",
    "start": "716820",
    "end": "720120"
  },
  {
    "text": "script which just sets few environmental",
    "start": "720120",
    "end": "722579"
  },
  {
    "text": "variables",
    "start": "722579",
    "end": "723959"
  },
  {
    "text": "these environmental variables most of",
    "start": "723959",
    "end": "726180"
  },
  {
    "text": "them uh as you can see there they are",
    "start": "726180",
    "end": "728399"
  },
  {
    "text": "retrieving some of the environment",
    "start": "728399",
    "end": "729899"
  },
  {
    "text": "variables from Secret manager and there",
    "start": "729899",
    "end": "733019"
  },
  {
    "text": "are some environmental variable which is",
    "start": "733019",
    "end": "735120"
  },
  {
    "text": "holding the URL pointing to the amb node",
    "start": "735120",
    "end": "738060"
  },
  {
    "text": "and we'll be going uh through these uh",
    "start": "738060",
    "end": "740459"
  },
  {
    "text": "file in more detail as we progress in",
    "start": "740459",
    "end": "743100"
  },
  {
    "text": "the video",
    "start": "743100",
    "end": "745639"
  },
  {
    "text": "so now let's uh dive deep into how",
    "start": "747420",
    "end": "750779"
  },
  {
    "text": "signature V4 is implemented using",
    "start": "750779",
    "end": "753779"
  },
  {
    "text": "JavaScript SDK",
    "start": "753779",
    "end": "755459"
  },
  {
    "text": "the first thing to understand is we are",
    "start": "755459",
    "end": "759420"
  },
  {
    "text": "using",
    "start": "759420",
    "end": "760620"
  },
  {
    "text": "web 3.js library to make connection to",
    "start": "760620",
    "end": "764040"
  },
  {
    "text": "the blockchain network",
    "start": "764040",
    "end": "766380"
  },
  {
    "text": "um you know the same battery",
    "start": "766380",
    "end": "768079"
  },
  {
    "text": "JS libraries are used whether you're",
    "start": "768079",
    "end": "770579"
  },
  {
    "text": "making a connection to garage Network or",
    "start": "770579",
    "end": "773279"
  },
  {
    "text": "a network a theme network via amb or",
    "start": "773279",
    "end": "776279"
  },
  {
    "text": "even you can use it to make connection",
    "start": "776279",
    "end": "778500"
  },
  {
    "text": "to a theme network via let's say infuria",
    "start": "778500",
    "end": "782100"
  },
  {
    "text": "or",
    "start": "782100",
    "end": "783420"
  },
  {
    "text": "um or all Cami so what we do we use the",
    "start": "783420",
    "end": "787680"
  },
  {
    "text": "web3 JS HTTP provider which uh which",
    "start": "787680",
    "end": "792480"
  },
  {
    "text": "takes a URL and makes connection to the",
    "start": "792480",
    "end": "795240"
  },
  {
    "text": "blockchain network via that URL and we",
    "start": "795240",
    "end": "797940"
  },
  {
    "text": "extend that HTTP provider and the reason",
    "start": "797940",
    "end": "800339"
  },
  {
    "text": "we do it so that we can inject the",
    "start": "800339",
    "end": "803399"
  },
  {
    "text": "authorization headers uh into the HTTP",
    "start": "803399",
    "end": "807600"
  },
  {
    "text": "requests which are required to make",
    "start": "807600",
    "end": "810420"
  },
  {
    "text": "authentication to the Amazon managed",
    "start": "810420",
    "end": "813959"
  },
  {
    "text": "blockchain now HTTP provider has a",
    "start": "813959",
    "end": "817500"
  },
  {
    "text": "function called send which we will",
    "start": "817500",
    "end": "820019"
  },
  {
    "text": "override to make sure that we inject our",
    "start": "820019",
    "end": "824899"
  },
  {
    "text": "authorization headers into the HTTP",
    "start": "824899",
    "end": "827760"
  },
  {
    "text": "request which web3.js will will make to",
    "start": "827760",
    "end": "832260"
  },
  {
    "text": "connect to the blockchain network",
    "start": "832260",
    "end": "835380"
  },
  {
    "text": "the most important uh aspect of this",
    "start": "835380",
    "end": "838560"
  },
  {
    "text": "code which you need to understand when",
    "start": "838560",
    "end": "840300"
  },
  {
    "text": "it comes to Signature 4 is this function",
    "start": "840300",
    "end": "843060"
  },
  {
    "text": "is this class signature V4 which is",
    "start": "843060",
    "end": "845940"
  },
  {
    "text": "defined in the AWS JavaScript SDK the",
    "start": "845940",
    "end": "850459"
  },
  {
    "text": "npm package where this is defined is AWS",
    "start": "850459",
    "end": "854880"
  },
  {
    "text": "SDK slash signature V4",
    "start": "854880",
    "end": "857399"
  },
  {
    "text": "this class take few parameters the one",
    "start": "857399",
    "end": "861360"
  },
  {
    "text": "of the parameters it takes is of course",
    "start": "861360",
    "end": "863339"
  },
  {
    "text": "the name of the service to which it",
    "start": "863339",
    "end": "865440"
  },
  {
    "text": "wants to uh create a signature for",
    "start": "865440",
    "end": "868860"
  },
  {
    "text": "requests for it also requires you to uh",
    "start": "868860",
    "end": "872600"
  },
  {
    "text": "provide the vision where you want to",
    "start": "872600",
    "end": "875940"
  },
  {
    "text": "make that connection",
    "start": "875940",
    "end": "877279"
  },
  {
    "text": "the other two parameter it requires is",
    "start": "877279",
    "end": "881339"
  },
  {
    "text": "it requires a credential the credential",
    "start": "881339",
    "end": "885360"
  },
  {
    "text": "which gives the signature V4 access to",
    "start": "885360",
    "end": "889500"
  },
  {
    "text": "the access ID and the secret key now",
    "start": "889500",
    "end": "892620"
  },
  {
    "text": "these are the same main",
    "start": "892620",
    "end": "895699"
  },
  {
    "text": "values or security values which the CLI",
    "start": "895699",
    "end": "899579"
  },
  {
    "text": "and SDK also uses and the last thing",
    "start": "899579",
    "end": "902699"
  },
  {
    "text": "this uh signature V4",
    "start": "902699",
    "end": "905899"
  },
  {
    "text": "Constructor requires is you need to",
    "start": "905899",
    "end": "909540"
  },
  {
    "text": "provide what kind of Shaw uh what kind",
    "start": "909540",
    "end": "913139"
  },
  {
    "text": "of hashing function you will be using to",
    "start": "913139",
    "end": "915959"
  },
  {
    "text": "create the signature viewfold here we",
    "start": "915959",
    "end": "918360"
  },
  {
    "text": "are saying you'll be using the short 256",
    "start": "918360",
    "end": "921240"
  },
  {
    "text": "and again we are using uh AWS provided",
    "start": "921240",
    "end": "926459"
  },
  {
    "text": "library to provide that hashing function",
    "start": "926459",
    "end": "931740"
  },
  {
    "text": "the signature V4 it takes these four",
    "start": "931740",
    "end": "935040"
  },
  {
    "text": "parameters it generates a uh object",
    "start": "935040",
    "end": "938720"
  },
  {
    "text": "which uh and using that object we can",
    "start": "938720",
    "end": "942180"
  },
  {
    "text": "now sign the the HTTP request now the",
    "start": "942180",
    "end": "947100"
  },
  {
    "text": "signature V4 class provide many uh",
    "start": "947100",
    "end": "950519"
  },
  {
    "text": "methods many uh sign methods each of",
    "start": "950519",
    "end": "953760"
  },
  {
    "text": "them take separate or different type of",
    "start": "953760",
    "end": "955860"
  },
  {
    "text": "parameters some take strings some takes",
    "start": "955860",
    "end": "958139"
  },
  {
    "text": "uh HTTP request and here that's what",
    "start": "958139",
    "end": "960959"
  },
  {
    "text": "exactly what we are doing we are signing",
    "start": "960959",
    "end": "964380"
  },
  {
    "text": "the the uh the signature we are or we",
    "start": "964380",
    "end": "967800"
  },
  {
    "text": "are making signature V for class sine or",
    "start": "967800",
    "end": "970320"
  },
  {
    "text": "HTTP request by combining the credential",
    "start": "970320",
    "end": "973920"
  },
  {
    "text": "the region the service as well as some",
    "start": "973920",
    "end": "977399"
  },
  {
    "text": "of the other authorization",
    "start": "977399",
    "end": "980459"
  },
  {
    "text": "um values which you saw in the uh when",
    "start": "980459",
    "end": "983519"
  },
  {
    "text": "we when we went through the manual steps",
    "start": "983519",
    "end": "986040"
  },
  {
    "text": "of creating the signature before",
    "start": "986040",
    "end": "988339"
  },
  {
    "text": "and now once we call this sign we have",
    "start": "988339",
    "end": "993420"
  },
  {
    "text": "our authorization headers and the date",
    "start": "993420",
    "end": "996300"
  },
  {
    "text": "header ready for it to be injected into",
    "start": "996300",
    "end": "999600"
  },
  {
    "text": "the HTTP provider request which web3.js",
    "start": "999600",
    "end": "1003620"
  },
  {
    "text": "will send to the Amazon manage",
    "start": "1003620",
    "end": "1006079"
  },
  {
    "text": "blockchain Network so that's exactly",
    "start": "1006079",
    "end": "1008720"
  },
  {
    "text": "what this is doing it is retrieving",
    "start": "1008720",
    "end": "1011660"
  },
  {
    "text": "those two headers from from a signed",
    "start": "1011660",
    "end": "1014180"
  },
  {
    "text": "request which got generated through the",
    "start": "1014180",
    "end": "1016519"
  },
  {
    "text": "signature V4 and then we use these two",
    "start": "1016519",
    "end": "1019639"
  },
  {
    "text": "headers assign it to the request object",
    "start": "1019639",
    "end": "1023060"
  },
  {
    "text": "which will be sent to the Amazon manage",
    "start": "1023060",
    "end": "1026120"
  },
  {
    "text": "blockchain service and that's how the",
    "start": "1026120",
    "end": "1029178"
  },
  {
    "text": "signature V4",
    "start": "1029179",
    "end": "1032020"
  },
  {
    "text": "required headers are injected into the",
    "start": "1032020",
    "end": "1035660"
  },
  {
    "text": "request HTTP request so that",
    "start": "1035660",
    "end": "1038240"
  },
  {
    "text": "authorization to amb can happen",
    "start": "1038240",
    "end": "1042319"
  },
  {
    "text": "since now you have a good understanding",
    "start": "1042319",
    "end": "1044120"
  },
  {
    "text": "of signature V for Access method let's",
    "start": "1044120",
    "end": "1046938"
  },
  {
    "text": "talk about token base access method",
    "start": "1046939",
    "end": "1051159"
  },
  {
    "text": "token based access or billing token",
    "start": "1051940",
    "end": "1054799"
  },
  {
    "text": "allow authentication token to be passed",
    "start": "1054799",
    "end": "1057679"
  },
  {
    "text": "as query string to the ethereum node via",
    "start": "1057679",
    "end": "1061039"
  },
  {
    "text": "its URL",
    "start": "1061039",
    "end": "1062660"
  },
  {
    "text": "you create a billing token at an account",
    "start": "1062660",
    "end": "1064940"
  },
  {
    "text": "level which means the same billing token",
    "start": "1064940",
    "end": "1067520"
  },
  {
    "text": "can be used for multiple uh nodes both",
    "start": "1067520",
    "end": "1070940"
  },
  {
    "text": "mainnet and test net nodes",
    "start": "1070940",
    "end": "1073700"
  },
  {
    "text": "it is a lot convenient than signature V4",
    "start": "1073700",
    "end": "1076820"
  },
  {
    "text": "access because it does not require you",
    "start": "1076820",
    "end": "1079340"
  },
  {
    "text": "to write any kind of custom code but it",
    "start": "1079340",
    "end": "1082160"
  },
  {
    "text": "might not be suitable for every use case",
    "start": "1082160",
    "end": "1085280"
  },
  {
    "text": "billing token need to be safeguarded",
    "start": "1085280",
    "end": "1088280"
  },
  {
    "text": "because",
    "start": "1088280",
    "end": "1089720"
  },
  {
    "text": "if you lose the billing token or if any",
    "start": "1089720",
    "end": "1093740"
  },
  {
    "text": "malicious user get access to billing",
    "start": "1093740",
    "end": "1095720"
  },
  {
    "text": "token they get access to your entire",
    "start": "1095720",
    "end": "1098539"
  },
  {
    "text": "ethereum though",
    "start": "1098539",
    "end": "1100640"
  },
  {
    "text": "so now let's talk about how billing",
    "start": "1100640",
    "end": "1102559"
  },
  {
    "text": "tokens are created there are actually",
    "start": "1102559",
    "end": "1104720"
  },
  {
    "text": "two ways to create billing token",
    "start": "1104720",
    "end": "1107179"
  },
  {
    "text": "via the CLI and via the Amazon manage",
    "start": "1107179",
    "end": "1111799"
  },
  {
    "text": "blockchain console so today I'm going to",
    "start": "1111799",
    "end": "1114559"
  },
  {
    "text": "show you how to create a billing token",
    "start": "1114559",
    "end": "1117980"
  },
  {
    "text": "via the Amazon manage blockchain Council",
    "start": "1117980",
    "end": "1122240"
  },
  {
    "text": "so when you are on the Amazon manage",
    "start": "1122240",
    "end": "1124460"
  },
  {
    "text": "blockchain console if you look on the",
    "start": "1124460",
    "end": "1127520"
  },
  {
    "text": "left side navigation you'll see token",
    "start": "1127520",
    "end": "1131840"
  },
  {
    "text": "based access link click on it",
    "start": "1131840",
    "end": "1135679"
  },
  {
    "text": "and if you have already any token access",
    "start": "1135679",
    "end": "1139520"
  },
  {
    "text": "created you will see them listed here to",
    "start": "1139520",
    "end": "1142820"
  },
  {
    "text": "create a new one click on the new button",
    "start": "1142820",
    "end": "1146419"
  },
  {
    "text": "and a new billing token is created for",
    "start": "1146419",
    "end": "1149480"
  },
  {
    "text": "you it's as easy as that",
    "start": "1149480",
    "end": "1152000"
  },
  {
    "text": "in order for you to get the actual token",
    "start": "1152000",
    "end": "1155960"
  },
  {
    "text": "which needs to be passed as a query",
    "start": "1155960",
    "end": "1157760"
  },
  {
    "text": "string you will click on the link of the",
    "start": "1157760",
    "end": "1160760"
  },
  {
    "text": "accessor ID and your token is",
    "start": "1160760",
    "end": "1164960"
  },
  {
    "text": "um shown here you can click you can",
    "start": "1164960",
    "end": "1167960"
  },
  {
    "text": "copy it and maybe bring it to a text",
    "start": "1167960",
    "end": "1171080"
  },
  {
    "text": "editor now let's understand the",
    "start": "1171080",
    "end": "1174140"
  },
  {
    "text": "difference between the two types of URL",
    "start": "1174140",
    "end": "1176419"
  },
  {
    "text": "so",
    "start": "1176419",
    "end": "1177860"
  },
  {
    "text": "here I have",
    "start": "1177860",
    "end": "1179660"
  },
  {
    "text": "the URL associated with signature four",
    "start": "1179660",
    "end": "1183440"
  },
  {
    "text": "which is this URL which shows that it is",
    "start": "1183440",
    "end": "1186820"
  },
  {
    "text": "this first part of the URL is the node",
    "start": "1186820",
    "end": "1189919"
  },
  {
    "text": "ID of my ethereum node and then the",
    "start": "1189919",
    "end": "1192620"
  },
  {
    "text": "second part is the standard you know AWS",
    "start": "1192620",
    "end": "1196160"
  },
  {
    "text": "service name so here it is",
    "start": "1196160",
    "end": "1197620"
  },
  {
    "text": "ethereum.manage blockchain dot the",
    "start": "1197620",
    "end": "1200120"
  },
  {
    "text": "region name and the Amazon aws.com",
    "start": "1200120",
    "end": "1204200"
  },
  {
    "text": "in comparison to this URL and you look",
    "start": "1204200",
    "end": "1208100"
  },
  {
    "text": "at the billing token URL the first thing",
    "start": "1208100",
    "end": "1210440"
  },
  {
    "text": "you will notice that there is a",
    "start": "1210440",
    "end": "1212480"
  },
  {
    "text": "additional character this character",
    "start": "1212480",
    "end": "1215059"
  },
  {
    "text": "which is between the note ID and",
    "start": "1215059",
    "end": "1218919"
  },
  {
    "text": "ethereum.manage blockchain so",
    "start": "1218919",
    "end": "1221740"
  },
  {
    "text": "insertion of this character T is",
    "start": "1221740",
    "end": "1225080"
  },
  {
    "text": "important and of course the second part",
    "start": "1225080",
    "end": "1227539"
  },
  {
    "text": "of the URL which is different is this",
    "start": "1227539",
    "end": "1230299"
  },
  {
    "text": "query string billing token now the the",
    "start": "1230299",
    "end": "1234679"
  },
  {
    "text": "token which you had acquired from the",
    "start": "1234679",
    "end": "1237100"
  },
  {
    "text": "console needs to be appended here as a",
    "start": "1237100",
    "end": "1240200"
  },
  {
    "text": "query string and this entire URL will be",
    "start": "1240200",
    "end": "1243679"
  },
  {
    "text": "then passed to access the Amazon manage",
    "start": "1243679",
    "end": "1246140"
  },
  {
    "text": "blockchain service the one thing I want",
    "start": "1246140",
    "end": "1248419"
  },
  {
    "text": "to mention here is that you should never",
    "start": "1248419",
    "end": "1250220"
  },
  {
    "text": "store the billing token or the the",
    "start": "1250220",
    "end": "1253820"
  },
  {
    "text": "complete URL in uh as a config file in",
    "start": "1253820",
    "end": "1258200"
  },
  {
    "text": "uh you know close to your code",
    "start": "1258200",
    "end": "1259820"
  },
  {
    "text": "especially if you are deploying your or",
    "start": "1259820",
    "end": "1263059"
  },
  {
    "text": "committing your code to a GitHub",
    "start": "1263059",
    "end": "1265340"
  },
  {
    "text": "repository because it will be",
    "start": "1265340",
    "end": "1268419"
  },
  {
    "text": "extremely bad practice uh to uh to allow",
    "start": "1268419",
    "end": "1272660"
  },
  {
    "text": "the billing token or the URL the",
    "start": "1272660",
    "end": "1275360"
  },
  {
    "text": "complete URL to be exposed in the git",
    "start": "1275360",
    "end": "1278840"
  },
  {
    "text": "Repository",
    "start": "1278840",
    "end": "1280100"
  },
  {
    "text": "the way I'm doing it here is I'm",
    "start": "1280100",
    "end": "1282380"
  },
  {
    "text": "actually also storing the entire billing",
    "start": "1282380",
    "end": "1284480"
  },
  {
    "text": "token uh in the secret manager and just",
    "start": "1284480",
    "end": "1287539"
  },
  {
    "text": "like how I get the secret access ID and",
    "start": "1287539",
    "end": "1291020"
  },
  {
    "text": "um an access key ID from the secret",
    "start": "1291020",
    "end": "1293900"
  },
  {
    "text": "manager for Signature four I do the same",
    "start": "1293900",
    "end": "1296600"
  },
  {
    "text": "thing for building billing token also I",
    "start": "1296600",
    "end": "1299059"
  },
  {
    "text": "get the value from the secret manager",
    "start": "1299059",
    "end": "1301100"
  },
  {
    "text": "and then use that value to",
    "start": "1301100",
    "end": "1304460"
  },
  {
    "text": "um you get my URL so that um you know",
    "start": "1304460",
    "end": "1307520"
  },
  {
    "text": "for the for accessing the amb though",
    "start": "1307520",
    "end": "1311360"
  },
  {
    "text": "so now uh what I would like to do is do",
    "start": "1311360",
    "end": "1314780"
  },
  {
    "text": "a quick demo of uh both using the",
    "start": "1314780",
    "end": "1318140"
  },
  {
    "text": "billing token as well as the signature",
    "start": "1318140",
    "end": "1321620"
  },
  {
    "text": "V4 to show how the access to amb happens",
    "start": "1321620",
    "end": "1325340"
  },
  {
    "text": "so as I had already mentioned that this",
    "start": "1325340",
    "end": "1328179"
  },
  {
    "text": "contract provider JS file controls which",
    "start": "1328179",
    "end": "1332840"
  },
  {
    "text": "access method we will use",
    "start": "1332840",
    "end": "1335000"
  },
  {
    "text": "the parameter right now assigned to the",
    "start": "1335000",
    "end": "1338960"
  },
  {
    "text": "network connect is",
    "start": "1338960",
    "end": "1340419"
  },
  {
    "text": "amb-6v sig4 and therefore it's going to",
    "start": "1340419",
    "end": "1343580"
  },
  {
    "text": "be using the extended HTTP provider",
    "start": "1343580",
    "end": "1347659"
  },
  {
    "text": "which we have created and it will be",
    "start": "1347659",
    "end": "1349760"
  },
  {
    "text": "using signature V4 so let's run this",
    "start": "1349760",
    "end": "1352280"
  },
  {
    "text": "code",
    "start": "1352280",
    "end": "1353059"
  },
  {
    "text": "now I want to mention here that my",
    "start": "1353059",
    "end": "1356419"
  },
  {
    "text": "signature V4",
    "start": "1356419",
    "end": "1359080"
  },
  {
    "text": "URL is pointing to the main net and my",
    "start": "1359080",
    "end": "1364039"
  },
  {
    "text": "token based access is pointing to the",
    "start": "1364039",
    "end": "1366620"
  },
  {
    "text": "girly network uh both via the Amazon",
    "start": "1366620",
    "end": "1369500"
  },
  {
    "text": "managed blockchain service",
    "start": "1369500",
    "end": "1371659"
  },
  {
    "text": "so the in order for me to make sure that",
    "start": "1371659",
    "end": "1375980"
  },
  {
    "text": "I use signature V4 I have to set the",
    "start": "1375980",
    "end": "1379100"
  },
  {
    "text": "network connect variable in the connect",
    "start": "1379100",
    "end": "1382059"
  },
  {
    "text": "provider file to the whatever access",
    "start": "1382059",
    "end": "1385580"
  },
  {
    "text": "method I want to use so first I'm going",
    "start": "1385580",
    "end": "1388039"
  },
  {
    "text": "to be using the Sig V4 method to to",
    "start": "1388039",
    "end": "1391940"
  },
  {
    "text": "connect to the mainnet and when I run",
    "start": "1391940",
    "end": "1395539"
  },
  {
    "text": "the code in the network connect.js it",
    "start": "1395539",
    "end": "1399200"
  },
  {
    "text": "will retrieve the network ID as well as",
    "start": "1399200",
    "end": "1401960"
  },
  {
    "text": "any balance associated with this account",
    "start": "1401960",
    "end": "1405980"
  },
  {
    "text": "so let's run the code",
    "start": "1405980",
    "end": "1409299"
  },
  {
    "text": "I'm running node with the network",
    "start": "1410960",
    "end": "1412820"
  },
  {
    "text": "connect.js",
    "start": "1412820",
    "end": "1415820"
  },
  {
    "text": "and as you can see that it Returns the",
    "start": "1416240",
    "end": "1419780"
  },
  {
    "text": "network ID of 1 which is the mainnet",
    "start": "1419780",
    "end": "1422480"
  },
  {
    "text": "ethereum mainit address and of course I",
    "start": "1422480",
    "end": "1425240"
  },
  {
    "text": "have no balance associated with this",
    "start": "1425240",
    "end": "1427400"
  },
  {
    "text": "account so the balance it return is zero",
    "start": "1427400",
    "end": "1430520"
  },
  {
    "text": "now let's change the uh",
    "start": "1430520",
    "end": "1433840"
  },
  {
    "text": "variable and make it uh amb Dash DBA so",
    "start": "1433840",
    "end": "1439100"
  },
  {
    "text": "that it can use the billing token",
    "start": "1439100",
    "end": "1443799"
  },
  {
    "text": "and this is going to be pointing to the",
    "start": "1444020",
    "end": "1447020"
  },
  {
    "text": "goalie Network",
    "start": "1447020",
    "end": "1450159"
  },
  {
    "text": "and there you go the network ID return",
    "start": "1452299",
    "end": "1454460"
  },
  {
    "text": "is five and of course I do have some",
    "start": "1454460",
    "end": "1457100"
  },
  {
    "text": "ether balance associated with this",
    "start": "1457100",
    "end": "1459320"
  },
  {
    "text": "account",
    "start": "1459320",
    "end": "1460760"
  },
  {
    "text": "now let's talk about some key",
    "start": "1460760",
    "end": "1462440"
  },
  {
    "text": "differences between signature 4 and",
    "start": "1462440",
    "end": "1464360"
  },
  {
    "text": "token base access",
    "start": "1464360",
    "end": "1465980"
  },
  {
    "text": "token base access is convenient to use",
    "start": "1465980",
    "end": "1469159"
  },
  {
    "text": "as you've already seen that does not",
    "start": "1469159",
    "end": "1471260"
  },
  {
    "text": "require any kind of custom coding",
    "start": "1471260",
    "end": "1473480"
  },
  {
    "text": "a different type of access X's cannot be",
    "start": "1473480",
    "end": "1476600"
  },
  {
    "text": "specified using TPA what it means that",
    "start": "1476600",
    "end": "1479780"
  },
  {
    "text": "once you create a billing token that URL",
    "start": "1479780",
    "end": "1483440"
  },
  {
    "text": "have full access to the ethereum node",
    "start": "1483440",
    "end": "1486500"
  },
  {
    "text": "and that access cannot be uh restricted",
    "start": "1486500",
    "end": "1489980"
  },
  {
    "text": "in any way",
    "start": "1489980",
    "end": "1491480"
  },
  {
    "text": "signature V4 on the other hand uses the",
    "start": "1491480",
    "end": "1494419"
  },
  {
    "text": "same security mechanism used in many of",
    "start": "1494419",
    "end": "1496520"
  },
  {
    "text": "the AWS services and thus is a proven",
    "start": "1496520",
    "end": "1499039"
  },
  {
    "text": "security access method",
    "start": "1499039",
    "end": "1501200"
  },
  {
    "text": "access ID and secret key used in the Sig",
    "start": "1501200",
    "end": "1504260"
  },
  {
    "text": "V4 can be associated with a user with",
    "start": "1504260",
    "end": "1507440"
  },
  {
    "text": "least privileged access",
    "start": "1507440",
    "end": "1509900"
  },
  {
    "text": "make sure you understand the pros and",
    "start": "1509900",
    "end": "1513020"
  },
  {
    "text": "cons of both the access method before",
    "start": "1513020",
    "end": "1514940"
  },
  {
    "text": "you decide to go with one or the other",
    "start": "1514940",
    "end": "1518240"
  },
  {
    "text": "thank you very much for watching this",
    "start": "1518240",
    "end": "1520039"
  },
  {
    "text": "video",
    "start": "1520039",
    "end": "1521059"
  },
  {
    "text": "please leave your comments and feedback",
    "start": "1521059",
    "end": "1523159"
  },
  {
    "text": "below thank you",
    "start": "1523159",
    "end": "1526059"
  }
]