[
  {
    "text": "so today I'm going to be talking about delivering a database as a service using advanced AWS networking but really I'll",
    "start": "1290",
    "end": "10290"
  },
  {
    "text": "be taking kind of what we do as a company but general kind of generalizing a lot of the lessons that we've learnt",
    "start": "10290",
    "end": "15780"
  },
  {
    "text": "and then hoping that you guys can apply them and take them if you need to deliver your own network services",
    "start": "15780",
    "end": "21720"
  },
  {
    "text": "yourselves so my name is ben Bromhead i'm CTO and founder of insta cluster",
    "start": "21720",
    "end": "27900"
  },
  {
    "text": "insta cluster we provide Cassandra as a service we currently manage that numbers",
    "start": "27900",
    "end": "35370"
  },
  {
    "text": "actually a little bit out of date we now manage just over 350 instances with 95%",
    "start": "35370",
    "end": "40980"
  },
  {
    "text": "of that on Amazon Web Services so first",
    "start": "40980",
    "end": "46320"
  },
  {
    "text": "of all I'm going to talk a little bit about some of the challenges faced in delivering a database as a service and",
    "start": "46320",
    "end": "52920"
  },
  {
    "text": "again as I mentioned previously I'll be using Cassandra as an example but really you could take this and apply this to",
    "start": "52920",
    "end": "59190"
  },
  {
    "text": "any service that you need to deliver within your organization or externally",
    "start": "59190",
    "end": "66540"
  },
  {
    "text": "took third parties and then I'm gonna talk a little bit as well about how when",
    "start": "66540",
    "end": "71820"
  },
  {
    "text": "to use various AWS and networking features to sol some of the challenges that you will face in terms of",
    "start": "71820",
    "end": "77310"
  },
  {
    "text": "delivering these services into your own organization and it will also include a bit of a meandering history of our own",
    "start": "77310",
    "end": "83900"
  },
  {
    "text": "AWS journey that's kind of weaved in there so first of all I'll just quickly",
    "start": "83900",
    "end": "89790"
  },
  {
    "text": "cover some basics what is Cassandra for those that haven't heard of it's a it's",
    "start": "89790",
    "end": "95850"
  },
  {
    "text": "a scalable highly available transactional database or something that you run your main application on",
    "start": "95850",
    "end": "101630"
  },
  {
    "text": "inspired by dynamo and BigTable papers so it takes a dynamo masterless",
    "start": "101630",
    "end": "108329"
  },
  {
    "text": "architecture and kind of merges it with the the big type the BigTable a wide",
    "start": "108329",
    "end": "114659"
  },
  {
    "text": "column calling a storage format it includes tunable consistency so that",
    "start": "114659",
    "end": "120240"
  },
  {
    "text": "means that you as a developer you can make a choice between whether you want an operation that you're about to",
    "start": "120240",
    "end": "126719"
  },
  {
    "text": "perform to be either highly consistent or highly available depending on the replicas that are available and one",
    "start": "126719",
    "end": "134330"
  },
  {
    "text": "other thing that will kind of be a little bit important as I'm talking about some of the decisions we made is",
    "start": "134330",
    "end": "140480"
  },
  {
    "text": "that clients are very much aware of the topology of the cluster that you're supporting so what should a Kassandra as",
    "start": "140480",
    "end": "147260"
  },
  {
    "text": "a service actually look like you know it should be high throughput it should be",
    "start": "147260",
    "end": "152390"
  },
  {
    "text": "low latency it should be secure it should be easy and unfortunately this",
    "start": "152390",
    "end": "158030"
  },
  {
    "text": "bullet point fell off but it's actually one of the most important things it should be highly available so when we",
    "start": "158030",
    "end": "166700"
  },
  {
    "text": "started off you know down the path of decide Oh designing and building out",
    "start": "166700",
    "end": "171980"
  },
  {
    "text": "Cassandra as a service one of the challenges that we faced or one of the challenges that you know anyone who",
    "start": "171980",
    "end": "178280"
  },
  {
    "text": "provides something as a service will face is multi-tenancy so how do you how",
    "start": "178280",
    "end": "183560"
  },
  {
    "text": "do you split up the service that you're providing and provide decent isolation to the customers that you're working",
    "start": "183560",
    "end": "189530"
  },
  {
    "text": "with so how we first started or our",
    "start": "189530",
    "end": "194810"
  },
  {
    "text": "first attempt at multi-tenancy multi-tenancy was actually done by deploying resources under our customers",
    "start": "194810",
    "end": "200870"
  },
  {
    "text": "own AWS accounts and and we had limited access to those accounts for our iam",
    "start": "200870",
    "end": "206570"
  },
  {
    "text": "users and billing was done via Amazon dev pay so the reason why we decided to",
    "start": "206570",
    "end": "212180"
  },
  {
    "text": "go down this path is it allowed us to provide isolation kind of at the network",
    "start": "212180",
    "end": "217220"
  },
  {
    "text": "in the the account level we explored a few other things like doing multi-tenancy using Cassandra itself or",
    "start": "217220",
    "end": "225620"
  },
  {
    "text": "using or doing multi-tenancy using containerization although this was a few",
    "start": "225620",
    "end": "230660"
  },
  {
    "text": "years ago and so we're looking at doing it with Solaris zones but I guess you",
    "start": "230660",
    "end": "236420"
  },
  {
    "text": "got to look at what Cassandra is it's essentially - it's a scalable database that's designed for when you've got more",
    "start": "236420",
    "end": "243170"
  },
  {
    "text": "data than what will fit into a single server so trying to actually do",
    "start": "243170",
    "end": "248450"
  },
  {
    "text": "multi-tenancy within a single box tends to not make a lot of sense particularly given the use case that Cassandra is for",
    "start": "248450",
    "end": "256180"
  },
  {
    "text": "plus there was a few issues just with the way that Cassandra handled certain things that just didn't we would have to",
    "start": "256180",
    "end": "262789"
  },
  {
    "text": "kind of rewrite a lot of stuff within it to do through multi-tenancy within within the project the project itself so as I",
    "start": "262789",
    "end": "276380"
  },
  {
    "text": "mentioned you know there's no point trying to multi-tenant Cassandra and that's kind of why we went down you know",
    "start": "276380",
    "end": "283460"
  },
  {
    "text": "doing it within the AWS account this is what it looked like from a network diagram level this was also before we",
    "start": "283460",
    "end": "290510"
  },
  {
    "text": "started to support VP C's so this is all kind of AC to classic what we've got is",
    "start": "290510",
    "end": "297620"
  },
  {
    "text": "you know would automatically split things across different availability zones would provision and configure",
    "start": "297620",
    "end": "302900"
  },
  {
    "text": "Cassandra make it do its thing and then isolate it all using a security group now of course because this was in ec2",
    "start": "302900",
    "end": "309410"
  },
  {
    "text": "classic it also had you shared the private address space with all the other day ws customers and then would also",
    "start": "309410",
    "end": "316280"
  },
  {
    "text": "provision elastic I pays with each instance as well to support multi region connectivity it had it had a few issues",
    "start": "316280",
    "end": "324160"
  },
  {
    "text": "one of the main ones was we were now holding the keys to people's AWS",
    "start": "324160",
    "end": "330170"
  },
  {
    "text": "accounts it made a lot of things very easy for us but it also gave me cold sweats at night",
    "start": "330170",
    "end": "336590"
  },
  {
    "text": "because I didn't want to have the keys to their kingdom now we provided I am",
    "start": "336590",
    "end": "341750"
  },
  {
    "text": "templates that would you know they could apply to the IAM user that would restrict the permissions that they gave",
    "start": "341750",
    "end": "347960"
  },
  {
    "text": "to us but more often than not they just actually kind of gave in an allow all",
    "start": "347960",
    "end": "352970"
  },
  {
    "text": "rule at the end and we could kind of do anything in their account and that was not particularly good it was very simple",
    "start": "352970",
    "end": "361130"
  },
  {
    "text": "to run it was just a matter of loading and you said if I am credentials whenever we went to do stuff billing was",
    "start": "361130",
    "end": "366200"
  },
  {
    "text": "very simple due to Amazon dev pay but there were some real issues that we",
    "start": "366200",
    "end": "371390"
  },
  {
    "text": "faced I'll talk a little bit about V PC later but there's when you're working",
    "start": "371390",
    "end": "378260"
  },
  {
    "text": "with different AWS accounts one of the things to keep in mind is that actually no two AWS accounts are actually the",
    "start": "378260",
    "end": "383870"
  },
  {
    "text": "same particularly when you've been using you're dealing with people that have had AWS accounts for a few years and then",
    "start": "383870",
    "end": "390500"
  },
  {
    "text": "you're also dealing with people that have like recently signed up so a great example of this is we actually hit a few",
    "start": "390500",
    "end": "395630"
  },
  {
    "text": "issues where the users would not have certain services enabled if they were old",
    "start": "395630",
    "end": "402229"
  },
  {
    "text": "account users I don't think I'm Azam has done this for a little while but previously some of the new features that",
    "start": "402229",
    "end": "408860"
  },
  {
    "text": "were actually opted in so you'd have to log into your AWS console and you know enable something like simple DB or all",
    "start": "408860",
    "end": "415790"
  },
  {
    "text": "that kind of thing so it made it very hard from us to provide a very smooth process because first of all there",
    "start": "415790",
    "end": "422990"
  },
  {
    "text": "wasn't any API that we could call to say hey enable this this account and so for some people's ALW accounts it would work",
    "start": "422990",
    "end": "429650"
  },
  {
    "text": "for others it wouldn't billing wasn't quite as flexible with using Amazon dev",
    "start": "429650",
    "end": "435979"
  },
  {
    "text": "pay simply because it was just a fixed rate that you charge the Ali am I at so",
    "start": "435979",
    "end": "441770"
  },
  {
    "text": "you know we decided to kind of move away from that the other really annoying thing is that because it was provisioned",
    "start": "441770",
    "end": "447380"
  },
  {
    "text": "under their account customers would also then mess with the resources that we provided and I'd turn stuff off I would",
    "start": "447380",
    "end": "454220"
  },
  {
    "text": "change security group rules and it was very hard to kind of keep our management service in sync with what actually",
    "start": "454220",
    "end": "461419"
  },
  {
    "text": "happened under AWS the other really interesting thing was it's actually really hard to detect available",
    "start": "461419",
    "end": "468430"
  },
  {
    "text": "availability zone capacity before you go to launch an instance the reason and I",
    "start": "468430",
    "end": "476479"
  },
  {
    "text": "guess going back a step one of the reasons why we had to detect which availability zones had capacity is that",
    "start": "476479",
    "end": "483260"
  },
  {
    "text": "under my AWS account us east 1a is actually different to your u.s. east 1a",
    "start": "483260",
    "end": "489289"
  },
  {
    "text": "I can guarantee you it's not going to be within the same data center or the same availability zone so each mapping is",
    "start": "489289",
    "end": "494900"
  },
  {
    "text": "actually different on a per account level then when we say we had to detect which available availability zones we",
    "start": "494900",
    "end": "502190"
  },
  {
    "text": "had access to and then even if the API said hey yep you're allowed to deploy in here there would be some instance type",
    "start": "502190",
    "end": "509330"
  },
  {
    "text": "families that we still couldn't necessarily deploy if that zone was constrained so there'd be some zones",
    "start": "509330",
    "end": "515779"
  },
  {
    "text": "where AWS would report that it's constrained on say you know the the m1",
    "start": "515779",
    "end": "522260"
  },
  {
    "text": "series or the T series so you know we kind of had to do some funky things",
    "start": "522260",
    "end": "529010"
  },
  {
    "text": "where we would quickly try and launch an instance an account then delete it before provisioned let's try and work out",
    "start": "529010",
    "end": "535090"
  },
  {
    "text": "whether we had capacity that went you know loading in someone's new AWS account so as you can see here",
    "start": "535090",
    "end": "542200"
  },
  {
    "text": "multi-tenancy by AWS account it was very simple for us to get up and running and start providing services into our",
    "start": "542200",
    "end": "549100"
  },
  {
    "text": "customers accounts but there was a lot of overhead that made it very fiddly and we kind of especially with the fact that",
    "start": "549100",
    "end": "557140"
  },
  {
    "text": "was all you know AC to classic base and we wanted to start supporting VP C's it",
    "start": "557140",
    "end": "562630"
  },
  {
    "text": "was all a bit of a catalyst to change so we decided to run everything under our",
    "start": "562630",
    "end": "568960"
  },
  {
    "text": "own AWS account and provide services into our customer that way the pros with",
    "start": "568960",
    "end": "574720"
  },
  {
    "text": "this is a greatly reduced our support overhead people couldn't like mess with the resources that we'll provisioning",
    "start": "574720",
    "end": "580840"
  },
  {
    "text": "under their account we were able to take control of billing and it really allowed us to leverage some of the cool features",
    "start": "580840",
    "end": "586870"
  },
  {
    "text": "like reserved instances and and all that kind of fun stuff and it really simplified our own interface with AWS",
    "start": "586870",
    "end": "594360"
  },
  {
    "text": "the cons we had to rewrite everything but you know like with all good IT",
    "start": "594360",
    "end": "599500"
  },
  {
    "text": "projects you're going to do that anyway we had to do our own billing but also when we decided to do this some of the I",
    "start": "599500",
    "end": "607240"
  },
  {
    "text": "guess the easy developer API the ecosystem had kind of sprung up in the meantime and it was actually a little",
    "start": "607240",
    "end": "613390"
  },
  {
    "text": "bit simpler than we thought we we",
    "start": "613390",
    "end": "620290"
  },
  {
    "text": "already know our own availability zone capacity it does mean that we have to",
    "start": "620290",
    "end": "625690"
  },
  {
    "text": "then manage it and we are in a situation where we do have some zones that we are now constrained in but you know that's",
    "start": "625690",
    "end": "634180"
  },
  {
    "text": "something we kind of I'll talk a little bit about later on and as we use this",
    "start": "634180",
    "end": "641080"
  },
  {
    "text": "opportunity to move across to using VP sees it then presented us with the",
    "start": "641080",
    "end": "646270"
  },
  {
    "text": "challenge of how do we allow our customers to connect to the service we provide via a private interface and not",
    "start": "646270",
    "end": "652210"
  },
  {
    "text": "having to go out over a public IP address so how do we do this in a V PC because the V PC inherently stops you",
    "start": "652210",
    "end": "658840"
  },
  {
    "text": "from doing that compared to ec2 classic so this is what it looked like the way",
    "start": "658840",
    "end": "666529"
  },
  {
    "text": "we decided to go down this path is that for each customer in each Cassandra",
    "start": "666529",
    "end": "671899"
  },
  {
    "text": "cluster we would actually provision it in its own VPC so each customer would",
    "start": "671899",
    "end": "676910"
  },
  {
    "text": "get its own isolated Cassandra cluster even if you had multiple clusters within",
    "start": "676910",
    "end": "683360"
  },
  {
    "text": "the same customer account they would be in their own individual V pcs and then",
    "start": "683360",
    "end": "690740"
  },
  {
    "text": "that'll and then so that allowed us to kind of really isolate things at the network level and that's how we started",
    "start": "690740",
    "end": "697160"
  },
  {
    "text": "to solve some of our own multi-tenancy issues so the side effects include we",
    "start": "697160",
    "end": "702529"
  },
  {
    "text": "now have a lot of VP C's we're actually getting to a point where there are actual hard limits on the number of VP",
    "start": "702529",
    "end": "709399"
  },
  {
    "text": "C's you can have pair account so we're now having to run multiple AWS accounts",
    "start": "709399",
    "end": "715339"
  },
  {
    "text": "just to get around that VPC limit so we're almost kind of like stepping back to where we came from but at least",
    "start": "715339",
    "end": "722899"
  },
  {
    "text": "they're all owned and managed by us so in terms of how can you take what I've",
    "start": "722899",
    "end": "730490"
  },
  {
    "text": "just talked about unapplied to a situation that that you're potentially looking to have to support if you're going to be delivering a service into",
    "start": "730490",
    "end": "737360"
  },
  {
    "text": "your own organization or to third parties when is it a good idea to",
    "start": "737360",
    "end": "742399"
  },
  {
    "text": "multi-tenant with with VP C's sorry primarily the service that you're",
    "start": "742399",
    "end": "747620"
  },
  {
    "text": "providing it needs to be in network service it needs to be something that it should be something that people are just",
    "start": "747620",
    "end": "752720"
  },
  {
    "text": "going to connect with to on you know port you know 9000 or whatever it is and",
    "start": "752720",
    "end": "758209"
  },
  {
    "text": "that's the main way they consume it it's got its own protocol its own API that you don't want to say sticker HTTP front",
    "start": "758209",
    "end": "766160"
  },
  {
    "text": "end in front of all that kind of thing the other thing that we find it very helpful for is when the service you",
    "start": "766160",
    "end": "772339"
  },
  {
    "text": "provide is directly related to resource consumption so again if you're providing database as",
    "start": "772339",
    "end": "777680"
  },
  {
    "text": "a service you tend to be charging your customers or billing back to your other departments based on the resources that",
    "start": "777680",
    "end": "784939"
  },
  {
    "text": "they're consuming so this last relational level makes it very simple using some great OWS features like such",
    "start": "784939",
    "end": "791329"
  },
  {
    "text": "as tagging and all that fun stuff is very easy to then you know tag which resources and get",
    "start": "791329",
    "end": "797230"
  },
  {
    "text": "some good billing metrics out of the back of that the service you also deploy",
    "start": "797230",
    "end": "803260"
  },
  {
    "text": "leverages a complete and complex network configuration so by isolating things within a V PC unless you do some really",
    "start": "803260",
    "end": "811330"
  },
  {
    "text": "cool things like all you need to do is be able to provide network connectivity in and then someone can consume that",
    "start": "811330",
    "end": "817600"
  },
  {
    "text": "that service so you don't have to worry about you know if we drop a VPN into that V PC we don't have to worry about",
    "start": "817600",
    "end": "823900"
  },
  {
    "text": "them configuring firewall rules to stop it talking to other customers we just need to provide network access and then",
    "start": "823900",
    "end": "829840"
  },
  {
    "text": "they consume it as they see fit and this brings me on to the next challenge that we faced is connectivity",
    "start": "829840",
    "end": "837010"
  },
  {
    "text": "right so as I mentioned before you know it was great to go down the V PC route we got access to enhanced networking",
    "start": "837010",
    "end": "845290"
  },
  {
    "text": "instances you know all sorts of great stuff the network's a lot more stable in a V PC environment and you know it",
    "start": "845290",
    "end": "853180"
  },
  {
    "text": "simplified our multi-tenancy issues but it came at the cost of how do we figure out supporting connectivity particularly",
    "start": "853180",
    "end": "859930"
  },
  {
    "text": "from external customers so you know how do we support people connecting in from",
    "start": "859930",
    "end": "867700"
  },
  {
    "text": "different service providers how do we support developers simply connecting in from their own private or personal",
    "start": "867700",
    "end": "873130"
  },
  {
    "text": "machines how do we support things like multi region Cassandra clusters where",
    "start": "873130",
    "end": "878140"
  },
  {
    "text": "they actually do need to communicate over different you know continents and that kind of thing as well as hybrid",
    "start": "878140",
    "end": "884860"
  },
  {
    "text": "clusters so ones that you know there's a portion running in a cloud in a cloud environment like AWS and then also",
    "start": "884860",
    "end": "891190"
  },
  {
    "text": "within a private data center so you know the resulting requirement from all that",
    "start": "891190",
    "end": "896950"
  },
  {
    "text": "is essentially how do we let people connect in from outside AWS luckily centers really good at this",
    "start": "896950",
    "end": "903760"
  },
  {
    "text": "thanks to some great work by Netflix it actually natively understands mattad environments so that's where you have a",
    "start": "903760",
    "end": "910750"
  },
  {
    "text": "public IP address that is then translated into a private IP address so",
    "start": "910750",
    "end": "915880"
  },
  {
    "text": "Cassandra understands that and it can say broadcast it's public IP address is the main contact point but it can still",
    "start": "915880",
    "end": "922300"
  },
  {
    "text": "do all its communication over its private IP so what that means for us is we can deploy instances",
    "start": "922300",
    "end": "928180"
  },
  {
    "text": "to a subnet with it's within the VPC with his own internet gateway we then",
    "start": "928180",
    "end": "933339"
  },
  {
    "text": "give a public IP address for every node is sprinkle in a little bit of you know",
    "start": "933339",
    "end": "938950"
  },
  {
    "text": "security group magic and Cassandra authentication is gonna make sure it's all protected and you've kind of got",
    "start": "938950",
    "end": "945459"
  },
  {
    "text": "something running in a V PC this is very similar to what you were doing with Cassandra and ec2 classic problem solved",
    "start": "945459",
    "end": "953320"
  },
  {
    "text": "right he's a very simple diagram of of",
    "start": "953320",
    "end": "958600"
  },
  {
    "text": "what something running with you know elastic copies look like and when would",
    "start": "958600",
    "end": "964810"
  },
  {
    "text": "I want to do this when you want people to actually use your service externally so the next challenge we faced in",
    "start": "964810",
    "end": "972130"
  },
  {
    "text": "providing access into our own service that we were delivering is to support Heroku customers so for those of you who",
    "start": "972130",
    "end": "980080"
  },
  {
    "text": "are not familiar with it Heroku is a platform as a service that runs on top of AWS it allows you to run clients in",
    "start": "980080",
    "end": "988240"
  },
  {
    "text": "Heroku takes care of a lot of the management in terms of scaling and running it and coping with load the one",
    "start": "988240",
    "end": "995380"
  },
  {
    "text": "issue that we had with it is that people connecting from Heroku actually have no",
    "start": "995380",
    "end": "1000870"
  },
  {
    "text": "control over the IP address that they're connecting from right so the the unit of",
    "start": "1000870",
    "end": "1006660"
  },
  {
    "text": "work within Heroku is called a dyno and each dyno will periodically get refreshed at least or at a minimum of",
    "start": "1006660",
    "end": "1013800"
  },
  {
    "text": "once every 24 hours I believe so that means that the IP address of the clients that they're connecting from changes",
    "start": "1013800",
    "end": "1020339"
  },
  {
    "text": "quite often so it's something very hard to kind of manage from a security group point of view one because at the time we",
    "start": "1020339",
    "end": "1028020"
  },
  {
    "text": "didn't have an API that let you do that automatically but two updating security",
    "start": "1028020",
    "end": "1033089"
  },
  {
    "text": "group rules frequently particularly in a system where a high throughput network can be a little bit painful because when",
    "start": "1033089",
    "end": "1039089"
  },
  {
    "text": "you update a security group there's actually a small fraction of time where it kind of like it cuts all the links",
    "start": "1039089",
    "end": "1044880"
  },
  {
    "text": "all the sessions and then reapplies the rules and then all the network comes kind of comes back up so you kind of get",
    "start": "1044880",
    "end": "1051900"
  },
  {
    "text": "this all that blip of you know network stuff not happening so it can be a",
    "start": "1051900",
    "end": "1057300"
  },
  {
    "text": "little bit painful so the resulting requirement we had from this was actually two supports to a global ingress which is a fancy way",
    "start": "1057300",
    "end": "1063830"
  },
  {
    "text": "of saying the flower wall needed to allow so this is an example of what it",
    "start": "1063830",
    "end": "1071570"
  },
  {
    "text": "looked like if a Heroku customer is trying to connect there's the various dinos running in Heroku they can all connect at the",
    "start": "1071570",
    "end": "1077960"
  },
  {
    "text": "moment but then of course one of the Dino cycles and you know you're out of luck so what we did is we allowed the",
    "start": "1077960",
    "end": "1086240"
  },
  {
    "text": "ability to for people to kind of tick the allow all box in the security group this is just adding 0 dot 0 dot 0 slash",
    "start": "1086240",
    "end": "1093770"
  },
  {
    "text": "0 but the really great thing is that cassandra actually supports client to node certificate authentication as well",
    "start": "1093770",
    "end": "1100790"
  },
  {
    "text": "as the other traditional database authentication methods that you're used to such as musa name and password so we",
    "start": "1100790",
    "end": "1107600"
  },
  {
    "text": "rolled out support for certificate authentication and it really gave that that security or you know that",
    "start": "1107600",
    "end": "1114260"
  },
  {
    "text": "confidence that people could be running a database service that is exposed to the big bad internet and so you know it",
    "start": "1114260",
    "end": "1124490"
  },
  {
    "text": "all just kind of works so when you when you need to support universal ingress it",
    "start": "1124490",
    "end": "1129770"
  },
  {
    "text": "usually tends to be when you your customers are unlikely to have a static IP you're supporting complex of changing",
    "start": "1129770",
    "end": "1136880"
  },
  {
    "text": "access patterns where your customer or the the department you're supporting has no control over these kind of things but",
    "start": "1136880",
    "end": "1144410"
  },
  {
    "text": "primarily you only want to do this when your service can support robust authentication if the service that",
    "start": "1144410",
    "end": "1149990"
  },
  {
    "text": "you're providing doesn't necessarily do it you can do things with like s tunnel",
    "start": "1149990",
    "end": "1155960"
  },
  {
    "text": "which will provide SSL authentication on top of just a plaintext network service",
    "start": "1155960",
    "end": "1161720"
  },
  {
    "text": "there's you know there's lots of different things you can do there",
    "start": "1161720",
    "end": "1165670"
  },
  {
    "text": "however some customers think that accessing their database over a private IP addresses is scary",
    "start": "1170380",
    "end": "1176720"
  },
  {
    "text": "and and I don't blame them like it's you know you talk to any traditional admin and say hey I want to let this database",
    "start": "1176720",
    "end": "1184370"
  },
  {
    "text": "be accessible by everyone and they'll flip out and you know when you look at",
    "start": "1184370",
    "end": "1191630"
  },
  {
    "text": "the way that we quite often structure applications is that you know depending on whether",
    "start": "1191630",
    "end": "1197570"
  },
  {
    "text": "it's like a three-tier architecture or micro-services or what have you is that not all applications will actually have",
    "start": "1197570",
    "end": "1203060"
  },
  {
    "text": "direct internet access so they won't be able to necessarily directly access a public IP address so it was easy to do",
    "start": "1203060",
    "end": "1210890"
  },
  {
    "text": "with easy to classic because when working with other AWS customers we were all shared the same private IP address",
    "start": "1210890",
    "end": "1217490"
  },
  {
    "text": "space I was there simply changing some firewall rules but you know now that was that we're running in a V PC it's a bit",
    "start": "1217490",
    "end": "1224270"
  },
  {
    "text": "harder so the requirement that we had is really how do we provide access and",
    "start": "1224270",
    "end": "1229340"
  },
  {
    "text": "revile private IP or to extend that how do we just provide private access this",
    "start": "1229340",
    "end": "1236120"
  },
  {
    "text": "could have actually been really impossible with the V PC if it wasn't for one key AWS feature and that's V PC",
    "start": "1236120",
    "end": "1242300"
  },
  {
    "text": "peering V PC peering had saved our lives in terms of delivering services within",
    "start": "1242300",
    "end": "1248090"
  },
  {
    "text": "an AWS environment it also has dramatically saved some of our bandwidth costs as well because as soon as you're",
    "start": "1248090",
    "end": "1254360"
  },
  {
    "text": "connecting via a PC peering connection you're then only paying across a-z rates",
    "start": "1254360",
    "end": "1262390"
  },
  {
    "text": "when we first did this can I believe now someone's probably going to shout out",
    "start": "1262390",
    "end": "1268070"
  },
  {
    "text": "and correct me if I'm wrong here but at the time when you did connect to a public IP that was charged at the the",
    "start": "1268070",
    "end": "1275540"
  },
  {
    "text": "the public IP rates I believe that's now different but someone feel free to correct me if I'm wrong here so this is",
    "start": "1275540",
    "end": "1284420"
  },
  {
    "text": "what V PC peering looks like on the left hand side we've got everything managed",
    "start": "1284420",
    "end": "1290210"
  },
  {
    "text": "by our account we've got some V PC sitting on there and what you can do is",
    "start": "1290210",
    "end": "1296030"
  },
  {
    "text": "you can actually set V PC peering connections with it with third-party AWS",
    "start": "1296030",
    "end": "1301160"
  },
  {
    "text": "accounts so it's simply just a matter of you providing giving us you AWS account",
    "start": "1301160",
    "end": "1307790"
  },
  {
    "text": "number the V PC ID that you want to peer with and also the network submit that",
    "start": "1307790",
    "end": "1315230"
  },
  {
    "text": "that V PC is running on and we can automatically create a V PC peering request that you then accept and we then",
    "start": "1315230",
    "end": "1323030"
  },
  {
    "text": "update our own routing tables so that you know we know how to talk update the security group rule the security group rules and then",
    "start": "1323030",
    "end": "1330649"
  },
  {
    "text": "all of a sudden we've essentially got native can you know communication",
    "start": "1330649",
    "end": "1335960"
  },
  {
    "text": "between the to be pcs the other",
    "start": "1335960",
    "end": "1341330"
  },
  {
    "text": "interesting thing about V PC peering is that on both sides of that everything like it sits within your own security",
    "start": "1341330",
    "end": "1347750"
  },
  {
    "text": "group so that's been really beneficial for some of our customers that we've dealt with because when we've suggested",
    "start": "1347750",
    "end": "1353990"
  },
  {
    "text": "V PC peering they've gone well you want to have access into our B PC but the",
    "start": "1353990",
    "end": "1360950"
  },
  {
    "text": "really good thing with security groups is you can allow just simple outbound access from their instances they connect",
    "start": "1360950",
    "end": "1369230"
  },
  {
    "text": "to the Cassandra clustering running by us but they actually don't have to give us any security group permissions to",
    "start": "1369230",
    "end": "1374870"
  },
  {
    "text": "connect back into their services because the security group system supports tracking stateful connections so they're",
    "start": "1374870",
    "end": "1383000"
  },
  {
    "text": "protected by their own security group we can't see any of the resources that are",
    "start": "1383000",
    "end": "1388190"
  },
  {
    "text": "within their V PC other than what's connecting back to our cluster so V PC",
    "start": "1388190",
    "end": "1397490"
  },
  {
    "text": "peering is our most used AWS feature other than ec2 instances which we run",
    "start": "1397490",
    "end": "1403159"
  },
  {
    "text": "everything on and you know VP sees seventy percent of our production clusters have one or more V PC peering",
    "start": "1403159",
    "end": "1409100"
  },
  {
    "text": "connections with another account and has been absolutely critical to adoption",
    "start": "1409100",
    "end": "1414169"
  },
  {
    "text": "within the enterprise it's also critical for multi level architectures where the a player does not have external egress",
    "start": "1414169",
    "end": "1420769"
  },
  {
    "text": "so I can't talk to the internet we still almost always need to educate our own",
    "start": "1420769",
    "end": "1427460"
  },
  {
    "text": "customers and consumers of this service about V PC peering it tends to be a fairly little-known feature particularly",
    "start": "1427460",
    "end": "1435289"
  },
  {
    "text": "when a lot of the customers that we at least work with they're still just all running in a single V PC you still incur",
    "start": "1435289",
    "end": "1442610"
  },
  {
    "text": "into AZ traffic charges but that tends to happen anyway just by the distributed",
    "start": "1442610",
    "end": "1448490"
  },
  {
    "text": "nature of Cassandra so when when when do",
    "start": "1448490",
    "end": "1454789"
  },
  {
    "text": "you actually want to use V PC peering obviously it's when resources that are",
    "start": "1454789",
    "end": "1460429"
  },
  {
    "text": "accessing your servers - located in AWS and you provide a service that it tends to be used by a",
    "start": "1460429",
    "end": "1466580"
  },
  {
    "text": "tear that is not able to communicate externally and then you've also when",
    "start": "1466580",
    "end": "1471830"
  },
  {
    "text": "you've got security concerns around that so taking that away and apply it to a",
    "start": "1471830",
    "end": "1477680"
  },
  {
    "text": "situation where you have to deliver services internally to your own organization VPC peering will be your",
    "start": "1477680",
    "end": "1484340"
  },
  {
    "text": "friend in terms of network performance it's it's like being on the same within",
    "start": "1484340",
    "end": "1490250"
  },
  {
    "text": "the same availability sorry that within the same VPC you will obviously have the",
    "start": "1490250",
    "end": "1496190"
  },
  {
    "text": "same cross a Z latency that you get but it's it's being super helpful for us so",
    "start": "1496190",
    "end": "1506870"
  },
  {
    "text": "challenge number three that we face with doing this is invariably when you build",
    "start": "1506870",
    "end": "1512150"
  },
  {
    "text": "a you know any kind of as a service business the way you're going to make",
    "start": "1512150",
    "end": "1517910"
  },
  {
    "text": "money is by ensuring the uniformity of customer accounts and if you're delivering services in within your own",
    "start": "1517910",
    "end": "1523730"
  },
  {
    "text": "organization the way that you reduce your own support overheads is by ensuring that there is uniformity of the",
    "start": "1523730",
    "end": "1530000"
  },
  {
    "text": "service that you're delivering into the organization reduce the support costs",
    "start": "1530000",
    "end": "1535010"
  },
  {
    "text": "ensures consistent experience across customers that's that's actually a really big thing and as we as a growing",
    "start": "1535010",
    "end": "1542840"
  },
  {
    "text": "startup one of the solutions actually still really haunt us because we've had to do things to try and win business and",
    "start": "1542840",
    "end": "1548720"
  },
  {
    "text": "and all that fun stuff but as I mentioned one of solutions have also won us accounts and eventually they've been",
    "start": "1548720",
    "end": "1556250"
  },
  {
    "text": "rolled into production features so whenever we go to eat the forbidden",
    "start": "1556250",
    "end": "1563750"
  },
  {
    "text": "fruit of doing one of custom solutions is we always try to leverage AWS",
    "start": "1563750",
    "end": "1568970"
  },
  {
    "text": "components kind of the off-the-shelf components for one-off solutions within our customers VP C's this is primarily",
    "start": "1568970",
    "end": "1578300"
  },
  {
    "text": "enabled by the fact that we use V PC as a multi tenant tenancy approach it means",
    "start": "1578300",
    "end": "1584060"
  },
  {
    "text": "that anything that we do within a single V PC it's not going to impact any of our other customers you know and so while",
    "start": "1584060",
    "end": "1592640"
  },
  {
    "text": "grabbing some of the ADA u.s. components and dropping them in there it's you know it's kind of always a proven and managed solutions and it",
    "start": "1592640",
    "end": "1600440"
  },
  {
    "text": "also means it's very easy to kind of bring into the fold once we start to support it officially a good example of",
    "start": "1600440",
    "end": "1608059"
  },
  {
    "text": "that is you know let's say a customer wants to access the underlying Cassandra data file so the way that we do backups",
    "start": "1608059",
    "end": "1615170"
  },
  {
    "text": "is we just snapshot the directory that it writes everything to upload it into history you know so we already are back",
    "start": "1615170",
    "end": "1623330"
  },
  {
    "text": "and stuff up to s3 we didn't really want to write a whole you know UI on our",
    "start": "1623330",
    "end": "1629150"
  },
  {
    "text": "website to provide customer access to the snapshots we didn't want to have to have a service that would then stream it",
    "start": "1629150",
    "end": "1635419"
  },
  {
    "text": "and all that kind of fun stuff what we now do is we actually just provide a read-only iam credentials to the s3",
    "start": "1635419",
    "end": "1641510"
  },
  {
    "text": "bucket containing that snapshot and say have fun you know download it as you",
    "start": "1641510",
    "end": "1646520"
  },
  {
    "text": "will so there's something that we've been really been able to do in a custom solution that is now been kind of rolled",
    "start": "1646520",
    "end": "1652760"
  },
  {
    "text": "out to the rest of our production systems a second example and this is",
    "start": "1652760",
    "end": "1659780"
  },
  {
    "text": "probably the best one because it really illustrates the usefulness of multi-tenancy in by using be pcs and",
    "start": "1659780",
    "end": "1669410"
  },
  {
    "text": "also showing how you can isolate custom solutions or one of solutions to a given customer so let's say we were to",
    "start": "1669410",
    "end": "1676730"
  },
  {
    "text": "customer they want to migrate their existing on-premise service onto AWS",
    "start": "1676730",
    "end": "1681770"
  },
  {
    "text": "onto onto our own service they've got no public IP access within their cluster",
    "start": "1681770",
    "end": "1687380"
  },
  {
    "text": "it's within their own private data center so we can't just set up public IP you know multi-region a multi region",
    "start": "1687380",
    "end": "1696230"
  },
  {
    "text": "cluster like we would normally do what we actually ended up doing was we use AWS as virtual private gateway to",
    "start": "1696230",
    "end": "1703460"
  },
  {
    "text": "connect to their VPN concentrator once we did that we then had direct network",
    "start": "1703460",
    "end": "1709640"
  },
  {
    "text": "access into their private data center we could join the cluster we can join the",
    "start": "1709640",
    "end": "1715160"
  },
  {
    "text": "instances that we are managing to their cluster as a second Cassandra data center like Cassandra do its thing and",
    "start": "1715160",
    "end": "1721580"
  },
  {
    "text": "sync the data across and once we've done that we've kind of just cut the link and we'd move them across",
    "start": "1721580",
    "end": "1727730"
  },
  {
    "text": "our service without any downtime but in terms of delivering custom solutions",
    "start": "1727730",
    "end": "1733370"
  },
  {
    "text": "that was the first time we'd ever touched a VPN in terms of delivering our",
    "start": "1733370",
    "end": "1739160"
  },
  {
    "text": "service in fact we tend to be fairly against using VPNs as permanent solutions to providing connectivity",
    "start": "1739160",
    "end": "1745430"
  },
  {
    "text": "because you know even with redundant links and all that fun stuff they tend to be fairly flakey they haven't him a",
    "start": "1745430",
    "end": "1751760"
  },
  {
    "text": "real overhead on the throughput that you get and it just it tends to be an awful single point of failure but we were",
    "start": "1751760",
    "end": "1758030"
  },
  {
    "text": "really able to grab what AWS provided in terms of their own VPN infrastructure drop it in for a one-off solution and",
    "start": "1758030",
    "end": "1764750"
  },
  {
    "text": "then you use that to migrate the customer across so I guess that the key",
    "start": "1764750",
    "end": "1772430"
  },
  {
    "text": "takeaways that I really want you guys to come back from this is using a VPC per",
    "start": "1772430",
    "end": "1777530"
  },
  {
    "text": "service really simplifies your multi-tenancy options you do have an overhead of having to manage the V pcs",
    "start": "1777530",
    "end": "1784010"
  },
  {
    "text": "themselves but Amazon provides some great api's for doing this it means you don't have to do multi-tenancy within",
    "start": "1784010",
    "end": "1790730"
  },
  {
    "text": "the service or the network service that you're delivering it means it's all done at the network level v pcs offer a",
    "start": "1790730",
    "end": "1797150"
  },
  {
    "text": "number of kind of very interesting connectivity options one of the ones",
    "start": "1797150",
    "end": "1802340"
  },
  {
    "text": "that I haven't explored in this slide deck is actually AWS Direct Connect which allows you to connect to one of",
    "start": "1802340",
    "end": "1809840"
  },
  {
    "text": "their supported private data centers like Equinix and layer 3 and all that",
    "start": "1809840",
    "end": "1815360"
  },
  {
    "text": "fun stuff you can also use Direct Connect to do VPC peering across",
    "start": "1815360",
    "end": "1821000"
  },
  {
    "text": "different AWS regions within the continental US we haven't done anything",
    "start": "1821000",
    "end": "1827630"
  },
  {
    "text": "around that space but we kind of would be excited to try if the requirement",
    "start": "1827630",
    "end": "1832640"
  },
  {
    "text": "came up the other thing as well as it really you know to do some of this stuff",
    "start": "1832640",
    "end": "1837680"
  },
  {
    "text": "particularly the public IP address space is to ensure that your service supports robust authentication at the end of the",
    "start": "1837680",
    "end": "1844760"
  },
  {
    "text": "day than if you're not doing it you have service should support robust authentication but it does make your",
    "start": "1844760",
    "end": "1850190"
  },
  {
    "text": "life a little bit easier and other other areas and you know multi-tenancy it does",
    "start": "1850190",
    "end": "1856070"
  },
  {
    "text": "allow custom connectivity and functionality without impacting the customers and you can also extend",
    "start": "1856070",
    "end": "1861680"
  },
  {
    "text": "that to doing you know rolling out other versions earlier and all that kind of",
    "start": "1861680",
    "end": "1868220"
  },
  {
    "text": "fun stuff but you've got that true network isolation so it does mean that if you do something a little bit early",
    "start": "1868220",
    "end": "1875270"
  },
  {
    "text": "it's only going to impact that one customer we've decided to roll it out to or they've requested access to beta",
    "start": "1875270",
    "end": "1881450"
  },
  {
    "text": "functionality or all that kind of thing so it's been a rather short talk thanks",
    "start": "1881450",
    "end": "1887330"
  },
  {
    "text": "guys for kind of coming out after the replay party and I'd like to open the",
    "start": "1887330",
    "end": "1892670"
  },
  {
    "text": "floor to any questions",
    "start": "1892670",
    "end": "1895480"
  }
]