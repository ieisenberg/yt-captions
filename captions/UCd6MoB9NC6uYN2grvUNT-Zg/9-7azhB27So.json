[
  {
    "start": "0",
    "end": "65000"
  },
  {
    "text": "my name is Scott Ward I'm a solution architect with Amazon Web Services specifically I work on our partner team",
    "start": "470",
    "end": "6100"
  },
  {
    "text": "so I am focused on technical enablement both for consulting and technology",
    "start": "6100",
    "end": "12079"
  },
  {
    "text": "partners I'm based out of Seattle I've been with Amazon or AWS for the past 15",
    "start": "12079",
    "end": "17510"
  },
  {
    "text": "years I have worked for 13 years on our internal financial systems focusing on",
    "start": "17510",
    "end": "23500"
  },
  {
    "text": "payments and financial integration an area where the database was actually a very key part to everything that we were",
    "start": "23500",
    "end": "31100"
  },
  {
    "text": "executing and for the past just a little over two years I've been in this role at AWS so today we're going to go ahead and",
    "start": "31100",
    "end": "38929"
  },
  {
    "text": "dive into the relational database service take a peek under the hoods talk about how some of the things work and",
    "start": "38929",
    "end": "44929"
  },
  {
    "text": "talk about how you know features that are available that you can take advantage of to better improve your",
    "start": "44929",
    "end": "50449"
  },
  {
    "text": "experience and usage of RDS on AWS",
    "start": "50449",
    "end": "55269"
  },
  {
    "text": "there we go okay so what to expect for the day we're gonna do a quick overview of RTS really quick on that one the",
    "start": "64790",
    "end": "71780"
  },
  {
    "start": "65000",
    "end": "104000"
  },
  {
    "text": "expectation this is a deep dive session the expectation is you've heard the highlights about RTS we don't need to spend much more time on those gonna dive",
    "start": "71780",
    "end": "78110"
  },
  {
    "text": "into what security is there for you to implement when it comes to RDS take a",
    "start": "78110",
    "end": "83720"
  },
  {
    "text": "look at what you get from a metrics and monitoring standpoint discuss how high availability can be implemented on RDS",
    "start": "83720",
    "end": "90040"
  },
  {
    "text": "look at scaling on RTS things that you can do and maybe some interesting tricks that you can do to maybe automate some",
    "start": "90040",
    "end": "96500"
  },
  {
    "text": "of your scaling activities as it relates to RTS take a look at backups and my and snapshots and then briefly touch on",
    "start": "96500",
    "end": "102140"
  },
  {
    "text": "migrating to RDS so RDS what is it once",
    "start": "102140",
    "end": "107150"
  },
  {
    "start": "104000",
    "end": "185000"
  },
  {
    "text": "again this is deep dive we won't spend much time on this no infrastructure management AWS takes care of all that",
    "start": "107150",
    "end": "112700"
  },
  {
    "text": "they take care of the operating system the database server they take care of managing all that infrastructure for you",
    "start": "112700",
    "end": "118070"
  },
  {
    "text": "instant provisioning when you need a database through a few clicks in a",
    "start": "118070",
    "end": "123590"
  },
  {
    "text": "management console or some entries into the api's you're able to provision and launch and get a database up and running",
    "start": "123590",
    "end": "129619"
  },
  {
    "text": "in a matter of minutes application compatibility there's six different database engines that are offered on RDS",
    "start": "129619",
    "end": "136070"
  },
  {
    "text": "there's a good chance that if you're running one of those database engines today that you may be able to use it on RDS as well as well as many third-party",
    "start": "136070",
    "end": "143030"
  },
  {
    "text": "applications played just nicely with the database running on RDS cost effective",
    "start": "143030",
    "end": "148130"
  },
  {
    "text": "RDS uses a pay-as-you-go model so you only pay for the amount of storage you provision you only pay for the amount of",
    "start": "148130",
    "end": "154430"
  },
  {
    "text": "time that your database server was actually running scale up and scale down you can resize your database environment",
    "start": "154430",
    "end": "160790"
  },
  {
    "text": "on RDS to meet your current demands whether they be higher demands or lower demands and get yourself the most",
    "start": "160790",
    "end": "167049"
  },
  {
    "text": "performant database possible as well as the most cost effective database possible and we can we think about how",
    "start": "167049",
    "end": "173000"
  },
  {
    "text": "you would do that in a normal on premise data so you'd have to have a lot of extra infrastructure lying around in",
    "start": "173000",
    "end": "178100"
  },
  {
    "text": "order for you to be able to do that scale up and scale that activity so it's a very key benefit of what RDS offers so",
    "start": "178100",
    "end": "186110"
  },
  {
    "start": "185000",
    "end": "210000"
  },
  {
    "text": "the six engines I mentioned divided up here into these three columns we have commercial so the Oracle database",
    "start": "186110",
    "end": "192160"
  },
  {
    "text": "Microsoft sequel server in the open source side my sequel Postgres and our",
    "start": "192160",
    "end": "197389"
  },
  {
    "text": "newest tree Mariah DB and then Amazon Aurora which is our Amazon built database",
    "start": "197389",
    "end": "203599"
  },
  {
    "text": "engine leveraging a lot of the properties of the cloud and it's a my sequel compatible database engine so RDS",
    "start": "203599",
    "end": "213170"
  },
  {
    "start": "210000",
    "end": "285000"
  },
  {
    "text": "relational database service is a managed service so there's some trade-offs when you're looking at using a managed service it's fully managed at the host",
    "start": "213170",
    "end": "220459"
  },
  {
    "text": "and the operating system levels so you don't get any access to the database operating system when you're using RDS",
    "start": "220459",
    "end": "226700"
  },
  {
    "text": "so that's going to give you some limited visibility into being able or limited ability to be able to modify any",
    "start": "226700",
    "end": "232910"
  },
  {
    "text": "configuration that you might normally be going and modifying at the host level for your database and it's going to give",
    "start": "232910",
    "end": "239090"
  },
  {
    "text": "you limited function limited access to any functions that rely on configuration",
    "start": "239090",
    "end": "244790"
  },
  {
    "text": "in a database as well it's fully managed storage which is great in some ways you",
    "start": "244790",
    "end": "250010"
  },
  {
    "text": "don't have to worry about monitoring the storage layer anymore you don't have to be worried about our disks failing or do I need to order more disks that's",
    "start": "250010",
    "end": "256190"
  },
  {
    "text": "managed for you but there's some limits so from a sequel server standpoint you can only go up to four terabytes for",
    "start": "256190",
    "end": "262160"
  },
  {
    "text": "your database size for my sequel moriah DB Postgres and oracle you can go up to six terabytes and Aurora offers you 64",
    "start": "262160",
    "end": "268310"
  },
  {
    "text": "terabytes and growing your database is a process on RS if you do max out the",
    "start": "268310",
    "end": "274070"
  },
  {
    "text": "storage on a database engine you have to start thinking about strategies about how you're going to be able to continue on whether it be a charting strategy or",
    "start": "274070",
    "end": "281210"
  },
  {
    "text": "an archive strategy or a delete strategy these are a few of the customers that",
    "start": "281210",
    "end": "286610"
  },
  {
    "start": "285000",
    "end": "332000"
  },
  {
    "text": "are using RDS there's many more that are not listed here you've got air B&B code Cap'n ski hotels are using these and",
    "start": "286610",
    "end": "293840"
  },
  {
    "text": "using RDS to fulfill or to meet the needs of either their external or",
    "start": "293840",
    "end": "299000"
  },
  {
    "text": "internal applications and Aurora I'll address questions at the end of the",
    "start": "299000",
    "end": "304669"
  },
  {
    "text": "presentation if that's all right and from Aurora standpoint these are some of the customers we have as well alfresco",
    "start": "304669",
    "end": "310250"
  },
  {
    "text": "they're using it to support their content deliver or content software",
    "start": "310250",
    "end": "317060"
  },
  {
    "text": "that's available for customers and they're using it to support up to like a billion transactions and it up to three",
    "start": "317060",
    "end": "322070"
  },
  {
    "text": "million transactions an hour Zumba is using it to support their over 15 million customers that use their class",
    "start": "322070",
    "end": "328340"
  },
  {
    "text": "on a daily basis and get taking in a million transactions a day okay let's move into",
    "start": "328340",
    "end": "335800"
  },
  {
    "start": "332000",
    "end": "359000"
  },
  {
    "text": "security so security at AWS is is job zero I can attest to this personally",
    "start": "335800",
    "end": "341319"
  },
  {
    "text": "over the last fifteen years I've seen we have a consistent focus on security whether it be internally or externally",
    "start": "341319",
    "end": "347139"
  },
  {
    "text": "to make sure that our customers are operating in a safe and secure environment so it makes sense that security would",
    "start": "347139",
    "end": "352599"
  },
  {
    "text": "also be a top priority for a lot of our customers so let's go and take a look at what RDS offers from a security",
    "start": "352599",
    "end": "358180"
  },
  {
    "text": "standpoint the first one the virtual private cloud or the Amazon V PC virtual",
    "start": "358180",
    "end": "365259"
  },
  {
    "start": "359000",
    "end": "427000"
  },
  {
    "text": "fire cloud is a way for you to define your own private address space with inside AWS you get to control you get to",
    "start": "365259",
    "end": "371650"
  },
  {
    "text": "define it you get get to troll all the access when you launch an RDS instance you launch that instance inside of a",
    "start": "371650",
    "end": "378789"
  },
  {
    "text": "virtual private cloud so you have all the ability to protect and control the access to that database at this point",
    "start": "378789",
    "end": "385330"
  },
  {
    "text": "and there's lots of ways that you can manage that connectivity into your database so you can create a VPN",
    "start": "385330",
    "end": "390699"
  },
  {
    "text": "connection between your V PC and your on-premise database for example to control user access to have an encrypted",
    "start": "390699",
    "end": "398050"
  },
  {
    "text": "point of entry into your database you can use V PCP and you can actually connect multiple V pcs in the same AWS",
    "start": "398050",
    "end": "405669"
  },
  {
    "text": "region whether it be in your account or another account so they can communicate with each other you can use routing",
    "start": "405669",
    "end": "411400"
  },
  {
    "text": "tables to control how traffic moves around in your subnets and you can attach an Internet gateway to your V PC",
    "start": "411400",
    "end": "417550"
  },
  {
    "text": "to actually allow public internet access if you want to so lots of different ways to manage how your database is actually",
    "start": "417550",
    "end": "424120"
  },
  {
    "text": "access and protect it at the level you want to on top of that you have security",
    "start": "424120",
    "end": "429490"
  },
  {
    "start": "427000",
    "end": "484000"
  },
  {
    "text": "groups so if you're familiar with ec2 security groups it's the same thing security groups are basically a firewall",
    "start": "429490",
    "end": "435909"
  },
  {
    "text": "a virtual firewall around your database instance so you get to control the protocol of traffic the range of ports",
    "start": "435909",
    "end": "443199"
  },
  {
    "text": "and the type of traffic and the source IP address of the traffic that's coming into your database you can define very",
    "start": "443199",
    "end": "449080"
  },
  {
    "text": "fine-grain IP address one single IP address a range of IP addresses or you can actually define define another",
    "start": "449080",
    "end": "455289"
  },
  {
    "text": "security group as a point of access in the bottom example we actually have said that anything coming from the",
    "start": "455289",
    "end": "461919"
  },
  {
    "text": "application to your security group okay to enter the database so if you have a multi-tiered application maybe",
    "start": "461919",
    "end": "467910"
  },
  {
    "text": "there's a web tier in front of that application tier by implementing this type of configuration you're basically saying the web tier is not allowed to",
    "start": "467910",
    "end": "473730"
  },
  {
    "text": "bypass the application tier and get to the database tier so you're be able to establish a policy of trust of where the",
    "start": "473730",
    "end": "480900"
  },
  {
    "text": "information is coming into your database so one of the reasons that security is",
    "start": "480900",
    "end": "488400"
  },
  {
    "start": "484000",
    "end": "583000"
  },
  {
    "text": "so important for a lot of our customers is that they have compliance that they need to meet and fulfill whether they be",
    "start": "488400",
    "end": "494880"
  },
  {
    "text": "external compliance such as these bodies up here or internal compliance that they they just know that they need to fulfill",
    "start": "494880",
    "end": "501410"
  },
  {
    "text": "AWS has lots of different customers across the enterprise the public sector",
    "start": "501410",
    "end": "506820"
  },
  {
    "text": "and the startup space operating a lot of different applications and a lot of different workloads and some of those",
    "start": "506820",
    "end": "512070"
  },
  {
    "text": "require that they meet the compliance requirements for certain regulatory bodies so on the AWS side what we've",
    "start": "512070",
    "end": "518700"
  },
  {
    "text": "done is we've worked with the compliance bodies that you see listed up here to actually certify the RDS platform so you",
    "start": "518700",
    "end": "526110"
  },
  {
    "text": "can run compliant workloads on top of RDS now what that doesn't do is it doesn't just mean that once you plug",
    "start": "526110",
    "end": "531990"
  },
  {
    "text": "your application in and run on an AWS that you're automatically HIPAA certified or PCI DSS certified it means",
    "start": "531990",
    "end": "538800"
  },
  {
    "text": "that you don't have to worry about the infrastructure portion of that anymore it's part of the AWS shared responsibility model AWS takes care of",
    "start": "538800",
    "end": "545220"
  },
  {
    "text": "securing that RDS infrastructure and the service itself you as a customer are still responsible for your security on",
    "start": "545220",
    "end": "551850"
  },
  {
    "text": "top of that so you and your security experts still need to make sure that your application is following all the",
    "start": "551850",
    "end": "557670"
  },
  {
    "text": "right requirements that are needed that need to be met from a compliance standpoint you're then able to take the",
    "start": "557670",
    "end": "563250"
  },
  {
    "text": "attestations that our third-party auditors provide around the RDS certification marry that up with your",
    "start": "563250",
    "end": "570510"
  },
  {
    "text": "certification findings from your your application and end up with a complete audit finding or compliance",
    "start": "570510",
    "end": "577230"
  },
  {
    "text": "certification that your whole application is running at the level that it needs to be here are is a listing",
    "start": "577230",
    "end": "585030"
  },
  {
    "start": "583000",
    "end": "598000"
  },
  {
    "text": "currently of the engines on RDS that have these various compliance certifications so a pretty broad",
    "start": "585030",
    "end": "591390"
  },
  {
    "text": "coverage between my sequel Oracle sequel server and Postgres",
    "start": "591390",
    "end": "596900"
  },
  {
    "text": "okay SSL database encryption so encryption of in transit traffic is a",
    "start": "597950",
    "end": "605220"
  },
  {
    "text": "key requirement for some of the compliance bodies that we just showed here as well as just in general internal",
    "start": "605220",
    "end": "611820"
  },
  {
    "text": "companies requirements so all six of our database engines offer support for SSL",
    "start": "611820",
    "end": "617520"
  },
  {
    "text": "encryption each one of the engines implements it a little bit differently but you can implement that encryption for all six engines to ensure that you",
    "start": "617520",
    "end": "625020"
  },
  {
    "text": "have a fully encrypted pipe between two endpoints that are communicating with",
    "start": "625020",
    "end": "630030"
  },
  {
    "text": "your database and then staying on the encryption front at rest encryption at",
    "start": "630030",
    "end": "636990"
  },
  {
    "start": "633000",
    "end": "671000"
  },
  {
    "text": "rest encryption is a very important requirement for a lot of our customers once again often to fulfill compliance",
    "start": "636990",
    "end": "642480"
  },
  {
    "text": "needs that they have we offer the ability to do at rest encryption for all six of the database engines there's no",
    "start": "642480",
    "end": "649080"
  },
  {
    "text": "additional cost for our encryption service and once again it's there to support a lot of the compliance requirements that you may have and when",
    "start": "649080",
    "end": "656010"
  },
  {
    "text": "we talk at rest encryption it's not just for the actual database instance storage it's also for all the automated backups",
    "start": "656010",
    "end": "663600"
  },
  {
    "text": "that you get with RDS all the read replicas that you're able to implement and with all the snapshots that you're",
    "start": "663600",
    "end": "668790"
  },
  {
    "text": "able to implement with RDS as well so what the way we offer this up is through",
    "start": "668790",
    "end": "674760"
  },
  {
    "start": "671000",
    "end": "782000"
  },
  {
    "text": "the AWS key management system or kms kms is a AWS service that allows you to",
    "start": "674760",
    "end": "682040"
  },
  {
    "text": "create and manage encryption keys that are tied to your AWS account and that",
    "start": "682040",
    "end": "688140"
  },
  {
    "text": "you own so even though it's a managed service you still have full ownership of",
    "start": "688140",
    "end": "693540"
  },
  {
    "text": "the keys that are generated by the kms service in your account so kms being a",
    "start": "693540",
    "end": "699330"
  },
  {
    "text": "managed service takes care of a lot of the heavy lifting around the durability the availability the scalability and the",
    "start": "699330",
    "end": "706830"
  },
  {
    "text": "security related to managing keys that would you would be using for encryption and decryption and and with that you're",
    "start": "706830",
    "end": "714060"
  },
  {
    "text": "able to focus more on your application building your application using your application and just putting the",
    "start": "714060",
    "end": "720360"
  },
  {
    "text": "encryption in there not having to worry about all the other kind of around the edges things that go with managing encryption keys the way the kms works",
    "start": "720360",
    "end": "727590"
  },
  {
    "text": "from an RDS perspective is that when you're launching an RTS database you choose one button do you want to encrypt or not",
    "start": "727590",
    "end": "734509"
  },
  {
    "text": "when you choose encryption you can either leave it right at that and at that point you will get the RDS service",
    "start": "734509",
    "end": "741749"
  },
  {
    "text": "master key created in your kms account if you want to have a little bit more control or you want to be able to do",
    "start": "741749",
    "end": "748379"
  },
  {
    "text": "something different you can create your own key in kms and then you can actually choose that key when you launch your RDS",
    "start": "748379",
    "end": "754799"
  },
  {
    "text": "instance once that instance is launched it will reach out to the kms service",
    "start": "754799",
    "end": "760579"
  },
  {
    "text": "saying I'd like to access I'd like a data key once kms is confirmed it has",
    "start": "760579",
    "end": "765929"
  },
  {
    "text": "access to that master key that you just defined when you launch the instance it'll hand it a data key that data key",
    "start": "765929",
    "end": "771239"
  },
  {
    "text": "will be loaded into memory and it will be used to encrypt and decrypt the data that is on your RDS instance each RDS",
    "start": "771239",
    "end": "777839"
  },
  {
    "text": "instance will get its own data key and they don't share data keys here's",
    "start": "777839",
    "end": "783809"
  },
  {
    "text": "another quick flow of how keys are used to protect your data so we have our application or AWS service which in this",
    "start": "783809",
    "end": "789059"
  },
  {
    "text": "case would be RDS which is going to be reaching out to the kms service saying I'd like to encrypt some data handing it",
    "start": "789059",
    "end": "795990"
  },
  {
    "text": "back a data key and then using that data key to actually encrypt your data while",
    "start": "795990",
    "end": "801540"
  },
  {
    "text": "it's on the RDS instance so I talked about enabling encryption from the",
    "start": "801540",
    "end": "808319"
  },
  {
    "text": "command line but I also wanted to kind of show you guys some other way so with just like with all our era api's you can",
    "start": "808319",
    "end": "815220"
  },
  {
    "text": "do pretty much anything you can do in the console through the API so with RDS you can create a database instance",
    "start": "815220",
    "end": "821249"
  },
  {
    "text": "through the API Z's our command examples with the CLI one extra parameter and I'm",
    "start": "821249",
    "end": "827220"
  },
  {
    "text": "able to to enable encryption on the RDS instance so that's the top example where I'm saying storage encrypted if I want",
    "start": "827220",
    "end": "833850"
  },
  {
    "text": "to go a little bit further and I actually want to define my own key as opposed to using the RDS service key",
    "start": "833850",
    "end": "840059"
  },
  {
    "text": "it's one extra parameter where I give it the ID of the key that's in the AWS region that I want to encrypt this data",
    "start": "840059",
    "end": "846449"
  },
  {
    "text": "with some useful hints if you decide to",
    "start": "846449",
    "end": "852059"
  },
  {
    "start": "848000",
    "end": "920000"
  },
  {
    "text": "go forward with using RDS and kms you can only encrypt on YouTube a new database creation so only when you're",
    "start": "852059",
    "end": "858779"
  },
  {
    "text": "creating your database if you've got an existing database running on RDS and it's not encrypted already you just flip it to be encrypted you would",
    "start": "858779",
    "end": "865080"
  },
  {
    "text": "actually have to copy the data from that database over to a new database that has encryption turned on once you have",
    "start": "865080",
    "end": "871410"
  },
  {
    "text": "encryption turned on you can't remove it anytime you implement a read replica and your master is already encrypted that",
    "start": "871410",
    "end": "878100"
  },
  {
    "text": "read master read replica must also be encrypted it actually is just done automatically when you create a read",
    "start": "878100",
    "end": "883529"
  },
  {
    "text": "replica there's not an option to turn it off any snapshots that you have of your database that are unencrypted can't be",
    "start": "883529",
    "end": "890730"
  },
  {
    "text": "restored as an encrypted database you can't restore a my sequel encrypted",
    "start": "890730",
    "end": "896670"
  },
  {
    "text": "snapshot to an Aurora database and vice versa you can't restore and encrypted Aurora snapshot to a my sequel database",
    "start": "896670",
    "end": "904190"
  },
  {
    "text": "any snapshots that you have that are encrypted can't be copied across to",
    "start": "904190",
    "end": "909690"
  },
  {
    "text": "another AWS region because those right now KMS keys are tied to an AWS region",
    "start": "909690",
    "end": "915750"
  },
  {
    "text": "they can't be used outside of that region okay another way that you can",
    "start": "915750",
    "end": "922680"
  },
  {
    "start": "920000",
    "end": "979000"
  },
  {
    "text": "securely control your operating environment on RDS is using iam Identity",
    "start": "922680",
    "end": "928470"
  },
  {
    "text": "and Access Management Identity and Access Management controls who can perform actions against RDS now it's a",
    "start": "928470",
    "end": "935640"
  },
  {
    "text": "common confusion about what iam and RDS actually means I am is not controlling",
    "start": "935640",
    "end": "941700"
  },
  {
    "text": "who can log into your database you are still responsible for using the normal",
    "start": "941700",
    "end": "947100"
  },
  {
    "text": "grant functions that exist in your database to actually grant access to applications or end-users to be able to",
    "start": "947100",
    "end": "953970"
  },
  {
    "text": "log into your database Identity and Access Management controls access to the",
    "start": "953970",
    "end": "959190"
  },
  {
    "text": "actual RDS service so who can launch an RDS database who can modify an RDS",
    "start": "959190",
    "end": "965190"
  },
  {
    "text": "database who can delete an RDS database it's controlling access to the AWS api's",
    "start": "965190",
    "end": "972360"
  },
  {
    "text": "so it's very important that you have that clear distinction in your head as far as what iam can do for you and how",
    "start": "972360",
    "end": "977580"
  },
  {
    "text": "you would use it we talked about iam access I've got a couple examples of the",
    "start": "977580",
    "end": "983339"
  },
  {
    "start": "979000",
    "end": "1032000"
  },
  {
    "text": "the policies that would be implemented from an IM perspective these are two examples of our managed policies the one",
    "start": "983339",
    "end": "988890"
  },
  {
    "text": "on the left is a read-only policy you can see where it's giving just access to the describe api's for RDS so you know",
    "start": "988890",
    "end": "994860"
  },
  {
    "text": "allowing you to read every all the information about how an RDS environment is configured as well as",
    "start": "994860",
    "end": "1000560"
  },
  {
    "text": "read-only access to some of the other around the edge services that also support the RDS services things like",
    "start": "1000560",
    "end": "1006560"
  },
  {
    "text": "some ec2 stuff and cloud watch and then full access gives full access to the RDS",
    "start": "1006560",
    "end": "1012290"
  },
  {
    "text": "api's as well as some full access to a few other key services that interact",
    "start": "1012290",
    "end": "1017779"
  },
  {
    "text": "with RDS when it comes to these policies these are these are examples of Manas policies but you have the ability to",
    "start": "1017779",
    "end": "1023079"
  },
  {
    "text": "implement any policy that you see fit as far as how you want to be able to control access and who can do what on",
    "start": "1023079",
    "end": "1029209"
  },
  {
    "text": "your RDS environment okay so one of the",
    "start": "1029209",
    "end": "1036410"
  },
  {
    "start": "1032000",
    "end": "1051000"
  },
  {
    "text": "really important things of being able to operate any database is being able to actually get visibility into what is",
    "start": "1036410",
    "end": "1041780"
  },
  {
    "text": "going on in the database understanding what it's performance looks like trying to understand where you might have an event coming up or even being notified",
    "start": "1041780",
    "end": "1048438"
  },
  {
    "text": "of when an event is actually happened on your database so when you launch an RDS",
    "start": "1048439",
    "end": "1054530"
  },
  {
    "start": "1051000",
    "end": "1123000"
  },
  {
    "text": "instance by default everybody will get access to standard monitoring this is 15",
    "start": "1054530",
    "end": "1061220"
  },
  {
    "text": "to 18 metrics that you get visit you get access to it's the the number depends on",
    "start": "1061220",
    "end": "1066799"
  },
  {
    "text": "the instance size that you're using these metrics are all delivered to AWS",
    "start": "1066799",
    "end": "1072470"
  },
  {
    "text": "Amazon Cloud Watch which is our monitoring service and you then have access to view these in a graph form",
    "start": "1072470",
    "end": "1078530"
  },
  {
    "text": "either through the monitoring tab in the RDS management console you can go directly in the cloud watch and view",
    "start": "1078530",
    "end": "1084380"
  },
  {
    "text": "these metrics or you can actually call the cloud watch api's to get these metrics out and you can actually dump",
    "start": "1084380",
    "end": "1089600"
  },
  {
    "text": "them into your own monitoring platform or AWS partners product if you prefer to",
    "start": "1089600",
    "end": "1094640"
  },
  {
    "text": "look at the metrics that way some of the key metrics you might you get out of here are things around CPU utilization storage the number of database database",
    "start": "1094640",
    "end": "1102380"
  },
  {
    "text": "connections that are happening some basic information now but running a",
    "start": "1102380",
    "end": "1108559"
  },
  {
    "text": "database a lot of times requires you to go even deeper and be able to get more information off of the operating system",
    "start": "1108559",
    "end": "1114830"
  },
  {
    "text": "and as we talked about before you don't get access to the host operating system when you're running RDS so getting",
    "start": "1114830",
    "end": "1120590"
  },
  {
    "text": "access to some of those key metrics can be a little bit challenging so based on customer feedback we've actually added",
    "start": "1120590",
    "end": "1126040"
  },
  {
    "start": "1123000",
    "end": "1218000"
  },
  {
    "text": "enhanced monitoring on the RDS platform and with enhanced monitoring you",
    "start": "1126040",
    "end": "1131340"
  },
  {
    "text": "actually can define granularity between sixty seconds and one second as far as",
    "start": "1131340",
    "end": "1136830"
  },
  {
    "text": "how much information you'd like with enhanced monitoring you get fifty new metrics that are not available in the",
    "start": "1136830",
    "end": "1143519"
  },
  {
    "text": "standard monitoring offering things around some deeper level CPU usage some",
    "start": "1143519",
    "end": "1149429"
  },
  {
    "text": "things around load average some things around how much of the database file system you've actually used lots of",
    "start": "1149429",
    "end": "1154980"
  },
  {
    "text": "additional metrics that people might traditionally be using when they're monitoring and caring and feeding for",
    "start": "1154980",
    "end": "1160200"
  },
  {
    "text": "their database you might be asking like what what's the difference between these why are they offered separately well",
    "start": "1160200",
    "end": "1166470"
  },
  {
    "text": "standard monitoring is based on what the hypervisor that actually runs your RDS instance can see the hypervisor isn't",
    "start": "1166470",
    "end": "1173399"
  },
  {
    "text": "allowed to see everything it's just merely kind of meant to get that initial instance launched so that you can go you",
    "start": "1173399",
    "end": "1178980"
  },
  {
    "text": "can get it up and running the enhanced monitoring is based on an agent that actually runs on the",
    "start": "1178980",
    "end": "1184740"
  },
  {
    "text": "operating system and is collecting all these metrics and sending them into cloud watch for you to be able to view",
    "start": "1184740",
    "end": "1190039"
  },
  {
    "text": "with all these metrics once they're in cloud watch you have the ability to actually define thresholds you can say",
    "start": "1190039",
    "end": "1197190"
  },
  {
    "text": "what your threshold is for a particular metric and define an alarm and then once that alarm is you know once that",
    "start": "1197190",
    "end": "1203700"
  },
  {
    "text": "threshold is breached you can have that alarm notify you in various ways that you either get an email or you can",
    "start": "1203700",
    "end": "1209220"
  },
  {
    "text": "actually take action on them through the simple notification service and I've got a couple of examples that we'll go into a little bit later on what you might do",
    "start": "1209220",
    "end": "1216059"
  },
  {
    "text": "with that another cool thing that exists on the RDS platform is actually event",
    "start": "1216059",
    "end": "1222210"
  },
  {
    "start": "1218000",
    "end": "1269000"
  },
  {
    "text": "notifications so there are 17 different categories of events that you can",
    "start": "1222210",
    "end": "1228570"
  },
  {
    "text": "actually get notified on when this particular event happens for your RDS environment all this information is",
    "start": "1228570",
    "end": "1234510"
  },
  {
    "text": "delivered to you through the simple notification service so you can once again get a via an email or an SMS and",
    "start": "1234510",
    "end": "1240809"
  },
  {
    "text": "these event categories cover a pretty broad range of things things around like when a backup has failed or when there's",
    "start": "1240809",
    "end": "1247110"
  },
  {
    "text": "been a failover for your database or even when somebody's made a configuration change on your database",
    "start": "1247110",
    "end": "1253200"
  },
  {
    "text": "you can actually get notified when somebody's change the security group when somebody's created a new database or when somebody's modified or deleted a",
    "start": "1253200",
    "end": "1259679"
  },
  {
    "text": "database so an extra level of visibility for you to have complete control over what's going on in",
    "start": "1259679",
    "end": "1264960"
  },
  {
    "text": "your database environment on AWS so the",
    "start": "1264960",
    "end": "1270630"
  },
  {
    "start": "1269000",
    "end": "1293000"
  },
  {
    "text": "next thing that's really key here is high availability so at the application level it's pretty well understood some",
    "start": "1270630",
    "end": "1277260"
  },
  {
    "text": "of the things you can do on ec2 and you need a load balancer and and the auto scaling to achieve high ability",
    "start": "1277260",
    "end": "1282830"
  },
  {
    "text": "availability of your application but if the underlying database isn't also architected in a way that's highly",
    "start": "1282830",
    "end": "1288360"
  },
  {
    "text": "available it's really not very valuable to have your applications architected to be highly available so on the RDS side",
    "start": "1288360",
    "end": "1295549"
  },
  {
    "start": "1293000",
    "end": "1334000"
  },
  {
    "text": "to start off with this is your bare-bones minimal deployment that you can do in RDS so once again launching",
    "start": "1295549",
    "end": "1300890"
  },
  {
    "text": "inside the virtual private cloud you've got a database instance with the attached block storage running inside of",
    "start": "1300890",
    "end": "1307679"
  },
  {
    "text": "EPC running inside on a particular availability zone this is good for maybe",
    "start": "1307679",
    "end": "1313500"
  },
  {
    "text": "doing you know kind of kicking the tires or doing an initial proof of concept of RDS in general or for testing something",
    "start": "1313500",
    "end": "1320460"
  },
  {
    "text": "out for a new application that you're building but when you start getting to the level where you're having production",
    "start": "1320460",
    "end": "1325710"
  },
  {
    "text": "workloads and it's really important that the database be up and available running",
    "start": "1325710",
    "end": "1330870"
  },
  {
    "text": "a single availability zone deployment may not be the best approach with RDS",
    "start": "1330870",
    "end": "1335910"
  },
  {
    "start": "1334000",
    "end": "1402000"
  },
  {
    "text": "you have the ability for another option called the multi availability zone deployment and it's simply a drop-down",
    "start": "1335910",
    "end": "1341669"
  },
  {
    "text": "box or a configuration parameter when you are launching a database via the CLI",
    "start": "1341669",
    "end": "1346950"
  },
  {
    "text": "to choose that I want a multi availability zone deployment and what will happen is that your primary",
    "start": "1346950",
    "end": "1352080"
  },
  {
    "text": "database and storage will be launched in one availability zone of the AWS region",
    "start": "1352080",
    "end": "1357210"
  },
  {
    "text": "that you're running in inside your virtual private cloud and then the RDS service will launch another instance",
    "start": "1357210",
    "end": "1363600"
  },
  {
    "text": "that is called the standby instance and it will have the same storage configuration attached to it and it will",
    "start": "1363600",
    "end": "1369030"
  },
  {
    "text": "be located another availability zone in the region that you're working on and this gives you coverage for a couple",
    "start": "1369030",
    "end": "1375179"
  },
  {
    "text": "different things it might be if there is a network communication issue or an actual failure with the primary",
    "start": "1375179",
    "end": "1381210"
  },
  {
    "text": "availability zone it might be also that there might be some issues with the actual database instance itself there",
    "start": "1381210",
    "end": "1388710"
  },
  {
    "text": "might be some network issues or it may just become unhealthy it gives you an option to have something else to",
    "start": "1388710",
    "end": "1393809"
  },
  {
    "text": "failover to to minimize the amount of downtime that you might have for your applications that are using this",
    "start": "1393809",
    "end": "1399329"
  },
  {
    "text": "database so here's how things might work from a will work from a multi",
    "start": "1399329",
    "end": "1407489"
  },
  {
    "start": "1402000",
    "end": "1452000"
  },
  {
    "text": "availability zone perspective when you have a failure so you've got your users or your applications connecting to a DNS",
    "start": "1407489",
    "end": "1414299"
  },
  {
    "text": "endpoint that the RDS services provided you going into the master database when",
    "start": "1414299",
    "end": "1419489"
  },
  {
    "text": "there's a failure with that master database or the availability zone that it's in the RDS service will take over",
    "start": "1419489",
    "end": "1426119"
  },
  {
    "text": "because it's a managed service and will repoint that DNS entry to your standby",
    "start": "1426119",
    "end": "1431699"
  },
  {
    "text": "database and make that standby database your primary master database now so what",
    "start": "1431699",
    "end": "1436979"
  },
  {
    "text": "you have at the most is about a thirty to sixty second phase over with that DNS your applications need to be a little",
    "start": "1436979",
    "end": "1444269"
  },
  {
    "text": "bit aware of either being able to retry or fail gracefully for that but the managed service is taking care of all of",
    "start": "1444269",
    "end": "1449789"
  },
  {
    "text": "that failover for you under the hood I'm gonna rora perspective there's there's a",
    "start": "1449789",
    "end": "1456029"
  },
  {
    "start": "1452000",
    "end": "1490000"
  },
  {
    "text": "little bit of a difference on how they implement high availability so I want to make sure I cover that on the Aurora",
    "start": "1456029",
    "end": "1461940"
  },
  {
    "text": "stand aside there is an underlying storage layer that covers three",
    "start": "1461940",
    "end": "1467159"
  },
  {
    "text": "availability zones in an AWS region and it's made up of six storage nodes every one of these storage nodes has the same",
    "start": "1467159",
    "end": "1474329"
  },
  {
    "text": "data on it so you can have a failure in one availability zone and still be able",
    "start": "1474329",
    "end": "1480179"
  },
  {
    "text": "to run you can have a failure of a storage node and still be able to run because there are plenty more that have",
    "start": "1480179",
    "end": "1486989"
  },
  {
    "text": "all the data and can continue to run then for the database nodes that sit on",
    "start": "1486989",
    "end": "1493619"
  },
  {
    "start": "1490000",
    "end": "1538000"
  },
  {
    "text": "top of this storage layer you have your primary node running in a z1 that is accessing the storage layer and then we",
    "start": "1493619",
    "end": "1499679"
  },
  {
    "text": "have two secondary nodes which are actually read replicas in Aurora your read replicas are actually your failover",
    "start": "1499679",
    "end": "1506099"
  },
  {
    "text": "targets for any problems with the primary database so these secondary",
    "start": "1506099",
    "end": "1511440"
  },
  {
    "text": "nodes are plugged into the same storage layer that exists that the primary is using the primary is also actually",
    "start": "1511440",
    "end": "1518339"
  },
  {
    "text": "sending all its readout redo logs to all these read replicas so that they have all the current data that the master has",
    "start": "1518339",
    "end": "1524099"
  },
  {
    "text": "so when there is a failover from the master node to the secondary or to the read replica node it is a very quick",
    "start": "1524099",
    "end": "1529919"
  },
  {
    "text": "fail and there's really no time no need to replay any data because they have access to all the data already a little bit",
    "start": "1529919",
    "end": "1539940"
  },
  {
    "start": "1538000",
    "end": "1659000"
  },
  {
    "text": "more on timelines when we talk about failover so on the top is my sequel so",
    "start": "1539940",
    "end": "1545640"
  },
  {
    "text": "you're gonna have your failure detection that's going to happen on the RDS service once RDS determines that there's been a failure either in the",
    "start": "1545640",
    "end": "1551940"
  },
  {
    "text": "availability zone or with the instance it will begin the the fail of a process there's there's a period of time for",
    "start": "1551940",
    "end": "1557640"
  },
  {
    "text": "recovery to get that standby database caught up and to the level where where the master database was there's also the",
    "start": "1557640",
    "end": "1564210"
  },
  {
    "text": "DNS propagation that we talked about and then finally your area application is up and running it's a the the recovery time",
    "start": "1564210",
    "end": "1570120"
  },
  {
    "text": "really kind of depends on on what's been going on in your database up to that point in time that can be a little bit variable on the aurorus side there's",
    "start": "1570120",
    "end": "1577890"
  },
  {
    "text": "some interesting things that they're a little bit different here so you still have your failure detection that's going to happen and to determine that the",
    "start": "1577890",
    "end": "1583440"
  },
  {
    "text": "master node is is no longer healthy and needs you know failover needs to happen the recovery part is very quick and",
    "start": "1583440",
    "end": "1590970"
  },
  {
    "text": "actually fairly predictable because the storage instances already have those",
    "start": "1590970",
    "end": "1596490"
  },
  {
    "text": "read replicas already have access to all that data that they've had so the ability to they don't need to be caught",
    "start": "1596490",
    "end": "1602040"
  },
  {
    "text": "up or anything like that they need to really just be brought online and start working as a master node and then the",
    "start": "1602040",
    "end": "1608430"
  },
  {
    "text": "application is up and running and we actually are able to bypass the DNS propagation entirely through the use of",
    "start": "1608430",
    "end": "1615780"
  },
  {
    "text": "the Moriah DB driver so we've been working with the team at Moriah DB they've actually created ODBC and JDBC",
    "start": "1615780",
    "end": "1621450"
  },
  {
    "text": "drivers that work for Aurora and those drivers actually communicate with all",
    "start": "1621450",
    "end": "1627570"
  },
  {
    "text": "the read replicas for an Aurora cluster and all the read replicas in the neural cluster actually have an entry that says",
    "start": "1627570",
    "end": "1633870"
  },
  {
    "text": "what's the IP address of the current master database so when Aurora implements a failover from a master to a",
    "start": "1633870",
    "end": "1639990"
  },
  {
    "text": "standby it actually updates all the read replicas with what the IP address is of the new master database and the Moriah",
    "start": "1639990",
    "end": "1646050"
  },
  {
    "text": "DB driver takes advantage of that and will use that for your application connectivity so you have the ability to",
    "start": "1646050",
    "end": "1651510"
  },
  {
    "text": "actually get you back and running up in your application faster because you don't have to worry and wait for the DNS",
    "start": "1651510",
    "end": "1657180"
  },
  {
    "text": "propagation that happen okay so",
    "start": "1657180",
    "end": "1662960"
  },
  {
    "start": "1659000",
    "end": "1688000"
  },
  {
    "text": "building on top of high availability being able to scale your database it's",
    "start": "1662960",
    "end": "1667970"
  },
  {
    "text": "very important as well so as your your database becomes more popular or more",
    "start": "1667970",
    "end": "1673429"
  },
  {
    "text": "widely used there may be needs to scale your database in different ways whether it be to add more horsepower to the",
    "start": "1673429",
    "end": "1680120"
  },
  {
    "text": "existing one or add some additional databases to help take some of the load off of that so there's several different things you can do on RDS from a scaling",
    "start": "1680120",
    "end": "1687200"
  },
  {
    "text": "perspective first one is read replicas so if you have a master database that is",
    "start": "1687200",
    "end": "1693409"
  },
  {
    "start": "1688000",
    "end": "1726000"
  },
  {
    "text": "getting a lot of pressure not only supporting write operations but also supporting a lot of read operations with",
    "start": "1693409",
    "end": "1698960"
  },
  {
    "text": "RDS you can implement read replicas and these are read-only copies of your database that you place in either the",
    "start": "1698960",
    "end": "1707690"
  },
  {
    "text": "same region or another region and we'll talk about those in a minute to relieve that pressure from your from your database master these read replicas are",
    "start": "1707690",
    "end": "1715159"
  },
  {
    "text": "not only there to support read operations they can actually also be promoted to be the new master database",
    "start": "1715159",
    "end": "1720890"
  },
  {
    "text": "if you notice a problem with your current master database there's a couple",
    "start": "1720890",
    "end": "1727370"
  },
  {
    "start": "1726000",
    "end": "1783000"
  },
  {
    "text": "different ways you can implement read replicas the first one is just intro region or within a region so that means",
    "start": "1727370",
    "end": "1734179"
  },
  {
    "text": "you basically are able to place multiple read replicas in different availability zones of the AWS region that your master",
    "start": "1734179",
    "end": "1740870"
  },
  {
    "text": "database is located in and you can do that with Murat's moriah DB my sequel",
    "start": "1740870",
    "end": "1746570"
  },
  {
    "text": "Postgres and aurora and then there's also cross region read replicas where you can actually take and place a read",
    "start": "1746570",
    "end": "1752960"
  },
  {
    "text": "replica in a different AWS region a different part of the globe then your primary database is located in and you",
    "start": "1752960",
    "end": "1759289"
  },
  {
    "text": "can do this for a couple different reasons you could do it to put a read replica closer to business or or",
    "start": "1759289",
    "end": "1764720"
  },
  {
    "text": "end-users who might benefit from having that database closer to them from a latency perspective or you might do it",
    "start": "1764720",
    "end": "1771200"
  },
  {
    "text": "from a disaster recovery perspective you might say I'm gonna I'm gonna put my read replicas on in another AWS region",
    "start": "1771200",
    "end": "1776899"
  },
  {
    "text": "and that's what we're gonna failover to for our disaster recovery process so there's a couple different ways you could use those read replicas on Aurora",
    "start": "1776899",
    "end": "1785750"
  },
  {
    "start": "1783000",
    "end": "1809000"
  },
  {
    "text": "we've already hit on most of this but I just want to kind of call out the read replicas are implemented a little bit",
    "start": "1785750",
    "end": "1791299"
  },
  {
    "text": "differently once again they they have a common access to the to the storage layer and the read replicas",
    "start": "1791299",
    "end": "1796909"
  },
  {
    "text": "are used as a failover for the primary database there's no separate standby",
    "start": "1796909",
    "end": "1802909"
  },
  {
    "text": "database that's in place for a rollup when it comes to being able to fail over and use read replicas I haven't touched",
    "start": "1802909",
    "end": "1811639"
  },
  {
    "start": "1809000",
    "end": "1854000"
  },
  {
    "text": "on Oracle or sequel server at this point from read replicas the reason being is that the RDS product doesn't currently",
    "start": "1811639",
    "end": "1817369"
  },
  {
    "text": "support read replicas for these two engines but there are ways you can still implement read replicas that these if",
    "start": "1817369",
    "end": "1823489"
  },
  {
    "text": "you choose to use them one way is using there's several third-party AWS partner",
    "start": "1823489",
    "end": "1828889"
  },
  {
    "text": "products out there that will handle replicating data between a target and a source database on these database",
    "start": "1828889",
    "end": "1834799"
  },
  {
    "text": "engines the Oracle GoldenGate product can actually be used to replicate data from from a target to a source database",
    "start": "1834799",
    "end": "1842179"
  },
  {
    "text": "or you can use snapshots which is a functionality we'll talk about in a little bit too to at least be able to",
    "start": "1842179",
    "end": "1848059"
  },
  {
    "text": "take a copy of a database and move it somewhere else and create another database from it so there's a couple",
    "start": "1848059",
    "end": "1862009"
  },
  {
    "start": "1854000",
    "end": "1957000"
  },
  {
    "text": "different reasons why you might want to scale your database up or down obviously the one first one is handling",
    "start": "1862009",
    "end": "1868070"
  },
  {
    "text": "a higher load your database becomes more popular your application becomes more popular you get more users you have a",
    "start": "1868070",
    "end": "1873979"
  },
  {
    "text": "higher load you need to be able to scale your database you need to add more CPU you need to add more memory for your",
    "start": "1873979",
    "end": "1879259"
  },
  {
    "text": "database to be able to handle the load that's being asked of it but the other option is actually lower usage you may",
    "start": "1879259",
    "end": "1885320"
  },
  {
    "text": "size your initial database to handle what you expect to be a certain number",
    "start": "1885320",
    "end": "1890539"
  },
  {
    "text": "of transactions a certain number of users and you might find later that you you aren't hitting those numbers and the",
    "start": "1890539",
    "end": "1895909"
  },
  {
    "text": "database is actually quite underutilized but you're paying for the configuration that you initially implemented you can",
    "start": "1895909",
    "end": "1902269"
  },
  {
    "text": "actually you might want to scale your database down so that it's not as still can do what it needs to do but you're",
    "start": "1902269",
    "end": "1908330"
  },
  {
    "text": "not paying for a configuration that you aren't actually using and kind of on",
    "start": "1908330",
    "end": "1913609"
  },
  {
    "text": "that note as well is controlling costs so a scenario I always like to reference is let's say you have an application in",
    "start": "1913609",
    "end": "1921200"
  },
  {
    "text": "a database that are very heavily used Monday through Friday but on the weekend",
    "start": "1921200",
    "end": "1926479"
  },
  {
    "text": "it's barely used at all nobody touches it it just kind of sits there wouldn't it be great if you could",
    "start": "1926479",
    "end": "1932460"
  },
  {
    "text": "actually resize that database down to a smaller size still have it up and",
    "start": "1932460",
    "end": "1937590"
  },
  {
    "text": "running to support the occasional transaction or somebody you might be working over the weekend but not have to pay for the larger size database that",
    "start": "1937590",
    "end": "1944880"
  },
  {
    "text": "you use over the weekend actually be able to shrink your costs to a minimal level when you don't actually need that",
    "start": "1944880",
    "end": "1950070"
  },
  {
    "text": "much on a weekend that's another reason that you might want to think about scaling up or down on RDS and there's",
    "start": "1950070",
    "end": "1955980"
  },
  {
    "text": "waste you can do that so when we talk about scaling on RTS as it relates to",
    "start": "1955980",
    "end": "1962850"
  },
  {
    "start": "1957000",
    "end": "2017000"
  },
  {
    "text": "changing the size of your master database this is an example of what you do in the command in the management console you choose a database instance",
    "start": "1962850",
    "end": "1969840"
  },
  {
    "text": "you go to instance actions you choose the modify menu option and then you go and you choose what you want your",
    "start": "1969840",
    "end": "1976200"
  },
  {
    "text": "database instance class to be choosing it based on the the mix of CPU and memory that it offers and then at the",
    "start": "1976200",
    "end": "1983850"
  },
  {
    "text": "very bottom of that configuration plate page is the apply immediately option if you don't check apply immediately RDS",
    "start": "1983850",
    "end": "1991890"
  },
  {
    "text": "will still make the change it'll resize your database but it'll do it when you during your defined maintenance window",
    "start": "1991890",
    "end": "1998280"
  },
  {
    "text": "so when you create an RDS instance you define what your maintenance when I want is an RDS uses that not only for this",
    "start": "1998280",
    "end": "2004130"
  },
  {
    "text": "type of activity but for applying minor patches and things like that so if you want this activity to happen right away",
    "start": "2004130",
    "end": "2010160"
  },
  {
    "text": "you need to make sure you're checking that apply immediately option and telling the service go ahead and do this now and not in my maintenance window so",
    "start": "2010160",
    "end": "2018410"
  },
  {
    "start": "2017000",
    "end": "2051000"
  },
  {
    "text": "when we're looking at scaling out so let's say we're running in a single availability zone model we want to",
    "start": "2018410",
    "end": "2025280"
  },
  {
    "text": "resize our database so when we go through the actions in the previous page",
    "start": "2025280",
    "end": "2030850"
  },
  {
    "text": "we choose to apply now the RDS instances RDS service is going to take that",
    "start": "2030850",
    "end": "2037130"
  },
  {
    "text": "initial database instance offline and it's going to resize it and bring it",
    "start": "2037130",
    "end": "2043730"
  },
  {
    "text": "back online and change the DNS entry and point you at the new database and here's",
    "start": "2043730",
    "end": "2052610"
  },
  {
    "start": "2051000",
    "end": "2072000"
  },
  {
    "text": "the events that RDS reports so when that happens there's a period of time that your database would be unavailable if",
    "start": "2052610",
    "end": "2059270"
  },
  {
    "text": "you were running in that configuration mode as you can see from the events here it's about an eight minute window for",
    "start": "2059270",
    "end": "2065158"
  },
  {
    "text": "the tests that I ran where the database wasn't available because I was using a single availability zone configuration",
    "start": "2065159",
    "end": "2072648"
  },
  {
    "start": "2072000",
    "end": "2105000"
  },
  {
    "text": "if we look at the multi availability zone approach it actually becomes a lot cleaner so when I choose to resize my",
    "start": "2072649",
    "end": "2079710"
  },
  {
    "text": "database the RDS service actually is going to go resize that standby database first leave the master database up and",
    "start": "2079710",
    "end": "2086970"
  },
  {
    "text": "running let it continue to do its work and then bring that larger database instance in and change the DNS entry to",
    "start": "2086970",
    "end": "2094260"
  },
  {
    "text": "point to that new resized database instance and then it will resize what",
    "start": "2094260",
    "end": "2101010"
  },
  {
    "text": "was the master which is now your standby database here is well first of all you",
    "start": "2101010",
    "end": "2108900"
  },
  {
    "start": "2105000",
    "end": "2142000"
  },
  {
    "text": "can see what I do at 6:20 in the morning on the Saturday but second the events",
    "start": "2108900",
    "end": "2114330"
  },
  {
    "text": "that RDS reports when this activity actually happens so you can see that it",
    "start": "2114330",
    "end": "2119490"
  },
  {
    "text": "doesn't actually start the failover for the multi AZ database until it's",
    "start": "2119490",
    "end": "2124770"
  },
  {
    "text": "actually applied the modifications to the first database instance so we still see that 8 minute window where it takes",
    "start": "2124770",
    "end": "2130650"
  },
  {
    "text": "to to flip over the databases but the difference here is that it's actually doing a failover so that you're",
    "start": "2130650",
    "end": "2136589"
  },
  {
    "text": "minimizing the amount of time that your database is offline during the scaling activity so I showed you guys to the",
    "start": "2136589",
    "end": "2145950"
  },
  {
    "start": "2142000",
    "end": "2232000"
  },
  {
    "text": "management console how you can do that but it you can actually even do this directly through the AWS api's or through the command-line interface the",
    "start": "2145950",
    "end": "2151830"
  },
  {
    "text": "top one is an example of where I'm calling the modified DB instance API I'm telling it what the day today's class it",
    "start": "2151830",
    "end": "2158580"
  },
  {
    "text": "should be and I'm giving it the apply immediately option if I leave apply immediately off it'll use the",
    "start": "2158580",
    "end": "2163710"
  },
  {
    "text": "maintenance window so if we take that a step further remember the scenario I talked about where you might want to",
    "start": "2163710",
    "end": "2169109"
  },
  {
    "text": "scale your database up and down over the weekend the bottom is just a simple cron",
    "start": "2169109",
    "end": "2174119"
  },
  {
    "text": "script entry that fires it at 8 o'clock on Friday and it calls a script called",
    "start": "2174119",
    "end": "2179369"
  },
  {
    "text": "scale down RTS which could be the CLI command I have above with a particular",
    "start": "2179369",
    "end": "2184380"
  },
  {
    "text": "database instance class that I've deemed appropriate to support my weekend work and then I've got another cron script",
    "start": "2184380",
    "end": "2190530"
  },
  {
    "text": "that runs at 4 a.m. on Monday calls the very similar command but gives it a data for database instance class",
    "start": "2190530",
    "end": "2196740"
  },
  {
    "text": "resize my database up to the level that I'm going to need on Monday morning to support my activities throughout the",
    "start": "2196740",
    "end": "2202260"
  },
  {
    "text": "week and during that time I've been able to resize to a database instance class that's still sufficient for the weekend",
    "start": "2202260",
    "end": "2207690"
  },
  {
    "text": "but from a cost perspective is a lot cheaper for me to be able to run so I've been able to create some variable costs",
    "start": "2207690",
    "end": "2213360"
  },
  {
    "text": "out of the database solution that I'm running now the cron job requires some",
    "start": "2213360",
    "end": "2219150"
  },
  {
    "text": "sort of infrastructure to be able to run where you've just whether you're running some some cheap sort of infrastructure on AWS or or you're you're partnering",
    "start": "2219150",
    "end": "2225300"
  },
  {
    "text": "with another compute node that you've got running but there's another way to actually do this without even having to",
    "start": "2225300",
    "end": "2230340"
  },
  {
    "text": "have a server in place at all from the scheduling perspective you can actually look at using a scheduled lambda",
    "start": "2230340",
    "end": "2236670"
  },
  {
    "start": "2232000",
    "end": "2317000"
  },
  {
    "text": "function so lambda is an AWS service that allows you to create functions that",
    "start": "2236670",
    "end": "2243060"
  },
  {
    "text": "respond to either two AWS events or two events that you define and make take",
    "start": "2243060",
    "end": "2248610"
  },
  {
    "text": "action so in this example I've got a piece of Python code that I wrote that I turned into a lambda function that",
    "start": "2248610",
    "end": "2255330"
  },
  {
    "text": "actually is calling the same modified DB instance API to modify my database",
    "start": "2255330",
    "end": "2260760"
  },
  {
    "text": "instance I went to the lambda console in the AWS console imported the code and",
    "start": "2260760",
    "end": "2267690"
  },
  {
    "text": "then I went and scheduled it and it's basically it's nearly the same entry you would do as if you were doing a cron job",
    "start": "2267690",
    "end": "2272730"
  },
  {
    "text": "and I now have a scheduled lambda function that will run and execute when I wanted to but I don't have to have any",
    "start": "2272730",
    "end": "2278550"
  },
  {
    "text": "infrastructure around to actually support the scheduling part of that so in the example of the the Friday Monday",
    "start": "2278550",
    "end": "2284609"
  },
  {
    "text": "scale-up I would have two lambda functions that are scheduled to run at the appropriate time that I want them to to scale up and down my database now",
    "start": "2284609",
    "end": "2293190"
  },
  {
    "text": "building on the lambda piece where we went and talked about the monitoring a little bit awhile ago where you could",
    "start": "2293190",
    "end": "2299430"
  },
  {
    "text": "actually create alerts and have those go to simple notification service and actually take action on it",
    "start": "2299430",
    "end": "2305030"
  },
  {
    "text": "so what if we could actually maybe based on a particular event scale our database",
    "start": "2305030",
    "end": "2311400"
  },
  {
    "text": "based on an alarm that tells us that we need to go to a larger database or do something different well we actually",
    "start": "2311400",
    "end": "2318600"
  },
  {
    "start": "2317000",
    "end": "2358000"
  },
  {
    "text": "have the ability to do metrics based scaling within RDS there's not a service",
    "start": "2318600",
    "end": "2324660"
  },
  {
    "text": "like auto scaling that exists with ec2 where you can kind of define I want you to add this menu or instances based on an alarm but what",
    "start": "2324660",
    "end": "2331810"
  },
  {
    "text": "you can do is you can take the metrics that RDS is feeding into cloud watch",
    "start": "2331810",
    "end": "2336870"
  },
  {
    "text": "define your alarms and then once those thresholds are crushed an alarm is",
    "start": "2336870",
    "end": "2342400"
  },
  {
    "text": "created and it sends a notification as simple notification service and then you can actually subscribe a lambda function",
    "start": "2342400",
    "end": "2348240"
  },
  {
    "text": "to that notification that can actually take action on your database if you feel",
    "start": "2348240",
    "end": "2354310"
  },
  {
    "text": "like you need to scale up based on the threshold that you've defined this is an",
    "start": "2354310",
    "end": "2360250"
  },
  {
    "start": "2358000",
    "end": "2427000"
  },
  {
    "text": "example some Python code once again that I turn into a lambda function it is",
    "start": "2360250",
    "end": "2365590"
  },
  {
    "text": "receiving an SNS notification and it's actually just pulling out the name of",
    "start": "2365590",
    "end": "2371020"
  },
  {
    "text": "the database instance from that notification and it's calling the modify command API to actually change the size",
    "start": "2371020",
    "end": "2377590"
  },
  {
    "text": "of the instance so this is a pretty simple one there might need to be some",
    "start": "2377590",
    "end": "2382630"
  },
  {
    "text": "logic in here that actually figures out what the current database instance is and and and steps up one based on the",
    "start": "2382630",
    "end": "2388240"
  },
  {
    "text": "available database instances it really depends on if you're expecting to scale multiple times or just to scale up once",
    "start": "2388240",
    "end": "2394020"
  },
  {
    "text": "and additionally you want to think about your applications here you know do you need to we talked about them being able",
    "start": "2394020",
    "end": "2400720"
  },
  {
    "text": "to fail gracefully do you maybe need to pause your application while that database scale-up happens there may be",
    "start": "2400720",
    "end": "2406210"
  },
  {
    "text": "some few things you need to understand around your application but the point is here is that there are some options for you to be able to actually take action",
    "start": "2406210",
    "end": "2412330"
  },
  {
    "text": "and be able to have some scaling activities hands off based on parameters you've defined you could also even think",
    "start": "2412330",
    "end": "2418990"
  },
  {
    "text": "about doing this for read replicas you could automate adding another read replica if you felt that the pressure on",
    "start": "2418990",
    "end": "2424330"
  },
  {
    "text": "your existing read replicas was getting too large okay so back up some snapshots",
    "start": "2424330",
    "end": "2430690"
  },
  {
    "start": "2427000",
    "end": "2503000"
  },
  {
    "text": "so another key part of operating a database is being able to back it up so that you can recover in the event of a",
    "start": "2430690",
    "end": "2436720"
  },
  {
    "text": "failure in the event of data corruption or even to create a brand-new database so on RDS",
    "start": "2436720",
    "end": "2443610"
  },
  {
    "text": "backups are available for all six of the engines my sequel Postgres moriah oracle",
    "start": "2443610",
    "end": "2449440"
  },
  {
    "text": "and sequel server offer you the ability to have a daily scheduled backup of your database we also archive automatically",
    "start": "2449440",
    "end": "2457420"
  },
  {
    "text": "the database change logs you can retain your database backups for up to 35 days you get to define",
    "start": "2457420",
    "end": "2463089"
  },
  {
    "text": "how many days up to 35 that should be and if you're running in a multi availability zone configuration we will",
    "start": "2463089",
    "end": "2468880"
  },
  {
    "text": "maintain multiple copies of each backup in each availability zone that you're running in on the Aurora side backups",
    "start": "2468880",
    "end": "2477219"
  },
  {
    "text": "are actually automatic continuous and incremental we use s3 as that backbone forever for backups on Aurora so the",
    "start": "2477219",
    "end": "2485469"
  },
  {
    "text": "storage layer is actually regularly pushing backups of the logs and the data blocks that it's made into s3 there's",
    "start": "2485469",
    "end": "2493420"
  },
  {
    "text": "really no impact on the database performance from Aurora when it comes to the backups because it's it from the",
    "start": "2493420",
    "end": "2498549"
  },
  {
    "text": "decoupled storage layer and it also offers you the 35-day retention for backups both of the database engines",
    "start": "2498549",
    "end": "2504999"
  },
  {
    "start": "2503000",
    "end": "2560000"
  },
  {
    "text": "offer the ability to restore to a point in time so and when you do this you go",
    "start": "2504999",
    "end": "2510489"
  },
  {
    "text": "in is an example of the management console you define the point in time you want to restore - down to the second and",
    "start": "2510489",
    "end": "2517239"
  },
  {
    "text": "when you restore it actually it doesn't restore on your existing database census it actually creates a brand new instance",
    "start": "2517239",
    "end": "2522910"
  },
  {
    "text": "in RDS so and at that point once you've done this initial define of where how",
    "start": "2522910",
    "end": "2529450"
  },
  {
    "text": "you know when you want to restore - you are presented with the same parameters you would be doing as if you were",
    "start": "2529450",
    "end": "2535089"
  },
  {
    "text": "creating a brand new database from scratch so if you're restoring you might have the ability to restore on a smaller",
    "start": "2535089",
    "end": "2540190"
  },
  {
    "text": "database instance because maybe you're just going to investigate something and you don't need a mega powerful database instance up and running you have some",
    "start": "2540190",
    "end": "2546999"
  },
  {
    "text": "options around there as far as how you configure that or if you're restoring to replace production you could restore to exact same configuration that you had",
    "start": "2546999",
    "end": "2553869"
  },
  {
    "text": "for your production database",
    "start": "2553869",
    "end": "2556950"
  },
  {
    "start": "2560000",
    "end": "2602000"
  },
  {
    "text": "when it comes to snapshots snapshots are a way for you to implement full copies",
    "start": "2561200",
    "end": "2567200"
  },
  {
    "text": "of your RDS database and these are different from scheduled backups because you control them you can run and create",
    "start": "2567200",
    "end": "2573440"
  },
  {
    "text": "as many snapshots as you want of your database all your snapshots are backed by Amazon s3 so you get the durability",
    "start": "2573440",
    "end": "2579920"
  },
  {
    "text": "and the availability that comes along with s3 and these are used to to first of all create keep a copy of a database",
    "start": "2579920",
    "end": "2586700"
  },
  {
    "text": "from that particular point in time but often use to actually create a brand-new RDS instance and we'll talk about some",
    "start": "2586700",
    "end": "2591710"
  },
  {
    "text": "use cases of what people might do here on the next slide and if you have snapshots that are already encrypted",
    "start": "2591710",
    "end": "2597470"
  },
  {
    "text": "through the encryption office as we talked about they will remain encrypted so some use cases on why people do",
    "start": "2597470",
    "end": "2604880"
  },
  {
    "start": "2602000",
    "end": "2765000"
  },
  {
    "text": "snapshots or might do snapshots one is to resolve a production issue if you're if you're the DBA and you start to",
    "start": "2604880",
    "end": "2611420"
  },
  {
    "text": "notice a problem with the database you could take a snapshot at that point in time and now you've got a copy of what",
    "start": "2611420",
    "end": "2617660"
  },
  {
    "text": "the database looked like when you were first seeing the problem you have the ability to maybe when you get through",
    "start": "2617660",
    "end": "2622670"
  },
  {
    "text": "the the issue to fire up a new database based on that snapshot and spend some",
    "start": "2622670",
    "end": "2627890"
  },
  {
    "text": "time actually trying to figure out what was wrong and what was going on with that database no need to go running",
    "start": "2627890",
    "end": "2633680"
  },
  {
    "text": "around trying to find more infrastructure to actually bring that database up on it's just launching a new database and requesting the",
    "start": "2633680",
    "end": "2639440"
  },
  {
    "text": "infrastructure you need at the time that you need it non production environment so there's often cases where you have",
    "start": "2639440",
    "end": "2646280"
  },
  {
    "text": "tests QA dev teams who want a database that resembles productions so that they",
    "start": "2646280",
    "end": "2653480"
  },
  {
    "text": "know that what they're building and testing actually is going to work when it hits production and that they they",
    "start": "2653480",
    "end": "2658880"
  },
  {
    "text": "have a rough idea of the number of transactions and the schemas that they're currently dealing with with RDS",
    "start": "2658880",
    "end": "2664520"
  },
  {
    "text": "you could create snapshots and then relaunch a new database with that snapshot put it into a different V PC",
    "start": "2664520",
    "end": "2670849"
  },
  {
    "text": "maybe the V PC that's used by your test team copy it to a different AWS account if you use the approach where you have",
    "start": "2670849",
    "end": "2677240"
  },
  {
    "text": "different accounts for different stages of your development lifecycle and launch the database in that account for that",
    "start": "2677240",
    "end": "2683030"
  },
  {
    "text": "team that word of caution on that if you're taking a production snapshot and you're creating it and handing it to an",
    "start": "2683030",
    "end": "2688549"
  },
  {
    "text": "on production team think about if you need to do any data scrubbing if there's if there's key pieces of data that maybe you should be scrubbing out of that",
    "start": "2688549",
    "end": "2694799"
  },
  {
    "text": "database before you hand it over to them taking a final copy before terminating a",
    "start": "2694799",
    "end": "2699809"
  },
  {
    "text": "database maybe you bring a database up to to test something out or just for a",
    "start": "2699809",
    "end": "2704849"
  },
  {
    "text": "short period of time and you need the data around but the database doesn't need it anymore you can take a snapshot and then turn it terminate the database",
    "start": "2704849",
    "end": "2711599"
  },
  {
    "text": "the snapshot will still sit there and if you ever need to get back at the data you can just simply take the snapshot",
    "start": "2711599",
    "end": "2717089"
  },
  {
    "text": "and relaunch a new database and actually go look at the data or when you determine you don't need the data anymore you just delete the snapshot and",
    "start": "2717089",
    "end": "2724049"
  },
  {
    "text": "then a couple of bullets there around related to disaster recovery so one",
    "start": "2724049",
    "end": "2729179"
  },
  {
    "text": "approach for companies might be to take a snapshot at a regular basis that's",
    "start": "2729179",
    "end": "2735390"
  },
  {
    "text": "different from their backup schedule that gives them a point in time copy of their database to have that around to",
    "start": "2735390",
    "end": "2741599"
  },
  {
    "text": "relaunch the database and at times they will even take and copy that snapshot to",
    "start": "2741599",
    "end": "2747539"
  },
  {
    "text": "another AWS region or to another AWS account as part of their overall",
    "start": "2747539",
    "end": "2752670"
  },
  {
    "text": "disaster recovery saying we are our recovery point and time is this our snapshots are this and we will use the",
    "start": "2752670",
    "end": "2759809"
  },
  {
    "text": "snapshots to relaunch our database if we ever have to do a disaster recovery cool",
    "start": "2759809",
    "end": "2766589"
  },
  {
    "start": "2765000",
    "end": "2802000"
  },
  {
    "text": "all right just a few things left here so who is using RDS today okay who's using",
    "start": "2766589",
    "end": "2775559"
  },
  {
    "text": "a database put on ec2 okay and then who I'm assuming that hands are going for",
    "start": "2775559",
    "end": "2781619"
  },
  {
    "text": "the rest but who's looking at going to RDS okay cool so whether you're on RT",
    "start": "2781619",
    "end": "2787410"
  },
  {
    "text": "yesterday whether you're on ec2 or whether you're in an on-premise data center there's options from migrating to",
    "start": "2787410",
    "end": "2793049"
  },
  {
    "text": "RDS you can you can do the do-it-yourself approach where you're just kind of standing up a new database and replicating the data across or",
    "start": "2793049",
    "end": "2799469"
  },
  {
    "text": "there's some third-party tools out there they'll do it for you and one of the other options that's out there that's been made generally available recently",
    "start": "2799469",
    "end": "2805469"
  },
  {
    "start": "2802000",
    "end": "2833000"
  },
  {
    "text": "is the database migration service this is a way for you to migrate data into",
    "start": "2805469",
    "end": "2811650"
  },
  {
    "text": "RDS or even AC to running a database and one of the cool things is it can go from data to go across different database",
    "start": "2811650",
    "end": "2818219"
  },
  {
    "text": "engines you could go my sequel to my sequel or Oracle to Oracle but you could also go Oracle to Aurora",
    "start": "2818219",
    "end": "2823380"
  },
  {
    "text": "if you wanted to it will link up the different database engines it will replicate the data",
    "start": "2823380",
    "end": "2828540"
  },
  {
    "text": "and it will keep replicating the data until you decide to turn it off so the",
    "start": "2828540",
    "end": "2833910"
  },
  {
    "start": "2833000",
    "end": "2876000"
  },
  {
    "text": "way that this works is that you've you've got your on-premise database you start a replication instance you connect",
    "start": "2833910",
    "end": "2840030"
  },
  {
    "text": "it to your source and your target database together you select the tables and the schemas with the databases you",
    "start": "2840030",
    "end": "2846420"
  },
  {
    "text": "actually want migrated and the migration service will actually migrate all the data from the source database to the",
    "start": "2846420",
    "end": "2852600"
  },
  {
    "text": "target database and at that point it will then continue to sync all the changes that happen between on the",
    "start": "2852600",
    "end": "2859170"
  },
  {
    "text": "source database so you could have this up and running for a month and may be doing some some tests against that",
    "start": "2859170",
    "end": "2865980"
  },
  {
    "text": "target database to make sure that it actually works and that it meets your needs and then when you're finally ready to cut over you simply repoint your",
    "start": "2865980",
    "end": "2872760"
  },
  {
    "text": "applications and your end users at the other database you know I talked about",
    "start": "2872760",
    "end": "2877830"
  },
  {
    "start": "2876000",
    "end": "2926000"
  },
  {
    "text": "moving between different database engines and one of the challenges of that is is that the schemas aren't the",
    "start": "2877830",
    "end": "2884190"
  },
  {
    "text": "same each engine defines how it defines objects data types the way you can use",
    "start": "2884190",
    "end": "2889680"
  },
  {
    "text": "functions are different so another component of that is the schema migration tool the schema migration tool",
    "start": "2889680",
    "end": "2896640"
  },
  {
    "text": "is actually something that you can download and run against your database and it will tell you which of the",
    "start": "2896640",
    "end": "2903270"
  },
  {
    "text": "objects that can actually convert successfully from the source database to the target database and any of the",
    "start": "2903270",
    "end": "2910109"
  },
  {
    "text": "objects it can't it will tell you these are the ones that I could not change by default these are the ones you need to",
    "start": "2910109",
    "end": "2916230"
  },
  {
    "text": "spend your time on actually analyzing and fixing as opposed to going through every object in your database schema and",
    "start": "2916230",
    "end": "2922500"
  },
  {
    "text": "figuring out which one you need to convert or don't convert okay so that is",
    "start": "2922500",
    "end": "2929040"
  },
  {
    "start": "2926000",
    "end": "3412000"
  },
  {
    "text": "the end of the first part I'd like to first of all thank everybody for sitting through this is a very hot room in here sitting through and listening I really",
    "start": "2929040",
    "end": "2936090"
  },
  {
    "text": "enjoy putting this together and I hope you guys got something out of it please remember to fill out your surveys I'm always anxious to try and improve and",
    "start": "2936090",
    "end": "2942990"
  },
  {
    "text": "hear what people are saying from a feedback perspective and so I thank you for your time and I'll stick around for a little Q&A now thank you",
    "start": "2942990",
    "end": "2951980"
  },
  {
    "text": "yeah so the question was is is this the failover from the master or the standby",
    "start": "2962730",
    "end": "2967750"
  },
  {
    "text": "automatic and then the second question was a DNS failover time so yes the the",
    "start": "2967750",
    "end": "2972940"
  },
  {
    "text": "failover from the master to this standby is automatic the RDS service is doing that for you it has another watcher",
    "start": "2972940",
    "end": "2979930"
  },
  {
    "text": "that's out there constantly keeping track of the master database and when it's determined to be unhealthy it will",
    "start": "2979930",
    "end": "2984970"
  },
  {
    "text": "initiate the fail of a process from a DNS standpoint it's roughly like a thirty to sixty second time frame before",
    "start": "2984970",
    "end": "2992800"
  },
  {
    "text": "failover happens thirty does you potentially could yes yes if you don't",
    "start": "2992800",
    "end": "2999220"
  },
  {
    "text": "want to wait on the TTL you could try and refresh faster yes cool other questions yes okay okay",
    "start": "2999220",
    "end": "3011930"
  },
  {
    "text": "right um so the question was is if you wanted to copy an encrypted snapshot from one e2b what's region to another",
    "start": "3024820",
    "end": "3031420"
  },
  {
    "text": "with KMS keys which that isn't supported today are there any tools to do that right now there are not any tools that",
    "start": "3031420",
    "end": "3038380"
  },
  {
    "text": "are out there to do that but but I will tell you what you're asking for is you",
    "start": "3038380",
    "end": "3043660"
  },
  {
    "text": "know a very common customer ask it's the next level of like hey I want to be able to use my keys anywhere I don't have any",
    "start": "3043660",
    "end": "3049750"
  },
  {
    "text": "timelines on it but I know the service teams are hearing that customer feedback and I would not be surprised if they're working on that and have a plan to",
    "start": "3049750",
    "end": "3055750"
  },
  {
    "text": "implement it in the future yes yeah so",
    "start": "3055750",
    "end": "3066460"
  },
  {
    "text": "the question was as other other types of monitoring is to the guy om for Oracle you actually you can implement om right",
    "start": "3066460",
    "end": "3072700"
  },
  {
    "text": "on top of RDS and we actually have public documents that talk about how to link up om on top of RDS well let's get",
    "start": "3072700",
    "end": "3082360"
  },
  {
    "text": "over here yeah yes",
    "start": "3082360",
    "end": "3088920"
  },
  {
    "text": "sure sure so the question was about Postgres and HIPAA compliance what I can",
    "start": "3090010",
    "end": "3096350"
  },
  {
    "text": "tell you is that in most cases compliance and getting an engine certify for compliance is more of a timing thing",
    "start": "3096350",
    "end": "3102140"
  },
  {
    "text": "it takes a while to work with these auditors and the compliance boards to actually get them comfortable and go",
    "start": "3102140",
    "end": "3108290"
  },
  {
    "text": "through all the tests that are required to get it compliant I can tell you that our teams that is another piece of",
    "start": "3108290",
    "end": "3114140"
  },
  {
    "text": "feedback we get is to get all the engines compliant I know that they're working on it I don't have any timelines",
    "start": "3114140",
    "end": "3119210"
  },
  {
    "text": "that I can share on it or it is my understandings in the works but I don't mean timelines to share and I don't know if it's a technology or a timing thing",
    "start": "3119210",
    "end": "3125450"
  },
  {
    "text": "with the certification ok there was question here",
    "start": "3125450",
    "end": "3131349"
  },
  {
    "text": "so the question was in any plans for Postgres cross region replication I'm not aware of any plans once again it's",
    "start": "3138330",
    "end": "3144910"
  },
  {
    "text": "all depend on customer feedback the product teams may have getting that feedback it may be something coming I just don't know",
    "start": "3144910",
    "end": "3150240"
  },
  {
    "text": "yeah sorry",
    "start": "3150240",
    "end": "3153900"
  },
  {
    "text": "well so failover if you're using the this question was about failover on Oracle so you can still use the high",
    "start": "3157740",
    "end": "3163170"
  },
  {
    "text": "availability that 8 the the high availability configuration on RDS to have that failover for Oracle that's",
    "start": "3163170",
    "end": "3169950"
  },
  {
    "text": "totally possible that works for all six engines to have that but if you want to have an additional read replica because",
    "start": "3169950",
    "end": "3175050"
  },
  {
    "text": "that standby is actually not you can't access that standby in an hae configuration so if you do want",
    "start": "3175050",
    "end": "3180930"
  },
  {
    "text": "something in addition to that then you need to start looking at the tools like a Golden Gate or something like that to get another Oracle read replica ok yes",
    "start": "3180930",
    "end": "3190880"
  },
  {
    "text": "no this questions if in the format's the snapshots be exported the snapshots are only work on RDS you can't pull them",
    "start": "3193369",
    "end": "3200310"
  },
  {
    "text": "import them into like another database that's not an audience they will only work with RDS they can't actually be exported at all depends on the engine",
    "start": "3200310",
    "end": "3211700"
  },
  {
    "text": "there are some public Docs I think I know around like sequel server and",
    "start": "3211700",
    "end": "3217080"
  },
  {
    "text": "oracle about how to do that I don't know if you can ever get a full backup out of RDS though because it is a managed",
    "start": "3217080",
    "end": "3222780"
  },
  {
    "text": "service but it depends on the engine we'd have to look at that yes do you",
    "start": "3222780",
    "end": "3234839"
  },
  {
    "text": "know what version of sequel server link server requires does it require like enterprise or it some do you know ok",
    "start": "3234839",
    "end": "3241619"
  },
  {
    "text": "I'd have to I don't have an answer to that I can tell you that sequel server but you have an answer oh ok ok and it",
    "start": "3241619",
    "end": "3251910"
  },
  {
    "text": "probably has to do with the fact that there's some configuration that we can't give you access to from the host operating system perspective ok yes sir",
    "start": "3251910",
    "end": "3260720"
  },
  {
    "text": "so if so obviously make sure I understand the question correctly if a failover happens well we will apply all",
    "start": "3267599",
    "end": "3275019"
  },
  {
    "text": "of the logs up from the checkpoint Ford in order to get the standby caught up is",
    "start": "3275019",
    "end": "3280209"
  },
  {
    "text": "that what we're you're referring to",
    "start": "3280209",
    "end": "3283529"
  },
  {
    "text": "transmitted I believe yes and I don't want to give you the wrong answer I wouldn't mind taking your information just to dive deeper and get you the",
    "start": "3298380",
    "end": "3303969"
  },
  {
    "text": "right exact right answer on how that's a little more granular than I have a full knowledge on but I can take your if",
    "start": "3303969",
    "end": "3309910"
  },
  {
    "text": "nature give you my card afterwards and you can sort into it I give time for two more no idea on that",
    "start": "3309910",
    "end": "3322390"
  },
  {
    "text": "once again it's probably something the service teams are maybe looking at and those are really driven by customer",
    "start": "3322390",
    "end": "3327579"
  },
  {
    "text": "feedback so if you're a customer now please get you know file a support case around that and they use case because",
    "start": "3327579",
    "end": "3333069"
  },
  {
    "text": "they want to be able to see that and know what people are looking for from that okay so you could this same api's",
    "start": "3333069",
    "end": "3348160"
  },
  {
    "text": "so if you you determine that okay let's say I provision two terabytes and I need for now you could actually use the",
    "start": "3348160",
    "end": "3354099"
  },
  {
    "text": "monitoring metrics that tell you where your storage is and call the same call",
    "start": "3354099",
    "end": "3359469"
  },
  {
    "text": "api's to add more storage to your database engine and they stored the way",
    "start": "3359469",
    "end": "3364539"
  },
  {
    "text": "it actually takes a while it'll do it automatically but it takes a while to actually provision all of the new",
    "start": "3364539",
    "end": "3370239"
  },
  {
    "text": "storage on the database engine we actually have public Docs to talk about it do that but you could do that through api's and through monitoring and even",
    "start": "3370239",
    "end": "3376809"
  },
  {
    "text": "through that lam the stuff as well yep and that'll be the final question right there",
    "start": "3376809",
    "end": "3382499"
  },
  {
    "text": "so I know that the database migration service I talked about at the end definitely can you can it can take any",
    "start": "3396130",
    "end": "3402620"
  },
  {
    "text": "two sources and replicate them you can even replicate off of RDS and back into your own on-premise data center if you",
    "start": "3402620",
    "end": "3408200"
  },
  {
    "text": "so choose yep cool thanks everybody",
    "start": "3408200",
    "end": "3413260"
  }
]