[
  {
    "start": "0",
    "end": "35000"
  },
  {
    "text": "and again i'd like to thank you for joining us today and with that i will go ahead and hand it over to",
    "start": "240",
    "end": "5279"
  },
  {
    "text": "jeffer shimeen who's a business development manager here at amazon web services jeffrey you have the floor",
    "start": "5279",
    "end": "11040"
  },
  {
    "text": "thanks aurora and uh thank you for joining this webinar we'll be talking about post rest sql and how you can run and",
    "start": "11040",
    "end": "18320"
  },
  {
    "text": "maximize the performance of your databases on aws with me we have miles ward senior",
    "start": "18320",
    "end": "23600"
  },
  {
    "text": "manager of solution architecture at amazon web services and jay edwards who is the cto at",
    "start": "23600",
    "end": "29359"
  },
  {
    "text": "palomino db so the agenda today i'm going to cover briefly what elastic",
    "start": "29359",
    "end": "35600"
  },
  {
    "start": "35000",
    "end": "53000"
  },
  {
    "text": "block store is and what elastic block store provision iops volumes are",
    "start": "35600",
    "end": "40719"
  },
  {
    "text": "and miles and j are going to talk about postgres the best practices of running postgres",
    "start": "40719",
    "end": "47440"
  },
  {
    "text": "on aws and some lessons learned from the obama for america campaign",
    "start": "47440",
    "end": "52480"
  },
  {
    "text": "so as you start using aws you have two broad choices in terms of storage that is available to you",
    "start": "52480",
    "end": "57520"
  },
  {
    "start": "53000",
    "end": "103000"
  },
  {
    "text": "uh obviously for postgres uh you will be choosing the block storage platform that's available in aws which is the",
    "start": "57520",
    "end": "64559"
  },
  {
    "text": "elastic block store platform you can also use ebs to create file systems run other databases and enterprise and",
    "start": "64559",
    "end": "72080"
  },
  {
    "text": "productivity applications such as erp crm exchange etc the other option is uh object store uh for example s3 or",
    "start": "72080",
    "end": "79840"
  },
  {
    "text": "glacier ebs has a facility available for you to",
    "start": "79840",
    "end": "85040"
  },
  {
    "text": "back up your data in the form of snapshots these snapshots go into s3 s3 gives you",
    "start": "85040",
    "end": "90240"
  },
  {
    "text": "11 lines of durability so your data is safe so a little bit",
    "start": "90240",
    "end": "95600"
  },
  {
    "text": "about elastic block store elastic block store is a service",
    "start": "95600",
    "end": "100720"
  },
  {
    "text": "uh that gives you high performance block storage devices these are presented to you as raw",
    "start": "100720",
    "end": "105840"
  },
  {
    "start": "103000",
    "end": "154000"
  },
  {
    "text": "unformulated storage devices and it's a service which means we manage the heavy lifting to give you a reliable",
    "start": "105840",
    "end": "112399"
  },
  {
    "text": "storage platform and provide you the storage when you need it to match the performance your application demands so it's an on-demand block storage",
    "start": "112399",
    "end": "119439"
  },
  {
    "text": "platform for you to use you can provision volumes from one gigabyte in size up to one terabyte in",
    "start": "119439",
    "end": "126000"
  },
  {
    "text": "size and when you create an eps volume in an availability zone it is automatically replicated within",
    "start": "126000",
    "end": "132239"
  },
  {
    "text": "that zone to prevent data loss due to failure of any single hardware component you can create",
    "start": "132239",
    "end": "138640"
  },
  {
    "text": "snapshots that are stored in s3 like i mentioned before to restore point in time copies of your data",
    "start": "138640",
    "end": "145040"
  },
  {
    "text": "and ebs also provides you detailed metrics around performance and other characteristics of evs through our cloud",
    "start": "145040",
    "end": "151360"
  },
  {
    "text": "watch service so that you can monitor your storage so with eds you get two",
    "start": "151360",
    "end": "159599"
  },
  {
    "text": "types of volumes standard volumes and provision iops volumes when you are",
    "start": "159599",
    "end": "165599"
  },
  {
    "text": "choosing which volume to use for your application here are some guidelines so standard volumes are optimized for",
    "start": "165599",
    "end": "172160"
  },
  {
    "text": "low to moderate iops needs and occasional bursts they're good for boot volumes",
    "start": "172160",
    "end": "177920"
  },
  {
    "text": "running website log processing file serving when you want",
    "start": "177920",
    "end": "184159"
  },
  {
    "text": "consistent performance for transactional workloads requiring uh consistent iops you may want to",
    "start": "184159",
    "end": "189920"
  },
  {
    "text": "choose provision iops with provision iops you can provision",
    "start": "189920",
    "end": "195200"
  },
  {
    "text": "up to one terabyte in volumes and up to 4000 iops for volumes this slide says",
    "start": "195200",
    "end": "200239"
  },
  {
    "text": "2000 but we recently announced that uh with each volume you can get up to four",
    "start": "200239",
    "end": "205920"
  },
  {
    "text": "thousand iops and you can obviously strike these volumes to get even more iops for instance",
    "start": "205920",
    "end": "211440"
  },
  {
    "text": "as miles and jay will discuss further on in the presentation and praveen iaps are great",
    "start": "211440",
    "end": "218879"
  },
  {
    "text": "for business applications running nosql and relational databases such as postgres",
    "start": "218879",
    "end": "224959"
  },
  {
    "text": "so a little bit more about provision iops volumes we introduced provision iops volumes in august of last year",
    "start": "224959",
    "end": "233439"
  },
  {
    "start": "229000",
    "end": "261000"
  },
  {
    "text": "and what they provide you with is consistent performance uh per volume",
    "start": "233439",
    "end": "240000"
  },
  {
    "text": "like i mentioned before when you are choosing to use provision iops volumes you all you have",
    "start": "240000",
    "end": "245920"
  },
  {
    "text": "to do is specify iops that you want up to 4000 apps of volume and the capacity that you want",
    "start": "245920",
    "end": "252400"
  },
  {
    "text": "and you can do that easily using the web console or command lines using",
    "start": "252400",
    "end": "259120"
  },
  {
    "text": "api that are available to you so what are customers running on ebs today we have seen great adoption of provision",
    "start": "259120",
    "end": "266720"
  },
  {
    "start": "261000",
    "end": "332000"
  },
  {
    "text": "iops volumes and provision ios volumes are being used by enterprises to run the oracle sap",
    "start": "266720",
    "end": "272639"
  },
  {
    "text": "microsoft workloads uh there are a lot of gaming social mobile and education institutions who are",
    "start": "272639",
    "end": "279440"
  },
  {
    "text": "running high performance transactional workloads including no sql and relational databases",
    "start": "279440",
    "end": "285360"
  },
  {
    "text": "we are seeing a lot of marketing and analytics companies leverage the consistent performance that the",
    "start": "285360",
    "end": "290479"
  },
  {
    "text": "provision ios volumes provide to run their analytics workloads and we're curious to hear what",
    "start": "290479",
    "end": "296960"
  },
  {
    "text": "else you may be running feel free to reach out to me with any comments around provision iops",
    "start": "296960",
    "end": "303120"
  },
  {
    "text": "and share your experience with the ebs my email will be at the end of the presentation",
    "start": "303120",
    "end": "310560"
  },
  {
    "text": "and there'll also be links to more detail about ebs uh at the end of the presentation",
    "start": "310560",
    "end": "317360"
  },
  {
    "text": "that you can use to find out how to use evs to get the maximum",
    "start": "317360",
    "end": "323680"
  },
  {
    "text": "performance for your applications now i'd like to hand it over to miles to",
    "start": "323680",
    "end": "331120"
  },
  {
    "text": "go over postgres and the best practices for using postgres on aws",
    "start": "331120",
    "end": "336880"
  },
  {
    "start": "332000",
    "end": "425000"
  },
  {
    "text": "jafar thanks a bunch i really appreciate the introduction uh a lot of thick block storage and uh",
    "start": "337199",
    "end": "343680"
  },
  {
    "text": "postgres postgre sql on ec2 are kind of a match made in heaven",
    "start": "343680",
    "end": "349120"
  },
  {
    "text": "i'm excited to go through some of the research that we've done together with consultants from",
    "start": "349120",
    "end": "354720"
  },
  {
    "text": "palominodb to identify and enumerate the best practices",
    "start": "354720",
    "end": "359840"
  },
  {
    "text": "for postgrad sql hosting on ec2 we have a lot of detail to cover today",
    "start": "359840",
    "end": "365600"
  },
  {
    "text": "so i'm going to try and move through it pretty quickly this is kind of an early preview to",
    "start": "365600",
    "end": "371360"
  },
  {
    "text": "a white paper that we're just about to release on the subject so everybody can stay tuned for even more",
    "start": "371360",
    "end": "377280"
  },
  {
    "text": "detail available in that view but but i think today's webinar will do a great job of providing",
    "start": "377280",
    "end": "383840"
  },
  {
    "text": "a lot of very actionable insight into the right designs to leverage for",
    "start": "383840",
    "end": "389759"
  },
  {
    "text": "postgresql on aws so we hear from lots of customers uh that you know sort of back to this",
    "start": "389759",
    "end": "397440"
  },
  {
    "text": "other sort of component that um that as an open source relational database management system",
    "start": "397440",
    "end": "403520"
  },
  {
    "text": "that's feature rich postgres is a great choice and a workflow on aws that we're seeing grow",
    "start": "403520",
    "end": "411680"
  },
  {
    "text": "over time in particular around uh gis workloads and other other sort of high feature",
    "start": "411680",
    "end": "418720"
  },
  {
    "text": "relational functions so a couple of basic uh concepts to",
    "start": "418720",
    "end": "424000"
  },
  {
    "text": "master before you start to design a postgraph system on aws um the way that replication works",
    "start": "424000",
    "end": "432639"
  },
  {
    "start": "425000",
    "end": "507000"
  },
  {
    "text": "in a postgres database cluster or fleet as you establish and define a",
    "start": "432639",
    "end": "439280"
  },
  {
    "text": "master or postgresql host that master node access both reads and",
    "start": "439280",
    "end": "444319"
  },
  {
    "text": "writes and allows several different flavors of replication",
    "start": "444319",
    "end": "450400"
  },
  {
    "text": "that allows high availability and read scalability and performance scalability for the database system",
    "start": "450400",
    "end": "457440"
  },
  {
    "text": "that's operating at the structural level there's also of course the logical level of subdivision by way of",
    "start": "457440",
    "end": "464560"
  },
  {
    "text": "um you know database sharding so masters are called masters in in",
    "start": "464560",
    "end": "469840"
  },
  {
    "text": "postgresql and secondaries are called secondaries where you're able to receive write ahead logs",
    "start": "469840",
    "end": "477280"
  },
  {
    "text": "from the master and then either perform synchronous or asynchronous replication",
    "start": "477280",
    "end": "484160"
  },
  {
    "text": "using those logs you can also either have uh you know sort of",
    "start": "484160",
    "end": "490000"
  },
  {
    "text": "asynchronous with the attempt to be as on time as possible or an intentional delay",
    "start": "490000",
    "end": "495120"
  },
  {
    "text": "to create to create sort of after low lower performance impact copies for",
    "start": "495120",
    "end": "501759"
  },
  {
    "text": "reporting or other kind of analysis so to to start to get started with postgres",
    "start": "501759",
    "end": "508560"
  },
  {
    "start": "507000",
    "end": "646000"
  },
  {
    "text": "on ec2 um really you know this is a pretty well used and well-liked piece of software",
    "start": "508560",
    "end": "515680"
  },
  {
    "text": "it's available in many many different repositories so you can really start with the amazon machine image of your choice",
    "start": "515680",
    "end": "522159"
  },
  {
    "text": "aws has its own uh m linux image called amazon linux which is",
    "start": "522159",
    "end": "528160"
  },
  {
    "text": "one that we maintain and support if you're a customer of aws",
    "start": "528160",
    "end": "533440"
  },
  {
    "text": "premium support you'll find that they have the ability to support you full stack",
    "start": "533440",
    "end": "538480"
  },
  {
    "text": "if you're using that operating system as well as a couple of the other sort of named operating systems like you",
    "start": "538480",
    "end": "546080"
  },
  {
    "text": "know they can help you make connections into folks from ubuntu and red hat and the other teams",
    "start": "546080",
    "end": "551519"
  },
  {
    "text": "once you have a machine image that you like you'd launch an ec2 instance and attach",
    "start": "551519",
    "end": "557360"
  },
  {
    "text": "evs any bs volume or evs volumes to it those volumes are where you'd store the",
    "start": "557360",
    "end": "564160"
  },
  {
    "text": "data for the database we have lots of customers that make the mistake of storing the database on the root volume",
    "start": "564160",
    "end": "571120"
  },
  {
    "text": "of the ec2 instance that revolves not designed for that kind of storage and is more",
    "start": "571120",
    "end": "577600"
  },
  {
    "text": "complicated to resize if that's what you need to do so following that installation and",
    "start": "577600",
    "end": "584720"
  },
  {
    "text": "assignment of drive resources you'd install software from from the postgre",
    "start": "584720",
    "end": "590320"
  },
  {
    "text": "sql either ftp site or their repository and then in order to allow database",
    "start": "590320",
    "end": "597120"
  },
  {
    "text": "connectivity to your ac2 instance you'd open port",
    "start": "597120",
    "end": "602839"
  },
  {
    "text": "5432 to allow inbound traffic or index",
    "start": "602839",
    "end": "608079"
  },
  {
    "text": "traffic in vtc you have to make sure that you allow that not only at the ec2 security group but",
    "start": "608079",
    "end": "614560"
  },
  {
    "text": "also the network apple or the subnet security group to ensure that the traffic that you need to get",
    "start": "614560",
    "end": "621120"
  },
  {
    "text": "to the instance can get there in a in a master slate configuration we do",
    "start": "621120",
    "end": "627040"
  },
  {
    "text": "have a secondary node which is the recommended design for all production deployments you also",
    "start": "627040",
    "end": "632240"
  },
  {
    "text": "have to alter the master slave configuration file inside of postgres to",
    "start": "632240",
    "end": "637279"
  },
  {
    "text": "enable uh redhead logging senders to increase the maximum from zero",
    "start": "637279",
    "end": "642399"
  },
  {
    "text": "so okay that that uh maxwell center's value requires a",
    "start": "642399",
    "end": "649680"
  },
  {
    "start": "646000",
    "end": "693000"
  },
  {
    "text": "database restart to change so it's best to set it a little higher than you think you might",
    "start": "649680",
    "end": "656000"
  },
  {
    "text": "need if you think i'll have a master i'll have a few replicas maybe you want to set it to",
    "start": "656000",
    "end": "661839"
  },
  {
    "text": "about four so just something to bear in mind",
    "start": "661839",
    "end": "667360"
  },
  {
    "text": "yep yep absolutely right so we also you know recognize that",
    "start": "667360",
    "end": "674320"
  },
  {
    "text": "aws has some very high performance instances we've you know chased after some of the larger",
    "start": "674320",
    "end": "680399"
  },
  {
    "text": "infrastructure fleets in the world and and we've designed two systems now the",
    "start": "680399",
    "end": "686079"
  },
  {
    "text": "high one 4x large and cr1 8x large that have solid state disk",
    "start": "686079",
    "end": "691600"
  },
  {
    "text": "storage for local ephemeral disk and if you're going to use",
    "start": "691600",
    "end": "697360"
  },
  {
    "text": "that ssd storage you want to make sure that those are unlogged",
    "start": "697360",
    "end": "702480"
  },
  {
    "text": "tables otherwise you're going to consume a lot of the available performance that's there with ssds",
    "start": "702480",
    "end": "709440"
  },
  {
    "text": "and you'll also want to make sure that you know the file system used is configured correctly that the alignment",
    "start": "709440",
    "end": "716000"
  },
  {
    "text": "to block size inside of the secs is done correctly you know you have to make sure that",
    "start": "716000",
    "end": "722240"
  },
  {
    "text": "you've got any of the real data that you're using stored somewhere in",
    "start": "722240",
    "end": "727440"
  },
  {
    "text": "in durable storage and persistent storage ssd storage on either of those two instances",
    "start": "727440",
    "end": "732880"
  },
  {
    "text": "is the thermal so if the virtual machine stops or is restarted or or uh not rebooted",
    "start": "732880",
    "end": "740480"
  },
  {
    "text": "but if it's um if it's stopped and started or terminated or if there's a problem with it and it",
    "start": "740480",
    "end": "746800"
  },
  {
    "text": "fails you'll lose all data in that soc storage so it's one of the important drivers for",
    "start": "746800",
    "end": "753200"
  },
  {
    "text": "implementing on top of evs so to kind of make that a little more",
    "start": "753200",
    "end": "758480"
  },
  {
    "text": "visual if you look at kind of a basic design we see this getting done over and over and over",
    "start": "758480",
    "end": "763600"
  },
  {
    "start": "760000",
    "end": "811000"
  },
  {
    "text": "again aws is built to deliver high availability by",
    "start": "763600",
    "end": "768720"
  },
  {
    "text": "way of the multi-av design pattern so we have multiple sets of availability zones inside of",
    "start": "768720",
    "end": "776639"
  },
  {
    "text": "regions that allow you to have the full isolation and independence of you",
    "start": "776639",
    "end": "783600"
  },
  {
    "text": "know separate data centers with the tight interconnectivity and high performance networking",
    "start": "783600",
    "end": "789760"
  },
  {
    "text": "of uh you know typically inside the building so the design to distribute the master and",
    "start": "789760",
    "end": "796560"
  },
  {
    "text": "the secondary from across two different avs really amplifies the fault tolerance",
    "start": "796560",
    "end": "802800"
  },
  {
    "text": "benefits of the replication that postgres enable so a couple of replication basics you",
    "start": "802800",
    "end": "810800"
  },
  {
    "text": "are again the records that you write to the master are transferred to",
    "start": "810800",
    "end": "816639"
  },
  {
    "text": "the secondary using a function called write ahead logging a wall the that replication can again be real",
    "start": "816639",
    "end": "824959"
  },
  {
    "text": "time uh through a mode called screening replication uh or it can be a delayed copy",
    "start": "824959",
    "end": "832160"
  },
  {
    "text": "so an archival or reporting oriented copy that's done at a lower performance impact to the",
    "start": "832160",
    "end": "838959"
  },
  {
    "text": "master um the those two different timing models",
    "start": "838959",
    "end": "844959"
  },
  {
    "text": "are independent of the settings around durability model whether you enforce",
    "start": "844959",
    "end": "850480"
  },
  {
    "text": "synchronous replication where the remote secondary has to acknowledge the completion of the write locally",
    "start": "850480",
    "end": "857519"
  },
  {
    "text": "before the master can acknowledge completion or a synchronized replication where",
    "start": "857519",
    "end": "863199"
  },
  {
    "text": "where the secondary just has to move it to try and keep up you can",
    "start": "863199",
    "end": "869360"
  },
  {
    "text": "do you know can keep multiple additional secondaries online in order",
    "start": "869360",
    "end": "876160"
  },
  {
    "text": "to provide additional candidates additional instances to fail over to",
    "start": "876160",
    "end": "881199"
  },
  {
    "text": "if there's a problem with your existing secondary that's um you can also do that in that",
    "start": "881199",
    "end": "886959"
  },
  {
    "text": "sort of a cascading mode with cascading or application this is jay i have a few comments on",
    "start": "886959",
    "end": "893279"
  },
  {
    "text": "that last slide so something to pay attention to with synchronous replication",
    "start": "893279",
    "end": "899519"
  },
  {
    "text": "is that it is very network sensitive right so if you have a lot of network latency",
    "start": "899519",
    "end": "905279"
  },
  {
    "text": "or you have a lot of problems it can kind of slow down the the the entire process of your master your",
    "start": "905279",
    "end": "913040"
  },
  {
    "text": "database and the the right ahead log is actually how even if you're not replicating at",
    "start": "913040",
    "end": "919199"
  },
  {
    "text": "all postgres has a wall it's the it's the method that it uses",
    "start": "919199",
    "end": "925839"
  },
  {
    "text": "for uh asset durability right like on my sql you've got an innova log file",
    "start": "925839",
    "end": "932160"
  },
  {
    "text": "it's just this is how it's basically it works out the same way oracle does right you're basically",
    "start": "932160",
    "end": "937440"
  },
  {
    "text": "streaming the transaction log and that's how replication happens back to you miles sure so an important",
    "start": "937440",
    "end": "945759"
  },
  {
    "text": "you know add-on to that one of the things that i think folks miss in the ec2 instance specification",
    "start": "945759",
    "end": "952839"
  },
  {
    "text": "definitions is the i o capacity or i o capability listing associated with each",
    "start": "952839",
    "end": "960720"
  },
  {
    "text": "instance type different instances have and come with a consistent the amount of network",
    "start": "960720",
    "end": "968320"
  },
  {
    "text": "bandwidth that's available to them we'll talk about ebs optimized as a flag you can set to",
    "start": "968320",
    "end": "974639"
  },
  {
    "text": "improve the bandwidth between your instance and evs to provide a guaranteed amount of",
    "start": "974639",
    "end": "980560"
  },
  {
    "text": "bandwidth to storage but independent of that larger instances have a larger amount of network",
    "start": "980560",
    "end": "987120"
  },
  {
    "text": "bandwidth so you may find that you have plenty of free memory for your workload and print",
    "start": "987120",
    "end": "992800"
  },
  {
    "text": "plenty of free cpu and you you're unloaded in those ways but for replication purposes you need more",
    "start": "992800",
    "end": "999519"
  },
  {
    "text": "network bandwidth you may have to evaluate different instance types to provide you enough bandwidth to stay",
    "start": "999519",
    "end": "1006480"
  },
  {
    "text": "replicated so next next kind of area we want to go",
    "start": "1006480",
    "end": "1013120"
  },
  {
    "start": "1012000",
    "end": "1163000"
  },
  {
    "text": "through is some some production designs how how would you implement",
    "start": "1013120",
    "end": "1018320"
  },
  {
    "text": "um you know storage and instance configuration for ec2 we found with customers that",
    "start": "1018320",
    "end": "1025520"
  },
  {
    "text": "the barring the use of sort of third-party sharding or data replication or data",
    "start": "1025520",
    "end": "1032160"
  },
  {
    "text": "distribution technologies that that you are driven in many cases to",
    "start": "1032160",
    "end": "1038000"
  },
  {
    "text": "increase the number and the sort of resources associated with the master node",
    "start": "1038000",
    "end": "1043520"
  },
  {
    "text": "and to scale up slave nodes in tandem to deliver the amount of write and read",
    "start": "1043520",
    "end": "1050480"
  },
  {
    "text": "capacity that the whole database system requires the replication technologies that are",
    "start": "1050480",
    "end": "1056320"
  },
  {
    "text": "available increase availability and allow read scalability but don't offer the kind of you know a",
    "start": "1056320",
    "end": "1063280"
  },
  {
    "text": "multi-master right scalability that some other infrastructure database types do so you do end up",
    "start": "1063280",
    "end": "1072480"
  },
  {
    "text": "driven to a design where you will end up vertically scaling that master node and typically it's best",
    "start": "1072480",
    "end": "1079520"
  },
  {
    "text": "practice to have the secondary nodes be the same size as the master provides all sorts of benefits in terms",
    "start": "1079520",
    "end": "1085200"
  },
  {
    "text": "of them having the same amount of network bandwidth and then having comparable memory footprints",
    "start": "1085200",
    "end": "1091520"
  },
  {
    "text": "that vertical scaling today on aws is possible all the way up to that cr1",
    "start": "1091520",
    "end": "1097440"
  },
  {
    "text": "8x large size so that's 16 cores hyper threaded and 244 gigs of",
    "start": "1097440",
    "end": "1102880"
  },
  {
    "text": "memory on 10 gigabit full by session zero over subscription non-blocking",
    "start": "1102880",
    "end": "1108400"
  },
  {
    "text": "network so that represents a pretty massive database machine",
    "start": "1108400",
    "end": "1113840"
  },
  {
    "text": "um we we are certainly seeing customers deploy postgres at that scale but they do so um so far with pretty",
    "start": "1113840",
    "end": "1120880"
  },
  {
    "text": "significant headroom we also recommend as you're looking through different instances and we'll show some mechanisms for this",
    "start": "1120880",
    "end": "1127520"
  },
  {
    "text": "uh tuning the postgres engine to accommodate the actual cpu and memory resources that",
    "start": "1127520",
    "end": "1133919"
  },
  {
    "text": "each ec2 instance makes available um and and absolutely looking at",
    "start": "1133919",
    "end": "1140240"
  },
  {
    "text": "either third-party technologies or your own logical subdivision across database engines to create the",
    "start": "1140240",
    "end": "1146400"
  },
  {
    "text": "kinds of right scalability that you might need replication does a lot to support read scalability",
    "start": "1146400",
    "end": "1153280"
  },
  {
    "text": "in particular for uh heterogeneous read loads like the difference between your production application",
    "start": "1153280",
    "end": "1158720"
  },
  {
    "text": "and your reporting system so things not to do uh things that",
    "start": "1158720",
    "end": "1166000"
  },
  {
    "start": "1163000",
    "end": "1313000"
  },
  {
    "text": "sort of double check against one we certainly see customers that put everything and the kitchen sync and",
    "start": "1166000",
    "end": "1173039"
  },
  {
    "text": "every picture they've ever taken and all kinds of data that probably doesn't have",
    "start": "1173039",
    "end": "1178799"
  },
  {
    "text": "a particularly important reason to be stored inside of what's effectively the most expensive",
    "start": "1178799",
    "end": "1184240"
  },
  {
    "text": "kind of storage system a relational database and so we'd definitely recommend as you're looking through your applications",
    "start": "1184240",
    "end": "1190720"
  },
  {
    "text": "environment places where it puts pictures in the database that's a real low hanging fruit you've got to figure out a way to pull",
    "start": "1190720",
    "end": "1196880"
  },
  {
    "text": "the pictures out of there um you know you may not need to do everything that you're doing with a",
    "start": "1196880",
    "end": "1202320"
  },
  {
    "text": "database in a database and that can have a really significant cost impact around the usage of",
    "start": "1202320",
    "end": "1209360"
  },
  {
    "text": "something like that we also want folks to recognize the you know as you look at vertical scaling",
    "start": "1209360",
    "end": "1216720"
  },
  {
    "text": "in comparison with horizontal scaling there are structural benefits to a horizontally scaled mode where",
    "start": "1216720",
    "end": "1223600"
  },
  {
    "text": "by being distributed across additional instances you move from sort of single points of failure to",
    "start": "1223600",
    "end": "1230080"
  },
  {
    "text": "having you know the opportunity for redundant multi-point systems",
    "start": "1230080",
    "end": "1235440"
  },
  {
    "text": "and so it's important to capture also the ability that that delivers to",
    "start": "1235440",
    "end": "1240559"
  },
  {
    "text": "scale in more in smaller units so if you're able to shard and distribute across multiple",
    "start": "1240559",
    "end": "1247120"
  },
  {
    "text": "database masters you can build those out of you know relatively smaller instances",
    "start": "1247120",
    "end": "1253360"
  },
  {
    "text": "and as a result grow by small instance values rather than adding the next bigger instance size which is",
    "start": "1253360",
    "end": "1259360"
  },
  {
    "text": "usually twice as expensive so another part of this is we definitely have customers that",
    "start": "1259360",
    "end": "1265039"
  },
  {
    "text": "that are eager to you know follow what they think of as the kind of animal amazon way where they kind of auto scale",
    "start": "1265039",
    "end": "1271039"
  },
  {
    "text": "to the size that they think they're going to need and they haven't done a lot of research",
    "start": "1271039",
    "end": "1276080"
  },
  {
    "text": "around the sort of scale that they uh they expect to deliver on top of aws that's okay",
    "start": "1276080",
    "end": "1281120"
  },
  {
    "text": "and certainly we're a great place to experiment and learn um but if you know for a fox that you're",
    "start": "1281120",
    "end": "1286640"
  },
  {
    "text": "going to need a big system there's no no real reason to sort of scale up step by step you should",
    "start": "1286640",
    "end": "1292640"
  },
  {
    "text": "build a system that's designed to accommodate the performance and the workload that you have and and",
    "start": "1292640",
    "end": "1297760"
  },
  {
    "text": "deliver that to at full size right at the get-go there are operational costs to sort of slowly",
    "start": "1297760",
    "end": "1303840"
  },
  {
    "text": "stepping up and maxing out the database and then resizing it to the next size up",
    "start": "1303840",
    "end": "1310080"
  },
  {
    "text": "so from a minimum scale we really recommend and this is this is",
    "start": "1310880",
    "end": "1317039"
  },
  {
    "start": "1313000",
    "end": "1378000"
  },
  {
    "text": "something that we can say you know pretty clearly across all conceivable use cases pbs adds very tangible value",
    "start": "1317039",
    "end": "1324960"
  },
  {
    "text": "very significant performance advantages over standard ephemeral disk um you know",
    "start": "1324960",
    "end": "1331440"
  },
  {
    "text": "always use elastic block storage of one type or another in the presence of your databases",
    "start": "1331440",
    "end": "1336880"
  },
  {
    "text": "um standard ebs provides really significant right cache and so especially for very small",
    "start": "1336880",
    "end": "1343039"
  },
  {
    "text": "databases is kind of bigger than its britches uh capable of you know swinging for the",
    "start": "1343039",
    "end": "1349360"
  },
  {
    "text": "fences every once in a while now the flip side of that is that for production you know macro scale",
    "start": "1349360",
    "end": "1354799"
  },
  {
    "text": "databases uh provision buyouts offers much more consistent i o delivery",
    "start": "1354799",
    "end": "1360400"
  },
  {
    "text": "and as a result it's something that you can you know provide random i o performance at scale",
    "start": "1360400",
    "end": "1367039"
  },
  {
    "text": "that that's something that you can you know measure against and rely on and make sure is you know very very consistent over time",
    "start": "1367039",
    "end": "1374480"
  },
  {
    "text": "so as you scale upwards um you know from say you know even medium or small",
    "start": "1374480",
    "end": "1381280"
  },
  {
    "text": "instances running postgres you start to move on to um you know our larger instance classes",
    "start": "1381280",
    "end": "1386480"
  },
  {
    "text": "we see the majority of section databases today are running",
    "start": "1386480",
    "end": "1391600"
  },
  {
    "text": "somewhere in the extra-large class the m1x large maybe they're stretching",
    "start": "1391600",
    "end": "1397200"
  },
  {
    "text": "on an m1 large but certainly you know m24 xl mp2 xl is",
    "start": "1397200",
    "end": "1402240"
  },
  {
    "text": "very popular database machine as you move into those types you're able to use",
    "start": "1402240",
    "end": "1408000"
  },
  {
    "text": "ebs optimized as a flag which provides dedicated bandwidth to the ebs subsystem",
    "start": "1408000",
    "end": "1415600"
  },
  {
    "text": "and supports the consistency design of provisioned ios so we really strongly",
    "start": "1415600",
    "end": "1421840"
  },
  {
    "text": "recommend as you move up to this scale you know if you're into m1 larges or m1 xl's or mt2 xls or 4xl",
    "start": "1421840",
    "end": "1429600"
  },
  {
    "text": "it makes a lot of sense to move on to provision diops as well because you you likely will be bound by",
    "start": "1429600",
    "end": "1436640"
  },
  {
    "text": "disk performance relatively early at those scales so with with",
    "start": "1436640",
    "end": "1443200"
  },
  {
    "text": "for example an m1 extra large assuming the default value from postgres as 8k",
    "start": "1443200",
    "end": "1450159"
  },
  {
    "text": "block operations against disk and given that you can deliver ebs volumes at up to 4 iops",
    "start": "1450159",
    "end": "1458480"
  },
  {
    "text": "you can attach four volumes in raid 0 to an ec2 instance",
    "start": "1458480",
    "end": "1464720"
  },
  {
    "text": "and and be right at the sort of maximum throughput almost a gigabit a second to and from",
    "start": "1464720",
    "end": "1471600"
  },
  {
    "text": "storage um that works out to 16 000 iops at 8k",
    "start": "1471600",
    "end": "1477039"
  },
  {
    "text": "um and delivers you know frankly a very very high performance database from a structured storage",
    "start": "1477039",
    "end": "1482960"
  },
  {
    "text": "storage standpoint uh one that would be easily 16 times as fast as was possible",
    "start": "1482960",
    "end": "1489440"
  },
  {
    "text": "on aws um just you know two and a half years ago so that kind of design moving to multiple",
    "start": "1489440",
    "end": "1496640"
  },
  {
    "text": "eps volumes does mean that you need to use either md adm or ldm raid",
    "start": "1496640",
    "end": "1502320"
  },
  {
    "text": "we have we have some folks that implement logical volumes above the md adm that works fine as well",
    "start": "1502320",
    "end": "1509279"
  },
  {
    "text": "there aren't very significant performance impacts there and it's important that you use uh",
    "start": "1509279",
    "end": "1514640"
  },
  {
    "text": "correct settings around block size alignment um you know for your application inside of",
    "start": "1514640",
    "end": "1521039"
  },
  {
    "text": "md adm to ensure that the file system and the raid controller all line up with",
    "start": "1521039",
    "end": "1527520"
  },
  {
    "text": "the provision file storage anything to add there jay",
    "start": "1527520",
    "end": "1533279"
  },
  {
    "text": "not really uh one of the things i do want to step back to",
    "start": "1533679",
    "end": "1538799"
  },
  {
    "start": "1535000",
    "end": "1727000"
  },
  {
    "text": "when miles was talking about the fact that databases have an associated cost",
    "start": "1538799",
    "end": "1546240"
  },
  {
    "text": "right they really are the most expensive form of storage for your data that's not just at a hardware level",
    "start": "1546240",
    "end": "1554159"
  },
  {
    "text": "right databases require specialized operational expertise",
    "start": "1554159",
    "end": "1560240"
  },
  {
    "text": "that's a little harder to find than than some other things so i think i i love databases right it's",
    "start": "1560240",
    "end": "1566400"
  },
  {
    "text": "what i do professionally but think carefully before you start shoving everything in the database because it's",
    "start": "1566400",
    "end": "1571679"
  },
  {
    "text": "easy yep yep good call so",
    "start": "1571679",
    "end": "1577520"
  },
  {
    "text": "we we definitely have customers that for whom the you know the sort of m1x large size or",
    "start": "1577520",
    "end": "1583039"
  },
  {
    "text": "the m24xl size does not cut it they need higher performance than that and greater throughput",
    "start": "1583039",
    "end": "1589120"
  },
  {
    "text": "and and there's some confusion as to you know how much additional performance the larger",
    "start": "1589120",
    "end": "1595279"
  },
  {
    "text": "cluster compute instance types provide first off is they are connected by",
    "start": "1595279",
    "end": "1603039"
  },
  {
    "text": "you know an absolutely amazing network system and that network system allows them",
    "start": "1603039",
    "end": "1609360"
  },
  {
    "text": "very very very rapid and very low latency communication instance to instance so in particular if",
    "start": "1609360",
    "end": "1616720"
  },
  {
    "text": "there is network lag that's driving replication delay the cluster compute instance types are",
    "start": "1616720",
    "end": "1623279"
  },
  {
    "text": "easily an order of magnitude lower latency between nodes particularly in placement groups",
    "start": "1623279",
    "end": "1630080"
  },
  {
    "text": "where you're talking about um you know targeting at the you know 70 70 microseconds",
    "start": "1630080",
    "end": "1639279"
  },
  {
    "text": "latency rather than measurements in the millisecond range so in addition to that they do have",
    "start": "1639279",
    "end": "1645039"
  },
  {
    "text": "higher throughput to storage so you can roughly double the design that you would implement on an m24xl or",
    "start": "1645039",
    "end": "1653279"
  },
  {
    "text": "an m1 extra large on cc2 by going to eight uh provision diops uh 4 000 iops volumes",
    "start": "1653279",
    "end": "1661679"
  },
  {
    "text": "that gets you to 32 000 ions to storage which is uh which is really competitive if not um",
    "start": "1661679",
    "end": "1669840"
  },
  {
    "text": "you know from a consistency and durability standpoint faster than the current uh ssd hosts in the",
    "start": "1669840",
    "end": "1677520"
  },
  {
    "text": "high one four excel it's certainly faster than the storage um the somewhat smaller ssd storage on",
    "start": "1677520",
    "end": "1683600"
  },
  {
    "text": "the cr1 8x large instances so this represents the fastest write mode",
    "start": "1683600",
    "end": "1690640"
  },
  {
    "text": "for postgres available on ec2 now where it doesn't beat the ssd hosts",
    "start": "1690640",
    "end": "1696480"
  },
  {
    "text": "is on the read side read scalability from those hosts is incredible they're able to deliver in excess of 100 000",
    "start": "1696480",
    "end": "1702799"
  },
  {
    "text": "random i o reads a second and so you may end up in patterns where you're",
    "start": "1702799",
    "end": "1708080"
  },
  {
    "text": "combining those two services so i certainly also want to make sure as",
    "start": "1708080",
    "end": "1713200"
  },
  {
    "text": "a raid configuration tip that you're setting the effective i o concurrency",
    "start": "1713200",
    "end": "1718399"
  },
  {
    "text": "equal to the number of stripes in your raid set in this case eight so a little typo on",
    "start": "1718399",
    "end": "1725279"
  },
  {
    "text": "the next screen here but as a model there's no reason that you can't combine",
    "start": "1725279",
    "end": "1731360"
  },
  {
    "text": "somewhat heterogeneous flukes here the cc28x large has the same amount of memory as the",
    "start": "1731360",
    "end": "1739120"
  },
  {
    "text": "high one for xlr both have 60 gigs of memory and so uh the the high one forex large can be",
    "start": "1739120",
    "end": "1746880"
  },
  {
    "text": "really spectacular read secondaries attached to a cc2 cc2axl master this pattern",
    "start": "1746880",
    "end": "1754640"
  },
  {
    "text": "delivers the highest read throughput of a multi-node system on ec2",
    "start": "1754640",
    "end": "1761279"
  },
  {
    "text": "today there isn't there isn't any kind of specific advantage",
    "start": "1761279",
    "end": "1766320"
  },
  {
    "text": "to going to the cr-1 8xl unless your entire data center the vast",
    "start": "1766320",
    "end": "1771600"
  },
  {
    "text": "majority of data set could fit in memory at the 244 gig size at which point you're not bounded by",
    "start": "1771600",
    "end": "1776960"
  },
  {
    "text": "storage at all and you can just tear away it reads but at larger data set size",
    "start": "1776960",
    "end": "1783360"
  },
  {
    "text": "up into the two terabyte range that's where the high one for xls will be the most",
    "start": "1783360",
    "end": "1788480"
  },
  {
    "text": "efficient of the choices you also want to make sure that",
    "start": "1788480",
    "end": "1793760"
  },
  {
    "text": "that there are certain integrity features like sync and full page writes um on ssd hosts that are kind of",
    "start": "1793760",
    "end": "1799840"
  },
  {
    "text": "irrelevant because they're um they're ephemeral hosts anyway if you have a problem with one of those",
    "start": "1799840",
    "end": "1805440"
  },
  {
    "text": "instances you just get rid of it and create a new replica this is joe",
    "start": "1805440",
    "end": "1810880"
  },
  {
    "text": "yeah i want to reiterate what miles is saying this really this combination of hosts really",
    "start": "1810880",
    "end": "1817919"
  },
  {
    "text": "is kind of the the top end performance you can get out of aws",
    "start": "1817919",
    "end": "1823919"
  },
  {
    "text": "i also want to tie something in from an earlier slide there's a little bit of mention",
    "start": "1823919",
    "end": "1829039"
  },
  {
    "text": "with you know temporary tables and ssd storage and creating your tables as an",
    "start": "1829039",
    "end": "1835039"
  },
  {
    "text": "unlog type but that unlocked means is that right to that table don't go to",
    "start": "1835039",
    "end": "1842720"
  },
  {
    "text": "the wall now the downside to this is that if your if your",
    "start": "1842720",
    "end": "1847919"
  },
  {
    "text": "database crashes the tables get truncated but since we're talking about disposable ssd",
    "start": "1847919",
    "end": "1854080"
  },
  {
    "text": "instances that's another thing you can do is to alter the",
    "start": "1854080",
    "end": "1859120"
  },
  {
    "text": "those tables to be unlogged with a little bit of work but it drastically improves performance",
    "start": "1859120",
    "end": "1866720"
  },
  {
    "text": "so in combination with turning off the sync and the full page rights you can eke out just the absolute",
    "start": "1866720",
    "end": "1873120"
  },
  {
    "text": "fastest reads and writes off of those uh ssd replicas",
    "start": "1873120",
    "end": "1878799"
  },
  {
    "text": "awesome so uh don't take us at our word we are saying",
    "start": "1878799",
    "end": "1884960"
  },
  {
    "start": "1883000",
    "end": "1929000"
  },
  {
    "text": "it's fast but you know we're just a couple of nerds here um it may make sense that you do your own",
    "start": "1884960",
    "end": "1890880"
  },
  {
    "text": "tests we don't have you know any problem with you spinning these machines up and kicking them hard",
    "start": "1890880",
    "end": "1896960"
  },
  {
    "text": "and making sure that they deliver the performance that you'd expect you can certainly do",
    "start": "1896960",
    "end": "1902240"
  },
  {
    "text": "sort of direct sequential test examples but um but typically we're seeing you know sort",
    "start": "1902240",
    "end": "1908240"
  },
  {
    "text": "of sysbench or fio or you know other kinds of",
    "start": "1908240",
    "end": "1913919"
  },
  {
    "text": "test disk systems or disk oriented test systems ios and others as reasonable approaches",
    "start": "1913919",
    "end": "1920880"
  },
  {
    "text": "we have a couple different models for that we also are seeing a lot of customers wanting to do this",
    "start": "1920880",
    "end": "1926320"
  },
  {
    "text": "native inside of the database engine so you can use pg bench",
    "start": "1926320",
    "end": "1933039"
  },
  {
    "start": "1929000",
    "end": "1994000"
  },
  {
    "text": "to build a postgres database for testing you can do multi-client tests",
    "start": "1933039",
    "end": "1938720"
  },
  {
    "text": "high transaction count tests all of the kinds of benchmarking that you would normally do",
    "start": "1938720",
    "end": "1944960"
  },
  {
    "text": "on a physical server there's no reason you can't do that on aws the nice bit is that if you don't",
    "start": "1944960",
    "end": "1950720"
  },
  {
    "text": "like the computer that you just benchmarked you can turn it off and pick a different one or configurate",
    "start": "1950720",
    "end": "1955760"
  },
  {
    "text": "differently or run a bash of tests against you know 20 different machines configured differently to figure out",
    "start": "1955760",
    "end": "1961919"
  },
  {
    "text": "which one is optimal given the settings that best reflect your workload",
    "start": "1961919",
    "end": "1967360"
  },
  {
    "text": "um so you also want to make sure that you know as you as you follow these",
    "start": "1967360",
    "end": "1973519"
  },
  {
    "text": "designs there are lots of different you know implementations against the the",
    "start": "1973519",
    "end": "1979120"
  },
  {
    "text": "the database configuration systems you want to make sure that it's configured in the way that you intend to use it like for example",
    "start": "1979120",
    "end": "1984240"
  },
  {
    "text": "if you are going to use pg pool you want to test against that against instead of you know testing against tv",
    "start": "1984240",
    "end": "1991039"
  },
  {
    "text": "you we also want to make sure that as people are designing these systems that",
    "start": "1991039",
    "end": "1996799"
  },
  {
    "start": "1994000",
    "end": "2148000"
  },
  {
    "text": "that they're planning not only for high availability by way of distribution across multiple nodes but",
    "start": "1996799",
    "end": "2002080"
  },
  {
    "text": "also for disaster recovery you know we don't we hope that nothing ever happens but it's very important for",
    "start": "2002080",
    "end": "2008480"
  },
  {
    "text": "business continuity to have a reasonable backup so uh ec2 provides this very powerful capacity",
    "start": "2008480",
    "end": "2015120"
  },
  {
    "text": "that's a part of the evs design called an evs snapshot where we duplicate",
    "start": "2015120",
    "end": "2020559"
  },
  {
    "text": "content to f3 that that duplication happens as a background process",
    "start": "2020559",
    "end": "2025760"
  },
  {
    "text": "once it started it just sort of tears off and copies that data into f3",
    "start": "2025760",
    "end": "2031440"
  },
  {
    "text": "there is a performance impact associated with performing snapshots and so it's",
    "start": "2031440",
    "end": "2036720"
  },
  {
    "text": "important to try a snapshot on a given database to view what that looks like",
    "start": "2036720",
    "end": "2043519"
  },
  {
    "text": "given your actual workload and how heavily you're loading the storage performance on a given",
    "start": "2043519",
    "end": "2049599"
  },
  {
    "text": "disk subsystem don't do not underestimate that that is a real impact and that it's something that you",
    "start": "2049599",
    "end": "2055118"
  },
  {
    "text": "should test and measure it's definitely there and and as as a result of that it may",
    "start": "2055119",
    "end": "2060560"
  },
  {
    "text": "make sense if you are right up near the maximum capacity for your systems",
    "start": "2060560",
    "end": "2065839"
  },
  {
    "text": "that you use a replica create a new you know streaming replication uh you know or uh you know a delayed",
    "start": "2065839",
    "end": "2072560"
  },
  {
    "text": "replica of the of the database and then and then snapshot from that",
    "start": "2072560",
    "end": "2077679"
  },
  {
    "text": "so that you don't have an impact on the production master i would personally speaking from my",
    "start": "2077679",
    "end": "2084878"
  },
  {
    "text": "experience i would always take a snapshot from a replica",
    "start": "2084879",
    "end": "2090079"
  },
  {
    "text": "i mean if if you've got a production box that isn't doing production stuff sure but most of the time you",
    "start": "2090079",
    "end": "2096960"
  },
  {
    "text": "people do care about performance so in general just just to be safe because",
    "start": "2096960",
    "end": "2102800"
  },
  {
    "text": "i'm kind of conservative database guy i always like to take my snapshots from rockwook house",
    "start": "2102800",
    "end": "2109200"
  },
  {
    "text": "yeah yep i i get that for sure i i guess i'm thinking there are definitely customers that are down at the",
    "start": "2109200",
    "end": "2115599"
  },
  {
    "text": "you know my my my postgres system is an m1 medium with a single ebs volume",
    "start": "2115599",
    "end": "2121040"
  },
  {
    "text": "attached and and you don't have any replication set up that what i want to make sure is that it is entirely possible",
    "start": "2121040",
    "end": "2127119"
  },
  {
    "text": "to take a snapshot of your production system but but jay is absolutely right in any",
    "start": "2127119",
    "end": "2133440"
  },
  {
    "text": "kind of scaled multi-node you know full-size web facing production system it's very very",
    "start": "2133440",
    "end": "2140480"
  },
  {
    "text": "very much the best practice to snap from a replica so and then to restore not very much fun",
    "start": "2140480",
    "end": "2148720"
  },
  {
    "start": "2148000",
    "end": "2351000"
  },
  {
    "text": "to make a backup if you can't get it back um you know you can use our api or cli",
    "start": "2148720",
    "end": "2154960"
  },
  {
    "text": "command to evaluate which snapshots are where um operationally in practice it can get",
    "start": "2154960",
    "end": "2161839"
  },
  {
    "text": "really complicated to tell which ones which if you're not really consistent with",
    "start": "2161839",
    "end": "2166960"
  },
  {
    "text": "naming and tagging so strongly recommend that you kind of keep your own index of",
    "start": "2166960",
    "end": "2172400"
  },
  {
    "text": "you know you made a snapshot at this time of these databases and those ids were these ids",
    "start": "2172400",
    "end": "2178640"
  },
  {
    "text": "that way you're able to recreate from snapshot that that database system quickly",
    "start": "2178640",
    "end": "2186000"
  },
  {
    "text": "you can also if you want to be more comprehensive about it if you are using a replica if you can",
    "start": "2186000",
    "end": "2192640"
  },
  {
    "text": "detach you know the replica from the rest of this system kind of turn off replication then you can even bundle",
    "start": "2192640",
    "end": "2199280"
  },
  {
    "text": "that whole service as an ami so what that does is captures the operating system state",
    "start": "2199280",
    "end": "2205200"
  },
  {
    "text": "and the root volume state as well as the volumes that are attached into a single",
    "start": "2205200",
    "end": "2210400"
  },
  {
    "text": "id rather than these individual ids for each snapshot the downside of that is that you kind of",
    "start": "2210400",
    "end": "2216320"
  },
  {
    "text": "have to start all of that at once one of the advantages of an ebs snapshot is you'd be able to just",
    "start": "2216320",
    "end": "2221520"
  },
  {
    "text": "start the ebs volume and you know and attach that independently maybe for",
    "start": "2221520",
    "end": "2226800"
  },
  {
    "text": "forensics or or some other kind of function uh it's it's really important to have uh in particular when you're",
    "start": "2226800",
    "end": "2234320"
  },
  {
    "text": "talking about ebs volumes where they are connected by raid to",
    "start": "2234320",
    "end": "2239760"
  },
  {
    "text": "create a consistent snapshot if you start one snap at one time on one volume",
    "start": "2239760",
    "end": "2244880"
  },
  {
    "text": "and then wait a little bit and then start the snap on another one which is what you would do if you were doing it through the user interface by",
    "start": "2244880",
    "end": "2250480"
  },
  {
    "text": "hand it would be very difficult to get the two disks into a consistent state",
    "start": "2250480",
    "end": "2255760"
  },
  {
    "text": "so it's important that you're you know either at the final system level uh creating uh you know file system free",
    "start": "2255760",
    "end": "2262320"
  },
  {
    "text": "like you can do an xfs or uh or ext4 or or otherwise suspending rights to",
    "start": "2262320",
    "end": "2269280"
  },
  {
    "text": "storage to ensure that you're able to you're able to take a snapshot where",
    "start": "2269280",
    "end": "2275359"
  },
  {
    "text": "both sides are consistent the folks from elistic that's a-l-e-s-t-i-c",
    "start": "2275359",
    "end": "2280960"
  },
  {
    "text": "those are engineers from ubuntu they have a set of scripts called",
    "start": "2280960",
    "end": "2286079"
  },
  {
    "text": "eds consistent snapshot that make it easy to take that kind of multi-disc uh",
    "start": "2286079",
    "end": "2292560"
  },
  {
    "text": "snapshot winner raid stand above them any other notes on that bit there",
    "start": "2292560",
    "end": "2300559"
  },
  {
    "text": "not really um i think you've covered all the high points um the one thing is",
    "start": "2301599",
    "end": "2309599"
  },
  {
    "text": "you can tell postgres that taking a backup of it we saw that a few slides ago",
    "start": "2309599",
    "end": "2315599"
  },
  {
    "text": "and that's important to do let it know let's let the database know you're going to take a backup it's going to quiet",
    "start": "2315599",
    "end": "2321040"
  },
  {
    "text": "things it's going to make the database internally consistent for you to take the backup",
    "start": "2321040",
    "end": "2327680"
  },
  {
    "text": "yeah yeah that's a that's a good recommendation back make the database consistent and then",
    "start": "2327680",
    "end": "2333200"
  },
  {
    "text": "make the disks consistent let me go even further make the database consistent then make the file system",
    "start": "2333200",
    "end": "2338800"
  },
  {
    "text": "consistent then make the disk consistent and then stick them in storage that's indestructible so",
    "start": "2338800",
    "end": "2343839"
  },
  {
    "text": "that's a that's a great uh sort of steer step to walk yourself through uh another spot is there's definitely",
    "start": "2343839",
    "end": "2350000"
  },
  {
    "text": "places where you can adjust you know both of the settings for",
    "start": "2350000",
    "end": "2355440"
  },
  {
    "start": "2351000",
    "end": "2463000"
  },
  {
    "text": "the you know current and uh you know and the sort of basic memory management settings of your",
    "start": "2355440",
    "end": "2361359"
  },
  {
    "text": "instance as well as the file system to ensure that they're set in a way that",
    "start": "2361359",
    "end": "2366839"
  },
  {
    "text": "delivers the maximum performance i mean in particular um you know the the making sure that",
    "start": "2366839",
    "end": "2374880"
  },
  {
    "text": "shm max and shmall have uh very very very small values to start",
    "start": "2374880",
    "end": "2380720"
  },
  {
    "text": "out so you probably want to raise those values um you know you also need to make sure",
    "start": "2380720",
    "end": "2385839"
  },
  {
    "text": "that you know vm swappiness is uh is is that low so that you don't have you know just",
    "start": "2385839",
    "end": "2392079"
  },
  {
    "text": "sort of this incredible amount of of swapping to disk one of the one of the other practices there is",
    "start": "2392079",
    "end": "2398720"
  },
  {
    "text": "you may want to use uh on instances that have local ephemeral storage like we were talking earlier about",
    "start": "2398720",
    "end": "2405119"
  },
  {
    "text": "m2 4xls or m1 x larges put the swap for the operating system",
    "start": "2405119",
    "end": "2410720"
  },
  {
    "text": "somewhere else than that root volume put it on the ephemeral disk there's no cost to using that storage",
    "start": "2410720",
    "end": "2418319"
  },
  {
    "text": "it's ephemeral it may die it could fail at some point but the the performance benefit of moving that",
    "start": "2418319",
    "end": "2426000"
  },
  {
    "text": "kind of swap activity off of particularly definitely off of the provision bios volumes that",
    "start": "2426000",
    "end": "2432560"
  },
  {
    "text": "you're using for your database where now your swap is contending with disk performance for database that's a real bad thing",
    "start": "2432560",
    "end": "2439520"
  },
  {
    "text": "um also want to make sure that your you know file system is tuned well you know no barrier no a time no duration",
    "start": "2439520",
    "end": "2446319"
  },
  {
    "text": "no exact turn off a bunch of these functions that don't add value to the database system because that's",
    "start": "2446319",
    "end": "2452880"
  },
  {
    "text": "what you're using the disk for um and that that makes things run a little quicker another",
    "start": "2452880",
    "end": "2461280"
  },
  {
    "text": "whole area is kind of wall optimization wall tuning uh you know",
    "start": "2461280",
    "end": "2468079"
  },
  {
    "start": "2463000",
    "end": "2616000"
  },
  {
    "text": "jay is this one you want to go through yeah in fact i was actually going to start talking about some of this stuff but",
    "start": "2468079",
    "end": "2473760"
  },
  {
    "text": "you've got this slide okay so the wall is the right headlog it is basically the",
    "start": "2473760",
    "end": "2479599"
  },
  {
    "text": "databases journal file we strongly recommend xfs",
    "start": "2479599",
    "end": "2487119"
  },
  {
    "text": "if you absolutely had to for some reason i suppose you could use the xp3",
    "start": "2487119",
    "end": "2493280"
  },
  {
    "text": "do not use ext4 uh it's the same reason we don't recommend that people run my",
    "start": "2493280",
    "end": "2498560"
  },
  {
    "text": "sequel on ext4 when you're doing",
    "start": "2498560",
    "end": "2503839"
  },
  {
    "text": "for direct there's there are some thread contention issues that can cause",
    "start": "2503839",
    "end": "2510240"
  },
  {
    "text": "f syncs to kind of hang out for a while on ext4 there is very recently a new uh",
    "start": "2510240",
    "end": "2517920"
  },
  {
    "text": "mounting option unfortunately we haven't tested that yet so i i still can't say use the xt4",
    "start": "2517920",
    "end": "2524160"
  },
  {
    "text": "in general we have a lot of clients we're in a lot of databases xfs everywhere for databases",
    "start": "2524160",
    "end": "2531520"
  },
  {
    "text": "so the checkpoint segments the number of checkpoint segments and that",
    "start": "2531520",
    "end": "2537119"
  },
  {
    "text": "this is analogous to kind of tuning your you know db log file size it's how often are you going to want to",
    "start": "2537119",
    "end": "2545440"
  },
  {
    "text": "checkpoint your data and and and write it and kind of flush it out of the wall",
    "start": "2545440",
    "end": "2551680"
  },
  {
    "text": "and this depends on how how how quickly you modify data on your",
    "start": "2551680",
    "end": "2558480"
  },
  {
    "text": "database so it's one of these things that you start off small and you kind of monitor",
    "start": "2558480",
    "end": "2565119"
  },
  {
    "text": "your log file you can actually grab for hints and it will say hey your checkpoint",
    "start": "2565119",
    "end": "2570640"
  },
  {
    "text": "segments too many you definitely get a bigger number",
    "start": "2570640",
    "end": "2575200"
  },
  {
    "text": "um that last point about exp3 we can skip",
    "start": "2576839",
    "end": "2583520"
  },
  {
    "text": "um and it's the it's the same thing with the file segments",
    "start": "2583520",
    "end": "2588720"
  },
  {
    "text": "a lot of the tuning on postgres depends on how quickly you modify your data",
    "start": "2588720",
    "end": "2597280"
  },
  {
    "text": "so it's you just you need to have a good idea you need to monitor your logs and just",
    "start": "2597280",
    "end": "2604960"
  },
  {
    "text": "kind of kind of look for it it can drastically affect the performance of your rights",
    "start": "2604960",
    "end": "2611280"
  },
  {
    "text": "and memory tuning so this is actually one of the the biggest problems shared buffers",
    "start": "2615760",
    "end": "2622880"
  },
  {
    "start": "2616000",
    "end": "2678000"
  },
  {
    "text": "just for i feel like saying almost everything",
    "start": "2622880",
    "end": "2629119"
  },
  {
    "text": "and it's really difficult to kind of plan out beforehand it's like you know how",
    "start": "2630319",
    "end": "2635359"
  },
  {
    "text": "many connections am i going to have what's the maximum number of connections i'm going to have and just kind of a quick rule of thumb",
    "start": "2635359",
    "end": "2641680"
  },
  {
    "text": "is to start off with 25 of your ram or 25 of the ram that you're going to allocate to the database",
    "start": "2641680",
    "end": "2649760"
  },
  {
    "text": "there is a script it's called pg tune and it's pretty good at making a base set of recommendations based on the",
    "start": "2649760",
    "end": "2656720"
  },
  {
    "text": "hardware that you have available it's definitely better than just kind of throwing the default postgres on there",
    "start": "2656720",
    "end": "2663119"
  },
  {
    "text": "and running with it the default postgres installation is just about only good for running on a",
    "start": "2663119",
    "end": "2669119"
  },
  {
    "text": "developer laptop and not even then very much",
    "start": "2669119",
    "end": "2677838"
  },
  {
    "text": "miles back to you sure so you know that it's one thing to have a",
    "start": "2677920",
    "end": "2683920"
  },
  {
    "start": "2678000",
    "end": "2799000"
  },
  {
    "text": "database and have it go mega fast it's another thing to not have a clear view into consistency",
    "start": "2683920",
    "end": "2690319"
  },
  {
    "text": "of that performance and there's a lot of metrics that are you know critical to evaluating on a",
    "start": "2690319",
    "end": "2696240"
  },
  {
    "text": "regular basis to ensure that the database is performing the way that you want we we've seen uh",
    "start": "2696240",
    "end": "2702720"
  },
  {
    "text": "you know a lot of value from customers using um you know using custom metrics so",
    "start": "2702720",
    "end": "2709440"
  },
  {
    "text": "standard ec2 is connected to a service called cloudwatch cloudwatch allows you to monitor some",
    "start": "2709440",
    "end": "2715680"
  },
  {
    "text": "basic functions from instances like cpu utilization and",
    "start": "2715680",
    "end": "2720800"
  },
  {
    "text": "disk utilization and network in and out but we've published the link below is a set of scripts that",
    "start": "2720800",
    "end": "2727920"
  },
  {
    "text": "make it easy to publish net new metrics into cloudwatch as custom metrics",
    "start": "2727920",
    "end": "2734480"
  },
  {
    "text": "and that that publishing function means that those show up in the same dashboards as",
    "start": "2734480",
    "end": "2740160"
  },
  {
    "text": "the cpu and network and disk utilization measures it's stored and and queryable from there",
    "start": "2740160",
    "end": "2747599"
  },
  {
    "text": "so you can kind of have a centralized place to deliver all that stuff that you don't have to manage from a storage standpoint",
    "start": "2747599",
    "end": "2753760"
  },
  {
    "text": "and these five you know keeping track of connections keeping track of memory usage",
    "start": "2753760",
    "end": "2759119"
  },
  {
    "text": "you know i'd certainly add to this list probably free disk space as something that we're not measuring",
    "start": "2759119",
    "end": "2764880"
  },
  {
    "text": "because that would mean you know a sort of bad thing so it's important that",
    "start": "2764880",
    "end": "2770319"
  },
  {
    "text": "that you're able to take a look at the measures that affect your database there are certainly additional uh you know open source as",
    "start": "2770319",
    "end": "2777599"
  },
  {
    "text": "well as uh you know as well as commercial options for charting and graphing and monitoring and",
    "start": "2777599",
    "end": "2783680"
  },
  {
    "text": "performance analysis inside your database but this is this is one that's that you can take a",
    "start": "2783680",
    "end": "2788960"
  },
  {
    "text": "look at right next to your existing aws monitoring services",
    "start": "2788960",
    "end": "2794000"
  },
  {
    "text": "so uh last kind of area that we're seeing uh you know we want to make sure that",
    "start": "2794000",
    "end": "2799200"
  },
  {
    "start": "2799000",
    "end": "2938000"
  },
  {
    "text": "everybody understands there are really significant security options very important steps that you can take",
    "start": "2799200",
    "end": "2804880"
  },
  {
    "text": "to ensure that the database is well defended from you know from",
    "start": "2804880",
    "end": "2810160"
  },
  {
    "text": "all the sort of different potential attack vectors really recommend you know encryption is",
    "start": "2810160",
    "end": "2816400"
  },
  {
    "text": "available at uh at several different layers the connection layer the row layer",
    "start": "2816400",
    "end": "2821520"
  },
  {
    "text": "and the you know the full file system layer um you know pg crypto is is pretty well",
    "start": "2821520",
    "end": "2827520"
  },
  {
    "text": "understood and and you know and does a good job of creating that kind of in database",
    "start": "2827520",
    "end": "2833440"
  },
  {
    "text": "uh encryption we also provide very robust systems at aws around",
    "start": "2833440",
    "end": "2839440"
  },
  {
    "text": "authentication and network um you know to ensure that you're connecting to uh that database",
    "start": "2839440",
    "end": "2846079"
  },
  {
    "text": "internally between security groups where the routing table is uh you know very explicit and the",
    "start": "2846079",
    "end": "2852160"
  },
  {
    "text": "database is stored in a and hosted inside of a private subnet we",
    "start": "2852160",
    "end": "2857200"
  },
  {
    "text": "also recommend like from management connections and other things using vpn or other encrypted communications to and from the",
    "start": "2857200",
    "end": "2864559"
  },
  {
    "text": "server and i i i if i could put in a bigger font and have it fit on the slide i",
    "start": "2864559",
    "end": "2869680"
  },
  {
    "text": "would please everybody use identity and access management to construct rights limited",
    "start": "2869680",
    "end": "2876160"
  },
  {
    "text": "credentials for yourself for your developers and for your applications to ensure that",
    "start": "2876160",
    "end": "2882079"
  },
  {
    "text": "they access aws apis with the minimum of rights so if your users",
    "start": "2882079",
    "end": "2889280"
  },
  {
    "text": "you know have you know have super tight controls inside of the database to ensure that they can't do anything they",
    "start": "2889280",
    "end": "2894720"
  },
  {
    "text": "aren't authorized to you but they have an unlimited rights user inside of identity and access management",
    "start": "2894720",
    "end": "2900160"
  },
  {
    "text": "or using the even worse the root credentials for your ec2 instance and just turn the database off so really",
    "start": "2900160",
    "end": "2906720"
  },
  {
    "text": "important to provide control at all of the different tiers of your stack and i im also supports",
    "start": "2906720",
    "end": "2914880"
  },
  {
    "text": "multi-factor authentication so you can uh you know require your administrator to use",
    "start": "2914880",
    "end": "2920079"
  },
  {
    "text": "uh either the you know an authenticator from your phone or or a physical authenticator token to",
    "start": "2920079",
    "end": "2925359"
  },
  {
    "text": "ensure that uh at least access to the aws apis is highly secure so uh",
    "start": "2925359",
    "end": "2932960"
  },
  {
    "text": "jay i think you had a couple of extra notes uh specific from the stuff we did together at the",
    "start": "2932960",
    "end": "2938000"
  },
  {
    "start": "2938000",
    "end": "2972000"
  },
  {
    "text": "obamacare america campaign indeed i did so uh",
    "start": "2938000",
    "end": "2944720"
  },
  {
    "text": "at ofa we were expensive users of aws i believe we used every single service",
    "start": "2944720",
    "end": "2952400"
  },
  {
    "text": "that they provide and at some point we had uh reserved",
    "start": "2952400",
    "end": "2959760"
  },
  {
    "text": "very very large amounts of some of the u.s east infrastructure so i'm going to talk not really about",
    "start": "2959760",
    "end": "2965760"
  },
  {
    "text": "technical stuff but some of the",
    "start": "2965760",
    "end": "2971838"
  },
  {
    "start": "2972000",
    "end": "3392000"
  },
  {
    "text": "some of the lessons learned right over over this year's time 18 months time",
    "start": "2972079",
    "end": "2977359"
  },
  {
    "text": "uh the first thing is aws puts out a lot of documentation",
    "start": "2977359",
    "end": "2986800"
  },
  {
    "text": "um it is sometimes difficult to get through there's a lot",
    "start": "2986800",
    "end": "2993040"
  },
  {
    "text": "of it it doesn't seem to be fantastic to search",
    "start": "2993040",
    "end": "2998240"
  },
  {
    "text": "almost every problem i have ever had shows up in the documentation though so",
    "start": "2998240",
    "end": "3005520"
  },
  {
    "text": "it is well worth spending some time to really read through and understand",
    "start": "3005520",
    "end": "3012079"
  },
  {
    "text": "the documentation for the ec2 and eds and any new service that you're",
    "start": "3012079",
    "end": "3018640"
  },
  {
    "text": "going to use spend a little time there's a ton of information there number two always use provision",
    "start": "3018640",
    "end": "3026480"
  },
  {
    "text": "iops and it's not so much about the performance it is about the failure rate i don't",
    "start": "3026480",
    "end": "3034319"
  },
  {
    "text": "i am not privy to any magic numbers but my my anecdotal evidence suggests",
    "start": "3034319",
    "end": "3041920"
  },
  {
    "text": "it's maybe an order of a magnitude better failure rate so any production",
    "start": "3041920",
    "end": "3050000"
  },
  {
    "text": "system where you care about the disk drive even if you don't need all the pi apps",
    "start": "3050000",
    "end": "3055760"
  },
  {
    "text": "just pony it up for the the smallest hundred iops version",
    "start": "3055760",
    "end": "3060800"
  },
  {
    "text": "now obviously for web servers it doesn't matter who cares what they have on their hard drive anyway",
    "start": "3060800",
    "end": "3067359"
  },
  {
    "text": "enterprise support or business class if you're not quite big enough absolutely worth it absolutely worth it",
    "start": "3067359",
    "end": "3075200"
  },
  {
    "text": "i believe the the entry fee for the the top level enterprise support is 15 000 a year a",
    "start": "3075200",
    "end": "3081920"
  },
  {
    "text": "month uh what miles yes fifteen thousand a month if your business relies on aws it's",
    "start": "3081920",
    "end": "3089599"
  },
  {
    "text": "absolutely worth it one hundred percent no no question um",
    "start": "3089599",
    "end": "3094800"
  },
  {
    "text": "and it's hard to look at that and be that's a lot for support they it's it's amazing",
    "start": "3094800",
    "end": "3102319"
  },
  {
    "text": "something that nobody ever talks about that for me i always get very excited",
    "start": "3102319",
    "end": "3108319"
  },
  {
    "text": "about is how easy aws makes inventory management",
    "start": "3108319",
    "end": "3116480"
  },
  {
    "text": "there are a number of times in my career where i have had to rewrite this system that is like",
    "start": "3118160",
    "end": "3124400"
  },
  {
    "text": "keeps track of what what systems i have deployed and what systems are up and what systems are down and it's",
    "start": "3124400",
    "end": "3131760"
  },
  {
    "text": "always very difficult when you're running a large network to keep that that inventory tracking",
    "start": "3131760",
    "end": "3139680"
  },
  {
    "text": "system up to date uh it normally turns up you know you end up having a team of one or two people",
    "start": "3139680",
    "end": "3144800"
  },
  {
    "text": "that basically their whole job is to kind of keep track of servers",
    "start": "3144800",
    "end": "3150720"
  },
  {
    "text": "with aws it's it's the console is always up to date the command line is always up to date",
    "start": "3150720",
    "end": "3157440"
  },
  {
    "text": "you can always run a command and understand oh these are all the servers i have running",
    "start": "3157440",
    "end": "3163440"
  },
  {
    "text": "these are all the servers that are off right now i will tell you though it it's easy to",
    "start": "3163440",
    "end": "3170559"
  },
  {
    "text": "have a server running and not know about it right you're like oh",
    "start": "3170559",
    "end": "3175599"
  },
  {
    "text": "aws we just fire up another server so it does make a lot of sense to kind of take that inventory and cross-check",
    "start": "3175599",
    "end": "3182319"
  },
  {
    "text": "it against what you think you should have running but the actual mechanics of getting the",
    "start": "3182319",
    "end": "3189920"
  },
  {
    "text": "list the accurate list of what's running is really really valuable um",
    "start": "3189920",
    "end": "3197040"
  },
  {
    "text": "if you're paying for aws business or enterprise support you have access to the trusted advisor",
    "start": "3197040",
    "end": "3203599"
  },
  {
    "text": "now uh let's say a year ago maybe a little longer than a year ago",
    "start": "3203599",
    "end": "3209440"
  },
  {
    "text": "the beginning of last year it wasn't very good it didn't tell you a lot of stuff",
    "start": "3209440",
    "end": "3215119"
  },
  {
    "text": "it would be like you have some servers and they're not doing a lot of cpu that we",
    "start": "3215119",
    "end": "3221280"
  },
  {
    "text": "can see it is much much much better now",
    "start": "3221280",
    "end": "3226800"
  },
  {
    "text": "it makes a lot of very smart recommendations it can help you avoid that problem i",
    "start": "3226800",
    "end": "3233359"
  },
  {
    "text": "just talked about where you have servers up that aren't doing anything and you don't know about them",
    "start": "3233359",
    "end": "3239920"
  },
  {
    "text": "so i'm not going to say it's worth paying for enterprise support just to get",
    "start": "3239920",
    "end": "3245599"
  },
  {
    "text": "access to the trusted advisor but if you do have a support contract with aws",
    "start": "3245599",
    "end": "3251359"
  },
  {
    "text": "it's valuable it's a great tool you should look at it the last time i logged in there was a",
    "start": "3251359",
    "end": "3257280"
  },
  {
    "text": "link just on the right hand side of the console so it's very easy to find",
    "start": "3257280",
    "end": "3262640"
  },
  {
    "text": "this is uh this next point about the the product life cycle the",
    "start": "3263680",
    "end": "3270240"
  },
  {
    "text": "it's really just kind of a meta point aws releases a lot of products and in",
    "start": "3270240",
    "end": "3277280"
  },
  {
    "text": "the beginning i i hate to say this some of them are",
    "start": "3277280",
    "end": "3282559"
  },
  {
    "text": "not very good or maybe maybe they they only need like",
    "start": "3282559",
    "end": "3287599"
  },
  {
    "text": "60 of your use case so you you you start something up and",
    "start": "3287599",
    "end": "3293680"
  },
  {
    "text": "you're like this this is pretty good it it covers a lot of the common things",
    "start": "3293680",
    "end": "3298880"
  },
  {
    "text": "that i want to do but it doesn't do this or it doesn't do that you know",
    "start": "3298880",
    "end": "3304480"
  },
  {
    "text": "oh rds multi-region replication oh very fast snapshotting which has gotten",
    "start": "3304480",
    "end": "3312319"
  },
  {
    "text": "with eds which has gotten faster just recently so i want to assure you that every single",
    "start": "3312319",
    "end": "3318480"
  },
  {
    "text": "product i have used which is all of them they all improve at a dramatic rate they get",
    "start": "3318480",
    "end": "3325920"
  },
  {
    "text": "much much much better so even if a product doesn't fit your needs",
    "start": "3325920",
    "end": "3332000"
  },
  {
    "text": "right now you need to keep an eye on it because in six months or eight months or 12 months",
    "start": "3332000",
    "end": "3337920"
  },
  {
    "text": "they're going to add features that the people working at amazon are not idiots and they know where they have",
    "start": "3337920",
    "end": "3345040"
  },
  {
    "text": "gaps in their products so even if something isn't a good fit for you now keep an eye on it",
    "start": "3345040",
    "end": "3351599"
  },
  {
    "text": "and finally and this is something that i i've complained about and they need to work on they have so",
    "start": "3351599",
    "end": "3358559"
  },
  {
    "text": "many products and there are so many feature improvements it's very hard to keep up",
    "start": "3358559",
    "end": "3363680"
  },
  {
    "text": "to date with everything that everything that's coming out and",
    "start": "3363680",
    "end": "3369440"
  },
  {
    "text": "everything that is available so that's actually one of the reasons why it's good to",
    "start": "3369440",
    "end": "3375040"
  },
  {
    "text": "pay for support if you do have that enterprise support and you do have a technical account manager",
    "start": "3375040",
    "end": "3380319"
  },
  {
    "text": "please look a little proactive for you but i mean it's a good problem to have",
    "start": "3380319",
    "end": "3385359"
  },
  {
    "text": "right there's there's so much awesomeness it's hard to keep up with it and that is what i got for you uh jay",
    "start": "3385359",
    "end": "3392960"
  },
  {
    "start": "3392000",
    "end": "3552000"
  },
  {
    "text": "i i really appreciate the kind words we'll try to keep up with the uh uh additional awesomeness so uh",
    "start": "3392960",
    "end": "3400640"
  },
  {
    "text": "we're at the spot in the webinar now where we can dig a little bit at qa before we wrap up um got a question here about uh some",
    "start": "3400640",
    "end": "3408880"
  },
  {
    "text": "of the stuff that we said about cloudwatch um one part was asking like is cloudwatch a complimentary service so",
    "start": "3408880",
    "end": "3415839"
  },
  {
    "text": "cloudwatch is free for the existing basic metrics at a five minute grain",
    "start": "3415839",
    "end": "3422960"
  },
  {
    "text": "we'll charge you a penny per instance per hour to add the detailed grain of one minute",
    "start": "3422960",
    "end": "3428960"
  },
  {
    "text": "view and there's a separate charge for custom metrics at a monthly rate",
    "start": "3428960",
    "end": "3434799"
  },
  {
    "text": "so there's charges to do the stuff that we described here um but uh but there aren't uh aren't",
    "start": "3434799",
    "end": "3440720"
  },
  {
    "text": "charges for the sort of basic cpus and things like that there's another question that came in",
    "start": "3440720",
    "end": "3446079"
  },
  {
    "text": "that that asks pretty bluntly are you saying that ssds are less reliable than regular disks uh",
    "start": "3446079",
    "end": "3452000"
  },
  {
    "text": "so it's no it's not what we're saying amazon has built uh instance types and services",
    "start": "3452000",
    "end": "3459440"
  },
  {
    "text": "where the an ec2 instance has a structure where if the disk is",
    "start": "3459440",
    "end": "3466319"
  },
  {
    "text": "local to the instance then it's ephemeral which means that if you turn the instance off",
    "start": "3466319",
    "end": "3471359"
  },
  {
    "text": "the data on that disk is is destroyed so or is unavailable to you so it's",
    "start": "3471359",
    "end": "3478079"
  },
  {
    "text": "it's certainly less quote reliable than the storage on an evs volume where if you turn off the ec2 instance",
    "start": "3478079",
    "end": "3484640"
  },
  {
    "text": "the data is not deleted and is present in a persistent state that can be moved from server to server",
    "start": "3484640",
    "end": "3490079"
  },
  {
    "text": "so that that structural difference between the two um provides uh you know the kind of",
    "start": "3490079",
    "end": "3496079"
  },
  {
    "text": "patterns where you would end up using ssds in kind of a replicated mode it's not that the physical devices would",
    "start": "3496079",
    "end": "3502559"
  },
  {
    "text": "fail more or less frequently it's that the abstraction we've placed on top of them creates a kind of",
    "start": "3502559",
    "end": "3508400"
  },
  {
    "text": "one is optimized for durability and the other is not we're we have a couple of",
    "start": "3508400",
    "end": "3515119"
  },
  {
    "text": "other questions that have come through are there official aws amis um perhaps for each of the sizes",
    "start": "3515119",
    "end": "3522160"
  },
  {
    "text": "that come with postgres uh pre-installed or pre-configured and we haven't done that yet we've thought",
    "start": "3522160",
    "end": "3527920"
  },
  {
    "text": "about it there are a couple of different machine images out there that do have postgres",
    "start": "3527920",
    "end": "3533440"
  },
  {
    "text": "already installed um but but we're looking uh you we're looking for aside on what it would take",
    "start": "3533440",
    "end": "3538799"
  },
  {
    "text": "to curate up a list like that and we'll keep we'll keep communications with that kind of thing",
    "start": "3538799",
    "end": "3544000"
  },
  {
    "text": "posted publicly uh we are running right out of time to make sure",
    "start": "3544000",
    "end": "3549440"
  },
  {
    "text": "everybody can see this sort of last bit where um we really do encourage anybody that has questions about",
    "start": "3549440",
    "end": "3555359"
  },
  {
    "start": "3552000",
    "end": "3592000"
  },
  {
    "text": "uh about postgres or about evs to contact jafar and we have lots of places where",
    "start": "3555359",
    "end": "3561760"
  },
  {
    "text": "you can get the slides and more information about benchmarking including a really great",
    "start": "3561760",
    "end": "3567599"
  },
  {
    "text": "article that was a coincident release with the four thousand iop provision ios lanes from the palomino db",
    "start": "3567599",
    "end": "3574799"
  },
  {
    "text": "folks thanks everybody for taking the time with us today really appreciate the good questions",
    "start": "3574799",
    "end": "3580400"
  },
  {
    "text": "and hope to talk about more high performance stuff again with you soon thanks jay also for",
    "start": "3580400",
    "end": "3586079"
  },
  {
    "text": "participating really appreciate your help thank you",
    "start": "3586079",
    "end": "3594720"
  }
]