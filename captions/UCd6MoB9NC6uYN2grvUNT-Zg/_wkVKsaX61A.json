[
  {
    "start": "0",
    "end": "99000"
  },
  {
    "text": "hello everybody and welcome to aw summit Berlin 2018 thank you so much for coming",
    "start": "3890",
    "end": "11190"
  },
  {
    "text": "and thank you for logging into twitch big shout out to our audience here first time I'm running a talk on twitch so",
    "start": "11190",
    "end": "18150"
  },
  {
    "text": "very excited here but also thank you for coming in here in person we have thousands of people coming to Berlin to",
    "start": "18150",
    "end": "23160"
  },
  {
    "text": "the LOA summit and I'm very glad to see you here for this session around building your first machine learning",
    "start": "23160",
    "end": "28949"
  },
  {
    "text": "application on Amazon sage maker my name is concerning Gonzalez I'm a principal Solutions Architect with",
    "start": "28949",
    "end": "34769"
  },
  {
    "text": "Amazon Web Services in Munich and I've been super excited when Amazon Sage maker got launched because that was",
    "start": "34769",
    "end": "40710"
  },
  {
    "text": "exactly what I wanted as a developer in order to really dive deep into machine learning and I hope to give you some of",
    "start": "40710",
    "end": "46710"
  },
  {
    "text": "that enthusiasm as we walk through our next couple of slides and of course a live demo so this is what you're",
    "start": "46710",
    "end": "52799"
  },
  {
    "text": "hopefully going to get out of this session we're going to walk through an overview of the machine learning process",
    "start": "52799",
    "end": "58319"
  },
  {
    "text": "so that you get a feel around how does it go from data to machine learning in production I'm gonna give a quick",
    "start": "58319",
    "end": "64408"
  },
  {
    "text": "overview of Amazon sage maker but most of this session is going to be a live demo on sage maker in action so that you",
    "start": "64409",
    "end": "70530"
  },
  {
    "text": "get a feel about how it works as a tool for you we're gonna see some examples of using Jupiter notebooks of using",
    "start": "70530",
    "end": "77820"
  },
  {
    "text": "trumpetear for extracting features and preparing data for your application we're gonna have a very quick run down",
    "start": "77820",
    "end": "84000"
  },
  {
    "text": "through the available algorithms in Amazon sage maker and we're gonna see how you can build and train your own",
    "start": "84000",
    "end": "89580"
  },
  {
    "text": "sage maker models in in this service and of course at the end it's gonna be",
    "start": "89580",
    "end": "95580"
  },
  {
    "text": "plenty of opportunities for you to do a question and answer so let's start with a quick overview here so who is a",
    "start": "95580",
    "end": "102390"
  },
  {
    "start": "99000",
    "end": "162000"
  },
  {
    "text": "developer here that's good you came to the right place so who is the data scientist okay who is a non-technical",
    "start": "102390",
    "end": "110460"
  },
  {
    "text": "person okay there's gonna be something for you as well but as a quick overview Amazon has",
    "start": "110460",
    "end": "118680"
  },
  {
    "text": "been having a very long history of using machine learning from the very first instance of the Amazon homepage that",
    "start": "118680",
    "end": "125040"
  },
  {
    "text": "already offered product recommendations more than 20 years ago to new services",
    "start": "125040",
    "end": "130170"
  },
  {
    "text": "like Amazon go where we have an entirely new shopping experience in the brick motorists or powered by ML we have been",
    "start": "130170",
    "end": "136930"
  },
  {
    "text": "employing machine learning all over the place and our goal at AWS really here is",
    "start": "136930",
    "end": "142370"
  },
  {
    "text": "to help you take advantage of the expertise that we have built up over the time so if you can start developing your",
    "start": "142370",
    "end": "149060"
  },
  {
    "text": "own algorithms or running your own applications based on machine learning as quickly as possible and then",
    "start": "149060",
    "end": "154820"
  },
  {
    "text": "hopefully contribute to the large pool of machine learning applications that all of our customers are building right",
    "start": "154820",
    "end": "160880"
  },
  {
    "text": "now on AWS as a quick overview AWS offers a lot of infrastructure and",
    "start": "160880",
    "end": "166940"
  },
  {
    "text": "frameworks so of course we we do virtual machines and there are some different",
    "start": "166940",
    "end": "173780"
  },
  {
    "text": "letter machine instance types to choose from the p3 instance tab comes with the latest Nvidia GPUs as you may know",
    "start": "173780",
    "end": "180410"
  },
  {
    "text": "machine learning runs really really well on GPUs especially if you're using it for deep learning so we can give you the",
    "start": "180410",
    "end": "187040"
  },
  {
    "text": "latest NVIDIA GPUs to run your machine learning algorithm on top of and we also",
    "start": "187040",
    "end": "192320"
  },
  {
    "text": "support all of the different learning frameworks as part of the AWS deep learning AMI so if you just want to set",
    "start": "192320",
    "end": "199489"
  },
  {
    "text": "up a machine and run a machine learning algorithm run a deep learning algorithm on any of the of the popular frameworks",
    "start": "199489",
    "end": "205070"
  },
  {
    "text": "it's as easy as selecting the Amazon deep learning am i running it on in CC 2",
    "start": "205070",
    "end": "210110"
  },
  {
    "text": "and then you can get started there and one important thing here to note is that at Amazon we're not gonna tell you this",
    "start": "210110",
    "end": "216320"
  },
  {
    "text": "is the one tool to use and go away if you're interested in another tool just",
    "start": "216320",
    "end": "221360"
  },
  {
    "text": "like the Amazon store where you can choose between country/western and gazillions of other music genres of",
    "start": "221360",
    "end": "228980"
  },
  {
    "text": "course we support you with whatever framework you you prefer right now frameworks like tens of flow MX net PI",
    "start": "228980",
    "end": "235760"
  },
  {
    "text": "torch and CNT K and the others you see here among the most popular but if you're missing your favorite framework",
    "start": "235760",
    "end": "241820"
  },
  {
    "text": "here feel free to come to us and tell us about your favorite favorite framework where we can find it and then we'll",
    "start": "241820",
    "end": "247730"
  },
  {
    "text": "figure out a way to support you using even the most exotic or the most new framework on AWS later on we also offer",
    "start": "247730",
    "end": "255680"
  },
  {
    "start": "254000",
    "end": "303000"
  },
  {
    "text": "some platform services that kind of abstract away some of the complexity of running machine learning in product",
    "start": "255680",
    "end": "261389"
  },
  {
    "text": "and this is what Sage Maker is all about so Amazon Sage Maker is a complete end-to-end machine learning platform",
    "start": "261389",
    "end": "267150"
  },
  {
    "text": "that offers everything from the developer workbench to the training process to the deployment process at",
    "start": "267150",
    "end": "273270"
  },
  {
    "text": "scale and it also supports all of the popular frameworks here and you only pay",
    "start": "273270",
    "end": "278370"
  },
  {
    "text": "by the second which is very important because machine learning can involve a lot of hardware it can involve a lot of",
    "start": "278370",
    "end": "284340"
  },
  {
    "text": "GPUs and if you were to buy and operate and run them on premises it could",
    "start": "284340",
    "end": "289770"
  },
  {
    "text": "quickly become very expensive with Amazon sage maker and the automation that goes along with it you get access",
    "start": "289770",
    "end": "295289"
  },
  {
    "text": "to the latest hardware technology for machine learning but you only pay for the seconds that you really use that",
    "start": "295289",
    "end": "301169"
  },
  {
    "text": "technology for your application and finally there are also some application services so if you know nothing about",
    "start": "301169",
    "end": "306810"
  },
  {
    "start": "303000",
    "end": "333000"
  },
  {
    "text": "machine learning and if you're not interested in in developing anything that is close to a machine learning",
    "start": "306810",
    "end": "312060"
  },
  {
    "text": "algorithm you can still use the application services which includes services for vision for speech and for",
    "start": "312060",
    "end": "318360"
  },
  {
    "text": "language by simply putting in an image into the Amazon recognition service and getting labels back powered by machine",
    "start": "318360",
    "end": "324960"
  },
  {
    "text": "learning technology so even if if you can only write some simple lines of code you can take advantage of all machine",
    "start": "324960",
    "end": "330960"
  },
  {
    "text": "learning expertise here so with that there's lots of tools that you can use",
    "start": "330960",
    "end": "336330"
  },
  {
    "start": "333000",
    "end": "703000"
  },
  {
    "text": "but let's dive deeper into the actual machine learning experience in which you are training your own model so if you're",
    "start": "336330",
    "end": "344129"
  },
  {
    "text": "training your own machine learning model a lot of things need to happen and it always starts with a business problem",
    "start": "344129",
    "end": "350159"
  },
  {
    "text": "and tomorrow there's a whole talk around how to find the right business problem and how to map it to a machine learning",
    "start": "350159",
    "end": "355919"
  },
  {
    "text": "problem but to be honest machine learning is cool but at the end of the day you need to take to make something",
    "start": "355919",
    "end": "362089"
  },
  {
    "text": "useful out of that and that is where you talk to your business people and try to identify use cases where a machine",
    "start": "362089",
    "end": "368250"
  },
  {
    "text": "learning algorithm may add value to your business so the next thing you need to do is you need to frame that business",
    "start": "368250",
    "end": "374729"
  },
  {
    "text": "problem as a machine learning problem it means like how can I identify interesting objects in an image that I",
    "start": "374729",
    "end": "381839"
  },
  {
    "text": "am interested in as a business or how can I identify a sentiment value out of a Twitter Twitter post or something like",
    "start": "381839",
    "end": "390719"
  },
  {
    "text": "that or how can I detect a part in my industry to dotto machinery",
    "start": "390719",
    "end": "396450"
  },
  {
    "text": "or follow machinery that is about to break and how can I map this to the data and collecting from that IOT system so",
    "start": "396450",
    "end": "403470"
  },
  {
    "text": "once you frame that problem the next step is where the work really starts and it starts always with data collection",
    "start": "403470",
    "end": "409550"
  },
  {
    "text": "machine learning is all about crunching a lot of data and identifying patterns",
    "start": "409550",
    "end": "415260"
  },
  {
    "text": "in the data that the machine learning algorithm is going to recognize so it always starts with collecting data if",
    "start": "415260",
    "end": "421800"
  },
  {
    "text": "you don't have data you don't you can't train a machine learning on top of it so it's really important to have a good",
    "start": "421800",
    "end": "427800"
  },
  {
    "text": "data strategy and have good mechanism for collecting data from different bits and pieces of your company from your IOT",
    "start": "427800",
    "end": "434280"
  },
  {
    "text": "devices from your mobile apps or wherever your data is coming from and this is why data lakes are becoming so",
    "start": "434280",
    "end": "439470"
  },
  {
    "text": "popular with our AWS customers once you collect the data you probably want to integrate data from different sources",
    "start": "439470",
    "end": "445740"
  },
  {
    "text": "and you probably want to prepare the data clean the data identify bits",
    "start": "445740",
    "end": "451350"
  },
  {
    "text": "missing bits and pieces and fill them up with some sensible value and generally predigest the data so that it becomes",
    "start": "451350",
    "end": "457620"
  },
  {
    "text": "easier to use in a machine learning context after collecting integrating and",
    "start": "457620",
    "end": "463919"
  },
  {
    "text": "preparing the data this is where you first start looking at the data trying to identify opportunities for machine",
    "start": "463919",
    "end": "469440"
  },
  {
    "text": "learning so that involves some visualization there are lots of tools out there you can use a business",
    "start": "469440",
    "end": "474810"
  },
  {
    "text": "intelligence tool you can use Amazon QuickStart or you can use a developer environment such as a Jupiter notebook",
    "start": "474810",
    "end": "480210"
  },
  {
    "text": "to visualize the data and get a feel for it and the next step after visualizing the data once you get a feel about what",
    "start": "480210",
    "end": "487020"
  },
  {
    "text": "are the parameters that are interesting to build my machine running on top of is feature engineering this is where you",
    "start": "487020",
    "end": "492780"
  },
  {
    "text": "extract specific attributes from the data that you want to fit into a machine learning algorithm and after that comes",
    "start": "492780",
    "end": "499440"
  },
  {
    "text": "the actual model training part where you train a machine learning model with a",
    "start": "499440",
    "end": "504510"
  },
  {
    "text": "training algorithm and then after training the model you probably want to know is this model going to work or is",
    "start": "504510",
    "end": "510780"
  },
  {
    "text": "it just gonna give me some response that is completely random so you probably want to do some testing some evaluation",
    "start": "510780",
    "end": "517650"
  },
  {
    "text": "of your model that is based on on some training data which is separate from sorry from test data which is separate",
    "start": "517650",
    "end": "524280"
  },
  {
    "text": "from training data and get a feel about how world of performs and that might involve some tuning as well so maybe you're using the",
    "start": "524280",
    "end": "531839"
  },
  {
    "text": "wrong parameters and if you use better parameters you get a better model so if there are a lot of science behind tuning",
    "start": "531839",
    "end": "537990"
  },
  {
    "text": "your models and this is what we call hyper parameter tuning so after evaluation and tuning and training maybe",
    "start": "537990",
    "end": "545550"
  },
  {
    "text": "you haven't met your goal yet maybe it wasn't the right algorithm or maybe you're still missing data that has the",
    "start": "545550",
    "end": "552089"
  },
  {
    "text": "power to predict something and you go back to square one where you collect more data or better data in order to",
    "start": "552089",
    "end": "558269"
  },
  {
    "text": "feel your model and maybe it's not just about collecting more data maybe you",
    "start": "558269",
    "end": "563880"
  },
  {
    "text": "haven't extracted the right feature so you want to play with the data and try to identify hmm what if you I add the",
    "start": "563880",
    "end": "569579"
  },
  {
    "text": "mean and the Sigma or the standard deviation to my data will that probably help my machine learning algorithm",
    "start": "569579",
    "end": "575640"
  },
  {
    "text": "identify patterns better or what if I can filter the image using those filters to make it more digestible for my next",
    "start": "575640",
    "end": "583470"
  },
  {
    "text": "pieces in the pipeline so think about how you can augment the data through collecting more and better data or how",
    "start": "583470",
    "end": "589620"
  },
  {
    "text": "you can mint the data at the visualization and feature engineering part where you can try to extract better",
    "start": "589620",
    "end": "596100"
  },
  {
    "text": "features before you feed them into your machine learning algorithm and assuming that the model is successful it provides",
    "start": "596100",
    "end": "602190"
  },
  {
    "text": "you with a good prediction then the work of putting it into production starts it's a wholly different environment a",
    "start": "602190",
    "end": "608970"
  },
  {
    "text": "training environment typically involves a lot of scale and and that's fine",
    "start": "608970",
    "end": "614730"
  },
  {
    "text": "a production environment may not involve as much scale but it has different requirements it needs to be very highly",
    "start": "614730",
    "end": "621209"
  },
  {
    "text": "available it needs to scale based on the demand that you're seeing in production and you probably also want to see some",
    "start": "621209",
    "end": "627300"
  },
  {
    "text": "some monitoring and debugging here because by collecting monitoring data from real-life",
    "start": "627300",
    "end": "632699"
  },
  {
    "text": "use cases you can actually add to the data collection phase by collecting real ground truth data from the real world",
    "start": "632699",
    "end": "639630"
  },
  {
    "text": "from user feedback you can then augment the data collection phase and then the whole cycle starts from scratch so the",
    "start": "639630",
    "end": "647550"
  },
  {
    "text": "point here is this is the whole process on a technical stage and the key idea here is that sage maker is designed to",
    "start": "647550",
    "end": "654300"
  },
  {
    "text": "help you through all of the stages of this process so it's one tool set that you can use to attack all of",
    "start": "654300",
    "end": "660450"
  },
  {
    "text": "individual stages and run in circles and it you can either either do it interactively like we're going to do in",
    "start": "660450",
    "end": "666660"
  },
  {
    "text": "a couple of minutes or you can embed it into your overall continuous deployment process in a fully automatic way so",
    "start": "666660",
    "end": "673560"
  },
  {
    "text": "think of the whole cycle here running completely automatic every week based on",
    "start": "673560",
    "end": "679500"
  },
  {
    "text": "new data that you collect across the week and getting a better model every week every week that improves over time",
    "start": "679500",
    "end": "685530"
  },
  {
    "text": "as you add new data to it completely automatic and part of your continuous",
    "start": "685530",
    "end": "690600"
  },
  {
    "text": "deployment pipeline including running it in production that is the goal here try to embed your whole machine learning",
    "start": "690600",
    "end": "696720"
  },
  {
    "text": "process into your complete continuous deployment pipeline and make it part of your automatic setup here so with that",
    "start": "696720",
    "end": "704460"
  },
  {
    "start": "703000",
    "end": "783000"
  },
  {
    "text": "let's take a look at the real thing here so the first thing you probably want to do is is creating a notebook instance so",
    "start": "704460",
    "end": "711240"
  },
  {
    "text": "who is familiar with jupiter notebooks in this audience so that's about a quarter or so okay so peaceful give me",
    "start": "711240",
    "end": "718020"
  },
  {
    "text": "if I run if I explain some of the basics for those that haven't raised their hands yet so a jupiter notebook is a",
    "start": "718020",
    "end": "724020"
  },
  {
    "text": "web-based environment that as a developer or the data scientist you can use kind of like a workbench or a",
    "start": "724020",
    "end": "729210"
  },
  {
    "text": "graphical user interface to playing with data in a in a language that you like I",
    "start": "729210",
    "end": "734340"
  },
  {
    "text": "happen to like Python and it seems to be a very popular popular language but if you want to use R or any other language",
    "start": "734340",
    "end": "740400"
  },
  {
    "text": "that's perfectly viable as well so Jupiter notebooks are currently the most popular software for running a notebook",
    "start": "740400",
    "end": "746970"
  },
  {
    "text": "environment and we are going to run our examples in a Jupiter notebook and if you're wondering how can I run a Jupiter",
    "start": "746970",
    "end": "752700"
  },
  {
    "text": "notebook do I need to install something that is exactly what this step here employs so if you log in to the Amazon",
    "start": "752700",
    "end": "758640"
  },
  {
    "text": "sage maker console the first step is creating a notebook you specify a name",
    "start": "758640",
    "end": "764100"
  },
  {
    "text": "the instance type a role that you want to associate that gives you the permission to use other AWS services and",
    "start": "764100",
    "end": "770910"
  },
  {
    "text": "then it creates your Jupiter notebook in your favorite VPC or in a V PC that is publicly accessible so it takes all the",
    "start": "770910",
    "end": "777000"
  },
  {
    "text": "complexity a way of running a notebook environment and makes it as easy to use as an RDS database so let's do that and",
    "start": "777000",
    "end": "784020"
  },
  {
    "start": "783000",
    "end": "865000"
  },
  {
    "text": "then work from there so as I said this is the AWS console",
    "start": "784020",
    "end": "789380"
  },
  {
    "text": "let's make the font a little bit bigger so you can we'd better and here's the sage maker",
    "start": "789380",
    "end": "796480"
  },
  {
    "text": "here's a sage maker interface we switch networks so there's a small networking thing here this is dashboard here's a",
    "start": "796480",
    "end": "803029"
  },
  {
    "text": "big friendly create notebook instance button I already did that so let's move on to our actual Jupiter notebook this",
    "start": "803029",
    "end": "810620"
  },
  {
    "text": "is our Jupiter notebook environment looks like it looks like a file browser because it is in the beginning you see",
    "start": "810620",
    "end": "816589"
  },
  {
    "text": "the files on your home directory and I have created a couple of demo notebooks",
    "start": "816589",
    "end": "822140"
  },
  {
    "text": "that you can use to familiarize yourself with Amazon sage maker actually nice",
    "start": "822140",
    "end": "827839"
  },
  {
    "text": "thing about sage maker is it comes with the whole library of demonstration notebooks that are ready to use ready to",
    "start": "827839",
    "end": "833120"
  },
  {
    "text": "try out so if you're interested in a particular algorithm such as I don't know how to run a deep neural network in",
    "start": "833120",
    "end": "840440"
  },
  {
    "text": "terms of flow on sage maker you simply pick the right notebook from the github repository here from the examples and to",
    "start": "840440",
    "end": "847250"
  },
  {
    "text": "make it even more convenient they are already pre-installed in the notebook environment so when you open up",
    "start": "847250",
    "end": "853730"
  },
  {
    "text": "your notebook environment you already see this directory here called sample notebooks and this is where all of the",
    "start": "853730",
    "end": "859580"
  },
  {
    "text": "samples live and where you can browse them and try them out and see how they work",
    "start": "859580",
    "end": "864700"
  },
  {
    "text": "so as a first example I picked a very simple machine learning algorithm which",
    "start": "864700",
    "end": "869750"
  },
  {
    "start": "865000",
    "end": "972000"
  },
  {
    "text": "is a linear learner so who is familiar with linear regression in this okay",
    "start": "869750",
    "end": "875029"
  },
  {
    "text": "that's about so if I'm if I don't know anything about something what do you do you go to Wikipedia right so let's go to",
    "start": "875029",
    "end": "881779"
  },
  {
    "text": "Wikipedia and look up linear regression real quick just to remind ourselves what is this about so linear regression is a",
    "start": "881779",
    "end": "889310"
  },
  {
    "text": "very very simple algorithm some people don't even count it as machine learning because it's so simple but let's start",
    "start": "889310",
    "end": "895910"
  },
  {
    "text": "with it so linear regression is an algorithm that takes all of your data points so the data points here are the",
    "start": "895910",
    "end": "901100"
  },
  {
    "text": "blue dots here let's make the image bigger so in linear regression this is",
    "start": "901100",
    "end": "908600"
  },
  {
    "text": "the data that you use for training the blue dots here and in this case we have two dimensions two values x and y that",
    "start": "908600",
    "end": "916060"
  },
  {
    "text": "the data takes with it two attributes and we want to predict what is the data",
    "start": "916060",
    "end": "922010"
  },
  {
    "text": "that is going to come out if I put in a value of 50 what is going to be likely",
    "start": "922010",
    "end": "928150"
  },
  {
    "text": "the result on the y-axis and in order to do that a linear regression algorithm",
    "start": "928150",
    "end": "933670"
  },
  {
    "text": "tries to plot a line across all of the that that is as close as possible to all",
    "start": "933670",
    "end": "939820"
  },
  {
    "text": "of the known data points in order to estimate or any result here so if we",
    "start": "939820",
    "end": "946029"
  },
  {
    "text": "look at the line if we plug in 50 the expected value of would be around 12 point 5 that is the result of our",
    "start": "946029",
    "end": "952000"
  },
  {
    "text": "algorithm super simple everybody did it at school somehow now imagine doing that with 300 variables so",
    "start": "952000",
    "end": "959110"
  },
  {
    "text": "if you do that with 300 variables you end up in a 300 dimensional vector space which is a bit more complicated than",
    "start": "959110",
    "end": "965230"
  },
  {
    "text": "plotting a single line and this is why we have a built-in algorithm in Amazon's",
    "start": "965230",
    "end": "970570"
  },
  {
    "text": "H maker to do that for us so this is the example notebook for using the linear learner and as an example data set we're",
    "start": "970570",
    "end": "979120"
  },
  {
    "start": "972000",
    "end": "1296000"
  },
  {
    "text": "using the M nest data set the MS data set is a collection of handwritten digits so they literally took look lots",
    "start": "979120",
    "end": "986800"
  },
  {
    "text": "of bookkeepers and their books and then they extracted all of the handwritten digits from those book keepers books",
    "start": "986800",
    "end": "992950"
  },
  {
    "text": "made them into into into some pictures and now we want to predict whether the",
    "start": "992950",
    "end": "1000080"
  },
  {
    "text": "bookkeeper wrote a 0 or a non-zero digit into the book by feeding all of the",
    "start": "1000080",
    "end": "1006750"
  },
  {
    "text": "pixels into a linear regression algorithm that is what this example is about and now you see that how jupiter",
    "start": "1006750",
    "end": "1013950"
  },
  {
    "text": "notebook works you see cells here that look a lot like HTML because they are and you can write",
    "start": "1013950",
    "end": "1020339"
  },
  {
    "text": "down your notes in such a cell either in HTML or in markdown just to keep a note",
    "start": "1020339",
    "end": "1025800"
  },
  {
    "text": "of what you're doing so a jupiter notebook really is a notebook in the sense of you can write stuff down but it also includes code so",
    "start": "1025800",
    "end": "1032760"
  },
  {
    "text": "in this case we have a code cell where you can write down code and one of the supported languages in this case is",
    "start": "1032760",
    "end": "1039058"
  },
  {
    "text": "python and if you execute that cell that code gets executed so it's a nice ways to mix and match your documentation your",
    "start": "1039059",
    "end": "1047220"
  },
  {
    "text": "notes with actual codes that you are running here so what we're going to do here is we're gonna work through this",
    "start": "1047220",
    "end": "1053130"
  },
  {
    "text": "notebook and and thereby execute this example that uses sage maker to train a linear",
    "start": "1053130",
    "end": "1059110"
  },
  {
    "text": "learner model some introduction here I'm gonna skip about that the first step",
    "start": "1059110",
    "end": "1064870"
  },
  {
    "text": "here with sage maker is simply telling your programming environment where your",
    "start": "1064870",
    "end": "1070870"
  },
  {
    "text": "data lives so in this case I created a bucket here that you see here so this bucket over here is my Amazon s3",
    "start": "1070870",
    "end": "1078490"
  },
  {
    "text": "bucket where I'm going to upload my training data to so the sage maker can access it and if I want to tidy up my",
    "start": "1078490",
    "end": "1085720"
  },
  {
    "text": "stairs here's a prefix such as something like a subdirectory so I know where the data is very simple stuff and the rest",
    "start": "1085720",
    "end": "1092350"
  },
  {
    "text": "here is simply importing the Botero library which is the AWS SDK a regular",
    "start": "1092350",
    "end": "1098650"
  },
  {
    "text": "expression library and we're also importing Sh make a specific library that will give us our execution role",
    "start": "1098650",
    "end": "1104590"
  },
  {
    "text": "because we want to hand over sage make up the role that we are using to run all of these this stuff and give it",
    "start": "1104590",
    "end": "1110679"
  },
  {
    "text": "permission to use AWS services on behalf so simple stuff here as you can see when",
    "start": "1110679",
    "end": "1115960"
  },
  {
    "text": "you execute a node here there's a small star appearing and after executing the code you see a number which is the",
    "start": "1115960",
    "end": "1121690"
  },
  {
    "text": "number of in the sequence of stuff you executed very easy stuff so Jupiter note",
    "start": "1121690",
    "end": "1127480"
  },
  {
    "text": "box is just a command line environment that is mixed in with documentation now the interesting stuff happens the first",
    "start": "1127480",
    "end": "1134410"
  },
  {
    "text": "interesting part happens here this is where we ingest data in this case we're downloading training data from an",
    "start": "1134410",
    "end": "1139929"
  },
  {
    "text": "external web page so this is just Python code that downloads our training data and then it opens the guruship file",
    "start": "1139929",
    "end": "1148090"
  },
  {
    "text": "where the data is packaged up and untaxed the data this takes a little bit",
    "start": "1148090",
    "end": "1153490"
  },
  {
    "text": "longer it's a couple of seconds until everything is downloaded and then we can take a look at the data so with this",
    "start": "1153490",
    "end": "1158980"
  },
  {
    "text": "code here we're actually actually visualizing one example digits so this is a three sort of character that is",
    "start": "1158980",
    "end": "1166780"
  },
  {
    "text": "part of the MDS data set just to get a feel of the data now how are we going to give this data to our machine learning",
    "start": "1166780",
    "end": "1174010"
  },
  {
    "text": "model in this case we need a numeric representation of the data so each image here is a 27 by 27 let me",
    "start": "1174010",
    "end": "1182620"
  },
  {
    "text": "just check real quick yeah I think it's 27 by 27 great of pixels so each pixel has a grayscale",
    "start": "1182620",
    "end": "1191090"
  },
  {
    "text": "value between zero and two hundred and fifty years six so what we're gonna do is we're gonna pump all of the 27 by 27",
    "start": "1191090",
    "end": "1198580"
  },
  {
    "text": "grayscale values into a linear learner pretend that they are points and dots in",
    "start": "1198580",
    "end": "1204470"
  },
  {
    "text": "a twenty seven by twenty seven that's seven hundred something dimensional space and let it all figure out by",
    "start": "1204470",
    "end": "1210110"
  },
  {
    "text": "plotting lines through the data and trying to identify zeros from real digits that's what we do here and if you",
    "start": "1210110",
    "end": "1218059"
  },
  {
    "text": "look up the documentation then we learned that the linear regression algorithm expects data in a format",
    "start": "1218059",
    "end": "1224720"
  },
  {
    "text": "called protocol buffers or proto buffer so what we need to do here is we need to convert all our main images into proto",
    "start": "1224720",
    "end": "1232309"
  },
  {
    "text": "buffer data and this is what this cell here is doing so this is a bit code that",
    "start": "1232309",
    "end": "1237740"
  },
  {
    "text": "takes the data that we load it and then it uploads the data to Amazon s3 on the",
    "start": "1237740",
    "end": "1244330"
  },
  {
    "text": "sorry it's it takes the data without it and it creates a proto buffer a record I",
    "start": "1244330",
    "end": "1250700"
  },
  {
    "text": "wept proto buffer data structure that can be digested by the machine learning algorithm and the next step actually is",
    "start": "1250700",
    "end": "1257630"
  },
  {
    "text": "uploading the data into Amazon s3 so that's the data preparation bit in your",
    "start": "1257630",
    "end": "1262940"
  },
  {
    "text": "case you may want to write some Python or some R or some other classes that pre",
    "start": "1262940",
    "end": "1268070"
  },
  {
    "text": "digest the data in a different way so maybe you want to crunch the data by computing mean and standard deviation",
    "start": "1268070",
    "end": "1274160"
  },
  {
    "text": "numbers or you want to filter out invalid values from the data or you want",
    "start": "1274160",
    "end": "1279559"
  },
  {
    "text": "to mix it up or something else this is where you would do the pre-processing in an interactive way or if you want to put",
    "start": "1279559",
    "end": "1285410"
  },
  {
    "text": "it into production this is something you can run as a batch job that batch inputs the data batch processes the data and",
    "start": "1285410",
    "end": "1291530"
  },
  {
    "text": "then dumps to the training data into Amazon s3 as a training data set so the",
    "start": "1291530",
    "end": "1297679"
  },
  {
    "start": "1296000",
    "end": "1383000"
  },
  {
    "text": "next step that we need to do here is once we have the data on a3 is to train",
    "start": "1297679",
    "end": "1303290"
  },
  {
    "text": "the actual model now the nice thing about stage maker is that it supports everything you can put in a docker",
    "start": "1303290",
    "end": "1309410"
  },
  {
    "text": "container because if you will sage maker is an orchestrated execution",
    "start": "1309410",
    "end": "1314720"
  },
  {
    "text": "environment for docker containers that happens to be optimized for machine learning so every",
    "start": "1314720",
    "end": "1321009"
  },
  {
    "text": "machine learning algorithm that sage maker supports is living in a docker container and in this case the code",
    "start": "1321009",
    "end": "1326769"
  },
  {
    "text": "simply tells us if you are in the region us West two this is the ID of the docker",
    "start": "1326769",
    "end": "1331960"
  },
  {
    "text": "container that contains the machine learning linear learner model so if you",
    "start": "1331960",
    "end": "1337240"
  },
  {
    "text": "want to use one of Amazon's own models you simply look up the right container here from our documentation if you want",
    "start": "1337240",
    "end": "1344529"
  },
  {
    "text": "to create your own deep learning model based on tens of flow MX net or any other framework you simply use one of",
    "start": "1344529",
    "end": "1351129"
  },
  {
    "text": "the pre-built containers that have all the hooks in place to put to put in your tens of flow or a mix net script and",
    "start": "1351129",
    "end": "1357159"
  },
  {
    "text": "then you use that prefabricated container to load the data and load your own deep Learning Network",
    "start": "1357159",
    "end": "1363220"
  },
  {
    "text": "or if you have your own exotic super specific very cool machine learning",
    "start": "1363220",
    "end": "1368440"
  },
  {
    "text": "algorithm that is really cool you can wrap it into a docker container and hand it over to a seiche maker so that it can",
    "start": "1368440",
    "end": "1375460"
  },
  {
    "text": "take care of running it at scale and using it as the basis for your own machine learning application so it's all",
    "start": "1375460",
    "end": "1381549"
  },
  {
    "text": "containerized so let's do that let's figure out which is the right container and in this code here we start the",
    "start": "1381549",
    "end": "1388720"
  },
  {
    "start": "1383000",
    "end": "1513000"
  },
  {
    "text": "actual training process since training in this case takes about five minutes and I don't want to here sit around and",
    "start": "1388720",
    "end": "1395200"
  },
  {
    "text": "boil for five minutes I already run the training for you so this is what you get here is a simple",
    "start": "1395200",
    "end": "1400330"
  },
  {
    "text": "API call that creates the estimator object where all of the parameters are which container what role how many",
    "start": "1400330",
    "end": "1407409"
  },
  {
    "text": "instances I want to train on nice thing about machine learning is that most of the time is nicely parallelizable so if",
    "start": "1407409",
    "end": "1413830"
  },
  {
    "text": "you have a lot of data you can run you can train in parallel on one ten a",
    "start": "1413830",
    "end": "1418870"
  },
  {
    "text": "hundred instances and you simply change the number at this stage here to tell sage maker how many instances you want",
    "start": "1418870",
    "end": "1424840"
  },
  {
    "text": "to train on you can pick a specific instance type here again depending on",
    "start": "1424840",
    "end": "1430539"
  },
  {
    "text": "how your algorithm performs if it needs a lot of memory you pick an instance with more memory if it needs a GPU you",
    "start": "1430539",
    "end": "1436659"
  },
  {
    "text": "pick a GPU enabled instance you can choose the right instance type here and here's where we give it the output",
    "start": "1436659",
    "end": "1442240"
  },
  {
    "text": "location where the model that is already that has been trained is going to be output to so for instance if you want to",
    "start": "1442240",
    "end": "1449470"
  },
  {
    "text": "train train a machine learning model is going to be deployed on a device on an IOT device you can pick it up you can",
    "start": "1449470",
    "end": "1456340"
  },
  {
    "text": "train it in the cloud with sage maker take it from the s3 bucket where the model pops out and put it into your IOT",
    "start": "1456340",
    "end": "1462400"
  },
  {
    "text": "device or you can get the next step and deploy it into production so the next",
    "start": "1462400",
    "end": "1468010"
  },
  {
    "text": "thing is this is where we specify the hyper parameters these are the 784 values that we get out of our 27 by 27",
    "start": "1468010",
    "end": "1475000"
  },
  {
    "text": "pick pixels this is where we tell it okay we want the binary classification algorithm and here's the mini batch size",
    "start": "1475000",
    "end": "1482050"
  },
  {
    "text": "so it's not going to feed all of the 10,000 images at once it's not going to feed them one by one",
    "start": "1482050",
    "end": "1488110"
  },
  {
    "text": "it's going to feed them in batches of 200 into the training algorithm so this",
    "start": "1488110",
    "end": "1493210"
  },
  {
    "text": "is where you can pick here the batch size and that's the tunable parameter it kernel is a trade-off between being slow",
    "start": "1493210",
    "end": "1500350"
  },
  {
    "text": "because you feed it just one by one or being superfast by feeding or everything at once but getting a lower precision",
    "start": "1500350",
    "end": "1506860"
  },
  {
    "text": "outcome with 200 in the middle somewhere we get a really good mix of both and",
    "start": "1506860",
    "end": "1512620"
  },
  {
    "text": "then you see all of the log output of that actual training process so this is where the training really happens these",
    "start": "1512620",
    "end": "1519400"
  },
  {
    "start": "1513000",
    "end": "1590000"
  },
  {
    "text": "are the batches that are trained one after the other every batch contains metrics so what you can do here is you",
    "start": "1519400",
    "end": "1525970"
  },
  {
    "text": "can look at the logs as a human which is not really attractive or you can pipe those logs into your own monitoring",
    "start": "1525970",
    "end": "1533130"
  },
  {
    "text": "environment and get a monitoring view on your logs and you can process those logs",
    "start": "1533130",
    "end": "1538210"
  },
  {
    "text": "to determine automatically whether this week's model is really better than last week's model and maybe you want to",
    "start": "1538210",
    "end": "1544570"
  },
  {
    "text": "discuss this discard the new model for the old one because the old ones really was better so you get full control over",
    "start": "1544570",
    "end": "1551140"
  },
  {
    "text": "the log output here and in this case we're simply displaying the log just to",
    "start": "1551140",
    "end": "1556330"
  },
  {
    "text": "illustrate the point and the final log output here is a summary of the outcome",
    "start": "1556330",
    "end": "1562060"
  },
  {
    "text": "which includes quality metrics like precision recall or f1 score so if we",
    "start": "1562060",
    "end": "1569050"
  },
  {
    "text": "look at the output matrix we learned that our as1 score here which is a mixture of different metrics",
    "start": "1569050",
    "end": "1575050"
  },
  {
    "text": "it's about 96 percent as one school it means that roughly this",
    "start": "1575050",
    "end": "1581729"
  },
  {
    "text": "model after training was able to recognize ninety-six percent of those",
    "start": "1581729",
    "end": "1587159"
  },
  {
    "text": "digits either as being zero or nonzero so seems to work pretty nice even though",
    "start": "1587159",
    "end": "1592979"
  },
  {
    "start": "1590000",
    "end": "1650000"
  },
  {
    "text": "it's a very primitive algorithm so after training the next step is to set up our",
    "start": "1592979",
    "end": "1598139"
  },
  {
    "text": "hosting environment for the model and it works very similar to the training code so instead of getting an estimator code",
    "start": "1598139",
    "end": "1604710"
  },
  {
    "text": "we create a deployment object here using the sage maker library and that",
    "start": "1604710",
    "end": "1610799"
  },
  {
    "text": "deployment has similar parameters like instance count and instance type",
    "start": "1610799",
    "end": "1615840"
  },
  {
    "text": "typically for deployment you would use a smaller instance type because deployment uses less CPU and RAM as the training",
    "start": "1615840",
    "end": "1622799"
  },
  {
    "text": "stage but it may depend on your algorithm and and that will create the",
    "start": "1622799",
    "end": "1628049"
  },
  {
    "text": "model with this end point configuration and after creating this end point",
    "start": "1628049",
    "end": "1633509"
  },
  {
    "text": "configuration we are ready to actually run some tests here so what we do here is we run through some code that helps",
    "start": "1633509",
    "end": "1642779"
  },
  {
    "text": "us serialize and deserialize our model and put it into into production and then we can start running",
    "start": "1642779",
    "end": "1649559"
  },
  {
    "text": "some predictions so this code here so in the beginning again this code here takes",
    "start": "1649559",
    "end": "1656159"
  },
  {
    "text": "about a couple of minutes to set up the hosting environment and the thing that happens behind the scenes is sage maker",
    "start": "1656159",
    "end": "1662999"
  },
  {
    "text": "will create a fleet of machines either one or many machines you can either tell",
    "start": "1662999",
    "end": "1668099"
  },
  {
    "text": "it to auto scale the machines based on demand so you can start with a single machine and as more and more users use",
    "start": "1668099",
    "end": "1675899"
  },
  {
    "text": "your endpoint maybe you are using this model as part of a mobile application that uploads a lot of data you have",
    "start": "1675899",
    "end": "1681419"
  },
  {
    "text": "millions of users and growing really quick then it will automatically add more instances to your hosting fleet",
    "start": "1681419",
    "end": "1686940"
  },
  {
    "text": "that will take all of the load and the other thing about hosting to be honest a",
    "start": "1686940",
    "end": "1692369"
  },
  {
    "text": "data scientist is not not the most competent person to run a web restful",
    "start": "1692369",
    "end": "1697649"
  },
  {
    "text": "web services at scale including security including caching and authorization and",
    "start": "1697649",
    "end": "1702659"
  },
  {
    "text": "all the other things you need to go through in order to publish a robust Web API at least I don't know that many data",
    "start": "1702659",
    "end": "1708059"
  },
  {
    "text": "scientists and even if you do know how to do this all of your own you probably want to spend more",
    "start": "1708059",
    "end": "1713500"
  },
  {
    "text": "time doing data science and less time doing infrastructure and this is where",
    "start": "1713500",
    "end": "1718840"
  },
  {
    "text": "seiche maker really helps you because it sets up the whole restful Web Services endpoint for you that is nicely",
    "start": "1718840",
    "end": "1724120"
  },
  {
    "text": "easy-to-use just like any other AWS API and sets up the whole suite automatically for you so you don't have",
    "start": "1724120",
    "end": "1730809"
  },
  {
    "text": "to worry about anything and the way to use this endpoint is very simple you simply create this predictor object here",
    "start": "1730809",
    "end": "1739690"
  },
  {
    "text": "tell it what where the endpoint is and then you run the predict method with the",
    "start": "1739690",
    "end": "1747850"
  },
  {
    "text": "input data and you will get an output as a result so in this case we are looking at one of one of the images image number",
    "start": "1747850",
    "end": "1755440"
  },
  {
    "text": "0 here and then the result is that we get a score of eight point five six with",
    "start": "1755440",
    "end": "1761320"
  },
  {
    "text": "a predicted label of zero zero meaning this is not a zero sorry for the confusion here but it tells us the",
    "start": "1761320",
    "end": "1769090"
  },
  {
    "text": "outcome of the model so this is how easy this looks from your own web application so you can embed this call into your web",
    "start": "1769090",
    "end": "1775419"
  },
  {
    "text": "application to your mobile application to wrap around the whole restful api that has been created for you running",
    "start": "1775419",
    "end": "1781809"
  },
  {
    "text": "your model okay so linear regression is kind of boring let's look at an example",
    "start": "1781809",
    "end": "1788620"
  },
  {
    "start": "1783000",
    "end": "1930000"
  },
  {
    "text": "that is a little bit more colorful in this case image classification and maybe",
    "start": "1788620",
    "end": "1794500"
  },
  {
    "text": "this is a good way of introducing you to the algorithms that sage maker supports",
    "start": "1794500",
    "end": "1800230"
  },
  {
    "text": "so if you go to the documentation how do you find the documentation well it's",
    "start": "1800230",
    "end": "1805480"
  },
  {
    "text": "very easy you simply type in aws.amazon.com slash documentation I swear I run into customers all the time",
    "start": "1805480",
    "end": "1812860"
  },
  {
    "text": "who didn't know that so I'm just want to point this out aws.amazon.com slash documentation you see documentation for",
    "start": "1812860",
    "end": "1820600"
  },
  {
    "text": "all of the services here and you simply find sage maker here somewhere right since we have 125 or more services I",
    "start": "1820600",
    "end": "1828910"
  },
  {
    "text": "really need to use the find mechanism on my web browser here so here is the sage maker documentation this is one of the",
    "start": "1828910",
    "end": "1835390"
  },
  {
    "text": "best documentation I have seen because it comes with all of the algorithms nicely documented it comes with examples",
    "start": "1835390",
    "end": "1842290"
  },
  {
    "text": "and it's really worth to check it out part of the documentation is the chapter",
    "start": "1842290",
    "end": "1848330"
  },
  {
    "text": "around using built-in algorithms where you get a list of all of the built in ready to use fully optimized sage maker",
    "start": "1848330",
    "end": "1854419"
  },
  {
    "text": "algorithms so we have been using the linear learner algorithm before now let's take a look at the image",
    "start": "1854419",
    "end": "1859669"
  },
  {
    "text": "classification algorithm the image classification algorithm is a pre-built",
    "start": "1859669",
    "end": "1864850"
  },
  {
    "text": "deep convolutional neural network that you can train on your own images to run",
    "start": "1864850",
    "end": "1870619"
  },
  {
    "text": "a customized image classification engine so let's take as an example let's say",
    "start": "1870619",
    "end": "1875869"
  },
  {
    "text": "you work for a car manufacturer and you have lots of models in your car family",
    "start": "1875869",
    "end": "1882019"
  },
  {
    "text": "and you want to create a machine learning model that is able to recognize your own car brand types let's say you",
    "start": "1882019",
    "end": "1889369"
  },
  {
    "text": "are BMW we have BMW in the keynote and thanks to BMW for being part of our keynote so let's say you are BMW and you",
    "start": "1889369",
    "end": "1896239"
  },
  {
    "text": "want to train your own machine learning model that can recognize 3 series 5 Series X x1 + i8 or what what models",
    "start": "1896239",
    "end": "1905720"
  },
  {
    "text": "they have first step is collect the data so you collect a lot of images from all of your car models with all of the",
    "start": "1905720",
    "end": "1912440"
  },
  {
    "text": "different angles and whatever variants you have and then you label those images by writing down ok this is a 5 Series",
    "start": "1912440",
    "end": "1919249"
  },
  {
    "text": "BMW with station wagon or something like that and then you can apply this image",
    "start": "1919249",
    "end": "1924980"
  },
  {
    "text": "classification algorithm to train a an algorithm to recognize all of those pictures and the way convolutional",
    "start": "1924980",
    "end": "1932450"
  },
  {
    "start": "1930000",
    "end": "2058000"
  },
  {
    "text": "neural networks work so who knows what a convolutional neural network is I know it's a mouthful again we go to Wikipedia",
    "start": "1932450",
    "end": "1938869"
  },
  {
    "text": "and try to figure this one out",
    "start": "1938869",
    "end": "1942789"
  },
  {
    "text": "so a convolutional neural network tries to emulate the same pipeline that is",
    "start": "1949080",
    "end": "1956070"
  },
  {
    "text": "happening in your brain so what happens is it takes all of the take pixels of",
    "start": "1956070",
    "end": "1961830"
  },
  {
    "text": "the picture and it runs them through a convolution stage a convolution stage is",
    "start": "1961830",
    "end": "1967139"
  },
  {
    "text": "like a Photoshop filter so when you run Photoshop and you run a filter that enhances the edges that makes the edges",
    "start": "1967139",
    "end": "1974159"
  },
  {
    "text": "that makes your image sharper that's what a convolution does in math in math it's a matrix multiplication with a",
    "start": "1974159",
    "end": "1980369"
  },
  {
    "text": "specific kernel that runs on top of the picture we don't want to do too much math here but this is essentially what's",
    "start": "1980369",
    "end": "1986220"
  },
  {
    "text": "happening so in a convolutional neural network the first step is here that we apply a lot of masks a lot of filters on",
    "start": "1986220",
    "end": "1993749"
  },
  {
    "text": "top of the image that are differently configured in the beginning they are randomized and then they are trained to",
    "start": "1993749",
    "end": "1999720"
  },
  {
    "text": "be more efficient and those filters extract features so the feature extraction here happens through",
    "start": "1999720",
    "end": "2005929"
  },
  {
    "text": "convolution filters then we subsample them that means that we make the image put them into buckets so that we only",
    "start": "2005929",
    "end": "2011690"
  },
  {
    "text": "have a handful of features handful meaning it could be hundreds it could be thousands of features but it's still",
    "start": "2011690",
    "end": "2017899"
  },
  {
    "text": "less than the million pixels we had and then we run them through a noodle network that has different layers of",
    "start": "2017899",
    "end": "2023840"
  },
  {
    "text": "neurons that try to identify those features and depending on the complexity",
    "start": "2023840",
    "end": "2028879"
  },
  {
    "text": "of the image you want to recognize you can get away with just a dozen nodes or",
    "start": "2028879",
    "end": "2034340"
  },
  {
    "text": "18 nodes or you can go all the way up to hundreds of layers that are trying to",
    "start": "2034340",
    "end": "2040009"
  },
  {
    "text": "interpret and make sense of that image so that's essentially what a convolutional neural network does you",
    "start": "2040009",
    "end": "2045799"
  },
  {
    "text": "don't have to understand this you don't have to program this you can simply use the ready-to-use image classification",
    "start": "2045799",
    "end": "2051408"
  },
  {
    "text": "algorithm that you can tune with some parameters and use in production and that is what this notebook is about is",
    "start": "2051409",
    "end": "2058010"
  },
  {
    "start": "2058000",
    "end": "2101000"
  },
  {
    "text": "about so again in the beginning we import some stuff we import the right container image where the image training",
    "start": "2058010",
    "end": "2065118"
  },
  {
    "text": "algorithm is then we can fine-tune the model in terms of our requirements so in",
    "start": "2065119",
    "end": "2071990"
  },
  {
    "text": "this case we load some images for images we are using a research data set",
    "start": "2071990",
    "end": "2079940"
  },
  {
    "text": "that is the that is from the University of California which is called the Caltech 256 data set it's a data set of",
    "start": "2079940",
    "end": "2087950"
  },
  {
    "text": "about 30,000 images that are grouped into 256 categories but in this case",
    "start": "2087950",
    "end": "2095569"
  },
  {
    "text": "this is where you would bring in your own car images or motorbike images or plant images or whatever so you load the",
    "start": "2095569",
    "end": "2103010"
  },
  {
    "start": "2101000",
    "end": "2193000"
  },
  {
    "text": "images we format the images into the right data structure for the machine learning model you write an input",
    "start": "2103010",
    "end": "2110270"
  },
  {
    "text": "specification which basically tells us okay I am using three layers for the",
    "start": "2110270",
    "end": "2117500"
  },
  {
    "text": "three based colors red green blue I'm using 2224 by 224 resolution images so",
    "start": "2117500",
    "end": "2124160"
  },
  {
    "text": "you can expand that to bigger resolution images or you can shrink that depending on your use case this is where you tell",
    "start": "2124160",
    "end": "2130490"
  },
  {
    "text": "it how many training samples you're gonna use this is 50 15,000 you may have",
    "start": "2130490",
    "end": "2136400"
  },
  {
    "text": "noticed that we're starting with 30,000 images why are we just using 15,000 something here anybody has an idea",
    "start": "2136400",
    "end": "2144940"
  },
  {
    "text": "training yes so the idea here is to separate the training data set from the testing data set it's like at school at",
    "start": "2144970",
    "end": "2152240"
  },
  {
    "text": "school we like to cheat we don't want our machine learning model to cheat and we don't want it to learn something that",
    "start": "2152240",
    "end": "2157940"
  },
  {
    "text": "we are not aware is giving away the right information so what we do here is we separate out some of the data for",
    "start": "2157940",
    "end": "2164150"
  },
  {
    "text": "training trained on that and then we use the remaining data that is unknown to the model to test how well it performs",
    "start": "2164150",
    "end": "2171380"
  },
  {
    "text": "and if we did a good job with training it will be able to recognize stuff that it has never seen before and then we",
    "start": "2171380",
    "end": "2178010"
  },
  {
    "text": "know our model is really working so this is where you can separate the data into training and testing examples here is",
    "start": "2178010",
    "end": "2185810"
  },
  {
    "text": "where we tell it that we have 256 plus an unknown class or 257 classes and some",
    "start": "2185810",
    "end": "2192230"
  },
  {
    "text": "other parameters training is very similar it looks like complicated code but this is just a data structure that",
    "start": "2192230",
    "end": "2197810"
  },
  {
    "start": "2193000",
    "end": "2238000"
  },
  {
    "text": "encapsulates all of the training parameters and the actual training happens with this code line here where",
    "start": "2197810",
    "end": "2204650"
  },
  {
    "text": "we say sorry where we simply give all of the",
    "start": "2204650",
    "end": "2211220"
  },
  {
    "text": "parameters into the training hall which is sage maker create training job so one",
    "start": "2211220",
    "end": "2218480"
  },
  {
    "text": "API call lots of parameters that describe your training job and then stage maker will again create a fleet of",
    "start": "2218480",
    "end": "2225500"
  },
  {
    "text": "machines as many as you like of the right instance type that you pick from run all the data through all of the",
    "start": "2225500",
    "end": "2232130"
  },
  {
    "text": "machines and then it will pop out a ready trained model into your favorite s3 bucket so again same thing for",
    "start": "2232130",
    "end": "2241190"
  },
  {
    "start": "2238000",
    "end": "2472000"
  },
  {
    "text": "deployment it's just different algorithms so basically we are running through the whole set of sequence that we did before in email in in the linear",
    "start": "2241190",
    "end": "2248150"
  },
  {
    "text": "learner just with a different algorithm slightly different data structures different algorithm but the process is",
    "start": "2248150",
    "end": "2254569"
  },
  {
    "text": "the same we go through training we go through deployment we get an endpoint and then we can present images to that",
    "start": "2254569",
    "end": "2261049"
  },
  {
    "text": "endpoint and then it'll give us an answer so in this case let's I have the",
    "start": "2261049",
    "end": "2267020"
  },
  {
    "text": "endpoint already up and running so let's download a test image here so what kind",
    "start": "2267020",
    "end": "2272420"
  },
  {
    "text": "of image do we want to test on this new model here what is what is your favorite animal here squirrel okay",
    "start": "2272420",
    "end": "2282799"
  },
  {
    "text": "so let's pick a squirrel here so let's go to a website that has free to use",
    "start": "2282799",
    "end": "2290329"
  },
  {
    "text": "images and type squirrel okay here are",
    "start": "2290329",
    "end": "2297440"
  },
  {
    "text": "Spritle pictures let's pick this nice squirrel here and let's copy the image",
    "start": "2297440",
    "end": "2305599"
  },
  {
    "text": "URL just to be sure here's our squirrel I have the URL here and now we go find",
    "start": "2305599",
    "end": "2312410"
  },
  {
    "text": "our linear sorry not the linear learner we are going to",
    "start": "2312410",
    "end": "2317559"
  },
  {
    "text": "this is where I get confused here we",
    "start": "2318890",
    "end": "2326460"
  },
  {
    "text": "have it okay here's the image classification this is where we put in our squirrel URL into this bit of code",
    "start": "2326460",
    "end": "2331920"
  },
  {
    "text": "as you can see here Jupiter also supports simple shell commands so we can",
    "start": "2331920",
    "end": "2337710"
  },
  {
    "text": "use our favorite W get to download the squirrel image into the test - JPEG file",
    "start": "2337710",
    "end": "2346590"
  },
  {
    "text": "so that's let's do that so that's not the image I download it",
    "start": "2346590",
    "end": "2353119"
  },
  {
    "text": "did I do something wrong in my copy/paste hmm somehow it did not",
    "start": "2353119",
    "end": "2366060"
  },
  {
    "text": "download the image yeah it should be",
    "start": "2366060",
    "end": "2373530"
  },
  {
    "text": "downloading it to test2 and then finally",
    "start": "2373530",
    "end": "2379440"
  },
  {
    "text": "it should okay something's wrong so it",
    "start": "2379440",
    "end": "2384900"
  },
  {
    "text": "is definitely the squirrel image here it is in test2 file name equals test2",
    "start": "2384900",
    "end": "2391650"
  },
  {
    "text": "anybody found the bug yet sorry it's",
    "start": "2391650",
    "end": "2401000"
  },
  {
    "text": "saving to test JPEG yes you're right it is saving it to the wrong one okay but",
    "start": "2403430",
    "end": "2409080"
  },
  {
    "text": "it may be there's an error here okay let's go with the Cathedral and I'll",
    "start": "2409080",
    "end": "2415109"
  },
  {
    "text": "figure it out later sorry for the blunder here in this case we're using a Cathedral the interesting",
    "start": "2415109",
    "end": "2421260"
  },
  {
    "text": "bit of the code here is actually where we get to use our fully trained endpoint in this case we are reading the image we",
    "start": "2421260",
    "end": "2428190"
  },
  {
    "text": "are putting it into a byte array and then we are presenting the byte array with the image to upload it into our",
    "start": "2428190",
    "end": "2433410"
  },
  {
    "text": "endpoint here and then we call the invoke invoke endpoint methods that will",
    "start": "2433410",
    "end": "2438990"
  },
  {
    "text": "present it to our web service API and if we run that we get a label in this case",
    "start": "2438990",
    "end": "2444300"
  },
  {
    "text": "is Tower of Pisa well it looks like a tower it looks like an old monument building",
    "start": "2444300",
    "end": "2449559"
  },
  {
    "text": "the reason it's trying to its if thinks it's the Tower of Pisa is we didn't have very different towers in our training",
    "start": "2449559",
    "end": "2456489"
  },
  {
    "text": "set here because it's just a small demo training set but it is coming pretty close and again it gives us a",
    "start": "2456489",
    "end": "2463119"
  },
  {
    "text": "probability so with 48 percent it looks like a Tower of Pisa but model day to",
    "start": "2463119",
    "end": "2468670"
  },
  {
    "text": "detect while it's not really long so maybe it's not a hundred percent above Pisa okay I'll figure out the the bit about",
    "start": "2468670",
    "end": "2475630"
  },
  {
    "start": "2472000",
    "end": "2643000"
  },
  {
    "text": "the squirrel sorry for the squirrel bit here but I think you get a feel about how easy it is to put this into",
    "start": "2475630",
    "end": "2482559"
  },
  {
    "text": "production again please check out the documentation check out the example notebooks all of these are just the",
    "start": "2482559",
    "end": "2488920"
  },
  {
    "text": "example notebooks it will teach you how to use the code and then you can take it from there you can copy paste the code",
    "start": "2488920",
    "end": "2494349"
  },
  {
    "text": "from the example notebooks put them into your own application you can automate everything and you can pick from one of",
    "start": "2494349",
    "end": "2501309"
  },
  {
    "text": "the many different examples from the documentation here so with that we have time for question and answers and don't",
    "start": "2501309",
    "end": "2508329"
  },
  {
    "text": "ask questions about why squirrel images didn't load so any question here yes the",
    "start": "2508329",
    "end": "2515349"
  },
  {
    "text": "guy over there maybe do we have a mic for the audience okay we have a friendly",
    "start": "2515349",
    "end": "2522670"
  },
  {
    "text": "little helper here meet Kevin Kevin is gonna helping us out with the mic here thank you Kevin",
    "start": "2522670",
    "end": "2527859"
  },
  {
    "text": "thank you thank you okay got two small questions one is the pre-designed model",
    "start": "2527859",
    "end": "2535239"
  },
  {
    "text": "open source and the two is is the jupiter notebook on the only coding",
    "start": "2535239",
    "end": "2540759"
  },
  {
    "text": "environment for sage maker okay question number one the amazon supplied",
    "start": "2540759",
    "end": "2546329"
  },
  {
    "text": "algorithms are they open source the answer is no these are our proprietary very tuned very optimized algorithms but",
    "start": "2546329",
    "end": "2554049"
  },
  {
    "text": "you get you own all of the model data so the model that you create all of our own algorithms is owned by you you can do",
    "start": "2554049",
    "end": "2560619"
  },
  {
    "text": "whatever you like with them and we are currently working on documenting how the model data looks like so if you want to",
    "start": "2560619",
    "end": "2567279"
  },
  {
    "text": "use an open source model you can always encapsulate it in your own docker container and bring it into Sage maker",
    "start": "2567279",
    "end": "2573489"
  },
  {
    "text": "and if you are creating your own deep neural networks then you're using the standardized open source docker",
    "start": "2573489",
    "end": "2579489"
  },
  {
    "text": "container that we provide you for Kenzo flow or MX net or other models and then you plug in your Python code in",
    "start": "2579489",
    "end": "2586270"
  },
  {
    "text": "there second question is is to put a notebook the only environment the answer is no",
    "start": "2586270",
    "end": "2591820"
  },
  {
    "text": "you can use any environment to interact with Sage maker sage maker is just a",
    "start": "2591820",
    "end": "2597340"
  },
  {
    "text": "service with an API I'm using Jupiter because it's convenient you can use our studio you can use a shell script you",
    "start": "2597340",
    "end": "2605200"
  },
  {
    "text": "can use whatever environment you like to interact with sage maker it's always the same thing you import a sage make a",
    "start": "2605200",
    "end": "2610450"
  },
  {
    "text": "library you call the training function with the parameters you call the deployment function and you're done so the jupiter notebook is just an added",
    "start": "2610450",
    "end": "2617650"
  },
  {
    "text": "convenience on top of the rest of the sage maker service the question over",
    "start": "2617650",
    "end": "2623650"
  },
  {
    "text": "there yes okay can you show again where you got the endpoint to make predictions sorry what was the question to make",
    "start": "2623650",
    "end": "2631240"
  },
  {
    "text": "predictions you got the endpoint yes can you show me again where you got the endpoint from oh yes the endpoint is",
    "start": "2631240",
    "end": "2638350"
  },
  {
    "text": "created here at the deployment stage so create endpoint here you give it a name",
    "start": "2638350",
    "end": "2646810"
  },
  {
    "start": "2643000",
    "end": "2968000"
  },
  {
    "text": "and this piece of code here you give it a name here are the parameters where you",
    "start": "2646810",
    "end": "2652920"
  },
  {
    "text": "put in the endpoint configuration this is where you put in how many instances what instance type and then you say sage",
    "start": "2652920",
    "end": "2659710"
  },
  {
    "text": "maker create endpoint with those parameters and the output of that function call is going to be the URL or",
    "start": "2659710",
    "end": "2666280"
  },
  {
    "text": "the the AR end the Amazon resource name of the endpoint that you can use and there is an HTTP restful endpoint that",
    "start": "2666280",
    "end": "2672730"
  },
  {
    "text": "uses AWS API gateway with our authentication mechanism so you can use",
    "start": "2672730",
    "end": "2677770"
  },
  {
    "text": "it just like any other API from AWS and interact with that endpoint if you want",
    "start": "2677770",
    "end": "2682900"
  },
  {
    "text": "the graphical overview you see you can always go back to the sage maker console where you get a list of models endpoint",
    "start": "2682900",
    "end": "2688750"
  },
  {
    "text": "configurations and endpoints so another way would be to log into your environment because my token has been",
    "start": "2688750",
    "end": "2694930"
  },
  {
    "text": "used up and then you can simply go to the AWS sage maker console and there you",
    "start": "2694930",
    "end": "2701380"
  },
  {
    "text": "will find the endpoints listed of course we also have API calls for listing all",
    "start": "2701380",
    "end": "2707620"
  },
  {
    "text": "of the endpoints so you can see how many endpoints do I have and if you have a naming convention you",
    "start": "2707620",
    "end": "2713380"
  },
  {
    "text": "list them by version if you put in the version as part of your name you get a nicely list of the versions of the end",
    "start": "2713380",
    "end": "2720790"
  },
  {
    "text": "points and then you can do all kinds of fun stuff like a be testing and stuff like that so again let's go back to the",
    "start": "2720790",
    "end": "2726970"
  },
  {
    "text": "sage maker console and there you can see the list of currently configured",
    "start": "2726970",
    "end": "2732700"
  },
  {
    "text": "endpoints so in this case I have a couple of endpoints let's see the one that we created right now must be this",
    "start": "2732700",
    "end": "2740230"
  },
  {
    "text": "should be this one yeah one of these one",
    "start": "2740230",
    "end": "2745710"
  },
  {
    "text": "so we still have some time for questions let's give it five minutes for questions over there",
    "start": "2745710",
    "end": "2752880"
  },
  {
    "text": "thank you very much for the presentation I would like to ask you if you could",
    "start": "2757030",
    "end": "2762260"
  },
  {
    "text": "elaborate and liberate on how the model is pre trained by Amazon and like what",
    "start": "2762260",
    "end": "2769400"
  },
  {
    "text": "kind of classes is its animals what kind of like buildings passports whatever and",
    "start": "2769400",
    "end": "2776830"
  },
  {
    "text": "how you can adapt them like for your own purpose say you have 20 different types",
    "start": "2776830",
    "end": "2783050"
  },
  {
    "text": "of passports or whatever okay so in the case of the algorithms that are part of",
    "start": "2783050",
    "end": "2788360"
  },
  {
    "text": "the Amazon sage maker service all of the training data is supplied by you so we",
    "start": "2788360",
    "end": "2793730"
  },
  {
    "text": "don't provide any training data this has come coming all from your own application now in terms of the",
    "start": "2793730",
    "end": "2801170"
  },
  {
    "text": "algorithms they have been tuned based on our experience with running those applications these algorithms in",
    "start": "2801170",
    "end": "2808040"
  },
  {
    "text": "production and they have been tuned to support streaming training mode as opposed to batch training mode and they",
    "start": "2808040",
    "end": "2814910"
  },
  {
    "text": "are tuned to support parallelization at least most of them there is a full",
    "start": "2814910",
    "end": "2820690"
  },
  {
    "text": "presentation on YouTube that you can check out just search on youtube for a Tobias reinvent infinitely scalable",
    "start": "2820690",
    "end": "2827540"
  },
  {
    "text": "machine learning and this is a rundown of most of the algorithms and what we did behind the covers to tune them and",
    "start": "2827540",
    "end": "2834110"
  },
  {
    "text": "the goal of tuning the algorithm is to make all of the algorithms very efficient in terms of parallelization",
    "start": "2834110",
    "end": "2839210"
  },
  {
    "text": "and in terms of getting a lot of training a very high quality training model at the least expense of resources",
    "start": "2839210",
    "end": "2847840"
  },
  {
    "text": "did that answer your question ok thank you so let's do a last question now and",
    "start": "2847840",
    "end": "2855710"
  },
  {
    "text": "then if you have any further questions you can find me off the stage here because I still have one or two slides",
    "start": "2855710",
    "end": "2860930"
  },
  {
    "text": "to wrap this up last question ok people",
    "start": "2860930",
    "end": "2868430"
  },
  {
    "text": "okay last question with the guy with the funny t-shirt what if I have pre-trained",
    "start": "2868430",
    "end": "2875519"
  },
  {
    "text": "models may be stored in s3 let's say multiple play train models so the nice",
    "start": "2875519",
    "end": "2880740"
  },
  {
    "text": "three yes how can i deploy that maybe without using Jupiter notebooks okay so if those motors have been trade by train",
    "start": "2880740",
    "end": "2887880"
  },
  {
    "text": "already with sage maker you can keep them in a three and deploy them afterwards so in this case you see here",
    "start": "2887880",
    "end": "2893460"
  },
  {
    "text": "these are the models that are stored and known to Sage maker if you are if you",
    "start": "2893460",
    "end": "2901230"
  },
  {
    "text": "create those models on your own with your own algorithm then you can put that algorithm in the docker container and",
    "start": "2901230",
    "end": "2907619"
  },
  {
    "text": "load that model from s3 and simply use sage maker is a purely deployment mechanism but in this case you need to",
    "start": "2907619",
    "end": "2914670"
  },
  {
    "text": "make sage maker understand what your model format is and you can do that by encapsulating your algorithm code in a",
    "start": "2914670",
    "end": "2921630"
  },
  {
    "text": "docker container actually you can you can actually cheat a little bit because",
    "start": "2921630",
    "end": "2926640"
  },
  {
    "text": "if you look at the container we use for running an NX net model this is just a",
    "start": "2926640",
    "end": "2932970"
  },
  {
    "text": "Python execution environment so chances are that your model is past numpy kind",
    "start": "2932970",
    "end": "2938640"
  },
  {
    "text": "of modern or something like that so you can simply use the NX net execution",
    "start": "2938640",
    "end": "2944660"
  },
  {
    "text": "environment and write some code that loads the model in your format and then",
    "start": "2944660",
    "end": "2949950"
  },
  {
    "text": "execute the model running sci-fi or or or numpy or whatever your execution environment is and you're done you just",
    "start": "2949950",
    "end": "2956519"
  },
  {
    "text": "pretend it's an IMAX net model in reality it's just a Python script so you can do that if that doesn't work you can",
    "start": "2956519",
    "end": "2961680"
  },
  {
    "text": "always encapsulate your algorithm in a docker container and then use your pretend model from s3 okay let's wrap",
    "start": "2961680",
    "end": "2969359"
  },
  {
    "start": "2968000",
    "end": "3173000"
  },
  {
    "text": "this up with a couple of last slides so we went through creating a notebook",
    "start": "2969359",
    "end": "2977970"
  },
  {
    "text": "instance we went through loading visualizing and preparing the data if you are a little bit familiar with Jupiter notebooks you can use matplotlib",
    "start": "2977970",
    "end": "2984720"
  },
  {
    "text": "to do some more fancy plotting of your data we went through training your model",
    "start": "2984720",
    "end": "2990150"
  },
  {
    "text": "and through inference and again if you don't know how it works just pick one of",
    "start": "2990150",
    "end": "2996900"
  },
  {
    "text": "those example notebooks copy/paste this is the best way to learn this stuff so",
    "start": "2996900",
    "end": "3002140"
  },
  {
    "text": "the next step I would encourage you to explore the built-in algorithms so find the documentation right now we have",
    "start": "3002140",
    "end": "3009730"
  },
  {
    "text": "about a dozen algorithms that's been very different use cases we have clustering algorithms we have image",
    "start": "3009730",
    "end": "3015069"
  },
  {
    "text": "classification we have natural language processing we have sequence to sequence for translation so a lots of great",
    "start": "3015069",
    "end": "3021660"
  },
  {
    "text": "selection of algorithms including dimensionality reduction and and other",
    "start": "3021660",
    "end": "3027250"
  },
  {
    "text": "useful bits in in machine learning so you don't have to reinvent the wheel here you can use our finely trained",
    "start": "3027250",
    "end": "3033579"
  },
  {
    "text": "models here you can build those machine learning endpoints into your web mobile or IOT apps very easily you can even",
    "start": "3033579",
    "end": "3040869"
  },
  {
    "text": "deploy your model to a device using Amazon Greengrass so check out Emma's ongoing Ross machine",
    "start": "3040869",
    "end": "3045940"
  },
  {
    "text": "learning inference which gives you the tools you need to deploy models into your devices in an IOT context try to",
    "start": "3045940",
    "end": "3052869"
  },
  {
    "text": "build a fully automated model cycle so you can collect new ground truth data where your users are telling you no this",
    "start": "3052869",
    "end": "3060099"
  },
  {
    "text": "is not the Tower of Pisa this is something else and then take that data as new labels and new data to retrain",
    "start": "3060099",
    "end": "3066220"
  },
  {
    "text": "your model with better data you can use sage maker to run a beat test to test",
    "start": "3066220",
    "end": "3073329"
  },
  {
    "text": "models with different data and and have a whole new a bit testing environment there you can automate everything using",
    "start": "3073329",
    "end": "3080109"
  },
  {
    "text": "code pipeline or aw step functions as orchestrators and if you are having",
    "start": "3080109",
    "end": "3085359"
  },
  {
    "text": "trouble labeling the data so collecting data is really cheap if the labels that make machine learning difficult because",
    "start": "3085359",
    "end": "3092109"
  },
  {
    "text": "if it's a new thing that hasn't been done by a machine before which is the whole point of machine learning then you",
    "start": "3092109",
    "end": "3098470"
  },
  {
    "text": "need someone human to look at the data and tell this is a cat this is a dog this is the Tower of Pisa this is a",
    "start": "3098470",
    "end": "3105640"
  },
  {
    "text": "squirrel and that means you need real humans to look at your data and if you're running out of humans you can use",
    "start": "3105640",
    "end": "3112150"
  },
  {
    "text": "the Amazon Mechanical Turk service to help you label the data because Mechanical Turk is an interface to human",
    "start": "3112150",
    "end": "3118480"
  },
  {
    "text": "workers so that you can set up a website that displays the picture and have a human worker from the Mechanical Turk",
    "start": "3118480",
    "end": "3124869"
  },
  {
    "text": "platform look at your picture and tell you it's a squirrel or something else and finally you don't",
    "start": "3124869",
    "end": "3131109"
  },
  {
    "text": "have to stop with a single model you can have a combination of multiple models that you call in sick that and create a full pipeline so you",
    "start": "3131109",
    "end": "3138040"
  },
  {
    "text": "might start with a data collection process that has thousands of attributes",
    "start": "3138040",
    "end": "3143320"
  },
  {
    "text": "and then you can use a principal component analysis to bring boils and down to just three hundred attributes",
    "start": "3143320",
    "end": "3148690"
  },
  {
    "text": "and then you use a k-means clustering bit and so you can use machine learning",
    "start": "3148690",
    "end": "3154360"
  },
  {
    "text": "models as building blocks with that we are looking forward to learning from you what are you building so try to build",
    "start": "3154360",
    "end": "3160869"
  },
  {
    "text": "something cool out of sage maker and hopefully this session has been useful to you in learning more about how it",
    "start": "3160869",
    "end": "3166810"
  },
  {
    "text": "works thank you very much",
    "start": "3166810",
    "end": "3170100"
  }
]