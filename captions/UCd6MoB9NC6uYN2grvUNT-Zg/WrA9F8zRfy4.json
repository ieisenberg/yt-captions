[
  {
    "text": "hello my fellow",
    "start": "880",
    "end": "2360"
  },
  {
    "text": "Builders today I want to talk with you",
    "start": "2360",
    "end": "4720"
  },
  {
    "text": "about the new Enterprise controls for",
    "start": "4720",
    "end": "6720"
  },
  {
    "text": "AWS certificate manager to help govern",
    "start": "6720",
    "end": "9559"
  },
  {
    "text": "certificate",
    "start": "9559",
    "end": "11200"
  },
  {
    "text": "issuance many customers are concerned",
    "start": "11200",
    "end": "13639"
  },
  {
    "text": "with how to ensure that TLS certificates",
    "start": "13639",
    "end": "16440"
  },
  {
    "text": "are issued in accordance with their",
    "start": "16440",
    "end": "18359"
  },
  {
    "text": "organizational governance",
    "start": "18359",
    "end": "20600"
  },
  {
    "text": "guidelines common examples of such",
    "start": "20600",
    "end": "23199"
  },
  {
    "text": "policies include requiring specific",
    "start": "23199",
    "end": "25880"
  },
  {
    "text": "validation types during certificate",
    "start": "25880",
    "end": "28039"
  },
  {
    "text": "issuance restricting the ability to",
    "start": "28039",
    "end": "30400"
  },
  {
    "text": "issue certificates with wild card names",
    "start": "30400",
    "end": "33280"
  },
  {
    "text": "and requiring that certificates use a",
    "start": "33280",
    "end": "35559"
  },
  {
    "text": "specific key algorithm like",
    "start": "35559",
    "end": "38920"
  },
  {
    "text": "ecdsa prior to this release there was no",
    "start": "38920",
    "end": "41840"
  },
  {
    "text": "straightforward way to enforce such",
    "start": "41840",
    "end": "43719"
  },
  {
    "text": "governance rules for AWS certificate",
    "start": "43719",
    "end": "46320"
  },
  {
    "text": "manager also known as",
    "start": "46320",
    "end": "49000"
  },
  {
    "text": "ACM now you can define granular rules",
    "start": "49000",
    "end": "53359"
  },
  {
    "text": "around certificate issuance from ACM and",
    "start": "53359",
    "end": "56640"
  },
  {
    "text": "ensure your users are using TLS in",
    "start": "56640",
    "end": "59559"
  },
  {
    "text": "accordance ordance with your governance",
    "start": "59559",
    "end": "61600"
  },
  {
    "text": "policies so what's new let's take a look",
    "start": "61600",
    "end": "65640"
  },
  {
    "text": "you can now use AWS identity and access",
    "start": "65640",
    "end": "68880"
  },
  {
    "text": "management or IM condition context keys",
    "start": "68880",
    "end": "73200"
  },
  {
    "text": "with ACM to help ensure that users are",
    "start": "73200",
    "end": "76240"
  },
  {
    "text": "issuing certificates that conform to",
    "start": "76240",
    "end": "78320"
  },
  {
    "text": "your organization's public key",
    "start": "78320",
    "end": "80200"
  },
  {
    "text": "infrastructure",
    "start": "80200",
    "end": "82119"
  },
  {
    "text": "guidelines using these new condition",
    "start": "82119",
    "end": "85200"
  },
  {
    "text": "Keys you can Define how your ACM users",
    "start": "85200",
    "end": "88520"
  },
  {
    "text": "customize certificate issue parameters",
    "start": "88520",
    "end": "90920"
  },
  {
    "text": "to authorize number one a specific",
    "start": "90920",
    "end": "93960"
  },
  {
    "text": "certificate validation method number two",
    "start": "93960",
    "end": "97439"
  },
  {
    "text": "who can request certificates for",
    "start": "97439",
    "end": "99439"
  },
  {
    "text": "specific domain names including Wild",
    "start": "99439",
    "end": "101680"
  },
  {
    "text": "Card names number three specific",
    "start": "101680",
    "end": "104320"
  },
  {
    "text": "certificate key algorithms number four",
    "start": "104320",
    "end": "107560"
  },
  {
    "text": "the request of public or private",
    "start": "107560",
    "end": "109320"
  },
  {
    "text": "certificate types and number five",
    "start": "109320",
    "end": "112200"
  },
  {
    "text": "disabling certificate transparency",
    "start": "112200",
    "end": "115039"
  },
  {
    "text": "logging you can allow or deny specific",
    "start": "115039",
    "end": "117960"
  },
  {
    "text": "certificate issuance parameters in your",
    "start": "117960",
    "end": "119920"
  },
  {
    "text": "IM am principles just add the condition",
    "start": "119920",
    "end": "123200"
  },
  {
    "text": "using the specific condition context key",
    "start": "123200",
    "end": "125920"
  },
  {
    "text": "to the identity based policy for your",
    "start": "125920",
    "end": "128039"
  },
  {
    "text": "IMR or user or to a service control",
    "start": "128039",
    "end": "131920"
  },
  {
    "text": "policy otherwise known as SCP within AWS",
    "start": "131920",
    "end": "136280"
  },
  {
    "text": "organizations how does this work in",
    "start": "136280",
    "end": "138560"
  },
  {
    "text": "detail let's review how condition",
    "start": "138560",
    "end": "141640"
  },
  {
    "text": "context Keys work so that we can",
    "start": "141640",
    "end": "143640"
  },
  {
    "text": "understand how to use them for ACM the",
    "start": "143640",
    "end": "146680"
  },
  {
    "text": "condition block of an AWS IM policy let",
    "start": "146680",
    "end": "150000"
  },
  {
    "text": "you specify conditions for when a policy",
    "start": "150000",
    "end": "153000"
  },
  {
    "text": "is in effect if you want to apply a",
    "start": "153000",
    "end": "155720"
  },
  {
    "text": "policy condition on a username John Doe",
    "start": "155720",
    "end": "158920"
  },
  {
    "text": "then a condition Block in the Json form",
    "start": "158920",
    "end": "162280"
  },
  {
    "text": "would look like",
    "start": "162280",
    "end": "163760"
  },
  {
    "text": "this where AWS username is the condition",
    "start": "163760",
    "end": "167080"
  },
  {
    "text": "key the AWS prefix tells you that this",
    "start": "167080",
    "end": "170720"
  },
  {
    "text": "is a global condition key that is",
    "start": "170720",
    "end": "173080"
  },
  {
    "text": "applicable to virtually any",
    "start": "173080",
    "end": "175280"
  },
  {
    "text": "service this condition is true if AWS",
    "start": "175280",
    "end": "179239"
  },
  {
    "text": "username string equals John Doe if true",
    "start": "179239",
    "end": "184159"
  },
  {
    "text": "then the rest of the AWS IM policy",
    "start": "184159",
    "end": "186840"
  },
  {
    "text": "applies allow or deny on whatever",
    "start": "186840",
    "end": "190120"
  },
  {
    "text": "actions and resources are",
    "start": "190120",
    "end": "193040"
  },
  {
    "text": "specified what if you want to apply",
    "start": "193040",
    "end": "195200"
  },
  {
    "text": "multiple conditions to a policy this",
    "start": "195200",
    "end": "198120"
  },
  {
    "text": "diagram illustrates the evaluation Logic",
    "start": "198120",
    "end": "200879"
  },
  {
    "text": "for condition element blocks note that",
    "start": "200879",
    "end": "203879"
  },
  {
    "text": "multiple context key value pairs are",
    "start": "203879",
    "end": "207480"
  },
  {
    "text": "evaluated with a logical a and this will",
    "start": "207480",
    "end": "211239"
  },
  {
    "text": "be important later in the demo multiple",
    "start": "211239",
    "end": "213920"
  },
  {
    "text": "key values like AWS username John Doe in",
    "start": "213920",
    "end": "218200"
  },
  {
    "text": "the previous example are evaluated with",
    "start": "218200",
    "end": "221040"
  },
  {
    "text": "a logical",
    "start": "221040",
    "end": "222360"
  },
  {
    "text": "or multiple condition operators like",
    "start": "222360",
    "end": "225439"
  },
  {
    "text": "string equals in the previous example",
    "start": "225439",
    "end": "228439"
  },
  {
    "text": "evaluate with a logical and here are the",
    "start": "228439",
    "end": "231319"
  },
  {
    "text": "details of the new ACM condition context",
    "start": "231319",
    "end": "234159"
  },
  {
    "text": "Keys notice the ACM prefix on all these",
    "start": "234159",
    "end": "238000"
  },
  {
    "text": "condition Keys which tell you that that",
    "start": "238000",
    "end": "239840"
  },
  {
    "text": "they are specific to ACM in this",
    "start": "239840",
    "end": "243120"
  },
  {
    "text": "demonstration we will focus on the first",
    "start": "243120",
    "end": "245680"
  },
  {
    "text": "condition context key ACM validation",
    "start": "245680",
    "end": "248680"
  },
  {
    "text": "method which filters access by the",
    "start": "248680",
    "end": "251599"
  },
  {
    "text": "validation method in the request such as",
    "start": "251599",
    "end": "254239"
  },
  {
    "text": "email or DNS validation for more",
    "start": "254239",
    "end": "257000"
  },
  {
    "text": "information on the others consult the",
    "start": "257000",
    "end": "258880"
  },
  {
    "text": "AWS",
    "start": "258880",
    "end": "260320"
  },
  {
    "text": "documentation in this demonstration we",
    "start": "260320",
    "end": "263000"
  },
  {
    "text": "will create an SCP to enforce governance",
    "start": "263000",
    "end": "265800"
  },
  {
    "text": "with the ACM condition context key with",
    "start": "265800",
    "end": "268880"
  },
  {
    "text": "AWS or organizations to manage",
    "start": "268880",
    "end": "271039"
  },
  {
    "text": "permissions across your or Enterprise",
    "start": "271039",
    "end": "273680"
  },
  {
    "text": "scps offer central control over the",
    "start": "273680",
    "end": "276639"
  },
  {
    "text": "maximum available permission for all",
    "start": "276639",
    "end": "278720"
  },
  {
    "text": "accounts in your organization and scps",
    "start": "278720",
    "end": "281440"
  },
  {
    "text": "can help you ensure your accounts stay",
    "start": "281440",
    "end": "283880"
  },
  {
    "text": "aligned with your",
    "start": "283880",
    "end": "285360"
  },
  {
    "text": "organization's Access Control guidelines",
    "start": "285360",
    "end": "288479"
  },
  {
    "text": "this diagram illustrates SCP inheritance",
    "start": "288479",
    "end": "291919"
  },
  {
    "text": "and how an SCP denying an action or",
    "start": "291919",
    "end": "295360"
  },
  {
    "text": "service effect in the targeted account",
    "start": "295360",
    "end": "298039"
  },
  {
    "text": "is inherited downward from a higher",
    "start": "298039",
    "end": "300840"
  },
  {
    "text": "account let us assume that you want to",
    "start": "300840",
    "end": "303680"
  },
  {
    "text": "allow only DNS validated certificates",
    "start": "303680",
    "end": "306720"
  },
  {
    "text": "not email validated certificates across",
    "start": "306720",
    "end": "309240"
  },
  {
    "text": "your entire",
    "start": "309240",
    "end": "310400"
  },
  {
    "text": "Enterprise you could create IM policies",
    "start": "310400",
    "end": "312840"
  },
  {
    "text": "in all of your accounts to deny the use",
    "start": "312840",
    "end": "314720"
  },
  {
    "text": "of email validated certificates by",
    "start": "314720",
    "end": "316880"
  },
  {
    "text": "creating an SEP that denies the use of",
    "start": "316880",
    "end": "319319"
  },
  {
    "text": "email validation across every account in",
    "start": "319319",
    "end": "321560"
  },
  {
    "text": "your Enterprise will be much more",
    "start": "321560",
    "end": "323639"
  },
  {
    "text": "efficient and effective however if you",
    "start": "323639",
    "end": "326240"
  },
  {
    "text": "want to prevent a single IM role in one",
    "start": "326240",
    "end": "329240"
  },
  {
    "text": "of your accounts from issuing email",
    "start": "329240",
    "end": "331440"
  },
  {
    "text": "validated certificates the IM policy",
    "start": "331440",
    "end": "333560"
  },
  {
    "text": "attached to that role would be the",
    "start": "333560",
    "end": "335440"
  },
  {
    "text": "simplest most granular method it's",
    "start": "335440",
    "end": "338360"
  },
  {
    "text": "important to note that no permissions",
    "start": "338360",
    "end": "340360"
  },
  {
    "text": "are granted by an SCP an SCP sets limits",
    "start": "340360",
    "end": "344039"
  },
  {
    "text": "on the actions that you can delegate to",
    "start": "344039",
    "end": "346000"
  },
  {
    "text": "the IM user and roles in the affected",
    "start": "346000",
    "end": "348199"
  },
  {
    "text": "accounts let's focus on our specific",
    "start": "348199",
    "end": "350720"
  },
  {
    "text": "condition context key to prohibit the",
    "start": "350720",
    "end": "352600"
  },
  {
    "text": "use of email validation during",
    "start": "352600",
    "end": "354680"
  },
  {
    "text": "certificate issuance the SCP will look",
    "start": "354680",
    "end": "357000"
  },
  {
    "text": "like",
    "start": "357000",
    "end": "358039"
  },
  {
    "text": "this this CP has the effect of deny",
    "start": "358039",
    "end": "361960"
  },
  {
    "text": "action of ACM request certificate for",
    "start": "361960",
    "end": "365840"
  },
  {
    "text": "any resource denoted by the star the",
    "start": "365840",
    "end": "369759"
  },
  {
    "text": "condition Block matches string like ACM",
    "start": "369759",
    "end": "372680"
  },
  {
    "text": "validation method equal to",
    "start": "372680",
    "end": "375759"
  },
  {
    "text": "email the second condition provides an",
    "start": "375759",
    "end": "378680"
  },
  {
    "text": "exception for a specific IM Ro that may",
    "start": "378680",
    "end": "381720"
  },
  {
    "text": "be allowed to use email",
    "start": "381720",
    "end": "384280"
  },
  {
    "text": "validation the Arn not like condition",
    "start": "384280",
    "end": "387960"
  },
  {
    "text": "coupled with the deny effectively means",
    "start": "387960",
    "end": "391120"
  },
  {
    "text": "deny if the principle Arn is not the one",
    "start": "391120",
    "end": "395080"
  },
  {
    "text": "specified recall the multiple condition",
    "start": "395080",
    "end": "398199"
  },
  {
    "text": "context key value pairs are evaluated",
    "start": "398199",
    "end": "401479"
  },
  {
    "text": "with a logical and both of the two",
    "start": "401479",
    "end": "404840"
  },
  {
    "text": "conditions must evaluate to true for the",
    "start": "404840",
    "end": "407880"
  },
  {
    "text": "deny to take place so let's go see this",
    "start": "407880",
    "end": "410800"
  },
  {
    "text": "in action and get to our",
    "start": "410800",
    "end": "414039"
  },
  {
    "text": "demo we've set up a very simplistic",
    "start": "414199",
    "end": "416960"
  },
  {
    "text": "website to demonstrate this",
    "start": "416960",
    "end": "420520"
  },
  {
    "text": "notice when we try to access it using a",
    "start": "420520",
    "end": "423400"
  },
  {
    "text": "friendly DNS name we get a certificate",
    "start": "423400",
    "end": "426120"
  },
  {
    "text": "warning because the name associated with",
    "start": "426120",
    "end": "428759"
  },
  {
    "text": "the certificate is different from the",
    "start": "428759",
    "end": "430319"
  },
  {
    "text": "DNS name now we log into the console as",
    "start": "430319",
    "end": "433800"
  },
  {
    "text": "admin of the organization and we",
    "start": "433800",
    "end": "436720"
  },
  {
    "text": "navigate to",
    "start": "436720",
    "end": "438000"
  },
  {
    "text": "organizations policies security control",
    "start": "438000",
    "end": "440639"
  },
  {
    "text": "policies and you see I've pre-built our",
    "start": "440639",
    "end": "443639"
  },
  {
    "text": "policy which is previously discussed to",
    "start": "443639",
    "end": "446039"
  },
  {
    "text": "deny email",
    "start": "446039",
    "end": "447599"
  },
  {
    "text": "validation we now attach this to the",
    "start": "447599",
    "end": "449960"
  },
  {
    "text": "root of the organization and now all",
    "start": "449960",
    "end": "451800"
  },
  {
    "text": "principles in your organization will",
    "start": "451800",
    "end": "454479"
  },
  {
    "text": "have this effect now as a Dev SEC Ops",
    "start": "454479",
    "end": "458039"
  },
  {
    "text": "role in the production account where the",
    "start": "458039",
    "end": "459759"
  },
  {
    "text": "website is built we navigate to",
    "start": "459759",
    "end": "461560"
  },
  {
    "text": "certificate",
    "start": "461560",
    "end": "463599"
  },
  {
    "text": "manager we go to request a",
    "start": "463599",
    "end": "467720"
  },
  {
    "text": "certificate we choose a public",
    "start": "467960",
    "end": "471440"
  },
  {
    "text": "certificate hit",
    "start": "471440",
    "end": "474680"
  },
  {
    "text": "next then we add the domain name of the",
    "start": "474680",
    "end": "478039"
  },
  {
    "text": "website and we're going to check email",
    "start": "478039",
    "end": "481599"
  },
  {
    "text": "validation and we can leave the other",
    "start": "481599",
    "end": "483560"
  },
  {
    "text": "parameters as is we go to",
    "start": "483560",
    "end": "486599"
  },
  {
    "text": "request we see at the very top of the",
    "start": "486599",
    "end": "489319"
  },
  {
    "text": "screen that it is failed and this is",
    "start": "489319",
    "end": "491840"
  },
  {
    "text": "because our SCP has blocked",
    "start": "491840",
    "end": "495479"
  },
  {
    "text": "this now if we go",
    "start": "497879",
    "end": "500520"
  },
  {
    "text": "back and we select DNS",
    "start": "500520",
    "end": "504800"
  },
  {
    "text": "validated and hit",
    "start": "504800",
    "end": "508240"
  },
  {
    "text": "next",
    "start": "508240",
    "end": "509840"
  },
  {
    "text": "then we see that the request was",
    "start": "509840",
    "end": "513599"
  },
  {
    "text": "successful so if we view this",
    "start": "513599",
    "end": "516399"
  },
  {
    "text": "certificate we see that is in a pending",
    "start": "516399",
    "end": "519479"
  },
  {
    "text": "validation status this is for the DNS",
    "start": "519479",
    "end": "523719"
  },
  {
    "text": "validation once that's done we'll be",
    "start": "523720",
    "end": "526120"
  },
  {
    "text": "able to apply the sech our DNS",
    "start": "526120",
    "end": "528320"
  },
  {
    "text": "administrator has added the C Name",
    "start": "528320",
    "end": "530399"
  },
  {
    "text": "Records for the DNS Al validation and",
    "start": "530399",
    "end": "532880"
  },
  {
    "text": "now we refresh and we see that the",
    "start": "532880",
    "end": "534800"
  },
  {
    "text": "status of the cert is issued we can now",
    "start": "534800",
    "end": "537680"
  },
  {
    "text": "start using the cert",
    "start": "537680",
    "end": "539760"
  },
  {
    "text": "so we take the issued certificate we add",
    "start": "539760",
    "end": "541920"
  },
  {
    "text": "it to the website and voila we no longer",
    "start": "541920",
    "end": "545279"
  },
  {
    "text": "get a certificate warning with the",
    "start": "545279",
    "end": "546839"
  },
  {
    "text": "website and we are",
    "start": "546839",
    "end": "548440"
  },
  {
    "text": "complete let's review what we've gone",
    "start": "548440",
    "end": "550560"
  },
  {
    "text": "over number one we saw the five new",
    "start": "550560",
    "end": "554040"
  },
  {
    "text": "condition keys for",
    "start": "554040",
    "end": "555560"
  },
  {
    "text": "ACM number two we saw how the new keys",
    "start": "555560",
    "end": "559040"
  },
  {
    "text": "help govern certificate issuance in ACM",
    "start": "559040",
    "end": "562839"
  },
  {
    "text": "number three we saw an example SCP to",
    "start": "562839",
    "end": "566600"
  },
  {
    "text": "deny the use of email validation during",
    "start": "566600",
    "end": "569200"
  },
  {
    "text": "certificate",
    "start": "569200",
    "end": "570240"
  },
  {
    "text": "issuance and finally we saw a",
    "start": "570240",
    "end": "573000"
  },
  {
    "text": "demonstration of that SCP to prevent the",
    "start": "573000",
    "end": "575440"
  },
  {
    "text": "issuing of email validated certificate",
    "start": "575440",
    "end": "578120"
  },
  {
    "text": "while successfully issuing a DNS",
    "start": "578120",
    "end": "580480"
  },
  {
    "text": "validated certificate to fix our",
    "start": "580480",
    "end": "583279"
  },
  {
    "text": "website I thank you so much for your",
    "start": "583279",
    "end": "585480"
  },
  {
    "text": "time and attention I hope you learned",
    "start": "585480",
    "end": "587560"
  },
  {
    "text": "something valuable here happy building",
    "start": "587560",
    "end": "590120"
  },
  {
    "text": "on",
    "start": "590120",
    "end": "592279"
  },
  {
    "text": "AWS",
    "start": "596360",
    "end": "599360"
  }
]