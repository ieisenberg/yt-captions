[
  {
    "start": "0",
    "end": "64000"
  },
  {
    "text": "whoa wasn't ready for that good afternoon um my name is Jim sson I'm a s",
    "start": "7040",
    "end": "14960"
  },
  {
    "text": "senior principal engineer at Amazon been at Amazon for about almost 8 years now",
    "start": "14960",
    "end": "21800"
  },
  {
    "text": "as part of the team that actually uh built the original original version of S3 way back",
    "start": "21800",
    "end": "27199"
  },
  {
    "text": "when um and so today yes we're going to be talking about S3 and since this is a",
    "start": "27199",
    "end": "33280"
  },
  {
    "text": "uh considered kind of a an advanced uh Advanced uh discussion I'm going to make",
    "start": "33280",
    "end": "39040"
  },
  {
    "text": "a lot of assumptions about what you know about S3 so for example um you know S3",
    "start": "39040",
    "end": "45239"
  },
  {
    "text": "has buckets in it and you store your objects in buckets and the keys are the names that you give your objects and a",
    "start": "45239",
    "end": "52000"
  },
  {
    "text": "lot of the things like that um will just kind of um assume that we know um but uh",
    "start": "52000",
    "end": "59640"
  },
  {
    "text": "and and then we'll be talking about some of the more advanced uh topics of S3 so when I think about S3 having",
    "start": "59640",
    "end": "66840"
  },
  {
    "start": "64000",
    "end": "64000"
  },
  {
    "text": "worked on building it I think about I think about it probably in a completely different way than you do you know I",
    "start": "66840",
    "end": "71960"
  },
  {
    "text": "think about there's this billing subsystem and there's a part for doing uh repair after you know when discs fail",
    "start": "71960",
    "end": "78240"
  },
  {
    "text": "and there's a the whole request processing part of S3 and to you guys I",
    "start": "78240",
    "end": "84360"
  },
  {
    "text": "well to you guys I suspect that uh you think about it like a tool it's just this thing that you use and so I found a",
    "start": "84360",
    "end": "91200"
  },
  {
    "text": "picture of this uh thing this is a a Beckman eaten laminectomy retractor",
    "start": "91200",
    "end": "97200"
  },
  {
    "text": "right and uh it's a very specialized tool for doing uh back surgery when I",
    "start": "97200",
    "end": "102520"
  },
  {
    "text": "look at it I think probably about the only thing I could use it for is to serve salad um and so you know if you",
    "start": "102520",
    "end": "108360"
  },
  {
    "text": "have this tool this very specialized tool and you don't use it right um you know you're not going to get it's not",
    "start": "108360",
    "end": "114000"
  },
  {
    "text": "going to perform for you the way you you might need it to and S3 is kind of the same way we to get the high performance",
    "start": "114000",
    "end": "120399"
  },
  {
    "text": "High scalability out of it we have to use it uh correctly so this talk is about um using",
    "start": "120399",
    "end": "128000"
  },
  {
    "text": "uh S3 and making it scale and scaling is a is a kind of in the eye of the",
    "start": "128000",
    "end": "133599"
  },
  {
    "text": "beholder right each of you out here probably has a very very different use case for what scaling means you know",
    "start": "133599",
    "end": "140920"
  },
  {
    "text": "some of you probably have millions or even billions of objects some of you may not have a lot of objects but you have",
    "start": "140920",
    "end": "147280"
  },
  {
    "text": "really really large objects and so you're scalability to you might be btes",
    "start": "147280",
    "end": "152519"
  },
  {
    "start": "151000",
    "end": "151000"
  },
  {
    "text": "others of you probably have lots and lots of users you know millions of users coming in either putting data or getting",
    "start": "152519",
    "end": "157879"
  },
  {
    "text": "data from S3 and then there's just this bandwidth thing how do you are you know are you moving lots of btes in lots of",
    "start": "157879",
    "end": "164319"
  },
  {
    "text": "btes out of S3 and you know these things all overlap but they're all different dimensions of",
    "start": "164319",
    "end": "171680"
  },
  {
    "text": "scalability so in today's talk what I want to do is um cover essentially 10 10",
    "start": "172040",
    "end": "178080"
  },
  {
    "text": "mini talks of different things that you can do to get better performance out of S3 we're going to spend a bunch of time",
    "start": "178080",
    "end": "184440"
  },
  {
    "text": "talking about how to do uh hashing of keys and why why this is important um",
    "start": "184440",
    "end": "189680"
  },
  {
    "text": "when you have lots of or when you're managing lots of objects some a little bit about life life cycle policies again",
    "start": "189680",
    "end": "195080"
  },
  {
    "text": "for managing lots of objects multi-part upload a feature of S3 that's great for dealing with large objects um a object",
    "start": "195080",
    "end": "202720"
  },
  {
    "text": "agregation um a very uh specialized use case but if it fits your use case it's a",
    "start": "202720",
    "end": "208120"
  },
  {
    "text": "really great way to save money move data quickly um we'll talk a little bit about content distribution um server access",
    "start": "208120",
    "end": "214560"
  },
  {
    "text": "logging and and how to turn that on and why some things about bucket policies and how you can scale uh uploads to S3",
    "start": "214560",
    "end": "222519"
  },
  {
    "text": "um pre-signed URLs an extension of that and then we'll talk about two networking subjects DNS uh and time to live and a",
    "start": "222519",
    "end": "229720"
  },
  {
    "text": "little bit about Windows scaling almost a unfortunately like a network lecture",
    "start": "229720",
    "end": "234760"
  },
  {
    "text": "so let's start with a hashing of keys if my timing is right",
    "start": "234760",
    "end": "240239"
  },
  {
    "start": "235000",
    "end": "235000"
  },
  {
    "text": "it's uh oh I'm off by uh 2 minutes darn it no so if you know a lot of customers",
    "start": "240239",
    "end": "246439"
  },
  {
    "text": "store objects in S3 and give them names like this so you know here I'm showing a",
    "start": "246439",
    "end": "251760"
  },
  {
    "text": "customer is uploading data um and they're assigning keys at the current time so 2012 uh November 29th at uh 15",
    "start": "251760",
    "end": "259680"
  },
  {
    "text": "or 3:06 in the afternoon and they just assign names like this um so so you can see how um with",
    "start": "259680",
    "end": "267840"
  },
  {
    "text": "the dates and there's a problem with that that and you know if we if we assign the names like we",
    "start": "267840",
    "end": "274919"
  },
  {
    "text": "get we get performance problems um and capacity or request processing uh",
    "start": "274919",
    "end": "281360"
  },
  {
    "text": "problems let's look at or talk about why this happens because the best way to understand why something like this",
    "start": "281360",
    "end": "287240"
  },
  {
    "text": "happen is to kind of understand what's happening under the covers and to do that we need to think about some of S3's",
    "start": "287240",
    "end": "294199"
  },
  {
    "text": "features and kind of how S3 had to be built so there's three key features that",
    "start": "294199",
    "end": "299360"
  },
  {
    "start": "297000",
    "end": "297000"
  },
  {
    "text": "kind of Drive why why this is an important issue and the first is S3 has",
    "start": "299360",
    "end": "304479"
  },
  {
    "text": "no objects per bucket limit you can put a billion objects in a in a bucket you can put 10 billion objects in a bucket",
    "start": "304479",
    "end": "310440"
  },
  {
    "text": "there's no limit the other key thing that we have that we or feature that we",
    "start": "310440",
    "end": "315680"
  },
  {
    "text": "offer is that you get to list the contents of your bucket um and we give you this lexor graphical ordering of",
    "start": "315680",
    "end": "321120"
  },
  {
    "text": "what's in your bucket and then the last thing is it's fat fast and what I mean by fast really is that it's real time we",
    "start": "321120",
    "end": "328280"
  },
  {
    "text": "don't go out day later and uh make a list of your objects if you put something you expect it to be in the",
    "start": "328280",
    "end": "334360"
  },
  {
    "text": "list if you turn around and list it so we have to be fast when we do the",
    "start": "334360",
    "end": "339680"
  },
  {
    "text": "listing so one possible solution that S3 could have implemented for building the",
    "start": "340000",
    "end": "346000"
  },
  {
    "text": "index on S3 is we could have done something like distributed hash tables and you think about this has some really",
    "start": "346000",
    "end": "353039"
  },
  {
    "text": "really nice properties for for building or for uh storing objects right it scales well we add more post we can",
    "start": "353039",
    "end": "360120"
  },
  {
    "text": "distribute the the objects around so what I'm trying to represent here are some customer with yellow circles and",
    "start": "360120",
    "end": "365720"
  },
  {
    "text": "all their objects and some customer with their their Reds or orange stars and so on but a distributed hashing actually",
    "start": "365720",
    "end": "374280"
  },
  {
    "text": "won't work for S3 and the reason that it won't work is because we have this requirement that we allow you to list",
    "start": "374280",
    "end": "379800"
  },
  {
    "text": "your objects and so if we have you know in this example five host but if we have hundreds or thousands of servers and",
    "start": "379800",
    "end": "386520"
  },
  {
    "text": "your keys are distributed over all those servers if we list your object maybe we could uh enlist the resources of the",
    "start": "386520",
    "end": "393400"
  },
  {
    "text": "entire fleet of machines to go look up your objects but when your neighbor wants to do the same thing at the same time obviously we're going to have a",
    "start": "393400",
    "end": "399960"
  },
  {
    "text": "problem so distributed hash tables is not a viable solution for for partitioning S3's",
    "start": "399960",
    "end": "406520"
  },
  {
    "text": "keys so maybe we could Partition by bucket right this also has some really nice properties um it gives us isolation",
    "start": "406520",
    "end": "413360"
  },
  {
    "text": "all of the yellow customers uh keys can be in one place and and so now listing",
    "start": "413360",
    "end": "419000"
  },
  {
    "text": "gets to be much easier um but this violates our requirement that we allow you to put as many objects in a bucket",
    "start": "419000",
    "end": "425919"
  },
  {
    "text": "as you as you want because if I build a partition and you put a billion at some",
    "start": "425919",
    "end": "431720"
  },
  {
    "text": "point whether it's a million a billion at some point that partition is going to be full it won't ex uh be able to be on",
    "start": "431720",
    "end": "438639"
  },
  {
    "text": "a single host or however you want however that um that partition is actually",
    "start": "438639",
    "end": "443759"
  },
  {
    "text": "implemented so what do we really do so here's what here's kind of how S3",
    "start": "443759",
    "end": "449560"
  },
  {
    "text": "read does its partitioning and I kind of show this rainbow here this is kind of to represent your key space you know the",
    "start": "449560",
    "end": "455479"
  },
  {
    "text": "things that are starting at a or what however you're naming them on the left in red and and going through time to to",
    "start": "455479",
    "end": "462680"
  },
  {
    "text": "the purple so the problem is if you use a",
    "start": "462680",
    "end": "468680"
  },
  {
    "text": "key naming technique like the the date based one that we were showing what happens is all your puts end up hitting",
    "start": "468680",
    "end": "475560"
  },
  {
    "text": "that logical partition um in one spot and this part um has finite capacity um to take",
    "start": "475560",
    "end": "482840"
  },
  {
    "text": "requests and will overload this partition the other thing that happens",
    "start": "482840",
    "end": "488039"
  },
  {
    "text": "is this partition will continue to grow and at some point S3 has to split it off",
    "start": "488039",
    "end": "494000"
  },
  {
    "text": "and put it someplace there break the partition there's a couple of problems with that one is that if you're naming",
    "start": "494000",
    "end": "500000"
  },
  {
    "text": "your keys and you're putting lots of objects in at in this partition um when",
    "start": "500000",
    "end": "505680"
  },
  {
    "text": "we do decide to partition we're going to be competing with you you know you were trying to drive this partition as fast",
    "start": "505680",
    "end": "511120"
  },
  {
    "text": "as you could to get your data in and all of a sudden now we come along we say hey you've got way too many keys in this",
    "start": "511120",
    "end": "516680"
  },
  {
    "text": "we've got to split it up so now we contend with I/O and you get a bad experience so this is uh so we need a",
    "start": "516680",
    "end": "524480"
  },
  {
    "text": "solution to this problem and one of the solutions we recommend for you guys is you know to",
    "start": "524480",
    "end": "530600"
  },
  {
    "text": "you can continue to name your objects like this but what we want you to do is add some entropy to the to the Keys and",
    "start": "530600",
    "end": "537640"
  },
  {
    "text": "what what we're showing here is is I've taken that key name the the date along with the customer ID and computed a a",
    "start": "537640",
    "end": "544680"
  },
  {
    "text": "hash an md5 hash and I take four digits from the end of the hash I believe it",
    "start": "544680",
    "end": "550000"
  },
  {
    "text": "was um and assign that to the uh to the prefix of the key and what this does is",
    "start": "550000",
    "end": "555760"
  },
  {
    "text": "it allows us to uh uh insert the keys with more entropy into the space so let's go back and look at our our kind",
    "start": "555760",
    "end": "562440"
  },
  {
    "text": "of partition space now instead of when you're inserting instead of having just the capacity uh to put into partition D",
    "start": "562440",
    "end": "570320"
  },
  {
    "text": "we can put into partitions a through uh a through D and for this particular uh",
    "start": "570320",
    "end": "575360"
  },
  {
    "text": "customer they've essentially uh quadrupled their capacity to put data to to into S3 the number of requests per",
    "start": "575360",
    "end": "582560"
  },
  {
    "text": "second that it'll support now you know as time goes on these partitions will continue to grow and we still have to at",
    "start": "582560",
    "end": "590640"
  },
  {
    "text": "some point you know maybe in this case partition C got full and we've decided for whatever reason it might be that",
    "start": "590640",
    "end": "596880"
  },
  {
    "text": "it's time to partition partition it now we're in a much better position uh",
    "start": "596880",
    "end": "602120"
  },
  {
    "text": "S3 is in a better position um to do this partitioning because you're not contending with the io on that partition",
    "start": "602120",
    "end": "609040"
  },
  {
    "text": "in the same way that if you were doing it all in one spot so when we do this partition you probably won't even notice",
    "start": "609040",
    "end": "615360"
  },
  {
    "text": "that it's happening um because your load is now uh spread across all these",
    "start": "615360",
    "end": "621440"
  },
  {
    "text": "partitions um another common technique that we see customers uh name naming",
    "start": "621440",
    "end": "627399"
  },
  {
    "text": "their object and it's the exact same problem is that they may use a sequence number like say from their their",
    "start": "627399",
    "end": "633440"
  },
  {
    "text": "database the index column from their database a monotonically increasing sequence um and name the objects and put",
    "start": "633440",
    "end": "639600"
  },
  {
    "text": "them in S3 like that one solution that's uh I don't know if you want to call it clever is um to reverse those digits",
    "start": "639600",
    "end": "646519"
  },
  {
    "text": "move the entropy towards the more towards the prefix of the key and now when you the um you store those objects",
    "start": "646519",
    "end": "655000"
  },
  {
    "text": "um they get spread over the partition um one one point that I should make about this is that you know I",
    "start": "655000",
    "end": "662959"
  },
  {
    "text": "should give guidance as to when is this something that you need to do and kind",
    "start": "662959",
    "end": "668320"
  },
  {
    "text": "of our guidance for this is that if you're putting less than 50 objects per second away you don't have to worry",
    "start": "668320",
    "end": "673839"
  },
  {
    "text": "about any of this just continue to do what whatever you want to do we have sufficient capacity to handle that load",
    "start": "673839",
    "end": "679680"
  },
  {
    "text": "no problem if you're doing over about a 100 objects per second putting objects per second you really need to start",
    "start": "679680",
    "end": "685920"
  },
  {
    "text": "looking at this because it will give you much better performance um and if you're in that 50 to 100",
    "start": "685920",
    "end": "692560"
  },
  {
    "text": "requests per second you probably should look at a a scheme like this because first of all if you're at 50 to 100 it",
    "start": "692560",
    "end": "699240"
  },
  {
    "text": "doesn't take much to go from 100 to 200 does it I mean customers come and go and so on um and it's I mean it's just a",
    "start": "699240",
    "end": "706680"
  },
  {
    "text": "better long-term scaling solution for you so really above 50 requests per second one should look at uh uh naming",
    "start": "706680",
    "end": "713320"
  },
  {
    "text": "scheme like this okay so life cycle",
    "start": "713320",
    "end": "720399"
  },
  {
    "start": "719000",
    "end": "719000"
  },
  {
    "text": "policies um recently S3 launched um the archival object archival policy which is",
    "start": "720399",
    "end": "728200"
  },
  {
    "text": "um integration with Glacier um hopefully you guys have a chance to attend one of",
    "start": "728200",
    "end": "733480"
  },
  {
    "text": "the glacier talks um and the object archival is a is a way of transitioning",
    "start": "733480",
    "end": "739680"
  },
  {
    "text": "your objects from S3 into into Glacier and then paying the glacier storage",
    "start": "739680",
    "end": "744839"
  },
  {
    "text": "rates um this talk is really more about scalability and so I want to get back to",
    "start": "744839",
    "end": "750720"
  },
  {
    "text": "the idea of having lots of objects and in that that realm object exploration is",
    "start": "750720",
    "end": "756040"
  },
  {
    "text": "is really kind of important for this so if you're managing millions or billions of objects um actually deleting them can",
    "start": "756040",
    "end": "762760"
  },
  {
    "text": "be a Troublesome some task so what we've implemented um about a year and a half",
    "start": "762760",
    "end": "770399"
  },
  {
    "text": "or so ago was this the the object expiration and the idea here is that you",
    "start": "770399",
    "end": "776000"
  },
  {
    "text": "set a policy on your bucket to have S3 automatically do the object removal for",
    "start": "776000",
    "end": "781160"
  },
  {
    "text": "you and so I'm showing a an example of a single rule for a bucket and there's",
    "start": "781160",
    "end": "786720"
  },
  {
    "text": "kind of three key pieces of information here that we concern ourselves with the first is we allow you to name this",
    "start": "786720",
    "end": "791959"
  },
  {
    "text": "policy you so well you know this is essentially just information for you uh here my is my 30-day log object expire",
    "start": "791959",
    "end": "799680"
  },
  {
    "text": "rule there's two pieces of information that S3 needs to operate on one is um a",
    "start": "799680",
    "end": "805720"
  },
  {
    "text": "a prefix the this these are the set of keys in your bucket that um this R rule",
    "start": "805720",
    "end": "811720"
  },
  {
    "text": "will affect so here I'm saying anything in my bucket that starts with log slash",
    "start": "811720",
    "end": "816760"
  },
  {
    "text": "um will be affected by this rule the slash is kind of important um you know",
    "start": "816760",
    "end": "822160"
  },
  {
    "text": "S3 doesn't really have directories and file or file directories like a file system has it just has names so if you",
    "start": "822160",
    "end": "830240"
  },
  {
    "text": "said log and then you put something in your bucket that just started with the word log like I don't know uh logger",
    "start": "830240",
    "end": "836720"
  },
  {
    "text": "jpeg um that object would be effective by this rule so it's important to put the",
    "start": "836720",
    "end": "842440"
  },
  {
    "text": "slash um and then the other key piece of information that you have to tell S3 is how long do you want these objects to",
    "start": "842440",
    "end": "848680"
  },
  {
    "text": "stick around for and in this case we're saying for 30 days um yeah",
    "start": "848680",
    "end": "855240"
  },
  {
    "text": "so um one of the things that we can that that customers will use this feature for too that's that's kind of kind of neat",
    "start": "855240",
    "end": "862759"
  },
  {
    "text": "is like if you have a bunch of thumbnails say and you decide I need to re resize them rescale them and then you",
    "start": "862759",
    "end": "869720"
  },
  {
    "text": "want to get rid of the old ones say you have millions of of these thumbnails what you can do is rescale them to a new",
    "start": "869720",
    "end": "876480"
  },
  {
    "text": "bucket um put them in the bucket when you're happy with the the outcome of that that transcoding you can turn",
    "start": "876480",
    "end": "882480"
  },
  {
    "text": "around and put a zero day life cycle policy on the original bucket and S3 will take care of the cleanup for you",
    "start": "882480",
    "end": "888440"
  },
  {
    "text": "and you know as soon as the life cycle policy goes into effect we quit billing you for those objects and we'll delete",
    "start": "888440",
    "end": "893759"
  },
  {
    "text": "them um in the very near future so one of the things about",
    "start": "893759",
    "end": "899639"
  },
  {
    "text": "so um every every feature that we have in S3 is accessible via the API there's",
    "start": "899639",
    "end": "906160"
  },
  {
    "text": "some rest call that you can make to set up the life cycle policy or you can go through something like our um uh the AWS",
    "start": "906160",
    "end": "913560"
  },
  {
    "text": "management Council and this is a just a screen capture of me setting up a a life cycle rule in the in the console much",
    "start": "913560",
    "end": "920279"
  },
  {
    "text": "easier way to do the one-off thing once it's set it's set forever next like to talk a little bit",
    "start": "920279",
    "end": "927959"
  },
  {
    "start": "925000",
    "end": "925000"
  },
  {
    "text": "about multi-art upload so multiart uploads a feature that's",
    "start": "927959",
    "end": "934639"
  },
  {
    "text": "been in S3 for about a little over two years now um and before we had multi-art",
    "start": "934639",
    "end": "941800"
  },
  {
    "text": "upload you know if I had a big object and we could store up to 5 gig objects without multiart um what you'd have to",
    "start": "941800",
    "end": "949120"
  },
  {
    "text": "do is start at the beginning of your object and you know kind of walk through it uh uploading it to",
    "start": "949120",
    "end": "954839"
  },
  {
    "text": "S3 and more often than than we would like and I'm sure that you would like",
    "start": "954839",
    "end": "960279"
  },
  {
    "text": "these transfers for some reason would get aborted um and then you'd have to start over again not not a not a great",
    "start": "960279",
    "end": "967160"
  },
  {
    "text": "experience so that was one of the motivations for building multi-art upload it also lets us um store much",
    "start": "967160",
    "end": "973560"
  },
  {
    "text": "much larger objects in S3 and the idea is that you simply take your object your big object and you logically break it up",
    "start": "973560",
    "end": "980720"
  },
  {
    "text": "into some number of pieces now we really recommend that you do about 100",
    "start": "980720",
    "end": "986040"
  },
  {
    "text": "megabytes per chunk that's a it's a reasonable number for um um if you have",
    "start": "986040",
    "end": "992160"
  },
  {
    "text": "to restart um and it lets you put build you know relatively large objects um the",
    "start": "992160",
    "end": "999000"
  },
  {
    "text": "the multi-art upload will support up to 10,000 Parts on a on a multi-part upload",
    "start": "999000",
    "end": "1004680"
  },
  {
    "text": "so you can actually get really large objects using this the other really nice thing that",
    "start": "1004680",
    "end": "1010000"
  },
  {
    "text": "multiart gives you is if one of these parts does fail its upload for whatever reason um you simply have to reconstruct",
    "start": "1010000",
    "end": "1016880"
  },
  {
    "text": "or re-upload that that Single part and at the end then assemble the object from there so it lets you recover from failed",
    "start": "1016880",
    "end": "1023639"
  },
  {
    "text": "puts much much nicer than the original uh scheme another thing that multiart does",
    "start": "1023639",
    "end": "1030760"
  },
  {
    "text": "for us that we um couldn't do before in S3 is allow you to store objects in S3",
    "start": "1030760",
    "end": "1037079"
  },
  {
    "text": "before you know how large they are um typically the when you do a put you have",
    "start": "1037079",
    "end": "1042280"
  },
  {
    "text": "to include the content length into into the requests that you send to S3 but",
    "start": "1042280",
    "end": "1047360"
  },
  {
    "text": "using multipart what you can do is um say I'm building a log file a large log file and in this example I've shown that",
    "start": "1047360",
    "end": "1054039"
  },
  {
    "text": "I've uploaded already uploaded two of my chunks or parts and I have three in progress and I don't know how long this",
    "start": "1054039",
    "end": "1060200"
  },
  {
    "text": "object is going to be but I have to know how large each chunk is at the end when",
    "start": "1060200",
    "end": "1065320"
  },
  {
    "text": "I say okay this log file is finished maybe it's at the end of the day whatever it may be I assemble the object",
    "start": "1065320",
    "end": "1070880"
  },
  {
    "text": "and at that point S3 knows how big your object is and we'll store it off away so so it um another nice feature that",
    "start": "1070880",
    "end": "1077760"
  },
  {
    "text": "multiart will give you",
    "start": "1077760",
    "end": "1080840"
  },
  {
    "text": "another another uh tip or trick that one can use and this is this is kind of a",
    "start": "1083840",
    "end": "1090240"
  },
  {
    "text": "specialized uh case is this idea of object agregation if you have millions",
    "start": "1090240",
    "end": "1095799"
  },
  {
    "text": "and millions of of objects and they're all relatively small um there's a couple",
    "start": "1095799",
    "end": "1101320"
  },
  {
    "text": "of problems that uh that can happen well not really problems but it can take a really long",
    "start": "1101320",
    "end": "1106640"
  },
  {
    "text": "time to upload these um and then there are upload requests uh you have to pay for a request for each object that you",
    "start": "1106640",
    "end": "1113360"
  },
  {
    "text": "upload so if you have these objects and say they they're uh fixed size or maybe 1K for example what you can do is you",
    "start": "1113360",
    "end": "1121120"
  },
  {
    "text": "can aggregate those together and put them into one large object so say you have a million objects in their 1K that",
    "start": "1121120",
    "end": "1127880"
  },
  {
    "text": "that object would be 1 Gigabyte that's that's uh not an unreasonable size to",
    "start": "1127880",
    "end": "1133679"
  },
  {
    "text": "upload um and then you can take that aggregate or you can use multi-part upload again to upload these objects and",
    "start": "1133679",
    "end": "1139960"
  },
  {
    "text": "store it in S3 once it's in S3 because um again I",
    "start": "1139960",
    "end": "1145919"
  },
  {
    "text": "say this is a a specialized use case but it's actually relatively common um for",
    "start": "1145919",
    "end": "1151480"
  },
  {
    "text": "example spriting on a web page would be uh one of the ways that you might take advantage of this um but you can pull",
    "start": "1151480",
    "end": "1158120"
  },
  {
    "text": "that object out of using range get out of the middle of that aggregated object so now you've only paid for the uh put",
    "start": "1158120",
    "end": "1164840"
  },
  {
    "text": "request for a single object and but you still have your millions of object objects accessible as individual objects",
    "start": "1164840",
    "end": "1171480"
  },
  {
    "text": "you just need to use range gets to get them so again uh kind of a very special",
    "start": "1171480",
    "end": "1177120"
  },
  {
    "text": "use case uh but really awesome if you can take advantage of it um moving on content",
    "start": "1177120",
    "end": "1186000"
  },
  {
    "text": "distribution lots and lots of customers use S3 for Content distribution for all different kinds of of use cases and",
    "start": "1186000",
    "end": "1194919"
  },
  {
    "text": "um you know this is this is a typical uh histogram of uh the popularity of an object for",
    "start": "1194919",
    "end": "1201400"
  },
  {
    "text": "Content distribution where the uh y- axis is showing how many times the object was fetched and the x-axis is",
    "start": "1201400",
    "end": "1207919"
  },
  {
    "text": "your number of objects um and so this is a very typical typical curve lots of",
    "start": "1207919",
    "end": "1213480"
  },
  {
    "text": "objects are fetched frequently and then you have this really long tail of objects that are uh fetched less",
    "start": "1213480",
    "end": "1220240"
  },
  {
    "text": "frequently an S3 is really really good to use down on this part of of the curve",
    "start": "1220240",
    "end": "1226960"
  },
  {
    "text": "um you know if say the object is fetched once a day or once maybe even once an",
    "start": "1226960",
    "end": "1232080"
  },
  {
    "text": "hour um you know it's the kind of thing that that um would be served well from",
    "start": "1232080",
    "end": "1237440"
  },
  {
    "text": "S3 because even if you put it in front of cloudfront cloudfront if it's aged out of cloudfronts cache it has to go to",
    "start": "1237440",
    "end": "1243880"
  },
  {
    "text": "F S3 to get the object anyways so um the first fetch from cloudfront is actually",
    "start": "1243880",
    "end": "1249559"
  },
  {
    "text": "slightly slightly longer so but cloudfront is really good to use on this",
    "start": "1249559",
    "end": "1255320"
  },
  {
    "text": "part of the curve where you store your content in S3 and um put cloud front in front of it um",
    "start": "1255320",
    "end": "1261960"
  },
  {
    "text": "so for the really popular objects and the Very cachable object this works out as as a really good",
    "start": "1261960",
    "end": "1268000"
  },
  {
    "text": "solution and so you know if I was running a uh large medical supply place",
    "start": "1268000",
    "end": "1274080"
  },
  {
    "text": "I could imagine that surgical gloves are sold quite frequently um and uh and my",
    "start": "1274080",
    "end": "1281200"
  },
  {
    "text": "Beckman eaten lemon ectomy retractor I if I had to learn how to use it I was going to use that picture more than once",
    "start": "1281200",
    "end": "1287720"
  },
  {
    "text": "um would be popular and probably um would be a good object to uh like image",
    "start": "1287720",
    "end": "1293159"
  },
  {
    "text": "to store in S3 versus the more popular content another reason why you might",
    "start": "1293159",
    "end": "1298440"
  },
  {
    "text": "want to put um Cloud front in front of or use cloud front is that if you you're",
    "start": "1298440",
    "end": "1304559"
  },
  {
    "text": "sensitive to the latency that it takes to get objects from S3 so for example",
    "start": "1304559",
    "end": "1309799"
  },
  {
    "text": "the the roundtrip latency from Seattle to Washington DC is typically about 68",
    "start": "1309799",
    "end": "1315320"
  },
  {
    "text": "milliseconds it varies sometimes depending on the internet and how the routes are set up but this is about a a",
    "start": "1315320",
    "end": "1321600"
  },
  {
    "text": "typical round trip time if you're sensitive to that you know 68 milliseconds can be a short period of",
    "start": "1321600",
    "end": "1327159"
  },
  {
    "text": "time for some people and it can be a really long time for other customers um you know cloudfront is a is a good",
    "start": "1327159",
    "end": "1333600"
  },
  {
    "text": "solution then to to use this um these stars are just showing some of the pops",
    "start": "1333600",
    "end": "1338960"
  },
  {
    "text": "or points of presence that cloudfront has in the US it gets you much closer to your",
    "start": "1338960",
    "end": "1345158"
  },
  {
    "start": "1346000",
    "end": "1346000"
  },
  {
    "text": "customers server access law logging um there's not a lot to say here other than",
    "start": "1346559",
    "end": "1352600"
  },
  {
    "text": "you guys should turn it on um cver access logging is like the Apache access",
    "start": "1352600",
    "end": "1357640"
  },
  {
    "text": "log it's got a little bit more information in it about like bucket owner and things like that so that we can guarantee we're sending these access",
    "start": "1357640",
    "end": "1364679"
  },
  {
    "text": "logs to the correct customer um but they really uh help can help you um debug",
    "start": "1364679",
    "end": "1372000"
  },
  {
    "text": "your problems and they're invaluable for us um if you if you are experiencing",
    "start": "1372000",
    "end": "1377120"
  },
  {
    "text": "problems there's request ID s in those files that we need to look up to um assist you in debugging problems um here",
    "start": "1377120",
    "end": "1384520"
  },
  {
    "text": "I'm just showing a a screen capture again from the management Council where we're setting up bucket logging for um",
    "start": "1384520",
    "end": "1390600"
  },
  {
    "text": "for my particular bucket um apparently my example log bucket is no longer available I own it um and what we're",
    "start": "1390600",
    "end": "1397640"
  },
  {
    "text": "doing here is just saying the prefixes uh where the S3 will write the",
    "start": "1397640",
    "end": "1402720"
  },
  {
    "text": "logs for this file next bucket",
    "start": "1402720",
    "end": "1409679"
  },
  {
    "start": "1407000",
    "end": "1407000"
  },
  {
    "text": "policies so bucket policies um is a fairly Rich Access Control Management uh",
    "start": "1409679",
    "end": "1418039"
  },
  {
    "text": "system that that you uh associate with each of your buckets and what's really",
    "start": "1418039",
    "end": "1423120"
  },
  {
    "text": "good for is um granting access or a great use case for it is to Grant access",
    "start": "1423120",
    "end": "1428640"
  },
  {
    "text": "to say your partners um where you set up a policy that would let your partner put",
    "start": "1428640",
    "end": "1435360"
  },
  {
    "text": "objects into a certain bucket or um you may have an outgoing bucket where you allow your partners to get the data out",
    "start": "1435360",
    "end": "1441480"
  },
  {
    "text": "of the S3 and the reason that that there's a couple things I keep I talk about Partners here and the reason that",
    "start": "1441480",
    "end": "1448200"
  },
  {
    "text": "I say that is you know when I think about Partners or our business partners",
    "start": "1448200",
    "end": "1454000"
  },
  {
    "text": "you know we typically don't have millions of them we have thousands of them maybe um and you can have up to a",
    "start": "1454000",
    "end": "1460520"
  },
  {
    "text": "thousand policies or uh rules in the bucket policy and you can have a 100 buckets per account so you can really",
    "start": "1460520",
    "end": "1467240"
  },
  {
    "text": "set up and manage up to about 100,000 um of these uh policies for your buckets so",
    "start": "1467240",
    "end": "1473399"
  },
  {
    "text": "if you have millions of customers this technique isn't going to work but the other thing that's really nice about it",
    "start": "1473399",
    "end": "1479320"
  },
  {
    "text": "is once you grant access you don't have to manage the credentials on your partners they just have to be AWS",
    "start": "1479320",
    "end": "1485080"
  },
  {
    "text": "customers they have their own credentials and you just identify and say Hey you know you you have access to",
    "start": "1485080",
    "end": "1490880"
  },
  {
    "text": "in this case my incoming bucket another thing that's uh really",
    "start": "1490880",
    "end": "1496039"
  },
  {
    "text": "nice about doing the bucket policies is you can uh allow your partner access to to put",
    "start": "1496039",
    "end": "1501679"
  },
  {
    "text": "or get from a bucket and um delegate or have that that partner set up IM users",
    "start": "1501679",
    "end": "1509000"
  },
  {
    "text": "for themselves and they can manage those keys and the users and still have access",
    "start": "1509000",
    "end": "1514600"
  },
  {
    "text": "to the bucket so now you can scale even Beyond those numbers of partners by using the IM",
    "start": "1514600",
    "end": "1520639"
  },
  {
    "start": "1522000",
    "end": "1522000"
  },
  {
    "text": "users so so the other problem though is sometimes um you you you have customers",
    "start": "1522279",
    "end": "1529120"
  },
  {
    "text": "more you know millions of customers than you need to uh make this work and pre-sign URLs is a great way to do that",
    "start": "1529120",
    "end": "1536360"
  },
  {
    "text": "so here's a typical um typical case where you've got many many customers say",
    "start": "1536360",
    "end": "1541520"
  },
  {
    "text": "there's millions of customers and they're trying to upload data into S3 so they would come through the internet and",
    "start": "1541520",
    "end": "1548000"
  },
  {
    "text": "at that point once once the traffic arrives at your service you need to have a fat enough pipe to be able to take all",
    "start": "1548000",
    "end": "1554799"
  },
  {
    "text": "that inbound traffic from all your customers and send it to your service and then you need another outbound pipe",
    "start": "1554799",
    "end": "1561039"
  },
  {
    "text": "that's just as fat to send it back out to the internet and get it to S3 now you know you could run this",
    "start": "1561039",
    "end": "1568480"
  },
  {
    "text": "service inside of ec2 um but you still have a problem and that is that you have to have enough ec2",
    "start": "1568480",
    "end": "1575200"
  },
  {
    "text": "capacity to support that fat pipe into the ec2 instances so you know if you're",
    "start": "1575200",
    "end": "1580520"
  },
  {
    "text": "doing gigabits of traffic per second you're going to need a lot of ec2 instances to take that traffic in to",
    "start": "1580520",
    "end": "1586960"
  },
  {
    "text": "proxy it down to S3 three so one possible solution that we",
    "start": "1586960",
    "end": "1592279"
  },
  {
    "text": "absolutely do not recommend but kind of gets the concept across is that you could take your key your access",
    "start": "1592279",
    "end": "1598640"
  },
  {
    "text": "credentials and send them off to your customers right they could sign the request and I mean you'd obviously do",
    "start": "1598640",
    "end": "1603880"
  },
  {
    "text": "this all in JavaScript inside browser Pages or something like that you wouldn't expect millions of people to",
    "start": "1603880",
    "end": "1609159"
  },
  {
    "text": "actually start uh writing code to uh to interact with the API but so you could",
    "start": "1609159",
    "end": "1616760"
  },
  {
    "text": "send them these keys they could sign the request and now they make the requests into the internet and it Go the only fat",
    "start": "1616760",
    "end": "1623080"
  },
  {
    "text": "pipe that we have to have is that F fat pipe to S3 which we already have so a really good way to do solve",
    "start": "1623080",
    "end": "1632159"
  },
  {
    "text": "this problem is to have your service generate pre-signed URLs so inside the",
    "start": "1632159",
    "end": "1638320"
  },
  {
    "text": "customer page you embed this URL that's signed with your credentials that allows",
    "start": "1638320",
    "end": "1643919"
  },
  {
    "text": "the customer to send the request to S3 that says Hey I want this object store in this par with this particular name in",
    "start": "1643919",
    "end": "1650840"
  },
  {
    "text": "my bucket you own the object you actually can set up the access control policies in the pre-signed URL and so on",
    "start": "1650840",
    "end": "1657880"
  },
  {
    "text": "and so all you need now is a really really thin pipe to your customer to say",
    "start": "1657880",
    "end": "1662960"
  },
  {
    "text": "hey this is the the presson URL to use so uh a great way to scale um um up",
    "start": "1662960",
    "end": "1670799"
  },
  {
    "text": "large uploads to S3",
    "start": "1670799",
    "end": "1676240"
  },
  {
    "start": "1675000",
    "end": "1675000"
  },
  {
    "text": "next um DNS time to live this is this is a issue that that uh bites customers",
    "start": "1676760",
    "end": "1684760"
  },
  {
    "text": "more often than we would like and uh um so I I I want to make a point of this is",
    "start": "1684760",
    "end": "1691600"
  },
  {
    "text": "one of the things that hopefully you guys walk away from this talk with and remember it because and it's not just applicable to S3 um but a couple of key",
    "start": "1691600",
    "end": "1699840"
  },
  {
    "text": "points first of all S3 has many many many IP addresses and these IP addresses",
    "start": "1699840",
    "end": "1705080"
  },
  {
    "text": "come and go all the time you know we're we're upgrading software and we may uh take some IPS out or or um you know",
    "start": "1705080",
    "end": "1712039"
  },
  {
    "text": "there could be power failures on a particular uh uh room or whatever these",
    "start": "1712039",
    "end": "1717240"
  },
  {
    "text": "IP addresses come and go and we're managing weights and things like that um another key point is DNS resolution is",
    "start": "1717240",
    "end": "1724240"
  },
  {
    "text": "cached the isps cach it your services cach it so it's cached all through the",
    "start": "1724240",
    "end": "1730640"
  },
  {
    "text": "the uh the request path S3 actually publishes our dnst ttls at 60 seconds so",
    "start": "1730640",
    "end": "1737799"
  },
  {
    "text": "with means is that um if there is a problem on on IP for about 60 seconds",
    "start": "1737799",
    "end": "1742840"
  },
  {
    "text": "it's possible that we would be serving that that DNS address up and um it would be unavailable if we make the time",
    "start": "1742840",
    "end": "1749840"
  },
  {
    "text": "smaller most isps don't honor the TTL if we make it longer you get a worse",
    "start": "1749840",
    "end": "1755000"
  },
  {
    "text": "experience so 60 seconds is about this the the fastest we can time these out um",
    "start": "1755000",
    "end": "1761080"
  },
  {
    "text": "and then the other other point is you know S3 has a service uh SLA we have an availability SLA but we don't have an",
    "start": "1761080",
    "end": "1768120"
  },
  {
    "text": "ail or an SLA on our IP addresses so it's really important to uh remember that and the reason I bring this up is",
    "start": "1768120",
    "end": "1776320"
  },
  {
    "text": "that Java in particular is really bad about this they have this caching behavior and there's a system property",
    "start": "1776320",
    "end": "1782799"
  },
  {
    "text": "called Network address. C.L this is taken directly from uh the jvm uh",
    "start": "1782799",
    "end": "1789679"
  },
  {
    "text": "documentation and uh they set the default to minus1 that default of minus",
    "start": "1789679",
    "end": "1794720"
  },
  {
    "text": "one means cash forever and the reason that this is bad is that you let's say you have a tomcat server that's um doing",
    "start": "1794720",
    "end": "1803159"
  },
  {
    "text": "or running your site and you upload data or get data from S3 in this Tomcat",
    "start": "1803159",
    "end": "1809080"
  },
  {
    "text": "server you know you can be running for weeks and weeks and weeks and our IP addresses has been stable your your",
    "start": "1809080",
    "end": "1815320"
  },
  {
    "text": "Tomcat has cached that IP and then we for whatever reason need to do maintenance on that that particular",
    "start": "1815320",
    "end": "1820640"
  },
  {
    "text": "piece of hardware and we take that IP away you will see S3 or your Tomcat server will think S3 is down because",
    "start": "1820640",
    "end": "1827399"
  },
  {
    "text": "it's trying to talk to an IP address that is giving you connection refused um",
    "start": "1827399",
    "end": "1833039"
  },
  {
    "text": "so this is this is uh um I think this was a mistake to make this the default",
    "start": "1833039",
    "end": "1838240"
  },
  {
    "text": "Behavior but it is the default behavior and you need to be aware of it and really uh set that value to something",
    "start": "1838240",
    "end": "1843559"
  },
  {
    "text": "more reasonable to stay out of uh out of trouble like",
    "start": "1843559",
    "end": "1848600"
  },
  {
    "start": "1849000",
    "end": "1849000"
  },
  {
    "text": "that so let's see so the kind of the last thing that I was going to talk",
    "start": "1849039",
    "end": "1854080"
  },
  {
    "text": "about today is TCP window scaling and this this is not something that's um unique to S3 Windows scaling is um kind",
    "start": "1854080",
    "end": "1862880"
  },
  {
    "text": "of a tricky thing to get right and I'm going to turn this a little bit into a kind of a networking lecture so the",
    "start": "1862880",
    "end": "1870760"
  },
  {
    "text": "networking Engineers have this concept of this thing called uh a bandwidth delay product and what that is is simply",
    "start": "1870760",
    "end": "1877600"
  },
  {
    "text": "the uh uh the product of the speed that your internet connection is going and",
    "start": "1877600",
    "end": "1882960"
  },
  {
    "text": "how far away the receiver or the transmitter and receiver are so in this example example if I have a T1 line",
    "start": "1882960",
    "end": "1890440"
  },
  {
    "text": "which moves data at 1.54 megabits a second and they're 100 milliseconds away",
    "start": "1890440",
    "end": "1895760"
  },
  {
    "text": "the delay uh the bandwidth delay product is about 18.8 kilobytes after you",
    "start": "1895760",
    "end": "1901080"
  },
  {
    "text": "convert from bits to bytes and and and to divide by 10 24 so not a very large",
    "start": "1901080",
    "end": "1907320"
  },
  {
    "text": "number if I have a fat pipe and I'm relatively close say I have one gigabit land and I'm 1 millisecond away the",
    "start": "1907320",
    "end": "1914399"
  },
  {
    "text": "delay bandwidth is 122 kilobytes and you know to take it to the extreme",
    "start": "1914399",
    "end": "1920559"
  },
  {
    "text": "if I have a 1 gbyte um with 100 milliseconds I can put 12 almost 12 megabytes into that pipe um or the delay",
    "start": "1920559",
    "end": "1929240"
  },
  {
    "text": "bandwidth so why is this important um this is a uh",
    "start": "1929240",
    "end": "1935880"
  },
  {
    "text": "diagram of a TCP header and the thing I've highlighted in pink or orange I guess whatever color is uh the window",
    "start": "1935880",
    "end": "1943480"
  },
  {
    "text": "value and it's a 16bit quantity so 16 bits allows you to store a number between 0 and",
    "start": "1943480",
    "end": "1950760"
  },
  {
    "text": "65,536 or 64k and what that number is is how much data um the receiver is willing to or",
    "start": "1950760",
    "end": "1959519"
  },
  {
    "text": "the the transmitter will be buffering waiting for acts from the customer so how again why does this",
    "start": "1959519",
    "end": "1967360"
  },
  {
    "text": "matter so if I have a big fat pipe and I'm uh a good distance away from my",
    "start": "1967360",
    "end": "1975880"
  },
  {
    "text": "customer I can with a a window of 64 bits I can put only uh",
    "start": "1975880",
    "end": "1982840"
  },
  {
    "text": "64k of data in the pipe and I have to wait for that to get transmitted all the way down and for the acknowledgement to",
    "start": "1982840",
    "end": "1988559"
  },
  {
    "text": "come back from my customer before that data um before I can start sending more data so in this example I have a 1 gbit",
    "start": "1988559",
    "end": "1996159"
  },
  {
    "text": "link and the best I'm going to be able to transmit data through because of the distance is",
    "start": "1996159",
    "end": "2001639"
  },
  {
    "text": "640k not a very efficient use of this resource",
    "start": "2001639",
    "end": "2007200"
  },
  {
    "text": "so um you know and when when the Internet Was Made 64k windows that was a",
    "start": "2009000",
    "end": "2014200"
  },
  {
    "text": "huge thing to do today um there were few years quite a few years ago they came up",
    "start": "2014200",
    "end": "2020480"
  },
  {
    "text": "this uh uh concept of TCP window scaling and what that means is that when two uh",
    "start": "2020480",
    "end": "2029000"
  },
  {
    "text": "sockets um initiate a connection they negotiated at the beginning of the connection during the sin packets a",
    "start": "2029000",
    "end": "2035120"
  },
  {
    "text": "window scale and that window scale says hey this is instead of being 0 to 64k",
    "start": "2035120",
    "end": "2040639"
  },
  {
    "text": "I'm going to actually shift it six in this case six bits left and now I can",
    "start": "2040639",
    "end": "2046000"
  },
  {
    "text": "support a window of 4. 4.19 or 4 megabytes window the I highlight the six",
    "start": "2046000",
    "end": "2052679"
  },
  {
    "text": "because six is actually the uh TCP window that S3 advertises out to you guys and at four at 4",
    "start": "2052679",
    "end": "2060960"
  },
  {
    "text": "megabyte that allows us to say on a 100 megabyte pipe we can have our customer",
    "start": "2060960",
    "end": "2066000"
  },
  {
    "text": "335 milliseconds away and keep that pipe full if they're a little further than",
    "start": "2066000",
    "end": "2071240"
  },
  {
    "text": "that well it you know we will start stalling the the connection again but at 335 milliseconds that's pretty much all",
    "start": "2071240",
    "end": "2078440"
  },
  {
    "text": "the way around the world so it ends up working out quite well um",
    "start": "2078440",
    "end": "2084200"
  },
  {
    "text": "so the the the one question that you might ask though is um you know",
    "start": "2084200",
    "end": "2090679"
  },
  {
    "text": "if why do we set it at four or when the windows scale at six instead of something larger and the reason is is",
    "start": "2090679",
    "end": "2097920"
  },
  {
    "text": "that you end up having to do uh tuning of this window scale tuning is a bit of",
    "start": "2097920",
    "end": "2103400"
  },
  {
    "text": "a bit of magic kind of or an art is probably a better term because the",
    "start": "2103400",
    "end": "2109280"
  },
  {
    "text": "larger you make the window the more memory you have to have so if we were to say make a 14 the window scale of 14",
    "start": "2109280",
    "end": "2115359"
  },
  {
    "text": "where you can actually have one gig of unaa traffic we would have to have enough memory in our machine to support",
    "start": "2115359",
    "end": "2121720"
  },
  {
    "text": "one gig for every socket that we have we don't have enough resources for that and you guys probably don't have enough",
    "start": "2121720",
    "end": "2127079"
  },
  {
    "text": "resources for that those are for really specialized high high throughput links that they set the windows scale that",
    "start": "2127079",
    "end": "2132800"
  },
  {
    "text": "large um so you have to get the the scale right uh window scale of six is",
    "start": "2132800",
    "end": "2138280"
  },
  {
    "text": "about right for most use cases um you can set it higher but it's something",
    "start": "2138280",
    "end": "2143440"
  },
  {
    "text": "that that you guys need to or and have your engineers be aware of is that do to",
    "start": "2143440",
    "end": "2148599"
  },
  {
    "text": "one make sure that it's turned on that you have it enabled most os's today do and consider that getting the windows",
    "start": "2148599",
    "end": "2154680"
  },
  {
    "text": "scale right to get good bandwidth through to S3 there's um one more thing or oh I jumped",
    "start": "2154680",
    "end": "2163599"
  },
  {
    "text": "wrong wrong picture one more part about the TCP uh Windows scaling and that or",
    "start": "2163599",
    "end": "2168800"
  },
  {
    "text": "um TCP transmissions and that is that on the internet packet loss happens all the time um whether it's and and when it",
    "start": "2168800",
    "end": "2176920"
  },
  {
    "text": "does um that data has to be retransmitted this is the reason that we have TCP or the windows is so that the",
    "start": "2176920",
    "end": "2183760"
  },
  {
    "text": "transmitter can re re store the data and have it available for r transmission so in classic TCP um we would only",
    "start": "2183760",
    "end": "2191520"
  },
  {
    "text": "acknowledge the data up until the mo the the bite that we had received if we miss",
    "start": "2191520",
    "end": "2196560"
  },
  {
    "text": "a packet we stop acknowledging any more data and so this can essentially stall",
    "start": "2196560",
    "end": "2202440"
  },
  {
    "text": "the connection and it causes um the transmitter to re retransmit the data so",
    "start": "2202440",
    "end": "2208200"
  },
  {
    "text": "again the TCP the the um EF the",
    "start": "2208200",
    "end": "2213720"
  },
  {
    "text": "internet uh oh boy task force um um came",
    "start": "2213720",
    "end": "2218760"
  },
  {
    "text": "up with a standard for solving this problem they call it selective act and what selective act does is it allows the",
    "start": "2218760",
    "end": "2225079"
  },
  {
    "text": "receiver to acknowledge parts of the stream and by doing that then when the",
    "start": "2225079",
    "end": "2231119"
  },
  {
    "text": "transmitter sees that hey he's sending me a selective act he knows specifically in this case he would only send uh the",
    "start": "2231119",
    "end": "2237800"
  },
  {
    "text": "bytes 1,00 through 1100 back to his or uh back to the customer and so you get",
    "start": "2237800",
    "end": "2243079"
  },
  {
    "text": "better utilization of the pipe and um you don't have to uh transmit a whole",
    "start": "2243079",
    "end": "2248280"
  },
  {
    "text": "bunch of data at the same time so um most again most modern os's",
    "start": "2248280",
    "end": "2254319"
  },
  {
    "text": "do have selective ackowledgements turned on um but you should check because it it will U make your uh bandwidth um",
    "start": "2254319",
    "end": "2262280"
  },
  {
    "text": "utilization much better so today I I kind of took you",
    "start": "2262280",
    "end": "2268400"
  },
  {
    "start": "2265000",
    "end": "2265000"
  },
  {
    "text": "through these these 10 um procedures that you could use for making or utilizing S3 um the I the key key ones",
    "start": "2268400",
    "end": "2276800"
  },
  {
    "text": "here I again are the key hashing for those customers who are putting a lot of data away um you need to consider uh the",
    "start": "2276800",
    "end": "2283920"
  },
  {
    "text": "the hashing technique bucket policies um for both uh object exploration and and",
    "start": "2283920",
    "end": "2291560"
  },
  {
    "text": "uh the archiving are both something worth exploring multi-part upload for better better bandwidth utilization um",
    "start": "2291560",
    "end": "2298839"
  },
  {
    "text": "and the ability to send really large objects with multi-art I I believe I I I didn't say but you can store up to I",
    "start": "2298839",
    "end": "2306000"
  },
  {
    "text": "believe it's 50 terabytes um 50 terabytes of for a single object object",
    "start": "2306000",
    "end": "2312440"
  },
  {
    "text": "agregation if this use case fits will fit your use case content distribution",
    "start": "2312440",
    "end": "2317480"
  },
  {
    "text": "consider using S or cloudfront with S3 and user logging please turn it on it's",
    "start": "2317480",
    "end": "2323200"
  },
  {
    "text": "uh um another thing that you might want to consider with end user logging is uh in uh utilizing the glacier the the um",
    "start": "2323200",
    "end": "2331680"
  },
  {
    "text": "object uh object archival so you can just take these end user Logs set a policy move them off to Glacier you'll",
    "start": "2331680",
    "end": "2338200"
  },
  {
    "text": "have the data if you ever want to go back and look at what was happening or do uh your own analytics on it it's a",
    "start": "2338200",
    "end": "2343720"
  },
  {
    "text": "great way to uh to keep that data bucket policies um we just talked about today",
    "start": "2343720",
    "end": "2349280"
  },
  {
    "text": "examples of using bucket policies for um scaling up uploads but there's a lot of other things that I suggest if uh you",
    "start": "2349280",
    "end": "2356960"
  },
  {
    "text": "look at that you can control things like what IP addresses customers are coming from uh what time a day even they're",
    "start": "2356960",
    "end": "2363440"
  },
  {
    "text": "making the requests there's a the bucket policies have really rich features but today I just wanted to talk about it in",
    "start": "2363440",
    "end": "2368920"
  },
  {
    "text": "the context of scaling for big applications the same thing with pre-signed URLs you can any URL that you",
    "start": "2368920",
    "end": "2375000"
  },
  {
    "text": "send to S3 you can uh generate a pre-signed URL it's really good again in this context for the upload case but you",
    "start": "2375000",
    "end": "2381960"
  },
  {
    "text": "can also um Ed pre-signed URLs for getting content out of S3 different use",
    "start": "2381960",
    "end": "2387640"
  },
  {
    "text": "case but you don't have you know you can keep your data private hand out the pre-signed URL that expires after a",
    "start": "2387640",
    "end": "2394079"
  },
  {
    "text": "certain amount of time and get um and not have to uh Grant access or uh to",
    "start": "2394079",
    "end": "2399800"
  },
  {
    "text": "your resources and then um finally we talked a couple a little bit about the DNS uh DNS options um and networking",
    "start": "2399800",
    "end": "2408359"
  },
  {
    "text": "options um let's see so with that um it's kind of all I had today and I I uh",
    "start": "2408359",
    "end": "2415440"
  },
  {
    "text": "thank you for taking the time to listen and hopefully you guys have picked up one or two points that you'll be able to utilize when you build your apps on S3",
    "start": "2415440",
    "end": "2423400"
  },
  {
    "text": "so thank you",
    "start": "2423400",
    "end": "2426760"
  }
]