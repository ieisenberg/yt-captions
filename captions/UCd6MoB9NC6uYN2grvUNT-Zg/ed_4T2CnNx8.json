[
  {
    "text": "In this video, you'll see how to use reference tracking\n and security scanning with Amazon CodeWhisperer.",
    "start": "0",
    "end": "5663"
  },
  {
    "text": "With this AI-powered tool, you can run security \nscans in your IDE, track code suggestions that",
    "start": "6230",
    "end": "12437"
  },
  {
    "text": "are similar to open-source training data, \nand avoid using biased or unfair code.",
    "start": "12437",
    "end": "17728"
  },
  {
    "text": "CodeWhisperer supports many programming \nlanguages and development environments.",
    "start": "20197",
    "end": "24626"
  },
  {
    "text": "We'll demonstrate its functionality \nusing Python in Visual Studio Code.",
    "start": "24898",
    "end": "29251"
  },
  {
    "text": "Let’s begin by running a security scan \nfrom the AWS Toolkit extension panel.",
    "start": "29840",
    "end": "34950"
  },
  {
    "text": "CodeWhisperer is an AI coding companion \nwith built-in security scanning for finding and",
    "start": "36581",
    "end": "41537"
  },
  {
    "text": "suggesting remediations for\n hard-to-detect vulnerabilities.",
    "start": "41537",
    "end": "45457"
  },
  {
    "text": "The scan is performed on the current active \nfile in the IDE editor and its dependent files.",
    "start": "46363",
    "end": "52000"
  },
  {
    "text": "After the scan is finished, any detected \nsecurity issues are displayed in the Problems panel.",
    "start": "53008",
    "end": "58079"
  },
  {
    "text": "Let’s select the first vulnerability to \nidentify where it is within our code.",
    "start": "59213",
    "end": "63282"
  },
  {
    "text": "Next, let’s hover over the line of \ncode to get more information.",
    "start": "64460",
    "end": "67798"
  },
  {
    "text": "CodeWhisperer not only identifies the vulnerability \nbut explains why it poses a threat and how to resolve it.",
    "start": "69158",
    "end": "75746"
  },
  {
    "text": "In this case, the file contains hardcoded credentials, \nwhich could cause leaks even after removing them.",
    "start": "76280",
    "end": "82582"
  },
  {
    "text": "The credentials should be stored securely\n and obtained from the runtime environment.",
    "start": "82967",
    "end": "87393"
  },
  {
    "text": "Let’s look at the second security issue.",
    "start": "88548",
    "end": "90397"
  },
  {
    "text": "In this case, CodeWhisperer identified a log \ninjection vulnerability for our logging function.",
    "start": "91122",
    "end": "96478"
  },
  {
    "text": "Let’s hover over the code to get more details.",
    "start": "96852",
    "end": "99143"
  },
  {
    "text": "CodeWhisperer calls out that user provided\n inputs must be sanitized before they are logged.",
    "start": "101080",
    "end": "106378"
  },
  {
    "text": "An attacker can use un-sanitized \ninput to break a log’s integrity,",
    "start": "106683",
    "end": "110727"
  },
  {
    "text": "forge log entries, or bypass log monitors.",
    "start": "110727",
    "end": "114284"
  },
  {
    "text": "Now let’s look at CodeWhisperer’s \nreference tracking feature.",
    "start": "115179",
    "end": "118224"
  },
  {
    "text": "CodeWhisperer learns, in part, \nfrom open-source projects.",
    "start": "120523",
    "end": "124423"
  },
  {
    "text": "Sometimes, a suggestion it provides may \nbe similar to a specific piece of training data.",
    "start": "124661",
    "end": "129581"
  },
  {
    "text": "With the reference log, we can view references\n to code recommendations that are similar to",
    "start": "130782",
    "end": "135683"
  },
  {
    "text": "open-source training data, and then \nedit the recommendations as needed.",
    "start": "135683",
    "end": "140094"
  },
  {
    "text": "The reference log can be accessed \nfrom the AWS Toolkit extension panel.",
    "start": "140740",
    "end": "145421"
  },
  {
    "text": "Let’s see this tool in action.",
    "start": "145784",
    "end": "147346"
  },
  {
    "text": "We’ll use CodeWhisperer to create a function that loads \na CSV file from an S3 bucket into a pandas dataframe.",
    "start": "148592",
    "end": "155218"
  },
  {
    "text": "CodeWhisperer suggests a definition for the function.",
    "start": "156328",
    "end": "158987"
  },
  {
    "text": "Let’s accept it.",
    "start": "159271",
    "end": "160267"
  },
  {
    "text": "Next, CodeWhisperer suggests \na body for the function.",
    "start": "161185",
    "end": "164058"
  },
  {
    "text": "The suggestion contains code \nthat’s similar to training data,",
    "start": "165022",
    "end": "168281"
  },
  {
    "text": "and a pop-up appears with the software \nlicense that the reference code is under.",
    "start": "168281",
    "end": "172313"
  },
  {
    "text": "For demonstration purposes, \nlet’s accept the recommendation.",
    "start": "172925",
    "end": "176000"
  },
  {
    "text": "The recommendation now appears \nin the CodeWhisperer reference log.",
    "start": "177178",
    "end": "180577"
  },
  {
    "text": "The log shows the specific code \nthat is similar to the training data.",
    "start": "181790",
    "end": "185292"
  },
  {
    "text": "CodeWhisperer also links to the \nrepository the training data came from.",
    "start": "186232",
    "end": "190000"
  },
  {
    "text": "This enables developers to provide the \nproper attribution for any open-source",
    "start": "190385",
    "end": "194332"
  },
  {
    "text": "training code that they may \nhave used in their own code base.",
    "start": "194332",
    "end": "197842"
  },
  {
    "text": "You’ve just seen how to use reference tracking \nand security scanning with Amazon CodeWhisperer.",
    "start": "200900",
    "end": "205545"
  },
  {
    "text": "You can learn more about this topic in \nthe description and links for this video.",
    "start": "206996",
    "end": "210666"
  },
  {
    "text": "Thanks for watching. Now it’s your turn to try.",
    "start": "211052",
    "end": "213658"
  }
]