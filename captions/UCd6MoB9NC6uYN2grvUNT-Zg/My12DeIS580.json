[
  {
    "text": "hello everyone this is rajesh pichani",
    "start": "2560",
    "end": "5520"
  },
  {
    "text": "and i'm a solutions architect at amazon",
    "start": "5520",
    "end": "7680"
  },
  {
    "text": "web",
    "start": "7680",
    "end": "8920"
  },
  {
    "text": "services i'm joined by pratip sridaran",
    "start": "8920",
    "end": "12160"
  },
  {
    "text": "senior solutions architect from our",
    "start": "12160",
    "end": "14839"
  },
  {
    "text": "team today we will be going",
    "start": "14839",
    "end": "17800"
  },
  {
    "text": "through how we can monitor the bedrock",
    "start": "17800",
    "end": "20880"
  },
  {
    "text": "batch inference jobs to help enable in",
    "start": "20880",
    "end": "23920"
  },
  {
    "text": "the downstream processing of the",
    "start": "23920",
    "end": "25600"
  },
  {
    "text": "applications",
    "start": "25600",
    "end": "28600"
  },
  {
    "text": "we'll start with a quick",
    "start": "29039",
    "end": "31399"
  },
  {
    "text": "overview followed by a demo walk through",
    "start": "31399",
    "end": "34480"
  },
  {
    "text": "of this particular use case and finally",
    "start": "34480",
    "end": "36719"
  },
  {
    "text": "conclude with the",
    "start": "36719",
    "end": "40160"
  },
  {
    "text": "references in addition to the core",
    "start": "41160",
    "end": "43840"
  },
  {
    "text": "service here in this use case bedrock we",
    "start": "43840",
    "end": "46879"
  },
  {
    "text": "will be using amazon event bridge",
    "start": "46879",
    "end": "50239"
  },
  {
    "text": "amazon event bridge is a serverless",
    "start": "50239",
    "end": "52160"
  },
  {
    "text": "service that abstracts the producers",
    "start": "52160",
    "end": "54800"
  },
  {
    "text": "from the consumers in a typical",
    "start": "54800",
    "end": "56960"
  },
  {
    "text": "event-driven",
    "start": "56960",
    "end": "59079"
  },
  {
    "text": "architecture producers are those",
    "start": "59079",
    "end": "61359"
  },
  {
    "text": "applications or services that emits",
    "start": "61359",
    "end": "64158"
  },
  {
    "text": "certain type of events and consumers are",
    "start": "64159",
    "end": "69240"
  },
  {
    "text": "similar services or applications that",
    "start": "69240",
    "end": "72000"
  },
  {
    "text": "consume the events to enable the next",
    "start": "72000",
    "end": "75119"
  },
  {
    "text": "set of workflows",
    "start": "75119",
    "end": "77840"
  },
  {
    "text": "let me walk through with a simple",
    "start": "77840",
    "end": "79960"
  },
  {
    "text": "example and then tie back with this use",
    "start": "79960",
    "end": "85000"
  },
  {
    "text": "case there will be several compute",
    "start": "85000",
    "end": "87360"
  },
  {
    "text": "instances in a production environment",
    "start": "87360",
    "end": "89360"
  },
  {
    "text": "running a certain",
    "start": "89360",
    "end": "91079"
  },
  {
    "text": "application we don't want the",
    "start": "91079",
    "end": "93040"
  },
  {
    "text": "application to go",
    "start": "93040",
    "end": "94680"
  },
  {
    "text": "down right so we create a rule that",
    "start": "94680",
    "end": "98240"
  },
  {
    "text": "matches with the",
    "start": "98240",
    "end": "99799"
  },
  {
    "text": "pattern telling that the instances",
    "start": "99799",
    "end": "103040"
  },
  {
    "text": "should not be in the stop state",
    "start": "103040",
    "end": "106320"
  },
  {
    "text": "we create this role in the event bridge",
    "start": "106320",
    "end": "109040"
  },
  {
    "text": "that matches with this particular",
    "start": "109040",
    "end": "110520"
  },
  {
    "text": "pattern and so when the consumers can be",
    "start": "110520",
    "end": "113840"
  },
  {
    "text": "multiple consumers it can be a",
    "start": "113840",
    "end": "116360"
  },
  {
    "text": "notification that enables this",
    "start": "116360",
    "end": "118719"
  },
  {
    "text": "notification to a different set of teams",
    "start": "118719",
    "end": "121680"
  },
  {
    "text": "or a remediations workflow that",
    "start": "121680",
    "end": "124560"
  },
  {
    "text": "remediates this particular action right",
    "start": "124560",
    "end": "127360"
  },
  {
    "text": "so that's what one of the primary",
    "start": "127360",
    "end": "129200"
  },
  {
    "text": "capability of the event",
    "start": "129200",
    "end": "131239"
  },
  {
    "text": "bridges coming back to this particular",
    "start": "131239",
    "end": "133680"
  },
  {
    "text": "use",
    "start": "133680",
    "end": "134520"
  },
  {
    "text": "case bedrock is currently a source or a",
    "start": "134520",
    "end": "138480"
  },
  {
    "text": "producer of the",
    "start": "138480",
    "end": "139959"
  },
  {
    "text": "events specifically the batch inference",
    "start": "139959",
    "end": "144360"
  },
  {
    "text": "jobs we are matching and monitoring the",
    "start": "144360",
    "end": "147760"
  },
  {
    "text": "batch inference jobs",
    "start": "147760",
    "end": "149879"
  },
  {
    "text": "events and in this walk",
    "start": "149879",
    "end": "152920"
  },
  {
    "text": "through we'll show how this events can",
    "start": "152920",
    "end": "155599"
  },
  {
    "text": "be persisted in s3",
    "start": "155599",
    "end": "160080"
  },
  {
    "text": "now praep will walk through with this",
    "start": "160080",
    "end": "162800"
  },
  {
    "text": "scenario in the",
    "start": "162800",
    "end": "164680"
  },
  {
    "text": "console over to you",
    "start": "164680",
    "end": "168400"
  },
  {
    "text": "praep now there are enough information",
    "start": "172120",
    "end": "175360"
  },
  {
    "text": "here but if you can see that uh you can",
    "start": "175360",
    "end": "177760"
  },
  {
    "text": "click on this example link to get",
    "start": "177760",
    "end": "179920"
  },
  {
    "text": "through some of the details quick now",
    "start": "179920",
    "end": "182319"
  },
  {
    "text": "amazon",
    "start": "182319",
    "end": "184200"
  },
  {
    "text": "eventbridge is",
    "start": "184200",
    "end": "186360"
  },
  {
    "text": "a service that you can use to monitor",
    "start": "186360",
    "end": "189120"
  },
  {
    "text": "many of aws services in near real",
    "start": "189120",
    "end": "194000"
  },
  {
    "text": "time let me come back to this page but",
    "start": "194040",
    "end": "196480"
  },
  {
    "text": "let's open event bridge",
    "start": "196480",
    "end": "199680"
  },
  {
    "text": "first it's a serverless service for",
    "start": "201159",
    "end": "203440"
  },
  {
    "text": "building event application there's a few",
    "start": "203440",
    "end": "205360"
  },
  {
    "text": "concepts like buses and rules",
    "start": "205360",
    "end": "208239"
  },
  {
    "text": "essentially you can have event brick",
    "start": "208239",
    "end": "210799"
  },
  {
    "text": "listen to events and route it based on",
    "start": "210799",
    "end": "213519"
  },
  {
    "text": "rule sets right let's go ahead and",
    "start": "213519",
    "end": "215840"
  },
  {
    "text": "create a rule",
    "start": "215840",
    "end": "218280"
  },
  {
    "text": "now what you want to do",
    "start": "218280",
    "end": "222080"
  },
  {
    "text": "is let's create a rule called batch",
    "start": "225879",
    "end": "230959"
  },
  {
    "text": "inference rule and we would like to kind",
    "start": "235400",
    "end": "238239"
  },
  {
    "text": "of match it with an event pattern the",
    "start": "238239",
    "end": "241080"
  },
  {
    "text": "way event bridge works is it'll actually",
    "start": "241080",
    "end": "243920"
  },
  {
    "text": "look for events occurring and match it",
    "start": "243920",
    "end": "246799"
  },
  {
    "text": "with a",
    "start": "246799",
    "end": "249080"
  },
  {
    "text": "pattern you can go ahead and try and",
    "start": "249080",
    "end": "252480"
  },
  {
    "text": "create a pattern here but this page",
    "start": "252480",
    "end": "254879"
  },
  {
    "text": "already contain the pattern that you",
    "start": "254879",
    "end": "256239"
  },
  {
    "text": "wanted to use so i'm just going to use",
    "start": "256239",
    "end": "258720"
  },
  {
    "text": "it",
    "start": "258720",
    "end": "261720"
  },
  {
    "text": "so what what this parent says is that if",
    "start": "263120",
    "end": "266400"
  },
  {
    "text": "you see any event occurring that has a",
    "start": "266400",
    "end": "268800"
  },
  {
    "text": "source of amazon bed drop a detail type",
    "start": "268800",
    "end": "270960"
  },
  {
    "text": "of batch infront job check change and",
    "start": "270960",
    "end": "273199"
  },
  {
    "text": "the detail status has completed trigger",
    "start": "273199",
    "end": "275840"
  },
  {
    "text": "this",
    "start": "275840",
    "end": "278560"
  },
  {
    "text": "right and once you have the rule set",
    "start": "280120",
    "end": "282720"
  },
  {
    "text": "that identifies the event you also want",
    "start": "282720",
    "end": "284639"
  },
  {
    "text": "to set up a target type and here i'm",
    "start": "284639",
    "end": "287520"
  },
  {
    "text": "going to use anxq as a target type even",
    "start": "287520",
    "end": "290720"
  },
  {
    "text": "so you can use many other targets",
    "start": "290720",
    "end": "292000"
  },
  {
    "text": "including",
    "start": "292000",
    "end": "294720"
  },
  {
    "text": "lambda i'm going to",
    "start": "296040",
    "end": "299759"
  },
  {
    "text": "use this particular",
    "start": "302919",
    "end": "306639"
  },
  {
    "text": "cube and the role is",
    "start": "311160",
    "end": "314960"
  },
  {
    "text": "created now let's look at how we can",
    "start": "315160",
    "end": "317720"
  },
  {
    "text": "configure the bedrop",
    "start": "317720",
    "end": "320800"
  },
  {
    "text": "batch",
    "start": "320800",
    "end": "323120"
  },
  {
    "text": "inference before we go and configure",
    "start": "323639",
    "end": "326160"
  },
  {
    "text": "better batch inference we have to set up",
    "start": "326160",
    "end": "328800"
  },
  {
    "text": "uh the s3 folders for the batch",
    "start": "328800",
    "end": "331080"
  },
  {
    "text": "inference so here i have already set up",
    "start": "331080",
    "end": "333440"
  },
  {
    "text": "the badge infrance folder so essentially",
    "start": "333440",
    "end": "334800"
  },
  {
    "text": "you need a input folder and output",
    "start": "334800",
    "end": "336680"
  },
  {
    "text": "folder now the input folder will contain",
    "start": "336680",
    "end": "340639"
  },
  {
    "text": "uh the batch in job submissions the job",
    "start": "340639",
    "end": "342880"
  },
  {
    "text": "should be submitted as a json l file",
    "start": "342880",
    "end": "345919"
  },
  {
    "text": "which is",
    "start": "345919",
    "end": "347160"
  },
  {
    "text": "essentially uh lines of json records i",
    "start": "347160",
    "end": "351440"
  },
  {
    "text": "can show you an example file here that",
    "start": "351440",
    "end": "353680"
  },
  {
    "text": "we're going to use today uh so each line",
    "start": "353680",
    "end": "356400"
  },
  {
    "text": "is a json document that contains all the",
    "start": "356400",
    "end": "359600"
  },
  {
    "text": "information needed need to execute that",
    "start": "359600",
    "end": "361199"
  },
  {
    "text": "particular request and uh you can have a",
    "start": "361199",
    "end": "364880"
  },
  {
    "text": "number of these files and i think a",
    "start": "364880",
    "end": "366400"
  },
  {
    "text": "minimum number is 100 but you can the",
    "start": "366400",
    "end": "368080"
  },
  {
    "text": "maximum number is you can have many many",
    "start": "368080",
    "end": "370400"
  },
  {
    "text": "more of",
    "start": "370400",
    "end": "372960"
  },
  {
    "text": "those now once you have",
    "start": "374840",
    "end": "377639"
  },
  {
    "text": "this json l file here you can go ahead",
    "start": "377639",
    "end": "380639"
  },
  {
    "text": "and start creating the batch jobs let's",
    "start": "380639",
    "end": "383759"
  },
  {
    "text": "create a job let's call it",
    "start": "383759",
    "end": "387360"
  },
  {
    "text": "uh i'm going to use no",
    "start": "392919",
    "end": "397520"
  },
  {
    "text": "light you can configure that particular",
    "start": "398199",
    "end": "400720"
  },
  {
    "text": "bucket that we",
    "start": "400720",
    "end": "403520"
  },
  {
    "text": "created i will go ahead and create a new",
    "start": "409240",
    "end": "411360"
  },
  {
    "text": "service for this",
    "start": "411360",
    "end": "414560"
  },
  {
    "text": "and you can see the permission",
    "start": "425599",
    "end": "427720"
  },
  {
    "text": "details of what this what this",
    "start": "427720",
    "end": "431840"
  },
  {
    "text": "means create batch",
    "start": "433560",
    "end": "437199"
  },
  {
    "text": "infern so you have to be on this",
    "start": "440680",
    "end": "445680"
  },
  {
    "text": "page till this job is created otherwise",
    "start": "446759",
    "end": "449520"
  },
  {
    "text": "the job will not get created",
    "start": "449520",
    "end": "453400"
  },
  {
    "text": "so once the job is created it'll",
    "start": "463759",
    "end": "466319"
  },
  {
    "text": "automatically submit the",
    "start": "466319",
    "end": "468680"
  },
  {
    "text": "job and we can see that and and the job",
    "start": "468680",
    "end": "473520"
  },
  {
    "text": "takes a while to run but as it",
    "start": "473520",
    "end": "476840"
  },
  {
    "text": "runs as it goes through the process of",
    "start": "476840",
    "end": "479440"
  },
  {
    "text": "validating and submitting this",
    "start": "479440",
    "end": "481800"
  },
  {
    "text": "job it will go ahead and run the model",
    "start": "481800",
    "end": "485919"
  },
  {
    "text": "invocation in the back end and produce",
    "start": "485919",
    "end": "488560"
  },
  {
    "text": "the results the results come in uh it",
    "start": "488560",
    "end": "493599"
  },
  {
    "text": "the results will come into the output",
    "start": "493599",
    "end": "496440"
  },
  {
    "text": "folder and it will create two files a",
    "start": "496440",
    "end": "499599"
  },
  {
    "text": "json l.out file that will kind that will",
    "start": "499599",
    "end": "503120"
  },
  {
    "text": "that will have the inference results and",
    "start": "503120",
    "end": "506879"
  },
  {
    "text": "a manifest file that will contain a",
    "start": "506879",
    "end": "509199"
  },
  {
    "text": "summary of the inferent including how",
    "start": "509199",
    "end": "513120"
  },
  {
    "text": "many lines were executed how many",
    "start": "513120",
    "end": "514880"
  },
  {
    "text": "successes how many failures so on so",
    "start": "514880",
    "end": "516640"
  },
  {
    "text": "forth",
    "start": "516640",
    "end": "518800"
  },
  {
    "text": "this this typically takes a few",
    "start": "518800",
    "end": "523839"
  },
  {
    "text": "minute all right we are back and now we",
    "start": "527080",
    "end": "529839"
  },
  {
    "text": "can see that uh the job is completed uh",
    "start": "529839",
    "end": "533120"
  },
  {
    "text": "we can get into the job to kind of look",
    "start": "533120",
    "end": "535360"
  },
  {
    "text": "at some details uh the job duration is 8",
    "start": "535360",
    "end": "538880"
  },
  {
    "text": "minutes it completed",
    "start": "538880",
    "end": "541120"
  },
  {
    "text": "now what we can do is we can go into the",
    "start": "541120",
    "end": "544160"
  },
  {
    "text": "cues and look at if we have received a",
    "start": "544160",
    "end": "547920"
  },
  {
    "text": "job completion message and we we can see",
    "start": "547920",
    "end": "549920"
  },
  {
    "text": "that we have received a job completion",
    "start": "549920",
    "end": "552200"
  },
  {
    "text": "message let's go ahead and see",
    "start": "552200",
    "end": "556800"
  },
  {
    "text": "uh what we have received the way to do",
    "start": "556800",
    "end": "559360"
  },
  {
    "text": "that is to do send receive message and",
    "start": "559360",
    "end": "561040"
  },
  {
    "text": "pull for it so this",
    "start": "561040",
    "end": "563720"
  },
  {
    "text": "message we",
    "start": "563720",
    "end": "566040"
  },
  {
    "text": "can view",
    "start": "566040",
    "end": "568839"
  },
  {
    "text": "it",
    "start": "568839",
    "end": "571000"
  },
  {
    "text": "so if you can see that actually this is",
    "start": "571000",
    "end": "575040"
  },
  {
    "text": "a batch inference job change output and",
    "start": "575040",
    "end": "580160"
  },
  {
    "text": "we can also see that",
    "start": "580160",
    "end": "582519"
  },
  {
    "text": "uh uh the job id here now this job id we",
    "start": "582519",
    "end": "588720"
  },
  {
    "text": "can use it for uh further processing for",
    "start": "588720",
    "end": "591240"
  },
  {
    "text": "example if you want to have like a long",
    "start": "591240",
    "end": "593760"
  },
  {
    "text": "lambda server lambda service pick up",
    "start": "593760",
    "end": "596640"
  },
  {
    "text": "these files and process it you can use",
    "start": "596640",
    "end": "598720"
  },
  {
    "text": "this and just look into",
    "start": "598720",
    "end": "602200"
  },
  {
    "text": "uh",
    "start": "602200",
    "end": "604200"
  },
  {
    "text": "the output folder you can see that this",
    "start": "604200",
    "end": "607440"
  },
  {
    "text": "id matches this particular",
    "start": "607440",
    "end": "609480"
  },
  {
    "text": "output folder and then you can get into",
    "start": "609480",
    "end": "612240"
  },
  {
    "text": "the folder and uh get access to the",
    "start": "612240",
    "end": "614839"
  },
  {
    "text": "jsonl file and do further processing",
    "start": "614839",
    "end": "618959"
  },
  {
    "text": "all right this concludes the video",
    "start": "618959",
    "end": "620560"
  },
  {
    "text": "walkthrough section and i'll hand it",
    "start": "620560",
    "end": "623040"
  },
  {
    "text": "back to rajes over to you",
    "start": "623040",
    "end": "626639"
  },
  {
    "text": "rajes thank you",
    "start": "628680",
    "end": "631240"
  },
  {
    "text": "praep here are the three references that",
    "start": "631240",
    "end": "633920"
  },
  {
    "text": "we would like to share with you the",
    "start": "633920",
    "end": "636240"
  },
  {
    "text": "first one is the bedrock inference jobs",
    "start": "636240",
    "end": "638680"
  },
  {
    "text": "monitor this is a scenario that we just",
    "start": "638680",
    "end": "641440"
  },
  {
    "text": "walked through with the example and",
    "start": "641440",
    "end": "644240"
  },
  {
    "text": "these are the qr codes",
    "start": "644240",
    "end": "647760"
  },
  {
    "text": "the second one is a bedrock user guide",
    "start": "647760",
    "end": "650880"
  },
  {
    "text": "and finally we talked about another",
    "start": "650880",
    "end": "653760"
  },
  {
    "text": "service amazon event bridge so the user",
    "start": "653760",
    "end": "656399"
  },
  {
    "text": "guide for that qr code is also listed",
    "start": "656399",
    "end": "660480"
  },
  {
    "text": "here thank you very much for your time",
    "start": "660920",
    "end": "663760"
  },
  {
    "text": "and happy building in",
    "start": "663760",
    "end": "666279"
  },
  {
    "text": "aws thanks a lot",
    "start": "666279",
    "end": "670680"
  }
]