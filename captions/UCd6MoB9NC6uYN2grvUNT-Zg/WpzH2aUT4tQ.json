[
  {
    "start": "0",
    "end": "113000"
  },
  {
    "text": "all right well i guess we'll get started good afternoon everybody my name is kingsley wood i'm with the business",
    "start": "399",
    "end": "6080"
  },
  {
    "text": "development team based in singapore i've been out there for two and a half years and i'm going to be talking to you today",
    "start": "6080",
    "end": "12160"
  },
  {
    "text": "about how to make scalable mobile and web apps by applying all the products and features that you've been hearing about",
    "start": "12160",
    "end": "18160"
  },
  {
    "text": "for the last two days i'm going to assume that most of you are fairly familiar with most of the aws products",
    "start": "18160",
    "end": "24240"
  },
  {
    "text": "for at least at a high level so this isn't going to be a 101 it's hopefully a little bit more of a 201 i'm going to",
    "start": "24240",
    "end": "29599"
  },
  {
    "text": "try and impart some of the wisdom and and best practices that we've picked up",
    "start": "29599",
    "end": "34880"
  },
  {
    "text": "in talking to a lot of customers that are building successful web apps um scalable mobile apps that have been uh",
    "start": "34880",
    "end": "42160"
  },
  {
    "text": "running on aws for quite some time so these are the four key categories i'm going to cover today we're just going to",
    "start": "42160",
    "end": "48239"
  },
  {
    "text": "talk a little bit about how to apply the products in ways that you can be sure that you can handle um",
    "start": "48239",
    "end": "54399"
  },
  {
    "text": "the inundation of huge amounts of traffic if you were to get successful so that's kind of the objective here and",
    "start": "54399",
    "end": "60000"
  },
  {
    "text": "then about halfway through i'm going to invite um eritra over who's a member of the text web team",
    "start": "60000",
    "end": "66640"
  },
  {
    "text": "it's part of the intuit company and he's got a very interesting story to tell about how they've applied",
    "start": "66640",
    "end": "72479"
  },
  {
    "text": "amazon web services in their company to build a very scalable example of a mobile app",
    "start": "72479",
    "end": "78000"
  },
  {
    "text": "so let's get started straight away the main objective what we want to help you do is to avoid this message coming up",
    "start": "78000",
    "end": "84320"
  },
  {
    "text": "that's the the number one thing we don't want you to see and your customers don't want to see um",
    "start": "84320",
    "end": "89680"
  },
  {
    "text": "given that today's um opportunity to go global almost instantly you've heard about all of our edge locations and so",
    "start": "89680",
    "end": "95600"
  },
  {
    "text": "on the ability for you to target the entire world literally within an hour is there so you want to be ready for it so",
    "start": "95600",
    "end": "102320"
  },
  {
    "text": "we just want to help you just to eliminate that that 503 message make sure that you've got as much um",
    "start": "102320",
    "end": "108159"
  },
  {
    "text": "reliability and scalability in preparation for your big success which is inevitably going to come right so",
    "start": "108159",
    "end": "115119"
  },
  {
    "start": "113000",
    "end": "355000"
  },
  {
    "text": "let's focus on the first topic then which is content delivery one of the the keys here that we're trying to address",
    "start": "115119",
    "end": "120799"
  },
  {
    "text": "is to avoid you having to deal with all of these typical headaches we've spoken to a lot of customers that are building",
    "start": "120799",
    "end": "128000"
  },
  {
    "text": "mobile apps and and when they're starting to scale up when they're just coming up with the idea they're often encountering a lot of these kind of",
    "start": "128000",
    "end": "133840"
  },
  {
    "text": "headaches you'll recognize a lot of these these problems um when they start to do things on a bigger scale they start to realize just",
    "start": "133840",
    "end": "140400"
  },
  {
    "text": "how difficult it is to deal with this and you've been hearing that message repeated many times in the last two days",
    "start": "140400",
    "end": "145920"
  },
  {
    "text": "how can we take that undifferentiated heavy lifting how can we do the hard work for you so how can we alleviate you",
    "start": "145920",
    "end": "152400"
  },
  {
    "text": "of that headache and hopefully to avoid that kind of meltdown scenario which is inevitable when you just can't handle",
    "start": "152400",
    "end": "157920"
  },
  {
    "text": "all that traffic yourself right so inevitably you're going to get to the point where at some point the scale becomes more",
    "start": "157920",
    "end": "164480"
  },
  {
    "text": "than your infrastructure can handle so if you're prepared for that and that spike comes and you're implementing a",
    "start": "164480",
    "end": "170560"
  },
  {
    "text": "lot of these best practices we hope that you will seamlessly be able to move from 10 users to 50 users to 50 000 users and",
    "start": "170560",
    "end": "177680"
  },
  {
    "text": "and so on uptime so effectively we want you the first thing to think about is just offload",
    "start": "177680",
    "end": "183680"
  },
  {
    "text": "everything to cloudfront that you can now what i mean by offload if you've got any static file a css file a json file",
    "start": "183680",
    "end": "191599"
  },
  {
    "text": "even html files that don't change anytime right offload all of that to cloudfront from day one by doing that",
    "start": "191599",
    "end": "198560"
  },
  {
    "text": "you're taking advantage of our very distributed edge location network we have over 35 edge locations worldwide",
    "start": "198560",
    "end": "204959"
  },
  {
    "text": "now and that immediately allows us to do the heavy lifting in terms of detection",
    "start": "204959",
    "end": "210560"
  },
  {
    "text": "of latency specific routing for you that's a pretty big term but basically it just means wherever your user is we",
    "start": "210560",
    "end": "217040"
  },
  {
    "text": "will direct we will detect where they are and direct their traffic to the very best edge location for you you don't",
    "start": "217040",
    "end": "222400"
  },
  {
    "text": "even have to think about it it's simply a matter of offloading the content into s3 pointing cloudfront at it and letting",
    "start": "222400",
    "end": "228319"
  },
  {
    "text": "us take care of the rest there's a lot of subtleties that are involved in this that you don't have to work with we're",
    "start": "228319",
    "end": "233680"
  },
  {
    "text": "we're the experts of that we spend a lot of time fine-tuning that network so whether a user is in hawaii or paris or",
    "start": "233680",
    "end": "240720"
  },
  {
    "text": "sydney or whatever it is we will make sure that that person gets the content delivered to them as fast and",
    "start": "240720",
    "end": "246239"
  },
  {
    "text": "efficiently as possible from the edge location so in terms of um the actual",
    "start": "246239",
    "end": "252159"
  },
  {
    "text": "practice here what we're talking about is taking your content off of your servers and move it into a bucket in s3",
    "start": "252159",
    "end": "258560"
  },
  {
    "text": "as soon as you do that your one thing that happens immediately is you're offloading all the work that those web",
    "start": "258560",
    "end": "264880"
  },
  {
    "text": "servers have to do in terms of delivering that content so effectively you're letting cloudfront deliver the content",
    "start": "264880",
    "end": "270880"
  },
  {
    "text": "very on a repeated basis without your web servers having to do that traffic for you",
    "start": "270880",
    "end": "276240"
  },
  {
    "text": "the obvious impact of this is that the edge location will give the delivery of the experience",
    "start": "276240",
    "end": "281280"
  },
  {
    "text": "much better for the customer but a subtle subtlety that a lot of people don't pick up is that you can now reduce the number",
    "start": "281280",
    "end": "287360"
  },
  {
    "text": "of ec2 servers dramatically if you think how hard those servers have to work when they're delivering content and now",
    "start": "287360",
    "end": "293600"
  },
  {
    "text": "you're offloading a lot of that traffic from them you need less servers what's that translate to less cost so we can",
    "start": "293600",
    "end": "299759"
  },
  {
    "text": "immediately give you back some money every month just by reducing a the number of servers and be the size of the",
    "start": "299759",
    "end": "305600"
  },
  {
    "text": "servers scale back in scale back down right handle the same amount of traffic",
    "start": "305600",
    "end": "310720"
  },
  {
    "text": "and remarkably for less price you're actually delivering the experience better for the customer",
    "start": "310720",
    "end": "316240"
  },
  {
    "text": "there's some added nuances here that you can derive from doing this one of the things is that you'll be pulling your content",
    "start": "316240",
    "end": "322960"
  },
  {
    "text": "to a single storage location and by putting that in one location if you ever have to update any of that content you",
    "start": "322960",
    "end": "328800"
  },
  {
    "text": "don't have to go back out and fish out where that content is on each one of your ec2 servers because it's in one",
    "start": "328800",
    "end": "334160"
  },
  {
    "text": "location you're changing it once there's a coders paradigm a lot of you might have heard of called dry don't repeat",
    "start": "334160",
    "end": "340240"
  },
  {
    "text": "yourself right leave the content in one place only one place and refer to it always from that one place so your",
    "start": "340240",
    "end": "346000"
  },
  {
    "text": "durability of your static content goes up your reliability of the system goes up your experience goes up and your",
    "start": "346000",
    "end": "351919"
  },
  {
    "text": "costs go down all by just simply implementing cloudfront a great example of this is a company in singapore and",
    "start": "351919",
    "end": "358479"
  },
  {
    "start": "355000",
    "end": "542000"
  },
  {
    "text": "they've got this iphone app called perks and it's a loyalty program you go to a little restaurant and they've got a deal",
    "start": "358479",
    "end": "364080"
  },
  {
    "text": "on and you scan the qr code and you get a you know buy buy five sandwiches get one free whatever it is right and it's",
    "start": "364080",
    "end": "369840"
  },
  {
    "text": "obviously location based which is really cool it means that when you're walking around it's going to tell you which",
    "start": "369840",
    "end": "375039"
  },
  {
    "text": "restaurants are close by or which venues are offering the deals at the moment now one of the things they experienced when",
    "start": "375039",
    "end": "380720"
  },
  {
    "text": "they first started was that all the little icons there for the restaurants are changing all the time as they sign them up onto the program onto this",
    "start": "380720",
    "end": "387120"
  },
  {
    "text": "loyalty program but all of those are simply going to be content calls that can be handled by",
    "start": "387120",
    "end": "392720"
  },
  {
    "text": "the edge location so by doing that they immediately improved the user experience every single one of the users that",
    "start": "392720",
    "end": "398639"
  },
  {
    "text": "opened up the iphone app suddenly thought wow this is remarkably fast right because it gets your location makes the query and comes back with that",
    "start": "398639",
    "end": "404960"
  },
  {
    "text": "content again they only have to change those icons or those graphics in one place once and then it takes care of it",
    "start": "404960",
    "end": "411039"
  },
  {
    "text": "all the time for the rest of the customers now that's on the static content side but about six months ago we",
    "start": "411039",
    "end": "416720"
  },
  {
    "text": "stepped up our game with cloudfront we added dynamic content delivery so from the edge location you can also",
    "start": "416720",
    "end": "423599"
  },
  {
    "text": "include specific queries that are made back to your web server and cache them at the edge location we translate that",
    "start": "423599",
    "end": "430000"
  },
  {
    "text": "in terms of this app if you were walking down the street and you saw a subway what's the special on subway today",
    "start": "430000",
    "end": "435840"
  },
  {
    "text": "that's a query that goes to the web server to the to the database queries what you know what's the special in this",
    "start": "435840",
    "end": "441440"
  },
  {
    "text": "particular subway and then returns that to the user but if you've got thousands of customers walking around the same",
    "start": "441440",
    "end": "447360"
  },
  {
    "text": "area they're all going to make exactly the same query so the logic then is why do i want my web server to work really",
    "start": "447360",
    "end": "453840"
  },
  {
    "text": "hard at doing the same query a thousand times when it's exactly the same result so that becomes these dynamic calls that",
    "start": "453840",
    "end": "460639"
  },
  {
    "text": "cloudfront can then cache if you think about the edge location having a persistent connection back to",
    "start": "460639",
    "end": "466800"
  },
  {
    "text": "the source of origin the web servers if that query is made once and isn't going to change in let's say one day you're",
    "start": "466800",
    "end": "472479"
  },
  {
    "text": "not going to update your special on subway that often then that same query can be fed to those thousand people from",
    "start": "472479",
    "end": "478560"
  },
  {
    "text": "exactly the same edge location without even having to hit the web server and when i'm talking about a thousand to one",
    "start": "478560",
    "end": "484400"
  },
  {
    "text": "difference in queries the size again of your servers the number of ec2 servers you need to handle that dramatically",
    "start": "484400",
    "end": "490560"
  },
  {
    "text": "reduced huge cost saving so in terms of the delivery the best practice that i'm trying to impart here",
    "start": "490560",
    "end": "497440"
  },
  {
    "text": "is deliver your entire site via cloudfront this means all your http calls all of the static content and the",
    "start": "497440",
    "end": "504479"
  },
  {
    "text": "dynamic content so you're actually the arrow at the bottom there you're going to direct that through the edge location",
    "start": "504479",
    "end": "509680"
  },
  {
    "text": "so as your users scale you take more and more advantage of this it's just a really smart best practice to reduce the",
    "start": "509680",
    "end": "515919"
  },
  {
    "text": "costs and take advantage of the of the dynamic content delivery part of cloudfront so look into that just as an",
    "start": "515919",
    "end": "521680"
  },
  {
    "text": "added technical note you can split up the calls that are made depending on the type of call so if it's a jpeg it goes",
    "start": "521680",
    "end": "527920"
  },
  {
    "text": "to an s3 bucket if it's a php file it's going to go to another type of region or",
    "start": "527920",
    "end": "533680"
  },
  {
    "text": "another kind of ec2 server that might be serving up that contents you can specify a division of the actual kinds of",
    "start": "533680",
    "end": "539760"
  },
  {
    "text": "queries that are made all through cloudfront now if you've gone through that process and",
    "start": "539760",
    "end": "545279"
  },
  {
    "start": "542000",
    "end": "948000"
  },
  {
    "text": "you've offloaded as much as you can on the content delivery side you're still going to have to eventually",
    "start": "545279",
    "end": "550480"
  },
  {
    "text": "hit the web server sometimes so that's where we get to the managing the traffic side you want to reduce as much as",
    "start": "550480",
    "end": "555760"
  },
  {
    "text": "possible the number of servers but once you've done that you still want to do your server scaling as efficiently as",
    "start": "555760",
    "end": "561360"
  },
  {
    "text": "possible and this is why we recommend you load balance from the very beginning even if you've got one server throw a",
    "start": "561360",
    "end": "567360"
  },
  {
    "text": "load balancer in front of it now with elb the magic is that as you move to change",
    "start": "567360",
    "end": "572959"
  },
  {
    "text": "behind the scenes as you increase the number of servers or if you change the versions on those servers your static",
    "start": "572959",
    "end": "580160"
  },
  {
    "text": "endpoint your your elb dns name cname remains exactly the same",
    "start": "580160",
    "end": "585680"
  },
  {
    "text": "so getting back to my original slide the 503 is not going to happen because the customer will never have to experience",
    "start": "585680",
    "end": "591600"
  },
  {
    "text": "an uninterrupted flow of of the traffic there's no there's no interruption in terms of the",
    "start": "591600",
    "end": "597120"
  },
  {
    "text": "delivery of the service you know i think a lot of a lot of people used to see websites five years ago where it would",
    "start": "597120",
    "end": "602480"
  },
  {
    "text": "say service unavailable maintenance for the next two hours right that's total old school right we don't want to do",
    "start": "602480",
    "end": "607519"
  },
  {
    "text": "that anymore we want to have the service delivering constantly all the time no matter what's going on in the background",
    "start": "607519",
    "end": "613120"
  },
  {
    "text": "you saw some great examples of this with dr vogels this morning where he showed how you can take an entire fleet of",
    "start": "613120",
    "end": "619279"
  },
  {
    "text": "servers and switch them behind the elb so if you take the practice of moving with an elb from the very beginning you",
    "start": "619279",
    "end": "625040"
  },
  {
    "text": "take advantage of that if you still choose to work with multiple versions your ability to change those versions",
    "start": "625040",
    "end": "630959"
  },
  {
    "text": "over time systematically moving some servers to one version back and forth rollback and then eventually all to",
    "start": "630959",
    "end": "637440"
  },
  {
    "text": "version two you can do all that behind the scenes behind the elb without any interruption to the customer",
    "start": "637440",
    "end": "643440"
  },
  {
    "text": "in terms of mobile apps this has a specific advantage the client app that you've distributed",
    "start": "643440",
    "end": "648720"
  },
  {
    "text": "whether it's on iphone or android or whatever it is there's no need to change that once you've sent it out because",
    "start": "648720",
    "end": "654079"
  },
  {
    "text": "that cname is embedded in the in the actual app itself so there's no need for it to be re-educated on which endpoint",
    "start": "654079",
    "end": "660320"
  },
  {
    "text": "it's going to hit to see your server now once you start to get a lot more scale and you start to add huge amounts",
    "start": "660320",
    "end": "666240"
  },
  {
    "text": "of servers the next thing you're going to have to do is how am i going to handle the adding and removing and",
    "start": "666240",
    "end": "671600"
  },
  {
    "text": "that's a very important part you want to be able to scale up and down so as soon as your usability",
    "start": "671600",
    "end": "676800"
  },
  {
    "text": "you want that consistent you want the customer experience to go the same no matter how many users there are so when",
    "start": "676800",
    "end": "681839"
  },
  {
    "text": "you scale from 50 to 50 000 users you're going to add fleets of ec2 again behind",
    "start": "681839",
    "end": "687120"
  },
  {
    "text": "the elb and that's really where auto scaling comes in so we highly recommend that you take advantage of the ability",
    "start": "687120",
    "end": "693279"
  },
  {
    "text": "to both add capacity and remove capacity when you stop needing it one of the best ways to do this is to",
    "start": "693279",
    "end": "699279"
  },
  {
    "text": "use cloudwatch it's that little icon there by using cloudwatch you can measure the",
    "start": "699279",
    "end": "704560"
  },
  {
    "text": "cpu utilization network traffic in and out you can detect exactly how hard those ec2 machines are working now",
    "start": "704560",
    "end": "711519"
  },
  {
    "text": "depending on the use case or depending on the application you're running the granularity has a has a very big role to",
    "start": "711519",
    "end": "717839"
  },
  {
    "text": "play here it might be that your application makes more sense with a few large instances or it might make sense",
    "start": "717839",
    "end": "724240"
  },
  {
    "text": "to have a lot of small instances but the ability to add and remove those instances can be controlled simply by",
    "start": "724240",
    "end": "730079"
  },
  {
    "text": "listening carefully to what the metrics are saying you can get standard metrics like cpu and network like i mentioned or you can",
    "start": "730079",
    "end": "735760"
  },
  {
    "text": "actually get custom metrics you can export a metric from within your application some of our customers are",
    "start": "735760",
    "end": "741440"
  },
  {
    "text": "detecting specific details about their application how many threads they're running how many concurrent connections",
    "start": "741440",
    "end": "747120"
  },
  {
    "text": "how many users of the day there are at the the subway that's getting the special offer and so on they can get those as custom",
    "start": "747120",
    "end": "752560"
  },
  {
    "text": "metrics and then based on a threshold they can decide whether to add or remove more capacity",
    "start": "752560",
    "end": "758639"
  },
  {
    "text": "of course this all ties into our drum beat of making sure that you've distributed your application",
    "start": "758639",
    "end": "764720"
  },
  {
    "text": "amongst availability zones so make sure that you distribute multiple availability zones two if you got more",
    "start": "764720",
    "end": "770560"
  },
  {
    "text": "if you need but you can actually have the region is covered by one elb don't think of the elb as a single machine or",
    "start": "770560",
    "end": "777040"
  },
  {
    "text": "a single item in one a z it's a region-wide service so it's able to distribute the traffic amongst multiple",
    "start": "777040",
    "end": "783200"
  },
  {
    "text": "azs but all of this starts from the very beginning when you have one machine just put an elb in it",
    "start": "783200",
    "end": "788720"
  },
  {
    "text": "from the very beginning and you won't regret it because you can follow through with some uninterrupted services for",
    "start": "788720",
    "end": "794000"
  },
  {
    "text": "your customers now we've got some great examples of this this company called buck",
    "start": "794000",
    "end": "799839"
  },
  {
    "text": "in singapore it's not a misspelling that's how they they want to call their company",
    "start": "799839",
    "end": "805519"
  },
  {
    "text": "they have done some work for singapore press holdings singapore press holdings is the biggest media distributor in the",
    "start": "805519",
    "end": "810560"
  },
  {
    "text": "area all the newspapers online financial times all the tv little clips and so on",
    "start": "810560",
    "end": "816720"
  },
  {
    "text": "and they distributed their app to millions literally millions of users on iphones ipads androids and so on now as",
    "start": "816720",
    "end": "824240"
  },
  {
    "text": "a news organization one of the exciting things they do is they have breaking news alerts and i'm sure a lot of you",
    "start": "824240",
    "end": "829680"
  },
  {
    "text": "are subscribed to a similar service they came up with a really novel way of handling this what they do is they real",
    "start": "829680",
    "end": "835440"
  },
  {
    "text": "time react to this news alert and this is how they do it we were actually in their office",
    "start": "835440",
    "end": "840560"
  },
  {
    "text": "one time having a meeting and one of these events happened so singapore press holdings the actual originator of",
    "start": "840560",
    "end": "847199"
  },
  {
    "text": "the content tells the system that it's got a news a breaking news item that's come out so they signal back to the ec2",
    "start": "847199",
    "end": "853120"
  },
  {
    "text": "servers the ec2 servers then say okay before we go and tell all our customers that are subscribed let's ramp up and be",
    "start": "853120",
    "end": "860320"
  },
  {
    "text": "ready for this so they issue a command and it's actually in the office it's funny they've got a",
    "start": "860320",
    "end": "865519"
  },
  {
    "text": "red light and a big alarm it goes this alarm's going off and what they're",
    "start": "865519",
    "end": "870639"
  },
  {
    "text": "basically giving themselves is five minutes of lead time six minutes of lead time they send a signal to the auto",
    "start": "870639",
    "end": "875760"
  },
  {
    "text": "scaler to actually ramp up the number of machines very very quickly once those machines are spun up",
    "start": "875760",
    "end": "881760"
  },
  {
    "text": "then they send the subscription alert to all the customers once that goes out to the customers what do you think the",
    "start": "881760",
    "end": "887440"
  },
  {
    "text": "first thing people do when they get a alert they go visit the website so the traffic just throws back huge amounts of",
    "start": "887440",
    "end": "893440"
  },
  {
    "text": "volume but they're ready for it because they've given themselves that five minutes what's interesting about these guys",
    "start": "893440",
    "end": "898480"
  },
  {
    "text": "they're super frugal they really know how to use aws well they're able to detect when the drop-off comes in the",
    "start": "898480",
    "end": "905199"
  },
  {
    "text": "traffic because people don't just watch the headline they then you know swim around go look at a few other items",
    "start": "905199",
    "end": "910240"
  },
  {
    "text": "check on their stocks etc once that traffic goes below a certain level they can then cut the machines off and nine",
    "start": "910240",
    "end": "916000"
  },
  {
    "text": "times out of ten they tell us that this all happens within one hour so after about 45 minutes 15 minutes the",
    "start": "916000",
    "end": "921920"
  },
  {
    "text": "traffic's down they shut down the machines and they've literally paid for that excess capacity for no more than one hour and you know with aws if they",
    "start": "921920",
    "end": "928959"
  },
  {
    "text": "can shut those machines off before the one hour time there's no charge for the second half very very smart so they ramp",
    "start": "928959",
    "end": "934560"
  },
  {
    "text": "up tremendously you know five five or six times a week when there's a news alert the rest of the time really",
    "start": "934560",
    "end": "939680"
  },
  {
    "text": "running very frugal so it's a really smart real-time way you can come up with some creative ways to use",
    "start": "939680",
    "end": "945279"
  },
  {
    "text": "the order skating like that another example i don't know how many of you just a matter of interest show of",
    "start": "945279",
    "end": "951440"
  },
  {
    "start": "948000",
    "end": "1085000"
  },
  {
    "text": "hands who's actually downloaded the guidebook yeah wow that's cool very very cool did you guys see the second page on it",
    "start": "951440",
    "end": "958720"
  },
  {
    "text": "if you go onto guidebook and you go to second page it actually shows the architecture that they're using so when",
    "start": "958720",
    "end": "964959"
  },
  {
    "text": "guidebook moved their entire infrastructure onto aws they took advantage of a lot of these services",
    "start": "964959",
    "end": "971279"
  },
  {
    "text": "one of the interesting parts of this infrastructure is their asynchronous processor down at the bottom there",
    "start": "971279",
    "end": "976720"
  },
  {
    "text": "part of their service and these guys are experts at guidebooks they don't just do obviously aws invent they've done a lot of other services really good job of",
    "start": "976720",
    "end": "983279"
  },
  {
    "text": "that but what they've done is they have tasks that they can run for instance processing your entire",
    "start": "983279",
    "end": "989120"
  },
  {
    "text": "agenda and then emailing it to you now instead of loading up on their ec2 servers in the middle they're the main",
    "start": "989120",
    "end": "994160"
  },
  {
    "text": "ec2 servers they send that task to a queue service the q server says okay i'll deal with it when i can it",
    "start": "994160",
    "end": "1000240"
  },
  {
    "text": "processes it sometimes it can take 45 50 seconds to actually do the processing it",
    "start": "1000240",
    "end": "1005360"
  },
  {
    "text": "might take advantage of our email service that's ses to take the delivery of the email service so they've",
    "start": "1005360",
    "end": "1010480"
  },
  {
    "text": "offloaded as much of the work from the main ec2 servers to make their whole system more efficient very clever use of",
    "start": "1010480",
    "end": "1017440"
  },
  {
    "text": "that one more example i'll give you this is a snapshot of the usage of one",
    "start": "1017440",
    "end": "1023920"
  },
  {
    "text": "subsection of pinterest a year ago now you heard ryan talk this morning some fantastic numbers that they're dealing",
    "start": "1023920",
    "end": "1029918"
  },
  {
    "text": "with but what was really interesting a year ago was that they they knew that their peak was about 13 instances on a",
    "start": "1029919",
    "end": "1035839"
  },
  {
    "text": "daily basis they have a fairly regular pattern at that time but what they were able to do is recognize that let's just",
    "start": "1035839",
    "end": "1041520"
  },
  {
    "text": "do the most basic part of autoscaling we're going to divide the day into two and we're simply going to run full blast",
    "start": "1041520",
    "end": "1047839"
  },
  {
    "text": "during the day and half blast at night and they were able to reduce dramatically the savings just by doing",
    "start": "1047839",
    "end": "1054640"
  },
  {
    "text": "that one simple fine-tuning now they've gone a lot further over the process of the last year and you heard a lot of the",
    "start": "1054640",
    "end": "1060240"
  },
  {
    "text": "details of what he's done and some of the graphs dr vogel showed with the the capacity following exactly but this is",
    "start": "1060240",
    "end": "1066559"
  },
  {
    "text": "such a no-brainer it's so easy just to implement a simple switch off half your capacity at night and they were able to",
    "start": "1066559",
    "end": "1072000"
  },
  {
    "text": "reduce the cost per hour from 52 dollars per hour during the day down to 15 dollars",
    "start": "1072000",
    "end": "1078320"
  },
  {
    "text": "per hour at night dramatic savings when you're running this over months and months you can imagine how how efficient",
    "start": "1078320",
    "end": "1083760"
  },
  {
    "text": "that can be all right every every system needs a database and now we're going to talk a",
    "start": "1083760",
    "end": "1089200"
  },
  {
    "start": "1085000",
    "end": "1285000"
  },
  {
    "text": "little bit about the third section which is handling the data correctly now we have a bunch of data database services",
    "start": "1089200",
    "end": "1095200"
  },
  {
    "text": "you know and you've been seeing a lot of them talked about um even the the latest one launched yesterday redshift and so",
    "start": "1095200",
    "end": "1100640"
  },
  {
    "text": "on so there's there's a lot of options out there the smart thing to do here is really to take advantage of which",
    "start": "1100640",
    "end": "1106160"
  },
  {
    "text": "database fits which use case best so starting with a basic sql a lot of",
    "start": "1106160",
    "end": "1111440"
  },
  {
    "text": "people are familiar with mysql using rds it makes sense right from the back right from the start off to to use a master",
    "start": "1111440",
    "end": "1118320"
  },
  {
    "text": "and standby configuration which distributes your application to multi-az you've heard that drumbeat quite a bit this this week but",
    "start": "1118320",
    "end": "1125679"
  },
  {
    "text": "again there's some nuances to actually taking advantage of some of the additional features we have one of them is read replicas if you can add",
    "start": "1125679",
    "end": "1133360"
  },
  {
    "text": "a number of read replicas you can actually offload tasks like reporting let's say you've got a big report that",
    "start": "1133360",
    "end": "1139440"
  },
  {
    "text": "has to run once a day or once a week by having a read replica handle that you actually reduce the size required for",
    "start": "1139440",
    "end": "1145440"
  },
  {
    "text": "your entire rds fleet you can use smaller machines for your master you stand by and you read replica because",
    "start": "1145440",
    "end": "1151360"
  },
  {
    "text": "the master is not being loaded up with the peak of having to do that that workload of that report at the same time",
    "start": "1151360",
    "end": "1157840"
  },
  {
    "text": "then you can also offload certain other tasks or use cases to things like elastic cache and dynamodb our new nosql",
    "start": "1157840",
    "end": "1165520"
  },
  {
    "text": "database so some of the examples of that is as your scaling happens as you're changing back",
    "start": "1165520",
    "end": "1171440"
  },
  {
    "text": "and forth see if i can go back and forth should be an animator there you go you can animate your your scaling of your actual main",
    "start": "1171440",
    "end": "1179200"
  },
  {
    "text": "ec2 instances you can take advantage of those read replicas by making those web",
    "start": "1179200",
    "end": "1184799"
  },
  {
    "text": "servers smart and what i mean is they've got to be able to know that if the read replica is there it can take advantage",
    "start": "1184799",
    "end": "1190640"
  },
  {
    "text": "of it it can offload the read traffic from the master and leave the master just for rights and you'll see some",
    "start": "1190640",
    "end": "1197200"
  },
  {
    "text": "examples of that later as well from from enricher additional offloading that you can do is",
    "start": "1197200",
    "end": "1203120"
  },
  {
    "text": "using elastic we've had some customers tell us that as many as 90 percent of their calls to the database can in fact",
    "start": "1203120",
    "end": "1209520"
  },
  {
    "text": "be moved to elastic cache what that immediately translates to is you can scale down the size of your master rds",
    "start": "1209520",
    "end": "1215520"
  },
  {
    "text": "database there's no need to have a huge system running when you only need 10 percent of the calls",
    "start": "1215520",
    "end": "1221120"
  },
  {
    "text": "and cloudwatch is actually enabled to detect the cpu work that that rds instance is doing so take advantage of",
    "start": "1221120",
    "end": "1227919"
  },
  {
    "text": "that data to tell yourself just how efficient those machines are if your rds database has a peak of 20 then clearly",
    "start": "1227919",
    "end": "1235280"
  },
  {
    "text": "you need to resize so you can revisit your architecture change the shape and size of those that rds distribution and",
    "start": "1235280",
    "end": "1241360"
  },
  {
    "text": "save yourself significant costs there while still adding more scalability as well in terms of dynamodb i'm sure a lot of",
    "start": "1241360",
    "end": "1248080"
  },
  {
    "text": "you writing mobile apps that have a lot of chatter between the web servers and the database will recognize some of",
    "start": "1248080",
    "end": "1253679"
  },
  {
    "text": "these calls index lookups and network traversals and so on if you're doing a lot of calls for each request that comes",
    "start": "1253679",
    "end": "1260000"
  },
  {
    "text": "from a client so there's 10 or 15 calls it makes no sense to be loading up a big rds database if you can offload that to",
    "start": "1260000",
    "end": "1266640"
  },
  {
    "text": "dynamodb which has incredibly low latencies less than 10 milliseconds latency to get those calls you can make",
    "start": "1266640",
    "end": "1273039"
  },
  {
    "text": "a bunch of those calls very quickly and offload that traffic from rds as well so all of these things are just all about",
    "start": "1273039",
    "end": "1279120"
  },
  {
    "text": "splitting up your application into subsections and offloading them into the smallest possible parts to make it",
    "start": "1279120",
    "end": "1284159"
  },
  {
    "text": "efficient all right the final section i'm going to hop on about here is this constant",
    "start": "1284159",
    "end": "1289840"
  },
  {
    "start": "1285000",
    "end": "1409000"
  },
  {
    "text": "encouragement we give to experiment it's amazing what you can do when you've got the ability to literally copy and paste",
    "start": "1289840",
    "end": "1295039"
  },
  {
    "text": "an entire infrastructure it's i like to visualize it as walking into a data center",
    "start": "1295039",
    "end": "1300720"
  },
  {
    "text": "boxing it saying copy paste and playing with both of them or three or four of them so with cloud formation that's",
    "start": "1300720",
    "end": "1306240"
  },
  {
    "text": "literally what you can do we encourage you to use cloudformation to describe a stack that can be repeatedly spun up so",
    "start": "1306240",
    "end": "1314400"
  },
  {
    "text": "nothing is manual this is another big message if you can automate a lot of your process in terms of spinning up the",
    "start": "1314400",
    "end": "1320320"
  },
  {
    "text": "whole stack you can spin up a stack very very quickly and just as quickly you can tear it down so think about it in terms",
    "start": "1320320",
    "end": "1326799"
  },
  {
    "text": "of a new developer that shows up in your company you can give them a complete copy of your entire infrastructure to",
    "start": "1326799",
    "end": "1332159"
  },
  {
    "text": "play with for a few days let them break everything and just throw it away very very simple very very cheap and that's a",
    "start": "1332159",
    "end": "1338080"
  },
  {
    "text": "great way of doing this there's a buzzword buzz term that goes around a lot now a b testing and this is",
    "start": "1338080",
    "end": "1344559"
  },
  {
    "text": "really the ability to try variants of your application or variance of your of your mobile app to see the effect on it",
    "start": "1344559",
    "end": "1351039"
  },
  {
    "text": "with your customers one of the industries that's taking a lot of advantage of this is the gaming industry",
    "start": "1351039",
    "end": "1356240"
  },
  {
    "text": "one of our customers wooga had this game monster world and they were very interested in the pay for",
    "start": "1356240",
    "end": "1362880"
  },
  {
    "text": "marketplace for magic ones believe it or not so they wanted to test a whole bunch of different pricing structures how many",
    "start": "1362880",
    "end": "1368720"
  },
  {
    "text": "gold coins would the market pay for a bunch of magic wands and if you think",
    "start": "1368720",
    "end": "1373760"
  },
  {
    "text": "this is funny that this is serious business when you're charging a few cents per gold coin or whatever right so",
    "start": "1373760",
    "end": "1380159"
  },
  {
    "text": "what they were able to do is set up variants of the game with different pricing structures and",
    "start": "1380159",
    "end": "1386000"
  },
  {
    "text": "tested with their customers so they set up an a b situation where one group of customers again everything behind the",
    "start": "1386000",
    "end": "1391840"
  },
  {
    "text": "load balancer notice that so one group of customers will get one pricing structure the other customer will get",
    "start": "1391840",
    "end": "1397200"
  },
  {
    "text": "another pricing structure and after a few days or weeks they could detect which one is more efficient which one was generating more gold coins for wooga",
    "start": "1397200",
    "end": "1404400"
  },
  {
    "text": "and they just throw away the other one and duplicate the the one that works very efficient use of that",
    "start": "1404400",
    "end": "1409600"
  },
  {
    "start": "1409000",
    "end": "1662000"
  },
  {
    "text": "all right so now i'm going to hand over to eritra from textweb and he can tell you about how he's applied all these",
    "start": "1409600",
    "end": "1414799"
  },
  {
    "text": "services there you go thanks",
    "start": "1414799",
    "end": "1420080"
  },
  {
    "text": "yeah hi guys uh my name is aritra and i'm a software engineer in the techswift team um so textup is an experiment which",
    "start": "1420080",
    "end": "1425760"
  },
  {
    "text": "is run by intuit so i'll be talking about you know the different kind of you know experimental i mean experiments",
    "start": "1425760",
    "end": "1432559"
  },
  {
    "text": "and architecture journey that we've had taken on aws and uh you know just give you an insight as to what breadth practices and",
    "start": "1432559",
    "end": "1438559"
  },
  {
    "text": "guidelines we have followed while architecting our application platform or over aws",
    "start": "1438559",
    "end": "1444080"
  },
  {
    "text": "so to give an introduction to textweb uh so texthip is a global a bite-sized you know information and content platform uh",
    "start": "1444080",
    "end": "1450320"
  },
  {
    "text": "which allows fast and seamless consumption of information over mobile devices of any kind so just to you know",
    "start": "1450320",
    "end": "1456559"
  },
  {
    "text": "summarize it uh if you want to if you have a web application and you want to sms enable it so textbook is the",
    "start": "1456559",
    "end": "1462080"
  },
  {
    "text": "platform to go uh you can just go there build your app and it's available to you know the billions of mobile users and uh",
    "start": "1462080",
    "end": "1468159"
  },
  {
    "text": "we all know that every mobile phone uh you know be it of any platform iphone or android is always capable of sending a",
    "start": "1468159",
    "end": "1473760"
  },
  {
    "text": "text message so your app is instantly available to the billions of users across the world uh so right now we are",
    "start": "1473760",
    "end": "1479200"
  },
  {
    "text": "active in india and our base is mostly uh you know uh there and we also active in us and",
    "start": "1479200",
    "end": "1484960"
  },
  {
    "text": "canada um so just to talk about some numbers uh we've got some one million monthly active users and uh",
    "start": "1484960",
    "end": "1491440"
  },
  {
    "text": "we've got a total of five million users and uh we have like ten thousand apps on our platform",
    "start": "1491440",
    "end": "1496880"
  },
  {
    "text": "and uh we handle like 150 million monthly transactions so uh you know",
    "start": "1496880",
    "end": "1502400"
  },
  {
    "text": "so enough of talking i mean you can just try it out you can just take your phones out and just uh send um you know at wiki",
    "start": "1502400",
    "end": "1508240"
  },
  {
    "text": "space internet uh to a short cooking short code in the us which is eight nine eight nine three two",
    "start": "1508240",
    "end": "1513600"
  },
  {
    "text": "and just get a feel of yourself i mean just get a feel for yourself about how the platform interacts",
    "start": "1513600",
    "end": "1518720"
  },
  {
    "text": "um so i'm just going to jump into the journey of how we started off building",
    "start": "1518720",
    "end": "1524320"
  },
  {
    "text": "this whole platform so it was all in 2011 uh you know when we when we wanted to scale up the whole",
    "start": "1524320",
    "end": "1530720"
  },
  {
    "text": "platform um you know it was just a team of two members two engineers uh who wanted to just scale up the whole",
    "start": "1530720",
    "end": "1536720"
  },
  {
    "text": "platform for a event that was coming up in march and april and uh uh we we had the concepts and everything",
    "start": "1536720",
    "end": "1543440"
  },
  {
    "text": "ready um we definitely had the code uh but the biggest problem that was haunting us that time was infrastructure",
    "start": "1543440",
    "end": "1550240"
  },
  {
    "text": "and this is something that you know uh as a very small experiment that we want to run we do not want to trouble the id",
    "start": "1550240",
    "end": "1556559"
  },
  {
    "text": "guys uh you know and then just get through the halls of uh you know raising a ticket for every system you will",
    "start": "1556559",
    "end": "1562000"
  },
  {
    "text": "launch and then just deploying applications overnight and then just worry about all the auto scaling and all",
    "start": "1562000",
    "end": "1567120"
  },
  {
    "text": "the other things so we wanted to get onto the public cloud uh during that time and then we we kind of you know",
    "start": "1567120",
    "end": "1573039"
  },
  {
    "text": "that was the biggest problem on our head um so we went to the drawing board and we kind of like you know discuss among",
    "start": "1573039",
    "end": "1579360"
  },
  {
    "text": "ourselves as to what are the things that we wanted to have from the solution that we're looking for uh so one thing in our",
    "start": "1579360",
    "end": "1585039"
  },
  {
    "text": "mind was very clear we wanted seamless scale seamlessly scale uh because we were already aware that you know the",
    "start": "1585039",
    "end": "1590720"
  },
  {
    "text": "amount of loads that we would get because since we were on mobile devices that could send us a text message and each text message could hit our platform",
    "start": "1590720",
    "end": "1597679"
  },
  {
    "text": "so we've always aware that we would basically require auto scaling no matter what no matter wherever we go",
    "start": "1597679",
    "end": "1603679"
  },
  {
    "text": "um so that was definitely the priority number one for us uh second was we definitely did not want to invest a lot",
    "start": "1603679",
    "end": "1610320"
  },
  {
    "text": "because it was a small team and then we had limited budget and we want to just run you know a small quick lean",
    "start": "1610320",
    "end": "1616240"
  },
  {
    "text": "experiments and get the results as quickly as possible and also as kings mentioned in this talks we want to do experiment a lot",
    "start": "1616240",
    "end": "1623039"
  },
  {
    "text": "since it's a mobile app and the nature of you know how the users interact and we want to test it out quickly with",
    "start": "1623039",
    "end": "1629200"
  },
  {
    "text": "different forms of architecture and you know uh what is the best configuration for our system uh we just",
    "start": "1629200",
    "end": "1635120"
  },
  {
    "text": "quickly wanted to test it out on the infrastructure we're going to choose and the last but not the least we wanted",
    "start": "1635120",
    "end": "1640559"
  },
  {
    "text": "to focus on building the product rather than maintaining all the id stuff um that goes around right so uh it was just",
    "start": "1640559",
    "end": "1646159"
  },
  {
    "text": "a two-member team as i just mentioned so we did not have the time and the effort to just you know spend and just look at",
    "start": "1646159",
    "end": "1651600"
  },
  {
    "text": "the logs and then you know just maintain a just figure out which network cable broke or things like that right so uh",
    "start": "1651600",
    "end": "1658240"
  },
  {
    "text": "these are the four important things we're looking out uh for and then we evaluated a lot of vendors in the market but then the real",
    "start": "1658240",
    "end": "1664960"
  },
  {
    "text": "answer we found was with amazon web services and you know it was it was fairly new to us uh during those days and we found all",
    "start": "1664960",
    "end": "1672559"
  },
  {
    "text": "these factors to be present in amazon web services uh and during those days and then uh these are the four major",
    "start": "1672559",
    "end": "1679279"
  },
  {
    "start": "1677000",
    "end": "1699000"
  },
  {
    "text": "advantages that we found with aws which was one of one of them was definitely it allows us to quickly and you know get i",
    "start": "1679279",
    "end": "1686240"
  },
  {
    "text": "mean we do rapid deployments with aws uh we definitely had uh you know issues",
    "start": "1686240",
    "end": "1692000"
  },
  {
    "text": "with our own vendors uh that we developed in the past it allowed us to uh you know uh also do",
    "start": "1692000",
    "end": "1697679"
  },
  {
    "text": "a rapid prototyping and testing with all the ex with all the you know different forms of architecture that we wanted to play with",
    "start": "1697679",
    "end": "1704159"
  },
  {
    "text": "um we definitely had no upfront cost with it and uh it also allowed us to uh you know",
    "start": "1704159",
    "end": "1710559"
  },
  {
    "text": "get to our results very fast and in in quickest time possible right um uh so i'm just going to talk about the",
    "start": "1710559",
    "end": "1717360"
  },
  {
    "text": "different architecture uh you know what is what is generally the whole architecture of text web so when you send a text message it goes to",
    "start": "1717360",
    "end": "1724240"
  },
  {
    "text": "your cellular seller operator and then from there it travels to uh the sms aggregator or the",
    "start": "1724240",
    "end": "1730559"
  },
  {
    "text": "sms gateway and from there it goes to a platform which is hosted on aws and uh as i said it's an application",
    "start": "1730559",
    "end": "1736960"
  },
  {
    "text": "platform so it makes a third-party call to applications which are hosted either in your aws or it could also be on the",
    "start": "1736960",
    "end": "1742640"
  },
  {
    "text": "public internet and uh this whole uh you know process is asynchronous so your",
    "start": "1742640",
    "end": "1747760"
  },
  {
    "text": "request comes to the cellular operator and from there to our platform it doesn't necessarily mean that the",
    "start": "1747760",
    "end": "1752960"
  },
  {
    "text": "response will be received on the same request line so as soon as the response is available we just send it back to the",
    "start": "1752960",
    "end": "1758159"
  },
  {
    "text": "end user on a different line right so um so our early days with airblue west",
    "start": "1758159",
    "end": "1763679"
  },
  {
    "start": "1761000",
    "end": "1834000"
  },
  {
    "text": "started off by doing a lot of performance in a b architecture or a b test so uh initially we started off with",
    "start": "1763679",
    "end": "1768880"
  },
  {
    "text": "a lot of ec2 servers and a very small database so what we thought is that uh horizontal scaling would give us the you",
    "start": "1768880",
    "end": "1774720"
  },
  {
    "text": "know the breadth to run at massive scale uh you know as as i just mentioned that you know since we were available on text",
    "start": "1774720",
    "end": "1780960"
  },
  {
    "text": "uh anyone at any point in time could basically hit our platform and then we would get a massive amount of request uh",
    "start": "1780960",
    "end": "1786720"
  },
  {
    "text": "no matter what so we thought horizontal scaling is the way to go but we missed our very important point that you know",
    "start": "1786720",
    "end": "1792159"
  },
  {
    "text": "ultimately the single point of failure in application will always be a data layer and then uh if you don't secure a",
    "start": "1792159",
    "end": "1797760"
  },
  {
    "text": "data layer uh you're gonna be doomed so uh you know this this configuration did not scale well um you know as obvious uh",
    "start": "1797760",
    "end": "1804559"
  },
  {
    "text": "so uh we tried with a different configuration and this was you know we tried to reduce on the number of each two servers thereby reducing cost and",
    "start": "1804559",
    "end": "1811200"
  },
  {
    "text": "also scaling up on the database side which allowed us to uh you know scale really well uh to uh whatever amount of",
    "start": "1811200",
    "end": "1816880"
  },
  {
    "text": "load we got so uh this was about the initial architecture a b test uh you know which aws allowed",
    "start": "1816880",
    "end": "1823520"
  },
  {
    "text": "us to do uh since it was very flexible and could be done like with a two member team as well we'd not have to hire like",
    "start": "1823520",
    "end": "1828960"
  },
  {
    "text": "100 engineers to you know just to make all these changes possible um",
    "start": "1828960",
    "end": "1834159"
  },
  {
    "start": "1834000",
    "end": "1883000"
  },
  {
    "text": "you know and then as i was mentioning uh so we had a cricket world cup coming in march and april and cricket as you know",
    "start": "1834159",
    "end": "1839679"
  },
  {
    "text": "is a very important uh sporting event in india it's followed by uh billions of people and uh the world cup even i mean",
    "start": "1839679",
    "end": "1846880"
  },
  {
    "text": "it happened in india itself so uh we kind of expected a lot of traffic to come and uh you know as obvious uh the",
    "start": "1846880",
    "end": "1853200"
  },
  {
    "text": "request count was like amazing so it just went up from 10 000 requests in a day to about a million requests in a day",
    "start": "1853200",
    "end": "1859600"
  },
  {
    "text": "so and uh we did not have to do any changes in our code or our systems to make that possible uh since we have",
    "start": "1859600",
    "end": "1866080"
  },
  {
    "text": "already done the configuration uh a b tests uh before it allowed us to just you know scale up from two servers to 12",
    "start": "1866080",
    "end": "1873200"
  },
  {
    "text": "servers in just matter of days so uh auto scaling definitely definitely helped us and uh you know it allowed us",
    "start": "1873200",
    "end": "1879279"
  },
  {
    "text": "to perform really well during the world cup days um and then uh you know as we've already",
    "start": "1879279",
    "end": "1885200"
  },
  {
    "start": "1883000",
    "end": "1958000"
  },
  {
    "text": "seen in a lot of slides uh from the morning that you know how uh auto scaling and elastic needs uh have to be",
    "start": "1885200",
    "end": "1891279"
  },
  {
    "text": "managed you know how how our scaling helps us in maintaining elastic loads um so uh you know this is our uh chapter of",
    "start": "1891279",
    "end": "1898480"
  },
  {
    "text": "the story um so it shows two peaks in a day it's a typical day uh of of uh in march 2011 um when cricket and the",
    "start": "1898480",
    "end": "1905840"
  },
  {
    "text": "cricket match is in progress so the two peaks that you see is that team one is uh playing and and the second peak is",
    "start": "1905840",
    "end": "1910960"
  },
  {
    "text": "when the team two is playing so um and the orange line shows the amount of ec2 servers that we require to handle their",
    "start": "1910960",
    "end": "1917519"
  },
  {
    "text": "that kind of traffic and uh you know as you see uh the number of ec2 servers for",
    "start": "1917519",
    "end": "1922559"
  },
  {
    "text": "available follow very closely with the traffic patterns that you have in blue uh so during the day time when the match",
    "start": "1922559",
    "end": "1928720"
  },
  {
    "text": "starts uh your auto scaling kicks in and then it just handles the load for us and then uh as in when the match gets more",
    "start": "1928720",
    "end": "1936080"
  },
  {
    "text": "exciting uh you know again uh we scale up and then uh you know when the match ends uh with and like a magic all the",
    "start": "1936080",
    "end": "1943279"
  },
  {
    "text": "servers cool down and then we don't have to worry about running or over over provisioning our systems and uh spend",
    "start": "1943279",
    "end": "1948880"
  },
  {
    "text": "more on aws right so it just seamlessly uh you know helps us in maintaining the",
    "start": "1948880",
    "end": "1954080"
  },
  {
    "text": "traffic and providing our services to uh you know millions of users um so uh without auto scaling what we would",
    "start": "1954080",
    "end": "1960640"
  },
  {
    "start": "1958000",
    "end": "1979000"
  },
  {
    "text": "have ended up doing is we would have ended up running 192 server hours and now we run just 100 server hours which",
    "start": "1960640",
    "end": "1965919"
  },
  {
    "text": "means we are saving on 48 of our costs so that's a huge amount of saving uh given the fact that we were just running",
    "start": "1965919",
    "end": "1971679"
  },
  {
    "text": "an experiment and we wanted to you know just get the results out upfront and then without uh you know uh having to",
    "start": "1971679",
    "end": "1977519"
  },
  {
    "text": "spend a lot on it uh so uh in detail architecture is uh something like this um so as you uh i",
    "start": "1977519",
    "end": "1984720"
  },
  {
    "start": "1979000",
    "end": "2104000"
  },
  {
    "text": "mean if you ever tried uh sending a message to our platform the sms would have traveled to the cellular service",
    "start": "1984720",
    "end": "1990559"
  },
  {
    "text": "and then uh to the sms aggregators who basically collect all the smss and then send it back to us um",
    "start": "1990559",
    "end": "1996960"
  },
  {
    "text": "so our dns system is backed by aws so we use route 53 and then it goes to the load balancer and then just sends a",
    "start": "1996960",
    "end": "2003120"
  },
  {
    "text": "request to a server which is hosted in multi-ac um you know and then",
    "start": "2003120",
    "end": "2008480"
  },
  {
    "text": "from there we we basically make a call to the developer app that is uh that may be hosted in aws or it could be in",
    "start": "2008480",
    "end": "2014799"
  },
  {
    "text": "public internet uh we also do some kind of logging and then uh you know we we make use of dynamodb we make use of",
    "start": "2014799",
    "end": "2020480"
  },
  {
    "text": "elastic cache and uh rds uh for different reasons because uh you know some of our transactional data goes to",
    "start": "2020480",
    "end": "2026640"
  },
  {
    "text": "demodb uh and some other data goes to mysql and we also do uh you know heavy lifting from lsd cache um",
    "start": "2026640",
    "end": "2033840"
  },
  {
    "text": "then we also have a job which runs daily uh to collect the data from our data layer to inside to our corporate data",
    "start": "2033840",
    "end": "2039760"
  },
  {
    "text": "center where we do a batch processing and then big queries on top of the data that we collect and uh most interesting part of the",
    "start": "2039760",
    "end": "2045919"
  },
  {
    "text": "architecture is that we made heavy use of cloud watch alarms to uh you know to trigger auto scaling there's something",
    "start": "2045919",
    "end": "2052079"
  },
  {
    "text": "that you know i want to highlight here is that is that the default auto scaling metrics that elastic bean stock provides",
    "start": "2052079",
    "end": "2057440"
  },
  {
    "text": "uh doesn't suit all applications so in our case what we figured out is that uh",
    "start": "2057440",
    "end": "2062480"
  },
  {
    "text": "all ec2 servers were half used and then uh you know the cpu on each of them was",
    "start": "2062480",
    "end": "2067599"
  },
  {
    "text": "not so uh was not being consumed so heavily so uh you know the default metric provides the cpu scaling uh so we",
    "start": "2067599",
    "end": "2074878"
  },
  {
    "text": "thought how about setting up autos cloud voucher lamps to trigger auto scaling themselves right so uh these cloud voice",
    "start": "2074879",
    "end": "2081118"
  },
  {
    "text": "alarms basically look for the amount of threat that are there and that are there running on each of these two servers and",
    "start": "2081119",
    "end": "2086800"
  },
  {
    "text": "then as and when it breaches a certain threshold uh it basically triggers auto scaling automatically and then uh just",
    "start": "2086800",
    "end": "2094079"
  },
  {
    "text": "our one of one of the ec2 server is added or it is reduced depending on the on the conditions right so um",
    "start": "2094079",
    "end": "2100960"
  },
  {
    "text": "that's how we have taken care of auto scaling in our case and uh you know uh some of the architectural",
    "start": "2100960",
    "end": "2106079"
  },
  {
    "start": "2104000",
    "end": "2216000"
  },
  {
    "text": "changes that we've done over the period of 1.5 years uh since 2011 uh is that uh",
    "start": "2106079",
    "end": "2111520"
  },
  {
    "text": "definitely we we definitely had to handle a lot of database uh workloads uh you know as and where our user brace",
    "start": "2111520",
    "end": "2117119"
  },
  {
    "text": "also grew and then a number of apps on the platform also grew so to maintain that load uh you know we have basically",
    "start": "2117119",
    "end": "2123119"
  },
  {
    "text": "introduced elastic cache in may 2011 uh wherein we which is basically right through cache for us so we write to the database and",
    "start": "2123119",
    "end": "2129920"
  },
  {
    "text": "then we read everything back from the cache so uh the database currently just handles one job which is just to you",
    "start": "2129920",
    "end": "2135920"
  },
  {
    "text": "know get all the data and then just store it um basically all the reads are done from elastic cache and uh you know",
    "start": "2135920",
    "end": "2142079"
  },
  {
    "text": "all the workload from the database has been reduced by you know ninety percent of the times",
    "start": "2142079",
    "end": "2147119"
  },
  {
    "text": "uh then uh the right heavy needs of our application were solved by uh bisecting",
    "start": "2147119",
    "end": "2153040"
  },
  {
    "text": "application into transactional as well as you know business data the transactional data goes only to dynamodb",
    "start": "2153040",
    "end": "2158800"
  },
  {
    "text": "because we wanted to uh you know take take advantage of the right heavy uh needs and the high io intensive",
    "start": "2158800",
    "end": "2164480"
  },
  {
    "text": "nature of dynamodb so we we basically push all our transactional data to dynamodb and then have had a emr job",
    "start": "2164480",
    "end": "2171440"
  },
  {
    "text": "running which basically takes the data out of nanodb and moves it into our data center uh you know and then uh and then",
    "start": "2171440",
    "end": "2177599"
  },
  {
    "text": "as i mentioned in my architecture diagram we have auto scaling metrics set up uh which which is basically we you",
    "start": "2177599",
    "end": "2183520"
  },
  {
    "text": "know leverage through cloudwatch alarms and then which uh you know monitor the health of all the ec2 servers that we",
    "start": "2183520",
    "end": "2190160"
  },
  {
    "text": "have running and then uh it basically figures out how many threads are running in each of the ec2 servers and then just",
    "start": "2190160",
    "end": "2196079"
  },
  {
    "text": "order scales auto scales them depending on the conditions that are breached or you know if they are not met um so um",
    "start": "2196079",
    "end": "2203119"
  },
  {
    "text": "that's pretty much what i have to share about journey that we had with uh aws and uh you know i'll be",
    "start": "2203119",
    "end": "2208480"
  },
  {
    "text": "sharing it back to uh kingsley and then if you have any questions and i'll be happy to take it yeah great thanks very",
    "start": "2208480",
    "end": "2213920"
  },
  {
    "text": "much erica it's a great story yeah",
    "start": "2213920",
    "end": "2218240"
  }
]