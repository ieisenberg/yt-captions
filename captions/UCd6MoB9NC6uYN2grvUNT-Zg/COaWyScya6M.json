[
  {
    "text": "hello and welcome to the lightning talk",
    "start": "840",
    "end": "4080"
  },
  {
    "text": "on Amazon ECS and AWS fargate",
    "start": "4080",
    "end": "8099"
  },
  {
    "text": "today in this video you will see how to",
    "start": "8099",
    "end": "10740"
  },
  {
    "text": "monitor the performance of your Amazon",
    "start": "10740",
    "end": "12960"
  },
  {
    "text": "elastic container service or Amazon ECS",
    "start": "12960",
    "end": "16440"
  },
  {
    "text": "application using cloudwatch container",
    "start": "16440",
    "end": "18900"
  },
  {
    "text": "insights",
    "start": "18900",
    "end": "20039"
  },
  {
    "text": "with container insights you can",
    "start": "20039",
    "end": "22740"
  },
  {
    "text": "Aggregate and summarize metrics and logs",
    "start": "22740",
    "end": "26820"
  },
  {
    "text": "from containerized application allowing",
    "start": "26820",
    "end": "30359"
  },
  {
    "text": "you to troubleshoot your Amazon ECS",
    "start": "30359",
    "end": "33180"
  },
  {
    "text": "cluster by isolating specific issues",
    "start": "33180",
    "end": "37200"
  },
  {
    "text": "since we are talking about observability",
    "start": "37200",
    "end": "40520"
  },
  {
    "text": "it is a good idea to start with the",
    "start": "40520",
    "end": "43500"
  },
  {
    "text": "definition so that we are all on the",
    "start": "43500",
    "end": "45239"
  },
  {
    "text": "same page observability is the ability",
    "start": "45239",
    "end": "48300"
  },
  {
    "text": "to understand the state of a system or",
    "start": "48300",
    "end": "51300"
  },
  {
    "text": "application by examining its outputs",
    "start": "51300",
    "end": "53960"
  },
  {
    "text": "logs and performance metrics",
    "start": "53960",
    "end": "58260"
  },
  {
    "text": "let's start with the obvious visibility",
    "start": "58260",
    "end": "60239"
  },
  {
    "text": "visibility assist with resolving issues",
    "start": "60239",
    "end": "63000"
  },
  {
    "text": "real-time troubleshooting",
    "start": "63000",
    "end": "64978"
  },
  {
    "text": "as we move to the right hand side on",
    "start": "64979",
    "end": "68400"
  },
  {
    "text": "this Slide the examples become more",
    "start": "68400",
    "end": "70680"
  },
  {
    "text": "business focused so if observability is",
    "start": "70680",
    "end": "73619"
  },
  {
    "text": "important how do we make the systems",
    "start": "73619",
    "end": "76439"
  },
  {
    "text": "more observable",
    "start": "76439",
    "end": "78240"
  },
  {
    "text": "the first thing that you have to do is",
    "start": "78240",
    "end": "81600"
  },
  {
    "text": "this systems should emit events in the",
    "start": "81600",
    "end": "85259"
  },
  {
    "text": "form of metrics logs and traces",
    "start": "85259",
    "end": "89040"
  },
  {
    "text": "metrics helps us answer the question is",
    "start": "89040",
    "end": "91979"
  },
  {
    "text": "the application response type faster or",
    "start": "91979",
    "end": "94680"
  },
  {
    "text": "slower logs helps us troubleshoot and",
    "start": "94680",
    "end": "98040"
  },
  {
    "text": "debug specific components of the system",
    "start": "98040",
    "end": "101340"
  },
  {
    "text": "traces helps us understand",
    "start": "101340",
    "end": "103460"
  },
  {
    "text": "interconnectivity these are often called",
    "start": "103460",
    "end": "106619"
  },
  {
    "text": "the three pillars of observability",
    "start": "106619",
    "end": "108799"
  },
  {
    "text": "metrics logs and traces",
    "start": "108799",
    "end": "111720"
  },
  {
    "text": "let us talk about how to get the metrics",
    "start": "111720",
    "end": "114899"
  },
  {
    "text": "and logs for ECS",
    "start": "114899",
    "end": "117899"
  },
  {
    "text": "cloudwatch container inside collects",
    "start": "117899",
    "end": "120840"
  },
  {
    "text": "Aggregates and summarizes metrics and",
    "start": "120840",
    "end": "123600"
  },
  {
    "text": "logs from your containerized application",
    "start": "123600",
    "end": "125640"
  },
  {
    "text": "running in ECS with container insights",
    "start": "125640",
    "end": "129300"
  },
  {
    "text": "operational data is collected as",
    "start": "129300",
    "end": "132000"
  },
  {
    "text": "performance log events these are entries",
    "start": "132000",
    "end": "135720"
  },
  {
    "text": "that are structured Json schema for high",
    "start": "135720",
    "end": "139260"
  },
  {
    "text": "cardinality data to be ingested and",
    "start": "139260",
    "end": "142140"
  },
  {
    "text": "stored at scale",
    "start": "142140",
    "end": "143760"
  },
  {
    "text": "from this data cloudwatch creates higher",
    "start": "143760",
    "end": "146879"
  },
  {
    "text": "level aggregated metrics at the cluster",
    "start": "146879",
    "end": "149640"
  },
  {
    "text": "service and task level as Cloud watch",
    "start": "149640",
    "end": "152459"
  },
  {
    "text": "metrics the metrics include utilization",
    "start": "152459",
    "end": "156120"
  },
  {
    "text": "for resources such as CPU memory disk",
    "start": "156120",
    "end": "160020"
  },
  {
    "text": "and network the metrics are available in",
    "start": "160020",
    "end": "163140"
  },
  {
    "text": "the cloudwatch automatic dashboards and",
    "start": "163140",
    "end": "166080"
  },
  {
    "text": "also viewable in the metrics section of",
    "start": "166080",
    "end": "168720"
  },
  {
    "text": "the cloudwatch console",
    "start": "168720",
    "end": "171920"
  },
  {
    "text": "Cloud watch",
    "start": "172019",
    "end": "174260"
  },
  {
    "text": "automatically collects metrics for many",
    "start": "174260",
    "end": "177180"
  },
  {
    "text": "resources such as CPU memory disk and",
    "start": "177180",
    "end": "179760"
  },
  {
    "text": "Network",
    "start": "179760",
    "end": "180780"
  },
  {
    "text": "on top of it container insights also",
    "start": "180780",
    "end": "183780"
  },
  {
    "text": "provides diagnostic information such as",
    "start": "183780",
    "end": "186120"
  },
  {
    "text": "container restart failures to help you",
    "start": "186120",
    "end": "188760"
  },
  {
    "text": "isolate issues and resolve them quickly",
    "start": "188760",
    "end": "191340"
  },
  {
    "text": "you can also set cloudwatch alarms on",
    "start": "191340",
    "end": "194819"
  },
  {
    "text": "the metrics that container insights",
    "start": "194819",
    "end": "197580"
  },
  {
    "text": "collects one thing to note before we",
    "start": "197580",
    "end": "201420"
  },
  {
    "text": "head over to the demo container insights",
    "start": "201420",
    "end": "204480"
  },
  {
    "text": "supports encryption with AWS KMS key for",
    "start": "204480",
    "end": "208680"
  },
  {
    "text": "logs and metrics that it collects",
    "start": "208680",
    "end": "213120"
  },
  {
    "text": "today we will demo using AWS Management",
    "start": "213120",
    "end": "216060"
  },
  {
    "text": "console for setting up container insight",
    "start": "216060",
    "end": "219840"
  },
  {
    "text": "but please check out the documentation",
    "start": "219840",
    "end": "221940"
  },
  {
    "text": "that includes how to achieve the same",
    "start": "221940",
    "end": "224239"
  },
  {
    "text": "using Amazon",
    "start": "224239",
    "end": "227159"
  },
  {
    "text": "AWS command line interface",
    "start": "227159",
    "end": "232220"
  },
  {
    "text": "once you head over to your ECS console",
    "start": "232680",
    "end": "236480"
  },
  {
    "text": "first thing to ensure is that you're",
    "start": "236480",
    "end": "239519"
  },
  {
    "text": "running in a region where container",
    "start": "239519",
    "end": "242099"
  },
  {
    "text": "Insight is enabled",
    "start": "242099",
    "end": "244500"
  },
  {
    "text": "when you are inside your ECS console",
    "start": "244500",
    "end": "247080"
  },
  {
    "text": "there are a few ways you can do it one",
    "start": "247080",
    "end": "250080"
  },
  {
    "text": "way is to set the default for the",
    "start": "250080",
    "end": "252599"
  },
  {
    "text": "account and you can do it under account",
    "start": "252599",
    "end": "254760"
  },
  {
    "text": "setting",
    "start": "254760",
    "end": "256079"
  },
  {
    "text": "so if you go on the account setting page",
    "start": "256079",
    "end": "259019"
  },
  {
    "text": "there is a section for cloud watch",
    "start": "259019",
    "end": "261060"
  },
  {
    "text": "container insights",
    "start": "261060",
    "end": "263220"
  },
  {
    "text": "uh you can either turn off or turn on in",
    "start": "263220",
    "end": "268020"
  },
  {
    "text": "my case it is turned off by default you",
    "start": "268020",
    "end": "271500"
  },
  {
    "text": "can easily update that by clicking the",
    "start": "271500",
    "end": "274440"
  },
  {
    "text": "update button and then going to the",
    "start": "274440",
    "end": "276540"
  },
  {
    "text": "cloudwise container inside section and",
    "start": "276540",
    "end": "279300"
  },
  {
    "text": "checking that box and hitting save",
    "start": "279300",
    "end": "281220"
  },
  {
    "text": "changes",
    "start": "281220",
    "end": "282540"
  },
  {
    "text": "the other way to do it is while creating",
    "start": "282540",
    "end": "285540"
  },
  {
    "text": "a new cluster using AWS Management",
    "start": "285540",
    "end": "288000"
  },
  {
    "text": "console when you hit create cluster and",
    "start": "288000",
    "end": "292699"
  },
  {
    "text": "you can actually go down to the",
    "start": "292699",
    "end": "297660"
  },
  {
    "text": "monitoring section and",
    "start": "297660",
    "end": "301080"
  },
  {
    "text": "enable the container inside and hit",
    "start": "301080",
    "end": "304139"
  },
  {
    "text": "create once your cluster is created",
    "start": "304139",
    "end": "308220"
  },
  {
    "text": "you can go to your cluster and you can",
    "start": "308220",
    "end": "311880"
  },
  {
    "text": "verify that under Cloud watch monitoring",
    "start": "311880",
    "end": "314960"
  },
  {
    "text": "the container inside is",
    "start": "314960",
    "end": "319080"
  },
  {
    "text": "selected which is a green check mark",
    "start": "319080",
    "end": "322440"
  },
  {
    "text": "beside the container inside",
    "start": "322440",
    "end": "325500"
  },
  {
    "text": "as you can see in my ECS cluster I have",
    "start": "325500",
    "end": "328560"
  },
  {
    "text": "already enabled two Services let's head",
    "start": "328560",
    "end": "332400"
  },
  {
    "text": "over to the metrics section to see how",
    "start": "332400",
    "end": "334500"
  },
  {
    "text": "container Insight works",
    "start": "334500",
    "end": "337259"
  },
  {
    "text": "as you can see once you enable container",
    "start": "337259",
    "end": "339840"
  },
  {
    "text": "inside the tabs",
    "start": "339840",
    "end": "343080"
  },
  {
    "text": "are the sections of metrics under Matrix",
    "start": "343080",
    "end": "346320"
  },
  {
    "text": "tab is blank this is because all the",
    "start": "346320",
    "end": "350400"
  },
  {
    "text": "metrics are now aggregated to your",
    "start": "350400",
    "end": "354000"
  },
  {
    "text": "container inside dashboard which",
    "start": "354000",
    "end": "357000"
  },
  {
    "text": "provides more extensive and customizable",
    "start": "357000",
    "end": "360120"
  },
  {
    "text": "metrics display and a wider range of",
    "start": "360120",
    "end": "363060"
  },
  {
    "text": "information including CPU and memory",
    "start": "363060",
    "end": "365699"
  },
  {
    "text": "utilization tasks and service count",
    "start": "365699",
    "end": "368639"
  },
  {
    "text": "storage and network performance and",
    "start": "368639",
    "end": "372180"
  },
  {
    "text": "container instance count counts for",
    "start": "372180",
    "end": "375240"
  },
  {
    "text": "cluster services and tasks",
    "start": "375240",
    "end": "378660"
  },
  {
    "text": "you can sort the data in different ways",
    "start": "378660",
    "end": "381360"
  },
  {
    "text": "such as",
    "start": "381360",
    "end": "382919"
  },
  {
    "text": "buy Services as you can see this",
    "start": "382919",
    "end": "385199"
  },
  {
    "text": "application has two different Services",
    "start": "385199",
    "end": "387440"
  },
  {
    "text": "running and the data can be viewed for",
    "start": "387440",
    "end": "390300"
  },
  {
    "text": "each Services you can select an instance",
    "start": "390300",
    "end": "393539"
  },
  {
    "text": "name in The Legend",
    "start": "393539",
    "end": "395940"
  },
  {
    "text": "and",
    "start": "395940",
    "end": "397500"
  },
  {
    "text": "the page will be filtered for that",
    "start": "397500",
    "end": "399960"
  },
  {
    "text": "particular service you can do the same",
    "start": "399960",
    "end": "402539"
  },
  {
    "text": "level of",
    "start": "402539",
    "end": "404340"
  },
  {
    "text": "data sorting for task level again we",
    "start": "404340",
    "end": "408180"
  },
  {
    "text": "have two tasks out here one is called",
    "start": "408180",
    "end": "410100"
  },
  {
    "text": "Simple fargate another is called Simple",
    "start": "410100",
    "end": "412319"
  },
  {
    "text": "web services",
    "start": "412319",
    "end": "413759"
  },
  {
    "text": "you can select one of them to view the",
    "start": "413759",
    "end": "418919"
  },
  {
    "text": "data for that particular task",
    "start": "418919",
    "end": "421380"
  },
  {
    "text": "and we can also scroll down and you can",
    "start": "421380",
    "end": "424680"
  },
  {
    "text": "see a lot of additional information are",
    "start": "424680",
    "end": "427319"
  },
  {
    "text": "visible to you example uh your",
    "start": "427319",
    "end": "431220"
  },
  {
    "text": "containers performance some application",
    "start": "431220",
    "end": "433440"
  },
  {
    "text": "Insight Etc",
    "start": "433440",
    "end": "435479"
  },
  {
    "text": "let's see if we can do some deeper",
    "start": "435479",
    "end": "437699"
  },
  {
    "text": "analysis say for the container",
    "start": "437699",
    "end": "439740"
  },
  {
    "text": "performance for this sample container",
    "start": "439740",
    "end": "441900"
  },
  {
    "text": "which is called sampler sample web app",
    "start": "441900",
    "end": "444780"
  },
  {
    "text": "once you select that container and you",
    "start": "444780",
    "end": "447840"
  },
  {
    "text": "hit actions and you select view",
    "start": "447840",
    "end": "450060"
  },
  {
    "text": "performance log",
    "start": "450060",
    "end": "451699"
  },
  {
    "text": "you will go into the details window",
    "start": "451699",
    "end": "456120"
  },
  {
    "text": "which will have the logs inside it has",
    "start": "456120",
    "end": "459840"
  },
  {
    "text": "got some",
    "start": "459840",
    "end": "462080"
  },
  {
    "text": "sample queries that you can run and you",
    "start": "462080",
    "end": "465960"
  },
  {
    "text": "can visualize the data or you can look",
    "start": "465960",
    "end": "468720"
  },
  {
    "text": "at the logs as you as you want to do it",
    "start": "468720",
    "end": "472280"
  },
  {
    "text": "you can take advantage of the existing",
    "start": "472280",
    "end": "476460"
  },
  {
    "text": "queries or you can create your own",
    "start": "476460",
    "end": "478740"
  },
  {
    "text": "custom queries some of the sample",
    "start": "478740",
    "end": "481380"
  },
  {
    "text": "queries are that you can use are already",
    "start": "481380",
    "end": "484560"
  },
  {
    "text": "provided for you for example if I want",
    "start": "484560",
    "end": "487080"
  },
  {
    "text": "to see the 25 most recently added log",
    "start": "487080",
    "end": "489539"
  },
  {
    "text": "events I select it under common queries",
    "start": "489539",
    "end": "492240"
  },
  {
    "text": "I hit apply and then if I run the query",
    "start": "492240",
    "end": "495360"
  },
  {
    "text": "you can see the 25 most recent records",
    "start": "495360",
    "end": "499680"
  },
  {
    "text": "for cloud watch",
    "start": "499680",
    "end": "502400"
  },
  {
    "text": "logs that that is relevant for my ECS",
    "start": "502400",
    "end": "507419"
  },
  {
    "text": "cluster",
    "start": "507419",
    "end": "508800"
  },
  {
    "text": "that's it for the demo",
    "start": "508800",
    "end": "512640"
  },
  {
    "text": "thank you for watching uh today and hope",
    "start": "512640",
    "end": "517260"
  },
  {
    "text": "you enjoyed it now it's time for you to",
    "start": "517260",
    "end": "521339"
  },
  {
    "text": "try this",
    "start": "521339",
    "end": "524240"
  }
]