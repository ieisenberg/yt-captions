[
  {
    "text": "In this video, you’ll see an \nintroduction to Amazon MSK Connect,",
    "start": "0",
    "end": "3581"
  },
  {
    "text": "a feature of Amazon Managed \nStreaming for Apache Kafka (MSK).",
    "start": "3581",
    "end": "7564"
  },
  {
    "text": "MSK Connect is a fully managed Kafka\n Connect service that allows you to:",
    "start": "8575",
    "end": "12353"
  },
  {
    "text": "Deploy source and sink connectors to \neasily move data in and out of Amazon MSK.",
    "start": "12353",
    "end": "17175"
  },
  {
    "text": "Create simple no-code MSK-based \n data integration pipelines between",
    "start": "17176",
    "end": "20920"
  },
  {
    "text": "databases, key-value stores, \nsearch indexes, and file systems.",
    "start": "20920",
    "end": "26000"
  },
  {
    "text": "Transform messages using single \nmessage transforms (SMTs),",
    "start": "26000",
    "end": "30057"
  },
  {
    "text": "which allow you to apply \ntransformations as messages",
    "start": "30057",
    "end": "32467"
  },
  {
    "text": "flow through the MSK Connect framework.",
    "start": "32468",
    "end": "35244"
  },
  {
    "text": "Leverage MSK integrations with the \nAWS Glue Schema Registry (GSR)",
    "start": "35244",
    "end": "40056"
  },
  {
    "text": "and AWS Identity and \nAccess Management (IAM).",
    "start": "40056",
    "end": "43266"
  },
  {
    "text": "Traditional Kafka Connect On-Premises",
    "start": "44360",
    "end": "46565"
  },
  {
    "text": "requires significant infrastructure \nmanagement overhead.",
    "start": "46565",
    "end": "49291"
  },
  {
    "text": "This overhead includes everything from\n managing underlying hardware, OS, and",
    "start": "49834",
    "end": "53377"
  },
  {
    "text": "encryption, to deploying and configuring \nthe Kafka Connect infrastructure.",
    "start": "53377",
    "end": "57121"
  },
  {
    "text": "Kafka Connect on Amazon EC2",
    "start": "58098",
    "end": "60271"
  },
  {
    "text": "relieves the burden of hardware and \nOS management, but still requires",
    "start": "60271",
    "end": "63823"
  },
  {
    "text": "deployment and configuration of \nthe Kafka Connect infrastructure.",
    "start": "63823",
    "end": "66670"
  },
  {
    "text": "With Amazon MSK Connect,",
    "start": "67321",
    "end": "69118"
  },
  {
    "text": "the overhead of managing the \nKafka Connect infrastructure and its",
    "start": "69119",
    "end": "71876"
  },
  {
    "text": "underlying hardware is abstracted so \nthat you can focus on your use case.",
    "start": "71876",
    "end": "75796"
  },
  {
    "text": "Throughput can be increased by adding MSK \nConnect Units (MCUs) or auto scaling policies.",
    "start": "76456",
    "end": "81702"
  },
  {
    "text": "You can use Amazon MSK Connect to\n migrate data from a relational database",
    "start": "82529",
    "end": "86626"
  },
  {
    "text": "management system (RDBMS) such \nas MySQL or Oracle, or from a NoSQL",
    "start": "86626",
    "end": "91618"
  },
  {
    "text": "database such as MongoDB, to cost-\nefficient storage like Amazon S3 for",
    "start": "91618",
    "end": "96594"
  },
  {
    "text": "compliance or data analysis using \nSpark Streaming, Kinesis Data",
    "start": "96595",
    "end": "100041"
  },
  {
    "text": "Analytics for Flink, and AWS Lambda.",
    "start": "100041",
    "end": "102532"
  },
  {
    "text": "MSK is well integrated with those services.",
    "start": "103000",
    "end": "105437"
  },
  {
    "text": "The data is migrated via CDC (Change \nData Capture), which captures changes",
    "start": "105954",
    "end": "110780"
  },
  {
    "text": "in the database such as updates, \nnew record creation, and deletions.",
    "start": "110780",
    "end": "114263"
  },
  {
    "text": "You could back up data to and \nrestore from S3 for disaster recovery.",
    "start": "115424",
    "end": "119291"
  },
  {
    "text": "You can stream data from SaaS or \nenterprise applications like Salesforce",
    "start": "119943",
    "end": "123438"
  },
  {
    "text": "or Zendesk to data stores like Snowflake, \nMongoDB, or Redshift in AWS for data analysis.",
    "start": "123438",
    "end": "129254"
  },
  {
    "text": "When migrating Kafka workloads over \nto MSK from other Kafka platforms,",
    "start": "130047",
    "end": "134323"
  },
  {
    "text": "you can use MSK Connect to migrate \nyour connectors, allowing you to",
    "start": "134324",
    "end": "137763"
  },
  {
    "text": "leverage the cost efficiency and \nmanageability offered by MSK.",
    "start": "137763",
    "end": "141386"
  },
  {
    "text": "To understand how to use MSK Connect,\n let’s walk the architecture of a pipeline",
    "start": "142714",
    "end": "146622"
  },
  {
    "text": "that streams Amazon Aurora MySQL \nrecords to Amazon S3 using CDC.",
    "start": "146622",
    "end": "151108"
  },
  {
    "text": "Two connectors are configured and \ndeployed for this streaming pipeline:",
    "start": "151726",
    "end": "155011"
  },
  {
    "text": "a source connector on the Amazon \nAurora Database side, and a sink",
    "start": "155011",
    "end": "158548"
  },
  {
    "text": "connector on the Amazon S3 side.",
    "start": "158548",
    "end": "160540"
  },
  {
    "text": "On the source side, a Debezium connector \nconverts the MySQL database transaction",
    "start": "161575",
    "end": "165769"
  },
  {
    "text": "log into a sequence of CDC events that \nare streamed through the MSK cluster.",
    "start": "165769",
    "end": "170054"
  },
  {
    "text": "The source connector also serializes \nthe messages as JSON and stores the",
    "start": "170989",
    "end": "174854"
  },
  {
    "text": "JSON schema into the Glue Schema \nRegistry for schema management.",
    "start": "174854",
    "end": "178170"
  },
  {
    "text": "On the sink side, an Amazon S3 sink \nconnector retrieves the corresponding",
    "start": "178905",
    "end": "182890"
  },
  {
    "text": "schema from the Glue Schema \nRegistry and deserializes the records",
    "start": "182891",
    "end": "186592"
  },
  {
    "text": "streamed through the MSK cluster.",
    "start": "186592",
    "end": "188280"
  },
  {
    "text": "The sink connector then batches the records \nper partition and stores them in S3 buckets.",
    "start": "188749",
    "end": "192790"
  },
  {
    "text": "This MSK Connect integration \nis both no-code and serverless.",
    "start": "193341",
    "end": "196801"
  },
  {
    "text": "With MSK Connect, you can run fully\n managed Kafka Connect clusters,",
    "start": "197669",
    "end": "201964"
  },
  {
    "text": "eliminating the need to provision and \nmaintain the cluster infrastructure.",
    "start": "201964",
    "end": "205250"
  },
  {
    "text": "MSK Connect is fully compatible \nwith Kafka Connect, allowing for",
    "start": "205960",
    "end": "209561"
  },
  {
    "text": "easy migration of existing connectors.",
    "start": "209561",
    "end": "211516"
  },
  {
    "text": "MSK Connect is no-code and serverless.",
    "start": "211942",
    "end": "214561"
  },
  {
    "text": "You pay only for the resources you use.",
    "start": "214561",
    "end": "216561"
  },
  {
    "text": "You can seamlessly upscale or \nauto scale connectors as needed",
    "start": "217112",
    "end": "220287"
  },
  {
    "text": "to respond to spikes in workloads.",
    "start": "220287",
    "end": "222084"
  },
  {
    "text": "You can learn more about this topic in \nthe description and links for this video.",
    "start": "222869",
    "end": "226060"
  },
  {
    "text": "Thanks for watching. Now it's your turn to try.",
    "start": "226235",
    "end": "228254"
  }
]