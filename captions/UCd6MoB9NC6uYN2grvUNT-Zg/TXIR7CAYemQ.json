[
  {
    "text": "- Please join us in this video\n(light music)",
    "start": "0",
    "end": "1770"
  },
  {
    "text": "as we store data on AWS Timestream",
    "start": "1770",
    "end": "3730"
  },
  {
    "text": "with just one line of SQL code.",
    "start": "4800",
    "end": "7110"
  },
  {
    "text": "And now over to our technical expert, Joe.",
    "start": "7110",
    "end": "10080"
  },
  {
    "text": "- The next piece of this\npuzzle is getting an idea",
    "start": "10080",
    "end": "12480"
  },
  {
    "text": "of how the data is gonna\nflow from our sensors,",
    "start": "12480",
    "end": "14820"
  },
  {
    "text": "our weather station in our various fields,",
    "start": "14820",
    "end": "17130"
  },
  {
    "text": "all the way into a dashboard",
    "start": "17130",
    "end": "18810"
  },
  {
    "text": "that we could use to\nmonitor the situation.",
    "start": "18810",
    "end": "21483"
  },
  {
    "text": "The easiest way to understand this",
    "start": "22710",
    "end": "24359"
  },
  {
    "text": "is with a big picture or\narchitectural diagram.",
    "start": "24360",
    "end": "26610"
  },
  {
    "text": "So here we have the architectural diagram.",
    "start": "26610",
    "end": "29280"
  },
  {
    "text": "On the left-hand side,",
    "start": "29280",
    "end": "30390"
  },
  {
    "text": "you see we have a couple of sensors",
    "start": "30390",
    "end": "32220"
  },
  {
    "text": "and they're represented by",
    "start": "32220",
    "end": "33420"
  },
  {
    "text": "a sensor plus application icon on the left",
    "start": "33420",
    "end": "36449"
  },
  {
    "text": "and then an ExpressLink.",
    "start": "36450",
    "end": "38310"
  },
  {
    "text": "So those who maybe you've\npreviously had a weather station",
    "start": "38310",
    "end": "41310"
  },
  {
    "text": "that you had designed for your product",
    "start": "41310",
    "end": "42930"
  },
  {
    "text": "and now you're gonna make\nit an IOT weather station,",
    "start": "42930",
    "end": "45120"
  },
  {
    "text": "you'll add the ExpressLink.",
    "start": "45120",
    "end": "46410"
  },
  {
    "text": "We've already gone over the video",
    "start": "46410",
    "end": "47820"
  },
  {
    "text": "with the hardware changes for that",
    "start": "47820",
    "end": "50370"
  },
  {
    "text": "and that'll make the new module.",
    "start": "50370",
    "end": "52590"
  },
  {
    "text": "The data will flow over an MQTT,",
    "start": "52590",
    "end": "55080"
  },
  {
    "text": "a secured MQTT connection,\nto AWS IoT Core.",
    "start": "55080",
    "end": "59010"
  },
  {
    "text": "IoT Core is a broker\nthat's the onboarding place",
    "start": "59010",
    "end": "62309"
  },
  {
    "text": "for all the data through various topics",
    "start": "62310",
    "end": "65190"
  },
  {
    "text": "into the greater AWS Cloud.",
    "start": "65190",
    "end": "68280"
  },
  {
    "text": "The IoT Core can do a number of things,",
    "start": "68280",
    "end": "70290"
  },
  {
    "text": "but the thing that it's\ngonna do first for us",
    "start": "70290",
    "end": "72210"
  },
  {
    "text": "is it'll hold the topic data.",
    "start": "72210",
    "end": "74220"
  },
  {
    "text": "When the data arrives in that topic,",
    "start": "74220",
    "end": "76440"
  },
  {
    "text": "it'll then be redistributed",
    "start": "76440",
    "end": "78030"
  },
  {
    "text": "out to all the subscribers of that topic.",
    "start": "78030",
    "end": "80760"
  },
  {
    "text": "Inside of IoT Core,",
    "start": "80760",
    "end": "82200"
  },
  {
    "text": "we can have multiple rules\nthat will subscribe to topics.",
    "start": "82200",
    "end": "85890"
  },
  {
    "text": "So we will have a rule that listens",
    "start": "85890",
    "end": "87570"
  },
  {
    "text": "to the specific weather station topic,",
    "start": "87570",
    "end": "89730"
  },
  {
    "text": "and the rule's job is to collect the data",
    "start": "89730",
    "end": "93750"
  },
  {
    "text": "and then disseminate it\nthrough various actions",
    "start": "93750",
    "end": "96570"
  },
  {
    "text": "to wherever we may decide",
    "start": "96570",
    "end": "98040"
  },
  {
    "text": "our application needs to have data.",
    "start": "98040",
    "end": "100770"
  },
  {
    "text": "In this case, we want\nthe data to be stored",
    "start": "100770",
    "end": "102869"
  },
  {
    "text": "at a time series database.",
    "start": "102870",
    "end": "104910"
  },
  {
    "text": "So the AWS service,\nTimestream, is such a database",
    "start": "104910",
    "end": "108930"
  },
  {
    "text": "and we have a rule with an action",
    "start": "108930",
    "end": "110640"
  },
  {
    "text": "that will accept the\ndata coming on the topic",
    "start": "110640",
    "end": "113280"
  },
  {
    "text": "and copy that data into\nthe Timestream database.",
    "start": "113280",
    "end": "117060"
  },
  {
    "text": "Because it's now in a Timestream database,",
    "start": "117060",
    "end": "118979"
  },
  {
    "text": "it's very efficient to sort that data",
    "start": "118980",
    "end": "121470"
  },
  {
    "text": "and bring it out in the\norder that it arrived",
    "start": "121470",
    "end": "124290"
  },
  {
    "text": "so it's a Timestream.",
    "start": "124290",
    "end": "126300"
  },
  {
    "text": "Grafana is a dashboard tool,",
    "start": "126300",
    "end": "128340"
  },
  {
    "text": "a graphical dashboard that can do",
    "start": "128340",
    "end": "130319"
  },
  {
    "text": "a number of different\nkinds of widgets for dials.",
    "start": "130320",
    "end": "133350"
  },
  {
    "text": "It can do graphs, it can do heat maps.",
    "start": "133350",
    "end": "135270"
  },
  {
    "text": "It can do a number of things\nthat we would use to build",
    "start": "135270",
    "end": "137850"
  },
  {
    "text": "information dashboards so you\ncan get at-a-glance updates",
    "start": "137850",
    "end": "141990"
  },
  {
    "text": "on what the situation\nfor your sensors are.",
    "start": "141990",
    "end": "144483"
  },
  {
    "text": "It's capable of reading\nits data out of Timestream.",
    "start": "145500",
    "end": "148140"
  },
  {
    "text": "So now that we have all\nthe data through the rule,",
    "start": "148140",
    "end": "150150"
  },
  {
    "text": "from the topic into the\nrule into Timestream,",
    "start": "150150",
    "end": "152482"
  },
  {
    "text": "Grafana will reach into Timestream",
    "start": "152483",
    "end": "154740"
  },
  {
    "text": "and extract the parameters",
    "start": "154740",
    "end": "156870"
  },
  {
    "text": "according to queries that you write.",
    "start": "156870",
    "end": "158640"
  },
  {
    "text": "It'll extract those parameters",
    "start": "158640",
    "end": "159960"
  },
  {
    "text": "and then present them to you",
    "start": "159960",
    "end": "161550"
  },
  {
    "text": "with the graphical widget that you desire.",
    "start": "161550",
    "end": "164520"
  },
  {
    "text": "We'll put in more detail",
    "start": "164520",
    "end": "165930"
  },
  {
    "text": "on exactly how that's done\nin just a few minutes.",
    "start": "165930",
    "end": "168540"
  },
  {
    "text": "The AWS Console, the cloud side connection",
    "start": "168540",
    "end": "171810"
  },
  {
    "text": "and the configuration of our\naccount will be covered now.",
    "start": "171810",
    "end": "174993"
  },
  {
    "text": "This is the main console",
    "start": "176040",
    "end": "177329"
  },
  {
    "text": "when you log into your AWS account.",
    "start": "177330",
    "end": "179820"
  },
  {
    "text": "The first thing we wanna do\nis make sure we have a thing",
    "start": "179820",
    "end": "182310"
  },
  {
    "text": "that represents our weather station.",
    "start": "182310",
    "end": "183630"
  },
  {
    "text": "So we're gonna go into\nthe IoT Core service.",
    "start": "183630",
    "end": "186183"
  },
  {
    "text": "This is the IoT Core service",
    "start": "188040",
    "end": "189659"
  },
  {
    "text": "and we will make sure\nthat we've got our device.",
    "start": "189660",
    "end": "192060"
  },
  {
    "text": "A device would actually be called a thing.",
    "start": "192930",
    "end": "195180"
  },
  {
    "text": "That's a specific device,",
    "start": "195180",
    "end": "197040"
  },
  {
    "text": "and here we see that we\nhave two things registered.",
    "start": "197040",
    "end": "199680"
  },
  {
    "text": "These long cryptic names",
    "start": "199680",
    "end": "202230"
  },
  {
    "text": "or number strings are the thing names",
    "start": "202230",
    "end": "205530"
  },
  {
    "text": "that come as an ExpressLink.",
    "start": "205530",
    "end": "207140"
  },
  {
    "text": "Every ExpressLink comes from the factory",
    "start": "207141",
    "end": "209460"
  },
  {
    "text": "with some kind of a thing\nname already attached.",
    "start": "209460",
    "end": "212160"
  },
  {
    "text": "You can see that there's\ntwo different kinds",
    "start": "212160",
    "end": "213810"
  },
  {
    "text": "of thing names here.",
    "start": "213810",
    "end": "215280"
  },
  {
    "text": "The shorter one on top was the thing name",
    "start": "215280",
    "end": "217680"
  },
  {
    "text": "registered with the uBlock\nSARA-R5-based ExpressLink.",
    "start": "217680",
    "end": "222239"
  },
  {
    "text": "They had a different kind\nof a thing name identifier",
    "start": "222240",
    "end": "225420"
  },
  {
    "text": "and expressive with the\nC3-MINI-based ExpressLink",
    "start": "225420",
    "end": "228840"
  },
  {
    "text": "had this identifier.",
    "start": "228840",
    "end": "230250"
  },
  {
    "text": "They're all unique, and\nso it doesn't matter,",
    "start": "230250",
    "end": "232020"
  },
  {
    "text": "but you just need to\nknow which one is which",
    "start": "232020",
    "end": "234000"
  },
  {
    "text": "until you give it some\nspecific identification.",
    "start": "234000",
    "end": "237453"
  },
  {
    "text": "So we can go in here",
    "start": "238830",
    "end": "239670"
  },
  {
    "text": "and we can verify that\neverything's set up.",
    "start": "239670",
    "end": "241410"
  },
  {
    "text": "It has a certificate.",
    "start": "241410",
    "end": "242790"
  },
  {
    "text": "There's the ARN for this device.",
    "start": "242790",
    "end": "244500"
  },
  {
    "text": "There's the certificate that\ncomes out of the ExpressLink.",
    "start": "244500",
    "end": "247710"
  },
  {
    "text": "It was registered here,",
    "start": "247710",
    "end": "249120"
  },
  {
    "text": "so everything is fine.",
    "start": "249120",
    "end": "250080"
  },
  {
    "text": "We don't have to do anything here.",
    "start": "250080",
    "end": "251883"
  },
  {
    "text": "Normally I would also check",
    "start": "253380",
    "end": "254910"
  },
  {
    "text": "to verify that data was arriving,",
    "start": "254910",
    "end": "256859"
  },
  {
    "text": "but I don't have this\ndevice online at the moment.",
    "start": "256860",
    "end": "259590"
  },
  {
    "text": "So on a previous day,",
    "start": "259590",
    "end": "261090"
  },
  {
    "text": "I did verify that the data was arriving.",
    "start": "261090",
    "end": "263340"
  },
  {
    "text": "It's just not running right now",
    "start": "263340",
    "end": "264600"
  },
  {
    "text": "because we're still debugging systems.",
    "start": "264600",
    "end": "266943"
  },
  {
    "text": "The next piece we have\nto do is set a rule.",
    "start": "267990",
    "end": "270569"
  },
  {
    "text": "The message routing, then go to rules,",
    "start": "270570",
    "end": "272700"
  },
  {
    "text": "and we see that we have two rules.",
    "start": "272700",
    "end": "274470"
  },
  {
    "text": "Let's look at my rule\nfor the IngestJoeData.",
    "start": "274470",
    "end": "277143"
  },
  {
    "text": "The rule is simple.",
    "start": "278400",
    "end": "279389"
  },
  {
    "text": "There's an SQL-like statement",
    "start": "279390",
    "end": "281670"
  },
  {
    "text": "that identifies the parameters.",
    "start": "281670",
    "end": "283380"
  },
  {
    "text": "In this case, it's select the wind speed",
    "start": "283380",
    "end": "285780"
  },
  {
    "text": "of average of two miles an hour,",
    "start": "285780",
    "end": "287520"
  },
  {
    "text": "average of two minutes.",
    "start": "287520",
    "end": "288840"
  },
  {
    "text": "Wind direction, average of two minutes.",
    "start": "288840",
    "end": "290730"
  },
  {
    "text": "The temperature in Fahrenheit,",
    "start": "290730",
    "end": "292590"
  },
  {
    "text": "the daily rainfall in inches, pressure.",
    "start": "292590",
    "end": "295560"
  },
  {
    "text": "All of these parameters\nare present in the data",
    "start": "295560",
    "end": "298139"
  },
  {
    "text": "that's coming out of the\nExpressLink as a JSON document.",
    "start": "298140",
    "end": "302040"
  },
  {
    "text": "So SQL, this SQL statement is able",
    "start": "302040",
    "end": "304350"
  },
  {
    "text": "to parse that JSON document",
    "start": "304350",
    "end": "306240"
  },
  {
    "text": "and extract these parameters.",
    "start": "306240",
    "end": "308669"
  },
  {
    "text": "And it says it's gonna extract",
    "start": "308670",
    "end": "310140"
  },
  {
    "text": "these parameters from this topic,",
    "start": "310140",
    "end": "313350"
  },
  {
    "text": "the weather sensor with this big name,",
    "start": "313350",
    "end": "315990"
  },
  {
    "text": "my unique thing name.",
    "start": "315990",
    "end": "317580"
  },
  {
    "text": "These topics can be\nanything that we define.",
    "start": "317580",
    "end": "319710"
  },
  {
    "text": "I happen to define this particular one.",
    "start": "319710",
    "end": "322229"
  },
  {
    "text": "Dan chose a different topic.",
    "start": "322230",
    "end": "324210"
  },
  {
    "text": "And the reason we have two\ndifferent SQL statements",
    "start": "324210",
    "end": "326430"
  },
  {
    "text": "in two different devices,",
    "start": "326430",
    "end": "327840"
  },
  {
    "text": "since we didn't collaborate\nwe just made two rules",
    "start": "327840",
    "end": "331110"
  },
  {
    "text": "and we sent all the\ndata to the same action.",
    "start": "331110",
    "end": "333719"
  },
  {
    "text": "So let's look at that.",
    "start": "333720",
    "end": "335520"
  },
  {
    "text": "We can have multiple actions.",
    "start": "335520",
    "end": "337110"
  },
  {
    "text": "So when the SQL statement matches,",
    "start": "337110",
    "end": "339780"
  },
  {
    "text": "the actions will run.",
    "start": "339780",
    "end": "341700"
  },
  {
    "text": "This action runs a Timestream table right.",
    "start": "341700",
    "end": "345060"
  },
  {
    "text": "Write a message into a Timestream table,",
    "start": "345060",
    "end": "347220"
  },
  {
    "text": "so that's the action",
    "start": "347220",
    "end": "348570"
  },
  {
    "text": "and that action, we have\nto specify a database name,",
    "start": "348570",
    "end": "352620"
  },
  {
    "text": "we're calling that Weather Data,",
    "start": "352620",
    "end": "354180"
  },
  {
    "text": "and the table name that\nwill receive that data.",
    "start": "354180",
    "end": "357240"
  },
  {
    "text": "We can also add additional dimensions",
    "start": "357240",
    "end": "359729"
  },
  {
    "text": "which are kind of like\nmetadata on the topic.",
    "start": "359730",
    "end": "363000"
  },
  {
    "text": "The dimension in this case is\nI specified one with location",
    "start": "363000",
    "end": "366420"
  },
  {
    "text": "and one with the value of Joe",
    "start": "366420",
    "end": "368070"
  },
  {
    "text": "so that we can identify later in Grafana",
    "start": "368070",
    "end": "370530"
  },
  {
    "text": "that this was my weather station.",
    "start": "370530",
    "end": "372303"
  },
  {
    "text": "So I'll close that.",
    "start": "373800",
    "end": "375780"
  },
  {
    "text": "In these actions you can\nactually have multiple actions",
    "start": "375780",
    "end": "378420"
  },
  {
    "text": "and you can create actions\nthat happen only on errors.",
    "start": "378420",
    "end": "381330"
  },
  {
    "text": "So I could add an action",
    "start": "381330",
    "end": "383159"
  },
  {
    "text": "that might be to pass the data to a lambda",
    "start": "383160",
    "end": "385800"
  },
  {
    "text": "where I could then run,\nI don't know, Python code",
    "start": "385800",
    "end": "388289"
  },
  {
    "text": "that would process that data in the cloud",
    "start": "388290",
    "end": "390960"
  },
  {
    "text": "rather than processing\nthat data on the edge.",
    "start": "390960",
    "end": "393603"
  },
  {
    "text": "So this is the action.",
    "start": "394710",
    "end": "395699"
  },
  {
    "text": "This rule catches the data",
    "start": "395700",
    "end": "398250"
  },
  {
    "text": "and passes it to\nTimestream by this action.",
    "start": "398250",
    "end": "400980"
  },
  {
    "text": "Let's go over to Timestream now.",
    "start": "400980",
    "end": "402263"
  },
  {
    "text": "So there's the Timestream service.",
    "start": "405420",
    "end": "407220"
  },
  {
    "text": "Let's open up the Timestream service",
    "start": "407220",
    "end": "409350"
  },
  {
    "text": "and we see in the Timestream service,",
    "start": "409350",
    "end": "410970"
  },
  {
    "text": "we have the weather data database.",
    "start": "410970",
    "end": "413133"
  },
  {
    "text": "It's monitoring, we can see",
    "start": "414330",
    "end": "415620"
  },
  {
    "text": "all the different ingestion points,",
    "start": "415620",
    "end": "417840"
  },
  {
    "text": "when data's been arriving",
    "start": "417840",
    "end": "419310"
  },
  {
    "text": "and how many times the rules run.",
    "start": "419310",
    "end": "422400"
  },
  {
    "text": "So we can see the health of our system.",
    "start": "422400",
    "end": "424949"
  },
  {
    "text": "We can look at the table.",
    "start": "424950",
    "end": "426030"
  },
  {
    "text": "We see that we have two tables,",
    "start": "426030",
    "end": "427800"
  },
  {
    "text": "but the one that we were\nwriting to is just data.",
    "start": "427800",
    "end": "430139"
  },
  {
    "text": "So I can look at just this one",
    "start": "430140",
    "end": "431940"
  },
  {
    "text": "and I can see that there's",
    "start": "431940",
    "end": "432990"
  },
  {
    "text": "the critical information about that table.",
    "start": "432990",
    "end": "435660"
  },
  {
    "text": "But this is kind of boring.",
    "start": "435660",
    "end": "436830"
  },
  {
    "text": "Let's look at a query.",
    "start": "436830",
    "end": "438123"
  },
  {
    "text": "So this would be select\nstar from weatherData.data.",
    "start": "439350",
    "end": "443940"
  },
  {
    "text": "So this basically says\ngive me all the information",
    "start": "443940",
    "end": "447510"
  },
  {
    "text": "that's currently in the table data",
    "start": "447510",
    "end": "449970"
  },
  {
    "text": "of the database weather\ndata, let's run that.",
    "start": "449970",
    "end": "453300"
  },
  {
    "text": "So here's a bunch of data.",
    "start": "453300",
    "end": "454470"
  },
  {
    "text": "Now this data is not\nin any particular order",
    "start": "454470",
    "end": "457380"
  },
  {
    "text": "because I didn't tell the query",
    "start": "457380",
    "end": "459450"
  },
  {
    "text": "to put it in any kind of an order.",
    "start": "459450",
    "end": "461193"
  },
  {
    "text": "Here's another query, select\nstar from weatherData.danData,",
    "start": "462330",
    "end": "466379"
  },
  {
    "text": "order by time, and limit\nit to ascending order",
    "start": "466380",
    "end": "470280"
  },
  {
    "text": "to test the Timestream",
    "start": "470280",
    "end": "471990"
  },
  {
    "text": "to make sure that our data is arriving",
    "start": "471990",
    "end": "473699"
  },
  {
    "text": "and we can run a query on the data.",
    "start": "473700",
    "end": "475590"
  },
  {
    "text": "We will run a sample query.",
    "start": "475590",
    "end": "477570"
  },
  {
    "text": "In the database weather data,",
    "start": "477570",
    "end": "479460"
  },
  {
    "text": "we'll run the query select star everything",
    "start": "479460",
    "end": "482789"
  },
  {
    "text": "from weatherData.data, order by time",
    "start": "482790",
    "end": "486270"
  },
  {
    "text": "so it'll be in time order,",
    "start": "486270",
    "end": "488460"
  },
  {
    "text": "ascending order, limit of just 10 entries.",
    "start": "488460",
    "end": "491400"
  },
  {
    "text": "If we run that query,",
    "start": "491400",
    "end": "492570"
  },
  {
    "text": "we'll see that here's a bunch\nof information on the data",
    "start": "492570",
    "end": "495840"
  },
  {
    "text": "and now it's in time order,",
    "start": "495840",
    "end": "497730"
  },
  {
    "text": "and we can see that the data\nis stored as measure values,",
    "start": "497730",
    "end": "502470"
  },
  {
    "text": "and some of them are doubles",
    "start": "502470",
    "end": "503670"
  },
  {
    "text": "and some of them are big integers.",
    "start": "503670",
    "end": "505770"
  },
  {
    "text": "So you'll need to remember\nthat when we get into Grafana",
    "start": "505770",
    "end": "508229"
  },
  {
    "text": "because the temperature, the\nfloating point temperature",
    "start": "508230",
    "end": "510960"
  },
  {
    "text": "is obviously a double\nformat, 85.196 degrees,",
    "start": "510960",
    "end": "515490"
  },
  {
    "text": "and the timestamp information\nis just a large number.",
    "start": "515490",
    "end": "519573"
  },
  {
    "text": "There's other pieces of information",
    "start": "521160",
    "end": "522750"
  },
  {
    "text": "like the daily rain in inches is,",
    "start": "522750",
    "end": "525873"
  },
  {
    "text": "it's a big integer",
    "start": "526800",
    "end": "527880"
  },
  {
    "text": "but it's not a floating point value.",
    "start": "527880",
    "end": "529290"
  },
  {
    "text": "So our system gives us\nwhole numbers in inches.",
    "start": "529290",
    "end": "532589"
  },
  {
    "text": "Of course, I haven't had any\nrain here lately in Tucson.",
    "start": "532590",
    "end": "535650"
  },
  {
    "text": "All right, the data is now in Timestream.",
    "start": "535650",
    "end": "538080"
  },
  {
    "text": "It clearly is recording\nstuff, so we're live.",
    "start": "538080",
    "end": "541560"
  },
  {
    "text": "The next step is gonna\nbe move into Grafana",
    "start": "541560",
    "end": "544080"
  },
  {
    "text": "and turn this raw data into nice pictures.",
    "start": "544080",
    "end": "548026"
  },
  {
    "text": "(light music)",
    "start": "548026",
    "end": "548859"
  },
  {
    "text": "- Thanks, Joe, for walking us",
    "start": "548859",
    "end": "549840"
  },
  {
    "text": "through the data flow architecture,",
    "start": "549840",
    "end": "551760"
  },
  {
    "text": "showing how to add Timestream\ndatabase on IoT console",
    "start": "551760",
    "end": "555150"
  },
  {
    "text": "and writing the script.",
    "start": "555150",
    "end": "556710"
  },
  {
    "text": "It is amazing to see the\nease of using ExpressLink.",
    "start": "556710",
    "end": "559993"
  }
]