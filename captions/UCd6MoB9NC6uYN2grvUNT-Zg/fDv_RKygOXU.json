[
  {
    "text": "welcome for those of you on the Twitch we are now broadcasting live again from the AWS loft in San Francisco for those",
    "start": "60",
    "end": "6960"
  },
  {
    "text": "of you here in the room we're just coming back from lunch here for Serb last day as part of the recap week here at the san francisco loft for those of",
    "start": "6960",
    "end": "13200"
  },
  {
    "text": "you been watching the twitch channel you just saw the previous session on Sumerian and now we're back here in the loft talking about server lists topics",
    "start": "13200",
    "end": "20220"
  },
  {
    "text": "for the rest of the day so we're we're into the second half of the day here got a bunch of fun stuff that we talked",
    "start": "20220",
    "end": "26250"
  },
  {
    "text": "about just recapping where we were in the first part of the day we had an introduction to lambda and sir bliss applications we talked about lambda and",
    "start": "26250",
    "end": "34260"
  },
  {
    "text": "some of the products we did around that we spent our time talking about some of our tooling with AWS Sam and the Sam CLI",
    "start": "34260",
    "end": "39870"
  },
  {
    "text": "you saw how easy it was to take that CLI tool basically start at zero and build",
    "start": "39870",
    "end": "45690"
  },
  {
    "text": "up to a running application and get things going now we're going to dive a little deeper into one of the the",
    "start": "45690",
    "end": "51149"
  },
  {
    "text": "biggest announcements that we hadn't reinvent for any of you who are at reinvent and watch the live stream Amazon CT over intervals",
    "start": "51149",
    "end": "58140"
  },
  {
    "text": "announced this live on stage from the product side we were really excited been working on this for a long time and it's",
    "start": "58140",
    "end": "63449"
  },
  {
    "text": "pretty cool stuff so that's we're gonna spend the next hour on here after this then we're gonna talk a lot about API",
    "start": "63449",
    "end": "69030"
  },
  {
    "text": "gateway dive really deep into that and then we'll finish out the day here talking about EWS step functions so",
    "start": "69030",
    "end": "74970"
  },
  {
    "text": "let's get into that those of you who are just joining us live who weren't here earlier if those of you who are maybe here at loft who weren't here before",
    "start": "74970",
    "end": "80460"
  },
  {
    "text": "lunch again my name is Chris Mons currently principle and lead developer advocate for service at AWS based out of",
    "start": "80460",
    "end": "86250"
  },
  {
    "text": "our new york city office i've been an AWS for a little over six and a half years across a couple different roles and before that came from more",
    "start": "86250",
    "end": "92670"
  },
  {
    "text": "traditional kind of startup DevOps operations background managing infrastructure both physically and in",
    "start": "92670",
    "end": "98700"
  },
  {
    "text": "the cloud so for today so this week at the loft in on twitch we've been doing a",
    "start": "98700",
    "end": "104880"
  },
  {
    "text": "recap of announcements from reinvent and kind of a catch up on where we are in some of these products portfolio spaces",
    "start": "104880",
    "end": "111689"
  },
  {
    "text": "herbalists again is the topic here today now in the center of the world for service for us here at AWS is a SS",
    "start": "111689",
    "end": "118950"
  },
  {
    "text": "lambda and we talked really earlier about lambda again being a compute service various capabilities and",
    "start": "118950",
    "end": "124799"
  },
  {
    "text": "attributes that it has and the concept of a service application and so again a service application is you have some",
    "start": "124799",
    "end": "130979"
  },
  {
    "text": "sort of event source you have function which is code that you've written that responds to an event that",
    "start": "130979",
    "end": "136620"
  },
  {
    "text": "you've configured and then again your code can do whatever it might need to do in terms of talking to databases data",
    "start": "136620",
    "end": "143130"
  },
  {
    "text": "stores other API is in the internet services etc so we also talked a little",
    "start": "143130",
    "end": "149970"
  },
  {
    "text": "bit about the anatomy of a lambda function and so we saw an example really early on here the day where we had a",
    "start": "149970",
    "end": "156150"
  },
  {
    "text": "really basic lambda function just a couple lines of code where we have the handler which is called here lambda",
    "start": "156150",
    "end": "161820"
  },
  {
    "text": "underscore Handler and this is kind of the the interjection point that the lambda compute service uses to start",
    "start": "161820",
    "end": "168660"
  },
  {
    "text": "executing your code that could get passed into it what's called an event object so depending on your event source",
    "start": "168660",
    "end": "174090"
  },
  {
    "text": "there could be data about say an API call or data for about an s3 bucket or from a su s queue what have you and",
    "start": "174090",
    "end": "181770"
  },
  {
    "text": "that's going to be typically what you're going to interface with in terms of the customer action as it were that you have",
    "start": "181770",
    "end": "186780"
  },
  {
    "text": "then we have the context object and the context object represents information about the underlying configuration of",
    "start": "186780",
    "end": "193320"
  },
  {
    "text": "the platform both stuff you have controlled and then stuff that's just available to you so now imagine this",
    "start": "193320",
    "end": "198900"
  },
  {
    "text": "function and again this was a really basic function right all it did was spit out hello world and and that was kind of",
    "start": "198900",
    "end": "204870"
  },
  {
    "text": "it if we were to take this expand upon date and imagine if you were that we're gonna build an API based application so",
    "start": "204870",
    "end": "213120"
  },
  {
    "text": "the first thing we're typically going to do and this is a general best practice for server lists for service functions in AWS is we have our handler but",
    "start": "213120",
    "end": "221070"
  },
  {
    "text": "probably wanted to use something much more complicated with the business logic for our function and so this is kind of",
    "start": "221070",
    "end": "226260"
  },
  {
    "text": "pseudo cold so don't expect this to look exactly like any one specific language but imagine that based on the event that",
    "start": "226260",
    "end": "232320"
  },
  {
    "text": "we have we're going to do one of two different things with the event structure of the data that's passed in",
    "start": "232320",
    "end": "237570"
  },
  {
    "text": "and so maybe what we want to do is break out two different sub functions that represent some sort of business logic as",
    "start": "237570",
    "end": "243840"
  },
  {
    "text": "part of that and this is a pretty common model where you'll see the handler then pass things off to that sub function",
    "start": "243840",
    "end": "249240"
  },
  {
    "text": "that that's a little bit more purposeful typically though this will be expanded",
    "start": "249240",
    "end": "254580"
  },
  {
    "text": "upon where what you're almost always going to have in most modern languages today there's some sort of libraries",
    "start": "254580",
    "end": "259739"
  },
  {
    "text": "that you want to import these could be third-party open source libraries things from with inside your organization other",
    "start": "259739",
    "end": "265260"
  },
  {
    "text": "stuff like that there's also a concept inside of lambda functions which is considered pre",
    "start": "265260",
    "end": "271440"
  },
  {
    "text": "handler code let me explain a little bit what happens with pre handler code and you see this many lines up above here",
    "start": "271440",
    "end": "277050"
  },
  {
    "text": "now when we execute a lambda function or when a lambda function invocation comes in and we go and we take your code and",
    "start": "277050",
    "end": "285120"
  },
  {
    "text": "we put that into the underlying compute resources that we have and we do the first bootstrap of that environment one",
    "start": "285120",
    "end": "291690"
  },
  {
    "text": "thing that you might want to do is run some code before execution to do things like handle database connections import",
    "start": "291690",
    "end": "298590"
  },
  {
    "text": "libraries talk to things like secrets managers or password stores and then you",
    "start": "298590",
    "end": "303870"
  },
  {
    "text": "could take those resources those secrets those imported libraries and have those pre-existing so that in subsequent",
    "start": "303870",
    "end": "309870"
  },
  {
    "text": "invocations it can reuse those so basically this allows you to reuse active connections active libraries",
    "start": "309870",
    "end": "316500"
  },
  {
    "text": "active bits of information inside of your function now we will only call this code once during that initial bootstrap",
    "start": "316500",
    "end": "324030"
  },
  {
    "text": "and then again as subsequent indications come in we'll look for then what's considered a pre-warmed environment and",
    "start": "324030",
    "end": "329969"
  },
  {
    "text": "attempt to reuse these for you and then over scale you get more of these and we fire more of them up and they make those calls",
    "start": "329969",
    "end": "335729"
  },
  {
    "text": "so really common have a lambda function where you've got something about a pre handler code so dependencies",
    "start": "335729",
    "end": "341130"
  },
  {
    "text": "configuration information helpers you may then have those helper functions to find you then have your handler and then",
    "start": "341130",
    "end": "348180"
  },
  {
    "text": "you'll have sub like business logic functions in that same file now imagine again this could be a no js' or Python",
    "start": "348180",
    "end": "354779"
  },
  {
    "text": "or Java or whatever general kind of structure that you're going to have now",
    "start": "354779",
    "end": "359909"
  },
  {
    "text": "let's assume that I have an API based service so I have an API gateway which again we're going to go into little more depth here later today and then I've got",
    "start": "359909",
    "end": "366029"
  },
  {
    "text": "a number of different API calls that I'm going to make off of my API so I can call the orders API the forum's search",
    "start": "366029",
    "end": "372630"
  },
  {
    "text": "call etc etc etc and then based on that call I am probably going to talk to",
    "start": "372630",
    "end": "379139"
  },
  {
    "text": "something right so my code is you need to talk to databases or data stores may be getting configuration or secrets",
    "start": "379139",
    "end": "384750"
  },
  {
    "text": "information from another service or what have you so if we put all this together what we could imagine is that I have a",
    "start": "384750",
    "end": "392849"
  },
  {
    "text": "lot of these functions and it is kind of a best practice to have a function per API call or a per sort of you know",
    "start": "392849",
    "end": "398729"
  },
  {
    "text": "different capability so for each of those bits of code I'm gonna have pre handler information",
    "start": "398729",
    "end": "404040"
  },
  {
    "text": "imports configuration information helper functions and probably some sort of business logic code or function and so",
    "start": "404040",
    "end": "411840"
  },
  {
    "text": "as we see here in this diagram all of those kind of smaller blue boxes and the orange boxes could effectively be to",
    "start": "411840",
    "end": "418680"
  },
  {
    "text": "some degree duplicated code and so we could have a lot of duplication that exists right we're just showing you a",
    "start": "418680",
    "end": "424110"
  },
  {
    "text": "couple of these if I had an API that had 60 70 80 calls in it it could be a lot of duplication that might exist and so",
    "start": "424110",
    "end": "431970"
  },
  {
    "text": "3ala of it is is we want something that looks more like this we want our business logic and our handlers join",
    "start": "431970",
    "end": "438030"
  },
  {
    "text": "together and then any of this helper stuff any of this duplicated stuff we would like to just be able to kind of glob that on with the rest of our",
    "start": "438030",
    "end": "444000"
  },
  {
    "text": "function and now traditionally you've been able to do this with things like traditional dependency management for a",
    "start": "444000",
    "end": "449880"
  },
  {
    "text": "lot of languages so native packages things like pip packages or gems in Ruby or NPM packages for nodejs and there's",
    "start": "449880",
    "end": "460320"
  },
  {
    "text": "all sorts of different ways of reusing code but in the context of lambda some of this might be more specific and it might be larger than just a single",
    "start": "460320",
    "end": "466620"
  },
  {
    "text": "package and so this was kind of a common pain point that we had seen with",
    "start": "466620",
    "end": "472050"
  },
  {
    "text": "customers of lambda and so this led to us launching again just at the end of November something called lambda layers",
    "start": "472050",
    "end": "477780"
  },
  {
    "text": "and so what lambda layers allow you to do is upload some blob of data this",
    "start": "477780",
    "end": "484770"
  },
  {
    "text": "could be those dependencies that we talked about this could be that pre handler code this can be reused business",
    "start": "484770",
    "end": "490440"
  },
  {
    "text": "logic and treat it as a separate artifact from your actual application code and then what we do at execution",
    "start": "490440",
    "end": "497400"
  },
  {
    "text": "time is we actually merge all these things together for you and then execute your application and so this can allow",
    "start": "497400",
    "end": "504390"
  },
  {
    "text": "for a number of kind of really interesting benefits you know one thing",
    "start": "504390",
    "end": "509820"
  },
  {
    "text": "that we see today and that has happened in the industry is that obviously a lot",
    "start": "509820",
    "end": "515280"
  },
  {
    "text": "of you probably are programming in languages that have open source packages that you want to include inside of your",
    "start": "515280",
    "end": "520860"
  },
  {
    "text": "codebase there have been issues with things like security vulnerabilities and",
    "start": "520860",
    "end": "526830"
  },
  {
    "text": "those performance issues in those so you might work for an organization that wants you only to use open source",
    "start": "526830",
    "end": "532440"
  },
  {
    "text": "software of certain licenses you might also want to control people in your team from deploying all sorts of",
    "start": "532440",
    "end": "538320"
  },
  {
    "text": "different versions of these and you know peg yourself on a certain version and so layers can offer up a separation and",
    "start": "538320",
    "end": "543630"
  },
  {
    "text": "responsibilities that can say basically here's a layer that represents the you know approved versions of software X or",
    "start": "543630",
    "end": "550740"
  },
  {
    "text": "Y or this is the locked version that we're going to support that security has looked through or hey as a team we're",
    "start": "550740",
    "end": "557370"
  },
  {
    "text": "gonna standardize on version blah and here is the package that contains all of that and puts it together this also can",
    "start": "557370",
    "end": "564420"
  },
  {
    "text": "again be used for things like the pre handler logic that we saw so let's say that you have code that needs to get",
    "start": "564420",
    "end": "570600"
  },
  {
    "text": "secret's out of AWS secrets manager that's code that's pretty straightforward and depending on what",
    "start": "570600",
    "end": "576420"
  },
  {
    "text": "secrets are getting out it could be twenty or thirty lines of code there's no reason to have that in every single lambda function that you have you could",
    "start": "576420",
    "end": "582930"
  },
  {
    "text": "create a layer that has the code to talk to secret manager the secrets manager SDK or the atos SDK and maybe something",
    "start": "582930",
    "end": "590430"
  },
  {
    "text": "like a Davis x-ray to do traces on those calls make that a layer and then share that layer across your organization so",
    "start": "590430",
    "end": "597839"
  },
  {
    "text": "there's a lot of things you could do with this and layers are meant to be shared and they can be shared inside of an account inside of an organization or",
    "start": "597839",
    "end": "604350"
  },
  {
    "text": "publicly out among whoever might want to consume one so the way that layers work",
    "start": "604350",
    "end": "610200"
  },
  {
    "text": "is just like with a lambda function you create a zip file and you upload it to the lambda service and then inside of",
    "start": "610200",
    "end": "616350"
  },
  {
    "text": "your lambda function or in the configuration of it you reference the layer as being part of it now again what",
    "start": "616350",
    "end": "622500"
  },
  {
    "text": "we end up doing is we take the layer in your application code it put it into the same execution environment for you now",
    "start": "622500",
    "end": "629220"
  },
  {
    "text": "layers can be effectively stacked on top of each other talking a little more about that here in a moment",
    "start": "629220",
    "end": "635000"
  },
  {
    "text": "and so you can only today we have a limit of 5 that you can have per function they could be versioned",
    "start": "635000",
    "end": "641790"
  },
  {
    "text": "and they are immutable so what this means is that when you upload a lambda layer and then you upload a new version",
    "start": "641790",
    "end": "648630"
  },
  {
    "text": "of that you can have both versions there or you could tear down the old one but you can never replace a version so like",
    "start": "648630",
    "end": "654899"
  },
  {
    "text": "once you have version 3 you can never replace version 3 you can only have version 4 or 5 6 and so on and you can",
    "start": "654899",
    "end": "661230"
  },
  {
    "text": "delete version 3 if you want to and then you tell your lambda functions specifically what version 2 you",
    "start": "661230",
    "end": "668199"
  },
  {
    "text": "now ordering is important to these layers so you will define them in a certain order and either your function",
    "start": "668199",
    "end": "674660"
  },
  {
    "text": "configuration or if you're using Sam which will show later here how you can do that and then all of these get put into a specific directory in the runtime",
    "start": "674660",
    "end": "681470"
  },
  {
    "text": "so again at the end of the day lambda is running inside of a Linux environment you can actually go and poke around",
    "start": "681470",
    "end": "686720"
  },
  {
    "text": "inside of your lambda function and make shell calls and stuff like that to that underlying environment but so what we do",
    "start": "686720",
    "end": "693110"
  },
  {
    "text": "is we put all of this code into the /opt directory now ordering matters because",
    "start": "693110",
    "end": "698329"
  },
  {
    "text": "what we basically do is is we squash all these down on top of each other so if I",
    "start": "698329",
    "end": "703790"
  },
  {
    "text": "had one layer and it had /foo dot text and then I have layer two and it has bar",
    "start": "703790",
    "end": "710179"
  },
  {
    "text": "dot text in my lambda function I could see both foo and bar dot texts inside of",
    "start": "710179",
    "end": "715429"
  },
  {
    "text": "the same filesystem but if I then had a third layer that also had a food text",
    "start": "715429",
    "end": "721549"
  },
  {
    "text": "file that Fuu dot text would take place over the first one so basically it would",
    "start": "721549",
    "end": "726709"
  },
  {
    "text": "end up overwriting what was there now this could be important you can use this",
    "start": "726709",
    "end": "731749"
  },
  {
    "text": "to push out say-so cific updates to layers where you can't or you don't want to update an entire layer you just",
    "start": "731749",
    "end": "737269"
  },
  {
    "text": "basically push out an update to a single file or a single dependency and so there's there's reasons why you might",
    "start": "737269",
    "end": "742639"
  },
  {
    "text": "want to think about the benefits of this but you also want to be cautious about how layers could potentially overwrite",
    "start": "742639",
    "end": "747709"
  },
  {
    "text": "each other as part of this and so again this provides some flexibility and",
    "start": "747709",
    "end": "753079"
  },
  {
    "text": "allows you to have separation of responsibilities inside of this one thing that we see in the service space",
    "start": "753079",
    "end": "759139"
  },
  {
    "text": "is we have a really awesome growing ecosystem of security vendors profiling",
    "start": "759139",
    "end": "764299"
  },
  {
    "text": "troubleshooting vendors monitoring vendors as you can imagine a layer that is from one of our security partners for",
    "start": "764299",
    "end": "770990"
  },
  {
    "text": "example a company called a pure sec which provides a tool that can do introspection on the events and what's",
    "start": "770990",
    "end": "776419"
  },
  {
    "text": "going on inside of your function you could have another layer from a company called IO pipe which does profiling of the",
    "start": "776419",
    "end": "783980"
  },
  {
    "text": "performance of your functions and so each of those could be a layer and then you could have layer for your own code",
    "start": "783980",
    "end": "788989"
  },
  {
    "text": "and you could put those all together and it will all exist in the underlying application runtime now one thing we",
    "start": "788989",
    "end": "797569"
  },
  {
    "text": "didn't talk about earlier is for lambda per region we have a storage limit for your functions and therefore your code",
    "start": "797569",
    "end": "803930"
  },
  {
    "text": "the default for that is 75 Giga bytes this is a soft limit but one benefit of",
    "start": "803930",
    "end": "809510"
  },
  {
    "text": "layers is that instead of every time you update you code having all of those dependencies in your application you can",
    "start": "809510",
    "end": "815870"
  },
  {
    "text": "just have a layer that has it and so that way you're not duplicating all of that code in the storage system as well so a couple different if it's here now",
    "start": "815870",
    "end": "823750"
  },
  {
    "text": "depending on the language runtime that you have inside of that /opt directory",
    "start": "823750",
    "end": "828920"
  },
  {
    "text": "what we've done is made it so that you can reference the code and the dependencies and stuff in there as if it",
    "start": "828920",
    "end": "836060"
  },
  {
    "text": "was just in your code base and so basically what this means is that when you go to do an import of a dependency",
    "start": "836060",
    "end": "841399"
  },
  {
    "text": "we've extended the path of the environment so that it knows to look in these directories for you I'll show how",
    "start": "841399",
    "end": "848149"
  },
  {
    "text": "this is beneficial here in a moment let's see and so you don't have to say import from a certain directory you can",
    "start": "848149",
    "end": "853940"
  },
  {
    "text": "just call import and it will kind of just be solved for you know I mentioned",
    "start": "853940",
    "end": "859910"
  },
  {
    "text": "here that layers can be shared within an account between accounts so you can you can say I only want to share this layer",
    "start": "859910",
    "end": "864980"
  },
  {
    "text": "with this one other AWS account or across the broader developer community and so I'm going to share a link later",
    "start": "864980",
    "end": "871279"
  },
  {
    "text": "to someone who has published a github repo that's become kind of an unofficial list of shared layers in run times that",
    "start": "871279",
    "end": "879199"
  },
  {
    "text": "people have open sourced and so you can get some examples of what's out there now when we launched layers we also put",
    "start": "879199",
    "end": "884990"
  },
  {
    "text": "out a layer for two really popular Python scientific libraries numpy and",
    "start": "884990",
    "end": "890240"
  },
  {
    "text": "Sai PI they're two of the there were two of the most heavily requested pieces of software in the lamda execution",
    "start": "890240",
    "end": "896300"
  },
  {
    "text": "environment and so now you have this as a layer and we're thinking about more layers that we can provide to you that",
    "start": "896300",
    "end": "902360"
  },
  {
    "text": "will be for common utilities a very common request as things like headless chrome other scientific libraries and",
    "start": "902360",
    "end": "908870"
  },
  {
    "text": "stuff like that that we could put in there so let's let's actually pause here it's kind of an abstract thing to see",
    "start": "908870",
    "end": "914180"
  },
  {
    "text": "from if you're new to lamda let's actually dive into how this all works",
    "start": "914180",
    "end": "919690"
  },
  {
    "text": "so let's assume that I have a a service application and I'm actually just going",
    "start": "919690",
    "end": "925040"
  },
  {
    "text": "to go real quick here and you know kind of like much like most cooking shows I",
    "start": "925040",
    "end": "932209"
  },
  {
    "text": "already have kind of the semi baked casserole on the top oven and I'm gonna put the the raw stuff on the",
    "start": "932209",
    "end": "937699"
  },
  {
    "text": "bottom of in here but so this is actually from a some code that I had from webinar that I recorded recently",
    "start": "937699",
    "end": "943279"
  },
  {
    "text": "it's really basic it's four files and I'm just gonna clone this so I'm going",
    "start": "943279",
    "end": "948440"
  },
  {
    "text": "to come back to my cloud 9 environment which I use in some previous demos here and I'm gonna do git clone I run this",
    "start": "948440",
    "end": "959019"
  },
  {
    "text": "okay so this is a really basic service application it has a app file it has a",
    "start": "960040",
    "end": "970040"
  },
  {
    "text": "Sam template which is also pretty basic and it has a requirement text which has a couple of third-party packages that I",
    "start": "970040",
    "end": "976730"
  },
  {
    "text": "want to include and now what this code does is it reaches out to a service",
    "start": "976730",
    "end": "982040"
  },
  {
    "text": "called parameter store that we have here in AWS that much like the name might sound allows you to store parameters for",
    "start": "982040",
    "end": "988910"
  },
  {
    "text": "things so basically keep air values in a hierarchical structure there's a bunch of cool things that you can do with it",
    "start": "988910",
    "end": "994399"
  },
  {
    "text": "good for configuration information for feature flags for all sorts of",
    "start": "994399",
    "end": "999440"
  },
  {
    "text": "environment information and what's nice is that it is a centralized service so",
    "start": "999440",
    "end": "1004779"
  },
  {
    "text": "all of the lambda functions I have and ec2 instances and ECS containers could all get that same information from there",
    "start": "1004779",
    "end": "1011769"
  },
  {
    "text": "so it can become kind of a centralized repo of information of any sort so let",
    "start": "1011769",
    "end": "1017740"
  },
  {
    "text": "me show you what I have here in parameter store and you find it under the systems manager console so right now",
    "start": "1017740",
    "end": "1024308"
  },
  {
    "text": "I have a couple different strings are a couple different parameters that are saved I have demo I have one called hello",
    "start": "1024309",
    "end": "1030938"
  },
  {
    "text": "lofts one called I am and one called webinar we go to Hello lofts and let me",
    "start": "1030939",
    "end": "1036819"
  },
  {
    "text": "change this and say hello everyone at the SF lofts and then save this okay so",
    "start": "1036819",
    "end": "1043750"
  },
  {
    "text": "four of these here today so let me go back to my code here and let's say that I'm ready to test out",
    "start": "1043750",
    "end": "1050080"
  },
  {
    "text": "this application so again here in the console I can just go and open a terminal window I can go into the",
    "start": "1050080",
    "end": "1057340"
  },
  {
    "text": "directory for this I can call Sam builds to pull in all of my dependencies and so",
    "start": "1057340",
    "end": "1063070"
  },
  {
    "text": "I showed you before I had a requirement text that just had three three packages that I cared about in it",
    "start": "1063070",
    "end": "1069950"
  },
  {
    "text": "but what's interesting is that those three actually pulled in about a total",
    "start": "1069950",
    "end": "1076859"
  },
  {
    "text": "of 38 different dependencies and so this is a very common thing that people are finding in you know Modern Languages",
    "start": "1076859",
    "end": "1083249"
  },
  {
    "text": "today you've had dependencies that have dependencies that have dependencies in an open source world now there's a lot",
    "start": "1083249",
    "end": "1089700"
  },
  {
    "text": "of risk that can be introduced to this just about two months or so ago there was a a pack a open source nodejs",
    "start": "1089700",
    "end": "1097019"
  },
  {
    "text": "package that had malicious code and started to it that was stealing people's",
    "start": "1097019",
    "end": "1102080"
  },
  {
    "text": "Bitcoin wallet information from their local system and it was a package that",
    "start": "1102080",
    "end": "1107369"
  },
  {
    "text": "was not a very popular one by its own name and identifier but it was included",
    "start": "1107369",
    "end": "1112619"
  },
  {
    "text": "in a lot of very very popular no js' packages which is why I always do",
    "start": "1112619",
    "end": "1118470"
  },
  {
    "text": "development now in a dedicated host no one anyone to steal any of my information like that but again if you",
    "start": "1118470",
    "end": "1123570"
  },
  {
    "text": "thought about it so you know I had three things that I required but again it expanded out to all of this other stuff",
    "start": "1123570",
    "end": "1129330"
  },
  {
    "text": "so it's a common thing you want to be care of and again it's in Y layers can be beneficial to you so I have my built",
    "start": "1129330",
    "end": "1136799"
  },
  {
    "text": "directory I did say in build it pulled all those in I can go into the AWS Sam directory and to build I have my",
    "start": "1136799",
    "end": "1145080"
  },
  {
    "text": "template and I have my my code directory here I can go ahead and test this API",
    "start": "1145080",
    "end": "1153919"
  },
  {
    "text": "it's fired up you just check something again here it lives just in the raw path",
    "start": "1154820",
    "end": "1161159"
  },
  {
    "text": "for this so let me do a curl so hello at",
    "start": "1161159",
    "end": "1167220"
  },
  {
    "text": "the end",
    "start": "1167220",
    "end": "1169489"
  },
  {
    "text": "cool so if you can make this out here it's just kind of a blob a JSON blob but",
    "start": "1172500",
    "end": "1177970"
  },
  {
    "text": "I basically have a structure called messages and then I have four key value",
    "start": "1177970",
    "end": "1183370"
  },
  {
    "text": "pairs hello lofts demo webinar and I am and it corresponds to the data here in",
    "start": "1183370",
    "end": "1190419"
  },
  {
    "text": "this service okay super straightforward let's actually take this code and let's",
    "start": "1190419",
    "end": "1199260"
  },
  {
    "text": "deploy this so I'm going to call my Sam",
    "start": "1199260",
    "end": "1204820"
  },
  {
    "text": "package command which is just gonna zip up this code and shove it up into s3 and",
    "start": "1204820",
    "end": "1211090"
  },
  {
    "text": "create any updated same template that references that and then I'm going to",
    "start": "1211090",
    "end": "1216100"
  },
  {
    "text": "deploy this as a stack now I happen to have a stack reading existing for this just gonna update it the stock is called",
    "start": "1216100",
    "end": "1221919"
  },
  {
    "text": "get messages and so it is just gonna go and update this service application and",
    "start": "1221919",
    "end": "1227470"
  },
  {
    "text": "nothing here is new or specific to layers just taking a service application pushing it up into prod and updating it",
    "start": "1227470",
    "end": "1234570"
  },
  {
    "text": "again with all of these packages and stuff in there",
    "start": "1234570",
    "end": "1239159"
  },
  {
    "text": "just a moment or two for it to finish updating cool so successfully updating",
    "start": "1244010",
    "end": "1253309"
  },
  {
    "text": "my stack let me go back to the lambda console and go to applications I see get messages here was just updated",
    "start": "1253309",
    "end": "1260600"
  },
  {
    "text": "I can go into it I can expand out my API",
    "start": "1260600",
    "end": "1267440"
  },
  {
    "text": "go to API endpoint yeah I see the same",
    "start": "1267440",
    "end": "1274220"
  },
  {
    "text": "messages that I just saw locally in my IDE I can also go and take a look at the",
    "start": "1274220",
    "end": "1280490"
  },
  {
    "text": "lambda function for this so I can go into the lambda console for the function",
    "start": "1280490",
    "end": "1286660"
  },
  {
    "text": "and so I see that I have my function defined here I've got some permissions on the right side for extra loud watch",
    "start": "1286660",
    "end": "1293299"
  },
  {
    "text": "logs and the parameter store manager got my EP gateway but when I look at when I",
    "start": "1293299",
    "end": "1298520"
  },
  {
    "text": "click on the lambda function in the console here I could scroll down and what I see here is that it says this",
    "start": "1298520",
    "end": "1304280"
  },
  {
    "text": "package is too large for the inline code editor but again we pulled in like 60",
    "start": "1304280",
    "end": "1309410"
  },
  {
    "text": "dependencies from Python and so that's not too surprising you can only handle more basic stuff so this is here now",
    "start": "1309410",
    "end": "1316730"
  },
  {
    "text": "imagine that for this application these dependencies are super super standard",
    "start": "1316730",
    "end": "1322309"
  },
  {
    "text": "boto is the AWS sdk for python x-ray is a tool that we have for tracing and",
    "start": "1322309",
    "end": "1329660"
  },
  {
    "text": "troubleshooting calls in this case setup tools is another Python library that helps with with management of all this",
    "start": "1329660",
    "end": "1335540"
  },
  {
    "text": "stuff there's a good chance as a Python developer for lambda functions that I'm",
    "start": "1335540",
    "end": "1341660"
  },
  {
    "text": "going to include these in almost all of the functions I'm ever going to create anything that's gonna deal with an AW",
    "start": "1341660",
    "end": "1347210"
  },
  {
    "text": "service it's going to have these three libraries so I can potentially be having not just these three libraries but the",
    "start": "1347210",
    "end": "1354500"
  },
  {
    "text": "60 dependencies that they brought in in every single lambda function that I ever create that's python-based if I were to",
    "start": "1354500",
    "end": "1362210"
  },
  {
    "text": "do this and upload those and how this happened to be part of my step it would be really wasteful it'd be a lot of data I have to manage the versions and think",
    "start": "1362210",
    "end": "1368660"
  },
  {
    "text": "about that and so if this could be something problematic so what could you better well this is where layers comes",
    "start": "1368660",
    "end": "1374630"
  },
  {
    "text": "in so I'm gonna come back here I'm gonna go ahead delete this built version of my code I'm",
    "start": "1374630",
    "end": "1382909"
  },
  {
    "text": "also going to come in here and I'm gonna delete the requirements text and I'm",
    "start": "1382909",
    "end": "1389149"
  },
  {
    "text": "going to say that there's going to be no requirements off of this function just app code and a Sam template again going",
    "start": "1389149",
    "end": "1396440"
  },
  {
    "text": "back to kind of cooking show style here and come back to my repositories and I",
    "start": "1396440",
    "end": "1401570"
  },
  {
    "text": "already have a repository that represents a layer that's going to have all those same dependencies in it so let",
    "start": "1401570",
    "end": "1408559"
  },
  {
    "text": "me just clone this real quick great",
    "start": "1408559",
    "end": "1418820"
  },
  {
    "text": "so I'm another directory here in this directory I could ignore a readme the",
    "start": "1418820",
    "end": "1424610"
  },
  {
    "text": "requirement text and a template dot Y Amal now I had mentioned before in Sam",
    "start": "1424610",
    "end": "1430129"
  },
  {
    "text": "that we have a new resource this resource here called layer version and so what layer version does is basically",
    "start": "1430129",
    "end": "1435860"
  },
  {
    "text": "allow me to create a new layer and so it references here the layer name a",
    "start": "1435860",
    "end": "1441999"
  },
  {
    "text": "description where the code is going to be in like my directory structure here compatible runtimes instead of depending",
    "start": "1441999",
    "end": "1449090"
  },
  {
    "text": "on what language I use it could be something shareable license information and then a retention policy which has to",
    "start": "1449090",
    "end": "1455450"
  },
  {
    "text": "do with if I delete my my layer do I want to still keep record of it internally so this is here so let me go",
    "start": "1455450",
    "end": "1463129"
  },
  {
    "text": "back to my command line and go to this directory I'm gonna run actually in the readme",
    "start": "1463129",
    "end": "1469730"
  },
  {
    "text": "here I've provided instruction so I'm just gonna run pip install so pip is the package manager for Python so do a pip",
    "start": "1469730",
    "end": "1478999"
  },
  {
    "text": "install it's now gonna pull in all those 60 or so various dependencies that I",
    "start": "1478999",
    "end": "1485480"
  },
  {
    "text": "have and I can see that now inside of the Python subfolder now why the Python",
    "start": "1485480",
    "end": "1491539"
  },
  {
    "text": "subfolder well I had before in a slide depending on the language that you have the destructor e structure that you need so that my code can just find this",
    "start": "1491539",
    "end": "1498619"
  },
  {
    "text": "without me having to import it based on the path I love like the operating system so for python that means putting",
    "start": "1498619",
    "end": "1505129"
  },
  {
    "text": "it in a Python subfolder so all these are here the exact same stuff that was",
    "start": "1505129",
    "end": "1510710"
  },
  {
    "text": "in my application great this is technically a service",
    "start": "1510710",
    "end": "1516290"
  },
  {
    "text": "application right how's the Sam template so I am going to do a SAM package again",
    "start": "1516290",
    "end": "1521750"
  },
  {
    "text": "which is going to zip this up and update a template file and then I am actually",
    "start": "1521750",
    "end": "1528590"
  },
  {
    "text": "going to deploy this as a layer there we",
    "start": "1528590",
    "end": "1542360"
  },
  {
    "text": "go so Sam deploy and I have a stack name called lambda layer bodo x-ray",
    "start": "1542360",
    "end": "1549040"
  },
  {
    "text": "so it's just taking all these dependencies and it's uploading it just as a layer takes a moment or two I need",
    "start": "1555450",
    "end": "1573360"
  },
  {
    "text": "some like jeopardy theme music that I can just like play for this cool all",
    "start": "1573360",
    "end": "1579990"
  },
  {
    "text": "right so it's done has created slash updated the layer lambda layer boto x-ray I can come back now and here to",
    "start": "1579990",
    "end": "1587610"
  },
  {
    "text": "the lambda console and I can go to layers and as you might expect I see my",
    "start": "1587610",
    "end": "1594000"
  },
  {
    "text": "layer defined here so I can find all sorts information about it it was just created 25 seconds ago the license that",
    "start": "1594000",
    "end": "1600480"
  },
  {
    "text": "I've referenced you can see here I actually have a couple of versions of this so I'm now up to version 5 all of",
    "start": "1600480",
    "end": "1607410"
  },
  {
    "text": "my previous versions are all here and I could come up here to are actually from here I can actually select different",
    "start": "1607410",
    "end": "1613290"
  },
  {
    "text": "versions so let me go to version 1 and you know what version 1 is old and so I'm gonna delete this and so it",
    "start": "1613290",
    "end": "1619590"
  },
  {
    "text": "basically will say that no one could launch a new function referencing this it doesn't break existing functions but",
    "start": "1619590",
    "end": "1626190"
  },
  {
    "text": "version 1 goes away so I got version 5 and now what I want to do is I want to",
    "start": "1626190",
    "end": "1631350"
  },
  {
    "text": "have my running lambda function be able to reference this layer and so I copy",
    "start": "1631350",
    "end": "1636510"
  },
  {
    "text": "this thing here called a version iron and an arn is basically a resource identifier in AWS terminology I'm gonna",
    "start": "1636510",
    "end": "1645540"
  },
  {
    "text": "go back to my IDE I'm gonna go back to the template file for my my application",
    "start": "1645540",
    "end": "1652410"
  },
  {
    "text": "and now what I want to do is add to it a capability for my layer so in Sam I do",
    "start": "1652410",
    "end": "1660390"
  },
  {
    "text": "layers I am going to substitute the",
    "start": "1660390",
    "end": "1665460"
  },
  {
    "text": "value for y I could type in like an actual name but I have to use the AR in for this and I'm gonna save this I'm",
    "start": "1665460",
    "end": "1674100"
  },
  {
    "text": "going to go back into a terminal window I am going to package this pretty quick",
    "start": "1674100",
    "end": "1684710"
  },
  {
    "text": "and then I am going to deploy this",
    "start": "1684710",
    "end": "1689950"
  },
  {
    "text": "so this is going to update the lambda function that I have configured in that whole application and in this case now",
    "start": "1694560",
    "end": "1701160"
  },
  {
    "text": "I'm uploading it without any of those dependencies in my application artifact and I am now referencing my created",
    "start": "1701160",
    "end": "1707130"
  },
  {
    "text": "layer as a layer that should be used",
    "start": "1707130",
    "end": "1710810"
  },
  {
    "text": "again we've got some hold music just",
    "start": "1718920",
    "end": "1725070"
  },
  {
    "text": "moment cool so that's done so the the real testing of the demo gods here let's",
    "start": "1725070",
    "end": "1730890"
  },
  {
    "text": "go and refresh this and it worked which",
    "start": "1730890",
    "end": "1736680"
  },
  {
    "text": "has just pulled up the same information let's actually go ahead and just just create another parameter so putting the",
    "start": "1736680",
    "end": "1743640"
  },
  {
    "text": "namespace messages slash call that post post layer test after layer cool go back",
    "start": "1743640",
    "end": "1756720"
  },
  {
    "text": "up refresh this cool so somewhere in here is post layer if I come back to the",
    "start": "1756720",
    "end": "1762120"
  },
  {
    "text": "lambda console and I go and find that service application and I find get messages I will find get messages and",
    "start": "1762120",
    "end": "1775590"
  },
  {
    "text": "again here I see you know the information about my lambda function let me actually go again into the function",
    "start": "1775590",
    "end": "1781680"
  },
  {
    "text": "console for this and I'll see something a little different so I'll see here now",
    "start": "1781680",
    "end": "1787380"
  },
  {
    "text": "that it referenced is that there is a layer attached to this function and I could scroll down and find the version",
    "start": "1787380",
    "end": "1793620"
  },
  {
    "text": "the merge order etc information about it if I click back on the lambda function",
    "start": "1793620",
    "end": "1799830"
  },
  {
    "text": "and I scroll down now I can actually see the code in a code editor because my",
    "start": "1799830",
    "end": "1805410"
  },
  {
    "text": "application artifact now is under the size restriction for the console and so I can see it and I see that I just have",
    "start": "1805410",
    "end": "1811170"
  },
  {
    "text": "my app file I have my template file it references my layer and so that's all",
    "start": "1811170",
    "end": "1818550"
  },
  {
    "text": "good now all I we need to do going forward for any of the other functions that I had any of the other service",
    "start": "1818550",
    "end": "1823800"
  },
  {
    "text": "applications that I had is just reference that layer and so again you",
    "start": "1823800",
    "end": "1829140"
  },
  {
    "text": "can imagine where and this represents the layer for me talking to any AWS service plus having X ray tracing you",
    "start": "1829140",
    "end": "1836190"
  },
  {
    "text": "can imagine again the layers that you have for some of these third-party tools for monitoring or logging or security",
    "start": "1836190",
    "end": "1841380"
  },
  {
    "text": "you can imagine layers that maybe represent certain code that your organization needs or things like SSL",
    "start": "1841380",
    "end": "1849030"
  },
  {
    "text": "Certificates or configuration files or all sorts of things you want to standardize out across the",
    "start": "1849030",
    "end": "1854280"
  },
  {
    "text": "applications so that's a Divya Slayers I'm sorry that's lambda layers and again",
    "start": "1854280",
    "end": "1862020"
  },
  {
    "text": "really brief quick example there so took an application had a lot of dependencies uploaded it said you know what I don't",
    "start": "1862020",
    "end": "1868140"
  },
  {
    "text": "want always application all these dependencies dependent on that app pulled it out created a layer configure",
    "start": "1868140",
    "end": "1873390"
  },
  {
    "text": "the function use the layer pushed it back up I didn't touch my app code nothing in my application code changed I",
    "start": "1873390",
    "end": "1879120"
  },
  {
    "text": "didn't have to change my import structure or the calls for that it nothing about my actual application",
    "start": "1879120",
    "end": "1884580"
  },
  {
    "text": "change to use layers so really powerful and easy to get started with transition to the next part of this session here so",
    "start": "1884580",
    "end": "1892800"
  },
  {
    "text": "again lambdas been around now for for just about four years and one of the tenets that we hold really close to",
    "start": "1892800",
    "end": "1899040"
  },
  {
    "text": "ourselves and lambda team is that we want to make it really easy for developers to get started I was actually",
    "start": "1899040",
    "end": "1904890"
  },
  {
    "text": "just in Seattle for the last two days meeting with various lambda team members of ours talking about new features and",
    "start": "1904890",
    "end": "1910650"
  },
  {
    "text": "things they were looking to build this year and we will get legit heated with each other about making sure that we",
    "start": "1910650",
    "end": "1915870"
  },
  {
    "text": "don't impact the ease of working with lambda we want to keep that bar really really low and so one thing that we've",
    "start": "1915870",
    "end": "1922650"
  },
  {
    "text": "done to help keep it really low and we first launched the product was having managed late which is for you so",
    "start": "1922650",
    "end": "1927840"
  },
  {
    "text": "providing languages that we handle the patching and the updating and give you new versions of them and expand those",
    "start": "1927840",
    "end": "1933390"
  },
  {
    "text": "over time and so to date basically what we have here is a number different",
    "start": "1933390",
    "end": "1938400"
  },
  {
    "text": "languages I've actually removed the ones that are now deprecated because we do follow the lifecycle of the ecosystem",
    "start": "1938400",
    "end": "1943710"
  },
  {
    "text": "for these languages and so you'll see here that we've got different versions of nodejs and python and core and all",
    "start": "1943710",
    "end": "1948930"
  },
  {
    "text": "sorts of sorry net-net core and other things out here and the reality is is",
    "start": "1948930",
    "end": "1956040"
  },
  {
    "text": "that the languages that you see here represent a really large majority of what most of you are probably writing",
    "start": "1956040",
    "end": "1962100"
  },
  {
    "text": "applications and today it's a huge chunk of the industry that uses just those languages has been pretty happy but what",
    "start": "1962100",
    "end": "1970290"
  },
  {
    "text": "we know is that that's not everyone and so there is a really big long-tailed languages out there Stack Overflow does",
    "start": "1970290",
    "end": "1976890"
  },
  {
    "text": "a yearly developer study in that developer study they highlights the most popular languages that developers are",
    "start": "1976890",
    "end": "1983520"
  },
  {
    "text": "using it's maybe a little hard to see here some of the very top ones are things like JavaScript HTML CSS and sequel",
    "start": "1983520",
    "end": "1991680"
  },
  {
    "text": "don't really aren't really related to what we're doing on a back-end side but you see in here Java you see PowerShell",
    "start": "1991680",
    "end": "1998160"
  },
  {
    "text": "you see Python you see C sharp you see things like PHP but it's a long list",
    "start": "1998160",
    "end": "2003230"
  },
  {
    "text": "there's a lot of things that we don't have managed in the lambda environment",
    "start": "2003230",
    "end": "2008720"
  },
  {
    "text": "similarly github does their state of the october's which tracks top repositories",
    "start": "2008720",
    "end": "2014120"
  },
  {
    "text": "by language as well as the growth of languages inside of the github octave or",
    "start": "2014120",
    "end": "2020750"
  },
  {
    "text": "as they call it and they show things like rust and groovy and cotton growing really rapidly these are really exciting",
    "start": "2020750",
    "end": "2026930"
  },
  {
    "text": "languages people are finding them really useful for certain use cases and so we",
    "start": "2026930",
    "end": "2032330"
  },
  {
    "text": "know that you care about these languages and we want to help you use lambda to have event-driven workloads with them so",
    "start": "2032330",
    "end": "2039560"
  },
  {
    "text": "this led to was launching custom runtimes from lambda as you can imagine this basically allows you to bring any",
    "start": "2039560",
    "end": "2045800"
  },
  {
    "text": "of those languages that we didn't support previously to lambda so you want rust you could bring rust you want",
    "start": "2045800",
    "end": "2052070"
  },
  {
    "text": "groovy you can bring groovy you want a call in here bring Colin you want to bring COBOL we actually you can bring",
    "start": "2052070",
    "end": "2057080"
  },
  {
    "text": "COBOL I don't know why well you could uh-huh so there's all sorts of things that you can do with this and so this is",
    "start": "2057080",
    "end": "2062510"
  },
  {
    "text": "powered by something called our runtime api which we're gonna go into a little bit here and basically what it does is it provides a standardized interface for",
    "start": "2062510",
    "end": "2069500"
  },
  {
    "text": "running any language you want now we build this for two reasons one was to enable you all to be able to run it ever",
    "start": "2069500",
    "end": "2075590"
  },
  {
    "text": "code you want inside of lambda the second is we actually needed to on our side of things provide a better internal",
    "start": "2075590",
    "end": "2082010"
  },
  {
    "text": "standard for this the different languages we originally had had different ways of working in our platform and so we actually now use the",
    "start": "2082010",
    "end": "2088429"
  },
  {
    "text": "runtime api to power a new language support and so we announced Ruby as a managed language but behind the scenes",
    "start": "2088429",
    "end": "2093950"
  },
  {
    "text": "it uses the runtime api and this will allow us to kind of have mutually beneficial new capabilities for the",
    "start": "2093950",
    "end": "2100280"
  },
  {
    "text": "platform that benefit the managed languages in the language that you run over time runtimes can be distributed as",
    "start": "2100280",
    "end": "2106550"
  },
  {
    "text": "a layer so we saw before here create a layer have code they want reused and so you could have a layer",
    "start": "2106550",
    "end": "2112490"
  },
  {
    "text": "that represents a runtime they use across your organization and there you",
    "start": "2112490",
    "end": "2117500"
  },
  {
    "text": "go so when you the function with the runtime API instead of choosing one of the managed",
    "start": "2117500",
    "end": "2124400"
  },
  {
    "text": "languages you choose provided as a language that's what it looks like and then inside of either your layer or your",
    "start": "2124400",
    "end": "2130880"
  },
  {
    "text": "application artifact has to be an executable file called bootstrap as the",
    "start": "2130880",
    "end": "2137240"
  },
  {
    "text": "name might imply this is what we use to bootstrap or configure and set up the environment so that it can execute",
    "start": "2137240",
    "end": "2143780"
  },
  {
    "text": "whatever code you want it to execute and so basically you have just an executable",
    "start": "2143780",
    "end": "2150080"
  },
  {
    "text": "called bootstrap we'll show how this can be in a number of different ways and then it will execute the code on your",
    "start": "2150080",
    "end": "2155120"
  },
  {
    "text": "behalf now the bootstrap does a couple of different things it basically acts as a",
    "start": "2155120",
    "end": "2161120"
  },
  {
    "text": "bridge between this thing called the runtime API and your code so imagine it",
    "start": "2161120",
    "end": "2166430"
  },
  {
    "text": "is kind of the gateway or the shim that sits between those two things and so it has to be able to react and talk to the",
    "start": "2166430",
    "end": "2173120"
  },
  {
    "text": "the runtime api behind the scenes which handles things like actually passing",
    "start": "2173120",
    "end": "2178430"
  },
  {
    "text": "events into your code and explaining to the bootstrap higher code is configured it's like where the handle there might",
    "start": "2178430",
    "end": "2183470"
  },
  {
    "text": "be and there's other information that it has to handle as part of that and so it basically has to listen to a local",
    "start": "2183470",
    "end": "2190250"
  },
  {
    "text": "interface in the execution environment to do that and then it will interface with a local API the runtime API in",
    "start": "2190250",
    "end": "2197510"
  },
  {
    "text": "order to get information and so the API for this is actually really really basic it's just a couple of calls that are",
    "start": "2197510",
    "end": "2203660"
  },
  {
    "text": "available it's not this like massive expensive thing so we see here that I",
    "start": "2203660",
    "end": "2208850"
  },
  {
    "text": "when you go through the initial bootstrap if things don't work out you have to be able to post an error",
    "start": "2208850",
    "end": "2214000"
  },
  {
    "text": "otherwise you would get see here the invocation next so give me the next",
    "start": "2214000",
    "end": "2220130"
  },
  {
    "text": "event and then this will pull down the request information that you want to",
    "start": "2220130",
    "end": "2225380"
  },
  {
    "text": "pass into the event you would then post either a response or an error message",
    "start": "2225380",
    "end": "2230390"
  },
  {
    "text": "and that's it so you bootstrap up the executable you get an event you execute",
    "start": "2230390",
    "end": "2238880"
  },
  {
    "text": "that with the handler code and then you post back a response or a failure and you can see here how that gets pulled",
    "start": "2238880",
    "end": "2244040"
  },
  {
    "text": "out of an HTTP endpoint down below inside of it when you're actually doing",
    "start": "2244040",
    "end": "2249800"
  },
  {
    "text": "the processing of the event you have to again get the event you have to propagate something called a",
    "start": "2249800",
    "end": "2255200"
  },
  {
    "text": "tracing ID you have to create the context object so that's that that object we talked about that gets passed",
    "start": "2255200",
    "end": "2260480"
  },
  {
    "text": "into a function that has certain capabilities and information about the environment that your code might interface with you have to invoke the",
    "start": "2260480",
    "end": "2267050"
  },
  {
    "text": "function handler so you to actually call the execution of that and then handle response or errors and then any cleanup",
    "start": "2267050",
    "end": "2272420"
  },
  {
    "text": "that might need to happen another part of this is that we pass in environment",
    "start": "2272420",
    "end": "2277700"
  },
  {
    "text": "variables so these environment variables tell the bootstrap information about again the execution environment the",
    "start": "2277700",
    "end": "2284180"
  },
  {
    "text": "handler the task group so where the code lives whether it's in a lair or someplace alts so with this you can",
    "start": "2284180",
    "end": "2292640"
  },
  {
    "text": "execute pretty much anything we have people running essentially shell scripts",
    "start": "2292640",
    "end": "2297980"
  },
  {
    "text": "that execute other binaries there were some folks so there is a open source",
    "start": "2297980",
    "end": "2303710"
  },
  {
    "text": "functions as a service platform that runs in kubernetes called connait 'iv people have gotten creative to run in",
    "start": "2303710",
    "end": "2310670"
  },
  {
    "text": "lambda via this so you can have portability for your functions in and out of different clouds if you wanted to",
    "start": "2310670",
    "end": "2316040"
  },
  {
    "text": "do something like that but there's a lot of different things for this really key though most of you in this room will",
    "start": "2316040",
    "end": "2322520"
  },
  {
    "text": "never touch this you will never touch the runtime api you will use the manage languages we will continue to grow and",
    "start": "2322520",
    "end": "2329480"
  },
  {
    "text": "update the manage languages over time that's where we want to see people be we don't want to we really don't think that",
    "start": "2329480",
    "end": "2334670"
  },
  {
    "text": "you should have to use a runtime api unless you're gonna use one of these unique languages so useful to know about",
    "start": "2334670",
    "end": "2340970"
  },
  {
    "text": "but you're probably not going to end up using this too much yourself now when",
    "start": "2340970",
    "end": "2346550"
  },
  {
    "text": "we've launched this we we at AWS open sourced a couple of runtimes as well as",
    "start": "2346550",
    "end": "2351830"
  },
  {
    "text": "worked with the number of partners on a bunch of other runtimes and so we announced a C++ and Russell",
    "start": "2351830",
    "end": "2358460"
  },
  {
    "text": "runtime that are built by us and then we have partners so alert logic announced one in Erlang and elixir those were two",
    "start": "2358460",
    "end": "2364610"
  },
  {
    "text": "languages that they use really heavily internally and so they had been looking for support in lambda for those for really long time so they kind of built",
    "start": "2364610",
    "end": "2371090"
  },
  {
    "text": "it for themselves in the wider community I company called blue eject did launch a COBOL custom runtime so they work with a",
    "start": "2371090",
    "end": "2378140"
  },
  {
    "text": "lot of companies that have old COBOL code and you can take that COBOL code and run it in lambda now a company",
    "start": "2378140",
    "end": "2384440"
  },
  {
    "text": "called node source has what they consider to be kind of a high formants high-grade quality nodejs",
    "start": "2384440",
    "end": "2390540"
  },
  {
    "text": "runtime that's available now and then the folks at stacker ii who have a tool",
    "start": "2390540",
    "end": "2395670"
  },
  {
    "text": "for managing service applications they like PHP and so you can via their",
    "start": "2395670",
    "end": "2400920"
  },
  {
    "text": "runtime run PHP in the cloud you'll see at the bottom here there's a URL you",
    "start": "2400920",
    "end": "2407460"
  },
  {
    "text": "could also Google just github awesome layers and the person here has a",
    "start": "2407460",
    "end": "2412680"
  },
  {
    "text": "collection of links to all of the custom layers and custom runtimes that have been shared out there among the",
    "start": "2412680",
    "end": "2418890"
  },
  {
    "text": "community if you create one that you want to share you just go and issue a pull request against this and say here's my layer people can go and find it and",
    "start": "2418890",
    "end": "2425609"
  },
  {
    "text": "so this thing continues to grow like every day a lot of cool stuff being",
    "start": "2425609",
    "end": "2431670"
  },
  {
    "text": "shared by companies we have a lot of AWS partners again like in the tooling space which are launching layers so data dog",
    "start": "2431670",
    "end": "2438540"
  },
  {
    "text": "announced a layer for their monitoring tech to be put into lambda and so again there's a lot of things that if you have",
    "start": "2438540",
    "end": "2444390"
  },
  {
    "text": "a company that provides software that other people might consume creating and publishing a lambda layer could be a way for you to distribute your product just",
    "start": "2444390",
    "end": "2451290"
  },
  {
    "text": "as an example so let's take a little bit of a look at this I started doing PHP",
    "start": "2451290",
    "end": "2459420"
  },
  {
    "text": "back in like the year 2000 and so I was really excited when I saw that stacker II announced this and let's actually go",
    "start": "2459420",
    "end": "2466349"
  },
  {
    "text": "ahead and take a little look at what a custom layer looks like",
    "start": "2466349",
    "end": "2471140"
  },
  {
    "text": "so we'll start in the directory that they have in their posture I should say",
    "start": "2476260",
    "end": "2485350"
  },
  {
    "text": "so they have a really basic repository they have a whole bunch of shell scripts",
    "start": "2485350",
    "end": "2490460"
  },
  {
    "text": "that they use for for management of the lair things that publish the lair pull it down and update it things like that",
    "start": "2490460",
    "end": "2496180"
  },
  {
    "text": "they've got a make file for compilation a license or readme and then they have a",
    "start": "2496180",
    "end": "2501830"
  },
  {
    "text": "bootstrap really the thing of value here is the bootstrap so if we come to take a",
    "start": "2501830",
    "end": "2506930"
  },
  {
    "text": "look at this bootstrap the first thing that you notice is that this is a PHP script itself so this is basically going",
    "start": "2506930",
    "end": "2513890"
  },
  {
    "text": "to say assume that our lair contains the PHP binaries so I'll show you how they do that here in a second we're going to",
    "start": "2513890",
    "end": "2520160"
  },
  {
    "text": "execute PHP to run PHP pretty straightforward they have down in here",
    "start": "2520160",
    "end": "2525650"
  },
  {
    "text": "then a a function called start webserver and basically what this does is it runs",
    "start": "2525650",
    "end": "2530990"
  },
  {
    "text": "the process that is going to talk to the runtime API it's going to init itself",
    "start": "2530990",
    "end": "2536330"
  },
  {
    "text": "it's going to look for the next event and then it handles response or errors",
    "start": "2536330",
    "end": "2542270"
  },
  {
    "text": "back from that it upholds in a bunch of the environments variables so it gets the handler it gets I a couple other",
    "start": "2542270",
    "end": "2551270"
  },
  {
    "text": "things inside of here and then it executes the actual code that needs to run so a bunch of flags on this but at",
    "start": "2551270",
    "end": "2559190"
  },
  {
    "text": "the end of it where it says handle their file name that's basically it's saying ok we're gonna execute this code inside",
    "start": "2559190",
    "end": "2565010"
  },
  {
    "text": "of here they also have some failure handlers and that's actually a huge",
    "start": "2565010",
    "end": "2570710"
  },
  {
    "text": "chunk of the rest of this where they they basically provide the support for handling the request and for failures",
    "start": "2570710",
    "end": "2577070"
  },
  {
    "text": "and stuff like that but this is 238 lines of code which really is not a lot",
    "start": "2577070",
    "end": "2582860"
  },
  {
    "text": "of code for what this does it's really straightforward it's a very very kind of",
    "start": "2582860",
    "end": "2588380"
  },
  {
    "text": "vanilla bunch of system calls and and curls to API interfaces getting",
    "start": "2588380",
    "end": "2594230"
  },
  {
    "text": "environment variables and handling responses there's a significant amount of white space and stuff so it's really",
    "start": "2594230",
    "end": "2600230"
  },
  {
    "text": "probably 150 s or so lines of actual true code in this case PHP go back to",
    "start": "2600230",
    "end": "2607730"
  },
  {
    "text": "the the main direct three here and we go to the build shell so what they do and when you're building",
    "start": "2607730",
    "end": "2615059"
  },
  {
    "text": "runtimes we encourage you to use an ami or a docker container that matches the",
    "start": "2615059",
    "end": "2621299"
  },
  {
    "text": "lambda execution environment and we publish what those are in our documentation and so you would want to",
    "start": "2621299",
    "end": "2626369"
  },
  {
    "text": "run basically an install of PHP and then you create some directories and you",
    "start": "2626369",
    "end": "2632099"
  },
  {
    "text": "basically package this up as a layer and then it's deployed so they have here in",
    "start": "2632099",
    "end": "2638309"
  },
  {
    "text": "this directory all the instructions you need for getting started with their PHP layer and really it's pretty much if we",
    "start": "2638309",
    "end": "2644940"
  },
  {
    "text": "scroll down through here that you create a Sam template that references their",
    "start": "2644940",
    "end": "2650099"
  },
  {
    "text": "public layer now you could fork this repo and create your own custom layer for PHP and you can own it and track it",
    "start": "2650099",
    "end": "2656609"
  },
  {
    "text": "and all of that but they are providing this as a manage layer and we can actually see here that they are up to",
    "start": "2656609",
    "end": "2662009"
  },
  {
    "text": "version 7 of their layer and then you just write some PHP and you publish it",
    "start": "2662009",
    "end": "2668059"
  },
  {
    "text": "so if I go here to lambda console and I go to functions and I'm gonna go down to",
    "start": "2668059",
    "end": "2678180"
  },
  {
    "text": "my PHP test I we can see here if we look",
    "start": "2678180",
    "end": "2685200"
  },
  {
    "text": "at this I have some really basic code and I just say I can't believe this is PHP and then I actually call some PHP",
    "start": "2685200",
    "end": "2692789"
  },
  {
    "text": "and so PHP info is a native call inside a PHP that prints out some interesting",
    "start": "2692789",
    "end": "2700140"
  },
  {
    "text": "stuff here I'll show you in a sec I didn't have an API gateway in front of it and so let's go ahead and pull this",
    "start": "2700140",
    "end": "2707970"
  },
  {
    "text": "up cool how many of you have ever developed",
    "start": "2707970",
    "end": "2715400"
  },
  {
    "text": "in PHP before why yeah so you fighting this before right but so this is PHP",
    "start": "2715400",
    "end": "2721640"
  },
  {
    "text": "info running in a lambda function responding back through an API gateway which is generating this HTML and in PHP",
    "start": "2721640",
    "end": "2728900"
  },
  {
    "text": "info provides lots of information about the underlying operating system and runtime and again this is the stuff running in lambda so the lambda OS",
    "start": "2728900",
    "end": "2737030"
  },
  {
    "text": "version that we use and stuff is shown here I can come down here and see lambda specific environment variables and",
    "start": "2737030",
    "end": "2744230"
  },
  {
    "text": "versions and keys and other stuff that are here again nothing necessarily too",
    "start": "2744230",
    "end": "2751220"
  },
  {
    "text": "exciting about this beyond the fact that we have PHP running into lambda environment and again all I had to do for this was I have a Sam template that",
    "start": "2751220",
    "end": "2760660"
  },
  {
    "text": "references a layer that stacker e has shared and again this could be one that",
    "start": "2761710",
    "end": "2767300"
  },
  {
    "text": "I've created too and then there's a Sam template for this that manages all of",
    "start": "2767300",
    "end": "2772340"
  },
  {
    "text": "this for me and I can go and look at that same template so again in a perfect",
    "start": "2772340",
    "end": "2779150"
  },
  {
    "text": "world you're gonna be consuming a layer that's shared by a community or by a company or by a group or you're taking",
    "start": "2779150",
    "end": "2785120"
  },
  {
    "text": "one these repositories forking it creating the layer yourself or the runtime yourself as layer and",
    "start": "2785120",
    "end": "2790250"
  },
  {
    "text": "referencing it and then again run any code that you could think of if you want to figure out how to build your own",
    "start": "2790250",
    "end": "2796100"
  },
  {
    "text": "again the there are examples from all these companies that have published run times of these bootstrap files it's",
    "start": "2796100",
    "end": "2801550"
  },
  {
    "text": "really really easy to do it it's effectively just a glorified shell script that makes some API calls for you",
    "start": "2801550",
    "end": "2810070"
  },
  {
    "text": "cool so cool so we've talked about - you",
    "start": "2811420",
    "end": "2819410"
  },
  {
    "text": "know new kind of concepts here in service applications with lambda both of them are here to really kind of help",
    "start": "2819410",
    "end": "2825950"
  },
  {
    "text": "simplify and make the development experience for you better the first one here with layers we saw how you can you",
    "start": "2825950",
    "end": "2830960"
  },
  {
    "text": "know simplify reuse of code objects of dependencies of packages of anything you",
    "start": "2830960",
    "end": "2836450"
  },
  {
    "text": "want to throw into a zip file that needs to be shared across functions and again in the example of I have three",
    "start": "2836450",
    "end": "2841460"
  },
  {
    "text": "requirements that expands out to 60 you don't want to have to schlep that stuff around every time that you upload and push up an artifact",
    "start": "2841460",
    "end": "2847640"
  },
  {
    "text": "we've installed with the custom runtime environment how we get that like long tail of languages that you might want to",
    "start": "2847640",
    "end": "2852860"
  },
  {
    "text": "use and so at this point now you can build event-driven applications that",
    "start": "2852860",
    "end": "2857960"
  },
  {
    "text": "execute only for when they need to tied into an event source in any language that you could think of small asterisks",
    "start": "2857960",
    "end": "2864770"
  },
  {
    "text": "there are some things that don't run in Linux today but there's a lot of cool things out there a lot of things that are possible and again these are two new",
    "start": "2864770",
    "end": "2871610"
  },
  {
    "text": "capabilities they are just a couple weeks old so get your hands on them give us feedback on them we'd love to know",
    "start": "2871610",
    "end": "2877070"
  },
  {
    "text": "more about how you feel about them or what we can do to make them better as I've mentioned earlier but for those of",
    "start": "2877070",
    "end": "2882410"
  },
  {
    "text": "you who may be just joining or have been I have been here yet today UAW amazon.com server list to find out more",
    "start": "2882410",
    "end": "2889340"
  },
  {
    "text": "about all of this stuff we've got links to source a pre-bout something we talked",
    "start": "2889340",
    "end": "2894830"
  },
  {
    "text": "about earlier documentation developer tools resources like getting started guides webinars and stuff like that as",
    "start": "2894830",
    "end": "2900650"
  },
  {
    "text": "well as AWS partners again my name is Chris Muntz I am principal developer advocate for server list at AWS you can",
    "start": "2900650",
    "end": "2906710"
  },
  {
    "text": "find me at Mons at amazon.com or at Chrisman's on twitter and we're going to take a quick break here and get started",
    "start": "2906710",
    "end": "2913790"
  },
  {
    "text": "in the next session at the top of the hour where we're gonna be talking a bit in depth here about API gateway building",
    "start": "2913790",
    "end": "2921050"
  },
  {
    "text": "and managing api's and so that's up next but thank you all for joining thank you",
    "start": "2921050",
    "end": "2926510"
  },
  {
    "text": "for coming to see recession videos you on twitch here stick around again we're gonna get started in the next topic in just a couple minutes",
    "start": "2926510",
    "end": "2933730"
  }
]