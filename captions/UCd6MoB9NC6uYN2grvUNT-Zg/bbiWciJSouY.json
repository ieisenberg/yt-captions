[
  {
    "start": "0",
    "end": "24000"
  },
  {
    "text": "hello and welcome",
    "start": "640",
    "end": "2480"
  },
  {
    "text": "my name is sean sanyal and i'm a senior",
    "start": "2480",
    "end": "4560"
  },
  {
    "text": "database specialist solutions architect",
    "start": "4560",
    "end": "6480"
  },
  {
    "text": "here at aws",
    "start": "6480",
    "end": "8720"
  },
  {
    "text": "in today's session we'll cover a few",
    "start": "8720",
    "end": "10960"
  },
  {
    "text": "design patterns for achieving high",
    "start": "10960",
    "end": "12960"
  },
  {
    "text": "availability and disaster recovery for",
    "start": "12960",
    "end": "15759"
  },
  {
    "text": "our amazon era global database offering",
    "start": "15759",
    "end": "18800"
  },
  {
    "text": "we do have a packed agenda so let's dive",
    "start": "18800",
    "end": "21199"
  },
  {
    "text": "right in",
    "start": "21199",
    "end": "23599"
  },
  {
    "text": "so i would like to kick things off with",
    "start": "23680",
    "end": "25680"
  },
  {
    "start": "24000",
    "end": "24000"
  },
  {
    "text": "a quick recap of amazon aurora",
    "start": "25680",
    "end": "28080"
  },
  {
    "text": "then we'll do a quick overview of aurora",
    "start": "28080",
    "end": "30400"
  },
  {
    "text": "global database",
    "start": "30400",
    "end": "32160"
  },
  {
    "text": "we'll then dive right into the ha and",
    "start": "32160",
    "end": "34160"
  },
  {
    "text": "the dr use cases as well as design",
    "start": "34160",
    "end": "36559"
  },
  {
    "text": "patterns",
    "start": "36559",
    "end": "38000"
  },
  {
    "text": "then we'll take a look at a few custom",
    "start": "38000",
    "end": "39760"
  },
  {
    "text": "solutions that our team of database",
    "start": "39760",
    "end": "41760"
  },
  {
    "text": "specialist solutions architects have put",
    "start": "41760",
    "end": "44399"
  },
  {
    "text": "together for common customer challenges",
    "start": "44399",
    "end": "47520"
  },
  {
    "text": "and finally we'll wrap up with some",
    "start": "47520",
    "end": "49600"
  },
  {
    "text": "resources to continue your journey with",
    "start": "49600",
    "end": "51520"
  },
  {
    "text": "amazon or global databases",
    "start": "51520",
    "end": "54559"
  },
  {
    "text": "so let's start with a quick recap of",
    "start": "54559",
    "end": "57039"
  },
  {
    "text": "amazon aurora",
    "start": "57039",
    "end": "59840"
  },
  {
    "start": "59000",
    "end": "59000"
  },
  {
    "text": "so with aurora we've done things a bit",
    "start": "60000",
    "end": "62399"
  },
  {
    "text": "differently",
    "start": "62399",
    "end": "64000"
  },
  {
    "text": "we've decoupled the compute and the",
    "start": "64000",
    "end": "65840"
  },
  {
    "text": "storage layers and in aurora the logging",
    "start": "65840",
    "end": "68640"
  },
  {
    "text": "and the storage layer has been moved",
    "start": "68640",
    "end": "70479"
  },
  {
    "text": "into a multi-tenant purpose-built",
    "start": "70479",
    "end": "72960"
  },
  {
    "text": "distributed storage system which is",
    "start": "72960",
    "end": "75119"
  },
  {
    "text": "separate from the sql transactions and",
    "start": "75119",
    "end": "77119"
  },
  {
    "text": "caching layers handled at the compute",
    "start": "77119",
    "end": "79360"
  },
  {
    "text": "layer",
    "start": "79360",
    "end": "81680"
  },
  {
    "text": "now with that background let's double",
    "start": "81680",
    "end": "83680"
  },
  {
    "start": "82000",
    "end": "82000"
  },
  {
    "text": "click a little bit on the storage",
    "start": "83680",
    "end": "84880"
  },
  {
    "text": "architecture the shared storage volume",
    "start": "84880",
    "end": "87040"
  },
  {
    "text": "in aurora gets striped across hundreds",
    "start": "87040",
    "end": "89360"
  },
  {
    "text": "of storage nodes over three availability",
    "start": "89360",
    "end": "91600"
  },
  {
    "text": "zones",
    "start": "91600",
    "end": "93119"
  },
  {
    "text": "now if you're not familiar with what an",
    "start": "93119",
    "end": "94880"
  },
  {
    "text": "availability zone is",
    "start": "94880",
    "end": "96640"
  },
  {
    "text": "an availability zone is a logical data",
    "start": "96640",
    "end": "98640"
  },
  {
    "text": "center in a region available for use by",
    "start": "98640",
    "end": "101119"
  },
  {
    "text": "any aws customer",
    "start": "101119",
    "end": "103759"
  },
  {
    "text": "each zone in a region has redundant and",
    "start": "103759",
    "end": "106479"
  },
  {
    "text": "separate power",
    "start": "106479",
    "end": "107840"
  },
  {
    "text": "networking and connectivity to reduce",
    "start": "107840",
    "end": "110000"
  },
  {
    "text": "the likelihood of two zones failing",
    "start": "110000",
    "end": "112000"
  },
  {
    "text": "simultaneously",
    "start": "112000",
    "end": "114880"
  },
  {
    "text": "in aurora we replicate the data six ways",
    "start": "114880",
    "end": "117680"
  },
  {
    "text": "and each page is replicated across three",
    "start": "117680",
    "end": "120000"
  },
  {
    "text": "availability zones with two copies in",
    "start": "120000",
    "end": "122399"
  },
  {
    "text": "each availability zone",
    "start": "122399",
    "end": "124719"
  },
  {
    "text": "the green the red and the white boxes",
    "start": "124719",
    "end": "127520"
  },
  {
    "text": "here in the diagram on your right",
    "start": "127520",
    "end": "129520"
  },
  {
    "text": "represent the two copies on each az of",
    "start": "129520",
    "end": "132080"
  },
  {
    "text": "these storage nodes",
    "start": "132080",
    "end": "134800"
  },
  {
    "text": "why did we build it this way well this",
    "start": "134800",
    "end": "137360"
  },
  {
    "text": "architecture serves two distinct",
    "start": "137360",
    "end": "139200"
  },
  {
    "text": "advantages",
    "start": "139200",
    "end": "140879"
  },
  {
    "text": "first it gives the additional durability",
    "start": "140879",
    "end": "143280"
  },
  {
    "text": "to the storage layer",
    "start": "143280",
    "end": "144879"
  },
  {
    "text": "since data is backed up to s3 which",
    "start": "144879",
    "end": "147440"
  },
  {
    "text": "provides 11 9's of durability",
    "start": "147440",
    "end": "150319"
  },
  {
    "text": "and second it helps us survive failure",
    "start": "150319",
    "end": "152560"
  },
  {
    "text": "of an entire az plus an additional",
    "start": "152560",
    "end": "155040"
  },
  {
    "text": "failed node",
    "start": "155040",
    "end": "157840"
  },
  {
    "text": "lastly it's important to point out that",
    "start": "157920",
    "end": "160160"
  },
  {
    "text": "data is written in 10 gig protection",
    "start": "160160",
    "end": "162319"
  },
  {
    "text": "groups growing automatically when needed",
    "start": "162319",
    "end": "164800"
  },
  {
    "text": "up to a maximum size of 128 terabytes",
    "start": "164800",
    "end": "169959"
  },
  {
    "text": "now let's talk a little bit about global",
    "start": "171760",
    "end": "173840"
  },
  {
    "text": "databases",
    "start": "173840",
    "end": "176480"
  },
  {
    "start": "176000",
    "end": "176000"
  },
  {
    "text": "so a rural global database enables two",
    "start": "177200",
    "end": "179599"
  },
  {
    "text": "primary use cases",
    "start": "179599",
    "end": "181920"
  },
  {
    "text": "the first use case is supporting a",
    "start": "181920",
    "end": "183840"
  },
  {
    "text": "disaster recovery solution that can",
    "start": "183840",
    "end": "185680"
  },
  {
    "text": "handle a full regional failure with a",
    "start": "185680",
    "end": "187760"
  },
  {
    "text": "low recovery point objective and a low",
    "start": "187760",
    "end": "189760"
  },
  {
    "text": "recovery time objective",
    "start": "189760",
    "end": "191599"
  },
  {
    "text": "while minimizing impact to your database",
    "start": "191599",
    "end": "193840"
  },
  {
    "text": "cluster",
    "start": "193840",
    "end": "195760"
  },
  {
    "text": "with aurora global database you can",
    "start": "195760",
    "end": "197920"
  },
  {
    "text": "typically achieve an rpo of less than",
    "start": "197920",
    "end": "200000"
  },
  {
    "text": "five seconds and an rto of less than one",
    "start": "200000",
    "end": "202239"
  },
  {
    "text": "minute in most cases",
    "start": "202239",
    "end": "204799"
  },
  {
    "text": "the second use case for error global",
    "start": "204799",
    "end": "206799"
  },
  {
    "text": "database is providing read-only copies",
    "start": "206799",
    "end": "209360"
  },
  {
    "text": "of an or a cluster",
    "start": "209360",
    "end": "211200"
  },
  {
    "text": "in up to five remote regions to serve",
    "start": "211200",
    "end": "213200"
  },
  {
    "text": "users closer to those regions",
    "start": "213200",
    "end": "216159"
  },
  {
    "text": "this of course provides users in those",
    "start": "216159",
    "end": "218400"
  },
  {
    "text": "remote regions with lower latency reads",
    "start": "218400",
    "end": "221440"
  },
  {
    "text": "than having to connect to the further",
    "start": "221440",
    "end": "222959"
  },
  {
    "text": "away primary region",
    "start": "222959",
    "end": "226319"
  },
  {
    "text": "i would like to point out that the",
    "start": "226319",
    "end": "228080"
  },
  {
    "text": "number one vertical for a global",
    "start": "228080",
    "end": "230560"
  },
  {
    "text": "database today",
    "start": "230560",
    "end": "232239"
  },
  {
    "text": "is financial services customers",
    "start": "232239",
    "end": "235519"
  },
  {
    "text": "if you are a financial services customer",
    "start": "235519",
    "end": "237840"
  },
  {
    "text": "or if you do have a customer who is from",
    "start": "237840",
    "end": "240319"
  },
  {
    "text": "the financial services background",
    "start": "240319",
    "end": "243439"
  },
  {
    "text": "plan for a conversation with your",
    "start": "243439",
    "end": "245200"
  },
  {
    "text": "stakeholders about a global database to",
    "start": "245200",
    "end": "247920"
  },
  {
    "text": "achieve",
    "start": "247920",
    "end": "248879"
  },
  {
    "text": "dr region resiliency as well as",
    "start": "248879",
    "end": "251439"
  },
  {
    "text": "compliance",
    "start": "251439",
    "end": "254159"
  },
  {
    "text": "the number two use case is customers",
    "start": "254159",
    "end": "256239"
  },
  {
    "text": "with cross region end users and needing",
    "start": "256239",
    "end": "259199"
  },
  {
    "text": "region local latencies for local read",
    "start": "259199",
    "end": "261280"
  },
  {
    "text": "use cases",
    "start": "261280",
    "end": "263280"
  },
  {
    "text": "you can read more about how a company",
    "start": "263280",
    "end": "265520"
  },
  {
    "text": "called smart news uses their global",
    "start": "265520",
    "end": "268160"
  },
  {
    "text": "database architecture to serve their",
    "start": "268160",
    "end": "271199"
  },
  {
    "text": "worldwide end users in the link on your",
    "start": "271199",
    "end": "273840"
  },
  {
    "text": "screen",
    "start": "273840",
    "end": "276240"
  },
  {
    "start": "276000",
    "end": "276000"
  },
  {
    "text": "moving on in this example us east is the",
    "start": "276240",
    "end": "279199"
  },
  {
    "text": "primary region and eu west is a",
    "start": "279199",
    "end": "281680"
  },
  {
    "text": "secondary region this is the first use",
    "start": "281680",
    "end": "284000"
  },
  {
    "text": "case for error global database",
    "start": "284000",
    "end": "286800"
  },
  {
    "text": "in case of a disaster in us east we give",
    "start": "286800",
    "end": "289680"
  },
  {
    "text": "you the provision to fail over to eu",
    "start": "289680",
    "end": "292000"
  },
  {
    "text": "west to ensure a fast cross-region dr",
    "start": "292000",
    "end": "294960"
  },
  {
    "text": "solution",
    "start": "294960",
    "end": "297040"
  },
  {
    "start": "297000",
    "end": "297000"
  },
  {
    "text": "this is the second use case for a global",
    "start": "297040",
    "end": "299120"
  },
  {
    "text": "databases and in this example we have us",
    "start": "299120",
    "end": "302240"
  },
  {
    "text": "east as our primary region",
    "start": "302240",
    "end": "304320"
  },
  {
    "text": "and three more secondary regions in this",
    "start": "304320",
    "end": "306720"
  },
  {
    "text": "case",
    "start": "306720",
    "end": "307680"
  },
  {
    "text": "we have our reads horizontally scaled",
    "start": "307680",
    "end": "309840"
  },
  {
    "text": "across the u.s west eu west ap southeast",
    "start": "309840",
    "end": "314000"
  },
  {
    "text": "and typically the replication lag",
    "start": "314000",
    "end": "316240"
  },
  {
    "text": "across these regions is less than one",
    "start": "316240",
    "end": "318560"
  },
  {
    "text": "second",
    "start": "318560",
    "end": "320400"
  },
  {
    "start": "320000",
    "end": "320000"
  },
  {
    "text": "so the architecture itself for amazon",
    "start": "320400",
    "end": "322960"
  },
  {
    "text": "era global database is based on a",
    "start": "322960",
    "end": "325600"
  },
  {
    "text": "physical log-based asynchronous",
    "start": "325600",
    "end": "327919"
  },
  {
    "text": "replication topology",
    "start": "327919",
    "end": "330000"
  },
  {
    "text": "which is different than the logical",
    "start": "330000",
    "end": "331440"
  },
  {
    "text": "replication that most of us would be",
    "start": "331440",
    "end": "333280"
  },
  {
    "text": "familiar with in the open source",
    "start": "333280",
    "end": "334800"
  },
  {
    "text": "community",
    "start": "334800",
    "end": "336720"
  },
  {
    "text": "we use an optimized replication service",
    "start": "336720",
    "end": "339360"
  },
  {
    "text": "for data transport across the aws",
    "start": "339360",
    "end": "341440"
  },
  {
    "text": "backbone network",
    "start": "341440",
    "end": "342880"
  },
  {
    "text": "with multiple encrypted connections to",
    "start": "342880",
    "end": "344880"
  },
  {
    "text": "reduce jitter",
    "start": "344880",
    "end": "346880"
  },
  {
    "text": "and note that we can have up to 90 read",
    "start": "346880",
    "end": "349199"
  },
  {
    "text": "replicas in up to five secondary regions",
    "start": "349199",
    "end": "351600"
  },
  {
    "text": "in our global database cluster which is",
    "start": "351600",
    "end": "353919"
  },
  {
    "text": "pretty pretty huge",
    "start": "353919",
    "end": "356000"
  },
  {
    "text": "this is how it looks in action so on the",
    "start": "356000",
    "end": "359520"
  },
  {
    "text": "diagram you'll see",
    "start": "359520",
    "end": "361120"
  },
  {
    "text": "region a with three availability zones",
    "start": "361120",
    "end": "363360"
  },
  {
    "text": "with your read write",
    "start": "363360",
    "end": "365360"
  },
  {
    "text": "node in availability zone three",
    "start": "365360",
    "end": "368080"
  },
  {
    "text": "and two read-only nodes or read replicas",
    "start": "368080",
    "end": "370639"
  },
  {
    "text": "in availability zone one and two",
    "start": "370639",
    "end": "372240"
  },
  {
    "text": "respectively with a shared storage",
    "start": "372240",
    "end": "374479"
  },
  {
    "text": "volume",
    "start": "374479",
    "end": "376880"
  },
  {
    "text": "now with global database we have region",
    "start": "377120",
    "end": "379199"
  },
  {
    "text": "b this is completely different region in",
    "start": "379199",
    "end": "381520"
  },
  {
    "text": "a different",
    "start": "381520",
    "end": "382960"
  },
  {
    "text": "geographic location across the world",
    "start": "382960",
    "end": "386080"
  },
  {
    "text": "and here we have the same architecture",
    "start": "386080",
    "end": "388319"
  },
  {
    "text": "but we have just one read only node with",
    "start": "388319",
    "end": "391280"
  },
  {
    "text": "a shared storage volume",
    "start": "391280",
    "end": "393520"
  },
  {
    "text": "note that here on the region a side we",
    "start": "393520",
    "end": "396319"
  },
  {
    "text": "have a fleet of replication servers",
    "start": "396319",
    "end": "399039"
  },
  {
    "text": "which interacts with a fleet of",
    "start": "399039",
    "end": "400479"
  },
  {
    "text": "replication agents in the other region",
    "start": "400479",
    "end": "404479"
  },
  {
    "text": "now when you send a write from your read",
    "start": "404560",
    "end": "407360"
  },
  {
    "text": "write node",
    "start": "407360",
    "end": "408560"
  },
  {
    "text": "it of course",
    "start": "408560",
    "end": "409919"
  },
  {
    "text": "goes to the error storage and the",
    "start": "409919",
    "end": "411599"
  },
  {
    "text": "read-only nodes in parallel",
    "start": "411599",
    "end": "413680"
  },
  {
    "text": "and from the error storage node to the",
    "start": "413680",
    "end": "415520"
  },
  {
    "text": "replication server and also from the",
    "start": "415520",
    "end": "417280"
  },
  {
    "text": "replication server to the replication",
    "start": "417280",
    "end": "419120"
  },
  {
    "text": "agent in the other region",
    "start": "419120",
    "end": "420880"
  },
  {
    "text": "from where it gets",
    "start": "420880",
    "end": "422400"
  },
  {
    "text": "replicated to the aurora storage layer",
    "start": "422400",
    "end": "424479"
  },
  {
    "text": "and the read-only node",
    "start": "424479",
    "end": "427520"
  },
  {
    "text": "now in the case of",
    "start": "428479",
    "end": "430720"
  },
  {
    "text": "multiple read-only nodes you can have up",
    "start": "430720",
    "end": "433199"
  },
  {
    "text": "to 15 in the secondary region",
    "start": "433199",
    "end": "435680"
  },
  {
    "text": "that can again attach to your error",
    "start": "435680",
    "end": "438160"
  },
  {
    "text": "storage which is the same storage",
    "start": "438160",
    "end": "441199"
  },
  {
    "text": "and read and horizontally scale your",
    "start": "441199",
    "end": "443599"
  },
  {
    "text": "read architecture and making it more",
    "start": "443599",
    "end": "446639"
  },
  {
    "text": "highly available in the other region now",
    "start": "446639",
    "end": "449120"
  },
  {
    "text": "in the rear event of a regional failure",
    "start": "449120",
    "end": "451280"
  },
  {
    "text": "we give you the provision to promote a",
    "start": "451280",
    "end": "453440"
  },
  {
    "text": "read-only node to a read write note in",
    "start": "453440",
    "end": "456080"
  },
  {
    "text": "the secondary region",
    "start": "456080",
    "end": "457919"
  },
  {
    "text": "and there are a couple of ways to do it",
    "start": "457919",
    "end": "460639"
  },
  {
    "text": "and depending on the way you choose to",
    "start": "460639",
    "end": "462560"
  },
  {
    "text": "do it you can have the same topology in",
    "start": "462560",
    "end": "465280"
  },
  {
    "text": "the reverse order with the fully",
    "start": "465280",
    "end": "467360"
  },
  {
    "text": "functional global database topology",
    "start": "467360",
    "end": "469440"
  },
  {
    "text": "established in the other region region b",
    "start": "469440",
    "end": "472240"
  },
  {
    "text": "in this case as your new primary",
    "start": "472240",
    "end": "474800"
  },
  {
    "text": "and your original region region a in",
    "start": "474800",
    "end": "477120"
  },
  {
    "text": "this case is your new secondary region",
    "start": "477120",
    "end": "479520"
  },
  {
    "text": "in this case of course we are able to",
    "start": "479520",
    "end": "482000"
  },
  {
    "text": "achieve a very high throughput of up to",
    "start": "482000",
    "end": "484319"
  },
  {
    "text": "200",
    "start": "484319",
    "end": "485440"
  },
  {
    "text": "000 writes per second with negligible",
    "start": "485440",
    "end": "487360"
  },
  {
    "text": "performance impact",
    "start": "487360",
    "end": "489440"
  },
  {
    "text": "also since the fact that this is",
    "start": "489440",
    "end": "491440"
  },
  {
    "text": "physical storage based asynchronous",
    "start": "491440",
    "end": "493280"
  },
  {
    "text": "replication",
    "start": "493280",
    "end": "494479"
  },
  {
    "text": "we still see a lag but this is",
    "start": "494479",
    "end": "496560"
  },
  {
    "text": "significantly low typically less than a",
    "start": "496560",
    "end": "499199"
  },
  {
    "text": "second cross-country under heavy load",
    "start": "499199",
    "end": "503199"
  },
  {
    "text": "and in the rare event of a regional",
    "start": "503199",
    "end": "505039"
  },
  {
    "text": "failure we are able to promote a",
    "start": "505039",
    "end": "507440"
  },
  {
    "text": "secondary region to a primary",
    "start": "507440",
    "end": "509520"
  },
  {
    "text": "and start serving full read and write",
    "start": "509520",
    "end": "511360"
  },
  {
    "text": "capabilities in under a minute in most",
    "start": "511360",
    "end": "513518"
  },
  {
    "text": "cases in the secondary region",
    "start": "513519",
    "end": "516479"
  },
  {
    "text": "now let's dive into some of the use",
    "start": "516479",
    "end": "518560"
  },
  {
    "text": "cases for global databases the first of",
    "start": "518560",
    "end": "521279"
  },
  {
    "text": "them being distributed multi-region apps",
    "start": "521279",
    "end": "523919"
  },
  {
    "text": "want region local access for read or",
    "start": "523919",
    "end": "526880"
  },
  {
    "text": "write",
    "start": "526880",
    "end": "528080"
  },
  {
    "start": "528000",
    "end": "528000"
  },
  {
    "text": "with the read replica right forwarding",
    "start": "528080",
    "end": "530240"
  },
  {
    "text": "feature of a global database performing",
    "start": "530240",
    "end": "532959"
  },
  {
    "text": "rights and remote regions becomes much",
    "start": "532959",
    "end": "535360"
  },
  {
    "text": "easier",
    "start": "535360",
    "end": "536720"
  },
  {
    "text": "the primary use case is to simplify",
    "start": "536720",
    "end": "538880"
  },
  {
    "text": "application development",
    "start": "538880",
    "end": "541279"
  },
  {
    "text": "right forwarding works by accepting a",
    "start": "541279",
    "end": "543360"
  },
  {
    "text": "read write statement from an application",
    "start": "543360",
    "end": "545600"
  },
  {
    "text": "in a secondary region's read replica in",
    "start": "545600",
    "end": "548399"
  },
  {
    "text": "this example assume that the application",
    "start": "548399",
    "end": "550640"
  },
  {
    "text": "is performing its rights in the",
    "start": "550640",
    "end": "552240"
  },
  {
    "text": "secondary eu west region",
    "start": "552240",
    "end": "554959"
  },
  {
    "text": "then in this configuration aurora",
    "start": "554959",
    "end": "556880"
  },
  {
    "text": "forwards those right operations to your",
    "start": "556880",
    "end": "559600"
  },
  {
    "text": "primary regions cluster in u.s east",
    "start": "559600",
    "end": "562480"
  },
  {
    "text": "where the right statement is then",
    "start": "562480",
    "end": "563920"
  },
  {
    "text": "executed on the primary instance",
    "start": "563920",
    "end": "567600"
  },
  {
    "text": "multiple consistency modes are provided",
    "start": "567760",
    "end": "570240"
  },
  {
    "text": "which allows you to balance consistency",
    "start": "570240",
    "end": "572480"
  },
  {
    "text": "and performance",
    "start": "572480",
    "end": "574720"
  },
  {
    "start": "574000",
    "end": "574000"
  },
  {
    "text": "so let's take a look at it in more",
    "start": "574720",
    "end": "576720"
  },
  {
    "text": "detail",
    "start": "576720",
    "end": "578000"
  },
  {
    "text": "in this example we have our primary",
    "start": "578000",
    "end": "580080"
  },
  {
    "text": "region in ohio which is connected to one",
    "start": "580080",
    "end": "583120"
  },
  {
    "text": "of our applications let's say app a",
    "start": "583120",
    "end": "586240"
  },
  {
    "text": "and we have three more secondary regions",
    "start": "586240",
    "end": "588240"
  },
  {
    "text": "in oregon",
    "start": "588240",
    "end": "589519"
  },
  {
    "text": "northern virginia and ireland",
    "start": "589519",
    "end": "592080"
  },
  {
    "text": "and one of our other applications app b",
    "start": "592080",
    "end": "594480"
  },
  {
    "text": "is connected to the oregon region",
    "start": "594480",
    "end": "597519"
  },
  {
    "text": "now assume that application b wants to",
    "start": "597519",
    "end": "599760"
  },
  {
    "text": "do some rights in the oregon region",
    "start": "599760",
    "end": "601600"
  },
  {
    "text": "which is a secondary region through the",
    "start": "601600",
    "end": "603760"
  },
  {
    "text": "read replica",
    "start": "603760",
    "end": "605519"
  },
  {
    "text": "what will happen is first the",
    "start": "605519",
    "end": "607920"
  },
  {
    "text": "application",
    "start": "607920",
    "end": "609120"
  },
  {
    "text": "rights to the read replica in oregon",
    "start": "609120",
    "end": "612959"
  },
  {
    "text": "next those rights are then forwarded to",
    "start": "612959",
    "end": "615760"
  },
  {
    "text": "ohio which is a primary region",
    "start": "615760",
    "end": "619839"
  },
  {
    "text": "third",
    "start": "620160",
    "end": "621040"
  },
  {
    "text": "the ohio region which is a primary",
    "start": "621040",
    "end": "623120"
  },
  {
    "text": "region acknowledges and commits the",
    "start": "623120",
    "end": "625279"
  },
  {
    "text": "transaction",
    "start": "625279",
    "end": "626880"
  },
  {
    "text": "and lastly replicates the update to all",
    "start": "626880",
    "end": "630399"
  },
  {
    "text": "secondary regions",
    "start": "630399",
    "end": "632959"
  },
  {
    "text": "so any results from executing these",
    "start": "632959",
    "end": "635120"
  },
  {
    "text": "statements including warnings and errors",
    "start": "635120",
    "end": "638079"
  },
  {
    "text": "are always returned to the remote",
    "start": "638079",
    "end": "640079"
  },
  {
    "text": "instance",
    "start": "640079",
    "end": "641040"
  },
  {
    "text": "and then to the application",
    "start": "641040",
    "end": "643519"
  },
  {
    "text": "this entire process is also transparent",
    "start": "643519",
    "end": "646480"
  },
  {
    "text": "to the application so you need to only",
    "start": "646480",
    "end": "648959"
  },
  {
    "text": "enable right forwarding for the cluster",
    "start": "648959",
    "end": "651519"
  },
  {
    "text": "and set the consistency mode for each",
    "start": "651519",
    "end": "654480"
  },
  {
    "text": "session where you want to perform a",
    "start": "654480",
    "end": "655839"
  },
  {
    "text": "write that's all that you need to take",
    "start": "655839",
    "end": "657760"
  },
  {
    "text": "care of as an end user",
    "start": "657760",
    "end": "660800"
  },
  {
    "text": "so overall right forwarding gives us",
    "start": "660800",
    "end": "663360"
  },
  {
    "text": "four key benefits",
    "start": "663360",
    "end": "665680"
  },
  {
    "text": "first it's a fully managed solution so",
    "start": "665680",
    "end": "668720"
  },
  {
    "text": "rights issued at a remote cluster",
    "start": "668720",
    "end": "671360"
  },
  {
    "text": "are transparently forwarded to the",
    "start": "671360",
    "end": "673120"
  },
  {
    "text": "primary cluster using secure",
    "start": "673120",
    "end": "674880"
  },
  {
    "text": "cross-region communication channels",
    "start": "674880",
    "end": "678000"
  },
  {
    "text": "second there are no replication",
    "start": "678000",
    "end": "679920"
  },
  {
    "text": "conflicts",
    "start": "679920",
    "end": "681120"
  },
  {
    "text": "because all rights are applied by the",
    "start": "681120",
    "end": "682880"
  },
  {
    "text": "primary cluster",
    "start": "682880",
    "end": "684880"
  },
  {
    "text": "replication related update conflicts do",
    "start": "684880",
    "end": "687279"
  },
  {
    "text": "not occur",
    "start": "687279",
    "end": "689519"
  },
  {
    "text": "third it's simple so you can issue",
    "start": "689519",
    "end": "692000"
  },
  {
    "text": "rights to the remote cluster followed by",
    "start": "692000",
    "end": "693920"
  },
  {
    "text": "reads that will observe the previous",
    "start": "693920",
    "end": "696399"
  },
  {
    "text": "rights",
    "start": "696399",
    "end": "697600"
  },
  {
    "text": "and finally the fourth benefit is it's",
    "start": "697600",
    "end": "699760"
  },
  {
    "text": "very flexible so you can choose among",
    "start": "699760",
    "end": "701760"
  },
  {
    "text": "several read consistency levels",
    "start": "701760",
    "end": "704240"
  },
  {
    "text": "to balance consistency and performance",
    "start": "704240",
    "end": "707519"
  },
  {
    "text": "we offer three consistency levels so we",
    "start": "707519",
    "end": "710079"
  },
  {
    "text": "have the eventual the session and the",
    "start": "710079",
    "end": "712000"
  },
  {
    "text": "global consistency levels",
    "start": "712000",
    "end": "714240"
  },
  {
    "text": "and you can read more about these",
    "start": "714240",
    "end": "715680"
  },
  {
    "text": "consistency levels in our aws",
    "start": "715680",
    "end": "717839"
  },
  {
    "text": "documentation",
    "start": "717839",
    "end": "720160"
  },
  {
    "text": "now let's talk about our next use case",
    "start": "720160",
    "end": "722880"
  },
  {
    "text": "customers who want to save costs on dr",
    "start": "722880",
    "end": "727040"
  },
  {
    "start": "727000",
    "end": "727000"
  },
  {
    "text": "now it's also possible for a global",
    "start": "727040",
    "end": "729440"
  },
  {
    "text": "database to run headless in the",
    "start": "729440",
    "end": "731279"
  },
  {
    "text": "secondary aws region",
    "start": "731279",
    "end": "734079"
  },
  {
    "text": "this means that the secondary region",
    "start": "734079",
    "end": "735920"
  },
  {
    "text": "will not have a running database",
    "start": "735920",
    "end": "737839"
  },
  {
    "text": "instance and just the aurora storage",
    "start": "737839",
    "end": "740079"
  },
  {
    "text": "layer",
    "start": "740079",
    "end": "741760"
  },
  {
    "text": "aurora will replicate log records to",
    "start": "741760",
    "end": "744079"
  },
  {
    "text": "aurora storage in the secondary region",
    "start": "744079",
    "end": "745920"
  },
  {
    "text": "to keep it in sync",
    "start": "745920",
    "end": "747920"
  },
  {
    "text": "and you can always add a replica before",
    "start": "747920",
    "end": "750480"
  },
  {
    "text": "failing over whenever you need it",
    "start": "750480",
    "end": "752959"
  },
  {
    "text": "so this way you save",
    "start": "752959",
    "end": "755279"
  },
  {
    "text": "compute costs at the expense of a higher",
    "start": "755279",
    "end": "758079"
  },
  {
    "text": "rto because",
    "start": "758079",
    "end": "759600"
  },
  {
    "text": "although short it takes that additional",
    "start": "759600",
    "end": "761680"
  },
  {
    "text": "time to create that compute node when",
    "start": "761680",
    "end": "764160"
  },
  {
    "text": "you want to failover to the secondary",
    "start": "764160",
    "end": "765600"
  },
  {
    "text": "region",
    "start": "765600",
    "end": "767839"
  },
  {
    "text": "we also recommend you to monitor the",
    "start": "767839",
    "end": "769760"
  },
  {
    "text": "replication lag in the other region",
    "start": "769760",
    "end": "771519"
  },
  {
    "text": "using cloudwatch and then failover when",
    "start": "771519",
    "end": "774000"
  },
  {
    "text": "the lag is at a minimum",
    "start": "774000",
    "end": "776959"
  },
  {
    "text": "now let's look at the next use case",
    "start": "776959",
    "end": "779680"
  },
  {
    "text": "customers who want to cap the maximum",
    "start": "779680",
    "end": "782240"
  },
  {
    "text": "rpo loss to a limit",
    "start": "782240",
    "end": "785440"
  },
  {
    "text": "so within aurora postgres-based global",
    "start": "785440",
    "end": "787760"
  },
  {
    "start": "786000",
    "end": "786000"
  },
  {
    "text": "database you can manage the rpo for your",
    "start": "787760",
    "end": "790240"
  },
  {
    "text": "global database by using",
    "start": "790240",
    "end": "792399"
  },
  {
    "text": "a parameter called globaldb rpo",
    "start": "792399",
    "end": "796000"
  },
  {
    "text": "now this parameter exists in the db",
    "start": "796000",
    "end": "797839"
  },
  {
    "text": "parameter group",
    "start": "797839",
    "end": "799519"
  },
  {
    "text": "and this represents the maximum amount",
    "start": "799519",
    "end": "801600"
  },
  {
    "text": "of data that can be lost in the event of",
    "start": "801600",
    "end": "803839"
  },
  {
    "text": "an outage",
    "start": "803839",
    "end": "805760"
  },
  {
    "text": "when you set an rpo for your aurora",
    "start": "805760",
    "end": "808079"
  },
  {
    "text": "postgres-based global database aurora",
    "start": "808079",
    "end": "810399"
  },
  {
    "text": "monitors the rpo lag time",
    "start": "810399",
    "end": "812880"
  },
  {
    "text": "of all secondary clusters to make sure",
    "start": "812880",
    "end": "815600"
  },
  {
    "text": "that at least one secondary cluster",
    "start": "815600",
    "end": "818160"
  },
  {
    "text": "stays within the target rpo window",
    "start": "818160",
    "end": "821760"
  },
  {
    "text": "the rbo is used when your database",
    "start": "821760",
    "end": "824320"
  },
  {
    "text": "resumes operations in a new aws region",
    "start": "824320",
    "end": "827199"
  },
  {
    "text": "after a failover",
    "start": "827199",
    "end": "829920"
  },
  {
    "text": "so in this case",
    "start": "829920",
    "end": "831360"
  },
  {
    "text": "aurora will first commit the transaction",
    "start": "831360",
    "end": "834079"
  },
  {
    "text": "if at least one secondary database",
    "start": "834079",
    "end": "836639"
  },
  {
    "text": "cluster has an rpo lag time less than",
    "start": "836639",
    "end": "839199"
  },
  {
    "text": "the rpo",
    "start": "839199",
    "end": "840720"
  },
  {
    "text": "or",
    "start": "840720",
    "end": "841519"
  },
  {
    "text": "it will block the transaction if all",
    "start": "841519",
    "end": "843519"
  },
  {
    "text": "secondary database clusters",
    "start": "843519",
    "end": "845519"
  },
  {
    "text": "have rpo lag times that are larger than",
    "start": "845519",
    "end": "847600"
  },
  {
    "text": "the target rpo",
    "start": "847600",
    "end": "849920"
  },
  {
    "text": "it also logs the event to the postgres",
    "start": "849920",
    "end": "852160"
  },
  {
    "text": "log file and emits weight events that",
    "start": "852160",
    "end": "854320"
  },
  {
    "text": "show the block sessions in performance",
    "start": "854320",
    "end": "856560"
  },
  {
    "text": "insights",
    "start": "856560",
    "end": "858079"
  },
  {
    "text": "in other words if all secondary clusters",
    "start": "858079",
    "end": "860560"
  },
  {
    "text": "are behind the target rpo",
    "start": "860560",
    "end": "863519"
  },
  {
    "text": "aurora will pause the transactions on",
    "start": "863519",
    "end": "865279"
  },
  {
    "text": "the primary cluster at least until one",
    "start": "865279",
    "end": "868079"
  },
  {
    "text": "of the secondary clusters catches up",
    "start": "868079",
    "end": "871680"
  },
  {
    "text": "and these past transactions are resumed",
    "start": "871680",
    "end": "873839"
  },
  {
    "text": "and committed as soon as the lag time of",
    "start": "873839",
    "end": "876000"
  },
  {
    "text": "at least one of the secondary database",
    "start": "876000",
    "end": "878000"
  },
  {
    "text": "clusters becomes less than the target",
    "start": "878000",
    "end": "880639"
  },
  {
    "text": "rpo",
    "start": "880639",
    "end": "882079"
  },
  {
    "text": "the result is that no transactions can",
    "start": "882079",
    "end": "884480"
  },
  {
    "text": "commit until the rpo is fully met",
    "start": "884480",
    "end": "888079"
  },
  {
    "start": "888000",
    "end": "888000"
  },
  {
    "text": "so with managed rpo as we saw in the",
    "start": "888079",
    "end": "890800"
  },
  {
    "text": "previous slide you define the maximum",
    "start": "890800",
    "end": "892639"
  },
  {
    "text": "rpo that you allow using the db",
    "start": "892639",
    "end": "894800"
  },
  {
    "text": "parameter",
    "start": "894800",
    "end": "896639"
  },
  {
    "text": "if the rpo lag in all secondary regions",
    "start": "896639",
    "end": "899120"
  },
  {
    "text": "exceeds that limit",
    "start": "899120",
    "end": "900880"
  },
  {
    "text": "aurora pauses writes until at least one",
    "start": "900880",
    "end": "903920"
  },
  {
    "text": "secondary region catches up",
    "start": "903920",
    "end": "906320"
  },
  {
    "text": "now let's see an example where we set",
    "start": "906320",
    "end": "908320"
  },
  {
    "text": "rpo to 20 seconds",
    "start": "908320",
    "end": "910959"
  },
  {
    "text": "so in this example we have our ohio as a",
    "start": "910959",
    "end": "913680"
  },
  {
    "text": "primary region",
    "start": "913680",
    "end": "915120"
  },
  {
    "text": "and two other secondary regions northern",
    "start": "915120",
    "end": "916959"
  },
  {
    "text": "virginia and ireland",
    "start": "916959",
    "end": "918720"
  },
  {
    "text": "where the rpo lag is less",
    "start": "918720",
    "end": "921680"
  },
  {
    "text": "than the rpo that we set which is 0.4",
    "start": "921680",
    "end": "924880"
  },
  {
    "text": "seconds in each of these secondary",
    "start": "924880",
    "end": "926240"
  },
  {
    "text": "regions so it's within the limit",
    "start": "926240",
    "end": "929680"
  },
  {
    "text": "now as we proceed forward in time",
    "start": "930160",
    "end": "932399"
  },
  {
    "text": "northern virginia sees our lag of 22",
    "start": "932399",
    "end": "935199"
  },
  {
    "text": "seconds which is more than the rpo uh",
    "start": "935199",
    "end": "938079"
  },
  {
    "text": "metric that we set of 20 seconds",
    "start": "938079",
    "end": "940560"
  },
  {
    "text": "however lag is still okay in ireland",
    "start": "940560",
    "end": "943839"
  },
  {
    "text": "so the rights continue to happen in the",
    "start": "943839",
    "end": "946320"
  },
  {
    "text": "primary region in ohio",
    "start": "946320",
    "end": "949680"
  },
  {
    "text": "now as we move further forward in time",
    "start": "950079",
    "end": "952480"
  },
  {
    "text": "both the secondary regions northern",
    "start": "952480",
    "end": "954160"
  },
  {
    "text": "virginia and ireland see a lag which has",
    "start": "954160",
    "end": "956959"
  },
  {
    "text": "exceeded the limit that we said of 20",
    "start": "956959",
    "end": "959440"
  },
  {
    "text": "seconds in both these regions",
    "start": "959440",
    "end": "962160"
  },
  {
    "text": "now in this case what will happen is",
    "start": "962160",
    "end": "963920"
  },
  {
    "text": "aurora will pause the traffic the right",
    "start": "963920",
    "end": "966880"
  },
  {
    "text": "traffic in the primary region",
    "start": "966880",
    "end": "970000"
  },
  {
    "text": "until at least one of the secondary",
    "start": "970000",
    "end": "971839"
  },
  {
    "text": "regions has an rpo lag of less than the",
    "start": "971839",
    "end": "974320"
  },
  {
    "text": "limit that we set",
    "start": "974320",
    "end": "976000"
  },
  {
    "text": "so in this case ireland is back",
    "start": "976000",
    "end": "978320"
  },
  {
    "text": "after a point in time to 15 seconds",
    "start": "978320",
    "end": "980880"
  },
  {
    "text": "which is less than 20 seconds",
    "start": "980880",
    "end": "983199"
  },
  {
    "text": "and hence the rights have resumed in the",
    "start": "983199",
    "end": "985360"
  },
  {
    "text": "ohio region",
    "start": "985360",
    "end": "987120"
  },
  {
    "text": "the next use case is for customers who",
    "start": "987120",
    "end": "989519"
  },
  {
    "text": "want to meet dr test regulatory",
    "start": "989519",
    "end": "992079"
  },
  {
    "text": "compliance requirements",
    "start": "992079",
    "end": "994800"
  },
  {
    "text": "so the primary use case here is uh by",
    "start": "994800",
    "end": "997600"
  },
  {
    "start": "995000",
    "end": "995000"
  },
  {
    "text": "using this feature you can relocate the",
    "start": "997600",
    "end": "1000160"
  },
  {
    "text": "primary cluster of your global database",
    "start": "1000160",
    "end": "1003440"
  },
  {
    "text": "to an entirely different region on a",
    "start": "1003440",
    "end": "1005279"
  },
  {
    "text": "routine basis",
    "start": "1005279",
    "end": "1007360"
  },
  {
    "text": "and being able to demonstrate this",
    "start": "1007360",
    "end": "1009199"
  },
  {
    "text": "capability with your production systems",
    "start": "1009199",
    "end": "1010959"
  },
  {
    "text": "is a legal requirement for a lot of",
    "start": "1010959",
    "end": "1012800"
  },
  {
    "text": "companies like government agencies",
    "start": "1012800",
    "end": "1015040"
  },
  {
    "text": "financial institutions and many other",
    "start": "1015040",
    "end": "1016720"
  },
  {
    "text": "regulated industries",
    "start": "1016720",
    "end": "1019920"
  },
  {
    "text": "this feature is intended for controlled",
    "start": "1019920",
    "end": "1022160"
  },
  {
    "text": "environments such as dr testing",
    "start": "1022160",
    "end": "1024798"
  },
  {
    "text": "scenarios operational maintenance and",
    "start": "1024799",
    "end": "1027038"
  },
  {
    "text": "other planned operational procedures",
    "start": "1027039",
    "end": "1030240"
  },
  {
    "text": "as an example say a financial",
    "start": "1030240",
    "end": "1032160"
  },
  {
    "text": "institution headquartered in new york",
    "start": "1032160",
    "end": "1034000"
  },
  {
    "text": "has branch offices located in san",
    "start": "1034000",
    "end": "1036000"
  },
  {
    "text": "francisco",
    "start": "1036000",
    "end": "1037199"
  },
  {
    "text": "in the uk and in europe",
    "start": "1037199",
    "end": "1040079"
  },
  {
    "text": "the organization's core business",
    "start": "1040079",
    "end": "1041918"
  },
  {
    "text": "applications use an aurora global",
    "start": "1041919",
    "end": "1043839"
  },
  {
    "text": "database",
    "start": "1043839",
    "end": "1045199"
  },
  {
    "text": "its primary cluster runs in the u.s east",
    "start": "1045199",
    "end": "1047839"
  },
  {
    "text": "region with secondary clusters running",
    "start": "1047839",
    "end": "1050240"
  },
  {
    "text": "in the u.s west and the eu west regions",
    "start": "1050240",
    "end": "1054400"
  },
  {
    "text": "every quarter it relocates the primary",
    "start": "1054400",
    "end": "1056720"
  },
  {
    "text": "cluster from the primary aws region to",
    "start": "1056720",
    "end": "1059360"
  },
  {
    "text": "the secondary region designated for that",
    "start": "1059360",
    "end": "1061840"
  },
  {
    "text": "rotation now not every organization",
    "start": "1061840",
    "end": "1064240"
  },
  {
    "text": "needs to rotate their aurora global",
    "start": "1064240",
    "end": "1066000"
  },
  {
    "text": "databases primary cluster on a regular",
    "start": "1066000",
    "end": "1067919"
  },
  {
    "text": "basis",
    "start": "1067919",
    "end": "1069120"
  },
  {
    "text": "however the ability to do so during an",
    "start": "1069120",
    "end": "1071679"
  },
  {
    "text": "audit by regulators is a key requirement",
    "start": "1071679",
    "end": "1074640"
  },
  {
    "text": "to meeting dr requirements for these",
    "start": "1074640",
    "end": "1076960"
  },
  {
    "text": "companies",
    "start": "1076960",
    "end": "1078240"
  },
  {
    "text": "so we recommend using manage plan",
    "start": "1078240",
    "end": "1080480"
  },
  {
    "text": "failover for such organization as a best",
    "start": "1080480",
    "end": "1083600"
  },
  {
    "text": "practice for dr this not only ensures",
    "start": "1083600",
    "end": "1086000"
  },
  {
    "text": "that your procedures are complete and",
    "start": "1086000",
    "end": "1087840"
  },
  {
    "text": "accurate but more importantly that staff",
    "start": "1087840",
    "end": "1090880"
  },
  {
    "text": "are trained to perform a dr failover",
    "start": "1090880",
    "end": "1093039"
  },
  {
    "text": "before it really happens",
    "start": "1093039",
    "end": "1096080"
  },
  {
    "start": "1096000",
    "end": "1096000"
  },
  {
    "text": "now let's see an example how this",
    "start": "1096080",
    "end": "1098000"
  },
  {
    "text": "happens in action",
    "start": "1098000",
    "end": "1099440"
  },
  {
    "text": "so we have a similar setup to the",
    "start": "1099440",
    "end": "1101600"
  },
  {
    "text": "previous example we have our",
    "start": "1101600",
    "end": "1103760"
  },
  {
    "text": "primary region in ohio and our secondary",
    "start": "1103760",
    "end": "1106080"
  },
  {
    "text": "regions in northern virginia and ireland",
    "start": "1106080",
    "end": "1108000"
  },
  {
    "text": "respectively",
    "start": "1108000",
    "end": "1109840"
  },
  {
    "text": "so in this example we will promote",
    "start": "1109840",
    "end": "1111919"
  },
  {
    "text": "northern virginia to primary which is",
    "start": "1111919",
    "end": "1113840"
  },
  {
    "text": "one of our secondary regions",
    "start": "1113840",
    "end": "1116000"
  },
  {
    "text": "so through the console or the api or the",
    "start": "1116000",
    "end": "1118720"
  },
  {
    "text": "sdk we click to promote northern",
    "start": "1118720",
    "end": "1121200"
  },
  {
    "text": "virginia first",
    "start": "1121200",
    "end": "1123760"
  },
  {
    "text": "what happens after that is ohio rights",
    "start": "1123760",
    "end": "1125919"
  },
  {
    "text": "are stopped",
    "start": "1125919",
    "end": "1127360"
  },
  {
    "text": "the secondary regions catches up so in",
    "start": "1127360",
    "end": "1129919"
  },
  {
    "text": "this case northern virginia and ireland",
    "start": "1129919",
    "end": "1131760"
  },
  {
    "text": "catch up",
    "start": "1131760",
    "end": "1133760"
  },
  {
    "text": "northern virginia becomes the new",
    "start": "1133760",
    "end": "1135600"
  },
  {
    "text": "primary",
    "start": "1135600",
    "end": "1137919"
  },
  {
    "text": "and hence the rights are now available",
    "start": "1137919",
    "end": "1139760"
  },
  {
    "text": "in northern virginia",
    "start": "1139760",
    "end": "1141919"
  },
  {
    "text": "finally point your application to the",
    "start": "1141919",
    "end": "1143760"
  },
  {
    "text": "new endpoint in northern virginia to in",
    "start": "1143760",
    "end": "1146160"
  },
  {
    "text": "your primary cluster and you're good to",
    "start": "1146160",
    "end": "1148000"
  },
  {
    "text": "go",
    "start": "1148000",
    "end": "1151000"
  },
  {
    "text": "so in this case there is",
    "start": "1151280",
    "end": "1153360"
  },
  {
    "text": "essentially no data loss because rights",
    "start": "1153360",
    "end": "1155840"
  },
  {
    "text": "are stopped until your new primary cache",
    "start": "1155840",
    "end": "1157760"
  },
  {
    "text": "is up the secondary regions are always",
    "start": "1157760",
    "end": "1160640"
  },
  {
    "text": "up to speed up to date on whatever data",
    "start": "1160640",
    "end": "1163440"
  },
  {
    "text": "was written to your primary region",
    "start": "1163440",
    "end": "1166320"
  },
  {
    "text": "and the rto is actually directly",
    "start": "1166320",
    "end": "1168160"
  },
  {
    "text": "proportional to your error global db",
    "start": "1168160",
    "end": "1170400"
  },
  {
    "text": "replication lag metric value which is",
    "start": "1170400",
    "end": "1172640"
  },
  {
    "text": "available in cloud watch for all the",
    "start": "1172640",
    "end": "1174799"
  },
  {
    "text": "secondaries",
    "start": "1174799",
    "end": "1176400"
  },
  {
    "text": "now let's take a look at our next use",
    "start": "1176400",
    "end": "1178400"
  },
  {
    "text": "case customers who need to recover",
    "start": "1178400",
    "end": "1181120"
  },
  {
    "text": "rapidly on region failure",
    "start": "1181120",
    "end": "1184400"
  },
  {
    "text": "on very rare occasions your",
    "start": "1184400",
    "end": "1186880"
  },
  {
    "start": "1185000",
    "end": "1185000"
  },
  {
    "text": "global database might experience an",
    "start": "1186880",
    "end": "1188559"
  },
  {
    "text": "unexpected outage in its primary aws",
    "start": "1188559",
    "end": "1191200"
  },
  {
    "text": "region",
    "start": "1191200",
    "end": "1192720"
  },
  {
    "text": "if this happens your primary aurora",
    "start": "1192720",
    "end": "1194799"
  },
  {
    "text": "database cluster and its writer node",
    "start": "1194799",
    "end": "1196720"
  },
  {
    "text": "aren't available and the replication",
    "start": "1196720",
    "end": "1198799"
  },
  {
    "text": "between the primary cluster and the",
    "start": "1198799",
    "end": "1200240"
  },
  {
    "text": "secondary seizures",
    "start": "1200240",
    "end": "1202640"
  },
  {
    "text": "to minimize downtime or rto and data",
    "start": "1202640",
    "end": "1205440"
  },
  {
    "text": "loss or rpo you can work quickly to",
    "start": "1205440",
    "end": "1208080"
  },
  {
    "text": "perform a cross region failover",
    "start": "1208080",
    "end": "1210400"
  },
  {
    "text": "and reconstruct your global database",
    "start": "1210400",
    "end": "1212799"
  },
  {
    "text": "topology",
    "start": "1212799",
    "end": "1214640"
  },
  {
    "text": "we recommend that you understand this",
    "start": "1214640",
    "end": "1216880"
  },
  {
    "text": "process before using it",
    "start": "1216880",
    "end": "1218960"
  },
  {
    "text": "so having a plan ready to quickly",
    "start": "1218960",
    "end": "1220960"
  },
  {
    "text": "proceed at the first sign of a",
    "start": "1220960",
    "end": "1222320"
  },
  {
    "text": "region-wide issue is the first step",
    "start": "1222320",
    "end": "1226799"
  },
  {
    "text": "be ready to identify the secondary",
    "start": "1226799",
    "end": "1228640"
  },
  {
    "text": "region with the least lag time use",
    "start": "1228640",
    "end": "1231440"
  },
  {
    "text": "amazon cloudwatch regularly to track lag",
    "start": "1231440",
    "end": "1233840"
  },
  {
    "text": "times for the secondary clusters",
    "start": "1233840",
    "end": "1235919"
  },
  {
    "text": "and make sure that application rights",
    "start": "1235919",
    "end": "1238000"
  },
  {
    "text": "are sent to the correct aurora database",
    "start": "1238000",
    "end": "1240400"
  },
  {
    "text": "cluster before",
    "start": "1240400",
    "end": "1242320"
  },
  {
    "text": "during and after making changes such as",
    "start": "1242320",
    "end": "1244559"
  },
  {
    "text": "these",
    "start": "1244559",
    "end": "1245440"
  },
  {
    "text": "to avoid data incurs inconsistencies",
    "start": "1245440",
    "end": "1248000"
  },
  {
    "text": "among the database clusters in the ura",
    "start": "1248000",
    "end": "1249760"
  },
  {
    "text": "global database",
    "start": "1249760",
    "end": "1251200"
  },
  {
    "text": "thereby avoiding split brain issues",
    "start": "1251200",
    "end": "1253840"
  },
  {
    "text": "now our next use case is for customers",
    "start": "1253840",
    "end": "1256480"
  },
  {
    "text": "who want to automate tasks on dr",
    "start": "1256480",
    "end": "1258799"
  },
  {
    "text": "failover to reduce rto",
    "start": "1258799",
    "end": "1263158"
  },
  {
    "start": "1262000",
    "end": "1262000"
  },
  {
    "text": "now building on the foundations from our",
    "start": "1263520",
    "end": "1265520"
  },
  {
    "text": "previous slides i wanted to point out a",
    "start": "1265520",
    "end": "1268480"
  },
  {
    "text": "few custom solutions that our team of",
    "start": "1268480",
    "end": "1270480"
  },
  {
    "text": "specialist solution architects have",
    "start": "1270480",
    "end": "1273120"
  },
  {
    "text": "built to solve some common customer",
    "start": "1273120",
    "end": "1275280"
  },
  {
    "text": "challenges",
    "start": "1275280",
    "end": "1276559"
  },
  {
    "text": "two of these are highlighted here",
    "start": "1276559",
    "end": "1278720"
  },
  {
    "text": "so",
    "start": "1278720",
    "end": "1280000"
  },
  {
    "text": "disaster recovery in itself is an",
    "start": "1280000",
    "end": "1282080"
  },
  {
    "text": "important part of resiliency strategy",
    "start": "1282080",
    "end": "1284640"
  },
  {
    "text": "and concerns",
    "start": "1284640",
    "end": "1285919"
  },
  {
    "text": "how a workload responds when a disaster",
    "start": "1285919",
    "end": "1288000"
  },
  {
    "text": "strikes",
    "start": "1288000",
    "end": "1289520"
  },
  {
    "text": "the most common pattern to have as a",
    "start": "1289520",
    "end": "1291919"
  },
  {
    "text": "disaster recovery solution in aws is to",
    "start": "1291919",
    "end": "1294640"
  },
  {
    "text": "build a multi-region application",
    "start": "1294640",
    "end": "1296480"
  },
  {
    "text": "architecture including a back-end data",
    "start": "1296480",
    "end": "1298880"
  },
  {
    "text": "store",
    "start": "1298880",
    "end": "1300320"
  },
  {
    "text": "cross-region failover for typical",
    "start": "1300320",
    "end": "1302720"
  },
  {
    "text": "online transaction processing databases",
    "start": "1302720",
    "end": "1305039"
  },
  {
    "text": "often requires a clear strategy",
    "start": "1305039",
    "end": "1307520"
  },
  {
    "text": "resources and manual actions related to",
    "start": "1307520",
    "end": "1309760"
  },
  {
    "text": "switching database endpoints",
    "start": "1309760",
    "end": "1312240"
  },
  {
    "text": "managing all of these tasks can be",
    "start": "1312240",
    "end": "1314080"
  },
  {
    "text": "challenging to the overall dr solution",
    "start": "1314080",
    "end": "1316960"
  },
  {
    "text": "and in the case of a real disaster the",
    "start": "1316960",
    "end": "1318880"
  },
  {
    "text": "aurora cluster in the secondary region",
    "start": "1318880",
    "end": "1321360"
  },
  {
    "text": "needs to be promoted to have these right",
    "start": "1321360",
    "end": "1323520"
  },
  {
    "text": "capabilities",
    "start": "1323520",
    "end": "1325120"
  },
  {
    "text": "in order to do that it needs to be",
    "start": "1325120",
    "end": "1326880"
  },
  {
    "text": "removed from the global database cluster",
    "start": "1326880",
    "end": "1329760"
  },
  {
    "text": "and the secondary regions cluster",
    "start": "1329760",
    "end": "1331600"
  },
  {
    "text": "becomes what we call as a standalone",
    "start": "1331600",
    "end": "1333760"
  },
  {
    "text": "cluster in that process",
    "start": "1333760",
    "end": "1336159"
  },
  {
    "text": "now as the secondary regions cluster",
    "start": "1336159",
    "end": "1338000"
  },
  {
    "text": "becomes available",
    "start": "1338000",
    "end": "1339360"
  },
  {
    "text": "we get new reader and writer endpoints",
    "start": "1339360",
    "end": "1342400"
  },
  {
    "text": "and these endpoints need to be changed",
    "start": "1342400",
    "end": "1344159"
  },
  {
    "text": "in the application configuration to",
    "start": "1344159",
    "end": "1345919"
  },
  {
    "text": "point to the correct database",
    "start": "1345919",
    "end": "1348480"
  },
  {
    "text": "all of these tasks can be error prone",
    "start": "1348480",
    "end": "1350799"
  },
  {
    "text": "and time consuming if done manually",
    "start": "1350799",
    "end": "1353919"
  },
  {
    "text": "so in both of these blog posts we",
    "start": "1353919",
    "end": "1356559"
  },
  {
    "text": "provide an approach for scripting your",
    "start": "1356559",
    "end": "1358640"
  },
  {
    "text": "error of failover tasks",
    "start": "1358640",
    "end": "1360480"
  },
  {
    "text": "and automating the process of managing",
    "start": "1360480",
    "end": "1362640"
  },
  {
    "text": "global database endpoints after a",
    "start": "1362640",
    "end": "1364400"
  },
  {
    "text": "failover",
    "start": "1364400",
    "end": "1365679"
  },
  {
    "text": "i would highly highly recommend going",
    "start": "1365679",
    "end": "1367600"
  },
  {
    "text": "through the links on your screen to",
    "start": "1367600",
    "end": "1369840"
  },
  {
    "text": "learn more about these custom solutions",
    "start": "1369840",
    "end": "1373679"
  },
  {
    "text": "finally our last use case is for",
    "start": "1373679",
    "end": "1376000"
  },
  {
    "text": "customers who want to automate",
    "start": "1376000",
    "end": "1378080"
  },
  {
    "text": "provisioning and failover for their",
    "start": "1378080",
    "end": "1380240"
  },
  {
    "text": "aurora global databases",
    "start": "1380240",
    "end": "1382480"
  },
  {
    "text": "now another common challenge shared by",
    "start": "1382480",
    "end": "1384480"
  },
  {
    "start": "1383000",
    "end": "1383000"
  },
  {
    "text": "our customers is that provisioning and",
    "start": "1384480",
    "end": "1386480"
  },
  {
    "text": "managing a multi-region infrastructure",
    "start": "1386480",
    "end": "1388559"
  },
  {
    "text": "by hand",
    "start": "1388559",
    "end": "1389679"
  },
  {
    "text": "is often time consuming error-prone and",
    "start": "1389679",
    "end": "1392480"
  },
  {
    "text": "can lead to unintended consequences upon",
    "start": "1392480",
    "end": "1394720"
  },
  {
    "text": "switching your primary region so",
    "start": "1394720",
    "end": "1396720"
  },
  {
    "text": "terraform by hashicorp is an aws partner",
    "start": "1396720",
    "end": "1400240"
  },
  {
    "text": "and they provide infrastructure as code",
    "start": "1400240",
    "end": "1403039"
  },
  {
    "text": "tools similar to aws cloud formation",
    "start": "1403039",
    "end": "1406159"
  },
  {
    "text": "that allow you to create update and",
    "start": "1406159",
    "end": "1408159"
  },
  {
    "text": "version your aws infrastructure",
    "start": "1408159",
    "end": "1410400"
  },
  {
    "text": "enterprises rely on terraform to create",
    "start": "1410400",
    "end": "1413520"
  },
  {
    "text": "and manage their cloud infrastructure in",
    "start": "1413520",
    "end": "1415440"
  },
  {
    "text": "a repeatable and predictable manner",
    "start": "1415440",
    "end": "1418720"
  },
  {
    "text": "it's pretty widely used among a lot of",
    "start": "1418720",
    "end": "1420880"
  },
  {
    "text": "our aws customers",
    "start": "1420880",
    "end": "1423600"
  },
  {
    "text": "now here at aws we have something called",
    "start": "1423600",
    "end": "1426159"
  },
  {
    "text": "quick starts which are basically",
    "start": "1426159",
    "end": "1427919"
  },
  {
    "text": "automated reference deployments built by",
    "start": "1427919",
    "end": "1430559"
  },
  {
    "text": "aws solutions architects and aws",
    "start": "1430559",
    "end": "1432559"
  },
  {
    "text": "partners",
    "start": "1432559",
    "end": "1433919"
  },
  {
    "text": "now amongst many other quick starts we",
    "start": "1433919",
    "end": "1436240"
  },
  {
    "text": "also have a quick start for amazon",
    "start": "1436240",
    "end": "1438000"
  },
  {
    "text": "aurora",
    "start": "1438000",
    "end": "1439120"
  },
  {
    "text": "to provision and manage error global",
    "start": "1439120",
    "end": "1441200"
  },
  {
    "text": "databases across multiple aws regions in",
    "start": "1441200",
    "end": "1444080"
  },
  {
    "text": "terraform",
    "start": "1444080",
    "end": "1445840"
  },
  {
    "text": "so again highly recommend going to the",
    "start": "1445840",
    "end": "1448240"
  },
  {
    "text": "link on your screen here to learn more",
    "start": "1448240",
    "end": "1450240"
  },
  {
    "text": "and deploy these solutions",
    "start": "1450240",
    "end": "1452720"
  },
  {
    "text": "finally to wrap up here are some",
    "start": "1452720",
    "end": "1455279"
  },
  {
    "start": "1453000",
    "end": "1453000"
  },
  {
    "text": "resources which i hope will be helpful",
    "start": "1455279",
    "end": "1458880"
  },
  {
    "text": "and we'll also share these in the",
    "start": "1458880",
    "end": "1460880"
  },
  {
    "text": "description box below to continue your",
    "start": "1460880",
    "end": "1462880"
  },
  {
    "text": "journey with amazon aurora global",
    "start": "1462880",
    "end": "1465120"
  },
  {
    "text": "databases",
    "start": "1465120",
    "end": "1467760"
  },
  {
    "text": "so that's all i had for you today",
    "start": "1469279",
    "end": "1471679"
  },
  {
    "text": "hope you enjoyed this video and do stay",
    "start": "1471679",
    "end": "1474720"
  },
  {
    "text": "tuned for the next one",
    "start": "1474720",
    "end": "1477039"
  },
  {
    "text": "thank you for listening and as always",
    "start": "1477039",
    "end": "1479840"
  },
  {
    "text": "happy cloud computing from all of us",
    "start": "1479840",
    "end": "1481919"
  },
  {
    "text": "here at aws",
    "start": "1481919",
    "end": "1485399"
  },
  {
    "text": "you",
    "start": "1488640",
    "end": "1490720"
  }
]