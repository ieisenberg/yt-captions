[
  {
    "text": "getting started with fine grained access",
    "start": "4080",
    "end": "6319"
  },
  {
    "text": "control for Amazon Dynamo",
    "start": "6319",
    "end": "8760"
  },
  {
    "text": "DB amazon Dynamo DB is a fast fully",
    "start": "8760",
    "end": "12320"
  },
  {
    "text": "managed NoSQL database service that",
    "start": "12320",
    "end": "14719"
  },
  {
    "text": "makes it simple and cost-effective to",
    "start": "14719",
    "end": "16640"
  },
  {
    "text": "store and retrieve any amount of data",
    "start": "16640",
    "end": "18640"
  },
  {
    "text": "and serve any level of request traffic",
    "start": "18640",
    "end": "21600"
  },
  {
    "text": "with DynamoB's fine grained access",
    "start": "21600",
    "end": "24240"
  },
  {
    "text": "control feature you can simplify your",
    "start": "24240",
    "end": "26560"
  },
  {
    "text": "application's user request authorization",
    "start": "26560",
    "end": "29679"
  },
  {
    "text": "fine- grained access control allows you",
    "start": "29679",
    "end": "31599"
  },
  {
    "text": "to rely on the database engine itself",
    "start": "31599",
    "end": "33920"
  },
  {
    "text": "not application logic to enforce access",
    "start": "33920",
    "end": "36399"
  },
  {
    "text": "control to particular database items to",
    "start": "36399",
    "end": "39040"
  },
  {
    "text": "particular attributes or",
    "start": "39040",
    "end": "41239"
  },
  {
    "text": "both in this video we will explain the",
    "start": "41239",
    "end": "44000"
  },
  {
    "text": "benefits of fine- grained access control",
    "start": "44000",
    "end": "46079"
  },
  {
    "text": "for Dynamo DB we'll present an overview",
    "start": "46079",
    "end": "48960"
  },
  {
    "text": "of the system and then demonstrate how",
    "start": "48960",
    "end": "50800"
  },
  {
    "text": "to set it up",
    "start": "50800",
    "end": "54000"
  },
  {
    "text": "here's a diagram of how access control",
    "start": "54000",
    "end": "56399"
  },
  {
    "text": "works in a mobile application which",
    "start": "56399",
    "end": "58320"
  },
  {
    "text": "stores its data in Dynamob but was",
    "start": "58320",
    "end": "60879"
  },
  {
    "text": "implemented without fine- grained access",
    "start": "60879",
    "end": "63320"
  },
  {
    "text": "control clients send data requests to a",
    "start": "63320",
    "end": "66320"
  },
  {
    "text": "middle tier proxy service typically",
    "start": "66320",
    "end": "68640"
  },
  {
    "text": "implemented in Amazon Elastic Compute",
    "start": "68640",
    "end": "70960"
  },
  {
    "text": "Cloud",
    "start": "70960",
    "end": "71799"
  },
  {
    "text": "instances elastic load balancers sit in",
    "start": "71799",
    "end": "74720"
  },
  {
    "text": "front of these instances to ensure high",
    "start": "74720",
    "end": "76799"
  },
  {
    "text": "availability the middle tier manages",
    "start": "76799",
    "end": "79439"
  },
  {
    "text": "access control for all client requests",
    "start": "79439",
    "end": "82400"
  },
  {
    "text": "developing this proxy adds to the burden",
    "start": "82400",
    "end": "84799"
  },
  {
    "text": "both of building a new application and",
    "start": "84799",
    "end": "86880"
  },
  {
    "text": "of maintaining and scaling",
    "start": "86880",
    "end": "90159"
  },
  {
    "text": "it now here's how access control works",
    "start": "90200",
    "end": "93040"
  },
  {
    "text": "in a similar application built using",
    "start": "93040",
    "end": "95200"
  },
  {
    "text": "fine grained access control after being",
    "start": "95200",
    "end": "98320"
  },
  {
    "text": "authenticated by an identity provider",
    "start": "98320",
    "end": "100720"
  },
  {
    "text": "each client makes requests directly of",
    "start": "100720",
    "end": "103479"
  },
  {
    "text": "Dynamob and fine- grain policies govern",
    "start": "103479",
    "end": "106320"
  },
  {
    "text": "whether each request is allowed or",
    "start": "106320",
    "end": "108360"
  },
  {
    "text": "denied fine- grained access control is",
    "start": "108360",
    "end": "111040"
  },
  {
    "text": "designed to allow you to keep users data",
    "start": "111040",
    "end": "113360"
  },
  {
    "text": "secure with significantly less",
    "start": "113360",
    "end": "115119"
  },
  {
    "text": "development overhead management overhead",
    "start": "115119",
    "end": "117520"
  },
  {
    "text": "and cost",
    "start": "117520",
    "end": "119680"
  },
  {
    "text": "fine grained access control for DynamoB",
    "start": "119680",
    "end": "122240"
  },
  {
    "text": "is integrated with AWS identity and",
    "start": "122240",
    "end": "125119"
  },
  {
    "text": "access management also called IM it is a",
    "start": "125119",
    "end": "128560"
  },
  {
    "text": "technology that allows customers to",
    "start": "128560",
    "end": "130560"
  },
  {
    "text": "securely control access to AWS services",
    "start": "130560",
    "end": "133280"
  },
  {
    "text": "and resources for their users im roles",
    "start": "133280",
    "end": "136879"
  },
  {
    "text": "specify sets of permissions for",
    "start": "136879",
    "end": "138879"
  },
  {
    "text": "authenticated users fine- grained access",
    "start": "138879",
    "end": "141920"
  },
  {
    "text": "control works by allowing your",
    "start": "141920",
    "end": "143520"
  },
  {
    "text": "applications to assume IM roles that",
    "start": "143520",
    "end": "146080"
  },
  {
    "text": "specify access to particular Dynamo DB",
    "start": "146080",
    "end": "148800"
  },
  {
    "text": "items and attributes or even to entire",
    "start": "148800",
    "end": "151640"
  },
  {
    "text": "tables fine-rained access control is",
    "start": "151640",
    "end": "154239"
  },
  {
    "text": "ideal for use in mobile applications",
    "start": "154239",
    "end": "156239"
  },
  {
    "text": "that use social identity",
    "start": "156239",
    "end": "158280"
  },
  {
    "text": "providers web identity federation allows",
    "start": "158280",
    "end": "161120"
  },
  {
    "text": "users to authenticate with public",
    "start": "161120",
    "end": "163040"
  },
  {
    "text": "identity providers such as login with",
    "start": "163040",
    "end": "165440"
  },
  {
    "text": "Amazon Facebook or Google",
    "start": "165440",
    "end": "168400"
  },
  {
    "text": "the combination of web identity",
    "start": "168400",
    "end": "170080"
  },
  {
    "text": "federation and fine-rained access",
    "start": "170080",
    "end": "172000"
  },
  {
    "text": "control can mean there is no longer a",
    "start": "172000",
    "end": "173920"
  },
  {
    "text": "need for proxy",
    "start": "173920",
    "end": "175319"
  },
  {
    "text": "servers use of web identity federation",
    "start": "175319",
    "end": "178160"
  },
  {
    "text": "is not required to benefit from fine-",
    "start": "178160",
    "end": "180319"
  },
  {
    "text": "grained access control application",
    "start": "180319",
    "end": "182720"
  },
  {
    "text": "authors may also implement fine- grained",
    "start": "182720",
    "end": "184720"
  },
  {
    "text": "access control policies using IM users",
    "start": "184720",
    "end": "187200"
  },
  {
    "text": "and groups",
    "start": "187200",
    "end": "190440"
  },
  {
    "text": "fine grained access control allows you",
    "start": "190560",
    "end": "192560"
  },
  {
    "text": "to define access permissions for",
    "start": "192560",
    "end": "194400"
  },
  {
    "text": "particular end users against particular",
    "start": "194400",
    "end": "196560"
  },
  {
    "text": "items that is rows of Dynamo DB",
    "start": "196560",
    "end": "199879"
  },
  {
    "text": "databases you can also define",
    "start": "199879",
    "end": "201920"
  },
  {
    "text": "permissions for users against particular",
    "start": "201920",
    "end": "204000"
  },
  {
    "text": "attributes that is fields across all",
    "start": "204000",
    "end": "206680"
  },
  {
    "text": "items these permissions specify which",
    "start": "206680",
    "end": "209519"
  },
  {
    "text": "API actions the authorized users can",
    "start": "209519",
    "end": "212080"
  },
  {
    "text": "perform against the data so for example",
    "start": "212080",
    "end": "214879"
  },
  {
    "text": "it is easy to implement readr and",
    "start": "214879",
    "end": "216959"
  },
  {
    "text": "readonly access you could even choose to",
    "start": "216959",
    "end": "219680"
  },
  {
    "text": "permit only specific",
    "start": "219680",
    "end": "222920"
  },
  {
    "text": "actions consider this example",
    "start": "222920",
    "end": "225120"
  },
  {
    "text": "application architecture built on web",
    "start": "225120",
    "end": "227680"
  },
  {
    "text": "identity federation and fine- grained",
    "start": "227680",
    "end": "229599"
  },
  {
    "text": "access control each user logs in and is",
    "start": "229599",
    "end": "232720"
  },
  {
    "text": "authenticated by the selected identity",
    "start": "232720",
    "end": "236120"
  },
  {
    "text": "provider next the application contacts",
    "start": "236120",
    "end": "238959"
  },
  {
    "text": "the AWS security token",
    "start": "238959",
    "end": "242040"
  },
  {
    "text": "service and requests credentials via web",
    "start": "242040",
    "end": "245360"
  },
  {
    "text": "identity federation sts grants temporary",
    "start": "245360",
    "end": "249040"
  },
  {
    "text": "security credentials that are tied to a",
    "start": "249040",
    "end": "251280"
  },
  {
    "text": "particular AWS identity and access",
    "start": "251280",
    "end": "253840"
  },
  {
    "text": "management role for this application we",
    "start": "253840",
    "end": "256639"
  },
  {
    "text": "have defined an IM role that allows",
    "start": "256639",
    "end": "258560"
  },
  {
    "text": "access only to the items and attributes",
    "start": "258560",
    "end": "260639"
  },
  {
    "text": "that authenticated users require and",
    "start": "260639",
    "end": "263120"
  },
  {
    "text": "only the API actions they",
    "start": "263120",
    "end": "265320"
  },
  {
    "text": "require now that the user is",
    "start": "265320",
    "end": "267360"
  },
  {
    "text": "authenticated and authorized each",
    "start": "267360",
    "end": "269440"
  },
  {
    "text": "subsequent Dynamob request is associated",
    "start": "269440",
    "end": "272160"
  },
  {
    "text": "with the temporary security credentials",
    "start": "272160",
    "end": "274240"
  },
  {
    "text": "associated with the IM role the Dynamo",
    "start": "274240",
    "end": "277199"
  },
  {
    "text": "DB service will accept or reject each",
    "start": "277199",
    "end": "279360"
  },
  {
    "text": "request based on the permissions",
    "start": "279360",
    "end": "281199"
  },
  {
    "text": "inherited from that role thus there is",
    "start": "281199",
    "end": "283759"
  },
  {
    "text": "no need for the application's developers",
    "start": "283759",
    "end": "285840"
  },
  {
    "text": "to maintain a proxy",
    "start": "285840",
    "end": "287560"
  },
  {
    "text": "layer here are the steps for employing",
    "start": "287560",
    "end": "290080"
  },
  {
    "text": "web identity federation and fine-rain",
    "start": "290080",
    "end": "292400"
  },
  {
    "text": "access control in an application first",
    "start": "292400",
    "end": "295440"
  },
  {
    "text": "if you have not already done so register",
    "start": "295440",
    "end": "297680"
  },
  {
    "text": "your application with an identity",
    "start": "297680",
    "end": "299560"
  },
  {
    "text": "provider the provider will give you a",
    "start": "299560",
    "end": "301919"
  },
  {
    "text": "unique application identifier string",
    "start": "301919",
    "end": "304880"
  },
  {
    "text": "next define an access policy for your",
    "start": "304880",
    "end": "307479"
  },
  {
    "text": "users determine what API actions",
    "start": "307479",
    "end": "310560"
  },
  {
    "text": "applications should perform on their",
    "start": "310560",
    "end": "312400"
  },
  {
    "text": "behalf and on what database items then",
    "start": "312400",
    "end": "315919"
  },
  {
    "text": "use the Dynamo DB policy wizard to",
    "start": "315919",
    "end": "318320"
  },
  {
    "text": "create a policy string that encapsulates",
    "start": "318320",
    "end": "320479"
  },
  {
    "text": "that policy this policy will incorporate",
    "start": "320479",
    "end": "323440"
  },
  {
    "text": "your application identifier string now",
    "start": "323440",
    "end": "326479"
  },
  {
    "text": "use the IM console to create a role that",
    "start": "326479",
    "end": "328960"
  },
  {
    "text": "utilizes this policy finally incorporate",
    "start": "328960",
    "end": "332400"
  },
  {
    "text": "code into your application that uses",
    "start": "332400",
    "end": "334400"
  },
  {
    "text": "these temporary security credentials",
    "start": "334400",
    "end": "336400"
  },
  {
    "text": "from STS to make signed calls to the",
    "start": "336400",
    "end": "339039"
  },
  {
    "text": "Dynamo DB",
    "start": "339039",
    "end": "340919"
  },
  {
    "text": "API let's see a demonstration of these",
    "start": "340919",
    "end": "343960"
  },
  {
    "text": "steps on the Dynamo DB console we click",
    "start": "343960",
    "end": "347759"
  },
  {
    "text": "access",
    "start": "347759",
    "end": "349720"
  },
  {
    "text": "control then we select our desired",
    "start": "349720",
    "end": "352560"
  },
  {
    "text": "identity provider",
    "start": "352560",
    "end": "356039"
  },
  {
    "text": "we click the API actions that this role",
    "start": "357280",
    "end": "359840"
  },
  {
    "text": "should",
    "start": "359840",
    "end": "362080"
  },
  {
    "text": "permit finally we select the database",
    "start": "365160",
    "end": "368240"
  },
  {
    "text": "attributes to which this role should",
    "start": "368240",
    "end": "370080"
  },
  {
    "text": "have",
    "start": "370080",
    "end": "372319"
  },
  {
    "text": "access we type the name of each",
    "start": "372680",
    "end": "375120"
  },
  {
    "text": "attribute and click",
    "start": "375120",
    "end": "378160"
  },
  {
    "text": "add and we repeat these steps for each",
    "start": "379319",
    "end": "382319"
  },
  {
    "text": "desired attribute",
    "start": "382319",
    "end": "385800"
  },
  {
    "text": "the next screen shows us the generated",
    "start": "389039",
    "end": "392440"
  },
  {
    "text": "policy clicking the link opens the IM RO",
    "start": "392440",
    "end": "395759"
  },
  {
    "text": "console in a new tab once there we click",
    "start": "395759",
    "end": "398960"
  },
  {
    "text": "to create a new",
    "start": "398960",
    "end": "401919"
  },
  {
    "text": "role this role will be for web identity",
    "start": "407319",
    "end": "410639"
  },
  {
    "text": "provider access",
    "start": "410639",
    "end": "414120"
  },
  {
    "text": "we choose the correct identity",
    "start": "417120",
    "end": "420880"
  },
  {
    "text": "provider and paste in our assigned",
    "start": "421479",
    "end": "424160"
  },
  {
    "text": "application",
    "start": "424160",
    "end": "426880"
  },
  {
    "text": "ID in the resulting RO trust policy",
    "start": "429560",
    "end": "433039"
  },
  {
    "text": "document we can confirm that our",
    "start": "433039",
    "end": "435360"
  },
  {
    "text": "application ID was entered correctly",
    "start": "435360",
    "end": "439960"
  },
  {
    "text": "now we select custom",
    "start": "444080",
    "end": "447599"
  },
  {
    "text": "policy enter a",
    "start": "450280",
    "end": "453919"
  },
  {
    "text": "name and paste in our fine grained",
    "start": "459560",
    "end": "462639"
  },
  {
    "text": "policy from the other tab",
    "start": "462639",
    "end": "466840"
  },
  {
    "text": "finally we click to create the RO and",
    "start": "475599",
    "end": "477759"
  },
  {
    "text": "it's",
    "start": "477759",
    "end": "479720"
  },
  {
    "text": "done let's view the ROS's summary to",
    "start": "479720",
    "end": "482879"
  },
  {
    "text": "extract its identifier",
    "start": "482879",
    "end": "486840"
  },
  {
    "text": "to map Dynamo DB requests to the RO",
    "start": "487280",
    "end": "490639"
  },
  {
    "text": "supply the RO ARN to the",
    "start": "490639",
    "end": "494319"
  },
  {
    "text": "API this concludes our video we have",
    "start": "497400",
    "end": "500479"
  },
  {
    "text": "seen that fine- grained access control",
    "start": "500479",
    "end": "502479"
  },
  {
    "text": "allows application developers to specify",
    "start": "502479",
    "end": "504879"
  },
  {
    "text": "policies for access to tables items and",
    "start": "504879",
    "end": "507360"
  },
  {
    "text": "attributes then rely on Dynamob itself",
    "start": "507360",
    "end": "510319"
  },
  {
    "text": "to enforce them fine grained access",
    "start": "510319",
    "end": "512719"
  },
  {
    "text": "control thus reduces the amount of work",
    "start": "512719",
    "end": "514719"
  },
  {
    "text": "for developing and maintaining an",
    "start": "514719",
    "end": "516399"
  },
  {
    "text": "application's authentication and access",
    "start": "516399",
    "end": "518640"
  },
  {
    "text": "control infrastructure with social login",
    "start": "518640",
    "end": "521360"
  },
  {
    "text": "provided through web identity federation",
    "start": "521360",
    "end": "523839"
  },
  {
    "text": "application developers can avoid the",
    "start": "523839",
    "end": "525760"
  },
  {
    "text": "need to build and run separate systems",
    "start": "525760",
    "end": "527760"
  },
  {
    "text": "for user login and access control thus",
    "start": "527760",
    "end": "530720"
  },
  {
    "text": "saving developer labor and",
    "start": "530720",
    "end": "532160"
  },
  {
    "text": "infrastructure cost",
    "start": "532160",
    "end": "535879"
  }
]