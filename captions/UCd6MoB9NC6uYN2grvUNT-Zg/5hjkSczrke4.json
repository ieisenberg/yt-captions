[
  {
    "text": "Welcome to 'This is My Architecture'. \nToday, I have here with me Ido from Mobileye.",
    "start": "7304",
    "end": "11297"
  },
  {
    "text": "Hi Ido.\nHi Boaz.",
    "start": "11297",
    "end": "12705"
  },
  {
    "text": "Ido, tell us a bit about Mobileye.",
    "start": "12705",
    "end": "14836"
  },
  {
    "text": "Mobileye is a world leader company\n in camera based driver assistance systems",
    "start": "14836",
    "end": "19158"
  },
  {
    "text": "with over 70 million\n Mobileyes inside vehicles around the world.",
    "start": "19158",
    "end": "23098"
  },
  {
    "text": "It is also a world leader company \nin autonomous driving systems.",
    "start": "23429",
    "end": "27172"
  },
  {
    "text": "In addition, Mobileye is providing \na full suit of data services,",
    "start": "27888",
    "end": "32044"
  },
  {
    "text": "using an award-winning roadmap \nin technology and vehicles.",
    "start": "32045",
    "end": "36352"
  },
  {
    "text": "And this is the team you're coming from.\n Tell us how you do that.",
    "start": "36353",
    "end": "39465"
  },
  {
    "text": "To do that, we collect anonymized data \nusing sensors and visual inspections from cars.",
    "start": "40000",
    "end": "45861"
  },
  {
    "text": " This data is being sent to a REST API\n in a different AWS account, ",
    "start": "46546",
    "end": "50902"
  },
  {
    "text": "and then stored into S3 for future usage.",
    "start": "50902",
    "end": "54041"
  },
  {
    "text": "Okay, so cars are driving around the world collecting data\n storing into an S3 bucket, then what?",
    "start": "54041",
    "end": "59235"
  },
  {
    "text": "For that purpose exactly, \nour team developed Dynamic REM.",
    "start": "59710",
    "end": "62459"
  },
  {
    "text": "Dynamic REM is a platform, \nwhich allows us to provide customers",
    "start": "62459",
    "end": "68392"
  },
  {
    "text": "with mobility intelligence and live events data.",
    "start": "68392",
    "end": "72158"
  },
  {
    "text": "It is composed of three main layers:\nthe process layer,",
    "start": "73259",
    "end": "76981"
  },
  {
    "text": "which is responsible for processing the data received \nfrom the cars, and then store it into the store layer. ",
    "start": "76981",
    "end": "82314"
  },
  {
    "text": "The store layer contains multiple technologies\n in order to support system different needs.",
    "start": "82621",
    "end": "86809"
  },
  {
    "text": "It is composed of S3, Elasticsearch and CockroachDB.",
    "start": "87478",
    "end": "90729"
  },
  {
    "text": "Then platform insights are exposed to customers\n using the consume layer.",
    "start": "90730",
    "end": "95473"
  },
  {
    "text": "Okay, where is the typical customer or the system?",
    "start": "95473",
    "end": "97824"
  },
  {
    "text": "So Dynamic REM has multiple customer types, for example:\n roads and cities, planners and operators.",
    "start": "97824",
    "end": "103377"
  },
  {
    "text": "So let's dive into the architecture. \nSo you collected the data,",
    "start": "104533",
    "end": "107269"
  },
  {
    "text": "move it to Dynamic REM, \nwhat do you do with this data?",
    "start": "107730",
    "end": "110233"
  },
  {
    "text": "So as I mentioned before, data is stored in S3, \nfrom there it is being pulled to SQS.",
    "start": "110621",
    "end": "115898"
  },
  {
    "text": "And then being processed by EKS workers, \nthose EKS workers ",
    "start": "116441",
    "end": "121021"
  },
  {
    "text": "actually scale automatically, \naccording to the relevant SQS queue size",
    "start": "121021",
    "end": "124974"
  },
  {
    "text": "and can scale up to 800% during the day.",
    "start": "124974",
    "end": "128302"
  },
  {
    "text": "At the next phase, we pre-process format, ",
    "start": "128302",
    "end": "133382"
  },
  {
    "text": "store the data in S3, and then send it \nto a set of algorithms",
    "start": "133382",
    "end": "138215"
  },
  {
    "text": "implemented by Step Functions \nexecuting multiple Lambda functions.",
    "start": "138215",
    "end": "142642"
  },
  {
    "text": "Can you give you an example for one of those functions?\n Yes, of course, Boaz.",
    "start": "143826",
    "end": "146718"
  },
  {
    "text": "So, one example for an algorithm \ncan be the extraction",
    "start": "146718",
    "end": "150037"
  },
  {
    "text": "of potential construction zones from vehicles. ",
    "start": "150037",
    "end": "152794"
  },
  {
    "text": "Okay, then what?",
    "start": "153557",
    "end": "155657"
  },
  {
    "text": "Then, the results are being exposed \nto the rest of the systems",
    "start": "155657",
    "end": "161556"
  },
  {
    "text": "components, for example, \na sophisticated clustering mechanism, ",
    "start": "161557",
    "end": "165438"
  },
  {
    "text": "which combines observations \nfrom different vehicles into clustered events.",
    "start": "165438",
    "end": "169331"
  },
  {
    "text": "Another example\n can be there are aggregation mechanism,",
    "start": "169954",
    "end": "173010"
  },
  {
    "text": "which aggregates data by time and road segments.",
    "start": "173010",
    "end": "178846"
  },
  {
    "text": "Cool, so you already collected some data, got some insights, \nwhat are you doing with these insights?",
    "start": "179432",
    "end": "183671"
  },
  {
    "text": "So, for example, if I'm a city planner, \nthe platform can provide me ",
    "start": "183671",
    "end": "187444"
  },
  {
    "text": "accurate hourly data \nregarding pedestrian and bicycle traffic,",
    "start": "187444",
    "end": "191761"
  },
  {
    "text": "which allows me to plan better roads and cities.",
    "start": "191761",
    "end": "194627"
  },
  {
    "text": "Okay, and how can I get this data from the system.",
    "start": "194627",
    "end": "197889"
  },
  {
    "text": "So after the data was calculated, ",
    "start": "198650",
    "end": "202532"
  },
  {
    "text": "we save it into Elasticsearch and CockroachDB. ",
    "start": "202532",
    "end": "205607"
  },
  {
    "text": "And the next phase, we serve this data\n to our customers using an EKS cluster.",
    "start": "206072",
    "end": "210531"
  },
  {
    "text": "This EKS cluster is serving a secured REST API ",
    "start": "213235",
    "end": "217093"
  },
  {
    "text": "and web application, which our users",
    "start": "217896",
    "end": "222144"
  },
  {
    "text": "are using to consume the data.",
    "start": "222145",
    "end": "224620"
  },
  {
    "text": "Okay, so I can actually get\n the insights from this.",
    "start": "224620",
    "end": "227803"
  },
  {
    "text": "I wonder how many events\n the system can process.",
    "start": "227803",
    "end": "230364"
  },
  {
    "text": "So today, we use between 100 to 800, EKS workers ",
    "start": "230365",
    "end": "235351"
  },
  {
    "text": " in order to process around \n10 million observations per day.",
    "start": "235351",
    "end": "238946"
  },
  {
    "text": "Okay,10 million observation per day doesn't sound much\n like you have 70 million cars driving all over the world,",
    "start": "238947",
    "end": "243256"
  },
  {
    "text": "the amount of data each car can produce. \nWhy is that?",
    "start": "243256",
    "end": "246292"
  },
  {
    "text": "That's an excellent question, Boaz, we actively limit\n the amount of data flowing into the system ",
    "start": "246292",
    "end": "250639"
  },
  {
    "text": "in order to control costs and allow a per use model.",
    "start": "251289",
    "end": "254596"
  },
  {
    "text": "Okay, so I guess this is obviously intentional. ",
    "start": "254596",
    "end": "257030"
  },
  {
    "text": "Okay, so let's talk about the evolution of the system. \nSo this is the current architecture,",
    "start": "257452",
    "end": "261190"
  },
  {
    "text": " I assume we did not start with this exact architecture, \nwalk us through the evolution of this architecture.",
    "start": "261190",
    "end": "265091"
  },
  {
    "text": "Sure, so first of all, we believe\n that evolution is a crucial step ",
    "start": "265091",
    "end": "268369"
  },
  {
    "text": "in building large scale systems.",
    "start": "268369",
    "end": "271919"
  },
  {
    "text": "We actually started with Spark\n streaming, EMR and Kafka.",
    "start": "271920",
    "end": "276200"
  },
  {
    "text": "None of them on the board. \nYeah. ",
    "start": "276200",
    "end": "278493"
  },
  {
    "text": "And the next phase, we switched to Lambda functions",
    "start": "278493",
    "end": "283040"
  },
  {
    "text": "in order to gain serverless, \nhighly available architecture. ",
    "start": "283040",
    "end": "287453"
  },
  {
    "text": "Okay.\nAt the next phase, we moved most of the Lambda",
    "start": "287453",
    "end": "290972"
  },
  {
    "text": "into EKS workers, \nbecause when a certain scale was reached",
    "start": "290972",
    "end": "295210"
  },
  {
    "text": "easy to compute on spots \nwas much more cost-effective.",
    "start": "295210",
    "end": "298022"
  },
  {
    "text": "That's a great point, so when you have a large scale, this is something you should consider. \nExactly.",
    "start": "298023",
    "end": "301288"
  },
  {
    "text": "I see a lot of different technologies in the process layer, ",
    "start": "301288",
    "end": "304255"
  },
  {
    "text": "you have Lambda functions, you have EKS,\nKubernetes in general, why is that?",
    "start": "304255",
    "end": "308500"
  },
  {
    "text": "So first, we believe the different solution requires\n different architecture and services.",
    "start": "309031",
    "end": "313474"
  },
  {
    "text": "And we're not afraid \nto combine those into a single platform. ",
    "start": "313474",
    "end": "316349"
  },
  {
    "text": "Our algorithm execution flow requires \nparallelism and flow management.",
    "start": "317305",
    "end": "322164"
  },
  {
    "text": "Step Functions is a service, \nwhich provides exactly that for us.",
    "start": "322719",
    "end": "326245"
  },
  {
    "text": "Yeah, makes a lot of sense. \nLast question regarding the evolution,",
    "start": "326245",
    "end": "328815"
  },
  {
    "text": "let's talk for a second about the store layer.\n So using a lot of different services,",
    "start": "328815",
    "end": "332429"
  },
  {
    "text": "S3, Elasticsearch, CockroachDB, \nwhich I never heard about and never used it before.",
    "start": "332429",
    "end": "336177"
  },
  {
    "text": "Why do you need so many?\nSo as in before evolution,",
    "start": "336763",
    "end": "339884"
  },
  {
    "text": "so we actually started with RDS",
    "start": "339884",
    "end": "343710"
  },
  {
    "text": "on RDS Postgres on top of AWS.",
    "start": "343710",
    "end": "346974"
  },
  {
    "text": "Then, due to scale and performance requirements,\n we switched to RIDB.",
    "start": "348108",
    "end": "352553"
  },
  {
    "text": "At the next phase, we chose Elasticsearch because we searched\n for a database providing document based database,",
    "start": "353028",
    "end": "358407"
  },
  {
    "text": "which allows self indexing, \nand it is a database which is cost-effective.",
    "start": "358909",
    "end": "362977"
  },
  {
    "text": "Okay, CockroachDB. \nSo recently, we have found out that Elasticsearch",
    "start": "363771",
    "end": "367217"
  },
  {
    "text": "is not the best solution \nfor conducting frequent updates. ",
    "start": "367217",
    "end": "370247"
  },
  {
    "text": "And we moved some of our components\n to use CockroachDB.",
    "start": "370247",
    "end": "374107"
  },
  {
    "text": "CockroachDB is a relational database, \nwhich can support frequent updates to tables.",
    "start": "374107",
    "end": "378994"
  },
  {
    "text": "We deployed CockroachDB in an EKS cluster,",
    "start": "379509",
    "end": "382637"
  },
  {
    "text": "which allows us to enjoy scalability, and availability.",
    "start": "382637",
    "end": "386731"
  },
  {
    "text": "Okay, and obviously, a lot of components, \na lot of moving parts,",
    "start": "387834",
    "end": "391555"
  },
  {
    "text": "trying to keep the same architecture \nusing EKS in a lot of places.",
    "start": "392711",
    "end": "395552"
  },
  {
    "text": "I see this is a live system. \nThis is a very evolving system.",
    "start": "396207",
    "end": "398599"
  },
  {
    "text": "I wonder what are the future plans\n for Dynamic REM.",
    "start": "398599",
    "end": "400728"
  },
  {
    "text": "So we have a long list of future plans,\n let's try to talk about two of them. ",
    "start": "400728",
    "end": "404452"
  },
  {
    "text": "First one is related to image processing. \nSo today, most of the image processing",
    "start": "406238",
    "end": "410227"
  },
  {
    "text": "and visual inspection actually happens in the car.",
    "start": "410227",
    "end": "413145"
  },
  {
    "text": "We would like to enable cloud image processing. \nTo do that, we're going to enable ",
    "start": "413145",
    "end": "417853"
  },
  {
    "text": "our pre developed image processing engine.",
    "start": "417853",
    "end": "420276"
  },
  {
    "text": "This engine allows us to process images\n in stream and gain the result.",
    "start": "420276",
    "end": "425800"
  },
  {
    "text": "We are going to deploy this engine on top of EKS, \nbut this time with GPU instances.",
    "start": "426157",
    "end": "431012"
  },
  {
    "text": "Yeah, the technology, great.\nYeah.",
    "start": "431012",
    "end": "433291"
  },
  {
    "text": "Another item in our to-do list\n is related to cost reduction.",
    "start": "433291",
    "end": "436882"
  },
  {
    "text": "So Dynamic REM platform is going to grow, \nand data flow will keep growing.",
    "start": "437359",
    "end": "441734"
  },
  {
    "text": "In order to do that, we must make sure that we maintain \na solid and reasonable price level request for vehicles.",
    "start": "444126",
    "end": "449592"
  },
  {
    "text": "Absolutely and there are so many \nso this is absolutely crucial.",
    "start": "449592",
    "end": "453282"
  },
  {
    "text": "Ido, thank you very much for sharing. \nThank you Boaz.",
    "start": "453282",
    "end": "455887"
  },
  {
    "text": "And thank you for watching\n'This is My Architecture'.",
    "start": "455887",
    "end": "458410"
  }
]