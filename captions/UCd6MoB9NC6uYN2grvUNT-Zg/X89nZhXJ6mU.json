[
  {
    "start": "0",
    "end": "105000"
  },
  {
    "text": "asking your questions there'll be uh answers given to you throughout as well by our team at the end of the session",
    "start": "14679",
    "end": "19880"
  },
  {
    "text": "there'll be a question and answer session where I'll be answering some of the questions as well I'll be pulling some of those out also I'd like to",
    "start": "19880",
    "end": "26279"
  },
  {
    "text": "remind you that at the end of the webinar in your web browser there'll be a popup it's not spam it's a feedback form and",
    "start": "26279",
    "end": "32758"
  },
  {
    "text": "if you complete that feedback form we'd be happy to give you a US $25 AWS credit for anyone who completes",
    "start": "32759",
    "end": "39800"
  },
  {
    "text": "that form so that's a great way to get uh to get going and get started so with that let's start our topic so today's",
    "start": "39800",
    "end": "46680"
  },
  {
    "text": "topic is designing for failure now there's a bit of a premise that we should share firstly which is",
    "start": "46680",
    "end": "52480"
  },
  {
    "text": "that when you think about it everything fails all the time and uh CTO ver vogle",
    "start": "52480",
    "end": "59239"
  },
  {
    "text": "said this uh years ago now and he's very correct is if you look at any large or even small scale operation there'll be",
    "start": "59239",
    "end": "64838"
  },
  {
    "text": "components that fail it could be a hard drive it could be a server it could be an entire network segment there are many",
    "start": "64839",
    "end": "71680"
  },
  {
    "text": "and varied ways in which things can fail and the challenges is that when that failure occurs we uh we often get",
    "start": "71680",
    "end": "78040"
  },
  {
    "text": "asked questions and uh the first question is is asked is why didn't you design for it uh your boss may ask you",
    "start": "78040",
    "end": "84880"
  },
  {
    "text": "this question your investors your customers when they can't access the particular service that they want all",
    "start": "84880",
    "end": "89920"
  },
  {
    "text": "ask you these questions and so this is why the rule of design for failure and nothing will fail comes into play and",
    "start": "89920",
    "end": "97079"
  },
  {
    "text": "really it changes the way that as an architect and a software designer you think about infrastructure you think",
    "start": "97079",
    "end": "102680"
  },
  {
    "text": "about it you think about design so a bit of an agenda for today's session we'll be talking about the need",
    "start": "102680",
    "end": "109479"
  },
  {
    "start": "105000",
    "end": "296000"
  },
  {
    "text": "to use multiple availability zones and what they are talk about maintaining your application state in a highly",
    "start": "109479",
    "end": "115479"
  },
  {
    "text": "available way I'll share with you some design principles about design for failure we'll talk about how you do",
    "start": "115479",
    "end": "121799"
  },
  {
    "text": "recover from failures when they become significant and also some testing elements as",
    "start": "121799",
    "end": "127440"
  },
  {
    "text": "well so let's start with availability zones so a bit of a refresher the way",
    "start": "127440",
    "end": "134280"
  },
  {
    "text": "Amazon web services is architected is that you have a choice of a number of global regions each of these regions",
    "start": "134280",
    "end": "140599"
  },
  {
    "text": "operate independently so as a user you get to choose where you locate your compute where you locate your storage",
    "start": "140599",
    "end": "146760"
  },
  {
    "text": "how you do things and every command has a parameter which is the region parameter and that specifies where that",
    "start": "146760",
    "end": "152120"
  },
  {
    "text": "operation takes place the nice thing is that everything works the same in all the different regions so your skills are",
    "start": "152120",
    "end": "157480"
  },
  {
    "text": "very portable you can deploy your application globally if you want but it also gives you a great deal of control",
    "start": "157480",
    "end": "162560"
  },
  {
    "text": "around localization so as you can see there in the ape region we have uh obviously Sydney we have Singapore we",
    "start": "162560",
    "end": "168200"
  },
  {
    "text": "have Tokyo as well as our regions around here now within each region there are",
    "start": "168200",
    "end": "173599"
  },
  {
    "text": "two or more availability zones an availability zone is a",
    "start": "173599",
    "end": "178920"
  },
  {
    "text": "geographically separate cluster of data centers it has its own set of power",
    "start": "178920",
    "end": "184040"
  },
  {
    "text": "feeds its own network connectivity uh it's in a separate physically separate location they're located in lowrisk",
    "start": "184040",
    "end": "190400"
  },
  {
    "text": "areas as you would imagine and they're interconnected with low latency Network links so what this means is that",
    "start": "190400",
    "end": "197280"
  },
  {
    "text": "conceptually you have really access to multiple data centers in the if you think about it from a conventional",
    "start": "197280",
    "end": "202480"
  },
  {
    "text": "perspective where you can deploy your resources this physical separation is very important because it allows you to",
    "start": "202480",
    "end": "209400"
  },
  {
    "text": "Define failure domains it means that you can deploy your application across multiple availability zones and should",
    "start": "209400",
    "end": "215799"
  },
  {
    "text": "an availability Zone become unavailable for some reason your application if it's correctly architected will still",
    "start": "215799",
    "end": "223560"
  },
  {
    "text": "function now the good news is is that you don't have to uh architect everything to use cross availability",
    "start": "223560",
    "end": "229080"
  },
  {
    "text": "zones many of the AWS Services already do this for you so you can see on the left a sample of some of those ones that",
    "start": "229080",
    "end": "235760"
  },
  {
    "text": "already by default span AC cross availability zones so for example the simple storage service when you store an",
    "start": "235760",
    "end": "241920"
  },
  {
    "text": "object in S3 you point to a simple endpoint and do the request to store that object that object will be",
    "start": "241920",
    "end": "248400"
  },
  {
    "text": "replicated across multiple nodes across multiple availability zones within the region for you this will happen behind",
    "start": "248400",
    "end": "255200"
  },
  {
    "text": "the scenes you don't have to manage it you don't need to worry about it however there are components where you do need",
    "start": "255200",
    "end": "260519"
  },
  {
    "text": "to think about it so for example with the ec2 the elastic compute Cloud you choose where your uh compute instances",
    "start": "260519",
    "end": "267240"
  },
  {
    "text": "are deployed so if you're designing a a fault tolerant architecture you'd want",
    "start": "267240",
    "end": "272600"
  },
  {
    "text": "to evenly deploy your ec2 instances across multiple availability zones now",
    "start": "272600",
    "end": "277800"
  },
  {
    "text": "you can use tools like autoscale to make this happen on a policy basis and happen",
    "start": "277800",
    "end": "283479"
  },
  {
    "text": "automatically similarly things like virtual private Cloud you need to Define them to span the multiple availability",
    "start": "283479",
    "end": "289880"
  },
  {
    "text": "zones to provide you with that resilience so a foundational concept",
    "start": "289880",
    "end": "296160"
  },
  {
    "start": "296000",
    "end": "664000"
  },
  {
    "text": "there now what about state state is usually a single point of",
    "start": "296160",
    "end": "301320"
  },
  {
    "text": "failure now a quick definition state is really about what your application is doing at the time when it's interacting",
    "start": "301320",
    "end": "307919"
  },
  {
    "text": "with a particular user so it could be tracking where um a particular person is",
    "start": "307919",
    "end": "313039"
  },
  {
    "text": "up to in a workflow it could be what information they vented on a particular website Etc a variety of uses for State",
    "start": "313039",
    "end": "321160"
  },
  {
    "text": "and State typically becomes a problem because it has to reside somewhere and so we have to protect it very carefully",
    "start": "321160",
    "end": "327280"
  },
  {
    "text": "now in a simple case you can store some cookies a browser more often than not you'll have some sort of session",
    "start": "327280",
    "end": "332880"
  },
  {
    "text": "database which stores information for a period of time you may have a memory resident session manager so this may be",
    "start": "332880",
    "end": "339759"
  },
  {
    "text": "instead of or in combination with the session database or you may even have a",
    "start": "339759",
    "end": "345039"
  },
  {
    "text": "framework provided session Handler so many uh Frameworks build in the session handling capability and then store it",
    "start": "345039",
    "end": "353800"
  },
  {
    "text": "somewhere so the someware is the important consideration firstly this store of State needs to be performant",
    "start": "353800",
    "end": "359400"
  },
  {
    "text": "because because obviously every user is going to be interacting with this component it needs to be scalable",
    "start": "359400",
    "end": "364880"
  },
  {
    "text": "because we don't want the store of state to become the choke point for the application and it needs to be reliable",
    "start": "364880",
    "end": "372199"
  },
  {
    "text": "because if our store of State goes away then obviously application will cease to function irrespective of those other",
    "start": "372199",
    "end": "379599"
  },
  {
    "text": "components so what do you build your state component on well the answer is",
    "start": "380280",
    "end": "385520"
  },
  {
    "text": "you want to choose as highly available Service as possible that will allow you to have",
    "start": "385520",
    "end": "390919"
  },
  {
    "text": "increased reliability and very quick recoverability so we're going to walk through three options these are not the",
    "start": "390919",
    "end": "397120"
  },
  {
    "text": "only options they just some fundamental options that you can think about one is elasticache one is Dynamo DB and one is",
    "start": "397120",
    "end": "405080"
  },
  {
    "text": "Amazon IDs with multiple a so what is",
    "start": "405080",
    "end": "410319"
  },
  {
    "text": "elasticache elasticache makes it very easy for you to deploy in memory cache in the cloud and essentially this is MC",
    "start": "410319",
    "end": "417199"
  },
  {
    "text": "D which is a very common open source platform form for storing key value pairs elastic C to create these clusters",
    "start": "417199",
    "end": "424160"
  },
  {
    "text": "of nodes in a very automated fashion it means you get very fast response time when you're quering that c and it also",
    "start": "424160",
    "end": "431759"
  },
  {
    "text": "handles some of the undifferentiated heavy lifting of replacing nodes naming them Etc but the thing to remember with",
    "start": "431759",
    "end": "437240"
  },
  {
    "text": "elastic hash is it is an inmemory database so it is not persistent anywhere so there are a number of",
    "start": "437240",
    "end": "443560"
  },
  {
    "text": "strategies you can use in this case you could create multiple elasticache clusters in multiple availability zones",
    "start": "443560",
    "end": "449720"
  },
  {
    "text": "and when you're updating your cach you could update both locations in the cache that way in the event of a failure of",
    "start": "449720",
    "end": "455199"
  },
  {
    "text": "one side of the cach the other side of the cach still exist or you could choose to have elastic C simply as a pure",
    "start": "455199",
    "end": "461199"
  },
  {
    "text": "caching layer in between a more persistent layer again a number of options there but certainly something to",
    "start": "461199",
    "end": "466440"
  },
  {
    "text": "think about depending on the use case a second option is Dynamo DB a",
    "start": "466440",
    "end": "473000"
  },
  {
    "text": "Dynamo DB is one of our fastest growing services and it's basically a managed no SQL database which means that these G",
    "start": "473000",
    "end": "479800"
  },
  {
    "text": "model is very straightforward and very simple it's very very performant so it's built on solid state drives which means",
    "start": "479800",
    "end": "486560"
  },
  {
    "text": "it's very reliable from a performance perspective we get single digit really second latencies you also have the",
    "start": "486560",
    "end": "492280"
  },
  {
    "text": "ability to dial in the amount of provision throughput you'd like for your database so you can specify how many",
    "start": "492280",
    "end": "497960"
  },
  {
    "text": "reads how many rights you want it to cater for and it will reshard the database in the background to cater for",
    "start": "497960",
    "end": "503240"
  },
  {
    "text": "this any of you who have worked in highly scaled environments will know that this sharting and scaling could be",
    "start": "503240",
    "end": "509159"
  },
  {
    "text": "quite a challenge in many instances you have unlimited storage you",
    "start": "509159",
    "end": "514640"
  },
  {
    "text": "have no downtime you have a highly available system which are very good features for a store of State",
    "start": "514640",
    "end": "520880"
  },
  {
    "text": "interestingly enough if you uh you're a user of asp.net um that actually has a",
    "start": "520880",
    "end": "525959"
  },
  {
    "text": "plugin directly into Dynam DB so you can use it as the session store for that",
    "start": "525959",
    "end": "531160"
  },
  {
    "text": "particular Microsoft framework another option if you're more",
    "start": "531160",
    "end": "537160"
  },
  {
    "text": "familiar with relational databases is use the relational database service this gives you a managed endpoint to store a",
    "start": "537160",
    "end": "544240"
  },
  {
    "text": "variety of database engines including Oracle myl and SQL Server it's very very easy to deploy",
    "start": "544240",
    "end": "552240"
  },
  {
    "text": "simple to operate at scale up it's very reliable and very cost- effective in fact it's one of the most popular services that my customers have because",
    "start": "552240",
    "end": "558640"
  },
  {
    "text": "it just makes life so much easier when it comes to creating a database now obviously this database",
    "start": "558640",
    "end": "564519"
  },
  {
    "text": "needs to be resilient if this is where we're going to have some sort of State stored so we have the option to create",
    "start": "564519",
    "end": "570600"
  },
  {
    "text": "multiple azs and I'll talk about that more in a moment we also take place automated backups this means the backups",
    "start": "570600",
    "end": "577880"
  },
  {
    "text": "can take place and allow us to recover up to anything including the last five minutes of data automatically we can",
    "start": "577880",
    "end": "584320"
  },
  {
    "text": "also maintain up to 35 days of backups automatically and unlimited length of time backups as we so choose all St on",
    "start": "584320",
    "end": "591440"
  },
  {
    "text": "S3 the other nice thing is that we can easily replicate the infrastructure so rebuilding a database from a snapshot is",
    "start": "591440",
    "end": "597399"
  },
  {
    "text": "Trivial as poin and click rather than having to do an extended installation",
    "start": "597399",
    "end": "603600"
  },
  {
    "text": "process again if we're talking about a highly available and fault tolerant design we would want more than one",
    "start": "603600",
    "end": "610240"
  },
  {
    "text": "instance of the database so with RDS when you're using MySQL or Oracle with just one click you",
    "start": "610240",
    "end": "616720"
  },
  {
    "text": "can have a secondary node being synchronously replicated to in an alternate availability Zone the failover",
    "start": "616720",
    "end": "623680"
  },
  {
    "text": "is handled automatically for you and you could even in the uh myql perspective promote your replica to test the",
    "start": "623680",
    "end": "630160"
  },
  {
    "text": "failover process as",
    "start": "630160",
    "end": "633279"
  },
  {
    "text": "well so an example of a customer who has to deal with large uh workloads and who",
    "start": "635440",
    "end": "641200"
  },
  {
    "text": "has to deal with a very strong audience wanting to watch things in real time is vone which is an Australian Telco",
    "start": "641200",
    "end": "647320"
  },
  {
    "text": "provider who streamed a cricket during the summer and uh they're able to stream",
    "start": "647320",
    "end": "652480"
  },
  {
    "text": "over 10,000 simultaneous customers for their streaming",
    "start": "652480",
    "end": "657639"
  },
  {
    "text": "services and what this is provided to them is a very scalable robust and easy",
    "start": "657639",
    "end": "663519"
  },
  {
    "text": "to deploy application for what is a very elastic use",
    "start": "663519",
    "end": "669399"
  },
  {
    "start": "664000",
    "end": "1003000"
  },
  {
    "text": "case so what about some design principles well there a number that we can think about now one of the things to",
    "start": "669800",
    "end": "676320"
  },
  {
    "text": "think about is firstly separation of components and making them more granular so certainly those session stores that",
    "start": "676320",
    "end": "681639"
  },
  {
    "text": "we spoke about before could be broken up into multiple shed copies thereof so you",
    "start": "681639",
    "end": "687519"
  },
  {
    "text": "can have multiple copies you could break them up across multiple pieces of Hardware you can again reduce the risk",
    "start": "687519",
    "end": "692920"
  },
  {
    "text": "of failure for any particular component but there are some others that I'd like to share with you as well and the list is really endless but these are some",
    "start": "692920",
    "end": "700000"
  },
  {
    "text": "fundamentals that really need to be well understood the first is automation the",
    "start": "700000",
    "end": "705120"
  },
  {
    "text": "second is a concept of loose coupling and the third is the creation of what are called self-healing systems so let's",
    "start": "705120",
    "end": "711760"
  },
  {
    "text": "walk through those one of the benefits of working with AWS is you have complete",
    "start": "711760",
    "end": "718040"
  },
  {
    "text": "programmability of the platform everything is exposed via an",
    "start": "718040",
    "end": "724120"
  },
  {
    "text": "application programming interface an API which means that doing something is simply a web service call away and this",
    "start": "724120",
    "end": "731079"
  },
  {
    "text": "could be wrapped up in a software development kit it could be a command line call it could be a gooey interaction but fundamentally underneath",
    "start": "731079",
    "end": "738440"
  },
  {
    "text": "everything is driven through the API which means that you can automate all of those steps human beings need not be",
    "start": "738440",
    "end": "745639"
  },
  {
    "text": "involved now we provide a number of different tools that suit different purposes in this case one is called",
    "start": "745639",
    "end": "751600"
  },
  {
    "text": "cloud formation which allows you to automatically build entire stacks of an application be it the load Balan of the",
    "start": "751600",
    "end": "758480"
  },
  {
    "text": "web servers Autos scal groups database servers application servers security groups etc etc etc elastic Beanstalk",
    "start": "758480",
    "end": "766000"
  },
  {
    "text": "which allows you to automatically deploy things like net Ruby Java python node.js",
    "start": "766000",
    "end": "772399"
  },
  {
    "text": "Etc to a pre-built platform for you so that you don't have to worry about how to build a Auto scaled highly resilient",
    "start": "772399",
    "end": "781040"
  },
  {
    "text": "application and then there's opsworks which focuses more on the continuous deployment side of things of rolling code out across multiple layers of an",
    "start": "781040",
    "end": "789120"
  },
  {
    "text": "application but the key with automation is it means faster recovery from failure and tolerance and expectation of",
    "start": "789120",
    "end": "797399"
  },
  {
    "text": "failure consider for a moment a set of web servers and this set of web servers",
    "start": "797399",
    "end": "802639"
  },
  {
    "text": "it's position behind a load balancer if we have sufficient automation whereby when an Autos scale",
    "start": "802639",
    "end": "809279"
  },
  {
    "text": "event detects that a Lo a node has failed in that web server Farm the node itself can spin itself up a brand new",
    "start": "809279",
    "end": "815399"
  },
  {
    "text": "one load any source code and packages that are required load the configuration",
    "start": "815399",
    "end": "820440"
  },
  {
    "text": "register itself with the load balancer and bring it into service without anyone being involved that creates a very failure",
    "start": "820440",
    "end": "827760"
  },
  {
    "text": "tolerant environment it means that as an administrator or a developer you get to sleep soundly at night knowing that your",
    "start": "827760",
    "end": "833360"
  },
  {
    "text": "website will still be working because things are taken care of on a policy basis automatically you should not need",
    "start": "833360",
    "end": "839560"
  },
  {
    "text": "human beings to implement software to get new systems up and running this should all be happening in a kind of a",
    "start": "839560",
    "end": "844720"
  },
  {
    "text": "bootstrapping Approach at startup now loose coupling is another",
    "start": "844720",
    "end": "851519"
  },
  {
    "text": "very important concept it basically allows you to firewall or protect one component from another by decoupling",
    "start": "851519",
    "end": "858440"
  },
  {
    "text": "these components many people start with very tightly coupled applications where one thing calls another component in",
    "start": "858440",
    "end": "865040"
  },
  {
    "text": "real time it has to receive a response it has to service it in a particular time frame or things tend to break up",
    "start": "865040",
    "end": "870839"
  },
  {
    "text": "the chain loose coupling turns this on its head and says each component is an",
    "start": "870839",
    "end": "876440"
  },
  {
    "text": "individual in discrete service oriented provision that gets called with a",
    "start": "876440",
    "end": "881920"
  },
  {
    "text": "well-known interface and will will return a well-known response but it may",
    "start": "881920",
    "end": "887320"
  },
  {
    "text": "not do it in real time so what's an example of this an",
    "start": "887320",
    "end": "892880"
  },
  {
    "text": "example of this is using the simple queuing service simple queuing service is a reliable very scalable posted queue",
    "start": "892880",
    "end": "899560"
  },
  {
    "text": "for storing messages so it is persistent when you write to the que it gets stored",
    "start": "899560",
    "end": "905079"
  },
  {
    "text": "in multiple places for you spread across those availability zones as we spoke about before and then can be pulled from",
    "start": "905079",
    "end": "911160"
  },
  {
    "text": "on demand so we could have a situation where we choose to have a receive queue a trans code queue and a notify queue",
    "start": "911160",
    "end": "918399"
  },
  {
    "text": "where each of these processes are separate so let's say we have someone uploading a movie they upload the movie",
    "start": "918399",
    "end": "924800"
  },
  {
    "text": "and we now place a message on the receive queue saying hey we've just got a movie it's stored in this particular",
    "start": "924800",
    "end": "930000"
  },
  {
    "text": "location then we perform any activity want to do there and then say okay it's ready to be transcoded we put a",
    "start": "930000",
    "end": "936079"
  },
  {
    "text": "notification on the transcode CU something is listening to the transcode CU and will perform the transcoding when",
    "start": "936079",
    "end": "943360"
  },
  {
    "text": "it's required excuse me now one of the benefits you have here is you may choose to say I don't want to perform all the",
    "start": "943360",
    "end": "950160"
  },
  {
    "text": "traffic all transactions uh on as a needed basis I'll do it on a periodic basis when my Q is full enough for what",
    "start": "950160",
    "end": "957160"
  },
  {
    "text": "I need to do verely if there's an issue with one of the components maybe your transcoder is",
    "start": "957160",
    "end": "962720"
  },
  {
    "text": "failed or is not working for some reason or is undergoing an upgrade you can buffer the traffic that's coming to that",
    "start": "962720",
    "end": "968079"
  },
  {
    "text": "transcoder in the queue at such time as you have that service up and running again the queue will feed the work",
    "start": "968079",
    "end": "974639"
  },
  {
    "text": "through that transcoder again in this case at the end of our process we notify our customer that",
    "start": "974639",
    "end": "980839"
  },
  {
    "text": "things are ready as well now we can get far more sophisticated if we so",
    "start": "980839",
    "end": "987399"
  },
  {
    "text": "choose using the simple workflow service we can create very uh intricate rules",
    "start": "987399",
    "end": "993440"
  },
  {
    "text": "around the overall process we want to go through so in this case we're receiving our video we're checking that the length",
    "start": "993440",
    "end": "999920"
  },
  {
    "text": "is appropriate we're checking that it's not spam we're transcoding then we're publishing so we're doing some more",
    "start": "999920",
    "end": "1005399"
  },
  {
    "start": "1003000",
    "end": "1214000"
  },
  {
    "text": "intricate steps some more complicated steps as we",
    "start": "1005399",
    "end": "1010319"
  },
  {
    "text": "go what about selfhealing so this is where we combine a number of components",
    "start": "1012759",
    "end": "1018160"
  },
  {
    "text": "we combine the con of realtime monitoring of bootstrapping our application so making it start itself",
    "start": "1018160",
    "end": "1024760"
  },
  {
    "text": "and autoscaling to create a system that s heal so the concept of bootstrapping is",
    "start": "1024760",
    "end": "1032240"
  },
  {
    "text": "all about a node being able to self-identify at startup you can say what am I and what should my role be",
    "start": "1032240",
    "end": "1039720"
  },
  {
    "text": "what software needs to be installed onto myself what configuration should I do autoscaling leverages that capability",
    "start": "1039720",
    "end": "1047400"
  },
  {
    "text": "by saying I can set policies around a particular tier of my application typically the web tier or the",
    "start": "1047400",
    "end": "1053200"
  },
  {
    "text": "application tier and I say I want to run a certain number of nodes within that",
    "start": "1053200",
    "end": "1058320"
  },
  {
    "text": "tier at any one time and based on prevailing conditions I may want to expand the capacity of",
    "start": "1058320",
    "end": "1064280"
  },
  {
    "text": "that tier or reduce the capacity of that tier so it could be when I'm experiencing heavy CPU utilization or it",
    "start": "1064280",
    "end": "1070559"
  },
  {
    "text": "could be when I'm experiencing heavy Network load conversely could be time based could be I'm going to be running a",
    "start": "1070559",
    "end": "1075760"
  },
  {
    "text": "marketing campaign it starts at 7 p.m. tonight I need to triple the size of my web Farm autoscaling will do that",
    "start": "1075760",
    "end": "1081919"
  },
  {
    "text": "automatically by initiating the startup of a number of nodes if those nodes can bootstrap themselves suddenly you have a",
    "start": "1081919",
    "end": "1089559"
  },
  {
    "text": "very effective set of compute resource that can tolerate high workloads and failure of nodes as well because just",
    "start": "1089559",
    "end": "1096520"
  },
  {
    "text": "like we can grow and Shrink we can maintain a steady state so let's say we have a web farm with four nodes and one",
    "start": "1096520",
    "end": "1103039"
  },
  {
    "text": "node fails the rule says You must have four nodes so Auto scaling will say I need to replace the failed node",
    "start": "1103039",
    "end": "1108799"
  },
  {
    "text": "automatically and continue trying to do that until such time as things are up and running",
    "start": "1108799",
    "end": "1114320"
  },
  {
    "text": "again so let's have a look how this looks here's our application we have four web servers behind a load balancer",
    "start": "1114320",
    "end": "1120799"
  },
  {
    "text": "they are belonging to an autoscout group if a particular node fails Autos scaling will automatically",
    "start": "1120799",
    "end": "1128200"
  },
  {
    "text": "start up a replica node bring it into service and register",
    "start": "1128200",
    "end": "1133240"
  },
  {
    "text": "it with the elastic load balancer the process for this typically takes a few minutes to depending on the",
    "start": "1133240",
    "end": "1139360"
  },
  {
    "text": "depending on the startup time of your node but this means that you can be back in Action very quickly now the important",
    "start": "1139360",
    "end": "1145080"
  },
  {
    "text": "thing to remember in this particular architecture is that whilst that node had failed you were still able to handle",
    "start": "1145080",
    "end": "1151200"
  },
  {
    "text": "traffic using the other nodes the replacement node simply means you aieve the same level of capacity that you had",
    "start": "1151200",
    "end": "1158440"
  },
  {
    "text": "before so the trick here is not to deploy to one node in one availability Zone but multiple nodes in multiple",
    "start": "1158440",
    "end": "1165799"
  },
  {
    "text": "availability zones so an example of an organization using",
    "start": "1165799",
    "end": "1170880"
  },
  {
    "text": "things like the simple C service is a company called 8K mes and they provide a distributed development platform that",
    "start": "1170880",
    "end": "1178039"
  },
  {
    "text": "allows developers to get access to systems that they need when they're building things now one of the",
    "start": "1178039",
    "end": "1183240"
  },
  {
    "text": "interesting use cases they've done here is if used the simple queing service again as that buffering component",
    "start": "1183240",
    "end": "1189559"
  },
  {
    "text": "between creating events and doing things like creating uh uh development environments and the like so they can",
    "start": "1189559",
    "end": "1196000"
  },
  {
    "text": "provide a very efficient and effective console EXP for their customers and provide a level of resilience that is",
    "start": "1196000",
    "end": "1202400"
  },
  {
    "text": "very impressive so what about disaster",
    "start": "1202400",
    "end": "1210520"
  },
  {
    "text": "recovery so the question is well something has failed and maybe it's failed monumentally in a bad way how do",
    "start": "1210520",
    "end": "1215960"
  },
  {
    "start": "1214000",
    "end": "1604000"
  },
  {
    "text": "we get back quickly because maybe we couldn't think of every single eventuality and we got caught out so we need our our secondary",
    "start": "1215960",
    "end": "1222880"
  },
  {
    "text": "approach so backup and restore on AWS gives you some options and it gives you options not just for application that",
    "start": "1222880",
    "end": "1229000"
  },
  {
    "text": "are running in the cloud but applications that you're running on premises as",
    "start": "1229000",
    "end": "1235039"
  },
  {
    "text": "well because what you get with the storage capabilities that we have available are durability and fast",
    "start": "1236600",
    "end": "1243360"
  },
  {
    "text": "recovery without the management overhead and the four storage options I'd like to speak about today are the",
    "start": "1243360",
    "end": "1250480"
  },
  {
    "text": "Amazon simple storage service the aw storage Gateway the elastic Block store",
    "start": "1250480",
    "end": "1256679"
  },
  {
    "text": "and finally Amazon glacia simple storage service which is probably",
    "start": "1256679",
    "end": "1263679"
  },
  {
    "text": "one of the best known services that we have and certainly one of our oldest running Services is beneficial because",
    "start": "1263679",
    "end": "1269440"
  },
  {
    "text": "it gives you unlimited capacity for your storage so you can store as much information there as you like paying as",
    "start": "1269440",
    "end": "1275880"
  },
  {
    "text": "you go so you only pay for the storage that you could sue which makes it very coste",
    "start": "1275880",
    "end": "1281720"
  },
  {
    "text": "effective it's also very efficient because as we mentioned earlier all the objects that you store in S3 are",
    "start": "1281720",
    "end": "1287440"
  },
  {
    "text": "automatically replicable around the availability zones in a particular region you can of course",
    "start": "1287440",
    "end": "1293760"
  },
  {
    "text": "choose to replicate your data to multiple regions as well you can either do that at right time so you can write to two locations",
    "start": "1293760",
    "end": "1300400"
  },
  {
    "text": "simultaneously or you can use the copy API to copy data around as",
    "start": "1300400",
    "end": "1305760"
  },
  {
    "text": "well this provides a very robust location to store data for long periods of",
    "start": "1305760",
    "end": "1311919"
  },
  {
    "text": "time interestingly enough it also provides a life cycle policy capability",
    "start": "1311919",
    "end": "1317360"
  },
  {
    "text": "which allows you to delete after periods of time based on rules that you set so you may say I want to store backup",
    "start": "1317360",
    "end": "1324159"
  },
  {
    "text": "copies of information onto S3 for 90 days but after 90 days please go ahead and delete them for",
    "start": "1324159",
    "end": "1331480"
  },
  {
    "text": "you another alternative is the use of the storage Gateway this is a really",
    "start": "1331880",
    "end": "1337279"
  },
  {
    "text": "useful capability when you have on premises infrastructure that you'd like to back up to",
    "start": "1337279",
    "end": "1344279"
  },
  {
    "text": "Amazon it runs in a virtual machine it could run in VMware or it can run in",
    "start": "1344279",
    "end": "1349480"
  },
  {
    "text": "hyperv and it provides a Gateway over which data is encrypted and sent",
    "start": "1349480",
    "end": "1354840"
  },
  {
    "text": "directly to S3 once in it's in S3 you're also able to recreate those volumes in the elastic",
    "start": "1354840",
    "end": "1362320"
  },
  {
    "text": "Block store and mount them to drives as drives to your ec2 instances so you can",
    "start": "1362320",
    "end": "1367679"
  },
  {
    "text": "use this as a transport mechanism to send data off premises very very",
    "start": "1367679",
    "end": "1372799"
  },
  {
    "text": "effectively simple to set up self-service very cost effective",
    "start": "1372799",
    "end": "1379600"
  },
  {
    "text": "the elastic Block store itself is also an interesting capability so elastic Block store acts as volumes for your ec2",
    "start": "1380559",
    "end": "1388360"
  },
  {
    "text": "servers it sort of uh looks reports and and acts like a normal volume would anything from one gig to one terabyte of",
    "start": "1388360",
    "end": "1395679"
  },
  {
    "text": "storage per volume and you mount those volumes to your ec2 instances the",
    "start": "1395679",
    "end": "1401240"
  },
  {
    "text": "interesting thing is that the live cycle of an EBS volume is separate from the server it's attached to",
    "start": "1401240",
    "end": "1408679"
  },
  {
    "text": "this is very important because it means if there's a failure of a server for example in this architecture we only have one web server maybe it's a very",
    "start": "1408679",
    "end": "1415159"
  },
  {
    "text": "small application we don't want to build in all the redundancy in the world we're just going to have one server with an",
    "start": "1415159",
    "end": "1420360"
  },
  {
    "text": "elastic IP if this particular server fails we can start a new one attach the elastic",
    "start": "1420360",
    "end": "1427679"
  },
  {
    "text": "IP and also reattach the EBS volume that may have had important application data directly to that instance that way we'd",
    "start": "1427679",
    "end": "1435000"
  },
  {
    "text": "be up and running straight away so in this case we haven't had to do any restoration there's no restore from",
    "start": "1435000",
    "end": "1441919"
  },
  {
    "text": "backup that's taken place we've just got going straight away if we want to protect the data",
    "start": "1441919",
    "end": "1447679"
  },
  {
    "text": "that's on that EPS volume even more so we can also of course snapshot that volume and that snapshot will be stored",
    "start": "1447679",
    "end": "1454600"
  },
  {
    "text": "at blck level in S3 it will also allow us to store incremental changes to that snapshot over time as",
    "start": "1454600",
    "end": "1461520"
  },
  {
    "text": "well one of the other new capabilities that we've recently announced is the ability to replicate EBS snapshots",
    "start": "1461520",
    "end": "1468039"
  },
  {
    "text": "between regions so for example you may have your primary storage of data in Tokyo and you may choose to replicate it",
    "start": "1468039",
    "end": "1475039"
  },
  {
    "text": "to",
    "start": "1475039",
    "end": "1477200"
  },
  {
    "text": "Singapore and as I mentioned those snapshots get stored in S3 which means that they are very resilient and",
    "start": "1480440",
    "end": "1486720"
  },
  {
    "text": "reliable and also very very cost effective remembering that we don't store all the data on the snapshot every",
    "start": "1486720",
    "end": "1493320"
  },
  {
    "text": "time it's only the change data that gets stored so if you have a 10% rate of change only be storing 10% of the data",
    "start": "1493320",
    "end": "1500760"
  },
  {
    "text": "because it's S3 you'll only be paying for 10% of the data as",
    "start": "1500760",
    "end": "1506080"
  },
  {
    "text": "well and finally Amazon glacia Amazon glassier provides you with a very",
    "start": "1507120",
    "end": "1513120"
  },
  {
    "text": "durable and very Low Cost Storage environment so for example in the in Us East the price is 1 cent per gig per",
    "start": "1513120",
    "end": "1519840"
  },
  {
    "text": "month which is very cost effective for storing data that is again replicated multiple times around the",
    "start": "1519840",
    "end": "1527080"
  },
  {
    "text": "region the difference between glacia and S3 though is that whilst S3 provides you with immediate recovery of data and",
    "start": "1527080",
    "end": "1533919"
  },
  {
    "text": "recall of files glacia as the name suggests gives you a 3 to five hour latency getting those files",
    "start": "1533919",
    "end": "1541120"
  },
  {
    "text": "back so this is useful for archival of files that are long-term storage that",
    "start": "1541120",
    "end": "1546480"
  },
  {
    "text": "may need to be kept for long periods of time but you don't need back straight away another interesting point to",
    "start": "1546480",
    "end": "1551559"
  },
  {
    "text": "remember is that the life cycle policies I mentioned that work with S3 also work with glacia so you can set a policy",
    "start": "1551559",
    "end": "1558320"
  },
  {
    "text": "where you back up to S3 in the first instance and then after 90 days those files get moved to glacia you still",
    "start": "1558320",
    "end": "1564760"
  },
  {
    "text": "access them through S3 and they're very easy to recall as",
    "start": "1564760",
    "end": "1570080"
  },
  {
    "text": "well so who's doing this at the moment well a number of different companies do this for different reasons so Lifeline",
    "start": "1571279",
    "end": "1577440"
  },
  {
    "text": "for example they do disaster recover for highly regulated Industries and they dramatically reduce the cost of vaulting",
    "start": "1577440",
    "end": "1583440"
  },
  {
    "text": "and the Dr implementations by moving to AWS Sage deploy their Oracle e bus suite",
    "start": "1583440",
    "end": "1589840"
  },
  {
    "text": "and a Dev test d as well so this was again a way of being far more responsive to what the business needed and being",
    "start": "1589840",
    "end": "1596679"
  },
  {
    "text": "more cost effective at the same time which is often a challenge for many",
    "start": "1596679",
    "end": "1602519"
  },
  {
    "start": "1604000",
    "end": "1874000"
  },
  {
    "text": "organizations so let's move on to our final item of the day which is testing",
    "start": "1604480",
    "end": "1610679"
  },
  {
    "text": "tools it's important to test in fact I think on our on our uh survey that we",
    "start": "1610679",
    "end": "1616080"
  },
  {
    "text": "did just before 9% of people weren't even sure sure which tended to indicate they haven't tested or they were brave enough to admit that they hadn't",
    "start": "1616080",
    "end": "1622760"
  },
  {
    "text": "tested testing tends to be viewed as a highrisk add-on and really needs to be",
    "start": "1622760",
    "end": "1628399"
  },
  {
    "text": "fundamental to what you do probably the best known almost publicized version of testing out there",
    "start": "1628399",
    "end": "1635080"
  },
  {
    "text": "is the chaos monkey and the Simian Army from Netflix which is a tool that they've open- sourced and its job is to",
    "start": "1635080",
    "end": "1641520"
  },
  {
    "text": "go around turning things off doing those arbitrary things that as human beings we don't like to see happen but",
    "start": "1641520",
    "end": "1647600"
  },
  {
    "text": "realistically we know will happen over time because remember everything fails all the",
    "start": "1647600",
    "end": "1653279"
  },
  {
    "text": "time now you can either choose to be a victim of the failure or get ahead of the failure and by testing proactively",
    "start": "1653279",
    "end": "1659679"
  },
  {
    "text": "you get to see what you haven't designed for and start working around those particular problems this can also be",
    "start": "1659679",
    "end": "1665440"
  },
  {
    "text": "used as a very powerful message to the business in fact I've seen uh customer demonstrations that have been done internally to Senior Management teams",
    "start": "1665440",
    "end": "1671840"
  },
  {
    "text": "where they've run chaos monkey on systems that they've created and said hey look we built this to be resilient",
    "start": "1671840",
    "end": "1677039"
  },
  {
    "text": "here are the kinds of failures we can cater for and as you can see the business basing component of the",
    "start": "1677039",
    "end": "1683240"
  },
  {
    "text": "application is still operating is still running and these Executives were were blown away to see this capability",
    "start": "1683240",
    "end": "1688799"
  },
  {
    "text": "because they knew that in a traditional environment when failure happened they got a phone",
    "start": "1688799",
    "end": "1695240"
  },
  {
    "text": "call another really interesting testing tool that you should be aware of is something called bees with machine guns",
    "start": "1695960",
    "end": "1702159"
  },
  {
    "text": "certainly a name that you won't forget in a hurry this is a tool that was uh created",
    "start": "1702159",
    "end": "1707760"
  },
  {
    "text": "by the Chicago Tribune in the US and they open sourced it and it basically allows you to volume test your",
    "start": "1707760",
    "end": "1715640"
  },
  {
    "text": "application so it generates significant amounts of load but it does this by using micro instances in the AWS Cloud",
    "start": "1715640",
    "end": "1722760"
  },
  {
    "text": "so again this is a tool that can use both for your Cloud hosted applications and internal applications because what",
    "start": "1722760",
    "end": "1729480"
  },
  {
    "text": "this lets you do is synthesize large amounts of system load which is often a challenge to do in an effective way by",
    "start": "1729480",
    "end": "1736320"
  },
  {
    "text": "seeing how your application performs under the large amount of load you can see if there are any obvious break",
    "start": "1736320",
    "end": "1741559"
  },
  {
    "text": "points you can then take it a step further and start taking components out of service so you can imagine combining",
    "start": "1741559",
    "end": "1747279"
  },
  {
    "text": "the use of bees with machine guns with chaos monkey to put a system under load and then start failing",
    "start": "1747279",
    "end": "1753880"
  },
  {
    "text": "components if you built a Loosely coupled environment this is where you should see the benefits of that Loosely",
    "start": "1753880",
    "end": "1759720"
  },
  {
    "text": "coupled environment so for example seeing Q start to grow in length as particular services are unavailable if",
    "start": "1759720",
    "end": "1766559"
  },
  {
    "text": "you haven't built a loci couple environment this is where you'll see failures taking place and you'll start to see an end user degradation in",
    "start": "1766559",
    "end": "1773320"
  },
  {
    "text": "performance or a loss of a service alog",
    "start": "1773320",
    "end": "1777759"
  },
  {
    "text": "together so Netflix when they sort of took this approach they came from a very traditional data Centric data center",
    "start": "1778640",
    "end": "1784519"
  },
  {
    "text": "Centric application architecture and they changed their design capabilities they changed their approaches and they",
    "start": "1784519",
    "end": "1790519"
  },
  {
    "text": "changed their platform and now they've been a to increase their reliability by an order of magnitude they've significantly changed how they operate",
    "start": "1790519",
    "end": "1798159"
  },
  {
    "text": "now this is always a continuous Improvement this is something that organizations work through on an ongoing basis it's not a situation where you",
    "start": "1798159",
    "end": "1804960"
  },
  {
    "text": "ever done but you're able to make the environment better more resilient and",
    "start": "1804960",
    "end": "1810399"
  },
  {
    "text": "more resistant to failure as you go",
    "start": "1810399",
    "end": "1814519"
  },
  {
    "text": "along now I'd like to make you aware of a few events that we have coming up before we wrap up firstly we've opened",
    "start": "1815919",
    "end": "1822159"
  },
  {
    "text": "our expression of interest for our Singapore Summit so this is in July in on the 18th of July a keynote speaker",
    "start": "1822159",
    "end": "1829159"
  },
  {
    "text": "will be of course Dr ver Vogal who uh again has many interesting views on this",
    "start": "1829159",
    "end": "1834320"
  },
  {
    "text": "topic so you can see the registration link there down below we're also thrilled to announce three events in",
    "start": "1834320",
    "end": "1841320"
  },
  {
    "text": "India June 25th of Mumbai June 27th in Delhi and July the 5th in Bangalore",
    "start": "1841320",
    "end": "1847720"
  },
  {
    "text": "again visit that website to pre-register your interest and we'll be thrill to keep you up to date with what's going on",
    "start": "1847720",
    "end": "1854039"
  },
  {
    "text": "with those events as I mentioned men earlier after",
    "start": "1854039",
    "end": "1859080"
  },
  {
    "text": "the Q&A there'll be a survey that pops up at the end please take the time to fill it in because it helps us understand how to better serve you and",
    "start": "1859080",
    "end": "1866360"
  },
  {
    "text": "in recognition of you spending a few moments of your time would be thrilled to give you $25 of AWS credits that can",
    "start": "1866360",
    "end": "1872559"
  },
  {
    "text": "get you quite far you can do quite a bit of experimentation with $25 used in an effective",
    "start": "1872559",
    "end": "1878440"
  },
  {
    "start": "1874000",
    "end": "2139000"
  },
  {
    "text": "way also I'd like to invite you to subscribe to the Amazon podcast the AWS podcast which you can visit at",
    "start": "1878440",
    "end": "1884159"
  },
  {
    "text": "aws.amazon.com podcast this is a typically a week podcast that we released to keep keep",
    "start": "1884159",
    "end": "1890679"
  },
  {
    "text": "customers up to date with what's going on in the world of AWS it's often an easy way to keep across all the changes",
    "start": "1890679",
    "end": "1896000"
  },
  {
    "text": "that take place so now what we'll do is we may look at some questions and uh see some",
    "start": "1896000",
    "end": "1903039"
  },
  {
    "text": "obvious ones that we need to to answer here so let me just uh look through",
    "start": "1903039",
    "end": "1910840"
  },
  {
    "text": "here be with me for a moment",
    "start": "1912080",
    "end": "1916840"
  },
  {
    "text": "so so the question is I have not seen the option to include a server across availability zones in a single load",
    "start": "1920679",
    "end": "1926799"
  },
  {
    "text": "balancer um when I go to select the load servers to be included in a load balancer it does not list the servers in",
    "start": "1926799",
    "end": "1932399"
  },
  {
    "text": "a different availability zone so when you create your elastic load balancer you need to specify which availability",
    "start": "1932399",
    "end": "1937960"
  },
  {
    "text": "zones it should be looking for servers in so when you create your elb you'd also specify the availability zones that",
    "start": "1937960",
    "end": "1944720"
  },
  {
    "text": "the elb will be referring to as well now if you've gone ahead and created an elb",
    "start": "1944720",
    "end": "1950760"
  },
  {
    "text": "and it's not configured the way you want don't lose heart it's very simple you just create a new one uh and replace the",
    "start": "1950760",
    "end": "1956760"
  },
  {
    "text": "old one re changing the DNS into",
    "start": "1956760",
    "end": "1961000"
  },
  {
    "text": "thee uh there's a question can we use S3 for live feeds of XML files and CSV",
    "start": "1962760",
    "end": "1967919"
  },
  {
    "text": "files well S3 is is a real-time platform so as quickly as you can write and read you can use it so uh one of the things",
    "start": "1967919",
    "end": "1973919"
  },
  {
    "text": "we recommend when using S3 is to use um as much parallel as as possible so you",
    "start": "1973919",
    "end": "1979320"
  },
  {
    "text": "may use things like multiart upload you may have multiple applications pulling from that data at the same time as",
    "start": "1979320",
    "end": "1987480"
  },
  {
    "text": "well uh few more questions",
    "start": "1992000",
    "end": "1997240"
  },
  {
    "text": "here let going through one of the questions is if adws provides for high",
    "start": "1997240",
    "end": "2002799"
  },
  {
    "text": "availability why do we need a Dr setup really becomes a case of um um risk",
    "start": "2002799",
    "end": "2009480"
  },
  {
    "text": "mitigation and this will depend on the risk modes you are trying to cater for for your particular application and for",
    "start": "2009480",
    "end": "2015960"
  },
  {
    "text": "your business so for example uh if you've got",
    "start": "2015960",
    "end": "2021080"
  },
  {
    "text": "your application appropriately architected so it can operate across multiple availability",
    "start": "2021080",
    "end": "2026159"
  },
  {
    "text": "zones then really what you're trying to mitigate in terms of a multi- regional model is to say well if we lose access",
    "start": "2026159",
    "end": "2032399"
  },
  {
    "text": "to an entire region for some reason and I can't think of what that would be maybe a significant Network event that",
    "start": "2032399",
    "end": "2037480"
  },
  {
    "text": "affects the whole country that might affect us from that perspective that said it's always important to keep some",
    "start": "2037480",
    "end": "2043000"
  },
  {
    "text": "form of Disaster Recovery it might not be a live setup and it might not be an active active type thing it may simply",
    "start": "2043000",
    "end": "2049800"
  },
  {
    "text": "be every couple of hours or at the end of every day we take a copy of all the relevant important data and we move it",
    "start": "2049800",
    "end": "2055878"
  },
  {
    "text": "to some other location so it could be another AWS region it may even be back to our own data center just depends on",
    "start": "2055879",
    "end": "2061599"
  },
  {
    "text": "what you want to do it just gives you that choice at AWS we're very focused on giving customers as much Choice as",
    "start": "2061599",
    "end": "2067480"
  },
  {
    "text": "possible possible to deploy the way that you would like to",
    "start": "2067480",
    "end": "2071359"
  },
  {
    "text": "deploy now there's one question about what happens when we shut down an ec2 server that has an EBS volume attached",
    "start": "2073280",
    "end": "2080158"
  },
  {
    "text": "all there's two choices you have when you terminate an E2 instance you can terminate the attached volumes",
    "start": "2080159",
    "end": "2086280"
  },
  {
    "text": "automatically so they don't have to clean up afterwards pardon me or you can keep those volumes around automatically and",
    "start": "2086280",
    "end": "2092599"
  },
  {
    "text": "just manage them yourself so you have the choice of what to do",
    "start": "2092599",
    "end": "2098599"
  },
  {
    "text": "just looking for some other questions",
    "start": "2105599",
    "end": "2108960"
  },
  {
    "text": "here just bear with me one of the questions was does RS",
    "start": "2116000",
    "end": "2122599"
  },
  {
    "text": "support Oracle R uh so the answer for that is no we do not support Oracle wre",
    "start": "2122599",
    "end": "2127880"
  },
  {
    "text": "um we do support synchronous replication between multiple nodes though but it will still be a single node of the",
    "start": "2127880",
    "end": "2133240"
  },
  {
    "text": "Oracle database you can make that as big as as you like within the the bounds of what RDS supports for those customers",
    "start": "2133240",
    "end": "2140280"
  },
  {
    "start": "2139000",
    "end": "2484000"
  },
  {
    "text": "who do still want to run Oracle R for some reason they may have a need particular because of an application dependency Etc one of the solutions",
    "start": "2140280",
    "end": "2147160"
  },
  {
    "text": "around that space is to use what's called Direct Connect Direct Connect allows you to have a private network connection from",
    "start": "2147160",
    "end": "2154359"
  },
  {
    "text": "your site into an AWS peering point a point of presence which then cross",
    "start": "2154359",
    "end": "2159520"
  },
  {
    "text": "connects into the ads Network this means you can have very high bandwidth very low latency and you can connect back to",
    "start": "2159520",
    "end": "2166880"
  },
  {
    "text": "your database very easily in fact uh I believe in the US there's a company that offers this as a service specifically",
    "start": "2166880",
    "end": "2172240"
  },
  {
    "text": "for those customers who want to run the bulk of their applications in Amazon and have some Reliance on uh on Oracle rack",
    "start": "2172240",
    "end": "2179800"
  },
  {
    "text": "as well another question was relate to that",
    "start": "2179800",
    "end": "2185839"
  },
  {
    "text": "is connectivity options available for to connect to a company's Data Center and best practices so a number of different",
    "start": "2185839",
    "end": "2192640"
  },
  {
    "text": "options there so firstly you can use uh VPN so virtual private Network this can",
    "start": "2192640",
    "end": "2198040"
  },
  {
    "text": "be a hardware VPN connecting to a router or could be a software VPN you can choose what you'd like to deploy uh we",
    "start": "2198040",
    "end": "2204359"
  },
  {
    "text": "support both and that uses obviously internet connectivity if you want something more",
    "start": "2204359",
    "end": "2209960"
  },
  {
    "text": "uh uh substantial in terms of bandwidth or more controlled in terms of quality of service then that's where Direct",
    "start": "2209960",
    "end": "2216280"
  },
  {
    "text": "Connect comes in so again Direct Connect is a private network connection you can have increments of one gig or 10 gig you",
    "start": "2216280",
    "end": "2222720"
  },
  {
    "text": "have multiple links you can share the same link across multiple virtual private clouds and also between multiple",
    "start": "2222720",
    "end": "2229359"
  },
  {
    "text": "accounts if you like as well using VLAN tagging so this gives you a very efficient way to connect your on premise",
    "start": "2229359",
    "end": "2236119"
  },
  {
    "text": "Resources with your cloud-based resources as well it's becoming a very very popular",
    "start": "2236119",
    "end": "2242760"
  },
  {
    "text": "approach so just going through some other questions so one question was when would",
    "start": "2245680",
    "end": "2252760"
  },
  {
    "text": "we use elastic beant stalk rather than using ec2 and Autos scope and the nice thing is is it's not",
    "start": "2252760",
    "end": "2258520"
  },
  {
    "text": "an idor it just depends on what your focus is so elastic Bean stalk is really a tool it's a free tool it doesn't cost",
    "start": "2258520",
    "end": "2264440"
  },
  {
    "text": "anything to use you you get charged for the resources you consume when running applications in elastic be store but the",
    "start": "2264440",
    "end": "2270400"
  },
  {
    "text": "service itself is free and it's designed to provide an easy framework for application developers to deploy their",
    "start": "2270400",
    "end": "2276280"
  },
  {
    "text": "applications to the cloud in a robust fashion so let me give you a ruby",
    "start": "2276280",
    "end": "2281440"
  },
  {
    "text": "example so I was working on a project recently where this was the case is it you create a ruby application this was a",
    "start": "2281440",
    "end": "2287040"
  },
  {
    "text": "Sinatra one providing an API endpoint and basically all you do is you configure",
    "start": "2287040",
    "end": "2293520"
  },
  {
    "text": "your elastic Bean stalk application to say what you'd like I'd like a a um a",
    "start": "2293520",
    "end": "2299160"
  },
  {
    "text": "deployment on a 64-bit instance of this particular size elastic Bean then takes care of creating the load Balan of",
    "start": "2299160",
    "end": "2305920"
  },
  {
    "text": "creating the autoscale group for you based on the parameters you set so the minimum and the maximum you",
    "start": "2305920",
    "end": "2310960"
  },
  {
    "text": "want it can also set up a relational database service database for you and all the other components it will also",
    "start": "2310960",
    "end": "2316839"
  },
  {
    "text": "then excuse me deploy the application to the server and redeploy the application",
    "start": "2316839",
    "end": "2322560"
  },
  {
    "text": "to the server as necessary so for example in the Rubik case the deployment is as simple as typing in git space aw.",
    "start": "2322560",
    "end": "2329359"
  },
  {
    "text": "push and it will push the latest version of the code out to those servers automatically so it's not a case of",
    "start": "2329359",
    "end": "2335280"
  },
  {
    "text": "using one or the other depends on what your focus is if you're a development focused person so you're sitting in",
    "start": "2335280",
    "end": "2340480"
  },
  {
    "text": "visual studio all day or Eclipse you'd use elastic B",
    "start": "2340480",
    "end": "2345559"
  },
  {
    "text": "St just going through some other questions as well there lots happening",
    "start": "2346640",
    "end": "2353000"
  },
  {
    "text": "here so there's a question about is there any risk if we're using loose coupling but the queue is in the application as against uh one that's in",
    "start": "2355440",
    "end": "2364160"
  },
  {
    "text": "using a separate queue itself so really again this depends on the architect ual design principles in which you buil that",
    "start": "2364160",
    "end": "2369880"
  },
  {
    "text": "que there are many open source and third party cues that are also excellent Solutions you just need to make sure that they will scale that they do not in",
    "start": "2369880",
    "end": "2377000"
  },
  {
    "text": "of themselves present a single point of failure they're the main things you need to worry about then other than that",
    "start": "2377000",
    "end": "2382319"
  },
  {
    "text": "you're just looking for the functional components you need simple queing service is one available uh approach for",
    "start": "2382319",
    "end": "2388200"
  },
  {
    "text": "you you don't have to have that",
    "start": "2388200",
    "end": "2391920"
  },
  {
    "text": "though so a question here uh instead of having the entire design replicated in",
    "start": "2395280",
    "end": "2400480"
  },
  {
    "text": "multiple availability zones can I have one server in one zone and a second web server in another Zone absolutely so you",
    "start": "2400480",
    "end": "2406480"
  },
  {
    "text": "don't have to duplicate your entire design across the availability zones you can have part of it in one Zone part of",
    "start": "2406480",
    "end": "2412560"
  },
  {
    "text": "it in the other zone so say for example you have a web Farm of six web servers you can have three in one zone and three",
    "start": "2412560",
    "end": "2418400"
  },
  {
    "text": "in the other Zone and the elastic load balancer will load balance across now you still need to think about",
    "start": "2418400",
    "end": "2424160"
  },
  {
    "text": "capacity and you still need to think about what happens if you lose that other half you want to make sure the aut scale will grow or you may want to have",
    "start": "2424160",
    "end": "2430400"
  },
  {
    "text": "that in there as well automatically there's a question here about IDs multi- region replication is",
    "start": "2430400",
    "end": "2437520"
  },
  {
    "text": "it on the road map um certainly we love to listen to customer feedback about what they'd like to see um this is an",
    "start": "2437520",
    "end": "2443440"
  },
  {
    "text": "idea that's come to us many times so certainly it's something we're we're looking at",
    "start": "2443440",
    "end": "2449359"
  },
  {
    "text": "considering there's a question about what's the difference between glacia the price difference between glacia and is",
    "start": "2450319",
    "end": "2455960"
  },
  {
    "text": "glacia so the nice thing is that the pricing when you're storing on S3 is the S3",
    "start": "2455960",
    "end": "2461800"
  },
  {
    "text": "pricing and then when the object is moved to glacia you'll pay the glacia pricing for that object so basically the",
    "start": "2461800",
    "end": "2467599"
  },
  {
    "text": "volume of data you're paying a particular price for will change depending on where the ti",
    "start": "2467599",
    "end": "2473800"
  },
  {
    "text": "is just looking for another uh another few questions that more general for",
    "start": "2475960",
    "end": "2482599"
  },
  {
    "text": "people so there's a question about highp speeded transfer of data between ec2 is is it uh better to use EBS or S3 another",
    "start": "2482599",
    "end": "2490280"
  },
  {
    "start": "2484000",
    "end": "2772000"
  },
  {
    "text": "of the wonderful it depends type answers certainly in a if you're using a traditional file system type mounting approach then EBS is the way to go",
    "start": "2490280",
    "end": "2497440"
  },
  {
    "text": "particularly if you combine it with the provisioned iops capability of EBS this is where you can specify how many I per",
    "start": "2497440",
    "end": "2503520"
  },
  {
    "text": "second you want the volume to support we support currently up to 2,000 IBS per",
    "start": "2503520",
    "end": "2508720"
  },
  {
    "text": "volume and of course you can rate together multiple volumes that said if you have a",
    "start": "2508720",
    "end": "2514000"
  },
  {
    "text": "distributed architecture where you can have multiple nodes running multiple threads you can get tremendous bandwidth",
    "start": "2514000",
    "end": "2519760"
  },
  {
    "text": "using S3 so I have a number of customers doing this for mapping type applications with moving larger mive tiles you can",
    "start": "2519760",
    "end": "2526280"
  },
  {
    "text": "get very high performance in that particular use case using that appr",
    "start": "2526280",
    "end": "2531280"
  },
  {
    "text": "approach so there's a question about replication lck between multiple availability zones of adus RS now the",
    "start": "2535440",
    "end": "2542359"
  },
  {
    "text": "example the person asked here is if the IDS Master is in Us East and the other one is in to here so as I mentioned",
    "start": "2542359",
    "end": "2548240"
  },
  {
    "text": "before the replication between availability zones for IDs is currently still between the same region so You' be",
    "start": "2548240",
    "end": "2554680"
  },
  {
    "text": "replicating between availability zones in the same region typically those availability zones are single",
    "start": "2554680",
    "end": "2559800"
  },
  {
    "text": "millisecond latency apart so you don't notice it as I mentioned we're always interested in IDs and clearly",
    "start": "2559800",
    "end": "2565400"
  },
  {
    "text": "replicating across multiple regions of IDs is one that many people are interested",
    "start": "2565400",
    "end": "2570838"
  },
  {
    "text": "in question here currently my application session is stored in IDs can we use elastication instead",
    "start": "2572559",
    "end": "2577640"
  },
  {
    "text": "probably in this case you might want to complement your use of idas with elastic cache if you're finding you have a performance issue or you want to make",
    "start": "2577640",
    "end": "2583800"
  },
  {
    "text": "things go faster um that requires some code changes on on your part just interfacing of the McD uh",
    "start": "2583800",
    "end": "2592160"
  },
  {
    "text": "session there's a question here about what tools do you recommend for automating provisioning so cover that",
    "start": "2596079",
    "end": "2601280"
  },
  {
    "text": "quickly so there's a number of approaches you can take obviously you can just write your own scripts and and",
    "start": "2601280",
    "end": "2607200"
  },
  {
    "text": "have that run up boot time you could pass them into the user data of the instance when you start if you use cloud",
    "start": "2607200",
    "end": "2613119"
  },
  {
    "text": "formation cloud formation also uh supports the provisioning of software on instances as well then there of course",
    "start": "2613119",
    "end": "2619640"
  },
  {
    "text": "third party tools like Chef puppet right scale Etc that can also do that it",
    "start": "2619640",
    "end": "2625079"
  },
  {
    "text": "depends on how you'd like to deploy I've also got customers using uh Team Foundation server for example to do that",
    "start": "2625079",
    "end": "2630559"
  },
  {
    "text": "as well lots of combinations you can use",
    "start": "2630559",
    "end": "2635559"
  },
  {
    "text": "uh question is SQL Server IDs available for multi- multi- availability zones um",
    "start": "2637800",
    "end": "2643319"
  },
  {
    "text": "not currently um certainly it's something that a lot of customers have asked for so we're endeavoring to get that happening as",
    "start": "2643319",
    "end": "2650240"
  },
  {
    "text": "well and we'll do a couple more questions um one question very good",
    "start": "2651040",
    "end": "2657079"
  },
  {
    "text": "question what's the precautions about storing private data as with any private data that you store no matter where you store it be it",
    "start": "2657079",
    "end": "2663760"
  },
  {
    "text": "on your laptop on premises at home in the cloud if information is private you need to put appropriate security",
    "start": "2663760",
    "end": "2670200"
  },
  {
    "text": "controls around it so this would be things like access controls and also if it's very uh confidential it should be",
    "start": "2670200",
    "end": "2676880"
  },
  {
    "text": "encrypted as well encryption is a very powerful capability because it means you manage the keys you may have also noticed",
    "start": "2676880",
    "end": "2683359"
  },
  {
    "text": "recently an announcement where we've released a capability called Cloud H asem which provides a Hardware security",
    "start": "2683359",
    "end": "2688599"
  },
  {
    "text": "module for storing keys in the cloud as well this is useful for many uh people",
    "start": "2688599",
    "end": "2693760"
  },
  {
    "text": "in this in these industries I'll do uh one more question here let me",
    "start": "2693760",
    "end": "2701119"
  },
  {
    "text": "just have a look so the question was if we have Autos scaling feature of ec2 instances",
    "start": "2701119",
    "end": "2707040"
  },
  {
    "text": "why do we need load balancing so these two features work together they don't depend on one another but they work",
    "start": "2707040",
    "end": "2712640"
  },
  {
    "text": "together autoscaling focuses on the ability to grow or shrink a farm of",
    "start": "2712640",
    "end": "2717920"
  },
  {
    "text": "service so have a number of servers providing a service the load balancing allows you to",
    "start": "2717920",
    "end": "2724240"
  },
  {
    "text": "spread load across those servers so it provides a end point a single end point which your customers or other components",
    "start": "2724240",
    "end": "2730680"
  },
  {
    "text": "of your application can point to and then the load is distributed across that growing or shrinking farm so they're",
    "start": "2730680",
    "end": "2736240"
  },
  {
    "text": "very complimentary components so with that we'll wrap up",
    "start": "2736240",
    "end": "2741400"
  },
  {
    "text": "the the webinar uh at the end you should get a popup that invites you to provide some feedback please do that we' really",
    "start": "2741400",
    "end": "2747359"
  },
  {
    "text": "appreciate it and uh of course you'll get your $25 vouch as as a result of",
    "start": "2747359",
    "end": "2752720"
  },
  {
    "text": "that also I'd like to add for anyone who asked a question that we didn't get to you today all the questions will be",
    "start": "2752720",
    "end": "2758079"
  },
  {
    "text": "answered the ones that W answered in real time today we've got your email from your log on and we'll come back to",
    "start": "2758079",
    "end": "2764040"
  },
  {
    "text": "you and email those answers to you as well and be in touch thank you for attend your attendance I hope you can join the",
    "start": "2764040",
    "end": "2770800"
  },
  {
    "text": "future sessions as well",
    "start": "2770800",
    "end": "2774640"
  }
]