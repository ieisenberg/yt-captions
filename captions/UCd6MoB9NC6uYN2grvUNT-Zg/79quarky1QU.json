[
  {
    "start": "0",
    "end": "31000"
  },
  {
    "text": "[Music]",
    "start": "650",
    "end": "1010"
  },
  {
    "text": "[Applause]",
    "start": "1010",
    "end": "4088"
  },
  {
    "text": "[Music]",
    "start": "4960",
    "end": "11679"
  },
  {
    "text": "hello i'm nagendra a cloud support",
    "start": "12080",
    "end": "14240"
  },
  {
    "text": "engineer here at the aws office in",
    "start": "14240",
    "end": "16240"
  },
  {
    "text": "dallas today i am going to show you how",
    "start": "16240",
    "end": "18960"
  },
  {
    "text": "to store the amazon simple email service",
    "start": "18960",
    "end": "21359"
  },
  {
    "text": "feedback notifications such as",
    "start": "21359",
    "end": "23199"
  },
  {
    "text": "deliveries bounces or complaints that",
    "start": "23199",
    "end": "25680"
  },
  {
    "text": "are sent to the amazon simple",
    "start": "25680",
    "end": "27039"
  },
  {
    "text": "notification service let's get started",
    "start": "27039",
    "end": "29920"
  },
  {
    "text": "before getting started let's first",
    "start": "29920",
    "end": "32078"
  },
  {
    "start": "31000",
    "end": "63000"
  },
  {
    "text": "confirm that the amazon ses is",
    "start": "32079",
    "end": "34399"
  },
  {
    "text": "configured to send feedback",
    "start": "34399",
    "end": "36160"
  },
  {
    "text": "notifications to amazon sns to do this i",
    "start": "36160",
    "end": "39440"
  },
  {
    "text": "am logged in to my aws ses console and i",
    "start": "39440",
    "end": "42559"
  },
  {
    "text": "have opened the verified identity that",
    "start": "42559",
    "end": "45200"
  },
  {
    "text": "has the feedback notifications",
    "start": "45200",
    "end": "46719"
  },
  {
    "text": "configured",
    "start": "46719",
    "end": "49280"
  },
  {
    "text": "here i can confirm that the feedback",
    "start": "49360",
    "end": "51280"
  },
  {
    "text": "notifications for delivery bounce and",
    "start": "51280",
    "end": "53600"
  },
  {
    "text": "complaint are configured to send to my",
    "start": "53600",
    "end": "56000"
  },
  {
    "text": "sns topic next let's configure the",
    "start": "56000",
    "end": "58559"
  },
  {
    "text": "dynamo debut table where we plan to",
    "start": "58559",
    "end": "60640"
  },
  {
    "text": "store these notifications for this let's",
    "start": "60640",
    "end": "63359"
  },
  {
    "start": "63000",
    "end": "96000"
  },
  {
    "text": "go to the dynamodb console and select",
    "start": "63359",
    "end": "65680"
  },
  {
    "text": "the create table option i'll choose the",
    "start": "65680",
    "end": "68400"
  },
  {
    "text": "table name as scs notifications i am",
    "start": "68400",
    "end": "71439"
  },
  {
    "text": "using the partition key scs message id",
    "start": "71439",
    "end": "74320"
  },
  {
    "text": "and sort key sns publish time i will",
    "start": "74320",
    "end": "77280"
  },
  {
    "text": "leave all these other settings as they",
    "start": "77280",
    "end": "79360"
  },
  {
    "text": "are now let's create the table this",
    "start": "79360",
    "end": "82080"
  },
  {
    "text": "takes a few minutes to complete while we",
    "start": "82080",
    "end": "84640"
  },
  {
    "text": "are waiting let's go on to the next step",
    "start": "84640",
    "end": "86960"
  },
  {
    "text": "for the next step let's create a lambda",
    "start": "86960",
    "end": "89200"
  },
  {
    "text": "function i'll open the lambda console",
    "start": "89200",
    "end": "91840"
  },
  {
    "text": "and then select the create function",
    "start": "91840",
    "end": "93759"
  },
  {
    "text": "option",
    "start": "93759",
    "end": "94640"
  },
  {
    "text": "for this use case we'll be using a",
    "start": "94640",
    "end": "97200"
  },
  {
    "start": "96000",
    "end": "183000"
  },
  {
    "text": "pre-existing blueprint for sns lambda in",
    "start": "97200",
    "end": "100640"
  },
  {
    "text": "node.js runtime after we select the",
    "start": "100640",
    "end": "103119"
  },
  {
    "text": "blueprint we can configure it i'll name",
    "start": "103119",
    "end": "105920"
  },
  {
    "text": "the lambda function as ses notifications",
    "start": "105920",
    "end": "108560"
  },
  {
    "text": "code for the execution role i have",
    "start": "108560",
    "end": "110720"
  },
  {
    "text": "already created an aws identity and",
    "start": "110720",
    "end": "113280"
  },
  {
    "text": "access management role that can be used",
    "start": "113280",
    "end": "115520"
  },
  {
    "text": "by the lambda function so i will be",
    "start": "115520",
    "end": "117680"
  },
  {
    "text": "choosing it from the existing roles to",
    "start": "117680",
    "end": "120079"
  },
  {
    "text": "show you the permissions that are added",
    "start": "120079",
    "end": "121840"
  },
  {
    "text": "to this role i have my iim console open",
    "start": "121840",
    "end": "125200"
  },
  {
    "text": "on the side",
    "start": "125200",
    "end": "126799"
  },
  {
    "text": "because we planned for this function to",
    "start": "126799",
    "end": "128879"
  },
  {
    "text": "interact with dynamodb service i have",
    "start": "128879",
    "end": "131280"
  },
  {
    "text": "added the permissions to put an item in",
    "start": "131280",
    "end": "133840"
  },
  {
    "text": "this specific dynamodb table",
    "start": "133840",
    "end": "137280"
  },
  {
    "text": "after selecting the role let's select",
    "start": "137280",
    "end": "139280"
  },
  {
    "text": "the sns topic that we will use for the",
    "start": "139280",
    "end": "142080"
  },
  {
    "text": "amazon ses notifications choose create",
    "start": "142080",
    "end": "145200"
  },
  {
    "text": "function",
    "start": "145200",
    "end": "147120"
  },
  {
    "text": "for the actual function code",
    "start": "147120",
    "end": "149440"
  },
  {
    "text": "let's use the example code provided in",
    "start": "149440",
    "end": "151519"
  },
  {
    "text": "this knowledge center article on this",
    "start": "151519",
    "end": "153360"
  },
  {
    "text": "topic that's linked to this video in the",
    "start": "153360",
    "end": "155680"
  },
  {
    "text": "description section",
    "start": "155680",
    "end": "157760"
  },
  {
    "text": "let's copy this code into the lambda",
    "start": "157760",
    "end": "159680"
  },
  {
    "text": "console and deploy it",
    "start": "159680",
    "end": "163359"
  },
  {
    "text": "we can see from the function console",
    "start": "165840",
    "end": "167920"
  },
  {
    "text": "that the amazon sns trigger is",
    "start": "167920",
    "end": "169920"
  },
  {
    "text": "configured and is enabled",
    "start": "169920",
    "end": "172160"
  },
  {
    "text": "now that we have all the resources",
    "start": "172160",
    "end": "174000"
  },
  {
    "text": "created let's return to the amazon scs",
    "start": "174000",
    "end": "176959"
  },
  {
    "text": "console and view the verified identity",
    "start": "176959",
    "end": "179519"
  },
  {
    "text": "that is configured with feedback",
    "start": "179519",
    "end": "181120"
  },
  {
    "text": "notifications",
    "start": "181120",
    "end": "182640"
  },
  {
    "text": "i'll use this send test email option to",
    "start": "182640",
    "end": "185519"
  },
  {
    "start": "183000",
    "end": "282000"
  },
  {
    "text": "send an email from this identity to",
    "start": "185519",
    "end": "187760"
  },
  {
    "text": "bound simulator email address",
    "start": "187760",
    "end": "190319"
  },
  {
    "text": "we can get this bound simulator email",
    "start": "190319",
    "end": "192400"
  },
  {
    "text": "address from the amazon scs",
    "start": "192400",
    "end": "194480"
  },
  {
    "text": "documentation at the link found in the",
    "start": "194480",
    "end": "197040"
  },
  {
    "text": "knowledge center article i will enter",
    "start": "197040",
    "end": "199280"
  },
  {
    "text": "the test subject and body to send this",
    "start": "199280",
    "end": "201840"
  },
  {
    "text": "test email this test email sent to the",
    "start": "201840",
    "end": "205040"
  },
  {
    "text": "bounds email address triggers a",
    "start": "205040",
    "end": "207120"
  },
  {
    "text": "notification to the sns topic that then",
    "start": "207120",
    "end": "210480"
  },
  {
    "text": "invokes our lambda function",
    "start": "210480",
    "end": "212480"
  },
  {
    "text": "let's go to the lambda function console",
    "start": "212480",
    "end": "214720"
  },
  {
    "text": "and open the monitor tab",
    "start": "214720",
    "end": "217040"
  },
  {
    "text": "now we can confirm from the invocation",
    "start": "217040",
    "end": "219680"
  },
  {
    "text": "metric that the lambda function is",
    "start": "219680",
    "end": "221599"
  },
  {
    "text": "invoked",
    "start": "221599",
    "end": "224080"
  },
  {
    "text": "after we confirm this let's return to",
    "start": "225519",
    "end": "227920"
  },
  {
    "text": "the backend dynamodb table and check the",
    "start": "227920",
    "end": "230640"
  },
  {
    "text": "table for any new items here we can see",
    "start": "230640",
    "end": "233920"
  },
  {
    "text": "that the information about the email",
    "start": "233920",
    "end": "236319"
  },
  {
    "text": "that is sent to the bound simulator is",
    "start": "236319",
    "end": "238640"
  },
  {
    "text": "stored here as expected",
    "start": "238640",
    "end": "241040"
  },
  {
    "text": "we can view the contents of this item to",
    "start": "241040",
    "end": "243280"
  },
  {
    "text": "verify the destination email address",
    "start": "243280",
    "end": "245680"
  },
  {
    "text": "that the email is sent when it's bounced",
    "start": "245680",
    "end": "248640"
  },
  {
    "text": "in this case it is the bound simulator",
    "start": "248640",
    "end": "250799"
  },
  {
    "text": "email address we can also see the",
    "start": "250799",
    "end": "252959"
  },
  {
    "text": "message id message type and the",
    "start": "252959",
    "end": "255040"
  },
  {
    "text": "timestamp of the message if you want to",
    "start": "255040",
    "end": "257440"
  },
  {
    "text": "export this data first select all the",
    "start": "257440",
    "end": "259759"
  },
  {
    "text": "items in the table",
    "start": "259759",
    "end": "261280"
  },
  {
    "text": "go to actions to export all items in the",
    "start": "261280",
    "end": "263919"
  },
  {
    "text": "table as a csv file you can save this",
    "start": "263919",
    "end": "266880"
  },
  {
    "text": "file for compliance purposes or analyze",
    "start": "266880",
    "end": "269600"
  },
  {
    "text": "the data in the file",
    "start": "269600",
    "end": "272800"
  },
  {
    "text": "so now we have reviewed the steps",
    "start": "272960",
    "end": "274800"
  },
  {
    "text": "required to store the amazon scs",
    "start": "274800",
    "end": "277120"
  },
  {
    "text": "feedback notifications in a dynamodb",
    "start": "277120",
    "end": "279520"
  },
  {
    "text": "table using a lambda function thanks for",
    "start": "279520",
    "end": "282639"
  },
  {
    "start": "282000",
    "end": "297000"
  },
  {
    "text": "watching and happy cloud computing from",
    "start": "282639",
    "end": "284960"
  },
  {
    "text": "all of us here at aws",
    "start": "284960",
    "end": "287530"
  },
  {
    "text": "[Applause]",
    "start": "287530",
    "end": "290610"
  },
  {
    "text": "[Music]",
    "start": "294490",
    "end": "297699"
  }
]