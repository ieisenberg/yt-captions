[
  {
    "start": "0",
    "end": "110000"
  },
  {
    "text": "good morning my name is Alan Hockney I'm a senior manager of solutions",
    "start": "680",
    "end": "6060"
  },
  {
    "text": "architecture at AWS welcome to this session on advanced architectures with",
    "start": "6060",
    "end": "11670"
  },
  {
    "text": "AWS transit gateway the session will provide you with the fundamental architectural and functional knowledge",
    "start": "11670",
    "end": "18270"
  },
  {
    "text": "that you'll need to build advanced architectures with the AWS transit gateway and I'll stop calling it tgw",
    "start": "18270",
    "end": "25650"
  },
  {
    "text": "just for convenience I won't be spending time in the console or showing you click by click walkthrough configuration",
    "start": "25650",
    "end": "31500"
  },
  {
    "text": "rather this session is designed to share key concepts that allow you to leverage the robust capabilities of the TGW the",
    "start": "31500",
    "end": "41760"
  },
  {
    "text": "session will start with a must at a modest paste covering the basic components and operation of the tgw",
    "start": "41760",
    "end": "48200"
  },
  {
    "text": "however the session will accelerate quickly into advanced use cases and assumes in intermediate to advanced",
    "start": "48200",
    "end": "55350"
  },
  {
    "text": "level of IP networking knowledge a final note before we get going while you can",
    "start": "55350",
    "end": "60989"
  },
  {
    "text": "implement the architecture shown you should consult with the Solutions Architect to make sure that it's the",
    "start": "60989",
    "end": "67260"
  },
  {
    "text": "most appropriate solution for your given need so let's get right into it",
    "start": "67260",
    "end": "73760"
  },
  {
    "text": "customers tell us they want robust networking capabilities that allow simple seamless and global connectivity",
    "start": "75680",
    "end": "83340"
  },
  {
    "text": "between their AWS cloud environments and their on-premises environments but we",
    "start": "83340",
    "end": "89939"
  },
  {
    "text": "also heard from customers that they were running into challenges they wanted an easier way to manage point-to-point",
    "start": "89939",
    "end": "96000"
  },
  {
    "text": "connectivity at scale they wanted more bandwidth for their V pcs and they",
    "start": "96000",
    "end": "101670"
  },
  {
    "text": "wanted a centralized place to manage routing within into and out of the AWS",
    "start": "101670",
    "end": "108810"
  },
  {
    "text": "cloud let's take a look at AWS networking before the introduction of",
    "start": "108810",
    "end": "114060"
  },
  {
    "start": "110000",
    "end": "110000"
  },
  {
    "text": "the transit gateway a customer would build a V PC and then another and they",
    "start": "114060",
    "end": "122310"
  },
  {
    "text": "would want to connect those two together and we can do that we have V PC peering but what happens when I add the next two",
    "start": "122310",
    "end": "129209"
  },
  {
    "text": "V pcs well I can peer those but as you no V pcs are not a transitive point for",
    "start": "129209",
    "end": "136420"
  },
  {
    "text": "packet routing so for all of these V pcs to talk to one another they need to be fully meshed V PC peering is OK for a 4",
    "start": "136420",
    "end": "147400"
  },
  {
    "text": "or 5 or 6 or 7 V pcs but what happens at scale here's the formula for calculating",
    "start": "147400",
    "end": "157840"
  },
  {
    "text": "the number of peering connections required for a full mesh V PC infrastructure let's say that I have 10",
    "start": "157840",
    "end": "165160"
  },
  {
    "text": "V pcs do the maths that's 45 peering connections so at",
    "start": "165160",
    "end": "171970"
  },
  {
    "text": "least 45 API calls for peering plus API calls into each of the V pcs to update route tables to point to the peers",
    "start": "171970",
    "end": "178650"
  },
  {
    "text": "alright so you can automate that fairly simply but what happens when you have 100 V pcs that's 4,500 peers that starts",
    "start": "178650",
    "end": "189580"
  },
  {
    "text": "to become complex to manage moreover V PC route tables support up to",
    "start": "189580",
    "end": "194920"
  },
  {
    "text": "a thousand static routes and up 225 peers so a full mesh of 100 V pcs will",
    "start": "194920",
    "end": "201970"
  },
  {
    "text": "create a challenge but customers told us we could also help them in other places",
    "start": "201970",
    "end": "208380"
  },
  {
    "text": "so this is the diagram that we had but what about edge connectivity when you",
    "start": "208380",
    "end": "213670"
  },
  {
    "text": "want to connect your on-premises infrastructure well when using AWS site-to-site VPN you create a customer",
    "start": "213670",
    "end": "220420"
  },
  {
    "text": "gateway they need to find a VPN connection between that customer gateway in a virtual private gateway that's",
    "start": "220420",
    "end": "226360"
  },
  {
    "text": "attached to your V PC and then you need to go through that process for each V PC that you want to",
    "start": "226360",
    "end": "232269"
  },
  {
    "text": "connect similarly with AWS direct connect you create a private virtual interface or",
    "start": "232269",
    "end": "239260"
  },
  {
    "text": "vith for each of the V PC virtual",
    "start": "239260",
    "end": "244510"
  },
  {
    "text": "private gateways that you want to connect to so we simplified this with AWS Direct Connect a bit ago by creating",
    "start": "244510",
    "end": "252010"
  },
  {
    "text": "something called the direct connect gateway and that allows you to connect multiple private VIPs and virtual",
    "start": "252010",
    "end": "258070"
  },
  {
    "text": "private gateways together with a single global network object with this picture as background we set off to provide our",
    "start": "258070",
    "end": "264760"
  },
  {
    "text": "customers with something simple to use skilled to thousands of networks enter",
    "start": "264760",
    "end": "272169"
  },
  {
    "text": "AWS transit gateway a network transit hub that you can use to interconnect your V pcs and on-premises networks now",
    "start": "272169",
    "end": "282669"
  },
  {
    "text": "when you want to connect those V pcs you simply attach them to the tgw we need",
    "start": "282669",
    "end": "289030"
  },
  {
    "text": "access over VPN you can attach that eight of us site to site VPN T or T G W and newly announced in April you can now",
    "start": "289030",
    "end": "296530"
  },
  {
    "text": "attach to rec Connect gateways to t GW is created in u.s. regions excluding gov",
    "start": "296530",
    "end": "302110"
  },
  {
    "text": "cloud let's run down the anatomy of a t",
    "start": "302110",
    "end": "309909"
  },
  {
    "start": "307000",
    "end": "307000"
  },
  {
    "text": "GW resource attachments are the logical connections made to the t GW they are",
    "start": "309909",
    "end": "317800"
  },
  {
    "text": "both a source of and destination for packets today d GW supports three",
    "start": "317800",
    "end": "325150"
  },
  {
    "text": "attachment types Amazon V PC AWS site-to-site VPN and AWS direct connect",
    "start": "325150",
    "end": "332050"
  },
  {
    "text": "gateway many of you connect AWS client VPN to the t GW today using the V PC n't",
    "start": "332050",
    "end": "339250"
  },
  {
    "text": "our roadmap includes the ability to connect the AWS client VPN directly to the t GW a moment ago I mentioned that",
    "start": "339250",
    "end": "349449"
  },
  {
    "start": "347000",
    "end": "347000"
  },
  {
    "text": "we recently launched direct connect gateway support for the t GW so I just",
    "start": "349449",
    "end": "355029"
  },
  {
    "text": "want to take a brief interlude here to explain how that works so first we introduced a new viv type a transit viv",
    "start": "355029",
    "end": "362550"
  },
  {
    "text": "so now you can have 51 virtual interfaces on your direct connect connection you can have one transit viv",
    "start": "362550",
    "end": "370509"
  },
  {
    "text": "and fifty-fifth that are mixed between public v that provide access to AWS",
    "start": "370509",
    "end": "375909"
  },
  {
    "text": "public services using public IPs and private vist that provide access names on V pcs using private IP addresses so",
    "start": "375909",
    "end": "385479"
  },
  {
    "text": "let's see how a typical configuration with direct connect gateway and virtual private gateways works versus the",
    "start": "385479",
    "end": "392319"
  },
  {
    "text": "integration with transit gateway so I have my on premises environment and I",
    "start": "392319",
    "end": "399610"
  },
  {
    "text": "have a direct connect gateway location I'm sorry I have a direct connect location I'm provision in connection between the",
    "start": "399610",
    "end": "405639"
  },
  {
    "text": "two of them and I create a private virtual interface that private virtual",
    "start": "405639",
    "end": "411100"
  },
  {
    "text": "interface is subsequently attached to a direct connect gateway and then for the",
    "start": "411100",
    "end": "418000"
  },
  {
    "text": "V pcs that I want to have access to my own premises environment I associate the virtual private gateways of those V pcs",
    "start": "418000",
    "end": "425289"
  },
  {
    "text": "to the direct connect gateway now let's see how this works with a transit",
    "start": "425289",
    "end": "431139"
  },
  {
    "text": "gateway so let's create a transit Gateway provision our single transit VIP",
    "start": "431139",
    "end": "438310"
  },
  {
    "text": "on that connection attach that transit VIP to the direct connect gateway yeah",
    "start": "438310",
    "end": "446590"
  },
  {
    "text": "as shown this doesn't work let me explain why Direct Connect gateway will",
    "start": "446590",
    "end": "452440"
  },
  {
    "text": "support either private virtual interfaces and virtual private gateways",
    "start": "452440",
    "end": "457750"
  },
  {
    "text": "or transit virtual interfaces in transit gateways you can't mix the two of them",
    "start": "457750",
    "end": "463570"
  },
  {
    "text": "on a single direct connect gateway so let's create a new drug connect gateway",
    "start": "463570",
    "end": "469889"
  },
  {
    "text": "attach the transit v to it in the direct connect console or using the api's you",
    "start": "469889",
    "end": "476020"
  },
  {
    "text": "can attach the transit gateway to the direct connect gateway identify routes",
    "start": "476020",
    "end": "481599"
  },
  {
    "text": "to originate and you can also then attach the transit gateway to the V PC",
    "start": "481599",
    "end": "488490"
  },
  {
    "text": "some other things to note about the direct connect gateway integration jumbo",
    "start": "488490",
    "end": "493870"
  },
  {
    "text": "frames over the transit V or 8500 for the MTU a direct connect gateway can",
    "start": "493870",
    "end": "501220"
  },
  {
    "text": "support up to three transit gateways conversely a transit gateway can support",
    "start": "501220",
    "end": "508300"
  },
  {
    "text": "up to 20 Direct Connect gateways for",
    "start": "508300",
    "end": "514450"
  },
  {
    "text": "each transit gateway you can originate up to 20 routes towards the on-premises environment in a last note that I should",
    "start": "514450",
    "end": "522940"
  },
  {
    "text": "make about Direct Connect in general whether using the transit v4 a private VIP or even if you're using our public v",
    "start": "522940",
    "end": "529900"
  },
  {
    "text": "for accessing public services like s3 and dynamodb think about redundancy you should",
    "start": "529900",
    "end": "536190"
  },
  {
    "text": "certainly be provisioning a second connection to another AWS Direct Connect location to revive the redundancy for",
    "start": "536190",
    "end": "542670"
  },
  {
    "text": "your infrastructure okay back to the tgw anatomy lesson we talked about our",
    "start": "542670",
    "end": "549840"
  },
  {
    "start": "545000",
    "end": "545000"
  },
  {
    "text": "attachment types now let's talk about tgw route tables route tables in the tgw",
    "start": "549840",
    "end": "556440"
  },
  {
    "text": "allow you to create routing domains similar to virtual routing and forwarding in the typical network world",
    "start": "556440",
    "end": "561720"
  },
  {
    "text": "or VR F's in a typical configuration when you generate or when you create",
    "start": "561720",
    "end": "567030"
  },
  {
    "text": "your transit gateway you also get a default tgw route table route table",
    "start": "567030",
    "end": "575610"
  },
  {
    "text": "associations are used to make next top routing decisions for packets received",
    "start": "575610",
    "end": "580830"
  },
  {
    "text": "from an attachment by the TGW each attachment can have a single route table",
    "start": "580830",
    "end": "586800"
  },
  {
    "text": "Association oftentimes this association is with the default tgw route table",
    "start": "586800",
    "end": "594680"
  },
  {
    "text": "route propagation allows you to define which of the tgw route tables will learn",
    "start": "595010",
    "end": "600990"
  },
  {
    "text": "routes from the resource attachments you can propagate 0 you can propagate to",
    "start": "600990",
    "end": "606630"
  },
  {
    "text": "zero one or many tgw route tables so here's the route table for our diagram",
    "start": "606630",
    "end": "613050"
  },
  {
    "text": "I've added a static default route at the top and we'll talk a little bit more about that later but I've also added",
    "start": "613050",
    "end": "619550"
  },
  {
    "text": "propagated routes 4.1 10.1 10.2 and 10.3",
    "start": "619550",
    "end": "625020"
  },
  {
    "text": "and they're propagated via their respective attachments from the VPC site",
    "start": "625020",
    "end": "630120"
  },
  {
    "text": "to site VPN and Direct Connect gateway",
    "start": "630120",
    "end": "634430"
  },
  {
    "text": "you can specify whether to automatically associate with and propagate to the TG",
    "start": "635180",
    "end": "641550"
  },
  {
    "text": "w's default route table at the time that you create your tgw these features you",
    "start": "641550",
    "end": "646650"
  },
  {
    "text": "enable these features enable you to exert as much or as little control on attachments and tgw routing as is",
    "start": "646650",
    "end": "654120"
  },
  {
    "text": "appropriate for your particular environment so now we have a complete",
    "start": "654120",
    "end": "660390"
  },
  {
    "start": "658000",
    "end": "658000"
  },
  {
    "text": "tgw configuration but we still have work to do on the edges we've defined the",
    "start": "660390",
    "end": "666000"
  },
  {
    "text": "route table in the GW but the edge' resources still need to understand how to get to the tgw from a",
    "start": "666000",
    "end": "672120"
  },
  {
    "text": "routing perspective let's talk about how routes are learned both by the T GW and",
    "start": "672120",
    "end": "678150"
  },
  {
    "start": "674000",
    "end": "674000"
  },
  {
    "text": "by the attachments in the case of a V PC",
    "start": "678150",
    "end": "683900"
  },
  {
    "text": "you have two options the V PC will automatically propagate to the route tables that you specify in your T GW or",
    "start": "683900",
    "end": "691260"
  },
  {
    "text": "you can statically define a route entry in the appropriate t GW route table in",
    "start": "691260",
    "end": "696980"
  },
  {
    "text": "the case of a WS site-to-site VPN we offer two configuration modes in static",
    "start": "696980",
    "end": "702660"
  },
  {
    "text": "mode you'll need to specify a static configuration in the appropriate t GW off tables if you're using the dynamic",
    "start": "702660",
    "end": "709800"
  },
  {
    "text": "mode of AWS site-to-site VPN routes are propagated over bgp and you can select which route tables receive that",
    "start": "709800",
    "end": "716280"
  },
  {
    "text": "propagation or in addition you can select to input a static route entry in",
    "start": "716280",
    "end": "722600"
  },
  {
    "text": "the case of Direct Connect it's the same case you can statically define a route",
    "start": "722600",
    "end": "729240"
  },
  {
    "text": "or you can take the BGP propagated routes from the direct connect gateway and specify the route tables that will",
    "start": "729240",
    "end": "735330"
  },
  {
    "text": "receive them in the transit gateway so that's how the transit gateway route table gets its routing information now I",
    "start": "735330",
    "end": "741480"
  },
  {
    "text": "want to talk about how the edges these attachments how they get routes to the",
    "start": "741480",
    "end": "746700"
  },
  {
    "text": "tgw in the case of the static AWS",
    "start": "746700",
    "end": "752040"
  },
  {
    "text": "site-to-site VPN configuration your customer gateway will need to have a static route that points towards the t",
    "start": "752040",
    "end": "758070"
  },
  {
    "text": "GW in the case of the dynamic configuration bgp will propagate the",
    "start": "758070",
    "end": "764070"
  },
  {
    "text": "routes in the associated route table to the customer gateway in the case of the",
    "start": "764070",
    "end": "771720"
  },
  {
    "text": "direct connect gateway at the time that you associate your transit gateway you",
    "start": "771720",
    "end": "777030"
  },
  {
    "text": "are allowed to provide up to 20 routes to originate towards your on-premises",
    "start": "777030",
    "end": "782130"
  },
  {
    "text": "environment these routes do not have to have anything to do with the contents of the route table you are able to",
    "start": "782130",
    "end": "788520"
  },
  {
    "text": "statically define the routing prefixes that will be originated and then",
    "start": "788520",
    "end": "793530"
  },
  {
    "text": "transmitted by direct connect gateway to your on-premises equipment over bgp",
    "start": "793530",
    "end": "798890"
  },
  {
    "text": "in the case of VPC you'll need to statically define the path to the tgw in",
    "start": "798890",
    "end": "805880"
  },
  {
    "text": "the VPC route table so to give you a sense of what that looks like I have a V",
    "start": "805880",
    "end": "810890"
  },
  {
    "text": "PC on the left and on the right I have a transit gateway in the middle that's receiving propagated routes from those V",
    "start": "810890",
    "end": "816470"
  },
  {
    "text": "PC attachments in order for the V PC on the left and right to communicate a static entry is entered on both of them",
    "start": "816470",
    "end": "823400"
  },
  {
    "text": "pointing to the transit gateway the transit gateway has next stop information to afford the packet this is",
    "start": "823400",
    "end": "833000"
  },
  {
    "start": "831000",
    "end": "831000"
  },
  {
    "text": "what a default configuration might look like all of the attachments are associated to a single tgw route table",
    "start": "833000",
    "end": "839420"
  },
  {
    "text": "all the attachments are propagating to that same default route table and you'll",
    "start": "839420",
    "end": "844790"
  },
  {
    "text": "note that although I have four attachments I only have three entries in the route table the on-premises",
    "start": "844790",
    "end": "849890"
  },
  {
    "text": "environment is using Direct Connect as a primary connectivity point and a dynamic AWS site-to-site VPN configuration as a",
    "start": "849890",
    "end": "857080"
  },
  {
    "text": "backup in this case the direct connect gateway router advertisement is what is",
    "start": "857080",
    "end": "862580"
  },
  {
    "text": "installed in the route table which brings us to the question of how do we select best path so here's the path",
    "start": "862580",
    "end": "870560"
  },
  {
    "start": "869000",
    "end": "869000"
  },
  {
    "text": "selection behavior first longest prefix match the second is static route entries",
    "start": "870560",
    "end": "876200"
  },
  {
    "text": "including site to site VPN if you're using the static capability or the",
    "start": "876200",
    "end": "882770"
  },
  {
    "text": "static configuration for site to site VPN that static route is preferred over dynamic routes this distinction is",
    "start": "882770",
    "end": "889880"
  },
  {
    "text": "important because it's a slight difference in the behavior from the Virtual Private Gateway after static",
    "start": "889880",
    "end": "895190"
  },
  {
    "text": "routes VPC propagated routes are prioritized then Direct Connect gateway and then dynamically received aid vs",
    "start": "895190",
    "end": "902810"
  },
  {
    "text": "site-to-site VPN routes all right I'm",
    "start": "902810",
    "end": "908150"
  },
  {
    "text": "going to go into two common use cases three advanced use cases and then a customer pattern that we're seeing start",
    "start": "908150",
    "end": "914780"
  },
  {
    "text": "to repeat as we look at the specific use cases I'll walk through the configuration of each of them first and",
    "start": "914780",
    "end": "921980"
  },
  {
    "text": "then I will verbalize a packet walk through and highlight a bit on the screen as I mentioned previously this is",
    "start": "921980",
    "end": "928550"
  },
  {
    "text": "going to get deep fairly quickly so if you need to come back to this on YouTube feel free to alright let's start with",
    "start": "928550",
    "end": "936870"
  },
  {
    "start": "935000",
    "end": "935000"
  },
  {
    "text": "the first of our common use cases a flat network so I have a V PC 10.1 / 16 it",
    "start": "936870",
    "end": "945150"
  },
  {
    "text": "has an attachment with the transit gateway it is associated with the default route table the V PC route table",
    "start": "945150",
    "end": "953250"
  },
  {
    "text": "has a 10/8 route pointing to the transit gateway attachment and the transit",
    "start": "953250",
    "end": "959040"
  },
  {
    "text": "gateway is propagating the V PC attachment route into the default route table I can add a 10.2 10.3 and 10.4 V",
    "start": "959040",
    "end": "969030"
  },
  {
    "text": "PC each of them configured identically propagating into the default route table associated with the default route table",
    "start": "969030",
    "end": "976170"
  },
  {
    "text": "and in this case attach the same transit gateway so in this scenario if I want an",
    "start": "976170",
    "end": "981930"
  },
  {
    "text": "instance at 10.10 dot ten to talk to an",
    "start": "981930",
    "end": "987180"
  },
  {
    "text": "instance at 10.20 dot 20 the 10.10 210",
    "start": "987180",
    "end": "992700"
  },
  {
    "text": "instance will put its packet out to the default gateway in its local subnet that",
    "start": "992700",
    "end": "999900"
  },
  {
    "text": "default gateway is the implicit router for the V PC the V PC will then do a lookup or the implicit router will do a",
    "start": "999900",
    "end": "1005690"
  },
  {
    "text": "lookup in the route table associated with that subnet in the 10.1 V PC and",
    "start": "1005690",
    "end": "1010760"
  },
  {
    "text": "find a route for 10/8 with the next top of the tgw the packet is forwarded",
    "start": "1010760",
    "end": "1017240"
  },
  {
    "text": "through the attachment to the transit gateway the transit gateway does a",
    "start": "1017240",
    "end": "1022280"
  },
  {
    "text": "lookup in the route table associated with the attachment in this case we only have one route table it identifies a",
    "start": "1022280",
    "end": "1027980"
  },
  {
    "text": "route entry for 10.2 slash 16 with the next top of the attachment for VP c2 and",
    "start": "1027980",
    "end": "1033470"
  },
  {
    "text": "the packet is delivered in this configuration which is the default configuration you have full connectivity",
    "start": "1033470",
    "end": "1040370"
  },
  {
    "text": "between your V pcs now a word of note because I know my terminology is going",
    "start": "1040370",
    "end": "1045740"
  },
  {
    "text": "to bounce moving forward when I say route domain or when the slides say route domain that means a route table",
    "start": "1045740",
    "end": "1052160"
  },
  {
    "text": "inside of the transit gateway okay let's look at another common use case so",
    "start": "1052160",
    "end": "1058130"
  },
  {
    "start": "1057000",
    "end": "1057000"
  },
  {
    "text": "similar to the one that we just saw so I have V pcs 10.1 through 10 dot 4/16 they are associated with the routing",
    "start": "1058130",
    "end": "1065390"
  },
  {
    "text": "domain for VP these they're attached to a common transit gateway and each of them have a",
    "start": "1065390",
    "end": "1070409"
  },
  {
    "text": "V PC route table that has a default gateway pointing to the attachment for the tgw in this case we're going to add",
    "start": "1070409",
    "end": "1079019"
  },
  {
    "text": "a VPN attachment that VPN attachment will be associated with a different tgw",
    "start": "1079019",
    "end": "1085320"
  },
  {
    "text": "route table we'll call this the routing domain for VPN the VPN will advertise a",
    "start": "1085320",
    "end": "1091350"
  },
  {
    "text": "default route we will propagate that default route into the routing domain for the V pcs and we will propagate the",
    "start": "1091350",
    "end": "1099000"
  },
  {
    "text": "ciders for the attached V pcs into the routing domain for the VPN so now let's",
    "start": "1099000",
    "end": "1105090"
  },
  {
    "text": "say that I want to send a packet to an on-premises piece of gear 172 16 1.1 so",
    "start": "1105090",
    "end": "1112860"
  },
  {
    "text": "I have my instance 10.1 0.1 it puts the packet out on the network it goes to the",
    "start": "1112860",
    "end": "1118470"
  },
  {
    "text": "gateway in the V PC the implicit router picks that up does a lookup in the V PC route table associated with that subnet",
    "start": "1118470",
    "end": "1124289"
  },
  {
    "text": "it finds a default route pointing the transit gateway attachment the packet is",
    "start": "1124289",
    "end": "1130830"
  },
  {
    "text": "transmitted to the transit gateway when the transit gateway receives the packet",
    "start": "1130830",
    "end": "1135990"
  },
  {
    "text": "it does a route table look up in the table associated with the attachment for",
    "start": "1135990",
    "end": "1142049"
  },
  {
    "text": "V PC 10.1 slash 16 that route table has a default route pointing to the V PC",
    "start": "1142049",
    "end": "1147240"
  },
  {
    "text": "attachment and the packet is forwarded down the VPN now when 170 170 216 1.1",
    "start": "1147240",
    "end": "1155070"
  },
  {
    "text": "wants to reply back to 10.10 10 it sends this packet through the local",
    "start": "1155070",
    "end": "1160139"
  },
  {
    "text": "infrastructure it comes through the VPN and is received by the tgw the tgw does",
    "start": "1160139",
    "end": "1165240"
  },
  {
    "text": "a route table lookup in the route table associated with this attachment which is",
    "start": "1165240",
    "end": "1170370"
  },
  {
    "text": "a routing domain for V PC it finds an entry for 10.1 slash 16 with the next",
    "start": "1170370",
    "end": "1177690"
  },
  {
    "text": "top of the attachment for V PC 1 and the packet is delivered to V PC 1 note that",
    "start": "1177690",
    "end": "1183990"
  },
  {
    "text": "in this configuration there's no east-west connectivity within AWS between these V pcs however there is",
    "start": "1183990",
    "end": "1191730"
  },
  {
    "text": "full connectivity between the V pcs in the on-premises environment and a footnote and something that I'll review",
    "start": "1191730",
    "end": "1197309"
  },
  {
    "text": "a little bit later there is nothing prevents unless you prevent it a hairpin",
    "start": "1197309",
    "end": "1202679"
  },
  {
    "text": "turn through the VPN customer gateway so just be advised of that but with in AWS",
    "start": "1202679",
    "end": "1208260"
  },
  {
    "text": "there's no direct connectivity between these V pcs let's look at some advanced",
    "start": "1208260",
    "end": "1215520"
  },
  {
    "text": "use cases one is a centralized net so in",
    "start": "1215520",
    "end": "1221190"
  },
  {
    "start": "1217000",
    "end": "1217000"
  },
  {
    "text": "the configuration here we have V PC a 10.1 / 16 V PC P 10.2 / 16 each of them",
    "start": "1221190",
    "end": "1228299"
  },
  {
    "text": "has an attachment to a tgw they're associated with the V PC route domain",
    "start": "1228299",
    "end": "1234080"
  },
  {
    "text": "each of them has a V PC route table pointing their default route to the tgw",
    "start": "1234080",
    "end": "1239610"
  },
  {
    "text": "on the right side we have an outbound V PC then outbound V PC is connected or",
    "start": "1239610",
    "end": "1247830"
  },
  {
    "text": "it's attached to the tgw and you may not be able to see a 2l on the screen but",
    "start": "1247830",
    "end": "1253500"
  },
  {
    "text": "within the outbound V PC there are some lines the horizontal slivers indicate",
    "start": "1253500",
    "end": "1259799"
  },
  {
    "text": "availability zones and the vertical slivers indicate subnets so why have i",
    "start": "1259799",
    "end": "1266130"
  },
  {
    "text": "put the attachment in a separate subnet from this source net device or or nat",
    "start": "1266130",
    "end": "1271500"
  },
  {
    "text": "gateway we want the NAT device to be in what we call a public subnet as you can",
    "start": "1271500",
    "end": "1277530"
  },
  {
    "text": "see from the route table in the top right it has a default gateway pointing to the internet via an internet gateway",
    "start": "1277530",
    "end": "1282750"
  },
  {
    "text": "and as a route for 10/8 that points back to the attachments for the tgw but if we",
    "start": "1282750",
    "end": "1288870"
  },
  {
    "text": "put the transit gateways attachment in its own subnet it has the effect of allowing us to define an ingress route",
    "start": "1288870",
    "end": "1296429"
  },
  {
    "text": "table so what happens here is I can define subnet route tables for each of",
    "start": "1296429",
    "end": "1303510"
  },
  {
    "text": "the availability zones where the transit gateway attachments exist and I'll define a default route that matches the",
    "start": "1303510",
    "end": "1309840"
  },
  {
    "text": "specific NAT instance or NAT gateway in the same availability zone so in fact",
    "start": "1309840",
    "end": "1315450"
  },
  {
    "text": "this V PC has four route tables it has one route table for the public subnets",
    "start": "1315450",
    "end": "1321150"
  },
  {
    "text": "and it has individual three individual route tables for the attachment transit",
    "start": "1321150",
    "end": "1326549"
  },
  {
    "text": "subnets so let's see what a packet flow through this might look like so if I",
    "start": "1326549",
    "end": "1333030"
  },
  {
    "text": "have an instance 10 to 0 20 that wants to communicate out to a note on the internet 10 2.0 20 will",
    "start": "1333030",
    "end": "1341549"
  },
  {
    "text": "create the packet deliver it to the local gateway the VPC implicit router will do a lookup in the route table",
    "start": "1341549",
    "end": "1347879"
  },
  {
    "text": "associated with that subnet the VPC route table says that the next stop is the transit gateway the packet is",
    "start": "1347879",
    "end": "1353849"
  },
  {
    "text": "forwarded through the attachment then the tgw does a lookup in the route table",
    "start": "1353849",
    "end": "1359159"
  },
  {
    "text": "associated with that attachment and finds a default route pointing to the outbound VPC attachments the packet is",
    "start": "1359159",
    "end": "1367529"
  },
  {
    "text": "delivered to the outbound VPC attachment",
    "start": "1367529",
    "end": "1372950"
  },
  {
    "text": "the outbound VPC attachment then delivers it because it's not in the local subnet to the default gateway for",
    "start": "1372950",
    "end": "1380190"
  },
  {
    "text": "that subnet which causes the V PC to do a lookup in the subnet route table the",
    "start": "1380190",
    "end": "1385379"
  },
  {
    "text": "next top address for default route is the specific NAT gateway or not instance for that availability zone and the",
    "start": "1385379",
    "end": "1392159"
  },
  {
    "text": "packet is forwarded on once that ad instance does its source NAT the packets",
    "start": "1392159",
    "end": "1397739"
  },
  {
    "text": "put out to the implicit router in this case the packets ported on to the Internet gateway and on to the Internet",
    "start": "1397739",
    "end": "1403549"
  },
  {
    "text": "when the packets returned its received by the NAT device that corrects the",
    "start": "1403549",
    "end": "1409649"
  },
  {
    "text": "destination address it sends that information the 10 dot 2002 to packet to",
    "start": "1409649",
    "end": "1418440"
  },
  {
    "text": "the transit gateway when the packet is received by the transit gateway a route",
    "start": "1418440",
    "end": "1425219"
  },
  {
    "text": "table lookup is done in The Associated route table and delivered to the attachment b4v PCB now this",
    "start": "1425219",
    "end": "1434099"
  },
  {
    "text": "configuration has a couple of trade-offs on the pro side it's very simple to configure it's an attachment and some",
    "start": "1434099",
    "end": "1440399"
  },
  {
    "text": "route table configuration of EPC the trade-off is that the transit gateway will prefer keeping packets in the same",
    "start": "1440399",
    "end": "1446969"
  },
  {
    "text": "availability zone so if a packet is transmitted from a V PC instance and availability zone a the Packer will be",
    "start": "1446969",
    "end": "1453989"
  },
  {
    "text": "delivered to the NAT gateway in the corresponding availability zone in the",
    "start": "1453989",
    "end": "1460859"
  },
  {
    "text": "outbound V PC what does that mean that means that because we have a statically defined default route in our",
    "start": "1460859",
    "end": "1467580"
  },
  {
    "text": "route tables in the outbound VPC subnet if there is a challenge or an issue with",
    "start": "1467580",
    "end": "1472680"
  },
  {
    "text": "that particular net gateway or then that instance you will need to intervene to redirect the traffic either manually or",
    "start": "1472680",
    "end": "1479280"
  },
  {
    "text": "through automated scripting there's another approach that you can take oh",
    "start": "1479280",
    "end": "1484950"
  },
  {
    "text": "one more thing I should have mentioned I have a black hole route here that I didn't speak to before the reason for",
    "start": "1484950",
    "end": "1490650"
  },
  {
    "text": "this black hole route is that in this case I do not want VPC a and B to talk to one another it is possible if I don't",
    "start": "1490650",
    "end": "1498120"
  },
  {
    "text": "have this black hole route for traffic from V PCB to make its way to V PCA the",
    "start": "1498120",
    "end": "1503640"
  },
  {
    "text": "inbound traffic will have a 164 address because it will in fact beam added and",
    "start": "1503640",
    "end": "1509340"
  },
  {
    "text": "it will be returned because of the route table entry you see in the outbound V PC for 10/8 so just to note if you wish to",
    "start": "1509340",
    "end": "1515640"
  },
  {
    "text": "prevent instances from talking to one another in this configuration using the Nats this black hole route is required",
    "start": "1515640",
    "end": "1523490"
  },
  {
    "text": "alright so another way that you can resolve or another way that you can",
    "start": "1523490",
    "end": "1528690"
  },
  {
    "text": "configure this for centralized NAT is to take advantage of equal cost multi path",
    "start": "1528690",
    "end": "1533720"
  },
  {
    "text": "over VPN which is available to you with AWS site-to-site VPN on the transit gateway with transit gateway we give you",
    "start": "1533720",
    "end": "1540870"
  },
  {
    "text": "the ability to horizontally scale your VPN using ecmp we've tested up to 50",
    "start": "1540870",
    "end": "1545880"
  },
  {
    "text": "gigabit and we're sure that you can go higher than that if you need it with this configuration I can spin up as many",
    "start": "1545880",
    "end": "1554370"
  },
  {
    "text": "instances as I like the VPN terminates on those instances the instances announce a default prefix which is",
    "start": "1554370",
    "end": "1563430"
  },
  {
    "text": "installed into the V PC route table V PC a and V PC be their route information is",
    "start": "1563430",
    "end": "1570240"
  },
  {
    "text": "propagated into the outbound route table and otherwise this looks very similar to what we saw before so 10.2 done 0.20",
    "start": "1570240",
    "end": "1578520"
  },
  {
    "text": "puts a packet out it's received by the implicit router next top is the tgw it's",
    "start": "1578520",
    "end": "1584850"
  },
  {
    "text": "received by the tgw a lookup is done in the associated route table next stop is",
    "start": "1584850",
    "end": "1591380"
  },
  {
    "text": "the VPN attachment and at this point the traffic is flow hashed across the ecmp",
    "start": "1591380",
    "end": "1596820"
  },
  {
    "text": "links the NAT instance will make routing decisions internally when it determines that it needs to go",
    "start": "1596820",
    "end": "1602970"
  },
  {
    "text": "out to the Internet gateway it will put it back onto the subnet within the V PC",
    "start": "1602970",
    "end": "1609540"
  },
  {
    "text": "that packet will go through the implicit router and onto the Internet gateway",
    "start": "1609540",
    "end": "1614810"
  },
  {
    "text": "return traffic same as before received by the NAT which has done a source net so it's going back to the",
    "start": "1614930",
    "end": "1620760"
  },
  {
    "text": "same one the 10.2 does here about 20 address is reset as the destination",
    "start": "1620760",
    "end": "1627560"
  },
  {
    "text": "packets received by transit gateway the associated wrap tables consulted and the",
    "start": "1627560",
    "end": "1633390"
  },
  {
    "text": "packet is forwarded to the attachment for V PCB so again trade-offs here this",
    "start": "1633390",
    "end": "1640770"
  },
  {
    "text": "is a this takes a little bit more effort to set up you have no bandwidth throughput limitations at least not",
    "start": "1640770",
    "end": "1646770"
  },
  {
    "text": "theoretical bandwidth throughput limitations in this one you can continue to scale your NAT instances in the prior",
    "start": "1646770",
    "end": "1652470"
  },
  {
    "text": "example the attachments will burst up to 50 gigabits per second in this one you could continue to scale horizontally the",
    "start": "1652470",
    "end": "1660030"
  },
  {
    "text": "challenge with this one however is I mentioned that ecmp is flow hashing the connections so if there is a change in",
    "start": "1660030",
    "end": "1665610"
  },
  {
    "text": "the configuration of the edges right the number of VPN attachments that we have",
    "start": "1665610",
    "end": "1670740"
  },
  {
    "text": "then your flow could be rehashed if you have a stateful firewall incapability that will likely cause a connection",
    "start": "1670740",
    "end": "1676680"
  },
  {
    "text": "reset let's look at an ingress use case",
    "start": "1676680",
    "end": "1682340"
  },
  {
    "start": "1679000",
    "end": "1679000"
  },
  {
    "text": "so we've got our VP SE and on the Left it's attached to a vbc route domain we",
    "start": "1682340",
    "end": "1689130"
  },
  {
    "text": "have our edge V PC on the right again using the VPN ecmp approach A's routes",
    "start": "1689130",
    "end": "1695340"
  },
  {
    "text": "are propagated to the edge route domain the instances on the right they",
    "start": "1695340",
    "end": "1701340"
  },
  {
    "text": "propagate their routes to the V PC route domain so let's see what it looks like for traffic that's coming into the",
    "start": "1701340",
    "end": "1706710"
  },
  {
    "text": "environment for fun we'll put an elastic load balancing load balancer on the front of it to load bounce the packets",
    "start": "1706710",
    "end": "1713430"
  },
  {
    "text": "across the front ends packet comes in to the net instance the target workloads",
    "start": "1713430",
    "end": "1719040"
  },
  {
    "text": "determined that instance then makes a change for the target right the destination address so let's say 10.10",
    "start": "1719040",
    "end": "1724770"
  },
  {
    "text": "10 and resets itself to source net with its 100 dot 64 address that packet is",
    "start": "1724770",
    "end": "1731400"
  },
  {
    "text": "sent down the VPN tunnel when it's received by the AWS transit gateway the packet is assessed against The",
    "start": "1731400",
    "end": "1738809"
  },
  {
    "text": "Associated route table for that attachment The Associated route table says the next top is the attachment for",
    "start": "1738809",
    "end": "1745830"
  },
  {
    "text": "VP CA the packets delivered when 10.10 to attend wants to return the packet",
    "start": "1745830",
    "end": "1751169"
  },
  {
    "text": "sends it to the implicit router VPC route table is consulted 164 remember",
    "start": "1751169",
    "end": "1756989"
  },
  {
    "text": "that was the source that address is the next top to the transit gateway transit",
    "start": "1756989",
    "end": "1762509"
  },
  {
    "text": "gateway has a route to the VPN it's delivered back to the source NAT and",
    "start": "1762509",
    "end": "1769369"
  },
  {
    "text": "onwards to the Internet gateway one last",
    "start": "1769369",
    "end": "1778230"
  },
  {
    "start": "1777000",
    "end": "1777000"
  },
  {
    "text": "use case and I'll just forewarn you that when you think I'm done I'm only halfway so hold on so we're going to do V PC - V",
    "start": "1778230",
    "end": "1787200"
  },
  {
    "text": "PC inspection so tend to die 0.20 wants to talk to 10.10 dot ten the",
    "start": "1787200",
    "end": "1795899"
  },
  {
    "text": "configuration is very similar to what we did before for the centralized V PC using VPN so I won't go over the whole",
    "start": "1795899",
    "end": "1802139"
  },
  {
    "text": "configuration again well let's watch how the packet will flow here keeping in mind that I've taken away the blackhole",
    "start": "1802139",
    "end": "1808289"
  },
  {
    "text": "route so 10.20 220 originates the packet goes to the implicit router on the",
    "start": "1808289",
    "end": "1813359"
  },
  {
    "text": "subnet route table lookup occurs 10/8 is available via the transit gateway when",
    "start": "1813359",
    "end": "1820289"
  },
  {
    "text": "it's received through the attachment route lookup and The Associated route",
    "start": "1820289",
    "end": "1825299"
  },
  {
    "text": "table default route points to the V PC attached the VPN attachments in this",
    "start": "1825299",
    "end": "1833730"
  },
  {
    "text": "case the VPN attachments are receiving the routes for these V PC subnets so I",
    "start": "1833730",
    "end": "1843739"
  },
  {
    "text": "mentioned earlier that in the case of a VPN attachment the VPNs will receive",
    "start": "1843739",
    "end": "1849899"
  },
  {
    "text": "over BGP the routes in the associated route table so if you notice the inline V PC route table only has the default",
    "start": "1849899",
    "end": "1856320"
  },
  {
    "text": "gateway route and that's so that these instances can actually reach out to the public IPS that terminate the",
    "start": "1856320",
    "end": "1862080"
  },
  {
    "text": "site-to-site VPN but the actual routing the 10.1 and 10.2 addresses are known to",
    "start": "1862080",
    "end": "1867450"
  },
  {
    "text": "the instance route table because it's participating in bgp in the VPC Rock table for the inline V PC does",
    "start": "1867450",
    "end": "1875380"
  },
  {
    "text": "not actually need that route data so the packets gone through that NAT instance it's been returned they're inbound",
    "start": "1875380",
    "end": "1881889"
  },
  {
    "text": "packet remembers going to 10.10 at 10:00 but at this point it's been sourced and added so it looks like it's coming from",
    "start": "1881889",
    "end": "1887590"
  },
  {
    "text": "100 dot 64 when it's received by the transit gateway The Associated route tables consulted the packets for dodon",
    "start": "1887590",
    "end": "1893919"
  },
  {
    "text": "two attachment B I'm halfway so now the",
    "start": "1893919",
    "end": "1899340"
  },
  {
    "text": "10.1 done 0.10 instance is going to send a response to 10.2 20 and i think you",
    "start": "1899340",
    "end": "1905350"
  },
  {
    "text": "know how this goes at this point the packets for did the V PC subnet has a",
    "start": "1905350",
    "end": "1912220"
  },
  {
    "text": "route to 1064 point to the transit gateway the transit gate we has a route point to the V PC attached the VPN",
    "start": "1912220",
    "end": "1918899"
  },
  {
    "text": "attachments in the VPN that source that is reversed passed back to the transit",
    "start": "1918899",
    "end": "1926409"
  },
  {
    "text": "gateway 10.2 route exists and points to the attachment for V PCB so let me",
    "start": "1926409",
    "end": "1934630"
  },
  {
    "text": "reiterate the thing that I said at the beginning of the session all of these things work and you can do them talk to",
    "start": "1934630",
    "end": "1941980"
  },
  {
    "text": "your essay before deciding you need to so let's look at a reference architecture we talked about flood and",
    "start": "1941980",
    "end": "1949510"
  },
  {
    "start": "1946000",
    "end": "1946000"
  },
  {
    "text": "segmented common use cases we've also talked about how to address traffic outbound and inbound from the internet",
    "start": "1949510",
    "end": "1956289"
  },
  {
    "text": "and I can do inline services for both east-west and north-south if you want to",
    "start": "1956289",
    "end": "1963370"
  },
  {
    "start": "1962000",
    "end": "1962000"
  },
  {
    "text": "tie together transit gateway in multiple regions you have a couple of options well you have one option at the moment",
    "start": "1963370",
    "end": "1969669"
  },
  {
    "text": "which is to use our transit VPC pattern so you have a hub set of VPN appliances",
    "start": "1969669",
    "end": "1975669"
  },
  {
    "text": "that are participating with transit gateways to provide connectivity of",
    "start": "1975669",
    "end": "1981179"
  },
  {
    "text": "course if you're just connecting to V pcs you can use inter region peering with V PC Atos transit gateway does have",
    "start": "1981179",
    "end": "1990070"
  },
  {
    "text": "inter region support coming soon now the",
    "start": "1990070",
    "end": "1995529"
  },
  {
    "text": "last thing that I wanted to share with you is a pattern that we've seen start to emerge with customers and I want to go through it largely because we're",
    "start": "1995529",
    "end": "2002399"
  },
  {
    "text": "seeing some anti patterns and how customers are trying to deliver this type of architecture so we want to give it to",
    "start": "2002399",
    "end": "2009059"
  },
  {
    "text": "you very specifically so you know what to do if you want to implement a similar architecture what we're going to try and",
    "start": "2009059",
    "end": "2015809"
  },
  {
    "text": "do here is have a shared services VP see where all of our key resources exist VPC",
    "start": "2015809",
    "end": "2022020"
  },
  {
    "text": "endpoints powered by private link route 53 resolver connectivity is available to",
    "start": "2022020",
    "end": "2027450"
  },
  {
    "text": "and from it and through the VPN and direct connect gateway from our",
    "start": "2027450",
    "end": "2032670"
  },
  {
    "text": "on-premises environment so let's start to build this now for this particular",
    "start": "2032670",
    "end": "2039360"
  },
  {
    "text": "configuration I tested this with a session manager a session manager just",
    "start": "2039360",
    "end": "2044700"
  },
  {
    "text": "if you don't know is a fully managed AWS Systems Manager capability that allows you to manage Amazon ec2 instances",
    "start": "2044700",
    "end": "2052020"
  },
  {
    "text": "through an interactive one-click based shell or through the AWS CLI so session",
    "start": "2052020",
    "end": "2058408"
  },
  {
    "text": "manager effectively provides you the secure and more importantly auditable instance management without the need to",
    "start": "2058409",
    "end": "2064950"
  },
  {
    "text": "open inbound ports or maintain bastions or might rotate and maintain SSH keys it's a very very powerful capability and",
    "start": "2064950",
    "end": "2071878"
  },
  {
    "text": "it also works through VPC endpoints using private link so you can have a completely isolated V PC and be able to",
    "start": "2071879",
    "end": "2079138"
  },
  {
    "text": "get into instances using a I excuse me I am authentication so I'm going to use",
    "start": "2079139",
    "end": "2085800"
  },
  {
    "text": "that as my V PC endpoint so let's start to build this so the first thing I need",
    "start": "2085800",
    "end": "2092370"
  },
  {
    "text": "to do is I'm going to share my transit gateway with the other V PC instances",
    "start": "2092370",
    "end": "2099060"
  },
  {
    "text": "and I should note that the V PC instance for development and test are in their",
    "start": "2099060",
    "end": "2104520"
  },
  {
    "text": "own isolated accounts production and the shared services V PC or in a common organization and the AWS transit gateway",
    "start": "2104520",
    "end": "2111870"
  },
  {
    "text": "is what's created by and effectively is owned by the shared services V PC so I",
    "start": "2111870",
    "end": "2117240"
  },
  {
    "text": "need to use AWS resources access manager to share this transit gateway with the other V pcs so I'll create a share I'll",
    "start": "2117240",
    "end": "2124350"
  },
  {
    "text": "define the shared resource which is my transit gateway I'll define the principles that I'm sharing it with in",
    "start": "2124350",
    "end": "2131010"
  },
  {
    "text": "this case you see an account for development and account for testing and the organization",
    "start": "2131010",
    "end": "2137010"
  },
  {
    "text": "that includes the production VPC in each of those V pcs I will accept I should",
    "start": "2137010",
    "end": "2144390"
  },
  {
    "text": "say in each of those accounts I will accept the resource share and that allows me then to create attachments to",
    "start": "2144390",
    "end": "2150000"
  },
  {
    "text": "the transit gateway so at this point and I'm using a default configuration single route table single Association single",
    "start": "2150000",
    "end": "2156510"
  },
  {
    "text": "propagation point at this point I have connectivity between all four of these V pcs and my on-premises environment ok",
    "start": "2156510",
    "end": "2164570"
  },
  {
    "text": "the next thing I want to do is set up the V PC endpoints for sessions manager",
    "start": "2164570",
    "end": "2169800"
  },
  {
    "text": "there are three of them so to do that I will provision these V PC endpoints powered by private link in the shared",
    "start": "2169800",
    "end": "2176460"
  },
  {
    "text": "services V PC when you provision your V PC endpoint you have this option enable",
    "start": "2176460",
    "end": "2183690"
  },
  {
    "text": "private DNS name and I wanted to spend a moment talking about this because this is where we're seeing a common",
    "start": "2183690",
    "end": "2188790"
  },
  {
    "text": "anti-pattern if you check this box what will happen behind the scenes is AWS",
    "start": "2188790",
    "end": "2195000"
  },
  {
    "text": "will create for you a route 53 private hosted zone and we will associate that",
    "start": "2195000",
    "end": "2200430"
  },
  {
    "text": "with the shared services V PC and the effect of that is that when you resolve the public dns name for let's say SSM US",
    "start": "2200430",
    "end": "2209820"
  },
  {
    "text": "east to that Amazon AWS com you'll get back the private IP address and that's",
    "start": "2209820",
    "end": "2215310"
  },
  {
    "text": "the behavior that you want but if Amazon is created that private house is done for you you have no mechanism to share",
    "start": "2215310",
    "end": "2222420"
  },
  {
    "text": "that with your other V pcs so what we'll do instead is we will not check this we",
    "start": "2222420",
    "end": "2228330"
  },
  {
    "text": "will leave it as it is and we'll get back after the creation an endpoint specific DNS host name for the V PC",
    "start": "2228330",
    "end": "2234810"
  },
  {
    "text": "endpoint then we can create a private hosted zone at the apex in this case SSM",
    "start": "2234810",
    "end": "2242850"
  },
  {
    "text": "US east to Amazon AWS comm create an alias record at the apex pointing to",
    "start": "2242850",
    "end": "2250050"
  },
  {
    "text": "that endpoint specific host name and then using the AWS CLI or api's we can",
    "start": "2250050",
    "end": "2257730"
  },
  {
    "text": "share that private hosted zone to the other accounts note that sharing of a",
    "start": "2257730",
    "end": "2266610"
  },
  {
    "text": "private hosted zone between accounts outside the accountant is owning the private",
    "start": "2266610",
    "end": "2272670"
  },
  {
    "text": "asset zone can only be done via the CLI or the API but it is possible so please",
    "start": "2272670",
    "end": "2278190"
  },
  {
    "text": "do not use route 53 resolvers to talk to themselves to communicate zone information so at this point if a box in",
    "start": "2278190",
    "end": "2286770"
  },
  {
    "text": "the development VPC wants to get the IP address for SSM USC students on a dubious comm it will create its dot -",
    "start": "2286770",
    "end": "2294450"
  },
  {
    "text": "resolver it will get back the private IP address and it has network connectivity it can get to it now I also said that I",
    "start": "2294450",
    "end": "2302040"
  },
  {
    "text": "wanted to enable connectivity to the on-premises environment so what we'll do",
    "start": "2302040",
    "end": "2307170"
  },
  {
    "text": "here is establish using route 53 resolver endpoints the ability to",
    "start": "2307170",
    "end": "2313830"
  },
  {
    "text": "resolve from our corporate infrastructure and resolve from our VP",
    "start": "2313830",
    "end": "2319830"
  },
  {
    "text": "C's for the appropriate zones so for example I want the corporate infrastructure to be able to get to that",
    "start": "2319830",
    "end": "2325770"
  },
  {
    "text": "SSM private endpoint and I want the development accountant for example to be able to resolve Corp internal addresses",
    "start": "2325770",
    "end": "2333500"
  },
  {
    "text": "will use route 53 resolver endpoints to do this there are two types of resolver endpoints there is an outbound resolver",
    "start": "2333500",
    "end": "2340590"
  },
  {
    "text": "endpoint which allows queries in the awsm AWS cloud to be conditionally",
    "start": "2340590",
    "end": "2345840"
  },
  {
    "text": "forwarded to an on-premises DNS server and conversely we also have the notion",
    "start": "2345840",
    "end": "2351150"
  },
  {
    "text": "of an inbound route 53 resolver and point that allows the on-premises environment to conditionally forward to",
    "start": "2351150",
    "end": "2358110"
  },
  {
    "text": "AWS to get route resolution for things like private hosted zones so that's all",
    "start": "2358110",
    "end": "2364410"
  },
  {
    "text": "well and good the corporate infrastructure has the ability now to resolve that SSM fully qualified domain",
    "start": "2364410",
    "end": "2371760"
  },
  {
    "text": "name it will get the internal IP address it has the connectivity and the shared",
    "start": "2371760",
    "end": "2376920"
  },
  {
    "text": "services VPC can resolve Corp dot internal addresses but at this moment the development testing and production",
    "start": "2376920",
    "end": "2382710"
  },
  {
    "text": "organizations cannot they need access to that outbound endpoint to do that you'll",
    "start": "2382710",
    "end": "2388800"
  },
  {
    "text": "again use AWS resource access manager and the resource access manager will let you create an outbound rule that you can",
    "start": "2388800",
    "end": "2395310"
  },
  {
    "text": "then share with the other three VP sees you accept that rule and now when the an",
    "start": "2395310",
    "end": "2403710"
  },
  {
    "text": "instance in the development PC wants to make a query to resolve Corp tout internal it makes that request to",
    "start": "2403710",
    "end": "2409560"
  },
  {
    "text": "its dot to DNS server in the background route 53 resolver will make a query",
    "start": "2409560",
    "end": "2415020"
  },
  {
    "text": "through the outbound endpoint to the on-premises environment receive the information and then return it to the",
    "start": "2415020",
    "end": "2421320"
  },
  {
    "text": "instance in the development account please use this as a reference architecture and I'll just say it again",
    "start": "2421320",
    "end": "2427650"
  },
  {
    "text": "because we've seen it as a common anti-pattern please do not connect inbound and outbound endpoints to",
    "start": "2427650",
    "end": "2433830"
  },
  {
    "text": "communicate own information we have the ability for you to share private hosted zones and for you to share outbound",
    "start": "2433830",
    "end": "2439050"
  },
  {
    "text": "endpoints some parting thoughts for you",
    "start": "2439050",
    "end": "2446870"
  },
  {
    "text": "so as I'm wrapping up the session here things to think about the tgw provides",
    "start": "2446870",
    "end": "2452280"
  },
  {
    "text": "customers a centralized place to simplify at scale VPC and on-premises",
    "start": "2452280",
    "end": "2460290"
  },
  {
    "text": "connectivity the TW provides ecmp for VPN attachment types that allows you to",
    "start": "2460290",
    "end": "2467010"
  },
  {
    "text": "scale your VPN connectivity horizontally and the TG UW provides you robust",
    "start": "2467010",
    "end": "2472320"
  },
  {
    "text": "routing capabilities through the use of route domains and as you've probably",
    "start": "2472320",
    "end": "2479640"
  },
  {
    "start": "2477000",
    "end": "2477000"
  },
  {
    "text": "heard the vast majority of our roadmap more than 95 percent of it comes from our customers if you have input on how",
    "start": "2479640",
    "end": "2488040"
  },
  {
    "text": "we can deliver additional benefits to you using the transit gateway please let",
    "start": "2488040",
    "end": "2493140"
  },
  {
    "text": "us know we want to hear from you I want to thank all of you for joining me and I hope this session helps you better",
    "start": "2493140",
    "end": "2498630"
  },
  {
    "text": "understand tgw its capabilities and the flexibility and affords I'm happy to",
    "start": "2498630",
    "end": "2503670"
  },
  {
    "text": "take questions out on the site afterwards enjoy the summit and thanks for your time",
    "start": "2503670",
    "end": "2508770"
  },
  {
    "text": "[Applause]",
    "start": "2508770",
    "end": "2511860"
  }
]