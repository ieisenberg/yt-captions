[
  {
    "start": "0",
    "end": "59000"
  },
  {
    "text": "good afternoon everyone this is building data-driven high performance internal",
    "start": "199",
    "end": "6629"
  },
  {
    "text": "scale application with a de Rais databases will go through reference",
    "start": "6629",
    "end": "12480"
  },
  {
    "text": "architectures and giving you the best practices the right tool to build your",
    "start": "12480",
    "end": "19410"
  },
  {
    "text": "internet scale applications internet apps but with the data focus so that's",
    "start": "19410",
    "end": "26220"
  },
  {
    "text": "why there's this Abra's database in the title and achieving high performance and",
    "start": "26220",
    "end": "31529"
  },
  {
    "text": "real time very important for Internet application my name is pastor LeBlanc",
    "start": "31529",
    "end": "38550"
  },
  {
    "text": "I'm a solution architect based out of the London office and I'm very pleased",
    "start": "38550",
    "end": "43950"
  },
  {
    "text": "to be joined by Phil Mac Mahon from The Guardian that will talk about a his",
    "start": "43950",
    "end": "49440"
  },
  {
    "text": "story around migrating from MongoDB to are the u.s. post gray and the why and",
    "start": "49440",
    "end": "55469"
  },
  {
    "text": "the how they did it so we'll start with",
    "start": "55469",
    "end": "60539"
  },
  {
    "start": "59000",
    "end": "96000"
  },
  {
    "text": "explaining what we think of modern internet app at scale and dig into",
    "start": "60539",
    "end": "66720"
  },
  {
    "text": "specifically databases then Phil will go",
    "start": "66720",
    "end": "71909"
  },
  {
    "text": "through and the white hand how they moved to ODS post gray and I'll wrap up",
    "start": "71909",
    "end": "77369"
  },
  {
    "text": "with talking about real-time applications and how does it mean and",
    "start": "77369",
    "end": "83130"
  },
  {
    "text": "how to implement things like elastic cash or dynamo DB accelerator so what",
    "start": "83130",
    "end": "92340"
  },
  {
    "text": "are internet scale apps so when developing new apps for the cloud you",
    "start": "92340",
    "end": "99240"
  },
  {
    "start": "96000",
    "end": "160000"
  },
  {
    "text": "have to remember that these threes apps are very different characteristics from",
    "start": "99240",
    "end": "105450"
  },
  {
    "text": "the user point of view they can go from 0 to millions users very quickly from",
    "start": "105450",
    "end": "111840"
  },
  {
    "text": "the user point of view also its global by nature when you deploy a new app you",
    "start": "111840",
    "end": "118740"
  },
  {
    "text": "don't really expect or know when and how and where it will be deployed so it not",
    "start": "118740",
    "end": "123840"
  },
  {
    "text": "needs to be globally available and the",
    "start": "123840",
    "end": "129360"
  },
  {
    "text": "customer expect and the day application expect a read and write to the database at very",
    "start": "129360",
    "end": "135000"
  },
  {
    "text": "high rates millions of requests as we'll see with the few custom example and The",
    "start": "135000",
    "end": "141030"
  },
  {
    "text": "Guardian - and you can be only one or two of these characteristics global just",
    "start": "141030",
    "end": "146610"
  },
  {
    "text": "hydrate or massive user scale and all these characteristics need to have a",
    "start": "146610",
    "end": "153480"
  },
  {
    "text": "proper and good design applications architecture so these apps for is the",
    "start": "153480",
    "end": "162780"
  },
  {
    "start": "160000",
    "end": "239000"
  },
  {
    "text": "world's largest providers in the words Sam such as Samsung snapchat or",
    "start": "162780",
    "end": "169700"
  },
  {
    "text": "amazon.com and for example for Amazon we peak at 20 million requests per seconds",
    "start": "169700",
    "end": "177570"
  },
  {
    "text": "during large events like the Black Friday and if you think about it 20",
    "start": "177570",
    "end": "183420"
  },
  {
    "text": "million requests per seconds it's really large and if you had tried to do this",
    "start": "183420",
    "end": "190200"
  },
  {
    "text": "with a sequel database even with Aurora you could only achieve about 500k per",
    "start": "190200",
    "end": "197280"
  },
  {
    "text": "seconds on one node and so even with the 15th we duplicates you couldn't even",
    "start": "197280",
    "end": "203610"
  },
  {
    "text": "reach these 20 millions requests per second and that's where dynamodb has been used",
    "start": "203610",
    "end": "211400"
  },
  {
    "text": "massively on the Amazon retail website and also I was mentioning snapchat using",
    "start": "211400",
    "end": "219360"
  },
  {
    "text": "dynamodb to to reach until 150 million active users at peak time Christmas New",
    "start": "219360",
    "end": "227820"
  },
  {
    "text": "Year's think like this and Samsung on the update of users so how did it looks",
    "start": "227820",
    "end": "235290"
  },
  {
    "text": "like from a architecture principle so to achieve the right scale you have",
    "start": "235290",
    "end": "242440"
  },
  {
    "start": "239000",
    "end": "313000"
  },
  {
    "text": "to design your architecture properly that's a one internal scale reference architecture built on a dress so if you",
    "start": "242440",
    "end": "250360"
  },
  {
    "text": "start from the customer point of view which is how you should design your application is look at how the latency",
    "start": "250360",
    "end": "258609"
  },
  {
    "text": "from the user per your view reacts because that's what your customer will see the light the perceived latency so",
    "start": "258610",
    "end": "267970"
  },
  {
    "text": "that's why you should have a proper CDN edge caching at the front and then you",
    "start": "267970",
    "end": "275140"
  },
  {
    "text": "can access one region your compute and your data layer but we",
    "start": "275140",
    "end": "281350"
  },
  {
    "text": "say that internal scale has to be global well you can just deploy replicas in all",
    "start": "281350",
    "end": "289390"
  },
  {
    "text": "the regions data replication on the database on s3 side or on the computer",
    "start": "289390",
    "end": "295960"
  },
  {
    "text": "it's more about deploying the same app into multiple region if you use the",
    "start": "295960",
    "end": "303250"
  },
  {
    "text": "proper infrastructure as code or deployment mechanism API mechanisms you deploy it seamlessly so let's look at",
    "start": "303250",
    "end": "312460"
  },
  {
    "text": "the details of this architecture so the first one as I mentioned critical for",
    "start": "312460",
    "end": "318520"
  },
  {
    "start": "313000",
    "end": "401000"
  },
  {
    "text": "internet application is to have a proper edge set up so if you advise best",
    "start": "318520",
    "end": "325510"
  },
  {
    "text": "practices on this space implement a web application firewall because you are",
    "start": "325510",
    "end": "331780"
  },
  {
    "text": "public facing so you have to protect from here and leverage a CDN like route",
    "start": "331780",
    "end": "339669"
  },
  {
    "text": "front to cache data as closely as possible to your user and also leverage",
    "start": "339669",
    "end": "346840"
  },
  {
    "text": "the origins of cloud funds using behaviors you can route your customer in",
    "start": "346840",
    "end": "355120"
  },
  {
    "text": "different part of the application serving the right tool for the right job",
    "start": "355120",
    "end": "360310"
  },
  {
    "text": "so if you have static assets it's served by s3 if you have servers computers of",
    "start": "360310",
    "end": "366940"
  },
  {
    "text": "by lender for short terms API calls and you have an",
    "start": "366940",
    "end": "373660"
  },
  {
    "text": "you can also run your continued application for low latency gap and all is this is just route by cloud front and",
    "start": "373660",
    "end": "382570"
  },
  {
    "text": "lastly something that is less known about is lambda D edge enables you to do more advanced routing like bot",
    "start": "382570",
    "end": "390850"
  },
  {
    "text": "mitigation or you can have even one specific product page could be served by",
    "start": "390850",
    "end": "396280"
  },
  {
    "text": "this completely different part of your architecture right so talking about",
    "start": "396280",
    "end": "402340"
  },
  {
    "start": "401000",
    "end": "505000"
  },
  {
    "text": "compute now while we set internet scale so you probably think yes I just need to",
    "start": "402340",
    "end": "409030"
  },
  {
    "text": "auto scale and that's fine yes you to scale using a metric and that's the",
    "start": "409030",
    "end": "415840"
  },
  {
    "text": "hardest part so one big advice is think about not in terms of operations metrics",
    "start": "415840",
    "end": "422530"
  },
  {
    "text": "but more on customer business metrics like queueing older man order processed",
    "start": "422530",
    "end": "429400"
  },
  {
    "text": "numbers of connected users latency perceived and that's what the type of",
    "start": "429400",
    "end": "435280"
  },
  {
    "text": "metric you should use for photo scaling and all you just be service and in that",
    "start": "435280",
    "end": "444130"
  },
  {
    "text": "case you don't think about auto scaling variant but you still need to think",
    "start": "444130",
    "end": "449680"
  },
  {
    "text": "about how you manage your concurrency on and thus because you have some",
    "start": "449680",
    "end": "455010"
  },
  {
    "text": "limitations on crew currency and currency is not only request per seconds",
    "start": "455010",
    "end": "460750"
  },
  {
    "text": "it's also a function of the duration of the lambdas so it's a numbers of how",
    "start": "460750",
    "end": "466930"
  },
  {
    "text": "many functions run at the same time so make sure you have the shortest lenders",
    "start": "466930",
    "end": "473530"
  },
  {
    "text": "functions possible and for this this is the few advice is to be a synchronous as",
    "start": "473530",
    "end": "481419"
  },
  {
    "text": "possible and again to go back to your customer as quickly as possible so take",
    "start": "481419",
    "end": "487930"
  },
  {
    "text": "the request reply with an ID and get your processing Dom at the back end with",
    "start": "487930",
    "end": "494200"
  },
  {
    "text": "decoupling using something like SES or step functions to have this proper",
    "start": "494200",
    "end": "502180"
  },
  {
    "text": "management okay but what about the data layer so we",
    "start": "502180",
    "end": "512560"
  },
  {
    "start": "505000",
    "end": "520000"
  },
  {
    "text": "talked about CDN we talked about the compute elastic scaling deployed in multi region but the data layer is",
    "start": "512560",
    "end": "520320"
  },
  {
    "start": "520000",
    "end": "570000"
  },
  {
    "text": "massive and very important and our customers have been moving away from all",
    "start": "520320",
    "end": "526270"
  },
  {
    "text": "guard database vendors to a different model a model of the right tool for the",
    "start": "526270",
    "end": "534010"
  },
  {
    "text": "right job and this is a reference architecture you will get all the slides afterwards so I won't dive into all",
    "start": "534010",
    "end": "540610"
  },
  {
    "text": "these details but use this as a reference but let's consider just a few",
    "start": "540610",
    "end": "546670"
  },
  {
    "text": "examples so if you have a order management just use relational with",
    "start": "546670",
    "end": "552640"
  },
  {
    "text": "strong consistency or if you want to scale very high use a key value store",
    "start": "552640",
    "end": "558000"
  },
  {
    "text": "backed by dynamo DB and we have new use",
    "start": "558000",
    "end": "563320"
  },
  {
    "text": "cases so let's see how it looks from the address services perspective for this",
    "start": "563320",
    "end": "571420"
  },
  {
    "text": "all these categories and we really think that you when you build a new",
    "start": "571420",
    "end": "578050"
  },
  {
    "text": "application you should use the right database for the right job and not having large very large database that",
    "start": "578050",
    "end": "587050"
  },
  {
    "text": "have all the code and all the computing it and all these different access",
    "start": "587050",
    "end": "592060"
  },
  {
    "text": "patterns we really think that when you design an application you design it from the customers perspective and build from",
    "start": "592060",
    "end": "598870"
  },
  {
    "text": "the access perspective and how you will access the data so for example that's",
    "start": "598870",
    "end": "606010"
  },
  {
    "text": "why we build time streams a time series data very specific to time series and we",
    "start": "606010",
    "end": "614170"
  },
  {
    "text": "build qld be a quantum lateral database for cryptographic data and checked",
    "start": "614170",
    "end": "620770"
  },
  {
    "text": "database because our customer needed this and",
    "start": "620770",
    "end": "626040"
  },
  {
    "text": "all these database are can be worked together and I will just take one",
    "start": "626319",
    "end": "633129"
  },
  {
    "text": "example of one of our customer called fender which is the famous guitar",
    "start": "633129",
    "end": "640509"
  },
  {
    "start": "637000",
    "end": "772000"
  },
  {
    "text": "builder looked at ways of building a learning experience building a learning",
    "start": "640509",
    "end": "647470"
  },
  {
    "text": "app called fender play fully on address so they decided to build this using the",
    "start": "647470",
    "end": "655029"
  },
  {
    "text": "classic servlet stack with API gateway lambda functions and DynamoDB which was",
    "start": "655029",
    "end": "661809"
  },
  {
    "text": "working very fine for the gets get me a new lesson update a video update code",
    "start": "661809",
    "end": "670919"
  },
  {
    "text": "data works very well but then this they",
    "start": "670919",
    "end": "675970"
  },
  {
    "text": "thought about all the use cases like searching for a specific artist or specific type of lesson and DynamoDB was",
    "start": "675970",
    "end": "687519"
  },
  {
    "text": "not designed for this you can't search in in a fuzzy way in dynamo just get",
    "start": "687519",
    "end": "693100"
  },
  {
    "text": "data put data and it's very expensive in terms of time to search in a dynamo DB",
    "start": "693100",
    "end": "700809"
  },
  {
    "text": "table so that's why they introduced also in the mix elastic search which is",
    "start": "700809",
    "end": "706720"
  },
  {
    "text": "another way of storing data and enable a fuzzy search or a more easy way to work",
    "start": "706720",
    "end": "715600"
  },
  {
    "text": "and very seamless between the two work together so the they reached like 40",
    "start": "715600",
    "end": "722799"
  },
  {
    "text": "invocations per seconds on the lambdas terabytes in in s3 and they'll going",
    "start": "722799",
    "end": "728079"
  },
  {
    "text": "global it's a US company it's it's around available everywhere just install the",
    "start": "728079",
    "end": "733749"
  },
  {
    "text": "app and you can write it so they designed it to be global by Nature",
    "start": "733749",
    "end": "739299"
  },
  {
    "text": "as we can be replicated to be close to your user and dynamo has this great",
    "start": "739299",
    "end": "745569"
  },
  {
    "text": "feature called global tables which is a new single click you can get the table in several region",
    "start": "745569",
    "end": "753989"
  },
  {
    "text": "so with this I wanted you to give Phil",
    "start": "755050",
    "end": "760940"
  },
  {
    "text": "the bike come on Steph thank you on how they moved former",
    "start": "760940",
    "end": "767450"
  },
  {
    "text": "mongodb to audience okay thank you okay",
    "start": "767450",
    "end": "773360"
  },
  {
    "text": "so my name is Philip and I'm a software developer at the Guardian currently working on the Guardian comm website",
    "start": "773360",
    "end": "779870"
  },
  {
    "text": "which hopefully some of you will have come across but what I'm going to talk about today is products made by the",
    "start": "779870",
    "end": "786110"
  },
  {
    "text": "Guardians editorial tools team which is the tool responsible for creating all",
    "start": "786110",
    "end": "792110"
  },
  {
    "text": "the articles and live blogs that you see on the website so the editorial tools",
    "start": "792110",
    "end": "800180"
  },
  {
    "start": "796000",
    "end": "864000"
  },
  {
    "text": "that the Guardian is largely done in-house so we have over 20 different micro services which handle everything",
    "start": "800180",
    "end": "807170"
  },
  {
    "text": "from article creation picture management production following all the way through",
    "start": "807170",
    "end": "814370"
  },
  {
    "text": "to like really important things like crosswords and it's where mostly we're",
    "start": "814370",
    "end": "819650"
  },
  {
    "text": "almost entirely AWS shop mostly with a skylit backend and then using a mix of",
    "start": "819650",
    "end": "826310"
  },
  {
    "text": "react and angular or whatever on the front end the vast majority of our",
    "start": "826310",
    "end": "832160"
  },
  {
    "text": "services are running straight on ec2 boxes with an increasing amount of lambda lambda as well and from a",
    "start": "832160",
    "end": "839990"
  },
  {
    "text": "database perspective we're just using whatever tool for jobs so DynamoDB is the go-to for a lot of our smaller",
    "start": "839990",
    "end": "847970"
  },
  {
    "text": "applications we using RDS elastic search for a picture system which needs to",
    "start": "847970",
    "end": "853610"
  },
  {
    "text": "handle searching over millions of photos and give pictures back to journalists as quickly as possible so they can report",
    "start": "853610",
    "end": "860000"
  },
  {
    "text": "on it for live news and we're using s3 as well for some use cases so the tall",
    "start": "860000",
    "end": "865820"
  },
  {
    "start": "864000",
    "end": "893000"
  },
  {
    "text": "I'm going to talk about today is called composer and it handles the publication",
    "start": "865820",
    "end": "872030"
  },
  {
    "text": "of the four hundred or so pieces of content that get published the Guardian website each day it's not a user facing",
    "start": "872030",
    "end": "880510"
  },
  {
    "text": "kind of application so every time someone all the data from from composer",
    "start": "880510",
    "end": "889550"
  },
  {
    "text": "gets sent off to a Guardians content API by Kinesis which has actually handles",
    "start": "889550",
    "end": "897290"
  },
  {
    "text": "the serving of the content for all our various applications one of the but the",
    "start": "897290",
    "end": "905150"
  },
  {
    "text": "kind of critical things with composer is that we need 100% uptime because if there's some kind of major news event",
    "start": "905150",
    "end": "911690"
  },
  {
    "text": "like a surprise election or some kind of natural disaster we need to be able to send the alert out immediately and I",
    "start": "911690",
    "end": "919910"
  },
  {
    "text": "don't want to be the developer telling a journalist that the publication system's down in the middle of some kind of",
    "start": "919910",
    "end": "926090"
  },
  {
    "text": "critical news event it's also the source of truth for everything on the Guardian so we've been publishing online for",
    "start": "926090",
    "end": "932750"
  },
  {
    "text": "around 30 years now and that's generated two and a half million pieces of content which is basically all we are everything",
    "start": "932750",
    "end": "939080"
  },
  {
    "text": "we've produced in that time so it's very important we don't lose our data and",
    "start": "939080",
    "end": "944300"
  },
  {
    "text": "then because we still things like metadata such as he was the last person to edit a particular article in composer",
    "start": "944300",
    "end": "951640"
  },
  {
    "text": "we need to Security's very important and so we have a hard requirement of",
    "start": "951640",
    "end": "957500"
  },
  {
    "text": "encryption at rest for all data but as I mentioned it's not responsible for",
    "start": "957500",
    "end": "962750"
  },
  {
    "text": "serving content that's funded by a separate system so this is the architecture we had before the migration",
    "start": "962750",
    "end": "970010"
  },
  {
    "start": "964000",
    "end": "1009000"
  },
  {
    "text": "to IDs so it's a pretty standard set up we've got an API there in the middle",
    "start": "970010",
    "end": "975370"
  },
  {
    "text": "communicating with a MongoDB database and that MongoDB was just running on ec2",
    "start": "975370",
    "end": "981620"
  },
  {
    "text": "instances it wasn't a managed set up and then we've got two client applications",
    "start": "981620",
    "end": "987080"
  },
  {
    "text": "one serving the front turns which I showed the screenshot of and then an integration system which ties that with",
    "start": "987080",
    "end": "992150"
  },
  {
    "text": "all the the Guardians printing systems crosswords video things like that and",
    "start": "992150",
    "end": "997310"
  },
  {
    "text": "then every time a change is made to a piece of content we save it to the database and we also post a message on",
    "start": "997310",
    "end": "1002560"
  },
  {
    "text": "the Kinesis stream to keep the Guardians content API up to date",
    "start": "1002560",
    "end": "1008400"
  },
  {
    "start": "1009000",
    "end": "1074000"
  },
  {
    "text": "so why did we end up using MongoDB to start with so this application was made",
    "start": "1009310",
    "end": "1015800"
  },
  {
    "text": "about six years ago and at the time we were coming off the",
    "start": "1015800",
    "end": "1022370"
  },
  {
    "text": "back of the Guardian was using Oracle and it was costing us a fortune and we",
    "start": "1022370",
    "end": "1027438"
  },
  {
    "text": "were basically looking for any kind of open source alternative the motivation",
    "start": "1027439",
    "end": "1034490"
  },
  {
    "text": "for going towards was that composer started off its life as a live blog editor but we didn't really know",
    "start": "1034490",
    "end": "1039500"
  },
  {
    "text": "where it would be going next and it ended up doing articles galleries etc so having a document datastore with a",
    "start": "1039500",
    "end": "1044750"
  },
  {
    "text": "flexible schema was a great advantage and we also didn't know how much we'd end up needing to scale this application",
    "start": "1044750",
    "end": "1051050"
  },
  {
    "text": "at the time the Guardian was opening offices around the world and we knew the CMS would need to scale as we hired more",
    "start": "1051050",
    "end": "1058340"
  },
  {
    "text": "journalists and to be honest did",
    "start": "1058340",
    "end": "1063470"
  },
  {
    "text": "the job for us from a performance perspective we didn't really have any issues the trouble started coming as we",
    "start": "1063470",
    "end": "1073480"
  },
  {
    "text": "started kind of managing it in the cloud so about three years ago the guys you",
    "start": "1073480",
    "end": "1078560"
  },
  {
    "start": "1074000",
    "end": "1161000"
  },
  {
    "text": "moved all its services from our basement in the office which was vulnerable to lots of air conditioning outages into",
    "start": "1078560",
    "end": "1084890"
  },
  {
    "text": "Amazon and so we started running",
    "start": "1084890",
    "end": "1091070"
  },
  {
    "text": "in the clouds together with management software provided by MongoDB and and",
    "start": "1091070",
    "end": "1097420"
  },
  {
    "text": "probably the kind of biggest challenge",
    "start": "1097420",
    "end": "1102950"
  },
  {
    "text": "we have with this was actually the difficulty of running so the two longest outages we've had at the",
    "start": "1102950",
    "end": "1108470"
  },
  {
    "text": "publication system at the Guardian have been as a result of issues with the  datastore the first time was",
    "start": "1108470",
    "end": "1115460"
  },
  {
    "text": "because we hadn't configured NTP properly I am so that basically the time when our boxes got out of sync and",
    "start": "1115460",
    "end": "1121670"
  },
  {
    "text": "suddenly they can authenticate with each other anymore a very bad thing to happen in another case the generation of a new",
    "start": "1121670",
    "end": "1130160"
  },
  {
    "text": "end ex ended up like causing some downtime of the database",
    "start": "1130160",
    "end": "1135280"
  },
  {
    "text": "so we're application developers we wanted to be making tools for journalists not spending our time doing",
    "start": "1135280",
    "end": "1141170"
  },
  {
    "text": "DB admins we were really keen to move away from managing into some kind of managed",
    "start": "1141170",
    "end": "1147120"
  },
  {
    "text": "solution at the same time the Guardians not got pots of money and was costing us a lot both in infrastructure",
    "start": "1147120",
    "end": "1154139"
  },
  {
    "text": "and in the support contract so there was another motivation there to change our database system so how do we end up",
    "start": "1154139",
    "end": "1164159"
  },
  {
    "start": "1161000",
    "end": "1247000"
  },
  {
    "text": "picking RDF so as I mentioned we kind of had a preference for using something",
    "start": "1164159",
    "end": "1169980"
  },
  {
    "text": "within Amazon Web Services because we were using it so heavily elsewhere but",
    "start": "1169980",
    "end": "1176669"
  },
  {
    "text": "we did consider other platforms as well but at the time none of them supported",
    "start": "1176669",
    "end": "1181820"
  },
  {
    "text": "the hard requirement we had for encryption at rest so the obvious option",
    "start": "1181820",
    "end": "1191820"
  },
  {
    "text": "then was kind of dynamodb we've got a no sequel document datastore we want to replace it with dynamodb which at the",
    "start": "1191820",
    "end": "1197610"
  },
  {
    "text": "time was Amazon's main document datastore offering but at the time it only supported five indexes",
    "start": "1197610",
    "end": "1204509"
  },
  {
    "text": "and didn't support encryption at rest so for us it wasn't an issue obviously that's all since changed those features",
    "start": "1204509",
    "end": "1211230"
  },
  {
    "text": "have been launched and DynamoDB but we're using postgrads with success fairly heavy and a lot of",
    "start": "1211230",
    "end": "1218399"
  },
  {
    "text": "our other tools in we discovered that in recent versions of post res there was",
    "start": "1218399",
    "end": "1224159"
  },
  {
    "text": "support for Jason be columns which what we hoped meant that we could switch to RDS on Postgres without having to",
    "start": "1224159",
    "end": "1230820"
  },
  {
    "text": "completely rewrite our schema into a kind of relational model and get away with a fairly kind of lazy migration by",
    "start": "1230820",
    "end": "1238169"
  },
  {
    "text": "using the Jason B columns for our content model so that's what we did and",
    "start": "1238169",
    "end": "1248059"
  },
  {
    "start": "1247000",
    "end": "1284000"
  },
  {
    "text": "this is the schema we ended up with so we've got two columns an ID and a",
    "start": "1248059",
    "end": "1253889"
  },
  {
    "text": "massive content Jason B blob which is basically the same as what we had in",
    "start": "1253889",
    "end": "1259470"
  },
  {
    "text": " and the reason we get away with this is because about the vast majority",
    "start": "1259470",
    "end": "1264539"
  },
  {
    "text": "of our queries are key value lookups there's just a few cases where we need indexes on fields embedded within the",
    "start": "1264539",
    "end": "1271649"
  },
  {
    "text": "document model and we're running with this now live we",
    "start": "1271649",
    "end": "1278410"
  },
  {
    "text": "have been doing so for every year and and we've we've got away with it we haven't had any performance problems",
    "start": "1278410",
    "end": "1284680"
  },
  {
    "start": "1284000",
    "end": "1345000"
  },
  {
    "text": "from this but it wasn't straightforward this some of the queries we were able to",
    "start": "1284680",
    "end": "1291790"
  },
  {
    "text": "do in MongoDB we're a bit of a pain to migrate once we were using JSON B column",
    "start": "1291790",
    "end": "1297610"
  },
  {
    "text": "for all of our data so this is like my attempt at rewriting the add two set",
    "start": "1297610",
    "end": "1302620"
  },
  {
    "text": "option which we had available in when I wrote rewrote it into Postgres on",
    "start": "1302620",
    "end": "1309760"
  },
  {
    "text": "this Jason B column it got a lot more complicated to say at the top there you've got the kind of set content",
    "start": "1309760",
    "end": "1315760"
  },
  {
    "text": "equals and then doing the insert so I should say the add two set operation in  allows you to add something to an",
    "start": "1315760",
    "end": "1322420"
  },
  {
    "text": "array somewhere in your document model and if it's already there it won't add it so in Postgres there's a single line",
    "start": "1322420",
    "end": "1329620"
  },
  {
    "text": "and in post-prison it looks more like this so you have the command to actually add it somewhere within your document and then the where statement to",
    "start": "1329620",
    "end": "1339460"
  },
  {
    "text": "check that you haven't but it's not already there so it's it's not idea it's",
    "start": "1339460",
    "end": "1345280"
  },
  {
    "start": "1345000",
    "end": "1378000"
  },
  {
    "text": "quite messy it works another challenge was making sure that our indexes that were on that Jason B column were being",
    "start": "1345280",
    "end": "1353560"
  },
  {
    "text": "used and we're performing well so you can do indexes on Jason B but you have to make sure that any syntax you use to",
    "start": "1353560",
    "end": "1360190"
  },
  {
    "text": "query the database is the same as the syntax used when you're creating your Jason B index which can catch people out",
    "start": "1360190",
    "end": "1367660"
  },
  {
    "text": "because there's a lot of different ways of querying Postgres Jason B columns as",
    "start": "1367660",
    "end": "1374830"
  },
  {
    "text": "various different syntax so how did we",
    "start": "1374830",
    "end": "1380650"
  },
  {
    "start": "1378000",
    "end": "1491000"
  },
  {
    "text": "actually do this migration so we found that the developers who when we",
    "start": "1380650",
    "end": "1387760"
  },
  {
    "text": "originally built this service back when it was just a light blog editor for use just used for a few pieces of content",
    "start": "1387760",
    "end": "1393520"
  },
  {
    "text": "have been very bad and had put database code right down to the kind of control at level so the idea of",
    "start": "1393520",
    "end": "1401290"
  },
  {
    "text": "rewriting it and having a the API talk to both Postgres and we'd have",
    "start": "1401290",
    "end": "1406970"
  },
  {
    "text": "been possible but it wasn't something we really fancy doing having to untangle all that application code so instead we",
    "start": "1406970",
    "end": "1413179"
  },
  {
    "text": "went for the option of setting up a proxy service and we'll setting up a",
    "start": "1413179",
    "end": "1421070"
  },
  {
    "text": "brand new API to talk with the Postgres database and then a proxy service in the",
    "start": "1421070",
    "end": "1427940"
  },
  {
    "text": "middle which would forward all requests made to the legacy API to the new post-grad API",
    "start": "1427940",
    "end": "1433540"
  },
  {
    "text": "the idea being with this that each time someone went to edit a piece of content we'll created a new piece of content it",
    "start": "1433540",
    "end": "1440240"
  },
  {
    "text": "would be kept up to date in both api's merce we're doing the migration [Music]",
    "start": "1440240",
    "end": "1446380"
  },
  {
    "text": "obviously some of our stuff is like 30 years old and probably won't be edited",
    "start": "1446380",
    "end": "1451610"
  },
  {
    "text": "ever again so to deal with that content we just had a separate migration script which would fetch content from the",
    "start": "1451610",
    "end": "1458450"
  },
  {
    "text": "datastore and push it into post grows with the proxy as a backup to kind of",
    "start": "1458450",
    "end": "1465200"
  },
  {
    "text": "keep them up to date once they had been migrated and then finally to give us a",
    "start": "1465200",
    "end": "1470480"
  },
  {
    "text": "bit of extra confidence that we'd actually done our jobs properly and that the new Guardian datastore with all that",
    "start": "1470480",
    "end": "1477799"
  },
  {
    "text": "valuable journalism in it was working we used Gore say just open source tools to",
    "start": "1477799",
    "end": "1486049"
  },
  {
    "text": "allow us to replay traffic from production into our test environment and check that we have the expected results",
    "start": "1486049",
    "end": "1492580"
  },
  {
    "start": "1491000",
    "end": "1567000"
  },
  {
    "text": "so this is our architecture for the",
    "start": "1492580",
    "end": "1497690"
  },
  {
    "text": "migration so we spun up a RDF datastore and set up a separate API to communicate",
    "start": "1497690",
    "end": "1508910"
  },
  {
    "text": "with it and then have this proxy in the middle which handles the forwarding of",
    "start": "1508910",
    "end": "1514370"
  },
  {
    "text": "traffic as well as that what we did with the proxy was as it made her so it would receive a request send it on to",
    "start": "1514370",
    "end": "1521179"
  },
  {
    "text": "get the response back then forward it to Postgres and then it would do a diff of whatever the results that were returned",
    "start": "1521179",
    "end": "1527900"
  },
  {
    "text": "and any difference it would send off to our so for those of you not familiar with it",
    "start": "1527900",
    "end": "1535000"
  },
  {
    "text": "elk is a Spacely based off the elasticsearch database with front-end",
    "start": "1535000",
    "end": "1540190"
  },
  {
    "text": "that makes it very easy to query your logging and create dashboards from it so",
    "start": "1540190",
    "end": "1548620"
  },
  {
    "text": "the hope was that we're having this set up and the logging as soon as that proxy",
    "start": "1548620",
    "end": "1553810"
  },
  {
    "text": "stop logging anything we could be fairly confident that we've done our jobs",
    "start": "1553810",
    "end": "1558910"
  },
  {
    "text": "properly and that the the new Postgres api was performing quite consistently",
    "start": "1558910",
    "end": "1564760"
  },
  {
    "text": "with with our old data store so this is",
    "start": "1564760",
    "end": "1573310"
  },
  {
    "start": "1567000",
    "end": "1642000"
  },
  {
    "text": "just an example of some of the dashboards we were able to build with that out stack we wanted we needed",
    "start": "1573310",
    "end": "1580570"
  },
  {
    "text": "absolute confidence that all those kind of two and a half million pieces of content have been properly migrated so",
    "start": "1580570",
    "end": "1586980"
  },
  {
    "text": "well star migration skip was running back through from the historical data all the way through it would post its",
    "start": "1586980",
    "end": "1593350"
  },
  {
    "text": "results to elk and give us an idea of how many pieces were there issues with",
    "start": "1593350",
    "end": "1600790"
  },
  {
    "text": "and gradually that and we'll manage to get it down and down the final kind of",
    "start": "1600790",
    "end": "1606880"
  },
  {
    "text": "step before switching over to post res was to do a full migration of our production data store on to the test",
    "start": "1606880",
    "end": "1612520"
  },
  {
    "text": "environment and then use go replay to capture like in a sort of an hour's",
    "start": "1612520",
    "end": "1619990"
  },
  {
    "text": "worth of traffic and then replay it twice as fast on the test environment so we could be sure that not only was the",
    "start": "1619990",
    "end": "1626980"
  },
  {
    "text": "data correct but also that the performance was sufficient for it because we really didn't know whether we",
    "start": "1626980",
    "end": "1632590"
  },
  {
    "text": "were going to get away with this Jason be setup like how or how many problems that would cause once we had it at scale",
    "start": "1632590",
    "end": "1639040"
  },
  {
    "text": "with with hundreds of journalists editing at the same time so",
    "start": "1639040",
    "end": "1646620"
  },
  {
    "start": "1642000",
    "end": "1661000"
  },
  {
    "text": "once we had some confidence with this we had the issue of actually changing over",
    "start": "1646620",
    "end": "1653760"
  },
  {
    "text": "from to pace Prez and treating that as the the primary data store and",
    "start": "1653760",
    "end": "1659640"
  },
  {
    "text": "what made this kind of more difficult is that this picture looks really nice but it's actually a lot more complicated",
    "start": "1659640",
    "end": "1666480"
  },
  {
    "start": "1661000",
    "end": "1707000"
  },
  {
    "text": "than that because the data the API",
    "start": "1666480",
    "end": "1671610"
  },
  {
    "text": "or the composer API it's not only responsible for communicating with the database but also for sending message on",
    "start": "1671610",
    "end": "1679950"
  },
  {
    "text": "Kinesis to ensure that our content API is up to date as well as generating unique IDs and URLs for our articles so",
    "start": "1679950",
    "end": "1688919"
  },
  {
    "text": "we ended up with this concept of a primary and a secondary API which and we",
    "start": "1688919",
    "end": "1696480"
  },
  {
    "text": "had to be absolutely sure that only one API was generating unique IDs at any one point otherwise yeah otherwise we'd end",
    "start": "1696480",
    "end": "1705000"
  },
  {
    "text": "up with kind of chaos so we eventually",
    "start": "1705000",
    "end": "1711149"
  },
  {
    "start": "1707000",
    "end": "1738000"
  },
  {
    "text": "had a late some application switches which allowed us to switch off one",
    "start": "1711149",
    "end": "1716909"
  },
  {
    "text": "application from talking to post grades and change the other and then we set up routes in route 53 so when it when it",
    "start": "1716909",
    "end": "1722549"
  },
  {
    "text": "came to taking out that proxy and making the Postgres api the primary data store",
    "start": "1722549",
    "end": "1729470"
  },
  {
    "text": "we were able to just do that with a DNS change of route 53 without having to",
    "start": "1729470",
    "end": "1734520"
  },
  {
    "text": "make any deployments or changes to the application config so it works we",
    "start": "1734520",
    "end": "1742890"
  },
  {
    "start": "1738000",
    "end": "1836000"
  },
  {
    "text": "finished it but the Mike it probably isn't the route I would take again if",
    "start": "1742890",
    "end": "1748140"
  },
  {
    "text": "doing a similar migration the main issue with our this approach was that we had",
    "start": "1748140",
    "end": "1753690"
  },
  {
    "text": "this proxy in the middle which we'd expected to only be around for a few weeks but was actually a critical piece",
    "start": "1753690",
    "end": "1759450"
  },
  {
    "text": "of infrastructure on our publication flow so suddenly instead of just having",
    "start": "1759450",
    "end": "1764669"
  },
  {
    "text": "the API and the client applications we had this proxy and the post quiz API and",
    "start": "1764669",
    "end": "1771750"
  },
  {
    "text": "if the proxy went down and so did the publication system",
    "start": "1771750",
    "end": "1776990"
  },
  {
    "text": "say it also and in addition to that it added an extra hop which not great for",
    "start": "1777120",
    "end": "1784290"
  },
  {
    "text": "performance especially because in some cases we were uploading audio files which had to pass through the proxy into",
    "start": "1784290",
    "end": "1792050"
  },
  {
    "text": "both api's the other main issue with this approach as I'm sure many of you",
    "start": "1792050",
    "end": "1798030"
  },
  {
    "text": "would have come across is what as soon as you duplicate something you duplicate the work required to do any kind of update so if we added a new feature like",
    "start": "1798030",
    "end": "1805200"
  },
  {
    "text": "some kind of new even if it was as simple as new image waiting so suddenly we went half-width winning images on an",
    "start": "1805200",
    "end": "1811830"
  },
  {
    "text": "article you'd have to update the manga api and the posters api and if you",
    "start": "1811830",
    "end": "1816900"
  },
  {
    "text": "didn't do both you'd end up with disparities and we wouldn't be able to",
    "start": "1816900",
    "end": "1822180"
  },
  {
    "text": "bend safely migrate over and then finally as have already mentioned keeping track of which api was the kind",
    "start": "1822180",
    "end": "1830250"
  },
  {
    "text": "of primary one that we trusted was the whole management task in itself so yet",
    "start": "1830250",
    "end": "1840210"
  },
  {
    "start": "1836000",
    "end": "1967000"
  },
  {
    "text": "probably the main thing was doing this kind of migration again in this scenario i probably would have started writing",
    "start": "1840210",
    "end": "1849060"
  },
  {
    "text": "our post grades application code within the same wrongo api and then tried to as much as possible migrated one route at a",
    "start": "1849060",
    "end": "1856050"
  },
  {
    "text": "time rather than having this what was ultimately a kind of Big Bang switch over where post res AP became the new",
    "start": "1856050",
    "end": "1862560"
  },
  {
    "text": "source of truth but kind of a good",
    "start": "1862560",
    "end": "1869490"
  },
  {
    "text": "outcome was that we did get away with the Jason B syntax I'm still using it",
    "start": "1869490",
    "end": "1875970"
  },
  {
    "text": "now the only challenge is when you want to do some kind of query on an index field and that's more or less",
    "start": "1875970",
    "end": "1882960"
  },
  {
    "text": "prohibitive so and I recently I wanted to find a list of all the articles we had had a tweet in them and with with",
    "start": "1882960",
    "end": "1890850"
  },
  {
    "text": "our current setup in RDS with just these two columns it's not really viable",
    "start": "1890850",
    "end": "1896250"
  },
  {
    "text": "without perhaps spinning up a snapshot into a really monster instance it would",
    "start": "1896250",
    "end": "1902850"
  },
  {
    "text": "just take too long so that it's too painful to work with but probably one of",
    "start": "1902850",
    "end": "1909720"
  },
  {
    "text": "the like best outcomes of this migration was that we",
    "start": "1909720",
    "end": "1916210"
  },
  {
    "text": "we're now on Postgres and the kind of support online for any kind of Postgres",
    "start": "1916210",
    "end": "1921250"
  },
  {
    "text": "query is incredible because it's such a kind of established datastore you've got",
    "start": "1921250",
    "end": "1927040"
  },
  {
    "text": "ten years of posts on Stack Overflow so when you've got junior developers joining or almost anyone he doesn't have",
    "start": "1927040",
    "end": "1933070"
  },
  {
    "text": "to touch the database very often having to add any new functionality it was really great for us having this kind of",
    "start": "1933070",
    "end": "1939700"
  },
  {
    "text": "massive amounts of support online even with using kind of legacy feature a new",
    "start": "1939700",
    "end": "1944860"
  },
  {
    "text": "features like Jason be the other big takeaway was this this is a really hot",
    "start": "1944860",
    "end": "1950380"
  },
  {
    "text": "topic we wrote a really long detailed quite dull article about why we switched",
    "start": "1950380",
    "end": "1955990"
  },
  {
    "text": "from to post res and it went crazy on happy news so I mean a lot of people interested in in you know what they",
    "start": "1955990",
    "end": "1963550"
  },
  {
    "text": "should do with their databases or otherwise talk a bit about cost so for",
    "start": "1963550",
    "end": "1974860"
  },
  {
    "start": "1967000",
    "end": "2033000"
  },
  {
    "text": "us this was a very important issue obviously depending on your scale these numbers weren't very interesting at all",
    "start": "1974860",
    "end": "1980620"
  },
  {
    "text": "but so when we were running it was running on ec2 boxes because we needed",
    "start": "1980620",
    "end": "1989710"
  },
  {
    "text": "high availability across three availability zones we had three of them and that was costing us $14,000 we then",
    "start": "1989710",
    "end": "1996820"
  },
  {
    "text": "had some management software which was shared between multiple clusters but the kind of share of it that that",
    "start": "1996820",
    "end": "2004140"
  },
  {
    "text": "composed the database page was another $7000 on top of that just in",
    "start": "2004140",
    "end": "2009930"
  },
  {
    "text": "infrastructure costs and now with Postgres we've got yeah one hour for extra-large box which is",
    "start": "2009930",
    "end": "2017940"
  },
  {
    "text": "still high availability and we've made quite a big saving so it's just six thousand dollars at the moment I doesn't",
    "start": "2017940",
    "end": "2024180"
  },
  {
    "text": "take into account support contracts and things but from a purely infrastructure perspective it's been like a good good",
    "start": "2024180",
    "end": "2031740"
  },
  {
    "text": "migration for us and say in terms of some things like",
    "start": "2031740",
    "end": "2038700"
  },
  {
    "start": "2033000",
    "end": "2174000"
  },
  {
    "text": "we're going to look at in the future with RDF we've started using using I am authentication across other services and",
    "start": "2038700",
    "end": "2045630"
  },
  {
    "text": "in with GDP are coming up and the requirement to rotate your secrets regularly this is like a lifesaver it's",
    "start": "2045630",
    "end": "2053310"
  },
  {
    "text": "a lot less scary than any other in other cases we using lambdas to rotate our database secrets but yeah you always",
    "start": "2053310",
    "end": "2060030"
  },
  {
    "text": "worried that you'll get into a position where the application gets out of sync with this secret rotation service so",
    "start": "2060030",
    "end": "2066030"
  },
  {
    "text": "with I am it all becomes a lot easier and we're quite pleased with how easy it",
    "start": "2066030",
    "end": "2071879"
  },
  {
    "text": "was to just stick that into our application we didn't have to change any of the database code we're not currently",
    "start": "2071880",
    "end": "2078570"
  },
  {
    "text": "using Aurora that was initially because the size of the datastore that we",
    "start": "2078570",
    "end": "2085379"
  },
  {
    "text": "predicted was smaller than the kind of minimum Aurora database we're now on an a4 extra large and we will probably look",
    "start": "2085380",
    "end": "2091649"
  },
  {
    "text": "to migrate to Aurora partly for the performance increases and performance",
    "start": "2091650",
    "end": "2098040"
  },
  {
    "text": "benefits but also because of the stuff like I a moth which gets launched typically first on Aurora so if you want",
    "start": "2098040",
    "end": "2105420"
  },
  {
    "text": "it early and it's kind of it in his attraction for us as I mentioned this is",
    "start": "2105420",
    "end": "2112830"
  },
  {
    "text": "like the Guardians most important data store so if the whole of Ireland goes",
    "start": "2112830",
    "end": "2120720"
  },
  {
    "text": "down which I think it ever has happened but for us that would be we need total",
    "start": "2120720",
    "end": "2127710"
  },
  {
    "text": "confidence that the backups of this data store is safe so we've we've started we've set up some lambdas to do cross",
    "start": "2127710",
    "end": "2134730"
  },
  {
    "text": "region replication of any snapshots taken by RDS we ensure they're also copied to another region and like from a",
    "start": "2134730",
    "end": "2144300"
  },
  {
    "text": "DBM in perspective whilst we're doing the migration we're making all use of",
    "start": "2144300",
    "end": "2150210"
  },
  {
    "text": "the kind of odd yes logging and prosp'rous logs available but now we're",
    "start": "2150210",
    "end": "2156900"
  },
  {
    "text": "not really having to do anything and that's I guess that's been the best outcome at all I don't have to worry",
    "start": "2156900",
    "end": "2163440"
  },
  {
    "text": "anymore that the database kate is going to go down and I'm going to be having to rapidly remember how MongoDB",
    "start": "2163440",
    "end": "2170170"
  },
  {
    "text": "works so yeah there's an elephant in the",
    "start": "2170170",
    "end": "2177309"
  },
  {
    "start": "2174000",
    "end": "2230000"
  },
  {
    "text": "room though it's not the Postgres logo it's the fact that eight months after we finished this migration Amazon launched",
    "start": "2177309",
    "end": "2183250"
  },
  {
    "text": "document DB with support which is a bit frustrating for us because we",
    "start": "2183250",
    "end": "2189039"
  },
  {
    "text": "could have saved quite a lot of effort by just using a compatible store",
    "start": "2189039",
    "end": "2194950"
  },
  {
    "text": "in the cloud I think ultimately we're in a better position now because I think if",
    "start": "2194950",
    "end": "2203079"
  },
  {
    "text": "for future features of the CMS we're thinking about adding collaborative editing functionality in future and we",
    "start": "2203079",
    "end": "2209920"
  },
  {
    "text": "think that having a relational data store which will eventually probably split out into more than just one column",
    "start": "2209920",
    "end": "2216990"
  },
  {
    "text": "will give us an advantage but when we were planning this sort of many months",
    "start": "2216990",
    "end": "2222849"
  },
  {
    "text": "of dev work to do the migration there was no way we wouldn't have just gone to document DB if that had been an option",
    "start": "2222849",
    "end": "2231240"
  },
  {
    "start": "2230000",
    "end": "2271000"
  },
  {
    "text": "yeah that's everything so yeah I'll stick around afterwards if",
    "start": "2231329",
    "end": "2237039"
  },
  {
    "text": "anyone's got any questions but I'm now going to pass back to a bastion to talk about more real-time application use",
    "start": "2237039",
    "end": "2242589"
  },
  {
    "text": "case",
    "start": "2242589",
    "end": "2244829"
  },
  {
    "text": "Thank You field it was very interesting and on the point of which database to",
    "start": "2249640",
    "end": "2255579"
  },
  {
    "text": "use and how to our customers really leverage this to get to next level of",
    "start": "2255579",
    "end": "2260890"
  },
  {
    "text": "architecture thank you before wrapping up I wanted to talk briefly about real-time applications and",
    "start": "2260890",
    "end": "2269910"
  },
  {
    "text": "so before explaining why it's important and what is ElastiCache especially let's",
    "start": "2269910",
    "end": "2277059"
  },
  {
    "start": "2271000",
    "end": "2339000"
  },
  {
    "text": "take a step back and talk about why it's important it's if we go back to our",
    "start": "2277059",
    "end": "2282249"
  },
  {
    "text": "users that are global that now include",
    "start": "2282249",
    "end": "2287579"
  },
  {
    "text": "data that needs to be more real-time like when you deploy an online game when",
    "start": "2287579",
    "end": "2292809"
  },
  {
    "text": "you are doing high frequency b2b exchange like financials or others",
    "start": "2292809",
    "end": "2298359"
  },
  {
    "text": "everything's needs to be with the lower latency that we used to have and that's",
    "start": "2298359",
    "end": "2304180"
  },
  {
    "text": "something that you can't really achieve even with the more advanced database you",
    "start": "2304180",
    "end": "2309430"
  },
  {
    "text": "always have to have something in between as a caching mechanism and that's",
    "start": "2309430",
    "end": "2315430"
  },
  {
    "text": "something that can do ElastiCache to have your data closer to your user that's only one part of the story on",
    "start": "2315430",
    "end": "2323529"
  },
  {
    "text": "caching and low latency we talked about CDN we talked about lambda at the edge everything that can be closer to your",
    "start": "2323529",
    "end": "2330039"
  },
  {
    "text": "customer closer to your user or when you think about IOT can be also closer with something like green grass but hey I",
    "start": "2330039",
    "end": "2337839"
  },
  {
    "text": "want you just to focus on this focus on elastic cache which is one of the best",
    "start": "2337839",
    "end": "2345160"
  },
  {
    "start": "2339000",
    "end": "2413000"
  },
  {
    "text": "use case for the STK she is running internet applications because it's extreme performance with sub millisecond",
    "start": "2345160",
    "end": "2353410"
  },
  {
    "text": "response time so very good for online and so action on even your classical",
    "start": "2353410",
    "end": "2359680"
  },
  {
    "text": "messaging act expect a very low latency interaction it's fully managed we heard",
    "start": "2359680",
    "end": "2367660"
  },
  {
    "text": "from Phil it's great to have a managed database because that's not a heavy",
    "start": "2367660",
    "end": "2372819"
  },
  {
    "text": "lifting you want to take over and it running a Redis or memcache tree which",
    "start": "2372819",
    "end": "2378549"
  },
  {
    "text": "is actually what is running ElastiCache it's not an easy task it's quite hard to",
    "start": "2378549",
    "end": "2384400"
  },
  {
    "text": "get a proper cluster it's bit like the MongoDB running at at scale running a",
    "start": "2384400",
    "end": "2390519"
  },
  {
    "text": "cluster at scale can be challenging and this is a heavy lifting and this is what we learn from all the customers that we",
    "start": "2390519",
    "end": "2397150"
  },
  {
    "text": "bring back to you to you and easily scalable it's very easy to scale using",
    "start": "2397150",
    "end": "2402940"
  },
  {
    "text": "Wibbly pickers and also right being shouting across multiple availability",
    "start": "2402940",
    "end": "2408160"
  },
  {
    "text": "zones and that's really integrated into ElastiCache so that's a reference",
    "start": "2408160",
    "end": "2416049"
  },
  {
    "text": "architecture on how you can cache your data that are either stored on dynamo on",
    "start": "2416049",
    "end": "2423099"
  },
  {
    "text": "RDS so you have here three choices of when your application whatever it is can",
    "start": "2423099",
    "end": "2430599"
  },
  {
    "text": "write to audience or to dynamo we can also write through elastic cash and all",
    "start": "2430599",
    "end": "2437799"
  },
  {
    "text": "the other components can be updated so when you write for example to all yes you can have a lambda function that is",
    "start": "2437799",
    "end": "2444039"
  },
  {
    "text": "at the back of it and running asynchronously writing through back to",
    "start": "2444039",
    "end": "2450249"
  },
  {
    "text": "the caching layer and the same for dynamo DB when you write a new item or",
    "start": "2450249",
    "end": "2455349"
  },
  {
    "text": "object in every item you can have what we call dynamodb streams that can streams today all the changes and all",
    "start": "2455349",
    "end": "2463449"
  },
  {
    "text": "the changes can be then returned back to for example in this case elastic cash",
    "start": "2463449",
    "end": "2470969"
  },
  {
    "text": "so to wrap up this talk about internet scale application you have this",
    "start": "2473210",
    "end": "2480140"
  },
  {
    "text": "reference slides again it's quite heavy read but that's something we can you can take away but that's really what we",
    "start": "2480140",
    "end": "2487609"
  },
  {
    "text": "wanted to give you today is how to choose which service in which situation and and you are not now a tied to one",
    "start": "2487609",
    "end": "2495650"
  },
  {
    "text": "vendor you can just based on what you want to achieve that's probably a good",
    "start": "2495650",
    "end": "2501650"
  },
  {
    "text": "solution Allah Luis if you want to just lift and shift an existing application",
    "start": "2501650",
    "end": "2506660"
  },
  {
    "text": "it's probably going to be an existing relational engine like my sequel or the",
    "start": "2506660",
    "end": "2513800"
  },
  {
    "text": "commercial engine sequel and Oracle totally running on DMS on sorry on RDS",
    "start": "2513800",
    "end": "2520849"
  },
  {
    "text": "and you read VMs to migrate data and if you look at more new data new",
    "start": "2520849",
    "end": "2526910"
  },
  {
    "text": "application that you build from the scratch probably you should look at something like dynamo DB and and look at",
    "start": "2526910",
    "end": "2534349"
  },
  {
    "text": "the new options like time streams data blockchain are a new trend but also",
    "start": "2534349",
    "end": "2542180"
  },
  {
    "text": "because our customers are actually looking for a more structured data",
    "start": "2542180",
    "end": "2548030"
  },
  {
    "text": "around blockchain so that's why we launched QLD B and on the bottom of the",
    "start": "2548030",
    "end": "2554690"
  },
  {
    "text": "table you have all these analytics offering coming from a s3 data Lake or",
    "start": "2554690",
    "end": "2562329"
  },
  {
    "text": "any data that you can run analytics using redshift or using for other tools",
    "start": "2562329",
    "end": "2570980"
  },
  {
    "text": "like EMR and quick site to display",
    "start": "2570980",
    "end": "2576849"
  },
  {
    "text": "okay so to wrap up if you if you have if you had like four points to take away",
    "start": "2579040",
    "end": "2585770"
  },
  {
    "start": "2580000",
    "end": "2649000"
  },
  {
    "text": "from this talk that would be first one will be caching caching at the edge with",
    "start": "2585770",
    "end": "2593390"
  },
  {
    "text": "the CDN locally behind your compute as much as possible and as closely as",
    "start": "2593390",
    "end": "2598730"
  },
  {
    "text": "possible to your customers and now it's easier to be done using the technology",
    "start": "2598730",
    "end": "2604210"
  },
  {
    "text": "scaling is possible using address think about business metric and leverage the",
    "start": "2604210",
    "end": "2610490"
  },
  {
    "text": "server lesson containers offering which have scale integrated into it use the",
    "start": "2610490",
    "end": "2617570"
  },
  {
    "text": "right tool for the right job that's especially important for database using purpose-built database you get the",
    "start": "2617570",
    "end": "2624650"
  },
  {
    "text": "right performance and the right users for your access pattern and don't be",
    "start": "2624650",
    "end": "2629750"
  },
  {
    "text": "afraid to use multiple database in your same app that's obviously fine and go",
    "start": "2629750",
    "end": "2635750"
  },
  {
    "text": "global leverage the address regions and the replications mechanism built in in",
    "start": "2635750",
    "end": "2642620"
  },
  {
    "text": "our services to easily go global and deploy your application thank you",
    "start": "2642620",
    "end": "2650960"
  },
  {
    "start": "2649000",
    "end": "2680000"
  },
  {
    "text": "these are our contact back me and Phil please switch feel free to reach out on",
    "start": "2650960",
    "end": "2657200"
  },
  {
    "text": "Twitter email and we'll be around for any Q&A if you have any corridors at the",
    "start": "2657200",
    "end": "2664310"
  },
  {
    "text": "back and please complete the session survey we really value your feedback on",
    "start": "2664310",
    "end": "2670930"
  },
  {
    "text": "on our work on our sessions and leave the headphones for the next sessions",
    "start": "2670930",
    "end": "2677620"
  },
  {
    "text": "thank you",
    "start": "2677620",
    "end": "2680740"
  }
]