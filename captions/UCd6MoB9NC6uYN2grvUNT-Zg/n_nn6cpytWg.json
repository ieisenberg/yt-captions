[
  {
    "text": "in this video you'll see how to query",
    "start": "0",
    "end": "2040"
  },
  {
    "text": "resource configuration properties using",
    "start": "2040",
    "end": "4110"
  },
  {
    "text": "AWS config advanced query with this",
    "start": "4110",
    "end": "7200"
  },
  {
    "text": "feature you can perform ad-hoc queries",
    "start": "7200",
    "end": "9210"
  },
  {
    "text": "against the current configuration state",
    "start": "9210",
    "end": "10769"
  },
  {
    "text": "of your resources retrieve resource",
    "start": "10769",
    "end": "12780"
  },
  {
    "text": "metadata across multiple services from a",
    "start": "12780",
    "end": "14820"
  },
  {
    "text": "single interface and run the same query",
    "start": "14820",
    "end": "16980"
  },
  {
    "text": "across multiple accounts and regions",
    "start": "16980",
    "end": "19730"
  },
  {
    "text": "advanced query is a capability of AWS",
    "start": "19730",
    "end": "22310"
  },
  {
    "text": "config that makes it easy to query the",
    "start": "22310",
    "end": "24140"
  },
  {
    "text": "resource configuration properties of",
    "start": "24140",
    "end": "25789"
  },
  {
    "text": "your AWS resources for audit compliance",
    "start": "25789",
    "end": "27860"
  },
  {
    "text": "or operational troubleshooting it can be",
    "start": "27860",
    "end": "30829"
  },
  {
    "text": "used to perform ad-hoc queries against",
    "start": "30829",
    "end": "32689"
  },
  {
    "text": "the current configuration state of your",
    "start": "32689",
    "end": "34190"
  },
  {
    "text": "resources using the AWS config console",
    "start": "34190",
    "end": "36800"
  },
  {
    "text": "or through api's to begin using it let's",
    "start": "36800",
    "end": "40010"
  },
  {
    "text": "navigate to AWS config",
    "start": "40010",
    "end": "43750"
  },
  {
    "text": "in order to use advanced query AWS",
    "start": "44329",
    "end": "47000"
  },
  {
    "text": "config must be enabled in your account",
    "start": "47000",
    "end": "48710"
  },
  {
    "text": "as well as in every account in region",
    "start": "48710",
    "end": "50720"
  },
  {
    "text": "that contains resources you wish to",
    "start": "50720",
    "end": "52160"
  },
  {
    "text": "query for the purposes of this example",
    "start": "52160",
    "end": "54559"
  },
  {
    "text": "AWS config has already been enabled",
    "start": "54559",
    "end": "56840"
  },
  {
    "text": "accordingly let's navigate to advanced",
    "start": "56840",
    "end": "59510"
  },
  {
    "text": "queries",
    "start": "59510",
    "end": "61960"
  },
  {
    "text": "AWS provides a set of sample queries you",
    "start": "62650",
    "end": "65810"
  },
  {
    "text": "can either use them as is or build on",
    "start": "65810",
    "end": "67820"
  },
  {
    "text": "them to construct more complex queries",
    "start": "67820",
    "end": "69560"
  },
  {
    "text": "the language used for the queries is a",
    "start": "69560",
    "end": "71750"
  },
  {
    "text": "subset of structured query language or",
    "start": "71750",
    "end": "73580"
  },
  {
    "text": "SQL select syntax",
    "start": "73580",
    "end": "77229"
  },
  {
    "text": "as you can see the sample queries cover",
    "start": "78580",
    "end": "80800"
  },
  {
    "text": "a range of different resource types and",
    "start": "80800",
    "end": "82600"
  },
  {
    "text": "return a variety of different",
    "start": "82600",
    "end": "84070"
  },
  {
    "text": "configuration properties and derived",
    "start": "84070",
    "end": "85690"
  },
  {
    "text": "properties let's start by finding a",
    "start": "85690",
    "end": "87910"
  },
  {
    "text": "simple query that returns a list of all",
    "start": "87910",
    "end": "89620"
  },
  {
    "text": "running Amazon Elastic Compute cloud or",
    "start": "89620",
    "end": "91720"
  },
  {
    "text": "Amazon ec2 instances associated with our",
    "start": "91720",
    "end": "94450"
  },
  {
    "text": "account",
    "start": "94450",
    "end": "96480"
  },
  {
    "text": "here is the syntax for this query like",
    "start": "96480",
    "end": "98910"
  },
  {
    "text": "all sample queries it can be modified in",
    "start": "98910",
    "end": "100920"
  },
  {
    "text": "the query editor let's add a field to",
    "start": "100920",
    "end": "103290"
  },
  {
    "text": "the Select clause to show a column",
    "start": "103290",
    "end": "105090"
  },
  {
    "text": "displaying the region where each ec2",
    "start": "105090",
    "end": "106890"
  },
  {
    "text": "instance is located",
    "start": "106890",
    "end": "108110"
  },
  {
    "text": "notice that the query scope setting",
    "start": "108110",
    "end": "110310"
  },
  {
    "text": "specifies that this query will only",
    "start": "110310",
    "end": "111810"
  },
  {
    "text": "return ec2 instances associated with the",
    "start": "111810",
    "end": "114390"
  },
  {
    "text": "current account in region now run the",
    "start": "114390",
    "end": "117030"
  },
  {
    "text": "query",
    "start": "117030",
    "end": "119270"
  },
  {
    "text": "the query is successfully executed let's",
    "start": "119360",
    "end": "121940"
  },
  {
    "text": "scroll down and look at the results",
    "start": "121940",
    "end": "125190"
  },
  {
    "text": "in the output table you can see the new",
    "start": "125190",
    "end": "127470"
  },
  {
    "text": "AWS region column we added to the select",
    "start": "127470",
    "end": "129840"
  },
  {
    "text": "clause of the query it shows that all",
    "start": "129840",
    "end": "132240"
  },
  {
    "text": "three ec2 instances returned are in the",
    "start": "132240",
    "end": "134460"
  },
  {
    "text": "current region US East one you can also",
    "start": "134460",
    "end": "137550"
  },
  {
    "text": "click on the resources ID field of any",
    "start": "137550",
    "end": "139500"
  },
  {
    "text": "entry to see further details about the",
    "start": "139500",
    "end": "141510"
  },
  {
    "text": "resource",
    "start": "141510",
    "end": "143350"
  },
  {
    "text": "if you have specified any rules",
    "start": "143350",
    "end": "145030"
  },
  {
    "text": "pertaining to the resource type you can",
    "start": "145030",
    "end": "147040"
  },
  {
    "text": "also see this resources compliance with",
    "start": "147040",
    "end": "148750"
  },
  {
    "text": "them on this page let's return to the",
    "start": "148750",
    "end": "151000"
  },
  {
    "text": "query editor",
    "start": "151000",
    "end": "153450"
  },
  {
    "text": "let's change the query scope to do so",
    "start": "154180",
    "end": "157390"
  },
  {
    "text": "you must first define an aggregator",
    "start": "157390",
    "end": "159069"
  },
  {
    "text": "which is a type of resource that",
    "start": "159069",
    "end": "160450"
  },
  {
    "text": "collects configuration and compliance",
    "start": "160450",
    "end": "162250"
  },
  {
    "text": "data from multiple sources for our",
    "start": "162250",
    "end": "164739"
  },
  {
    "text": "purposes an aggregator that expands the",
    "start": "164739",
    "end": "166750"
  },
  {
    "text": "domains who all regions has already been",
    "start": "166750",
    "end": "168579"
  },
  {
    "text": "set up let's run the same query with",
    "start": "168579",
    "end": "170799"
  },
  {
    "text": "this aggregator",
    "start": "170799",
    "end": "173430"
  },
  {
    "text": "as you can see with the aggregator",
    "start": "173580",
    "end": "175440"
  },
  {
    "text": "applied the query has returned ec2",
    "start": "175440",
    "end": "177570"
  },
  {
    "text": "instances running in four different",
    "start": "177570",
    "end": "178920"
  },
  {
    "text": "regions if you wish you can write your",
    "start": "178920",
    "end": "181680"
  },
  {
    "text": "own queries from scratch rather than",
    "start": "181680",
    "end": "183390"
  },
  {
    "text": "using the samples provided by AWS let's",
    "start": "183390",
    "end": "186600"
  },
  {
    "text": "return to the advanced queries page and",
    "start": "186600",
    "end": "188250"
  },
  {
    "text": "create a new query",
    "start": "188250",
    "end": "191090"
  },
  {
    "text": "since the query language used is a",
    "start": "191550",
    "end": "193470"
  },
  {
    "text": "subset of SQL you can use basic SQL",
    "start": "193470",
    "end": "195630"
  },
  {
    "text": "clauses like group by and order by to",
    "start": "195630",
    "end": "198720"
  },
  {
    "text": "shape the results returned by a query",
    "start": "198720",
    "end": "200250"
  },
  {
    "text": "let's build a query that returns the",
    "start": "200250",
    "end": "202350"
  },
  {
    "text": "total number of ec2 instances in each",
    "start": "202350",
    "end": "204330"
  },
  {
    "text": "region first apply the multi region",
    "start": "204330",
    "end": "206550"
  },
  {
    "text": "aggregator",
    "start": "206550",
    "end": "208590"
  },
  {
    "text": "next enter the query syntax",
    "start": "208590",
    "end": "212239"
  },
  {
    "text": "now run the query",
    "start": "213080",
    "end": "216430"
  },
  {
    "text": "as you can see this query has returned",
    "start": "218330",
    "end": "220550"
  },
  {
    "text": "account of the ec2 instances in each",
    "start": "220550",
    "end": "222350"
  },
  {
    "text": "region",
    "start": "222350",
    "end": "224040"
  },
  {
    "text": "you can find a list of all the resource",
    "start": "224040",
    "end": "225959"
  },
  {
    "text": "configuration properties you can use to",
    "start": "225959",
    "end": "227700"
  },
  {
    "text": "formulate your own queries at the AWS",
    "start": "227700",
    "end": "229890"
  },
  {
    "text": "config resource schema github repository",
    "start": "229890",
    "end": "232260"
  },
  {
    "text": "let's take a look",
    "start": "232260",
    "end": "235280"
  },
  {
    "text": "let's find the properties for ec2",
    "start": "235840",
    "end": "237819"
  },
  {
    "text": "instances",
    "start": "237819",
    "end": "240330"
  },
  {
    "text": "now close out and return to the query",
    "start": "246060",
    "end": "248530"
  },
  {
    "text": "editor",
    "start": "248530",
    "end": "250709"
  },
  {
    "text": "let's look at one more sample query",
    "start": "251420",
    "end": "255340"
  },
  {
    "text": "this time let's find a sample query that",
    "start": "256200",
    "end": "258450"
  },
  {
    "text": "returns account of both compliant and",
    "start": "258450",
    "end": "260130"
  },
  {
    "text": "non-compliant resources",
    "start": "260130",
    "end": "263420"
  },
  {
    "text": "run the query",
    "start": "263670",
    "end": "266240"
  },
  {
    "text": "as you can see the query ran",
    "start": "268290",
    "end": "270000"
  },
  {
    "text": "successfully returning account of",
    "start": "270000",
    "end": "271650"
  },
  {
    "text": "resources grouped by compliance status",
    "start": "271650",
    "end": "273710"
  },
  {
    "text": "you've just seen how to query resource",
    "start": "273710",
    "end": "276090"
  },
  {
    "text": "configuration properties using AWS",
    "start": "276090",
    "end": "277890"
  },
  {
    "text": "config advanced query thanks for",
    "start": "277890",
    "end": "280920"
  },
  {
    "text": "watching now it's your turn to try",
    "start": "280920",
    "end": "284240"
  }
]