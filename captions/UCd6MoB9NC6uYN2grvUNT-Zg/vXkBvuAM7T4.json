[
  {
    "start": "0",
    "end": "60000"
  },
  {
    "text": "i'm one of the solution architects for amazon web services i appreciate everybody's patience timing",
    "start": "3040",
    "end": "8880"
  },
  {
    "text": "for this stuff is always fun i'm going to present today together with some esteemed colleagues",
    "start": "8880",
    "end": "15759"
  },
  {
    "text": "on elastic block as a service using ebs how to gain best benefit from ebs",
    "start": "15759",
    "end": "21680"
  },
  {
    "text": "understanding the difference between ebs standard and provision diops and applications to large scale workloads",
    "start": "21680",
    "end": "28800"
  },
  {
    "text": "so as we get started really please appreciate everybody's feedback",
    "start": "28800",
    "end": "34079"
  },
  {
    "text": "a lot of the presentations that are happening today this is the very first time they've been shown anywhere and so the more we hear from you whether this",
    "start": "34079",
    "end": "40879"
  },
  {
    "text": "is valuable not valuable needs correction it would be easier if it was faster or any of",
    "start": "40879",
    "end": "46239"
  },
  {
    "text": "that kind of stuff bring that information to us we're really looking forward to continuing to iterate and innovate on your behalf um",
    "start": "46239",
    "end": "54480"
  },
  {
    "text": "there's there's quite a lot i think to cover so i'm going to jump into it pretty quickly hopefully this isn't an unusual or",
    "start": "54480",
    "end": "61359"
  },
  {
    "start": "60000",
    "end": "192000"
  },
  {
    "text": "confusing slide for folks ebs is not a hard drive",
    "start": "61359",
    "end": "67360"
  },
  {
    "text": "ebs is a service a service from amazon a service that allows you to consume posix",
    "start": "67360",
    "end": "73200"
  },
  {
    "text": "storage which means block storage it's the kind of storage you can put file systems on that may be",
    "start": "73200",
    "end": "79200"
  },
  {
    "text": "cursory to some folks but for others it's important to rationalize the difference between",
    "start": "79200",
    "end": "84880"
  },
  {
    "text": "a service where you're able to consume storage on demand when you need it an extra",
    "start": "84880",
    "end": "91680"
  },
  {
    "text": "device present in your instance versus a physical disk where you're going to the store and unwrapping the thing and",
    "start": "91680",
    "end": "97600"
  },
  {
    "text": "dealing with the vagaries of that another sort of difference there an important part about what makes ebs the",
    "start": "97600",
    "end": "103759"
  },
  {
    "text": "service not a disk is that it has very different characteristics than any physical drive",
    "start": "103759",
    "end": "109439"
  },
  {
    "text": "you can go by or any physical device that serves drives to other things so ebs is not a sand it's not a nas it's",
    "start": "109439",
    "end": "116399"
  },
  {
    "text": "not a das it's not any of those other kinds of things it's its own product built by aws",
    "start": "116399",
    "end": "122000"
  },
  {
    "text": "for some very specific purposes we worked very hard at the very outset the design of ebs",
    "start": "122000",
    "end": "128879"
  },
  {
    "text": "to ensure that the number one goal was met and the number one goal for the design of ebs was making it so that ec2 instances",
    "start": "128879",
    "end": "135440"
  },
  {
    "text": "booted really really fast everybody like it when ec2 instances start quicker rather than slower me too so",
    "start": "135440",
    "end": "142800"
  },
  {
    "text": "we knew that that was a thing that enabled people to test faster enabled applications to get off the ground more quickly and it was really driven by",
    "start": "142800",
    "end": "150080"
  },
  {
    "text": "sequential throughput throughput off the disk how do i get the reads out of there as quickly as possible and there's also",
    "start": "150080",
    "end": "155280"
  },
  {
    "text": "the use of those volumes as the root storage for swap so lots of bursts of",
    "start": "155280",
    "end": "160879"
  },
  {
    "text": "of short duration but random activity and so you'll see ebs as a device as a service",
    "start": "160879",
    "end": "166480"
  },
  {
    "text": "was really built in that context built to serve that workload and what we found is that people once they got a taste of disks",
    "start": "166480",
    "end": "174000"
  },
  {
    "text": "you can move from instance to instance volume devices that can be provisioned the second that you need them when your",
    "start": "174000",
    "end": "180159"
  },
  {
    "text": "software asks for it that they'd use it for a lot of other stuff so going forward now years after the",
    "start": "180159",
    "end": "186159"
  },
  {
    "text": "release of this product ebs has been used for everything that you can use hard drives physical devices for",
    "start": "186159",
    "end": "192959"
  },
  {
    "start": "192000",
    "end": "292000"
  },
  {
    "text": "on ec2 relational databases sql server mysql oracle gets built on top of vbs storage",
    "start": "192959",
    "end": "200000"
  },
  {
    "text": "the rds product consumes ebs storage uses that as a system to make sure that you have high performance consistent",
    "start": "200000",
    "end": "206239"
  },
  {
    "text": "storage nosql databases mongodb couch base reocc voldemort all",
    "start": "206239",
    "end": "213200"
  },
  {
    "text": "these sort of different tools take advantage of posix storage need the posix locking mechanisms and other",
    "start": "213200",
    "end": "218319"
  },
  {
    "text": "controls that are present in file system based storage uh to to provide the great value that",
    "start": "218319",
    "end": "224000"
  },
  {
    "text": "those applications do data warehousing applications you heard today about about redshift and and some other",
    "start": "224000",
    "end": "229440"
  },
  {
    "text": "workloads there files uh movement of uh you know objects around media content all of these",
    "start": "229440",
    "end": "235360"
  },
  {
    "text": "different uh services depend on the applications that access storage so",
    "start": "235360",
    "end": "241360"
  },
  {
    "text": "another big driver for the that sits beneath all of these is the use of existing application",
    "start": "241360",
    "end": "247680"
  },
  {
    "text": "software whether open source or not to access disk storage so",
    "start": "247680",
    "end": "252720"
  },
  {
    "text": "a lot of us don't have the opportunity to rewrite the database that we use or to change the structure of how it is",
    "start": "252720",
    "end": "258239"
  },
  {
    "text": "that our storage uh is accessed by applications so we've we've found that there are lots of",
    "start": "258239",
    "end": "264160"
  },
  {
    "text": "workloads that make sense and those workloads really haven't changed so we changed disk we made this abstraction",
    "start": "264160",
    "end": "270800"
  },
  {
    "text": "ebs that's different than a standard physical disk but your workloads haven't changed they haven't adjusted and so",
    "start": "270800",
    "end": "276479"
  },
  {
    "text": "it's important as a system designer as a devops operator as an engineer trying to",
    "start": "276479",
    "end": "282960"
  },
  {
    "text": "build high performance scaling systems on aws you understand the behavior of those tools so",
    "start": "282960",
    "end": "289440"
  },
  {
    "text": "a couple of quick definitions we'll i'll be using these terms pretty frequently in the next couple of minutes",
    "start": "289440",
    "end": "296720"
  },
  {
    "start": "292000",
    "end": "350000"
  },
  {
    "text": "io iops the number of operations that you do to disk or to disk services like ebs",
    "start": "296720",
    "end": "303280"
  },
  {
    "text": "per second is a critical measure in particular around random workloads the workloads that",
    "start": "303280",
    "end": "309120"
  },
  {
    "text": "that now provision diopsides may be a better better use case a better fit for those use cases",
    "start": "309120",
    "end": "315520"
  },
  {
    "text": "we've also spent a lot of time and and talk and we'll go through and show examples of what throughput looks like the number of",
    "start": "315520",
    "end": "321840"
  },
  {
    "text": "megabytes you can stream down to or read off of a disk per second latency the the delay between individual reads or writes",
    "start": "321840",
    "end": "328960"
  },
  {
    "text": "or how long it takes to receive the first bit of a read and then capacity the actual amount of",
    "start": "328960",
    "end": "334960"
  },
  {
    "text": "storage that you provision so those those values aren't actually",
    "start": "334960",
    "end": "340080"
  },
  {
    "text": "present you'll note uh on this hard drive which is a physical device you can buy it from the other amazon service",
    "start": "340080",
    "end": "346720"
  },
  {
    "text": "amazon.com so amazon.com will sell you a physical hard drive and it has all these numbers on the",
    "start": "346720",
    "end": "352479"
  },
  {
    "start": "350000",
    "end": "414000"
  },
  {
    "text": "package on the back of the package it describes things like the number of sectors per track",
    "start": "352479",
    "end": "358800"
  },
  {
    "text": "and the number of cylinders that are part of the head and all of these other sort of mechanical vagaries that i i",
    "start": "358800",
    "end": "366319"
  },
  {
    "text": "spent a lot of time i'm sure you did as well studying their impact in the performance of your applications you'd",
    "start": "366319",
    "end": "372720"
  },
  {
    "text": "learn what all those numbers meant in terms of how many actual i os at what block size could i get how much latency",
    "start": "372720",
    "end": "379280"
  },
  {
    "text": "would be received how should i configure the file system that gets deposited on the disk",
    "start": "379280",
    "end": "384720"
  },
  {
    "text": "so on ec2 when you use ebs we don't have a back of the box that",
    "start": "384720",
    "end": "390960"
  },
  {
    "text": "data isn't the right set of information to use to evaluate the application's",
    "start": "390960",
    "end": "396479"
  },
  {
    "text": "compatibility with disk with compatibility with the performance of our disk or the behavior of our disk the the right things to use is",
    "start": "396479",
    "end": "403120"
  },
  {
    "text": "the information that we share about those services so we have two different disk subsystems two different approaches",
    "start": "403120",
    "end": "411039"
  },
  {
    "text": "to delivering storage as a service to your applications first and and the one that we'll spend a lot",
    "start": "411039",
    "end": "417280"
  },
  {
    "start": "414000",
    "end": "653000"
  },
  {
    "text": "of time sort of talking about the details of is provision diodes so provision iops is a service",
    "start": "417280",
    "end": "423280"
  },
  {
    "text": "where we're delivering not only the ability to provision the storage capacity the number of gigabytes that",
    "start": "423280",
    "end": "429280"
  },
  {
    "text": "you need but the iops capacity the amount of read and write transactions per second that you can achieve on disk",
    "start": "429280",
    "end": "436160"
  },
  {
    "text": "we'll allow you today to provision up to 2 000 iops for individual ebs volumes",
    "start": "436160",
    "end": "442240"
  },
  {
    "text": "that's a big number just for context when we talk down in a little bit standard ebs storage over a steady state",
    "start": "442240",
    "end": "449440"
  },
  {
    "text": "tends to operate in the range of 100 ions so at 2000 ios",
    "start": "449440",
    "end": "455039"
  },
  {
    "text": "you know that that storage performance is something that we've set as a provisioning marker as a target you've",
    "start": "455039",
    "end": "461360"
  },
  {
    "text": "told us how fast you want it to go and it's the job of our service to deliver that speed so we set an expectation with",
    "start": "461360",
    "end": "467360"
  },
  {
    "text": "you about how fast that will go so we'll provide up within ten percent of what",
    "start": "467360",
    "end": "472560"
  },
  {
    "text": "you asked for two thousand ios so that'd be uh between two thousand and eighteen hundred 1800",
    "start": "472560",
    "end": "478319"
  },
  {
    "text": "99.9 of the time so that's a very very high uh service standard it's a very high",
    "start": "478319",
    "end": "484479"
  },
  {
    "text": "level of performance and a high level of consistent performance one of the earliest things we heard in feedback",
    "start": "484479",
    "end": "489840"
  },
  {
    "text": "about ebs wasn't that it wasn't fast enough or that it didn't meet the needs",
    "start": "489840",
    "end": "495120"
  },
  {
    "text": "of certain workloads it was that it changed it varied it had variable performance and that variability was actually a part of the core design to",
    "start": "495120",
    "end": "501840"
  },
  {
    "text": "allow it to do the bursting that made ec2 instances boot so quickly so we've also",
    "start": "501840",
    "end": "508160"
  },
  {
    "text": "constructed provision diops to have a very specific target block size so it",
    "start": "508160",
    "end": "513200"
  },
  {
    "text": "wants 16k block operations you can write smaller than that block",
    "start": "513200",
    "end": "518399"
  },
  {
    "text": "size you can write larger than that block size but that's the unit that our service counts as an i o and as a result there",
    "start": "518399",
    "end": "524720"
  },
  {
    "text": "are some tricks that you can do to make your specific application if you know a little more about the details of how it works",
    "start": "524720",
    "end": "530800"
  },
  {
    "text": "fit into our storage from a performance standpoint each the design of provision diops was built",
    "start": "530800",
    "end": "536720"
  },
  {
    "text": "around the concept that each individual i o is metered from a service time",
    "start": "536720",
    "end": "543040"
  },
  {
    "text": "perspective so if you provision a thousand ions ebs volume each one of those individual ios is supposed to take",
    "start": "543040",
    "end": "550640"
  },
  {
    "text": "a millisecond that's the way that it was designed and it's the way that we control the performance of each of the",
    "start": "550640",
    "end": "556880"
  },
  {
    "text": "volume subsystems provisioned iops like standard ebs allow up to a terabyte of storage per volume",
    "start": "556880",
    "end": "563360"
  },
  {
    "text": "of course those can be aggregated with multiple volumes ebs to construct contrast it with provisioned iops",
    "start": "563360",
    "end": "570480"
  },
  {
    "text": "really provides a much lower density of i o per storage provisioned so at",
    "start": "570480",
    "end": "576560"
  },
  {
    "text": "roughly 100 iot steady state with best effort bursts into the hundreds ebs",
    "start": "576560",
    "end": "582080"
  },
  {
    "text": "volumes do great again for variable bursty",
    "start": "582080",
    "end": "587760"
  },
  {
    "text": "workloads that have changed built into their sort of behavior and",
    "start": "587760",
    "end": "593200"
  },
  {
    "text": "and are frankly they're less expensive so if you have some workloads where the behavior fits with standard ebs that's a",
    "start": "593200",
    "end": "599839"
  },
  {
    "text": "product you should continue to take advantage of if you're already doing the work of aggregating multiple ebs volumes",
    "start": "599839",
    "end": "606160"
  },
  {
    "text": "to try and squeeze performance out of the ec2 system really encourage you to take a look at provision biops so",
    "start": "606160",
    "end": "613600"
  },
  {
    "text": "ebs also provides as a ratio a higher degree of throughput per gigabyte",
    "start": "613600",
    "end": "619680"
  },
  {
    "text": "provisioned in comparison to privileged biops and also delivers",
    "start": "619680",
    "end": "625120"
  },
  {
    "text": "you know a kind of latency that's different so it's much slower per individual operation than provision",
    "start": "625120",
    "end": "630560"
  },
  {
    "text": "diops typically in the 10 millisecond range or less for write operations and",
    "start": "630560",
    "end": "636079"
  },
  {
    "text": "in this sort of 20 millisecond range or less for read operations so both the same size but both sort of very",
    "start": "636079",
    "end": "642800"
  },
  {
    "text": "different products you'll note i've said a bunch of the sort of specifications about how these things work but there's a very large asterisk in the",
    "start": "642800",
    "end": "649440"
  },
  {
    "text": "upper corner we should probably talk about what that means provisioned iops",
    "start": "649440",
    "end": "654640"
  },
  {
    "start": "653000",
    "end": "728000"
  },
  {
    "text": "was designed as a service specifically around the workloads of relational non-relational and high iops",
    "start": "654640",
    "end": "662560"
  },
  {
    "text": "storage so we've we found and when we worked out the design of this product",
    "start": "662560",
    "end": "668800"
  },
  {
    "text": "one of the core core pieces that we heard back from customers was the drive for consistency",
    "start": "668800",
    "end": "675040"
  },
  {
    "text": "and the consistency of performance from our perspective meant that every individual i o should be a consistent",
    "start": "675040",
    "end": "682160"
  },
  {
    "text": "experience not just the average of hundreds or thousands of them so we did meter at the individual i o level the",
    "start": "682160",
    "end": "688399"
  },
  {
    "text": "result of that is that each i o transaction has a service time has a",
    "start": "688399",
    "end": "694000"
  },
  {
    "text": "a specific latency is another way of thinking about it so that that operation then is valuable it's a",
    "start": "694000",
    "end": "701040"
  },
  {
    "text": "resource you actually pay for it in advance you provision the amount of",
    "start": "701040",
    "end": "706079"
  },
  {
    "text": "performance that you'll receive and as a result any one of those individual ios that you",
    "start": "706079",
    "end": "711200"
  },
  {
    "text": "don't take advantage of are lost they're lost forever so the service doesn't say well he didn't write 500 ios this",
    "start": "711200",
    "end": "718720"
  },
  {
    "text": "quarter second i'll i'll just give him 500 ios in the next quarter second to make up for it",
    "start": "718720",
    "end": "724320"
  },
  {
    "text": "nice if it did that but that's just not the way that it was designed because what we heard from customers is they wanted each individual i o to go at the",
    "start": "724320",
    "end": "730480"
  },
  {
    "start": "728000",
    "end": "1149000"
  },
  {
    "text": "same speed so a really critical driver of the performance of",
    "start": "730480",
    "end": "736800"
  },
  {
    "text": "of being able to extract every one of those individual i os from a provisioned iap volume is q depth you have to have",
    "start": "736800",
    "end": "744079"
  },
  {
    "text": "enough work available so that at every next millisecond a an individual i o",
    "start": "744079",
    "end": "750240"
  },
  {
    "text": "operation is waiting to be completed so there's a ratio there that's important to uh to understand so",
    "start": "750240",
    "end": "757040"
  },
  {
    "text": "if you have no cue depth there's very little latency between the",
    "start": "757040",
    "end": "762399"
  },
  {
    "text": "individual operation that you ask for and the response to that operation from the provisioned iops volume so",
    "start": "762399",
    "end": "769040"
  },
  {
    "text": "if you're delayed by a couple of milliseconds 50 milliseconds 100 milliseconds and bringing a piece of work to provision biops it doesn't do",
    "start": "769040",
    "end": "775839"
  },
  {
    "text": "any work for you but if once it gets there there's nobody else in line in front of you so you'd",
    "start": "775839",
    "end": "781040"
  },
  {
    "text": "get that response back you know in that very next millisecond in in a longer queue depth in a larger",
    "start": "781040",
    "end": "788160"
  },
  {
    "text": "number of workload units that are provisioned you could potentially add latency to your transactions if you have hundreds",
    "start": "788160",
    "end": "794639"
  },
  {
    "text": "or thousands of ios in a deep deep queue waiting for the provisioned iop volume to work it's necessarily going to take",
    "start": "794639",
    "end": "800959"
  },
  {
    "text": "long time to get through to those pieces so important as you're tuning the configuration of your applications to",
    "start": "800959",
    "end": "807440"
  },
  {
    "text": "line up the right level of queue depth to the workload that you're using another important complexity",
    "start": "807440",
    "end": "815360"
  },
  {
    "text": "important sort of differentiation between the behavior of provision diops as a as a metered service in comparison",
    "start": "815360",
    "end": "821360"
  },
  {
    "text": "with ebs as a best effort service the individual blocks are 16k that's the size so",
    "start": "821360",
    "end": "828720"
  },
  {
    "text": "if your application which communicates to our storage layer over",
    "start": "828720",
    "end": "834160"
  },
  {
    "text": "network connectivity from ec2 to the ebs network that connectivity is provided by",
    "start": "834160",
    "end": "839440"
  },
  {
    "text": "the ec2 network and every instance provides a certain amount of network bandwidth so that bandwidth is not iot",
    "start": "839440",
    "end": "845680"
  },
  {
    "text": "sensitive it doesn't really care if you're sending a thousand distinct transactions or one big",
    "start": "845680",
    "end": "851680"
  },
  {
    "text": "transaction that's a thousand times the size that's a throughput versus ios",
    "start": "851680",
    "end": "856880"
  },
  {
    "text": "measurement so it's important as you're designing the number of ebs volumes the",
    "start": "856880",
    "end": "862959"
  },
  {
    "text": "size of them the amount of data you're going to move back and forth but the ratio between the instances and their",
    "start": "862959",
    "end": "868320"
  },
  {
    "text": "size and their network performance and the ebs performance capacity how many ios you",
    "start": "868320",
    "end": "874560"
  },
  {
    "text": "could achieve is matched up so we built a service we built an addition to ebs to allow you to",
    "start": "874560",
    "end": "880639"
  },
  {
    "text": "be very very specific about exactly how much throughput to ebs ec2 provides that's called ebs optimized",
    "start": "880639",
    "end": "888160"
  },
  {
    "text": "instances so you by adding that checkbox you're able to make it so that an ec2 instance has a very specific",
    "start": "888160",
    "end": "895279"
  },
  {
    "text": "amount of throughput so m1 larges receive 500 megabits m2 4 xls m1 xl's receive a thousand",
    "start": "895279",
    "end": "903120"
  },
  {
    "text": "megabits of throughput so if you have a thousand megabits a second you can move a thousand one megabit blocks per second",
    "start": "903120",
    "end": "910399"
  },
  {
    "text": "but ebs won't take a one megabit block it wants a 16 kilobyte block so",
    "start": "910399",
    "end": "916320"
  },
  {
    "text": "you have this mismatch you could use that thousand megabytes of throughput to write very large blocks in which case",
    "start": "916320",
    "end": "923040"
  },
  {
    "text": "you'd have to have a very large number of provisioned iops volumes to spread those blocks out across the",
    "start": "923040",
    "end": "929839"
  },
  {
    "text": "individual 16k operations that it would write to disk or you may be writing very very tiny",
    "start": "929839",
    "end": "935600"
  },
  {
    "text": "little transactions not even 16k maybe 8ks like are the standard for sql server",
    "start": "935600",
    "end": "940800"
  },
  {
    "text": "or down to 4k is like our standard for mongodb even 2ks for some",
    "start": "940800",
    "end": "946079"
  },
  {
    "text": "sort of block device operations in file systems for windows things like that so if you're focused on even smaller",
    "start": "946079",
    "end": "952000"
  },
  {
    "text": "workloads the number of iops that you provision may not be the right measure to attend",
    "start": "952000",
    "end": "957680"
  },
  {
    "text": "to you have a 2k iop or a 16k op we don't really care it's you still get a",
    "start": "957680",
    "end": "963199"
  },
  {
    "text": "thousand of them if you provision a thousand so two k kios a thousand of them a second is",
    "start": "963199",
    "end": "969120"
  },
  {
    "text": "only two megabytes through the disk through the network so you could provision even more storage to",
    "start": "969120",
    "end": "976480"
  },
  {
    "text": "consume the iops capacity that ebs can provide than just the sort of normal ratios that",
    "start": "976480",
    "end": "982720"
  },
  {
    "text": "i think were standard in normal ebs of four disks or eight disks or something like that so we're seeing more exotic topologies folks running tens and",
    "start": "982720",
    "end": "990639"
  },
  {
    "text": "fifteens and twenty volume deployments to take advantage of the number of i os you can extract from the",
    "start": "990639",
    "end": "997920"
  },
  {
    "text": "ebs service and from the ec2 provisioned io service so",
    "start": "997920",
    "end": "1003040"
  },
  {
    "text": "raid becomes an incredibly important part of how you configure for that we have a lot of experience",
    "start": "1003040",
    "end": "1009759"
  },
  {
    "text": "both with md adm and lvm raids as well as in windows world using disk management to",
    "start": "1009759",
    "end": "1015920"
  },
  {
    "text": "construct striped volumes uh there's a lot of debate and dialogue about the difference",
    "start": "1015920",
    "end": "1020959"
  },
  {
    "text": "between raid 0 and raid 10. it's kind of an open discussion by and large if your",
    "start": "1020959",
    "end": "1026240"
  },
  {
    "text": "application handles durability and resilience at the application tier we",
    "start": "1026240",
    "end": "1031839"
  },
  {
    "text": "recommend raid 0 as the best method to extract as much performance as possible both read and write performance from the",
    "start": "1031839",
    "end": "1038640"
  },
  {
    "text": "disk subsystem the most efficient way to build since you probably want multiple instances deployed in our best practices",
    "start": "1038640",
    "end": "1045120"
  },
  {
    "text": "to distribute workloads across availability zones anyway makes sense that you would move the",
    "start": "1045120",
    "end": "1050400"
  },
  {
    "text": "redundancy up to the application tier on the flip side of that if your application doesn't easily distribute",
    "start": "1050400",
    "end": "1057039"
  },
  {
    "text": "across multiple instances or if a class of downtime as a you know being able to",
    "start": "1057039",
    "end": "1063440"
  },
  {
    "text": "work through a downtime by manual repair of an instance as a critical part of the design of your topology",
    "start": "1063440",
    "end": "1070000"
  },
  {
    "text": "using raid 10 gives you the opportunity if you lose an ebs volume if there's some kind of a problem with it if it",
    "start": "1070000",
    "end": "1075520"
  },
  {
    "text": "becomes corrupted in a configuration or there's some other kind of failure you know there are they are made out of",
    "start": "1075520",
    "end": "1080960"
  },
  {
    "text": "real world things and as a result they're subject to potential failure raid 10 gives you the opportunity to",
    "start": "1080960",
    "end": "1086320"
  },
  {
    "text": "restore the durability of the disk subsystem without uh without waiting around for a whole new instance to turn",
    "start": "1086320",
    "end": "1093120"
  },
  {
    "text": "on or triggering the failover of your replication so in a lot of cases here's the sort of",
    "start": "1093120",
    "end": "1099360"
  },
  {
    "text": "interesting thing in almost all of the workloads that worked on us just six months ago",
    "start": "1099360",
    "end": "1105840"
  },
  {
    "text": "you're able to provision that much performance from provision diops with a single volume today",
    "start": "1105840",
    "end": "1110960"
  },
  {
    "text": "so the difference is so big between um you know something like a hundred",
    "start": "1110960",
    "end": "1117360"
  },
  {
    "text": "iops and working and straining and squeezing to get into the thousand diops range on ec2 instances where now 2000",
    "start": "1117360",
    "end": "1123919"
  },
  {
    "text": "iops is a very trivial thing to deploy uh not a lot of complexity there single volumes attached and we've moved the",
    "start": "1123919",
    "end": "1129760"
  },
  {
    "text": "state of the arp art pretty significantly forward so uh one one team that i've worked with",
    "start": "1129760",
    "end": "1136400"
  },
  {
    "text": "personally uh that's done a lot to move the state of the art forward uh uh i",
    "start": "1136400",
    "end": "1141600"
  },
  {
    "text": "just sort of got announced today at our keynote hopefully you guys were able to take uh take a quick look at that was",
    "start": "1141600",
    "end": "1147039"
  },
  {
    "text": "the work done by the obama for america campaign we have one of the members from the obama for america campaign team here",
    "start": "1147039",
    "end": "1152400"
  },
  {
    "start": "1149000",
    "end": "1377000"
  },
  {
    "text": "j.p schneider i just want to give him a quick minute to say a couple things about how they built on top of aws using",
    "start": "1152400",
    "end": "1158720"
  },
  {
    "text": "ebs thanks miles",
    "start": "1158720",
    "end": "1163400"
  },
  {
    "text": "hi everybody um yeah as miles mentioned uh using ebs actually saved our butts a bit",
    "start": "1165520",
    "end": "1172480"
  },
  {
    "text": "we had two real use cases for it we had to scale fast we had to scale big",
    "start": "1172480",
    "end": "1178640"
  },
  {
    "text": "on the scaling fast part if you're using instant store volumes today maybe a little bit of puppet",
    "start": "1178640",
    "end": "1185360"
  },
  {
    "text": "you might be looking at you know five minutes to detect that you need to auto scale",
    "start": "1185360",
    "end": "1190559"
  },
  {
    "text": "and then about a minute to come up and then about",
    "start": "1190559",
    "end": "1195679"
  },
  {
    "text": "two to three minutes to build the puppet what we found was waiting five or ten minutes to scale up",
    "start": "1195679",
    "end": "1203760"
  },
  {
    "text": "when people wanted to donate to the president probably wasn't the best idea for us so what we did instead using",
    "start": "1203760",
    "end": "1210799"
  },
  {
    "text": "asgard and just a little bit of manual ebs work was we made all of our front-facing",
    "start": "1210799",
    "end": "1216960"
  },
  {
    "text": "nodes into ebs volumes we bolstered that with a kind of a baseline",
    "start": "1216960",
    "end": "1222720"
  },
  {
    "text": "of instant store volumes just to make sure that if ebs ever had an issue we stayed up and everything was happy",
    "start": "1222720",
    "end": "1231039"
  },
  {
    "text": "on the second use case scale scale big we really didn't do that with ec2",
    "start": "1231039",
    "end": "1237919"
  },
  {
    "text": "instances one of the things miles might mention a little bit later on is that rds now also",
    "start": "1237919",
    "end": "1244240"
  },
  {
    "text": "supports provision diops and unfortunately we",
    "start": "1244240",
    "end": "1249360"
  },
  {
    "text": "didn't have provision diops when we started the campaign but we did",
    "start": "1249360",
    "end": "1254480"
  },
  {
    "text": "wind up being able to take advantage of that so if in late may there was a about a minute of downtime",
    "start": "1254480",
    "end": "1260960"
  },
  {
    "text": "that was us switching to uh ebs volumes sorry about that",
    "start": "1260960",
    "end": "1266000"
  },
  {
    "text": "um the provisioned iops that we used uh were for both our narwhal database",
    "start": "1266000",
    "end": "1271039"
  },
  {
    "text": "you've probably heard a little bit about that in the news and that is our main data store where",
    "start": "1271039",
    "end": "1276960"
  },
  {
    "text": "was our main data store it had a lot of information and was accessed unbelievably frequently",
    "start": "1276960",
    "end": "1283120"
  },
  {
    "text": "we're in uh tens and tens of thousands of requests per minute uh during slow times",
    "start": "1283120",
    "end": "1289600"
  },
  {
    "text": "and so by using provisioned iops with rds which is of course ebs backed",
    "start": "1289600",
    "end": "1297120"
  },
  {
    "text": "we were able to keep that up during the hectic election week and",
    "start": "1297120",
    "end": "1302960"
  },
  {
    "text": "we were pretty happy with the performances really good thanks miles sweet thanks jp everybody give give you",
    "start": "1302960",
    "end": "1310000"
  },
  {
    "text": "a hand so one of the applications that i helped",
    "start": "1310000",
    "end": "1315760"
  },
  {
    "text": "with as a part of part of that workload is is what's depicted here the fairly large analytics",
    "start": "1315760",
    "end": "1322000"
  },
  {
    "text": "cluster so the upper bound for that given a distribution across",
    "start": "1322000",
    "end": "1328240"
  },
  {
    "text": "eight of our large cc2 8xl instances was significantly in excess of",
    "start": "1328240",
    "end": "1334640"
  },
  {
    "text": "200 000 iops as a performance system and at",
    "start": "1334640",
    "end": "1339840"
  },
  {
    "text": "in several different internal tests because we weren't sure exactly how much data we were going to receive",
    "start": "1339840",
    "end": "1344960"
  },
  {
    "text": "we were able to double that on demand so that puts us into a range where you're",
    "start": "1344960",
    "end": "1350400"
  },
  {
    "text": "really talking about um not just the fastest stuff available in the cloud but some of the fastest stuff",
    "start": "1350400",
    "end": "1357840"
  },
  {
    "text": "yeah it's very very high scale workload so um one of the things that i want to show",
    "start": "1357840",
    "end": "1363120"
  },
  {
    "text": "because i don't think it's enough just to sort of talk about it we should have a couple of quick attempt to the demo",
    "start": "1363120",
    "end": "1368640"
  },
  {
    "text": "gods demos i will show the difference between single volume and",
    "start": "1368640",
    "end": "1373840"
  },
  {
    "text": "multiple volume and i'll be able to show that in a couple of different ways so time for a little proof about what this",
    "start": "1373840",
    "end": "1379760"
  },
  {
    "start": "1377000",
    "end": "1842000"
  },
  {
    "text": "stuff looks like so first off",
    "start": "1379760",
    "end": "1386640"
  },
  {
    "text": "right here i think so we have this windows instance in the",
    "start": "1387039",
    "end": "1393919"
  },
  {
    "text": "corner and you'll notice uh can everybody read that in the back or should i make it a little bigger",
    "start": "1393919",
    "end": "1400840"
  },
  {
    "text": "bigger how's that for illegible and yet bigger",
    "start": "1400840",
    "end": "1407039"
  },
  {
    "text": "so uh almost there we go so here's an m24x large",
    "start": "1407600",
    "end": "1413919"
  },
  {
    "text": "instance that's running windows that's built using now windows server 2012 that",
    "start": "1413919",
    "end": "1420400"
  },
  {
    "text": "was fairly recently announced adds a couple of unique features it's also built",
    "start": "1420400",
    "end": "1426799"
  },
  {
    "text": "here with 10 provisioned iops ebs volumes each with 2000 ios",
    "start": "1426799",
    "end": "1432000"
  },
  {
    "text": "so that sets you up really something you can provision in our console without any sort of command",
    "start": "1432000",
    "end": "1437679"
  },
  {
    "text": "line code you just sort of add new pieces next next next and out comes this 20 000 iops high performance",
    "start": "1437679",
    "end": "1444640"
  },
  {
    "text": "device so what that looks like from a server standpoint is",
    "start": "1444640",
    "end": "1450720"
  },
  {
    "text": "here i'm inside of a remote desktop running powershell",
    "start": "1450720",
    "end": "1457039"
  },
  {
    "text": "connected to a windows server on ec2 and what i'm going to demonstrate is the difference between",
    "start": "1457200",
    "end": "1462880"
  },
  {
    "text": "slower my friend here that's deployed only sadly on one of our",
    "start": "1462880",
    "end": "1469679"
  },
  {
    "text": "provision diops volumes and fast a disc here that spans all 10 of them in",
    "start": "1469679",
    "end": "1474960"
  },
  {
    "text": "a raid 0 strike so it's relatively straightforward",
    "start": "1474960",
    "end": "1481760"
  },
  {
    "text": "to say i want to do work so this is doing",
    "start": "1481760",
    "end": "1486799"
  },
  {
    "text": "8k random ios that's the standard for sql server applications uh you can see",
    "start": "1486799",
    "end": "1492320"
  },
  {
    "text": "we're getting right at 2000 iops from a 2000 iops revision volume and it does it very very consistently so",
    "start": "1492320",
    "end": "1499520"
  },
  {
    "text": "i'm doing a little three second tests but you're seeing 2055 2054 2061",
    "start": "1499520",
    "end": "1507799"
  },
  {
    "text": "2054 very very tight to the specific definition of what is the provisioned",
    "start": "1509120",
    "end": "1514880"
  },
  {
    "text": "number of megabytes a second all that another example of that then",
    "start": "1514880",
    "end": "1520240"
  },
  {
    "text": "let's see if i'm looking at the right thing here would be to change it and look at the faster disk so",
    "start": "1520240",
    "end": "1526400"
  },
  {
    "text": "by going to 10 volumes instead of just one you do the same test at the same speed and now you're looking at 19",
    "start": "1526400",
    "end": "1533679"
  },
  {
    "text": "000 ios and you'll be able to do that fairly consistently larger number of",
    "start": "1533679",
    "end": "1539200"
  },
  {
    "text": "volumes we're right at you'll note here 155 megs a second that's fast",
    "start": "1539200",
    "end": "1546799"
  },
  {
    "text": "uh and we built this uh this morning in about",
    "start": "1547679",
    "end": "1553679"
  },
  {
    "text": "four minutes it's really not complicated you start the instance and turn on ebs optimized",
    "start": "1553679",
    "end": "1559360"
  },
  {
    "text": "and attach the disks and install sql io and hit build right so this used to take quite a lot of work to get to 120th this",
    "start": "1559360",
    "end": "1567120"
  },
  {
    "text": "fast so you can also see ticking along you can provision any sort of specific size",
    "start": "1567120",
    "end": "1573679"
  },
  {
    "text": "provision ios volume that you like so i've got one over here that's tucking along uh at 660 is what we provisioned",
    "start": "1573679",
    "end": "1580559"
  },
  {
    "text": "that you can see i see it's sort of bouncing around there's also there's also one",
    "start": "1580559",
    "end": "1586960"
  },
  {
    "text": "let's see where they're all at down here so this one let's redo it",
    "start": "1586960",
    "end": "1593760"
  },
  {
    "text": "so this is a 10 000 these two are on the same box again",
    "start": "1594559",
    "end": "1600080"
  },
  {
    "text": "let's take this one away so this is a 10 gig mongodb test this is using",
    "start": "1600080",
    "end": "1606080"
  },
  {
    "text": "performance i'll make it vastly larger since it's probably invisible to you",
    "start": "1606080",
    "end": "1612480"
  },
  {
    "text": "and what it will go through and we'll take a second because it it will go and build this new 10 gigs of totally random",
    "start": "1613919",
    "end": "1619840"
  },
  {
    "text": "data what that does is generate generate a test set and then it uses 16",
    "start": "1619840",
    "end": "1626159"
  },
  {
    "text": "threads on the local machine to go pound away and do random ios this time at 4k operations so to show you",
    "start": "1626159",
    "end": "1634000"
  },
  {
    "text": "another important measure while it's setting up that test file",
    "start": "1634000",
    "end": "1639120"
  },
  {
    "text": "so on the windows instance if you're back here the individual volume here let's take",
    "start": "1639120",
    "end": "1645760"
  },
  {
    "text": "one of these guys and then go to",
    "start": "1645760",
    "end": "1651039"
  },
  {
    "text": "come here you watch this stuff in",
    "start": "1651840",
    "end": "1657120"
  },
  {
    "text": "cloud watch and you get a little view into how we depict",
    "start": "1657120",
    "end": "1662799"
  },
  {
    "text": "individual volume performance there we go so you can see it provisioned at 2000 io",
    "start": "1663360",
    "end": "1670320"
  },
  {
    "text": "and down in here we've been running a couple of different tests but this",
    "start": "1670320",
    "end": "1675360"
  },
  {
    "text": "volume come on",
    "start": "1675360",
    "end": "1680600"
  },
  {
    "text": "so down in here so there's the throughput at 100 percent go",
    "start": "1691360",
    "end": "1696480"
  },
  {
    "text": "so it's definitely being consumed let's go back in time a bit",
    "start": "1696480",
    "end": "1702399"
  },
  {
    "text": "six hours so an important piece we were talking earlier about cue length so here's the",
    "start": "1702640",
    "end": "1709840"
  },
  {
    "text": "sql i o test not delivering a high enough q depth really to saturate the disk so we might",
    "start": "1709840",
    "end": "1717520"
  },
  {
    "text": "be able to squeeze a little more consistent performance out if the sql i o test were able to deliver a more consistent",
    "start": "1717520",
    "end": "1725200"
  },
  {
    "text": "or a longer q dip you'd also be able to see",
    "start": "1725200",
    "end": "1730799"
  },
  {
    "text": "so here's the i o test i don't know how many of you folks have seen what these graphs look like on standard ebs that's",
    "start": "1734000",
    "end": "1740960"
  },
  {
    "text": "maybe something we can do in another talk uh but that's basically ruler flat",
    "start": "1740960",
    "end": "1746000"
  },
  {
    "text": "performance in comparison to most network attached storage systems or other sorts of things that's variability",
    "start": "1746000",
    "end": "1751760"
  },
  {
    "text": "and the sort of single digit percentage marks across the duration of a multi-hour read so",
    "start": "1751760",
    "end": "1758080"
  },
  {
    "text": "that's that's a pretty significant success we think from a storage performance subset so this thing is",
    "start": "1758080",
    "end": "1763520"
  },
  {
    "text": "still running it may take a little longer than we have left for the talk but if we have an opportunity i'll come back to it one of the things i want to",
    "start": "1763520",
    "end": "1769760"
  },
  {
    "text": "point out is these demonstrations are in fact the worst conceivable way to benchmark the performance of ebs as a",
    "start": "1769760",
    "end": "1777360"
  },
  {
    "text": "system it's more complicated than all of this so it changes over time it has variable",
    "start": "1777360",
    "end": "1783279"
  },
  {
    "text": "uh performance based on uh all of the different complexities of a multi-tenant network system and one of the biggest",
    "start": "1783279",
    "end": "1789679"
  },
  {
    "text": "variables of that is time so aws adds new server capacity it adds new",
    "start": "1789679",
    "end": "1795360"
  },
  {
    "text": "regions it adds new availability zones all of those different things change the broader behavior a system that that",
    "start": "1795360",
    "end": "1801520"
  },
  {
    "text": "products like provision diops are doing everything amazon knows how to do to compress the performance of down to a",
    "start": "1801520",
    "end": "1806960"
  },
  {
    "text": "very specific very reusable unit evs as the earlier version of that",
    "start": "1806960",
    "end": "1812000"
  },
  {
    "text": "system doesn't have that same kind of compression from a performance standpoint so i read a great article i",
    "start": "1812000",
    "end": "1817919"
  },
  {
    "text": "don't know if you were able to read it but steve newman from scalar is here to present some of his information about",
    "start": "1817919",
    "end": "1825440"
  },
  {
    "text": "benchmarking and analysis on standard ebs so i'm going to flip back to that everybody",
    "start": "1825440",
    "end": "1830880"
  },
  {
    "text": "give steve a quick hand",
    "start": "1830880",
    "end": "1834679"
  },
  {
    "text": "there we go yeah okay so um yes my name is steve newman i'm",
    "start": "1838240",
    "end": "1845440"
  },
  {
    "start": "1842000",
    "end": "1954000"
  },
  {
    "text": "from a company called scalar and um we're building server monitoring software and um trying to kind of push",
    "start": "1845440",
    "end": "1852080"
  },
  {
    "text": "the envelope a little bit on uh on performance and uh and scalability uh in the system we're building and um",
    "start": "1852080",
    "end": "1859039"
  },
  {
    "text": "and for us as with a lot of systems um that kind of performance work a lot of it comes down to i o performance",
    "start": "1859039",
    "end": "1865919"
  },
  {
    "text": "and we're building on top of ebs so as we were designing our system we found ourselves",
    "start": "1865919",
    "end": "1870960"
  },
  {
    "text": "asking a lot of the questions that miles was alluding to earlier about you know exactly how does this thing perform know",
    "start": "1870960",
    "end": "1877039"
  },
  {
    "text": "as miles was showing us uh you know that very nice slide which is kind of ebs a physical drive and a",
    "start": "1877039",
    "end": "1883120"
  },
  {
    "text": "big not equal in between um you know ebs has all kinds of nice properties but",
    "start": "1883120",
    "end": "1888240"
  },
  {
    "text": "it's not the kind of hard traditional hard disk storage that that many of us are familiar with",
    "start": "1888240",
    "end": "1894080"
  },
  {
    "text": "and so we had all these questions you know what kind of performance should we expect and what's going to work well or what what might not work as well",
    "start": "1894080",
    "end": "1900640"
  },
  {
    "text": "we couldn't really find the answers we wanted or we didn't realize we didn't know the answers we looked around we",
    "start": "1900640",
    "end": "1906559"
  },
  {
    "text": "couldn't find the answers so we decided we'd better go get the answers and",
    "start": "1906559",
    "end": "1912480"
  },
  {
    "text": "so that led to a big project that we did to benchmark ec2io performance in a",
    "start": "1912480",
    "end": "1918960"
  },
  {
    "text": "bunch of different scenarios i don't have time to to go through all of that today i'll at the end of my little",
    "start": "1918960",
    "end": "1924399"
  },
  {
    "text": "segment i'll give you a link but what i am going to talk about a little bit um and it's probably more important than our specific results is",
    "start": "1924399",
    "end": "1931600"
  },
  {
    "text": "the the kind of methodology that you need to to go in with if you want to",
    "start": "1931600",
    "end": "1936640"
  },
  {
    "text": "understand performance of something you're building on top of ebs and uh and as miles is alluding you know",
    "start": "1936640",
    "end": "1943760"
  },
  {
    "text": "fire off one uh one little test watch it print out a number at the end and declare victory",
    "start": "1943760",
    "end": "1949279"
  },
  {
    "text": "is not going to turn out to be a great methodology um",
    "start": "1949279",
    "end": "1954799"
  },
  {
    "text": "okay so you know really the um i'm going to go into some detail but really i'm just",
    "start": "1954799",
    "end": "1960240"
  },
  {
    "text": "going to try to tell you a couple of things here convince you of a couple of things when you're doing engineering if you",
    "start": "1960240",
    "end": "1965279"
  },
  {
    "text": "want to do it right you need good data to base your decisions on and in the cloud",
    "start": "1965279",
    "end": "1972000"
  },
  {
    "text": "you know on top of ebs in particular and a lot of other things um you you really need to make measurements",
    "start": "1972000",
    "end": "1978320"
  },
  {
    "text": "and you need to make multiple measurements when you're when you're testing something when you want to see you know does this work or how does that",
    "start": "1978320",
    "end": "1984080"
  },
  {
    "text": "work you want to be thinking about making measure many multiple measurements and putting them together not just running a test and and looking",
    "start": "1984080",
    "end": "1991600"
  },
  {
    "text": "at the one number that comes out as as you might be used to so um but let's take a brief step back",
    "start": "1991600",
    "end": "1999360"
  },
  {
    "start": "1995000",
    "end": "2062000"
  },
  {
    "text": "um you know why why do we bother doing doing performance tests when we're doing engineering um well they're really",
    "start": "1999360",
    "end": "2005919"
  },
  {
    "text": "a bunch of reasons um all the way through the life cycle of a project early on uh you're you know you're",
    "start": "2005919",
    "end": "2012640"
  },
  {
    "text": "you're making assumptions about you're building on top of some platform whether it's ebs or rds or whatever it is and",
    "start": "2012640",
    "end": "2018399"
  },
  {
    "text": "you're making assumptions mentally about how that performs i'm going to it's going to be in this ballpark it's going",
    "start": "2018399",
    "end": "2023440"
  },
  {
    "text": "to vary this way or that way as i do this thing and those assumptions may not be correct",
    "start": "2023440",
    "end": "2028480"
  },
  {
    "text": "but a performance test will really validate that for you then as you go along you're making",
    "start": "2028480",
    "end": "2034480"
  },
  {
    "text": "choices and design decisions i can optimize this way or that way maybe i should be using a different instance type",
    "start": "2034480",
    "end": "2040640"
  },
  {
    "text": "and again a you know a test is a performance test is your best tool for accurate for accurately making that",
    "start": "2040640",
    "end": "2046880"
  },
  {
    "text": "decision and then as you get farther along maybe you're ready to launch or you're you're getting ready to launch",
    "start": "2046880",
    "end": "2053599"
  },
  {
    "text": "or you've launched and you're wondering about capacity now you're doing a load test which is you know again a kind of kind of",
    "start": "2053599",
    "end": "2059599"
  },
  {
    "text": "performance benchmark so we we like to think of performance benchmarks as being controlled",
    "start": "2059599",
    "end": "2066638"
  },
  {
    "start": "2062000",
    "end": "2123000"
  },
  {
    "text": "experiments you you conduct a test you get a result then you change something maybe you try",
    "start": "2066639",
    "end": "2072480"
  },
  {
    "text": "different instance type or you or you tune a little bit uh you run them run the test again you get a new measurement",
    "start": "2072480",
    "end": "2078720"
  },
  {
    "text": "and you compare those and that tells you the effect of the change that you made",
    "start": "2078720",
    "end": "2083760"
  },
  {
    "text": "so i just sort of schematically sketched out a little example here we've got our application that we're",
    "start": "2083760",
    "end": "2089839"
  },
  {
    "text": "running uh running some application under some workload on two different uh say ec2",
    "start": "2089839",
    "end": "2096638"
  },
  {
    "text": "instance types and we find on the first instance type we run our test and we see it sustained",
    "start": "2096639",
    "end": "2102560"
  },
  {
    "text": "103 operations per second we try it again on a different instance type and we get 152",
    "start": "2102560",
    "end": "2109040"
  },
  {
    "text": "operations per second and so we conclude that the second instance type gives us about 50 better",
    "start": "2109040",
    "end": "2115200"
  },
  {
    "text": "performance so that's a nice tidy conclusion um but so i'm going to ask the question is",
    "start": "2115200",
    "end": "2121599"
  },
  {
    "text": "that valid and um probably not uh you know in",
    "start": "2121599",
    "end": "2127599"
  },
  {
    "start": "2123000",
    "end": "2344000"
  },
  {
    "text": "in the the trouble is when we when we make it run a test like that",
    "start": "2127599",
    "end": "2132720"
  },
  {
    "text": "we're measuring a lot more than just our application we're really measuring",
    "start": "2132720",
    "end": "2137760"
  },
  {
    "text": "an application with some tuning of that application on some workload",
    "start": "2137760",
    "end": "2143599"
  },
  {
    "text": "on a particular instance type which we've configured in a particular way it's in a particular region and zone",
    "start": "2143599",
    "end": "2150400"
  },
  {
    "text": "on a particular instance in that zone at a particular time a particular state of",
    "start": "2150400",
    "end": "2155520"
  },
  {
    "text": "the cluster network and the ebs volumes and whatever other backend systems we're working on there's a very complicated",
    "start": "2155520",
    "end": "2162000"
  },
  {
    "text": "picture here and when we get our little 153 operations per second number popping",
    "start": "2162000",
    "end": "2167599"
  },
  {
    "text": "out at the end of our test you know all of this big complicated system",
    "start": "2167599",
    "end": "2173359"
  },
  {
    "text": "went into that number and um so you know it's dangerous to assume",
    "start": "2173359",
    "end": "2178880"
  },
  {
    "text": "that you know the one variable you're interested in was the you know was the one factor that really determined that",
    "start": "2178880",
    "end": "2184800"
  },
  {
    "text": "number so translated back into the kind of scientific",
    "start": "2184800",
    "end": "2190640"
  },
  {
    "text": "language of a controlled experiment what does that mean it means we don't control",
    "start": "2190640",
    "end": "2195680"
  },
  {
    "text": "all of the independent variables in our experiment this chart kind of illustrates the",
    "start": "2195680",
    "end": "2201119"
  },
  {
    "text": "problem so here um i i took four very simple i o benchmarks and ran them on",
    "start": "2201119",
    "end": "2206160"
  },
  {
    "text": "four ec2 ebs backed ec2 instances and um",
    "start": "2206160",
    "end": "2211599"
  },
  {
    "text": "and so here we're just we're just bar charting the results so all of these each of these four instances have the",
    "start": "2211599",
    "end": "2217680"
  },
  {
    "text": "same configuration it was um an m1 dot small ec2 instance backed by a",
    "start": "2217680",
    "end": "2223599"
  },
  {
    "text": "single ebs volume you can see the results were really very",
    "start": "2223599",
    "end": "2228880"
  },
  {
    "text": "highly variable on one of the tests the third chunk of bars from the left there",
    "start": "2228880",
    "end": "2235280"
  },
  {
    "text": "there was a ratio of 3 000 percent 30 to 1 between the best and worst of",
    "start": "2235280",
    "end": "2241839"
  },
  {
    "text": "the of the four instances that i'm presenting here even on the most stable benchmark the large reads benchmark",
    "start": "2241839",
    "end": "2248800"
  },
  {
    "text": "there was a 50 variation from the best to worst instance and 50 is a lot right that's you know if",
    "start": "2248800",
    "end": "2256240"
  },
  {
    "text": "you're making some decision should i retune this this way or should i try this other thing the real effect you're trying to measure may be a lot smaller",
    "start": "2256240",
    "end": "2262640"
  },
  {
    "text": "than 50 so if you have a 50 error bar uh and you just measure once you're",
    "start": "2262640",
    "end": "2267839"
  },
  {
    "text": "you're really just flipping a coin now i i should say on this slide i was going a little bit for shock value i was",
    "start": "2267839",
    "end": "2274400"
  },
  {
    "text": "trying to highlight my point so i delet i did deliberately seek out an example where the variations would be",
    "start": "2274400",
    "end": "2280720"
  },
  {
    "text": "large and in these four instances that i'm presenting you i originally ran this",
    "start": "2280720",
    "end": "2285760"
  },
  {
    "text": "test on 45 instances and i'm showing you four that spread kind of from the best from the worst",
    "start": "2285760",
    "end": "2291040"
  },
  {
    "text": "so i've stretched a little but not much you know i i didn't have to go looking for some very exotic configuration to to",
    "start": "2291040",
    "end": "2297520"
  },
  {
    "text": "find an example where you'd get these these large variations so one lesson you might take from this",
    "start": "2297520",
    "end": "2303440"
  },
  {
    "text": "is uh if you care about consistent performance don't run on a don't run your system on",
    "start": "2303440",
    "end": "2308480"
  },
  {
    "text": "a single non-provisioned iops ebs volume um and that's probably valid but",
    "start": "2308480",
    "end": "2314480"
  },
  {
    "text": "really the the deeper and more general lesson is that the the cloud is a as a turbulent noisy place",
    "start": "2314480",
    "end": "2321280"
  },
  {
    "text": "and there are a lot of things you can do to reduce variance provisioned iaps are a great tool for that um but",
    "start": "2321280",
    "end": "2328240"
  },
  {
    "text": "you should always assume that some noise is going to creep into your system somewhere even if it's not from ebs um",
    "start": "2328240",
    "end": "2333359"
  },
  {
    "text": "it's you know there's going to be noise in your system and um and and so you need to think about that",
    "start": "2333359",
    "end": "2340160"
  },
  {
    "text": "when you're interpreting your your performance tests so so what do we do about this um",
    "start": "2340160",
    "end": "2347520"
  },
  {
    "start": "2344000",
    "end": "2454000"
  },
  {
    "text": "the answer is really very simple when you're running a performance test you need to run it multiple times",
    "start": "2347520",
    "end": "2352800"
  },
  {
    "text": "uh and very preferably on different instances at different times uh and and really",
    "start": "2352800",
    "end": "2358400"
  },
  {
    "text": "that's the entire takeaway from this segment is run run your test multiple times",
    "start": "2358400",
    "end": "2364880"
  },
  {
    "text": "multiple copies on multiple occasions different instances different points in time um and so",
    "start": "2364880",
    "end": "2370480"
  },
  {
    "text": "what you're going to get now is instead of one one number you know this configuration 103 that configuration 152",
    "start": "2370480",
    "end": "2377200"
  },
  {
    "text": "you're going to get a whole collection of numbers and if you just pull the median or some",
    "start": "2377200",
    "end": "2382400"
  },
  {
    "text": "some other kind of average out of that you'll kind of hide you you'll wash away",
    "start": "2382400",
    "end": "2387440"
  },
  {
    "text": "a lot of that variability and you'll get a number that's that's more honest and repeatable that you can rely on a little",
    "start": "2387440",
    "end": "2393440"
  },
  {
    "text": "bit more that you've you've averaged out some of those unwanted independent variables like the state of the network",
    "start": "2393440",
    "end": "2399520"
  },
  {
    "text": "and um and and you know hopefully you're really just measuring the one independent variable you were looking at the new tuning or the new optimized code",
    "start": "2399520",
    "end": "2406240"
  },
  {
    "text": "or or whatever other factor you're you're trying to test what's also interesting is from that",
    "start": "2406240",
    "end": "2411760"
  },
  {
    "text": "same collection of numbers um by looking at the variability across all those numbers",
    "start": "2411760",
    "end": "2417839"
  },
  {
    "text": "you um you get an idea of how stable your system is going to be in production um you know if you're if your numbers",
    "start": "2417839",
    "end": "2423359"
  },
  {
    "text": "are all within five percent of each other that tells you one one thing if there if there's a lot more variation in",
    "start": "2423359",
    "end": "2429280"
  },
  {
    "text": "your test results then that tells you there's probably going to be a similar variation in your production performance",
    "start": "2429280",
    "end": "2434800"
  },
  {
    "text": "and and that's something you need to know you may want to see whether you can mitigate that or just you know be prepared to um",
    "start": "2434800",
    "end": "2441760"
  },
  {
    "text": "to understand that it's going to be there but that's very important information um and it's nice to get that information",
    "start": "2441760",
    "end": "2446800"
  },
  {
    "text": "early on during tests rather than you know kind of a trial by fire in your in your production system",
    "start": "2446800",
    "end": "2454640"
  },
  {
    "text": "um all right so that's that's about as much detail as i can go into uh in this quick little segment um thanks again for",
    "start": "2454640",
    "end": "2461599"
  },
  {
    "text": "miles to give me the chance to to come up here and speak today as i mentioned",
    "start": "2461599",
    "end": "2466960"
  },
  {
    "text": "all this came out of a relatively extensive project we did to uh to benchmark ec2 and ebs i o performance",
    "start": "2466960",
    "end": "2475520"
  },
  {
    "text": "and i've given you the link here on a slide that you're not going to be able to look at later because my slides",
    "start": "2475520",
    "end": "2480560"
  },
  {
    "text": "didn't get into the publish slides but you can find it at blog.scalar.com",
    "start": "2480560",
    "end": "2487319"
  },
  {
    "text": "that's s-c-a-l-y-r so if you're interested in that it goes into more detail about a lot of things",
    "start": "2487520",
    "end": "2494079"
  },
  {
    "text": "we found about specific configuration specific instance types it also talks more about kind of the ideas behind this",
    "start": "2494079",
    "end": "2500160"
  },
  {
    "text": "methodology you know what do you want to do if you're really trying to uh to run a performance benchmark and get numbers",
    "start": "2500160",
    "end": "2506240"
  },
  {
    "text": "you can trust so blog.scalar.com",
    "start": "2506240",
    "end": "2510359"
  },
  {
    "text": "great everybody give them a hand",
    "start": "2511599",
    "end": "2515440"
  },
  {
    "text": "so if you look at the workload that that steve was looking for he was really",
    "start": "2518960",
    "end": "2524720"
  },
  {
    "text": "trying to understand the performance and the behavior of our very smallest instances and i think the analysis that he did was",
    "start": "2524720",
    "end": "2531280"
  },
  {
    "text": "very sophisticated and we really appreciate the hard work we're working together with steve to um it was",
    "start": "2531280",
    "end": "2537520"
  },
  {
    "text": "unfortunate timing his uh the wrap up of his testing was several days before the",
    "start": "2537520",
    "end": "2542880"
  },
  {
    "text": "launch of provision diops just a bummer so we're hoping to have him rerun some of those tests and get a better look at",
    "start": "2542880",
    "end": "2549440"
  },
  {
    "text": "what it looks like on the newer systems but everybody appreciates your help the",
    "start": "2549440",
    "end": "2556079"
  },
  {
    "text": "what it seems like at this point we've gone through showed a couple quick demonstrations talked through the performance of",
    "start": "2556079",
    "end": "2562400"
  },
  {
    "text": "standard ebs and provision die off cbs we're confident at this time",
    "start": "2562400",
    "end": "2567839"
  },
  {
    "text": "as a result of the hard work that the ebs teams put in that we have a storage subsystem a posix storage environment",
    "start": "2567839",
    "end": "2574319"
  },
  {
    "text": "that allows high performance on relational databases on nosql databases on data warehouses on your big files on",
    "start": "2574319",
    "end": "2581119"
  },
  {
    "text": "your media you know they're the right disks to use out there for the right services",
    "start": "2581119",
    "end": "2586640"
  },
  {
    "text": "and we we're looking forward to i think all of the solution architects are looking forward to",
    "start": "2586640",
    "end": "2591680"
  },
  {
    "text": "answering your questions about storage performance answering your questions around storage configurations for your specific workloads",
    "start": "2591680",
    "end": "2598240"
  },
  {
    "text": "and helping you work through to get to the best design that you can so that you can continue to innovate and",
    "start": "2598240",
    "end": "2604839"
  },
  {
    "text": "reinvent thank you very much for taking the time i know as a bunch of different stuff thanks everybody for attending the talk",
    "start": "2604839",
    "end": "2613880"
  }
]