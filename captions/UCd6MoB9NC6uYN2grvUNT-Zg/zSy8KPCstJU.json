[
  {
    "text": "yes hello everyone and welcome to the next episode of you don't serve us this time it's the last episode of",
    "start": "0",
    "end": "6779"
  },
  {
    "text": "prototyping yet before we go to best practices and who better to be here than Jeremy Daly thanks for joining us hey",
    "start": "6779",
    "end": "13740"
  },
  {
    "text": "thanks for having me and before we even begin we're going to do some testing as",
    "start": "13740",
    "end": "19320"
  },
  {
    "text": "well of the loyalty service we also have some type scripts lots of tooling lots of stuff we've been discussing that",
    "start": "19320",
    "end": "26189"
  },
  {
    "text": "Jeremy before Jeremy and I before we started this dream and it seems like there's a lot of tooling there's a lot",
    "start": "26189",
    "end": "32070"
  },
  {
    "text": "of stuff you should know besides just writing the tasks itself and we should be capturing that piece so I just want",
    "start": "32070",
    "end": "40350"
  },
  {
    "text": "to ask you Jeremy is there anything you want to tell us about if you think so many about the newsletter or podcasts",
    "start": "40350",
    "end": "46079"
  },
  {
    "text": "and things like this so anything you want to bring us today yes so I'm doing",
    "start": "46079",
    "end": "51420"
  },
  {
    "text": "some merchandising so service chats is my new podcast it comes out June 17th we",
    "start": "51420",
    "end": "60239"
  },
  {
    "text": "are going to be talking about all things all things server lists I got some great guests lined up and it should be really",
    "start": "60239",
    "end": "67409"
  },
  {
    "text": "interesting it's sort of beyond the what is service and goes a little bit deeper into some of the technical details so",
    "start": "67409",
    "end": "74220"
  },
  {
    "text": "that is hopefully gonna be exciting for some and for others it may put them to sleep but I enjoy it so I'm doing that",
    "start": "74220",
    "end": "82049"
  },
  {
    "text": "and then also my offline done newsletter off by none do weekly service newsletter",
    "start": "82049",
    "end": "88710"
  },
  {
    "text": "that is about I don't know two thousand pages long every week it seems like",
    "start": "88710",
    "end": "93780"
  },
  {
    "text": "because there's so much awesome service content out there I just read it all I",
    "start": "93780",
    "end": "98810"
  },
  {
    "text": "grab all the interesting stuff put some comments in there and and and send it on every week use cases stories just",
    "start": "98810",
    "end": "107009"
  },
  {
    "text": "Goodreads events coming up things like that so subscribe to that I'd appreciate",
    "start": "107009",
    "end": "112229"
  },
  {
    "text": "that and you know it again I'm all over the place Twitter and and stuff like that so if",
    "start": "112229",
    "end": "118170"
  },
  {
    "text": "you want to reach me you know ask Jeremy underscore daily and and I'd love to love to chat with you and talk service",
    "start": "118170",
    "end": "124369"
  },
  {
    "text": "awesome okay so let's kick this off then so Jeremy I would ask you to switch your",
    "start": "124369",
    "end": "129569"
  },
  {
    "text": "video off and then I'm just gonna go over where we're supposed to be and let's go",
    "start": "129569",
    "end": "136650"
  },
  {
    "text": "through this so let me know if you're seeing my screen you should be there",
    "start": "136650",
    "end": "143220"
  },
  {
    "text": "should be a bunch of coding there I see it's green yes switching now you should go so it",
    "start": "143220",
    "end": "152460"
  },
  {
    "text": "might take about 5 or 10 seconds so let me know you should see an event autism",
    "start": "152460",
    "end": "159260"
  },
  {
    "text": "awesome so for those of you folks who are seeing this for the first time we are good disabling the video just",
    "start": "159260",
    "end": "165060"
  },
  {
    "text": "because I'm having some hardware issues which I need two effects but we're here with you we're gonna go through for the",
    "start": "165060",
    "end": "171150"
  },
  {
    "text": "next hour the last episodes we were doing what we call loyalty service which",
    "start": "171150",
    "end": "176670"
  },
  {
    "text": "basically is a file inside a repository a folder actually that you would see",
    "start": "176670",
    "end": "182490"
  },
  {
    "text": "source back-end and then each of those services and loyalty is the one that we're still writing it there's gonna be a pull",
    "start": "182490",
    "end": "188730"
  },
  {
    "text": "request after this episode and that we should be able to see how we are",
    "start": "188730",
    "end": "193740"
  },
  {
    "text": "refactoring and how you're improving before we hit the merge to the CI system",
    "start": "193740",
    "end": "199010"
  },
  {
    "text": "what we're going to be doing is there's one particular piece that we tested last",
    "start": "199010",
    "end": "204360"
  },
  {
    "text": "yesterday which was ingest and basically didn't just add the points to a customer",
    "start": "204360",
    "end": "212010"
  },
  {
    "text": "a loyalty member and we're going to be testing their function and also walking through how that's possible there's a",
    "start": "212010",
    "end": "218520"
  },
  {
    "text": "bunch of tooling that we are using that may not be easy for the first time at least it wasn't for me so I'm interested",
    "start": "218520",
    "end": "225150"
  },
  {
    "text": "in showing that over to you and then we go through the testing and Jeremy as always surely has lots of advices for us",
    "start": "225150",
    "end": "232500"
  },
  {
    "text": "and how we could do better so let me show you what we're doing visually so",
    "start": "232500",
    "end": "239250"
  },
  {
    "text": "last episode we showed you how we implemented the booking system and introduced sub functions and all that",
    "start": "239250",
    "end": "245550"
  },
  {
    "text": "stuff and now what we're actually coding as we speak is the whole page on the top",
    "start": "245550",
    "end": "251840"
  },
  {
    "text": "right here which is my name my loyalty status my reference number and also how",
    "start": "251840",
    "end": "258810"
  },
  {
    "text": "many points I got and obviously how far am I should the next tier this is not",
    "start": "258810",
    "end": "264660"
  },
  {
    "text": "yet integrated into the front end we're building the schema and everything so if you want to follow that you should actually go through this",
    "start": "264660",
    "end": "271300"
  },
  {
    "text": "domain repo which is either by simples a de Bresse service airline booking and if",
    "start": "271300",
    "end": "276700"
  },
  {
    "text": "you go to the pull request we're gonna be opening one tomorrow if you are in",
    "start": "276700",
    "end": "282340"
  },
  {
    "text": "curious about how we solve some other other problems some of the hiccups we had each of those has links should",
    "start": "282340",
    "end": "289390"
  },
  {
    "text": "developer tools or design choices that we have to make even before a readme",
    "start": "289390",
    "end": "294940"
  },
  {
    "text": "gets completed so watch out for this so how do we start last last night",
    "start": "294940",
    "end": "303910"
  },
  {
    "text": "we had a challenge with S&S not being able to publish a message to London so",
    "start": "303910",
    "end": "310060"
  },
  {
    "text": "if you're watching from yesterday I'm just kind of going to recap that real quick this SNS topic is what we published a message once we have a",
    "start": "310060",
    "end": "316900"
  },
  {
    "text": "reserved booking and once that's reserved we call a lambda function code ingest which is still one we gonna test",
    "start": "316900",
    "end": "323350"
  },
  {
    "text": "right now unfortunately for some reason we couldn't figure out at the stream yesterday why you could test it through",
    "start": "323350",
    "end": "331150"
  },
  {
    "text": "the console but not through SNS so turns out it was an issue with the runtime 10",
    "start": "331150",
    "end": "337120"
  },
  {
    "text": "and OJ's 10 we switch to node.js 8.10 is actually now working just fine we",
    "start": "337120",
    "end": "342580"
  },
  {
    "text": "couldn't quite figure out yet why that's the case but if we figure that out you're gonna be able to see that into",
    "start": "342580",
    "end": "348910"
  },
  {
    "text": "the pull request so just to show you how we're supposed to work and then we go to",
    "start": "348910",
    "end": "353980"
  },
  {
    "text": "test so you make sense and why we're testing why we're testing so I'm gonna",
    "start": "353980",
    "end": "359620"
  },
  {
    "text": "copy an event which X is gonna come from a step machine so if I just say this I'm",
    "start": "359620",
    "end": "367840"
  },
  {
    "text": "gonna zoom in in case you're not seeing it this should have a customer a customer ID and the price of the flight",
    "start": "367840",
    "end": "378370"
  },
  {
    "text": "so basically calculating points based on the price so let's just say human",
    "start": "378370",
    "end": "384150"
  },
  {
    "text": "because why not and then we publish that message and if that works we should go",
    "start": "384150",
    "end": "391480"
  },
  {
    "text": "to dynamodb and in DynamoDB there is a loyalty table which is actually this one",
    "start": "391480",
    "end": "396580"
  },
  {
    "text": "here and here we go we should be able to see a new entry with a new you d the customer named the dates and how",
    "start": "396580",
    "end": "402929"
  },
  {
    "text": "many points so the reason you see one two three four five is we're not doing anything fancy on the point system we're",
    "start": "402929",
    "end": "408959"
  },
  {
    "text": "just getting the price of the flight and add in that as the points we will evoke this don't worry there's plenty of",
    "start": "408959",
    "end": "415259"
  },
  {
    "text": "complexity already so that's pretty much it from the from the loyalty system and",
    "start": "415259",
    "end": "420779"
  },
  {
    "text": "the whole logic of it do you have any questions Your Honor before we kick off the testing just in case that wasn't",
    "start": "420779",
    "end": "427439"
  },
  {
    "text": "ever explained yeah exactly so let's",
    "start": "427439",
    "end": "441659"
  },
  {
    "text": "walk through their codes so let me know if it if it's readable I'm trying to zoom in as much as I can so you should",
    "start": "441659",
    "end": "449309"
  },
  {
    "text": "be able to see my visits to your code into one part of the lunga function which is the handler it's written in",
    "start": "449309",
    "end": "456869"
  },
  {
    "text": "typescript can you see that perfect so the way we start is we we do a few",
    "start": "456869",
    "end": "464459"
  },
  {
    "text": "imports which I'm gonna show in a minute and by the way thanks just sign moto Bourne who wrote the function so I'm",
    "start": "464459",
    "end": "470219"
  },
  {
    "text": "just being the one speaking about it which is easy so he floats up most of that and we get the event from S&S and",
    "start": "470219",
    "end": "477449"
  },
  {
    "text": "we can type so it just does a basic validation over the interface if that really is an SMS so if you were to try",
    "start": "477449",
    "end": "483899"
  },
  {
    "text": "to do something like let's say like this and pass something else that would fail",
    "start": "483899",
    "end": "492029"
  },
  {
    "text": "already and saying this is not the same as event there's a basic type checking is not strict strictly checking it for",
    "start": "492029",
    "end": "499079"
  },
  {
    "text": "real because this gets your built into JavaScript but it does a job for what we need and that event itself because it's",
    "start": "499079",
    "end": "506999"
  },
  {
    "text": "an SNS we walk through the whole array of events and then we say this",
    "start": "506999",
    "end": "512849"
  },
  {
    "text": "particular SNS is the record we are interested in from here we can obviously",
    "start": "512849",
    "end": "518279"
  },
  {
    "text": "start asking who is the customer what's the price and we can start adding the",
    "start": "518279",
    "end": "523948"
  },
  {
    "text": "points which basically does the manipulation of right into DynamoDB doing a try and cash etc",
    "start": "523949",
    "end": "532819"
  },
  {
    "text": "actually that's a good point I actually may even just do a how to complete you document this which is a quite",
    "start": "561270",
    "end": "567200"
  },
  {
    "text": "interesting lambda handler lambda function handler that takes one SNS",
    "start": "567200",
    "end": "576149"
  },
  {
    "text": "message at a time and then we just explained everything else yeah perfect",
    "start": "576149",
    "end": "585360"
  },
  {
    "text": "and what this does the the real piece about the code is inside that function",
    "start": "585360",
    "end": "590910"
  },
  {
    "text": "called add points we don't want to clutter the handler and add everything we need in there as Jeremy and I were",
    "start": "590910",
    "end": "596760"
  },
  {
    "text": "discussing and Jeremy can correct me if I'm wrong the handler should only be doing a small piece as little as",
    "start": "596760",
    "end": "602850"
  },
  {
    "text": "possible and the whole logic should actually be in a function itself which you can treat as a normal function you",
    "start": "602850",
    "end": "608790"
  },
  {
    "text": "can even go use something else if you future okay so let me just do this so it",
    "start": "608790",
    "end": "620430"
  },
  {
    "text": "sounds like it's not patching as yesterday so I'm just gonna put into",
    "start": "620430",
    "end": "625620"
  },
  {
    "text": "speaker and let me know if they can hear you now they should okay",
    "start": "625620",
    "end": "634740"
  },
  {
    "text": "I hope so they're not able to hear",
    "start": "634740",
    "end": "640589"
  },
  {
    "text": "Jeremy oh no yeah yes so crisis averted",
    "start": "640589",
    "end": "649459"
  },
  {
    "text": "let me repeat what I said earlier about the record about the SMS message that is",
    "start": "649459",
    "end": "656880"
  },
  {
    "text": "coming in so you'll notice that you're calling records zero you're grabbing the",
    "start": "656880",
    "end": "662579"
  },
  {
    "text": "first element in an array that's the standard format that AWS uses on a lot",
    "start": "662579",
    "end": "667589"
  },
  {
    "text": "of its incoming events where it puts records into an array because if you're",
    "start": "667589",
    "end": "673649"
  },
  {
    "text": "batching and you have sqs coming in or you have Kinesis coming in or dynamodb",
    "start": "673649",
    "end": "679290"
  },
  {
    "text": "streams you would have multiple records that would come in with every event or",
    "start": "679290",
    "end": "684420"
  },
  {
    "text": "you could have multiple records so the idea of using records zero though in it",
    "start": "684420",
    "end": "689880"
  },
  {
    "text": "with this SNS is because SNS will only ever send you one message at a time I'm so it's safe to just check the first",
    "start": "689880",
    "end": "695800"
  },
  {
    "text": "record you don't have to move through and see if there's other records in that event that comes in exactly and you also",
    "start": "695800",
    "end": "703600"
  },
  {
    "text": "mention something interesting to me offline which I didn't we did I didn't think it through in here we absolutely trust the",
    "start": "703600",
    "end": "711399"
  },
  {
    "text": "typescript we do is thing and we'll always make sure that the interface is there but but LEM that doesn't support",
    "start": "711399",
    "end": "718330"
  },
  {
    "text": "that fit natively which means we will have to transpire this and build into",
    "start": "718330",
    "end": "723430"
  },
  {
    "text": "your JavaScript which means there's no real type safety there and you said that you would have a library a parser or",
    "start": "723430",
    "end": "729520"
  },
  {
    "text": "something is that is that what you said because typescript is great because it",
    "start": "729520",
    "end": "736209"
  },
  {
    "text": "does do you know the type checking mostly when you're doing developing but here you're not actually handing",
    "start": "736209",
    "end": "743110"
  },
  {
    "text": "anything off this is what's happening if the SNS event is just a standard format",
    "start": "743110",
    "end": "749680"
  },
  {
    "text": "that you can use so that when you parse that event later on in your in your handler there that the typescript will",
    "start": "749680",
    "end": "756220"
  },
  {
    "text": "pick that information off but in actuality once you publish that code typescript won't help with that and",
    "start": "756220",
    "end": "762370"
  },
  {
    "text": "won't actually do any real validation on that so my my my comment to you was",
    "start": "762370",
    "end": "767589"
  },
  {
    "text": "you're doing a json.parse on event record 0.10 s got message it's possible",
    "start": "767589",
    "end": "773860"
  },
  {
    "text": "that an event gets sent into this that either doesn't have the records that somebody else calls this some other way",
    "start": "773860",
    "end": "780550"
  },
  {
    "text": "so if you are gonna do something gonna go json.parse it's a good idea to wrap",
    "start": "780550",
    "end": "786459"
  },
  {
    "text": "that within a try-catch block as well and make sure that entire thing completes and really what you could do",
    "start": "786459",
    "end": "792910"
  },
  {
    "text": "here is you could just include those those first three cons you can put those within that try you've got already",
    "start": "792910",
    "end": "799839"
  },
  {
    "text": "defined got rom so yeah so I don't even even you wouldn't need to do to try blocks you can just do the you just do",
    "start": "799839",
    "end": "805540"
  },
  {
    "text": "the one so something like this is that what you say uh actually just I would",
    "start": "805540",
    "end": "811270"
  },
  {
    "text": "delete the I would delete the second that the catch under the constants and and go all the way down and delete that",
    "start": "811270",
    "end": "818200"
  },
  {
    "text": "next try so that the Const the three cons and the await are all in one try block got you okay here's a man",
    "start": "818200",
    "end": "825220"
  },
  {
    "text": "you're not using those outside of that yeah that's true okay so something like this one here",
    "start": "825220",
    "end": "831630"
  },
  {
    "text": "so with moving to a single try-catch and if that fails I will know exactly and",
    "start": "831630",
    "end": "836710"
  },
  {
    "text": "that was fail even before last strike catch as well okay all right yeah and so",
    "start": "836710",
    "end": "841770"
  },
  {
    "text": "and you might want to do better error handling in there you know you might want to throw you know maybe a a better",
    "start": "841770",
    "end": "848500"
  },
  {
    "text": "message or or trigger some other error process but but I think that's good for now but um the other thing that I just",
    "start": "848500",
    "end": "857020"
  },
  {
    "text": "want to point out too which is this is good practice and I think you said when you had gotten this code that you had most of it most of the code was actually",
    "start": "857020",
    "end": "863980"
  },
  {
    "text": "in the handler function itself what we want to do when we're writing these functions we want to make sure that the",
    "start": "863980",
    "end": "870190"
  },
  {
    "text": "handler itself is as lightweight as possible and it's more about making sure",
    "start": "870190",
    "end": "876160"
  },
  {
    "text": "that we can interface correctly with our other methods or subroutines so that we",
    "start": "876160",
    "end": "881980"
  },
  {
    "text": "you know so that we can actually reuse different things so if you thought about that add points which we'll look at in a",
    "start": "881980",
    "end": "888610"
  },
  {
    "text": "second the point of that is to be very generic we want to be able to test it outside of its context within a handler",
    "start": "888610",
    "end": "896500"
  },
  {
    "text": "function outside of context within a a lambda at all or anyone be able to run",
    "start": "896500",
    "end": "902500"
  },
  {
    "text": "unit tests on it um but we also may want to call that in a different way right so you may have a lot of these events that",
    "start": "902500",
    "end": "909250"
  },
  {
    "text": "come in via SMS but if you ever wanted to build another interface into the",
    "start": "909250",
    "end": "915700"
  },
  {
    "text": "endpoints function here you could just add another handler that accepted a",
    "start": "915700",
    "end": "921250"
  },
  {
    "text": "different type of event so maybe it's a it's a manual event that you pass in and that manual event just contains the",
    "start": "921250",
    "end": "927640"
  },
  {
    "text": "customer ID and the points um you could write a second handler that does that parses it you know the correct way and",
    "start": "927640",
    "end": "934660"
  },
  {
    "text": "then sends that into the app points function that you've written there and then that way you just couldn't you",
    "start": "934660",
    "end": "940420"
  },
  {
    "text": "could have it multiple way so the idea here is not only code reuse but you don't want to couple your business logic",
    "start": "940420",
    "end": "946150"
  },
  {
    "text": "too tightly to the individual handler functions so what you're saying something like",
    "start": "946150",
    "end": "951490"
  },
  {
    "text": "this where let's say I wanted to have that as API get to for instance I don't have that type but just kind of a",
    "start": "951490",
    "end": "957510"
  },
  {
    "text": "pretending yeah we and you will have you would return a promise that the normal way you should",
    "start": "957510",
    "end": "963550"
  },
  {
    "text": "but the difference here is that now you would have let's say the record would actually be something like this because",
    "start": "963550",
    "end": "972160"
  },
  {
    "text": "we know it's different yeah and you might make JSON and actually you wouldn't need a JIT I don't think you'd have to parse that because it would",
    "start": "972160",
    "end": "978279"
  },
  {
    "text": "automatically need Parsons JSON when it comes in as an event but you could just",
    "start": "978279",
    "end": "983380"
  },
  {
    "text": "take that event body and you could do some testing on it make sure that it",
    "start": "983380",
    "end": "988510"
  },
  {
    "text": "contained your record your customer ID and your price and then you can go ahead and fire off that add points function",
    "start": "988510",
    "end": "996250"
  },
  {
    "text": "there so yeah so it's just it's just a way to kind of keep these things decoupled in I mean if you think about",
    "start": "996250",
    "end": "1002160"
  },
  {
    "text": "it too you know you could write these these functions like the add points you",
    "start": "1002160",
    "end": "1007950"
  },
  {
    "text": "could write that as sort of a separate module if you wanted to as well and so that you could use it in multiple places",
    "start": "1007950",
    "end": "1013260"
  },
  {
    "text": "but it is just it's sort of the best practice to make sure that we include you know that we don't overload our",
    "start": "1013260",
    "end": "1020010"
  },
  {
    "text": "handlers with too much you know too much business logic that it's sort of a bad",
    "start": "1020010",
    "end": "1025500"
  },
  {
    "text": "practice to do that so keeping them separated this is always good and if this add point is specific to this",
    "start": "1025500",
    "end": "1031920"
  },
  {
    "text": "function like you're not going to need somewhere else when putting it within that function this is perfectly fine got",
    "start": "1031920",
    "end": "1037500"
  },
  {
    "text": "you okay so let's go so don't just have removed all this but that's really interesting it I don't remember thinking",
    "start": "1037500",
    "end": "1044699"
  },
  {
    "text": "about that I'm having I haven't yet seen a function that will take multiple events sources but I can totally see the",
    "start": "1044699",
    "end": "1050070"
  },
  {
    "text": "value of actually they're happening that's really interesting okay so let's save as it is let's go",
    "start": "1050070",
    "end": "1055380"
  },
  {
    "text": "through the add points and tell you what exactly that is so we have a bunch of",
    "start": "1055380",
    "end": "1061620"
  },
  {
    "text": "interfaces and imports in here we are using dynamo DB document client to write that into dynamo DB we're also using",
    "start": "1061620",
    "end": "1068760"
  },
  {
    "text": "UUID for obviously obvious reasons and we are using the letter Breslin the",
    "start": "1068760",
    "end": "1074190"
  },
  {
    "text": "types that we we can we just discuss we can see the contacts and as an ass event",
    "start": "1074190",
    "end": "1079380"
  },
  {
    "text": "the interface is just kind of a helps us to you know well keeps us sane from from that that's",
    "start": "1079380",
    "end": "1086910"
  },
  {
    "text": "the value of type script to that scenario so the loyalty points gets that particular which you",
    "start": "1086910",
    "end": "1092220"
  },
  {
    "text": "saw in the DynamoDB customer ID the points the flags whether they are active or not and the",
    "start": "1092220",
    "end": "1099120"
  },
  {
    "text": "add points itself is kind of a documented right here but we're doing something different than the usual as",
    "start": "1099120",
    "end": "1104610"
  },
  {
    "text": "well we're not only writing to dynamo but we're also doing some dependency injection in here so we're actually",
    "start": "1104610",
    "end": "1111480"
  },
  {
    "text": "passing the customer ID as a parameter and we are getting how many points we",
    "start": "1111480",
    "end": "1117090"
  },
  {
    "text": "should be adding that and we're also getting the Dynamo to be already initialized what would you mind",
    "start": "1117090",
    "end": "1124230"
  },
  {
    "text": "explaining why we should what we should be doing why why do you think is a best practice to do that Jeremy yeah so",
    "start": "1124230",
    "end": "1129990"
  },
  {
    "text": "dependency injection is a really good habit to get into especially if you're",
    "start": "1129990",
    "end": "1135600"
  },
  {
    "text": "trying to do any type of mocking which we're gonna do or even integration test ways that you can sort of control the",
    "start": "1135600",
    "end": "1142400"
  },
  {
    "text": "interface that you're passing into these these downstream functions so if you",
    "start": "1142400",
    "end": "1147690"
  },
  {
    "text": "took that add points function and you were to import or you are to create a",
    "start": "1147690",
    "end": "1153090"
  },
  {
    "text": "new document client within that add points function the problem is is that",
    "start": "1153090",
    "end": "1158190"
  },
  {
    "text": "if we wanted to mock that in any way or we wanted to somehow override or monkey",
    "start": "1158190",
    "end": "1164400"
  },
  {
    "text": "patch what that does for us to be able to execute some local testing it wouldn't let you do that yes so you did",
    "start": "1164400",
    "end": "1171630"
  },
  {
    "text": "Dynamo there and you did a new document client so if if people are familiar with",
    "start": "1171630",
    "end": "1177360"
  },
  {
    "text": "the way that the monkey patching or or or stubbing or mocking or whatever you",
    "start": "1177360",
    "end": "1184380"
  },
  {
    "text": "want to call it works you usually take you import a module and then you would",
    "start": "1184380",
    "end": "1190700"
  },
  {
    "text": "overwrite a particular method or your instrument a method so that you could",
    "start": "1190700",
    "end": "1196409"
  },
  {
    "text": "capture the input and then manipulate the output of that so that you could do that in an offline local testing",
    "start": "1196409",
    "end": "1202220"
  },
  {
    "text": "scenario and also it's great too because you know if you want to throw an error and test how you process an error it",
    "start": "1202220",
    "end": "1209370"
  },
  {
    "text": "works really really well to do a lock because you don't necessarily want to inject some error and you might not be",
    "start": "1209370",
    "end": "1214710"
  },
  {
    "text": "able to generate all the errors that you can get by testing the live resource so",
    "start": "1214710",
    "end": "1220049"
  },
  {
    "text": "when when you want to overwrite a in a particular method you can't do that",
    "start": "1220049",
    "end": "1227470"
  },
  {
    "text": "until you've created the in this case the document client until you've created that instance if you did it this way if",
    "start": "1227470",
    "end": "1235990"
  },
  {
    "text": "we tried to call the add points function through a unit test and we said okay",
    "start": "1235990",
    "end": "1243490"
  },
  {
    "text": "well we're gonna patch DynamoDB we're gonna patch the AWS SDK that actually",
    "start": "1243490",
    "end": "1250210"
  },
  {
    "text": "wouldn't work because what we're doing is we're creating a new document client within this so instead what we want to",
    "start": "1250210",
    "end": "1256120"
  },
  {
    "text": "do is be able to manipulate that document client before we call the add points function and then that way which",
    "start": "1256120",
    "end": "1263020"
  },
  {
    "text": "would be dependency injection that way we have much more control over what that does and to some degree - and not that I",
    "start": "1263020",
    "end": "1271240"
  },
  {
    "text": "would necessarily suggest suggest this but it is possible that if you said look I'm writing some function that does you",
    "start": "1271240",
    "end": "1279310"
  },
  {
    "text": "know I call or scroll down you've got something in here that is like your quick command right I'm gonna put puts",
    "start": "1279310",
    "end": "1286870"
  },
  {
    "text": "the value - or puts the the content into the dynamodb table so that document dot",
    "start": "1286870",
    "end": "1296170"
  },
  {
    "text": "put for example if you really really wanted to you're using just the native",
    "start": "1296170",
    "end": "1301750"
  },
  {
    "text": "API that's built into the document client which is perfectly fine right but if you did want to write a wrapper on",
    "start": "1301750",
    "end": "1308470"
  },
  {
    "text": "top of that and create your own put command for your document or data you",
    "start": "1308470",
    "end": "1314800"
  },
  {
    "text": "know data component or whatever um what's really cool is if you did write a wrapper on top of that you could always",
    "start": "1314800",
    "end": "1320410"
  },
  {
    "text": "change it right so if you said look i'm using dynamodb now but maybe i need to",
    "start": "1320410",
    "end": "1325630"
  },
  {
    "text": "switch to service or or or something like that then by injecting these",
    "start": "1325630",
    "end": "1331420"
  },
  {
    "text": "dependencies and potentially either writing or mimicking the the standard",
    "start": "1331420",
    "end": "1337210"
  },
  {
    "text": "api that comes with the AWS sdk for some of these services you could actually change the behavior or which what the",
    "start": "1337210",
    "end": "1345070"
  },
  {
    "text": "the backing source was for the resource who could change that by just injecting a different dependency that had the same",
    "start": "1345070",
    "end": "1351910"
  },
  {
    "text": "you know the same API methods attached to it so that's a more of an advanced use case",
    "start": "1351910",
    "end": "1357950"
  },
  {
    "text": "not necessarily you know probably you wouldn't need it for something like this but again it's always it's always an",
    "start": "1357950",
    "end": "1364490"
  },
  {
    "text": "option if you ever you know we're writing a sort of a data layer on top of  or dynamo DB or sequel and you",
    "start": "1364490",
    "end": "1372380"
  },
  {
    "text": "maybe you wanted to put some MySQL with a with a a Redis cache in front of it or",
    "start": "1372380",
    "end": "1378020"
  },
  {
    "text": "something like that dependency injection gives you that flexibility without having to go in and actually modify modify the underlying",
    "start": "1378020",
    "end": "1385490"
  },
  {
    "text": "code function yeah and actually that reminds me of Alec I like maybe I can do",
    "start": "1385490",
    "end": "1391580"
  },
  {
    "text": "this let's say it was a github stripe here we go so if you're interested on",
    "start": "1391580",
    "end": "1398419"
  },
  {
    "text": "that pattern that Jeremy is just mentioning right now take a look at this alyc and lo button actually do a great",
    "start": "1398419",
    "end": "1405620"
  },
  {
    "text": "job on what we call ex agonal architectures and how we can do ports and adapters and that sort of thing even",
    "start": "1405620",
    "end": "1412370"
  },
  {
    "text": "if the whole source in here is actually really educational at least you my purpose your way to do",
    "start": "1412370",
    "end": "1418130"
  },
  {
    "text": "the processor the repository and the way they do testing is much much easier than",
    "start": "1418130",
    "end": "1423470"
  },
  {
    "text": "the way I'm actually doing it at first it looks very complicated but in the long run it definitely pays off all",
    "start": "1423470",
    "end": "1430490"
  },
  {
    "text": "right so let's go back to this so what we do well what we're actually doing is nothing fancy for now we're we're just",
    "start": "1430490",
    "end": "1437120"
  },
  {
    "text": "checking is we get the table name from an environment variables because where it is in Sam and the environment values",
    "start": "1437120",
    "end": "1443510"
  },
  {
    "text": "are lambda obviously the table isn't there we just throw an error and and then we just create a new item with this scheme do we",
    "start": "1443510",
    "end": "1451070"
  },
  {
    "text": "actually expect to be in the dynamodb table so we get the customer ID that you saw before we get the points which again",
    "start": "1451070",
    "end": "1457880"
  },
  {
    "text": "could be another function just say calculate points and then we'll just pass the points in there we turn a",
    "start": "1457880",
    "end": "1463610"
  },
  {
    "text": "number and we're just adding the dates in there and the pyranose we're just",
    "start": "1463610",
    "end": "1469159"
  },
  {
    "text": "actually separating she look quite nicely in here which is saying table name where the table is and the item as",
    "start": "1469159",
    "end": "1475100"
  },
  {
    "text": "object and we just to put and dot promise where is in a sink of weight",
    "start": "1475100",
    "end": "1480620"
  },
  {
    "text": "which honestly it's awesome but it was the first time I had to task something",
    "start": "1480620",
    "end": "1486080"
  },
  {
    "text": "like this with our weight and dot promise and I'm gonna show you the test now but he wasn't it wasn't easy let's",
    "start": "1486080",
    "end": "1493919"
  },
  {
    "text": "put this way so let's go and check the testing now so the test is you need to",
    "start": "1493919",
    "end": "1501389"
  },
  {
    "text": "hated just one one second so there's a little conversation going on in the chat",
    "start": "1501389",
    "end": "1507769"
  },
  {
    "text": "about typescript versus JavaScript so my two senses I love vanilla JavaScript",
    "start": "1507769",
    "end": "1514950"
  },
  {
    "text": "right so anytime I can write something and I don't need to import a library and",
    "start": "1514950",
    "end": "1521100"
  },
  {
    "text": "I can use you know I love using like for functional programming I love using Ram",
    "start": "1521100",
    "end": "1526320"
  },
  {
    "text": "des which is a really great really great functional programming library for for",
    "start": "1526320",
    "end": "1531600"
  },
  {
    "text": "JavaScript I do love using some of those but if I can get away with just using map or filter you know or or reduce you",
    "start": "1531600",
    "end": "1541950"
  },
  {
    "text": "know and I can just use you know standard JavaScript native JavaScript um I try to do that I think es6 introduced",
    "start": "1541950",
    "end": "1549269"
  },
  {
    "text": "a whole bunch of really great things you know with with the spread operator and",
    "start": "1549269",
    "end": "1554509"
  },
  {
    "text": "deconstructing variables I mean it just there's a lot you can do without something like type stuff so I think the",
    "start": "1554509",
    "end": "1560580"
  },
  {
    "text": "people who like typescript and I like typescript I don't do a lot in it and the reason is is because I think it",
    "start": "1560580",
    "end": "1566700"
  },
  {
    "text": "actually adds a different or an additional layer of complexity to the testing process but I certainly",
    "start": "1566700",
    "end": "1572820"
  },
  {
    "text": "understand people who love it and it gives you that security of knowing that all of your types are correct that all",
    "start": "1572820",
    "end": "1579269"
  },
  {
    "text": "of your items or all of your objects that you create match you know a particular format and so forth so I",
    "start": "1579269",
    "end": "1585149"
  },
  {
    "text": "think it is really a it's really a personal preference but if someone's",
    "start": "1585149",
    "end": "1591450"
  },
  {
    "text": "like oh you have to use typescript or otai scripts terrible I don't bind any of those sort of things I think it's",
    "start": "1591450",
    "end": "1596999"
  },
  {
    "text": "just it's what your personal preference is typescript is incredibly powerful if you you know if you're into it but you",
    "start": "1596999",
    "end": "1603929"
  },
  {
    "text": "know I most of the time I just do vanilla JavaScript and and it's my favorite yeah there is no chocolate",
    "start": "1603929",
    "end": "1612660"
  },
  {
    "text": "now I kind of agree when you actually go to the typescript and the way you",
    "start": "1612660",
    "end": "1618570"
  },
  {
    "text": "configure typescript you work you have to have this CEA's config in place which basically you even specify what is the",
    "start": "1618570",
    "end": "1625200"
  },
  {
    "text": "target JavaScript version you want to target on which you kind of get some of",
    "start": "1625200",
    "end": "1630660"
  },
  {
    "text": "those interesting features and you also and you also get some like nice benefits",
    "start": "1630660",
    "end": "1636510"
  },
  {
    "text": "of the types but that also goes to say when I was doing the front-end so if you",
    "start": "1636510",
    "end": "1641970"
  },
  {
    "text": "look at the front-end there's a lot of JavaScript in here from the views view itself or for actually the store itself",
    "start": "1641970",
    "end": "1648750"
  },
  {
    "text": "because this became a huge application if I just look at the real JavaScript without any of that this is just vanilla",
    "start": "1648750",
    "end": "1656970"
  },
  {
    "text": "JavaScript by using the the more modern syntax I must say it's actually a breeze to work compared to the JavaScript I you",
    "start": "1656970",
    "end": "1664140"
  },
  {
    "text": "should do in the past I know JavaScript expert but you can use all of those destructuring and even",
    "start": "1664140",
    "end": "1670560"
  },
  {
    "text": "there's a class now which I know a lot of people are are not much of a fan I like classes you can use in order to",
    "start": "1670560",
    "end": "1684510"
  },
  {
    "text": "create functions and things like that but I also really like fat arrow functions and I mean I just I love",
    "start": "1684510",
    "end": "1692490"
  },
  {
    "text": "JavaScript it's such a flexible language and part of the you know part of the thing for typescript for me as I feel",
    "start": "1692490",
    "end": "1698910"
  },
  {
    "text": "like it boxes me in only because I don't know typescript well enough with just",
    "start": "1698910",
    "end": "1705900"
  },
  {
    "text": "vanilla JavaScript and es6 and what you can do it's I find it to be you know",
    "start": "1705900",
    "end": "1711810"
  },
  {
    "text": "good code is good code so yeah right code and you probably not gonna have to",
    "start": "1711810",
    "end": "1717090"
  },
  {
    "text": "worry about some of the other some of the other typing issues and things like that yeah one one little trick that I",
    "start": "1717090",
    "end": "1723150"
  },
  {
    "text": "use that I only learned in VOCs or pseudo code I know we're kind of splitting off a little bit we should be",
    "start": "1723150",
    "end": "1728250"
  },
  {
    "text": "back to testing but I think it's important I think it's important to cover some of that is I'm using jeaious",
    "start": "1728250",
    "end": "1734340"
  },
  {
    "text": "doc as a way from each you get some of the Taipings and that actually it's super clever and",
    "start": "1734340",
    "end": "1740810"
  },
  {
    "text": "you can even see what's optional in that constructor and things like this the reason this works beyond just a",
    "start": "1740810",
    "end": "1747570"
  },
  {
    "text": "JavaScript dock is at the root of the repo which you're going to see there there is a I think it's J s config yeah",
    "start": "1747570",
    "end": "1756270"
  },
  {
    "text": "over here so if you have this fire in your ripple that will give you exactly",
    "start": "1756270",
    "end": "1761400"
  },
  {
    "text": "what we want which basically is actually using the typescript engine behind the scenes and it's actually giving you the",
    "start": "1761400",
    "end": "1767220"
  },
  {
    "text": "types that you actually want the only pieces you don't get that you get with",
    "start": "1767220",
    "end": "1772260"
  },
  {
    "text": "typescript again it's more of an interface which kind of makes some of the pieces handy but it it's about",
    "start": "1772260",
    "end": "1778530"
  },
  {
    "text": "preference I agree I like both I just don't like testing for type scripts because it was too hard to do it but now",
    "start": "1778530",
    "end": "1786000"
  },
  {
    "text": "it's alright so how do we do this so we",
    "start": "1786000",
    "end": "1791970"
  },
  {
    "text": "got a TS config we're using a framework called jest if you never use it you need to have that either at the root of your",
    "start": "1791970",
    "end": "1798540"
  },
  {
    "text": "your project or because we're using different languages inside the same project I'm actually having this inside",
    "start": "1798540",
    "end": "1804929"
  },
  {
    "text": "the loyalty folder itself so when I'm getting into this and I run my task",
    "start": "1804929",
    "end": "1809970"
  },
  {
    "text": "during package.json then we'll that should use this just our config in here all we're doing in here is saying",
    "start": "1809970",
    "end": "1817160"
  },
  {
    "text": "discover tasks are under tasks and obviously under the folder source if that happens to be and I'm using a",
    "start": "1817160",
    "end": "1824190"
  },
  {
    "text": "plug-in used called TS jest which basically understands typescript and he",
    "start": "1824190",
    "end": "1830130"
  },
  {
    "text": "handles everything has to handle so I don't have to compile to JavaScript it's just so you could test yeah I think",
    "start": "1830130",
    "end": "1838799"
  },
  {
    "text": "that's pretty much it there was actually the hardest fish to do and she gets the right config it was a I'd say it wasn't",
    "start": "1838799",
    "end": "1845460"
  },
  {
    "text": "it was a it was interesting justice is",
    "start": "1845460",
    "end": "1852419"
  },
  {
    "text": "the only testing test runner for for JavaScript diversity or for node I",
    "start": "1852419",
    "end": "1858299"
  },
  {
    "text": "really like mocha but the problem with mocha and not a problem it's just one of",
    "start": "1858299",
    "end": "1864210"
  },
  {
    "text": "the things with MOOC is that when you use mocha you also need to include something like chai have an assertion",
    "start": "1864210",
    "end": "1870900"
  },
  {
    "text": "library if you want to do mocks and stubs you know I typically use sign in jail",
    "start": "1870900",
    "end": "1876190"
  },
  {
    "text": "yes to those sort of things what's really cool about jest is it just kind of does all of it for you it's all kind",
    "start": "1876190",
    "end": "1882460"
  },
  {
    "text": "of packaged in there so I do I do like jest and and now you know now that I'm",
    "start": "1882460",
    "end": "1887980"
  },
  {
    "text": "looking at it again I kind of revisited it I had to you know deal with an old project with MOCA so I've been more into",
    "start": "1887980",
    "end": "1894639"
  },
  {
    "text": "that but um but revisiting jazz I'm gonna I personally am going to take a",
    "start": "1894639",
    "end": "1899769"
  },
  {
    "text": "deeper look at no starting to use that more of my workflows because I think for especially for service with all of these",
    "start": "1899769",
    "end": "1906039"
  },
  {
    "text": "dependency tests and things like that it it's a pretty good library for that yeah so so this is how it looks like so let's",
    "start": "1906039",
    "end": "1913539"
  },
  {
    "text": "just go through the tasks first and then we show you the code back and forth so",
    "start": "1913539",
    "end": "1918549"
  },
  {
    "text": "what we're doing now is we're essentially importantly than just which we we showed you previously on the left",
    "start": "1918549",
    "end": "1924399"
  },
  {
    "text": "hand side and we're also doing something interesting we we're not gonna use this anymore because I'm not testing the handler in",
    "start": "1924399",
    "end": "1930850"
  },
  {
    "text": "this episode but we because we got the event adjacent to do local development and local prototyping I could use the",
    "start": "1930850",
    "end": "1938080"
  },
  {
    "text": "same event Jason as a way to test some attributes in some other pieces and how he behaves just for the handler and",
    "start": "1938080",
    "end": "1945429"
  },
  {
    "text": "we're also using lambda as an as an event in context which we could use if we were to test that function itself the",
    "start": "1945429",
    "end": "1953919"
  },
  {
    "text": "way I don't remember mocha anymore but I think it's quite similar you could do it just a described and with the overall",
    "start": "1953919",
    "end": "1960789"
  },
  {
    "text": "group of testing you have to run and then for each individual tasks you have tests or it they actually one I think",
    "start": "1960789",
    "end": "1969250"
  },
  {
    "text": "one is an alias one another so it just a just a preference I'd say it's a preface",
    "start": "1969250",
    "end": "1974799"
  },
  {
    "text": "thing yeah yeah how you described it but",
    "start": "1974799",
    "end": "1981070"
  },
  {
    "text": "I again it's it's just it's just an alias like you said yeah and and this is",
    "start": "1981070",
    "end": "1986710"
  },
  {
    "text": "a trick which I only discovered recently as I was trying to do the test as you try to use multiple functions inside the",
    "start": "1986710",
    "end": "1993580"
  },
  {
    "text": "same group and you may have to manipulate different environment variables you may want to reset the",
    "start": "1993580",
    "end": "1999070"
  },
  {
    "text": "cache and a reset environment variables for those stats so that's something you could do as well so you can do using",
    "start": "1999070",
    "end": "2005610"
  },
  {
    "text": "this just don't reset modules and if you copy the initio environment",
    "start": "2005610",
    "end": "2011180"
  },
  {
    "text": "variables you can just keep reading them back to it even if you're running production or integration tasks or",
    "start": "2011180",
    "end": "2018110"
  },
  {
    "text": "things like this and you may want to change those variables again you could do this from here and inside each of",
    "start": "2018110",
    "end": "2024200"
  },
  {
    "text": "those you could just make this accept obviously you see it should do I don't know why that doesn't work but maybe I",
    "start": "2024200",
    "end": "2031130"
  },
  {
    "text": "will figure it out afters so one of the just one of the things to that's very cool about just so the before each",
    "start": "2031130",
    "end": "2037430"
  },
  {
    "text": "there's a there's an after each there's a before awful there's an after all so there's a number of these different sort",
    "start": "2037430",
    "end": "2043790"
  },
  {
    "text": "of pre pre handlers or post handlers that you can use and the nesting works really really cool when you nest",
    "start": "2043790",
    "end": "2051610"
  },
  {
    "text": "subscribe um block so you can actually have something that you know maybe sets",
    "start": "2051610",
    "end": "2057200"
  },
  {
    "text": "up the test outside does it for all tests and then or before each but then",
    "start": "2057200",
    "end": "2062690"
  },
  {
    "text": "within the describe you have things that run before each within that but it actually will run the before each",
    "start": "2062690",
    "end": "2068929"
  },
  {
    "text": "outside of the describe then run the before each inside visit describe and then run your test and then a so it's",
    "start": "2068930",
    "end": "2075889"
  },
  {
    "text": "cool how it nests and you can you can build off with one another so you can build pretty complex testing patterns within within the",
    "start": "2075890",
    "end": "2083389"
  },
  {
    "text": "service so it's very cool yeah so I'm gonna even delete this piece here because we're not gonna use it anymore",
    "start": "2083390",
    "end": "2089000"
  },
  {
    "text": "at least not in the handler should make kind of that stuff clean the way we should be testing this is that this",
    "start": "2089000",
    "end": "2094879"
  },
  {
    "text": "function has an environment variable called data table name which you can see from the data points we actually",
    "start": "2094880",
    "end": "2101270"
  },
  {
    "text": "captured them here and the only the only reason I probably need some research is someone or the chat knows just more I'm",
    "start": "2101270",
    "end": "2108290"
  },
  {
    "text": "sure they're yes I I thought I would be able to manipulate the environment",
    "start": "2108290",
    "end": "2113630"
  },
  {
    "text": "vibraphone here and when I was going to add execute my function he would read",
    "start": "2113630",
    "end": "2118910"
  },
  {
    "text": "from here like I normally we're doing Python for instance but that doesn't seem to work so if you know it's",
    "start": "2118910",
    "end": "2124970"
  },
  {
    "text": "actually here and my yeah my to-do list keeps increasing I got this new extension which is super awesome you",
    "start": "2124970",
    "end": "2131810"
  },
  {
    "text": "just annotate like to do and he keeps showing exactly where you need have some to do to finish just yeah so",
    "start": "2131810",
    "end": "2140660"
  },
  {
    "text": "I think the reason why your environment variable isn't working there when you go",
    "start": "2140660",
    "end": "2147860"
  },
  {
    "text": "back to add points for a second that is I'm sorry go to the go back to the in",
    "start": "2147860",
    "end": "2154190"
  },
  {
    "text": "just IPS so you're doing a Const data table equals the yeah so where were you",
    "start": "2154190",
    "end": "2164990"
  },
  {
    "text": "trying to set the data table name in your tests so I'm actually setting before I even",
    "start": "2164990",
    "end": "2172400"
  },
  {
    "text": "call that odd points it feels to me that is actually adding but this as if you",
    "start": "2172400",
    "end": "2177830"
  },
  {
    "text": "was creating a new environment or shell as if you're in UNIX and you wouldn't propagate that to the function that's",
    "start": "2177830",
    "end": "2193310"
  },
  {
    "text": "just whether it's Prada or what's the let's note underscore environment yeah",
    "start": "2193310",
    "end": "2198740"
  },
  {
    "text": "so that's exactly what is the build process that shows me whether that's production testing or or whatever oh",
    "start": "2198740",
    "end": "2204080"
  },
  {
    "text": "okay yeah all right so that makes sense well anyway so this is sometimes what we",
    "start": "2204080",
    "end": "2209480"
  },
  {
    "text": "do right we have to I think just an",
    "start": "2209480",
    "end": "2219650"
  },
  {
    "text": "interesting point here is how you're importing and points so if you scroll",
    "start": "2219650",
    "end": "2226670"
  },
  {
    "text": "back up to the top of your test file there continue port you're",
    "start": "2226670",
    "end": "2234020"
  },
  {
    "text": "deconstructing add points from that ingest module and back over on the ingest TS you have an export statement",
    "start": "2234020",
    "end": "2242630"
  },
  {
    "text": "that export is exporting any any constants from the any constants from",
    "start": "2242630",
    "end": "2249410"
  },
  {
    "text": "the from the application so add points gets get sentence or what so my my",
    "start": "2249410",
    "end": "2255290"
  },
  {
    "text": "personal the way that I like to do it is I don't like to export things and don't need to be exported so really the only",
    "start": "2255290",
    "end": "2262610"
  },
  {
    "text": "thing that needs to be accessible from a lambda function is just the handler",
    "start": "2262610",
    "end": "2268070"
  },
  {
    "text": "function so really that for me is sort of the only thing like to export you certainly can export",
    "start": "2268070",
    "end": "2273790"
  },
  {
    "text": "your functions as well but it's not always necessary I'm not sure how this",
    "start": "2273790",
    "end": "2279970"
  },
  {
    "text": "works with typescript but I use a is a module called rewire so instead of",
    "start": "2279970",
    "end": "2287350"
  },
  {
    "text": "required we're on protect me wire re w ir e yeah look that does is um you use it know",
    "start": "2287350",
    "end": "2296350"
  },
  {
    "text": "rewire oh yeah i WR w ir yeah yes that",
    "start": "2296350",
    "end": "2305170"
  },
  {
    "text": "so what rewire does is it allows you to it gives you an api into different",
    "start": "2305170",
    "end": "2313780"
  },
  {
    "text": "modules that you import so even if you're not exporting a particular function from either function or a",
    "start": "2313780",
    "end": "2320740"
  },
  {
    "text": "variable from a module you can actually go in there and grab that using the",
    "start": "2320740",
    "end": "2327100"
  },
  {
    "text": "using Bissonnette that functionality so that's really cool because then you can just make sure that you're not exporting",
    "start": "2327100",
    "end": "2334030"
  },
  {
    "text": "extra stuff out of your modules that don't need to be exported and then you have to be very specific about what it",
    "start": "2334030",
    "end": "2339850"
  },
  {
    "text": "is you're reaching into the module for and test it i so much i mean oh yeah it's it's actually what they standard of",
    "start": "2339850",
    "end": "2347280"
  },
  {
    "text": "the monkey patching for python that i'm more familiar with well which you can do",
    "start": "2347280",
    "end": "2352450"
  },
  {
    "text": "a monk patch and things like this yeah yeah that's pretty cool i didn't know that much of a security issue that",
    "start": "2352450",
    "end": "2361960"
  },
  {
    "text": "you're dealing with there but i don't think it's it's really not that big think of a deal at all but i but i",
    "start": "2361960",
    "end": "2368590"
  },
  {
    "text": "really do like to rewire awesome somebody somebody apparently doesn't like google i mean you could use what",
    "start": "2368590",
    "end": "2376210"
  },
  {
    "text": "are some of the other ones can you still use light dose is like oh still around cuz I used to love Lycos that was my",
    "start": "2376210",
    "end": "2382060"
  },
  {
    "text": "favorite yeah I could just use a deck that can go",
    "start": "2382060",
    "end": "2386460"
  },
  {
    "text": "what's the matter Bing right yeah that's good yeah I have you here see I have I",
    "start": "2389010",
    "end": "2394260"
  },
  {
    "text": "have I have on them all for the work flow for everything so let's just like let's just let's just kick off of this",
    "start": "2394260",
    "end": "2400830"
  },
  {
    "text": "one when you're writing tests so you had",
    "start": "2400830",
    "end": "2411390"
  },
  {
    "text": "all that I think scroll back up to the top of that file per second sure you had",
    "start": "2411390",
    "end": "2416550"
  },
  {
    "text": "up at the top there the importing the SNF event and importing SNS event in",
    "start": "2416550",
    "end": "2423060"
  },
  {
    "text": "context so what's great about these unit tests and what we've done by by",
    "start": "2423060",
    "end": "2429869"
  },
  {
    "text": "separating our business logic out of our you know way from our handler in our ingest up to yes we've now made for",
    "start": "2429869",
    "end": "2436980"
  },
  {
    "text": "testing purposes SNS event and all this stuff that's directly related to AWS or",
    "start": "2436980",
    "end": "2443100"
  },
  {
    "text": "AWS services we've actually made that irrelevant right so you don't need that anymore so here we're actually just",
    "start": "2443100",
    "end": "2450090"
  },
  {
    "text": "testing the function that does something and even though we are going to be using",
    "start": "2450090",
    "end": "2455869"
  },
  {
    "text": "dynamodb which is very specific obviously to AWS um we are doing dependency injection so like we said",
    "start": "2455869",
    "end": "2462180"
  },
  {
    "text": "earlier we can actually manipulate the the dependency that we send in there you",
    "start": "2462180",
    "end": "2468330"
  },
  {
    "text": "know so we've really decoupled this particular function or this this service we've decoupled it from from lambda and",
    "start": "2468330",
    "end": "2476070"
  },
  {
    "text": "from the AWS environment it's awesome ya know that's cool and I can actually",
    "start": "2476070",
    "end": "2481260"
  },
  {
    "text": "agree with that if if you actually see the same for other services except that",
    "start": "2481260",
    "end": "2486630"
  },
  {
    "text": "we didn't really add a file if we go to book in for instance you're gonna see each of those service at this particular",
    "start": "2486630",
    "end": "2492540"
  },
  {
    "text": "function should only do one thing even if it has a particular file and you're gonna see that in here you see that the",
    "start": "2492540",
    "end": "2498810"
  },
  {
    "text": "cancer booking itself is just a function that does exactly this and the handler is actually really dumb it's only doing",
    "start": "2498810",
    "end": "2506100"
  },
  {
    "text": "some basic checking if the event actually has what it's supposed to have and then it just to a try-catch do the",
    "start": "2506100",
    "end": "2512609"
  },
  {
    "text": "logic what I'm gonna do the unit testing for this later I'm only gonna test the cancer booking and and that's perfect it",
    "start": "2512609",
    "end": "2519720"
  },
  {
    "text": "just makes that much easier as well and another thing you can do too and I",
    "start": "2519720",
    "end": "2524940"
  },
  {
    "text": "think this bribing school before we want to get into but a very cool thing you",
    "start": "2524940",
    "end": "2530700"
  },
  {
    "text": "can do I know with jest and with mocha you know using the surrealist framework I'm not sure how exactly you would do it",
    "start": "2530700",
    "end": "2537510"
  },
  {
    "text": "with Sam but actually running the running the land of function as if it",
    "start": "2537510",
    "end": "2543779"
  },
  {
    "text": "was in that environment so actually passing in the passing in that SMS event",
    "start": "2543779",
    "end": "2550319"
  },
  {
    "text": "and calling the lambda function locally as part of a test runner and then",
    "start": "2550319",
    "end": "2555450"
  },
  {
    "text": "testing the output of that that's very possible to do as well which is always a",
    "start": "2555450",
    "end": "2560849"
  },
  {
    "text": "good sort of local integration test in the sense and because we are doing the",
    "start": "2560849",
    "end": "2567859"
  },
  {
    "text": "actually you know I don't want to derail us too much but if that was the case if",
    "start": "2567859",
    "end": "2574109"
  },
  {
    "text": "you go back to your ingest es quickly so the the ingest TS if we wanted to",
    "start": "2574109",
    "end": "2584119"
  },
  {
    "text": "execute this handler and we wanted to execute that the handler itself but be",
    "start": "2584119",
    "end": "2591210"
  },
  {
    "text": "able to make sure that we we pass in a mock or a stub for for for the dynamodb",
    "start": "2591210",
    "end": "2601500"
  },
  {
    "text": "table the problem here is is the way that you've got this code and I'm sorry scroll back up to the top where you when",
    "start": "2601500",
    "end": "2607019"
  },
  {
    "text": "you bring in the document client yep right here right so the way you bring in",
    "start": "2607019",
    "end": "2612900"
  },
  {
    "text": "the document client there we would have to we might be able to monkey patch that",
    "start": "2612900",
    "end": "2619069"
  },
  {
    "text": "but most likely the the better thing to do would be take that new document",
    "start": "2619069",
    "end": "2624869"
  },
  {
    "text": "client it actually put that into its own its own module and just export that new",
    "start": "2624869",
    "end": "2631200"
  },
  {
    "text": "document client because then that way we could just call whatever we were calling",
    "start": "2631200",
    "end": "2636839"
  },
  {
    "text": "to initiate that client we could overwrite that as part of a monkey patching in the way or we could",
    "start": "2636839",
    "end": "2642869"
  },
  {
    "text": "reinitialize that or it require that in our tests accessing a accessing our",
    "start": "2642869",
    "end": "2649529"
  },
  {
    "text": "patch to it and then what that does it's kind of cool because javascript or node will only require a",
    "start": "2649529",
    "end": "2657059"
  },
  {
    "text": "module once so if you require the AWS SDK at the top level and then you are",
    "start": "2657059",
    "end": "2664289"
  },
  {
    "text": "requiring another file or importing another module underneath that that also",
    "start": "2664289",
    "end": "2671059"
  },
  {
    "text": "requires the AWS SDK the first one that",
    "start": "2671059",
    "end": "2676410"
  },
  {
    "text": "you did of the higher scripts that will actually take precedence so that other one won't even get important so that's a",
    "start": "2676410",
    "end": "2682589"
  },
  {
    "text": "really good way for you to write tests by by basically overwriting inclusions",
    "start": "2682589",
    "end": "2689279"
  },
  {
    "text": "or requires in in nested and nested applications or nested scripts I don't",
    "start": "2689279",
    "end": "2694589"
  },
  {
    "text": "know if that made any sense but the know it does do you have it the I mean I'm sure other people would ask but if you",
    "start": "2694589",
    "end": "2700769"
  },
  {
    "text": "have any example what that is something you've done in the past that may be open source or if I like or is Lobo done a",
    "start": "2700769",
    "end": "2707130"
  },
  {
    "text": "section that chats and can share some of that that's that would be awesome I know we have two episodes just for",
    "start": "2707130",
    "end": "2714089"
  },
  {
    "text": "integration testing they will show how you can do some of the local runs you execute the function locally but you",
    "start": "2714089",
    "end": "2720000"
  },
  {
    "text": "actually target the real service so you don't want to have challenges with fake events but you running your pass runner",
    "start": "2720000",
    "end": "2727980"
  },
  {
    "text": "to execute that function against the real services so we're gonna do that but if you have any code that shows that",
    "start": "2727980",
    "end": "2734819"
  },
  {
    "text": "particular practice that would be also I know what you're saying and I've seen that but I don't have any sample that I",
    "start": "2734819",
    "end": "2741509"
  },
  {
    "text": "could point customers to I might do that in my API lambda - API that's the it's",
    "start": "2741509",
    "end": "2753720"
  },
  {
    "text": "like a web framework for lambda functions that's in there because I do",
    "start": "2753720",
    "end": "2759990"
  },
  {
    "text": "think I'm just gonna check quickly I do have an s3 dependency that I use in here that is",
    "start": "2759990",
    "end": "2768630"
  },
  {
    "text": "pulled in in that method and in that way and then what it does is it actually think they have an s3 service right here",
    "start": "2768630",
    "end": "2775039"
  },
  {
    "text": "inquire yeah so actually here I'm going to paste this into the chat if anybody wants to see it but basically this",
    "start": "2775039",
    "end": "2781829"
  },
  {
    "text": "script here well this is I'm talking about yeah so going to go",
    "start": "2781829",
    "end": "2788299"
  },
  {
    "text": "into limb just going to lib Gregory I was on a different browser window and go to s3 service oh I see",
    "start": "2788299",
    "end": "2794329"
  },
  {
    "text": "what you're doing yeah it's exactly the same right yeah so you do it that way and then what happens is so you require",
    "start": "2794329",
    "end": "2801319"
  },
  {
    "text": "that AWS SDK and then you export a an instantiation of that s3 module there",
    "start": "2801319",
    "end": "2809630"
  },
  {
    "text": "and then what you can do is if you then go back to the tests and you look at to",
    "start": "2809630",
    "end": "2818180"
  },
  {
    "text": "go to tests and go to probably download",
    "start": "2818180",
    "end": "2823279"
  },
  {
    "text": "tried download it is probably one yeah I click on download jf yep I just clicked it alright and",
    "start": "2823279",
    "end": "2831829"
  },
  {
    "text": "then sorry I'm just s three requires that service and then if you scroll down",
    "start": "2831829",
    "end": "2838369"
  },
  {
    "text": "later it just search for s3 in that file",
    "start": "2838369",
    "end": "2843160"
  },
  {
    "text": "so I'm sure there's gonna be so now what",
    "start": "2846910",
    "end": "2851960"
  },
  {
    "text": "it does is it stubs this is stubbing this s3 with arguments",
    "start": "2851960",
    "end": "2857089"
  },
  {
    "text": "so that when you call this download here that this is the result that you're",
    "start": "2857089",
    "end": "2862190"
  },
  {
    "text": "getting back right so when you call so you call s3 my bucket with this",
    "start": "2862190",
    "end": "2868009"
  },
  {
    "text": "particular key this is what it's gonna return it's gonna return that acceptance rate so that's basically the the stubbed",
    "start": "2868009",
    "end": "2873979"
  },
  {
    "text": "object that comes back but you couldn't do that if you and by the way this is",
    "start": "2873979",
    "end": "2881779"
  },
  {
    "text": "your this is your same thing that you had the problem with see how it's returning a function called promise",
    "start": "2881779",
    "end": "2888640"
  },
  {
    "text": "that's why I was laughing I was like it's the same problem what's really cool",
    "start": "2888640",
    "end": "2897979"
  },
  {
    "text": "about doing it this way is that now with that stub and I think if you scroll up you'll probably see it scroll up a",
    "start": "2897979",
    "end": "2904609"
  },
  {
    "text": "little bit cuz that stub would will point to s3 so just scroll up I'm sure",
    "start": "2904609",
    "end": "2909920"
  },
  {
    "text": "we're a little bit delayed keep going keep going keep going it should",
    "start": "2909920",
    "end": "2916610"
  },
  {
    "text": "actually search for stub I might be the only thing that's stub that's why that's my wonderful naming conventions",
    "start": "2916610",
    "end": "2923420"
  },
  {
    "text": "yeah search for stub here go areas insane alright or sign-on okay so what",
    "start": "2923420",
    "end": "2929990"
  },
  {
    "text": "so i'm stubbing the s3 get object but that s3 get object doesn't exist if you",
    "start": "2929990",
    "end": "2938900"
  },
  {
    "text": "just were trying to patch the AWS sdk ssin you have to instantiate that first",
    "start": "2938900",
    "end": "2945490"
  },
  {
    "text": "get the instance of the s3 module then that has a get object method to it so",
    "start": "2945490",
    "end": "2953600"
  },
  {
    "text": "that's what you want to stuff and you couldn't do that if you the way that",
    "start": "2953600",
    "end": "2958850"
  },
  {
    "text": "you've got the me ingest TS coded right now because you wouldn't be able to",
    "start": "2958850",
    "end": "2964790"
  },
  {
    "text": "overwrite that that module exactly no that makes complete sense yeah no absolutely agree all right we",
    "start": "2964790",
    "end": "2972470"
  },
  {
    "text": "have ten minutes left so let's just show is just show quickly yeah let's just",
    "start": "2972470",
    "end": "2977480"
  },
  {
    "text": "show quickly on that particular test so one of the challenges with a SS SDK when they're trying to stop is in this case",
    "start": "2977480",
    "end": "2984680"
  },
  {
    "text": "raising is dependence injection but we could have used you know a proper library like sighs sign-on and things",
    "start": "2984680",
    "end": "2990830"
  },
  {
    "text": "like this or the ADA press SDK mark which I found quite useful as well is when you when you do a dynamo DB",
    "start": "2990830",
    "end": "2998860"
  },
  {
    "text": "document clients and most of the other best SDKs are pretty much all of them I think on the JavaScript side of things",
    "start": "2998860",
    "end": "3005200"
  },
  {
    "text": "is if you were not using the dot promise at the end you would have to use the",
    "start": "3005200",
    "end": "3010660"
  },
  {
    "text": "callback format in other way you would do something like this yes so instead of",
    "start": "3010660",
    "end": "3023620"
  },
  {
    "text": "actually doing this this would actually do a promise if I and that would return a promise and it would solve everything",
    "start": "3023620",
    "end": "3029860"
  },
  {
    "text": "however when you are testing the mistake I've made and I promise you as I look at",
    "start": "3029860",
    "end": "3036640"
  },
  {
    "text": "this for about an hour and nine and a half and I couldn't see it and it was Alec who also helped me with this in",
    "start": "3036640",
    "end": "3042940"
  },
  {
    "text": "addition I had data I also made a problem wars I did an NPM run built",
    "start": "3042940",
    "end": "3048630"
  },
  {
    "text": "which essentially converts that I'm gonna let it run in the background but that runs typescript",
    "start": "3048630",
    "end": "3055790"
  },
  {
    "text": "and converts into JavaScript and my chest was discovering two different tasks files and as you imagine I was",
    "start": "3055790",
    "end": "3064160"
  },
  {
    "text": "testing the changing the file trying to get his dog promise and it wasn't working at all the reason it was because",
    "start": "3064160",
    "end": "3069410"
  },
  {
    "text": "I had two files so the way you do this is the document we're passing that is",
    "start": "3069410",
    "end": "3075200"
  },
  {
    "text": "actually this client stub but it has a putt so which is fine we just create a",
    "start": "3075200",
    "end": "3080600"
  },
  {
    "text": "new new object and that putt is a function which takes a parameter and that has to return another object which",
    "start": "3080600",
    "end": "3089720"
  },
  {
    "text": "has a dot promise which again is the attribute or the property promise has to",
    "start": "3089720",
    "end": "3094730"
  },
  {
    "text": "be a function but it also has to return as a promise so I know this looks like",
    "start": "3094730",
    "end": "3101690"
  },
  {
    "text": "at first I was kind of a you know a bit not feeling well is like I don't think",
    "start": "3101690",
    "end": "3107450"
  },
  {
    "text": "that's right that maybe I'm missing something but now that I've seen this now one after the other I makes",
    "start": "3107450",
    "end": "3113840"
  },
  {
    "text": "completely sense to me just one thing most promise libraries including the",
    "start": "3113840",
    "end": "3119480"
  },
  {
    "text": "native promise library if you return if it's waiting for a promise but you return an object or a string or you",
    "start": "3119480",
    "end": "3126080"
  },
  {
    "text": "return some value it will just assume that the the promise is resolved so",
    "start": "3126080",
    "end": "3131600"
  },
  {
    "text": "really what you might want to do in this case is rather than doing promise resolve equals true I mean I'm assuming",
    "start": "3131600",
    "end": "3138320"
  },
  {
    "text": "the put statement or the put method we're DynamoDB would have some sort of",
    "start": "3138320",
    "end": "3146420"
  },
  {
    "text": "metadata that gets spit back so if you did want to test against that you know",
    "start": "3146420",
    "end": "3151730"
  },
  {
    "text": "you could you could potentially do that now that might not make sense in this situation because it's so simple but",
    "start": "3151730",
    "end": "3157490"
  },
  {
    "text": "certainly if you didn't want to test the response and say like you know if it was a you know consistent write or read",
    "start": "3157490",
    "end": "3164450"
  },
  {
    "text": "whatever and be able to and test different different paths based off of",
    "start": "3164450",
    "end": "3170330"
  },
  {
    "text": "what the response was you could do that you could do that as well so you don't have to return the promise but if you're",
    "start": "3170330",
    "end": "3175700"
  },
  {
    "text": "just going to return I think in this case you could just return true it would probably interesting yeah I remember I try not to",
    "start": "3175700",
    "end": "3182930"
  },
  {
    "text": "use a promise here and it tries something like this and that didn't work",
    "start": "3182930",
    "end": "3188000"
  },
  {
    "text": "because he had to be a promise anyone's complaining about this when I run",
    "start": "3188000",
    "end": "3193269"
  },
  {
    "text": "somebody mentioned on the chat to which is really really interesting is the the",
    "start": "3200380",
    "end": "3207380"
  },
  {
    "text": "j SS DK version 3 does have it is type script based and it does have made of",
    "start": "3207380",
    "end": "3213079"
  },
  {
    "text": "promises built in so that will be that will be interesting as well and alex",
    "start": "3213079",
    "end": "3219890"
  },
  {
    "text": "says that he needs promise because of the await but he but it but i think i'm",
    "start": "3219890",
    "end": "3225470"
  },
  {
    "text": "and maybe I'm wrong here but I'm pretty sure that if you just return a value that the await will assume that the",
    "start": "3225470",
    "end": "3231140"
  },
  {
    "text": "promise was resolved essentially if it returns a promise that eventually gets resolved it should work cool yeah so if",
    "start": "3231140",
    "end": "3239599"
  },
  {
    "text": "we he's a JavaScript master so I will I will defer to ya so essentially features",
    "start": "3239599",
    "end": "3247520"
  },
  {
    "text": "to the NPM T or NPM run test that we just show that everything works and when I was trying I remember I was actually",
    "start": "3247520",
    "end": "3253640"
  },
  {
    "text": "trying to do so I tried so many iterations of this and it wasn't working at all so I tried just true and then",
    "start": "3253640",
    "end": "3259250"
  },
  {
    "text": "again it was saying hey this is not a promise or yeah it took a little while to get this working ideally we we should",
    "start": "3259250",
    "end": "3266900"
  },
  {
    "text": "use something even more complex we could just do something like expect which is what just give us which is pretty nicely",
    "start": "3266900",
    "end": "3273560"
  },
  {
    "text": "and then we can just do dot something like that should be true fee or there's",
    "start": "3273560",
    "end": "3279829"
  },
  {
    "text": "so many just if I just look quickly onto the jest API reference to be yeah and",
    "start": "3279829",
    "end": "3294680"
  },
  {
    "text": "that's something I was really impressed I so we could actually do all of these",
    "start": "3294680",
    "end": "3299720"
  },
  {
    "text": "pieces but there's something I found we're gonna test that on the on the integration testing and now we're running out of time but if you are",
    "start": "3299720",
    "end": "3306290"
  },
  {
    "text": "already at this stage you're doing integration testing and and especially for doing javascript i if",
    "start": "3306290",
    "end": "3311680"
  },
  {
    "text": "i hopefully I can find the library again but there was a library called AWS test",
    "start": "3311680",
    "end": "3319810"
  },
  {
    "text": "you choose and you want something really interesting uh for me of this tell meif",
    "start": "3319810",
    "end": "3325870"
  },
  {
    "text": "is a lambda or dis it's basically I could do something like write to Dinamo",
    "start": "3325870",
    "end": "3330910"
  },
  {
    "text": "and expect the item should be X why's that let me see if that's the case so it was",
    "start": "3330910",
    "end": "3337840"
  },
  {
    "text": "something really that looks really similar to I don't think it that's the one but I found something I was really",
    "start": "3337840",
    "end": "3343390"
  },
  {
    "text": "similar to the just but pretty much anything else on top of a table services",
    "start": "3343390",
    "end": "3350500"
  },
  {
    "text": "including dynamo or West here we go yeah so that's the library it's actually really really clever so if you're right",
    "start": "3350500",
    "end": "3357280"
  },
  {
    "text": "if you're like that particular stage I will definitely suggest having a quick look but it sounds like it's quite old",
    "start": "3357280",
    "end": "3363160"
  },
  {
    "text": "now so maybe don't three years Java scripts have changed like forever",
    "start": "3363160",
    "end": "3370410"
  },
  {
    "text": "integration testing and obviously it's really good idea to test against real",
    "start": "3377940",
    "end": "3383760"
  },
  {
    "text": "real cloud resources but honestly when you're trying to iterate through and",
    "start": "3383760",
    "end": "3389830"
  },
  {
    "text": "test on a bunch of different failure paths or or even success paths which",
    "start": "3389830",
    "end": "3395710"
  },
  {
    "text": "what's really really good about jest or using something like sign it or whatever is you can capture you can actually make",
    "start": "3395710",
    "end": "3402040"
  },
  {
    "text": "a real call capture what gets back you know comes back and then use that as an event or as a response that you can that",
    "start": "3402040",
    "end": "3409900"
  },
  {
    "text": "you can test against right so if you know that an error event when there is",
    "start": "3409900",
    "end": "3415080"
  },
  {
    "text": "you know some sort of a throttling event that happens for DynamoDB if that comes",
    "start": "3415080",
    "end": "3420310"
  },
  {
    "text": "back and gives you a specific message you know save that so that you have them then you can kind of test against it and",
    "start": "3420310",
    "end": "3426460"
  },
  {
    "text": "say here's what my code does when I get this type of response and again both",
    "start": "3426460",
    "end": "3431980"
  },
  {
    "text": "mocha and and just have really good features for how many times a particular",
    "start": "3431980",
    "end": "3438070"
  },
  {
    "text": "thing was called you know you can even change so it's called the first time it returns XYZ when it's",
    "start": "3438070",
    "end": "3444960"
  },
  {
    "text": "called the second time it could call it returns ABC and also again nothing about",
    "start": "3444960",
    "end": "3450420"
  },
  {
    "text": "Jess to that it just it kind of took everything and put it together it also does code coverage yeah you know for two",
    "start": "3450420",
    "end": "3458040"
  },
  {
    "text": "code coverage for you so you don't have to use something like NYC you know in order to in order to do that although I",
    "start": "3458040",
    "end": "3464100"
  },
  {
    "text": "really do like icy but still it does it does a whole bunch of um and there's a",
    "start": "3464100",
    "end": "3469560"
  },
  {
    "text": "whole bunch of this stuff for you so it's just it's nice too because you're just working with one framework as",
    "start": "3469560",
    "end": "3474660"
  },
  {
    "text": "opposed to having to install for different things every time and it just kind of works out out of the box but a",
    "start": "3474660",
    "end": "3480660"
  },
  {
    "text": "lot of really really cool things you can do with just yeah I even saw that they",
    "start": "3480660",
    "end": "3485970"
  },
  {
    "text": "have puppets here example probably can I be using with la boda we're gonna be doing an episode of end to end tests and",
    "start": "3485970",
    "end": "3492450"
  },
  {
    "text": "to visual testing a snapshot regression and things like this but we're going to be using a cypress but I was really it",
    "start": "3492450",
    "end": "3499050"
  },
  {
    "text": "really caught my attention on how complete this is yeah you're right right so to finish this off on the",
    "start": "3499050",
    "end": "3505320"
  },
  {
    "text": "debate of typescript JavaScript etc when you do when you were about to deploy all of this what you have to do in lambda in",
    "start": "3505320",
    "end": "3512430"
  },
  {
    "text": "that case you could use webpack whatever you want to do but because some butan do that because it doesn't understand as a",
    "start": "3512430",
    "end": "3518430"
  },
  {
    "text": "native runtime so what we did for deploying is that we we actually have to",
    "start": "3518430",
    "end": "3524310"
  },
  {
    "text": "run an NPM install we do a run build and then we just package that over and deploy as it is the reason that it works",
    "start": "3524310",
    "end": "3531120"
  },
  {
    "text": "is because if we go back to the loyalty just to finish today's topic you don't",
    "start": "3531120",
    "end": "3537600"
  },
  {
    "text": "want to sit in the front end for now if you are let me know happy to show if you",
    "start": "3537600",
    "end": "3542970"
  },
  {
    "text": "go to you if you go if you go here when you change this you're going to change that you to the separate file and once",
    "start": "3542970",
    "end": "3549450"
  },
  {
    "text": "you can see that the ingest is in here so when compiled I think compile is",
    "start": "3549450",
    "end": "3555570"
  },
  {
    "text": "under white word for that but yeah let's just get on with that and you can see that gets all like squeezed in any",
    "start": "3555570",
    "end": "3562080"
  },
  {
    "text": "transforms into into normal JavaScript editing reads but it obviously doesn't",
    "start": "3562080",
    "end": "3567300"
  },
  {
    "text": "have interfaces because again it doesn't tell you it doesn't have interfaces but",
    "start": "3567300",
    "end": "3572790"
  },
  {
    "text": "still everything is in here have the source mapping if you want to do debugging and things like this and lastly before I forget if you want to do",
    "start": "3572790",
    "end": "3580589"
  },
  {
    "text": "that if you if you are like me and you love using step through the bug in through testing this is the only one",
    "start": "3580589",
    "end": "3585959"
  },
  {
    "text": "that worked for me happy to put that into the PR but essentially you can use just with a command parameter called",
    "start": "3585959",
    "end": "3592979"
  },
  {
    "text": "running band and you can use that as a way to do a step through debugging",
    "start": "3592979",
    "end": "3598559"
  },
  {
    "text": "inside your project just why just mind the program where you're supposed to run",
    "start": "3598559",
    "end": "3603689"
  },
  {
    "text": "the path has to be exact but yeah I think that's pretty much it we are we're",
    "start": "3603689",
    "end": "3610349"
  },
  {
    "text": "more than on track hopefully that was useful that discussion there is a lot in here I know but tomorrow we're going to",
    "start": "3610349",
    "end": "3618989"
  },
  {
    "text": "be opening a PR for actually getting all this mangled in and improved over time",
    "start": "3618989",
    "end": "3624479"
  },
  {
    "text": "and because this is the last episode of not the series but actually the last",
    "start": "3624479",
    "end": "3630119"
  },
  {
    "text": "episodes of oh I forgot to page now let me see if I can have in here we we have",
    "start": "3630119",
    "end": "3639469"
  },
  {
    "text": "or you'll need to get that in a separate let me just go back in here and view",
    "start": "3639469",
    "end": "3648299"
  },
  {
    "text": "done service so you can see the page so",
    "start": "3648299",
    "end": "3653609"
  },
  {
    "text": "this page here if you haven't seen this before just to kind of a give you because it's the last episode I just want to make sure this is actually clear",
    "start": "3653609",
    "end": "3661309"
  },
  {
    "text": "if you look at the episodes in here until the episode number six we were",
    "start": "3661309",
    "end": "3666709"
  },
  {
    "text": "prototyping it we were testing different tools we're using a bunch of different tricks and make files and a bunch of",
    "start": "3666709",
    "end": "3672359"
  },
  {
    "text": "workarounds as our projects got bigger and bigger and bigger but starting from episode number eight is where we're",
    "start": "3672359",
    "end": "3679589"
  },
  {
    "text": "gonna start talking about best practices and how we can optimize this if you're working in a large team for instance",
    "start": "3679589",
    "end": "3685559"
  },
  {
    "text": "multiple different services and things like this for now we're taking into the approach that we could very well change",
    "start": "3685559",
    "end": "3692609"
  },
  {
    "text": "all of these backends and services into separate ripples but because we are constrained in that particular diverse",
    "start": "3692609",
    "end": "3698609"
  },
  {
    "text": "samples we're just using folders in here as if it was a big mono repo but we're",
    "start": "3698609",
    "end": "3704519"
  },
  {
    "text": "gonna be changing all of this in two or better orchestrating using integration tasks and we also",
    "start": "3704519",
    "end": "3710220"
  },
  {
    "text": "going to have young Chui as well in the last episodes should do a audit tracing",
    "start": "3710220",
    "end": "3715740"
  },
  {
    "text": "capability structure logins custom metrics dashboards and all that sort of thing we're going to be doing the last",
    "start": "3715740",
    "end": "3721890"
  },
  {
    "text": "one and lastly which we need your help pretty please is we we will have an",
    "start": "3721890",
    "end": "3727920"
  },
  {
    "text": "episode that's voted by you so you have to tell us what would you like if I got",
    "start": "3727920",
    "end": "3732930"
  },
  {
    "text": "you this the real repo there's an issue in here when people are voting and asking for whatever they want",
    "start": "3732930",
    "end": "3739680"
  },
  {
    "text": "so there's a bonus episode in here we've got so far things like I want to do a ETL process another all you need to do",
    "start": "3739680",
    "end": "3747630"
  },
  {
    "text": "is just do a like in like this and actually the like not is like again and",
    "start": "3747630",
    "end": "3754110"
  },
  {
    "text": "make sure you actually add your votes tell us what you would like to see and essentially we're going to be doing that",
    "start": "3754110",
    "end": "3759600"
  },
  {
    "text": "as an additional episode in August there's only one piece here that if we continue to hear more and more is not",
    "start": "3759600",
    "end": "3766890"
  },
  {
    "text": "only the ETL but there's one comment here that are really loved which was about what if you could build a mobile",
    "start": "3766890",
    "end": "3773340"
  },
  {
    "text": "app off this project so that's something we could do as well so please vote and",
    "start": "3773340",
    "end": "3779370"
  },
  {
    "text": "I'm gonna leave the last words for for Jeremy and in case I missed anything no",
    "start": "3779370",
    "end": "3790950"
  },
  {
    "text": "problem any any last advice was something for someone who's doing testing where they can find resources are you ready planning to write any new",
    "start": "3790950",
    "end": "3797820"
  },
  {
    "text": "content on the testing are you looking for any suggestions because you write a lot actually but I have a couple of blog",
    "start": "3797820",
    "end": "3808650"
  },
  {
    "text": "posts that talk about testing that go through JavaScript testing with mocha",
    "start": "3808650",
    "end": "3814880"
  },
  {
    "text": "NYC for code coverage and a couple of other things like that that you could",
    "start": "3814880",
    "end": "3822420"
  },
  {
    "text": "probably it would be useful probably have to search for it if you maybe overt",
    "start": "3822420",
    "end": "3828630"
  },
  {
    "text": "down on the right I don't know I may know this search box on here this is still WordPress by the way so don't I don't shame shame",
    "start": "3828630",
    "end": "3837980"
  },
  {
    "text": "well yeah I know there's some there's some stuff on there and you can look around for the testing stuff and again",
    "start": "3840529",
    "end": "3847229"
  },
  {
    "text": "you know if anybody wants to sign up for my newsletter please feel free to do that and you want to get a like a 25",
    "start": "3847229",
    "end": "3854819"
  },
  {
    "text": "page document and your email every week with all the great links and stuff happening around the service world then",
    "start": "3854819",
    "end": "3861630"
  },
  {
    "text": "do that awesome like I said many times before even then the stream it's a huge",
    "start": "3861630",
    "end": "3867809"
  },
  {
    "text": "pleasure to have you and so it is else that you have many other awesome people helping out other there are other",
    "start": "3867809",
    "end": "3873539"
  },
  {
    "text": "developer advocates and also service heroes so thanks I like also for the",
    "start": "3873539",
    "end": "3878910"
  },
  {
    "text": "help earlier I know you're not live in here but you are helping tremendously someone and pretty much everyone the",
    "start": "3878910",
    "end": "3884249"
  },
  {
    "text": "backstage like I said on Twitter it takes a village to produce something like this there's a there's actually",
    "start": "3884249",
    "end": "3890369"
  },
  {
    "text": "seven more hours you go through more and more content for you on a weekly basis thank you everyone for watching",
    "start": "3890369",
    "end": "3896160"
  },
  {
    "text": "Thank You Jeremy once again and enjoy everyone and have a great weekend if I",
    "start": "3896160",
    "end": "3901859"
  },
  {
    "text": "don't see you now",
    "start": "3901859",
    "end": "3904818"
  }
]