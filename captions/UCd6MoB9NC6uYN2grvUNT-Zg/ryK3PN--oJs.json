[
  {
    "text": "- [Instructor] In this video,",
    "start": "550",
    "end": "1383"
  },
  {
    "text": "you'll see how to find hardcoded secrets",
    "start": "1383",
    "end": "3159"
  },
  {
    "text": "using the Amazon CodeGuru\nReviewer Secrets Detector.",
    "start": "3160",
    "end": "6650"
  },
  {
    "text": "With this tool, you can identify secrets",
    "start": "6650",
    "end": "8550"
  },
  {
    "text": "in your application code,\ncontinually scan your repositories",
    "start": "8550",
    "end": "11640"
  },
  {
    "text": "for new secrets, and secure\nany secrets you discover",
    "start": "11640",
    "end": "13933"
  },
  {
    "text": "in AWS Secrets Manager.",
    "start": "13933",
    "end": "16112"
  },
  {
    "text": "To get started, let's navigate\nto AWS Secrets Manager.",
    "start": "18320",
    "end": "21403"
  },
  {
    "text": "Secrets Manager allows\nyou to easily store,",
    "start": "24010",
    "end": "26120"
  },
  {
    "text": "rotate, and retrieve database\ncredentials, API keys,",
    "start": "26120",
    "end": "29130"
  },
  {
    "text": "and other secrets\nthroughout their life cycle.",
    "start": "29130",
    "end": "31619"
  },
  {
    "text": "Secrets Manager can be\nintegrated with Amazon CodeGuru",
    "start": "31620",
    "end": "33762"
  },
  {
    "text": "to help ensure that these secrets",
    "start": "33762",
    "end": "35640"
  },
  {
    "text": "are not accidentally hardcoded\ninto your repositories.",
    "start": "35640",
    "end": "38392"
  },
  {
    "text": "From here, we can scroll\ndown to Related Services,",
    "start": "39500",
    "end": "42280"
  },
  {
    "text": "and click Amazon CodeGuru\nto associate a repository",
    "start": "42280",
    "end": "44949"
  },
  {
    "text": "with CodeGuru Reviewer.",
    "start": "44950",
    "end": "46793"
  },
  {
    "text": "Before we associate our repository,",
    "start": "48420",
    "end": "50269"
  },
  {
    "text": "let's take a quick look\nat this demo repository",
    "start": "50270",
    "end": "52350"
  },
  {
    "text": "to see an example of how CodeGuru Reviewer",
    "start": "52350",
    "end": "54201"
  },
  {
    "text": "can find hardcoded secrets\nin our application code.",
    "start": "54201",
    "end": "57093"
  },
  {
    "text": "This demo application has some\nsecrets hardcoded into it,",
    "start": "58190",
    "end": "60989"
  },
  {
    "text": "and this repository analysis page",
    "start": "60990",
    "end": "62670"
  },
  {
    "text": "shows how CodeGuru Reviewer\nwill display those findings.",
    "start": "62670",
    "end": "65483"
  },
  {
    "text": "Now let's associate a real\nrepository with CodeGuru Reviewer",
    "start": "67290",
    "end": "70100"
  },
  {
    "text": "and analyze it for hardcoded secrets.",
    "start": "70100",
    "end": "72483"
  },
  {
    "text": "We'll start by forking this repository",
    "start": "74810",
    "end": "76312"
  },
  {
    "text": "into our GitHub account.",
    "start": "76313",
    "end": "77843"
  },
  {
    "text": "Next, we'll go back to CodeGuru Reviewer",
    "start": "80230",
    "end": "81682"
  },
  {
    "text": "and connect to our GitHub account.",
    "start": "81682",
    "end": "83833"
  },
  {
    "text": "Now that the account is connected,",
    "start": "89200",
    "end": "90549"
  },
  {
    "text": "let's select the repository\nwe saw earlier for analysis.",
    "start": "90550",
    "end": "93350"
  },
  {
    "text": "Since we are doing a\nfull repository analysis,",
    "start": "95860",
    "end": "98060"
  },
  {
    "text": "we must specify the\nbranch we want analyzed.",
    "start": "98060",
    "end": "100342"
  },
  {
    "text": "In this case, we'll\nanalyze the master branch.",
    "start": "101630",
    "end": "103930"
  },
  {
    "text": "We can optionally specify\na code review name.",
    "start": "106180",
    "end": "109240"
  },
  {
    "text": "Otherwise, one will be\ngenerated automatically.",
    "start": "109240",
    "end": "111590"
  },
  {
    "text": "We can also add tags if needed.",
    "start": "112890",
    "end": "114680"
  },
  {
    "text": "For our purposes, let's\nassociate the repository",
    "start": "114680",
    "end": "116544"
  },
  {
    "text": "and run the analysis.",
    "start": "116544",
    "end": "118033"
  },
  {
    "text": "Now that the analysis has\nfinished, let's take a look at it.",
    "start": "122810",
    "end": "125793"
  },
  {
    "text": "We'll filter the CodeGuru recommendations",
    "start": "127510",
    "end": "129590"
  },
  {
    "text": "so that they only protect a\nsecrets discovered in the code.",
    "start": "129590",
    "end": "132540"
  },
  {
    "text": "As you can see,",
    "start": "138050",
    "end": "138883"
  },
  {
    "text": "one file contains a\nhardcoded AWS access key ID,",
    "start": "138883",
    "end": "142140"
  },
  {
    "text": "and another contains a hardcoded password.",
    "start": "142140",
    "end": "144760"
  },
  {
    "text": "Let's select a .travis.yml\nfile to open our repository",
    "start": "144760",
    "end": "148580"
  },
  {
    "text": "and see exactly where the\nsecret is in our code.",
    "start": "148580",
    "end": "150980"
  },
  {
    "text": "Notice that the relevant\ncode is highlighted.",
    "start": "153160",
    "end": "155120"
  },
  {
    "text": "Let's go back.",
    "start": "155120",
    "end": "155952"
  },
  {
    "text": "The protect your credential button",
    "start": "159080",
    "end": "160510"
  },
  {
    "text": "will take us to AWS Secrets Manager,",
    "start": "160510",
    "end": "162680"
  },
  {
    "text": "where we can secure the\ncredential in question.",
    "start": "162680",
    "end": "165030"
  },
  {
    "text": "Keys and tokens are categorized\nas Other Type of Secret.",
    "start": "167260",
    "end": "170373"
  },
  {
    "text": "Let's copy the key ID in\nGitHub and paste it in here.",
    "start": "172790",
    "end": "175592"
  },
  {
    "text": "We'll give the secret a name\nand proceed to the next step.",
    "start": "185460",
    "end": "188360"
  },
  {
    "text": "We won't be rotating this\nsecret, so let's move on.",
    "start": "193500",
    "end": "196253"
  },
  {
    "text": "Secrets Manager has given us code snippets",
    "start": "198860",
    "end": "200880"
  },
  {
    "text": "to pull this credential from\nSecrets Manager at runtime.",
    "start": "200880",
    "end": "203980"
  },
  {
    "text": "We can copy this code and use it",
    "start": "203980",
    "end": "205349"
  },
  {
    "text": "to make the code change\nin our application.",
    "start": "205350",
    "end": "207500"
  },
  {
    "text": "As you can see, the secret\nhas been successfully stored.",
    "start": "213790",
    "end": "216590"
  },
  {
    "text": "You've just seen how to\nfind hardcoded secrets",
    "start": "219510",
    "end": "221540"
  },
  {
    "text": "using the Amazon CodeGuru\nReviewer Secrets Detector.",
    "start": "221540",
    "end": "225056"
  },
  {
    "text": "You can learn more about this topic",
    "start": "225057",
    "end": "226820"
  },
  {
    "text": "in the description and\nlinks for this video.",
    "start": "226820",
    "end": "228750"
  },
  {
    "text": "Thanks for watching.",
    "start": "228750",
    "end": "229610"
  },
  {
    "text": "Now it's your turn to try.",
    "start": "229610",
    "end": "230910"
  }
]