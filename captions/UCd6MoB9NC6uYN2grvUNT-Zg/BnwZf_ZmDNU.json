[
  {
    "text": "all right thank you everybody for coming Wow the like right in my face is the right so this is architecting asp.net",
    "start": "0",
    "end": "7830"
  },
  {
    "text": "core micro services for on AWS so this is not the session you want it to be in",
    "start": "7830",
    "end": "12990"
  },
  {
    "text": "you're in the wrong place you're in the wrong place my name is Kirk Davis I'm a specialized solutions architects on the",
    "start": "12990",
    "end": "19680"
  },
  {
    "text": "Microsoft platform team I'm a longtime dotnet developer and Microsoft platform",
    "start": "19680",
    "end": "26099"
  },
  {
    "text": "developer technically I guess since 1983 when I got a Commodore vic-20 and it",
    "start": "26099",
    "end": "31109"
  },
  {
    "text": "came with Microsoft basic 1.0 but I don't really program in basic anymore",
    "start": "31109",
    "end": "37489"
  },
  {
    "text": "and this is Nicky client I'm Nicky I'm a Technical Evangelist at AWS if you're",
    "start": "37489",
    "end": "44070"
  },
  {
    "text": "not familiar with the term what that means is basically they pay me to play with the cool stuff that they build and",
    "start": "44070",
    "end": "49620"
  },
  {
    "text": "then show you how cool it is it's my job and I'm a.net developer and a.net",
    "start": "49620",
    "end": "55110"
  },
  {
    "text": "developer for five years I don't go quite as far back as you but I have a",
    "start": "55110",
    "end": "60780"
  },
  {
    "text": "few years on you just a couple so the agenda for today's session is we're",
    "start": "60780",
    "end": "66390"
  },
  {
    "text": "gonna really quick go through what basically we created a sample application using a dotnet core",
    "start": "66390",
    "end": "72750"
  },
  {
    "text": "microservices architecture and we're gonna go through why we chose net core probably that's obvious but it could be",
    "start": "72750",
    "end": "80100"
  },
  {
    "text": "dotnet framework I guess sort of our architectural goal for this sample application an overview of the",
    "start": "80100",
    "end": "87060"
  },
  {
    "text": "architecture by which I mean the services that we use to compose the application how we did authentication",
    "start": "87060",
    "end": "93540"
  },
  {
    "text": "and authorization how we hooked up distributed tracing and logging session state DB",
    "start": "93540",
    "end": "100670"
  },
  {
    "text": "both session cookies for tracking and optionally session state the rest of its",
    "start": "100670",
    "end": "106470"
  },
  {
    "text": "up there so that's what we're gonna go through here today these are some",
    "start": "106470",
    "end": "111689"
  },
  {
    "text": "related sessions this is kind of a sick joke because two out of three of these are already passed but if you are",
    "start": "111689",
    "end": "118350"
  },
  {
    "text": "interested in the topic moving forward there is well I think one session on here this time Thursday either way",
    "start": "118350",
    "end": "125369"
  },
  {
    "text": "tomorrow at 11:30 if you're still interested in hearing more about oh well architected dotnet ups don't want to",
    "start": "125369",
    "end": "132360"
  },
  {
    "text": "miss that one why Donna core so Donna core is",
    "start": "132360",
    "end": "137590"
  },
  {
    "text": "definitely the future of dotnet its modular its lightweight it's cross-platform I'm running on my Mac",
    "start": "137590",
    "end": "143290"
  },
  {
    "text": "right now it runs in pretty much the full spectrum of AWS services now like",
    "start": "143290",
    "end": "148569"
  },
  {
    "text": "full compute spectrum and if you already have experience with dotnet framework then you should slide right into dotnet",
    "start": "148569",
    "end": "155920"
  },
  {
    "text": "core really fast it shouldn't be very hard at all for you to get up to speed and it's also benchmarks for for several",
    "start": "155920",
    "end": "163000"
  },
  {
    "text": "of our services it's faster than nodejs and Java in numerous benchmarks which is pretty cool and then if you didn't if",
    "start": "163000",
    "end": "170139"
  },
  {
    "text": "you didn't see my breakout last night and i talked a little bit about down at history so this is another reason why we believe that donna core is the future of",
    "start": "170139",
    "end": "177069"
  },
  {
    "text": "dotnet originally when Microsoft was going to released on a core they put out this diagram because oh sorry",
    "start": "177069",
    "end": "186060"
  },
  {
    "text": "you okay bless you that was just a call that was a cop okay so originally when",
    "start": "186060",
    "end": "197319"
  },
  {
    "text": "they were gonna release a court they were gonna name it dotnet core 5 just to show you that they really saw it as the",
    "start": "197319",
    "end": "202810"
  },
  {
    "text": "next step in the evolution of dotnet of course you know the story they named it",
    "start": "202810",
    "end": "207849"
  },
  {
    "text": "Dante core one now to two point one and then three is coming so they didn't end up choosing this name but I like to show",
    "start": "207849",
    "end": "214299"
  },
  {
    "text": "it because it's interesting to see how how they thought of it and how we think of it and then lastly burner also likes",
    "start": "214299",
    "end": "222639"
  },
  {
    "text": "c-sharp which is pretty cool so that's it always a good thing so some other",
    "start": "222639",
    "end": "229030"
  },
  {
    "text": "considerations we took into and trying to figure out how to build a asp.net core of Microsoft services app our goal",
    "start": "229030",
    "end": "236409"
  },
  {
    "text": "is to deploy something where we didn't have any infrastructure to manage where none of the services required us to like",
    "start": "236409",
    "end": "243099"
  },
  {
    "text": "launch servers or god forbid have to install operating systems or run iis and",
    "start": "243099",
    "end": "250449"
  },
  {
    "text": "and get in and configure things so we also wanted the services to be able to be reachable from the internet so we put",
    "start": "250449",
    "end": "256900"
  },
  {
    "text": "a web front-end on it so they had to be reachable from the internet but also be able to talk to each other because we",
    "start": "256900",
    "end": "262570"
  },
  {
    "text": "might not want to have private micro services that that we don't want from the internet and we wanted support",
    "start": "262570",
    "end": "267900"
  },
  {
    "text": "for both anonymous users and authentication authenticated users which means we have to have a you know a place",
    "start": "267900",
    "end": "274080"
  },
  {
    "text": "for our users to be storage so and also we didn't want any infrastructure for any of this stuff and really important",
    "start": "274080",
    "end": "280229"
  },
  {
    "text": "for micro services application is logging and request tracing and fortunately AWS has services that will",
    "start": "280229",
    "end": "286830"
  },
  {
    "text": "do that job for us as well and then last we're going to talk about the automated CI CD pipeline where we don't have to",
    "start": "286830",
    "end": "292380"
  },
  {
    "text": "manually deploy code up and provision any kind of infrastructure where it's all just gonna happen automatically",
    "start": "292380",
    "end": "299750"
  },
  {
    "text": "that's true so as with anything that you build there are many different ways to",
    "start": "299750",
    "end": "306240"
  },
  {
    "text": "skin a cat and with AWS even if you constrain the requirements to no",
    "start": "306240",
    "end": "312750"
  },
  {
    "text": "infrastructure you still have many different options so today we're gonna talk about some of the choices that we made but you might make different ones",
    "start": "312750",
    "end": "319229"
  },
  {
    "text": "and that's totally ok just you can see here if you go with no one for sure compute you can choose between lambda or",
    "start": "319229",
    "end": "325650"
  },
  {
    "text": "far gate storage s3 or dynamo so don't feel that you have to make the same",
    "start": "325650",
    "end": "331500"
  },
  {
    "text": "choices that we made because there's a lot of different option and the beauty about DWS is that there's",
    "start": "331500",
    "end": "336830"
  },
  {
    "text": "an infinite amount of choices that you can make and you could mix and match different choices - I mean there's you",
    "start": "336830",
    "end": "342560"
  },
  {
    "text": "don't have to just we chose containers but you could also do a hybrid application so you could mix and match",
    "start": "342560",
    "end": "348050"
  },
  {
    "text": "on a lot of these so for the architecture that we chose this diagram",
    "start": "348050",
    "end": "353540"
  },
  {
    "text": "we're gonna build up over the next few slides the computer on the left there represents users that are running in a",
    "start": "353540",
    "end": "359419"
  },
  {
    "text": "browser they're hitting their request to go to an application load balancer the micro services themselves are each in",
    "start": "359419",
    "end": "366199"
  },
  {
    "text": "their own containers so the blue varnish and purple containers are three",
    "start": "366199",
    "end": "371780"
  },
  {
    "text": "different micro services for products orders and shopping cart the green is supposed to represent perhaps another",
    "start": "371780",
    "end": "378470"
  },
  {
    "text": "service that we don't want to be reachable from the internet so there's no line going to it from the application load balancer and then DynamoDB is off",
    "start": "378470",
    "end": "385190"
  },
  {
    "text": "there on the right and that's where we're storing everything for this little sample application for world apps maybe",
    "start": "385190",
    "end": "391400"
  },
  {
    "text": "you might want to have some relational database so there's Aurora server lists you could actually have a server list relational database if you if you had",
    "start": "391400",
    "end": "398660"
  },
  {
    "text": "data that was more amenable to that so if you look at this though right now it looks a little up so I think",
    "start": "398660",
    "end": "404090"
  },
  {
    "text": "everything's up top and that's because all those containers are running in one zone and so if a giant asteroid or",
    "start": "404090",
    "end": "411289"
  },
  {
    "text": "something took out that availability zone or a flood maybe more realistically then your app would go down and one of",
    "start": "411289",
    "end": "417560"
  },
  {
    "text": "our constraints was we wanted this whole thing to be highly available so no single point of failure and so we just",
    "start": "417560",
    "end": "423020"
  },
  {
    "text": "set up the container ECS services to automatically deploy - to availability",
    "start": "423020",
    "end": "429050"
  },
  {
    "text": "zones so there's two copies of every one of those containers and then for users that if we're gonna have any real-world",
    "start": "429050",
    "end": "436539"
  },
  {
    "text": "website that is relying on micro services in the backend you're gonna have some way to authenticate those",
    "start": "436539",
    "end": "442190"
  },
  {
    "text": "people we chose kognito because again nothing no infrastructure to manage it's",
    "start": "442190",
    "end": "447860"
  },
  {
    "text": "a great highly available service the AWS amplify javascript libraries made it",
    "start": "447860",
    "end": "452870"
  },
  {
    "text": "really easy to take the users credentials at they enter in the web page transmitted over HTTP to kognito",
    "start": "452870",
    "end": "458150"
  },
  {
    "text": "where the actual authentication happens and then a cryptographically signed JSON web token which is a job or called job",
    "start": "458150",
    "end": "464990"
  },
  {
    "text": "comes back and then that gets passed along on subsequent requests to any of the api's that we want to restrict to",
    "start": "464990",
    "end": "471290"
  },
  {
    "text": "authenticated users in order for the back-end services those micro services",
    "start": "471290",
    "end": "478160"
  },
  {
    "text": "running in containers to find each other we didn't want them to have to like go out over the Internet and come into the",
    "start": "478160",
    "end": "483560"
  },
  {
    "text": "application load balancer again so we used a service called ECS service discovery which will automatically",
    "start": "483560",
    "end": "489260"
  },
  {
    "text": "register it I'll go into or actually I think Nikki will go into that more a little later but it also lets those",
    "start": "489260",
    "end": "495230"
  },
  {
    "text": "micro services talk to say private micro services that aren't accessible via the application load balancer anyway and",
    "start": "495230",
    "end": "503180"
  },
  {
    "text": "then the last part of the architecture overall r2 services we added which are Amazon Cloud Watch cloud watch logs",
    "start": "503180",
    "end": "510200"
  },
  {
    "text": "where where all of our application logs are going to cloud watch again no actually managed highly available",
    "start": "510200",
    "end": "515659"
  },
  {
    "text": "service and some new features have just been added I think announced two days ago or earlier this week where you can",
    "start": "515659",
    "end": "523400"
  },
  {
    "text": "get visualizations and queries out of your logs so it's even more useful than it was when we first created this slide",
    "start": "523400",
    "end": "529310"
  },
  {
    "text": "and then x-ray for distributed Tracey web front so yeah that was the back end",
    "start": "529310",
    "end": "537260"
  },
  {
    "text": "the front end is just an angular app it's running the latest version of angular and I used AWS amplify if you're",
    "start": "537260",
    "end": "544339"
  },
  {
    "text": "not familiar with AWS amplify I highly suggest you check it out it's one of my favorite AWS services the reason being",
    "start": "544339",
    "end": "550190"
  },
  {
    "text": "is I don't have to know a single thing about AWS to basically create a cloud hosted application so I don't have to",
    "start": "550190",
    "end": "556700"
  },
  {
    "text": "know what the service names are called how to use them nothing if I just basically know how to use amplify CLI",
    "start": "556700",
    "end": "563240"
  },
  {
    "text": "tool I can do stew simple things like amplify add hosting amplify add storage",
    "start": "563240",
    "end": "568339"
  },
  {
    "text": "and it will basically set up an entire application hosted for me on the internet which is excellent so least",
    "start": "568339",
    "end": "573860"
  },
  {
    "text": "amount of information possible I also think it's really cool that link there is the docs it was a little active",
    "start": "573860",
    "end": "579710"
  },
  {
    "text": "rebellion by the amplifi team they do not have their Doc's hosted on AWS they are hosted on github so it's are",
    "start": "579710",
    "end": "586460"
  },
  {
    "text": "really interesting Microsoft github enterprise 28 yeah v2",
    "start": "586460",
    "end": "592850"
  },
  {
    "text": "anyways they're on github if you know any of the JavaScript frameworks the most popular ones angular react UJS",
    "start": "592850",
    "end": "600570"
  },
  {
    "text": "definitely check out amplify it also works for react native foe so service",
    "start": "600570",
    "end": "606330"
  },
  {
    "text": "routing so he briefly touched on this so we have external service routing and that's going through our alb or",
    "start": "606330",
    "end": "612060"
  },
  {
    "text": "application load balancer when we're using path based routing so you can see the paths there and then internally",
    "start": "612060",
    "end": "618420"
  },
  {
    "text": "we're using ECS service discovery so that the containers can find each other basically so if we have private",
    "start": "618420",
    "end": "624690"
  },
  {
    "text": "containers so you could think about maybe like a product service or a payment service maybe that we didn't",
    "start": "624690",
    "end": "629970"
  },
  {
    "text": "create here but maybe you don't want payment being able to be reached out to the internet but the other containers",
    "start": "629970",
    "end": "635490"
  },
  {
    "text": "need to be able to access it that is the beauty of ECS service discovery identity",
    "start": "635490",
    "end": "642480"
  },
  {
    "text": "management so we used Amazon kognito user pools and you can actually use amplified to create your user pool for",
    "start": "642480",
    "end": "649260"
  },
  {
    "text": "you by just by doing amplify add off one simple command super cool however we actually created the user",
    "start": "649260",
    "end": "655500"
  },
  {
    "text": "pool in this case it's a great service for managing identities you don't have to manage any infrastructure you can",
    "start": "655500",
    "end": "661680"
  },
  {
    "text": "also use federated identities to login so you can set this up with Facebook",
    "start": "661680",
    "end": "666740"
  },
  {
    "text": "Amazon what are the other ones Google sam'l open ID all the organ is a Mazon right",
    "start": "666740",
    "end": "674380"
  },
  {
    "text": "[Music] probably not but yeah so all of our all of our users are stored in Amazon come",
    "start": "674380",
    "end": "680730"
  },
  {
    "text": "you know using schools which again as you mentioned is using the Nijat okay so",
    "start": "680730",
    "end": "688190"
  },
  {
    "text": "since we're using kognito to issue that JWT token does everyone already know what a JSON web token is JWT probably",
    "start": "688190",
    "end": "695580"
  },
  {
    "text": "most people that's issuing this job token Cognito did the authentication and",
    "start": "695580",
    "end": "701010"
  },
  {
    "text": "then the authorization people people the authorization piece we're gonna do in",
    "start": "701010",
    "end": "706260"
  },
  {
    "text": "asp.net so there were different options for doing that and one option we we looked at was like we could use api",
    "start": "706260",
    "end": "712080"
  },
  {
    "text": "gateway which has integrated cogito authorization in it and you can you can",
    "start": "712080",
    "end": "717570"
  },
  {
    "text": "get pretty granular you can vary the authorization requirement by request type so I could have a get to my",
    "start": "717570",
    "end": "724340"
  },
  {
    "text": "products be allowed but maybe a post to my products if you're adding a new product maybe that would be restricted",
    "start": "724340",
    "end": "730320"
  },
  {
    "text": "on the other hand that means we'd have to put another layer kind of in and have another service involved and",
    "start": "730320",
    "end": "736110"
  },
  {
    "text": "then if I have two services that want to talk to each other and I want to proxy that dot tokens along it gets more",
    "start": "736110",
    "end": "741509"
  },
  {
    "text": "complicated so we're already using application load balancer and earlier",
    "start": "741509",
    "end": "746550"
  },
  {
    "text": "this year I don't know March or April or something the the application load balance our team launched a feature",
    "start": "746550",
    "end": "752939"
  },
  {
    "text": "which is integrated Cognito off for alb so then you don't have to have another",
    "start": "752939",
    "end": "758579"
  },
  {
    "text": "service it's already built into the alb and that might work for some people's architectures so that was July was it",
    "start": "758579",
    "end": "764250"
  },
  {
    "text": "July okay so anyway that that might work for some people but for us because I'm",
    "start": "764250",
    "end": "771389"
  },
  {
    "text": "a.net developer for a long time I basically I like using that authorized",
    "start": "771389",
    "end": "777000"
  },
  {
    "text": "attribute and specifying exactly which group that I want people to be in so that wasn't really granular enough for",
    "start": "777000",
    "end": "783149"
  },
  {
    "text": "us and the last one was you could do this just with a customer authorization",
    "start": "783149",
    "end": "788279"
  },
  {
    "text": "Handler in c-sharp and the pros are you can do everything that I want to do you can be as granular as you want I can use",
    "start": "788279",
    "end": "794730"
  },
  {
    "text": "different you know different groups and and put them on different methods or mix and match so it's very granular and then",
    "start": "794730",
    "end": "800880"
  },
  {
    "text": "the con might be that you need to write some code but if you're a developer maybe that's not really a con and it",
    "start": "800880",
    "end": "805980"
  },
  {
    "text": "turns out it's not a lot of code anyway this is the actual code for the authorization Handler that's pretty much",
    "start": "805980",
    "end": "811920"
  },
  {
    "text": "the whole class just it's just missing the namespace line at the top and all this code I just pushed it up to my",
    "start": "811920",
    "end": "818009"
  },
  {
    "text": "personal github repo just before this started so I'll give you the link to that the ant but this is literally the",
    "start": "818009",
    "end": "825180"
  },
  {
    "text": "whole class it all it does is it looks to see into your identities that get any",
    "start": "825180",
    "end": "830250"
  },
  {
    "text": "claims that were passed in from the job token which have already been populated by the middleware into this claims it's",
    "start": "830250",
    "end": "837870"
  },
  {
    "text": "just going to seed you have a claim of type cognitive groups is the value equal to whatever whatever group that I'm",
    "start": "837870",
    "end": "845670"
  },
  {
    "text": "looking for and if so you're in and it's not fail and then you get a denied",
    "start": "845670",
    "end": "851309"
  },
  {
    "text": "access denied and then you have to register that and start up the first part of this is all only if you have",
    "start": "851309",
    "end": "858930"
  },
  {
    "text": "specific roles that you want to have like most production apps you don't just have Kate it or not you probably have",
    "start": "858930",
    "end": "864779"
  },
  {
    "text": "people who are admins and people who were in some other role and then unauthenticated users so you",
    "start": "864779",
    "end": "870480"
  },
  {
    "text": "would only need to do the top part if you have different roles otherwise you just add that you still need to do",
    "start": "870480",
    "end": "876690"
  },
  {
    "text": "services dot add singleton and add that register that one kognito group authorization handler that we just",
    "start": "876690",
    "end": "882570"
  },
  {
    "text": "showed a second ago but other yeah so that's it",
    "start": "882570",
    "end": "887690"
  },
  {
    "text": "and then the for those of you who aren't dotnet developers you might not",
    "start": "887690",
    "end": "893070"
  },
  {
    "text": "recognize what this is but it's an asp.net MVC controller method and in",
    "start": "893070",
    "end": "898200"
  },
  {
    "text": "this case it's the it's a very basic demo of a post for a product and you'll",
    "start": "898200",
    "end": "904290"
  },
  {
    "text": "see the authorize has policy name in site admin group so that way if anybody's job token doesn't have the",
    "start": "904290",
    "end": "911310"
  },
  {
    "text": "cogito group site admin then or site admin group then they wouldn't be able to hit this method so it's very similar",
    "start": "911310",
    "end": "917490"
  },
  {
    "text": "to what I was doing eight years ago and asp.net framework app to be honest and",
    "start": "917490",
    "end": "924930"
  },
  {
    "text": "then distribute racing so obviously usually the first question people ask when they start building micro-services",
    "start": "924930",
    "end": "931440"
  },
  {
    "text": "how am I going to be able to track all this log and something or find an error when something happens and so we used",
    "start": "931440",
    "end": "937500"
  },
  {
    "text": "x-ray which i think is an excellent service it's distributed tracing so you",
    "start": "937500",
    "end": "942570"
  },
  {
    "text": "can either run it on the host or you can run it as a sidecar we're using a sidecar we're running",
    "start": "942570",
    "end": "948600"
  },
  {
    "text": "basically the x-ray daemon in a sidecar container the reason for that being is we don't actually have access to our",
    "start": "948600",
    "end": "954180"
  },
  {
    "text": "hosts because we chose to use Fargate so you know it's abstraction away from us",
    "start": "954180",
    "end": "959280"
  },
  {
    "text": "we don't have access to the house so we're just using a sidecar container to run the x-ray daemon in and it's really",
    "start": "959280",
    "end": "964470"
  },
  {
    "text": "cool because you can see basically your entire service and all the inter dependencies between the different",
    "start": "964470",
    "end": "971070"
  },
  {
    "text": "containers and how it's working and so we have a little picture for you I don't know if you'll be able to see it that well maybe but you can kind of see how",
    "start": "971070",
    "end": "978030"
  },
  {
    "text": "things are interacting with each other x-ray has a number of other features if you haven't checked it out before",
    "start": "978030",
    "end": "983640"
  },
  {
    "text": "besides this service map visualization obviously if there's an error you'll get the whole stack trace which is pretty",
    "start": "983640",
    "end": "989250"
  },
  {
    "text": "cool so if you haven't looked at x-ray I highly encourage you to check it out after this presentation but this is just",
    "start": "989250",
    "end": "995880"
  },
  {
    "text": "one of the many features you would get with x-rays distributed tracing and then logging logging is important",
    "start": "995880",
    "end": "1003480"
  },
  {
    "text": "you need to log everything and we want to consolidate our logs so we used cloud watch logs and our CI CD pipelines spits",
    "start": "1003480",
    "end": "1010889"
  },
  {
    "text": "out logs to cloud watch our container logs also go to cloud watch and then for",
    "start": "1010889",
    "end": "1015929"
  },
  {
    "text": "our application level logs we just installed that NuGet package AWS logger asp net core and then that up the",
    "start": "1015929",
    "end": "1023279"
  },
  {
    "text": "application will log and it will also spit out two cloud watch so we now have them all in one place and from there you know you can do a bunch of things in",
    "start": "1023279",
    "end": "1029459"
  },
  {
    "text": "cloud watch as you mentioned like analyze it create dashboards all kinds of fun stuff and the logs were really",
    "start": "1029459",
    "end": "1034678"
  },
  {
    "text": "important like even in developing this sample app like Microsoft at one point changed the name of the container for",
    "start": "1034679",
    "end": "1040949"
  },
  {
    "text": "asp net core and it's now like - SDK or runtime whatever when they went to two point one and and I had changed",
    "start": "1040949",
    "end": "1048329"
  },
  {
    "text": "something and anyway just just being able to have access to the logs to see what happened just makes it really quick",
    "start": "1048329",
    "end": "1053429"
  },
  {
    "text": "and you go oh okay because all the logs are going to one place does anyone not know what Fargate is already I just",
    "start": "1053429",
    "end": "1058830"
  },
  {
    "text": "thought about that that we've been talking about Fargate would anyone like me to tell what Fargate is yeah okay why",
    "start": "1058830",
    "end": "1064710"
  },
  {
    "text": "not so far gate is a feature of ECS which is a container orchestration",
    "start": "1064710",
    "end": "1070380"
  },
  {
    "text": "service where you don't have to worry about the docker host you don't even see it the underlying host is not even in",
    "start": "1070380",
    "end": "1077429"
  },
  {
    "text": "your VPC you just containers we automatically place your containers put",
    "start": "1077429",
    "end": "1083850"
  },
  {
    "text": "scale them up and down according whatever rules you set make them highly available across whatever availability",
    "start": "1083850",
    "end": "1089429"
  },
  {
    "text": "zones that you set em in and you're just paying per second or per minute or something like that you're paying for",
    "start": "1089429",
    "end": "1096000"
  },
  {
    "text": "how long the container actually runs so that the pricing is sort of similar tool and yeah so instead of paying host",
    "start": "1096000",
    "end": "1104010"
  },
  {
    "text": "you're just paying for that container to run it's just a lunch type so if you're",
    "start": "1104010",
    "end": "1109019"
  },
  {
    "text": "in ACS you can choose to either launch your containers on ec2 which means you're managing everything or you can",
    "start": "1109019",
    "end": "1115110"
  },
  {
    "text": "choose Fargate which means you're managing close to nothing with nothing we like to know as concerns one caveat",
    "start": "1115110",
    "end": "1121470"
  },
  {
    "text": "being that currently Fargate only supports Linux containers so that's dotnet core only not dotnet framework",
    "start": "1121470",
    "end": "1127380"
  },
  {
    "text": "but I assume everyone's probably if you're a.net developer you've seen the writing in the wall and you probably",
    "start": "1127380",
    "end": "1133110"
  },
  {
    "text": "know that you should doing new projects in dotnet core anyway really so I'll try to stop coughing",
    "start": "1133110",
    "end": "1139320"
  },
  {
    "text": "sorry the air here so dry so I'm gonna talk a little bit about session in asp.net core so with a microservices",
    "start": "1139320",
    "end": "1147300"
  },
  {
    "text": "application you might not even need to track session with session cookies I have one this audio I'll drink this one",
    "start": "1147300",
    "end": "1152640"
  },
  {
    "text": "too so if you bought micro-services app you might not need to track session",
    "start": "1152640",
    "end": "1158760"
  },
  {
    "text": "state especially if it's like a micro-services app that's running you know for a back-end stuff that's not",
    "start": "1158760",
    "end": "1164820"
  },
  {
    "text": "exposed to the Internet via as a website then you wouldn't need to worry about it anyway but it can be useful for tracking",
    "start": "1164820",
    "end": "1172650"
  },
  {
    "text": "on authenticated users if you've got people visiting your site and you want to be able to track them from request to",
    "start": "1172650",
    "end": "1178830"
  },
  {
    "text": "request that's really useful or if you're using the out-of-the-box asp.net",
    "start": "1178830",
    "end": "1183920"
  },
  {
    "text": "the local accounts checkbox and Visual Studio if you're creating it that way or",
    "start": "1183920",
    "end": "1189780"
  },
  {
    "text": "if you're using the open ID open ID connect authentication the authentication ticket is stored in",
    "start": "1189780",
    "end": "1195720"
  },
  {
    "text": "session cookies so it can be very useful to do this the cookies are encrypted",
    "start": "1195720",
    "end": "1200910"
  },
  {
    "text": "asp.net by default a speed net core the session middleware it encrypts all of",
    "start": "1200910",
    "end": "1206610"
  },
  {
    "text": "its session cookies so that they can't be hijacked or impersonated or forged or",
    "start": "1206610",
    "end": "1211980"
  },
  {
    "text": "whatever so it encrypts the cookie with encryption keys and when it starts up by default it if you haven't done any other",
    "start": "1211980",
    "end": "1218970"
  },
  {
    "text": "configuration those encryption keys are gonna be generated and stored locally which brings us to an issue where if you",
    "start": "1218970",
    "end": "1226890"
  },
  {
    "text": "have a distributed application like this I have a some micro service running in",
    "start": "1226890",
    "end": "1232890"
  },
  {
    "text": "container green whatever at the top you can see each container has its own keys",
    "start": "1232890",
    "end": "1237900"
  },
  {
    "text": "and so if the first container issues a cookie then the next request that",
    "start": "1237900",
    "end": "1243090"
  },
  {
    "text": "browser makes it's gonna send the cookie it might go to a completely different container either different a different micro service or even the same one",
    "start": "1243090",
    "end": "1249390"
  },
  {
    "text": "running in a different container but that other container doesn't have those encryption keys so it wouldn't be able to decrypt them and so it's gonna create",
    "start": "1249390",
    "end": "1255900"
  },
  {
    "text": "a new session cookie and so you just have this endless new sessions being created none of them would be shared",
    "start": "1255900",
    "end": "1261389"
  },
  {
    "text": "it would be broken as I discovered when I did this and lambda at one point like when dotnet core first came out for",
    "start": "1261389",
    "end": "1267299"
  },
  {
    "text": "lambda so the solution is to take those encryption keys and persist them somewhere in a shared storage place",
    "start": "1267299",
    "end": "1274159"
  },
  {
    "text": "you're gonna want to to do that you implement do an implementation of the I",
    "start": "1274159",
    "end": "1279299"
  },
  {
    "text": "XML repository interface and this is you could save them in dynamodb there's",
    "start": "1279299",
    "end": "1284969"
  },
  {
    "text": "other services you can save them in I found while actually I'll talk about this in a second yeah so some of the",
    "start": "1284969",
    "end": "1293909"
  },
  {
    "text": "services we have where you could potentially store these would be secrets manager parameter store DynamoDB s3",
    "start": "1293909",
    "end": "1301469"
  },
  {
    "text": "Nikki's gonna show you some code in here in a second I did want to say that for parameters store I just like 30 minutes",
    "start": "1301469",
    "end": "1308549"
  },
  {
    "text": "ago happened to bump into they got one of the developer India s de software",
    "start": "1308549",
    "end": "1314099"
  },
  {
    "text": "development engineers who puts out our new get packages and they've actually come out with virtually the same code",
    "start": "1314099",
    "end": "1320519"
  },
  {
    "text": "that we're going to show you it'll be available as a new get package eventually and it's already available in",
    "start": "1320519",
    "end": "1325649"
  },
  {
    "text": "the AWS github site so you don't have to take a picture this one and use it if you don't want we'll have the official",
    "start": "1325649",
    "end": "1330719"
  },
  {
    "text": "one that's coming but so this is our class that we used to store our cookie",
    "start": "1330719",
    "end": "1338249"
  },
  {
    "text": "encryption keys in parameter store initially we chose parameter store",
    "start": "1338249",
    "end": "1343309"
  },
  {
    "text": "because it's free and it's serverless and it's a feature of AWS Systems Manager but then we thought about it and",
    "start": "1343309",
    "end": "1350039"
  },
  {
    "text": "we were like well because it's free we don't know how much traffic we can actually be sending to it and so we actually changed our minds and decided",
    "start": "1350039",
    "end": "1356429"
  },
  {
    "text": "to store the cookie encryption keys in dynamo this class is not very complicated it really has two methods",
    "start": "1356429",
    "end": "1362369"
  },
  {
    "text": "get all elements and store element and the class that we're going to show you that we ended up going with it has the",
    "start": "1362369",
    "end": "1368369"
  },
  {
    "text": "same two methods the difference being it's actually calling the dynamo DB SDK",
    "start": "1368369",
    "end": "1375528"
  },
  {
    "text": "yeah so this is the dynamo DB version of",
    "start": "1376159",
    "end": "1382469"
  },
  {
    "text": "it so it looks almost the same same methods it's using the dynamo DB object",
    "start": "1382469",
    "end": "1388769"
  },
  {
    "text": "persistence model to actually store the cookie encryption keys and then the xml",
    "start": "1388769",
    "end": "1393929"
  },
  {
    "text": "class glass is just a simple pocos nothing complicated about it the attributes",
    "start": "1393929",
    "end": "1399210"
  },
  {
    "text": "there are you can see the little attributes on top of the class in the top of the properties if they're just",
    "start": "1399210",
    "end": "1406620"
  },
  {
    "text": "part of the object persistence model so they just tell the class where it's gonna store the keys so if you were say",
    "start": "1406620",
    "end": "1417260"
  },
  {
    "text": "migrating an existing asp.net application over to breaking up into",
    "start": "1417260",
    "end": "1423480"
  },
  {
    "text": "microservices moving it in if it's like every other asp.net app I have ever seen",
    "start": "1423480",
    "end": "1428910"
  },
  {
    "text": "probably the developers used a lot of sticking arbitrary data in session and then reading it out later",
    "start": "1428910",
    "end": "1435810"
  },
  {
    "text": "might not be the very best best practice but in a lot of cases for a quick",
    "start": "1435810",
    "end": "1441870"
  },
  {
    "text": "solution that's what developers do and again from micro-services you may not need to store anything in session",
    "start": "1441870",
    "end": "1447060"
  },
  {
    "text": "browsers have local storage that you can use to stick things in with javascript in the browser but if you do need things",
    "start": "1447060",
    "end": "1453420"
  },
  {
    "text": "to do need to store things in session and then have that be available to your all of your micro services out of the",
    "start": "1453420",
    "end": "1461100"
  },
  {
    "text": "box asp.net session stores it in process right if you if you were an asp.net",
    "start": "1461100",
    "end": "1468000"
  },
  {
    "text": "framework developer you probably know that you could go into web config and change it to from in process to like",
    "start": "1468000",
    "end": "1473790"
  },
  {
    "text": "sequel server or a state server with asp.net core the the default is also in",
    "start": "1473790",
    "end": "1479940"
  },
  {
    "text": "memory or in process and then if you want to put it somewhere else you have an implementation of I distributed cache",
    "start": "1479940",
    "end": "1485640"
  },
  {
    "text": "so Microsoft has provided I distributed cache implementations for a sequel",
    "start": "1485640",
    "end": "1491400"
  },
  {
    "text": "server surprise-surprise and Rytas both of those solutions would require you to have yet another the ec2 instance it",
    "start": "1491400",
    "end": "1498930"
  },
  {
    "text": "servers to match in sequel server in a patch and they're not that that's",
    "start": "1498930",
    "end": "1504180"
  },
  {
    "text": "infrastructure so we wanted the least amount of infrastructure or ideally no infrastructure and so we're already",
    "start": "1504180",
    "end": "1510540"
  },
  {
    "text": "using dynamodb to store other stuff including the encryption keys so we",
    "start": "1510540",
    "end": "1516120"
  },
  {
    "text": "thought that would be a perfect place to store session state and there is a new get package that we already have for asp.net",
    "start": "1516120",
    "end": "1522330"
  },
  {
    "text": "framework that will do this for you but for asp.net core we haven't published that yet so I just wrote my own",
    "start": "1522330",
    "end": "1528120"
  },
  {
    "text": "it was pretty simple to do rather than having to then if you're using sequel server for instance every time you get a",
    "start": "1528120",
    "end": "1534690"
  },
  {
    "text": "something out of session you're supposed to be checking whether it's expired if it is you have to make another call that a database delete it but DynamoDB has a",
    "start": "1534690",
    "end": "1542220"
  },
  {
    "text": "TTL feature so you can have things automatically expire and be removed without having to make an extra call so",
    "start": "1542220",
    "end": "1548460"
  },
  {
    "text": "at the end of all that the code was really simple this is one net in the code which is just the get async in",
    "start": "1548460",
    "end": "1555060"
  },
  {
    "text": "order to implement a distributed cache you have to implement both synchronous and asynchronous get set removing",
    "start": "1555060",
    "end": "1560880"
  },
  {
    "text": "refresh methods so we just did them all as async and then for the synchronous methods we just call the async and then",
    "start": "1560880",
    "end": "1566940"
  },
  {
    "text": "did a dot result or dot wait to make it synchronous and then the actual session",
    "start": "1566940",
    "end": "1574110"
  },
  {
    "text": "data is passed in from the session middleware as a byte array that you can see as the return type there is task a",
    "start": "1574110",
    "end": "1582630"
  },
  {
    "text": "fight because this is asynchronous but it's just returning a byte array which has a base64 encoded bag of your session",
    "start": "1582630",
    "end": "1589020"
  },
  {
    "text": "data which is just key value pairs right or if it's a if the value was some object it was serialize it'll be the",
    "start": "1589020",
    "end": "1594990"
  },
  {
    "text": "json serialized version of that so the actual dynamodb record just has",
    "start": "1594990",
    "end": "1600000"
  },
  {
    "text": "the session ID which is the primary key the session which is that byte array and then I have the expert I Paul so in",
    "start": "1600000",
    "end": "1607980"
  },
  {
    "text": "there and then when when it's supposed to expire so we were going to just show you a quick demo of the sample from and",
    "start": "1607980",
    "end": "1615270"
  },
  {
    "text": "it's not a production ready we have sample icons and so on see",
    "start": "1615270",
    "end": "1621710"
  },
  {
    "text": "and there's a giant mountain that looks familiar to anyone who has a Mac probably all right so I'm actually in a",
    "start": "1635909",
    "end": "1647429"
  },
  {
    "text": "Windows I have I have Windows 10 pink pad but just to prove that two people can collaborate we were each writing",
    "start": "1647429",
    "end": "1652889"
  },
  {
    "text": "code she's in a Mac I'm on Windows and it all just worked perfectly with dotnet core which is awesome so this is our",
    "start": "1652889",
    "end": "1659369"
  },
  {
    "text": "application this is a shopping cart there's two things in it by default just",
    "start": "1659369",
    "end": "1665249"
  },
  {
    "text": "because we threw two things in there to show that you can add things to the cart so I'm not logged in right now so I can",
    "start": "1665249",
    "end": "1671399"
  },
  {
    "text": "just add this deep ones to the cart sorry there's no user feedback I didn't get to that I just added",
    "start": "1671399",
    "end": "1677879"
  },
  {
    "text": "Amazon deep racer card because that looks really cool I really want one like",
    "start": "1677879",
    "end": "1685079"
  },
  {
    "text": "we really went really badly anyway so this is a I added something in my cart I",
    "start": "1685079",
    "end": "1690239"
  },
  {
    "text": "can remove something from my cart I'm all unauthenticated at the minute I can",
    "start": "1690239",
    "end": "1695369"
  },
  {
    "text": "log in now this is using AWS amplify to",
    "start": "1695369",
    "end": "1700859"
  },
  {
    "text": "actually communicate with Amazon Cognito and there was a very little code that I",
    "start": "1700859",
    "end": "1705959"
  },
  {
    "text": "saw she had to write to implement this because the amplify library does so much stuff for you so now I'm logged in I can",
    "start": "1705959",
    "end": "1714149"
  },
  {
    "text": "add things to my cart again I can do a bunch of things but basically it's just a it's a very simple app if I look at",
    "start": "1714149",
    "end": "1720719"
  },
  {
    "text": "the API so this is the products API so I have it up here I think I can hit the",
    "start": "1720719",
    "end": "1727799"
  },
  {
    "text": "cart one show you guys what's in my cart",
    "start": "1727799",
    "end": "1732889"
  },
  {
    "text": "so this is the default cart right so this is an unauthenticated user would be hitting this API you can hit this URL",
    "start": "1732889",
    "end": "1738959"
  },
  {
    "text": "from your phones right now and it would produce the same thing go for it we're",
    "start": "1738959",
    "end": "1744179"
  },
  {
    "text": "highly available hit refresh here once I just want to see if we'll pull the there",
    "start": "1744179",
    "end": "1749459"
  },
  {
    "text": "we go so oh yeah you can add errata what an admin yeah so she's an admin and she's got her email up there please",
    "start": "1749459",
    "end": "1756869"
  },
  {
    "text": "don't spam her or spam her thank you",
    "start": "1756869",
    "end": "1764089"
  },
  {
    "text": "nobody was gonna see that until you specifically called it out there Nick",
    "start": "1764089",
    "end": "1771029"
  },
  {
    "text": "appreciate that he's authenticated now so she can add a product I can add a product I can delete a product these",
    "start": "1771029",
    "end": "1776729"
  },
  {
    "text": "little Delete icon start up I don't know why that did you add a pop want me to add a product 30 minutes why should what",
    "start": "1776729",
    "end": "1784409"
  },
  {
    "text": "should we add maybe have a product day one had you already out of the deep race",
    "start": "1784409",
    "end": "1789839"
  },
  {
    "text": "car like Louis let's add Louis he looks expensive",
    "start": "1789839",
    "end": "1795799"
  },
  {
    "text": "how much is Luis $1 it's really sad for",
    "start": "1797059",
    "end": "1803489"
  },
  {
    "text": "Luis it would be expensive for my five-year-old there's only one of him so",
    "start": "1803489",
    "end": "1809609"
  },
  {
    "text": "yeah that's true we're gonna go out of stock really quickly actually it's just",
    "start": "1809609",
    "end": "1817679"
  },
  {
    "text": "that cool stuff is he cool stuff I saw that I think he's cool stuff is anybody",
    "start": "1817679",
    "end": "1824190"
  },
  {
    "text": "gonna buy him go in your phones really quick and bye Lyss okay there he is alright so that was a demo with the",
    "start": "1824190",
    "end": "1831239"
  },
  {
    "text": "front end and then we're gonna do another demo a little bit later after we tell you what we're gonna demo later",
    "start": "1831239",
    "end": "1837199"
  },
  {
    "text": "so for organizing the code for this sample project we just had you know",
    "start": "1837199",
    "end": "1842339"
  },
  {
    "text": "three microservices plus the front end we wanted to set it up in such a way that like any time you make a change to",
    "start": "1842339",
    "end": "1848849"
  },
  {
    "text": "the code I can just do git push hit commit git push and it would just",
    "start": "1848849",
    "end": "1854999"
  },
  {
    "text": "magically go deploy it and everywhere whether it's the front end or the containers whichever microservice it was",
    "start": "1854999",
    "end": "1861449"
  },
  {
    "text": "we were also trying to think of ways where you can organize the different repos or the different projects or the",
    "start": "1861449",
    "end": "1868559"
  },
  {
    "text": "micro services so that if you theoretically had a team that was working on one of them that was really",
    "start": "1868559",
    "end": "1874499"
  },
  {
    "text": "fast and the other micro service was maybe evolving at a slower velocity for whatever reason they could be deployed",
    "start": "1874499",
    "end": "1880799"
  },
  {
    "text": "independently just cuz I make a change to the cart service doesn't mean I want to have to redeploy the product service but at the same time I want to be able",
    "start": "1880799",
    "end": "1886919"
  },
  {
    "text": "to see them all in visual studio so like there's no single way to do that there's a lot of",
    "start": "1886919",
    "end": "1892220"
  },
  {
    "text": "ways and I'm open to hearing what other people have done we chose to have like a solution file that's in one repository",
    "start": "1892220",
    "end": "1898270"
  },
  {
    "text": "and then sorry each micro service is its own CS project in its own folder which",
    "start": "1898270",
    "end": "1906020"
  },
  {
    "text": "is its own git repository so that every one of those can be independently done and then if you had a real an actual",
    "start": "1906020",
    "end": "1912530"
  },
  {
    "text": "production app and I ran into this at a previous job where we had many many many micro services and so some teams were",
    "start": "1912530",
    "end": "1919640"
  },
  {
    "text": "only really needed to like the CDs eight and another team might need to see these six including two of that a so we had",
    "start": "1919640",
    "end": "1926809"
  },
  {
    "text": "like six different solution files that we kept in one repo and then I would",
    "start": "1926809",
    "end": "1932780"
  },
  {
    "text": "like if I was on the some particular team I would open up a particular solution file that would show me the six",
    "start": "1932780",
    "end": "1938150"
  },
  {
    "text": "micro services that I cared about so that was something I've done in the past so we kind of did similar here but we",
    "start": "1938150",
    "end": "1944090"
  },
  {
    "text": "only have one solution file there's only two of us wasn't really a big problem so the total number of git repos that we",
    "start": "1944090",
    "end": "1949429"
  },
  {
    "text": "have is the total number of micro services plus one for the solution file and any other things that we want to",
    "start": "1949429",
    "end": "1954740"
  },
  {
    "text": "dump in the solution folder like a copy of documentation or something like that so this is what it looks like in Visual",
    "start": "1954740",
    "end": "1964070"
  },
  {
    "text": "Studio we're oh can you guys see that how long did was that happening for a",
    "start": "1964070",
    "end": "1969890"
  },
  {
    "text": "while yeah sorry there we go now it makes a lot",
    "start": "1969890",
    "end": "1976039"
  },
  {
    "text": "more sense there's multiple ways to solve apologies that was my fault or yeah yeah it was",
    "start": "1976039",
    "end": "1983470"
  },
  {
    "text": "you could put everything in a single repoed you could do some kind of conditional build but there's more work",
    "start": "1983470",
    "end": "1989059"
  },
  {
    "text": "involved and I was trying to do the least amount of technical work as possible so in Visual Studio that's what",
    "start": "1989059",
    "end": "1996590"
  },
  {
    "text": "that looks like on the left for people over there sorry on the left you can see the visual",
    "start": "1996590",
    "end": "2002980"
  },
  {
    "text": "studio solution view where there's the cart service order service product service and then the front end the static website do that which she",
    "start": "2002980",
    "end": "2010299"
  },
  {
    "text": "mentioned is hosted in s3 the other three all go to containers they get containerized and pushed up and you",
    "start": "2010299",
    "end": "2016150"
  },
  {
    "text": "could actually publish these from Visual Studio with the AWS toolkit if you wanted to do it into a dev environment but for your production environment",
    "start": "2016150",
    "end": "2021850"
  },
  {
    "text": "obviously you don't want that then the actual folders I think I clicked into the solution folder so you can see it's basically",
    "start": "2021850",
    "end": "2028700"
  },
  {
    "text": "just a solution file and some other debt richest accumulated in there for the CV",
    "start": "2028700",
    "end": "2034850"
  },
  {
    "text": "pipeline we actually have four different pipelines each pipeline is triggered by",
    "start": "2034850",
    "end": "2041269"
  },
  {
    "text": "a change to the source code in that Associated repo so when we took these",
    "start": "2041269",
    "end": "2048099"
  },
  {
    "text": "you know nobody would have known that if you didn't just ask me that demo anyway so when we did the screenshots for this",
    "start": "2048099",
    "end": "2055220"
  },
  {
    "text": "originally we had the the static website being served Attica out of a container and then niki cleverly said why don't we",
    "start": "2055220",
    "end": "2061700"
  },
  {
    "text": "just stick it in s3 and so we did that and then they actually because AWS is so",
    "start": "2061700",
    "end": "2067700"
  },
  {
    "text": "often sort of iterating and improving stuff the reason that last one has a different styles because they've rolled",
    "start": "2067700",
    "end": "2073490"
  },
  {
    "text": "out a whole new UI for code pipeline so it looks kind of nicer now and that",
    "start": "2073490",
    "end": "2078829"
  },
  {
    "text": "one's obviously shorter because it has less distance to go there's no build it's just static files the the first",
    "start": "2078829",
    "end": "2085158"
  },
  {
    "text": "three you can see that the ones that go to containers there's a source so that gets triggered as soon as it detects",
    "start": "2085159",
    "end": "2090440"
  },
  {
    "text": "that the source code has changed in the git repository and we're using the internal AWS provided git repository",
    "start": "2090440",
    "end": "2096800"
  },
  {
    "text": "called code commit you could also use github that's already integrated into this you could just tell it to use",
    "start": "2096800",
    "end": "2102319"
  },
  {
    "text": "github instead of code commit then the next step for all three of those containerized microservices is the build",
    "start": "2102319",
    "end": "2108740"
  },
  {
    "text": "step that's using code build where it just creates a Linux container to run your build the docker file itself we're",
    "start": "2108740",
    "end": "2115970"
  },
  {
    "text": "using that multi-step build where it it does the build in one container and then it uses the just the runtime container",
    "start": "2115970",
    "end": "2122630"
  },
  {
    "text": "to publish into so you have a smaller container image and then the last step is the deploy there's a lot of different",
    "start": "2122630",
    "end": "2128420"
  },
  {
    "text": "mechanisms for deployment that code pipeline supports we chose the built in integrated deploy to ECS the ECS",
    "start": "2128420",
    "end": "2135380"
  },
  {
    "text": "deployment provider because it'll just deploy right to ECS including Fargate the other reason to also have a",
    "start": "2135380",
    "end": "2142250"
  },
  {
    "text": "multi-stage docker file is for security reasons you don't want to take your source code with you to your final",
    "start": "2142250",
    "end": "2147319"
  },
  {
    "text": "container that's true okay then Nicki's gonna do a quick demo",
    "start": "2147319",
    "end": "2152490"
  },
  {
    "text": "of making some arbitrary change all right add a controller method maybe it",
    "start": "2152490",
    "end": "2160619"
  },
  {
    "text": "should be like Louis I don't know since we're picking on Louis today all",
    "start": "2160619",
    "end": "2167609"
  },
  {
    "text": "right so I'm gonna open the products controller let's make this bigger",
    "start": "2167609",
    "end": "2172940"
  },
  {
    "text": "if only that Mac had a nice maximize button",
    "start": "2172940",
    "end": "2178400"
  },
  {
    "text": "I'm gonna ignore that all right I'm just gonna make a get call we're all cool",
    "start": "2182040",
    "end": "2190300"
  },
  {
    "text": "with that",
    "start": "2190300",
    "end": "2192570"
  },
  {
    "text": "how about that I'm gonna do something simple like say hi to all of you get hello message how",
    "start": "2196380",
    "end": "2207310"
  },
  {
    "text": "about that whoa",
    "start": "2207310",
    "end": "2215440"
  },
  {
    "text": "typing to you fast hello from reinvent if I can type the audience will check",
    "start": "2215440",
    "end": "2224410"
  },
  {
    "text": "your spelling I know they will all right it's pretty simple but it's for the",
    "start": "2224410",
    "end": "2231700"
  },
  {
    "text": "purposes of this demonstration all I have to do is actually do get ad commit",
    "start": "2231700",
    "end": "2238030"
  },
  {
    "text": "push and then it will be live and we'll actually be able to see it in the console going through the CI CD pipeline",
    "start": "2238030",
    "end": "2244600"
  },
  {
    "text": "and then in the browser when it's done note that best practice is not making a change and you'll be pushing it without",
    "start": "2244600",
    "end": "2250830"
  },
  {
    "text": "building and running it locally but this is so simple most of time you want me to test this no I'm fine I'm sure it'll",
    "start": "2250830",
    "end": "2258010"
  },
  {
    "text": "work I know it'll work because it's so simple I was doing is returning a message doing wetware static analysis on",
    "start": "2258010",
    "end": "2264340"
  },
  {
    "text": "it right now looks good",
    "start": "2264340",
    "end": "2267900"
  },
  {
    "text": "oh you know what I have to do I have to",
    "start": "2272770",
    "end": "2278430"
  },
  {
    "text": "delete my keychain for code commit because it saves my get credentials",
    "start": "2278430",
    "end": "2284610"
  },
  {
    "text": "something I really don't really like about go commit just why I use github I",
    "start": "2284610",
    "end": "2290140"
  },
  {
    "text": "never have to do that yeah as you did",
    "start": "2290140",
    "end": "2297730"
  },
  {
    "text": "you update this the price controller I",
    "start": "2297730",
    "end": "2303780"
  },
  {
    "text": "pull something down what did you do the",
    "start": "2303840",
    "end": "2310000"
  },
  {
    "text": "best all right let's try that one again",
    "start": "2310000",
    "end": "2318869"
  },
  {
    "text": "I'm just gonna look at you don't remember this would happen in the last like 24 hours I saw that I had to change",
    "start": "2318869",
    "end": "2324520"
  },
  {
    "text": "that it said I was to commits a head and so I could remember what I did so I just did a push great excellent sample app by",
    "start": "2324520",
    "end": "2333280"
  },
  {
    "text": "the way none of this would go into our production code good job Kurt okay so",
    "start": "2333280",
    "end": "2340540"
  },
  {
    "text": "she did your you'd the push right I did the push now by the time I log on",
    "start": "2340540",
    "end": "2346589"
  },
  {
    "text": "do not try to hack into my account please it's like please I have complete",
    "start": "2353359",
    "end": "2362760"
  },
  {
    "text": "access good pipeline okay finally cart",
    "start": "2362760",
    "end": "2367830"
  },
  {
    "text": "or which one product service there was that one so that's already so they missed a little spinning wheel and the source one because it took a while to",
    "start": "2367830",
    "end": "2374490"
  },
  {
    "text": "get that Mac keychain thing working but yeah okay you want to play Vinnie you had a bite of pulldown some crap the",
    "start": "2374490",
    "end": "2381240"
  },
  {
    "text": "code the you can see the code build is going just now the actual build kicked off that actually takes about five",
    "start": "2381240",
    "end": "2387359"
  },
  {
    "text": "minutes to kick off so I thought wow we have 20 minutes left actually that we",
    "start": "2387359",
    "end": "2393119"
  },
  {
    "text": "get we just can ask questions while this is going and well that's it I don't have",
    "start": "2393119",
    "end": "2398190"
  },
  {
    "text": "questions about what we sort of went through that was much slower when we tried doing this rehearsal over the phone at one point he lives in Portland",
    "start": "2398190",
    "end": "2406140"
  },
  {
    "text": "I live in Seattle so yeah let's do that hmm great great question the docker fall",
    "start": "2406140",
    "end": "2415260"
  },
  {
    "text": "is really close to being the the one that if you add dr. supporting Visual Studio I just genericized it a tiny bit",
    "start": "2415260",
    "end": "2422820"
  },
  {
    "text": "I think is this the one I generalized yeah so it doesn't have the project name",
    "start": "2422820",
    "end": "2428970"
  },
  {
    "text": "hard-coded in there it just says star dot CS proj and that way I could basically copy and paste the same one",
    "start": "2428970",
    "end": "2435090"
  },
  {
    "text": "into all of them and just change the entry point down at the end for the for the DLL but other than that this is the",
    "start": "2435090",
    "end": "2441869"
  },
  {
    "text": "same thing you would get if in Visual Studio you right clicked and said you know add item dr support or when you",
    "start": "2441869",
    "end": "2449400"
  },
  {
    "text": "create a new project if you add dr support and choose Linux containers it does some kind of magic though when you do it in Visual Studio and you add",
    "start": "2449400",
    "end": "2455790"
  },
  {
    "text": "docker support like runs right over me no it does out for me it's some kind of magic is happening when like because the",
    "start": "2455790",
    "end": "2462090"
  },
  {
    "text": "docker file doesn't look like this it looks totally different it looks almost the same s I'm saying but they have hard-coded the project name in which I",
    "start": "2462090",
    "end": "2468240"
  },
  {
    "text": "didn't like Allen I mean I've done it both ways at the bottom no I yeah something anyway",
    "start": "2468240",
    "end": "2476030"
  },
  {
    "text": "did that thing is the code pipeline probably not yet but it should be almost",
    "start": "2476030",
    "end": "2481200"
  },
  {
    "text": "done oh no about three three and a half more minutes I just saw an announcement like today",
    "start": "2481200",
    "end": "2487410"
  },
  {
    "text": "yesterday morning I guess that code pipeline is gonna be faster now so I was",
    "start": "2487410",
    "end": "2492450"
  },
  {
    "text": "kind of hoping that we would see that shrink down but I didn't I tested it today and it didn't seem to happen but another question",
    "start": "2492450",
    "end": "2500150"
  },
  {
    "text": "so that the question was are we using like get sub-modules or are we just lazily putting each micro-services",
    "start": "2513330",
    "end": "2521460"
  },
  {
    "text": "project into its own get repo and leaving it at that can anyone guess the answer to that definitely the second one",
    "start": "2521460",
    "end": "2527550"
  },
  {
    "text": "that's the second one it's been a long time since I worked with get sub modules it was actually at that same prior job I",
    "start": "2527550",
    "end": "2535380"
  },
  {
    "text": "had where I was on a lot I was a team leader for a large number of teams and that's the solution we used there was",
    "start": "2535380",
    "end": "2541380"
  },
  {
    "text": "get sub modules I didn't really want to go to the effort for this because we only had three projects and originally",
    "start": "2541380",
    "end": "2547890"
  },
  {
    "text": "yeah so we just have each one in its own repo but you could use sub modules to also like share classes or maybe our",
    "start": "2547890",
    "end": "2557070"
  },
  {
    "text": "share code or dll's maybe they'd have to think that through but that would be a perfectly good alternative way to do",
    "start": "2557070",
    "end": "2563010"
  },
  {
    "text": "this I think especially if you had a really big big architecture with like 50 microservices or something so I'm",
    "start": "2563010",
    "end": "2569430"
  },
  {
    "text": "displaying the build spec llamó so if you wanted to create this same project",
    "start": "2569430",
    "end": "2574860"
  },
  {
    "text": "in code build you would have docker file and you'd have this builds back to tell code build which commands to run before",
    "start": "2574860",
    "end": "2580860"
  },
  {
    "text": "the bill during the build after the build and if you scroll to the bottom you can see that it's if you see about",
    "start": "2580860",
    "end": "2588390"
  },
  {
    "text": "the fourth line from the bottom that's yellow it says print F name the entry",
    "start": "2588390",
    "end": "2594990"
  },
  {
    "text": "and then so there's two containers in there one is the container for the thing",
    "start": "2594990",
    "end": "2600450"
  },
  {
    "text": "that you're building and the other container is the x-ray daemon container which is we have instructions and the",
    "start": "2600450",
    "end": "2606990"
  },
  {
    "text": "documentation for how to like easily create that container it's just like a couple lines to pull the image down and",
    "start": "2606990",
    "end": "2612120"
  },
  {
    "text": "push it into your own container repository whether you're using docker hub or ECR which is our container",
    "start": "2612120",
    "end": "2619140"
  },
  {
    "text": "repository yep yes we do that's actually how he",
    "start": "2619140",
    "end": "2625980"
  },
  {
    "text": "generated that that graph thing that we saw before you want to see it in the consoles what you're asking",
    "start": "2625980",
    "end": "2631200"
  },
  {
    "text": "oh yeah sure so we configured x-ray",
    "start": "2631200",
    "end": "2637260"
  },
  {
    "text": "which was it just shows you now it's only gonna be whatever has happened in",
    "start": "2637260",
    "end": "2642270"
  },
  {
    "text": "the last you know however long the x-ray traces are going on here but see so",
    "start": "2642270",
    "end": "2651810"
  },
  {
    "text": "there it's showing some things the product the cart service will actually reach out to the product service if you",
    "start": "2651810",
    "end": "2657750"
  },
  {
    "text": "add something to your cart so that's probably just the get scan you instead of last five minutes can you do like",
    "start": "2657750",
    "end": "2663450"
  },
  {
    "text": "last hour or something yeah that's",
    "start": "2663450",
    "end": "2674220"
  },
  {
    "text": "interesting still doesn't look right oh oh oh it was just generating it slowly sorry in there so now you can see from",
    "start": "2674220",
    "end": "2682410"
  },
  {
    "text": "the last hour so when she added in something to her cart the cart service just talks to the product service had to",
    "start": "2682410",
    "end": "2687690"
  },
  {
    "text": "do that it's just an HTTP request to in",
    "start": "2687690",
    "end": "2693420"
  },
  {
    "text": "this case the the URL that it talks to is product dot AWS text summit and",
    "start": "2693420",
    "end": "2700380"
  },
  {
    "text": "that's because originally I was doing this presentation somewhere else edit excellent and so the the way that's",
    "start": "2700380",
    "end": "2706050"
  },
  {
    "text": "using service discovery so that's how one micro service in our architecture here can find another one if the they're",
    "start": "2706050",
    "end": "2712590"
  },
  {
    "text": "all sharing one namespace so for this application I created a namespace called tech summit",
    "start": "2712590",
    "end": "2717960"
  },
  {
    "text": "and then every micro service has a name so the shopping cart service is just",
    "start": "2717960",
    "end": "2724470"
  },
  {
    "text": "cart service dot text summit the product service is product service dot tech or I think just product tech someone actually",
    "start": "2724470",
    "end": "2731070"
  },
  {
    "text": "does you know a product service we can show you the code actually you want to pull up the cart controller I don't have",
    "start": "2731070",
    "end": "2738060"
  },
  {
    "text": "that there's no the way that one micro service talks to the other one is via HTTP to a getter poster put request but",
    "start": "2738060",
    "end": "2746670"
  },
  {
    "text": "the way that that works is route 53 which is our DNS resolution service for",
    "start": "2746670",
    "end": "2752190"
  },
  {
    "text": "your V PC it service discovery will automatically create a private hosted",
    "start": "2752190",
    "end": "2757740"
  },
  {
    "text": "zone with the base domain name of of the namespace that I said like in this case",
    "start": "2757740",
    "end": "2762900"
  },
  {
    "text": "its text summit and then it will create route 53 DNS records in this case I chose a records for each service that",
    "start": "2762900",
    "end": "2771120"
  },
  {
    "text": "gets created like for the product service it'll create product dot text summit and then any time any other",
    "start": "2771120",
    "end": "2777980"
  },
  {
    "text": "service wants to talk to product dot text summit the first thing that actually happens under the hood is a DNS resolution request just like you were",
    "start": "2777980",
    "end": "2784500"
  },
  {
    "text": "doing it from our browser you know where is public text summit and then route 53 knows where all of the product excellent",
    "start": "2784500",
    "end": "2791820"
  },
  {
    "text": "containers are so it's like you maybe in this case two IP addresses if you had 50",
    "start": "2791820",
    "end": "2797160"
  },
  {
    "text": "copies of this container it would have 50 and route 53 well then round-robin the answers back to spread those",
    "start": "2797160",
    "end": "2803040"
  },
  {
    "text": "requests out among all your different containers there's also health checks so if one of your containers goes belly-up",
    "start": "2803040",
    "end": "2808770"
  },
  {
    "text": "and dies and a new one gets spawned a different IP address route 53 will stop",
    "start": "2808770",
    "end": "2813960"
  },
  {
    "text": "giving resolution to the first IP address and instead some of the requests will now resolve to the new container",
    "start": "2813960",
    "end": "2819480"
  },
  {
    "text": "that got put into service behind a load balancer I'm sorry actually as soon as the container it's registered doesn't have to be behind a load balancer so",
    "start": "2819480",
    "end": "2826050"
  },
  {
    "text": "that's how these and if you actually went into your V PC and a say V PC where your containers are running and just say",
    "start": "2826050",
    "end": "2832860"
  },
  {
    "text": "you launched an ec2 instance running Windows 2016 or something and you remote",
    "start": "2832860",
    "end": "2838050"
  },
  {
    "text": "desktop onto that thing and actually did this just to prove it to myself when service discovery launched and open up a",
    "start": "2838050",
    "end": "2843870"
  },
  {
    "text": "browser and I type in my browser HTTP colon slash slash product dot text",
    "start": "2843870",
    "end": "2850110"
  },
  {
    "text": "summit slash API slash products I will get the return from my micro service so",
    "start": "2850110",
    "end": "2856140"
  },
  {
    "text": "it's actually using DNS under the hood to do service discovery there's a lot of different ways you could do service discovery there's third-party and key",
    "start": "2856140",
    "end": "2862380"
  },
  {
    "text": "open source products to do it this is a really easy one and it's integrated with UCS so every time ECS places a new copy",
    "start": "2862380",
    "end": "2868920"
  },
  {
    "text": "of that can it tells route 53 add this IP address to the list of them for this service and",
    "start": "2868920",
    "end": "2874890"
  },
  {
    "text": "then route 53 will round-robin them did you already show that code I did",
    "start": "2874890",
    "end": "2880380"
  },
  {
    "text": "wasn't even picked I pulled it up on github I don't have it locally because this is my new machine okay so if we",
    "start": "2880380",
    "end": "2887609"
  },
  {
    "text": "scroll to the very bottom you drive yeah",
    "start": "2887609",
    "end": "2892818"
  },
  {
    "text": "we see this is the method get product get product get product and product service async here's how you have to",
    "start": "2898130",
    "end": "2906450"
  },
  {
    "text": "instrument it if you want to get the X ray tracing for those external HTTP requests and it literally just makes a",
    "start": "2906450",
    "end": "2912750"
  },
  {
    "text": "call to product oops I cannot use a Mac apparently to product dot txt summit and",
    "start": "2912750",
    "end": "2920130"
  },
  {
    "text": "then it adds the path slash API products and then whatever Product ID that you're",
    "start": "2920130",
    "end": "2925619"
  },
  {
    "text": "you know trying to add your current and then it returns I'm actually logging this success fetching the product from",
    "start": "2925619",
    "end": "2932369"
  },
  {
    "text": "the product service and then I return that product and I just checked whether the stock is enough and we're never",
    "start": "2932369",
    "end": "2937769"
  },
  {
    "text": "actually decrementing the stock right now but so it never goes down but but it makes inter service calls between",
    "start": "2937769",
    "end": "2944700"
  },
  {
    "text": "microservices really easy if you have a nice to service discovery mechanism like that anybody else have questions or",
    "start": "2944700",
    "end": "2953839"
  },
  {
    "text": "suggestions or things like that we'd like to hear what you guys do is how about in the back first",
    "start": "2953839",
    "end": "2960769"
  },
  {
    "text": "sure so the right I get it and that's a common question so the question was",
    "start": "2970540",
    "end": "2976960"
  },
  {
    "text": "choosing between like far gate or ECS with ec2 launch type in which case you",
    "start": "2976960",
    "end": "2983420"
  },
  {
    "text": "have to choose the ec2 instance type and setup scaling for the underlying the host the docker hosts versus Fargate",
    "start": "2983420",
    "end": "2990350"
  },
  {
    "text": "where you just say here's my container please go run it and there's no infrastructure is there a case where you would still want to use CCS with",
    "start": "2990350",
    "end": "2996860"
  },
  {
    "text": "instances and the answer is yes obviously if you're running asp.net framework when you need a Windows",
    "start": "2996860",
    "end": "3002200"
  },
  {
    "text": "container you have to use the ec2 instance type at this time our gate doesn't currently support that but even",
    "start": "3002200",
    "end": "3007600"
  },
  {
    "text": "then if your company if your dev team maybe has some particular instance type",
    "start": "3007600",
    "end": "3013990"
  },
  {
    "text": "that you want to use for some reason maybe something that has a GPU or maybe you you want to have more control over",
    "start": "3013990",
    "end": "3020410"
  },
  {
    "text": "it maybe you want to run an agent on that host maybe you're using new relic and you want to have some new relic",
    "start": "3020410",
    "end": "3026110"
  },
  {
    "text": "agent running on the docker host it's collecting data if using Fargate you don't have access to the host you can't",
    "start": "3026110",
    "end": "3032080"
  },
  {
    "text": "see it it's not in your V PC were the ones managing that so if there is some kind of a g20 run you would have to do",
    "start": "3032080",
    "end": "3038410"
  },
  {
    "text": "that you also get more control over how containers are placed on the underlying host if you're doing that yourself",
    "start": "3038410",
    "end": "3044590"
  },
  {
    "text": "you could say try different bin packing strategies there's a scheduler open",
    "start": "3044590",
    "end": "3049720"
  },
  {
    "text": "source scheduling container scheduler library that we put out called blocks so you could use that to do very",
    "start": "3049720",
    "end": "3055840"
  },
  {
    "text": "sophisticated scheduling mechanisms of how I want the containers to be placed I want to try putting three of them on",
    "start": "3055840",
    "end": "3062710"
  },
  {
    "text": "this one but always one of this container on every host baby so there are instances if you want that extra",
    "start": "3062710",
    "end": "3068920"
  },
  {
    "text": "control you would do that as far as cost that's that you'd have to kind of you'd have to look at your particular use case",
    "start": "3068920",
    "end": "3075550"
  },
  {
    "text": "and figure out is paying for it by the second you with the the with Fargate you",
    "start": "3075550",
    "end": "3081370"
  },
  {
    "text": "pay by the second and the price is based on two indices one is the virtual CPUs",
    "start": "3081370",
    "end": "3087310"
  },
  {
    "text": "so this the amount of compute power and the other is based on memory in gigabytes and they don't scale it's not",
    "start": "3087310",
    "end": "3093970"
  },
  {
    "text": "like lambda where they're a lot and if you pick one level you're gonna get that much CPU and that much memory with each",
    "start": "3093970",
    "end": "3099430"
  },
  {
    "text": "CPU choice that you make with Farag you get a range of maybe four to six different memory choices you could have",
    "start": "3099430",
    "end": "3105920"
  },
  {
    "text": "so you you really have to look at I could potentially save money by doing it",
    "start": "3105920",
    "end": "3113540"
  },
  {
    "text": "on ec2 if I was very good at packing my containers on there on the other hand you've just bought off on managing ec2",
    "start": "3113540",
    "end": "3120350"
  },
  {
    "text": "instances and setting up your own scaling of the hosts themselves and we don't patch those instances for you so",
    "start": "3120350",
    "end": "3126740"
  },
  {
    "text": "if that docker host there's a security patch or just some update that needs to",
    "start": "3126740",
    "end": "3131810"
  },
  {
    "text": "be applied that's then on you so you're gonna eat that administrative burden does that make sense all right it worked",
    "start": "3131810",
    "end": "3139210"
  },
  {
    "text": "yeah all you actually pulled it up so this is the hello from Riemann so it",
    "start": "3139210",
    "end": "3146030"
  },
  {
    "text": "deployed we didn't have to do anything other than a get push and by we I mean her I get push and then it all just",
    "start": "3146030",
    "end": "3152080"
  },
  {
    "text": "automatically went up now in a real code pipeline ours has three steps source build deploy does anyone have an idea of",
    "start": "3152080",
    "end": "3160730"
  },
  {
    "text": "what might be missing in there for a production at production alcohol test right so you'd probably want to have",
    "start": "3160730",
    "end": "3166030"
  },
  {
    "text": "tests running a test step and code pipeline fully supports that but one of",
    "start": "3166030",
    "end": "3171350"
  },
  {
    "text": "the great things about being an SI is none of my code gets tested so we didn't actually do that but I used to work in",
    "start": "3171350",
    "end": "3179930"
  },
  {
    "text": "production shops where lots of unit tests get written and so you could run all your tests in containers as well you",
    "start": "3179930",
    "end": "3186530"
  },
  {
    "text": "could run chromedriver if you really want to test your front end and so on in this case we were the testers did you",
    "start": "3186530",
    "end": "3193700"
  },
  {
    "text": "have a question sure so actually code",
    "start": "3193700",
    "end": "3201380"
  },
  {
    "text": "deployed just rolled out today support for Bluegreen deployments to ECS so you",
    "start": "3201380",
    "end": "3208040"
  },
  {
    "text": "could use we use the ECS provider in code pipeline directly instead of using",
    "start": "3208040",
    "end": "3214460"
  },
  {
    "text": "that for deployment we could have used code deploy for that last step and code deploy can actually do Bluegreen",
    "start": "3214460",
    "end": "3220010"
  },
  {
    "text": "deployments it will yeah yeah there you go",
    "start": "3220010",
    "end": "3224890"
  },
  {
    "text": "yes so this just came out today so that was yesterday yesterday sorry I wish it",
    "start": "3225880",
    "end": "3231140"
  },
  {
    "text": "had been a little earlier for you yeah there's been so many announcements this week just trying to keep up with",
    "start": "3231140",
    "end": "3237680"
  },
  {
    "text": "everything and make sure that we were not gonna be obsoleted so I know I took we talked about parameters store and how",
    "start": "3237680",
    "end": "3243530"
  },
  {
    "text": "there's a new get package coming out for that that allows you to store that I XML repository store the encryption keys for",
    "start": "3243530",
    "end": "3250100"
  },
  {
    "text": "your session you won't have to like copy and paste code from my github repo you could just use that NuGet package when",
    "start": "3250100",
    "end": "3256730"
  },
  {
    "text": "it comes out and in the interim the official AWS git repo I'm sure his codes",
    "start": "3256730",
    "end": "3262130"
  },
  {
    "text": "been tested more than mine because mine was not mine was me testing it by sticking things in sessions date and",
    "start": "3262130",
    "end": "3268610"
  },
  {
    "text": "making sure it worked can you go to dynamodb really quick I kind of thought I'd show something we still have five minutes and the the guy",
    "start": "3268610",
    "end": "3276710"
  },
  {
    "text": "who wrote the code his name's norm Johansen he's giving a session that",
    "start": "3276710",
    "end": "3281810"
  },
  {
    "text": "started 10 minutes ago sorry just down the hall here where you could catch the last 45 minutes of his",
    "start": "3281810",
    "end": "3288500"
  },
  {
    "text": "when our session is over hopefully not everybody gets up and runs right now no okay so he's gonna be",
    "start": "3288500",
    "end": "3294740"
  },
  {
    "text": "demonstrating the AWS toolkit and talking about deploying things from",
    "start": "3294740",
    "end": "3299870"
  },
  {
    "text": "within Visual Studio and some other enhancements that are coming out and he's gonna be demonstrating that so if",
    "start": "3299870",
    "end": "3305300"
  },
  {
    "text": "you get a dynamodb this is our anybody be tables if we look at the tech summit",
    "start": "3305300",
    "end": "3311450"
  },
  {
    "text": "session state that's actually hate you decide okay if we go to the items so",
    "start": "3311450",
    "end": "3321470"
  },
  {
    "text": "we've had multiple different people apparently hitting this somehow so here's all of their different session",
    "start": "3321470",
    "end": "3327800"
  },
  {
    "text": "cookies that's partly because I've done it from I've done a different laptops norm Johansen hit it she's hit it so",
    "start": "3327800",
    "end": "3333230"
  },
  {
    "text": "from three different laptops right and then as these things get expired they will come out I'm now I'm wondering if",
    "start": "3333230",
    "end": "3338600"
  },
  {
    "text": "the audience has been hitting it because there's a lot of them in here so and then the the actual encryption keys are",
    "start": "3338600",
    "end": "3344780"
  },
  {
    "text": "stored here so over time those will get X but the keys will expire and then the",
    "start": "3344780",
    "end": "3349850"
  },
  {
    "text": "asp debt not quote the asp.net course session middleware and will generate new encryption keys so over time we've had",
    "start": "3349850",
    "end": "3357020"
  },
  {
    "text": "two of them did not encrypt the actual keys for any production environment you should",
    "start": "3357020",
    "end": "3362579"
  },
  {
    "text": "encrypt your encryption keys probably don't have to explain why that would be really important to not leave your",
    "start": "3362579",
    "end": "3369450"
  },
  {
    "text": "encryption keys in plaintext I only did it here in case I had time to like copy and paste that into JSON and show you",
    "start": "3369450",
    "end": "3375210"
  },
  {
    "text": "how the actual key data is in there and that's all just being passed through that that the I XML repository",
    "start": "3375210",
    "end": "3382260"
  },
  {
    "text": "implementation I did doesn't actually do anything those sticks it as a string into the into the database um we have",
    "start": "3382260",
    "end": "3391140"
  },
  {
    "text": "three minutes left did anybody have yes",
    "start": "3391140",
    "end": "3394880"
  },
  {
    "text": "yes well I wouldn't have to do it yourself if you don't want both DynamoDB and parameter store can you can specify",
    "start": "3397640",
    "end": "3404730"
  },
  {
    "text": "that you want it stored encrypted in fact DynamoDB is now gonna be encrypted by default I believe in parameter story",
    "start": "3404730",
    "end": "3411089"
  },
  {
    "text": "it already is right I wasn't sure if it was released or not so and parameter",
    "start": "3411089",
    "end": "3419190"
  },
  {
    "text": "store you can choose to use instead of as a string you can choose to store it as secure string and choose which KMS",
    "start": "3419190",
    "end": "3426150"
  },
  {
    "text": "key that you want to use so I'm going to flip back over to show the link to show",
    "start": "3426150",
    "end": "3433859"
  },
  {
    "text": "the link to the that's the github Rika repo it I put it all in one repo because",
    "start": "3433859",
    "end": "3440940"
  },
  {
    "text": "I didn't want to have four different repos copied up so if you want you can pull code down from there it's not",
    "start": "3440940",
    "end": "3446540"
  },
  {
    "text": "production code this is just sample demo code that you can look at and play with please don't like deploy this to a",
    "start": "3446540",
    "end": "3454200"
  },
  {
    "text": "production app yeah I know and I also",
    "start": "3454200",
    "end": "3459329"
  },
  {
    "text": "put my exported the copy how far you get the slides yeah so these slides will end up on SlideShare I in a few days and",
    "start": "3459329",
    "end": "3465630"
  },
  {
    "text": "then there's a PDF copy oh look you already put my email on this slide oh yeah so both of our emails are there so",
    "start": "3465630",
    "end": "3472380"
  },
  {
    "text": "and somebody's Twitter handle so that's good Niki hosts a twitch show which is all",
    "start": "3472380",
    "end": "3479970"
  },
  {
    "text": "focused on developer stuff actually a whole bunch of twit shows this whole week she's been live streaming on Twitch",
    "start": "3479970",
    "end": "3485819"
  },
  {
    "text": "for those who don't know twitch is a part of Amazon also part of AWS or Amazon EWN whoa AWS bot twitch yeah AWS pop",
    "start": "3485819",
    "end": "3494310"
  },
  {
    "text": "twitch at some point is what happened so yes right you should be able to automate",
    "start": "3494310",
    "end": "3509850"
  },
  {
    "text": "all with confirmation there's also a publicly accessible tool that we",
    "start": "3509850",
    "end": "3515370"
  },
  {
    "text": "launched sometime this summer called the cvk the cloud development kit that was June about that one you already did oh",
    "start": "3515370",
    "end": "3521520"
  },
  {
    "text": "yeah I sat next to him on the bus oh you told him personally I thought you told the whole crowd no I didn't hear it him",
    "start": "3521520",
    "end": "3526950"
  },
  {
    "text": "personally so there's one minute to the sessions officially over I have time after that but you could use a CD k and",
    "start": "3526950",
    "end": "3533010"
  },
  {
    "text": "write it in C sharp and actually create your snaps that way and it will generate all the CloudFormation unless your",
    "start": "3533010",
    "end": "3538890"
  },
  {
    "text": "favorite thing is writing incredibly complicated in JSON or yeah more code as",
    "start": "3538890",
    "end": "3544080"
  },
  {
    "text": "templates if that is your favorite thing no congratulations was there a hand in the back yes how do",
    "start": "3544080",
    "end": "3559200"
  },
  {
    "text": "you use comm you know for what for authentication I mean how is it working what specifically would you like to see",
    "start": "3559200",
    "end": "3565590"
  },
  {
    "text": "oh how I interact with the Cognito okay",
    "start": "3565590",
    "end": "3573210"
  },
  {
    "text": "well that's actually you mean amplify like create a user pool or the JavaScript that talks to it well",
    "start": "3573210",
    "end": "3579570"
  },
  {
    "text": "actually I could just open this okay she's leveraging a JavaScript library that comes with amplify if you haven't",
    "start": "3579570",
    "end": "3585570"
  },
  {
    "text": "been to the amp AWS amplify website go to Google or Bing I guess and type AWS",
    "start": "3585570",
    "end": "3591810"
  },
  {
    "text": "so amplify is three things it's a CLI it's a JavaScript library and",
    "start": "3591810",
    "end": "3596970"
  },
  {
    "text": "it's pre-built UI components so you can use any number of the three things for",
    "start": "3596970",
    "end": "3602550"
  },
  {
    "text": "this application I'm using the CLI and the JavaScript libraries to hit kognito so I'll pull it up and when we",
    "start": "3602550",
    "end": "3610110"
  },
  {
    "text": "originally did it AWS amplify wasn't yet out and so we were using the old Cognito JavaScript",
    "start": "3610110",
    "end": "3616140"
  },
  {
    "text": "SDKs and then copying and pasting code from the documentation and then testing it until it worked",
    "start": "3616140",
    "end": "3621480"
  },
  {
    "text": "and then when amplify came out she did all that out and in like ten minutes got",
    "start": "3621480",
    "end": "3626519"
  },
  {
    "text": "it working with amplifies so that was definitely yeah you can get it working with amplify like really fast like I literally he's not kidding like it was",
    "start": "3626519",
    "end": "3633089"
  },
  {
    "text": "ten minutes and it was up and running I make sure I said thank you before everybody's gone thank you for coming to",
    "start": "3633089",
    "end": "3639420"
  },
  {
    "text": "the session today we really appreciate it [Applause]",
    "start": "3639420",
    "end": "3645840"
  }
]