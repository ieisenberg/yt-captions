[
  {
    "start": "0",
    "end": "50000"
  },
  {
    "text": "hello everyone welcome back to a diverse well expected on Twitch we're going to",
    "start": "110",
    "end": "7140"
  },
  {
    "text": "share a lot of best practices and tools and a lot of code of course on how to",
    "start": "7140",
    "end": "13380"
  },
  {
    "text": "build architected applications and if you are new to the series we are",
    "start": "13380",
    "end": "20060"
  },
  {
    "text": "covering every pillar and every best practice today we are going to talk",
    "start": "20060",
    "end": "26070"
  },
  {
    "text": "about reliability and if you are new to the framework I highly recommend you",
    "start": "26070",
    "end": "32189"
  },
  {
    "text": "take a look at the videos tab and check out the previous episodes here what we",
    "start": "32189",
    "end": "38250"
  },
  {
    "text": "are doing basically is going through the best practices in the SQL architect and",
    "start": "38250",
    "end": "44579"
  },
  {
    "text": "white paper and here is the white paper linkit on website and as you can see it",
    "start": "44579",
    "end": "51690"
  },
  {
    "start": "50000",
    "end": "145000"
  },
  {
    "text": "is divided we mostly in this questions such as how are you managing service",
    "start": "51690",
    "end": "59670"
  },
  {
    "text": "limits or how are you planning your network topology and those are the",
    "start": "59670",
    "end": "65280"
  },
  {
    "text": "questions we've been through in the previous episodes today we're talking about how does our system adapt changes",
    "start": "65280",
    "end": "73650"
  },
  {
    "text": "in demand and this is a very important part of the talk architectures and a",
    "start": "73650",
    "end": "81119"
  },
  {
    "text": "huge motivation for a lot of people to go into the cloud and there are many",
    "start": "81119",
    "end": "87000"
  },
  {
    "text": "answers for this your system will adapt to changes in demand differently if it",
    "start": "87000",
    "end": "92820"
  },
  {
    "text": "is based on ec2 instances or lambda functions or SES containers so in the",
    "start": "92820",
    "end": "101460"
  },
  {
    "text": "next episodes we're starting to dive deeper into this and actually building a",
    "start": "101460",
    "end": "108689"
  },
  {
    "text": "sample app and starting doing some initial load testing and today it's",
    "start": "108689",
    "end": "114299"
  },
  {
    "text": "going to be with ec2 instances and the next one we are going to be doing other",
    "start": "114299",
    "end": "122460"
  },
  {
    "text": "other types of infrastructure events so let's jump right into the into the",
    "start": "122460",
    "end": "132370"
  },
  {
    "text": "datian and see what kind of app what kind of infrastructure we're testing",
    "start": "132370",
    "end": "139480"
  },
  {
    "text": "today so I'll go to to my code editor and as we've been talking a very",
    "start": "139480",
    "end": "147010"
  },
  {
    "start": "145000",
    "end": "260000"
  },
  {
    "text": "important part of well architected applications is being able to do stuff",
    "start": "147010",
    "end": "155319"
  },
  {
    "text": "with code instead of just doing manual operations so all that we're doing this",
    "start": "155319",
    "end": "163180"
  },
  {
    "text": "series is based on code that you can edit you can change you can adapt use as",
    "start": "163180",
    "end": "171790"
  },
  {
    "text": "you wish so here in the in this link",
    "start": "171790",
    "end": "179650"
  },
  {
    "text": "that I just shared with you guys here on this gist you will find this app called",
    "start": "179650",
    "end": "188280"
  },
  {
    "text": "oh it's not it's sitting ducks it's here sample code okay so on this sitting",
    "start": "188280",
    "end": "197200"
  },
  {
    "text": "ducks app you will find everything that we need for today so as we are just",
    "start": "197200",
    "end": "205269"
  },
  {
    "text": "starting out in start off instead of picking a full-blown app I started to",
    "start": "205269",
    "end": "211000"
  },
  {
    "text": "create some examples and put in a them into this ripple so all the code again",
    "start": "211000",
    "end": "217419"
  },
  {
    "text": "that we're going to work today and in this upcoming episodes in these questions or in this ripple I call them",
    "start": "217419",
    "end": "225099"
  },
  {
    "text": "sitting ducks because there will be our target practice for shooting some",
    "start": "225099",
    "end": "230379"
  },
  {
    "text": "requests so let's start by creating our",
    "start": "230379",
    "end": "236379"
  },
  {
    "text": "infrastructure and I believe I have it already here in the confirmation in the",
    "start": "236379",
    "end": "244239"
  },
  {
    "text": "confirmation management console and just to prove that we are not doing it",
    "start": "244239",
    "end": "250959"
  },
  {
    "text": "pre-built I will just delete everything and let's start everything from zero so",
    "start": "250959",
    "end": "260400"
  },
  {
    "text": "the first thing I'm going to create is an Astra bucket just to store my application files my",
    "start": "260400",
    "end": "269030"
  },
  {
    "text": "deployment packages my confirmation templates everything that we need to store",
    "start": "269030",
    "end": "274700"
  },
  {
    "text": "somewhere if we don't have a specific reason not to we should probably take a",
    "start": "274700",
    "end": "281540"
  },
  {
    "text": "look at s tree and store it in s3 so here in this first confirmation template",
    "start": "281540",
    "end": "287240"
  },
  {
    "text": "we built this a very similar template a",
    "start": "287240",
    "end": "292250"
  },
  {
    "text": "little while ago in the previous episode but now it's got a few extra",
    "start": "292250",
    "end": "299800"
  },
  {
    "text": "improvements let's go through it in a bit so in the parameters I have a very",
    "start": "299800",
    "end": "305930"
  },
  {
    "text": "interesting parameter called gallery ID and this is something that I invented",
    "start": "305930",
    "end": "314050"
  },
  {
    "text": "it's the name of my environment everybody in the world calls this",
    "start": "314050",
    "end": "320139"
  },
  {
    "text": "environment so why did I call it a gallery because elastic Beanstalk has",
    "start": "320139",
    "end": "325400"
  },
  {
    "text": "this concept of environments and I don't want to mix Beanstalk environments to",
    "start": "325400",
    "end": "331610"
  },
  {
    "text": "other words and saying disambiguating this of the time so by a gallery I mean",
    "start": "331610",
    "end": "338300"
  },
  {
    "text": "an environment a collection of resources group it together for a specific purpose",
    "start": "338300",
    "end": "343700"
  },
  {
    "text": "such as production Devon test or OMA LOD or whatever you guys are building so you",
    "start": "343700",
    "end": "353060"
  },
  {
    "text": "know to create self to separate the stacks we're going to use the gallery ID",
    "start": "353060",
    "end": "360470"
  },
  {
    "text": "so this could be literally anything by default it's Devon test we're going to",
    "start": "360470",
    "end": "366169"
  },
  {
    "text": "call this something else then we have resources and here it's just a very",
    "start": "366169",
    "end": "371750"
  },
  {
    "text": "simple in the Blas s3 bucket name and an",
    "start": "371750",
    "end": "377440"
  },
  {
    "text": "artifact bucket logically in my confirmation template we have something",
    "start": "377440",
    "end": "383930"
  },
  {
    "text": "special here called an export and this is going to be used for something called",
    "start": "383930",
    "end": "390500"
  },
  {
    "text": "cross stack references meaning that this name the name of my gallery ID reference",
    "start": "390500",
    "end": "398600"
  },
  {
    "text": "by the parameters so in this example it will be Devin test will be exported so",
    "start": "398600",
    "end": "405230"
  },
  {
    "text": "that other confirmation templates can import to this by name so this is just",
    "start": "405230",
    "end": "412940"
  },
  {
    "text": "like environment variable for confirmation if you think so just a value that you can set and share in your",
    "start": "412940",
    "end": "421370"
  },
  {
    "text": "confirmation environment so that other specs can can use this value so let's",
    "start": "421370",
    "end": "428480"
  },
  {
    "text": "create this from from scratch and to make it easy for you guys to create this",
    "start": "428480",
    "end": "436190"
  },
  {
    "text": "cheer I have some shell scripts here so let's see what those scripts do and they",
    "start": "436190",
    "end": "444380"
  },
  {
    "text": "are all in a very similar format so I'm going to add set - II so that any failed",
    "start": "444380",
    "end": "453080"
  },
  {
    "text": "command here doesn't stop the script so you don't go ahead with anything wrong",
    "start": "453080",
    "end": "460010"
  },
  {
    "text": "and component idea is artifacts is the name of my component within my",
    "start": "460010",
    "end": "467270"
  },
  {
    "text": "environment let's say so this is my the bucket part so the very fun the first",
    "start": "467270",
    "end": "473990"
  },
  {
    "text": "piece of my architecture and I'm generating a unique name by getting the",
    "start": "473990",
    "end": "480080"
  },
  {
    "text": "today's hour minute and second and I'm composing my gallery ID that first",
    "start": "480080",
    "end": "487730"
  },
  {
    "text": "parameter by being dev m and unique just so we can generate unique name for",
    "start": "487730",
    "end": "495070"
  },
  {
    "text": "environments if we need to create several and several environments and this is something we are going to",
    "start": "495070",
    "end": "501530"
  },
  {
    "text": "experiment a lot in this series so it's better get used to it from the start and then they spec name my confirmation",
    "start": "501530",
    "end": "509000"
  },
  {
    "text": "stack name will be my gallery ID followed by my companion component ID",
    "start": "509000",
    "end": "515990"
  },
  {
    "text": "we're going to see how it looks like I'm a bit in this case it's going to be",
    "start": "515990",
    "end": "521080"
  },
  {
    "text": "artifacts they have M artifacts or something like this and here is how I",
    "start": "521080",
    "end": "528200"
  },
  {
    "text": "pass the stack name here's how one very simple way to best parameters",
    "start": "528200",
    "end": "533840"
  },
  {
    "text": "I'm saying that this parameter gallery ID that's bound here is going to be set",
    "start": "533840",
    "end": "541850"
  },
  {
    "text": "to the value of this variable and this is my template body so that's just a way",
    "start": "541850",
    "end": "550520"
  },
  {
    "text": "to tell just telling confirmation how to create the stack and take a look this is",
    "start": "550520",
    "end": "556100"
  },
  {
    "text": "an important part this is the create stack command of the a blast cloud",
    "start": "556100",
    "end": "561530"
  },
  {
    "text": "formations y li and then we are going to wait until this tag create is complete",
    "start": "561530",
    "end": "568100"
  },
  {
    "text": "and after this that create is complete we're going to describe the stack and",
    "start": "568100",
    "end": "575690"
  },
  {
    "text": "fetch from this type from this tag tag was created the bucket name out put it",
    "start": "575690",
    "end": "584000"
  },
  {
    "text": "as a variable and this may seem a little overly complex form a call for a simple",
    "start": "584000",
    "end": "593060"
  },
  {
    "text": "history bucket but I wanted to show you guys how to pass parameters to",
    "start": "593060",
    "end": "599890"
  },
  {
    "text": "confirmation and how to get output results from confirmations so again here",
    "start": "599890",
    "end": "609230"
  },
  {
    "start": "600000",
    "end": "760000"
  },
  {
    "text": "is what what I mean so I will just execute CFM artifacts and it will return",
    "start": "609230",
    "end": "619790"
  },
  {
    "text": "the stack that was just created and let's go to the confirmation management",
    "start": "619790",
    "end": "625700"
  },
  {
    "text": "console and see what's going on there so we can see that that m1911 one seven",
    "start": "625700",
    "end": "635150"
  },
  {
    "text": "artifacts stack is being created and very soon we'll have its outputs",
    "start": "635150",
    "end": "643150"
  },
  {
    "text": "declared here so we can see what the export frames looks like and of course",
    "start": "643150",
    "end": "649850"
  },
  {
    "text": "the s3 bucket should be created as well so we have create complete our stack was",
    "start": "649850",
    "end": "657530"
  },
  {
    "text": "created successfully our artifacts name is here and let me give",
    "start": "657530",
    "end": "665720"
  },
  {
    "text": "more visibility into this so in our stack mehmed beth have won nine funding",
    "start": "665720",
    "end": "674970"
  },
  {
    "text": "in seven artifacts i have this bucket name the actual name of the bucket is",
    "start": "674970",
    "end": "680850"
  },
  {
    "text": "this and here's a important thing about called computing creature resources like",
    "start": "680850",
    "end": "687779"
  },
  {
    "text": "cattle not pets so I don't really care what named this bucket have I don't need",
    "start": "687779",
    "end": "693089"
  },
  {
    "text": "to call it my artifacts or anything special I just give it a name and goal",
    "start": "693089",
    "end": "698999"
  },
  {
    "text": "and in the artefacts bucket name this is just a description but this is the",
    "start": "698999",
    "end": "705449"
  },
  {
    "text": "important part export name is this so that every other",
    "start": "705449",
    "end": "710639"
  },
  {
    "text": "stack that would like to use or import this value can reference this name and",
    "start": "710639",
    "end": "719600"
  },
  {
    "text": "you can see that I have maining standard here I have the name of the environment",
    "start": "719600",
    "end": "726449"
  },
  {
    "text": "and the resource ID so I can if I have a",
    "start": "726449",
    "end": "731730"
  },
  {
    "text": "different environment it will have a different export name so this way I can generate as many environments as I want",
    "start": "731730",
    "end": "739559"
  },
  {
    "text": "and make sure that the the environment won't conflict right the IDS won't clash",
    "start": "739559",
    "end": "747179"
  },
  {
    "text": "so I can create any amount of them as I want because if you try to create an",
    "start": "747179",
    "end": "752399"
  },
  {
    "text": "export with a name that already exists your stack creation will fail so make",
    "start": "752399",
    "end": "758160"
  },
  {
    "text": "sure you take an and order of that alright so the next step is to do our",
    "start": "758160",
    "end": "765509"
  },
  {
    "start": "760000",
    "end": "1070000"
  },
  {
    "text": "VPC so to create our VDC we are going to follow the same approach and in the last",
    "start": "765509",
    "end": "772679"
  },
  {
    "text": "episode we discussed Network topologies and things that you can do and here is",
    "start": "772679",
    "end": "779279"
  },
  {
    "text": "the the template that we do it for that so here on CFM base HIV PC this is the",
    "start": "779279",
    "end": "789600"
  },
  {
    "text": "dno file that we have so the first thing you'll notice is that I have that",
    "start": "789600",
    "end": "796110"
  },
  {
    "text": "gallery ID meter so when something have crew is created I can fetch the same parameters",
    "start": "796110",
    "end": "805450"
  },
  {
    "text": "that and outputs that I had on this on the previous stack and this is a very",
    "start": "805450",
    "end": "812050"
  },
  {
    "text": "very important part of conformational development don't create these huge stacks create separate stacks with just",
    "start": "812050",
    "end": "820209"
  },
  {
    "text": "what you need and this makes it much easier to test and deploy and manage",
    "start": "820209",
    "end": "826690"
  },
  {
    "text": "your confirmation templates in general so here you can see that I have the",
    "start": "826690",
    "end": "833529"
  },
  {
    "text": "cyber block for my V PC and I have four",
    "start": "833529",
    "end": "839050"
  },
  {
    "text": "networks for subnets why is that because two of them are private and they are two",
    "start": "839050",
    "end": "845320"
  },
  {
    "text": "so we have redundancy one in each easy so we have a public and a private subnet",
    "start": "845320",
    "end": "852610"
  },
  {
    "text": "/ AZ does four subnets okay and then the",
    "start": "852610",
    "end": "860529"
  },
  {
    "text": "Declaration of our resources the V PC the subnet and again here you can see",
    "start": "860529",
    "end": "867310"
  },
  {
    "text": "the that trick that we mentioned in the past episode I am calling the get a ZZZ",
    "start": "867310",
    "end": "875170"
  },
  {
    "text": "function on the region so I know all the aces from region and selecting the first",
    "start": "875170",
    "end": "881260"
  },
  {
    "text": "and then for the other subnet I'm selecting the second so we don't end up",
    "start": "881260",
    "end": "887020"
  },
  {
    "text": "with subnets in the same AZ because after all the goal of this is to have",
    "start": "887020",
    "end": "892450"
  },
  {
    "text": "high availability regardless of AZ so the same thing for the private subnets",
    "start": "892450",
    "end": "899410"
  },
  {
    "text": "and the resources of passion to your V PC your gateway your internet gateway or",
    "start": "899410",
    "end": "905650"
  },
  {
    "text": "public route and things like this the routing table all the resources from for",
    "start": "905650",
    "end": "911350"
  },
  {
    "text": "your for your network and again the same",
    "start": "911350",
    "end": "917649"
  },
  {
    "text": "the same export trick that we did later to make this resources available to",
    "start": "917649",
    "end": "925779"
  },
  {
    "text": "other stacks so you confirmation is going to create these resources and using the export I am",
    "start": "925779",
    "end": "935370"
  },
  {
    "text": "making this VIP and the subnet the idea",
    "start": "935370",
    "end": "941610"
  },
  {
    "text": "of the sub map and everything available to other stacks so again I have a very",
    "start": "941610",
    "end": "948240"
  },
  {
    "text": "convenient shell script to execute this and it's the very same idea except that",
    "start": "948240",
    "end": "955020"
  },
  {
    "text": "I'm passing parameters in a different way so you see the different ways the confirmation CLI can receive parameters",
    "start": "955020",
    "end": "962820"
  },
  {
    "text": "and here you have it here is I'm just",
    "start": "962820",
    "end": "968900"
  },
  {
    "text": "generating a file called CFM base a JDBC jason with my json parameter is the",
    "start": "968900",
    "end": "976260"
  },
  {
    "text": "gallery ID that was generated automatically or fetched from from the",
    "start": "976260",
    "end": "982350"
  },
  {
    "text": "environment and the the VPC block",
    "start": "982350",
    "end": "987570"
  },
  {
    "text": "parameters so instead of using the default 192 address space I'm using the",
    "start": "987570",
    "end": "999420"
  },
  {
    "text": "pan address space that I'm passing as parameters just showing you guys how to",
    "start": "999420",
    "end": "1005870"
  },
  {
    "text": "do this and then I'm going to create a stack just like the way we did for the",
    "start": "1005870",
    "end": "1011660"
  },
  {
    "text": "for the bucket but passing the parameters here as as a file instead of",
    "start": "1011660",
    "end": "1018560"
  },
  {
    "text": "directly passing them into the spirit and I will need those variables",
    "start": "1018560",
    "end": "1024430"
  },
  {
    "text": "subsequent scripts so just create variable to remember the gallery ID and",
    "start": "1024430",
    "end": "1032300"
  },
  {
    "text": "remember the bucket name but that's just it now we can fire the CFM base a JDBC",
    "start": "1032300",
    "end": "1043540"
  },
  {
    "text": "if we take a look at the confirmation console we can see that already being",
    "start": "1045700",
    "end": "1051650"
  },
  {
    "text": "created and if we take look at the resources Oh here is too big",
    "start": "1051650",
    "end": "1059470"
  },
  {
    "text": "for the for the screen but we can't we will soon be able to see the outputs",
    "start": "1059470",
    "end": "1065100"
  },
  {
    "text": "everything that this template has created so actually we don't need to",
    "start": "1065100",
    "end": "1072809"
  },
  {
    "start": "1070000",
    "end": "1565000"
  },
  {
    "text": "build to wait for this to happen for the next step because the next thing is our",
    "start": "1072809",
    "end": "1079120"
  },
  {
    "text": "beanstalk app so if we didn't talk about",
    "start": "1079120",
    "end": "1084390"
  },
  {
    "text": "Beanstalk yet but let me it's all referenced here in our in our guest so",
    "start": "1084390",
    "end": "1094179"
  },
  {
    "text": "here's a the home page for elastic Beanstalk and based oak is an",
    "start": "1094179",
    "end": "1099550"
  },
  {
    "text": "application platform for scaling and the point web apps so it already knows Java",
    "start": "1099550",
    "end": "1106540"
  },
  {
    "text": "PHP Python dotnet and I mean it knows how to do deployments on this platform",
    "start": "1106540",
    "end": "1112870"
  },
  {
    "text": "however the package is structured and even darker if you want to build your",
    "start": "1112870",
    "end": "1118750"
  },
  {
    "text": "own container images and things like that with single images or multi",
    "start": "1118750",
    "end": "1123790"
  },
  {
    "text": "containing multiple containers per instance and things like this so a very",
    "start": "1123790",
    "end": "1129309"
  },
  {
    "text": "powerful application platform for us to start with I know that you have several",
    "start": "1129309",
    "end": "1136300"
  },
  {
    "text": "architectural options at AWS we have instances functions containers and we're",
    "start": "1136300",
    "end": "1142150"
  },
  {
    "text": "going to cover all that but for today as this is the first episode in all testing",
    "start": "1142150",
    "end": "1147760"
  },
  {
    "text": "let's start with regular is it your instances in elastic Beanstalk because I think that's very familiar to a lot of",
    "start": "1147760",
    "end": "1155740"
  },
  {
    "text": "you guys and very simple to get started so the first thing to create a beanstalk",
    "start": "1155740",
    "end": "1163330"
  },
  {
    "text": "app is define an application and this would be again the same of going through",
    "start": "1163330",
    "end": "1169300"
  },
  {
    "text": "the console and kicking in stuff but here we're defining it as called involve",
    "start": "1169300",
    "end": "1175960"
  },
  {
    "text": "formation so this is the yin of file that we are looking for so here the same",
    "start": "1175960",
    "end": "1184020"
  },
  {
    "text": "gallery ID that you are using to separate our environment",
    "start": "1184020",
    "end": "1189450"
  },
  {
    "text": "inflamed and here is the proper Beanstalk environment the name that it's",
    "start": "1189450",
    "end": "1195040"
  },
  {
    "text": "going to have on the on the service and an instance typed that by the for is e 2",
    "start": "1195040",
    "end": "1203560"
  },
  {
    "text": "micro here that's we can change it to whatever one I just added T to micro so",
    "start": "1203560",
    "end": "1210280"
  },
  {
    "text": "that it's available in the free tier and you can replicate this without spending",
    "start": "1210280",
    "end": "1216280"
  },
  {
    "text": "too much then oh this is the environment before creating the environment we need",
    "start": "1216280",
    "end": "1223300"
  },
  {
    "text": "to create the app and this is actually the CFM bins fault flask template so",
    "start": "1223300",
    "end": "1229330"
  },
  {
    "text": "let's let's start with this one so the we need the airplane first and the app",
    "start": "1229330",
    "end": "1235540"
  },
  {
    "text": "name is sitting ducks the minimum size of the auto scaling group that's too",
    "start": "1235540",
    "end": "1242370"
  },
  {
    "text": "tiny so I'm letting the user tell me how",
    "start": "1242370",
    "end": "1248740"
  },
  {
    "text": "many instances this do you one does you want is in this case from choo-choo tiny",
    "start": "1248740",
    "end": "1254680"
  },
  {
    "text": "by the full but these are parameters you can set on our template and then I have",
    "start": "1254680",
    "end": "1261610"
  },
  {
    "text": "a role I use this for five role this is what my instances are going to be",
    "start": "1261610",
    "end": "1267460"
  },
  {
    "text": "allowed to do so I'm binding the instance to this baby stop roles so they",
    "start": "1267460",
    "end": "1275740"
  },
  {
    "text": "will have access to elastic Beanstalk api's to tell elastic API Beanstalk that",
    "start": "1275740",
    "end": "1282160"
  },
  {
    "text": "the instances are alive and well when they come up and this instance profiles",
    "start": "1282160",
    "end": "1289540"
  },
  {
    "text": "are going to be referenced here the application name will be my gallery ID",
    "start": "1289540",
    "end": "1295740"
  },
  {
    "text": "underscore F knee just just as a combination the configuration templates",
    "start": "1295740",
    "end": "1303040"
  },
  {
    "text": "that I'm going to use and this is my Beanstalk settings so every setting",
    "start": "1303040",
    "end": "1309190"
  },
  {
    "text": "that's going to be Defoe for all mine environments are here so let's take a",
    "start": "1309190",
    "end": "1317880"
  },
  {
    "text": "deeper look at this so my epic is a reference to the application that",
    "start": "1317880",
    "end": "1324240"
  },
  {
    "text": "was just created the solution name is Linux latest version running",
    "start": "1324240",
    "end": "1333270"
  },
  {
    "text": "item so this is what my infrastructure will be and an interesting thing here is",
    "start": "1333270",
    "end": "1340620"
  },
  {
    "text": "that Big Talk automatically figures out what's the latest ami for this and so",
    "start": "1340620",
    "end": "1346890"
  },
  {
    "text": "you don't have to map this to different regions and things that you usually see on some confirmation templates and then",
    "start": "1346890",
    "end": "1354240"
  },
  {
    "text": "the option settings so there's option settings is how you tell being spoke every setting that you",
    "start": "1354240",
    "end": "1363300"
  },
  {
    "text": "need so let's take a look at the the service documentation so that you'll",
    "start": "1363300",
    "end": "1369930"
  },
  {
    "text": "know what I'm talking what this is actually doing here in general options",
    "start": "1369930",
    "end": "1377940"
  },
  {
    "text": "for general Beanstalk if you go to the reference of this variable here's here's",
    "start": "1377940",
    "end": "1388160"
  },
  {
    "text": "how you tell me Stoke what he wanted to do so for example this variable called",
    "start": "1388160",
    "end": "1394970"
  },
  {
    "text": "environments type sets your environment to launch just one single instance for",
    "start": "1394970",
    "end": "1400680"
  },
  {
    "text": "dev and test for example or I'm in full bone environment with load balancer and",
    "start": "1400680",
    "end": "1407130"
  },
  {
    "text": "auto scaling that react as we want to so we are going to use load balance",
    "start": "1407130",
    "end": "1413550"
  },
  {
    "text": "environments and this is why you see it here our environment type is world",
    "start": "1413550",
    "end": "1421380"
  },
  {
    "text": "balance our system health reporting switch using handset health monitoring",
    "start": "1421380",
    "end": "1426990"
  },
  {
    "text": "the monitor interval is going to be one minute the launch configuration is going",
    "start": "1426990",
    "end": "1432390"
  },
  {
    "text": "to be bound to that instance profile that was created above and the minimum",
    "start": "1432390",
    "end": "1438120"
  },
  {
    "text": "size and the maximum size of the auto scaling group are going to be bound to",
    "start": "1438120",
    "end": "1443220"
  },
  {
    "text": "the parameters I just created and on the output again Daz",
    "start": "1443220",
    "end": "1449980"
  },
  {
    "text": "is exporting the application name and template name so let's take a look at",
    "start": "1449980",
    "end": "1458679"
  },
  {
    "text": "the script to run this and this is very very very simple and just the same as we",
    "start": "1458679",
    "end": "1468070"
  },
  {
    "text": "did for all the others of just a small change is we are using the confirmation",
    "start": "1468070",
    "end": "1475570"
  },
  {
    "text": "deploy command here instead of the create stack what the point does is a",
    "start": "1475570",
    "end": "1481600"
  },
  {
    "text": "bit different from great stack the POI is going to create a change set meaning",
    "start": "1481600",
    "end": "1488470"
  },
  {
    "text": "the set of changes that Beanstalk is going to perform in our behalf and you",
    "start": "1488470",
    "end": "1493600"
  },
  {
    "text": "even can preview this before you apply and then it's going to apply this change",
    "start": "1493600",
    "end": "1499299"
  },
  {
    "text": "set and this supports a few different operations one that's pretty important",
    "start": "1499299",
    "end": "1504880"
  },
  {
    "text": "is the transforms so crate stack does not run supports transforms but deploy",
    "start": "1504880",
    "end": "1510220"
  },
  {
    "text": "can actually transform your original template and this is not something we're",
    "start": "1510220",
    "end": "1516370"
  },
  {
    "text": "going to use now about many other",
    "start": "1516370",
    "end": "1521640"
  },
  {
    "text": "features we're going to talk about this so I better start using using the POI",
    "start": "1521640",
    "end": "1527559"
  },
  {
    "text": "and the parameter passing changes a bit so here's how we can override parameters",
    "start": "1527559",
    "end": "1534780"
  },
  {
    "text": "for the gallery ID and app name if we even needed to but let's see for all",
    "start": "1534780",
    "end": "1544690"
  },
  {
    "text": "practical purpose it would be the same as we've been doing so far so let's just",
    "start": "1544690",
    "end": "1550360"
  },
  {
    "text": "fire CFM Beanstalk flask and this should",
    "start": "1550360",
    "end": "1560890"
  },
  {
    "text": "start creating our first environment so going back to the confirmation console",
    "start": "1560890",
    "end": "1566559"
  },
  {
    "start": "1565000",
    "end": "1595000"
  },
  {
    "text": "here we have our stack is already created and we can see how this is going",
    "start": "1566559",
    "end": "1574240"
  },
  {
    "text": "the VPC IV was created it is VP c09",
    "start": "1574240",
    "end": "1581620"
  },
  {
    "text": "seventy it was exported as deaf hands and the name of my dev environment VDC",
    "start": "1581620",
    "end": "1590110"
  },
  {
    "text": "ID and the same for the ID of each subnet so now it comes the fun part",
    "start": "1590110",
    "end": "1597310"
  },
  {
    "start": "1595000",
    "end": "1615000"
  },
  {
    "text": "right the the interesting part where we actually make a reference to those",
    "start": "1597310",
    "end": "1602860"
  },
  {
    "text": "values as soon as our being spoke flask app is created we can start actually",
    "start": "1602860",
    "end": "1608800"
  },
  {
    "text": "creating environments and again here let's just wait for a little bit while",
    "start": "1608800",
    "end": "1617650"
  },
  {
    "text": "that goes on I will show you the the template so this is where things",
    "start": "1617650",
    "end": "1623200"
  },
  {
    "text": "actually start happening in terms of compute this is where we are bringing up",
    "start": "1623200",
    "end": "1629800"
  },
  {
    "text": "our first compute instance and just now we're starting to to actually compute",
    "start": "1629800",
    "end": "1636790"
  },
  {
    "text": "before we did the preparation work so let's just review what we are doing so",
    "start": "1636790",
    "end": "1642610"
  },
  {
    "text": "far we are creating an application for load testing and we're creating it using",
    "start": "1642610",
    "end": "1648400"
  },
  {
    "text": "elastic Beanstalk and we created the bucket to store the packages and",
    "start": "1648400",
    "end": "1655500"
  },
  {
    "text": "configuration and anything else we need we created the virtual private cloud the",
    "start": "1655500",
    "end": "1661600"
  },
  {
    "text": "network infrastructure to host our app and we created the Beanstalk application",
    "start": "1661600",
    "end": "1668200"
  },
  {
    "text": "the logical configuration of our app security settings and so and so forth so",
    "start": "1668200",
    "end": "1674140"
  },
  {
    "text": "now let's bring up on environment and the first thing that we need is an",
    "start": "1674140",
    "end": "1680320"
  },
  {
    "text": "application version and the application version is going to be just a bundle of",
    "start": "1680320",
    "end": "1687070"
  },
  {
    "text": "this whole directory I'm not making I could be fancier with this beauty and we",
    "start": "1687070",
    "end": "1695050"
  },
  {
    "text": "are going to work a lot in our build process in future videos but for now let's just take this whole directory zip",
    "start": "1695050",
    "end": "1703930"
  },
  {
    "text": "it up and submit to being stock and that's how we're gonna work the EB",
    "start": "1703930",
    "end": "1711550"
  },
  {
    "text": "environment is the actual compute environment that we want and",
    "start": "1711550",
    "end": "1716960"
  },
  {
    "text": "this is the very very special import value function the import file function",
    "start": "1716960",
    "end": "1724440"
  },
  {
    "text": "is the one that will bring up a value from other stack and import into this",
    "start": "1724440",
    "end": "1730590"
  },
  {
    "text": "one so here you can see that my gallery",
    "start": "1730590",
    "end": "1736320"
  },
  {
    "text": "ID if it's the same it's going to match the application name that was exported",
    "start": "1736320",
    "end": "1741930"
  },
  {
    "text": "by this stack and this way I can have references between one stack and another",
    "start": "1741930",
    "end": "1750060"
  },
  {
    "text": "how cool is that and the environment name will be that environment name",
    "start": "1750060",
    "end": "1755910"
  },
  {
    "text": "variable the configuration template you can see that everything references the",
    "start": "1755910",
    "end": "1761550"
  },
  {
    "text": "stuff that was created on the others on the other templates by cross stack",
    "start": "1761550",
    "end": "1767910"
  },
  {
    "text": "references and the important thing to understand about cross stack references",
    "start": "1767910",
    "end": "1774450"
  },
  {
    "text": "is that it's just a name reference it's not binding the lifecycle of these",
    "start": "1774450",
    "end": "1779910"
  },
  {
    "text": "components if you delete the environment you don't delete the stack or the",
    "start": "1779910",
    "end": "1786590"
  },
  {
    "text": "artifacts bucket or anything that we created I can delete this new",
    "start": "1786590",
    "end": "1791700"
  },
  {
    "text": "environment and keep the rest of the infrastructure untouched or even delete",
    "start": "1791700",
    "end": "1800190"
  },
  {
    "text": "other apps and this won't be affected right and you can see that this can be",
    "start": "1800190",
    "end": "1809460"
  },
  {
    "text": "used with other Confirmation intrinsic functions for example here I take the",
    "start": "1809460",
    "end": "1816600"
  },
  {
    "text": "subnet a and the subnet B IDs and join",
    "start": "1816600",
    "end": "1821610"
  },
  {
    "text": "them with a comma and pass it to the subnets property of my binstock",
    "start": "1821610",
    "end": "1826890"
  },
  {
    "text": "environment so this environment is going to be brought up in distress events and",
    "start": "1826890",
    "end": "1832530"
  },
  {
    "text": "in the end it's going to have a mint point URL like work should i target my",
    "start": "1832530",
    "end": "1838320"
  },
  {
    "text": "requests and this is it so let's let's",
    "start": "1838320",
    "end": "1843870"
  },
  {
    "text": "bring this up and for that again we have a convenient",
    "start": "1843870",
    "end": "1849060"
  },
  {
    "text": "script for you and this script is a bit different than the other ones because it",
    "start": "1849060",
    "end": "1854730"
  },
  {
    "text": "has three steps instead of just one right here I have a package command C F",
    "start": "1854730",
    "end": "1862410"
  },
  {
    "text": "and link command and the deploy command so let's go through step by step and",
    "start": "1862410",
    "end": "1867750"
  },
  {
    "text": "understand what each one is doing the confirmation package template is going",
    "start": "1867750",
    "end": "1874530"
  },
  {
    "text": "to transform our template from one thing to another it's going to get a very",
    "start": "1874530",
    "end": "1882660"
  },
  {
    "text": "selected set of properties transform change their value upload it to a",
    "start": "1882660",
    "end": "1889680"
  },
  {
    "text": "mastery bucket and that's how our SV bucket comes into play and output the",
    "start": "1889680",
    "end": "1896190"
  },
  {
    "text": "template to a new template if the variable reference changed and what is",
    "start": "1896190",
    "end": "1903180"
  },
  {
    "text": "the goal of this it should change this value here the source bundle property so",
    "start": "1903180",
    "end": "1913680"
  },
  {
    "text": "this first photo will be packaged by",
    "start": "1913680",
    "end": "1919500"
  },
  {
    "text": "confirmation template by this command and so this the packaging command is",
    "start": "1919500",
    "end": "1926360"
  },
  {
    "text": "actually zipping this first bundle applauding should have mentioned s3",
    "start": "1926360",
    "end": "1934710"
  },
  {
    "text": "bucket the free bucket right here and",
    "start": "1934710",
    "end": "1940610"
  },
  {
    "text": "outputs the template through a new file so if you see them the name of the",
    "start": "1941330",
    "end": "1946890"
  },
  {
    "text": "output file is just the same file but dot out dot e mo so if we take a look at",
    "start": "1946890",
    "end": "1953040"
  },
  {
    "text": "the last one that I created here take a look at this property the the source",
    "start": "1953040",
    "end": "1959760"
  },
  {
    "text": "bundle property instead of having just the dot that we had before so here it",
    "start": "1959760",
    "end": "1965880"
  },
  {
    "text": "was just a small dot and now it has been",
    "start": "1965880",
    "end": "1973830"
  },
  {
    "text": "replaced by this by the as per bucket and disaster key so I know",
    "start": "1973830",
    "end": "1981240"
  },
  {
    "text": "exactly where that is",
    "start": "1981240",
    "end": "1985820"
  },
  {
    "text": "so let's this is for packaging and after",
    "start": "1987499",
    "end": "1994139"
  },
  {
    "text": "packaging our template I'm going to use",
    "start": "1994139",
    "end": "2000169"
  },
  {
    "text": "the CF and lead to and this is a liter",
    "start": "2000169",
    "end": "2005659"
  },
  {
    "text": "it's a checker to see if my confirmation template has any errors so if I have any",
    "start": "2005659",
    "end": "2012049"
  },
  {
    "text": "error in my confirmation template it will tell me and this is very very useful to prevent errors to prevent",
    "start": "2012049",
    "end": "2020029"
  },
  {
    "text": "problems and then having to wait for the confirmation to create everything and then come back and one important part of",
    "start": "2020029",
    "end": "2029090"
  },
  {
    "text": "this is this liter is just for synthetic errors not for other kinds of problems",
    "start": "2029090",
    "end": "2037039"
  },
  {
    "text": "such as name conflicts and things that confirmation when we learn in run time but everything that can be prevented",
    "start": "2037039",
    "end": "2045259"
  },
  {
    "text": "from source analysis is going to be done here and then it's going to be the boy",
    "start": "2045259",
    "end": "2051349"
  },
  {
    "text": "with the same confirmation deployed comment that we've been using so let's",
    "start": "2051349",
    "end": "2056690"
  },
  {
    "text": "try that and create our first",
    "start": "2056690",
    "end": "2065030"
  },
  {
    "text": "environment",
    "start": "2065030",
    "end": "2067658"
  },
  {
    "text": "this romantic this would take a bit longer than the other commands because",
    "start": "2070500",
    "end": "2076200"
  },
  {
    "text": "the other ones were creating more logical structures this one is the one that actually brings up an instance so",
    "start": "2076200",
    "end": "2084500"
  },
  {
    "text": "we're going to have to wait for this a little bit and why do we wait if you",
    "start": "2084500",
    "end": "2092669"
  },
  {
    "start": "2085000",
    "end": "2165000"
  },
  {
    "text": "have any questions at all feel free to to to ask questions hello the terminus",
    "start": "2092669",
    "end": "2101010"
  },
  {
    "text": "I'm going to paste it again here the link that I pasted it before and so if",
    "start": "2101010",
    "end": "2109650"
  },
  {
    "text": "you're just tuning in this is software engineering session welcome this is a",
    "start": "2109650",
    "end": "2116250"
  },
  {
    "text": "Tobias cup computing we were talking about scalability we are trying to answer this question how our system",
    "start": "2116250",
    "end": "2123590"
  },
  {
    "text": "adapt to changes in demand so this is our goal of today and the first thing is",
    "start": "2123590",
    "end": "2130230"
  },
  {
    "text": "to have your system so to have something to test we are building up a sample app",
    "start": "2130230",
    "end": "2137610"
  },
  {
    "text": "file starting in it with a very very simple app on a stick Beanstalk and",
    "start": "2137610",
    "end": "2145040"
  },
  {
    "text": "Confirmation trying to define everything as code and we're going to start firing",
    "start": "2145040",
    "end": "2150090"
  },
  {
    "text": "requests at it just to see how if we increase the load how does the system",
    "start": "2150090",
    "end": "2157950"
  },
  {
    "text": "handles it and that's what we are interested in learning about and",
    "start": "2157950",
    "end": "2164240"
  },
  {
    "text": "everything that you see here all the code is available on github it's just a",
    "start": "2164240",
    "end": "2171540"
  },
  {
    "start": "2165000",
    "end": "2185000"
  },
  {
    "text": "sample code that I should I'm showing directly with you guys and and that's",
    "start": "2171540",
    "end": "2178050"
  },
  {
    "text": "pretty much it so let's take a look at",
    "start": "2178050",
    "end": "2185370"
  },
  {
    "start": "2185000",
    "end": "2215000"
  },
  {
    "text": "the Beanstalk console just to track if everything is going as expected and ok",
    "start": "2185370",
    "end": "2194010"
  },
  {
    "text": "our application is coming up on elastic being stored it's still raised to being",
    "start": "2194010",
    "end": "2199530"
  },
  {
    "text": "created we can click and see what it's doing my it's waiting for the a 60 loop instances",
    "start": "2199530",
    "end": "2206290"
  },
  {
    "text": "to launch crane cult a lot alarms and things like this so if we go to ec2 we",
    "start": "2206290",
    "end": "2213220"
  },
  {
    "text": "can now see our instances we have two instances coming up right soon enough",
    "start": "2213220",
    "end": "2221890"
  },
  {
    "start": "2215000",
    "end": "2310000"
  },
  {
    "text": "we're going to have the default formation template would booted and this",
    "start": "2221890",
    "end": "2229810"
  },
  {
    "text": "is a very it can be seen has a very complicated way to create a simple",
    "start": "2229810",
    "end": "2236530"
  },
  {
    "text": "confirmation template and I could have done this in many many different ways and this is the way that I work",
    "start": "2236530",
    "end": "2243430"
  },
  {
    "text": "personally and I've discovered that this small tricks like keeping them templates",
    "start": "2243430",
    "end": "2250840"
  },
  {
    "text": "small using cross tech references with a single identifier generating unique IDs",
    "start": "2250840",
    "end": "2258760"
  },
  {
    "text": "and creating new environments for testing stuff this is all just little tricks that helps me and I hope and can",
    "start": "2258760",
    "end": "2265930"
  },
  {
    "text": "help you guys and but you can further the different stuff this is just one way",
    "start": "2265930",
    "end": "2272590"
  },
  {
    "text": "of using the the set of services but it's there are some really really",
    "start": "2272590",
    "end": "2279340"
  },
  {
    "text": "interesting things there we're going to cover off the small tips because the Sam",
    "start": "2279340",
    "end": "2288070"
  },
  {
    "text": "of this is more tips mix can add up and really help your architecture one thing",
    "start": "2288070",
    "end": "2293320"
  },
  {
    "text": "end up reversing another and that's our goal so our environment was created and let's",
    "start": "2293320",
    "end": "2303130"
  },
  {
    "text": "see if it's ring not yet but now it is",
    "start": "2303130",
    "end": "2309300"
  },
  {
    "text": "all green and ready to go so here we have a beanstalk app and it says hello",
    "start": "2309300",
    "end": "2319140"
  },
  {
    "text": "so hello world is our inevitable example so let's take a look at the code of the",
    "start": "2319140",
    "end": "2327130"
  },
  {
    "text": "app right now so we're done with the infrastructure code so we saw the yellow",
    "start": "2327130",
    "end": "2334450"
  },
  {
    "text": "files those are confirmation templates that we are using today and that we can that we can do",
    "start": "2334450",
    "end": "2344290"
  },
  {
    "text": "right that we can declare our infrastructure as code so you can see that everything we built the instances",
    "start": "2344290",
    "end": "2352210"
  },
  {
    "text": "the network the bucket everything at all I never even had to get into the",
    "start": "2352210",
    "end": "2359410"
  },
  {
    "text": "confirmation console and create anything everything is created and managed",
    "start": "2359410",
    "end": "2365160"
  },
  {
    "text": "exclusively by code and with this you can automate things very easily and",
    "start": "2365160",
    "end": "2371860"
  },
  {
    "text": "quickly again a few important parts here modular eyes you can see there I've",
    "start": "2371860",
    "end": "2379090"
  },
  {
    "text": "separated my stacks into a small stacks that are easy to work that I there are",
    "start": "2379090",
    "end": "2386110"
  },
  {
    "text": "easier to test right you can also do this in bundles but after you're done",
    "start": "2386110",
    "end": "2393610"
  },
  {
    "text": "and let's take a look at it so we if",
    "start": "2393610",
    "end": "2398770"
  },
  {
    "text": "let's suppose that you want to create everything at once I don't I don't want",
    "start": "2398770",
    "end": "2406000"
  },
  {
    "text": "to go for the stab of create one create the other create the other create the",
    "start": "2406000",
    "end": "2412780"
  },
  {
    "text": "other and keep referencing things like this there is actually a way you can",
    "start": "2412780",
    "end": "2417820"
  },
  {
    "text": "build everything at once so take a look at this temple load testing 101 it's the",
    "start": "2417820",
    "end": "2425920"
  },
  {
    "text": "same set of resources but here we have this a depressed conformation stack",
    "start": "2425920",
    "end": "2433030"
  },
  {
    "text": "resource and this is very very very important because this allows you for",
    "start": "2433030",
    "end": "2439840"
  },
  {
    "text": "one confirmation stack to create another confirmation stack so here you can see",
    "start": "2439840",
    "end": "2446320"
  },
  {
    "text": "that I can create the VPC the flask app",
    "start": "2446320",
    "end": "2452220"
  },
  {
    "text": "the environment and I can say that the environment depends on the app the app",
    "start": "2452220",
    "end": "2459100"
  },
  {
    "text": "depends on the VTC the VPC depends on parameters and",
    "start": "2459100",
    "end": "2464350"
  },
  {
    "text": "whatnot so the idea here is a bit different because if I",
    "start": "2464350",
    "end": "2469519"
  },
  {
    "text": "delete this stack if I create this and then I delete it will delete all the",
    "start": "2469519",
    "end": "2475669"
  },
  {
    "text": "child stacks and this is the most important difference between nested",
    "start": "2475669",
    "end": "2481189"
  },
  {
    "text": "stacks and cross stack references so this is a very important piece of confirmation so let me repeat this to",
    "start": "2481189",
    "end": "2488779"
  },
  {
    "text": "you guys when you use AWS CloudFormation stack you're using nested stacks and",
    "start": "2488779",
    "end": "2495380"
  },
  {
    "text": "their lifecycle is bound so when you delete the parent stack all the specs",
    "start": "2495380",
    "end": "2500809"
  },
  {
    "text": "that are defined here will be gone when you use import value you're using cross",
    "start": "2500809",
    "end": "2507410"
  },
  {
    "text": "stack references and in this way the stacks are not bound they just share",
    "start": "2507410",
    "end": "2514339"
  },
  {
    "text": "names with one another and depending on the behavior you want",
    "start": "2514339",
    "end": "2519469"
  },
  {
    "text": "one is more appropriate than another if you just want to manage individual",
    "start": "2519469",
    "end": "2524809"
  },
  {
    "text": "components you can use nested stacks cross stack references if you want to",
    "start": "2524809",
    "end": "2531019"
  },
  {
    "text": "delete the app and delete all the components you can use nested stacks and",
    "start": "2531019",
    "end": "2536419"
  },
  {
    "text": "you can even use them together so as you can see here those nested stacks those",
    "start": "2536419",
    "end": "2544549"
  },
  {
    "text": "are nested stacks but they do have crossed occurrences no problem it's just",
    "start": "2544549",
    "end": "2550279"
  },
  {
    "text": "a matter of how you group them together and that's okay as well so make sure you",
    "start": "2550279",
    "end": "2556130"
  },
  {
    "text": "take a look at confirmation mastered stacks and cross-check references oh okay the the code link is is here on the",
    "start": "2556130",
    "end": "2567849"
  },
  {
    "start": "2565000",
    "end": "3085000"
  },
  {
    "text": "on the document I just shared sr one",
    "start": "2567849",
    "end": "2575419"
  },
  {
    "text": "eight nine zero thanks for this but here is the here is the direct link to the",
    "start": "2575419",
    "end": "2582289"
  },
  {
    "text": "code okay so let's take a look at the",
    "start": "2582289",
    "end": "2587449"
  },
  {
    "text": "actual code of our application so the app is here on a Schnucks that's our",
    "start": "2587449",
    "end": "2594469"
  },
  {
    "text": "packaged application dot py and you can see the /root this is a flask app Python",
    "start": "2594469",
    "end": "2604289"
  },
  {
    "text": "flask app so a very popular web framework for restful services hope you",
    "start": "2604289",
    "end": "2611910"
  },
  {
    "text": "heard of it but it could be any app any language would work the same here it's",
    "start": "2611910",
    "end": "2619049"
  },
  {
    "text": "not something specific for Python now I'm just taking this application as an",
    "start": "2619049",
    "end": "2624480"
  },
  {
    "text": "example we could do literally anything here I'm just creating initial example",
    "start": "2624480",
    "end": "2631170"
  },
  {
    "text": "again so we have something to shoot against and the shooting is the",
    "start": "2631170",
    "end": "2636599"
  },
  {
    "text": "important part what you're shooting against in this case at least for today it doesn't matter very much so let's",
    "start": "2636599",
    "end": "2643740"
  },
  {
    "text": "this is the resource have a world that we just saw and I have very peculiar",
    "start": "2643740",
    "end": "2654109"
  },
  {
    "text": "have hobby of perform profiling",
    "start": "2654109",
    "end": "2659700"
  },
  {
    "text": "Fibonacci generators for fun so I got a few of them implemented here and we are",
    "start": "2659700",
    "end": "2666059"
  },
  {
    "text": "going to see which one is faster so what do you think this is the recursive the",
    "start": "2666059",
    "end": "2673049"
  },
  {
    "text": "iterative implementation of Fibonacci so if you don't know people machi sequences",
    "start": "2673049",
    "end": "2679170"
  },
  {
    "text": "he doesn't do let's take a look to the to define them it's just a sequence",
    "start": "2679170",
    "end": "2685559"
  },
  {
    "text": "where the next element is the sum of the previews so so it would be 0 1 1 2 3 5 8",
    "start": "2685559",
    "end": "2701720"
  },
  {
    "text": "and things like this I think you've got the you think you've got to add the idea",
    "start": "2701720",
    "end": "2708200"
  },
  {
    "text": "everybody knows soup on H by these days I hope and here's the iterative",
    "start": "2708200",
    "end": "2716460"
  },
  {
    "text": "definition we are going to go from 1 to n and for each one some some the next",
    "start": "2716460",
    "end": "2723779"
  },
  {
    "text": "and return and recursive implementation is a bit more straightforward if the",
    "start": "2723779",
    "end": "2731490"
  },
  {
    "text": "failure is greater than one we return n minus 1 plus n minus 2 or else returned",
    "start": "2731490",
    "end": "2737720"
  },
  {
    "text": "the current value and this recursive",
    "start": "2737720",
    "end": "2743480"
  },
  {
    "text": "very a bit shorter and some say more elegant and this one is using a Python",
    "start": "2743480",
    "end": "2751470"
  },
  {
    "text": "generator it's lazily computing this as in each",
    "start": "2751470",
    "end": "2758640"
  },
  {
    "text": "call to next it's going to run one evaluation of this function and yield a",
    "start": "2758640",
    "end": "2766470"
  },
  {
    "text": "new Fibonacci element here is a memorized version that will keep values",
    "start": "2766470",
    "end": "2774420"
  },
  {
    "text": "in memory I have this memorizes any function and I have a memorizer",
    "start": "2774420",
    "end": "2781770"
  },
  {
    "text": "definition of Fibonacci just a bit below so here's the memoirs of the iterative",
    "start": "2781770",
    "end": "2791610"
  },
  {
    "text": "Fibonacci as in the same X so I have different paths to each of those",
    "start": "2791610",
    "end": "2800070"
  },
  {
    "text": "[Music] yeah we're getting to them to the load part to the load testing part this is",
    "start": "2800070",
    "end": "2806850"
  },
  {
    "text": "the the load the load paths that I'm going to test and we need a load",
    "start": "2806850",
    "end": "2813090"
  },
  {
    "text": "generator to generate this load and we're going to start using jmeter I'm a",
    "start": "2813090",
    "end": "2819630"
  },
  {
    "text": "dumb as mapo and jmeter came up as a frequent favorite we're going to talk",
    "start": "2819630",
    "end": "2825060"
  },
  {
    "text": "about this other other performance",
    "start": "2825060",
    "end": "2831920"
  },
  {
    "text": "generator load test generators such as Vegeta or Reiner and others but for now",
    "start": "2831920",
    "end": "2840300"
  },
  {
    "text": "let's doom Demeter so I have Demeter",
    "start": "2840300",
    "end": "2846060"
  },
  {
    "text": "installed here at my system that sees",
    "start": "2846060",
    "end": "2852480"
  },
  {
    "text": "two meter",
    "start": "2852480",
    "end": "2855109"
  },
  {
    "text": "let's do it from the on the proper folder alright so I got you meter up",
    "start": "2858120",
    "end": "2883460"
  },
  {
    "text": "let's start a new test plan and I'm adding let's add treads as a tread group",
    "start": "2883460",
    "end": "2892080"
  },
  {
    "text": "and this telling I'm sorry for the small",
    "start": "2892080",
    "end": "2897330"
  },
  {
    "text": "interface in jmeter I'm going to keep zooming this in if if needed",
    "start": "2897330",
    "end": "2903990"
  },
  {
    "text": "and here the it's just to say how many creds I want to create I don't like too",
    "start": "2903990",
    "end": "2911880"
  },
  {
    "text": "much we call it users but what's it doing and how many how long it's going",
    "start": "2911880",
    "end": "2917550"
  },
  {
    "text": "to take to ramp up to this user number and how many times it's going to do this",
    "start": "2917550",
    "end": "2923010"
  },
  {
    "text": "so let's keep one user forever in one second just restart then add a",
    "start": "2923010",
    "end": "2930840"
  },
  {
    "text": "simple HTTP request samplers so we can make an HTTP request and we're going to",
    "start": "2930840",
    "end": "2938010"
  },
  {
    "text": "make this H if you request to our Beanstalk infrastructures so here it is",
    "start": "2938010",
    "end": "2944250"
  },
  {
    "text": "let's take the endpoint of our bespoke stack here it is",
    "start": "2944250",
    "end": "2953150"
  },
  {
    "text": "and this is a server that we are hearing you're eating on HTTP on for aiding and",
    "start": "2958930",
    "end": "2972930"
  },
  {
    "text": "I want the let's start with the Fibonacci iterative and that's it and to",
    "start": "2972930",
    "end": "2986319"
  },
  {
    "text": "see the to see the results I can add a listener and the listeners are listening",
    "start": "2986319",
    "end": "2991809"
  },
  {
    "text": "for the request results and I will view the results in three and this is",
    "start": "2991809",
    "end": "2997059"
  },
  {
    "text": "possibly the simplest Jamie term test case we can create and again we are just",
    "start": "2997059",
    "end": "3006119"
  },
  {
    "text": "starting with this in this series and we are going to get every every episode adding complexity and other requirements",
    "start": "3006119",
    "end": "3015599"
  },
  {
    "text": "to this if you will so here in our case which we have our requests coming along",
    "start": "3015599",
    "end": "3021750"
  },
  {
    "text": "fine and the request is coming on we can add the Fibonacci number in the",
    "start": "3021750",
    "end": "3029910"
  },
  {
    "text": "parameters to request so if I add a parameter named X with the value of 10",
    "start": "3029910",
    "end": "3036990"
  },
  {
    "text": "just to force this CPUs a little bit we can reload the test and see if you want",
    "start": "3036990",
    "end": "3045690"
  },
  {
    "text": "to attend that it's 55 and how its hotter coming along and so everything",
    "start": "3045690",
    "end": "3054180"
  },
  {
    "text": "works fine let's do something more more interesting so I will name this field",
    "start": "3054180",
    "end": "3061410"
  },
  {
    "text": "eater and you can see the suggest we can organize things here and I will also add",
    "start": "3061410",
    "end": "3071299"
  },
  {
    "text": "the determine write the listener to see",
    "start": "3073339",
    "end": "3081599"
  },
  {
    "text": "the results so I will add the summary report so we we can see there the",
    "start": "3081599",
    "end": "3087960"
  },
  {
    "text": "summarized results of what's going on here",
    "start": "3087960",
    "end": "3092510"
  },
  {
    "text": "and let's see let's start again the test",
    "start": "3093359",
    "end": "3102279"
  },
  {
    "text": "and this is what we are wanting to see so in this case we're not varying the",
    "start": "3102279",
    "end": "3110559"
  },
  {
    "start": "3105000",
    "end": "3160000"
  },
  {
    "text": "user but we can start taking some notion of performance we have like 100 samples",
    "start": "3110559",
    "end": "3118209"
  },
  {
    "text": "under requests fired at our destination on average they're taking like 180 185",
    "start": "3118209",
    "end": "3126239"
  },
  {
    "text": "milliseconds to complete the mini-mall was 126 the Mosman for 110 this is the",
    "start": "3126239",
    "end": "3134469"
  },
  {
    "text": "standard deviation nor ever serve so far five of those per second we can reach",
    "start": "3134469",
    "end": "3141039"
  },
  {
    "text": "and so on and so forth so the idea here now is let's see if we increase the user",
    "start": "3141039",
    "end": "3147609"
  },
  {
    "text": "load how this changes right but before that let's make some configuration",
    "start": "3147609",
    "end": "3155819"
  },
  {
    "text": "changes here so I will duplicate this and test the other fibonacci paths that",
    "start": "3155819",
    "end": "3163689"
  },
  {
    "start": "3160000",
    "end": "3185000"
  },
  {
    "text": "we have but on jmeter we have this very useful concept called HTTP defaults we",
    "start": "3163689",
    "end": "3175299"
  },
  {
    "text": "can set the config element HTP config convicted the folks at sea where is HP",
    "start": "3175299",
    "end": "3186039"
  },
  {
    "start": "3185000",
    "end": "3215000"
  },
  {
    "text": "requested force here it is and I will set this as the fall for this thread",
    "start": "3186039",
    "end": "3192609"
  },
  {
    "text": "group so we don't need to repeat this every time so instead of adding this to",
    "start": "3192609",
    "end": "3199119"
  },
  {
    "text": "each and every one of the paths that I have I will have everybody shooting at",
    "start": "3199119",
    "end": "3205089"
  },
  {
    "text": "the same port number the same hosts the same protocol",
    "start": "3205089",
    "end": "3210119"
  },
  {
    "text": "and even I want them with the same X so",
    "start": "3210119",
    "end": "3216099"
  },
  {
    "start": "3215000",
    "end": "3290000"
  },
  {
    "text": "I'll add the same X but let's try more interesting value and first the CPUs a",
    "start": "3216099",
    "end": "3222819"
  },
  {
    "text": "little bit more so I can remove this and shoot and we",
    "start": "3222819",
    "end": "3235160"
  },
  {
    "text": "can see in the results came everything safe coming along fine so we have the",
    "start": "3235160",
    "end": "3241190"
  },
  {
    "text": "fibonacci of plenty coming out and the",
    "start": "3241190",
    "end": "3246259"
  },
  {
    "text": "reports right everything is - works so let's add the give order guys so I will",
    "start": "3246259",
    "end": "3255140"
  },
  {
    "text": "duplicate this to the Fibonacci instead of the iterative version we have",
    "start": "3255140",
    "end": "3261789"
  },
  {
    "text": "recursive one so this is a rack and",
    "start": "3261789",
    "end": "3270819"
  },
  {
    "text": "duplicate again we have a memo acid version I'll generate of a generator",
    "start": "3270819",
    "end": "3278359"
  },
  {
    "text": "version first this is very simple",
    "start": "3278359",
    "end": "3284059"
  },
  {
    "text": "Fibonacci generators but you can see this could be any path on your app web",
    "start": "3284059",
    "end": "3289759"
  },
  {
    "text": "app we could have one for logging one for buy purchase add user register pass",
    "start": "3289759",
    "end": "3297199"
  },
  {
    "text": "different parameters anything you guys would like and there is many approach",
    "start": "3297199",
    "end": "3302569"
  },
  {
    "text": "many different approaches to load testing I don't like recording users so",
    "start": "3302569",
    "end": "3308479"
  },
  {
    "text": "much I'm because this is create it's",
    "start": "3308479",
    "end": "3313640"
  },
  {
    "text": "harder to interpret the results I think the creating request by request by hand needs leads to better results",
    "start": "3313640",
    "end": "3321249"
  },
  {
    "text": "but again this is something that everybody does a bit differently so and",
    "start": "3321249",
    "end": "3326359"
  },
  {
    "text": "the in the end the memoirs version of the of the algorithm yeah yeah just a",
    "start": "3326359",
    "end": "3337249"
  },
  {
    "text": "bit I will review the server side just get let's just get this working and",
    "start": "3337249",
    "end": "3343640"
  },
  {
    "text": "we'll go through review",
    "start": "3343640",
    "end": "3348130"
  },
  {
    "text": "so here's our our load generator let's",
    "start": "3351180",
    "end": "3356250"
  },
  {
    "text": "start firing requests and we can see the",
    "start": "3356250",
    "end": "3362090"
  },
  {
    "text": "the requests coming along and here's just one guy remember that our tread",
    "start": "3362090",
    "end": "3368970"
  },
  {
    "start": "3365000",
    "end": "3440000"
  },
  {
    "text": "group is set to one so we're not imposing a lot of load here we're just",
    "start": "3368970",
    "end": "3374300"
  },
  {
    "text": "playing it nice for for a warm-up we have very similar numbers here for the",
    "start": "3374300",
    "end": "3384800"
  },
  {
    "text": "average for the minimum for the maximum except for the memoirs version that took",
    "start": "3384800",
    "end": "3390660"
  },
  {
    "text": "awhile here but not a lot of differences so let's stop this and try to impose a",
    "start": "3390660",
    "end": "3398940"
  },
  {
    "text": "bit more on this so let's start by doing a bit more intensive calculations on the",
    "start": "3398940",
    "end": "3406440"
  },
  {
    "text": "CPU trying to get the Fibonacci of 30 or something like this and instead of just",
    "start": "3406440",
    "end": "3412830"
  },
  {
    "text": "keeping with one user we're going to run start let's say 10 10 users and ramp up",
    "start": "3412830",
    "end": "3425430"
  },
  {
    "text": "in 60 seconds you can see that this will",
    "start": "3425430",
    "end": "3430470"
  },
  {
    "text": "change things a bit so on the summary report here you can see here on the on",
    "start": "3430470",
    "end": "3441930"
  },
  {
    "start": "3440000",
    "end": "3545000"
  },
  {
    "text": "the top right side of the screen the amount of threads the amount of users that were created in and yes it does",
    "start": "3441930",
    "end": "3450560"
  },
  {
    "text": "this this network delay thing is important if you'd like to reduce the",
    "start": "3450560",
    "end": "3457530"
  },
  {
    "text": "network delays here and that's a very important part of it you can run jmeter from AWS and here i'm",
    "start": "3457530",
    "end": "3466500"
  },
  {
    "text": "running it from desktop you could run it on your own ec2 instance or on",
    "start": "3466500",
    "end": "3471510"
  },
  {
    "text": "workspaces and I'm I have right just that running here and thanks to terminus",
    "start": "3471510",
    "end": "3478080"
  },
  {
    "text": "this is a great tip if you check out Amazon workspaces that's a virtual",
    "start": "3478080",
    "end": "3483960"
  },
  {
    "text": "desktop I have one of those here and it's just a separate desktop on the cloud where I",
    "start": "3483960",
    "end": "3492210"
  },
  {
    "text": "have the same thing running for my tests so I have another jmeter running",
    "start": "3492210",
    "end": "3497430"
  },
  {
    "text": "instance running here with a lot of requests coming along and this is",
    "start": "3497430",
    "end": "3504030"
  },
  {
    "text": "running form for a long time now it's generating some errors and things like",
    "start": "3504030",
    "end": "3509339"
  },
  {
    "text": "this so in but as this one is on AWS",
    "start": "3509339",
    "end": "3514589"
  },
  {
    "text": "it's got four turn Network times so if your network here I'm at an AWS office",
    "start": "3514589",
    "end": "3522420"
  },
  {
    "text": "so the network latency to AWS is probably not going to be a problem but",
    "start": "3522420",
    "end": "3528000"
  },
  {
    "text": "if you need to make sure that network latency is not impacting your tasks I",
    "start": "3528000",
    "end": "3533640"
  },
  {
    "text": "highly recommend running the test from our workspaces or any situations so",
    "start": "3533640",
    "end": "3541770"
  },
  {
    "text": "taking a look at at our tests we can see some interesting things now we can see",
    "start": "3541770",
    "end": "3548730"
  },
  {
    "start": "3545000",
    "end": "3600000"
  },
  {
    "text": "that here the that mean enable the this",
    "start": "3548730",
    "end": "3555210"
  },
  {
    "text": "zone here just real quick I believe it's in Mouse I need to accessibility right I",
    "start": "3555210",
    "end": "3567359"
  },
  {
    "text": "wanna show you guys some important parts",
    "start": "3567359",
    "end": "3573990"
  },
  {
    "text": "of this so this should work so here we",
    "start": "3573990",
    "end": "3579990"
  },
  {
    "text": "can see that as expected the recursive implementation of Fibonacci in average",
    "start": "3579990",
    "end": "3587790"
  },
  {
    "text": "takes three seconds and even if we have no errors now you can see that the",
    "start": "3587790",
    "end": "3594390"
  },
  {
    "text": "minimum and the max and the average for the recursive implementation is very",
    "start": "3594390",
    "end": "3599609"
  },
  {
    "text": "very different than the other implementations so here is again in",
    "start": "3599609",
    "end": "3606390"
  },
  {
    "text": "regular app this would probably be the different transactions and services that",
    "start": "3606390",
    "end": "3611609"
  },
  {
    "text": "you offer and here's one thing we can take a look at and we can see",
    "start": "3611609",
    "end": "3617489"
  },
  {
    "text": "that as we change parameters and change load these values will impact and there",
    "start": "3617489",
    "end": "3625650"
  },
  {
    "text": "are two things here that we are wanting to see when when it's the wellick that",
    "start": "3625650",
    "end": "3635099"
  },
  {
    "text": "question is how do your application behave for in your system has receives",
    "start": "3635099",
    "end": "3641309"
  },
  {
    "text": "load when it changes but what do we want to know well you want to know the",
    "start": "3641309",
    "end": "3647160"
  },
  {
    "text": "numbers the the latency and the error is mostly and we're going to talk about",
    "start": "3647160",
    "end": "3652249"
  },
  {
    "text": "percentiles and and things like this and in other and reports and there is a lot",
    "start": "3652249",
    "end": "3661680"
  },
  {
    "text": "we can do here but for today we're going to be looking at this averages and this",
    "start": "3661680",
    "end": "3667890"
  },
  {
    "text": "errors and make sure that they stay around this so we don't want many errors",
    "start": "3667890",
    "end": "3675390"
  },
  {
    "text": "and we don't want to see this change a lot as the application scales up right",
    "start": "3675390",
    "end": "3682559"
  },
  {
    "text": "and let's let's take a look at how we",
    "start": "3682559",
    "end": "3687989"
  },
  {
    "text": "can make it more interesting so in our tread group instead of just",
    "start": "3687989",
    "end": "3694140"
  },
  {
    "text": "and users let's go and do 20 users or better yet 30 users and instead of",
    "start": "3694140",
    "end": "3702119"
  },
  {
    "text": "ranking in one minute let's go a bit more and gradually and take it in two",
    "start": "3702119",
    "end": "3708930"
  },
  {
    "text": "minutes so when I play this you should see users ramp up to 30 and you know why",
    "start": "3708930",
    "end": "3719009"
  },
  {
    "text": "oh it's starting as we expect with very",
    "start": "3719009",
    "end": "3724349"
  },
  {
    "text": "little problems but soon as things scale we're going to see some things change",
    "start": "3724349",
    "end": "3730109"
  },
  {
    "text": "and why and how we define what changes what how do my application react to this",
    "start": "3730109",
    "end": "3739890"
  },
  {
    "text": "how can we monitor and change what goes on here and as you know this is by cloud",
    "start": "3739890",
    "end": "3747509"
  },
  {
    "text": "watch probably no this is yeah yeah yeah jmeter totally can can be used for",
    "start": "3747509",
    "end": "3754119"
  },
  {
    "text": "testing anything it's just a matter of setting pointing it to to localhost if",
    "start": "3754119",
    "end": "3760930"
  },
  {
    "text": "you put it localhost instead of a W as it will should localhost so let's take a",
    "start": "3760930",
    "end": "3768910"
  },
  {
    "text": "look at these scaling pair of things how does Beanstalk add or remove",
    "start": "3768910",
    "end": "3774119"
  },
  {
    "text": "instances and this is all done by cloud watch so we have a service called called",
    "start": "3774119",
    "end": "3781960"
  },
  {
    "text": "watch and Cole watch is going to trigger alarms and let's take a look at Cole",
    "start": "3781960",
    "end": "3790030"
  },
  {
    "text": "watch monitoring here and metrics and see what's going on so here is one",
    "start": "3790030",
    "end": "3797350"
  },
  {
    "text": "example alarm so this alarm is based on",
    "start": "3797350",
    "end": "3803560"
  },
  {
    "text": "network throughput but there are many different alarms we're going to talk",
    "start": "3803560",
    "end": "3808810"
  },
  {
    "text": "about them a lot and the idea is when a given metric here is that work out when",
    "start": "3808810",
    "end": "3816490"
  },
  {
    "text": "the average over a period of time it could be other statistics some minimum",
    "start": "3816490",
    "end": "3823330"
  },
  {
    "text": "and things like this but when a given a statistic over a period of l value",
    "start": "3823330",
    "end": "3828780"
  },
  {
    "text": "passes a given threshold in this case 2002 million bytes and it will breach",
    "start": "3828780",
    "end": "3836770"
  },
  {
    "text": "the alarm and the interesting thing for today is how we define these alarms as",
    "start": "3836770",
    "end": "3843400"
  },
  {
    "text": "code and this is what I'd like to show you next because I have here this EB",
    "start": "3843400",
    "end": "3849730"
  },
  {
    "text": "extensions directory and this EB extensions is where you tell elastic",
    "start": "3849730",
    "end": "3856810"
  },
  {
    "text": "Beanstalk further properties further missions further templates",
    "start": "3856810",
    "end": "3863920"
  },
  {
    "text": "anything you'd like to customize and make your application install packages",
    "start": "3863920",
    "end": "3869680"
  },
  {
    "text": "run commands everything you claim declaring this dot config files under dot EB extensions and this includes",
    "start": "3869680",
    "end": "3878590"
  },
  {
    "text": "CloudFormation resources so I adding more more confirmation resources",
    "start": "3878590",
    "end": "3885839"
  },
  {
    "text": "from within my Beanstalk app and a good",
    "start": "3885839",
    "end": "3891270"
  },
  {
    "text": "thing is that this beanstalk app it can this Beanstalk confirmation this",
    "start": "3891270",
    "end": "3898890"
  },
  {
    "text": "confirmation from within Beanstalk can make these references so this is a",
    "start": "3898890",
    "end": "3905539"
  },
  {
    "text": "hard-coded name let's say that Beanstalk uses if you want to reference its auto",
    "start": "3905539",
    "end": "3911400"
  },
  {
    "text": "scaling group so it's always scaling in capacity so I created an already scaling",
    "start": "3911400",
    "end": "3918299"
  },
  {
    "text": "policy here bound to the elastic Beanstalk auto scaling group saying that",
    "start": "3918299",
    "end": "3926309"
  },
  {
    "text": "this will add one instance when the alarmed fibers but the alarm is that",
    "start": "3926309",
    "end": "3934859"
  },
  {
    "text": "actually references the the property so",
    "start": "3934859",
    "end": "3941210"
  },
  {
    "text": "the metric and the policy right so here",
    "start": "3941210",
    "end": "3947279"
  },
  {
    "text": "is what my alarm you tune I call it high CPU alarm and if I have an alarm with",
    "start": "3947279",
    "end": "3954710"
  },
  {
    "text": "four ec2 CPU utilization on this particular auto scaling group by",
    "start": "3954710",
    "end": "3961500"
  },
  {
    "text": "Beanstalk when the average for two periods of 60 minutes reaches the",
    "start": "3961500",
    "end": "3969630"
  },
  {
    "text": "threshold of 80 percent I will fire the alarm action scale up so this is telling",
    "start": "3969630",
    "end": "3977579"
  },
  {
    "text": "being stocked telling air blasts to create an alarm on cloud watch when the",
    "start": "3977579",
    "end": "3983309"
  },
  {
    "text": "CPU utilization goes over 80 percent for two minutes on average I will fire does",
    "start": "3983309",
    "end": "3991140"
  },
  {
    "text": "that the scaling policy and this will add one we make the adjustment of",
    "start": "3991140",
    "end": "3998099"
  },
  {
    "text": "putting one more instance to our or skinning group and with this the load",
    "start": "3998099",
    "end": "4003770"
  },
  {
    "text": "will be balanced towards this we have a better",
    "start": "4003770",
    "end": "4009970"
  },
  {
    "text": "however infrastructure so",
    "start": "4009970",
    "end": "4016180"
  },
  {
    "text": "my Mary Collins so then the DNS didn't",
    "start": "4020660",
    "end": "4029150"
  },
  {
    "text": "ask issues or depends on the what DNS issues you are talking about my recordings and the the one thing the",
    "start": "4029150",
    "end": "4038359"
  },
  {
    "text": "that lb does is health check so the instances will be only put into",
    "start": "4038359",
    "end": "4045259"
  },
  {
    "text": "service once they are health checked but",
    "start": "4045259",
    "end": "4050680"
  },
  {
    "text": "there's not much you can do about the DNS caches and things that are outside",
    "start": "4050680",
    "end": "4056660"
  },
  {
    "text": "the enterprise environment so the it depends on what you do what issues you",
    "start": "4056660",
    "end": "4066349"
  },
  {
    "text": "mean like if you give us a clear definition of you the the issues that",
    "start": "4066349",
    "end": "4071390"
  },
  {
    "text": "you mean I can give a further description but you definitely can use",
    "start": "4071390",
    "end": "4078979"
  },
  {
    "text": "this with AOL be Beanstalk and Confirmation do support the application",
    "start": "4078979",
    "end": "4084890"
  },
  {
    "text": "load balancer entirely so let's take a look at the environment that we just",
    "start": "4084890",
    "end": "4091160"
  },
  {
    "text": "created and see how's it's how it's doing it's on 71% patency you can see",
    "start": "4091160",
    "end": "4100940"
  },
  {
    "text": "that we reached 50 percent of CPU utilization and things like this let's",
    "start": "4100940",
    "end": "4107599"
  },
  {
    "text": "go a bit more aggressive and and do like",
    "start": "4107599",
    "end": "4115000"
  },
  {
    "text": "similar reports let's say requests",
    "start": "4115359",
    "end": "4120500"
  },
  {
    "text": "harder Fibonacci's to calculate let's say to the tree for example perhaps add",
    "start": "4120500",
    "end": "4128238"
  },
  {
    "text": "a few users like 35 or so so this I mean",
    "start": "4128239",
    "end": "4135798"
  },
  {
    "text": "five let's do let's do 50 just to see it",
    "start": "4135799",
    "end": "4142219"
  },
  {
    "text": "crack and here on the on the results with few",
    "start": "4142219",
    "end": "4151749"
  },
  {
    "text": "users three users for users we see that the the metrics are still fine but we're",
    "start": "4151749",
    "end": "4159548"
  },
  {
    "text": "going to see that as this progresses and our applications goes on we need to",
    "start": "4159549",
    "end": "4164979"
  },
  {
    "text": "think a bit more of of what to do because this is clearly no it's not",
    "start": "4164979",
    "end": "4174008"
  },
  {
    "text": "going it's going I'm going to have to either change my instance type or think",
    "start": "4174009",
    "end": "4180758"
  },
  {
    "text": "better about my fleet and change my architecture to accommodate the de load",
    "start": "4180759",
    "end": "4186429"
  },
  {
    "text": "that you plan to use so work week if",
    "start": "4186429",
    "end": "4196689"
  },
  {
    "text": "it's possible to use this time of testing against machine learning models deployed on Sage maker yeah totally",
    "start": "4196689",
    "end": "4204639"
  },
  {
    "text": "especially if you put them behind an HTTP endpoint it makes it very much",
    "start": "4204639",
    "end": "4210760"
  },
  {
    "text": "easy and it's the same same idea just fire HTTP requests and what's behind if",
    "start": "4210760",
    "end": "4218499"
  },
  {
    "text": "it's sage maker evaluation or whatever that Modi beat a pose we're going to see",
    "start": "4218499",
    "end": "4226030"
  },
  {
    "text": "this with machine learning databases serverless all sorts of resources thanks",
    "start": "4226030",
    "end": "4232179"
  },
  {
    "text": "for asking about machine learning that's something we definitely should include in this series and as you can see here",
    "start": "4232179",
    "end": "4241179"
  },
  {
    "text": "our average times our like the Fibonacci",
    "start": "4241179",
    "end": "4247889"
  },
  {
    "text": "recursive is taking like 22 seconds already huh on average and five seconds",
    "start": "4247889",
    "end": "4256300"
  },
  {
    "text": "four seconds all those averages are increasing a lot and this is clearly",
    "start": "4256300",
    "end": "4261820"
  },
  {
    "text": "because mine as requests hey Eric are taking longer to process because we",
    "start": "4261820",
    "end": "4268630"
  },
  {
    "text": "increase it the people number we requested and we have more people asking things are starting to",
    "start": "4268630",
    "end": "4275480"
  },
  {
    "text": "queue up so requests are having to wait before they're calculated in the queue",
    "start": "4275480",
    "end": "4281750"
  },
  {
    "text": "and if they take long enough as we will see it may even cause some errors but",
    "start": "4281750",
    "end": "4290239"
  },
  {
    "text": "this is certainly causing our CP utilization to go higher so if we open",
    "start": "4290239",
    "end": "4296630"
  },
  {
    "text": "the the CPU here the monitoring period takes a minute it will take a while",
    "start": "4296630",
    "end": "4304640"
  },
  {
    "text": "before we see the the actual results but soon enough we will see the our metric",
    "start": "4304640",
    "end": "4313760"
  },
  {
    "text": "min breached and our alarm getting caught so here we have the alarm that we",
    "start": "4313760",
    "end": "4319580"
  },
  {
    "text": "define the high CPU alarm that we define on on the environment and it's just",
    "start": "4319580",
    "end": "4325370"
  },
  {
    "text": "waiting for the for that 80% threshold should be to be hit before it fires so",
    "start": "4325370",
    "end": "4333650"
  },
  {
    "text": "that's that's how that's how Beanstalk",
    "start": "4333650",
    "end": "4339500"
  },
  {
    "text": "scales and I mean I hope we will reach a",
    "start": "4339500",
    "end": "4345890"
  },
  {
    "text": "hundred percent is it shooting I don't know why it's down it's still shooting",
    "start": "4345890",
    "end": "4352790"
  },
  {
    "text": "it's 15 users which we will see the CPU",
    "start": "4352790",
    "end": "4357800"
  },
  {
    "text": "getting high soon enough ok and when it",
    "start": "4357800",
    "end": "4364370"
  },
  {
    "text": "when it reaches the the alarm will see",
    "start": "4364370",
    "end": "4370219"
  },
  {
    "text": "the the dashboard the they see to dashboard here we have two instances",
    "start": "4370219",
    "end": "4376180"
  },
  {
    "text": "right one running we can see that they are in different AZ's and this is",
    "start": "4376180",
    "end": "4382130"
  },
  {
    "text": "because the minimum of instances that we have is true and you if you'd like to",
    "start": "4382130",
    "end": "4387710"
  },
  {
    "text": "see details for individual instances here we have instance monitoring for",
    "start": "4387710",
    "end": "4394130"
  },
  {
    "text": "each one and I stopped and starts the test so that's why we are seeing this",
    "start": "4394130",
    "end": "4401110"
  },
  {
    "text": "for ions I'm having to wait a little bit for the new ones to come up but very",
    "start": "4401110",
    "end": "4407800"
  },
  {
    "text": "soon we should have this environment totally swamped the by Rick by our Dream",
    "start": "4407800",
    "end": "4415450"
  },
  {
    "text": "Eater requests right at least that's what I'm hoping to see here and when",
    "start": "4415450",
    "end": "4426040"
  },
  {
    "text": "that happens we are going to see perhaps some errors when we reach a hundred",
    "start": "4426040",
    "end": "4432010"
  },
  {
    "text": "percent or or even more so let's just wait for this monitoring to be updated",
    "start": "4432010",
    "end": "4440380"
  },
  {
    "text": "so the Beanstalk is if I'm warning here",
    "start": "4440380",
    "end": "4445420"
  },
  {
    "text": "that our environment is with 100 CPOE",
    "start": "4445420",
    "end": "4451000"
  },
  {
    "text": "news so we are effectively we still have",
    "start": "4451000",
    "end": "4456870"
  },
  {
    "text": "100 percent of to hundreds not errors but if we keep pushing this we will",
    "start": "4456870",
    "end": "4463450"
  },
  {
    "text": "certainly start getting errors here and we can see the latency percentiles the",
    "start": "4463450",
    "end": "4472050"
  },
  {
    "text": "99% of our requests are under 39 seconds 90% are under this amount and so and so",
    "start": "4472050",
    "end": "4479440"
  },
  {
    "text": "forth so we can see that our environment is totally overloaded let's say and soon",
    "start": "4479440",
    "end": "4488110"
  },
  {
    "text": "enough we should have the target and you",
    "start": "4488110",
    "end": "4495250"
  },
  {
    "text": "can see that those things are not like instant when they take it takes a while for the for the monitoring to pick and",
    "start": "4495250",
    "end": "4503590"
  },
  {
    "text": "react and fire up a new instance so that's what we are doing here so let's",
    "start": "4503590",
    "end": "4511450"
  },
  {
    "text": "just I will leave this running and soon enough we should we should see it",
    "start": "4511450",
    "end": "4517420"
  },
  {
    "text": "catching up another thing I'd like to show you guys is different approaches to load generation right now we are using",
    "start": "4517420",
    "end": "4525760"
  },
  {
    "text": "jmeter and this is something I'd like to know from you what you guys prefer that we do",
    "start": "4525760",
    "end": "4531190"
  },
  {
    "text": "the series so here's jmeter you can see how we we start requests how we define",
    "start": "4531190",
    "end": "4544449"
  },
  {
    "text": "everything in a jiff in a graphical manner so here in jmeter it's a visual",
    "start": "4544449",
    "end": "4552640"
  },
  {
    "text": "so very fearful to in the sense that if you want to know what it's doing you",
    "start": "4552640",
    "end": "4558250"
  },
  {
    "text": "have to click and click and click and see the settings and see the the tree",
    "start": "4558250",
    "end": "4564610"
  },
  {
    "text": "and see the reports and everything is very graphical in a sense right of",
    "start": "4564610",
    "end": "4571570"
  },
  {
    "text": "course that you can do the meter without this you can run the meter from the",
    "start": "4571570",
    "end": "4577360"
  },
  {
    "text": "shell and have a report but it's not the way it's usually use it or the the",
    "start": "4577360",
    "end": "4587860"
  },
  {
    "text": "features that it has for reporting in this way Arabic limited but the emitter is a very powerful tool and very",
    "start": "4587860",
    "end": "4595000"
  },
  {
    "text": "complete in a lot of ways and one thing that I like that I'd like to show that",
    "start": "4595000",
    "end": "4600219"
  },
  {
    "text": "very unique to the meter as the tube set that you have as it's a very popular and",
    "start": "4600219",
    "end": "4607410"
  },
  {
    "text": "well traditional Java tool you have all sorts of plugins and here in G meter",
    "start": "4607410",
    "end": "4615610"
  },
  {
    "text": "plugins is a very cool website with everything related to other types of",
    "start": "4615610",
    "end": "4622719"
  },
  {
    "text": "tests so if you want to test has loop SSH or other types of reports there's",
    "start": "4622719",
    "end": "4628300"
  },
  {
    "text": "all sorts of plugins that you can install and check one that I'm that's",
    "start": "4628300",
    "end": "4635260"
  },
  {
    "text": "really popular is the G meters schedule",
    "start": "4635260",
    "end": "4643380"
  },
  {
    "text": "Bookman I don't remember the exact name so this",
    "start": "4643380",
    "end": "4650140"
  },
  {
    "text": "is the exact name concurrency thread group plugin here you can instead of defining just a",
    "start": "4650140",
    "end": "4658360"
  },
  {
    "text": "friend group and a ramp-up period you can add more steps you",
    "start": "4658360",
    "end": "4664650"
  },
  {
    "text": "can start with a given load and maintain that for a while and then ramp up to the",
    "start": "4664650",
    "end": "4671310"
  },
  {
    "text": "next level and maintain that for a while and depending on the type of best you're",
    "start": "4671310",
    "end": "4677400"
  },
  {
    "text": "trying to build this is very very useful so take this jmeter plugins name a",
    "start": "4677400",
    "end": "4682920"
  },
  {
    "text": "really really help but still we were talking about taking this graphical",
    "start": "4682920",
    "end": "4688670"
  },
  {
    "text": "orientation and doing things graphically I'd like to to show things yeah let me",
    "start": "4688670",
    "end": "4702120"
  },
  {
    "text": "let me take a look at this question so mighty Collins says by the for lastly",
    "start": "4702120",
    "end": "4708920"
  },
  {
    "text": "being software returned at the addresses when clients perform DNS resolution with",
    "start": "4708920",
    "end": "4714060"
  },
  {
    "text": "the records minimum your order yeah the thing is always used the DNS name you",
    "start": "4714060",
    "end": "4719550"
  },
  {
    "text": "never used the IP but there is no",
    "start": "4719550",
    "end": "4727710"
  },
  {
    "text": "additional delay from using the alb or you have to understand is that one onin",
    "start": "4727710",
    "end": "4733020"
  },
  {
    "text": "instance comes up it will be added to the load balancer and health tracking and one only once it's up and running it",
    "start": "4733020",
    "end": "4740580"
  },
  {
    "text": "will be serving under the load balancer so it's perfectly safe and works with",
    "start": "4740580",
    "end": "4748170"
  },
  {
    "text": "both load balancers but back to the load generators I'd like to show another load",
    "start": "4748170",
    "end": "4754920"
  },
  {
    "text": "generator besides jmeter that takes a different approach so we can see how",
    "start": "4754920",
    "end": "4762030"
  },
  {
    "text": "this things can be a bit different and I'd like to show Gatling yakking is a",
    "start": "4762030",
    "end": "4769800"
  },
  {
    "text": "very very popular tool but instead of defining the tests as an interface and",
    "start": "4769800",
    "end": "4779310"
  },
  {
    "text": "saving them as XML it's code so when you",
    "start": "4779310",
    "end": "4786120"
  },
  {
    "text": "save this this jmeter file here is the jmx here's the XML that jmeter generates",
    "start": "4786120",
    "end": "4793770"
  },
  {
    "text": "you can't understand like you're not going to look at this understand what it's doing but it's all",
    "start": "4793770",
    "end": "4800160"
  },
  {
    "text": "define it here in contrast when you get a gatling definition it's it's cold so",
    "start": "4800160",
    "end": "4809660"
  },
  {
    "text": "here's the skala cold it's a scowl but it's a very simplified or a very adapted",
    "start": "4809660",
    "end": "4819270"
  },
  {
    "text": "version of Scala the main specific language let's say for HTTP load",
    "start": "4819270",
    "end": "4825840"
  },
  {
    "text": "generation so here I'm doing the same thing that I did for my jmeter test and",
    "start": "4825840",
    "end": "4832380"
  },
  {
    "text": "how we even get the the same Beanstalk environment that we are using so let's",
    "start": "4832380",
    "end": "4840140"
  },
  {
    "text": "fire against it from two tools at the same time and see what happens and I'm going to use this and of course",
    "start": "4840140",
    "end": "4853140"
  },
  {
    "text": "it could be passing this as a parameter or doing this in many different ways I",
    "start": "4853140",
    "end": "4858810"
  },
  {
    "text": "just wanted to show you that I am defined defining a value X of 33 or for",
    "start": "4858810",
    "end": "4868440"
  },
  {
    "text": "HTTP send test scenarios the same ones that we have and I'm ramping up to 100",
    "start": "4868440",
    "end": "4877680"
  },
  {
    "text": "finally users let's just do 12 over 30 seconds and just not fire so badly",
    "start": "4877680",
    "end": "4885270"
  },
  {
    "text": "against our environment and see what it what it does so how do we called Gatling",
    "start": "4885270",
    "end": "4893660"
  },
  {
    "text": "this is the script to call it here is where it's installed in my machine I",
    "start": "4893660",
    "end": "4899900"
  },
  {
    "text": "just Gatling dot SF with the at the current",
    "start": "4899900",
    "end": "4908070"
  },
  {
    "text": "directory and the name of the the testing class and that's it so oops here",
    "start": "4908070",
    "end": "4918810"
  },
  {
    "text": "it's better oh I have I don't have gasoline",
    "start": "4918810",
    "end": "4928650"
  },
  {
    "text": "installed on this machine so let's do this now I was testing this on a separate one so",
    "start": "4928650",
    "end": "4937369"
  },
  {
    "text": "this is Gatling",
    "start": "4937369",
    "end": "4941060"
  },
  {
    "text": "and",
    "start": "4953420",
    "end": "4956420"
  },
  {
    "text": "I just copied to my home directory and now it should work cannot be found the",
    "start": "4959260",
    "end": "4972940"
  },
  {
    "text": "classpath you should have worked so on",
    "start": "4972940",
    "end": "4983290"
  },
  {
    "text": "the currently that in the current directory the test is testing 101 on",
    "start": "4983290",
    "end": "4991410"
  },
  {
    "text": "testing the pundits caller on the",
    "start": "4991980",
    "end": "4999130"
  },
  {
    "text": "package as Doug's on user files simulations everything looks good I",
    "start": "4999130",
    "end": "5006270"
  },
  {
    "text": "sincerely don't know what's going on here oh yeah I'm perhaps on directory",
    "start": "5006270",
    "end": "5017390"
  },
  {
    "text": "let me try calling Gatlinburg Sh directly here it usually asks for the",
    "start": "5041929",
    "end": "5052959"
  },
  {
    "text": "user file simulations",
    "start": "5052959",
    "end": "5057189"
  },
  {
    "text": "yep sorry about this guys I don't know what's why it's not finding my my",
    "start": "5066570",
    "end": "5073230"
  },
  {
    "text": "simulation this use it to work",
    "start": "5073230",
    "end": "5078500"
  },
  {
    "text": "well I'm not I'm not debugging this now I will take a look at why this is isn't",
    "start": "5090130",
    "end": "5096460"
  },
  {
    "text": "work and we take a look at Gatling in the next episode but again the important",
    "start": "5096460",
    "end": "5103690"
  },
  {
    "text": "thing the information that we would get out of getting report is the exact same",
    "start": "5103690",
    "end": "5108880"
  },
  {
    "text": "the important part is how you define things instead of defining things",
    "start": "5108880",
    "end": "5116070"
  },
  {
    "text": "visually it's defining encode now it's",
    "start": "5116070",
    "end": "5122380"
  },
  {
    "text": "not about the extension because it's the",
    "start": "5122380",
    "end": "5129130"
  },
  {
    "text": "gasoline horn is working and Gatling is being cold let's see if on the",
    "start": "5129130",
    "end": "5142560"
  },
  {
    "text": "simulation folder is here minus SF start",
    "start": "5142620",
    "end": "5153550"
  },
  {
    "text": "so this is the yeah",
    "start": "5153550",
    "end": "5161130"
  },
  {
    "text": "it's probably searching for the directory for the filing in a separate",
    "start": "5171280",
    "end": "5177999"
  },
  {
    "text": "folder so I will give just one attempt",
    "start": "5177999",
    "end": "5183989"
  },
  {
    "text": "it may be the case that instead of looking on user file simulations as",
    "start": "5183989",
    "end": "5190449"
  },
  {
    "text": "ducks where it's my project it may be looking at its own folder user file",
    "start": "5190449",
    "end": "5197729"
  },
  {
    "text": "simulations here so I don't know let's see yeah I'm not guessing we'll take a",
    "start": "5197729",
    "end": "5211570"
  },
  {
    "text": "look at this offline and tell you guys in the next episode what it was and we",
    "start": "5211570",
    "end": "5218260"
  },
  {
    "text": "can take a better look at Gatlin but the the idea is the same right yet run the",
    "start": "5218260",
    "end": "5226570"
  },
  {
    "text": "run this HTTP tests over this period of time with this ramping up so this many",
    "start": "5226570",
    "end": "5233199"
  },
  {
    "text": "users but the thing is when you take a look at the Gatling test or if you take",
    "start": "5233199",
    "end": "5239320"
  },
  {
    "text": "a look at VG at Locust it's the same idea so what goes to load testing will",
    "start": "5239320",
    "end": "5246849"
  },
  {
    "text": "be the same thing yeah I didn't even use",
    "start": "5246849",
    "end": "5252729"
  },
  {
    "text": "the C I just called Gatling even without",
    "start": "5252729",
    "end": "5257829"
  },
  {
    "text": "parameters it doesn't find the you should have asked it for the further",
    "start": "5257829",
    "end": "5263110"
  },
  {
    "text": "files but Gatling has this this some of",
    "start": "5263110",
    "end": "5269019"
  },
  {
    "text": "these issues and this file only mechanism is a bit weird I will have I",
    "start": "5269019",
    "end": "5275949"
  },
  {
    "text": "will definitely check have to check it out so sorry about that but the",
    "start": "5275949",
    "end": "5282130"
  },
  {
    "text": "important thing is the the difference and you can see the same thing for other languages such as Python has its own",
    "start": "5282130",
    "end": "5290280"
  },
  {
    "text": "version and there are many many other tools that the similar things and in",
    "start": "5290280",
    "end": "5298869"
  },
  {
    "text": "this series we are going to take a look at many of the we're just starting today with jmeter",
    "start": "5298869",
    "end": "5304530"
  },
  {
    "text": "and should be doing a bit of catalan but that would be on the next one and only",
    "start": "5304530",
    "end": "5319190"
  },
  {
    "text": "guest that's what I was looking for on the guest here you have all the load",
    "start": "5319190",
    "end": "5328260"
  },
  {
    "text": "generators that I'm considering here so just as a quick round we took a look at",
    "start": "5328260",
    "end": "5335280"
  },
  {
    "text": "jmeter gatling locust it's another code basil but for python",
    "start": "5335280",
    "end": "5341100"
  },
  {
    "text": "based on Python Vegeta will take a file of HTTP request definitions and iterate",
    "start": "5341100",
    "end": "5348510"
  },
  {
    "text": "through them very simple tool but very very useful bees with machine guns have a property",
    "start": "5348510",
    "end": "5356250"
  },
  {
    "text": "that they do distributed load testing very well with spin up a cluster of ec2",
    "start": "5356250",
    "end": "5361710"
  },
  {
    "text": "instances and fire against you serverless artillery is this similar",
    "start": "5361710",
    "end": "5367440"
  },
  {
    "text": "idea but without using servers or machines running on a de brest lambda",
    "start": "5367440",
    "end": "5372570"
  },
  {
    "text": "and Dryden grinders are old to form for Java based load testing as well that",
    "start": "5372570",
    "end": "5379500"
  },
  {
    "text": "also does distributive testing but a bit deprecated not so much actively built",
    "start": "5379500",
    "end": "5387240"
  },
  {
    "text": "anymore so let's take a look at the most important parts for for today so and I",
    "start": "5387240",
    "end": "5398850"
  },
  {
    "text": "let's see if the if we have more instances here by by any chance so still",
    "start": "5398850",
    "end": "5409590"
  },
  {
    "text": "the the same - I guess we're not putting enough load on this let's go and stop",
    "start": "5409590",
    "end": "5418920"
  },
  {
    "text": "this and in white 35 or even 40 just to",
    "start": "5418920",
    "end": "5425970"
  },
  {
    "text": "completely overload those instances and",
    "start": "5425970",
    "end": "5431210"
  },
  {
    "text": "wait and now it's certainly going to fired an alarm and I have a few of those",
    "start": "5431210",
    "end": "5442059"
  },
  {
    "text": "running here in a separate environment and we can also add the the other thing",
    "start": "5442059",
    "end": "5451979"
  },
  {
    "text": "I'd like to show you guys is how to create everything at once so again the",
    "start": "5451979",
    "end": "5459309"
  },
  {
    "text": "mo that we built and generated everything is running at the same time",
    "start": "5459309",
    "end": "5467199"
  },
  {
    "text": "here in confirmation so let me run it",
    "start": "5467199",
    "end": "5476369"
  },
  {
    "text": "with so it's going to do exactly the",
    "start": "5476880",
    "end": "5486399"
  },
  {
    "text": "same thing create the same resources based on the same templates but it's going to do all in one step and run on",
    "start": "5486399",
    "end": "5494169"
  },
  {
    "text": "them on the same and bind them on the",
    "start": "5494169",
    "end": "5501939"
  },
  {
    "text": "same stack so here you see that when you use nested stacks the stacks that are",
    "start": "5501939",
    "end": "5507429"
  },
  {
    "text": "nested so here as nested so you can know that their child of this one and if I",
    "start": "5507429",
    "end": "5514869"
  },
  {
    "text": "delete this one it will delete all the child ones if I update it it will update",
    "start": "5514869",
    "end": "5521050"
  },
  {
    "text": "all the child one so this is a difference between the nested sags and",
    "start": "5521050",
    "end": "5526059"
  },
  {
    "text": "cross deck references so this is pretty",
    "start": "5526059",
    "end": "5532119"
  },
  {
    "text": "much what I have to share with you guys today and the important things here is",
    "start": "5532119",
    "end": "5540010"
  },
  {
    "text": "how you define your infrastructure as code and this is the app that I built",
    "start": "5540010",
    "end": "5546399"
  },
  {
    "text": "for us to start testing the simple dogs here and we are going to add more",
    "start": "5546399",
    "end": "5552639"
  },
  {
    "text": "resources to this app the server less resources databases containers just like",
    "start": "5552639",
    "end": "5559119"
  },
  {
    "text": "we did for a servers in mini stock we're going to do for all sorts of AWS things",
    "start": "5559119",
    "end": "5565479"
  },
  {
    "text": "and the way we make the templates is by",
    "start": "5565479",
    "end": "5571810"
  },
  {
    "text": "using the scroll stack references so make sure you understand this import",
    "start": "5571810",
    "end": "5577119"
  },
  {
    "text": "value and this export value here so this is the these are the statements that",
    "start": "5577119",
    "end": "5586630"
  },
  {
    "text": "allows you to share values between stacks with a very simple naming",
    "start": "5586630",
    "end": "5592949"
  },
  {
    "text": "standard you can find things and modularize or development with",
    "start": "5592949",
    "end": "5598270"
  },
  {
    "text": "confirmation and any other it supported AWS services and here's the important",
    "start": "5598270",
    "end": "5605619"
  },
  {
    "text": "idea of building your architecture in layers so we have the s3 bucket for the",
    "start": "5605619",
    "end": "5611980"
  },
  {
    "text": "files the hav PC with the networking infrastructure on top of it environments",
    "start": "5611980",
    "end": "5619420"
  },
  {
    "text": "that we want and the fast and this helps a lot because when you're testing your",
    "start": "5619420",
    "end": "5626590"
  },
  {
    "text": "app you can go to your load to your",
    "start": "5626590",
    "end": "5633989"
  },
  {
    "text": "properties file to your templates and make several tests at once for example",
    "start": "5633989",
    "end": "5639159"
  },
  {
    "text": "say that I want this environment but I",
    "start": "5639159",
    "end": "5644679"
  },
  {
    "text": "want to one with small instances one with instance type I don't know the true",
    "start": "5644679",
    "end": "5653469"
  },
  {
    "text": "large for example so you can so you can",
    "start": "5653469",
    "end": "5661630"
  },
  {
    "text": "see how this impacts on on your application performance and the the",
    "start": "5661630",
    "end": "5669850"
  },
  {
    "text": "whole idea here is setting this numbers and passing it on on your favorite",
    "start": "5669850",
    "end": "5676810"
  },
  {
    "text": "loading generator here we're talking Demeter you could be using Gatling",
    "start": "5676810",
    "end": "5682480"
  },
  {
    "text": "low-cost and others we certainly are industries checking how things work so",
    "start": "5682480",
    "end": "5688780"
  },
  {
    "text": "we can see that things are queuing up a lot we have errors already and let's see",
    "start": "5688780",
    "end": "5695469"
  },
  {
    "text": "how the the being salty environment is managing",
    "start": "5695469",
    "end": "5701580"
  },
  {
    "text": "so CPU got up to 100% but got down",
    "start": "5705449",
    "end": "5711100"
  },
  {
    "text": "suddenly after I'm apparently not hitting this hard enough or perhaps too",
    "start": "5711100",
    "end": "5719650"
  },
  {
    "text": "hard no not yeah certainly not enough",
    "start": "5719650",
    "end": "5732699"
  },
  {
    "text": "because I have as I have true instances this is per instance but we're we",
    "start": "5732699",
    "end": "5738159"
  },
  {
    "text": "spotted a test but we are back to 100% very soon we should have our reasons",
    "start": "5738159",
    "end": "5746440"
  },
  {
    "text": "coming up it's just wait a big moment",
    "start": "5746440",
    "end": "5755230"
  },
  {
    "text": "for that and this is all for today folks if you have any question or comment at",
    "start": "5755230",
    "end": "5761380"
  },
  {
    "text": "all our next episode is this Friday and we are going to do a very similar tests but we've without",
    "start": "5761380",
    "end": "5769690"
  },
  {
    "text": "servers we're going to use server less functions on AWS lambda and see how much",
    "start": "5769690",
    "end": "5778389"
  },
  {
    "text": "more or less performant that is compared to ec2 instances so we are going to fire",
    "start": "5778389",
    "end": "5786330"
  },
  {
    "text": "at the same code at the same time at instances containers and functions big",
    "start": "5786330",
    "end": "5793420"
  },
  {
    "text": "instances big functions small instances small functions and containers and let's",
    "start": "5793420",
    "end": "5798880"
  },
  {
    "text": "see starts taking some performance understanding and trying to understand",
    "start": "5798880",
    "end": "5806170"
  },
  {
    "text": "the perfect order first the performance characteristics but most importantly the",
    "start": "5806170",
    "end": "5811449"
  },
  {
    "text": "scaling characteristics you can see that here scaling is totally on me and I'm",
    "start": "5811449",
    "end": "5819190"
  },
  {
    "text": "responsible for setting the alarms and saying that when this criteria happens",
    "start": "5819190",
    "end": "5826120"
  },
  {
    "text": "fire ignoring census or last instances and I did it",
    "start": "5826120",
    "end": "5831540"
  },
  {
    "text": "here so this is the scale up and I'd like to leave you guys the exercise of",
    "start": "5831540",
    "end": "5840130"
  },
  {
    "text": "doing the scale town so if you send me the skill down pour request I would be",
    "start": "5840130",
    "end": "5847240"
  },
  {
    "text": "very happy to to add it to our app and even other scale up criterias that you",
    "start": "5847240",
    "end": "5854230"
  },
  {
    "text": "may have so scale up by memory or by",
    "start": "5854230",
    "end": "5860530"
  },
  {
    "text": "network or by any other criteria any metric that you see on table watch can",
    "start": "5860530",
    "end": "5866620"
  },
  {
    "text": "be used for for scaling and this is how you define it I'll learn less detail",
    "start": "5866620",
    "end": "5873730"
  },
  {
    "text": "that I'd like to highlight is this policy type on our scaling and I added",
    "start": "5873730",
    "end": "5879730"
  },
  {
    "text": "it to our gift and hearing the gifts you",
    "start": "5879730",
    "end": "5884740"
  },
  {
    "text": "can see the dynamics gain for Amazon ec2",
    "start": "5884740",
    "end": "5893620"
  },
  {
    "text": "also scaling link and this will show you that we have this three different",
    "start": "5893620",
    "end": "5900600"
  },
  {
    "text": "scaling policy types you can either track I scale for example say that you",
    "start": "5900600",
    "end": "5907030"
  },
  {
    "text": "want to keep at maximum 50% CPU and it will scale up and down to this target or",
    "start": "5907030",
    "end": "5914470"
  },
  {
    "text": "step scaling where you increment or decrease the capacity of your resources to scale up and down or a simple scaling",
    "start": "5914470",
    "end": "5922390"
  },
  {
    "text": "where you have this step scaling actually can be smart about how much",
    "start": "5922390",
    "end": "5929110"
  },
  {
    "text": "resources to add or remove so if you if you if you say 80% CPU add one instance",
    "start": "5929110",
    "end": "5936370"
  },
  {
    "text": "but 90 percents if you add two instances and 100% CPU add three instances and",
    "start": "5936370",
    "end": "5942460"
  },
  {
    "text": "simple scaling it's always the same scaling adjustment and this is what this",
    "start": "5942460",
    "end": "5949450"
  },
  {
    "text": "scaling type property is and this is why this is what it's doing here right so",
    "start": "5949450",
    "end": "5959929"
  },
  {
    "text": "let's take one final look and things see how we are doing in our beanstalk",
    "start": "5959929",
    "end": "5968060"
  },
  {
    "text": "environment still not a lot of load that mean I will leave it up to you guys",
    "start": "5968060",
    "end": "5978610"
  },
  {
    "text": "I'm let's just wait for just one more",
    "start": "5978610",
    "end": "5983719"
  },
  {
    "text": "bit and if not we're going to end up here but I would really like to see this",
    "start": "5983719",
    "end": "5989350"
  },
  {
    "text": "coming up it's hard perhaps sometimes it's hard for Network latencies and",
    "start": "5989350",
    "end": "5996050"
  },
  {
    "text": "things like this to push enough load to see the the results going on if this is",
    "start": "5996050",
    "end": "6003820"
  },
  {
    "text": "the case here I can always use my ec2 instance and provide a little push to",
    "start": "6003820",
    "end": "6011320"
  },
  {
    "text": "this so let's do just that how we would get the Beanstalk then I have here and",
    "start": "6011320",
    "end": "6019659"
  },
  {
    "text": "use my workspaces instance to fire more load and make sure that we're going to",
    "start": "6019659",
    "end": "6026350"
  },
  {
    "text": "see in this instance is coming off and I",
    "start": "6026350",
    "end": "6035400"
  },
  {
    "text": "will stop this clean it set the target",
    "start": "6035400",
    "end": "6043469"
  },
  {
    "text": "copy this link yeah I think it's not even responding anymore right that's",
    "start": "6058250",
    "end": "6064910"
  },
  {
    "text": "that's a problem when it responds that's one hard thing about load testing when",
    "start": "6064910",
    "end": "6071330"
  },
  {
    "text": "when you start getting errors and we can probably we're probably going to see",
    "start": "6071330",
    "end": "6077930"
  },
  {
    "text": "some errors coming up here say it's already airing and when it starts to to",
    "start": "6077930",
    "end": "6086840"
  },
  {
    "text": "error out the errors points comes very quickly so your load average come down",
    "start": "6086840",
    "end": "6093170"
  },
  {
    "text": "so that's why you see the peaks that late the average load comes up but then",
    "start": "6093170",
    "end": "6099290"
  },
  {
    "text": "it starts airing and it comes down and it comes up again so it's maybe a bit",
    "start": "6099290",
    "end": "6105230"
  },
  {
    "text": "hard to sustain enough load to to actually show it running and scaling",
    "start": "6105230",
    "end": "6113210"
  },
  {
    "text": "another thing we could do is reduce the the scaling criterion or something like",
    "start": "6113210",
    "end": "6118640"
  },
  {
    "text": "this but definitely we need to align our",
    "start": "6118640",
    "end": "6123850"
  },
  {
    "text": "scaling so that this doesn't happen this doesn't happen so in the next episode of",
    "start": "6123850",
    "end": "6130160"
  },
  {
    "text": "the series what we're going to do is how we create the scaling rules so that this",
    "start": "6130160",
    "end": "6139420"
  },
  {
    "text": "doesn't happen so you don't see this so you can scale before you see errors and",
    "start": "6139420",
    "end": "6146270"
  },
  {
    "text": "you see the average going up and your application goes down you can see that I",
    "start": "6146270",
    "end": "6152780"
  },
  {
    "text": "have totally killed my app my apt is now iris totally responsive it's not even",
    "start": "6152780",
    "end": "6160850"
  },
  {
    "text": "responding the health checks and a lot of requests are feeling with the request",
    "start": "6160850",
    "end": "6167120"
  },
  {
    "text": "code 500 so to finally answer this how",
    "start": "6167120",
    "end": "6172580"
  },
  {
    "text": "how does our system without changes in the math we can see that this system in",
    "start": "6172580",
    "end": "6178670"
  },
  {
    "text": "specific is not taking the changes very well because when we load it up it",
    "start": "6178670",
    "end": "6184550"
  },
  {
    "text": "doesn't scale fast enough it has it shows a bit of error so in the next",
    "start": "6184550",
    "end": "6191099"
  },
  {
    "text": "episodes of this we are trying to fix this I was just trying to show you the",
    "start": "6191099",
    "end": "6197190"
  },
  {
    "text": "most important resources here so that's how you create elastic Beanstalk",
    "start": "6197190",
    "end": "6204710"
  },
  {
    "text": "environments in CloudFormation this is how you use nested stacks and cross tech",
    "start": "6204710",
    "end": "6212699"
  },
  {
    "text": "references to build your confirmation environment so we are doing a lot of",
    "start": "6212699",
    "end": "6218449"
  },
  {
    "text": "infrastructure as code and this is how I like to build my confirmation templates",
    "start": "6218449",
    "end": "6224699"
  },
  {
    "text": "and shell script to trigger them and pass parameters from one to another and",
    "start": "6224699",
    "end": "6233210"
  },
  {
    "text": "we saw chain meter and the most important emitter configuration",
    "start": "6233239",
    "end": "6238429"
  },
  {
    "text": "components the thread group the for generating users and ramping things up",
    "start": "6238429",
    "end": "6245190"
  },
  {
    "text": "the requests the falls with the configuration for each request the definition for the request and we want",
    "start": "6245190",
    "end": "6250860"
  },
  {
    "text": "to shoot and add the results three and summer reports if you don't like the UI",
    "start": "6250860",
    "end": "6257699"
  },
  {
    "text": "again we can use I have I scraped here to launch a meter from the from the",
    "start": "6257699",
    "end": "6265139"
  },
  {
    "text": "shell and this would run the same the same test case but I don't have the G",
    "start": "6265139",
    "end": "6277260"
  },
  {
    "text": "meter shell installed Young's machine sorry about that but it's the the same",
    "start": "6277260",
    "end": "6282780"
  },
  {
    "text": "idea the same commands but generating the output in in an HTML form I'm not",
    "start": "6282780",
    "end": "6289770"
  },
  {
    "text": "going to do this now because the the report is not so useful especially as we",
    "start": "6289770",
    "end": "6295260"
  },
  {
    "text": "don't have the gap in one tool to compare but I can say we take a look at",
    "start": "6295260",
    "end": "6300869"
  },
  {
    "text": "that in the next sessions so that's it for today I hope you've enjoyed our",
    "start": "6300869",
    "end": "6306650"
  },
  {
    "text": "overview of load testing and infrastructure as code with called",
    "start": "6306650",
    "end": "6311760"
  },
  {
    "text": "formation and Beanstalk and yeah when",
    "start": "6311760",
    "end": "6319110"
  },
  {
    "text": "it's failing just answering the terminals yeah it does respond 500 if we take a",
    "start": "6319110",
    "end": "6325000"
  },
  {
    "text": "look at the Beanstalk environment in monitoring we can we can see the on",
    "start": "6325000",
    "end": "6339040"
  },
  {
    "text": "health actually you can see the that 7% of our requests are 500 requests work",
    "start": "6339040",
    "end": "6347950"
  },
  {
    "text": "500 requests now it's degraded let's",
    "start": "6347950",
    "end": "6353350"
  },
  {
    "text": "hope we can see some because I couldn't see though those are further for the new",
    "start": "6353350",
    "end": "6362920"
  },
  {
    "text": "environment but that's the that's the",
    "start": "6362920",
    "end": "6368560"
  },
  {
    "text": "idea one thing we could do to to make make it work a bit forcibly is run less",
    "start": "6368560",
    "end": "6378250"
  },
  {
    "text": "users with higher load so the each Fibonacci would occupy one CPU for a",
    "start": "6378250",
    "end": "6386290"
  },
  {
    "text": "long period of time but then this would be retrofitting the test to the app and",
    "start": "6386290",
    "end": "6391450"
  },
  {
    "text": "that's not really what we want to do so we're going to leave the app as this and start working on the infrastructure to",
    "start": "6391450",
    "end": "6399760"
  },
  {
    "text": "make it work and keep healthy regardless of how bad my Python code may be all",
    "start": "6399760",
    "end": "6407110"
  },
  {
    "text": "right and that's it for today we will be the build upon this adding server less",
    "start": "6407110",
    "end": "6413230"
  },
  {
    "text": "resources and more tests and keeping up on Friday this is an ongoing series I'm",
    "start": "6413230",
    "end": "6420340"
  },
  {
    "text": "here for about two hours every episode and in each episode we're going to dive",
    "start": "6420340",
    "end": "6427660"
  },
  {
    "text": "deeper and deeper you can see that this was a bit deeper than we went on the last session and certain in the",
    "start": "6427660",
    "end": "6434410"
  },
  {
    "text": "certainly in the next one we're going to see to have a bit more fun with",
    "start": "6434410",
    "end": "6439540"
  },
  {
    "text": "serverless functions and load generators I hope you like that and see you next",
    "start": "6439540",
    "end": "6445090"
  },
  {
    "text": "time thank you so much",
    "start": "6445090",
    "end": "6448320"
  }
]