[
  {
    "start": "0",
    "end": "82000"
  },
  {
    "text": "hello everyone thanks for joining us today it's a great pleasure to have you all here my name is",
    "start": "2659",
    "end": "8340"
  },
  {
    "text": "Balaji Iyer I'm a senior consultant with a doubles professional services team I'm here today with Eric Mickey he is an",
    "start": "8340",
    "end": "14490"
  },
  {
    "text": "infrastructure architect at GE we have a great session for you today today's",
    "start": "14490",
    "end": "19710"
  },
  {
    "text": "session is operational monitoring and alerting at scale in GE transportation",
    "start": "19710",
    "end": "25279"
  },
  {
    "text": "the digital footprint of a large global enterprise is immensely complex it",
    "start": "25279",
    "end": "31320"
  },
  {
    "text": "consists of digital assets that are globally distributed across private and public cloud environments it consists of",
    "start": "31320",
    "end": "39870"
  },
  {
    "text": "a variety of application and technology stacks that uses legacy and modern",
    "start": "39870",
    "end": "45059"
  },
  {
    "text": "application frameworks also distributed across several assets throughout the",
    "start": "45059",
    "end": "51270"
  },
  {
    "text": "world IT environments have many cross-functional interdependencies",
    "start": "51270",
    "end": "58370"
  },
  {
    "text": "monitoring is a general first step that enterprises take towards getting control of their distributed interconnected",
    "start": "58370",
    "end": "65780"
  },
  {
    "text": "infrastructure the goal of this session is to share our learnings best practices",
    "start": "65780",
    "end": "72950"
  },
  {
    "text": "pitfalls to avoid and provide you some design patterns to monitor and scale efficiently let's get started in this",
    "start": "72950",
    "end": "86939"
  },
  {
    "start": "82000",
    "end": "82000"
  },
  {
    "text": "session we will start by painting a picture of the enterprise monitoring landscape and look at some of the",
    "start": "86939",
    "end": "92460"
  },
  {
    "text": "operational challenges and hybrid cloud scenarios has interchange to large global enterprises we will then try to",
    "start": "92460",
    "end": "102090"
  },
  {
    "text": "understand what cloud monitoring is and how it's different than traditional monitoring then Eric has got a fantastic",
    "start": "102090",
    "end": "109259"
  },
  {
    "text": "digital transformation story to share from GE and he will review the",
    "start": "109259",
    "end": "114509"
  },
  {
    "text": "monitoring and learning solution that was implemented at GE transportation we",
    "start": "114509",
    "end": "120090"
  },
  {
    "text": "hope that you walk away from this session with reusable enterprise ready design patterns which you can readily",
    "start": "120090",
    "end": "127350"
  },
  {
    "text": "apply to your organization to monitor and scale efficiently",
    "start": "127350",
    "end": "132649"
  },
  {
    "start": "132000",
    "end": "132000"
  },
  {
    "text": "as enterprises migrated their workloads to the cloud it's very common to bring their traditional tool sets to also",
    "start": "132819",
    "end": "140829"
  },
  {
    "text": "manage their hybrid environments that is spread across their public and private clouds this presents some unique",
    "start": "140829",
    "end": "147819"
  },
  {
    "text": "challenges many of the traditional tool sets are not designed to handle the",
    "start": "147819",
    "end": "153549"
  },
  {
    "text": "dynamic nature of the cloud they oftentimes struggled to keep up in pace",
    "start": "153549",
    "end": "161129"
  },
  {
    "text": "naturally you end up creating two different environments and two different",
    "start": "162810",
    "end": "169900"
  },
  {
    "text": "technology stacks one that perhaps work well with AWS and the other one maybe",
    "start": "169900",
    "end": "176139"
  },
  {
    "text": "that work well with some of the on-premise infrastructure when you do",
    "start": "176139",
    "end": "181419"
  },
  {
    "text": "that you don't get a single pane of glass view and have limited visibility across all your digital assets finally",
    "start": "181419",
    "end": "190540"
  },
  {
    "text": "many of these aren't from its tool sets have licensing costs that can range from freemium to a fixed cost based on a",
    "start": "190540",
    "end": "198370"
  },
  {
    "text": "number of servers that can be particularly challenging because in cloud all the resources are meant to be",
    "start": "198370",
    "end": "205720"
  },
  {
    "text": "stateless and they are not meant to be persistent for long periods of time",
    "start": "205720",
    "end": "210930"
  },
  {
    "text": "because they're meant to and designed to come up and down based upon the demand large enterprise",
    "start": "210930",
    "end": "220269"
  },
  {
    "text": "customers have shared us that managing cloud and hybrid environments using traditional tool sets can be complex and",
    "start": "220269",
    "end": "227709"
  },
  {
    "text": "costly let's take a look at how cloud monitoring is different than enterprise",
    "start": "227709",
    "end": "234099"
  },
  {
    "start": "230000",
    "end": "230000"
  },
  {
    "text": "monitoring monitoring and logging can be",
    "start": "234099",
    "end": "239229"
  },
  {
    "text": "challenging in many on-premise environments due to the manual configuration of physical and logical",
    "start": "239229",
    "end": "245229"
  },
  {
    "text": "resources that can span across multiple isolated systems so monitoring data even",
    "start": "245229",
    "end": "253000"
  },
  {
    "text": "when it's available it's really hard to get full visibility across all your",
    "start": "253000",
    "end": "258609"
  },
  {
    "text": "digital assets because they are spanned across multiple systems and they operate at different procedures protocols and",
    "start": "258609",
    "end": "265630"
  },
  {
    "text": "environments on the other hand cloud monitoring is",
    "start": "265630",
    "end": "273790"
  },
  {
    "text": "very different changes to cloud infrastructure or tracked as API calls",
    "start": "273790",
    "end": "281710"
  },
  {
    "text": "in real time all the changes to your cloud infrastructure can be tracked and",
    "start": "281710",
    "end": "286840"
  },
  {
    "text": "audited and all the infrastructures are",
    "start": "286840",
    "end": "293139"
  },
  {
    "text": "tightly coupled to even that are triggered based on various actions that are performed in the enterprise",
    "start": "293139",
    "end": "298600"
  },
  {
    "text": "infrastructure based on all these reasons and more the best monitoring",
    "start": "298600",
    "end": "304810"
  },
  {
    "text": "strategy for cloud is a proactive strategy that detects problems before they have a broad impact on the overall",
    "start": "304810",
    "end": "311110"
  },
  {
    "text": "system so when we started thinking about",
    "start": "311110",
    "end": "316450"
  },
  {
    "start": "314000",
    "end": "314000"
  },
  {
    "text": "what are the key characteristics of an ideal monitoring solution the first and",
    "start": "316450",
    "end": "323110"
  },
  {
    "text": "foremost we want something that is inherently secure and improves our security and compliance lifecycle of our",
    "start": "323110",
    "end": "329200"
  },
  {
    "text": "applications and a lot of enterprises",
    "start": "329200",
    "end": "335620"
  },
  {
    "text": "today more so than ever before they are challenged with reducing the total cost",
    "start": "335620",
    "end": "341140"
  },
  {
    "text": "of ownership so we were looking for solutions that does not have licensing",
    "start": "341140",
    "end": "346510"
  },
  {
    "text": "fees and that does not have long-term licensing costs or contracts another key",
    "start": "346510",
    "end": "355330"
  },
  {
    "text": "element of our monitoring solution is the ability to scale tens and thousands of servers with millions of different",
    "start": "355330",
    "end": "361690"
  },
  {
    "text": "requests without adding any additional complexity or compromising security as a",
    "start": "361690",
    "end": "370900"
  },
  {
    "text": "general best practice we want to make sure all the changes are being auditable",
    "start": "370900",
    "end": "376440"
  },
  {
    "text": "another key element that we wanted to implement is we want to make sure we",
    "start": "377250",
    "end": "382330"
  },
  {
    "text": "automate all the repetitive tasks when you think about a large enterprises they don't have the luxury of putting a lot",
    "start": "382330",
    "end": "389289"
  },
  {
    "text": "of resources just to manage and maintain their infrastructure so we want to be able to scale with the handful of resources for a very large global team",
    "start": "389289",
    "end": "396810"
  },
  {
    "text": "so we wanted to make sure we can automate all the repetative tasks so we can actually scale with the",
    "start": "396810",
    "end": "402729"
  },
  {
    "text": "handful of resources this enables",
    "start": "402729",
    "end": "408160"
  },
  {
    "text": "enterprises to spend their cycles on higher value business problems that are more important and differentiated to",
    "start": "408160",
    "end": "413530"
  },
  {
    "text": "their customers lastly we want to unified way to handle your business",
    "start": "413530",
    "end": "420340"
  },
  {
    "text": "infrastructure and your digital assets so so you don't think about whether you",
    "start": "420340",
    "end": "425830"
  },
  {
    "text": "want to manage your hybrid infrastructure whether they are in AWS or your on-prem or are they running",
    "start": "425830",
    "end": "431650"
  },
  {
    "text": "Windows or Linux it has to be seamless across this environments it doesn't",
    "start": "431650",
    "end": "438009"
  },
  {
    "text": "matter where they're located now that we have a solid understanding of the enterprise monitoring landscape I would",
    "start": "438009",
    "end": "444789"
  },
  {
    "text": "like to pass it over to Eric and he would share the digital transformation story",
    "start": "444789",
    "end": "450000"
  },
  {
    "text": "all right thanks Balaji so I just wanted to say congratulations to everybody you",
    "start": "450539",
    "end": "456039"
  },
  {
    "start": "453000",
    "end": "453000"
  },
  {
    "text": "made it to 5:00 p.m. on Wednesday we're officially over the hump of this very busy week my name is Eric and kee I'm an",
    "start": "456039",
    "end": "462580"
  },
  {
    "text": "infrastructure architect at GE GES over 125 years old and we do business and",
    "start": "462580",
    "end": "468400"
  },
  {
    "text": "well over 150 countries our digital transformation is a major driver for IT",
    "start": "468400",
    "end": "473740"
  },
  {
    "text": "at GE today and part of that drive includes our drive to the cloud in this presentation I will specifically cover",
    "start": "473740",
    "end": "480759"
  },
  {
    "text": "GE transportations digital transformation as it relates to monitoring and alerting in the cloud we",
    "start": "480759",
    "end": "488620"
  },
  {
    "start": "487000",
    "end": "487000"
  },
  {
    "text": "saw a lot of benefits during the migration to the cloud this slide shows some of those benefits like a 30 to 50",
    "start": "488620",
    "end": "494830"
  },
  {
    "text": "percent cost out for each application that we migrated to the cloud we also saw increased availability with build",
    "start": "494830",
    "end": "501639"
  },
  {
    "text": "automation that allows us to quickly replace failing instances and we saw decrease downtime with things like auto",
    "start": "501639",
    "end": "508990"
  },
  {
    "text": "scaling and elastic load balancers which allow us to replace instances while an",
    "start": "508990",
    "end": "514479"
  },
  {
    "text": "application is live and those are just a few of the benefits while those are great there were also challenges when we began",
    "start": "514479",
    "end": "520630"
  },
  {
    "text": "operating at scale in the cloud let's look at some of the specific operation",
    "start": "520630",
    "end": "525760"
  },
  {
    "text": "and scaling challenges like many of you out there we were coming from a legacy data center environment where we had",
    "start": "525760",
    "end": "532209"
  },
  {
    "start": "527000",
    "end": "527000"
  },
  {
    "text": "technology silos and each of those silos had its own skill set hardware and vendors and with",
    "start": "532209",
    "end": "540580"
  },
  {
    "text": "each silo there were also separate tools for things like performance and availability monitoring and monitoring and alerting",
    "start": "540580",
    "end": "546640"
  },
  {
    "text": "on compliance security and other standards when we moved to the cloud we",
    "start": "546640",
    "end": "552970"
  },
  {
    "start": "551000",
    "end": "551000"
  },
  {
    "text": "had only one relatively small team compared to the legacy environments and the team inherit all the silos because",
    "start": "552970",
    "end": "559120"
  },
  {
    "text": "they could create all of those resources with infrastructure as code but the",
    "start": "559120",
    "end": "564760"
  },
  {
    "text": "legacy tools were distant and they were not easy to integrate with and they were owned by other teams so what now our",
    "start": "564760",
    "end": "571660"
  },
  {
    "text": "drive was urgent and we moved our first apps very quickly there was not much in",
    "start": "571660",
    "end": "577029"
  },
  {
    "text": "the way of monitoring and alerting in the environment the first apps that we moved for what you'd call easy apps they",
    "start": "577029",
    "end": "583270"
  },
  {
    "text": "were typically low risk with low date of compliance needs but as we began moving more critical apps the gaps in",
    "start": "583270",
    "end": "590200"
  },
  {
    "text": "monitoring and alerting became more apparent next we'll look at some specific monitoring and alerting challenges so cost was key @ge were very",
    "start": "590200",
    "end": "599890"
  },
  {
    "start": "597000",
    "end": "597000"
  },
  {
    "text": "cost-conscious and we considered the infrastructure and the software cost",
    "start": "599890",
    "end": "604930"
  },
  {
    "text": "diligently we also focused on capabilities we wanted to keep the number of tools low but still have the",
    "start": "604930",
    "end": "612370"
  },
  {
    "text": "capability to manage across the various resource types and third but not least of all with support ability with our",
    "start": "612370",
    "end": "619720"
  },
  {
    "text": "small team we needed to minimize training and tools we needed to automate out tasks reduce manual configuration",
    "start": "619720",
    "end": "626890"
  },
  {
    "text": "and avoid platforms to manage so that we could work as efficiently as possible",
    "start": "626890",
    "end": "632790"
  },
  {
    "start": "632000",
    "end": "632000"
  },
  {
    "text": "Wow look at that slide that's really hard to look at Balaji's team actually",
    "start": "633270",
    "end": "638589"
  },
  {
    "text": "nicknamed this slide they call it the grand piano this is actually a slide from our gap analysis and this is just",
    "start": "638589",
    "end": "644650"
  },
  {
    "text": "part of the list of gaps that we covered in our final build-out I'll break it down for you so you don't have to turn",
    "start": "644650",
    "end": "649930"
  },
  {
    "text": "your head sideways to read that and as I do I'll touch on the major groups in the colors there so the compliance group is",
    "start": "649930",
    "end": "656709"
  },
  {
    "text": "in blue and this includes things like local user accounts security groups antivirus agents NTP and OS images age",
    "start": "656709",
    "end": "664380"
  },
  {
    "text": "and then we have the service area and this is in light gray and this covers services like DNS authentication",
    "start": "664380",
    "end": "670170"
  },
  {
    "text": "services like Active Directory and LDAP and the rest are infrastructure like the",
    "start": "670170",
    "end": "675840"
  },
  {
    "text": "network gateways route tables IP address pools even CPU and memory on the",
    "start": "675840",
    "end": "681300"
  },
  {
    "text": "instances with those in mind we'll talk about how we kept our velocity during this project so where after we had",
    "start": "681300",
    "end": "689070"
  },
  {
    "text": "identified the challenges and we defined the specific gaps who wanted to keep our velocity and borrowing a phrase from the",
    "start": "689070",
    "end": "695700"
  },
  {
    "text": "AWS principles we wanted to keep a bias for action to move fast we had to keep a",
    "start": "695700",
    "end": "702030"
  },
  {
    "start": "700000",
    "end": "700000"
  },
  {
    "text": "culture of urgency in our team in order to meet our aggressive timing goals and",
    "start": "702030",
    "end": "707250"
  },
  {
    "text": "we needed to empower everyone to act and make sure any failed attempts were learning events instead of blockers we",
    "start": "707250",
    "end": "715200"
  },
  {
    "text": "also kept everyone informed and made sure that we had training and skill development of plans around the tools that we would end up using and then we",
    "start": "715200",
    "end": "722100"
  },
  {
    "text": "needed a fresh approach no preconceptions or design assumptions built into the requirements to do this",
    "start": "722100",
    "end": "728850"
  },
  {
    "text": "we kept our requirements clear and simple this was also this also enabled us to be more open to ideas and in",
    "start": "728850",
    "end": "737070"
  },
  {
    "text": "action we took fast small steps made clear success criteria that we could",
    "start": "737070",
    "end": "742140"
  },
  {
    "text": "make sure we either met or missed and we recognize winners and losers and we kept moving during the design we had four",
    "start": "742140",
    "end": "752280"
  },
  {
    "start": "749000",
    "end": "749000"
  },
  {
    "text": "main focus areas for reusability we designed for function to function code reuse and to make solutions that we",
    "start": "752280",
    "end": "759360"
  },
  {
    "text": "could carry from business unit to business unit for scalability we had to ensure organic growth and cyclical",
    "start": "759360",
    "end": "765750"
  },
  {
    "text": "demands could be met automatically and avoid any type of manual capacity management or planning under server",
    "start": "765750",
    "end": "773520"
  },
  {
    "text": "lists we did not want to manage platforms or servers in order to avoid maintenance tasks like patching and",
    "start": "773520",
    "end": "780030"
  },
  {
    "text": "upgrades and we wanted to keep costs low if possible low to zero entry cost with",
    "start": "780030",
    "end": "787020"
  },
  {
    "text": "predictable cost growth which could help avoid barriers to adoption of this design now I'd like to pass it back to",
    "start": "787020",
    "end": "795960"
  },
  {
    "text": "Balaji to review the architecture and services that make this solution secure scalable and reusable thanks Eric",
    "start": "795960",
    "end": "806470"
  },
  {
    "text": "for sharing the great transformation story at GE we don't see a lot of hundred and twenty-five year old",
    "start": "806470",
    "end": "811660"
  },
  {
    "text": "companies around it is truly remarkable how ge was able to reinvent itself over",
    "start": "811660",
    "end": "816850"
  },
  {
    "text": "and over again many times so when we started building the solution we started",
    "start": "816850",
    "end": "822040"
  },
  {
    "text": "a long list of things that we wanted to execute as you can imagine so the grand",
    "start": "822040",
    "end": "827620"
  },
  {
    "text": "piano slide that Eric showed it's like a miniature version of a giant spreadsheet so that's kind of what we started with",
    "start": "827620",
    "end": "835410"
  },
  {
    "text": "as you can imagine obviously we wanted to execute in a timely manner and",
    "start": "835410",
    "end": "841660"
  },
  {
    "text": "optimize on those two key areas so we decided to focus on two areas more so",
    "start": "841660",
    "end": "847360"
  },
  {
    "text": "than any others and it will tell you why whenever you are monitoring something",
    "start": "847360",
    "end": "853209"
  },
  {
    "start": "851000",
    "end": "851000"
  },
  {
    "text": "it's always nice to get these alerts get this emails notifications texts in",
    "start": "853209",
    "end": "858720"
  },
  {
    "text": "various ways not that we're looking for more emails to read but that's not only",
    "start": "858720",
    "end": "864579"
  },
  {
    "text": "going to create more work and management overhead so we started with a different",
    "start": "864579",
    "end": "869949"
  },
  {
    "text": "approach instead we started asking what are those events triggering these alerts",
    "start": "869949",
    "end": "875309"
  },
  {
    "text": "what are the root causes of some of these events that are happening so we",
    "start": "875309",
    "end": "881319"
  },
  {
    "text": "wanted to start fixing these issues upstream at the root of the problem close to where these are happening one",
    "start": "881319",
    "end": "890230"
  },
  {
    "text": "of the key aspects of any successful enterprise operational monitoring is to",
    "start": "890230",
    "end": "895929"
  },
  {
    "text": "manage configuration drips configuration drifts can result in unexpected systems",
    "start": "895929",
    "end": "901959"
  },
  {
    "text": "behaviors and failures so we wanted to build a system which detects",
    "start": "901959",
    "end": "906999"
  },
  {
    "text": "configuration drifts and can reapply and automatically reinforce this approved",
    "start": "906999",
    "end": "913179"
  },
  {
    "text": "last known good configuration in case of a drift so what we did here we defined",
    "start": "913179",
    "end": "921309"
  },
  {
    "text": "our code and our policies in the form of a document you could think of it as a compliance s code or your policy S code",
    "start": "921309",
    "end": "928660"
  },
  {
    "text": "or last known good version of some of these work close ask code in the form of a document",
    "start": "928660",
    "end": "934870"
  },
  {
    "text": "it is a Systems Manager document which you can apply across the fleet of your",
    "start": "934870",
    "end": "942010"
  },
  {
    "text": "digital assets in AWS or on your on-premise environments everything is",
    "start": "942010",
    "end": "947500"
  },
  {
    "text": "controlled using a role based access that is centrally located in your ADA based environment Systems Manager is",
    "start": "947500",
    "end": "958660"
  },
  {
    "text": "agent based service so we have these agents installed on these environments so we can trigger some of these",
    "start": "958660",
    "end": "965530"
  },
  {
    "text": "configuration policies onto these assets that are located doesn't matter where they're located we",
    "start": "965530",
    "end": "971470"
  },
  {
    "text": "can take those actions some of the examples are if there's IP table mismatch or there's antivirus sitting",
    "start": "971470",
    "end": "977890"
  },
  {
    "text": "that needs to be updated or somebody created this new users that you didn't know about or change permissions all",
    "start": "977890",
    "end": "983800"
  },
  {
    "text": "that can be identified and can be reapplied so we can manage those configuration drifts optimally one of",
    "start": "983800",
    "end": "993370"
  },
  {
    "start": "992000",
    "end": "992000"
  },
  {
    "text": "the deliberate design choices we made early on is just to make the solution reusable and fully automated using",
    "start": "993370",
    "end": "999700"
  },
  {
    "text": "extensible frameworks I'll tell you what that means it starts with defining a",
    "start": "999700",
    "end": "1006420"
  },
  {
    "text": "simple use framework that reduce the lower that lowers the barrier to entry",
    "start": "1006420",
    "end": "1011730"
  },
  {
    "text": "for new folks coming in and using the solution because we wanted to make sure this solution can be used in a",
    "start": "1011730",
    "end": "1017580"
  },
  {
    "text": "self-service manner that is really the only way we can scale with a handful of resources for example we didn't want",
    "start": "1017580",
    "end": "1026069"
  },
  {
    "text": "some of the folks who are going to be using the solution to learn Python or nodejs or whatever language that particular",
    "start": "1026070",
    "end": "1032220"
  },
  {
    "text": "configuration is written so ideally we decided to use data-driven methodologies",
    "start": "1032220",
    "end": "1039449"
  },
  {
    "text": "to pass runtime parameters so we can extend the solution for a wide variety of use cases so if you think about a",
    "start": "1039449",
    "end": "1046290"
  },
  {
    "text": "large enterprise like GE they have similar use cases that are spread across these business units but only difference",
    "start": "1046290",
    "end": "1053910"
  },
  {
    "text": "a lot of times is really the parameters of those local environments so by providing a pre-baked policy pre-big",
    "start": "1053910",
    "end": "1061470"
  },
  {
    "text": "solution that they can use or a configuration that they can apply using these dynamic we were able to automate a lot of these",
    "start": "1061470",
    "end": "1068250"
  },
  {
    "text": "use cases at scale so next thing you know the adoption kind of automatically will grow it's important to consider",
    "start": "1068250",
    "end": "1077910"
  },
  {
    "text": "automating your entire change management process starting one policy at a time by",
    "start": "1077910",
    "end": "1086640"
  },
  {
    "text": "addressing these events at the root of the problem you realize that you'll notice that you're optimizing the",
    "start": "1086640",
    "end": "1092280"
  },
  {
    "text": "solution and the surface area a lot more efficiently so for things like how are",
    "start": "1092280",
    "end": "1099180"
  },
  {
    "text": "you creating your golden image can we automate that image creation process so",
    "start": "1099180",
    "end": "1104370"
  },
  {
    "text": "to make sure we can have the policies and the security configurations",
    "start": "1104370",
    "end": "1109680"
  },
  {
    "text": "everything can pre-configured in that environment like simple tickets like fixing unreachable ec2 instances",
    "start": "1109680",
    "end": "1117560"
  },
  {
    "text": "resetting forgotten passwords or creating a custom workflow all of this can be automated using these framework",
    "start": "1117560",
    "end": "1125179"
  },
  {
    "start": "1124000",
    "end": "1124000"
  },
  {
    "text": "after getting a clear understanding of a specific areas that we wanted to optimize we started looking into the",
    "start": "1125690",
    "end": "1131130"
  },
  {
    "text": "architectural options that are available to us it was pretty clear we don't want",
    "start": "1131130",
    "end": "1138120"
  },
  {
    "text": "to be the business of managing servers so we naturally gravitated to 2a to be a",
    "start": "1138120",
    "end": "1145230"
  },
  {
    "text": "solutions that can scale exponentially with usage where we don't have to think about capacity managing or capacity",
    "start": "1145230",
    "end": "1151560"
  },
  {
    "text": "provisioning most importantly we're looking for service architectures that has availability and fault tolerance",
    "start": "1151560",
    "end": "1157560"
  },
  {
    "text": "already built in so this helped us to",
    "start": "1157560",
    "end": "1162630"
  },
  {
    "text": "not worry about database availability zones or managing the health of individual instances service",
    "start": "1162630",
    "end": "1171060"
  },
  {
    "text": "applications in aid of us are primarily based around one product of ours which",
    "start": "1171060",
    "end": "1176310"
  },
  {
    "text": "is a Tobias lambda which is if functions",
    "start": "1176310",
    "end": "1181380"
  },
  {
    "text": "as service event-driven paradigm which is written in one of the languages node.js Python Java or C sharp",
    "start": "1181380",
    "end": "1189860"
  },
  {
    "text": "there are several variants of node.js and Python we support basically the",
    "start": "1189860",
    "end": "1196679"
  },
  {
    "text": "architecture is pretty straightforward you have an even source that alerts when a change in data state",
    "start": "1196679",
    "end": "1201930"
  },
  {
    "text": "or endpoint or a resource state is triggered that will trigger a lambda",
    "start": "1201930",
    "end": "1207120"
  },
  {
    "text": "function and at this point the lambda function can pretty much do what you",
    "start": "1207120",
    "end": "1212760"
  },
  {
    "text": "want to do it can interface with other services talk to storage endpoints talk",
    "start": "1212760",
    "end": "1219660"
  },
  {
    "text": "to different API s or call another lambda function in that point there are lots of different possibilities of what",
    "start": "1219660",
    "end": "1225360"
  },
  {
    "text": "you can do with service today and it Maps really well for even based monitoring which what we're trying to do",
    "start": "1225360",
    "end": "1233510"
  },
  {
    "start": "1234000",
    "end": "1234000"
  },
  {
    "text": "gyah transportation was one of the early adopters of Amazon's ec2 Systems Manager",
    "start": "1234320",
    "end": "1239990"
  },
  {
    "text": "because it was really a natural fit to what we're trying to do it's essentially",
    "start": "1239990",
    "end": "1245850"
  },
  {
    "text": "a lightweight agent based service that can be installed on your ec2 instances",
    "start": "1245850",
    "end": "1251160"
  },
  {
    "text": "on your on-premise service running Windows or Linux including your a dovish",
    "start": "1251160",
    "end": "1256980"
  },
  {
    "text": "environment this agent itself is open source in github several enterprises",
    "start": "1256980",
    "end": "1264150"
  },
  {
    "text": "including GE have examined that code and added that to the list of approved services and process for their",
    "start": "1264150",
    "end": "1270720"
  },
  {
    "text": "organization this agent communicates securely with the systems manager",
    "start": "1270720",
    "end": "1275880"
  },
  {
    "text": "service at that point it can execute these configuration policies which you define and all the changes are tracked",
    "start": "1275880",
    "end": "1285780"
  },
  {
    "text": "and audited and the best part is there's no cost to use the service so this was like super appealing for us the core of",
    "start": "1285780",
    "end": "1294870"
  },
  {
    "text": "a Systems Manager is a concept called documents it essentially is a JSON file",
    "start": "1294870",
    "end": "1300470"
  },
  {
    "text": "which consists of a list of commands or actions you want Systems Manager to perform so the code itself the policy or",
    "start": "1300470",
    "end": "1310740"
  },
  {
    "text": "configuration document can be stored in github we recently announced integration support with github or the code can be",
    "start": "1310740",
    "end": "1317400"
  },
  {
    "text": "located in s3 and you can start triggering your workflow based on that you can think about extending that to a",
    "start": "1317400",
    "end": "1323310"
  },
  {
    "text": "CI city pipeline where somebody checks in a code that automatically triggers some policy configurations and roll it",
    "start": "1323310",
    "end": "1329190"
  },
  {
    "text": "out to all your digital assets at this point you have several option to",
    "start": "1329190",
    "end": "1335980"
  },
  {
    "text": "execute this document one of which is run command it's an on-demand service",
    "start": "1335980",
    "end": "1341620"
  },
  {
    "text": "where you can run execute this document that you define several enterprises are",
    "start": "1341620",
    "end": "1346870"
  },
  {
    "text": "actually using this methodology and turning off SSH and RDP to all their instances because you define your policy",
    "start": "1346870",
    "end": "1354100"
  },
  {
    "text": "anything you want to execute in your terminal or in your command line you execute that through your document sent",
    "start": "1354100",
    "end": "1360610"
  },
  {
    "text": "to a run command so all these changes are audited and tracked so anytime you",
    "start": "1360610",
    "end": "1365980"
  },
  {
    "text": "want to see what configuration has changed you have this timeline view on see when that was changed and what cost",
    "start": "1365980",
    "end": "1373750"
  },
  {
    "text": "that particular configuration drift to happen there are other services like",
    "start": "1373750",
    "end": "1383350"
  },
  {
    "text": "state manager patch manager and automation they support documents of different types for example you have a",
    "start": "1383350",
    "end": "1389799"
  },
  {
    "text": "PowerShell document that you want to execute you're not basically rewriting the for that code to work for a Systems",
    "start": "1389799",
    "end": "1396610"
  },
  {
    "text": "Manager you're essentially wrapping that partial as an automation document and sending it to the systems state manager",
    "start": "1396610",
    "end": "1402250"
  },
  {
    "text": "service and that would execute on your behalf or a shell command or a shell script",
    "start": "1402250",
    "end": "1408190"
  },
  {
    "text": "that you want to execute you can provide that to your state manager that will run on your Linux instances let's say you",
    "start": "1408190",
    "end": "1414970"
  },
  {
    "text": "want to run for us this particular policy for a subset of your assets that is totally possible - if anything that",
    "start": "1414970",
    "end": "1421630"
  },
  {
    "text": "matches an auto scaling group or a specific tag in AWS you can execute those for those specific assets so that",
    "start": "1421630",
    "end": "1428679"
  },
  {
    "text": "way you can think about different scenarios where you have multiple policies for different application teams different workflows you can execute",
    "start": "1428679",
    "end": "1435850"
  },
  {
    "text": "based on those specific areas using tags patch manager basically helps you",
    "start": "1435850",
    "end": "1442840"
  },
  {
    "text": "automate the patch management process and automation is an automation document where you can provide explosives you to",
    "start": "1442840",
    "end": "1449740"
  },
  {
    "text": "a wide variety of use cases there are three other ancillary services like parameter store maintenance window and",
    "start": "1449740",
    "end": "1455470"
  },
  {
    "text": "inventory inventory helps you get an inventory of all the services and process and applications that are",
    "start": "1455470",
    "end": "1461230"
  },
  {
    "text": "running on your digital assets across your fleet and maintenance window is where if your",
    "start": "1461230",
    "end": "1467679"
  },
  {
    "text": "if you have legacy environments a lot of enterprises have environments that you don't want to touch them because they",
    "start": "1467679",
    "end": "1473200"
  },
  {
    "text": "don't know what it does but they're running so you can run some maintenance tasks on that on a pre-configured time",
    "start": "1473200",
    "end": "1479379"
  },
  {
    "text": "you can feed in the document to execute it as part of that maintenance window parameter story is a way to store",
    "start": "1479379",
    "end": "1485649"
  },
  {
    "text": "parameters across your that can be used across your database environment you can encrypt it all your secrets and",
    "start": "1485649",
    "end": "1491440"
  },
  {
    "text": "passwords can be encrypted using a KMS key so we used when we started we",
    "start": "1491440",
    "end": "1497259"
  },
  {
    "text": "started with a simple run command with a document and a state using state manager that's only source services will be used",
    "start": "1497259",
    "end": "1504519"
  },
  {
    "text": "when we started but the interesting part about that is just there are so many other options that are available to us",
    "start": "1504519",
    "end": "1509889"
  },
  {
    "text": "as we started maturing the solution which was super important for us because we want to make sure this can survive",
    "start": "1509889",
    "end": "1516700"
  },
  {
    "text": "for a long time commitment and also adoption across GE now I would like to",
    "start": "1516700",
    "end": "1523509"
  },
  {
    "text": "bring Erick back on stage to review these design patterns which you can apply to your organization to",
    "start": "1523509",
    "end": "1528970"
  },
  {
    "text": "efficiently monitor and scale thank you all right thanks Balaji so so far we've",
    "start": "1528970",
    "end": "1537940"
  },
  {
    "start": "1536000",
    "end": "1536000"
  },
  {
    "text": "seen the challenges the gap identification our design focus and Balaji just finished going over the AWS",
    "start": "1537940",
    "end": "1543519"
  },
  {
    "text": "architectural components now I want to review five patterns for monitoring and alerting at scale in the cloud our hope",
    "start": "1543519",
    "end": "1549970"
  },
  {
    "text": "is that you can take these patterns back with you and you can implement them at your site and get to take advantage of",
    "start": "1549970",
    "end": "1555399"
  },
  {
    "text": "these designs the first pattern is based on AWS system manager and lambda system",
    "start": "1555399",
    "end": "1561039"
  },
  {
    "text": "manager was brand new when we started working with it we began working with it just a few weeks after his announced",
    "start": "1561039",
    "end": "1566230"
  },
  {
    "text": "about this time last year I would note that the AWS product team for system",
    "start": "1566230",
    "end": "1571600"
  },
  {
    "text": "manager was very receptive to our feedback and they prioritize changes to speed our adoption now let me step you",
    "start": "1571600",
    "end": "1578230"
  },
  {
    "text": "through this pattern in this example we will focus on using this pattern to",
    "start": "1578230",
    "end": "1583840"
  },
  {
    "text": "validate local user accounts on ec2 instances so in step one we have a system manager document association that",
    "start": "1583840",
    "end": "1590679"
  },
  {
    "text": "runs every 30 minutes on a group of instances based on a specific instance tag and value",
    "start": "1590679",
    "end": "1598590"
  },
  {
    "text": "then in step two we have a lambda function that runs every 30 minutes and looks at the latest Association results",
    "start": "1598659",
    "end": "1604499"
  },
  {
    "text": "and in step three for associations that return a failure we publish a message by",
    "start": "1604499",
    "end": "1612129"
  },
  {
    "text": "SNS and then we put a record to dynamodb with the SNS topic a timestamp and the",
    "start": "1612129",
    "end": "1618669"
  },
  {
    "text": "subscribers we also have an option to call a lambda function for remediation the value of this pattern is when an",
    "start": "1618669",
    "end": "1625960"
  },
  {
    "text": "agent is needed on the instances to provide information or functionality as in this example when examining local",
    "start": "1625960",
    "end": "1632019"
  },
  {
    "text": "user accounts so we have this document set so it looks at the instance user",
    "start": "1632019",
    "end": "1638159"
  },
  {
    "text": "repository which is a password file on Linux in this example and we filter out",
    "start": "1638159",
    "end": "1643869"
  },
  {
    "text": "any accounts that are acceptable we filter out any accounts that are disabled and if there are any accounts remaining those get flagged as an error",
    "start": "1643869",
    "end": "1650320"
  },
  {
    "text": "and we can call lambda to either disable those or delete those other use cases",
    "start": "1650320",
    "end": "1656109"
  },
  {
    "text": "for this include checking for the state of specific services on the instance so",
    "start": "1656109",
    "end": "1661720"
  },
  {
    "text": "we can look at things like the antivirus agent and see if its installed and see if it's running properly we can look at",
    "start": "1661720",
    "end": "1668080"
  },
  {
    "text": "the logging to see if the logs are being sent to a external location and we can",
    "start": "1668080",
    "end": "1673090"
  },
  {
    "text": "use this to look at things like memory and disk so we can check those out to see if they're exceeding a threshold or",
    "start": "1673090",
    "end": "1678309"
  },
  {
    "text": "perhaps underutilized and maybe an opportunity to right-size we can also look at local configurations for things",
    "start": "1678309",
    "end": "1684669"
  },
  {
    "text": "like time synchronization with NTP so we use this to check that the correct time servers are in the configuration file",
    "start": "1684669",
    "end": "1690609"
  },
  {
    "text": "and at NTP is enabled the second pattern",
    "start": "1690609",
    "end": "1695710"
  },
  {
    "start": "1694000",
    "end": "1694000"
  },
  {
    "text": "we'll review is based on AWS lambda it is similar to the first in many respects",
    "start": "1695710",
    "end": "1700809"
  },
  {
    "text": "but focuses on monitoring where no instance agent is needed I will step",
    "start": "1700809",
    "end": "1706239"
  },
  {
    "text": "through an example for examining security group rules and ensure that they align with our security standards",
    "start": "1706239",
    "end": "1713249"
  },
  {
    "text": "so in step 1 we have a lambda function that is triggered the trigger frequency can be chosen based on the sensitivity",
    "start": "1713249",
    "end": "1720519"
  },
  {
    "text": "and response times needs needed the lambda function is set to send its activity logs to s3 then in step 2",
    "start": "1720519",
    "end": "1729759"
  },
  {
    "text": "similar to the first pattern we publish a message to a san we put a log record to dynamodb and we",
    "start": "1729759",
    "end": "1735550"
  },
  {
    "text": "call a lambda function for remediation in this case we would remove the non-compliant rules the value of this",
    "start": "1735550",
    "end": "1742270"
  },
  {
    "text": "pattern is for infrastructure monitoring in this example we looked at security groups we cannot we can look at the",
    "start": "1742270",
    "end": "1748450"
  },
  {
    "text": "rules that might open the resources to all IPs are all protocols and that could",
    "start": "1748450",
    "end": "1754000"
  },
  {
    "text": "expose the resources to the Internet we would of course remove those types of rules we also use this pattern for",
    "start": "1754000",
    "end": "1760750"
  },
  {
    "text": "things like network access control lists we look at authentication services in",
    "start": "1760750",
    "end": "1766120"
  },
  {
    "text": "our V PC to see if they're available in responding so this is like Active Directory and LDAP and we also use this",
    "start": "1766120",
    "end": "1771970"
  },
  {
    "text": "to check our Cloud Gateway functionality to make sure traffic is flowing in and out of the respective network locations",
    "start": "1771970",
    "end": "1777790"
  },
  {
    "text": "that it needs to go to and we also use this for DNS services to validate that DNS is returning proper details about",
    "start": "1777790",
    "end": "1787030"
  },
  {
    "text": "names inside the V PC and externally the",
    "start": "1787030",
    "end": "1793450"
  },
  {
    "start": "1792000",
    "end": "1792000"
  },
  {
    "text": "third pattern is based on lambda again and is completely is a component of the earlier to this pattern can also be used",
    "start": "1793450",
    "end": "1799630"
  },
  {
    "text": "on its own it creates a persistent log of the email recipients and messages from the detailed alerts that we send",
    "start": "1799630",
    "end": "1806140"
  },
  {
    "text": "using s and s let me step through it so in step 1 lambda publishes a message to",
    "start": "1806140",
    "end": "1813310"
  },
  {
    "text": "SNS using the AWS CLI and then in step 2 lambda uses an AWS CLI call to read the",
    "start": "1813310",
    "end": "1821890"
  },
  {
    "text": "SNS topic details I'll note that the SNS topic Arn is a parameter on each of our",
    "start": "1821890",
    "end": "1827080"
  },
  {
    "text": "lambda functions and then lambda does a database put to DynamoDB with the",
    "start": "1827080",
    "end": "1832300"
  },
  {
    "text": "current topic subscriptions at the time of the notification the body of the message and the timestamp lambda is also",
    "start": "1832300",
    "end": "1839110"
  },
  {
    "text": "configured in this pattern to send its activity logs to an s3 log bucket the",
    "start": "1839110",
    "end": "1844570"
  },
  {
    "text": "value of this pattern is to create a persistent record of the alerts published by SNS the forth pattern is",
    "start": "1844570",
    "end": "1852490"
  },
  {
    "start": "1850000",
    "end": "1850000"
  },
  {
    "text": "based on cloud trails and cloud watch so cloud trails keeps a record all the API calls and our VPC and cloud watch",
    "start": "1852490",
    "end": "1859630"
  },
  {
    "text": "gives us the ability to set rules based on the types of actions in the details of those API calls",
    "start": "1859630",
    "end": "1866200"
  },
  {
    "text": "step through this example we're monitoring for specific IM policy modification or deletion in step 1 we",
    "start": "1866200",
    "end": "1875559"
  },
  {
    "text": "have cloud trails enabled in the V PC to record our API calls and then in step 2",
    "start": "1875559",
    "end": "1881619"
  },
  {
    "text": "we have a cloud watch event rule that immediately matches specific API action such as an IM policy modification or",
    "start": "1881619",
    "end": "1888820"
  },
  {
    "text": "deletion and in step 3 notifications are",
    "start": "1888820",
    "end": "1893859"
  },
  {
    "text": "sent to our risk team for review the value of this pattern is its quick alerting and specific API calls in this",
    "start": "1893859",
    "end": "1900700"
  },
  {
    "text": "example we're looking at IM policy changes we also use this pattern for",
    "start": "1900700",
    "end": "1905830"
  },
  {
    "text": "other things like API calls to ec2 so we can look for something like a stop instance or a terminate instance we can",
    "start": "1905830",
    "end": "1913029"
  },
  {
    "text": "look at changes that might be done to our network gateways our knackles route tables and any other changes that we",
    "start": "1913029",
    "end": "1921309"
  },
  {
    "text": "want to monitor we could monitor security groups we have some very specific security groups that we monitor",
    "start": "1921309",
    "end": "1927190"
  },
  {
    "text": "in our V PC and then the final pattern",
    "start": "1927190",
    "end": "1932470"
  },
  {
    "start": "1930000",
    "end": "1930000"
  },
  {
    "text": "is based on AWS config so AWS config allows us to validate resources against",
    "start": "1932470",
    "end": "1937659"
  },
  {
    "text": "managed policies and take action with lambda as needed let me step you through a pattern using",
    "start": "1937659",
    "end": "1943239"
  },
  {
    "text": "example of checking s3 buckets for public read ACLs so in step 1 we have",
    "start": "1943239",
    "end": "1949389"
  },
  {
    "text": "AWS config manager rule which is continuously applied looking for any",
    "start": "1949389",
    "end": "1954669"
  },
  {
    "text": "public read access on our s3 buckets then in step 2 AWS config maintains a",
    "start": "1954669",
    "end": "1962109"
  },
  {
    "text": "list of non-compliant resources and in step 3 a lambda function will",
    "start": "1962109",
    "end": "1967509"
  },
  {
    "text": "periodically process the non-compliant resources for notification and remediation the value of this pattern is",
    "start": "1967509",
    "end": "1975129"
  },
  {
    "text": "to monitor resources based on manage rules some other examples of this pattern are verification of EBS volume",
    "start": "1975129",
    "end": "1981970"
  },
  {
    "text": "encryption we can also verify that bucket logging is turned on in our buckets and we can even check for",
    "start": "1981970",
    "end": "1987909"
  },
  {
    "text": "specific tags on our resources to make sure we have tags like cost Center now",
    "start": "1987909",
    "end": "1993519"
  },
  {
    "text": "that we've covered these patterns I will briefly summarize some benefits lessons learned and some future potential",
    "start": "1993519",
    "end": "1999009"
  },
  {
    "text": "improvements looking at so the solution so we covered",
    "start": "1999009",
    "end": "2005130"
  },
  {
    "start": "2002000",
    "end": "2002000"
  },
  {
    "text": "the challenges we looked at the gap identification we saw the design focus we covered AWS",
    "start": "2005130",
    "end": "2012570"
  },
  {
    "text": "components and finally we just covered the patterns now let's look at some of the benefits the solution is agile many",
    "start": "2012570",
    "end": "2018779"
  },
  {
    "text": "monitors apply automatically to new resources and new application enrollment takes just a few minutes the managed",
    "start": "2018779",
    "end": "2026309"
  },
  {
    "text": "services that monitor that the monitors are built on scale without our team having to do any resource planning costs",
    "start": "2026309",
    "end": "2033990"
  },
  {
    "text": "are kept low as services that are either free are measured by the thousands or millions a quick story on this during",
    "start": "2033990",
    "end": "2041309"
  },
  {
    "text": "the development we once joked around that the emails we were sending and actually read you know reading to",
    "start": "2041309",
    "end": "2046559"
  },
  {
    "text": "implement these costs more to actually read the email than the monitor took over several months and that's easily",
    "start": "2046559",
    "end": "2052770"
  },
  {
    "text": "true then for reusability the lambda code was reused across dozens of",
    "start": "2052770",
    "end": "2058440"
  },
  {
    "text": "monitors and only parameters needed to be changed each time the overall operations are simple with no servers or",
    "start": "2058440",
    "end": "2065550"
  },
  {
    "text": "platforms to manage and only a handful of services to learn so let's look at",
    "start": "2065550",
    "end": "2070950"
  },
  {
    "text": "some lessons learned we learned some valuable lessons at first we attempted to do application specific monitoring",
    "start": "2070950",
    "end": "2077280"
  },
  {
    "start": "2072000",
    "end": "2072000"
  },
  {
    "text": "and we found that we would need a much larger team based on the variation we",
    "start": "2077280",
    "end": "2082679"
  },
  {
    "text": "had in our application design and in the technologies that the applications are built on so this was not a sweet spot",
    "start": "2082679",
    "end": "2089368"
  },
  {
    "text": "for us and there are many vendors out there who do a better job than we could at our size our SNS messaging method is",
    "start": "2089369",
    "end": "2096898"
  },
  {
    "text": "too easy to unsubscribe to this became obvious with large distribution lists and required training and auditing we",
    "start": "2096899",
    "end": "2104400"
  },
  {
    "text": "found the timing of defendant steps was critical for system manager and lambda monitors to be successful mismatches led",
    "start": "2104400",
    "end": "2111359"
  },
  {
    "text": "to either double alerts or even worse missed alerts and repeated notifications",
    "start": "2111359",
    "end": "2116490"
  },
  {
    "text": "became noise we added a cool-down capability to our lambda functions to alleviate this issue and then looking",
    "start": "2116490",
    "end": "2123390"
  },
  {
    "start": "2123000",
    "end": "2123000"
  },
  {
    "text": "forward these are our top items from our backlog we're looking at leveraging AWS",
    "start": "2123390",
    "end": "2128760"
  },
  {
    "text": "step functions which could improve some of the monitors and remediation that require a series of dependents",
    "start": "2128760",
    "end": "2134369"
  },
  {
    "text": "step functions will allow for a series of functions in the remediation logic",
    "start": "2134369",
    "end": "2140100"
  },
  {
    "text": "and it offers opportunity for logical branching and passing inputs and outputs between the functions for messaging",
    "start": "2140100",
    "end": "2147359"
  },
  {
    "text": "we're looking at improving notifications with something like a slack or HipChat integration and we're also looking to",
    "start": "2147359",
    "end": "2153180"
  },
  {
    "text": "improve the lambda code and the s system manager document management with a CI CD",
    "start": "2153180",
    "end": "2158520"
  },
  {
    "text": "pipeline and around incident management we plan to automate ticket creation and",
    "start": "2158520",
    "end": "2163859"
  },
  {
    "text": "RI to a platform which was enabled by a recent ITIL platform upgrades and last",
    "start": "2163859",
    "end": "2169200"
  },
  {
    "text": "we want to do more around self-healing and remediation including terminating and rebuilding the application instances",
    "start": "2169200",
    "end": "2175940"
  },
  {
    "text": "we think this is a sweet spot where AWS step function would work well so with",
    "start": "2175940",
    "end": "2182640"
  },
  {
    "text": "that I want to thank you all for spending this time with us we hope that you find this information useful and take advantage of these capabilities",
    "start": "2182640",
    "end": "2188510"
  },
  {
    "text": "balaji and i will hang out up here near the stage afterwards if you have any questions and please remember to",
    "start": "2188510",
    "end": "2194070"
  },
  {
    "text": "complete the survey and enjoy the rest of your time here at reinvent thank you [Applause]",
    "start": "2194070",
    "end": "2201518"
  }
]