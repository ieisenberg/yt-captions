[
  {
    "start": "0",
    "end": "90000"
  },
  {
    "text": "okay wait events so like I was saying wait events I think is probably one of the most important things when it comes",
    "start": "870",
    "end": "7209"
  },
  {
    "text": "to performance that's what I'm going to talk about but I actually titled this",
    "start": "7209",
    "end": "13000"
  },
  {
    "text": "talk a little bit differently and I'm gonna step back and start here I titled this talk it's maybe a little",
    "start": "13000",
    "end": "19660"
  },
  {
    "text": "pretentious but I called it the science of database performance and I'm gonna start there",
    "start": "19660",
    "end": "25420"
  },
  {
    "text": "Postgres you know has been around for a long time I like this tweet by the way from any pavlo he pulled this quote out",
    "start": "25420",
    "end": "31660"
  },
  {
    "text": "of a Stonebreaker history book about this guy in China Wei Hong who if you",
    "start": "31660",
    "end": "36969"
  },
  {
    "text": "read this he was first learning in 1985",
    "start": "36969",
    "end": "42010"
  },
  {
    "text": "he was typing in source code that was essentially the Postgres it was ingress at that time and that was that was",
    "start": "42010",
    "end": "48999"
  },
  {
    "text": "literally how he started learning Postgres so I mean like we have this is one of the cool things about Postgres is you have people who have been working on",
    "start": "48999",
    "end": "56739"
  },
  {
    "text": "the concepts and like the way Postgres is architected it literally goes all the",
    "start": "56739",
    "end": "62769"
  },
  {
    "text": "way back to the 80s another thing about Postgres of course",
    "start": "62769",
    "end": "68320"
  },
  {
    "text": "is that thing that people talk about a lot is how its standards-compliant right",
    "start": "68320",
    "end": "75100"
  },
  {
    "text": "implements the sequel standard so one of the reasons it's a popular migration target from a lot of other databases",
    "start": "75100",
    "end": "80800"
  },
  {
    "text": "because the completeness but there is something that the sequel standard says nothing about what is that that is",
    "start": "80800",
    "end": "90070"
  },
  {
    "start": "90000",
    "end": "120000"
  },
  {
    "text": "performance data based performance but that's not to say that there hasn't been",
    "start": "90070",
    "end": "96760"
  },
  {
    "text": "a whole bunch of like research and thinking in the area of database performance over the last 30 to 40 years",
    "start": "96760",
    "end": "102370"
  },
  {
    "text": "right in fact the opposite is true it's not necessarily something in the sequel",
    "start": "102370",
    "end": "108010"
  },
  {
    "text": "standard but it's something that there is a huge amount of work that has been done and a huge amount of thinking and",
    "start": "108010",
    "end": "113620"
  },
  {
    "text": "research and industry stuff to really understand and move forward the field of",
    "start": "113620",
    "end": "118690"
  },
  {
    "text": "database performance something I kind of like to point out if you've heard of Brendan Gregg before he's does a lot of",
    "start": "118690",
    "end": "124900"
  },
  {
    "start": "120000",
    "end": "185000"
  },
  {
    "text": "really awesome stuff that kind of like operating system Linux kernel level even",
    "start": "124900",
    "end": "130599"
  },
  {
    "text": "Brendan Greg's like website here when he talks about the use message they use method like he says he says",
    "start": "130599",
    "end": "139300"
  },
  {
    "text": "this might find 85% of issues but by the way latency beta the methodologies for",
    "start": "139300",
    "end": "144760"
  },
  {
    "text": "example method our approach 100% method are if you're not familiar with that is a database performance methodology like",
    "start": "144760",
    "end": "152050"
  },
  {
    "text": "even Brendan Greg and his operating system stuff here is making reference to database performance the field of",
    "start": "152050",
    "end": "159069"
  },
  {
    "text": "database performance analysis database performance troubleshooting and understanding so-so database performance",
    "start": "159069",
    "end": "165209"
  },
  {
    "text": "is actually a really sort of rich area to get into there is a ton of history",
    "start": "165209",
    "end": "171580"
  },
  {
    "text": "there's a ton of really interesting work that's been done here and I'm going to",
    "start": "171580",
    "end": "177489"
  },
  {
    "text": "connect that into Postgres in just a moment but first a little bit of I said there's a lot of history let's talk",
    "start": "177489",
    "end": "182739"
  },
  {
    "text": "about the history and I think a great way to illustrate the history is sort of like an experience that would be very",
    "start": "182739",
    "end": "189250"
  },
  {
    "start": "185000",
    "end": "233000"
  },
  {
    "text": "common for many people in who have been around databases for all this has certainly been my experience that I",
    "start": "189250",
    "end": "195640"
  },
  {
    "text": "remember back in the 90s so here we have",
    "start": "195640",
    "end": "202660"
  },
  {
    "text": "like a manager might say something like this to me that like you know people are talking about this thing called the",
    "start": "202660",
    "end": "208150"
  },
  {
    "text": "buffer cache hit ratio so in the early days of data database performances the",
    "start": "208150",
    "end": "214900"
  },
  {
    "text": "first thing that we had was like ratios and metrics and counters and that was how we kind of started this is kind of",
    "start": "214900",
    "end": "222340"
  },
  {
    "text": "funny this this is actually for real so let's say manager said to you all right I need you to tell me all the databases",
    "start": "222340",
    "end": "227440"
  },
  {
    "text": "I have a buffer cache hit ratio less than 90% so we can you know bring in a consultant to work on those so",
    "start": "227440",
    "end": "237930"
  },
  {
    "text": "consultants would do some black magic and you know roll some dice and then he",
    "start": "237930",
    "end": "243190"
  },
  {
    "text": "somehow makes things look better but we kind of wised up after a while to this by the way I don't know if if you were",
    "start": "243190",
    "end": "249519"
  },
  {
    "text": "kind of tracking as this happened but you can still get this today if you go",
    "start": "249519",
    "end": "255069"
  },
  {
    "start": "250000",
    "end": "330000"
  },
  {
    "text": "go out to Oracle DBA to CEO dot uk' look at this right up at the top custom hit ratio sounds like just the thing I",
    "start": "255069",
    "end": "262030"
  },
  {
    "text": "need you know the hit ratio is the ratio of how often I'm getting cache hits versus cache misses",
    "start": "262030",
    "end": "268150"
  },
  {
    "text": "and this was like the gold standard for database performance in the 90s by the way so I'll pull down the script let's",
    "start": "268150",
    "end": "275080"
  },
  {
    "text": "see here it is looks pretty good people are worrying about hit ratios simple",
    "start": "275080",
    "end": "280389"
  },
  {
    "text": "routine to bump up your hit ratio to any value desired it sounds like just the thing I need let's see if it works",
    "start": "280389",
    "end": "286930"
  },
  {
    "text": "choose a hit ratio 85 look at that BAM hit ratio of 85 does it work for 90",
    "start": "286930",
    "end": "295419"
  },
  {
    "text": "yes it works for 92 got my hit ratio up where I needed it and now I don't have to so this is kind of funny but it does",
    "start": "295419",
    "end": "301930"
  },
  {
    "text": "actually point to sort of a real thing which is that we started with these with",
    "start": "301930",
    "end": "307060"
  },
  {
    "text": "looking at ratios looking at like just the CPU usage the disk i/o the cache hit",
    "start": "307060",
    "end": "313240"
  },
  {
    "text": "ratio sort of simple counters and metrics and those are bad things but they're not enough right and really like",
    "start": "313240",
    "end": "322479"
  },
  {
    "text": "in the 90s while all of this was kind of going on in the industry there actually",
    "start": "322479",
    "end": "328120"
  },
  {
    "text": "was a group of people in Redwood Shores who were going very deep on database",
    "start": "328120",
    "end": "333820"
  },
  {
    "start": "330000",
    "end": "395000"
  },
  {
    "text": "kernels who were themselves kind of realizing the same thing that these were",
    "start": "333820",
    "end": "338860"
  },
  {
    "text": "not enough I kind of highlighted here that the time frame because this was like early 90s that this group of that",
    "start": "338860",
    "end": "347889"
  },
  {
    "text": "of database kernel developers realized look we just don't have the tools that we need with looking at the the counter",
    "start": "347889",
    "end": "355660"
  },
  {
    "text": "metrics that we're pulling out from the operating system the database kernel to really solve the problems that we're running into so as far back as 91 1991",
    "start": "355660",
    "end": "365110"
  },
  {
    "text": "and 92 like database kernel developers we're starting to think about how we need to instrument this thing and how we",
    "start": "365110",
    "end": "371889"
  },
  {
    "text": "need what kind of like what we need to add to our code to get the observability",
    "start": "371889",
    "end": "377800"
  },
  {
    "text": "that we need to actually be able to solve problems performance problems and that spawned that was the beginning of",
    "start": "377800",
    "end": "385570"
  },
  {
    "text": "something that just continued to gain momentum and gained momentum and gained momentum they added that they started",
    "start": "385570",
    "end": "391510"
  },
  {
    "text": "working on this in the 90s there's there's a whole sort of body of work",
    "start": "391510",
    "end": "396640"
  },
  {
    "start": "395000",
    "end": "497000"
  },
  {
    "text": "that's grown out of it since then and I'm not going to go through everything",
    "start": "396640",
    "end": "403020"
  },
  {
    "text": "there's a lot there's a lot of really good stuff and I would really encourage anybody there's so much you can read and it's like I said it's a super fun field",
    "start": "403020",
    "end": "409050"
  },
  {
    "text": "to get into of specifically like database performance but I'm gonna highlight two really important things",
    "start": "409050",
    "end": "415410"
  },
  {
    "text": "that happened in our industry over the last 15 years the first one really",
    "start": "415410",
    "end": "421860"
  },
  {
    "text": "important development was this idea of taking queueing theory and applying it to understanding database performance",
    "start": "421860",
    "end": "428130"
  },
  {
    "text": "and like the hallmark of this is that you see this little formula R equals s",
    "start": "428130",
    "end": "433860"
  },
  {
    "text": "plus W that stands for response time service time and wait time and what you",
    "start": "433860",
    "end": "442380"
  },
  {
    "text": "know I have a couple pages from a book by Cary Millsap here he's done a lot of work in this area Craig Shilo hammer is",
    "start": "442380",
    "end": "449760"
  },
  {
    "text": "another guy who's done a lot of work I also kind of referenced him down there this this really kind of changed changed",
    "start": "449760",
    "end": "457230"
  },
  {
    "text": "the game and I mean I remember kind of like in the early 2000s as you'd go to",
    "start": "457230",
    "end": "462630"
  },
  {
    "text": "like conferences and like listen to what people were talking about database conferences and things like that like it",
    "start": "462630",
    "end": "467940"
  },
  {
    "text": "all just like it all just turned upside down like over the course of five to ten years the whole industry kind of",
    "start": "467940",
    "end": "475590"
  },
  {
    "text": "realized that this changed the whole game there was also an aspect of this is",
    "start": "475590",
    "end": "482580"
  },
  {
    "text": "by the way method R this is the thing that was being referenced by Brendan Gregg at the beginning there's an aspect",
    "start": "482580",
    "end": "488370"
  },
  {
    "text": "of leveraging trace and sort of logging information as well but the key thing is",
    "start": "488370",
    "end": "493530"
  },
  {
    "text": "that the wait time in the queueing theory the second development I want to really highlight is something called a is basically taking a sampling approach",
    "start": "493530",
    "end": "500450"
  },
  {
    "start": "497000",
    "end": "556000"
  },
  {
    "text": "and these are complementary they're both important things so the queueing theory being able to like you know generate",
    "start": "500450",
    "end": "507060"
  },
  {
    "text": "trace files and then apply queueing theory to the way you interpret those trace files and the second bit is taking",
    "start": "507060",
    "end": "512640"
  },
  {
    "text": "a sampling approach to what's going on inside your database this kind of couples now yeah this kind of couples",
    "start": "512640",
    "end": "518849"
  },
  {
    "text": "with what went before and I just kind of pulled a couple of things here but the",
    "start": "518850",
    "end": "525540"
  },
  {
    "text": "this I think that even today when most people like for example in the Oracle",
    "start": "525540",
    "end": "531210"
  },
  {
    "text": "world when people think of performance these days the first thing comes to mind is like the enterprise",
    "start": "531210",
    "end": "536339"
  },
  {
    "text": "manager top activity view and the enterprise manager top activity view is this it's just a visualization of sample",
    "start": "536339",
    "end": "544260"
  },
  {
    "text": "data that's driven off of the Vita our session view inside of Oracle so that's",
    "start": "544260",
    "end": "550800"
  },
  {
    "text": "what happened in the industry over the last 10 to 20 years but what about",
    "start": "550800",
    "end": "556769"
  },
  {
    "start": "556000",
    "end": "781000"
  },
  {
    "text": "Postgres how does all of this apply to Postgres and why why am i talking about all that in the context of Postgres so",
    "start": "556769",
    "end": "564000"
  },
  {
    "text": "at this point in time I have set the stage and I'm ready to introduce the",
    "start": "564000",
    "end": "569519"
  },
  {
    "text": "star of the show and the star of the show is something we call wait events so",
    "start": "569519",
    "end": "576870"
  },
  {
    "text": "what are waiting ads in the so the way",
    "start": "576870",
    "end": "586050"
  },
  {
    "text": "the story goes is that I talked about that that group of people down in Redwood Shores who were who were working",
    "start": "586050",
    "end": "591750"
  },
  {
    "text": "deep inside the kernel of a relational database and essentially the way that",
    "start": "591750",
    "end": "598620"
  },
  {
    "text": "I've heard this story is that this was an utter last resort like they had bang",
    "start": "598620",
    "end": "604199"
  },
  {
    "text": "their head up against a wall they could not solve a problem that they are running into and as essentially when",
    "start": "604199",
    "end": "609959"
  },
  {
    "text": "nothing else worked they were finally like ok fine we'll add some code to like just log it and trace it and actually",
    "start": "609959",
    "end": "617670"
  },
  {
    "text": "figure out what's going on and they started instrumenting something that are",
    "start": "617670",
    "end": "624480"
  },
  {
    "text": "called wait events little did they know that those would become the foundation",
    "start": "624480",
    "end": "629699"
  },
  {
    "text": "of changing the whole the way that the whole way that we looked at it so they",
    "start": "629699",
    "end": "636660"
  },
  {
    "text": "added some code that could emit log messages when the database was waiting for something because what they did one",
    "start": "636660",
    "end": "642870"
  },
  {
    "text": "kind of interesting thing by the way that well I'll probably come back to this later in 2003 it wasn't until 11",
    "start": "642870",
    "end": "651959"
  },
  {
    "text": "years later that they actually took that wait information and added it to the Vita our session view that was done in",
    "start": "651959",
    "end": "658410"
  },
  {
    "text": "10 gr1 it is kind of funny that in Postgres we call them wait events but",
    "start": "658410",
    "end": "665310"
  },
  {
    "text": "there's nothing eventful in Postgres I think this is just ironic there's nothing eventful Kress about how her exposing it we're",
    "start": "665310",
    "end": "671940"
  },
  {
    "text": "actually as we should probably call the wait state maybe we'll get to events though that's a bit of the history of it",
    "start": "671940",
    "end": "677250"
  },
  {
    "text": "and the thing about wait events is that it's all over these two slides I just showed you a minute ago so when I talked",
    "start": "677250",
    "end": "683070"
  },
  {
    "text": "about queuing theory right over here the thing that we're talking about in this formula the W is for weights the W is",
    "start": "683070",
    "end": "691950"
  },
  {
    "text": "for the weight inside of the weight events and then when I talked about the sampling approach and we have this this",
    "start": "691950",
    "end": "697140"
  },
  {
    "text": "picture here on the right like those little categories are the weight events so weight events are all over both of",
    "start": "697140",
    "end": "703200"
  },
  {
    "text": "these things that were kind of the fundamental shifts and are in the field of database performance analysis but why",
    "start": "703200",
    "end": "711180"
  },
  {
    "text": "are these things called wait events I have this quote from a book by Coppola",
    "start": "711180",
    "end": "716580"
  },
  {
    "text": "Krishnan but I'm just gonna skip that and give you kind of a simpler definition which is basically anytime",
    "start": "716580",
    "end": "723540"
  },
  {
    "text": "the databases is not on the CPU than it's waiting right there are some",
    "start": "723540",
    "end": "728550"
  },
  {
    "text": "caveats I'm oversimplifying it a little bit but I think that it's really",
    "start": "728550",
    "end": "733830"
  },
  {
    "text": "important just to have kind of this general concept really solid I can simplify it even more I could basically",
    "start": "733830",
    "end": "739980"
  },
  {
    "text": "say look you have a connection to the database it's always in one of three states okay we see the idle it's doing",
    "start": "739980",
    "end": "746250"
  },
  {
    "text": "nothing or it's active meaning it's processing a sequel command and if it's",
    "start": "746250",
    "end": "752670"
  },
  {
    "text": "not idle it's either on the CPU or it's waiting I mean that's just pretty much it and then the one other thing I would",
    "start": "752670",
    "end": "758250"
  },
  {
    "text": "add that really made wait events powerful was that the wait events were",
    "start": "758250",
    "end": "763320"
  },
  {
    "text": "visible from sequel that was the other kind of really that's something that has has really made them I think it's",
    "start": "763320",
    "end": "772200"
  },
  {
    "text": "enabled us to do so much more with them and that kind of ties into the sampling stuff so this is the basic idea behind",
    "start": "772200",
    "end": "778770"
  },
  {
    "text": "weight events what about Postgres well the post trust community is it's not as though the",
    "start": "778770",
    "end": "784920"
  },
  {
    "start": "781000",
    "end": "809000"
  },
  {
    "text": "Postgres community was oblivious to what's what's been going on in fact the first reference that I found was all the",
    "start": "784920",
    "end": "791010"
  },
  {
    "text": "way back in 2009 wherein a gawky here is talking about profiling and he's talking",
    "start": "791010",
    "end": "797430"
  },
  {
    "text": "about instrumenting weight events in Postgres that was just the oldest one I found if you find something older let me know",
    "start": "797430",
    "end": "804310"
  },
  {
    "text": "because I would really like to update the slide it could be even before then but that wasn't the last time like over",
    "start": "804310",
    "end": "809890"
  },
  {
    "start": "809000",
    "end": "820000"
  },
  {
    "text": "the following here's just there have been a whole bunch of discussions in the community about about weight events",
    "start": "809890",
    "end": "816430"
  },
  {
    "text": "right I would also like throw on top of that that @pg count in 2015",
    "start": "816430",
    "end": "822279"
  },
  {
    "text": "Ilya gave a talk that was basically all about again like sort of talking about performance and Postgres and touching on",
    "start": "822279",
    "end": "828670"
  },
  {
    "text": "some of these topics but all that said as of 2016 the state of the world on the",
    "start": "828670",
    "end": "837820"
  },
  {
    "start": "830000",
    "end": "869000"
  },
  {
    "text": "Postgres source code was still this we",
    "start": "837820",
    "end": "843220"
  },
  {
    "text": "had a state which could show us active or idle but absolutely no sense when a",
    "start": "843220",
    "end": "848500"
  },
  {
    "text": "session was active of what was going on is it on the cpu or is it is it well there was a waiting flag which would",
    "start": "848500",
    "end": "855519"
  },
  {
    "text": "tell us if it was waiting on a lock but but that's that was um it wouldn't really tell us much and not nearly",
    "start": "855519",
    "end": "863230"
  },
  {
    "text": "enough but that said at this point in time the stage was just about set and in",
    "start": "863230",
    "end": "871019"
  },
  {
    "start": "869000",
    "end": "909000"
  },
  {
    "text": "June 22nd of 2015 was when Robert Haas",
    "start": "871019",
    "end": "877600"
  },
  {
    "text": "started a conversation with this email right here which i think is appropriately presented to the to the",
    "start": "877600",
    "end": "885790"
  },
  {
    "text": "hackers list which is kind of where most of the the real technical discussion happens in the Postgres community and",
    "start": "885790",
    "end": "892750"
  },
  {
    "text": "literally within a week on June 30th I'm at Kapila submitted a patch just for",
    "start": "892750",
    "end": "899079"
  },
  {
    "text": "people to start looking at to start thinking about how could we actually get weight events inside of the database that went through about 20 versions",
    "start": "899079",
    "end": "905160"
  },
  {
    "text": "there were some challenges I went through but on right here on March 10th",
    "start": "905160",
    "end": "911529"
  },
  {
    "start": "909000",
    "end": "1044000"
  },
  {
    "text": "of 2016 we have the commit and it came into Postgres version nine six where we",
    "start": "911529",
    "end": "919720"
  },
  {
    "text": "finally brought in some real weight events what I would call weight events",
    "start": "919720",
    "end": "925269"
  },
  {
    "text": "at least to Postgres so they the idea was that that column called weighting we",
    "start": "925269",
    "end": "931810"
  },
  {
    "text": "replaced that with something a lot more descriptive that was in fact I was the subject line of of robert's original email I'm not going",
    "start": "931810",
    "end": "941530"
  },
  {
    "text": "to go super deep on this I think this was a really brilliant patch and the really brilliant thing about it was the simplicity of it",
    "start": "941530",
    "end": "947470"
  },
  {
    "text": "the main patch there the one on March 10th was only 800 lines of code and in a",
    "start": "947470",
    "end": "954790"
  },
  {
    "text": "hundred lines of code they were able to instrument all of the heavyweight locks all the heavyweight the lightweight",
    "start": "954790",
    "end": "960820"
  },
  {
    "text": "locks in the buffer pins and then there was additional 200 lines of code when they auto-generated a file which was",
    "start": "960820",
    "end": "967690"
  },
  {
    "text": "sort of setting the groundwork the reason that's important is that they put that relatively small change",
    "start": "967690",
    "end": "976150"
  },
  {
    "text": "into Postgres 9:6 which was a major release of Postgres and then they could give it you could",
    "start": "976150",
    "end": "981730"
  },
  {
    "text": "give us some bake time right you can kind of see that it let give us some time to stabilize get it under some real",
    "start": "981730",
    "end": "988450"
  },
  {
    "text": "workloads and the Postgres so Postgres tends to develop in this way just as a",
    "start": "988450",
    "end": "994960"
  },
  {
    "text": "rule that Postgres that the development community it tends to work iteratively right and you can look look at a lot of",
    "start": "994960",
    "end": "1001080"
  },
  {
    "text": "examples of this like logical replication is another great example where it's very iterative they added kind of like the core feature and then",
    "start": "1001080",
    "end": "1007230"
  },
  {
    "text": "over the years they kind of built built it all up it wasn't a big bang build everything all at once and ship it all",
    "start": "1007230",
    "end": "1013110"
  },
  {
    "text": "at once so that was the beginning and then over the coming year we had a whole bunch of more commits that basically",
    "start": "1013110",
    "end": "1018870"
  },
  {
    "text": "added everything else so we instrumented everything else in there there's two sort of key places if you're curious",
    "start": "1018870",
    "end": "1025020"
  },
  {
    "text": "that I will point you to but we won't sort of dwell on it right now where you could learn more which is",
    "start": "1025020",
    "end": "1032490"
  },
  {
    "text": "there's a in the source code PG stat dot H is a great kind of",
    "start": "1032490",
    "end": "1038520"
  },
  {
    "text": "starting point to sort of read about how weight events are built in Postgres and where they come from and the other place",
    "start": "1038520",
    "end": "1044339"
  },
  {
    "start": "1044000",
    "end": "1086000"
  },
  {
    "text": "is this function called PG report weight start this is the C function that gets called in order to report a way to vet",
    "start": "1044339",
    "end": "1051650"
  },
  {
    "text": "this by the way this is a screenshot of a website called D oxygen which is",
    "start": "1051650",
    "end": "1057020"
  },
  {
    "text": "really awesome if you're ever just trying to browse around to the source code the Postgres source code because",
    "start": "1057020",
    "end": "1062820"
  },
  {
    "text": "it's all interlinked so like what you see here is that you pull up the this C",
    "start": "1062820",
    "end": "1068550"
  },
  {
    "text": "function and it you all the callers of that C function so this very quickly gives you an idea",
    "start": "1068550",
    "end": "1074520"
  },
  {
    "text": "of all the different places where weights can happen where Postgres can go off of the cpu at least all the all the",
    "start": "1074520",
    "end": "1081030"
  },
  {
    "text": "parts we've unless we miss any but but I think it's pretty good so here's that same function in the",
    "start": "1081030",
    "end": "1088230"
  },
  {
    "text": "source code wait is this the same one no this was the weight start this is the first one and then this is get way to",
    "start": "1088230",
    "end": "1095010"
  },
  {
    "text": "vent the second function here and this is the other good starting point for weight events this is what translates so",
    "start": "1095010",
    "end": "1104309"
  },
  {
    "start": "1104000",
    "end": "1132000"
  },
  {
    "text": "the other thing I would sort of say is that whenever I am curious about a weight event it's almost always like one",
    "start": "1104309",
    "end": "1109409"
  },
  {
    "text": "specific weight event because it's the one that's causing a problem for me right now right that's usually why I got",
    "start": "1109409",
    "end": "1115020"
  },
  {
    "text": "curious in the first place because I've got like this problem and I've got a whole bunch of sessions and they say they're waiting for a lock or waiting",
    "start": "1115020",
    "end": "1121890"
  },
  {
    "text": "for something else and so this is where it does the translation I've found this",
    "start": "1121890",
    "end": "1127409"
  },
  {
    "text": "to be a good starting point as well for digging into the code now it is worth",
    "start": "1127409",
    "end": "1135000"
  },
  {
    "start": "1132000",
    "end": "1180000"
  },
  {
    "text": "sort of quickly mentioning that there are if you come from another database system and then you migrate onto",
    "start": "1135000",
    "end": "1142049"
  },
  {
    "text": "Postgres there are still some gaps in what Postgres has so far from what you",
    "start": "1142049",
    "end": "1148860"
  },
  {
    "text": "probably had before you came over I've kind of I've I've listed a few of these",
    "start": "1148860",
    "end": "1155720"
  },
  {
    "text": "and it's it can be useful just to kind of like know kind of come in with you",
    "start": "1155720",
    "end": "1161490"
  },
  {
    "text": "know sort of know what's what's going to be there what's not going to be there as you come over and so so I want to just",
    "start": "1161490",
    "end": "1168000"
  },
  {
    "text": "kind of summarize some of this stuff down it's it's just I do think it's important get some of this out there to",
    "start": "1168000",
    "end": "1174030"
  },
  {
    "text": "figure out what you can do and what you can't do as you can as you come over to Postgres so that introduces weight",
    "start": "1174030",
    "end": "1182370"
  },
  {
    "start": "1180000",
    "end": "1206000"
  },
  {
    "text": "events but probably the more important and relevant question for most people is how do I use this thing to actually",
    "start": "1182370",
    "end": "1188190"
  },
  {
    "text": "solve my problems and so let's spend a little bit of time talking about that because that's that's really the",
    "start": "1188190",
    "end": "1194820"
  },
  {
    "text": "important part and there's so there's basically two two levels here I'll talk about there's sort of the the 101 level",
    "start": "1194820",
    "end": "1201440"
  },
  {
    "text": "undergraduate then there's like the 4:01 level graduate school level of high use weight events and the the 101 the",
    "start": "1201440",
    "end": "1208259"
  },
  {
    "start": "1206000",
    "end": "1331000"
  },
  {
    "text": "kind of like obvious thing the starting point is is that something's going on in my database now wait a vents are",
    "start": "1208259",
    "end": "1215580"
  },
  {
    "text": "reported in PG stat activity right that table if you're not familiar with it this is what PG stat activity looks like",
    "start": "1215580",
    "end": "1221580"
  },
  {
    "text": "alright it has one row in the table for every connection to your database if",
    "start": "1221580",
    "end": "1228749"
  },
  {
    "text": "there's if the kit if you have a connection then you have a row in here and then it shows you stat activity",
    "start": "1228749",
    "end": "1235080"
  },
  {
    "text": "what's the activity of that connection right now so in this example this is from a real system this was a system",
    "start": "1235080",
    "end": "1242220"
  },
  {
    "text": "that I was that I I observed at one point we have we have a lot of connections it looks like there's 33 of",
    "start": "1242220",
    "end": "1248669"
  },
  {
    "text": "them here some of them are active some of them are idle but they're connected",
    "start": "1248669",
    "end": "1253740"
  },
  {
    "text": "there's an existing network connection between a client and a server and there's a back-end process running so",
    "start": "1253740",
    "end": "1259559"
  },
  {
    "text": "there's a connection and the first thing you can see is you can see the state the active ones are pointed out and the",
    "start": "1259559",
    "end": "1266249"
  },
  {
    "text": "second thing is in this table we have two columns and they show you the weight event type in the weight event so I mean",
    "start": "1266249",
    "end": "1271440"
  },
  {
    "text": "probably the number one simplest way that use weight events is that something's happening in my database",
    "start": "1271440",
    "end": "1276869"
  },
  {
    "text": "right now I just look and see what's going on in this example we'll see a couple things that we see a lot of we",
    "start": "1276869",
    "end": "1283470"
  },
  {
    "text": "see some light weight locks the buffer iolite we lock and then we see some guys who are doing IO so you see quite a bit",
    "start": "1283470",
    "end": "1288779"
  },
  {
    "text": "of Io right some of these sessions we have there's select statements that are doing a data file read so that tells you",
    "start": "1288779",
    "end": "1295590"
  },
  {
    "text": "them right now at this very moment in time that connection is reading a block off of the disk that's what he's doing",
    "start": "1295590",
    "end": "1302730"
  },
  {
    "text": "there's another guy down here you can see a vacuum process who's buffer on buffer pen that means he would like to",
    "start": "1302730",
    "end": "1309149"
  },
  {
    "text": "go clean up this buffer and he's just waiting waiting for everybody else to be finished with that buffer so he can just",
    "start": "1309149",
    "end": "1314639"
  },
  {
    "text": "exclusively grab it for just a moment to really quickly do a bit of cleanup vacuum it up and then he'll release it",
    "start": "1314639",
    "end": "1320429"
  },
  {
    "text": "but he's currently just just waiting because somebody else is doing something inside of the block that he wants so",
    "start": "1320429",
    "end": "1327619"
  },
  {
    "text": "that's the one-on-one level oh and then I zoomed in a bit just to",
    "start": "1327619",
    "end": "1333419"
  },
  {
    "start": "1331000",
    "end": "1353000"
  },
  {
    "text": "make it a bit easier to see I should have gone up to this slide first one kind of note this particular issue that",
    "start": "1333419",
    "end": "1342780"
  },
  {
    "text": "I was working on like these were all I was specifically looking for long running sessions so these third if you were that's why they have that two hours",
    "start": "1342780",
    "end": "1350179"
  },
  {
    "text": "as the transaction runtimes in there what's the 401 level the next level of",
    "start": "1350179",
    "end": "1357990"
  },
  {
    "start": "1353000",
    "end": "1503000"
  },
  {
    "text": "using wait events is to combine wait events with sampling and this is what I kind of introduced the idea at the",
    "start": "1357990",
    "end": "1363090"
  },
  {
    "text": "beginning and once you start so the basic idea behind sampling is like so I",
    "start": "1363090",
    "end": "1369809"
  },
  {
    "text": "showed you the table which says right now at this point in time here's what all the connections are doing what's",
    "start": "1369809",
    "end": "1374850"
  },
  {
    "text": "really powerful is when you just start like grabbing a picture of that table like every second say or every 10",
    "start": "1374850",
    "end": "1380789"
  },
  {
    "text": "seconds or five seconds we like to do it every one second it gives you an amazing amount of data so",
    "start": "1380789",
    "end": "1387570"
  },
  {
    "text": "what is it's not doing is generating like a profile or a trace but what it is",
    "start": "1387570",
    "end": "1393299"
  },
  {
    "text": "doing is just you can infer you can",
    "start": "1393299",
    "end": "1398340"
  },
  {
    "text": "infer what the general profile looks like in your connection by just looking as long as you made sure that every one",
    "start": "1398340",
    "end": "1404850"
  },
  {
    "text": "second you you took a sample then if I have a sequel statement that was running",
    "start": "1404850",
    "end": "1410340"
  },
  {
    "text": "for six minutes I'm going to have 600 samples right of what it was doing and if if during an in",
    "start": "1410340",
    "end": "1417179"
  },
  {
    "text": "every sample was exactly one second spaced apart so that means that if 500",
    "start": "1417179",
    "end": "1422789"
  },
  {
    "text": "of those samples are doing i/o then probably well let's see I said it was",
    "start": "1422789",
    "end": "1428640"
  },
  {
    "text": "six minutes let's say it was ten minutes so I can make it a bit easier if 500 of those samples are doing i/o then I can",
    "start": "1428640",
    "end": "1435270"
  },
  {
    "text": "safely infer that it was probably doing i/o for 50 percent of the time you know",
    "start": "1435270",
    "end": "1440490"
  },
  {
    "text": "I didn't actually measure exactly when the i/o started and stopped but it's reasonable that knowing that it's the",
    "start": "1440490",
    "end": "1447870"
  },
  {
    "text": "samples are representative of all the time I can kind of make inferences like that so once you start collecting that",
    "start": "1447870",
    "end": "1455039"
  },
  {
    "text": "data you can use very simple analytical queries and I've got a couple of there's",
    "start": "1455039",
    "end": "1460740"
  },
  {
    "text": "a whole bunch of approaches that that are doing this for you so that I mean the top thing this this is what performance insights does",
    "start": "1460740",
    "end": "1467210"
  },
  {
    "text": "performance insights every one second it it directly attaches to memory so that",
    "start": "1467210",
    "end": "1472739"
  },
  {
    "text": "it doesn't have to run sequel I actually excuse me an RDS Postgres it does use sequel and Aurora it directly attaches",
    "start": "1472739",
    "end": "1478320"
  },
  {
    "text": "to memory and what it does is every second it just grabs a snapshot of PG",
    "start": "1478320",
    "end": "1484289"
  },
  {
    "text": "stat activity and it just saves it saves on it doesn't save it on your database server saves it outside somewhere else",
    "start": "1484289",
    "end": "1490289"
  },
  {
    "text": "so that it won't be impactful at all and and then it takes that data and it",
    "start": "1490289",
    "end": "1495570"
  },
  {
    "text": "allows you it visualizes it and it gives you a really amazing GUI that you kind of slice and dice a zoom in and zoom out",
    "start": "1495570",
    "end": "1503059"
  },
  {
    "text": "there's a couple also like these tools with something called PG Center PG Sentinel PG weight sampling are more",
    "start": "1503059",
    "end": "1509639"
  },
  {
    "text": "tools and there's probably some that I don't even have if you know more I'd love to hear about them these guys are putting it into more",
    "start": "1509639",
    "end": "1517409"
  },
  {
    "text": "sequel accessible formats I can kind of summarize what you do with it this slide",
    "start": "1517409",
    "end": "1524729"
  },
  {
    "start": "1519000",
    "end": "1712000"
  },
  {
    "text": "just sort of like showing you just sort of sort of in sequel kind of what I was",
    "start": "1524729",
    "end": "1530099"
  },
  {
    "text": "just describing verbally right I was saying like that a sequel ran for ten minutes right so this is sort of doing",
    "start": "1530099",
    "end": "1536460"
  },
  {
    "text": "the same sort of thing it's just this is here at the top first of all I'm just saying I want to find I've got all the",
    "start": "1536460",
    "end": "1543479"
  },
  {
    "text": "activity on my system I want to find like the one sequel statement which is like causing putting the most load on",
    "start": "1543479",
    "end": "1548909"
  },
  {
    "text": "the system well load is not the right way to say it the one sequel statement that's kind of dominating the activity the sequel",
    "start": "1548909",
    "end": "1555989"
  },
  {
    "text": "statement that's most active on the system that tells me the sequel",
    "start": "1555989",
    "end": "1561749"
  },
  {
    "text": "statement that my application is waiting for the most be another way to phrase that well it's very easy you just pull",
    "start": "1561749",
    "end": "1568200"
  },
  {
    "text": "all your samples group by the sequel statement and count how many samples you had right I have all the samples in the",
    "start": "1568200",
    "end": "1575070"
  },
  {
    "text": "system for 10 minutes just group by sequel and count them and if this one sequel had you know 50,000 samples and",
    "start": "1575070",
    "end": "1582450"
  },
  {
    "text": "nobody else had more than 1,000 well that one sequels probably is probably the one I want to be looking at and then",
    "start": "1582450",
    "end": "1589259"
  },
  {
    "text": "you can drill down even more where you filter now where that sequel is my top problem with sequel statement and then I",
    "start": "1589259",
    "end": "1594779"
  },
  {
    "text": "group by weight event and now I'm gonna see just for that once equal what is he waiting on",
    "start": "1594779",
    "end": "1602990"
  },
  {
    "text": "visualizing this another way this becomes the foundation of the most",
    "start": "1603710",
    "end": "1612000"
  },
  {
    "text": "powerful approach to solving performance problems that I've ever seen anywhere partly because it's so simple and",
    "start": "1612000",
    "end": "1618300"
  },
  {
    "text": "because it's so effective that you can take this simple methodology where",
    "start": "1618300",
    "end": "1624000"
  },
  {
    "text": "basically what you do is you start with your summary of active sessions this start with all that sample data and then",
    "start": "1624000",
    "end": "1631050"
  },
  {
    "text": "you just find your tops equal and your top weight events from there and you can do that with sequel performance insights",
    "start": "1631050",
    "end": "1636870"
  },
  {
    "text": "actually makes it really easy to do it visually so you don't need to write the sequel but either way it works you just",
    "start": "1636870",
    "end": "1642480"
  },
  {
    "text": "follow the process once you have the top sequel the top weight events you do and",
    "start": "1642480",
    "end": "1647850"
  },
  {
    "text": "explained analyzed with the buffers and the i/o timing and then whatever other flags you need to see at that point in",
    "start": "1647850",
    "end": "1654330"
  },
  {
    "text": "time I mean it's it's amazing to me how effective this is because I've put this",
    "start": "1654330",
    "end": "1659550"
  },
  {
    "text": "into practice dozens and dozens if not hundreds of times and almost always just",
    "start": "1659550",
    "end": "1664920"
  },
  {
    "text": "it's a very sort of prescriptive you follow these three steps and it will take you straight to the problem very",
    "start": "1664920",
    "end": "1672150"
  },
  {
    "text": "very quickly right away that you can see you can you can almost always see exactly what the problem is and and what",
    "start": "1672150",
    "end": "1679950"
  },
  {
    "text": "needs to be done to address it so then the last thing you do once you have the",
    "start": "1679950",
    "end": "1685980"
  },
  {
    "text": "plan the execution plan you can look at the step of the execution plan which is",
    "start": "1685980",
    "end": "1692730"
  },
  {
    "text": "taking the most time and you can look at the wait event that's taking the most time and those two pieces of information",
    "start": "1692730",
    "end": "1698310"
  },
  {
    "text": "so for example it's there could be a full scan of a table and I'm doing a lot",
    "start": "1698310",
    "end": "1703890"
  },
  {
    "text": "of i/o right I mean that just focuses you in on exactly where the time is",
    "start": "1703890",
    "end": "1709260"
  },
  {
    "text": "going you know so that that summarizes",
    "start": "1709260",
    "end": "1714930"
  },
  {
    "start": "1712000",
    "end": "1753000"
  },
  {
    "text": "that but we have a little bit of time left and since we have a little bit of time left I think that I could tell you",
    "start": "1714930",
    "end": "1726210"
  },
  {
    "text": "about a really really interesting development here at Amazon so doors",
    "start": "1726210",
    "end": "1731250"
  },
  {
    "text": "closed you guys all seem trustworthy so last",
    "start": "1731250",
    "end": "1738180"
  },
  {
    "text": "fall we started I only just found out",
    "start": "1738180",
    "end": "1743430"
  },
  {
    "text": "about this alright so this is top secret highly classified do not tell anybody",
    "start": "1743430",
    "end": "1750260"
  },
  {
    "text": "all right but I just found out last fall that so",
    "start": "1750260",
    "end": "1755430"
  },
  {
    "start": "1753000",
    "end": "1780000"
  },
  {
    "text": "you know Postgres is getting really big right I mean it's growing like crazy and",
    "start": "1755430",
    "end": "1761030"
  },
  {
    "text": "basically at the absolute highest levels of AWS we have a complete green light at",
    "start": "1761030",
    "end": "1766440"
  },
  {
    "text": "this point in time to start what we believe is going to be the next huge business like the biggest thing we've",
    "start": "1766440",
    "end": "1772350"
  },
  {
    "text": "seen which is selling stuffed elephants I mean Postgres is growing so fast we are going",
    "start": "1772350",
    "end": "1778800"
  },
  {
    "text": "to start a stuffed elephant store we're gonna sell on-demand stuffed elephants any kind that you want different kinds",
    "start": "1778800",
    "end": "1785280"
  },
  {
    "start": "1780000",
    "end": "1813000"
  },
  {
    "text": "of fur any color but only blue and we're I mean this is gonna be huge we're",
    "start": "1785280",
    "end": "1791850"
  },
  {
    "text": "expecting a ton I mean this is gonna this is gonna explode globally global global phenomenon here and this is this",
    "start": "1791850",
    "end": "1800970"
  },
  {
    "text": "is really great because this gives me a chance hang on okay something just",
    "start": "1800970",
    "end": "1806520"
  },
  {
    "text": "flashed up on my screen and this is not good but you know what this is perfect so this is interesting I just got this",
    "start": "1806520",
    "end": "1814140"
  },
  {
    "text": "message from knit so Nate I don't know if you met Nate he works on the the server the Postgres service team also",
    "start": "1814140",
    "end": "1819870"
  },
  {
    "text": "does as he has made some contributions back to the the community um been doing some some really cool stuff lately but",
    "start": "1819870",
    "end": "1826440"
  },
  {
    "text": "he's also been helping to get this some elephant store up and running but it",
    "start": "1826440",
    "end": "1831870"
  },
  {
    "text": "looks like there's an issue in the dev environment but this is perfect because you know what we can do here is let's",
    "start": "1831870",
    "end": "1837150"
  },
  {
    "text": "just try out I've been talking about weight events let's try it let's just try putting in practice and see if it",
    "start": "1837150",
    "end": "1843510"
  },
  {
    "text": "works so let's see here so weight events I've been talking about performance",
    "start": "1843510",
    "end": "1849630"
  },
  {
    "text": "insights I think I think kind of the easiest way to really get into weight events and illustrate some of this stuff is with P I so this is what we'll do",
    "start": "1849630",
    "end": "1856380"
  },
  {
    "text": "we'll use P I so if you're not if you haven't used this before you start on the console right and on",
    "start": "1856380",
    "end": "1863430"
  },
  {
    "text": "the RDS console performance insights is on the left here fourth one down so I'm gonna I'm gonna",
    "start": "1863430",
    "end": "1868590"
  },
  {
    "text": "click on the performance insights button here and that takes me here to the PI dashboard on the dashboard so Nate said",
    "start": "1868590",
    "end": "1875220"
  },
  {
    "start": "1871000",
    "end": "1879000"
  },
  {
    "text": "the problem was in the dev environment so I'm gonna click on my dev database here and he said well there we go",
    "start": "1875220",
    "end": "1884070"
  },
  {
    "text": "I see something that just just ran so performance insights this is the performance insights screen now remember",
    "start": "1884070",
    "end": "1890700"
  },
  {
    "text": "I told you every one second it's taking a snapshot what it's showing us here is",
    "start": "1890700",
    "end": "1895799"
  },
  {
    "text": "it's showing us what it sees every one second and what it's showing me you're gonna stacking up my weight events so",
    "start": "1895799",
    "end": "1901890"
  },
  {
    "text": "what it's showing me is that starting at about two twenty six all of a sudden",
    "start": "1901890",
    "end": "1908190"
  },
  {
    "text": "there was one active session so my database was I it's the dev system not surprising it was idle but then a two twenty six one connection started to",
    "start": "1908190",
    "end": "1915390"
  },
  {
    "text": "process a sequel and when we looked at it that guy was blue and blue is a data file read so this one connection was",
    "start": "1915390",
    "end": "1922980"
  },
  {
    "text": "reading from a data file for about two minutes and then it looks like it hopped on the CPU twice but mostly it was",
    "start": "1922980",
    "end": "1929010"
  },
  {
    "text": "reading from a data file and then it closed so that's Nate had said dev",
    "start": "1929010",
    "end": "1934409"
  },
  {
    "text": "environment was slow maybe he just he said search was slow right is what he said and you know what's interesting if",
    "start": "1934409",
    "end": "1945000"
  },
  {
    "text": "you so up at the top here shows weight events but up down at the bottom it shows you the sequel statements because",
    "start": "1945000",
    "end": "1951270"
  },
  {
    "text": "it's also grabbing the sequel right it's a little bit hard to see because it's low on the screen but the sequel",
    "start": "1951270",
    "end": "1956549"
  },
  {
    "text": "statement there's once the sequel statement there's one top sequel statement that's been running in this",
    "start": "1956549",
    "end": "1962130"
  },
  {
    "text": "window and it says select all of this stuff from the products where the short description is like question mark all",
    "start": "1962130",
    "end": "1970110"
  },
  {
    "text": "right so take note of that a quick thing something that I'll tell people",
    "start": "1970110",
    "end": "1975480"
  },
  {
    "text": "sometimes if you ever work with aw if a custom as the customers work with AWS support there's a little gear box over",
    "start": "1975480",
    "end": "1982919"
  },
  {
    "text": "on the right next to the queries if you click on that gear box let's see here click on the gear box you'll get this",
    "start": "1982919",
    "end": "1989820"
  },
  {
    "start": "1988000",
    "end": "1994000"
  },
  {
    "text": "the preferences you can flip on something called the support ID and when you flip that on now it was already down",
    "start": "1989820",
    "end": "1996960"
  },
  {
    "start": "1994000",
    "end": "2093000"
  },
  {
    "text": "here at the bottom but now it puts a support idea up I find that to be how whole thing AWS support cannot see the",
    "start": "1996960",
    "end": "2003160"
  },
  {
    "text": "actual text of sequel queries that the customers run and that's because there",
    "start": "2003160",
    "end": "2008170"
  },
  {
    "text": "could be a customer confidential data in there that that's actually it's actually encrypted in such a way that aww support",
    "start": "2008170",
    "end": "2014470"
  },
  {
    "text": "couldn't even see those queries if they wanted to because the encryption keys are are not accessible so in order to be",
    "start": "2014470",
    "end": "2023440"
  },
  {
    "text": "able to help customers what what they did and performance insights is that they they generate this digest and or",
    "start": "2023440",
    "end": "2031120"
  },
  {
    "text": "this hash of the sequel statement and then they make it that they store that in a way that the support can see it so",
    "start": "2031120",
    "end": "2037210"
  },
  {
    "text": "if you ever do need to work with AWS support you can you know support can see well there was a sequel doing a lot of",
    "start": "2037210",
    "end": "2044230"
  },
  {
    "text": "i/o and it had this accidental value but they won't be able to see your actual schema but now we can go click on that",
    "start": "2044230",
    "end": "2050770"
  },
  {
    "text": "top sequel and we can see this is interesting so here's the query select also from products where description is",
    "start": "2050770",
    "end": "2057190"
  },
  {
    "text": "like percent cuddly plush knows percent well somebody wanted to find an elephant",
    "start": "2057190",
    "end": "2062770"
  },
  {
    "text": "with a cuddly plush news it sounds like a search page though so I think we're on the right track now the weight event",
    "start": "2062770",
    "end": "2072190"
  },
  {
    "text": "that we saw the one other thing like if you hover the mouse over the bar we're still looking at that light blue and",
    "start": "2072190",
    "end": "2077679"
  },
  {
    "text": "that was a data file read way to that right so what if you don't know you see",
    "start": "2077679",
    "end": "2083110"
  },
  {
    "text": "a weight of em but you don't know what it means the place to look and I will always say this you always start in the",
    "start": "2083110",
    "end": "2088840"
  },
  {
    "text": "Postgres documentation I've said that so many times this week already so let's hop over the Postgres docs and take a",
    "start": "2088840",
    "end": "2094360"
  },
  {
    "start": "2093000",
    "end": "2117000"
  },
  {
    "text": "look this is you know this is what the page looks like now data fowl read is is",
    "start": "2094360",
    "end": "2099370"
  },
  {
    "text": "pretty pretty obvious you probably don't need to look that one up but you can kind of see right in the Postgres",
    "start": "2099370",
    "end": "2105250"
  },
  {
    "text": "documentation there's a way to vent table and it lists out all the different weight events you can get and it gives you descriptions of what they might be",
    "start": "2105250",
    "end": "2111300"
  },
  {
    "text": "these are a couple other ones so to summarize a couple of the things that i",
    "start": "2111300",
    "end": "2117100"
  },
  {
    "start": "2117000",
    "end": "2140000"
  },
  {
    "text": "just showed you performance insights will quickly give you the ability to see the query text",
    "start": "2117100",
    "end": "2122650"
  },
  {
    "text": "and the weight events by query it'll give you up to two years of history as",
    "start": "2122650",
    "end": "2128170"
  },
  {
    "text": "well so it's it's a it's the right starting point what's the next thing that we do when I kind of",
    "start": "2128170",
    "end": "2133609"
  },
  {
    "text": "through the methodology beginning so now we know the sequel statement we know it's doing data file breeze the next thing I said was to explain plan if",
    "start": "2133609",
    "end": "2141109"
  },
  {
    "start": "2140000",
    "end": "2228000"
  },
  {
    "text": "you're not familiar with explained plans I'll show you well let's just do it so there's a I'm gonna pull up PG admin",
    "start": "2141109",
    "end": "2147890"
  },
  {
    "text": "which is kind of a little graphical tool you can use with the Postgres databases you can also do this at a command line with piece equal and in PG admin you can",
    "start": "2147890",
    "end": "2157130"
  },
  {
    "text": "type the sequel and then you can click on the explain tab and you can it'll show you this graphical sort of visual",
    "start": "2157130",
    "end": "2163700"
  },
  {
    "text": "representation of the plan some people like that personally I prefer to work",
    "start": "2163700",
    "end": "2169460"
  },
  {
    "text": "with the text version of plan so what I'm gonna do is put the word explained in front here of the word select and",
    "start": "2169460",
    "end": "2176359"
  },
  {
    "text": "when I run that I'm gonna get this so see I did explain and I just put like",
    "start": "2176359",
    "end": "2181549"
  },
  {
    "text": "all the options on my explain like give me all the data and now what I'm getting is a whole bunch of text down here at",
    "start": "2181549",
    "end": "2188239"
  },
  {
    "text": "the bottom that shows me this is the execution plan for my sequel statement",
    "start": "2188239",
    "end": "2193869"
  },
  {
    "text": "now that works but there's another trick I'm gonna tell you real quick which is",
    "start": "2193869",
    "end": "2200450"
  },
  {
    "text": "that there's a guy named Hubert de pez",
    "start": "2200450",
    "end": "2207190"
  },
  {
    "text": "can't pronounce his last name I'm sorry but the website is as deep as and he has",
    "start": "2207190",
    "end": "2213170"
  },
  {
    "text": "a fantastic tool that you can use to sort of colorize and visualize your",
    "start": "2213170",
    "end": "2219049"
  },
  {
    "text": "explained plans a little bit and here what you can do is just take and copy",
    "start": "2219049",
    "end": "2224150"
  },
  {
    "text": "that text paste it in and you will get this right here so what he's done is",
    "start": "2224150",
    "end": "2231109"
  },
  {
    "start": "2228000",
    "end": "2353000"
  },
  {
    "text": "it's the same information over on the right but he just kind of visualizes it a little bit so what we see is there's",
    "start": "2231109",
    "end": "2236839"
  },
  {
    "text": "kind of three steps in the sequel plan and it's a tree format so first it's doing a sequential scan of a table then",
    "start": "2236839",
    "end": "2244279"
  },
  {
    "text": "it's doing a sort and then there's a limit clause on the top okay that's the three steps now the thing with this",
    "start": "2244279",
    "end": "2251950"
  },
  {
    "text": "visualization tool is that you don't really need to try to read at all because what he does is he just gives",
    "start": "2251950",
    "end": "2257059"
  },
  {
    "text": "you in bright red where the time wins so all you do here is you just say where",
    "start": "2257059",
    "end": "2262460"
  },
  {
    "text": "where is the red one which is the bottom one here",
    "start": "2262460",
    "end": "2267430"
  },
  {
    "text": "113 seconds in the sequential scan so that's an important piece of information",
    "start": "2267610",
    "end": "2273380"
  },
  {
    "text": "we're doing the sequel and that lines up right in the pie chart it ran for about",
    "start": "2273380",
    "end": "2279080"
  },
  {
    "text": "two minutes we saw a data file reads and here we see 113 seconds in its a",
    "start": "2279080",
    "end": "2285500"
  },
  {
    "text": "sequential scan and also tell us io timings read equals 111 seconds so all",
    "start": "2285500",
    "end": "2291380"
  },
  {
    "text": "of this lines up exactly now Nate said he was having problems in the dev",
    "start": "2291380",
    "end": "2296750"
  },
  {
    "text": "environment what's the sort of obvious thing to do in any situation like this",
    "start": "2296750",
    "end": "2301880"
  },
  {
    "text": "is if I have a QA environment that's working fine in a dev environment that's broken let's compare write sounds sounds",
    "start": "2301880",
    "end": "2310520"
  },
  {
    "text": "pretty obvious so let's do that so now I've connected to the QA",
    "start": "2310520",
    "end": "2316010"
  },
  {
    "text": "environment here and I'm gonna run the same thing here's my explained plan and here's pasted into there and you see",
    "start": "2316010",
    "end": "2323930"
  },
  {
    "text": "okay the read takes me right to the the line that sent those time to take a look at this eight seconds instead of 120 seconds and",
    "start": "2323930",
    "end": "2331280"
  },
  {
    "text": "look at the plan if you look at this it's a different plan it's got four steps and what's it doing it's doing an",
    "start": "2331280",
    "end": "2337700"
  },
  {
    "text": "index scan and then it goes back to the heap so back to the table after it reads",
    "start": "2337700",
    "end": "2342860"
  },
  {
    "text": "the index and then it sorts and limits oh we're using an index well that is",
    "start": "2342860",
    "end": "2348820"
  },
  {
    "text": "interesting before I go to the next step let me summarize these two bits so",
    "start": "2348820",
    "end": "2354680"
  },
  {
    "start": "2353000",
    "end": "2375000"
  },
  {
    "text": "explain plans this is going to be the execution plan which is going to walk you through exactly how Postgres is",
    "start": "2354680",
    "end": "2361280"
  },
  {
    "text": "going to execute your query that you gave it it'll show you the estimated cost it can also show you if you use the",
    "start": "2361280",
    "end": "2368330"
  },
  {
    "text": "keyword analyzed it'll show you the actuals as well and that's how we've been getting the actual numbers all",
    "start": "2368330",
    "end": "2376250"
  },
  {
    "start": "2375000",
    "end": "2406000"
  },
  {
    "text": "right so we had we used an index so let's compare the indexes for QA and dev",
    "start": "2376250",
    "end": "2381980"
  },
  {
    "text": "environment we just select star from PG",
    "start": "2381980",
    "end": "2387050"
  },
  {
    "text": "set user index is a simple way to say list all the indexes where the relation name is product so on this one table and",
    "start": "2387050",
    "end": "2393050"
  },
  {
    "text": "if you look here right off the bat we see it looks like our dev environment on",
    "start": "2393050",
    "end": "2399290"
  },
  {
    "text": "the Left has four in Dex's our QA environment has five we might have found the problem system",
    "start": "2399290",
    "end": "2407990"
  },
  {
    "start": "2406000",
    "end": "2437000"
  },
  {
    "text": "catalogs make this easy right you have system catalogs in Postgres that will",
    "start": "2407990",
    "end": "2413480"
  },
  {
    "text": "show you all of the objects you have statistics views as well that show you the usage of the objects I don't know if",
    "start": "2413480",
    "end": "2419990"
  },
  {
    "text": "you caught that but this was also telling us for each index how much those indexes were being used that's that's",
    "start": "2419990",
    "end": "2427280"
  },
  {
    "text": "useful as well how many tuples are read fetched that kind of stuff so easy all we should have",
    "start": "2427280",
    "end": "2435050"
  },
  {
    "text": "to do is create that index in the dev environment so let's create the index with PG admin you can do this where you",
    "start": "2435050",
    "end": "2442190"
  },
  {
    "start": "2437000",
    "end": "2608000"
  },
  {
    "text": "just sort of right-click and give me a create script and then we'll run that create an index command in our dev environment and problem did not get",
    "start": "2442190",
    "end": "2450110"
  },
  {
    "text": "solved because it didn't work well this is interesting I try to create the index",
    "start": "2450110",
    "end": "2455840"
  },
  {
    "text": "but I got an error it says operator class gen trigram ops does not exist okay if you've never seen",
    "start": "2455840",
    "end": "2465320"
  },
  {
    "text": "this before I know what's going on here so this operator class so this is a",
    "start": "2465320",
    "end": "2471650"
  },
  {
    "text": "special index this is a where it's doing a create index but you see there it says",
    "start": "2471650",
    "end": "2477910"
  },
  {
    "text": "collate PG catalog default and then it says gin trigram hops on the end it's",
    "start": "2477910",
    "end": "2483980"
  },
  {
    "text": "that and that gin trigram ops is using a custom function inside of the index and",
    "start": "2483980",
    "end": "2489050"
  },
  {
    "text": "that function is something that is defined in an extension so extensions if",
    "start": "2489050",
    "end": "2495740"
  },
  {
    "text": "you're not familiar with these you I like to tell people they're like Alexis skills is what I like to say it's",
    "start": "2495740",
    "end": "2504560"
  },
  {
    "text": "basically a way that you can give your Postgres database capabilities it didn't have before another aspect of that is",
    "start": "2504560",
    "end": "2513110"
  },
  {
    "text": "that there's there's a handful of extensions like just a couple that are actually maintained as part of the",
    "start": "2513110",
    "end": "2519350"
  },
  {
    "text": "Postgres project the vast majority of extensions for Postgres are actually",
    "start": "2519350",
    "end": "2524420"
  },
  {
    "text": "extensions that like other people have made so the whole the whole like one of the best things about Postgres is that",
    "start": "2524420",
    "end": "2530540"
  },
  {
    "text": "like for forever it's always they've had this mentality that we should be sensible try to make an extensible",
    "start": "2530540",
    "end": "2536930"
  },
  {
    "text": "database that other people can build things to plug in it which is which is why I actually think the Alexa illustration is great because part of",
    "start": "2536930",
    "end": "2544100"
  },
  {
    "text": "the genius of that is that anybody can build new skills and plug them in same with Postgres anybody can build",
    "start": "2544100",
    "end": "2549380"
  },
  {
    "text": "extensions and some of the most popular extensions like so the geospatial capabilities Postgres is like famous for",
    "start": "2549380",
    "end": "2556130"
  },
  {
    "text": "having very good geospatial capabilities well actually Postgres doesn't have",
    "start": "2556130",
    "end": "2561800"
  },
  {
    "text": "geospatial there's a project called post GIS which is an extension which is a",
    "start": "2561800",
    "end": "2567170"
  },
  {
    "text": "whole different community like it's a whole different group of people different developers different committers they store their source code",
    "start": "2567170",
    "end": "2572810"
  },
  {
    "text": "somewhere else it's an extension that plugs into Postgres right and there's a",
    "start": "2572810",
    "end": "2578510"
  },
  {
    "text": "whole bunch of these there's lots of extensions and that's what extensions do and this there's an extension here",
    "start": "2578510",
    "end": "2583790"
  },
  {
    "text": "called PG trigram once I create that extension where am i create index it",
    "start": "2583790",
    "end": "2588830"
  },
  {
    "text": "works fine and there we are so now that I've made the index let's rerun on our",
    "start": "2588830",
    "end": "2593960"
  },
  {
    "text": "dev environment that same plan with we even put cuddly plush notes right back in there and if you look down at the",
    "start": "2593960",
    "end": "2600320"
  },
  {
    "text": "bottom now my query ran in 341 milliseconds instead of two minutes and",
    "start": "2600320",
    "end": "2606280"
  },
  {
    "text": "now I think we can safely say that we've solved our problem so yeah Postgres does",
    "start": "2606280",
    "end": "2615110"
  },
  {
    "text": "have a really rich set by the way of index types too that's another thing you really need to dig into if you're coming from another system it could Postgres",
    "start": "2615110",
    "end": "2623060"
  },
  {
    "text": "can do a lot more with indexes and then I talked a bit about extensions already extensions are a super important concept",
    "start": "2623060",
    "end": "2630290"
  },
  {
    "text": "especially two because extensions you have to install them just just like you",
    "start": "2630290",
    "end": "2637010"
  },
  {
    "text": "have to just like you have to plug your skills into your Alexa right you have to",
    "start": "2637010",
    "end": "2642080"
  },
  {
    "text": "install an extension in Postgres you have to upgrade your extensions they're upgraded separately from the main",
    "start": "2642080",
    "end": "2647390"
  },
  {
    "text": "database so that covers that do we have",
    "start": "2647390",
    "end": "2652580"
  },
  {
    "text": "time you know what I just saw one other message flash up and I think we've got a couple more minutes and it would be",
    "start": "2652580",
    "end": "2658580"
  },
  {
    "text": "worth taking a look at one more example here so so grant just sent me this",
    "start": "2658580",
    "end": "2664910"
  },
  {
    "text": "message five minutes ago as you can see while we were talking and I glanced at it a moment ago but he",
    "start": "2664910",
    "end": "2671510"
  },
  {
    "text": "was in a meeting with some top customers about the elephant store secret program some some preview customers and he says",
    "start": "2671510",
    "end": "2680480"
  },
  {
    "text": "that he's heard that for a couple weeks now the site gets sluggish on occasion maybe a couple of times a day it seems",
    "start": "2680480",
    "end": "2688160"
  },
  {
    "text": "to hang for a minute but they restart their browser and everything is fine so",
    "start": "2688160",
    "end": "2694010"
  },
  {
    "text": "the customer says it's sluggish but but we asked him if they restarted their",
    "start": "2694010",
    "end": "2700279"
  },
  {
    "text": "browser they said after a browser restarted was fine again so it's clearly not a database problem right right okay",
    "start": "2700279",
    "end": "2707809"
  },
  {
    "text": "well we've been talking about p.i let's take a look at P I so this is prod because these are preview customers on",
    "start": "2707809",
    "end": "2714349"
  },
  {
    "text": "the prod box so we're gonna take a look at our actual production database now and here's the P I screen from",
    "start": "2714349",
    "end": "2721730"
  },
  {
    "text": "production and that looks interesting so",
    "start": "2721730",
    "end": "2726740"
  },
  {
    "text": "that's not what we want to see the black line by the way in performance insights",
    "start": "2726740",
    "end": "2732769"
  },
  {
    "text": "tells you the number of physical CPUs you have on your box it's in this",
    "start": "2732769",
    "end": "2738829"
  },
  {
    "text": "particular case these blue spikes are not CPU so the CPU is always green so we're not running out of CPU but it's a",
    "start": "2738829",
    "end": "2745759"
  },
  {
    "text": "really useful calibration point to have so that's I do think that's worth kind of highlighting but we have some big",
    "start": "2745759",
    "end": "2754160"
  },
  {
    "text": "spikes here it looks like on some kind of a regular interval I'd say about every 30 minutes so it's",
    "start": "2754160",
    "end": "2760369"
  },
  {
    "text": "like twice an hour ish I'm getting this big old spike well we want to look at",
    "start": "2760369",
    "end": "2766400"
  },
  {
    "text": "that let's let's look at that so performance insights great drag-and-drop capabilities so let's what you can do is",
    "start": "2766400",
    "end": "2773509"
  },
  {
    "text": "just drag with your mouse over one of these spikes I'm going to do that it'll zoom in another thing about p.i is that",
    "start": "2773509",
    "end": "2780079"
  },
  {
    "text": "right now if you look we're getting one minute is showing me a data point for every one minute right you have to zoom",
    "start": "2780079",
    "end": "2786200"
  },
  {
    "text": "in and as you zoom in more it'll get more granular it does have samples down",
    "start": "2786200",
    "end": "2791240"
  },
  {
    "text": "to the second so we'll zoom it a bit more so now that I'm under five minutes it's given me the one second samples and",
    "start": "2791240",
    "end": "2797920"
  },
  {
    "text": "this is a shape zooming in even one more level here I have seen a shape like this",
    "start": "2797920",
    "end": "2805410"
  },
  {
    "text": "so many times this is what happens this is often what broken systems look like",
    "start": "2805410",
    "end": "2812970"
  },
  {
    "text": "broken performance systems look like super common shape that what you see is",
    "start": "2812970",
    "end": "2818310"
  },
  {
    "text": "this ramped up and and the flat line at the top is when your connection pool maxed out right basically what this",
    "start": "2818310",
    "end": "2825990"
  },
  {
    "text": "means is that for a moment here literally every single connection from my app to my database was stuck and and",
    "start": "2825990",
    "end": "2833820"
  },
  {
    "text": "it would have kept climbing because you know the healthy system I've got a ton of connections you can see here and look",
    "start": "2833820",
    "end": "2840510"
  },
  {
    "text": "like there's about 32 connections in my pool right and on a healthy system there's 32 connections but at any given",
    "start": "2840510",
    "end": "2846060"
  },
  {
    "text": "point in time only one or two sequel statements running what happens when you start to see a performance problem is",
    "start": "2846060",
    "end": "2851850"
  },
  {
    "text": "that instead of the sequel statements running well one of those sequel statements like instead of going in a millisecond suddenly maybe it's stuck",
    "start": "2851850",
    "end": "2858900"
  },
  {
    "text": "maybe it's not stuck maybe it's just going to run for five minutes and then stop but even running for five minutes can",
    "start": "2858900",
    "end": "2866760"
  },
  {
    "text": "tip over a system completely if if all of those are supposed to run in two milliseconds you only have 32",
    "start": "2866760",
    "end": "2873870"
  },
  {
    "text": "connections at a pool and if you have like 64 threads in your app just 32 of",
    "start": "2873870",
    "end": "2879390"
  },
  {
    "text": "those threads have to run the 5 minute sequel and then bingo your system is down you're at you've you've exhausted your connection pool and what's happened",
    "start": "2879390",
    "end": "2887100"
  },
  {
    "text": "here is that just something is clearly wrong right because the connections are slowly stacking up and the system falls",
    "start": "2887100",
    "end": "2892290"
  },
  {
    "text": "over so what's our weight event here I will sort of this is great try to",
    "start": "2892290",
    "end": "2898770"
  },
  {
    "text": "reiterate this that like the approach that I've seen be marvelously effective for troubleshooting performance and and",
    "start": "2898770",
    "end": "2905700"
  },
  {
    "text": "this is on I would say in any database that has weight events as your starting",
    "start": "2905700",
    "end": "2910950"
  },
  {
    "text": "point should always be the weight events start here it's not that it's not that you can't use GDB those you know those",
    "start": "2910950",
    "end": "2919350"
  },
  {
    "text": "are all actually really really crucially important tools but the reason that I I tend to say that this is the starting",
    "start": "2919350",
    "end": "2926190"
  },
  {
    "text": "point is because what I've observed is that the time that it takes you to get from problem to solution can be",
    "start": "2926190",
    "end": "2933570"
  },
  {
    "text": "shortened so much and I'm just seeing the vast majority of the time it shortens the time",
    "start": "2933570",
    "end": "2938780"
  },
  {
    "text": "dramatically to start here and you just have some key pieces of information that",
    "start": "2938780",
    "end": "2943920"
  },
  {
    "text": "get you the problem quicker and getting you the solution quicker so our top weight of it here was transaction ID see",
    "start": "2943920",
    "end": "2949380"
  },
  {
    "text": "that light blue in this case we look at the key it says transaction ID now we need to look this up",
    "start": "2949380",
    "end": "2955160"
  },
  {
    "start": "2955000",
    "end": "3009000"
  },
  {
    "text": "Postgres docks so transaction ID is in",
    "start": "2955160",
    "end": "2961320"
  },
  {
    "text": "the section the category this is loc and what it says transaction ID it says it's",
    "start": "2961320",
    "end": "2968310"
  },
  {
    "text": "waiting for a transaction to finish but this is what I introduced earlier heavyweight locks so basically what this",
    "start": "2968310",
    "end": "2976950"
  },
  {
    "text": "means is that all of these sessions are waiting on a heavyweight lock that's what's going on here they're all trying",
    "start": "2976950",
    "end": "2982110"
  },
  {
    "text": "to access something which has a and transaction ID this one in particular it",
    "start": "2982110",
    "end": "2989580"
  },
  {
    "text": "just you see there's a couple different kinds of heavyweight locks but the important thing to point out is that this means there's just some sort of a",
    "start": "2989580",
    "end": "2996930"
  },
  {
    "text": "lock on an object which is at which which isn't going to be released until the transaction commits or rolls back",
    "start": "2996930",
    "end": "3002690"
  },
  {
    "text": "and that's what we're looking at so that's why it says waiting for a transaction to finish right all right so",
    "start": "3002690",
    "end": "3009500"
  },
  {
    "text": "let's go back to PI and now let me show you a few more tricks with P I this is useful stuff so over here where it says",
    "start": "3009500",
    "end": "3016040"
  },
  {
    "text": "weights this is actually a drop-down what we're gonna do is click the drop down instead of weights we're gonna pick sequel so now we can actually slice it",
    "start": "3016040",
    "end": "3024140"
  },
  {
    "text": "by sequel statement instead of wait a minute and this is interesting so now you can drill in and you can see by the",
    "start": "3024140",
    "end": "3032510"
  },
  {
    "text": "way if you didn't realize this do you are you looking at your lab environment",
    "start": "3032510",
    "end": "3037970"
  },
  {
    "text": "right now yes yes okay so you guys all connect to the dots there this is your",
    "start": "3037970",
    "end": "3045470"
  },
  {
    "text": "first lab exercise and you are welcome to do it with me right now to walk right through this so you should be able to do",
    "start": "3045470",
    "end": "3052190"
  },
  {
    "text": "all these same things in the live environment so now we're looking at it by sequel statement and you can see",
    "start": "3052190",
    "end": "3058000"
  },
  {
    "text": "there's one sequel that clearly dominates and it says update popularity sequel alright so the next thing we can",
    "start": "3058000",
    "end": "3066020"
  },
  {
    "text": "do is now notice at the bottom is switch to wait events now right so now what we can do is we can do",
    "start": "3066020",
    "end": "3072410"
  },
  {
    "text": "something kind of cool where we select a particular weight event right and then",
    "start": "3072410",
    "end": "3078140"
  },
  {
    "text": "we filter on that now the reason I'm doing this is because we had a heavyweight lock right all of these",
    "start": "3078140",
    "end": "3086480"
  },
  {
    "text": "sessions here this sequel statement is waiting for a transaction the thing that",
    "start": "3086480",
    "end": "3092090"
  },
  {
    "text": "I need to know the thing that I need to know oh they must have had it at 11:00",
    "start": "3092090",
    "end": "3097130"
  },
  {
    "text": "the thing that I need to know is who's blocking them right so in order to",
    "start": "3097130",
    "end": "3103640"
  },
  {
    "text": "figure out who's blocking them I need to know who's not waiting how do I do that well the way that we do that is what I'm",
    "start": "3103640",
    "end": "3110510"
  },
  {
    "text": "going to show you so we got the sequel's at the top and what I'm going to do is you notice that somebody is not blocked somebody's on the CPU so what I'm going",
    "start": "3110510",
    "end": "3118190"
  },
  {
    "text": "to do now is click on CPU on the bottom and when I do that now it filtered",
    "start": "3118190",
    "end": "3125210"
  },
  {
    "start": "3122000",
    "end": "3149000"
  },
  {
    "text": "everything out except for the CPU sessions and up at the top right you can see the sequel statements this is only",
    "start": "3125210",
    "end": "3132170"
  },
  {
    "text": "the sequels that are on the CPU and now I'm able to see oh look there's this one",
    "start": "3132170",
    "end": "3137720"
  },
  {
    "text": "sequel running this whole time that seems really suspicious and that yellow line is select load partner this guy",
    "start": "3137720",
    "end": "3145970"
  },
  {
    "text": "right here right so now I'll click right on that and that brings them back to this screen and if you look at the",
    "start": "3145970",
    "end": "3153080"
  },
  {
    "start": "3149000",
    "end": "3227000"
  },
  {
    "text": "timing that again like this this looks awfully suspicious you see this this sequel statement starts right here and",
    "start": "3153080",
    "end": "3159080"
  },
  {
    "text": "then as soon as that sequel statement finishes what happens boom system clears up so what we have here is very strong",
    "start": "3159080",
    "end": "3168860"
  },
  {
    "text": "evidence that this is the sequel statement that everybody else was waiting for he's the one who's probably",
    "start": "3168860",
    "end": "3175070"
  },
  {
    "text": "holding the lock now if you catch something like this in real time you can query of UPG locks and you can actually",
    "start": "3175070",
    "end": "3180920"
  },
  {
    "text": "just see directly who's blocking you the issue for us is that this issue this thing only happens twice an hour and it",
    "start": "3180920",
    "end": "3187250"
  },
  {
    "text": "was in the past so you can't look at PG locks from an hour ago you can only look at it right now now if you were",
    "start": "3187250",
    "end": "3193220"
  },
  {
    "text": "capturing snapshots of it like I suggested at the beginning you can if you're lucky in your snapshot caught",
    "start": "3193220",
    "end": "3199040"
  },
  {
    "text": "this at just the right moment you'd have it so let's just zoom in on this particular",
    "start": "3199040",
    "end": "3207729"
  },
  {
    "text": "sequel statement which is the load partner data function and this actually",
    "start": "3207729",
    "end": "3214719"
  },
  {
    "text": "turns out to be pretty easy because the great thing is if you look here this is",
    "start": "3214719",
    "end": "3221199"
  },
  {
    "text": "a function which is just running a sequel statement so now we can just go right back to where we're a moment ago apply the same process that we were",
    "start": "3221199",
    "end": "3228099"
  },
  {
    "start": "3227000",
    "end": "3287000"
  },
  {
    "text": "doing before just do and explain ah but this gives me one more thing to highlights explain analyze will run the",
    "start": "3228099",
    "end": "3238479"
  },
  {
    "text": "statements so be careful with that this is an update statement so the reason",
    "start": "3238479",
    "end": "3243849"
  },
  {
    "text": "that's important is if I explain analyze update I'm going to actually update some rows so what I'm doing here is I'm gonna",
    "start": "3243849",
    "end": "3250900"
  },
  {
    "text": "put the word B I'm gonna wrap it in a transaction and put a rollback at the bottom see how I did that and then the",
    "start": "3250900",
    "end": "3256029"
  },
  {
    "text": "other thing to look out for too is in if you ever use PG admin up here at this lightening bolts on the right side",
    "start": "3256029",
    "end": "3262239"
  },
  {
    "text": "there's a checkbox for auto commit you want to make sure that it's not auto committing because then it could just",
    "start": "3262239",
    "end": "3268150"
  },
  {
    "text": "run your sequel and commit it that's not what we want we just want to do it explained so once we have that in order",
    "start": "3268150",
    "end": "3273759"
  },
  {
    "text": "we do our explain analyze that pulls notice up here that PG admin tells me",
    "start": "3273759",
    "end": "3279910"
  },
  {
    "text": "I'm idle inside a transaction block that's great that means it didn't commit so I'm happy and then at the bottom I've",
    "start": "3279910",
    "end": "3286900"
  },
  {
    "text": "got my plan put it into D PES and what do we get here I love this tool it",
    "start": "3286900",
    "end": "3294670"
  },
  {
    "start": "3287000",
    "end": "3599000"
  },
  {
    "text": "brings your eyes right to the step it's the merge joint step now this is interesting because you don't emergent",
    "start": "3294670",
    "end": "3301449"
  },
  {
    "text": "us so it's like it's where I sort I have two sorted sets of data and then I just I'm just merging them together read both",
    "start": "3301449",
    "end": "3307779"
  },
  {
    "text": "of them in order and let's merge the rows emerging should not take 30 seconds",
    "start": "3307779",
    "end": "3315390"
  },
  {
    "text": "when everything else is like lightning fast so something is sort of fishy about",
    "start": "3315390",
    "end": "3321429"
  },
  {
    "text": "this something is fishy here and I've",
    "start": "3321429",
    "end": "3327130"
  },
  {
    "text": "seen something like this before so I actually this is this is a great",
    "start": "3327130",
    "end": "3334089"
  },
  {
    "text": "opportunity to point out when you see something fishy like this something to always kind of watch for is what's in your output column here this is telling you the",
    "start": "3334089",
    "end": "3341470"
  },
  {
    "text": "columns that are being passed up to the next step and if you look here there's this one adjust partner popularity which",
    "start": "3341470",
    "end": "3348340"
  },
  {
    "text": "has a parentheses that's a function is what that is so that's that's a function so what's",
    "start": "3348340",
    "end": "3355510"
  },
  {
    "text": "going on here is that this sequel statement had a function in it let's go",
    "start": "3355510",
    "end": "3361390"
  },
  {
    "text": "back and look again oh yes look set view count equals view count",
    "start": "3361390",
    "end": "3366640"
  },
  {
    "text": "plus adjust partner popularity of the sub-query count so that's a function",
    "start": "3366640",
    "end": "3372220"
  },
  {
    "text": "that's getting called and and what's happening is it's calling that function of this step so for each row it has to",
    "start": "3372220",
    "end": "3377770"
  },
  {
    "text": "call the function right it's almost it's it's quite likely that that function is",
    "start": "3377770",
    "end": "3383440"
  },
  {
    "text": "what's responsible for this 30 seconds of time so let's take a look at the function and see what we got here's the adjust partner popularity",
    "start": "3383440",
    "end": "3390430"
  },
  {
    "text": "function well this is just a peel PG SQL function but the great thing about this",
    "start": "3390430",
    "end": "3396060"
  },
  {
    "text": "is that it gives me an opportunity to highlight one more super common thing that we see which is numeric the use of",
    "start": "3396060",
    "end": "3405130"
  },
  {
    "text": "a numeric data type new American Postgres is not the same as numeric and",
    "start": "3405130",
    "end": "3410740"
  },
  {
    "text": "other databases in Postgres so in like",
    "start": "3410740",
    "end": "3416580"
  },
  {
    "text": "in other databases the numeric data type can have like maybe a couple hundred digits maybe a couple hundred digits",
    "start": "3416580",
    "end": "3423730"
  },
  {
    "text": "right in Postgres the numeric data type can have up to sixteen thousand digits",
    "start": "3423730",
    "end": "3432610"
  },
  {
    "text": "after the decimal and 131 thousand",
    "start": "3432610",
    "end": "3439300"
  },
  {
    "text": "digits before the decimal it's probably more than you'll ever need it's",
    "start": "3439300",
    "end": "3446910"
  },
  {
    "text": "extremely precise it's and there's a cost that goes along with that so the",
    "start": "3446910",
    "end": "3453190"
  },
  {
    "text": "thing to kind of realize with Postgres is that the numeric data type is is there for when you need like an awful",
    "start": "3453190",
    "end": "3461350"
  },
  {
    "text": "lot of precision to know that you'll never lose that precision but there's a computational cost right it's just when",
    "start": "3461350",
    "end": "3467770"
  },
  {
    "text": "you're having to deal with that level of detail it is a bit computationally expensive so in Postgres one thing at",
    "start": "3467770",
    "end": "3475420"
  },
  {
    "text": "general rule of thumb is use the right data types where you're doing Postgres",
    "start": "3475420",
    "end": "3481089"
  },
  {
    "text": "has a very rich set of data types available in Oracle for example it's not",
    "start": "3481089",
    "end": "3488019"
  },
  {
    "text": "common to use like an integer data type or a double data type in Postgres it is",
    "start": "3488019",
    "end": "3495609"
  },
  {
    "text": "really common to use a big integer for example that if that fits the range of",
    "start": "3495609",
    "end": "3500650"
  },
  {
    "text": "what you need a lot of conversion tools don't do this for you automatically but when you migrate from another database",
    "start": "3500650",
    "end": "3505869"
  },
  {
    "text": "to Oracle if your numeric already had a constraint that it could never go over ten digits then a big intz will",
    "start": "3505869",
    "end": "3513579"
  },
  {
    "text": "absolutely work for you so we'll just do that here in this particular is now this is a little alright this is a little",
    "start": "3513579",
    "end": "3520019"
  },
  {
    "text": "contrived right I just have a for loop that's adding on to a numeric but that's",
    "start": "3520019",
    "end": "3525640"
  },
  {
    "text": "okay this is just an example so we'll take and rewrite it and we'll use a big int instead of using a numeric and then",
    "start": "3525640",
    "end": "3532809"
  },
  {
    "text": "we'll just update our function to look like this and let's see what happens well once we do that let's see did I run",
    "start": "3532809",
    "end": "3540130"
  },
  {
    "text": "this before I didn't once we do that we can go back to our original sequel",
    "start": "3540130",
    "end": "3547269"
  },
  {
    "text": "statement remember the sequel statement that took about what was it two minutes to run not two minutes was it two",
    "start": "3547269",
    "end": "3553180"
  },
  {
    "text": "minutes seven seconds not two minutes so",
    "start": "3553180",
    "end": "3558969"
  },
  {
    "text": "it took seven seconds to run but if we take a quick look at it now it now runs",
    "start": "3558969",
    "end": "3564609"
  },
  {
    "text": "in 4 seconds and 780 milliseconds it sounds better so let's put that query in",
    "start": "3564609",
    "end": "3571509"
  },
  {
    "text": "to our database and see what happens",
    "start": "3571509",
    "end": "3577440"
  },
  {
    "text": "well I put that query in right around this time stamp of 9:20 and it looks",
    "start": "3577920",
    "end": "3583599"
  },
  {
    "text": "like my spikes disappeared however there was one time this was actually working",
    "start": "3583599",
    "end": "3590890"
  },
  {
    "text": "with somebody in Amazon retail with a customer in Amazon retail one time that we were troubleshooting a problem and",
    "start": "3590890",
    "end": "3596319"
  },
  {
    "text": "the problem went away and we're like yes problems gone and then we found out that they had just like stopped scheduling",
    "start": "3596319",
    "end": "3601959"
  },
  {
    "text": "the job and they had to turn it back on later but you're like Oh problem is not solved",
    "start": "3601959",
    "end": "3607599"
  },
  {
    "text": "so we do want to check that this job didn't just stop running so what we can",
    "start": "3607599",
    "end": "3613940"
  },
  {
    "text": "do is we can zoom right down to that time when we'll window when we expected it to be running as you see it was on a",
    "start": "3613940",
    "end": "3619430"
  },
  {
    "text": "schedule and once we kind of zoom in here take a look at the the list of",
    "start": "3619430",
    "end": "3629599"
  },
  {
    "text": "sequel statements that are running and the one fourth down at the bottom says select load partner data we can even",
    "start": "3629599",
    "end": "3635180"
  },
  {
    "text": "click right on that sequel statement and once we select once we select that guy",
    "start": "3635180",
    "end": "3640960"
  },
  {
    "text": "here we go we selected him and now it's showing me just a sequel and I'm seeing",
    "start": "3640960",
    "end": "3646099"
  },
  {
    "text": "that it ran in two seconds which is about what I expected so that's another example of using",
    "start": "3646099",
    "end": "3652700"
  },
  {
    "text": "performance insights in this particular case heavyweight locking which turned out to be at the bottom of the issue and",
    "start": "3652700",
    "end": "3662440"
  },
  {
    "text": "we will leave it here for now this this",
    "start": "3662440",
    "end": "3668539"
  },
  {
    "text": "would be yeah we'll leave it here for now there's probably there's more I could talk about I love talking about",
    "start": "3668539",
    "end": "3673730"
  },
  {
    "text": "weight events and I love talking about solving performance problems with weight events and we might dive into some more",
    "start": "3673730",
    "end": "3680930"
  },
  {
    "text": "stuff in the second session we'll definitely do some labs in this area but",
    "start": "3680930",
    "end": "3686059"
  },
  {
    "text": "yeah that said I always tell people wait events are the best possible place you",
    "start": "3686059",
    "end": "3691849"
  },
  {
    "text": "can start the best possible starting point for trying to troubleshoot and diagnose performance problems and this",
    "start": "3691849",
    "end": "3698329"
  },
  {
    "text": "applies to when you're helping people when you're helping your customers if your consultant helping customers the",
    "start": "3698329",
    "end": "3704779"
  },
  {
    "text": "same sort of thing that I spent many years doing that kind of stuff as well and it was always a sure bet as a good",
    "start": "3704779",
    "end": "3710269"
  },
  {
    "text": "starting point for a performance problem was to start by looking at the weight events and to look at the sort of",
    "start": "3710269",
    "end": "3715910"
  },
  {
    "text": "sampling based summary of the system all right thank you for coming",
    "start": "3715910",
    "end": "3722710"
  }
]