[
  {
    "text": "hello everyone we're back from the",
    "start": "6050",
    "end": "8700"
  },
  {
    "text": "London summit and we talked a lot about",
    "start": "8700",
    "end": "12059"
  },
  {
    "text": "IOT machine learning and a lot of new",
    "start": "12059",
    "end": "15630"
  },
  {
    "text": "and exciting topics and one question",
    "start": "15630",
    "end": "18300"
  },
  {
    "text": "that came up as where do I actually",
    "start": "18300",
    "end": "21060"
  },
  {
    "text": "store this data and this is leaving",
    "start": "21060",
    "end": "23520"
  },
  {
    "text": "databases or how do this work so I'd",
    "start": "23520",
    "end": "27210"
  },
  {
    "text": "like to share with you a little bit",
    "start": "27210",
    "end": "28650"
  },
  {
    "text": "about the current state of databases on",
    "start": "28650",
    "end": "33000"
  },
  {
    "text": "AWS and actually storing the data once",
    "start": "33000",
    "end": "36809"
  },
  {
    "text": "it comes through so the first thing I'd",
    "start": "36809",
    "end": "40710"
  },
  {
    "text": "like to show the main service that we",
    "start": "40710",
    "end": "42780"
  },
  {
    "text": "have for databases as I believe most of",
    "start": "42780",
    "end": "45600"
  },
  {
    "text": "you are using relational databases is",
    "start": "45600",
    "end": "48049"
  },
  {
    "text": "RDS and I know it's a familiar service",
    "start": "48049",
    "end": "51510"
  },
  {
    "text": "for many of you but perhaps not for",
    "start": "51510",
    "end": "54299"
  },
  {
    "text": "everyone so let me share the most",
    "start": "54299",
    "end": "57360"
  },
  {
    "text": "important points about our relational",
    "start": "57360",
    "end": "60479"
  },
  {
    "text": "databases service when you launch a",
    "start": "60479",
    "end": "63299"
  },
  {
    "text": "database on RDS the first thing to",
    "start": "63299",
    "end": "66570"
  },
  {
    "text": "notice is we have a selection of engines",
    "start": "66570",
    "end": "70049"
  },
  {
    "text": "here so on a general sense you use the",
    "start": "70049",
    "end": "75329"
  },
  {
    "text": "same software that you use on your data",
    "start": "75329",
    "end": "78719"
  },
  {
    "text": "center on your machine for development",
    "start": "78719",
    "end": "81119"
  },
  {
    "text": "you can use the same my sequel the same",
    "start": "81119",
    "end": "84509"
  },
  {
    "text": "Maria de Bay Postgres Oracle or even",
    "start": "84509",
    "end": "88320"
  },
  {
    "text": "sequel server if you're into that right",
    "start": "88320",
    "end": "90539"
  },
  {
    "text": "and Amazon aurora is our own engine it's",
    "start": "90539",
    "end": "96390"
  },
  {
    "text": "developed by Amazon but it is compatible",
    "start": "96390",
    "end": "100109"
  },
  {
    "text": "with my sequel and post-chorus so we",
    "start": "100109",
    "end": "103499"
  },
  {
    "text": "have extra features for that a lot more",
    "start": "103499",
    "end": "108060"
  },
  {
    "text": "fruit put that you would see on standard",
    "start": "108060",
    "end": "110609"
  },
  {
    "text": "my sequel and Postgres terabytes of our",
    "start": "110609",
    "end": "115020"
  },
  {
    "text": "scaling storage and and things like this",
    "start": "115020",
    "end": "118319"
  },
  {
    "text": "so the idea in this database engine is",
    "start": "118319",
    "end": "122850"
  },
  {
    "text": "that it grows automatically all scales",
    "start": "122850",
    "end": "125850"
  },
  {
    "text": "up to 64 terabytes and if you're into",
    "start": "125850",
    "end": "129300"
  },
  {
    "text": "databases shrinking of 64 terabyte",
    "start": "129300",
    "end": "131910"
  },
  {
    "text": "database may be a bit difficult but it's",
    "start": "131910",
    "end": "136640"
  },
  {
    "text": "what Aurora was be",
    "start": "136640",
    "end": "139140"
  },
  {
    "text": "form and the way it works is it",
    "start": "139140",
    "end": "142680"
  },
  {
    "text": "replicates data across six different",
    "start": "142680",
    "end": "145140"
  },
  {
    "text": "availability zones so across three",
    "start": "145140",
    "end": "148740"
  },
  {
    "text": "different availability zone so you don't",
    "start": "148740",
    "end": "150959"
  },
  {
    "text": "run risk of losing data and if one AC",
    "start": "150959",
    "end": "154709"
  },
  {
    "text": "eventually fails by a flood or a storm",
    "start": "154709",
    "end": "159270"
  },
  {
    "text": "or a zombie attack or anything you can",
    "start": "159270",
    "end": "161459"
  },
  {
    "text": "keep using the service on on other",
    "start": "161459",
    "end": "164070"
  },
  {
    "text": "things so let's proceed we could let's",
    "start": "164070",
    "end": "168209"
  },
  {
    "text": "do my sequel for example or Aurora",
    "start": "168209",
    "end": "172830"
  },
  {
    "text": "let's do both so on my sequel we can see",
    "start": "172830",
    "end": "176790"
  },
  {
    "text": "the typical features that you you would",
    "start": "176790",
    "end": "181170"
  },
  {
    "text": "have such as the selection of an",
    "start": "181170",
    "end": "184170"
  },
  {
    "text": "instance type and this Mori AZ",
    "start": "184170",
    "end": "186660"
  },
  {
    "text": "deployment and this is a crucial very",
    "start": "186660",
    "end": "189570"
  },
  {
    "text": "important difference between Aurora and",
    "start": "189570",
    "end": "192209"
  },
  {
    "text": "my sequel on my sequel you can select",
    "start": "192209",
    "end": "195750"
  },
  {
    "text": "either one or q replicas either one",
    "start": "195750",
    "end": "199920"
  },
  {
    "text": "master or a master and a replica for",
    "start": "199920",
    "end": "203790"
  },
  {
    "text": "high availability and this is how the",
    "start": "203790",
    "end": "208590"
  },
  {
    "text": "engine works like how the same my sequel",
    "start": "208590",
    "end": "211739"
  },
  {
    "text": "works for everyone when you do Aurora as",
    "start": "211739",
    "end": "214709"
  },
  {
    "text": "I said we have six replicas super easy",
    "start": "214709",
    "end": "217350"
  },
  {
    "text": "so it's automatically more eaz so that's",
    "start": "217350",
    "end": "220410"
  },
  {
    "text": "why this option does not exist in Aurora",
    "start": "220410",
    "end": "224220"
  },
  {
    "text": "and I can call this my database and my",
    "start": "224220",
    "end": "231420"
  },
  {
    "text": "give it a username a password",
    "start": "231420",
    "end": "234950"
  },
  {
    "text": "that's because this is not supported in",
    "start": "241819",
    "end": "244530"
  },
  {
    "text": "the London region yet let me switch back",
    "start": "244530",
    "end": "247709"
  },
  {
    "text": "here just a second so let's keep",
    "start": "247709",
    "end": "252590"
  },
  {
    "text": "continue with the my sequel case and use",
    "start": "252590",
    "end": "257160"
  },
  {
    "text": "production my sequel and you can select",
    "start": "257160",
    "end": "263639"
  },
  {
    "text": "your version of my sequel and your",
    "start": "263639",
    "end": "267270"
  },
  {
    "text": "instance type and all your database",
    "start": "267270",
    "end": "269610"
  },
  {
    "text": "settings as we were talking so my DB",
    "start": "269610",
    "end": "273140"
  },
  {
    "text": "this is root password will be master key",
    "start": "273140",
    "end": "277430"
  },
  {
    "text": "and you have access to the four settings",
    "start": "277430",
    "end": "285150"
  },
  {
    "text": "for VP C's for networking and I just",
    "start": "285150",
    "end": "289110"
  },
  {
    "text": "want to show the very important features",
    "start": "289110",
    "end": "293610"
  },
  {
    "text": "that you need to think about encryption",
    "start": "293610",
    "end": "296130"
  },
  {
    "text": "of course is a very important one you",
    "start": "296130",
    "end": "298650"
  },
  {
    "text": "can encrypt your database and make sure",
    "start": "298650",
    "end": "300780"
  },
  {
    "text": "that only the restricted people have",
    "start": "300780",
    "end": "303479"
  },
  {
    "text": "access you can connect with SSL and all",
    "start": "303479",
    "end": "306600"
  },
  {
    "text": "the security features that you expect",
    "start": "306600",
    "end": "309060"
  },
  {
    "text": "from enterprise grade databases this",
    "start": "309060",
    "end": "312780"
  },
  {
    "text": "backup setting is pretty important and",
    "start": "312780",
    "end": "315360"
  },
  {
    "text": "not everybody understands that we have",
    "start": "315360",
    "end": "318630"
  },
  {
    "text": "this retention period that goes up to 35",
    "start": "318630",
    "end": "322050"
  },
  {
    "text": "days and this is the time where we",
    "start": "322050",
    "end": "325050"
  },
  {
    "text": "actually store your transactions log for",
    "start": "325050",
    "end": "328710"
  },
  {
    "text": "your database so we can roll back in",
    "start": "328710",
    "end": "331410"
  },
  {
    "text": "time inside this windows so if you",
    "start": "331410",
    "end": "333810"
  },
  {
    "text": "issued an update or delete without a",
    "start": "333810",
    "end": "337530"
  },
  {
    "text": "where clause you can roll back your",
    "start": "337530",
    "end": "339930"
  },
  {
    "text": "database and sanity to any point in time",
    "start": "339930",
    "end": "343950"
  },
  {
    "text": "within this window of course the larger",
    "start": "343950",
    "end": "347760"
  },
  {
    "text": "this window is the more costs this",
    "start": "347760",
    "end": "351060"
  },
  {
    "text": "backup incurs so and of course this",
    "start": "351060",
    "end": "353940"
  },
  {
    "text": "depends on the size of the database and",
    "start": "353940",
    "end": "356250"
  },
  {
    "text": "how much it changed and things like this",
    "start": "356250",
    "end": "358950"
  },
  {
    "text": "but let's keep the the for seven days",
    "start": "358950",
    "end": "361890"
  },
  {
    "text": "and at any point you can also take a",
    "start": "361890",
    "end": "364979"
  },
  {
    "text": "snapshot of the database and this lasts",
    "start": "364979",
    "end": "367800"
  },
  {
    "text": "until you delete it so this",
    "start": "367800",
    "end": "371940"
  },
  {
    "text": "this is the two ways you can backup a",
    "start": "371940",
    "end": "374130"
  },
  {
    "text": "database on Amazon you can either roll",
    "start": "374130",
    "end": "379800"
  },
  {
    "text": "back to an existing State on pointing",
    "start": "379800",
    "end": "382680"
  },
  {
    "text": "time recovery or you can recover from a",
    "start": "382680",
    "end": "385290"
  },
  {
    "text": "snapshot that may have happened years",
    "start": "385290",
    "end": "388050"
  },
  {
    "text": "ago so that's how it goes and this is",
    "start": "388050",
    "end": "391260"
  },
  {
    "text": "important for auditing for disaster",
    "start": "391260",
    "end": "394380"
  },
  {
    "text": "recovery and many other reasons you can",
    "start": "394380",
    "end": "397740"
  },
  {
    "text": "export the logs to s3 and many many",
    "start": "397740",
    "end": "403200"
  },
  {
    "text": "other interesting settings here but I",
    "start": "403200",
    "end": "407100"
  },
  {
    "text": "will just go over as we don't have a lot",
    "start": "407100",
    "end": "409890"
  },
  {
    "text": "of time this is all you need to get my",
    "start": "409890",
    "end": "412950"
  },
  {
    "text": "sequel running for example on on RDS and",
    "start": "412950",
    "end": "416040"
  },
  {
    "text": "the same features are available or",
    "start": "416040",
    "end": "419510"
  },
  {
    "text": "similarly available for Aurora you see",
    "start": "419510",
    "end": "422880"
  },
  {
    "text": "when we launch Aurora you can select the",
    "start": "422880",
    "end": "426900"
  },
  {
    "text": "the post let's do a post query as one",
    "start": "426900",
    "end": "429360"
  },
  {
    "text": "and here's the the same thing the engine",
    "start": "429360",
    "end": "432960"
  },
  {
    "text": "and the instance type and if you want",
    "start": "432960",
    "end": "436680"
  },
  {
    "text": "replicas or not and the same ideas so",
    "start": "436680",
    "end": "440669"
  },
  {
    "text": "this is my t be my TB Aurora its root",
    "start": "440669",
    "end": "448980"
  },
  {
    "text": "its master key",
    "start": "448980",
    "end": "452720"
  },
  {
    "text": "and that's it I will go with the four",
    "start": "454720",
    "end": "458870"
  },
  {
    "text": "settings and that's all you need to to",
    "start": "458870",
    "end": "461870"
  },
  {
    "text": "launch our database on on AWS from the",
    "start": "461870",
    "end": "465020"
  },
  {
    "text": "standpoint of a relational database",
    "start": "465020",
    "end": "468639"
  },
  {
    "text": "again there's a lot we could talk about",
    "start": "468639",
    "end": "472550"
  },
  {
    "text": "on relational databases just showing a",
    "start": "472550",
    "end": "476240"
  },
  {
    "text": "couple different options here you can",
    "start": "476240",
    "end": "478190"
  },
  {
    "text": "see they're being created and in a few",
    "start": "478190",
    "end": "481100"
  },
  {
    "text": "minutes they will be available and you",
    "start": "481100",
    "end": "483229"
  },
  {
    "text": "can connect to it query to it in the",
    "start": "483229",
    "end": "486410"
  },
  {
    "text": "same way that you would with regular",
    "start": "486410",
    "end": "489530"
  },
  {
    "text": "database a few things to keep in mind is",
    "start": "489530",
    "end": "494380"
  },
  {
    "text": "in Aurora we have two new features an",
    "start": "494380",
    "end": "498770"
  },
  {
    "text": "outside at last reinvent that makes this",
    "start": "498770",
    "end": "501699"
  },
  {
    "text": "totally different from the usual",
    "start": "501699",
    "end": "504520"
  },
  {
    "text": "database on my sequel Postgres it's one",
    "start": "504520",
    "end": "509000"
  },
  {
    "text": "hour or a server les is coming so soon",
    "start": "509000",
    "end": "512029"
  },
  {
    "text": "you want me to create instances or drop",
    "start": "512029",
    "end": "515479"
  },
  {
    "text": "instances or resize instances it's gonna",
    "start": "515479",
    "end": "518390"
  },
  {
    "text": "work server less so you just have an",
    "start": "518390",
    "end": "520550"
  },
  {
    "text": "endpoint connect to it send queries and",
    "start": "520550",
    "end": "523520"
  },
  {
    "text": "you paid just for the time that that",
    "start": "523520",
    "end": "527390"
  },
  {
    "text": "query is being processed and the storage",
    "start": "527390",
    "end": "530029"
  },
  {
    "text": "that it uses and another one is Aurora",
    "start": "530029",
    "end": "533480"
  },
  {
    "text": "Modi master so here we have this",
    "start": "533480",
    "end": "537589"
  },
  {
    "text": "distinction between primary and",
    "start": "537589",
    "end": "539690"
  },
  {
    "text": "secondary nodes as you would have in",
    "start": "539690",
    "end": "542060"
  },
  {
    "text": "regular no sequel databases but in",
    "start": "542060",
    "end": "544970"
  },
  {
    "text": "Aurora now you can have more massive",
    "start": "544970",
    "end": "548209"
  },
  {
    "text": "replication and write to either nodes",
    "start": "548209",
    "end": "550790"
  },
  {
    "text": "and it will do synchronization and",
    "start": "550790",
    "end": "553459"
  },
  {
    "text": "serialization of the transactions and",
    "start": "553459",
    "end": "555910"
  },
  {
    "text": "conflict resolution and all you need to",
    "start": "555910",
    "end": "559070"
  },
  {
    "text": "have more in master databases so take a",
    "start": "559070",
    "end": "562610"
  },
  {
    "text": "look at that as well",
    "start": "562610",
    "end": "563750"
  },
  {
    "text": "and that's it from the relational",
    "start": "563750",
    "end": "566240"
  },
  {
    "text": "standpoint let me switch gears a bit to",
    "start": "566240",
    "end": "568700"
  },
  {
    "text": "the know relational side of things so",
    "start": "568700",
    "end": "571490"
  },
  {
    "text": "here in the console we also have a",
    "start": "571490",
    "end": "575450"
  },
  {
    "text": "service called dynamo dB so in general",
    "start": "575450",
    "end": "580100"
  },
  {
    "text": "DB you don't have the same structure as",
    "start": "580100",
    "end": "582860"
  },
  {
    "text": "you have on a traditional relational",
    "start": "582860",
    "end": "585110"
  },
  {
    "text": "database on dynamo DB you can",
    "start": "585110",
    "end": "587550"
  },
  {
    "text": "create a table directly and let's say",
    "start": "587550",
    "end": "590640"
  },
  {
    "text": "this table is events from IOT telemetry",
    "start": "590640",
    "end": "595560"
  },
  {
    "text": "data or something like this and the time",
    "start": "595560",
    "end": "598709"
  },
  {
    "text": "stamp for example can be my key or the",
    "start": "598709",
    "end": "602940"
  },
  {
    "text": "device ID is mine my ID my primary key",
    "start": "602940",
    "end": "610740"
  },
  {
    "text": "and this is pretty important because",
    "start": "610740",
    "end": "613440"
  },
  {
    "text": "this is how this data is going to be",
    "start": "613440",
    "end": "616040"
  },
  {
    "text": "charted how it's going to be divided",
    "start": "616040",
    "end": "618089"
  },
  {
    "text": "across your nodes that are back in your",
    "start": "618089",
    "end": "621510"
  },
  {
    "text": "table and I can add a sort key by a",
    "start": "621510",
    "end": "625740"
  },
  {
    "text": "timestamp and this would allow me to",
    "start": "625740",
    "end": "631250"
  },
  {
    "text": "search inside this device ID I want just",
    "start": "631250",
    "end": "635579"
  },
  {
    "text": "the timestamps there are above a certain",
    "start": "635579",
    "end": "638790"
  },
  {
    "text": "period so this is the main criteria for",
    "start": "638790",
    "end": "642420"
  },
  {
    "text": "getting data out of DynamoDB if you",
    "start": "642420",
    "end": "645300"
  },
  {
    "text": "search by device ID or by device ID and",
    "start": "645300",
    "end": "648329"
  },
  {
    "text": "timestamp you can get data really really",
    "start": "648329",
    "end": "651060"
  },
  {
    "text": "fast",
    "start": "651060",
    "end": "651720"
  },
  {
    "text": "much faster than if you would search the",
    "start": "651720",
    "end": "654089"
  },
  {
    "text": "entire table for for this and let's not",
    "start": "654089",
    "end": "659100"
  },
  {
    "text": "use the full settings here and talk",
    "start": "659100",
    "end": "661350"
  },
  {
    "text": "about provision capacity so the key idea",
    "start": "661350",
    "end": "665250"
  },
  {
    "text": "in DynamoDB is that you don't need to",
    "start": "665250",
    "end": "669200"
  },
  {
    "text": "provision or to understand the back-end",
    "start": "669200",
    "end": "673620"
  },
  {
    "text": "infrastructure for this table",
    "start": "673620",
    "end": "675270"
  },
  {
    "text": "it will grow to keep this capacity at",
    "start": "675270",
    "end": "680070"
  },
  {
    "text": "how much data you have so if you specify",
    "start": "680070",
    "end": "683750"
  },
  {
    "text": "five real units and five right units let",
    "start": "683750",
    "end": "689430"
  },
  {
    "text": "me disable all rescaling for now so this",
    "start": "689430",
    "end": "692490"
  },
  {
    "text": "would costs 291 a month and this is how",
    "start": "692490",
    "end": "697649"
  },
  {
    "text": "much you use your data like if you have",
    "start": "697649",
    "end": "700730"
  },
  {
    "text": "five gigabytes five terabytes or five",
    "start": "700730",
    "end": "704190"
  },
  {
    "text": "petabytes of data it would provision the",
    "start": "704190",
    "end": "707430"
  },
  {
    "text": "amount of hardware and infrastructure",
    "start": "707430",
    "end": "709860"
  },
  {
    "text": "required to keep these units that you",
    "start": "709860",
    "end": "713399"
  },
  {
    "text": "provisioned so and you can change this",
    "start": "713399",
    "end": "717360"
  },
  {
    "text": "at any time without impact on your",
    "start": "717360",
    "end": "720089"
  },
  {
    "text": "tables",
    "start": "720089",
    "end": "721260"
  },
  {
    "text": "if you have a new gem ocean coming or a",
    "start": "721260",
    "end": "725130"
  },
  {
    "text": "corporate event or at any time you need",
    "start": "725130",
    "end": "729480"
  },
  {
    "text": "more reads or more rights you can just",
    "start": "729480",
    "end": "731610"
  },
  {
    "text": "say hey now I need the event is on is",
    "start": "731610",
    "end": "735420"
  },
  {
    "text": "we're live I need 50 write capacity",
    "start": "735420",
    "end": "737760"
  },
  {
    "text": "units and it's just like that it called",
    "start": "737760",
    "end": "741570"
  },
  {
    "text": "it will cost proportionally but you have",
    "start": "741570",
    "end": "744750"
  },
  {
    "text": "this ability to scale up and scale down",
    "start": "744750",
    "end": "747000"
  },
  {
    "text": "your database as you need and although",
    "start": "747000",
    "end": "751080"
  },
  {
    "text": "this is great sometimes it's hard to",
    "start": "751080",
    "end": "753570"
  },
  {
    "text": "determine like how much right capacity I",
    "start": "753570",
    "end": "756360"
  },
  {
    "text": "need how much read capacity I need like",
    "start": "756360",
    "end": "759170"
  },
  {
    "text": "this floats a lot they float a lot in",
    "start": "759170",
    "end": "761880"
  },
  {
    "text": "depending on your app so we have this",
    "start": "761880",
    "end": "765000"
  },
  {
    "text": "all rescaling for for dynamodb so here",
    "start": "765000",
    "end": "769440"
  },
  {
    "text": "we can say hey hey I want to always",
    "start": "769440",
    "end": "772230"
  },
  {
    "text": "scale my reading read capacities so when",
    "start": "772230",
    "end": "775110"
  },
  {
    "text": "it's at 70 percent utilization I will",
    "start": "775110",
    "end": "778830"
  },
  {
    "text": "increase the volume and the same to the",
    "start": "778830",
    "end": "783150"
  },
  {
    "text": "eye you can do the same to the indexes",
    "start": "783150",
    "end": "785820"
  },
  {
    "text": "that back your table and that's that's",
    "start": "785820",
    "end": "789330"
  },
  {
    "text": "all you need once you create a dynamo",
    "start": "789330",
    "end": "792510"
  },
  {
    "text": "table it's ready for use in nearly",
    "start": "792510",
    "end": "798420"
  },
  {
    "text": "instantly so there's one take as much as",
    "start": "798420",
    "end": "801690"
  },
  {
    "text": "a relational database would and will be",
    "start": "801690",
    "end": "804570"
  },
  {
    "text": "able to soon see the data let me see if",
    "start": "804570",
    "end": "807300"
  },
  {
    "text": "in this other table I have some items",
    "start": "807300",
    "end": "809370"
  },
  {
    "text": "here that I can add and not really",
    "start": "809370",
    "end": "813480"
  },
  {
    "text": "important detail about dynamo DB is that",
    "start": "813480",
    "end": "816090"
  },
  {
    "text": "it's schema-less so when I create an",
    "start": "816090",
    "end": "819270"
  },
  {
    "text": "item see that we have resource ID and",
    "start": "819270",
    "end": "821970"
  },
  {
    "text": "timestamp here but I can create a new",
    "start": "821970",
    "end": "824430"
  },
  {
    "text": "one that has a resource ID and another",
    "start": "824430",
    "end": "831150"
  },
  {
    "text": "field for example anything at all and",
    "start": "831150",
    "end": "835110"
  },
  {
    "text": "it's one two three and you can see that",
    "start": "835110",
    "end": "839190"
  },
  {
    "text": "now my table has this column but this is",
    "start": "839190",
    "end": "842430"
  },
  {
    "text": "just a UI thing because I don't need to",
    "start": "842430",
    "end": "845490"
  },
  {
    "text": "alter table create table if I just add",
    "start": "845490",
    "end": "848100"
  },
  {
    "text": "data it will hold to that data as you",
    "start": "848100",
    "end": "851220"
  },
  {
    "text": "will expect in other key value or",
    "start": "851220",
    "end": "854130"
  },
  {
    "text": "document",
    "start": "854130",
    "end": "854730"
  },
  {
    "text": "databases here you have the metrics",
    "start": "854730",
    "end": "859649"
  },
  {
    "text": "alarms capacity indexes and everything",
    "start": "859649",
    "end": "862829"
  },
  {
    "text": "regarding your data I'd like to show",
    "start": "862829",
    "end": "865260"
  },
  {
    "text": "some very new announcements as well as",
    "start": "865260",
    "end": "868500"
  },
  {
    "text": "we were talking about the new stuff on",
    "start": "868500",
    "end": "870449"
  },
  {
    "text": "relational databases I'm going to show",
    "start": "870449",
    "end": "873029"
  },
  {
    "text": "some new features on no sequel and",
    "start": "873029",
    "end": "875790"
  },
  {
    "text": "dinamo first one is global tables so if",
    "start": "875790",
    "end": "882000"
  },
  {
    "text": "you have a global application such as",
    "start": "882000",
    "end": "884550"
  },
  {
    "text": "social media or any kind of global app",
    "start": "884550",
    "end": "887490"
  },
  {
    "text": "you may experience this problem that",
    "start": "887490",
    "end": "892019"
  },
  {
    "text": "hosting the data based on a single",
    "start": "892019",
    "end": "893730"
  },
  {
    "text": "region may may take a lot of time for",
    "start": "893730",
    "end": "897060"
  },
  {
    "text": "this data to go from one place to",
    "start": "897060",
    "end": "898680"
  },
  {
    "text": "another so you may want to replicate",
    "start": "898680",
    "end": "900540"
  },
  {
    "text": "this worldwide and it brings us all",
    "start": "900540",
    "end": "903480"
  },
  {
    "text": "these challenges again of conflict",
    "start": "903480",
    "end": "906149"
  },
  {
    "text": "resolution and how do you sync data and",
    "start": "906149",
    "end": "911750"
  },
  {
    "text": "share it and stream it so when you",
    "start": "911750",
    "end": "914850"
  },
  {
    "text": "enable streams you are just saying that",
    "start": "914850",
    "end": "917310"
  },
  {
    "text": "you're okay with dynamodb shipping your",
    "start": "917310",
    "end": "920490"
  },
  {
    "text": "data out and oh this is not this is not",
    "start": "920490",
    "end": "925350"
  },
  {
    "text": "an empty table let's let me get those",
    "start": "925350",
    "end": "929100"
  },
  {
    "text": "events and enable streams on that and",
    "start": "929100",
    "end": "933110"
  },
  {
    "text": "add other regions so now we're in",
    "start": "933110",
    "end": "936750"
  },
  {
    "text": "Virginia I will replicate to Ireland so",
    "start": "936750",
    "end": "942060"
  },
  {
    "text": "it's creating my replica table it's",
    "start": "942060",
    "end": "946319"
  },
  {
    "text": "creating this table on the Ireland",
    "start": "946319",
    "end": "948540"
  },
  {
    "text": "region and now it's there so if I go to",
    "start": "948540",
    "end": "952709"
  },
  {
    "text": "the data here and say that I have my",
    "start": "952709",
    "end": "957690"
  },
  {
    "text": "device with time stamp now let's see if",
    "start": "957690",
    "end": "962399"
  },
  {
    "text": "I can get a better now",
    "start": "962399",
    "end": "967980"
  },
  {
    "text": "yeah now it's okay",
    "start": "967980",
    "end": "970990"
  },
  {
    "text": "pretended it's a time stamp and if we go",
    "start": "970990",
    "end": "975670"
  },
  {
    "text": "to the other region in Ireland we have",
    "start": "975670",
    "end": "982330"
  },
  {
    "text": "the events table there and the items",
    "start": "982330",
    "end": "984850"
  },
  {
    "text": "soon will be there right not it's not",
    "start": "984850",
    "end": "988480"
  },
  {
    "text": "loo it may take a couple time before",
    "start": "988480",
    "end": "992560"
  },
  {
    "text": "it's set ups and synchronize the table",
    "start": "992560",
    "end": "994870"
  },
  {
    "text": "but it should be here soon and let's go",
    "start": "994870",
    "end": "1000840"
  },
  {
    "text": "back to my original region and see if",
    "start": "1000840",
    "end": "1004500"
  },
  {
    "text": "there is any indication on how that is",
    "start": "1004500",
    "end": "1006960"
  },
  {
    "text": "replicating well but that's all the",
    "start": "1006960",
    "end": "1014070"
  },
  {
    "text": "other setup that you need for having a",
    "start": "1014070",
    "end": "1017610"
  },
  {
    "text": "global DynamoDB table that you can query",
    "start": "1017610",
    "end": "1021150"
  },
  {
    "text": "or write from any region and have a",
    "start": "1021150",
    "end": "1024900"
  },
  {
    "text": "truly global apps if you've done this by",
    "start": "1024900",
    "end": "1029220"
  },
  {
    "text": "yourself with other kinds of replication",
    "start": "1029220",
    "end": "1032310"
  },
  {
    "text": "you see how hard it is you have your",
    "start": "1032310",
    "end": "1035250"
  },
  {
    "text": "database engine needs to know if the",
    "start": "1035250",
    "end": "1039120"
  },
  {
    "text": "client and the server if they're in the",
    "start": "1039120",
    "end": "1042000"
  },
  {
    "text": "if the replication is going to occur in",
    "start": "1042000",
    "end": "1044670"
  },
  {
    "text": "the same region if it's going to cross",
    "start": "1044670",
    "end": "1047100"
  },
  {
    "text": "regions because one is synchronous the",
    "start": "1047100",
    "end": "1049680"
  },
  {
    "text": "other is asynchronous as you could see",
    "start": "1049680",
    "end": "1052260"
  },
  {
    "text": "and this is a bit hard to manage on",
    "start": "1052260",
    "end": "1055920"
  },
  {
    "text": "yourself and it's now embedded natively",
    "start": "1055920",
    "end": "1058770"
  },
  {
    "text": "as a feature of DynamoDB another kind",
    "start": "1058770",
    "end": "1062010"
  },
  {
    "text": "hard point with this amount of data and",
    "start": "1062010",
    "end": "1065340"
  },
  {
    "text": "huge amounts of data is backup so on",
    "start": "1065340",
    "end": "1069290"
  },
  {
    "text": "dynamodb backups you can just back up",
    "start": "1069290",
    "end": "1072930"
  },
  {
    "text": "the the entire table and as it's being",
    "start": "1072930",
    "end": "1075930"
  },
  {
    "text": "enabled now we need to take a break and",
    "start": "1075930",
    "end": "1080820"
  },
  {
    "text": "come back to backups in dynamodb once",
    "start": "1080820",
    "end": "1083610"
  },
  {
    "text": "this table is created let's see if I can",
    "start": "1083610",
    "end": "1085950"
  },
  {
    "text": "get it on this other table that I",
    "start": "1085950",
    "end": "1088020"
  },
  {
    "text": "already have so yeah when I'm when I",
    "start": "1088020",
    "end": "1090690"
  },
  {
    "text": "enable this it takes a bit and I can",
    "start": "1090690",
    "end": "1096090"
  },
  {
    "text": "create a backup",
    "start": "1096090",
    "end": "1098590"
  },
  {
    "text": "and say this is my now backup and you",
    "start": "1098590",
    "end": "1105249"
  },
  {
    "text": "can see that it's instant regardless of",
    "start": "1105249",
    "end": "1107830"
  },
  {
    "text": "the amount of data there you have this",
    "start": "1107830",
    "end": "1109840"
  },
  {
    "text": "is just the same time that you expect it",
    "start": "1109840",
    "end": "1113379"
  },
  {
    "text": "to happen and again this is to support",
    "start": "1113379",
    "end": "1117999"
  },
  {
    "text": "those two kinds of backups as we were",
    "start": "1117999",
    "end": "1121179"
  },
  {
    "text": "talking in the relational case you can",
    "start": "1121179",
    "end": "1123730"
  },
  {
    "text": "roll back to any point in time so say",
    "start": "1123730",
    "end": "1126820"
  },
  {
    "text": "you have completed an update and deleted",
    "start": "1126820",
    "end": "1130720"
  },
  {
    "text": "items that you should you can roll back",
    "start": "1130720",
    "end": "1132879"
  },
  {
    "text": "to any point in time and recover your",
    "start": "1132879",
    "end": "1136269"
  },
  {
    "text": "table to sanity or you can create a",
    "start": "1136269",
    "end": "1139960"
  },
  {
    "text": "backup manually and saying I want a",
    "start": "1139960",
    "end": "1142480"
  },
  {
    "text": "snapshot at this point in time and this",
    "start": "1142480",
    "end": "1144999"
  },
  {
    "text": "keeps forever and you can roll back to",
    "start": "1144999",
    "end": "1147639"
  },
  {
    "text": "it at any time and also we have embedded",
    "start": "1147639",
    "end": "1153249"
  },
  {
    "text": "in dynamodb something called the Dax as",
    "start": "1153249",
    "end": "1156850"
  },
  {
    "text": "we're going to talk now a very popular",
    "start": "1156850",
    "end": "1160029"
  },
  {
    "text": "thing to do if this DynamoDB tables and",
    "start": "1160029",
    "end": "1163809"
  },
  {
    "text": "relational databases at all is cache",
    "start": "1163809",
    "end": "1166210"
  },
  {
    "text": "them so we have a separate service for",
    "start": "1166210",
    "end": "1170049"
  },
  {
    "text": "in-memory caches that's elastic cash in",
    "start": "1170049",
    "end": "1173679"
  },
  {
    "text": "elastic cache you can create mem cache D",
    "start": "1173679",
    "end": "1177309"
  },
  {
    "text": "or Redis clusters so I can just come",
    "start": "1177309",
    "end": "1180279"
  },
  {
    "text": "here and create my raddest instance and",
    "start": "1180279",
    "end": "1185759"
  },
  {
    "text": "use it to or cache or use as a data",
    "start": "1185759",
    "end": "1191740"
  },
  {
    "text": "store on my app if your app uses red as",
    "start": "1191740",
    "end": "1194649"
  },
  {
    "text": "natively that's a lot of cases again the",
    "start": "1194649",
    "end": "1197950"
  },
  {
    "text": "same more easy with all failover so you",
    "start": "1197950",
    "end": "1200799"
  },
  {
    "text": "don't have to setup high availability",
    "start": "1200799",
    "end": "1202600"
  },
  {
    "text": "for readies yourself and the same setup",
    "start": "1202600",
    "end": "1207009"
  },
  {
    "text": "that you would expect but even so",
    "start": "1207009",
    "end": "1209799"
  },
  {
    "text": "integrating Redis and dynamodb would be",
    "start": "1209799",
    "end": "1213759"
  },
  {
    "text": "quite a task in some apps so we have in",
    "start": "1213759",
    "end": "1217389"
  },
  {
    "text": "dynamo DB embedded cache callbacks",
    "start": "1217389",
    "end": "1220749"
  },
  {
    "text": "dynamo DB accelerator that you can just",
    "start": "1220749",
    "end": "1224830"
  },
  {
    "text": "create a cluster and it will be fronting",
    "start": "1224830",
    "end": "1228759"
  },
  {
    "text": "you're dead dynamo DB tables and",
    "start": "1228759",
    "end": "1231710"
  },
  {
    "text": "I'm cashing in memory so you can go from",
    "start": "1231710",
    "end": "1235940"
  },
  {
    "text": "the one or two milliseconds that",
    "start": "1235940",
    "end": "1239770"
  },
  {
    "text": "DynamoDB answers in really single-digit",
    "start": "1239770",
    "end": "1243500"
  },
  {
    "text": "latency is the term that we use so it's",
    "start": "1243500",
    "end": "1246200"
  },
  {
    "text": "likely less than 10 seconds but if you",
    "start": "1246200",
    "end": "1250040"
  },
  {
    "text": "create a cache cluster",
    "start": "1250040",
    "end": "1253100"
  },
  {
    "text": "it will probably drop to one or two",
    "start": "1253100",
    "end": "1256270"
  },
  {
    "text": "milliseconds or even to the microseconds",
    "start": "1256270",
    "end": "1258680"
  },
  {
    "text": "range so there's a pretty important",
    "start": "1258680",
    "end": "1261620"
  },
  {
    "text": "especially for the IOT and high",
    "start": "1261620",
    "end": "1265640"
  },
  {
    "text": "frequency cases that we were talking",
    "start": "1265640",
    "end": "1267800"
  },
  {
    "text": "about and and this is wildly different",
    "start": "1267800",
    "end": "1275570"
  },
  {
    "text": "in any many different customers so for",
    "start": "1275570",
    "end": "1278630"
  },
  {
    "text": "example in many cases we need search so",
    "start": "1278630",
    "end": "1282140"
  },
  {
    "text": "we have also services for that and cloud",
    "start": "1282140",
    "end": "1286490"
  },
  {
    "text": "search was initially the what we had",
    "start": "1286490",
    "end": "1289160"
  },
  {
    "text": "based on solar and now we have elastic",
    "start": "1289160",
    "end": "1292880"
  },
  {
    "text": "search based on elastic search and when",
    "start": "1292880",
    "end": "1296240"
  },
  {
    "text": "you create a new elastic search domain",
    "start": "1296240",
    "end": "1298220"
  },
  {
    "text": "it's your regular my ES and you just say",
    "start": "1298220",
    "end": "1304510"
  },
  {
    "text": "how many instances you want the size and",
    "start": "1304510",
    "end": "1308090"
  },
  {
    "text": "Amazon will take care of provisioning",
    "start": "1308090",
    "end": "1311470"
  },
  {
    "text": "securing and optimizing all those",
    "start": "1311470",
    "end": "1314990"
  },
  {
    "text": "details that you would need by hand I",
    "start": "1314990",
    "end": "1317720"
  },
  {
    "text": "will just select that go through with",
    "start": "1317720",
    "end": "1321170"
  },
  {
    "text": "the full settings so you see what the",
    "start": "1321170",
    "end": "1323990"
  },
  {
    "text": "experience is expected here go with",
    "start": "1323990",
    "end": "1327200"
  },
  {
    "text": "public access you can not not probably a",
    "start": "1327200",
    "end": "1331070"
  },
  {
    "text": "good idea for production going this",
    "start": "1331070",
    "end": "1333910"
  },
  {
    "text": "allowing everybody to access your search",
    "start": "1333910",
    "end": "1336830"
  },
  {
    "text": "engine but let's see if I can get this",
    "start": "1336830",
    "end": "1340400"
  },
  {
    "text": "this open access to the domain is I",
    "start": "1340400",
    "end": "1346190"
  },
  {
    "text": "accept the risk let's go so this is all",
    "start": "1346190",
    "end": "1352280"
  },
  {
    "text": "you need to have elastic search kibana",
    "start": "1352280",
    "end": "1355580"
  },
  {
    "text": "and run your L key stack your databases",
    "start": "1355580",
    "end": "1360500"
  },
  {
    "text": "and things like this so the",
    "start": "1360500",
    "end": "1363760"
  },
  {
    "text": "to sum things up the idea here is that",
    "start": "1363760",
    "end": "1366910"
  },
  {
    "text": "you can mix and match your favorite set",
    "start": "1366910",
    "end": "1370450"
  },
  {
    "text": "of databases if you're into analytics on",
    "start": "1370450",
    "end": "1374530"
  },
  {
    "text": "relational databases data warehousing we",
    "start": "1374530",
    "end": "1377920"
  },
  {
    "text": "have Amazon redshift for that you can",
    "start": "1377920",
    "end": "1380260"
  },
  {
    "text": "have your star schema and use your",
    "start": "1380260",
    "end": "1382930"
  },
  {
    "text": "saying the same bi + DW tools that",
    "start": "1382930",
    "end": "1387100"
  },
  {
    "text": "you're using - or if you're into no",
    "start": "1387100",
    "end": "1390880"
  },
  {
    "text": "sequel and high scale databases for the",
    "start": "1390880",
    "end": "1396400"
  },
  {
    "text": "FAMAS web scale of data that is",
    "start": "1396400",
    "end": "1399250"
  },
  {
    "text": "available as well as a service that you",
    "start": "1399250",
    "end": "1401860"
  },
  {
    "text": "don't need anything to manage back up",
    "start": "1401860",
    "end": "1404110"
  },
  {
    "text": "real easy just integrate with your app",
    "start": "1404110",
    "end": "1406360"
  },
  {
    "text": "and you're done and another interesting",
    "start": "1406360",
    "end": "1410070"
  },
  {
    "text": "scenario is that you're not coupled to",
    "start": "1410070",
    "end": "1414700"
  },
  {
    "text": "this like if you want to use the same my",
    "start": "1414700",
    "end": "1417400"
  },
  {
    "text": "sequel that you have on your development",
    "start": "1417400",
    "end": "1419080"
  },
  {
    "text": "machine that's available if you want to",
    "start": "1419080",
    "end": "1421750"
  },
  {
    "text": "use Aurora",
    "start": "1421750",
    "end": "1422830"
  },
  {
    "text": "that's our implementation of a very",
    "start": "1422830",
    "end": "1425050"
  },
  {
    "text": "effective storage engine that's the same",
    "start": "1425050",
    "end": "1428380"
  },
  {
    "text": "and at no difference to your app because",
    "start": "1428380",
    "end": "1432070"
  },
  {
    "text": "it's the same protocol and drivers from",
    "start": "1432070",
    "end": "1434470"
  },
  {
    "text": "standard my sequel right and even the",
    "start": "1434470",
    "end": "1440350"
  },
  {
    "text": "elastic search the red is the memcache D",
    "start": "1440350",
    "end": "1443590"
  },
  {
    "text": "all that is available as a building",
    "start": "1443590",
    "end": "1446680"
  },
  {
    "text": "blocks for your app and we are here to",
    "start": "1446680",
    "end": "1449790"
  },
  {
    "text": "help you be successful with it if you",
    "start": "1449790",
    "end": "1452740"
  },
  {
    "text": "have any questions for others and we",
    "start": "1452740",
    "end": "1455470"
  },
  {
    "text": "would love to keep building together",
    "start": "1455470",
    "end": "1457570"
  },
  {
    "text": "thank you very much see you at the long",
    "start": "1457570",
    "end": "1460090"
  },
  {
    "text": "and summit",
    "start": "1460090",
    "end": "1462570"
  },
  {
    "text": "you",
    "start": "1465309",
    "end": "1467370"
  }
]