[
  {
    "text": "- [Narrator] Hello, everyone.",
    "start": "6300",
    "end": "8069"
  },
  {
    "text": "Welcome to AWS Mainframe Modernization",
    "start": "8070",
    "end": "10920"
  },
  {
    "text": "Service Data Replication using Precisely.",
    "start": "10920",
    "end": "14010"
  },
  {
    "text": "This is a demonstration of DB2",
    "start": "14010",
    "end": "16080"
  },
  {
    "text": "to Amazon Aurora Postgres database.",
    "start": "16080",
    "end": "18780"
  },
  {
    "text": "We will use AWS developed",
    "start": "18780",
    "end": "20610"
  },
  {
    "text": "CardDemo mainframe\napplications data from DB2",
    "start": "20610",
    "end": "23820"
  },
  {
    "text": "to stream in realtime\nAurora Postgres database,",
    "start": "23820",
    "end": "27000"
  },
  {
    "text": "the Precisely data streaming setup",
    "start": "27000",
    "end": "28920"
  },
  {
    "text": "already configured on mainframe.",
    "start": "28920",
    "end": "31710"
  },
  {
    "text": "What you see here highlighted",
    "start": "31710",
    "end": "33149"
  },
  {
    "text": "is a started task for Controller Daemon,",
    "start": "33150",
    "end": "35310"
  },
  {
    "text": "which is used to authenticate",
    "start": "35310",
    "end": "36750"
  },
  {
    "text": "and manage secure communication",
    "start": "36750",
    "end": "38460"
  },
  {
    "text": "between publisher and Apply agent.",
    "start": "38460",
    "end": "40593"
  },
  {
    "text": "The second started task\nthat is highlighted",
    "start": "43260",
    "end": "45510"
  },
  {
    "text": "is the publisher agent,",
    "start": "45510",
    "end": "46829"
  },
  {
    "text": "which is responsible\nfor reading the DB2 logs",
    "start": "46830",
    "end": "49680"
  },
  {
    "text": "and capture the records based on filters",
    "start": "49680",
    "end": "51870"
  },
  {
    "text": "specified in configuration record.",
    "start": "51870",
    "end": "54003"
  },
  {
    "text": "This is the ISPF panel,",
    "start": "60870",
    "end": "62489"
  },
  {
    "text": "which comes along with Precisely software.",
    "start": "62490",
    "end": "64949"
  },
  {
    "text": "It is used to perform\nadministrative activities,",
    "start": "64950",
    "end": "67469"
  },
  {
    "text": "like start, stop, and manage\nstreaming from mainframe.",
    "start": "67470",
    "end": "71073"
  },
  {
    "text": "Now, let's type 3 and\nview publisher's info.",
    "start": "72960",
    "end": "75783"
  },
  {
    "text": "Here is a summary of CAB files.",
    "start": "76680",
    "end": "78663"
  },
  {
    "text": "Let's select the one that\nis called DB2MSK.cab.",
    "start": "80130",
    "end": "84003"
  },
  {
    "text": "This will take us the following screen,",
    "start": "86700",
    "end": "88619"
  },
  {
    "text": "which has details of the CAB file,",
    "start": "88620",
    "end": "90690"
  },
  {
    "text": "like status, DB2 subsystem details",
    "start": "90690",
    "end": "93330"
  },
  {
    "text": "about last commit point, etcetera.",
    "start": "93330",
    "end": "95793"
  },
  {
    "text": "Let's look at sources.",
    "start": "98670",
    "end": "100083"
  },
  {
    "text": "The highlighted table is\nthe one from where the data",
    "start": "101340",
    "end": "103679"
  },
  {
    "text": "is being streamed in realtime.",
    "start": "103680",
    "end": "105603"
  },
  {
    "text": "This completes the setup on mainframe.",
    "start": "106470",
    "end": "108603"
  },
  {
    "text": "Now let's configure\nthe Apply agent on AWS.",
    "start": "109920",
    "end": "113162"
  },
  {
    "text": "We have launched an EC2 instance",
    "start": "114630",
    "end": "116700"
  },
  {
    "text": "using the Precisely AMI.",
    "start": "116700",
    "end": "118683"
  },
  {
    "text": "Let's connect to the instance",
    "start": "119940",
    "end": "121770"
  },
  {
    "text": "using the instance endpoint.",
    "start": "121770",
    "end": "123543"
  },
  {
    "text": "All the activities on the instance",
    "start": "128280",
    "end": "129990"
  },
  {
    "text": "are performed using the connect user.",
    "start": "129990",
    "end": "132150"
  },
  {
    "text": "The AWS Mainframe Modernization\nService documentation",
    "start": "132150",
    "end": "135780"
  },
  {
    "text": "for data replication using Precisely",
    "start": "135780",
    "end": "138150"
  },
  {
    "text": "explains how to configure the connect user",
    "start": "138150",
    "end": "140519"
  },
  {
    "text": "when the instance is launched.",
    "start": "140520",
    "end": "142050"
  },
  {
    "text": "Now let's look at the Apply Engine script",
    "start": "142050",
    "end": "144180"
  },
  {
    "text": "that I have configured and\nplaced in script library.",
    "start": "144180",
    "end": "147183"
  },
  {
    "text": "db2msk.sqd is the file\nwhere the script is present.",
    "start": "151680",
    "end": "156422"
  },
  {
    "text": "The script file contains configurations,",
    "start": "161070",
    "end": "163140"
  },
  {
    "text": "which is used by Apply\nEngine in realtime here.",
    "start": "163140",
    "end": "166053"
  },
  {
    "text": "Here highlighted pgdsn is\nthe file where the Postgres,",
    "start": "167790",
    "end": "171959"
  },
  {
    "text": "connection details like host endpoint,",
    "start": "171960",
    "end": "174360"
  },
  {
    "text": "database credentials are provided.",
    "start": "174360",
    "end": "176283"
  },
  {
    "text": "We use VPC endpoint to\nconnect to mainframe,",
    "start": "179640",
    "end": "182673"
  },
  {
    "text": "and the source data store,",
    "start": "183510",
    "end": "184890"
  },
  {
    "text": "provide the path to mainframe port,",
    "start": "184890",
    "end": "186960"
  },
  {
    "text": "publisher engine, and publisher job name.",
    "start": "186960",
    "end": "189363"
  },
  {
    "text": "We have a very simple\none-to-one mapping here",
    "start": "193230",
    "end": "195690"
  },
  {
    "text": "between source and target schema.",
    "start": "195690",
    "end": "197733"
  },
  {
    "text": "This is the section\nwhere you would provide",
    "start": "199050",
    "end": "200850"
  },
  {
    "text": "any additional filtering\nbefore applying the changes",
    "start": "200850",
    "end": "203490"
  },
  {
    "text": "to target data store.",
    "start": "203490",
    "end": "204843"
  },
  {
    "text": "Before we start the Apply Engine,",
    "start": "207720",
    "end": "209880"
  },
  {
    "text": "let's check the source\nand target data stores.",
    "start": "209880",
    "end": "212433"
  },
  {
    "text": "I have created the Amazon\nAurora Postgres table",
    "start": "214020",
    "end": "216990"
  },
  {
    "text": "and preloaded the data\nto match with source DB2.",
    "start": "216990",
    "end": "220173"
  },
  {
    "text": "What we see here is a Python code snippet",
    "start": "223560",
    "end": "225930"
  },
  {
    "text": "to extract data from Postgres table.",
    "start": "225930",
    "end": "228392"
  },
  {
    "text": "I have packaged this as lambda function.",
    "start": "229740",
    "end": "232053"
  },
  {
    "text": "Let's run this lambda function.",
    "start": "234720",
    "end": "236523"
  },
  {
    "text": "The query has returned\nfollowing records from table.",
    "start": "240360",
    "end": "243243"
  },
  {
    "text": "This is side by side comparison of data",
    "start": "247680",
    "end": "250019"
  },
  {
    "text": "in mainframe and Postgres.",
    "start": "250020",
    "end": "251883"
  },
  {
    "text": "Now, let's start the Apply Engine",
    "start": "256560",
    "end": "258090"
  },
  {
    "text": "to test the realtime streaming.",
    "start": "258090",
    "end": "259983"
  },
  {
    "text": "The engine has successfully started.",
    "start": "263250",
    "end": "265410"
  },
  {
    "text": "Let's check the status of the publisher.",
    "start": "265410",
    "end": "267633"
  },
  {
    "text": "Publisher is also mounted and running.",
    "start": "270090",
    "end": "272313"
  },
  {
    "text": "I will make changes to the\nmainframe data using six screens.",
    "start": "273210",
    "end": "276693"
  },
  {
    "text": "I will perform one\ninsert using CTTU screen",
    "start": "278400",
    "end": "281610"
  },
  {
    "text": "to add record 07 with description",
    "start": "281610",
    "end": "283740"
  },
  {
    "text": "as adjustment E is successfully\nadded to the table.",
    "start": "283740",
    "end": "286712"
  },
  {
    "text": "Let's run the lambda to\nfetch records from Postgres.",
    "start": "293550",
    "end": "296552"
  },
  {
    "text": "Here we will observe that\nthe record has been inserted",
    "start": "300420",
    "end": "303060"
  },
  {
    "text": "in Postgres DB, realtime.",
    "start": "303060",
    "end": "305313"
  },
  {
    "text": "Now let's test the update\nfeature using CT screen.",
    "start": "307560",
    "end": "310833"
  },
  {
    "text": "Let's modify the description for record 05",
    "start": "314070",
    "end": "316740"
  },
  {
    "text": "from refunds to purchase refunds.",
    "start": "316740",
    "end": "318783"
  },
  {
    "text": "The record is successfully updated in DB2.",
    "start": "323250",
    "end": "326223"
  },
  {
    "text": "Let's check if this is\nreflected in Postgres now",
    "start": "327510",
    "end": "330960"
  },
  {
    "text": "by executing the lambda\nfunction to fetch records.",
    "start": "330960",
    "end": "333873"
  },
  {
    "text": "Here we observe the\nrecord has been updated",
    "start": "337140",
    "end": "339360"
  },
  {
    "text": "in Postgres database in realtime.",
    "start": "339360",
    "end": "341793"
  },
  {
    "text": "The data is now successfully\nbeing replicated in realtime",
    "start": "342690",
    "end": "346290"
  },
  {
    "text": "from mainframe to AWS.",
    "start": "346290",
    "end": "348900"
  },
  {
    "text": "This concludes the demo of\nAWS Mainframe Modernization",
    "start": "348900",
    "end": "352740"
  },
  {
    "text": "Service Data Replication with Precisely.",
    "start": "352740",
    "end": "355530"
  },
  {
    "text": "Thank you.",
    "start": "355530",
    "end": "356363"
  }
]