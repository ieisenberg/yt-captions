[
  {
    "text": "Welcome to 'Back to Basics'.",
    "start": "5476",
    "end": "6887"
  },
  {
    "text": "I am Gerardo Estaba,",
    "start": "6887",
    "end": "8264"
  },
  {
    "text": "and today we're going to talk\nabout the basics of protecting your network",
    "start": "8264",
    "end": "11146"
  },
  {
    "text": "in the cloud.",
    "start": "11147",
    "end": "12830"
  },
  {
    "text": "Great network security\nlooks a lot like an onion,",
    "start": "12830",
    "end": "15450"
  },
  {
    "text": "a beautifully designed vegetable\nthat protects itself",
    "start": "15450",
    "end": "18108"
  },
  {
    "text": "through multiple layers",
    "start": "18108",
    "end": "19349"
  },
  {
    "text": "that if you try to break into,\nyou'll end up crying.",
    "start": "19349",
    "end": "22806"
  },
  {
    "text": "We want to apply this same layered approach\nto network security,",
    "start": "22806",
    "end": "26337"
  },
  {
    "text": "so that all of these layers block the traffic",
    "start": "26337",
    "end": "28969"
  },
  {
    "text": "that's not intended to the application.",
    "start": "28969",
    "end": "30832"
  },
  {
    "text": "So let's get started on some patterns\nfor protecting your network in the cloud.",
    "start": "31846",
    "end": "35517"
  },
  {
    "text": "Let's start\nwith a simple architecture example,",
    "start": "37263",
    "end": "39444"
  },
  {
    "text": "a single Amazon EC2 Instance.",
    "start": "39444",
    "end": "41773"
  },
  {
    "text": "The best way to protect the network access\nto the instance",
    "start": "41773",
    "end": "44197"
  },
  {
    "text": "is by configuring its security group.",
    "start": "44197",
    "end": "46933"
  },
  {
    "text": "A security group acts as a virtual firewall\nfor your instance network interface.",
    "start": "46933",
    "end": "51953"
  },
  {
    "text": "With security groups,\nyou can configure inbound rules",
    "start": "51953",
    "end": "54437"
  },
  {
    "text": "and outbound rules.",
    "start": "54437",
    "end": "55568"
  },
  {
    "text": "These rules specify sources, protocols,",
    "start": "55568",
    "end": "57957"
  },
  {
    "text": "and ports\nthat you want to allow traffic from.",
    "start": "57957",
    "end": "60915"
  },
  {
    "text": "An important thing to consider\nis that security groups are stateful.",
    "start": "60915",
    "end": "64952"
  },
  {
    "text": "If an inbound request is allowed\nby the inbound rules,",
    "start": "64952",
    "end": "68135"
  },
  {
    "text": "then the response outbound traffic\nfor that connection is automatically allowed.",
    "start": "68135",
    "end": "73103"
  },
  {
    "text": "So what sort of sources, protocols, and ports",
    "start": "73103",
    "end": "75278"
  },
  {
    "text": "should you allow in your security group?",
    "start": "75278",
    "end": "77619"
  },
  {
    "text": "Of course, the minimum necessary\nfor the intended operation of the instance.",
    "start": "77619",
    "end": "81907"
  },
  {
    "text": "You can use security groups\nto allow any network protocol,",
    "start": "81907",
    "end": "85229"
  },
  {
    "text": "but if all you want is to allow\nweb traffic from the internet,",
    "start": "85230",
    "end": "88672"
  },
  {
    "text": "we can improve our security and availability",
    "start": "88672",
    "end": "90883"
  },
  {
    "text": "by adding an Elastic Load Balancer\nin front of it.",
    "start": "90884",
    "end": "94370"
  },
  {
    "text": "Elastic Load Balancers add many benefits,",
    "start": "94370",
    "end": "96696"
  },
  {
    "text": "such as the ability to distribute\ntraffic across multiple instances,",
    "start": "96696",
    "end": "100682"
  },
  {
    "text": "such as handling failover among them,",
    "start": "100682",
    "end": "102852"
  },
  {
    "text": "but also adding security benefits like,",
    "start": "102852",
    "end": "104703"
  },
  {
    "text": "for example,\nimplementing a web application firewall.",
    "start": "104704",
    "end": "107267"
  },
  {
    "text": "By implementing a load balancer,",
    "start": "107267",
    "end": "109100"
  },
  {
    "text": "you're effectively\nadding one layer to our onion,",
    "start": "109100",
    "end": "111677"
  },
  {
    "text": "abstracting your instances\nfrom the outside world,",
    "start": "111677",
    "end": "114366"
  },
  {
    "text": "removing direct access from the internet\nto your instance,",
    "start": "114366",
    "end": "117729"
  },
  {
    "text": "and you can configure a security group\nfor the load balancer as well.",
    "start": "117729",
    "end": "120933"
  },
  {
    "text": "So far these resources exist",
    "start": "121921",
    "end": "123919"
  },
  {
    "text": "in our Amazon Virtual Private Cloud or VPC.",
    "start": "123919",
    "end": "127395"
  },
  {
    "text": "A VPC gives you your own dedicated\nand isolated virtual private network",
    "start": "127395",
    "end": "132086"
  },
  {
    "text": "with complete control\nover your IP address ranges,",
    "start": "132086",
    "end": "135586"
  },
  {
    "text": "gateways, subnets,\nand other network constructs.",
    "start": "135586",
    "end": "139390"
  },
  {
    "text": "Another way of adding a layer to our onion\nis by implementing different subnets.",
    "start": "139391",
    "end": "143994"
  },
  {
    "text": "For example,\nif we add an Amazon RDS database",
    "start": "143994",
    "end": "147349"
  },
  {
    "text": "to our architecture\nwith no need for internet access,",
    "start": "147349",
    "end": "150794"
  },
  {
    "text": "then it can be placed in a private subnet",
    "start": "150794",
    "end": "153281"
  },
  {
    "text": "that has no route to or from the internet.",
    "start": "153281",
    "end": "157036"
  },
  {
    "text": "Traffic between subnets can only occur\nif the VPC route table",
    "start": "157036",
    "end": "161168"
  },
  {
    "text": "and the network access control lists\nallow it.",
    "start": "161169",
    "end": "164405"
  },
  {
    "text": "And an access control lists or a NACL,",
    "start": "164405",
    "end": "167162"
  },
  {
    "text": "is an optional firewall layer\nbetween subnets.",
    "start": "167162",
    "end": "169873"
  },
  {
    "text": "As opposed to security groups,\nNACLs are a stateless,",
    "start": "169873",
    "end": "173468"
  },
  {
    "text": "meaning that if we want our instances\nto talk to our database,",
    "start": "173468",
    "end": "176917"
  },
  {
    "text": "we need to explicitly allow traffic\nfrom subnet A to subnet B",
    "start": "176917",
    "end": "181089"
  },
  {
    "text": "and also from subnet B to subnet A.",
    "start": "181089",
    "end": "184552"
  },
  {
    "text": "If we want our instances to make\noutbound connections to the internet,",
    "start": "184552",
    "end": "188565"
  },
  {
    "text": "instead of configuring direct access",
    "start": "188565",
    "end": "190721"
  },
  {
    "text": "we can add one layer\nby introducing an AWS managed NAT gateway.",
    "start": "190721",
    "end": "195053"
  },
  {
    "text": "NAT gateways allow for traffic\ninitiated from private subnets",
    "start": "195053",
    "end": "199431"
  },
  {
    "text": "to reach the internet",
    "start": "199432",
    "end": "200743"
  },
  {
    "text": "but prevents traffic initiating\nfrom the internet to reach our instances.",
    "start": "200743",
    "end": "205756"
  },
  {
    "text": "If your instance needs to communicate\nwith other AWS services,",
    "start": "205757",
    "end": "209456"
  },
  {
    "text": "instead of allowing traffic to\nor from the internet,",
    "start": "209456",
    "end": "212890"
  },
  {
    "text": "you can use VPC endpoints.",
    "start": "212891",
    "end": "215091"
  },
  {
    "text": "VPC endpoints allow private connections\nfrom your VPC to AWS services",
    "start": "215091",
    "end": "219639"
  },
  {
    "text": "like Amazon S3 or DynamoDB,",
    "start": "219639",
    "end": "222512"
  },
  {
    "text": "or even other services\nthat can be exposed by AWS PrivateLink.",
    "start": "222512",
    "end": "226763"
  },
  {
    "text": "You could configure endpoint policies",
    "start": "226763",
    "end": "228627"
  },
  {
    "text": "to specify the traffic that you want to allow\nthrough VPC endpoints.",
    "start": "228627",
    "end": "233407"
  },
  {
    "text": "We can also protect network access\nat the edge.",
    "start": "233407",
    "end": "236417"
  },
  {
    "text": "Amazon CloudFront is a fast,\ncontent delivery network or CDN.",
    "start": "236417",
    "end": "241070"
  },
  {
    "text": "Configuring a CloudFront distribution\nin front of our load balancer",
    "start": "241070",
    "end": "244261"
  },
  {
    "text": "is a good idea so that we speed up\nthe delivery of content to our users,",
    "start": "244261",
    "end": "248458"
  },
  {
    "text": "while at the same time,\nadding another layer of network security",
    "start": "248458",
    "end": "251825"
  },
  {
    "text": "with advanced TLS capabilities.",
    "start": "251826",
    "end": "254296"
  },
  {
    "text": "We can also block direct internet access\nto our load balancer",
    "start": "254296",
    "end": "257781"
  },
  {
    "text": "to enforce access via CloudFront.",
    "start": "257781",
    "end": "261134"
  },
  {
    "text": "CloudFront also works well\nwith other edge protection services",
    "start": "261134",
    "end": "264480"
  },
  {
    "text": "that are worth adding to our onion.",
    "start": "264480",
    "end": "266635"
  },
  {
    "text": "AWS Web Application Firewall or WAF\nto protect against common web exploits,",
    "start": "266635",
    "end": "271932"
  },
  {
    "text": "and AWS Shield to protect",
    "start": "271932",
    "end": "273957"
  },
  {
    "text": "from distributed denial-of-service\nor DDoS events.",
    "start": "273957",
    "end": "277483"
  },
  {
    "text": "So there you have it.",
    "start": "277483",
    "end": "278530"
  },
  {
    "text": "We've added several layers\nof network security to our onion,",
    "start": "278530",
    "end": "282094"
  },
  {
    "text": "each layer aims to allow\nonly the network traffic",
    "start": "282094",
    "end": "285050"
  },
  {
    "text": "that is expected by the application.",
    "start": "285050",
    "end": "287759"
  },
  {
    "text": "This layer approach mitigates\nthe impact of a misconfiguration",
    "start": "287759",
    "end": "291480"
  },
  {
    "text": "in one of the layers\nthat could end up in unintended access.",
    "start": "291480",
    "end": "295306"
  },
  {
    "text": "So keep building securely,\nand I'll see you next time.",
    "start": "295306",
    "end": "297565"
  }
]