[
  {
    "text": "hi everyone a welcome and welcome to our twitch viewers online we have a special",
    "start": "4270",
    "end": "10250"
  },
  {
    "text": "session for you today this is our second session of the day we have Frank Muntz who is a senior technical evangelist at",
    "start": "10250",
    "end": "15949"
  },
  {
    "text": "AWS he will be covering getting started with streaming data in your applications",
    "start": "15949",
    "end": "20950"
  },
  {
    "text": "so good luck thank you so good morning",
    "start": "20950",
    "end": "26360"
  },
  {
    "text": "everyone guess you can hear me so this presentation is a very gentle introduction to streaming data can I",
    "start": "26360",
    "end": "34969"
  },
  {
    "text": "have a raise of hands who's working with streaming data today yeah I guess that's like 40 50 percent",
    "start": "34969",
    "end": "43339"
  },
  {
    "text": "almost cold so if we talk about streaming data what we really mean is",
    "start": "43339",
    "end": "48440"
  },
  {
    "text": "small sized events that are continuously generated and that typically come with a",
    "start": "48440",
    "end": "54199"
  },
  {
    "text": "low latency requirement and one of the most popular and probably the most",
    "start": "54199",
    "end": "59449"
  },
  {
    "text": "famous streaming data projects open source streaming data projects it started at",
    "start": "59449",
    "end": "66229"
  },
  {
    "text": "LinkedIn and it's kafka so this presentation will explain you both it will explain you the open source world",
    "start": "66229",
    "end": "73040"
  },
  {
    "text": "of Kafka that we do now in the AWS cloud as a managed service and we also talked",
    "start": "73040",
    "end": "78440"
  },
  {
    "text": "about the Kinesis suite of services that we offer and I will cover both so",
    "start": "78440",
    "end": "84560"
  },
  {
    "text": "talking about Kafka they created it to use to do clickstream analysis that was",
    "start": "84560",
    "end": "90920"
  },
  {
    "text": "the purpose of creating Kafka and if I talked to streaming data to develop",
    "start": "90920",
    "end": "96950"
  },
  {
    "text": "a very often those developers think like how difficult can it be with this small",
    "start": "96950",
    "end": "101990"
  },
  {
    "text": "size data no what's the big difficulty in dealing with this small size data so",
    "start": "101990",
    "end": "107270"
  },
  {
    "text": "there's a blog posting from the Kafka people actually I think from Jake wraps it goes back like five years and you",
    "start": "107270",
    "end": "114080"
  },
  {
    "text": "know everyone is complaining about having massive amount of data and you can guess LinkedIn they all have your",
    "start": "114080",
    "end": "119420"
  },
  {
    "text": "data or they have my data we all have our profiles so you can guess they have a lot of data and in this blog posting",
    "start": "119420",
    "end": "125690"
  },
  {
    "text": "they explained that if they look at all the data that they have in their relational databases together it's",
    "start": "125690",
    "end": "132620"
  },
  {
    "text": "smaller than the number of then the amount of events they cap in one single day so it's massive amount of data that",
    "start": "132620",
    "end": "139470"
  },
  {
    "text": "is processed in one single day only if you compare it to relational data then",
    "start": "139470",
    "end": "145349"
  },
  {
    "text": "get a thing where it is constantly generated data is coming from its machines and there is a study out that",
    "start": "145349",
    "end": "152400"
  },
  {
    "text": "says like forty percent of all data next year in 2020 will be machine generated",
    "start": "152400",
    "end": "158280"
  },
  {
    "text": "data so the big big danger is that this will be a lot of dark data it's data",
    "start": "158280",
    "end": "164940"
  },
  {
    "text": "that we generate that we produce we probably store it somewhere but we never really evaluated we never work with this",
    "start": "164940",
    "end": "171659"
  },
  {
    "text": "data so that's one of the big challenges and the third one is discontinuously",
    "start": "171659",
    "end": "176700"
  },
  {
    "text": "generated data means if you're sitting here you probably have database services running you probably",
    "start": "176700",
    "end": "183870"
  },
  {
    "text": "have application service running you have web service running and they all constantly produce log files that you",
    "start": "183870",
    "end": "189870"
  },
  {
    "text": "want to analyze so talking about streaming data if we",
    "start": "189870",
    "end": "196970"
  },
  {
    "text": "generate it continuously we also want to process it quickly and we need to",
    "start": "196970",
    "end": "201989"
  },
  {
    "text": "transform it quickly that's important now the difficulty with streaming data is that it's not static now you cannot",
    "start": "201989",
    "end": "208799"
  },
  {
    "text": "have a static snapshot of your data and then process the data because it's constantly changing so the challenge is",
    "start": "208799",
    "end": "215400"
  },
  {
    "text": "how to work with the streaming always changing data and the answer is the only thing that is not changing is if you go",
    "start": "215400",
    "end": "222209"
  },
  {
    "text": "back in time this is why we work with you know with sliding windows we go back like half an hour in time and we say",
    "start": "222209",
    "end": "228959"
  },
  {
    "text": "what was the average temperature for the last half hour so we work with aggregates and we work with these timed",
    "start": "228959",
    "end": "235049"
  },
  {
    "text": "windows if we talk about streaming data and the other question very often is why",
    "start": "235049",
    "end": "242069"
  },
  {
    "text": "the fuss about having the data process so quickly now why is it so important couldn't we just have more time now if",
    "start": "242069",
    "end": "248849"
  },
  {
    "text": "you look at this curve and if you look at at the right end of this curve if you have data that is like a couple",
    "start": "248849",
    "end": "256709"
  },
  {
    "text": "of years old so if I try and sell you an application that tells you you know like five years ago you were running 12",
    "start": "256709",
    "end": "264180"
  },
  {
    "text": "machines how much money would you pay for that it's almost worthless now this is what we call historic data that's",
    "start": "264180",
    "end": "270639"
  },
  {
    "text": "what you used to burn on a cd-rom today would store it in AWS clasher that's the",
    "start": "270639",
    "end": "276400"
  },
  {
    "text": "long-term storage that we offer you for a super cheap price but it's not really",
    "start": "276400",
    "end": "281470"
  },
  {
    "text": "exciting now if you move more to the other side to the left-hand side of this curve and",
    "start": "281470",
    "end": "287430"
  },
  {
    "text": "you have a system that tells you you know while you're sitting here maybe from your 80 machines 75 are going down",
    "start": "287430",
    "end": "295300"
  },
  {
    "text": "and I in a critical state that's much more alerting know you want to react on this and this is also why we call it",
    "start": "295300",
    "end": "301150"
  },
  {
    "text": "actionable data and if we move a little bit further left and you have real-time",
    "start": "301150",
    "end": "306160"
  },
  {
    "text": "data and you feed this real-time data maybe into a machine learning process and the machine learning process is kind",
    "start": "306160",
    "end": "313150"
  },
  {
    "text": "of listening to what your machines are doing to the noise of the fan and he says look this sounds is the sound is",
    "start": "313150",
    "end": "319479"
  },
  {
    "text": "getting a little bit strange and it's it's alerting so I'm gonna predict it soon this machine will fail you have to",
    "start": "319479",
    "end": "325870"
  },
  {
    "text": "chance to pre actively kind of stop the machine and make sure it's not breaking",
    "start": "325870",
    "end": "331349"
  },
  {
    "text": "completely so having having this actionable data or preventive predictive",
    "start": "331349",
    "end": "337570"
  },
  {
    "text": "analysis is very important and I always like to say you know this it's not the",
    "start": "337570",
    "end": "342580"
  },
  {
    "text": "data but the value of information is not aging like red wine it's not getting",
    "start": "342580",
    "end": "347770"
  },
  {
    "text": "better it H is like bananas so at some time it's just not important anymore",
    "start": "347770",
    "end": "353010"
  },
  {
    "text": "as I mentioned today I want to talk about both I want to talk about the open source solution that we office a managed",
    "start": "353010",
    "end": "360070"
  },
  {
    "text": "service Kafka which is preview right now this is why I'm not gonna do any demo",
    "start": "360070",
    "end": "365909"
  },
  {
    "text": "that's the msk amazon managed streaming for Kafka it's public preview you can",
    "start": "365909",
    "end": "372159"
  },
  {
    "text": "try it today it will be general available this year soon and the other",
    "start": "372159",
    "end": "378610"
  },
  {
    "text": "one is the Kinesis suite of services that I want to introduce you briefly so this is just a brief overview to get you",
    "start": "378610",
    "end": "384760"
  },
  {
    "text": "an idea of the choices that you have so if we talk about msk for Kafka this is",
    "start": "384760",
    "end": "391000"
  },
  {
    "text": "how it started probably you've seen this slide before if you've been to any Kafka meetup this",
    "start": "391000",
    "end": "397120"
  },
  {
    "text": "is how they motivated the usage of Kafka this is how the architecture at",
    "start": "397120",
    "end": "402380"
  },
  {
    "text": "in look like before they introduced Kafka do you like this kind of architecture no you're shaking your",
    "start": "402380",
    "end": "408560"
  },
  {
    "text": "heads from left to right now what's the problem the problem are all those connecting lines if you're a",
    "start": "408560",
    "end": "413840"
  },
  {
    "text": "mathematician you would say if you have n entities and you connect them together point to point what you get you get a",
    "start": "413840",
    "end": "420200"
  },
  {
    "text": "squared complexity no this is like a squared complexities like Superbad",
    "start": "420200",
    "end": "426970"
  },
  {
    "text": "thinking about how else it could be now what they did is they introduced cough",
    "start": "426970",
    "end": "432380"
  },
  {
    "text": "guard is log this semantic lock and what you get is you have like a bus in the middle and what happens to this squared",
    "start": "432380",
    "end": "439100"
  },
  {
    "text": "complexity it's reduced to a linear complexity and this is much much better",
    "start": "439100",
    "end": "444920"
  },
  {
    "text": "and this is like an old trick no it's not new for Kafka we used to do the same with you know with messaging systems",
    "start": "444920",
    "end": "452090"
  },
  {
    "text": "with the service buses but it's the same architectural principle that helps us a",
    "start": "452090",
    "end": "457430"
  },
  {
    "text": "lot so one is reducing complexity that's very important and the second one is",
    "start": "457430",
    "end": "463070"
  },
  {
    "text": "it's also decoupling and now why is it decoupling well it's decoupling because we have something in the middle this is",
    "start": "463070",
    "end": "468950"
  },
  {
    "text": "actually where the word middleware comes from and it's decoupling because well the sender or the",
    "start": "468950",
    "end": "475360"
  },
  {
    "text": "entity that is creating a message is talking to the Kafka topic is sending a",
    "start": "475360",
    "end": "480440"
  },
  {
    "text": "message to this Kafka topic and then the Kafka topic stores it or well it keeps it for a while and then you can read it",
    "start": "480440",
    "end": "486950"
  },
  {
    "text": "from there but it's not directly talking to the entity that is receiving the",
    "start": "486950",
    "end": "492020"
  },
  {
    "text": "message so it's decoupled and if the entity that is receiving the message to consumer is not available for awhile",
    "start": "492020",
    "end": "498170"
  },
  {
    "text": "it's not a problem because it can read the message later now of course the question is what if the thing in the",
    "start": "498170",
    "end": "504170"
  },
  {
    "text": "middle is not available and we need to talk about this that's actually one of the most important concepts getting a",
    "start": "504170",
    "end": "509510"
  },
  {
    "text": "good understanding about H a availabilities of Kafka and why this is",
    "start": "509510",
    "end": "514880"
  },
  {
    "text": "sometimes not so easy now if we talk not about the messaging that seems a bit",
    "start": "514880",
    "end": "520370"
  },
  {
    "text": "like old-fashioned but if we talk about micro services also Kafka or messaging or event-driven systems make a lot of",
    "start": "520370",
    "end": "527330"
  },
  {
    "text": "sense number one is event sourcing this is where you don't store the final state in",
    "start": "527330",
    "end": "534310"
  },
  {
    "text": "a database but you keep the events that lead to this final state and you can",
    "start": "534310",
    "end": "539410"
  },
  {
    "text": "reprocess those events and you again get to this final state now I'm not a database person but in my",
    "start": "539410",
    "end": "546310"
  },
  {
    "text": "career as an IT architect we had several times the requirement to use a database but then not to keep the final state but",
    "start": "546310",
    "end": "554050"
  },
  {
    "text": "to also keep the events that led to this final state now try and model this with",
    "start": "554050",
    "end": "559269"
  },
  {
    "text": "a database it's possible but it's not so easy now you have to have time stamps and an order and it's like a lot of",
    "start": "559269",
    "end": "566110"
  },
  {
    "text": "extra work if you do this with a streaming system with an event based system you just keep the events and you",
    "start": "566110",
    "end": "572769"
  },
  {
    "text": "can replay the events so that's very easy the second one is called CQRS command",
    "start": "572769",
    "end": "579760"
  },
  {
    "text": "query responsibility segregation long long word what it means is we have commands and queries commands is like",
    "start": "579760",
    "end": "587110"
  },
  {
    "text": "you write queries is like you read and you want to separate them because you can optimize them in different ways",
    "start": "587110",
    "end": "593970"
  },
  {
    "text": "so the commands that the write think you can also use them for event sourcing",
    "start": "593970",
    "end": "601089"
  },
  {
    "text": "that's the purpose behind CQRS and the last one is like choreography it's do",
    "start": "601089",
    "end": "606399"
  },
  {
    "text": "the classic thing is choreography versus orchestration and which one should you",
    "start": "606399",
    "end": "612910"
  },
  {
    "text": "take if you have events you can very easily trigger an action based on an",
    "start": "612910",
    "end": "618040"
  },
  {
    "text": "event if you want to do if you want to trigger two actions based on money then you just connect the second action it's",
    "start": "618040",
    "end": "624430"
  },
  {
    "text": "very easy to do that and you don't have to have a centralized instance that is running a workflow that's not necessary",
    "start": "624430",
    "end": "631000"
  },
  {
    "text": "and that's what we call choreography and it's choreography like in a ballet have",
    "start": "631000",
    "end": "636670"
  },
  {
    "text": "you ever been to a ballet in a ballet the ballet dancers most likely most typically they don't bump into each",
    "start": "636670",
    "end": "642610"
  },
  {
    "text": "other now they just know how to dance and it's just working magically somehow and the difference did the opposite is a",
    "start": "642610",
    "end": "651779"
  },
  {
    "text": "classical concert a symphony where you have a conductor in front now talk to the experts they will tell you even if",
    "start": "651779",
    "end": "658990"
  },
  {
    "text": "you have world-class musicians and you sit them together and you let them play it's not sounding well they need this",
    "start": "658990",
    "end": "665170"
  },
  {
    "text": "kind so the conductor is the centralized workflow that we sometimes need sometimes this is the better solution",
    "start": "665170",
    "end": "671100"
  },
  {
    "text": "now I'm not telling you choreography is always better but sometimes it's also not a better solution because it's you",
    "start": "671100",
    "end": "677280"
  },
  {
    "text": "know you need this orchestration this workflow system and sometimes it's easier to go for",
    "start": "677280",
    "end": "683940"
  },
  {
    "text": "choreography that can be extended in an easier way and if you work with events like Kafka based events that's very easy",
    "start": "683940",
    "end": "690630"
  },
  {
    "text": "solution so you should always decide which one to choose I can't tell you this is better it's your choice as an",
    "start": "690630",
    "end": "696930"
  },
  {
    "text": "architect to to make the best solution but keep in mind choreography versus",
    "start": "696930",
    "end": "702380"
  },
  {
    "text": "orchestration and the last one and I need to admit that's a very dramatic",
    "start": "702380",
    "end": "707400"
  },
  {
    "text": "example of Kafka usages the New York Times what they did is they kept every",
    "start": "707400",
    "end": "713370"
  },
  {
    "text": "single article in a single Kafka topic and every single article since 1851 now",
    "start": "713370",
    "end": "719940"
  },
  {
    "text": "I mentioned this it's one big Kafka topic it's said to never expire the messages so the messages will just stay",
    "start": "719940",
    "end": "726660"
  },
  {
    "text": "in the topic if they have consumers they connect them on the right-hand side here what you see here",
    "start": "726660",
    "end": "733140"
  },
  {
    "text": "and a new consumer can reread all those messages from the topic so that's the",
    "start": "733140",
    "end": "738710"
  },
  {
    "text": "technical architecture they decided for it's a bit extreme and when they published it there was a lot of",
    "start": "738710",
    "end": "744030"
  },
  {
    "text": "discussion but it's just something to keep in mind that this Kafka topic can store messages forever they don't have",
    "start": "744030",
    "end": "751020"
  },
  {
    "text": "to expire and it helps us later if we try to understand what how different other systems are working now Kafka at",
    "start": "751020",
    "end": "758700"
  },
  {
    "text": "its core it's a commit lock it's not a log like the lock file from your patchy web server but it's a it's a lock data",
    "start": "758700",
    "end": "765870"
  },
  {
    "text": "structure that means what we do is we have producers they produce messages and",
    "start": "765870",
    "end": "771030"
  },
  {
    "text": "those messages they are produced and they are kind of appended to the lock so at the end they are appended and it",
    "start": "771030",
    "end": "778020"
  },
  {
    "text": "doesn't really matter if you have like a hundred megabyte in this log already you append one message you have a gigabyte",
    "start": "778020",
    "end": "783900"
  },
  {
    "text": "or you have like a terabyte already it's always the same amount of time that you need so sending messages to Kafka has",
    "start": "783900",
    "end": "790440"
  },
  {
    "text": "always the same overhead that's why it's very popular if you read it you read it from the other side you typically read",
    "start": "790440",
    "end": "796590"
  },
  {
    "text": "it within offset you can have a consumer a reading of said one then two then three then four and you can have a",
    "start": "796590",
    "end": "802450"
  },
  {
    "text": "consumer be reading the same messages so one very important principle is that if",
    "start": "802450",
    "end": "808660"
  },
  {
    "text": "you read the message it's not taken out of the topic it's not like sqs it's not",
    "start": "808660",
    "end": "814090"
  },
  {
    "text": "like MQ serious it's not like JMS in Java it's a small difference in the",
    "start": "814090",
    "end": "819790"
  },
  {
    "text": "semantics that makes a big difference in how we use it at the end and the thing is you can have different producers that",
    "start": "819790",
    "end": "826480"
  },
  {
    "text": "reread the messages actually it even goes that far that if a computer if a consumer goes down it can just reread",
    "start": "826480",
    "end": "834070"
  },
  {
    "text": "the messages and rebuild its state remember this event sourcing that we talked about that's the principle so",
    "start": "834070",
    "end": "839920"
  },
  {
    "text": "that's the core thing if you want to know more about this there's a really nice book it's called I hard locks it's",
    "start": "839920",
    "end": "845170"
  },
  {
    "text": "really written hard it's a small book like sixty pages and that describes like the core of Kafka I",
    "start": "845170",
    "end": "851770"
  },
  {
    "text": "highly recommend it if you want to know more about this now I told you it's a",
    "start": "851770",
    "end": "856780"
  },
  {
    "text": "commit lock and it's not the complete truth it's actually a partitioned",
    "start": "856780",
    "end": "862120"
  },
  {
    "text": "replicated commit lock it is partitioned because we want to run Kafka across different machines that's why we have",
    "start": "862120",
    "end": "868960"
  },
  {
    "text": "brokers and on each of the machines and we put them together in a cluster that's why we have a cluster and then we have",
    "start": "868960",
    "end": "876040"
  },
  {
    "text": "topics but it's not a topic a single topic the topic is partition so we can",
    "start": "876040",
    "end": "881200"
  },
  {
    "text": "partition a topic across different brokers and here you see three partitions for this topic a now if there",
    "start": "881200",
    "end": "888580"
  },
  {
    "text": "is a producer the producer is writing messages across those partitions and you",
    "start": "888580",
    "end": "894100"
  },
  {
    "text": "can decide if you give it a key it will hash the key and then the hash of the key determines which partition you're",
    "start": "894100",
    "end": "900760"
  },
  {
    "text": "writing to if you don't give it a key it will just do load balancing and you spread your load across those different",
    "start": "900760",
    "end": "906670"
  },
  {
    "text": "partitions now if you use a key a very useful key for example is the session ID",
    "start": "906670",
    "end": "912190"
  },
  {
    "text": "because it stays constant for one session and then all the data for one session ends up in one partition that",
    "start": "912190",
    "end": "918640"
  },
  {
    "text": "makes a lot of sense and in one partition of a topic you also have a guarantee for the ordering that is very",
    "start": "918640",
    "end": "925030"
  },
  {
    "text": "important just imagine you order something like very expensive like a nice sports car and you need to cancel",
    "start": "925030",
    "end": "931089"
  },
  {
    "text": "it or you reverse the order you just get the cancel first and the destination",
    "start": "931089",
    "end": "936670"
  },
  {
    "text": "system says well I don't really know this order I did so I ignore the cancel and then the order comes in and the",
    "start": "936670",
    "end": "942790"
  },
  {
    "text": "order will be fulfilled so the order of cancel and order something is super important",
    "start": "942790",
    "end": "948540"
  },
  {
    "text": "then that's not all there's more to it now like the Kafka system itself needs",
    "start": "948540",
    "end": "954130"
  },
  {
    "text": "the second system that is called zookeeper which keeps state so I'll just state like for example where are the",
    "start": "954130",
    "end": "961240"
  },
  {
    "text": "petitions for a particular topic is kept in a separate system which is called sue",
    "start": "961240",
    "end": "966370"
  },
  {
    "text": "keeper so sue keeper itself is a different open-source system you could use it separately but if you want to use",
    "start": "966370",
    "end": "972910"
  },
  {
    "text": "Kafka you have to use zookeeper that's very important it's a critical component and Kafka today is not working without",
    "start": "972910",
    "end": "980200"
  },
  {
    "text": "zookeeper so you have to have it that means you also have to set up zookeeper now if you set up zookeeper it keeps the",
    "start": "980200",
    "end": "986500"
  },
  {
    "text": "state that tells you it should be high available because otherwise if we only have one instance and it goes down you",
    "start": "986500",
    "end": "992620"
  },
  {
    "text": "lose to state so what you do yeah we have more than one instance you take two if you take two again it's not very",
    "start": "992620",
    "end": "1000089"
  },
  {
    "text": "suitable because if you take two and you have a network split those two instances are separated and then we have what we",
    "start": "1000089",
    "end": "1006060"
  },
  {
    "text": "have in distributed systems we have this quorum algorithm and says you know I know the configuration that says N",
    "start": "1006060",
    "end": "1012300"
  },
  {
    "text": "equals 2 I see I'm alone on one side and they try to build a majority so the",
    "start": "1012300",
    "end": "1017880"
  },
  {
    "text": "majority of the systems continues to run and the minority shuts down but if you",
    "start": "1017880",
    "end": "1023339"
  },
  {
    "text": "have to what's the majority it's not working so you need at least three okay so three is good for it's not good",
    "start": "1023339",
    "end": "1029970"
  },
  {
    "text": "because it's an equal number again three is good five is good seven might be good now the question is where you put them",
    "start": "1029970",
    "end": "1036420"
  },
  {
    "text": "so I've done several Kafka projects and one of them was for a huge German",
    "start": "1036420",
    "end": "1041880"
  },
  {
    "text": "company one of the biggest companies that we have and we had two data centers for high availability like one in Berlin",
    "start": "1041880",
    "end": "1049140"
  },
  {
    "text": "East and one in Berlin West now imagine you have two data centers and you have",
    "start": "1049140",
    "end": "1054300"
  },
  {
    "text": "to task of distributing free zookeeper processes across two data centers how do",
    "start": "1054300",
    "end": "1060330"
  },
  {
    "text": "you do that it's not really working well so this is where you like the scalable",
    "start": "1060330",
    "end": "1065789"
  },
  {
    "text": "open-source software that we have these days is working really well together with the clouds where you have like at",
    "start": "1065789",
    "end": "1071520"
  },
  {
    "text": "least free availability zones so the cloud is pushing open source in my",
    "start": "1071520",
    "end": "1076980"
  },
  {
    "text": "opinion an open source the scalable open source is working really well on the cloud and very often it doesn't work",
    "start": "1076980",
    "end": "1082380"
  },
  {
    "text": "that well if you only have two data centers and then it goes on but it's because we have those partitions to have",
    "start": "1082380",
    "end": "1089789"
  },
  {
    "text": "things running in parallel so imagine a message in such a partition times out it",
    "start": "1089789",
    "end": "1095039"
  },
  {
    "text": "needs to be cleaned out of the partition and whatever happens per petition is scaling across those brokers because the",
    "start": "1095039",
    "end": "1101669"
  },
  {
    "text": "bottleneck will be on a partition level and we also have replicas in those replicas make sure if a partition goes",
    "start": "1101669",
    "end": "1109140"
  },
  {
    "text": "down you have the second copy so the replicas they are to make your data higher available to not lose your data",
    "start": "1109140",
    "end": "1116279"
  },
  {
    "text": "and the partitions are more for this report and all this you need to understand somehow and what I'm trying",
    "start": "1116279",
    "end": "1122039"
  },
  {
    "text": "to tell you this is not super complicated it's not rocket science you can learn it but you have to understand",
    "start": "1122039",
    "end": "1127590"
  },
  {
    "text": "it now if you don't understand it it will be super hard to run Kafka in production and I've done projects I've",
    "start": "1127590",
    "end": "1134669"
  },
  {
    "text": "done to big Kafka projects on premises and the experience worth was the same in both projects it took us like in the",
    "start": "1134669",
    "end": "1142020"
  },
  {
    "text": "first project one week for the implementation for the coding for the development and in the second project it",
    "start": "1142020",
    "end": "1147630"
  },
  {
    "text": "took us like two weeks but then in the first project it took us five weeks to",
    "start": "1147630",
    "end": "1152760"
  },
  {
    "text": "explain all the rest like to explain how to install Kafka to the operations people how to start it how to patch it",
    "start": "1152760",
    "end": "1161340"
  },
  {
    "text": "how to upgrade it then think about all these configurations how many partitions would you take for a topic how many",
    "start": "1161340",
    "end": "1168270"
  },
  {
    "text": "replications do you want where do you put your three zookeeper processes if you have two data centers and having two",
    "start": "1168270",
    "end": "1174510"
  },
  {
    "text": "data centers is not bad for on-premises so all these questions stay they are not",
    "start": "1174510",
    "end": "1180240"
  },
  {
    "text": "so easy to answer unless you have a really strong operational knowledge in you know in running Kafka and this is",
    "start": "1180240",
    "end": "1186870"
  },
  {
    "text": "not something that you want to give to people that normally run databases or there are operations people that know",
    "start": "1186870",
    "end": "1192750"
  },
  {
    "text": "how to restart a process if it has failed you need more knowledge about this can acquire it but normally the",
    "start": "1192750",
    "end": "1200149"
  },
  {
    "text": "classic operations people that used to do restart processes they don't have it so at the end there are challenges to",
    "start": "1200149",
    "end": "1207470"
  },
  {
    "text": "operate Kafka in production and their various challenges I come back to them",
    "start": "1207470",
    "end": "1212539"
  },
  {
    "text": "and the question is why do we offer you a managed service for Kafka this is a",
    "start": "1212539",
    "end": "1217970"
  },
  {
    "text": "quote from Gwen Shapiro she's one of the top consultants for Kafka she is working in the company where J",
    "start": "1217970",
    "end": "1226429"
  },
  {
    "text": "Krabs is working today he's the guy who started Kafka and she basically said there's a talk about you know all the",
    "start": "1226429",
    "end": "1233330"
  },
  {
    "text": "details about the hard things about running Kafka and she says look in 99",
    "start": "1233330",
    "end": "1238429"
  },
  {
    "text": "percent of all the time the basics go wrong so its upgrades or not doing",
    "start": "1238429",
    "end": "1244490"
  },
  {
    "text": "upgrades it's monitoring and disk space and I want to address all those three",
    "start": "1244490",
    "end": "1249499"
  },
  {
    "text": "topics by talking about msk and why msk solves these problems",
    "start": "1249499",
    "end": "1256388"
  },
  {
    "text": "so the way to solve it basically is we do the operations for you we give you an",
    "start": "1257019",
    "end": "1262610"
  },
  {
    "text": "easy way to create a Kafka cluster and remember the zookeeper story the free",
    "start": "1262610",
    "end": "1268669"
  },
  {
    "text": "zookeeper processes that you maybe need to distribute across you two data centers this is zookeeper it's gone now",
    "start": "1268669",
    "end": "1277220"
  },
  {
    "text": "this would be the marketing message I'm a techie I have to confess so it's not gone I'm telling you it's just hidden so",
    "start": "1277220",
    "end": "1283669"
  },
  {
    "text": "we hide it we do it for you you know we know what to do we know how many we should deploy we run it under the hood",
    "start": "1283669",
    "end": "1290840"
  },
  {
    "text": "we make it highly available and you don't even pay for it so basically honestly you can forget it because you",
    "start": "1290840",
    "end": "1296960"
  },
  {
    "text": "don't need to think about this zookeeper anymore it's managed in the background and in the control plane it's like a",
    "start": "1296960",
    "end": "1303320"
  },
  {
    "text": "soft problem and it's one of the hardest problems in in kafka operations so",
    "start": "1303320",
    "end": "1308419"
  },
  {
    "text": "forget about the zookeeper then how to get started with the msk that we offer",
    "start": "1308419",
    "end": "1313610"
  },
  {
    "text": "to you well easily there is even now in the preview you have to console in the",
    "start": "1313610",
    "end": "1319730"
  },
  {
    "text": "console you say I want to create a new Kafka cluster with this name you pick the version number like version 2.1 or",
    "start": "1319730",
    "end": "1326509"
  },
  {
    "text": "1.1 you define and which availability songs you want to run and then you",
    "start": "1326509",
    "end": "1331510"
  },
  {
    "text": "define the size of the broker instances that you want to have so it's m5",
    "start": "1331510",
    "end": "1336760"
  },
  {
    "text": "instances but you can define if you want a large one or do you want a 2x large",
    "start": "1336760",
    "end": "1342280"
  },
  {
    "text": "one or 24 X large one you define the size of those instances or you go for",
    "start": "1342280",
    "end": "1348010"
  },
  {
    "text": "the command line this is what you see here at the bottom where you can also create a list or configure your kafka",
    "start": "1348010",
    "end": "1354310"
  },
  {
    "text": "clusters now the pricing how do you pay for it the interesting thing is you pay",
    "start": "1354310",
    "end": "1360760"
  },
  {
    "text": "for the broker notes that you just created and you pay for the storage but",
    "start": "1360760",
    "end": "1365860"
  },
  {
    "text": "you're not paying for the zookeeper I promise you you're not paying for the topics and you're not paying for",
    "start": "1365860",
    "end": "1371410"
  },
  {
    "text": "replication traffic so all the hard things that we do they're kind of hidden you don't pay for them you just pay for",
    "start": "1371410",
    "end": "1377470"
  },
  {
    "text": "the broker instances and for the storage and that's the part for Kafka now I try",
    "start": "1377470",
    "end": "1383140"
  },
  {
    "text": "to explain you Kinesis quickly and then we compare it we try to find the first",
    "start": "1383140",
    "end": "1388450"
  },
  {
    "text": "rough rule of thumb when should you go for Kafka and when should you go for Kinesis let me just see the timing that",
    "start": "1388450",
    "end": "1396670"
  },
  {
    "text": "looks good okay so Kinesis is not one service it's a family of services it's",
    "start": "1396670",
    "end": "1402670"
  },
  {
    "text": "actually four different services that we have and the first one is Kinesis video",
    "start": "1402670",
    "end": "1407770"
  },
  {
    "text": "streams this is where you can ingest video sources like from hundreds of",
    "start": "1407770",
    "end": "1413650"
  },
  {
    "text": "millions of different devices and you can stream video on demand or life this is not what we're covering here the",
    "start": "1413650",
    "end": "1420850"
  },
  {
    "text": "second one is called Kinesis data streams that's the core that's the most important one that you need to",
    "start": "1420850",
    "end": "1426010"
  },
  {
    "text": "understand so if you walk out here in in 25 minutes you have to have to have a good feeling of Kinesis data streams",
    "start": "1426010",
    "end": "1432160"
  },
  {
    "text": "this is where you can ingest data from various sources and it keeps the data",
    "start": "1432160",
    "end": "1439980"
  },
  {
    "text": "there is no operational overhead and it's real-time so it works in with very",
    "start": "1439980",
    "end": "1445510"
  },
  {
    "text": "very small agencies the third one Kinesis data firehose it's like a",
    "start": "1445510",
    "end": "1451600"
  },
  {
    "text": "managed consumer we take the data and we write it to AWS data store such as s3",
    "start": "1451600",
    "end": "1458230"
  },
  {
    "text": "for example yeah or the fourth one is Kinesis data",
    "start": "1458230",
    "end": "1463490"
  },
  {
    "text": "analytics and we'll quickly show you this way you analyze real time data without starting servers so it's server",
    "start": "1463490",
    "end": "1469370"
  },
  {
    "text": "less data analytics and there is an SQL part to it and there's also Java part to",
    "start": "1469370",
    "end": "1474950"
  },
  {
    "text": "it which is new which we announced last year in November so Kinesis data streams",
    "start": "1474950",
    "end": "1480890"
  },
  {
    "text": "overview Kinesis data streams is it's like a buffer it's like a pipe where you",
    "start": "1480890",
    "end": "1486200"
  },
  {
    "text": "connect the producer to the consumer and the producer could be a mobile sdk it",
    "start": "1486200",
    "end": "1493309"
  },
  {
    "text": "could be a classic sdk that you run in any kind of client we have a special",
    "start": "1493309",
    "end": "1498740"
  },
  {
    "text": "cough cough reducer library that is also batching and aggregating messages and",
    "start": "1498740",
    "end": "1504380"
  },
  {
    "text": "then you batch them you aggregate them and you put them in a kinases stream and",
    "start": "1504380",
    "end": "1509450"
  },
  {
    "text": "you can also have a Kinesis agent that is running on a",
    "start": "1509450",
    "end": "1515210"
  },
  {
    "text": "client side collecting log files from your webserver from your database and taking the lines of the log files and",
    "start": "1515210",
    "end": "1521450"
  },
  {
    "text": "putting them into a Kinesis stream so basically it decouples and it gives",
    "start": "1521450",
    "end": "1528440"
  },
  {
    "text": "you those real-time possibilities if we think about the performance why is it so",
    "start": "1528440",
    "end": "1534890"
  },
  {
    "text": "performant or how can you make it performant there is two things to understand first of all we talked about",
    "start": "1534890",
    "end": "1540260"
  },
  {
    "text": "streams and if you start with a Kinesis stream you give it a stream name and you",
    "start": "1540260",
    "end": "1546320"
  },
  {
    "text": "give it a number of shots and if you have one shots a stream of one shots you can write one megabyte per second to it",
    "start": "1546320",
    "end": "1554600"
  },
  {
    "text": "and you can read with two megabytes per second now if people hear this the first time they say why can you read more than",
    "start": "1554600",
    "end": "1560960"
  },
  {
    "text": "you're right the thing is maybe your consumers they fall behind and they want to read more now if you need more than",
    "start": "1560960",
    "end": "1567380"
  },
  {
    "text": "one megabyte in write performance for your producers you can simply increase",
    "start": "1567380",
    "end": "1572540"
  },
  {
    "text": "the number of shots so if you have two shots you get two megabyte if you have five shots you get five megabyte and so",
    "start": "1572540",
    "end": "1578990"
  },
  {
    "text": "on so you can scale the throughput and you get a guaranteed throughput now you're sitting here you're very quiet",
    "start": "1578990",
    "end": "1585050"
  },
  {
    "text": "but if you think about this this is amazing now try to do this in your data center at home or try to replicate this",
    "start": "1585050",
    "end": "1592519"
  },
  {
    "text": "how would you have done this like ten years ago it's very hard even if I give you all the money that you need and I",
    "start": "1592519",
    "end": "1599029"
  },
  {
    "text": "tell you build me a system that is real time capable that does ten megabytes per",
    "start": "1599029",
    "end": "1604159"
  },
  {
    "text": "second in and 20 megabytes per second out which Harper would you buy how would you configure it now in one week I",
    "start": "1604159",
    "end": "1611059"
  },
  {
    "text": "changed my opinion I say no now I don't want 10 megabyte I want 50 then I want 100 and I want to go back to five that's",
    "start": "1611059",
    "end": "1618169"
  },
  {
    "text": "a super hard problem we solve it for you now I'm telling this because people just type in the numbers but there's a lot of",
    "start": "1618169",
    "end": "1624909"
  },
  {
    "text": "technology happening behind these numbers and you really get this guaranteed throughput which is the cool",
    "start": "1624909",
    "end": "1630529"
  },
  {
    "text": "thing which is a very amazing thing actually now something new happened in",
    "start": "1630529",
    "end": "1635570"
  },
  {
    "text": "this area talking about performance and it's about the reading data from a",
    "start": "1635570",
    "end": "1640700"
  },
  {
    "text": "Kinesis stream you can read 2 megabytes per second per shot but this is shared",
    "start": "1640700",
    "end": "1646429"
  },
  {
    "text": "for all the applications that read from this stream if you have a lot of applications this can become a",
    "start": "1646429",
    "end": "1653089"
  },
  {
    "text": "bottleneck so what we've done now is we have a new kind of client and this client you you register it you call of a",
    "start": "1653089",
    "end": "1660859"
  },
  {
    "text": "method which is called register stream consumer and then we're using HTTP - now",
    "start": "1660859",
    "end": "1666739"
  },
  {
    "text": "HTTP - as you know it keeps the connection and we can push data to the consumer and this is why it's faster",
    "start": "1666739",
    "end": "1674919"
  },
  {
    "text": "it's like 65 percent more efficient and we can have this 2 megabyte per second",
    "start": "1674919",
    "end": "1682339"
  },
  {
    "text": "per shot per application now so every application can have this dedicated 2 megabyte per second per shot which is",
    "start": "1682339",
    "end": "1689509"
  },
  {
    "text": "removing the bottleneck so for those who want to read a lot this is the new kind of client that you should use",
    "start": "1689509",
    "end": "1697570"
  },
  {
    "text": "then I told you about firehose I said it's like a managed consumer it's a",
    "start": "1697570",
    "end": "1702679"
  },
  {
    "text": "consumer that we manage and that easily allows you to write data for example to s3 or to elasticsearch or to Splunk or",
    "start": "1702679",
    "end": "1710419"
  },
  {
    "text": "to redshift and what it does it's we have a data producer that is writing this data -",
    "start": "1710419",
    "end": "1717429"
  },
  {
    "text": "- Kinesis data firehose the data producer could be a data stream it could",
    "start": "1717429",
    "end": "1723280"
  },
  {
    "text": "an application that is using an SDK it could be a mobile application it could be all those possible clients that I",
    "start": "1723280",
    "end": "1729580"
  },
  {
    "text": "already told you about so it's writing the data to Kinesis data fire hose and then Kinesis data fires is writing this",
    "start": "1729580",
    "end": "1736360"
  },
  {
    "text": "automatically to s3 could you program this yourself yes of course you could write to producer yourself that is",
    "start": "1736360",
    "end": "1742330"
  },
  {
    "text": "writing to s3 but why should you this is a client that we give to you we scale it for you and it's very easy to use it's",
    "start": "1742330",
    "end": "1749950"
  },
  {
    "text": "just configuration and then you can use it on top what you can do is if you have",
    "start": "1749950",
    "end": "1755110"
  },
  {
    "text": "incoming JSON data we can convert it for you we can use glue which is a crawler",
    "start": "1755110",
    "end": "1760450"
  },
  {
    "text": "that finds out about the data structure of your chastened data it's using the data structure of your JSON data and",
    "start": "1760450",
    "end": "1767140"
  },
  {
    "text": "it's then converting it to either or C which is a open source format that",
    "start": "1767140",
    "end": "1772210"
  },
  {
    "text": "originally comes from Facebook or to park' which originally comes from Twitter I think they both happened to be",
    "start": "1772210",
    "end": "1778270"
  },
  {
    "text": "published like within a month in 2013 and they're both columnar formats so",
    "start": "1778270",
    "end": "1784930"
  },
  {
    "text": "what happens is they store data in a columnar way now if you think about it why is this interesting or why is this",
    "start": "1784930",
    "end": "1791680"
  },
  {
    "text": "exciting remember the IOT example that I gave you remember yet imagine you have data coming from a sensor a temperature",
    "start": "1791680",
    "end": "1798370"
  },
  {
    "text": "sensor that says sensor 17 28 degrees sensor 17 29 degrees sensor 17 28",
    "start": "1798370",
    "end": "1806080"
  },
  {
    "text": "degrees again so if you convert this to columns the first column would be sensor 17 all the way down now imagine you need",
    "start": "1806080",
    "end": "1813460"
  },
  {
    "text": "to compress test it's super easy now you can say you have like 328 x sensor 17 so",
    "start": "1813460",
    "end": "1820150"
  },
  {
    "text": "that's super easy to compress so what is columnar formats do they compress it automatically and sometimes if you work",
    "start": "1820150",
    "end": "1827050"
  },
  {
    "text": "with the data with big data applications you also don't need to read every single column this is why does columnar formats",
    "start": "1827050",
    "end": "1833980"
  },
  {
    "text": "make a lot of sense it's compression and then reading less data then you would normally do with the database so this is",
    "start": "1833980",
    "end": "1841540"
  },
  {
    "text": "why this mechanism of using firehose for storing data makes a lot of sense I",
    "start": "1841540",
    "end": "1848700"
  },
  {
    "text": "told you that we have two ways to analyze data in real time one is SQL",
    "start": "1848700",
    "end": "1854080"
  },
  {
    "text": "base that is maybe more appealing to database people because it's the the common language no for for data access",
    "start": "1854080",
    "end": "1860680"
  },
  {
    "text": "and the other one is based on Apache flink it's Java based now the SQL one I",
    "start": "1860680",
    "end": "1867310"
  },
  {
    "text": "did a small demo that I can show you it's basically what you do is you have an incoming stream and you create an",
    "start": "1867310",
    "end": "1874030"
  },
  {
    "text": "outgoing stream a destination stream and then you select using a normal SQL select statement the columns that you",
    "start": "1874030",
    "end": "1881110"
  },
  {
    "text": "want to take over from the incoming stream and the aggregate functions that you want to use like min max or whatever",
    "start": "1881110",
    "end": "1888040"
  },
  {
    "text": "and you defined timed interval at what you want to create the output so it goes",
    "start": "1888040",
    "end": "1894070"
  },
  {
    "text": "like this this is where you where you see the data and",
    "start": "1894070",
    "end": "1900280"
  },
  {
    "text": "[Music] zooming in so it's saying insert into",
    "start": "1900280",
    "end": "1907060"
  },
  {
    "text": "this destination stream and then you see the Select stream and you see the columns and you also see the aggregation",
    "start": "1907060",
    "end": "1914080"
  },
  {
    "text": "functions and it's taking the data from the source stream and writing it to the",
    "start": "1914080",
    "end": "1919570"
  },
  {
    "text": "destination stream and using those aggregate functions and it's grouping it by these time windows that I told you in",
    "start": "1919570",
    "end": "1926800"
  },
  {
    "text": "a very first night now we need these window functions because otherwise we couldn't really analyze streaming data",
    "start": "1926800",
    "end": "1932620"
  },
  {
    "text": "so that's one way to do it the java way I'm not showing you in this presentation it's it's a bit longer to explain it's",
    "start": "1932620",
    "end": "1939220"
  },
  {
    "text": "based on Apache Fling which is another standard library we can do it server",
    "start": "1939220",
    "end": "1944530"
  },
  {
    "text": "less with lambda functions you know lambda the function is a service where you run a function that is scaling",
    "start": "1944530",
    "end": "1950830"
  },
  {
    "text": "automatically where you don't provision the infrastructure it's highly available it's automatically running across the",
    "start": "1950830",
    "end": "1957100"
  },
  {
    "text": "availability zones even though you don't have to configure anything and you don't pay for it if you don't call it so this",
    "start": "1957100",
    "end": "1963460"
  },
  {
    "text": "is the benefit of lambda functions so with the lambda functions a lambda",
    "start": "1963460",
    "end": "1968500"
  },
  {
    "text": "function reads the number of records in a batch and then it invokes your function synchronously the function that",
    "start": "1968500",
    "end": "1975370"
  },
  {
    "text": "you provide and it gives it an event an event containing all the records that it was reading so the lambda function is",
    "start": "1975370",
    "end": "1982030"
  },
  {
    "text": "basically processing those Kinesis records in a server 'less way the thing",
    "start": "1982030",
    "end": "1987580"
  },
  {
    "text": "is there is a maximum execution time for such a lambda function which is 15 minutes if you get the records in a",
    "start": "1987580",
    "end": "1993870"
  },
  {
    "text": "batch you have to be careful because if you read too many records maybe you exceed this maximum execution time and I",
    "start": "1993870",
    "end": "2000679"
  },
  {
    "text": "can't tell you how many records you should read because it depends on the time that you need to process these records but you should configure the",
    "start": "2000679",
    "end": "2007490"
  },
  {
    "text": "batch size accordingly not to exceed this maximum execution time so this is a",
    "start": "2007490",
    "end": "2012860"
  },
  {
    "text": "way where you can use AWS lambda for serverless processing of well streaming",
    "start": "2012860",
    "end": "2019250"
  },
  {
    "text": "data now you've been very patient thank you for that I was talking about Kinesis and",
    "start": "2019250",
    "end": "2026809"
  },
  {
    "text": "about msk and now you probably ask what is the difference when should you use which if you look at this from a high",
    "start": "2026809",
    "end": "2033350"
  },
  {
    "text": "level it looks very similar now for Kinesis we have streams with shards for",
    "start": "2033350",
    "end": "2038450"
  },
  {
    "text": "Kafka we have topics with partitions but where's the difference this is very similar that's not worth taking a",
    "start": "2038450",
    "end": "2044960"
  },
  {
    "text": "picture in in my opinion the thing is if we talk about Kinesis you get the",
    "start": "2044960",
    "end": "2051589"
  },
  {
    "text": "classic AWS api that we built for you from ground up we give you a throughput",
    "start": "2051589",
    "end": "2057770"
  },
  {
    "text": "provisioning model that I was explaining where I said look isn't this amazing use just define the throughput we provision",
    "start": "2057770",
    "end": "2064760"
  },
  {
    "text": "it for you you pay for the throughput that's it you can scale seamlessly if you need more shots you get more if you",
    "start": "2064760",
    "end": "2071210"
  },
  {
    "text": "need less shots you can have less retention time typically is a day you can extend it up to seven days and it's",
    "start": "2071210",
    "end": "2077868"
  },
  {
    "text": "deeply integrated into all other kind of AWS services Kafka on the other hand",
    "start": "2077869",
    "end": "2083599"
  },
  {
    "text": "it's open source this is probably why you like it why you're here because you already might have using might be using",
    "start": "2083599",
    "end": "2089628"
  },
  {
    "text": "Kafka on premises you're looking for an easy way to migrate from on-premises to the cloud then it's fantastic it gives",
    "start": "2089629",
    "end": "2097369"
  },
  {
    "text": "you a cluster provisioning model you pay per broker in the cluster for the broker",
    "start": "2097369",
    "end": "2102440"
  },
  {
    "text": "instances and for the storage but you're not paying for topics that's super cool now imagine this if you need a million",
    "start": "2102440",
    "end": "2109220"
  },
  {
    "text": "of topics you can have a million of topics now you'll probably say a million of topics in a cafe cluster does it make",
    "start": "2109220",
    "end": "2115640"
  },
  {
    "text": "sense there is Kafka clusters in productions that use thousands of topics and it's",
    "start": "2115640",
    "end": "2121819"
  },
  {
    "text": "built to support hundreds of thousands of topics per cluster the real question is what is the throughput that you want",
    "start": "2121819",
    "end": "2128180"
  },
  {
    "text": "to achieve can you achieve it with your cluster instances and that's a big difference this cluster provisioning",
    "start": "2128180",
    "end": "2133880"
  },
  {
    "text": "model worse is the throughput provisioning model and you can have this retention that is default for seven days",
    "start": "2133880",
    "end": "2140089"
  },
  {
    "text": "you can set it to forever remember the New York Times example this is why I showed you this they never expire the",
    "start": "2140089",
    "end": "2147079"
  },
  {
    "text": "message is they keep them forever and there is like really strong third-party tooling people laughed of tooling around",
    "start": "2147079",
    "end": "2153079"
  },
  {
    "text": "Kafka that's you can use all the tooling also for msk because it's standard",
    "start": "2153079",
    "end": "2158599"
  },
  {
    "text": "open-source cough guides upstream Kafka we don't change it with this I want to",
    "start": "2158599",
    "end": "2164450"
  },
  {
    "text": "say thank you hopefully you could have a get a good overview of using streaming",
    "start": "2164450",
    "end": "2169579"
  },
  {
    "text": "data with Canisius or streaming data with msk remember msk so far as preview",
    "start": "2169579",
    "end": "2175160"
  },
  {
    "text": "only you can try it today contact me if you have more questions I'll be around think we aren't which",
    "start": "2175160",
    "end": "2182059"
  },
  {
    "text": "maybe we have some questions coming from twitch yeah we have a couple of questions one of the questions was what",
    "start": "2182059",
    "end": "2189019"
  },
  {
    "text": "was the name of the book you referenced the talks about Kafka commit logs in the beginning of your presentation name of the book yes yeah I'll try to flip back",
    "start": "2189019",
    "end": "2196940"
  },
  {
    "text": "the book is called a hard Kafka it's a bit hard to find because you have to",
    "start": "2196940",
    "end": "2203329"
  },
  {
    "text": "type the heart let me see this is it",
    "start": "2203329",
    "end": "2209100"
  },
  {
    "text": "yes written by Jay crafts if I'm not wrong and it's a hard Kafka that's the",
    "start": "2209100",
    "end": "2215520"
  },
  {
    "text": "one that really explains to Kafka details it's a couple of years old which",
    "start": "2215520",
    "end": "2220560"
  },
  {
    "text": "is not a bad thing because it focuses on the most important things and everything in there is still true so it's a thin",
    "start": "2220560",
    "end": "2227580"
  },
  {
    "text": "book 60 pages I highly recommend it can we take questions from the audience yes we can I can just go over there and have",
    "start": "2227580",
    "end": "2233640"
  },
  {
    "text": "it give the mic I can't hear you coming to you can I hear I'm not sure if I'm",
    "start": "2233640",
    "end": "2240240"
  },
  {
    "text": "allowed to move off the stage I was just want to clarify cuz the photo says I heart locks I hard locks yeah so it's I",
    "start": "2240240",
    "end": "2247350"
  },
  {
    "text": "heart logs not I heart Tosca no I hard locks that's a real book cover I hard locks oh okay yeah yeah it's a hard that",
    "start": "2247350",
    "end": "2254730"
  },
  {
    "text": "got me wrong when I was searching for it yeah I really have to type hard in I heart and then locks that's what I",
    "start": "2254730",
    "end": "2260880"
  },
  {
    "text": "thought it's I like locks or I love locks or it's I hard locks that's what you need to type if you search it on",
    "start": "2260880",
    "end": "2266850"
  },
  {
    "text": "amazon.com okay anyone else in the audience have questions yes coming your way",
    "start": "2266850",
    "end": "2275329"
  },
  {
    "text": "we're using the msk right now on the public trial is there do you know the timeline on getting it to GA and just",
    "start": "2278490",
    "end": "2284550"
  },
  {
    "text": "improving it so it's goes beyond the beta people yeah this year and it's soon",
    "start": "2284550",
    "end": "2292190"
  },
  {
    "text": "soon in an IT scale of dates not in a geological scale",
    "start": "2292190",
    "end": "2299540"
  },
  {
    "text": "okay cool so 20 20 19 20 19 all right our DevOps team will be very happy to",
    "start": "2299540",
    "end": "2304830"
  },
  {
    "text": "hear that yeah that's right here Thanks they're interesting to talk to you later if you have if you want to share some",
    "start": "2304830",
    "end": "2311130"
  },
  {
    "text": "experiences with with a preview super interested cool is more questions",
    "start": "2311130",
    "end": "2317720"
  },
  {
    "text": "yeah sure there is also another company called Khan flame that's already",
    "start": "2317720",
    "end": "2323040"
  },
  {
    "text": "offering cloud calf Khan cloud so how do you see msk",
    "start": "2323040",
    "end": "2329420"
  },
  {
    "text": "doing you know performing as a cloud offering versus the confluent",
    "start": "2329420",
    "end": "2335400"
  },
  {
    "text": "version of the cloud CAFTA because they have a whole suit of products like schema registry k SQL and all that stuff",
    "start": "2335400",
    "end": "2342359"
  },
  {
    "text": "on top of that joke after itself so how do you see msk doing against the actual",
    "start": "2342359",
    "end": "2349230"
  },
  {
    "text": "cloud offering of conflict I didn't get every word from your question I heard confluent and Kafka and so conflict also",
    "start": "2349230",
    "end": "2357150"
  },
  {
    "text": "offers the cloud offering of cloud product so how do you think the",
    "start": "2357150",
    "end": "2362850"
  },
  {
    "text": "msk you know that option of msk versus the",
    "start": "2362850",
    "end": "2368130"
  },
  {
    "text": "confluent cloud version of Casper I see because they have the whole suit of products whether like schema registry",
    "start": "2368130",
    "end": "2373590"
  },
  {
    "text": "test so what we do is we offer standard open-source Kafka and as I said it's a",
    "start": "2373590",
    "end": "2380970"
  },
  {
    "text": "preview right now it will be GA this year and then it's up for the customers",
    "start": "2380970",
    "end": "2386520"
  },
  {
    "text": "to select you know we have the whole suite of Kinesis some services that make a lot of sense and they are super well",
    "start": "2386520",
    "end": "2392820"
  },
  {
    "text": "integrated and now we give the second choice to the AWS customers for open",
    "start": "2392820",
    "end": "2398340"
  },
  {
    "text": "source Kafka and I think most of our customers they they come from on-premise world and they look for an easy",
    "start": "2398340",
    "end": "2404490"
  },
  {
    "text": "migration path and they are already using you know AWS lamda are using RDS",
    "start": "2404490",
    "end": "2410180"
  },
  {
    "text": "or DynamoDB and then the most natural way is to use em SK but we are open I",
    "start": "2410180",
    "end": "2417559"
  },
  {
    "text": "mean we want to give people Choice I think confluent is a partner from AWS we",
    "start": "2417559",
    "end": "2423380"
  },
  {
    "text": "try and work with them together yeah some more questions",
    "start": "2423380",
    "end": "2430089"
  },
  {
    "text": "please speak loud hello my question is for Kafka and",
    "start": "2431580",
    "end": "2437090"
  },
  {
    "text": "chemists study does they both the thoughts the exactly ones because",
    "start": "2437090",
    "end": "2442260"
  },
  {
    "text": "exactly ones is very difficult in a streaming processing yes Kafka supports it",
    "start": "2442260",
    "end": "2448070"
  },
  {
    "text": "says Kinesis I don't know I have to take this",
    "start": "2448070",
    "end": "2453150"
  },
  {
    "text": "offline and maybe connect you to an essay",
    "start": "2453150",
    "end": "2458060"
  },
  {
    "text": "so to increase the throughput we have to like manually do it or it can auto scale",
    "start": "2459830",
    "end": "2465990"
  },
  {
    "text": "based on the traffic you can you repeat the question so can throughput be auto scale based on the",
    "start": "2465990",
    "end": "2473370"
  },
  {
    "text": "traffic or we have to manually configure him Adam at the moment there is no auto",
    "start": "2473370",
    "end": "2478530"
  },
  {
    "text": "scaling [Music] that's what I can say at the moment for",
    "start": "2478530",
    "end": "2483900"
  },
  {
    "text": "the preview there is no auto scaling the preview is changing already when I",
    "start": "2483900",
    "end": "2489360"
  },
  {
    "text": "showed you the the console where you select the version at the beginning we only support it one now we support the",
    "start": "2489360",
    "end": "2495870"
  },
  {
    "text": "version two so there's more features at it and basically what we do very",
    "start": "2495870",
    "end": "2501360"
  },
  {
    "text": "honestly is we do what you want know so if you tell us that auto scaling is a very important feature it's important to",
    "start": "2501360",
    "end": "2508470"
  },
  {
    "text": "get this lock so talk to me later or talk to your account manager and then we",
    "start": "2508470",
    "end": "2515130"
  },
  {
    "text": "prioritize those requests and I think more than 90% of our roadmap is really",
    "start": "2515130",
    "end": "2520890"
  },
  {
    "text": "driven on what customers tell us what they want actually the whole cuff got a whole msk stories like this because you",
    "start": "2520890",
    "end": "2527880"
  },
  {
    "text": "know the real question is we have this Kinesis that works super well and thousands of people are using it with",
    "start": "2527880",
    "end": "2533460"
  },
  {
    "text": "all this guarantees through port and they're happy but then more and more people said yeah but we also start to",
    "start": "2533460",
    "end": "2539250"
  },
  {
    "text": "use Kafka and can't you do this for us because literally what I told you it's just so hard to operate it yourself and",
    "start": "2539250",
    "end": "2544940"
  },
  {
    "text": "since it was enough customers that's why we said look let's build this msk service and the same is true for the",
    "start": "2544940",
    "end": "2552660"
  },
  {
    "text": "features it's important to get these locked and to get this communicated but if it's a top feature that we see in",
    "start": "2552660",
    "end": "2558810"
  },
  {
    "text": "many requests we will build it yeah thank you we have another question from",
    "start": "2558810",
    "end": "2564869"
  },
  {
    "text": "twitch right what are the limits to sharding using Kafka",
    "start": "2564869",
    "end": "2570950"
  },
  {
    "text": "Kafka is not shouting it's using topics and partitions so whatever you can do",
    "start": "2570950",
    "end": "2577380"
  },
  {
    "text": "with Kafka with open source Kafka we plan to support for msk it's actually a",
    "start": "2577380",
    "end": "2582900"
  },
  {
    "text": "very important message because there is like hundreds of different ways to configure Kafka with the properties and",
    "start": "2582900",
    "end": "2589250"
  },
  {
    "text": "usually if you have a managed service you are almost prepared to give up some control no because we manage the service",
    "start": "2589250",
    "end": "2596099"
  },
  {
    "text": "for you now what I hear from the service team is that they want to make it possible that you can configure this",
    "start": "2596099",
    "end": "2602010"
  },
  {
    "text": "service in in a very detailed way so we want to support as many properties as",
    "start": "2602010",
    "end": "2607040"
  },
  {
    "text": "possible that's what I heard but we have to wait and see what what comes out if",
    "start": "2607040",
    "end": "2613410"
  },
  {
    "text": "the first version is going at GA and in one last question any other resources that you recommend to learn more",
    "start": "2613410",
    "end": "2622009"
  },
  {
    "text": "yeah there's some actually quite a lot I think one is just going to the AWS",
    "start": "2622130",
    "end": "2628440"
  },
  {
    "text": "documentation for the msk then one of my favorite resources and that's like the",
    "start": "2628440",
    "end": "2634349"
  },
  {
    "text": "the hot tip I want to give to all of you is go to youtube search for videos like",
    "start": "2634349",
    "end": "2639990"
  },
  {
    "text": "there is a videos from the reinvent it's the big conference that we have every year at the end of the year and there is",
    "start": "2639990",
    "end": "2647040"
  },
  {
    "text": "a presentation about msk and that's like the setting the bar for you know for for",
    "start": "2647040",
    "end": "2653069"
  },
  {
    "text": "most people until something else is released so checking out the YouTube videos for msk from reinvent gives you a",
    "start": "2653069",
    "end": "2660809"
  },
  {
    "text": "good start this presentation will be shared by AWS",
    "start": "2660809",
    "end": "2666119"
  },
  {
    "text": "so you can access it it's not necessary to take pictures any questions you have you can contact me on Twitter on email",
    "start": "2666119",
    "end": "2673079"
  },
  {
    "text": "I'll be around just just stop me I think we just need to leave the room so thanks",
    "start": "2673079",
    "end": "2679170"
  },
  {
    "text": "again for being here you've been a great audience I appreciate all the questions thank you",
    "start": "2679170",
    "end": "2685818"
  }
]