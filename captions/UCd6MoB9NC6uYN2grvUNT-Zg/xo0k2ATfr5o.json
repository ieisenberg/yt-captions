[
  {
    "start": "0",
    "end": "236000"
  },
  {
    "text": "thank you for the warm welcome it's nice to be here graph QL is the best way to",
    "start": "170",
    "end": "8460"
  },
  {
    "text": "fetch data for your app those of you with keen eyesight can see who said this John Resig and Lauren sands Ramshaw",
    "start": "8460",
    "end": "15269"
  },
  {
    "text": "who's John Resig somebody jQuery yeah exactly he build jQuery way back in the",
    "start": "15269",
    "end": "20760"
  },
  {
    "text": "day this is a guy who knows a fair bit about building api's and working on the web Florence stands Ramshaw worked on",
    "start": "20760",
    "end": "27420"
  },
  {
    "text": "meteor which is a popular JS framework whether or not you like meteor doesn't matter the point is these people know a",
    "start": "27420",
    "end": "32640"
  },
  {
    "text": "lot about j/s also a lot about working and fetching data from remote servers",
    "start": "32640",
    "end": "37700"
  },
  {
    "text": "goes on to say craft QL offers a way to push all logic for specifying gated",
    "start": "37700",
    "end": "42989"
  },
  {
    "text": "requirements onto the clients that basically means you get a really simpler back-end than you would otherwise",
    "start": "42989",
    "end": "48539"
  },
  {
    "text": "now I'll get into the details about what graph QL is and as we go along and I'm gonna get through the slides as quick as",
    "start": "48539",
    "end": "54329"
  },
  {
    "text": "I can because I want to spend as much time as possible live coding for y'all I think we've all seen enough slides for",
    "start": "54329",
    "end": "59640"
  },
  {
    "text": "today so graph QL in five points what is it it's a query language for your API",
    "start": "59640",
    "end": "66600"
  },
  {
    "text": "with a server-side runtime for executing those queries using a type system that you define for your data now number four",
    "start": "66600",
    "end": "74159"
  },
  {
    "text": "is the really key point a lot of people I think get this mixed up it's not tied to any specific database or storage",
    "start": "74159",
    "end": "80009"
  },
  {
    "text": "engine graph QL does not have anything to do with graph databases I think it's a common misconception out there you can",
    "start": "80009",
    "end": "86159"
  },
  {
    "text": "use a graph database as a data source for your graph kill API if you want but you don't need to it's completely technology agnostic so it's backed by",
    "start": "86159",
    "end": "92970"
  },
  {
    "text": "your existing code and data you have a preference for writing in in Ruby you",
    "start": "92970",
    "end": "99090"
  },
  {
    "text": "can build a graph QL server in Ruby Java JavaScript it doesn't matter right sequel datavac no sequel data backed",
    "start": "99090",
    "end": "105479"
  },
  {
    "text": "graph DV data backs anything you want so",
    "start": "105479",
    "end": "110939"
  },
  {
    "text": "how do you run a graph QL server we've got a few choices a popular approach is containerized you know you you build",
    "start": "110939",
    "end": "117420"
  },
  {
    "text": "your graph kill server and just you know conforming to the graph QL spec for fulfilling the query and mutation",
    "start": "117420",
    "end": "122700"
  },
  {
    "text": "requirements of your client in whatever language you want and you might package that up in a container deploy that",
    "start": "122700",
    "end": "128610"
  },
  {
    "text": "that's great that's nice but now you have to manage your container as well as you know all the code for your server",
    "start": "128610",
    "end": "135240"
  },
  {
    "text": "and you've got to worry about scalability security high availability the other option that I would like you",
    "start": "135240",
    "end": "142140"
  },
  {
    "text": "to consider is a graph QL is a service option in the cloud right the idea there is for some cases you won't need to",
    "start": "142140",
    "end": "148709"
  },
  {
    "text": "write very much code at all and by taking a server list or you know sometimes people call of a service full",
    "start": "148709",
    "end": "154800"
  },
  {
    "text": "approach and using graph QL as a service in the cloud scaling and security and high availability I just managed for you",
    "start": "154800",
    "end": "163010"
  },
  {
    "text": "AWS app sync is our solution for letting you have a managed graph QL endpoint in",
    "start": "163010",
    "end": "169440"
  },
  {
    "text": "the cloud let us worry about all that undifferentiated heavy lifting let you worry about you know connecting your",
    "start": "169440",
    "end": "175650"
  },
  {
    "text": "clients with the data that they need includes the abilities for real-time collaboration there's an offline",
    "start": "175650",
    "end": "181440"
  },
  {
    "text": "programming model with data synchronization you have a lot of different options when it comes to connecting to different data sources and",
    "start": "181440",
    "end": "187200"
  },
  {
    "text": "there's a lot of nice tooling for broad or fine-grained access control now I'm",
    "start": "187200",
    "end": "193019"
  },
  {
    "text": "not gonna get into too many of these points today because I've only got you know 26 minutes to go but I hope that at",
    "start": "193019",
    "end": "200280"
  },
  {
    "text": "the end of this demo you'll be excited to try this out more so how do you get started I'm using AWS mobile CLI which",
    "start": "200280",
    "end": "208079"
  },
  {
    "text": "is a tool that along with the AWS mobile hub service lets see you manage cloud resources in a convenient way and I'll",
    "start": "208079",
    "end": "215130"
  },
  {
    "text": "do an ADW smokeable in it and then I'll enable app sync and then we'll get going and we'll see app sync in the web console and then we'll go back and we'll",
    "start": "215130",
    "end": "221340"
  },
  {
    "text": "build a react application a dubious amplifi is our open source JavaScript library that makes it really easy to",
    "start": "221340",
    "end": "226470"
  },
  {
    "text": "work with cloud resources you've probably heard oli Klein talk about that this morning in the keynote I love it",
    "start": "226470",
    "end": "233549"
  },
  {
    "text": "great documentation and you'll see that as we go so you ready demo gods come on",
    "start": "233549",
    "end": "241859"
  },
  {
    "start": "236000",
    "end": "450000"
  },
  {
    "text": "be my friend today here we go let's see this in action over to laptop just give",
    "start": "241859",
    "end": "247739"
  },
  {
    "text": "me a holler if any of the font sizes are too small for you okay so AWS mobile I'm",
    "start": "247739",
    "end": "253650"
  },
  {
    "text": "sorry we're going to start with a using create react app because I'm gonna do",
    "start": "253650",
    "end": "259350"
  },
  {
    "text": "let's call it dev day that's I'm doing this first because I want the",
    "start": "259350",
    "end": "265220"
  },
  {
    "text": "shell of a react app that I can then add in the AWS mobile CLI I can initialize",
    "start": "265220",
    "end": "272510"
  },
  {
    "text": "that directory with a dovish mobile CLI and I can add amplify in as a dependency but we'll come back to the react stuff",
    "start": "272510",
    "end": "277820"
  },
  {
    "text": "after we just get this shell setup it shouldn't take too long because I have most of the dependencies already on",
    "start": "277820",
    "end": "283850"
  },
  {
    "text": "this computer good good to go so now like all that dev Day events perfect now I'll just a",
    "start": "283850",
    "end": "290030"
  },
  {
    "text": "Tobias mobile in it and now I can accept all of these defaults they map very",
    "start": "290030",
    "end": "295100"
  },
  {
    "text": "nicely to what create react app sets up for me and I'll accept the default project name with the dev day events and",
    "start": "295100",
    "end": "300800"
  },
  {
    "text": "the timestamp that's fine so what this is gonna do now out of the box is provision for me and a cloud a place",
    "start": "300800",
    "end": "307220"
  },
  {
    "text": "where I can deploy my react app fronted by a content delivery network cloud",
    "start": "307220",
    "end": "312590"
  },
  {
    "text": "front in this case and the app gets deployed to s3 but that won't happen unless I type a dovish Mobile publish",
    "start": "312590",
    "end": "318440"
  },
  {
    "text": "which maybe I'll do at the end of I of time but that's what's going on right here when you say it have your mobile in",
    "start": "318440",
    "end": "324050"
  },
  {
    "text": "it now it knows that I'm in a react app so it's also gonna add AWS amplify and it's gonna add the AWS amplify react",
    "start": "324050",
    "end": "331300"
  },
  {
    "text": "specific components dependencies as well look at that fetching well if in 30 out",
    "start": "331300",
    "end": "336680"
  },
  {
    "text": "of 1131 thanks Internet there we go",
    "start": "336680",
    "end": "345610"
  },
  {
    "text": "okay this shouldn't take too long great okay and now we should be good to",
    "start": "346180",
    "end": "353300"
  },
  {
    "text": "go I'm gonna not even run the react app yet we're gonna go to the web console",
    "start": "353300",
    "end": "358460"
  },
  {
    "text": "now and if i refresh my absent console",
    "start": "358460",
    "end": "363530"
  },
  {
    "text": "oh i forgot to do one more thing sorry and a base mobile app sync enable and",
    "start": "363530",
    "end": "370250"
  },
  {
    "text": "i'm gonna say - p which will let me configure it also i'm gonna say i just want to use an API key for authentication not recommended for",
    "start": "370250",
    "end": "375530"
  },
  {
    "text": "anything except development but it's a simpler model and will help me demo it faster so we'll take that and now let's say it abuse mobile push that will take",
    "start": "375530",
    "end": "383030"
  },
  {
    "text": "the configuration changes that I've made locally basically saying I also want to use app sync in my app and go ahead and",
    "start": "383030",
    "end": "388070"
  },
  {
    "text": "provision me an app sync API in the cloud now this shouldn't take too long",
    "start": "388070",
    "end": "393260"
  },
  {
    "text": "now you'll notice it's also says here creating dynamo be tables if you can read that there what's happening here is the app sync",
    "start": "393260",
    "end": "399740"
  },
  {
    "text": "service authors have rightly recognized that I think when you get started with",
    "start": "399740",
    "end": "405409"
  },
  {
    "text": "something new it's helpful to see existing code in a working system rather than just looking at a blank slate and",
    "start": "405409",
    "end": "410750"
  },
  {
    "text": "having to read documentation to get set up so out of the box if you enable app sync in a new mobile app it's or you",
    "start": "410750",
    "end": "418699"
  },
  {
    "text": "know a new web app it's going to provision a default schema for us that's just going to be a simple event management style API and there'll be",
    "start": "418699",
    "end": "425930"
  },
  {
    "text": "some sample code already wiring up the queries and mutations that we can do in that API and that's what's happening",
    "start": "425930",
    "end": "431509"
  },
  {
    "text": "there behind the scenes DynamoDB is gonna be our data store for this now generally it only takes about another 30",
    "start": "431509",
    "end": "437330"
  },
  {
    "text": "seconds so we should be on time to actually see me doing fun things here in just a minute while that's going on the",
    "start": "437330",
    "end": "444560"
  },
  {
    "text": "front end might actually be loaded enough that I can start showing you the schema yeah cool so if you want to find",
    "start": "444560",
    "end": "450020"
  },
  {
    "start": "450000",
    "end": "620000"
  },
  {
    "text": "AB sync you can go to services you can type graph QL you can type app think there's a number of ways to find it but",
    "start": "450020",
    "end": "455120"
  },
  {
    "text": "once you get there you'll see your API and let's talk about a schema so this is",
    "start": "455120",
    "end": "462469"
  },
  {
    "text": "going to be your crash course in graph kill if you've never used graph QL before that font size is probably too",
    "start": "462469",
    "end": "469430"
  },
  {
    "text": "big everybody can read that yeah in the back good way in the back some hands up",
    "start": "469430",
    "end": "474830"
  },
  {
    "text": "if you can read good thank you okay so let's look at this from the bottom up graph QL has a schema definition",
    "start": "474830",
    "end": "482180"
  },
  {
    "text": "language which is basically saying here are the data types for my API here are",
    "start": "482180",
    "end": "487310"
  },
  {
    "text": "the queries and here are the mutations I'm allowed to do with those data types and what kind of data I expect back from those operations the root node here is a",
    "start": "487310",
    "end": "494120"
  },
  {
    "text": "schema so every schema has this schema keyword and inside there it's gonna you're gonna say if I have queries or if",
    "start": "494120",
    "end": "499460"
  },
  {
    "text": "I have mutations and then those are gonna point to those respective data types so for example let's look at our queries so here's our query data type",
    "start": "499460",
    "end": "507080"
  },
  {
    "text": "and this basically just says I have two queries to find right now one called get event which takes an ID argument we've",
    "start": "507080",
    "end": "514518"
  },
  {
    "text": "the name of the argument is ID and the type is ID with the exclamation mark in if you can think of an ID type as like a",
    "start": "514519",
    "end": "521740"
  },
  {
    "text": "string identifying you know meant to identify something uniquely so like a UUID the exclamation mark means this is",
    "start": "521740",
    "end": "528170"
  },
  {
    "text": "required or for this query and when I get back from this good event a query is an event type",
    "start": "528170",
    "end": "535270"
  },
  {
    "text": "we'll look at this type in a second the other thing I can do is I can ask for a bunch of events I can say list events",
    "start": "535270",
    "end": "541190"
  },
  {
    "text": "optionally I can pass in a limit and a next token that'll let me do pagination right give me this many since this",
    "start": "541190",
    "end": "547520"
  },
  {
    "text": "particular marker from the last time I got a set of events that gives me an",
    "start": "547520",
    "end": "552740"
  },
  {
    "text": "event connection well what's an event connection an event connection is just another data type in my system that has",
    "start": "552740",
    "end": "558890"
  },
  {
    "text": "two properties items which is a list of zero or more events and a next token",
    "start": "558890",
    "end": "564890"
  },
  {
    "text": "that I can use to paginate through my results set okay what is an event an event is just another type in my system",
    "start": "564890",
    "end": "571400"
  },
  {
    "text": "that has an ID which again you can think of it has like a UUID that's got a name aware when in a description and those",
    "start": "571400",
    "end": "577190"
  },
  {
    "text": "are just all strings now data in graphic UL can be nested in fact this is why it's called graph QL because you can",
    "start": "577190",
    "end": "582920"
  },
  {
    "text": "think of your data as you know like a directed graph right I've got events and events can have comments and comments",
    "start": "582920",
    "end": "588950"
  },
  {
    "text": "could have authors and so I could say give me all the events but from all the events I only want like name it but I also want comments I only want the",
    "start": "588950",
    "end": "595250"
  },
  {
    "text": "author's name for the comments etc so you've got that kind of tree or graph structure that you're querying against",
    "start": "595250",
    "end": "600830"
  },
  {
    "text": "your data that's where the name comes from and so you can have nested relationships that's what I wanted to communicate here so for example the you",
    "start": "600830",
    "end": "608000"
  },
  {
    "text": "know the events have comments comment connection has a very similar shape to have any connection except instead of",
    "start": "608000",
    "end": "613100"
  },
  {
    "text": "items being events the items are comments so that's the schema let's not look at comments because we're really",
    "start": "613100",
    "end": "618380"
  },
  {
    "text": "not going to make any comments for the duration of this demo but let's actually now go ahead and write some queries so I",
    "start": "618380",
    "end": "624940"
  },
  {
    "start": "620000",
    "end": "835000"
  },
  {
    "text": "think L before you're probably familiar with a tool called graphic cool graph II",
    "start": "624940",
    "end": "630530"
  },
  {
    "text": "cool I think sometimes they call it graphical this is a very similar interface basically it's a tool inside",
    "start": "630530",
    "end": "635540"
  },
  {
    "text": "app sync that lets you explore your API by writing queries and mutations and also exploring the documentation so I",
    "start": "635540",
    "end": "642500"
  },
  {
    "text": "can see here for example that all my query type I've got two queries like you know get event list event etc so how do",
    "start": "642500",
    "end": "648620"
  },
  {
    "text": "you do this so so you actually write in the same kind of shape as what's defined in your schema so I'll say I want to",
    "start": "648620",
    "end": "654350"
  },
  {
    "text": "make it query and I want to do list events and you can see I get autocomplete as well so I want list events I'm not gonna ask for and any",
    "start": "654350",
    "end": "660770"
  },
  {
    "text": "other arguments in there and what back from that is the items and from the items let's just say I want to see the",
    "start": "660770",
    "end": "666270"
  },
  {
    "text": "event name and the description now let's run this can run it with a keyboard shortcut or I could click the little",
    "start": "666270",
    "end": "672180"
  },
  {
    "text": "play button you can see I don't have any items yet right now that should make sense because this is a fresh API there's no data there so I'm gonna give",
    "start": "672180",
    "end": "678570"
  },
  {
    "text": "this query name I'm gonna call this all events and I'm actually writing mutation",
    "start": "678570",
    "end": "684450"
  },
  {
    "text": "now let's add some data I'll call this new event and we'll say this is a create",
    "start": "684450",
    "end": "691380"
  },
  {
    "text": "event mutation now here I'm gonna have to put all of these things in I'm gonna put these on new lines cuz I just think",
    "start": "691380",
    "end": "696690"
  },
  {
    "text": "it reads better so this will be like Def Day description a day full of great",
    "start": "696690",
    "end": "704190"
  },
  {
    "text": "talks I hope you all agree where I'll just say Melbourne you know typing an",
    "start": "704190",
    "end": "713520"
  },
  {
    "text": "open Convention Center and when what is today's date I don't even know 2018 Oh",
    "start": "713520",
    "end": "720200"
  },
  {
    "text": "807 is that right yeah I dunno today cool good enough and then even mutations",
    "start": "720200",
    "end": "727380"
  },
  {
    "text": "need to say what data they want back that's why I've got this little like squiggly line here telling me there's still something wrong so from that",
    "start": "727380",
    "end": "733290"
  },
  {
    "text": "mutation I want back just give me the ID of the thing you just created please I'll run that and I got back an ID so",
    "start": "733290",
    "end": "740130"
  },
  {
    "text": "hopefully that worked I'll go ahead and I'll just make one more here so we have more than one in our API let's just say",
    "start": "740130",
    "end": "746430"
  },
  {
    "text": "UNIX is epic one way to keep time where",
    "start": "746430",
    "end": "753660"
  },
  {
    "text": "I don't know let's say 18 T because that's where UNIX was sort of born and when we'll just say 1970 Oh 100 one cool",
    "start": "753660",
    "end": "764459"
  },
  {
    "text": "so now let's run this list events query again I could see I could also just picked it from here and we get back to",
    "start": "764459",
    "end": "771060"
  },
  {
    "text": "things so if that's cool right now this isn't completely magic there's some code somewhere that's saying when I get a",
    "start": "771060",
    "end": "777300"
  },
  {
    "text": "create event you know mutation I need to store that somewhere in this case in dynamo dB so let me show you how that's done but",
    "start": "777300",
    "end": "783720"
  },
  {
    "text": "before I do that I just want to show you the power of graph QL and that the nice thing is if you only need the name back",
    "start": "783720",
    "end": "788910"
  },
  {
    "text": "for whatever your UI is doing you just ask for name if you need you know the name and the where and the when and the",
    "start": "788910",
    "end": "795060"
  },
  {
    "text": "description you can ask for of that back right so what the schema is specifying is not the data you're going",
    "start": "795060",
    "end": "800800"
  },
  {
    "text": "to get back from an API call but the maximum amount of data you could get back but ideally you'll probably want",
    "start": "800800",
    "end": "807220"
  },
  {
    "text": "some subset of that depending on each of your views needs in the app you're creating now this is nice because you're",
    "start": "807220",
    "end": "812500"
  },
  {
    "text": "no longer over fetching your data you know I've written plenty of rest api's of my life and one of the hard things",
    "start": "812500",
    "end": "818560"
  },
  {
    "text": "about the REST API is you have to decide what's the representation of my resource going to be and what data don't want to",
    "start": "818560",
    "end": "824620"
  },
  {
    "text": "include on that and oftentimes that means you're over fetching too much data and then what the client needs for a",
    "start": "824620",
    "end": "829840"
  },
  {
    "text": "particular need so let's go and see how this works in terms of Munich mutating",
    "start": "829840",
    "end": "835600"
  },
  {
    "start": "835000",
    "end": "980000"
  },
  {
    "text": "data absent guesses concept of data sources and you know what it was provisioned for me automatically here",
    "start": "835600",
    "end": "840820"
  },
  {
    "text": "and sort of this getting started demo API is a common table and an event table and if I click this it'll take me to",
    "start": "840820",
    "end": "847330"
  },
  {
    "text": "dynamo DB in the console and i can see you know i could browse that date of that table and see what that looks like it's not going to look surprising to any",
    "start": "847330",
    "end": "854410"
  },
  {
    "text": "of you it's just going to be the data there that we were storing right but what's neat is inside the schema",
    "start": "854410",
    "end": "861460"
  },
  {
    "text": "this is the next piece of graph QL knowledge I'm an import on you jargon alert graph QL have something called",
    "start": "861460",
    "end": "866830"
  },
  {
    "text": "resolvers and resolve alert resolver is just a name for the code that decides",
    "start": "866830",
    "end": "872770"
  },
  {
    "text": "how to fetch data or where to write data for a particular field in you know the",
    "start": "872770",
    "end": "877810"
  },
  {
    "text": "queries and mutations that you're interacting with and so the resolvers on the right if we just scroll down you can",
    "start": "877810",
    "end": "883270"
  },
  {
    "text": "see order the let's look at the create event mutation so we can see here this",
    "start": "883270",
    "end": "889720"
  },
  {
    "text": "is talking to the app sync event data source and the event table which we know it's dynamodb and here is what app sync",
    "start": "889720",
    "end": "896470"
  },
  {
    "text": "is doing under the hood this might look a little bit weird but really all this is doing is this is a template that is",
    "start": "896470",
    "end": "902230"
  },
  {
    "text": "translating a graph QL operation into a dynamo DB operation and it's using something called Apache velocity",
    "start": "902230",
    "end": "908290"
  },
  {
    "text": "templates which is an open source template language with then it supports logic so you can do if statements you",
    "start": "908290",
    "end": "913780"
  },
  {
    "text": "can set variables etc you can have loops in it so you can do quite a bit of logic inside the templating language in order",
    "start": "913780",
    "end": "919780"
  },
  {
    "text": "to construct your operations that are going to go out to DynamoDB for example you can also talk to elastic search this",
    "start": "919780",
    "end": "925630"
  },
  {
    "text": "way in this case we're going to create a new ID that that's gonna using a utility",
    "start": "925630",
    "end": "931389"
  },
  {
    "text": "function so you've got things like you know date time functions you know creating a UUID these kind types of",
    "start": "931389",
    "end": "936730"
  },
  {
    "text": "things and you can see that in my graph QL command or in the mutation I had a",
    "start": "936730",
    "end": "942160"
  },
  {
    "text": "name aware when in description so those all come through in this special context variable under context are arguments but",
    "start": "942160",
    "end": "948819"
  },
  {
    "text": "all this is doing is translating that create event mutation into a put item",
    "start": "948819",
    "end": "954579"
  },
  {
    "text": "operation dynamodb which is how you add a new value to dynamo and then what I want to get back is basically just the",
    "start": "954579",
    "end": "961120"
  },
  {
    "text": "result of that DynamoDB gives me for that API operation I'll just JSON defy that give that back to app sync and",
    "start": "961120",
    "end": "966579"
  },
  {
    "text": "they'll know what to do so there's similar ones for all the other operations that it's defined which we're not going to look at because we",
    "start": "966579",
    "end": "972490"
  },
  {
    "text": "don't have time and I actually want to get into wiring this all together with the react app side of things now so let's do that how we gonna do this well",
    "start": "972490",
    "end": "980649"
  },
  {
    "start": "980000",
    "end": "1080000"
  },
  {
    "text": "first let's just go make sure that our reactive actually runs I'll type in p.m.",
    "start": "980649",
    "end": "986379"
  },
  {
    "text": "start here great so we give this standard create react app splash page",
    "start": "986379",
    "end": "994060"
  },
  {
    "text": "let me also def day events and I'll just",
    "start": "994060",
    "end": "1004170"
  },
  {
    "text": "open up this directory for editing and now we'll get to the fun part okay so",
    "start": "1004170",
    "end": "1009209"
  },
  {
    "text": "pretty much we're just going to live inside app days for the rest of this demo I'm gonna pull out the stuff we don't care about which is basically all",
    "start": "1009209",
    "end": "1015480"
  },
  {
    "text": "of this default boilerplate we're just gonna make a nice simple day of saying",
    "start": "1015480",
    "end": "1021810"
  },
  {
    "text": "hello def day now what create react up gives us out of the boxes and auto reloading auto hot reloading refreshing",
    "start": "1021810",
    "end": "1028140"
  },
  {
    "text": "web app so I didn't even have to refresh my browser so I know this is working that's great so now let's actually",
    "start": "1028140",
    "end": "1033150"
  },
  {
    "text": "pulling the data from app sync instead so we're gonna use a do-over to amplify",
    "start": "1033150",
    "end": "1038159"
  },
  {
    "text": "like I said now to get started with this you can look at the QuickStart there's helpful instructions for a number of different cases we've already done this",
    "start": "1038159",
    "end": "1044579"
  },
  {
    "text": "for react a to example if I got installed for us when we use the mobile CLI and added app sync so we don't do",
    "start": "1044579",
    "end": "1052650"
  },
  {
    "text": "any of that you can say you can read all that if you want but basically what we do need to do were these three lines here so I'm just gonna dump those in the",
    "start": "1052650",
    "end": "1060270"
  },
  {
    "text": "top of our app so we're importing amplify and what",
    "start": "1060270",
    "end": "1066310"
  },
  {
    "text": "mobile hub did or the mobile CLI is it put all of our config inside this aw exports Jess file so that's what's going",
    "start": "1066310",
    "end": "1073000"
  },
  {
    "text": "on there we're just importing that so we can pass it on to amplify to say configure self so you know how to talk to all of our cloud stuff now I want to",
    "start": "1073000",
    "end": "1081400"
  },
  {
    "start": "1080000",
    "end": "1180000"
  },
  {
    "text": "talk to graph QL so if we go to the docs you can see and we want to go to API no",
    "start": "1081400",
    "end": "1088270"
  },
  {
    "text": "surprise there's a section here called working with graph QL well that's what we want so there's a nice example here",
    "start": "1088270",
    "end": "1094090"
  },
  {
    "text": "about configuring we don't really need to worry about that I'm just gonna pull this first one in so I'll replace that",
    "start": "1094090",
    "end": "1104440"
  },
  {
    "text": "import line with this one because I'm gonna use API a little bit later even though it's unused import right now we don't have to configure graph QL because",
    "start": "1104440",
    "end": "1110620"
  },
  {
    "text": "we're already using app sync and it's automatically automatically configured for us now there's a number of ways we",
    "start": "1110620",
    "end": "1116560"
  },
  {
    "text": "can interact with the graphical endpoint the simplest way just scrolling down the",
    "start": "1116560",
    "end": "1122170"
  },
  {
    "text": "docs a little bit is we can create a string like a query this is exactly like what we did in the console or we could",
    "start": "1122170",
    "end": "1128320"
  },
  {
    "text": "create a parameterised query or a mutation for example and then you can just say you know API graph QL and call",
    "start": "1128320",
    "end": "1134800"
  },
  {
    "text": "an asynchronous operation that way in this case passing the string transforming it into a graph QL",
    "start": "1134800",
    "end": "1140200"
  },
  {
    "text": "operation with this graph QL operation method in the case of a string you're just passing it the string but if you",
    "start": "1140200",
    "end": "1146440"
  },
  {
    "text": "need to template eyes that string because it has like query with arguments or a mutation with arguments that's you",
    "start": "1146440",
    "end": "1151480"
  },
  {
    "text": "know pass that in as an object as the second argument to graph queue operation and then you're off to the races",
    "start": "1151480",
    "end": "1156520"
  },
  {
    "text": "but there's something better we can do which is there's a nice react component already available that makes things even",
    "start": "1156520",
    "end": "1162460"
  },
  {
    "text": "easier and so I'm gonna I'm gonna pull that in and show you that instead let's",
    "start": "1162460",
    "end": "1168880"
  },
  {
    "text": "see I'm gonna move the import down there I'm just gonna add graph QL operation",
    "start": "1168880",
    "end": "1175600"
  },
  {
    "text": "here instead so we can get rid of that import and we're gonna use connect from A to B simplify react perfect and we'll",
    "start": "1175600",
    "end": "1182710"
  },
  {
    "text": "just dump this example render call in because it's a little bit easier to work with and now you don't watch me type all",
    "start": "1182710",
    "end": "1189610"
  },
  {
    "text": "that all right let's see how are we doing",
    "start": "1189610",
    "end": "1198140"
  },
  {
    "text": "cool that's the air I was hoping for so um I like to change this around a little",
    "start": "1198140",
    "end": "1204450"
  },
  {
    "text": "bit what's going on here is this connect component and I'll just spare you reading the documentation it expects us",
    "start": "1204450",
    "end": "1210360"
  },
  {
    "text": "to give it a query which we've done and it's going to call this function inside",
    "start": "1210360",
    "end": "1215940"
  },
  {
    "text": "of itself when day when the the react lifecycle starts up when the data loads etc and it'll give us a few flags and",
    "start": "1215940",
    "end": "1222990"
  },
  {
    "text": "what's happening here is we've got two levels of destructuring which i think is a little bit complicated so i'm going to switch it down to one and we get three",
    "start": "1222990",
    "end": "1229080"
  },
  {
    "text": "things back we get data if there's any data from a result we get a loading flag if it's in the process of loading data and we get errors and what I like to do",
    "start": "1229080",
    "end": "1236340"
  },
  {
    "text": "then is let's make this a multi-line function instead so I'm gonna say if",
    "start": "1236340",
    "end": "1241730"
  },
  {
    "text": "loading just return a div that says loading and we'll say if there's any",
    "start": "1241730",
    "end": "1249540"
  },
  {
    "text": "errors now there will always be the errors will always be present but it'll be an empty array if there's no errors",
    "start": "1249540",
    "end": "1255510"
  },
  {
    "text": "so we'll say if errors length is greater than zero return a div let's just",
    "start": "1255510",
    "end": "1262770"
  },
  {
    "text": "autocomplete that so I don't the type of closing tag that just is json stringify airs that'll just help me out in case",
    "start": "1262770",
    "end": "1269940"
  },
  {
    "text": "i've written anything wrong in my query that's not where that goes",
    "start": "1269940",
    "end": "1275420"
  },
  {
    "text": "finally I'll say if there's not any data at the list events property then I'll",
    "start": "1275420",
    "end": "1282990"
  },
  {
    "text": "just return otherwise we should be good to go and I'll just return calling this list",
    "start": "1282990",
    "end": "1289650"
  },
  {
    "text": "view with the events off of my data object so I can add data in there",
    "start": "1289650",
    "end": "1294990"
  },
  {
    "text": "because I've taken out one level of destructuring so it's loading and we've got our events so that's great well what",
    "start": "1294990",
    "end": "1300030"
  },
  {
    "text": "it's done in this little template here is this just said write all events and then with each event you know give me a list item with the event name and then",
    "start": "1300030",
    "end": "1306660"
  },
  {
    "text": "in parentheses the event ID so that was great that worked I mean but we could change this if we want the you know the description instead if I typed that",
    "start": "1306660",
    "end": "1314130"
  },
  {
    "text": "right right so we can adjust our our API",
    "start": "1314130",
    "end": "1319830"
  },
  {
    "text": "or I should say our client appropriately since we're only asking for ID and description you know I could get rid of",
    "start": "1319830",
    "end": "1325140"
  },
  {
    "text": "name there and it'll still work if I took our description then they would fail because",
    "start": "1325140",
    "end": "1330210"
  },
  {
    "text": "I hadn't fetch that data so that's querying data how can we mutate data right that's the next step how could we",
    "start": "1330210",
    "end": "1335820"
  },
  {
    "text": "you know create a new event well not so",
    "start": "1335820",
    "end": "1342269"
  },
  {
    "start": "1340000",
    "end": "1495000"
  },
  {
    "text": "hard either in fact it should come as no surprise for you the way you're going to mutate is just like how I showed you for",
    "start": "1342269",
    "end": "1348809"
  },
  {
    "text": "querying above it's really simple you're going to say API graph QL graph QL",
    "start": "1348809",
    "end": "1355019"
  },
  {
    "text": "operation with a mutation string plus you know any of the data that needs to go into that mutation so because I don't",
    "start": "1355019",
    "end": "1361830"
  },
  {
    "text": "want you don't want to watch me create a whole form in you know the next five minutes on stage I'm gonna cheat a",
    "start": "1361830",
    "end": "1367590"
  },
  {
    "text": "little bit I'm just gonna make a new class here I'll call it event form so",
    "start": "1367590",
    "end": "1376019"
  },
  {
    "text": "something other components it'll have some rendering which will just be lets",
    "start": "1376019",
    "end": "1382049"
  },
  {
    "text": "say button oh wait I want two things",
    "start": "1382049",
    "end": "1387230"
  },
  {
    "text": "should just be able to get away with one so we'll say button on click this will",
    "start": "1387739",
    "end": "1394409"
  },
  {
    "text": "be like make event a type of create",
    "start": "1394409",
    "end": "1403980"
  },
  {
    "text": "events oh and my button she'll be fine and then we'll need to just make that",
    "start": "1403980",
    "end": "1409919"
  },
  {
    "text": "create event function so I don't need to be an async function well I think it",
    "start": "1409919",
    "end": "1416639"
  },
  {
    "text": "will yeah I'll show you why it does need to be that's not going to take any arguments and it's just going to do yeah",
    "start": "1416639",
    "end": "1426619"
  },
  {
    "text": "all right so I've just pasted it in what they had here which is basically we've got a crate event when we don't need the",
    "start": "1426619",
    "end": "1433169"
  },
  {
    "text": "import let's also just format this a little bit cuz should look a little",
    "start": "1433169",
    "end": "1438989"
  },
  {
    "text": "nicer so we have a crate event string",
    "start": "1438989",
    "end": "1444320"
  },
  {
    "text": "which is our mutation string it's just like what we have in the console before except we're parameterizing it so we're",
    "start": "1444320",
    "end": "1450299"
  },
  {
    "text": "saying this create event string is going to take a name variable aware when in a description those are all strings and",
    "start": "1450299",
    "end": "1456119"
  },
  {
    "text": "then it will take those from the mutation that I've declared here it will pass it down into graph QL with",
    "start": "1456119",
    "end": "1462300"
  },
  {
    "text": "those same names right we can change this name to be like a or B or C and then we would just change this variable name down here so you're just giving the",
    "start": "1462300",
    "end": "1468840"
  },
  {
    "text": "mapping of what you want your mutation string to take as its interface and what it's going to pass down to the graph QL",
    "start": "1468840",
    "end": "1474060"
  },
  {
    "text": "mutation operation instead and you know put in this case we're gonna ask for all the data back now instead of making the",
    "start": "1474060",
    "end": "1480840"
  },
  {
    "text": "form with all the fields here where the bull just hard-code one but obviously we could pull this from our state and in a",
    "start": "1480840",
    "end": "1486630"
  },
  {
    "text": "react form if we had one and then we'll we'll await and there since this is an asynchronous operation the mutation and",
    "start": "1486630",
    "end": "1492390"
  },
  {
    "text": "then we'll just log the data from that new event so that should work but we're gonna have to add this to our component",
    "start": "1492390",
    "end": "1498750"
  },
  {
    "start": "1495000",
    "end": "1610000"
  },
  {
    "text": "if we want to see it so let's just add what do they call it event form yeah",
    "start": "1498750",
    "end": "1504090"
  },
  {
    "text": "let's just add event form here as another component should I forget to add",
    "start": "1504090",
    "end": "1517290"
  },
  {
    "text": "a sink in the right spot maybe I did I've put in the wrong spot haven't I",
    "start": "1517290",
    "end": "1523010"
  },
  {
    "text": "what I call down here make event thank you let's call this make event this is a",
    "start": "1526160",
    "end": "1536160"
  },
  {
    "text": "word why is that getting in that did I have it in the wrong spot make event is an async function I need to say that",
    "start": "1536160",
    "end": "1543390"
  },
  {
    "text": "there's no arguments that's my fault there we go cool so let's pop open the",
    "start": "1543390",
    "end": "1549480"
  },
  {
    "text": "console and if I press this button hopefully there's our result we got back",
    "start": "1549480",
    "end": "1555240"
  },
  {
    "text": "some data so that probably worked now you'll notice that I didn't refresh here and that's because we haven't wired up a",
    "start": "1555240",
    "end": "1560850"
  },
  {
    "text": "subscription yet but if I were just refresh the page we'll see that the the",
    "start": "1560850",
    "end": "1566160"
  },
  {
    "text": "data came through and why is it only showing that and not the the so I take",
    "start": "1566160",
    "end": "1573300"
  },
  {
    "text": "out the name from what I was rendering event ID eventname oh yeah I did take",
    "start": "1573300",
    "end": "1581010"
  },
  {
    "text": "out name thank you if that was to leave me I meant to say that I didn't care about ID anymore but I want a name and description that's why that wasn't",
    "start": "1581010",
    "end": "1586560"
  },
  {
    "text": "rendering good thank you pair programming at the audience you're awesome so that's fat so that's how you can do a",
    "start": "1586560",
    "end": "1592950"
  },
  {
    "text": "mutation as well it's very simple so I've got two and a half minutes left I don't think it's enough time to do",
    "start": "1592950",
    "end": "1599250"
  },
  {
    "text": "subscriptions to show you how we could have this page live updating as people were doing you know creating events from their own browsers or from the absent",
    "start": "1599250",
    "end": "1605850"
  },
  {
    "text": "consul or any other band but what I'm gonna I'm gonna press my luck I'm gonna try and add authentication into this",
    "start": "1605850",
    "end": "1611130"
  },
  {
    "start": "1610000",
    "end": "1680000"
  },
  {
    "text": "simple react up in two minutes to go because that's how crazy I am so AWS",
    "start": "1611130",
    "end": "1616620"
  },
  {
    "text": "mobile I'm gonna say user sign-in enable and I'm gonna give it some options here",
    "start": "1616620",
    "end": "1622170"
  },
  {
    "text": "we don't need to see so much of my server console okay so I'm gonna go to advanced settings and I'm gonna say I",
    "start": "1622170",
    "end": "1627930"
  },
  {
    "text": "want to use kognito user pools which will let me keep track of user IDs myself rather than using a federated",
    "start": "1627930",
    "end": "1633120"
  },
  {
    "text": "sign-in I'll say I want user names minimum password 8 sounds good I'm gonna turn all these requirements off don't do",
    "start": "1633120",
    "end": "1638910"
  },
  {
    "text": "this in production but this way I don't have to remember a complicated password and now I'll say device mobile push then",
    "start": "1638910",
    "end": "1645510"
  },
  {
    "text": "I'll tell you what's happening here so now because I just said I want sign in for my app it's going to go in",
    "start": "1645510",
    "end": "1651510"
  },
  {
    "text": "provision for me a Cognito instance a user pool and a an identity pool and",
    "start": "1651510",
    "end": "1658890"
  },
  {
    "text": "this will let me it's also going to configure amplify for me by pulling in those other cloud resource IDs this one",
    "start": "1658890",
    "end": "1665820"
  },
  {
    "text": "make it very easy for me to add authentication to this app with one line of code I have to import another high",
    "start": "1665820",
    "end": "1671850"
  },
  {
    "text": "order component from react from the amplify react library but I'll only have to write one line of code so let me show",
    "start": "1671850",
    "end": "1678300"
  },
  {
    "text": "you that while we're waiting for this to just you know refresh itself in the cloud so instead of API if we close this",
    "start": "1678300",
    "end": "1685050"
  },
  {
    "start": "1680000",
    "end": "1829000"
  },
  {
    "text": "down let's look at let's just go back there's authentication so right I want",
    "start": "1685050",
    "end": "1690240"
  },
  {
    "text": "to add off indication how can I do that so we can read a whole bunch here about how kognito works and how to use it with amplify but the part that I'm most",
    "start": "1690240",
    "end": "1697500"
  },
  {
    "text": "interested in is just showing you and this is following the same kind of stuff that we just did that there's one really",
    "start": "1697500",
    "end": "1704070"
  },
  {
    "text": "nice option which is using the with Authenticator higher-order component so",
    "start": "1704070",
    "end": "1710520"
  },
  {
    "text": "if I add import with Authenticator",
    "start": "1710520",
    "end": "1714980"
  },
  {
    "text": "that's gonna bother some people because they're not alpha ties that's for today",
    "start": "1717830",
    "end": "1723620"
  },
  {
    "text": "what I can do is I can I can wrap my app component with this other component and",
    "start": "1723620",
    "end": "1733890"
  },
  {
    "text": "how's it finished it has and now it's asking me it's to create sign up or sign",
    "start": "1733890",
    "end": "1740250"
  },
  {
    "text": "in so let me sign up I'll say Gabe give it a password I'll give my Amazon and I",
    "start": "1740250",
    "end": "1748920"
  },
  {
    "text": "don't want you all to call me so let's just pretend this is my phone number and what it's going to do is this",
    "start": "1748920",
    "end": "1755640"
  },
  {
    "text": "actually going to send me a one-time code to verify that I own this telephone",
    "start": "1755640",
    "end": "1763620"
  },
  {
    "text": "and perform at what you don't like that do you like that oh it doesn't like the - I should just read the message",
    "start": "1763620",
    "end": "1769650"
  },
  {
    "text": "shouldn't I look at that so you even get you know validation messages I'm in and then go look for a unique code in my",
    "start": "1769650",
    "end": "1775980"
  },
  {
    "text": "inbox yes I've I'm at 30 minutes right now bear with me for another like 60 seconds",
    "start": "1775980",
    "end": "1782310"
  },
  {
    "text": "and we can see that this actually worked oh four four six seven seven okay so now",
    "start": "1782310",
    "end": "1787740"
  },
  {
    "text": "I've confirmed that I own that email address so if I ever forget my password I can reset it I know that I've signed",
    "start": "1787740",
    "end": "1793650"
  },
  {
    "text": "in now I've got access to be upright so I added signup and sign in to my app",
    "start": "1793650",
    "end": "1799410"
  },
  {
    "text": "with one line of code",
    "start": "1799410",
    "end": "1802190"
  },
  {
    "text": "thank you let's go back to the slides I'm out of time you know the drill your",
    "start": "1804530",
    "end": "1810240"
  },
  {
    "text": "feedback is really important and I don't want to gloss over this it's true I get the most out of my job when I hear what",
    "start": "1810240",
    "end": "1815970"
  },
  {
    "text": "you thought of the session today so please don't be shy about letting me know either in person or also giving",
    "start": "1815970",
    "end": "1821370"
  },
  {
    "text": "your feedback by filling out their survey it we'd love to know what you think thank you so much build on keep in",
    "start": "1821370",
    "end": "1826950"
  },
  {
    "text": "touch on Twitter if you want to [Applause]",
    "start": "1826950",
    "end": "1831699"
  }
]